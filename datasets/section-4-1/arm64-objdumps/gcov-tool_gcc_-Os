
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-tool_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402590 <.init>:
  402590:	stp	x29, x30, [sp, #-16]!
  402594:	mov	x29, sp
  402598:	bl	4034ec <nftw@plt+0x7fc>
  40259c:	ldp	x29, x30, [sp], #16
  4025a0:	ret

Disassembly of section .plt:

00000000004025b0 <memcpy@plt-0x20>:
  4025b0:	stp	x16, x30, [sp, #-16]!
  4025b4:	adrp	x16, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  4025b8:	ldr	x17, [x16, #4088]
  4025bc:	add	x16, x16, #0xff8
  4025c0:	br	x17
  4025c4:	nop
  4025c8:	nop
  4025cc:	nop

00000000004025d0 <memcpy@plt>:
  4025d0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4025d4:	ldr	x17, [x16]
  4025d8:	add	x16, x16, #0x0
  4025dc:	br	x17

00000000004025e0 <memmove@plt>:
  4025e0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #8]
  4025e8:	add	x16, x16, #0x8
  4025ec:	br	x17

00000000004025f0 <ngettext@plt>:
  4025f0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #16]
  4025f8:	add	x16, x16, #0x10
  4025fc:	br	x17

0000000000402600 <getcwd@plt>:
  402600:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402604:	ldr	x17, [x16, #24]
  402608:	add	x16, x16, #0x18
  40260c:	br	x17

0000000000402610 <fwrite_unlocked@plt>:
  402610:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402614:	ldr	x17, [x16, #32]
  402618:	add	x16, x16, #0x20
  40261c:	br	x17

0000000000402620 <strtoul@plt>:
  402620:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402624:	ldr	x17, [x16, #40]
  402628:	add	x16, x16, #0x28
  40262c:	br	x17

0000000000402630 <strlen@plt>:
  402630:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402634:	ldr	x17, [x16, #48]
  402638:	add	x16, x16, #0x30
  40263c:	br	x17

0000000000402640 <fputs@plt>:
  402640:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402644:	ldr	x17, [x16, #56]
  402648:	add	x16, x16, #0x38
  40264c:	br	x17

0000000000402650 <mbstowcs@plt>:
  402650:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402654:	ldr	x17, [x16, #64]
  402658:	add	x16, x16, #0x40
  40265c:	br	x17

0000000000402660 <exit@plt>:
  402660:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402664:	ldr	x17, [x16, #72]
  402668:	add	x16, x16, #0x48
  40266c:	br	x17

0000000000402670 <sbrk@plt>:
  402670:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402674:	ldr	x17, [x16, #80]
  402678:	add	x16, x16, #0x50
  40267c:	br	x17

0000000000402680 <strnlen@plt>:
  402680:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402684:	ldr	x17, [x16, #88]
  402688:	add	x16, x16, #0x58
  40268c:	br	x17

0000000000402690 <iconv_close@plt>:
  402690:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402694:	ldr	x17, [x16, #96]
  402698:	add	x16, x16, #0x60
  40269c:	br	x17

00000000004026a0 <setbuf@plt>:
  4026a0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #104]
  4026a8:	add	x16, x16, #0x68
  4026ac:	br	x17

00000000004026b0 <remove@plt>:
  4026b0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #112]
  4026b8:	add	x16, x16, #0x70
  4026bc:	br	x17

00000000004026c0 <readlink@plt>:
  4026c0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #120]
  4026c8:	add	x16, x16, #0x78
  4026cc:	br	x17

00000000004026d0 <ftell@plt>:
  4026d0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #128]
  4026d8:	add	x16, x16, #0x80
  4026dc:	br	x17

00000000004026e0 <sprintf@plt>:
  4026e0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #136]
  4026e8:	add	x16, x16, #0x88
  4026ec:	br	x17

00000000004026f0 <opendir@plt>:
  4026f0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #144]
  4026f8:	add	x16, x16, #0x90
  4026fc:	br	x17

0000000000402700 <__cxa_atexit@plt>:
  402700:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402704:	ldr	x17, [x16, #152]
  402708:	add	x16, x16, #0x98
  40270c:	br	x17

0000000000402710 <fputc@plt>:
  402710:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402714:	ldr	x17, [x16, #160]
  402718:	add	x16, x16, #0xa0
  40271c:	br	x17

0000000000402720 <qsort@plt>:
  402720:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402724:	ldr	x17, [x16, #168]
  402728:	add	x16, x16, #0xa8
  40272c:	br	x17

0000000000402730 <snprintf@plt>:
  402730:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402734:	ldr	x17, [x16, #176]
  402738:	add	x16, x16, #0xb0
  40273c:	br	x17

0000000000402740 <putc_unlocked@plt>:
  402740:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402744:	ldr	x17, [x16, #184]
  402748:	add	x16, x16, #0xb8
  40274c:	br	x17

0000000000402750 <localtime@plt>:
  402750:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402754:	ldr	x17, [x16, #192]
  402758:	add	x16, x16, #0xc0
  40275c:	br	x17

0000000000402760 <fclose@plt>:
  402760:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402764:	ldr	x17, [x16, #200]
  402768:	add	x16, x16, #0xc8
  40276c:	br	x17

0000000000402770 <atoi@plt>:
  402770:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402774:	ldr	x17, [x16, #208]
  402778:	add	x16, x16, #0xd0
  40277c:	br	x17

0000000000402780 <getpid@plt>:
  402780:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402784:	ldr	x17, [x16, #216]
  402788:	add	x16, x16, #0xd8
  40278c:	br	x17

0000000000402790 <nl_langinfo@plt>:
  402790:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402794:	ldr	x17, [x16, #224]
  402798:	add	x16, x16, #0xe0
  40279c:	br	x17

00000000004027a0 <fopen@plt>:
  4027a0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #232]
  4027a8:	add	x16, x16, #0xe8
  4027ac:	br	x17

00000000004027b0 <time@plt>:
  4027b0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #240]
  4027b8:	add	x16, x16, #0xf0
  4027bc:	br	x17

00000000004027c0 <malloc@plt>:
  4027c0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #248]
  4027c8:	add	x16, x16, #0xf8
  4027cc:	br	x17

00000000004027d0 <open@plt>:
  4027d0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #256]
  4027d8:	add	x16, x16, #0x100
  4027dc:	br	x17

00000000004027e0 <wcswidth@plt>:
  4027e0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #264]
  4027e8:	add	x16, x16, #0x108
  4027ec:	br	x17

00000000004027f0 <strncmp@plt>:
  4027f0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #272]
  4027f8:	add	x16, x16, #0x110
  4027fc:	br	x17

0000000000402800 <bindtextdomain@plt>:
  402800:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402804:	ldr	x17, [x16, #280]
  402808:	add	x16, x16, #0x118
  40280c:	br	x17

0000000000402810 <fileno_unlocked@plt>:
  402810:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402814:	ldr	x17, [x16, #288]
  402818:	add	x16, x16, #0x120
  40281c:	br	x17

0000000000402820 <__libc_start_main@plt>:
  402820:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402824:	ldr	x17, [x16, #296]
  402828:	add	x16, x16, #0x128
  40282c:	br	x17

0000000000402830 <strcat@plt>:
  402830:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402834:	ldr	x17, [x16, #304]
  402838:	add	x16, x16, #0x130
  40283c:	br	x17

0000000000402840 <memset@plt>:
  402840:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402844:	ldr	x17, [x16, #312]
  402848:	add	x16, x16, #0x138
  40284c:	br	x17

0000000000402850 <fdopen@plt>:
  402850:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402854:	ldr	x17, [x16, #320]
  402858:	add	x16, x16, #0x140
  40285c:	br	x17

0000000000402860 <atof@plt>:
  402860:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402864:	ldr	x17, [x16, #328]
  402868:	add	x16, x16, #0x148
  40286c:	br	x17

0000000000402870 <calloc@plt>:
  402870:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402874:	ldr	x17, [x16, #336]
  402878:	add	x16, x16, #0x150
  40287c:	br	x17

0000000000402880 <bsearch@plt>:
  402880:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402884:	ldr	x17, [x16, #344]
  402888:	add	x16, x16, #0x158
  40288c:	br	x17

0000000000402890 <strcasecmp@plt>:
  402890:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402894:	ldr	x17, [x16, #352]
  402898:	add	x16, x16, #0x160
  40289c:	br	x17

00000000004028a0 <gmtime@plt>:
  4028a0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #360]
  4028a8:	add	x16, x16, #0x168
  4028ac:	br	x17

00000000004028b0 <readdir@plt>:
  4028b0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #368]
  4028b8:	add	x16, x16, #0x170
  4028bc:	br	x17

00000000004028c0 <realloc@plt>:
  4028c0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #376]
  4028c8:	add	x16, x16, #0x178
  4028cc:	br	x17

00000000004028d0 <getpagesize@plt>:
  4028d0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #384]
  4028d8:	add	x16, x16, #0x180
  4028dc:	br	x17

00000000004028e0 <strdup@plt>:
  4028e0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #392]
  4028e8:	add	x16, x16, #0x188
  4028ec:	br	x17

00000000004028f0 <closedir@plt>:
  4028f0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #400]
  4028f8:	add	x16, x16, #0x190
  4028fc:	br	x17

0000000000402900 <getc_unlocked@plt>:
  402900:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402904:	ldr	x17, [x16, #408]
  402908:	add	x16, x16, #0x198
  40290c:	br	x17

0000000000402910 <strerror@plt>:
  402910:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402914:	ldr	x17, [x16, #416]
  402918:	add	x16, x16, #0x1a0
  40291c:	br	x17

0000000000402920 <close@plt>:
  402920:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402924:	ldr	x17, [x16, #424]
  402928:	add	x16, x16, #0x1a8
  40292c:	br	x17

0000000000402930 <strrchr@plt>:
  402930:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402934:	ldr	x17, [x16, #432]
  402938:	add	x16, x16, #0x1b0
  40293c:	br	x17

0000000000402940 <__gmon_start__@plt>:
  402940:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402944:	ldr	x17, [x16, #440]
  402948:	add	x16, x16, #0x1b8
  40294c:	br	x17

0000000000402950 <write@plt>:
  402950:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402954:	ldr	x17, [x16, #448]
  402958:	add	x16, x16, #0x1c0
  40295c:	br	x17

0000000000402960 <fseek@plt>:
  402960:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402964:	ldr	x17, [x16, #456]
  402968:	add	x16, x16, #0x1c8
  40296c:	br	x17

0000000000402970 <abort@plt>:
  402970:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402974:	ldr	x17, [x16, #464]
  402978:	add	x16, x16, #0x1d0
  40297c:	br	x17

0000000000402980 <access@plt>:
  402980:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402984:	ldr	x17, [x16, #472]
  402988:	add	x16, x16, #0x1d8
  40298c:	br	x17

0000000000402990 <feof@plt>:
  402990:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402994:	ldr	x17, [x16, #480]
  402998:	add	x16, x16, #0x1e0
  40299c:	br	x17

00000000004029a0 <puts@plt>:
  4029a0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #488]
  4029a8:	add	x16, x16, #0x1e8
  4029ac:	br	x17

00000000004029b0 <fread_unlocked@plt>:
  4029b0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #496]
  4029b8:	add	x16, x16, #0x1f0
  4029bc:	br	x17

00000000004029c0 <memcmp@plt>:
  4029c0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #504]
  4029c8:	add	x16, x16, #0x1f8
  4029cc:	br	x17

00000000004029d0 <pthread_once@plt>:
  4029d0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #512]
  4029d8:	add	x16, x16, #0x200
  4029dc:	br	x17

00000000004029e0 <textdomain@plt>:
  4029e0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #520]
  4029e8:	add	x16, x16, #0x208
  4029ec:	br	x17

00000000004029f0 <getopt_long@plt>:
  4029f0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #528]
  4029f8:	add	x16, x16, #0x210
  4029fc:	br	x17

0000000000402a00 <strcmp@plt>:
  402a00:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #536]
  402a08:	add	x16, x16, #0x218
  402a0c:	br	x17

0000000000402a10 <iconv@plt>:
  402a10:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #544]
  402a18:	add	x16, x16, #0x220
  402a1c:	br	x17

0000000000402a20 <mmap@plt>:
  402a20:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #552]
  402a28:	add	x16, x16, #0x228
  402a2c:	br	x17

0000000000402a30 <strtol@plt>:
  402a30:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #560]
  402a38:	add	x16, x16, #0x230
  402a3c:	br	x17

0000000000402a40 <fread@plt>:
  402a40:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #568]
  402a48:	add	x16, x16, #0x238
  402a4c:	br	x17

0000000000402a50 <dl_iterate_phdr@plt>:
  402a50:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #576]
  402a58:	add	x16, x16, #0x240
  402a5c:	br	x17

0000000000402a60 <chdir@plt>:
  402a60:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #584]
  402a68:	add	x16, x16, #0x248
  402a6c:	br	x17

0000000000402a70 <dgettext@plt>:
  402a70:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #592]
  402a78:	add	x16, x16, #0x250
  402a7c:	br	x17

0000000000402a80 <free@plt>:
  402a80:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #600]
  402a88:	add	x16, x16, #0x258
  402a8c:	br	x17

0000000000402a90 <ungetc@plt>:
  402a90:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #608]
  402a98:	add	x16, x16, #0x260
  402a9c:	br	x17

0000000000402aa0 <freopen@plt>:
  402aa0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #616]
  402aa8:	add	x16, x16, #0x268
  402aac:	br	x17

0000000000402ab0 <strchr@plt>:
  402ab0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #624]
  402ab8:	add	x16, x16, #0x270
  402abc:	br	x17

0000000000402ac0 <fwrite@plt>:
  402ac0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #632]
  402ac8:	add	x16, x16, #0x278
  402acc:	br	x17

0000000000402ad0 <fcntl@plt>:
  402ad0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #640]
  402ad8:	add	x16, x16, #0x280
  402adc:	br	x17

0000000000402ae0 <munmap@plt>:
  402ae0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #648]
  402ae8:	add	x16, x16, #0x288
  402aec:	br	x17

0000000000402af0 <fflush@plt>:
  402af0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #656]
  402af8:	add	x16, x16, #0x290
  402afc:	br	x17

0000000000402b00 <strcpy@plt>:
  402b00:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #664]
  402b08:	add	x16, x16, #0x298
  402b0c:	br	x17

0000000000402b10 <iconv_open@plt>:
  402b10:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #672]
  402b18:	add	x16, x16, #0x2a0
  402b1c:	br	x17

0000000000402b20 <vsprintf@plt>:
  402b20:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #680]
  402b28:	add	x16, x16, #0x2a8
  402b2c:	br	x17

0000000000402b30 <__lxstat@plt>:
  402b30:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #688]
  402b38:	add	x16, x16, #0x2b0
  402b3c:	br	x17

0000000000402b40 <read@plt>:
  402b40:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #696]
  402b48:	add	x16, x16, #0x2b8
  402b4c:	br	x17

0000000000402b50 <memchr@plt>:
  402b50:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #704]
  402b58:	add	x16, x16, #0x2c0
  402b5c:	br	x17

0000000000402b60 <isatty@plt>:
  402b60:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #712]
  402b68:	add	x16, x16, #0x2c8
  402b6c:	br	x17

0000000000402b70 <asctime@plt>:
  402b70:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #720]
  402b78:	add	x16, x16, #0x2d0
  402b7c:	br	x17

0000000000402b80 <fputc_unlocked@plt>:
  402b80:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #728]
  402b88:	add	x16, x16, #0x2d8
  402b8c:	br	x17

0000000000402b90 <__fxstat@plt>:
  402b90:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #736]
  402b98:	add	x16, x16, #0x2e0
  402b9c:	br	x17

0000000000402ba0 <strstr@plt>:
  402ba0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #744]
  402ba8:	add	x16, x16, #0x2e8
  402bac:	br	x17

0000000000402bb0 <realpath@plt>:
  402bb0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #752]
  402bb8:	add	x16, x16, #0x2f0
  402bbc:	br	x17

0000000000402bc0 <__isoc99_sscanf@plt>:
  402bc0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #760]
  402bc8:	add	x16, x16, #0x2f8
  402bcc:	br	x17

0000000000402bd0 <fputs_unlocked@plt>:
  402bd0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #768]
  402bd8:	add	x16, x16, #0x300
  402bdc:	br	x17

0000000000402be0 <__fsetlocking@plt>:
  402be0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #776]
  402be8:	add	x16, x16, #0x308
  402bec:	br	x17

0000000000402bf0 <strcspn@plt>:
  402bf0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #784]
  402bf8:	add	x16, x16, #0x310
  402bfc:	br	x17

0000000000402c00 <vfprintf@plt>:
  402c00:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #792]
  402c08:	add	x16, x16, #0x318
  402c0c:	br	x17

0000000000402c10 <printf@plt>:
  402c10:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #800]
  402c18:	add	x16, x16, #0x320
  402c1c:	br	x17

0000000000402c20 <__errno_location@plt>:
  402c20:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #808]
  402c28:	add	x16, x16, #0x328
  402c2c:	br	x17

0000000000402c30 <getenv@plt>:
  402c30:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #816]
  402c38:	add	x16, x16, #0x330
  402c3c:	br	x17

0000000000402c40 <__xstat@plt>:
  402c40:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #824]
  402c48:	add	x16, x16, #0x338
  402c4c:	br	x17

0000000000402c50 <pthread_mutex_lock@plt>:
  402c50:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #832]
  402c58:	add	x16, x16, #0x340
  402c5c:	br	x17

0000000000402c60 <ftw@plt>:
  402c60:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #840]
  402c68:	add	x16, x16, #0x348
  402c6c:	br	x17

0000000000402c70 <syscall@plt>:
  402c70:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #848]
  402c78:	add	x16, x16, #0x350
  402c7c:	br	x17

0000000000402c80 <pthread_mutex_unlock@plt>:
  402c80:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #856]
  402c88:	add	x16, x16, #0x358
  402c8c:	br	x17

0000000000402c90 <gettext@plt>:
  402c90:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #864]
  402c98:	add	x16, x16, #0x360
  402c9c:	br	x17

0000000000402ca0 <mkdir@plt>:
  402ca0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #872]
  402ca8:	add	x16, x16, #0x368
  402cac:	br	x17

0000000000402cb0 <fprintf@plt>:
  402cb0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #880]
  402cb8:	add	x16, x16, #0x370
  402cbc:	br	x17

0000000000402cc0 <ioctl@plt>:
  402cc0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #888]
  402cc8:	add	x16, x16, #0x378
  402ccc:	br	x17

0000000000402cd0 <setlocale@plt>:
  402cd0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #896]
  402cd8:	add	x16, x16, #0x380
  402cdc:	br	x17

0000000000402ce0 <ferror@plt>:
  402ce0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #904]
  402ce8:	add	x16, x16, #0x388
  402cec:	br	x17

0000000000402cf0 <nftw@plt>:
  402cf0:	adrp	x16, 47d000 <memcpy@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #912]
  402cf8:	add	x16, x16, #0x390
  402cfc:	br	x17

Disassembly of section .text:

0000000000402d00 <_obstack_begin@@Base-0x3a168>:
  402d00:	stp	x29, x30, [sp, #-16]!
  402d04:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402d08:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402d0c:	mov	x29, sp
  402d10:	add	x2, x2, #0x498
  402d14:	add	x0, x0, #0x4a2
  402d18:	mov	w1, #0xc5                  	// #197
  402d1c:	bl	402d60 <nftw@plt+0x70>
  402d20:	stp	x29, x30, [sp, #-16]!
  402d24:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402d28:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402d2c:	mov	x29, sp
  402d30:	add	x2, x2, #0x4c5
  402d34:	add	x0, x0, #0x4a2
  402d38:	mov	w1, #0xbc                  	// #188
  402d3c:	bl	402d60 <nftw@plt+0x70>
  402d40:	stp	x29, x30, [sp, #-16]!
  402d44:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402d48:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402d4c:	mov	x29, sp
  402d50:	add	x2, x2, #0x4ce
  402d54:	add	x0, x0, #0x4a2
  402d58:	mov	w1, #0xb3                  	// #179
  402d5c:	bl	402d60 <nftw@plt+0x70>
  402d60:	mov	w8, w1
  402d64:	mov	x7, x2
  402d68:	stp	x29, x30, [sp, #-16]!
  402d6c:	mov	x29, sp
  402d70:	bl	407008 <nftw@plt+0x4318>
  402d74:	mov	x2, x0
  402d78:	mov	w3, w8
  402d7c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  402d80:	mov	x1, x7
  402d84:	add	x0, x0, #0xc7
  402d88:	bl	408288 <nftw@plt+0x5598>
  402d8c:	stp	x29, x30, [sp, #-16]!
  402d90:	mov	x0, #0x8                   	// #8
  402d94:	mov	x29, sp
  402d98:	bl	43e290 <_obstack_memory_used@@Base+0x1238>
  402d9c:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  402da0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  402da4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  402da8:	ldr	x3, [x3, #4000]
  402dac:	ldr	x2, [x2, #4032]
  402db0:	add	x3, x3, #0x10
  402db4:	ldr	x1, [x1, #3928]
  402db8:	str	x3, [x0]
  402dbc:	bl	43f0a8 <_obstack_memory_used@@Base+0x2050>
  402dc0:	stp	x29, x30, [sp, #-160]!
  402dc4:	mov	x29, sp
  402dc8:	stp	x19, x20, [sp, #16]
  402dcc:	ldr	x19, [x1]
  402dd0:	stp	x21, x22, [sp, #32]
  402dd4:	stp	x23, x24, [sp, #48]
  402dd8:	stp	x25, x26, [sp, #64]
  402ddc:	stp	x27, x28, [sp, #80]
  402de0:	str	d8, [sp, #96]
  402de4:	str	x1, [sp, #128]
  402de8:	str	w0, [sp, #140]
  402dec:	mov	x0, x19
  402df0:	bl	402630 <strlen@plt>
  402df4:	add	x0, x19, x0
  402df8:	cmp	x19, x0
  402dfc:	b.eq	402e14 <nftw@plt+0x124>  // b.none
  402e00:	ldurb	w1, [x0, #-1]
  402e04:	cmp	w1, #0x2f
  402e08:	b.eq	402e14 <nftw@plt+0x124>  // b.none
  402e0c:	sub	x0, x0, #0x1
  402e10:	b	402df8 <nftw@plt+0x108>
  402e14:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  402e18:	adrp	x23, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402e1c:	add	x23, x23, #0x238
  402e20:	str	x0, [x20, #1928]
  402e24:	bl	43d0a4 <_obstack_memory_used@@Base+0x4c>
  402e28:	bl	43bdc8 <nftw@plt+0x390d8>
  402e2c:	bl	40f914 <nftw@plt+0xcc24>
  402e30:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  402e34:	mov	w1, #0x0                   	// #0
  402e38:	ldr	x0, [x0, #944]
  402e3c:	bl	406b34 <nftw@plt+0x3e44>
  402e40:	add	x1, sp, #0x80
  402e44:	add	x0, sp, #0x8c
  402e48:	bl	43ba38 <nftw@plt+0x38d48>
  402e4c:	ldr	w0, [sp, #140]
  402e50:	mov	x3, x23
  402e54:	ldr	x1, [sp, #128]
  402e58:	mov	x4, #0x0                   	// #0
  402e5c:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0xffa8>
  402e60:	add	x2, x2, #0xff8
  402e64:	bl	4029f0 <getopt_long@plt>
  402e68:	cmn	w0, #0x1
  402e6c:	b.eq	402f00 <nftw@plt+0x210>  // b.none
  402e70:	cmp	w0, #0x68
  402e74:	b.eq	402e88 <nftw@plt+0x198>  // b.none
  402e78:	cmp	w0, #0x76
  402e7c:	b.eq	402e90 <nftw@plt+0x1a0>  // b.none
  402e80:	mov	w0, #0x1                   	// #1
  402e84:	b	402e8c <nftw@plt+0x19c>
  402e88:	mov	w0, #0x0                   	// #0
  402e8c:	bl	4037ac <nftw@plt+0xabc>
  402e90:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  402e94:	adrp	x4, 450000 <_obstack_memory_used@@Base+0x12fa8>
  402e98:	ldr	x2, [x20, #1928]
  402e9c:	add	x4, x4, #0x327
  402ea0:	ldr	x0, [x19, #1440]
  402ea4:	adrp	x3, 450000 <_obstack_memory_used@@Base+0x12fa8>
  402ea8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  402eac:	add	x3, x3, #0x320
  402eb0:	add	x1, x1, #0xffc
  402eb4:	bl	40717c <nftw@plt+0x448c>
  402eb8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402ebc:	add	x0, x0, #0x5
  402ec0:	ldr	x20, [x19, #1440]
  402ec4:	bl	402c90 <gettext@plt>
  402ec8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402ecc:	mov	x2, x0
  402ed0:	add	x1, x1, #0x9
  402ed4:	mov	x0, x20
  402ed8:	bl	40717c <nftw@plt+0x448c>
  402edc:	ldr	x19, [x19, #1440]
  402ee0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402ee4:	add	x0, x0, #0x3b
  402ee8:	bl	402c90 <gettext@plt>
  402eec:	mov	x1, x0
  402ef0:	mov	x0, x19
  402ef4:	bl	40717c <nftw@plt+0x448c>
  402ef8:	mov	w0, #0x0                   	// #0
  402efc:	bl	402660 <exit@plt>
  402f00:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  402f04:	ldr	w20, [sp, #140]
  402f08:	ldr	w19, [x21, #1432]
  402f0c:	cmp	w20, w19
  402f10:	b.le	402e80 <nftw@plt+0x190>
  402f14:	ldr	x0, [sp, #128]
  402f18:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402f1c:	sub	w20, w20, w19
  402f20:	add	x1, x1, #0x4de
  402f24:	ldr	x24, [x0, w19, sxtw #3]
  402f28:	add	x22, x0, w19, sxtw #3
  402f2c:	mov	x0, x24
  402f30:	bl	402a00 <strcmp@plt>
  402f34:	cbnz	w0, 40308c <nftw@plt+0x39c>
  402f38:	adrp	x19, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402f3c:	adrp	x25, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402f40:	add	x19, x19, #0xd4
  402f44:	add	x25, x25, #0xda
  402f48:	mov	w0, #0x1                   	// #1
  402f4c:	str	wzr, [x21, #1432]
  402f50:	mov	x24, #0x0                   	// #0
  402f54:	stp	w0, w0, [sp, #152]
  402f58:	add	x3, x23, #0x60
  402f5c:	mov	x2, x19
  402f60:	mov	x1, x22
  402f64:	mov	w0, w20
  402f68:	mov	x4, #0x0                   	// #0
  402f6c:	bl	4029f0 <getopt_long@plt>
  402f70:	cmn	w0, #0x1
  402f74:	b.eq	402fdc <nftw@plt+0x2ec>  // b.none
  402f78:	cmp	w0, #0x76
  402f7c:	b.eq	402f9c <nftw@plt+0x2ac>  // b.none
  402f80:	cmp	w0, #0x77
  402f84:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  402f88:	b.eq	402fa4 <nftw@plt+0x2b4>  // b.none
  402f8c:	cmp	w0, #0x6f
  402f90:	b.ne	402ff8 <nftw@plt+0x308>  // b.any
  402f94:	ldr	x24, [x4, #1424]
  402f98:	b	402f58 <nftw@plt+0x268>
  402f9c:	bl	4044e4 <nftw@plt+0x17f4>
  402fa0:	b	402f58 <nftw@plt+0x268>
  402fa4:	ldr	x0, [x4, #1424]
  402fa8:	add	x3, sp, #0x9c
  402fac:	add	x2, sp, #0x98
  402fb0:	mov	x1, x25
  402fb4:	bl	402bc0 <__isoc99_sscanf@plt>
  402fb8:	ldr	w0, [sp, #152]
  402fbc:	tbnz	w0, #31, 402fc8 <nftw@plt+0x2d8>
  402fc0:	ldr	w0, [sp, #156]
  402fc4:	tbz	w0, #31, 402f58 <nftw@plt+0x268>
  402fc8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  402fcc:	add	x1, x1, #0xe0
  402fd0:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  402fd4:	ldr	w0, [x0, #2344]
  402fd8:	bl	408b3c <nftw@plt+0x5e4c>
  402fdc:	cbnz	x24, 402fe8 <nftw@plt+0x2f8>
  402fe0:	adrp	x24, 44d000 <_obstack_memory_used@@Base+0xffa8>
  402fe4:	add	x24, x24, #0xfd9
  402fe8:	ldr	w0, [x21, #1432]
  402fec:	sub	w20, w20, w0
  402ff0:	cmp	w20, #0x2
  402ff4:	b.eq	402ffc <nftw@plt+0x30c>  // b.none
  402ff8:	bl	403728 <nftw@plt+0xa38>
  402ffc:	add	x1, x22, w0, sxtw #3
  403000:	ldr	x0, [x22, w0, sxtw #3]
  403004:	ldp	w21, w23, [sp, #152]
  403008:	ldr	x19, [x1, #8]
  40300c:	mov	w1, #0x0                   	// #0
  403010:	bl	4044f4 <nftw@plt+0x1804>
  403014:	mov	x20, x0
  403018:	cbnz	x0, 403024 <nftw@plt+0x334>
  40301c:	mov	w19, #0x1                   	// #1
  403020:	b	403038 <nftw@plt+0x348>
  403024:	cbnz	x19, 40305c <nftw@plt+0x36c>
  403028:	mov	w19, #0x0                   	// #0
  40302c:	mov	x1, x20
  403030:	mov	x0, x24
  403034:	bl	403860 <nftw@plt+0xb70>
  403038:	mov	w0, w19
  40303c:	ldr	d8, [sp, #96]
  403040:	ldp	x19, x20, [sp, #16]
  403044:	ldp	x21, x22, [sp, #32]
  403048:	ldp	x23, x24, [sp, #48]
  40304c:	ldp	x25, x26, [sp, #64]
  403050:	ldp	x27, x28, [sp, #80]
  403054:	ldp	x29, x30, [sp], #160
  403058:	ret
  40305c:	mov	w1, #0x0                   	// #0
  403060:	mov	x0, x19
  403064:	bl	4044f4 <nftw@plt+0x1804>
  403068:	mov	x1, x0
  40306c:	cbz	x0, 40301c <nftw@plt+0x32c>
  403070:	mov	w3, w23
  403074:	mov	w2, w21
  403078:	mov	x0, x20
  40307c:	bl	404618 <nftw@plt+0x1928>
  403080:	mov	w19, w0
  403084:	cbz	w0, 403028 <nftw@plt+0x338>
  403088:	b	403038 <nftw@plt+0x348>
  40308c:	mov	x0, x24
  403090:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403094:	add	x1, x1, #0x101
  403098:	bl	402a00 <strcmp@plt>
  40309c:	mov	w19, w0
  4030a0:	cbnz	w0, 4032dc <nftw@plt+0x5ec>
  4030a4:	mov	w0, #0x1                   	// #1
  4030a8:	adrp	x28, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4030ac:	adrp	x26, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4030b0:	add	x28, x28, #0x109
  4030b4:	add	x26, x26, #0x590
  4030b8:	str	wzr, [x21, #1432]
  4030bc:	mov	w27, #0x0                   	// #0
  4030c0:	mov	x25, #0x0                   	// #0
  4030c4:	mov	x24, #0x0                   	// #0
  4030c8:	str	wzr, [sp, #148]
  4030cc:	stp	w0, w0, [sp, #152]
  4030d0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4030d4:	add	x0, x0, #0x228
  4030d8:	str	x0, [sp, #120]
  4030dc:	add	x3, x23, #0xe0
  4030e0:	mov	x2, x28
  4030e4:	mov	x1, x22
  4030e8:	mov	w0, w20
  4030ec:	mov	x4, #0x0                   	// #0
  4030f0:	bl	4029f0 <getopt_long@plt>
  4030f4:	cmn	w0, #0x1
  4030f8:	b.eq	403244 <nftw@plt+0x554>  // b.none
  4030fc:	sub	w0, w0, #0x6e
  403100:	cmp	w0, #0x8
  403104:	b.hi	4032d8 <nftw@plt+0x5e8>  // b.pmore
  403108:	ldr	x1, [sp, #120]
  40310c:	ldrb	w0, [x1, w0, uxtw]
  403110:	adr	x1, 40311c <nftw@plt+0x42c>
  403114:	add	x0, x1, w0, sxtb #2
  403118:	br	x0
  40311c:	mov	w27, #0x1                   	// #1
  403120:	b	4030dc <nftw@plt+0x3ec>
  403124:	bl	4044e4 <nftw@plt+0x17f4>
  403128:	b	4030dc <nftw@plt+0x3ec>
  40312c:	ldr	x24, [x26]
  403130:	b	4030dc <nftw@plt+0x3ec>
  403134:	cbnz	w27, 403150 <nftw@plt+0x460>
  403138:	ldr	x0, [x26]
  40313c:	mov	w2, #0xa                   	// #10
  403140:	mov	x1, #0x0                   	// #0
  403144:	bl	402a30 <strtol@plt>
  403148:	mov	x25, x0
  40314c:	b	4030dc <nftw@plt+0x3ec>
  403150:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403154:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403158:	add	x1, x1, #0x111
  40315c:	ldr	x0, [x0, #1416]
  403160:	bl	40717c <nftw@plt+0x448c>
  403164:	b	4030dc <nftw@plt+0x3ec>
  403168:	ldr	x27, [x26]
  40316c:	mov	w1, #0x2f                  	// #47
  403170:	mov	x0, x27
  403174:	bl	402ab0 <strchr@plt>
  403178:	cbz	x0, 4031e4 <nftw@plt+0x4f4>
  40317c:	add	x3, sp, #0x9c
  403180:	add	x2, sp, #0x98
  403184:	mov	x0, x27
  403188:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40318c:	add	x1, x1, #0x147
  403190:	bl	402bc0 <__isoc99_sscanf@plt>
  403194:	cmp	w0, #0x2
  403198:	b.ne	4031e4 <nftw@plt+0x4f4>  // b.any
  40319c:	ldr	w0, [sp, #152]
  4031a0:	tbnz	w0, #31, 4031b0 <nftw@plt+0x4c0>
  4031a4:	ldr	w0, [sp, #156]
  4031a8:	cmp	w0, #0x0
  4031ac:	b.gt	4031cc <nftw@plt+0x4dc>
  4031b0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4031b4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4031b8:	add	x1, x1, #0x14d
  4031bc:	ldr	x0, [x0, #1416]
  4031c0:	bl	40717c <nftw@plt+0x448c>
  4031c4:	mov	w0, #0x1                   	// #1
  4031c8:	stp	w0, w0, [sp, #152]
  4031cc:	ldr	s0, [sp, #148]
  4031d0:	fcmpe	s0, #0.0
  4031d4:	b.pl	403220 <nftw@plt+0x530>  // b.nfrst
  4031d8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4031dc:	add	x1, x1, #0x178
  4031e0:	b	402fd0 <nftw@plt+0x2e0>
  4031e4:	ldr	x0, [x26]
  4031e8:	add	x2, sp, #0x94
  4031ec:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4031f0:	add	x1, x1, #0x175
  4031f4:	bl	402bc0 <__isoc99_sscanf@plt>
  4031f8:	cmp	w0, #0x1
  4031fc:	b.eq	403218 <nftw@plt+0x528>  // b.none
  403200:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403204:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403208:	add	x1, x1, #0x14d
  40320c:	ldr	x0, [x0, #1416]
  403210:	bl	40717c <nftw@plt+0x448c>
  403214:	b	4031cc <nftw@plt+0x4dc>
  403218:	str	wzr, [sp, #156]
  40321c:	b	4031cc <nftw@plt+0x4dc>
  403220:	cbz	x25, 40311c <nftw@plt+0x42c>
  403224:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403228:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40322c:	mov	w27, #0x1                   	// #1
  403230:	add	x1, x1, #0x198
  403234:	ldr	x0, [x0, #1416]
  403238:	mov	x25, #0x0                   	// #0
  40323c:	bl	40717c <nftw@plt+0x448c>
  403240:	b	4030dc <nftw@plt+0x3ec>
  403244:	cbnz	x24, 403250 <nftw@plt+0x560>
  403248:	adrp	x24, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40324c:	add	x24, x24, #0xfe8
  403250:	ldr	w0, [x21, #1432]
  403254:	sub	w20, w20, w0
  403258:	cmp	w20, #0x1
  40325c:	b.ne	4032d8 <nftw@plt+0x5e8>  // b.any
  403260:	ldr	w21, [sp, #156]
  403264:	ldr	x0, [x22, w0, sxtw #3]
  403268:	cmp	w21, #0x0
  40326c:	b.le	403298 <nftw@plt+0x5a8>
  403270:	ldr	w22, [sp, #152]
  403274:	mov	w1, #0x0                   	// #0
  403278:	bl	4044f4 <nftw@plt+0x1804>
  40327c:	mov	x20, x0
  403280:	cbz	x0, 40301c <nftw@plt+0x32c>
  403284:	movi	v0.2s, #0x0
  403288:	mov	w2, w21
  40328c:	mov	w1, w22
  403290:	bl	4047cc <nftw@plt+0x1adc>
  403294:	b	4032b8 <nftw@plt+0x5c8>
  403298:	ldr	s8, [sp, #148]
  40329c:	mov	w1, #0x0                   	// #0
  4032a0:	bl	4044f4 <nftw@plt+0x1804>
  4032a4:	mov	x20, x0
  4032a8:	cbz	x0, 40301c <nftw@plt+0x32c>
  4032ac:	cbz	x25, 4032c8 <nftw@plt+0x5d8>
  4032b0:	mov	x1, x25
  4032b4:	bl	4048dc <nftw@plt+0x1bec>
  4032b8:	mov	x1, x20
  4032bc:	mov	x0, x24
  4032c0:	bl	403860 <nftw@plt+0xb70>
  4032c4:	b	403038 <nftw@plt+0x348>
  4032c8:	fmov	s0, s8
  4032cc:	mov	w2, #0x0                   	// #0
  4032d0:	mov	w1, #0x0                   	// #0
  4032d4:	b	403290 <nftw@plt+0x5a0>
  4032d8:	bl	403754 <nftw@plt+0xa64>
  4032dc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4032e0:	mov	x0, x24
  4032e4:	add	x1, x1, #0x1c4
  4032e8:	bl	402a00 <strcmp@plt>
  4032ec:	cbnz	w0, 402e80 <nftw@plt+0x190>
  4032f0:	adrp	x25, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4032f4:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4032f8:	add	x23, x23, #0x180
  4032fc:	add	x25, x25, #0x1cc
  403300:	add	x19, x19, #0x5bc
  403304:	str	wzr, [x21, #1432]
  403308:	mov	w24, #0x1                   	// #1
  40330c:	mov	x3, x23
  403310:	mov	x2, x25
  403314:	mov	x1, x22
  403318:	mov	w0, w20
  40331c:	mov	x4, #0x0                   	// #0
  403320:	bl	4029f0 <getopt_long@plt>
  403324:	cmn	w0, #0x1
  403328:	b.eq	4033a4 <nftw@plt+0x6b4>  // b.none
  40332c:	cmp	w0, #0x6f
  403330:	b.eq	40337c <nftw@plt+0x68c>  // b.none
  403334:	b.gt	403354 <nftw@plt+0x664>
  403338:	cmp	w0, #0x66
  40333c:	b.eq	40336c <nftw@plt+0x67c>  // b.none
  403340:	cmp	w0, #0x68
  403344:	b.eq	403384 <nftw@plt+0x694>  // b.none
  403348:	cmp	w0, #0x46
  40334c:	b.eq	403374 <nftw@plt+0x684>  // b.none
  403350:	bl	403780 <nftw@plt+0xa90>
  403354:	cmp	w0, #0x74
  403358:	b.eq	40338c <nftw@plt+0x69c>  // b.none
  40335c:	cmp	w0, #0x76
  403360:	b.ne	403350 <nftw@plt+0x660>  // b.any
  403364:	bl	4044e4 <nftw@plt+0x17f4>
  403368:	b	40330c <nftw@plt+0x61c>
  40336c:	str	w24, [x19]
  403370:	b	40330c <nftw@plt+0x61c>
  403374:	str	w24, [x19, #4]
  403378:	b	40330c <nftw@plt+0x61c>
  40337c:	str	w24, [x19, #8]
  403380:	b	40330c <nftw@plt+0x61c>
  403384:	str	w24, [x19, #12]
  403388:	b	40330c <nftw@plt+0x61c>
  40338c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403390:	ldr	x0, [x0, #1424]
  403394:	bl	402860 <atof@plt>
  403398:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40339c:	str	d0, [x0, #936]
  4033a0:	b	40330c <nftw@plt+0x61c>
  4033a4:	ldr	w0, [x21, #1432]
  4033a8:	sub	w20, w20, w0
  4033ac:	cmp	w20, #0x2
  4033b0:	b.ne	403350 <nftw@plt+0x660>  // b.any
  4033b4:	add	x1, x22, w0, sxtw #3
  4033b8:	ldr	x0, [x22, w0, sxtw #3]
  4033bc:	ldr	x20, [x1, #8]
  4033c0:	mov	w1, #0x0                   	// #0
  4033c4:	bl	4044f4 <nftw@plt+0x1804>
  4033c8:	mov	x19, x0
  4033cc:	cbz	x0, 40301c <nftw@plt+0x32c>
  4033d0:	cbz	x20, 40301c <nftw@plt+0x32c>
  4033d4:	mov	w1, #0x0                   	// #0
  4033d8:	mov	x0, x20
  4033dc:	bl	4044f4 <nftw@plt+0x1804>
  4033e0:	mov	x1, x0
  4033e4:	cbz	x0, 40301c <nftw@plt+0x32c>
  4033e8:	mov	x0, x19
  4033ec:	bl	4049a8 <nftw@plt+0x1cb8>
  4033f0:	mov	w19, w0
  4033f4:	b	403038 <nftw@plt+0x348>
  4033f8:	stp	x29, x30, [sp, #-32]!
  4033fc:	mov	x29, sp
  403400:	str	x19, [sp, #16]
  403404:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  403408:	add	x19, x19, #0x8d0
  40340c:	mov	x0, x19
  403410:	bl	4102c4 <nftw@plt+0xd5d4>
  403414:	mov	x1, x19
  403418:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40341c:	ldr	x19, [sp, #16]
  403420:	add	x2, x2, #0x3a0
  403424:	ldp	x29, x30, [sp], #32
  403428:	adrp	x0, 410000 <nftw@plt+0xd310>
  40342c:	add	x0, x0, #0x99c
  403430:	b	402700 <__cxa_atexit@plt>
  403434:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  403438:	str	xzr, [x0, #2416]
  40343c:	ret
  403440:	stp	x29, x30, [sp, #-32]!
  403444:	mov	x29, sp
  403448:	stp	x19, x20, [sp, #16]
  40344c:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  403450:	add	x19, x19, #0xac8
  403454:	mov	x20, #0x1c00                	// #7168
  403458:	movk	x20, #0x1, lsl #16
  40345c:	mov	x0, x20
  403460:	stp	xzr, xzr, [x19]
  403464:	stp	xzr, xzr, [x19, #16]
  403468:	stp	xzr, xzr, [x19, #32]
  40346c:	str	x20, [x19, #64]
  403470:	bl	4027c0 <malloc@plt>
  403474:	str	x0, [x19, #56]
  403478:	cbz	x0, 403490 <nftw@plt+0x7a0>
  40347c:	stp	x20, xzr, [x0]
  403480:	str	x0, [x19, #48]
  403484:	ldp	x19, x20, [sp, #16]
  403488:	ldp	x29, x30, [sp], #32
  40348c:	ret
  403490:	str	xzr, [x19, #48]
  403494:	str	xzr, [x19, #64]
  403498:	b	403484 <nftw@plt+0x794>
  40349c:	mov	x29, #0x0                   	// #0
  4034a0:	mov	x30, #0x0                   	// #0
  4034a4:	mov	x5, x0
  4034a8:	ldr	x1, [sp]
  4034ac:	add	x2, sp, #0x8
  4034b0:	mov	x6, sp
  4034b4:	movz	x0, #0x0, lsl #48
  4034b8:	movk	x0, #0x0, lsl #32
  4034bc:	movk	x0, #0x40, lsl #16
  4034c0:	movk	x0, #0x2dc0
  4034c4:	movz	x3, #0x0, lsl #48
  4034c8:	movk	x3, #0x0, lsl #32
  4034cc:	movk	x3, #0x44, lsl #16
  4034d0:	movk	x3, #0xd980
  4034d4:	movz	x4, #0x0, lsl #48
  4034d8:	movk	x4, #0x0, lsl #32
  4034dc:	movk	x4, #0x44, lsl #16
  4034e0:	movk	x4, #0xda00
  4034e4:	bl	402820 <__libc_start_main@plt>
  4034e8:	bl	402970 <abort@plt>
  4034ec:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  4034f0:	ldr	x0, [x0, #3960]
  4034f4:	cbz	x0, 4034fc <nftw@plt+0x80c>
  4034f8:	b	402940 <__gmon_start__@plt>
  4034fc:	ret
  403500:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403504:	add	x0, x0, #0x588
  403508:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40350c:	add	x1, x1, #0x588
  403510:	cmp	x1, x0
  403514:	b.eq	40352c <nftw@plt+0x83c>  // b.none
  403518:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40351c:	ldr	x1, [x1, #2648]
  403520:	cbz	x1, 40352c <nftw@plt+0x83c>
  403524:	mov	x16, x1
  403528:	br	x16
  40352c:	ret
  403530:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403534:	add	x0, x0, #0x588
  403538:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40353c:	add	x1, x1, #0x588
  403540:	sub	x1, x1, x0
  403544:	lsr	x2, x1, #63
  403548:	add	x1, x2, x1, asr #3
  40354c:	cmp	xzr, x1, asr #1
  403550:	asr	x1, x1, #1
  403554:	b.eq	40356c <nftw@plt+0x87c>  // b.none
  403558:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40355c:	ldr	x2, [x2, #2656]
  403560:	cbz	x2, 40356c <nftw@plt+0x87c>
  403564:	mov	x16, x2
  403568:	br	x16
  40356c:	ret
  403570:	stp	x29, x30, [sp, #-32]!
  403574:	mov	x29, sp
  403578:	str	x19, [sp, #16]
  40357c:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403580:	ldrb	w0, [x19, #1464]
  403584:	cbnz	w0, 403594 <nftw@plt+0x8a4>
  403588:	bl	403500 <nftw@plt+0x810>
  40358c:	mov	w0, #0x1                   	// #1
  403590:	strb	w0, [x19, #1464]
  403594:	ldr	x19, [sp, #16]
  403598:	ldp	x29, x30, [sp], #32
  40359c:	ret
  4035a0:	b	403530 <nftw@plt+0x840>
  4035a4:	stp	x29, x30, [sp, #-32]!
  4035a8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4035ac:	cmp	w0, #0x0
  4035b0:	mov	x29, sp
  4035b4:	str	x19, [sp, #16]
  4035b8:	ldr	x19, [x1, #1416]
  4035bc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4035c0:	ldr	x1, [x1, #1440]
  4035c4:	csel	x19, x19, x1, ne  // ne = any
  4035c8:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4035cc:	mov	x0, x19
  4035d0:	add	x1, x1, #0xa68
  4035d4:	bl	40717c <nftw@plt+0x448c>
  4035d8:	mov	x0, x19
  4035dc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4035e0:	add	x1, x1, #0xaae
  4035e4:	bl	40717c <nftw@plt+0x448c>
  4035e8:	mov	x0, x19
  4035ec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4035f0:	add	x1, x1, #0xae8
  4035f4:	bl	40717c <nftw@plt+0x448c>
  4035f8:	mov	x0, x19
  4035fc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403600:	ldr	x19, [sp, #16]
  403604:	add	x1, x1, #0xb1e
  403608:	ldp	x29, x30, [sp], #32
  40360c:	b	40717c <nftw@plt+0x448c>
  403610:	stp	x29, x30, [sp, #-32]!
  403614:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403618:	cmp	w0, #0x0
  40361c:	mov	x29, sp
  403620:	str	x19, [sp, #16]
  403624:	ldr	x19, [x1, #1416]
  403628:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40362c:	ldr	x1, [x1, #1440]
  403630:	csel	x19, x19, x1, ne  // ne = any
  403634:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403638:	mov	x0, x19
  40363c:	add	x1, x1, #0xb68
  403640:	bl	40717c <nftw@plt+0x448c>
  403644:	mov	x0, x19
  403648:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40364c:	add	x1, x1, #0xbb0
  403650:	bl	40717c <nftw@plt+0x448c>
  403654:	mov	x0, x19
  403658:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40365c:	add	x1, x1, #0xaae
  403660:	bl	40717c <nftw@plt+0x448c>
  403664:	mov	x0, x19
  403668:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40366c:	add	x1, x1, #0xbef
  403670:	bl	40717c <nftw@plt+0x448c>
  403674:	mov	x0, x19
  403678:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40367c:	ldr	x19, [sp, #16]
  403680:	add	x1, x1, #0xae8
  403684:	ldp	x29, x30, [sp], #32
  403688:	b	40717c <nftw@plt+0x448c>
  40368c:	stp	x29, x30, [sp, #-32]!
  403690:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403694:	cmp	w0, #0x0
  403698:	mov	x29, sp
  40369c:	str	x19, [sp, #16]
  4036a0:	ldr	x19, [x1, #1416]
  4036a4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4036a8:	ldr	x1, [x1, #1440]
  4036ac:	csel	x19, x19, x1, ne  // ne = any
  4036b0:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4036b4:	mov	x0, x19
  4036b8:	add	x1, x1, #0xc33
  4036bc:	bl	40717c <nftw@plt+0x448c>
  4036c0:	mov	x0, x19
  4036c4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4036c8:	add	x1, x1, #0xc80
  4036cc:	bl	40717c <nftw@plt+0x448c>
  4036d0:	mov	x0, x19
  4036d4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4036d8:	add	x1, x1, #0xcc3
  4036dc:	bl	40717c <nftw@plt+0x448c>
  4036e0:	mov	x0, x19
  4036e4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4036e8:	add	x1, x1, #0xd00
  4036ec:	bl	40717c <nftw@plt+0x448c>
  4036f0:	mov	x0, x19
  4036f4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4036f8:	add	x1, x1, #0xd53
  4036fc:	bl	40717c <nftw@plt+0x448c>
  403700:	mov	x0, x19
  403704:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403708:	add	x1, x1, #0xd94
  40370c:	bl	40717c <nftw@plt+0x448c>
  403710:	mov	x0, x19
  403714:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403718:	ldr	x19, [sp, #16]
  40371c:	add	x1, x1, #0xae8
  403720:	ldp	x29, x30, [sp], #32
  403724:	b	40717c <nftw@plt+0x448c>
  403728:	stp	x29, x30, [sp, #-16]!
  40372c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403730:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403734:	mov	x29, sp
  403738:	ldr	x0, [x0, #1416]
  40373c:	add	x1, x1, #0xddb
  403740:	bl	40717c <nftw@plt+0x448c>
  403744:	mov	w0, #0x1                   	// #1
  403748:	bl	4035a4 <nftw@plt+0x8b4>
  40374c:	mov	w0, #0x1                   	// #1
  403750:	bl	402660 <exit@plt>
  403754:	stp	x29, x30, [sp, #-16]!
  403758:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40375c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403760:	mov	x29, sp
  403764:	ldr	x0, [x0, #1416]
  403768:	add	x1, x1, #0xdf2
  40376c:	bl	40717c <nftw@plt+0x448c>
  403770:	mov	w0, #0x1                   	// #1
  403774:	bl	403610 <nftw@plt+0x920>
  403778:	mov	w0, #0x1                   	// #1
  40377c:	bl	402660 <exit@plt>
  403780:	stp	x29, x30, [sp, #-16]!
  403784:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403788:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40378c:	mov	x29, sp
  403790:	ldr	x0, [x0, #1416]
  403794:	add	x1, x1, #0xe0c
  403798:	bl	40717c <nftw@plt+0x448c>
  40379c:	mov	w0, #0x1                   	// #1
  4037a0:	bl	40368c <nftw@plt+0x99c>
  4037a4:	mov	w0, #0x1                   	// #1
  4037a8:	bl	402660 <exit@plt>
  4037ac:	stp	x29, x30, [sp, #-48]!
  4037b0:	mov	x29, sp
  4037b4:	stp	x19, x20, [sp, #16]
  4037b8:	mov	w19, w0
  4037bc:	str	x21, [sp, #32]
  4037c0:	cbz	w0, 403850 <nftw@plt+0xb60>
  4037c4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4037c8:	mov	w21, w19
  4037cc:	ldr	x20, [x0, #1416]
  4037d0:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4037d4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4037d8:	add	x1, x1, #0xe25
  4037dc:	ldr	x2, [x0, #1928]
  4037e0:	mov	x0, x20
  4037e4:	bl	40717c <nftw@plt+0x448c>
  4037e8:	mov	x0, x20
  4037ec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4037f0:	add	x1, x1, #0xe55
  4037f4:	bl	40717c <nftw@plt+0x448c>
  4037f8:	mov	x0, x20
  4037fc:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403800:	add	x1, x1, #0xe7a
  403804:	bl	40717c <nftw@plt+0x448c>
  403808:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40380c:	add	x1, x1, #0xebe
  403810:	mov	x0, x20
  403814:	bl	40717c <nftw@plt+0x448c>
  403818:	mov	w0, w19
  40381c:	bl	4035a4 <nftw@plt+0x8b4>
  403820:	mov	w0, w19
  403824:	bl	403610 <nftw@plt+0x920>
  403828:	mov	w0, w19
  40382c:	bl	40368c <nftw@plt+0x99c>
  403830:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  403834:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403838:	add	x2, x2, #0x32d
  40383c:	add	x1, x1, #0xf07
  403840:	mov	x0, x20
  403844:	bl	40717c <nftw@plt+0x448c>
  403848:	mov	w0, w21
  40384c:	bl	402660 <exit@plt>
  403850:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403854:	mov	w21, #0x0                   	// #0
  403858:	ldr	x20, [x0, #1440]
  40385c:	b	4037d0 <nftw@plt+0xae0>
  403860:	stp	x29, x30, [sp, #-48]!
  403864:	mov	x29, sp
  403868:	stp	x19, x20, [sp, #16]
  40386c:	mov	x19, x0
  403870:	stp	x21, x22, [sp, #32]
  403874:	mov	x21, x1
  403878:	mov	w1, #0x0                   	// #0
  40387c:	bl	402980 <access@plt>
  403880:	cmn	w0, #0x1
  403884:	b.ne	4038c4 <nftw@plt+0xbd4>  // b.any
  403888:	mov	x0, x19
  40388c:	mov	w1, #0x1ff                 	// #511
  403890:	bl	402ca0 <mkdir@plt>
  403894:	cmn	w0, #0x1
  403898:	b.ne	4038dc <nftw@plt+0xbec>  // b.any
  40389c:	bl	402c20 <__errno_location@plt>
  4038a0:	ldr	w0, [x0]
  4038a4:	cmp	w0, #0x11
  4038a8:	b.eq	4038dc <nftw@plt+0xbec>  // b.none
  4038ac:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4038b0:	mov	x2, x19
  4038b4:	add	x1, x1, #0xf39
  4038b8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4038bc:	ldr	w0, [x0, #2344]
  4038c0:	bl	408b3c <nftw@plt+0x5e4c>
  4038c4:	adrp	x1, 403000 <nftw@plt+0x310>
  4038c8:	mov	x0, x19
  4038cc:	add	x1, x1, #0x98c
  4038d0:	mov	w3, #0x9                   	// #9
  4038d4:	mov	w2, #0x40                  	// #64
  4038d8:	bl	402cf0 <nftw@plt>
  4038dc:	mov	x1, #0x0                   	// #0
  4038e0:	mov	x0, #0x0                   	// #0
  4038e4:	bl	402600 <getcwd@plt>
  4038e8:	mov	x20, x0
  4038ec:	cbnz	x0, 403904 <nftw@plt+0xc14>
  4038f0:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4038f4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4038f8:	add	x1, x1, #0xf52
  4038fc:	ldr	w0, [x0, #2344]
  403900:	bl	408b3c <nftw@plt+0x5e4c>
  403904:	mov	x0, x19
  403908:	bl	402a60 <chdir@plt>
  40390c:	cbz	w0, 403920 <nftw@plt+0xc30>
  403910:	mov	x2, x19
  403914:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403918:	add	x1, x1, #0xf74
  40391c:	b	4038b8 <nftw@plt+0xbc8>
  403920:	mov	x0, x21
  403924:	bl	406288 <nftw@plt+0x3598>
  403928:	mov	w1, #0x0                   	// #0
  40392c:	mov	x22, x0
  403930:	bl	402980 <access@plt>
  403934:	cmn	w0, #0x1
  403938:	b.eq	403958 <nftw@plt+0xc68>  // b.none
  40393c:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  403940:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  403944:	mov	x3, x19
  403948:	mov	x2, x22
  40394c:	ldr	w0, [x0, #2344]
  403950:	add	x1, x1, #0xf92
  403954:	bl	408b3c <nftw@plt+0x5e4c>
  403958:	mov	w1, #0x0                   	// #0
  40395c:	mov	x0, x21
  403960:	bl	4058c4 <nftw@plt+0x2bd4>
  403964:	mov	x0, x20
  403968:	bl	402a60 <chdir@plt>
  40396c:	cbz	w0, 403978 <nftw@plt+0xc88>
  403970:	mov	x2, x20
  403974:	b	403914 <nftw@plt+0xc24>
  403978:	mov	x0, x20
  40397c:	ldp	x19, x20, [sp, #16]
  403980:	ldp	x21, x22, [sp, #32]
  403984:	ldp	x29, x30, [sp], #48
  403988:	b	402a80 <free@plt>
  40398c:	stp	x29, x30, [sp, #-32]!
  403990:	mov	x29, sp
  403994:	str	x19, [sp, #16]
  403998:	mov	x19, x0
  40399c:	bl	402630 <strlen@plt>
  4039a0:	cmp	w0, #0x5
  4039a4:	b.le	4039e8 <nftw@plt+0xcf8>
  4039a8:	sub	w0, w0, #0x5
  4039ac:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4039b0:	mov	x2, #0x5                   	// #5
  4039b4:	add	x1, x1, #0xfbd
  4039b8:	add	x0, x19, w0, sxtw
  4039bc:	bl	4027f0 <strncmp@plt>
  4039c0:	cbnz	w0, 4039e8 <nftw@plt+0xcf8>
  4039c4:	mov	x0, x19
  4039c8:	bl	4026b0 <remove@plt>
  4039cc:	cbz	w0, 4039e8 <nftw@plt+0xcf8>
  4039d0:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4039d4:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4039d8:	mov	x2, x19
  4039dc:	add	x1, x1, #0xfc3
  4039e0:	ldr	w0, [x0, #2344]
  4039e4:	bl	408b3c <nftw@plt+0x5e4c>
  4039e8:	mov	w0, #0x0                   	// #0
  4039ec:	ldr	x19, [sp, #16]
  4039f0:	ldp	x29, x30, [sp], #32
  4039f4:	ret
  4039f8:	stp	x29, x30, [sp, #-64]!
  4039fc:	mov	x29, sp
  403a00:	stp	x19, x20, [sp, #16]
  403a04:	mov	x20, x0
  403a08:	mov	x19, #0x0                   	// #0
  403a0c:	stp	x21, x22, [sp, #32]
  403a10:	mov	x21, x2
  403a14:	mov	x22, x3
  403a18:	stp	x23, x24, [sp, #48]
  403a1c:	mov	x23, x4
  403a20:	mov	w24, w1
  403a24:	cmp	x19, x24
  403a28:	b.eq	403a48 <nftw@plt+0xd58>  // b.none
  403a2c:	ldr	x0, [x20, x19, lsl #3]
  403a30:	mov	x2, x23
  403a34:	mov	x1, x22
  403a38:	blr	x21
  403a3c:	str	x0, [x20, x19, lsl #3]
  403a40:	add	x19, x19, #0x1
  403a44:	b	403a24 <nftw@plt+0xd34>
  403a48:	ldp	x19, x20, [sp, #16]
  403a4c:	ldp	x21, x22, [sp, #32]
  403a50:	ldp	x23, x24, [sp, #48]
  403a54:	ldp	x29, x30, [sp], #64
  403a58:	ret
  403a5c:	ret
  403a60:	scvtf	s0, x0
  403a64:	ldr	s1, [x1]
  403a68:	fmul	s0, s0, s1
  403a6c:	fcvtzs	x0, s0
  403a70:	ret
  403a74:	ldr	w3, [x2]
  403a78:	mov	w2, #0x2                   	// #2
  403a7c:	sdiv	w2, w3, w2
  403a80:	sxtw	x3, w3
  403a84:	add	x2, x0, w2, sxtw
  403a88:	ldrsw	x0, [x1]
  403a8c:	sdiv	x2, x2, x3
  403a90:	mul	x0, x2, x0
  403a94:	ret
  403a98:	ldr	w5, [x0, #104]
  403a9c:	mov	x2, #0x0                   	// #0
  403aa0:	cmp	w5, w2
  403aa4:	b.ls	403af4 <nftw@plt+0xe04>  // b.plast
  403aa8:	ldr	x3, [x0, #112]
  403aac:	ldr	x4, [x3, x2, lsl #3]
  403ab0:	cbz	x4, 403aec <nftw@plt+0xdfc>
  403ab4:	ldr	x3, [x4]
  403ab8:	cmp	x3, x0
  403abc:	b.ne	403aec <nftw@plt+0xdfc>  // b.any
  403ac0:	ldr	w7, [x4, #24]
  403ac4:	mov	x3, #0x0                   	// #0
  403ac8:	cmp	w7, w3
  403acc:	b.ls	403aec <nftw@plt+0xdfc>  // b.plast
  403ad0:	ldr	x6, [x4, #32]
  403ad4:	ldr	x6, [x6, x3, lsl #3]
  403ad8:	add	x3, x3, #0x1
  403adc:	cmp	x6, x1
  403ae0:	b.le	403ac8 <nftw@plt+0xdd8>
  403ae4:	mov	w0, #0x0                   	// #0
  403ae8:	b	403af8 <nftw@plt+0xe08>
  403aec:	add	x2, x2, #0x1
  403af0:	b	403aa0 <nftw@plt+0xdb0>
  403af4:	mov	w0, #0x1                   	// #1
  403af8:	ret
  403afc:	stp	x29, x30, [sp, #-112]!
  403b00:	mov	x29, sp
  403b04:	stp	x19, x20, [sp, #16]
  403b08:	stp	x21, x22, [sp, #32]
  403b0c:	mov	x21, x0
  403b10:	stp	x23, x24, [sp, #48]
  403b14:	stp	x25, x26, [sp, #64]
  403b18:	ldr	w26, [x0, #104]
  403b1c:	ldr	w0, [x1, #104]
  403b20:	stp	x27, x28, [sp, #80]
  403b24:	cmp	w0, w26
  403b28:	b.eq	403b44 <nftw@plt+0xe54>  // b.none
  403b2c:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403b30:	add	x2, x2, #0x4d9
  403b34:	mov	w1, #0x220                 	// #544
  403b38:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403b3c:	add	x0, x0, #0x4a2
  403b40:	bl	402d60 <nftw@plt+0x70>
  403b44:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403b48:	adrp	x25, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403b4c:	mov	x22, x1
  403b50:	mov	w24, w2
  403b54:	add	x23, x23, #0x5d0
  403b58:	add	x25, x25, #0x4e4
  403b5c:	mov	x28, #0x0                   	// #0
  403b60:	mov	w3, #0x0                   	// #0
  403b64:	cmp	w26, w28
  403b68:	b.ls	403c58 <nftw@plt+0xf68>  // b.plast
  403b6c:	ldr	x1, [x21, #112]
  403b70:	lsl	x0, x28, #3
  403b74:	ldr	x19, [x1, x0]
  403b78:	cbz	x19, 403bc8 <nftw@plt+0xed8>
  403b7c:	ldr	x1, [x19]
  403b80:	cmp	x1, x21
  403b84:	b.ne	403bc8 <nftw@plt+0xed8>  // b.any
  403b88:	ldr	x1, [x22, #112]
  403b8c:	ldr	x20, [x1, x0]
  403b90:	cbz	x20, 403bc8 <nftw@plt+0xed8>
  403b94:	ldr	x0, [x20]
  403b98:	cmp	x0, x22
  403b9c:	b.ne	403bc8 <nftw@plt+0xed8>  // b.any
  403ba0:	ldr	w1, [x19, #16]
  403ba4:	ldr	w0, [x20, #16]
  403ba8:	cmp	w1, w0
  403bac:	b.eq	403bd0 <nftw@plt+0xee0>  // b.none
  403bb0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403bb4:	mov	x1, x25
  403bb8:	ldr	x2, [x21, #24]
  403bbc:	ldr	x0, [x0, #1416]
  403bc0:	bl	40717c <nftw@plt+0x448c>
  403bc4:	mov	w3, #0x1                   	// #1
  403bc8:	add	x28, x28, #0x1
  403bcc:	b	403b64 <nftw@plt+0xe74>
  403bd0:	add	x19, x19, #0x18
  403bd4:	add	x20, x20, #0x18
  403bd8:	mov	x27, #0x20                  	// #32
  403bdc:	ldr	x2, [x21, x27]
  403be0:	ldr	x0, [x22, x27]
  403be4:	cmp	x2, x0
  403be8:	b.eq	403bfc <nftw@plt+0xf0c>  // b.none
  403bec:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403bf0:	mov	w1, #0x23b                 	// #571
  403bf4:	add	x2, x2, #0x4d9
  403bf8:	b	403b38 <nftw@plt+0xe48>
  403bfc:	cbz	x2, 403c48 <nftw@plt+0xf58>
  403c00:	ldr	w1, [x19]
  403c04:	ldr	w0, [x20]
  403c08:	cmp	w1, w0
  403c0c:	b.eq	403c20 <nftw@plt+0xf30>  // b.none
  403c10:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403c14:	mov	w1, #0x23e                 	// #574
  403c18:	add	x2, x2, #0x4d9
  403c1c:	b	403b38 <nftw@plt+0xe48>
  403c20:	ldr	x0, [x20, #8]
  403c24:	str	x0, [x23]
  403c28:	ldr	x0, [x19, #8]
  403c2c:	stp	wzr, w1, [x23, #8]
  403c30:	str	w24, [x23, #16]
  403c34:	add	x20, x20, #0x10
  403c38:	str	w3, [sp, #108]
  403c3c:	add	x19, x19, #0x10
  403c40:	blr	x2
  403c44:	ldr	w3, [sp, #108]
  403c48:	add	x27, x27, #0x8
  403c4c:	cmp	x27, #0x68
  403c50:	b.ne	403bdc <nftw@plt+0xeec>  // b.any
  403c54:	b	403bc8 <nftw@plt+0xed8>
  403c58:	mov	w0, w3
  403c5c:	ldp	x19, x20, [sp, #16]
  403c60:	ldp	x21, x22, [sp, #32]
  403c64:	ldp	x23, x24, [sp, #48]
  403c68:	ldp	x25, x26, [sp, #64]
  403c6c:	ldp	x27, x28, [sp, #80]
  403c70:	ldp	x29, x30, [sp], #112
  403c74:	ret
  403c78:	stp	x29, x30, [sp, #-16]!
  403c7c:	mov	x1, #0x1                   	// #1
  403c80:	mov	x0, #0x10                  	// #16
  403c84:	mov	x29, sp
  403c88:	bl	402870 <calloc@plt>
  403c8c:	ldp	x29, x30, [sp], #16
  403c90:	b	405774 <nftw@plt+0x2a84>
  403c94:	stp	x29, x30, [sp, #-48]!
  403c98:	mov	x29, sp
  403c9c:	stp	x19, x20, [sp, #16]
  403ca0:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  403ca4:	mov	w1, #0x2f                  	// #47
  403ca8:	mov	x19, x0
  403cac:	strh	w1, [sp, #40]
  403cb0:	add	x1, sp, #0x28
  403cb4:	bl	402ba0 <strstr@plt>
  403cb8:	bl	402630 <strlen@plt>
  403cbc:	mov	x20, x0
  403cc0:	mov	x0, x19
  403cc4:	bl	402630 <strlen@plt>
  403cc8:	add	x1, x0, #0x2
  403ccc:	add	w0, w20, #0x1
  403cd0:	sub	x0, x1, w0, sxtw
  403cd4:	add	x1, sp, #0x28
  403cd8:	add	x19, x19, x0
  403cdc:	mov	x0, x19
  403ce0:	bl	402ba0 <strstr@plt>
  403ce4:	cbnz	x0, 403cb8 <nftw@plt+0xfc8>
  403ce8:	mov	x0, x19
  403cec:	ldp	x19, x20, [sp, #16]
  403cf0:	ldp	x29, x30, [sp], #48
  403cf4:	ret
  403cf8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403cfc:	add	x1, x1, #0x5d0
  403d00:	add	x4, x1, #0x18
  403d04:	add	x6, x1, #0xa8
  403d08:	mov	x3, #0x0                   	// #0
  403d0c:	mov	w2, #0x0                   	// #0
  403d10:	ldr	w5, [x6, x3, lsl #2]
  403d14:	cbz	w5, 403d30 <nftw@plt+0x1040>
  403d18:	add	x5, x0, w2, sxtw #4
  403d1c:	ldr	w7, [x4]
  403d20:	add	w2, w2, #0x1
  403d24:	str	w7, [x5, #24]
  403d28:	ldr	x7, [x4, #8]
  403d2c:	str	x7, [x5, #32]
  403d30:	add	x3, x3, #0x1
  403d34:	add	x4, x4, #0x10
  403d38:	cmp	x3, #0x9
  403d3c:	b.ne	403d10 <nftw@plt+0x1020>  // b.any
  403d40:	ldr	w0, [x1, #204]
  403d44:	cbnz	w0, 403d50 <nftw@plt+0x1060>
  403d48:	str	w2, [x1, #204]
  403d4c:	ret
  403d50:	cmp	w0, w2
  403d54:	b.eq	403d78 <nftw@plt+0x1088>  // b.none
  403d58:	stp	x29, x30, [sp, #-16]!
  403d5c:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403d60:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403d64:	mov	x29, sp
  403d68:	add	x2, x2, #0x50c
  403d6c:	add	x0, x0, #0x4a2
  403d70:	mov	w1, #0x6f                  	// #111
  403d74:	bl	402d60 <nftw@plt+0x70>
  403d78:	ret
  403d7c:	stp	x29, x30, [sp, #-32]!
  403d80:	mov	x29, sp
  403d84:	stp	x19, x20, [sp, #16]
  403d88:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403d8c:	add	x19, x19, #0x5d0
  403d90:	ldr	w0, [x19, #208]
  403d94:	cbz	w0, 403dd4 <nftw@plt+0x10e4>
  403d98:	ldr	x0, [x19, #216]
  403d9c:	bl	403cf8 <nftw@plt+0x1008>
  403da0:	add	x0, x19, #0xe0
  403da4:	ldp	x2, x1, [x0, #24]
  403da8:	sub	x1, x1, x2
  403dac:	cmp	x1, #0x7
  403db0:	b.hi	403dbc <nftw@plt+0x10cc>  // b.pmore
  403db4:	mov	x1, #0x8                   	// #8
  403db8:	bl	43ce94 <_obstack_newchunk@@Base>
  403dbc:	ldr	x1, [x19, #248]
  403dc0:	ldr	x2, [x19, #216]
  403dc4:	str	x2, [x1]
  403dc8:	ldr	x1, [x19, #248]
  403dcc:	add	x1, x1, #0x8
  403dd0:	str	x1, [x19, #248]
  403dd4:	mov	x1, #0x1                   	// #1
  403dd8:	mov	x0, #0xb8                  	// #184
  403ddc:	bl	402870 <calloc@plt>
  403de0:	mov	x20, x0
  403de4:	add	x1, x19, #0x18
  403de8:	mov	x0, #0x0                   	// #0
  403dec:	str	x20, [x19, #216]
  403df0:	lsl	x2, x0, #4
  403df4:	add	x0, x0, #0x1
  403df8:	cmp	x0, #0x9
  403dfc:	str	wzr, [x2, x1]
  403e00:	b.ne	403df0 <nftw@plt+0x1100>  // b.any
  403e04:	ldr	x0, [x19, #312]
  403e08:	str	x0, [x20]
  403e0c:	str	wzr, [x19, #204]
  403e10:	bl	405630 <nftw@plt+0x2940>
  403e14:	str	w0, [x20, #8]
  403e18:	ldr	x20, [x19, #216]
  403e1c:	bl	405630 <nftw@plt+0x2940>
  403e20:	str	w0, [x20, #12]
  403e24:	ldr	x20, [x19, #216]
  403e28:	bl	405630 <nftw@plt+0x2940>
  403e2c:	str	w0, [x20, #16]
  403e30:	ldr	w0, [x19, #208]
  403e34:	add	w0, w0, #0x1
  403e38:	str	w0, [x19, #208]
  403e3c:	ldr	w0, [x19, #320]
  403e40:	cbz	w0, 403e68 <nftw@plt+0x1178>
  403e44:	ldr	x0, [x19, #216]
  403e48:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403e4c:	ldp	x19, x20, [sp, #16]
  403e50:	add	x1, x1, #0x518
  403e54:	ldr	w2, [x0, #8]
  403e58:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  403e5c:	ldp	x29, x30, [sp], #32
  403e60:	ldr	x0, [x0, #1440]
  403e64:	b	40717c <nftw@plt+0x448c>
  403e68:	ldp	x19, x20, [sp, #16]
  403e6c:	ldp	x29, x30, [sp], #32
  403e70:	ret
  403e74:	mov	w5, #0x9                   	// #9
  403e78:	stp	x29, x30, [sp, #-80]!
  403e7c:	udiv	w5, w1, w5
  403e80:	mov	x29, sp
  403e84:	stp	x19, x20, [sp, #16]
  403e88:	stp	x21, x22, [sp, #32]
  403e8c:	add	w5, w5, w5, lsl #3
  403e90:	cmp	w1, w5
  403e94:	stp	x23, x24, [sp, #48]
  403e98:	stp	x25, x26, [sp, #64]
  403e9c:	b.eq	403eb8 <nftw@plt+0x11c8>  // b.none
  403ea0:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403ea4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403ea8:	add	x2, x2, #0x530
  403eac:	add	x0, x0, #0x4a2
  403eb0:	mov	w1, #0x2ef                 	// #751
  403eb4:	bl	402d60 <nftw@plt+0x70>
  403eb8:	mov	x22, x0
  403ebc:	mov	w19, w1
  403ec0:	mov	x23, x2
  403ec4:	mov	x24, x3
  403ec8:	mov	x25, x4
  403ecc:	mov	w20, #0x1                   	// #1
  403ed0:	sub	w0, w20, #0x1
  403ed4:	cmp	w19, w0
  403ed8:	b.ls	403f10 <nftw@plt+0x1220>  // b.plast
  403edc:	add	x21, x22, w20, uxtw #3
  403ee0:	mov	w26, #0x0                   	// #0
  403ee4:	ldr	x0, [x21, #8]
  403ee8:	mov	x2, x25
  403eec:	mov	x1, x24
  403ef0:	add	w26, w26, #0x2
  403ef4:	add	x21, x21, #0x10
  403ef8:	blr	x23
  403efc:	stur	x0, [x21, #-8]
  403f00:	cmp	w26, #0x8
  403f04:	b.ne	403ee4 <nftw@plt+0x11f4>  // b.any
  403f08:	add	w20, w20, #0x9
  403f0c:	b	403ed0 <nftw@plt+0x11e0>
  403f10:	ldp	x19, x20, [sp, #16]
  403f14:	ldp	x21, x22, [sp, #32]
  403f18:	ldp	x23, x24, [sp, #48]
  403f1c:	ldp	x25, x26, [sp, #64]
  403f20:	ldp	x29, x30, [sp], #80
  403f24:	ret
  403f28:	stp	x29, x30, [sp, #-64]!
  403f2c:	mov	x29, sp
  403f30:	stp	x21, x22, [sp, #32]
  403f34:	mov	w21, #0x3                   	// #3
  403f38:	udiv	w21, w1, w21
  403f3c:	stp	x19, x20, [sp, #16]
  403f40:	mov	w19, w1
  403f44:	stp	x23, x24, [sp, #48]
  403f48:	add	w1, w21, w21, lsl #1
  403f4c:	subs	w19, w19, w1
  403f50:	b.eq	403f6c <nftw@plt+0x127c>  // b.none
  403f54:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403f58:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  403f5c:	add	x2, x2, #0x54d
  403f60:	add	x0, x0, #0x4a2
  403f64:	mov	w1, #0x2de                 	// #734
  403f68:	bl	402d60 <nftw@plt+0x70>
  403f6c:	mov	x20, x0
  403f70:	mov	x22, x2
  403f74:	mov	x23, x3
  403f78:	mov	x24, x4
  403f7c:	cmp	w19, w21
  403f80:	b.eq	403fb8 <nftw@plt+0x12c8>  // b.none
  403f84:	ldr	x0, [x20, #8]
  403f88:	mov	x2, x24
  403f8c:	mov	x1, x23
  403f90:	add	w19, w19, #0x1
  403f94:	add	x20, x20, #0x18
  403f98:	blr	x22
  403f9c:	stur	x0, [x20, #-16]
  403fa0:	ldur	x0, [x20, #-8]
  403fa4:	mov	x2, x24
  403fa8:	mov	x1, x23
  403fac:	blr	x22
  403fb0:	stur	x0, [x20, #-8]
  403fb4:	b	403f7c <nftw@plt+0x128c>
  403fb8:	ldp	x19, x20, [sp, #16]
  403fbc:	ldp	x21, x22, [sp, #32]
  403fc0:	ldp	x23, x24, [sp, #48]
  403fc4:	ldp	x29, x30, [sp], #64
  403fc8:	ret
  403fcc:	cbnz	w2, 404420 <nftw@plt+0x1730>
  403fd0:	stp	x29, x30, [sp, #-144]!
  403fd4:	mov	x29, sp
  403fd8:	stp	x19, x20, [sp, #16]
  403fdc:	mov	x20, x0
  403fe0:	stp	x21, x22, [sp, #32]
  403fe4:	stp	x23, x24, [sp, #48]
  403fe8:	stp	x25, x26, [sp, #64]
  403fec:	stp	x27, x28, [sp, #80]
  403ff0:	bl	402630 <strlen@plt>
  403ff4:	cmp	w0, #0x5
  403ff8:	b.le	404080 <nftw@plt+0x1390>
  403ffc:	sxtw	x0, w0
  404000:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  404004:	sub	x0, x0, #0x5
  404008:	add	x1, x1, #0xfbd
  40400c:	add	x0, x20, x0
  404010:	bl	402a00 <strcmp@plt>
  404014:	cbnz	w0, 404080 <nftw@plt+0x1390>
  404018:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40401c:	add	x19, x19, #0x5d0
  404020:	ldr	w0, [x19, #320]
  404024:	cbz	w0, 404040 <nftw@plt+0x1350>
  404028:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40402c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404030:	mov	x2, x20
  404034:	add	x1, x1, #0x598
  404038:	ldr	x0, [x0, #1416]
  40403c:	bl	40717c <nftw@plt+0x448c>
  404040:	add	x1, x19, #0xa8
  404044:	mov	x0, #0x0                   	// #0
  404048:	str	wzr, [x1, x0, lsl #2]
  40404c:	add	x0, x0, #0x1
  404050:	cmp	x0, #0x9
  404054:	b.ne	404048 <nftw@plt+0x1358>  // b.any
  404058:	mov	x0, x20
  40405c:	str	wzr, [x19, #204]
  404060:	bl	405460 <nftw@plt+0x2770>
  404064:	cbnz	w0, 4040a0 <nftw@plt+0x13b0>
  404068:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40406c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404070:	mov	x2, x20
  404074:	add	x1, x1, #0x5aa
  404078:	ldr	x0, [x0, #1416]
  40407c:	bl	40717c <nftw@plt+0x448c>
  404080:	mov	w0, #0x0                   	// #0
  404084:	ldp	x19, x20, [sp, #16]
  404088:	ldp	x21, x22, [sp, #32]
  40408c:	ldp	x23, x24, [sp, #48]
  404090:	ldp	x25, x26, [sp, #64]
  404094:	ldp	x27, x28, [sp, #80]
  404098:	ldp	x29, x30, [sp], #144
  40409c:	ret
  4040a0:	bl	405630 <nftw@plt+0x2940>
  4040a4:	mov	w1, #0x6461                	// #25697
  4040a8:	movk	w1, #0x6763, lsl #16
  4040ac:	cmp	w0, w1
  4040b0:	b.eq	4040d4 <nftw@plt+0x13e4>  // b.none
  4040b4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4040b8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4040bc:	mov	x2, x20
  4040c0:	add	x1, x1, #0x5ba
  4040c4:	ldr	x0, [x0, #1416]
  4040c8:	bl	40717c <nftw@plt+0x448c>
  4040cc:	bl	40552c <nftw@plt+0x283c>
  4040d0:	b	404080 <nftw@plt+0x1390>
  4040d4:	bl	405630 <nftw@plt+0x2940>
  4040d8:	mov	w22, w0
  4040dc:	mov	w4, #0x322a                	// #12842
  4040e0:	movk	w4, #0x4139, lsl #16
  4040e4:	cmp	w0, w4
  4040e8:	b.eq	40410c <nftw@plt+0x141c>  // b.none
  4040ec:	mov	w3, w0
  4040f0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4040f4:	mov	x2, x20
  4040f8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4040fc:	ldr	x0, [x0, #1416]
  404100:	add	x1, x1, #0x5d3
  404104:	bl	40717c <nftw@plt+0x448c>
  404108:	b	4040cc <nftw@plt+0x13dc>
  40410c:	mov	x1, #0x1                   	// #1
  404110:	mov	x0, #0x108                 	// #264
  404114:	bl	402870 <calloc@plt>
  404118:	mov	x21, x0
  40411c:	adrp	x4, 413000 <nftw@plt+0x10310>
  404120:	adrp	x3, 413000 <nftw@plt+0x10310>
  404124:	add	x4, x4, #0x8bc
  404128:	add	x3, x3, #0x894
  40412c:	mov	x2, #0x0                   	// #0
  404130:	mov	x1, #0x0                   	// #0
  404134:	add	x0, x19, #0xe0
  404138:	str	w22, [x21]
  40413c:	str	x21, [x19, #312]
  404140:	bl	43ce68 <_obstack_begin@@Base>
  404144:	mov	x0, x20
  404148:	str	wzr, [x19, #208]
  40414c:	str	xzr, [x19, #216]
  404150:	bl	402630 <strlen@plt>
  404154:	add	x22, x0, #0x1
  404158:	add	x27, sp, #0x80
  40415c:	mov	x0, x22
  404160:	bl	4027c0 <malloc@plt>
  404164:	mov	x2, x22
  404168:	mov	x1, x20
  40416c:	mov	x23, x0
  404170:	bl	4025d0 <memcpy@plt>
  404174:	str	x23, [x21, #24]
  404178:	adrp	x26, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40417c:	bl	405630 <nftw@plt+0x2940>
  404180:	str	w0, [x21, #16]
  404184:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404188:	add	x0, x0, #0x5f8
  40418c:	mov	w23, #0x0                   	// #0
  404190:	str	x0, [sp, #104]
  404194:	add	x0, x26, #0x610
  404198:	str	x0, [sp, #112]
  40419c:	bl	405630 <nftw@plt+0x2940>
  4041a0:	mov	w26, w0
  4041a4:	cbz	w0, 404324 <nftw@plt+0x1634>
  4041a8:	bl	405630 <nftw@plt+0x2940>
  4041ac:	mov	w22, w0
  4041b0:	bl	40542c <nftw@plt+0x273c>
  4041b4:	mov	w24, w0
  4041b8:	sub	w5, w26, #0x1
  4041bc:	mov	w25, #0x4                   	// #4
  4041c0:	eor	w5, w5, w26
  4041c4:	lsr	w0, w5, #1
  4041c8:	sub	w28, w25, #0x1
  4041cc:	cbz	w0, 4041f8 <nftw@plt+0x1508>
  4041d0:	and	w1, w0, #0xff
  4041d4:	cmp	w1, #0xff
  4041d8:	b.eq	4043f4 <nftw@plt+0x1704>  // b.none
  4041dc:	ldr	x1, [sp, #104]
  4041e0:	mov	w3, w26
  4041e4:	mov	x2, x20
  4041e8:	mov	w0, #0x0                   	// #0
  4041ec:	str	w5, [sp, #120]
  4041f0:	bl	407cd4 <nftw@plt+0x4fe4>
  4041f4:	ldr	w5, [sp, #120]
  4041f8:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4041fc:	add	x4, x4, #0x950
  404200:	mov	x1, x4
  404204:	ldr	w0, [x4]
  404208:	cmp	w26, w0
  40420c:	b.eq	404244 <nftw@plt+0x1554>  // b.none
  404210:	ldr	x0, [x4, #32]
  404214:	add	x4, x4, #0x18
  404218:	cbnz	x0, 404204 <nftw@plt+0x1514>
  40421c:	tst	w26, #0xffff
  404220:	b.ne	404400 <nftw@plt+0x1710>  // b.any
  404224:	mov	w0, #0xfe5f0000            	// #-27328512
  404228:	add	w0, w26, w0
  40422c:	lsr	w0, w0, #17
  404230:	cmp	w0, #0x9
  404234:	cset	w4, cc  // cc = lo, ul, last
  404238:	add	w4, w4, #0x1
  40423c:	mov	w0, #0x18                  	// #24
  404240:	smaddl	x4, w4, w0, x1
  404244:	cmp	w23, #0x0
  404248:	ccmp	w25, w23, #0x0, ne  // ne = any
  40424c:	b.ls	404298 <nftw@plt+0x15a8>  // b.plast
  404250:	sub	w23, w23, #0x1
  404254:	ldr	w0, [x27, x23, lsl #2]
  404258:	sub	w1, w0, #0x1
  40425c:	eor	w1, w1, w0
  404260:	cmp	w5, w1, lsr #8
  404264:	b.ne	40427c <nftw@plt+0x158c>  // b.any
  404268:	neg	w1, w0
  40426c:	eor	w1, w1, w0
  404270:	eor	w0, w26, w0
  404274:	tst	w1, w0
  404278:	b.eq	404298 <nftw@plt+0x15a8>  // b.none
  40427c:	ldr	x1, [sp, #112]
  404280:	mov	w3, w26
  404284:	mov	x2, x20
  404288:	mov	w0, #0x0                   	// #0
  40428c:	str	x4, [sp, #120]
  404290:	bl	407cd4 <nftw@plt+0x4fe4>
  404294:	ldr	x4, [sp, #120]
  404298:	str	w26, [x27, w28, uxtw #2]
  40429c:	ldr	x2, [x4, #16]
  4042a0:	cbz	x2, 4042e0 <nftw@plt+0x15f0>
  4042a4:	mov	w1, w22
  4042a8:	mov	w0, w26
  4042ac:	blr	x2
  4042b0:	bl	40542c <nftw@plt+0x273c>
  4042b4:	sub	w1, w0, w24
  4042b8:	mov	w3, w22
  4042bc:	sub	w0, w0, w24
  4042c0:	cmp	w22, w1
  4042c4:	b.cs	404408 <nftw@plt+0x1718>  // b.hs, b.nlast
  4042c8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4042cc:	sub	x3, x0, x3
  4042d0:	mov	x2, x20
  4042d4:	add	x1, x1, #0x633
  4042d8:	mov	w0, #0x0                   	// #0
  4042dc:	bl	407cd4 <nftw@plt+0x4fe4>
  4042e0:	mov	w1, w22
  4042e4:	mov	w0, w24
  4042e8:	bl	4057a4 <nftw@plt+0x2ab4>
  4042ec:	bl	405440 <nftw@plt+0x2750>
  4042f0:	cmp	w0, #0x0
  4042f4:	cbz	w0, 4043ec <nftw@plt+0x16fc>
  4042f8:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4042fc:	add	x1, x1, #0x582
  404300:	adrp	x22, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404304:	add	x22, x22, #0x566
  404308:	csel	x22, x22, x1, lt  // lt = tstop
  40430c:	bl	40542c <nftw@plt+0x273c>
  404310:	mov	w3, w0
  404314:	mov	x2, x20
  404318:	mov	x1, x22
  40431c:	mov	w0, #0x0                   	// #0
  404320:	bl	407cd4 <nftw@plt+0x4fe4>
  404324:	ldr	x0, [x19, #216]
  404328:	bl	403cf8 <nftw@plt+0x1008>
  40432c:	add	x0, x19, #0xe0
  404330:	ldp	x2, x1, [x0, #24]
  404334:	sub	x1, x1, x2
  404338:	cmp	x1, #0x7
  40433c:	b.hi	404348 <nftw@plt+0x1658>  // b.pmore
  404340:	mov	x1, #0x8                   	// #8
  404344:	bl	43ce94 <_obstack_newchunk@@Base>
  404348:	ldr	x1, [x19, #248]
  40434c:	ldr	x2, [x19, #216]
  404350:	str	x2, [x1]
  404354:	ldr	w2, [x19, #208]
  404358:	ldp	x3, x1, [x19, #240]
  40435c:	str	w2, [x21, #104]
  404360:	add	x1, x1, #0x8
  404364:	cmp	x1, x3
  404368:	b.ne	404378 <nftw@plt+0x1688>  // b.any
  40436c:	ldrb	w2, [x19, #304]
  404370:	orr	w2, w2, #0x2
  404374:	strb	w2, [x19, #304]
  404378:	ldr	x0, [x19, #272]
  40437c:	add	x2, x19, #0xa8
  404380:	ldr	x4, [x19, #256]
  404384:	add	x1, x1, x0
  404388:	bic	x0, x1, x0
  40438c:	str	x3, [x21, #112]
  404390:	ldr	x1, [x19, #232]
  404394:	add	x3, x21, #0x20
  404398:	sub	x5, x0, x1
  40439c:	sub	x1, x4, x1
  4043a0:	cmp	x5, x1
  4043a4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4043a8:	add	x1, x1, #0x950
  4043ac:	csel	x0, x0, x4, ls  // ls = plast
  4043b0:	add	x1, x1, #0xd8
  4043b4:	stp	x0, x0, [x19, #240]
  4043b8:	mov	x0, #0x0                   	// #0
  4043bc:	ldr	w4, [x2, x0, lsl #2]
  4043c0:	cbz	w4, 4043cc <nftw@plt+0x16dc>
  4043c4:	ldr	x4, [x1, x0, lsl #3]
  4043c8:	str	x4, [x3, x0, lsl #3]
  4043cc:	add	x0, x0, #0x1
  4043d0:	cmp	x0, #0x9
  4043d4:	b.ne	4043bc <nftw@plt+0x16cc>  // b.any
  4043d8:	bl	40552c <nftw@plt+0x283c>
  4043dc:	ldr	x0, [x19, #328]
  4043e0:	str	x0, [x21, #8]
  4043e4:	str	x21, [x19, #328]
  4043e8:	b	404080 <nftw@plt+0x1390>
  4043ec:	mov	w23, w25
  4043f0:	b	40419c <nftw@plt+0x14ac>
  4043f4:	lsr	w0, w0, #8
  4043f8:	mov	w25, w28
  4043fc:	b	4041c8 <nftw@plt+0x14d8>
  404400:	mov	w4, #0x1                   	// #1
  404404:	b	40423c <nftw@plt+0x154c>
  404408:	b.ls	4042e0 <nftw@plt+0x15f0>  // b.plast
  40440c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404410:	sub	x3, x3, x0
  404414:	mov	x2, x20
  404418:	add	x1, x1, #0x65f
  40441c:	b	4042d8 <nftw@plt+0x15e8>
  404420:	mov	w0, #0x0                   	// #0
  404424:	ret
  404428:	stp	x29, x30, [sp, #-48]!
  40442c:	mov	x29, sp
  404430:	stp	x19, x20, [sp, #16]
  404434:	lsr	w20, w1, #1
  404438:	mov	w1, #0xfe5f0000            	// #-27328512
  40443c:	add	w0, w0, w1
  404440:	str	x21, [sp, #32]
  404444:	lsr	w0, w0, #17
  404448:	cmp	w0, #0x8
  40444c:	b.ls	404468 <nftw@plt+0x1778>  // b.plast
  404450:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404454:	add	x2, x2, #0x689
  404458:	mov	w1, #0xd3                  	// #211
  40445c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404460:	add	x0, x0, #0x4a2
  404464:	bl	402d60 <nftw@plt+0x70>
  404468:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40446c:	add	x2, x2, #0x5d0
  404470:	add	x1, x2, #0xa8
  404474:	mov	w3, #0x1                   	// #1
  404478:	add	x2, x2, #0x18
  40447c:	add	x19, x2, x0, lsl #4
  404480:	str	w3, [x1, x0, lsl #2]
  404484:	lsl	x1, x0, #4
  404488:	ldr	w0, [x2, x1]
  40448c:	cbz	w0, 4044a0 <nftw@plt+0x17b0>
  404490:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404494:	mov	w1, #0xd5                  	// #213
  404498:	add	x2, x2, #0x689
  40449c:	b	40445c <nftw@plt+0x176c>
  4044a0:	str	w20, [x2, x1]
  4044a4:	ubfiz	x0, x20, #3, #31
  4044a8:	bl	4027c0 <malloc@plt>
  4044ac:	mov	x21, x0
  4044b0:	str	x0, [x19, #8]
  4044b4:	mov	x19, #0x0                   	// #0
  4044b8:	cmp	w20, w19
  4044bc:	b.eq	4044d0 <nftw@plt+0x17e0>  // b.none
  4044c0:	bl	405658 <nftw@plt+0x2968>
  4044c4:	str	x0, [x21, x19, lsl #3]
  4044c8:	add	x19, x19, #0x1
  4044cc:	b	4044b8 <nftw@plt+0x17c8>
  4044d0:	ldp	x19, x20, [sp, #16]
  4044d4:	ldr	x21, [sp, #32]
  4044d8:	ldp	x29, x30, [sp], #48
  4044dc:	ret
  4044e0:	ret
  4044e4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4044e8:	mov	w1, #0x1                   	// #1
  4044ec:	str	w1, [x0, #1808]
  4044f0:	ret
  4044f4:	stp	x29, x30, [sp, #-48]!
  4044f8:	mov	w1, #0x4                   	// #4
  4044fc:	mov	x29, sp
  404500:	str	x21, [sp, #32]
  404504:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404508:	add	x21, x21, #0x5d0
  40450c:	stp	x19, x20, [sp, #16]
  404510:	mov	x20, x0
  404514:	str	xzr, [x21, #328]
  404518:	bl	402980 <access@plt>
  40451c:	cbz	w0, 40454c <nftw@plt+0x185c>
  404520:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404524:	mov	x2, x20
  404528:	add	x1, x1, #0x696
  40452c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404530:	ldr	x0, [x0, #1416]
  404534:	bl	40717c <nftw@plt+0x448c>
  404538:	mov	x0, #0x0                   	// #0
  40453c:	ldp	x19, x20, [sp, #16]
  404540:	ldr	x21, [sp, #32]
  404544:	ldp	x29, x30, [sp], #48
  404548:	ret
  40454c:	mov	x1, #0x0                   	// #0
  404550:	mov	x0, #0x0                   	// #0
  404554:	bl	402600 <getcwd@plt>
  404558:	mov	x19, x0
  40455c:	cbnz	x0, 404578 <nftw@plt+0x1888>
  404560:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404564:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404568:	add	x2, x2, #0x6b2
  40456c:	add	x0, x0, #0x4a2
  404570:	mov	w1, #0x1c6                 	// #454
  404574:	bl	402d60 <nftw@plt+0x70>
  404578:	mov	x0, x20
  40457c:	bl	402a60 <chdir@plt>
  404580:	cbz	w0, 404594 <nftw@plt+0x18a4>
  404584:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404588:	mov	x2, x20
  40458c:	add	x1, x1, #0x6c8
  404590:	b	40452c <nftw@plt+0x183c>
  404594:	adrp	x1, 403000 <nftw@plt+0x310>
  404598:	add	x1, x1, #0xfcc
  40459c:	mov	w2, #0x32                  	// #50
  4045a0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4045a4:	add	x0, x0, #0x77f
  4045a8:	bl	402c60 <ftw@plt>
  4045ac:	mov	x0, x19
  4045b0:	bl	402a60 <chdir@plt>
  4045b4:	mov	x0, x19
  4045b8:	bl	402a80 <free@plt>
  4045bc:	ldr	x0, [x21, #328]
  4045c0:	b	40453c <nftw@plt+0x184c>
  4045c4:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4045c8:	add	x1, x2, #0x5d0
  4045cc:	ldp	w0, w3, [x1, #8]
  4045d0:	cmp	w0, w3
  4045d4:	b.cc	4045f8 <nftw@plt+0x1908>  // b.lo, b.ul, b.last
  4045d8:	stp	x29, x30, [sp, #-16]!
  4045dc:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4045e0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4045e4:	mov	x29, sp
  4045e8:	add	x2, x2, #0x6df
  4045ec:	add	x0, x0, #0x4a2
  4045f0:	mov	w1, #0x1ed                 	// #493
  4045f4:	bl	402d60 <nftw@plt+0x70>
  4045f8:	ldr	x2, [x2, #1488]
  4045fc:	add	w3, w0, #0x1
  404600:	str	w3, [x1, #8]
  404604:	ldr	x0, [x2, w0, uxtw #3]
  404608:	ret
  40460c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404610:	ldr	w0, [x0, #1504]
  404614:	ret
  404618:	stp	x29, x30, [sp, #-128]!
  40461c:	mov	x29, sp
  404620:	stp	x19, x20, [sp, #16]
  404624:	mov	x19, x1
  404628:	stp	x21, x22, [sp, #32]
  40462c:	mov	x21, x0
  404630:	mov	w22, w3
  404634:	stp	x23, x24, [sp, #48]
  404638:	mov	w24, w2
  40463c:	mov	w23, #0x0                   	// #0
  404640:	stp	x25, x26, [sp, #64]
  404644:	stp	x27, x28, [sp, #80]
  404648:	cbz	x0, 404658 <nftw@plt+0x1968>
  40464c:	add	w23, w23, #0x1
  404650:	ldr	x0, [x0, #8]
  404654:	b	404648 <nftw@plt+0x1958>
  404658:	mov	x0, x19
  40465c:	mov	w25, #0x0                   	// #0
  404660:	cbz	x0, 404670 <nftw@plt+0x1980>
  404664:	add	w25, w25, #0x1
  404668:	ldr	x0, [x0, #8]
  40466c:	b	404660 <nftw@plt+0x1970>
  404670:	ubfiz	x0, x23, #3, #32
  404674:	bl	4027c0 <malloc@plt>
  404678:	mov	x20, x0
  40467c:	ubfiz	x0, x25, #3, #32
  404680:	bl	4027c0 <malloc@plt>
  404684:	mov	x25, x0
  404688:	mov	w0, #0x0                   	// #0
  40468c:	cbz	x21, 4046a0 <nftw@plt+0x19b0>
  404690:	str	x21, [x20, w0, uxtw #3]
  404694:	add	w0, w0, #0x1
  404698:	ldr	x21, [x21, #8]
  40469c:	b	40468c <nftw@plt+0x199c>
  4046a0:	sub	w0, w23, #0x1
  4046a4:	cmp	w24, #0x1
  4046a8:	ldr	x26, [x20, x0, lsl #3]
  4046ac:	b.gt	404730 <nftw@plt+0x1a40>
  4046b0:	adrp	x27, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4046b4:	add	x27, x27, #0x6f5
  4046b8:	mov	w24, #0x0                   	// #0
  4046bc:	adrp	x28, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4046c0:	cbz	x19, 404760 <nftw@plt+0x1a70>
  4046c4:	mov	x21, #0x0                   	// #0
  4046c8:	cmp	w23, w21
  4046cc:	b.le	404720 <nftw@plt+0x1a30>
  4046d0:	ldr	x5, [x20, x21, lsl #3]
  4046d4:	add	x3, x20, x21, lsl #3
  4046d8:	str	x3, [sp, #120]
  4046dc:	cbz	x5, 404758 <nftw@plt+0x1a68>
  4046e0:	ldr	x2, [x5, #24]
  4046e4:	stp	x2, x5, [sp, #104]
  4046e8:	ldr	x1, [x19, #24]
  4046ec:	mov	x0, x2
  4046f0:	bl	402a00 <strcmp@plt>
  4046f4:	ldp	x2, x5, [sp, #104]
  4046f8:	ldr	x3, [sp, #120]
  4046fc:	cbnz	w0, 404758 <nftw@plt+0x1a68>
  404700:	ldr	w4, [x19, #104]
  404704:	str	xzr, [x3]
  404708:	ldr	w3, [x5, #104]
  40470c:	cmp	w3, w4
  404710:	b.eq	404798 <nftw@plt+0x1aa8>  // b.none
  404714:	ldr	x0, [x28, #1416]
  404718:	mov	x1, x27
  40471c:	bl	40717c <nftw@plt+0x448c>
  404720:	str	x19, [x25, w24, uxtw #3]
  404724:	add	w24, w24, #0x1
  404728:	ldr	x19, [x19, #8]
  40472c:	b	4046c0 <nftw@plt+0x19d0>
  404730:	sub	w24, w24, #0x1
  404734:	mov	x21, #0x0                   	// #0
  404738:	cmp	w23, w21
  40473c:	b.ls	4046b0 <nftw@plt+0x19c0>  // b.plast
  404740:	ldr	x1, [x20, x21, lsl #3]
  404744:	mov	w2, w24
  404748:	add	x21, x21, #0x1
  40474c:	mov	x0, x1
  404750:	bl	403afc <nftw@plt+0xe0c>
  404754:	b	404738 <nftw@plt+0x1a48>
  404758:	add	x21, x21, #0x1
  40475c:	b	4046c8 <nftw@plt+0x19d8>
  404760:	sub	w22, w22, #0x1
  404764:	mov	x20, #0x0                   	// #0
  404768:	cmp	w24, w20
  40476c:	b.ls	4047ac <nftw@plt+0x1abc>  // b.plast
  404770:	ldr	x19, [x25, x20, lsl #3]
  404774:	mov	w2, w22
  404778:	add	x20, x20, #0x1
  40477c:	mov	x1, x19
  404780:	mov	x0, x19
  404784:	bl	403afc <nftw@plt+0xe0c>
  404788:	str	xzr, [x19, #8]
  40478c:	str	x19, [x26, #8]
  404790:	mov	x26, x19
  404794:	b	404768 <nftw@plt+0x1a78>
  404798:	mov	w2, w22
  40479c:	mov	x1, x19
  4047a0:	mov	x0, x5
  4047a4:	bl	403afc <nftw@plt+0xe0c>
  4047a8:	b	404728 <nftw@plt+0x1a38>
  4047ac:	mov	w0, #0x0                   	// #0
  4047b0:	ldp	x19, x20, [sp, #16]
  4047b4:	ldp	x21, x22, [sp, #32]
  4047b8:	ldp	x23, x24, [sp, #48]
  4047bc:	ldp	x25, x26, [sp, #64]
  4047c0:	ldp	x27, x28, [sp, #80]
  4047c4:	ldp	x29, x30, [sp], #128
  4047c8:	ret
  4047cc:	stp	x29, x30, [sp, #-80]!
  4047d0:	mov	x29, sp
  4047d4:	stp	x19, x20, [sp, #16]
  4047d8:	mov	x19, x0
  4047dc:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4047e0:	stp	x21, x22, [sp, #32]
  4047e4:	ldr	w0, [x0, #1808]
  4047e8:	str	x23, [sp, #48]
  4047ec:	stp	w2, w1, [sp, #68]
  4047f0:	str	s0, [sp, #76]
  4047f4:	cbz	w0, 404818 <nftw@plt+0x1b28>
  4047f8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4047fc:	fcvt	d0, s0
  404800:	mov	w3, w2
  404804:	mov	w2, w1
  404808:	ldr	x0, [x0, #1440]
  40480c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404810:	add	x1, x1, #0x72f
  404814:	bl	40717c <nftw@plt+0x448c>
  404818:	adrp	x21, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40481c:	add	x21, x21, #0x950
  404820:	add	x21, x21, #0x120
  404824:	cbz	x19, 4048c4 <nftw@plt+0x1bd4>
  404828:	mov	w23, #0x0                   	// #0
  40482c:	ldr	w0, [x19, #104]
  404830:	cmp	w0, w23
  404834:	b.ls	4048bc <nftw@plt+0x1bcc>  // b.plast
  404838:	ldr	x0, [x19, #112]
  40483c:	ldr	x20, [x0, w23, uxtw #3]
  404840:	cbnz	x20, 40484c <nftw@plt+0x1b5c>
  404844:	add	w23, w23, #0x1
  404848:	b	40482c <nftw@plt+0x1b3c>
  40484c:	ldr	x0, [x20]
  404850:	cmp	x0, x19
  404854:	b.ne	404844 <nftw@plt+0x1b54>  // b.any
  404858:	add	x20, x20, #0x18
  40485c:	mov	x22, #0x0                   	// #0
  404860:	add	x0, x19, #0x20
  404864:	ldr	x0, [x0, x22]
  404868:	cbz	x0, 404898 <nftw@plt+0x1ba8>
  40486c:	ldr	w2, [sp, #68]
  404870:	ldr	w1, [x20]
  404874:	ldr	x5, [x22, x21]
  404878:	ldr	x0, [x20, #8]
  40487c:	cbnz	w2, 4048a8 <nftw@plt+0x1bb8>
  404880:	adrp	x2, 403000 <nftw@plt+0x310>
  404884:	add	x3, sp, #0x4c
  404888:	add	x2, x2, #0xa60
  40488c:	mov	x4, #0x0                   	// #0
  404890:	add	x20, x20, #0x10
  404894:	blr	x5
  404898:	add	x22, x22, #0x8
  40489c:	cmp	x22, #0x48
  4048a0:	b.ne	404860 <nftw@plt+0x1b70>  // b.any
  4048a4:	b	404844 <nftw@plt+0x1b54>
  4048a8:	adrp	x2, 403000 <nftw@plt+0x310>
  4048ac:	add	x4, sp, #0x44
  4048b0:	add	x3, sp, #0x48
  4048b4:	add	x2, x2, #0xa74
  4048b8:	b	404890 <nftw@plt+0x1ba0>
  4048bc:	ldr	x19, [x19, #8]
  4048c0:	b	404824 <nftw@plt+0x1b34>
  4048c4:	mov	w0, #0x0                   	// #0
  4048c8:	ldp	x19, x20, [sp, #16]
  4048cc:	ldp	x21, x22, [sp, #32]
  4048d0:	ldr	x23, [sp, #48]
  4048d4:	ldp	x29, x30, [sp], #80
  4048d8:	ret
  4048dc:	stp	x29, x30, [sp, #-32]!
  4048e0:	mov	x3, x0
  4048e4:	mov	x2, #0x0                   	// #0
  4048e8:	mov	x29, sp
  4048ec:	str	x19, [sp, #16]
  4048f0:	mov	x19, x0
  4048f4:	str	d8, [sp, #24]
  4048f8:	cbz	x3, 40495c <nftw@plt+0x1c6c>
  4048fc:	ldr	w7, [x3, #104]
  404900:	mov	x0, #0x0                   	// #0
  404904:	cmp	w7, w0
  404908:	b.ls	404954 <nftw@plt+0x1c64>  // b.plast
  40490c:	ldr	x4, [x3, #112]
  404910:	ldr	x5, [x4, x0, lsl #3]
  404914:	cbz	x5, 40494c <nftw@plt+0x1c5c>
  404918:	ldr	x4, [x5]
  40491c:	cmp	x4, x3
  404920:	b.ne	40494c <nftw@plt+0x1c5c>  // b.any
  404924:	ldr	w8, [x5, #24]
  404928:	mov	x4, #0x0                   	// #0
  40492c:	cmp	w8, w4
  404930:	b.ls	40494c <nftw@plt+0x1c5c>  // b.plast
  404934:	ldr	x6, [x5, #32]
  404938:	ldr	x6, [x6, x4, lsl #3]
  40493c:	add	x4, x4, #0x1
  404940:	cmp	x2, x6
  404944:	csel	x2, x2, x6, ge  // ge = tcont
  404948:	b	40492c <nftw@plt+0x1c3c>
  40494c:	add	x0, x0, #0x1
  404950:	b	404904 <nftw@plt+0x1c14>
  404954:	ldr	x3, [x3, #8]
  404958:	b	4048f8 <nftw@plt+0x1c08>
  40495c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404960:	scvtf	s8, x1
  404964:	scvtf	s0, x2
  404968:	ldr	w0, [x0, #1808]
  40496c:	fdiv	s8, s8, s0
  404970:	cbz	w0, 404988 <nftw@plt+0x1c98>
  404974:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404978:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40497c:	add	x1, x1, #0x74c
  404980:	ldr	x0, [x0, #1440]
  404984:	bl	40717c <nftw@plt+0x448c>
  404988:	fmov	s0, s8
  40498c:	mov	x0, x19
  404990:	ldr	x19, [sp, #16]
  404994:	mov	w2, #0x0                   	// #0
  404998:	ldr	d8, [sp, #24]
  40499c:	mov	w1, #0x0                   	// #0
  4049a0:	ldp	x29, x30, [sp], #32
  4049a4:	b	4047cc <nftw@plt+0x1adc>
  4049a8:	stp	x29, x30, [sp, #-176]!
  4049ac:	mov	x29, sp
  4049b0:	stp	x21, x22, [sp, #32]
  4049b4:	mov	x21, x0
  4049b8:	mov	x22, x1
  4049bc:	stp	x19, x20, [sp, #16]
  4049c0:	stp	x23, x24, [sp, #48]
  4049c4:	mov	w23, #0x0                   	// #0
  4049c8:	stp	x25, x26, [sp, #64]
  4049cc:	stp	x27, x28, [sp, #80]
  4049d0:	stp	d8, d9, [sp, #96]
  4049d4:	stp	d10, d11, [sp, #112]
  4049d8:	stp	d12, d13, [sp, #128]
  4049dc:	cbz	x0, 4049ec <nftw@plt+0x1cfc>
  4049e0:	add	w23, w23, #0x1
  4049e4:	ldr	x0, [x0, #8]
  4049e8:	b	4049dc <nftw@plt+0x1cec>
  4049ec:	mov	x0, x22
  4049f0:	mov	w20, #0x0                   	// #0
  4049f4:	cbz	x0, 404a04 <nftw@plt+0x1d14>
  4049f8:	add	w20, w20, #0x1
  4049fc:	ldr	x0, [x0, #8]
  404a00:	b	4049f4 <nftw@plt+0x1d04>
  404a04:	add	w20, w23, w20
  404a08:	mov	w0, #0x30                  	// #48
  404a0c:	umull	x0, w20, w0
  404a10:	bl	4027c0 <malloc@plt>
  404a14:	mov	x19, x0
  404a18:	mov	w3, #0x18                  	// #24
  404a1c:	mov	w0, #0x0                   	// #0
  404a20:	cbnz	x21, 404ac8 <nftw@plt+0x1dd8>
  404a24:	mov	w21, #0x18                  	// #24
  404a28:	cbnz	x22, 404ae4 <nftw@plt+0x1df4>
  404a2c:	umaddl	x21, w23, w21, x19
  404a30:	adrp	x26, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404a34:	mov	w25, w23
  404a38:	add	x26, x26, #0x6f5
  404a3c:	adrp	x28, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404a40:	cmp	w20, w25
  404a44:	b.hi	404b00 <nftw@plt+0x1e10>  // b.pmore
  404a48:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404a4c:	movi	d1, #0x0
  404a50:	adrp	x8, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404a54:	mov	x10, x19
  404a58:	ldr	d0, [x24, #936]
  404a5c:	add	x8, x8, #0x5d0
  404a60:	mov	w23, #0x0                   	// #0
  404a64:	mov	w12, #0x44                  	// #68
  404a68:	mov	w13, #0x22                  	// #34
  404a6c:	mov	w14, #0x11                  	// #17
  404a70:	cmp	w20, w23
  404a74:	b.eq	404c94 <nftw@plt+0x1fa4>  // b.none
  404a78:	ldp	x9, x11, [x10]
  404a7c:	cbnz	x9, 404b7c <nftw@plt+0x1e8c>
  404a80:	cbz	x11, 404c08 <nftw@plt+0x1f18>
  404a84:	ldr	w0, [x8, #340]
  404a88:	mov	w9, #0x8                   	// #8
  404a8c:	add	w0, w0, #0x1
  404a90:	str	w0, [x8, #340]
  404a94:	ldr	w0, [x8, #348]
  404a98:	mov	x1, #0x0                   	// #0
  404a9c:	add	w0, w0, #0x1
  404aa0:	str	w0, [x8, #348]
  404aa4:	mov	x0, x11
  404aa8:	bl	403a98 <nftw@plt+0xda8>
  404aac:	tst	w0, #0xff
  404ab0:	b.eq	404c54 <nftw@plt+0x1f64>  // b.none
  404ab4:	ldr	w0, [x8, #356]
  404ab8:	orr	w9, w9, #0x10
  404abc:	add	w0, w0, #0x1
  404ac0:	str	w0, [x8, #356]
  404ac4:	b	404bc0 <nftw@plt+0x1ed0>
  404ac8:	umull	x1, w0, w3
  404acc:	add	w0, w0, #0x1
  404ad0:	add	x2, x19, x1
  404ad4:	str	x21, [x19, x1]
  404ad8:	str	xzr, [x2, #8]
  404adc:	ldr	x21, [x21, #8]
  404ae0:	b	404a20 <nftw@plt+0x1d30>
  404ae4:	umull	x1, w0, w21
  404ae8:	add	w0, w0, #0x1
  404aec:	add	x2, x19, x1
  404af0:	str	xzr, [x19, x1]
  404af4:	str	x22, [x2, #8]
  404af8:	ldr	x22, [x22, #8]
  404afc:	b	404a28 <nftw@plt+0x1d38>
  404b00:	ldr	x24, [x21, #8]
  404b04:	cbz	x24, 404b70 <nftw@plt+0x1e80>
  404b08:	mov	x22, x19
  404b0c:	mov	w27, #0x0                   	// #0
  404b10:	cmp	w23, w27
  404b14:	b.eq	404b70 <nftw@plt+0x1e80>  // b.none
  404b18:	ldr	x0, [x22, #8]
  404b1c:	cbnz	x0, 404b5c <nftw@plt+0x1e6c>
  404b20:	ldr	x4, [x22]
  404b24:	ldr	x2, [x24, #24]
  404b28:	stp	x2, x4, [sp, #144]
  404b2c:	ldr	x1, [x4, #24]
  404b30:	mov	x0, x2
  404b34:	bl	402a00 <strcmp@plt>
  404b38:	cbnz	w0, 404b5c <nftw@plt+0x1e6c>
  404b3c:	ldp	x2, x4, [sp, #144]
  404b40:	ldr	w3, [x24, #104]
  404b44:	ldr	w4, [x4, #104]
  404b48:	cmp	w3, w4
  404b4c:	b.eq	404b68 <nftw@plt+0x1e78>  // b.none
  404b50:	ldr	x0, [x28, #1416]
  404b54:	mov	x1, x26
  404b58:	bl	40717c <nftw@plt+0x448c>
  404b5c:	add	w27, w27, #0x1
  404b60:	add	x22, x22, #0x18
  404b64:	b	404b10 <nftw@plt+0x1e20>
  404b68:	str	x24, [x22, #8]
  404b6c:	str	xzr, [x21, #8]
  404b70:	add	w25, w25, #0x1
  404b74:	add	x21, x21, #0x18
  404b78:	b	404a40 <nftw@plt+0x1d50>
  404b7c:	ldr	w0, [x8, #344]
  404b80:	mov	x1, #0x0                   	// #0
  404b84:	add	w0, w0, #0x1
  404b88:	str	w0, [x8, #344]
  404b8c:	mov	x0, x9
  404b90:	bl	403a98 <nftw@plt+0xda8>
  404b94:	tst	w0, #0xff
  404b98:	b.eq	404c14 <nftw@plt+0x1f24>  // b.none
  404b9c:	ldr	w0, [x8, #352]
  404ba0:	mov	w9, #0x1                   	// #1
  404ba4:	add	w0, w0, #0x1
  404ba8:	str	w0, [x8, #352]
  404bac:	cbnz	x11, 404a94 <nftw@plt+0x1da4>
  404bb0:	ldr	w0, [x8, #336]
  404bb4:	orr	w9, w9, #0x80
  404bb8:	add	w0, w0, #0x1
  404bbc:	str	w0, [x8, #336]
  404bc0:	strb	w9, [x10, #16]
  404bc4:	tst	w9, w12
  404bc8:	b.eq	404bd8 <nftw@plt+0x1ee8>  // b.none
  404bcc:	ldr	w0, [x8, #376]
  404bd0:	add	w0, w0, #0x1
  404bd4:	str	w0, [x8, #376]
  404bd8:	and	w0, w9, w13
  404bdc:	cmp	w0, #0x22
  404be0:	b.ne	404bf0 <nftw@plt+0x1f00>  // b.any
  404be4:	ldr	w0, [x8, #380]
  404be8:	add	w0, w0, #0x1
  404bec:	str	w0, [x8, #380]
  404bf0:	and	w9, w9, w14
  404bf4:	cmp	w9, #0x11
  404bf8:	b.ne	404c08 <nftw@plt+0x1f18>  // b.any
  404bfc:	ldr	w0, [x8, #384]
  404c00:	add	w0, w0, #0x1
  404c04:	str	w0, [x8, #384]
  404c08:	add	w23, w23, #0x1
  404c0c:	add	x10, x10, #0x18
  404c10:	b	404a70 <nftw@plt+0x1d80>
  404c14:	fmul	d2, d0, d1
  404c18:	mov	x0, x9
  404c1c:	fcvtzs	x1, d2
  404c20:	bl	403a98 <nftw@plt+0xda8>
  404c24:	tst	w0, #0xff
  404c28:	b.eq	404c40 <nftw@plt+0x1f50>  // b.none
  404c2c:	ldr	w0, [x8, #360]
  404c30:	mov	w9, #0x2                   	// #2
  404c34:	add	w0, w0, #0x1
  404c38:	str	w0, [x8, #360]
  404c3c:	b	404bac <nftw@plt+0x1ebc>
  404c40:	ldr	w0, [x8, #368]
  404c44:	mov	w9, #0x4                   	// #4
  404c48:	add	w0, w0, #0x1
  404c4c:	str	w0, [x8, #368]
  404c50:	b	404bac <nftw@plt+0x1ebc>
  404c54:	fmul	d2, d0, d1
  404c58:	mov	x0, x11
  404c5c:	fcvtzs	x1, d2
  404c60:	bl	403a98 <nftw@plt+0xda8>
  404c64:	tst	w0, #0xff
  404c68:	b.eq	404c80 <nftw@plt+0x1f90>  // b.none
  404c6c:	ldr	w0, [x8, #364]
  404c70:	orr	w9, w9, #0x20
  404c74:	add	w0, w0, #0x1
  404c78:	str	w0, [x8, #364]
  404c7c:	b	404bc0 <nftw@plt+0x1ed0>
  404c80:	ldr	w0, [x8, #372]
  404c84:	orr	w9, w9, #0x40
  404c88:	add	w0, w0, #0x1
  404c8c:	str	w0, [x8, #372]
  404c90:	b	404bc0 <nftw@plt+0x1ed0>
  404c94:	movi	d8, #0x0
  404c98:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404c9c:	mov	w25, #0x0                   	// #0
  404ca0:	ldr	d9, [x0, #2376]
  404ca4:	fmov	d10, d8
  404ca8:	fmov	d11, d8
  404cac:	cmp	w23, w25
  404cb0:	b.eq	404f48 <nftw@plt+0x2258>  // b.none
  404cb4:	ldr	x22, [x19]
  404cb8:	cbnz	x22, 404cc4 <nftw@plt+0x1fd4>
  404cbc:	ldr	x0, [x19, #8]
  404cc0:	cbz	x0, 404ee8 <nftw@plt+0x21f8>
  404cc4:	ldrb	w26, [x19, #16]
  404cc8:	mov	w0, #0x11                  	// #17
  404ccc:	and	w0, w26, w0
  404cd0:	cmp	w0, #0x11
  404cd4:	b.eq	404ee8 <nftw@plt+0x21f8>  // b.none
  404cd8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404cdc:	ldr	x21, [x19, #8]
  404ce0:	ldr	w0, [x0, #1472]
  404ce4:	cbz	x22, 404d3c <nftw@plt+0x204c>
  404ce8:	ldr	x20, [x22, #24]
  404cec:	cbnz	w0, 404cfc <nftw@plt+0x200c>
  404cf0:	mov	x0, x20
  404cf4:	bl	403c94 <nftw@plt+0xfa4>
  404cf8:	mov	x20, x0
  404cfc:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404d00:	add	x27, x0, #0x5bc
  404d04:	ldr	w0, [x0, #1468]
  404d08:	cbz	w0, 404d1c <nftw@plt+0x202c>
  404d0c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404d10:	mov	x1, x20
  404d14:	add	x0, x0, #0x75c
  404d18:	bl	402c10 <printf@plt>
  404d1c:	orr	x0, x22, x21
  404d20:	cbnz	x0, 404d44 <nftw@plt+0x2054>
  404d24:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404d28:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404d2c:	add	x2, x2, #0x772
  404d30:	add	x0, x0, #0x4a2
  404d34:	mov	w1, #0x392                 	// #914
  404d38:	bl	402d60 <nftw@plt+0x70>
  404d3c:	ldr	x20, [x21, #24]
  404d40:	b	404cec <nftw@plt+0x1ffc>
  404d44:	cbnz	x22, 404e20 <nftw@plt+0x2130>
  404d48:	str	xzr, [sp, #160]
  404d4c:	cbnz	x21, 404e88 <nftw@plt+0x2198>
  404d50:	movi	d12, #0x0
  404d54:	adrp	x5, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404d58:	add	x5, x5, #0x5c8
  404d5c:	mov	w28, #0x0                   	// #0
  404d60:	fmov	d13, d12
  404d64:	ldr	w0, [x22, #104]
  404d68:	cmp	w0, w28
  404d6c:	b.ls	404f40 <nftw@plt+0x2250>  // b.plast
  404d70:	ldr	x0, [x22, #112]
  404d74:	ubfiz	x1, x28, #3, #32
  404d78:	ldr	x0, [x0, x1]
  404d7c:	cbz	x0, 404f38 <nftw@plt+0x2248>
  404d80:	ldr	x2, [x0]
  404d84:	cmp	x22, x2
  404d88:	b.ne	404f38 <nftw@plt+0x2248>  // b.any
  404d8c:	ldr	x2, [x21, #112]
  404d90:	ldr	x6, [x2, x1]
  404d94:	cbz	x6, 404f38 <nftw@plt+0x2248>
  404d98:	ldr	x1, [x6]
  404d9c:	cmp	x21, x1
  404da0:	b.ne	404f38 <nftw@plt+0x2248>  // b.any
  404da4:	movi	d2, #0x0
  404da8:	ldr	w7, [x0, #24]
  404dac:	ldr	d4, [x24, #936]
  404db0:	mov	x3, #0x0                   	// #0
  404db4:	mov	w1, #0x0                   	// #0
  404db8:	mov	w2, #0x0                   	// #0
  404dbc:	fmov	d1, d2
  404dc0:	cmp	w7, w3
  404dc4:	b.ls	404ef4 <nftw@plt+0x2204>  // b.plast
  404dc8:	ldr	x8, [x0, #32]
  404dcc:	lsl	x4, x3, #3
  404dd0:	ldr	d3, [x8, x4]
  404dd4:	ldr	x8, [x6, #32]
  404dd8:	ldr	d0, [x8, x4]
  404ddc:	orr	v5.8b, v3.8b, v0.8b
  404de0:	fmov	x4, d5
  404de4:	cbz	x4, 404e18 <nftw@plt+0x2128>
  404de8:	scvtf	d3, d3
  404dec:	scvtf	d0, d0
  404df0:	fdiv	d3, d3, d11
  404df4:	fdiv	d0, d0, d11
  404df8:	fcmpe	d3, d4
  404dfc:	fadd	d1, d1, d3
  404e00:	fadd	d2, d2, d0
  404e04:	b.ge	404e10 <nftw@plt+0x2120>  // b.tcont
  404e08:	fcmpe	d0, d4
  404e0c:	b.lt	404e14 <nftw@plt+0x2124>  // b.tstop
  404e10:	mov	w1, #0x1                   	// #1
  404e14:	mov	w2, #0x1                   	// #1
  404e18:	add	x3, x3, #0x1
  404e1c:	b	404dc0 <nftw@plt+0x20d0>
  404e20:	cbnz	x21, 404d50 <nftw@plt+0x2060>
  404e24:	mov	x21, x22
  404e28:	add	x3, sp, #0xa0
  404e2c:	str	xzr, [sp, #168]
  404e30:	movi	d1, #0x0
  404e34:	ldr	w4, [x21, #104]
  404e38:	mov	x0, #0x0                   	// #0
  404e3c:	cmp	w4, w0
  404e40:	b.ls	404e98 <nftw@plt+0x21a8>  // b.plast
  404e44:	ldr	x1, [x21, #112]
  404e48:	ldr	x2, [x1, x0, lsl #3]
  404e4c:	cbz	x2, 404e90 <nftw@plt+0x21a0>
  404e50:	ldr	x1, [x2]
  404e54:	cmp	x21, x1
  404e58:	b.ne	404e90 <nftw@plt+0x21a0>  // b.any
  404e5c:	ldr	w6, [x2, #24]
  404e60:	mov	x1, #0x0                   	// #0
  404e64:	cmp	w6, w1
  404e68:	b.ls	404e90 <nftw@plt+0x21a0>  // b.plast
  404e6c:	ldr	x5, [x2, #32]
  404e70:	ldr	d0, [x5, x1, lsl #3]
  404e74:	add	x1, x1, #0x1
  404e78:	scvtf	d0, d0
  404e7c:	fdiv	d0, d0, d11
  404e80:	fadd	d1, d1, d0
  404e84:	b	404e64 <nftw@plt+0x2174>
  404e88:	add	x3, sp, #0xa8
  404e8c:	b	404e30 <nftw@plt+0x2140>
  404e90:	add	x0, x0, #0x1
  404e94:	b	404e3c <nftw@plt+0x214c>
  404e98:	str	d1, [x3]
  404e9c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404ea0:	ldr	w0, [x0, #1476]
  404ea4:	cbz	w0, 404ee8 <nftw@plt+0x21f8>
  404ea8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404eac:	ldr	w0, [x0, #1480]
  404eb0:	cbz	w0, 404ec0 <nftw@plt+0x21d0>
  404eb4:	mov	w0, #0x44                  	// #68
  404eb8:	tst	w26, w0
  404ebc:	b.eq	404ee8 <nftw@plt+0x21f8>  // b.none
  404ec0:	ldp	d13, d12, [sp, #160]
  404ec4:	movi	d0, #0x0
  404ec8:	mov	x1, x20
  404ecc:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404ed0:	add	x0, x0, #0x7b9
  404ed4:	fmul	d2, d12, d9
  404ed8:	fmul	d1, d13, d9
  404edc:	bl	402c10 <printf@plt>
  404ee0:	fadd	d10, d10, d13
  404ee4:	fadd	d8, d8, d12
  404ee8:	add	w25, w25, #0x1
  404eec:	add	x19, x19, #0x18
  404ef0:	b	404cac <nftw@plt+0x1fbc>
  404ef4:	ldr	w3, [x27]
  404ef8:	fadd	d13, d13, d1
  404efc:	fadd	d12, d12, d2
  404f00:	cbz	w3, 404f38 <nftw@plt+0x2248>
  404f04:	cbz	w2, 404f38 <nftw@plt+0x2248>
  404f08:	ldr	w2, [x5]
  404f0c:	cbz	w2, 404f14 <nftw@plt+0x2224>
  404f10:	cbz	w1, 404f38 <nftw@plt+0x2248>
  404f14:	ldr	w1, [x0, #8]
  404f18:	fmul	d2, d2, d9
  404f1c:	fmul	d1, d1, d9
  404f20:	movi	d0, #0x0
  404f24:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404f28:	add	x0, x0, #0x783
  404f2c:	bl	402c10 <printf@plt>
  404f30:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404f34:	add	x5, x0, #0x5c8
  404f38:	add	w28, w28, #0x1
  404f3c:	b	404d64 <nftw@plt+0x2074>
  404f40:	stp	d13, d12, [sp, #160]
  404f44:	b	404e9c <nftw@plt+0x21ac>
  404f48:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404f4c:	ldr	w0, [x0, #1476]
  404f50:	cbz	w0, 404f7c <nftw@plt+0x228c>
  404f54:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404f58:	movi	d0, #0x0
  404f5c:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  404f60:	add	x1, x1, #0xe54
  404f64:	ldr	d1, [x0, #2376]
  404f68:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404f6c:	add	x0, x0, #0x7eb
  404f70:	fmul	d2, d8, d1
  404f74:	fmul	d1, d10, d1
  404f78:	bl	402c10 <printf@plt>
  404f7c:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  404f80:	add	x19, x19, #0x5d0
  404f84:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404f88:	add	x0, x0, #0x81d
  404f8c:	bl	4029a0 <puts@plt>
  404f90:	ldr	w1, [x19, #344]
  404f94:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404f98:	ldr	w2, [x19, #348]
  404f9c:	add	x0, x0, #0x869
  404fa0:	ldr	w3, [x19, #336]
  404fa4:	sub	w3, w1, w3
  404fa8:	bl	402c10 <printf@plt>
  404fac:	ldr	w1, [x19, #336]
  404fb0:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404fb4:	ldr	w2, [x19, #340]
  404fb8:	add	x0, x0, #0x88a
  404fbc:	bl	402c10 <printf@plt>
  404fc0:	ldr	w1, [x19, #368]
  404fc4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404fc8:	ldr	w2, [x19, #372]
  404fcc:	add	x0, x0, #0x8a6
  404fd0:	ldr	w3, [x19, #376]
  404fd4:	bl	402c10 <printf@plt>
  404fd8:	ldr	w1, [x19, #360]
  404fdc:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404fe0:	ldr	w2, [x19, #364]
  404fe4:	add	x0, x0, #0x8c7
  404fe8:	ldr	w3, [x19, #380]
  404fec:	bl	402c10 <printf@plt>
  404ff0:	ldr	w1, [x19, #352]
  404ff4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  404ff8:	ldr	w2, [x19, #356]
  404ffc:	add	x0, x0, #0x8e8
  405000:	ldr	w3, [x19, #384]
  405004:	bl	402c10 <printf@plt>
  405008:	mov	w0, #0x1                   	// #1
  40500c:	ldp	x19, x20, [sp, #16]
  405010:	ldp	x21, x22, [sp, #32]
  405014:	ldp	x23, x24, [sp, #48]
  405018:	ldp	x25, x26, [sp, #64]
  40501c:	ldp	x27, x28, [sp, #80]
  405020:	ldp	d8, d9, [sp, #96]
  405024:	ldp	d10, d11, [sp, #112]
  405028:	ldp	d12, d13, [sp, #128]
  40502c:	ldp	x29, x30, [sp], #176
  405030:	ret
  405034:	stp	x29, x30, [sp, #-32]!
  405038:	mov	x2, #0x1                   	// #1
  40503c:	mov	x29, sp
  405040:	stp	x19, x20, [sp, #16]
  405044:	mov	w20, w0
  405048:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40504c:	lsl	w1, w20, #2
  405050:	add	x19, x0, #0x760
  405054:	ldr	x3, [x0, #1888]
  405058:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40505c:	add	x0, x0, #0x780
  405060:	bl	402ac0 <fwrite@plt>
  405064:	cmp	x0, #0x1
  405068:	b.eq	405074 <nftw@plt+0x2384>  // b.none
  40506c:	mov	w0, #0x1                   	// #1
  405070:	str	w0, [x19, #24]
  405074:	ldr	w0, [x19, #8]
  405078:	add	w0, w0, w20
  40507c:	str	w0, [x19, #8]
  405080:	ldr	w0, [x19, #12]
  405084:	sub	w20, w0, w20
  405088:	str	w20, [x19, #12]
  40508c:	ldp	x19, x20, [sp, #16]
  405090:	ldp	x29, x30, [sp], #32
  405094:	ret
  405098:	stp	x29, x30, [sp, #-32]!
  40509c:	mov	x29, sp
  4050a0:	stp	x19, x20, [sp, #16]
  4050a4:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4050a8:	add	x19, x19, #0x760
  4050ac:	mov	w20, w0
  4050b0:	ldr	w0, [x19, #12]
  4050b4:	cmp	w0, #0x3ff
  4050b8:	b.ls	4050d4 <nftw@plt+0x23e4>  // b.plast
  4050bc:	mov	w0, #0x400                 	// #1024
  4050c0:	bl	405034 <nftw@plt+0x2344>
  4050c4:	ldr	w0, [x19, #12]
  4050c8:	cbz	w0, 4050d4 <nftw@plt+0x23e4>
  4050cc:	ldr	w0, [x19, #4128]
  4050d0:	str	w0, [x19, #32]
  4050d4:	ldr	w1, [x19, #12]
  4050d8:	add	w20, w1, w20
  4050dc:	str	w20, [x19, #12]
  4050e0:	ubfiz	x0, x1, #2, #32
  4050e4:	add	x0, x0, #0x20
  4050e8:	add	x0, x19, x0
  4050ec:	ldp	x19, x20, [sp, #16]
  4050f0:	ldp	x29, x30, [sp], #32
  4050f4:	ret
  4050f8:	stp	x29, x30, [sp, #-32]!
  4050fc:	mov	x29, sp
  405100:	stp	x19, x20, [sp, #16]
  405104:	mov	w20, w0
  405108:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40510c:	add	x19, x0, #0x760
  405110:	ldp	w2, w4, [x19, #12]
  405114:	ldr	w1, [x19, #28]
  405118:	sub	w4, w4, w2
  40511c:	cmp	w1, #0x0
  405120:	b.le	405190 <nftw@plt+0x24a0>
  405124:	cmp	w4, w20
  405128:	b.cs	405198 <nftw@plt+0x24a8>  // b.hs, b.nlast
  40512c:	mov	x1, x0
  405130:	ldr	w0, [x19, #8]
  405134:	add	w0, w0, w2
  405138:	str	w0, [x19, #8]
  40513c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405140:	add	x0, x0, #0x780
  405144:	cbz	w4, 405150 <nftw@plt+0x2460>
  405148:	ldr	w2, [x0, w2, uxtw #2]
  40514c:	str	w2, [x19, #32]
  405150:	ldr	x3, [x1, #1888]
  405154:	add	x0, x0, w4, uxtw #2
  405158:	mov	x1, #0x1                   	// #1
  40515c:	mov	x2, #0x1000                	// #4096
  405160:	stp	wzr, w4, [x19, #12]
  405164:	bl	402a40 <fread@plt>
  405168:	lsr	x1, x0, #2
  40516c:	ldr	w0, [x19, #16]
  405170:	add	w0, w0, w1
  405174:	str	w0, [x19, #16]
  405178:	cmp	w0, w20
  40517c:	b.cs	405198 <nftw@plt+0x24a8>  // b.hs, b.nlast
  405180:	ldr	w1, [x19, #20]
  405184:	add	w20, w20, w1
  405188:	sub	w20, w20, w0
  40518c:	stp	wzr, w20, [x19, #16]
  405190:	mov	x0, #0x0                   	// #0
  405194:	b	4051b0 <nftw@plt+0x24c0>
  405198:	ldr	w1, [x19, #12]
  40519c:	add	w20, w1, w20
  4051a0:	str	w20, [x19, #12]
  4051a4:	ubfiz	x0, x1, #2, #32
  4051a8:	add	x0, x0, #0x20
  4051ac:	add	x0, x19, x0
  4051b0:	ldp	x19, x20, [sp, #16]
  4051b4:	ldp	x29, x30, [sp], #32
  4051b8:	ret
  4051bc:	stp	x29, x30, [sp, #-64]!
  4051c0:	mov	x29, sp
  4051c4:	stp	x19, x20, [sp, #16]
  4051c8:	mov	x20, x1
  4051cc:	stp	x21, x22, [sp, #32]
  4051d0:	str	x23, [sp, #48]
  4051d4:	cbz	x1, 405224 <nftw@plt+0x2534>
  4051d8:	ldr	x22, [x1]
  4051dc:	mov	x19, x0
  4051e0:	add	x21, x0, w2, uxtw #3
  4051e4:	mov	w0, #0x0                   	// #0
  4051e8:	cmp	x19, x21
  4051ec:	b.eq	405218 <nftw@plt+0x2528>  // b.none
  4051f0:	ldr	x1, [x19, #32]
  4051f4:	cbz	x1, 405210 <nftw@plt+0x2520>
  4051f8:	add	w23, w0, #0x1
  4051fc:	ubfiz	x0, x0, #4, #32
  405200:	add	x0, x20, x0
  405204:	ldr	x0, [x0, #48]
  405208:	bl	402a80 <free@plt>
  40520c:	mov	w0, w23
  405210:	add	x19, x19, #0x8
  405214:	b	4051e8 <nftw@plt+0x24f8>
  405218:	mov	x0, x20
  40521c:	mov	x20, x22
  405220:	bl	402a80 <free@plt>
  405224:	mov	x0, x20
  405228:	ldp	x19, x20, [sp, #16]
  40522c:	ldp	x21, x22, [sp, #32]
  405230:	ldr	x23, [sp, #48]
  405234:	ldp	x29, x30, [sp], #64
  405238:	ret
  40523c:	stp	x29, x30, [sp, #-32]!
  405240:	mov	x29, sp
  405244:	str	x19, [sp, #16]
  405248:	mov	x19, x0
  40524c:	ldrb	w2, [x1]
  405250:	sub	w2, w2, #0x41
  405254:	and	w3, w2, #0xff
  405258:	cmp	w3, #0x19
  40525c:	b.hi	405288 <nftw@plt+0x2598>  // b.pmore
  405260:	ldrb	w5, [x1, #1]
  405264:	sub	w5, w5, #0x30
  405268:	and	w3, w5, #0xff
  40526c:	cmp	w3, #0x9
  405270:	b.hi	405288 <nftw@plt+0x2598>  // b.pmore
  405274:	ldrb	w3, [x1, #2]
  405278:	sub	w3, w3, #0x30
  40527c:	and	w4, w3, #0xff
  405280:	cmp	w4, #0x9
  405284:	b.ls	4052a8 <nftw@plt+0x25b8>  // b.plast
  405288:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40528c:	mov	x0, x19
  405290:	add	x1, x1, #0xacd
  405294:	bl	402b00 <strcpy@plt>
  405298:	mov	x0, x19
  40529c:	ldr	x19, [sp, #16]
  4052a0:	ldp	x29, x30, [sp], #32
  4052a4:	ret
  4052a8:	ldrb	w6, [x1, #3]
  4052ac:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4052b0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4052b4:	add	x4, x4, #0xab8
  4052b8:	cmp	w6, #0x2a
  4052bc:	add	x1, x1, #0xac0
  4052c0:	csel	x4, x4, x1, eq  // eq = none
  4052c4:	mov	w1, #0xa                   	// #10
  4052c8:	madd	w2, w2, w1, w5
  4052cc:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4052d0:	add	x1, x1, #0xad7
  4052d4:	bl	4026e0 <sprintf@plt>
  4052d8:	b	405298 <nftw@plt+0x25a8>
  4052dc:	stp	x29, x30, [sp, #-288]!
  4052e0:	mov	x29, sp
  4052e4:	stp	x1, x2, [sp, #232]
  4052e8:	add	x1, sp, #0x120
  4052ec:	stp	x1, x1, [sp, #64]
  4052f0:	add	x1, sp, #0xe0
  4052f4:	str	x1, [sp, #80]
  4052f8:	mov	w1, #0xffffffc8            	// #-56
  4052fc:	str	w1, [sp, #88]
  405300:	mov	w1, #0xffffff80            	// #-128
  405304:	str	w1, [sp, #92]
  405308:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40530c:	stp	x3, x4, [sp, #248]
  405310:	ldp	x2, x3, [sp, #64]
  405314:	stp	x2, x3, [sp, #32]
  405318:	ldp	x2, x3, [sp, #80]
  40531c:	stp	x19, x20, [sp, #16]
  405320:	ldr	x20, [x1, #1416]
  405324:	mov	x1, x0
  405328:	stp	x2, x3, [sp, #48]
  40532c:	add	x2, sp, #0x20
  405330:	mov	x0, x20
  405334:	str	q0, [sp, #96]
  405338:	str	q1, [sp, #112]
  40533c:	str	q2, [sp, #128]
  405340:	str	q3, [sp, #144]
  405344:	str	q4, [sp, #160]
  405348:	str	q5, [sp, #176]
  40534c:	str	q6, [sp, #192]
  405350:	str	q7, [sp, #208]
  405354:	stp	x5, x6, [sp, #264]
  405358:	str	x7, [sp, #280]
  40535c:	bl	402c00 <vfprintf@plt>
  405360:	mov	w19, w0
  405364:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405368:	add	x0, x0, #0xae2
  40536c:	bl	402c30 <getenv@plt>
  405370:	cbz	x0, 40538c <nftw@plt+0x269c>
  405374:	mov	x1, x20
  405378:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40537c:	add	x0, x0, #0xaf5
  405380:	bl	402640 <fputs@plt>
  405384:	mov	w0, #0x1                   	// #1
  405388:	bl	402660 <exit@plt>
  40538c:	mov	w0, w19
  405390:	ldp	x19, x20, [sp, #16]
  405394:	ldp	x29, x30, [sp], #288
  405398:	ret
  40539c:	stp	x29, x30, [sp, #-304]!
  4053a0:	mov	x29, sp
  4053a4:	stp	x19, x20, [sp, #16]
  4053a8:	mov	x19, x2
  4053ac:	mov	w2, #0x322a                	// #12842
  4053b0:	movk	w2, #0x4139, lsl #16
  4053b4:	cmp	w1, w2
  4053b8:	b.eq	405424 <nftw@plt+0x2734>  // b.none
  4053bc:	rev	w1, w1
  4053c0:	str	w1, [sp, #32]
  4053c4:	mov	w1, #0x3941                	// #14657
  4053c8:	movk	w1, #0x2a32, lsl #16
  4053cc:	str	w1, [sp, #40]
  4053d0:	cbnz	x19, 4053d8 <nftw@plt+0x26e8>
  4053d4:	ldr	x19, [x0]
  4053d8:	add	x1, sp, #0x28
  4053dc:	add	x0, sp, #0xb0
  4053e0:	bl	40523c <nftw@plt+0x254c>
  4053e4:	add	x1, sp, #0x20
  4053e8:	mov	x20, x0
  4053ec:	add	x0, sp, #0x30
  4053f0:	bl	40523c <nftw@plt+0x254c>
  4053f4:	add	x5, sp, #0x20
  4053f8:	mov	x4, x0
  4053fc:	add	x3, sp, #0x28
  405400:	mov	x2, x20
  405404:	mov	x1, x19
  405408:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40540c:	add	x0, x0, #0xb17
  405410:	bl	4052dc <nftw@plt+0x25ec>
  405414:	mov	w0, #0x0                   	// #0
  405418:	ldp	x19, x20, [sp, #16]
  40541c:	ldp	x29, x30, [sp], #304
  405420:	ret
  405424:	mov	w0, #0x1                   	// #1
  405428:	b	405418 <nftw@plt+0x2728>
  40542c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405430:	add	x1, x1, #0x760
  405434:	ldp	w2, w0, [x1, #8]
  405438:	add	w0, w2, w0
  40543c:	ret
  405440:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405444:	add	x1, x0, #0x760
  405448:	ldr	x0, [x0, #1888]
  40544c:	cbz	x0, 405458 <nftw@plt+0x2768>
  405450:	ldr	w0, [x1, #24]
  405454:	ret
  405458:	mov	w0, #0x1                   	// #1
  40545c:	b	405454 <nftw@plt+0x2764>
  405460:	stp	x29, x30, [sp, #-80]!
  405464:	mov	x29, sp
  405468:	stp	x19, x20, [sp, #16]
  40546c:	mov	x19, x0
  405470:	str	x21, [sp, #32]
  405474:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405478:	add	x20, x21, #0x760
  40547c:	strh	wzr, [sp, #50]
  405480:	stp	xzr, xzr, [sp, #56]
  405484:	bl	402780 <getpid@plt>
  405488:	mov	w2, #0x1b6                 	// #438
  40548c:	str	w0, [sp, #72]
  405490:	mov	x0, #0xffffffff00000000    	// #-4294967296
  405494:	str	x0, [x20, #16]
  405498:	mov	w0, #0x1                   	// #1
  40549c:	mov	w1, #0x42                  	// #66
  4054a0:	str	xzr, [x20, #8]
  4054a4:	str	wzr, [x20, #24]
  4054a8:	strh	w0, [sp, #48]
  4054ac:	mov	x0, x19
  4054b0:	bl	4027d0 <open@plt>
  4054b4:	tbnz	w0, #31, 405500 <nftw@plt+0x2810>
  4054b8:	mov	w19, w0
  4054bc:	add	x2, sp, #0x30
  4054c0:	mov	w0, w19
  4054c4:	mov	w1, #0x7                   	// #7
  4054c8:	bl	402ad0 <fcntl@plt>
  4054cc:	cbz	w0, 4054e0 <nftw@plt+0x27f0>
  4054d0:	bl	402c20 <__errno_location@plt>
  4054d4:	ldr	w0, [x0]
  4054d8:	cmp	w0, #0x4
  4054dc:	b.eq	4054bc <nftw@plt+0x27cc>  // b.none
  4054e0:	mov	w0, w19
  4054e4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4054e8:	add	x1, x1, #0xb67
  4054ec:	bl	43be20 <nftw@plt+0x39130>
  4054f0:	str	x0, [x21, #1888]
  4054f4:	cbnz	x0, 405508 <nftw@plt+0x2818>
  4054f8:	mov	w0, w19
  4054fc:	bl	402920 <close@plt>
  405500:	mov	w0, #0x0                   	// #0
  405504:	b	40551c <nftw@plt+0x282c>
  405508:	mov	w19, #0x1                   	// #1
  40550c:	mov	x1, #0x0                   	// #0
  405510:	str	w19, [x20, #28]
  405514:	bl	4026a0 <setbuf@plt>
  405518:	mov	w0, w19
  40551c:	ldp	x19, x20, [sp, #16]
  405520:	ldr	x21, [sp, #32]
  405524:	ldp	x29, x30, [sp], #80
  405528:	ret
  40552c:	stp	x29, x30, [sp, #-32]!
  405530:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405534:	mov	x29, sp
  405538:	ldr	x1, [x0, #1888]
  40553c:	stp	x19, x20, [sp, #16]
  405540:	add	x20, x0, #0x760
  405544:	cbz	x1, 405570 <nftw@plt+0x2880>
  405548:	mov	x19, x0
  40554c:	ldr	w0, [x20, #12]
  405550:	cbz	w0, 405560 <nftw@plt+0x2870>
  405554:	ldr	w1, [x20, #28]
  405558:	tbz	w1, #31, 405560 <nftw@plt+0x2870>
  40555c:	bl	405034 <nftw@plt+0x2344>
  405560:	ldr	x0, [x19, #1888]
  405564:	bl	402760 <fclose@plt>
  405568:	str	xzr, [x19, #1888]
  40556c:	str	wzr, [x20, #16]
  405570:	ldr	w0, [x20, #24]
  405574:	str	wzr, [x20, #28]
  405578:	ldp	x19, x20, [sp, #16]
  40557c:	ldp	x29, x30, [sp], #32
  405580:	ret
  405584:	stp	x29, x30, [sp, #-32]!
  405588:	mov	x29, sp
  40558c:	str	x19, [sp, #16]
  405590:	mov	w19, w0
  405594:	mov	w0, #0x1                   	// #1
  405598:	bl	405098 <nftw@plt+0x23a8>
  40559c:	str	w19, [x0]
  4055a0:	ldr	x19, [sp, #16]
  4055a4:	ldp	x29, x30, [sp], #32
  4055a8:	ret
  4055ac:	stp	x29, x30, [sp, #-32]!
  4055b0:	mov	x29, sp
  4055b4:	str	x19, [sp, #16]
  4055b8:	mov	x19, x0
  4055bc:	mov	w0, #0x2                   	// #2
  4055c0:	bl	405098 <nftw@plt+0x23a8>
  4055c4:	str	x19, [x0]
  4055c8:	ldr	x19, [sp, #16]
  4055cc:	ldp	x29, x30, [sp], #32
  4055d0:	ret
  4055d4:	stp	x29, x30, [sp, #-32]!
  4055d8:	mov	x29, sp
  4055dc:	stp	x19, x20, [sp, #16]
  4055e0:	mov	w19, w1
  4055e4:	mov	w20, w0
  4055e8:	mov	w0, #0x2                   	// #2
  4055ec:	bl	405098 <nftw@plt+0x23a8>
  4055f0:	stp	w20, w19, [x0]
  4055f4:	ldp	x19, x20, [sp, #16]
  4055f8:	ldp	x29, x30, [sp], #32
  4055fc:	ret
  405600:	stp	x29, x30, [sp, #-32]!
  405604:	mov	x29, sp
  405608:	str	x19, [sp, #16]
  40560c:	mov	x19, x1
  405610:	mov	w1, #0x2                   	// #2
  405614:	bl	4055d4 <nftw@plt+0x28e4>
  405618:	ldr	w0, [x19]
  40561c:	bl	405584 <nftw@plt+0x2894>
  405620:	ldr	w0, [x19, #8]
  405624:	ldr	x19, [sp, #16]
  405628:	ldp	x29, x30, [sp], #32
  40562c:	b	405584 <nftw@plt+0x2894>
  405630:	stp	x29, x30, [sp, #-16]!
  405634:	mov	w0, #0x1                   	// #1
  405638:	mov	x29, sp
  40563c:	bl	4050f8 <nftw@plt+0x2408>
  405640:	cbz	x0, 405650 <nftw@plt+0x2960>
  405644:	ldr	w0, [x0]
  405648:	ldp	x29, x30, [sp], #16
  40564c:	ret
  405650:	mov	w0, #0x0                   	// #0
  405654:	b	405648 <nftw@plt+0x2958>
  405658:	stp	x29, x30, [sp, #-16]!
  40565c:	mov	w0, #0x2                   	// #2
  405660:	mov	x29, sp
  405664:	bl	4050f8 <nftw@plt+0x2408>
  405668:	cbz	x0, 405678 <nftw@plt+0x2988>
  40566c:	ldr	x0, [x0]
  405670:	ldp	x29, x30, [sp], #16
  405674:	ret
  405678:	mov	x0, #0x0                   	// #0
  40567c:	b	405670 <nftw@plt+0x2980>
  405680:	stp	x29, x30, [sp, #-80]!
  405684:	mov	x29, sp
  405688:	stp	x19, x20, [sp, #16]
  40568c:	mov	x19, x0
  405690:	stp	x21, x22, [sp, #32]
  405694:	stp	x23, x24, [sp, #48]
  405698:	mov	w24, #0x23                  	// #35
  40569c:	str	x25, [sp, #64]
  4056a0:	bl	402630 <strlen@plt>
  4056a4:	add	x0, x0, #0x1
  4056a8:	bl	4027c0 <malloc@plt>
  4056ac:	mov	x21, x0
  4056b0:	mov	x3, x0
  4056b4:	mov	w25, #0x5e                  	// #94
  4056b8:	ldrb	w0, [x19]
  4056bc:	cbz	w0, 405730 <nftw@plt+0x2a40>
  4056c0:	mov	x20, x19
  4056c4:	ldrb	w22, [x20]
  4056c8:	cbz	w22, 4056e4 <nftw@plt+0x29f4>
  4056cc:	cmp	w22, #0x2f
  4056d0:	b.eq	4056e4 <nftw@plt+0x29f4>  // b.none
  4056d4:	add	x20, x20, #0x1
  4056d8:	b	4056c4 <nftw@plt+0x29d4>
  4056dc:	mov	x19, x20
  4056e0:	b	4056b8 <nftw@plt+0x29c8>
  4056e4:	sub	x23, x20, x19
  4056e8:	cmp	x23, #0x2
  4056ec:	b.ne	405718 <nftw@plt+0x2a28>  // b.any
  4056f0:	cmp	w0, #0x2e
  4056f4:	b.ne	405718 <nftw@plt+0x2a28>  // b.any
  4056f8:	ldrb	w0, [x19, #1]
  4056fc:	cmp	w0, #0x2e
  405700:	b.ne	405718 <nftw@plt+0x2a28>  // b.any
  405704:	strb	w25, [x3], #1
  405708:	cbz	w22, 4056dc <nftw@plt+0x29ec>
  40570c:	add	x19, x20, #0x1
  405710:	strb	w24, [x3], #1
  405714:	b	4056b8 <nftw@plt+0x29c8>
  405718:	mov	x0, x3
  40571c:	mov	x2, x23
  405720:	mov	x1, x19
  405724:	bl	4025d0 <memcpy@plt>
  405728:	add	x3, x0, x23
  40572c:	b	405708 <nftw@plt+0x2a18>
  405730:	strb	wzr, [x3]
  405734:	mov	x0, x21
  405738:	ldp	x19, x20, [sp, #16]
  40573c:	ldp	x21, x22, [sp, #32]
  405740:	ldp	x23, x24, [sp, #48]
  405744:	ldr	x25, [sp, #64]
  405748:	ldp	x29, x30, [sp], #80
  40574c:	ret
  405750:	stp	x29, x30, [sp, #-16]!
  405754:	mov	x29, sp
  405758:	bl	405630 <nftw@plt+0x2940>
  40575c:	cbz	w0, 405768 <nftw@plt+0x2a78>
  405760:	ldp	x29, x30, [sp], #16
  405764:	b	4050f8 <nftw@plt+0x2408>
  405768:	mov	x0, #0x0                   	// #0
  40576c:	ldp	x29, x30, [sp], #16
  405770:	ret
  405774:	stp	x29, x30, [sp, #-32]!
  405778:	mov	x29, sp
  40577c:	str	x19, [sp, #16]
  405780:	mov	x19, x0
  405784:	bl	405630 <nftw@plt+0x2940>
  405788:	str	w0, [x19]
  40578c:	bl	405630 <nftw@plt+0x2940>
  405790:	mov	w0, w0
  405794:	str	x0, [x19, #8]
  405798:	ldr	x19, [sp, #16]
  40579c:	ldp	x29, x30, [sp], #32
  4057a0:	ret
  4057a4:	stp	x29, x30, [sp, #-32]!
  4057a8:	add	w1, w0, w1
  4057ac:	mov	x29, sp
  4057b0:	stp	x19, x20, [sp, #16]
  4057b4:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4057b8:	add	x19, x20, #0x760
  4057bc:	ldr	w0, [x19, #8]
  4057c0:	ldr	w2, [x19, #16]
  4057c4:	sub	w0, w1, w0
  4057c8:	cmp	w0, w2
  4057cc:	b.hi	4057e0 <nftw@plt+0x2af0>  // b.pmore
  4057d0:	str	w0, [x19, #12]
  4057d4:	ldp	x19, x20, [sp, #16]
  4057d8:	ldp	x29, x30, [sp], #32
  4057dc:	ret
  4057e0:	ldr	x0, [x20, #1888]
  4057e4:	lsl	w1, w1, #2
  4057e8:	mov	w2, #0x0                   	// #0
  4057ec:	stur	xzr, [x19, #12]
  4057f0:	bl	402960 <fseek@plt>
  4057f4:	ldr	x0, [x20, #1888]
  4057f8:	bl	4026d0 <ftell@plt>
  4057fc:	asr	x0, x0, #2
  405800:	str	w0, [x19, #8]
  405804:	b	4057d4 <nftw@plt+0x2ae4>
  405808:	stp	x29, x30, [sp, #-48]!
  40580c:	mov	x29, sp
  405810:	stp	x19, x20, [sp, #16]
  405814:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405818:	mov	w20, w0
  40581c:	str	x21, [sp, #32]
  405820:	add	x21, x19, #0x760
  405824:	ldr	w0, [x21, #12]
  405828:	cbz	w0, 405830 <nftw@plt+0x2b40>
  40582c:	bl	405034 <nftw@plt+0x2344>
  405830:	ldr	x0, [x19, #1888]
  405834:	lsl	w1, w20, #2
  405838:	mov	w2, #0x0                   	// #0
  40583c:	bl	402960 <fseek@plt>
  405840:	ldr	x0, [x19, #1888]
  405844:	bl	4026d0 <ftell@plt>
  405848:	asr	x0, x0, #2
  40584c:	str	w0, [x21, #8]
  405850:	ldp	x19, x20, [sp, #16]
  405854:	ldr	x21, [sp, #32]
  405858:	ldp	x29, x30, [sp], #48
  40585c:	ret
  405860:	mov	x4, x0
  405864:	mov	w5, #0x2                   	// #2
  405868:	cmp	w5, w1
  40586c:	b.ge	4058c0 <nftw@plt+0x2bd0>  // b.tcont
  405870:	ldp	x8, x6, [x4, #16]
  405874:	sub	w2, w5, #0x2
  405878:	mov	x3, x4
  40587c:	ldr	x7, [x3, #8]
  405880:	cmp	x6, x7
  405884:	b.le	40589c <nftw@plt+0x2bac>
  405888:	ldr	x9, [x3]
  40588c:	stp	x9, x7, [x3, #16]
  405890:	subs	w2, w2, #0x2
  405894:	sub	x3, x3, #0x10
  405898:	b.pl	40587c <nftw@plt+0x2b8c>  // b.nfrst
  40589c:	sxtw	x2, w2
  4058a0:	add	w5, w5, #0x2
  4058a4:	add	x2, x2, #0x2
  4058a8:	add	x4, x4, #0x10
  4058ac:	lsl	x2, x2, #3
  4058b0:	str	x8, [x0, x2]
  4058b4:	add	x2, x0, x2
  4058b8:	str	x6, [x2, #8]
  4058bc:	b	405868 <nftw@plt+0x2b78>
  4058c0:	ret
  4058c4:	stp	x29, x30, [sp, #-224]!
  4058c8:	mov	x29, sp
  4058cc:	stp	x19, x20, [sp, #16]
  4058d0:	mov	x19, x0
  4058d4:	stp	x21, x22, [sp, #32]
  4058d8:	stp	x23, x24, [sp, #48]
  4058dc:	stp	x25, x26, [sp, #64]
  4058e0:	stp	x27, x28, [sp, #80]
  4058e4:	mov	x27, #0x0                   	// #0
  4058e8:	str	w1, [sp, #132]
  4058ec:	cbz	x0, 405940 <nftw@plt+0x2c50>
  4058f0:	ldr	w5, [x0, #104]
  4058f4:	mov	x1, #0x0                   	// #0
  4058f8:	cmp	w5, w1
  4058fc:	b.eq	405938 <nftw@plt+0x2c48>  // b.none
  405900:	ldr	x2, [x0, #112]
  405904:	ldr	x4, [x2, x1, lsl #3]
  405908:	mov	x2, #0x0                   	// #0
  40590c:	ldr	w6, [x4, #24]
  405910:	cmp	w6, w2
  405914:	b.ls	405930 <nftw@plt+0x2c40>  // b.plast
  405918:	ldr	x3, [x4, #32]
  40591c:	ldr	x3, [x3, x2, lsl #3]
  405920:	add	x2, x2, #0x1
  405924:	cmp	x27, x3
  405928:	csel	x27, x27, x3, ge  // ge = tcont
  40592c:	b	405910 <nftw@plt+0x2c20>
  405930:	add	x1, x1, #0x1
  405934:	b	4058f8 <nftw@plt+0x2c08>
  405938:	ldr	x0, [x0, #8]
  40593c:	b	4058ec <nftw@plt+0x2bfc>
  405940:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405944:	add	x0, x0, #0xbd9
  405948:	bl	402c30 <getenv@plt>
  40594c:	cbz	x0, 405a40 <nftw@plt+0x2d50>
  405950:	bl	402770 <atoi@plt>
  405954:	cmp	w0, #0x0
  405958:	csel	w22, w0, wzr, ge  // ge = tcont
  40595c:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405960:	add	x0, x0, #0xbeb
  405964:	bl	402c30 <getenv@plt>
  405968:	mov	x21, x0
  40596c:	cbz	x0, 405994 <nftw@plt+0x2ca4>
  405970:	bl	402630 <strlen@plt>
  405974:	mov	x20, x0
  405978:	cbz	x0, 405994 <nftw@plt+0x2ca4>
  40597c:	sub	x0, x0, #0x1
  405980:	ldrb	w1, [x21, x0]
  405984:	cmp	w1, #0x2f
  405988:	b.ne	4059a4 <nftw@plt+0x2cb4>  // b.any
  40598c:	mov	x20, x0
  405990:	cbnz	x0, 4059a4 <nftw@plt+0x2cb4>
  405994:	cbz	w22, 405a48 <nftw@plt+0x2d58>
  405998:	adrp	x21, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  40599c:	add	x21, x21, #0x77f
  4059a0:	mov	x20, #0x1                   	// #1
  4059a4:	add	x0, x20, #0x1
  4059a8:	bl	4027c0 <malloc@plt>
  4059ac:	mov	x2, x20
  4059b0:	mov	x24, x0
  4059b4:	mov	x1, x21
  4059b8:	bl	4025d0 <memcpy@plt>
  4059bc:	strb	wzr, [x0, x20]
  4059c0:	adrp	x23, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4059c4:	add	x23, x23, #0x758
  4059c8:	cbz	x19, 406268 <nftw@plt+0x3578>
  4059cc:	ldr	x0, [x19, #96]
  4059d0:	str	xzr, [x23]
  4059d4:	stp	xzr, xzr, [sp, #192]
  4059d8:	cbz	x0, 405a90 <nftw@plt+0x2da0>
  4059dc:	add	x13, x19, #0x20
  4059e0:	mov	x11, #0x0                   	// #0
  4059e4:	mov	w14, #0x9                   	// #9
  4059e8:	ldr	w0, [x19, #104]
  4059ec:	cmp	w0, w11
  4059f0:	b.eq	405a90 <nftw@plt+0x2da0>  // b.none
  4059f4:	ldr	x0, [x19, #112]
  4059f8:	mov	x1, #0x0                   	// #0
  4059fc:	ldr	x0, [x0, x11, lsl #3]
  405a00:	add	x0, x0, #0x18
  405a04:	ldr	x2, [x13, x1, lsl #3]
  405a08:	cbz	x2, 405a80 <nftw@plt+0x2d90>
  405a0c:	cmp	x1, #0x8
  405a10:	b.ne	405a7c <nftw@plt+0x2d8c>  // b.any
  405a14:	ldr	w12, [x0]
  405a18:	sdiv	w10, w12, w14
  405a1c:	add	w10, w10, w10, lsl #3
  405a20:	subs	w10, w12, w10
  405a24:	b.eq	405a50 <nftw@plt+0x2d60>  // b.none
  405a28:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405a2c:	add	x2, x2, #0xbf7
  405a30:	mov	w1, #0x1c7                 	// #455
  405a34:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405a38:	add	x0, x0, #0xc14
  405a3c:	bl	402d60 <nftw@plt+0x70>
  405a40:	mov	w22, #0x0                   	// #0
  405a44:	b	40595c <nftw@plt+0x2c6c>
  405a48:	mov	x24, #0x0                   	// #0
  405a4c:	b	4059c0 <nftw@plt+0x2cd0>
  405a50:	ldr	x0, [x0, #8]
  405a54:	add	x0, x0, #0x8
  405a58:	cmp	w12, w10
  405a5c:	b.gt	405a68 <nftw@plt+0x2d78>
  405a60:	add	x11, x11, #0x1
  405a64:	b	4059e8 <nftw@plt+0x2cf8>
  405a68:	mov	w1, #0x8                   	// #8
  405a6c:	bl	405860 <nftw@plt+0x2b70>
  405a70:	add	w10, w10, #0x9
  405a74:	add	x0, x0, #0x48
  405a78:	b	405a58 <nftw@plt+0x2d68>
  405a7c:	add	x0, x0, #0x10
  405a80:	add	x1, x1, #0x1
  405a84:	cmp	x1, #0x9
  405a88:	b.ne	405a04 <nftw@plt+0x2d14>  // b.any
  405a8c:	b	405a60 <nftw@plt+0x2d70>
  405a90:	ldr	x20, [x19, #24]
  405a94:	cbz	w22, 405acc <nftw@plt+0x2ddc>
  405a98:	ldrb	w0, [x20]
  405a9c:	mov	w1, w22
  405aa0:	cmp	w0, #0x2f
  405aa4:	cinc	x0, x20, eq  // eq = none
  405aa8:	ldrb	w2, [x0]
  405aac:	cbz	w2, 405acc <nftw@plt+0x2ddc>
  405ab0:	cbz	w1, 405acc <nftw@plt+0x2ddc>
  405ab4:	cmp	w2, #0x2f
  405ab8:	b.ne	405ac4 <nftw@plt+0x2dd4>  // b.any
  405abc:	sub	w1, w1, #0x1
  405ac0:	mov	x20, x0
  405ac4:	add	x0, x0, #0x1
  405ac8:	b	405aa8 <nftw@plt+0x2db8>
  405acc:	cbz	x24, 405c10 <nftw@plt+0x2f20>
  405ad0:	ldrb	w0, [x20]
  405ad4:	cmp	w0, #0x2f
  405ad8:	mov	x0, x24
  405adc:	cset	w26, ne  // ne = any
  405ae0:	bl	402630 <strlen@plt>
  405ae4:	mov	x25, x0
  405ae8:	mov	x0, x20
  405aec:	bl	402630 <strlen@plt>
  405af0:	add	x0, x0, x25
  405af4:	add	x0, x0, #0x2
  405af8:	bl	4027c0 <malloc@plt>
  405afc:	strb	wzr, [x0]
  405b00:	mov	x21, x0
  405b04:	cbz	x25, 405b10 <nftw@plt+0x2e20>
  405b08:	mov	x1, x24
  405b0c:	bl	402830 <strcat@plt>
  405b10:	cbz	w26, 405b1c <nftw@plt+0x2e2c>
  405b14:	mov	w0, #0x2f                  	// #47
  405b18:	strb	w0, [x21], #1
  405b1c:	mov	x1, x20
  405b20:	adrp	x26, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  405b24:	mov	x20, x21
  405b28:	add	x26, x26, #0xed4
  405b2c:	mov	x0, x21
  405b30:	bl	402830 <strcat@plt>
  405b34:	strb	wzr, [sp, #184]
  405b38:	ldrb	w0, [x21]
  405b3c:	cbz	w0, 405b6c <nftw@plt+0x2e7c>
  405b40:	cmp	w0, #0x25
  405b44:	b.ne	405cc0 <nftw@plt+0x2fd0>  // b.any
  405b48:	ldrb	w28, [x21, #1]
  405b4c:	cbz	w28, 405cc0 <nftw@plt+0x2fd0>
  405b50:	mov	x0, x20
  405b54:	bl	402630 <strlen@plt>
  405b58:	cmp	w28, #0x70
  405b5c:	mov	x25, x0
  405b60:	b.eq	405c1c <nftw@plt+0x2f2c>  // b.none
  405b64:	cmp	w28, #0x71
  405b68:	b.eq	405cc8 <nftw@plt+0x2fd8>  // b.none
  405b6c:	mov	x0, x20
  405b70:	bl	405460 <nftw@plt+0x2770>
  405b74:	cbnz	w0, 405d4c <nftw@plt+0x305c>
  405b78:	ldrb	w0, [x20]
  405b7c:	mov	w26, #0x2f                  	// #47
  405b80:	cmp	w0, #0x2f
  405b84:	cinc	x21, x20, eq  // eq = none
  405b88:	ldrb	w25, [x21]
  405b8c:	cbz	w25, 405d30 <nftw@plt+0x3040>
  405b90:	cmp	w25, #0x2f
  405b94:	b.ne	405d28 <nftw@plt+0x3038>  // b.any
  405b98:	strb	wzr, [x21]
  405b9c:	mov	x0, x20
  405ba0:	mov	w1, #0x0                   	// #0
  405ba4:	bl	402980 <access@plt>
  405ba8:	cmn	w0, #0x1
  405bac:	b.ne	405d24 <nftw@plt+0x3034>  // b.any
  405bb0:	mov	x0, x20
  405bb4:	mov	w1, #0x1ed                 	// #493
  405bb8:	bl	402ca0 <mkdir@plt>
  405bbc:	cmn	w0, #0x1
  405bc0:	b.ne	405d24 <nftw@plt+0x3034>  // b.any
  405bc4:	bl	402c20 <__errno_location@plt>
  405bc8:	ldr	w0, [x0]
  405bcc:	cmp	w0, #0x11
  405bd0:	b.eq	405d24 <nftw@plt+0x3034>  // b.none
  405bd4:	mov	x1, x20
  405bd8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405bdc:	add	x0, x0, #0xc39
  405be0:	bl	4052dc <nftw@plt+0x25ec>
  405be4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405be8:	mov	x2, x20
  405bec:	add	x1, x1, #0xc5f
  405bf0:	strb	w25, [x21]
  405bf4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405bf8:	ldr	x0, [x0, #1416]
  405bfc:	bl	402cb0 <fprintf@plt>
  405c00:	mov	x0, x20
  405c04:	bl	402a80 <free@plt>
  405c08:	ldr	x19, [x19, #8]
  405c0c:	b	4059c8 <nftw@plt+0x2cd8>
  405c10:	mov	w26, #0x0                   	// #0
  405c14:	mov	x25, #0x0                   	// #0
  405c18:	b	405ae8 <nftw@plt+0x2df8>
  405c1c:	bl	402780 <getpid@plt>
  405c20:	mov	w2, w0
  405c24:	mov	x1, x26
  405c28:	add	x0, sp, #0xd0
  405c2c:	bl	4026e0 <sprintf@plt>
  405c30:	add	x6, x21, #0x2
  405c34:	add	x3, sp, #0xd0
  405c38:	sub	x2, x6, x20
  405c3c:	mov	x0, x3
  405c40:	sub	w25, w25, w2
  405c44:	sub	x21, x21, x20
  405c48:	stp	x3, x6, [sp, #112]
  405c4c:	bl	402630 <strlen@plt>
  405c50:	add	w1, w21, #0x1
  405c54:	mov	x28, x0
  405c58:	add	w0, w25, w0
  405c5c:	and	x21, x21, #0xffffffff
  405c60:	add	w0, w1, w0
  405c64:	and	x28, x28, #0xffffffff
  405c68:	bl	4027c0 <malloc@plt>
  405c6c:	str	x0, [sp, #104]
  405c70:	mov	x2, x21
  405c74:	mov	x1, x20
  405c78:	bl	4025d0 <memcpy@plt>
  405c7c:	add	x0, x0, x21
  405c80:	ldr	x3, [sp, #112]
  405c84:	mov	x2, x28
  405c88:	add	x21, x21, x28
  405c8c:	mov	x1, x3
  405c90:	bl	4025d0 <memcpy@plt>
  405c94:	add	x0, x0, x28
  405c98:	ldr	x6, [sp, #120]
  405c9c:	mov	x2, x25
  405ca0:	mov	x1, x6
  405ca4:	bl	4025d0 <memcpy@plt>
  405ca8:	strb	wzr, [x0, x25]
  405cac:	mov	x0, x20
  405cb0:	bl	402a80 <free@plt>
  405cb4:	ldr	x5, [sp, #104]
  405cb8:	add	x21, x5, x21
  405cbc:	mov	x20, x5
  405cc0:	add	x21, x21, #0x1
  405cc4:	b	405b38 <nftw@plt+0x2e48>
  405cc8:	ldrb	w0, [x21, #2]
  405ccc:	cmp	w0, #0x7b
  405cd0:	b.eq	405ce0 <nftw@plt+0x2ff0>  // b.none
  405cd4:	add	x6, x21, #0x1
  405cd8:	mov	x3, #0x0                   	// #0
  405cdc:	b	405c38 <nftw@plt+0x2f48>
  405ce0:	add	x2, x21, #0x3
  405ce4:	mov	w1, #0x7d                  	// #125
  405ce8:	mov	x0, x2
  405cec:	str	x2, [sp, #104]
  405cf0:	bl	402ab0 <strchr@plt>
  405cf4:	mov	x28, x0
  405cf8:	cbz	x0, 405b6c <nftw@plt+0x2e7c>
  405cfc:	ldr	x2, [sp, #104]
  405d00:	strb	wzr, [x0]
  405d04:	mov	x0, x2
  405d08:	bl	402c30 <getenv@plt>
  405d0c:	mov	x3, x0
  405d10:	cmp	x0, #0x0
  405d14:	add	x0, sp, #0xb8
  405d18:	csel	x3, x3, x0, ne  // ne = any
  405d1c:	add	x6, x28, #0x1
  405d20:	b	405c38 <nftw@plt+0x2f48>
  405d24:	strb	w26, [x21]
  405d28:	add	x21, x21, #0x1
  405d2c:	b	405b88 <nftw@plt+0x2e98>
  405d30:	mov	x0, x20
  405d34:	bl	405460 <nftw@plt+0x2770>
  405d38:	cbnz	w0, 405d4c <nftw@plt+0x305c>
  405d3c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405d40:	mov	x2, x20
  405d44:	add	x1, x1, #0xc72
  405d48:	b	405bf4 <nftw@plt+0x2f04>
  405d4c:	bl	405630 <nftw@plt+0x2940>
  405d50:	cbz	w0, 405dc8 <nftw@plt+0x30d8>
  405d54:	mov	w1, #0x6461                	// #25697
  405d58:	movk	w1, #0x6763, lsl #16
  405d5c:	cmp	w0, w1
  405d60:	b.eq	405d90 <nftw@plt+0x30a0>  // b.none
  405d64:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405d68:	mov	x1, x20
  405d6c:	add	x0, x0, #0xc8c
  405d70:	bl	4052dc <nftw@plt+0x25ec>
  405d74:	ldr	x1, [x23]
  405d78:	cbz	x1, 40623c <nftw@plt+0x354c>
  405d7c:	mov	x0, x19
  405d80:	mov	w2, #0x9                   	// #9
  405d84:	bl	4051bc <nftw@plt+0x24cc>
  405d88:	str	x0, [x23]
  405d8c:	b	405d74 <nftw@plt+0x3084>
  405d90:	bl	405630 <nftw@plt+0x2940>
  405d94:	mov	w1, w0
  405d98:	mov	x2, x20
  405d9c:	add	x0, x19, #0x18
  405da0:	bl	40539c <nftw@plt+0x26ac>
  405da4:	cbz	w0, 405d74 <nftw@plt+0x3084>
  405da8:	bl	405630 <nftw@plt+0x2940>
  405dac:	ldr	w1, [x19, #16]
  405db0:	cmp	w0, w1
  405db4:	b.eq	405ef8 <nftw@plt+0x3208>  // b.none
  405db8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405dbc:	mov	x1, x20
  405dc0:	add	x0, x0, #0xcbd
  405dc4:	bl	4052dc <nftw@plt+0x25ec>
  405dc8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  405dcc:	add	x1, x0, #0x760
  405dd0:	mov	w2, #0xffffffff            	// #-1
  405dd4:	ldr	x0, [x0, #1888]
  405dd8:	str	xzr, [x1, #8]
  405ddc:	str	w2, [x1, #28]
  405de0:	mov	w2, #0x0                   	// #0
  405de4:	mov	x1, #0x0                   	// #0
  405de8:	bl	402960 <fseek@plt>
  405dec:	ldr	w0, [sp, #132]
  405df0:	cbnz	w0, 405e0c <nftw@plt+0x311c>
  405df4:	ldr	w0, [sp, #192]
  405df8:	add	w0, w0, #0x1
  405dfc:	str	w0, [sp, #192]
  405e00:	ldr	x0, [sp, #200]
  405e04:	add	x0, x0, x27
  405e08:	str	x0, [sp, #200]
  405e0c:	mov	w1, #0x322a                	// #12842
  405e10:	mov	w0, #0x6461                	// #25697
  405e14:	movk	w1, #0x4139, lsl #16
  405e18:	movk	w0, #0x6763, lsl #16
  405e1c:	bl	4055d4 <nftw@plt+0x28e4>
  405e20:	mov	w21, #0x0                   	// #0
  405e24:	ldr	w0, [x19, #16]
  405e28:	bl	405584 <nftw@plt+0x2894>
  405e2c:	add	x1, sp, #0xc0
  405e30:	mov	w0, #0xa1000000            	// #-1593835520
  405e34:	bl	405600 <nftw@plt+0x2910>
  405e38:	ldr	w0, [x19, #104]
  405e3c:	cmp	w0, w21
  405e40:	b.eq	406230 <nftw@plt+0x3540>  // b.none
  405e44:	ldr	x28, [x23]
  405e48:	cbz	x28, 4061d4 <nftw@plt+0x34e4>
  405e4c:	ldr	w0, [x28, #8]
  405e50:	cmp	w21, w0
  405e54:	b.ne	4061d4 <nftw@plt+0x34e4>  // b.any
  405e58:	add	x28, x28, #0x10
  405e5c:	mov	w26, #0x3                   	// #3
  405e60:	mov	w25, #0x1                   	// #1
  405e64:	mov	w1, w26
  405e68:	mov	w0, #0x1000000             	// #16777216
  405e6c:	bl	4055d4 <nftw@plt+0x28e4>
  405e70:	cbz	w26, 406228 <nftw@plt+0x3538>
  405e74:	ldr	w0, [x28, #8]
  405e78:	add	x28, x28, #0x18
  405e7c:	mov	x26, #0x0                   	// #0
  405e80:	bl	405584 <nftw@plt+0x2894>
  405e84:	ldur	w0, [x28, #-12]
  405e88:	bl	405584 <nftw@plt+0x2894>
  405e8c:	ldur	w0, [x28, #-8]
  405e90:	bl	405584 <nftw@plt+0x2894>
  405e94:	add	x0, x19, #0x20
  405e98:	str	x0, [sp, #104]
  405e9c:	ldr	x0, [sp, #104]
  405ea0:	ldr	x0, [x0, x26]
  405ea4:	cbz	x0, 406204 <nftw@plt+0x3514>
  405ea8:	ldr	w4, [x28]
  405eac:	mov	w0, #0x1a10000             	// #27328512
  405eb0:	add	w0, w0, w26, lsl #14
  405eb4:	str	w4, [sp, #112]
  405eb8:	lsl	w1, w4, #1
  405ebc:	bl	4055d4 <nftw@plt+0x28e4>
  405ec0:	ldr	w4, [sp, #112]
  405ec4:	mov	x1, #0x0                   	// #0
  405ec8:	ldr	x5, [x28, #8]
  405ecc:	mov	w4, w4
  405ed0:	str	x4, [sp, #136]
  405ed4:	cmp	x4, x1
  405ed8:	b.eq	406200 <nftw@plt+0x3510>  // b.none
  405edc:	ldr	x0, [x5, x1, lsl #3]
  405ee0:	stp	x1, x5, [sp, #112]
  405ee4:	bl	4055ac <nftw@plt+0x28bc>
  405ee8:	ldp	x1, x5, [sp, #112]
  405eec:	ldr	x4, [sp, #136]
  405ef0:	add	x1, x1, #0x1
  405ef4:	b	405ed0 <nftw@plt+0x31e0>
  405ef8:	bl	405630 <nftw@plt+0x2940>
  405efc:	mov	w1, #0xa1000000            	// #-1593835520
  405f00:	cmp	w0, w1
  405f04:	b.ne	4061b0 <nftw@plt+0x34c0>  // b.any
  405f08:	bl	405630 <nftw@plt+0x2940>
  405f0c:	cbnz	w0, 405f20 <nftw@plt+0x3230>
  405f10:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405f14:	mov	w1, #0xf8                  	// #248
  405f18:	add	x2, x2, #0xd19
  405f1c:	b	405a34 <nftw@plt+0x2d44>
  405f20:	add	x0, sp, #0xc0
  405f24:	bl	405774 <nftw@plt+0x2a84>
  405f28:	mov	x26, x23
  405f2c:	mov	x25, #0x0                   	// #0
  405f30:	bl	405630 <nftw@plt+0x2940>
  405f34:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  405f38:	add	x1, x1, #0xd28
  405f3c:	str	x1, [sp, #144]
  405f40:	ldr	w1, [x19, #104]
  405f44:	str	w25, [sp, #112]
  405f48:	str	w25, [sp, #120]
  405f4c:	cmp	w25, w1
  405f50:	b.eq	4061a8 <nftw@plt+0x34b8>  // b.none
  405f54:	ldr	x1, [x19, #112]
  405f58:	ldr	x28, [x1, x25, lsl #3]
  405f5c:	mov	w1, #0x1000000             	// #16777216
  405f60:	cmp	w0, w1
  405f64:	b.ne	406110 <nftw@plt+0x3420>  // b.any
  405f68:	bl	405630 <nftw@plt+0x2940>
  405f6c:	cbz	w0, 40619c <nftw@plt+0x34ac>
  405f70:	cmp	w0, #0x3
  405f74:	b.ne	406110 <nftw@plt+0x3420>  // b.any
  405f78:	cbz	x28, 406050 <nftw@plt+0x3360>
  405f7c:	ldr	x0, [x28]
  405f80:	cmp	x19, x0
  405f84:	b.ne	406050 <nftw@plt+0x3360>  // b.any
  405f88:	bl	405630 <nftw@plt+0x2940>
  405f8c:	ldr	w1, [x28, #8]
  405f90:	cmp	w0, w1
  405f94:	b.ne	406110 <nftw@plt+0x3420>  // b.any
  405f98:	bl	405630 <nftw@plt+0x2940>
  405f9c:	ldr	w1, [x28, #12]
  405fa0:	cmp	w0, w1
  405fa4:	b.ne	406110 <nftw@plt+0x3420>  // b.any
  405fa8:	bl	405630 <nftw@plt+0x2940>
  405fac:	ldr	w1, [x28, #16]
  405fb0:	cmp	w0, w1
  405fb4:	b.ne	406110 <nftw@plt+0x3420>  // b.any
  405fb8:	add	x28, x28, #0x18
  405fbc:	add	x0, x19, #0x20
  405fc0:	mov	x21, #0x0                   	// #0
  405fc4:	str	x0, [sp, #104]
  405fc8:	ldr	x0, [sp, #104]
  405fcc:	ldr	x4, [x0, x21]
  405fd0:	str	x4, [sp, #136]
  405fd4:	cbz	x4, 406010 <nftw@plt+0x3320>
  405fd8:	bl	405630 <nftw@plt+0x2940>
  405fdc:	str	w0, [sp, #112]
  405fe0:	bl	405630 <nftw@plt+0x2940>
  405fe4:	ldr	w1, [sp, #112]
  405fe8:	add	w5, w21, #0x684
  405fec:	cmp	w1, w5, lsl #14
  405ff0:	b.ne	406110 <nftw@plt+0x3420>  // b.any
  405ff4:	ldr	w1, [x28]
  405ff8:	cmp	w0, w1, lsl #1
  405ffc:	b.ne	406110 <nftw@plt+0x3420>  // b.any
  406000:	ldr	x0, [x28, #8]
  406004:	add	x28, x28, #0x10
  406008:	ldr	x4, [sp, #136]
  40600c:	blr	x4
  406010:	add	x21, x21, #0x8
  406014:	cmp	x21, #0x48
  406018:	b.ne	405fc8 <nftw@plt+0x32d8>  // b.any
  40601c:	bl	405440 <nftw@plt+0x2750>
  406020:	cmp	w0, #0x0
  406024:	cbz	w0, 40619c <nftw@plt+0x34ac>
  406028:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40602c:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406030:	add	x0, x0, #0xb7c
  406034:	add	x2, x2, #0xb73
  406038:	csel	x2, x2, x0, lt  // lt = tstop
  40603c:	mov	x1, x20
  406040:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406044:	add	x0, x0, #0xd9d
  406048:	bl	4052dc <nftw@plt+0x25ec>
  40604c:	b	405d74 <nftw@plt+0x3084>
  406050:	mov	w1, #0x9                   	// #9
  406054:	mov	w0, #0x0                   	// #0
  406058:	sub	w1, w1, #0x1
  40605c:	cmn	w1, #0x1
  406060:	b.eq	406078 <nftw@plt+0x3388>  // b.none
  406064:	add	x2, x19, w1, uxtw #3
  406068:	ldr	x2, [x2, #32]
  40606c:	cmp	x2, #0x0
  406070:	cinc	w0, w0, ne  // ne = any
  406074:	b	406058 <nftw@plt+0x3368>
  406078:	lsl	w0, w0, #4
  40607c:	mov	x28, #0x0                   	// #0
  406080:	add	w0, w0, #0x38
  406084:	bl	4027c0 <malloc@plt>
  406088:	mov	x21, x0
  40608c:	ldr	w0, [sp, #112]
  406090:	str	xzr, [x21]
  406094:	str	w0, [x21, #8]
  406098:	bl	405630 <nftw@plt+0x2940>
  40609c:	str	w0, [x21, #24]
  4060a0:	bl	405630 <nftw@plt+0x2940>
  4060a4:	str	w0, [x21, #28]
  4060a8:	bl	405630 <nftw@plt+0x2940>
  4060ac:	str	w0, [x21, #32]
  4060b0:	add	x0, x19, #0x20
  4060b4:	str	wzr, [sp, #104]
  4060b8:	str	x0, [sp, #136]
  4060bc:	ldr	x0, [sp, #136]
  4060c0:	ldr	x0, [x0, x28, lsl #3]
  4060c4:	cbz	x0, 406188 <nftw@plt+0x3498>
  4060c8:	bl	405630 <nftw@plt+0x2940>
  4060cc:	mov	w1, #0x1a10000             	// #27328512
  4060d0:	add	w1, w1, w28, lsl #17
  4060d4:	cmp	w1, w0
  4060d8:	b.eq	40611c <nftw@plt+0x342c>  // b.none
  4060dc:	ldr	w2, [sp, #112]
  4060e0:	mov	w4, w28
  4060e4:	ldr	x3, [sp, #144]
  4060e8:	mov	x1, x20
  4060ec:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4060f0:	add	x0, x0, #0xd39
  4060f4:	bl	4052dc <nftw@plt+0x25ec>
  4060f8:	mov	w2, w28
  4060fc:	mov	x1, x21
  406100:	mov	x0, x19
  406104:	bl	4051bc <nftw@plt+0x24cc>
  406108:	mov	x26, x0
  40610c:	cbnz	x0, 40619c <nftw@plt+0x34ac>
  406110:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406114:	add	x2, x2, #0x1e1
  406118:	b	4061bc <nftw@plt+0x34cc>
  40611c:	bl	405630 <nftw@plt+0x2940>
  406120:	lsr	w1, w0, #1
  406124:	str	w1, [sp, #152]
  406128:	lsl	w0, w1, #3
  40612c:	bl	4027c0 <malloc@plt>
  406130:	mov	x3, x0
  406134:	ldr	x0, [sp, #104]
  406138:	mov	x2, #0x0                   	// #0
  40613c:	ldr	w1, [sp, #152]
  406140:	ubfiz	x0, x0, #4, #32
  406144:	add	x0, x21, x0
  406148:	str	w1, [x0, #40]
  40614c:	mov	w1, w1
  406150:	str	x3, [x0, #48]
  406154:	stp	x1, x2, [sp, #152]
  406158:	cmp	x1, x2
  40615c:	str	x3, [sp, #168]
  406160:	b.eq	40617c <nftw@plt+0x348c>  // b.none
  406164:	bl	405658 <nftw@plt+0x2968>
  406168:	ldp	x1, x2, [sp, #152]
  40616c:	ldr	x3, [sp, #168]
  406170:	str	x0, [x3, x2, lsl #3]
  406174:	add	x2, x2, #0x1
  406178:	b	406154 <nftw@plt+0x3464>
  40617c:	ldr	w0, [sp, #104]
  406180:	add	w0, w0, #0x1
  406184:	str	w0, [sp, #104]
  406188:	add	x28, x28, #0x1
  40618c:	cmp	x28, #0x9
  406190:	b.ne	4060bc <nftw@plt+0x33cc>  // b.any
  406194:	str	x21, [x26]
  406198:	mov	x26, x21
  40619c:	add	x25, x25, #0x1
  4061a0:	bl	405630 <nftw@plt+0x2940>
  4061a4:	b	405f40 <nftw@plt+0x3250>
  4061a8:	cbz	w0, 405dc8 <nftw@plt+0x30d8>
  4061ac:	b	406110 <nftw@plt+0x3420>
  4061b0:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4061b4:	add	x2, x2, #0xb6b
  4061b8:	str	wzr, [sp, #120]
  4061bc:	ldr	w3, [sp, #120]
  4061c0:	mov	x1, x20
  4061c4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4061c8:	add	x0, x0, #0xd68
  4061cc:	bl	4052dc <nftw@plt+0x25ec>
  4061d0:	b	405d74 <nftw@plt+0x3084>
  4061d4:	ldr	x0, [x19, #112]
  4061d8:	ldr	x28, [x0, w21, uxtw #3]
  4061dc:	cbz	x28, 4061f8 <nftw@plt+0x3508>
  4061e0:	ldr	x0, [x28]
  4061e4:	cmp	x19, x0
  4061e8:	mov	w0, #0x3                   	// #3
  4061ec:	csel	w26, wzr, w0, ne  // ne = any
  4061f0:	mov	w25, #0x0                   	// #0
  4061f4:	b	405e64 <nftw@plt+0x3174>
  4061f8:	mov	w26, #0x0                   	// #0
  4061fc:	b	4061f0 <nftw@plt+0x3500>
  406200:	add	x28, x28, #0x10
  406204:	add	x26, x26, #0x8
  406208:	cmp	x26, #0x48
  40620c:	b.ne	405e9c <nftw@plt+0x31ac>  // b.any
  406210:	cbz	w25, 406228 <nftw@plt+0x3538>
  406214:	ldr	x1, [x23]
  406218:	mov	x0, x19
  40621c:	mov	w2, #0x9                   	// #9
  406220:	bl	4051bc <nftw@plt+0x24cc>
  406224:	str	x0, [x23]
  406228:	add	w21, w21, #0x1
  40622c:	b	405e38 <nftw@plt+0x3148>
  406230:	mov	w0, #0x0                   	// #0
  406234:	bl	405584 <nftw@plt+0x2894>
  406238:	b	405d74 <nftw@plt+0x3084>
  40623c:	bl	40552c <nftw@plt+0x283c>
  406240:	cmp	w0, #0x0
  406244:	cbz	w0, 405c00 <nftw@plt+0x2f10>
  406248:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40624c:	add	x2, x2, #0xbaf
  406250:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406254:	add	x0, x0, #0xb82
  406258:	mov	x1, x20
  40625c:	csel	x0, x0, x2, lt  // lt = tstop
  406260:	bl	4052dc <nftw@plt+0x25ec>
  406264:	b	405c00 <nftw@plt+0x2f10>
  406268:	mov	x0, x24
  40626c:	ldp	x19, x20, [sp, #16]
  406270:	ldp	x21, x22, [sp, #32]
  406274:	ldp	x23, x24, [sp, #48]
  406278:	ldp	x25, x26, [sp, #64]
  40627c:	ldp	x27, x28, [sp, #80]
  406280:	ldp	x29, x30, [sp], #224
  406284:	b	402a80 <free@plt>
  406288:	ldr	x0, [x0, #24]
  40628c:	ret
  406290:	stp	x29, x30, [sp, #-32]!
  406294:	mov	x29, sp
  406298:	str	x19, [sp, #16]
  40629c:	bl	4045c4 <nftw@plt+0x18d4>
  4062a0:	mov	x19, x0
  4062a4:	bl	40460c <nftw@plt+0x191c>
  4062a8:	mov	w0, w0
  4062ac:	mul	x0, x0, x19
  4062b0:	ldr	x19, [sp, #16]
  4062b4:	ldp	x29, x30, [sp], #32
  4062b8:	ret
  4062bc:	stp	x29, x30, [sp, #-48]!
  4062c0:	mov	x29, sp
  4062c4:	stp	x19, x20, [sp, #16]
  4062c8:	mov	x20, x0
  4062cc:	mov	x19, #0x0                   	// #0
  4062d0:	str	x21, [sp, #32]
  4062d4:	mov	w21, w1
  4062d8:	cmp	x19, x21
  4062dc:	b.eq	4062f8 <nftw@plt+0x3608>  // b.none
  4062e0:	bl	406290 <nftw@plt+0x35a0>
  4062e4:	ldr	x2, [x20, x19, lsl #3]
  4062e8:	add	x2, x2, x0
  4062ec:	str	x2, [x20, x19, lsl #3]
  4062f0:	add	x19, x19, #0x1
  4062f4:	b	4062d8 <nftw@plt+0x35e8>
  4062f8:	ldp	x19, x20, [sp, #16]
  4062fc:	ldr	x21, [sp, #32]
  406300:	ldp	x29, x30, [sp], #48
  406304:	ret
  406308:	stp	x29, x30, [sp, #-48]!
  40630c:	mov	x29, sp
  406310:	stp	x19, x20, [sp, #16]
  406314:	mov	x20, x0
  406318:	mov	x19, #0x0                   	// #0
  40631c:	str	x21, [sp, #32]
  406320:	mov	w21, w1
  406324:	cmp	x19, x21
  406328:	b.eq	406344 <nftw@plt+0x3654>  // b.none
  40632c:	bl	4045c4 <nftw@plt+0x18d4>
  406330:	ldr	x2, [x20, x19, lsl #3]
  406334:	orr	x2, x2, x0
  406338:	str	x2, [x20, x19, lsl #3]
  40633c:	add	x19, x19, #0x1
  406340:	b	406324 <nftw@plt+0x3634>
  406344:	ldp	x19, x20, [sp, #16]
  406348:	ldr	x21, [sp, #32]
  40634c:	ldp	x29, x30, [sp], #48
  406350:	ret
  406354:	stp	x29, x30, [sp, #-48]!
  406358:	mov	x29, sp
  40635c:	stp	x19, x20, [sp, #16]
  406360:	mov	x20, x0
  406364:	mov	x19, #0x0                   	// #0
  406368:	str	x21, [sp, #32]
  40636c:	mov	w21, w1
  406370:	cmp	x21, x19
  406374:	b.eq	40639c <nftw@plt+0x36ac>  // b.none
  406378:	bl	4045c4 <nftw@plt+0x18d4>
  40637c:	cbz	x0, 406394 <nftw@plt+0x36a4>
  406380:	ldr	x1, [x20, x19, lsl #3]
  406384:	cbz	x1, 406390 <nftw@plt+0x36a0>
  406388:	cmp	x1, x0
  40638c:	b.le	406394 <nftw@plt+0x36a4>
  406390:	str	x0, [x20, x19, lsl #3]
  406394:	add	x19, x19, #0x1
  406398:	b	406370 <nftw@plt+0x3680>
  40639c:	ldp	x19, x20, [sp, #16]
  4063a0:	ldr	x21, [sp, #32]
  4063a4:	ldp	x29, x30, [sp], #48
  4063a8:	ret
  4063ac:	stp	x29, x30, [sp, #-64]!
  4063b0:	mov	x29, sp
  4063b4:	stp	x21, x22, [sp, #32]
  4063b8:	mov	w22, #0x3                   	// #3
  4063bc:	udiv	w22, w1, w22
  4063c0:	stp	x19, x20, [sp, #16]
  4063c4:	str	x23, [sp, #48]
  4063c8:	add	w20, w22, w22, lsl #1
  4063cc:	subs	w20, w1, w20
  4063d0:	b.eq	4063ec <nftw@plt+0x36fc>  // b.none
  4063d4:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4063d8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4063dc:	add	x2, x2, #0xdc4
  4063e0:	add	x0, x0, #0xdd8
  4063e4:	mov	w1, #0x67                  	// #103
  4063e8:	bl	402d60 <nftw@plt+0x70>
  4063ec:	mov	x19, x0
  4063f0:	cmp	w20, w22
  4063f4:	b.eq	406458 <nftw@plt+0x3768>  // b.none
  4063f8:	bl	4045c4 <nftw@plt+0x18d4>
  4063fc:	mov	x23, x0
  406400:	bl	406290 <nftw@plt+0x35a0>
  406404:	mov	x21, x0
  406408:	bl	406290 <nftw@plt+0x35a0>
  40640c:	ldr	x1, [x19]
  406410:	cmp	x1, x23
  406414:	ldr	x1, [x19, #8]
  406418:	b.ne	40643c <nftw@plt+0x374c>  // b.any
  40641c:	add	x1, x1, x21
  406420:	str	x1, [x19, #8]
  406424:	add	w20, w20, #0x1
  406428:	ldr	x1, [x19, #16]
  40642c:	add	x19, x19, #0x18
  406430:	add	x0, x1, x0
  406434:	stur	x0, [x19, #-8]
  406438:	b	4063f0 <nftw@plt+0x3700>
  40643c:	cmp	x1, x21
  406440:	b.ge	406450 <nftw@plt+0x3760>  // b.tcont
  406444:	sub	x1, x21, x1
  406448:	str	x23, [x19]
  40644c:	b	406420 <nftw@plt+0x3730>
  406450:	sub	x1, x1, x21
  406454:	b	406420 <nftw@plt+0x3730>
  406458:	ldp	x19, x20, [sp, #16]
  40645c:	ldp	x21, x22, [sp, #32]
  406460:	ldr	x23, [sp, #48]
  406464:	ldp	x29, x30, [sp], #64
  406468:	ret
  40646c:	stp	x29, x30, [sp, #-96]!
  406470:	mov	x29, sp
  406474:	stp	x23, x24, [sp, #48]
  406478:	mov	x23, x0
  40647c:	mov	w0, #0x9                   	// #9
  406480:	stp	x19, x20, [sp, #16]
  406484:	udiv	w0, w1, w0
  406488:	stp	x21, x22, [sp, #32]
  40648c:	stp	x25, x26, [sp, #64]
  406490:	stp	x27, x28, [sp, #80]
  406494:	add	w0, w0, w0, lsl #3
  406498:	cmp	w1, w0
  40649c:	b.eq	4064b8 <nftw@plt+0x37c8>  // b.none
  4064a0:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4064a4:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4064a8:	add	x2, x2, #0xdfc
  4064ac:	add	x0, x0, #0xdd8
  4064b0:	mov	w1, #0x87                  	// #135
  4064b4:	bl	402d60 <nftw@plt+0x70>
  4064b8:	mov	w20, w1
  4064bc:	mov	w22, #0x0                   	// #0
  4064c0:	cmp	w22, w20
  4064c4:	b.cs	4065b0 <nftw@plt+0x38c0>  // b.hs, b.nlast
  4064c8:	add	w21, w22, #0x1
  4064cc:	sub	sp, sp, #0x80
  4064d0:	mov	x19, sp
  4064d4:	mov	x0, #0x0                   	// #0
  4064d8:	add	x21, x23, x21, lsl #3
  4064dc:	str	xzr, [x19, x0, lsl #3]
  4064e0:	add	x0, x0, #0x1
  4064e4:	cmp	x0, #0x10
  4064e8:	b.ne	4064dc <nftw@plt+0x37ec>  // b.any
  4064ec:	add	x24, x21, #0x8
  4064f0:	add	x25, x19, #0x8
  4064f4:	mov	x0, #0x0                   	// #0
  4064f8:	ldr	x1, [x21, x0]
  4064fc:	str	x1, [x19, x0]
  406500:	ldr	x1, [x24, x0]
  406504:	str	x1, [x25, x0]
  406508:	add	x0, x0, #0x10
  40650c:	cmp	x0, #0x40
  406510:	b.ne	4064f8 <nftw@plt+0x3808>  // b.any
  406514:	mov	w28, #0x4                   	// #4
  406518:	mov	w26, #0x8                   	// #8
  40651c:	bl	406290 <nftw@plt+0x35a0>
  406520:	bl	4045c4 <nftw@plt+0x18d4>
  406524:	mov	x27, x0
  406528:	bl	406290 <nftw@plt+0x35a0>
  40652c:	mov	w2, #0x0                   	// #0
  406530:	cmp	w2, w26
  406534:	b.cs	40659c <nftw@plt+0x38ac>  // b.hs, b.nlast
  406538:	ldr	x1, [x19, w2, uxtw #3]
  40653c:	cmp	x1, x27
  406540:	b.ne	406594 <nftw@plt+0x38a4>  // b.any
  406544:	add	w2, w2, #0x1
  406548:	lsl	x2, x2, #3
  40654c:	ldr	x1, [x19, x2]
  406550:	add	x0, x1, x0
  406554:	str	x0, [x19, x2]
  406558:	subs	w28, w28, #0x1
  40655c:	b.ne	406520 <nftw@plt+0x3830>  // b.any
  406560:	mov	x0, x19
  406564:	mov	w1, w26
  406568:	bl	405860 <nftw@plt+0x2b70>
  40656c:	mov	x0, #0x0                   	// #0
  406570:	ldr	x1, [x19, x0]
  406574:	str	x1, [x21, x0]
  406578:	ldr	x1, [x25, x0]
  40657c:	str	x1, [x24, x0]
  406580:	add	x0, x0, #0x10
  406584:	cmp	x0, #0x40
  406588:	b.ne	406570 <nftw@plt+0x3880>  // b.any
  40658c:	add	w22, w22, #0x9
  406590:	b	4064c0 <nftw@plt+0x37d0>
  406594:	add	w2, w2, #0x2
  406598:	b	406530 <nftw@plt+0x3840>
  40659c:	add	w1, w26, #0x1
  4065a0:	str	x27, [x19, w26, uxtw #3]
  4065a4:	add	w26, w26, #0x2
  4065a8:	str	x0, [x19, x1, lsl #3]
  4065ac:	b	406558 <nftw@plt+0x3868>
  4065b0:	mov	sp, x29
  4065b4:	ldp	x19, x20, [sp, #16]
  4065b8:	ldp	x21, x22, [sp, #32]
  4065bc:	ldp	x23, x24, [sp, #48]
  4065c0:	ldp	x25, x26, [sp, #64]
  4065c4:	ldp	x27, x28, [sp, #80]
  4065c8:	ldp	x29, x30, [sp], #96
  4065cc:	ret
  4065d0:	cmp	w2, #0x0
  4065d4:	b.lt	406634 <nftw@plt+0x3944>  // b.tstop
  4065d8:	stp	x29, x30, [sp, #-32]!
  4065dc:	mov	x29, sp
  4065e0:	stp	x19, x20, [sp, #16]
  4065e4:	mov	x19, x1
  4065e8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4065ec:	ldr	x20, [x1, #1416]
  4065f0:	b.ne	40661c <nftw@plt+0x392c>  // b.any
  4065f4:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4065f8:	add	x3, x3, #0xe54
  4065fc:	mov	x4, x3
  406600:	mov	x2, x19
  406604:	mov	x0, x20
  406608:	ldp	x19, x20, [sp, #16]
  40660c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406610:	ldp	x29, x30, [sp], #32
  406614:	add	x1, x1, #0xe14
  406618:	b	402cb0 <fprintf@plt>
  40661c:	mov	w0, w2
  406620:	bl	43d2b0 <_obstack_memory_used@@Base+0x258>
  406624:	adrp	x3, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  406628:	mov	x4, x0
  40662c:	add	x3, x3, #0x68a
  406630:	b	406600 <nftw@plt+0x3910>
  406634:	ret
  406638:	stp	x29, x30, [sp, #-32]!
  40663c:	mov	x29, sp
  406640:	ldr	w2, [x1, #56]
  406644:	ldr	x1, [x1, #40]
  406648:	str	x19, [sp, #16]
  40664c:	mov	x19, x0
  406650:	bl	40a830 <nftw@plt+0x7b40>
  406654:	ldr	x0, [x19]
  406658:	bl	40d780 <nftw@plt+0xaa90>
  40665c:	ldr	x0, [x19]
  406660:	ldr	x19, [sp, #16]
  406664:	ldp	x29, x30, [sp], #32
  406668:	b	40d894 <nftw@plt+0xaba4>
  40666c:	stp	x29, x30, [sp, #-48]!
  406670:	mov	x29, sp
  406674:	stp	x19, x20, [sp, #16]
  406678:	mov	x19, x0
  40667c:	ldr	w0, [x0, #56]
  406680:	str	x21, [sp, #32]
  406684:	cbz	w0, 4066d4 <nftw@plt+0x39e4>
  406688:	ldrb	w0, [x19, #64]
  40668c:	adrp	x21, 47e000 <__environ@@GLIBC_2.17+0xa50>
  406690:	ldr	x20, [x19]
  406694:	cbz	w0, 4066c8 <nftw@plt+0x39d8>
  406698:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40669c:	add	x0, x0, #0xe1c
  4066a0:	bl	402c90 <gettext@plt>
  4066a4:	mov	x1, x0
  4066a8:	ldr	x2, [x21, #1928]
  4066ac:	mov	x0, x20
  4066b0:	bl	40f3e0 <nftw@plt+0xc6f0>
  4066b4:	ldr	x0, [x19]
  4066b8:	ldp	x19, x20, [sp, #16]
  4066bc:	ldr	x21, [sp, #32]
  4066c0:	ldp	x29, x30, [sp], #48
  4066c4:	b	40df5c <nftw@plt+0xb26c>
  4066c8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4066cc:	add	x0, x0, #0xe45
  4066d0:	b	4066a0 <nftw@plt+0x39b0>
  4066d4:	ldp	x19, x20, [sp, #16]
  4066d8:	ldr	x21, [sp, #32]
  4066dc:	ldp	x29, x30, [sp], #48
  4066e0:	ret
  4066e4:	stp	x29, x30, [sp, #-96]!
  4066e8:	mov	x29, sp
  4066ec:	stp	x19, x20, [sp, #16]
  4066f0:	mov	x20, x0
  4066f4:	orr	x0, x2, x4
  4066f8:	stp	x21, x22, [sp, #32]
  4066fc:	stp	x23, x24, [sp, #48]
  406700:	stp	x25, x26, [sp, #64]
  406704:	str	x27, [sp, #80]
  406708:	cbnz	x0, 406714 <nftw@plt+0x3a24>
  40670c:	mov	w0, #0x0                   	// #0
  406710:	b	40673c <nftw@plt+0x3a4c>
  406714:	ldr	w0, [x20]
  406718:	mov	x23, x1
  40671c:	mov	x27, x2
  406720:	mov	w24, w3
  406724:	mov	x19, x4
  406728:	cbz	w0, 406758 <nftw@plt+0x3a68>
  40672c:	ldr	w0, [x20]
  406730:	cmp	w0, #0x13
  406734:	b.le	406778 <nftw@plt+0x3a88>
  406738:	mov	w0, #0x1                   	// #1
  40673c:	ldp	x19, x20, [sp, #16]
  406740:	ldp	x21, x22, [sp, #32]
  406744:	ldp	x23, x24, [sp, #48]
  406748:	ldp	x25, x26, [sp, #64]
  40674c:	ldr	x27, [sp, #80]
  406750:	ldp	x29, x30, [sp], #96
  406754:	ret
  406758:	cbz	x2, 40672c <nftw@plt+0x3a3c>
  40675c:	mov	x0, x2
  406760:	bl	43cd08 <nftw@plt+0x3a018>
  406764:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  406768:	add	x1, x1, #0xa
  40676c:	bl	402a00 <strcmp@plt>
  406770:	cbnz	w0, 40672c <nftw@plt+0x3a3c>
  406774:	b	40670c <nftw@plt+0x3a1c>
  406778:	add	w0, w0, #0x1
  40677c:	str	w0, [x20]
  406780:	cbz	x19, 406844 <nftw@plt+0x3b54>
  406784:	mov	x0, x19
  406788:	mov	w1, #0x400b                	// #16395
  40678c:	bl	43a880 <nftw@plt+0x37b90>
  406790:	cmp	x0, #0x0
  406794:	adrp	x25, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  406798:	mov	x20, x0
  40679c:	csel	x19, x19, x0, eq  // eq = none
  4067a0:	add	x25, x25, #0x2c0
  4067a4:	mov	x21, #0x0                   	// #0
  4067a8:	ldr	x26, [x25, x21, lsl #3]
  4067ac:	mov	x0, x26
  4067b0:	bl	402630 <strlen@plt>
  4067b4:	mov	x1, x26
  4067b8:	mov	x22, x0
  4067bc:	mov	x2, x0
  4067c0:	mov	x0, x19
  4067c4:	bl	4027f0 <strncmp@plt>
  4067c8:	cbnz	w0, 4067ec <nftw@plt+0x3afc>
  4067cc:	ldrb	w0, [x19, x22]
  4067d0:	cbz	w0, 4067dc <nftw@plt+0x3aec>
  4067d4:	cmp	w0, #0x28
  4067d8:	b.ne	4067ec <nftw@plt+0x3afc>  // b.any
  4067dc:	cbz	x20, 406738 <nftw@plt+0x3a48>
  4067e0:	mov	x0, x20
  4067e4:	bl	402a80 <free@plt>
  4067e8:	b	406738 <nftw@plt+0x3a48>
  4067ec:	add	x21, x21, #0x1
  4067f0:	cmp	x21, #0x4
  4067f4:	b.ne	4067a8 <nftw@plt+0x3ab8>  // b.any
  4067f8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4067fc:	ldr	x0, [x0, #1416]
  406800:	cbnz	x19, 40680c <nftw@plt+0x3b1c>
  406804:	adrp	x19, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406808:	add	x19, x19, #0xe6f
  40680c:	cbnz	x27, 406818 <nftw@plt+0x3b28>
  406810:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406814:	add	x27, x2, #0xe6f
  406818:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40681c:	mov	w5, w24
  406820:	mov	x4, x27
  406824:	mov	x3, x19
  406828:	mov	x2, x23
  40682c:	add	x1, x1, #0xe73
  406830:	bl	402cb0 <fprintf@plt>
  406834:	cbz	x20, 40670c <nftw@plt+0x3a1c>
  406838:	mov	x0, x20
  40683c:	bl	402a80 <free@plt>
  406840:	b	40670c <nftw@plt+0x3a1c>
  406844:	mov	x20, #0x0                   	// #0
  406848:	b	4067f8 <nftw@plt+0x3b08>
  40684c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  406850:	ldr	x1, [x0, #944]
  406854:	ldr	w0, [x1, #240]
  406858:	add	w0, w0, #0x1
  40685c:	str	w0, [x1, #240]
  406860:	ret
  406864:	stp	x29, x30, [sp, #-272]!
  406868:	mov	x29, sp
  40686c:	stp	x1, x2, [sp, #216]
  406870:	add	x1, sp, #0x110
  406874:	stp	x1, x1, [sp, #48]
  406878:	add	x1, sp, #0xd0
  40687c:	str	x1, [sp, #64]
  406880:	mov	w1, #0xffffffc8            	// #-56
  406884:	str	w1, [sp, #72]
  406888:	mov	w1, #0xffffff80            	// #-128
  40688c:	str	w1, [sp, #76]
  406890:	add	x1, sp, #0x10
  406894:	stp	x3, x4, [sp, #232]
  406898:	ldp	x2, x3, [sp, #48]
  40689c:	stp	x2, x3, [sp, #16]
  4068a0:	ldp	x2, x3, [sp, #64]
  4068a4:	stp	x2, x3, [sp, #32]
  4068a8:	str	q0, [sp, #80]
  4068ac:	str	q1, [sp, #96]
  4068b0:	str	q2, [sp, #112]
  4068b4:	str	q3, [sp, #128]
  4068b8:	str	q4, [sp, #144]
  4068bc:	str	q5, [sp, #160]
  4068c0:	str	q6, [sp, #176]
  4068c4:	str	q7, [sp, #192]
  4068c8:	stp	x5, x6, [sp, #248]
  4068cc:	str	x7, [sp, #264]
  4068d0:	bl	43d32c <_obstack_memory_used@@Base+0x2d4>
  4068d4:	ldp	x29, x30, [sp], #272
  4068d8:	ret
  4068dc:	stp	x29, x30, [sp, #-64]!
  4068e0:	mov	x29, sp
  4068e4:	stp	x21, x22, [sp, #32]
  4068e8:	ldr	x22, [x0]
  4068ec:	stp	x23, x24, [sp, #48]
  4068f0:	mov	x23, x0
  4068f4:	mov	w24, w2
  4068f8:	stp	x19, x20, [sp, #16]
  4068fc:	ldrb	w0, [x22, #67]
  406900:	mov	w20, w3
  406904:	mov	x19, x1
  406908:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40690c:	add	x1, x1, #0xe8b
  406910:	bl	40900c <nftw@plt+0x631c>
  406914:	mov	x21, x0
  406918:	ldrb	w0, [x22, #67]
  40691c:	bl	409328 <nftw@plt+0x6638>
  406920:	mov	x22, x0
  406924:	cbnz	x19, 406930 <nftw@plt+0x3c40>
  406928:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40692c:	ldr	x19, [x0, #1928]
  406930:	mov	x0, x19
  406934:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406938:	add	x1, x1, #0xe91
  40693c:	bl	402a00 <strcmp@plt>
  406940:	cmp	w0, #0x0
  406944:	csel	w3, w0, w24, eq  // eq = none
  406948:	ldrb	w0, [x23, #121]
  40694c:	cbz	w0, 4069c8 <nftw@plt+0x3cd8>
  406950:	cbz	w3, 4069cc <nftw@plt+0x3cdc>
  406954:	cmp	w20, #0x0
  406958:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40695c:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406960:	add	x0, x0, #0xe84
  406964:	add	x2, x2, #0xe87
  406968:	csel	x2, x2, x0, eq  // eq = none
  40696c:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  406970:	add	x0, x0, #0x788
  406974:	mov	w4, w20
  406978:	add	x0, x0, #0x8
  40697c:	mov	x1, #0x20                  	// #32
  406980:	bl	402730 <snprintf@plt>
  406984:	mov	x4, x22
  406988:	mov	x2, x19
  40698c:	mov	x1, x21
  406990:	adrp	x3, 47e000 <__environ@@GLIBC_2.17+0xa50>
  406994:	ldp	x19, x20, [sp, #16]
  406998:	add	x3, x3, #0x788
  40699c:	ldp	x21, x22, [sp, #32]
  4069a0:	add	x3, x3, #0x8
  4069a4:	ldp	x23, x24, [sp, #48]
  4069a8:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4069ac:	ldp	x29, x30, [sp], #64
  4069b0:	add	x0, x0, #0xe9c
  4069b4:	b	406864 <nftw@plt+0x3b74>
  4069b8:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4069bc:	mov	w20, #0x0                   	// #0
  4069c0:	add	x2, x2, #0xe87
  4069c4:	b	40696c <nftw@plt+0x3c7c>
  4069c8:	cbnz	w3, 4069b8 <nftw@plt+0x3cc8>
  4069cc:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4069d0:	strb	wzr, [x0, #1936]
  4069d4:	b	406984 <nftw@plt+0x3c94>
  4069d8:	stp	x29, x30, [sp, #-32]!
  4069dc:	mov	x29, sp
  4069e0:	ldp	w2, w3, [x1, #8]
  4069e4:	stp	x19, x20, [sp, #16]
  4069e8:	mov	x19, x0
  4069ec:	ldr	x1, [x1]
  4069f0:	bl	4068dc <nftw@plt+0x3bec>
  4069f4:	mov	x1, x0
  4069f8:	mov	x20, x0
  4069fc:	ldr	x0, [x19]
  406a00:	bl	40de28 <nftw@plt+0xb138>
  406a04:	mov	x0, x20
  406a08:	bl	402a80 <free@plt>
  406a0c:	ldr	x0, [x19]
  406a10:	ldp	x19, x20, [sp, #16]
  406a14:	ldp	x29, x30, [sp], #32
  406a18:	b	40da20 <nftw@plt+0xad30>
  406a1c:	stp	x29, x30, [sp, #-48]!
  406a20:	mov	x29, sp
  406a24:	stp	x19, x20, [sp, #16]
  406a28:	mov	x19, x0
  406a2c:	ldr	x0, [x0]
  406a30:	ldrb	w0, [x0, #67]
  406a34:	str	x21, [sp, #32]
  406a38:	mov	x21, x1
  406a3c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406a40:	add	x1, x1, #0xe8b
  406a44:	bl	40900c <nftw@plt+0x631c>
  406a48:	mov	x20, x0
  406a4c:	ldr	x0, [x19]
  406a50:	ldrb	w0, [x0, #67]
  406a54:	bl	409328 <nftw@plt+0x6638>
  406a58:	mov	x3, x0
  406a5c:	mov	x2, x21
  406a60:	mov	x1, x20
  406a64:	ldp	x19, x20, [sp, #16]
  406a68:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406a6c:	ldr	x21, [sp, #32]
  406a70:	add	x0, x0, #0xea6
  406a74:	ldp	x29, x30, [sp], #48
  406a78:	b	406864 <nftw@plt+0x3b74>
  406a7c:	stp	x29, x30, [sp, #-32]!
  406a80:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406a84:	add	x0, x0, #0xeaf
  406a88:	mov	x29, sp
  406a8c:	bl	402c30 <getenv@plt>
  406a90:	cbz	x0, 406aa0 <nftw@plt+0x3db0>
  406a94:	bl	402770 <atoi@plt>
  406a98:	cmp	w0, #0x0
  406a9c:	b.gt	406ac8 <nftw@plt+0x3dd8>
  406aa0:	add	x2, sp, #0x18
  406aa4:	mov	x1, #0x5413                	// #21523
  406aa8:	mov	w0, #0x0                   	// #0
  406aac:	strh	wzr, [sp, #26]
  406ab0:	bl	402cc0 <ioctl@plt>
  406ab4:	cbnz	w0, 406ad0 <nftw@plt+0x3de0>
  406ab8:	ldrh	w0, [sp, #26]
  406abc:	mov	w1, #0x7fffffff            	// #2147483647
  406ac0:	cmp	w0, #0x0
  406ac4:	csel	w0, w0, w1, ne  // ne = any
  406ac8:	ldp	x29, x30, [sp], #32
  406acc:	ret
  406ad0:	mov	w0, #0x7fffffff            	// #2147483647
  406ad4:	b	406ac8 <nftw@plt+0x3dd8>
  406ad8:	stp	x29, x30, [sp, #-32]!
  406adc:	mov	x29, sp
  406ae0:	str	x19, [sp, #16]
  406ae4:	mov	x19, x0
  406ae8:	cbz	w1, 406afc <nftw@plt+0x3e0c>
  406aec:	sub	w1, w1, #0x1
  406af0:	cmp	w1, #0x0
  406af4:	b.gt	406b18 <nftw@plt+0x3e28>
  406af8:	b	406b14 <nftw@plt+0x3e24>
  406afc:	ldr	x0, [x0]
  406b00:	ldr	x0, [x0, #8]
  406b04:	ldr	x0, [x0, #192]
  406b08:	bl	402810 <fileno_unlocked@plt>
  406b0c:	bl	402b60 <isatty@plt>
  406b10:	cbnz	w0, 406b28 <nftw@plt+0x3e38>
  406b14:	mov	w1, #0x7fffffff            	// #2147483647
  406b18:	str	w1, [x19, #112]
  406b1c:	ldr	x19, [sp, #16]
  406b20:	ldp	x29, x30, [sp], #32
  406b24:	ret
  406b28:	bl	406a7c <nftw@plt+0x3d8c>
  406b2c:	sub	w1, w0, #0x1
  406b30:	b	406af0 <nftw@plt+0x3e00>
  406b34:	stp	x29, x30, [sp, #-48]!
  406b38:	mov	x29, sp
  406b3c:	stp	x19, x20, [sp, #16]
  406b40:	mov	x19, x0
  406b44:	mov	w20, w1
  406b48:	str	x21, [sp, #32]
  406b4c:	mov	x21, x19
  406b50:	mov	x0, #0x48                  	// #72
  406b54:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  406b58:	mov	w1, #0x0                   	// #0
  406b5c:	str	x0, [x21], #8
  406b60:	bl	40d7ac <nftw@plt+0xaabc>
  406b64:	stp	xzr, xzr, [x19, #8]
  406b68:	sbfiz	x0, x20, #2, #32
  406b6c:	stp	xzr, xzr, [x21, #16]
  406b70:	stp	xzr, xzr, [x21, #32]
  406b74:	str	xzr, [x21, #48]
  406b78:	strb	wzr, [x19, #64]
  406b7c:	str	w20, [x19, #68]
  406b80:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  406b84:	str	x0, [x19, #72]
  406b88:	mov	x1, #0x0                   	// #0
  406b8c:	cmp	w20, w1
  406b90:	b.le	406ba0 <nftw@plt+0x3eb0>
  406b94:	str	wzr, [x0, x1, lsl #2]
  406b98:	add	x1, x1, #0x1
  406b9c:	b	406b8c <nftw@plt+0x3e9c>
  406ba0:	ldr	x0, [x19]
  406ba4:	strb	wzr, [x19, #108]
  406ba8:	ldr	w1, [x0, #40]
  406bac:	mov	x0, x19
  406bb0:	bl	406ad8 <nftw@plt+0x3de8>
  406bb4:	strh	wzr, [x19, #128]
  406bb8:	mov	w0, #0x5e5e                	// #24158
  406bbc:	strb	wzr, [x19, #130]
  406bc0:	movk	w0, #0x5e, lsl #16
  406bc4:	strh	wzr, [x19, #228]
  406bc8:	ldr	x21, [sp, #32]
  406bcc:	str	w0, [x19, #116]
  406bd0:	adrp	x0, 408000 <nftw@plt+0x5310>
  406bd4:	add	x0, x0, #0x508
  406bd8:	str	x0, [x19, #136]
  406bdc:	adrp	x0, 406000 <nftw@plt+0x3310>
  406be0:	add	x0, x0, #0x9d8
  406be4:	str	x0, [x19, #144]
  406be8:	adrp	x0, 406000 <nftw@plt+0x3310>
  406bec:	add	x0, x0, #0x638
  406bf0:	str	xzr, [x19, #120]
  406bf4:	str	wzr, [x19, #132]
  406bf8:	str	x0, [x19, #152]
  406bfc:	adrp	x0, 406000 <nftw@plt+0x3310>
  406c00:	add	x0, x0, #0x66c
  406c04:	stp	xzr, xzr, [x19, #160]
  406c08:	stp	xzr, xzr, [x19, #176]
  406c0c:	str	xzr, [x19, #192]
  406c10:	str	wzr, [x19, #200]
  406c14:	stp	xzr, xzr, [x19, #208]
  406c18:	str	wzr, [x19, #224]
  406c1c:	stp	xzr, xzr, [x19, #232]
  406c20:	stp	xzr, xzr, [x19, #248]
  406c24:	str	x0, [x19, #264]
  406c28:	ldp	x19, x20, [sp, #16]
  406c2c:	ldp	x29, x30, [sp], #48
  406c30:	ret
  406c34:	stp	x29, x30, [sp, #-32]!
  406c38:	cmp	w1, #0x0
  406c3c:	mov	x29, sp
  406c40:	str	x19, [sp, #16]
  406c44:	ldr	x19, [x0]
  406c48:	mov	w0, #0x2                   	// #2
  406c4c:	csel	w0, w1, w0, ge  // ge = tcont
  406c50:	bl	409344 <nftw@plt+0x6654>
  406c54:	strb	w0, [x19, #67]
  406c58:	ldr	x19, [sp, #16]
  406c5c:	ldp	x29, x30, [sp], #32
  406c60:	ret
  406c64:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  406c68:	add	x1, x1, #0x2c0
  406c6c:	add	x1, x1, #0x20
  406c70:	ldr	x0, [x1, w0, sxtw #3]
  406c74:	ret
  406c78:	stp	x29, x30, [sp, #-96]!
  406c7c:	mov	x29, sp
  406c80:	stp	x19, x20, [sp, #16]
  406c84:	mov	x19, x0
  406c88:	mov	w20, w1
  406c8c:	ldr	x0, [x0]
  406c90:	stp	x21, x22, [sp, #32]
  406c94:	stp	x23, x24, [sp, #48]
  406c98:	ldrb	w1, [x0, #65]
  406c9c:	stp	x25, x26, [sp, #64]
  406ca0:	str	xzr, [sp, #88]
  406ca4:	cbz	w1, 406cb4 <nftw@plt+0x3fc4>
  406ca8:	bl	40da20 <nftw@plt+0xad30>
  406cac:	ldr	x0, [x19]
  406cb0:	strb	wzr, [x0, #65]
  406cb4:	cmp	w20, #0x1
  406cb8:	b.ls	406e00 <nftw@plt+0x4110>  // b.plast
  406cbc:	adrp	x21, 47e000 <__environ@@GLIBC_2.17+0xa50>
  406cc0:	add	x3, sp, #0x58
  406cc4:	mov	w1, w20
  406cc8:	mov	w2, #0x2                   	// #2
  406ccc:	ldr	x0, [x21, #2320]
  406cd0:	bl	4268c8 <nftw@plt+0x23bd8>
  406cd4:	ldr	x0, [sp, #88]
  406cd8:	cbz	x0, 406e00 <nftw@plt+0x4110>
  406cdc:	ldr	x1, [x19, #208]
  406ce0:	cmp	x0, x1
  406ce4:	b.eq	406e00 <nftw@plt+0x4110>  // b.none
  406ce8:	str	x0, [x19, #208]
  406cec:	ldr	w0, [x0, #20]
  406cf0:	cbz	w0, 406e00 <nftw@plt+0x4110>
  406cf4:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  406cf8:	adrp	x22, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406cfc:	adrp	x23, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406d00:	add	x20, x20, #0x788
  406d04:	add	x22, x22, #0xe87
  406d08:	add	x23, x23, #0xeb7
  406d0c:	mov	w25, #0x1                   	// #1
  406d10:	ldr	x0, [x21, #2320]
  406d14:	ldr	x1, [sp, #88]
  406d18:	ldr	w24, [x1, #20]
  406d1c:	bl	425bc8 <nftw@plt+0x22ed8>
  406d20:	ldr	w4, [x0]
  406d24:	ldrb	w2, [x0, #6]
  406d28:	sub	w1, w24, w4
  406d2c:	ldr	w4, [x0, #16]
  406d30:	str	x0, [sp, #88]
  406d34:	lsr	w3, w1, w2
  406d38:	add	w3, w3, w4
  406d3c:	cbz	w25, 406e20 <nftw@plt+0x4130>
  406d40:	ldrb	w4, [x19, #121]
  406d44:	cbz	w4, 406e20 <nftw@plt+0x4130>
  406d48:	mov	w4, #0x1                   	// #1
  406d4c:	ldrb	w0, [x0, #7]
  406d50:	lsl	w4, w4, w2
  406d54:	sub	w4, w4, #0x1
  406d58:	and	w4, w4, w1
  406d5c:	lsr	w4, w4, w0
  406d60:	cbz	w3, 406e18 <nftw@plt+0x4128>
  406d64:	cmp	w4, #0x0
  406d68:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406d6c:	add	x2, x2, #0xe84
  406d70:	csel	x2, x22, x2, eq  // eq = none
  406d74:	add	x0, x20, #0x8
  406d78:	mov	x1, #0x20                  	// #32
  406d7c:	bl	402730 <snprintf@plt>
  406d80:	eor	w0, w25, #0x1
  406d84:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  406d88:	add	x1, x1, #0x2c0
  406d8c:	cmp	w25, #0x0
  406d90:	add	x0, x1, x0, lsl #3
  406d94:	adrp	x24, 44d000 <_obstack_memory_used@@Base+0xffa8>
  406d98:	add	x24, x24, #0xe54
  406d9c:	mov	w25, #0x0                   	// #0
  406da0:	csel	x24, x24, x23, ne  // ne = any
  406da4:	ldr	x0, [x0, #152]
  406da8:	ldr	x26, [x19]
  406dac:	bl	402c90 <gettext@plt>
  406db0:	mov	x3, x0
  406db4:	ldr	x1, [sp, #88]
  406db8:	mov	x0, x26
  406dbc:	add	x6, x20, #0x8
  406dc0:	mov	x2, x24
  406dc4:	adrp	x4, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406dc8:	add	x4, x4, #0xe8b
  406dcc:	ldr	x5, [x1, #8]
  406dd0:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  406dd4:	add	x1, x1, #0xeba
  406dd8:	bl	40f3e0 <nftw@plt+0xc6f0>
  406ddc:	ldr	x0, [sp, #88]
  406de0:	ldr	w0, [x0, #20]
  406de4:	cbnz	w0, 406d10 <nftw@plt+0x4020>
  406de8:	ldr	x0, [x19]
  406dec:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  406df0:	add	x1, x1, #0xe8c
  406df4:	bl	40f3e0 <nftw@plt+0xc6f0>
  406df8:	ldr	x0, [x19]
  406dfc:	bl	40da20 <nftw@plt+0xad30>
  406e00:	ldp	x19, x20, [sp, #16]
  406e04:	ldp	x21, x22, [sp, #32]
  406e08:	ldp	x23, x24, [sp, #48]
  406e0c:	ldp	x25, x26, [sp, #64]
  406e10:	ldp	x29, x30, [sp], #96
  406e14:	ret
  406e18:	strb	wzr, [x20, #8]
  406e1c:	b	406d80 <nftw@plt+0x4090>
  406e20:	cbz	w3, 406e18 <nftw@plt+0x4128>
  406e24:	mov	x2, x22
  406e28:	mov	w4, #0x0                   	// #0
  406e2c:	b	406d74 <nftw@plt+0x4084>
  406e30:	stp	x29, x30, [sp, #-64]!
  406e34:	mov	x29, sp
  406e38:	stp	x19, x20, [sp, #16]
  406e3c:	stp	x21, x22, [sp, #32]
  406e40:	stp	x23, x24, [sp, #48]
  406e44:	tbnz	w1, #31, 406f38 <nftw@plt+0x4248>
  406e48:	mov	x19, x0
  406e4c:	ldr	w0, [x0, #68]
  406e50:	mov	w21, w1
  406e54:	cmp	w0, w1
  406e58:	b.le	406f38 <nftw@plt+0x4248>
  406e5c:	mov	w24, w2
  406e60:	cmp	w2, #0xd
  406e64:	b.gt	406f38 <nftw@plt+0x4248>
  406e68:	ldr	x0, [x19, #72]
  406e6c:	sbfiz	x22, x1, #2, #32
  406e70:	mov	w23, w3
  406e74:	ldr	w20, [x0, x22]
  406e78:	cbz	w3, 406f30 <nftw@plt+0x4240>
  406e7c:	cbnz	w20, 406eac <nftw@plt+0x41bc>
  406e80:	mov	w0, w1
  406e84:	ldp	x2, x1, [x19, #168]
  406e88:	blr	x2
  406e8c:	cbz	w0, 406f20 <nftw@plt+0x4230>
  406e90:	ldrb	w0, [x19, #64]
  406e94:	mov	w20, #0x4                   	// #4
  406e98:	cmp	w0, #0x0
  406e9c:	mov	w0, #0x6                   	// #6
  406ea0:	csel	w20, w20, w0, ne  // ne = any
  406ea4:	ldr	x0, [x19, #72]
  406ea8:	str	w20, [x0, x22]
  406eac:	ldr	w1, [x19, #88]
  406eb0:	mov	w22, #0xc                   	// #12
  406eb4:	ldr	x0, [x19, #80]
  406eb8:	sub	w1, w1, #0x1
  406ebc:	smull	x22, w1, w22
  406ec0:	mov	x2, x22
  406ec4:	tbnz	w1, #31, 406ee0 <nftw@plt+0x41f0>
  406ec8:	add	x3, x0, x2
  406ecc:	sub	x2, x2, #0xc
  406ed0:	ldr	w4, [x3, #4]
  406ed4:	cmp	w4, w21
  406ed8:	b.ne	406f28 <nftw@plt+0x4238>  // b.any
  406edc:	ldr	w20, [x3, #8]
  406ee0:	add	x1, x22, #0x18
  406ee4:	add	x22, x22, #0xc
  406ee8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  406eec:	add	x1, x0, x22
  406ef0:	str	x0, [x19, #80]
  406ef4:	str	w23, [x0, x22]
  406ef8:	stp	w21, w24, [x1, #4]
  406efc:	ldr	w0, [x19, #88]
  406f00:	add	w0, w0, #0x1
  406f04:	str	w0, [x19, #88]
  406f08:	mov	w0, w20
  406f0c:	ldp	x19, x20, [sp, #16]
  406f10:	ldp	x21, x22, [sp, #32]
  406f14:	ldp	x23, x24, [sp, #48]
  406f18:	ldp	x29, x30, [sp], #64
  406f1c:	ret
  406f20:	mov	w20, #0x1                   	// #1
  406f24:	b	406ea4 <nftw@plt+0x41b4>
  406f28:	sub	w1, w1, #0x1
  406f2c:	b	406ec4 <nftw@plt+0x41d4>
  406f30:	str	w2, [x0, x22]
  406f34:	b	406f08 <nftw@plt+0x4218>
  406f38:	mov	w20, #0x0                   	// #0
  406f3c:	b	406f08 <nftw@plt+0x4218>
  406f40:	stp	x29, x30, [sp, #-32]!
  406f44:	mov	x29, sp
  406f48:	ldr	w1, [x0, #104]
  406f4c:	str	x19, [sp, #16]
  406f50:	mov	x19, x0
  406f54:	ldr	x0, [x0, #96]
  406f58:	add	w1, w1, #0x1
  406f5c:	sbfiz	x1, x1, #2, #32
  406f60:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  406f64:	str	x0, [x19, #96]
  406f68:	ldr	w1, [x19, #104]
  406f6c:	add	w2, w1, #0x1
  406f70:	str	w2, [x19, #104]
  406f74:	ldr	w2, [x19, #88]
  406f78:	str	w2, [x0, w1, sxtw #2]
  406f7c:	ldr	x19, [sp, #16]
  406f80:	ldp	x29, x30, [sp], #32
  406f84:	ret
  406f88:	stp	x29, x30, [sp, #-48]!
  406f8c:	mov	x29, sp
  406f90:	stp	x21, x22, [sp, #32]
  406f94:	mov	w22, w1
  406f98:	ldr	w21, [x0, #104]
  406f9c:	stp	x19, x20, [sp, #16]
  406fa0:	mov	x19, x0
  406fa4:	cbz	w21, 406fb8 <nftw@plt+0x42c8>
  406fa8:	ldr	x0, [x0, #96]
  406fac:	sub	w21, w21, #0x1
  406fb0:	str	w21, [x19, #104]
  406fb4:	ldr	w21, [x0, w21, sxtw #2]
  406fb8:	ldr	w20, [x19, #88]
  406fbc:	mov	w1, #0xc                   	// #12
  406fc0:	ldr	x0, [x19, #80]
  406fc4:	add	w20, w20, #0x1
  406fc8:	smull	x20, w20, w1
  406fcc:	mov	x1, x20
  406fd0:	sub	x20, x20, #0xc
  406fd4:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  406fd8:	add	x1, x0, x20
  406fdc:	str	x0, [x19, #80]
  406fe0:	str	w22, [x0, x20]
  406fe4:	mov	w0, #0xf                   	// #15
  406fe8:	stp	w21, w0, [x1, #4]
  406fec:	ldp	x21, x22, [sp, #32]
  406ff0:	ldr	w0, [x19, #88]
  406ff4:	add	w0, w0, #0x1
  406ff8:	str	w0, [x19, #88]
  406ffc:	ldp	x19, x20, [sp, #16]
  407000:	ldp	x29, x30, [sp], #48
  407004:	ret
  407008:	mov	x4, x0
  40700c:	mov	x2, x0
  407010:	ldrb	w0, [x2]
  407014:	cmp	w0, #0x2e
  407018:	b.ne	40703c <nftw@plt+0x434c>  // b.any
  40701c:	ldrb	w0, [x2, #1]
  407020:	cmp	w0, #0x2e
  407024:	b.ne	40703c <nftw@plt+0x434c>  // b.any
  407028:	ldrb	w0, [x2, #2]
  40702c:	cmp	w0, #0x2f
  407030:	b.ne	40703c <nftw@plt+0x434c>  // b.any
  407034:	add	x2, x2, #0x3
  407038:	b	407010 <nftw@plt+0x4320>
  40703c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  407040:	add	x1, x1, #0x2c0
  407044:	add	x1, x1, #0xa8
  407048:	ldrb	w0, [x1, #1]
  40704c:	cmp	w0, #0x2e
  407050:	b.ne	407060 <nftw@plt+0x4370>  // b.any
  407054:	ldrb	w0, [x1, #2]
  407058:	cmp	w0, #0x2f
  40705c:	b.eq	407084 <nftw@plt+0x4394>  // b.none
  407060:	mov	x3, #0x0                   	// #0
  407064:	ldrb	w5, [x2, x3]
  407068:	add	x0, x2, x3
  40706c:	ldrb	w6, [x1, x3]
  407070:	cmp	w5, w6
  407074:	b.ne	407094 <nftw@plt+0x43a4>  // b.any
  407078:	cbz	w5, 407094 <nftw@plt+0x43a4>
  40707c:	add	x3, x3, #0x1
  407080:	b	407064 <nftw@plt+0x4374>
  407084:	ldrb	w0, [x1, #3]!
  407088:	cmp	w0, #0x2e
  40708c:	b.eq	407048 <nftw@plt+0x4358>  // b.none
  407090:	b	407060 <nftw@plt+0x4370>
  407094:	cmp	x0, x4
  407098:	b.ls	4070b0 <nftw@plt+0x43c0>  // b.plast
  40709c:	ldurb	w1, [x0, #-1]
  4070a0:	cmp	w1, #0x2f
  4070a4:	b.eq	4070b0 <nftw@plt+0x43c0>  // b.none
  4070a8:	sub	x0, x0, #0x1
  4070ac:	b	407094 <nftw@plt+0x43a4>
  4070b0:	ret
  4070b4:	stp	x29, x30, [sp, #-304]!
  4070b8:	mov	x29, sp
  4070bc:	str	x19, [sp, #16]
  4070c0:	mov	x19, x0
  4070c4:	add	x0, sp, #0x130
  4070c8:	stp	x0, x0, [sp, #40]
  4070cc:	add	x0, sp, #0xf0
  4070d0:	str	x0, [sp, #56]
  4070d4:	mov	w0, #0xffffffc8            	// #-56
  4070d8:	str	w0, [sp, #64]
  4070dc:	mov	w0, #0xffffff80            	// #-128
  4070e0:	str	w0, [sp, #68]
  4070e4:	str	q0, [sp, #112]
  4070e8:	str	q1, [sp, #128]
  4070ec:	str	q2, [sp, #144]
  4070f0:	str	q3, [sp, #160]
  4070f4:	str	q4, [sp, #176]
  4070f8:	str	q5, [sp, #192]
  4070fc:	str	q6, [sp, #208]
  407100:	str	q7, [sp, #224]
  407104:	stp	x1, x2, [sp, #248]
  407108:	stp	x3, x4, [sp, #264]
  40710c:	stp	x5, x6, [sp, #280]
  407110:	str	x7, [sp, #296]
  407114:	bl	402c20 <__errno_location@plt>
  407118:	ldr	w0, [x0]
  40711c:	str	w0, [sp, #88]
  407120:	add	x0, sp, #0x28
  407124:	str	x0, [sp, #80]
  407128:	mov	x0, x19
  40712c:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  407130:	bl	402c90 <gettext@plt>
  407134:	str	x0, [sp, #72]
  407138:	add	x1, sp, #0x48
  40713c:	ldr	x0, [x19, #944]
  407140:	str	xzr, [sp, #96]
  407144:	ldr	x0, [x0]
  407148:	bl	40f3a8 <nftw@plt+0xc6b8>
  40714c:	ldr	x0, [x19, #944]
  407150:	ldr	x0, [x0]
  407154:	bl	40df5c <nftw@plt+0xb26c>
  407158:	ldr	x19, [sp, #16]
  40715c:	ldp	x29, x30, [sp], #304
  407160:	ret
  407164:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  407168:	ldr	x0, [x0, #944]
  40716c:	ldr	x0, [x0, #24]
  407170:	cmp	x0, #0x0
  407174:	cset	w0, ne  // ne = any
  407178:	ret
  40717c:	stp	x29, x30, [sp, #-272]!
  407180:	mov	x29, sp
  407184:	str	x19, [sp, #16]
  407188:	mov	x19, x0
  40718c:	mov	x0, x1
  407190:	add	x1, sp, #0x110
  407194:	stp	x1, x1, [sp, #64]
  407198:	add	x1, sp, #0xe0
  40719c:	str	x1, [sp, #80]
  4071a0:	mov	w1, #0xffffffd0            	// #-48
  4071a4:	str	w1, [sp, #88]
  4071a8:	mov	w1, #0xffffff80            	// #-128
  4071ac:	str	w1, [sp, #92]
  4071b0:	str	q0, [sp, #96]
  4071b4:	str	q1, [sp, #112]
  4071b8:	str	q2, [sp, #128]
  4071bc:	str	q3, [sp, #144]
  4071c0:	str	q4, [sp, #160]
  4071c4:	str	q5, [sp, #176]
  4071c8:	str	q6, [sp, #192]
  4071cc:	str	q7, [sp, #208]
  4071d0:	stp	x2, x3, [sp, #224]
  4071d4:	stp	x4, x5, [sp, #240]
  4071d8:	stp	x6, x7, [sp, #256]
  4071dc:	bl	402c90 <gettext@plt>
  4071e0:	mov	x1, x0
  4071e4:	ldp	x2, x3, [sp, #64]
  4071e8:	stp	x2, x3, [sp, #32]
  4071ec:	mov	x0, x19
  4071f0:	ldp	x2, x3, [sp, #80]
  4071f4:	stp	x2, x3, [sp, #48]
  4071f8:	add	x2, sp, #0x20
  4071fc:	bl	402c00 <vfprintf@plt>
  407200:	ldr	x19, [sp, #16]
  407204:	ldp	x29, x30, [sp], #272
  407208:	ret
  40720c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  407210:	ldr	x1, [x0, #944]
  407214:	ldr	w0, [x1, #240]
  407218:	add	w0, w0, #0x1
  40721c:	str	w0, [x1, #240]
  407220:	ret
  407224:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  407228:	ldr	x0, [x1, #944]
  40722c:	ldr	w2, [x0, #240]
  407230:	sub	w2, w2, #0x1
  407234:	str	w2, [x0, #240]
  407238:	cbnz	w2, 407278 <nftw@plt+0x4588>
  40723c:	stp	x29, x30, [sp, #-32]!
  407240:	mov	x29, sp
  407244:	str	x19, [sp, #16]
  407248:	mov	x19, x1
  40724c:	ldr	w1, [x0, #244]
  407250:	cmp	w1, #0x0
  407254:	b.le	407264 <nftw@plt+0x4574>
  407258:	ldr	x1, [x0, #256]
  40725c:	cbz	x1, 407264 <nftw@plt+0x4574>
  407260:	blr	x1
  407264:	ldr	x0, [x19, #944]
  407268:	ldr	x19, [sp, #16]
  40726c:	str	wzr, [x0, #244]
  407270:	ldp	x29, x30, [sp], #32
  407274:	ret
  407278:	ret
  40727c:	stp	x29, x30, [sp, #-32]!
  407280:	mov	x29, sp
  407284:	ldr	x1, [x0, #264]
  407288:	stp	x19, x20, [sp, #16]
  40728c:	mov	x19, x0
  407290:	cbz	x1, 407298 <nftw@plt+0x45a8>
  407294:	blr	x1
  407298:	bl	4115a4 <nftw@plt+0xe8b4>
  40729c:	ldr	x0, [x19, #72]
  4072a0:	bl	402a80 <free@plt>
  4072a4:	ldr	x0, [x19]
  4072a8:	ldr	x1, [x0]
  4072ac:	ldr	x1, [x1]
  4072b0:	str	xzr, [x19, #72]
  4072b4:	blr	x1
  4072b8:	ldr	x0, [x19]
  4072bc:	bl	402a80 <free@plt>
  4072c0:	str	xzr, [x19]
  4072c4:	ldr	x20, [x19, #232]
  4072c8:	cbz	x20, 4072e8 <nftw@plt+0x45f8>
  4072cc:	ldr	x1, [x20, #8]
  4072d0:	add	x0, x20, #0x8
  4072d4:	bl	409040 <nftw@plt+0x6350>
  4072d8:	mov	x0, x20
  4072dc:	mov	x1, #0x28                  	// #40
  4072e0:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  4072e4:	str	xzr, [x19, #232]
  4072e8:	ldp	x19, x20, [sp, #16]
  4072ec:	ldp	x29, x30, [sp], #32
  4072f0:	ret
  4072f4:	ldr	w2, [x0, #132]
  4072f8:	cbz	w2, 40735c <nftw@plt+0x466c>
  4072fc:	stp	x29, x30, [sp, #-32]!
  407300:	mov	x29, sp
  407304:	stp	x19, x20, [sp, #16]
  407308:	mov	x19, x0
  40730c:	and	w20, w1, #0xff
  407310:	ldp	w0, w1, [x0, #24]
  407314:	add	w0, w0, w1
  407318:	ldr	w1, [x19, #56]
  40731c:	add	w0, w0, w1
  407320:	cmp	w2, w0
  407324:	b.gt	407350 <nftw@plt+0x4660>
  407328:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40732c:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  407330:	add	x1, x1, #0xec8
  407334:	ldr	x0, [x0, #1416]
  407338:	bl	40717c <nftw@plt+0x448c>
  40733c:	cbz	w20, 407348 <nftw@plt+0x4658>
  407340:	mov	x0, x19
  407344:	bl	40727c <nftw@plt+0x458c>
  407348:	mov	w0, #0x1                   	// #1
  40734c:	bl	402660 <exit@plt>
  407350:	ldp	x19, x20, [sp, #16]
  407354:	ldp	x29, x30, [sp], #32
  407358:	ret
  40735c:	ret
  407360:	stp	x29, x30, [sp, #-48]!
  407364:	sub	w2, w1, #0x2
  407368:	cmp	w2, #0xb
  40736c:	mov	x29, sp
  407370:	stp	x19, x20, [sp, #16]
  407374:	b.hi	407498 <nftw@plt+0x47a8>  // b.pmore
  407378:	mov	x19, x0
  40737c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  407380:	add	x0, x0, #0x2b0
  407384:	ldrb	w0, [x0, w2, uxtw]
  407388:	adr	x2, 407394 <nftw@plt+0x46a4>
  40738c:	add	x0, x2, w0, sxtb #2
  407390:	br	x0
  407394:	ldrb	w0, [x19, #120]
  407398:	cbz	w0, 4073a0 <nftw@plt+0x46b0>
  40739c:	bl	402970 <abort@plt>
  4073a0:	ldrb	w0, [x19, #128]
  4073a4:	cbz	w0, 4074b0 <nftw@plt+0x47c0>
  4073a8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4073ac:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4073b0:	add	x1, x1, #0xef8
  4073b4:	ldr	x0, [x0, #1416]
  4073b8:	bl	40717c <nftw@plt+0x448c>
  4073bc:	mov	x0, x19
  4073c0:	bl	40727c <nftw@plt+0x458c>
  4073c4:	mov	w0, #0x1                   	// #1
  4073c8:	b	40742c <nftw@plt+0x473c>
  4073cc:	cmp	w1, #0x3
  4073d0:	b.eq	407430 <nftw@plt+0x4740>  // b.none
  4073d4:	str	wzr, [sp, #44]
  4073d8:	ldrb	w0, [x19, #120]
  4073dc:	cbnz	w0, 40739c <nftw@plt+0x46ac>
  4073e0:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4073e4:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  4073e8:	add	x1, x1, #0xf27
  4073ec:	ldr	x0, [x19, #1416]
  4073f0:	bl	40717c <nftw@plt+0x448c>
  4073f4:	ldr	w0, [sp, #44]
  4073f8:	cmp	w0, #0x0
  4073fc:	b.le	407410 <nftw@plt+0x4720>
  407400:	ldr	x0, [x19, #1416]
  407404:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  407408:	add	x1, x1, #0xf72
  40740c:	bl	40717c <nftw@plt+0x448c>
  407410:	ldr	x0, [x19, #1416]
  407414:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  407418:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40741c:	add	x2, x2, #0x32d
  407420:	add	x1, x1, #0xfae
  407424:	bl	40717c <nftw@plt+0x448c>
  407428:	mov	w0, #0x4                   	// #4
  40742c:	bl	402660 <exit@plt>
  407430:	adrp	x20, 406000 <nftw@plt+0x3310>
  407434:	add	x20, x20, #0x5d0
  407438:	mov	x2, x20
  40743c:	mov	x3, #0x0                   	// #0
  407440:	mov	w1, #0x0                   	// #0
  407444:	mov	x0, #0x0                   	// #0
  407448:	bl	42e9ec <nftw@plt+0x2bcfc>
  40744c:	str	wzr, [sp, #44]
  407450:	cbz	x0, 4073d8 <nftw@plt+0x46e8>
  407454:	add	x4, sp, #0x2c
  407458:	mov	x3, x20
  40745c:	adrp	x2, 406000 <nftw@plt+0x3310>
  407460:	mov	w1, #0x2                   	// #2
  407464:	add	x2, x2, #0x6e4
  407468:	bl	42eae8 <nftw@plt+0x2bdf8>
  40746c:	b	4073d8 <nftw@plt+0x46e8>
  407470:	ldrb	w0, [x19, #120]
  407474:	cbnz	w0, 40739c <nftw@plt+0x46ac>
  407478:	mov	x0, x19
  40747c:	bl	40727c <nftw@plt+0x458c>
  407480:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  407484:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  407488:	add	x1, x1, #0xfc8
  40748c:	ldr	x0, [x0, #1416]
  407490:	bl	40717c <nftw@plt+0x448c>
  407494:	b	4073c4 <nftw@plt+0x46d4>
  407498:	adrp	x2, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40749c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4074a0:	add	x2, x2, #0xfe1
  4074a4:	add	x0, x0, #0x0
  4074a8:	mov	w1, #0x231                 	// #561
  4074ac:	bl	402d60 <nftw@plt+0x70>
  4074b0:	ldp	x19, x20, [sp, #16]
  4074b4:	ldp	x29, x30, [sp], #48
  4074b8:	ret
  4074bc:	stp	x29, x30, [sp, #-144]!
  4074c0:	mov	x29, sp
  4074c4:	stp	x19, x20, [sp, #16]
  4074c8:	mov	x20, x1
  4074cc:	mov	x19, x0
  4074d0:	mov	w1, #0x0                   	// #0
  4074d4:	mov	x0, x20
  4074d8:	stp	x21, x22, [sp, #32]
  4074dc:	stp	x23, x24, [sp, #48]
  4074e0:	stp	x25, x26, [sp, #64]
  4074e4:	bl	40d564 <nftw@plt+0xa874>
  4074e8:	ldr	w21, [x20, #56]
  4074ec:	mov	w1, w0
  4074f0:	cmp	w21, #0x6
  4074f4:	b.eq	407500 <nftw@plt+0x4810>  // b.none
  4074f8:	cmp	w21, #0xa
  4074fc:	b.ne	407560 <nftw@plt+0x4870>  // b.any
  407500:	ldrb	w0, [x19, #129]
  407504:	cbz	w0, 407524 <nftw@plt+0x4834>
  407508:	mov	w0, #0x0                   	// #0
  40750c:	ldp	x19, x20, [sp, #16]
  407510:	ldp	x21, x22, [sp, #32]
  407514:	ldp	x23, x24, [sp, #48]
  407518:	ldp	x25, x26, [sp, #64]
  40751c:	ldp	x29, x30, [sp], #144
  407520:	ret
  407524:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407528:	ldr	x0, [x0, #2320]
  40752c:	bl	426838 <nftw@plt+0x23b48>
  407530:	cbz	w0, 40753c <nftw@plt+0x484c>
  407534:	ldrb	w0, [x19, #130]
  407538:	cbz	w0, 407508 <nftw@plt+0x4818>
  40753c:	ldr	w0, [x20, #56]
  407540:	cmp	w0, #0xa
  407544:	b.ne	407560 <nftw@plt+0x4870>  // b.any
  407548:	ldrb	w0, [x19, #122]
  40754c:	mov	w21, #0x4                   	// #4
  407550:	cmp	w0, #0x0
  407554:	mov	w0, #0x6                   	// #6
  407558:	csel	w21, w21, w0, ne  // ne = any
  40755c:	str	w21, [x20, #56]
  407560:	ldr	w1, [x20, #56]
  407564:	cmp	w1, #0x8
  407568:	b.ne	407574 <nftw@plt+0x4884>  // b.any
  40756c:	ldrb	w0, [x19, #220]
  407570:	cbnz	w0, 407508 <nftw@plt+0x4818>
  407574:	ldr	w0, [x19, #216]
  407578:	cmp	w0, #0x0
  40757c:	b.le	4075a0 <nftw@plt+0x48b0>
  407580:	cmp	w1, #0x3
  407584:	b.eq	407590 <nftw@plt+0x48a0>  // b.none
  407588:	cmp	w1, #0xd
  40758c:	b.ne	407654 <nftw@plt+0x4964>  // b.any
  407590:	cmp	w0, #0x1
  407594:	b.ne	407654 <nftw@plt+0x4964>  // b.any
  407598:	ldr	x0, [x19]
  40759c:	bl	40df5c <nftw@plt+0xb26c>
  4075a0:	ldrb	w0, [x19, #64]
  4075a4:	cbz	w0, 4075bc <nftw@plt+0x48cc>
  4075a8:	ldr	w0, [x20, #56]
  4075ac:	cmp	w0, #0x6
  4075b0:	b.ne	4075bc <nftw@plt+0x48cc>  // b.any
  4075b4:	mov	w0, #0x4                   	// #4
  4075b8:	str	w0, [x20, #56]
  4075bc:	ldr	w0, [x20, #60]
  4075c0:	cbnz	w0, 407688 <nftw@plt+0x4998>
  4075c4:	ldr	w0, [x20, #56]
  4075c8:	cmp	w0, #0x8
  4075cc:	b.eq	4075dc <nftw@plt+0x48ec>  // b.none
  4075d0:	mov	x0, x19
  4075d4:	mov	w1, #0x0                   	// #0
  4075d8:	bl	4072f4 <nftw@plt+0x4604>
  4075dc:	ldr	w0, [x19, #216]
  4075e0:	add	w0, w0, #0x1
  4075e4:	str	w0, [x19, #216]
  4075e8:	ldr	w0, [x20, #56]
  4075ec:	cmp	w0, #0x3
  4075f0:	b.eq	4075fc <nftw@plt+0x490c>  // b.none
  4075f4:	cmp	w0, #0xd
  4075f8:	b.ne	407760 <nftw@plt+0x4a70>  // b.any
  4075fc:	ldr	w0, [x19, #24]
  407600:	cmp	w0, #0x0
  407604:	b.gt	407614 <nftw@plt+0x4924>
  407608:	ldr	w0, [x19, #28]
  40760c:	cmp	w0, #0x0
  407610:	b.le	40774c <nftw@plt+0x4a5c>
  407614:	ldrb	w0, [x19, #120]
  407618:	cbnz	w0, 40774c <nftw@plt+0x4a5c>
  40761c:	mov	w1, #0x0                   	// #0
  407620:	mov	x0, x20
  407624:	bl	40d564 <nftw@plt+0xa874>
  407628:	add	x8, sp, #0x70
  40762c:	bl	411644 <nftw@plt+0xe954>
  407630:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  407634:	ldr	w3, [sp, #120]
  407638:	ldr	x2, [sp, #112]
  40763c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  407640:	ldr	x0, [x0, #1416]
  407644:	add	x1, x1, #0x56
  407648:	bl	40717c <nftw@plt+0x448c>
  40764c:	mov	w0, #0x4                   	// #4
  407650:	bl	402660 <exit@plt>
  407654:	cmp	w0, #0x2
  407658:	b.gt	407664 <nftw@plt+0x4974>
  40765c:	ldr	x0, [x19]
  407660:	bl	40df5c <nftw@plt+0xb26c>
  407664:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  407668:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40766c:	add	x1, x1, #0x17
  407670:	ldr	x0, [x0, #1416]
  407674:	bl	40717c <nftw@plt+0x448c>
  407678:	mov	x0, x19
  40767c:	mov	w1, #0x3                   	// #3
  407680:	bl	407360 <nftw@plt+0x4670>
  407684:	bl	402970 <abort@plt>
  407688:	ldr	w1, [x19, #124]
  40768c:	cmp	w0, w1
  407690:	b.eq	4075c4 <nftw@plt+0x48d4>  // b.none
  407694:	ldp	x2, x1, [x19, #168]
  407698:	blr	x2
  40769c:	cbz	w0, 407508 <nftw@plt+0x4818>
  4076a0:	ldr	w0, [x19, #88]
  4076a4:	cmp	w0, #0x0
  4076a8:	b.le	407734 <nftw@plt+0x4a44>
  4076ac:	mov	x0, x20
  4076b0:	mov	w1, #0x0                   	// #0
  4076b4:	bl	40d564 <nftw@plt+0xa874>
  4076b8:	ldr	w22, [x19, #88]
  4076bc:	mov	w23, w0
  4076c0:	mov	w25, #0xc                   	// #12
  4076c4:	sub	w22, w22, #0x1
  4076c8:	adrp	x26, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4076cc:	tbnz	w22, #31, 407734 <nftw@plt+0x4a44>
  4076d0:	smull	x24, w22, w25
  4076d4:	mov	w2, w23
  4076d8:	ldr	x0, [x19, #80]
  4076dc:	ldr	w1, [x0, x24]
  4076e0:	ldr	x0, [x26, #2320]
  4076e4:	bl	426b60 <nftw@plt+0x23e70>
  4076e8:	tbnz	w0, #31, 40772c <nftw@plt+0x4a3c>
  4076ec:	ldr	x1, [x19, #80]
  4076f0:	add	x1, x1, x24
  4076f4:	ldp	w0, w2, [x1, #4]
  4076f8:	cmp	w2, #0xf
  4076fc:	b.eq	407728 <nftw@plt+0x4a38>  // b.none
  407700:	cbz	w0, 407710 <nftw@plt+0x4a20>
  407704:	ldr	w1, [x20, #60]
  407708:	cmp	w1, w0
  40770c:	b.ne	40772c <nftw@plt+0x4a3c>  // b.any
  407710:	cbz	w2, 407734 <nftw@plt+0x4a44>
  407714:	str	w2, [x20, #56]
  407718:	ldr	w0, [x20, #56]
  40771c:	cmp	w0, #0x1
  407720:	b.ne	4075c4 <nftw@plt+0x48d4>  // b.any
  407724:	b	407508 <nftw@plt+0x4818>
  407728:	mov	w22, w0
  40772c:	sub	w22, w22, #0x1
  407730:	b	4076cc <nftw@plt+0x49dc>
  407734:	ldrsw	x1, [x20, #60]
  407738:	ldr	x0, [x19, #72]
  40773c:	ldr	w0, [x0, x1, lsl #2]
  407740:	cbz	w0, 407718 <nftw@plt+0x4a28>
  407744:	str	w0, [x20, #56]
  407748:	b	407718 <nftw@plt+0x4a28>
  40774c:	ldr	x3, [x19, #160]
  407750:	cbz	x3, 407760 <nftw@plt+0x4a70>
  407754:	ldp	x1, x2, [x20]
  407758:	mov	x0, x19
  40775c:	blr	x3
  407760:	ldr	w0, [x20, #56]
  407764:	cmp	w0, #0x4
  407768:	b.ne	4078a8 <nftw@plt+0x4bb8>  // b.any
  40776c:	cmp	w21, #0x6
  407770:	b.ne	4078a8 <nftw@plt+0x4bb8>  // b.any
  407774:	ldr	w0, [x19, #56]
  407778:	add	w0, w0, #0x1
  40777c:	str	w0, [x19, #56]
  407780:	ldr	w0, [x19, #244]
  407784:	cbnz	w0, 407798 <nftw@plt+0x4aa8>
  407788:	ldr	x1, [x19, #248]
  40778c:	cbz	x1, 407798 <nftw@plt+0x4aa8>
  407790:	mov	x0, x19
  407794:	blr	x1
  407798:	ldr	w0, [x19, #244]
  40779c:	mov	x1, x20
  4077a0:	add	w0, w0, #0x1
  4077a4:	str	w0, [x19, #244]
  4077a8:	add	x0, x20, #0x30
  4077ac:	str	x0, [x20, #24]
  4077b0:	str	xzr, [x20, #48]
  4077b4:	ldr	x0, [x19]
  4077b8:	bl	40e06c <nftw@plt+0xb37c>
  4077bc:	ldr	x2, [x19, #136]
  4077c0:	mov	x1, x20
  4077c4:	mov	x0, x19
  4077c8:	blr	x2
  4077cc:	ldr	x0, [x19]
  4077d0:	bl	40de5c <nftw@plt+0xb16c>
  4077d4:	ldrb	w0, [x19, #119]
  4077d8:	cbz	w0, 407868 <nftw@plt+0x4b78>
  4077dc:	ldp	w3, w1, [x20, #56]
  4077e0:	mov	w2, w21
  4077e4:	ldr	x4, [x19, #184]
  4077e8:	mov	x0, x19
  4077ec:	blr	x4
  4077f0:	mov	x23, x0
  4077f4:	cbz	x0, 407868 <nftw@plt+0x4b78>
  4077f8:	ldr	x22, [x19]
  4077fc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  407800:	add	x1, x1, #0x86
  407804:	mov	x0, x22
  407808:	bl	40de28 <nftw@plt+0xb138>
  40780c:	ldrsw	x1, [x20, #56]
  407810:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  407814:	add	x0, x0, #0x2c0
  407818:	add	x0, x0, #0x20
  40781c:	ldr	x1, [x0, x1, lsl #3]
  407820:	ldrb	w0, [x22, #67]
  407824:	bl	40900c <nftw@plt+0x631c>
  407828:	mov	x1, x0
  40782c:	mov	x0, x22
  407830:	bl	40de28 <nftw@plt+0xb138>
  407834:	mov	x1, x23
  407838:	mov	x0, x22
  40783c:	bl	40de28 <nftw@plt+0xb138>
  407840:	ldrb	w0, [x22, #67]
  407844:	bl	409328 <nftw@plt+0x6638>
  407848:	mov	x1, x0
  40784c:	mov	x0, x22
  407850:	bl	40de28 <nftw@plt+0xb138>
  407854:	mov	w1, #0x5d                  	// #93
  407858:	mov	x0, x22
  40785c:	bl	40da7c <nftw@plt+0xad8c>
  407860:	mov	x0, x23
  407864:	bl	402a80 <free@plt>
  407868:	ldr	x3, [x19, #152]
  40786c:	mov	x0, x19
  407870:	mov	w2, w21
  407874:	mov	x1, x20
  407878:	blr	x3
  40787c:	ldrb	w0, [x19, #229]
  407880:	cbz	w0, 407984 <nftw@plt+0x4c94>
  407884:	ldr	x22, [x19]
  407888:	ldr	x25, [x20, #40]
  40788c:	cbnz	x22, 4078bc <nftw@plt+0x4bcc>
  407890:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  407894:	add	x2, x2, #0x89
  407898:	mov	w1, #0x322                 	// #802
  40789c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4078a0:	add	x0, x0, #0x0
  4078a4:	bl	402d60 <nftw@plt+0x70>
  4078a8:	add	x0, x19, w0, sxtw #2
  4078ac:	ldr	w1, [x0, #8]
  4078b0:	add	w1, w1, #0x1
  4078b4:	str	w1, [x0, #8]
  4078b8:	b	407780 <nftw@plt+0x4a90>
  4078bc:	mov	w21, #0x0                   	// #0
  4078c0:	cbz	x25, 407958 <nftw@plt+0x4c68>
  4078c4:	adrp	x24, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4078c8:	add	x26, x25, #0x78
  4078cc:	add	x24, x24, #0xa0
  4078d0:	ldr	w0, [x25, #120]
  4078d4:	cmp	w0, w21
  4078d8:	b.ls	40797c <nftw@plt+0x4c8c>  // b.plast
  4078dc:	sxtw	x0, w21
  4078e0:	cmp	w21, #0x1
  4078e4:	b.gt	407968 <nftw@plt+0x4c78>
  4078e8:	add	x0, x0, #0x1
  4078ec:	add	x0, x26, x0, lsl #3
  4078f0:	ldr	x23, [x0]
  4078f4:	add	x8, sp, #0x50
  4078f8:	add	w21, w21, #0x1
  4078fc:	ldr	w0, [x23]
  407900:	bl	411644 <nftw@plt+0xe954>
  407904:	mov	x1, x24
  407908:	mov	x0, x22
  40790c:	bl	40de28 <nftw@plt+0xb138>
  407910:	ldr	x1, [sp, #80]
  407914:	mov	x0, x22
  407918:	bl	408678 <nftw@plt+0x5988>
  40791c:	ldr	w0, [x23, #4]
  407920:	add	x8, sp, #0x70
  407924:	bl	411644 <nftw@plt+0xe954>
  407928:	ldp	w2, w3, [sp, #88]
  40792c:	mov	x0, x22
  407930:	ldp	w4, w5, [sp, #120]
  407934:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  407938:	add	x1, x1, #0xa8
  40793c:	bl	40f470 <nftw@plt+0xc780>
  407940:	ldr	x1, [x23, #8]
  407944:	mov	x0, x22
  407948:	bl	408678 <nftw@plt+0x5988>
  40794c:	mov	x0, x22
  407950:	bl	40da20 <nftw@plt+0xad30>
  407954:	b	4078d0 <nftw@plt+0x4be0>
  407958:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40795c:	mov	w1, #0x323                 	// #803
  407960:	add	x2, x2, #0x89
  407964:	b	40789c <nftw@plt+0x4bac>
  407968:	mov	x0, #0xfffffffffffffff0    	// #-16
  40796c:	add	x1, x0, w21, sxtw #3
  407970:	ldr	x0, [x26, #32]
  407974:	add	x0, x0, x1
  407978:	b	4078f0 <nftw@plt+0x4c00>
  40797c:	ldr	x0, [x19]
  407980:	bl	40d894 <nftw@plt+0xaba4>
  407984:	ldr	w1, [x20, #56]
  407988:	mov	x0, x19
  40798c:	bl	407360 <nftw@plt+0x4670>
  407990:	str	xzr, [x20, #48]
  407994:	ldr	x0, [x19, #232]
  407998:	cbz	x0, 4079ac <nftw@plt+0x4cbc>
  40799c:	ldr	x1, [x20, #40]
  4079a0:	ldrb	w2, [x1, #161]
  4079a4:	cbnz	w2, 4079ac <nftw@plt+0x4cbc>
  4079a8:	bl	40cab4 <nftw@plt+0x9dc4>
  4079ac:	ldr	w0, [x19, #216]
  4079b0:	sub	w0, w0, #0x1
  4079b4:	str	w0, [x19, #216]
  4079b8:	mov	w0, #0x1                   	// #1
  4079bc:	b	40750c <nftw@plt+0x481c>
  4079c0:	stp	x29, x30, [sp, #-112]!
  4079c4:	cmp	w4, #0xb
  4079c8:	mov	x29, sp
  4079cc:	stp	x19, x20, [sp, #16]
  4079d0:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4079d4:	str	x21, [sp, #32]
  4079d8:	mov	w21, w1
  4079dc:	mov	x1, x2
  4079e0:	mov	x2, x3
  4079e4:	b.ne	407a34 <nftw@plt+0x4d44>  // b.any
  4079e8:	ldr	x3, [x20, #944]
  4079ec:	mov	w4, #0x6                   	// #6
  4079f0:	ldrb	w3, [x3, #123]
  4079f4:	cmp	w3, #0x0
  4079f8:	mov	w3, #0x4                   	// #4
  4079fc:	csel	w4, w4, w3, ne  // ne = any
  407a00:	mov	x3, x0
  407a04:	add	x0, sp, #0x30
  407a08:	bl	4083a8 <nftw@plt+0x56b8>
  407a0c:	ldr	x0, [x20, #944]
  407a10:	ldr	w0, [x0, #124]
  407a14:	str	w0, [sp, #108]
  407a18:	ldr	x0, [x20, #944]
  407a1c:	add	x1, sp, #0x30
  407a20:	bl	4074bc <nftw@plt+0x47cc>
  407a24:	ldp	x19, x20, [sp, #16]
  407a28:	ldr	x21, [sp, #32]
  407a2c:	ldp	x29, x30, [sp], #112
  407a30:	ret
  407a34:	mov	w19, w4
  407a38:	mov	x3, x0
  407a3c:	add	x0, sp, #0x30
  407a40:	bl	4083a8 <nftw@plt+0x56b8>
  407a44:	cmp	w19, #0x6
  407a48:	ccmp	w19, #0xa, #0x4, ne  // ne = any
  407a4c:	b.ne	407a18 <nftw@plt+0x4d28>  // b.any
  407a50:	str	w21, [sp, #108]
  407a54:	b	407a18 <nftw@plt+0x4d28>
  407a58:	stp	x29, x30, [sp, #-416]!
  407a5c:	mov	w8, w1
  407a60:	mov	x29, sp
  407a64:	stp	x19, x20, [sp, #16]
  407a68:	mov	w19, w2
  407a6c:	mov	x20, x3
  407a70:	str	x21, [sp, #32]
  407a74:	mov	w21, w0
  407a78:	str	q0, [sp, #256]
  407a7c:	str	q1, [sp, #272]
  407a80:	str	q2, [sp, #288]
  407a84:	str	q3, [sp, #304]
  407a88:	str	q4, [sp, #320]
  407a8c:	str	q5, [sp, #336]
  407a90:	str	q6, [sp, #352]
  407a94:	str	q7, [sp, #368]
  407a98:	stp	x4, x5, [sp, #384]
  407a9c:	stp	x6, x7, [sp, #400]
  407aa0:	bl	40684c <nftw@plt+0x3b5c>
  407aa4:	add	x0, sp, #0x1a0
  407aa8:	stp	x0, x0, [sp, #56]
  407aac:	add	x0, sp, #0x180
  407ab0:	mov	w2, w8
  407ab4:	str	x0, [sp, #72]
  407ab8:	mov	w0, #0xffffffe0            	// #-32
  407abc:	str	w0, [sp, #80]
  407ac0:	mov	w0, #0xffffff80            	// #-128
  407ac4:	str	w0, [sp, #84]
  407ac8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407acc:	mov	x3, #0x0                   	// #0
  407ad0:	ldr	x1, [x0, #2320]
  407ad4:	add	x0, sp, #0x58
  407ad8:	bl	4277f0 <nftw@plt+0x24b00>
  407adc:	mov	w4, w21
  407ae0:	add	x3, sp, #0x38
  407ae4:	mov	x2, x20
  407ae8:	mov	w1, w19
  407aec:	add	x0, sp, #0x58
  407af0:	bl	4079c0 <nftw@plt+0x4cd0>
  407af4:	mov	w19, w0
  407af8:	add	x0, sp, #0x58
  407afc:	bl	427584 <nftw@plt+0x24894>
  407b00:	add	x0, sp, #0x30
  407b04:	bl	407224 <nftw@plt+0x4534>
  407b08:	mov	w0, w19
  407b0c:	ldp	x19, x20, [sp, #16]
  407b10:	ldr	x21, [sp, #32]
  407b14:	ldp	x29, x30, [sp], #416
  407b18:	ret
  407b1c:	stp	x29, x30, [sp, #-240]!
  407b20:	mov	w10, w0
  407b24:	mov	x8, x1
  407b28:	mov	w9, w2
  407b2c:	mov	x2, x3
  407b30:	mov	x29, sp
  407b34:	str	x19, [sp, #16]
  407b38:	str	q0, [sp, #80]
  407b3c:	str	q1, [sp, #96]
  407b40:	str	q2, [sp, #112]
  407b44:	str	q3, [sp, #128]
  407b48:	str	q4, [sp, #144]
  407b4c:	str	q5, [sp, #160]
  407b50:	str	q6, [sp, #176]
  407b54:	str	q7, [sp, #192]
  407b58:	stp	x4, x5, [sp, #208]
  407b5c:	stp	x6, x7, [sp, #224]
  407b60:	bl	40684c <nftw@plt+0x3b5c>
  407b64:	add	x0, sp, #0xf0
  407b68:	stp	x0, x0, [sp, #48]
  407b6c:	add	x0, sp, #0xd0
  407b70:	add	x3, sp, #0x30
  407b74:	mov	w4, w10
  407b78:	mov	w1, w9
  407b7c:	str	x0, [sp, #64]
  407b80:	mov	w0, #0xffffffe0            	// #-32
  407b84:	str	w0, [sp, #72]
  407b88:	mov	w0, #0xffffff80            	// #-128
  407b8c:	str	w0, [sp, #76]
  407b90:	mov	x0, x8
  407b94:	bl	4079c0 <nftw@plt+0x4cd0>
  407b98:	mov	w19, w0
  407b9c:	add	x0, sp, #0x28
  407ba0:	bl	407224 <nftw@plt+0x4534>
  407ba4:	mov	w0, w19
  407ba8:	ldr	x19, [sp, #16]
  407bac:	ldp	x29, x30, [sp], #240
  407bb0:	ret
  407bb4:	stp	x29, x30, [sp, #-224]!
  407bb8:	mov	x29, sp
  407bbc:	stp	x21, x22, [sp, #32]
  407bc0:	mov	w22, w0
  407bc4:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407bc8:	stp	x19, x20, [sp, #16]
  407bcc:	mov	w19, w2
  407bd0:	mov	w2, w1
  407bd4:	ldr	x1, [x0, #2320]
  407bd8:	mov	x21, x4
  407bdc:	mov	x20, x3
  407be0:	add	x0, sp, #0x38
  407be4:	mov	x3, #0x0                   	// #0
  407be8:	bl	4277f0 <nftw@plt+0x24b00>
  407bec:	mov	w4, w22
  407bf0:	mov	x3, x21
  407bf4:	mov	x2, x20
  407bf8:	mov	w1, w19
  407bfc:	add	x0, sp, #0x38
  407c00:	bl	4079c0 <nftw@plt+0x4cd0>
  407c04:	mov	w19, w0
  407c08:	add	x0, sp, #0x38
  407c0c:	bl	427584 <nftw@plt+0x24894>
  407c10:	mov	w0, w19
  407c14:	ldp	x19, x20, [sp, #16]
  407c18:	ldp	x21, x22, [sp, #32]
  407c1c:	ldp	x29, x30, [sp], #224
  407c20:	ret
  407c24:	stp	x29, x30, [sp, #-416]!
  407c28:	mov	w8, w0
  407c2c:	mov	x29, sp
  407c30:	str	x19, [sp, #16]
  407c34:	mov	x19, x1
  407c38:	str	q0, [sp, #240]
  407c3c:	str	q1, [sp, #256]
  407c40:	str	q2, [sp, #272]
  407c44:	str	q3, [sp, #288]
  407c48:	str	q4, [sp, #304]
  407c4c:	str	q5, [sp, #320]
  407c50:	str	q6, [sp, #336]
  407c54:	str	q7, [sp, #352]
  407c58:	stp	x2, x3, [sp, #368]
  407c5c:	stp	x4, x5, [sp, #384]
  407c60:	stp	x6, x7, [sp, #400]
  407c64:	bl	40684c <nftw@plt+0x3b5c>
  407c68:	add	x0, sp, #0x1a0
  407c6c:	stp	x0, x0, [sp, #40]
  407c70:	add	x0, sp, #0x170
  407c74:	mov	w2, w8
  407c78:	str	x0, [sp, #56]
  407c7c:	mov	w0, #0xffffffd0            	// #-48
  407c80:	str	w0, [sp, #64]
  407c84:	mov	w0, #0xffffff80            	// #-128
  407c88:	str	w0, [sp, #68]
  407c8c:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407c90:	mov	x3, #0x0                   	// #0
  407c94:	ldr	x1, [x0, #2320]
  407c98:	add	x0, sp, #0x48
  407c9c:	bl	4277f0 <nftw@plt+0x24b00>
  407ca0:	add	x3, sp, #0x28
  407ca4:	mov	x2, x19
  407ca8:	mov	w4, #0x8                   	// #8
  407cac:	mov	w1, #0xffffffff            	// #-1
  407cb0:	add	x0, sp, #0x48
  407cb4:	bl	4079c0 <nftw@plt+0x4cd0>
  407cb8:	add	x0, sp, #0x48
  407cbc:	bl	427584 <nftw@plt+0x24894>
  407cc0:	add	x0, sp, #0x20
  407cc4:	bl	407224 <nftw@plt+0x4534>
  407cc8:	ldr	x19, [sp, #16]
  407ccc:	ldp	x29, x30, [sp], #416
  407cd0:	ret
  407cd4:	stp	x29, x30, [sp, #-416]!
  407cd8:	mov	x29, sp
  407cdc:	stp	x19, x20, [sp, #16]
  407ce0:	mov	w19, w0
  407ce4:	mov	x20, x1
  407ce8:	str	q0, [sp, #240]
  407cec:	str	q1, [sp, #256]
  407cf0:	str	q2, [sp, #272]
  407cf4:	str	q3, [sp, #288]
  407cf8:	str	q4, [sp, #304]
  407cfc:	str	q5, [sp, #320]
  407d00:	str	q6, [sp, #336]
  407d04:	str	q7, [sp, #352]
  407d08:	stp	x2, x3, [sp, #368]
  407d0c:	stp	x4, x5, [sp, #384]
  407d10:	stp	x6, x7, [sp, #400]
  407d14:	bl	40684c <nftw@plt+0x3b5c>
  407d18:	add	x0, sp, #0x1a0
  407d1c:	stp	x0, x0, [sp, #40]
  407d20:	add	x0, sp, #0x170
  407d24:	mov	x3, #0x0                   	// #0
  407d28:	str	x0, [sp, #56]
  407d2c:	mov	w0, #0xffffffd0            	// #-48
  407d30:	str	w0, [sp, #64]
  407d34:	mov	w0, #0xffffff80            	// #-128
  407d38:	str	w0, [sp, #68]
  407d3c:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407d40:	ldr	w2, [x0, #2344]
  407d44:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407d48:	ldr	x1, [x0, #2320]
  407d4c:	add	x0, sp, #0x48
  407d50:	bl	4277f0 <nftw@plt+0x24b00>
  407d54:	add	x3, sp, #0x28
  407d58:	mov	x2, x20
  407d5c:	mov	w1, w19
  407d60:	mov	w4, #0x6                   	// #6
  407d64:	add	x0, sp, #0x48
  407d68:	bl	4079c0 <nftw@plt+0x4cd0>
  407d6c:	mov	w19, w0
  407d70:	add	x0, sp, #0x48
  407d74:	bl	427584 <nftw@plt+0x24894>
  407d78:	add	x0, sp, #0x20
  407d7c:	bl	407224 <nftw@plt+0x4534>
  407d80:	mov	w0, w19
  407d84:	ldp	x19, x20, [sp, #16]
  407d88:	ldp	x29, x30, [sp], #416
  407d8c:	ret
  407d90:	stp	x29, x30, [sp, #-416]!
  407d94:	mov	w8, w0
  407d98:	mov	x29, sp
  407d9c:	stp	x19, x20, [sp, #16]
  407da0:	mov	w19, w1
  407da4:	mov	x20, x2
  407da8:	str	q0, [sp, #240]
  407dac:	str	q1, [sp, #256]
  407db0:	str	q2, [sp, #272]
  407db4:	str	q3, [sp, #288]
  407db8:	str	q4, [sp, #304]
  407dbc:	str	q5, [sp, #320]
  407dc0:	str	q6, [sp, #336]
  407dc4:	str	q7, [sp, #352]
  407dc8:	stp	x3, x4, [sp, #376]
  407dcc:	stp	x5, x6, [sp, #392]
  407dd0:	str	x7, [sp, #408]
  407dd4:	bl	40684c <nftw@plt+0x3b5c>
  407dd8:	add	x0, sp, #0x1a0
  407ddc:	stp	x0, x0, [sp, #40]
  407de0:	add	x0, sp, #0x170
  407de4:	str	x0, [sp, #56]
  407de8:	mov	w0, #0xffffffd8            	// #-40
  407dec:	str	w0, [sp, #64]
  407df0:	mov	w0, #0xffffff80            	// #-128
  407df4:	str	w0, [sp, #68]
  407df8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407dfc:	mov	w2, w8
  407e00:	mov	x3, #0x0                   	// #0
  407e04:	ldr	x1, [x0, #2320]
  407e08:	add	x0, sp, #0x48
  407e0c:	bl	4277f0 <nftw@plt+0x24b00>
  407e10:	add	x3, sp, #0x28
  407e14:	mov	x2, x20
  407e18:	mov	w1, w19
  407e1c:	mov	w4, #0x6                   	// #6
  407e20:	add	x0, sp, #0x48
  407e24:	bl	4079c0 <nftw@plt+0x4cd0>
  407e28:	mov	w19, w0
  407e2c:	add	x0, sp, #0x48
  407e30:	bl	427584 <nftw@plt+0x24894>
  407e34:	add	x0, sp, #0x20
  407e38:	bl	407224 <nftw@plt+0x4534>
  407e3c:	mov	w0, w19
  407e40:	ldp	x19, x20, [sp, #16]
  407e44:	ldp	x29, x30, [sp], #416
  407e48:	ret
  407e4c:	stp	x29, x30, [sp, #-416]!
  407e50:	mov	w8, w0
  407e54:	mov	x29, sp
  407e58:	stp	x19, x20, [sp, #16]
  407e5c:	mov	w19, w1
  407e60:	mov	x20, x2
  407e64:	str	q0, [sp, #240]
  407e68:	str	q1, [sp, #256]
  407e6c:	str	q2, [sp, #272]
  407e70:	str	q3, [sp, #288]
  407e74:	str	q4, [sp, #304]
  407e78:	str	q5, [sp, #320]
  407e7c:	str	q6, [sp, #336]
  407e80:	str	q7, [sp, #352]
  407e84:	stp	x3, x4, [sp, #376]
  407e88:	stp	x5, x6, [sp, #392]
  407e8c:	str	x7, [sp, #408]
  407e90:	bl	40684c <nftw@plt+0x3b5c>
  407e94:	add	x0, sp, #0x1a0
  407e98:	stp	x0, x0, [sp, #40]
  407e9c:	add	x0, sp, #0x170
  407ea0:	str	x0, [sp, #56]
  407ea4:	mov	w0, #0xffffffd8            	// #-40
  407ea8:	str	w0, [sp, #64]
  407eac:	mov	w0, #0xffffff80            	// #-128
  407eb0:	str	w0, [sp, #68]
  407eb4:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407eb8:	mov	w2, w8
  407ebc:	mov	x3, #0x0                   	// #0
  407ec0:	ldr	x1, [x0, #2320]
  407ec4:	add	x0, sp, #0x48
  407ec8:	bl	4277f0 <nftw@plt+0x24b00>
  407ecc:	add	x3, sp, #0x28
  407ed0:	mov	x2, x20
  407ed4:	mov	w1, w19
  407ed8:	mov	w4, #0xa                   	// #10
  407edc:	add	x0, sp, #0x48
  407ee0:	bl	4079c0 <nftw@plt+0x4cd0>
  407ee4:	mov	w19, w0
  407ee8:	add	x0, sp, #0x48
  407eec:	bl	427584 <nftw@plt+0x24894>
  407ef0:	add	x0, sp, #0x20
  407ef4:	bl	407224 <nftw@plt+0x4534>
  407ef8:	mov	w0, w19
  407efc:	ldp	x19, x20, [sp, #16]
  407f00:	ldp	x29, x30, [sp], #416
  407f04:	ret
  407f08:	stp	x29, x30, [sp, #-416]!
  407f0c:	mov	w8, w0
  407f10:	mov	x29, sp
  407f14:	str	x19, [sp, #16]
  407f18:	mov	x19, x1
  407f1c:	str	q0, [sp, #240]
  407f20:	str	q1, [sp, #256]
  407f24:	str	q2, [sp, #272]
  407f28:	str	q3, [sp, #288]
  407f2c:	str	q4, [sp, #304]
  407f30:	str	q5, [sp, #320]
  407f34:	str	q6, [sp, #336]
  407f38:	str	q7, [sp, #352]
  407f3c:	stp	x2, x3, [sp, #368]
  407f40:	stp	x4, x5, [sp, #384]
  407f44:	stp	x6, x7, [sp, #400]
  407f48:	bl	40684c <nftw@plt+0x3b5c>
  407f4c:	add	x0, sp, #0x1a0
  407f50:	stp	x0, x0, [sp, #40]
  407f54:	add	x0, sp, #0x170
  407f58:	mov	w2, w8
  407f5c:	str	x0, [sp, #56]
  407f60:	mov	w0, #0xffffffd0            	// #-48
  407f64:	str	w0, [sp, #64]
  407f68:	mov	w0, #0xffffff80            	// #-128
  407f6c:	str	w0, [sp, #68]
  407f70:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  407f74:	mov	x3, #0x0                   	// #0
  407f78:	ldr	x1, [x0, #2320]
  407f7c:	add	x0, sp, #0x48
  407f80:	bl	4277f0 <nftw@plt+0x24b00>
  407f84:	add	x3, sp, #0x28
  407f88:	mov	x2, x19
  407f8c:	mov	w4, #0xb                   	// #11
  407f90:	mov	w1, #0xffffffff            	// #-1
  407f94:	add	x0, sp, #0x48
  407f98:	bl	4079c0 <nftw@plt+0x4cd0>
  407f9c:	mov	w19, w0
  407fa0:	add	x0, sp, #0x48
  407fa4:	bl	427584 <nftw@plt+0x24894>
  407fa8:	add	x0, sp, #0x20
  407fac:	bl	407224 <nftw@plt+0x4534>
  407fb0:	mov	w0, w19
  407fb4:	ldr	x19, [sp, #16]
  407fb8:	ldp	x29, x30, [sp], #416
  407fbc:	ret
  407fc0:	stp	x29, x30, [sp, #-432]!
  407fc4:	mov	x29, sp
  407fc8:	str	x19, [sp, #16]
  407fcc:	mov	x19, x0
  407fd0:	str	q0, [sp, #240]
  407fd4:	str	q1, [sp, #256]
  407fd8:	str	q2, [sp, #272]
  407fdc:	str	q3, [sp, #288]
  407fe0:	str	q4, [sp, #304]
  407fe4:	str	q5, [sp, #320]
  407fe8:	str	q6, [sp, #336]
  407fec:	str	q7, [sp, #352]
  407ff0:	stp	x1, x2, [sp, #376]
  407ff4:	stp	x3, x4, [sp, #392]
  407ff8:	stp	x5, x6, [sp, #408]
  407ffc:	str	x7, [sp, #424]
  408000:	bl	40684c <nftw@plt+0x3b5c>
  408004:	add	x0, sp, #0x1b0
  408008:	stp	x0, x0, [sp, #40]
  40800c:	add	x0, sp, #0x170
  408010:	str	x0, [sp, #56]
  408014:	mov	w0, #0xffffffc8            	// #-56
  408018:	str	w0, [sp, #64]
  40801c:	mov	w0, #0xffffff80            	// #-128
  408020:	str	w0, [sp, #68]
  408024:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408028:	mov	x3, #0x0                   	// #0
  40802c:	ldr	w2, [x0, #2344]
  408030:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408034:	ldr	x1, [x0, #2320]
  408038:	add	x0, sp, #0x48
  40803c:	bl	4277f0 <nftw@plt+0x24b00>
  408040:	add	x3, sp, #0x28
  408044:	mov	x2, x19
  408048:	mov	w4, #0x4                   	// #4
  40804c:	mov	w1, #0xffffffff            	// #-1
  408050:	add	x0, sp, #0x48
  408054:	bl	4079c0 <nftw@plt+0x4cd0>
  408058:	add	x0, sp, #0x48
  40805c:	bl	427584 <nftw@plt+0x24894>
  408060:	add	x0, sp, #0x20
  408064:	bl	407224 <nftw@plt+0x4534>
  408068:	ldr	x19, [sp, #16]
  40806c:	ldp	x29, x30, [sp], #432
  408070:	ret
  408074:	stp	x29, x30, [sp, #-416]!
  408078:	mov	w8, w0
  40807c:	mov	x29, sp
  408080:	str	x19, [sp, #16]
  408084:	mov	x19, x1
  408088:	str	q0, [sp, #240]
  40808c:	str	q1, [sp, #256]
  408090:	str	q2, [sp, #272]
  408094:	str	q3, [sp, #288]
  408098:	str	q4, [sp, #304]
  40809c:	str	q5, [sp, #320]
  4080a0:	str	q6, [sp, #336]
  4080a4:	str	q7, [sp, #352]
  4080a8:	stp	x2, x3, [sp, #368]
  4080ac:	stp	x4, x5, [sp, #384]
  4080b0:	stp	x6, x7, [sp, #400]
  4080b4:	bl	40684c <nftw@plt+0x3b5c>
  4080b8:	add	x0, sp, #0x1a0
  4080bc:	stp	x0, x0, [sp, #40]
  4080c0:	add	x0, sp, #0x170
  4080c4:	mov	w2, w8
  4080c8:	str	x0, [sp, #56]
  4080cc:	mov	w0, #0xffffffd0            	// #-48
  4080d0:	str	w0, [sp, #64]
  4080d4:	mov	w0, #0xffffff80            	// #-128
  4080d8:	str	w0, [sp, #68]
  4080dc:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4080e0:	mov	x3, #0x0                   	// #0
  4080e4:	ldr	x1, [x0, #2320]
  4080e8:	add	x0, sp, #0x48
  4080ec:	bl	4277f0 <nftw@plt+0x24b00>
  4080f0:	add	x3, sp, #0x28
  4080f4:	mov	x2, x19
  4080f8:	mov	w4, #0x4                   	// #4
  4080fc:	mov	w1, #0xffffffff            	// #-1
  408100:	add	x0, sp, #0x48
  408104:	bl	4079c0 <nftw@plt+0x4cd0>
  408108:	add	x0, sp, #0x48
  40810c:	bl	427584 <nftw@plt+0x24894>
  408110:	add	x0, sp, #0x20
  408114:	bl	407224 <nftw@plt+0x4534>
  408118:	ldr	x19, [sp, #16]
  40811c:	ldp	x29, x30, [sp], #416
  408120:	ret
  408124:	stp	x29, x30, [sp, #-432]!
  408128:	mov	x29, sp
  40812c:	str	x19, [sp, #16]
  408130:	mov	x19, x0
  408134:	str	q0, [sp, #240]
  408138:	str	q1, [sp, #256]
  40813c:	str	q2, [sp, #272]
  408140:	str	q3, [sp, #288]
  408144:	str	q4, [sp, #304]
  408148:	str	q5, [sp, #320]
  40814c:	str	q6, [sp, #336]
  408150:	str	q7, [sp, #352]
  408154:	stp	x1, x2, [sp, #376]
  408158:	stp	x3, x4, [sp, #392]
  40815c:	stp	x5, x6, [sp, #408]
  408160:	str	x7, [sp, #424]
  408164:	bl	40684c <nftw@plt+0x3b5c>
  408168:	add	x0, sp, #0x1b0
  40816c:	stp	x0, x0, [sp, #40]
  408170:	add	x0, sp, #0x170
  408174:	str	x0, [sp, #56]
  408178:	mov	w0, #0xffffffc8            	// #-56
  40817c:	str	w0, [sp, #64]
  408180:	mov	w0, #0xffffff80            	// #-128
  408184:	str	w0, [sp, #68]
  408188:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40818c:	mov	x3, #0x0                   	// #0
  408190:	ldr	w2, [x0, #2344]
  408194:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408198:	ldr	x1, [x0, #2320]
  40819c:	add	x0, sp, #0x48
  4081a0:	bl	4277f0 <nftw@plt+0x24b00>
  4081a4:	add	x3, sp, #0x28
  4081a8:	mov	x2, x19
  4081ac:	mov	w4, #0x5                   	// #5
  4081b0:	mov	w1, #0xffffffff            	// #-1
  4081b4:	add	x0, sp, #0x48
  4081b8:	bl	4079c0 <nftw@plt+0x4cd0>
  4081bc:	add	x0, sp, #0x48
  4081c0:	bl	427584 <nftw@plt+0x24894>
  4081c4:	add	x0, sp, #0x20
  4081c8:	bl	407224 <nftw@plt+0x4534>
  4081cc:	ldr	x19, [sp, #16]
  4081d0:	ldp	x29, x30, [sp], #432
  4081d4:	ret
  4081d8:	stp	x29, x30, [sp, #-416]!
  4081dc:	mov	w8, w0
  4081e0:	mov	x29, sp
  4081e4:	str	x19, [sp, #16]
  4081e8:	mov	x19, x1
  4081ec:	str	q0, [sp, #240]
  4081f0:	str	q1, [sp, #256]
  4081f4:	str	q2, [sp, #272]
  4081f8:	str	q3, [sp, #288]
  4081fc:	str	q4, [sp, #304]
  408200:	str	q5, [sp, #320]
  408204:	str	q6, [sp, #336]
  408208:	str	q7, [sp, #352]
  40820c:	stp	x2, x3, [sp, #368]
  408210:	stp	x4, x5, [sp, #384]
  408214:	stp	x6, x7, [sp, #400]
  408218:	bl	40684c <nftw@plt+0x3b5c>
  40821c:	add	x0, sp, #0x1a0
  408220:	stp	x0, x0, [sp, #40]
  408224:	add	x0, sp, #0x170
  408228:	mov	w2, w8
  40822c:	str	x0, [sp, #56]
  408230:	mov	w0, #0xffffffd0            	// #-48
  408234:	str	w0, [sp, #64]
  408238:	mov	w0, #0xffffff80            	// #-128
  40823c:	str	w0, [sp, #68]
  408240:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408244:	mov	x3, #0x0                   	// #0
  408248:	ldr	x1, [x0, #2320]
  40824c:	add	x0, sp, #0x48
  408250:	bl	4277f0 <nftw@plt+0x24b00>
  408254:	add	x3, sp, #0x28
  408258:	mov	x2, x19
  40825c:	mov	w4, #0x5                   	// #5
  408260:	mov	w1, #0xffffffff            	// #-1
  408264:	add	x0, sp, #0x48
  408268:	bl	4079c0 <nftw@plt+0x4cd0>
  40826c:	add	x0, sp, #0x48
  408270:	bl	427584 <nftw@plt+0x24894>
  408274:	add	x0, sp, #0x20
  408278:	bl	407224 <nftw@plt+0x4534>
  40827c:	ldr	x19, [sp, #16]
  408280:	ldp	x29, x30, [sp], #416
  408284:	ret
  408288:	stp	x29, x30, [sp, #-432]!
  40828c:	mov	x29, sp
  408290:	str	x19, [sp, #16]
  408294:	mov	x19, x0
  408298:	str	q0, [sp, #240]
  40829c:	str	q1, [sp, #256]
  4082a0:	str	q2, [sp, #272]
  4082a4:	str	q3, [sp, #288]
  4082a8:	str	q4, [sp, #304]
  4082ac:	str	q5, [sp, #320]
  4082b0:	str	q6, [sp, #336]
  4082b4:	str	q7, [sp, #352]
  4082b8:	stp	x1, x2, [sp, #376]
  4082bc:	stp	x3, x4, [sp, #392]
  4082c0:	stp	x5, x6, [sp, #408]
  4082c4:	str	x7, [sp, #424]
  4082c8:	bl	40684c <nftw@plt+0x3b5c>
  4082cc:	add	x0, sp, #0x1b0
  4082d0:	stp	x0, x0, [sp, #40]
  4082d4:	add	x0, sp, #0x170
  4082d8:	str	x0, [sp, #56]
  4082dc:	mov	w0, #0xffffffc8            	// #-56
  4082e0:	str	w0, [sp, #64]
  4082e4:	mov	w0, #0xffffff80            	// #-128
  4082e8:	str	w0, [sp, #68]
  4082ec:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4082f0:	mov	x3, #0x0                   	// #0
  4082f4:	ldr	w2, [x0, #2344]
  4082f8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4082fc:	ldr	x1, [x0, #2320]
  408300:	add	x0, sp, #0x48
  408304:	bl	4277f0 <nftw@plt+0x24b00>
  408308:	add	x3, sp, #0x28
  40830c:	mov	w4, #0x3                   	// #3
  408310:	mov	x2, x19
  408314:	mov	w1, #0xffffffff            	// #-1
  408318:	add	x0, sp, #0x48
  40831c:	bl	4079c0 <nftw@plt+0x4cd0>
  408320:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408324:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408328:	add	x2, x2, #0xb8
  40832c:	add	x0, x0, #0x0
  408330:	mov	w1, #0x607                 	// #1543
  408334:	bl	402d60 <nftw@plt+0x70>
  408338:	stp	x29, x30, [sp, #-64]!
  40833c:	mov	x29, sp
  408340:	stp	x19, x20, [sp, #16]
  408344:	stp	x21, x22, [sp, #32]
  408348:	str	x23, [sp, #48]
  40834c:	cbnz	x3, 408368 <nftw@plt+0x5678>
  408350:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408354:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408358:	add	x2, x2, #0xd7
  40835c:	add	x0, x0, #0x0
  408360:	mov	w1, #0x112                 	// #274
  408364:	bl	402d60 <nftw@plt+0x70>
  408368:	mov	x19, x0
  40836c:	mov	x22, x1
  408370:	mov	x23, x2
  408374:	mov	x20, x3
  408378:	mov	w21, w4
  40837c:	bl	402c20 <__errno_location@plt>
  408380:	ldr	w0, [x0]
  408384:	stp	x22, x23, [x19]
  408388:	str	w0, [x19, #16]
  40838c:	stp	x20, x20, [x19, #32]
  408390:	stp	w21, wzr, [x19, #56]
  408394:	ldp	x19, x20, [sp, #16]
  408398:	ldp	x21, x22, [sp, #32]
  40839c:	ldr	x23, [sp, #48]
  4083a0:	ldp	x29, x30, [sp], #64
  4083a4:	ret
  4083a8:	stp	x29, x30, [sp, #-48]!
  4083ac:	mov	x29, sp
  4083b0:	stp	x19, x20, [sp, #16]
  4083b4:	stp	x21, x22, [sp, #32]
  4083b8:	cbnz	x3, 4083d4 <nftw@plt+0x56e4>
  4083bc:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4083c0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4083c4:	add	x2, x2, #0xf6
  4083c8:	add	x0, x0, #0x0
  4083cc:	mov	w1, #0x123                 	// #291
  4083d0:	bl	402d60 <nftw@plt+0x70>
  4083d4:	mov	x20, x0
  4083d8:	mov	x21, x2
  4083dc:	mov	x19, x3
  4083e0:	mov	w22, w4
  4083e4:	mov	x0, x1
  4083e8:	bl	402c90 <gettext@plt>
  4083ec:	mov	w4, w22
  4083f0:	mov	x3, x19
  4083f4:	mov	x2, x21
  4083f8:	mov	x1, x0
  4083fc:	mov	x0, x20
  408400:	ldp	x19, x20, [sp, #16]
  408404:	ldp	x21, x22, [sp, #32]
  408408:	ldp	x29, x30, [sp], #48
  40840c:	b	408338 <nftw@plt+0x5648>
  408410:	stp	x29, x30, [sp, #-96]!
  408414:	mov	x29, sp
  408418:	stp	x19, x20, [sp, #16]
  40841c:	stp	x21, x22, [sp, #32]
  408420:	mov	x21, x0
  408424:	ldr	w0, [x1, #56]
  408428:	str	x23, [sp, #48]
  40842c:	cmp	w0, #0xd
  408430:	b.le	40844c <nftw@plt+0x575c>
  408434:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408438:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40843c:	add	x2, x2, #0x10a
  408440:	add	x0, x0, #0x0
  408444:	mov	w1, #0x16a                 	// #362
  408448:	bl	402d60 <nftw@plt+0x70>
  40844c:	adrp	x19, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408450:	add	x19, x19, #0x2c0
  408454:	mov	x20, x1
  408458:	add	x1, x19, #0xc0
  40845c:	add	x19, x19, #0x20
  408460:	ldr	x0, [x1, w0, sxtw #3]
  408464:	bl	402c90 <gettext@plt>
  408468:	mov	x22, x0
  40846c:	ldrsw	x0, [x20, #56]
  408470:	ldr	x1, [x19, x0, lsl #3]
  408474:	cbz	x1, 4084f8 <nftw@plt+0x5808>
  408478:	ldr	x19, [x21]
  40847c:	ldrb	w0, [x19, #67]
  408480:	bl	40900c <nftw@plt+0x631c>
  408484:	mov	x23, x0
  408488:	ldrb	w0, [x19, #67]
  40848c:	bl	409328 <nftw@plt+0x6638>
  408490:	mov	x19, x0
  408494:	ldr	x0, [x20, #40]
  408498:	add	x8, sp, #0x40
  40849c:	mov	w1, #0x0                   	// #0
  4084a0:	bl	427698 <nftw@plt+0x249a8>
  4084a4:	ldp	w2, w3, [sp, #72]
  4084a8:	mov	x0, x21
  4084ac:	ldr	x1, [sp, #64]
  4084b0:	bl	4068dc <nftw@plt+0x3bec>
  4084b4:	mov	x1, x0
  4084b8:	mov	x4, x19
  4084bc:	mov	x3, x22
  4084c0:	mov	x2, x23
  4084c4:	mov	x20, x0
  4084c8:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4084cc:	add	x0, x0, #0x122
  4084d0:	bl	406864 <nftw@plt+0x3b74>
  4084d4:	mov	x19, x0
  4084d8:	mov	x0, x20
  4084dc:	bl	402a80 <free@plt>
  4084e0:	mov	x0, x19
  4084e4:	ldp	x19, x20, [sp, #16]
  4084e8:	ldp	x21, x22, [sp, #32]
  4084ec:	ldr	x23, [sp, #48]
  4084f0:	ldp	x29, x30, [sp], #96
  4084f4:	ret
  4084f8:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4084fc:	add	x19, x19, #0xe54
  408500:	mov	x23, x19
  408504:	b	408494 <nftw@plt+0x57a4>
  408508:	stp	x29, x30, [sp, #-48]!
  40850c:	mov	x29, sp
  408510:	stp	x19, x20, [sp, #16]
  408514:	mov	x19, x0
  408518:	mov	x20, x1
  40851c:	mov	x0, x20
  408520:	mov	w1, #0x0                   	// #0
  408524:	str	x21, [sp, #32]
  408528:	bl	40d564 <nftw@plt+0xa874>
  40852c:	mov	w1, w0
  408530:	mov	x0, x19
  408534:	bl	406c78 <nftw@plt+0x3f88>
  408538:	ldr	x21, [x19]
  40853c:	mov	x1, x20
  408540:	mov	x0, x19
  408544:	bl	408410 <nftw@plt+0x5720>
  408548:	mov	x1, x0
  40854c:	mov	x0, x21
  408550:	ldp	x19, x20, [sp, #16]
  408554:	ldr	x21, [sp, #32]
  408558:	ldp	x29, x30, [sp], #48
  40855c:	b	40d734 <nftw@plt+0xaa44>
  408560:	stp	x29, x30, [sp, #-496]!
  408564:	mov	x29, sp
  408568:	stp	x19, x20, [sp, #16]
  40856c:	mov	x19, x0
  408570:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408574:	mov	x20, x2
  408578:	mov	w2, w1
  40857c:	ldr	x1, [x0, #2320]
  408580:	add	x0, sp, #0x98
  408584:	str	x21, [sp, #32]
  408588:	str	q0, [sp, #320]
  40858c:	str	q1, [sp, #336]
  408590:	str	q2, [sp, #352]
  408594:	str	q3, [sp, #368]
  408598:	str	q4, [sp, #384]
  40859c:	str	q5, [sp, #400]
  4085a0:	str	q6, [sp, #416]
  4085a4:	str	q7, [sp, #432]
  4085a8:	stp	x3, x4, [sp, #456]
  4085ac:	mov	x3, #0x0                   	// #0
  4085b0:	stp	x5, x6, [sp, #472]
  4085b4:	str	x7, [sp, #488]
  4085b8:	bl	4277f0 <nftw@plt+0x24b00>
  4085bc:	add	x0, sp, #0x1f0
  4085c0:	stp	x0, x0, [sp, #56]
  4085c4:	add	x0, sp, #0x1c0
  4085c8:	str	x0, [sp, #72]
  4085cc:	mov	w0, #0xffffffd8            	// #-40
  4085d0:	str	w0, [sp, #80]
  4085d4:	mov	w0, #0xffffff80            	// #-128
  4085d8:	add	x3, sp, #0x98
  4085dc:	add	x2, sp, #0x38
  4085e0:	mov	x1, x20
  4085e4:	mov	w4, #0x8                   	// #8
  4085e8:	str	w0, [sp, #84]
  4085ec:	add	x0, sp, #0x58
  4085f0:	bl	4083a8 <nftw@plt+0x56b8>
  4085f4:	ldrb	w0, [x19, #220]
  4085f8:	cbz	w0, 408614 <nftw@plt+0x5924>
  4085fc:	add	x0, sp, #0x98
  408600:	bl	427584 <nftw@plt+0x24894>
  408604:	ldp	x19, x20, [sp, #16]
  408608:	ldr	x21, [sp, #32]
  40860c:	ldp	x29, x30, [sp], #496
  408610:	ret
  408614:	ldr	x0, [x19]
  408618:	bl	40d770 <nftw@plt+0xaa80>
  40861c:	mov	x20, x0
  408620:	ldr	x21, [x19]
  408624:	add	x1, sp, #0x58
  408628:	mov	x0, x19
  40862c:	bl	408410 <nftw@plt+0x5720>
  408630:	mov	x1, x0
  408634:	mov	x0, x21
  408638:	bl	40d734 <nftw@plt+0xaa44>
  40863c:	ldr	x0, [x19]
  408640:	add	x1, sp, #0x58
  408644:	bl	40e06c <nftw@plt+0xb37c>
  408648:	ldr	x0, [x19]
  40864c:	bl	40de5c <nftw@plt+0xb16c>
  408650:	ldr	x0, [x19]
  408654:	bl	40d780 <nftw@plt+0xaa90>
  408658:	ldr	x0, [x19]
  40865c:	mov	x1, x20
  408660:	bl	40d734 <nftw@plt+0xaa44>
  408664:	add	x1, sp, #0x98
  408668:	mov	x0, x19
  40866c:	mov	w2, #0x8                   	// #8
  408670:	bl	40a830 <nftw@plt+0x7b40>
  408674:	b	4085fc <nftw@plt+0x590c>
  408678:	stp	x29, x30, [sp, #-64]!
  40867c:	mov	x29, sp
  408680:	stp	x19, x20, [sp, #16]
  408684:	stp	x21, x22, [sp, #32]
  408688:	str	x23, [sp, #48]
  40868c:	cbnz	x0, 4086a8 <nftw@plt+0x59b8>
  408690:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408694:	add	x2, x2, #0x12c
  408698:	mov	w1, #0x2f5                 	// #757
  40869c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4086a0:	add	x0, x0, #0x0
  4086a4:	bl	402d60 <nftw@plt+0x70>
  4086a8:	mov	x20, x1
  4086ac:	cbnz	x1, 4086c0 <nftw@plt+0x59d0>
  4086b0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4086b4:	mov	w1, #0x2f6                 	// #758
  4086b8:	add	x2, x2, #0x12c
  4086bc:	b	40869c <nftw@plt+0x59ac>
  4086c0:	adrp	x21, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4086c4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4086c8:	add	x21, x21, #0x14a
  4086cc:	add	x22, x22, #0xae
  4086d0:	adrp	x23, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4086d4:	mov	x19, x0
  4086d8:	mov	w1, #0x22                  	// #34
  4086dc:	bl	40da7c <nftw@plt+0xad8c>
  4086e0:	ldrb	w1, [x20]
  4086e4:	cbz	w1, 408774 <nftw@plt+0x5a84>
  4086e8:	cmp	w1, #0x22
  4086ec:	b.eq	408750 <nftw@plt+0x5a60>  // b.none
  4086f0:	b.hi	408718 <nftw@plt+0x5a28>  // b.pmore
  4086f4:	cmp	w1, #0x9
  4086f8:	b.eq	408738 <nftw@plt+0x5a48>  // b.none
  4086fc:	cmp	w1, #0xa
  408700:	b.eq	408744 <nftw@plt+0x5a54>  // b.none
  408704:	ldrh	w0, [x22, w1, sxtw #1]
  408708:	tbz	w0, #4, 408758 <nftw@plt+0x5a68>
  40870c:	mov	x0, x19
  408710:	bl	40da7c <nftw@plt+0xad8c>
  408714:	b	408730 <nftw@plt+0x5a40>
  408718:	cmp	w1, #0x5c
  40871c:	b.ne	408704 <nftw@plt+0x5a14>  // b.any
  408720:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408724:	add	x1, x1, #0x141
  408728:	mov	x0, x19
  40872c:	bl	40de28 <nftw@plt+0xb138>
  408730:	add	x20, x20, #0x1
  408734:	b	4086e0 <nftw@plt+0x59f0>
  408738:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40873c:	add	x1, x1, #0x144
  408740:	b	408728 <nftw@plt+0x5a38>
  408744:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408748:	add	x1, x1, #0x147
  40874c:	b	408728 <nftw@plt+0x5a38>
  408750:	mov	x1, x21
  408754:	b	408728 <nftw@plt+0x5a38>
  408758:	and	w4, w1, #0x7
  40875c:	ubfx	x3, x1, #3, #3
  408760:	lsr	w2, w1, #6
  408764:	mov	x0, x19
  408768:	add	x1, x23, #0x14d
  40876c:	bl	40f470 <nftw@plt+0xc780>
  408770:	b	408730 <nftw@plt+0x5a40>
  408774:	mov	x0, x19
  408778:	mov	w1, #0x22                  	// #34
  40877c:	ldp	x19, x20, [sp, #16]
  408780:	ldp	x21, x22, [sp, #32]
  408784:	ldr	x23, [sp, #48]
  408788:	ldp	x29, x30, [sp], #64
  40878c:	b	40da7c <nftw@plt+0xad8c>
  408790:	cmp	w0, #0x0
  408794:	b.ge	4087b8 <nftw@plt+0x5ac8>  // b.tcont
  408798:	stp	x29, x30, [sp, #-16]!
  40879c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4087a0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4087a4:	mov	x29, sp
  4087a8:	add	x2, x2, #0x155
  4087ac:	add	x0, x0, #0x0
  4087b0:	mov	w1, #0x415                 	// #1045
  4087b4:	bl	402d60 <nftw@plt+0x70>
  4087b8:	b.eq	4087d8 <nftw@plt+0x5ae8>  // b.none
  4087bc:	mov	w1, w0
  4087c0:	mov	w2, #0xa                   	// #10
  4087c4:	mov	w0, #0x0                   	// #0
  4087c8:	udiv	w1, w1, w2
  4087cc:	add	w0, w0, #0x1
  4087d0:	cbnz	w1, 4087c8 <nftw@plt+0x5ad8>
  4087d4:	ret
  4087d8:	mov	w0, #0x1                   	// #1
  4087dc:	ret
  4087e0:	stp	x29, x30, [sp, #-240]!
  4087e4:	mov	x29, sp
  4087e8:	str	q0, [sp, #64]
  4087ec:	str	q1, [sp, #80]
  4087f0:	str	q2, [sp, #96]
  4087f4:	str	q3, [sp, #112]
  4087f8:	str	q4, [sp, #128]
  4087fc:	str	q5, [sp, #144]
  408800:	str	q6, [sp, #160]
  408804:	str	q7, [sp, #176]
  408808:	stp	x2, x3, [sp, #192]
  40880c:	stp	x4, x5, [sp, #208]
  408810:	stp	x6, x7, [sp, #224]
  408814:	cbnz	x0, 408830 <nftw@plt+0x5b40>
  408818:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40881c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408820:	add	x2, x2, #0x160
  408824:	add	x0, x0, #0x0
  408828:	mov	w1, #0x4dc                 	// #1244
  40882c:	bl	402d60 <nftw@plt+0x70>
  408830:	mov	x8, x0
  408834:	mov	x9, x1
  408838:	bl	40684c <nftw@plt+0x3b5c>
  40883c:	mov	x2, x9
  408840:	add	x0, sp, #0xf0
  408844:	stp	x0, x0, [sp, #32]
  408848:	add	x0, sp, #0xc0
  40884c:	add	x3, sp, #0x20
  408850:	str	x0, [sp, #48]
  408854:	mov	w0, #0xffffffd0            	// #-48
  408858:	mov	w4, #0x8                   	// #8
  40885c:	mov	w1, #0xffffffff            	// #-1
  408860:	str	w0, [sp, #56]
  408864:	mov	w0, #0xffffff80            	// #-128
  408868:	str	w0, [sp, #60]
  40886c:	mov	x0, x8
  408870:	bl	4079c0 <nftw@plt+0x4cd0>
  408874:	add	x0, sp, #0x18
  408878:	bl	407224 <nftw@plt+0x4534>
  40887c:	ldp	x29, x30, [sp], #240
  408880:	ret
  408884:	stp	x29, x30, [sp, #-256]!
  408888:	mov	x29, sp
  40888c:	str	x19, [sp, #16]
  408890:	str	q0, [sp, #80]
  408894:	str	q1, [sp, #96]
  408898:	str	q2, [sp, #112]
  40889c:	str	q3, [sp, #128]
  4088a0:	str	q4, [sp, #144]
  4088a4:	str	q5, [sp, #160]
  4088a8:	str	q6, [sp, #176]
  4088ac:	str	q7, [sp, #192]
  4088b0:	stp	x3, x4, [sp, #216]
  4088b4:	stp	x5, x6, [sp, #232]
  4088b8:	str	x7, [sp, #248]
  4088bc:	cbnz	x0, 4088d8 <nftw@plt+0x5be8>
  4088c0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4088c4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4088c8:	add	x2, x2, #0x167
  4088cc:	add	x0, x0, #0x0
  4088d0:	mov	w1, #0x518                 	// #1304
  4088d4:	bl	402d60 <nftw@plt+0x70>
  4088d8:	mov	x8, x0
  4088dc:	mov	w9, w1
  4088e0:	bl	40684c <nftw@plt+0x3b5c>
  4088e4:	mov	w1, w9
  4088e8:	add	x0, sp, #0x100
  4088ec:	stp	x0, x0, [sp, #48]
  4088f0:	add	x0, sp, #0xd0
  4088f4:	add	x3, sp, #0x30
  4088f8:	str	x0, [sp, #64]
  4088fc:	mov	w0, #0xffffffd8            	// #-40
  408900:	mov	w4, #0x6                   	// #6
  408904:	str	w0, [sp, #72]
  408908:	mov	w0, #0xffffff80            	// #-128
  40890c:	str	w0, [sp, #76]
  408910:	mov	x0, x8
  408914:	bl	4079c0 <nftw@plt+0x4cd0>
  408918:	mov	w19, w0
  40891c:	add	x0, sp, #0x28
  408920:	bl	407224 <nftw@plt+0x4534>
  408924:	mov	w0, w19
  408928:	ldr	x19, [sp, #16]
  40892c:	ldp	x29, x30, [sp], #256
  408930:	ret
  408934:	stp	x29, x30, [sp, #-256]!
  408938:	mov	x29, sp
  40893c:	str	x19, [sp, #16]
  408940:	str	q0, [sp, #80]
  408944:	str	q1, [sp, #96]
  408948:	str	q2, [sp, #112]
  40894c:	str	q3, [sp, #128]
  408950:	str	q4, [sp, #144]
  408954:	str	q5, [sp, #160]
  408958:	str	q6, [sp, #176]
  40895c:	str	q7, [sp, #192]
  408960:	stp	x3, x4, [sp, #216]
  408964:	stp	x5, x6, [sp, #232]
  408968:	str	x7, [sp, #248]
  40896c:	cbnz	x0, 408988 <nftw@plt+0x5c98>
  408970:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408974:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408978:	add	x2, x2, #0x172
  40897c:	add	x0, x0, #0x0
  408980:	mov	w1, #0x565                 	// #1381
  408984:	bl	402d60 <nftw@plt+0x70>
  408988:	mov	x8, x0
  40898c:	mov	w9, w1
  408990:	bl	40684c <nftw@plt+0x3b5c>
  408994:	mov	w1, w9
  408998:	add	x0, sp, #0x100
  40899c:	stp	x0, x0, [sp, #48]
  4089a0:	add	x0, sp, #0xd0
  4089a4:	add	x3, sp, #0x30
  4089a8:	str	x0, [sp, #64]
  4089ac:	mov	w0, #0xffffffd8            	// #-40
  4089b0:	mov	w4, #0xa                   	// #10
  4089b4:	str	w0, [sp, #72]
  4089b8:	mov	w0, #0xffffff80            	// #-128
  4089bc:	str	w0, [sp, #76]
  4089c0:	mov	x0, x8
  4089c4:	bl	4079c0 <nftw@plt+0x4cd0>
  4089c8:	mov	w19, w0
  4089cc:	add	x0, sp, #0x28
  4089d0:	bl	407224 <nftw@plt+0x4534>
  4089d4:	mov	w0, w19
  4089d8:	ldr	x19, [sp, #16]
  4089dc:	ldp	x29, x30, [sp], #256
  4089e0:	ret
  4089e4:	stp	x29, x30, [sp, #-256]!
  4089e8:	mov	x29, sp
  4089ec:	str	x19, [sp, #16]
  4089f0:	str	q0, [sp, #80]
  4089f4:	str	q1, [sp, #96]
  4089f8:	str	q2, [sp, #112]
  4089fc:	str	q3, [sp, #128]
  408a00:	str	q4, [sp, #144]
  408a04:	str	q5, [sp, #160]
  408a08:	str	q6, [sp, #176]
  408a0c:	str	q7, [sp, #192]
  408a10:	stp	x2, x3, [sp, #208]
  408a14:	stp	x4, x5, [sp, #224]
  408a18:	stp	x6, x7, [sp, #240]
  408a1c:	cbnz	x0, 408a38 <nftw@plt+0x5d48>
  408a20:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408a24:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408a28:	add	x2, x2, #0x17a
  408a2c:	add	x0, x0, #0x0
  408a30:	mov	w1, #0x587                 	// #1415
  408a34:	bl	402d60 <nftw@plt+0x70>
  408a38:	mov	x8, x0
  408a3c:	mov	x9, x1
  408a40:	bl	40684c <nftw@plt+0x3b5c>
  408a44:	mov	x2, x9
  408a48:	add	x0, sp, #0x100
  408a4c:	stp	x0, x0, [sp, #48]
  408a50:	add	x0, sp, #0xd0
  408a54:	add	x3, sp, #0x30
  408a58:	str	x0, [sp, #64]
  408a5c:	mov	w0, #0xffffffd0            	// #-48
  408a60:	mov	w4, #0xb                   	// #11
  408a64:	mov	w1, #0xffffffff            	// #-1
  408a68:	str	w0, [sp, #72]
  408a6c:	mov	w0, #0xffffff80            	// #-128
  408a70:	str	w0, [sp, #76]
  408a74:	mov	x0, x8
  408a78:	bl	4079c0 <nftw@plt+0x4cd0>
  408a7c:	mov	w19, w0
  408a80:	add	x0, sp, #0x28
  408a84:	bl	407224 <nftw@plt+0x4534>
  408a88:	mov	w0, w19
  408a8c:	ldr	x19, [sp, #16]
  408a90:	ldp	x29, x30, [sp], #256
  408a94:	ret
  408a98:	stp	x29, x30, [sp, #-240]!
  408a9c:	mov	x29, sp
  408aa0:	str	q0, [sp, #64]
  408aa4:	str	q1, [sp, #80]
  408aa8:	str	q2, [sp, #96]
  408aac:	str	q3, [sp, #112]
  408ab0:	str	q4, [sp, #128]
  408ab4:	str	q5, [sp, #144]
  408ab8:	str	q6, [sp, #160]
  408abc:	str	q7, [sp, #176]
  408ac0:	stp	x2, x3, [sp, #192]
  408ac4:	stp	x4, x5, [sp, #208]
  408ac8:	stp	x6, x7, [sp, #224]
  408acc:	cbnz	x0, 408ae8 <nftw@plt+0x5df8>
  408ad0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408ad4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408ad8:	add	x2, x2, #0x184
  408adc:	add	x0, x0, #0x0
  408ae0:	mov	w1, #0x5be                 	// #1470
  408ae4:	bl	402d60 <nftw@plt+0x70>
  408ae8:	mov	x8, x0
  408aec:	mov	x9, x1
  408af0:	bl	40684c <nftw@plt+0x3b5c>
  408af4:	mov	x2, x9
  408af8:	add	x0, sp, #0xf0
  408afc:	stp	x0, x0, [sp, #32]
  408b00:	add	x0, sp, #0xc0
  408b04:	add	x3, sp, #0x20
  408b08:	str	x0, [sp, #48]
  408b0c:	mov	w0, #0xffffffd0            	// #-48
  408b10:	mov	w4, #0x4                   	// #4
  408b14:	mov	w1, #0xffffffff            	// #-1
  408b18:	str	w0, [sp, #56]
  408b1c:	mov	w0, #0xffffff80            	// #-128
  408b20:	str	w0, [sp, #60]
  408b24:	mov	x0, x8
  408b28:	bl	4079c0 <nftw@plt+0x4cd0>
  408b2c:	add	x0, sp, #0x18
  408b30:	bl	407224 <nftw@plt+0x4534>
  408b34:	ldp	x29, x30, [sp], #240
  408b38:	ret
  408b3c:	stp	x29, x30, [sp, #-416]!
  408b40:	mov	w8, w0
  408b44:	mov	x29, sp
  408b48:	str	x19, [sp, #16]
  408b4c:	mov	x19, x1
  408b50:	str	q0, [sp, #240]
  408b54:	str	q1, [sp, #256]
  408b58:	str	q2, [sp, #272]
  408b5c:	str	q3, [sp, #288]
  408b60:	str	q4, [sp, #304]
  408b64:	str	q5, [sp, #320]
  408b68:	str	q6, [sp, #336]
  408b6c:	str	q7, [sp, #352]
  408b70:	stp	x2, x3, [sp, #368]
  408b74:	stp	x4, x5, [sp, #384]
  408b78:	stp	x6, x7, [sp, #400]
  408b7c:	bl	40684c <nftw@plt+0x3b5c>
  408b80:	add	x0, sp, #0x1a0
  408b84:	stp	x0, x0, [sp, #40]
  408b88:	add	x0, sp, #0x170
  408b8c:	mov	w2, w8
  408b90:	str	x0, [sp, #56]
  408b94:	mov	w0, #0xffffffd0            	// #-48
  408b98:	str	w0, [sp, #64]
  408b9c:	mov	w0, #0xffffff80            	// #-128
  408ba0:	str	w0, [sp, #68]
  408ba4:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408ba8:	mov	x3, #0x0                   	// #0
  408bac:	ldr	x1, [x0, #2320]
  408bb0:	add	x0, sp, #0x48
  408bb4:	bl	4277f0 <nftw@plt+0x24b00>
  408bb8:	add	x3, sp, #0x28
  408bbc:	mov	w4, #0x2                   	// #2
  408bc0:	mov	x2, x19
  408bc4:	mov	w1, #0xffffffff            	// #-1
  408bc8:	add	x0, sp, #0x48
  408bcc:	bl	4079c0 <nftw@plt+0x4cd0>
  408bd0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408bd4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408bd8:	add	x2, x2, #0x18d
  408bdc:	add	x0, x0, #0x0
  408be0:	mov	w1, #0x5f6                 	// #1526
  408be4:	bl	402d60 <nftw@plt+0x70>
  408be8:	stp	x29, x30, [sp, #-432]!
  408bec:	mov	x29, sp
  408bf0:	str	x19, [sp, #16]
  408bf4:	mov	x19, x0
  408bf8:	str	q0, [sp, #240]
  408bfc:	str	q1, [sp, #256]
  408c00:	str	q2, [sp, #272]
  408c04:	str	q3, [sp, #288]
  408c08:	str	q4, [sp, #304]
  408c0c:	str	q5, [sp, #320]
  408c10:	str	q6, [sp, #336]
  408c14:	str	q7, [sp, #352]
  408c18:	stp	x1, x2, [sp, #376]
  408c1c:	stp	x3, x4, [sp, #392]
  408c20:	stp	x5, x6, [sp, #408]
  408c24:	str	x7, [sp, #424]
  408c28:	bl	40684c <nftw@plt+0x3b5c>
  408c2c:	add	x0, sp, #0x1b0
  408c30:	stp	x0, x0, [sp, #40]
  408c34:	add	x0, sp, #0x170
  408c38:	str	x0, [sp, #56]
  408c3c:	mov	w0, #0xffffffc8            	// #-56
  408c40:	str	w0, [sp, #64]
  408c44:	mov	w0, #0xffffff80            	// #-128
  408c48:	str	w0, [sp, #68]
  408c4c:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408c50:	mov	x3, #0x0                   	// #0
  408c54:	ldr	w2, [x0, #2344]
  408c58:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408c5c:	ldr	x1, [x0, #2320]
  408c60:	add	x0, sp, #0x48
  408c64:	bl	4277f0 <nftw@plt+0x24b00>
  408c68:	add	x3, sp, #0x28
  408c6c:	mov	w4, #0xd                   	// #13
  408c70:	mov	x2, x19
  408c74:	mov	w1, #0xffffffff            	// #-1
  408c78:	add	x0, sp, #0x48
  408c7c:	bl	4079c0 <nftw@plt+0x4cd0>
  408c80:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408c84:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408c88:	add	x2, x2, #0x199
  408c8c:	add	x0, x0, #0x0
  408c90:	mov	w1, #0x617                 	// #1559
  408c94:	bl	402d60 <nftw@plt+0x70>
  408c98:	stp	x29, x30, [sp, #-112]!
  408c9c:	mov	x29, sp
  408ca0:	stp	x19, x20, [sp, #16]
  408ca4:	mov	w19, w6
  408ca8:	mov	w20, w1
  408cac:	mov	x1, x4
  408cb0:	stp	x21, x22, [sp, #32]
  408cb4:	mov	x21, x5
  408cb8:	mov	x22, x0
  408cbc:	mov	x0, x3
  408cc0:	bl	4025f0 <ngettext@plt>
  408cc4:	mov	x1, x0
  408cc8:	mov	w4, w19
  408ccc:	mov	x3, x22
  408cd0:	mov	x2, x21
  408cd4:	add	x0, sp, #0x30
  408cd8:	bl	408338 <nftw@plt+0x5648>
  408cdc:	cmp	w19, #0x6
  408ce0:	b.ne	408ce8 <nftw@plt+0x5ff8>  // b.any
  408ce4:	str	w20, [sp, #108]
  408ce8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  408cec:	add	x1, sp, #0x30
  408cf0:	ldr	x0, [x0, #944]
  408cf4:	bl	4074bc <nftw@plt+0x47cc>
  408cf8:	ldp	x19, x20, [sp, #16]
  408cfc:	ldp	x21, x22, [sp, #32]
  408d00:	ldp	x29, x30, [sp], #112
  408d04:	ret
  408d08:	stp	x29, x30, [sp, #-416]!
  408d0c:	mov	w8, w0
  408d10:	mov	x29, sp
  408d14:	add	x0, sp, #0x1a0
  408d18:	stp	x0, x0, [sp, #56]
  408d1c:	add	x0, sp, #0x180
  408d20:	str	x0, [sp, #72]
  408d24:	mov	w0, #0xffffffe0            	// #-32
  408d28:	str	w0, [sp, #80]
  408d2c:	mov	w0, #0xffffff80            	// #-128
  408d30:	stp	x19, x20, [sp, #16]
  408d34:	mov	x19, x1
  408d38:	mov	x20, x2
  408d3c:	str	x21, [sp, #32]
  408d40:	mov	x21, x3
  408d44:	str	w0, [sp, #84]
  408d48:	str	q0, [sp, #256]
  408d4c:	str	q1, [sp, #272]
  408d50:	str	q2, [sp, #288]
  408d54:	str	q3, [sp, #304]
  408d58:	str	q4, [sp, #320]
  408d5c:	str	q5, [sp, #336]
  408d60:	str	q6, [sp, #352]
  408d64:	str	q7, [sp, #368]
  408d68:	stp	x4, x5, [sp, #384]
  408d6c:	stp	x6, x7, [sp, #400]
  408d70:	bl	40684c <nftw@plt+0x3b5c>
  408d74:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408d78:	mov	w2, w8
  408d7c:	mov	x3, #0x0                   	// #0
  408d80:	ldr	x1, [x0, #2320]
  408d84:	add	x0, sp, #0x58
  408d88:	bl	4277f0 <nftw@plt+0x24b00>
  408d8c:	add	x5, sp, #0x38
  408d90:	mov	x4, x21
  408d94:	mov	x3, x20
  408d98:	mov	x2, x19
  408d9c:	mov	w6, #0x8                   	// #8
  408da0:	mov	w1, #0xffffffff            	// #-1
  408da4:	add	x0, sp, #0x58
  408da8:	bl	408c98 <nftw@plt+0x5fa8>
  408dac:	add	x0, sp, #0x58
  408db0:	bl	427584 <nftw@plt+0x24894>
  408db4:	add	x0, sp, #0x30
  408db8:	bl	407224 <nftw@plt+0x4534>
  408dbc:	ldp	x19, x20, [sp, #16]
  408dc0:	ldr	x21, [sp, #32]
  408dc4:	ldp	x29, x30, [sp], #416
  408dc8:	ret
  408dcc:	stp	x29, x30, [sp, #-240]!
  408dd0:	mov	x29, sp
  408dd4:	str	x19, [sp, #16]
  408dd8:	str	q0, [sp, #80]
  408ddc:	str	q1, [sp, #96]
  408de0:	str	q2, [sp, #112]
  408de4:	str	q3, [sp, #128]
  408de8:	str	q4, [sp, #144]
  408dec:	str	q5, [sp, #160]
  408df0:	str	q6, [sp, #176]
  408df4:	str	q7, [sp, #192]
  408df8:	stp	x5, x6, [sp, #216]
  408dfc:	str	x7, [sp, #232]
  408e00:	cbnz	x0, 408e1c <nftw@plt+0x612c>
  408e04:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408e08:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  408e0c:	add	x2, x2, #0x1b5
  408e10:	add	x0, x0, #0x0
  408e14:	mov	w1, #0x528                 	// #1320
  408e18:	bl	402d60 <nftw@plt+0x70>
  408e1c:	mov	x8, x0
  408e20:	mov	w9, w1
  408e24:	bl	40684c <nftw@plt+0x3b5c>
  408e28:	mov	w1, w9
  408e2c:	add	x0, sp, #0xf0
  408e30:	stp	x0, x0, [sp, #48]
  408e34:	add	x0, sp, #0xd0
  408e38:	add	x5, sp, #0x30
  408e3c:	str	x0, [sp, #64]
  408e40:	mov	w0, #0xffffffe8            	// #-24
  408e44:	mov	w6, #0x6                   	// #6
  408e48:	str	w0, [sp, #72]
  408e4c:	mov	w0, #0xffffff80            	// #-128
  408e50:	str	w0, [sp, #76]
  408e54:	mov	x0, x8
  408e58:	bl	408c98 <nftw@plt+0x5fa8>
  408e5c:	mov	w19, w0
  408e60:	add	x0, sp, #0x28
  408e64:	bl	407224 <nftw@plt+0x4534>
  408e68:	mov	w0, w19
  408e6c:	ldr	x19, [sp, #16]
  408e70:	ldp	x29, x30, [sp], #240
  408e74:	ret
  408e78:	stp	x29, x30, [sp, #-416]!
  408e7c:	mov	w8, w0
  408e80:	mov	x29, sp
  408e84:	stp	x19, x20, [sp, #16]
  408e88:	mov	w19, w1
  408e8c:	mov	x20, x2
  408e90:	stp	x21, x22, [sp, #32]
  408e94:	mov	x21, x3
  408e98:	mov	x22, x4
  408e9c:	str	q0, [sp, #256]
  408ea0:	str	q1, [sp, #272]
  408ea4:	str	q2, [sp, #288]
  408ea8:	str	q3, [sp, #304]
  408eac:	str	q4, [sp, #320]
  408eb0:	str	q5, [sp, #336]
  408eb4:	str	q6, [sp, #352]
  408eb8:	str	q7, [sp, #368]
  408ebc:	stp	x5, x6, [sp, #392]
  408ec0:	str	x7, [sp, #408]
  408ec4:	bl	40684c <nftw@plt+0x3b5c>
  408ec8:	add	x0, sp, #0x1a0
  408ecc:	stp	x0, x0, [sp, #56]
  408ed0:	add	x0, sp, #0x180
  408ed4:	str	x0, [sp, #72]
  408ed8:	mov	w0, #0xffffffe8            	// #-24
  408edc:	str	w0, [sp, #80]
  408ee0:	mov	w0, #0xffffff80            	// #-128
  408ee4:	str	w0, [sp, #84]
  408ee8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408eec:	mov	w2, w8
  408ef0:	mov	x3, #0x0                   	// #0
  408ef4:	ldr	x1, [x0, #2320]
  408ef8:	add	x0, sp, #0x58
  408efc:	bl	4277f0 <nftw@plt+0x24b00>
  408f00:	add	x5, sp, #0x38
  408f04:	mov	x4, x22
  408f08:	mov	x3, x21
  408f0c:	mov	x2, x20
  408f10:	mov	w1, w19
  408f14:	mov	w6, #0x6                   	// #6
  408f18:	add	x0, sp, #0x58
  408f1c:	bl	408c98 <nftw@plt+0x5fa8>
  408f20:	mov	w19, w0
  408f24:	add	x0, sp, #0x58
  408f28:	bl	427584 <nftw@plt+0x24894>
  408f2c:	add	x0, sp, #0x30
  408f30:	bl	407224 <nftw@plt+0x4534>
  408f34:	mov	w0, w19
  408f38:	ldp	x19, x20, [sp, #16]
  408f3c:	ldp	x21, x22, [sp, #32]
  408f40:	ldp	x29, x30, [sp], #416
  408f44:	ret
  408f48:	stp	x29, x30, [sp, #-416]!
  408f4c:	mov	w8, w0
  408f50:	mov	x29, sp
  408f54:	stp	x19, x20, [sp, #16]
  408f58:	mov	x19, x1
  408f5c:	mov	x20, x2
  408f60:	str	x21, [sp, #32]
  408f64:	mov	x21, x3
  408f68:	str	q0, [sp, #256]
  408f6c:	str	q1, [sp, #272]
  408f70:	str	q2, [sp, #288]
  408f74:	str	q3, [sp, #304]
  408f78:	str	q4, [sp, #320]
  408f7c:	str	q5, [sp, #336]
  408f80:	str	q6, [sp, #352]
  408f84:	str	q7, [sp, #368]
  408f88:	stp	x4, x5, [sp, #384]
  408f8c:	stp	x6, x7, [sp, #400]
  408f90:	bl	40684c <nftw@plt+0x3b5c>
  408f94:	add	x0, sp, #0x1a0
  408f98:	stp	x0, x0, [sp, #56]
  408f9c:	add	x0, sp, #0x180
  408fa0:	mov	w2, w8
  408fa4:	str	x0, [sp, #72]
  408fa8:	mov	w0, #0xffffffe0            	// #-32
  408fac:	str	w0, [sp, #80]
  408fb0:	mov	w0, #0xffffff80            	// #-128
  408fb4:	str	w0, [sp, #84]
  408fb8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  408fbc:	mov	x3, #0x0                   	// #0
  408fc0:	ldr	x1, [x0, #2320]
  408fc4:	add	x0, sp, #0x58
  408fc8:	bl	4277f0 <nftw@plt+0x24b00>
  408fcc:	add	x5, sp, #0x38
  408fd0:	mov	x4, x21
  408fd4:	mov	x3, x20
  408fd8:	mov	x2, x19
  408fdc:	mov	w6, #0x4                   	// #4
  408fe0:	mov	w1, #0xffffffff            	// #-1
  408fe4:	add	x0, sp, #0x58
  408fe8:	bl	408c98 <nftw@plt+0x5fa8>
  408fec:	add	x0, sp, #0x58
  408ff0:	bl	427584 <nftw@plt+0x24894>
  408ff4:	add	x0, sp, #0x30
  408ff8:	bl	407224 <nftw@plt+0x4534>
  408ffc:	ldp	x19, x20, [sp, #16]
  409000:	ldr	x21, [sp, #32]
  409004:	ldp	x29, x30, [sp], #416
  409008:	ret
  40900c:	stp	x29, x30, [sp, #-32]!
  409010:	mov	x29, sp
  409014:	stp	x19, x20, [sp, #16]
  409018:	and	w20, w0, #0xff
  40901c:	mov	x19, x1
  409020:	mov	x0, x1
  409024:	bl	402630 <strlen@plt>
  409028:	mov	x1, x19
  40902c:	mov	x2, x0
  409030:	mov	w0, w20
  409034:	ldp	x19, x20, [sp, #16]
  409038:	ldp	x29, x30, [sp], #32
  40903c:	b	4092a8 <nftw@plt+0x65b8>
  409040:	cbz	x1, 409128 <nftw@plt+0x6438>
  409044:	stp	x29, x30, [sp, #-48]!
  409048:	mov	x29, sp
  40904c:	stp	x19, x20, [sp, #16]
  409050:	mov	x19, x1
  409054:	ldr	x1, [x0, #16]
  409058:	stp	x21, x22, [sp, #32]
  40905c:	mov	x21, x0
  409060:	cbz	x1, 40906c <nftw@plt+0x637c>
  409064:	ldr	x0, [x19]
  409068:	blr	x1
  40906c:	ldr	x1, [x21, #24]
  409070:	cbz	x1, 40907c <nftw@plt+0x638c>
  409074:	ldr	x0, [x19, #8]
  409078:	blr	x1
  40907c:	str	xzr, [x19, #32]
  409080:	mov	x20, x19
  409084:	mov	x19, #0x0                   	// #0
  409088:	ldr	x0, [x20, #16]
  40908c:	cbz	x0, 4090c0 <nftw@plt+0x63d0>
  409090:	ldr	x1, [x21, #16]
  409094:	cbz	x1, 4090a0 <nftw@plt+0x63b0>
  409098:	ldr	x0, [x0]
  40909c:	blr	x1
  4090a0:	ldr	x1, [x21, #24]
  4090a4:	cbz	x1, 4090b4 <nftw@plt+0x63c4>
  4090a8:	ldr	x0, [x20, #16]
  4090ac:	ldr	x0, [x0, #8]
  4090b0:	blr	x1
  4090b4:	ldr	x0, [x20, #16]
  4090b8:	str	x19, [x0, #32]
  4090bc:	mov	x19, x0
  4090c0:	ldr	x0, [x20, #24]
  4090c4:	cbz	x0, 4090f8 <nftw@plt+0x6408>
  4090c8:	ldr	x1, [x21, #16]
  4090cc:	cbz	x1, 4090d8 <nftw@plt+0x63e8>
  4090d0:	ldr	x0, [x0]
  4090d4:	blr	x1
  4090d8:	ldr	x1, [x21, #24]
  4090dc:	cbz	x1, 4090ec <nftw@plt+0x63fc>
  4090e0:	ldr	x0, [x20, #24]
  4090e4:	ldr	x0, [x0, #8]
  4090e8:	blr	x1
  4090ec:	ldr	x0, [x20, #24]
  4090f0:	str	x19, [x0, #32]
  4090f4:	mov	x19, x0
  4090f8:	ldr	x22, [x20, #32]
  4090fc:	mov	x0, x20
  409100:	mov	x1, #0x28                  	// #40
  409104:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  409108:	cbz	x22, 409114 <nftw@plt+0x6424>
  40910c:	mov	x20, x22
  409110:	b	409088 <nftw@plt+0x6398>
  409114:	cbnz	x19, 409080 <nftw@plt+0x6390>
  409118:	ldp	x19, x20, [sp, #16]
  40911c:	ldp	x21, x22, [sp, #32]
  409120:	ldp	x29, x30, [sp], #48
  409124:	ret
  409128:	ret
  40912c:	stp	x29, x30, [sp, #-96]!
  409130:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409134:	add	x0, x0, #0x3f8
  409138:	mov	x29, sp
  40913c:	stp	x19, x20, [sp, #16]
  409140:	stp	x21, x22, [sp, #32]
  409144:	stp	x23, x24, [sp, #48]
  409148:	stp	x25, x26, [sp, #64]
  40914c:	str	x27, [sp, #80]
  409150:	bl	402c30 <getenv@plt>
  409154:	cbz	x0, 409280 <nftw@plt+0x6590>
  409158:	mov	x19, x0
  40915c:	ldrb	w0, [x0]
  409160:	cbz	w0, 4092a0 <nftw@plt+0x65b0>
  409164:	adrp	x23, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409168:	mov	x20, x19
  40916c:	add	x23, x23, #0x487
  409170:	mov	x21, #0x0                   	// #0
  409174:	mov	x22, #0x0                   	// #0
  409178:	mov	x26, #0x0                   	// #0
  40917c:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  409180:	mov	w25, #0x5b1b                	// #23323
  409184:	ldrb	w0, [x20]
  409188:	cmp	w0, #0x3a
  40918c:	b.eq	409194 <nftw@plt+0x64a4>  // b.none
  409190:	cbnz	w0, 409244 <nftw@plt+0x6554>
  409194:	cbz	x26, 4091cc <nftw@plt+0x64dc>
  409198:	sub	x21, x20, x26
  40919c:	add	x27, x24, #0x3b8
  4091a0:	ldr	x0, [x27]
  4091a4:	cbz	x0, 4091d4 <nftw@plt+0x64e4>
  4091a8:	ldrb	w1, [x27, #16]
  4091ac:	cmp	x1, x22
  4091b0:	b.ne	4091c4 <nftw@plt+0x64d4>  // b.any
  4091b4:	mov	x2, x22
  4091b8:	mov	x1, x19
  4091bc:	bl	4029c0 <memcmp@plt>
  4091c0:	cbz	w0, 4091d4 <nftw@plt+0x64e4>
  4091c4:	add	x27, x27, #0x18
  4091c8:	b	4091a0 <nftw@plt+0x64b0>
  4091cc:	sub	x22, x20, x19
  4091d0:	b	40919c <nftw@plt+0x64ac>
  4091d4:	ldr	x0, [x27, #8]
  4091d8:	cbz	x0, 40922c <nftw@plt+0x653c>
  4091dc:	cbz	x26, 40922c <nftw@plt+0x653c>
  4091e0:	ldrb	w1, [x27, #17]
  4091e4:	cbz	w1, 4091ec <nftw@plt+0x64fc>
  4091e8:	bl	402a80 <free@plt>
  4091ec:	add	x0, x21, #0x7
  4091f0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4091f4:	mov	x19, x0
  4091f8:	strh	w25, [x0], #2
  4091fc:	mov	x2, x21
  409200:	mov	x1, x26
  409204:	bl	4025d0 <memcpy@plt>
  409208:	str	x19, [x27, #8]
  40920c:	add	x0, x21, #0x2
  409210:	ldr	w2, [x23]
  409214:	add	x1, x19, x0
  409218:	str	w2, [x19, x0]
  40921c:	ldrb	w0, [x23, #4]
  409220:	strb	w0, [x1, #4]
  409224:	mov	w0, #0x1                   	// #1
  409228:	strb	w0, [x27, #17]
  40922c:	ldrb	w0, [x20]
  409230:	cbz	w0, 409280 <nftw@plt+0x6590>
  409234:	add	x19, x20, #0x1
  409238:	mov	x26, #0x0                   	// #0
  40923c:	add	x20, x20, #0x1
  409240:	b	409184 <nftw@plt+0x6494>
  409244:	cmp	w0, #0x3d
  409248:	b.ne	409264 <nftw@plt+0x6574>  // b.any
  40924c:	cmp	x26, #0x0
  409250:	ccmp	x20, x19, #0x4, eq  // eq = none
  409254:	b.eq	409280 <nftw@plt+0x6590>  // b.none
  409258:	sub	x22, x20, x19
  40925c:	add	x26, x20, #0x1
  409260:	b	40923c <nftw@plt+0x654c>
  409264:	cbz	x26, 40923c <nftw@plt+0x654c>
  409268:	cmp	w0, #0x3b
  40926c:	b.eq	40923c <nftw@plt+0x654c>  // b.none
  409270:	sub	w0, w0, #0x30
  409274:	and	w0, w0, #0xff
  409278:	cmp	w0, #0x9
  40927c:	b.ls	40923c <nftw@plt+0x654c>  // b.plast
  409280:	mov	w0, #0x1                   	// #1
  409284:	ldp	x19, x20, [sp, #16]
  409288:	ldp	x21, x22, [sp, #32]
  40928c:	ldp	x23, x24, [sp, #48]
  409290:	ldp	x25, x26, [sp, #64]
  409294:	ldr	x27, [sp, #80]
  409298:	ldp	x29, x30, [sp], #96
  40929c:	ret
  4092a0:	mov	w0, #0x0                   	// #0
  4092a4:	b	409284 <nftw@plt+0x6594>
  4092a8:	tst	w0, #0xff
  4092ac:	b.eq	4092fc <nftw@plt+0x660c>  // b.none
  4092b0:	stp	x29, x30, [sp, #-48]!
  4092b4:	mov	x29, sp
  4092b8:	stp	x19, x20, [sp, #16]
  4092bc:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4092c0:	mov	x20, x2
  4092c4:	add	x19, x19, #0x3b8
  4092c8:	str	x21, [sp, #32]
  4092cc:	mov	x21, x1
  4092d0:	ldr	x0, [x19]
  4092d4:	cbz	x0, 409308 <nftw@plt+0x6618>
  4092d8:	ldrb	w1, [x19, #16]
  4092dc:	cmp	x1, x20
  4092e0:	b.ne	4092f4 <nftw@plt+0x6604>  // b.any
  4092e4:	mov	x2, x20
  4092e8:	mov	x1, x21
  4092ec:	bl	4029c0 <memcmp@plt>
  4092f0:	cbz	w0, 409320 <nftw@plt+0x6630>
  4092f4:	add	x19, x19, #0x18
  4092f8:	b	4092d0 <nftw@plt+0x65e0>
  4092fc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0xffa8>
  409300:	add	x0, x0, #0xe54
  409304:	ret
  409308:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40930c:	add	x0, x0, #0xe54
  409310:	ldp	x19, x20, [sp, #16]
  409314:	ldr	x21, [sp, #32]
  409318:	ldp	x29, x30, [sp], #48
  40931c:	ret
  409320:	ldr	x0, [x19, #8]
  409324:	b	409310 <nftw@plt+0x6620>
  409328:	tst	w0, #0xff
  40932c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409330:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  409334:	add	x0, x2, #0x403
  409338:	add	x1, x1, #0xe54
  40933c:	csel	x0, x0, x1, ne  // ne = any
  409340:	ret
  409344:	cmp	w0, #0x1
  409348:	b.eq	4093c4 <nftw@plt+0x66d4>  // b.none
  40934c:	stp	x29, x30, [sp, #-32]!
  409350:	cmp	w0, #0x2
  409354:	mov	x29, sp
  409358:	str	x19, [sp, #16]
  40935c:	mov	w19, w0
  409360:	b.eq	409380 <nftw@plt+0x6690>  // b.none
  409364:	cbz	w0, 409390 <nftw@plt+0x66a0>
  409368:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40936c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409370:	add	x2, x2, #0x414
  409374:	add	x0, x0, #0x422
  409378:	mov	w1, #0xec                  	// #236
  40937c:	bl	402d60 <nftw@plt+0x70>
  409380:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409384:	add	x0, x0, #0x40a
  409388:	bl	402c30 <getenv@plt>
  40938c:	cbnz	x0, 4093a0 <nftw@plt+0x66b0>
  409390:	mov	w0, #0x0                   	// #0
  409394:	ldr	x19, [sp, #16]
  409398:	ldp	x29, x30, [sp], #32
  40939c:	ret
  4093a0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4093a4:	add	x1, x1, #0x40f
  4093a8:	bl	402a00 <strcmp@plt>
  4093ac:	cbz	w0, 409390 <nftw@plt+0x66a0>
  4093b0:	mov	w0, w19
  4093b4:	bl	402b60 <isatty@plt>
  4093b8:	cbz	w0, 409390 <nftw@plt+0x66a0>
  4093bc:	ldr	x19, [sp, #16]
  4093c0:	ldp	x29, x30, [sp], #32
  4093c4:	b	40912c <nftw@plt+0x643c>
  4093c8:	ldr	x2, [x0]
  4093cc:	ldr	x0, [x1]
  4093d0:	ldr	w1, [x2]
  4093d4:	ldr	w0, [x0]
  4093d8:	sub	w0, w1, w0
  4093dc:	ret
  4093e0:	stp	x29, x30, [sp, #-32]!
  4093e4:	mov	x29, sp
  4093e8:	str	x19, [sp, #16]
  4093ec:	mov	x19, x0
  4093f0:	ldr	x0, [x0]
  4093f4:	cbz	x0, 409404 <nftw@plt+0x6714>
  4093f8:	ldrsb	w1, [x0, #3]
  4093fc:	tbz	w1, #31, 409410 <nftw@plt+0x6720>
  409400:	str	wzr, [x0, #4]
  409404:	ldr	x19, [sp, #16]
  409408:	ldp	x29, x30, [sp], #32
  40940c:	ret
  409410:	bl	402a80 <free@plt>
  409414:	str	xzr, [x19]
  409418:	b	409404 <nftw@plt+0x6714>
  40941c:	stp	x29, x30, [sp, #-32]!
  409420:	mov	x29, sp
  409424:	str	x19, [sp, #16]
  409428:	mov	x19, x0
  40942c:	ldr	x0, [x0]
  409430:	cbz	x0, 409440 <nftw@plt+0x6750>
  409434:	ldrsb	w1, [x0, #3]
  409438:	tbz	w1, #31, 40944c <nftw@plt+0x675c>
  40943c:	str	wzr, [x0, #4]
  409440:	ldr	x19, [sp, #16]
  409444:	ldp	x29, x30, [sp], #32
  409448:	ret
  40944c:	bl	402a80 <free@plt>
  409450:	str	xzr, [x19]
  409454:	b	409440 <nftw@plt+0x6750>
  409458:	stp	x29, x30, [sp, #-64]!
  40945c:	mov	x29, sp
  409460:	stp	x19, x20, [sp, #16]
  409464:	mov	w20, w0
  409468:	mov	w19, w1
  40946c:	stp	x21, x22, [sp, #32]
  409470:	stp	x23, x24, [sp, #48]
  409474:	adrp	x23, 47e000 <__environ@@GLIBC_2.17+0xa50>
  409478:	tbz	w20, #31, 40948c <nftw@plt+0x679c>
  40947c:	ldr	x0, [x23, #2320]
  409480:	mov	w1, w20
  409484:	bl	425b4c <nftw@plt+0x22e5c>
  409488:	mov	w20, w0
  40948c:	tbz	w19, #31, 4094a0 <nftw@plt+0x67b0>
  409490:	ldr	x0, [x23, #2320]
  409494:	mov	w1, w19
  409498:	bl	425b4c <nftw@plt+0x22e5c>
  40949c:	mov	w19, w0
  4094a0:	cmp	w20, #0x1
  4094a4:	cset	w21, ls  // ls = plast
  4094a8:	cmp	w19, #0x1
  4094ac:	cset	w0, ls  // ls = plast
  4094b0:	orr	w21, w21, w0
  4094b4:	cbz	w21, 4094d8 <nftw@plt+0x67e8>
  4094b8:	cmp	w20, w19
  4094bc:	cset	w21, eq  // eq = none
  4094c0:	mov	w0, w21
  4094c4:	ldp	x19, x20, [sp, #16]
  4094c8:	ldp	x21, x22, [sp, #32]
  4094cc:	ldp	x23, x24, [sp, #48]
  4094d0:	ldp	x29, x30, [sp], #64
  4094d4:	ret
  4094d8:	ldr	x0, [x23, #2320]
  4094dc:	mov	w1, w20
  4094e0:	bl	4262e8 <nftw@plt+0x235f8>
  4094e4:	mov	x22, x0
  4094e8:	ldr	x0, [x23, #2320]
  4094ec:	mov	w1, w19
  4094f0:	bl	4262e8 <nftw@plt+0x235f8>
  4094f4:	mov	x24, x0
  4094f8:	cmp	x22, x0
  4094fc:	b.ne	409538 <nftw@plt+0x6848>  // b.any
  409500:	bl	426240 <nftw@plt+0x23550>
  409504:	tst	w0, #0xff
  409508:	b.eq	409568 <nftw@plt+0x6878>  // b.none
  40950c:	ldr	x0, [x23, #2320]
  409510:	mov	w2, w20
  409514:	mov	x1, x22
  409518:	bl	426260 <nftw@plt+0x23570>
  40951c:	mov	w20, w0
  409520:	ldr	x0, [x23, #2320]
  409524:	mov	w2, w19
  409528:	mov	x1, x22
  40952c:	bl	426260 <nftw@plt+0x23570>
  409530:	mov	w19, w0
  409534:	b	409478 <nftw@plt+0x6788>
  409538:	mov	x0, x22
  40953c:	bl	426240 <nftw@plt+0x23550>
  409540:	tst	w0, #0xff
  409544:	b.ne	4094c0 <nftw@plt+0x67d0>  // b.any
  409548:	mov	x0, x24
  40954c:	bl	426240 <nftw@plt+0x23550>
  409550:	tst	w0, #0xff
  409554:	b.ne	4094c0 <nftw@plt+0x67d0>  // b.any
  409558:	ldr	x1, [x22, #8]
  40955c:	ldr	x0, [x24, #8]
  409560:	cmp	x1, x0
  409564:	b	4094bc <nftw@plt+0x67cc>
  409568:	mov	w21, #0x1                   	// #1
  40956c:	b	4094c0 <nftw@plt+0x67d0>
  409570:	stp	w1, w2, [x0]
  409574:	cmp	w1, w2
  409578:	b.le	4095a8 <nftw@plt+0x68b8>
  40957c:	sub	w1, w1, #0x1
  409580:	cmp	w1, w2
  409584:	b.eq	4095a8 <nftw@plt+0x68b8>  // b.none
  409588:	stp	x29, x30, [sp, #-16]!
  40958c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409590:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409594:	mov	x29, sp
  409598:	add	x2, x2, #0x4fe
  40959c:	add	x0, x0, #0x50b
  4095a0:	mov	w1, #0x6bc                 	// #1724
  4095a4:	bl	402d60 <nftw@plt+0x70>
  4095a8:	ret
  4095ac:	stp	x29, x30, [sp, #-48]!
  4095b0:	mov	x29, sp
  4095b4:	stp	x19, x20, [sp, #16]
  4095b8:	mov	x19, x0
  4095bc:	ldrb	w0, [x0, #114]
  4095c0:	str	x21, [sp, #32]
  4095c4:	cbz	w0, 40962c <nftw@plt+0x693c>
  4095c8:	and	w21, w1, #0xff
  4095cc:	mov	w20, #0x0                   	// #0
  4095d0:	ldr	w1, [x19, #144]
  4095d4:	ldr	x0, [x19, #8]
  4095d8:	sub	w1, w1, #0x3
  4095dc:	cmp	w1, w20
  4095e0:	b.le	4095f4 <nftw@plt+0x6904>
  4095e4:	mov	w1, #0x20                  	// #32
  4095e8:	add	w20, w20, #0x1
  4095ec:	bl	40da7c <nftw@plt+0xad8c>
  4095f0:	b	4095d0 <nftw@plt+0x68e0>
  4095f4:	ldr	w1, [x19, #144]
  4095f8:	ldr	x0, [x19, #8]
  4095fc:	cmp	w1, w20
  409600:	b.le	409614 <nftw@plt+0x6924>
  409604:	mov	w1, w21
  409608:	add	w20, w20, #0x1
  40960c:	bl	40da7c <nftw@plt+0xad8c>
  409610:	b	4095f4 <nftw@plt+0x6904>
  409614:	ldp	x19, x20, [sp, #16]
  409618:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40961c:	ldr	x21, [sp, #32]
  409620:	add	x1, x1, #0x52d
  409624:	ldp	x29, x30, [sp], #48
  409628:	b	40de28 <nftw@plt+0xb138>
  40962c:	ldp	x19, x20, [sp, #16]
  409630:	ldr	x21, [sp, #32]
  409634:	ldp	x29, x30, [sp], #48
  409638:	ret
  40963c:	stp	x29, x30, [sp, #-48]!
  409640:	mov	x29, sp
  409644:	stp	x19, x20, [sp, #16]
  409648:	mov	x19, x0
  40964c:	ldr	w0, [x0, #12]
  409650:	str	x21, [sp, #32]
  409654:	cmp	w0, w1
  409658:	b.eq	40974c <nftw@plt+0x6a5c>  // b.none
  40965c:	mov	w20, w1
  409660:	cmn	w0, #0x1
  409664:	b.eq	409678 <nftw@plt+0x6988>  // b.none
  409668:	ldr	x0, [x19]
  40966c:	ldr	x1, [x19, #48]
  409670:	ldr	x0, [x0]
  409674:	bl	40de28 <nftw@plt+0xb138>
  409678:	str	w20, [x19, #12]
  40967c:	add	w1, w20, #0x3
  409680:	cmp	w1, #0x5
  409684:	b.hi	409718 <nftw@plt+0x6a28>  // b.pmore
  409688:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40968c:	add	x0, x0, #0x664
  409690:	ldrb	w0, [x0, w1, uxtw]
  409694:	adr	x1, 4096a0 <nftw@plt+0x69b0>
  409698:	add	x0, x1, w0, sxtb #2
  40969c:	br	x0
  4096a0:	ldr	x0, [x19]
  4096a4:	ldr	x1, [x19, #32]
  4096a8:	ldr	x0, [x0]
  4096ac:	b	4096f0 <nftw@plt+0x6a00>
  4096b0:	ldr	x0, [x19]
  4096b4:	ldr	x1, [x19, #40]
  4096b8:	b	4096a8 <nftw@plt+0x69b8>
  4096bc:	ldr	x0, [x19]
  4096c0:	ldr	x20, [x0]
  4096c4:	ldr	w0, [x19, #8]
  4096c8:	ldrb	w21, [x20, #67]
  4096cc:	bl	406c64 <nftw@plt+0x3f74>
  4096d0:	mov	x19, x0
  4096d4:	bl	402630 <strlen@plt>
  4096d8:	mov	x2, x0
  4096dc:	mov	x1, x19
  4096e0:	mov	w0, w21
  4096e4:	bl	4092a8 <nftw@plt+0x65b8>
  4096e8:	mov	x1, x0
  4096ec:	mov	x0, x20
  4096f0:	ldp	x19, x20, [sp, #16]
  4096f4:	ldr	x21, [sp, #32]
  4096f8:	ldp	x29, x30, [sp], #48
  4096fc:	b	40de28 <nftw@plt+0xb138>
  409700:	ldr	x0, [x19]
  409704:	ldr	x1, [x19, #16]
  409708:	b	4096a8 <nftw@plt+0x69b8>
  40970c:	ldr	x0, [x19]
  409710:	ldr	x1, [x19, #24]
  409714:	b	4096a8 <nftw@plt+0x69b8>
  409718:	cmp	w20, #0x2
  40971c:	b.gt	409738 <nftw@plt+0x6a48>
  409720:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409724:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409728:	add	x2, x2, #0x530
  40972c:	add	x0, x0, #0x50b
  409730:	mov	w1, #0x17f                 	// #383
  409734:	bl	402d60 <nftw@plt+0x70>
  409738:	ldp	x2, x1, [x19, #16]
  40973c:	tst	x20, #0x1
  409740:	ldr	x0, [x19]
  409744:	csel	x1, x2, x1, ne  // ne = any
  409748:	b	4096a8 <nftw@plt+0x69b8>
  40974c:	ldp	x19, x20, [sp, #16]
  409750:	ldr	x21, [sp, #32]
  409754:	ldp	x29, x30, [sp], #48
  409758:	ret
  40975c:	mov	w1, #0xffffffff            	// #-1
  409760:	b	40963c <nftw@plt+0x694c>
  409764:	stp	x29, x30, [sp, #-32]!
  409768:	mov	x29, sp
  40976c:	str	x19, [sp, #16]
  409770:	mov	x19, x0
  409774:	add	x0, x0, #0x38
  409778:	bl	40975c <nftw@plt+0x6a6c>
  40977c:	ldr	x0, [x19, #8]
  409780:	ldr	x19, [sp, #16]
  409784:	ldp	x29, x30, [sp], #32
  409788:	b	40da20 <nftw@plt+0xad30>
  40978c:	stp	x29, x30, [sp, #-48]!
  409790:	mov	x29, sp
  409794:	stp	x19, x20, [sp, #16]
  409798:	mov	x19, x1
  40979c:	ldr	w1, [x1]
  4097a0:	stp	x21, x22, [sp, #32]
  4097a4:	mov	x20, x0
  4097a8:	mov	w21, w2
  4097ac:	cmp	w1, w2
  4097b0:	b.le	4097d4 <nftw@plt+0x6ae4>
  4097b4:	and	w22, w3, #0xff
  4097b8:	bl	409764 <nftw@plt+0x6a74>
  4097bc:	cbz	w22, 4097cc <nftw@plt+0x6adc>
  4097c0:	mov	x0, x20
  4097c4:	mov	w1, #0x20                  	// #32
  4097c8:	bl	4095ac <nftw@plt+0x68bc>
  4097cc:	ldr	w0, [x20, #148]
  4097d0:	str	w0, [x19]
  4097d4:	ldr	w0, [x19]
  4097d8:	cmp	w0, w21
  4097dc:	b.ge	4097f8 <nftw@plt+0x6b08>  // b.tcont
  4097e0:	ldr	x0, [x20, #8]
  4097e4:	mov	w1, #0x20                  	// #32
  4097e8:	bl	40da7c <nftw@plt+0xad8c>
  4097ec:	ldr	w0, [x19]
  4097f0:	add	w0, w0, #0x1
  4097f4:	b	4097d0 <nftw@plt+0x6ae0>
  4097f8:	ldp	x19, x20, [sp, #16]
  4097fc:	ldp	x21, x22, [sp, #32]
  409800:	ldp	x29, x30, [sp], #48
  409804:	ret
  409808:	cbnz	x0, 40981c <nftw@plt+0x6b2c>
  40980c:	cmp	w1, #0x4
  409810:	mov	w0, #0x4                   	// #4
  409814:	csel	w0, w1, w0, cs  // cs = hs, nlast
  409818:	ret
  40981c:	ldr	w2, [x0, #4]
  409820:	ldr	w0, [x0]
  409824:	add	w1, w1, w2
  409828:	and	w0, w0, #0x7fffffff
  40982c:	b	40fbec <nftw@plt+0xcefc>
  409830:	stp	x29, x30, [sp, #-16]!
  409834:	mov	x29, sp
  409838:	tbz	w1, #31, 409854 <nftw@plt+0x6b64>
  40983c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409840:	add	x2, x2, #0x53c
  409844:	mov	w1, #0x705                 	// #1797
  409848:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40984c:	add	x0, x0, #0x50b
  409850:	bl	402d60 <nftw@plt+0x70>
  409854:	mov	x3, x2
  409858:	sxtw	x4, w1
  40985c:	ldr	x2, [x2, #8]
  409860:	ldr	x5, [x0, #32]
  409864:	add	x1, x2, w1, sxtw
  409868:	cmp	x1, x5
  40986c:	b.cc	409880 <nftw@plt+0x6b90>  // b.lo, b.ul, b.last
  409870:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409874:	mov	w1, #0x706                 	// #1798
  409878:	add	x2, x2, #0x53c
  40987c:	b	409848 <nftw@plt+0x6b58>
  409880:	ldp	x29, x30, [sp], #16
  409884:	ldr	x1, [x3]
  409888:	ldr	x0, [x0, #16]
  40988c:	add	x0, x0, x4
  409890:	b	4025d0 <memcpy@plt>
  409894:	ldr	x3, [x0, #136]
  409898:	mov	w2, #0x0                   	// #0
  40989c:	add	x0, x3, #0xc
  4098a0:	cbz	x3, 4098d4 <nftw@plt+0x6be4>
  4098a4:	ldr	w4, [x3, #4]
  4098a8:	cmp	w2, w4
  4098ac:	b.ge	4098d4 <nftw@plt+0x6be4>  // b.tcont
  4098b0:	ldur	w4, [x0, #-4]
  4098b4:	cmp	w1, w4
  4098b8:	b.cc	4098c8 <nftw@plt+0x6bd8>  // b.lo, b.ul, b.last
  4098bc:	ldr	w4, [x0]
  4098c0:	cmp	w1, w4
  4098c4:	b.ls	4098dc <nftw@plt+0x6bec>  // b.plast
  4098c8:	add	w2, w2, #0x1
  4098cc:	add	x0, x0, #0x8
  4098d0:	b	4098a0 <nftw@plt+0x6bb0>
  4098d4:	mov	w0, #0x0                   	// #0
  4098d8:	ret
  4098dc:	mov	w0, #0x1                   	// #1
  4098e0:	b	4098d8 <nftw@plt+0x6be8>
  4098e4:	ldr	x7, [x0, #120]
  4098e8:	mov	x0, #0x0                   	// #0
  4098ec:	add	x6, x7, #0x8
  4098f0:	cbz	x7, 409a50 <nftw@plt+0x6d60>
  4098f4:	ldr	w8, [x7, #4]
  4098f8:	cmp	w8, w0
  4098fc:	b.ls	409a50 <nftw@plt+0x6d60>  // b.plast
  409900:	ldr	w10, [x6, #16]
  409904:	cmp	w10, #0x2
  409908:	b.ne	409a58 <nftw@plt+0x6d68>  // b.any
  40990c:	add	w0, w0, #0x1
  409910:	add	x6, x6, #0x28
  409914:	b	4098f0 <nftw@plt+0x6c00>
  409918:	add	w0, w0, #0x1
  40991c:	add	x6, x6, #0x28
  409920:	cbz	x7, 409a38 <nftw@plt+0x6d48>
  409924:	ldr	w8, [x7, #4]
  409928:	cmp	w8, w0
  40992c:	b.ls	409a38 <nftw@plt+0x6d48>  // b.plast
  409930:	ldr	w10, [x6, #16]
  409934:	cmp	w10, #0x2
  409938:	b.eq	409918 <nftw@plt+0x6c28>  // b.none
  40993c:	ldr	w9, [x6]
  409940:	ldr	w8, [x6, #8]
  409944:	cmp	w9, w8
  409948:	b.ls	409964 <nftw@plt+0x6c74>  // b.plast
  40994c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409950:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409954:	add	x2, x2, #0x546
  409958:	add	x0, x0, #0x50b
  40995c:	mov	w1, #0x1d8                 	// #472
  409960:	bl	402d60 <nftw@plt+0x70>
  409964:	cmp	w1, w9
  409968:	b.cc	409918 <nftw@plt+0x6c28>  // b.lo, b.ul, b.last
  40996c:	b.ne	4099a0 <nftw@plt+0x6cb0>  // b.any
  409970:	ldr	w9, [x6, #4]
  409974:	cmp	w2, w9
  409978:	b.lt	409918 <nftw@plt+0x6c28>  // b.tstop
  40997c:	cmp	w1, w8
  409980:	b.cc	4099f8 <nftw@plt+0x6d08>  // b.lo, b.ul, b.last
  409984:	b.eq	4099e8 <nftw@plt+0x6cf8>  // b.none
  409988:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40998c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409990:	add	x2, x2, #0x546
  409994:	add	x0, x0, #0x50b
  409998:	mov	w1, #0x1f3                 	// #499
  40999c:	bl	402d60 <nftw@plt+0x70>
  4099a0:	cmp	w1, w8
  4099a4:	b.hi	409918 <nftw@plt+0x6c28>  // b.pmore
  4099a8:	b.cs	4099cc <nftw@plt+0x6cdc>  // b.hs, b.nlast
  4099ac:	cmp	w9, w8
  4099b0:	b.ne	4099f8 <nftw@plt+0x6d08>  // b.any
  4099b4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4099b8:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4099bc:	add	x2, x2, #0x546
  4099c0:	add	x0, x0, #0x50b
  4099c4:	mov	w1, #0x207                 	// #519
  4099c8:	bl	402d60 <nftw@plt+0x70>
  4099cc:	b.eq	4099e8 <nftw@plt+0x6cf8>  // b.none
  4099d0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4099d4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4099d8:	add	x2, x2, #0x546
  4099dc:	add	x0, x0, #0x50b
  4099e0:	mov	w1, #0x20b                 	// #523
  4099e4:	bl	402d60 <nftw@plt+0x70>
  4099e8:	ldr	w8, [x6, #12]
  4099ec:	cmp	w2, w8
  4099f0:	cset	w8, le
  4099f4:	cbz	w8, 409918 <nftw@plt+0x6c28>
  4099f8:	str	w0, [x5]
  4099fc:	strb	wzr, [x5, #4]
  409a00:	cbnz	w10, 409a40 <nftw@plt+0x6d50>
  409a04:	mov	x6, #0x28                  	// #40
  409a08:	madd	x0, x0, x6, x7
  409a0c:	ldr	w6, [x0, #28]
  409a10:	cmp	w6, w1
  409a14:	b.ne	409a40 <nftw@plt+0x6d50>  // b.any
  409a18:	ldr	w0, [x0, #32]
  409a1c:	cmp	w0, w2
  409a20:	b.ne	409a40 <nftw@plt+0x6d50>  // b.any
  409a24:	mov	w0, #0x1                   	// #1
  409a28:	strb	w0, [x5, #4]
  409a2c:	mov	w0, #0x1                   	// #1
  409a30:	ldp	x29, x30, [sp], #16
  409a34:	ret
  409a38:	mov	w0, #0x0                   	// #0
  409a3c:	b	409a30 <nftw@plt+0x6d40>
  409a40:	cmp	w2, w3
  409a44:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  409a48:	cset	w0, le
  409a4c:	b	409a30 <nftw@plt+0x6d40>
  409a50:	mov	w0, #0x0                   	// #0
  409a54:	ret
  409a58:	stp	x29, x30, [sp, #-16]!
  409a5c:	mov	x29, sp
  409a60:	b	40993c <nftw@plt+0x6c4c>
  409a64:	ldr	w2, [x0, #4]
  409a68:	ldr	w3, [x1, #4]
  409a6c:	subs	x2, x2, x3
  409a70:	b.ne	409a8c <nftw@plt+0x6d9c>  // b.any
  409a74:	ldr	w0, [x0]
  409a78:	ldr	w1, [x1]
  409a7c:	subs	x1, x0, x1
  409a80:	b.ne	409a9c <nftw@plt+0x6dac>  // b.any
  409a84:	mov	w0, #0x0                   	// #0
  409a88:	ret
  409a8c:	cmp	x2, #0x1
  409a90:	mov	w0, #0x1                   	// #1
  409a94:	cneg	w0, w0, lt  // lt = tstop
  409a98:	b	409a88 <nftw@plt+0x6d98>
  409a9c:	cmp	x1, #0x1
  409aa0:	mov	w0, #0x1                   	// #1
  409aa4:	b	409a94 <nftw@plt+0x6da4>
  409aa8:	ldr	w2, [x0]
  409aac:	ldr	w3, [x1]
  409ab0:	subs	x2, x2, x3
  409ab4:	b.ne	409ad0 <nftw@plt+0x6de0>  // b.any
  409ab8:	ldr	w0, [x0, #4]
  409abc:	ldr	w1, [x1, #4]
  409ac0:	subs	x1, x0, x1
  409ac4:	b.ne	409ae0 <nftw@plt+0x6df0>  // b.any
  409ac8:	mov	w0, #0x0                   	// #0
  409acc:	ret
  409ad0:	cmp	x2, #0x1
  409ad4:	mov	w0, #0x1                   	// #1
  409ad8:	cneg	w0, w0, lt  // lt = tstop
  409adc:	b	409acc <nftw@plt+0x6ddc>
  409ae0:	cmp	x1, #0x1
  409ae4:	mov	w0, #0x1                   	// #1
  409ae8:	b	409ad8 <nftw@plt+0x6de8>
  409aec:	stp	x29, x30, [sp, #-32]!
  409af0:	mov	x29, sp
  409af4:	stp	x19, x20, [sp, #16]
  409af8:	mov	x20, x0
  409afc:	mov	x19, x1
  409b00:	mov	x0, x1
  409b04:	bl	402630 <strlen@plt>
  409b08:	ldr	x3, [x20]
  409b0c:	mov	x1, x19
  409b10:	ldp	x19, x20, [sp, #16]
  409b14:	mov	x2, x0
  409b18:	ldp	x29, x30, [sp], #32
  409b1c:	ldrb	w0, [x3, #67]
  409b20:	b	4092a8 <nftw@plt+0x65b8>
  409b24:	stp	x29, x30, [sp, #-32]!
  409b28:	mov	x29, sp
  409b2c:	str	x19, [sp, #16]
  409b30:	mov	x19, x0
  409b34:	add	x0, x0, #0x88
  409b38:	bl	4093e0 <nftw@plt+0x66f0>
  409b3c:	ldr	x0, [x19, #128]
  409b40:	cbz	x0, 409b50 <nftw@plt+0x6e60>
  409b44:	ldrsb	w1, [x0, #3]
  409b48:	tbz	w1, #31, 409b88 <nftw@plt+0x6e98>
  409b4c:	str	wzr, [x0, #4]
  409b50:	ldr	x0, [x19, #120]
  409b54:	cbz	x0, 409b64 <nftw@plt+0x6e74>
  409b58:	ldrsb	w1, [x0, #3]
  409b5c:	tbz	w1, #31, 409b90 <nftw@plt+0x6ea0>
  409b60:	str	wzr, [x0, #4]
  409b64:	ldr	w1, [x19, #68]
  409b68:	cmn	w1, #0x1
  409b6c:	b.eq	409b98 <nftw@plt+0x6ea8>  // b.none
  409b70:	ldr	x2, [x19, #56]
  409b74:	ldr	x1, [x19, #104]
  409b78:	ldr	x19, [sp, #16]
  409b7c:	ldp	x29, x30, [sp], #32
  409b80:	ldr	x0, [x2]
  409b84:	b	40de28 <nftw@plt+0xb138>
  409b88:	bl	402a80 <free@plt>
  409b8c:	b	409b50 <nftw@plt+0x6e60>
  409b90:	bl	402a80 <free@plt>
  409b94:	b	409b64 <nftw@plt+0x6e74>
  409b98:	ldr	x19, [sp, #16]
  409b9c:	ldp	x29, x30, [sp], #32
  409ba0:	ret
  409ba4:	stp	x29, x30, [sp, #-64]!
  409ba8:	and	w2, w2, #0xff
  409bac:	mov	x29, sp
  409bb0:	stp	x23, x24, [sp, #48]
  409bb4:	ldr	x23, [x0]
  409bb8:	stp	x19, x20, [sp, #16]
  409bbc:	mov	x20, x0
  409bc0:	stp	x21, x22, [sp, #32]
  409bc4:	cbz	x23, 409be4 <nftw@plt+0x6ef4>
  409bc8:	ldp	w0, w21, [x23]
  409bcc:	ubfx	x0, x0, #0, #31
  409bd0:	sub	w0, w0, w21
  409bd4:	cmp	w1, w0
  409bd8:	b.hi	409bf4 <nftw@plt+0x6f04>  // b.pmore
  409bdc:	mov	w19, #0x0                   	// #0
  409be0:	b	409c90 <nftw@plt+0x6fa0>
  409be4:	mov	w19, #0x0                   	// #0
  409be8:	cbz	w1, 409c90 <nftw@plt+0x6fa0>
  409bec:	mov	w21, #0x0                   	// #0
  409bf0:	b	409c08 <nftw@plt+0x6f18>
  409bf4:	ldrsb	w0, [x23, #3]
  409bf8:	tbz	w0, #31, 409c7c <nftw@plt+0x6f8c>
  409bfc:	add	w1, w1, w21
  409c00:	mov	w19, #0x1                   	// #1
  409c04:	str	xzr, [x20]
  409c08:	ldr	x0, [x20]
  409c0c:	bl	40b928 <nftw@plt+0x8c38>
  409c10:	mov	w22, w0
  409c14:	mov	w1, #0x28                  	// #40
  409c18:	mov	x0, #0x8                   	// #8
  409c1c:	umaddl	x1, w22, w1, x0
  409c20:	ldr	x0, [x20]
  409c24:	cbz	x0, 409c84 <nftw@plt+0x6f94>
  409c28:	ldr	w24, [x0, #4]
  409c2c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  409c30:	str	x0, [x20]
  409c34:	and	w22, w22, #0x7fffffff
  409c38:	stp	w22, w24, [x0]
  409c3c:	mov	x1, x0
  409c40:	cbz	w19, 409ca8 <nftw@plt+0x6fb8>
  409c44:	mov	w2, w21
  409c48:	mov	x0, #0x8                   	// #8
  409c4c:	cbz	w2, 409c8c <nftw@plt+0x6f9c>
  409c50:	add	x6, x23, x0
  409c54:	add	x3, x1, x0
  409c58:	sub	w2, w2, #0x1
  409c5c:	add	x0, x0, #0x28
  409c60:	ldp	x4, x5, [x6]
  409c64:	stp	x4, x5, [x3]
  409c68:	ldp	x4, x5, [x6, #16]
  409c6c:	stp	x4, x5, [x3, #16]
  409c70:	ldr	x4, [x6, #32]
  409c74:	str	x4, [x3, #32]
  409c78:	b	409c4c <nftw@plt+0x6f5c>
  409c7c:	mov	w19, #0x0                   	// #0
  409c80:	b	409bec <nftw@plt+0x6efc>
  409c84:	mov	w24, #0x0                   	// #0
  409c88:	b	409c2c <nftw@plt+0x6f3c>
  409c8c:	str	w21, [x1, #4]
  409c90:	mov	w0, w19
  409c94:	ldp	x19, x20, [sp, #16]
  409c98:	ldp	x21, x22, [sp, #32]
  409c9c:	ldp	x23, x24, [sp, #48]
  409ca0:	ldp	x29, x30, [sp], #64
  409ca4:	ret
  409ca8:	mov	w19, #0x1                   	// #1
  409cac:	b	409c90 <nftw@plt+0x6fa0>
  409cb0:	stp	x29, x30, [sp, #-224]!
  409cb4:	mov	x29, sp
  409cb8:	stp	x19, x20, [sp, #16]
  409cbc:	mov	x19, x0
  409cc0:	and	w0, w3, #0xff
  409cc4:	stp	x21, x22, [sp, #32]
  409cc8:	stp	x23, x24, [sp, #48]
  409ccc:	stp	x25, x26, [sp, #64]
  409cd0:	stp	x27, x28, [sp, #80]
  409cd4:	stp	w2, w0, [sp, #120]
  409cd8:	cbnz	x1, 409cf4 <nftw@plt+0x7004>
  409cdc:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409ce0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  409ce4:	add	x2, x2, #0x555
  409ce8:	add	x0, x0, #0x50b
  409cec:	mov	w1, #0x39f                 	// #927
  409cf0:	bl	402d60 <nftw@plt+0x70>
  409cf4:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  409cf8:	mov	x20, x1
  409cfc:	ldr	w1, [x1]
  409d00:	ldr	x0, [x0, #2320]
  409d04:	bl	4265d4 <nftw@plt+0x238e4>
  409d08:	mov	x26, x0
  409d0c:	lsr	x24, x0, #32
  409d10:	add	x8, sp, #0x80
  409d14:	mov	w1, #0x1                   	// #1
  409d18:	bl	4117e4 <nftw@plt+0xeaf4>
  409d1c:	add	x8, sp, #0xa0
  409d20:	mov	w0, w24
  409d24:	mov	w1, #0x2                   	// #2
  409d28:	ldr	w28, [sp, #136]
  409d2c:	bl	4117e4 <nftw@plt+0xeaf4>
  409d30:	ldr	w27, [sp, #168]
  409d34:	ldr	w0, [x20]
  409d38:	mov	w1, #0x0                   	// #0
  409d3c:	add	x8, sp, #0xc0
  409d40:	bl	4117e4 <nftw@plt+0xeaf4>
  409d44:	ldr	x1, [x19, #24]
  409d48:	ldr	x0, [sp, #128]
  409d4c:	cmp	x0, x1
  409d50:	b.eq	409d74 <nftw@plt+0x7084>  // b.none
  409d54:	mov	w0, #0x0                   	// #0
  409d58:	ldp	x19, x20, [sp, #16]
  409d5c:	ldp	x21, x22, [sp, #32]
  409d60:	ldp	x23, x24, [sp, #48]
  409d64:	ldp	x25, x26, [sp, #64]
  409d68:	ldp	x27, x28, [sp, #80]
  409d6c:	ldp	x29, x30, [sp], #224
  409d70:	ret
  409d74:	ldr	x1, [sp, #160]
  409d78:	cmp	x0, x1
  409d7c:	b.ne	409d54 <nftw@plt+0x7064>  // b.any
  409d80:	ldr	w1, [x20, #4]
  409d84:	cbnz	w1, 409d94 <nftw@plt+0x70a4>
  409d88:	ldr	x2, [sp, #192]
  409d8c:	cmp	x0, x2
  409d90:	b.ne	409d54 <nftw@plt+0x7064>  // b.any
  409d94:	ldr	x0, [x19, #120]
  409d98:	ldr	w21, [sp, #200]
  409d9c:	cbnz	x0, 409eac <nftw@plt+0x71bc>
  409da0:	ldr	w0, [x20, #4]
  409da4:	cmp	w28, w27
  409da8:	str	w0, [sp, #108]
  409dac:	ldr	x0, [x20, #8]
  409db0:	str	x0, [sp, #112]
  409db4:	ldr	w22, [sp, #204]
  409db8:	b.gt	409dec <nftw@plt+0x70fc>
  409dbc:	ldr	w1, [x19, #16]
  409dc0:	mov	w0, w26
  409dc4:	ldr	w25, [sp, #140]
  409dc8:	ldr	w23, [sp, #172]
  409dcc:	bl	409458 <nftw@plt+0x6768>
  409dd0:	tst	w0, #0xff
  409dd4:	b.eq	409dec <nftw@plt+0x70fc>  // b.none
  409dd8:	ldr	w1, [x19, #16]
  409ddc:	mov	w0, w24
  409de0:	bl	409458 <nftw@plt+0x6768>
  409de4:	tst	w0, #0xff
  409de8:	b.ne	409edc <nftw@plt+0x71ec>  // b.any
  409dec:	ldr	x0, [x19, #120]
  409df0:	cbnz	x0, 409ed0 <nftw@plt+0x71e0>
  409df4:	mov	w23, w22
  409df8:	mov	w24, w21
  409dfc:	mov	w25, w22
  409e00:	mov	w26, w21
  409e04:	ldr	w0, [sp, #124]
  409e08:	cbz	w0, 409e50 <nftw@plt+0x7160>
  409e0c:	mov	w1, w28
  409e10:	mov	x0, x19
  409e14:	bl	409894 <nftw@plt+0x6ba4>
  409e18:	tst	w0, #0xff
  409e1c:	b.eq	409d54 <nftw@plt+0x7064>  // b.none
  409e20:	mov	w1, w27
  409e24:	mov	x0, x19
  409e28:	bl	409894 <nftw@plt+0x6ba4>
  409e2c:	tst	w0, #0xff
  409e30:	b.eq	409d54 <nftw@plt+0x7064>  // b.none
  409e34:	ldr	w0, [x20, #4]
  409e38:	cbnz	w0, 409e50 <nftw@plt+0x7160>
  409e3c:	mov	w1, w21
  409e40:	mov	x0, x19
  409e44:	bl	409894 <nftw@plt+0x6ba4>
  409e48:	tst	w0, #0xff
  409e4c:	b.eq	409d54 <nftw@plt+0x7064>  // b.none
  409e50:	mov	w2, #0x0                   	// #0
  409e54:	mov	w1, #0x1                   	// #1
  409e58:	add	x0, x19, #0x78
  409e5c:	bl	409ba4 <nftw@plt+0x6eb4>
  409e60:	ldr	x2, [x19, #120]
  409e64:	mov	w3, #0x28                  	// #40
  409e68:	ldr	w1, [x2, #4]
  409e6c:	add	w0, w1, #0x1
  409e70:	str	w0, [x2, #4]
  409e74:	mov	x0, #0x8                   	// #8
  409e78:	umaddl	x1, w1, w3, x0
  409e7c:	add	x0, x2, x1
  409e80:	str	w26, [x2, x1]
  409e84:	ldr	w1, [sp, #108]
  409e88:	stp	w23, w1, [x0, #12]
  409e8c:	ldr	w1, [sp, #120]
  409e90:	str	w1, [x0, #28]
  409e94:	ldr	x1, [sp, #112]
  409e98:	stp	w25, w24, [x0, #4]
  409e9c:	stp	w21, w22, [x0, #20]
  409ea0:	str	x1, [x0, #32]
  409ea4:	mov	w0, #0x1                   	// #1
  409ea8:	b	409d58 <nftw@plt+0x7068>
  409eac:	ldr	w0, [x0, #4]
  409eb0:	cbz	w0, 409da0 <nftw@plt+0x70b0>
  409eb4:	cbnz	w1, 409da0 <nftw@plt+0x70b0>
  409eb8:	ldr	w1, [x19, #16]
  409ebc:	ldr	w0, [x20]
  409ec0:	bl	409458 <nftw@plt+0x6768>
  409ec4:	tst	w0, #0xff
  409ec8:	b.ne	409da0 <nftw@plt+0x70b0>  // b.any
  409ecc:	b	409d54 <nftw@plt+0x7064>
  409ed0:	ldr	w0, [x0, #4]
  409ed4:	cbz	w0, 409df4 <nftw@plt+0x7104>
  409ed8:	b	409d54 <nftw@plt+0x7064>
  409edc:	mov	w24, w27
  409ee0:	mov	w26, w28
  409ee4:	b	409e04 <nftw@plt+0x7114>
  409ee8:	stp	x29, x30, [sp, #-64]!
  409eec:	and	w2, w2, #0xff
  409ef0:	mov	x29, sp
  409ef4:	stp	x23, x24, [sp, #48]
  409ef8:	ldr	x23, [x0]
  409efc:	stp	x19, x20, [sp, #16]
  409f00:	mov	x20, x0
  409f04:	stp	x21, x22, [sp, #32]
  409f08:	cbz	x23, 409f28 <nftw@plt+0x7238>
  409f0c:	ldp	w0, w21, [x23]
  409f10:	ubfx	x0, x0, #0, #31
  409f14:	sub	w0, w0, w21
  409f18:	cmp	w1, w0
  409f1c:	b.hi	409f38 <nftw@plt+0x7248>  // b.pmore
  409f20:	mov	w19, #0x0                   	// #0
  409f24:	b	409fbc <nftw@plt+0x72cc>
  409f28:	mov	w19, #0x0                   	// #0
  409f2c:	cbz	w1, 409fbc <nftw@plt+0x72cc>
  409f30:	mov	w21, #0x0                   	// #0
  409f34:	b	409f4c <nftw@plt+0x725c>
  409f38:	ldrsb	w0, [x23, #3]
  409f3c:	tbz	w0, #31, 409fa8 <nftw@plt+0x72b8>
  409f40:	add	w1, w1, w21
  409f44:	mov	w19, #0x1                   	// #1
  409f48:	str	xzr, [x20]
  409f4c:	ldr	x0, [x20]
  409f50:	bl	40b928 <nftw@plt+0x8c38>
  409f54:	mov	w22, w0
  409f58:	ldr	x0, [x20]
  409f5c:	ubfiz	x1, x22, #3, #32
  409f60:	add	x1, x1, #0x8
  409f64:	cbz	x0, 409fb0 <nftw@plt+0x72c0>
  409f68:	ldr	w24, [x0, #4]
  409f6c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  409f70:	str	x0, [x20]
  409f74:	and	w22, w22, #0x7fffffff
  409f78:	stp	w22, w24, [x0]
  409f7c:	mov	x1, x0
  409f80:	cbz	w19, 409fd4 <nftw@plt+0x72e4>
  409f84:	mov	w3, w21
  409f88:	mov	x0, #0x0                   	// #0
  409f8c:	add	x2, x0, #0x1
  409f90:	cmp	x0, x3
  409f94:	b.eq	409fb8 <nftw@plt+0x72c8>  // b.none
  409f98:	ldr	x0, [x23, x2, lsl #3]
  409f9c:	str	x0, [x1, x2, lsl #3]
  409fa0:	mov	x0, x2
  409fa4:	b	409f8c <nftw@plt+0x729c>
  409fa8:	mov	w19, #0x0                   	// #0
  409fac:	b	409f30 <nftw@plt+0x7240>
  409fb0:	mov	w24, #0x0                   	// #0
  409fb4:	b	409f6c <nftw@plt+0x727c>
  409fb8:	str	w21, [x1, #4]
  409fbc:	mov	w0, w19
  409fc0:	ldp	x19, x20, [sp, #16]
  409fc4:	ldp	x21, x22, [sp, #32]
  409fc8:	ldp	x23, x24, [sp, #48]
  409fcc:	ldp	x29, x30, [sp], #64
  409fd0:	ret
  409fd4:	mov	w19, #0x1                   	// #1
  409fd8:	b	409fbc <nftw@plt+0x72cc>
  409fdc:	stp	x29, x30, [sp, #-32]!
  409fe0:	mov	w2, #0x0                   	// #0
  409fe4:	mov	x29, sp
  409fe8:	stp	x19, x20, [sp, #16]
  409fec:	mov	x20, x0
  409ff0:	mov	x19, x1
  409ff4:	mov	w1, #0x1                   	// #1
  409ff8:	bl	409ee8 <nftw@plt+0x71f8>
  409ffc:	ldr	x2, [x20]
  40a000:	ldr	x3, [x19]
  40a004:	ldr	w1, [x2, #4]
  40a008:	ldp	x19, x20, [sp, #16]
  40a00c:	add	w0, w1, #0x1
  40a010:	ubfiz	x1, x1, #3, #32
  40a014:	str	w0, [x2, #4]
  40a018:	add	x0, x1, #0x8
  40a01c:	str	x3, [x2, x0]
  40a020:	add	x0, x2, x0
  40a024:	ldp	x29, x30, [sp], #32
  40a028:	ret
  40a02c:	stp	x29, x30, [sp, #-144]!
  40a030:	mov	x29, sp
  40a034:	stp	x19, x20, [sp, #16]
  40a038:	mov	x19, x0
  40a03c:	mov	x20, x1
  40a040:	stp	x21, x22, [sp, #32]
  40a044:	mov	x21, x2
  40a048:	stp	x23, x24, [sp, #48]
  40a04c:	mov	w23, w3
  40a050:	stp	x25, x26, [sp, #64]
  40a054:	ldr	x0, [x1]
  40a058:	stp	x1, x0, [x19]
  40a05c:	mov	x0, x2
  40a060:	mov	w1, #0x0                   	// #0
  40a064:	str	x27, [sp, #80]
  40a068:	bl	427670 <nftw@plt+0x24980>
  40a06c:	ldr	w0, [x0]
  40a070:	str	w0, [x19, #16]
  40a074:	add	x8, x19, #0x18
  40a078:	mov	x0, x21
  40a07c:	mov	w1, #0x0                   	// #0
  40a080:	bl	427698 <nftw@plt+0x249a8>
  40a084:	str	x20, [x19, #56]
  40a088:	mov	w0, #0xffffffff            	// #-1
  40a08c:	stp	w23, w0, [x19, #64]
  40a090:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a094:	mov	x0, x20
  40a098:	add	x1, x1, #0x463
  40a09c:	bl	409aec <nftw@plt+0x6dfc>
  40a0a0:	str	x0, [x19, #72]
  40a0a4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a0a8:	ldr	x0, [x19, #56]
  40a0ac:	add	x1, x1, #0x473
  40a0b0:	bl	409aec <nftw@plt+0x6dfc>
  40a0b4:	str	x0, [x19, #80]
  40a0b8:	ldr	x0, [x19, #56]
  40a0bc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a0c0:	add	x1, x1, #0x48c
  40a0c4:	bl	409aec <nftw@plt+0x6dfc>
  40a0c8:	str	x0, [x19, #88]
  40a0cc:	ldr	x0, [x19, #56]
  40a0d0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a0d4:	add	x1, x1, #0x499
  40a0d8:	bl	409aec <nftw@plt+0x6dfc>
  40a0dc:	str	x0, [x19, #96]
  40a0e0:	ldr	x0, [x20]
  40a0e4:	ldrb	w0, [x0, #67]
  40a0e8:	bl	409328 <nftw@plt+0x6638>
  40a0ec:	str	xzr, [x19, #120]
  40a0f0:	ldurh	w1, [x20, #221]
  40a0f4:	strh	w1, [x19, #112]
  40a0f8:	ldr	w1, [x21, #8]
  40a0fc:	str	x0, [x19, #104]
  40a100:	ldrb	w0, [x20, #223]
  40a104:	strb	w0, [x19, #114]
  40a108:	cbz	w1, 40a118 <nftw@plt+0x7428>
  40a10c:	add	x0, x19, #0x78
  40a110:	mov	w2, #0x1                   	// #1
  40a114:	bl	409ba4 <nftw@plt+0x6eb4>
  40a118:	ldr	w1, [x21, #120]
  40a11c:	add	x23, x19, #0x80
  40a120:	str	xzr, [x19, #128]
  40a124:	cbz	w1, 40a134 <nftw@plt+0x7444>
  40a128:	mov	x0, x23
  40a12c:	mov	w2, #0x1                   	// #1
  40a130:	bl	40b950 <nftw@plt+0x8c60>
  40a134:	ldr	w1, [x21, #8]
  40a138:	add	x22, x19, #0x88
  40a13c:	str	xzr, [x19, #136]
  40a140:	adds	w1, w1, #0x1
  40a144:	b.eq	40a154 <nftw@plt+0x7464>  // b.none
  40a148:	mov	x0, x22
  40a14c:	mov	w2, #0x1                   	// #1
  40a150:	bl	409ee8 <nftw@plt+0x71f8>
  40a154:	mov	w24, #0x0                   	// #0
  40a158:	str	xzr, [x19, #144]
  40a15c:	ldr	w0, [x21, #8]
  40a160:	cmp	w24, w0
  40a164:	b.cs	40a190 <nftw@plt+0x74a0>  // b.hs, b.nlast
  40a168:	mov	w1, w24
  40a16c:	mov	x0, x21
  40a170:	bl	427670 <nftw@plt+0x24980>
  40a174:	mov	x1, x0
  40a178:	mov	w2, w24
  40a17c:	mov	x0, x19
  40a180:	mov	w3, #0x0                   	// #0
  40a184:	add	w24, w24, #0x1
  40a188:	bl	409cb0 <nftw@plt+0x6fc0>
  40a18c:	b	40a15c <nftw@plt+0x746c>
  40a190:	add	x24, x21, #0x78
  40a194:	mov	w26, #0x0                   	// #0
  40a198:	mov	x25, #0xfffffffffffffff0    	// #-16
  40a19c:	ldr	w0, [x21, #120]
  40a1a0:	cmp	w26, w0
  40a1a4:	b.cs	40a238 <nftw@plt+0x7548>  // b.hs, b.nlast
  40a1a8:	sxtw	x0, w26
  40a1ac:	cmp	w26, #0x1
  40a1b0:	b.gt	40a228 <nftw@plt+0x7538>
  40a1b4:	add	x0, x0, #0x1
  40a1b8:	add	x0, x24, x0, lsl #3
  40a1bc:	ldr	x27, [x0]
  40a1c0:	add	x8, sp, #0x70
  40a1c4:	ldr	w0, [x27]
  40a1c8:	bl	411644 <nftw@plt+0xe954>
  40a1cc:	ldr	x0, [x19, #24]
  40a1d0:	ldr	x1, [sp, #112]
  40a1d4:	cmp	x1, x0
  40a1d8:	b.ne	40a220 <nftw@plt+0x7530>  // b.any
  40a1dc:	ldr	w0, [x27, #4]
  40a1e0:	add	x8, sp, #0x70
  40a1e4:	bl	411644 <nftw@plt+0xe954>
  40a1e8:	ldr	x0, [x19, #24]
  40a1ec:	ldr	x1, [sp, #112]
  40a1f0:	cmp	x1, x0
  40a1f4:	b.ne	40a220 <nftw@plt+0x7530>  // b.any
  40a1f8:	mov	w2, #0x0                   	// #0
  40a1fc:	mov	w1, #0x1                   	// #1
  40a200:	mov	x0, x23
  40a204:	bl	40b950 <nftw@plt+0x8c60>
  40a208:	ldr	x1, [x19, #128]
  40a20c:	ldr	w0, [x1, #4]
  40a210:	add	w2, w0, #0x1
  40a214:	str	w2, [x1, #4]
  40a218:	add	x0, x1, w0, uxtw #3
  40a21c:	str	x27, [x0, #8]
  40a220:	add	w26, w26, #0x1
  40a224:	b	40a19c <nftw@plt+0x74ac>
  40a228:	ldr	x1, [x24, #32]
  40a22c:	add	x0, x25, w26, sxtw #3
  40a230:	add	x0, x1, x0
  40a234:	b	40a1bc <nftw@plt+0x74cc>
  40a238:	ldr	x0, [x19, #128]
  40a23c:	cbz	x0, 40a264 <nftw@plt+0x7574>
  40a240:	ldr	w1, [x0, #4]
  40a244:	cmp	w1, #0x1
  40a248:	b.ls	40a264 <nftw@plt+0x7574>  // b.plast
  40a24c:	adrp	x3, 409000 <nftw@plt+0x6310>
  40a250:	mov	x2, #0x8                   	// #8
  40a254:	add	x3, x3, #0x3c8
  40a258:	mov	w1, w1
  40a25c:	add	x0, x0, x2
  40a260:	bl	413e78 <nftw@plt+0x11188>
  40a264:	ldr	x0, [x19, #136]
  40a268:	cbz	x0, 40a28c <nftw@plt+0x759c>
  40a26c:	ldr	w0, [x0, #4]
  40a270:	cbz	w0, 40a28c <nftw@plt+0x759c>
  40a274:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a278:	add	x2, x2, #0x56e
  40a27c:	mov	w1, #0x49b                 	// #1179
  40a280:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a284:	add	x0, x0, #0x50b
  40a288:	bl	402d60 <nftw@plt+0x70>
  40a28c:	ldr	x0, [x19, #120]
  40a290:	cbz	x0, 40a304 <nftw@plt+0x7614>
  40a294:	ldr	w1, [x0, #4]
  40a298:	str	xzr, [sp, #104]
  40a29c:	adds	w1, w1, #0x1
  40a2a0:	b.eq	40a2b0 <nftw@plt+0x75c0>  // b.none
  40a2a4:	add	x0, sp, #0x68
  40a2a8:	mov	w2, #0x1                   	// #1
  40a2ac:	bl	409ee8 <nftw@plt+0x71f8>
  40a2b0:	ldr	w0, [x19, #32]
  40a2b4:	add	x1, sp, #0x70
  40a2b8:	mov	w21, #0x0                   	// #0
  40a2bc:	mov	w23, #0x28                  	// #40
  40a2c0:	stp	w0, w0, [sp, #112]
  40a2c4:	add	x0, sp, #0x68
  40a2c8:	bl	409fdc <nftw@plt+0x72ec>
  40a2cc:	ldr	x0, [x19, #120]
  40a2d0:	cbz	x0, 40a324 <nftw@plt+0x7634>
  40a2d4:	ldr	w1, [x0, #4]
  40a2d8:	cmp	w21, w1
  40a2dc:	b.cs	40a324 <nftw@plt+0x7634>  // b.hs, b.nlast
  40a2e0:	umaddl	x0, w21, w23, x0
  40a2e4:	ldr	w1, [x0, #8]
  40a2e8:	ldr	w0, [x0, #16]
  40a2ec:	cmp	w1, w0
  40a2f0:	b.ls	40a30c <nftw@plt+0x761c>  // b.plast
  40a2f4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a2f8:	mov	w1, #0x4a4                 	// #1188
  40a2fc:	add	x2, x2, #0x56e
  40a300:	b	40a280 <nftw@plt+0x7590>
  40a304:	mov	w1, #0x0                   	// #0
  40a308:	b	40a298 <nftw@plt+0x75a8>
  40a30c:	add	w21, w21, #0x1
  40a310:	stp	w1, w0, [sp, #112]
  40a314:	add	x1, sp, #0x70
  40a318:	add	x0, sp, #0x68
  40a31c:	bl	409fdc <nftw@plt+0x72ec>
  40a320:	b	40a2cc <nftw@plt+0x75dc>
  40a324:	mov	w23, #0x0                   	// #0
  40a328:	ldr	x0, [x19, #128]
  40a32c:	cbz	x0, 40a3c4 <nftw@plt+0x76d4>
  40a330:	ldr	w1, [x0, #4]
  40a334:	cmp	w1, w23
  40a338:	b.ls	40a3c4 <nftw@plt+0x76d4>  // b.plast
  40a33c:	add	x0, x0, w23, uxtw #3
  40a340:	ldr	x24, [x0, #8]
  40a344:	cbnz	x24, 40a358 <nftw@plt+0x7668>
  40a348:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a34c:	mov	w1, #0x4ad                 	// #1197
  40a350:	add	x2, x2, #0x56e
  40a354:	b	40a280 <nftw@plt+0x7590>
  40a358:	ldr	w0, [x24]
  40a35c:	add	x8, sp, #0x70
  40a360:	bl	411644 <nftw@plt+0xe954>
  40a364:	ldr	w21, [sp, #120]
  40a368:	mov	x0, x24
  40a36c:	bl	427b00 <nftw@plt+0x24e10>
  40a370:	tst	w0, #0xff
  40a374:	b.eq	40a384 <nftw@plt+0x7694>  // b.none
  40a378:	cmp	w21, #0x1
  40a37c:	cset	w0, gt
  40a380:	sub	w21, w21, w0
  40a384:	ldr	w0, [x24, #4]
  40a388:	add	x8, sp, #0x70
  40a38c:	bl	411644 <nftw@plt+0xe954>
  40a390:	ldr	w0, [sp, #120]
  40a394:	cmp	w21, w0
  40a398:	b.ls	40a3ac <nftw@plt+0x76bc>  // b.plast
  40a39c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a3a0:	mov	w1, #0xa5                  	// #165
  40a3a4:	add	x2, x2, #0x583
  40a3a8:	b	40a280 <nftw@plt+0x7590>
  40a3ac:	add	x1, sp, #0x70
  40a3b0:	add	w23, w23, #0x1
  40a3b4:	stp	w21, w0, [sp, #112]
  40a3b8:	add	x0, sp, #0x68
  40a3bc:	bl	409fdc <nftw@plt+0x72ec>
  40a3c0:	b	40a328 <nftw@plt+0x7638>
  40a3c4:	ldr	x0, [sp, #104]
  40a3c8:	cbz	x0, 40a3f0 <nftw@plt+0x7700>
  40a3cc:	ldr	w1, [x0, #4]
  40a3d0:	cmp	w1, #0x1
  40a3d4:	b.ls	40a3f0 <nftw@plt+0x7700>  // b.plast
  40a3d8:	adrp	x3, 409000 <nftw@plt+0x6310>
  40a3dc:	mov	x2, #0x8                   	// #8
  40a3e0:	add	x3, x3, #0xaa8
  40a3e4:	mov	w1, w1
  40a3e8:	add	x0, x0, x2
  40a3ec:	bl	413e78 <nftw@plt+0x11188>
  40a3f0:	ldr	x1, [sp, #104]
  40a3f4:	cbz	x1, 40a400 <nftw@plt+0x7710>
  40a3f8:	ldr	w0, [x1, #4]
  40a3fc:	cbnz	w0, 40a410 <nftw@plt+0x7720>
  40a400:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a404:	mov	w1, #0x4b6                 	// #1206
  40a408:	add	x2, x2, #0x56e
  40a40c:	b	40a280 <nftw@plt+0x7590>
  40a410:	mov	w21, #0x1                   	// #1
  40a414:	add	x1, x1, #0x8
  40a418:	mov	x0, x22
  40a41c:	bl	409fdc <nftw@plt+0x72ec>
  40a420:	ldr	x3, [sp, #104]
  40a424:	ldr	x0, [x19, #136]
  40a428:	cbz	x3, 40a4c0 <nftw@plt+0x77d0>
  40a42c:	ldr	w1, [x3, #4]
  40a430:	cmp	w1, w21
  40a434:	b.ls	40a4c0 <nftw@plt+0x77d0>  // b.plast
  40a438:	cbz	x0, 40a470 <nftw@plt+0x7780>
  40a43c:	ldr	w2, [x0, #4]
  40a440:	sub	w2, w2, #0x1
  40a444:	add	x5, x3, w21, uxtw #3
  40a448:	mov	w1, w21
  40a44c:	add	x0, x0, x2, lsl #3
  40a450:	ldr	w6, [x5, #8]
  40a454:	ldr	w2, [x0, #8]
  40a458:	cmp	w6, w2
  40a45c:	b.cs	40a478 <nftw@plt+0x7788>  // b.hs, b.nlast
  40a460:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a464:	mov	w1, #0x4bc                 	// #1212
  40a468:	add	x2, x2, #0x56e
  40a46c:	b	40a280 <nftw@plt+0x7590>
  40a470:	mov	w2, #0x0                   	// #0
  40a474:	b	40a440 <nftw@plt+0x7750>
  40a478:	ldr	w4, [x0, #12]
  40a47c:	ldrb	w7, [x19, #114]
  40a480:	mov	w2, w4
  40a484:	add	x2, x2, #0x1
  40a488:	add	x2, x2, x7
  40a48c:	cmp	x2, w6, uxtw
  40a490:	b.lt	40a4ac <nftw@plt+0x77bc>  // b.tstop
  40a494:	ldr	w1, [x5, #12]
  40a498:	cmp	w4, w1
  40a49c:	b.cs	40a4a4 <nftw@plt+0x77b4>  // b.hs, b.nlast
  40a4a0:	str	w1, [x0, #12]
  40a4a4:	add	w21, w21, #0x1
  40a4a8:	b	40a420 <nftw@plt+0x7730>
  40a4ac:	add	x1, x1, #0x1
  40a4b0:	mov	x0, x22
  40a4b4:	add	x1, x3, x1, lsl #3
  40a4b8:	bl	409fdc <nftw@plt+0x72ec>
  40a4bc:	b	40a4a4 <nftw@plt+0x77b4>
  40a4c0:	cbz	x0, 40a4f8 <nftw@plt+0x7808>
  40a4c4:	ldr	w4, [x0, #4]
  40a4c8:	cbz	w4, 40a4f8 <nftw@plt+0x7808>
  40a4cc:	add	x0, x0, #0x8
  40a4d0:	mov	w2, #0x1                   	// #1
  40a4d4:	cmp	w4, w2
  40a4d8:	b.eq	40a564 <nftw@plt+0x7874>  // b.none
  40a4dc:	ldp	w5, w1, [x0]
  40a4e0:	cmp	w5, w1
  40a4e4:	b.ls	40a508 <nftw@plt+0x7818>  // b.plast
  40a4e8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a4ec:	mov	w1, #0x4d3                 	// #1235
  40a4f0:	add	x2, x2, #0x56e
  40a4f4:	b	40a280 <nftw@plt+0x7590>
  40a4f8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a4fc:	mov	w1, #0x4cd                 	// #1229
  40a500:	add	x2, x2, #0x56e
  40a504:	b	40a280 <nftw@plt+0x7590>
  40a508:	ldp	w3, w6, [x0, #8]
  40a50c:	cmp	w3, w6
  40a510:	b.ls	40a524 <nftw@plt+0x7834>  // b.plast
  40a514:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a518:	mov	w1, #0x4d4                 	// #1236
  40a51c:	add	x2, x2, #0x56e
  40a520:	b	40a280 <nftw@plt+0x7590>
  40a524:	cmp	w5, w3
  40a528:	b.cc	40a53c <nftw@plt+0x784c>  // b.lo, b.ul, b.last
  40a52c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a530:	mov	w1, #0x4d6                 	// #1238
  40a534:	add	x2, x2, #0x56e
  40a538:	b	40a280 <nftw@plt+0x7590>
  40a53c:	add	w1, w1, #0x1
  40a540:	add	x0, x0, #0x8
  40a544:	cmp	w3, w1
  40a548:	b.hi	40a55c <nftw@plt+0x786c>  // b.pmore
  40a54c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a550:	mov	w1, #0x4d8                 	// #1240
  40a554:	add	x2, x2, #0x56e
  40a558:	b	40a280 <nftw@plt+0x7590>
  40a55c:	add	w2, w2, #0x1
  40a560:	b	40a4d4 <nftw@plt+0x77e4>
  40a564:	add	x0, sp, #0x68
  40a568:	bl	4093e0 <nftw@plt+0x66f0>
  40a56c:	ldr	x1, [x19, #136]
  40a570:	cbz	x1, 40a57c <nftw@plt+0x788c>
  40a574:	ldr	w0, [x1, #4]
  40a578:	cbnz	w0, 40a58c <nftw@plt+0x789c>
  40a57c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a580:	mov	w1, #0x36a                 	// #874
  40a584:	add	x2, x2, #0x58d
  40a588:	b	40a280 <nftw@plt+0x7590>
  40a58c:	sub	w0, w0, #0x1
  40a590:	add	x0, x1, x0, lsl #3
  40a594:	ldr	w0, [x0, #12]
  40a598:	cmp	w0, #0x0
  40a59c:	csel	w0, w0, wzr, ge  // ge = tcont
  40a5a0:	bl	408790 <nftw@plt+0x5aa0>
  40a5a4:	str	w0, [x19, #144]
  40a5a8:	ldr	x1, [x19, #136]
  40a5ac:	cbz	x1, 40a5cc <nftw@plt+0x78dc>
  40a5b0:	ldr	w1, [x1, #4]
  40a5b4:	cmp	w1, #0x1
  40a5b8:	b.ls	40a5cc <nftw@plt+0x78dc>  // b.plast
  40a5bc:	cmp	w0, #0x3
  40a5c0:	mov	w1, #0x3                   	// #3
  40a5c4:	csel	w0, w0, w1, ge  // ge = tcont
  40a5c8:	str	w0, [x19, #144]
  40a5cc:	ldr	w0, [x19, #144]
  40a5d0:	ldr	w1, [x20, #224]
  40a5d4:	cmp	w1, w0
  40a5d8:	b.le	40a5e0 <nftw@plt+0x78f0>
  40a5dc:	sub	w0, w1, #0x1
  40a5e0:	str	w0, [x19, #144]
  40a5e4:	ldr	x0, [x19]
  40a5e8:	ldr	w1, [x19, #32]
  40a5ec:	ldrsw	x21, [x0, #112]
  40a5f0:	ldr	x0, [x19, #24]
  40a5f4:	bl	412230 <nftw@plt+0xf540>
  40a5f8:	cbz	x0, 40a660 <nftw@plt+0x7970>
  40a5fc:	ldrsw	x0, [x19, #36]
  40a600:	cmp	x1, x0
  40a604:	b.cc	40a660 <nftw@plt+0x7970>  // b.lo, b.ul, b.last
  40a608:	ldrb	w2, [x19, #114]
  40a60c:	cbz	w2, 40a61c <nftw@plt+0x792c>
  40a610:	ldr	w2, [x19, #144]
  40a614:	add	w2, w2, #0x2
  40a618:	add	x0, x0, w2, sxtw
  40a61c:	sub	x2, x1, x0
  40a620:	mov	x3, #0xa                   	// #10
  40a624:	cmp	x2, #0xa
  40a628:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  40a62c:	cmp	x1, x21
  40a630:	b.cc	40a648 <nftw@plt+0x7958>  // b.lo, b.ul, b.last
  40a634:	sub	x2, x21, x2
  40a638:	cmp	x0, x2
  40a63c:	b.ls	40a648 <nftw@plt+0x7958>  // b.plast
  40a640:	sub	w0, w0, w2
  40a644:	str	w0, [x19, #148]
  40a648:	ldr	w0, [x19, #148]
  40a64c:	tbz	w0, #31, 40a660 <nftw@plt+0x7970>
  40a650:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a654:	mov	w1, #0x386                 	// #902
  40a658:	add	x2, x2, #0x58d
  40a65c:	b	40a280 <nftw@plt+0x7590>
  40a660:	ldrb	w0, [x20, #228]
  40a664:	cbz	w0, 40a78c <nftw@plt+0x7a9c>
  40a668:	ldr	w0, [x19, #148]
  40a66c:	add	w21, w0, w21
  40a670:	cmp	w21, #0x63
  40a674:	b.le	40a6e0 <nftw@plt+0x79f0>
  40a678:	mov	x0, x19
  40a67c:	mov	w1, #0x20                  	// #32
  40a680:	bl	4095ac <nftw@plt+0x68bc>
  40a684:	mov	w22, #0xa                   	// #10
  40a688:	ldr	x0, [x19, #8]
  40a68c:	mov	w1, #0x20                  	// #32
  40a690:	mov	w23, #0x64                  	// #100
  40a694:	bl	40da7c <nftw@plt+0xad8c>
  40a698:	ldr	w20, [x19, #148]
  40a69c:	add	w20, w20, #0x1
  40a6a0:	cmp	w21, w20
  40a6a4:	ldr	x0, [x19, #8]
  40a6a8:	b.lt	40a6dc <nftw@plt+0x79ec>  // b.tstop
  40a6ac:	sdiv	w1, w20, w22
  40a6b0:	msub	w1, w1, w22, w20
  40a6b4:	cbnz	w1, 40a6d4 <nftw@plt+0x79e4>
  40a6b8:	sdiv	w2, w20, w23
  40a6bc:	sdiv	w1, w2, w22
  40a6c0:	msub	w1, w1, w22, w2
  40a6c4:	add	w1, w1, #0x30
  40a6c8:	add	w20, w20, #0x1
  40a6cc:	bl	40da7c <nftw@plt+0xad8c>
  40a6d0:	b	40a6a0 <nftw@plt+0x79b0>
  40a6d4:	mov	w1, #0x20                  	// #32
  40a6d8:	b	40a6c8 <nftw@plt+0x79d8>
  40a6dc:	bl	40da20 <nftw@plt+0xad30>
  40a6e0:	mov	x0, x19
  40a6e4:	mov	w1, #0x20                  	// #32
  40a6e8:	bl	4095ac <nftw@plt+0x68bc>
  40a6ec:	mov	w22, #0xa                   	// #10
  40a6f0:	ldr	x0, [x19, #8]
  40a6f4:	mov	w1, #0x20                  	// #32
  40a6f8:	bl	40da7c <nftw@plt+0xad8c>
  40a6fc:	ldr	w20, [x19, #148]
  40a700:	add	w20, w20, #0x1
  40a704:	cmp	w21, w20
  40a708:	ldr	x0, [x19, #8]
  40a70c:	b.lt	40a73c <nftw@plt+0x7a4c>  // b.tstop
  40a710:	sdiv	w2, w20, w22
  40a714:	msub	w1, w2, w22, w20
  40a718:	cbnz	w1, 40a734 <nftw@plt+0x7a44>
  40a71c:	sdiv	w1, w2, w22
  40a720:	msub	w1, w1, w22, w2
  40a724:	add	w1, w1, #0x30
  40a728:	add	w20, w20, #0x1
  40a72c:	bl	40da7c <nftw@plt+0xad8c>
  40a730:	b	40a704 <nftw@plt+0x7a14>
  40a734:	mov	w1, #0x20                  	// #32
  40a738:	b	40a728 <nftw@plt+0x7a38>
  40a73c:	bl	40da20 <nftw@plt+0xad30>
  40a740:	mov	w22, #0xa                   	// #10
  40a744:	mov	x0, x19
  40a748:	mov	w1, #0x20                  	// #32
  40a74c:	bl	4095ac <nftw@plt+0x68bc>
  40a750:	ldr	x0, [x19, #8]
  40a754:	mov	w1, #0x20                  	// #32
  40a758:	bl	40da7c <nftw@plt+0xad8c>
  40a75c:	ldr	w20, [x19, #148]
  40a760:	add	w20, w20, #0x1
  40a764:	cmp	w21, w20
  40a768:	ldr	x0, [x19, #8]
  40a76c:	b.lt	40a788 <nftw@plt+0x7a98>  // b.tstop
  40a770:	sdiv	w1, w20, w22
  40a774:	msub	w1, w1, w22, w20
  40a778:	add	w20, w20, #0x1
  40a77c:	add	w1, w1, #0x30
  40a780:	bl	40da7c <nftw@plt+0xad8c>
  40a784:	b	40a764 <nftw@plt+0x7a74>
  40a788:	bl	40da20 <nftw@plt+0xad30>
  40a78c:	ldp	x19, x20, [sp, #16]
  40a790:	ldp	x21, x22, [sp, #32]
  40a794:	ldp	x23, x24, [sp, #48]
  40a798:	ldp	x25, x26, [sp, #64]
  40a79c:	ldr	x27, [sp, #80]
  40a7a0:	ldp	x29, x30, [sp], #144
  40a7a4:	ret
  40a7a8:	stp	x29, x30, [sp, #-224]!
  40a7ac:	mov	x2, x0
  40a7b0:	mov	w3, #0x4                   	// #4
  40a7b4:	mov	x29, sp
  40a7b8:	stp	x19, x20, [sp, #16]
  40a7bc:	mov	x20, x0
  40a7c0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40a7c4:	stp	x21, x22, [sp, #32]
  40a7c8:	mov	w21, w1
  40a7cc:	mov	w22, #0x1                   	// #1
  40a7d0:	ldr	x1, [x0, #944]
  40a7d4:	add	x0, sp, #0x48
  40a7d8:	bl	40a02c <nftw@plt+0x733c>
  40a7dc:	stp	w21, w22, [sp, #56]
  40a7e0:	mov	w3, w22
  40a7e4:	add	x1, sp, #0x38
  40a7e8:	add	x0, sp, #0x48
  40a7ec:	mov	w2, #0x0                   	// #0
  40a7f0:	bl	409cb0 <nftw@plt+0x6fc0>
  40a7f4:	mov	w19, w0
  40a7f8:	tst	w0, #0xff
  40a7fc:	b.eq	40a814 <nftw@plt+0x7b24>  // b.none
  40a800:	mov	w2, w22
  40a804:	mov	w1, w21
  40a808:	mov	x0, x20
  40a80c:	mov	x3, #0x0                   	// #0
  40a810:	bl	427730 <nftw@plt+0x24a40>
  40a814:	add	x0, sp, #0x48
  40a818:	bl	409b24 <nftw@plt+0x6e34>
  40a81c:	mov	w0, w19
  40a820:	ldp	x19, x20, [sp, #16]
  40a824:	ldp	x21, x22, [sp, #32]
  40a828:	ldp	x29, x30, [sp], #224
  40a82c:	ret
  40a830:	stp	x29, x30, [sp, #-464]!
  40a834:	mov	x29, sp
  40a838:	stp	x19, x20, [sp, #16]
  40a83c:	mov	x20, x0
  40a840:	ldr	x0, [x0]
  40a844:	stp	x21, x22, [sp, #32]
  40a848:	mov	x21, x1
  40a84c:	mov	w22, w2
  40a850:	stp	x23, x24, [sp, #48]
  40a854:	stp	x25, x26, [sp, #64]
  40a858:	stp	x27, x28, [sp, #80]
  40a85c:	bl	40da20 <nftw@plt+0xad30>
  40a860:	mov	w1, #0x0                   	// #0
  40a864:	mov	x0, x21
  40a868:	bl	42761c <nftw@plt+0x2492c>
  40a86c:	ldrb	w1, [x20, #108]
  40a870:	cbz	w1, 40b8b0 <nftw@plt+0x8bc0>
  40a874:	cmp	w0, #0x1
  40a878:	b.ls	40b8b0 <nftw@plt+0x8bc0>  // b.plast
  40a87c:	ldr	w1, [x20, #200]
  40a880:	cmp	w1, w0
  40a884:	b.ne	40a890 <nftw@plt+0x7ba0>  // b.any
  40a888:	ldr	w1, [x21, #120]
  40a88c:	cbz	w1, 40b8b0 <nftw@plt+0x8bc0>
  40a890:	str	w0, [x20, #200]
  40a894:	add	x19, sp, #0x138
  40a898:	ldr	x0, [x20]
  40a89c:	add	x26, x19, #0x38
  40a8a0:	bl	40d770 <nftw@plt+0xaa80>
  40a8a4:	str	x0, [sp, #136]
  40a8a8:	ldr	x0, [x20]
  40a8ac:	mov	x1, #0x0                   	// #0
  40a8b0:	bl	40d734 <nftw@plt+0xaa44>
  40a8b4:	mov	x2, x21
  40a8b8:	mov	x21, #0x0                   	// #0
  40a8bc:	mov	w3, w22
  40a8c0:	mov	x1, x20
  40a8c4:	mov	x0, x19
  40a8c8:	bl	40a02c <nftw@plt+0x733c>
  40a8cc:	ldr	x24, [sp, #448]
  40a8d0:	cbz	x24, 40b89c <nftw@plt+0x8bac>
  40a8d4:	ldr	w0, [x24, #4]
  40a8d8:	cmp	w0, w21
  40a8dc:	b.le	40b89c <nftw@plt+0x8bac>
  40a8e0:	add	x0, x21, #0x1
  40a8e4:	str	x0, [sp, #168]
  40a8e8:	lsl	x22, x0, #3
  40a8ec:	add	x23, x24, x0, lsl #3
  40a8f0:	ldrb	w0, [x20, #223]
  40a8f4:	cbz	w0, 40a9cc <nftw@plt+0x7cdc>
  40a8f8:	cbz	w21, 40a944 <nftw@plt+0x7c54>
  40a8fc:	ldrb	w0, [sp, #426]
  40a900:	cbnz	w0, 40a91c <nftw@plt+0x7c2c>
  40a904:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a908:	add	x2, x2, #0x594
  40a90c:	mov	w1, #0x408                 	// #1032
  40a910:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a914:	add	x0, x0, #0x50b
  40a918:	bl	402d60 <nftw@plt+0x70>
  40a91c:	mov	w21, #0x0                   	// #0
  40a920:	ldr	w1, [sp, #456]
  40a924:	ldr	x0, [sp, #320]
  40a928:	cmp	w1, w21
  40a92c:	b.lt	40a940 <nftw@plt+0x7c50>  // b.tstop
  40a930:	mov	w1, #0x2e                  	// #46
  40a934:	add	w21, w21, #0x1
  40a938:	bl	40da7c <nftw@plt+0xad8c>
  40a93c:	b	40a920 <nftw@plt+0x7c30>
  40a940:	bl	40da20 <nftw@plt+0xad30>
  40a944:	ldr	w0, [x23, #4]
  40a948:	ldr	w23, [x24, x22]
  40a94c:	str	x0, [sp, #144]
  40a950:	ldr	x0, [sp, #144]
  40a954:	cmp	x23, x0
  40a958:	b.gt	40b894 <nftw@plt+0x8ba4>
  40a95c:	ldr	x0, [sp, #336]
  40a960:	mov	w1, w23
  40a964:	mov	w21, w23
  40a968:	mov	w27, w23
  40a96c:	bl	412230 <nftw@plt+0xf540>
  40a970:	str	x1, [sp, #96]
  40a974:	mov	x22, x0
  40a978:	cbz	x0, 40b858 <nftw@plt+0x8b68>
  40a97c:	add	x25, x19, #0x38
  40a980:	mov	w24, #0x0                   	// #0
  40a984:	ldr	x0, [sp, #440]
  40a988:	cbz	x0, 40aba4 <nftw@plt+0x7eb4>
  40a98c:	ldr	w1, [x0, #4]
  40a990:	cmp	w1, w24
  40a994:	b.ls	40aba4 <nftw@plt+0x7eb4>  // b.plast
  40a998:	add	x0, x0, w24, uxtw #3
  40a99c:	ldr	x28, [x0, #8]
  40a9a0:	mov	x0, x28
  40a9a4:	bl	427b00 <nftw@plt+0x24e10>
  40a9a8:	tst	w0, #0xff
  40a9ac:	b.eq	40ab9c <nftw@plt+0x7eac>  // b.none
  40a9b0:	ldp	w1, w0, [x28]
  40a9b4:	cmp	w1, w0
  40a9b8:	b.eq	40ab14 <nftw@plt+0x7e24>  // b.none
  40a9bc:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40a9c0:	mov	w1, #0x638                 	// #1592
  40a9c4:	add	x2, x2, #0x5c6
  40a9c8:	b	40a910 <nftw@plt+0x7c20>
  40a9cc:	ldr	w0, [sp, #344]
  40a9d0:	cmp	w21, #0x0
  40a9d4:	b.gt	40a9e4 <nftw@plt+0x7cf4>
  40a9d8:	ldr	w1, [x24, #12]
  40a9dc:	cmp	w1, w0
  40a9e0:	b.ge	40a944 <nftw@plt+0x7c54>  // b.tcont
  40a9e4:	add	x21, x24, x21, lsl #3
  40a9e8:	ldr	w4, [x21, #8]
  40a9ec:	cmp	w0, w4
  40a9f0:	b.cc	40aa14 <nftw@plt+0x7d24>  // b.lo, b.ul, b.last
  40a9f4:	ldr	w1, [x21, #12]
  40a9f8:	cmp	w0, w1
  40a9fc:	b.hi	40aa14 <nftw@plt+0x7d24>  // b.pmore
  40aa00:	ldp	x0, x1, [sp, #336]
  40aa04:	stp	x0, x1, [sp, #240]
  40aa08:	ldp	x0, x1, [sp, #352]
  40aa0c:	stp	x0, x1, [sp, #256]
  40aa10:	b	40aa80 <nftw@plt+0x7d90>
  40aa14:	ldr	x3, [sp, #432]
  40aa18:	mov	w1, #0x0                   	// #0
  40aa1c:	mov	x5, #0x28                  	// #40
  40aa20:	cbz	x3, 40aaa4 <nftw@plt+0x7db4>
  40aa24:	ldr	w0, [x3, #4]
  40aa28:	cmp	w1, w0
  40aa2c:	b.cs	40aaa4 <nftw@plt+0x7db4>  // b.hs, b.nlast
  40aa30:	mov	w0, w1
  40aa34:	madd	x0, x0, x5, x3
  40aa38:	ldr	w2, [x0, #8]
  40aa3c:	cmp	w2, w4
  40aa40:	b.cc	40aa50 <nftw@plt+0x7d60>  // b.lo, b.ul, b.last
  40aa44:	ldr	w6, [x21, #12]
  40aa48:	cmp	w2, w6
  40aa4c:	b.ls	40aa58 <nftw@plt+0x7d68>  // b.plast
  40aa50:	add	w1, w1, #0x1
  40aa54:	b	40aa20 <nftw@plt+0x7d30>
  40aa58:	ldp	x4, x5, [sp, #336]
  40aa5c:	stp	x4, x5, [sp, #272]
  40aa60:	ldr	w0, [x0, #12]
  40aa64:	str	w2, [sp, #280]
  40aa68:	str	w0, [sp, #284]
  40aa6c:	ldp	x4, x5, [sp, #352]
  40aa70:	stp	x4, x5, [sp, #256]
  40aa74:	ldp	x0, x1, [sp, #272]
  40aa78:	stp	x0, x1, [sp, #240]
  40aa7c:	stp	x4, x5, [sp, #288]
  40aa80:	ldp	x0, x1, [sp, #240]
  40aa84:	stp	x0, x1, [sp, #208]
  40aa88:	ldp	x0, x1, [sp, #256]
  40aa8c:	stp	x0, x1, [sp, #224]
  40aa90:	ldr	x2, [x20, #144]
  40aa94:	add	x1, sp, #0xd0
  40aa98:	mov	x0, x20
  40aa9c:	blr	x2
  40aaa0:	b	40a944 <nftw@plt+0x7c54>
  40aaa4:	mov	w25, #0x0                   	// #0
  40aaa8:	ldr	x0, [sp, #440]
  40aaac:	cbz	x0, 40ab04 <nftw@plt+0x7e14>
  40aab0:	ldr	w1, [x0, #4]
  40aab4:	cmp	w1, w25
  40aab8:	b.ls	40ab04 <nftw@plt+0x7e14>  // b.plast
  40aabc:	add	x0, x0, w25, uxtw #3
  40aac0:	add	x8, sp, #0x110
  40aac4:	ldr	x0, [x0, #8]
  40aac8:	ldr	w0, [x0]
  40aacc:	bl	411644 <nftw@plt+0xe954>
  40aad0:	ldr	w1, [x21, #8]
  40aad4:	ldr	w0, [sp, #280]
  40aad8:	cmp	w0, w1
  40aadc:	b.cc	40aaec <nftw@plt+0x7dfc>  // b.lo, b.ul, b.last
  40aae0:	ldr	w1, [x21, #12]
  40aae4:	cmp	w0, w1
  40aae8:	b.ls	40aaf4 <nftw@plt+0x7e04>  // b.plast
  40aaec:	add	w25, w25, #0x1
  40aaf0:	b	40aaa8 <nftw@plt+0x7db8>
  40aaf4:	ldp	x0, x1, [sp, #272]
  40aaf8:	stp	x0, x1, [sp, #240]
  40aafc:	ldp	x0, x1, [sp, #288]
  40ab00:	b	40aa0c <nftw@plt+0x7d1c>
  40ab04:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ab08:	mov	w1, #0x449                 	// #1097
  40ab0c:	add	x2, x2, #0x5b0
  40ab10:	b	40a910 <nftw@plt+0x7c20>
  40ab14:	ldr	x1, [sp, #336]
  40ab18:	mov	w2, w27
  40ab1c:	mov	x0, x28
  40ab20:	bl	4279f4 <nftw@plt+0x24d04>
  40ab24:	tst	w0, #0xff
  40ab28:	b.eq	40ab9c <nftw@plt+0x7eac>  // b.none
  40ab2c:	mov	x0, x25
  40ab30:	bl	40975c <nftw@plt+0x6a6c>
  40ab34:	mov	x0, x19
  40ab38:	mov	w1, #0x2b                  	// #43
  40ab3c:	bl	4095ac <nftw@plt+0x68bc>
  40ab40:	ldr	x0, [sp, #320]
  40ab44:	mov	w1, #0x2b                  	// #43
  40ab48:	bl	40da7c <nftw@plt+0xad8c>
  40ab4c:	mov	x0, x25
  40ab50:	mov	w1, #0xfffffffe            	// #-2
  40ab54:	bl	40963c <nftw@plt+0x694c>
  40ab58:	mov	x2, #0x0                   	// #0
  40ab5c:	ldr	x0, [x28, #16]
  40ab60:	sub	x0, x0, #0x1
  40ab64:	cmp	x0, x2
  40ab68:	b.ls	40ab8c <nftw@plt+0x7e9c>  // b.plast
  40ab6c:	ldr	x0, [x28, #8]
  40ab70:	str	x2, [sp, #104]
  40ab74:	ldrb	w1, [x0, x2]
  40ab78:	ldr	x0, [sp, #320]
  40ab7c:	bl	40da7c <nftw@plt+0xad8c>
  40ab80:	ldr	x2, [sp, #104]
  40ab84:	add	x2, x2, #0x1
  40ab88:	b	40ab5c <nftw@plt+0x7e6c>
  40ab8c:	mov	x0, x25
  40ab90:	bl	40975c <nftw@plt+0x6a6c>
  40ab94:	ldr	x0, [sp, #320]
  40ab98:	bl	40da20 <nftw@plt+0xad30>
  40ab9c:	add	w24, w24, #0x1
  40aba0:	b	40a984 <nftw@plt+0x7c94>
  40aba4:	add	x0, x19, #0x38
  40aba8:	bl	40975c <nftw@plt+0x6a6c>
  40abac:	ldrsw	x28, [sp, #96]
  40abb0:	sub	x2, x22, #0x1
  40abb4:	str	w28, [sp, #104]
  40abb8:	cmp	w28, #0x0
  40abbc:	b.le	40ac04 <nftw@plt+0x7f14>
  40abc0:	ldrb	w0, [x2, x28]
  40abc4:	sub	x28, x28, #0x1
  40abc8:	and	w1, w0, #0xfffffffb
  40abcc:	cmp	w0, #0x20
  40abd0:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  40abd4:	b.eq	40abb4 <nftw@plt+0x7ec4>  // b.none
  40abd8:	ldr	w0, [sp, #104]
  40abdc:	add	x0, x22, w0, sxtw
  40abe0:	ldurb	w0, [x0, #-1]
  40abe4:	and	w1, w0, #0xfffffffb
  40abe8:	cmp	w0, #0x20
  40abec:	ccmp	w1, #0x9, #0x4, ne  // ne = any
  40abf0:	b.ne	40ac24 <nftw@plt+0x7f34>  // b.any
  40abf4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40abf8:	mov	w1, #0x2bb                 	// #699
  40abfc:	add	x2, x2, #0x5db
  40ac00:	b	40a910 <nftw@plt+0x7c20>
  40ac04:	ldr	w0, [sp, #104]
  40ac08:	cmp	w0, #0x0
  40ac0c:	b.ge	40ac20 <nftw@plt+0x7f30>  // b.tcont
  40ac10:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ac14:	mov	w1, #0x2b9                 	// #697
  40ac18:	add	x2, x2, #0x5db
  40ac1c:	b	40a910 <nftw@plt+0x7c20>
  40ac20:	b.ne	40abd8 <nftw@plt+0x7ee8>  // b.any
  40ac24:	ldrsw	x0, [sp, #460]
  40ac28:	add	x0, x22, x0
  40ac2c:	str	x0, [sp, #96]
  40ac30:	ldrb	w0, [sp, #426]
  40ac34:	cbz	w0, 40ad1c <nftw@plt+0x802c>
  40ac38:	mov	w0, w27
  40ac3c:	bl	408790 <nftw@plt+0x5aa0>
  40ac40:	mov	w25, w0
  40ac44:	mov	w22, #0x0                   	// #0
  40ac48:	ldr	w1, [sp, #456]
  40ac4c:	ldr	x0, [sp, #320]
  40ac50:	sub	w1, w1, w25
  40ac54:	cmp	w1, w22
  40ac58:	b.le	40ac6c <nftw@plt+0x7f7c>
  40ac5c:	mov	w1, #0x20                  	// #32
  40ac60:	add	w22, w22, #0x1
  40ac64:	bl	40da7c <nftw@plt+0xad8c>
  40ac68:	b	40ac48 <nftw@plt+0x7f58>
  40ac6c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ac70:	mov	w2, w21
  40ac74:	add	x1, x1, #0x606
  40ac78:	bl	40f470 <nftw@plt+0xc780>
  40ac7c:	ldr	w2, [sp, #460]
  40ac80:	add	x22, x19, #0x38
  40ac84:	mov	w25, #0x0                   	// #0
  40ac88:	mov	w28, #0x7fffffff            	// #2147483647
  40ac8c:	add	w24, w2, #0x1
  40ac90:	ldr	w0, [sp, #104]
  40ac94:	cmp	w24, w0
  40ac98:	b.gt	40ad40 <nftw@plt+0x8050>
  40ac9c:	ldrb	w0, [sp, #424]
  40aca0:	cbz	w0, 40acd4 <nftw@plt+0x7fe4>
  40aca4:	add	x5, sp, #0x110
  40aca8:	mov	w2, w24
  40acac:	mov	w1, w21
  40acb0:	mov	x0, x19
  40acb4:	mov	w4, #0x7fffffff            	// #2147483647
  40acb8:	mov	w3, #0x0                   	// #0
  40acbc:	bl	4098e4 <nftw@plt+0x6bf4>
  40acc0:	tst	w0, #0xff
  40acc4:	b.eq	40ad2c <nftw@plt+0x803c>  // b.none
  40acc8:	ldr	w1, [sp, #272]
  40accc:	mov	x0, x22
  40acd0:	bl	40963c <nftw@plt+0x694c>
  40acd4:	ldr	x0, [sp, #96]
  40acd8:	ldrb	w1, [x0]
  40acdc:	ands	w3, w1, #0xffffffdf
  40ace0:	and	w0, w1, #0xfffffffb
  40ace4:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  40ace8:	b.eq	40ad38 <nftw@plt+0x8048>  // b.none
  40acec:	mov	w0, #0x7fffffff            	// #2147483647
  40acf0:	mov	w25, w24
  40acf4:	cmp	w28, w0
  40acf8:	b.ne	40ad00 <nftw@plt+0x8010>  // b.any
  40acfc:	mov	w28, w24
  40ad00:	ldr	x0, [sp, #320]
  40ad04:	add	w24, w24, #0x1
  40ad08:	bl	40da7c <nftw@plt+0xad8c>
  40ad0c:	ldr	x0, [sp, #96]
  40ad10:	add	x0, x0, #0x1
  40ad14:	str	x0, [sp, #96]
  40ad18:	b	40ac90 <nftw@plt+0x7fa0>
  40ad1c:	ldr	x0, [sp, #320]
  40ad20:	mov	w1, #0x20                  	// #32
  40ad24:	bl	40da7c <nftw@plt+0xad8c>
  40ad28:	b	40ac7c <nftw@plt+0x7f8c>
  40ad2c:	mov	x0, x22
  40ad30:	bl	40975c <nftw@plt+0x6a6c>
  40ad34:	b	40acd4 <nftw@plt+0x7fe4>
  40ad38:	mov	w1, #0x20                  	// #32
  40ad3c:	b	40ad00 <nftw@plt+0x8010>
  40ad40:	mov	x0, x19
  40ad44:	bl	409764 <nftw@plt+0x6a74>
  40ad48:	ldr	x3, [sp, #432]
  40ad4c:	mov	w2, #0x0                   	// #0
  40ad50:	add	x0, x3, #0x8
  40ad54:	mov	x1, x0
  40ad58:	cbz	x3, 40aec0 <nftw@plt+0x81d0>
  40ad5c:	ldr	w4, [x3, #4]
  40ad60:	cmp	w4, w2
  40ad64:	b.ls	40aec0 <nftw@plt+0x81d0>  // b.plast
  40ad68:	ldr	w5, [x1, #16]
  40ad6c:	cmp	w5, #0x2
  40ad70:	b.eq	40aec0 <nftw@plt+0x81d0>  // b.none
  40ad74:	ldr	w6, [x1]
  40ad78:	ldr	w5, [x1, #8]
  40ad7c:	cmp	w6, w5
  40ad80:	b.ls	40ad94 <nftw@plt+0x80a4>  // b.plast
  40ad84:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ad88:	mov	w1, #0x215                 	// #533
  40ad8c:	add	x2, x2, #0x60c
  40ad90:	b	40a910 <nftw@plt+0x7c20>
  40ad94:	cmp	w6, w21
  40ad98:	b.hi	40ae7c <nftw@plt+0x818c>  // b.pmore
  40ad9c:	cmp	w5, w21
  40ada0:	b.cc	40ae7c <nftw@plt+0x818c>  // b.lo, b.ul, b.last
  40ada4:	ldr	w22, [sp, #348]
  40ada8:	add	w3, w25, #0x1
  40adac:	mov	w1, #0x0                   	// #0
  40adb0:	add	w22, w22, #0x1
  40adb4:	ldr	w2, [x0]
  40adb8:	cmp	w2, w21
  40adbc:	b.hi	40addc <nftw@plt+0x80ec>  // b.pmore
  40adc0:	ldr	w2, [x0, #8]
  40adc4:	cmp	w2, w21
  40adc8:	b.ne	40ae88 <nftw@plt+0x8198>  // b.any
  40adcc:	ldr	w2, [x0, #12]
  40add0:	cmp	w2, w22
  40add4:	b.lt	40addc <nftw@plt+0x80ec>  // b.tstop
  40add8:	add	w22, w2, #0x1
  40addc:	add	w1, w1, #0x1
  40ade0:	add	x0, x0, #0x28
  40ade4:	cmp	w4, w1
  40ade8:	b.ne	40adb4 <nftw@plt+0x80c4>  // b.any
  40adec:	mov	x0, x19
  40adf0:	mov	w1, #0x20                  	// #32
  40adf4:	bl	4095ac <nftw@plt+0x68bc>
  40adf8:	ldr	x0, [sp, #320]
  40adfc:	mov	w1, #0x20                  	// #32
  40ae00:	bl	40da7c <nftw@plt+0xad8c>
  40ae04:	ldr	w24, [sp, #460]
  40ae08:	add	x0, x19, #0x38
  40ae0c:	str	x0, [sp, #96]
  40ae10:	add	w24, w24, #0x1
  40ae14:	cmp	w24, w22
  40ae18:	b.ge	40aeb8 <nftw@plt+0x81c8>  // b.tcont
  40ae1c:	add	x5, sp, #0x110
  40ae20:	mov	w4, w25
  40ae24:	mov	w3, w28
  40ae28:	mov	w2, w24
  40ae2c:	mov	w1, w21
  40ae30:	mov	x0, x19
  40ae34:	bl	4098e4 <nftw@plt+0x6bf4>
  40ae38:	tst	w0, #0xff
  40ae3c:	b.eq	40aea8 <nftw@plt+0x81b8>  // b.none
  40ae40:	ldr	w1, [sp, #272]
  40ae44:	ldr	x0, [sp, #96]
  40ae48:	bl	40963c <nftw@plt+0x694c>
  40ae4c:	ldrb	w0, [sp, #276]
  40ae50:	cbz	w0, 40aea0 <nftw@plt+0x81b0>
  40ae54:	ldr	w0, [sp, #272]
  40ae58:	cmp	w0, #0x2
  40ae5c:	b.gt	40ae98 <nftw@plt+0x81a8>
  40ae60:	ldr	x1, [sp, #312]
  40ae64:	add	x0, x1, w0, sxtw
  40ae68:	ldrb	w1, [x0, #116]
  40ae6c:	ldr	x0, [sp, #320]
  40ae70:	add	w24, w24, #0x1
  40ae74:	bl	40da7c <nftw@plt+0xad8c>
  40ae78:	b	40ae14 <nftw@plt+0x8124>
  40ae7c:	add	w2, w2, #0x1
  40ae80:	add	x1, x1, #0x28
  40ae84:	b	40ad58 <nftw@plt+0x8068>
  40ae88:	b.ls	40addc <nftw@plt+0x80ec>  // b.plast
  40ae8c:	cmp	w25, w22
  40ae90:	csel	w22, w22, w3, lt  // lt = tstop
  40ae94:	b	40addc <nftw@plt+0x80ec>
  40ae98:	mov	w1, #0x5e                  	// #94
  40ae9c:	b	40ae6c <nftw@plt+0x817c>
  40aea0:	mov	w1, #0x7e                  	// #126
  40aea4:	b	40ae6c <nftw@plt+0x817c>
  40aea8:	ldr	x0, [sp, #96]
  40aeac:	bl	40975c <nftw@plt+0x6a6c>
  40aeb0:	mov	w1, #0x20                  	// #32
  40aeb4:	b	40ae6c <nftw@plt+0x817c>
  40aeb8:	mov	x0, x19
  40aebc:	bl	409764 <nftw@plt+0x6a74>
  40aec0:	ldrb	w0, [sp, #425]
  40aec4:	str	w0, [sp, #96]
  40aec8:	cbz	w0, 40b07c <nftw@plt+0x838c>
  40aecc:	mov	w22, #0x0                   	// #0
  40aed0:	str	xzr, [sp, #240]
  40aed4:	ldr	x0, [sp, #432]
  40aed8:	cbz	x0, 40b06c <nftw@plt+0x837c>
  40aedc:	ldr	w1, [x0, #4]
  40aee0:	cmp	w1, w22
  40aee4:	b.ls	40b06c <nftw@plt+0x837c>  // b.plast
  40aee8:	mov	w2, w22
  40aeec:	mov	x1, #0x28                  	// #40
  40aef0:	madd	x24, x2, x1, x0
  40aef4:	ldr	x0, [x24, #40]
  40aef8:	cbz	x0, 40b064 <nftw@plt+0x8374>
  40aefc:	ldr	w1, [x24, #28]
  40af00:	cmp	w1, w21
  40af04:	b.ne	40b064 <nftw@plt+0x8374>  // b.any
  40af08:	ldr	w3, [x24, #32]
  40af0c:	ldr	w1, [sp, #460]
  40af10:	cmp	w3, w1
  40af14:	b.le	40b064 <nftw@plt+0x8374>
  40af18:	ldr	x1, [x0]
  40af1c:	ldr	x3, [x1, #16]
  40af20:	ldr	w1, [x24, #36]
  40af24:	blr	x3
  40af28:	stp	x0, x1, [sp, #192]
  40af2c:	mov	x4, #0x0                   	// #0
  40af30:	mov	x3, x0
  40af34:	bfxil	x4, x1, #0, #8
  40af38:	cbz	x0, 40b064 <nftw@plt+0x8374>
  40af3c:	ldr	w1, [x24, #32]
  40af40:	str	w1, [sp, #104]
  40af44:	str	x3, [sp, #280]
  40af48:	strb	w4, [sp, #288]
  40af4c:	bl	402630 <strlen@plt>
  40af50:	str	x0, [sp, #112]
  40af54:	ldr	x25, [sp, #240]
  40af58:	cbz	x25, 40aff8 <nftw@plt+0x8308>
  40af5c:	ldp	w0, w24, [x25]
  40af60:	ubfx	x0, x0, #0, #31
  40af64:	cmp	w0, w24
  40af68:	b.ne	40b014 <nftw@plt+0x8324>  // b.any
  40af6c:	ldrsb	w0, [x25, #3]
  40af70:	tbz	w0, #31, 40aff8 <nftw@plt+0x8308>
  40af74:	ldr	w28, [sp, #96]
  40af78:	add	w1, w24, #0x1
  40af7c:	str	xzr, [sp, #240]
  40af80:	ldr	x0, [sp, #240]
  40af84:	bl	409808 <nftw@plt+0x6b18>
  40af88:	mov	w2, w0
  40af8c:	mov	x1, #0x8                   	// #8
  40af90:	mov	w0, #0x28                  	// #40
  40af94:	umaddl	x1, w2, w0, x1
  40af98:	ldr	x0, [sp, #240]
  40af9c:	cbz	x0, 40b008 <nftw@plt+0x8318>
  40afa0:	ldr	w6, [x0, #4]
  40afa4:	stp	w6, w2, [sp, #124]
  40afa8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  40afac:	ldp	w6, w2, [sp, #124]
  40afb0:	str	x0, [sp, #240]
  40afb4:	and	w2, w2, #0x7fffffff
  40afb8:	stp	w2, w6, [x0]
  40afbc:	cbz	w28, 40b014 <nftw@plt+0x8324>
  40afc0:	mov	w2, w24
  40afc4:	mov	x1, #0x8                   	// #8
  40afc8:	cbz	w2, 40b010 <nftw@plt+0x8320>
  40afcc:	add	x8, x25, x1
  40afd0:	add	x5, x0, x1
  40afd4:	sub	w2, w2, #0x1
  40afd8:	add	x1, x1, #0x28
  40afdc:	ldp	x6, x7, [x8]
  40afe0:	stp	x6, x7, [x5]
  40afe4:	ldp	x6, x7, [x8, #16]
  40afe8:	stp	x6, x7, [x5, #16]
  40afec:	ldr	x6, [x8, #32]
  40aff0:	str	x6, [x5, #32]
  40aff4:	b	40afc8 <nftw@plt+0x82d8>
  40aff8:	mov	w28, #0x0                   	// #0
  40affc:	mov	w24, #0x0                   	// #0
  40b000:	mov	w1, #0x1                   	// #1
  40b004:	b	40af80 <nftw@plt+0x8290>
  40b008:	mov	w6, #0x0                   	// #0
  40b00c:	b	40afa4 <nftw@plt+0x82b4>
  40b010:	str	w24, [x0, #4]
  40b014:	ldr	x0, [sp, #240]
  40b018:	mov	x3, #0x8                   	// #8
  40b01c:	ldr	w1, [x0, #4]
  40b020:	add	w2, w1, #0x1
  40b024:	str	w2, [x0, #4]
  40b028:	ldr	w2, [sp, #104]
  40b02c:	str	w2, [sp, #276]
  40b030:	ldr	x2, [sp, #112]
  40b034:	str	x2, [sp, #296]
  40b038:	mov	w2, #0x28                  	// #40
  40b03c:	str	w22, [sp, #272]
  40b040:	str	wzr, [sp, #304]
  40b044:	umaddl	x1, w1, w2, x3
  40b048:	ldp	x2, x3, [sp, #272]
  40b04c:	add	x0, x0, x1
  40b050:	stp	x2, x3, [x0]
  40b054:	ldp	x2, x3, [sp, #288]
  40b058:	stp	x2, x3, [x0, #16]
  40b05c:	ldr	w1, [sp, #304]
  40b060:	str	w1, [x0, #32]
  40b064:	add	w22, w22, #0x1
  40b068:	b	40aed4 <nftw@plt+0x81e4>
  40b06c:	ldr	x0, [sp, #240]
  40b070:	cbnz	x0, 40b1a0 <nftw@plt+0x84b0>
  40b074:	add	x0, sp, #0xf0
  40b078:	bl	40941c <nftw@plt+0x672c>
  40b07c:	ldr	x0, [sp, #336]
  40b080:	mov	x22, #0x0                   	// #0
  40b084:	str	wzr, [sp, #96]
  40b088:	str	x0, [sp, #152]
  40b08c:	ldr	x0, [sp, #440]
  40b090:	cbz	x0, 40b718 <nftw@plt+0x8a28>
  40b094:	ldr	w1, [x0, #4]
  40b098:	ldr	w2, [sp, #96]
  40b09c:	cmp	w1, w2
  40b0a0:	b.ls	40b718 <nftw@plt+0x8a28>  // b.plast
  40b0a4:	ldr	x1, [sp, #96]
  40b0a8:	add	x0, x0, w1, uxtw #3
  40b0ac:	ldr	x24, [x0, #8]
  40b0b0:	mov	x0, x24
  40b0b4:	bl	427b00 <nftw@plt+0x24e10>
  40b0b8:	ands	w0, w0, #0xff
  40b0bc:	str	w0, [sp, #112]
  40b0c0:	b.ne	40b5cc <nftw@plt+0x88dc>  // b.any
  40b0c4:	ldr	x1, [sp, #336]
  40b0c8:	mov	w2, w27
  40b0cc:	mov	x0, x24
  40b0d0:	bl	4279f4 <nftw@plt+0x24d04>
  40b0d4:	ands	w0, w0, #0xff
  40b0d8:	str	w0, [sp, #160]
  40b0dc:	b.eq	40b5cc <nftw@plt+0x88dc>  // b.none
  40b0e0:	ldr	w0, [x24]
  40b0e4:	add	x8, sp, #0x110
  40b0e8:	bl	411644 <nftw@plt+0xe954>
  40b0ec:	ldr	w28, [sp, #284]
  40b0f0:	ldr	w0, [x24, #4]
  40b0f4:	add	x8, sp, #0x110
  40b0f8:	bl	411644 <nftw@plt+0xe954>
  40b0fc:	ldr	w2, [sp, #284]
  40b100:	mov	w1, w28
  40b104:	add	x0, sp, #0x110
  40b108:	sub	w2, w2, #0x1
  40b10c:	bl	409570 <nftw@plt+0x6880>
  40b110:	ldr	w0, [sp, #272]
  40b114:	add	x8, sp, #0x110
  40b118:	str	w0, [sp, #104]
  40b11c:	ldr	w0, [sp, #276]
  40b120:	str	w0, [sp, #124]
  40b124:	ldr	w0, [x24]
  40b128:	bl	411644 <nftw@plt+0xe954>
  40b12c:	ldr	w25, [sp, #284]
  40b130:	ldr	x0, [x24, #16]
  40b134:	sub	w2, w25, #0x1
  40b138:	ldr	w3, [x24]
  40b13c:	add	w28, w2, w0
  40b140:	ldr	w0, [x24, #4]
  40b144:	cmp	w3, w0
  40b148:	b.ne	40b3c0 <nftw@plt+0x86d0>  // b.any
  40b14c:	mov	w2, w28
  40b150:	add	x0, sp, #0x110
  40b154:	mov	w1, w25
  40b158:	bl	409570 <nftw@plt+0x6880>
  40b15c:	ldr	w28, [sp, #272]
  40b160:	ldr	w0, [sp, #276]
  40b164:	str	w0, [sp, #128]
  40b168:	cbz	x22, 40b5dc <nftw@plt+0x88ec>
  40b16c:	ldr	w0, [x22, #4]
  40b170:	cbz	w0, 40b5dc <nftw@plt+0x88ec>
  40b174:	sub	w0, w0, #0x1
  40b178:	ldr	w1, [sp, #104]
  40b17c:	add	x0, x22, x0, lsl #3
  40b180:	ldr	x25, [x0, #8]
  40b184:	ldr	w0, [x25]
  40b188:	cmp	w1, w0
  40b18c:	b.ge	40b3dc <nftw@plt+0x86ec>  // b.tcont
  40b190:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b194:	mov	w1, #0x77a                 	// #1914
  40b198:	add	x2, x2, #0x62f
  40b19c:	b	40a910 <nftw@plt+0x7c20>
  40b1a0:	ldr	w1, [x0, #4]
  40b1a4:	cbz	w1, 40b074 <nftw@plt+0x8384>
  40b1a8:	cmp	w1, #0x1
  40b1ac:	b.ls	40b1c8 <nftw@plt+0x84d8>  // b.plast
  40b1b0:	adrp	x3, 409000 <nftw@plt+0x6310>
  40b1b4:	mov	w1, w1
  40b1b8:	add	x3, x3, #0xa64
  40b1bc:	add	x0, x0, #0x8
  40b1c0:	mov	x2, #0x28                  	// #40
  40b1c4:	bl	413e78 <nftw@plt+0x11188>
  40b1c8:	ldr	x2, [sp, #240]
  40b1cc:	cbz	x2, 40b220 <nftw@plt+0x8530>
  40b1d0:	ldr	w0, [x2, #4]
  40b1d4:	sub	w0, w0, #0x1
  40b1d8:	mov	w4, #0x7fffffff            	// #2147483647
  40b1dc:	mov	w25, #0x1                   	// #1
  40b1e0:	mov	x6, #0x28                  	// #40
  40b1e4:	cbz	x2, 40b228 <nftw@plt+0x8538>
  40b1e8:	ldr	w1, [x2, #4]
  40b1ec:	cmp	w1, w0
  40b1f0:	b.ls	40b228 <nftw@plt+0x8538>  // b.plast
  40b1f4:	mov	w1, w0
  40b1f8:	sub	w0, w0, #0x1
  40b1fc:	madd	x1, x1, x6, x2
  40b200:	ldr	x3, [x1, #32]
  40b204:	ldr	w5, [x1, #12]
  40b208:	add	x3, x3, w5, sxtw
  40b20c:	cmp	x3, w4, sxtw
  40b210:	mov	w4, w5
  40b214:	cinc	w25, w25, cs  // cs = hs, nlast
  40b218:	str	w25, [x1, #40]
  40b21c:	b	40b1e4 <nftw@plt+0x84f4>
  40b220:	mov	w0, #0x0                   	// #0
  40b224:	b	40b1d4 <nftw@plt+0x84e4>
  40b228:	mov	w28, #0x0                   	// #0
  40b22c:	mov	w24, #0x0                   	// #0
  40b230:	mov	x0, x19
  40b234:	mov	w1, #0x20                  	// #32
  40b238:	bl	4095ac <nftw@plt+0x68bc>
  40b23c:	ldr	x0, [sp, #320]
  40b240:	mov	w1, #0x20                  	// #32
  40b244:	bl	40da7c <nftw@plt+0xad8c>
  40b248:	ldr	w0, [sp, #460]
  40b24c:	mov	w4, #0x0                   	// #0
  40b250:	add	w0, w0, #0x1
  40b254:	str	w0, [sp, #272]
  40b258:	ldr	x22, [sp, #240]
  40b25c:	cbz	x22, 40b370 <nftw@plt+0x8680>
  40b260:	ldr	w0, [x22, #4]
  40b264:	cmp	w0, w4
  40b268:	b.ls	40b370 <nftw@plt+0x8680>  // b.plast
  40b26c:	mov	w5, w4
  40b270:	mov	x0, #0x28                  	// #40
  40b274:	madd	x5, x5, x0, x22
  40b278:	ldr	w0, [x5, #40]
  40b27c:	cmp	w0, w24
  40b280:	b.lt	40b370 <nftw@plt+0x8680>  // b.tstop
  40b284:	mov	w0, #0x28                  	// #40
  40b288:	umull	x0, w4, w0
  40b28c:	add	x22, x22, x0
  40b290:	ldr	w2, [x22, #12]
  40b294:	b.ne	40b30c <nftw@plt+0x861c>  // b.any
  40b298:	ldr	w0, [sp, #272]
  40b29c:	cmp	w2, w0
  40b2a0:	b.ge	40b2b4 <nftw@plt+0x85c4>  // b.tcont
  40b2a4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b2a8:	mov	w1, #0x609                 	// #1545
  40b2ac:	add	x2, x2, #0x61e
  40b2b0:	b	40a910 <nftw@plt+0x7c20>
  40b2b4:	mov	w3, #0x1                   	// #1
  40b2b8:	add	x1, sp, #0x110
  40b2bc:	add	x0, sp, #0x138
  40b2c0:	str	w4, [sp, #96]
  40b2c4:	str	x5, [sp, #104]
  40b2c8:	bl	40978c <nftw@plt+0x6a9c>
  40b2cc:	ldr	w1, [x22, #8]
  40b2d0:	mov	x0, x26
  40b2d4:	bl	40963c <nftw@plt+0x694c>
  40b2d8:	ldr	x1, [x22, #16]
  40b2dc:	ldr	x0, [sp, #320]
  40b2e0:	bl	40de28 <nftw@plt+0xb138>
  40b2e4:	mov	x0, x26
  40b2e8:	bl	40975c <nftw@plt+0x6a6c>
  40b2ec:	ldr	x5, [sp, #104]
  40b2f0:	ldr	w0, [sp, #272]
  40b2f4:	ldr	x1, [x5, #32]
  40b2f8:	add	w0, w0, w1
  40b2fc:	ldr	w4, [sp, #96]
  40b300:	str	w0, [sp, #272]
  40b304:	add	w4, w4, #0x1
  40b308:	b	40b258 <nftw@plt+0x8568>
  40b30c:	cmp	w2, w28
  40b310:	b.eq	40b304 <nftw@plt+0x8614>  // b.none
  40b314:	ldr	w0, [sp, #272]
  40b318:	cmp	w2, w0
  40b31c:	b.ge	40b330 <nftw@plt+0x8640>  // b.tcont
  40b320:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b324:	mov	w1, #0x612                 	// #1554
  40b328:	add	x2, x2, #0x61e
  40b32c:	b	40a910 <nftw@plt+0x7c20>
  40b330:	mov	w3, #0x1                   	// #1
  40b334:	add	x1, sp, #0x110
  40b338:	add	x0, sp, #0x138
  40b33c:	str	w4, [sp, #96]
  40b340:	bl	40978c <nftw@plt+0x6a9c>
  40b344:	ldr	w1, [x22, #8]
  40b348:	mov	x0, x26
  40b34c:	bl	40963c <nftw@plt+0x694c>
  40b350:	ldr	x0, [sp, #320]
  40b354:	mov	w1, #0x7c                  	// #124
  40b358:	bl	40da7c <nftw@plt+0xad8c>
  40b35c:	mov	x0, x26
  40b360:	bl	40975c <nftw@plt+0x6a6c>
  40b364:	ldr	w28, [sp, #272]
  40b368:	add	w0, w28, #0x1
  40b36c:	b	40b2fc <nftw@plt+0x860c>
  40b370:	mov	x0, x19
  40b374:	add	w24, w24, #0x1
  40b378:	bl	409764 <nftw@plt+0x6a74>
  40b37c:	cmp	w25, w24
  40b380:	b.ge	40b230 <nftw@plt+0x8540>  // b.tcont
  40b384:	mov	x22, #0x0                   	// #0
  40b388:	mov	x24, #0x28                  	// #40
  40b38c:	ldr	x0, [sp, #240]
  40b390:	cbz	x0, 40b074 <nftw@plt+0x8384>
  40b394:	ldr	w1, [x0, #4]
  40b398:	cmp	w1, w22
  40b39c:	b.ls	40b074 <nftw@plt+0x8384>  // b.plast
  40b3a0:	madd	x0, x22, x24, x0
  40b3a4:	add	x1, x0, #0x8
  40b3a8:	ldrb	w0, [x0, #24]
  40b3ac:	cbz	w0, 40b3b8 <nftw@plt+0x86c8>
  40b3b0:	ldr	x0, [x1, #8]
  40b3b4:	bl	402a80 <free@plt>
  40b3b8:	add	x22, x22, #0x1
  40b3bc:	b	40b38c <nftw@plt+0x869c>
  40b3c0:	add	x8, sp, #0x110
  40b3c4:	bl	411644 <nftw@plt+0xe954>
  40b3c8:	ldr	w0, [sp, #284]
  40b3cc:	sub	w0, w0, #0x1
  40b3d0:	cmp	w28, w0
  40b3d4:	csel	w2, w28, w0, ge  // ge = tcont
  40b3d8:	b	40b150 <nftw@plt+0x8460>
  40b3dc:	ldr	w0, [x25, #8]
  40b3e0:	cmp	w28, w0
  40b3e4:	b.ge	40b3f8 <nftw@plt+0x8708>  // b.tcont
  40b3e8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b3ec:	mov	w1, #0x77c                 	// #1916
  40b3f0:	add	x2, x2, #0x62f
  40b3f4:	b	40a910 <nftw@plt+0x7c20>
  40b3f8:	ldr	w0, [x25, #12]
  40b3fc:	cmp	w28, w0
  40b400:	b.gt	40b5dc <nftw@plt+0x88ec>
  40b404:	ldr	w1, [x25, #4]
  40b408:	sub	w2, w28, #0x1
  40b40c:	add	x0, sp, #0xf0
  40b410:	add	w1, w1, #0x1
  40b414:	bl	409570 <nftw@plt+0x6880>
  40b418:	ldr	x0, [sp, #152]
  40b41c:	mov	w1, w27
  40b420:	bl	412230 <nftw@plt+0xf540>
  40b424:	mov	x8, x0
  40b428:	mov	x7, x1
  40b42c:	cbz	x0, 40b5dc <nftw@plt+0x88ec>
  40b430:	ldr	w5, [sp, #244]
  40b434:	cmp	w5, w1
  40b438:	b.ge	40b5dc <nftw@plt+0x88ec>  // b.tcont
  40b43c:	ldr	x6, [x25, #24]
  40b440:	tbz	w6, #31, 40b454 <nftw@plt+0x8764>
  40b444:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b448:	mov	w1, #0x792                 	// #1938
  40b44c:	add	x2, x2, #0x62f
  40b450:	b	40a910 <nftw@plt+0x7c20>
  40b454:	ldr	w0, [sp, #240]
  40b458:	add	w4, w5, #0x1
  40b45c:	subs	w0, w4, w0
  40b460:	str	w0, [sp, #104]
  40b464:	b.pl	40b478 <nftw@plt+0x8788>  // b.nfrst
  40b468:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b46c:	mov	w1, #0x794                 	// #1940
  40b470:	add	x2, x2, #0x62f
  40b474:	b	40a910 <nftw@plt+0x7c20>
  40b478:	ldr	w0, [sp, #104]
  40b47c:	ldr	x4, [x24, #16]
  40b480:	add	w0, w0, w6
  40b484:	str	w0, [sp, #112]
  40b488:	adds	w4, w0, w4
  40b48c:	b.pl	40b4a0 <nftw@plt+0x87b0>  // b.nfrst
  40b490:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b494:	mov	w1, #0x796                 	// #1942
  40b498:	add	x2, x2, #0x62f
  40b49c:	b	40a910 <nftw@plt+0x7c20>
  40b4a0:	ldr	x0, [x25, #32]
  40b4a4:	sxtw	x28, w4
  40b4a8:	add	x5, x28, #0x1
  40b4ac:	cmp	x0, x5
  40b4b0:	b.cs	40b4e0 <nftw@plt+0x87f0>  // b.hs, b.nlast
  40b4b4:	ldr	x0, [x25, #16]
  40b4b8:	lsl	x1, x5, #1
  40b4bc:	str	x1, [sp, #128]
  40b4c0:	str	x6, [sp, #160]
  40b4c4:	stp	x8, x7, [sp, #176]
  40b4c8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  40b4cc:	ldp	x8, x7, [sp, #176]
  40b4d0:	str	x0, [x25, #16]
  40b4d4:	ldr	x6, [sp, #160]
  40b4d8:	ldr	x1, [sp, #128]
  40b4dc:	str	x1, [x25, #32]
  40b4e0:	ldp	w2, w0, [sp, #240]
  40b4e4:	add	w5, w0, #0x1
  40b4e8:	sub	w5, w5, w2
  40b4ec:	subs	w2, w2, #0x1
  40b4f0:	b.pl	40b50c <nftw@plt+0x881c>  // b.nfrst
  40b4f4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b4f8:	add	x2, x2, #0x638
  40b4fc:	mov	w1, #0x44                  	// #68
  40b500:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b504:	add	x0, x0, #0x640
  40b508:	b	40a918 <nftw@plt+0x7c28>
  40b50c:	cmp	w2, w7
  40b510:	b.lt	40b524 <nftw@plt+0x8834>  // b.tstop
  40b514:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b518:	mov	w1, #0x45                  	// #69
  40b51c:	add	x2, x2, #0x638
  40b520:	b	40b500 <nftw@plt+0x8810>
  40b524:	tbz	w5, #31, 40b538 <nftw@plt+0x8848>
  40b528:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b52c:	mov	w1, #0x46                  	// #70
  40b530:	add	x2, x2, #0x638
  40b534:	b	40b500 <nftw@plt+0x8810>
  40b538:	cmp	w0, w7
  40b53c:	b.le	40b550 <nftw@plt+0x8860>
  40b540:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b544:	mov	w1, #0x47                  	// #71
  40b548:	add	x2, x2, #0x638
  40b54c:	b	40b500 <nftw@plt+0x8810>
  40b550:	sxtw	x5, w5
  40b554:	add	x2, x8, w2, sxtw
  40b558:	mov	w1, w6
  40b55c:	mov	x0, x25
  40b560:	stp	x2, x5, [sp, #272]
  40b564:	add	x2, sp, #0x110
  40b568:	bl	409830 <nftw@plt+0x6b40>
  40b56c:	ldp	x1, x0, [x24, #8]
  40b570:	stp	x1, x0, [sp, #272]
  40b574:	ldr	w1, [sp, #112]
  40b578:	mov	x0, x25
  40b57c:	add	x2, sp, #0x110
  40b580:	bl	409830 <nftw@plt+0x6b40>
  40b584:	str	x28, [x25, #24]
  40b588:	ldr	x0, [x25, #32]
  40b58c:	cmp	x28, x0
  40b590:	b.cc	40b5a4 <nftw@plt+0x88b4>  // b.lo, b.ul, b.last
  40b594:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40b598:	mov	w1, #0x732                 	// #1842
  40b59c:	add	x2, x2, #0x652
  40b5a0:	b	40a910 <nftw@plt+0x7c20>
  40b5a4:	ldr	x0, [x25, #16]
  40b5a8:	ldr	w1, [sp, #104]
  40b5ac:	strb	wzr, [x0, x28]
  40b5b0:	ldr	w0, [sp, #124]
  40b5b4:	str	w0, [x25, #4]
  40b5b8:	ldr	x0, [x24, #16]
  40b5bc:	add	x0, x0, w1, sxtw
  40b5c0:	ldr	w1, [x25, #12]
  40b5c4:	add	w0, w1, w0
  40b5c8:	str	w0, [x25, #12]
  40b5cc:	ldr	w0, [sp, #96]
  40b5d0:	add	w0, w0, #0x1
  40b5d4:	str	w0, [sp, #96]
  40b5d8:	b	40b08c <nftw@plt+0x839c>
  40b5dc:	ldp	x2, x1, [x24, #8]
  40b5e0:	mov	x0, #0x28                  	// #40
  40b5e4:	stp	x1, x2, [sp, #176]
  40b5e8:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40b5ec:	mov	x24, x0
  40b5f0:	ldr	w0, [sp, #104]
  40b5f4:	ldr	x2, [sp, #184]
  40b5f8:	str	w0, [x24]
  40b5fc:	ldr	w0, [sp, #124]
  40b600:	str	w0, [x24, #4]
  40b604:	ldr	w0, [sp, #128]
  40b608:	str	w28, [x24, #8]
  40b60c:	str	w0, [x24, #12]
  40b610:	mov	x0, x2
  40b614:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  40b618:	ldr	x1, [sp, #176]
  40b61c:	stp	x0, x1, [x24, #16]
  40b620:	add	x1, x1, #0x1
  40b624:	str	x1, [x24, #32]
  40b628:	cbz	x22, 40b6d0 <nftw@plt+0x89e0>
  40b62c:	ldp	w0, w3, [x22]
  40b630:	ubfx	x0, x0, #0, #31
  40b634:	cmp	w0, w3
  40b638:	b.ne	40b710 <nftw@plt+0x8a20>  // b.any
  40b63c:	ldrsb	w0, [x22, #3]
  40b640:	tbz	w0, #31, 40b6e0 <nftw@plt+0x89f0>
  40b644:	ldr	w0, [sp, #160]
  40b648:	add	w1, w3, #0x1
  40b64c:	mov	x2, #0x0                   	// #0
  40b650:	str	w0, [sp, #112]
  40b654:	mov	x0, x2
  40b658:	str	x2, [sp, #104]
  40b65c:	str	w3, [sp, #124]
  40b660:	bl	409808 <nftw@plt+0x6b18>
  40b664:	ldr	x2, [sp, #104]
  40b668:	mov	w28, w0
  40b66c:	ldr	w3, [sp, #124]
  40b670:	ubfiz	x1, x28, #3, #32
  40b674:	add	x1, x1, #0x8
  40b678:	cbz	x2, 40b6e8 <nftw@plt+0x89f8>
  40b67c:	ldr	w4, [x2, #4]
  40b680:	mov	x0, x2
  40b684:	str	w3, [sp, #104]
  40b688:	str	w4, [sp, #124]
  40b68c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  40b690:	mov	x1, x0
  40b694:	ldr	w0, [sp, #112]
  40b698:	ldr	w4, [sp, #124]
  40b69c:	and	w28, w28, #0x7fffffff
  40b6a0:	ldr	w3, [sp, #104]
  40b6a4:	stp	w28, w4, [x1]
  40b6a8:	cbz	w0, 40b6f4 <nftw@plt+0x8a04>
  40b6ac:	mov	w4, w3
  40b6b0:	mov	x0, #0x0                   	// #0
  40b6b4:	add	x2, x0, #0x1
  40b6b8:	cmp	x4, x0
  40b6bc:	b.eq	40b6f0 <nftw@plt+0x8a00>  // b.none
  40b6c0:	ldr	x0, [x22, x2, lsl #3]
  40b6c4:	str	x0, [x1, x2, lsl #3]
  40b6c8:	mov	x0, x2
  40b6cc:	b	40b6b4 <nftw@plt+0x89c4>
  40b6d0:	mov	x2, #0x0                   	// #0
  40b6d4:	mov	w3, #0x0                   	// #0
  40b6d8:	mov	w1, #0x1                   	// #1
  40b6dc:	b	40b654 <nftw@plt+0x8964>
  40b6e0:	mov	x2, x22
  40b6e4:	b	40b6d4 <nftw@plt+0x89e4>
  40b6e8:	mov	w4, #0x0                   	// #0
  40b6ec:	b	40b680 <nftw@plt+0x8990>
  40b6f0:	str	w3, [x1, #4]
  40b6f4:	ldr	w0, [x1, #4]
  40b6f8:	mov	x22, x1
  40b6fc:	add	w2, w0, #0x1
  40b700:	str	w2, [x1, #4]
  40b704:	add	x0, x1, w0, uxtw #3
  40b708:	str	x24, [x0, #8]
  40b70c:	b	40b5cc <nftw@plt+0x88dc>
  40b710:	mov	x1, x22
  40b714:	b	40b6f4 <nftw@plt+0x8a04>
  40b718:	ldr	w0, [sp, #460]
  40b71c:	str	w0, [sp, #272]
  40b720:	cbz	x22, 40b824 <nftw@plt+0x8b34>
  40b724:	ldr	w0, [x22, #4]
  40b728:	cbz	w0, 40b738 <nftw@plt+0x8a48>
  40b72c:	mov	x0, x19
  40b730:	mov	w1, #0x20                  	// #32
  40b734:	bl	4095ac <nftw@plt+0x68bc>
  40b738:	add	x25, x19, #0x38
  40b73c:	mov	w27, #0x0                   	// #0
  40b740:	ldr	w0, [x22, #4]
  40b744:	cmp	w27, w0
  40b748:	b.cs	40b824 <nftw@plt+0x8b34>  // b.hs, b.nlast
  40b74c:	add	x0, x22, w27, uxtw #3
  40b750:	ldr	x24, [x0, #8]
  40b754:	ldp	w28, w4, [x24]
  40b758:	add	w0, w4, #0x1
  40b75c:	cmp	w28, w0
  40b760:	b.eq	40b7bc <nftw@plt+0x8acc>  // b.none
  40b764:	ldr	x2, [sp, #432]
  40b768:	mov	w1, #0x0                   	// #0
  40b76c:	add	x0, x2, #0x8
  40b770:	cbz	x2, 40b8d4 <nftw@plt+0x8be4>
  40b774:	ldr	w3, [x2, #4]
  40b778:	cmp	w3, w1
  40b77c:	b.ls	40b8d4 <nftw@plt+0x8be4>  // b.plast
  40b780:	ldr	w3, [x0]
  40b784:	cmp	w21, w3
  40b788:	b.ne	40b7b0 <nftw@plt+0x8ac0>  // b.any
  40b78c:	ldr	w3, [x0, #4]
  40b790:	cmp	w28, w3
  40b794:	b.ne	40b7b0 <nftw@plt+0x8ac0>  // b.any
  40b798:	ldr	w3, [x0, #8]
  40b79c:	cmp	w21, w3
  40b7a0:	b.ne	40b7b0 <nftw@plt+0x8ac0>  // b.any
  40b7a4:	ldr	w3, [x0, #12]
  40b7a8:	cmp	w4, w3
  40b7ac:	b.eq	40b8cc <nftw@plt+0x8bdc>  // b.none
  40b7b0:	add	w1, w1, #0x1
  40b7b4:	add	x0, x0, #0x28
  40b7b8:	b	40b770 <nftw@plt+0x8a80>
  40b7bc:	ldr	w2, [x24, #8]
  40b7c0:	mov	w3, #0x1                   	// #1
  40b7c4:	add	x1, sp, #0x110
  40b7c8:	mov	x0, x19
  40b7cc:	bl	40978c <nftw@plt+0x6a9c>
  40b7d0:	mov	x0, x25
  40b7d4:	mov	w1, #0xfffffffe            	// #-2
  40b7d8:	bl	40963c <nftw@plt+0x694c>
  40b7dc:	ldr	x1, [x24, #16]
  40b7e0:	ldr	x0, [sp, #320]
  40b7e4:	bl	40de28 <nftw@plt+0xb138>
  40b7e8:	mov	x0, x25
  40b7ec:	bl	40975c <nftw@plt+0x6a6c>
  40b7f0:	ldr	x1, [x24, #24]
  40b7f4:	ldr	w0, [sp, #272]
  40b7f8:	add	w0, w0, w1
  40b7fc:	str	w0, [sp, #272]
  40b800:	add	w27, w27, #0x1
  40b804:	b	40b740 <nftw@plt+0x8a50>
  40b808:	mov	x0, x25
  40b80c:	bl	40975c <nftw@plt+0x6a6c>
  40b810:	ldr	x0, [x24, #24]
  40b814:	cbz	x0, 40b800 <nftw@plt+0x8b10>
  40b818:	mov	w2, w28
  40b81c:	mov	w3, #0x1                   	// #1
  40b820:	b	40b7c4 <nftw@plt+0x8ad4>
  40b824:	mov	w21, #0x0                   	// #0
  40b828:	add	x1, sp, #0x110
  40b82c:	mov	x0, x19
  40b830:	mov	w3, #0x0                   	// #0
  40b834:	mov	w2, #0x0                   	// #0
  40b838:	bl	40978c <nftw@plt+0x6a9c>
  40b83c:	cbz	x22, 40b858 <nftw@plt+0x8b68>
  40b840:	ldr	w0, [x22, #4]
  40b844:	cmp	w21, w0
  40b848:	b.cc	40b860 <nftw@plt+0x8b70>  // b.lo, b.ul, b.last
  40b84c:	ldrsb	w0, [x22, #3]
  40b850:	tbz	w0, #31, 40b888 <nftw@plt+0x8b98>
  40b854:	str	wzr, [x22, #4]
  40b858:	add	x23, x23, #0x1
  40b85c:	b	40a950 <nftw@plt+0x7c60>
  40b860:	add	x0, x22, w21, uxtw #3
  40b864:	ldr	x24, [x0, #8]
  40b868:	cbz	x24, 40b880 <nftw@plt+0x8b90>
  40b86c:	ldr	x0, [x24, #16]
  40b870:	bl	402a80 <free@plt>
  40b874:	mov	x0, x24
  40b878:	mov	x1, #0x28                  	// #40
  40b87c:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  40b880:	add	w21, w21, #0x1
  40b884:	b	40b83c <nftw@plt+0x8b4c>
  40b888:	mov	x0, x22
  40b88c:	bl	402a80 <free@plt>
  40b890:	b	40b858 <nftw@plt+0x8b68>
  40b894:	ldr	x21, [sp, #168]
  40b898:	b	40a8cc <nftw@plt+0x7bdc>
  40b89c:	ldr	x0, [x20]
  40b8a0:	ldr	x1, [sp, #136]
  40b8a4:	bl	40d734 <nftw@plt+0xaa44>
  40b8a8:	mov	x0, x19
  40b8ac:	bl	409b24 <nftw@plt+0x6e34>
  40b8b0:	ldp	x19, x20, [sp, #16]
  40b8b4:	ldp	x21, x22, [sp, #32]
  40b8b8:	ldp	x23, x24, [sp, #48]
  40b8bc:	ldp	x25, x26, [sp, #64]
  40b8c0:	ldp	x27, x28, [sp, #80]
  40b8c4:	ldp	x29, x30, [sp], #464
  40b8c8:	ret
  40b8cc:	ldr	x0, [x24, #24]
  40b8d0:	cbnz	x0, 40b818 <nftw@plt+0x8b28>
  40b8d4:	mov	w2, w28
  40b8d8:	mov	w3, #0x1                   	// #1
  40b8dc:	add	x1, sp, #0x110
  40b8e0:	mov	x0, x19
  40b8e4:	str	w4, [sp, #96]
  40b8e8:	bl	40978c <nftw@plt+0x6a9c>
  40b8ec:	mov	x0, x25
  40b8f0:	mov	w1, #0xfffffffd            	// #-3
  40b8f4:	bl	40963c <nftw@plt+0x694c>
  40b8f8:	ldr	w4, [sp, #96]
  40b8fc:	ldr	w0, [sp, #272]
  40b900:	str	w4, [sp, #96]
  40b904:	cmp	w4, w0
  40b908:	b.lt	40b808 <nftw@plt+0x8b18>  // b.tstop
  40b90c:	ldr	x0, [sp, #320]
  40b910:	mov	w1, #0x2d                  	// #45
  40b914:	bl	40da7c <nftw@plt+0xad8c>
  40b918:	ldr	w0, [sp, #272]
  40b91c:	add	w0, w0, #0x1
  40b920:	str	w0, [sp, #272]
  40b924:	b	40b8f8 <nftw@plt+0x8c08>
  40b928:	mov	w4, w1
  40b92c:	tst	w2, #0xff
  40b930:	b.eq	40b94c <nftw@plt+0x8c5c>  // b.none
  40b934:	cbz	x0, 40b944 <nftw@plt+0x8c54>
  40b938:	ldr	w0, [x0, #4]
  40b93c:	add	w0, w0, w4
  40b940:	ret
  40b944:	mov	w0, #0x0                   	// #0
  40b948:	b	40b93c <nftw@plt+0x8c4c>
  40b94c:	b	409808 <nftw@plt+0x6b18>
  40b950:	stp	x29, x30, [sp, #-64]!
  40b954:	and	w2, w2, #0xff
  40b958:	mov	x29, sp
  40b95c:	stp	x23, x24, [sp, #48]
  40b960:	ldr	x23, [x0]
  40b964:	stp	x19, x20, [sp, #16]
  40b968:	mov	x20, x0
  40b96c:	stp	x21, x22, [sp, #32]
  40b970:	cbz	x23, 40b990 <nftw@plt+0x8ca0>
  40b974:	ldp	w0, w21, [x23]
  40b978:	ubfx	x0, x0, #0, #31
  40b97c:	sub	w0, w0, w21
  40b980:	cmp	w1, w0
  40b984:	b.hi	40b9a0 <nftw@plt+0x8cb0>  // b.pmore
  40b988:	mov	w19, #0x0                   	// #0
  40b98c:	b	40ba24 <nftw@plt+0x8d34>
  40b990:	mov	w19, #0x0                   	// #0
  40b994:	cbz	w1, 40ba24 <nftw@plt+0x8d34>
  40b998:	mov	w21, #0x0                   	// #0
  40b99c:	b	40b9b4 <nftw@plt+0x8cc4>
  40b9a0:	ldrsb	w0, [x23, #3]
  40b9a4:	tbz	w0, #31, 40ba10 <nftw@plt+0x8d20>
  40b9a8:	add	w1, w1, w21
  40b9ac:	mov	w19, #0x1                   	// #1
  40b9b0:	str	xzr, [x20]
  40b9b4:	ldr	x0, [x20]
  40b9b8:	bl	40b928 <nftw@plt+0x8c38>
  40b9bc:	mov	w22, w0
  40b9c0:	ldr	x0, [x20]
  40b9c4:	ubfiz	x1, x22, #3, #32
  40b9c8:	add	x1, x1, #0x8
  40b9cc:	cbz	x0, 40ba18 <nftw@plt+0x8d28>
  40b9d0:	ldr	w24, [x0, #4]
  40b9d4:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  40b9d8:	str	x0, [x20]
  40b9dc:	and	w22, w22, #0x7fffffff
  40b9e0:	stp	w22, w24, [x0]
  40b9e4:	mov	x1, x0
  40b9e8:	cbz	w19, 40ba3c <nftw@plt+0x8d4c>
  40b9ec:	mov	w3, w21
  40b9f0:	mov	x0, #0x0                   	// #0
  40b9f4:	add	x2, x0, #0x1
  40b9f8:	cmp	x0, x3
  40b9fc:	b.eq	40ba20 <nftw@plt+0x8d30>  // b.none
  40ba00:	ldr	x0, [x23, x2, lsl #3]
  40ba04:	str	x0, [x1, x2, lsl #3]
  40ba08:	mov	x0, x2
  40ba0c:	b	40b9f4 <nftw@plt+0x8d04>
  40ba10:	mov	w19, #0x0                   	// #0
  40ba14:	b	40b998 <nftw@plt+0x8ca8>
  40ba18:	mov	w24, #0x0                   	// #0
  40ba1c:	b	40b9d4 <nftw@plt+0x8ce4>
  40ba20:	str	w21, [x1, #4]
  40ba24:	mov	w0, w19
  40ba28:	ldp	x19, x20, [sp, #16]
  40ba2c:	ldp	x21, x22, [sp, #32]
  40ba30:	ldp	x23, x24, [sp, #48]
  40ba34:	ldp	x29, x30, [sp], #64
  40ba38:	ret
  40ba3c:	mov	w19, #0x1                   	// #1
  40ba40:	b	40ba24 <nftw@plt+0x8d34>
  40ba44:	sub	w0, w0, w1
  40ba48:	ret
  40ba4c:	stp	x29, x30, [sp, #-48]!
  40ba50:	and	w1, w1, #0xff
  40ba54:	mov	x29, sp
  40ba58:	stp	x19, x20, [sp, #16]
  40ba5c:	mov	x20, #0x0                   	// #0
  40ba60:	mov	x19, x0
  40ba64:	stp	x21, x22, [sp, #32]
  40ba68:	mov	x21, x2
  40ba6c:	mov	w22, w3
  40ba70:	bl	40da7c <nftw@plt+0xad8c>
  40ba74:	cmp	w22, w20
  40ba78:	b.le	40ba90 <nftw@plt+0x8da0>
  40ba7c:	ldrb	w1, [x21, x20]
  40ba80:	mov	x0, x19
  40ba84:	add	x20, x20, #0x1
  40ba88:	bl	40da7c <nftw@plt+0xad8c>
  40ba8c:	b	40ba74 <nftw@plt+0x8d84>
  40ba90:	mov	x0, x19
  40ba94:	mov	w1, #0xa                   	// #10
  40ba98:	ldp	x19, x20, [sp, #16]
  40ba9c:	ldp	x21, x22, [sp, #32]
  40baa0:	ldp	x29, x30, [sp], #48
  40baa4:	b	40da7c <nftw@plt+0xad8c>
  40baa8:	mov	x2, x0
  40baac:	mov	x0, x1
  40bab0:	cbz	x2, 40babc <nftw@plt+0x8dcc>
  40bab4:	mov	x16, x2
  40bab8:	br	x16
  40babc:	ret
  40bac0:	mov	x1, x0
  40bac4:	mov	w2, #0x1                   	// #1
  40bac8:	strb	w2, [x1], #8
  40bacc:	str	xzr, [x0, #8]
  40bad0:	adrp	x0, 402000 <memcpy@plt-0x5d0>
  40bad4:	add	x0, x0, #0xa00
  40bad8:	stp	x0, xzr, [x1, #8]
  40badc:	adrp	x0, 40c000 <nftw@plt+0x9310>
  40bae0:	add	x0, x0, #0x50
  40bae4:	str	x0, [x1, #24]
  40bae8:	ret
  40baec:	mov	x2, x0
  40baf0:	str	x1, [x2], #8
  40baf4:	adrp	x1, 40b000 <nftw@plt+0x8310>
  40baf8:	add	x1, x1, #0xa44
  40bafc:	str	xzr, [x0, #8]
  40bb00:	stp	x1, xzr, [x2, #8]
  40bb04:	adrp	x1, 40b000 <nftw@plt+0x8310>
  40bb08:	add	x1, x1, #0xc44
  40bb0c:	str	x1, [x2, #24]
  40bb10:	mov	w1, #0xffffffff            	// #-1
  40bb14:	str	w1, [x0, #40]
  40bb18:	ret
  40bb1c:	stp	x29, x30, [sp, #-32]!
  40bb20:	mov	x29, sp
  40bb24:	stp	x19, x20, [sp, #16]
  40bb28:	cbnz	x1, 40bb44 <nftw@plt+0x8e54>
  40bb2c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40bb30:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40bb34:	add	x2, x2, #0x66a
  40bb38:	add	x0, x0, #0x678
  40bb3c:	mov	w1, #0x296                 	// #662
  40bb40:	bl	402d60 <nftw@plt+0x70>
  40bb44:	mov	x19, x0
  40bb48:	ldr	w0, [x0, #40]
  40bb4c:	mov	x20, x1
  40bb50:	cmn	w0, #0x1
  40bb54:	b.ne	40bb80 <nftw@plt+0x8e90>  // b.any
  40bb58:	str	wzr, [x19, #40]
  40bb5c:	ldr	x0, [x19]
  40bb60:	ldr	w1, [x19, #40]
  40bb64:	add	w1, w1, #0x1
  40bb68:	bl	412230 <nftw@plt+0xf540>
  40bb6c:	cbz	x0, 40bb80 <nftw@plt+0x8e90>
  40bb70:	ldr	w0, [x19, #40]
  40bb74:	add	w0, w0, #0x1
  40bb78:	str	w0, [x19, #40]
  40bb7c:	b	40bb5c <nftw@plt+0x8e6c>
  40bb80:	ldr	x0, [x19]
  40bb84:	bl	4117c0 <nftw@plt+0xead0>
  40bb88:	strb	w0, [x20]
  40bb8c:	ldr	w0, [x19, #40]
  40bb90:	ldp	x19, x20, [sp, #16]
  40bb94:	ldp	x29, x30, [sp], #32
  40bb98:	ret
  40bb9c:	stp	x29, x30, [sp, #-48]!
  40bba0:	mov	x29, sp
  40bba4:	stp	x19, x20, [sp, #16]
  40bba8:	mov	x19, x0
  40bbac:	mov	w20, #0x0                   	// #0
  40bbb0:	ldr	x0, [x0, #8]
  40bbb4:	str	x21, [sp, #32]
  40bbb8:	bl	402a80 <free@plt>
  40bbbc:	ldr	x0, [x19, #32]
  40bbc0:	cbz	x0, 40bbf0 <nftw@plt+0x8f00>
  40bbc4:	ldr	w1, [x0, #4]
  40bbc8:	cmp	w20, w1
  40bbcc:	b.cs	40bbe4 <nftw@plt+0x8ef4>  // b.hs, b.nlast
  40bbd0:	add	x1, x0, w20, uxtw #3
  40bbd4:	ldr	x21, [x1, #8]
  40bbd8:	cbnz	x21, 40bc14 <nftw@plt+0x8f24>
  40bbdc:	add	w20, w20, #0x1
  40bbe0:	b	40bbbc <nftw@plt+0x8ecc>
  40bbe4:	ldrsb	w1, [x0, #3]
  40bbe8:	tbz	w1, #31, 40bc2c <nftw@plt+0x8f3c>
  40bbec:	str	wzr, [x0, #4]
  40bbf0:	ldr	x0, [x19, #24]
  40bbf4:	cbz	x0, 40bc04 <nftw@plt+0x8f14>
  40bbf8:	ldrsb	w1, [x0, #3]
  40bbfc:	tbz	w1, #31, 40bc34 <nftw@plt+0x8f44>
  40bc00:	str	wzr, [x0, #4]
  40bc04:	ldp	x19, x20, [sp, #16]
  40bc08:	ldr	x21, [sp, #32]
  40bc0c:	ldp	x29, x30, [sp], #48
  40bc10:	ret
  40bc14:	ldr	x0, [x21]
  40bc18:	bl	402a80 <free@plt>
  40bc1c:	mov	x0, x21
  40bc20:	mov	x1, #0x10                  	// #16
  40bc24:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  40bc28:	b	40bbdc <nftw@plt+0x8eec>
  40bc2c:	bl	402a80 <free@plt>
  40bc30:	b	40bbf0 <nftw@plt+0x8f00>
  40bc34:	ldp	x19, x20, [sp, #16]
  40bc38:	ldr	x21, [sp, #32]
  40bc3c:	ldp	x29, x30, [sp], #48
  40bc40:	b	402a80 <free@plt>
  40bc44:	cbz	x0, 40bc70 <nftw@plt+0x8f80>
  40bc48:	stp	x29, x30, [sp, #-32]!
  40bc4c:	mov	x29, sp
  40bc50:	str	x19, [sp, #16]
  40bc54:	mov	x19, x0
  40bc58:	bl	40bb9c <nftw@plt+0x8eac>
  40bc5c:	mov	x0, x19
  40bc60:	mov	x1, #0x28                  	// #40
  40bc64:	ldr	x19, [sp, #16]
  40bc68:	ldp	x29, x30, [sp], #32
  40bc6c:	b	43d660 <_obstack_memory_used@@Base+0x608>
  40bc70:	ret
  40bc74:	ldr	x3, [x0, #24]
  40bc78:	mov	w0, w1
  40bc7c:	mov	w1, #0x0                   	// #0
  40bc80:	add	x2, x3, #0xc
  40bc84:	cbz	x3, 40bcb4 <nftw@plt+0x8fc4>
  40bc88:	ldr	w4, [x3, #4]
  40bc8c:	cmp	w4, w1
  40bc90:	b.ls	40bcb4 <nftw@plt+0x8fc4>  // b.plast
  40bc94:	ldur	w4, [x2, #-4]
  40bc98:	cmp	w0, w4
  40bc9c:	b.lt	40bca8 <nftw@plt+0x8fb8>  // b.tstop
  40bca0:	ldr	w4, [x2]
  40bca4:	add	w0, w0, w4
  40bca8:	add	w1, w1, #0x1
  40bcac:	add	x2, x2, #0x8
  40bcb0:	b	40bc84 <nftw@plt+0x8f94>
  40bcb4:	ret
  40bcb8:	ldr	x0, [x0, #32]
  40bcbc:	cbz	x0, 40bccc <nftw@plt+0x8fdc>
  40bcc0:	ldr	w0, [x0, #4]
  40bcc4:	add	w0, w0, #0x1
  40bcc8:	ret
  40bccc:	mov	w0, #0x0                   	// #0
  40bcd0:	b	40bcc4 <nftw@plt+0x8fd4>
  40bcd4:	stp	x29, x30, [sp, #-48]!
  40bcd8:	mov	x29, sp
  40bcdc:	stp	x19, x20, [sp, #16]
  40bce0:	mov	x20, x0
  40bce4:	mov	x19, x1
  40bce8:	str	x21, [sp, #32]
  40bcec:	mov	w21, #0x0                   	// #0
  40bcf0:	ldr	x1, [x20, #32]
  40bcf4:	cbz	x1, 40bd28 <nftw@plt+0x9038>
  40bcf8:	ldr	w0, [x1, #4]
  40bcfc:	cmp	w21, w0
  40bd00:	b.cs	40bd28 <nftw@plt+0x9038>  // b.hs, b.nlast
  40bd04:	add	x1, x1, w21, uxtw #3
  40bd08:	add	w21, w21, #0x1
  40bd0c:	ldr	x0, [x1, #8]
  40bd10:	ldr	x1, [x0]
  40bd14:	mov	x0, x19
  40bd18:	bl	40de28 <nftw@plt+0xb138>
  40bd1c:	mov	x0, x19
  40bd20:	bl	40da20 <nftw@plt+0xad30>
  40bd24:	b	40bcf0 <nftw@plt+0x9000>
  40bd28:	mov	x0, x19
  40bd2c:	ldr	x1, [x20, #8]
  40bd30:	ldp	x19, x20, [sp, #16]
  40bd34:	ldr	x21, [sp, #32]
  40bd38:	ldp	x29, x30, [sp], #48
  40bd3c:	b	40de28 <nftw@plt+0xb138>
  40bd40:	stp	x29, x30, [sp, #-48]!
  40bd44:	mov	x29, sp
  40bd48:	stp	x19, x20, [sp, #16]
  40bd4c:	mov	x19, x0
  40bd50:	mov	x20, x1
  40bd54:	str	x21, [sp, #32]
  40bd58:	mov	w21, #0x0                   	// #0
  40bd5c:	ldr	x0, [x19, #32]
  40bd60:	cbz	x0, 40bd94 <nftw@plt+0x90a4>
  40bd64:	ldr	w1, [x0, #4]
  40bd68:	cmp	w21, w1
  40bd6c:	b.cs	40bd94 <nftw@plt+0x90a4>  // b.hs, b.nlast
  40bd70:	add	x0, x0, w21, uxtw #3
  40bd74:	mov	w1, #0x2b                  	// #43
  40bd78:	add	w21, w21, #0x1
  40bd7c:	ldr	x0, [x0, #8]
  40bd80:	ldr	w3, [x0, #8]
  40bd84:	ldr	x2, [x0]
  40bd88:	mov	x0, x20
  40bd8c:	bl	40ba4c <nftw@plt+0x8d5c>
  40bd90:	b	40bd5c <nftw@plt+0x906c>
  40bd94:	mov	x0, x19
  40bd98:	bl	40cc40 <nftw@plt+0x9f50>
  40bd9c:	ldr	w3, [x19, #16]
  40bda0:	tst	w0, #0xff
  40bda4:	ldr	x2, [x19, #8]
  40bda8:	b.eq	40bdc4 <nftw@plt+0x90d4>  // b.none
  40bdac:	mov	w1, #0x2b                  	// #43
  40bdb0:	mov	x0, x20
  40bdb4:	ldp	x19, x20, [sp, #16]
  40bdb8:	ldr	x21, [sp, #32]
  40bdbc:	ldp	x29, x30, [sp], #48
  40bdc0:	b	40ba4c <nftw@plt+0x8d5c>
  40bdc4:	mov	w1, #0x20                  	// #32
  40bdc8:	b	40bdb0 <nftw@plt+0x90c0>
  40bdcc:	stp	x29, x30, [sp, #-32]!
  40bdd0:	mov	x29, sp
  40bdd4:	stp	x19, x20, [sp, #16]
  40bdd8:	mov	x20, x0
  40bddc:	ldr	w0, [x0, #20]
  40bde0:	cmp	w0, w1
  40bde4:	b.gt	40be04 <nftw@plt+0x9114>
  40bde8:	add	w1, w1, #0x1
  40bdec:	ldr	x0, [x20, #8]
  40bdf0:	lsl	w19, w1, #1
  40bdf4:	sxtw	x1, w19
  40bdf8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  40bdfc:	str	x0, [x20, #8]
  40be00:	str	w19, [x20, #20]
  40be04:	ldp	x19, x20, [sp, #16]
  40be08:	ldp	x29, x30, [sp], #32
  40be0c:	ret
  40be10:	ldp	w1, w2, [x0, #16]
  40be14:	cmp	w1, w2
  40be18:	b.lt	40be3c <nftw@plt+0x914c>  // b.tstop
  40be1c:	stp	x29, x30, [sp, #-16]!
  40be20:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40be24:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40be28:	mov	x29, sp
  40be2c:	add	x2, x2, #0x652
  40be30:	add	x0, x0, #0x678
  40be34:	mov	w1, #0x36b                 	// #875
  40be38:	bl	402d60 <nftw@plt+0x70>
  40be3c:	ldr	x0, [x0, #8]
  40be40:	strb	wzr, [x0, w1, sxtw]
  40be44:	ret
  40be48:	stp	x29, x30, [sp, #-32]!
  40be4c:	mov	x29, sp
  40be50:	stp	x19, x20, [sp, #16]
  40be54:	mov	x19, x0
  40be58:	mov	x0, x1
  40be5c:	mov	w1, w2
  40be60:	str	w2, [x19]
  40be64:	stp	xzr, xzr, [x19, #8]
  40be68:	stp	xzr, xzr, [x19, #24]
  40be6c:	bl	412230 <nftw@plt+0xf540>
  40be70:	cbz	x0, 40bea4 <nftw@plt+0x91b4>
  40be74:	str	w1, [x19, #16]
  40be78:	mov	x20, x0
  40be7c:	mov	x0, x19
  40be80:	bl	40bdcc <nftw@plt+0x90dc>
  40be84:	ldrsw	x2, [x19, #16]
  40be88:	mov	x1, x20
  40be8c:	ldr	x0, [x19, #8]
  40be90:	bl	4025d0 <memcpy@plt>
  40be94:	mov	x0, x19
  40be98:	ldp	x19, x20, [sp, #16]
  40be9c:	ldp	x29, x30, [sp], #32
  40bea0:	b	40be10 <nftw@plt+0x9120>
  40bea4:	ldp	x19, x20, [sp, #16]
  40bea8:	ldp	x29, x30, [sp], #32
  40beac:	ret
  40beb0:	stp	x29, x30, [sp, #-112]!
  40beb4:	mov	w5, w2
  40beb8:	cmp	w4, #0x1
  40bebc:	mov	x29, sp
  40bec0:	stp	x19, x20, [sp, #16]
  40bec4:	mov	x19, x0
  40bec8:	mov	w20, w4
  40becc:	stp	x21, x22, [sp, #32]
  40bed0:	stp	x23, x24, [sp, #48]
  40bed4:	stp	x25, x26, [sp, #64]
  40bed8:	mov	x25, x3
  40bedc:	str	x27, [sp, #80]
  40bee0:	b.le	40bf48 <nftw@plt+0x9258>
  40bee4:	add	x0, x3, w4, sxtw
  40bee8:	ldurb	w0, [x0, #-1]
  40beec:	cmp	w0, #0xa
  40bef0:	b.ne	40bf48 <nftw@plt+0x9258>  // b.any
  40bef4:	mov	x0, #0x10                  	// #16
  40bef8:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40befc:	mov	x21, x0
  40bf00:	sub	w20, w20, #0x1
  40bf04:	mov	x0, x25
  40bf08:	sxtw	x1, w20
  40bf0c:	bl	43d2f4 <_obstack_memory_used@@Base+0x29c>
  40bf10:	str	x0, [x21]
  40bf14:	add	x1, sp, #0x68
  40bf18:	str	w20, [x21, #8]
  40bf1c:	add	x0, x19, #0x20
  40bf20:	str	x21, [sp, #104]
  40bf24:	bl	40cc60 <nftw@plt+0x9f70>
  40bf28:	mov	w0, #0x1                   	// #1
  40bf2c:	ldp	x19, x20, [sp, #16]
  40bf30:	ldp	x21, x22, [sp, #32]
  40bf34:	ldp	x23, x24, [sp, #48]
  40bf38:	ldp	x25, x26, [sp, #64]
  40bf3c:	ldr	x27, [sp, #80]
  40bf40:	ldp	x29, x30, [sp], #112
  40bf44:	ret
  40bf48:	mov	x0, x19
  40bf4c:	bl	40bc74 <nftw@plt+0x8f84>
  40bf50:	mov	w24, w0
  40bf54:	mov	w1, w5
  40bf58:	mov	x0, x19
  40bf5c:	bl	40bc74 <nftw@plt+0x8f84>
  40bf60:	subs	w23, w24, #0x1
  40bf64:	sub	w22, w0, #0x1
  40bf68:	b.pl	40bf84 <nftw@plt+0x9294>  // b.nfrst
  40bf6c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40bf70:	add	x2, x2, #0x691
  40bf74:	mov	w1, #0x2fa                 	// #762
  40bf78:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40bf7c:	add	x0, x0, #0x678
  40bf80:	bl	402d60 <nftw@plt+0x70>
  40bf84:	tbz	w22, #31, 40bf98 <nftw@plt+0x92a8>
  40bf88:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40bf8c:	mov	w1, #0x2fb                 	// #763
  40bf90:	add	x2, x2, #0x691
  40bf94:	b	40bf78 <nftw@plt+0x9288>
  40bf98:	cmp	w24, w0
  40bf9c:	b.gt	40c048 <nftw@plt+0x9358>
  40bfa0:	ldr	w1, [x19, #16]
  40bfa4:	cmp	w1, w23
  40bfa8:	b.lt	40c048 <nftw@plt+0x9358>  // b.tstop
  40bfac:	cmp	w1, w22
  40bfb0:	b.lt	40c048 <nftw@plt+0x9358>  // b.tstop
  40bfb4:	sub	w21, w0, w24
  40bfb8:	add	w1, w1, w20
  40bfbc:	sub	w26, w1, w21
  40bfc0:	mov	x0, x19
  40bfc4:	mov	w1, w26
  40bfc8:	bl	40bdcc <nftw@plt+0x90dc>
  40bfcc:	ldr	x0, [x19, #8]
  40bfd0:	sxtw	x3, w22
  40bfd4:	ldrsw	x2, [x19, #16]
  40bfd8:	add	x1, x0, w22, sxtw
  40bfdc:	add	x4, x0, x2
  40bfe0:	cmp	x1, x4
  40bfe4:	b.ls	40bff8 <nftw@plt+0x9308>  // b.plast
  40bfe8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40bfec:	mov	w1, #0x30b                 	// #779
  40bff0:	add	x2, x2, #0x691
  40bff4:	b	40bf78 <nftw@plt+0x9288>
  40bff8:	sxtw	x22, w20
  40bffc:	sxtw	x27, w23
  40c000:	add	x23, x22, w23, sxtw
  40c004:	sub	x2, x2, x3
  40c008:	add	x0, x0, x23
  40c00c:	bl	4025e0 <memmove@plt>
  40c010:	ldr	x0, [x19, #8]
  40c014:	mov	x1, x25
  40c018:	mov	x2, x22
  40c01c:	sub	w20, w20, w21
  40c020:	add	x0, x0, x27
  40c024:	bl	4025d0 <memcpy@plt>
  40c028:	str	w26, [x19, #16]
  40c02c:	mov	x0, x19
  40c030:	bl	40be10 <nftw@plt+0x9120>
  40c034:	stp	w24, w20, [sp, #104]
  40c038:	add	x1, sp, #0x68
  40c03c:	add	x0, x19, #0x18
  40c040:	bl	40cd84 <nftw@plt+0xa094>
  40c044:	b	40bf28 <nftw@plt+0x9238>
  40c048:	mov	w0, #0x0                   	// #0
  40c04c:	b	40bf2c <nftw@plt+0x923c>
  40c050:	cbz	x0, 40c084 <nftw@plt+0x9394>
  40c054:	stp	x29, x30, [sp, #-32]!
  40c058:	mov	x29, sp
  40c05c:	str	x19, [sp, #16]
  40c060:	mov	x19, x0
  40c064:	add	x0, x0, #0x8
  40c068:	ldr	x1, [x19, #8]
  40c06c:	bl	40cea4 <nftw@plt+0xa1b4>
  40c070:	mov	x0, x19
  40c074:	mov	x1, #0x30                  	// #48
  40c078:	ldr	x19, [sp, #16]
  40c07c:	ldp	x29, x30, [sp], #32
  40c080:	b	43d660 <_obstack_memory_used@@Base+0x608>
  40c084:	ret
  40c088:	stp	x29, x30, [sp, #-48]!
  40c08c:	mov	x29, sp
  40c090:	stp	x19, x20, [sp, #16]
  40c094:	str	x21, [sp, #32]
  40c098:	cbnz	x1, 40c0b4 <nftw@plt+0x93c4>
  40c09c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c0a0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c0a4:	add	x2, x2, #0x69d
  40c0a8:	add	x0, x0, #0x678
  40c0ac:	mov	w1, #0x140                 	// #320
  40c0b0:	bl	402d60 <nftw@plt+0x70>
  40c0b4:	mov	x19, x0
  40c0b8:	add	x21, x0, #0x8
  40c0bc:	mov	x20, x1
  40c0c0:	mov	x0, x21
  40c0c4:	bl	40cf84 <nftw@plt+0xa294>
  40c0c8:	ldr	x2, [x19, #8]
  40c0cc:	cbnz	x2, 40c0e4 <nftw@plt+0x93f4>
  40c0d0:	mov	x0, #0x0                   	// #0
  40c0d4:	ldp	x19, x20, [sp, #16]
  40c0d8:	ldr	x21, [sp, #32]
  40c0dc:	ldp	x29, x30, [sp], #48
  40c0e0:	ret
  40c0e4:	ldr	x0, [x2]
  40c0e8:	mov	x1, x20
  40c0ec:	ldr	x3, [x21, #8]
  40c0f0:	blr	x3
  40c0f4:	cbnz	w0, 40c0d0 <nftw@plt+0x93e0>
  40c0f8:	ldr	x0, [x19, #8]
  40c0fc:	cbz	x0, 40c0d0 <nftw@plt+0x93e0>
  40c100:	ldr	x0, [x0, #8]
  40c104:	b	40c0d4 <nftw@plt+0x93e4>
  40c108:	stp	x29, x30, [sp, #-48]!
  40c10c:	mov	x29, sp
  40c110:	stp	x19, x20, [sp, #16]
  40c114:	stp	x21, x22, [sp, #32]
  40c118:	cbnz	x1, 40c134 <nftw@plt+0x9444>
  40c11c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c120:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c124:	add	x2, x2, #0x6a6
  40c128:	add	x0, x0, #0x678
  40c12c:	mov	w1, #0x149                 	// #329
  40c130:	bl	402d60 <nftw@plt+0x70>
  40c134:	mov	x20, x0
  40c138:	mov	x21, x1
  40c13c:	bl	40c088 <nftw@plt+0x9398>
  40c140:	mov	x19, x0
  40c144:	cbnz	x0, 40c1cc <nftw@plt+0x94dc>
  40c148:	mov	x0, #0x30                  	// #48
  40c14c:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40c150:	mov	x19, x0
  40c154:	str	x21, [x0], #8
  40c158:	adrp	x1, 40b000 <nftw@plt+0x8310>
  40c15c:	add	x1, x1, #0xa44
  40c160:	add	x22, x20, #0x8
  40c164:	str	xzr, [x19, #8]
  40c168:	stp	x1, xzr, [x0, #8]
  40c16c:	adrp	x1, 40b000 <nftw@plt+0x8310>
  40c170:	add	x1, x1, #0xc44
  40c174:	str	x1, [x0, #24]
  40c178:	mov	w0, #0xffffffff            	// #-1
  40c17c:	str	w0, [x19, #40]
  40c180:	mov	x1, x21
  40c184:	mov	x0, x22
  40c188:	bl	40cf84 <nftw@plt+0xa294>
  40c18c:	ldr	x2, [x20, #8]
  40c190:	cbz	x2, 40c1e0 <nftw@plt+0x94f0>
  40c194:	ldr	x0, [x2]
  40c198:	mov	x1, x21
  40c19c:	ldr	x3, [x20, #16]
  40c1a0:	blr	x3
  40c1a4:	mov	w22, w0
  40c1a8:	ldr	x0, [x20, #8]
  40c1ac:	cbz	x0, 40c1e8 <nftw@plt+0x94f8>
  40c1b0:	cbnz	w22, 40c1e8 <nftw@plt+0x94f8>
  40c1b4:	ldr	x1, [x20, #32]
  40c1b8:	cbz	x1, 40c1c4 <nftw@plt+0x94d4>
  40c1bc:	ldr	x0, [x0, #8]
  40c1c0:	blr	x1
  40c1c4:	ldr	x0, [x20, #8]
  40c1c8:	str	x19, [x0, #8]
  40c1cc:	mov	x0, x19
  40c1d0:	ldp	x19, x20, [sp, #16]
  40c1d4:	ldp	x21, x22, [sp, #32]
  40c1d8:	ldp	x29, x30, [sp], #48
  40c1dc:	ret
  40c1e0:	mov	w22, #0x0                   	// #0
  40c1e4:	b	40c1a8 <nftw@plt+0x94b8>
  40c1e8:	mov	x0, #0x28                  	// #40
  40c1ec:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40c1f0:	ldr	x1, [x20, #8]
  40c1f4:	stp	x21, x19, [x0]
  40c1f8:	cbnz	x1, 40c208 <nftw@plt+0x9518>
  40c1fc:	stp	xzr, xzr, [x0, #16]
  40c200:	str	x0, [x20, #8]
  40c204:	b	40c1cc <nftw@plt+0x94dc>
  40c208:	tbz	w22, #31, 40c21c <nftw@plt+0x952c>
  40c20c:	ldr	x2, [x1, #24]
  40c210:	stp	x1, x2, [x0, #16]
  40c214:	str	xzr, [x1, #24]
  40c218:	b	40c200 <nftw@plt+0x9510>
  40c21c:	ldr	x2, [x1, #16]
  40c220:	stp	x2, x1, [x0, #16]
  40c224:	str	xzr, [x1, #16]
  40c228:	b	40c200 <nftw@plt+0x9510>
  40c22c:	add	x0, x0, #0x8
  40c230:	b	40d2c8 <nftw@plt+0xa5d8>
  40c234:	stp	x29, x30, [sp, #-32]!
  40c238:	add	x0, x0, #0x8
  40c23c:	mov	x29, sp
  40c240:	str	x19, [sp, #16]
  40c244:	mov	w19, w2
  40c248:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c24c:	cbz	x0, 40c260 <nftw@plt+0x9570>
  40c250:	mov	w1, w19
  40c254:	ldr	x19, [sp, #16]
  40c258:	ldp	x29, x30, [sp], #32
  40c25c:	b	40bc74 <nftw@plt+0x8f84>
  40c260:	mov	w0, w19
  40c264:	ldr	x19, [sp, #16]
  40c268:	ldp	x29, x30, [sp], #32
  40c26c:	ret
  40c270:	stp	x29, x30, [sp, #-32]!
  40c274:	mov	x29, sp
  40c278:	stp	x19, x20, [sp, #16]
  40c27c:	mov	w20, w2
  40c280:	mov	w19, w3
  40c284:	bl	40c088 <nftw@plt+0x9398>
  40c288:	cbz	x0, 40c2a0 <nftw@plt+0x95b0>
  40c28c:	mov	w2, w19
  40c290:	mov	w1, w20
  40c294:	ldp	x19, x20, [sp, #16]
  40c298:	ldp	x29, x30, [sp], #32
  40c29c:	b	40c234 <nftw@plt+0x9544>
  40c2a0:	mov	w0, w19
  40c2a4:	ldp	x19, x20, [sp, #16]
  40c2a8:	ldp	x29, x30, [sp], #32
  40c2ac:	ret
  40c2b0:	stp	x29, x30, [sp, #-112]!
  40c2b4:	mov	x29, sp
  40c2b8:	stp	x19, x20, [sp, #16]
  40c2bc:	mov	x19, x1
  40c2c0:	add	x1, sp, #0x6f
  40c2c4:	stp	x21, x22, [sp, #32]
  40c2c8:	mov	w20, #0x1                   	// #1
  40c2cc:	stp	x23, x24, [sp, #48]
  40c2d0:	mov	x23, x0
  40c2d4:	stp	x25, x26, [sp, #64]
  40c2d8:	add	x26, x0, #0x8
  40c2dc:	str	x27, [sp, #80]
  40c2e0:	bl	40bb1c <nftw@plt+0x8e2c>
  40c2e4:	mov	w22, w0
  40c2e8:	mov	x27, #0x80000000            	// #2147483648
  40c2ec:	cmp	w20, w22
  40c2f0:	b.gt	40c3bc <nftw@plt+0x96cc>
  40c2f4:	mov	w1, w20
  40c2f8:	mov	x0, x26
  40c2fc:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c300:	cbz	x0, 40c328 <nftw@plt+0x9638>
  40c304:	mov	x1, x19
  40c308:	bl	40bcd4 <nftw@plt+0x8fe4>
  40c30c:	cmp	w20, w22
  40c310:	b.ge	40c320 <nftw@plt+0x9630>  // b.tcont
  40c314:	mov	x0, x19
  40c318:	mov	w1, #0xa                   	// #10
  40c31c:	bl	40da7c <nftw@plt+0xad8c>
  40c320:	add	w20, w20, #0x1
  40c324:	b	40c2ec <nftw@plt+0x95fc>
  40c328:	ldr	x0, [x23]
  40c32c:	mov	w1, w20
  40c330:	bl	412230 <nftw@plt+0xf540>
  40c334:	mov	x24, x0
  40c338:	mov	x25, x1
  40c33c:	cbnz	x0, 40c360 <nftw@plt+0x9670>
  40c340:	mov	w0, #0x0                   	// #0
  40c344:	ldp	x19, x20, [sp, #16]
  40c348:	ldp	x21, x22, [sp, #32]
  40c34c:	ldp	x23, x24, [sp, #48]
  40c350:	ldp	x25, x26, [sp, #64]
  40c354:	ldr	x27, [sp, #80]
  40c358:	ldp	x29, x30, [sp], #112
  40c35c:	ret
  40c360:	mov	x21, #0x0                   	// #0
  40c364:	cmp	x21, x25
  40c368:	b.cs	40c30c <nftw@plt+0x961c>  // b.hs, b.nlast
  40c36c:	cmp	x21, x27
  40c370:	b.ne	40c38c <nftw@plt+0x969c>  // b.any
  40c374:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c378:	add	x2, x2, #0x6b9
  40c37c:	mov	w1, #0x3d                  	// #61
  40c380:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c384:	add	x0, x0, #0x640
  40c388:	bl	402d60 <nftw@plt+0x70>
  40c38c:	sxtw	x0, w21
  40c390:	cmp	x25, w21, sxtw
  40c394:	b.hi	40c3a8 <nftw@plt+0x96b8>  // b.pmore
  40c398:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c39c:	mov	w1, #0x3e                  	// #62
  40c3a0:	add	x2, x2, #0x6b9
  40c3a4:	b	40c380 <nftw@plt+0x9690>
  40c3a8:	ldrb	w1, [x24, x0]
  40c3ac:	add	x21, x21, #0x1
  40c3b0:	mov	x0, x19
  40c3b4:	bl	40da7c <nftw@plt+0xad8c>
  40c3b8:	b	40c364 <nftw@plt+0x9674>
  40c3bc:	ldrb	w0, [sp, #111]
  40c3c0:	cbnz	w0, 40c344 <nftw@plt+0x9654>
  40c3c4:	mov	x0, x19
  40c3c8:	mov	w1, #0xa                   	// #10
  40c3cc:	bl	40da7c <nftw@plt+0xad8c>
  40c3d0:	mov	w0, #0x1                   	// #1
  40c3d4:	b	40c344 <nftw@plt+0x9654>
  40c3d8:	stp	x29, x30, [sp, #-64]!
  40c3dc:	mov	x29, sp
  40c3e0:	stp	x19, x20, [sp, #16]
  40c3e4:	mov	x19, x1
  40c3e8:	mov	w20, w2
  40c3ec:	stp	x21, x22, [sp, #32]
  40c3f0:	mov	x21, x0
  40c3f4:	ldrb	w0, [x19, #67]
  40c3f8:	mov	w22, w20
  40c3fc:	stp	x23, x24, [sp, #48]
  40c400:	add	x24, x21, #0x8
  40c404:	mov	w23, w3
  40c408:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c40c:	add	x1, x1, #0x4d0
  40c410:	bl	40900c <nftw@plt+0x631c>
  40c414:	mov	x1, x0
  40c418:	mov	x0, x19
  40c41c:	bl	40de28 <nftw@plt+0xb138>
  40c420:	cmp	w22, w23
  40c424:	b.gt	40c484 <nftw@plt+0x9794>
  40c428:	mov	w1, w22
  40c42c:	mov	x0, x24
  40c430:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c434:	cbnz	x0, 40c450 <nftw@plt+0x9760>
  40c438:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c43c:	add	x2, x2, #0x6c4
  40c440:	mov	w1, #0x239                 	// #569
  40c444:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c448:	add	x0, x0, #0x678
  40c44c:	bl	402d60 <nftw@plt+0x70>
  40c450:	bl	40cc40 <nftw@plt+0x9f50>
  40c454:	tst	w0, #0xff
  40c458:	b.eq	40c47c <nftw@plt+0x978c>  // b.none
  40c45c:	ldr	x0, [x21]
  40c460:	mov	w1, w22
  40c464:	bl	412230 <nftw@plt+0xf540>
  40c468:	mov	w3, w1
  40c46c:	mov	x2, x0
  40c470:	mov	w1, #0x2d                  	// #45
  40c474:	mov	x0, x19
  40c478:	bl	40ba4c <nftw@plt+0x8d5c>
  40c47c:	add	w22, w22, #0x1
  40c480:	b	40c420 <nftw@plt+0x9730>
  40c484:	ldrb	w0, [x19, #67]
  40c488:	add	x21, x21, #0x8
  40c48c:	bl	409328 <nftw@plt+0x6638>
  40c490:	mov	x1, x0
  40c494:	mov	x0, x19
  40c498:	bl	40de28 <nftw@plt+0xb138>
  40c49c:	ldrb	w0, [x19, #67]
  40c4a0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c4a4:	add	x1, x1, #0x4dc
  40c4a8:	bl	40900c <nftw@plt+0x631c>
  40c4ac:	mov	x1, x0
  40c4b0:	mov	x0, x19
  40c4b4:	bl	40de28 <nftw@plt+0xb138>
  40c4b8:	cmp	w20, w23
  40c4bc:	b.gt	40c4f0 <nftw@plt+0x9800>
  40c4c0:	mov	w1, w20
  40c4c4:	mov	x0, x21
  40c4c8:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c4cc:	cbnz	x0, 40c4e0 <nftw@plt+0x97f0>
  40c4d0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c4d4:	mov	w1, #0x24b                 	// #587
  40c4d8:	add	x2, x2, #0x6c4
  40c4dc:	b	40c444 <nftw@plt+0x9754>
  40c4e0:	mov	x1, x19
  40c4e4:	add	w20, w20, #0x1
  40c4e8:	bl	40bd40 <nftw@plt+0x9050>
  40c4ec:	b	40c4b8 <nftw@plt+0x97c8>
  40c4f0:	ldrb	w0, [x19, #67]
  40c4f4:	bl	409328 <nftw@plt+0x6638>
  40c4f8:	mov	x1, x0
  40c4fc:	mov	x0, x19
  40c500:	ldp	x19, x20, [sp, #16]
  40c504:	ldp	x21, x22, [sp, #32]
  40c508:	ldp	x23, x24, [sp, #48]
  40c50c:	ldp	x29, x30, [sp], #64
  40c510:	b	40de28 <nftw@plt+0xb138>
  40c514:	stp	x29, x30, [sp, #-48]!
  40c518:	mov	x29, sp
  40c51c:	stp	x19, x20, [sp, #16]
  40c520:	mov	w19, w1
  40c524:	mov	w20, #0x0                   	// #0
  40c528:	stp	x21, x22, [sp, #32]
  40c52c:	mov	w21, w2
  40c530:	add	x22, x0, #0x8
  40c534:	cmp	w19, w21
  40c538:	b.gt	40c564 <nftw@plt+0x9874>
  40c53c:	mov	w1, w19
  40c540:	mov	x0, x22
  40c544:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c548:	cbz	x0, 40c55c <nftw@plt+0x986c>
  40c54c:	bl	40bcb8 <nftw@plt+0x8fc8>
  40c550:	add	w20, w20, w0
  40c554:	add	w19, w19, #0x1
  40c558:	b	40c534 <nftw@plt+0x9844>
  40c55c:	add	w20, w20, #0x1
  40c560:	b	40c554 <nftw@plt+0x9864>
  40c564:	mov	w0, w20
  40c568:	ldp	x19, x20, [sp, #16]
  40c56c:	ldp	x21, x22, [sp, #32]
  40c570:	ldp	x29, x30, [sp], #48
  40c574:	ret
  40c578:	stp	x29, x30, [sp, #-80]!
  40c57c:	mov	x29, sp
  40c580:	stp	x19, x20, [sp, #16]
  40c584:	mov	x20, x1
  40c588:	mov	w19, w2
  40c58c:	mov	w1, w19
  40c590:	stp	x21, x22, [sp, #32]
  40c594:	mov	w21, w4
  40c598:	mov	x22, x0
  40c59c:	stp	x23, x24, [sp, #48]
  40c5a0:	sub	w24, w3, w2
  40c5a4:	mov	w23, w3
  40c5a8:	mov	w2, w3
  40c5ac:	stp	x25, x26, [sp, #64]
  40c5b0:	bl	40c514 <nftw@plt+0x9824>
  40c5b4:	mov	w25, w0
  40c5b8:	ldrb	w0, [x20, #67]
  40c5bc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c5c0:	add	x1, x1, #0x4bd
  40c5c4:	add	w24, w24, #0x1
  40c5c8:	add	x26, x22, #0x8
  40c5cc:	bl	40900c <nftw@plt+0x631c>
  40c5d0:	mov	x1, x0
  40c5d4:	mov	x0, x20
  40c5d8:	bl	40de28 <nftw@plt+0xb138>
  40c5dc:	mov	w5, w25
  40c5e0:	mov	w4, w21
  40c5e4:	mov	w3, w24
  40c5e8:	mov	w2, w19
  40c5ec:	mov	x0, x20
  40c5f0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c5f4:	add	x1, x1, #0x6df
  40c5f8:	bl	40f470 <nftw@plt+0xc780>
  40c5fc:	ldrb	w0, [x20, #67]
  40c600:	bl	409328 <nftw@plt+0x6638>
  40c604:	mov	x1, x0
  40c608:	mov	x0, x20
  40c60c:	bl	40de28 <nftw@plt+0xb138>
  40c610:	cmp	w19, w23
  40c614:	b.gt	40c688 <nftw@plt+0x9998>
  40c618:	mov	w1, w19
  40c61c:	mov	x0, x26
  40c620:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c624:	cbz	x0, 40c660 <nftw@plt+0x9970>
  40c628:	mov	w21, w19
  40c62c:	mov	w1, w21
  40c630:	mov	x0, x26
  40c634:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c638:	cbz	x0, 40c644 <nftw@plt+0x9954>
  40c63c:	add	w21, w21, #0x1
  40c640:	b	40c62c <nftw@plt+0x993c>
  40c644:	sub	w3, w21, #0x1
  40c648:	mov	w2, w19
  40c64c:	mov	x1, x20
  40c650:	mov	x0, x22
  40c654:	bl	40c3d8 <nftw@plt+0x96e8>
  40c658:	mov	w19, w21
  40c65c:	b	40c610 <nftw@plt+0x9920>
  40c660:	ldr	x0, [x22]
  40c664:	mov	w1, w19
  40c668:	add	w21, w19, #0x1
  40c66c:	bl	412230 <nftw@plt+0xf540>
  40c670:	mov	w3, w1
  40c674:	mov	x2, x0
  40c678:	mov	w1, #0x20                  	// #32
  40c67c:	mov	x0, x20
  40c680:	bl	40ba4c <nftw@plt+0x8d5c>
  40c684:	b	40c658 <nftw@plt+0x9968>
  40c688:	sub	w0, w25, w24
  40c68c:	ldp	x19, x20, [sp, #16]
  40c690:	ldp	x21, x22, [sp, #32]
  40c694:	ldp	x23, x24, [sp, #48]
  40c698:	ldp	x25, x26, [sp, #64]
  40c69c:	ldp	x29, x30, [sp], #80
  40c6a0:	ret
  40c6a4:	stp	x29, x30, [sp, #-112]!
  40c6a8:	tst	w2, #0xff
  40c6ac:	mov	x29, sp
  40c6b0:	stp	x19, x20, [sp, #16]
  40c6b4:	mov	x20, x1
  40c6b8:	stp	x21, x22, [sp, #32]
  40c6bc:	mov	x21, x0
  40c6c0:	stp	x23, x24, [sp, #48]
  40c6c4:	stp	x25, x26, [sp, #64]
  40c6c8:	stp	x27, x28, [sp, #80]
  40c6cc:	b.eq	40c728 <nftw@plt+0x9a38>  // b.none
  40c6d0:	ldrb	w0, [x20, #67]
  40c6d4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c6d8:	add	x1, x1, #0x4af
  40c6dc:	bl	40900c <nftw@plt+0x631c>
  40c6e0:	mov	x1, x0
  40c6e4:	mov	x0, x20
  40c6e8:	bl	40de28 <nftw@plt+0xb138>
  40c6ec:	ldr	x2, [x21]
  40c6f0:	mov	x0, x20
  40c6f4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c6f8:	add	x1, x1, #0x6f4
  40c6fc:	bl	40f470 <nftw@plt+0xc780>
  40c700:	ldr	x2, [x21]
  40c704:	mov	x0, x20
  40c708:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40c70c:	add	x1, x1, #0x6fc
  40c710:	bl	40f470 <nftw@plt+0xc780>
  40c714:	ldrb	w0, [x20, #67]
  40c718:	bl	409328 <nftw@plt+0x6638>
  40c71c:	mov	x1, x0
  40c720:	mov	x0, x20
  40c724:	bl	40de28 <nftw@plt+0xb138>
  40c728:	ldr	x19, [x21, #8]
  40c72c:	add	x26, x21, #0x8
  40c730:	cbz	x19, 40c744 <nftw@plt+0x9a54>
  40c734:	mov	x0, x19
  40c738:	ldr	x19, [x19, #16]
  40c73c:	cbnz	x19, 40c734 <nftw@plt+0x9a44>
  40c740:	ldr	x19, [x0, #8]
  40c744:	add	x1, sp, #0x6f
  40c748:	mov	x0, x21
  40c74c:	bl	40bb1c <nftw@plt+0x8e2c>
  40c750:	mov	w24, w0
  40c754:	mov	w25, #0x0                   	// #0
  40c758:	mov	w27, #0x1                   	// #1
  40c75c:	cbz	x19, 40c808 <nftw@plt+0x9b18>
  40c760:	ldr	w22, [x19]
  40c764:	sub	w22, w22, #0x3
  40c768:	cmp	w22, #0x0
  40c76c:	csel	w22, w22, w27, gt
  40c770:	ldr	w1, [x19]
  40c774:	mov	x0, x26
  40c778:	bl	40d25c <nftw@plt+0xa56c>
  40c77c:	ldr	w23, [x19]
  40c780:	cbz	x0, 40c7b4 <nftw@plt+0x9ac4>
  40c784:	ldr	x28, [x0, #8]
  40c788:	mov	x0, x19
  40c78c:	bl	40cc40 <nftw@plt+0x9f50>
  40c790:	and	w0, w0, #0xff
  40c794:	cbz	x28, 40c7b4 <nftw@plt+0x9ac4>
  40c798:	cmp	w0, #0x0
  40c79c:	ldr	w1, [x28]
  40c7a0:	cinc	w0, w23, ne  // ne = any
  40c7a4:	add	w0, w0, #0x2
  40c7a8:	sub	w1, w1, #0x3
  40c7ac:	cmp	w1, w0
  40c7b0:	b.le	40c800 <nftw@plt+0x9b10>
  40c7b4:	mov	x0, x19
  40c7b8:	bl	40cc40 <nftw@plt+0x9f50>
  40c7bc:	tst	w0, #0xff
  40c7c0:	add	w4, w25, w22
  40c7c4:	cinc	w3, w23, ne  // ne = any
  40c7c8:	mov	x1, x20
  40c7cc:	add	w3, w3, #0x2
  40c7d0:	mov	w2, w22
  40c7d4:	cmp	w3, w24
  40c7d8:	mov	x0, x21
  40c7dc:	csel	w3, w3, w24, le
  40c7e0:	bl	40c578 <nftw@plt+0x9888>
  40c7e4:	add	w25, w25, w0
  40c7e8:	ldr	w1, [x19]
  40c7ec:	mov	x0, x26
  40c7f0:	bl	40d25c <nftw@plt+0xa56c>
  40c7f4:	cbz	x0, 40c808 <nftw@plt+0x9b18>
  40c7f8:	ldr	x19, [x0, #8]
  40c7fc:	b	40c75c <nftw@plt+0x9a6c>
  40c800:	mov	x19, x28
  40c804:	b	40c770 <nftw@plt+0x9a80>
  40c808:	ldp	x19, x20, [sp, #16]
  40c80c:	ldp	x21, x22, [sp, #32]
  40c810:	ldp	x23, x24, [sp, #48]
  40c814:	ldp	x25, x26, [sp, #64]
  40c818:	ldp	x27, x28, [sp, #80]
  40c81c:	ldp	x29, x30, [sp], #112
  40c820:	ret
  40c824:	stp	x29, x30, [sp, #-48]!
  40c828:	mov	x29, sp
  40c82c:	stp	x21, x22, [sp, #32]
  40c830:	mov	x21, x1
  40c834:	ldrb	w1, [x0]
  40c838:	stp	x19, x20, [sp, #16]
  40c83c:	cbz	w1, 40c884 <nftw@plt+0x9b94>
  40c840:	ldr	x20, [x0, #8]
  40c844:	and	w22, w2, #0xff
  40c848:	mov	x19, #0x0                   	// #0
  40c84c:	cbz	x20, 40c864 <nftw@plt+0x9b74>
  40c850:	ldr	x0, [x20, #16]
  40c854:	str	x19, [x20, #32]
  40c858:	mov	x19, x20
  40c85c:	mov	x20, x0
  40c860:	b	40c84c <nftw@plt+0x9b5c>
  40c864:	cbz	x19, 40c884 <nftw@plt+0x9b94>
  40c868:	ldr	x0, [x19, #8]
  40c86c:	mov	w2, w22
  40c870:	mov	x1, x21
  40c874:	ldr	x20, [x19, #32]
  40c878:	bl	40c6a4 <nftw@plt+0x99b4>
  40c87c:	ldr	x0, [x19, #24]
  40c880:	b	40c858 <nftw@plt+0x9b68>
  40c884:	ldp	x19, x20, [sp, #16]
  40c888:	ldp	x21, x22, [sp, #32]
  40c88c:	ldp	x29, x30, [sp], #48
  40c890:	ret
  40c894:	stp	x29, x30, [sp, #-48]!
  40c898:	mov	x29, sp
  40c89c:	stp	x21, x22, [sp, #32]
  40c8a0:	add	x22, x0, #0x8
  40c8a4:	mov	w21, w1
  40c8a8:	stp	x19, x20, [sp, #16]
  40c8ac:	mov	x20, x0
  40c8b0:	mov	x0, x22
  40c8b4:	bl	40d2c8 <nftw@plt+0xa5d8>
  40c8b8:	mov	x19, x0
  40c8bc:	cbnz	x0, 40c8f8 <nftw@plt+0x9c08>
  40c8c0:	mov	x0, #0x28                  	// #40
  40c8c4:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40c8c8:	ldr	x1, [x20]
  40c8cc:	mov	x19, x0
  40c8d0:	mov	w2, w21
  40c8d4:	bl	40be48 <nftw@plt+0x9158>
  40c8d8:	ldr	x0, [x19, #8]
  40c8dc:	cbnz	x0, 40c90c <nftw@plt+0x9c1c>
  40c8e0:	mov	x0, x19
  40c8e4:	bl	40bb9c <nftw@plt+0x8eac>
  40c8e8:	mov	x0, x19
  40c8ec:	mov	x19, #0x0                   	// #0
  40c8f0:	mov	x1, #0x28                  	// #40
  40c8f4:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  40c8f8:	mov	x0, x19
  40c8fc:	ldp	x19, x20, [sp, #16]
  40c900:	ldp	x21, x22, [sp, #32]
  40c904:	ldp	x29, x30, [sp], #48
  40c908:	ret
  40c90c:	mov	x0, x22
  40c910:	mov	w1, w21
  40c914:	bl	40d0f0 <nftw@plt+0xa400>
  40c918:	ldr	x0, [x20, #8]
  40c91c:	cbz	x0, 40c958 <nftw@plt+0x9c68>
  40c920:	ldr	w0, [x0]
  40c924:	mov	w1, w21
  40c928:	ldr	x2, [x22, #8]
  40c92c:	blr	x2
  40c930:	mov	w22, w0
  40c934:	ldr	x0, [x20, #8]
  40c938:	cbz	x0, 40c960 <nftw@plt+0x9c70>
  40c93c:	cbnz	w22, 40c960 <nftw@plt+0x9c70>
  40c940:	ldr	x1, [x0, #8]
  40c944:	ldr	x0, [x20, #32]
  40c948:	bl	40baa8 <nftw@plt+0x8db8>
  40c94c:	ldr	x0, [x20, #8]
  40c950:	str	x19, [x0, #8]
  40c954:	b	40c8f8 <nftw@plt+0x9c08>
  40c958:	mov	w22, #0x0                   	// #0
  40c95c:	b	40c934 <nftw@plt+0x9c44>
  40c960:	mov	x0, #0x28                  	// #40
  40c964:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40c968:	ldr	x1, [x20, #8]
  40c96c:	str	w21, [x0]
  40c970:	str	x19, [x0, #8]
  40c974:	cbnz	x1, 40c984 <nftw@plt+0x9c94>
  40c978:	stp	xzr, xzr, [x0, #16]
  40c97c:	str	x0, [x20, #8]
  40c980:	b	40c8f8 <nftw@plt+0x9c08>
  40c984:	tbz	w22, #31, 40c998 <nftw@plt+0x9ca8>
  40c988:	ldr	x2, [x1, #24]
  40c98c:	stp	x1, x2, [x0, #16]
  40c990:	str	xzr, [x1, #24]
  40c994:	b	40c97c <nftw@plt+0x9c8c>
  40c998:	ldr	x2, [x1, #16]
  40c99c:	stp	x2, x1, [x0, #16]
  40c9a0:	str	xzr, [x1, #16]
  40c9a4:	b	40c97c <nftw@plt+0x9c8c>
  40c9a8:	stp	x29, x30, [sp, #-48]!
  40c9ac:	mov	x29, sp
  40c9b0:	stp	x19, x20, [sp, #16]
  40c9b4:	mov	w19, w2
  40c9b8:	mov	w20, w3
  40c9bc:	stp	x21, x22, [sp, #32]
  40c9c0:	mov	x21, x4
  40c9c4:	mov	w22, w5
  40c9c8:	bl	40c894 <nftw@plt+0x9ba4>
  40c9cc:	cbz	x0, 40c9f0 <nftw@plt+0x9d00>
  40c9d0:	mov	w4, w22
  40c9d4:	mov	x3, x21
  40c9d8:	mov	w2, w20
  40c9dc:	mov	w1, w19
  40c9e0:	ldp	x19, x20, [sp, #16]
  40c9e4:	ldp	x21, x22, [sp, #32]
  40c9e8:	ldp	x29, x30, [sp], #48
  40c9ec:	b	40beb0 <nftw@plt+0x91c0>
  40c9f0:	mov	w0, #0x0                   	// #0
  40c9f4:	ldp	x19, x20, [sp, #16]
  40c9f8:	ldp	x21, x22, [sp, #32]
  40c9fc:	ldp	x29, x30, [sp], #48
  40ca00:	ret
  40ca04:	stp	x29, x30, [sp, #-128]!
  40ca08:	mov	x29, sp
  40ca0c:	stp	x19, x20, [sp, #16]
  40ca10:	mov	x20, x0
  40ca14:	ldr	w0, [x1]
  40ca18:	mov	x19, x1
  40ca1c:	add	x8, sp, #0x40
  40ca20:	stp	x21, x22, [sp, #32]
  40ca24:	str	x23, [sp, #48]
  40ca28:	bl	411644 <nftw@plt+0xe954>
  40ca2c:	ldr	w0, [x19, #4]
  40ca30:	add	x8, sp, #0x60
  40ca34:	ldp	w23, w22, [sp, #72]
  40ca38:	ldr	x21, [sp, #64]
  40ca3c:	bl	411644 <nftw@plt+0xe954>
  40ca40:	ldr	x1, [sp, #96]
  40ca44:	cmp	x1, x21
  40ca48:	b.ne	40ca9c <nftw@plt+0x9dac>  // b.any
  40ca4c:	ldr	w21, [sp, #104]
  40ca50:	cmp	w21, w23
  40ca54:	b.ne	40ca9c <nftw@plt+0x9dac>  // b.any
  40ca58:	cbz	w22, 40ca9c <nftw@plt+0x9dac>
  40ca5c:	ldr	w23, [sp, #108]
  40ca60:	cbz	w23, 40ca9c <nftw@plt+0x9dac>
  40ca64:	mov	x0, x20
  40ca68:	bl	40c108 <nftw@plt+0x9418>
  40ca6c:	ldrb	w1, [x20]
  40ca70:	cbz	w1, 40ca9c <nftw@plt+0x9dac>
  40ca74:	ldr	w5, [x19, #16]
  40ca78:	mov	w3, w23
  40ca7c:	mov	w2, w22
  40ca80:	mov	w1, w21
  40ca84:	ldr	x4, [x19, #8]
  40ca88:	ldp	x19, x20, [sp, #16]
  40ca8c:	ldp	x21, x22, [sp, #32]
  40ca90:	ldr	x23, [sp, #48]
  40ca94:	ldp	x29, x30, [sp], #128
  40ca98:	b	40c9a8 <nftw@plt+0x9cb8>
  40ca9c:	mov	w0, #0x0                   	// #0
  40caa0:	ldp	x19, x20, [sp, #16]
  40caa4:	ldp	x21, x22, [sp, #32]
  40caa8:	ldr	x23, [sp, #48]
  40caac:	ldp	x29, x30, [sp], #128
  40cab0:	ret
  40cab4:	stp	x29, x30, [sp, #-64]!
  40cab8:	mov	x29, sp
  40cabc:	stp	x19, x20, [sp, #16]
  40cac0:	mov	x20, x0
  40cac4:	ldrb	w0, [x0]
  40cac8:	stp	x21, x22, [sp, #32]
  40cacc:	str	x23, [sp, #48]
  40cad0:	cbz	w0, 40cae4 <nftw@plt+0x9df4>
  40cad4:	ldrb	w0, [x1, #160]
  40cad8:	mov	x21, x1
  40cadc:	cbz	w0, 40caf8 <nftw@plt+0x9e08>
  40cae0:	strb	wzr, [x20]
  40cae4:	ldp	x19, x20, [sp, #16]
  40cae8:	ldp	x21, x22, [sp, #32]
  40caec:	ldr	x23, [sp, #48]
  40caf0:	ldp	x29, x30, [sp], #64
  40caf4:	ret
  40caf8:	add	x22, x1, #0x78
  40cafc:	mov	w19, #0x0                   	// #0
  40cb00:	mov	x23, #0xfffffffffffffff0    	// #-16
  40cb04:	ldr	w0, [x21, #120]
  40cb08:	cmp	w19, w0
  40cb0c:	b.cs	40cae4 <nftw@plt+0x9df4>  // b.hs, b.nlast
  40cb10:	sxtw	x2, w19
  40cb14:	cmp	w19, #0x1
  40cb18:	b.gt	40cb44 <nftw@plt+0x9e54>
  40cb1c:	add	x2, x2, #0x1
  40cb20:	add	x2, x22, x2, lsl #3
  40cb24:	ldr	x1, [x2]
  40cb28:	mov	x0, x20
  40cb2c:	bl	40ca04 <nftw@plt+0x9d14>
  40cb30:	tst	w0, #0xff
  40cb34:	b.ne	40cb3c <nftw@plt+0x9e4c>  // b.any
  40cb38:	strb	wzr, [x20]
  40cb3c:	add	w19, w19, #0x1
  40cb40:	b	40cb04 <nftw@plt+0x9e14>
  40cb44:	ldr	x3, [x22, #32]
  40cb48:	add	x2, x23, w19, sxtw #3
  40cb4c:	add	x2, x3, x2
  40cb50:	b	40cb24 <nftw@plt+0x9e34>
  40cb54:	stp	x29, x30, [sp, #-112]!
  40cb58:	mov	x29, sp
  40cb5c:	stp	x19, x20, [sp, #16]
  40cb60:	mov	x19, x0
  40cb64:	ldrb	w0, [x0]
  40cb68:	cbz	w0, 40cbb4 <nftw@plt+0x9ec4>
  40cb6c:	and	w20, w1, #0xff
  40cb70:	add	x0, sp, #0x28
  40cb74:	mov	w1, #0x0                   	// #0
  40cb78:	bl	40d7ac <nftw@plt+0xaabc>
  40cb7c:	mov	w2, w20
  40cb80:	add	x1, sp, #0x28
  40cb84:	mov	x0, x19
  40cb88:	bl	40c824 <nftw@plt+0x9b34>
  40cb8c:	add	x0, sp, #0x28
  40cb90:	bl	40d814 <nftw@plt+0xab24>
  40cb94:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  40cb98:	mov	x19, x0
  40cb9c:	add	x0, sp, #0x28
  40cba0:	bl	40d664 <nftw@plt+0xa974>
  40cba4:	mov	x0, x19
  40cba8:	ldp	x19, x20, [sp, #16]
  40cbac:	ldp	x29, x30, [sp], #112
  40cbb0:	ret
  40cbb4:	mov	x19, #0x0                   	// #0
  40cbb8:	b	40cba4 <nftw@plt+0x9eb4>
  40cbbc:	stp	x29, x30, [sp, #-112]!
  40cbc0:	mov	w1, #0x0                   	// #0
  40cbc4:	mov	x29, sp
  40cbc8:	str	x19, [sp, #16]
  40cbcc:	mov	x19, x0
  40cbd0:	add	x0, sp, #0x28
  40cbd4:	bl	40d7ac <nftw@plt+0xaabc>
  40cbd8:	add	x1, sp, #0x28
  40cbdc:	mov	x0, x19
  40cbe0:	bl	40c2b0 <nftw@plt+0x95c0>
  40cbe4:	tst	w0, #0xff
  40cbe8:	b.eq	40cc14 <nftw@plt+0x9f24>  // b.none
  40cbec:	add	x0, sp, #0x28
  40cbf0:	bl	40d814 <nftw@plt+0xab24>
  40cbf4:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  40cbf8:	mov	x19, x0
  40cbfc:	add	x0, sp, #0x28
  40cc00:	bl	40d664 <nftw@plt+0xa974>
  40cc04:	mov	x0, x19
  40cc08:	ldr	x19, [sp, #16]
  40cc0c:	ldp	x29, x30, [sp], #112
  40cc10:	ret
  40cc14:	mov	x19, #0x0                   	// #0
  40cc18:	b	40cbfc <nftw@plt+0x9f0c>
  40cc1c:	ldrb	w2, [x0]
  40cc20:	cbz	w2, 40cc38 <nftw@plt+0x9f48>
  40cc24:	stp	x29, x30, [sp, #-16]!
  40cc28:	mov	x29, sp
  40cc2c:	bl	40c108 <nftw@plt+0x9418>
  40cc30:	ldp	x29, x30, [sp], #16
  40cc34:	b	40cbbc <nftw@plt+0x9ecc>
  40cc38:	mov	x0, #0x0                   	// #0
  40cc3c:	ret
  40cc40:	ldr	x0, [x0, #24]
  40cc44:	cbz	x0, 40cc58 <nftw@plt+0x9f68>
  40cc48:	ldr	w0, [x0, #4]
  40cc4c:	cmp	w0, #0x0
  40cc50:	cset	w0, ne  // ne = any
  40cc54:	ret
  40cc58:	mov	w0, #0x0                   	// #0
  40cc5c:	b	40cc4c <nftw@plt+0x9f5c>
  40cc60:	stp	x29, x30, [sp, #-80]!
  40cc64:	mov	x29, sp
  40cc68:	stp	x21, x22, [sp, #32]
  40cc6c:	ldr	x22, [x0]
  40cc70:	stp	x19, x20, [sp, #16]
  40cc74:	mov	x20, x0
  40cc78:	stp	x23, x24, [sp, #48]
  40cc7c:	mov	x23, x1
  40cc80:	str	x25, [sp, #64]
  40cc84:	cbz	x22, 40cd18 <nftw@plt+0xa028>
  40cc88:	ldp	w0, w21, [x22]
  40cc8c:	ubfx	x0, x0, #0, #31
  40cc90:	cmp	w0, w21
  40cc94:	b.ne	40cd44 <nftw@plt+0xa054>  // b.any
  40cc98:	ldrsb	w0, [x22, #3]
  40cc9c:	tbz	w0, #31, 40cd18 <nftw@plt+0xa028>
  40cca0:	add	w2, w21, #0x1
  40cca4:	mov	w24, #0x1                   	// #1
  40cca8:	str	xzr, [x20]
  40ccac:	ldr	x0, [x20]
  40ccb0:	cbz	x0, 40cd28 <nftw@plt+0xa038>
  40ccb4:	ldr	w1, [x0, #4]
  40ccb8:	ldr	w0, [x0]
  40ccbc:	add	w1, w2, w1
  40ccc0:	and	w0, w0, #0x7fffffff
  40ccc4:	bl	40fbec <nftw@plt+0xcefc>
  40ccc8:	mov	w19, w0
  40cccc:	ldr	x0, [x20]
  40ccd0:	ubfiz	x1, x19, #3, #32
  40ccd4:	add	x1, x1, #0x8
  40ccd8:	cbz	x0, 40cd38 <nftw@plt+0xa048>
  40ccdc:	ldr	w25, [x0, #4]
  40cce0:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  40cce4:	str	x0, [x20]
  40cce8:	and	w2, w19, #0x7fffffff
  40ccec:	stp	w2, w25, [x0]
  40ccf0:	cbz	w24, 40cd44 <nftw@plt+0xa054>
  40ccf4:	mov	w3, w21
  40ccf8:	mov	x1, #0x0                   	// #0
  40ccfc:	add	x2, x1, #0x1
  40cd00:	cmp	x3, x1
  40cd04:	b.eq	40cd40 <nftw@plt+0xa050>  // b.none
  40cd08:	ldr	x1, [x22, x2, lsl #3]
  40cd0c:	str	x1, [x0, x2, lsl #3]
  40cd10:	mov	x1, x2
  40cd14:	b	40ccfc <nftw@plt+0xa00c>
  40cd18:	mov	w24, #0x0                   	// #0
  40cd1c:	mov	w21, #0x0                   	// #0
  40cd20:	mov	w2, #0x1                   	// #1
  40cd24:	b	40ccac <nftw@plt+0x9fbc>
  40cd28:	cmp	w2, #0x4
  40cd2c:	mov	w19, #0x4                   	// #4
  40cd30:	csel	w19, w2, w19, cs  // cs = hs, nlast
  40cd34:	b	40cccc <nftw@plt+0x9fdc>
  40cd38:	mov	w25, #0x0                   	// #0
  40cd3c:	b	40cce0 <nftw@plt+0x9ff0>
  40cd40:	str	w21, [x0, #4]
  40cd44:	ldr	x0, [x20]
  40cd48:	ldr	x3, [x23]
  40cd4c:	ldr	w1, [x0, #4]
  40cd50:	ldp	x19, x20, [sp, #16]
  40cd54:	add	w2, w1, #0x1
  40cd58:	ldp	x21, x22, [sp, #32]
  40cd5c:	ldp	x23, x24, [sp, #48]
  40cd60:	ldr	x25, [sp, #64]
  40cd64:	str	w2, [x0, #4]
  40cd68:	add	x2, x0, w1, uxtw #3
  40cd6c:	ubfiz	x1, x1, #3, #32
  40cd70:	add	x1, x1, #0x8
  40cd74:	add	x0, x0, x1
  40cd78:	str	x3, [x2, #8]
  40cd7c:	ldp	x29, x30, [sp], #80
  40cd80:	ret
  40cd84:	stp	x29, x30, [sp, #-80]!
  40cd88:	mov	x29, sp
  40cd8c:	stp	x21, x22, [sp, #32]
  40cd90:	ldr	x22, [x0]
  40cd94:	stp	x19, x20, [sp, #16]
  40cd98:	mov	x20, x0
  40cd9c:	stp	x23, x24, [sp, #48]
  40cda0:	mov	x23, x1
  40cda4:	str	x25, [sp, #64]
  40cda8:	cbz	x22, 40ce3c <nftw@plt+0xa14c>
  40cdac:	ldp	w0, w21, [x22]
  40cdb0:	ubfx	x0, x0, #0, #31
  40cdb4:	cmp	w0, w21
  40cdb8:	b.ne	40ce68 <nftw@plt+0xa178>  // b.any
  40cdbc:	ldrsb	w0, [x22, #3]
  40cdc0:	tbz	w0, #31, 40ce3c <nftw@plt+0xa14c>
  40cdc4:	add	w2, w21, #0x1
  40cdc8:	mov	w24, #0x1                   	// #1
  40cdcc:	str	xzr, [x20]
  40cdd0:	ldr	x0, [x20]
  40cdd4:	cbz	x0, 40ce4c <nftw@plt+0xa15c>
  40cdd8:	ldr	w1, [x0, #4]
  40cddc:	ldr	w0, [x0]
  40cde0:	add	w1, w2, w1
  40cde4:	and	w0, w0, #0x7fffffff
  40cde8:	bl	40fbec <nftw@plt+0xcefc>
  40cdec:	mov	w19, w0
  40cdf0:	ldr	x0, [x20]
  40cdf4:	ubfiz	x1, x19, #3, #32
  40cdf8:	add	x1, x1, #0x8
  40cdfc:	cbz	x0, 40ce5c <nftw@plt+0xa16c>
  40ce00:	ldr	w25, [x0, #4]
  40ce04:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  40ce08:	str	x0, [x20]
  40ce0c:	and	w2, w19, #0x7fffffff
  40ce10:	stp	w2, w25, [x0]
  40ce14:	cbz	w24, 40ce68 <nftw@plt+0xa178>
  40ce18:	mov	w3, w21
  40ce1c:	mov	x1, #0x0                   	// #0
  40ce20:	add	x2, x1, #0x1
  40ce24:	cmp	x3, x1
  40ce28:	b.eq	40ce64 <nftw@plt+0xa174>  // b.none
  40ce2c:	ldr	x1, [x22, x2, lsl #3]
  40ce30:	str	x1, [x0, x2, lsl #3]
  40ce34:	mov	x1, x2
  40ce38:	b	40ce20 <nftw@plt+0xa130>
  40ce3c:	mov	w24, #0x0                   	// #0
  40ce40:	mov	w21, #0x0                   	// #0
  40ce44:	mov	w2, #0x1                   	// #1
  40ce48:	b	40cdd0 <nftw@plt+0xa0e0>
  40ce4c:	cmp	w2, #0x4
  40ce50:	mov	w19, #0x4                   	// #4
  40ce54:	csel	w19, w2, w19, cs  // cs = hs, nlast
  40ce58:	b	40cdf0 <nftw@plt+0xa100>
  40ce5c:	mov	w25, #0x0                   	// #0
  40ce60:	b	40ce04 <nftw@plt+0xa114>
  40ce64:	str	w21, [x0, #4]
  40ce68:	ldr	x2, [x20]
  40ce6c:	ldr	x3, [x23]
  40ce70:	ldr	w1, [x2, #4]
  40ce74:	ldp	x19, x20, [sp, #16]
  40ce78:	add	w0, w1, #0x1
  40ce7c:	ubfiz	x1, x1, #3, #32
  40ce80:	ldp	x21, x22, [sp, #32]
  40ce84:	ldp	x23, x24, [sp, #48]
  40ce88:	ldr	x25, [sp, #64]
  40ce8c:	str	w0, [x2, #4]
  40ce90:	add	x0, x1, #0x8
  40ce94:	str	x3, [x2, x0]
  40ce98:	add	x0, x2, x0
  40ce9c:	ldp	x29, x30, [sp], #80
  40cea0:	ret
  40cea4:	cbz	x1, 40cf80 <nftw@plt+0xa290>
  40cea8:	stp	x29, x30, [sp, #-48]!
  40ceac:	mov	x29, sp
  40ceb0:	stp	x19, x20, [sp, #16]
  40ceb4:	mov	x19, x1
  40ceb8:	ldr	x1, [x0, #16]
  40cebc:	stp	x21, x22, [sp, #32]
  40cec0:	mov	x21, x0
  40cec4:	cbz	x1, 40ced0 <nftw@plt+0xa1e0>
  40cec8:	ldr	w0, [x19]
  40cecc:	blr	x1
  40ced0:	ldr	x1, [x19, #8]
  40ced4:	ldr	x0, [x21, #24]
  40ced8:	bl	40baa8 <nftw@plt+0x8db8>
  40cedc:	str	xzr, [x19, #32]
  40cee0:	mov	x20, x19
  40cee4:	mov	x19, #0x0                   	// #0
  40cee8:	ldr	x0, [x20, #16]
  40ceec:	cbz	x0, 40cf1c <nftw@plt+0xa22c>
  40cef0:	ldr	x1, [x21, #16]
  40cef4:	cbz	x1, 40cf00 <nftw@plt+0xa210>
  40cef8:	ldr	w0, [x0]
  40cefc:	blr	x1
  40cf00:	ldr	x0, [x20, #16]
  40cf04:	ldr	x1, [x0, #8]
  40cf08:	ldr	x0, [x21, #24]
  40cf0c:	bl	40baa8 <nftw@plt+0x8db8>
  40cf10:	ldr	x0, [x20, #16]
  40cf14:	str	x19, [x0, #32]
  40cf18:	mov	x19, x0
  40cf1c:	ldr	x0, [x20, #24]
  40cf20:	cbz	x0, 40cf50 <nftw@plt+0xa260>
  40cf24:	ldr	x1, [x21, #16]
  40cf28:	cbz	x1, 40cf34 <nftw@plt+0xa244>
  40cf2c:	ldr	w0, [x0]
  40cf30:	blr	x1
  40cf34:	ldr	x0, [x20, #24]
  40cf38:	ldr	x1, [x0, #8]
  40cf3c:	ldr	x0, [x21, #24]
  40cf40:	bl	40baa8 <nftw@plt+0x8db8>
  40cf44:	ldr	x0, [x20, #24]
  40cf48:	str	x19, [x0, #32]
  40cf4c:	mov	x19, x0
  40cf50:	ldr	x22, [x20, #32]
  40cf54:	mov	x0, x20
  40cf58:	mov	x1, #0x28                  	// #40
  40cf5c:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  40cf60:	cbz	x22, 40cf6c <nftw@plt+0xa27c>
  40cf64:	mov	x20, x22
  40cf68:	b	40cee8 <nftw@plt+0xa1f8>
  40cf6c:	cbnz	x19, 40cee0 <nftw@plt+0xa1f0>
  40cf70:	ldp	x19, x20, [sp, #16]
  40cf74:	ldp	x21, x22, [sp, #32]
  40cf78:	ldp	x29, x30, [sp], #48
  40cf7c:	ret
  40cf80:	ret
  40cf84:	stp	x29, x30, [sp, #-64]!
  40cf88:	mov	x29, sp
  40cf8c:	stp	x21, x22, [sp, #32]
  40cf90:	mov	x21, x0
  40cf94:	ldr	x0, [x0]
  40cf98:	stp	x19, x20, [sp, #16]
  40cf9c:	str	x23, [sp, #48]
  40cfa0:	mov	x23, x1
  40cfa4:	cbz	x0, 40cffc <nftw@plt+0xa30c>
  40cfa8:	ldp	x20, x2, [x21]
  40cfac:	mov	x0, x23
  40cfb0:	ldr	x1, [x20]
  40cfb4:	blr	x2
  40cfb8:	mov	w22, w0
  40cfbc:	cmp	w0, #0x0
  40cfc0:	cbz	w0, 40cffc <nftw@plt+0xa30c>
  40cfc4:	ldp	x0, x19, [x20, #16]
  40cfc8:	csel	x19, x19, x0, ge  // ge = tcont
  40cfcc:	cbz	x19, 40cffc <nftw@plt+0xa30c>
  40cfd0:	ldr	x1, [x19]
  40cfd4:	mov	x0, x23
  40cfd8:	ldr	x2, [x21, #8]
  40cfdc:	blr	x2
  40cfe0:	cmp	w0, #0x0
  40cfe4:	cbnz	w0, 40d010 <nftw@plt+0xa320>
  40cfe8:	tbz	w22, #31, 40d060 <nftw@plt+0xa370>
  40cfec:	ldr	x0, [x19, #24]
  40cff0:	str	x20, [x19, #24]
  40cff4:	str	x0, [x20, #16]
  40cff8:	str	x19, [x21]
  40cffc:	ldp	x19, x20, [sp, #16]
  40d000:	ldp	x21, x22, [sp, #32]
  40d004:	ldr	x23, [sp, #48]
  40d008:	ldp	x29, x30, [sp], #64
  40d00c:	ret
  40d010:	b.ge	40d058 <nftw@plt+0xa368>  // b.tcont
  40d014:	ldr	x1, [x19, #16]
  40d018:	cbz	x1, 40cfe8 <nftw@plt+0xa2f8>
  40d01c:	lsr	w3, w22, #31
  40d020:	lsr	w2, w0, #31
  40d024:	cmp	w3, #0x0
  40d028:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40d02c:	b.eq	40d070 <nftw@plt+0xa380>  // b.none
  40d030:	ldr	x0, [x19, #16]
  40d034:	ldr	x1, [x0, #24]
  40d038:	str	x19, [x0, #24]
  40d03c:	str	x1, [x19, #16]
  40d040:	str	x0, [x20, #16]
  40d044:	ldr	x1, [x0, #24]
  40d048:	str	x20, [x0, #24]
  40d04c:	str	x1, [x20, #16]
  40d050:	str	x0, [x21]
  40d054:	b	40cfa8 <nftw@plt+0xa2b8>
  40d058:	ldr	x1, [x19, #24]
  40d05c:	b	40d018 <nftw@plt+0xa328>
  40d060:	ldr	x0, [x19, #16]
  40d064:	str	x20, [x19, #16]
  40d068:	str	x0, [x20, #24]
  40d06c:	b	40cff8 <nftw@plt+0xa308>
  40d070:	cmp	w22, #0x0
  40d074:	cset	w1, gt
  40d078:	cmp	w0, #0x0
  40d07c:	cset	w0, gt
  40d080:	cmp	w1, #0x0
  40d084:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d088:	b.eq	40d0b0 <nftw@plt+0xa3c0>  // b.none
  40d08c:	ldr	x0, [x19, #24]
  40d090:	ldr	x1, [x0, #16]
  40d094:	str	x19, [x0, #16]
  40d098:	str	x1, [x19, #24]
  40d09c:	str	x0, [x20, #24]
  40d0a0:	ldr	x1, [x0, #16]
  40d0a4:	str	x20, [x0, #16]
  40d0a8:	str	x1, [x20, #24]
  40d0ac:	b	40d050 <nftw@plt+0xa360>
  40d0b0:	cmp	w3, #0x0
  40d0b4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d0b8:	b.eq	40d0d0 <nftw@plt+0xa3e0>  // b.none
  40d0bc:	ldr	x0, [x19, #24]
  40d0c0:	ldr	x1, [x0, #16]
  40d0c4:	str	x19, [x0, #16]
  40d0c8:	str	x1, [x19, #24]
  40d0cc:	b	40d040 <nftw@plt+0xa350>
  40d0d0:	cmp	w2, #0x0
  40d0d4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40d0d8:	b.eq	40cfa8 <nftw@plt+0xa2b8>  // b.none
  40d0dc:	ldr	x0, [x19, #16]
  40d0e0:	ldr	x1, [x0, #24]
  40d0e4:	str	x19, [x0, #24]
  40d0e8:	str	x1, [x19, #16]
  40d0ec:	b	40d09c <nftw@plt+0xa3ac>
  40d0f0:	stp	x29, x30, [sp, #-64]!
  40d0f4:	mov	x29, sp
  40d0f8:	stp	x21, x22, [sp, #32]
  40d0fc:	mov	x21, x0
  40d100:	ldr	x0, [x0]
  40d104:	stp	x19, x20, [sp, #16]
  40d108:	str	x23, [sp, #48]
  40d10c:	mov	w23, w1
  40d110:	cbz	x0, 40d168 <nftw@plt+0xa478>
  40d114:	ldp	x20, x2, [x21]
  40d118:	mov	w0, w23
  40d11c:	ldr	w1, [x20]
  40d120:	blr	x2
  40d124:	mov	w22, w0
  40d128:	cmp	w0, #0x0
  40d12c:	cbz	w0, 40d168 <nftw@plt+0xa478>
  40d130:	ldp	x0, x19, [x20, #16]
  40d134:	csel	x19, x19, x0, ge  // ge = tcont
  40d138:	cbz	x19, 40d168 <nftw@plt+0xa478>
  40d13c:	ldr	w1, [x19]
  40d140:	mov	w0, w23
  40d144:	ldr	x2, [x21, #8]
  40d148:	blr	x2
  40d14c:	cmp	w0, #0x0
  40d150:	cbnz	w0, 40d17c <nftw@plt+0xa48c>
  40d154:	tbz	w22, #31, 40d1cc <nftw@plt+0xa4dc>
  40d158:	ldr	x0, [x19, #24]
  40d15c:	str	x20, [x19, #24]
  40d160:	str	x0, [x20, #16]
  40d164:	str	x19, [x21]
  40d168:	ldp	x19, x20, [sp, #16]
  40d16c:	ldp	x21, x22, [sp, #32]
  40d170:	ldr	x23, [sp, #48]
  40d174:	ldp	x29, x30, [sp], #64
  40d178:	ret
  40d17c:	b.ge	40d1c4 <nftw@plt+0xa4d4>  // b.tcont
  40d180:	ldr	x1, [x19, #16]
  40d184:	cbz	x1, 40d154 <nftw@plt+0xa464>
  40d188:	lsr	w3, w22, #31
  40d18c:	lsr	w2, w0, #31
  40d190:	cmp	w3, #0x0
  40d194:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  40d198:	b.eq	40d1dc <nftw@plt+0xa4ec>  // b.none
  40d19c:	ldr	x0, [x19, #16]
  40d1a0:	ldr	x1, [x0, #24]
  40d1a4:	str	x19, [x0, #24]
  40d1a8:	str	x1, [x19, #16]
  40d1ac:	str	x0, [x20, #16]
  40d1b0:	ldr	x1, [x0, #24]
  40d1b4:	str	x20, [x0, #24]
  40d1b8:	str	x1, [x20, #16]
  40d1bc:	str	x0, [x21]
  40d1c0:	b	40d114 <nftw@plt+0xa424>
  40d1c4:	ldr	x1, [x19, #24]
  40d1c8:	b	40d184 <nftw@plt+0xa494>
  40d1cc:	ldr	x0, [x19, #16]
  40d1d0:	str	x20, [x19, #16]
  40d1d4:	str	x0, [x20, #24]
  40d1d8:	b	40d164 <nftw@plt+0xa474>
  40d1dc:	cmp	w22, #0x0
  40d1e0:	cset	w1, gt
  40d1e4:	cmp	w0, #0x0
  40d1e8:	cset	w0, gt
  40d1ec:	cmp	w1, #0x0
  40d1f0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d1f4:	b.eq	40d21c <nftw@plt+0xa52c>  // b.none
  40d1f8:	ldr	x0, [x19, #24]
  40d1fc:	ldr	x1, [x0, #16]
  40d200:	str	x19, [x0, #16]
  40d204:	str	x1, [x19, #24]
  40d208:	str	x0, [x20, #24]
  40d20c:	ldr	x1, [x0, #16]
  40d210:	str	x20, [x0, #16]
  40d214:	str	x1, [x20, #24]
  40d218:	b	40d1bc <nftw@plt+0xa4cc>
  40d21c:	cmp	w3, #0x0
  40d220:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d224:	b.eq	40d23c <nftw@plt+0xa54c>  // b.none
  40d228:	ldr	x0, [x19, #24]
  40d22c:	ldr	x1, [x0, #16]
  40d230:	str	x19, [x0, #16]
  40d234:	str	x1, [x19, #24]
  40d238:	b	40d1ac <nftw@plt+0xa4bc>
  40d23c:	cmp	w2, #0x0
  40d240:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40d244:	b.eq	40d114 <nftw@plt+0xa424>  // b.none
  40d248:	ldr	x0, [x19, #16]
  40d24c:	ldr	x1, [x0, #24]
  40d250:	str	x19, [x0, #24]
  40d254:	str	x1, [x19, #16]
  40d258:	b	40d208 <nftw@plt+0xa518>
  40d25c:	ldr	x2, [x0]
  40d260:	cbz	x2, 40d2c0 <nftw@plt+0xa5d0>
  40d264:	stp	x29, x30, [sp, #-32]!
  40d268:	mov	x29, sp
  40d26c:	stp	x19, x20, [sp, #16]
  40d270:	mov	x19, x0
  40d274:	mov	w20, w1
  40d278:	bl	40d0f0 <nftw@plt+0xa400>
  40d27c:	ldp	x0, x2, [x19]
  40d280:	mov	w1, w20
  40d284:	ldr	w0, [x0]
  40d288:	blr	x2
  40d28c:	cmp	w0, #0x0
  40d290:	ldr	x0, [x19]
  40d294:	b.gt	40d2ac <nftw@plt+0xa5bc>
  40d298:	ldr	x1, [x0, #24]
  40d29c:	cbz	x1, 40d2b8 <nftw@plt+0xa5c8>
  40d2a0:	mov	x0, x1
  40d2a4:	ldr	x1, [x1, #16]
  40d2a8:	cbnz	x1, 40d2a0 <nftw@plt+0xa5b0>
  40d2ac:	ldp	x19, x20, [sp, #16]
  40d2b0:	ldp	x29, x30, [sp], #32
  40d2b4:	ret
  40d2b8:	mov	x0, #0x0                   	// #0
  40d2bc:	b	40d2ac <nftw@plt+0xa5bc>
  40d2c0:	mov	x0, #0x0                   	// #0
  40d2c4:	ret
  40d2c8:	stp	x29, x30, [sp, #-32]!
  40d2cc:	mov	x29, sp
  40d2d0:	stp	x19, x20, [sp, #16]
  40d2d4:	mov	x19, x0
  40d2d8:	mov	w20, w1
  40d2dc:	bl	40d0f0 <nftw@plt+0xa400>
  40d2e0:	ldr	x0, [x19]
  40d2e4:	cbnz	x0, 40d2f8 <nftw@plt+0xa608>
  40d2e8:	mov	x0, #0x0                   	// #0
  40d2ec:	ldp	x19, x20, [sp, #16]
  40d2f0:	ldp	x29, x30, [sp], #32
  40d2f4:	ret
  40d2f8:	ldr	w0, [x0]
  40d2fc:	mov	w1, w20
  40d300:	ldr	x2, [x19, #8]
  40d304:	blr	x2
  40d308:	cbnz	w0, 40d2e8 <nftw@plt+0xa5f8>
  40d30c:	ldr	x0, [x19]
  40d310:	cbz	x0, 40d2e8 <nftw@plt+0xa5f8>
  40d314:	ldr	x0, [x0, #8]
  40d318:	b	40d2ec <nftw@plt+0xa5fc>
  40d31c:	mov	x0, x1
  40d320:	mov	x1, x2
  40d324:	stp	x29, x30, [sp, #-16]!
  40d328:	mov	x29, sp
  40d32c:	ldrb	w2, [x2, #8]
  40d330:	ldr	x1, [x1]
  40d334:	bl	40c6a4 <nftw@plt+0x99b4>
  40d338:	mov	w0, #0x0                   	// #0
  40d33c:	ldp	x29, x30, [sp], #16
  40d340:	ret
  40d344:	ldrb	w3, [x0]
  40d348:	cbnz	x1, 40d36c <nftw@plt+0xa67c>
  40d34c:	stp	x29, x30, [sp, #-16]!
  40d350:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40d354:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40d358:	mov	x29, sp
  40d35c:	add	x2, x2, #0x704
  40d360:	add	x0, x0, #0x715
  40d364:	mov	w1, #0x71b                 	// #1819
  40d368:	bl	402d60 <nftw@plt+0x70>
  40d36c:	tbz	w3, #7, 40d448 <nftw@plt+0xa758>
  40d370:	mov	w4, w3
  40d374:	mov	x5, x0
  40d378:	mov	x0, #0x0                   	// #0
  40d37c:	tbz	w4, #7, 40d38c <nftw@plt+0xa69c>
  40d380:	add	x0, x0, #0x1
  40d384:	lsl	w4, w4, #1
  40d388:	b	40d37c <nftw@plt+0xa68c>
  40d38c:	sub	x4, x0, #0x2
  40d390:	cmp	x4, #0x4
  40d394:	ccmp	x0, x1, #0x2, ls  // ls = plast
  40d398:	b.ls	40d3ac <nftw@plt+0xa6bc>  // b.plast
  40d39c:	mov	w0, #0xffffffff            	// #-1
  40d3a0:	str	w0, [x2]
  40d3a4:	mov	w0, #0x0                   	// #0
  40d3a8:	ret
  40d3ac:	mov	w1, #0x7                   	// #7
  40d3b0:	sub	w4, w1, w0
  40d3b4:	mov	w1, #0x1                   	// #1
  40d3b8:	lsl	w1, w1, w4
  40d3bc:	sub	w1, w1, #0x1
  40d3c0:	and	w1, w1, w3
  40d3c4:	mov	x3, #0x1                   	// #1
  40d3c8:	ldrb	w4, [x5, x3]
  40d3cc:	and	w6, w4, #0xc0
  40d3d0:	cmp	w6, #0x80
  40d3d4:	b.ne	40d39c <nftw@plt+0xa6ac>  // b.any
  40d3d8:	and	w4, w4, #0x3f
  40d3dc:	add	x3, x3, #0x1
  40d3e0:	orr	w1, w4, w1, lsl #6
  40d3e4:	cmp	x0, x3
  40d3e8:	b.hi	40d3c8 <nftw@plt+0xa6d8>  // b.pmore
  40d3ec:	cmp	w1, #0x7f
  40d3f0:	b.ls	40d39c <nftw@plt+0xa6ac>  // b.plast
  40d3f4:	cmp	w1, #0x7ff
  40d3f8:	ccmp	x0, #0x2, #0x0, ls  // ls = plast
  40d3fc:	b.hi	40d39c <nftw@plt+0xa6ac>  // b.pmore
  40d400:	mov	w3, #0xffff                	// #65535
  40d404:	cmp	w1, w3
  40d408:	ccmp	x0, #0x3, #0x0, ls  // ls = plast
  40d40c:	b.hi	40d39c <nftw@plt+0xa6ac>  // b.pmore
  40d410:	mov	w3, #0x1fffff              	// #2097151
  40d414:	cmp	w1, w3
  40d418:	ccmp	x0, #0x4, #0x0, ls  // ls = plast
  40d41c:	b.hi	40d39c <nftw@plt+0xa6ac>  // b.pmore
  40d420:	mov	w3, #0x3ffffff             	// #67108863
  40d424:	cmp	w1, w3
  40d428:	ccmp	x0, #0x6, #0x0, ls  // ls = plast
  40d42c:	b.eq	40d39c <nftw@plt+0xa6ac>  // b.none
  40d430:	mov	w3, #0xffff2800            	// #-55296
  40d434:	add	w3, w1, w3
  40d438:	cmp	w3, #0x7ff
  40d43c:	b.ls	40d39c <nftw@plt+0xa6ac>  // b.plast
  40d440:	str	w1, [x2]
  40d444:	ret
  40d448:	mov	w0, #0x1                   	// #1
  40d44c:	str	w3, [x2]
  40d450:	ret
  40d454:	stp	x29, x30, [sp, #-32]!
  40d458:	mov	x29, sp
  40d45c:	stp	x19, x20, [sp, #16]
  40d460:	mov	x19, x0
  40d464:	ldr	w20, [x0, #40]
  40d468:	cmp	w20, #0x0
  40d46c:	b.le	40d47c <nftw@plt+0xa78c>
  40d470:	ldr	w0, [x0, #36]
  40d474:	cmp	w0, #0x1
  40d478:	b.hi	40d48c <nftw@plt+0xa79c>  // b.pmore
  40d47c:	str	w20, [x19, #28]
  40d480:	ldp	x19, x20, [sp, #16]
  40d484:	ldp	x29, x30, [sp], #32
  40d488:	ret
  40d48c:	ldr	x0, [x19, #16]
  40d490:	cbz	x0, 40d4ac <nftw@plt+0xa7bc>
  40d494:	bl	402630 <strlen@plt>
  40d498:	sub	w0, w20, w0
  40d49c:	add	w1, w20, #0x20
  40d4a0:	cmp	w0, #0x20
  40d4a4:	csel	w20, w1, w20, lt  // lt = tstop
  40d4a8:	b	40d47c <nftw@plt+0xa78c>
  40d4ac:	mov	w0, #0x0                   	// #0
  40d4b0:	b	40d498 <nftw@plt+0xa7a8>
  40d4b4:	stp	x29, x30, [sp, #-64]!
  40d4b8:	mov	x29, sp
  40d4bc:	stp	x19, x20, [sp, #16]
  40d4c0:	mov	x20, x0
  40d4c4:	ldr	x19, [x0, #176]
  40d4c8:	stp	x21, x22, [sp, #32]
  40d4cc:	mov	x22, x1
  40d4d0:	ldp	x1, x0, [x19, #24]
  40d4d4:	str	x23, [sp, #48]
  40d4d8:	sxtw	x23, w2
  40d4dc:	mov	x21, x23
  40d4e0:	sub	x0, x0, x1
  40d4e4:	cmp	x0, w23, sxtw
  40d4e8:	b.cs	40d4f8 <nftw@plt+0xa808>  // b.hs, b.nlast
  40d4ec:	mov	x1, x23
  40d4f0:	mov	x0, x19
  40d4f4:	bl	43ce94 <_obstack_newchunk@@Base>
  40d4f8:	ldr	x0, [x19, #24]
  40d4fc:	mov	x2, x23
  40d500:	mov	x1, x22
  40d504:	bl	4025d0 <memcpy@plt>
  40d508:	ldr	x0, [x19, #24]
  40d50c:	add	x0, x0, x23
  40d510:	str	x0, [x19, #24]
  40d514:	mov	x0, #0x0                   	// #0
  40d518:	cmp	w21, w0
  40d51c:	b.le	40d548 <nftw@plt+0xa858>
  40d520:	ldrb	w1, [x22, x0]
  40d524:	cmp	w1, #0xa
  40d528:	b.eq	40d540 <nftw@plt+0xa850>  // b.none
  40d52c:	ldr	w2, [x20, #200]
  40d530:	add	w2, w2, #0x1
  40d534:	add	x0, x0, #0x1
  40d538:	str	w2, [x20, #200]
  40d53c:	b	40d518 <nftw@plt+0xa828>
  40d540:	mov	w2, #0x0                   	// #0
  40d544:	b	40d534 <nftw@plt+0xa844>
  40d548:	ldp	x19, x20, [sp, #16]
  40d54c:	ldp	x21, x22, [sp, #32]
  40d550:	ldr	x23, [sp, #48]
  40d554:	ldp	x29, x30, [sp], #64
  40d558:	ret
  40d55c:	ldr	x0, [x0, #32]
  40d560:	b	42782c <nftw@plt+0x24b3c>
  40d564:	cbnz	w1, 40d570 <nftw@plt+0xa880>
  40d568:	ldr	x0, [x0, #32]
  40d56c:	b	42761c <nftw@plt+0x2492c>
  40d570:	mov	w0, #0x0                   	// #0
  40d574:	ret
  40d578:	stp	x29, x30, [sp, #-48]!
  40d57c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40d580:	add	x2, x0, #0x14c
  40d584:	mov	x29, sp
  40d588:	stp	x19, x20, [sp, #16]
  40d58c:	add	x19, x0, #0x58
  40d590:	str	x21, [sp, #32]
  40d594:	stp	xzr, xzr, [x0]
  40d598:	stp	xzr, xzr, [x0, #16]
  40d59c:	stp	xzr, xzr, [x0, #32]
  40d5a0:	stp	xzr, xzr, [x0, #48]
  40d5a4:	stp	xzr, xzr, [x0, #64]
  40d5a8:	str	xzr, [x0, #80]
  40d5ac:	stp	xzr, xzr, [x0, #88]
  40d5b0:	ldr	x1, [x1, #1416]
  40d5b4:	stp	xzr, xzr, [x19, #16]
  40d5b8:	stp	xzr, xzr, [x19, #32]
  40d5bc:	stp	xzr, xzr, [x19, #48]
  40d5c0:	stp	xzr, xzr, [x19, #64]
  40d5c4:	str	xzr, [x19, #80]
  40d5c8:	str	x1, [x0, #192]
  40d5cc:	add	x1, x0, #0xcc
  40d5d0:	stp	x0, xzr, [x0, #176]
  40d5d4:	str	wzr, [x0, #200]
  40d5d8:	strb	wzr, [x1], #1
  40d5dc:	cmp	x2, x1
  40d5e0:	b.ne	40d5d8 <nftw@plt+0xa8e8>  // b.any
  40d5e4:	mov	w1, #0x1                   	// #1
  40d5e8:	strb	w1, [x0, #332]
  40d5ec:	adrp	x21, 413000 <nftw@plt+0x10310>
  40d5f0:	adrp	x20, 413000 <nftw@plt+0x10310>
  40d5f4:	add	x21, x21, #0x8bc
  40d5f8:	add	x20, x20, #0x894
  40d5fc:	mov	x4, x21
  40d600:	mov	x3, x20
  40d604:	mov	x2, #0x0                   	// #0
  40d608:	mov	x1, #0x0                   	// #0
  40d60c:	bl	43ce68 <_obstack_begin@@Base>
  40d610:	mov	x4, x21
  40d614:	mov	x3, x20
  40d618:	mov	x0, x19
  40d61c:	mov	x2, #0x0                   	// #0
  40d620:	ldp	x19, x20, [sp, #16]
  40d624:	mov	x1, #0x0                   	// #0
  40d628:	ldr	x21, [sp, #32]
  40d62c:	ldp	x29, x30, [sp], #48
  40d630:	b	43ce68 <_obstack_begin@@Base>
  40d634:	stp	x29, x30, [sp, #-32]!
  40d638:	mov	x1, #0x0                   	// #0
  40d63c:	mov	x29, sp
  40d640:	str	x19, [sp, #16]
  40d644:	mov	x19, x0
  40d648:	add	x0, x0, #0x58
  40d64c:	bl	43cfe4 <_obstack_free@@Base>
  40d650:	mov	x0, x19
  40d654:	mov	x1, #0x0                   	// #0
  40d658:	ldr	x19, [sp, #16]
  40d65c:	ldp	x29, x30, [sp], #32
  40d660:	b	43cfe4 <_obstack_free@@Base>
  40d664:	stp	x29, x30, [sp, #-32]!
  40d668:	mov	x29, sp
  40d66c:	str	x19, [sp, #16]
  40d670:	mov	x19, x0
  40d674:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40d678:	add	x0, x0, #0x818
  40d67c:	str	x0, [x19]
  40d680:	ldr	x0, [x19, #56]
  40d684:	cbz	x0, 40d694 <nftw@plt+0xa9a4>
  40d688:	ldr	x1, [x0]
  40d68c:	ldr	x1, [x1, #8]
  40d690:	blr	x1
  40d694:	ldr	x0, [x19, #8]
  40d698:	bl	40d634 <nftw@plt+0xa944>
  40d69c:	ldr	x0, [x19, #8]
  40d6a0:	bl	402a80 <free@plt>
  40d6a4:	ldr	x0, [x19, #16]
  40d6a8:	ldr	x19, [sp, #16]
  40d6ac:	ldp	x29, x30, [sp], #32
  40d6b0:	b	402a80 <free@plt>
  40d6b4:	stp	x29, x30, [sp, #-32]!
  40d6b8:	mov	x29, sp
  40d6bc:	str	x19, [sp, #16]
  40d6c0:	mov	x19, x0
  40d6c4:	bl	40d664 <nftw@plt+0xa974>
  40d6c8:	mov	x0, x19
  40d6cc:	mov	x1, #0x48                  	// #72
  40d6d0:	ldr	x19, [sp, #16]
  40d6d4:	ldp	x29, x30, [sp], #32
  40d6d8:	b	43d660 <_obstack_memory_used@@Base+0x608>
  40d6dc:	str	w1, [x0, #40]
  40d6e0:	b	40d454 <nftw@plt+0xa764>
  40d6e4:	stp	x29, x30, [sp, #-32]!
  40d6e8:	mov	x29, sp
  40d6ec:	str	x19, [sp, #16]
  40d6f0:	mov	x19, x0
  40d6f4:	ldr	x0, [x0, #8]
  40d6f8:	ldr	x0, [x0, #176]
  40d6fc:	ldp	x2, x1, [x0, #8]
  40d700:	cmp	x2, x1
  40d704:	b.cs	40d72c <nftw@plt+0xaa3c>  // b.hs, b.nlast
  40d708:	ldr	x2, [x0, #32]
  40d70c:	cmp	x2, x1
  40d710:	b.ls	40d72c <nftw@plt+0xaa3c>  // b.plast
  40d714:	str	x1, [x0, #24]
  40d718:	ldr	x0, [x19, #8]
  40d71c:	ldr	x19, [sp, #16]
  40d720:	str	wzr, [x0, #200]
  40d724:	ldp	x29, x30, [sp], #32
  40d728:	ret
  40d72c:	bl	43cfe4 <_obstack_free@@Base>
  40d730:	b	40d718 <nftw@plt+0xaa28>
  40d734:	stp	x29, x30, [sp, #-32]!
  40d738:	mov	x29, sp
  40d73c:	stp	x19, x20, [sp, #16]
  40d740:	mov	x19, x0
  40d744:	mov	x20, x1
  40d748:	ldr	x0, [x0, #16]
  40d74c:	bl	402a80 <free@plt>
  40d750:	str	x20, [x19, #16]
  40d754:	mov	x0, x19
  40d758:	bl	40d454 <nftw@plt+0xa764>
  40d75c:	str	wzr, [x19, #32]
  40d760:	strb	wzr, [x19, #64]
  40d764:	ldp	x19, x20, [sp, #16]
  40d768:	ldp	x29, x30, [sp], #32
  40d76c:	ret
  40d770:	mov	x1, x0
  40d774:	ldr	x0, [x0, #16]
  40d778:	str	xzr, [x1, #16]
  40d77c:	ret
  40d780:	stp	x29, x30, [sp, #-32]!
  40d784:	mov	x29, sp
  40d788:	str	x19, [sp, #16]
  40d78c:	mov	x19, x0
  40d790:	ldr	x0, [x0, #16]
  40d794:	cbz	x0, 40d7a0 <nftw@plt+0xaab0>
  40d798:	bl	402a80 <free@plt>
  40d79c:	str	xzr, [x19, #16]
  40d7a0:	ldr	x19, [sp, #16]
  40d7a4:	ldp	x29, x30, [sp], #32
  40d7a8:	ret
  40d7ac:	stp	x29, x30, [sp, #-48]!
  40d7b0:	mov	x29, sp
  40d7b4:	stp	x19, x20, [sp, #16]
  40d7b8:	mov	x19, x0
  40d7bc:	mov	w20, w1
  40d7c0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40d7c4:	mov	x1, #0x150                 	// #336
  40d7c8:	add	x0, x0, #0x818
  40d7cc:	str	x0, [x19]
  40d7d0:	mov	x0, #0x1                   	// #1
  40d7d4:	str	x21, [sp, #32]
  40d7d8:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  40d7dc:	mov	x21, x0
  40d7e0:	bl	40d578 <nftw@plt+0xa888>
  40d7e4:	stp	x21, xzr, [x19, #8]
  40d7e8:	mov	w0, #0x10000               	// #65536
  40d7ec:	stp	xzr, xzr, [x19, #24]
  40d7f0:	mov	x1, #0x0                   	// #0
  40d7f4:	str	w20, [x19, #40]
  40d7f8:	stp	xzr, xzr, [x19, #48]
  40d7fc:	str	w0, [x19, #64]
  40d800:	mov	x0, x19
  40d804:	ldp	x19, x20, [sp, #16]
  40d808:	ldr	x21, [sp, #32]
  40d80c:	ldp	x29, x30, [sp], #48
  40d810:	b	40d734 <nftw@plt+0xaa44>
  40d814:	stp	x29, x30, [sp, #-32]!
  40d818:	mov	x29, sp
  40d81c:	stp	x19, x20, [sp, #16]
  40d820:	ldr	x20, [x0, #8]
  40d824:	ldr	x19, [x20, #176]
  40d828:	ldp	x0, x1, [x19, #24]
  40d82c:	cmp	x1, x0
  40d830:	b.ne	40d840 <nftw@plt+0xab50>  // b.any
  40d834:	mov	x0, x19
  40d838:	mov	x1, #0x1                   	// #1
  40d83c:	bl	43ce94 <_obstack_newchunk@@Base>
  40d840:	ldr	x0, [x19, #24]
  40d844:	add	x1, x0, #0x1
  40d848:	str	x1, [x19, #24]
  40d84c:	strb	wzr, [x0]
  40d850:	ldr	x0, [x20, #176]
  40d854:	ldp	x19, x20, [sp, #16]
  40d858:	ldp	x29, x30, [sp], #32
  40d85c:	ldr	x0, [x0, #16]
  40d860:	ret
  40d864:	stp	x29, x30, [sp, #-32]!
  40d868:	mov	x29, sp
  40d86c:	str	x19, [sp, #16]
  40d870:	mov	x19, x0
  40d874:	bl	40d814 <nftw@plt+0xab24>
  40d878:	ldr	x1, [x19, #8]
  40d87c:	ldr	x1, [x1, #192]
  40d880:	bl	402640 <fputs@plt>
  40d884:	mov	x0, x19
  40d888:	ldr	x19, [sp, #16]
  40d88c:	ldp	x29, x30, [sp], #32
  40d890:	b	40d6e4 <nftw@plt+0xa9f4>
  40d894:	ldr	x1, [x0, #8]
  40d898:	strb	wzr, [x0, #64]
  40d89c:	ldrb	w1, [x1, #332]
  40d8a0:	str	wzr, [x0, #32]
  40d8a4:	cbz	w1, 40d8d0 <nftw@plt+0xabe0>
  40d8a8:	stp	x29, x30, [sp, #-32]!
  40d8ac:	mov	x29, sp
  40d8b0:	str	x19, [sp, #16]
  40d8b4:	mov	x19, x0
  40d8b8:	bl	40d864 <nftw@plt+0xab74>
  40d8bc:	ldr	x0, [x19, #8]
  40d8c0:	ldr	x19, [sp, #16]
  40d8c4:	ldp	x29, x30, [sp], #32
  40d8c8:	ldr	x0, [x0, #192]
  40d8cc:	b	402af0 <fflush@plt>
  40d8d0:	ret
  40d8d4:	stp	x29, x30, [sp, #-32]!
  40d8d8:	mov	x29, sp
  40d8dc:	str	x19, [sp, #16]
  40d8e0:	mov	x19, x0
  40d8e4:	str	wzr, [x0, #32]
  40d8e8:	strb	wzr, [x0, #64]
  40d8ec:	bl	40d864 <nftw@plt+0xab74>
  40d8f0:	ldr	x0, [x19, #8]
  40d8f4:	ldr	x19, [sp, #16]
  40d8f8:	ldp	x29, x30, [sp], #32
  40d8fc:	ldr	x0, [x0, #192]
  40d900:	b	402af0 <fflush@plt>
  40d904:	stp	x29, x30, [sp, #-64]!
  40d908:	mov	x29, sp
  40d90c:	stp	x19, x20, [sp, #16]
  40d910:	mov	x20, x0
  40d914:	stp	x21, x22, [sp, #32]
  40d918:	adrp	x22, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40d91c:	add	x22, x22, #0x72e
  40d920:	str	x23, [sp, #48]
  40d924:	and	w23, w1, #0xff
  40d928:	bl	40d814 <nftw@plt+0xab24>
  40d92c:	mov	x19, x0
  40d930:	ldr	x0, [x20, #8]
  40d934:	ldr	x21, [x0, #192]
  40d938:	ldrb	w2, [x19]
  40d93c:	cbz	w2, 40d9d8 <nftw@plt+0xace8>
  40d940:	cmp	w2, #0x22
  40d944:	b.eq	40d9a8 <nftw@plt+0xacb8>  // b.none
  40d948:	b.hi	40d964 <nftw@plt+0xac74>  // b.pmore
  40d94c:	cmp	w2, #0xa
  40d950:	b.eq	40d99c <nftw@plt+0xacac>  // b.none
  40d954:	cmp	w2, #0x20
  40d958:	b.ne	40d98c <nftw@plt+0xac9c>  // b.any
  40d95c:	cbz	w23, 40d98c <nftw@plt+0xac9c>
  40d960:	b	40d9a8 <nftw@plt+0xacb8>
  40d964:	cmp	w2, #0x5c
  40d968:	b.eq	40d9b8 <nftw@plt+0xacc8>  // b.none
  40d96c:	b.hi	40d97c <nftw@plt+0xac8c>  // b.pmore
  40d970:	and	w2, w2, #0xfffffffd
  40d974:	cmp	w2, #0x3c
  40d978:	b	40d958 <nftw@plt+0xac68>
  40d97c:	sub	w2, w2, #0x7b
  40d980:	and	w2, w2, #0xff
  40d984:	cmp	w2, #0x2
  40d988:	b.ls	40d95c <nftw@plt+0xac6c>  // b.plast
  40d98c:	ldrb	w0, [x19], #1
  40d990:	mov	x1, x21
  40d994:	bl	402710 <fputc@plt>
  40d998:	b	40d938 <nftw@plt+0xac48>
  40d99c:	mov	x1, x21
  40d9a0:	mov	x0, x22
  40d9a4:	bl	402640 <fputs@plt>
  40d9a8:	mov	x1, x21
  40d9ac:	mov	w0, #0x5c                  	// #92
  40d9b0:	bl	402710 <fputc@plt>
  40d9b4:	b	40d98c <nftw@plt+0xac9c>
  40d9b8:	ldrb	w0, [x19, #1]
  40d9bc:	cbnz	w0, 40d9a8 <nftw@plt+0xacb8>
  40d9c0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40d9c4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40d9c8:	add	x2, x2, #0x731
  40d9cc:	add	x0, x0, #0x715
  40d9d0:	mov	w1, #0x378                 	// #888
  40d9d4:	bl	402d60 <nftw@plt+0x70>
  40d9d8:	mov	x0, x20
  40d9dc:	ldp	x19, x20, [sp, #16]
  40d9e0:	ldp	x21, x22, [sp, #32]
  40d9e4:	ldr	x23, [sp, #48]
  40d9e8:	ldp	x29, x30, [sp], #64
  40d9ec:	b	40d6e4 <nftw@plt+0xa9f4>
  40d9f0:	ldr	x0, [x0, #8]
  40d9f4:	ldr	x0, [x0, #176]
  40d9f8:	ldp	x2, x1, [x0, #16]
  40d9fc:	sub	x0, x1, #0x1
  40da00:	cmp	x2, x1
  40da04:	csel	x0, x0, xzr, ne  // ne = any
  40da08:	ret
  40da0c:	ldr	x2, [x0, #8]
  40da10:	ldr	w1, [x0, #28]
  40da14:	ldr	w0, [x2, #200]
  40da18:	sub	w0, w1, w0
  40da1c:	ret
  40da20:	stp	x29, x30, [sp, #-32]!
  40da24:	mov	x29, sp
  40da28:	stp	x19, x20, [sp, #16]
  40da2c:	mov	x19, x0
  40da30:	ldr	x0, [x0, #8]
  40da34:	ldr	x20, [x0, #176]
  40da38:	ldp	x0, x1, [x20, #24]
  40da3c:	cmp	x1, x0
  40da40:	b.ne	40da50 <nftw@plt+0xad60>  // b.any
  40da44:	mov	x0, x20
  40da48:	mov	x1, #0x1                   	// #1
  40da4c:	bl	43ce94 <_obstack_newchunk@@Base>
  40da50:	ldr	x0, [x20, #24]
  40da54:	add	x1, x0, #0x1
  40da58:	str	x1, [x20, #24]
  40da5c:	mov	w1, #0xa                   	// #10
  40da60:	strb	w1, [x0]
  40da64:	strb	wzr, [x19, #65]
  40da68:	ldr	x0, [x19, #8]
  40da6c:	ldp	x19, x20, [sp, #16]
  40da70:	str	wzr, [x0, #200]
  40da74:	ldp	x29, x30, [sp], #32
  40da78:	ret
  40da7c:	stp	x29, x30, [sp, #-48]!
  40da80:	mov	x29, sp
  40da84:	stp	x19, x20, [sp, #16]
  40da88:	mov	x19, x0
  40da8c:	str	x21, [sp, #32]
  40da90:	mov	w21, w1
  40da94:	ldr	w1, [x0, #40]
  40da98:	cmp	w1, #0x0
  40da9c:	b.gt	40dae4 <nftw@plt+0xadf4>
  40daa0:	ldr	x0, [x19, #8]
  40daa4:	ldr	x20, [x0, #176]
  40daa8:	ldp	x0, x1, [x20, #24]
  40daac:	cmp	x1, x0
  40dab0:	b.ne	40dac0 <nftw@plt+0xadd0>  // b.any
  40dab4:	mov	x0, x20
  40dab8:	mov	x1, #0x1                   	// #1
  40dabc:	bl	43ce94 <_obstack_newchunk@@Base>
  40dac0:	ldr	x0, [x20, #24]
  40dac4:	add	x1, x0, #0x1
  40dac8:	str	x1, [x20, #24]
  40dacc:	strb	w21, [x0]
  40dad0:	ldr	x1, [x19, #8]
  40dad4:	ldr	w0, [x1, #200]
  40dad8:	add	w0, w0, #0x1
  40dadc:	str	w0, [x1, #200]
  40dae0:	b	40db14 <nftw@plt+0xae24>
  40dae4:	ldr	x2, [x0, #8]
  40dae8:	ldr	w1, [x0, #28]
  40daec:	ldr	w2, [x2, #200]
  40daf0:	sub	w1, w1, w2
  40daf4:	cmp	w1, #0x0
  40daf8:	b.gt	40daa0 <nftw@plt+0xadb0>
  40dafc:	bl	40da20 <nftw@plt+0xad30>
  40db00:	and	x1, x21, #0xff
  40db04:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  40db08:	add	x0, x0, #0xae
  40db0c:	ldrh	w0, [x0, x1, lsl #1]
  40db10:	tbz	w0, #6, 40daa0 <nftw@plt+0xadb0>
  40db14:	ldp	x19, x20, [sp, #16]
  40db18:	ldr	x21, [sp, #32]
  40db1c:	ldp	x29, x30, [sp], #48
  40db20:	ret
  40db24:	stp	x29, x30, [sp, #-48]!
  40db28:	mov	x29, sp
  40db2c:	str	x21, [sp, #32]
  40db30:	ldr	w21, [x0, #32]
  40db34:	stp	x19, x20, [sp, #16]
  40db38:	mov	x19, x0
  40db3c:	mov	w20, #0x0                   	// #0
  40db40:	cmp	w20, w21
  40db44:	b.ge	40db5c <nftw@plt+0xae6c>  // b.tcont
  40db48:	mov	x0, x19
  40db4c:	mov	w1, #0x20                  	// #32
  40db50:	add	w20, w20, #0x1
  40db54:	bl	40da7c <nftw@plt+0xad8c>
  40db58:	b	40db40 <nftw@plt+0xae50>
  40db5c:	ldp	x19, x20, [sp, #16]
  40db60:	ldr	x21, [sp, #32]
  40db64:	ldp	x29, x30, [sp], #48
  40db68:	ret
  40db6c:	stp	x29, x30, [sp, #-32]!
  40db70:	mov	x29, sp
  40db74:	stp	x19, x20, [sp, #16]
  40db78:	ldr	x20, [x0, #16]
  40db7c:	cbz	x20, 40db94 <nftw@plt+0xaea4>
  40db80:	ldr	w1, [x0, #36]
  40db84:	mov	x19, x0
  40db88:	cbz	w1, 40dba0 <nftw@plt+0xaeb0>
  40db8c:	cmp	w1, #0x2
  40db90:	b.eq	40dbc0 <nftw@plt+0xaed0>  // b.none
  40db94:	ldp	x19, x20, [sp, #16]
  40db98:	ldp	x29, x30, [sp], #32
  40db9c:	ret
  40dba0:	ldrb	w1, [x0, #64]
  40dba4:	cbz	w1, 40dbb4 <nftw@plt+0xaec4>
  40dba8:	ldp	x19, x20, [sp, #16]
  40dbac:	ldp	x29, x30, [sp], #32
  40dbb0:	b	40db24 <nftw@plt+0xae34>
  40dbb4:	ldr	w0, [x0, #32]
  40dbb8:	add	w0, w0, #0x3
  40dbbc:	str	w0, [x19, #32]
  40dbc0:	mov	x0, x20
  40dbc4:	bl	402630 <strlen@plt>
  40dbc8:	mov	w2, w0
  40dbcc:	mov	x1, x20
  40dbd0:	ldr	x0, [x19, #8]
  40dbd4:	bl	40d4b4 <nftw@plt+0xa7c4>
  40dbd8:	mov	w0, #0x1                   	// #1
  40dbdc:	strb	w0, [x19, #64]
  40dbe0:	b	40db94 <nftw@plt+0xaea4>
  40dbe4:	stp	x29, x30, [sp, #-48]!
  40dbe8:	mov	x29, sp
  40dbec:	stp	x19, x20, [sp, #16]
  40dbf0:	mov	x19, x1
  40dbf4:	mov	x20, x0
  40dbf8:	ldr	x1, [x0, #8]
  40dbfc:	ldr	w1, [x1, #200]
  40dc00:	str	x21, [sp, #32]
  40dc04:	mov	x21, x2
  40dc08:	cbnz	w1, 40dc38 <nftw@plt+0xaf48>
  40dc0c:	bl	40db6c <nftw@plt+0xae7c>
  40dc10:	ldr	w0, [x20, #40]
  40dc14:	cmp	w0, #0x0
  40dc18:	b.le	40dc38 <nftw@plt+0xaf48>
  40dc1c:	cmp	x19, x21
  40dc20:	b.eq	40dc38 <nftw@plt+0xaf48>  // b.none
  40dc24:	ldrb	w0, [x19]
  40dc28:	cmp	w0, #0x20
  40dc2c:	b.ne	40dc38 <nftw@plt+0xaf48>  // b.any
  40dc30:	add	x19, x19, #0x1
  40dc34:	b	40dc1c <nftw@plt+0xaf2c>
  40dc38:	sub	w2, w21, w19
  40dc3c:	mov	x1, x19
  40dc40:	ldr	x0, [x20, #8]
  40dc44:	ldp	x19, x20, [sp, #16]
  40dc48:	ldr	x21, [sp, #32]
  40dc4c:	ldp	x29, x30, [sp], #48
  40dc50:	b	40d4b4 <nftw@plt+0xa7c4>
  40dc54:	ldr	w3, [x0, #40]
  40dc58:	cmp	w3, #0x0
  40dc5c:	b.le	40dd40 <nftw@plt+0xb050>
  40dc60:	stp	x29, x30, [sp, #-64]!
  40dc64:	mov	x29, sp
  40dc68:	stp	x19, x20, [sp, #16]
  40dc6c:	mov	x20, x0
  40dc70:	stp	x21, x22, [sp, #32]
  40dc74:	mov	x21, x1
  40dc78:	mov	x22, x2
  40dc7c:	str	x23, [sp, #48]
  40dc80:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  40dc84:	add	x23, x23, #0xae
  40dc88:	cmp	x22, x21
  40dc8c:	b.eq	40dd44 <nftw@plt+0xb054>  // b.none
  40dc90:	mov	x19, x21
  40dc94:	ldrb	w1, [x19]
  40dc98:	ldrb	w0, [x19]
  40dc9c:	ldrh	w1, [x23, x1, lsl #1]
  40dca0:	tbnz	w1, #0, 40dcb8 <nftw@plt+0xafc8>
  40dca4:	cmp	w0, #0xa
  40dca8:	b.eq	40dcb8 <nftw@plt+0xafc8>  // b.none
  40dcac:	add	x19, x19, #0x1
  40dcb0:	cmp	x22, x19
  40dcb4:	b.ne	40dc94 <nftw@plt+0xafa4>  // b.any
  40dcb8:	ldr	x2, [x20, #8]
  40dcbc:	sub	x0, x19, x21
  40dcc0:	ldr	w1, [x20, #28]
  40dcc4:	ldr	w2, [x2, #200]
  40dcc8:	sub	w1, w1, w2
  40dccc:	cmp	x0, w1, sxtw
  40dcd0:	b.lt	40dcdc <nftw@plt+0xafec>  // b.tstop
  40dcd4:	mov	x0, x20
  40dcd8:	bl	40da20 <nftw@plt+0xad30>
  40dcdc:	mov	x2, x19
  40dce0:	mov	x1, x21
  40dce4:	mov	x0, x20
  40dce8:	bl	40dbe4 <nftw@plt+0xaef4>
  40dcec:	cmp	x22, x19
  40dcf0:	b.eq	40dd38 <nftw@plt+0xb048>  // b.none
  40dcf4:	ldrb	w0, [x19]
  40dcf8:	ldrh	w0, [x23, x0, lsl #1]
  40dcfc:	tbz	w0, #0, 40dd18 <nftw@plt+0xb028>
  40dd00:	mov	x0, x20
  40dd04:	add	x19, x19, #0x1
  40dd08:	mov	w1, #0x20                  	// #32
  40dd0c:	bl	40da7c <nftw@plt+0xad8c>
  40dd10:	cmp	x22, x19
  40dd14:	b.eq	40dd30 <nftw@plt+0xb040>  // b.none
  40dd18:	ldrb	w0, [x19]
  40dd1c:	cmp	w0, #0xa
  40dd20:	b.ne	40dd30 <nftw@plt+0xb040>  // b.any
  40dd24:	add	x19, x19, #0x1
  40dd28:	mov	x0, x20
  40dd2c:	bl	40da20 <nftw@plt+0xad30>
  40dd30:	mov	x21, x19
  40dd34:	b	40dc88 <nftw@plt+0xaf98>
  40dd38:	mov	x21, x22
  40dd3c:	b	40dc88 <nftw@plt+0xaf98>
  40dd40:	b	40dbe4 <nftw@plt+0xaef4>
  40dd44:	ldp	x19, x20, [sp, #16]
  40dd48:	ldp	x21, x22, [sp, #32]
  40dd4c:	ldr	x23, [sp, #48]
  40dd50:	ldp	x29, x30, [sp], #64
  40dd54:	ret
  40dd58:	stp	x29, x30, [sp, #-96]!
  40dd5c:	cmn	x2, #0x1
  40dd60:	mov	x29, sp
  40dd64:	stp	x19, x20, [sp, #16]
  40dd68:	mov	x19, x1
  40dd6c:	stp	x21, x22, [sp, #32]
  40dd70:	mov	x22, x0
  40dd74:	stp	x23, x24, [sp, #48]
  40dd78:	stp	x25, x26, [sp, #64]
  40dd7c:	b.ne	40dd8c <nftw@plt+0xb09c>  // b.any
  40dd80:	mov	x0, x1
  40dd84:	bl	402630 <strlen@plt>
  40dd88:	mov	x2, x0
  40dd8c:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  40dd90:	add	x21, x19, x2
  40dd94:	mov	x20, x19
  40dd98:	add	x24, x24, #0xae
  40dd9c:	add	x26, sp, #0x54
  40dda0:	adrp	x25, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40dda4:	cmp	x20, x21
  40dda8:	b.eq	40de00 <nftw@plt+0xb110>  // b.none
  40ddac:	mov	x23, x20
  40ddb0:	ldrb	w0, [x23], #1
  40ddb4:	ldrh	w0, [x24, x0, lsl #1]
  40ddb8:	tbnz	w0, #4, 40ddf8 <nftw@plt+0xb108>
  40ddbc:	cmp	x19, x20
  40ddc0:	b.cs	40ddd4 <nftw@plt+0xb0e4>  // b.hs, b.nlast
  40ddc4:	sub	x2, x20, #0x1
  40ddc8:	mov	x1, x19
  40ddcc:	mov	x0, x22
  40ddd0:	bl	40dc54 <nftw@plt+0xaf64>
  40ddd4:	ldrb	w2, [x20]
  40ddd8:	mov	x19, x23
  40dddc:	add	x1, x25, #0x756
  40dde0:	add	x0, sp, #0x50
  40dde4:	bl	4026e0 <sprintf@plt>
  40dde8:	mov	x2, x26
  40ddec:	add	x1, sp, #0x50
  40ddf0:	mov	x0, x22
  40ddf4:	bl	40dc54 <nftw@plt+0xaf64>
  40ddf8:	mov	x20, x23
  40ddfc:	b	40dda4 <nftw@plt+0xb0b4>
  40de00:	mov	x2, x20
  40de04:	mov	x1, x19
  40de08:	mov	x0, x22
  40de0c:	bl	40dc54 <nftw@plt+0xaf64>
  40de10:	ldp	x19, x20, [sp, #16]
  40de14:	ldp	x21, x22, [sp, #32]
  40de18:	ldp	x23, x24, [sp, #48]
  40de1c:	ldp	x25, x26, [sp, #64]
  40de20:	ldp	x29, x30, [sp], #96
  40de24:	ret
  40de28:	stp	x29, x30, [sp, #-32]!
  40de2c:	mov	x29, sp
  40de30:	stp	x19, x20, [sp, #16]
  40de34:	mov	x19, x1
  40de38:	mov	x20, x0
  40de3c:	mov	x0, x1
  40de40:	bl	402630 <strlen@plt>
  40de44:	mov	x1, x19
  40de48:	add	x2, x19, x0
  40de4c:	mov	x0, x20
  40de50:	ldp	x19, x20, [sp, #16]
  40de54:	ldp	x29, x30, [sp], #32
  40de58:	b	40dc54 <nftw@plt+0xaf64>
  40de5c:	stp	x29, x30, [sp, #-64]!
  40de60:	mov	x29, sp
  40de64:	stp	x19, x20, [sp, #16]
  40de68:	ldr	x19, [x0, #8]
  40de6c:	stp	x21, x22, [sp, #32]
  40de70:	mov	x21, x0
  40de74:	ldp	x0, x20, [x19, #176]
  40de78:	str	x23, [sp, #48]
  40de7c:	cmp	x0, x19
  40de80:	b.eq	40de9c <nftw@plt+0xb1ac>  // b.none
  40de84:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40de88:	add	x2, x2, #0x75d
  40de8c:	mov	w1, #0x595                 	// #1429
  40de90:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40de94:	add	x0, x0, #0x715
  40de98:	bl	402d60 <nftw@plt+0x70>
  40de9c:	ldr	w0, [x0, #200]
  40dea0:	add	x23, x20, #0x8
  40dea4:	mov	w22, #0x0                   	// #0
  40dea8:	cbz	w0, 40debc <nftw@plt+0xb1cc>
  40deac:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40deb0:	mov	w1, #0x596                 	// #1430
  40deb4:	add	x2, x2, #0x75d
  40deb8:	b	40de90 <nftw@plt+0xb1a0>
  40debc:	ldr	x1, [x23, w22, uxtw #3]
  40dec0:	cbz	x1, 40ded4 <nftw@plt+0xb1e4>
  40dec4:	mov	x0, x21
  40dec8:	add	w22, w22, #0x1
  40decc:	bl	40de28 <nftw@plt+0xb138>
  40ded0:	b	40debc <nftw@plt+0xb1cc>
  40ded4:	ldr	x0, [x20]
  40ded8:	str	x0, [x19, #184]
  40dedc:	add	x0, x19, #0x58
  40dee0:	ldr	x1, [x0, #8]
  40dee4:	cmp	x1, x20
  40dee8:	b.cs	40df10 <nftw@plt+0xb220>  // b.hs, b.nlast
  40deec:	ldr	x1, [x0, #32]
  40def0:	cmp	x1, x20
  40def4:	b.ls	40df10 <nftw@plt+0xb220>  // b.plast
  40def8:	ldp	x21, x22, [sp, #32]
  40defc:	ldr	x23, [sp, #48]
  40df00:	stp	x20, x20, [x0, #16]
  40df04:	ldp	x19, x20, [sp, #16]
  40df08:	ldp	x29, x30, [sp], #64
  40df0c:	ret
  40df10:	mov	x1, x20
  40df14:	ldp	x19, x20, [sp, #16]
  40df18:	ldp	x21, x22, [sp, #32]
  40df1c:	ldr	x23, [sp, #48]
  40df20:	ldp	x29, x30, [sp], #64
  40df24:	b	43cfe4 <_obstack_free@@Base>
  40df28:	ldr	w1, [x0, #24]
  40df2c:	cbz	w1, 40df58 <nftw@plt+0xb268>
  40df30:	stp	x29, x30, [sp, #-32]!
  40df34:	mov	w1, #0x20                  	// #32
  40df38:	mov	x29, sp
  40df3c:	str	x19, [sp, #16]
  40df40:	mov	x19, x0
  40df44:	bl	40da7c <nftw@plt+0xad8c>
  40df48:	str	wzr, [x19, #24]
  40df4c:	ldr	x19, [sp, #16]
  40df50:	ldp	x29, x30, [sp], #32
  40df54:	ret
  40df58:	ret
  40df5c:	stp	x29, x30, [sp, #-32]!
  40df60:	mov	x29, sp
  40df64:	str	x19, [sp, #16]
  40df68:	mov	x19, x0
  40df6c:	bl	40da20 <nftw@plt+0xad30>
  40df70:	mov	x0, x19
  40df74:	bl	40d894 <nftw@plt+0xaba4>
  40df78:	strb	wzr, [x19, #65]
  40df7c:	ldr	x19, [sp, #16]
  40df80:	ldp	x29, x30, [sp], #32
  40df84:	ret
  40df88:	stp	x29, x30, [sp, #-32]!
  40df8c:	mov	x29, sp
  40df90:	ldr	w2, [x0, #32]
  40df94:	str	x19, [sp, #16]
  40df98:	mov	x19, x0
  40df9c:	add	w2, w2, w1
  40dfa0:	str	w2, [x0, #32]
  40dfa4:	bl	40da20 <nftw@plt+0xad30>
  40dfa8:	mov	x0, x19
  40dfac:	bl	40db24 <nftw@plt+0xae34>
  40dfb0:	strb	wzr, [x19, #65]
  40dfb4:	ldr	x19, [sp, #16]
  40dfb8:	ldp	x29, x30, [sp], #32
  40dfbc:	ret
  40dfc0:	stp	x29, x30, [sp, #-32]!
  40dfc4:	and	w1, w1, #0xff
  40dfc8:	mov	x29, sp
  40dfcc:	str	x19, [sp, #16]
  40dfd0:	mov	x19, x0
  40dfd4:	bl	40da7c <nftw@plt+0xad8c>
  40dfd8:	mov	x0, x19
  40dfdc:	mov	w1, #0x20                  	// #32
  40dfe0:	ldr	x19, [sp, #16]
  40dfe4:	ldp	x29, x30, [sp], #32
  40dfe8:	b	40da7c <nftw@plt+0xad8c>
  40dfec:	stp	x29, x30, [sp, #-32]!
  40dff0:	mov	x29, sp
  40dff4:	stp	x19, x20, [sp, #16]
  40dff8:	and	w20, w1, #0xff
  40dffc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40e000:	mov	x19, x0
  40e004:	ldr	x1, [x1, #1328]
  40e008:	bl	40de28 <nftw@plt+0xb138>
  40e00c:	mov	w0, w20
  40e010:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  40e014:	add	x1, x1, #0x8d1
  40e018:	bl	40900c <nftw@plt+0x631c>
  40e01c:	mov	x1, x0
  40e020:	mov	x0, x19
  40e024:	ldp	x19, x20, [sp, #16]
  40e028:	ldp	x29, x30, [sp], #32
  40e02c:	b	40de28 <nftw@plt+0xb138>
  40e030:	stp	x29, x30, [sp, #-32]!
  40e034:	mov	x29, sp
  40e038:	str	x19, [sp, #16]
  40e03c:	mov	x19, x0
  40e040:	mov	w0, w1
  40e044:	bl	409328 <nftw@plt+0x6638>
  40e048:	mov	x1, x0
  40e04c:	mov	x0, x19
  40e050:	bl	40de28 <nftw@plt+0xb138>
  40e054:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40e058:	ldr	x1, [x0, #1336]
  40e05c:	mov	x0, x19
  40e060:	ldr	x19, [sp, #16]
  40e064:	ldp	x29, x30, [sp], #32
  40e068:	b	40de28 <nftw@plt+0xb138>
  40e06c:	sub	sp, sp, #0x1c0
  40e070:	stp	x29, x30, [sp, #16]
  40e074:	add	x29, sp, #0x10
  40e078:	stp	x19, x20, [sp, #32]
  40e07c:	mov	x19, x0
  40e080:	ldr	x0, [x0, #8]
  40e084:	stp	x25, x26, [sp, #80]
  40e088:	add	x26, x0, #0x58
  40e08c:	stp	x21, x22, [sp, #48]
  40e090:	mov	x21, x1
  40e094:	str	x0, [sp, #112]
  40e098:	ldr	x1, [x26, #24]
  40e09c:	stp	x23, x24, [sp, #64]
  40e0a0:	ldr	x0, [x26, #32]
  40e0a4:	stp	x27, x28, [sp, #96]
  40e0a8:	sub	x0, x0, x1
  40e0ac:	cmp	x0, #0x1e7
  40e0b0:	b.hi	40e0c0 <nftw@plt+0xb3d0>  // b.pmore
  40e0b4:	mov	x0, x26
  40e0b8:	mov	x1, #0x1e8                 	// #488
  40e0bc:	bl	43ce94 <_obstack_newchunk@@Base>
  40e0c0:	ldp	x24, x1, [x26, #16]
  40e0c4:	add	x1, x1, #0x1e8
  40e0c8:	cmp	x1, x24
  40e0cc:	b.ne	40e0dc <nftw@plt+0xb3ec>  // b.any
  40e0d0:	ldrb	w0, [x26, #80]
  40e0d4:	orr	w0, w0, #0x2
  40e0d8:	strb	w0, [x26, #80]
  40e0dc:	ldr	x0, [x26, #48]
  40e0e0:	add	x25, sp, #0xd0
  40e0e4:	ldr	x2, [x26, #32]
  40e0e8:	add	x1, x1, x0
  40e0ec:	bic	x0, x1, x0
  40e0f0:	mov	w22, #0x0                   	// #0
  40e0f4:	ldr	x1, [x26, #8]
  40e0f8:	mov	w23, #0x0                   	// #0
  40e0fc:	sub	x3, x0, x1
  40e100:	sub	x1, x2, x1
  40e104:	cmp	x3, x1
  40e108:	mov	w1, #0x0                   	// #0
  40e10c:	csel	x0, x0, x2, ls  // ls = plast
  40e110:	stp	x0, x0, [x26, #16]
  40e114:	mov	x2, #0xf0                  	// #240
  40e118:	ldr	x0, [sp, #112]
  40e11c:	ldr	x0, [x0, #184]
  40e120:	str	x0, [x24]
  40e124:	ldr	x0, [sp, #112]
  40e128:	str	x24, [x0, #184]
  40e12c:	mov	x0, x25
  40e130:	add	x24, x24, #0x8
  40e134:	bl	402840 <memset@plt>
  40e138:	str	wzr, [sp, #128]
  40e13c:	ldr	x20, [x21]
  40e140:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40e144:	add	x0, x0, #0x530
  40e148:	str	x0, [sp, #160]
  40e14c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  40e150:	add	x0, x0, #0x8d1
  40e154:	str	x0, [sp, #176]
  40e158:	str	wzr, [sp, #184]
  40e15c:	ldrb	w0, [x20]
  40e160:	cbz	w0, 40e66c <nftw@plt+0xb97c>
  40e164:	ldrb	w0, [x20]
  40e168:	cbz	w0, 40e66c <nftw@plt+0xb97c>
  40e16c:	cmp	w0, #0x25
  40e170:	b.eq	40f290 <nftw@plt+0xc5a0>  // b.none
  40e174:	ldp	x0, x1, [x26, #24]
  40e178:	cmp	x1, x0
  40e17c:	b.ne	40e18c <nftw@plt+0xb49c>  // b.any
  40e180:	mov	x0, x26
  40e184:	mov	x1, #0x1                   	// #1
  40e188:	bl	43ce94 <_obstack_newchunk@@Base>
  40e18c:	ldr	x0, [x26, #24]
  40e190:	add	x1, x0, #0x1
  40e194:	str	x1, [x26, #24]
  40e198:	ldrb	w1, [x20], #1
  40e19c:	strb	w1, [x0]
  40e1a0:	b	40e164 <nftw@plt+0xb474>
  40e1a4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e1a8:	add	x2, x2, #0x776
  40e1ac:	mov	w1, #0x41e                 	// #1054
  40e1b0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e1b4:	add	x0, x0, #0x715
  40e1b8:	bl	402d60 <nftw@plt+0x70>
  40e1bc:	ldp	x0, x1, [x26, #24]
  40e1c0:	cmp	x1, x0
  40e1c4:	b.ne	40e1d4 <nftw@plt+0xb4e4>  // b.any
  40e1c8:	mov	x0, x26
  40e1cc:	mov	x1, #0x1                   	// #1
  40e1d0:	bl	43ce94 <_obstack_newchunk@@Base>
  40e1d4:	ldr	x0, [x26, #24]
  40e1d8:	add	x1, x0, #0x1
  40e1dc:	str	x1, [x26, #24]
  40e1e0:	mov	w1, #0x25                  	// #37
  40e1e4:	strb	w1, [x0]
  40e1e8:	add	x20, x20, #0x2
  40e1ec:	b	40e15c <nftw@plt+0xb46c>
  40e1f0:	ldrb	w0, [x19, #67]
  40e1f4:	bl	409328 <nftw@plt+0x6638>
  40e1f8:	mov	x27, x0
  40e1fc:	bl	402630 <strlen@plt>
  40e200:	mov	x28, x0
  40e204:	ldp	x1, x0, [x26, #24]
  40e208:	sub	x0, x0, x1
  40e20c:	cmp	x28, x0
  40e210:	b.ls	40e220 <nftw@plt+0xb530>  // b.plast
  40e214:	mov	x1, x28
  40e218:	mov	x0, x26
  40e21c:	bl	43ce94 <_obstack_newchunk@@Base>
  40e220:	ldr	x0, [x26, #24]
  40e224:	mov	x2, x28
  40e228:	mov	x1, x27
  40e22c:	bl	4025d0 <memcpy@plt>
  40e230:	ldr	x0, [x26, #24]
  40e234:	add	x0, x0, x28
  40e238:	str	x0, [x26, #24]
  40e23c:	adrp	x27, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40e240:	ldr	x0, [x27, #1336]
  40e244:	bl	402630 <strlen@plt>
  40e248:	mov	x28, x0
  40e24c:	ldp	x1, x0, [x26, #24]
  40e250:	sub	x0, x0, x1
  40e254:	cmp	x28, x0
  40e258:	b.ls	40e268 <nftw@plt+0xb578>  // b.plast
  40e25c:	mov	x1, x28
  40e260:	mov	x0, x26
  40e264:	bl	43ce94 <_obstack_newchunk@@Base>
  40e268:	ldr	x1, [x27, #1336]
  40e26c:	mov	x2, x28
  40e270:	ldr	x0, [x26, #24]
  40e274:	bl	4025d0 <memcpy@plt>
  40e278:	ldr	x0, [x26, #24]
  40e27c:	add	x0, x0, x28
  40e280:	str	x0, [x26, #24]
  40e284:	b	40e1e8 <nftw@plt+0xb4f8>
  40e288:	ldrb	w0, [x19, #67]
  40e28c:	bl	409328 <nftw@plt+0x6638>
  40e290:	b	40f358 <nftw@plt+0xc668>
  40e294:	ldp	x2, x1, [x26, #16]
  40e298:	add	w0, w22, #0x1
  40e29c:	str	w0, [sp, #144]
  40e2a0:	ubfiz	x4, x22, #3, #32
  40e2a4:	cmp	x1, x2
  40e2a8:	b.ne	40e2b8 <nftw@plt+0xb5c8>  // b.any
  40e2ac:	ldrb	w0, [x26, #80]
  40e2b0:	orr	w0, w0, #0x2
  40e2b4:	strb	w0, [x26, #80]
  40e2b8:	ldr	x0, [x26, #48]
  40e2bc:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  40e2c0:	ldr	x3, [x26, #32]
  40e2c4:	add	x1, x1, x0
  40e2c8:	bic	x0, x1, x0
  40e2cc:	add	x27, x27, #0xae
  40e2d0:	ldr	x1, [x26, #8]
  40e2d4:	add	x28, x20, #0x1
  40e2d8:	sub	x5, x0, x1
  40e2dc:	sub	x1, x3, x1
  40e2e0:	cmp	x5, x1
  40e2e4:	csel	x0, x0, x3, ls  // ls = plast
  40e2e8:	stp	x0, x0, [x26, #16]
  40e2ec:	str	x2, [x24, x4]
  40e2f0:	ldrb	w0, [x20, #1]
  40e2f4:	ldrh	w0, [x27, x0, lsl #1]
  40e2f8:	tbz	w0, #2, 40e374 <nftw@plt+0xb684>
  40e2fc:	add	x1, sp, #0xc8
  40e300:	mov	x0, x28
  40e304:	mov	w2, #0xa                   	// #10
  40e308:	bl	402620 <strtoul@plt>
  40e30c:	ldr	x3, [sp, #200]
  40e310:	sub	w0, w0, #0x1
  40e314:	ldrb	w1, [x3]
  40e318:	cmp	w1, #0x24
  40e31c:	b.eq	40e330 <nftw@plt+0xb640>  // b.none
  40e320:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e324:	mov	w1, #0x45a                 	// #1114
  40e328:	add	x2, x2, #0x776
  40e32c:	b	40e1b0 <nftw@plt+0xb4c0>
  40e330:	ldr	w1, [sp, #184]
  40e334:	add	x28, x3, #0x1
  40e338:	cbz	w1, 40e34c <nftw@plt+0xb65c>
  40e33c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e340:	mov	w1, #0x45e                 	// #1118
  40e344:	add	x2, x2, #0x776
  40e348:	b	40e1b0 <nftw@plt+0xb4c0>
  40e34c:	str	w23, [sp, #120]
  40e350:	mov	w23, w0
  40e354:	mov	w0, #0x1                   	// #1
  40e358:	str	w0, [sp, #128]
  40e35c:	cmp	w23, #0x1d
  40e360:	b.ls	40e3a0 <nftw@plt+0xb6b0>  // b.plast
  40e364:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e368:	mov	w1, #0x466                 	// #1126
  40e36c:	add	x2, x2, #0x776
  40e370:	b	40e1b0 <nftw@plt+0xb4c0>
  40e374:	add	w0, w23, #0x1
  40e378:	str	w0, [sp, #120]
  40e37c:	ldr	w0, [sp, #128]
  40e380:	cbz	w0, 40e394 <nftw@plt+0xb6a4>
  40e384:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e388:	mov	w1, #0x464                 	// #1124
  40e38c:	add	x2, x2, #0x776
  40e390:	b	40e1b0 <nftw@plt+0xb4c0>
  40e394:	mov	w0, #0x1                   	// #1
  40e398:	str	w0, [sp, #184]
  40e39c:	b	40e35c <nftw@plt+0xb66c>
  40e3a0:	ubfiz	x0, x23, #3, #32
  40e3a4:	ldr	x1, [x25, x0]
  40e3a8:	cbz	x1, 40e3bc <nftw@plt+0xb6cc>
  40e3ac:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e3b0:	mov	w1, #0x467                 	// #1127
  40e3b4:	add	x2, x2, #0x776
  40e3b8:	b	40e1b0 <nftw@plt+0xb4c0>
  40e3bc:	ldr	x1, [sp, #144]
  40e3c0:	ubfiz	x1, x1, #3, #32
  40e3c4:	str	x1, [sp, #152]
  40e3c8:	add	x1, x24, x1
  40e3cc:	str	x1, [x25, x0]
  40e3d0:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e3d4:	add	x0, x0, #0x780
  40e3d8:	str	x1, [sp, #136]
  40e3dc:	str	x0, [sp, #168]
  40e3e0:	ldp	x0, x1, [x26, #24]
  40e3e4:	cmp	x1, x0
  40e3e8:	b.ne	40e3f8 <nftw@plt+0xb708>  // b.any
  40e3ec:	mov	x0, x26
  40e3f0:	mov	x1, #0x1                   	// #1
  40e3f4:	bl	43ce94 <_obstack_newchunk@@Base>
  40e3f8:	ldr	x0, [x26, #24]
  40e3fc:	mov	x20, x28
  40e400:	add	x1, x0, #0x1
  40e404:	str	x1, [x26, #24]
  40e408:	ldrb	w1, [x28]
  40e40c:	strb	w1, [x0]
  40e410:	ldr	x0, [sp, #168]
  40e414:	ldrb	w1, [x20], #1
  40e418:	str	w1, [sp, #188]
  40e41c:	bl	402ab0 <strchr@plt>
  40e420:	ldr	w1, [sp, #188]
  40e424:	cbnz	x0, 40e490 <nftw@plt+0xb7a0>
  40e428:	cmp	w1, #0x2e
  40e42c:	b.ne	40e5e4 <nftw@plt+0xb8f4>  // b.any
  40e430:	ldrb	w1, [x20]
  40e434:	ldrb	w0, [x20]
  40e438:	ldrh	w1, [x27, x1, lsl #1]
  40e43c:	tbz	w1, #2, 40e498 <nftw@plt+0xb7a8>
  40e440:	ldp	x0, x1, [x26, #24]
  40e444:	cmp	x1, x0
  40e448:	b.ne	40e458 <nftw@plt+0xb768>  // b.any
  40e44c:	mov	x0, x26
  40e450:	mov	x1, #0x1                   	// #1
  40e454:	bl	43ce94 <_obstack_newchunk@@Base>
  40e458:	ldr	x0, [x26, #24]
  40e45c:	add	x1, x0, #0x1
  40e460:	str	x1, [x26, #24]
  40e464:	ldrb	w1, [x20]
  40e468:	strb	w1, [x0]
  40e46c:	ldrb	w0, [x20], #1
  40e470:	ldrh	w1, [x27, w0, sxtw #1]
  40e474:	tbnz	w1, #2, 40e440 <nftw@plt+0xb750>
  40e478:	cmp	w0, #0x73
  40e47c:	b.eq	40e5e4 <nftw@plt+0xb8f4>  // b.none
  40e480:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e484:	mov	w1, #0x47c                 	// #1148
  40e488:	add	x2, x2, #0x776
  40e48c:	b	40e1b0 <nftw@plt+0xb4c0>
  40e490:	mov	x28, x20
  40e494:	b	40e3e0 <nftw@plt+0xb6f0>
  40e498:	cmp	w0, #0x2a
  40e49c:	b.eq	40e4b0 <nftw@plt+0xb7c0>  // b.none
  40e4a0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e4a4:	mov	w1, #0x480                 	// #1152
  40e4a8:	add	x2, x2, #0x776
  40e4ac:	b	40e1b0 <nftw@plt+0xb4c0>
  40e4b0:	ldp	x0, x1, [x26, #24]
  40e4b4:	cmp	x1, x0
  40e4b8:	b.ne	40e4c8 <nftw@plt+0xb7d8>  // b.any
  40e4bc:	mov	x0, x26
  40e4c0:	mov	x1, #0x1                   	// #1
  40e4c4:	bl	43ce94 <_obstack_newchunk@@Base>
  40e4c8:	ldr	x0, [x26, #24]
  40e4cc:	add	x3, x28, #0x2
  40e4d0:	add	x1, x0, #0x1
  40e4d4:	str	x1, [x26, #24]
  40e4d8:	mov	w1, #0x2a                  	// #42
  40e4dc:	strb	w1, [x0]
  40e4e0:	ldrb	w0, [x20, #1]
  40e4e4:	ldrh	w0, [x27, x0, lsl #1]
  40e4e8:	tbz	w0, #2, 40e578 <nftw@plt+0xb888>
  40e4ec:	add	x1, sp, #0xc8
  40e4f0:	mov	x0, x3
  40e4f4:	mov	w2, #0xa                   	// #10
  40e4f8:	bl	402620 <strtoul@plt>
  40e4fc:	sub	w1, w0, #0x1
  40e500:	cmp	w0, w23
  40e504:	ldr	x3, [sp, #200]
  40e508:	b.eq	40e51c <nftw@plt+0xb82c>  // b.none
  40e50c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e510:	mov	w1, #0x489                 	// #1161
  40e514:	add	x2, x2, #0x776
  40e518:	b	40e1b0 <nftw@plt+0xb4c0>
  40e51c:	ldr	w0, [sp, #184]
  40e520:	cbz	w0, 40e534 <nftw@plt+0xb844>
  40e524:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e528:	mov	w1, #0x48a                 	// #1162
  40e52c:	add	x2, x2, #0x776
  40e530:	b	40e1b0 <nftw@plt+0xb4c0>
  40e534:	ldrb	w0, [x3]
  40e538:	cmp	w0, #0x24
  40e53c:	b.eq	40e550 <nftw@plt+0xb860>  // b.none
  40e540:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e544:	mov	w1, #0x48b                 	// #1163
  40e548:	add	x2, x2, #0x776
  40e54c:	b	40e1b0 <nftw@plt+0xb4c0>
  40e550:	add	x3, x3, #0x1
  40e554:	ldr	x0, [sp, #136]
  40e558:	str	x0, [x25, w1, uxtw #3]
  40e55c:	ldrb	w0, [x3]
  40e560:	cmp	w0, #0x73
  40e564:	b.eq	40e5ac <nftw@plt+0xb8bc>  // b.none
  40e568:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e56c:	mov	w1, #0x496                 	// #1174
  40e570:	add	x2, x2, #0x776
  40e574:	b	40e1b0 <nftw@plt+0xb4c0>
  40e578:	ldr	w0, [sp, #128]
  40e57c:	cbz	w0, 40e590 <nftw@plt+0xb8a0>
  40e580:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e584:	mov	w1, #0x492                 	// #1170
  40e588:	add	x2, x2, #0x776
  40e58c:	b	40e1b0 <nftw@plt+0xb4c0>
  40e590:	add	w23, w23, #0x1
  40e594:	ldr	x0, [sp, #136]
  40e598:	str	x0, [x25, x23, lsl #3]
  40e59c:	ldr	w0, [sp, #120]
  40e5a0:	add	w0, w0, #0x1
  40e5a4:	str	w0, [sp, #120]
  40e5a8:	b	40e55c <nftw@plt+0xb86c>
  40e5ac:	ldp	x0, x1, [x26, #24]
  40e5b0:	cmp	x1, x0
  40e5b4:	b.ne	40e5cc <nftw@plt+0xb8dc>  // b.any
  40e5b8:	mov	x0, x26
  40e5bc:	mov	x1, #0x1                   	// #1
  40e5c0:	str	x3, [sp, #136]
  40e5c4:	bl	43ce94 <_obstack_newchunk@@Base>
  40e5c8:	ldr	x3, [sp, #136]
  40e5cc:	add	x20, x3, #0x1
  40e5d0:	ldr	x0, [x26, #24]
  40e5d4:	add	x1, x0, #0x1
  40e5d8:	str	x1, [x26, #24]
  40e5dc:	mov	w1, #0x73                  	// #115
  40e5e0:	strb	w1, [x0]
  40e5e4:	ldrb	w2, [x20]
  40e5e8:	ldp	x1, x0, [x26, #24]
  40e5ec:	cbz	w2, 40e668 <nftw@plt+0xb978>
  40e5f0:	cmp	x1, x0
  40e5f4:	b.ne	40e604 <nftw@plt+0xb914>  // b.any
  40e5f8:	mov	x0, x26
  40e5fc:	mov	x1, #0x1                   	// #1
  40e600:	bl	43ce94 <_obstack_newchunk@@Base>
  40e604:	ldr	x0, [x26, #24]
  40e608:	add	w22, w22, #0x2
  40e60c:	add	x1, x0, #0x1
  40e610:	str	x1, [x26, #24]
  40e614:	strb	wzr, [x0]
  40e618:	ldp	x2, x1, [x26, #16]
  40e61c:	cmp	x1, x2
  40e620:	b.ne	40e630 <nftw@plt+0xb940>  // b.any
  40e624:	ldrb	w0, [x26, #80]
  40e628:	orr	w0, w0, #0x2
  40e62c:	strb	w0, [x26, #80]
  40e630:	ldr	x0, [x26, #48]
  40e634:	ldr	x3, [x26, #32]
  40e638:	add	x1, x1, x0
  40e63c:	bic	x0, x1, x0
  40e640:	ldr	w23, [sp, #120]
  40e644:	ldr	x1, [x26, #8]
  40e648:	sub	x4, x0, x1
  40e64c:	sub	x1, x3, x1
  40e650:	cmp	x4, x1
  40e654:	csel	x0, x0, x3, ls  // ls = plast
  40e658:	stp	x0, x0, [x26, #16]
  40e65c:	ldr	x0, [sp, #152]
  40e660:	str	x2, [x24, x0]
  40e664:	b	40e15c <nftw@plt+0xb46c>
  40e668:	ldr	w22, [sp, #144]
  40e66c:	ldp	x0, x1, [x26, #24]
  40e670:	cmp	x1, x0
  40e674:	b.ne	40e684 <nftw@plt+0xb994>  // b.any
  40e678:	mov	x0, x26
  40e67c:	mov	x1, #0x1                   	// #1
  40e680:	bl	43ce94 <_obstack_newchunk@@Base>
  40e684:	ldr	x0, [x26, #24]
  40e688:	cmp	w22, #0x3b
  40e68c:	add	x1, x0, #0x1
  40e690:	str	x1, [x26, #24]
  40e694:	strb	wzr, [x0]
  40e698:	b.ls	40e6ac <nftw@plt+0xb9bc>  // b.plast
  40e69c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e6a0:	mov	w1, #0x4a4                 	// #1188
  40e6a4:	add	x2, x2, #0x776
  40e6a8:	b	40e1b0 <nftw@plt+0xb4c0>
  40e6ac:	ldp	x2, x1, [x26, #16]
  40e6b0:	add	w4, w22, #0x1
  40e6b4:	ubfiz	x22, x22, #3, #32
  40e6b8:	cmp	x1, x2
  40e6bc:	b.ne	40e6cc <nftw@plt+0xb9dc>  // b.any
  40e6c0:	ldrb	w0, [x26, #80]
  40e6c4:	orr	w0, w0, #0x2
  40e6c8:	strb	w0, [x26, #80]
  40e6cc:	ldr	x0, [x26, #48]
  40e6d0:	adrp	x23, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e6d4:	ldr	x3, [x26, #32]
  40e6d8:	add	x1, x1, x0
  40e6dc:	bic	x0, x1, x0
  40e6e0:	add	x23, x23, #0xf61
  40e6e4:	ldr	x1, [x26, #8]
  40e6e8:	mov	w20, #0x0                   	// #0
  40e6ec:	sub	x5, x0, x1
  40e6f0:	sub	x1, x3, x1
  40e6f4:	cmp	x5, x1
  40e6f8:	csel	x0, x0, x3, ls  // ls = plast
  40e6fc:	stp	x0, x0, [x26, #16]
  40e700:	ldr	x0, [sp, #112]
  40e704:	str	x2, [x24, x22]
  40e708:	str	xzr, [x24, w4, uxtw #3]
  40e70c:	mov	x22, #0x1                   	// #1
  40e710:	str	x26, [x0, #176]
  40e714:	ldur	x0, [x19, #36]
  40e718:	stur	x22, [x19, #36]
  40e71c:	str	x0, [sp, #120]
  40e720:	ldr	x28, [x25, w20, uxtw #3]
  40e724:	cbz	x28, 40f23c <nftw@plt+0xc54c>
  40e728:	ldr	x27, [x28]
  40e72c:	mov	w6, #0x0                   	// #0
  40e730:	mov	w5, #0x0                   	// #0
  40e734:	mov	w4, #0x0                   	// #0
  40e738:	mov	w24, #0x0                   	// #0
  40e73c:	strb	wzr, [sp, #199]
  40e740:	ldrb	w0, [x27]
  40e744:	cmp	w0, #0x6c
  40e748:	b.eq	40e7ec <nftw@plt+0xbafc>  // b.none
  40e74c:	b.hi	40e77c <nftw@plt+0xba8c>  // b.pmore
  40e750:	cmp	w0, #0x23
  40e754:	b.eq	40e7d8 <nftw@plt+0xbae8>  // b.none
  40e758:	cmp	w0, #0x2b
  40e75c:	b.eq	40e7c4 <nftw@plt+0xbad4>  // b.none
  40e760:	cmp	w24, #0x0
  40e764:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  40e768:	b.eq	40e824 <nftw@plt+0xbb34>  // b.none
  40e76c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e770:	mov	w1, #0x4dc                 	// #1244
  40e774:	add	x2, x2, #0x776
  40e778:	b	40e1b0 <nftw@plt+0xb4c0>
  40e77c:	cmp	w0, #0x71
  40e780:	b.eq	40e7a0 <nftw@plt+0xbab0>  // b.none
  40e784:	cmp	w0, #0x77
  40e788:	b.ne	40e760 <nftw@plt+0xba70>  // b.any
  40e78c:	cbz	w4, 40e81c <nftw@plt+0xbb2c>
  40e790:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e794:	mov	w1, #0x4cf                 	// #1231
  40e798:	add	x2, x2, #0x776
  40e79c:	b	40e1b0 <nftw@plt+0xb4c0>
  40e7a0:	ldrb	w0, [sp, #199]
  40e7a4:	cbz	w0, 40e7b8 <nftw@plt+0xbac8>
  40e7a8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e7ac:	mov	w1, #0x4c0                 	// #1216
  40e7b0:	add	x2, x2, #0x776
  40e7b4:	b	40e1b0 <nftw@plt+0xb4c0>
  40e7b8:	strb	w22, [sp, #199]
  40e7bc:	add	x27, x27, #0x1
  40e7c0:	b	40e740 <nftw@plt+0xba50>
  40e7c4:	cbz	w5, 40e80c <nftw@plt+0xbb1c>
  40e7c8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e7cc:	mov	w1, #0x4c5                 	// #1221
  40e7d0:	add	x2, x2, #0x776
  40e7d4:	b	40e1b0 <nftw@plt+0xb4c0>
  40e7d8:	cbz	w6, 40e814 <nftw@plt+0xbb24>
  40e7dc:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e7e0:	mov	w1, #0x4ca                 	// #1226
  40e7e4:	add	x2, x2, #0x776
  40e7e8:	b	40e1b0 <nftw@plt+0xb4c0>
  40e7ec:	cmp	w24, #0x1
  40e7f0:	b.le	40e804 <nftw@plt+0xbb14>
  40e7f4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e7f8:	mov	w1, #0x4d5                 	// #1237
  40e7fc:	add	x2, x2, #0x776
  40e800:	b	40e1b0 <nftw@plt+0xb4c0>
  40e804:	add	w24, w24, #0x1
  40e808:	b	40e7bc <nftw@plt+0xbacc>
  40e80c:	mov	w5, #0x1                   	// #1
  40e810:	b	40e7bc <nftw@plt+0xbacc>
  40e814:	mov	w6, #0x1                   	// #1
  40e818:	b	40e7bc <nftw@plt+0xbacc>
  40e81c:	mov	w4, #0x1                   	// #1
  40e820:	b	40e7bc <nftw@plt+0xbacc>
  40e824:	ldrb	w0, [sp, #199]
  40e828:	cbz	w0, 40e850 <nftw@plt+0xbb60>
  40e82c:	ldrb	w1, [x19, #67]
  40e830:	mov	x0, x19
  40e834:	str	w4, [sp, #128]
  40e838:	str	w6, [sp, #136]
  40e83c:	str	w5, [sp, #184]
  40e840:	bl	40dfec <nftw@plt+0xb2fc>
  40e844:	ldr	w4, [sp, #128]
  40e848:	ldr	w6, [sp, #136]
  40e84c:	ldr	w5, [sp, #184]
  40e850:	ldrb	w0, [x27]
  40e854:	cmp	w0, #0x2e
  40e858:	b.eq	40f0ac <nftw@plt+0xc3bc>  // b.none
  40e85c:	sub	w0, w0, #0x5a
  40e860:	and	w1, w0, #0xff
  40e864:	cmp	w1, #0x1e
  40e868:	b.hi	40f1f0 <nftw@plt+0xc500>  // b.pmore
  40e86c:	cmp	w0, #0x1e
  40e870:	b.hi	40f1f0 <nftw@plt+0xc500>  // b.pmore
  40e874:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40e878:	add	x1, x1, #0x7c4
  40e87c:	ldrh	w0, [x1, w0, uxtw #1]
  40e880:	adr	x1, 40e88c <nftw@plt+0xbb9c>
  40e884:	add	x0, x1, w0, sxth #2
  40e888:	br	x0
  40e88c:	ldr	x2, [x21, #8]
  40e890:	ldrb	w0, [x19, #67]
  40e894:	ldr	w3, [x2, #24]
  40e898:	ldr	x1, [x2]
  40e89c:	tbnz	w3, #31, 40e8c4 <nftw@plt+0xbbd4>
  40e8a0:	add	x3, x1, #0xf
  40e8a4:	and	x3, x3, #0xfffffffffffffff8
  40e8a8:	str	x3, [x2]
  40e8ac:	ldr	x1, [x1]
  40e8b0:	bl	40900c <nftw@plt+0x631c>
  40e8b4:	mov	x1, x0
  40e8b8:	mov	x0, x19
  40e8bc:	bl	40de28 <nftw@plt+0xb138>
  40e8c0:	b	40e924 <nftw@plt+0xbc34>
  40e8c4:	add	w4, w3, #0x8
  40e8c8:	str	w4, [x2, #24]
  40e8cc:	cmp	w4, #0x0
  40e8d0:	b.gt	40e8a0 <nftw@plt+0xbbb0>
  40e8d4:	ldr	x1, [x2, #8]
  40e8d8:	add	x1, x1, w3, sxtw
  40e8dc:	b	40e8ac <nftw@plt+0xbbbc>
  40e8e0:	ldr	x1, [x21, #8]
  40e8e4:	ldr	w2, [x1, #24]
  40e8e8:	ldr	x0, [x1]
  40e8ec:	tbnz	w2, #31, 40e9b0 <nftw@plt+0xbcc0>
  40e8f0:	add	x2, x0, #0xb
  40e8f4:	and	x2, x2, #0xfffffffffffffff8
  40e8f8:	str	x2, [x1]
  40e8fc:	ldr	w1, [x0]
  40e900:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  40e904:	add	x0, x0, #0xae
  40e908:	and	x2, x1, #0xff
  40e90c:	ldrh	w0, [x0, x2, lsl #1]
  40e910:	tbnz	w0, #4, 40e91c <nftw@plt+0xbc2c>
  40e914:	ldrb	w0, [sp, #199]
  40e918:	cbnz	w0, 40e9cc <nftw@plt+0xbcdc>
  40e91c:	mov	x0, x19
  40e920:	bl	40da7c <nftw@plt+0xad8c>
  40e924:	ldrb	w0, [sp, #199]
  40e928:	cbz	w0, 40e938 <nftw@plt+0xbc48>
  40e92c:	ldrb	w1, [x19, #67]
  40e930:	mov	x0, x19
  40e934:	bl	40e030 <nftw@plt+0xb340>
  40e938:	ldp	x0, x1, [x26, #24]
  40e93c:	cmp	x1, x0
  40e940:	b.ne	40e950 <nftw@plt+0xbc60>  // b.any
  40e944:	mov	x0, x26
  40e948:	mov	x1, #0x1                   	// #1
  40e94c:	bl	43ce94 <_obstack_newchunk@@Base>
  40e950:	ldr	x0, [x26, #24]
  40e954:	ldr	x4, [x25, w20, uxtw #3]
  40e958:	add	x1, x0, #0x1
  40e95c:	str	x1, [x26, #24]
  40e960:	strb	wzr, [x0]
  40e964:	ldp	x2, x1, [x26, #16]
  40e968:	cmp	x1, x2
  40e96c:	b.ne	40e97c <nftw@plt+0xbc8c>  // b.any
  40e970:	ldrb	w0, [x26, #80]
  40e974:	orr	w0, w0, #0x2
  40e978:	strb	w0, [x26, #80]
  40e97c:	ldr	x0, [x26, #48]
  40e980:	add	w20, w20, #0x1
  40e984:	ldr	x3, [x26, #32]
  40e988:	add	x1, x1, x0
  40e98c:	bic	x0, x1, x0
  40e990:	ldr	x1, [x26, #8]
  40e994:	sub	x5, x0, x1
  40e998:	sub	x1, x3, x1
  40e99c:	cmp	x5, x1
  40e9a0:	csel	x0, x0, x3, ls  // ls = plast
  40e9a4:	stp	x0, x0, [x26, #16]
  40e9a8:	str	x2, [x4]
  40e9ac:	b	40e720 <nftw@plt+0xba30>
  40e9b0:	add	w3, w2, #0x8
  40e9b4:	str	w3, [x1, #24]
  40e9b8:	cmp	w3, #0x0
  40e9bc:	b.gt	40e8f0 <nftw@plt+0xbc00>
  40e9c0:	ldr	x0, [x1, #8]
  40e9c4:	add	x0, x0, w2, sxtw
  40e9c8:	b	40e8fc <nftw@plt+0xbc0c>
  40e9cc:	strb	w1, [sp, #200]
  40e9d0:	add	x1, sp, #0xc8
  40e9d4:	mov	x2, #0x1                   	// #1
  40e9d8:	strb	wzr, [sp, #201]
  40e9dc:	mov	x0, x19
  40e9e0:	bl	40dd58 <nftw@plt+0xb068>
  40e9e4:	b	40e924 <nftw@plt+0xbc34>
  40e9e8:	cbz	w4, 40ea34 <nftw@plt+0xbd44>
  40e9ec:	ldr	x1, [x21, #8]
  40e9f0:	ldr	w2, [x1, #24]
  40e9f4:	ldr	x0, [x1]
  40e9f8:	tbnz	w2, #31, 40ea18 <nftw@plt+0xbd28>
  40e9fc:	add	x2, x0, #0xf
  40ea00:	and	x2, x2, #0xfffffffffffffff8
  40ea04:	str	x2, [x1]
  40ea08:	ldr	x1, [x0]
  40ea0c:	mov	x0, x19
  40ea10:	bl	40f790 <nftw@plt+0xcaa0>
  40ea14:	b	40e924 <nftw@plt+0xbc34>
  40ea18:	add	w3, w2, #0x8
  40ea1c:	str	w3, [x1, #24]
  40ea20:	cmp	w3, #0x0
  40ea24:	b.gt	40e9fc <nftw@plt+0xbd0c>
  40ea28:	ldr	x0, [x1, #8]
  40ea2c:	add	x0, x0, w2, sxtw
  40ea30:	b	40ea08 <nftw@plt+0xbd18>
  40ea34:	cmp	w24, #0x1
  40ea38:	b.eq	40ea9c <nftw@plt+0xbdac>  // b.none
  40ea3c:	cmp	w24, #0x2
  40ea40:	b.eq	40eaf8 <nftw@plt+0xbe08>  // b.none
  40ea44:	cbnz	w24, 40e924 <nftw@plt+0xbc34>
  40ea48:	ldr	x2, [x21, #8]
  40ea4c:	ldr	x0, [x19, #8]
  40ea50:	ldr	w3, [x2, #24]
  40ea54:	add	x0, x0, #0xcc
  40ea58:	ldr	x1, [x2]
  40ea5c:	tbnz	w3, #31, 40ea80 <nftw@plt+0xbd90>
  40ea60:	add	x3, x1, #0xb
  40ea64:	and	x3, x3, #0xfffffffffffffff8
  40ea68:	str	x3, [x2]
  40ea6c:	ldr	w2, [x1]
  40ea70:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ea74:	add	x1, x1, #0xed4
  40ea78:	bl	4026e0 <sprintf@plt>
  40ea7c:	b	40ead0 <nftw@plt+0xbde0>
  40ea80:	add	w4, w3, #0x8
  40ea84:	str	w4, [x2, #24]
  40ea88:	cmp	w4, #0x0
  40ea8c:	b.gt	40ea60 <nftw@plt+0xbd70>
  40ea90:	ldr	x1, [x2, #8]
  40ea94:	add	x1, x1, w3, sxtw
  40ea98:	b	40ea6c <nftw@plt+0xbd7c>
  40ea9c:	ldr	x2, [x21, #8]
  40eaa0:	ldr	x0, [x19, #8]
  40eaa4:	ldr	w3, [x2, #24]
  40eaa8:	add	x0, x0, #0xcc
  40eaac:	ldr	x1, [x2]
  40eab0:	tbnz	w3, #31, 40eadc <nftw@plt+0xbdec>
  40eab4:	add	x3, x1, #0xf
  40eab8:	and	x3, x3, #0xfffffffffffffff8
  40eabc:	str	x3, [x2]
  40eac0:	ldr	x2, [x1]
  40eac4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40eac8:	add	x1, x1, #0x7be
  40eacc:	bl	4026e0 <sprintf@plt>
  40ead0:	ldr	x1, [x19, #8]
  40ead4:	add	x1, x1, #0xcc
  40ead8:	b	40e8b8 <nftw@plt+0xbbc8>
  40eadc:	add	w4, w3, #0x8
  40eae0:	str	w4, [x2, #24]
  40eae4:	cmp	w4, #0x0
  40eae8:	b.gt	40eab4 <nftw@plt+0xbdc4>
  40eaec:	ldr	x1, [x2, #8]
  40eaf0:	add	x1, x1, w3, sxtw
  40eaf4:	b	40eac0 <nftw@plt+0xbdd0>
  40eaf8:	ldr	x2, [x21, #8]
  40eafc:	ldr	x0, [x19, #8]
  40eb00:	ldr	w3, [x2, #24]
  40eb04:	add	x0, x0, #0xcc
  40eb08:	ldr	x1, [x2]
  40eb0c:	tbnz	w3, #31, 40eb2c <nftw@plt+0xbe3c>
  40eb10:	add	x3, x1, #0xf
  40eb14:	and	x3, x3, #0xfffffffffffffff8
  40eb18:	str	x3, [x2]
  40eb1c:	ldr	x2, [x1]
  40eb20:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40eb24:	add	x1, x1, #0x786
  40eb28:	b	40eacc <nftw@plt+0xbddc>
  40eb2c:	add	w4, w3, #0x8
  40eb30:	str	w4, [x2, #24]
  40eb34:	cmp	w4, #0x0
  40eb38:	b.gt	40eb10 <nftw@plt+0xbe20>
  40eb3c:	ldr	x1, [x2, #8]
  40eb40:	add	x1, x1, w3, sxtw
  40eb44:	b	40eb1c <nftw@plt+0xbe2c>
  40eb48:	cbz	w4, 40eb80 <nftw@plt+0xbe90>
  40eb4c:	ldr	x2, [x21, #8]
  40eb50:	ldr	x0, [x19, #8]
  40eb54:	ldr	w3, [x2, #24]
  40eb58:	add	x0, x0, #0xcc
  40eb5c:	ldr	x1, [x2]
  40eb60:	tbnz	w3, #31, 40ebe4 <nftw@plt+0xbef4>
  40eb64:	add	x3, x1, #0xf
  40eb68:	and	x3, x3, #0xfffffffffffffff8
  40eb6c:	str	x3, [x2]
  40eb70:	ldr	x2, [x1]
  40eb74:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40eb78:	add	x1, x1, #0x78b
  40eb7c:	b	40eacc <nftw@plt+0xbddc>
  40eb80:	cmp	w24, #0x1
  40eb84:	b.eq	40eb4c <nftw@plt+0xbe5c>  // b.none
  40eb88:	cmp	w24, #0x2
  40eb8c:	b.eq	40ec00 <nftw@plt+0xbf10>  // b.none
  40eb90:	cbnz	w24, 40e924 <nftw@plt+0xbc34>
  40eb94:	ldr	x2, [x21, #8]
  40eb98:	ldr	x0, [x19, #8]
  40eb9c:	ldr	w3, [x2, #24]
  40eba0:	add	x0, x0, #0xcc
  40eba4:	ldr	x1, [x2]
  40eba8:	tbnz	w3, #31, 40ebc8 <nftw@plt+0xbed8>
  40ebac:	add	x3, x1, #0xb
  40ebb0:	and	x3, x3, #0xfffffffffffffff8
  40ebb4:	str	x3, [x2]
  40ebb8:	ldr	w2, [x1]
  40ebbc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ebc0:	add	x1, x1, #0x152
  40ebc4:	b	40ea78 <nftw@plt+0xbd88>
  40ebc8:	add	w4, w3, #0x8
  40ebcc:	str	w4, [x2, #24]
  40ebd0:	cmp	w4, #0x0
  40ebd4:	b.gt	40ebac <nftw@plt+0xbebc>
  40ebd8:	ldr	x1, [x2, #8]
  40ebdc:	add	x1, x1, w3, sxtw
  40ebe0:	b	40ebb8 <nftw@plt+0xbec8>
  40ebe4:	add	w4, w3, #0x8
  40ebe8:	str	w4, [x2, #24]
  40ebec:	cmp	w4, #0x0
  40ebf0:	b.gt	40eb64 <nftw@plt+0xbe74>
  40ebf4:	ldr	x1, [x2, #8]
  40ebf8:	add	x1, x1, w3, sxtw
  40ebfc:	b	40eb70 <nftw@plt+0xbe80>
  40ec00:	ldr	x2, [x21, #8]
  40ec04:	ldr	x0, [x19, #8]
  40ec08:	ldr	w3, [x2, #24]
  40ec0c:	add	x0, x0, #0xcc
  40ec10:	ldr	x1, [x2]
  40ec14:	tbnz	w3, #31, 40ec34 <nftw@plt+0xbf44>
  40ec18:	add	x3, x1, #0xf
  40ec1c:	and	x3, x3, #0xfffffffffffffff8
  40ec20:	str	x3, [x2]
  40ec24:	ldr	x2, [x1]
  40ec28:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ec2c:	add	x1, x1, #0x78f
  40ec30:	b	40eacc <nftw@plt+0xbddc>
  40ec34:	add	w4, w3, #0x8
  40ec38:	str	w4, [x2, #24]
  40ec3c:	cmp	w4, #0x0
  40ec40:	b.gt	40ec18 <nftw@plt+0xbf28>
  40ec44:	ldr	x1, [x2, #8]
  40ec48:	add	x1, x1, w3, sxtw
  40ec4c:	b	40ec24 <nftw@plt+0xbf34>
  40ec50:	ldrb	w3, [sp, #199]
  40ec54:	ldr	x1, [x21, #8]
  40ec58:	ldr	w2, [x1, #24]
  40ec5c:	ldr	x0, [x1]
  40ec60:	cbz	w3, 40ec9c <nftw@plt+0xbfac>
  40ec64:	tbnz	w2, #31, 40ec80 <nftw@plt+0xbf90>
  40ec68:	add	x2, x0, #0xf
  40ec6c:	and	x2, x2, #0xfffffffffffffff8
  40ec70:	str	x2, [x1]
  40ec74:	mov	x2, #0xffffffffffffffff    	// #-1
  40ec78:	ldr	x1, [x0]
  40ec7c:	b	40e9dc <nftw@plt+0xbcec>
  40ec80:	add	w3, w2, #0x8
  40ec84:	str	w3, [x1, #24]
  40ec88:	cmp	w3, #0x0
  40ec8c:	b.gt	40ec68 <nftw@plt+0xbf78>
  40ec90:	ldr	x0, [x1, #8]
  40ec94:	add	x0, x0, w2, sxtw
  40ec98:	b	40ec74 <nftw@plt+0xbf84>
  40ec9c:	tbnz	w2, #31, 40ecb4 <nftw@plt+0xbfc4>
  40eca0:	add	x2, x0, #0xf
  40eca4:	and	x2, x2, #0xfffffffffffffff8
  40eca8:	str	x2, [x1]
  40ecac:	ldr	x1, [x0]
  40ecb0:	b	40e8b8 <nftw@plt+0xbbc8>
  40ecb4:	add	w3, w2, #0x8
  40ecb8:	str	w3, [x1, #24]
  40ecbc:	cmp	w3, #0x0
  40ecc0:	b.gt	40eca0 <nftw@plt+0xbfb0>
  40ecc4:	ldr	x0, [x1, #8]
  40ecc8:	add	x0, x0, w2, sxtw
  40eccc:	b	40ecac <nftw@plt+0xbfbc>
  40ecd0:	ldr	x2, [x21, #8]
  40ecd4:	ldr	x0, [x19, #8]
  40ecd8:	ldr	w3, [x2, #24]
  40ecdc:	add	x0, x0, #0xcc
  40ece0:	ldr	x1, [x2]
  40ece4:	tbnz	w3, #31, 40ed04 <nftw@plt+0xc014>
  40ece8:	add	x3, x1, #0xf
  40ecec:	and	x3, x3, #0xfffffffffffffff8
  40ecf0:	str	x3, [x2]
  40ecf4:	ldr	x2, [x1]
  40ecf8:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ecfc:	add	x1, x1, #0x794
  40ed00:	b	40eacc <nftw@plt+0xbddc>
  40ed04:	add	w4, w3, #0x8
  40ed08:	str	w4, [x2, #24]
  40ed0c:	cmp	w4, #0x0
  40ed10:	b.gt	40ece8 <nftw@plt+0xbff8>
  40ed14:	ldr	x1, [x2, #8]
  40ed18:	add	x1, x1, w3, sxtw
  40ed1c:	b	40ecf4 <nftw@plt+0xc004>
  40ed20:	cbz	w4, 40ed4c <nftw@plt+0xc05c>
  40ed24:	ldr	x2, [x21, #8]
  40ed28:	ldr	x0, [x19, #8]
  40ed2c:	ldr	w3, [x2, #24]
  40ed30:	add	x0, x0, #0xcc
  40ed34:	ldr	x1, [x2]
  40ed38:	tbnz	w3, #31, 40edb0 <nftw@plt+0xc0c0>
  40ed3c:	add	x3, x1, #0xf
  40ed40:	and	x3, x3, #0xfffffffffffffff8
  40ed44:	str	x3, [x2]
  40ed48:	b	40edc8 <nftw@plt+0xc0d8>
  40ed4c:	cmp	w24, #0x1
  40ed50:	b.eq	40ed24 <nftw@plt+0xc034>  // b.none
  40ed54:	cmp	w24, #0x2
  40ed58:	b.eq	40edd8 <nftw@plt+0xc0e8>  // b.none
  40ed5c:	cbnz	w24, 40e924 <nftw@plt+0xbc34>
  40ed60:	ldr	x2, [x21, #8]
  40ed64:	ldr	x0, [x19, #8]
  40ed68:	ldr	w3, [x2, #24]
  40ed6c:	add	x0, x0, #0xcc
  40ed70:	ldr	x1, [x2]
  40ed74:	tbnz	w3, #31, 40ed94 <nftw@plt+0xc0a4>
  40ed78:	add	x3, x1, #0xb
  40ed7c:	and	x3, x3, #0xfffffffffffffff8
  40ed80:	str	x3, [x2]
  40ed84:	ldr	w2, [x1]
  40ed88:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  40ed8c:	add	x1, x1, #0x1d
  40ed90:	b	40ea78 <nftw@plt+0xbd88>
  40ed94:	add	w4, w3, #0x8
  40ed98:	str	w4, [x2, #24]
  40ed9c:	cmp	w4, #0x0
  40eda0:	b.gt	40ed78 <nftw@plt+0xc088>
  40eda4:	ldr	x1, [x2, #8]
  40eda8:	add	x1, x1, w3, sxtw
  40edac:	b	40ed84 <nftw@plt+0xc094>
  40edb0:	add	w4, w3, #0x8
  40edb4:	str	w4, [x2, #24]
  40edb8:	cmp	w4, #0x0
  40edbc:	b.gt	40ed3c <nftw@plt+0xc04c>
  40edc0:	ldr	x1, [x2, #8]
  40edc4:	add	x1, x1, w3, sxtw
  40edc8:	ldr	x2, [x1]
  40edcc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40edd0:	add	x1, x1, #0x797
  40edd4:	b	40eacc <nftw@plt+0xbddc>
  40edd8:	ldr	x2, [x21, #8]
  40eddc:	ldr	x0, [x19, #8]
  40ede0:	ldr	w3, [x2, #24]
  40ede4:	add	x0, x0, #0xcc
  40ede8:	ldr	x1, [x2]
  40edec:	tbnz	w3, #31, 40ee0c <nftw@plt+0xc11c>
  40edf0:	add	x3, x1, #0xf
  40edf4:	and	x3, x3, #0xfffffffffffffff8
  40edf8:	str	x3, [x2]
  40edfc:	ldr	x2, [x1]
  40ee00:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ee04:	add	x1, x1, #0x79b
  40ee08:	b	40eacc <nftw@plt+0xbddc>
  40ee0c:	add	w4, w3, #0x8
  40ee10:	str	w4, [x2, #24]
  40ee14:	cmp	w4, #0x0
  40ee18:	b.gt	40edf0 <nftw@plt+0xc100>
  40ee1c:	ldr	x1, [x2, #8]
  40ee20:	add	x1, x1, w3, sxtw
  40ee24:	b	40edfc <nftw@plt+0xc10c>
  40ee28:	ldr	x2, [x21, #8]
  40ee2c:	ldr	x0, [x19, #8]
  40ee30:	ldr	w3, [x2, #28]
  40ee34:	add	x0, x0, #0xcc
  40ee38:	ldr	x1, [x2]
  40ee3c:	tbnz	w3, #31, 40ee60 <nftw@plt+0xc170>
  40ee40:	add	x3, x1, #0xf
  40ee44:	and	x3, x3, #0xfffffffffffffff8
  40ee48:	str	x3, [x2]
  40ee4c:	ldr	d0, [x1]
  40ee50:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  40ee54:	add	x1, x1, #0x175
  40ee58:	bl	4026e0 <sprintf@plt>
  40ee5c:	b	40ead0 <nftw@plt+0xbde0>
  40ee60:	add	w4, w3, #0x10
  40ee64:	str	w4, [x2, #28]
  40ee68:	cmp	w4, #0x0
  40ee6c:	b.gt	40ee40 <nftw@plt+0xc150>
  40ee70:	ldr	x1, [x2, #16]
  40ee74:	add	x1, x1, w3, sxtw
  40ee78:	b	40ee4c <nftw@plt+0xc15c>
  40ee7c:	ldr	x0, [x21, #8]
  40ee80:	ldr	w2, [x0, #24]
  40ee84:	ldr	x1, [x0]
  40ee88:	tbnz	w2, #31, 40ef1c <nftw@plt+0xc22c>
  40ee8c:	add	x2, x1, #0xf
  40ee90:	and	x2, x2, #0xfffffffffffffff8
  40ee94:	str	x2, [x0]
  40ee98:	ldr	w2, [x0, #24]
  40ee9c:	ldr	x1, [x1]
  40eea0:	str	x1, [sp, #128]
  40eea4:	ldr	x1, [x0]
  40eea8:	tbnz	w2, #31, 40ef38 <nftw@plt+0xc248>
  40eeac:	add	x2, x1, #0xb
  40eeb0:	and	x2, x2, #0xfffffffffffffff8
  40eeb4:	str	x2, [x0]
  40eeb8:	ldr	w24, [x1]
  40eebc:	mov	x27, #0x0                   	// #0
  40eec0:	sub	w28, w24, #0x1
  40eec4:	cmp	w24, w27
  40eec8:	b.ls	40e924 <nftw@plt+0xbc34>  // b.plast
  40eecc:	ldr	x1, [sp, #128]
  40eed0:	ldr	x0, [x19, #8]
  40eed4:	ldr	w2, [x1, x27, lsl #2]
  40eed8:	mov	x1, x23
  40eedc:	add	x0, x0, #0xcc
  40eee0:	bl	4026e0 <sprintf@plt>
  40eee4:	ldr	x1, [x19, #8]
  40eee8:	mov	x0, x19
  40eeec:	add	x1, x1, #0xcc
  40eef0:	bl	40de28 <nftw@plt+0xb138>
  40eef4:	cmp	w28, w27
  40eef8:	b.ls	40ef14 <nftw@plt+0xc224>  // b.plast
  40eefc:	mov	x0, x19
  40ef00:	mov	w1, #0x2c                  	// #44
  40ef04:	bl	40da7c <nftw@plt+0xad8c>
  40ef08:	mov	x0, x19
  40ef0c:	mov	w1, #0x20                  	// #32
  40ef10:	bl	40da7c <nftw@plt+0xad8c>
  40ef14:	add	x27, x27, #0x1
  40ef18:	b	40eec4 <nftw@plt+0xc1d4>
  40ef1c:	add	w3, w2, #0x8
  40ef20:	str	w3, [x0, #24]
  40ef24:	cmp	w3, #0x0
  40ef28:	b.gt	40ee8c <nftw@plt+0xc19c>
  40ef2c:	ldr	x1, [x0, #8]
  40ef30:	add	x1, x1, w2, sxtw
  40ef34:	b	40ee98 <nftw@plt+0xc1a8>
  40ef38:	add	w3, w2, #0x8
  40ef3c:	str	w3, [x0, #24]
  40ef40:	cmp	w3, #0x0
  40ef44:	b.gt	40eeac <nftw@plt+0xc1bc>
  40ef48:	ldr	x1, [x0, #8]
  40ef4c:	add	x1, x1, w2, sxtw
  40ef50:	b	40eeb8 <nftw@plt+0xc1c8>
  40ef54:	cbz	w4, 40efa8 <nftw@plt+0xc2b8>
  40ef58:	ldr	x2, [x21, #8]
  40ef5c:	ldr	x0, [x19, #8]
  40ef60:	ldr	w3, [x2, #24]
  40ef64:	add	x0, x0, #0xcc
  40ef68:	ldr	x1, [x2]
  40ef6c:	tbnz	w3, #31, 40ef8c <nftw@plt+0xc29c>
  40ef70:	add	x3, x1, #0xf
  40ef74:	and	x3, x3, #0xfffffffffffffff8
  40ef78:	str	x3, [x2]
  40ef7c:	ldr	x2, [x1]
  40ef80:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ef84:	add	x1, x1, #0x7a0
  40ef88:	b	40eacc <nftw@plt+0xbddc>
  40ef8c:	add	w4, w3, #0x8
  40ef90:	str	w4, [x2, #24]
  40ef94:	cmp	w4, #0x0
  40ef98:	b.gt	40ef70 <nftw@plt+0xc280>
  40ef9c:	ldr	x1, [x2, #8]
  40efa0:	add	x1, x1, w3, sxtw
  40efa4:	b	40ef7c <nftw@plt+0xc28c>
  40efa8:	cmp	w24, #0x1
  40efac:	b.eq	40f00c <nftw@plt+0xc31c>  // b.none
  40efb0:	cmp	w24, #0x2
  40efb4:	b.eq	40f05c <nftw@plt+0xc36c>  // b.none
  40efb8:	cbnz	w24, 40e924 <nftw@plt+0xbc34>
  40efbc:	ldr	x2, [x21, #8]
  40efc0:	ldr	x0, [x19, #8]
  40efc4:	ldr	w3, [x2, #24]
  40efc8:	add	x0, x0, #0xcc
  40efcc:	ldr	x1, [x2]
  40efd0:	tbnz	w3, #31, 40eff0 <nftw@plt+0xc300>
  40efd4:	add	x3, x1, #0xb
  40efd8:	and	x3, x3, #0xfffffffffffffff8
  40efdc:	str	x3, [x2]
  40efe0:	ldr	w2, [x1]
  40efe4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40efe8:	add	x1, x1, #0x7a5
  40efec:	b	40ea78 <nftw@plt+0xbd88>
  40eff0:	add	w4, w3, #0x8
  40eff4:	str	w4, [x2, #24]
  40eff8:	cmp	w4, #0x0
  40effc:	b.gt	40efd4 <nftw@plt+0xc2e4>
  40f000:	ldr	x1, [x2, #8]
  40f004:	add	x1, x1, w3, sxtw
  40f008:	b	40efe0 <nftw@plt+0xc2f0>
  40f00c:	ldr	x2, [x21, #8]
  40f010:	ldr	x0, [x19, #8]
  40f014:	ldr	w3, [x2, #24]
  40f018:	add	x0, x0, #0xcc
  40f01c:	ldr	x1, [x2]
  40f020:	tbnz	w3, #31, 40f040 <nftw@plt+0xc350>
  40f024:	add	x3, x1, #0xf
  40f028:	and	x3, x3, #0xfffffffffffffff8
  40f02c:	str	x3, [x2]
  40f030:	ldr	x2, [x1]
  40f034:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f038:	add	x1, x1, #0x7a8
  40f03c:	b	40eacc <nftw@plt+0xbddc>
  40f040:	add	w4, w3, #0x8
  40f044:	str	w4, [x2, #24]
  40f048:	cmp	w4, #0x0
  40f04c:	b.gt	40f024 <nftw@plt+0xc334>
  40f050:	ldr	x1, [x2, #8]
  40f054:	add	x1, x1, w3, sxtw
  40f058:	b	40f030 <nftw@plt+0xc340>
  40f05c:	ldr	x2, [x21, #8]
  40f060:	ldr	x0, [x19, #8]
  40f064:	ldr	w3, [x2, #24]
  40f068:	add	x0, x0, #0xcc
  40f06c:	ldr	x1, [x2]
  40f070:	tbnz	w3, #31, 40f090 <nftw@plt+0xc3a0>
  40f074:	add	x3, x1, #0xf
  40f078:	and	x3, x3, #0xfffffffffffffff8
  40f07c:	str	x3, [x2]
  40f080:	ldr	x2, [x1]
  40f084:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f088:	add	x1, x1, #0x7ac
  40f08c:	b	40eacc <nftw@plt+0xbddc>
  40f090:	add	w4, w3, #0x8
  40f094:	str	w4, [x2, #24]
  40f098:	cmp	w4, #0x0
  40f09c:	b.gt	40f074 <nftw@plt+0xc384>
  40f0a0:	ldr	x1, [x2, #8]
  40f0a4:	add	x1, x1, w3, sxtw
  40f0a8:	b	40f080 <nftw@plt+0xc390>
  40f0ac:	ldrb	w2, [x27, #1]
  40f0b0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  40f0b4:	add	x0, x0, #0xae
  40f0b8:	ldrb	w1, [x27, #1]
  40f0bc:	ldrh	w0, [x0, x2, lsl #1]
  40f0c0:	tbz	w0, #2, 40f0f4 <nftw@plt+0xc404>
  40f0c4:	add	x1, sp, #0xc8
  40f0c8:	add	x0, x27, #0x1
  40f0cc:	mov	w2, #0xa                   	// #10
  40f0d0:	bl	402620 <strtoul@plt>
  40f0d4:	ldr	x1, [sp, #200]
  40f0d8:	ldrb	w1, [x1]
  40f0dc:	cmp	w1, #0x73
  40f0e0:	b.eq	40f184 <nftw@plt+0xc494>  // b.none
  40f0e4:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f0e8:	mov	w1, #0x54b                 	// #1355
  40f0ec:	add	x2, x2, #0x776
  40f0f0:	b	40e1b0 <nftw@plt+0xb4c0>
  40f0f4:	cmp	w1, #0x2a
  40f0f8:	b.eq	40f10c <nftw@plt+0xc41c>  // b.none
  40f0fc:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f100:	mov	w1, #0x54f                 	// #1359
  40f104:	add	x2, x2, #0x776
  40f108:	b	40e1b0 <nftw@plt+0xb4c0>
  40f10c:	ldrb	w0, [x27, #2]
  40f110:	cmp	w0, #0x73
  40f114:	b.eq	40f128 <nftw@plt+0xc438>  // b.none
  40f118:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f11c:	mov	w1, #0x551                 	// #1361
  40f120:	add	x2, x2, #0x776
  40f124:	b	40e1b0 <nftw@plt+0xb4c0>
  40f128:	ldr	x1, [x21, #8]
  40f12c:	ldr	w2, [x1, #24]
  40f130:	ldr	x0, [x1]
  40f134:	tbnz	w2, #31, 40f168 <nftw@plt+0xc478>
  40f138:	add	x2, x0, #0xb
  40f13c:	and	x2, x2, #0xfffffffffffffff8
  40f140:	str	x2, [x1]
  40f144:	add	w20, w20, #0x1
  40f148:	ldr	w0, [x0]
  40f14c:	ldr	x1, [x25, w20, uxtw #3]
  40f150:	cmp	x28, x1
  40f154:	b.eq	40f184 <nftw@plt+0xc494>  // b.none
  40f158:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f15c:	mov	w1, #0x555                 	// #1365
  40f160:	add	x2, x2, #0x776
  40f164:	b	40e1b0 <nftw@plt+0xb4c0>
  40f168:	add	w3, w2, #0x8
  40f16c:	str	w3, [x1, #24]
  40f170:	cmp	w3, #0x0
  40f174:	b.gt	40f138 <nftw@plt+0xc448>
  40f178:	ldr	x0, [x1, #8]
  40f17c:	add	x0, x0, w2, sxtw
  40f180:	b	40f144 <nftw@plt+0xc454>
  40f184:	ldr	x3, [x21, #8]
  40f188:	ldr	w1, [x3, #24]
  40f18c:	ldr	x2, [x3]
  40f190:	tbnz	w1, #31, 40f1c4 <nftw@plt+0xc4d4>
  40f194:	add	x1, x2, #0xf
  40f198:	and	x1, x1, #0xfffffffffffffff8
  40f19c:	str	x1, [x3]
  40f1a0:	ldr	x24, [x2]
  40f1a4:	tbz	w0, #31, 40f1e0 <nftw@plt+0xc4f0>
  40f1a8:	mov	x0, x24
  40f1ac:	bl	402630 <strlen@plt>
  40f1b0:	add	x2, x24, x0
  40f1b4:	mov	x1, x24
  40f1b8:	mov	x0, x19
  40f1bc:	bl	40dbe4 <nftw@plt+0xaef4>
  40f1c0:	b	40e924 <nftw@plt+0xbc34>
  40f1c4:	add	w4, w1, #0x8
  40f1c8:	str	w4, [x3, #24]
  40f1cc:	cmp	w4, #0x0
  40f1d0:	b.gt	40f194 <nftw@plt+0xc4a4>
  40f1d4:	ldr	x2, [x3, #8]
  40f1d8:	add	x2, x2, w1, sxtw
  40f1dc:	b	40f1a0 <nftw@plt+0xc4b0>
  40f1e0:	sxtw	x1, w0
  40f1e4:	mov	x0, x24
  40f1e8:	bl	402680 <strnlen@plt>
  40f1ec:	b	40f1b0 <nftw@plt+0xc4c0>
  40f1f0:	ldr	x9, [x19, #48]
  40f1f4:	cbnz	x9, 40f208 <nftw@plt+0xc518>
  40f1f8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f1fc:	mov	w1, #0x56d                 	// #1389
  40f200:	add	x2, x2, #0x776
  40f204:	b	40e1b0 <nftw@plt+0xb4c0>
  40f208:	str	x28, [sp]
  40f20c:	add	x7, sp, #0xc7
  40f210:	mov	w3, w24
  40f214:	mov	x2, x27
  40f218:	mov	x1, x21
  40f21c:	mov	x0, x19
  40f220:	blr	x9
  40f224:	tst	w0, #0xff
  40f228:	b.ne	40e924 <nftw@plt+0xbc34>  // b.any
  40f22c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f230:	mov	w1, #0x571                 	// #1393
  40f234:	add	x2, x2, #0x776
  40f238:	b	40e1b0 <nftw@plt+0xb4c0>
  40f23c:	ldr	x0, [x19, #56]
  40f240:	cbz	x0, 40f254 <nftw@plt+0xc564>
  40f244:	ldr	x1, [x0]
  40f248:	ldr	x2, [x1, #16]
  40f24c:	mov	x1, x19
  40f250:	blr	x2
  40f254:	ldr	x0, [sp, #112]
  40f258:	ldp	x29, x30, [sp, #16]
  40f25c:	ldp	x21, x22, [sp, #48]
  40f260:	ldp	x23, x24, [sp, #64]
  40f264:	ldp	x25, x26, [sp, #80]
  40f268:	ldp	x27, x28, [sp, #96]
  40f26c:	str	x0, [x0, #176]
  40f270:	str	wzr, [x0, #200]
  40f274:	ldr	x0, [sp, #120]
  40f278:	str	wzr, [x19, #32]
  40f27c:	stur	x0, [x19, #36]
  40f280:	strb	wzr, [x19, #64]
  40f284:	ldp	x19, x20, [sp, #32]
  40f288:	add	sp, sp, #0x1c0
  40f28c:	ret
  40f290:	ldrb	w0, [x20, #1]
  40f294:	cmp	w0, #0x3e
  40f298:	b.eq	40e1f0 <nftw@plt+0xb500>  // b.none
  40f29c:	b.hi	40f38c <nftw@plt+0xc69c>  // b.pmore
  40f2a0:	cmp	w0, #0x27
  40f2a4:	b.eq	40e23c <nftw@plt+0xb54c>  // b.none
  40f2a8:	b.hi	40f2f8 <nftw@plt+0xc608>  // b.pmore
  40f2ac:	cbz	w0, 40e1a4 <nftw@plt+0xb4b4>
  40f2b0:	cmp	w0, #0x25
  40f2b4:	b.eq	40e1bc <nftw@plt+0xb4cc>  // b.none
  40f2b8:	ldp	x0, x1, [x26, #24]
  40f2bc:	cmp	x1, x0
  40f2c0:	b.ne	40f2d0 <nftw@plt+0xc5e0>  // b.any
  40f2c4:	mov	x0, x26
  40f2c8:	mov	x1, #0x1                   	// #1
  40f2cc:	bl	43ce94 <_obstack_newchunk@@Base>
  40f2d0:	ldr	x0, [x26, #24]
  40f2d4:	cmp	w22, #0x3b
  40f2d8:	add	x1, x0, #0x1
  40f2dc:	str	x1, [x26, #24]
  40f2e0:	strb	wzr, [x0]
  40f2e4:	b.ls	40e294 <nftw@plt+0xb5a4>  // b.plast
  40f2e8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f2ec:	mov	w1, #0x450                 	// #1104
  40f2f0:	add	x2, x2, #0x776
  40f2f4:	b	40e1b0 <nftw@plt+0xb4c0>
  40f2f8:	cmp	w0, #0x3c
  40f2fc:	b.ne	40f2b8 <nftw@plt+0xc5c8>  // b.any
  40f300:	ldr	x0, [sp, #160]
  40f304:	ldr	x0, [x0]
  40f308:	bl	402630 <strlen@plt>
  40f30c:	mov	x27, x0
  40f310:	ldp	x1, x0, [x26, #24]
  40f314:	sub	x0, x0, x1
  40f318:	cmp	x27, x0
  40f31c:	b.ls	40f32c <nftw@plt+0xc63c>  // b.plast
  40f320:	mov	x1, x27
  40f324:	mov	x0, x26
  40f328:	bl	43ce94 <_obstack_newchunk@@Base>
  40f32c:	ldr	x0, [sp, #160]
  40f330:	mov	x2, x27
  40f334:	ldr	x1, [x0]
  40f338:	ldr	x0, [x26, #24]
  40f33c:	bl	4025d0 <memcpy@plt>
  40f340:	ldr	x0, [x26, #24]
  40f344:	ldr	x1, [sp, #176]
  40f348:	add	x0, x0, x27
  40f34c:	str	x0, [x26, #24]
  40f350:	ldrb	w0, [x19, #67]
  40f354:	bl	40900c <nftw@plt+0x631c>
  40f358:	mov	x27, x0
  40f35c:	bl	402630 <strlen@plt>
  40f360:	mov	x28, x0
  40f364:	ldp	x1, x0, [x26, #24]
  40f368:	sub	x0, x0, x1
  40f36c:	cmp	x28, x0
  40f370:	b.ls	40f380 <nftw@plt+0xc690>  // b.plast
  40f374:	mov	x1, x28
  40f378:	mov	x0, x26
  40f37c:	bl	43ce94 <_obstack_newchunk@@Base>
  40f380:	mov	x2, x28
  40f384:	mov	x1, x27
  40f388:	b	40e270 <nftw@plt+0xb580>
  40f38c:	cmp	w0, #0x52
  40f390:	b.eq	40e288 <nftw@plt+0xb598>  // b.none
  40f394:	cmp	w0, #0x6d
  40f398:	b.ne	40f2b8 <nftw@plt+0xc5c8>  // b.any
  40f39c:	ldr	w0, [x21, #16]
  40f3a0:	bl	43d2b0 <_obstack_memory_used@@Base+0x258>
  40f3a4:	b	40f358 <nftw@plt+0xc668>
  40f3a8:	stp	x29, x30, [sp, #-32]!
  40f3ac:	mov	x2, #0x1                   	// #1
  40f3b0:	mov	x29, sp
  40f3b4:	stp	x19, x20, [sp, #16]
  40f3b8:	mov	x19, x0
  40f3bc:	ldur	x20, [x0, #36]
  40f3c0:	stur	x2, [x0, #36]
  40f3c4:	bl	40e06c <nftw@plt+0xb37c>
  40f3c8:	mov	x0, x19
  40f3cc:	bl	40de5c <nftw@plt+0xb16c>
  40f3d0:	stur	x20, [x19, #36]
  40f3d4:	ldp	x19, x20, [sp, #16]
  40f3d8:	ldp	x29, x30, [sp], #32
  40f3dc:	ret
  40f3e0:	stp	x29, x30, [sp, #-288]!
  40f3e4:	mov	x29, sp
  40f3e8:	stp	x19, x20, [sp, #16]
  40f3ec:	mov	x19, x0
  40f3f0:	add	x0, sp, #0x120
  40f3f4:	stp	x0, x0, [sp, #40]
  40f3f8:	add	x0, sp, #0xf0
  40f3fc:	mov	x20, x1
  40f400:	str	x0, [sp, #56]
  40f404:	mov	w0, #0xffffffd0            	// #-48
  40f408:	str	w0, [sp, #64]
  40f40c:	mov	w0, #0xffffff80            	// #-128
  40f410:	str	w0, [sp, #68]
  40f414:	str	q0, [sp, #112]
  40f418:	str	q1, [sp, #128]
  40f41c:	str	q2, [sp, #144]
  40f420:	str	q3, [sp, #160]
  40f424:	str	q4, [sp, #176]
  40f428:	str	q5, [sp, #192]
  40f42c:	str	q6, [sp, #208]
  40f430:	str	q7, [sp, #224]
  40f434:	stp	x2, x3, [sp, #240]
  40f438:	stp	x4, x5, [sp, #256]
  40f43c:	stp	x6, x7, [sp, #272]
  40f440:	bl	402c20 <__errno_location@plt>
  40f444:	ldr	w0, [x0]
  40f448:	str	w0, [sp, #88]
  40f44c:	add	x0, sp, #0x28
  40f450:	add	x1, sp, #0x48
  40f454:	str	x20, [sp, #72]
  40f458:	str	x0, [sp, #80]
  40f45c:	mov	x0, x19
  40f460:	bl	40f3a8 <nftw@plt+0xc6b8>
  40f464:	ldp	x19, x20, [sp, #16]
  40f468:	ldp	x29, x30, [sp], #288
  40f46c:	ret
  40f470:	stp	x29, x30, [sp, #-288]!
  40f474:	mov	x29, sp
  40f478:	stp	x19, x20, [sp, #16]
  40f47c:	mov	x19, x0
  40f480:	add	x0, sp, #0x120
  40f484:	stp	x0, x0, [sp, #40]
  40f488:	add	x0, sp, #0xf0
  40f48c:	mov	x20, x1
  40f490:	str	x0, [sp, #56]
  40f494:	mov	w0, #0xffffffd0            	// #-48
  40f498:	str	w0, [sp, #64]
  40f49c:	mov	w0, #0xffffff80            	// #-128
  40f4a0:	str	w0, [sp, #68]
  40f4a4:	str	q0, [sp, #112]
  40f4a8:	str	q1, [sp, #128]
  40f4ac:	str	q2, [sp, #144]
  40f4b0:	str	q3, [sp, #160]
  40f4b4:	str	q4, [sp, #176]
  40f4b8:	str	q5, [sp, #192]
  40f4bc:	str	q6, [sp, #208]
  40f4c0:	str	q7, [sp, #224]
  40f4c4:	stp	x2, x3, [sp, #240]
  40f4c8:	stp	x4, x5, [sp, #256]
  40f4cc:	stp	x6, x7, [sp, #272]
  40f4d0:	bl	402c20 <__errno_location@plt>
  40f4d4:	add	x1, sp, #0x48
  40f4d8:	ldr	w0, [x0]
  40f4dc:	str	w0, [sp, #88]
  40f4e0:	add	x0, sp, #0x28
  40f4e4:	str	x20, [sp, #72]
  40f4e8:	str	x0, [sp, #80]
  40f4ec:	mov	x0, x19
  40f4f0:	bl	40e06c <nftw@plt+0xb37c>
  40f4f4:	mov	x0, x19
  40f4f8:	bl	40de5c <nftw@plt+0xb16c>
  40f4fc:	ldp	x19, x20, [sp, #16]
  40f500:	ldp	x29, x30, [sp], #288
  40f504:	ret
  40f508:	stp	x29, x30, [sp, #-112]!
  40f50c:	mov	x29, sp
  40f510:	stp	x19, x20, [sp, #16]
  40f514:	mov	x19, x0
  40f518:	stp	x21, x22, [sp, #32]
  40f51c:	mov	x21, #0x0                   	// #0
  40f520:	mov	w22, #0x1                   	// #1
  40f524:	stp	x23, x24, [sp, #48]
  40f528:	stp	x25, x26, [sp, #64]
  40f52c:	bl	402630 <strlen@plt>
  40f530:	mov	x20, x0
  40f534:	cmp	x21, x20
  40f538:	b.cs	40f5d4 <nftw@plt+0xc8e4>  // b.hs, b.nlast
  40f53c:	sub	x1, x20, x21
  40f540:	add	x2, sp, #0x68
  40f544:	add	x0, x19, x21
  40f548:	bl	40d344 <nftw@plt+0xa654>
  40f54c:	sxtw	x1, w0
  40f550:	cbz	w0, 40f56c <nftw@plt+0xc87c>
  40f554:	ldr	w0, [sp, #104]
  40f558:	cmp	w0, #0x1f
  40f55c:	b.ls	40f56c <nftw@plt+0xc87c>  // b.plast
  40f560:	sub	w0, w0, #0x7f
  40f564:	cmp	w0, #0x20
  40f568:	b.hi	40f5c4 <nftw@plt+0xc8d4>  // b.pmore
  40f56c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40f570:	lsl	x0, x20, #2
  40f574:	add	x0, x0, #0x1
  40f578:	adrp	x24, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f57c:	ldr	x1, [x1, #1312]
  40f580:	add	x24, x24, #0x7b1
  40f584:	mov	x23, #0x0                   	// #0
  40f588:	blr	x1
  40f58c:	mov	x22, x0
  40f590:	mov	x21, x0
  40f594:	ldrb	w2, [x19, x23]
  40f598:	sub	w0, w2, #0x20
  40f59c:	and	w0, w0, #0xff
  40f5a0:	cmp	w0, #0x5e
  40f5a4:	b.hi	40f5f4 <nftw@plt+0xc904>  // b.pmore
  40f5a8:	strb	w2, [x21], #1
  40f5ac:	add	x23, x23, #0x1
  40f5b0:	cmp	x20, x23
  40f5b4:	b.ne	40f594 <nftw@plt+0xc8a4>  // b.any
  40f5b8:	mov	x19, x22
  40f5bc:	strb	wzr, [x21]
  40f5c0:	b	40f5d8 <nftw@plt+0xc8e8>
  40f5c4:	cmp	x1, #0x2
  40f5c8:	add	x21, x21, x1
  40f5cc:	csel	w22, w22, wzr, cc  // cc = lo, ul, last
  40f5d0:	b	40f534 <nftw@plt+0xc844>
  40f5d4:	cbz	w22, 40f608 <nftw@plt+0xc918>
  40f5d8:	mov	x0, x19
  40f5dc:	ldp	x19, x20, [sp, #16]
  40f5e0:	ldp	x21, x22, [sp, #32]
  40f5e4:	ldp	x23, x24, [sp, #48]
  40f5e8:	ldp	x25, x26, [sp, #64]
  40f5ec:	ldp	x29, x30, [sp], #112
  40f5f0:	ret
  40f5f4:	mov	x0, x21
  40f5f8:	mov	x1, x24
  40f5fc:	add	x21, x21, #0x4
  40f600:	bl	4026e0 <sprintf@plt>
  40f604:	b	40f5ac <nftw@plt+0xc8bc>
  40f608:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40f60c:	ldrb	w25, [x0, #2248]
  40f610:	cbnz	w25, 40f5d8 <nftw@plt+0xc8e8>
  40f614:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40f618:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40f61c:	ldr	x0, [x0, #2240]
  40f620:	cbz	x0, 40f710 <nftw@plt+0xca20>
  40f624:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  40f628:	add	x1, x1, #0xb95
  40f62c:	bl	402b10 <iconv_open@plt>
  40f630:	mov	x22, x0
  40f634:	cmn	x0, #0x1
  40f638:	b.eq	40f710 <nftw@plt+0xca20>  // b.none
  40f63c:	lsl	x21, x20, #2
  40f640:	add	x26, x24, #0x520
  40f644:	add	x21, x21, #0x1
  40f648:	ldr	x1, [x26]
  40f64c:	sub	x0, x21, #0x1
  40f650:	str	x19, [sp, #80]
  40f654:	stp	x20, x0, [sp, #96]
  40f658:	mov	x0, x21
  40f65c:	blr	x1
  40f660:	mov	x23, x0
  40f664:	mov	x4, #0x0                   	// #0
  40f668:	mov	x0, x22
  40f66c:	mov	x3, #0x0                   	// #0
  40f670:	mov	x2, #0x0                   	// #0
  40f674:	mov	x1, #0x0                   	// #0
  40f678:	str	x23, [sp, #88]
  40f67c:	bl	402a10 <iconv@plt>
  40f680:	cmn	x0, #0x1
  40f684:	b.eq	40f704 <nftw@plt+0xca14>  // b.none
  40f688:	add	x4, sp, #0x68
  40f68c:	add	x3, sp, #0x58
  40f690:	add	x2, sp, #0x60
  40f694:	add	x1, sp, #0x50
  40f698:	mov	x0, x22
  40f69c:	bl	402a10 <iconv@plt>
  40f6a0:	cmn	x0, #0x1
  40f6a4:	b.eq	40f6b0 <nftw@plt+0xc9c0>  // b.none
  40f6a8:	ldr	x1, [sp, #96]
  40f6ac:	cbz	x1, 40f6d4 <nftw@plt+0xc9e4>
  40f6b0:	bl	402c20 <__errno_location@plt>
  40f6b4:	ldr	w0, [x0]
  40f6b8:	cmp	w0, #0x7
  40f6bc:	b.ne	40f704 <nftw@plt+0xca14>  // b.any
  40f6c0:	ldr	x1, [x26, #8]
  40f6c4:	lsl	x21, x21, #1
  40f6c8:	mov	x0, x23
  40f6cc:	blr	x1
  40f6d0:	b	40f648 <nftw@plt+0xc958>
  40f6d4:	cbnz	x0, 40f704 <nftw@plt+0xca14>
  40f6d8:	add	x4, sp, #0x68
  40f6dc:	add	x3, sp, #0x58
  40f6e0:	mov	x0, x22
  40f6e4:	mov	x2, #0x0                   	// #0
  40f6e8:	mov	x1, #0x0                   	// #0
  40f6ec:	bl	402a10 <iconv@plt>
  40f6f0:	cmn	x0, #0x1
  40f6f4:	b.eq	40f6b0 <nftw@plt+0xc9c0>  // b.none
  40f6f8:	ldr	x0, [sp, #88]
  40f6fc:	mov	w25, #0x1                   	// #1
  40f700:	strb	wzr, [x0]
  40f704:	mov	x0, x22
  40f708:	bl	402690 <iconv_close@plt>
  40f70c:	cbnz	w25, 40f788 <nftw@plt+0xca98>
  40f710:	ldr	x1, [x24, #1312]
  40f714:	mov	x0, #0xa                   	// #10
  40f718:	adrp	x24, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f71c:	add	x24, x24, #0x7b7
  40f720:	mul	x0, x20, x0
  40f724:	mov	x22, #0x0                   	// #0
  40f728:	add	x0, x0, #0x1
  40f72c:	blr	x1
  40f730:	mov	x23, x0
  40f734:	mov	x21, x0
  40f738:	cmp	x22, x20
  40f73c:	b.cs	40f784 <nftw@plt+0xca94>  // b.hs, b.nlast
  40f740:	add	x2, sp, #0x68
  40f744:	sub	x1, x20, x22
  40f748:	add	x0, x19, x22
  40f74c:	bl	40d344 <nftw@plt+0xa654>
  40f750:	sxtw	x25, w0
  40f754:	cmp	w0, #0x1
  40f758:	b.ne	40f76c <nftw@plt+0xca7c>  // b.any
  40f75c:	ldrb	w0, [x19, x22]
  40f760:	strb	w0, [x21], #1
  40f764:	add	x22, x22, x25
  40f768:	b	40f738 <nftw@plt+0xca48>
  40f76c:	ldr	w2, [sp, #104]
  40f770:	mov	x1, x24
  40f774:	mov	x0, x21
  40f778:	add	x21, x21, #0xa
  40f77c:	bl	4026e0 <sprintf@plt>
  40f780:	b	40f764 <nftw@plt+0xca74>
  40f784:	strb	wzr, [x21]
  40f788:	mov	x19, x23
  40f78c:	b	40f5d8 <nftw@plt+0xc8e8>
  40f790:	stp	x29, x30, [sp, #-32]!
  40f794:	mov	x2, x1
  40f798:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f79c:	mov	x29, sp
  40f7a0:	str	x19, [sp, #16]
  40f7a4:	mov	x19, x0
  40f7a8:	ldr	x0, [x0, #8]
  40f7ac:	add	x1, x1, #0x7be
  40f7b0:	add	x0, x0, #0xcc
  40f7b4:	bl	4026e0 <sprintf@plt>
  40f7b8:	mov	x0, x19
  40f7bc:	ldr	x1, [x19, #8]
  40f7c0:	ldr	x19, [sp, #16]
  40f7c4:	add	x1, x1, #0xcc
  40f7c8:	ldp	x29, x30, [sp], #32
  40f7cc:	b	40de28 <nftw@plt+0xb138>
  40f7d0:	stp	x29, x30, [sp, #-32]!
  40f7d4:	mov	x29, sp
  40f7d8:	stp	x19, x20, [sp, #16]
  40f7dc:	mov	x20, x1
  40f7e0:	ldrh	w1, [x1, #2]
  40f7e4:	cbnz	w1, 40f7f8 <nftw@plt+0xcb08>
  40f7e8:	ldrh	w1, [x20]
  40f7ec:	ldp	x19, x20, [sp, #16]
  40f7f0:	ldp	x29, x30, [sp], #32
  40f7f4:	b	40f790 <nftw@plt+0xcaa0>
  40f7f8:	mov	x19, x0
  40f7fc:	mov	w1, #0x5b                  	// #91
  40f800:	bl	40da7c <nftw@plt+0xad8c>
  40f804:	ldrh	w1, [x20]
  40f808:	mov	x0, x19
  40f80c:	bl	40f790 <nftw@plt+0xcaa0>
  40f810:	mov	x0, x19
  40f814:	mov	w1, #0x2c                  	// #44
  40f818:	bl	40da7c <nftw@plt+0xad8c>
  40f81c:	ldrh	w1, [x20, #2]
  40f820:	mov	x0, x19
  40f824:	bl	40f790 <nftw@plt+0xcaa0>
  40f828:	mov	x0, x19
  40f82c:	mov	w1, #0x5d                  	// #93
  40f830:	ldp	x19, x20, [sp, #16]
  40f834:	ldp	x29, x30, [sp], #32
  40f838:	b	40da7c <nftw@plt+0xad8c>
  40f83c:	stp	x29, x30, [sp, #-32]!
  40f840:	mov	x29, sp
  40f844:	stp	x19, x20, [sp, #16]
  40f848:	mov	x20, x1
  40f84c:	ldr	x1, [x1, #8]
  40f850:	cbnz	x1, 40f864 <nftw@plt+0xcb74>
  40f854:	ldr	x1, [x20]
  40f858:	ldp	x19, x20, [sp, #16]
  40f85c:	ldp	x29, x30, [sp], #32
  40f860:	b	40f790 <nftw@plt+0xcaa0>
  40f864:	mov	x19, x0
  40f868:	mov	w1, #0x5b                  	// #91
  40f86c:	bl	40da7c <nftw@plt+0xad8c>
  40f870:	ldr	x1, [x20]
  40f874:	mov	x0, x19
  40f878:	bl	40f790 <nftw@plt+0xcaa0>
  40f87c:	mov	x0, x19
  40f880:	mov	w1, #0x2c                  	// #44
  40f884:	bl	40da7c <nftw@plt+0xad8c>
  40f888:	ldr	x1, [x20, #8]
  40f88c:	mov	x0, x19
  40f890:	bl	40f790 <nftw@plt+0xcaa0>
  40f894:	mov	x0, x19
  40f898:	mov	w1, #0x5d                  	// #93
  40f89c:	ldp	x19, x20, [sp, #16]
  40f8a0:	ldp	x29, x30, [sp], #32
  40f8a4:	b	40da7c <nftw@plt+0xad8c>
  40f8a8:	stp	x29, x30, [sp, #-32]!
  40f8ac:	mov	x29, sp
  40f8b0:	stp	x19, x20, [sp, #16]
  40f8b4:	mov	x20, x1
  40f8b8:	ldr	x1, [x1, #8]
  40f8bc:	cbnz	x1, 40f8d0 <nftw@plt+0xcbe0>
  40f8c0:	ldr	x1, [x20]
  40f8c4:	ldp	x19, x20, [sp, #16]
  40f8c8:	ldp	x29, x30, [sp], #32
  40f8cc:	b	40f790 <nftw@plt+0xcaa0>
  40f8d0:	mov	x19, x0
  40f8d4:	mov	w1, #0x5b                  	// #91
  40f8d8:	bl	40da7c <nftw@plt+0xad8c>
  40f8dc:	ldr	x1, [x20]
  40f8e0:	mov	x0, x19
  40f8e4:	bl	40f790 <nftw@plt+0xcaa0>
  40f8e8:	mov	x0, x19
  40f8ec:	mov	w1, #0x2c                  	// #44
  40f8f0:	bl	40da7c <nftw@plt+0xad8c>
  40f8f4:	ldr	x1, [x20, #8]
  40f8f8:	mov	x0, x19
  40f8fc:	bl	40f790 <nftw@plt+0xcaa0>
  40f900:	mov	x0, x19
  40f904:	mov	w1, #0x5d                  	// #93
  40f908:	ldp	x19, x20, [sp, #16]
  40f90c:	ldp	x29, x30, [sp], #32
  40f910:	b	40da7c <nftw@plt+0xad8c>
  40f914:	stp	x29, x30, [sp, #-64]!
  40f918:	mov	w0, #0x0                   	// #0
  40f91c:	mov	x29, sp
  40f920:	stp	x19, x20, [sp, #16]
  40f924:	adrp	x19, 44d000 <_obstack_memory_used@@Base+0xffa8>
  40f928:	add	x19, x19, #0xe54
  40f92c:	mov	x1, x19
  40f930:	stp	x21, x22, [sp, #32]
  40f934:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40f938:	stp	x23, x24, [sp, #48]
  40f93c:	bl	402cd0 <setlocale@plt>
  40f940:	mov	x1, x19
  40f944:	mov	w0, #0x5                   	// #5
  40f948:	bl	402cd0 <setlocale@plt>
  40f94c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f950:	add	x1, x1, #0x828
  40f954:	adrp	x19, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f958:	add	x19, x19, #0x83a
  40f95c:	mov	x0, x19
  40f960:	bl	402800 <bindtextdomain@plt>
  40f964:	mov	x0, x19
  40f968:	adrp	x24, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f96c:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40f970:	bl	4029e0 <textdomain@plt>
  40f974:	add	x24, x24, #0x83e
  40f978:	add	x22, x19, #0x530
  40f97c:	mov	x0, x24
  40f980:	adrp	x23, 456000 <_obstack_memory_used@@Base+0x18fa8>
  40f984:	bl	402c90 <gettext@plt>
  40f988:	add	x23, x23, #0x446
  40f98c:	str	x0, [x19, #1328]
  40f990:	mov	x0, x23
  40f994:	bl	402c90 <gettext@plt>
  40f998:	str	x0, [x22, #8]
  40f99c:	mov	w0, #0xe                   	// #14
  40f9a0:	bl	402790 <nl_langinfo@plt>
  40f9a4:	str	x0, [x20, #2240]
  40f9a8:	cbz	x0, 40f9e0 <nftw@plt+0xccf0>
  40f9ac:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f9b0:	mov	x21, x0
  40f9b4:	add	x1, x1, #0x840
  40f9b8:	bl	402890 <strcasecmp@plt>
  40f9bc:	cbz	w0, 40f9d4 <nftw@plt+0xcce4>
  40f9c0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40f9c4:	mov	x0, x21
  40f9c8:	add	x1, x1, #0x846
  40f9cc:	bl	402890 <strcasecmp@plt>
  40f9d0:	cbnz	w0, 40f9e0 <nftw@plt+0xccf0>
  40f9d4:	add	x0, x20, #0x8c0
  40f9d8:	mov	w1, #0x1                   	// #1
  40f9dc:	strb	w1, [x0, #8]
  40f9e0:	ldr	x0, [x19, #1328]
  40f9e4:	mov	x1, x24
  40f9e8:	bl	402a00 <strcmp@plt>
  40f9ec:	cbnz	w0, 40fa28 <nftw@plt+0xcd38>
  40f9f0:	ldr	x0, [x22, #8]
  40f9f4:	mov	x1, x23
  40f9f8:	bl	402a00 <strcmp@plt>
  40f9fc:	cbnz	w0, 40fa28 <nftw@plt+0xcd38>
  40fa00:	add	x20, x20, #0x8c0
  40fa04:	str	x23, [x19, #1328]
  40fa08:	ldrb	w0, [x20, #8]
  40fa0c:	cbz	w0, 40fa28 <nftw@plt+0xcd38>
  40fa10:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fa14:	add	x0, x0, #0x84b
  40fa18:	str	x0, [x19, #1328]
  40fa1c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fa20:	add	x0, x0, #0x84f
  40fa24:	str	x0, [x22, #8]
  40fa28:	ldp	x19, x20, [sp, #16]
  40fa2c:	ldp	x21, x22, [sp, #32]
  40fa30:	ldp	x23, x24, [sp, #48]
  40fa34:	ldp	x29, x30, [sp], #64
  40fa38:	ret
  40fa3c:	stp	x29, x30, [sp, #-48]!
  40fa40:	mov	x2, #0x0                   	// #0
  40fa44:	mov	x1, x0
  40fa48:	mov	x29, sp
  40fa4c:	stp	x19, x20, [sp, #16]
  40fa50:	mov	x20, x0
  40fa54:	mov	x0, #0x0                   	// #0
  40fa58:	str	x21, [sp, #32]
  40fa5c:	bl	402650 <mbstowcs@plt>
  40fa60:	add	x2, x0, #0x1
  40fa64:	mov	x19, x0
  40fa68:	mov	x1, x20
  40fa6c:	lsl	x3, x2, #2
  40fa70:	add	x3, x3, #0xf
  40fa74:	and	x3, x3, #0xfffffffffffffff0
  40fa78:	sub	sp, sp, x3
  40fa7c:	mov	x21, sp
  40fa80:	mov	x0, x21
  40fa84:	bl	402650 <mbstowcs@plt>
  40fa88:	mov	x1, x19
  40fa8c:	mov	x0, x21
  40fa90:	bl	4027e0 <wcswidth@plt>
  40fa94:	mov	sp, x29
  40fa98:	sxtw	x0, w0
  40fa9c:	ldp	x19, x20, [sp, #16]
  40faa0:	ldr	x21, [sp, #32]
  40faa4:	ldp	x29, x30, [sp], #48
  40faa8:	ret
  40faac:	stp	x29, x30, [sp, #-32]!
  40fab0:	mov	x29, sp
  40fab4:	stp	x19, x20, [sp, #16]
  40fab8:	bl	40fa3c <nftw@plt+0xcd4c>
  40fabc:	mov	x19, x0
  40fac0:	add	x0, x0, #0x1
  40fac4:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  40fac8:	mov	x20, x0
  40facc:	mov	x2, x19
  40fad0:	mov	w1, #0x20                  	// #32
  40fad4:	bl	402840 <memset@plt>
  40fad8:	mov	x0, x20
  40fadc:	strb	wzr, [x20, x19]
  40fae0:	ldp	x19, x20, [sp, #16]
  40fae4:	ldp	x29, x30, [sp], #32
  40fae8:	ret
  40faec:	stp	x29, x30, [sp, #-32]!
  40faf0:	tst	w0, #0xff
  40faf4:	mov	x29, sp
  40faf8:	str	x19, [sp, #16]
  40fafc:	mov	x19, x1
  40fb00:	b.ne	40fb2c <nftw@plt+0xce3c>  // b.any
  40fb04:	mov	x0, x19
  40fb08:	mov	x1, #0x10                  	// #16
  40fb0c:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  40fb10:	mov	x1, #0x0                   	// #0
  40fb14:	cmp	x19, x1
  40fb18:	b.eq	40fb5c <nftw@plt+0xce6c>  // b.none
  40fb1c:	lsl	x2, x1, #4
  40fb20:	add	x1, x1, #0x1
  40fb24:	str	xzr, [x0, x2]
  40fb28:	b	40fb14 <nftw@plt+0xce24>
  40fb2c:	lsl	x0, x19, #4
  40fb30:	mov	x3, #0x0                   	// #0
  40fb34:	mov	x2, #0x0                   	// #0
  40fb38:	mov	x1, #0x0                   	// #0
  40fb3c:	bl	413820 <nftw@plt+0x10b30>
  40fb40:	cbnz	x0, 40fb10 <nftw@plt+0xce20>
  40fb44:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fb48:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fb4c:	add	x2, x2, #0x853
  40fb50:	add	x0, x0, #0x861
  40fb54:	mov	w1, #0x2b5                 	// #693
  40fb58:	bl	402d60 <nftw@plt+0x70>
  40fb5c:	ldr	x19, [sp, #16]
  40fb60:	ldp	x29, x30, [sp], #32
  40fb64:	ret
  40fb68:	stp	x29, x30, [sp, #-32]!
  40fb6c:	tst	w0, #0xff
  40fb70:	mov	x29, sp
  40fb74:	str	x19, [sp, #16]
  40fb78:	mov	x19, x1
  40fb7c:	b.ne	40fbac <nftw@plt+0xcebc>  // b.any
  40fb80:	mov	x0, x19
  40fb84:	mov	x1, #0x18                  	// #24
  40fb88:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  40fb8c:	mov	x1, #0x0                   	// #0
  40fb90:	mov	x3, #0x18                  	// #24
  40fb94:	cmp	x19, x1
  40fb98:	b.eq	40fbe0 <nftw@plt+0xcef0>  // b.none
  40fb9c:	mul	x2, x1, x3
  40fba0:	add	x1, x1, #0x1
  40fba4:	str	xzr, [x0, x2]
  40fba8:	b	40fb94 <nftw@plt+0xcea4>
  40fbac:	mov	x0, #0x18                  	// #24
  40fbb0:	mov	x3, #0x0                   	// #0
  40fbb4:	mov	x2, #0x0                   	// #0
  40fbb8:	mov	x1, #0x0                   	// #0
  40fbbc:	mul	x0, x19, x0
  40fbc0:	bl	413820 <nftw@plt+0x10b30>
  40fbc4:	cbnz	x0, 40fb8c <nftw@plt+0xce9c>
  40fbc8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fbcc:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fbd0:	add	x2, x2, #0x853
  40fbd4:	add	x0, x0, #0x861
  40fbd8:	mov	w1, #0x2b5                 	// #693
  40fbdc:	bl	402d60 <nftw@plt+0x70>
  40fbe0:	ldr	x19, [sp, #16]
  40fbe4:	ldp	x29, x30, [sp], #32
  40fbe8:	ret
  40fbec:	cmp	w0, w1
  40fbf0:	b.cc	40fc14 <nftw@plt+0xcf24>  // b.lo, b.ul, b.last
  40fbf4:	stp	x29, x30, [sp, #-16]!
  40fbf8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fbfc:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fc00:	mov	x29, sp
  40fc04:	add	x2, x2, #0x878
  40fc08:	add	x0, x0, #0x88f
  40fc0c:	mov	w1, #0xa2                  	// #162
  40fc10:	bl	402d60 <nftw@plt+0x70>
  40fc14:	cbz	w0, 40fc38 <nftw@plt+0xcf48>
  40fc18:	add	w2, w0, w0, lsl #1
  40fc1c:	lsl	w3, w0, #1
  40fc20:	cmp	w0, #0xf
  40fc24:	lsr	w2, w2, #1
  40fc28:	csel	w2, w2, w3, hi  // hi = pmore
  40fc2c:	cmp	w2, w1
  40fc30:	csel	w0, w2, w1, cs  // cs = hs, nlast
  40fc34:	ret
  40fc38:	mov	w2, #0x4                   	// #4
  40fc3c:	b	40fc2c <nftw@plt+0xcf3c>
  40fc40:	mov	x2, #0x0                   	// #0
  40fc44:	mov	w1, #0x3                   	// #3
  40fc48:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40fc4c:	add	x0, x0, #0x8d0
  40fc50:	b	410bb8 <nftw@plt+0xdec8>
  40fc54:	stp	x29, x30, [sp, #-80]!
  40fc58:	mov	x29, sp
  40fc5c:	stp	x19, x20, [sp, #16]
  40fc60:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40fc64:	add	x20, x20, #0x8d0
  40fc68:	mov	x19, x1
  40fc6c:	stp	x21, x22, [sp, #32]
  40fc70:	mov	x22, x3
  40fc74:	ldr	x0, [x20, #48]
  40fc78:	stp	x23, x24, [sp, #48]
  40fc7c:	mov	x23, x2
  40fc80:	and	w24, w4, #0xff
  40fc84:	str	x1, [sp, #72]
  40fc88:	add	x1, sp, #0x48
  40fc8c:	bl	4103e4 <nftw@plt+0xd6f4>
  40fc90:	cbnz	x0, 40fcbc <nftw@plt+0xcfcc>
  40fc94:	mov	x0, #0x20                  	// #32
  40fc98:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40fc9c:	mov	x2, x0
  40fca0:	mov	x0, #0x300000000           	// #12884901888
  40fca4:	mov	x1, x19
  40fca8:	stp	xzr, xzr, [x2]
  40fcac:	str	x0, [x2, #16]
  40fcb0:	mov	x0, x20
  40fcb4:	strb	wzr, [x2, #24]
  40fcb8:	bl	410d78 <nftw@plt+0xe088>
  40fcbc:	ldr	x0, [x20, #48]
  40fcc0:	add	x1, sp, #0x48
  40fcc4:	str	x19, [sp, #72]
  40fcc8:	bl	4103e4 <nftw@plt+0xd6f4>
  40fccc:	cbz	x0, 40fd58 <nftw@plt+0xd068>
  40fcd0:	ldr	x21, [x0]
  40fcd4:	ldr	x2, [x21]
  40fcd8:	cmp	x23, x2
  40fcdc:	b.ls	40fcf8 <nftw@plt+0xd008>  // b.plast
  40fce0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fce4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40fce8:	add	x2, x2, #0x89f
  40fcec:	add	x0, x0, #0x8b0
  40fcf0:	mov	w1, #0x97                  	// #151
  40fcf4:	bl	402d60 <nftw@plt+0x70>
  40fcf8:	sub	x2, x2, x23
  40fcfc:	str	x2, [x21]
  40fd00:	cbz	w24, 40fd38 <nftw@plt+0xd048>
  40fd04:	ldr	x20, [x20, #48]
  40fd08:	ubfx	x2, x19, #3, #32
  40fd0c:	add	x1, sp, #0x48
  40fd10:	mov	w3, #0x0                   	// #0
  40fd14:	mov	x0, x20
  40fd18:	str	x19, [sp, #72]
  40fd1c:	bl	4107e0 <nftw@plt+0xdaf0>
  40fd20:	cbz	x0, 40fd38 <nftw@plt+0xd048>
  40fd24:	mov	x1, #0x1                   	// #1
  40fd28:	str	x1, [x0]
  40fd2c:	ldr	x0, [x20, #24]
  40fd30:	add	x0, x0, x1
  40fd34:	str	x0, [x20, #24]
  40fd38:	ldr	x3, [x21, #32]
  40fd3c:	ldp	x19, x20, [sp, #16]
  40fd40:	sub	x22, x3, x22
  40fd44:	ldp	x23, x24, [sp, #48]
  40fd48:	str	x22, [x21, #32]
  40fd4c:	ldp	x21, x22, [sp, #32]
  40fd50:	ldp	x29, x30, [sp], #80
  40fd54:	ret
  40fd58:	ldr	x0, [x0, #32]
  40fd5c:	brk	#0x3e8
  40fd60:	stp	x29, x30, [sp, #-80]!
  40fd64:	mov	x0, #0x20                  	// #32
  40fd68:	mov	x29, sp
  40fd6c:	stp	x19, x20, [sp, #16]
  40fd70:	mul	x20, x2, x3
  40fd74:	mov	x19, x2
  40fd78:	stp	x21, x22, [sp, #32]
  40fd7c:	mov	x21, x3
  40fd80:	adrp	x22, 47e000 <__environ@@GLIBC_2.17+0xa50>
  40fd84:	str	x23, [sp, #48]
  40fd88:	mov	x23, x1
  40fd8c:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  40fd90:	mov	x2, x0
  40fd94:	stp	xzr, xzr, [x0]
  40fd98:	add	x22, x22, #0x8d0
  40fd9c:	mov	x0, #0x300000000           	// #12884901888
  40fda0:	str	x0, [x2, #16]
  40fda4:	mov	x1, x23
  40fda8:	strb	wzr, [x2, #24]
  40fdac:	mov	x0, x22
  40fdb0:	bl	410d78 <nftw@plt+0xe088>
  40fdb4:	str	x23, [sp, #72]
  40fdb8:	ldr	x0, [x22, #48]
  40fdbc:	add	x1, sp, #0x48
  40fdc0:	bl	4103e4 <nftw@plt+0xd6f4>
  40fdc4:	cbz	x0, 40fe1c <nftw@plt+0xd12c>
  40fdc8:	ldr	x0, [x0]
  40fdcc:	ldp	x1, x2, [x0]
  40fdd0:	add	x2, x2, #0x1
  40fdd4:	add	x1, x20, x1
  40fdd8:	stp	x1, x2, [x0]
  40fddc:	ldr	x2, [x0, #16]
  40fde0:	cmp	x1, x2
  40fde4:	b.ls	40fdec <nftw@plt+0xd0fc>  // b.plast
  40fde8:	str	x1, [x0, #16]
  40fdec:	ldp	x2, x1, [x0, #32]
  40fdf0:	str	x21, [x0, #48]
  40fdf4:	add	x2, x19, x2
  40fdf8:	str	x2, [x0, #32]
  40fdfc:	cmp	x2, x1
  40fe00:	b.ls	40fe08 <nftw@plt+0xd118>  // b.plast
  40fe04:	str	x2, [x0, #40]
  40fe08:	ldp	x19, x20, [sp, #16]
  40fe0c:	ldp	x21, x22, [sp, #32]
  40fe10:	ldr	x23, [sp, #48]
  40fe14:	ldp	x29, x30, [sp], #80
  40fe18:	ret
  40fe1c:	str	xzr, [x0, #48]
  40fe20:	brk	#0x3e8
  40fe24:	ldr	x2, [x0, #8]
  40fe28:	ldr	x0, [x1, #8]
  40fe2c:	ldr	x3, [x2]
  40fe30:	ldr	x1, [x0]
  40fe34:	cmp	x3, x1
  40fe38:	b.ne	40fe5c <nftw@plt+0xd16c>  // b.any
  40fe3c:	ldr	x1, [x0, #16]
  40fe40:	ldr	x3, [x2, #16]
  40fe44:	cmp	x3, x1
  40fe48:	b.ne	40fe5c <nftw@plt+0xd16c>  // b.any
  40fe4c:	ldr	x0, [x0, #8]
  40fe50:	ldr	x1, [x2, #8]
  40fe54:	cmp	x1, x0
  40fe58:	b.eq	40fe70 <nftw@plt+0xd180>  // b.none
  40fe5c:	cset	w1, cc  // cc = lo, ul, last
  40fe60:	mov	w0, #0x1                   	// #1
  40fe64:	cmp	w1, #0x0
  40fe68:	cneg	w0, w0, eq  // eq = none
  40fe6c:	ret
  40fe70:	mov	w0, #0x0                   	// #0
  40fe74:	b	40fe6c <nftw@plt+0xd17c>
  40fe78:	mov	w3, #0x79b9                	// #31161
  40fe7c:	movk	w3, #0x9e37, lsl #16
  40fe80:	sub	w3, w3, w1
  40fe84:	sub	w3, w3, w0
  40fe88:	sub	w0, w0, w1
  40fe8c:	eor	w3, w3, w1, lsr #13
  40fe90:	sub	w0, w0, w3
  40fe94:	sub	w2, w1, w3
  40fe98:	eor	w0, w0, w3, lsl #8
  40fe9c:	sub	w2, w2, w0
  40fea0:	sub	w3, w3, w0
  40fea4:	eor	w2, w2, w0, lsr #13
  40fea8:	sub	w3, w3, w2
  40feac:	sub	w1, w0, w2
  40feb0:	eor	w3, w3, w2, lsr #12
  40feb4:	sub	w1, w1, w3
  40feb8:	sub	w0, w2, w3
  40febc:	eor	w1, w1, w3, lsl #16
  40fec0:	sub	w0, w0, w1
  40fec4:	sub	w3, w3, w1
  40fec8:	eor	w0, w0, w1, lsr #5
  40fecc:	sub	w3, w3, w0
  40fed0:	sub	w1, w1, w0
  40fed4:	eor	w3, w3, w0, lsr #3
  40fed8:	sub	w1, w1, w3
  40fedc:	sub	w0, w0, w3
  40fee0:	eor	w1, w1, w3, lsl #10
  40fee4:	sub	w0, w0, w1
  40fee8:	eor	w0, w0, w1, lsr #15
  40feec:	ret
  40fef0:	ubfiz	x1, x1, #4, #32
  40fef4:	adrp	x4, 450000 <_obstack_memory_used@@Base+0x12fa8>
  40fef8:	add	x4, x4, #0x380
  40fefc:	add	x5, x4, x1
  40ff00:	ldr	w1, [x4, x1]
  40ff04:	ldr	w2, [x5, #4]
  40ff08:	umull	x2, w0, w2
  40ff0c:	lsr	x2, x2, #32
  40ff10:	sub	w3, w0, w2
  40ff14:	add	w2, w2, w3, lsr #1
  40ff18:	ldr	w3, [x5, #12]
  40ff1c:	lsr	w2, w2, w3
  40ff20:	msub	w0, w2, w1, w0
  40ff24:	ret
  40ff28:	ubfiz	x1, x1, #4, #32
  40ff2c:	adrp	x4, 450000 <_obstack_memory_used@@Base+0x12fa8>
  40ff30:	add	x4, x4, #0x380
  40ff34:	add	w6, w0, #0x1
  40ff38:	add	x5, x4, x1
  40ff3c:	ldr	w2, [x5, #8]
  40ff40:	umull	x2, w0, w2
  40ff44:	lsr	x3, x2, #32
  40ff48:	sub	w2, w0, w3
  40ff4c:	ldr	w0, [x5, #12]
  40ff50:	add	w2, w3, w2, lsr #1
  40ff54:	lsr	w2, w2, w0
  40ff58:	ldr	w0, [x4, x1]
  40ff5c:	sub	w0, w0, #0x2
  40ff60:	msub	w0, w2, w0, w6
  40ff64:	ret
  40ff68:	stp	x29, x30, [sp, #-32]!
  40ff6c:	mov	x29, sp
  40ff70:	stp	x19, x20, [sp, #16]
  40ff74:	mov	x19, x0
  40ff78:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  40ff7c:	sub	x19, x19, #0x1
  40ff80:	ldr	x1, [x20, #1416]
  40ff84:	cmn	x19, #0x1
  40ff88:	b.eq	40ff98 <nftw@plt+0xd2a8>  // b.none
  40ff8c:	mov	w0, #0x2d                  	// #45
  40ff90:	bl	402710 <fputc@plt>
  40ff94:	b	40ff7c <nftw@plt+0xd28c>
  40ff98:	ldp	x19, x20, [sp, #16]
  40ff9c:	mov	w0, #0xa                   	// #10
  40ffa0:	ldp	x29, x30, [sp], #32
  40ffa4:	b	402710 <fputc@plt>
  40ffa8:	mov	x12, #0x1070                	// #4208
  40ffac:	sub	sp, sp, x12
  40ffb0:	stp	x29, x30, [sp, #48]
  40ffb4:	add	x29, sp, #0x30
  40ffb8:	stp	x19, x20, [sp, #64]
  40ffbc:	mov	x19, x0
  40ffc0:	mov	x20, x1
  40ffc4:	stp	x21, x22, [sp, #80]
  40ffc8:	mov	x21, x2
  40ffcc:	ldr	x22, [x1]
  40ffd0:	str	x23, [sp, #96]
  40ffd4:	adrp	x23, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  40ffd8:	add	x23, x23, #0x916
  40ffdc:	mov	x1, x23
  40ffe0:	mov	x0, x22
  40ffe4:	bl	402ba0 <strstr@plt>
  40ffe8:	cbz	x0, 40fff4 <nftw@plt+0xd304>
  40ffec:	add	x22, x0, #0x4
  40fff0:	b	40ffdc <nftw@plt+0xd2ec>
  40fff4:	ldr	w3, [x20, #16]
  40fff8:	mov	x2, x22
  40fffc:	ldr	x4, [x20, #8]
  410000:	add	x0, sp, #0x70
  410004:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  410008:	add	x1, x1, #0x91b
  41000c:	bl	4026e0 <sprintf@plt>
  410010:	strb	wzr, [sp, #160]
  410014:	ldr	x1, [x19]
  410018:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  41001c:	mov	x2, #0x27ff                	// #10239
  410020:	ldr	x0, [x0, #1416]
  410024:	cmp	x1, x2
  410028:	ldr	x3, [x19, #48]
  41002c:	b.ls	410134 <nftw@plt+0xd444>  // b.plast
  410030:	mov	w2, #0x9fffff              	// #10485759
  410034:	cmp	x1, x2
  410038:	b.hi	410128 <nftw@plt+0xd438>  // b.pmore
  41003c:	lsr	x4, x1, #10
  410040:	mov	w5, #0x6b                  	// #107
  410044:	ucvtf	d0, x1
  410048:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  41004c:	ldr	d2, [x21]
  410050:	ldr	d1, [x1, #2376]
  410054:	mov	x1, #0x27ff                	// #10239
  410058:	ldr	x6, [x19, #16]
  41005c:	ucvtf	d2, d2
  410060:	fmul	d0, d0, d1
  410064:	cmp	x6, x1
  410068:	fdiv	d0, d0, d2
  41006c:	fmov	d2, d1
  410070:	b.ls	41014c <nftw@plt+0xd45c>  // b.plast
  410074:	mov	w1, #0x9fffff              	// #10485759
  410078:	cmp	x6, x1
  41007c:	b.hi	410140 <nftw@plt+0xd450>  // b.pmore
  410080:	lsr	x6, x6, #10
  410084:	mov	w7, #0x6b                  	// #107
  410088:	ldr	d3, [x19, #8]
  41008c:	mov	x2, #0x27ff                	// #10239
  410090:	ldr	x1, [x19, #32]
  410094:	ucvtf	d1, d3
  410098:	cmp	x1, x2
  41009c:	fmul	d1, d1, d2
  4100a0:	ldr	d2, [x21, #8]
  4100a4:	ucvtf	d2, d2
  4100a8:	fdiv	d1, d1, d2
  4100ac:	b.ls	410160 <nftw@plt+0xd470>  // b.plast
  4100b0:	mov	w2, #0x9fffff              	// #10485759
  4100b4:	cmp	x1, x2
  4100b8:	b.hi	410154 <nftw@plt+0xd464>  // b.pmore
  4100bc:	lsr	x1, x1, #10
  4100c0:	mov	w8, #0x6b                  	// #107
  4100c4:	ldr	x2, [x19, #40]
  4100c8:	mov	x9, #0x27ff                	// #10239
  4100cc:	cmp	x2, x9
  4100d0:	b.ls	410174 <nftw@plt+0xd484>  // b.plast
  4100d4:	mov	w9, #0x9fffff              	// #10485759
  4100d8:	cmp	x2, x9
  4100dc:	b.hi	410168 <nftw@plt+0xd478>  // b.pmore
  4100e0:	lsr	x2, x2, #10
  4100e4:	mov	w9, #0x6b                  	// #107
  4100e8:	str	d3, [sp]
  4100ec:	str	x1, [sp, #8]
  4100f0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4100f4:	str	w8, [sp, #16]
  4100f8:	add	x1, x1, #0x926
  4100fc:	str	x2, [sp, #24]
  410100:	add	x2, sp, #0x70
  410104:	str	w9, [sp, #32]
  410108:	bl	402cb0 <fprintf@plt>
  41010c:	mov	x12, #0x1070                	// #4208
  410110:	ldp	x29, x30, [sp, #48]
  410114:	ldp	x19, x20, [sp, #64]
  410118:	ldp	x21, x22, [sp, #80]
  41011c:	ldr	x23, [sp, #96]
  410120:	add	sp, sp, x12
  410124:	ret
  410128:	lsr	x4, x1, #20
  41012c:	mov	w5, #0x4d                  	// #77
  410130:	b	410044 <nftw@plt+0xd354>
  410134:	mov	x4, x1
  410138:	mov	w5, #0x20                  	// #32
  41013c:	b	410044 <nftw@plt+0xd354>
  410140:	lsr	x6, x6, #20
  410144:	mov	w7, #0x4d                  	// #77
  410148:	b	410088 <nftw@plt+0xd398>
  41014c:	mov	w7, #0x20                  	// #32
  410150:	b	410088 <nftw@plt+0xd398>
  410154:	lsr	x1, x1, #20
  410158:	mov	w8, #0x4d                  	// #77
  41015c:	b	4100c4 <nftw@plt+0xd3d4>
  410160:	mov	w8, #0x20                  	// #32
  410164:	b	4100c4 <nftw@plt+0xd3d4>
  410168:	lsr	x2, x2, #20
  41016c:	mov	w9, #0x4d                  	// #77
  410170:	b	4100e8 <nftw@plt+0xd3f8>
  410174:	mov	w9, #0x20                  	// #32
  410178:	b	4100e8 <nftw@plt+0xd3f8>
  41017c:	sub	sp, sp, #0x20
  410180:	mov	x1, x0
  410184:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  410188:	mov	x2, #0x27ff                	// #10239
  41018c:	stp	x29, x30, [sp, #16]
  410190:	add	x29, sp, #0x10
  410194:	ldr	x3, [x1]
  410198:	ldr	x0, [x0, #1416]
  41019c:	cmp	x3, x2
  4101a0:	b.ls	410230 <nftw@plt+0xd540>  // b.plast
  4101a4:	mov	w2, #0x9fffff              	// #10485759
  4101a8:	cmp	x3, x2
  4101ac:	b.hi	410224 <nftw@plt+0xd534>  // b.pmore
  4101b0:	lsr	x3, x3, #10
  4101b4:	mov	w4, #0x6b                  	// #107
  4101b8:	ldr	x5, [x1, #8]
  4101bc:	mov	x2, #0x27ff                	// #10239
  4101c0:	cmp	x5, x2
  4101c4:	b.ls	410244 <nftw@plt+0xd554>  // b.plast
  4101c8:	mov	w2, #0x9fffff              	// #10485759
  4101cc:	cmp	x5, x2
  4101d0:	b.hi	410238 <nftw@plt+0xd548>  // b.pmore
  4101d4:	lsr	x5, x5, #10
  4101d8:	mov	w6, #0x6b                  	// #107
  4101dc:	ldr	x7, [x1, #32]
  4101e0:	mov	x1, #0x27ff                	// #10239
  4101e4:	cmp	x7, x1
  4101e8:	b.ls	410258 <nftw@plt+0xd568>  // b.plast
  4101ec:	mov	w1, #0x9fffff              	// #10485759
  4101f0:	cmp	x7, x1
  4101f4:	b.hi	41024c <nftw@plt+0xd55c>  // b.pmore
  4101f8:	lsr	x7, x7, #10
  4101fc:	mov	w1, #0x6b                  	// #107
  410200:	str	w1, [sp]
  410204:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  410208:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  41020c:	add	x2, x2, #0x963
  410210:	add	x1, x1, #0x969
  410214:	bl	402cb0 <fprintf@plt>
  410218:	ldp	x29, x30, [sp, #16]
  41021c:	add	sp, sp, #0x20
  410220:	ret
  410224:	lsr	x3, x3, #20
  410228:	mov	w4, #0x4d                  	// #77
  41022c:	b	4101b8 <nftw@plt+0xd4c8>
  410230:	mov	w4, #0x20                  	// #32
  410234:	b	4101b8 <nftw@plt+0xd4c8>
  410238:	lsr	x5, x5, #20
  41023c:	mov	w6, #0x4d                  	// #77
  410240:	b	4101dc <nftw@plt+0xd4ec>
  410244:	mov	w6, #0x20                  	// #32
  410248:	b	4101dc <nftw@plt+0xd4ec>
  41024c:	lsr	x7, x7, #20
  410250:	mov	w1, #0x4d                  	// #77
  410254:	b	410200 <nftw@plt+0xd510>
  410258:	mov	w1, #0x20                  	// #32
  41025c:	b	410200 <nftw@plt+0xd510>
  410260:	sub	sp, sp, #0x20
  410264:	mov	x2, x0
  410268:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  41026c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  410270:	add	x1, x1, #0x9c7
  410274:	adrp	x7, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  410278:	stp	x29, x30, [sp, #16]
  41027c:	add	x29, sp, #0x10
  410280:	add	x7, x7, #0x982
  410284:	ldr	x0, [x0, #1416]
  410288:	str	x1, [sp]
  41028c:	adrp	x6, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  410290:	adrp	x5, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  410294:	add	x6, x6, #0x98d
  410298:	add	x5, x5, #0x993
  41029c:	adrp	x4, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4102a0:	adrp	x3, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4102a4:	add	x4, x4, #0x998
  4102a8:	add	x3, x3, #0x99d
  4102ac:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4102b0:	add	x1, x1, #0x9a7
  4102b4:	bl	402cb0 <fprintf@plt>
  4102b8:	ldp	x29, x30, [sp, #16]
  4102bc:	add	sp, sp, #0x20
  4102c0:	ret
  4102c4:	stp	x29, x30, [sp, #-64]!
  4102c8:	mov	x29, sp
  4102cc:	stp	x19, x20, [sp, #16]
  4102d0:	mov	x20, x0
  4102d4:	mov	x0, #0x30                  	// #48
  4102d8:	stp	x21, x22, [sp, #32]
  4102dc:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4102e0:	add	x21, x21, #0x380
  4102e4:	str	x23, [sp, #48]
  4102e8:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  4102ec:	mov	x19, x0
  4102f0:	strb	wzr, [x0, #44]
  4102f4:	mov	x0, #0xd                   	// #13
  4102f8:	stp	xzr, xzr, [x19, #16]
  4102fc:	str	xzr, [x19, #32]
  410300:	bl	413434 <nftw@plt+0x10744>
  410304:	mov	w22, w0
  410308:	ubfiz	x0, x22, #4, #32
  41030c:	ldr	w23, [x21, x0]
  410310:	mov	w0, #0x0                   	// #0
  410314:	mov	x1, x23
  410318:	bl	40faec <nftw@plt+0xcdfc>
  41031c:	stp	x0, x23, [x19]
  410320:	mov	x0, #0x30                  	// #48
  410324:	str	w22, [x19, #40]
  410328:	str	x19, [x20, #40]
  41032c:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  410330:	mov	x19, x0
  410334:	strb	wzr, [x0, #44]
  410338:	mov	x0, #0xd                   	// #13
  41033c:	stp	xzr, xzr, [x19, #16]
  410340:	str	xzr, [x19, #32]
  410344:	bl	413434 <nftw@plt+0x10744>
  410348:	mov	w22, w0
  41034c:	ubfiz	x0, x22, #4, #32
  410350:	ldr	w23, [x21, x0]
  410354:	mov	w0, #0x0                   	// #0
  410358:	mov	x1, x23
  41035c:	bl	40fb68 <nftw@plt+0xce78>
  410360:	stp	x0, x23, [x19]
  410364:	mov	x0, #0x30                  	// #48
  410368:	str	w22, [x19, #40]
  41036c:	str	x19, [x20, #48]
  410370:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  410374:	mov	x19, x0
  410378:	strb	wzr, [x0, #44]
  41037c:	mov	x0, #0xd                   	// #13
  410380:	stp	xzr, xzr, [x19, #16]
  410384:	str	xzr, [x19, #32]
  410388:	bl	413434 <nftw@plt+0x10744>
  41038c:	mov	w22, w0
  410390:	mov	x1, #0x18                  	// #24
  410394:	ubfiz	x0, x22, #4, #32
  410398:	ldr	w21, [x21, x0]
  41039c:	mov	x0, x21
  4103a0:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  4103a4:	mov	x1, #0x0                   	// #0
  4103a8:	mov	x3, #0x18                  	// #24
  4103ac:	cmp	x21, x1
  4103b0:	b.ls	4103c4 <nftw@plt+0xd6d4>  // b.plast
  4103b4:	mul	x2, x1, x3
  4103b8:	add	x1, x1, #0x1
  4103bc:	str	xzr, [x0, x2]
  4103c0:	b	4103ac <nftw@plt+0xd6bc>
  4103c4:	ldr	x23, [sp, #48]
  4103c8:	stp	x0, x21, [x19]
  4103cc:	str	w22, [x19, #40]
  4103d0:	ldp	x21, x22, [sp, #32]
  4103d4:	str	x19, [x20]
  4103d8:	ldp	x19, x20, [sp, #16]
  4103dc:	ldp	x29, x30, [sp], #64
  4103e0:	ret
  4103e4:	stp	x29, x30, [sp, #-80]!
  4103e8:	mov	x29, sp
  4103ec:	stp	x19, x20, [sp, #16]
  4103f0:	mov	x19, x0
  4103f4:	ldr	w0, [x0, #32]
  4103f8:	stp	x21, x22, [sp, #32]
  4103fc:	add	w0, w0, #0x1
  410400:	ldr	x22, [x1]
  410404:	stp	x23, x24, [sp, #48]
  410408:	str	w0, [x19, #32]
  41040c:	str	x25, [sp, #64]
  410410:	asr	x24, x22, #3
  410414:	ldr	w25, [x19, #40]
  410418:	mov	w0, w24
  41041c:	mov	w1, w25
  410420:	bl	40fef0 <nftw@plt+0xd200>
  410424:	mov	w20, w0
  410428:	mov	w0, #0x18                  	// #24
  41042c:	ldr	x21, [x19]
  410430:	umull	x0, w20, w0
  410434:	add	x2, x21, x0
  410438:	ldr	x0, [x21, x0]
  41043c:	cbz	x0, 410490 <nftw@plt+0xd7a0>
  410440:	cmp	x0, #0x1
  410444:	b.eq	410450 <nftw@plt+0xd760>  // b.none
  410448:	cmp	x22, x0
  41044c:	b.eq	410490 <nftw@plt+0xd7a0>  // b.none
  410450:	mov	w1, w25
  410454:	mov	w0, w24
  410458:	bl	40ff28 <nftw@plt+0xd238>
  41045c:	ldr	w1, [x19, #36]
  410460:	mov	w4, #0x18                  	// #24
  410464:	ldr	x23, [x19, #8]
  410468:	add	w20, w20, w0
  41046c:	add	w1, w1, #0x1
  410470:	cmp	x23, w20, uxtw
  410474:	b.hi	41047c <nftw@plt+0xd78c>  // b.pmore
  410478:	sub	w20, w20, w23
  41047c:	umull	x3, w20, w4
  410480:	add	x2, x21, x3
  410484:	ldr	x3, [x21, x3]
  410488:	cbnz	x3, 4104b4 <nftw@plt+0xd7c4>
  41048c:	str	w1, [x19, #36]
  410490:	ldr	x0, [x2]
  410494:	cbz	x0, 41049c <nftw@plt+0xd7ac>
  410498:	add	x0, x2, #0x8
  41049c:	ldp	x19, x20, [sp, #16]
  4104a0:	ldp	x21, x22, [sp, #32]
  4104a4:	ldp	x23, x24, [sp, #48]
  4104a8:	ldr	x25, [sp, #64]
  4104ac:	ldp	x29, x30, [sp], #80
  4104b0:	ret
  4104b4:	cmp	x3, #0x1
  4104b8:	b.eq	410468 <nftw@plt+0xd778>  // b.none
  4104bc:	cmp	x22, x3
  4104c0:	b.ne	410468 <nftw@plt+0xd778>  // b.any
  4104c4:	b	41048c <nftw@plt+0xd79c>
  4104c8:	stp	x29, x30, [sp, #-48]!
  4104cc:	mov	w2, #0x0                   	// #0
  4104d0:	mov	x1, #0x8                   	// #8
  4104d4:	mov	x29, sp
  4104d8:	str	x19, [sp, #16]
  4104dc:	mov	x19, x0
  4104e0:	ldr	x0, [x0]
  4104e4:	str	x0, [sp, #40]
  4104e8:	add	x0, sp, #0x28
  4104ec:	bl	43ca04 <nftw@plt+0x39d14>
  4104f0:	ldr	x1, [x19, #8]
  4104f4:	mov	w2, w0
  4104f8:	add	x0, sp, #0x28
  4104fc:	str	x1, [sp, #40]
  410500:	mov	x1, #0x8                   	// #8
  410504:	bl	43ca04 <nftw@plt+0x39d14>
  410508:	mov	w1, w0
  41050c:	ldr	w0, [x19, #16]
  410510:	bl	40fe78 <nftw@plt+0xd188>
  410514:	ldr	x19, [sp, #16]
  410518:	ldp	x29, x30, [sp], #48
  41051c:	ret
  410520:	stp	x29, x30, [sp, #-96]!
  410524:	mov	x29, sp
  410528:	stp	x19, x20, [sp, #16]
  41052c:	mov	x19, x0
  410530:	stp	x21, x22, [sp, #32]
  410534:	ldr	w21, [x0, #40]
  410538:	ldp	x22, x20, [x0]
  41053c:	stp	x23, x24, [sp, #48]
  410540:	ldp	x1, x0, [x0, #16]
  410544:	stp	x25, x26, [sp, #64]
  410548:	str	x27, [sp, #80]
  41054c:	add	x23, x22, x20, lsl #4
  410550:	sub	x1, x1, x0
  410554:	lsl	x0, x1, #1
  410558:	cmp	x20, x1, lsl #1
  41055c:	b.cc	410574 <nftw@plt+0xd884>  // b.lo, b.ul, b.last
  410560:	lsl	w1, w1, #3
  410564:	cmp	x20, x1
  410568:	b.ls	41058c <nftw@plt+0xd89c>  // b.plast
  41056c:	cmp	x20, #0x20
  410570:	b.ls	41058c <nftw@plt+0xd89c>  // b.plast
  410574:	bl	413434 <nftw@plt+0x10744>
  410578:	mov	w21, w0
  41057c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  410580:	add	x0, x0, #0x380
  410584:	ubfiz	x1, x21, #4, #32
  410588:	ldr	w20, [x0, x1]
  41058c:	ldrb	w0, [x19, #44]
  410590:	mov	x1, x20
  410594:	bl	40faec <nftw@plt+0xcdfc>
  410598:	stp	x0, x20, [x19]
  41059c:	ldr	x0, [x19, #16]
  4105a0:	str	w21, [x19, #40]
  4105a4:	ldr	x1, [x19, #24]
  4105a8:	mov	x21, x22
  4105ac:	str	xzr, [x19, #24]
  4105b0:	sub	x0, x0, x1
  4105b4:	str	x0, [x19, #16]
  4105b8:	ldr	x0, [x21]
  4105bc:	cbz	x0, 41062c <nftw@plt+0xd93c>
  4105c0:	cmp	x0, #0x1
  4105c4:	b.eq	41062c <nftw@plt+0xd93c>  // b.none
  4105c8:	bl	4104c8 <nftw@plt+0xd7d8>
  4105cc:	ldr	w27, [x19, #40]
  4105d0:	mov	w25, w0
  4105d4:	mov	w1, w27
  4105d8:	bl	40fef0 <nftw@plt+0xd200>
  4105dc:	mov	w20, w0
  4105e0:	ldr	x24, [x19]
  4105e4:	ubfiz	x0, x20, #4, #32
  4105e8:	add	x2, x24, x0
  4105ec:	ldr	x0, [x24, x0]
  4105f0:	cbz	x0, 410624 <nftw@plt+0xd934>
  4105f4:	mov	w1, w27
  4105f8:	mov	w0, w25
  4105fc:	ldr	x26, [x19, #8]
  410600:	bl	40ff28 <nftw@plt+0xd238>
  410604:	add	w20, w20, w0
  410608:	cmp	x26, w20, uxtw
  41060c:	b.hi	410614 <nftw@plt+0xd924>  // b.pmore
  410610:	sub	w20, w20, w26
  410614:	ubfiz	x1, x20, #4, #32
  410618:	add	x2, x24, x1
  41061c:	ldr	x1, [x24, x1]
  410620:	cbnz	x1, 410604 <nftw@plt+0xd914>
  410624:	ldp	x0, x1, [x21]
  410628:	stp	x0, x1, [x2]
  41062c:	add	x21, x21, #0x10
  410630:	cmp	x23, x21
  410634:	b.hi	4105b8 <nftw@plt+0xd8c8>  // b.pmore
  410638:	ldrb	w0, [x19, #44]
  41063c:	cbnz	w0, 410660 <nftw@plt+0xd970>
  410640:	mov	x0, x22
  410644:	ldp	x19, x20, [sp, #16]
  410648:	ldp	x21, x22, [sp, #32]
  41064c:	ldp	x23, x24, [sp, #48]
  410650:	ldp	x25, x26, [sp, #64]
  410654:	ldr	x27, [sp, #80]
  410658:	ldp	x29, x30, [sp], #96
  41065c:	b	402a80 <free@plt>
  410660:	mov	x0, x22
  410664:	ldp	x19, x20, [sp, #16]
  410668:	ldp	x21, x22, [sp, #32]
  41066c:	ldp	x23, x24, [sp, #48]
  410670:	ldp	x25, x26, [sp, #64]
  410674:	ldr	x27, [sp, #80]
  410678:	ldp	x29, x30, [sp], #96
  41067c:	b	413850 <nftw@plt+0x10b60>
  410680:	stp	x29, x30, [sp, #-96]!
  410684:	mov	x29, sp
  410688:	stp	x19, x20, [sp, #16]
  41068c:	mov	x19, x0
  410690:	stp	x21, x22, [sp, #32]
  410694:	ldr	w22, [x0, #40]
  410698:	stp	x23, x24, [sp, #48]
  41069c:	ldp	x24, x20, [x0]
  4106a0:	stp	x25, x26, [sp, #64]
  4106a4:	mov	x25, #0x18                  	// #24
  4106a8:	ldp	x1, x0, [x0, #16]
  4106ac:	stp	x27, x28, [sp, #80]
  4106b0:	madd	x25, x20, x25, x24
  4106b4:	sub	x1, x1, x0
  4106b8:	lsl	x0, x1, #1
  4106bc:	cmp	x20, x1, lsl #1
  4106c0:	b.cc	4106d8 <nftw@plt+0xd9e8>  // b.lo, b.ul, b.last
  4106c4:	lsl	w1, w1, #3
  4106c8:	cmp	x20, x1
  4106cc:	b.ls	4106f0 <nftw@plt+0xda00>  // b.plast
  4106d0:	cmp	x20, #0x20
  4106d4:	b.ls	4106f0 <nftw@plt+0xda00>  // b.plast
  4106d8:	bl	413434 <nftw@plt+0x10744>
  4106dc:	mov	w22, w0
  4106e0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4106e4:	add	x0, x0, #0x380
  4106e8:	ubfiz	x1, x22, #4, #32
  4106ec:	ldr	w20, [x0, x1]
  4106f0:	ldrb	w0, [x19, #44]
  4106f4:	mov	x1, x20
  4106f8:	mov	x26, x24
  4106fc:	mov	w27, #0x18                  	// #24
  410700:	bl	40fb68 <nftw@plt+0xce78>
  410704:	mov	x23, x0
  410708:	ldp	x0, x1, [x19, #16]
  41070c:	stp	x23, x20, [x19]
  410710:	str	w22, [x19, #40]
  410714:	sub	x0, x0, x1
  410718:	stp	x0, xzr, [x19, #16]
  41071c:	ldr	x0, [x26]
  410720:	cbz	x0, 41078c <nftw@plt+0xda9c>
  410724:	cmp	x0, #0x1
  410728:	b.eq	41078c <nftw@plt+0xda9c>  // b.none
  41072c:	asr	x28, x0, #3
  410730:	mov	w1, w22
  410734:	mov	w0, w28
  410738:	bl	40fef0 <nftw@plt+0xd200>
  41073c:	mov	w21, w0
  410740:	umull	x0, w0, w27
  410744:	add	x2, x23, x0
  410748:	ldr	x0, [x23, x0]
  41074c:	cbz	x0, 41077c <nftw@plt+0xda8c>
  410750:	mov	w1, w22
  410754:	mov	w0, w28
  410758:	bl	40ff28 <nftw@plt+0xd238>
  41075c:	add	w21, w21, w0
  410760:	cmp	x20, w21, uxtw
  410764:	b.hi	41076c <nftw@plt+0xda7c>  // b.pmore
  410768:	sub	w21, w21, w20
  41076c:	umull	x1, w21, w27
  410770:	add	x2, x23, x1
  410774:	ldr	x1, [x23, x1]
  410778:	cbnz	x1, 41075c <nftw@plt+0xda6c>
  41077c:	ldp	x0, x1, [x26]
  410780:	stp	x0, x1, [x2]
  410784:	ldr	x0, [x26, #16]
  410788:	str	x0, [x2, #16]
  41078c:	add	x26, x26, #0x18
  410790:	cmp	x25, x26
  410794:	b.hi	41071c <nftw@plt+0xda2c>  // b.pmore
  410798:	ldrb	w0, [x19, #44]
  41079c:	cbnz	w0, 4107c0 <nftw@plt+0xdad0>
  4107a0:	mov	x0, x24
  4107a4:	ldp	x19, x20, [sp, #16]
  4107a8:	ldp	x21, x22, [sp, #32]
  4107ac:	ldp	x23, x24, [sp, #48]
  4107b0:	ldp	x25, x26, [sp, #64]
  4107b4:	ldp	x27, x28, [sp, #80]
  4107b8:	ldp	x29, x30, [sp], #96
  4107bc:	b	402a80 <free@plt>
  4107c0:	mov	x0, x24
  4107c4:	ldp	x19, x20, [sp, #16]
  4107c8:	ldp	x21, x22, [sp, #32]
  4107cc:	ldp	x23, x24, [sp, #48]
  4107d0:	ldp	x25, x26, [sp, #64]
  4107d4:	ldp	x27, x28, [sp, #80]
  4107d8:	ldp	x29, x30, [sp], #96
  4107dc:	b	413850 <nftw@plt+0x10b60>
  4107e0:	stp	x29, x30, [sp, #-80]!
  4107e4:	cmp	w3, #0x1
  4107e8:	mov	x29, sp
  4107ec:	stp	x19, x20, [sp, #16]
  4107f0:	mov	x19, x0
  4107f4:	stp	x21, x22, [sp, #32]
  4107f8:	mov	w22, w3
  4107fc:	stp	x23, x24, [sp, #48]
  410800:	mov	x24, x1
  410804:	stp	x25, x26, [sp, #64]
  410808:	mov	w25, w2
  41080c:	b.ne	410824 <nftw@plt+0xdb34>  // b.any
  410810:	ldp	x1, x2, [x0, #8]
  410814:	add	x1, x1, x1, lsl #1
  410818:	cmp	x1, x2, lsl #2
  41081c:	b.hi	410824 <nftw@plt+0xdb34>  // b.pmore
  410820:	bl	410680 <nftw@plt+0xd990>
  410824:	ldr	w0, [x19, #32]
  410828:	ldr	w26, [x19, #40]
  41082c:	add	w0, w0, #0x1
  410830:	str	w0, [x19, #32]
  410834:	mov	w1, w26
  410838:	mov	w0, w25
  41083c:	bl	40fef0 <nftw@plt+0xd200>
  410840:	mov	w21, w0
  410844:	mov	w0, #0x18                  	// #24
  410848:	ldr	x23, [x19]
  41084c:	umull	x0, w21, w0
  410850:	add	x20, x23, x0
  410854:	ldr	x0, [x23, x0]
  410858:	cbz	x0, 410924 <nftw@plt+0xdc34>
  41085c:	cmp	x0, #0x1
  410860:	b.ne	4108b8 <nftw@plt+0xdbc8>  // b.any
  410864:	mov	w1, w26
  410868:	mov	w0, w25
  41086c:	bl	40ff28 <nftw@plt+0xd238>
  410870:	ldr	w3, [x19, #36]
  410874:	mov	x2, x20
  410878:	ldr	x4, [x19, #8]
  41087c:	mov	w6, #0x18                  	// #24
  410880:	add	w21, w21, w0
  410884:	add	w3, w3, #0x1
  410888:	cmp	x4, w21, uxtw
  41088c:	b.hi	410894 <nftw@plt+0xdba4>  // b.pmore
  410890:	sub	w21, w21, w4
  410894:	umull	x1, w21, w6
  410898:	add	x20, x23, x1
  41089c:	ldr	x1, [x23, x1]
  4108a0:	cbz	x1, 4108f8 <nftw@plt+0xdc08>
  4108a4:	cmp	x1, #0x1
  4108a8:	b.ne	4108cc <nftw@plt+0xdbdc>  // b.any
  4108ac:	cmp	x2, #0x0
  4108b0:	csel	x2, x2, x20, ne  // ne = any
  4108b4:	b	410880 <nftw@plt+0xdb90>
  4108b8:	ldr	x1, [x24]
  4108bc:	cmp	x0, x1
  4108c0:	b.eq	4108dc <nftw@plt+0xdbec>  // b.none
  4108c4:	mov	x20, #0x0                   	// #0
  4108c8:	b	410864 <nftw@plt+0xdb74>
  4108cc:	ldr	x5, [x24]
  4108d0:	cmp	x1, x5
  4108d4:	b.ne	410880 <nftw@plt+0xdb90>  // b.any
  4108d8:	str	w3, [x19, #36]
  4108dc:	mov	x0, x20
  4108e0:	ldp	x19, x20, [sp, #16]
  4108e4:	ldp	x21, x22, [sp, #32]
  4108e8:	ldp	x23, x24, [sp, #48]
  4108ec:	ldp	x25, x26, [sp, #64]
  4108f0:	ldp	x29, x30, [sp], #80
  4108f4:	ret
  4108f8:	str	w3, [x19, #36]
  4108fc:	cbnz	w22, 410908 <nftw@plt+0xdc18>
  410900:	mov	x20, #0x0                   	// #0
  410904:	b	4108dc <nftw@plt+0xdbec>
  410908:	cbz	x2, 410928 <nftw@plt+0xdc38>
  41090c:	ldr	x0, [x19, #24]
  410910:	mov	x20, x2
  410914:	sub	x0, x0, #0x1
  410918:	str	x0, [x19, #24]
  41091c:	str	xzr, [x2]
  410920:	b	4108dc <nftw@plt+0xdbec>
  410924:	cbz	w22, 410900 <nftw@plt+0xdc10>
  410928:	ldr	x0, [x19, #16]
  41092c:	mov	w20, #0x18                  	// #24
  410930:	add	x0, x0, #0x1
  410934:	umaddl	x20, w21, w20, x23
  410938:	str	x0, [x19, #16]
  41093c:	b	4108dc <nftw@plt+0xdbec>
  410940:	ldr	x3, [x0, #8]
  410944:	ldr	x1, [x0]
  410948:	cmp	x1, x3
  41094c:	b.cs	41096c <nftw@plt+0xdc7c>  // b.hs, b.nlast
  410950:	ldr	x2, [x1]
  410954:	cbz	x2, 410960 <nftw@plt+0xdc70>
  410958:	cmp	x2, #0x1
  41095c:	b.ne	410970 <nftw@plt+0xdc80>  // b.any
  410960:	add	x1, x1, #0x10
  410964:	str	x1, [x0]
  410968:	b	410944 <nftw@plt+0xdc54>
  41096c:	stp	xzr, xzr, [x0]
  410970:	ret
  410974:	stp	x29, x30, [sp, #-32]!
  410978:	mov	x29, sp
  41097c:	ldp	x1, x0, [x0]
  410980:	add	x0, x1, x0, lsl #4
  410984:	stp	x1, x0, [sp, #16]
  410988:	add	x0, sp, #0x10
  41098c:	bl	410940 <nftw@plt+0xdc50>
  410990:	ldp	x0, x1, [sp, #16]
  410994:	ldp	x29, x30, [sp], #32
  410998:	ret
  41099c:	stp	x29, x30, [sp, #-48]!
  4109a0:	mov	x29, sp
  4109a4:	stp	x19, x20, [sp, #16]
  4109a8:	mov	x19, x0
  4109ac:	ldr	x0, [x0, #40]
  4109b0:	bl	410974 <nftw@plt+0xdc84>
  4109b4:	stp	x0, x1, [sp, #32]
  4109b8:	ldr	x0, [sp, #32]
  4109bc:	cbz	x0, 4109f4 <nftw@plt+0xdd04>
  4109c0:	ldr	x0, [x0]
  4109c4:	cbnz	x0, 410a24 <nftw@plt+0xdd34>
  4109c8:	ldr	x0, [sp, #32]
  4109cc:	ldr	x0, [x0, #8]
  4109d0:	cbz	x0, 4109dc <nftw@plt+0xdcec>
  4109d4:	mov	x1, #0x38                  	// #56
  4109d8:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  4109dc:	ldr	x0, [sp, #32]
  4109e0:	add	x0, x0, #0x10
  4109e4:	str	x0, [sp, #32]
  4109e8:	add	x0, sp, #0x20
  4109ec:	bl	410940 <nftw@plt+0xdc50>
  4109f0:	b	4109b8 <nftw@plt+0xdcc8>
  4109f4:	ldr	x1, [sp, #40]
  4109f8:	cbnz	x1, 4109c0 <nftw@plt+0xdcd0>
  4109fc:	ldr	x20, [x19, #40]
  410a00:	cbnz	x20, 410a30 <nftw@plt+0xdd40>
  410a04:	ldr	x20, [x19, #48]
  410a08:	cbz	x20, 410a8c <nftw@plt+0xdd9c>
  410a0c:	ldr	x1, [x20, #8]
  410a10:	sub	x0, x1, #0x1
  410a14:	cmp	x1, x0
  410a18:	b.ls	410a70 <nftw@plt+0xdd80>  // b.plast
  410a1c:	sub	x0, x0, #0x1
  410a20:	b	410a14 <nftw@plt+0xdd24>
  410a24:	mov	x1, #0x20                  	// #32
  410a28:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  410a2c:	b	4109c8 <nftw@plt+0xdcd8>
  410a30:	ldr	x1, [x20, #8]
  410a34:	sub	x0, x1, #0x1
  410a38:	cmp	x1, x0
  410a3c:	b.ls	410a48 <nftw@plt+0xdd58>  // b.plast
  410a40:	sub	x0, x0, #0x1
  410a44:	b	410a38 <nftw@plt+0xdd48>
  410a48:	ldrb	w1, [x20, #44]
  410a4c:	ldr	x0, [x20]
  410a50:	cbnz	w1, 410a68 <nftw@plt+0xdd78>
  410a54:	bl	402a80 <free@plt>
  410a58:	mov	x0, x20
  410a5c:	mov	x1, #0x30                  	// #48
  410a60:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  410a64:	b	410a04 <nftw@plt+0xdd14>
  410a68:	bl	413850 <nftw@plt+0x10b60>
  410a6c:	b	410a58 <nftw@plt+0xdd68>
  410a70:	ldrb	w1, [x20, #44]
  410a74:	ldr	x0, [x20]
  410a78:	cbnz	w1, 410aac <nftw@plt+0xddbc>
  410a7c:	bl	402a80 <free@plt>
  410a80:	mov	x0, x20
  410a84:	mov	x1, #0x30                  	// #48
  410a88:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  410a8c:	ldr	x19, [x19]
  410a90:	cbz	x19, 410ad0 <nftw@plt+0xdde0>
  410a94:	ldr	x1, [x19, #8]
  410a98:	sub	x0, x1, #0x1
  410a9c:	cmp	x1, x0
  410aa0:	b.ls	410ab4 <nftw@plt+0xddc4>  // b.plast
  410aa4:	sub	x0, x0, #0x1
  410aa8:	b	410a9c <nftw@plt+0xddac>
  410aac:	bl	413850 <nftw@plt+0x10b60>
  410ab0:	b	410a80 <nftw@plt+0xdd90>
  410ab4:	ldrb	w1, [x19, #44]
  410ab8:	ldr	x0, [x19]
  410abc:	cbnz	w1, 410adc <nftw@plt+0xddec>
  410ac0:	bl	402a80 <free@plt>
  410ac4:	mov	x0, x19
  410ac8:	mov	x1, #0x30                  	// #48
  410acc:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  410ad0:	ldp	x19, x20, [sp, #16]
  410ad4:	ldp	x29, x30, [sp], #48
  410ad8:	ret
  410adc:	bl	413850 <nftw@plt+0x10b60>
  410ae0:	b	410ac4 <nftw@plt+0xddd4>
  410ae4:	stp	x29, x30, [sp, #-80]!
  410ae8:	mov	x29, sp
  410aec:	str	x23, [sp, #48]
  410af0:	mov	w23, w1
  410af4:	ldr	x1, [x0, #40]
  410af8:	stp	x21, x22, [sp, #32]
  410afc:	mov	x21, x0
  410b00:	mov	x22, x2
  410b04:	stp	x19, x20, [sp, #16]
  410b08:	mov	x19, x3
  410b0c:	ldp	x2, x0, [x1, #16]
  410b10:	mov	x1, #0x10                  	// #16
  410b14:	sub	x0, x2, x0
  410b18:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  410b1c:	mov	x20, x0
  410b20:	ldr	x0, [x21, #40]
  410b24:	mov	w21, #0x0                   	// #0
  410b28:	bl	410974 <nftw@plt+0xdc84>
  410b2c:	stp	x0, x1, [sp, #64]
  410b30:	ldr	x0, [sp, #64]
  410b34:	cbz	x0, 410b74 <nftw@plt+0xde84>
  410b38:	ldr	x2, [x0]
  410b3c:	ldr	w1, [x2, #20]
  410b40:	cmp	w1, w23
  410b44:	b.ne	410b60 <nftw@plt+0xde70>  // b.any
  410b48:	ubfiz	x1, x21, #4, #32
  410b4c:	add	w21, w21, #0x1
  410b50:	add	x3, x20, x1
  410b54:	ldr	x4, [x0, #8]
  410b58:	str	x2, [x20, x1]
  410b5c:	str	x4, [x3, #8]
  410b60:	add	x0, x0, #0x10
  410b64:	str	x0, [sp, #64]
  410b68:	add	x0, sp, #0x40
  410b6c:	bl	410940 <nftw@plt+0xdc50>
  410b70:	b	410b30 <nftw@plt+0xde40>
  410b74:	ldr	x1, [sp, #72]
  410b78:	cbnz	x1, 410b38 <nftw@plt+0xde48>
  410b7c:	mov	w1, w21
  410b80:	cbnz	x19, 410b8c <nftw@plt+0xde9c>
  410b84:	adrp	x19, 40f000 <nftw@plt+0xc310>
  410b88:	add	x19, x19, #0xe24
  410b8c:	mov	x3, x19
  410b90:	mov	x0, x20
  410b94:	mov	x2, #0x10                  	// #16
  410b98:	bl	413e78 <nftw@plt+0x11188>
  410b9c:	mov	x0, x20
  410ba0:	ldp	x19, x20, [sp, #16]
  410ba4:	ldr	x23, [sp, #48]
  410ba8:	str	w21, [x22]
  410bac:	ldp	x21, x22, [sp, #32]
  410bb0:	ldp	x29, x30, [sp], #80
  410bb4:	ret
  410bb8:	stp	x29, x30, [sp, #-128]!
  410bbc:	mov	x29, sp
  410bc0:	stp	x21, x22, [sp, #32]
  410bc4:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  410bc8:	mov	x22, x0
  410bcc:	stp	x19, x20, [sp, #16]
  410bd0:	mov	w19, w1
  410bd4:	mov	x20, x2
  410bd8:	ldr	x1, [x21, #1416]
  410bdc:	mov	w0, #0xa                   	// #10
  410be0:	str	x23, [sp, #48]
  410be4:	bl	402710 <fputc@plt>
  410be8:	mov	x3, x20
  410bec:	add	x2, sp, #0x40
  410bf0:	mov	w1, w19
  410bf4:	mov	x0, x22
  410bf8:	bl	410ae4 <nftw@plt+0xddf4>
  410bfc:	mov	x20, x0
  410c00:	add	x2, sp, #0x44
  410c04:	mov	w1, w19
  410c08:	mov	x0, x22
  410c0c:	mov	x3, #0x0                   	// #0
  410c10:	bl	410ae4 <nftw@plt+0xddf4>
  410c14:	stp	xzr, xzr, [sp, #72]
  410c18:	mov	x1, #0x1                   	// #1
  410c1c:	mov	w2, #0x0                   	// #0
  410c20:	stp	xzr, x1, [sp, #88]
  410c24:	stp	xzr, xzr, [sp, #104]
  410c28:	str	xzr, [sp, #120]
  410c2c:	ldr	w1, [sp, #68]
  410c30:	cmp	w1, w2
  410c34:	b.ls	410c94 <nftw@plt+0xdfa4>  // b.plast
  410c38:	ubfiz	x1, x2, #4, #32
  410c3c:	add	w2, w2, #0x1
  410c40:	add	x1, x0, x1
  410c44:	ldp	x6, x5, [sp, #80]
  410c48:	ldr	x1, [x1, #8]
  410c4c:	ldr	x4, [sp, #104]
  410c50:	ldr	x3, [x1, #8]
  410c54:	ldr	x7, [x1, #40]
  410c58:	add	x6, x6, x3
  410c5c:	ldr	x3, [x1, #16]
  410c60:	add	x5, x5, x3
  410c64:	ldr	x3, [x1, #32]
  410c68:	add	x4, x4, x3
  410c6c:	ldr	x3, [sp, #112]
  410c70:	add	x3, x3, x7
  410c74:	ldr	x7, [x1]
  410c78:	stp	x5, xzr, [sp, #88]
  410c7c:	ldr	x1, [sp, #72]
  410c80:	stp	x4, x3, [sp, #104]
  410c84:	add	x1, x1, x7
  410c88:	stp	x1, x6, [sp, #72]
  410c8c:	str	xzr, [sp, #120]
  410c90:	b	410c2c <nftw@plt+0xdf3c>
  410c94:	bl	402a80 <free@plt>
  410c98:	add	x23, x20, #0x8
  410c9c:	mov	x0, #0x8c                  	// #140
  410ca0:	bl	40ff68 <nftw@plt+0xd278>
  410ca4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  410ca8:	add	x0, x0, #0x9d8
  410cac:	ldr	x22, [x0, w19, uxtw #3]
  410cb0:	mov	x0, x22
  410cb4:	bl	410260 <nftw@plt+0xd570>
  410cb8:	mov	x0, #0x8c                  	// #140
  410cbc:	bl	40ff68 <nftw@plt+0xd278>
  410cc0:	ldr	w19, [sp, #64]
  410cc4:	sub	w19, w19, #0x1
  410cc8:	sxtw	x19, w19
  410ccc:	tbnz	w19, #31, 410cec <nftw@plt+0xdffc>
  410cd0:	lsl	x0, x19, #4
  410cd4:	add	x2, sp, #0x48
  410cd8:	sub	x19, x19, #0x1
  410cdc:	ldr	x1, [x20, x0]
  410ce0:	ldr	x0, [x23, x0]
  410ce4:	bl	40ffa8 <nftw@plt+0xd2b8>
  410ce8:	b	410ccc <nftw@plt+0xdfdc>
  410cec:	mov	x0, #0x8c                  	// #140
  410cf0:	bl	40ff68 <nftw@plt+0xd278>
  410cf4:	mov	x0, x22
  410cf8:	bl	410260 <nftw@plt+0xd570>
  410cfc:	mov	x0, #0x8c                  	// #140
  410d00:	bl	40ff68 <nftw@plt+0xd278>
  410d04:	add	x0, sp, #0x48
  410d08:	bl	41017c <nftw@plt+0xd48c>
  410d0c:	mov	x0, #0x8c                  	// #140
  410d10:	bl	40ff68 <nftw@plt+0xd278>
  410d14:	mov	x0, x20
  410d18:	bl	402a80 <free@plt>
  410d1c:	ldr	x1, [x21, #1416]
  410d20:	mov	w0, #0xa                   	// #10
  410d24:	bl	402710 <fputc@plt>
  410d28:	ldp	x19, x20, [sp, #16]
  410d2c:	ldp	x21, x22, [sp, #32]
  410d30:	ldr	x23, [sp, #48]
  410d34:	ldp	x29, x30, [sp], #128
  410d38:	ret
  410d3c:	ldr	x3, [x0]
  410d40:	ldr	x2, [x1]
  410d44:	cmp	x3, x2
  410d48:	b.ne	410d70 <nftw@plt+0xe080>  // b.any
  410d4c:	ldr	x3, [x0, #8]
  410d50:	ldr	x2, [x1, #8]
  410d54:	cmp	x3, x2
  410d58:	b.ne	410d70 <nftw@plt+0xe080>  // b.any
  410d5c:	ldr	w2, [x0, #16]
  410d60:	ldr	w0, [x1, #16]
  410d64:	cmp	w2, w0
  410d68:	cset	w0, eq  // eq = none
  410d6c:	ret
  410d70:	mov	w0, #0x0                   	// #0
  410d74:	b	410d6c <nftw@plt+0xe07c>
  410d78:	stp	x29, x30, [sp, #-112]!
  410d7c:	mov	x29, sp
  410d80:	stp	x19, x20, [sp, #16]
  410d84:	ldr	x20, [x0, #40]
  410d88:	stp	x21, x22, [sp, #32]
  410d8c:	mov	x22, x2
  410d90:	stp	x23, x24, [sp, #48]
  410d94:	mov	x24, x0
  410d98:	mov	x0, x2
  410d9c:	stp	x25, x26, [sp, #64]
  410da0:	stp	x27, x28, [sp, #80]
  410da4:	str	x1, [sp, #104]
  410da8:	bl	4104c8 <nftw@plt+0xd7d8>
  410dac:	ldr	w1, [x20, #32]
  410db0:	mov	w25, w0
  410db4:	ldr	w27, [x20, #40]
  410db8:	add	w1, w1, #0x1
  410dbc:	str	w1, [x20, #32]
  410dc0:	mov	w1, w27
  410dc4:	bl	40fef0 <nftw@plt+0xd200>
  410dc8:	mov	w19, w0
  410dcc:	ldr	x21, [x20]
  410dd0:	ubfiz	x0, x19, #4, #32
  410dd4:	add	x23, x21, x0
  410dd8:	ldr	x0, [x21, x0]
  410ddc:	cbz	x0, 410e50 <nftw@plt+0xe160>
  410de0:	cmp	x0, #0x1
  410de4:	b.eq	410df8 <nftw@plt+0xe108>  // b.none
  410de8:	mov	x1, x22
  410dec:	bl	410d3c <nftw@plt+0xe04c>
  410df0:	tst	w0, #0xff
  410df4:	b.ne	410e50 <nftw@plt+0xe160>  // b.any
  410df8:	mov	w0, w25
  410dfc:	mov	w1, w27
  410e00:	bl	40ff28 <nftw@plt+0xd238>
  410e04:	mov	w25, w0
  410e08:	ldr	x26, [x20, #8]
  410e0c:	add	w19, w19, w25
  410e10:	ldr	w0, [x20, #36]
  410e14:	cmp	x26, w19, uxtw
  410e18:	add	w0, w0, #0x1
  410e1c:	str	w0, [x20, #36]
  410e20:	b.hi	410e28 <nftw@plt+0xe138>  // b.pmore
  410e24:	sub	w19, w19, w26
  410e28:	ubfiz	x0, x19, #4, #32
  410e2c:	add	x23, x21, x0
  410e30:	ldr	x0, [x21, x0]
  410e34:	cbz	x0, 410e50 <nftw@plt+0xe160>
  410e38:	cmp	x0, #0x1
  410e3c:	b.eq	410e0c <nftw@plt+0xe11c>  // b.none
  410e40:	mov	x1, x22
  410e44:	bl	410d3c <nftw@plt+0xe04c>
  410e48:	tst	w0, #0xff
  410e4c:	b.eq	410e0c <nftw@plt+0xe11c>  // b.none
  410e50:	ldr	x0, [x23]
  410e54:	cbz	x0, 410ed4 <nftw@plt+0xe1e4>
  410e58:	cbz	x22, 410e68 <nftw@plt+0xe178>
  410e5c:	mov	x0, x22
  410e60:	mov	x1, #0x20                  	// #32
  410e64:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  410e68:	ldr	x19, [x23, #8]
  410e6c:	ldr	x0, [x19, #24]
  410e70:	add	x0, x0, #0x1
  410e74:	str	x0, [x19, #24]
  410e78:	ldr	x0, [x24, #48]
  410e7c:	add	x1, sp, #0x68
  410e80:	bl	4103e4 <nftw@plt+0xd6f4>
  410e84:	cbnz	x0, 410eb4 <nftw@plt+0xe1c4>
  410e88:	ldr	x0, [x24, #48]
  410e8c:	add	x1, sp, #0x68
  410e90:	ldr	x2, [sp, #104]
  410e94:	mov	w3, #0x1                   	// #1
  410e98:	ubfx	x2, x2, #3, #32
  410e9c:	bl	4107e0 <nftw@plt+0xdaf0>
  410ea0:	ldr	x1, [x0]
  410ea4:	cbnz	x1, 410eb0 <nftw@plt+0xe1c0>
  410ea8:	ldr	x1, [sp, #104]
  410eac:	str	x1, [x0]
  410eb0:	stp	x19, xzr, [x0, #8]
  410eb4:	mov	x0, x19
  410eb8:	ldp	x19, x20, [sp, #16]
  410ebc:	ldp	x21, x22, [sp, #32]
  410ec0:	ldp	x23, x24, [sp, #48]
  410ec4:	ldp	x25, x26, [sp, #64]
  410ec8:	ldp	x27, x28, [sp, #80]
  410ecc:	ldp	x29, x30, [sp], #112
  410ed0:	ret
  410ed4:	mov	x0, #0x38                  	// #56
  410ed8:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  410edc:	mov	x19, x0
  410ee0:	mov	x0, #0x1                   	// #1
  410ee4:	ldr	x20, [x24, #40]
  410ee8:	stp	xzr, xzr, [x19]
  410eec:	stp	xzr, x0, [x19, #16]
  410ef0:	mov	x0, x22
  410ef4:	stp	xzr, xzr, [x19, #32]
  410ef8:	str	xzr, [x19, #48]
  410efc:	bl	4104c8 <nftw@plt+0xd7d8>
  410f00:	mov	w25, w0
  410f04:	ldp	x0, x1, [x20, #8]
  410f08:	add	x0, x0, x0, lsl #1
  410f0c:	cmp	x0, x1, lsl #2
  410f10:	b.hi	410f1c <nftw@plt+0xe22c>  // b.pmore
  410f14:	mov	x0, x20
  410f18:	bl	410520 <nftw@plt+0xd830>
  410f1c:	ldr	w0, [x20, #32]
  410f20:	ldr	w27, [x20, #40]
  410f24:	add	w0, w0, #0x1
  410f28:	str	w0, [x20, #32]
  410f2c:	mov	w1, w27
  410f30:	mov	w0, w25
  410f34:	bl	40fef0 <nftw@plt+0xd200>
  410f38:	mov	w21, w0
  410f3c:	ldr	x26, [x20]
  410f40:	ubfiz	x0, x21, #4, #32
  410f44:	add	x23, x26, x0
  410f48:	ldr	x0, [x26, x0]
  410f4c:	cbz	x0, 411008 <nftw@plt+0xe318>
  410f50:	cmp	x0, #0x1
  410f54:	b.ne	410fb0 <nftw@plt+0xe2c0>  // b.any
  410f58:	mov	w1, w27
  410f5c:	mov	w0, w25
  410f60:	bl	40ff28 <nftw@plt+0xd238>
  410f64:	mov	x25, x23
  410f68:	ldr	x28, [x20, #8]
  410f6c:	mov	w27, w0
  410f70:	ldr	w0, [x20, #36]
  410f74:	add	w21, w21, w27
  410f78:	add	w0, w0, #0x1
  410f7c:	str	w0, [x20, #36]
  410f80:	cmp	x28, w21, uxtw
  410f84:	b.hi	410f8c <nftw@plt+0xe29c>  // b.pmore
  410f88:	sub	w21, w21, w28
  410f8c:	ubfiz	x0, x21, #4, #32
  410f90:	add	x23, x26, x0
  410f94:	ldr	x0, [x26, x0]
  410f98:	cbz	x0, 410fec <nftw@plt+0xe2fc>
  410f9c:	cmp	x0, #0x1
  410fa0:	b.ne	410fc8 <nftw@plt+0xe2d8>  // b.any
  410fa4:	cmp	x25, #0x0
  410fa8:	csel	x25, x25, x23, ne  // ne = any
  410fac:	b	410f70 <nftw@plt+0xe280>
  410fb0:	mov	x1, x22
  410fb4:	bl	410d3c <nftw@plt+0xe04c>
  410fb8:	tst	w0, #0xff
  410fbc:	b.ne	410fd8 <nftw@plt+0xe2e8>  // b.any
  410fc0:	mov	x23, #0x0                   	// #0
  410fc4:	b	410f58 <nftw@plt+0xe268>
  410fc8:	mov	x1, x22
  410fcc:	bl	410d3c <nftw@plt+0xe04c>
  410fd0:	tst	w0, #0xff
  410fd4:	b.eq	410f70 <nftw@plt+0xe280>  // b.none
  410fd8:	ldr	x0, [x23]
  410fdc:	cbnz	x0, 410fe4 <nftw@plt+0xe2f4>
  410fe0:	str	x22, [x23]
  410fe4:	str	x19, [x23, #8]
  410fe8:	b	410e78 <nftw@plt+0xe188>
  410fec:	cbz	x25, 411008 <nftw@plt+0xe318>
  410ff0:	ldr	x0, [x20, #24]
  410ff4:	mov	x23, x25
  410ff8:	sub	x0, x0, #0x1
  410ffc:	str	x0, [x20, #24]
  411000:	str	xzr, [x25]
  411004:	b	410fd8 <nftw@plt+0xe2e8>
  411008:	ldr	x0, [x20, #16]
  41100c:	ubfiz	x21, x21, #4, #32
  411010:	add	x23, x26, x21
  411014:	add	x0, x0, #0x1
  411018:	str	x0, [x20, #16]
  41101c:	b	410fd8 <nftw@plt+0xe2e8>
  411020:	stp	x29, x30, [sp, #-32]!
  411024:	mov	x29, sp
  411028:	stp	x19, x20, [sp, #16]
  41102c:	mov	x19, x0
  411030:	ldr	x0, [x0, #40]
  411034:	cbz	x0, 411064 <nftw@plt+0xe374>
  411038:	ldr	x1, [x19, #32]
  41103c:	cmp	x0, x1
  411040:	b.eq	411064 <nftw@plt+0xe374>  // b.none
  411044:	ldr	x1, [x19, #48]
  411048:	sub	x0, x0, #0x1
  41104c:	cmp	x1, x0
  411050:	b.cs	411064 <nftw@plt+0xe374>  // b.hs, b.nlast
  411054:	mov	w0, #0x0                   	// #0
  411058:	ldp	x19, x20, [sp, #16]
  41105c:	ldp	x29, x30, [sp], #32
  411060:	ret
  411064:	ldr	x0, [x19, #16]
  411068:	bl	402990 <feof@plt>
  41106c:	cbnz	w0, 411054 <nftw@plt+0xe364>
  411070:	ldr	x0, [x19, #16]
  411074:	bl	402ce0 <ferror@plt>
  411078:	cbnz	w0, 411054 <nftw@plt+0xe364>
  41107c:	ldp	x1, x0, [x19, #32]
  411080:	cmp	x0, x1
  411084:	b.ne	4110a8 <nftw@plt+0xe3b8>  // b.any
  411088:	cmp	x0, #0x0
  41108c:	lsl	x20, x0, #1
  411090:	ldr	x0, [x19, #24]
  411094:	mov	x1, #0x1000                	// #4096
  411098:	csel	x20, x20, x1, ne  // ne = any
  41109c:	mov	x1, x20
  4110a0:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  4110a4:	stp	x0, x20, [x19, #24]
  4110a8:	mov	x1, #0x1                   	// #1
  4110ac:	ldp	x3, x4, [x19, #16]
  4110b0:	ldp	x2, x0, [x19, #32]
  4110b4:	sub	x2, x2, x0
  4110b8:	add	x0, x4, x0
  4110bc:	bl	402a40 <fread@plt>
  4110c0:	mov	x20, x0
  4110c4:	ldr	x0, [x19, #16]
  4110c8:	bl	402ce0 <ferror@plt>
  4110cc:	cbnz	w0, 411054 <nftw@plt+0xe364>
  4110d0:	ldr	x0, [x19, #40]
  4110d4:	cmp	x20, #0x0
  4110d8:	add	x0, x0, x20
  4110dc:	str	x0, [x19, #40]
  4110e0:	cset	w0, ne  // ne = any
  4110e4:	b	411058 <nftw@plt+0xe368>
  4110e8:	stp	x29, x30, [sp, #-112]!
  4110ec:	mov	x29, sp
  4110f0:	stp	x19, x20, [sp, #16]
  4110f4:	mov	w19, w0
  4110f8:	mov	w20, w2
  4110fc:	stp	x21, x22, [sp, #32]
  411100:	mov	x21, x8
  411104:	stp	x23, x24, [sp, #48]
  411108:	and	w24, w1, #0xff
  41110c:	tbz	w0, #31, 4111a4 <nftw@plt+0xe4b4>
  411110:	adrp	x22, 47e000 <__environ@@GLIBC_2.17+0xa50>
  411114:	mov	w1, w0
  411118:	ldr	x0, [x22, #2320]
  41111c:	bl	425b34 <nftw@plt+0x22e44>
  411120:	mov	x23, x0
  411124:	ldr	x0, [x22, #2320]
  411128:	mov	w1, w19
  41112c:	bl	425b4c <nftw@plt+0x22e5c>
  411130:	mov	w19, w0
  411134:	stp	xzr, xzr, [sp, #80]
  411138:	cmp	w19, #0x1
  41113c:	stp	xzr, xzr, [sp, #96]
  411140:	b.ls	411214 <nftw@plt+0xe524>  // b.plast
  411144:	adrp	x22, 47e000 <__environ@@GLIBC_2.17+0xa50>
  411148:	cbnz	w24, 4111ac <nftw@plt+0xe4bc>
  41114c:	ldr	x0, [x22, #2320]
  411150:	mov	w1, w19
  411154:	mov	x2, #0x0                   	// #0
  411158:	bl	426e1c <nftw@plt+0x2412c>
  41115c:	mov	w19, w0
  411160:	mov	w2, #0x1                   	// #1
  411164:	ldr	x0, [x22, #2320]
  411168:	mov	w1, w19
  41116c:	add	x3, sp, #0x48
  411170:	bl	4268c8 <nftw@plt+0x23bd8>
  411174:	mov	w19, w0
  411178:	cmp	w20, #0x1
  41117c:	b.eq	4111b4 <nftw@plt+0xe4c4>  // b.none
  411180:	cmp	w20, #0x2
  411184:	b.eq	4111ec <nftw@plt+0xe4fc>  // b.none
  411188:	cbz	w20, 411200 <nftw@plt+0xe510>
  41118c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411190:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411194:	add	x2, x2, #0xa10
  411198:	add	x0, x0, #0xa22
  41119c:	mov	w1, #0xc7                  	// #199
  4111a0:	bl	402d60 <nftw@plt+0x70>
  4111a4:	mov	x23, #0x0                   	// #0
  4111a8:	b	411134 <nftw@plt+0xe444>
  4111ac:	mov	w2, #0x0                   	// #0
  4111b0:	b	411164 <nftw@plt+0xe474>
  4111b4:	mov	w1, w0
  4111b8:	ldr	x0, [x22, #2320]
  4111bc:	bl	4265d4 <nftw@plt+0x238e4>
  4111c0:	cmp	w19, w0
  4111c4:	b.eq	411200 <nftw@plt+0xe510>  // b.none
  4111c8:	mov	x8, x21
  4111cc:	mov	w2, w20
  4111d0:	mov	w1, w24
  4111d4:	bl	4110e8 <nftw@plt+0xe3f8>
  4111d8:	ldp	x19, x20, [sp, #16]
  4111dc:	ldp	x21, x22, [sp, #32]
  4111e0:	ldp	x23, x24, [sp, #48]
  4111e4:	ldp	x29, x30, [sp], #112
  4111e8:	ret
  4111ec:	mov	w1, w0
  4111f0:	ldr	x0, [x22, #2320]
  4111f4:	bl	4265d4 <nftw@plt+0x238e4>
  4111f8:	lsr	x0, x0, #32
  4111fc:	b	4111c0 <nftw@plt+0xe4d0>
  411200:	ldr	x0, [x22, #2320]
  411204:	add	x8, sp, #0x50
  411208:	ldr	x1, [sp, #72]
  41120c:	mov	w2, w19
  411210:	bl	426f10 <nftw@plt+0x24220>
  411214:	str	x23, [sp, #96]
  411218:	cmp	w19, #0x1
  41121c:	b.hi	411234 <nftw@plt+0xe544>  // b.pmore
  411220:	cbz	w19, 411248 <nftw@plt+0xe558>
  411224:	adrp	x0, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  411228:	add	x0, x0, #0xe91
  41122c:	bl	402c90 <gettext@plt>
  411230:	str	x0, [sp, #80]
  411234:	ldp	x0, x1, [sp, #80]
  411238:	stp	x0, x1, [x21]
  41123c:	ldp	x0, x1, [sp, #96]
  411240:	stp	x0, x1, [x21, #16]
  411244:	b	4111d8 <nftw@plt+0xe4e8>
  411248:	mov	x0, #0x0                   	// #0
  41124c:	b	411230 <nftw@plt+0xe540>
  411250:	stp	x29, x30, [sp, #-80]!
  411254:	mov	x29, sp
  411258:	stp	x23, x24, [sp, #48]
  41125c:	mov	x23, x2
  411260:	mov	w2, w1
  411264:	stp	x19, x20, [sp, #16]
  411268:	mov	w20, #0x1                   	// #1
  41126c:	mov	x19, x0
  411270:	stp	x21, x22, [sp, #32]
  411274:	mov	w22, w3
  411278:	mov	w3, #0x20                  	// #32
  41127c:	str	x25, [sp, #64]
  411280:	mov	w25, #0xa                   	// #10
  411284:	mov	w24, w4
  411288:	mov	w21, w5
  41128c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411290:	add	x1, x1, #0xa34
  411294:	bl	402cb0 <fprintf@plt>
  411298:	mov	x1, x19
  41129c:	mov	w0, #0x7c                  	// #124
  4112a0:	bl	402710 <fputc@plt>
  4112a4:	cmp	w20, w24
  4112a8:	b.ge	4112d8 <nftw@plt+0xe5e8>  // b.tcont
  4112ac:	ldrb	w1, [x23, #7]
  4112b0:	lsl	w1, w20, w1
  4112b4:	add	w1, w1, w22
  4112b8:	add	w20, w20, #0x1
  4112bc:	udiv	w1, w1, w21
  4112c0:	sdiv	w0, w1, w25
  4112c4:	msub	w0, w0, w25, w1
  4112c8:	mov	x1, x19
  4112cc:	add	w0, w0, #0x30
  4112d0:	bl	402710 <fputc@plt>
  4112d4:	b	4112a4 <nftw@plt+0xe5b4>
  4112d8:	mov	x1, x19
  4112dc:	mov	w0, #0xa                   	// #10
  4112e0:	ldp	x19, x20, [sp, #16]
  4112e4:	ldp	x21, x22, [sp, #32]
  4112e8:	ldp	x23, x24, [sp, #48]
  4112ec:	ldr	x25, [sp, #64]
  4112f0:	ldp	x29, x30, [sp], #80
  4112f4:	b	402710 <fputc@plt>
  4112f8:	stp	x29, x30, [sp, #-48]!
  4112fc:	mov	x29, sp
  411300:	stp	x21, x22, [sp, #32]
  411304:	mov	x21, x0
  411308:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  41130c:	stp	x19, x20, [sp, #16]
  411310:	mov	x20, #0x0                   	// #0
  411314:	ldr	x19, [x0, #2328]
  411318:	add	x22, x19, #0x580
  41131c:	ldr	x0, [x19, #8]
  411320:	cbz	x0, 411340 <nftw@plt+0xe650>
  411324:	mov	x1, x21
  411328:	bl	402a00 <strcmp@plt>
  41132c:	cbnz	w0, 411340 <nftw@plt+0xe650>
  411330:	ldr	w0, [x19]
  411334:	mov	x20, x19
  411338:	add	w0, w0, #0x1
  41133c:	str	w0, [x19]
  411340:	add	x19, x19, #0x58
  411344:	cmp	x22, x19
  411348:	b.ne	41131c <nftw@plt+0xe62c>  // b.any
  41134c:	cbz	x20, 41135c <nftw@plt+0xe66c>
  411350:	ldr	w0, [x20]
  411354:	add	w0, w0, #0x1
  411358:	str	w0, [x20]
  41135c:	mov	x0, x20
  411360:	ldp	x19, x20, [sp, #16]
  411364:	ldp	x21, x22, [sp, #32]
  411368:	ldp	x29, x30, [sp], #48
  41136c:	ret
  411370:	stp	x29, x30, [sp, #-32]!
  411374:	tst	w0, #0xff
  411378:	mov	x29, sp
  41137c:	str	x19, [sp, #16]
  411380:	mov	x19, x1
  411384:	b.ne	4113b0 <nftw@plt+0xe6c0>  // b.any
  411388:	mov	x0, x19
  41138c:	mov	x1, #0x10                  	// #16
  411390:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  411394:	mov	x1, #0x0                   	// #0
  411398:	cmp	x19, x1
  41139c:	b.eq	4113e0 <nftw@plt+0xe6f0>  // b.none
  4113a0:	lsl	x2, x1, #4
  4113a4:	add	x1, x1, #0x1
  4113a8:	str	wzr, [x0, x2]
  4113ac:	b	411398 <nftw@plt+0xe6a8>
  4113b0:	lsl	x0, x19, #4
  4113b4:	mov	x3, #0x0                   	// #0
  4113b8:	mov	x2, #0x0                   	// #0
  4113bc:	mov	x1, #0x0                   	// #0
  4113c0:	bl	413820 <nftw@plt+0x10b30>
  4113c4:	cbnz	x0, 411394 <nftw@plt+0xe6a4>
  4113c8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4113cc:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4113d0:	add	x2, x2, #0x853
  4113d4:	add	x0, x0, #0x861
  4113d8:	mov	w1, #0x2b5                 	// #693
  4113dc:	bl	402d60 <nftw@plt+0x70>
  4113e0:	ldr	x19, [sp, #16]
  4113e4:	ldp	x29, x30, [sp], #32
  4113e8:	ret
  4113ec:	stp	x29, x30, [sp, #-48]!
  4113f0:	mov	x29, sp
  4113f4:	stp	x19, x20, [sp, #16]
  4113f8:	mov	x19, x0
  4113fc:	mov	w20, w2
  411400:	mov	x2, x1
  411404:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411408:	add	x1, x1, #0x700
  41140c:	str	x21, [sp, #32]
  411410:	mov	w21, w3
  411414:	bl	402cb0 <fprintf@plt>
  411418:	mov	w3, w21
  41141c:	mov	w2, w20
  411420:	mov	x0, x19
  411424:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411428:	add	x1, x1, #0xa38
  41142c:	bl	402cb0 <fprintf@plt>
  411430:	mov	x1, x19
  411434:	mov	w0, #0xa                   	// #10
  411438:	ldp	x19, x20, [sp, #16]
  41143c:	ldr	x21, [sp, #32]
  411440:	ldp	x29, x30, [sp], #48
  411444:	b	402710 <fputc@plt>
  411448:	mov	w1, #0x1                   	// #1
  41144c:	str	wzr, [x0]
  411450:	stp	xzr, xzr, [x0, #8]
  411454:	stp	xzr, xzr, [x0, #24]
  411458:	stp	xzr, xzr, [x0, #40]
  41145c:	stp	xzr, xzr, [x0, #56]
  411460:	strb	w1, [x0, #72]
  411464:	str	xzr, [x0, #80]
  411468:	ret
  41146c:	stp	x29, x30, [sp, #-32]!
  411470:	mov	x29, sp
  411474:	str	x19, [sp, #16]
  411478:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  41147c:	add	x19, x19, #0x910
  411480:	ldr	x0, [x19, #8]
  411484:	cbnz	x0, 4114bc <nftw@plt+0xe7cc>
  411488:	mov	x0, #0x588                 	// #1416
  41148c:	bl	43d908 <_obstack_memory_used@@Base+0x8b0>
  411490:	mov	x3, x0
  411494:	mov	x1, x0
  411498:	mov	x0, #0x10                  	// #16
  41149c:	add	x2, x1, #0x588
  4114a0:	str	x0, [x3], #8
  4114a4:	mov	x0, x3
  4114a8:	bl	411448 <nftw@plt+0xe758>
  4114ac:	add	x0, x0, #0x58
  4114b0:	cmp	x2, x0
  4114b4:	b.ne	4114a8 <nftw@plt+0xe7b8>  // b.any
  4114b8:	str	x3, [x19, #8]
  4114bc:	ldr	x19, [sp, #16]
  4114c0:	ldp	x29, x30, [sp], #32
  4114c4:	ret
  4114c8:	stp	x29, x30, [sp, #-32]!
  4114cc:	mov	x29, sp
  4114d0:	str	x19, [sp, #16]
  4114d4:	cbnz	x0, 4114f0 <nftw@plt+0xe800>
  4114d8:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4114dc:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4114e0:	add	x2, x2, #0xa5f
  4114e4:	add	x0, x0, #0xa22
  4114e8:	mov	w1, #0x133                 	// #307
  4114ec:	bl	402d60 <nftw@plt+0x70>
  4114f0:	mov	x19, x0
  4114f4:	bl	41146c <nftw@plt+0xe77c>
  4114f8:	mov	x0, x19
  4114fc:	bl	4112f8 <nftw@plt+0xe608>
  411500:	mov	x19, x0
  411504:	cbz	x0, 411540 <nftw@plt+0xe850>
  411508:	ldr	x0, [x0, #16]
  41150c:	str	xzr, [x19, #8]
  411510:	cbz	x0, 411518 <nftw@plt+0xe828>
  411514:	bl	402760 <fclose@plt>
  411518:	ldr	x0, [x19, #80]
  41151c:	str	xzr, [x19, #16]
  411520:	stp	xzr, xzr, [x19, #40]
  411524:	str	xzr, [x19, #56]
  411528:	cbz	x0, 411530 <nftw@plt+0xe840>
  41152c:	str	wzr, [x0, #4]
  411530:	mov	w0, #0x1                   	// #1
  411534:	str	wzr, [x19]
  411538:	str	xzr, [x19, #64]
  41153c:	strb	w0, [x19, #72]
  411540:	ldr	x19, [sp, #16]
  411544:	ldp	x29, x30, [sp], #32
  411548:	ret
  41154c:	stp	x29, x30, [sp, #-32]!
  411550:	mov	x29, sp
  411554:	str	x19, [sp, #16]
  411558:	mov	x19, x0
  41155c:	ldr	x0, [x0, #16]
  411560:	cbz	x0, 41156c <nftw@plt+0xe87c>
  411564:	bl	402760 <fclose@plt>
  411568:	str	xzr, [x19, #16]
  41156c:	ldr	x0, [x19, #24]
  411570:	cbz	x0, 411578 <nftw@plt+0xe888>
  411574:	bl	402a80 <free@plt>
  411578:	ldr	x0, [x19, #80]
  41157c:	cbz	x0, 41158c <nftw@plt+0xe89c>
  411580:	ldrsb	w1, [x0, #3]
  411584:	tbz	w1, #31, 411598 <nftw@plt+0xe8a8>
  411588:	str	wzr, [x0, #4]
  41158c:	ldr	x19, [sp, #16]
  411590:	ldp	x29, x30, [sp], #32
  411594:	ret
  411598:	ldr	x19, [sp, #16]
  41159c:	ldp	x29, x30, [sp], #32
  4115a0:	b	402a80 <free@plt>
  4115a4:	stp	x29, x30, [sp, #-32]!
  4115a8:	mov	x29, sp
  4115ac:	stp	x19, x20, [sp, #16]
  4115b0:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4115b4:	add	x20, x20, #0x910
  4115b8:	ldr	x0, [x20, #8]
  4115bc:	cbz	x0, 411604 <nftw@plt+0xe914>
  4115c0:	ldur	x19, [x0, #-8]
  4115c4:	mov	x1, #0x58                  	// #88
  4115c8:	madd	x19, x19, x1, x0
  4115cc:	ldr	x0, [x20, #8]
  4115d0:	cmp	x0, x19
  4115d4:	b.eq	4115e8 <nftw@plt+0xe8f8>  // b.none
  4115d8:	sub	x19, x19, #0x58
  4115dc:	mov	x0, x19
  4115e0:	bl	41154c <nftw@plt+0xe85c>
  4115e4:	b	4115cc <nftw@plt+0xe8dc>
  4115e8:	mov	x0, x19
  4115ec:	mov	x2, #0x58                  	// #88
  4115f0:	ldr	x1, [x0, #-8]!
  4115f4:	mul	x1, x1, x2
  4115f8:	add	x1, x1, #0x8
  4115fc:	bl	43d668 <_obstack_memory_used@@Base+0x610>
  411600:	str	xzr, [x20, #8]
  411604:	ldp	x19, x20, [sp, #16]
  411608:	ldp	x29, x30, [sp], #32
  41160c:	ret
  411610:	stp	x29, x30, [sp, #-32]!
  411614:	mov	w1, w0
  411618:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  41161c:	mov	x29, sp
  411620:	ldr	x0, [x0, #2320]
  411624:	add	x3, sp, #0x18
  411628:	mov	w2, #0x1                   	// #1
  41162c:	str	xzr, [sp, #24]
  411630:	bl	4268c8 <nftw@plt+0x23bd8>
  411634:	cmp	w0, #0x1
  411638:	cset	w0, eq  // eq = none
  41163c:	ldp	x29, x30, [sp], #32
  411640:	ret
  411644:	stp	x29, x30, [sp, #-16]!
  411648:	mov	w2, #0x0                   	// #0
  41164c:	mov	w1, #0x1                   	// #1
  411650:	mov	x29, sp
  411654:	bl	4110e8 <nftw@plt+0xe3f8>
  411658:	ldp	x29, x30, [sp], #16
  41165c:	ret
  411660:	stp	x29, x30, [sp, #-112]!
  411664:	mov	x29, sp
  411668:	stp	x19, x20, [sp, #16]
  41166c:	stp	x21, x22, [sp, #32]
  411670:	mov	x21, x0
  411674:	str	x23, [sp, #48]
  411678:	cbnz	x0, 4116ac <nftw@plt+0xe9bc>
  41167c:	mov	x0, x21
  411680:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  411684:	add	x1, x1, #0xf69
  411688:	bl	4027a0 <fopen@plt>
  41168c:	mov	x20, x0
  411690:	cbnz	x0, 4116c4 <nftw@plt+0xe9d4>
  411694:	mov	x0, x20
  411698:	ldp	x19, x20, [sp, #16]
  41169c:	ldp	x21, x22, [sp, #32]
  4116a0:	ldr	x23, [sp, #48]
  4116a4:	ldp	x29, x30, [sp], #112
  4116a8:	ret
  4116ac:	bl	41146c <nftw@plt+0xe77c>
  4116b0:	mov	x0, x21
  4116b4:	bl	4112f8 <nftw@plt+0xe608>
  4116b8:	mov	x20, x0
  4116bc:	cbnz	x0, 411694 <nftw@plt+0xe9a4>
  4116c0:	b	41167c <nftw@plt+0xe98c>
  4116c4:	bl	41146c <nftw@plt+0xe77c>
  4116c8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4116cc:	add	x1, x0, #0x910
  4116d0:	mov	x23, x0
  4116d4:	ldr	x19, [x1, #8]
  4116d8:	mov	x1, x19
  4116dc:	add	x3, x19, #0x580
  4116e0:	ldr	w22, [x1], #88
  4116e4:	ldr	w0, [x1]
  4116e8:	ldr	w4, [x19]
  4116ec:	ldr	x2, [x1, #8]
  4116f0:	cmp	w0, w4
  4116f4:	b.cc	411790 <nftw@plt+0xeaa0>  // b.lo, b.ul, b.last
  4116f8:	ldr	x4, [x19, #8]
  4116fc:	cbz	x4, 411708 <nftw@plt+0xea18>
  411700:	cmp	x2, #0x0
  411704:	csel	x19, x19, x1, ne  // ne = any
  411708:	cmp	w22, w0
  41170c:	csel	w22, w22, w0, cs  // cs = hs, nlast
  411710:	cbz	x2, 411720 <nftw@plt+0xea30>
  411714:	add	x1, x1, #0x58
  411718:	cmp	x3, x1
  41171c:	b.ne	4116e4 <nftw@plt+0xe9f4>  // b.any
  411720:	ldr	x0, [x19, #16]
  411724:	str	x21, [x19, #8]
  411728:	cbz	x0, 411730 <nftw@plt+0xea40>
  41172c:	bl	402760 <fclose@plt>
  411730:	ldr	x0, [x19, #80]
  411734:	str	x20, [x19, #16]
  411738:	stp	xzr, xzr, [x19, #40]
  41173c:	str	xzr, [x19, #56]
  411740:	cbz	x0, 411748 <nftw@plt+0xea58>
  411744:	str	wzr, [x0, #4]
  411748:	ldr	x0, [x23, #2320]
  41174c:	add	w22, w22, #0x1
  411750:	str	w22, [x19]
  411754:	add	x2, sp, #0x4c
  411758:	mov	x1, x21
  41175c:	str	wzr, [sp, #76]
  411760:	bl	4272a8 <nftw@plt+0x245b8>
  411764:	tst	w0, #0xff
  411768:	b.eq	4117b8 <nftw@plt+0xeac8>  // b.none
  41176c:	ldr	w0, [sp, #76]
  411770:	cmp	w0, #0x1
  411774:	b.hi	411798 <nftw@plt+0xeaa8>  // b.pmore
  411778:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  41177c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411780:	add	x2, x2, #0xa8a
  411784:	add	x0, x0, #0xa22
  411788:	mov	w1, #0x107                 	// #263
  41178c:	bl	402d60 <nftw@plt+0x70>
  411790:	mov	x19, x1
  411794:	b	411708 <nftw@plt+0xea18>
  411798:	add	x8, sp, #0x50
  41179c:	bl	411644 <nftw@plt+0xe954>
  4117a0:	ldrsw	x0, [sp, #88]
  4117a4:	mov	x20, x19
  4117a8:	str	x0, [x19, #64]
  4117ac:	mov	w0, #0x1                   	// #1
  4117b0:	strb	w0, [x19, #72]
  4117b4:	b	411694 <nftw@plt+0xe9a4>
  4117b8:	mov	x0, #0x0                   	// #0
  4117bc:	b	4117a4 <nftw@plt+0xeab4>
  4117c0:	stp	x29, x30, [sp, #-16]!
  4117c4:	mov	x29, sp
  4117c8:	bl	411660 <nftw@plt+0xe970>
  4117cc:	cbz	x0, 4117dc <nftw@plt+0xeaec>
  4117d0:	ldrb	w0, [x0, #72]
  4117d4:	ldp	x29, x30, [sp], #16
  4117d8:	ret
  4117dc:	mov	w0, #0x0                   	// #0
  4117e0:	b	4117d4 <nftw@plt+0xeae4>
  4117e4:	stp	x29, x30, [sp, #-16]!
  4117e8:	mov	w2, w1
  4117ec:	mov	w1, #0x0                   	// #0
  4117f0:	mov	x29, sp
  4117f4:	bl	4110e8 <nftw@plt+0xe3f8>
  4117f8:	ldp	x29, x30, [sp], #16
  4117fc:	ret
  411800:	stp	x29, x30, [sp, #-16]!
  411804:	mov	x29, sp
  411808:	bl	4117e4 <nftw@plt+0xeaf4>
  41180c:	ldp	x29, x30, [sp], #16
  411810:	ret
  411814:	stp	x29, x30, [sp, #-32]!
  411818:	mov	w1, w0
  41181c:	mov	x29, sp
  411820:	stp	x19, x20, [sp, #16]
  411824:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  411828:	mov	w19, w0
  41182c:	ldr	x0, [x20, #2320]
  411830:	bl	426838 <nftw@plt+0x23b48>
  411834:	cbz	w0, 411854 <nftw@plt+0xeb64>
  411838:	ldr	x0, [x20, #2320]
  41183c:	mov	w1, w19
  411840:	ldp	x19, x20, [sp, #16]
  411844:	mov	x3, #0x0                   	// #0
  411848:	ldp	x29, x30, [sp], #32
  41184c:	mov	w2, #0x0                   	// #0
  411850:	b	4268c8 <nftw@plt+0x23bd8>
  411854:	mov	w0, w19
  411858:	ldp	x19, x20, [sp, #16]
  41185c:	ldp	x29, x30, [sp], #32
  411860:	ret
  411864:	mov	w1, w0
  411868:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  41186c:	mov	x3, #0x0                   	// #0
  411870:	mov	w2, #0x0                   	// #0
  411874:	ldr	x0, [x0, #2320]
  411878:	b	4268c8 <nftw@plt+0x23bd8>
  41187c:	stp	x29, x30, [sp, #-48]!
  411880:	mov	x29, sp
  411884:	stp	x19, x20, [sp, #16]
  411888:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  41188c:	stp	x21, x22, [sp, #32]
  411890:	mov	w21, w1
  411894:	mov	w1, w0
  411898:	ldr	x0, [x19, #2320]
  41189c:	mov	w22, w2
  4118a0:	bl	4266b8 <nftw@plt+0x239c8>
  4118a4:	mov	w20, w0
  4118a8:	ldr	x0, [x19, #2320]
  4118ac:	mov	w1, w21
  4118b0:	bl	4265d4 <nftw@plt+0x238e4>
  4118b4:	mov	x21, x0
  4118b8:	ldr	x0, [x19, #2320]
  4118bc:	mov	w1, w22
  4118c0:	bl	4265d4 <nftw@plt+0x238e4>
  4118c4:	bfxil	x0, x21, #0, #32
  4118c8:	mov	x2, x0
  4118cc:	mov	w1, w20
  4118d0:	ldr	x0, [x19, #2320]
  4118d4:	mov	x3, #0x0                   	// #0
  4118d8:	ldp	x19, x20, [sp, #16]
  4118dc:	ldp	x21, x22, [sp, #32]
  4118e0:	ldp	x29, x30, [sp], #48
  4118e4:	b	4263d4 <nftw@plt+0x236e4>
  4118e8:	stp	x29, x30, [sp, #-32]!
  4118ec:	mov	x29, sp
  4118f0:	stp	x19, x20, [sp, #16]
  4118f4:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4118f8:	mov	x19, x1
  4118fc:	mov	w1, w0
  411900:	ldr	x0, [x20, #2320]
  411904:	bl	4266b8 <nftw@plt+0x239c8>
  411908:	mov	w1, w0
  41190c:	mov	x2, x19
  411910:	mov	x3, #0x0                   	// #0
  411914:	ldr	x0, [x20, #2320]
  411918:	ldp	x19, x20, [sp, #16]
  41191c:	ldp	x29, x30, [sp], #32
  411920:	b	4263d4 <nftw@plt+0x236e4>
  411924:	stp	x29, x30, [sp, #-176]!
  411928:	mov	x29, sp
  41192c:	stp	x21, x22, [sp, #32]
  411930:	adrp	x22, 47e000 <__environ@@GLIBC_2.17+0xa50>
  411934:	add	x1, sp, #0x48
  411938:	ldr	x0, [x22, #2320]
  41193c:	stp	x19, x20, [sp, #16]
  411940:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  411944:	str	x23, [sp, #48]
  411948:	stp	xzr, xzr, [sp, #72]
  41194c:	stp	xzr, xzr, [sp, #88]
  411950:	stp	xzr, xzr, [sp, #104]
  411954:	stp	xzr, xzr, [sp, #120]
  411958:	stp	xzr, xzr, [sp, #136]
  41195c:	stp	xzr, xzr, [sp, #152]
  411960:	str	xzr, [sp, #168]
  411964:	bl	427360 <nftw@plt+0x24670>
  411968:	ldp	x2, x0, [sp, #128]
  41196c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411970:	ldr	x21, [sp, #88]
  411974:	add	x1, x1, #0xa9a
  411978:	ldr	x20, [sp, #144]
  41197c:	add	x21, x21, x2
  411980:	ldr	x2, [sp, #96]
  411984:	add	x23, x0, x20
  411988:	add	x21, x21, x20
  41198c:	add	x0, x0, x2
  411990:	add	x20, x0, x20
  411994:	ldr	x0, [x19, #1416]
  411998:	ldr	x2, [sp, #104]
  41199c:	bl	402cb0 <fprintf@plt>
  4119a0:	ldr	x0, [sp, #104]
  4119a4:	cbz	x0, 4119c0 <nftw@plt+0xecd0>
  4119a8:	ldr	x2, [sp, #112]
  4119ac:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4119b0:	add	x1, x1, #0xacf
  4119b4:	sdiv	x2, x2, x0
  4119b8:	ldr	x0, [x19, #1416]
  4119bc:	bl	402cb0 <fprintf@plt>
  4119c0:	ldr	x1, [x19, #1416]
  4119c4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4119c8:	add	x0, x0, #0xb04
  4119cc:	bl	402640 <fputs@plt>
  4119d0:	ldr	x2, [sp, #80]
  4119d4:	mov	x1, #0x27ff                	// #10239
  4119d8:	ldr	x0, [x19, #1416]
  4119dc:	cmp	x2, x1
  4119e0:	b.gt	411c40 <nftw@plt+0xef50>
  4119e4:	mov	w3, #0x20                  	// #32
  4119e8:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4119ec:	add	x1, x1, #0xb3c
  4119f0:	bl	402cb0 <fprintf@plt>
  4119f4:	ldr	x2, [sp, #96]
  4119f8:	mov	x1, #0x27ff                	// #10239
  4119fc:	ldr	x0, [x19, #1416]
  411a00:	cmp	x2, x1
  411a04:	b.gt	411c64 <nftw@plt+0xef74>
  411a08:	mov	w3, #0x20                  	// #32
  411a0c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411a10:	add	x1, x1, #0xb69
  411a14:	bl	402cb0 <fprintf@plt>
  411a18:	ldr	x2, [sp, #72]
  411a1c:	mov	x1, #0x27ff                	// #10239
  411a20:	ldr	x0, [x19, #1416]
  411a24:	cmp	x2, x1
  411a28:	b.gt	411c88 <nftw@plt+0xef98>
  411a2c:	mov	w3, #0x20                  	// #32
  411a30:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411a34:	add	x1, x1, #0xb96
  411a38:	bl	402cb0 <fprintf@plt>
  411a3c:	ldr	x2, [sp, #88]
  411a40:	mov	x1, #0x27ff                	// #10239
  411a44:	ldr	x0, [x19, #1416]
  411a48:	cmp	x2, x1
  411a4c:	b.gt	411cac <nftw@plt+0xefbc>
  411a50:	mov	w3, #0x20                  	// #32
  411a54:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411a58:	add	x1, x1, #0xbc3
  411a5c:	bl	402cb0 <fprintf@plt>
  411a60:	ldr	x2, [sp, #120]
  411a64:	mov	x1, #0x27ff                	// #10239
  411a68:	ldr	x0, [x19, #1416]
  411a6c:	cmp	x2, x1
  411a70:	b.gt	411cd0 <nftw@plt+0xefe0>
  411a74:	mov	w3, #0x20                  	// #32
  411a78:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411a7c:	add	x1, x1, #0xbf0
  411a80:	bl	402cb0 <fprintf@plt>
  411a84:	ldr	x2, [sp, #136]
  411a88:	mov	x1, #0x27ff                	// #10239
  411a8c:	ldr	x0, [x19, #1416]
  411a90:	cmp	x2, x1
  411a94:	b.gt	411cf4 <nftw@plt+0xf004>
  411a98:	mov	w3, #0x20                  	// #32
  411a9c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411aa0:	add	x1, x1, #0xc1d
  411aa4:	bl	402cb0 <fprintf@plt>
  411aa8:	ldr	x2, [sp, #144]
  411aac:	mov	x1, #0x27ff                	// #10239
  411ab0:	ldr	x0, [x19, #1416]
  411ab4:	cmp	x2, x1
  411ab8:	b.gt	411d18 <nftw@plt+0xf028>
  411abc:	mov	w3, #0x20                  	// #32
  411ac0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411ac4:	add	x1, x1, #0xc4a
  411ac8:	bl	402cb0 <fprintf@plt>
  411acc:	mov	x1, #0x27ff                	// #10239
  411ad0:	cmp	x23, x1
  411ad4:	ldr	x0, [x19, #1416]
  411ad8:	b.le	411d48 <nftw@plt+0xf058>
  411adc:	mov	w1, #0x9fffff              	// #10485759
  411ae0:	cmp	x23, x1
  411ae4:	b.gt	411d3c <nftw@plt+0xf04c>
  411ae8:	asr	x2, x23, #10
  411aec:	mov	w3, #0x6b                  	// #107
  411af0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411af4:	add	x1, x1, #0xc77
  411af8:	bl	402cb0 <fprintf@plt>
  411afc:	ldr	x2, [sp, #152]
  411b00:	mov	x1, #0x27ff                	// #10239
  411b04:	ldr	x0, [x19, #1416]
  411b08:	cmp	x2, x1
  411b0c:	b.gt	411d54 <nftw@plt+0xf064>
  411b10:	mov	w3, #0x20                  	// #32
  411b14:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411b18:	add	x1, x1, #0xca4
  411b1c:	bl	402cb0 <fprintf@plt>
  411b20:	mov	x1, #0x27ff                	// #10239
  411b24:	cmp	x21, x1
  411b28:	ldr	x0, [x19, #1416]
  411b2c:	b.le	411d84 <nftw@plt+0xf094>
  411b30:	mov	w1, #0x9fffff              	// #10485759
  411b34:	cmp	x21, x1
  411b38:	b.gt	411d78 <nftw@plt+0xf088>
  411b3c:	asr	x2, x21, #10
  411b40:	mov	w3, #0x6b                  	// #107
  411b44:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411b48:	add	x1, x1, #0xcd1
  411b4c:	bl	402cb0 <fprintf@plt>
  411b50:	mov	x1, #0x27ff                	// #10239
  411b54:	cmp	x20, x1
  411b58:	ldr	x0, [x19, #1416]
  411b5c:	b.le	411d9c <nftw@plt+0xf0ac>
  411b60:	mov	w1, #0x9fffff              	// #10485759
  411b64:	cmp	x20, x1
  411b68:	b.gt	411d90 <nftw@plt+0xf0a0>
  411b6c:	asr	x2, x20, #10
  411b70:	mov	w3, #0x6b                  	// #107
  411b74:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411b78:	add	x1, x1, #0xcfe
  411b7c:	bl	402cb0 <fprintf@plt>
  411b80:	ldr	x2, [sp, #160]
  411b84:	mov	x1, #0x27ff                	// #10239
  411b88:	ldr	x0, [x19, #1416]
  411b8c:	cmp	x2, x1
  411b90:	b.gt	411da8 <nftw@plt+0xf0b8>
  411b94:	mov	w3, #0x20                  	// #32
  411b98:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411b9c:	add	x1, x1, #0xd2b
  411ba0:	bl	402cb0 <fprintf@plt>
  411ba4:	ldr	x2, [sp, #168]
  411ba8:	mov	x1, #0x27ff                	// #10239
  411bac:	ldr	x0, [x19, #1416]
  411bb0:	cmp	x2, x1
  411bb4:	b.gt	411dcc <nftw@plt+0xf0dc>
  411bb8:	mov	w3, #0x20                  	// #32
  411bbc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411bc0:	add	x1, x1, #0xd58
  411bc4:	bl	402cb0 <fprintf@plt>
  411bc8:	ldr	x1, [x22, #2320]
  411bcc:	ldr	x0, [x19, #1416]
  411bd0:	ldr	w2, [x1, #124]
  411bd4:	mov	w1, #0x27ff                	// #10239
  411bd8:	cmp	w2, w1
  411bdc:	b.hi	411df0 <nftw@plt+0xf100>  // b.pmore
  411be0:	mov	w2, w2
  411be4:	mov	w3, #0x20                  	// #32
  411be8:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411bec:	add	x1, x1, #0xd85
  411bf0:	bl	402cb0 <fprintf@plt>
  411bf4:	ldr	x1, [x22, #2320]
  411bf8:	ldr	x0, [x19, #1416]
  411bfc:	ldr	w2, [x1, #128]
  411c00:	mov	w1, #0x27ff                	// #10239
  411c04:	cmp	w2, w1
  411c08:	b.hi	411e14 <nftw@plt+0xf124>  // b.pmore
  411c0c:	mov	w2, w2
  411c10:	mov	w3, #0x20                  	// #32
  411c14:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411c18:	add	x1, x1, #0xdb2
  411c1c:	bl	402cb0 <fprintf@plt>
  411c20:	ldr	x1, [x19, #1416]
  411c24:	mov	w0, #0xa                   	// #10
  411c28:	bl	402710 <fputc@plt>
  411c2c:	ldp	x19, x20, [sp, #16]
  411c30:	ldp	x21, x22, [sp, #32]
  411c34:	ldr	x23, [sp, #48]
  411c38:	ldp	x29, x30, [sp], #176
  411c3c:	ret
  411c40:	mov	w1, #0x9fffff              	// #10485759
  411c44:	cmp	x2, x1
  411c48:	b.gt	411c58 <nftw@plt+0xef68>
  411c4c:	asr	x2, x2, #10
  411c50:	mov	w3, #0x6b                  	// #107
  411c54:	b	4119e8 <nftw@plt+0xecf8>
  411c58:	asr	x2, x2, #20
  411c5c:	mov	w3, #0x4d                  	// #77
  411c60:	b	4119e8 <nftw@plt+0xecf8>
  411c64:	mov	w1, #0x9fffff              	// #10485759
  411c68:	cmp	x2, x1
  411c6c:	b.gt	411c7c <nftw@plt+0xef8c>
  411c70:	asr	x2, x2, #10
  411c74:	mov	w3, #0x6b                  	// #107
  411c78:	b	411a0c <nftw@plt+0xed1c>
  411c7c:	asr	x2, x2, #20
  411c80:	mov	w3, #0x4d                  	// #77
  411c84:	b	411a0c <nftw@plt+0xed1c>
  411c88:	mov	w1, #0x9fffff              	// #10485759
  411c8c:	cmp	x2, x1
  411c90:	b.gt	411ca0 <nftw@plt+0xefb0>
  411c94:	asr	x2, x2, #10
  411c98:	mov	w3, #0x6b                  	// #107
  411c9c:	b	411a30 <nftw@plt+0xed40>
  411ca0:	asr	x2, x2, #20
  411ca4:	mov	w3, #0x4d                  	// #77
  411ca8:	b	411a30 <nftw@plt+0xed40>
  411cac:	mov	w1, #0x9fffff              	// #10485759
  411cb0:	cmp	x2, x1
  411cb4:	b.gt	411cc4 <nftw@plt+0xefd4>
  411cb8:	asr	x2, x2, #10
  411cbc:	mov	w3, #0x6b                  	// #107
  411cc0:	b	411a54 <nftw@plt+0xed64>
  411cc4:	asr	x2, x2, #20
  411cc8:	mov	w3, #0x4d                  	// #77
  411ccc:	b	411a54 <nftw@plt+0xed64>
  411cd0:	mov	w1, #0x9fffff              	// #10485759
  411cd4:	cmp	x2, x1
  411cd8:	b.gt	411ce8 <nftw@plt+0xeff8>
  411cdc:	asr	x2, x2, #10
  411ce0:	mov	w3, #0x6b                  	// #107
  411ce4:	b	411a78 <nftw@plt+0xed88>
  411ce8:	asr	x2, x2, #20
  411cec:	mov	w3, #0x4d                  	// #77
  411cf0:	b	411a78 <nftw@plt+0xed88>
  411cf4:	mov	w1, #0x9fffff              	// #10485759
  411cf8:	cmp	x2, x1
  411cfc:	b.gt	411d0c <nftw@plt+0xf01c>
  411d00:	asr	x2, x2, #10
  411d04:	mov	w3, #0x6b                  	// #107
  411d08:	b	411a9c <nftw@plt+0xedac>
  411d0c:	asr	x2, x2, #20
  411d10:	mov	w3, #0x4d                  	// #77
  411d14:	b	411a9c <nftw@plt+0xedac>
  411d18:	mov	w1, #0x9fffff              	// #10485759
  411d1c:	cmp	x2, x1
  411d20:	b.gt	411d30 <nftw@plt+0xf040>
  411d24:	asr	x2, x2, #10
  411d28:	mov	w3, #0x6b                  	// #107
  411d2c:	b	411ac0 <nftw@plt+0xedd0>
  411d30:	asr	x2, x2, #20
  411d34:	mov	w3, #0x4d                  	// #77
  411d38:	b	411ac0 <nftw@plt+0xedd0>
  411d3c:	asr	x2, x23, #20
  411d40:	mov	w3, #0x4d                  	// #77
  411d44:	b	411af0 <nftw@plt+0xee00>
  411d48:	mov	x2, x23
  411d4c:	mov	w3, #0x20                  	// #32
  411d50:	b	411af0 <nftw@plt+0xee00>
  411d54:	mov	w1, #0x9fffff              	// #10485759
  411d58:	cmp	x2, x1
  411d5c:	b.gt	411d6c <nftw@plt+0xf07c>
  411d60:	asr	x2, x2, #10
  411d64:	mov	w3, #0x6b                  	// #107
  411d68:	b	411b14 <nftw@plt+0xee24>
  411d6c:	asr	x2, x2, #20
  411d70:	mov	w3, #0x4d                  	// #77
  411d74:	b	411b14 <nftw@plt+0xee24>
  411d78:	asr	x2, x21, #20
  411d7c:	mov	w3, #0x4d                  	// #77
  411d80:	b	411b44 <nftw@plt+0xee54>
  411d84:	mov	x2, x21
  411d88:	mov	w3, #0x20                  	// #32
  411d8c:	b	411b44 <nftw@plt+0xee54>
  411d90:	asr	x2, x20, #20
  411d94:	mov	w3, #0x4d                  	// #77
  411d98:	b	411b74 <nftw@plt+0xee84>
  411d9c:	mov	x2, x20
  411da0:	mov	w3, #0x20                  	// #32
  411da4:	b	411b74 <nftw@plt+0xee84>
  411da8:	mov	w1, #0x9fffff              	// #10485759
  411dac:	cmp	x2, x1
  411db0:	b.gt	411dc0 <nftw@plt+0xf0d0>
  411db4:	asr	x2, x2, #10
  411db8:	mov	w3, #0x6b                  	// #107
  411dbc:	b	411b98 <nftw@plt+0xeea8>
  411dc0:	asr	x2, x2, #20
  411dc4:	mov	w3, #0x4d                  	// #77
  411dc8:	b	411b98 <nftw@plt+0xeea8>
  411dcc:	mov	w1, #0x9fffff              	// #10485759
  411dd0:	cmp	x2, x1
  411dd4:	b.gt	411de4 <nftw@plt+0xf0f4>
  411dd8:	asr	x2, x2, #10
  411ddc:	mov	w3, #0x6b                  	// #107
  411de0:	b	411bbc <nftw@plt+0xeecc>
  411de4:	asr	x2, x2, #20
  411de8:	mov	w3, #0x4d                  	// #77
  411dec:	b	411bbc <nftw@plt+0xeecc>
  411df0:	mov	w1, #0x9fffff              	// #10485759
  411df4:	cmp	w2, w1
  411df8:	b.hi	411e08 <nftw@plt+0xf118>  // b.pmore
  411dfc:	lsr	w2, w2, #10
  411e00:	mov	w3, #0x6b                  	// #107
  411e04:	b	411be8 <nftw@plt+0xeef8>
  411e08:	lsr	w2, w2, #20
  411e0c:	mov	w3, #0x4d                  	// #77
  411e10:	b	411be8 <nftw@plt+0xeef8>
  411e14:	mov	w1, #0x9fffff              	// #10485759
  411e18:	cmp	w2, w1
  411e1c:	b.hi	411e2c <nftw@plt+0xf13c>  // b.pmore
  411e20:	lsr	w2, w2, #10
  411e24:	mov	w3, #0x6b                  	// #107
  411e28:	b	411c14 <nftw@plt+0xef24>
  411e2c:	lsr	w2, w2, #20
  411e30:	mov	w3, #0x4d                  	// #77
  411e34:	b	411c14 <nftw@plt+0xef24>
  411e38:	stp	x29, x30, [sp, #-48]!
  411e3c:	mov	x3, #0x0                   	// #0
  411e40:	mov	x29, sp
  411e44:	stp	x19, x20, [sp, #16]
  411e48:	mov	x20, x0
  411e4c:	mov	w19, w1
  411e50:	mov	x1, #0x0                   	// #0
  411e54:	str	w19, [x20]
  411e58:	sbfiz	x0, x19, #2, #32
  411e5c:	str	x21, [sp, #32]
  411e60:	mov	x21, x2
  411e64:	mov	x2, #0x0                   	// #0
  411e68:	bl	4137f8 <nftw@plt+0x10b08>
  411e6c:	mov	x3, #0x0                   	// #0
  411e70:	str	x0, [x20, #8]
  411e74:	cmp	w19, w3
  411e78:	b.le	411e8c <nftw@plt+0xf19c>
  411e7c:	ldr	w1, [x21, x3, lsl #2]
  411e80:	str	w1, [x0, x3, lsl #2]
  411e84:	add	x3, x3, #0x1
  411e88:	b	411e74 <nftw@plt+0xf184>
  411e8c:	ldp	x19, x20, [sp, #16]
  411e90:	ldr	x21, [sp, #32]
  411e94:	ldp	x29, x30, [sp], #48
  411e98:	ret
  411e9c:	stp	x29, x30, [sp, #-64]!
  411ea0:	mov	x3, #0x1                   	// #1
  411ea4:	mov	x2, #0x0                   	// #0
  411ea8:	mov	x29, sp
  411eac:	adrp	x1, 412000 <nftw@plt+0xf310>
  411eb0:	add	x1, x1, #0xf54
  411eb4:	stp	x19, x20, [sp, #16]
  411eb8:	stp	x21, x22, [sp, #32]
  411ebc:	mov	x21, x0
  411ec0:	mov	x0, #0x30                  	// #48
  411ec4:	str	x23, [sp, #48]
  411ec8:	bl	4137f8 <nftw@plt+0x10b08>
  411ecc:	mov	x19, x0
  411ed0:	mov	w23, #0x1                   	// #1
  411ed4:	strb	w23, [x0, #44]
  411ed8:	mov	x0, #0x40                  	// #64
  411edc:	stp	xzr, xzr, [x19, #16]
  411ee0:	str	xzr, [x19, #32]
  411ee4:	bl	413434 <nftw@plt+0x10744>
  411ee8:	mov	w20, w0
  411eec:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  411ef0:	add	x0, x0, #0x380
  411ef4:	ubfiz	x1, x20, #4, #32
  411ef8:	ldr	w22, [x0, x1]
  411efc:	mov	w0, w23
  411f00:	mov	x1, x22
  411f04:	bl	411370 <nftw@plt+0xe680>
  411f08:	ldr	x23, [sp, #48]
  411f0c:	str	x19, [x21]
  411f10:	stp	x0, x22, [x19]
  411f14:	str	w20, [x19, #40]
  411f18:	ldp	x19, x20, [sp, #16]
  411f1c:	ldp	x21, x22, [sp, #32]
  411f20:	ldp	x29, x30, [sp], #64
  411f24:	ret
  411f28:	stp	x29, x30, [sp, #-32]!
  411f2c:	mov	w1, w0
  411f30:	mov	x3, #0x0                   	// #0
  411f34:	mov	x29, sp
  411f38:	str	x19, [sp, #16]
  411f3c:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  411f40:	mov	w2, #0x1                   	// #1
  411f44:	ldr	x0, [x19, #2320]
  411f48:	bl	4268c8 <nftw@plt+0x23bd8>
  411f4c:	mov	w1, w0
  411f50:	ldr	x0, [x19, #2320]
  411f54:	bl	4265d4 <nftw@plt+0x238e4>
  411f58:	ldr	x19, [sp, #16]
  411f5c:	ldp	x29, x30, [sp], #32
  411f60:	ret
  411f64:	stp	x29, x30, [sp, #-80]!
  411f68:	mov	x29, sp
  411f6c:	stp	x19, x20, [sp, #16]
  411f70:	stp	x21, x22, [sp, #32]
  411f74:	stp	x23, x24, [sp, #48]
  411f78:	stp	x25, x26, [sp, #64]
  411f7c:	cbnz	x2, 411f98 <nftw@plt+0xf2a8>
  411f80:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411f84:	add	x2, x2, #0xddf
  411f88:	mov	w1, #0x50d                 	// #1293
  411f8c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411f90:	add	x0, x0, #0xa22
  411f94:	bl	402d60 <nftw@plt+0x70>
  411f98:	mov	x22, x3
  411f9c:	cbnz	x3, 411fb0 <nftw@plt+0xf2c0>
  411fa0:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  411fa4:	mov	w1, #0x50e                 	// #1294
  411fa8:	add	x2, x2, #0xddf
  411fac:	b	411f8c <nftw@plt+0xf29c>
  411fb0:	mov	x19, x0
  411fb4:	mov	x23, x2
  411fb8:	mov	w0, w1
  411fbc:	bl	411f28 <nftw@plt+0xf238>
  411fc0:	mov	w21, w0
  411fc4:	ldr	x20, [x19]
  411fc8:	ldr	w1, [x20, #32]
  411fcc:	ldr	w26, [x20, #40]
  411fd0:	add	w1, w1, #0x1
  411fd4:	str	w1, [x20, #32]
  411fd8:	mov	w1, w26
  411fdc:	bl	40fef0 <nftw@plt+0xd200>
  411fe0:	mov	w19, w0
  411fe4:	ldr	x24, [x20]
  411fe8:	ubfiz	x0, x19, #4, #32
  411fec:	add	x2, x24, x0
  411ff0:	ldr	w0, [x24, x0]
  411ff4:	cbz	w0, 412044 <nftw@plt+0xf354>
  411ff8:	cmp	w21, w0
  411ffc:	b.eq	412044 <nftw@plt+0xf354>  // b.none
  412000:	mov	w1, w26
  412004:	mov	w0, w21
  412008:	ldr	x25, [x20, #8]
  41200c:	bl	40ff28 <nftw@plt+0xd238>
  412010:	ldr	w1, [x20, #36]
  412014:	add	w19, w19, w0
  412018:	add	w1, w1, #0x1
  41201c:	str	w1, [x20, #36]
  412020:	cmp	x25, w19, uxtw
  412024:	b.hi	41202c <nftw@plt+0xf33c>  // b.pmore
  412028:	sub	w19, w19, w25
  41202c:	ubfiz	x1, x19, #4, #32
  412030:	add	x2, x24, x1
  412034:	ldr	w1, [x24, x1]
  412038:	cbz	w1, 412044 <nftw@plt+0xf354>
  41203c:	cmp	w21, w1
  412040:	b.ne	412010 <nftw@plt+0xf320>  // b.any
  412044:	ldr	w0, [x2]
  412048:	cbz	w0, 41207c <nftw@plt+0xf38c>
  41204c:	ldr	x0, [x2, #8]
  412050:	ldr	w1, [x0]
  412054:	ldr	x0, [x0, #8]
  412058:	str	w1, [x23]
  41205c:	str	x0, [x22]
  412060:	mov	w0, #0x1                   	// #1
  412064:	ldp	x19, x20, [sp, #16]
  412068:	ldp	x21, x22, [sp, #32]
  41206c:	ldp	x23, x24, [sp, #48]
  412070:	ldp	x25, x26, [sp, #64]
  412074:	ldp	x29, x30, [sp], #80
  412078:	ret
  41207c:	mov	w0, #0x0                   	// #0
  412080:	b	412064 <nftw@plt+0xf374>
  412084:	stp	x29, x30, [sp, #-112]!
  412088:	mov	x29, sp
  41208c:	stp	x19, x20, [sp, #16]
  412090:	mov	x19, x0
  412094:	stp	x21, x22, [sp, #32]
  412098:	mov	x22, x2
  41209c:	stp	x23, x24, [sp, #48]
  4120a0:	str	x25, [sp, #64]
  4120a4:	mov	x25, x1
  4120a8:	bl	411020 <nftw@plt+0xe330>
  4120ac:	ldp	x2, x0, [x19, #40]
  4120b0:	subs	x2, x2, x0
  4120b4:	b.ne	4120d4 <nftw@plt+0xf3e4>  // b.any
  4120b8:	mov	w0, #0x0                   	// #0
  4120bc:	ldp	x19, x20, [sp, #16]
  4120c0:	ldp	x21, x22, [sp, #32]
  4120c4:	ldp	x23, x24, [sp, #48]
  4120c8:	ldr	x25, [sp, #64]
  4120cc:	ldp	x29, x30, [sp], #112
  4120d0:	ret
  4120d4:	ldr	x23, [x19, #24]
  4120d8:	mov	w1, #0xa                   	// #10
  4120dc:	add	x23, x23, x0
  4120e0:	mov	x0, x23
  4120e4:	bl	402b50 <memchr@plt>
  4120e8:	mov	x21, x0
  4120ec:	cbnz	x0, 412158 <nftw@plt+0xf468>
  4120f0:	mov	x0, x19
  4120f4:	bl	411020 <nftw@plt+0xe330>
  4120f8:	tst	w0, #0xff
  4120fc:	ldr	x20, [x19, #24]
  412100:	ldr	x0, [x19, #40]
  412104:	b.eq	412220 <nftw@plt+0xf530>  // b.none
  412108:	ldr	x2, [x19, #48]
  41210c:	mov	w1, #0xa                   	// #10
  412110:	add	x23, x20, x2
  412114:	sub	x2, x0, x2
  412118:	mov	x0, x23
  41211c:	bl	402b50 <memchr@plt>
  412120:	mov	x20, x0
  412124:	cbz	x0, 4120f0 <nftw@plt+0xf400>
  412128:	add	x21, x0, #0x1
  41212c:	strb	wzr, [x19, #72]
  412130:	ldr	x0, [x19, #16]
  412134:	bl	402ce0 <ferror@plt>
  412138:	cbnz	w0, 4120b8 <nftw@plt+0xf3c8>
  41213c:	cbnz	x20, 412168 <nftw@plt+0xf478>
  412140:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412144:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412148:	add	x2, x2, #0xdf8
  41214c:	add	x0, x0, #0xa22
  412150:	mov	w1, #0x241                 	// #577
  412154:	bl	402d60 <nftw@plt+0x70>
  412158:	mov	x20, x0
  41215c:	add	x21, x0, #0x1
  412160:	strb	wzr, [x19, #72]
  412164:	b	412130 <nftw@plt+0xf440>
  412168:	ldp	x0, x4, [x19, #40]
  41216c:	sub	x24, x20, x23
  412170:	cmp	x4, x0
  412174:	b.cs	41217c <nftw@plt+0xf48c>  // b.hs, b.nlast
  412178:	str	x23, [x25]
  41217c:	ldp	x1, x3, [x19, #56]
  412180:	add	x1, x1, #0x1
  412184:	str	x1, [x19, #56]
  412188:	cmp	x1, x3
  41218c:	b.hi	4121a4 <nftw@plt+0xf4b4>  // b.pmore
  412190:	ldr	x0, [x19, #80]
  412194:	cbz	x0, 4121ec <nftw@plt+0xf4fc>
  412198:	ldr	w0, [x0, #4]
  41219c:	cmp	w0, #0x63
  4121a0:	b.ls	4121c8 <nftw@plt+0xf4d8>  // b.plast
  4121a4:	cbz	x21, 4121c0 <nftw@plt+0xf4d0>
  4121a8:	ldr	x0, [x19, #24]
  4121ac:	sub	x21, x21, x0
  4121b0:	str	x21, [x19, #48]
  4121b4:	mov	w0, #0x1                   	// #1
  4121b8:	str	x24, [x22]
  4121bc:	b	4120bc <nftw@plt+0xf3cc>
  4121c0:	ldr	x21, [x19, #40]
  4121c4:	b	4121b0 <nftw@plt+0xf4c0>
  4121c8:	cmp	x3, #0x64
  4121cc:	b.ls	4121f8 <nftw@plt+0xf508>  // b.plast
  4121d0:	cbz	w0, 412200 <nftw@plt+0xf510>
  4121d4:	mov	x2, #0x64                  	// #100
  4121d8:	mul	x2, x1, x2
  4121dc:	udiv	x2, x2, x3
  4121e0:	cmp	x2, w0, uxtw
  4121e4:	b.cc	4121a4 <nftw@plt+0xf4b4>  // b.lo, b.ul, b.last
  4121e8:	b	412200 <nftw@plt+0xf510>
  4121ec:	cmp	x3, #0x64
  4121f0:	b.hi	412200 <nftw@plt+0xf510>  // b.pmore
  4121f4:	mov	w0, #0x0                   	// #0
  4121f8:	cmp	x1, w0, uxtw
  4121fc:	b.ls	4121a4 <nftw@plt+0xf4b4>  // b.plast
  412200:	ldr	x0, [x19, #24]
  412204:	stp	x1, x4, [sp, #88]
  412208:	add	x1, sp, #0x58
  41220c:	sub	x20, x20, x0
  412210:	add	x0, x19, #0x50
  412214:	str	x20, [sp, #104]
  412218:	bl	4130ac <nftw@plt+0x103bc>
  41221c:	b	4121a4 <nftw@plt+0xf4b4>
  412220:	add	x20, x20, x0
  412224:	mov	w0, #0x1                   	// #1
  412228:	strb	w0, [x19, #72]
  41222c:	b	412130 <nftw@plt+0xf440>
  412230:	stp	x29, x30, [sp, #-64]!
  412234:	mov	x29, sp
  412238:	stp	x19, x20, [sp, #16]
  41223c:	str	xzr, [sp, #40]
  412240:	cbnz	w1, 412258 <nftw@plt+0xf568>
  412244:	mov	x0, #0x0                   	// #0
  412248:	mov	x1, #0x0                   	// #0
  41224c:	ldp	x19, x20, [sp, #16]
  412250:	ldp	x29, x30, [sp], #64
  412254:	ret
  412258:	mov	w19, w1
  41225c:	bl	411660 <nftw@plt+0xe970>
  412260:	mov	x20, x0
  412264:	cbz	x0, 412244 <nftw@plt+0xf554>
  412268:	ldr	x1, [x20, #56]
  41226c:	sxtw	x0, w19
  412270:	cmp	x1, w19, sxtw
  412274:	b.cc	4122b4 <nftw@plt+0xf5c4>  // b.lo, b.ul, b.last
  412278:	ldr	x2, [x20, #80]
  41227c:	cbz	x2, 4122b0 <nftw@plt+0xf5c0>
  412280:	ldr	w4, [x2, #4]
  412284:	cbz	w4, 4122b0 <nftw@plt+0xf5c0>
  412288:	ldr	x3, [x20, #64]
  41228c:	cmp	x3, #0x64
  412290:	b.ls	4122e0 <nftw@plt+0xf5f0>  // b.plast
  412294:	cmp	x0, x3
  412298:	b.hi	41232c <nftw@plt+0xf63c>  // b.pmore
  41229c:	mov	w1, #0x64                  	// #100
  4122a0:	smull	x19, w19, w1
  4122a4:	udiv	x19, x19, x3
  4122a8:	cmp	x19, w4, uxtw
  4122ac:	b.cc	412334 <nftw@plt+0xf644>  // b.lo, b.ul, b.last
  4122b0:	stp	xzr, xzr, [x20, #48]
  4122b4:	sub	x19, x0, #0x1
  4122b8:	ldr	x0, [x20, #56]
  4122bc:	add	x2, sp, #0x38
  4122c0:	cmp	x0, x19
  4122c4:	b.cs	412364 <nftw@plt+0xf674>  // b.hs, b.nlast
  4122c8:	add	x1, sp, #0x30
  4122cc:	mov	x0, x20
  4122d0:	bl	412084 <nftw@plt+0xf394>
  4122d4:	tst	w0, #0xff
  4122d8:	b.ne	4122b8 <nftw@plt+0xf5c8>  // b.any
  4122dc:	b	412244 <nftw@plt+0xf554>
  4122e0:	sub	w1, w19, #0x1
  4122e4:	sub	w19, w3, #0x1
  4122e8:	mov	w5, #0x18                  	// #24
  4122ec:	mov	x4, #0x8                   	// #8
  4122f0:	cmp	x0, x3
  4122f4:	umaddl	x1, w1, w5, x4
  4122f8:	umaddl	x19, w19, w5, x4
  4122fc:	add	x1, x2, x1
  412300:	add	x19, x2, x19
  412304:	csel	x1, x19, x1, hi  // hi = pmore
  412308:	ldr	x2, [x1]
  41230c:	cmp	x0, x2
  412310:	b.cs	412388 <nftw@plt+0xf698>  // b.hs, b.nlast
  412314:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412318:	add	x2, x2, #0xe06
  41231c:	mov	w1, #0x2b2                 	// #690
  412320:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412324:	add	x0, x0, #0xa22
  412328:	bl	402d60 <nftw@plt+0x70>
  41232c:	sub	w19, w4, #0x1
  412330:	b	4122a8 <nftw@plt+0xf5b8>
  412334:	mov	x3, #0x18                  	// #24
  412338:	madd	x1, x19, x3, x2
  41233c:	mov	w19, w19
  412340:	add	x1, x1, #0x8
  412344:	madd	x19, x19, x3, x2
  412348:	ldr	x2, [x19, #8]
  41234c:	cmp	x0, x2
  412350:	b.cs	412388 <nftw@plt+0xf698>  // b.hs, b.nlast
  412354:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412358:	mov	w1, #0x2c1                 	// #705
  41235c:	add	x2, x2, #0xe06
  412360:	b	412320 <nftw@plt+0xf630>
  412364:	add	x1, sp, #0x28
  412368:	mov	x0, x20
  41236c:	bl	412084 <nftw@plt+0xf394>
  412370:	tst	w0, #0xff
  412374:	b.ne	4123ac <nftw@plt+0xf6bc>  // b.any
  412378:	b	412244 <nftw@plt+0xf554>
  41237c:	sub	x2, x2, #0x1
  412380:	stp	x3, x2, [x20, #48]
  412384:	b	4122b4 <nftw@plt+0xf5c4>
  412388:	ldp	x2, x3, [x1]
  41238c:	cmp	x0, x2
  412390:	b.ne	41237c <nftw@plt+0xf68c>  // b.any
  412394:	ldr	x0, [x20, #24]
  412398:	add	x0, x0, x3
  41239c:	str	x0, [sp, #40]
  4123a0:	ldr	x0, [x1, #16]
  4123a4:	sub	x3, x0, x3
  4123a8:	str	x3, [sp, #56]
  4123ac:	ldr	x0, [sp, #40]
  4123b0:	ldr	x1, [sp, #56]
  4123b4:	b	41224c <nftw@plt+0xf55c>
  4123b8:	stp	x29, x30, [sp, #-144]!
  4123bc:	mov	w3, #0x2                   	// #2
  4123c0:	mov	w2, #0x0                   	// #0
  4123c4:	mov	x29, sp
  4123c8:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4123cc:	add	x1, x1, #0xe1c
  4123d0:	stp	x19, x20, [sp, #16]
  4123d4:	mov	x19, x0
  4123d8:	stp	x21, x22, [sp, #32]
  4123dc:	stp	x23, x24, [sp, #48]
  4123e0:	mov	w23, #0x0                   	// #0
  4123e4:	stp	x25, x26, [sp, #64]
  4123e8:	adrp	x26, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4123ec:	stp	x27, x28, [sp, #80]
  4123f0:	bl	4113ec <nftw@plt+0xe6fc>
  4123f4:	add	x0, x26, #0xf00
  4123f8:	str	x0, [sp, #96]
  4123fc:	adrp	x28, 47e000 <__environ@@GLIBC_2.17+0xa50>
  412400:	add	x25, x28, #0x910
  412404:	ldr	x20, [x28, #2320]
  412408:	ldr	w0, [x20, #12]
  41240c:	cmp	w23, w0
  412410:	b.cs	412718 <nftw@plt+0xfa28>  // b.hs, b.nlast
  412414:	sub	w0, w0, #0x1
  412418:	cmp	w23, w0
  41241c:	ldr	x27, [x20]
  412420:	b.ne	412594 <nftw@plt+0xf8a4>  // b.any
  412424:	ldr	w24, [x20, #56]
  412428:	mov	w22, #0x18                  	// #24
  41242c:	mov	w2, w23
  412430:	mov	x0, x19
  412434:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412438:	smull	x22, w23, w22
  41243c:	add	x1, x1, #0xe2f
  412440:	bl	402cb0 <fprintf@plt>
  412444:	add	x20, x27, x22
  412448:	mov	w3, w24
  41244c:	mov	x0, x19
  412450:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412454:	ldr	w2, [x27, x22]
  412458:	add	x1, x1, #0xa38
  41245c:	bl	402cb0 <fprintf@plt>
  412460:	ldr	x2, [x20, #8]
  412464:	mov	x0, x19
  412468:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  41246c:	add	x1, x1, #0xe41
  412470:	bl	402cb0 <fprintf@plt>
  412474:	ldr	w2, [x20, #16]
  412478:	mov	x0, x19
  41247c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412480:	add	x1, x1, #0xe4d
  412484:	bl	402cb0 <fprintf@plt>
  412488:	ldrb	w2, [x20, #6]
  41248c:	mov	x0, x19
  412490:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412494:	add	x1, x1, #0xe65
  412498:	bl	402cb0 <fprintf@plt>
  41249c:	ldrb	w0, [x20, #7]
  4124a0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4124a4:	ldrb	w2, [x20, #6]
  4124a8:	add	x1, x1, #0xe82
  4124ac:	sub	w2, w2, w0
  4124b0:	mov	x0, x19
  4124b4:	bl	402cb0 <fprintf@plt>
  4124b8:	ldrb	w2, [x20, #7]
  4124bc:	mov	x0, x19
  4124c0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4124c4:	add	x1, x1, #0xe95
  4124c8:	bl	402cb0 <fprintf@plt>
  4124cc:	ldrb	w2, [x20, #4]
  4124d0:	cmp	w2, #0x4
  4124d4:	b.hi	4125a8 <nftw@plt+0xf8b8>  // b.pmore
  4124d8:	and	x1, x2, #0xff
  4124dc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4124e0:	add	x0, x0, #0x2f8
  4124e4:	ldr	x3, [x0, x1, lsl #3]
  4124e8:	mov	x0, x19
  4124ec:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4124f0:	add	x1, x1, #0xea7
  4124f4:	bl	402cb0 <fprintf@plt>
  4124f8:	ldr	x0, [x28, #2320]
  4124fc:	mov	x1, x20
  412500:	bl	425bc8 <nftw@plt+0x22ed8>
  412504:	mov	x21, x0
  412508:	ldr	w2, [x20, #20]
  41250c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412510:	mov	x0, x19
  412514:	add	x1, x1, #0xeba
  412518:	bl	402cb0 <fprintf@plt>
  41251c:	cbz	x21, 41254c <nftw@plt+0xf85c>
  412520:	ldr	x0, [x28, #2320]
  412524:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412528:	add	x1, x1, #0xed7
  41252c:	ldr	x2, [x0]
  412530:	mov	x0, x19
  412534:	sub	x21, x21, x2
  412538:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41253c:	movk	x2, #0xaaab
  412540:	asr	x21, x21, #3
  412544:	mul	w2, w21, w2
  412548:	bl	402cb0 <fprintf@plt>
  41254c:	mov	x1, x19
  412550:	mov	w0, #0xa                   	// #10
  412554:	bl	402710 <fputc@plt>
  412558:	ldr	w22, [x27, x22]
  41255c:	mov	w27, #0x1                   	// #1
  412560:	cmp	w22, w24
  412564:	b.cs	412704 <nftw@plt+0xfa14>  // b.hs, b.nlast
  412568:	ldr	x0, [x25]
  41256c:	mov	w1, w22
  412570:	bl	426674 <nftw@plt+0x23984>
  412574:	tst	w0, #0xff
  412578:	b.ne	4125b4 <nftw@plt+0xf8c4>  // b.any
  41257c:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412580:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412584:	add	x2, x2, #0xeed
  412588:	add	x0, x0, #0xa22
  41258c:	mov	w1, #0x454                 	// #1108
  412590:	bl	402d60 <nftw@plt+0x70>
  412594:	add	w0, w23, #0x1
  412598:	mov	w1, #0x18                  	// #24
  41259c:	smull	x0, w0, w1
  4125a0:	ldr	w24, [x27, x0]
  4125a4:	b	412428 <nftw@plt+0xf738>
  4125a8:	adrp	x3, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4125ac:	add	x3, x3, #0xe14
  4125b0:	b	4124e8 <nftw@plt+0xf7f8>
  4125b4:	ldr	x0, [x25]
  4125b8:	add	x8, sp, #0x70
  4125bc:	mov	w2, w22
  4125c0:	mov	x1, x20
  4125c4:	bl	426f10 <nftw@plt+0x24220>
  4125c8:	ldr	w0, [sp, #124]
  4125cc:	cbnz	w0, 4126f4 <nftw@plt+0xfa04>
  4125d0:	ldr	x26, [sp, #112]
  4125d4:	ldr	w28, [sp, #120]
  4125d8:	mov	x0, x26
  4125dc:	mov	w1, w28
  4125e0:	bl	412230 <nftw@plt+0xf540>
  4125e4:	mov	x6, x0
  4125e8:	mov	x21, x1
  4125ec:	cbz	x0, 412704 <nftw@plt+0xfa14>
  4125f0:	mov	w5, w1
  4125f4:	mov	w4, w22
  4125f8:	ldr	x1, [sp, #96]
  4125fc:	mov	w3, w28
  412600:	mov	x2, x26
  412604:	mov	x0, x19
  412608:	bl	402cb0 <fprintf@plt>
  41260c:	ldrb	w0, [x20, #6]
  412610:	lsl	w0, w27, w0
  412614:	sub	w0, w0, #0x1
  412618:	sxtw	x4, w0
  41261c:	cmp	x21, w0, sxtw
  412620:	b.cs	412628 <nftw@plt+0xf938>  // b.hs, b.nlast
  412624:	add	x4, x21, #0x1
  412628:	mov	w0, w28
  41262c:	str	x4, [sp, #104]
  412630:	bl	408790 <nftw@plt+0x5aa0>
  412634:	mov	w21, w0
  412638:	mov	w0, w22
  41263c:	bl	408790 <nftw@plt+0x5aa0>
  412640:	mov	w28, w0
  412644:	mov	x0, x26
  412648:	bl	402630 <strlen@plt>
  41264c:	add	w0, w0, #0x6
  412650:	cmp	w21, #0x3
  412654:	mov	w1, #0x3                   	// #3
  412658:	csel	w21, w21, w1, ge  // ge = tcont
  41265c:	cmp	w28, #0x5
  412660:	ldr	x4, [sp, #104]
  412664:	mov	w2, #0x5                   	// #5
  412668:	csel	w1, w28, w2, ge  // ge = tcont
  41266c:	cmp	w24, #0x3e7
  412670:	add	w21, w21, w1
  412674:	mov	w28, w4
  412678:	add	w21, w21, w0
  41267c:	b.ls	412698 <nftw@plt+0xf9a8>  // b.plast
  412680:	mov	w3, w22
  412684:	mov	x2, x20
  412688:	mov	w1, w21
  41268c:	mov	x0, x19
  412690:	mov	w5, #0x3e8                 	// #1000
  412694:	bl	411250 <nftw@plt+0xe560>
  412698:	cmp	w24, #0x63
  41269c:	b.ls	4126bc <nftw@plt+0xf9cc>  // b.plast
  4126a0:	mov	w4, w28
  4126a4:	mov	w3, w22
  4126a8:	mov	x2, x20
  4126ac:	mov	w1, w21
  4126b0:	mov	x0, x19
  4126b4:	mov	w5, #0x64                  	// #100
  4126b8:	bl	411250 <nftw@plt+0xe560>
  4126bc:	mov	w4, w28
  4126c0:	mov	w3, w22
  4126c4:	mov	x2, x20
  4126c8:	mov	w1, w21
  4126cc:	mov	x0, x19
  4126d0:	mov	w5, #0xa                   	// #10
  4126d4:	bl	411250 <nftw@plt+0xe560>
  4126d8:	mov	w4, w28
  4126dc:	mov	w3, w22
  4126e0:	mov	x2, x20
  4126e4:	mov	w1, w21
  4126e8:	mov	x0, x19
  4126ec:	mov	w5, #0x1                   	// #1
  4126f0:	bl	411250 <nftw@plt+0xe560>
  4126f4:	ldrb	w0, [x20, #7]
  4126f8:	lsl	w0, w27, w0
  4126fc:	add	w22, w22, w0
  412700:	b	412560 <nftw@plt+0xf870>
  412704:	mov	x1, x19
  412708:	mov	w0, #0xa                   	// #10
  41270c:	add	w23, w23, #0x1
  412710:	bl	402710 <fputc@plt>
  412714:	b	4123fc <nftw@plt+0xf70c>
  412718:	mov	x0, x20
  41271c:	bl	412f84 <nftw@plt+0x10294>
  412720:	ldr	w2, [x20, #56]
  412724:	mov	w3, w0
  412728:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  41272c:	adrp	x24, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412730:	adrp	x26, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412734:	add	x1, x1, #0xf15
  412738:	mov	x0, x19
  41273c:	add	x24, x24, #0xf2b
  412740:	add	x26, x26, #0xf93
  412744:	mov	w23, #0x0                   	// #0
  412748:	bl	4113ec <nftw@plt+0xe6fc>
  41274c:	ldr	x0, [x25]
  412750:	ldr	w20, [x0, #36]
  412754:	cmp	w23, w20
  412758:	b.cs	4128bc <nftw@plt+0xfbcc>  // b.hs, b.nlast
  41275c:	sub	w20, w20, #0x1
  412760:	sub	w20, w20, w23
  412764:	ldr	x27, [x0, #24]
  412768:	sbfiz	x21, x20, #5, #32
  41276c:	add	x22, x27, x21
  412770:	mov	x0, x22
  412774:	bl	4262ac <nftw@plt+0x235bc>
  412778:	mov	w2, w20
  41277c:	mov	x3, x0
  412780:	ldr	w4, [x22, #4]
  412784:	mov	x1, x24
  412788:	mov	x0, x19
  41278c:	mov	w20, #0x0                   	// #0
  412790:	bl	402cb0 <fprintf@plt>
  412794:	ldr	w2, [x27, x21]
  412798:	mov	x0, x19
  41279c:	ldr	w3, [x22, #4]
  4127a0:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4127a4:	add	x1, x1, #0xa38
  4127a8:	add	w3, w2, w3
  4127ac:	bl	402cb0 <fprintf@plt>
  4127b0:	ldr	w2, [x22, #24]
  4127b4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4127b8:	add	x1, x1, #0xf45
  4127bc:	mov	w0, w2
  4127c0:	bl	407c24 <nftw@plt+0x4f34>
  4127c4:	ldr	w2, [x27, x21]
  4127c8:	adrp	x27, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4127cc:	add	x27, x27, #0x2
  4127d0:	mov	x0, x19
  4127d4:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4127d8:	add	x1, x1, #0xf64
  4127dc:	bl	402cb0 <fprintf@plt>
  4127e0:	mov	x1, x19
  4127e4:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4127e8:	add	x0, x0, #0xf7f
  4127ec:	bl	402640 <fputs@plt>
  4127f0:	ldr	w0, [x22, #4]
  4127f4:	cmp	w20, w0
  4127f8:	b.cs	4128a8 <nftw@plt+0xfbb8>  // b.hs, b.nlast
  4127fc:	lsl	w0, w20, #1
  412800:	ubfiz	x2, x20, #3, #31
  412804:	ldr	x1, [x22, #16]
  412808:	add	w0, w0, #0x1
  41280c:	ldr	w21, [x1, x2]
  412810:	mov	w2, w20
  412814:	ldr	w28, [x1, x0, lsl #2]
  412818:	mov	x1, x26
  41281c:	mov	w3, w21
  412820:	mov	x0, x19
  412824:	mov	w4, w28
  412828:	bl	402cb0 <fprintf@plt>
  41282c:	cmp	w21, w28
  412830:	b.ne	41287c <nftw@plt+0xfb8c>  // b.any
  412834:	ldr	w3, [x22]
  412838:	cmp	w21, w3
  41283c:	b.cs	41285c <nftw@plt+0xfb6c>  // b.hs, b.nlast
  412840:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412844:	mov	w3, w21
  412848:	mov	w2, w20
  41284c:	add	x1, x1, #0xfa3
  412850:	mov	w0, w21
  412854:	bl	407c24 <nftw@plt+0x4f34>
  412858:	b	412874 <nftw@plt+0xfb84>
  41285c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412860:	sub	w3, w21, w3
  412864:	mov	w2, w21
  412868:	add	x1, x1, #0xfcf
  41286c:	mov	x0, x19
  412870:	bl	402cb0 <fprintf@plt>
  412874:	add	w20, w20, #0x1
  412878:	b	4127f0 <nftw@plt+0xfb00>
  41287c:	mov	w3, w21
  412880:	mov	w2, w20
  412884:	mov	x1, x27
  412888:	mov	w0, w21
  41288c:	bl	407c24 <nftw@plt+0x4f34>
  412890:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412894:	mov	w3, w28
  412898:	add	x1, x0, #0x20
  41289c:	mov	w2, w20
  4128a0:	mov	w0, w21
  4128a4:	b	412854 <nftw@plt+0xfb64>
  4128a8:	mov	x1, x19
  4128ac:	mov	w0, #0xa                   	// #10
  4128b0:	add	w23, w23, #0x1
  4128b4:	bl	402710 <fputc@plt>
  4128b8:	b	41274c <nftw@plt+0xfa5c>
  4128bc:	mov	x0, x19
  4128c0:	mov	w3, #0x80000000            	// #-2147483648
  4128c4:	mov	w2, #0x7fffffff            	// #2147483647
  4128c8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4128cc:	add	x1, x1, #0x3e
  4128d0:	bl	4113ec <nftw@plt+0xe6fc>
  4128d4:	mov	x0, x19
  4128d8:	mov	w3, #0xffffffff            	// #-1
  4128dc:	ldp	x19, x20, [sp, #16]
  4128e0:	mov	w2, #0x80000000            	// #-2147483648
  4128e4:	ldp	x21, x22, [sp, #32]
  4128e8:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4128ec:	ldp	x23, x24, [sp, #48]
  4128f0:	add	x1, x1, #0x4d
  4128f4:	ldp	x25, x26, [sp, #64]
  4128f8:	ldp	x27, x28, [sp, #80]
  4128fc:	ldp	x29, x30, [sp], #144
  412900:	b	4113ec <nftw@plt+0xe6fc>
  412904:	stp	x29, x30, [sp, #-272]!
  412908:	mov	x29, sp
  41290c:	stp	x19, x20, [sp, #16]
  412910:	stp	x21, x22, [sp, #32]
  412914:	stp	x23, x24, [sp, #48]
  412918:	stp	x25, x26, [sp, #64]
  41291c:	stp	x27, x28, [sp, #80]
  412920:	stp	w4, w5, [sp, #104]
  412924:	str	w3, [sp, #120]
  412928:	cbnz	x7, 412944 <nftw@plt+0xfc54>
  41292c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412930:	add	x2, x2, #0x260
  412934:	mov	w1, #0x5fa                 	// #1530
  412938:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  41293c:	add	x0, x0, #0xa22
  412940:	bl	402d60 <nftw@plt+0x70>
  412944:	mov	w19, w2
  412948:	mov	x22, x0
  41294c:	mov	x20, x1
  412950:	mov	w21, w6
  412954:	mov	x26, x7
  412958:	add	x0, sp, #0xb0
  41295c:	bl	414de8 <nftw@plt+0x120f8>
  412960:	str	w19, [sp, #128]
  412964:	cbnz	x22, 412978 <nftw@plt+0xfc88>
  412968:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  41296c:	mov	w1, #0x551                 	// #1361
  412970:	add	x2, x2, #0x27b
  412974:	b	412938 <nftw@plt+0xfc48>
  412978:	cbz	w19, 412dd4 <nftw@plt+0x100e4>
  41297c:	mov	x0, x22
  412980:	bl	41b230 <nftw@plt+0x18540>
  412984:	ldrb	w0, [x0, #45]
  412988:	cmp	w0, #0x2
  41298c:	b.ne	412de0 <nftw@plt+0x100f0>  // b.any
  412990:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  412994:	ldr	x0, [x19, #2320]
  412998:	ldrb	w0, [x0, #116]
  41299c:	cbnz	w0, 412dec <nftw@plt+0x100fc>
  4129a0:	mov	w0, #0x1                   	// #1
  4129a4:	str	w0, [sp, #132]
  4129a8:	add	x0, sp, #0x80
  4129ac:	str	x0, [sp, #136]
  4129b0:	cbz	x20, 4129c8 <nftw@plt+0xfcd8>
  4129b4:	ldr	w1, [sp, #128]
  4129b8:	add	x3, sp, #0x88
  4129bc:	add	x2, sp, #0x84
  4129c0:	mov	x0, x20
  4129c4:	bl	411f64 <nftw@plt+0xf274>
  4129c8:	ldrsw	x1, [sp, #132]
  4129cc:	str	xzr, [sp, #144]
  4129d0:	cbz	w1, 4129e0 <nftw@plt+0xfcf0>
  4129d4:	add	x0, sp, #0x90
  4129d8:	mov	w2, #0x1                   	// #1
  4129dc:	bl	413110 <nftw@plt+0x10420>
  4129e0:	ldrsw	x1, [sp, #132]
  4129e4:	str	xzr, [sp, #152]
  4129e8:	cbz	w1, 4129f8 <nftw@plt+0xfd08>
  4129ec:	add	x0, sp, #0x98
  4129f0:	mov	w2, #0x1                   	// #1
  4129f4:	bl	413200 <nftw@plt+0x10510>
  4129f8:	mov	x24, #0x0                   	// #0
  4129fc:	ldr	w3, [sp, #132]
  412a00:	cmp	w3, w24
  412a04:	b.le	412ce8 <nftw@plt+0xfff8>
  412a08:	ldr	x0, [sp, #136]
  412a0c:	ldr	w1, [x0, x24, lsl #2]
  412a10:	ldr	x0, [x19, #2320]
  412a14:	bl	4265d4 <nftw@plt+0x238e4>
  412a18:	mov	x20, x0
  412a1c:	lsr	x25, x0, #32
  412a20:	ldr	x0, [x19, #2320]
  412a24:	bl	412f84 <nftw@plt+0x10294>
  412a28:	cmp	w0, w20
  412a2c:	b.hi	412a84 <nftw@plt+0xfd94>  // b.pmore
  412a30:	cmp	w20, w25
  412a34:	b.eq	412a98 <nftw@plt+0xfda8>  // b.none
  412a38:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x19fa8>
  412a3c:	add	x19, x19, #0xd14
  412a40:	ldr	x0, [sp, #152]
  412a44:	cbz	x0, 412a54 <nftw@plt+0xfd64>
  412a48:	ldrsb	w1, [x0, #3]
  412a4c:	tbz	w1, #31, 412d1c <nftw@plt+0x1002c>
  412a50:	str	wzr, [x0, #4]
  412a54:	mov	w20, #0x0                   	// #0
  412a58:	ldr	x0, [sp, #144]
  412a5c:	cbz	x0, 412d30 <nftw@plt+0x10040>
  412a60:	ldr	w1, [x0, #4]
  412a64:	cmp	w1, w20
  412a68:	b.ls	412d24 <nftw@plt+0x10034>  // b.plast
  412a6c:	ubfiz	x1, x20, #4, #32
  412a70:	add	w20, w20, #0x1
  412a74:	add	x0, x0, x1
  412a78:	ldr	x0, [x0, #16]
  412a7c:	bl	402a80 <free@plt>
  412a80:	b	412a58 <nftw@plt+0xfd68>
  412a84:	mov	w0, #0x5fffffff            	// #1610612735
  412a88:	cmp	w20, w0
  412a8c:	b.hi	412c70 <nftw@plt+0xff80>  // b.pmore
  412a90:	cmp	w25, w0
  412a94:	b.hi	412c7c <nftw@plt+0xff8c>  // b.pmore
  412a98:	add	x8, sp, #0xd0
  412a9c:	mov	w0, w20
  412aa0:	mov	w1, #0x1                   	// #1
  412aa4:	bl	4117e4 <nftw@plt+0xeaf4>
  412aa8:	mov	w0, w25
  412aac:	add	x8, sp, #0xf0
  412ab0:	ldp	w27, w23, [sp, #216]
  412ab4:	mov	w1, #0x2                   	// #2
  412ab8:	ldr	x28, [sp, #208]
  412abc:	bl	4117e4 <nftw@plt+0xeaf4>
  412ac0:	ldr	x0, [sp, #240]
  412ac4:	ldr	w3, [sp, #252]
  412ac8:	cmp	x28, x0
  412acc:	b.ne	412c88 <nftw@plt+0xff98>  // b.any
  412ad0:	ldr	w0, [sp, #248]
  412ad4:	cmp	w27, w0
  412ad8:	b.ne	412c94 <nftw@plt+0xffa4>  // b.any
  412adc:	str	w3, [sp, #112]
  412ae0:	cmp	w23, w3
  412ae4:	b.gt	412ca0 <nftw@plt+0xffb0>
  412ae8:	mov	w1, w27
  412aec:	mov	x0, x28
  412af0:	bl	412230 <nftw@plt+0xf540>
  412af4:	mov	x4, x1
  412af8:	cbz	x0, 412cac <nftw@plt+0xffbc>
  412afc:	ldr	w3, [sp, #112]
  412b00:	sub	w2, w23, #0x1
  412b04:	sub	w3, w3, w23
  412b08:	sxtw	x5, w2
  412b0c:	add	w3, w3, #0x1
  412b10:	add	x6, x5, w3, sxtw
  412b14:	sxtw	x1, w3
  412b18:	cmp	x4, x6
  412b1c:	b.cc	412cb8 <nftw@plt+0xffc8>  // b.lo, b.ul, b.last
  412b20:	tbz	w2, #31, 412b3c <nftw@plt+0xfe4c>
  412b24:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412b28:	add	x2, x2, #0x638
  412b2c:	mov	w1, #0x44                  	// #68
  412b30:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412b34:	add	x0, x0, #0x640
  412b38:	b	412940 <nftw@plt+0xfc50>
  412b3c:	cmp	w2, w4
  412b40:	b.lt	412b54 <nftw@plt+0xfe64>  // b.tstop
  412b44:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412b48:	mov	w1, #0x45                  	// #69
  412b4c:	add	x2, x2, #0x638
  412b50:	b	412b30 <nftw@plt+0xfe40>
  412b54:	add	w2, w3, w2
  412b58:	cmp	w4, w2
  412b5c:	b.ge	412b70 <nftw@plt+0xfe80>  // b.tcont
  412b60:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412b64:	mov	w1, #0x47                  	// #71
  412b68:	add	x2, x2, #0x638
  412b6c:	b	412b30 <nftw@plt+0xfe40>
  412b70:	add	x0, x0, x5
  412b74:	str	w3, [sp, #124]
  412b78:	bl	43d2f4 <_obstack_memory_used@@Base+0x29c>
  412b7c:	mov	x4, x0
  412b80:	mov	w2, #0x0                   	// #0
  412b84:	mov	w1, #0x1                   	// #1
  412b88:	add	x0, sp, #0x90
  412b8c:	str	x4, [sp, #112]
  412b90:	bl	413110 <nftw@plt+0x10420>
  412b94:	ldr	x2, [sp, #144]
  412b98:	ldr	w3, [sp, #124]
  412b9c:	ldr	x4, [sp, #112]
  412ba0:	ldr	w1, [x2, #4]
  412ba4:	add	w0, w1, #0x1
  412ba8:	str	w0, [x2, #4]
  412bac:	mov	x0, #0x8                   	// #8
  412bb0:	add	x1, x0, w1, uxtw #4
  412bb4:	add	x0, x2, x1
  412bb8:	str	w3, [x2, x1]
  412bbc:	add	x3, sp, #0xa0
  412bc0:	str	x4, [x0, #8]
  412bc4:	mov	w1, w20
  412bc8:	ldr	x0, [x19, #2320]
  412bcc:	mov	w2, #0x1                   	// #1
  412bd0:	bl	4268c8 <nftw@plt+0x23bd8>
  412bd4:	ldr	x0, [x19, #2320]
  412bd8:	add	x3, sp, #0xa8
  412bdc:	mov	w1, w25
  412be0:	mov	w2, #0x1                   	// #1
  412be4:	bl	4268c8 <nftw@plt+0x23bd8>
  412be8:	ldr	x0, [sp, #160]
  412bec:	cbz	x0, 412cc4 <nftw@plt+0xffd4>
  412bf0:	ldr	x1, [sp, #168]
  412bf4:	cbz	x1, 412cc4 <nftw@plt+0xffd4>
  412bf8:	cmp	x0, x1
  412bfc:	ldr	x2, [x0, #8]
  412c00:	b.eq	412c10 <nftw@plt+0xff20>  // b.none
  412c04:	ldr	x0, [x1, #8]
  412c08:	cmp	x0, x2
  412c0c:	b.ne	412cd0 <nftw@plt+0xffe0>  // b.any
  412c10:	add	x24, x24, #0x1
  412c14:	cmp	x28, x2
  412c18:	b.ne	412cdc <nftw@plt+0xffec>  // b.any
  412c1c:	ldr	x0, [x19, #2320]
  412c20:	mov	w3, w23
  412c24:	mov	w2, w27
  412c28:	bl	4261bc <nftw@plt+0x234cc>
  412c2c:	mov	w1, w0
  412c30:	ldr	x2, [x19, #2320]
  412c34:	add	x0, sp, #0xc0
  412c38:	bl	415160 <nftw@plt+0x12470>
  412c3c:	mov	w2, #0x0                   	// #0
  412c40:	mov	w1, #0x1                   	// #1
  412c44:	add	x0, sp, #0x98
  412c48:	bl	413200 <nftw@plt+0x10510>
  412c4c:	ldr	x0, [sp, #152]
  412c50:	ldr	w1, [x0, #4]
  412c54:	add	w2, w1, #0x1
  412c58:	str	w2, [x0, #4]
  412c5c:	ubfiz	x1, x1, #4, #32
  412c60:	add	x0, x0, x1
  412c64:	ldp	x2, x3, [sp, #192]
  412c68:	stp	x2, x3, [x0, #8]
  412c6c:	b	4129fc <nftw@plt+0xfd0c>
  412c70:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412c74:	add	x19, x19, #0xcd
  412c78:	b	412a40 <nftw@plt+0xfd50>
  412c7c:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412c80:	add	x19, x19, #0x100
  412c84:	b	412a40 <nftw@plt+0xfd50>
  412c88:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412c8c:	add	x19, x19, #0x131
  412c90:	b	412a40 <nftw@plt+0xfd50>
  412c94:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412c98:	add	x19, x19, #0x158
  412c9c:	b	412a40 <nftw@plt+0xfd50>
  412ca0:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412ca4:	add	x19, x19, #0x17f
  412ca8:	b	412a40 <nftw@plt+0xfd50>
  412cac:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412cb0:	add	x19, x19, #0x7a
  412cb4:	b	412a40 <nftw@plt+0xfd50>
  412cb8:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412cbc:	add	x19, x19, #0x19c
  412cc0:	b	412a40 <nftw@plt+0xfd50>
  412cc4:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412cc8:	add	x19, x19, #0x5e
  412ccc:	b	412a40 <nftw@plt+0xfd50>
  412cd0:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412cd4:	add	x19, x19, #0x95
  412cd8:	b	412a40 <nftw@plt+0xfd50>
  412cdc:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412ce0:	add	x19, x19, #0x1b4
  412ce4:	b	412a40 <nftw@plt+0xfd50>
  412ce8:	ldr	x1, [sp, #144]
  412cec:	cbz	x1, 412cf4 <nftw@plt+0x10004>
  412cf0:	add	x1, x1, #0x8
  412cf4:	ldr	x2, [sp, #152]
  412cf8:	cbz	x2, 412d00 <nftw@plt+0x10010>
  412cfc:	add	x2, x2, #0x8
  412d00:	ldr	w5, [sp, #120]
  412d04:	add	x4, sp, #0xb0
  412d08:	sxtw	x3, w3
  412d0c:	mov	x0, x22
  412d10:	bl	418818 <nftw@plt+0x15b28>
  412d14:	mov	x19, x0
  412d18:	b	412a40 <nftw@plt+0xfd50>
  412d1c:	bl	402a80 <free@plt>
  412d20:	b	412a54 <nftw@plt+0xfd64>
  412d24:	ldrsb	w1, [x0, #3]
  412d28:	tbz	w1, #31, 412da8 <nftw@plt+0x100b8>
  412d2c:	str	wzr, [x0, #4]
  412d30:	cbnz	x19, 412d80 <nftw@plt+0x10090>
  412d34:	ldr	w1, [sp, #104]
  412d38:	ldr	w0, [sp, #184]
  412d3c:	cmp	w1, w0
  412d40:	b.ge	412db0 <nftw@plt+0x100c0>  // b.tcont
  412d44:	ldr	w1, [sp, #108]
  412d48:	cmp	w1, w0
  412d4c:	b.ge	412dbc <nftw@plt+0x100cc>  // b.tcont
  412d50:	cmp	w21, w0
  412d54:	b.ge	412dc8 <nftw@plt+0x100d8>  // b.tcont
  412d58:	ldr	x0, [sp, #176]
  412d5c:	sbfiz	x5, x1, #3, #32
  412d60:	ldr	w1, [sp, #104]
  412d64:	add	x21, x0, w21, sxtw #3
  412d68:	sbfiz	x4, x1, #3, #32
  412d6c:	ldr	w1, [x0, x5]
  412d70:	ldr	w2, [x21, #4]
  412d74:	ldr	w0, [x0, x4]
  412d78:	bl	41187c <nftw@plt+0xeb8c>
  412d7c:	str	w0, [x26]
  412d80:	add	x0, sp, #0xb0
  412d84:	bl	414e18 <nftw@plt+0x12128>
  412d88:	mov	x0, x19
  412d8c:	ldp	x19, x20, [sp, #16]
  412d90:	ldp	x21, x22, [sp, #32]
  412d94:	ldp	x23, x24, [sp, #48]
  412d98:	ldp	x25, x26, [sp, #64]
  412d9c:	ldp	x27, x28, [sp, #80]
  412da0:	ldp	x29, x30, [sp], #272
  412da4:	ret
  412da8:	bl	402a80 <free@plt>
  412dac:	b	412d30 <nftw@plt+0x10040>
  412db0:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412db4:	add	x19, x19, #0x1dd
  412db8:	b	412d80 <nftw@plt+0x10090>
  412dbc:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412dc0:	add	x19, x19, #0x1f4
  412dc4:	b	412d80 <nftw@plt+0x10090>
  412dc8:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412dcc:	add	x19, x19, #0x20b
  412dd0:	b	412d80 <nftw@plt+0x10090>
  412dd4:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412dd8:	add	x19, x19, #0x220
  412ddc:	b	412d80 <nftw@plt+0x10090>
  412de0:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412de4:	add	x19, x19, #0x231
  412de8:	b	412d80 <nftw@plt+0x10090>
  412dec:	adrp	x19, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412df0:	add	x19, x19, #0x24c
  412df4:	b	412d80 <nftw@plt+0x10090>
  412df8:	stp	x29, x30, [sp, #-64]!
  412dfc:	cmp	w1, #0x1
  412e00:	mov	x29, sp
  412e04:	stp	x19, x20, [sp, #16]
  412e08:	stp	x21, x22, [sp, #32]
  412e0c:	stp	x23, x24, [sp, #48]
  412e10:	b.gt	412e2c <nftw@plt+0x1013c>
  412e14:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412e18:	add	x2, x2, #0x298
  412e1c:	mov	w1, #0x4f6                 	// #1270
  412e20:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  412e24:	add	x0, x0, #0xa22
  412e28:	bl	402d60 <nftw@plt+0x70>
  412e2c:	mov	x19, x2
  412e30:	cbnz	x2, 412e44 <nftw@plt+0x10154>
  412e34:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  412e38:	mov	w1, #0x4f7                 	// #1271
  412e3c:	add	x2, x2, #0x298
  412e40:	b	412e20 <nftw@plt+0x10130>
  412e44:	mov	x22, x0
  412e48:	ldr	w0, [x2]
  412e4c:	mov	w20, w1
  412e50:	bl	411f28 <nftw@plt+0xf238>
  412e54:	mov	w21, w0
  412e58:	mov	x3, #0x1                   	// #1
  412e5c:	mov	x2, #0x0                   	// #0
  412e60:	mov	x1, #0x0                   	// #0
  412e64:	mov	x0, #0x10                  	// #16
  412e68:	bl	4137f8 <nftw@plt+0x10b08>
  412e6c:	mov	x23, x0
  412e70:	mov	w1, w20
  412e74:	mov	x2, x19
  412e78:	bl	411e38 <nftw@plt+0xf148>
  412e7c:	ldr	x20, [x22]
  412e80:	ldp	x1, x0, [x20, #8]
  412e84:	add	x1, x1, x1, lsl #1
  412e88:	cmp	x1, x0, lsl #2
  412e8c:	b.hi	412e98 <nftw@plt+0x101a8>  // b.pmore
  412e90:	mov	x0, x20
  412e94:	bl	4132f0 <nftw@plt+0x10600>
  412e98:	ldr	w0, [x20, #32]
  412e9c:	ldr	w24, [x20, #40]
  412ea0:	add	w0, w0, #0x1
  412ea4:	str	w0, [x20, #32]
  412ea8:	mov	w1, w24
  412eac:	mov	w0, w21
  412eb0:	bl	40fef0 <nftw@plt+0xd200>
  412eb4:	mov	w19, w0
  412eb8:	ldr	x22, [x20]
  412ebc:	ubfiz	x0, x19, #4, #32
  412ec0:	add	x2, x22, x0
  412ec4:	ldr	w0, [x22, x0]
  412ec8:	cbz	w0, 412f3c <nftw@plt+0x1024c>
  412ecc:	cmp	w21, w0
  412ed0:	b.eq	412f18 <nftw@plt+0x10228>  // b.none
  412ed4:	mov	w1, w24
  412ed8:	mov	w0, w21
  412edc:	bl	40ff28 <nftw@plt+0xd238>
  412ee0:	ldr	x3, [x20, #8]
  412ee4:	add	w19, w19, w0
  412ee8:	ldr	w1, [x20, #36]
  412eec:	cmp	x3, w19, uxtw
  412ef0:	add	w1, w1, #0x1
  412ef4:	str	w1, [x20, #36]
  412ef8:	b.hi	412f00 <nftw@plt+0x10210>  // b.pmore
  412efc:	sub	w19, w19, w3
  412f00:	ubfiz	x1, x19, #4, #32
  412f04:	add	x2, x22, x1
  412f08:	ldr	w1, [x22, x1]
  412f0c:	cbz	w1, 412f3c <nftw@plt+0x1024c>
  412f10:	cmp	w21, w1
  412f14:	b.ne	412ee4 <nftw@plt+0x101f4>  // b.any
  412f18:	ldr	w0, [x2]
  412f1c:	cbnz	w0, 412f24 <nftw@plt+0x10234>
  412f20:	str	w21, [x2]
  412f24:	ldp	x19, x20, [sp, #16]
  412f28:	ldp	x21, x22, [sp, #32]
  412f2c:	str	x23, [x2, #8]
  412f30:	ldp	x23, x24, [sp, #48]
  412f34:	ldp	x29, x30, [sp], #64
  412f38:	ret
  412f3c:	ldr	x0, [x20, #16]
  412f40:	ubfiz	x19, x19, #4, #32
  412f44:	add	x2, x22, x19
  412f48:	add	x0, x0, #0x1
  412f4c:	str	x0, [x20, #16]
  412f50:	b	412f18 <nftw@plt+0x10228>
  412f54:	ldr	x2, [x0, #8]
  412f58:	mov	x1, x0
  412f5c:	sub	x0, x2, #0x1
  412f60:	cmp	x2, x0
  412f64:	b.ls	412f70 <nftw@plt+0x10280>  // b.plast
  412f68:	sub	x0, x0, #0x1
  412f6c:	b	412f60 <nftw@plt+0x10270>
  412f70:	ldr	x0, [x1]
  412f74:	ldrb	w1, [x1, #44]
  412f78:	cbnz	w1, 412f80 <nftw@plt+0x10290>
  412f7c:	b	402a80 <free@plt>
  412f80:	b	413850 <nftw@plt+0x10b60>
  412f84:	ldr	w1, [x0, #36]
  412f88:	cbz	w1, 412fa0 <nftw@plt+0x102b0>
  412f8c:	sub	w1, w1, #0x1
  412f90:	ldr	x0, [x0, #24]
  412f94:	sbfiz	x1, x1, #5, #32
  412f98:	ldr	w0, [x0, x1]
  412f9c:	ret
  412fa0:	mov	w0, #0x80000000            	// #-2147483648
  412fa4:	b	412f9c <nftw@plt+0x102ac>
  412fa8:	stp	x29, x30, [sp, #-64]!
  412fac:	and	w2, w2, #0xff
  412fb0:	mov	x29, sp
  412fb4:	stp	x23, x24, [sp, #48]
  412fb8:	ldr	x23, [x0]
  412fbc:	stp	x19, x20, [sp, #16]
  412fc0:	mov	x20, x0
  412fc4:	stp	x21, x22, [sp, #32]
  412fc8:	cbz	x23, 412fe8 <nftw@plt+0x102f8>
  412fcc:	ldp	w0, w21, [x23]
  412fd0:	ubfx	x0, x0, #0, #31
  412fd4:	sub	w0, w0, w21
  412fd8:	cmp	w1, w0
  412fdc:	b.hi	412ff8 <nftw@plt+0x10308>  // b.pmore
  412fe0:	mov	w19, #0x0                   	// #0
  412fe4:	b	41308c <nftw@plt+0x1039c>
  412fe8:	mov	w19, #0x0                   	// #0
  412fec:	cbz	w1, 41308c <nftw@plt+0x1039c>
  412ff0:	mov	w21, #0x0                   	// #0
  412ff4:	b	41300c <nftw@plt+0x1031c>
  412ff8:	ldrsb	w0, [x23, #3]
  412ffc:	tbz	w0, #31, 413078 <nftw@plt+0x10388>
  413000:	add	w1, w1, w21
  413004:	mov	w19, #0x1                   	// #1
  413008:	str	xzr, [x20]
  41300c:	ldr	x0, [x20]
  413010:	bl	40b928 <nftw@plt+0x8c38>
  413014:	mov	w22, w0
  413018:	mov	w1, #0x18                  	// #24
  41301c:	mov	x0, #0x8                   	// #8
  413020:	umaddl	x1, w22, w1, x0
  413024:	ldr	x0, [x20]
  413028:	cbz	x0, 413080 <nftw@plt+0x10390>
  41302c:	ldr	w24, [x0, #4]
  413030:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  413034:	str	x0, [x20]
  413038:	and	w22, w22, #0x7fffffff
  41303c:	stp	w22, w24, [x0]
  413040:	mov	x1, x0
  413044:	cbz	w19, 4130a4 <nftw@plt+0x103b4>
  413048:	mov	w2, w21
  41304c:	mov	x0, #0x8                   	// #8
  413050:	cbz	w2, 413088 <nftw@plt+0x10398>
  413054:	add	x6, x23, x0
  413058:	add	x3, x1, x0
  41305c:	sub	w2, w2, #0x1
  413060:	add	x0, x0, #0x18
  413064:	ldp	x4, x5, [x6]
  413068:	stp	x4, x5, [x3]
  41306c:	ldr	x4, [x6, #16]
  413070:	str	x4, [x3, #16]
  413074:	b	413050 <nftw@plt+0x10360>
  413078:	mov	w19, #0x0                   	// #0
  41307c:	b	412ff0 <nftw@plt+0x10300>
  413080:	mov	w24, #0x0                   	// #0
  413084:	b	413030 <nftw@plt+0x10340>
  413088:	str	w21, [x1, #4]
  41308c:	mov	w0, w19
  413090:	ldp	x19, x20, [sp, #16]
  413094:	ldp	x21, x22, [sp, #32]
  413098:	ldp	x23, x24, [sp, #48]
  41309c:	ldp	x29, x30, [sp], #64
  4130a0:	ret
  4130a4:	mov	w19, #0x1                   	// #1
  4130a8:	b	41308c <nftw@plt+0x1039c>
  4130ac:	stp	x29, x30, [sp, #-32]!
  4130b0:	mov	w2, #0x0                   	// #0
  4130b4:	mov	x29, sp
  4130b8:	stp	x19, x20, [sp, #16]
  4130bc:	mov	x20, x0
  4130c0:	mov	x19, x1
  4130c4:	mov	w1, #0x1                   	// #1
  4130c8:	bl	412fa8 <nftw@plt+0x102b8>
  4130cc:	ldr	x0, [x20]
  4130d0:	ldp	x4, x5, [x19]
  4130d4:	ldr	w2, [x0, #4]
  4130d8:	add	w1, w2, #0x1
  4130dc:	mov	w3, w2
  4130e0:	str	w1, [x0, #4]
  4130e4:	mov	x1, #0x18                  	// #24
  4130e8:	madd	x3, x3, x1, x0
  4130ec:	stp	x4, x5, [x3, #8]
  4130f0:	ldr	x4, [x19, #16]
  4130f4:	ldp	x19, x20, [sp, #16]
  4130f8:	str	x4, [x3, #24]
  4130fc:	mov	x3, #0x8                   	// #8
  413100:	ldp	x29, x30, [sp], #32
  413104:	umaddl	x2, w2, w1, x3
  413108:	add	x0, x0, x2
  41310c:	ret
  413110:	stp	x29, x30, [sp, #-64]!
  413114:	and	w2, w2, #0xff
  413118:	mov	x29, sp
  41311c:	stp	x19, x20, [sp, #16]
  413120:	ldr	x19, [x0]
  413124:	stp	x21, x22, [sp, #32]
  413128:	mov	x21, x0
  41312c:	stp	x23, x24, [sp, #48]
  413130:	cbz	x19, 413150 <nftw@plt+0x10460>
  413134:	ldp	w0, w22, [x19]
  413138:	ubfx	x0, x0, #0, #31
  41313c:	sub	w0, w0, w22
  413140:	cmp	w1, w0
  413144:	b.hi	413160 <nftw@plt+0x10470>  // b.pmore
  413148:	mov	w20, #0x0                   	// #0
  41314c:	b	4131e0 <nftw@plt+0x104f0>
  413150:	mov	w20, #0x0                   	// #0
  413154:	cbz	w1, 4131e0 <nftw@plt+0x104f0>
  413158:	mov	w22, #0x0                   	// #0
  41315c:	b	413174 <nftw@plt+0x10484>
  413160:	ldrsb	w0, [x19, #3]
  413164:	tbz	w0, #31, 4131cc <nftw@plt+0x104dc>
  413168:	add	w1, w1, w22
  41316c:	mov	w20, #0x1                   	// #1
  413170:	str	xzr, [x21]
  413174:	ldr	x0, [x21]
  413178:	bl	40b928 <nftw@plt+0x8c38>
  41317c:	mov	w23, w0
  413180:	mov	x1, #0x8                   	// #8
  413184:	add	x1, x1, w0, uxtw #4
  413188:	ldr	x0, [x21]
  41318c:	cbz	x0, 4131d4 <nftw@plt+0x104e4>
  413190:	ldr	w24, [x0, #4]
  413194:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  413198:	str	x0, [x21]
  41319c:	and	w23, w23, #0x7fffffff
  4131a0:	stp	w23, w24, [x0]
  4131a4:	mov	x1, x0
  4131a8:	cbz	w20, 4131f8 <nftw@plt+0x10508>
  4131ac:	add	x2, x0, #0x8
  4131b0:	add	x19, x19, #0x8
  4131b4:	mov	w0, w22
  4131b8:	cbz	w0, 4131dc <nftw@plt+0x104ec>
  4131bc:	ldp	x4, x5, [x19], #16
  4131c0:	sub	w0, w0, #0x1
  4131c4:	stp	x4, x5, [x2], #16
  4131c8:	b	4131b8 <nftw@plt+0x104c8>
  4131cc:	mov	w20, #0x0                   	// #0
  4131d0:	b	413158 <nftw@plt+0x10468>
  4131d4:	mov	w24, #0x0                   	// #0
  4131d8:	b	413194 <nftw@plt+0x104a4>
  4131dc:	str	w22, [x1, #4]
  4131e0:	mov	w0, w20
  4131e4:	ldp	x19, x20, [sp, #16]
  4131e8:	ldp	x21, x22, [sp, #32]
  4131ec:	ldp	x23, x24, [sp, #48]
  4131f0:	ldp	x29, x30, [sp], #64
  4131f4:	ret
  4131f8:	mov	w20, #0x1                   	// #1
  4131fc:	b	4131e0 <nftw@plt+0x104f0>
  413200:	stp	x29, x30, [sp, #-64]!
  413204:	and	w2, w2, #0xff
  413208:	mov	x29, sp
  41320c:	stp	x19, x20, [sp, #16]
  413210:	ldr	x19, [x0]
  413214:	stp	x21, x22, [sp, #32]
  413218:	mov	x21, x0
  41321c:	stp	x23, x24, [sp, #48]
  413220:	cbz	x19, 413240 <nftw@plt+0x10550>
  413224:	ldp	w0, w22, [x19]
  413228:	ubfx	x0, x0, #0, #31
  41322c:	sub	w0, w0, w22
  413230:	cmp	w1, w0
  413234:	b.hi	413250 <nftw@plt+0x10560>  // b.pmore
  413238:	mov	w20, #0x0                   	// #0
  41323c:	b	4132d0 <nftw@plt+0x105e0>
  413240:	mov	w20, #0x0                   	// #0
  413244:	cbz	w1, 4132d0 <nftw@plt+0x105e0>
  413248:	mov	w22, #0x0                   	// #0
  41324c:	b	413264 <nftw@plt+0x10574>
  413250:	ldrsb	w0, [x19, #3]
  413254:	tbz	w0, #31, 4132bc <nftw@plt+0x105cc>
  413258:	add	w1, w1, w22
  41325c:	mov	w20, #0x1                   	// #1
  413260:	str	xzr, [x21]
  413264:	ldr	x0, [x21]
  413268:	bl	40b928 <nftw@plt+0x8c38>
  41326c:	mov	w23, w0
  413270:	mov	x1, #0x8                   	// #8
  413274:	add	x1, x1, w0, uxtw #4
  413278:	ldr	x0, [x21]
  41327c:	cbz	x0, 4132c4 <nftw@plt+0x105d4>
  413280:	ldr	w24, [x0, #4]
  413284:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  413288:	str	x0, [x21]
  41328c:	and	w23, w23, #0x7fffffff
  413290:	stp	w23, w24, [x0]
  413294:	mov	x1, x0
  413298:	cbz	w20, 4132e8 <nftw@plt+0x105f8>
  41329c:	add	x2, x0, #0x8
  4132a0:	add	x19, x19, #0x8
  4132a4:	mov	w0, w22
  4132a8:	cbz	w0, 4132cc <nftw@plt+0x105dc>
  4132ac:	ldp	x4, x5, [x19], #16
  4132b0:	sub	w0, w0, #0x1
  4132b4:	stp	x4, x5, [x2], #16
  4132b8:	b	4132a8 <nftw@plt+0x105b8>
  4132bc:	mov	w20, #0x0                   	// #0
  4132c0:	b	413248 <nftw@plt+0x10558>
  4132c4:	mov	w24, #0x0                   	// #0
  4132c8:	b	413284 <nftw@plt+0x10594>
  4132cc:	str	w22, [x1, #4]
  4132d0:	mov	w0, w20
  4132d4:	ldp	x19, x20, [sp, #16]
  4132d8:	ldp	x21, x22, [sp, #32]
  4132dc:	ldp	x23, x24, [sp, #48]
  4132e0:	ldp	x29, x30, [sp], #64
  4132e4:	ret
  4132e8:	mov	w20, #0x1                   	// #1
  4132ec:	b	4132d0 <nftw@plt+0x105e0>
  4132f0:	stp	x29, x30, [sp, #-96]!
  4132f4:	mov	x29, sp
  4132f8:	stp	x19, x20, [sp, #16]
  4132fc:	mov	x19, x0
  413300:	stp	x21, x22, [sp, #32]
  413304:	ldr	w22, [x0, #40]
  413308:	stp	x23, x24, [sp, #48]
  41330c:	ldp	x24, x20, [x0]
  413310:	stp	x25, x26, [sp, #64]
  413314:	ldp	x1, x0, [x0, #16]
  413318:	str	x27, [sp, #80]
  41331c:	add	x25, x24, x20, lsl #4
  413320:	sub	x1, x1, x0
  413324:	lsl	x0, x1, #1
  413328:	cmp	x20, x1, lsl #1
  41332c:	b.cc	413344 <nftw@plt+0x10654>  // b.lo, b.ul, b.last
  413330:	lsl	w1, w1, #3
  413334:	cmp	x20, x1
  413338:	b.ls	41335c <nftw@plt+0x1066c>  // b.plast
  41333c:	cmp	x20, #0x20
  413340:	b.ls	41335c <nftw@plt+0x1066c>  // b.plast
  413344:	bl	413434 <nftw@plt+0x10744>
  413348:	mov	w22, w0
  41334c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413350:	add	x0, x0, #0x380
  413354:	ubfiz	x1, x22, #4, #32
  413358:	ldr	w20, [x0, x1]
  41335c:	ldrb	w0, [x19, #44]
  413360:	mov	x1, x20
  413364:	mov	x26, x24
  413368:	bl	411370 <nftw@plt+0xe680>
  41336c:	mov	x23, x0
  413370:	ldp	x0, x1, [x19, #16]
  413374:	stp	x23, x20, [x19]
  413378:	str	w22, [x19, #40]
  41337c:	sub	x0, x0, x1
  413380:	stp	x0, xzr, [x19, #16]
  413384:	ldr	w27, [x26]
  413388:	cbz	w27, 4133e0 <nftw@plt+0x106f0>
  41338c:	mov	w1, w22
  413390:	mov	w0, w27
  413394:	bl	40fef0 <nftw@plt+0xd200>
  413398:	mov	w21, w0
  41339c:	ubfiz	x0, x21, #4, #32
  4133a0:	add	x2, x23, x0
  4133a4:	ldr	w0, [x23, x0]
  4133a8:	cbz	w0, 4133d8 <nftw@plt+0x106e8>
  4133ac:	mov	w1, w22
  4133b0:	mov	w0, w27
  4133b4:	bl	40ff28 <nftw@plt+0xd238>
  4133b8:	add	w21, w21, w0
  4133bc:	cmp	x20, w21, uxtw
  4133c0:	b.hi	4133c8 <nftw@plt+0x106d8>  // b.pmore
  4133c4:	sub	w21, w21, w20
  4133c8:	ubfiz	x1, x21, #4, #32
  4133cc:	add	x2, x23, x1
  4133d0:	ldr	w1, [x23, x1]
  4133d4:	cbnz	w1, 4133b8 <nftw@plt+0x106c8>
  4133d8:	ldp	x0, x1, [x26]
  4133dc:	stp	x0, x1, [x2]
  4133e0:	add	x26, x26, #0x10
  4133e4:	cmp	x25, x26
  4133e8:	b.hi	413384 <nftw@plt+0x10694>  // b.pmore
  4133ec:	ldrb	w0, [x19, #44]
  4133f0:	cbnz	w0, 413414 <nftw@plt+0x10724>
  4133f4:	mov	x0, x24
  4133f8:	ldp	x19, x20, [sp, #16]
  4133fc:	ldp	x21, x22, [sp, #32]
  413400:	ldp	x23, x24, [sp, #48]
  413404:	ldp	x25, x26, [sp, #64]
  413408:	ldr	x27, [sp, #80]
  41340c:	ldp	x29, x30, [sp], #96
  413410:	b	402a80 <free@plt>
  413414:	mov	x0, x24
  413418:	ldp	x19, x20, [sp, #16]
  41341c:	ldp	x21, x22, [sp, #32]
  413420:	ldp	x23, x24, [sp, #48]
  413424:	ldp	x25, x26, [sp, #64]
  413428:	ldr	x27, [sp, #80]
  41342c:	ldp	x29, x30, [sp], #96
  413430:	b	413850 <nftw@plt+0x10b60>
  413434:	adrp	x4, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413438:	add	x4, x4, #0x380
  41343c:	mov	x3, x0
  413440:	mov	w2, #0x0                   	// #0
  413444:	mov	w0, #0x1e                  	// #30
  413448:	cmp	w0, w2
  41344c:	b.eq	41347c <nftw@plt+0x1078c>  // b.none
  413450:	sub	w1, w0, w2
  413454:	add	w5, w2, w1, lsr #1
  413458:	add	w1, w2, w1, lsr #1
  41345c:	lsl	x1, x1, #4
  413460:	ldr	w1, [x4, x1]
  413464:	cmp	x1, x3
  413468:	b.cs	413474 <nftw@plt+0x10784>  // b.hs, b.nlast
  41346c:	add	w2, w5, #0x1
  413470:	b	413448 <nftw@plt+0x10758>
  413474:	mov	w0, w5
  413478:	b	413448 <nftw@plt+0x10758>
  41347c:	ubfiz	x1, x0, #4, #32
  413480:	ldr	w1, [x4, x1]
  413484:	cmp	x1, x3
  413488:	b.cs	4134ac <nftw@plt+0x107bc>  // b.hs, b.nlast
  41348c:	stp	x29, x30, [sp, #-16]!
  413490:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413494:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413498:	mov	x29, sp
  41349c:	add	x2, x2, #0x349
  4134a0:	add	x0, x0, #0x367
  4134a4:	mov	w1, #0x60                  	// #96
  4134a8:	bl	402d60 <nftw@plt+0x70>
  4134ac:	ret
  4134b0:	ret
  4134b4:	stp	x29, x30, [sp, #-32]!
  4134b8:	mov	x29, sp
  4134bc:	stp	x19, x20, [sp, #16]
  4134c0:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4134c4:	add	x19, x19, #0x930
  4134c8:	ldarb	w0, [x19]
  4134cc:	tbnz	w0, #0, 413508 <nftw@plt+0x10818>
  4134d0:	mov	x0, x19
  4134d4:	bl	43d670 <_obstack_memory_used@@Base+0x618>
  4134d8:	cbz	w0, 413508 <nftw@plt+0x10818>
  4134dc:	add	x20, x19, #0x8
  4134e0:	mov	x0, x20
  4134e4:	bl	413518 <nftw@plt+0x10828>
  4134e8:	mov	x0, x19
  4134ec:	bl	43d800 <_obstack_memory_used@@Base+0x7a8>
  4134f0:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  4134f4:	adrp	x0, 413000 <nftw@plt+0x10310>
  4134f8:	add	x2, x2, #0x3a0
  4134fc:	mov	x1, x20
  413500:	add	x0, x0, #0x6a8
  413504:	bl	402700 <__cxa_atexit@plt>
  413508:	add	x0, x19, #0x8
  41350c:	ldp	x19, x20, [sp, #16]
  413510:	ldp	x29, x30, [sp], #32
  413514:	ret
  413518:	stp	x29, x30, [sp, #-64]!
  41351c:	mov	x29, sp
  413520:	stp	x19, x20, [sp, #16]
  413524:	mov	x20, x0
  413528:	mov	x0, #0x30                  	// #48
  41352c:	stp	x21, x22, [sp, #32]
  413530:	adrp	x21, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413534:	add	x21, x21, #0x380
  413538:	str	x23, [sp, #48]
  41353c:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  413540:	mov	x19, x0
  413544:	strb	wzr, [x0, #44]
  413548:	mov	x0, #0xd                   	// #13
  41354c:	stp	xzr, xzr, [x19, #16]
  413550:	str	xzr, [x19, #32]
  413554:	bl	413434 <nftw@plt+0x10744>
  413558:	mov	w22, w0
  41355c:	mov	x1, #0x10                  	// #16
  413560:	ubfiz	x0, x22, #4, #32
  413564:	ldr	w23, [x21, x0]
  413568:	mov	x0, x23
  41356c:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  413570:	mov	x1, #0x0                   	// #0
  413574:	cmp	x23, x1
  413578:	b.ls	41358c <nftw@plt+0x1089c>  // b.plast
  41357c:	lsl	x2, x1, #4
  413580:	add	x1, x1, #0x1
  413584:	str	xzr, [x0, x2]
  413588:	b	413574 <nftw@plt+0x10884>
  41358c:	stp	x0, x23, [x19]
  413590:	mov	x0, #0x30                  	// #48
  413594:	str	w22, [x19, #40]
  413598:	str	x19, [x20, #40]
  41359c:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  4135a0:	mov	x19, x0
  4135a4:	strb	wzr, [x0, #44]
  4135a8:	mov	x0, #0xd                   	// #13
  4135ac:	stp	xzr, xzr, [x19, #16]
  4135b0:	str	xzr, [x19, #32]
  4135b4:	bl	413434 <nftw@plt+0x10744>
  4135b8:	mov	w22, w0
  4135bc:	mov	x1, #0x18                  	// #24
  4135c0:	ubfiz	x0, x22, #4, #32
  4135c4:	ldr	w23, [x21, x0]
  4135c8:	mov	x0, x23
  4135cc:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  4135d0:	mov	x1, #0x0                   	// #0
  4135d4:	mov	x3, #0x18                  	// #24
  4135d8:	cmp	x23, x1
  4135dc:	b.ls	4135f0 <nftw@plt+0x10900>  // b.plast
  4135e0:	mul	x2, x1, x3
  4135e4:	add	x1, x1, #0x1
  4135e8:	str	xzr, [x0, x2]
  4135ec:	b	4135d8 <nftw@plt+0x108e8>
  4135f0:	stp	x0, x23, [x19]
  4135f4:	mov	x0, #0x30                  	// #48
  4135f8:	str	w22, [x19, #40]
  4135fc:	str	x19, [x20, #48]
  413600:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  413604:	mov	x19, x0
  413608:	strb	wzr, [x0, #44]
  41360c:	mov	x0, #0xd                   	// #13
  413610:	stp	xzr, xzr, [x19, #16]
  413614:	str	xzr, [x19, #32]
  413618:	bl	413434 <nftw@plt+0x10744>
  41361c:	mov	w22, w0
  413620:	mov	x1, #0x18                  	// #24
  413624:	ubfiz	x0, x22, #4, #32
  413628:	ldr	w21, [x21, x0]
  41362c:	mov	x0, x21
  413630:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  413634:	mov	x1, #0x0                   	// #0
  413638:	mov	x3, #0x18                  	// #24
  41363c:	cmp	x21, x1
  413640:	b.ls	413654 <nftw@plt+0x10964>  // b.plast
  413644:	mul	x2, x1, x3
  413648:	add	x1, x1, #0x1
  41364c:	str	xzr, [x0, x2]
  413650:	b	41363c <nftw@plt+0x1094c>
  413654:	ldr	x23, [sp, #48]
  413658:	stp	x0, x21, [x19]
  41365c:	str	w22, [x19, #40]
  413660:	ldp	x21, x22, [sp, #32]
  413664:	str	x19, [x20]
  413668:	ldp	x19, x20, [sp, #16]
  41366c:	ldp	x29, x30, [sp], #64
  413670:	ret
  413674:	ldr	x3, [x0, #8]
  413678:	ldr	x1, [x0]
  41367c:	cmp	x1, x3
  413680:	b.cs	4136a0 <nftw@plt+0x109b0>  // b.hs, b.nlast
  413684:	ldr	x2, [x1]
  413688:	cbz	x2, 413694 <nftw@plt+0x109a4>
  41368c:	cmp	x2, #0x1
  413690:	b.ne	4136a4 <nftw@plt+0x109b4>  // b.any
  413694:	add	x1, x1, #0x10
  413698:	str	x1, [x0]
  41369c:	b	413678 <nftw@plt+0x10988>
  4136a0:	stp	xzr, xzr, [x0]
  4136a4:	ret
  4136a8:	stp	x29, x30, [sp, #-48]!
  4136ac:	mov	x29, sp
  4136b0:	stp	x19, x20, [sp, #16]
  4136b4:	mov	x19, x0
  4136b8:	ldr	x0, [x0, #40]
  4136bc:	ldp	x1, x0, [x0]
  4136c0:	add	x0, x1, x0, lsl #4
  4136c4:	stp	x1, x0, [sp, #32]
  4136c8:	add	x0, sp, #0x20
  4136cc:	bl	413674 <nftw@plt+0x10984>
  4136d0:	ldr	x0, [sp, #32]
  4136d4:	cbz	x0, 413704 <nftw@plt+0x10a14>
  4136d8:	ldr	x0, [x0]
  4136dc:	cbnz	x0, 413734 <nftw@plt+0x10a44>
  4136e0:	ldr	x0, [sp, #32]
  4136e4:	ldr	x0, [x0, #8]
  4136e8:	cbz	x0, 4136f4 <nftw@plt+0x10a04>
  4136ec:	mov	x1, #0x20                  	// #32
  4136f0:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  4136f4:	ldr	x0, [sp, #32]
  4136f8:	add	x0, x0, #0x10
  4136fc:	str	x0, [sp, #32]
  413700:	b	4136c8 <nftw@plt+0x109d8>
  413704:	ldr	x1, [sp, #40]
  413708:	cbnz	x1, 4136d8 <nftw@plt+0x109e8>
  41370c:	ldr	x20, [x19, #40]
  413710:	cbnz	x20, 413740 <nftw@plt+0x10a50>
  413714:	ldr	x20, [x19, #48]
  413718:	cbz	x20, 41379c <nftw@plt+0x10aac>
  41371c:	ldr	x1, [x20, #8]
  413720:	sub	x0, x1, #0x1
  413724:	cmp	x1, x0
  413728:	b.ls	413780 <nftw@plt+0x10a90>  // b.plast
  41372c:	sub	x0, x0, #0x1
  413730:	b	413724 <nftw@plt+0x10a34>
  413734:	mov	x1, #0x20                  	// #32
  413738:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  41373c:	b	4136e0 <nftw@plt+0x109f0>
  413740:	ldr	x1, [x20, #8]
  413744:	sub	x0, x1, #0x1
  413748:	cmp	x1, x0
  41374c:	b.ls	413758 <nftw@plt+0x10a68>  // b.plast
  413750:	sub	x0, x0, #0x1
  413754:	b	413748 <nftw@plt+0x10a58>
  413758:	ldrb	w1, [x20, #44]
  41375c:	ldr	x0, [x20]
  413760:	cbnz	w1, 413778 <nftw@plt+0x10a88>
  413764:	bl	402a80 <free@plt>
  413768:	mov	x0, x20
  41376c:	mov	x1, #0x30                  	// #48
  413770:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  413774:	b	413714 <nftw@plt+0x10a24>
  413778:	bl	413850 <nftw@plt+0x10b60>
  41377c:	b	413768 <nftw@plt+0x10a78>
  413780:	ldrb	w1, [x20, #44]
  413784:	ldr	x0, [x20]
  413788:	cbnz	w1, 4137bc <nftw@plt+0x10acc>
  41378c:	bl	402a80 <free@plt>
  413790:	mov	x0, x20
  413794:	mov	x1, #0x30                  	// #48
  413798:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  41379c:	ldr	x19, [x19]
  4137a0:	cbz	x19, 4137e0 <nftw@plt+0x10af0>
  4137a4:	ldr	x1, [x19, #8]
  4137a8:	sub	x0, x1, #0x1
  4137ac:	cmp	x1, x0
  4137b0:	b.ls	4137c4 <nftw@plt+0x10ad4>  // b.plast
  4137b4:	sub	x0, x0, #0x1
  4137b8:	b	4137ac <nftw@plt+0x10abc>
  4137bc:	bl	413850 <nftw@plt+0x10b60>
  4137c0:	b	413790 <nftw@plt+0x10aa0>
  4137c4:	ldrb	w1, [x19, #44]
  4137c8:	ldr	x0, [x19]
  4137cc:	cbnz	w1, 4137ec <nftw@plt+0x10afc>
  4137d0:	bl	402a80 <free@plt>
  4137d4:	mov	x0, x19
  4137d8:	mov	x1, #0x30                  	// #48
  4137dc:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  4137e0:	ldp	x19, x20, [sp, #16]
  4137e4:	ldp	x29, x30, [sp], #48
  4137e8:	ret
  4137ec:	bl	413850 <nftw@plt+0x10b60>
  4137f0:	b	4137d4 <nftw@plt+0x10ae4>
  4137f4:	ret
  4137f8:	cbz	x1, 41381c <nftw@plt+0x10b2c>
  4137fc:	stp	x29, x30, [sp, #-16]!
  413800:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413804:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413808:	mov	x29, sp
  41380c:	add	x2, x2, #0x560
  413810:	add	x0, x0, #0x573
  413814:	mov	w1, #0x2f                  	// #47
  413818:	bl	402d60 <nftw@plt+0x70>
  41381c:	b	43d158 <_obstack_memory_used@@Base+0x100>
  413820:	cbz	x1, 413844 <nftw@plt+0x10b54>
  413824:	stp	x29, x30, [sp, #-16]!
  413828:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  41382c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  413830:	mov	x29, sp
  413834:	add	x2, x2, #0x588
  413838:	add	x0, x0, #0x573
  41383c:	mov	w1, #0x37                  	// #55
  413840:	bl	402d60 <nftw@plt+0x70>
  413844:	mov	x1, #0x1                   	// #1
  413848:	b	43d18c <_obstack_memory_used@@Base+0x134>
  41384c:	b	43d1dc <_obstack_memory_used@@Base+0x184>
  413850:	b	402a80 <free@plt>
  413854:	ret
  413858:	str	xzr, [x0]
  41385c:	ret
  413860:	stp	x29, x30, [sp, #-32]!
  413864:	mov	x29, sp
  413868:	stp	x19, x20, [sp, #16]
  41386c:	mov	x19, x0
  413870:	ldr	x0, [x19]
  413874:	cbz	x0, 413888 <nftw@plt+0x10b98>
  413878:	ldr	x20, [x0]
  41387c:	bl	402a80 <free@plt>
  413880:	str	x20, [x19]
  413884:	b	413870 <nftw@plt+0x10b80>
  413888:	ldp	x19, x20, [sp, #16]
  41388c:	ldp	x29, x30, [sp], #32
  413890:	ret
  413894:	cmp	x0, #0x10, lsl #12
  413898:	b.ne	4138a8 <nftw@plt+0x10bb8>  // b.any
  41389c:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4138a0:	ldr	x1, [x2, #2416]
  4138a4:	cbnz	x1, 4138ac <nftw@plt+0x10bbc>
  4138a8:	b	43d158 <_obstack_memory_used@@Base+0x100>
  4138ac:	ldr	x0, [x1]
  4138b0:	str	x0, [x2, #2416]
  4138b4:	mov	x0, x1
  4138b8:	ret
  4138bc:	ldr	x2, [x0]
  4138c0:	mov	x1, x0
  4138c4:	sub	x2, x2, x0
  4138c8:	cmp	x2, #0x10, lsl #12
  4138cc:	b.ne	4138e4 <nftw@plt+0x10bf4>  // b.any
  4138d0:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4138d4:	ldr	x2, [x0, #2416]
  4138d8:	str	x2, [x1]
  4138dc:	str	x1, [x0, #2416]
  4138e0:	ret
  4138e4:	b	402a80 <free@plt>
  4138e8:	stp	x29, x30, [sp, #-32]!
  4138ec:	mov	x29, sp
  4138f0:	str	x19, [sp, #16]
  4138f4:	eor	x19, x1, x0
  4138f8:	blr	x2
  4138fc:	asr	w0, w0, #31
  413900:	sxtw	x0, w0
  413904:	and	x0, x0, x19
  413908:	ldr	x19, [sp, #16]
  41390c:	ldp	x29, x30, [sp], #32
  413910:	ret
  413914:	stp	x29, x30, [sp, #-96]!
  413918:	mov	x29, sp
  41391c:	stp	x21, x22, [sp, #32]
  413920:	stp	x23, x24, [sp, #48]
  413924:	mov	x23, x0
  413928:	mov	x24, x3
  41392c:	ldp	x21, x0, [x1, #24]
  413930:	stp	x19, x20, [sp, #16]
  413934:	mov	x19, x1
  413938:	stp	x25, x26, [sp, #64]
  41393c:	mov	x25, x2
  413940:	str	x27, [sp, #80]
  413944:	cmp	x0, x2
  413948:	b.cc	413cd8 <nftw@plt+0x10fe8>  // b.lo, b.ul, b.last
  41394c:	ldr	x2, [x19]
  413950:	stp	x3, x25, [x19, #8]
  413954:	add	x20, x23, x21
  413958:	mov	x1, x23
  41395c:	mov	x0, x20
  413960:	bl	4138e8 <nftw@plt+0x10bf8>
  413964:	add	x21, x23, x21, lsl #1
  413968:	eor	x20, x20, x0
  41396c:	eor	x23, x23, x0
  413970:	ldr	x0, [x19, #16]
  413974:	cmp	x0, #0x3
  413978:	b.ne	4139ac <nftw@plt+0x10cbc>  // b.any
  41397c:	ldr	x2, [x19]
  413980:	mov	x1, x20
  413984:	mov	x0, x21
  413988:	bl	4138e8 <nftw@plt+0x10bf8>
  41398c:	eor	x20, x20, x0
  413990:	ldr	x2, [x19]
  413994:	mov	x1, x23
  413998:	eor	x21, x21, x0
  41399c:	mov	x0, x20
  4139a0:	bl	4138e8 <nftw@plt+0x10bf8>
  4139a4:	eor	x23, x23, x0
  4139a8:	eor	x20, x20, x0
  4139ac:	ldp	x1, x24, [x19, #16]
  4139b0:	cmp	x1, #0x3
  4139b4:	b.hi	413ab8 <nftw@plt+0x10dc8>  // b.pmore
  4139b8:	cmp	x24, #0x8
  4139bc:	b.ne	4139fc <nftw@plt+0x10d0c>  // b.any
  4139c0:	cmp	x1, #0x3
  4139c4:	ldr	x2, [x20]
  4139c8:	ldr	x3, [x23]
  4139cc:	ldr	x0, [x19, #8]
  4139d0:	b.ne	4139dc <nftw@plt+0x10cec>  // b.any
  4139d4:	ldr	x1, [x21]
  4139d8:	str	x1, [x0, #16]
  4139dc:	stp	x3, x2, [x0]
  4139e0:	ldp	x19, x20, [sp, #16]
  4139e4:	ldp	x21, x22, [sp, #32]
  4139e8:	ldp	x23, x24, [sp, #48]
  4139ec:	ldp	x25, x26, [sp, #64]
  4139f0:	ldr	x27, [sp, #80]
  4139f4:	ldp	x29, x30, [sp], #96
  4139f8:	ret
  4139fc:	cmp	x24, #0x4
  413a00:	b.ne	413a28 <nftw@plt+0x10d38>  // b.any
  413a04:	ldr	w2, [x20]
  413a08:	cmp	x1, #0x3
  413a0c:	ldr	w3, [x23]
  413a10:	ldr	x0, [x19, #8]
  413a14:	b.ne	413a20 <nftw@plt+0x10d30>  // b.any
  413a18:	ldr	w1, [x21]
  413a1c:	str	w1, [x0, #8]
  413a20:	stp	w3, w2, [x0]
  413a24:	b	4139e0 <nftw@plt+0x10cf0>
  413a28:	mov	x0, #0x0                   	// #0
  413a2c:	ldr	x2, [x19, #24]
  413a30:	add	x3, x0, #0x8
  413a34:	cmp	x3, x2
  413a38:	b.hi	413a74 <nftw@plt+0x10d84>  // b.pmore
  413a3c:	ldp	x1, x6, [x19, #8]
  413a40:	ldr	x5, [x23, x0]
  413a44:	ldr	x4, [x20, x0]
  413a48:	add	x1, x1, x0
  413a4c:	cmp	x6, #0x3
  413a50:	b.ne	413a60 <nftw@plt+0x10d70>  // b.any
  413a54:	lsl	x2, x2, #1
  413a58:	ldr	x0, [x21, x0]
  413a5c:	str	x0, [x1, x2]
  413a60:	str	x5, [x1]
  413a64:	ldr	x0, [x19, #24]
  413a68:	str	x4, [x1, x0]
  413a6c:	mov	x0, x3
  413a70:	b	413a2c <nftw@plt+0x10d3c>
  413a74:	ldr	x2, [x19, #24]
  413a78:	cmp	x2, x0
  413a7c:	b.ls	4139e0 <nftw@plt+0x10cf0>  // b.plast
  413a80:	ldp	x1, x5, [x19, #8]
  413a84:	ldrb	w4, [x23, x0]
  413a88:	ldrb	w3, [x20, x0]
  413a8c:	add	x1, x1, x0
  413a90:	cmp	x5, #0x3
  413a94:	b.ne	413aa4 <nftw@plt+0x10db4>  // b.any
  413a98:	lsl	x2, x2, #1
  413a9c:	ldrb	w5, [x21, x0]
  413aa0:	strb	w5, [x1, x2]
  413aa4:	strb	w4, [x1]
  413aa8:	add	x0, x0, #0x1
  413aac:	ldr	x2, [x19, #24]
  413ab0:	strb	w3, [x1, x2]
  413ab4:	b	413a74 <nftw@plt+0x10d84>
  413ab8:	add	x25, x21, x24
  413abc:	cmp	x1, #0x5
  413ac0:	add	x24, x21, x24, lsl #1
  413ac4:	ldr	x2, [x19]
  413ac8:	b.ne	413af8 <nftw@plt+0x10e08>  // b.any
  413acc:	mov	x1, x25
  413ad0:	mov	x0, x24
  413ad4:	bl	4138e8 <nftw@plt+0x10bf8>
  413ad8:	eor	x24, x24, x0
  413adc:	ldr	x2, [x19]
  413ae0:	mov	x1, x21
  413ae4:	eor	x25, x25, x0
  413ae8:	mov	x0, x24
  413aec:	bl	4138e8 <nftw@plt+0x10bf8>
  413af0:	eor	x21, x0, x21
  413af4:	eor	x24, x24, x0
  413af8:	ldr	x2, [x19]
  413afc:	mov	x1, x21
  413b00:	mov	x0, x25
  413b04:	bl	4138e8 <nftw@plt+0x10bf8>
  413b08:	eor	x21, x21, x0
  413b0c:	eor	x25, x25, x0
  413b10:	ldr	x0, [x19, #16]
  413b14:	cmp	x0, #0x5
  413b18:	b.ne	413b4c <nftw@plt+0x10e5c>  // b.any
  413b1c:	ldr	x2, [x19]
  413b20:	mov	x1, x23
  413b24:	mov	x0, x25
  413b28:	bl	4138e8 <nftw@plt+0x10bf8>
  413b2c:	eor	x23, x23, x0
  413b30:	ldr	x2, [x19]
  413b34:	mov	x1, x20
  413b38:	eor	x25, x25, x0
  413b3c:	mov	x0, x24
  413b40:	bl	4138e8 <nftw@plt+0x10bf8>
  413b44:	eor	x20, x0, x20
  413b48:	eor	x24, x24, x0
  413b4c:	ldr	x2, [x19]
  413b50:	mov	x1, x23
  413b54:	mov	x0, x21
  413b58:	bl	4138e8 <nftw@plt+0x10bf8>
  413b5c:	eor	x21, x21, x0
  413b60:	ldr	x2, [x19]
  413b64:	mov	x1, x20
  413b68:	eor	x23, x23, x0
  413b6c:	mov	x0, x25
  413b70:	bl	4138e8 <nftw@plt+0x10bf8>
  413b74:	eor	x20, x20, x0
  413b78:	ldr	x2, [x19]
  413b7c:	mov	x1, x20
  413b80:	eor	x25, x25, x0
  413b84:	mov	x0, x21
  413b88:	bl	4138e8 <nftw@plt+0x10bf8>
  413b8c:	eor	x1, x20, x0
  413b90:	eor	x21, x21, x0
  413b94:	ldr	x0, [x19, #24]
  413b98:	cmp	x0, #0x8
  413b9c:	b.ne	413bd0 <nftw@plt+0x10ee0>  // b.any
  413ba0:	ldp	x0, x5, [x19, #8]
  413ba4:	ldr	x3, [x1]
  413ba8:	ldr	x2, [x21]
  413bac:	cmp	x5, #0x5
  413bb0:	ldr	x4, [x23]
  413bb4:	ldr	x1, [x25]
  413bb8:	b.ne	413bc4 <nftw@plt+0x10ed4>  // b.any
  413bbc:	ldr	x5, [x24]
  413bc0:	str	x5, [x0, #32]
  413bc4:	stp	x4, x3, [x0]
  413bc8:	stp	x2, x1, [x0, #16]
  413bcc:	b	4139e0 <nftw@plt+0x10cf0>
  413bd0:	cmp	x0, #0x4
  413bd4:	b.ne	413c08 <nftw@plt+0x10f18>  // b.any
  413bd8:	ldp	x0, x5, [x19, #8]
  413bdc:	ldr	w3, [x1]
  413be0:	ldr	w2, [x21]
  413be4:	ldr	w4, [x23]
  413be8:	ldr	w1, [x25]
  413bec:	cmp	x5, #0x5
  413bf0:	b.ne	413bfc <nftw@plt+0x10f0c>  // b.any
  413bf4:	ldr	w5, [x24]
  413bf8:	str	w5, [x0, #16]
  413bfc:	stp	w4, w3, [x0]
  413c00:	stp	w2, w1, [x0, #8]
  413c04:	b	4139e0 <nftw@plt+0x10cf0>
  413c08:	mov	x2, #0x0                   	// #0
  413c0c:	ldr	x3, [x19, #24]
  413c10:	add	x4, x2, #0x8
  413c14:	cmp	x4, x3
  413c18:	b.hi	413c74 <nftw@plt+0x10f84>  // b.pmore
  413c1c:	ldp	x0, x9, [x19, #8]
  413c20:	ldr	x8, [x23, x2]
  413c24:	ldr	x7, [x1, x2]
  413c28:	add	x0, x0, x2
  413c2c:	cmp	x9, #0x5
  413c30:	ldr	x6, [x21, x2]
  413c34:	ldr	x5, [x25, x2]
  413c38:	b.ne	413c48 <nftw@plt+0x10f58>  // b.any
  413c3c:	lsl	x3, x3, #2
  413c40:	ldr	x2, [x24, x2]
  413c44:	str	x2, [x0, x3]
  413c48:	str	x8, [x0]
  413c4c:	ldr	x3, [x19, #24]
  413c50:	add	x2, x0, x3
  413c54:	str	x7, [x0, x3]
  413c58:	ldr	x0, [x19, #24]
  413c5c:	add	x3, x2, x0
  413c60:	str	x6, [x2, x0]
  413c64:	mov	x2, x4
  413c68:	ldr	x0, [x19, #24]
  413c6c:	str	x5, [x3, x0]
  413c70:	b	413c0c <nftw@plt+0x10f1c>
  413c74:	ldr	x3, [x19, #24]
  413c78:	cmp	x3, x2
  413c7c:	b.ls	4139e0 <nftw@plt+0x10cf0>  // b.plast
  413c80:	ldp	x0, x8, [x19, #8]
  413c84:	ldrb	w4, [x23, x2]
  413c88:	ldrb	w7, [x1, x2]
  413c8c:	ldrb	w6, [x21, x2]
  413c90:	ldrb	w5, [x25, x2]
  413c94:	add	x0, x0, x2
  413c98:	cmp	x8, #0x5
  413c9c:	b.ne	413cac <nftw@plt+0x10fbc>  // b.any
  413ca0:	lsl	x3, x3, #2
  413ca4:	ldrb	w8, [x24, x2]
  413ca8:	strb	w8, [x0, x3]
  413cac:	strb	w4, [x0]
  413cb0:	add	x2, x2, #0x1
  413cb4:	ldr	x4, [x19, #24]
  413cb8:	add	x3, x0, x4
  413cbc:	strb	w7, [x0, x4]
  413cc0:	ldr	x0, [x19, #24]
  413cc4:	add	x4, x3, x0
  413cc8:	strb	w6, [x3, x0]
  413ccc:	ldr	x0, [x19, #24]
  413cd0:	strb	w5, [x4, x0]
  413cd4:	b	413c74 <nftw@plt+0x10f84>
  413cd8:	lsr	x26, x2, #1
  413cdc:	cmp	x23, x3
  413ce0:	csel	x20, x4, x23, eq  // eq = none
  413ce4:	sub	x2, x2, x2, lsr #1
  413ce8:	mul	x21, x26, x21
  413cec:	add	x27, x23, x21
  413cf0:	add	x22, x3, x21
  413cf4:	mov	x3, x22
  413cf8:	mov	x0, x27
  413cfc:	bl	413914 <nftw@plt+0x10c24>
  413d00:	mov	x2, x26
  413d04:	mov	x1, x19
  413d08:	mov	x0, x23
  413d0c:	mov	x4, x27
  413d10:	mov	x3, x20
  413d14:	bl	413914 <nftw@plt+0x10c24>
  413d18:	ldr	x2, [x19]
  413d1c:	mov	x0, x22
  413d20:	ldr	x1, [x19, #24]
  413d24:	sub	x1, x21, x1
  413d28:	add	x1, x20, x1
  413d2c:	blr	x2
  413d30:	tbz	w0, #31, 413d94 <nftw@plt+0x110a4>
  413d34:	ldr	x0, [x19, #24]
  413d38:	cmp	x0, #0x8
  413d3c:	madd	x25, x0, x25, x24
  413d40:	b.ne	413dbc <nftw@plt+0x110cc>  // b.any
  413d44:	ldr	x2, [x19]
  413d48:	mov	x1, x20
  413d4c:	mov	x0, x22
  413d50:	blr	x2
  413d54:	asr	w0, w0, #31
  413d58:	eor	x2, x22, x20
  413d5c:	sxtw	x1, w0
  413d60:	and	w0, w0, #0x8
  413d64:	and	x2, x2, x1
  413d68:	eor	x2, x20, x2
  413d6c:	add	x22, x22, w0, sxtw
  413d70:	ldr	x2, [x2]
  413d74:	str	x2, [x24], #8
  413d78:	cmp	x24, x22
  413d7c:	b.eq	4139e0 <nftw@plt+0x10cf0>  // b.none
  413d80:	mvn	x1, x1
  413d84:	cmp	x25, x22
  413d88:	and	x1, x1, #0x8
  413d8c:	add	x20, x20, x1
  413d90:	b.ne	413d44 <nftw@plt+0x11054>  // b.any
  413d94:	sub	x2, x22, x24
  413d98:	mov	x1, x20
  413d9c:	mov	x0, x24
  413da0:	ldp	x19, x20, [sp, #16]
  413da4:	ldp	x21, x22, [sp, #32]
  413da8:	ldp	x23, x24, [sp, #48]
  413dac:	ldp	x25, x26, [sp, #64]
  413db0:	ldr	x27, [sp, #80]
  413db4:	ldp	x29, x30, [sp], #96
  413db8:	b	4025d0 <memcpy@plt>
  413dbc:	cmp	x0, #0x4
  413dc0:	b.ne	413e18 <nftw@plt+0x11128>  // b.any
  413dc4:	ldr	x2, [x19]
  413dc8:	mov	x1, x20
  413dcc:	mov	x0, x22
  413dd0:	blr	x2
  413dd4:	asr	w0, w0, #31
  413dd8:	eor	x2, x22, x20
  413ddc:	sxtw	x1, w0
  413de0:	and	w0, w0, #0x4
  413de4:	and	x2, x2, x1
  413de8:	eor	x2, x20, x2
  413dec:	add	x22, x22, w0, sxtw
  413df0:	ldr	w2, [x2]
  413df4:	str	w2, [x24], #4
  413df8:	cmp	x24, x22
  413dfc:	b.eq	4139e0 <nftw@plt+0x10cf0>  // b.none
  413e00:	mvn	x1, x1
  413e04:	cmp	x25, x22
  413e08:	and	x1, x1, #0x4
  413e0c:	add	x20, x20, x1
  413e10:	b.ne	413dc4 <nftw@plt+0x110d4>  // b.any
  413e14:	b	413d94 <nftw@plt+0x110a4>
  413e18:	ldr	x2, [x19]
  413e1c:	mov	x1, x20
  413e20:	mov	x0, x22
  413e24:	blr	x2
  413e28:	asr	w21, w0, #31
  413e2c:	ldr	x2, [x19, #24]
  413e30:	sxtw	x21, w21
  413e34:	eor	x1, x22, x20
  413e38:	mov	x0, x24
  413e3c:	and	x1, x1, x21
  413e40:	eor	x1, x20, x1
  413e44:	bl	4025d0 <memcpy@plt>
  413e48:	ldr	x1, [x19, #24]
  413e4c:	add	x24, x0, x1
  413e50:	and	x0, x21, x1
  413e54:	add	x22, x22, x0
  413e58:	cmp	x24, x22
  413e5c:	b.eq	4139e0 <nftw@plt+0x10cf0>  // b.none
  413e60:	mvn	x21, x21
  413e64:	cmp	x25, x22
  413e68:	and	x21, x21, x1
  413e6c:	add	x20, x20, x21
  413e70:	b.ne	413e18 <nftw@plt+0x11128>  // b.any
  413e74:	b	413d94 <nftw@plt+0x110a4>
  413e78:	cmp	x1, #0x1
  413e7c:	b.ls	413f14 <nftw@plt+0x11224>  // b.plast
  413e80:	stp	x29, x30, [sp, #-352]!
  413e84:	mov	x29, sp
  413e88:	stp	x19, x20, [sp, #16]
  413e8c:	mov	x20, x1
  413e90:	stp	x21, x22, [sp, #32]
  413e94:	mov	x21, x0
  413e98:	tbz	x2, #63, 413f04 <nftw@plt+0x11214>
  413e9c:	mvn	x2, x2
  413ea0:	mov	x0, #0x3                   	// #3
  413ea4:	str	x0, [sp, #88]
  413ea8:	lsr	x0, x20, #1
  413eac:	stp	x3, x21, [sp, #56]
  413eb0:	add	x22, sp, #0x60
  413eb4:	mul	x0, x0, x2
  413eb8:	stp	x20, x2, [sp, #72]
  413ebc:	cmp	x0, #0x100
  413ec0:	b.ls	413f0c <nftw@plt+0x1121c>  // b.plast
  413ec4:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  413ec8:	mov	x19, x0
  413ecc:	mov	x4, x19
  413ed0:	mov	x3, x21
  413ed4:	mov	x2, x20
  413ed8:	add	x1, sp, #0x38
  413edc:	mov	x0, x21
  413ee0:	bl	413914 <nftw@plt+0x10c24>
  413ee4:	cmp	x19, x22
  413ee8:	b.eq	413ef4 <nftw@plt+0x11204>  // b.none
  413eec:	mov	x0, x19
  413ef0:	bl	402a80 <free@plt>
  413ef4:	ldp	x19, x20, [sp, #16]
  413ef8:	ldp	x21, x22, [sp, #32]
  413efc:	ldp	x29, x30, [sp], #352
  413f00:	ret
  413f04:	mov	x0, #0x5                   	// #5
  413f08:	b	413ea4 <nftw@plt+0x111b4>
  413f0c:	mov	x19, x22
  413f10:	b	413ecc <nftw@plt+0x111dc>
  413f14:	ret
  413f18:	mvn	x2, x2
  413f1c:	b	413e78 <nftw@plt+0x11188>
  413f20:	ldr	x6, [x1]
  413f24:	cbz	x6, 413f88 <nftw@plt+0x11298>
  413f28:	ldr	x5, [x0]
  413f2c:	ldrb	w3, [x5]
  413f30:	cmp	w3, #0x7f
  413f34:	b.hi	413f54 <nftw@plt+0x11264>  // b.pmore
  413f38:	str	w3, [x2]
  413f3c:	sub	x6, x6, #0x1
  413f40:	str	x6, [x1]
  413f44:	add	x5, x5, #0x1
  413f48:	str	x5, [x0]
  413f4c:	mov	w0, #0x0                   	// #0
  413f50:	ret
  413f54:	adrp	x7, 451000 <_obstack_memory_used@@Base+0x13fa8>
  413f58:	add	x7, x7, #0x600
  413f5c:	add	x10, x7, #0x6
  413f60:	mov	x4, #0x1                   	// #1
  413f64:	mov	x9, x4
  413f68:	add	x4, x4, #0x1
  413f6c:	ldrb	w8, [x9, x7]
  413f70:	ldrb	w9, [x9, x10]
  413f74:	bic	w11, w3, w8
  413f78:	cmp	w11, w9
  413f7c:	b.ne	413f90 <nftw@plt+0x112a0>  // b.any
  413f80:	cmp	x6, x4
  413f84:	b.cs	413fa0 <nftw@plt+0x112b0>  // b.hs, b.nlast
  413f88:	mov	w0, #0x16                  	// #22
  413f8c:	b	413f50 <nftw@plt+0x11260>
  413f90:	cmp	x4, #0x6
  413f94:	b.ne	413f64 <nftw@plt+0x11274>  // b.any
  413f98:	mov	w0, #0x54                  	// #84
  413f9c:	b	413f50 <nftw@plt+0x11260>
  413fa0:	and	w3, w3, w8
  413fa4:	add	x8, x5, #0x1
  413fa8:	add	x5, x5, x4
  413fac:	ldrb	w7, [x8], #1
  413fb0:	and	w9, w7, #0xc0
  413fb4:	cmp	w9, #0x80
  413fb8:	b.ne	413f98 <nftw@plt+0x112a8>  // b.any
  413fbc:	and	w7, w7, #0x3f
  413fc0:	cmp	x5, x8
  413fc4:	add	w3, w7, w3, lsl #6
  413fc8:	b.ne	413fac <nftw@plt+0x112bc>  // b.any
  413fcc:	sub	w8, w3, #0x80
  413fd0:	mov	w7, #0x7fffff80            	// #2147483520
  413fd4:	cmp	w8, w7
  413fd8:	b.cs	413f98 <nftw@plt+0x112a8>  // b.hs, b.nlast
  413fdc:	cmp	w3, #0x7ff
  413fe0:	ccmp	x4, #0x2, #0x0, ls  // ls = plast
  413fe4:	b.hi	413f98 <nftw@plt+0x112a8>  // b.pmore
  413fe8:	mov	w7, #0xffff                	// #65535
  413fec:	cmp	w3, w7
  413ff0:	ccmp	x4, #0x3, #0x0, ls  // ls = plast
  413ff4:	b.hi	413f98 <nftw@plt+0x112a8>  // b.pmore
  413ff8:	mov	w7, #0x1fffff              	// #2097151
  413ffc:	cmp	w3, w7
  414000:	ccmp	x4, #0x4, #0x0, ls  // ls = plast
  414004:	b.hi	413f98 <nftw@plt+0x112a8>  // b.pmore
  414008:	mov	w7, #0x3ffffff             	// #67108863
  41400c:	cmp	w3, w7
  414010:	ccmp	x4, #0x5, #0x0, ls  // ls = plast
  414014:	b.hi	413f98 <nftw@plt+0x112a8>  // b.pmore
  414018:	mov	w7, #0xffff2800            	// #-55296
  41401c:	add	w7, w3, w7
  414020:	cmp	w7, #0x7ff
  414024:	b.ls	413f98 <nftw@plt+0x112a8>  // b.plast
  414028:	str	w3, [x2]
  41402c:	sub	x4, x6, x4
  414030:	str	x5, [x0]
  414034:	str	x4, [x1]
  414038:	b	413f4c <nftw@plt+0x1125c>
  41403c:	sub	sp, sp, #0x10
  414040:	cmp	w0, #0x7f
  414044:	ldr	x6, [x1]
  414048:	b.hi	4140dc <nftw@plt+0x113ec>  // b.pmore
  41404c:	add	x3, sp, #0xd
  414050:	mov	x4, #0x1                   	// #1
  414054:	strb	w0, [sp, #13]
  414058:	ldr	x0, [x2]
  41405c:	cmp	x0, x4
  414060:	b.cc	414120 <nftw@plt+0x11430>  // b.lo, b.ul, b.last
  414064:	add	x0, sp, #0xe
  414068:	mov	x5, #0x0                   	// #0
  41406c:	add	x7, x5, x3
  414070:	cmp	x0, x7
  414074:	b.ls	4140f4 <nftw@plt+0x11404>  // b.plast
  414078:	ldrb	w7, [x3, x5]
  41407c:	strb	w7, [x6, x5]
  414080:	add	x5, x5, #0x1
  414084:	b	41406c <nftw@plt+0x1137c>
  414088:	mov	x5, x9
  41408c:	mov	x7, x4
  414090:	and	w4, w0, #0x3f
  414094:	lsr	w0, w0, #6
  414098:	orr	w4, w4, #0xffffff80
  41409c:	sturb	w4, [x5, #-1]
  4140a0:	sub	x9, x5, #0x1
  4140a4:	add	x4, x7, #0x1
  4140a8:	cmp	w0, #0x3e
  4140ac:	b.hi	414088 <nftw@plt+0x11398>  // b.pmore
  4140b0:	add	x8, x3, x4
  4140b4:	ldurb	w8, [x8, #-1]
  4140b8:	tst	w8, w0
  4140bc:	b.ne	414088 <nftw@plt+0x11398>  // b.any
  4140c0:	adrp	x8, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4140c4:	add	x8, x8, #0x606
  4140c8:	sub	x3, x5, #0x2
  4140cc:	ldrb	w7, [x8, x7]
  4140d0:	orr	w0, w0, w7
  4140d4:	sturb	w0, [x5, #-2]
  4140d8:	b	414058 <nftw@plt+0x11368>
  4140dc:	adrp	x3, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4140e0:	add	x3, x3, #0x600
  4140e4:	add	x5, sp, #0xe
  4140e8:	add	x3, x3, #0xc
  4140ec:	mov	x7, #0x1                   	// #1
  4140f0:	b	414090 <nftw@plt+0x113a0>
  4140f4:	ldr	x5, [x2]
  4140f8:	cmp	x3, x0
  4140fc:	sub	x4, x5, x4
  414100:	str	x4, [x2]
  414104:	sub	x2, x0, x3
  414108:	mov	w0, #0x0                   	// #0
  41410c:	csel	x2, x2, xzr, ls  // ls = plast
  414110:	add	x6, x6, x2
  414114:	str	x6, [x1]
  414118:	add	sp, sp, #0x10
  41411c:	ret
  414120:	mov	w0, #0x7                   	// #7
  414124:	b	414118 <nftw@plt+0x11428>
  414128:	stp	x29, x30, [sp, #-32]!
  41412c:	mov	x12, x0
  414130:	mov	x0, x1
  414134:	mov	x29, sp
  414138:	mov	x1, x2
  41413c:	ldr	x2, [x4]
  414140:	str	wzr, [sp, #28]
  414144:	cmp	x2, #0x3
  414148:	b.ls	4141c0 <nftw@plt+0x114d0>  // b.plast
  41414c:	mov	x14, x3
  414150:	mov	x13, x4
  414154:	add	x2, sp, #0x1c
  414158:	bl	413f20 <nftw@plt+0x11230>
  41415c:	cbnz	w0, 4141b8 <nftw@plt+0x114c8>
  414160:	cmp	x12, #0x0
  414164:	mov	x1, #0x3                   	// #3
  414168:	ldr	x2, [x14]
  41416c:	csel	x3, x1, xzr, ne  // ne = any
  414170:	ldr	w4, [sp, #28]
  414174:	csel	x1, xzr, x1, ne  // ne = any
  414178:	strb	w4, [x2, x3]
  41417c:	cinc	x4, x2, ne  // ne = any
  414180:	ldr	w3, [sp, #28]
  414184:	lsr	w3, w3, #8
  414188:	strb	w3, [x4, #1]
  41418c:	cinc	x3, x2, eq  // eq = none
  414190:	ldrh	w4, [sp, #30]
  414194:	strb	w4, [x3, #1]
  414198:	ldrb	w3, [sp, #31]
  41419c:	strb	w3, [x2, x1]
  4141a0:	ldr	x1, [x14]
  4141a4:	add	x1, x1, #0x4
  4141a8:	str	x1, [x14]
  4141ac:	ldr	x1, [x13]
  4141b0:	sub	x1, x1, #0x4
  4141b4:	str	x1, [x13]
  4141b8:	ldp	x29, x30, [sp], #32
  4141bc:	ret
  4141c0:	mov	w0, #0x7                   	// #7
  4141c4:	b	4141b8 <nftw@plt+0x114c8>
  4141c8:	stp	x29, x30, [sp, #-48]!
  4141cc:	mov	x14, x1
  4141d0:	mov	x18, x0
  4141d4:	mov	x29, sp
  4141d8:	ldr	x15, [x3]
  4141dc:	mov	x13, x3
  4141e0:	mov	x12, x4
  4141e4:	mov	x1, x2
  4141e8:	mov	x0, x14
  4141ec:	stp	x19, x20, [sp, #16]
  4141f0:	str	wzr, [sp, #44]
  4141f4:	ldr	x19, [x2]
  4141f8:	add	x2, sp, #0x2c
  4141fc:	ldr	x20, [x14]
  414200:	bl	413f20 <nftw@plt+0x11230>
  414204:	cbnz	w0, 414224 <nftw@plt+0x11534>
  414208:	ldr	w5, [sp, #44]
  41420c:	mov	w2, #0x10ffff              	// #1114111
  414210:	cmp	w5, w2
  414214:	b.ls	414230 <nftw@plt+0x11540>  // b.plast
  414218:	str	x20, [x14]
  41421c:	mov	w0, #0x54                  	// #84
  414220:	str	x19, [x1]
  414224:	ldp	x19, x20, [sp, #16]
  414228:	ldp	x29, x30, [sp], #48
  41422c:	ret
  414230:	mov	w3, #0xffff                	// #65535
  414234:	cmp	w5, w3
  414238:	ldr	x2, [x12]
  41423c:	b.hi	414290 <nftw@plt+0x115a0>  // b.pmore
  414240:	cmp	x2, #0x1
  414244:	b.hi	414258 <nftw@plt+0x11568>  // b.pmore
  414248:	str	x20, [x14]
  41424c:	mov	w0, #0x7                   	// #7
  414250:	str	x19, [x1]
  414254:	b	414224 <nftw@plt+0x11534>
  414258:	cmp	x18, #0x0
  41425c:	cset	x1, ne  // ne = any
  414260:	cset	x2, eq  // eq = none
  414264:	strb	w5, [x15, x1]
  414268:	ldr	w1, [sp, #44]
  41426c:	lsr	w1, w1, #8
  414270:	strb	w1, [x15, x2]
  414274:	ldr	x1, [x13]
  414278:	add	x1, x1, #0x2
  41427c:	str	x1, [x13]
  414280:	ldr	x1, [x12]
  414284:	sub	x1, x1, #0x2
  414288:	str	x1, [x12]
  41428c:	b	414224 <nftw@plt+0x11534>
  414290:	cmp	x2, #0x3
  414294:	b.ls	414248 <nftw@plt+0x11558>  // b.plast
  414298:	sub	w1, w5, #0x10, lsl #12
  41429c:	cmp	x18, #0x0
  4142a0:	mov	w2, #0xd800                	// #55296
  4142a4:	cset	x3, ne  // ne = any
  4142a8:	add	w1, w2, w1, lsr #10
  4142ac:	and	w5, w5, #0x3ff
  4142b0:	mov	w2, #0xdc00                	// #56320
  4142b4:	add	w5, w5, w2
  4142b8:	cset	x2, eq  // eq = none
  4142bc:	strb	w1, [x15, x3]
  4142c0:	add	x3, x3, #0x2
  4142c4:	lsr	w1, w1, #8
  4142c8:	strb	w1, [x15, x2]
  4142cc:	add	x2, x2, #0x2
  4142d0:	strb	w5, [x15, x3]
  4142d4:	lsr	w5, w5, #8
  4142d8:	strb	w5, [x15, x2]
  4142dc:	ldr	x1, [x13]
  4142e0:	add	x1, x1, #0x4
  4142e4:	str	x1, [x13]
  4142e8:	ldr	x1, [x12]
  4142ec:	sub	x1, x1, #0x4
  4142f0:	b	414288 <nftw@plt+0x11598>
  4142f4:	mov	w0, #0x1                   	// #1
  4142f8:	ret
  4142fc:	stp	x29, x30, [sp, #-96]!
  414300:	mov	x29, sp
  414304:	stp	x21, x22, [sp, #32]
  414308:	mov	x22, x1
  41430c:	mov	x21, x2
  414310:	mov	x1, x2
  414314:	stp	x19, x20, [sp, #16]
  414318:	mov	x19, x8
  41431c:	stp	x23, x24, [sp, #48]
  414320:	mov	x23, x0
  414324:	mov	x0, x22
  414328:	stp	x25, x26, [sp, #64]
  41432c:	str	x27, [sp, #80]
  414330:	bl	402890 <strcasecmp@plt>
  414334:	cbnz	w0, 414370 <nftw@plt+0x11680>
  414338:	adrp	x0, 414000 <nftw@plt+0x11310>
  41433c:	add	x0, x0, #0x750
  414340:	str	x0, [x19]
  414344:	mov	x0, #0xffffffffffffffff    	// #-1
  414348:	str	x0, [x19, #8]
  41434c:	str	w0, [x19, #16]
  414350:	mov	sp, x29
  414354:	ldp	x19, x20, [sp, #16]
  414358:	ldp	x21, x22, [sp, #32]
  41435c:	ldp	x23, x24, [sp, #48]
  414360:	ldp	x25, x26, [sp, #64]
  414364:	ldr	x27, [sp, #80]
  414368:	ldp	x29, x30, [sp], #96
  41436c:	ret
  414370:	mov	x0, x22
  414374:	bl	402630 <strlen@plt>
  414378:	mov	x20, x0
  41437c:	mov	x0, x21
  414380:	bl	402630 <strlen@plt>
  414384:	add	x20, x20, x0
  414388:	add	x20, x20, #0x11
  41438c:	mov	x1, x21
  414390:	and	x20, x20, #0xfffffffffffffff0
  414394:	mov	x24, #0x0                   	// #0
  414398:	sub	sp, sp, x20
  41439c:	adrp	x20, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4143a0:	add	x20, x20, #0x600
  4143a4:	mov	x25, sp
  4143a8:	add	x20, x20, #0x18
  4143ac:	mov	x0, x25
  4143b0:	mov	x27, #0x18                  	// #24
  4143b4:	bl	402b00 <strcpy@plt>
  4143b8:	mov	x0, x25
  4143bc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4143c0:	add	x1, x1, #0x61f
  4143c4:	bl	402830 <strcat@plt>
  4143c8:	mov	x1, x22
  4143cc:	mov	x0, x25
  4143d0:	bl	402830 <strcat@plt>
  4143d4:	mul	x26, x24, x27
  4143d8:	mov	x0, x25
  4143dc:	ldr	x1, [x26, x20]
  4143e0:	bl	402890 <strcasecmp@plt>
  4143e4:	cbnz	w0, 414404 <nftw@plt+0x11714>
  4143e8:	add	x20, x20, x26
  4143ec:	ldr	x0, [x20, #8]
  4143f0:	str	x0, [x19]
  4143f4:	ldr	x0, [x20, #16]
  4143f8:	str	x0, [x19, #8]
  4143fc:	mov	w0, #0xffffffff            	// #-1
  414400:	b	41434c <nftw@plt+0x1165c>
  414404:	add	x24, x24, #0x1
  414408:	cmp	x24, #0x8
  41440c:	b.ne	4143d4 <nftw@plt+0x116e4>  // b.any
  414410:	adrp	x0, 414000 <nftw@plt+0x11310>
  414414:	add	x0, x0, #0x490
  414418:	mov	x1, x21
  41441c:	str	x0, [x19]
  414420:	mov	x0, x22
  414424:	bl	402b10 <iconv_open@plt>
  414428:	mov	w1, #0xffffffff            	// #-1
  41442c:	str	x0, [x19, #8]
  414430:	str	w1, [x19, #16]
  414434:	cmn	x0, #0x1
  414438:	b.ne	414350 <nftw@plt+0x11660>  // b.any
  41443c:	bl	402c20 <__errno_location@plt>
  414440:	ldr	w0, [x0]
  414444:	cmp	w0, #0x16
  414448:	b.ne	414478 <nftw@plt+0x11788>  // b.any
  41444c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414450:	mov	x4, x22
  414454:	mov	x3, x21
  414458:	add	x2, x2, #0x5a3
  41445c:	mov	x0, x23
  414460:	mov	w1, #0x3                   	// #3
  414464:	bl	41c014 <nftw@plt+0x19324>
  414468:	adrp	x0, 414000 <nftw@plt+0x11310>
  41446c:	add	x0, x0, #0x750
  414470:	str	x0, [x19]
  414474:	b	414350 <nftw@plt+0x11660>
  414478:	mov	x0, x23
  41447c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414480:	mov	w1, #0x3                   	// #3
  414484:	add	x2, x2, #0x5d3
  414488:	bl	41c4b8 <nftw@plt+0x197c8>
  41448c:	b	414468 <nftw@plt+0x11778>
  414490:	stp	x29, x30, [sp, #-80]!
  414494:	mov	x4, #0x0                   	// #0
  414498:	mov	x29, sp
  41449c:	stp	x19, x20, [sp, #16]
  4144a0:	mov	x20, x0
  4144a4:	mov	x19, x3
  4144a8:	mov	x3, #0x0                   	// #0
  4144ac:	stp	x21, x22, [sp, #32]
  4144b0:	mov	x22, x1
  4144b4:	mov	x21, x2
  4144b8:	mov	x1, #0x0                   	// #0
  4144bc:	mov	x2, #0x0                   	// #0
  4144c0:	bl	402a10 <iconv@plt>
  4144c4:	cmn	x0, #0x1
  4144c8:	b.eq	4145b0 <nftw@plt+0x118c0>  // b.none
  4144cc:	ldp	x1, x0, [x19]
  4144d0:	ldr	x2, [x19, #16]
  4144d4:	add	x1, x1, x2
  4144d8:	sub	x0, x0, x2
  4144dc:	stp	x22, x1, [sp, #48]
  4144e0:	stp	x21, x0, [sp, #64]
  4144e4:	add	x4, sp, #0x48
  4144e8:	add	x3, sp, #0x38
  4144ec:	add	x2, sp, #0x40
  4144f0:	add	x1, sp, #0x30
  4144f4:	mov	x0, x20
  4144f8:	bl	402a10 <iconv@plt>
  4144fc:	ldr	x0, [sp, #64]
  414500:	cbnz	x0, 4145b8 <nftw@plt+0x118c8>
  414504:	add	x4, sp, #0x48
  414508:	add	x3, sp, #0x38
  41450c:	mov	x0, x20
  414510:	mov	x2, #0x0                   	// #0
  414514:	mov	x1, #0x0                   	// #0
  414518:	bl	402a10 <iconv@plt>
  41451c:	cmn	x0, #0x1
  414520:	b.eq	414548 <nftw@plt+0x11858>  // b.none
  414524:	ldr	x0, [x19, #8]
  414528:	ldr	x1, [sp, #72]
  41452c:	sub	x0, x0, x1
  414530:	str	x0, [x19, #16]
  414534:	mov	w0, #0x1                   	// #1
  414538:	ldp	x19, x20, [sp, #16]
  41453c:	ldp	x21, x22, [sp, #32]
  414540:	ldp	x29, x30, [sp], #80
  414544:	ret
  414548:	bl	402c20 <__errno_location@plt>
  41454c:	ldr	w0, [x0]
  414550:	cmp	w0, #0x7
  414554:	b.ne	4145b0 <nftw@plt+0x118c0>  // b.any
  414558:	ldr	x0, [sp, #72]
  41455c:	ldr	x1, [x19, #8]
  414560:	add	x0, x0, #0x100
  414564:	str	x0, [sp, #72]
  414568:	ldr	x0, [x19]
  41456c:	add	x1, x1, #0x100
  414570:	str	x1, [x19, #8]
  414574:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  414578:	str	x0, [x19]
  41457c:	ldr	x1, [x19, #8]
  414580:	add	x4, sp, #0x48
  414584:	ldr	x2, [sp, #72]
  414588:	add	x3, sp, #0x38
  41458c:	sub	x1, x1, x2
  414590:	mov	x2, #0x0                   	// #0
  414594:	add	x0, x0, x1
  414598:	mov	x1, #0x0                   	// #0
  41459c:	str	x0, [sp, #56]
  4145a0:	mov	x0, x20
  4145a4:	bl	402a10 <iconv@plt>
  4145a8:	cmn	x0, #0x1
  4145ac:	b.ne	414524 <nftw@plt+0x11834>  // b.any
  4145b0:	mov	w0, #0x0                   	// #0
  4145b4:	b	414538 <nftw@plt+0x11848>
  4145b8:	bl	402c20 <__errno_location@plt>
  4145bc:	ldr	w0, [x0]
  4145c0:	cmp	w0, #0x7
  4145c4:	b.ne	4145b0 <nftw@plt+0x118c0>  // b.any
  4145c8:	ldr	x0, [sp, #72]
  4145cc:	ldr	x1, [x19, #8]
  4145d0:	add	x0, x0, #0x100
  4145d4:	str	x0, [sp, #72]
  4145d8:	ldr	x0, [x19]
  4145dc:	add	x1, x1, #0x100
  4145e0:	str	x1, [x19, #8]
  4145e4:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  4145e8:	str	x0, [x19]
  4145ec:	ldr	x1, [x19, #8]
  4145f0:	ldr	x2, [sp, #72]
  4145f4:	sub	x1, x1, x2
  4145f8:	add	x0, x0, x1
  4145fc:	str	x0, [sp, #56]
  414600:	b	4144e4 <nftw@plt+0x117f4>
  414604:	stp	x29, x30, [sp, #-80]!
  414608:	mov	x29, sp
  41460c:	stp	x21, x22, [sp, #32]
  414610:	mov	x21, x0
  414614:	mov	x22, x1
  414618:	ldp	x1, x0, [x4]
  41461c:	str	x2, [sp, #48]
  414620:	ldr	x2, [x4, #16]
  414624:	stp	x19, x20, [sp, #16]
  414628:	mov	x19, x4
  41462c:	str	x3, [sp, #64]
  414630:	add	x1, x1, x2
  414634:	sub	x0, x0, x2
  414638:	str	x1, [sp, #56]
  41463c:	str	x0, [sp, #72]
  414640:	add	x4, sp, #0x48
  414644:	add	x3, sp, #0x38
  414648:	add	x2, sp, #0x40
  41464c:	add	x1, sp, #0x30
  414650:	mov	x0, x22
  414654:	blr	x21
  414658:	mov	w20, w0
  41465c:	ldr	x0, [sp, #64]
  414660:	cbz	x0, 414680 <nftw@plt+0x11990>
  414664:	cbz	w20, 414640 <nftw@plt+0x11950>
  414668:	cmp	w20, #0x7
  41466c:	b.eq	4146a4 <nftw@plt+0x119b4>  // b.none
  414670:	bl	402c20 <__errno_location@plt>
  414674:	str	w20, [x0]
  414678:	mov	w0, #0x0                   	// #0
  41467c:	b	414694 <nftw@plt+0x119a4>
  414680:	ldr	x0, [x19, #8]
  414684:	ldr	x1, [sp, #72]
  414688:	sub	x0, x0, x1
  41468c:	str	x0, [x19, #16]
  414690:	mov	w0, #0x1                   	// #1
  414694:	ldp	x19, x20, [sp, #16]
  414698:	ldp	x21, x22, [sp, #32]
  41469c:	ldp	x29, x30, [sp], #80
  4146a0:	ret
  4146a4:	ldr	x0, [sp, #72]
  4146a8:	ldr	x2, [x19, #8]
  4146ac:	add	x0, x0, #0x100
  4146b0:	str	x0, [sp, #72]
  4146b4:	ldr	x0, [x19]
  4146b8:	add	x1, x2, #0x100
  4146bc:	str	x1, [x19, #8]
  4146c0:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  4146c4:	str	x0, [x19]
  4146c8:	ldr	x2, [x19, #8]
  4146cc:	ldr	x1, [sp, #72]
  4146d0:	sub	x2, x2, x1
  4146d4:	add	x2, x0, x2
  4146d8:	str	x2, [sp, #56]
  4146dc:	b	414640 <nftw@plt+0x11950>
  4146e0:	mov	x4, x3
  4146e4:	mov	x3, x2
  4146e8:	mov	x2, x1
  4146ec:	mov	x1, x0
  4146f0:	adrp	x0, 414000 <nftw@plt+0x11310>
  4146f4:	add	x0, x0, #0x87c
  4146f8:	b	414604 <nftw@plt+0x11914>
  4146fc:	mov	x4, x3
  414700:	mov	x3, x2
  414704:	mov	x2, x1
  414708:	mov	x1, x0
  41470c:	adrp	x0, 414000 <nftw@plt+0x11310>
  414710:	add	x0, x0, #0x7cc
  414714:	b	414604 <nftw@plt+0x11914>
  414718:	mov	x4, x3
  41471c:	mov	x3, x2
  414720:	mov	x2, x1
  414724:	mov	x1, x0
  414728:	adrp	x0, 414000 <nftw@plt+0x11310>
  41472c:	add	x0, x0, #0x1c8
  414730:	b	414604 <nftw@plt+0x11914>
  414734:	mov	x4, x3
  414738:	mov	x3, x2
  41473c:	mov	x2, x1
  414740:	mov	x1, x0
  414744:	adrp	x0, 414000 <nftw@plt+0x11310>
  414748:	add	x0, x0, #0x128
  41474c:	b	414604 <nftw@plt+0x11914>
  414750:	stp	x29, x30, [sp, #-48]!
  414754:	mov	x29, sp
  414758:	ldr	x0, [x3, #16]
  41475c:	str	x21, [sp, #32]
  414760:	mov	x21, x1
  414764:	stp	x19, x20, [sp, #16]
  414768:	add	x0, x2, x0
  41476c:	ldr	x1, [x3, #8]
  414770:	mov	x20, x2
  414774:	mov	x19, x3
  414778:	cmp	x0, x1
  41477c:	b.ls	414794 <nftw@plt+0x11aa4>  // b.plast
  414780:	add	x1, x0, x0, lsr #2
  414784:	str	x1, [x3, #8]
  414788:	ldr	x0, [x3]
  41478c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  414790:	str	x0, [x19]
  414794:	ldr	x3, [x19]
  414798:	mov	x2, x20
  41479c:	ldr	x0, [x19, #16]
  4147a0:	mov	x1, x21
  4147a4:	add	x0, x3, x0
  4147a8:	bl	4025d0 <memcpy@plt>
  4147ac:	ldr	x2, [x19, #16]
  4147b0:	mov	w0, #0x1                   	// #1
  4147b4:	ldr	x21, [sp, #32]
  4147b8:	add	x2, x2, x20
  4147bc:	str	x2, [x19, #16]
  4147c0:	ldp	x19, x20, [sp, #16]
  4147c4:	ldp	x29, x30, [sp], #48
  4147c8:	ret
  4147cc:	mov	x11, x1
  4147d0:	mov	x1, x3
  4147d4:	ldr	x3, [x2]
  4147d8:	mov	x10, x2
  4147dc:	cmp	x3, #0x3
  4147e0:	b.ls	41486c <nftw@plt+0x11b7c>  // b.plast
  4147e4:	ldr	x7, [x11]
  4147e8:	cmp	x0, #0x0
  4147ec:	mov	x2, x4
  4147f0:	mov	x6, #0x3                   	// #3
  4147f4:	cinc	x4, x7, eq  // eq = none
  4147f8:	csel	x3, xzr, x6, ne  // ne = any
  4147fc:	csel	x6, x6, xzr, ne  // ne = any
  414800:	ldrb	w4, [x4, #1]
  414804:	ldrb	w3, [x7, x3]
  414808:	ldrb	w0, [x7, x6]
  41480c:	lsl	w4, w4, #16
  414810:	add	w3, w4, w3, lsl #24
  414814:	cinc	x4, x7, ne  // ne = any
  414818:	ldrb	w5, [x4, #1]
  41481c:	add	w0, w0, w5, lsl #8
  414820:	add	w0, w0, w3
  414824:	mov	w3, #0xffff2800            	// #-55296
  414828:	add	w3, w0, w3
  41482c:	cmp	w3, #0x7ff
  414830:	mov	w3, #0x7ffffffe            	// #2147483646
  414834:	ccmp	w0, w3, #0x2, hi  // hi = pmore
  414838:	b.hi	414874 <nftw@plt+0x11b84>  // b.pmore
  41483c:	stp	x29, x30, [sp, #-16]!
  414840:	mov	x29, sp
  414844:	bl	41403c <nftw@plt+0x1134c>
  414848:	cbnz	w0, 414864 <nftw@plt+0x11b74>
  41484c:	ldr	x1, [x11]
  414850:	add	x1, x1, #0x4
  414854:	str	x1, [x11]
  414858:	ldr	x1, [x10]
  41485c:	sub	x1, x1, #0x4
  414860:	str	x1, [x10]
  414864:	ldp	x29, x30, [sp], #16
  414868:	ret
  41486c:	mov	w0, #0x16                  	// #22
  414870:	ret
  414874:	mov	w0, #0x54                  	// #84
  414878:	ret
  41487c:	mov	x12, x1
  414880:	mov	x1, x3
  414884:	ldr	x3, [x2]
  414888:	mov	x11, x2
  41488c:	ldr	x5, [x12]
  414890:	cmp	x3, #0x1
  414894:	b.ls	41495c <nftw@plt+0x11c6c>  // b.plast
  414898:	cmp	x0, #0x0
  41489c:	mov	x2, x4
  4148a0:	cset	x4, eq  // eq = none
  4148a4:	mov	w7, #0xffff2400            	// #-56320
  4148a8:	ldrb	w10, [x5, x4]
  4148ac:	cset	x4, ne  // ne = any
  4148b0:	ldrb	w4, [x5, x4]
  4148b4:	add	w10, w4, w10, lsl #8
  4148b8:	add	w4, w10, w7
  4148bc:	cmp	w4, #0x3ff
  4148c0:	b.ls	414964 <nftw@plt+0x11c74>  // b.plast
  4148c4:	mov	w4, #0xffff2800            	// #-55296
  4148c8:	add	w6, w10, w4
  4148cc:	cmp	w6, #0x3ff
  4148d0:	b.hi	41490c <nftw@plt+0x11c1c>  // b.pmore
  4148d4:	cmp	x3, #0x3
  4148d8:	b.ls	41495c <nftw@plt+0x11c6c>  // b.plast
  4148dc:	cmp	x0, #0x0
  4148e0:	cinc	x3, x5, eq  // eq = none
  4148e4:	cinc	x5, x5, ne  // ne = any
  4148e8:	ldrb	w10, [x3, #2]
  4148ec:	ldrb	w0, [x5, #2]
  4148f0:	add	w10, w0, w10, lsl #8
  4148f4:	add	w7, w10, w7
  4148f8:	cmp	w7, #0x3ff
  4148fc:	b.hi	414964 <nftw@plt+0x11c74>  // b.pmore
  414900:	add	w10, w10, w6, lsl #10
  414904:	mov	w0, #0x2400                	// #9216
  414908:	add	w10, w10, w0
  41490c:	stp	x29, x30, [sp, #-16]!
  414910:	mov	w0, w10
  414914:	mov	x29, sp
  414918:	bl	41403c <nftw@plt+0x1134c>
  41491c:	cbnz	w0, 414944 <nftw@plt+0x11c54>
  414920:	mov	w3, #0xffff                	// #65535
  414924:	cmp	w10, w3
  414928:	ldr	x2, [x11]
  41492c:	ldr	x1, [x12]
  414930:	b.hi	41494c <nftw@plt+0x11c5c>  // b.pmore
  414934:	sub	x2, x2, #0x2
  414938:	add	x1, x1, #0x2
  41493c:	str	x1, [x12]
  414940:	str	x2, [x11]
  414944:	ldp	x29, x30, [sp], #16
  414948:	ret
  41494c:	add	x1, x1, #0x4
  414950:	sub	x2, x2, #0x4
  414954:	str	x1, [x12]
  414958:	b	414940 <nftw@plt+0x11c50>
  41495c:	mov	w0, #0x16                  	// #22
  414960:	ret
  414964:	mov	w0, #0x54                  	// #84
  414968:	ret
  41496c:	sub	w1, w1, #0x39
  414970:	cmp	w1, #0x9
  414974:	b.hi	414990 <nftw@plt+0x11ca0>  // b.pmore
  414978:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  41497c:	add	x2, x2, #0xbc0
  414980:	ldrb	w1, [x2, w1, uxtw]
  414984:	adr	x2, 414990 <nftw@plt+0x11ca0>
  414988:	add	x1, x2, w1, sxtb #2
  41498c:	br	x1
  414990:	add	x0, x0, #0x208
  414994:	ldp	x2, x3, [x0]
  414998:	stp	x2, x3, [x8]
  41499c:	ldr	x0, [x0, #16]
  4149a0:	str	x0, [x8, #16]
  4149a4:	ret
  4149a8:	add	x0, x0, #0x220
  4149ac:	b	414994 <nftw@plt+0x11ca4>
  4149b0:	add	x0, x0, #0x238
  4149b4:	b	414994 <nftw@plt+0x11ca4>
  4149b8:	add	x0, x0, #0x250
  4149bc:	b	414994 <nftw@plt+0x11ca4>
  4149c0:	add	x0, x0, #0x268
  4149c4:	b	414994 <nftw@plt+0x11ca4>
  4149c8:	stp	x29, x30, [sp, #-80]!
  4149cc:	mov	x29, sp
  4149d0:	stp	x23, x24, [sp, #48]
  4149d4:	ldr	x23, [x0, #1216]
  4149d8:	stp	x19, x20, [sp, #16]
  4149dc:	mov	x19, x2
  4149e0:	stp	x21, x22, [sp, #32]
  4149e4:	mov	w20, w1
  4149e8:	cmp	x23, w3, sxtw
  4149ec:	ldr	x22, [x2, #16]
  4149f0:	ldr	x2, [x2, #8]
  4149f4:	str	x25, [sp, #64]
  4149f8:	b.eq	414a9c <nftw@plt+0x11dac>  // b.none
  4149fc:	sxtw	x21, w3
  414a00:	cmp	x23, #0x20
  414a04:	mov	x24, #0x20                  	// #32
  414a08:	ldrb	w25, [x0, #1242]
  414a0c:	csel	x0, x23, x24, ls  // ls = plast
  414a10:	mov	x24, #0x1                   	// #1
  414a14:	udiv	x21, x21, x23
  414a18:	lsl	x24, x24, x0
  414a1c:	sub	x24, x24, #0x1
  414a20:	add	x0, x21, x22
  414a24:	cmp	x0, x2
  414a28:	b.ls	414a40 <nftw@plt+0x11d50>  // b.plast
  414a2c:	ldr	x0, [x19]
  414a30:	add	x1, x2, #0x100
  414a34:	str	x1, [x19, #8]
  414a38:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  414a3c:	str	x0, [x19]
  414a40:	sub	x4, x21, #0x1
  414a44:	mov	x0, #0x0                   	// #0
  414a48:	cmp	x21, x0
  414a4c:	b.eq	414a78 <nftw@plt+0x11d88>  // b.none
  414a50:	ldr	x1, [x19]
  414a54:	sub	x2, x4, x0
  414a58:	cmp	w25, #0x0
  414a5c:	and	w3, w20, w24
  414a60:	csel	x2, x2, x0, ne  // ne = any
  414a64:	lsr	w20, w20, w23
  414a68:	add	x1, x1, x2
  414a6c:	add	x0, x0, #0x1
  414a70:	strb	w3, [x1, x22]
  414a74:	b	414a48 <nftw@plt+0x11d58>
  414a78:	ldr	x0, [x19, #16]
  414a7c:	add	x21, x0, x21
  414a80:	str	x21, [x19, #16]
  414a84:	ldp	x19, x20, [sp, #16]
  414a88:	ldp	x21, x22, [sp, #32]
  414a8c:	ldp	x23, x24, [sp, #48]
  414a90:	ldr	x25, [sp, #64]
  414a94:	ldp	x29, x30, [sp], #80
  414a98:	ret
  414a9c:	add	x22, x22, #0x1
  414aa0:	cmp	x22, x2
  414aa4:	b.ls	414abc <nftw@plt+0x11dcc>  // b.plast
  414aa8:	ldr	x0, [x19]
  414aac:	add	x1, x2, #0x100
  414ab0:	str	x1, [x19, #8]
  414ab4:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  414ab8:	str	x0, [x19]
  414abc:	ldr	x1, [x19]
  414ac0:	ldr	x0, [x19, #16]
  414ac4:	add	x2, x0, #0x1
  414ac8:	str	x2, [x19, #16]
  414acc:	strb	w20, [x1, x0]
  414ad0:	b	414a84 <nftw@plt+0x11d94>
  414ad4:	stp	x29, x30, [sp, #-96]!
  414ad8:	mov	x29, sp
  414adc:	stp	x19, x20, [sp, #16]
  414ae0:	mov	x19, x0
  414ae4:	adrp	x20, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414ae8:	stp	x21, x22, [sp, #32]
  414aec:	add	x20, x20, #0xb95
  414af0:	ldrb	w22, [x0, #1242]
  414af4:	ldr	x1, [x0, #1168]
  414af8:	ldr	x21, [x0, #1176]
  414afc:	ldr	x0, [x0, #1232]
  414b00:	str	x23, [sp, #48]
  414b04:	cmp	x0, #0x1f
  414b08:	b.ls	414c5c <nftw@plt+0x11f6c>  // b.plast
  414b0c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414b10:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414b14:	cmp	w22, #0x0
  414b18:	add	x2, x2, #0xb47
  414b1c:	add	x0, x0, #0xb56
  414b20:	csel	x0, x0, x2, ne  // ne = any
  414b24:	cmp	x1, #0x0
  414b28:	add	x23, x19, #0x208
  414b2c:	csel	x1, x1, x20, ne  // ne = any
  414b30:	cmp	x21, #0x0
  414b34:	csel	x21, x21, x0, ne  // ne = any
  414b38:	add	x8, sp, #0x40
  414b3c:	mov	x2, x20
  414b40:	mov	x0, x19
  414b44:	bl	4142fc <nftw@plt+0x1160c>
  414b48:	ldp	x0, x1, [sp, #64]
  414b4c:	stp	x0, x1, [x23]
  414b50:	add	x23, x19, #0x220
  414b54:	ldr	x0, [sp, #80]
  414b58:	str	x0, [x19, #536]
  414b5c:	ldr	x0, [x19, #1216]
  414b60:	str	w0, [x19, #536]
  414b64:	add	x8, sp, #0x40
  414b68:	mov	x2, x20
  414b6c:	mov	x1, x20
  414b70:	mov	x0, x19
  414b74:	bl	4142fc <nftw@plt+0x1160c>
  414b78:	ldp	x0, x1, [sp, #64]
  414b7c:	stp	x0, x1, [x23]
  414b80:	cmp	w22, #0x0
  414b84:	ldr	x0, [sp, #80]
  414b88:	str	x0, [x19, #560]
  414b8c:	ldr	x0, [x19, #1216]
  414b90:	str	w0, [x19, #560]
  414b94:	add	x23, x19, #0x238
  414b98:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414b9c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414ba0:	add	x1, x1, #0xb74
  414ba4:	add	x0, x0, #0xb65
  414ba8:	add	x8, sp, #0x40
  414bac:	csel	x1, x1, x0, ne  // ne = any
  414bb0:	mov	x2, x20
  414bb4:	mov	x0, x19
  414bb8:	bl	4142fc <nftw@plt+0x1160c>
  414bbc:	ldp	x0, x1, [sp, #64]
  414bc0:	stp	x0, x1, [x23]
  414bc4:	cmp	w22, #0x0
  414bc8:	ldr	x0, [sp, #80]
  414bcc:	str	x0, [x19, #584]
  414bd0:	mov	w0, #0x10                  	// #16
  414bd4:	str	w0, [x19, #584]
  414bd8:	add	x22, x19, #0x250
  414bdc:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414be0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414be4:	add	x1, x1, #0xb56
  414be8:	add	x0, x0, #0xb47
  414bec:	add	x8, sp, #0x40
  414bf0:	csel	x1, x1, x0, ne  // ne = any
  414bf4:	mov	x2, x20
  414bf8:	mov	x0, x19
  414bfc:	bl	4142fc <nftw@plt+0x1160c>
  414c00:	ldp	x0, x1, [sp, #64]
  414c04:	stp	x0, x1, [x22]
  414c08:	add	x22, x19, #0x268
  414c0c:	ldr	x0, [sp, #80]
  414c10:	str	x0, [x19, #608]
  414c14:	mov	w0, #0x20                  	// #32
  414c18:	str	w0, [x19, #608]
  414c1c:	add	x8, sp, #0x40
  414c20:	mov	x2, x20
  414c24:	mov	x1, x21
  414c28:	mov	x0, x19
  414c2c:	bl	4142fc <nftw@plt+0x1160c>
  414c30:	ldp	x0, x1, [sp, #64]
  414c34:	stp	x0, x1, [x22]
  414c38:	ldr	x0, [sp, #80]
  414c3c:	ldp	x21, x22, [sp, #32]
  414c40:	ldr	x23, [sp, #48]
  414c44:	str	x0, [x19, #632]
  414c48:	ldr	x0, [x19, #1232]
  414c4c:	str	w0, [x19, #632]
  414c50:	ldp	x19, x20, [sp, #16]
  414c54:	ldp	x29, x30, [sp], #96
  414c58:	ret
  414c5c:	cmp	x0, #0xf
  414c60:	b.ls	414c7c <nftw@plt+0x11f8c>  // b.plast
  414c64:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414c68:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414c6c:	cmp	w22, #0x0
  414c70:	add	x2, x2, #0xb65
  414c74:	add	x0, x0, #0xb74
  414c78:	b	414b20 <nftw@plt+0x11e30>
  414c7c:	mov	x0, x20
  414c80:	b	414b24 <nftw@plt+0x11e34>
  414c84:	stp	x29, x30, [sp, #-32]!
  414c88:	mov	x29, sp
  414c8c:	stp	x19, x20, [sp, #16]
  414c90:	mov	x19, x0
  414c94:	adrp	x20, 414000 <nftw@plt+0x11310>
  414c98:	ldr	x0, [x0, #520]
  414c9c:	add	x20, x20, #0x490
  414ca0:	cmp	x0, x20
  414ca4:	b.ne	414cb0 <nftw@plt+0x11fc0>  // b.any
  414ca8:	ldr	x0, [x19, #528]
  414cac:	bl	402690 <iconv_close@plt>
  414cb0:	ldr	x0, [x19, #544]
  414cb4:	cmp	x0, x20
  414cb8:	b.ne	414cc4 <nftw@plt+0x11fd4>  // b.any
  414cbc:	ldr	x0, [x19, #552]
  414cc0:	bl	402690 <iconv_close@plt>
  414cc4:	ldr	x0, [x19, #568]
  414cc8:	cmp	x0, x20
  414ccc:	b.ne	414cd8 <nftw@plt+0x11fe8>  // b.any
  414cd0:	ldr	x0, [x19, #576]
  414cd4:	bl	402690 <iconv_close@plt>
  414cd8:	ldr	x0, [x19, #592]
  414cdc:	cmp	x0, x20
  414ce0:	b.ne	414cec <nftw@plt+0x11ffc>  // b.any
  414ce4:	ldr	x0, [x19, #600]
  414ce8:	bl	402690 <iconv_close@plt>
  414cec:	ldr	x0, [x19, #616]
  414cf0:	cmp	x0, x20
  414cf4:	b.ne	414d08 <nftw@plt+0x12018>  // b.any
  414cf8:	ldr	x0, [x19, #624]
  414cfc:	ldp	x19, x20, [sp, #16]
  414d00:	ldp	x29, x30, [sp], #32
  414d04:	b	402690 <iconv_close@plt>
  414d08:	ldp	x19, x20, [sp, #16]
  414d0c:	ldp	x29, x30, [sp], #32
  414d10:	ret
  414d14:	stp	x29, x30, [sp, #-80]!
  414d18:	cmp	w1, #0x7e
  414d1c:	mov	x29, sp
  414d20:	stp	x19, x20, [sp, #16]
  414d24:	mov	w20, w1
  414d28:	str	x21, [sp, #32]
  414d2c:	b.ls	414d48 <nftw@plt+0x12058>  // b.plast
  414d30:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414d34:	add	x2, x2, #0x5de
  414d38:	mov	w3, w1
  414d3c:	mov	w1, #0x4                   	// #4
  414d40:	bl	41c014 <nftw@plt+0x19324>
  414d44:	b	414d9c <nftw@plt+0x120ac>
  414d48:	mov	x19, x0
  414d4c:	mov	x21, #0x1                   	// #1
  414d50:	mov	x0, x21
  414d54:	strb	w1, [sp, #48]
  414d58:	str	x21, [sp, #64]
  414d5c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  414d60:	str	x0, [sp, #56]
  414d64:	add	x3, sp, #0x38
  414d68:	ldr	x4, [x19, #520]
  414d6c:	str	xzr, [sp, #72]
  414d70:	ldr	x0, [x19, #528]
  414d74:	mov	x2, x21
  414d78:	add	x1, sp, #0x30
  414d7c:	blr	x4
  414d80:	tst	w0, #0xff
  414d84:	b.ne	414db4 <nftw@plt+0x120c4>  // b.any
  414d88:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414d8c:	mov	x0, x19
  414d90:	add	x2, x2, #0x618
  414d94:	mov	w1, #0x4                   	// #4
  414d98:	bl	41c4b8 <nftw@plt+0x197c8>
  414d9c:	mov	w19, #0x0                   	// #0
  414da0:	mov	w0, w19
  414da4:	ldp	x19, x20, [sp, #16]
  414da8:	ldr	x21, [sp, #32]
  414dac:	ldp	x29, x30, [sp], #80
  414db0:	ret
  414db4:	ldr	x0, [sp, #72]
  414db8:	cmp	x0, #0x1
  414dbc:	b.eq	414dd8 <nftw@plt+0x120e8>  // b.none
  414dc0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414dc4:	mov	w3, w20
  414dc8:	add	x2, x2, #0x63e
  414dcc:	mov	x0, x19
  414dd0:	mov	w1, #0x4                   	// #4
  414dd4:	b	414d40 <nftw@plt+0x12050>
  414dd8:	ldr	x0, [sp, #56]
  414ddc:	ldrb	w19, [x0]
  414de0:	bl	402a80 <free@plt>
  414de4:	b	414da0 <nftw@plt+0x120b0>
  414de8:	stp	x29, x30, [sp, #-32]!
  414dec:	mov	x29, sp
  414df0:	str	x19, [sp, #16]
  414df4:	mov	x19, x0
  414df8:	mov	x0, #0x800000000           	// #34359738368
  414dfc:	stp	xzr, x0, [x19]
  414e00:	mov	x0, #0x40                  	// #64
  414e04:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  414e08:	str	x0, [x19]
  414e0c:	ldr	x19, [sp, #16]
  414e10:	ldp	x29, x30, [sp], #32
  414e14:	ret
  414e18:	ldr	x0, [x0]
  414e1c:	b	402a80 <free@plt>
  414e20:	stp	x29, x30, [sp, #-32]!
  414e24:	mov	x29, sp
  414e28:	stp	x19, x20, [sp, #16]
  414e2c:	mov	x19, x0
  414e30:	mov	x20, x1
  414e34:	ldr	w0, [x0, #12]
  414e38:	ldr	w1, [x19, #8]
  414e3c:	cmp	w1, w0
  414e40:	b.lt	414e5c <nftw@plt+0x1216c>  // b.tstop
  414e44:	lsl	w0, w0, #1
  414e48:	str	w0, [x19, #12]
  414e4c:	sbfiz	x1, x0, #3, #32
  414e50:	ldr	x0, [x19]
  414e54:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  414e58:	str	x0, [x19]
  414e5c:	ldr	w0, [x19, #8]
  414e60:	ldr	x1, [x19]
  414e64:	add	w2, w0, #0x1
  414e68:	str	w2, [x19, #8]
  414e6c:	str	x20, [x1, w0, sxtw #3]
  414e70:	ldp	x19, x20, [sp, #16]
  414e74:	ldp	x29, x30, [sp], #32
  414e78:	ret
  414e7c:	stp	x29, x30, [sp, #-64]!
  414e80:	adrp	x13, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  414e84:	adrp	x14, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  414e88:	mov	x29, sp
  414e8c:	stp	x19, x20, [sp, #16]
  414e90:	mov	x19, x0
  414e94:	add	x0, x2, #0x10
  414e98:	and	x0, x0, #0xfffffffffffffff0
  414e9c:	mov	x12, x1
  414ea0:	mov	x11, x2
  414ea4:	add	x13, x13, #0xae
  414ea8:	add	x14, x14, #0xd9c
  414eac:	str	x21, [sp, #32]
  414eb0:	sub	sp, sp, x0
  414eb4:	mov	x10, #0x0                   	// #0
  414eb8:	mov	x20, sp
  414ebc:	str	x20, [x29, #48]
  414ec0:	cmp	x10, x11
  414ec4:	ldr	x1, [x29, #48]
  414ec8:	b.cs	414f80 <nftw@plt+0x12290>  // b.hs, b.nlast
  414ecc:	ldrb	w0, [x12, x10]
  414ed0:	cmp	w0, #0x5c
  414ed4:	b.eq	414eec <nftw@plt+0x121fc>  // b.none
  414ed8:	add	x2, x1, #0x1
  414edc:	str	x2, [x29, #48]
  414ee0:	strb	w0, [x1]
  414ee4:	add	x10, x10, #0x1
  414ee8:	b	414ec0 <nftw@plt+0x121d0>
  414eec:	add	x0, x12, x10
  414ef0:	mov	w2, #0x4                   	// #4
  414ef4:	add	x10, x10, #0x2
  414ef8:	ldrb	w0, [x0, #1]
  414efc:	cmp	w0, #0x75
  414f00:	mov	w0, #0x8                   	// #8
  414f04:	csel	w2, w2, w0, eq  // eq = none
  414f08:	sub	x0, x1, x20
  414f0c:	sub	x0, x11, x0
  414f10:	str	x0, [x29, #56]
  414f14:	mov	w0, #0x0                   	// #0
  414f18:	cmp	w2, #0x0
  414f1c:	ccmp	x10, x11, #0x2, ne  // ne = any
  414f20:	b.cs	414f44 <nftw@plt+0x12254>  // b.hs, b.nlast
  414f24:	ldrb	w3, [x12, x10]
  414f28:	ldrh	w4, [x13, x3, lsl #1]
  414f2c:	tbz	w4, #8, 414f44 <nftw@plt+0x12254>
  414f30:	ldrb	w3, [x14, x3]
  414f34:	add	x10, x10, #0x1
  414f38:	sub	w2, w2, #0x1
  414f3c:	add	w0, w3, w0, lsl #4
  414f40:	b	414f18 <nftw@plt+0x12228>
  414f44:	sub	x10, x10, #0x1
  414f48:	cmp	w0, #0x24
  414f4c:	b.eq	414ed8 <nftw@plt+0x121e8>  // b.none
  414f50:	add	x2, x29, #0x38
  414f54:	add	x1, x29, #0x30
  414f58:	bl	41403c <nftw@plt+0x1134c>
  414f5c:	mov	w21, w0
  414f60:	cbz	w0, 414ee4 <nftw@plt+0x121f4>
  414f64:	bl	402c20 <__errno_location@plt>
  414f68:	str	w21, [x0]
  414f6c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414f70:	mov	x0, x19
  414f74:	add	x2, x2, #0x678
  414f78:	mov	w1, #0x3                   	// #3
  414f7c:	bl	41c4b8 <nftw@plt+0x197c8>
  414f80:	ldr	x0, [x19, #1088]
  414f84:	mov	x1, x20
  414f88:	ldr	x2, [x29, #48]
  414f8c:	mov	w3, #0x1                   	// #1
  414f90:	sub	x2, x2, x20
  414f94:	bl	42c488 <nftw@plt+0x29798>
  414f98:	mov	sp, x29
  414f9c:	ldp	x19, x20, [sp, #16]
  414fa0:	ldr	x21, [sp, #32]
  414fa4:	ldp	x29, x30, [sp], #64
  414fa8:	ret
  414fac:	stp	x29, x30, [sp, #-128]!
  414fb0:	mov	x29, sp
  414fb4:	stp	x23, x24, [sp, #48]
  414fb8:	adrp	x24, 450000 <_obstack_memory_used@@Base+0x12fa8>
  414fbc:	add	x24, x24, #0xb95
  414fc0:	mov	x23, x0
  414fc4:	add	x8, sp, #0x50
  414fc8:	stp	x19, x20, [sp, #16]
  414fcc:	mov	x20, x2
  414fd0:	mov	x19, x4
  414fd4:	mov	x2, x1
  414fd8:	mov	x1, x24
  414fdc:	stp	x21, x22, [sp, #32]
  414fe0:	mov	x22, x5
  414fe4:	mov	x21, x6
  414fe8:	stp	x25, x26, [sp, #64]
  414fec:	mov	x26, x3
  414ff0:	bl	4142fc <nftw@plt+0x1160c>
  414ff4:	ldr	x25, [sp, #80]
  414ff8:	adrp	x0, 414000 <nftw@plt+0x11310>
  414ffc:	add	x0, x0, #0x750
  415000:	cmp	x25, x0
  415004:	b.ne	4150c8 <nftw@plt+0x123d8>  // b.any
  415008:	stp	x20, x26, [sp, #104]
  41500c:	str	x19, [sp, #120]
  415010:	ldp	x2, x0, [sp, #112]
  415014:	add	x1, x0, #0x10
  415018:	add	x0, x0, #0x1, lsl #12
  41501c:	cmp	x0, x2
  415020:	b.cc	41502c <nftw@plt+0x1233c>  // b.lo, b.ul, b.last
  415024:	cmp	x2, x1
  415028:	b.cs	415038 <nftw@plt+0x12348>  // b.hs, b.nlast
  41502c:	ldr	x0, [sp, #104]
  415030:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  415034:	str	x0, [sp, #104]
  415038:	ldr	x0, [sp, #104]
  41503c:	ldr	x1, [sp, #120]
  415040:	add	x0, x0, x1
  415044:	stp	xzr, xzr, [x0]
  415048:	ldr	x0, [sp, #120]
  41504c:	ldr	x1, [sp, #104]
  415050:	cbz	x0, 415144 <nftw@plt+0x12454>
  415054:	add	x2, x1, x0
  415058:	ldurb	w2, [x2, #-1]
  41505c:	cmp	w2, #0xd
  415060:	b.ne	415144 <nftw@plt+0x12454>  // b.any
  415064:	strb	w2, [x1, x0]
  415068:	ldr	x0, [sp, #120]
  41506c:	str	x0, [x21]
  415070:	ldr	x1, [sp, #104]
  415074:	cmp	x0, #0x2
  415078:	b.ls	41514c <nftw@plt+0x1245c>  // b.plast
  41507c:	ldrb	w2, [x1]
  415080:	cmp	w2, #0xef
  415084:	b.ne	41514c <nftw@plt+0x1245c>  // b.any
  415088:	ldrb	w2, [x1, #1]
  41508c:	cmp	w2, #0xbb
  415090:	b.ne	41514c <nftw@plt+0x1245c>  // b.any
  415094:	ldrb	w2, [x1, #2]
  415098:	cmp	w2, #0xbf
  41509c:	b.ne	41514c <nftw@plt+0x1245c>  // b.any
  4150a0:	sub	x0, x0, #0x3
  4150a4:	str	x0, [x21]
  4150a8:	add	x0, x1, #0x3
  4150ac:	ldp	x19, x20, [sp, #16]
  4150b0:	ldp	x23, x24, [sp, #48]
  4150b4:	ldp	x25, x26, [sp, #64]
  4150b8:	str	x1, [x22]
  4150bc:	ldp	x21, x22, [sp, #32]
  4150c0:	ldp	x29, x30, [sp], #128
  4150c4:	ret
  4150c8:	cmp	x19, #0x10, lsl #12
  4150cc:	mov	x0, #0x10000               	// #65536
  4150d0:	ldr	x26, [sp, #88]
  4150d4:	csel	x0, x19, x0, cs  // cs = hs, nlast
  4150d8:	str	x0, [sp, #112]
  4150dc:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4150e0:	str	x0, [sp, #104]
  4150e4:	add	x3, sp, #0x68
  4150e8:	str	xzr, [sp, #120]
  4150ec:	mov	x2, x19
  4150f0:	mov	x1, x20
  4150f4:	mov	x0, x26
  4150f8:	blr	x25
  4150fc:	tst	w0, #0xff
  415100:	b.ne	415120 <nftw@plt+0x12430>  // b.any
  415104:	ldr	x3, [x23, #1184]
  415108:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  41510c:	mov	x4, x24
  415110:	add	x2, x2, #0x69f
  415114:	mov	x0, x23
  415118:	mov	w1, #0x3                   	// #3
  41511c:	bl	41c014 <nftw@plt+0x19324>
  415120:	mov	x0, x20
  415124:	bl	402a80 <free@plt>
  415128:	adrp	x0, 414000 <nftw@plt+0x11310>
  41512c:	add	x0, x0, #0x490
  415130:	cmp	x25, x0
  415134:	b.ne	415010 <nftw@plt+0x12320>  // b.any
  415138:	mov	x0, x26
  41513c:	bl	402690 <iconv_close@plt>
  415140:	b	415010 <nftw@plt+0x12320>
  415144:	mov	w2, #0xa                   	// #10
  415148:	b	415064 <nftw@plt+0x12374>
  41514c:	mov	x0, x1
  415150:	b	4150ac <nftw@plt+0x123bc>
  415154:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415158:	add	x0, x0, #0xb95
  41515c:	ret
  415160:	stp	x29, x30, [sp, #-32]!
  415164:	mov	x29, sp
  415168:	stp	x19, x20, [sp, #16]
  41516c:	mov	x20, x0
  415170:	mov	x19, x2
  415174:	mov	x0, x2
  415178:	str	x2, [x20, #8]
  41517c:	bl	4265d4 <nftw@plt+0x238e4>
  415180:	mov	w1, w0
  415184:	mov	x3, #0x0                   	// #0
  415188:	mov	w2, #0x1                   	// #1
  41518c:	mov	x0, x19
  415190:	bl	4268c8 <nftw@plt+0x23bd8>
  415194:	mov	w1, w0
  415198:	str	w1, [x20]
  41519c:	mov	x0, x19
  4151a0:	bl	4262e8 <nftw@plt+0x235f8>
  4151a4:	ldrb	w1, [x0, #7]
  4151a8:	mov	w0, #0x1                   	// #1
  4151ac:	lsl	w0, w0, w1
  4151b0:	str	w0, [x20, #4]
  4151b4:	ldp	x19, x20, [sp, #16]
  4151b8:	ldp	x29, x30, [sp], #32
  4151bc:	ret
  4151c0:	mov	x1, x0
  4151c4:	ldr	w0, [x0]
  4151c8:	mov	w2, #0x60000000            	// #1610612736
  4151cc:	cmp	w0, w2
  4151d0:	b.hi	4151e0 <nftw@plt+0x124f0>  // b.pmore
  4151d4:	ldr	w2, [x1, #4]
  4151d8:	add	w2, w2, w0
  4151dc:	str	w2, [x1]
  4151e0:	bfi	x0, x0, #32, #32
  4151e4:	ret
  4151e8:	stp	x29, x30, [sp, #-48]!
  4151ec:	mov	x29, sp
  4151f0:	stp	x19, x20, [sp, #16]
  4151f4:	mov	x20, x0
  4151f8:	mov	w19, #0x0                   	// #0
  4151fc:	stp	x21, x22, [sp, #32]
  415200:	mov	w22, w1
  415204:	mov	x21, x2
  415208:	cmp	w19, w22
  41520c:	b.ge	41522c <nftw@plt+0x1253c>  // b.tcont
  415210:	mov	x0, x21
  415214:	bl	4151c0 <nftw@plt+0x124d0>
  415218:	add	w19, w19, #0x1
  41521c:	mov	x1, x0
  415220:	mov	x0, x20
  415224:	bl	414e20 <nftw@plt+0x12130>
  415228:	b	415208 <nftw@plt+0x12518>
  41522c:	ldp	x19, x20, [sp, #16]
  415230:	ldp	x21, x22, [sp, #32]
  415234:	ldp	x29, x30, [sp], #48
  415238:	ret
  41523c:	stp	x29, x30, [sp, #-112]!
  415240:	mov	x29, sp
  415244:	stp	x19, x20, [sp, #16]
  415248:	mov	x20, x0
  41524c:	stp	x21, x22, [sp, #32]
  415250:	mov	x21, x4
  415254:	stp	x23, x24, [sp, #48]
  415258:	mov	w23, w3
  41525c:	mov	x24, x5
  415260:	stp	x25, x26, [sp, #64]
  415264:	mov	x25, x1
  415268:	mov	x26, x6
  41526c:	stp	x27, x28, [sp, #80]
  415270:	mov	x27, x7
  415274:	ldr	x22, [x1]
  415278:	str	x2, [sp, #104]
  41527c:	ldrb	w1, [x0, #1120]
  415280:	cbnz	w1, 415310 <nftw@plt+0x12620>
  415284:	ldrb	w2, [x0, #1152]
  415288:	cbnz	w2, 415310 <nftw@plt+0x12620>
  41528c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415290:	add	x2, x2, #0x6bb
  415294:	bl	41c014 <nftw@plt+0x19324>
  415298:	ldurb	w0, [x22, #-1]
  41529c:	cmp	w0, #0x75
  4152a0:	b.eq	4152c0 <nftw@plt+0x125d0>  // b.none
  4152a4:	cmp	w0, #0x55
  4152a8:	b.eq	415358 <nftw@plt+0x12668>  // b.none
  4152ac:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4152b0:	mov	x0, x20
  4152b4:	add	x2, x2, #0x760
  4152b8:	mov	w1, #0x4                   	// #4
  4152bc:	bl	41c014 <nftw@plt+0x19324>
  4152c0:	mov	w3, #0x4                   	// #4
  4152c4:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4152c8:	adrp	x6, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4152cc:	mov	x28, x22
  4152d0:	add	x4, x4, #0xae
  4152d4:	add	x6, x6, #0xd9c
  4152d8:	mov	w19, #0x0                   	// #0
  4152dc:	ldrb	w0, [x28]
  4152e0:	ldrb	w7, [x28]
  4152e4:	ldrh	w0, [x4, x0, lsl #1]
  4152e8:	tbz	w0, #8, 41538c <nftw@plt+0x1269c>
  4152ec:	add	x28, x28, #0x1
  4152f0:	cbz	x27, 415370 <nftw@plt+0x12680>
  4152f4:	cbnz	x26, 415360 <nftw@plt+0x12670>
  4152f8:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4152fc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415300:	add	x2, x2, #0x780
  415304:	add	x0, x0, #0x78f
  415308:	mov	w1, #0x434                 	// #1076
  41530c:	bl	402d60 <nftw@plt+0x70>
  415310:	ldrsb	w0, [x20, #1198]
  415314:	cmp	w0, #0x0
  415318:	b.le	415330 <nftw@plt+0x12640>
  41531c:	cbnz	w1, 415330 <nftw@plt+0x12640>
  415320:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415324:	mov	x0, x20
  415328:	add	x2, x2, #0x6f3
  41532c:	b	415294 <nftw@plt+0x125a4>
  415330:	ldrb	w0, [x20, #1138]
  415334:	cbz	w0, 415298 <nftw@plt+0x125a8>
  415338:	cbnz	w23, 415298 <nftw@plt+0x125a8>
  41533c:	ldurb	w3, [x22, #-1]
  415340:	mov	x0, x20
  415344:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415348:	mov	w1, #0x6                   	// #6
  41534c:	add	x2, x2, #0x72d
  415350:	bl	41c080 <nftw@plt+0x19390>
  415354:	b	415298 <nftw@plt+0x125a8>
  415358:	mov	w3, #0x8                   	// #8
  41535c:	b	4152c4 <nftw@plt+0x125d4>
  415360:	mov	x0, x27
  415364:	bl	4151c0 <nftw@plt+0x124d0>
  415368:	lsr	x0, x0, #32
  41536c:	str	w0, [x26, #4]
  415370:	ldrb	w0, [x6, w7, sxtw]
  415374:	subs	w3, w3, #0x1
  415378:	add	w19, w0, w19, lsl #4
  41537c:	b.eq	41538c <nftw@plt+0x1269c>  // b.none
  415380:	ldr	x0, [sp, #104]
  415384:	cmp	x28, x0
  415388:	b.cc	4152dc <nftw@plt+0x125ec>  // b.lo, b.ul, b.last
  41538c:	cmp	w23, #0x0
  415390:	cset	w0, ne  // ne = any
  415394:	cmp	w3, #0x0
  415398:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41539c:	b.eq	4153c4 <nftw@plt+0x126d4>  // b.none
  4153a0:	mov	w0, #0x0                   	// #0
  4153a4:	str	wzr, [x24]
  4153a8:	ldp	x19, x20, [sp, #16]
  4153ac:	ldp	x21, x22, [sp, #32]
  4153b0:	ldp	x23, x24, [sp, #48]
  4153b4:	ldp	x25, x26, [sp, #64]
  4153b8:	ldp	x27, x28, [sp, #80]
  4153bc:	ldp	x29, x30, [sp], #112
  4153c0:	ret
  4153c4:	str	x28, [x25]
  4153c8:	sub	x22, x22, #0x2
  4153cc:	cbz	w3, 4153fc <nftw@plt+0x1270c>
  4153d0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4153d4:	mov	x4, x22
  4153d8:	sub	w3, w28, w22
  4153dc:	add	x2, x2, #0x7a6
  4153e0:	mov	w19, #0x1                   	// #1
  4153e4:	mov	x0, x20
  4153e8:	mov	w1, #0x3                   	// #3
  4153ec:	bl	41c014 <nftw@plt+0x19324>
  4153f0:	mov	w0, #0x1                   	// #1
  4153f4:	str	w19, [x24]
  4153f8:	b	4153a8 <nftw@plt+0x126b8>
  4153fc:	cmp	w19, #0x9f
  415400:	b.hi	415478 <nftw@plt+0x12788>  // b.pmore
  415404:	ldrb	w1, [x20, #1120]
  415408:	cbnz	w1, 415420 <nftw@plt+0x12730>
  41540c:	and	w1, w19, #0xffffffdf
  415410:	cmp	w1, #0x40
  415414:	mov	w1, #0x24                  	// #36
  415418:	ccmp	w19, w1, #0x4, ne  // ne = any
  41541c:	b.ne	41548c <nftw@plt+0x1279c>  // b.any
  415420:	cmp	w19, #0x24
  415424:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  415428:	b.ne	4154a0 <nftw@plt+0x127b0>  // b.any
  41542c:	cbz	w23, 4153f0 <nftw@plt+0x12700>
  415430:	mov	w0, #0x10ffff              	// #1114111
  415434:	cmp	w19, w0
  415438:	b.hi	417b54 <nftw@plt+0x14e64>  // b.pmore
  41543c:	adrp	x2, 451000 <_obstack_memory_used@@Base+0x13fa8>
  415440:	add	x2, x2, #0x6d8
  415444:	mov	w3, #0x73c                 	// #1852
  415448:	mov	w0, #0x0                   	// #0
  41544c:	mov	w4, #0x2                   	// #2
  415450:	cmp	w3, w0
  415454:	b.eq	4154e8 <nftw@plt+0x127f8>  // b.none
  415458:	add	w1, w3, w0
  41545c:	sdiv	w1, w1, w4
  415460:	add	x6, x2, w1, sxtw #3
  415464:	ldr	w6, [x6, #4]
  415468:	cmp	w19, w6
  41546c:	b.ls	4154e0 <nftw@plt+0x127f0>  // b.plast
  415470:	add	w0, w1, #0x1
  415474:	b	415450 <nftw@plt+0x12760>
  415478:	tbnz	w19, #31, 41548c <nftw@plt+0x1279c>
  41547c:	mov	w18, #0xffff2800            	// #-55296
  415480:	add	w0, w19, w18
  415484:	cmp	w0, #0x7ff
  415488:	b.hi	41542c <nftw@plt+0x1273c>  // b.pmore
  41548c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415490:	mov	x4, x22
  415494:	sub	w3, w28, w22
  415498:	add	x2, x2, #0x7cf
  41549c:	b	4153e0 <nftw@plt+0x126f0>
  4154a0:	ldrb	w0, [x20, #1146]
  4154a4:	cbz	w0, 41543c <nftw@plt+0x1274c>
  4154a8:	ldrb	w0, [x20, #1148]
  4154ac:	cbz	w0, 4154d0 <nftw@plt+0x127e0>
  4154b0:	ldrb	w0, [x20, #18]
  4154b4:	cbnz	w0, 4154d0 <nftw@plt+0x127e0>
  4154b8:	strb	wzr, [x20, #1148]
  4154bc:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4154c0:	mov	x0, x20
  4154c4:	add	x2, x2, #0x7f7
  4154c8:	mov	w1, #0x2                   	// #2
  4154cc:	bl	41c014 <nftw@plt+0x19324>
  4154d0:	mov	w19, #0x24                  	// #36
  4154d4:	str	w19, [x21]
  4154d8:	strb	wzr, [x21, #4]
  4154dc:	b	4153f0 <nftw@plt+0x12700>
  4154e0:	mov	w3, w1
  4154e4:	b	415450 <nftw@plt+0x12760>
  4154e8:	ldrb	w1, [x20, #1154]
  4154ec:	cbz	w1, 415588 <nftw@plt+0x12898>
  4154f0:	ldrb	w1, [x20, #1164]
  4154f4:	cbnz	w1, 415590 <nftw@plt+0x128a0>
  4154f8:	ldrb	w1, [x20, #1152]
  4154fc:	cbnz	w1, 415598 <nftw@plt+0x128a8>
  415500:	ldrb	w1, [x20, #1120]
  415504:	mov	w3, #0x4                   	// #4
  415508:	cmp	w1, #0x0
  41550c:	mov	w1, #0xd                   	// #13
  415510:	csel	w1, w1, w3, eq  // eq = none
  415514:	sxtw	x3, w0
  415518:	sbfiz	x0, x0, #3, #32
  41551c:	ldrh	w25, [x2, x0]
  415520:	tst	w25, w1
  415524:	b.eq	417b54 <nftw@plt+0x14e64>  // b.none
  415528:	ldrb	w0, [x20, #1164]
  41552c:	cbnz	w0, 4155a0 <nftw@plt+0x128b0>
  415530:	ldrb	w0, [x20, #1152]
  415534:	cmp	w0, #0x0
  415538:	cset	w26, ne  // ne = any
  41553c:	lsl	w26, w26, #1
  415540:	add	x2, x2, x3, lsl #3
  415544:	ldrb	w27, [x2, #2]
  415548:	cbz	w27, 4155a8 <nftw@plt+0x128b8>
  41554c:	ldrb	w0, [x21, #4]
  415550:	cmp	w0, w27
  415554:	b.ls	4155a8 <nftw@plt+0x128b8>  // b.plast
  415558:	mov	w0, #0x3                   	// #3
  41555c:	str	w0, [x21, #8]
  415560:	strb	w27, [x21, #4]
  415564:	tst	w25, w26
  415568:	b.eq	4153f0 <nftw@plt+0x12700>  // b.none
  41556c:	cmp	w23, #0x1
  415570:	b.ne	4153f0 <nftw@plt+0x12700>  // b.any
  415574:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415578:	mov	x4, x22
  41557c:	sub	w3, w28, w22
  415580:	add	x2, x2, #0x869
  415584:	b	417b64 <nftw@plt+0x14e74>
  415588:	mov	w1, #0xd                   	// #13
  41558c:	b	415514 <nftw@plt+0x12824>
  415590:	mov	w1, #0x8                   	// #8
  415594:	b	415514 <nftw@plt+0x12824>
  415598:	mov	w1, #0x1                   	// #1
  41559c:	b	415514 <nftw@plt+0x12824>
  4155a0:	mov	w26, #0x10                  	// #16
  4155a4:	b	415540 <nftw@plt+0x12850>
  4155a8:	tbz	w25, #8, 417b30 <nftw@plt+0x14e40>
  4155ac:	mov	w17, #0xffffee9f            	// #-4449
  4155b0:	add	w0, w19, w17
  4155b4:	ldr	w1, [x21]
  4155b8:	cmp	w0, #0x14
  4155bc:	b.hi	4155e8 <nftw@plt+0x128f8>  // b.pmore
  4155c0:	mov	w16, #0xffffef00            	// #-4352
  4155c4:	add	w1, w1, w16
  4155c8:	cmp	w1, #0x12
  4155cc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4155d0:	ldr	w0, [x21, #8]
  4155d4:	mov	w1, #0x2                   	// #2
  4155d8:	cmp	w0, #0x2
  4155dc:	csel	w0, w0, w1, ge  // ge = tcont
  4155e0:	str	w0, [x21, #8]
  4155e4:	b	41561c <nftw@plt+0x1292c>
  4155e8:	mov	w15, #0xffffee58            	// #-4520
  4155ec:	add	w0, w19, w15
  4155f0:	cmp	w0, #0x1a
  4155f4:	b.hi	415628 <nftw@plt+0x12938>  // b.pmore
  4155f8:	mov	w14, #0xffff5400            	// #-44032
  4155fc:	add	w1, w1, w14
  415600:	mov	w0, #0x2ba3                	// #11171
  415604:	cmp	w1, w0
  415608:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41560c:	mov	w2, #0x1c                  	// #28
  415610:	udiv	w0, w1, w2
  415614:	msub	w1, w0, w2, w1
  415618:	cbz	w1, 4155d0 <nftw@plt+0x128e0>
  41561c:	cbnz	w27, 415560 <nftw@plt+0x12870>
  415620:	str	w19, [x21]
  415624:	b	415560 <nftw@plt+0x12870>
  415628:	cmp	w19, #0x345
  41562c:	b.hi	41565c <nftw@plt+0x1296c>  // b.pmore
  415630:	cmp	w19, #0x2ff
  415634:	b.ls	415698 <nftw@plt+0x129a8>  // b.plast
  415638:	sub	w2, w19, #0x300
  41563c:	cmp	w2, #0x45
  415640:	b.hi	415698 <nftw@plt+0x129a8>  // b.pmore
  415644:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415648:	add	x0, x0, #0xbcc
  41564c:	ldrh	w0, [x0, w2, uxtw #1]
  415650:	adr	x2, 41565c <nftw@plt+0x1296c>
  415654:	add	x0, x2, w0, sxth #2
  415658:	br	x0
  41565c:	cmp	w19, #0xcd5
  415660:	b.eq	417970 <nftw@plt+0x14c80>  // b.none
  415664:	b.hi	41571c <nftw@plt+0x12a2c>  // b.pmore
  415668:	cmp	w19, #0xb3e
  41566c:	b.eq	417928 <nftw@plt+0x14c38>  // b.none
  415670:	b.hi	4156d0 <nftw@plt+0x129e0>  // b.pmore
  415674:	cmp	w19, #0x93c
  415678:	b.eq	4178e4 <nftw@plt+0x14bf4>  // b.none
  41567c:	b.hi	4156b4 <nftw@plt+0x129c4>  // b.pmore
  415680:	cmp	w19, #0x654
  415684:	b.eq	417870 <nftw@plt+0x14b80>  // b.none
  415688:	cmp	w19, #0x655
  41568c:	b.eq	4178c4 <nftw@plt+0x14bd4>  // b.none
  415690:	cmp	w19, #0x653
  415694:	b.eq	417864 <nftw@plt+0x14b74>  // b.none
  415698:	mov	w3, w19
  41569c:	mov	x0, x20
  4156a0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4156a4:	mov	w1, #0x4                   	// #4
  4156a8:	add	x2, x2, #0x813
  4156ac:	bl	41c014 <nftw@plt+0x19324>
  4156b0:	b	41561c <nftw@plt+0x1292c>
  4156b4:	cmp	w19, #0x9be
  4156b8:	b.eq	41791c <nftw@plt+0x14c2c>  // b.none
  4156bc:	cmp	w19, #0x9d7
  4156c0:	b.ne	415698 <nftw@plt+0x129a8>  // b.any
  4156c4:	cmp	w1, #0x9c7
  4156c8:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4156cc:	b	41585c <nftw@plt+0x12b6c>
  4156d0:	cmp	w19, #0xbd7
  4156d4:	b.eq	417950 <nftw@plt+0x14c60>  // b.none
  4156d8:	b.hi	415700 <nftw@plt+0x12a10>  // b.pmore
  4156dc:	cmp	w19, #0xb57
  4156e0:	b.eq	417934 <nftw@plt+0x14c44>  // b.none
  4156e4:	cmp	w19, #0xbbe
  4156e8:	b.eq	417940 <nftw@plt+0x14c50>  // b.none
  4156ec:	cmp	w19, #0xb56
  4156f0:	b.ne	415698 <nftw@plt+0x129a8>  // b.any
  4156f4:	cmp	w1, #0xb47
  4156f8:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4156fc:	b	41585c <nftw@plt+0x12b6c>
  415700:	cmp	w19, #0xc56
  415704:	b.eq	417964 <nftw@plt+0x14c74>  // b.none
  415708:	cmp	w19, #0xcc2
  41570c:	b.ne	415698 <nftw@plt+0x129a8>  // b.any
  415710:	cmp	w1, #0xcc6
  415714:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415718:	b	41585c <nftw@plt+0x12b6c>
  41571c:	mov	w0, #0x102e                	// #4142
  415720:	cmp	w19, w0
  415724:	b.eq	4179d4 <nftw@plt+0x14ce4>  // b.none
  415728:	b.hi	41577c <nftw@plt+0x12a8c>  // b.pmore
  41572c:	cmp	w19, #0xdca
  415730:	b.eq	4179b0 <nftw@plt+0x14cc0>  // b.none
  415734:	b.hi	41575c <nftw@plt+0x12a6c>  // b.pmore
  415738:	cmp	w19, #0xd3e
  41573c:	b.eq	417994 <nftw@plt+0x14ca4>  // b.none
  415740:	cmp	w19, #0xd57
  415744:	b.eq	4179a4 <nftw@plt+0x14cb4>  // b.none
  415748:	cmp	w19, #0xcd6
  41574c:	b.ne	415698 <nftw@plt+0x129a8>  // b.any
  415750:	cmp	w1, #0xcc6
  415754:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415758:	b	41585c <nftw@plt+0x12b6c>
  41575c:	cmp	w19, #0xdcf
  415760:	b.eq	4179c4 <nftw@plt+0x14cd4>  // b.none
  415764:	cmp	w19, #0xddf
  415768:	b.ne	415698 <nftw@plt+0x129a8>  // b.any
  41576c:	sub	w1, w1, #0xdd9
  415770:	cmp	w1, #0x1
  415774:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415778:	b	41585c <nftw@plt+0x12b6c>
  41577c:	mov	w0, #0x309a                	// #12442
  415780:	cmp	w19, w0
  415784:	b.eq	417aa0 <nftw@plt+0x14db0>  // b.none
  415788:	b.hi	4157e4 <nftw@plt+0x12af4>  // b.pmore
  41578c:	mov	w0, #0x1b35                	// #6965
  415790:	cmp	w19, w0
  415794:	b.eq	4179e4 <nftw@plt+0x14cf4>  // b.none
  415798:	mov	w0, #0x3099                	// #12441
  41579c:	cmp	w19, w0
  4157a0:	b.ne	415698 <nftw@plt+0x129a8>  // b.any
  4157a4:	mov	w0, #0x30db                	// #12507
  4157a8:	cmp	w1, w0
  4157ac:	b.hi	417a74 <nftw@plt+0x14d84>  // b.pmore
  4157b0:	mov	w0, #0x309c                	// #12444
  4157b4:	cmp	w1, w0
  4157b8:	b.hi	417a4c <nftw@plt+0x14d5c>  // b.pmore
  4157bc:	mov	w4, #0xffffcfba            	// #-12358
  4157c0:	add	w1, w1, w4
  4157c4:	cmp	w1, #0x35
  4157c8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4157cc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4157d0:	add	x0, x0, #0xc58
  4157d4:	ldrb	w0, [x0, w1, uxtw]
  4157d8:	adr	x1, 4157e4 <nftw@plt+0x12af4>
  4157dc:	add	x0, x1, w0, sxtb #2
  4157e0:	br	x0
  4157e4:	mov	w0, #0x10ba                	// #4282
  4157e8:	movk	w0, #0x1, lsl #16
  4157ec:	cmp	w19, w0
  4157f0:	b.eq	417b08 <nftw@plt+0x14e18>  // b.none
  4157f4:	add	w0, w0, #0x6d
  4157f8:	cmp	w19, w0
  4157fc:	b.ne	415698 <nftw@plt+0x129a8>  // b.any
  415800:	sub	w1, w1, #0x11, lsl #12
  415804:	sub	w1, w1, #0x131
  415808:	cmp	w1, #0x1
  41580c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415810:	b	41585c <nftw@plt+0x12b6c>
  415814:	cmp	w1, #0x3bf
  415818:	b.hi	415a10 <nftw@plt+0x12d20>  // b.pmore
  41581c:	cmp	w1, #0x3b0
  415820:	b.hi	4158d0 <nftw@plt+0x12be0>  // b.pmore
  415824:	cmp	w1, #0x103
  415828:	b.hi	4159a8 <nftw@plt+0x12cb8>  // b.pmore
  41582c:	cmp	w1, #0xc9
  415830:	b.hi	415918 <nftw@plt+0x12c28>  // b.pmore
  415834:	cmp	w1, #0x79
  415838:	b.hi	415994 <nftw@plt+0x12ca4>  // b.pmore
  41583c:	cmp	w1, #0x64
  415840:	b.hi	415940 <nftw@plt+0x12c50>  // b.pmore
  415844:	cmp	w1, #0x59
  415848:	b.hi	415988 <nftw@plt+0x12c98>  // b.pmore
  41584c:	cmp	w1, #0x44
  415850:	b.hi	415964 <nftw@plt+0x12c74>  // b.pmore
  415854:	cmp	w1, #0x41
  415858:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  41585c:	mov	w0, #0x3                   	// #3
  415860:	str	w0, [x21, #8]
  415864:	b	41561c <nftw@plt+0x1292c>
  415868:	mov	w12, #0xffffe0b8            	// #-8008
  41586c:	add	w1, w1, w12
  415870:	mov	x0, #0x1                   	// #1
  415874:	lsl	x1, x0, x1
  415878:	mov	x0, #0x303                 	// #771
  41587c:	movk	x0, #0x302, lsl #16
  415880:	movk	x0, #0x3, lsl #32
  415884:	movk	x0, #0x300, lsl #48
  415888:	tst	x1, x0
  41588c:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415890:	b	41585c <nftw@plt+0x12b6c>
  415894:	mov	w11, #0xffffe0f8            	// #-7944
  415898:	add	w1, w1, w11
  41589c:	mov	x0, #0x1                   	// #1
  4158a0:	lsl	x1, x0, x1
  4158a4:	tst	x1, #0x303030303030303
  4158a8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4158ac:	b	41585c <nftw@plt+0x12b6c>
  4158b0:	sub	w1, w1, #0x415
  4158b4:	mov	x0, #0x1                   	// #1
  4158b8:	lsl	x1, x0, x1
  4158bc:	mov	x0, #0x9                   	// #9
  4158c0:	movk	x0, #0x9, lsl #32
  4158c4:	tst	x1, x0
  4158c8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4158cc:	b	41585c <nftw@plt+0x12b6c>
  4158d0:	sub	w1, w1, #0x3b1
  4158d4:	cmp	w1, #0xe
  4158d8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4158dc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4158e0:	add	x0, x0, #0xc90
  4158e4:	ldrh	w0, [x0, w1, uxtw #1]
  4158e8:	adr	x1, 4158f4 <nftw@plt+0x12c04>
  4158ec:	add	x0, x1, w0, sxth #2
  4158f0:	br	x0
  4158f4:	sub	w1, w1, #0x391
  4158f8:	cmp	w1, #0xe
  4158fc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415900:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415904:	add	x0, x0, #0xcb0
  415908:	ldrh	w0, [x0, w1, uxtw #1]
  41590c:	adr	x1, 415918 <nftw@plt+0x12c28>
  415910:	add	x0, x1, w0, sxth #2
  415914:	br	x0
  415918:	sub	w1, w1, #0xca
  41591c:	mov	x0, #0x1                   	// #1
  415920:	lsl	x1, x0, x1
  415924:	mov	x0, #0x401                 	// #1025
  415928:	movk	x0, #0x104, lsl #16
  41592c:	movk	x0, #0x401, lsl #32
  415930:	movk	x0, #0x304, lsl #48
  415934:	tst	x1, x0
  415938:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41593c:	b	41585c <nftw@plt+0x12b6c>
  415940:	sub	w1, w1, #0x65
  415944:	cmp	w1, #0x14
  415948:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41594c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415950:	add	x0, x0, #0xcd0
  415954:	ldrh	w0, [x0, w1, uxtw #1]
  415958:	adr	x1, 415964 <nftw@plt+0x12c74>
  41595c:	add	x0, x1, w0, sxth #2
  415960:	br	x0
  415964:	sub	w1, w1, #0x45
  415968:	cmp	w1, #0x14
  41596c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415970:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415974:	add	x0, x0, #0xcfc
  415978:	ldrh	w0, [x0, w1, uxtw #1]
  41597c:	adr	x1, 415988 <nftw@plt+0x12c98>
  415980:	add	x0, x1, w0, sxth #2
  415984:	br	x0
  415988:	cmp	w1, #0x61
  41598c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415990:	b	41585c <nftw@plt+0x12b6c>
  415994:	cmp	w1, #0xa8
  415998:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  41599c:	cmp	w1, #0xc2
  4159a0:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4159a4:	b	41585c <nftw@plt+0x12b6c>
  4159a8:	cmp	w1, #0x39f
  4159ac:	b.hi	4159fc <nftw@plt+0x12d0c>  // b.pmore
  4159b0:	cmp	w1, #0x390
  4159b4:	b.hi	4158f4 <nftw@plt+0x12c04>  // b.pmore
  4159b8:	cmp	w1, #0x1a1
  4159bc:	b.hi	4159ec <nftw@plt+0x12cfc>  // b.pmore
  4159c0:	cmp	w1, #0x19f
  4159c4:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  4159c8:	cmp	w1, #0x113
  4159cc:	b.hi	4159dc <nftw@plt+0x12cec>  // b.pmore
  4159d0:	cmp	w1, #0x111
  4159d4:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4159d8:	b	41585c <nftw@plt+0x12b6c>
  4159dc:	sub	w1, w1, #0x14c
  4159e0:	cmp	w1, #0x1
  4159e4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4159e8:	b	41585c <nftw@plt+0x12b6c>
  4159ec:	sub	w1, w1, #0x1af
  4159f0:	cmp	w1, #0x1
  4159f4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4159f8:	b	41585c <nftw@plt+0x12b6c>
  4159fc:	cmp	w1, #0x3a5
  415a00:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  415a04:	cmp	w1, #0x3a9
  415a08:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415a0c:	b	41585c <nftw@plt+0x12b6c>
  415a10:	mov	w0, #0x1f81                	// #8065
  415a14:	cmp	w1, w0
  415a18:	b.hi	415a7c <nftw@plt+0x12d8c>  // b.pmore
  415a1c:	mov	w0, #0x1f47                	// #8007
  415a20:	cmp	w1, w0
  415a24:	b.hi	415868 <nftw@plt+0x12b78>  // b.pmore
  415a28:	mov	w0, #0x1f41                	// #8001
  415a2c:	cmp	w1, w0
  415a30:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415a34:	mov	w0, #0x1f07                	// #7943
  415a38:	cmp	w1, w0
  415a3c:	b.hi	415894 <nftw@plt+0x12ba4>  // b.pmore
  415a40:	cmp	w1, #0x438
  415a44:	b.hi	415a68 <nftw@plt+0x12d78>  // b.pmore
  415a48:	cmp	w1, #0x414
  415a4c:	b.hi	4158b0 <nftw@plt+0x12bc0>  // b.pmore
  415a50:	cmp	w1, #0x3c5
  415a54:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  415a58:	sub	w1, w1, #0x3c9
  415a5c:	cmp	w1, #0x2
  415a60:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415a64:	b	41585c <nftw@plt+0x12b6c>
  415a68:	mov	w10, #0xffffe100            	// #-7936
  415a6c:	add	w1, w1, w10
  415a70:	cmp	w1, #0x1
  415a74:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415a78:	b	41585c <nftw@plt+0x12b6c>
  415a7c:	mov	w0, #0x1fbf                	// #8127
  415a80:	cmp	w1, w0
  415a84:	b.hi	415ac0 <nftw@plt+0x12dd0>  // b.pmore
  415a88:	mov	w0, #0x1f87                	// #8071
  415a8c:	cmp	w1, w0
  415a90:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415a94:	mov	w13, #0xffffe078            	// #-8072
  415a98:	add	w1, w1, w13
  415a9c:	mov	x0, #0x1                   	// #1
  415aa0:	lsl	x1, x0, x1
  415aa4:	mov	x0, #0x303                 	// #771
  415aa8:	movk	x0, #0x303, lsl #16
  415aac:	movk	x0, #0x803, lsl #32
  415ab0:	movk	x0, #0x90, lsl #48
  415ab4:	tst	x1, x0
  415ab8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415abc:	b	41585c <nftw@plt+0x12b6c>
  415ac0:	mov	w9, #0xffffe03d            	// #-8131
  415ac4:	add	w1, w1, w9
  415ac8:	cmp	w1, #0x3b
  415acc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415ad0:	mov	x0, #0x1                   	// #1
  415ad4:	lsl	x1, x0, x1
  415ad8:	mov	x0, #0x201                 	// #513
  415adc:	movk	x0, #0xa01, lsl #48
  415ae0:	tst	x1, x0
  415ae4:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415ae8:	b	41585c <nftw@plt+0x12b6c>
  415aec:	cmp	w1, #0x39f
  415af0:	b.hi	415cbc <nftw@plt+0x12fcc>  // b.pmore
  415af4:	cmp	w1, #0x390
  415af8:	b.hi	415bb4 <nftw@plt+0x12ec4>  // b.pmore
  415afc:	cmp	w1, #0xa8
  415b00:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  415b04:	b.hi	415bfc <nftw@plt+0x12f0c>  // b.pmore
  415b08:	sub	w1, w1, #0x41
  415b0c:	cmp	w1, #0x39
  415b10:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415b14:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415b18:	add	x0, x0, #0xd28
  415b1c:	ldrh	w0, [x0, w1, uxtw #1]
  415b20:	adr	x1, 415b2c <nftw@plt+0x12e3c>
  415b24:	add	x0, x1, w0, sxth #2
  415b28:	br	x0
  415b2c:	mov	w8, #0xffffe078            	// #-8072
  415b30:	add	w1, w1, w8
  415b34:	mov	x0, #0x1                   	// #1
  415b38:	lsl	x1, x0, x1
  415b3c:	mov	x0, #0x303                 	// #771
  415b40:	movk	x0, #0x303, lsl #16
  415b44:	movk	x0, #0x803, lsl #32
  415b48:	movk	x0, #0x90, lsl #48
  415b4c:	tst	x1, x0
  415b50:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415b54:	b	41585c <nftw@plt+0x12b6c>
  415b58:	mov	w7, #0xffffe0f8            	// #-7944
  415b5c:	add	w1, w1, w7
  415b60:	mov	x0, #0x1                   	// #1
  415b64:	lsl	x1, x0, x1
  415b68:	tst	x1, #0x303030303030303
  415b6c:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415b70:	b	41585c <nftw@plt+0x12b6c>
  415b74:	sub	w1, w1, #0x3c5
  415b78:	mov	x0, #0x1                   	// #1
  415b7c:	lsl	x1, x0, x1
  415b80:	mov	x0, #0x2071                	// #8305
  415b84:	tst	x1, x0
  415b88:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415b8c:	b	41585c <nftw@plt+0x12b6c>
  415b90:	sub	w1, w1, #0x3b1
  415b94:	cmp	w1, #0xe
  415b98:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415b9c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415ba0:	add	x0, x0, #0xd9c
  415ba4:	ldrh	w0, [x0, w1, uxtw #1]
  415ba8:	adr	x1, 415bb4 <nftw@plt+0x12ec4>
  415bac:	add	x0, x1, w0, sxth #2
  415bb0:	br	x0
  415bb4:	sub	w1, w1, #0x391
  415bb8:	cmp	w1, #0xe
  415bbc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415bc0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415bc4:	add	x0, x0, #0xdbc
  415bc8:	ldrh	w0, [x0, w1, uxtw #1]
  415bcc:	adr	x1, 415bd8 <nftw@plt+0x12ee8>
  415bd0:	add	x0, x1, w0, sxth #2
  415bd4:	br	x0
  415bd8:	sub	w1, w1, #0xef
  415bdc:	cmp	w1, #0x14
  415be0:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415be4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415be8:	add	x0, x0, #0xddc
  415bec:	ldrh	w0, [x0, w1, uxtw #1]
  415bf0:	adr	x1, 415bfc <nftw@plt+0x12f0c>
  415bf4:	add	x0, x1, w0, sxth #2
  415bf8:	br	x0
  415bfc:	cmp	w1, #0x103
  415c00:	b.hi	415c64 <nftw@plt+0x12f74>  // b.pmore
  415c04:	cmp	w1, #0xee
  415c08:	b.hi	415bd8 <nftw@plt+0x12ee8>  // b.pmore
  415c0c:	cmp	w1, #0xcf
  415c10:	b.hi	415c40 <nftw@plt+0x12f50>  // b.pmore
  415c14:	cmp	w1, #0xc1
  415c18:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415c1c:	sub	w1, w1, #0xc2
  415c20:	cmp	w1, #0xd
  415c24:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415c28:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415c2c:	add	x0, x0, #0xe08
  415c30:	ldrh	w0, [x0, w1, uxtw #1]
  415c34:	adr	x1, 415c40 <nftw@plt+0x12f50>
  415c38:	add	x0, x1, w0, sxth #2
  415c3c:	br	x0
  415c40:	sub	w1, w1, #0xd4
  415c44:	cmp	w1, #0x16
  415c48:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415c4c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415c50:	add	x0, x0, #0xe24
  415c54:	ldrh	w0, [x0, w1, uxtw #1]
  415c58:	adr	x1, 415c64 <nftw@plt+0x12f74>
  415c5c:	add	x0, x1, w0, sxth #2
  415c60:	br	x0
  415c64:	cmp	w1, #0x169
  415c68:	b.hi	415c98 <nftw@plt+0x12fa8>  // b.pmore
  415c6c:	cmp	w1, #0x167
  415c70:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  415c74:	cmp	w1, #0x113
  415c78:	b.hi	415c88 <nftw@plt+0x12f98>  // b.pmore
  415c7c:	cmp	w1, #0x111
  415c80:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415c84:	b	41585c <nftw@plt+0x12b6c>
  415c88:	sub	w1, w1, #0x14c
  415c8c:	cmp	w1, #0x1
  415c90:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415c94:	b	41585c <nftw@plt+0x12b6c>
  415c98:	cmp	w1, #0x1a1
  415c9c:	b.hi	415cac <nftw@plt+0x12fbc>  // b.pmore
  415ca0:	cmp	w1, #0x19f
  415ca4:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415ca8:	b	41585c <nftw@plt+0x12b6c>
  415cac:	sub	w1, w1, #0x1af
  415cb0:	cmp	w1, #0x1
  415cb4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415cb8:	b	41585c <nftw@plt+0x12b6c>
  415cbc:	mov	w0, #0x1f41                	// #8001
  415cc0:	cmp	w1, w0
  415cc4:	b.hi	415d4c <nftw@plt+0x1305c>  // b.pmore
  415cc8:	mov	w0, #0x1f07                	// #7943
  415ccc:	cmp	w1, w0
  415cd0:	b.hi	415b58 <nftw@plt+0x12e68>  // b.pmore
  415cd4:	cmp	w1, #0x3d2
  415cd8:	b.hi	415d08 <nftw@plt+0x13018>  // b.pmore
  415cdc:	cmp	w1, #0x3c4
  415ce0:	b.hi	415b74 <nftw@plt+0x12e84>  // b.pmore
  415ce4:	cmp	w1, #0x3bf
  415ce8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415cec:	cmp	w1, #0x3b0
  415cf0:	b.hi	415b90 <nftw@plt+0x12ea0>  // b.pmore
  415cf4:	cmp	w1, #0x3a5
  415cf8:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  415cfc:	cmp	w1, #0x3a9
  415d00:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415d04:	b	41585c <nftw@plt+0x12b6c>
  415d08:	cmp	w1, #0x43a
  415d0c:	b.hi	415d38 <nftw@plt+0x13048>  // b.pmore
  415d10:	cmp	w1, #0x412
  415d14:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415d18:	sub	w1, w1, #0x413
  415d1c:	mov	x0, #0x1                   	// #1
  415d20:	lsl	x1, x0, x1
  415d24:	mov	x0, #0x81                  	// #129
  415d28:	movk	x0, #0x81, lsl #32
  415d2c:	tst	x1, x0
  415d30:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415d34:	b	41585c <nftw@plt+0x12b6c>
  415d38:	mov	w6, #0xffffe100            	// #-7936
  415d3c:	add	w1, w1, w6
  415d40:	cmp	w1, #0x1
  415d44:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415d48:	b	41585c <nftw@plt+0x12b6c>
  415d4c:	mov	w0, #0x1fbf                	// #8127
  415d50:	cmp	w1, w0
  415d54:	b.hi	415d98 <nftw@plt+0x130a8>  // b.pmore
  415d58:	mov	w0, #0x1f87                	// #8071
  415d5c:	cmp	w1, w0
  415d60:	b.hi	415b2c <nftw@plt+0x12e3c>  // b.pmore
  415d64:	mov	w5, #0xffffe0b8            	// #-8008
  415d68:	add	w1, w1, w5
  415d6c:	cmp	w1, #0x39
  415d70:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415d74:	mov	x0, #0x1                   	// #1
  415d78:	lsl	x1, x0, x1
  415d7c:	mov	x0, #0x303                 	// #771
  415d80:	movk	x0, #0x302, lsl #16
  415d84:	movk	x0, #0x3, lsl #32
  415d88:	movk	x0, #0x300, lsl #48
  415d8c:	tst	x1, x0
  415d90:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415d94:	b	41585c <nftw@plt+0x12b6c>
  415d98:	mov	w4, #0xffffe03d            	// #-8131
  415d9c:	add	w1, w1, w4
  415da0:	cmp	w1, #0x3b
  415da4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415da8:	mov	x0, #0x1                   	// #1
  415dac:	lsl	x1, x0, x1
  415db0:	mov	x0, #0x201                 	// #513
  415db4:	movk	x0, #0xa01, lsl #48
  415db8:	tst	x1, x0
  415dbc:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415dc0:	b	41585c <nftw@plt+0x12b6c>
  415dc4:	cmp	w1, #0x7a
  415dc8:	b.hi	415df8 <nftw@plt+0x13108>  // b.pmore
  415dcc:	cmp	w1, #0x40
  415dd0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415dd4:	sub	w1, w1, #0x41
  415dd8:	cmp	w1, #0x39
  415ddc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415de0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415de4:	add	x0, x0, #0xe54
  415de8:	ldrh	w0, [x0, w1, uxtw #1]
  415dec:	adr	x1, 415df8 <nftw@plt+0x13108>
  415df0:	add	x0, x1, w0, sxth #2
  415df4:	br	x0
  415df8:	mov	w3, #0xffffe160            	// #-7840
  415dfc:	add	w1, w1, w3
  415e00:	cmp	w1, #0x2d
  415e04:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415e08:	mov	x0, #0x1                   	// #1
  415e0c:	lsl	x1, x0, x1
  415e10:	mov	x0, #0x3                   	// #3
  415e14:	movk	x0, #0x300, lsl #16
  415e18:	movk	x0, #0x3000, lsl #32
  415e1c:	tst	x1, x0
  415e20:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415e24:	b	41585c <nftw@plt+0x12b6c>
  415e28:	cmp	w1, #0x79
  415e2c:	b.hi	415ed0 <nftw@plt+0x131e0>  // b.pmore
  415e30:	cmp	w1, #0x64
  415e34:	b.hi	415e7c <nftw@plt+0x1318c>  // b.pmore
  415e38:	cmp	w1, #0x59
  415e3c:	b.hi	415ec4 <nftw@plt+0x131d4>  // b.pmore
  415e40:	cmp	w1, #0x44
  415e44:	b.hi	415ea0 <nftw@plt+0x131b0>  // b.pmore
  415e48:	cmp	w1, #0x41
  415e4c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415e50:	b	41585c <nftw@plt+0x12b6c>
  415e54:	sub	w1, w1, #0xca
  415e58:	mov	x0, #0x1                   	// #1
  415e5c:	lsl	x1, x0, x1
  415e60:	mov	x0, #0x401                 	// #1025
  415e64:	movk	x0, #0x100, lsl #16
  415e68:	movk	x0, #0x401, lsl #32
  415e6c:	movk	x0, #0x300, lsl #48
  415e70:	tst	x1, x0
  415e74:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415e78:	b	41585c <nftw@plt+0x12b6c>
  415e7c:	sub	w1, w1, #0x65
  415e80:	cmp	w1, #0x14
  415e84:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415e88:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415e8c:	add	x0, x0, #0xec8
  415e90:	ldrh	w0, [x0, w1, uxtw #1]
  415e94:	adr	x1, 415ea0 <nftw@plt+0x131b0>
  415e98:	add	x0, x1, w0, sxth #2
  415e9c:	br	x0
  415ea0:	sub	w1, w1, #0x45
  415ea4:	cmp	w1, #0x14
  415ea8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415eac:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415eb0:	add	x0, x0, #0xef4
  415eb4:	ldrh	w0, [x0, w1, uxtw #1]
  415eb8:	adr	x1, 415ec4 <nftw@plt+0x131d4>
  415ebc:	add	x0, x1, w0, sxth #2
  415ec0:	br	x0
  415ec4:	cmp	w1, #0x61
  415ec8:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415ecc:	b	41585c <nftw@plt+0x12b6c>
  415ed0:	cmp	w1, #0x103
  415ed4:	b.hi	415eec <nftw@plt+0x131fc>  // b.pmore
  415ed8:	cmp	w1, #0xc9
  415edc:	b.hi	415e54 <nftw@plt+0x13164>  // b.pmore
  415ee0:	cmp	w1, #0xc2
  415ee4:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415ee8:	b	41585c <nftw@plt+0x12b6c>
  415eec:	cmp	w1, #0x1a1
  415ef0:	b.hi	415f00 <nftw@plt+0x13210>  // b.pmore
  415ef4:	cmp	w1, #0x19f
  415ef8:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415efc:	b	41585c <nftw@plt+0x12b6c>
  415f00:	sub	w1, w1, #0x1af
  415f04:	cmp	w1, #0x1
  415f08:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415f0c:	b	41585c <nftw@plt+0x12b6c>
  415f10:	cmp	w1, #0xfc
  415f14:	b.hi	416000 <nftw@plt+0x13310>  // b.pmore
  415f18:	cmp	w1, #0xc3
  415f1c:	b.hi	415f8c <nftw@plt+0x1329c>  // b.pmore
  415f20:	cmp	w1, #0x6f
  415f24:	b.hi	415fec <nftw@plt+0x132fc>  // b.pmore
  415f28:	cmp	w1, #0x60
  415f2c:	b.hi	415fb4 <nftw@plt+0x132c4>  // b.pmore
  415f30:	cmp	w1, #0x4f
  415f34:	b.hi	415fd8 <nftw@plt+0x132e8>  // b.pmore
  415f38:	cmp	w1, #0x40
  415f3c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  415f40:	sub	w1, w1, #0x41
  415f44:	cmp	w1, #0xe
  415f48:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415f4c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415f50:	add	x0, x0, #0xf20
  415f54:	ldrh	w0, [x0, w1, uxtw #1]
  415f58:	adr	x1, 415f64 <nftw@plt+0x13274>
  415f5c:	add	x0, x1, w0, sxth #2
  415f60:	br	x0
  415f64:	sub	w1, w1, #0x391
  415f68:	mov	x0, #0x1                   	// #1
  415f6c:	lsl	x1, x0, x1
  415f70:	mov	x0, #0x101                 	// #257
  415f74:	movk	x0, #0x10, lsl #16
  415f78:	movk	x0, #0x101, lsl #32
  415f7c:	movk	x0, #0x10, lsl #48
  415f80:	tst	x1, x0
  415f84:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415f88:	b	41585c <nftw@plt+0x12b6c>
  415f8c:	sub	w1, w1, #0xc4
  415f90:	mov	x0, #0x1                   	// #1
  415f94:	lsl	x1, x0, x1
  415f98:	mov	x0, #0x5                   	// #5
  415f9c:	movk	x0, #0x106, lsl #16
  415fa0:	movk	x0, #0x5, lsl #32
  415fa4:	movk	x0, #0x106, lsl #48
  415fa8:	tst	x1, x0
  415fac:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  415fb0:	b	41585c <nftw@plt+0x12b6c>
  415fb4:	sub	w1, w1, #0x61
  415fb8:	cmp	w1, #0xe
  415fbc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  415fc0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  415fc4:	add	x0, x0, #0xf40
  415fc8:	ldrh	w0, [x0, w1, uxtw #1]
  415fcc:	adr	x1, 415fd8 <nftw@plt+0x132e8>
  415fd0:	add	x0, x1, w0, sxth #2
  415fd4:	br	x0
  415fd8:	cmp	w1, #0x55
  415fdc:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  415fe0:	cmp	w1, #0x59
  415fe4:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415fe8:	b	41585c <nftw@plt+0x12b6c>
  415fec:	cmp	w1, #0x75
  415ff0:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  415ff4:	cmp	w1, #0x79
  415ff8:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  415ffc:	b	41585c <nftw@plt+0x12b6c>
  416000:	cmp	w1, #0x3c5
  416004:	b.hi	416040 <nftw@plt+0x13350>  // b.pmore
  416008:	cmp	w1, #0x390
  41600c:	b.hi	415f64 <nftw@plt+0x13274>  // b.pmore
  416010:	cmp	w1, #0x227
  416014:	b.hi	416030 <nftw@plt+0x13340>  // b.pmore
  416018:	cmp	w1, #0x225
  41601c:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416020:	sub	w1, w1, #0x1ea
  416024:	cmp	w1, #0x1
  416028:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41602c:	b	41585c <nftw@plt+0x12b6c>
  416030:	sub	w1, w1, #0x22e
  416034:	cmp	w1, #0x1
  416038:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41603c:	b	41585c <nftw@plt+0x12b6c>
  416040:	mov	w0, #0x1e37                	// #7735
  416044:	cmp	w1, w0
  416048:	b.hi	416080 <nftw@plt+0x13390>  // b.pmore
  41604c:	mov	w0, #0x1e35                	// #7733
  416050:	cmp	w1, w0
  416054:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416058:	sub	w1, w1, #0x418
  41605c:	cmp	w1, #0x2b
  416060:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416064:	mov	x0, #0x1                   	// #1
  416068:	lsl	x1, x0, x1
  41606c:	mov	x0, #0x801                 	// #2049
  416070:	movk	x0, #0x801, lsl #32
  416074:	tst	x1, x0
  416078:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41607c:	b	41585c <nftw@plt+0x12b6c>
  416080:	mov	w0, #0x1fb3                	// #8115
  416084:	cmp	w1, w0
  416088:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  41608c:	b.hi	4160a4 <nftw@plt+0x133b4>  // b.pmore
  416090:	mov	w2, #0xffffe1a6            	// #-7770
  416094:	add	w1, w1, w2
  416098:	cmp	w1, #0x1
  41609c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4160a0:	b	41585c <nftw@plt+0x12b6c>
  4160a4:	mov	w0, #0x1fbc                	// #8124
  4160a8:	cmp	w1, w0
  4160ac:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4160b0:	b	41585c <nftw@plt+0x12b6c>
  4160b4:	cmp	w1, #0x3c5
  4160b8:	b.hi	416178 <nftw@plt+0x13488>  // b.pmore
  4160bc:	cmp	w1, #0x390
  4160c0:	b.hi	416108 <nftw@plt+0x13418>  // b.pmore
  4160c4:	cmp	w1, #0x6f
  4160c8:	b.hi	416160 <nftw@plt+0x13470>  // b.pmore
  4160cc:	cmp	w1, #0x60
  4160d0:	b.hi	416130 <nftw@plt+0x13440>  // b.pmore
  4160d4:	cmp	w1, #0x4f
  4160d8:	b.hi	416154 <nftw@plt+0x13464>  // b.pmore
  4160dc:	cmp	w1, #0x40
  4160e0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4160e4:	sub	w1, w1, #0x41
  4160e8:	cmp	w1, #0xe
  4160ec:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4160f0:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4160f4:	add	x0, x0, #0xf60
  4160f8:	ldrh	w0, [x0, w1, uxtw #1]
  4160fc:	adr	x1, 416108 <nftw@plt+0x13418>
  416100:	add	x0, x1, w0, sxth #2
  416104:	br	x0
  416108:	sub	w1, w1, #0x391
  41610c:	mov	x0, #0x1                   	// #1
  416110:	lsl	x1, x0, x1
  416114:	mov	x0, #0x101                 	// #257
  416118:	movk	x0, #0x10, lsl #16
  41611c:	movk	x0, #0x101, lsl #32
  416120:	movk	x0, #0x10, lsl #48
  416124:	tst	x1, x0
  416128:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41612c:	b	41585c <nftw@plt+0x12b6c>
  416130:	sub	w1, w1, #0x61
  416134:	cmp	w1, #0xe
  416138:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41613c:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  416140:	add	x0, x0, #0xf80
  416144:	ldrh	w0, [x0, w1, uxtw #1]
  416148:	adr	x1, 416154 <nftw@plt+0x13464>
  41614c:	add	x0, x1, w0, sxth #2
  416150:	br	x0
  416154:	cmp	w1, #0x55
  416158:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  41615c:	b	41585c <nftw@plt+0x12b6c>
  416160:	cmp	w1, #0x75
  416164:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  416168:	sub	w1, w1, #0x228
  41616c:	cmp	w1, #0x1
  416170:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416174:	b	41585c <nftw@plt+0x12b6c>
  416178:	cmp	w1, #0x443
  41617c:	b.hi	4161b0 <nftw@plt+0x134c0>  // b.pmore
  416180:	cmp	w1, #0x40f
  416184:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416188:	sub	w1, w1, #0x410
  41618c:	mov	x0, #0x1                   	// #1
  416190:	lsl	x1, x0, x1
  416194:	mov	x0, #0x161                 	// #353
  416198:	movk	x0, #0x8, lsl #16
  41619c:	movk	x0, #0x161, lsl #32
  4161a0:	movk	x0, #0x8, lsl #48
  4161a4:	tst	x1, x0
  4161a8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4161ac:	b	41585c <nftw@plt+0x12b6c>
  4161b0:	mov	w0, #0x1fb3                	// #8115
  4161b4:	cmp	w1, w0
  4161b8:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4161bc:	b.hi	4161d4 <nftw@plt+0x134e4>  // b.pmore
  4161c0:	mov	w0, #0xffffe160            	// #-7840
  4161c4:	add	w1, w1, w0
  4161c8:	cmp	w1, #0x1
  4161cc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4161d0:	b	41585c <nftw@plt+0x12b6c>
  4161d4:	mov	w0, #0x1fbc                	// #8124
  4161d8:	cmp	w1, w0
  4161dc:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4161e0:	b	41585c <nftw@plt+0x12b6c>
  4161e4:	cmp	w1, #0x7a
  4161e8:	b.hi	41621c <nftw@plt+0x1352c>  // b.pmore
  4161ec:	cmp	w1, #0x40
  4161f0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4161f4:	sub	w1, w1, #0x41
  4161f8:	mov	x0, #0x1                   	// #1
  4161fc:	lsl	x1, x0, x1
  416200:	mov	x0, #0xf1ff                	// #61951
  416204:	movk	x0, #0x3ce, lsl #16
  416208:	movk	x0, #0xf0ff, lsl #32
  41620c:	movk	x0, #0x3ce, lsl #48
  416210:	tst	x1, x0
  416214:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416218:	b	41561c <nftw@plt+0x1292c>
  41621c:	cmp	w1, #0x17f
  416220:	b.hi	41624c <nftw@plt+0x1355c>  // b.pmore
  416224:	cmp	w1, #0x159
  416228:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  41622c:	sub	w1, w1, #0x15a
  416230:	mov	x0, #0x1                   	// #1
  416234:	lsl	x1, x0, x1
  416238:	mov	x0, #0xc3                  	// #195
  41623c:	movk	x0, #0x20, lsl #32
  416240:	tst	x1, x0
  416244:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416248:	b	41585c <nftw@plt+0x12b6c>
  41624c:	mov	w30, #0xffffe19e            	// #-7778
  416250:	add	w1, w1, w30
  416254:	cmp	w1, #0x1
  416258:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41625c:	b	41585c <nftw@plt+0x12b6c>
  416260:	cmp	w1, #0x3d2
  416264:	b.hi	416364 <nftw@plt+0x13674>  // b.pmore
  416268:	cmp	w1, #0x398
  41626c:	b.hi	4162f4 <nftw@plt+0x13604>  // b.pmore
  416270:	cmp	w1, #0x79
  416274:	b.hi	41633c <nftw@plt+0x1364c>  // b.pmore
  416278:	cmp	w1, #0x60
  41627c:	b.hi	416318 <nftw@plt+0x13628>  // b.pmore
  416280:	cmp	w1, #0x41
  416284:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  416288:	sub	w1, w1, #0x45
  41628c:	cmp	w1, #0x14
  416290:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416294:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  416298:	add	x0, x0, #0xfa0
  41629c:	ldrh	w0, [x0, w1, uxtw #1]
  4162a0:	adr	x1, 4162ac <nftw@plt+0x135bc>
  4162a4:	add	x0, x1, w0, sxth #2
  4162a8:	br	x0
  4162ac:	sub	w1, w1, #0x443
  4162b0:	cmp	w1, #0xa
  4162b4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4162b8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4162bc:	add	x0, x0, #0xfcc
  4162c0:	ldrh	w0, [x0, w1, uxtw #1]
  4162c4:	adr	x1, 4162d0 <nftw@plt+0x135e0>
  4162c8:	add	x0, x1, w0, sxth #2
  4162cc:	br	x0
  4162d0:	sub	w1, w1, #0x427
  4162d4:	cmp	w1, #0x11
  4162d8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4162dc:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4162e0:	add	x0, x0, #0xfe4
  4162e4:	ldrh	w0, [x0, w1, uxtw #1]
  4162e8:	adr	x1, 4162f4 <nftw@plt+0x13604>
  4162ec:	add	x0, x1, w0, sxth #2
  4162f0:	br	x0
  4162f4:	sub	w1, w1, #0x399
  4162f8:	mov	x0, #0x1                   	// #1
  4162fc:	lsl	x1, x0, x1
  416300:	mov	x0, #0x1001                	// #4097
  416304:	movk	x0, #0x1001, lsl #32
  416308:	movk	x0, #0x200, lsl #48
  41630c:	tst	x1, x0
  416310:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416314:	b	41585c <nftw@plt+0x12b6c>
  416318:	sub	w1, w1, #0x61
  41631c:	cmp	w1, #0x18
  416320:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416324:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416328:	add	x0, x0, #0x8
  41632c:	ldrh	w0, [x0, w1, uxtw #1]
  416330:	adr	x1, 41633c <nftw@plt+0x1364c>
  416334:	add	x0, x1, w0, sxth #2
  416338:	br	x0
  41633c:	cmp	w1, #0xf5
  416340:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  416344:	b.hi	416354 <nftw@plt+0x13664>  // b.pmore
  416348:	cmp	w1, #0xd5
  41634c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  416350:	b	41585c <nftw@plt+0x12b6c>
  416354:	sub	w1, w1, #0x16a
  416358:	cmp	w1, #0x1
  41635c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416360:	b	41585c <nftw@plt+0x12b6c>
  416364:	cmp	w1, #0x438
  416368:	b.hi	41639c <nftw@plt+0x136ac>  // b.pmore
  41636c:	cmp	w1, #0x426
  416370:	b.hi	4162d0 <nftw@plt+0x135e0>  // b.pmore
  416374:	sub	w1, w1, #0x406
  416378:	cmp	w1, #0x1d
  41637c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416380:	mov	x0, #0x1                   	// #1
  416384:	lsl	x1, x0, x1
  416388:	mov	x0, #0x8401                	// #33793
  41638c:	movk	x0, #0x2107, lsl #16
  416390:	tst	x1, x0
  416394:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416398:	b	41585c <nftw@plt+0x12b6c>
  41639c:	cmp	w1, #0x44d
  4163a0:	b.hi	4163b8 <nftw@plt+0x136c8>  // b.pmore
  4163a4:	cmp	w1, #0x442
  4163a8:	b.hi	4162ac <nftw@plt+0x135bc>  // b.pmore
  4163ac:	cmp	w1, #0x43e
  4163b0:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4163b4:	b	41585c <nftw@plt+0x12b6c>
  4163b8:	cmp	w1, #0x4d9
  4163bc:	b.hi	4163d4 <nftw@plt+0x136e4>  // b.pmore
  4163c0:	cmp	w1, #0x4d7
  4163c4:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  4163c8:	cmp	w1, #0x456
  4163cc:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4163d0:	b	41585c <nftw@plt+0x12b6c>
  4163d4:	sub	w1, w1, #0x4e8
  4163d8:	cmp	w1, #0x1
  4163dc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4163e0:	b	41585c <nftw@plt+0x12b6c>
  4163e4:	cmp	w1, #0x79
  4163e8:	b.hi	416444 <nftw@plt+0x13754>  // b.pmore
  4163ec:	cmp	w1, #0x40
  4163f0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4163f4:	sub	w1, w1, #0x41
  4163f8:	mov	x0, #0x1                   	// #1
  4163fc:	lsl	x1, x0, x1
  416400:	mov	x0, #0x4111                	// #16657
  416404:	movk	x0, #0x110, lsl #16
  416408:	movk	x0, #0x4111, lsl #32
  41640c:	movk	x0, #0x110, lsl #48
  416410:	tst	x1, x0
  416414:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416418:	b	41585c <nftw@plt+0x12b6c>
  41641c:	sub	w1, w1, #0xca
  416420:	mov	x0, #0x1                   	// #1
  416424:	lsl	x1, x0, x1
  416428:	mov	x0, #0x401                 	// #1025
  41642c:	movk	x0, #0x100, lsl #16
  416430:	movk	x0, #0x401, lsl #32
  416434:	movk	x0, #0x300, lsl #48
  416438:	tst	x1, x0
  41643c:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416440:	b	41585c <nftw@plt+0x12b6c>
  416444:	cmp	w1, #0x103
  416448:	b.hi	416460 <nftw@plt+0x13770>  // b.pmore
  41644c:	cmp	w1, #0xc9
  416450:	b.hi	41641c <nftw@plt+0x1372c>  // b.pmore
  416454:	cmp	w1, #0xc2
  416458:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  41645c:	b	41585c <nftw@plt+0x12b6c>
  416460:	cmp	w1, #0x1a1
  416464:	b.hi	416474 <nftw@plt+0x13784>  // b.pmore
  416468:	cmp	w1, #0x19f
  41646c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416470:	b	41585c <nftw@plt+0x12b6c>
  416474:	sub	w1, w1, #0x1af
  416478:	cmp	w1, #0x1
  41647c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416480:	b	41585c <nftw@plt+0x12b6c>
  416484:	sub	w1, w1, #0x41
  416488:	cmp	w1, #0x38
  41648c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416490:	mov	x0, #0x1                   	// #1
  416494:	lsl	x1, x0, x1
  416498:	mov	x0, #0x1                   	// #1
  41649c:	movk	x0, #0x10, lsl #16
  4164a0:	movk	x0, #0x1, lsl #32
  4164a4:	movk	x0, #0x150, lsl #48
  4164a8:	tst	x1, x0
  4164ac:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4164b0:	b	41585c <nftw@plt+0x12b6c>
  4164b4:	cmp	w1, #0x75
  4164b8:	b.hi	4164e4 <nftw@plt+0x137f4>  // b.pmore
  4164bc:	cmp	w1, #0x4e
  4164c0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4164c4:	sub	w1, w1, #0x4f
  4164c8:	mov	x0, #0x1                   	// #1
  4164cc:	lsl	x1, x0, x1
  4164d0:	mov	x0, #0x41                  	// #65
  4164d4:	movk	x0, #0x41, lsl #32
  4164d8:	tst	x1, x0
  4164dc:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4164e0:	b	41585c <nftw@plt+0x12b6c>
  4164e4:	cmp	w1, #0x423
  4164e8:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4164ec:	cmp	w1, #0x443
  4164f0:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4164f4:	b	41585c <nftw@plt+0x12b6c>
  4164f8:	cmp	w1, #0x7a
  4164fc:	b.hi	41652c <nftw@plt+0x1383c>  // b.pmore
  416500:	cmp	w1, #0x40
  416504:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416508:	sub	w1, w1, #0x41
  41650c:	cmp	w1, #0x39
  416510:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416514:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416518:	add	x0, x0, #0x3c
  41651c:	ldrh	w0, [x0, w1, uxtw #1]
  416520:	adr	x1, 41652c <nftw@plt+0x1383c>
  416524:	add	x0, x1, w0, sxth #2
  416528:	br	x0
  41652c:	cmp	w1, #0x1b7
  416530:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  416534:	b.hi	416548 <nftw@plt+0x13858>  // b.pmore
  416538:	and	w1, w1, #0xffffffdf
  41653c:	cmp	w1, #0xdc
  416540:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  416544:	b	41585c <nftw@plt+0x12b6c>
  416548:	cmp	w1, #0x292
  41654c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  416550:	b	41585c <nftw@plt+0x12b6c>
  416554:	cmp	w1, #0x75
  416558:	b.hi	41658c <nftw@plt+0x1389c>  // b.pmore
  41655c:	cmp	w1, #0x40
  416560:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416564:	sub	w1, w1, #0x41
  416568:	mov	x0, #0x1                   	// #1
  41656c:	lsl	x1, x0, x1
  416570:	mov	x0, #0x4111                	// #16657
  416574:	movk	x0, #0x12, lsl #16
  416578:	movk	x0, #0x4111, lsl #32
  41657c:	movk	x0, #0x12, lsl #48
  416580:	tst	x1, x0
  416584:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416588:	b	41585c <nftw@plt+0x12b6c>
  41658c:	sub	w1, w1, #0x474
  416590:	cmp	w1, #0x1
  416594:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416598:	b	41585c <nftw@plt+0x12b6c>
  41659c:	sub	w1, w1, #0x41
  4165a0:	cmp	w1, #0x34
  4165a4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4165a8:	mov	x0, #0x1                   	// #1
  4165ac:	lsl	x1, x0, x1
  4165b0:	mov	x0, #0x4111                	// #16657
  4165b4:	movk	x0, #0x12, lsl #16
  4165b8:	movk	x0, #0x4111, lsl #32
  4165bc:	movk	x0, #0x12, lsl #48
  4165c0:	tst	x1, x0
  4165c4:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4165c8:	b	41585c <nftw@plt+0x12b6c>
  4165cc:	cmp	w1, #0x3c9
  4165d0:	b.hi	416678 <nftw@plt+0x13988>  // b.pmore
  4165d4:	cmp	w1, #0x3be
  4165d8:	b.hi	416630 <nftw@plt+0x13940>  // b.pmore
  4165dc:	cmp	w1, #0x3a9
  4165e0:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4165e4:	b.hi	416654 <nftw@plt+0x13964>  // b.pmore
  4165e8:	sub	w1, w1, #0x391
  4165ec:	cmp	w1, #0xe
  4165f0:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4165f4:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4165f8:	add	x0, x0, #0xb0
  4165fc:	ldrh	w0, [x0, w1, uxtw #1]
  416600:	adr	x1, 41660c <nftw@plt+0x1391c>
  416604:	add	x0, x1, w0, sxth #2
  416608:	br	x0
  41660c:	mov	w18, #0xffffe03d            	// #-8131
  416610:	add	w1, w1, w18
  416614:	mov	x0, #0x1                   	// #1
  416618:	lsl	x1, x0, x1
  41661c:	mov	x0, #0x201                 	// #513
  416620:	movk	x0, #0x201, lsl #48
  416624:	tst	x1, x0
  416628:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41662c:	b	41585c <nftw@plt+0x12b6c>
  416630:	sub	w1, w1, #0x3bf
  416634:	cmp	w1, #0xa
  416638:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41663c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416640:	add	x0, x0, #0xd0
  416644:	ldrh	w0, [x0, w1, uxtw #1]
  416648:	adr	x1, 416654 <nftw@plt+0x13964>
  41664c:	add	x0, x1, w0, sxth #2
  416650:	br	x0
  416654:	sub	w1, w1, #0x3b1
  416658:	cmp	w1, #0x8
  41665c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416660:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416664:	add	x0, x0, #0xe8
  416668:	ldrh	w0, [x0, w1, uxtw #1]
  41666c:	adr	x1, 416678 <nftw@plt+0x13988>
  416670:	add	x0, x1, w0, sxth #2
  416674:	br	x0
  416678:	mov	w0, #0x1ffc                	// #8188
  41667c:	cmp	w1, w0
  416680:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416684:	mov	w0, #0x1fc2                	// #8130
  416688:	cmp	w1, w0
  41668c:	b.hi	41660c <nftw@plt+0x1391c>  // b.pmore
  416690:	mov	w0, #0x1fb3                	// #8115
  416694:	cmp	w1, w0
  416698:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  41669c:	mov	w0, #0x1fbc                	// #8124
  4166a0:	cmp	w1, w0
  4166a4:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4166a8:	b	41585c <nftw@plt+0x12b6c>
  4166ac:	cmp	w1, #0x3b9
  4166b0:	b.hi	416738 <nftw@plt+0x13a48>  // b.pmore
  4166b4:	cmp	w1, #0x3b0
  4166b8:	b.hi	4166f0 <nftw@plt+0x13a00>  // b.pmore
  4166bc:	cmp	w1, #0x399
  4166c0:	b.hi	416714 <nftw@plt+0x13a24>  // b.pmore
  4166c4:	cmp	w1, #0x390
  4166c8:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4166cc:	sub	w1, w1, #0x391
  4166d0:	cmp	w1, #0x8
  4166d4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4166d8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4166dc:	add	x0, x0, #0xfc
  4166e0:	ldrh	w0, [x0, w1, uxtw #1]
  4166e4:	adr	x1, 4166f0 <nftw@plt+0x13a00>
  4166e8:	add	x0, x1, w0, sxth #2
  4166ec:	br	x0
  4166f0:	sub	w1, w1, #0x3b1
  4166f4:	cmp	w1, #0x8
  4166f8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4166fc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416700:	add	x0, x0, #0x110
  416704:	ldrh	w0, [x0, w1, uxtw #1]
  416708:	adr	x1, 416714 <nftw@plt+0x13a24>
  41670c:	add	x0, x1, w0, sxth #2
  416710:	br	x0
  416714:	sub	w1, w1, #0x39f
  416718:	cmp	w1, #0xa
  41671c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416720:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416724:	add	x0, x0, #0x124
  416728:	ldrh	w0, [x0, w1, uxtw #1]
  41672c:	adr	x1, 416738 <nftw@plt+0x13a48>
  416730:	add	x0, x1, w0, sxth #2
  416734:	br	x0
  416738:	mov	w0, #0x1fbc                	// #8124
  41673c:	cmp	w1, w0
  416740:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  416744:	b.hi	41678c <nftw@plt+0x13a9c>  // b.pmore
  416748:	cmp	w1, #0x3c9
  41674c:	b.hi	41677c <nftw@plt+0x13a8c>  // b.pmore
  416750:	cmp	w1, #0x3be
  416754:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416758:	sub	w1, w1, #0x3bf
  41675c:	cmp	w1, #0xa
  416760:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416764:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416768:	add	x0, x0, #0x13c
  41676c:	ldrh	w0, [x0, w1, uxtw #1]
  416770:	adr	x1, 41677c <nftw@plt+0x13a8c>
  416774:	add	x0, x1, w0, sxth #2
  416778:	br	x0
  41677c:	mov	w0, #0x1fb3                	// #8115
  416780:	cmp	w1, w0
  416784:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  416788:	b	41585c <nftw@plt+0x12b6c>
  41678c:	mov	w17, #0xffffe03d            	// #-8131
  416790:	add	w1, w1, w17
  416794:	cmp	w1, #0x39
  416798:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41679c:	mov	x0, #0x1                   	// #1
  4167a0:	lsl	x1, x0, x1
  4167a4:	mov	x0, #0x201                 	// #513
  4167a8:	movk	x0, #0x201, lsl #48
  4167ac:	tst	x1, x0
  4167b0:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4167b4:	b	41585c <nftw@plt+0x12b6c>
  4167b8:	cmp	w1, #0x171
  4167bc:	b.hi	416830 <nftw@plt+0x13b40>  // b.pmore
  4167c0:	cmp	w1, #0x167
  4167c4:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  4167c8:	cmp	w1, #0xfc
  4167cc:	b.hi	416820 <nftw@plt+0x13b30>  // b.pmore
  4167d0:	cmp	w1, #0xd1
  4167d4:	b.hi	416800 <nftw@plt+0x13b10>  // b.pmore
  4167d8:	sub	w1, w1, #0x4f
  4167dc:	cmp	w1, #0x26
  4167e0:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4167e4:	mov	x0, #0x1                   	// #1
  4167e8:	lsl	x1, x0, x1
  4167ec:	mov	x0, #0x41                  	// #65
  4167f0:	movk	x0, #0x41, lsl #32
  4167f4:	tst	x1, x0
  4167f8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4167fc:	b	41585c <nftw@plt+0x12b6c>
  416800:	sub	w1, w1, #0xd2
  416804:	mov	x0, #0x1                   	// #1
  416808:	lsl	x1, x0, x1
  41680c:	mov	x0, #0x79f                 	// #1951
  416810:	movk	x0, #0x79f, lsl #32
  416814:	tst	x1, x0
  416818:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41681c:	b	41585c <nftw@plt+0x12b6c>
  416820:	sub	w1, w1, #0x14c
  416824:	cmp	w1, #0x5
  416828:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41682c:	b	41585c <nftw@plt+0x12b6c>
  416830:	mov	w0, #0x1e53                	// #7763
  416834:	cmp	w1, w0
  416838:	b.hi	416884 <nftw@plt+0x13b94>  // b.pmore
  41683c:	mov	w0, #0x1e4b                	// #7755
  416840:	cmp	w1, w0
  416844:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416848:	cmp	w1, #0x1dc
  41684c:	b.hi	41685c <nftw@plt+0x13b6c>  // b.pmore
  416850:	cmp	w1, #0x1d0
  416854:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416858:	b	41585c <nftw@plt+0x12b6c>
  41685c:	sub	w1, w1, #0x20c
  416860:	cmp	w1, #0x25
  416864:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416868:	mov	x0, #0x1                   	// #1
  41686c:	lsl	x1, x0, x1
  416870:	mov	x0, #0x3fc0000000          	// #273804165120
  416874:	movk	x0, #0xf0f
  416878:	tst	x1, x0
  41687c:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416880:	b	41585c <nftw@plt+0x12b6c>
  416884:	mov	w0, #0x1ed9                	// #7897
  416888:	cmp	w1, w0
  41688c:	b.hi	4168b0 <nftw@plt+0x13bc0>  // b.pmore
  416890:	mov	w0, #0x1ecb                	// #7883
  416894:	cmp	w1, w0
  416898:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  41689c:	mov	w16, #0xffffe18e            	// #-7794
  4168a0:	add	w1, w1, w16
  4168a4:	cmp	w1, #0x9
  4168a8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4168ac:	b	41585c <nftw@plt+0x12b6c>
  4168b0:	mov	w15, #0xffffe11c            	// #-7908
  4168b4:	add	w1, w1, w15
  4168b8:	cmp	w1, #0x3
  4168bc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4168c0:	b	41585c <nftw@plt+0x12b6c>
  4168c4:	cmp	w1, #0x1a1
  4168c8:	b.hi	416a48 <nftw@plt+0x13d58>  // b.pmore
  4168cc:	cmp	w1, #0x167
  4168d0:	b.hi	416994 <nftw@plt+0x13ca4>  // b.pmore
  4168d4:	cmp	w1, #0x103
  4168d8:	b.hi	4169f0 <nftw@plt+0x13d00>  // b.pmore
  4168dc:	cmp	w1, #0xc7
  4168e0:	b.hi	4169b8 <nftw@plt+0x13cc8>  // b.pmore
  4168e4:	cmp	w1, #0x7a
  4168e8:	b.hi	4169e0 <nftw@plt+0x13cf0>  // b.pmore
  4168ec:	cmp	w1, #0x40
  4168f0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4168f4:	sub	w1, w1, #0x41
  4168f8:	cmp	w1, #0x39
  4168fc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416900:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416904:	add	x0, x0, #0x154
  416908:	ldrh	w0, [x0, w1, uxtw #1]
  41690c:	adr	x1, 416918 <nftw@plt+0x13c28>
  416910:	add	x0, x1, w0, sxth #2
  416914:	br	x0
  416918:	mov	w14, #0xffffe172            	// #-7822
  41691c:	add	w1, w1, w14
  416920:	mov	x0, #0x1                   	// #1
  416924:	lsl	x1, x0, x1
  416928:	mov	x0, #0xe0f                 	// #3599
  41692c:	movk	x0, #0x3ff0, lsl #16
  416930:	movk	x0, #0xf0ff, lsl #32
  416934:	movk	x0, #0xff, lsl #48
  416938:	tst	x1, x0
  41693c:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416940:	b	41561c <nftw@plt+0x1292c>
  416944:	mov	w12, #0xffffe1de            	// #-7714
  416948:	add	w1, w1, w12
  41694c:	mov	x0, #0x1                   	// #1
  416950:	lsl	x1, x0, x1
  416954:	mov	x0, #0xf033                	// #61491
  416958:	movk	x0, #0xf000, lsl #16
  41695c:	movk	x0, #0xfc0c, lsl #32
  416960:	movk	x0, #0x3, lsl #48
  416964:	tst	x1, x0
  416968:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41696c:	b	41585c <nftw@plt+0x12b6c>
  416970:	sub	w1, w1, #0x1f8
  416974:	mov	x0, #0x1                   	// #1
  416978:	lsl	x1, x0, x1
  41697c:	mov	x0, #0xffffffffffffff0f    	// #-241
  416980:	movk	x0, #0xc0c0, lsl #32
  416984:	movk	x0, #0xffc, lsl #48
  416988:	tst	x1, x0
  41698c:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416990:	b	41561c <nftw@plt+0x1292c>
  416994:	sub	w1, w1, #0x168
  416998:	mov	x0, #0x1                   	// #1
  41699c:	lsl	x1, x0, x1
  4169a0:	mov	x0, #0xf3ff                	// #62463
  4169a4:	movk	x0, #0x7f, lsl #16
  4169a8:	movk	x0, #0x300, lsl #48
  4169ac:	tst	x1, x0
  4169b0:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4169b4:	b	41585c <nftw@plt+0x12b6c>
  4169b8:	sub	w1, w1, #0xc8
  4169bc:	mov	x0, #0x1                   	// #1
  4169c0:	lsl	x1, x0, x1
  4169c4:	mov	x0, #0x7eff                	// #32511
  4169c8:	movk	x0, #0x3f3e, lsl #16
  4169cc:	movk	x0, #0x7eff, lsl #32
  4169d0:	movk	x0, #0xfbe, lsl #48
  4169d4:	tst	x1, x0
  4169d8:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  4169dc:	b	41561c <nftw@plt+0x1292c>
  4169e0:	sub	w1, w1, #0xc0
  4169e4:	cmp	w1, #0x5
  4169e8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4169ec:	b	41585c <nftw@plt+0x12b6c>
  4169f0:	cmp	w1, #0x125
  4169f4:	b.hi	416a24 <nftw@plt+0x13d34>  // b.pmore
  4169f8:	cmp	w1, #0x10d
  4169fc:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416a00:	sub	w1, w1, #0x10e
  416a04:	cmp	w1, #0x17
  416a08:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416a0c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416a10:	add	x0, x0, #0x1c8
  416a14:	ldrh	w0, [x0, w1, uxtw #1]
  416a18:	adr	x1, 416a24 <nftw@plt+0x13d34>
  416a1c:	add	x0, x1, w0, sxth #2
  416a20:	br	x0
  416a24:	sub	w1, w1, #0x128
  416a28:	cmp	w1, #0x3d
  416a2c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416a30:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416a34:	add	x0, x0, #0x1f8
  416a38:	ldrh	w0, [x0, w1, uxtw #1]
  416a3c:	adr	x1, 416a48 <nftw@plt+0x13d58>
  416a40:	add	x0, x1, w0, sxth #2
  416a44:	br	x0
  416a48:	mov	w0, #0x1e53                	// #7763
  416a4c:	cmp	w1, w0
  416a50:	b.hi	416acc <nftw@plt+0x13ddc>  // b.pmore
  416a54:	mov	w0, #0x1e21                	// #7713
  416a58:	cmp	w1, w0
  416a5c:	b.hi	416944 <nftw@plt+0x13c54>  // b.pmore
  416a60:	cmp	w1, #0x233
  416a64:	b.hi	416aa0 <nftw@plt+0x13db0>  // b.pmore
  416a68:	cmp	w1, #0x1f7
  416a6c:	b.hi	416970 <nftw@plt+0x13c80>  // b.pmore
  416a70:	sub	w1, w1, #0x1af
  416a74:	cmp	w1, #0x3a
  416a78:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416a7c:	mov	x0, #0x1                   	// #1
  416a80:	lsl	x1, x0, x1
  416a84:	mov	x0, #0x3                   	// #3
  416a88:	movk	x0, #0xc000, lsl #16
  416a8c:	movk	x0, #0xbfff, lsl #32
  416a90:	movk	x0, #0x607, lsl #48
  416a94:	tst	x1, x0
  416a98:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416a9c:	b	41585c <nftw@plt+0x12b6c>
  416aa0:	mov	w11, #0xffffe1fe            	// #-7682
  416aa4:	add	w1, w1, w11
  416aa8:	cmp	w1, #0x15
  416aac:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416ab0:	mov	x0, #0x1                   	// #1
  416ab4:	lsl	x1, x0, x1
  416ab8:	mov	x0, #0x303                 	// #771
  416abc:	movk	x0, #0x3c, lsl #16
  416ac0:	tst	x1, x0
  416ac4:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416ac8:	b	41585c <nftw@plt+0x12b6c>
  416acc:	mov	w0, #0x1ec5                	// #7877
  416ad0:	cmp	w1, w0
  416ad4:	b.hi	416b54 <nftw@plt+0x13e64>  // b.pmore
  416ad8:	mov	w0, #0x1e8d                	// #7821
  416adc:	cmp	w1, w0
  416ae0:	b.hi	416918 <nftw@plt+0x13c28>  // b.pmore
  416ae4:	mov	w0, #0x1e6b                	// #7787
  416ae8:	cmp	w1, w0
  416aec:	b.hi	416b24 <nftw@plt+0x13e34>  // b.pmore
  416af0:	mov	w0, #0x1e57                	// #7767
  416af4:	cmp	w1, w0
  416af8:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416afc:	mov	w13, #0xffffe1a8            	// #-7768
  416b00:	add	w1, w1, w13
  416b04:	cmp	w1, #0x13
  416b08:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416b0c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416b10:	add	x0, x0, #0x274
  416b14:	ldrh	w0, [x0, w1, uxtw #1]
  416b18:	adr	x1, 416b24 <nftw@plt+0x13e34>
  416b1c:	add	x0, x1, w0, sxth #2
  416b20:	br	x0
  416b24:	mov	w0, #0x1e7d                	// #7805
  416b28:	cmp	w1, w0
  416b2c:	b.hi	416b40 <nftw@plt+0x13e50>  // b.pmore
  416b30:	mov	w0, #0x1e77                	// #7799
  416b34:	cmp	w1, w0
  416b38:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416b3c:	b	41585c <nftw@plt+0x12b6c>
  416b40:	mov	w10, #0xffffe180            	// #-7808
  416b44:	add	w1, w1, w10
  416b48:	cmp	w1, #0x7
  416b4c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416b50:	b	41585c <nftw@plt+0x12b6c>
  416b54:	mov	w9, #0xffffe138            	// #-7880
  416b58:	add	w1, w1, w9
  416b5c:	cmp	w1, #0x31
  416b60:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416b64:	mov	x0, #0x1                   	// #1
  416b68:	lsl	x1, x0, x1
  416b6c:	mov	x0, #0xffc3                	// #65475
  416b70:	movk	x0, #0xc3fc, lsl #16
  416b74:	movk	x0, #0xccff, lsl #32
  416b78:	movk	x0, #0x3, lsl #48
  416b7c:	tst	x1, x0
  416b80:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416b84:	b	41561c <nftw@plt+0x1292c>
  416b88:	cmp	w1, #0x171
  416b8c:	b.hi	416bc8 <nftw@plt+0x13ed8>  // b.pmore
  416b90:	cmp	w1, #0x167
  416b94:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416b98:	cmp	w1, #0xdc
  416b9c:	b.hi	416bb8 <nftw@plt+0x13ec8>  // b.pmore
  416ba0:	cmp	w1, #0xd8
  416ba4:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416ba8:	and	w1, w1, #0xffffffdf
  416bac:	cmp	w1, #0x55
  416bb0:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  416bb4:	b	41585c <nftw@plt+0x12b6c>
  416bb8:	sub	w1, w1, #0xf9
  416bbc:	cmp	w1, #0x3
  416bc0:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416bc4:	b	41585c <nftw@plt+0x12b6c>
  416bc8:	mov	w0, #0x1e7b                	// #7803
  416bcc:	cmp	w1, w0
  416bd0:	b.hi	416c04 <nftw@plt+0x13f14>  // b.pmore
  416bd4:	mov	w0, #0x1e77                	// #7799
  416bd8:	cmp	w1, w0
  416bdc:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416be0:	cmp	w1, #0x1dc
  416be4:	b.hi	416bf4 <nftw@plt+0x13f04>  // b.pmore
  416be8:	cmp	w1, #0x1d2
  416bec:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416bf0:	b	41585c <nftw@plt+0x12b6c>
  416bf4:	sub	w1, w1, #0x214
  416bf8:	cmp	w1, #0x3
  416bfc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416c00:	b	41585c <nftw@plt+0x12b6c>
  416c04:	mov	w8, #0xffffe11a            	// #-7910
  416c08:	add	w1, w1, w8
  416c0c:	cmp	w1, #0x1
  416c10:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416c14:	b	41585c <nftw@plt+0x12b6c>
  416c18:	cmp	w1, #0x1e1
  416c1c:	b.hi	416c84 <nftw@plt+0x13f94>  // b.pmore
  416c20:	cmp	w1, #0x1dd
  416c24:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416c28:	cmp	w1, #0xe5
  416c2c:	b.hi	416c60 <nftw@plt+0x13f70>  // b.pmore
  416c30:	cmp	w1, #0xdf
  416c34:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416c38:	cmp	w1, #0x61
  416c3c:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  416c40:	b.hi	416c50 <nftw@plt+0x13f60>  // b.pmore
  416c44:	cmp	w1, #0x41
  416c48:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  416c4c:	b	41585c <nftw@plt+0x12b6c>
  416c50:	sub	w1, w1, #0xc0
  416c54:	cmp	w1, #0x5
  416c58:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416c5c:	b	41585c <nftw@plt+0x12b6c>
  416c60:	cmp	w1, #0x103
  416c64:	b.hi	416c74 <nftw@plt+0x13f84>  // b.pmore
  416c68:	cmp	w1, #0xff
  416c6c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416c70:	b	41585c <nftw@plt+0x12b6c>
  416c74:	sub	w1, w1, #0x1cd
  416c78:	cmp	w1, #0x1
  416c7c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416c80:	b	41585c <nftw@plt+0x12b6c>
  416c84:	cmp	w1, #0x227
  416c88:	b.hi	416cb4 <nftw@plt+0x13fc4>  // b.pmore
  416c8c:	cmp	w1, #0x1f9
  416c90:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416c94:	sub	w1, w1, #0x1fa
  416c98:	mov	x0, #0x1                   	// #1
  416c9c:	lsl	x1, x0, x1
  416ca0:	mov	x0, #0x3c3                 	// #963
  416ca4:	movk	x0, #0x3000, lsl #32
  416ca8:	tst	x1, x0
  416cac:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416cb0:	b	41585c <nftw@plt+0x12b6c>
  416cb4:	mov	w0, #0x1eab                	// #7851
  416cb8:	cmp	w1, w0
  416cbc:	b.hi	416cd0 <nftw@plt+0x13fe0>  // b.pmore
  416cc0:	mov	w0, #0x1ea1                	// #7841
  416cc4:	cmp	w1, w0
  416cc8:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416ccc:	b	41585c <nftw@plt+0x12b6c>
  416cd0:	mov	w7, #0xffffe152            	// #-7854
  416cd4:	add	w1, w1, w7
  416cd8:	cmp	w1, #0x7
  416cdc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416ce0:	b	41585c <nftw@plt+0x12b6c>
  416ce4:	cmp	w1, #0x165
  416ce8:	b.hi	416d34 <nftw@plt+0x14044>  // b.pmore
  416cec:	cmp	w1, #0x159
  416cf0:	b.hi	416d08 <nftw@plt+0x14018>  // b.pmore
  416cf4:	cmp	w1, #0x54
  416cf8:	b.hi	416d24 <nftw@plt+0x14034>  // b.pmore
  416cfc:	cmp	w1, #0x52
  416d00:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416d04:	b	41585c <nftw@plt+0x12b6c>
  416d08:	sub	w1, w1, #0x15a
  416d0c:	mov	x0, #0x1                   	// #1
  416d10:	lsl	x1, x0, x1
  416d14:	mov	x0, #0xccf                 	// #3279
  416d18:	tst	x1, x0
  416d1c:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416d20:	b	41561c <nftw@plt+0x1292c>
  416d24:	sub	w1, w1, #0x73
  416d28:	cmp	w1, #0x1
  416d2c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416d30:	b	41585c <nftw@plt+0x12b6c>
  416d34:	mov	w6, #0xffffe1a0            	// #-7776
  416d38:	add	w1, w1, w6
  416d3c:	cmp	w1, #0x37
  416d40:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416d44:	mov	x0, #0x1                   	// #1
  416d48:	lsl	x1, x0, x1
  416d4c:	mov	x0, #0xcf3                 	// #3315
  416d50:	movk	x0, #0x80, lsl #48
  416d54:	tst	x1, x0
  416d58:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416d5c:	b	41585c <nftw@plt+0x12b6c>
  416d60:	cmp	w1, #0x165
  416d64:	b.hi	416e4c <nftw@plt+0x1415c>  // b.pmore
  416d68:	cmp	w1, #0x138
  416d6c:	b.hi	416dd0 <nftw@plt+0x140e0>  // b.pmore
  416d70:	cmp	w1, #0x74
  416d74:	b.hi	416e1c <nftw@plt+0x1412c>  // b.pmore
  416d78:	cmp	w1, #0x42
  416d7c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416d80:	sub	w1, w1, #0x43
  416d84:	cmp	w1, #0x31
  416d88:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416d8c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416d90:	add	x0, x0, #0x29c
  416d94:	ldrh	w0, [x0, w1, uxtw #1]
  416d98:	adr	x1, 416da4 <nftw@plt+0x140b4>
  416d9c:	add	x0, x1, w0, sxth #2
  416da0:	br	x0
  416da4:	mov	w5, #0xffffe1f6            	// #-7690
  416da8:	add	w1, w1, w5
  416dac:	mov	x0, #0x1                   	// #1
  416db0:	lsl	x1, x0, x1
  416db4:	mov	x0, #0xff3f                	// #65343
  416db8:	movk	x0, #0x3fc3, lsl #16
  416dbc:	movk	x0, #0xffc3, lsl #32
  416dc0:	movk	x0, #0xf, lsl #48
  416dc4:	tst	x1, x0
  416dc8:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416dcc:	b	41561c <nftw@plt+0x1292c>
  416dd0:	sub	w1, w1, #0x139
  416dd4:	cmp	w1, #0x2c
  416dd8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416ddc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  416de0:	add	x0, x0, #0x300
  416de4:	ldrh	w0, [x0, w1, uxtw #1]
  416de8:	adr	x1, 416df4 <nftw@plt+0x14104>
  416dec:	add	x0, x1, w0, sxth #2
  416df0:	br	x0
  416df4:	sub	w1, w1, #0xe8
  416df8:	mov	x0, #0x1                   	// #1
  416dfc:	lsl	x1, x0, x1
  416e00:	mov	x0, #0x20f                 	// #527
  416e04:	movk	x0, #0xc000, lsl #16
  416e08:	movk	x0, #0xfcff, lsl #32
  416e0c:	movk	x0, #0x33fc, lsl #48
  416e10:	tst	x1, x0
  416e14:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416e18:	b	41561c <nftw@plt+0x1292c>
  416e1c:	cmp	w1, #0x125
  416e20:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416e24:	cmp	w1, #0xe7
  416e28:	b.hi	416df4 <nftw@plt+0x14104>  // b.pmore
  416e2c:	cmp	w1, #0xcb
  416e30:	b.hi	416e40 <nftw@plt+0x14150>  // b.pmore
  416e34:	cmp	w1, #0xc7
  416e38:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416e3c:	b	41585c <nftw@plt+0x12b6c>
  416e40:	cmp	w1, #0xd1
  416e44:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  416e48:	b	41585c <nftw@plt+0x12b6c>
  416e4c:	mov	w0, #0x1e3d                	// #7741
  416e50:	cmp	w1, w0
  416e54:	b.hi	416e94 <nftw@plt+0x141a4>  // b.pmore
  416e58:	mov	w0, #0x1e09                	// #7689
  416e5c:	cmp	w1, w0
  416e60:	b.hi	416da4 <nftw@plt+0x140b4>  // b.pmore
  416e64:	sub	w1, w1, #0x1e6
  416e68:	cmp	w1, #0x39
  416e6c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416e70:	mov	x0, #0x1                   	// #1
  416e74:	lsl	x1, x0, x1
  416e78:	mov	x0, #0xc00f                	// #49167
  416e7c:	movk	x0, #0xc00c, lsl #16
  416e80:	movk	x0, #0x3c03, lsl #32
  416e84:	movk	x0, #0x33c, lsl #48
  416e88:	tst	x1, x0
  416e8c:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416e90:	b	41585c <nftw@plt+0x12b6c>
  416e94:	mov	w0, #0x1e97                	// #7831
  416e98:	cmp	w1, w0
  416e9c:	b.hi	416edc <nftw@plt+0x141ec>  // b.pmore
  416ea0:	mov	w0, #0x1e95                	// #7829
  416ea4:	cmp	w1, w0
  416ea8:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  416eac:	mov	w0, #0x1e4b                	// #7755
  416eb0:	cmp	w1, w0
  416eb4:	b.hi	416ec8 <nftw@plt+0x141d8>  // b.pmore
  416eb8:	mov	w0, #0x1e43                	// #7747
  416ebc:	cmp	w1, w0
  416ec0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  416ec4:	b	41585c <nftw@plt+0x12b6c>
  416ec8:	mov	w4, #0xffffe1a8            	// #-7768
  416ecc:	add	w1, w1, w4
  416ed0:	cmp	w1, #0x19
  416ed4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416ed8:	b	41585c <nftw@plt+0x12b6c>
  416edc:	mov	w3, #0xffffe148            	// #-7864
  416ee0:	add	w1, w1, w3
  416ee4:	cmp	w1, #0xf
  416ee8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416eec:	b	41585c <nftw@plt+0x12b6c>
  416ef0:	cmp	w1, #0x151
  416ef4:	b.hi	417004 <nftw@plt+0x14314>  // b.pmore
  416ef8:	cmp	w1, #0x119
  416efc:	b.hi	416f90 <nftw@plt+0x142a0>  // b.pmore
  416f00:	cmp	w1, #0xd6
  416f04:	b.hi	416fd4 <nftw@plt+0x142e4>  // b.pmore
  416f08:	cmp	w1, #0xbf
  416f0c:	b.hi	416fb4 <nftw@plt+0x142c4>  // b.pmore
  416f10:	sub	w1, w1, #0x41
  416f14:	cmp	w1, #0x34
  416f18:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416f1c:	mov	x0, #0x1                   	// #1
  416f20:	lsl	x1, x0, x1
  416f24:	mov	x0, #0x4111                	// #16657
  416f28:	movk	x0, #0x10, lsl #16
  416f2c:	movk	x0, #0x4111, lsl #32
  416f30:	movk	x0, #0x10, lsl #48
  416f34:	tst	x1, x0
  416f38:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416f3c:	b	41585c <nftw@plt+0x12b6c>
  416f40:	sub	w1, w1, #0x1fa
  416f44:	mov	x0, #0x1                   	// #1
  416f48:	lsl	x1, x0, x1
  416f4c:	mov	x0, #0xffc3                	// #65475
  416f50:	movk	x0, #0x3c3f, lsl #16
  416f54:	movk	x0, #0x3000, lsl #32
  416f58:	movk	x0, #0xff, lsl #48
  416f5c:	tst	x1, x0
  416f60:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416f64:	b	41561c <nftw@plt+0x1292c>
  416f68:	sub	w1, w1, #0x1af
  416f6c:	mov	x0, #0x1                   	// #1
  416f70:	lsl	x1, x0, x1
  416f74:	mov	x0, #0x3                   	// #3
  416f78:	movk	x0, #0xc000, lsl #16
  416f7c:	movk	x0, #0xbfff, lsl #32
  416f80:	movk	x0, #0x7, lsl #48
  416f84:	tst	x1, x0
  416f88:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416f8c:	b	41585c <nftw@plt+0x12b6c>
  416f90:	sub	w1, w1, #0x11a
  416f94:	mov	x0, #0x1                   	// #1
  416f98:	lsl	x1, x0, x1
  416f9c:	mov	x0, #0xc003                	// #49155
  416fa0:	movk	x0, #0x4f, lsl #16
  416fa4:	movk	x0, #0xfc, lsl #48
  416fa8:	tst	x1, x0
  416fac:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  416fb0:	b	41585c <nftw@plt+0x12b6c>
  416fb4:	sub	w1, w1, #0xc0
  416fb8:	mov	x0, #0x1                   	// #1
  416fbc:	lsl	x1, x0, x1
  416fc0:	mov	x0, #0xff3f                	// #65343
  416fc4:	movk	x0, #0x7c, lsl #16
  416fc8:	tst	x1, x0
  416fcc:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  416fd0:	b	41561c <nftw@plt+0x1292c>
  416fd4:	sub	w1, w1, #0xd9
  416fd8:	cmp	w1, #0x3e
  416fdc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  416fe0:	mov	x0, #0x1                   	// #1
  416fe4:	lsl	x1, x0, x1
  416fe8:	mov	x0, #0x9f8f                	// #40847
  416fec:	movk	x0, #0x3e7f, lsl #16
  416ff0:	movk	x0, #0x78f, lsl #32
  416ff4:	movk	x0, #0x7e00, lsl #48
  416ff8:	tst	x1, x0
  416ffc:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  417000:	b	41561c <nftw@plt+0x1292c>
  417004:	cmp	w1, #0x231
  417008:	b.hi	417048 <nftw@plt+0x14358>  // b.pmore
  41700c:	cmp	w1, #0x1f9
  417010:	b.hi	416f40 <nftw@plt+0x14250>  // b.pmore
  417014:	cmp	w1, #0x1e1
  417018:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41701c:	cmp	w1, #0x1ae
  417020:	b.hi	416f68 <nftw@plt+0x14278>  // b.pmore
  417024:	cmp	w1, #0x171
  417028:	b.hi	417038 <nftw@plt+0x14348>  // b.pmore
  41702c:	cmp	w1, #0x167
  417030:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417034:	b	41585c <nftw@plt+0x12b6c>
  417038:	sub	w1, w1, #0x1a0
  41703c:	cmp	w1, #0x1
  417040:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417044:	b	41585c <nftw@plt+0x12b6c>
  417048:	mov	w0, #0x1e53                	// #7763
  41704c:	cmp	w1, w0
  417050:	b.hi	417090 <nftw@plt+0x143a0>  // b.pmore
  417054:	mov	w0, #0x1e4b                	// #7755
  417058:	cmp	w1, w0
  41705c:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  417060:	mov	w2, #0xffffe200            	// #-7680
  417064:	add	w1, w1, w2
  417068:	cmp	w1, #0x2f
  41706c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417070:	mov	x0, #0x1                   	// #1
  417074:	lsl	x1, x0, x1
  417078:	mov	x0, #0x3                   	// #3
  41707c:	movk	x0, #0xff0, lsl #16
  417080:	movk	x0, #0xf000, lsl #32
  417084:	tst	x1, x0
  417088:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41708c:	b	41585c <nftw@plt+0x12b6c>
  417090:	mov	w0, #0x1e7b                	// #7803
  417094:	cmp	w1, w0
  417098:	b.hi	4170ac <nftw@plt+0x143bc>  // b.pmore
  41709c:	mov	w0, #0x1e71                	// #7793
  4170a0:	cmp	w1, w0
  4170a4:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4170a8:	b	41585c <nftw@plt+0x12b6c>
  4170ac:	mov	w0, #0xffffe160            	// #-7840
  4170b0:	add	w1, w1, w0
  4170b4:	cmp	w1, #0x51
  4170b8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4170bc:	b	41585c <nftw@plt+0x12b6c>
  4170c0:	cmp	w1, #0x148
  4170c4:	b.hi	4171f0 <nftw@plt+0x14500>  // b.pmore
  4170c8:	cmp	w1, #0x138
  4170cc:	b.hi	417158 <nftw@plt+0x14468>  // b.pmore
  4170d0:	cmp	w1, #0xdc
  4170d4:	b.hi	4171c0 <nftw@plt+0x144d0>  // b.pmore
  4170d8:	cmp	w1, #0xc7
  4170dc:	b.hi	41717c <nftw@plt+0x1448c>  // b.pmore
  4170e0:	cmp	w1, #0x55
  4170e4:	b.hi	41719c <nftw@plt+0x144ac>  // b.pmore
  4170e8:	cmp	w1, #0x43
  4170ec:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4170f0:	sub	w1, w1, #0x44
  4170f4:	cmp	w1, #0x11
  4170f8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4170fc:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417100:	add	x0, x0, #0x35c
  417104:	ldrh	w0, [x0, w1, uxtw #1]
  417108:	adr	x1, 417114 <nftw@plt+0x14424>
  41710c:	add	x0, x1, w0, sxth #2
  417110:	br	x0
  417114:	mov	w18, #0xffffe1f6            	// #-7690
  417118:	add	w1, w1, w18
  41711c:	mov	x0, #0x1                   	// #1
  417120:	lsl	x1, x0, x1
  417124:	mov	x0, #0x3c03                	// #15363
  417128:	movk	x0, #0xc00, lsl #48
  41712c:	tst	x1, x0
  417130:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417134:	b	41585c <nftw@plt+0x12b6c>
  417138:	sub	w1, w1, #0x1f8
  41713c:	mov	x0, #0x1                   	// #1
  417140:	lsl	x1, x0, x1
  417144:	mov	x0, #0xf003                	// #61443
  417148:	movk	x0, #0xf000, lsl #16
  41714c:	tst	x1, x0
  417150:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417154:	b	41585c <nftw@plt+0x12b6c>
  417158:	sub	w1, w1, #0x139
  41715c:	cmp	w1, #0xf
  417160:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417164:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417168:	add	x0, x0, #0x380
  41716c:	ldrh	w0, [x0, w1, uxtw #1]
  417170:	adr	x1, 41717c <nftw@plt+0x1448c>
  417174:	add	x0, x1, w0, sxth #2
  417178:	br	x0
  41717c:	sub	w1, w1, #0xc8
  417180:	mov	x0, #0x1                   	// #1
  417184:	lsl	x1, x0, x1
  417188:	mov	x0, #0x20f                 	// #527
  41718c:	movk	x0, #0x1e, lsl #16
  417190:	tst	x1, x0
  417194:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417198:	b	41585c <nftw@plt+0x12b6c>
  41719c:	sub	w1, w1, #0x64
  4171a0:	cmp	w1, #0x11
  4171a4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4171a8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4171ac:	add	x0, x0, #0x3a0
  4171b0:	ldrh	w0, [x0, w1, uxtw #1]
  4171b4:	adr	x1, 4171c0 <nftw@plt+0x144d0>
  4171b8:	add	x0, x1, w0, sxth #2
  4171bc:	br	x0
  4171c0:	sub	w1, w1, #0xe8
  4171c4:	cmp	w1, #0x33
  4171c8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4171cc:	mov	x0, #0x1                   	// #1
  4171d0:	lsl	x1, x0, x1
  4171d4:	mov	x0, #0x20f                 	// #527
  4171d8:	movk	x0, #0x1e, lsl #16
  4171dc:	movk	x0, #0xfcc0, lsl #32
  4171e0:	movk	x0, #0xc, lsl #48
  4171e4:	tst	x1, x0
  4171e8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4171ec:	b	41585c <nftw@plt+0x12b6c>
  4171f0:	mov	w0, #0x1e45                	// #7749
  4171f4:	cmp	w1, w0
  4171f8:	b.hi	417248 <nftw@plt+0x14558>  // b.pmore
  4171fc:	mov	w0, #0x1e09                	// #7689
  417200:	cmp	w1, w0
  417204:	b.hi	417114 <nftw@plt+0x14424>  // b.pmore
  417208:	cmp	w1, #0x217
  41720c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417210:	cmp	w1, #0x1f7
  417214:	b.hi	417138 <nftw@plt+0x14448>  // b.pmore
  417218:	cmp	w1, #0x171
  41721c:	b.hi	417238 <nftw@plt+0x14548>  // b.pmore
  417220:	cmp	w1, #0x167
  417224:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  417228:	sub	w1, w1, #0x164
  41722c:	cmp	w1, #0x1
  417230:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417234:	b	41585c <nftw@plt+0x12b6c>
  417238:	sub	w1, w1, #0x1d3
  41723c:	cmp	w1, #0x9
  417240:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417244:	b	41585c <nftw@plt+0x12b6c>
  417248:	mov	w0, #0x1e97                	// #7831
  41724c:	cmp	w1, w0
  417250:	b.hi	417288 <nftw@plt+0x14598>  // b.pmore
  417254:	mov	w0, #0x1e69                	// #7785
  417258:	cmp	w1, w0
  41725c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417260:	mov	w30, #0xffffe196            	// #-7786
  417264:	add	w1, w1, w30
  417268:	mov	x0, #0x1                   	// #1
  41726c:	lsl	x1, x0, x1
  417270:	mov	x0, #0xc003                	// #49155
  417274:	movk	x0, #0x3, lsl #16
  417278:	movk	x0, #0x2000, lsl #32
  41727c:	tst	x1, x0
  417280:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417284:	b	41585c <nftw@plt+0x12b6c>
  417288:	mov	w0, #0x1ec5                	// #7877
  41728c:	cmp	w1, w0
  417290:	b.hi	4172a4 <nftw@plt+0x145b4>  // b.pmore
  417294:	mov	w0, #0x1eb9                	// #7865
  417298:	cmp	w1, w0
  41729c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4172a0:	b	41585c <nftw@plt+0x12b6c>
  4172a4:	mov	w17, #0xffffe11a            	// #-7910
  4172a8:	add	w1, w1, w17
  4172ac:	cmp	w1, #0x1
  4172b0:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4172b4:	b	41585c <nftw@plt+0x12b6c>
  4172b8:	cmp	w1, #0x21f
  4172bc:	b.hi	4172f0 <nftw@plt+0x14600>  // b.pmore
  4172c0:	cmp	w1, #0x21d
  4172c4:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  4172c8:	cmp	w1, #0x68
  4172cc:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4172d0:	b.hi	4172e0 <nftw@plt+0x145f0>  // b.pmore
  4172d4:	cmp	w1, #0x48
  4172d8:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4172dc:	b	41585c <nftw@plt+0x12b6c>
  4172e0:	sub	w1, w1, #0x124
  4172e4:	cmp	w1, #0x1
  4172e8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4172ec:	b	41585c <nftw@plt+0x12b6c>
  4172f0:	mov	w0, #0x1e23                	// #7715
  4172f4:	cmp	w1, w0
  4172f8:	b.hi	41730c <nftw@plt+0x1461c>  // b.pmore
  4172fc:	mov	w0, #0x1e21                	// #7713
  417300:	cmp	w1, w0
  417304:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417308:	b	41585c <nftw@plt+0x12b6c>
  41730c:	mov	w16, #0xffffe1da            	// #-7718
  417310:	add	w1, w1, w16
  417314:	cmp	w1, #0x1
  417318:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41731c:	b	41585c <nftw@plt+0x12b6c>
  417320:	cmp	w1, #0x130
  417324:	b.hi	4173dc <nftw@plt+0x146ec>  // b.pmore
  417328:	cmp	w1, #0xf8
  41732c:	b.hi	41738c <nftw@plt+0x1469c>  // b.pmore
  417330:	cmp	w1, #0x75
  417334:	b.hi	4173b4 <nftw@plt+0x146c4>  // b.pmore
  417338:	cmp	w1, #0x44
  41733c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417340:	sub	w1, w1, #0x45
  417344:	mov	x0, #0x1                   	// #1
  417348:	lsl	x1, x0, x1
  41734c:	mov	x0, #0x11                  	// #17
  417350:	movk	x0, #0x1, lsl #16
  417354:	movk	x0, #0x11, lsl #32
  417358:	movk	x0, #0x1, lsl #48
  41735c:	tst	x1, x0
  417360:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417364:	b	41585c <nftw@plt+0x12b6c>
  417368:	mov	w15, #0xffffe146            	// #-7866
  41736c:	add	w1, w1, w15
  417370:	mov	x0, #0x1                   	// #1
  417374:	lsl	x1, x0, x1
  417378:	mov	x0, #0xcfff                	// #53247
  41737c:	movk	x0, #0x3000, lsl #32
  417380:	tst	x1, x0
  417384:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417388:	b	41585c <nftw@plt+0x12b6c>
  41738c:	sub	w1, w1, #0xf9
  417390:	mov	x0, #0x1                   	// #1
  417394:	lsl	x1, x0, x1
  417398:	mov	x0, #0xf                   	// #15
  41739c:	movk	x0, #0x7e00, lsl #16
  4173a0:	movk	x0, #0x8006, lsl #32
  4173a4:	movk	x0, #0x9f, lsl #48
  4173a8:	tst	x1, x0
  4173ac:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4173b0:	b	41585c <nftw@plt+0x12b6c>
  4173b4:	sub	w1, w1, #0xc8
  4173b8:	cmp	w1, #0x27
  4173bc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4173c0:	mov	x0, #0x1                   	// #1
  4173c4:	lsl	x1, x0, x1
  4173c8:	mov	x0, #0xff000000ff          	// #1095216660735
  4173cc:	movk	x0, #0x1e, lsl #16
  4173d0:	tst	x1, x0
  4173d4:	b.ne	41585c <nftw@plt+0x12b6c>  // b.any
  4173d8:	b	41561c <nftw@plt+0x1292c>
  4173dc:	mov	w0, #0x1e17                	// #7703
  4173e0:	cmp	w1, w0
  4173e4:	b.hi	41744c <nftw@plt+0x1475c>  // b.pmore
  4173e8:	mov	w0, #0x1e13                	// #7699
  4173ec:	cmp	w1, w0
  4173f0:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  4173f4:	cmp	w1, #0x1dc
  4173f8:	b.hi	417428 <nftw@plt+0x14738>  // b.pmore
  4173fc:	cmp	w1, #0x1d2
  417400:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  417404:	cmp	w1, #0x171
  417408:	b.hi	417418 <nftw@plt+0x14728>  // b.pmore
  41740c:	cmp	w1, #0x167
  417410:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417414:	b	41585c <nftw@plt+0x12b6c>
  417418:	sub	w1, w1, #0x1cf
  41741c:	cmp	w1, #0x1
  417420:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417424:	b	41585c <nftw@plt+0x12b6c>
  417428:	cmp	w1, #0x20b
  41742c:	b.hi	41743c <nftw@plt+0x1474c>  // b.pmore
  417430:	cmp	w1, #0x203
  417434:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417438:	b	41585c <nftw@plt+0x12b6c>
  41743c:	sub	w1, w1, #0x214
  417440:	cmp	w1, #0x3
  417444:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417448:	b	41585c <nftw@plt+0x12b6c>
  41744c:	mov	w0, #0x1ee7                	// #7911
  417450:	cmp	w1, w0
  417454:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417458:	mov	w0, #0x1eb9                	// #7865
  41745c:	cmp	w1, w0
  417460:	b.hi	417368 <nftw@plt+0x14678>  // b.pmore
  417464:	mov	w0, #0x1e2f                	// #7727
  417468:	cmp	w1, w0
  41746c:	b.hi	417480 <nftw@plt+0x14790>  // b.pmore
  417470:	mov	w0, #0x1e2d                	// #7725
  417474:	cmp	w1, w0
  417478:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  41747c:	b	41585c <nftw@plt+0x12b6c>
  417480:	mov	w14, #0xffffe188            	// #-7800
  417484:	add	w1, w1, w14
  417488:	cmp	w1, #0x3
  41748c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417490:	b	41585c <nftw@plt+0x12b6c>
  417494:	cmp	w1, #0x159
  417498:	b.hi	4175c0 <nftw@plt+0x148d0>  // b.pmore
  41749c:	cmp	w1, #0x138
  4174a0:	b.hi	417538 <nftw@plt+0x14848>  // b.pmore
  4174a4:	cmp	w1, #0x7a
  4174a8:	b.hi	41758c <nftw@plt+0x1489c>  // b.pmore
  4174ac:	cmp	w1, #0x61
  4174b0:	b.hi	41755c <nftw@plt+0x1486c>  // b.pmore
  4174b4:	cmp	w1, #0x54
  4174b8:	b.hi	417580 <nftw@plt+0x14890>  // b.pmore
  4174bc:	cmp	w1, #0x41
  4174c0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4174c4:	sub	w1, w1, #0x42
  4174c8:	cmp	w1, #0x12
  4174cc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4174d0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4174d4:	add	x0, x0, #0x3c4
  4174d8:	ldrh	w0, [x0, w1, uxtw #1]
  4174dc:	adr	x1, 4174e8 <nftw@plt+0x147f8>
  4174e0:	add	x0, x1, w0, sxth #2
  4174e4:	br	x0
  4174e8:	mov	w13, #0xffffe1dd            	// #-7715
  4174ec:	add	w1, w1, w13
  4174f0:	mov	x0, #0x1                   	// #1
  4174f4:	lsl	x1, x0, x1
  4174f8:	mov	x0, #0x6011                	// #24593
  4174fc:	movk	x0, #0x6, lsl #32
  417500:	movk	x0, #0x60, lsl #48
  417504:	tst	x1, x0
  417508:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41750c:	b	41585c <nftw@plt+0x12b6c>
  417510:	sub	w1, w1, #0x1e8
  417514:	mov	x0, #0x1                   	// #1
  417518:	lsl	x1, x0, x1
  41751c:	mov	x0, #0x3                   	// #3
  417520:	movk	x0, #0x3, lsl #16
  417524:	movk	x0, #0xf00, lsl #32
  417528:	movk	x0, #0x80, lsl #48
  41752c:	tst	x1, x0
  417530:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417534:	b	41585c <nftw@plt+0x12b6c>
  417538:	sub	w1, w1, #0x139
  41753c:	cmp	w1, #0x20
  417540:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417544:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417548:	add	x0, x0, #0x3ec
  41754c:	ldrh	w0, [x0, w1, uxtw #1]
  417550:	adr	x1, 41755c <nftw@plt+0x1486c>
  417554:	add	x0, x1, w0, sxth #2
  417558:	br	x0
  41755c:	sub	w1, w1, #0x62
  417560:	cmp	w1, #0x18
  417564:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417568:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  41756c:	add	x0, x0, #0x430
  417570:	ldrh	w0, [x0, w1, uxtw #1]
  417574:	adr	x1, 417580 <nftw@plt+0x14890>
  417578:	add	x0, x1, w0, sxth #2
  41757c:	br	x0
  417580:	cmp	w1, #0x5a
  417584:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  417588:	b	41585c <nftw@plt+0x12b6c>
  41758c:	cmp	w1, #0xd1
  417590:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  417594:	sub	w1, w1, #0xf1
  417598:	cmp	w1, #0x34
  41759c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4175a0:	mov	x0, #0x1                   	// #1
  4175a4:	lsl	x1, x0, x1
  4175a8:	mov	x0, #0x1                   	// #1
  4175ac:	movk	x0, #0x6000, lsl #16
  4175b0:	movk	x0, #0x10, lsl #48
  4175b4:	tst	x1, x0
  4175b8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4175bc:	b	41585c <nftw@plt+0x12b6c>
  4175c0:	mov	w0, #0x1e59                	// #7769
  4175c4:	cmp	w1, w0
  4175c8:	b.hi	41763c <nftw@plt+0x1494c>  // b.pmore
  4175cc:	mov	w0, #0x1e22                	// #7714
  4175d0:	cmp	w1, w0
  4175d4:	b.hi	4174e8 <nftw@plt+0x147f8>  // b.pmore
  4175d8:	cmp	w1, #0x21f
  4175dc:	b.hi	41760c <nftw@plt+0x1491c>  // b.pmore
  4175e0:	cmp	w1, #0x1e7
  4175e4:	b.hi	417510 <nftw@plt+0x14820>  // b.pmore
  4175e8:	cmp	w1, #0x165
  4175ec:	b.hi	4175fc <nftw@plt+0x1490c>  // b.pmore
  4175f0:	cmp	w1, #0x163
  4175f4:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4175f8:	b	41585c <nftw@plt+0x12b6c>
  4175fc:	sub	w1, w1, #0x179
  417600:	cmp	w1, #0x5
  417604:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417608:	b	41585c <nftw@plt+0x12b6c>
  41760c:	mov	w0, #0x1e03                	// #7683
  417610:	cmp	w1, w0
  417614:	b.hi	417628 <nftw@plt+0x14938>  // b.pmore
  417618:	mov	w0, #0x1e01                	// #7681
  41761c:	cmp	w1, w0
  417620:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417624:	b	41585c <nftw@plt+0x12b6c>
  417628:	mov	w12, #0xffffe1f6            	// #-7690
  41762c:	add	w1, w1, w12
  417630:	cmp	w1, #0x1
  417634:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417638:	b	41585c <nftw@plt+0x12b6c>
  41763c:	mov	w11, #0xffffe196            	// #-7786
  417640:	add	w1, w1, w11
  417644:	cmp	w1, #0x2d
  417648:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41764c:	mov	x0, #0x1                   	// #1
  417650:	lsl	x1, x0, x1
  417654:	mov	x0, #0x3                   	// #3
  417658:	movk	x0, #0x20c0, lsl #32
  41765c:	tst	x1, x0
  417660:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417664:	b	41585c <nftw@plt+0x12b6c>
  417668:	mov	w0, #0x1f81                	// #8065
  41766c:	cmp	w1, w0
  417670:	b.hi	41770c <nftw@plt+0x14a1c>  // b.pmore
  417674:	mov	w0, #0x1f4f                	// #8015
  417678:	cmp	w1, w0
  41767c:	b.hi	4176c8 <nftw@plt+0x149d8>  // b.pmore
  417680:	mov	w0, #0x1f39                	// #7993
  417684:	cmp	w1, w0
  417688:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41768c:	mov	w0, #0x1eff                	// #7935
  417690:	cmp	w1, w0
  417694:	b.hi	4176f0 <nftw@plt+0x14a00>  // b.pmore
  417698:	cmp	w1, #0xa8
  41769c:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4176a0:	sub	w1, w1, #0x3b1
  4176a4:	cmp	w1, #0x1a
  4176a8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4176ac:	mov	x0, #0x1                   	// #1
  4176b0:	lsl	x1, x0, x1
  4176b4:	mov	x0, #0x141                 	// #321
  4176b8:	movk	x0, #0x710, lsl #16
  4176bc:	tst	x1, x0
  4176c0:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4176c4:	b	41585c <nftw@plt+0x12b6c>
  4176c8:	mov	w9, #0xffffe0b0            	// #-8016
  4176cc:	add	w1, w1, w9
  4176d0:	mov	x0, #0x1                   	// #1
  4176d4:	lsl	x1, x0, x1
  4176d8:	mov	x0, #0x203                 	// #515
  4176dc:	movk	x0, #0x303, lsl #16
  4176e0:	movk	x0, #0x3, lsl #48
  4176e4:	tst	x1, x0
  4176e8:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4176ec:	b	41585c <nftw@plt+0x12b6c>
  4176f0:	mov	x0, #0x1                   	// #1
  4176f4:	lsl	x1, x0, x1
  4176f8:	mov	x0, #0x303030303030303     	// #217020518514230019
  4176fc:	movk	x0, #0x0, lsl #16
  417700:	tst	x1, x0
  417704:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417708:	b	41585c <nftw@plt+0x12b6c>
  41770c:	mov	w0, #0x1fbf                	// #8127
  417710:	cmp	w1, w0
  417714:	b.hi	417750 <nftw@plt+0x14a60>  // b.pmore
  417718:	mov	w0, #0x1f87                	// #8071
  41771c:	cmp	w1, w0
  417720:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417724:	mov	w10, #0xffffe078            	// #-8072
  417728:	add	w1, w1, w10
  41772c:	mov	x0, #0x1                   	// #1
  417730:	lsl	x1, x0, x1
  417734:	mov	x0, #0x303                 	// #771
  417738:	movk	x0, #0x303, lsl #16
  41773c:	movk	x0, #0x803, lsl #32
  417740:	movk	x0, #0x80, lsl #48
  417744:	tst	x1, x0
  417748:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41774c:	b	41585c <nftw@plt+0x12b6c>
  417750:	mov	w8, #0xffffe03d            	// #-8131
  417754:	add	w1, w1, w8
  417758:	cmp	w1, #0x3b
  41775c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417760:	mov	x0, #0x1                   	// #1
  417764:	lsl	x1, x0, x1
  417768:	mov	x0, #0x1                   	// #1
  41776c:	movk	x0, #0x801, lsl #48
  417770:	tst	x1, x0
  417774:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417778:	b	41585c <nftw@plt+0x12b6c>
  41777c:	cmp	w1, #0x3ce
  417780:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  417784:	b.hi	4177dc <nftw@plt+0x14aec>  // b.pmore
  417788:	cmp	w1, #0x3b7
  41778c:	b.hi	4177d0 <nftw@plt+0x14ae0>  // b.pmore
  417790:	cmp	w1, #0x3a8
  417794:	b.hi	4177ac <nftw@plt+0x14abc>  // b.pmore
  417798:	cmp	w1, #0x391
  41779c:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4177a0:	cmp	w1, #0x397
  4177a4:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4177a8:	b	41585c <nftw@plt+0x12b6c>
  4177ac:	sub	w1, w1, #0x3a9
  4177b0:	cmp	w1, #0xe
  4177b4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4177b8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  4177bc:	add	x0, x0, #0x464
  4177c0:	ldrh	w0, [x0, w1, uxtw #1]
  4177c4:	adr	x1, 4177d0 <nftw@plt+0x14ae0>
  4177c8:	add	x0, x1, w0, sxth #2
  4177cc:	br	x0
  4177d0:	cmp	w1, #0x3c9
  4177d4:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4177d8:	b	41585c <nftw@plt+0x12b6c>
  4177dc:	mov	w0, #0x1f7c                	// #8060
  4177e0:	cmp	w1, w0
  4177e4:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4177e8:	b.hi	417844 <nftw@plt+0x14b54>  // b.pmore
  4177ec:	mov	w0, #0x1f70                	// #8048
  4177f0:	cmp	w1, w0
  4177f4:	b.hi	417834 <nftw@plt+0x14b44>  // b.pmore
  4177f8:	mov	w0, #0x1f5f                	// #8031
  4177fc:	cmp	w1, w0
  417800:	b.hi	41585c <nftw@plt+0x12b6c>  // b.pmore
  417804:	mov	w0, #0x1f0f                	// #7951
  417808:	cmp	w1, w0
  41780c:	b.hi	417820 <nftw@plt+0x14b30>  // b.pmore
  417810:	mov	w0, #0x1eff                	// #7935
  417814:	cmp	w1, w0
  417818:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  41781c:	b	41585c <nftw@plt+0x12b6c>
  417820:	mov	w7, #0xffffe0e0            	// #-7968
  417824:	add	w1, w1, w7
  417828:	cmp	w1, #0xf
  41782c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417830:	b	41585c <nftw@plt+0x12b6c>
  417834:	mov	w0, #0x1f74                	// #8052
  417838:	cmp	w1, w0
  41783c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  417840:	b	41585c <nftw@plt+0x12b6c>
  417844:	mov	w0, #0x1fc6                	// #8134
  417848:	cmp	w1, w0
  41784c:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  417850:	and	w1, w1, #0xffffffbf
  417854:	mov	w0, #0x1fb6                	// #8118
  417858:	cmp	w1, w0
  41785c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  417860:	b	41585c <nftw@plt+0x12b6c>
  417864:	cmp	w1, #0x627
  417868:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  41786c:	b	41585c <nftw@plt+0x12b6c>
  417870:	cmp	w1, #0x64a
  417874:	b.hi	4178a0 <nftw@plt+0x14bb0>  // b.pmore
  417878:	cmp	w1, #0x626
  41787c:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417880:	sub	w1, w1, #0x627
  417884:	mov	x0, #0x1                   	// #1
  417888:	lsl	x1, x0, x1
  41788c:	mov	x0, #0x1                   	// #1
  417890:	movk	x0, #0xa, lsl #32
  417894:	tst	x1, x0
  417898:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  41789c:	b	41585c <nftw@plt+0x12b6c>
  4178a0:	sub	w1, w1, #0x6c1
  4178a4:	cmp	w1, #0x14
  4178a8:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4178ac:	mov	x0, #0x1                   	// #1
  4178b0:	lsl	x1, x0, x1
  4178b4:	add	x0, x0, #0x120, lsl #12
  4178b8:	tst	x1, x0
  4178bc:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  4178c0:	b	41585c <nftw@plt+0x12b6c>
  4178c4:	cmp	w1, #0x623
  4178c8:	b.hi	4178d8 <nftw@plt+0x14be8>  // b.pmore
  4178cc:	cmp	w1, #0x621
  4178d0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4178d4:	b	41585c <nftw@plt+0x12b6c>
  4178d8:	cmp	w1, #0x627
  4178dc:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4178e0:	b	41561c <nftw@plt+0x1292c>
  4178e4:	cmp	w1, #0x917
  4178e8:	b.hi	4178f8 <nftw@plt+0x14c08>  // b.pmore
  4178ec:	cmp	w1, #0x914
  4178f0:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4178f4:	b	41585c <nftw@plt+0x12b6c>
  4178f8:	sub	w1, w1, #0x91c
  4178fc:	cmp	w1, #0x17
  417900:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417904:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417908:	add	x0, x0, #0x484
  41790c:	ldrh	w0, [x0, w1, uxtw #1]
  417910:	adr	x1, 41791c <nftw@plt+0x14c2c>
  417914:	add	x0, x1, w0, sxth #2
  417918:	br	x0
  41791c:	cmp	w1, #0x9c7
  417920:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  417924:	b	41585c <nftw@plt+0x12b6c>
  417928:	cmp	w1, #0xb47
  41792c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  417930:	b	41585c <nftw@plt+0x12b6c>
  417934:	cmp	w1, #0xb47
  417938:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  41793c:	b	41585c <nftw@plt+0x12b6c>
  417940:	sub	w1, w1, #0xbc6
  417944:	cmp	w1, #0x1
  417948:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41794c:	b	41585c <nftw@plt+0x12b6c>
  417950:	cmp	w1, #0xb92
  417954:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  417958:	cmp	w1, #0xbc6
  41795c:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  417960:	b	41585c <nftw@plt+0x12b6c>
  417964:	cmp	w1, #0xc46
  417968:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  41796c:	b	41585c <nftw@plt+0x12b6c>
  417970:	sub	w1, w1, #0xcbf
  417974:	cmp	w1, #0xb
  417978:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  41797c:	mov	x0, #0x1                   	// #1
  417980:	lsl	x1, x0, x1
  417984:	mov	x0, #0x881                 	// #2177
  417988:	tst	x1, x0
  41798c:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417990:	b	41585c <nftw@plt+0x12b6c>
  417994:	sub	w1, w1, #0xd46
  417998:	cmp	w1, #0x1
  41799c:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4179a0:	b	41585c <nftw@plt+0x12b6c>
  4179a4:	cmp	w1, #0xd46
  4179a8:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4179ac:	b	41585c <nftw@plt+0x12b6c>
  4179b0:	cmp	w1, #0xdd9
  4179b4:	b.eq	41585c <nftw@plt+0x12b6c>  // b.none
  4179b8:	cmp	w1, #0xddc
  4179bc:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4179c0:	b	41585c <nftw@plt+0x12b6c>
  4179c4:	sub	w1, w1, #0xdd9
  4179c8:	cmp	w1, #0x1
  4179cc:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  4179d0:	b	41585c <nftw@plt+0x12b6c>
  4179d4:	mov	w0, #0x1025                	// #4133
  4179d8:	cmp	w1, w0
  4179dc:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  4179e0:	b	41585c <nftw@plt+0x12b6c>
  4179e4:	mov	w0, #0x1b11                	// #6929
  4179e8:	cmp	w1, w0
  4179ec:	b.hi	417a24 <nftw@plt+0x14d34>  // b.pmore
  4179f0:	mov	w0, #0x1b04                	// #6916
  4179f4:	cmp	w1, w0
  4179f8:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  4179fc:	mov	w6, #0xffffe4fb            	// #-6917
  417a00:	add	w1, w1, w6
  417a04:	cmp	w1, #0xc
  417a08:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417a0c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417a10:	add	x0, x0, #0x4b4
  417a14:	ldrh	w0, [x0, w1, uxtw #1]
  417a18:	adr	x1, 417a24 <nftw@plt+0x14d34>
  417a1c:	add	x0, x1, w0, sxth #2
  417a20:	br	x0
  417a24:	mov	w5, #0xffffe4c6            	// #-6970
  417a28:	add	w1, w1, w5
  417a2c:	cmp	w1, #0x8
  417a30:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417a34:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417a38:	add	x0, x0, #0x4d0
  417a3c:	ldrh	w0, [x0, w1, uxtw #1]
  417a40:	adr	x1, 417a4c <nftw@plt+0x14d5c>
  417a44:	add	x0, x1, w0, sxth #2
  417a48:	br	x0
  417a4c:	mov	w3, #0xffffcf63            	// #-12445
  417a50:	add	w1, w1, w3
  417a54:	cmp	w1, #0x3e
  417a58:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417a5c:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417a60:	add	x0, x0, #0x4e4
  417a64:	ldrh	w0, [x0, w1, uxtw #1]
  417a68:	adr	x1, 417a74 <nftw@plt+0x14d84>
  417a6c:	add	x0, x1, w0, sxth #2
  417a70:	br	x0
  417a74:	mov	w0, #0x30f2                	// #12530
  417a78:	cmp	w1, w0
  417a7c:	b.hi	417a90 <nftw@plt+0x14da0>  // b.pmore
  417a80:	mov	w0, #0x30ee                	// #12526
  417a84:	cmp	w1, w0
  417a88:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417a8c:	b	41585c <nftw@plt+0x12b6c>
  417a90:	mov	w0, #0x30fd                	// #12541
  417a94:	cmp	w1, w0
  417a98:	b.ne	41561c <nftw@plt+0x1292c>  // b.any
  417a9c:	b	41585c <nftw@plt+0x12b6c>
  417aa0:	mov	w0, #0x307b                	// #12411
  417aa4:	cmp	w1, w0
  417aa8:	b.hi	417ae0 <nftw@plt+0x14df0>  // b.pmore
  417aac:	mov	w0, #0x306e                	// #12398
  417ab0:	cmp	w1, w0
  417ab4:	b.ls	41561c <nftw@plt+0x1292c>  // b.plast
  417ab8:	mov	w2, #0xffffcf91            	// #-12399
  417abc:	add	w1, w1, w2
  417ac0:	cmp	w1, #0xc
  417ac4:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417ac8:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417acc:	add	x0, x0, #0x564
  417ad0:	ldrh	w0, [x0, w1, uxtw #1]
  417ad4:	adr	x1, 417ae0 <nftw@plt+0x14df0>
  417ad8:	add	x0, x1, w0, sxth #2
  417adc:	br	x0
  417ae0:	mov	w0, #0xffffcf31            	// #-12495
  417ae4:	add	w1, w1, w0
  417ae8:	cmp	w1, #0xc
  417aec:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417af0:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417af4:	add	x0, x0, #0x580
  417af8:	ldrh	w0, [x0, w1, uxtw #1]
  417afc:	adr	x1, 417b08 <nftw@plt+0x14e18>
  417b00:	add	x0, x1, w0, sxth #2
  417b04:	br	x0
  417b08:	sub	w1, w1, #0x11, lsl #12
  417b0c:	sub	w1, w1, #0x99
  417b10:	cmp	w1, #0xc
  417b14:	b.hi	41561c <nftw@plt+0x1292c>  // b.pmore
  417b18:	mov	x0, #0x1                   	// #1
  417b1c:	lsl	x1, x0, x1
  417b20:	mov	x0, #0x1005                	// #4101
  417b24:	tst	x1, x0
  417b28:	b.eq	41561c <nftw@plt+0x1292c>  // b.none
  417b2c:	b	41585c <nftw@plt+0x12b6c>
  417b30:	tbnz	w25, #7, 41561c <nftw@plt+0x1292c>
  417b34:	tbz	w25, #6, 417b4c <nftw@plt+0x14e5c>
  417b38:	ldr	w0, [x21, #8]
  417b3c:	cmp	w0, #0x0
  417b40:	csinc	w0, w0, wzr, gt
  417b44:	str	w0, [x21, #8]
  417b48:	b	41561c <nftw@plt+0x1292c>
  417b4c:	tbnz	w25, #5, 4155d0 <nftw@plt+0x128e0>
  417b50:	b	41585c <nftw@plt+0x12b6c>
  417b54:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417b58:	mov	x4, x22
  417b5c:	sub	w3, w28, w22
  417b60:	add	x2, x2, #0x832
  417b64:	mov	x0, x20
  417b68:	mov	w1, #0x3                   	// #3
  417b6c:	bl	41c014 <nftw@plt+0x19324>
  417b70:	b	4153f0 <nftw@plt+0x12700>
  417b74:	stp	x29, x30, [sp, #-336]!
  417b78:	mov	x29, sp
  417b7c:	add	x8, sp, #0x118
  417b80:	stp	x19, x20, [sp, #16]
  417b84:	stp	x21, x22, [sp, #32]
  417b88:	mov	x21, x0
  417b8c:	stp	x23, x24, [sp, #48]
  417b90:	mov	x24, x1
  417b94:	mov	w1, w4
  417b98:	stp	x25, x26, [sp, #64]
  417b9c:	mov	x26, x3
  417ba0:	stp	x27, x28, [sp, #80]
  417ba4:	str	x5, [sp, #160]
  417ba8:	str	x2, [sp, #176]
  417bac:	bl	41496c <nftw@plt+0x11c7c>
  417bb0:	ldr	x0, [sp, #280]
  417bb4:	str	x0, [sp, #104]
  417bb8:	ldr	x0, [sp, #288]
  417bbc:	cmp	x6, #0x0
  417bc0:	str	x0, [sp, #136]
  417bc4:	ldr	w0, [sp, #296]
  417bc8:	str	w0, [sp, #168]
  417bcc:	cset	w0, ne  // ne = any
  417bd0:	str	w0, [sp, #124]
  417bd4:	ldr	x0, [sp, #160]
  417bd8:	ldr	w1, [sp, #124]
  417bdc:	cmp	x0, #0x0
  417be0:	cset	w0, ne  // ne = any
  417be4:	cmp	w0, w1
  417be8:	b.eq	417c04 <nftw@plt+0x14f14>  // b.none
  417bec:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417bf0:	add	x2, x2, #0x8ad
  417bf4:	mov	w1, #0x5fc                 	// #1532
  417bf8:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417bfc:	add	x0, x0, #0x78f
  417c00:	bl	402d60 <nftw@plt+0x70>
  417c04:	mov	x23, x6
  417c08:	cbz	x26, 417c2c <nftw@plt+0x14f3c>
  417c0c:	ldr	w0, [x24]
  417c10:	mov	w1, #0x100                 	// #256
  417c14:	cmp	w0, #0x100
  417c18:	csel	w0, w0, w1, cs  // cs = hs, nlast
  417c1c:	str	x0, [sp, #264]
  417c20:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  417c24:	str	x0, [sp, #256]
  417c28:	str	xzr, [sp, #272]
  417c2c:	cmp	x26, #0x0
  417c30:	add	x0, sp, #0x100
  417c34:	csel	x27, x0, xzr, ne  // ne = any
  417c38:	ldrsw	x0, [sp, #168]
  417c3c:	mov	x1, #0x20                  	// #32
  417c40:	add	x24, x24, #0x8
  417c44:	cmp	x0, #0x20
  417c48:	mov	x20, #0x0                   	// #0
  417c4c:	csel	x0, x0, x1, ls  // ls = plast
  417c50:	mov	x1, #0x1                   	// #1
  417c54:	str	xzr, [sp, #128]
  417c58:	lsl	x0, x1, x0
  417c5c:	sub	x0, x0, #0x1
  417c60:	str	x0, [sp, #152]
  417c64:	ldr	w0, [sp, #152]
  417c68:	str	w0, [sp, #172]
  417c6c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  417c70:	add	x0, x0, #0xd9c
  417c74:	str	x0, [sp, #192]
  417c78:	ldr	x0, [sp, #128]
  417c7c:	ldr	x1, [sp, #176]
  417c80:	cmp	x0, x1
  417c84:	b.eq	4183c4 <nftw@plt+0x156d4>  // b.none
  417c88:	ldr	x0, [sp, #160]
  417c8c:	cbz	x0, 417c9c <nftw@plt+0x14fac>
  417c90:	ldr	x0, [sp, #128]
  417c94:	ldr	x1, [sp, #160]
  417c98:	add	x20, x1, x0, lsl #4
  417c9c:	ldr	x19, [x24]
  417ca0:	ldrb	w0, [x19]
  417ca4:	cmp	w0, #0x75
  417ca8:	b.ne	417d20 <nftw@plt+0x15030>  // b.any
  417cac:	cbz	x20, 417cb8 <nftw@plt+0x14fc8>
  417cb0:	mov	x0, x20
  417cb4:	bl	4151c0 <nftw@plt+0x124d0>
  417cb8:	ldrb	w0, [x19, #1]
  417cbc:	cmp	w0, #0x38
  417cc0:	b.eq	417ccc <nftw@plt+0x14fdc>  // b.none
  417cc4:	add	x19, x19, #0x1
  417cc8:	b	417cdc <nftw@plt+0x14fec>
  417ccc:	add	x19, x19, #0x2
  417cd0:	cbz	x20, 417cdc <nftw@plt+0x14fec>
  417cd4:	mov	x0, x20
  417cd8:	bl	4151c0 <nftw@plt+0x124d0>
  417cdc:	ldrb	w0, [x19]
  417ce0:	cmp	w0, #0x52
  417ce4:	b.ne	417df4 <nftw@plt+0x15104>  // b.any
  417ce8:	add	x19, x19, #0x2
  417cec:	cbz	x20, 417d00 <nftw@plt+0x15010>
  417cf0:	mov	x0, x20
  417cf4:	bl	4151c0 <nftw@plt+0x124d0>
  417cf8:	mov	x0, x20
  417cfc:	bl	4151c0 <nftw@plt+0x124d0>
  417d00:	mov	x22, x19
  417d04:	ldrb	w0, [x22], #1
  417d08:	cmp	w0, #0x28
  417d0c:	b.eq	417d34 <nftw@plt+0x15044>  // b.none
  417d10:	cbz	x20, 417d04 <nftw@plt+0x15014>
  417d14:	mov	x0, x20
  417d18:	bl	4151c0 <nftw@plt+0x124d0>
  417d1c:	b	417d04 <nftw@plt+0x15014>
  417d20:	cmp	w0, #0x4c
  417d24:	b.eq	417cc4 <nftw@plt+0x14fd4>  // b.none
  417d28:	cmp	w0, #0x55
  417d2c:	b.ne	417cdc <nftw@plt+0x14fec>  // b.any
  417d30:	b	417cc4 <nftw@plt+0x14fd4>
  417d34:	cbz	x20, 417d40 <nftw@plt+0x15050>
  417d38:	mov	x0, x20
  417d3c:	bl	4151c0 <nftw@plt+0x124d0>
  417d40:	ldr	x4, [x24]
  417d44:	sub	x19, x22, x19
  417d48:	ldur	w0, [x24, #-8]
  417d4c:	add	x28, x4, x0
  417d50:	add	x0, x19, #0x1
  417d54:	add	x0, x22, x0
  417d58:	cmp	x28, x0
  417d5c:	b.cc	417d68 <nftw@plt+0x15078>  // b.lo, b.ul, b.last
  417d60:	mvn	x19, x19
  417d64:	add	x28, x28, x19
  417d68:	cbnz	x26, 417d84 <nftw@plt+0x15094>
  417d6c:	cbnz	x20, 417dbc <nftw@plt+0x150cc>
  417d70:	ldr	x0, [sp, #128]
  417d74:	add	x24, x24, #0x10
  417d78:	add	x0, x0, #0x1
  417d7c:	str	x0, [sp, #128]
  417d80:	b	417c78 <nftw@plt+0x14f88>
  417d84:	ldr	x4, [sp, #104]
  417d88:	add	x3, sp, #0x100
  417d8c:	ldr	x0, [sp, #136]
  417d90:	sub	x2, x28, x22
  417d94:	mov	x1, x22
  417d98:	blr	x4
  417d9c:	tst	w0, #0xff
  417da0:	b.ne	417d6c <nftw@plt+0x1507c>  // b.any
  417da4:	mov	x0, x21
  417da8:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417dac:	mov	w1, #0x3                   	// #3
  417db0:	add	x2, x2, #0x618
  417db4:	bl	41c4b8 <nftw@plt+0x197c8>
  417db8:	b	417e2c <nftw@plt+0x1513c>
  417dbc:	ldr	x1, [sp, #104]
  417dc0:	adrp	x0, 414000 <nftw@plt+0x11310>
  417dc4:	add	x0, x0, #0x750
  417dc8:	cmp	x1, x0
  417dcc:	b.eq	417de0 <nftw@plt+0x150f0>  // b.none
  417dd0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417dd4:	mov	w1, #0x641                 	// #1601
  417dd8:	add	x2, x2, #0x8ad
  417ddc:	b	417bf8 <nftw@plt+0x14f08>
  417de0:	mov	x2, x20
  417de4:	sub	w1, w28, w22
  417de8:	mov	x0, x23
  417dec:	bl	4151e8 <nftw@plt+0x124f8>
  417df0:	b	417d70 <nftw@plt+0x15080>
  417df4:	cmp	w0, #0x22
  417df8:	b.eq	417e58 <nftw@plt+0x15168>  // b.none
  417dfc:	cmp	w0, #0x27
  417e00:	b.eq	417e58 <nftw@plt+0x15168>  // b.none
  417e04:	cbnz	x23, 417e18 <nftw@plt+0x15128>
  417e08:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417e0c:	mov	w1, #0x64d                 	// #1613
  417e10:	add	x2, x2, #0x8ad
  417e14:	b	417bf8 <nftw@plt+0x14f08>
  417e18:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417e1c:	mov	x0, x21
  417e20:	add	x2, x2, #0x8c4
  417e24:	mov	w1, #0x3                   	// #3
  417e28:	bl	41c014 <nftw@plt+0x19324>
  417e2c:	cbz	x26, 417e38 <nftw@plt+0x15148>
  417e30:	ldr	x0, [sp, #256]
  417e34:	bl	402a80 <free@plt>
  417e38:	mov	w0, #0x0                   	// #0
  417e3c:	ldp	x19, x20, [sp, #16]
  417e40:	ldp	x21, x22, [sp, #32]
  417e44:	ldp	x23, x24, [sp, #48]
  417e48:	ldp	x25, x26, [sp, #64]
  417e4c:	ldp	x27, x28, [sp, #80]
  417e50:	ldp	x29, x30, [sp], #336
  417e54:	ret
  417e58:	add	x19, x19, #0x1
  417e5c:	cbz	x20, 417e68 <nftw@plt+0x15178>
  417e60:	mov	x0, x20
  417e64:	bl	4151c0 <nftw@plt+0x124d0>
  417e68:	ldur	w0, [x24, #-8]
  417e6c:	ldr	x1, [x24]
  417e70:	sub	x0, x0, #0x1
  417e74:	add	x0, x1, x0
  417e78:	str	x0, [sp, #112]
  417e7c:	adrp	x0, 414000 <nftw@plt+0x11310>
  417e80:	add	x0, x0, #0x750
  417e84:	str	x0, [sp, #184]
  417e88:	mov	x22, x19
  417e8c:	ldr	x0, [sp, #112]
  417e90:	cmp	x22, x0
  417e94:	b.cs	4184b8 <nftw@plt+0x157c8>  // b.hs, b.nlast
  417e98:	ldrb	w0, [x22]
  417e9c:	cmp	w0, #0x5c
  417ea0:	b.eq	418418 <nftw@plt+0x15728>  // b.none
  417ea4:	add	x22, x22, #0x1
  417ea8:	b	417e8c <nftw@plt+0x1519c>
  417eac:	ldr	x4, [sp, #104]
  417eb0:	add	x3, sp, #0x100
  417eb4:	ldr	x0, [sp, #136]
  417eb8:	sub	x2, x22, x19
  417ebc:	mov	x1, x19
  417ec0:	blr	x4
  417ec4:	tst	w0, #0xff
  417ec8:	b.ne	418424 <nftw@plt+0x15734>  // b.any
  417ecc:	b	417da4 <nftw@plt+0x150b4>
  417ed0:	ldr	x0, [sp, #104]
  417ed4:	ldr	x1, [sp, #184]
  417ed8:	cmp	x0, x1
  417edc:	b.eq	417ef0 <nftw@plt+0x15200>  // b.none
  417ee0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417ee4:	mov	w1, #0x66c                 	// #1644
  417ee8:	add	x2, x2, #0x8ad
  417eec:	b	417bf8 <nftw@plt+0x14f08>
  417ef0:	mov	x2, x20
  417ef4:	sub	w1, w22, w19
  417ef8:	mov	x0, x23
  417efc:	bl	4151e8 <nftw@plt+0x124f8>
  417f00:	b	418428 <nftw@plt+0x15738>
  417f04:	sub	w1, w3, #0x55
  417f08:	cmp	w1, #0x26
  417f0c:	b.hi	418488 <nftw@plt+0x15798>  // b.pmore
  417f10:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417f14:	add	x5, x22, #0x2
  417f18:	add	x0, x0, #0x59c
  417f1c:	ldrh	w0, [x0, w1, uxtw #1]
  417f20:	adr	x1, 417f2c <nftw@plt+0x1523c>
  417f24:	add	x0, x1, w0, sxth #2
  417f28:	br	x0
  417f2c:	cmp	w1, #0x6
  417f30:	b.hi	418488 <nftw@plt+0x15798>  // b.pmore
  417f34:	adrp	x0, 451000 <_obstack_memory_used@@Base+0x13fa8>
  417f38:	add	x0, x0, #0x5ec
  417f3c:	ldrh	w0, [x0, w1, uxtw #1]
  417f40:	adr	x1, 417f4c <nftw@plt+0x1525c>
  417f44:	add	x0, x1, w0, sxth #2
  417f48:	br	x0
  417f4c:	cmp	w3, #0x3f
  417f50:	b.eq	4182dc <nftw@plt+0x155ec>  // b.none
  417f54:	cmp	w3, #0x45
  417f58:	b.ne	418488 <nftw@plt+0x15798>  // b.any
  417f5c:	ldrb	w0, [x21, #1154]
  417f60:	cbz	w0, 417f78 <nftw@plt+0x15288>
  417f64:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417f68:	mov	x0, x21
  417f6c:	add	x2, x2, #0x9f2
  417f70:	mov	w1, #0x2                   	// #2
  417f74:	bl	41c014 <nftw@plt+0x19324>
  417f78:	mov	w0, #0x1b                  	// #27
  417f7c:	b	418340 <nftw@plt+0x15650>
  417f80:	ldr	x0, [sp, #144]
  417f84:	cmp	x20, #0x0
  417f88:	ldr	w1, [sp, #124]
  417f8c:	add	x22, sp, #0xd8
  417f90:	str	wzr, [sp, #304]
  417f94:	bfi	x25, x0, #32, #32
  417f98:	mov	x0, #0x6                   	// #6
  417f9c:	stp	x19, x25, [sp, #224]
  417fa0:	stp	x22, x0, [sp, #240]
  417fa4:	cset	w0, ne  // ne = any
  417fa8:	cmp	w0, w1
  417fac:	strb	wzr, [sp, #308]
  417fb0:	str	wzr, [sp, #312]
  417fb4:	b.eq	417fc8 <nftw@plt+0x152d8>  // b.none
  417fb8:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  417fbc:	mov	w1, #0x48d                 	// #1165
  417fc0:	add	x2, x2, #0x8d7
  417fc4:	b	417bf8 <nftw@plt+0x14f08>
  417fc8:	str	x5, [sp, #224]
  417fcc:	cbz	x20, 417fe0 <nftw@plt+0x152f0>
  417fd0:	mov	x0, x20
  417fd4:	bl	4151c0 <nftw@plt+0x124d0>
  417fd8:	lsr	x0, x0, #32
  417fdc:	str	w0, [sp, #236]
  417fe0:	ldr	x2, [sp, #112]
  417fe4:	mov	x7, x20
  417fe8:	add	x6, sp, #0xe8
  417fec:	add	x5, sp, #0xd4
  417ff0:	add	x4, sp, #0x130
  417ff4:	add	x1, sp, #0xe0
  417ff8:	mov	w3, #0x0                   	// #0
  417ffc:	mov	x0, x21
  418000:	bl	41523c <nftw@plt+0x1254c>
  418004:	ldr	w0, [sp, #212]
  418008:	add	x2, sp, #0xf8
  41800c:	add	x1, sp, #0xf0
  418010:	bl	41403c <nftw@plt+0x1134c>
  418014:	mov	w19, w0
  418018:	cbz	w0, 418040 <nftw@plt+0x15350>
  41801c:	bl	402c20 <__errno_location@plt>
  418020:	str	w19, [x0]
  418024:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418028:	mov	x0, x21
  41802c:	add	x2, x2, #0x678
  418030:	mov	w1, #0x3                   	// #3
  418034:	bl	41c4b8 <nftw@plt+0x197c8>
  418038:	ldr	x19, [sp, #224]
  41803c:	b	417e88 <nftw@plt+0x15198>
  418040:	cbz	x27, 418080 <nftw@plt+0x15390>
  418044:	ldr	x0, [sp, #248]
  418048:	mov	x2, #0x6                   	// #6
  41804c:	ldr	x4, [sp, #104]
  418050:	sub	x2, x2, x0
  418054:	ldr	x0, [sp, #136]
  418058:	mov	x3, x27
  41805c:	mov	x1, x22
  418060:	blr	x4
  418064:	tst	w0, #0xff
  418068:	b.ne	418080 <nftw@plt+0x15390>  // b.any
  41806c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418070:	mov	x0, x21
  418074:	add	x2, x2, #0x8e3
  418078:	mov	w1, #0x3                   	// #3
  41807c:	bl	41c4b8 <nftw@plt+0x197c8>
  418080:	cbz	x20, 418038 <nftw@plt+0x15348>
  418084:	ldr	x0, [sp, #248]
  418088:	mov	w22, #0x6                   	// #6
  41808c:	sub	w22, w22, w0
  418090:	cmp	w22, w19
  418094:	b.le	418038 <nftw@plt+0x15348>
  418098:	ldr	x1, [sp, #232]
  41809c:	mov	x0, x23
  4180a0:	add	w19, w19, #0x1
  4180a4:	bl	414e20 <nftw@plt+0x12130>
  4180a8:	b	418090 <nftw@plt+0x153a0>
  4180ac:	ldr	x0, [sp, #144]
  4180b0:	cmp	x20, #0x0
  4180b4:	ldr	w1, [sp, #124]
  4180b8:	bfi	x25, x0, #32, #32
  4180bc:	cset	w0, ne  // ne = any
  4180c0:	mov	x28, x25
  4180c4:	cmp	w0, w1
  4180c8:	b.eq	4180dc <nftw@plt+0x153ec>  // b.none
  4180cc:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4180d0:	mov	w1, #0x4f9                 	// #1273
  4180d4:	add	x2, x2, #0x90d
  4180d8:	b	417bf8 <nftw@plt+0x14f08>
  4180dc:	ldrb	w0, [x21, #1138]
  4180e0:	cbz	w0, 418100 <nftw@plt+0x15410>
  4180e4:	mov	x0, x21
  4180e8:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4180ec:	mov	w1, #0x6                   	// #6
  4180f0:	add	x2, x2, #0x919
  4180f4:	str	x5, [sp, #200]
  4180f8:	bl	41c080 <nftw@plt+0x19390>
  4180fc:	ldr	x5, [sp, #200]
  418100:	mov	x19, x5
  418104:	cbz	x20, 418118 <nftw@plt+0x15428>
  418108:	mov	x0, x20
  41810c:	bl	4151c0 <nftw@plt+0x124d0>
  418110:	lsr	x0, x0, #32
  418114:	bfi	x28, x0, #32, #32
  418118:	mov	w0, #0x0                   	// #0
  41811c:	mov	w3, #0x0                   	// #0
  418120:	mov	w22, #0x0                   	// #0
  418124:	ldr	x1, [sp, #112]
  418128:	cmp	x1, x19
  41812c:	b.ls	418170 <nftw@plt+0x15480>  // b.plast
  418130:	ldrb	w1, [x19]
  418134:	ldr	x2, [sp, #192]
  418138:	ldrb	w5, [x2, x1]
  41813c:	cmp	w5, #0x63
  418140:	b.eq	418170 <nftw@plt+0x15480>  // b.none
  418144:	add	x19, x19, #0x1
  418148:	cbz	x20, 41815c <nftw@plt+0x1546c>
  41814c:	mov	x0, x20
  418150:	bl	4151c0 <nftw@plt+0x124d0>
  418154:	lsr	x0, x0, #32
  418158:	bfi	x28, x0, #32, #32
  41815c:	and	w0, w22, #0xf0000000
  418160:	add	w22, w5, w22, lsl #4
  418164:	orr	w3, w3, w0
  418168:	mov	w0, #0x1                   	// #1
  41816c:	b	418124 <nftw@plt+0x15434>
  418170:	cbnz	w0, 41818c <nftw@plt+0x1549c>
  418174:	mov	x0, x21
  418178:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  41817c:	mov	w1, #0x3                   	// #3
  418180:	add	x2, x2, #0x94b
  418184:	bl	41c014 <nftw@plt+0x19324>
  418188:	b	417e88 <nftw@plt+0x15198>
  41818c:	ldr	w0, [sp, #152]
  418190:	and	w0, w22, w0
  418194:	cmp	x0, w22, uxtw
  418198:	cset	w0, ne  // ne = any
  41819c:	orr	w0, w0, w3
  4181a0:	cbz	w0, 4181c0 <nftw@plt+0x154d0>
  4181a4:	mov	x0, x21
  4181a8:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4181ac:	mov	w1, #0x2                   	// #2
  4181b0:	add	x2, x2, #0x970
  4181b4:	bl	41c014 <nftw@plt+0x19324>
  4181b8:	ldr	w0, [sp, #172]
  4181bc:	and	w22, w22, w0
  4181c0:	cbz	x27, 4181d8 <nftw@plt+0x154e8>
  4181c4:	ldr	w3, [sp, #168]
  4181c8:	mov	x2, x27
  4181cc:	mov	w1, w22
  4181d0:	mov	x0, x21
  4181d4:	bl	4149c8 <nftw@plt+0x11cd8>
  4181d8:	cbz	x23, 417e88 <nftw@plt+0x15198>
  4181dc:	mov	x1, x28
  4181e0:	mov	x0, x23
  4181e4:	bl	414e20 <nftw@plt+0x12130>
  4181e8:	b	417e88 <nftw@plt+0x15198>
  4181ec:	ldr	x0, [sp, #144]
  4181f0:	cmp	x20, #0x0
  4181f4:	ldr	w1, [sp, #124]
  4181f8:	bfi	x25, x0, #32, #32
  4181fc:	cset	w0, ne  // ne = any
  418200:	mov	x4, x25
  418204:	cmp	w0, w1
  418208:	b.ne	418264 <nftw@plt+0x15574>  // b.any
  41820c:	add	x5, x22, #0x4
  418210:	mov	w22, #0x0                   	// #0
  418214:	ldr	x0, [sp, #112]
  418218:	cmp	x0, x19
  41821c:	b.ls	418274 <nftw@plt+0x15584>  // b.plast
  418220:	cmp	x5, x19
  418224:	b.eq	418274 <nftw@plt+0x15584>  // b.none
  418228:	ldrb	w3, [x19]
  41822c:	sub	w0, w3, #0x30
  418230:	cmp	w0, #0x7
  418234:	b.hi	418274 <nftw@plt+0x15584>  // b.pmore
  418238:	add	x19, x19, #0x1
  41823c:	cbz	x20, 418258 <nftw@plt+0x15568>
  418240:	mov	x0, x20
  418244:	str	x4, [sp, #200]
  418248:	bl	4151c0 <nftw@plt+0x124d0>
  41824c:	lsr	x0, x0, #32
  418250:	ldr	x4, [sp, #200]
  418254:	bfi	x4, x0, #32, #32
  418258:	add	w22, w3, w22, lsl #3
  41825c:	sub	w22, w22, #0x30
  418260:	b	418214 <nftw@plt+0x15524>
  418264:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418268:	mov	w1, #0x540                 	// #1344
  41826c:	add	x2, x2, #0x991
  418270:	b	417bf8 <nftw@plt+0x14f08>
  418274:	ldr	w0, [sp, #152]
  418278:	and	w0, w22, w0
  41827c:	cmp	x0, w22, uxtw
  418280:	b.eq	4182a8 <nftw@plt+0x155b8>  // b.none
  418284:	mov	x0, x21
  418288:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  41828c:	mov	w1, #0x2                   	// #2
  418290:	add	x2, x2, #0x99d
  418294:	str	x4, [sp, #200]
  418298:	bl	41c014 <nftw@plt+0x19324>
  41829c:	ldr	w0, [sp, #172]
  4182a0:	ldr	x4, [sp, #200]
  4182a4:	and	w22, w22, w0
  4182a8:	cbz	x27, 4182c8 <nftw@plt+0x155d8>
  4182ac:	ldr	w3, [sp, #168]
  4182b0:	mov	x2, x27
  4182b4:	mov	w1, w22
  4182b8:	mov	x0, x21
  4182bc:	str	x4, [sp, #200]
  4182c0:	bl	4149c8 <nftw@plt+0x11cd8>
  4182c4:	ldr	x4, [sp, #200]
  4182c8:	cbz	x23, 417e88 <nftw@plt+0x15198>
  4182cc:	mov	x1, x4
  4182d0:	b	4181e0 <nftw@plt+0x154f0>
  4182d4:	ldrb	w0, [x21, #1154]
  4182d8:	cbnz	w0, 418488 <nftw@plt+0x15798>
  4182dc:	cbz	x27, 418314 <nftw@plt+0x15624>
  4182e0:	ldr	x4, [sp, #104]
  4182e4:	mov	x3, x27
  4182e8:	ldr	x0, [sp, #136]
  4182ec:	add	x1, sp, #0xd3
  4182f0:	mov	x2, #0x1                   	// #1
  4182f4:	blr	x4
  4182f8:	tst	w0, #0xff
  4182fc:	b.ne	418314 <nftw@plt+0x15624>  // b.any
  418300:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418304:	mov	x0, x21
  418308:	add	x2, x2, #0xa58
  41830c:	mov	w1, #0x3                   	// #3
  418310:	bl	41c4b8 <nftw@plt+0x197c8>
  418314:	cbz	x20, 418334 <nftw@plt+0x15644>
  418318:	mov	x0, x20
  41831c:	bl	4151c0 <nftw@plt+0x124d0>
  418320:	lsr	x0, x0, #32
  418324:	bfi	x25, x0, #32, #32
  418328:	mov	x0, x23
  41832c:	mov	x1, x25
  418330:	bl	414e20 <nftw@plt+0x12130>
  418334:	add	x19, x22, #0x2
  418338:	b	417e88 <nftw@plt+0x15198>
  41833c:	mov	w0, #0x8                   	// #8
  418340:	strb	w0, [sp, #211]
  418344:	b	4182dc <nftw@plt+0x155ec>
  418348:	mov	w0, #0xc                   	// #12
  41834c:	b	418340 <nftw@plt+0x15650>
  418350:	mov	w0, #0xa                   	// #10
  418354:	b	418340 <nftw@plt+0x15650>
  418358:	mov	w0, #0xd                   	// #13
  41835c:	b	418340 <nftw@plt+0x15650>
  418360:	mov	w0, #0x9                   	// #9
  418364:	b	418340 <nftw@plt+0x15650>
  418368:	mov	w0, #0xb                   	// #11
  41836c:	b	418340 <nftw@plt+0x15650>
  418370:	ldrb	w0, [x21, #1138]
  418374:	cbz	w0, 41838c <nftw@plt+0x1569c>
  418378:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  41837c:	mov	x0, x21
  418380:	add	x2, x2, #0x9c0
  418384:	mov	w1, #0x6                   	// #6
  418388:	bl	41c080 <nftw@plt+0x19390>
  41838c:	mov	w0, #0x7                   	// #7
  418390:	b	418340 <nftw@plt+0x15650>
  418394:	mov	w2, w3
  418398:	add	x0, sp, #0x130
  41839c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  4183a0:	add	x1, x1, #0x7b2
  4183a4:	bl	4026e0 <sprintf@plt>
  4183a8:	add	x3, sp, #0x130
  4183ac:	mov	x0, x21
  4183b0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4183b4:	mov	w1, #0x2                   	// #2
  4183b8:	add	x2, x2, #0xa39
  4183bc:	bl	41c014 <nftw@plt+0x19324>
  4183c0:	b	4182dc <nftw@plt+0x155ec>
  4183c4:	cbz	x26, 4183f8 <nftw@plt+0x15708>
  4183c8:	ldr	w3, [sp, #168]
  4183cc:	add	x2, sp, #0x100
  4183d0:	mov	x0, x21
  4183d4:	mov	w1, #0x0                   	// #0
  4183d8:	bl	4149c8 <nftw@plt+0x11cd8>
  4183dc:	ldr	x0, [sp, #256]
  4183e0:	ldr	x1, [sp, #272]
  4183e4:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  4183e8:	str	x0, [x26, #8]
  4183ec:	str	x0, [sp, #256]
  4183f0:	ldr	x0, [sp, #272]
  4183f4:	str	w0, [x26]
  4183f8:	cbz	x20, 418410 <nftw@plt+0x15720>
  4183fc:	mov	x0, x20
  418400:	bl	4151c0 <nftw@plt+0x124d0>
  418404:	mov	x1, x0
  418408:	mov	x0, x23
  41840c:	bl	414e20 <nftw@plt+0x12130>
  418410:	mov	w0, #0x1                   	// #1
  418414:	b	417e3c <nftw@plt+0x1514c>
  418418:	cmp	x19, x22
  41841c:	b.cs	418434 <nftw@plt+0x15744>  // b.hs, b.nlast
  418420:	cbnz	x26, 417eac <nftw@plt+0x151bc>
  418424:	cbnz	x20, 417ed0 <nftw@plt+0x151e0>
  418428:	ldr	x0, [sp, #112]
  41842c:	cmp	x22, x0
  418430:	b.cs	417d70 <nftw@plt+0x15080>  // b.hs, b.nlast
  418434:	add	x19, x22, #0x1
  418438:	cbz	x20, 418450 <nftw@plt+0x15760>
  41843c:	mov	x0, x20
  418440:	bl	4151c0 <nftw@plt+0x124d0>
  418444:	mov	x25, x0
  418448:	lsr	x0, x0, #32
  41844c:	str	x0, [sp, #144]
  418450:	ldrb	w3, [x22, #1]
  418454:	strb	w3, [sp, #211]
  418458:	cmp	w3, #0x7b
  41845c:	b.hi	418488 <nftw@plt+0x15798>  // b.pmore
  418460:	cmp	w3, #0x54
  418464:	b.hi	417f04 <nftw@plt+0x15214>  // b.pmore
  418468:	cmp	w3, #0x37
  41846c:	b.hi	417f4c <nftw@plt+0x1525c>  // b.pmore
  418470:	cmp	w3, #0x2f
  418474:	b.hi	4181ec <nftw@plt+0x154fc>  // b.pmore
  418478:	sub	w1, w3, #0x22
  41847c:	and	w0, w1, #0xff
  418480:	cmp	w0, #0x6
  418484:	b.ls	417f2c <nftw@plt+0x1523c>  // b.plast
  418488:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41848c:	add	x0, x0, #0xae
  418490:	mov	w1, #0xac                  	// #172
  418494:	ldrh	w0, [x0, w3, sxtw #1]
  418498:	tst	w1, w0
  41849c:	b.eq	418394 <nftw@plt+0x156a4>  // b.none
  4184a0:	mov	x0, x21
  4184a4:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4184a8:	mov	w1, #0x2                   	// #2
  4184ac:	add	x2, x2, #0xa1a
  4184b0:	bl	41c014 <nftw@plt+0x19324>
  4184b4:	b	4182dc <nftw@plt+0x155ec>
  4184b8:	cmp	x19, x22
  4184bc:	b.cc	418420 <nftw@plt+0x15730>  // b.lo, b.ul, b.last
  4184c0:	b	417d70 <nftw@plt+0x15080>
  4184c4:	mov	x6, #0x0                   	// #0
  4184c8:	mov	x5, #0x0                   	// #0
  4184cc:	b	417b74 <nftw@plt+0x14e84>
  4184d0:	stp	x29, x30, [sp, #-64]!
  4184d4:	mov	w4, #0x3e                  	// #62
  4184d8:	mov	x29, sp
  4184dc:	ldr	x5, [x0, #536]
  4184e0:	str	x19, [sp, #16]
  4184e4:	add	x19, x0, #0x208
  4184e8:	str	x5, [sp, #56]
  4184ec:	adrp	x5, 414000 <nftw@plt+0x11310>
  4184f0:	add	x5, x5, #0x750
  4184f4:	ldp	x6, x7, [x19]
  4184f8:	str	x5, [x0, #520]
  4184fc:	mov	x5, #0xffffffffffffffff    	// #-1
  418500:	str	x5, [x0, #528]
  418504:	ldr	x5, [x0, #1216]
  418508:	str	w5, [x0, #536]
  41850c:	stp	x6, x7, [sp, #40]
  418510:	bl	4184c4 <nftw@plt+0x157d4>
  418514:	ldp	x2, x3, [sp, #40]
  418518:	stp	x2, x3, [x19]
  41851c:	ldr	x1, [sp, #56]
  418520:	str	x1, [x19, #16]
  418524:	ldr	x19, [sp, #16]
  418528:	ldp	x29, x30, [sp], #64
  41852c:	ret
  418530:	stp	x29, x30, [sp, #-128]!
  418534:	mov	x29, sp
  418538:	ldrb	w4, [x1, #4]
  41853c:	stp	x21, x22, [sp, #32]
  418540:	mov	x22, x1
  418544:	and	w1, w4, #0xfffffffb
  418548:	cmp	w1, #0x38
  41854c:	stp	x23, x24, [sp, #48]
  418550:	mov	x23, x2
  418554:	cset	w2, ne  // ne = any
  418558:	cmp	w4, #0x3c
  41855c:	stp	x19, x20, [sp, #16]
  418560:	and	w19, w1, #0xff
  418564:	cset	w1, eq  // eq = none
  418568:	mov	x24, x3
  41856c:	add	w2, w2, #0x2
  418570:	ldr	w3, [x22, #8]
  418574:	add	w1, w2, w1, lsl #1
  418578:	stp	x25, x26, [sp, #64]
  41857c:	str	wzr, [sp, #88]
  418580:	cmp	x3, w1, sxtw
  418584:	str	xzr, [sp, #96]
  418588:	b.ne	4185c4 <nftw@plt+0x158d4>  // b.any
  41858c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418590:	mov	w1, #0x3                   	// #3
  418594:	add	x2, x2, #0xa8e
  418598:	bl	41c014 <nftw@plt+0x19324>
  41859c:	str	wzr, [x23]
  4185a0:	mov	w19, #0x0                   	// #0
  4185a4:	str	wzr, [x24]
  4185a8:	mov	w0, w19
  4185ac:	ldp	x19, x20, [sp, #16]
  4185b0:	ldp	x21, x22, [sp, #32]
  4185b4:	ldp	x23, x24, [sp, #48]
  4185b8:	ldp	x25, x26, [sp, #64]
  4185bc:	ldp	x29, x30, [sp], #128
  4185c0:	ret
  4185c4:	mov	x20, x0
  4185c8:	add	x3, sp, #0x58
  4185cc:	add	x1, x22, #0x8
  4185d0:	mov	x2, #0x1                   	// #1
  4185d4:	bl	4184c4 <nftw@plt+0x157d4>
  4185d8:	tst	w0, #0xff
  4185dc:	b.eq	41859c <nftw@plt+0x158ac>  // b.none
  4185e0:	ldr	w25, [sp, #88]
  4185e4:	cmp	w19, #0x38
  4185e8:	ldr	x4, [sp, #96]
  4185ec:	b.eq	418714 <nftw@plt+0x15a24>  // b.none
  4185f0:	ldrb	w6, [x20, #1242]
  4185f4:	mov	x0, x20
  4185f8:	ldrb	w21, [x22, #4]
  4185fc:	add	x8, sp, #0x68
  418600:	mov	w25, w25
  418604:	mov	w19, #0x0                   	// #0
  418608:	mov	w1, w21
  41860c:	bl	41496c <nftw@plt+0x11c7c>
  418610:	ldrsw	x26, [sp, #120]
  418614:	ldr	x3, [x20, #1216]
  418618:	mov	x1, #0x20                  	// #32
  41861c:	cmp	x3, #0x20
  418620:	csel	x0, x3, x1, ls  // ls = plast
  418624:	mov	x1, #0x1                   	// #1
  418628:	lsl	x1, x1, x0
  41862c:	sub	x1, x1, #0x1
  418630:	udiv	x0, x26, x3
  418634:	sub	x2, x25, x0, lsl #1
  418638:	lsl	x7, x0, #1
  41863c:	add	x5, x4, x2
  418640:	add	x0, x0, x2
  418644:	add	x0, x4, x0
  418648:	mov	x4, x5
  41864c:	cmp	x0, x5
  418650:	b.eq	41867c <nftw@plt+0x1598c>  // b.none
  418654:	cbz	w6, 418674 <nftw@plt+0x15984>
  418658:	ldrb	w2, [x4]
  41865c:	and	w2, w2, w1
  418660:	lsl	w19, w19, w3
  418664:	add	x4, x4, #0x1
  418668:	orr	w19, w2, w19
  41866c:	sub	x0, x0, #0x1
  418670:	b	41864c <nftw@plt+0x1595c>
  418674:	ldurb	w2, [x0, #-1]
  418678:	b	41865c <nftw@plt+0x1596c>
  41867c:	cmp	x25, x7
  418680:	b.ls	418698 <nftw@plt+0x159a8>  // b.plast
  418684:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418688:	mov	x0, x20
  41868c:	add	x2, x2, #0xaa7
  418690:	mov	w1, #0x0                   	// #0
  418694:	bl	41c014 <nftw@plt+0x19324>
  418698:	sub	w21, w21, #0x3a
  41869c:	cmp	x26, #0x1f
  4186a0:	b.hi	4186d4 <nftw@plt+0x159e4>  // b.pmore
  4186a4:	mov	x1, #0x1                   	// #1
  4186a8:	cmp	w21, #0x1
  4186ac:	lsl	x0, x1, x26
  4186b0:	b.ls	4186cc <nftw@plt+0x159dc>  // b.plast
  4186b4:	ldrb	w2, [x20, #1241]
  4186b8:	cbnz	w2, 4186cc <nftw@plt+0x159dc>
  4186bc:	sub	w26, w26, #0x1
  4186c0:	lsl	w26, w1, w26
  4186c4:	tst	w26, w19
  4186c8:	b.ne	4186e4 <nftw@plt+0x159f4>  // b.any
  4186cc:	sub	x0, x0, #0x1
  4186d0:	and	w19, w19, w0
  4186d4:	cmp	w21, #0x1
  4186d8:	b.hi	4186ec <nftw@plt+0x159fc>  // b.pmore
  4186dc:	mov	w0, #0x1                   	// #1
  4186e0:	b	4186f0 <nftw@plt+0x15a00>
  4186e4:	neg	x0, x0
  4186e8:	orr	w19, w19, w0
  4186ec:	ldrb	w0, [x20, #1241]
  4186f0:	str	w0, [x24]
  4186f4:	mov	w0, #0x1                   	// #1
  4186f8:	str	w0, [x23]
  4186fc:	ldr	x1, [x22, #16]
  418700:	ldr	x0, [sp, #96]
  418704:	cmp	x0, x1
  418708:	b.eq	4185a8 <nftw@plt+0x158b8>  // b.none
  41870c:	bl	402a80 <free@plt>
  418710:	b	4185a8 <nftw@plt+0x158b8>
  418714:	ldr	x21, [x20, #1216]
  418718:	mov	x1, #0x20                  	// #32
  41871c:	ldr	x26, [x20, #1224]
  418720:	cmp	x21, #0x20
  418724:	csel	x0, x21, x1, ls  // ls = plast
  418728:	mov	x1, #0x1                   	// #1
  41872c:	sub	w25, w25, #0x1
  418730:	mov	w19, #0x0                   	// #0
  418734:	udiv	x26, x26, x21
  418738:	lsl	x1, x1, x0
  41873c:	sub	x1, x1, #0x1
  418740:	mov	x2, #0x0                   	// #0
  418744:	cmp	x25, x2
  418748:	b.ls	418770 <nftw@plt+0x15a80>  // b.plast
  41874c:	ldrb	w0, [x4, x2]
  418750:	cmp	x21, #0x1f
  418754:	and	w0, w0, w1
  418758:	b.hi	418764 <nftw@plt+0x15a74>  // b.pmore
  41875c:	lsl	w19, w19, w21
  418760:	orr	w0, w0, w19
  418764:	add	x2, x2, #0x1
  418768:	mov	w19, w0
  41876c:	b	418744 <nftw@plt+0x15a54>
  418770:	cmp	x26, x25
  418774:	b.cs	4187d0 <nftw@plt+0x15ae0>  // b.hs, b.nlast
  418778:	mov	x0, x20
  41877c:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418780:	mov	w1, #0x0                   	// #0
  418784:	add	x2, x2, #0xaa7
  418788:	bl	41c014 <nftw@plt+0x19324>
  41878c:	cmp	x26, #0x1
  418790:	b.hi	4187f8 <nftw@plt+0x15b08>  // b.pmore
  418794:	ldrb	w2, [x20, #1240]
  418798:	cmp	x21, #0x1f
  41879c:	b.hi	4187c4 <nftw@plt+0x15ad4>  // b.pmore
  4187a0:	mov	w1, #0x1                   	// #1
  4187a4:	lsl	w0, w1, w21
  4187a8:	cbnz	w2, 4187bc <nftw@plt+0x15acc>
  4187ac:	sub	w21, w21, #0x1
  4187b0:	lsl	w21, w1, w21
  4187b4:	tst	w21, w19
  4187b8:	b.ne	41880c <nftw@plt+0x15b1c>  // b.any
  4187bc:	sub	w0, w0, #0x1
  4187c0:	and	w19, w19, w0
  4187c4:	str	w26, [x23]
  4187c8:	str	w2, [x24]
  4187cc:	b	4186fc <nftw@plt+0x15a0c>
  4187d0:	cmp	x25, #0x1
  4187d4:	b.ls	418804 <nftw@plt+0x15b14>  // b.plast
  4187d8:	ldrb	w0, [x20, #1137]
  4187dc:	cbz	w0, 4187f4 <nftw@plt+0x15b04>
  4187e0:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4187e4:	mov	x0, x20
  4187e8:	add	x2, x2, #0xad0
  4187ec:	mov	w1, #0x5                   	// #5
  4187f0:	bl	41c080 <nftw@plt+0x19390>
  4187f4:	mov	x26, x25
  4187f8:	mov	w2, #0x0                   	// #0
  4187fc:	ldr	x21, [x20, #1224]
  418800:	b	418798 <nftw@plt+0x15aa8>
  418804:	mov	x26, x25
  418808:	b	418794 <nftw@plt+0x15aa4>
  41880c:	neg	w0, w0
  418810:	orr	w19, w19, w0
  418814:	b	4187c4 <nftw@plt+0x15ad4>
  418818:	stp	x29, x30, [sp, #-64]!
  41881c:	mov	x7, x1
  418820:	mov	x10, x2
  418824:	mov	x9, x3
  418828:	mov	x29, sp
  41882c:	mov	w1, w5
  418830:	add	x8, sp, #0x28
  418834:	stp	x19, x20, [sp, #16]
  418838:	mov	x19, x0
  41883c:	bl	41496c <nftw@plt+0x11c7c>
  418840:	ldr	x1, [sp, #40]
  418844:	adrp	x0, 414000 <nftw@plt+0x11310>
  418848:	add	x0, x0, #0x750
  41884c:	cmp	x1, x0
  418850:	b.ne	4188a4 <nftw@plt+0x15bb4>  // b.any
  418854:	adrp	x0, 414000 <nftw@plt+0x11310>
  418858:	add	x0, x0, #0x2f4
  41885c:	ldr	x20, [x19, #1000]
  418860:	str	x0, [x19, #1000]
  418864:	mov	x6, x4
  418868:	mov	x1, x7
  41886c:	mov	w4, w5
  418870:	mov	x2, x9
  418874:	mov	x5, x10
  418878:	mov	x0, x19
  41887c:	mov	x3, #0x0                   	// #0
  418880:	bl	417b74 <nftw@plt+0x14e84>
  418884:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  418888:	tst	w0, #0xff
  41888c:	add	x0, x1, #0xb23
  418890:	str	x20, [x19, #1000]
  418894:	csel	x0, x0, xzr, eq  // eq = none
  418898:	ldp	x19, x20, [sp, #16]
  41889c:	ldp	x29, x30, [sp], #64
  4188a0:	ret
  4188a4:	adrp	x0, 450000 <_obstack_memory_used@@Base+0x12fa8>
  4188a8:	add	x0, x0, #0xaf3
  4188ac:	b	418898 <nftw@plt+0x15ba8>
  4188b0:	ldrb	w0, [x1, #18]
  4188b4:	mov	w3, #0xffffffcd            	// #-51
  4188b8:	str	xzr, [x1, #24]
  4188bc:	and	w0, w0, #0xfffffffc
  4188c0:	strb	w0, [x1, #18]
  4188c4:	ldrh	w0, [x1, #18]
  4188c8:	ubfx	x2, x0, #2, #8
  4188cc:	and	w2, w2, w3
  4188d0:	bfi	w0, w2, #2, #8
  4188d4:	strh	w0, [x1, #18]
  4188d8:	mov	w0, #0x1                   	// #1
  4188dc:	ret
  4188e0:	stp	x29, x30, [sp, #-32]!
  4188e4:	mov	x29, sp
  4188e8:	stp	x19, x20, [sp, #16]
  4188ec:	mov	x19, x0
  4188f0:	mov	w20, #0x0                   	// #0
  4188f4:	cbz	x19, 418918 <nftw@plt+0x15c28>
  4188f8:	ldrb	w0, [x19, #16]
  4188fc:	cbz	w0, 41890c <nftw@plt+0x15c1c>
  418900:	ldr	x0, [x19, #24]
  418904:	bl	4188e0 <nftw@plt+0x15bf0>
  418908:	add	w20, w20, w0
  41890c:	add	w20, w20, #0x1
  418910:	ldr	x19, [x19]
  418914:	b	4188f4 <nftw@plt+0x15c04>
  418918:	mov	w0, w20
  41891c:	ldp	x19, x20, [sp, #16]
  418920:	ldp	x29, x30, [sp], #32
  418924:	ret
  418928:	stp	x29, x30, [sp, #-32]!
  41892c:	mov	x29, sp
  418930:	stp	x19, x20, [sp, #16]
  418934:	mov	x19, x0
  418938:	and	w20, w1, #0xff
  41893c:	bl	4254c8 <nftw@plt+0x227d8>
  418940:	ldrb	w2, [x0, #4]
  418944:	cmp	w2, #0x35
  418948:	b.ne	4189b4 <nftw@plt+0x15cc4>  // b.any
  41894c:	ldr	x0, [x0, #8]
  418950:	cbz	w20, 41899c <nftw@plt+0x15cac>
  418954:	ldr	x1, [x19, #1248]
  418958:	cmp	x1, x0
  41895c:	b.ne	418978 <nftw@plt+0x15c88>  // b.any
  418960:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418964:	add	x2, x2, #0xc0
  418968:	mov	x0, x19
  41896c:	mov	w1, #0x3                   	// #3
  418970:	bl	41c014 <nftw@plt+0x19324>
  418974:	b	4189d8 <nftw@plt+0x15ce8>
  418978:	ldr	x1, [x19, #1288]
  41897c:	cmp	x1, x0
  418980:	b.eq	418990 <nftw@plt+0x15ca0>  // b.none
  418984:	ldr	x1, [x19, #1296]
  418988:	cmp	x1, x0
  41898c:	b.ne	41899c <nftw@plt+0x15cac>  // b.any
  418990:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418994:	add	x2, x2, #0xe9
  418998:	b	418968 <nftw@plt+0x15c78>
  41899c:	ldrh	w1, [x0, #18]
  4189a0:	tst	x1, #0x8
  4189a4:	csel	x0, x0, xzr, eq  // eq = none
  4189a8:	ldp	x19, x20, [sp, #16]
  4189ac:	ldp	x29, x30, [sp], #32
  4189b0:	ret
  4189b4:	ldrh	w1, [x0, #6]
  4189b8:	tbz	w1, #4, 4189e0 <nftw@plt+0x15cf0>
  4189bc:	ldr	x0, [x0, #8]
  4189c0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  4189c4:	add	x2, x2, #0x11a
  4189c8:	ldr	x3, [x0]
  4189cc:	mov	x0, x19
  4189d0:	mov	w1, #0x3                   	// #3
  4189d4:	bl	41c014 <nftw@plt+0x19324>
  4189d8:	mov	x0, #0x0                   	// #0
  4189dc:	b	4189a8 <nftw@plt+0x15cb8>
  4189e0:	cmp	w2, #0x16
  4189e4:	b.ne	4189fc <nftw@plt+0x15d0c>  // b.any
  4189e8:	ldr	x0, [x19, #144]
  4189ec:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  4189f0:	add	x2, x2, #0x15a
  4189f4:	ldr	x3, [x0, #8]
  4189f8:	b	4189cc <nftw@plt+0x15cdc>
  4189fc:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418a00:	add	x2, x2, #0x17f
  418a04:	b	418968 <nftw@plt+0x15c78>
  418a08:	stp	x29, x30, [sp, #-32]!
  418a0c:	mov	x29, sp
  418a10:	stp	x19, x20, [sp, #16]
  418a14:	mov	w19, w1
  418a18:	mov	x20, x0
  418a1c:	bl	4254c8 <nftw@plt+0x227d8>
  418a20:	mov	x1, x0
  418a24:	ldrb	w0, [x0, #4]
  418a28:	cmp	w0, #0x37
  418a2c:	b.ne	418a78 <nftw@plt+0x15d88>  // b.any
  418a30:	ldr	w0, [x1, #8]
  418a34:	cmp	w0, #0x1
  418a38:	b.ne	418a80 <nftw@plt+0x15d90>  // b.any
  418a3c:	ldr	x0, [x1, #16]
  418a40:	ldrb	w2, [x0]
  418a44:	sub	w0, w2, #0x30
  418a48:	cmp	w0, w19
  418a4c:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  418a50:	b.hi	418a80 <nftw@plt+0x15d90>  // b.pmore
  418a54:	cmp	w0, #0x4
  418a58:	ccmp	w19, #0x3, #0x4, eq  // eq = none
  418a5c:	b.ne	418a80 <nftw@plt+0x15d90>  // b.any
  418a60:	cmp	w19, #0x0
  418a64:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  418a68:	b.eq	418a80 <nftw@plt+0x15d90>  // b.none
  418a6c:	ldp	x19, x20, [sp, #16]
  418a70:	ldp	x29, x30, [sp], #32
  418a74:	ret
  418a78:	cmp	w0, #0x16
  418a7c:	b.eq	418aa0 <nftw@plt+0x15db0>  // b.none
  418a80:	mov	x0, x20
  418a84:	bl	423e80 <nftw@plt+0x21190>
  418a88:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418a8c:	mov	x3, x0
  418a90:	add	x2, x2, #0x19f
  418a94:	mov	x0, x20
  418a98:	mov	w1, #0x3                   	// #3
  418a9c:	bl	41c014 <nftw@plt+0x19324>
  418aa0:	mov	w0, #0x0                   	// #0
  418aa4:	b	418a6c <nftw@plt+0x15d7c>
  418aa8:	stp	x29, x30, [sp, #-32]!
  418aac:	mov	x29, sp
  418ab0:	str	x19, [sp, #16]
  418ab4:	mov	x19, x0
  418ab8:	mov	x0, x19
  418abc:	bl	42b37c <nftw@plt+0x2868c>
  418ac0:	ldrb	w1, [x0, #4]
  418ac4:	cmp	w1, #0x53
  418ac8:	b.eq	418ab8 <nftw@plt+0x15dc8>  // b.none
  418acc:	ldr	x19, [sp, #16]
  418ad0:	ldp	x29, x30, [sp], #32
  418ad4:	ret
  418ad8:	stp	x29, x30, [sp, #-48]!
  418adc:	mov	x29, sp
  418ae0:	stp	x19, x20, [sp, #16]
  418ae4:	mov	x19, x0
  418ae8:	mov	w0, #0x1                   	// #1
  418aec:	strb	w0, [x19, #23]
  418af0:	str	x21, [sp, #32]
  418af4:	adrp	x21, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418af8:	add	x21, x21, #0x1e8
  418afc:	mov	x0, x19
  418b00:	bl	4254c8 <nftw@plt+0x227d8>
  418b04:	ldrb	w1, [x0, #4]
  418b08:	cmp	w1, #0x16
  418b0c:	b.eq	418b2c <nftw@plt+0x15e3c>  // b.none
  418b10:	cmp	w1, #0x35
  418b14:	b.eq	418b40 <nftw@plt+0x15e50>  // b.none
  418b18:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418b1c:	mov	x0, x19
  418b20:	add	x2, x2, #0x1c3
  418b24:	mov	w1, #0x3                   	// #3
  418b28:	bl	41c014 <nftw@plt+0x19324>
  418b2c:	strb	wzr, [x19, #23]
  418b30:	ldp	x19, x20, [sp, #16]
  418b34:	ldr	x21, [sp, #32]
  418b38:	ldp	x29, x30, [sp], #48
  418b3c:	ret
  418b40:	ldr	x20, [x0, #8]
  418b44:	ldrh	w0, [x20, #18]
  418b48:	tbnz	w0, #3, 418afc <nftw@plt+0x15e0c>
  418b4c:	ldrb	w0, [x20, #18]
  418b50:	tbz	w0, #1, 418b68 <nftw@plt+0x15e78>
  418b54:	ldr	x3, [x20]
  418b58:	mov	x2, x21
  418b5c:	mov	x0, x19
  418b60:	mov	w1, #0x0                   	// #0
  418b64:	bl	41c014 <nftw@plt+0x19324>
  418b68:	mov	x0, x20
  418b6c:	bl	428f58 <nftw@plt+0x26268>
  418b70:	ldrh	w0, [x20, #18]
  418b74:	orr	w0, w0, #0x18
  418b78:	strh	w0, [x20, #18]
  418b7c:	b	418afc <nftw@plt+0x15e0c>
  418b80:	stp	x29, x30, [sp, #-64]!
  418b84:	mov	x29, sp
  418b88:	stp	x19, x20, [sp, #16]
  418b8c:	add	x19, x0, #0x18
  418b90:	stp	x21, x22, [sp, #32]
  418b94:	mov	x22, x1
  418b98:	str	x23, [sp, #48]
  418b9c:	mov	x23, #0x18                  	// #24
  418ba0:	ldr	x21, [x19]
  418ba4:	cbz	x21, 418bfc <nftw@plt+0x15f0c>
  418ba8:	ldr	w1, [x21, #12]
  418bac:	ldr	w0, [x22, #12]
  418bb0:	cmp	w1, w0
  418bb4:	b.eq	418bc0 <nftw@plt+0x15ed0>  // b.none
  418bb8:	ldr	x19, [x19]
  418bbc:	b	418ba0 <nftw@plt+0x15eb0>
  418bc0:	mov	w20, #0x0                   	// #0
  418bc4:	ldr	w0, [x21, #12]
  418bc8:	cmp	w0, w20
  418bcc:	b.ls	418bf0 <nftw@plt+0x15f00>  // b.plast
  418bd0:	mov	w0, w20
  418bd4:	madd	x0, x0, x23, x23
  418bd8:	add	x1, x22, x0
  418bdc:	add	x0, x21, x0
  418be0:	bl	422b98 <nftw@plt+0x1fea8>
  418be4:	cbz	w0, 418bf0 <nftw@plt+0x15f00>
  418be8:	add	w20, w20, #0x1
  418bec:	b	418bc4 <nftw@plt+0x15ed4>
  418bf0:	ldr	w0, [x21, #12]
  418bf4:	cmp	w0, w20
  418bf8:	b.ne	418bb8 <nftw@plt+0x15ec8>  // b.any
  418bfc:	mov	x0, x19
  418c00:	ldp	x19, x20, [sp, #16]
  418c04:	ldp	x21, x22, [sp, #32]
  418c08:	ldr	x23, [sp, #48]
  418c0c:	ldp	x29, x30, [sp], #64
  418c10:	ret
  418c14:	stp	x29, x30, [sp, #-48]!
  418c18:	mov	x29, sp
  418c1c:	stp	x19, x20, [sp, #16]
  418c20:	mov	x19, x0
  418c24:	and	w20, w1, #0xff
  418c28:	bl	4254c8 <nftw@plt+0x227d8>
  418c2c:	ldrb	w4, [x0, #4]
  418c30:	cmp	w4, #0x3e
  418c34:	b.eq	418c70 <nftw@plt+0x15f80>  // b.none
  418c38:	cmp	w20, #0x0
  418c3c:	adrp	x0, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  418c40:	adrp	x3, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  418c44:	add	x0, x0, #0x2a2
  418c48:	add	x3, x3, #0xc1
  418c4c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418c50:	csel	x3, x3, x0, ne  // ne = any
  418c54:	add	x2, x2, #0x206
  418c58:	mov	x0, x19
  418c5c:	mov	w1, #0x3                   	// #3
  418c60:	bl	41c014 <nftw@plt+0x19324>
  418c64:	ldp	x19, x20, [sp, #16]
  418c68:	ldp	x29, x30, [sp], #48
  418c6c:	ret
  418c70:	add	x1, x0, #0x8
  418c74:	add	x3, sp, #0x20
  418c78:	mov	x0, x19
  418c7c:	mov	x2, #0x1                   	// #1
  418c80:	bl	4184d0 <nftw@plt+0x157e0>
  418c84:	tst	w0, #0xff
  418c88:	b.eq	418c38 <nftw@plt+0x15f48>  // b.none
  418c8c:	ldr	w0, [sp, #32]
  418c90:	cbz	w0, 418c38 <nftw@plt+0x15f48>
  418c94:	ldr	x3, [sp, #40]
  418c98:	cmp	w20, #0x0
  418c9c:	mov	x0, x19
  418ca0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418ca4:	mov	w1, #0x3                   	// #3
  418ca8:	add	x2, x2, #0xc64
  418cac:	csel	w1, w1, wzr, ne  // ne = any
  418cb0:	bl	41c014 <nftw@plt+0x19324>
  418cb4:	ldr	x0, [sp, #40]
  418cb8:	bl	402a80 <free@plt>
  418cbc:	b	418c64 <nftw@plt+0x15f74>
  418cc0:	mov	w1, #0x1                   	// #1
  418cc4:	b	418c14 <nftw@plt+0x15f24>
  418cc8:	mov	w1, #0x0                   	// #0
  418ccc:	b	418c14 <nftw@plt+0x15f24>
  418cd0:	stp	x29, x30, [sp, #-64]!
  418cd4:	mov	x29, sp
  418cd8:	stp	x19, x20, [sp, #16]
  418cdc:	mov	x20, #0x0                   	// #0
  418ce0:	stp	x21, x22, [sp, #32]
  418ce4:	mov	x21, x0
  418ce8:	mov	x0, #0x400                 	// #1024
  418cec:	stp	x23, x24, [sp, #48]
  418cf0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  418cf4:	mov	x19, x0
  418cf8:	mov	x24, #0x400                 	// #1024
  418cfc:	mov	w23, #0x20                  	// #32
  418d00:	mov	x0, x21
  418d04:	bl	418aa8 <nftw@plt+0x15db8>
  418d08:	ldrb	w1, [x0, #4]
  418d0c:	mov	x22, x0
  418d10:	cmp	w1, #0x2
  418d14:	b.eq	418d34 <nftw@plt+0x16044>  // b.none
  418d18:	cmp	w1, #0x16
  418d1c:	b.ne	418d50 <nftw@plt+0x16060>  // b.any
  418d20:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418d24:	mov	x0, x21
  418d28:	add	x2, x2, #0x229
  418d2c:	mov	w1, #0x3                   	// #3
  418d30:	bl	41c014 <nftw@plt+0x19324>
  418d34:	strb	wzr, [x19, x20]
  418d38:	mov	x0, x19
  418d3c:	ldp	x19, x20, [sp, #16]
  418d40:	ldp	x21, x22, [sp, #32]
  418d44:	ldp	x23, x24, [sp, #48]
  418d48:	ldp	x29, x30, [sp], #64
  418d4c:	ret
  418d50:	bl	4227c0 <nftw@plt+0x1fad0>
  418d54:	add	w1, w0, #0x2
  418d58:	add	x0, x20, x1
  418d5c:	cmp	x0, x24
  418d60:	b.ls	418d7c <nftw@plt+0x1608c>  // b.plast
  418d64:	add	x1, x24, x1
  418d68:	mov	x0, x19
  418d6c:	lsl	x24, x1, #1
  418d70:	mov	x1, x24
  418d74:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  418d78:	mov	x19, x0
  418d7c:	ldrh	w0, [x22, #6]
  418d80:	tbz	w0, #0, 418d8c <nftw@plt+0x1609c>
  418d84:	strb	w23, [x19, x20]
  418d88:	add	x20, x20, #0x1
  418d8c:	add	x2, x19, x20
  418d90:	mov	x1, x22
  418d94:	mov	x0, x21
  418d98:	mov	w3, #0x1                   	// #1
  418d9c:	bl	422878 <nftw@plt+0x1fb88>
  418da0:	sub	x20, x0, x19
  418da4:	b	418d00 <nftw@plt+0x16010>
  418da8:	stp	x29, x30, [sp, #-64]!
  418dac:	mov	x29, sp
  418db0:	stp	x19, x20, [sp, #16]
  418db4:	mov	x19, x0
  418db8:	ldr	x0, [x0, #448]
  418dbc:	stp	x21, x22, [sp, #32]
  418dc0:	mov	w21, w1
  418dc4:	str	x23, [sp, #48]
  418dc8:	mov	w22, w2
  418dcc:	ldur	w23, [x0, #-24]
  418dd0:	cbz	w3, 418e4c <nftw@plt+0x1615c>
  418dd4:	ldr	x0, [x19, #144]
  418dd8:	ldr	x1, [x0, #8]
  418ddc:	ldrb	w0, [x19, #24]
  418de0:	add	w0, w0, #0x1
  418de4:	strb	w0, [x19, #24]
  418de8:	mov	x0, x19
  418dec:	bl	422f84 <nftw@plt+0x20294>
  418df0:	mov	x20, x0
  418df4:	ldrb	w0, [x19, #24]
  418df8:	cmp	w22, #0x0
  418dfc:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  418e00:	add	x4, x4, #0xc64
  418e04:	sub	w0, w0, #0x1
  418e08:	strb	w0, [x19, #24]
  418e0c:	cset	w0, ne  // ne = any
  418e10:	cmp	w0, #0x0
  418e14:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  418e18:	b.ne	418e54 <nftw@plt+0x16164>  // b.any
  418e1c:	mov	x5, x20
  418e20:	mov	w2, w23
  418e24:	mov	w1, w22
  418e28:	mov	x0, x19
  418e2c:	mov	w3, #0x0                   	// #0
  418e30:	bl	41c328 <nftw@plt+0x19638>
  418e34:	mov	x0, x20
  418e38:	ldp	x19, x20, [sp, #16]
  418e3c:	ldp	x21, x22, [sp, #32]
  418e40:	ldr	x23, [sp, #48]
  418e44:	ldp	x29, x30, [sp], #64
  418e48:	b	402a80 <free@plt>
  418e4c:	mov	x1, #0x0                   	// #0
  418e50:	b	418ddc <nftw@plt+0x160ec>
  418e54:	cmp	w21, #0x0
  418e58:	mov	x5, x20
  418e5c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  418e60:	mov	w2, w23
  418e64:	mov	w3, #0x0                   	// #0
  418e68:	b.eq	418e7c <nftw@plt+0x1618c>  // b.none
  418e6c:	mov	w1, w22
  418e70:	mov	x0, x19
  418e74:	bl	41c240 <nftw@plt+0x19550>
  418e78:	b	418e34 <nftw@plt+0x16144>
  418e7c:	mov	w1, w21
  418e80:	mov	x0, x19
  418e84:	bl	41c1d0 <nftw@plt+0x194e0>
  418e88:	b	418e34 <nftw@plt+0x16144>
  418e8c:	mov	w3, #0x1                   	// #1
  418e90:	mov	w2, #0x12                  	// #18
  418e94:	mov	w1, w3
  418e98:	b	418da8 <nftw@plt+0x160b8>
  418e9c:	mov	w3, #0x1                   	// #1
  418ea0:	mov	w2, #0x0                   	// #0
  418ea4:	mov	w1, #0x3                   	// #3
  418ea8:	b	418da8 <nftw@plt+0x160b8>
  418eac:	stp	x29, x30, [sp, #-64]!
  418eb0:	mov	x29, sp
  418eb4:	stp	x19, x20, [sp, #16]
  418eb8:	add	x19, x0, #0x328
  418ebc:	mov	x20, x0
  418ec0:	stp	x21, x22, [sp, #32]
  418ec4:	mov	w22, w1
  418ec8:	mov	x21, x3
  418ecc:	stp	x23, x24, [sp, #48]
  418ed0:	mov	w23, w2
  418ed4:	ldr	x24, [x0]
  418ed8:	ldp	x1, x0, [x19, #24]
  418edc:	sub	x0, x0, x1
  418ee0:	cmp	x0, #0x1f
  418ee4:	b.hi	418ef4 <nftw@plt+0x16204>  // b.pmore
  418ee8:	mov	x0, x19
  418eec:	mov	x1, #0x20                  	// #32
  418ef0:	bl	43ce94 <_obstack_newchunk@@Base>
  418ef4:	ldp	x0, x3, [x19, #16]
  418ef8:	add	x3, x3, #0x20
  418efc:	cmp	x3, x0
  418f00:	b.ne	418f10 <nftw@plt+0x16220>  // b.any
  418f04:	ldrb	w1, [x19, #80]
  418f08:	orr	w1, w1, #0x2
  418f0c:	strb	w1, [x19, #80]
  418f10:	ldr	x4, [x19, #48]
  418f14:	ldr	x1, [x19, #8]
  418f18:	add	x3, x3, x4
  418f1c:	ldr	x2, [x19, #32]
  418f20:	bic	x4, x3, x4
  418f24:	sub	x3, x4, x1
  418f28:	sub	x1, x2, x1
  418f2c:	cmp	x3, x1
  418f30:	ldr	w1, [x20, #48]
  418f34:	csel	x4, x4, x2, ls  // ls = plast
  418f38:	stp	x4, x4, [x19, #16]
  418f3c:	mov	w2, #0x1                   	// #1
  418f40:	str	w1, [x0, #8]
  418f44:	sub	w3, w2, w22
  418f48:	ldr	x1, [x24, #96]
  418f4c:	str	x1, [x0]
  418f50:	and	w3, w3, w2
  418f54:	ldrb	w1, [x20, #18]
  418f58:	cmp	w1, #0x0
  418f5c:	cset	w1, ne  // ne = any
  418f60:	strb	w1, [x0, #25]
  418f64:	ldrb	w1, [x20, #440]
  418f68:	csel	w3, w3, w2, eq  // eq = none
  418f6c:	strb	w3, [x0, #24]
  418f70:	str	w23, [x0, #28]
  418f74:	cbz	w1, 418fa4 <nftw@plt+0x162b4>
  418f78:	ldr	x1, [x20, #424]
  418f7c:	cmp	x1, #0x0
  418f80:	csel	x21, x21, xzr, eq  // eq = none
  418f84:	str	x21, [x0, #16]
  418f88:	strb	w22, [x20, #18]
  418f8c:	ldp	x19, x20, [sp, #16]
  418f90:	ldp	x21, x22, [sp, #32]
  418f94:	str	x0, [x24, #96]
  418f98:	ldp	x23, x24, [sp, #48]
  418f9c:	ldp	x29, x30, [sp], #64
  418fa0:	ret
  418fa4:	mov	x21, #0x0                   	// #0
  418fa8:	b	418f84 <nftw@plt+0x16294>
  418fac:	stp	x29, x30, [sp, #-32]!
  418fb0:	mov	x29, sp
  418fb4:	str	x19, [sp, #16]
  418fb8:	mov	x19, x0
  418fbc:	ldrb	w1, [x0, #18]
  418fc0:	cbnz	w1, 418fec <nftw@plt+0x162fc>
  418fc4:	mov	w1, #0x1                   	// #1
  418fc8:	bl	41e040 <nftw@plt+0x1b350>
  418fcc:	and	w1, w0, #0xff
  418fd0:	eor	w1, w1, #0x1
  418fd4:	mov	x0, x19
  418fd8:	mov	w2, #0x4                   	// #4
  418fdc:	ldr	x3, [x19, #432]
  418fe0:	ldr	x19, [sp, #16]
  418fe4:	ldp	x29, x30, [sp], #32
  418fe8:	b	418eac <nftw@plt+0x161bc>
  418fec:	mov	w1, #0x1                   	// #1
  418ff0:	b	418fd4 <nftw@plt+0x162e4>
  418ff4:	stp	x29, x30, [sp, #-32]!
  418ff8:	mov	w1, #0x1                   	// #1
  418ffc:	mov	x29, sp
  419000:	stp	x19, x20, [sp, #16]
  419004:	mov	x19, x0
  419008:	bl	418928 <nftw@plt+0x15c38>
  41900c:	cbz	x0, 419074 <nftw@plt+0x16384>
  419010:	mov	x20, x0
  419014:	ldrb	w0, [x19, #1124]
  419018:	ldr	x1, [x19, #1024]
  41901c:	cmp	w0, #0x0
  419020:	cset	w0, eq  // eq = none
  419024:	strb	w0, [x19, #21]
  419028:	cbz	x1, 419034 <nftw@plt+0x16344>
  41902c:	mov	x0, x19
  419030:	blr	x1
  419034:	mov	x1, x20
  419038:	mov	x0, x19
  41903c:	bl	429114 <nftw@plt+0x26424>
  419040:	tst	w0, #0xff
  419044:	b.eq	419060 <nftw@plt+0x16370>  // b.none
  419048:	ldr	x3, [x19, #936]
  41904c:	cbz	x3, 419060 <nftw@plt+0x16370>
  419050:	ldr	w1, [x19, #48]
  419054:	mov	x2, x20
  419058:	mov	x0, x19
  41905c:	blr	x3
  419060:	ldrh	w0, [x20, #18]
  419064:	ubfx	x1, x0, #2, #8
  419068:	and	w1, w1, #0xffffffdf
  41906c:	bfi	w0, w1, #2, #8
  419070:	strh	w0, [x20, #18]
  419074:	ldp	x19, x20, [sp, #16]
  419078:	ldp	x29, x30, [sp], #32
  41907c:	ret
  419080:	stp	x29, x30, [sp, #-48]!
  419084:	mov	x29, sp
  419088:	ldr	x1, [x0, #144]
  41908c:	stp	x19, x20, [sp, #16]
  419090:	mov	x19, x0
  419094:	str	x21, [sp, #32]
  419098:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41909c:	add	x0, x0, #0x998
  4190a0:	cmp	x1, x0
  4190a4:	b.eq	419124 <nftw@plt+0x16434>  // b.none
  4190a8:	cbz	x1, 419140 <nftw@plt+0x16450>
  4190ac:	ldrb	w20, [x1, #19]
  4190b0:	eor	x20, x20, #0x10
  4190b4:	ubfx	w20, w20, #4, #1
  4190b8:	ldrb	w2, [x19, #18]
  4190bc:	cmp	w2, #0x0
  4190c0:	add	x2, x0, #0x60
  4190c4:	cset	w21, ne  // ne = any
  4190c8:	cmp	x1, x2
  4190cc:	b.ne	419148 <nftw@plt+0x16458>  // b.any
  4190d0:	mov	w0, #0x1                   	// #1
  4190d4:	strb	wzr, [x19, #18]
  4190d8:	strb	w0, [x19, #20]
  4190dc:	cbz	w20, 4190ec <nftw@plt+0x163fc>
  4190e0:	ldrb	w0, [x19, #24]
  4190e4:	add	w0, w0, #0x1
  4190e8:	strb	w0, [x19, #24]
  4190ec:	mov	x0, x19
  4190f0:	mov	w2, #0x0                   	// #0
  4190f4:	mov	x1, #0x0                   	// #0
  4190f8:	bl	42cf58 <nftw@plt+0x2a268>
  4190fc:	cbz	w20, 41910c <nftw@plt+0x1641c>
  419100:	ldrb	w0, [x19, #24]
  419104:	sub	w0, w0, #0x1
  419108:	strb	w0, [x19, #24]
  41910c:	ldr	x1, [x19, #1312]
  419110:	strb	w21, [x19, #18]
  419114:	ldr	x2, [x19, #1328]
  419118:	mov	x0, x19
  41911c:	sub	x2, x2, x1
  419120:	bl	42cef8 <nftw@plt+0x2a208>
  419124:	ldrb	w0, [x19, #24]
  419128:	add	w0, w0, #0x1
  41912c:	strb	w0, [x19, #24]
  419130:	ldp	x19, x20, [sp, #16]
  419134:	ldr	x21, [sp, #32]
  419138:	ldp	x29, x30, [sp], #48
  41913c:	ret
  419140:	mov	w20, #0x0                   	// #0
  419144:	b	4190b8 <nftw@plt+0x163c8>
  419148:	add	x0, x0, #0xd8
  41914c:	cmp	x1, x0
  419150:	b.eq	4190d0 <nftw@plt+0x163e0>  // b.none
  419154:	strb	wzr, [x19, #20]
  419158:	b	4190dc <nftw@plt+0x163ec>
  41915c:	stp	x29, x30, [sp, #-48]!
  419160:	mov	x29, sp
  419164:	stp	x19, x20, [sp, #16]
  419168:	mov	x20, x1
  41916c:	mov	x19, x2
  419170:	stp	x21, x22, [sp, #32]
  419174:	mov	x21, x0
  419178:	cbz	x20, 4191c8 <nftw@plt+0x164d8>
  41917c:	ldrb	w0, [x20, #16]
  419180:	cbz	w0, 419198 <nftw@plt+0x164a8>
  419184:	ldr	x1, [x20, #24]
  419188:	mov	x2, x19
  41918c:	mov	x0, x21
  419190:	bl	41915c <nftw@plt+0x1646c>
  419194:	mov	x19, x0
  419198:	ldr	x22, [x19]
  41919c:	mov	x0, x22
  4191a0:	bl	402630 <strlen@plt>
  4191a4:	mov	x1, x22
  4191a8:	mov	w2, w0
  4191ac:	mov	x0, x21
  4191b0:	bl	421644 <nftw@plt+0x1e954>
  4191b4:	str	x0, [x20, #8]
  4191b8:	ldr	x0, [x19], #8
  4191bc:	bl	402a80 <free@plt>
  4191c0:	ldr	x20, [x20]
  4191c4:	b	419178 <nftw@plt+0x16488>
  4191c8:	mov	x0, x19
  4191cc:	ldp	x19, x20, [sp, #16]
  4191d0:	ldp	x21, x22, [sp, #32]
  4191d4:	ldp	x29, x30, [sp], #48
  4191d8:	ret
  4191dc:	stp	x29, x30, [sp, #-32]!
  4191e0:	mov	x29, sp
  4191e4:	stp	x19, x20, [sp, #16]
  4191e8:	mov	x20, x0
  4191ec:	cbz	x20, 419230 <nftw@plt+0x16540>
  4191f0:	ldrb	w0, [x20, #16]
  4191f4:	cbz	w0, 419204 <nftw@plt+0x16514>
  4191f8:	ldr	x0, [x20, #24]
  4191fc:	bl	4191dc <nftw@plt+0x164ec>
  419200:	mov	x1, x0
  419204:	ldr	x0, [x20, #8]
  419208:	mov	x19, x1
  41920c:	ldr	w3, [x0, #8]
  419210:	ldr	x0, [x0]
  419214:	mov	w1, w3
  419218:	add	w2, w3, #0x1
  41921c:	bl	43d220 <_obstack_memory_used@@Base+0x1c8>
  419220:	str	x0, [x19], #8
  419224:	ldr	x20, [x20]
  419228:	mov	x1, x19
  41922c:	b	4191ec <nftw@plt+0x164fc>
  419230:	mov	x0, x1
  419234:	ldp	x19, x20, [sp, #16]
  419238:	ldp	x29, x30, [sp], #32
  41923c:	ret
  419240:	stp	x29, x30, [sp, #-48]!
  419244:	mov	x29, sp
  419248:	stp	x19, x20, [sp, #16]
  41924c:	mov	x19, x0
  419250:	str	x21, [sp, #32]
  419254:	bl	418aa8 <nftw@plt+0x15db8>
  419258:	mov	x20, x0
  41925c:	ldrb	w0, [x0, #4]
  419260:	cmp	w0, #0x16
  419264:	b.ne	419274 <nftw@plt+0x16584>  // b.any
  419268:	mov	x0, x19
  41926c:	mov	w1, #0x1                   	// #1
  419270:	bl	428cd8 <nftw@plt+0x25fe8>
  419274:	ldrb	w0, [x20, #4]
  419278:	cmp	w0, #0x14
  41927c:	b.ne	4192e8 <nftw@plt+0x165f8>  // b.any
  419280:	mov	x0, x19
  419284:	bl	418aa8 <nftw@plt+0x15db8>
  419288:	mov	x20, x0
  41928c:	ldrb	w0, [x0, #4]
  419290:	cmp	w0, #0x16
  419294:	b.ne	4192a4 <nftw@plt+0x165b4>  // b.any
  419298:	mov	x0, x19
  41929c:	mov	w1, #0x1                   	// #1
  4192a0:	bl	428cd8 <nftw@plt+0x25fe8>
  4192a4:	ldrb	w0, [x20, #4]
  4192a8:	sub	w0, w0, #0x3e
  4192ac:	and	w0, w0, #0xff
  4192b0:	cmp	w0, #0x4
  4192b4:	b.hi	4192e8 <nftw@plt+0x165f8>  // b.pmore
  4192b8:	mov	x0, x19
  4192bc:	bl	418aa8 <nftw@plt+0x15db8>
  4192c0:	mov	x21, x0
  4192c4:	ldrb	w0, [x0, #4]
  4192c8:	cmp	w0, #0x16
  4192cc:	b.ne	4192dc <nftw@plt+0x165ec>  // b.any
  4192d0:	mov	x0, x19
  4192d4:	mov	w1, #0x1                   	// #1
  4192d8:	bl	428cd8 <nftw@plt+0x25fe8>
  4192dc:	ldrb	w0, [x21, #4]
  4192e0:	cmp	w0, #0x15
  4192e4:	b.eq	4192ec <nftw@plt+0x165fc>  // b.none
  4192e8:	mov	x20, #0x0                   	// #0
  4192ec:	mov	x0, x20
  4192f0:	ldp	x19, x20, [sp, #16]
  4192f4:	ldr	x21, [sp, #32]
  4192f8:	ldp	x29, x30, [sp], #48
  4192fc:	ret
  419300:	stp	x29, x30, [sp, #-32]!
  419304:	mov	x29, sp
  419308:	stp	x19, x20, [sp, #16]
  41930c:	mov	w20, w2
  419310:	ldr	x2, [x0, #448]
  419314:	ldurb	w2, [x2, #-20]
  419318:	cmp	w2, #0x16
  41931c:	b.eq	419368 <nftw@plt+0x16678>  // b.none
  419320:	mov	x19, x0
  419324:	and	w1, w1, #0xff
  419328:	cbz	w1, 419360 <nftw@plt+0x16670>
  41932c:	bl	42b37c <nftw@plt+0x2868c>
  419330:	ldrb	w0, [x0, #4]
  419334:	cmp	w0, #0x16
  419338:	b.eq	419368 <nftw@plt+0x16678>  // b.none
  41933c:	ldr	x0, [x19, #144]
  419340:	mov	w1, w20
  419344:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419348:	add	x2, x2, #0x249
  41934c:	ldr	x3, [x0, #8]
  419350:	mov	x0, x19
  419354:	ldp	x19, x20, [sp, #16]
  419358:	ldp	x29, x30, [sp], #32
  41935c:	b	41c0f0 <nftw@plt+0x19400>
  419360:	bl	4254c8 <nftw@plt+0x227d8>
  419364:	b	419330 <nftw@plt+0x16640>
  419368:	ldp	x19, x20, [sp, #16]
  41936c:	ldp	x29, x30, [sp], #32
  419370:	ret
  419374:	mov	w2, #0x0                   	// #0
  419378:	b	419300 <nftw@plt+0x16610>
  41937c:	stp	x29, x30, [sp, #-32]!
  419380:	mov	x29, sp
  419384:	str	x19, [sp, #16]
  419388:	mov	x19, x0
  41938c:	bl	42b37c <nftw@plt+0x2868c>
  419390:	ldrb	w1, [x0, #4]
  419394:	cmp	w1, #0x3e
  419398:	b.eq	4193cc <nftw@plt+0x166dc>  // b.none
  41939c:	ldr	x0, [x19, #144]
  4193a0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  4193a4:	mov	w1, #0x3                   	// #3
  4193a8:	add	x2, x2, #0x26e
  4193ac:	ldr	x3, [x0, #8]
  4193b0:	mov	x0, x19
  4193b4:	bl	41c014 <nftw@plt+0x19324>
  4193b8:	mov	x0, x19
  4193bc:	mov	w1, #0x0                   	// #0
  4193c0:	ldr	x19, [sp, #16]
  4193c4:	ldp	x29, x30, [sp], #32
  4193c8:	b	419374 <nftw@plt+0x16684>
  4193cc:	ldr	x3, [x19, #952]
  4193d0:	cbz	x3, 4193b8 <nftw@plt+0x166c8>
  4193d4:	ldr	w1, [x19, #48]
  4193d8:	add	x2, x0, #0x8
  4193dc:	mov	x0, x19
  4193e0:	blr	x3
  4193e4:	b	4193b8 <nftw@plt+0x166c8>
  4193e8:	stp	x29, x30, [sp, #-96]!
  4193ec:	mov	x29, sp
  4193f0:	stp	x21, x22, [sp, #32]
  4193f4:	mov	x21, x3
  4193f8:	adrp	x22, 455000 <_obstack_memory_used@@Base+0x17fa8>
  4193fc:	stp	x19, x20, [sp, #16]
  419400:	mov	x19, x0
  419404:	add	x22, x22, #0x998
  419408:	stp	x23, x24, [sp, #48]
  41940c:	mov	x24, x1
  419410:	mov	x23, x2
  419414:	stp	x25, x26, [sp, #64]
  419418:	stp	x27, x28, [sp, #80]
  41941c:	bl	418aa8 <nftw@plt+0x15db8>
  419420:	mov	x20, x0
  419424:	ldr	w0, [x0]
  419428:	str	w0, [x21]
  41942c:	ldrb	w0, [x20, #4]
  419430:	cmp	w0, #0x3e
  419434:	b.ne	419494 <nftw@plt+0x167a4>  // b.any
  419438:	ldr	x0, [x20, #16]
  41943c:	ldrb	w0, [x0]
  419440:	cmp	w0, #0x52
  419444:	b.ne	41949c <nftw@plt+0x167ac>  // b.any
  419448:	ldr	x0, [x19, #144]
  41944c:	add	x22, x22, #0x108
  419450:	cmp	x0, x22
  419454:	b.eq	419524 <nftw@plt+0x16834>  // b.none
  419458:	ldr	x3, [x0, #8]
  41945c:	mov	x21, #0x0                   	// #0
  419460:	mov	x0, x19
  419464:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419468:	mov	w1, #0x3                   	// #3
  41946c:	add	x2, x2, #0x296
  419470:	bl	41c014 <nftw@plt+0x19324>
  419474:	mov	x0, x21
  419478:	ldp	x19, x20, [sp, #16]
  41947c:	ldp	x21, x22, [sp, #32]
  419480:	ldp	x23, x24, [sp, #48]
  419484:	ldp	x25, x26, [sp, #64]
  419488:	ldp	x27, x28, [sp, #80]
  41948c:	ldp	x29, x30, [sp], #96
  419490:	ret
  419494:	cmp	w0, #0x44
  419498:	b.ne	419508 <nftw@plt+0x16818>  // b.any
  41949c:	ldr	w0, [x20, #8]
  4194a0:	sub	w0, w0, #0x1
  4194a4:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4194a8:	ldr	x1, [x20, #16]
  4194ac:	mov	x21, x0
  4194b0:	ldr	w2, [x20, #8]
  4194b4:	add	x1, x1, #0x1
  4194b8:	sub	w2, w2, #0x2
  4194bc:	bl	4025d0 <memcpy@plt>
  4194c0:	ldr	w0, [x20, #8]
  4194c4:	sub	w0, w0, #0x2
  4194c8:	strb	wzr, [x21, x0]
  4194cc:	ldrb	w0, [x20, #4]
  4194d0:	cmp	w0, #0x44
  4194d4:	cset	w0, eq  // eq = none
  4194d8:	str	w0, [x24]
  4194dc:	add	x22, x22, #0x108
  4194e0:	ldr	x0, [x19, #144]
  4194e4:	cmp	x0, x22
  4194e8:	b.eq	419474 <nftw@plt+0x16784>  // b.none
  4194ec:	cbz	x23, 4194f8 <nftw@plt+0x16808>
  4194f0:	ldrb	w0, [x19, #1123]
  4194f4:	cbz	w0, 419530 <nftw@plt+0x16840>
  4194f8:	mov	x0, x19
  4194fc:	mov	w1, #0x1                   	// #1
  419500:	bl	419374 <nftw@plt+0x16684>
  419504:	b	419474 <nftw@plt+0x16784>
  419508:	cmp	w0, #0x3
  41950c:	b.ne	419448 <nftw@plt+0x16758>  // b.any
  419510:	mov	x0, x19
  419514:	bl	418cd0 <nftw@plt+0x15fe0>
  419518:	mov	x21, x0
  41951c:	mov	w0, #0x1                   	// #1
  419520:	b	4194d8 <nftw@plt+0x167e8>
  419524:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419528:	add	x3, x3, #0x284
  41952c:	b	41945c <nftw@plt+0x1676c>
  419530:	mov	x0, #0x40                  	// #64
  419534:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  419538:	mov	x20, x0
  41953c:	ldr	x0, [x19, #448]
  419540:	ldurb	w0, [x0, #-20]
  419544:	cmp	w0, #0x16
  419548:	b.ne	41955c <nftw@plt+0x1686c>  // b.any
  41954c:	mov	x22, #0x0                   	// #0
  419550:	str	xzr, [x20, x22, lsl #3]
  419554:	str	x20, [x23]
  419558:	b	419474 <nftw@plt+0x16784>
  41955c:	adrp	x26, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419560:	add	x26, x26, #0x249
  419564:	mov	x25, #0x8                   	// #8
  419568:	mov	x22, #0x0                   	// #0
  41956c:	mov	x0, x19
  419570:	bl	4254c8 <nftw@plt+0x227d8>
  419574:	mov	x24, x0
  419578:	ldrb	w0, [x0, #4]
  41957c:	cmp	w0, #0x16
  419580:	b.eq	419550 <nftw@plt+0x16860>  // b.none
  419584:	cmp	w0, #0x4f
  419588:	b.eq	4195a8 <nftw@plt+0x168b8>  // b.none
  41958c:	ldr	x0, [x19, #144]
  419590:	mov	x2, x26
  419594:	mov	w1, #0x2                   	// #2
  419598:	ldr	x3, [x0, #8]
  41959c:	mov	x0, x19
  4195a0:	bl	41c014 <nftw@plt+0x19324>
  4195a4:	b	41956c <nftw@plt+0x1687c>
  4195a8:	add	x27, x22, #0x1
  4195ac:	cmp	x27, x25
  4195b0:	b.cc	4195cc <nftw@plt+0x168dc>  // b.lo, b.ul, b.last
  4195b4:	lsl	x28, x25, #1
  4195b8:	lsl	x1, x25, #4
  4195bc:	mov	x0, x20
  4195c0:	mov	x25, x28
  4195c4:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  4195c8:	mov	x20, x0
  4195cc:	str	x24, [x20, x22, lsl #3]
  4195d0:	mov	x22, x27
  4195d4:	b	41956c <nftw@plt+0x1687c>
  4195d8:	stp	x29, x30, [sp, #-48]!
  4195dc:	mov	x2, #0x0                   	// #0
  4195e0:	mov	x29, sp
  4195e4:	add	x3, sp, #0x2c
  4195e8:	add	x1, sp, #0x28
  4195ec:	stp	x19, x20, [sp, #16]
  4195f0:	mov	x19, x0
  4195f4:	bl	4193e8 <nftw@plt+0x166f8>
  4195f8:	cbz	x0, 419638 <nftw@plt+0x16948>
  4195fc:	ldr	w2, [sp, #40]
  419600:	mov	x1, x0
  419604:	mov	x20, x0
  419608:	mov	x0, x19
  41960c:	bl	421180 <nftw@plt+0x1e490>
  419610:	cmp	w0, #0x0
  419614:	b.ge	419644 <nftw@plt+0x16954>  // b.tcont
  419618:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41961c:	mov	x3, x20
  419620:	add	x2, x2, #0x2bb
  419624:	mov	x0, x19
  419628:	mov	w1, #0x0                   	// #0
  41962c:	bl	41c014 <nftw@plt+0x19324>
  419630:	mov	x0, x20
  419634:	bl	402a80 <free@plt>
  419638:	ldp	x19, x20, [sp, #16]
  41963c:	ldp	x29, x30, [sp], #48
  419640:	ret
  419644:	b.eq	419630 <nftw@plt+0x16940>  // b.none
  419648:	mov	x3, x20
  41964c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419650:	add	x2, x2, #0x2d6
  419654:	mov	w1, #0x0                   	// #0
  419658:	mov	x0, x19
  41965c:	bl	41c014 <nftw@plt+0x19324>
  419660:	mov	x0, x19
  419664:	bl	42b37c <nftw@plt+0x2868c>
  419668:	ldrb	w0, [x0, #4]
  41966c:	cmp	w0, #0x16
  419670:	b.eq	419630 <nftw@plt+0x16940>  // b.none
  419674:	mov	x0, x19
  419678:	mov	w1, #0x1                   	// #1
  41967c:	bl	428cd8 <nftw@plt+0x25fe8>
  419680:	mov	x0, x19
  419684:	mov	w3, #0x0                   	// #0
  419688:	mov	w2, #0x0                   	// #0
  41968c:	mov	w1, #0x0                   	// #0
  419690:	bl	418da8 <nftw@plt+0x160b8>
  419694:	b	419630 <nftw@plt+0x16940>
  419698:	stp	x29, x30, [sp, #-32]!
  41969c:	mov	x29, sp
  4196a0:	ldr	x1, [x0, #40]
  4196a4:	ldr	w1, [x1, #48]
  4196a8:	str	x19, [sp, #16]
  4196ac:	mov	x19, x0
  4196b0:	cmp	w1, #0x1
  4196b4:	b.ne	4196c8 <nftw@plt+0x169d8>  // b.any
  4196b8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  4196bc:	mov	w1, #0x0                   	// #0
  4196c0:	add	x2, x2, #0x2f4
  4196c4:	bl	41c014 <nftw@plt+0x19324>
  4196c8:	mov	x0, x19
  4196cc:	mov	w1, #0x0                   	// #0
  4196d0:	bl	419374 <nftw@plt+0x16684>
  4196d4:	ldr	x0, [x19]
  4196d8:	ldr	x1, [x0, #80]
  4196dc:	mov	x0, x19
  4196e0:	ldr	x19, [sp, #16]
  4196e4:	ldp	x29, x30, [sp], #32
  4196e8:	b	420c78 <nftw@plt+0x1df88>
  4196ec:	stp	x29, x30, [sp, #-32]!
  4196f0:	mov	w1, #0x1                   	// #1
  4196f4:	mov	x29, sp
  4196f8:	stp	x19, x20, [sp, #16]
  4196fc:	mov	x19, x0
  419700:	bl	418928 <nftw@plt+0x15c38>
  419704:	cbz	x0, 41977c <nftw@plt+0x16a8c>
  419708:	ldr	x1, [x19, #1024]
  41970c:	mov	x20, x0
  419710:	cbz	x1, 41971c <nftw@plt+0x16a2c>
  419714:	mov	x0, x19
  419718:	blr	x1
  41971c:	ldr	x3, [x19, #944]
  419720:	cbz	x3, 419734 <nftw@plt+0x16a44>
  419724:	ldr	w1, [x19, #48]
  419728:	mov	x2, x20
  41972c:	mov	x0, x19
  419730:	blr	x3
  419734:	ldrb	w0, [x20, #18]
  419738:	tbz	w0, #1, 41977c <nftw@plt+0x16a8c>
  41973c:	ldrh	w1, [x20, #18]
  419740:	tbz	w1, #5, 419790 <nftw@plt+0x16aa0>
  419744:	ldr	x3, [x20]
  419748:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41974c:	mov	x0, x19
  419750:	add	x2, x2, #0x30e
  419754:	mov	w1, #0x0                   	// #0
  419758:	bl	41c014 <nftw@plt+0x19324>
  41975c:	ldrb	w0, [x19, #1151]
  419760:	cbz	w0, 419774 <nftw@plt+0x16a84>
  419764:	mov	x1, x20
  419768:	mov	x0, x19
  41976c:	mov	x2, #0x0                   	// #0
  419770:	bl	42838c <nftw@plt+0x2569c>
  419774:	mov	x0, x20
  419778:	bl	428f58 <nftw@plt+0x26268>
  41977c:	mov	x0, x19
  419780:	mov	w1, #0x0                   	// #0
  419784:	ldp	x19, x20, [sp, #16]
  419788:	ldp	x29, x30, [sp], #32
  41978c:	b	419374 <nftw@plt+0x16684>
  419790:	and	w0, w0, #0x3
  419794:	cmp	w0, #0x3
  419798:	b.ne	41975c <nftw@plt+0x16a6c>  // b.any
  41979c:	ldrb	w0, [x19, #1143]
  4197a0:	cbz	w0, 41975c <nftw@plt+0x16a6c>
  4197a4:	ldr	w2, [x19, #48]
  4197a8:	mov	x0, x19
  4197ac:	ldr	x5, [x20]
  4197b0:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  4197b4:	mov	w3, #0x0                   	// #0
  4197b8:	add	x4, x4, #0x30e
  4197bc:	mov	w1, #0xb                   	// #11
  4197c0:	bl	41c240 <nftw@plt+0x19550>
  4197c4:	b	41975c <nftw@plt+0x16a6c>
  4197c8:	stp	x29, x30, [sp, #-48]!
  4197cc:	mov	x29, sp
  4197d0:	stp	x19, x20, [sp, #16]
  4197d4:	mov	x20, x0
  4197d8:	str	x21, [sp, #32]
  4197dc:	ldrb	w1, [x0, #18]
  4197e0:	cbz	w1, 41980c <nftw@plt+0x16b1c>
  4197e4:	mov	x19, #0x0                   	// #0
  4197e8:	mov	w21, #0x1                   	// #1
  4197ec:	mov	x3, x19
  4197f0:	mov	w1, w21
  4197f4:	mov	x0, x20
  4197f8:	mov	w2, #0x6                   	// #6
  4197fc:	ldp	x19, x20, [sp, #16]
  419800:	ldr	x21, [sp, #32]
  419804:	ldp	x29, x30, [sp], #48
  419808:	b	418eac <nftw@plt+0x161bc>
  41980c:	mov	w1, #0x0                   	// #0
  419810:	bl	418928 <nftw@plt+0x15c38>
  419814:	mov	x19, x0
  419818:	cbz	x0, 4197e4 <nftw@plt+0x16af4>
  41981c:	ldrh	w21, [x0, #18]
  419820:	ldrb	w0, [x0, #18]
  419824:	ubfx	x2, x21, #2, #8
  419828:	eor	x21, x21, #0x100
  41982c:	tst	x0, #0x2
  419830:	and	w0, w0, #0x3
  419834:	ubfx	w21, w21, #8, #1
  419838:	csel	w21, w21, wzr, ne  // ne = any
  41983c:	cmp	w0, #0x2
  419840:	b.ne	419854 <nftw@plt+0x16b64>  // b.any
  419844:	ldr	x1, [x19, #24]
  419848:	ldrb	w0, [x1, #19]
  41984c:	orr	w0, w0, #0x20
  419850:	strb	w0, [x1, #19]
  419854:	tbnz	w2, #5, 419864 <nftw@plt+0x16b74>
  419858:	mov	x1, x19
  41985c:	mov	x0, x20
  419860:	bl	429b58 <nftw@plt+0x26e68>
  419864:	ldr	x3, [x20, #1032]
  419868:	cbz	x3, 41987c <nftw@plt+0x16b8c>
  41986c:	ldr	w1, [x20, #48]
  419870:	mov	x2, x19
  419874:	mov	x0, x20
  419878:	blr	x3
  41987c:	mov	x0, x20
  419880:	mov	w1, #0x0                   	// #0
  419884:	bl	419374 <nftw@plt+0x16684>
  419888:	b	4197ec <nftw@plt+0x16afc>
  41988c:	stp	x29, x30, [sp, #-32]!
  419890:	mov	x29, sp
  419894:	str	x19, [sp, #16]
  419898:	mov	x19, x0
  41989c:	ldr	x0, [x19, #136]
  4198a0:	ldr	x0, [x0, #8]
  4198a4:	cbz	x0, 4198b4 <nftw@plt+0x16bc4>
  4198a8:	mov	x0, x19
  4198ac:	bl	428b68 <nftw@plt+0x25e78>
  4198b0:	b	41989c <nftw@plt+0x16bac>
  4198b4:	ldr	x0, [x19, #448]
  4198b8:	ldurb	w0, [x0, #-20]
  4198bc:	cmp	w0, #0x16
  4198c0:	b.eq	4198d4 <nftw@plt+0x16be4>  // b.none
  4198c4:	mov	x0, x19
  4198c8:	bl	4254c8 <nftw@plt+0x227d8>
  4198cc:	ldrb	w0, [x0, #4]
  4198d0:	b	4198bc <nftw@plt+0x16bcc>
  4198d4:	ldr	x19, [sp, #16]
  4198d8:	ldp	x29, x30, [sp], #32
  4198dc:	ret
  4198e0:	stp	x29, x30, [sp, #-64]!
  4198e4:	mov	x29, sp
  4198e8:	stp	x19, x20, [sp, #16]
  4198ec:	add	x3, sp, #0x34
  4198f0:	mov	x19, x0
  4198f4:	str	x21, [sp, #32]
  4198f8:	mov	w21, w1
  4198fc:	add	x2, sp, #0x38
  419900:	str	xzr, [sp, #56]
  419904:	ldrb	w1, [x0, #1123]
  419908:	cmp	w1, #0x0
  41990c:	cset	w1, eq  // eq = none
  419910:	strb	w1, [x0, #21]
  419914:	add	x1, sp, #0x30
  419918:	bl	4193e8 <nftw@plt+0x166f8>
  41991c:	mov	x20, x0
  419920:	cbz	x0, 419950 <nftw@plt+0x16c60>
  419924:	ldrb	w0, [x0]
  419928:	cbnz	w0, 419974 <nftw@plt+0x16c84>
  41992c:	ldr	x0, [x19, #144]
  419930:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419934:	ldr	w2, [sp, #52]
  419938:	add	x4, x4, #0x31e
  41993c:	mov	w3, #0x0                   	// #0
  419940:	mov	w1, #0x3                   	// #3
  419944:	ldr	x5, [x0, #8]
  419948:	mov	x0, x19
  41994c:	bl	41c1d0 <nftw@plt+0x194e0>
  419950:	mov	x0, x20
  419954:	bl	402a80 <free@plt>
  419958:	ldr	x0, [sp, #56]
  41995c:	cbz	x0, 419964 <nftw@plt+0x16c74>
  419960:	bl	402a80 <free@plt>
  419964:	ldp	x19, x20, [sp, #16]
  419968:	ldr	x21, [sp, #32]
  41996c:	ldp	x29, x30, [sp], #64
  419970:	ret
  419974:	ldr	x0, [x19, #40]
  419978:	ldr	w0, [x0, #48]
  41997c:	cmp	w0, #0xc7
  419980:	b.ls	41999c <nftw@plt+0x16cac>  // b.plast
  419984:	mov	x0, x19
  419988:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41998c:	mov	w1, #0x3                   	// #3
  419990:	add	x2, x2, #0x334
  419994:	bl	41c014 <nftw@plt+0x19324>
  419998:	b	419950 <nftw@plt+0x16c60>
  41999c:	mov	x0, x19
  4199a0:	bl	41988c <nftw@plt+0x16b9c>
  4199a4:	ldr	x6, [x19, #928]
  4199a8:	cbz	x6, 4199cc <nftw@plt+0x16cdc>
  4199ac:	ldr	x0, [x19, #144]
  4199b0:	mov	x3, x20
  4199b4:	ldr	w1, [x19, #48]
  4199b8:	ldr	w4, [sp, #48]
  4199bc:	ldr	x2, [x0, #8]
  4199c0:	mov	x0, x19
  4199c4:	ldr	x5, [sp, #56]
  4199c8:	blr	x6
  4199cc:	ldp	w2, w4, [sp, #48]
  4199d0:	mov	w3, w21
  4199d4:	mov	x1, x20
  4199d8:	mov	x0, x19
  4199dc:	bl	420c88 <nftw@plt+0x1df98>
  4199e0:	b	419950 <nftw@plt+0x16c60>
  4199e4:	mov	w1, #0x2                   	// #2
  4199e8:	b	4198e0 <nftw@plt+0x16bf0>
  4199ec:	stp	x29, x30, [sp, #-32]!
  4199f0:	mov	x29, sp
  4199f4:	ldr	x1, [x0, #40]
  4199f8:	ldr	w1, [x1, #48]
  4199fc:	str	x19, [sp, #16]
  419a00:	mov	x19, x0
  419a04:	cmp	w1, #0x1
  419a08:	b.ne	419a30 <nftw@plt+0x16d40>  // b.any
  419a0c:	mov	w1, #0x0                   	// #0
  419a10:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419a14:	add	x2, x2, #0x34f
  419a18:	bl	41c014 <nftw@plt+0x19324>
  419a1c:	mov	w1, #0x0                   	// #0
  419a20:	mov	x0, x19
  419a24:	ldr	x19, [sp, #16]
  419a28:	ldp	x29, x30, [sp], #32
  419a2c:	b	4198e0 <nftw@plt+0x16bf0>
  419a30:	mov	w1, #0x1                   	// #1
  419a34:	b	419a20 <nftw@plt+0x16d30>
  419a38:	mov	w1, #0x0                   	// #0
  419a3c:	b	4198e0 <nftw@plt+0x16bf0>
  419a40:	stp	x29, x30, [sp, #-32]!
  419a44:	mov	x29, sp
  419a48:	str	x19, [sp, #16]
  419a4c:	mov	x19, x0
  419a50:	ldrb	w3, [x0, #1160]
  419a54:	ldrb	w2, [x0, #32]
  419a58:	cbz	w3, 419ab0 <nftw@plt+0x16dc0>
  419a5c:	cbnz	w2, 419a6c <nftw@plt+0x16d7c>
  419a60:	ldrb	w0, [x0, #24]
  419a64:	sub	w0, w0, #0x1
  419a68:	strb	w0, [x19, #24]
  419a6c:	ldr	x1, [x19, #144]
  419a70:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419a74:	add	x0, x0, #0x998
  419a78:	cmp	x1, x0
  419a7c:	b.eq	419a88 <nftw@plt+0x16d98>  // b.none
  419a80:	mov	x0, x19
  419a84:	bl	42cf2c <nftw@plt+0x2a23c>
  419a88:	ldrb	w0, [x19, #1123]
  419a8c:	strb	wzr, [x19, #16]
  419a90:	cmp	w0, #0x0
  419a94:	sturh	wzr, [x19, #19]
  419a98:	cset	w0, eq  // eq = none
  419a9c:	strb	w0, [x19, #21]
  419aa0:	str	xzr, [x19, #144]
  419aa4:	ldr	x19, [sp, #16]
  419aa8:	ldp	x29, x30, [sp], #32
  419aac:	ret
  419ab0:	cbnz	w2, 419a88 <nftw@plt+0x16d98>
  419ab4:	cbz	w1, 419a88 <nftw@plt+0x16d98>
  419ab8:	bl	41988c <nftw@plt+0x16b9c>
  419abc:	ldr	w0, [x19, #500]
  419ac0:	cbnz	w0, 419a88 <nftw@plt+0x16d98>
  419ac4:	add	x0, x19, #0x1c8
  419ac8:	str	x0, [x19, #488]
  419acc:	ldr	x0, [x19, #472]
  419ad0:	str	x0, [x19, #448]
  419ad4:	b	419a88 <nftw@plt+0x16d98>
  419ad8:	stp	x29, x30, [sp, #-64]!
  419adc:	mov	x29, sp
  419ae0:	stp	x19, x20, [sp, #16]
  419ae4:	mov	x20, x0
  419ae8:	stp	x21, x22, [sp, #32]
  419aec:	str	x23, [sp, #48]
  419af0:	bl	419240 <nftw@plt+0x16550>
  419af4:	cbnz	x0, 419b44 <nftw@plt+0x16e54>
  419af8:	ldr	x0, [x20, #448]
  419afc:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419b00:	add	x4, x4, #0x374
  419b04:	mov	w3, #0x0                   	// #0
  419b08:	mov	w1, #0x3                   	// #3
  419b0c:	ldur	w2, [x0, #-24]
  419b10:	mov	x0, x20
  419b14:	bl	41c1d0 <nftw@plt+0x194e0>
  419b18:	mov	w1, #0x0                   	// #0
  419b1c:	mov	x0, x20
  419b20:	bl	419374 <nftw@plt+0x16684>
  419b24:	mov	x0, x20
  419b28:	bl	41988c <nftw@plt+0x16b9c>
  419b2c:	mov	sp, x29
  419b30:	ldp	x19, x20, [sp, #16]
  419b34:	ldp	x21, x22, [sp, #32]
  419b38:	ldr	x23, [sp, #48]
  419b3c:	ldp	x29, x30, [sp], #64
  419b40:	ret
  419b44:	ldr	w2, [x0, #8]
  419b48:	ldr	x0, [x0, #16]
  419b4c:	add	w1, w2, #0x2
  419b50:	add	x1, x1, #0xf
  419b54:	mov	w2, w2
  419b58:	and	x1, x1, #0x1fffffff0
  419b5c:	sub	x2, x2, #0x1
  419b60:	sub	sp, sp, x1
  419b64:	ldrb	w1, [x0]
  419b68:	mov	x22, sp
  419b6c:	add	x2, x0, x2
  419b70:	cmp	w1, #0x4c
  419b74:	cset	x1, eq  // eq = none
  419b78:	add	x1, x1, #0x1
  419b7c:	add	x1, x0, x1
  419b80:	mov	x0, x22
  419b84:	cmp	x1, x2
  419b88:	b.cs	419bbc <nftw@plt+0x16ecc>  // b.hs, b.nlast
  419b8c:	ldrb	w3, [x1]
  419b90:	cmp	w3, #0x5c
  419b94:	b.ne	419bb0 <nftw@plt+0x16ec0>  // b.any
  419b98:	ldrb	w3, [x1, #1]
  419b9c:	cmp	w3, #0x5c
  419ba0:	b.eq	419bac <nftw@plt+0x16ebc>  // b.none
  419ba4:	cmp	w3, #0x22
  419ba8:	b.ne	419bb0 <nftw@plt+0x16ec0>  // b.any
  419bac:	add	x1, x1, #0x1
  419bb0:	ldrb	w3, [x1], #1
  419bb4:	strb	w3, [x0], #1
  419bb8:	b	419b84 <nftw@plt+0x16e94>
  419bbc:	strb	wzr, [x0]
  419bc0:	mov	w1, #0x0                   	// #0
  419bc4:	mov	x0, x20
  419bc8:	bl	419374 <nftw@plt+0x16684>
  419bcc:	mov	x0, x20
  419bd0:	bl	41988c <nftw@plt+0x16b9c>
  419bd4:	mov	x0, #0x20                  	// #32
  419bd8:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  419bdc:	mov	x19, x0
  419be0:	stp	xzr, xzr, [x0]
  419be4:	stp	xzr, xzr, [x0, #16]
  419be8:	mov	x0, x22
  419bec:	bl	402630 <strlen@plt>
  419bf0:	add	x0, x0, #0x1
  419bf4:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  419bf8:	mov	x21, x0
  419bfc:	mov	x1, x22
  419c00:	str	x0, [x19, #8]
  419c04:	bl	402b00 <strcpy@plt>
  419c08:	ldr	x0, [x20, #1400]
  419c0c:	mov	x1, x21
  419c10:	str	x0, [x19]
  419c14:	mov	x0, x20
  419c18:	bl	422410 <nftw@plt+0x1f720>
  419c1c:	mov	x22, x0
  419c20:	ldrb	w0, [x0, #18]
  419c24:	tst	x0, #0x3
  419c28:	b.ne	419c40 <nftw@plt+0x16f50>  // b.any
  419c2c:	ldrb	w0, [x19, #28]
  419c30:	orr	w0, w0, #0x4
  419c34:	strb	w0, [x19, #28]
  419c38:	str	x19, [x20, #1400]
  419c3c:	b	419b2c <nftw@plt+0x16e3c>
  419c40:	mov	x1, x22
  419c44:	mov	x0, x20
  419c48:	bl	42b414 <nftw@plt+0x28724>
  419c4c:	mov	x23, x0
  419c50:	bl	402630 <strlen@plt>
  419c54:	mov	x21, x0
  419c58:	add	x0, x0, #0x2
  419c5c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  419c60:	add	x3, x0, x21
  419c64:	mov	w1, #0xa                   	// #10
  419c68:	strb	w1, [x0, x21]
  419c6c:	str	x0, [x19, #16]
  419c70:	strb	wzr, [x3, #1]
  419c74:	ldr	x1, [x22, #24]
  419c78:	ldrb	w3, [x1, #19]
  419c7c:	ldr	w2, [x1, #8]
  419c80:	str	w2, [x19, #24]
  419c84:	ubfx	x2, x3, #5, #1
  419c88:	ldrb	w1, [x19, #28]
  419c8c:	ubfx	x3, x3, #4, #1
  419c90:	ubfiz	w2, w2, #1, #7
  419c94:	orr	w2, w2, w3
  419c98:	bfxil	w1, w2, #0, #2
  419c9c:	mov	x2, x21
  419ca0:	strb	w1, [x19, #28]
  419ca4:	mov	x1, x23
  419ca8:	bl	4025d0 <memcpy@plt>
  419cac:	b	419c38 <nftw@plt+0x16f48>
  419cb0:	stp	x29, x30, [sp, #-32]!
  419cb4:	mov	x29, sp
  419cb8:	ldr	x1, [x0]
  419cbc:	stp	x19, x20, [sp, #16]
  419cc0:	ldr	x19, [x1, #96]
  419cc4:	cbnz	x19, 419ce0 <nftw@plt+0x16ff0>
  419cc8:	ldp	x19, x20, [sp, #16]
  419ccc:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419cd0:	ldp	x29, x30, [sp], #32
  419cd4:	add	x2, x2, #0x399
  419cd8:	mov	w1, #0x3                   	// #3
  419cdc:	b	41c014 <nftw@plt+0x19324>
  419ce0:	ldr	w1, [x19, #28]
  419ce4:	mov	x20, x0
  419ce8:	cmp	w1, #0x5
  419cec:	b.ne	419d1c <nftw@plt+0x1702c>  // b.any
  419cf0:	mov	w1, #0x3                   	// #3
  419cf4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419cf8:	add	x2, x2, #0x3ab
  419cfc:	bl	41c014 <nftw@plt+0x19324>
  419d00:	ldr	w2, [x19, #8]
  419d04:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419d08:	mov	x0, x20
  419d0c:	add	x4, x4, #0x3bd
  419d10:	mov	w3, #0x0                   	// #0
  419d14:	mov	w1, #0x3                   	// #3
  419d18:	bl	41c1d0 <nftw@plt+0x194e0>
  419d1c:	mov	w0, #0x9                   	// #9
  419d20:	str	w0, [x19, #28]
  419d24:	ldrb	w0, [x19, #24]
  419d28:	cbz	w0, 419d44 <nftw@plt+0x17054>
  419d2c:	mov	w0, #0x1                   	// #1
  419d30:	strb	w0, [x20, #18]
  419d34:	str	xzr, [x19, #16]
  419d38:	ldp	x19, x20, [sp, #16]
  419d3c:	ldp	x29, x30, [sp], #32
  419d40:	ret
  419d44:	mov	w1, #0x0                   	// #0
  419d48:	mov	x0, x20
  419d4c:	bl	41e040 <nftw@plt+0x1b350>
  419d50:	eor	w1, w0, #0x1
  419d54:	strb	w1, [x20, #18]
  419d58:	strb	w0, [x19, #24]
  419d5c:	b	419d34 <nftw@plt+0x17044>
  419d60:	stp	x29, x30, [sp, #-48]!
  419d64:	mov	x29, sp
  419d68:	str	x21, [sp, #32]
  419d6c:	ldr	x21, [x0]
  419d70:	stp	x19, x20, [sp, #16]
  419d74:	ldr	x20, [x21, #96]
  419d78:	cbnz	x20, 419d98 <nftw@plt+0x170a8>
  419d7c:	ldp	x19, x20, [sp, #16]
  419d80:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419d84:	ldr	x21, [sp, #32]
  419d88:	add	x2, x2, #0x3d8
  419d8c:	ldp	x29, x30, [sp], #48
  419d90:	mov	w1, #0x3                   	// #3
  419d94:	b	41c014 <nftw@plt+0x19324>
  419d98:	ldrb	w1, [x20, #25]
  419d9c:	mov	x19, x0
  419da0:	cbnz	w1, 419db8 <nftw@plt+0x170c8>
  419da4:	ldrb	w1, [x0, #1140]
  419da8:	cbz	w1, 419db8 <nftw@plt+0x170c8>
  419dac:	mov	w2, #0x8                   	// #8
  419db0:	mov	w1, #0x0                   	// #0
  419db4:	bl	419300 <nftw@plt+0x16610>
  419db8:	ldr	x0, [x20]
  419dbc:	cbnz	x0, 419dd4 <nftw@plt+0x170e4>
  419dc0:	ldr	x1, [x20, #16]
  419dc4:	cbz	x1, 419dd4 <nftw@plt+0x170e4>
  419dc8:	mov	w2, #0x1                   	// #1
  419dcc:	str	x1, [x19, #424]
  419dd0:	strb	w2, [x19, #440]
  419dd4:	str	x0, [x21, #96]
  419dd8:	ldrb	w0, [x20, #25]
  419ddc:	strb	w0, [x19, #18]
  419de0:	add	x0, x19, #0x328
  419de4:	ldr	x1, [x0, #8]
  419de8:	cmp	x1, x20
  419dec:	b.cs	419e10 <nftw@plt+0x17120>  // b.hs, b.nlast
  419df0:	ldr	x1, [x0, #32]
  419df4:	cmp	x1, x20
  419df8:	b.ls	419e10 <nftw@plt+0x17120>  // b.plast
  419dfc:	ldr	x21, [sp, #32]
  419e00:	stp	x20, x20, [x0, #16]
  419e04:	ldp	x19, x20, [sp, #16]
  419e08:	ldp	x29, x30, [sp], #48
  419e0c:	ret
  419e10:	mov	x1, x20
  419e14:	ldp	x19, x20, [sp, #16]
  419e18:	ldr	x21, [sp, #32]
  419e1c:	ldp	x29, x30, [sp], #48
  419e20:	b	43cfe4 <_obstack_free@@Base>
  419e24:	ldr	x1, [x0, #40]
  419e28:	ldr	w1, [x1, #48]
  419e2c:	cmp	w1, #0x1
  419e30:	b.ne	419e44 <nftw@plt+0x17154>  // b.any
  419e34:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419e38:	mov	w1, #0x0                   	// #0
  419e3c:	add	x2, x2, #0x3eb
  419e40:	b	41c014 <nftw@plt+0x19324>
  419e44:	stp	x29, x30, [sp, #-32]!
  419e48:	mov	w1, #0x0                   	// #0
  419e4c:	mov	x29, sp
  419e50:	str	x19, [sp, #16]
  419e54:	mov	x19, x0
  419e58:	bl	419374 <nftw@plt+0x16684>
  419e5c:	mov	x0, x19
  419e60:	bl	41988c <nftw@plt+0x16b9c>
  419e64:	mov	x0, x19
  419e68:	mov	w2, #0x0                   	// #0
  419e6c:	ldr	x19, [sp, #16]
  419e70:	mov	w1, #0x1                   	// #1
  419e74:	ldp	x29, x30, [sp], #32
  419e78:	b	421064 <nftw@plt+0x1e374>
  419e7c:	stp	x29, x30, [sp, #-96]!
  419e80:	mov	x29, sp
  419e84:	stp	x19, x20, [sp, #16]
  419e88:	mov	w20, w1
  419e8c:	mov	x19, x0
  419e90:	stp	x21, x22, [sp, #32]
  419e94:	stp	x23, x24, [sp, #48]
  419e98:	mov	x24, x2
  419e9c:	stp	x25, x26, [sp, #64]
  419ea0:	stp	x27, x28, [sp, #80]
  419ea4:	ldrb	w1, [x0, #24]
  419ea8:	add	w1, w1, #0x1
  419eac:	strb	w1, [x0, #24]
  419eb0:	str	xzr, [x2]
  419eb4:	bl	42b37c <nftw@plt+0x2868c>
  419eb8:	mov	x21, x0
  419ebc:	ldrb	w0, [x0, #4]
  419ec0:	cmp	w0, #0x16
  419ec4:	b.ne	419ee0 <nftw@plt+0x171f0>  // b.any
  419ec8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419ecc:	add	x2, x2, #0x41e
  419ed0:	mov	x0, x19
  419ed4:	mov	w1, #0x3                   	// #3
  419ed8:	bl	41c014 <nftw@plt+0x19324>
  419edc:	b	419f08 <nftw@plt+0x17218>
  419ee0:	ldr	w22, [x21]
  419ee4:	cmp	w0, #0x35
  419ee8:	b.eq	419f38 <nftw@plt+0x17248>  // b.none
  419eec:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419ef0:	add	x4, x4, #0x43a
  419ef4:	mov	w2, w22
  419ef8:	mov	x0, x19
  419efc:	mov	w3, #0x0                   	// #0
  419f00:	mov	w1, #0x3                   	// #3
  419f04:	bl	41c1d0 <nftw@plt+0x194e0>
  419f08:	mov	x0, #0x0                   	// #0
  419f0c:	ldrb	w1, [x19, #24]
  419f10:	sub	w1, w1, #0x1
  419f14:	strb	w1, [x19, #24]
  419f18:	mov	sp, x29
  419f1c:	ldp	x19, x20, [sp, #16]
  419f20:	ldp	x21, x22, [sp, #32]
  419f24:	ldp	x23, x24, [sp, #48]
  419f28:	ldp	x25, x26, [sp, #64]
  419f2c:	ldp	x27, x28, [sp, #80]
  419f30:	ldp	x29, x30, [sp], #96
  419f34:	ret
  419f38:	mov	x0, x19
  419f3c:	bl	42b37c <nftw@plt+0x2868c>
  419f40:	ldrb	w0, [x0, #4]
  419f44:	cmp	w0, #0x14
  419f48:	b.eq	419fcc <nftw@plt+0x172dc>  // b.none
  419f4c:	cmp	w20, #0x4
  419f50:	b.ne	419fb0 <nftw@plt+0x172c0>  // b.any
  419f54:	mov	x0, x19
  419f58:	mov	w1, #0x1                   	// #1
  419f5c:	bl	428cd8 <nftw@plt+0x25fe8>
  419f60:	ldr	x0, [x21, #8]
  419f64:	mov	w1, #0x23                  	// #35
  419f68:	ldr	w2, [x0, #8]
  419f6c:	add	w0, w2, #0x1
  419f70:	add	w22, w2, #0x1
  419f74:	add	x0, x0, #0xf
  419f78:	mov	w2, w2
  419f7c:	and	x0, x0, #0x1fffffff0
  419f80:	sub	sp, sp, x0
  419f84:	mov	x20, sp
  419f88:	mov	x0, x20
  419f8c:	strb	w1, [x0], #1
  419f90:	ldr	x1, [x21, #8]
  419f94:	ldr	x1, [x1]
  419f98:	bl	4025d0 <memcpy@plt>
  419f9c:	mov	w2, w22
  419fa0:	mov	x1, x20
  419fa4:	mov	x0, x19
  419fa8:	bl	421644 <nftw@plt+0x1e954>
  419fac:	b	419f0c <nftw@plt+0x1721c>
  419fb0:	cmp	w20, #0x11
  419fb4:	b.ne	419fc0 <nftw@plt+0x172d0>  // b.any
  419fb8:	cmp	w0, #0x16
  419fbc:	b.eq	419f60 <nftw@plt+0x17270>  // b.none
  419fc0:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  419fc4:	add	x4, x4, #0x45a
  419fc8:	b	419ef4 <nftw@plt+0x17204>
  419fcc:	ldr	x1, [x19, #56]
  419fd0:	ldr	x0, [x1, #24]
  419fd4:	ldr	x1, [x1, #16]
  419fd8:	sub	x0, x0, x1
  419fdc:	cmp	x0, #0x2f
  419fe0:	b.hi	419ff4 <nftw@plt+0x17304>  // b.pmore
  419fe4:	add	x1, x19, #0x38
  419fe8:	mov	x0, x19
  419fec:	mov	x2, #0x30                  	// #48
  419ff0:	bl	423260 <nftw@plt+0x20570>
  419ff4:	ldr	x0, [x19, #56]
  419ff8:	mov	w1, #0x1                   	// #1
  419ffc:	add	x28, x19, #0x38
  41a000:	mov	w22, #0x0                   	// #0
  41a004:	mov	w26, #0x18                  	// #24
  41a008:	mov	x27, #0x48                  	// #72
  41a00c:	ldr	x2, [x0, #16]
  41a010:	mov	x0, x19
  41a014:	mov	x25, #0x18                  	// #24
  41a018:	bl	4290a4 <nftw@plt+0x263b4>
  41a01c:	mov	x20, x0
  41a020:	str	xzr, [x0]
  41a024:	mov	x0, x19
  41a028:	bl	42b37c <nftw@plt+0x2868c>
  41a02c:	mov	x23, x0
  41a030:	ldrb	w0, [x0, #4]
  41a034:	cmp	w0, #0x15
  41a038:	b.eq	41a0a4 <nftw@plt+0x173b4>  // b.none
  41a03c:	cmp	w0, #0x16
  41a040:	b.ne	41a050 <nftw@plt+0x17360>  // b.any
  41a044:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a048:	add	x2, x2, #0x476
  41a04c:	b	419ed0 <nftw@plt+0x171e0>
  41a050:	ldr	x1, [x19, #56]
  41a054:	ldr	x0, [x1, #24]
  41a058:	ldr	x1, [x1, #16]
  41a05c:	sub	x0, x0, x1
  41a060:	umaddl	x1, w22, w26, x27
  41a064:	cmp	x0, x1
  41a068:	b.cs	41a07c <nftw@plt+0x1738c>  // b.hs, b.nlast
  41a06c:	mov	x1, x28
  41a070:	mov	x0, x19
  41a074:	mov	x2, #0x18                  	// #24
  41a078:	bl	423260 <nftw@plt+0x20570>
  41a07c:	ldr	x0, [x19, #56]
  41a080:	mov	w2, w22
  41a084:	add	w22, w22, #0x1
  41a088:	ldr	x20, [x0, #16]
  41a08c:	ldp	x0, x1, [x23]
  41a090:	madd	x2, x2, x25, x20
  41a094:	stp	x0, x1, [x2, #24]
  41a098:	ldr	x0, [x23, #16]
  41a09c:	str	x0, [x2, #40]
  41a0a0:	b	41a024 <nftw@plt+0x17334>
  41a0a4:	cbnz	w22, 41a0b4 <nftw@plt+0x173c4>
  41a0a8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a0ac:	add	x2, x2, #0x495
  41a0b0:	b	419ed0 <nftw@plt+0x171e0>
  41a0b4:	ldrh	w0, [x20, #30]
  41a0b8:	str	w22, [x20, #12]
  41a0bc:	and	w0, w0, #0xfffffffe
  41a0c0:	strh	w0, [x20, #30]
  41a0c4:	str	x20, [x24]
  41a0c8:	b	419f60 <nftw@plt+0x17270>
  41a0cc:	stp	x29, x30, [sp, #-48]!
  41a0d0:	mov	w1, #0x11                  	// #17
  41a0d4:	mov	x29, sp
  41a0d8:	add	x2, sp, #0x28
  41a0dc:	str	x19, [sp, #16]
  41a0e0:	mov	x19, x0
  41a0e4:	bl	419e7c <nftw@plt+0x1718c>
  41a0e8:	cbz	x0, 41a114 <nftw@plt+0x17424>
  41a0ec:	ldr	x1, [sp, #40]
  41a0f0:	cbz	x1, 41a120 <nftw@plt+0x17430>
  41a0f4:	bl	418b80 <nftw@plt+0x15e90>
  41a0f8:	ldr	x1, [x0]
  41a0fc:	cbz	x1, 41a108 <nftw@plt+0x17418>
  41a100:	ldr	x1, [x1]
  41a104:	str	x1, [x0]
  41a108:	mov	x0, x19
  41a10c:	mov	w1, #0x0                   	// #0
  41a110:	bl	419374 <nftw@plt+0x16684>
  41a114:	ldr	x19, [sp, #16]
  41a118:	ldp	x29, x30, [sp], #48
  41a11c:	ret
  41a120:	bl	428f58 <nftw@plt+0x26268>
  41a124:	b	41a114 <nftw@plt+0x17424>
  41a128:	stp	x29, x30, [sp, #-48]!
  41a12c:	mov	w1, #0x10                  	// #16
  41a130:	mov	x29, sp
  41a134:	add	x2, sp, #0x28
  41a138:	stp	x19, x20, [sp, #16]
  41a13c:	mov	x20, x0
  41a140:	bl	419e7c <nftw@plt+0x1718c>
  41a144:	cbz	x0, 41a178 <nftw@plt+0x17488>
  41a148:	ldr	x1, [sp, #40]
  41a14c:	mov	x19, x0
  41a150:	bl	418b80 <nftw@plt+0x15e90>
  41a154:	ldr	x0, [x0]
  41a158:	cbz	x0, 41a184 <nftw@plt+0x17494>
  41a15c:	ldr	x3, [x19]
  41a160:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a164:	mov	x0, x20
  41a168:	add	x2, x2, #0x4b1
  41a16c:	add	x3, x3, #0x1
  41a170:	mov	w1, #0x0                   	// #0
  41a174:	bl	41c014 <nftw@plt+0x19324>
  41a178:	ldp	x19, x20, [sp, #16]
  41a17c:	ldp	x29, x30, [sp], #48
  41a180:	ret
  41a184:	ldr	x0, [sp, #40]
  41a188:	mov	x1, #0x18                  	// #24
  41a18c:	ldr	w0, [x0, #12]
  41a190:	madd	x1, x0, x1, x1
  41a194:	mov	x0, x20
  41a198:	bl	425764 <nftw@plt+0x22a74>
  41a19c:	str	x0, [sp, #40]
  41a1a0:	ldr	x1, [x19, #24]
  41a1a4:	str	x1, [x0]
  41a1a8:	str	x0, [x19, #24]
  41a1ac:	mov	w1, #0x0                   	// #0
  41a1b0:	mov	x0, x20
  41a1b4:	bl	419374 <nftw@plt+0x16684>
  41a1b8:	b	41a178 <nftw@plt+0x17488>
  41a1bc:	stp	x29, x30, [sp, #-48]!
  41a1c0:	mov	x29, sp
  41a1c4:	stp	x19, x20, [sp, #16]
  41a1c8:	mov	x19, x0
  41a1cc:	str	x21, [sp, #32]
  41a1d0:	ldrb	w1, [x0, #18]
  41a1d4:	cbz	w1, 41a1fc <nftw@plt+0x1750c>
  41a1d8:	mov	w21, #0x1                   	// #1
  41a1dc:	mov	w1, w21
  41a1e0:	mov	x0, x19
  41a1e4:	ldp	x19, x20, [sp, #16]
  41a1e8:	mov	x3, #0x0                   	// #0
  41a1ec:	ldr	x21, [sp, #32]
  41a1f0:	mov	w2, #0x3                   	// #3
  41a1f4:	ldp	x29, x30, [sp], #48
  41a1f8:	b	418eac <nftw@plt+0x161bc>
  41a1fc:	mov	w1, #0x0                   	// #0
  41a200:	bl	418928 <nftw@plt+0x15c38>
  41a204:	mov	x20, x0
  41a208:	cbz	x0, 41a1d8 <nftw@plt+0x174e8>
  41a20c:	ldrh	w21, [x0, #18]
  41a210:	ldrb	w0, [x0, #18]
  41a214:	ubfx	x2, x21, #2, #8
  41a218:	ubfx	x21, x21, #8, #1
  41a21c:	tst	x0, #0x2
  41a220:	and	w0, w0, #0x3
  41a224:	csinc	w21, w21, wzr, ne  // ne = any
  41a228:	cmp	w0, #0x2
  41a22c:	b.ne	41a240 <nftw@plt+0x17550>  // b.any
  41a230:	ldr	x1, [x20, #24]
  41a234:	ldrb	w0, [x1, #19]
  41a238:	orr	w0, w0, #0x20
  41a23c:	strb	w0, [x1, #19]
  41a240:	tbnz	w2, #5, 41a250 <nftw@plt+0x17560>
  41a244:	mov	x1, x20
  41a248:	mov	x0, x19
  41a24c:	bl	429b58 <nftw@plt+0x26e68>
  41a250:	ldr	x3, [x19, #1032]
  41a254:	cbz	x3, 41a268 <nftw@plt+0x17578>
  41a258:	ldr	w1, [x19, #48]
  41a25c:	mov	x2, x20
  41a260:	mov	x0, x19
  41a264:	blr	x3
  41a268:	mov	x0, x19
  41a26c:	mov	w1, #0x0                   	// #0
  41a270:	bl	419374 <nftw@plt+0x16684>
  41a274:	b	41a1dc <nftw@plt+0x174ec>
  41a278:	stp	x29, x30, [sp, #-32]!
  41a27c:	mov	x29, sp
  41a280:	ldr	x1, [x0]
  41a284:	stp	x19, x20, [sp, #16]
  41a288:	ldr	x19, [x1, #96]
  41a28c:	cbnz	x19, 41a2a8 <nftw@plt+0x175b8>
  41a290:	ldp	x19, x20, [sp, #16]
  41a294:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a298:	ldp	x29, x30, [sp], #32
  41a29c:	add	x2, x2, #0x4c2
  41a2a0:	mov	w1, #0x3                   	// #3
  41a2a4:	b	41c014 <nftw@plt+0x19324>
  41a2a8:	ldr	w1, [x19, #28]
  41a2ac:	mov	x20, x0
  41a2b0:	cmp	w1, #0x5
  41a2b4:	b.ne	41a2e4 <nftw@plt+0x175f4>  // b.any
  41a2b8:	mov	w1, #0x3                   	// #3
  41a2bc:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a2c0:	add	x2, x2, #0x4d4
  41a2c4:	bl	41c014 <nftw@plt+0x19324>
  41a2c8:	ldr	w2, [x19, #8]
  41a2cc:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a2d0:	mov	x0, x20
  41a2d4:	add	x4, x4, #0x3bd
  41a2d8:	mov	w3, #0x0                   	// #0
  41a2dc:	mov	w1, #0x3                   	// #3
  41a2e0:	bl	41c1d0 <nftw@plt+0x194e0>
  41a2e4:	mov	w0, #0x5                   	// #5
  41a2e8:	str	w0, [x19, #28]
  41a2ec:	ldrb	w0, [x19, #24]
  41a2f0:	strb	w0, [x20, #18]
  41a2f4:	mov	w0, #0x1                   	// #1
  41a2f8:	strb	w0, [x19, #24]
  41a2fc:	ldrb	w0, [x19, #25]
  41a300:	str	xzr, [x19, #16]
  41a304:	cbnz	w0, 41a328 <nftw@plt+0x17638>
  41a308:	ldrb	w0, [x20, #1140]
  41a30c:	cbz	w0, 41a328 <nftw@plt+0x17638>
  41a310:	mov	x0, x20
  41a314:	mov	w2, #0x8                   	// #8
  41a318:	ldp	x19, x20, [sp, #16]
  41a31c:	mov	w1, #0x0                   	// #0
  41a320:	ldp	x29, x30, [sp], #32
  41a324:	b	419300 <nftw@plt+0x16610>
  41a328:	ldp	x19, x20, [sp, #16]
  41a32c:	ldp	x29, x30, [sp], #32
  41a330:	ret
  41a334:	stp	x29, x30, [sp, #-80]!
  41a338:	mov	x29, sp
  41a33c:	stp	x19, x20, [sp, #16]
  41a340:	mov	x19, x0
  41a344:	stp	x21, x22, [sp, #32]
  41a348:	ldrb	w1, [x0, #24]
  41a34c:	str	wzr, [sp, #52]
  41a350:	add	w1, w1, #0x1
  41a354:	strb	w1, [x0, #24]
  41a358:	add	x1, sp, #0x34
  41a35c:	bl	42b410 <nftw@plt+0x28720>
  41a360:	mov	x21, x0
  41a364:	ldp	x0, x1, [x0]
  41a368:	stp	x0, x1, [sp, #56]
  41a36c:	ldr	x0, [x21, #16]
  41a370:	str	x0, [sp, #72]
  41a374:	ldrb	w0, [x21, #4]
  41a378:	cmp	w0, #0x35
  41a37c:	b.ne	41a3fc <nftw@plt+0x1770c>  // b.any
  41a380:	ldr	x0, [x21, #8]
  41a384:	ldr	x20, [x19, #896]
  41a388:	cbz	x20, 41a3fc <nftw@plt+0x1770c>
  41a38c:	ldr	x1, [x20, #8]
  41a390:	cmp	x0, x1
  41a394:	b.eq	41a504 <nftw@plt+0x17814>  // b.none
  41a398:	ldr	x20, [x20]
  41a39c:	b	41a388 <nftw@plt+0x17698>
  41a3a0:	ldr	x3, [x19, #904]
  41a3a4:	cbz	x3, 41a3b8 <nftw@plt+0x176c8>
  41a3a8:	mov	x1, x21
  41a3ac:	mov	x0, x19
  41a3b0:	mov	w2, #0x0                   	// #0
  41a3b4:	blr	x3
  41a3b8:	ldrb	w0, [x20, #19]
  41a3bc:	cbz	w0, 41a3cc <nftw@plt+0x176dc>
  41a3c0:	ldrb	w0, [x19, #24]
  41a3c4:	sub	w0, w0, #0x1
  41a3c8:	strb	w0, [x19, #24]
  41a3cc:	ldr	x1, [x20, #24]
  41a3d0:	mov	x0, x19
  41a3d4:	blr	x1
  41a3d8:	ldrb	w0, [x20, #19]
  41a3dc:	cbnz	w0, 41a4f4 <nftw@plt+0x17804>
  41a3e0:	ldrb	w0, [x19, #24]
  41a3e4:	sub	w0, w0, #0x1
  41a3e8:	strb	w0, [x19, #24]
  41a3ec:	ldp	x19, x20, [sp, #16]
  41a3f0:	ldp	x21, x22, [sp, #32]
  41a3f4:	ldp	x29, x30, [sp], #80
  41a3f8:	ret
  41a3fc:	mov	w1, #0x1                   	// #1
  41a400:	ldr	x0, [x19, #960]
  41a404:	cbz	x0, 41a3e0 <nftw@plt+0x176f0>
  41a408:	cmp	w1, #0x1
  41a40c:	b.eq	41a41c <nftw@plt+0x1772c>  // b.none
  41a410:	ldr	x0, [x19, #136]
  41a414:	ldr	x0, [x0, #8]
  41a418:	cbnz	x0, 41a438 <nftw@plt+0x17748>
  41a41c:	mov	x0, x19
  41a420:	bl	428cd8 <nftw@plt+0x25fe8>
  41a424:	ldr	w1, [x19, #48]
  41a428:	mov	x0, x19
  41a42c:	ldr	x2, [x19, #960]
  41a430:	blr	x2
  41a434:	b	41a3e0 <nftw@plt+0x176f0>
  41a438:	mov	x0, #0x30                  	// #48
  41a43c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41a440:	mov	x2, x0
  41a444:	mov	w3, #0x2                   	// #2
  41a448:	ldp	x0, x1, [sp, #56]
  41a44c:	stp	x0, x1, [x2]
  41a450:	ldr	x1, [sp, #72]
  41a454:	str	x1, [x2, #16]
  41a458:	lsr	x0, x0, #48
  41a45c:	orr	w0, w0, #0x400
  41a460:	strh	w0, [x2, #6]
  41a464:	mov	x0, x19
  41a468:	ldp	x4, x5, [x21]
  41a46c:	stp	x4, x5, [x2, #24]
  41a470:	ldr	x1, [x21, #16]
  41a474:	str	x1, [x2, #40]
  41a478:	ldrh	w1, [x2, #30]
  41a47c:	orr	w1, w1, #0x400
  41a480:	strh	w1, [x2, #30]
  41a484:	mov	x1, #0x0                   	// #0
  41a488:	bl	428908 <nftw@plt+0x25c18>
  41a48c:	b	41a424 <nftw@plt+0x17734>
  41a490:	mov	x20, #0x0                   	// #0
  41a494:	cbnz	w22, 41a4a8 <nftw@plt+0x177b8>
  41a498:	mov	x21, x0
  41a49c:	mov	w1, #0x2                   	// #2
  41a4a0:	b	41a400 <nftw@plt+0x17710>
  41a4a4:	cbz	w22, 41a4b8 <nftw@plt+0x177c8>
  41a4a8:	ldrb	w1, [x19, #24]
  41a4ac:	add	w1, w1, #0x1
  41a4b0:	strb	w1, [x19, #24]
  41a4b4:	cbz	x20, 41a498 <nftw@plt+0x177a8>
  41a4b8:	ldrb	w0, [x20, #18]
  41a4bc:	cbz	w0, 41a3a0 <nftw@plt+0x176b0>
  41a4c0:	ldr	w0, [sp, #52]
  41a4c4:	str	w0, [x19, #152]
  41a4c8:	mov	w0, #0x51                  	// #81
  41a4cc:	strb	w0, [x19, #156]
  41a4d0:	ldrh	w0, [x21, #6]
  41a4d4:	strh	w0, [x19, #158]
  41a4d8:	ldr	w0, [x20, #24]
  41a4dc:	str	w0, [x19, #160]
  41a4e0:	mov	w0, #0x1                   	// #1
  41a4e4:	strb	w0, [x19, #32]
  41a4e8:	ldrb	w0, [x20, #19]
  41a4ec:	strb	w0, [x19, #33]
  41a4f0:	cbnz	w0, 41a3e0 <nftw@plt+0x176f0>
  41a4f4:	ldrb	w0, [x19, #24]
  41a4f8:	add	w0, w0, #0x1
  41a4fc:	strb	w0, [x19, #24]
  41a500:	b	41a3e0 <nftw@plt+0x176f0>
  41a504:	ldrb	w0, [x20, #16]
  41a508:	cbz	w0, 41a4b8 <nftw@plt+0x177c8>
  41a50c:	ldrb	w22, [x20, #19]
  41a510:	cbz	w22, 41a520 <nftw@plt+0x17830>
  41a514:	ldrb	w0, [x19, #24]
  41a518:	sub	w0, w0, #0x1
  41a51c:	strb	w0, [x19, #24]
  41a520:	mov	x0, x19
  41a524:	bl	42b37c <nftw@plt+0x2868c>
  41a528:	ldrb	w1, [x0, #4]
  41a52c:	cmp	w1, #0x35
  41a530:	b.ne	41a490 <nftw@plt+0x177a0>  // b.any
  41a534:	ldr	x1, [x0, #8]
  41a538:	ldr	x20, [x20, #24]
  41a53c:	cbz	x20, 41a490 <nftw@plt+0x177a0>
  41a540:	ldr	x2, [x20, #8]
  41a544:	cmp	x1, x2
  41a548:	b.eq	41a4a4 <nftw@plt+0x177b4>  // b.none
  41a54c:	ldr	x20, [x20]
  41a550:	b	41a53c <nftw@plt+0x1784c>
  41a554:	stp	x29, x30, [sp, #-64]!
  41a558:	mov	x29, sp
  41a55c:	stp	x19, x20, [sp, #16]
  41a560:	mov	x20, x1
  41a564:	stp	x21, x22, [sp, #32]
  41a568:	mov	x22, x2
  41a56c:	stp	x23, x24, [sp, #48]
  41a570:	mov	x24, x0
  41a574:	and	w23, w3, #0xff
  41a578:	cbz	x1, 41a5b4 <nftw@plt+0x178c4>
  41a57c:	mov	x0, x1
  41a580:	bl	402630 <strlen@plt>
  41a584:	mov	x1, x20
  41a588:	mov	w2, w0
  41a58c:	mov	x0, x24
  41a590:	bl	421644 <nftw@plt+0x1e954>
  41a594:	ldr	x5, [x24, #896]
  41a598:	mov	x21, x0
  41a59c:	cbz	x5, 41a654 <nftw@plt+0x17964>
  41a5a0:	ldr	x0, [x5, #8]
  41a5a4:	cmp	x21, x0
  41a5a8:	b.eq	41a6c4 <nftw@plt+0x179d4>  // b.none
  41a5ac:	ldr	x5, [x5]
  41a5b0:	b	41a59c <nftw@plt+0x178ac>
  41a5b4:	add	x19, x0, #0x380
  41a5b8:	cbz	w23, 41a68c <nftw@plt+0x1799c>
  41a5bc:	mov	x3, x2
  41a5c0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a5c4:	add	x2, x2, #0x52b
  41a5c8:	mov	w1, #0x4                   	// #4
  41a5cc:	bl	41c014 <nftw@plt+0x19324>
  41a5d0:	b	41a6f4 <nftw@plt+0x17a04>
  41a5d4:	cbz	x20, 41a5f8 <nftw@plt+0x17908>
  41a5d8:	mov	x4, x22
  41a5dc:	mov	x3, x20
  41a5e0:	mov	x0, x24
  41a5e4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a5e8:	mov	w1, #0x4                   	// #4
  41a5ec:	add	x2, x2, #0x5a1
  41a5f0:	bl	41c014 <nftw@plt+0x19324>
  41a5f4:	b	41a6f0 <nftw@plt+0x17a00>
  41a5f8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a5fc:	mov	x3, x22
  41a600:	add	x2, x2, #0x5c5
  41a604:	mov	x0, x24
  41a608:	mov	w1, #0x4                   	// #4
  41a60c:	b	41a5cc <nftw@plt+0x178dc>
  41a610:	ldrb	w0, [x1, #16]
  41a614:	cbz	w0, 41a5d4 <nftw@plt+0x178e4>
  41a618:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a61c:	add	x2, x2, #0x568
  41a620:	ldr	x3, [x21]
  41a624:	b	41a6e4 <nftw@plt+0x179f4>
  41a628:	mov	x0, x24
  41a62c:	mov	x1, #0x20                  	// #32
  41a630:	bl	42570c <nftw@plt+0x22a1c>
  41a634:	mov	x20, x0
  41a638:	stp	xzr, xzr, [x0]
  41a63c:	stp	xzr, xzr, [x0, #16]
  41a640:	ldr	x0, [x19]
  41a644:	str	x0, [x20]
  41a648:	str	x20, [x19]
  41a64c:	str	x21, [x20, #8]
  41a650:	b	41a6f4 <nftw@plt+0x17a04>
  41a654:	mov	x1, #0x20                  	// #32
  41a658:	mov	x0, x24
  41a65c:	bl	42570c <nftw@plt+0x22a1c>
  41a660:	stp	xzr, xzr, [x0]
  41a664:	mov	x5, x0
  41a668:	stp	xzr, xzr, [x0, #16]
  41a66c:	ldr	x1, [x24, #896]
  41a670:	str	x1, [x0]
  41a674:	str	x0, [x24, #896]
  41a678:	mov	w1, #0x1                   	// #1
  41a67c:	str	x21, [x0, #8]
  41a680:	strb	w1, [x0, #16]
  41a684:	strb	w23, [x0, #19]
  41a688:	add	x19, x5, #0x18
  41a68c:	mov	x0, x22
  41a690:	bl	402630 <strlen@plt>
  41a694:	mov	x1, x22
  41a698:	mov	w2, w0
  41a69c:	mov	x0, x24
  41a6a0:	bl	421644 <nftw@plt+0x1e954>
  41a6a4:	ldr	x1, [x19]
  41a6a8:	mov	x21, x0
  41a6ac:	cbz	x1, 41a628 <nftw@plt+0x17938>
  41a6b0:	ldr	x0, [x1, #8]
  41a6b4:	cmp	x21, x0
  41a6b8:	b.eq	41a610 <nftw@plt+0x17920>  // b.none
  41a6bc:	ldr	x1, [x1]
  41a6c0:	b	41a6ac <nftw@plt+0x179bc>
  41a6c4:	ldrb	w1, [x5, #16]
  41a6c8:	cbz	w1, 41a618 <nftw@plt+0x17928>
  41a6cc:	ldrb	w0, [x5, #19]
  41a6d0:	cmp	w0, w23
  41a6d4:	b.eq	41a688 <nftw@plt+0x17998>  // b.none
  41a6d8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a6dc:	mov	x3, x20
  41a6e0:	add	x2, x2, #0x4e6
  41a6e4:	mov	x0, x24
  41a6e8:	mov	w1, #0x4                   	// #4
  41a6ec:	bl	41c014 <nftw@plt+0x19324>
  41a6f0:	mov	x20, #0x0                   	// #0
  41a6f4:	mov	x0, x20
  41a6f8:	ldp	x19, x20, [sp, #16]
  41a6fc:	ldp	x21, x22, [sp, #32]
  41a700:	ldp	x23, x24, [sp, #48]
  41a704:	ldp	x29, x30, [sp], #64
  41a708:	ret
  41a70c:	stp	x29, x30, [sp, #-32]!
  41a710:	mov	x29, sp
  41a714:	str	x19, [sp, #16]
  41a718:	mov	x19, x3
  41a71c:	mov	w3, #0x0                   	// #0
  41a720:	bl	41a554 <nftw@plt+0x17864>
  41a724:	mov	w1, #0x1                   	// #1
  41a728:	strb	w1, [x0, #17]
  41a72c:	str	x19, [x0, #24]
  41a730:	ldr	x19, [sp, #16]
  41a734:	ldp	x29, x30, [sp], #32
  41a738:	ret
  41a73c:	stp	x29, x30, [sp, #-240]!
  41a740:	mov	x29, sp
  41a744:	stp	x19, x20, [sp, #16]
  41a748:	mov	x19, x0
  41a74c:	stp	x21, x22, [sp, #32]
  41a750:	stp	x23, x24, [sp, #48]
  41a754:	mov	w24, w1
  41a758:	ldrb	w22, [x0, #27]
  41a75c:	ldrb	w23, [x0, #25]
  41a760:	cbz	w22, 41a768 <nftw@plt+0x17a78>
  41a764:	strb	wzr, [x0, #24]
  41a768:	cbz	w23, 41a78c <nftw@plt+0x17a9c>
  41a76c:	ldrb	w0, [x19, #1154]
  41a770:	cbz	w0, 41a788 <nftw@plt+0x17a98>
  41a774:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a778:	mov	x0, x19
  41a77c:	add	x2, x2, #0x5e6
  41a780:	mov	w1, #0x2                   	// #2
  41a784:	bl	41c014 <nftw@plt+0x19324>
  41a788:	strh	wzr, [x19, #24]
  41a78c:	mov	w0, #0x1                   	// #1
  41a790:	strb	w0, [x19, #16]
  41a794:	mov	w0, #0x53                  	// #83
  41a798:	strb	w0, [x19, #156]
  41a79c:	ldr	x0, [x19, #40]
  41a7a0:	strb	wzr, [x19, #21]
  41a7a4:	ldr	w0, [x0, #60]
  41a7a8:	str	w0, [x19, #48]
  41a7ac:	mov	x0, x19
  41a7b0:	bl	4254c8 <nftw@plt+0x227d8>
  41a7b4:	mov	x21, x0
  41a7b8:	ldrb	w0, [x0, #4]
  41a7bc:	cmp	w0, #0x35
  41a7c0:	b.ne	41a878 <nftw@plt+0x17b88>  // b.any
  41a7c4:	ldr	x0, [x21, #8]
  41a7c8:	ldrb	w20, [x0, #16]
  41a7cc:	tbz	w20, #0, 41a9fc <nftw@plt+0x17d0c>
  41a7d0:	ubfx	x20, x20, #1, #7
  41a7d4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a7d8:	add	x0, x0, #0x998
  41a7dc:	mov	w1, #0x18                  	// #24
  41a7e0:	umaddl	x20, w20, w1, x0
  41a7e4:	ldrb	w1, [x20, #19]
  41a7e8:	tbnz	w1, #1, 41a7f0 <nftw@plt+0x17b00>
  41a7ec:	strb	wzr, [x19, #440]
  41a7f0:	ldrb	w0, [x19, #1155]
  41a7f4:	cbz	w0, 41a8cc <nftw@plt+0x17bdc>
  41a7f8:	ldrb	w2, [x19, #1244]
  41a7fc:	cbnz	w2, 41a8cc <nftw@plt+0x17bdc>
  41a800:	cbz	w24, 41a8c8 <nftw@plt+0x17bd8>
  41a804:	mov	w21, #0x0                   	// #0
  41a808:	mov	x20, #0x0                   	// #0
  41a80c:	ldrb	w0, [x19, #1160]
  41a810:	str	x20, [x19, #144]
  41a814:	cbz	w0, 41a820 <nftw@plt+0x17b30>
  41a818:	mov	x0, x19
  41a81c:	bl	419080 <nftw@plt+0x16390>
  41a820:	cbz	x20, 41aac8 <nftw@plt+0x17dd8>
  41a824:	ldr	x0, [x19, #144]
  41a828:	ldr	x1, [x0]
  41a82c:	mov	x0, x19
  41a830:	blr	x1
  41a834:	mov	w1, w21
  41a838:	mov	x0, x19
  41a83c:	bl	419a40 <nftw@plt+0x16d50>
  41a840:	cbz	w23, 41a854 <nftw@plt+0x17b64>
  41a844:	ldrb	w0, [x19, #32]
  41a848:	cbnz	w0, 41a854 <nftw@plt+0x17b64>
  41a84c:	mov	w0, #0x201                 	// #513
  41a850:	strh	w0, [x19, #24]
  41a854:	cbz	w22, 41a860 <nftw@plt+0x17b70>
  41a858:	mov	w0, #0x1                   	// #1
  41a85c:	strb	w0, [x19, #24]
  41a860:	mov	w0, w21
  41a864:	ldp	x19, x20, [sp, #16]
  41a868:	ldp	x21, x22, [sp, #32]
  41a86c:	ldp	x23, x24, [sp, #48]
  41a870:	ldp	x29, x30, [sp], #240
  41a874:	ret
  41a878:	cmp	w0, #0x37
  41a87c:	b.ne	41a9f4 <nftw@plt+0x17d04>  // b.any
  41a880:	ldr	w0, [x19, #1116]
  41a884:	cmp	w0, #0x15
  41a888:	b.eq	41a804 <nftw@plt+0x17b14>  // b.none
  41a88c:	ldrb	w0, [x19, #1154]
  41a890:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a894:	add	x20, x20, #0x998
  41a898:	cbz	w0, 41a8c0 <nftw@plt+0x17bd0>
  41a89c:	ldrb	w0, [x19, #1155]
  41a8a0:	cbnz	w0, 41a8c0 <nftw@plt+0x17bd0>
  41a8a4:	ldrb	w0, [x19, #18]
  41a8a8:	cbnz	w0, 41a8c0 <nftw@plt+0x17bd0>
  41a8ac:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a8b0:	mov	x0, x19
  41a8b4:	add	x2, x2, #0x623
  41a8b8:	mov	w1, #0x2                   	// #2
  41a8bc:	bl	41c014 <nftw@plt+0x19324>
  41a8c0:	add	x20, x20, #0x1c8
  41a8c4:	b	41a7e4 <nftw@plt+0x17af4>
  41a8c8:	tbz	w1, #3, 41a804 <nftw@plt+0x17b14>
  41a8cc:	and	w2, w1, #0x4
  41a8d0:	strb	w2, [x19, #17]
  41a8d4:	strb	w2, [x19, #19]
  41a8d8:	cbnz	w0, 41a95c <nftw@plt+0x17c6c>
  41a8dc:	ldrb	w0, [x19, #18]
  41a8e0:	cbnz	w0, 41a92c <nftw@plt+0x17c3c>
  41a8e4:	ldrb	w0, [x20, #18]
  41a8e8:	cmp	w0, #0x2
  41a8ec:	b.ne	41a974 <nftw@plt+0x17c84>  // b.any
  41a8f0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a8f4:	add	x0, x0, #0x998
  41a8f8:	add	x0, x0, #0x168
  41a8fc:	cmp	x20, x0
  41a900:	b.ne	41a90c <nftw@plt+0x17c1c>  // b.any
  41a904:	ldrb	w0, [x19, #1122]
  41a908:	cbnz	w0, 41a92c <nftw@plt+0x17c3c>
  41a90c:	ldrb	w0, [x19, #1154]
  41a910:	cbz	w0, 41a974 <nftw@plt+0x17c84>
  41a914:	ldr	x3, [x20, #8]
  41a918:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a91c:	mov	x0, x19
  41a920:	add	x2, x2, #0x64e
  41a924:	mov	w1, #0x2                   	// #2
  41a928:	bl	41c014 <nftw@plt+0x19324>
  41a92c:	ldrb	w0, [x19, #1138]
  41a930:	cbz	w0, 41a95c <nftw@plt+0x17c6c>
  41a934:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a938:	add	x0, x0, #0x998
  41a93c:	add	x0, x0, #0xd8
  41a940:	cmp	x20, x0
  41a944:	b.ne	41a9b8 <nftw@plt+0x17cc8>  // b.any
  41a948:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a94c:	mov	x0, x19
  41a950:	add	x2, x2, #0x687
  41a954:	mov	w1, #0x6                   	// #6
  41a958:	bl	41c080 <nftw@plt+0x19390>
  41a95c:	ldrb	w0, [x19, #18]
  41a960:	cbz	w0, 41aac0 <nftw@plt+0x17dd0>
  41a964:	ldrb	w0, [x20, #19]
  41a968:	tbnz	w0, #0, 41aac0 <nftw@plt+0x17dd0>
  41a96c:	mov	w21, #0x1                   	// #1
  41a970:	b	41a808 <nftw@plt+0x17b18>
  41a974:	tbnz	w1, #5, 41a994 <nftw@plt+0x17ca4>
  41a978:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a97c:	add	x0, x0, #0x998
  41a980:	add	x0, x0, #0x168
  41a984:	cmp	x20, x0
  41a988:	b.ne	41a92c <nftw@plt+0x17c3c>  // b.any
  41a98c:	ldrb	w0, [x19, #1122]
  41a990:	cbnz	w0, 41a92c <nftw@plt+0x17c3c>
  41a994:	ldrb	w0, [x19, #1132]
  41a998:	cbz	w0, 41a92c <nftw@plt+0x17c3c>
  41a99c:	ldr	x3, [x20, #8]
  41a9a0:	mov	x0, x19
  41a9a4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a9a8:	mov	w1, #0x1                   	// #1
  41a9ac:	add	x2, x2, #0x665
  41a9b0:	bl	41c080 <nftw@plt+0x19390>
  41a9b4:	b	41a92c <nftw@plt+0x17c3c>
  41a9b8:	ldrb	w0, [x20, #18]
  41a9bc:	cbz	w24, 41a9e0 <nftw@plt+0x17cf0>
  41a9c0:	cbnz	w0, 41a95c <nftw@plt+0x17c6c>
  41a9c4:	ldr	x3, [x20, #8]
  41a9c8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a9cc:	add	x2, x2, #0x6b0
  41a9d0:	mov	x0, x19
  41a9d4:	mov	w1, #0x6                   	// #6
  41a9d8:	bl	41c080 <nftw@plt+0x19390>
  41a9dc:	b	41a95c <nftw@plt+0x17c6c>
  41a9e0:	cbz	w0, 41a95c <nftw@plt+0x17c6c>
  41a9e4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41a9e8:	add	x2, x2, #0x6de
  41a9ec:	ldr	x3, [x20, #8]
  41a9f0:	b	41a9d0 <nftw@plt+0x17ce0>
  41a9f4:	cmp	w0, #0x16
  41a9f8:	b.eq	41a96c <nftw@plt+0x17c7c>  // b.none
  41a9fc:	ldr	w0, [x19, #1116]
  41aa00:	cmp	w0, #0x15
  41aa04:	b.eq	41a804 <nftw@plt+0x17b14>  // b.none
  41aa08:	ldrb	w0, [x19, #18]
  41aa0c:	cbnz	w0, 41a96c <nftw@plt+0x17c7c>
  41aa10:	mov	x1, x21
  41aa14:	mov	x0, x19
  41aa18:	bl	423e80 <nftw@plt+0x21190>
  41aa1c:	mov	x20, x0
  41aa20:	ldr	x3, [x19, #1064]
  41aa24:	cbz	x3, 41aaa4 <nftw@plt+0x17db4>
  41aa28:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41aa2c:	add	x2, x2, #0x998
  41aa30:	mov	x1, x0
  41aa34:	add	x2, x2, #0x1e0
  41aa38:	mov	x0, x19
  41aa3c:	blr	x3
  41aa40:	mov	x24, x0
  41aa44:	cbz	x0, 41aaa4 <nftw@plt+0x17db4>
  41aa48:	ldr	w2, [x21]
  41aa4c:	mov	x3, #0x0                   	// #0
  41aa50:	ldr	x1, [x19, #40]
  41aa54:	add	x0, sp, #0x48
  41aa58:	bl	4277f0 <nftw@plt+0x24b00>
  41aa5c:	ldr	w1, [x21]
  41aa60:	ldr	x0, [x19, #40]
  41aa64:	bl	4265d4 <nftw@plt+0x238e4>
  41aa68:	mov	x1, x0
  41aa6c:	mov	x2, x24
  41aa70:	add	x0, sp, #0x48
  41aa74:	bl	427dd4 <nftw@plt+0x250e4>
  41aa78:	mov	x5, x24
  41aa7c:	mov	x4, x20
  41aa80:	add	x2, sp, #0x48
  41aa84:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41aa88:	add	x3, x3, #0x717
  41aa8c:	mov	w1, #0x3                   	// #3
  41aa90:	mov	x0, x19
  41aa94:	bl	41c44c <nftw@plt+0x1975c>
  41aa98:	add	x0, sp, #0x48
  41aa9c:	bl	427584 <nftw@plt+0x24894>
  41aaa0:	b	41a96c <nftw@plt+0x17c7c>
  41aaa4:	mov	x3, x20
  41aaa8:	mov	x0, x19
  41aaac:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41aab0:	mov	w1, #0x3                   	// #3
  41aab4:	add	x2, x2, #0x74e
  41aab8:	bl	41c014 <nftw@plt+0x19324>
  41aabc:	b	41a96c <nftw@plt+0x17c7c>
  41aac0:	mov	w21, #0x1                   	// #1
  41aac4:	b	41a80c <nftw@plt+0x17b1c>
  41aac8:	cbnz	w21, 41a834 <nftw@plt+0x17b44>
  41aacc:	mov	x0, x19
  41aad0:	mov	w1, #0x1                   	// #1
  41aad4:	bl	428cd8 <nftw@plt+0x25fe8>
  41aad8:	b	41a834 <nftw@plt+0x17b44>
  41aadc:	mov	x2, #0x0                   	// #0
  41aae0:	adrp	x1, 418000 <nftw@plt+0x15310>
  41aae4:	add	x1, x1, #0x8b0
  41aae8:	b	4217c8 <nftw@plt+0x1ead8>
  41aaec:	stp	x29, x30, [sp, #-32]!
  41aaf0:	mov	x29, sp
  41aaf4:	stp	x19, x20, [sp, #16]
  41aaf8:	mov	x19, x0
  41aafc:	mov	w0, w4
  41ab00:	mov	w4, w3
  41ab04:	mov	x3, x2
  41ab08:	mov	w2, w0
  41ab0c:	ldr	x0, [x19, #40]
  41ab10:	bl	425c34 <nftw@plt+0x22f44>
  41ab14:	mov	x20, x0
  41ab18:	cbz	x0, 41ab2c <nftw@plt+0x17e3c>
  41ab1c:	ldr	w1, [x0, #16]
  41ab20:	mov	w2, #0x7f                  	// #127
  41ab24:	ldr	x0, [x19, #40]
  41ab28:	bl	425f10 <nftw@plt+0x23220>
  41ab2c:	ldr	x2, [x19, #912]
  41ab30:	cbz	x2, 41ab4c <nftw@plt+0x17e5c>
  41ab34:	mov	x1, x20
  41ab38:	mov	x0, x19
  41ab3c:	ldp	x19, x20, [sp, #16]
  41ab40:	mov	x16, x2
  41ab44:	ldp	x29, x30, [sp], #32
  41ab48:	br	x16
  41ab4c:	ldp	x19, x20, [sp, #16]
  41ab50:	ldp	x29, x30, [sp], #32
  41ab54:	ret
  41ab58:	stp	x29, x30, [sp, #-96]!
  41ab5c:	mov	w3, #0x18                  	// #24
  41ab60:	mov	x29, sp
  41ab64:	stp	x21, x22, [sp, #32]
  41ab68:	ldr	x21, [x0, #40]
  41ab6c:	stp	x19, x20, [sp, #16]
  41ab70:	mov	x19, x0
  41ab74:	stp	x23, x24, [sp, #48]
  41ab78:	ldr	w1, [x21, #12]
  41ab7c:	ldr	x2, [x21]
  41ab80:	sub	w1, w1, #0x1
  41ab84:	smaddl	x1, w1, w3, x2
  41ab88:	ldr	x23, [x1, #8]
  41ab8c:	str	x25, [sp, #64]
  41ab90:	ldrb	w20, [x1, #5]
  41ab94:	mov	w1, #0x1                   	// #1
  41ab98:	bl	428cd8 <nftw@plt+0x25fe8>
  41ab9c:	mov	x0, x19
  41aba0:	bl	42b37c <nftw@plt+0x2868c>
  41aba4:	mov	x1, x0
  41aba8:	ldrb	w0, [x0, #4]
  41abac:	cmp	w0, #0x37
  41abb0:	b.ne	41abf4 <nftw@plt+0x17f04>  // b.any
  41abb4:	ldr	w6, [x1, #8]
  41abb8:	adrp	x3, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41abbc:	ldr	x5, [x1, #16]
  41abc0:	add	x3, x3, #0xae
  41abc4:	mov	x2, #0x0                   	// #0
  41abc8:	mov	w24, #0x0                   	// #0
  41abcc:	mov	w4, #0xa                   	// #10
  41abd0:	cmp	x6, x2
  41abd4:	b.eq	41accc <nftw@plt+0x17fdc>  // b.none
  41abd8:	ldrb	w0, [x5, x2]
  41abdc:	add	x2, x2, #0x1
  41abe0:	ldrh	w7, [x3, w0, sxtw #1]
  41abe4:	tbz	w7, #2, 41abf4 <nftw@plt+0x17f04>
  41abe8:	madd	w24, w24, w4, w0
  41abec:	sub	w24, w24, #0x30
  41abf0:	b	41abd0 <nftw@plt+0x17ee0>
  41abf4:	mov	x0, x19
  41abf8:	bl	423e80 <nftw@plt+0x21190>
  41abfc:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41ac00:	mov	x3, x0
  41ac04:	add	x2, x2, #0x772
  41ac08:	mov	x0, x19
  41ac0c:	mov	w1, #0x3                   	// #3
  41ac10:	bl	41c014 <nftw@plt+0x19324>
  41ac14:	ldp	x19, x20, [sp, #16]
  41ac18:	ldp	x21, x22, [sp, #32]
  41ac1c:	ldp	x23, x24, [sp, #48]
  41ac20:	ldr	x25, [sp, #64]
  41ac24:	ldp	x29, x30, [sp], #96
  41ac28:	ret
  41ac2c:	cmp	w0, #0x2
  41ac30:	b.ne	41ac4c <nftw@plt+0x17f5c>  // b.any
  41ac34:	mov	w1, w0
  41ac38:	mov	w25, #0x1                   	// #1
  41ac3c:	mov	x0, x19
  41ac40:	bl	418a08 <nftw@plt+0x15d18>
  41ac44:	mov	w20, w0
  41ac48:	b	41ad44 <nftw@plt+0x18054>
  41ac4c:	mov	w25, #0x3                   	// #3
  41ac50:	b	41ad44 <nftw@plt+0x18054>
  41ac54:	mov	w20, #0x0                   	// #0
  41ac58:	b	41ad64 <nftw@plt+0x18074>
  41ac5c:	cmp	w4, #0x16
  41ac60:	b.eq	41ac7c <nftw@plt+0x17f8c>  // b.none
  41ac64:	mov	x0, x19
  41ac68:	bl	423e80 <nftw@plt+0x21190>
  41ac6c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41ac70:	mov	x3, x0
  41ac74:	add	x2, x2, #0x799
  41ac78:	b	41ac08 <nftw@plt+0x17f18>
  41ac7c:	mov	w25, #0x3                   	// #3
  41ac80:	b	41ad78 <nftw@plt+0x18088>
  41ac84:	cbz	x0, 41ac98 <nftw@plt+0x17fa8>
  41ac88:	ldr	x0, [x0, #8]
  41ac8c:	mov	x1, x23
  41ac90:	bl	43bcf4 <nftw@plt+0x39004>
  41ac94:	cbnz	w0, 41adb0 <nftw@plt+0x180c0>
  41ac98:	ldr	x1, [x19, #40]
  41ac9c:	mov	w4, w20
  41aca0:	mov	w3, w24
  41aca4:	mov	x2, x23
  41aca8:	ldr	w0, [x1, #56]
  41acac:	sub	w0, w0, #0x1
  41acb0:	str	w0, [x1, #56]
  41acb4:	mov	x0, x19
  41acb8:	mov	w1, w25
  41acbc:	bl	41aaec <nftw@plt+0x17dfc>
  41acc0:	mov	w0, #0x1                   	// #1
  41acc4:	strb	w0, [x21, #116]
  41acc8:	b	41ac14 <nftw@plt+0x17f24>
  41accc:	mov	x0, x19
  41acd0:	bl	42b37c <nftw@plt+0x2868c>
  41acd4:	ldrb	w4, [x0, #4]
  41acd8:	mov	x1, x0
  41acdc:	cmp	w4, #0x3e
  41ace0:	b.ne	41ac5c <nftw@plt+0x17f6c>  // b.any
  41ace4:	add	x3, sp, #0x50
  41ace8:	add	x1, x1, #0x8
  41acec:	mov	x0, x19
  41acf0:	mov	x2, #0x1                   	// #1
  41acf4:	str	wzr, [sp, #80]
  41acf8:	str	xzr, [sp, #88]
  41acfc:	bl	4184d0 <nftw@plt+0x157e0>
  41ad00:	tst	w0, #0xff
  41ad04:	b.eq	41ad0c <nftw@plt+0x1801c>  // b.none
  41ad08:	ldr	x23, [sp, #88]
  41ad0c:	mov	x0, x19
  41ad10:	mov	w1, #0x0                   	// #0
  41ad14:	bl	418a08 <nftw@plt+0x15d18>
  41ad18:	mov	w20, w0
  41ad1c:	cmp	w0, #0x1
  41ad20:	b.ne	41ac2c <nftw@plt+0x17f3c>  // b.any
  41ad24:	mov	x1, x23
  41ad28:	mov	x0, x19
  41ad2c:	bl	421044 <nftw@plt+0x1e354>
  41ad30:	mov	w25, #0x0                   	// #0
  41ad34:	mov	w1, w20
  41ad38:	mov	x0, x19
  41ad3c:	bl	418a08 <nftw@plt+0x15d18>
  41ad40:	mov	w20, w0
  41ad44:	cmp	w20, #0x3
  41ad48:	b.ne	41ac54 <nftw@plt+0x17f64>  // b.any
  41ad4c:	mov	w1, w20
  41ad50:	mov	x0, x19
  41ad54:	bl	418a08 <nftw@plt+0x15d18>
  41ad58:	cmp	w0, #0x4
  41ad5c:	cset	w20, eq  // eq = none
  41ad60:	add	w20, w20, #0x1
  41ad64:	ldr	x0, [x19]
  41ad68:	mov	w1, #0x0                   	// #0
  41ad6c:	strb	w20, [x0, #106]
  41ad70:	mov	x0, x19
  41ad74:	bl	419374 <nftw@plt+0x16684>
  41ad78:	mov	x0, x19
  41ad7c:	bl	41988c <nftw@plt+0x16b9c>
  41ad80:	cmp	w25, #0x1
  41ad84:	b.ne	41ac98 <nftw@plt+0x17fa8>  // b.any
  41ad88:	ldr	w22, [x21, #12]
  41ad8c:	mov	w0, #0x18                  	// #24
  41ad90:	ldr	x1, [x21]
  41ad94:	sub	w22, w22, #0x1
  41ad98:	smaddl	x22, w22, w0, x1
  41ad9c:	mov	x0, x21
  41ada0:	mov	x1, x22
  41ada4:	bl	425bc8 <nftw@plt+0x22ed8>
  41ada8:	ldr	w1, [x22, #20]
  41adac:	cbnz	w1, 41ac84 <nftw@plt+0x17f94>
  41adb0:	mov	x3, x23
  41adb4:	mov	x0, x19
  41adb8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41adbc:	mov	w1, #0x0                   	// #0
  41adc0:	add	x2, x2, #0x7b6
  41adc4:	bl	41c080 <nftw@plt+0x19390>
  41adc8:	b	41ac14 <nftw@plt+0x17f24>
  41adcc:	stp	x29, x30, [sp, #-80]!
  41add0:	mov	w3, #0x18                  	// #24
  41add4:	mov	x29, sp
  41add8:	stp	x21, x22, [sp, #32]
  41addc:	ldr	x21, [x0, #40]
  41ade0:	stp	x19, x20, [sp, #16]
  41ade4:	mov	x19, x0
  41ade8:	stp	x23, x24, [sp, #48]
  41adec:	mov	w24, #0x7fffffff            	// #2147483647
  41adf0:	ldr	w1, [x21, #12]
  41adf4:	ldr	x2, [x21]
  41adf8:	sub	w1, w1, #0x1
  41adfc:	smaddl	x1, w1, w3, x2
  41ae00:	ldrb	w22, [x1, #5]
  41ae04:	ldr	x23, [x1, #8]
  41ae08:	ldrb	w1, [x0, #1152]
  41ae0c:	cmp	w1, #0x0
  41ae10:	mov	w1, #0x7fff                	// #32767
  41ae14:	csel	w24, w24, w1, ne  // ne = any
  41ae18:	bl	42b37c <nftw@plt+0x2868c>
  41ae1c:	mov	x1, x0
  41ae20:	ldrb	w0, [x0, #4]
  41ae24:	cmp	w0, #0x37
  41ae28:	b.ne	41ae84 <nftw@plt+0x18194>  // b.any
  41ae2c:	ldr	w8, [x1, #8]
  41ae30:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41ae34:	ldr	x5, [x1, #16]
  41ae38:	add	x4, x4, #0xae
  41ae3c:	mov	x2, #0x0                   	// #0
  41ae40:	mov	w3, #0x0                   	// #0
  41ae44:	mov	w20, #0x0                   	// #0
  41ae48:	mov	w7, #0xa                   	// #10
  41ae4c:	mov	w6, #0x1                   	// #1
  41ae50:	cmp	x8, x2
  41ae54:	b.eq	41af94 <nftw@plt+0x182a4>  // b.none
  41ae58:	ldrb	w9, [x5, x2]
  41ae5c:	ldrb	w0, [x5, x2]
  41ae60:	ldrh	w9, [x4, x9, lsl #1]
  41ae64:	tbz	w9, #2, 41aeb4 <nftw@plt+0x181c4>
  41ae68:	madd	w0, w20, w7, w0
  41ae6c:	add	x2, x2, #0x1
  41ae70:	sub	w0, w0, #0x30
  41ae74:	cmp	w20, w0
  41ae78:	mov	w20, w0
  41ae7c:	csel	w3, w3, w6, ls  // ls = plast
  41ae80:	b	41ae50 <nftw@plt+0x18160>
  41ae84:	cmp	w0, #0x16
  41ae88:	b.ne	41aeb4 <nftw@plt+0x181c4>  // b.any
  41ae8c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41ae90:	mov	x0, x19
  41ae94:	add	x2, x2, #0x7ec
  41ae98:	mov	w1, #0x3                   	// #3
  41ae9c:	bl	41c014 <nftw@plt+0x19324>
  41aea0:	ldp	x19, x20, [sp, #16]
  41aea4:	ldp	x21, x22, [sp, #32]
  41aea8:	ldp	x23, x24, [sp, #48]
  41aeac:	ldp	x29, x30, [sp], #80
  41aeb0:	ret
  41aeb4:	mov	x0, x19
  41aeb8:	bl	423e80 <nftw@plt+0x21190>
  41aebc:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41aec0:	mov	x3, x0
  41aec4:	add	x2, x2, #0x80f
  41aec8:	mov	x0, x19
  41aecc:	mov	w1, #0x3                   	// #3
  41aed0:	bl	41c014 <nftw@plt+0x19324>
  41aed4:	b	41aea0 <nftw@plt+0x181b0>
  41aed8:	cbz	w20, 41aee8 <nftw@plt+0x181f8>
  41aedc:	cmp	w24, w20
  41aee0:	b.cc	41aee8 <nftw@plt+0x181f8>  // b.lo, b.ul, b.last
  41aee4:	cbz	w3, 41aefc <nftw@plt+0x1820c>
  41aee8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41aeec:	add	x2, x2, #0x83a
  41aef0:	mov	w1, #0x2                   	// #2
  41aef4:	mov	x0, x19
  41aef8:	bl	41c014 <nftw@plt+0x19324>
  41aefc:	mov	x0, x19
  41af00:	bl	42b37c <nftw@plt+0x2868c>
  41af04:	ldrb	w4, [x0, #4]
  41af08:	mov	x1, x0
  41af0c:	cmp	w4, #0x3e
  41af10:	b.ne	41af74 <nftw@plt+0x18284>  // b.any
  41af14:	add	x1, x0, #0x8
  41af18:	add	x3, sp, #0x40
  41af1c:	mov	x0, x19
  41af20:	mov	x2, #0x1                   	// #1
  41af24:	str	wzr, [sp, #64]
  41af28:	str	xzr, [sp, #72]
  41af2c:	bl	4184d0 <nftw@plt+0x157e0>
  41af30:	tst	w0, #0xff
  41af34:	b.eq	41af3c <nftw@plt+0x1824c>  // b.none
  41af38:	ldr	x23, [sp, #72]
  41af3c:	mov	x0, x19
  41af40:	mov	w1, #0x1                   	// #1
  41af44:	bl	419374 <nftw@plt+0x16684>
  41af48:	mov	x0, x19
  41af4c:	bl	41988c <nftw@plt+0x16b9c>
  41af50:	mov	x0, x19
  41af54:	mov	w4, w22
  41af58:	mov	w3, w20
  41af5c:	mov	x2, x23
  41af60:	mov	w1, #0x3                   	// #3
  41af64:	bl	41aaec <nftw@plt+0x17dfc>
  41af68:	mov	w0, #0x1                   	// #1
  41af6c:	strb	w0, [x21, #116]
  41af70:	b	41aea0 <nftw@plt+0x181b0>
  41af74:	cmp	w4, #0x16
  41af78:	b.eq	41af48 <nftw@plt+0x18258>  // b.none
  41af7c:	mov	x0, x19
  41af80:	bl	423e80 <nftw@plt+0x21190>
  41af84:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41af88:	mov	x3, x0
  41af8c:	add	x2, x2, #0x799
  41af90:	b	41aec8 <nftw@plt+0x181d8>
  41af94:	ldrb	w0, [x19, #1154]
  41af98:	cbnz	w0, 41aed8 <nftw@plt+0x181e8>
  41af9c:	cbz	w3, 41aefc <nftw@plt+0x1820c>
  41afa0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41afa4:	mov	w1, #0x0                   	// #0
  41afa8:	add	x2, x2, #0x83a
  41afac:	b	41aef4 <nftw@plt+0x18204>
  41afb0:	cbnz	x3, 41afc4 <nftw@plt+0x182d4>
  41afb4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41afb8:	mov	w1, #0x4                   	// #4
  41afbc:	add	x2, x2, #0x853
  41afc0:	b	41c014 <nftw@plt+0x19324>
  41afc4:	stp	x29, x30, [sp, #-32]!
  41afc8:	mov	x29, sp
  41afcc:	stp	x19, x20, [sp, #16]
  41afd0:	mov	x19, x3
  41afd4:	and	w20, w4, #0xff
  41afd8:	mov	w3, #0x0                   	// #0
  41afdc:	bl	41a554 <nftw@plt+0x17864>
  41afe0:	cbz	x0, 41afec <nftw@plt+0x182fc>
  41afe4:	strb	w20, [x0, #19]
  41afe8:	str	x19, [x0, #24]
  41afec:	ldp	x19, x20, [sp, #16]
  41aff0:	ldp	x29, x30, [sp], #32
  41aff4:	ret
  41aff8:	stp	x29, x30, [sp, #-32]!
  41affc:	mov	x29, sp
  41b000:	stp	x19, x20, [sp, #16]
  41b004:	mov	w19, w3
  41b008:	and	w20, w4, #0xff
  41b00c:	mov	w3, w5
  41b010:	bl	41a554 <nftw@plt+0x17864>
  41b014:	cbz	x0, 41b028 <nftw@plt+0x18338>
  41b018:	mov	w1, #0x1                   	// #1
  41b01c:	strb	w1, [x0, #18]
  41b020:	strb	w20, [x0, #19]
  41b024:	str	w19, [x0, #24]
  41b028:	ldp	x19, x20, [sp, #16]
  41b02c:	ldp	x29, x30, [sp], #32
  41b030:	ret
  41b034:	stp	x29, x30, [sp, #-32]!
  41b038:	mov	x1, #0x0                   	// #0
  41b03c:	adrp	x3, 419000 <nftw@plt+0x16310>
  41b040:	mov	x29, sp
  41b044:	add	x3, x3, #0x698
  41b048:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b04c:	add	x2, x2, #0x878
  41b050:	stp	x19, x20, [sp, #16]
  41b054:	mov	x19, x0
  41b058:	bl	41a70c <nftw@plt+0x17a1c>
  41b05c:	adrp	x20, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b060:	mov	x0, x19
  41b064:	mov	x1, #0x0                   	// #0
  41b068:	adrp	x3, 419000 <nftw@plt+0x16310>
  41b06c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b070:	add	x3, x3, #0xad8
  41b074:	add	x2, x2, #0x87d
  41b078:	bl	41a70c <nftw@plt+0x17a1c>
  41b07c:	add	x20, x20, #0x899
  41b080:	mov	x0, x19
  41b084:	mov	x1, #0x0                   	// #0
  41b088:	adrp	x3, 41b000 <nftw@plt+0x18310>
  41b08c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b090:	add	x3, x3, #0x4a4
  41b094:	add	x2, x2, #0x888
  41b098:	bl	41a70c <nftw@plt+0x17a1c>
  41b09c:	mov	x1, x20
  41b0a0:	mov	x0, x19
  41b0a4:	adrp	x3, 418000 <nftw@plt+0x15310>
  41b0a8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b0ac:	add	x3, x3, #0xad8
  41b0b0:	add	x2, x2, #0x892
  41b0b4:	bl	41a70c <nftw@plt+0x17a1c>
  41b0b8:	mov	x1, x20
  41b0bc:	mov	x0, x19
  41b0c0:	adrp	x3, 419000 <nftw@plt+0x16310>
  41b0c4:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b0c8:	add	x3, x3, #0xe24
  41b0cc:	add	x2, x2, #0x89d
  41b0d0:	bl	41a70c <nftw@plt+0x17a1c>
  41b0d4:	mov	x1, x20
  41b0d8:	mov	x0, x19
  41b0dc:	adrp	x3, 419000 <nftw@plt+0x16310>
  41b0e0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b0e4:	add	x3, x3, #0x5d8
  41b0e8:	add	x2, x2, #0x28b
  41b0ec:	bl	41a70c <nftw@plt+0x17a1c>
  41b0f0:	mov	x1, x20
  41b0f4:	mov	x0, x19
  41b0f8:	adrp	x3, 418000 <nftw@plt+0x15310>
  41b0fc:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  41b100:	add	x3, x3, #0xcc8
  41b104:	add	x2, x2, #0x2a2
  41b108:	bl	41a70c <nftw@plt+0x17a1c>
  41b10c:	mov	x1, x20
  41b110:	mov	x0, x19
  41b114:	ldp	x19, x20, [sp, #16]
  41b118:	adrp	x3, 418000 <nftw@plt+0x15310>
  41b11c:	ldp	x29, x30, [sp], #32
  41b120:	add	x3, x3, #0xcc0
  41b124:	adrp	x2, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  41b128:	add	x2, x2, #0xc1
  41b12c:	b	41a70c <nftw@plt+0x17a1c>
  41b130:	stp	x29, x30, [sp, #-32]!
  41b134:	mov	x29, sp
  41b138:	stp	x19, x20, [sp, #16]
  41b13c:	mov	x20, x0
  41b140:	ldr	x0, [x0, #896]
  41b144:	bl	4188e0 <nftw@plt+0x15bf0>
  41b148:	sbfiz	x0, x0, #3, #32
  41b14c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41b150:	mov	x19, x0
  41b154:	mov	x1, x0
  41b158:	ldr	x0, [x20, #896]
  41b15c:	bl	4191dc <nftw@plt+0x164ec>
  41b160:	mov	x0, x19
  41b164:	ldp	x19, x20, [sp, #16]
  41b168:	ldp	x29, x30, [sp], #32
  41b16c:	ret
  41b170:	stp	x29, x30, [sp, #-32]!
  41b174:	mov	x2, x1
  41b178:	mov	x29, sp
  41b17c:	str	x19, [sp, #16]
  41b180:	mov	x19, x1
  41b184:	ldr	x1, [x0, #896]
  41b188:	bl	41915c <nftw@plt+0x1646c>
  41b18c:	mov	x0, x19
  41b190:	ldr	x19, [sp, #16]
  41b194:	ldp	x29, x30, [sp], #32
  41b198:	b	402a80 <free@plt>
  41b19c:	stp	x29, x30, [sp, #-64]!
  41b1a0:	mov	x29, sp
  41b1a4:	str	x21, [sp, #32]
  41b1a8:	mov	x21, x1
  41b1ac:	add	x2, sp, #0x38
  41b1b0:	mov	w1, #0x4                   	// #4
  41b1b4:	stp	x19, x20, [sp, #16]
  41b1b8:	mov	x20, x0
  41b1bc:	bl	419e7c <nftw@plt+0x1718c>
  41b1c0:	str	wzr, [x21]
  41b1c4:	mov	x19, x0
  41b1c8:	cbz	x0, 41b210 <nftw@plt+0x18520>
  41b1cc:	ldr	x1, [x0, #24]
  41b1d0:	cbz	x1, 41b1f0 <nftw@plt+0x18500>
  41b1d4:	ldr	x1, [sp, #56]
  41b1d8:	cbz	x1, 41b208 <nftw@plt+0x18518>
  41b1dc:	bl	418b80 <nftw@plt+0x15e90>
  41b1e0:	ldr	x0, [x0]
  41b1e4:	cmp	x0, #0x0
  41b1e8:	cset	w0, ne  // ne = any
  41b1ec:	str	w0, [x21]
  41b1f0:	cmp	x19, #0x0
  41b1f4:	cset	w0, eq  // eq = none
  41b1f8:	ldp	x19, x20, [sp, #16]
  41b1fc:	ldr	x21, [sp, #32]
  41b200:	ldp	x29, x30, [sp], #64
  41b204:	ret
  41b208:	mov	w0, #0x1                   	// #1
  41b20c:	b	41b1ec <nftw@plt+0x184fc>
  41b210:	ldr	x0, [x20, #448]
  41b214:	ldurb	w0, [x0, #-20]
  41b218:	cmp	w0, #0x16
  41b21c:	b.ne	41b1f0 <nftw@plt+0x18500>  // b.any
  41b220:	mov	x0, x20
  41b224:	mov	w1, #0x1                   	// #1
  41b228:	bl	428cd8 <nftw@plt+0x25fe8>
  41b22c:	b	41b1f0 <nftw@plt+0x18500>
  41b230:	add	x0, x0, #0x458
  41b234:	ret
  41b238:	add	x0, x0, #0x388
  41b23c:	ret
  41b240:	stp	x29, x30, [sp, #-16]!
  41b244:	mov	x2, #0xb8                  	// #184
  41b248:	add	x0, x0, #0x388
  41b24c:	mov	x29, sp
  41b250:	bl	4025d0 <memcpy@plt>
  41b254:	ldp	x29, x30, [sp], #16
  41b258:	ret
  41b25c:	stp	x29, x30, [sp, #-32]!
  41b260:	mov	x29, sp
  41b264:	str	x19, [sp, #16]
  41b268:	mov	x19, x0
  41b26c:	ldr	x0, [x0, #712]
  41b270:	cbnz	x0, 41b27c <nftw@plt+0x1858c>
  41b274:	bl	42ba38 <nftw@plt+0x28d48>
  41b278:	str	x0, [x19, #712]
  41b27c:	ldr	x0, [x19, #712]
  41b280:	ldr	x19, [sp, #16]
  41b284:	ldp	x29, x30, [sp], #32
  41b288:	ret
  41b28c:	stp	x29, x30, [sp, #-64]!
  41b290:	mov	x29, sp
  41b294:	stp	x19, x20, [sp, #16]
  41b298:	add	x19, x0, #0x328
  41b29c:	mov	w20, w3
  41b2a0:	stp	x21, x22, [sp, #32]
  41b2a4:	mov	x21, x1
  41b2a8:	mov	x22, x2
  41b2ac:	ldr	x1, [x19, #24]
  41b2b0:	str	x23, [sp, #48]
  41b2b4:	mov	x23, x0
  41b2b8:	ldr	x0, [x19, #32]
  41b2bc:	sub	x0, x0, x1
  41b2c0:	cmp	x0, #0xc7
  41b2c4:	b.hi	41b2d4 <nftw@plt+0x185e4>  // b.pmore
  41b2c8:	mov	x0, x19
  41b2cc:	mov	x1, #0xc8                  	// #200
  41b2d0:	bl	43ce94 <_obstack_newchunk@@Base>
  41b2d4:	ldp	x4, x5, [x19, #16]
  41b2d8:	add	x5, x5, #0xc8
  41b2dc:	cmp	x5, x4
  41b2e0:	b.ne	41b2f0 <nftw@plt+0x18600>  // b.any
  41b2e4:	ldrb	w0, [x19, #80]
  41b2e8:	orr	w0, w0, #0x2
  41b2ec:	strb	w0, [x19, #80]
  41b2f0:	ldr	x3, [x19, #48]
  41b2f4:	and	w20, w20, #0x1
  41b2f8:	ldr	x0, [x19, #8]
  41b2fc:	add	x5, x5, x3
  41b300:	ldr	x1, [x19, #32]
  41b304:	bic	x3, x5, x3
  41b308:	sub	x2, x3, x0
  41b30c:	ubfiz	w20, w20, #9, #7
  41b310:	sub	x0, x1, x0
  41b314:	orr	w20, w20, #0x1
  41b318:	cmp	x2, x0
  41b31c:	mov	x0, x4
  41b320:	csel	x3, x3, x1, ls  // ls = plast
  41b324:	stp	x3, x3, [x19, #16]
  41b328:	mov	x2, #0xc8                  	// #200
  41b32c:	mov	w1, #0x0                   	// #0
  41b330:	bl	402840 <memset@plt>
  41b334:	mov	x4, x0
  41b338:	ldr	x0, [x23]
  41b33c:	mov	w1, #0xfffffd00            	// #-768
  41b340:	str	x0, [x4, #72]
  41b344:	ldrh	w0, [x4, #104]
  41b348:	stp	x21, x21, [x4, #16]
  41b34c:	add	x21, x21, x22
  41b350:	and	w0, w0, w1
  41b354:	orr	w20, w20, w0
  41b358:	strh	w20, [x4, #104]
  41b35c:	mov	x0, x4
  41b360:	ldp	x19, x20, [sp, #16]
  41b364:	str	x21, [x4, #32]
  41b368:	ldp	x21, x22, [sp, #32]
  41b36c:	str	x4, [x23]
  41b370:	ldr	x23, [sp, #48]
  41b374:	ldp	x29, x30, [sp], #64
  41b378:	ret
  41b37c:	stp	x29, x30, [sp, #-80]!
  41b380:	mov	x29, sp
  41b384:	stp	x19, x20, [sp, #16]
  41b388:	mov	x20, x0
  41b38c:	ldr	x19, [x0]
  41b390:	stp	x21, x22, [sp, #32]
  41b394:	adrp	x22, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b398:	add	x22, x22, #0x8ab
  41b39c:	stp	x23, x24, [sp, #48]
  41b3a0:	adrp	x24, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b3a4:	add	x24, x24, #0x998
  41b3a8:	ldr	x23, [x19, #80]
  41b3ac:	ldr	x21, [x19, #96]
  41b3b0:	str	x25, [sp, #64]
  41b3b4:	mov	x25, #0x18                  	// #24
  41b3b8:	cbz	x21, 41b3e8 <nftw@plt+0x186f8>
  41b3bc:	ldrsw	x0, [x21, #28]
  41b3c0:	mov	x4, x22
  41b3c4:	ldr	w2, [x21, #8]
  41b3c8:	mov	w3, #0x0                   	// #0
  41b3cc:	mov	w1, #0x3                   	// #3
  41b3d0:	madd	x0, x0, x25, x24
  41b3d4:	ldr	x5, [x0, #8]
  41b3d8:	mov	x0, x20
  41b3dc:	bl	41c1d0 <nftw@plt+0x194e0>
  41b3e0:	ldr	x21, [x21]
  41b3e4:	b	41b3b8 <nftw@plt+0x186c8>
  41b3e8:	strb	wzr, [x20, #18]
  41b3ec:	ldr	x0, [x19, #72]
  41b3f0:	ldr	x21, [x19, #40]
  41b3f4:	str	x0, [x20]
  41b3f8:	ldr	x0, [x19, #48]
  41b3fc:	bl	402a80 <free@plt>
  41b400:	ldr	x1, [x20, #816]
  41b404:	add	x0, x20, #0x328
  41b408:	cmp	x1, x19
  41b40c:	b.cs	41b460 <nftw@plt+0x18770>  // b.hs, b.nlast
  41b410:	ldr	x1, [x0, #32]
  41b414:	cmp	x1, x19
  41b418:	b.ls	41b460 <nftw@plt+0x18770>  // b.plast
  41b41c:	stp	x19, x19, [x0, #16]
  41b420:	cbz	x23, 41b46c <nftw@plt+0x1877c>
  41b424:	mov	x2, x21
  41b428:	mov	x1, x23
  41b42c:	mov	x0, x20
  41b430:	bl	42123c <nftw@plt+0x1e54c>
  41b434:	mov	x0, x20
  41b438:	mov	w4, #0x0                   	// #0
  41b43c:	ldp	x19, x20, [sp, #16]
  41b440:	mov	w3, #0x0                   	// #0
  41b444:	ldp	x21, x22, [sp, #32]
  41b448:	mov	x2, #0x0                   	// #0
  41b44c:	ldp	x23, x24, [sp, #48]
  41b450:	mov	w1, #0x1                   	// #1
  41b454:	ldr	x25, [sp, #64]
  41b458:	ldp	x29, x30, [sp], #80
  41b45c:	b	41aaec <nftw@plt+0x17dfc>
  41b460:	mov	x1, x19
  41b464:	bl	43cfe4 <_obstack_free@@Base>
  41b468:	b	41b420 <nftw@plt+0x18730>
  41b46c:	cbz	x21, 41b48c <nftw@plt+0x1879c>
  41b470:	mov	x0, x21
  41b474:	ldp	x19, x20, [sp, #16]
  41b478:	ldp	x21, x22, [sp, #32]
  41b47c:	ldp	x23, x24, [sp, #48]
  41b480:	ldr	x25, [sp, #64]
  41b484:	ldp	x29, x30, [sp], #80
  41b488:	b	402a80 <free@plt>
  41b48c:	ldp	x19, x20, [sp, #16]
  41b490:	ldp	x21, x22, [sp, #32]
  41b494:	ldp	x23, x24, [sp, #48]
  41b498:	ldr	x25, [sp, #64]
  41b49c:	ldp	x29, x30, [sp], #80
  41b4a0:	ret
  41b4a4:	stp	x29, x30, [sp, #-64]!
  41b4a8:	mov	x29, sp
  41b4ac:	stp	x19, x20, [sp, #16]
  41b4b0:	mov	x19, x0
  41b4b4:	stp	x21, x22, [sp, #32]
  41b4b8:	ldr	x20, [x0, #1400]
  41b4bc:	str	x23, [sp, #48]
  41b4c0:	bl	419240 <nftw@plt+0x16550>
  41b4c4:	cbnz	x0, 41b514 <nftw@plt+0x18824>
  41b4c8:	ldr	x0, [x19, #448]
  41b4cc:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b4d0:	add	x4, x4, #0x8bc
  41b4d4:	mov	w3, #0x0                   	// #0
  41b4d8:	mov	w1, #0x3                   	// #3
  41b4dc:	ldur	w2, [x0, #-24]
  41b4e0:	mov	x0, x19
  41b4e4:	bl	41c1d0 <nftw@plt+0x194e0>
  41b4e8:	mov	w1, #0x0                   	// #0
  41b4ec:	mov	x0, x19
  41b4f0:	bl	419374 <nftw@plt+0x16684>
  41b4f4:	mov	x0, x19
  41b4f8:	bl	41988c <nftw@plt+0x16b9c>
  41b4fc:	mov	sp, x29
  41b500:	ldp	x19, x20, [sp, #16]
  41b504:	ldp	x21, x22, [sp, #32]
  41b508:	ldr	x23, [sp, #48]
  41b50c:	ldp	x29, x30, [sp], #64
  41b510:	ret
  41b514:	ldr	w1, [x0, #8]
  41b518:	add	w2, w1, #0x2
  41b51c:	mov	w1, w1
  41b520:	add	x2, x2, #0xf
  41b524:	sub	x1, x1, #0x1
  41b528:	and	x2, x2, #0x1fffffff0
  41b52c:	sub	sp, sp, x2
  41b530:	ldr	x2, [x0, #16]
  41b534:	mov	x23, sp
  41b538:	add	x1, x2, x1
  41b53c:	ldrb	w0, [x2]
  41b540:	cmp	w0, #0x4c
  41b544:	cset	x0, eq  // eq = none
  41b548:	add	x0, x0, #0x1
  41b54c:	add	x0, x2, x0
  41b550:	mov	x2, x23
  41b554:	cmp	x0, x1
  41b558:	b.cs	41b58c <nftw@plt+0x1889c>  // b.hs, b.nlast
  41b55c:	ldrb	w3, [x0]
  41b560:	cmp	w3, #0x5c
  41b564:	b.ne	41b580 <nftw@plt+0x18890>  // b.any
  41b568:	ldrb	w3, [x0, #1]
  41b56c:	cmp	w3, #0x5c
  41b570:	b.eq	41b57c <nftw@plt+0x1888c>  // b.none
  41b574:	cmp	w3, #0x22
  41b578:	b.ne	41b580 <nftw@plt+0x18890>  // b.any
  41b57c:	add	x0, x0, #0x1
  41b580:	ldrb	w3, [x0], #1
  41b584:	strb	w3, [x2], #1
  41b588:	b	41b554 <nftw@plt+0x18864>
  41b58c:	strb	wzr, [x2]
  41b590:	mov	w1, #0x0                   	// #0
  41b594:	mov	x21, #0x0                   	// #0
  41b598:	mov	x0, x19
  41b59c:	bl	419374 <nftw@plt+0x16684>
  41b5a0:	mov	x0, x19
  41b5a4:	bl	41988c <nftw@plt+0x16b9c>
  41b5a8:	cbz	x20, 41b4fc <nftw@plt+0x1880c>
  41b5ac:	ldr	x22, [x20, #8]
  41b5b0:	mov	x1, x23
  41b5b4:	mov	x0, x22
  41b5b8:	bl	402a00 <strcmp@plt>
  41b5bc:	ldr	x1, [x20]
  41b5c0:	cbnz	w0, 41b6d0 <nftw@plt+0x189e0>
  41b5c4:	cbnz	x21, 41b6dc <nftw@plt+0x189ec>
  41b5c8:	str	x1, [x19, #1400]
  41b5cc:	mov	x1, x22
  41b5d0:	mov	x0, x19
  41b5d4:	bl	422410 <nftw@plt+0x1f720>
  41b5d8:	mov	x21, x0
  41b5dc:	cbz	x0, 41b720 <nftw@plt+0x18a30>
  41b5e0:	ldr	x1, [x19, #1024]
  41b5e4:	cbz	x1, 41b5f0 <nftw@plt+0x18900>
  41b5e8:	mov	x0, x19
  41b5ec:	blr	x1
  41b5f0:	ldrb	w0, [x21, #18]
  41b5f4:	tbz	w0, #1, 41b630 <nftw@plt+0x18940>
  41b5f8:	ldr	x3, [x19, #944]
  41b5fc:	cbz	x3, 41b610 <nftw@plt+0x18920>
  41b600:	ldr	w1, [x19, #48]
  41b604:	mov	x2, x21
  41b608:	mov	x0, x19
  41b60c:	blr	x3
  41b610:	ldrb	w0, [x19, #1151]
  41b614:	cbz	w0, 41b628 <nftw@plt+0x18938>
  41b618:	mov	x1, x21
  41b61c:	mov	x0, x19
  41b620:	mov	x2, #0x0                   	// #0
  41b624:	bl	42838c <nftw@plt+0x2569c>
  41b628:	mov	x0, x21
  41b62c:	bl	428f58 <nftw@plt+0x26268>
  41b630:	ldrb	w0, [x20, #28]
  41b634:	tbnz	w0, #2, 41b720 <nftw@plt+0x18a30>
  41b638:	ldr	x21, [x20, #16]
  41b63c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b640:	add	x1, x1, #0x8e0
  41b644:	mov	x0, x21
  41b648:	bl	402bf0 <strcspn@plt>
  41b64c:	sxtw	x23, w0
  41b650:	mov	x1, x21
  41b654:	mov	w2, w23
  41b658:	mov	x0, x19
  41b65c:	bl	421644 <nftw@plt+0x1e954>
  41b660:	mov	x22, x0
  41b664:	ldr	x21, [x20, #16]
  41b668:	mov	w1, #0xa                   	// #10
  41b66c:	add	x21, x21, x23
  41b670:	mov	x0, x21
  41b674:	bl	402ab0 <strchr@plt>
  41b678:	mov	x1, x21
  41b67c:	sub	x2, x0, x21
  41b680:	mov	w3, #0x1                   	// #1
  41b684:	mov	x0, x19
  41b688:	bl	41b28c <nftw@plt+0x1859c>
  41b68c:	mov	x21, x0
  41b690:	cbz	x0, 41b73c <nftw@plt+0x18a4c>
  41b694:	mov	x0, x19
  41b698:	bl	421cec <nftw@plt+0x1effc>
  41b69c:	mov	w0, #0x1                   	// #1
  41b6a0:	strb	w0, [x21, #106]
  41b6a4:	mov	x1, x22
  41b6a8:	mov	x0, x19
  41b6ac:	bl	429114 <nftw@plt+0x26424>
  41b6b0:	tst	w0, #0xff
  41b6b4:	b.ne	41b6e4 <nftw@plt+0x189f4>  // b.any
  41b6b8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b6bc:	add	x2, x2, #0x8e4
  41b6c0:	mov	w1, #0x9a8                 	// #2472
  41b6c4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b6c8:	add	x0, x0, #0x8f7
  41b6cc:	bl	402d60 <nftw@plt+0x70>
  41b6d0:	mov	x21, x20
  41b6d4:	mov	x20, x1
  41b6d8:	b	41b5a8 <nftw@plt+0x188b8>
  41b6dc:	str	x1, [x21]
  41b6e0:	b	41b5cc <nftw@plt+0x188dc>
  41b6e4:	mov	x0, x19
  41b6e8:	bl	41b37c <nftw@plt+0x1868c>
  41b6ec:	ldr	x2, [x22, #24]
  41b6f0:	ldrb	w1, [x20, #28]
  41b6f4:	ldr	w0, [x20, #24]
  41b6f8:	str	w0, [x2, #8]
  41b6fc:	ubfx	x0, x1, #1, #1
  41b700:	ubfx	x1, x1, #0, #1
  41b704:	ubfiz	w0, w0, #5, #3
  41b708:	ubfiz	w1, w1, #4, #4
  41b70c:	orr	w0, w0, w1
  41b710:	ldrb	w1, [x2, #19]
  41b714:	and	w1, w1, #0xffffffcf
  41b718:	orr	w0, w0, w1
  41b71c:	strb	w0, [x2, #19]
  41b720:	ldr	x0, [x20, #16]
  41b724:	bl	402a80 <free@plt>
  41b728:	ldr	x0, [x20, #8]
  41b72c:	bl	402a80 <free@plt>
  41b730:	mov	x0, x20
  41b734:	bl	402a80 <free@plt>
  41b738:	b	41b4fc <nftw@plt+0x1880c>
  41b73c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b740:	mov	w1, #0x9ac                 	// #2476
  41b744:	add	x2, x2, #0x8e4
  41b748:	b	41b6c4 <nftw@plt+0x189d4>
  41b74c:	stp	x29, x30, [sp, #-96]!
  41b750:	mov	x29, sp
  41b754:	stp	x23, x24, [sp, #48]
  41b758:	mov	w23, w2
  41b75c:	ldr	w2, [x1]
  41b760:	ldr	x1, [x1, #8]
  41b764:	stp	x19, x20, [sp, #16]
  41b768:	mov	x19, x0
  41b76c:	sub	w0, w2, #0x1
  41b770:	stp	x21, x22, [sp, #32]
  41b774:	add	x0, x0, #0xf
  41b778:	stp	x25, x26, [sp, #64]
  41b77c:	and	x0, x0, #0x1fffffff0
  41b780:	mov	w2, w2
  41b784:	stp	x27, x28, [sp, #80]
  41b788:	sub	sp, sp, x0
  41b78c:	mov	x21, sp
  41b790:	ldrb	w0, [x1]
  41b794:	sub	x2, x2, #0x1
  41b798:	mov	x20, x21
  41b79c:	cmp	w0, #0x4c
  41b7a0:	cset	x0, eq  // eq = none
  41b7a4:	add	x0, x0, #0x1
  41b7a8:	add	x0, x1, x0
  41b7ac:	add	x1, x1, x2
  41b7b0:	cmp	x0, x1
  41b7b4:	b.cs	41b7e8 <nftw@plt+0x18af8>  // b.hs, b.nlast
  41b7b8:	ldrb	w2, [x0]
  41b7bc:	cmp	w2, #0x5c
  41b7c0:	b.ne	41b7dc <nftw@plt+0x18aec>  // b.any
  41b7c4:	ldrb	w2, [x0, #1]
  41b7c8:	cmp	w2, #0x5c
  41b7cc:	b.eq	41b7d8 <nftw@plt+0x18ae8>  // b.none
  41b7d0:	cmp	w2, #0x22
  41b7d4:	b.ne	41b7dc <nftw@plt+0x18aec>  // b.any
  41b7d8:	add	x0, x0, #0x1
  41b7dc:	ldrb	w2, [x0], #1
  41b7e0:	strb	w2, [x20], #1
  41b7e4:	b	41b7b0 <nftw@plt+0x18ac0>
  41b7e8:	mov	w0, #0xa                   	// #10
  41b7ec:	strb	w0, [x20]
  41b7f0:	mov	x1, #0x38                  	// #56
  41b7f4:	mov	x0, #0x1                   	// #1
  41b7f8:	ldr	x26, [x19, #136]
  41b7fc:	ldr	x25, [x19, #448]
  41b800:	ldr	x24, [x19, #488]
  41b804:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  41b808:	str	x0, [x19, #136]
  41b80c:	mov	x1, x21
  41b810:	sub	x2, x20, x21
  41b814:	mov	x0, x19
  41b818:	mov	w3, #0x1                   	// #1
  41b81c:	bl	41b28c <nftw@plt+0x1859c>
  41b820:	ldr	x0, [x19]
  41b824:	ldr	x1, [x0, #72]
  41b828:	cbz	x1, 41b834 <nftw@plt+0x18b44>
  41b82c:	ldr	x1, [x1, #80]
  41b830:	str	x1, [x0, #80]
  41b834:	mov	w0, #0x1                   	// #1
  41b838:	strb	w0, [x19, #16]
  41b83c:	mov	w0, #0x53                  	// #83
  41b840:	strb	w0, [x19, #156]
  41b844:	ldr	x0, [x19, #40]
  41b848:	strb	wzr, [x19, #21]
  41b84c:	add	x21, x19, #0x98
  41b850:	ldr	w0, [x0, #60]
  41b854:	str	w0, [x19, #48]
  41b858:	mov	x0, x19
  41b85c:	bl	421cec <nftw@plt+0x1effc>
  41b860:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41b864:	add	x0, x0, #0x998
  41b868:	add	x0, x0, #0x108
  41b86c:	ldr	x20, [x19, #144]
  41b870:	str	x0, [x19, #144]
  41b874:	mov	x0, x19
  41b878:	bl	41a334 <nftw@plt+0x17644>
  41b87c:	mov	x0, x19
  41b880:	mov	w1, #0x1                   	// #1
  41b884:	bl	419a40 <nftw@plt+0x16d50>
  41b888:	str	x20, [x19, #144]
  41b88c:	ldrb	w0, [x19, #156]
  41b890:	cmp	w0, #0x51
  41b894:	b.ne	41b984 <nftw@plt+0x18c94>  // b.any
  41b898:	mov	x0, #0x4b0                 	// #1200
  41b89c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41b8a0:	mov	x20, x0
  41b8a4:	mov	w22, #0x32                  	// #50
  41b8a8:	ldp	x0, x1, [x19, #152]
  41b8ac:	mov	x27, #0x18                  	// #24
  41b8b0:	stp	x0, x1, [x20]
  41b8b4:	ldr	x0, [x21, #16]
  41b8b8:	mov	x21, #0x0                   	// #0
  41b8bc:	str	x0, [x20, #16]
  41b8c0:	mov	x0, x19
  41b8c4:	bl	42b37c <nftw@plt+0x2868c>
  41b8c8:	madd	x4, x21, x27, x27
  41b8cc:	add	x28, x21, #0x1
  41b8d0:	ldp	x2, x3, [x0]
  41b8d4:	add	x1, x20, x4
  41b8d8:	add	w21, w21, #0x2
  41b8dc:	stp	x2, x3, [x1]
  41b8e0:	ldr	x0, [x0, #16]
  41b8e4:	str	x0, [x1, #16]
  41b8e8:	ldrh	w0, [x1, #6]
  41b8ec:	str	w23, [x20, x4]
  41b8f0:	orr	w0, w0, #0x400
  41b8f4:	strh	w0, [x1, #6]
  41b8f8:	ldrb	w0, [x1, #4]
  41b8fc:	cmp	w0, #0x52
  41b900:	b.ne	41b95c <nftw@plt+0x18c6c>  // b.any
  41b904:	ldr	x0, [x19]
  41b908:	str	xzr, [x0, #80]
  41b90c:	mov	x0, x19
  41b910:	bl	41b37c <nftw@plt+0x1868c>
  41b914:	ldr	x0, [x19, #136]
  41b918:	bl	402a80 <free@plt>
  41b91c:	str	x26, [x19, #136]
  41b920:	str	x25, [x19, #448]
  41b924:	mov	w3, w21
  41b928:	str	x24, [x19, #488]
  41b92c:	mov	x2, x20
  41b930:	mov	x0, x19
  41b934:	mov	x1, #0x0                   	// #0
  41b938:	bl	428908 <nftw@plt+0x25c18>
  41b93c:	mov	sp, x29
  41b940:	ldp	x19, x20, [sp, #16]
  41b944:	ldp	x21, x22, [sp, #32]
  41b948:	ldp	x23, x24, [sp, #48]
  41b94c:	ldp	x25, x26, [sp, #64]
  41b950:	ldp	x27, x28, [sp, #80]
  41b954:	ldp	x29, x30, [sp], #96
  41b958:	ret
  41b95c:	cmp	w22, w21
  41b960:	b.ne	41b97c <nftw@plt+0x18c8c>  // b.any
  41b964:	add	w22, w22, w22, lsl #1
  41b968:	mov	x0, x20
  41b96c:	asr	w22, w22, #1
  41b970:	smull	x1, w22, w27
  41b974:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  41b978:	mov	x20, x0
  41b97c:	mov	x21, x28
  41b980:	b	41b8c0 <nftw@plt+0x18bd0>
  41b984:	mov	x0, #0x18                  	// #24
  41b988:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41b98c:	mov	x20, x0
  41b990:	ldp	x0, x1, [x19, #152]
  41b994:	ldr	x3, [x19, #904]
  41b998:	stp	x0, x1, [x20]
  41b99c:	ldr	x0, [x21, #16]
  41b9a0:	str	x0, [x20, #16]
  41b9a4:	cbz	x3, 41b9b8 <nftw@plt+0x18cc8>
  41b9a8:	ldr	x1, [x19, #448]
  41b9ac:	mov	x0, x19
  41b9b0:	mov	w2, #0x0                   	// #0
  41b9b4:	blr	x3
  41b9b8:	mov	w21, #0x1                   	// #1
  41b9bc:	b	41b904 <nftw@plt+0x18c14>
  41b9c0:	stp	x29, x30, [sp, #-32]!
  41b9c4:	mov	x29, sp
  41b9c8:	stp	x19, x20, [sp, #16]
  41b9cc:	mov	x19, x0
  41b9d0:	mov	w20, w1
  41b9d4:	bl	419240 <nftw@plt+0x16550>
  41b9d8:	mov	w1, #0x53                  	// #83
  41b9dc:	strb	w1, [x19, #156]
  41b9e0:	cbz	x0, 41ba04 <nftw@plt+0x18d14>
  41b9e4:	add	x1, x0, #0x8
  41b9e8:	mov	w2, w20
  41b9ec:	mov	x0, x19
  41b9f0:	bl	41b74c <nftw@plt+0x18a5c>
  41b9f4:	mov	w0, #0x1                   	// #1
  41b9f8:	ldp	x19, x20, [sp, #16]
  41b9fc:	ldp	x29, x30, [sp], #32
  41ba00:	ret
  41ba04:	mov	x0, x19
  41ba08:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41ba0c:	mov	w1, #0x3                   	// #3
  41ba10:	add	x2, x2, #0x911
  41ba14:	bl	41c014 <nftw@plt+0x19324>
  41ba18:	mov	w0, #0x0                   	// #0
  41ba1c:	b	41b9f8 <nftw@plt+0x18d08>
  41ba20:	stp	x29, x30, [sp, #-32]!
  41ba24:	mov	x29, sp
  41ba28:	stp	x19, x20, [sp, #16]
  41ba2c:	mov	x19, x0
  41ba30:	mov	w20, w1
  41ba34:	mov	x1, x2
  41ba38:	mov	x2, x3
  41ba3c:	mov	w3, #0x1                   	// #1
  41ba40:	bl	41b28c <nftw@plt+0x1859c>
  41ba44:	mov	w0, #0x1                   	// #1
  41ba48:	strb	w0, [x19, #16]
  41ba4c:	mov	w0, #0x53                  	// #83
  41ba50:	strb	w0, [x19, #156]
  41ba54:	ldr	x0, [x19, #40]
  41ba58:	strb	wzr, [x19, #21]
  41ba5c:	ldr	w0, [x0, #60]
  41ba60:	str	w0, [x19, #48]
  41ba64:	mov	x0, x19
  41ba68:	bl	421cec <nftw@plt+0x1effc>
  41ba6c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41ba70:	add	x1, x1, #0x998
  41ba74:	mov	w0, #0x18                  	// #24
  41ba78:	smaddl	x20, w20, w0, x1
  41ba7c:	ldrb	w0, [x19, #1160]
  41ba80:	str	x20, [x19, #144]
  41ba84:	cbz	w0, 41ba90 <nftw@plt+0x18da0>
  41ba88:	mov	x0, x19
  41ba8c:	bl	419080 <nftw@plt+0x16390>
  41ba90:	ldr	x0, [x19, #144]
  41ba94:	ldr	x1, [x0]
  41ba98:	mov	x0, x19
  41ba9c:	blr	x1
  41baa0:	mov	x0, x19
  41baa4:	mov	w1, #0x1                   	// #1
  41baa8:	bl	419a40 <nftw@plt+0x16d50>
  41baac:	mov	x0, x19
  41bab0:	ldp	x19, x20, [sp, #16]
  41bab4:	ldp	x29, x30, [sp], #32
  41bab8:	b	41b37c <nftw@plt+0x1868c>
  41babc:	stp	x29, x30, [sp, #-48]!
  41bac0:	mov	x29, sp
  41bac4:	stp	x19, x20, [sp, #16]
  41bac8:	stp	x21, x22, [sp, #32]
  41bacc:	mov	x21, x1
  41bad0:	mov	x22, x0
  41bad4:	mov	x0, x1
  41bad8:	bl	402630 <strlen@plt>
  41badc:	mov	x19, x0
  41bae0:	add	x0, x0, #0x12
  41bae4:	and	x0, x0, #0xfffffffffffffff0
  41bae8:	mov	x2, x19
  41baec:	sub	sp, sp, x0
  41baf0:	mov	x1, x21
  41baf4:	mov	x20, sp
  41baf8:	mov	x0, x20
  41bafc:	bl	4025d0 <memcpy@plt>
  41bb00:	mov	x0, x21
  41bb04:	mov	w1, #0x3d                  	// #61
  41bb08:	bl	402ab0 <strchr@plt>
  41bb0c:	mov	w2, #0x20                  	// #32
  41bb10:	cbz	x0, 41bb4c <nftw@plt+0x18e5c>
  41bb14:	sub	x1, x0, x21
  41bb18:	strb	w2, [x20, x1]
  41bb1c:	mov	w0, #0xa                   	// #10
  41bb20:	mov	x3, x19
  41bb24:	mov	x2, x20
  41bb28:	mov	w1, #0x0                   	// #0
  41bb2c:	strb	w0, [x20, x19]
  41bb30:	mov	x0, x22
  41bb34:	bl	41ba20 <nftw@plt+0x18d30>
  41bb38:	mov	sp, x29
  41bb3c:	ldp	x19, x20, [sp, #16]
  41bb40:	ldp	x21, x22, [sp, #32]
  41bb44:	ldp	x29, x30, [sp], #48
  41bb48:	ret
  41bb4c:	add	x0, x19, #0x1
  41bb50:	strb	w2, [x20, x19]
  41bb54:	mov	w1, #0x31                  	// #49
  41bb58:	add	x19, x19, #0x2
  41bb5c:	strb	w1, [x20, x0]
  41bb60:	b	41bb1c <nftw@plt+0x18e2c>
  41bb64:	stp	x29, x30, [sp, #-272]!
  41bb68:	mov	x29, sp
  41bb6c:	stp	x19, x20, [sp, #16]
  41bb70:	mov	x20, x0
  41bb74:	mov	x0, x1
  41bb78:	add	x1, sp, #0x110
  41bb7c:	stp	x1, x1, [sp, #64]
  41bb80:	add	x1, sp, #0xe0
  41bb84:	str	x1, [sp, #80]
  41bb88:	mov	w1, #0xffffffd0            	// #-48
  41bb8c:	str	w1, [sp, #88]
  41bb90:	mov	w1, #0xffffff80            	// #-128
  41bb94:	str	w1, [sp, #92]
  41bb98:	add	x1, sp, #0x20
  41bb9c:	stp	x2, x3, [sp, #224]
  41bba0:	ldp	x2, x3, [sp, #64]
  41bba4:	stp	x2, x3, [sp, #32]
  41bba8:	ldp	x2, x3, [sp, #80]
  41bbac:	stp	x2, x3, [sp, #48]
  41bbb0:	str	q0, [sp, #96]
  41bbb4:	str	q1, [sp, #112]
  41bbb8:	str	q2, [sp, #128]
  41bbbc:	str	q3, [sp, #144]
  41bbc0:	str	q4, [sp, #160]
  41bbc4:	str	q5, [sp, #176]
  41bbc8:	str	q6, [sp, #192]
  41bbcc:	str	q7, [sp, #208]
  41bbd0:	stp	x4, x5, [sp, #240]
  41bbd4:	stp	x6, x7, [sp, #256]
  41bbd8:	bl	43d32c <_obstack_memory_used@@Base+0x2d4>
  41bbdc:	mov	x1, x0
  41bbe0:	mov	x19, x0
  41bbe4:	mov	x0, x20
  41bbe8:	bl	41babc <nftw@plt+0x18dcc>
  41bbec:	mov	x0, x19
  41bbf0:	bl	402a80 <free@plt>
  41bbf4:	ldp	x19, x20, [sp, #16]
  41bbf8:	ldp	x29, x30, [sp], #272
  41bbfc:	ret
  41bc00:	stp	x29, x30, [sp, #-48]!
  41bc04:	mov	x29, sp
  41bc08:	stp	x19, x20, [sp, #16]
  41bc0c:	mov	x20, x1
  41bc10:	str	x21, [sp, #32]
  41bc14:	mov	x21, x0
  41bc18:	mov	x0, x1
  41bc1c:	bl	402630 <strlen@plt>
  41bc20:	mov	x19, x0
  41bc24:	add	x0, x0, #0x10
  41bc28:	and	x0, x0, #0xfffffffffffffff0
  41bc2c:	mov	x2, x19
  41bc30:	sub	sp, sp, x0
  41bc34:	mov	x1, x20
  41bc38:	mov	x4, sp
  41bc3c:	mov	x0, x4
  41bc40:	bl	4025d0 <memcpy@plt>
  41bc44:	mov	x4, x0
  41bc48:	mov	w0, #0xa                   	// #10
  41bc4c:	mov	x3, x19
  41bc50:	mov	x2, x4
  41bc54:	mov	w1, #0x0                   	// #0
  41bc58:	strb	w0, [x4, x19]
  41bc5c:	mov	x0, x21
  41bc60:	bl	41ba20 <nftw@plt+0x18d30>
  41bc64:	mov	sp, x29
  41bc68:	ldp	x19, x20, [sp, #16]
  41bc6c:	ldr	x21, [sp, #32]
  41bc70:	ldp	x29, x30, [sp], #48
  41bc74:	ret
  41bc78:	stp	x29, x30, [sp, #-48]!
  41bc7c:	mov	x29, sp
  41bc80:	stp	x19, x20, [sp, #16]
  41bc84:	mov	x20, x1
  41bc88:	str	x21, [sp, #32]
  41bc8c:	mov	x21, x0
  41bc90:	mov	x0, x1
  41bc94:	bl	402630 <strlen@plt>
  41bc98:	mov	x19, x0
  41bc9c:	add	x0, x0, #0x10
  41bca0:	and	x0, x0, #0xfffffffffffffff0
  41bca4:	mov	x2, x19
  41bca8:	sub	sp, sp, x0
  41bcac:	mov	x1, x20
  41bcb0:	mov	x4, sp
  41bcb4:	mov	x0, x4
  41bcb8:	bl	4025d0 <memcpy@plt>
  41bcbc:	mov	x4, x0
  41bcc0:	mov	w0, #0xa                   	// #10
  41bcc4:	mov	x3, x19
  41bcc8:	mov	x2, x4
  41bccc:	mov	w1, #0x7                   	// #7
  41bcd0:	strb	w0, [x4, x19]
  41bcd4:	mov	x0, x21
  41bcd8:	bl	41ba20 <nftw@plt+0x18d30>
  41bcdc:	mov	sp, x29
  41bce0:	ldp	x19, x20, [sp, #16]
  41bce4:	ldr	x21, [sp, #32]
  41bce8:	ldp	x29, x30, [sp], #48
  41bcec:	ret
  41bcf0:	stp	x29, x30, [sp, #-64]!
  41bcf4:	mov	x29, sp
  41bcf8:	stp	x19, x20, [sp, #16]
  41bcfc:	stp	x21, x22, [sp, #32]
  41bd00:	mov	x21, x1
  41bd04:	mov	x22, x0
  41bd08:	mov	x0, x1
  41bd0c:	str	x23, [sp, #48]
  41bd10:	mov	w23, w2
  41bd14:	bl	402630 <strlen@plt>
  41bd18:	mov	w1, #0x3d                  	// #61
  41bd1c:	mov	x19, x0
  41bd20:	mov	x0, x21
  41bd24:	bl	402ab0 <strchr@plt>
  41bd28:	mov	x20, x0
  41bd2c:	add	x0, x19, #0x11
  41bd30:	and	x0, x0, #0xfffffffffffffff0
  41bd34:	mov	x2, x19
  41bd38:	sub	sp, sp, x0
  41bd3c:	mov	x1, x21
  41bd40:	mov	x4, sp
  41bd44:	mov	x0, x4
  41bd48:	bl	4025d0 <memcpy@plt>
  41bd4c:	mov	x4, x0
  41bd50:	cbz	x20, 41bd6c <nftw@plt+0x1907c>
  41bd54:	sub	x20, x20, x21
  41bd58:	mov	w0, #0x28                  	// #40
  41bd5c:	strb	w0, [x4, x20]
  41bd60:	mov	w0, #0x29                  	// #41
  41bd64:	strb	w0, [x4, x19]
  41bd68:	add	x19, x19, #0x1
  41bd6c:	mov	w0, #0xa                   	// #10
  41bd70:	strb	w0, [x4, x19]
  41bd74:	mov	x3, x19
  41bd78:	mov	w1, w23
  41bd7c:	mov	x0, x22
  41bd80:	mov	x2, x4
  41bd84:	bl	41ba20 <nftw@plt+0x18d30>
  41bd88:	mov	sp, x29
  41bd8c:	ldp	x19, x20, [sp, #16]
  41bd90:	ldp	x21, x22, [sp, #32]
  41bd94:	ldr	x23, [sp, #48]
  41bd98:	ldp	x29, x30, [sp], #64
  41bd9c:	ret
  41bda0:	mov	w2, #0x10                  	// #16
  41bda4:	b	41bcf0 <nftw@plt+0x19000>
  41bda8:	mov	w2, #0x11                  	// #17
  41bdac:	b	41bcf0 <nftw@plt+0x19000>
  41bdb0:	stp	x29, x30, [sp, #-48]!
  41bdb4:	mov	x29, sp
  41bdb8:	stp	x19, x20, [sp, #16]
  41bdbc:	adrp	x19, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41bdc0:	add	x19, x19, #0x998
  41bdc4:	str	x21, [sp, #32]
  41bdc8:	mov	x21, x0
  41bdcc:	mov	w20, #0x0                   	// #0
  41bdd0:	ldrh	w2, [x19, #16]
  41bdd4:	mov	x0, x21
  41bdd8:	ldr	x1, [x19, #8]
  41bddc:	add	x19, x19, #0x18
  41bde0:	bl	421644 <nftw@plt+0x1e954>
  41bde4:	ubfiz	w1, w20, #1, #7
  41bde8:	add	w20, w20, #0x1
  41bdec:	orr	w1, w1, #0x1
  41bdf0:	strb	w1, [x0, #16]
  41bdf4:	cmp	w20, #0x13
  41bdf8:	b.ne	41bdd0 <nftw@plt+0x190e0>  // b.any
  41bdfc:	ldp	x19, x20, [sp, #16]
  41be00:	ldr	x21, [sp, #32]
  41be04:	ldp	x29, x30, [sp], #48
  41be08:	ret
  41be0c:	b	418cd0 <nftw@plt+0x15fe0>
  41be10:	stp	x29, x30, [sp, #-64]!
  41be14:	mov	x29, sp
  41be18:	stp	x23, x24, [sp, #48]
  41be1c:	ldr	x24, [x0, #1000]
  41be20:	stp	x19, x20, [sp, #16]
  41be24:	stp	x21, x22, [sp, #32]
  41be28:	cbnz	x24, 41be44 <nftw@plt+0x19154>
  41be2c:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41be30:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41be34:	add	x2, x2, #0xc18
  41be38:	add	x0, x0, #0xc2a
  41be3c:	mov	w1, #0x29                  	// #41
  41be40:	bl	402d60 <nftw@plt+0x70>
  41be44:	mov	x19, x0
  41be48:	mov	w20, w1
  41be4c:	mov	w21, w2
  41be50:	mov	x22, x3
  41be54:	mov	x1, x4
  41be58:	mov	x23, x5
  41be5c:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41be60:	add	x0, x0, #0xc40
  41be64:	bl	402a70 <dgettext@plt>
  41be68:	mov	x4, x0
  41be6c:	mov	x5, x23
  41be70:	mov	x3, x22
  41be74:	mov	w2, w21
  41be78:	mov	w1, w20
  41be7c:	mov	x0, x19
  41be80:	mov	x16, x24
  41be84:	ldp	x19, x20, [sp, #16]
  41be88:	ldp	x21, x22, [sp, #32]
  41be8c:	ldp	x23, x24, [sp, #48]
  41be90:	ldp	x29, x30, [sp], #64
  41be94:	br	x16
  41be98:	stp	x29, x30, [sp, #-240]!
  41be9c:	mov	x29, sp
  41bea0:	stp	x19, x20, [sp, #16]
  41bea4:	mov	w20, w1
  41bea8:	mov	x19, x0
  41beac:	stp	x21, x22, [sp, #32]
  41beb0:	mov	w21, w2
  41beb4:	mov	x22, x3
  41beb8:	ldr	x1, [x0, #40]
  41bebc:	str	x23, [sp, #48]
  41bec0:	mov	x23, x4
  41bec4:	ldrb	w0, [x0, #1160]
  41bec8:	cbz	w0, 41bf2c <nftw@plt+0x1923c>
  41becc:	ldrb	w0, [x19, #16]
  41bed0:	cbz	w0, 41bf24 <nftw@plt+0x19234>
  41bed4:	ldr	w2, [x19, #48]
  41bed8:	add	x0, sp, #0x48
  41bedc:	mov	x3, #0x0                   	// #0
  41bee0:	bl	4277f0 <nftw@plt+0x24b00>
  41bee4:	mov	x5, x23
  41bee8:	mov	x4, x22
  41beec:	add	x3, sp, #0x48
  41bef0:	mov	w2, w21
  41bef4:	mov	w1, w20
  41bef8:	mov	x0, x19
  41befc:	bl	41be10 <nftw@plt+0x19120>
  41bf00:	mov	w19, w0
  41bf04:	add	x0, sp, #0x48
  41bf08:	bl	427584 <nftw@plt+0x24894>
  41bf0c:	mov	w0, w19
  41bf10:	ldp	x19, x20, [sp, #16]
  41bf14:	ldp	x21, x22, [sp, #32]
  41bf18:	ldr	x23, [sp, #48]
  41bf1c:	ldp	x29, x30, [sp], #240
  41bf20:	ret
  41bf24:	ldr	w2, [x1, #60]
  41bf28:	b	41bed8 <nftw@plt+0x191e8>
  41bf2c:	ldr	x2, [x19, #488]
  41bf30:	ldr	x0, [x19, #448]
  41bf34:	ldr	x2, [x2, #16]
  41bf38:	cmp	x0, x2
  41bf3c:	b.eq	41bf48 <nftw@plt+0x19258>  // b.none
  41bf40:	ldur	w2, [x0, #-24]
  41bf44:	b	41bed8 <nftw@plt+0x191e8>
  41bf48:	mov	w2, #0x0                   	// #0
  41bf4c:	b	41bed8 <nftw@plt+0x191e8>
  41bf50:	stp	x29, x30, [sp, #-240]!
  41bf54:	mov	x29, sp
  41bf58:	stp	x19, x20, [sp, #16]
  41bf5c:	mov	x19, x0
  41bf60:	ldr	x0, [x0, #1000]
  41bf64:	stp	x21, x22, [sp, #32]
  41bf68:	stp	x23, x24, [sp, #48]
  41bf6c:	cbnz	x0, 41bf88 <nftw@plt+0x19298>
  41bf70:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41bf74:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41bf78:	add	x2, x2, #0xc47
  41bf7c:	add	x0, x0, #0xc2a
  41bf80:	mov	w1, #0x9f                  	// #159
  41bf84:	bl	402d60 <nftw@plt+0x70>
  41bf88:	mov	w21, w1
  41bf8c:	mov	w22, w2
  41bf90:	ldr	x1, [x19, #40]
  41bf94:	mov	w2, w3
  41bf98:	mov	w20, w4
  41bf9c:	mov	x24, x5
  41bfa0:	mov	x23, x6
  41bfa4:	add	x0, sp, #0x48
  41bfa8:	mov	x3, #0x0                   	// #0
  41bfac:	bl	4277f0 <nftw@plt+0x24b00>
  41bfb0:	cbz	w20, 41bfc0 <nftw@plt+0x192d0>
  41bfb4:	mov	w1, w20
  41bfb8:	add	x0, sp, #0x48
  41bfbc:	bl	427724 <nftw@plt+0x24a34>
  41bfc0:	ldr	x20, [x19, #1000]
  41bfc4:	mov	x1, x24
  41bfc8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41bfcc:	add	x0, x0, #0xc40
  41bfd0:	bl	402a70 <dgettext@plt>
  41bfd4:	mov	x4, x0
  41bfd8:	mov	x5, x23
  41bfdc:	add	x3, sp, #0x48
  41bfe0:	mov	w2, w22
  41bfe4:	mov	w1, w21
  41bfe8:	mov	x0, x19
  41bfec:	blr	x20
  41bff0:	mov	w19, w0
  41bff4:	add	x0, sp, #0x48
  41bff8:	bl	427584 <nftw@plt+0x24894>
  41bffc:	mov	w0, w19
  41c000:	ldp	x19, x20, [sp, #16]
  41c004:	ldp	x21, x22, [sp, #32]
  41c008:	ldp	x23, x24, [sp, #48]
  41c00c:	ldp	x29, x30, [sp], #240
  41c010:	ret
  41c014:	stp	x29, x30, [sp, #-224]!
  41c018:	mov	x29, sp
  41c01c:	stp	x3, x4, [sp, #184]
  41c020:	add	x3, sp, #0xe0
  41c024:	add	x4, sp, #0x10
  41c028:	stp	x3, x3, [sp, #16]
  41c02c:	add	x3, sp, #0xb0
  41c030:	str	x3, [sp, #32]
  41c034:	mov	w3, #0xffffffd8            	// #-40
  41c038:	str	w3, [sp, #40]
  41c03c:	mov	w3, #0xffffff80            	// #-128
  41c040:	str	w3, [sp, #44]
  41c044:	mov	x3, x2
  41c048:	mov	w2, #0x0                   	// #0
  41c04c:	str	q0, [sp, #48]
  41c050:	str	q1, [sp, #64]
  41c054:	str	q2, [sp, #80]
  41c058:	str	q3, [sp, #96]
  41c05c:	str	q4, [sp, #112]
  41c060:	str	q5, [sp, #128]
  41c064:	str	q6, [sp, #144]
  41c068:	str	q7, [sp, #160]
  41c06c:	stp	x5, x6, [sp, #200]
  41c070:	str	x7, [sp, #216]
  41c074:	bl	41be98 <nftw@plt+0x191a8>
  41c078:	ldp	x29, x30, [sp], #224
  41c07c:	ret
  41c080:	stp	x29, x30, [sp, #-224]!
  41c084:	mov	x29, sp
  41c088:	stp	x3, x4, [sp, #184]
  41c08c:	add	x3, sp, #0xe0
  41c090:	add	x4, sp, #0x10
  41c094:	stp	x3, x3, [sp, #16]
  41c098:	add	x3, sp, #0xb0
  41c09c:	str	x3, [sp, #32]
  41c0a0:	mov	w3, #0xffffffd8            	// #-40
  41c0a4:	str	w3, [sp, #40]
  41c0a8:	mov	w3, #0xffffff80            	// #-128
  41c0ac:	str	w3, [sp, #44]
  41c0b0:	mov	x3, x2
  41c0b4:	mov	w2, w1
  41c0b8:	mov	w1, #0x0                   	// #0
  41c0bc:	str	q0, [sp, #48]
  41c0c0:	str	q1, [sp, #64]
  41c0c4:	str	q2, [sp, #80]
  41c0c8:	str	q3, [sp, #96]
  41c0cc:	str	q4, [sp, #112]
  41c0d0:	str	q5, [sp, #128]
  41c0d4:	str	q6, [sp, #144]
  41c0d8:	str	q7, [sp, #160]
  41c0dc:	stp	x5, x6, [sp, #200]
  41c0e0:	str	x7, [sp, #216]
  41c0e4:	bl	41be98 <nftw@plt+0x191a8>
  41c0e8:	ldp	x29, x30, [sp], #224
  41c0ec:	ret
  41c0f0:	stp	x29, x30, [sp, #-224]!
  41c0f4:	mov	x29, sp
  41c0f8:	stp	x3, x4, [sp, #184]
  41c0fc:	add	x3, sp, #0xe0
  41c100:	add	x4, sp, #0x10
  41c104:	stp	x3, x3, [sp, #16]
  41c108:	add	x3, sp, #0xb0
  41c10c:	str	x3, [sp, #32]
  41c110:	mov	w3, #0xffffffd8            	// #-40
  41c114:	str	w3, [sp, #40]
  41c118:	mov	w3, #0xffffff80            	// #-128
  41c11c:	str	w3, [sp, #44]
  41c120:	mov	x3, x2
  41c124:	mov	w2, w1
  41c128:	mov	w1, #0x2                   	// #2
  41c12c:	str	q0, [sp, #48]
  41c130:	str	q1, [sp, #64]
  41c134:	str	q2, [sp, #80]
  41c138:	str	q3, [sp, #96]
  41c13c:	str	q4, [sp, #112]
  41c140:	str	q5, [sp, #128]
  41c144:	str	q6, [sp, #144]
  41c148:	str	q7, [sp, #160]
  41c14c:	stp	x5, x6, [sp, #200]
  41c150:	str	x7, [sp, #216]
  41c154:	bl	41be98 <nftw@plt+0x191a8>
  41c158:	ldp	x29, x30, [sp], #224
  41c15c:	ret
  41c160:	stp	x29, x30, [sp, #-224]!
  41c164:	mov	x29, sp
  41c168:	stp	x3, x4, [sp, #184]
  41c16c:	add	x3, sp, #0xe0
  41c170:	add	x4, sp, #0x10
  41c174:	stp	x3, x3, [sp, #16]
  41c178:	add	x3, sp, #0xb0
  41c17c:	str	x3, [sp, #32]
  41c180:	mov	w3, #0xffffffd8            	// #-40
  41c184:	str	w3, [sp, #40]
  41c188:	mov	w3, #0xffffff80            	// #-128
  41c18c:	str	w3, [sp, #44]
  41c190:	mov	x3, x2
  41c194:	mov	w2, w1
  41c198:	mov	w1, #0x1                   	// #1
  41c19c:	str	q0, [sp, #48]
  41c1a0:	str	q1, [sp, #64]
  41c1a4:	str	q2, [sp, #80]
  41c1a8:	str	q3, [sp, #96]
  41c1ac:	str	q4, [sp, #112]
  41c1b0:	str	q5, [sp, #128]
  41c1b4:	str	q6, [sp, #144]
  41c1b8:	str	q7, [sp, #160]
  41c1bc:	stp	x5, x6, [sp, #200]
  41c1c0:	str	x7, [sp, #216]
  41c1c4:	bl	41be98 <nftw@plt+0x191a8>
  41c1c8:	ldp	x29, x30, [sp], #224
  41c1cc:	ret
  41c1d0:	stp	x29, x30, [sp, #-208]!
  41c1d4:	mov	x29, sp
  41c1d8:	stp	x5, x6, [sp, #184]
  41c1dc:	add	x5, sp, #0xd0
  41c1e0:	add	x6, sp, #0x10
  41c1e4:	stp	x5, x5, [sp, #16]
  41c1e8:	add	x5, sp, #0xb0
  41c1ec:	str	x5, [sp, #32]
  41c1f0:	mov	w5, #0xffffffe8            	// #-24
  41c1f4:	str	w5, [sp, #40]
  41c1f8:	mov	w5, #0xffffff80            	// #-128
  41c1fc:	str	w5, [sp, #44]
  41c200:	mov	x5, x4
  41c204:	mov	w4, w3
  41c208:	mov	w3, w2
  41c20c:	mov	w2, #0x0                   	// #0
  41c210:	str	q0, [sp, #48]
  41c214:	str	q1, [sp, #64]
  41c218:	str	q2, [sp, #80]
  41c21c:	str	q3, [sp, #96]
  41c220:	str	q4, [sp, #112]
  41c224:	str	q5, [sp, #128]
  41c228:	str	q6, [sp, #144]
  41c22c:	str	q7, [sp, #160]
  41c230:	str	x7, [sp, #200]
  41c234:	bl	41bf50 <nftw@plt+0x19260>
  41c238:	ldp	x29, x30, [sp], #208
  41c23c:	ret
  41c240:	stp	x29, x30, [sp, #-208]!
  41c244:	mov	x29, sp
  41c248:	stp	x5, x6, [sp, #184]
  41c24c:	add	x5, sp, #0xd0
  41c250:	add	x6, sp, #0x10
  41c254:	stp	x5, x5, [sp, #16]
  41c258:	add	x5, sp, #0xb0
  41c25c:	str	x5, [sp, #32]
  41c260:	mov	w5, #0xffffffe8            	// #-24
  41c264:	str	w5, [sp, #40]
  41c268:	mov	w5, #0xffffff80            	// #-128
  41c26c:	str	w5, [sp, #44]
  41c270:	mov	x5, x4
  41c274:	mov	w4, w3
  41c278:	mov	w3, w2
  41c27c:	mov	w2, w1
  41c280:	mov	w1, #0x0                   	// #0
  41c284:	str	q0, [sp, #48]
  41c288:	str	q1, [sp, #64]
  41c28c:	str	q2, [sp, #80]
  41c290:	str	q3, [sp, #96]
  41c294:	str	q4, [sp, #112]
  41c298:	str	q5, [sp, #128]
  41c29c:	str	q6, [sp, #144]
  41c2a0:	str	q7, [sp, #160]
  41c2a4:	str	x7, [sp, #200]
  41c2a8:	bl	41bf50 <nftw@plt+0x19260>
  41c2ac:	ldp	x29, x30, [sp], #208
  41c2b0:	ret
  41c2b4:	stp	x29, x30, [sp, #-208]!
  41c2b8:	mov	x29, sp
  41c2bc:	stp	x5, x6, [sp, #184]
  41c2c0:	add	x5, sp, #0xd0
  41c2c4:	add	x6, sp, #0x10
  41c2c8:	stp	x5, x5, [sp, #16]
  41c2cc:	add	x5, sp, #0xb0
  41c2d0:	str	x5, [sp, #32]
  41c2d4:	mov	w5, #0xffffffe8            	// #-24
  41c2d8:	str	w5, [sp, #40]
  41c2dc:	mov	w5, #0xffffff80            	// #-128
  41c2e0:	str	w5, [sp, #44]
  41c2e4:	mov	x5, x4
  41c2e8:	mov	w4, w3
  41c2ec:	mov	w3, w2
  41c2f0:	mov	w2, w1
  41c2f4:	mov	w1, #0x2                   	// #2
  41c2f8:	str	q0, [sp, #48]
  41c2fc:	str	q1, [sp, #64]
  41c300:	str	q2, [sp, #80]
  41c304:	str	q3, [sp, #96]
  41c308:	str	q4, [sp, #112]
  41c30c:	str	q5, [sp, #128]
  41c310:	str	q6, [sp, #144]
  41c314:	str	q7, [sp, #160]
  41c318:	str	x7, [sp, #200]
  41c31c:	bl	41bf50 <nftw@plt+0x19260>
  41c320:	ldp	x29, x30, [sp], #208
  41c324:	ret
  41c328:	stp	x29, x30, [sp, #-208]!
  41c32c:	mov	x29, sp
  41c330:	stp	x5, x6, [sp, #184]
  41c334:	add	x5, sp, #0xd0
  41c338:	add	x6, sp, #0x10
  41c33c:	stp	x5, x5, [sp, #16]
  41c340:	add	x5, sp, #0xb0
  41c344:	str	x5, [sp, #32]
  41c348:	mov	w5, #0xffffffe8            	// #-24
  41c34c:	str	w5, [sp, #40]
  41c350:	mov	w5, #0xffffff80            	// #-128
  41c354:	str	w5, [sp, #44]
  41c358:	mov	x5, x4
  41c35c:	mov	w4, w3
  41c360:	mov	w3, w2
  41c364:	mov	w2, w1
  41c368:	mov	w1, #0x1                   	// #1
  41c36c:	str	q0, [sp, #48]
  41c370:	str	q1, [sp, #64]
  41c374:	str	q2, [sp, #80]
  41c378:	str	q3, [sp, #96]
  41c37c:	str	q4, [sp, #112]
  41c380:	str	q5, [sp, #128]
  41c384:	str	q6, [sp, #144]
  41c388:	str	q7, [sp, #160]
  41c38c:	str	x7, [sp, #200]
  41c390:	bl	41bf50 <nftw@plt+0x19260>
  41c394:	ldp	x29, x30, [sp], #208
  41c398:	ret
  41c39c:	stp	x29, x30, [sp, #-416]!
  41c3a0:	mov	x29, sp
  41c3a4:	stp	x19, x20, [sp, #16]
  41c3a8:	mov	x19, x0
  41c3ac:	mov	w20, w1
  41c3b0:	str	q0, [sp, #256]
  41c3b4:	add	x0, sp, #0x1a0
  41c3b8:	str	q1, [sp, #272]
  41c3bc:	str	q2, [sp, #288]
  41c3c0:	str	q3, [sp, #304]
  41c3c4:	str	q4, [sp, #320]
  41c3c8:	str	q5, [sp, #336]
  41c3cc:	str	q6, [sp, #352]
  41c3d0:	str	q7, [sp, #368]
  41c3d4:	stp	x4, x5, [sp, #384]
  41c3d8:	stp	x6, x7, [sp, #400]
  41c3dc:	ldr	x1, [x19, #40]
  41c3e0:	stp	x0, x0, [sp, #56]
  41c3e4:	add	x0, sp, #0x180
  41c3e8:	str	x0, [sp, #72]
  41c3ec:	mov	w0, #0xffffffe0            	// #-32
  41c3f0:	str	w0, [sp, #80]
  41c3f4:	mov	w0, #0xffffff80            	// #-128
  41c3f8:	str	x21, [sp, #32]
  41c3fc:	mov	x21, x3
  41c400:	mov	x3, #0x0                   	// #0
  41c404:	str	w0, [sp, #84]
  41c408:	add	x0, sp, #0x58
  41c40c:	bl	4277f0 <nftw@plt+0x24b00>
  41c410:	add	x5, sp, #0x38
  41c414:	mov	x4, x21
  41c418:	add	x3, sp, #0x58
  41c41c:	mov	w1, w20
  41c420:	mov	w2, #0x0                   	// #0
  41c424:	mov	x0, x19
  41c428:	bl	41be10 <nftw@plt+0x19120>
  41c42c:	mov	w19, w0
  41c430:	add	x0, sp, #0x58
  41c434:	bl	427584 <nftw@plt+0x24894>
  41c438:	mov	w0, w19
  41c43c:	ldp	x19, x20, [sp, #16]
  41c440:	ldr	x21, [sp, #32]
  41c444:	ldp	x29, x30, [sp], #416
  41c448:	ret
  41c44c:	stp	x29, x30, [sp, #-208]!
  41c450:	mov	x29, sp
  41c454:	stp	x4, x5, [sp, #176]
  41c458:	add	x4, sp, #0xd0
  41c45c:	add	x5, sp, #0x10
  41c460:	stp	x4, x4, [sp, #16]
  41c464:	add	x4, sp, #0xb0
  41c468:	str	x4, [sp, #32]
  41c46c:	mov	w4, #0xffffffe0            	// #-32
  41c470:	str	w4, [sp, #40]
  41c474:	mov	w4, #0xffffff80            	// #-128
  41c478:	str	w4, [sp, #44]
  41c47c:	mov	x4, x3
  41c480:	mov	x3, x2
  41c484:	mov	w2, #0x0                   	// #0
  41c488:	str	q0, [sp, #48]
  41c48c:	str	q1, [sp, #64]
  41c490:	str	q2, [sp, #80]
  41c494:	str	q3, [sp, #96]
  41c498:	str	q4, [sp, #112]
  41c49c:	str	q5, [sp, #128]
  41c4a0:	str	q6, [sp, #144]
  41c4a4:	str	q7, [sp, #160]
  41c4a8:	stp	x6, x7, [sp, #192]
  41c4ac:	bl	41be10 <nftw@plt+0x19120>
  41c4b0:	ldp	x29, x30, [sp], #208
  41c4b4:	ret
  41c4b8:	stp	x29, x30, [sp, #-48]!
  41c4bc:	mov	x29, sp
  41c4c0:	stp	x19, x20, [sp, #16]
  41c4c4:	mov	w20, w1
  41c4c8:	mov	x1, x2
  41c4cc:	mov	x19, x0
  41c4d0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41c4d4:	add	x0, x0, #0xc40
  41c4d8:	str	x21, [sp, #32]
  41c4dc:	bl	402a70 <dgettext@plt>
  41c4e0:	mov	x21, x0
  41c4e4:	bl	402c20 <__errno_location@plt>
  41c4e8:	ldr	w0, [x0]
  41c4ec:	bl	43d2b0 <_obstack_memory_used@@Base+0x258>
  41c4f0:	mov	x4, x0
  41c4f4:	mov	x3, x21
  41c4f8:	mov	w1, w20
  41c4fc:	mov	x0, x19
  41c500:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41c504:	ldp	x19, x20, [sp, #16]
  41c508:	add	x2, x2, #0xc60
  41c50c:	ldr	x21, [sp, #32]
  41c510:	ldp	x29, x30, [sp], #48
  41c514:	b	41c014 <nftw@plt+0x19324>
  41c518:	stp	x29, x30, [sp, #-48]!
  41c51c:	mov	x29, sp
  41c520:	stp	x19, x20, [sp, #16]
  41c524:	mov	x20, x0
  41c528:	stp	x21, x22, [sp, #32]
  41c52c:	mov	w21, w1
  41c530:	mov	w22, w3
  41c534:	ldrb	w0, [x2]
  41c538:	cbnz	w0, 41c58c <nftw@plt+0x1989c>
  41c53c:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41c540:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41c544:	add	x1, x1, #0xc67
  41c548:	add	x0, x0, #0xc40
  41c54c:	bl	402a70 <dgettext@plt>
  41c550:	mov	x19, x0
  41c554:	bl	402c20 <__errno_location@plt>
  41c558:	ldr	w0, [x0]
  41c55c:	bl	43d2b0 <_obstack_memory_used@@Base+0x258>
  41c560:	mov	x5, x0
  41c564:	mov	x4, x19
  41c568:	mov	w2, w22
  41c56c:	mov	w1, w21
  41c570:	mov	x0, x20
  41c574:	ldp	x19, x20, [sp, #16]
  41c578:	adrp	x3, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41c57c:	ldp	x21, x22, [sp, #32]
  41c580:	add	x3, x3, #0xc60
  41c584:	ldp	x29, x30, [sp], #48
  41c588:	b	41c39c <nftw@plt+0x196ac>
  41c58c:	mov	x19, x2
  41c590:	b	41c554 <nftw@plt+0x19864>
  41c594:	mov	x7, x0
  41c598:	cmp	x2, #0x2
  41c59c:	b.ne	41c5d8 <nftw@plt+0x198e8>  // b.any
  41c5a0:	ldrb	w3, [x1]
  41c5a4:	and	w0, w3, #0xffffffdf
  41c5a8:	cmp	w0, #0x44
  41c5ac:	b.ne	41c5d8 <nftw@plt+0x198e8>  // b.any
  41c5b0:	ldrb	w0, [x1, #1]
  41c5b4:	cmp	w0, #0x64
  41c5b8:	b.eq	41c624 <nftw@plt+0x19934>  // b.none
  41c5bc:	b.hi	41c5e8 <nftw@plt+0x198f8>  // b.pmore
  41c5c0:	cmp	w0, #0x46
  41c5c4:	b.eq	41c614 <nftw@plt+0x19924>  // b.none
  41c5c8:	cmp	w0, #0x4c
  41c5cc:	b.eq	41c63c <nftw@plt+0x1994c>  // b.none
  41c5d0:	cmp	w0, #0x44
  41c5d4:	b.eq	41c630 <nftw@plt+0x19940>  // b.none
  41c5d8:	ldrb	w16, [x7, #1163]
  41c5dc:	cbnz	w16, 41c6bc <nftw@plt+0x199cc>
  41c5e0:	mov	x5, x2
  41c5e4:	b	41c64c <nftw@plt+0x1995c>
  41c5e8:	cmp	w0, #0x66
  41c5ec:	b.eq	41c604 <nftw@plt+0x19914>  // b.none
  41c5f0:	cmp	w0, #0x6c
  41c5f4:	b.ne	41c5d8 <nftw@plt+0x198e8>  // b.any
  41c5f8:	cmp	w3, #0x44
  41c5fc:	mov	w0, #0x4040                	// #16448
  41c600:	b	41c60c <nftw@plt+0x1991c>
  41c604:	cmp	w3, #0x44
  41c608:	mov	w0, #0x4010                	// #16400
  41c60c:	csel	w0, wzr, w0, eq  // eq = none
  41c610:	ret
  41c614:	cmp	w3, #0x44
  41c618:	mov	w0, #0x4010                	// #16400
  41c61c:	csel	w0, wzr, w0, ne  // ne = any
  41c620:	ret
  41c624:	cmp	w3, #0x44
  41c628:	mov	w0, #0x4020                	// #16416
  41c62c:	b	41c60c <nftw@plt+0x1991c>
  41c630:	cmp	w3, #0x44
  41c634:	mov	w0, #0x4020                	// #16416
  41c638:	b	41c61c <nftw@plt+0x1992c>
  41c63c:	cmp	w3, #0x44
  41c640:	mov	w0, #0x4040                	// #16448
  41c644:	b	41c61c <nftw@plt+0x1992c>
  41c648:	mov	x5, #0x0                   	// #0
  41c64c:	stp	x29, x30, [sp, #-48]!
  41c650:	adrp	x18, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41c654:	adrp	x30, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41c658:	mov	x29, sp
  41c65c:	mov	x6, x1
  41c660:	add	x18, x18, #0xc84
  41c664:	add	x30, x30, #0xc70
  41c668:	mov	x3, #0x0                   	// #0
  41c66c:	mov	x12, #0x0                   	// #0
  41c670:	mov	x11, #0x0                   	// #0
  41c674:	mov	x10, #0x0                   	// #0
  41c678:	mov	x9, #0x0                   	// #0
  41c67c:	mov	x8, #0x0                   	// #0
  41c680:	mov	x15, #0x0                   	// #0
  41c684:	mov	x14, #0x0                   	// #0
  41c688:	mov	x4, #0x0                   	// #0
  41c68c:	stp	x19, x20, [sp, #16]
  41c690:	mov	x19, #0xa                   	// #10
  41c694:	str	x21, [sp, #32]
  41c698:	sub	x0, x5, #0x1
  41c69c:	cbz	x5, 41c8a8 <nftw@plt+0x19bb8>
  41c6a0:	ldrb	w5, [x6]
  41c6a4:	cmp	w5, #0x57
  41c6a8:	b.hi	41c7d0 <nftw@plt+0x19ae0>  // b.pmore
  41c6ac:	cmp	w5, #0x43
  41c6b0:	b.hi	41c7b4 <nftw@plt+0x19ac4>  // b.pmore
  41c6b4:	mov	w0, #0x0                   	// #0
  41c6b8:	b	41c9a4 <nftw@plt+0x19cb4>
  41c6bc:	cbz	x2, 41c648 <nftw@plt+0x19958>
  41c6c0:	sub	x3, x2, #0x1
  41c6c4:	ldrb	w4, [x1, x3]
  41c6c8:	cmp	w4, #0x6b
  41c6cc:	b.eq	41c750 <nftw@plt+0x19a60>  // b.none
  41c6d0:	b.hi	41c740 <nftw@plt+0x19a50>  // b.pmore
  41c6d4:	cmp	w4, #0x4b
  41c6d8:	b.eq	41c750 <nftw@plt+0x19a60>  // b.none
  41c6dc:	cmp	w4, #0x52
  41c6e0:	mov	x0, #0x100000              	// #1048576
  41c6e4:	b.ne	41c5e0 <nftw@plt+0x198f0>  // b.any
  41c6e8:	cmp	x2, #0x1
  41c6ec:	b.eq	41ca04 <nftw@plt+0x19d14>  // b.none
  41c6f0:	ldrb	w4, [x1]
  41c6f4:	and	w4, w4, #0xffffffdf
  41c6f8:	and	w4, w4, #0xff
  41c6fc:	cmp	w4, #0x55
  41c700:	b.ne	41c718 <nftw@plt+0x19a28>  // b.any
  41c704:	orr	x0, x0, #0x1000
  41c708:	cmp	x3, #0x1
  41c70c:	b.eq	41ca04 <nftw@plt+0x19d14>  // b.none
  41c710:	sub	x3, x2, #0x2
  41c714:	add	x1, x1, #0x1
  41c718:	ldrb	w2, [x1]
  41c71c:	cmp	w2, #0x68
  41c720:	b.eq	41c770 <nftw@plt+0x19a80>  // b.none
  41c724:	b.hi	41c758 <nftw@plt+0x19a68>  // b.pmore
  41c728:	cmp	w2, #0x48
  41c72c:	b.eq	41c770 <nftw@plt+0x19a80>  // b.none
  41c730:	cmp	w2, #0x4c
  41c734:	b.eq	41c794 <nftw@plt+0x19aa4>  // b.none
  41c738:	mov	w0, #0x0                   	// #0
  41c73c:	ret
  41c740:	cmp	w4, #0x72
  41c744:	b.ne	41c5e0 <nftw@plt+0x198f0>  // b.any
  41c748:	mov	x0, #0x100000              	// #1048576
  41c74c:	b	41c6e8 <nftw@plt+0x199f8>
  41c750:	mov	x0, #0x200000              	// #2097152
  41c754:	b	41c6e8 <nftw@plt+0x199f8>
  41c758:	cmp	w2, #0x6c
  41c75c:	b.ne	41c738 <nftw@plt+0x19a48>  // b.any
  41c760:	cmp	x3, #0x1
  41c764:	b.ne	41c77c <nftw@plt+0x19a8c>  // b.any
  41c768:	orr	w0, w0, #0x20
  41c76c:	ret
  41c770:	orr	x0, x0, #0x10
  41c774:	cmp	x3, #0x1
  41c778:	b	41c61c <nftw@plt+0x1992c>
  41c77c:	cmp	x3, #0x2
  41c780:	b.ne	41c738 <nftw@plt+0x19a48>  // b.any
  41c784:	ldrb	w1, [x1, #1]
  41c788:	orr	x0, x0, #0x40
  41c78c:	cmp	w1, #0x6c
  41c790:	b	41c61c <nftw@plt+0x1992c>
  41c794:	cmp	x3, #0x1
  41c798:	b.eq	41c768 <nftw@plt+0x19a78>  // b.none
  41c79c:	cmp	x3, #0x2
  41c7a0:	b.ne	41c738 <nftw@plt+0x19a48>  // b.any
  41c7a4:	ldrb	w1, [x1, #1]
  41c7a8:	orr	x0, x0, #0x40
  41c7ac:	cmp	w1, #0x4c
  41c7b0:	b	41c61c <nftw@plt+0x1992c>
  41c7b4:	sub	w5, w5, #0x44
  41c7b8:	cmp	w5, #0x13
  41c7bc:	b.hi	41c6b4 <nftw@plt+0x199c4>  // b.pmore
  41c7c0:	ldrb	w5, [x30, w5, uxtw]
  41c7c4:	adr	x13, 41c7d0 <nftw@plt+0x19ae0>
  41c7c8:	add	x5, x13, w5, sxtb #2
  41c7cc:	br	x5
  41c7d0:	sub	w5, w5, #0x64
  41c7d4:	and	w13, w5, #0xff
  41c7d8:	cmp	w13, #0x13
  41c7dc:	b.hi	41c6b4 <nftw@plt+0x199c4>  // b.pmore
  41c7e0:	cmp	w5, #0x13
  41c7e4:	b.hi	41c6b4 <nftw@plt+0x199c4>  // b.pmore
  41c7e8:	ldrb	w5, [x18, w5, uxtw]
  41c7ec:	adr	x13, 41c7f8 <nftw@plt+0x19b08>
  41c7f0:	add	x5, x13, w5, sxtb #2
  41c7f4:	br	x5
  41c7f8:	add	x5, x4, #0x1
  41c7fc:	cbz	x0, 41c870 <nftw@plt+0x19b80>
  41c800:	ldrb	w13, [x7, #1120]
  41c804:	cbnz	w13, 41c870 <nftw@plt+0x19b80>
  41c808:	ldrb	w13, [x6, #1]
  41c80c:	sub	w13, w13, #0x31
  41c810:	and	w13, w13, #0xff
  41c814:	cmp	w13, #0x8
  41c818:	b.hi	41c870 <nftw@plt+0x19b80>  // b.pmore
  41c81c:	cbnz	x3, 41c870 <nftw@plt+0x19b80>
  41c820:	ldrb	w20, [x6, #1]
  41c824:	mov	x17, x0
  41c828:	mov	x13, x6
  41c82c:	sub	x0, x0, #0x1
  41c830:	sub	w5, w20, #0x30
  41c834:	add	x6, x6, #0x1
  41c838:	and	w21, w5, #0xff
  41c83c:	cmp	w21, #0x9
  41c840:	b.hi	41c9f0 <nftw@plt+0x19d00>  // b.pmore
  41c844:	cmp	x3, #0xef
  41c848:	b.hi	41c860 <nftw@plt+0x19b70>  // b.pmore
  41c84c:	sxtw	x5, w5
  41c850:	madd	x3, x3, x19, x5
  41c854:	cbnz	x0, 41c820 <nftw@plt+0x19b30>
  41c858:	mov	x13, x6
  41c85c:	mov	x17, #0x0                   	// #0
  41c860:	add	x11, x11, #0x1
  41c864:	mov	x5, x4
  41c868:	mov	x0, x17
  41c86c:	mov	x6, x13
  41c870:	mov	x4, x5
  41c874:	add	x6, x6, #0x1
  41c878:	mov	x5, x0
  41c87c:	b	41c698 <nftw@plt+0x199a8>
  41c880:	add	x14, x14, #0x1
  41c884:	b	41c9fc <nftw@plt+0x19d0c>
  41c888:	add	x15, x15, #0x1
  41c88c:	b	41c9fc <nftw@plt+0x19d0c>
  41c890:	add	x8, x8, #0x1
  41c894:	b	41c9fc <nftw@plt+0x19d0c>
  41c898:	add	x9, x9, #0x1
  41c89c:	b	41c9fc <nftw@plt+0x19d0c>
  41c8a0:	add	x10, x10, #0x1
  41c8a4:	b	41c9fc <nftw@plt+0x19d0c>
  41c8a8:	add	x0, x8, x9
  41c8ac:	add	x5, x11, x12
  41c8b0:	add	x5, x5, x0
  41c8b4:	add	x0, x14, x15
  41c8b8:	add	x5, x5, x0
  41c8bc:	add	x5, x5, x4
  41c8c0:	cmp	x5, #0x1
  41c8c4:	b.hi	41c6b4 <nftw@plt+0x199c4>  // b.pmore
  41c8c8:	cmp	x10, #0x1
  41c8cc:	b.hi	41c6b4 <nftw@plt+0x199c4>  // b.pmore
  41c8d0:	cmp	x3, #0xf0
  41c8d4:	b.hi	41c6b4 <nftw@plt+0x199c4>  // b.pmore
  41c8d8:	cmp	x3, #0x20
  41c8dc:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  41c8e0:	b.eq	41c8f4 <nftw@plt+0x19c04>  // b.none
  41c8e4:	cmp	x3, #0x40
  41c8e8:	mov	x0, #0x80                  	// #128
  41c8ec:	ccmp	x3, x0, #0x4, ne  // ne = any
  41c8f0:	b.ne	41c6b4 <nftw@plt+0x199c4>  // b.any
  41c8f4:	cmp	x11, #0x0
  41c8f8:	cset	w0, ne  // ne = any
  41c8fc:	cmp	w0, #0x0
  41c900:	ccmp	x3, #0x10, #0x4, ne  // ne = any
  41c904:	b.eq	41c910 <nftw@plt+0x19c20>  // b.none
  41c908:	tst	x3, #0x1f
  41c90c:	b.ne	41c6b4 <nftw@plt+0x199c4>  // b.any
  41c910:	cmp	x3, #0x60
  41c914:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41c918:	b.ne	41c6b4 <nftw@plt+0x199c4>  // b.any
  41c91c:	cbz	x10, 41c968 <nftw@plt+0x19c78>
  41c920:	cbz	w16, 41c6b4 <nftw@plt+0x199c4>
  41c924:	ldrb	w0, [x7, #1120]
  41c928:	cbz	w0, 41c968 <nftw@plt+0x19c78>
  41c92c:	ldr	w0, [x7, #1116]
  41c930:	cmp	w0, #0xe
  41c934:	b.le	41c968 <nftw@plt+0x19c78>
  41c938:	ldrb	w0, [x1]
  41c93c:	cmp	w0, #0x69
  41c940:	b.ne	41c968 <nftw@plt+0x19c78>  // b.any
  41c944:	cmp	x2, #0x1
  41c948:	b.eq	41c6b4 <nftw@plt+0x199c4>  // b.none
  41c94c:	cmp	x2, #0x2
  41c950:	b.ne	41c968 <nftw@plt+0x19c78>  // b.any
  41c954:	ldrb	w0, [x1, #1]
  41c958:	cmp	w0, #0x66
  41c95c:	b.eq	41c6b4 <nftw@plt+0x199c4>  // b.none
  41c960:	cmp	w0, #0x6c
  41c964:	b.eq	41c6b4 <nftw@plt+0x199c4>  // b.none
  41c968:	orr	x0, x8, x9
  41c96c:	cbz	x0, 41c974 <nftw@plt+0x19c84>
  41c970:	cbz	w16, 41c6b4 <nftw@plt+0x199c4>
  41c974:	cmp	x10, #0x0
  41c978:	cset	w0, ne  // ne = any
  41c97c:	lsl	w0, w0, #13
  41c980:	cbnz	x4, 41c9c8 <nftw@plt+0x19cd8>
  41c984:	cbnz	x14, 41c9d0 <nftw@plt+0x19ce0>
  41c988:	cbnz	x15, 41c9d8 <nftw@plt+0x19ce8>
  41c98c:	cbnz	x8, 41c9e0 <nftw@plt+0x19cf0>
  41c990:	cbnz	x9, 41c9e8 <nftw@plt+0x19cf8>
  41c994:	lsl	w3, w3, #24
  41c998:	cbz	x11, 41c9b4 <nftw@plt+0x19cc4>
  41c99c:	orr	w3, w3, #0x400000
  41c9a0:	orr	w0, w0, w3
  41c9a4:	ldp	x19, x20, [sp, #16]
  41c9a8:	ldr	x21, [sp, #32]
  41c9ac:	ldp	x29, x30, [sp], #48
  41c9b0:	ret
  41c9b4:	orr	w3, w3, #0x800000
  41c9b8:	cmp	x12, #0x0
  41c9bc:	mov	w1, #0x8000                	// #32768
  41c9c0:	csel	w3, w3, w1, ne  // ne = any
  41c9c4:	b	41c9a0 <nftw@plt+0x19cb0>
  41c9c8:	mov	w3, #0x10                  	// #16
  41c9cc:	b	41c9a0 <nftw@plt+0x19cb0>
  41c9d0:	mov	w3, #0x20                  	// #32
  41c9d4:	b	41c9a0 <nftw@plt+0x19cb0>
  41c9d8:	mov	w3, #0x40                  	// #64
  41c9dc:	b	41c9a0 <nftw@plt+0x19cb0>
  41c9e0:	mov	w3, #0x10000               	// #65536
  41c9e4:	b	41c9a0 <nftw@plt+0x19cb0>
  41c9e8:	mov	w3, #0x20000               	// #131072
  41c9ec:	b	41c9a0 <nftw@plt+0x19cb0>
  41c9f0:	cmp	w20, #0x78
  41c9f4:	b.ne	41c860 <nftw@plt+0x19b70>  // b.any
  41c9f8:	add	x12, x12, #0x1
  41c9fc:	mov	x5, x4
  41ca00:	b	41c870 <nftw@plt+0x19b80>
  41ca04:	ret
  41ca08:	add	x5, x1, x2
  41ca0c:	mov	x7, #0x0                   	// #0
  41ca10:	mov	x4, #0x0                   	// #0
  41ca14:	mov	x6, #0x0                   	// #0
  41ca18:	mov	x9, #0x1                   	// #1
  41ca1c:	cmp	x5, x1
  41ca20:	b.eq	41ca88 <nftw@plt+0x19d98>  // b.none
  41ca24:	ldurb	w8, [x5, #-1]
  41ca28:	sub	w3, w8, #0x49
  41ca2c:	and	w3, w3, #0xff
  41ca30:	cmp	w3, #0x2c
  41ca34:	b.hi	41ca80 <nftw@plt+0x19d90>  // b.pmore
  41ca38:	lsl	x3, x9, x3
  41ca3c:	tst	x3, #0x300000003
  41ca40:	b.ne	41ca60 <nftw@plt+0x19d70>  // b.any
  41ca44:	tst	x3, #0x800000008
  41ca48:	b.ne	41ca68 <nftw@plt+0x19d78>  // b.any
  41ca4c:	tst	x3, #0x100000001000
  41ca50:	b.eq	41ca80 <nftw@plt+0x19d90>  // b.none
  41ca54:	add	x6, x6, #0x1
  41ca58:	sub	x5, x5, #0x1
  41ca5c:	b	41ca1c <nftw@plt+0x19d2c>
  41ca60:	add	x7, x7, #0x1
  41ca64:	b	41ca58 <nftw@plt+0x19d68>
  41ca68:	add	x4, x4, #0x1
  41ca6c:	cmp	x4, #0x2
  41ca70:	b.ne	41ca58 <nftw@plt+0x19d68>  // b.any
  41ca74:	ldrb	w3, [x5]
  41ca78:	cmp	w3, w8
  41ca7c:	b.eq	41ca58 <nftw@plt+0x19d68>  // b.none
  41ca80:	mov	w0, #0x0                   	// #0
  41ca84:	b	41cb14 <nftw@plt+0x19e24>
  41ca88:	cmp	x4, #0x2
  41ca8c:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
  41ca90:	b.hi	41ca80 <nftw@plt+0x19d90>  // b.pmore
  41ca94:	cmp	x7, #0x1
  41ca98:	b.hi	41ca80 <nftw@plt+0x19d90>  // b.pmore
  41ca9c:	cbz	x7, 41caec <nftw@plt+0x19dfc>
  41caa0:	ldrb	w3, [x0, #1163]
  41caa4:	cbz	w3, 41ca80 <nftw@plt+0x19d90>
  41caa8:	ldrb	w3, [x0, #1120]
  41caac:	cbz	w3, 41cae4 <nftw@plt+0x19df4>
  41cab0:	ldr	w0, [x0, #1116]
  41cab4:	cmp	w0, #0xe
  41cab8:	b.le	41cae4 <nftw@plt+0x19df4>
  41cabc:	ldrb	w0, [x1]
  41cac0:	cmp	w0, #0x69
  41cac4:	b.ne	41cae4 <nftw@plt+0x19df4>  // b.any
  41cac8:	cmp	x2, #0x1
  41cacc:	b.eq	41ca80 <nftw@plt+0x19d90>  // b.none
  41cad0:	cmp	x2, #0x2
  41cad4:	b.ne	41cae4 <nftw@plt+0x19df4>  // b.any
  41cad8:	ldrb	w0, [x1, #1]
  41cadc:	cmp	w0, #0x6c
  41cae0:	b.eq	41ca80 <nftw@plt+0x19d90>  // b.none
  41cae4:	mov	w1, #0x2000                	// #8192
  41cae8:	b	41caf0 <nftw@plt+0x19e00>
  41caec:	mov	w1, #0x0                   	// #0
  41caf0:	cmp	x6, #0x0
  41caf4:	cset	w0, ne  // ne = any
  41caf8:	orr	w0, w1, w0, lsl #12
  41cafc:	cbz	x4, 41cb18 <nftw@plt+0x19e28>
  41cb00:	cmp	x4, #0x1
  41cb04:	mov	w1, #0x20                  	// #32
  41cb08:	mov	w2, #0x40                  	// #64
  41cb0c:	csel	w1, w1, w2, eq  // eq = none
  41cb10:	orr	w0, w0, w1
  41cb14:	ret
  41cb18:	mov	w1, #0x10                  	// #16
  41cb1c:	b	41cb10 <nftw@plt+0x19e20>
  41cb20:	cmp	x1, #0x40
  41cb24:	ldp	x2, x3, [x0]
  41cb28:	b.ls	41cb5c <nftw@plt+0x19e6c>  // b.plast
  41cb2c:	sub	x1, x1, #0x40
  41cb30:	cmp	x1, #0x3f
  41cb34:	b.hi	41cb44 <nftw@plt+0x19e54>  // b.pmore
  41cb38:	mov	x4, #0xffffffffffffffff    	// #-1
  41cb3c:	lsl	x1, x4, x1
  41cb40:	bic	x2, x2, x1
  41cb44:	stp	x2, x3, [x0]
  41cb48:	ldp	x2, x3, [x0]
  41cb4c:	stp	x2, x3, [x8]
  41cb50:	ldr	x0, [x0, #16]
  41cb54:	str	x0, [x8, #16]
  41cb58:	ret
  41cb5c:	b.eq	41cb6c <nftw@plt+0x19e7c>  // b.none
  41cb60:	mov	x2, #0xffffffffffffffff    	// #-1
  41cb64:	lsl	x1, x2, x1
  41cb68:	bic	x3, x3, x1
  41cb6c:	mov	x2, #0x0                   	// #0
  41cb70:	b	41cb44 <nftw@plt+0x19e54>
  41cb74:	stp	x29, x30, [sp, #-80]!
  41cb78:	mov	x5, x0
  41cb7c:	mov	x7, x8
  41cb80:	mov	x29, sp
  41cb84:	ldp	x6, x9, [x0]
  41cb88:	add	x8, sp, #0x30
  41cb8c:	negs	x2, x9
  41cb90:	neg	x0, x6
  41cb94:	csinv	x0, x0, x6, eq  // eq = none
  41cb98:	stp	x0, x2, [x5]
  41cb9c:	ldp	x2, x3, [x5]
  41cba0:	stp	x2, x3, [sp, #16]
  41cba4:	ldr	x0, [x5, #16]
  41cba8:	str	x0, [sp, #32]
  41cbac:	add	x0, sp, #0x10
  41cbb0:	bl	41cb20 <nftw@plt+0x19e30>
  41cbb4:	ldp	x1, x0, [sp, #48]
  41cbb8:	stp	x1, x0, [x5]
  41cbbc:	ldr	x0, [sp, #64]
  41cbc0:	str	x0, [x5, #16]
  41cbc4:	ldr	x2, [x5, #8]
  41cbc8:	ands	w0, w0, #0xff
  41cbcc:	b.ne	41cc08 <nftw@plt+0x19f18>  // b.any
  41cbd0:	cmp	x9, x2
  41cbd4:	b.ne	41cbec <nftw@plt+0x19efc>  // b.any
  41cbd8:	cmp	x6, x1
  41cbdc:	b.ne	41cbec <nftw@plt+0x19efc>  // b.any
  41cbe0:	orr	x6, x6, x9
  41cbe4:	cmp	x6, #0x0
  41cbe8:	cset	w0, ne  // ne = any
  41cbec:	strb	w0, [x5, #17]
  41cbf0:	ldp	x0, x1, [x5]
  41cbf4:	stp	x0, x1, [x7]
  41cbf8:	ldr	x0, [x5, #16]
  41cbfc:	str	x0, [x7, #16]
  41cc00:	ldp	x29, x30, [sp], #80
  41cc04:	ret
  41cc08:	mov	w0, #0x0                   	// #0
  41cc0c:	b	41cbec <nftw@plt+0x19efc>
  41cc10:	and	x4, x1, #0xffffffff
  41cc14:	and	x2, x0, #0xffffffff
  41cc18:	lsr	x1, x1, #32
  41cc1c:	lsr	x0, x0, #32
  41cc20:	mul	x3, x0, x1
  41cc24:	mul	x1, x2, x1
  41cc28:	mul	x2, x2, x4
  41cc2c:	mul	x0, x4, x0
  41cc30:	lsl	x4, x1, #32
  41cc34:	adds	x2, x2, x4
  41cc38:	b.cs	41cc7c <nftw@plt+0x19f8c>  // b.hs, b.nlast
  41cc3c:	str	x3, [x8]
  41cc40:	lsl	x3, x0, #32
  41cc44:	adds	x2, x2, x3
  41cc48:	str	x2, [x8, #8]
  41cc4c:	b.cc	41cc5c <nftw@plt+0x19f6c>  // b.lo, b.ul, b.last
  41cc50:	ldr	x2, [x8]
  41cc54:	add	x2, x2, #0x1
  41cc58:	str	x2, [x8]
  41cc5c:	lsr	x0, x0, #32
  41cc60:	add	x1, x0, x1, lsr #32
  41cc64:	ldr	x0, [x8]
  41cc68:	add	x1, x0, x1
  41cc6c:	mov	w0, #0x1                   	// #1
  41cc70:	str	x1, [x8]
  41cc74:	strh	w0, [x8, #16]
  41cc78:	ret
  41cc7c:	add	x3, x3, #0x1
  41cc80:	b	41cc3c <nftw@plt+0x19f4c>
  41cc84:	stp	x29, x30, [sp, #-80]!
  41cc88:	mov	x29, sp
  41cc8c:	stp	x19, x20, [sp, #16]
  41cc90:	mov	x19, x0
  41cc94:	stp	x21, x22, [sp, #32]
  41cc98:	mov	x22, x8
  41cc9c:	stp	x23, x24, [sp, #48]
  41cca0:	mov	w24, w1
  41cca4:	str	x25, [sp, #64]
  41cca8:	strh	wzr, [x8, #16]
  41ccac:	ldrb	w1, [x0, #26]
  41ccb0:	stp	xzr, xzr, [x8]
  41ccb4:	add	w1, w1, #0x1
  41ccb8:	strb	w1, [x0, #26]
  41ccbc:	bl	42b37c <nftw@plt+0x2868c>
  41ccc0:	mov	x20, x0
  41ccc4:	ldrb	w0, [x0, #4]
  41ccc8:	cmp	w0, #0x14
  41cccc:	b.ne	41cdc0 <nftw@plt+0x1a0d0>  // b.any
  41ccd0:	mov	x0, x19
  41ccd4:	bl	42b37c <nftw@plt+0x2868c>
  41ccd8:	mov	x20, x0
  41ccdc:	mov	w25, #0x1                   	// #1
  41cce0:	ldrb	w0, [x20, #4]
  41cce4:	cmp	w0, #0x3e
  41cce8:	b.eq	41cdc8 <nftw@plt+0x1a0d8>  // b.none
  41ccec:	cmp	w0, #0x44
  41ccf0:	b.ne	41cdd0 <nftw@plt+0x1a0e0>  // b.any
  41ccf4:	mov	w23, #0x1                   	// #1
  41ccf8:	ldr	w0, [x20, #8]
  41ccfc:	sub	w0, w0, #0x1
  41cd00:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41cd04:	ldr	x1, [x20, #16]
  41cd08:	mov	x21, x0
  41cd0c:	ldr	w2, [x20, #8]
  41cd10:	add	x1, x1, #0x1
  41cd14:	sub	w2, w2, #0x2
  41cd18:	bl	4025d0 <memcpy@plt>
  41cd1c:	ldr	w0, [x20, #8]
  41cd20:	mov	w2, w23
  41cd24:	sub	w0, w0, #0x2
  41cd28:	strb	wzr, [x21, x0]
  41cd2c:	ldr	x20, [x20, #8]
  41cd30:	mov	w3, w24
  41cd34:	mov	x1, x21
  41cd38:	mov	x0, x19
  41cd3c:	bl	421520 <nftw@plt+0x1e830>
  41cd40:	tst	w0, #0xff
  41cd44:	b.eq	41cd50 <nftw@plt+0x1a060>  // b.none
  41cd48:	mov	x0, #0x1                   	// #1
  41cd4c:	str	x0, [x22, #8]
  41cd50:	mov	x0, x21
  41cd54:	bl	402a80 <free@plt>
  41cd58:	cbz	w25, 41cd94 <nftw@plt+0x1a0a4>
  41cd5c:	ldr	x0, [x19, #448]
  41cd60:	ldurb	w0, [x0, #-20]
  41cd64:	cmp	w0, #0x16
  41cd68:	b.eq	41cd94 <nftw@plt+0x1a0a4>  // b.none
  41cd6c:	mov	x0, x19
  41cd70:	bl	42b37c <nftw@plt+0x2868c>
  41cd74:	ldrb	w0, [x0, #4]
  41cd78:	cmp	w0, #0x15
  41cd7c:	b.eq	41cd94 <nftw@plt+0x1a0a4>  // b.none
  41cd80:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41cd84:	mov	x0, x19
  41cd88:	add	x2, x2, #0xd4c
  41cd8c:	mov	w1, #0x3                   	// #3
  41cd90:	bl	41c014 <nftw@plt+0x19324>
  41cd94:	cbz	x20, 41cd9c <nftw@plt+0x1a0ac>
  41cd98:	str	x20, [x19, #432]
  41cd9c:	ldrb	w0, [x19, #26]
  41cda0:	sub	w0, w0, #0x1
  41cda4:	strb	w0, [x19, #26]
  41cda8:	ldp	x19, x20, [sp, #16]
  41cdac:	ldp	x21, x22, [sp, #32]
  41cdb0:	ldp	x23, x24, [sp, #48]
  41cdb4:	ldr	x25, [sp, #64]
  41cdb8:	ldp	x29, x30, [sp], #80
  41cdbc:	ret
  41cdc0:	mov	w25, #0x0                   	// #0
  41cdc4:	b	41cce0 <nftw@plt+0x19ff0>
  41cdc8:	mov	w23, #0x0                   	// #0
  41cdcc:	b	41ccf8 <nftw@plt+0x1a008>
  41cdd0:	cmp	w0, #0x3
  41cdd4:	b.ne	41cdf4 <nftw@plt+0x1a104>  // b.any
  41cdd8:	mov	x0, x19
  41cddc:	bl	41be0c <nftw@plt+0x1911c>
  41cde0:	mov	x21, x0
  41cde4:	cbnz	x0, 41ce0c <nftw@plt+0x1a11c>
  41cde8:	cbz	w25, 41cd9c <nftw@plt+0x1a0ac>
  41cdec:	mov	x20, #0x0                   	// #0
  41cdf0:	b	41cd5c <nftw@plt+0x1a06c>
  41cdf4:	mov	x0, x19
  41cdf8:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41cdfc:	mov	w1, #0x3                   	// #3
  41ce00:	add	x2, x2, #0xd18
  41ce04:	bl	41c014 <nftw@plt+0x19324>
  41ce08:	b	41cde8 <nftw@plt+0x1a0f8>
  41ce0c:	mov	x20, #0x0                   	// #0
  41ce10:	mov	w2, #0x1                   	// #1
  41ce14:	b	41cd30 <nftw@plt+0x1a040>
  41ce18:	sub	w3, w2, #0x41
  41ce1c:	cmp	x2, #0x41
  41ce20:	lsr	x3, x0, x3
  41ce24:	sub	w0, w2, #0x1
  41ce28:	mvn	x3, x3
  41ce2c:	lsr	x0, x1, x0
  41ce30:	mvn	x0, x0
  41ce34:	and	w3, w3, #0x1
  41ce38:	and	w0, w0, #0x1
  41ce3c:	csel	w0, w0, w3, cc  // cc = lo, ul, last
  41ce40:	ret
  41ce44:	stp	x29, x30, [sp, #-80]!
  41ce48:	mov	x5, x0
  41ce4c:	mov	x7, x1
  41ce50:	mov	x29, sp
  41ce54:	ldp	x4, x1, [x0]
  41ce58:	mov	x9, x8
  41ce5c:	ldrb	w0, [x0, #16]
  41ce60:	mov	x6, x2
  41ce64:	cbnz	w0, 41cf20 <nftw@plt+0x1a230>
  41ce68:	mov	x2, x7
  41ce6c:	mov	x0, x4
  41ce70:	bl	41ce18 <nftw@plt+0x1a128>
  41ce74:	and	x3, x0, #0xff
  41ce78:	eor	x3, x3, #0x1
  41ce7c:	neg	x3, x3
  41ce80:	cmp	x7, x6
  41ce84:	b.ls	41cf40 <nftw@plt+0x1a250>  // b.plast
  41ce88:	cmp	x7, #0x3f
  41ce8c:	b.hi	41cf28 <nftw@plt+0x1a238>  // b.pmore
  41ce90:	lsl	x0, x3, x7
  41ce94:	mov	x4, x3
  41ce98:	orr	x1, x1, x0
  41ce9c:	cmp	x6, #0x3f
  41cea0:	b.ls	41ceb0 <nftw@plt+0x1a1c0>  // b.plast
  41cea4:	mov	x1, x4
  41cea8:	sub	x6, x6, #0x40
  41ceac:	mov	x4, x3
  41ceb0:	cbz	x6, 41ced4 <nftw@plt+0x1a1e4>
  41ceb4:	mov	w0, #0x40                  	// #64
  41ceb8:	sub	w0, w0, w6
  41cebc:	lsr	x1, x1, x6
  41cec0:	lsl	x2, x4, x0
  41cec4:	orr	x1, x1, x2
  41cec8:	lsr	x4, x4, x6
  41cecc:	lsl	x3, x3, x0
  41ced0:	orr	x4, x4, x3
  41ced4:	stp	x4, x1, [x5]
  41ced8:	add	x8, sp, #0x30
  41cedc:	ldp	x0, x1, [x5]
  41cee0:	stp	x0, x1, [sp, #16]
  41cee4:	ldr	x0, [x5, #16]
  41cee8:	mov	x1, x7
  41ceec:	str	x0, [sp, #32]
  41cef0:	add	x0, sp, #0x10
  41cef4:	bl	41cb20 <nftw@plt+0x19e30>
  41cef8:	ldp	x0, x1, [sp, #48]
  41cefc:	stp	x0, x1, [x5]
  41cf00:	ldr	x2, [sp, #64]
  41cf04:	str	x2, [x5, #16]
  41cf08:	strb	wzr, [x5, #17]
  41cf0c:	stp	x0, x1, [x9]
  41cf10:	ldr	x0, [x5, #16]
  41cf14:	str	x0, [x9, #16]
  41cf18:	ldp	x29, x30, [sp], #80
  41cf1c:	ret
  41cf20:	mov	x3, #0x0                   	// #0
  41cf24:	b	41ce80 <nftw@plt+0x1a190>
  41cf28:	cmp	x7, #0x7f
  41cf2c:	b.hi	41ce9c <nftw@plt+0x1a1ac>  // b.pmore
  41cf30:	sub	w0, w7, #0x40
  41cf34:	lsl	x0, x3, x0
  41cf38:	orr	x4, x4, x0
  41cf3c:	b	41ce9c <nftw@plt+0x1a1ac>
  41cf40:	mov	x1, x3
  41cf44:	mov	x4, x3
  41cf48:	b	41ced4 <nftw@plt+0x1a1e4>
  41cf4c:	mov	x14, x8
  41cf50:	mov	x10, x0
  41cf54:	cmp	x2, x1
  41cf58:	ldp	x13, x15, [x0]
  41cf5c:	b.cc	41cfa4 <nftw@plt+0x1a2b4>  // b.lo, b.ul, b.last
  41cf60:	ldrb	w11, [x0, #16]
  41cf64:	cbnz	w11, 41cf9c <nftw@plt+0x1a2ac>
  41cf68:	orr	x13, x13, x15
  41cf6c:	cmp	x13, #0x0
  41cf70:	cset	w0, ne  // ne = any
  41cf74:	mov	x18, #0x0                   	// #0
  41cf78:	mov	x12, #0x0                   	// #0
  41cf7c:	stp	x12, x18, [x10]
  41cf80:	strb	w11, [x10, #16]
  41cf84:	strb	w0, [x10, #17]
  41cf88:	ldp	x0, x1, [x10]
  41cf8c:	stp	x0, x1, [x14]
  41cf90:	ldr	x0, [x10, #16]
  41cf94:	str	x0, [x14, #16]
  41cf98:	ret
  41cf9c:	mov	w0, #0x0                   	// #0
  41cfa0:	b	41cf74 <nftw@plt+0x1a284>
  41cfa4:	stp	x29, x30, [sp, #-112]!
  41cfa8:	mov	x6, x1
  41cfac:	mov	x5, x2
  41cfb0:	mov	x29, sp
  41cfb4:	cmp	x2, #0x3f
  41cfb8:	b.ls	41d070 <nftw@plt+0x1a380>  // b.plast
  41cfbc:	sub	x2, x2, #0x40
  41cfc0:	mov	x0, x15
  41cfc4:	mov	x1, #0x0                   	// #0
  41cfc8:	cbz	x2, 41cfe0 <nftw@plt+0x1a2f0>
  41cfcc:	neg	w3, w2
  41cfd0:	lsl	x0, x0, x2
  41cfd4:	lsr	x3, x1, x3
  41cfd8:	orr	x0, x3, x0
  41cfdc:	lsl	x1, x1, x2
  41cfe0:	stp	x0, x1, [x10]
  41cfe4:	add	x8, sp, #0x30
  41cfe8:	ldp	x0, x1, [x10]
  41cfec:	stp	x0, x1, [sp, #16]
  41cff0:	ldr	x0, [x10, #16]
  41cff4:	mov	x1, x6
  41cff8:	str	x0, [sp, #32]
  41cffc:	add	x0, sp, #0x10
  41d000:	bl	41cb20 <nftw@plt+0x19e30>
  41d004:	ldp	x12, x0, [sp, #48]
  41d008:	ldr	x11, [sp, #64]
  41d00c:	stp	x12, x0, [x10]
  41d010:	str	x11, [x10, #16]
  41d014:	ands	w11, w11, #0xff
  41d018:	mov	x18, x0
  41d01c:	b.ne	41d084 <nftw@plt+0x1a394>  // b.any
  41d020:	add	x0, sp, #0x30
  41d024:	add	x8, sp, #0x58
  41d028:	mov	x2, x5
  41d02c:	mov	x1, x6
  41d030:	bl	41ce44 <nftw@plt+0x1a154>
  41d034:	ldr	x0, [sp, #96]
  41d038:	cmp	x0, x15
  41d03c:	b.ne	41d07c <nftw@plt+0x1a38c>  // b.any
  41d040:	ldr	x0, [sp, #88]
  41d044:	cmp	x0, x13
  41d048:	cset	w0, ne  // ne = any
  41d04c:	stp	x12, x18, [x10]
  41d050:	strb	w11, [x10, #16]
  41d054:	strb	w0, [x10, #17]
  41d058:	ldp	x0, x1, [x10]
  41d05c:	stp	x0, x1, [x14]
  41d060:	ldr	x0, [x10, #16]
  41d064:	str	x0, [x14, #16]
  41d068:	ldp	x29, x30, [sp], #112
  41d06c:	ret
  41d070:	mov	x1, x15
  41d074:	mov	x0, x13
  41d078:	b	41cfc8 <nftw@plt+0x1a2d8>
  41d07c:	mov	w0, #0x1                   	// #1
  41d080:	b	41d04c <nftw@plt+0x1a35c>
  41d084:	mov	w0, #0x0                   	// #0
  41d088:	b	41d04c <nftw@plt+0x1a35c>
  41d08c:	stp	x29, x30, [sp, #-160]!
  41d090:	cmp	w3, #0x5
  41d094:	mov	x29, sp
  41d098:	stp	x19, x20, [sp, #16]
  41d09c:	mov	x19, x1
  41d0a0:	stp	x21, x22, [sp, #32]
  41d0a4:	ldrb	w21, [x2, #16]
  41d0a8:	stp	x23, x24, [sp, #48]
  41d0ac:	mov	x23, x8
  41d0b0:	ldp	x9, x7, [x1]
  41d0b4:	ldrb	w1, [x1, #16]
  41d0b8:	ldp	x20, x22, [x2]
  41d0bc:	ldr	x10, [x0, #1208]
  41d0c0:	b.eq	41d1f0 <nftw@plt+0x1a500>  // b.none
  41d0c4:	mov	x24, x2
  41d0c8:	mov	w11, w3
  41d0cc:	b.hi	41d114 <nftw@plt+0x1a424>  // b.pmore
  41d0d0:	cmp	w3, #0x4
  41d0d4:	b.eq	41d2bc <nftw@plt+0x1a5cc>  // b.none
  41d0d8:	ldrb	w1, [x0, #1154]
  41d0dc:	cbz	w1, 41d100 <nftw@plt+0x1a410>
  41d0e0:	ldrb	w1, [x0, #1152]
  41d0e4:	cbz	w1, 41d0f0 <nftw@plt+0x1a400>
  41d0e8:	ldr	w1, [x0, #28]
  41d0ec:	cbnz	w1, 41d100 <nftw@plt+0x1a410>
  41d0f0:	adrp	x2, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d0f4:	mov	w1, #0x15                  	// #21
  41d0f8:	add	x2, x2, #0xd70
  41d0fc:	bl	41c0f0 <nftw@plt+0x19400>
  41d100:	ldp	x0, x1, [x24]
  41d104:	stp	x0, x1, [x19]
  41d108:	ldr	x0, [x24, #16]
  41d10c:	str	x0, [x19, #16]
  41d110:	b	41d1d0 <nftw@plt+0x1a4e0>
  41d114:	sub	w1, w3, #0xc
  41d118:	cmp	w1, #0x1
  41d11c:	b.hi	41d0d8 <nftw@plt+0x1a3e8>  // b.pmore
  41d120:	cbnz	w21, 41d184 <nftw@plt+0x1a494>
  41d124:	mov	x2, x10
  41d128:	mov	x1, x22
  41d12c:	mov	x0, x20
  41d130:	bl	41ce18 <nftw@plt+0x1a128>
  41d134:	tst	w0, #0xff
  41d138:	b.ne	41d184 <nftw@plt+0x1a494>  // b.any
  41d13c:	cmp	w11, #0xd
  41d140:	add	x8, sp, #0x60
  41d144:	cset	w11, ne  // ne = any
  41d148:	ldp	x0, x1, [x24]
  41d14c:	add	w11, w11, #0xc
  41d150:	stp	x0, x1, [sp, #64]
  41d154:	mov	x1, x10
  41d158:	ldr	x0, [x24, #16]
  41d15c:	str	x0, [sp, #80]
  41d160:	add	x0, sp, #0x40
  41d164:	bl	41cb74 <nftw@plt+0x19e84>
  41d168:	ldr	x20, [sp, #96]
  41d16c:	str	x20, [x24]
  41d170:	ldr	x0, [sp, #104]
  41d174:	str	x0, [x24, #8]
  41d178:	ldr	x22, [x24, #8]
  41d17c:	ldr	x0, [sp, #112]
  41d180:	str	x0, [x24, #16]
  41d184:	ldp	x2, x3, [x19]
  41d188:	stp	x2, x3, [sp, #64]
  41d18c:	cmp	x20, #0x0
  41d190:	ldr	x0, [x19, #16]
  41d194:	str	x0, [sp, #80]
  41d198:	csinv	x22, x22, xzr, eq  // eq = none
  41d19c:	add	x8, sp, #0x60
  41d1a0:	cmp	w11, #0xd
  41d1a4:	mov	x2, x22
  41d1a8:	mov	x1, x10
  41d1ac:	add	x0, sp, #0x40
  41d1b0:	b.ne	41d1e8 <nftw@plt+0x1a4f8>  // b.any
  41d1b4:	bl	41cf4c <nftw@plt+0x1a25c>
  41d1b8:	ldp	x20, x0, [sp, #96]
  41d1bc:	ldr	x21, [sp, #112]
  41d1c0:	str	x21, [x19, #16]
  41d1c4:	stp	x20, x0, [x19]
  41d1c8:	and	w21, w21, #0xff
  41d1cc:	mov	x22, x0
  41d1d0:	stp	x20, x22, [x19]
  41d1d4:	strb	w21, [x19, #16]
  41d1d8:	ldp	x0, x1, [x19]
  41d1dc:	stp	x0, x1, [x23]
  41d1e0:	ldr	x0, [x19, #16]
  41d1e4:	b	41d2a4 <nftw@plt+0x1a5b4>
  41d1e8:	bl	41ce44 <nftw@plt+0x1a154>
  41d1ec:	b	41d1b8 <nftw@plt+0x1a4c8>
  41d1f0:	subs	x0, x7, x22
  41d1f4:	strb	wzr, [sp, #153]
  41d1f8:	cmp	x7, x22
  41d1fc:	add	x8, sp, #0x60
  41d200:	sbc	x2, x9, x20
  41d204:	stp	x2, x0, [sp, #136]
  41d208:	cmp	w1, #0x0
  41d20c:	csinc	w21, w21, wzr, eq  // eq = none
  41d210:	strb	w21, [sp, #152]
  41d214:	ldp	x0, x1, [sp, #136]
  41d218:	stp	x0, x1, [sp, #64]
  41d21c:	ldr	x0, [sp, #152]
  41d220:	mov	x1, x10
  41d224:	str	x0, [sp, #80]
  41d228:	add	x0, sp, #0x40
  41d22c:	bl	41cb20 <nftw@plt+0x19e30>
  41d230:	ldp	x0, x1, [sp, #96]
  41d234:	stp	x0, x1, [sp, #136]
  41d238:	ldr	x1, [sp, #112]
  41d23c:	str	x1, [sp, #152]
  41d240:	ldr	x8, [sp, #144]
  41d244:	mov	x6, x0
  41d248:	ands	w4, w1, #0xff
  41d24c:	ubfx	w0, w1, #8, #8
  41d250:	b.ne	41d294 <nftw@plt+0x1a5a4>  // b.any
  41d254:	mov	x1, x7
  41d258:	mov	x2, x10
  41d25c:	mov	x0, x9
  41d260:	bl	41ce18 <nftw@plt+0x1a128>
  41d264:	and	w5, w0, #0xff
  41d268:	mov	x1, x22
  41d26c:	mov	x0, x20
  41d270:	bl	41ce18 <nftw@plt+0x1a128>
  41d274:	cmp	w5, w0, uxtb
  41d278:	b.eq	41d290 <nftw@plt+0x1a5a0>  // b.none
  41d27c:	mov	x1, x8
  41d280:	mov	x0, x6
  41d284:	bl	41ce18 <nftw@plt+0x1a128>
  41d288:	and	w1, w0, #0xff
  41d28c:	eor	w4, w1, w5
  41d290:	mov	w0, w4
  41d294:	strb	w0, [sp, #153]
  41d298:	ldp	x0, x1, [sp, #136]
  41d29c:	stp	x0, x1, [x23]
  41d2a0:	ldr	x0, [sp, #152]
  41d2a4:	ldp	x19, x20, [sp, #16]
  41d2a8:	ldp	x21, x22, [sp, #32]
  41d2ac:	str	x0, [x23, #16]
  41d2b0:	ldp	x23, x24, [sp, #48]
  41d2b4:	ldp	x29, x30, [sp], #160
  41d2b8:	ret
  41d2bc:	adds	x2, x7, x22
  41d2c0:	add	x0, x9, x20
  41d2c4:	cset	x3, cs  // cs = hs, nlast
  41d2c8:	cmp	w1, #0x0
  41d2cc:	add	x0, x0, x3
  41d2d0:	stp	x0, x2, [sp, #136]
  41d2d4:	csinc	w21, w21, wzr, eq  // eq = none
  41d2d8:	strb	w21, [sp, #152]
  41d2dc:	add	x8, sp, #0x60
  41d2e0:	strb	wzr, [sp, #153]
  41d2e4:	ldp	x0, x1, [sp, #136]
  41d2e8:	stp	x0, x1, [sp, #64]
  41d2ec:	ldr	x0, [sp, #152]
  41d2f0:	mov	x1, x10
  41d2f4:	str	x0, [sp, #80]
  41d2f8:	add	x0, sp, #0x40
  41d2fc:	bl	41cb20 <nftw@plt+0x19e30>
  41d300:	ldp	x0, x1, [sp, #96]
  41d304:	stp	x0, x1, [sp, #136]
  41d308:	ldr	x1, [sp, #112]
  41d30c:	str	x1, [sp, #152]
  41d310:	ldr	x8, [sp, #144]
  41d314:	mov	x5, x0
  41d318:	ands	w4, w1, #0xff
  41d31c:	ubfx	w0, w1, #8, #8
  41d320:	b.ne	41d294 <nftw@plt+0x1a5a4>  // b.any
  41d324:	mov	x1, x7
  41d328:	mov	x2, x10
  41d32c:	mov	x0, x9
  41d330:	bl	41ce18 <nftw@plt+0x1a128>
  41d334:	and	w6, w0, #0xff
  41d338:	mov	x1, x22
  41d33c:	mov	x0, x20
  41d340:	bl	41ce18 <nftw@plt+0x1a128>
  41d344:	and	w7, w0, #0xff
  41d348:	cmp	w6, w0, uxtb
  41d34c:	b.ne	41d290 <nftw@plt+0x1a5a0>  // b.any
  41d350:	mov	x1, x8
  41d354:	mov	x0, x5
  41d358:	bl	41ce18 <nftw@plt+0x1a128>
  41d35c:	and	w1, w0, #0xff
  41d360:	eor	w4, w1, w7
  41d364:	b	41d290 <nftw@plt+0x1a5a0>
  41d368:	mov	x9, x0
  41d36c:	mov	x8, x1
  41d370:	mov	x7, x3
  41d374:	tst	w2, #0xff
  41d378:	b.ne	41d3dc <nftw@plt+0x1a6ec>  // b.any
  41d37c:	and	w5, w5, #0xff
  41d380:	cbnz	w5, 41d3dc <nftw@plt+0x1a6ec>
  41d384:	stp	x29, x30, [sp, #-16]!
  41d388:	mov	x2, x6
  41d38c:	mov	x29, sp
  41d390:	bl	41ce18 <nftw@plt+0x1a128>
  41d394:	and	w5, w0, #0xff
  41d398:	mov	x1, x4
  41d39c:	mov	x0, x7
  41d3a0:	bl	41ce18 <nftw@plt+0x1a128>
  41d3a4:	cmp	w5, w0, uxtb
  41d3a8:	b.ne	41d3c0 <nftw@plt+0x1a6d0>  // b.any
  41d3ac:	cmp	x9, x7
  41d3b0:	b.hi	41d3cc <nftw@plt+0x1a6dc>  // b.pmore
  41d3b4:	b.ne	41d3d4 <nftw@plt+0x1a6e4>  // b.any
  41d3b8:	cmp	x8, x4
  41d3bc:	cset	w5, cs  // cs = hs, nlast
  41d3c0:	mov	w0, w5
  41d3c4:	ldp	x29, x30, [sp], #16
  41d3c8:	ret
  41d3cc:	mov	w5, #0x1                   	// #1
  41d3d0:	b	41d3c0 <nftw@plt+0x1a6d0>
  41d3d4:	mov	w5, #0x0                   	// #0
  41d3d8:	b	41d3c0 <nftw@plt+0x1a6d0>
  41d3dc:	cmp	x9, x7
  41d3e0:	b.hi	41d3f8 <nftw@plt+0x1a708>  // b.pmore
  41d3e4:	b.ne	41d400 <nftw@plt+0x1a710>  // b.any
  41d3e8:	cmp	x8, x4
  41d3ec:	cset	w5, cs  // cs = hs, nlast
  41d3f0:	mov	w0, w5
  41d3f4:	ret
  41d3f8:	mov	w5, #0x1                   	// #1
  41d3fc:	b	41d3f0 <nftw@plt+0x1a700>
  41d400:	mov	w5, #0x0                   	// #0
  41d404:	b	41d3f0 <nftw@plt+0x1a700>
  41d408:	b	41c594 <nftw@plt+0x198a4>
  41d40c:	b	41ca08 <nftw@plt+0x19d18>
  41d410:	cmp	w0, #0x4a
  41d414:	b.eq	41d440 <nftw@plt+0x1a750>  // b.none
  41d418:	cmp	w0, #0x4b
  41d41c:	b.eq	41d448 <nftw@plt+0x1a758>  // b.none
  41d420:	cmp	w0, #0x4c
  41d424:	b.eq	41d450 <nftw@plt+0x1a760>  // b.none
  41d428:	cmp	w0, #0x4d
  41d42c:	b.eq	41d458 <nftw@plt+0x1a768>  // b.none
  41d430:	cmp	w0, #0x4e
  41d434:	mov	w1, #0x42                  	// #66
  41d438:	csel	w0, w0, w1, ne  // ne = any
  41d43c:	ret
  41d440:	mov	w0, #0x3e                  	// #62
  41d444:	b	41d43c <nftw@plt+0x1a74c>
  41d448:	mov	w0, #0x3f                  	// #63
  41d44c:	b	41d43c <nftw@plt+0x1a74c>
  41d450:	mov	w0, #0x40                  	// #64
  41d454:	b	41d43c <nftw@plt+0x1a74c>
  41d458:	mov	w0, #0x41                  	// #65
  41d45c:	b	41d43c <nftw@plt+0x1a74c>
  41d460:	cmp	w0, #0x3e
  41d464:	b.eq	41d490 <nftw@plt+0x1a7a0>  // b.none
  41d468:	cmp	w0, #0x3f
  41d46c:	b.eq	41d498 <nftw@plt+0x1a7a8>  // b.none
  41d470:	cmp	w0, #0x40
  41d474:	b.eq	41d4a0 <nftw@plt+0x1a7b0>  // b.none
  41d478:	cmp	w0, #0x41
  41d47c:	b.eq	41d4a8 <nftw@plt+0x1a7b8>  // b.none
  41d480:	cmp	w0, #0x42
  41d484:	mov	w1, #0x4e                  	// #78
  41d488:	csel	w0, w0, w1, ne  // ne = any
  41d48c:	ret
  41d490:	mov	w0, #0x4a                  	// #74
  41d494:	b	41d48c <nftw@plt+0x1a79c>
  41d498:	mov	w0, #0x4b                  	// #75
  41d49c:	b	41d48c <nftw@plt+0x1a79c>
  41d4a0:	mov	w0, #0x4c                  	// #76
  41d4a4:	b	41d48c <nftw@plt+0x1a79c>
  41d4a8:	mov	w0, #0x4d                  	// #77
  41d4ac:	b	41d48c <nftw@plt+0x1a79c>
  41d4b0:	cmp	w0, #0x45
  41d4b4:	b.eq	41d4e0 <nftw@plt+0x1a7f0>  // b.none
  41d4b8:	cmp	w0, #0x46
  41d4bc:	b.eq	41d4e8 <nftw@plt+0x1a7f8>  // b.none
  41d4c0:	cmp	w0, #0x47
  41d4c4:	b.eq	41d4f0 <nftw@plt+0x1a800>  // b.none
  41d4c8:	cmp	w0, #0x48
  41d4cc:	b.eq	41d4f8 <nftw@plt+0x1a808>  // b.none
  41d4d0:	cmp	w0, #0x49
  41d4d4:	mov	w1, #0x3c                  	// #60
  41d4d8:	csel	w0, w0, w1, ne  // ne = any
  41d4dc:	ret
  41d4e0:	mov	w0, #0x38                  	// #56
  41d4e4:	b	41d4dc <nftw@plt+0x1a7ec>
  41d4e8:	mov	w0, #0x39                  	// #57
  41d4ec:	b	41d4dc <nftw@plt+0x1a7ec>
  41d4f0:	mov	w0, #0x3a                  	// #58
  41d4f4:	b	41d4dc <nftw@plt+0x1a7ec>
  41d4f8:	mov	w0, #0x3b                  	// #59
  41d4fc:	b	41d4dc <nftw@plt+0x1a7ec>
  41d500:	cmp	w0, #0x38
  41d504:	b.eq	41d530 <nftw@plt+0x1a840>  // b.none
  41d508:	cmp	w0, #0x39
  41d50c:	b.eq	41d538 <nftw@plt+0x1a848>  // b.none
  41d510:	cmp	w0, #0x3a
  41d514:	b.eq	41d540 <nftw@plt+0x1a850>  // b.none
  41d518:	cmp	w0, #0x3b
  41d51c:	b.eq	41d548 <nftw@plt+0x1a858>  // b.none
  41d520:	cmp	w0, #0x3c
  41d524:	mov	w1, #0x49                  	// #73
  41d528:	csel	w0, w0, w1, ne  // ne = any
  41d52c:	ret
  41d530:	mov	w0, #0x45                  	// #69
  41d534:	b	41d52c <nftw@plt+0x1a83c>
  41d538:	mov	w0, #0x46                  	// #70
  41d53c:	b	41d52c <nftw@plt+0x1a83c>
  41d540:	mov	w0, #0x47                  	// #71
  41d544:	b	41d52c <nftw@plt+0x1a83c>
  41d548:	mov	w0, #0x48                  	// #72
  41d54c:	b	41d52c <nftw@plt+0x1a83c>
  41d550:	sub	w0, w0, #0x4a
  41d554:	cmp	w0, #0x4
  41d558:	cset	w0, ls  // ls = plast
  41d55c:	ret
  41d560:	sub	w0, w0, #0x45
  41d564:	cmp	w0, #0x4
  41d568:	cset	w0, ls  // ls = plast
  41d56c:	ret
  41d570:	ldr	w2, [x0, #8]
  41d574:	mov	x1, #0x0                   	// #0
  41d578:	ldr	x0, [x0, #16]
  41d57c:	cmp	w2, w1
  41d580:	b.ls	41d5a4 <nftw@plt+0x1a8b4>  // b.plast
  41d584:	ldrb	w3, [x0, x1]
  41d588:	cmp	w3, #0x27
  41d58c:	b.eq	41d5b4 <nftw@plt+0x1a8c4>  // b.none
  41d590:	add	x4, x1, #0x1
  41d594:	cmp	w3, #0x22
  41d598:	b.eq	41d5b4 <nftw@plt+0x1a8c4>  // b.none
  41d59c:	mov	x1, x4
  41d5a0:	b	41d57c <nftw@plt+0x1a88c>
  41d5a4:	cmp	w2, w1
  41d5a8:	b.ne	41d5b4 <nftw@plt+0x1a8c4>  // b.any
  41d5ac:	add	x0, x0, x1
  41d5b0:	ret
  41d5b4:	ldrb	w3, [x0, x1]
  41d5b8:	cbz	w2, 41d5cc <nftw@plt+0x1a8dc>
  41d5bc:	sub	w1, w2, #0x1
  41d5c0:	ldrb	w4, [x0, w1, uxtw]
  41d5c4:	cmp	w4, w3
  41d5c8:	b.ne	41d5d4 <nftw@plt+0x1a8e4>  // b.any
  41d5cc:	add	x0, x0, w2, uxtw
  41d5d0:	b	41d5b0 <nftw@plt+0x1a8c0>
  41d5d4:	mov	w2, w1
  41d5d8:	b	41d5b8 <nftw@plt+0x1a8c8>
  41d5dc:	stp	x29, x30, [sp, #-96]!
  41d5e0:	mov	x29, sp
  41d5e4:	stp	x19, x20, [sp, #16]
  41d5e8:	mov	x19, x0
  41d5ec:	stp	x21, x22, [sp, #32]
  41d5f0:	mov	w22, w3
  41d5f4:	stp	x23, x24, [sp, #48]
  41d5f8:	stp	x25, x26, [sp, #64]
  41d5fc:	mov	x25, x2
  41d600:	ldr	x5, [x1, #16]
  41d604:	str	x27, [sp, #80]
  41d608:	cbz	x2, 41d610 <nftw@plt+0x1a920>
  41d60c:	str	xzr, [x2]
  41d610:	ldr	w24, [x1, #8]
  41d614:	cmp	w24, #0x1
  41d618:	b.eq	41db8c <nftw@plt+0x1ae9c>  // b.none
  41d61c:	mov	x21, x5
  41d620:	ldrb	w0, [x21], #1
  41d624:	cmp	w0, #0x30
  41d628:	b.ne	41d73c <nftw@plt+0x1aa4c>  // b.any
  41d62c:	ldrb	w0, [x5, #1]
  41d630:	and	w0, w0, #0xffffffdf
  41d634:	and	w0, w0, #0xff
  41d638:	cmp	w0, #0x58
  41d63c:	b.ne	41d70c <nftw@plt+0x1aa1c>  // b.any
  41d640:	ldrb	w0, [x5, #2]
  41d644:	cmp	w0, #0x2e
  41d648:	b.eq	41d65c <nftw@plt+0x1a96c>  // b.none
  41d64c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41d650:	add	x1, x1, #0xae
  41d654:	ldrh	w1, [x1, w0, sxtw #1]
  41d658:	tbz	w1, #8, 41d6bc <nftw@plt+0x1a9cc>
  41d65c:	add	x21, x5, #0x2
  41d660:	mov	w23, #0x10                  	// #16
  41d664:	adrp	x27, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41d668:	adrp	x6, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  41d66c:	add	x27, x27, #0xae
  41d670:	add	x6, x6, #0xd9c
  41d674:	mov	w1, #0x0                   	// #0
  41d678:	mov	w4, #0x0                   	// #0
  41d67c:	mov	w20, #0x0                   	// #0
  41d680:	mov	w26, #0x0                   	// #0
  41d684:	mov	x3, x21
  41d688:	ldrb	w2, [x3], #1
  41d68c:	mov	x0, x2
  41d690:	ldrh	w2, [x27, x2, lsl #1]
  41d694:	tbnz	w2, #2, 41d6a4 <nftw@plt+0x1a9b4>
  41d698:	tbz	w2, #8, 41d764 <nftw@plt+0x1aa74>
  41d69c:	cmp	w23, #0x10
  41d6a0:	b.ne	41d764 <nftw@plt+0x1aa74>  // b.any
  41d6a4:	ldrb	w0, [x6, w0, sxtw]
  41d6a8:	mov	w1, #0x0                   	// #0
  41d6ac:	mov	w4, #0x1                   	// #1
  41d6b0:	cmp	w26, w0
  41d6b4:	csel	w26, w26, w0, cs  // cs = hs, nlast
  41d6b8:	b	41d754 <nftw@plt+0x1aa64>
  41d6bc:	cmp	w0, #0x27
  41d6c0:	b.ne	41d748 <nftw@plt+0x1aa58>  // b.any
  41d6c4:	ldrb	w0, [x19, #1166]
  41d6c8:	cbz	w0, 41d748 <nftw@plt+0x1aa58>
  41d6cc:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d6d0:	add	x4, x4, #0xe3a
  41d6d4:	mov	w2, w22
  41d6d8:	mov	x0, x19
  41d6dc:	mov	w3, #0x0                   	// #0
  41d6e0:	mov	w1, #0x3                   	// #3
  41d6e4:	bl	41c1d0 <nftw@plt+0x194e0>
  41d6e8:	mov	w20, #0x0                   	// #0
  41d6ec:	mov	w0, w20
  41d6f0:	ldp	x19, x20, [sp, #16]
  41d6f4:	ldp	x21, x22, [sp, #32]
  41d6f8:	ldp	x23, x24, [sp, #48]
  41d6fc:	ldp	x25, x26, [sp, #64]
  41d700:	ldr	x27, [sp, #80]
  41d704:	ldp	x29, x30, [sp], #96
  41d708:	ret
  41d70c:	cmp	w0, #0x42
  41d710:	b.ne	41d748 <nftw@plt+0x1aa58>  // b.any
  41d714:	ldrb	w1, [x5, #2]
  41d718:	sub	w0, w1, #0x30
  41d71c:	and	w0, w0, #0xff
  41d720:	cmp	w0, #0x1
  41d724:	b.hi	41d734 <nftw@plt+0x1aa44>  // b.pmore
  41d728:	add	x21, x5, #0x2
  41d72c:	mov	w23, #0x2                   	// #2
  41d730:	b	41d664 <nftw@plt+0x1a974>
  41d734:	cmp	w1, #0x27
  41d738:	b	41d6c0 <nftw@plt+0x1a9d0>
  41d73c:	mov	x21, x5
  41d740:	mov	w23, #0xa                   	// #10
  41d744:	b	41d664 <nftw@plt+0x1a974>
  41d748:	mov	w23, #0x8                   	// #8
  41d74c:	b	41d664 <nftw@plt+0x1a974>
  41d750:	mov	w1, #0x1                   	// #1
  41d754:	mov	x21, x3
  41d758:	b	41d684 <nftw@plt+0x1a994>
  41d75c:	mov	w20, #0x1                   	// #1
  41d760:	b	41d754 <nftw@plt+0x1aa64>
  41d764:	cmp	w0, #0x27
  41d768:	b.ne	41d784 <nftw@plt+0x1aa94>  // b.any
  41d76c:	ldrb	w2, [x19, #1166]
  41d770:	cbz	w2, 41dcfc <nftw@plt+0x1b00c>
  41d774:	cbz	w1, 41d750 <nftw@plt+0x1aa60>
  41d778:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d77c:	add	x4, x4, #0xe5f
  41d780:	b	41d6d4 <nftw@plt+0x1a9e4>
  41d784:	cmp	w0, #0x2e
  41d788:	b.ne	41d7c0 <nftw@plt+0x1aad0>  // b.any
  41d78c:	cbnz	w1, 41d7a4 <nftw@plt+0x1aab4>
  41d790:	ldrb	w0, [x3]
  41d794:	cmp	w0, #0x27
  41d798:	b.ne	41d7b0 <nftw@plt+0x1aac0>  // b.any
  41d79c:	ldrb	w0, [x19, #1166]
  41d7a0:	cbz	w0, 41d7b0 <nftw@plt+0x1aac0>
  41d7a4:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d7a8:	add	x4, x4, #0xe79
  41d7ac:	b	41d6d4 <nftw@plt+0x1a9e4>
  41d7b0:	cbz	w20, 41d75c <nftw@plt+0x1aa6c>
  41d7b4:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d7b8:	add	x4, x4, #0xea3
  41d7bc:	b	41d6d4 <nftw@plt+0x1a9e4>
  41d7c0:	cmp	w23, #0xa
  41d7c4:	b.hi	41dd04 <nftw@plt+0x1b014>  // b.pmore
  41d7c8:	and	w0, w0, #0xffffffdf
  41d7cc:	cmp	w0, #0x45
  41d7d0:	b.ne	41d800 <nftw@plt+0x1ab10>  // b.any
  41d7d4:	cbnz	w1, 41d7ec <nftw@plt+0x1aafc>
  41d7d8:	ldrb	w0, [x3]
  41d7dc:	cmp	w0, #0x27
  41d7e0:	b.ne	41d7f8 <nftw@plt+0x1ab08>  // b.any
  41d7e4:	ldrb	w0, [x19, #1166]
  41d7e8:	cbz	w0, 41d7f8 <nftw@plt+0x1ab08>
  41d7ec:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d7f0:	add	x4, x4, #0xec5
  41d7f4:	b	41d6d4 <nftw@plt+0x1a9e4>
  41d7f8:	mov	x21, x3
  41d7fc:	mov	w20, #0x2                   	// #2
  41d800:	cmp	w1, #0x0
  41d804:	ccmp	w20, #0x2, #0x4, ne  // ne = any
  41d808:	b.eq	41d818 <nftw@plt+0x1ab28>  // b.none
  41d80c:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d810:	add	x4, x4, #0xeea
  41d814:	b	41d6d4 <nftw@plt+0x1a9e4>
  41d818:	cmp	w20, #0x0
  41d81c:	add	x24, x5, w24, uxtw
  41d820:	ccmp	w23, #0x10, #0x4, eq  // eq = none
  41d824:	b.eq	41d8ec <nftw@plt+0x1abfc>  // b.none
  41d828:	sub	x2, x24, x21
  41d82c:	mov	x1, x21
  41d830:	mov	x0, x19
  41d834:	bl	41c594 <nftw@plt+0x198a4>
  41d838:	tst	w0, #0x300000
  41d83c:	b.eq	41dc1c <nftw@plt+0x1af2c>  // b.none
  41d840:	orr	w20, w0, #0x2
  41d844:	cmp	w23, #0x8
  41d848:	mov	w0, #0xa                   	// #10
  41d84c:	csel	w23, w23, w0, ne  // ne = any
  41d850:	ldrb	w0, [x19, #1154]
  41d854:	cbz	w0, 41d874 <nftw@plt+0x1ab84>
  41d858:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d85c:	mov	w2, w22
  41d860:	add	x4, x4, #0xf11
  41d864:	mov	x0, x19
  41d868:	mov	w3, #0x0                   	// #0
  41d86c:	mov	w1, #0x2                   	// #2
  41d870:	bl	41c1d0 <nftw@plt+0x194e0>
  41d874:	tbz	w20, #13, 41d89c <nftw@plt+0x1abac>
  41d878:	ldrb	w0, [x19, #1154]
  41d87c:	cbz	w0, 41d89c <nftw@plt+0x1abac>
  41d880:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41d884:	mov	w2, w22
  41d888:	add	x4, x4, #0x189
  41d88c:	mov	x0, x19
  41d890:	mov	w3, #0x0                   	// #0
  41d894:	mov	w1, #0x2                   	// #2
  41d898:	bl	41c1d0 <nftw@plt+0x194e0>
  41d89c:	cmp	w23, #0x2
  41d8a0:	b.ne	41db7c <nftw@plt+0x1ae8c>  // b.any
  41d8a4:	ldrb	w0, [x19, #1165]
  41d8a8:	cbnz	w0, 41d8e4 <nftw@plt+0x1abf4>
  41d8ac:	ldrb	w0, [x19, #1154]
  41d8b0:	cbz	w0, 41d8e4 <nftw@plt+0x1abf4>
  41d8b4:	ldrb	w1, [x19, #1120]
  41d8b8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d8bc:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d8c0:	add	x0, x0, #0xe15
  41d8c4:	cmp	w1, #0x0
  41d8c8:	add	x4, x4, #0xddf
  41d8cc:	csel	x4, x4, x0, ne  // ne = any
  41d8d0:	mov	w2, w22
  41d8d4:	mov	w1, w23
  41d8d8:	mov	x0, x19
  41d8dc:	mov	w3, #0x0                   	// #0
  41d8e0:	bl	41c1d0 <nftw@plt+0x194e0>
  41d8e4:	orr	w20, w20, #0x800
  41d8e8:	b	41d6ec <nftw@plt+0x1a9fc>
  41d8ec:	cmp	w20, #0x0
  41d8f0:	ccmp	w23, #0x8, #0x0, ne  // ne = any
  41d8f4:	b.eq	41db94 <nftw@plt+0x1aea4>  // b.none
  41d8f8:	cmp	w26, w23
  41d8fc:	b.cc	41d93c <nftw@plt+0x1ac4c>  // b.lo, b.ul, b.last
  41d900:	cmp	w23, #0x2
  41d904:	b.ne	41d92c <nftw@plt+0x1ac3c>  // b.any
  41d908:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d90c:	add	w5, w26, #0x30
  41d910:	add	x4, x4, #0xf3b
  41d914:	mov	w2, w22
  41d918:	mov	x0, x19
  41d91c:	mov	w3, #0x0                   	// #0
  41d920:	mov	w1, #0x3                   	// #3
  41d924:	bl	41c1d0 <nftw@plt+0x194e0>
  41d928:	b	41d6e8 <nftw@plt+0x1a9f8>
  41d92c:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d930:	add	w5, w26, #0x30
  41d934:	add	x4, x4, #0xf61
  41d938:	b	41d914 <nftw@plt+0x1ac24>
  41d93c:	cbz	w20, 41dc24 <nftw@plt+0x1af34>
  41d940:	cmp	w23, #0x2
  41d944:	b.ne	41dba0 <nftw@plt+0x1aeb0>  // b.any
  41d948:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d94c:	add	x4, x4, #0xf86
  41d950:	b	41d6d4 <nftw@plt+0x1a9e4>
  41d954:	b.ne	41dbd0 <nftw@plt+0x1aee0>  // b.any
  41d958:	ldrb	w0, [x19, #1154]
  41d95c:	cbz	w0, 41d98c <nftw@plt+0x1ac9c>
  41d960:	ldrb	w0, [x19, #1127]
  41d964:	cbnz	w0, 41d98c <nftw@plt+0x1ac9c>
  41d968:	ldrb	w0, [x19, #1120]
  41d96c:	cbz	w0, 41d9a0 <nftw@plt+0x1acb0>
  41d970:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41d974:	add	x4, x4, #0xfdb
  41d978:	mov	w2, w22
  41d97c:	mov	x0, x19
  41d980:	mov	w3, #0x0                   	// #0
  41d984:	mov	w1, #0x2                   	// #2
  41d988:	bl	41c1d0 <nftw@plt+0x194e0>
  41d98c:	cmp	w20, #0x2
  41d990:	b.eq	41dbd8 <nftw@plt+0x1aee8>  // b.none
  41d994:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41d998:	add	x4, x4, #0x46
  41d99c:	b	41d6d4 <nftw@plt+0x1a9e4>
  41d9a0:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41d9a4:	add	x4, x4, #0x6
  41d9a8:	b	41d978 <nftw@plt+0x1ac88>
  41d9ac:	ldrb	w0, [x21]
  41d9b0:	cmp	w0, #0x27
  41d9b4:	b.ne	41da5c <nftw@plt+0x1ad6c>  // b.any
  41d9b8:	ldrb	w0, [x19, #1166]
  41d9bc:	cmp	w0, #0x0
  41d9c0:	cset	w1, ne  // ne = any
  41d9c4:	ldrb	w0, [x21, #1]!
  41d9c8:	ldrh	w2, [x27, w0, sxtw #1]
  41d9cc:	tbnz	w2, #2, 41d9ac <nftw@plt+0x1acbc>
  41d9d0:	cmp	w0, #0x27
  41d9d4:	b.ne	41d9e0 <nftw@plt+0x1acf0>  // b.any
  41d9d8:	ldrb	w0, [x19, #1166]
  41d9dc:	cbnz	w0, 41d9ac <nftw@plt+0x1acbc>
  41d9e0:	cbnz	w1, 41d80c <nftw@plt+0x1ab1c>
  41d9e4:	sub	x26, x24, x21
  41d9e8:	mov	x1, x21
  41d9ec:	mov	x2, x26
  41d9f0:	mov	x0, x19
  41d9f4:	bl	41c594 <nftw@plt+0x198a4>
  41d9f8:	mov	w20, w0
  41d9fc:	cbnz	w0, 41da8c <nftw@plt+0x1ad9c>
  41da00:	ldrb	w0, [x19, #1161]
  41da04:	cbz	w0, 41da64 <nftw@plt+0x1ad74>
  41da08:	cbz	x25, 41da10 <nftw@plt+0x1ad20>
  41da0c:	str	x21, [x25]
  41da10:	mov	w20, #0x40                  	// #64
  41da14:	cmp	x21, x24
  41da18:	movk	w20, #0x100, lsl #16
  41da1c:	b.eq	41dac0 <nftw@plt+0x1add0>  // b.none
  41da20:	ldrb	w0, [x19, #1138]
  41da24:	cbz	w0, 41da94 <nftw@plt+0x1ada4>
  41da28:	mov	x0, x19
  41da2c:	bl	428c50 <nftw@plt+0x25f60>
  41da30:	cbnz	w0, 41da94 <nftw@plt+0x1ada4>
  41da34:	mov	x6, x21
  41da38:	mov	w5, w26
  41da3c:	mov	w2, w22
  41da40:	mov	x0, x19
  41da44:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41da48:	mov	w3, #0x0                   	// #0
  41da4c:	add	x4, x4, #0xa4
  41da50:	mov	w1, #0x6                   	// #6
  41da54:	bl	41c240 <nftw@plt+0x19550>
  41da58:	b	41da94 <nftw@plt+0x1ada4>
  41da5c:	mov	w1, #0x0                   	// #0
  41da60:	b	41d9c4 <nftw@plt+0x1acd4>
  41da64:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41da68:	mov	x6, x21
  41da6c:	mov	w5, w26
  41da70:	add	x4, x4, #0x79
  41da74:	mov	w2, w22
  41da78:	mov	x0, x19
  41da7c:	mov	w3, #0x0                   	// #0
  41da80:	mov	w1, #0x3                   	// #3
  41da84:	bl	41c1d0 <nftw@plt+0x194e0>
  41da88:	b	41d6ec <nftw@plt+0x1a9fc>
  41da8c:	cmp	x21, x24
  41da90:	b.ne	41da20 <nftw@plt+0x1ad30>  // b.any
  41da94:	cmp	w20, #0x20
  41da98:	b.ne	41dac0 <nftw@plt+0x1add0>  // b.any
  41da9c:	ldrb	w0, [x19, #1154]
  41daa0:	cbz	w0, 41dac0 <nftw@plt+0x1add0>
  41daa4:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41daa8:	mov	w2, w22
  41daac:	add	x4, x4, #0xcc
  41dab0:	mov	x0, x19
  41dab4:	mov	w3, #0x0                   	// #0
  41dab8:	mov	w1, #0x2                   	// #2
  41dabc:	bl	41c1d0 <nftw@plt+0x194e0>
  41dac0:	and	w24, w20, #0x4000
  41dac4:	tbz	w20, #14, 41daf8 <nftw@plt+0x1ae08>
  41dac8:	cmp	w23, #0xa
  41dacc:	b.eq	41daf8 <nftw@plt+0x1ae08>  // b.none
  41dad0:	mov	x6, x21
  41dad4:	mov	w5, w26
  41dad8:	mov	w2, w22
  41dadc:	mov	x0, x19
  41dae0:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41dae4:	mov	w3, #0x0                   	// #0
  41dae8:	add	x4, x4, #0xfa
  41daec:	mov	w1, #0x3                   	// #3
  41daf0:	bl	41c1d0 <nftw@plt+0x194e0>
  41daf4:	b	41d6e8 <nftw@plt+0x1a9f8>
  41daf8:	tst	w20, #0x300000
  41dafc:	b.eq	41db24 <nftw@plt+0x1ae34>  // b.none
  41db00:	ldrb	w0, [x19, #1154]
  41db04:	cbz	w0, 41db4c <nftw@plt+0x1ae5c>
  41db08:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41db0c:	mov	w2, w22
  41db10:	add	x4, x4, #0xf11
  41db14:	mov	x0, x19
  41db18:	mov	w3, #0x0                   	// #0
  41db1c:	mov	w1, #0x2                   	// #2
  41db20:	bl	41c1d0 <nftw@plt+0x194e0>
  41db24:	cbz	w24, 41db4c <nftw@plt+0x1ae5c>
  41db28:	ldrb	w0, [x19, #1154]
  41db2c:	cbz	w0, 41db4c <nftw@plt+0x1ae5c>
  41db30:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41db34:	mov	w2, w22
  41db38:	add	x4, x4, #0x133
  41db3c:	mov	x0, x19
  41db40:	mov	w3, #0x0                   	// #0
  41db44:	mov	w1, #0x2                   	// #2
  41db48:	bl	41c1d0 <nftw@plt+0x194e0>
  41db4c:	orr	w20, w20, #0x2
  41db50:	b	41d874 <nftw@plt+0x1ab84>
  41db54:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41db58:	mov	x6, x21
  41db5c:	mov	w5, w24
  41db60:	add	x4, x4, #0x15f
  41db64:	b	41da74 <nftw@plt+0x1ad84>
  41db68:	mov	w1, #0x7                   	// #7
  41db6c:	b	41dc8c <nftw@plt+0x1af9c>
  41db70:	mov	x0, x19
  41db74:	bl	41c2b4 <nftw@plt+0x195c4>
  41db78:	b	41dcf4 <nftw@plt+0x1b004>
  41db7c:	cmp	w23, #0xa
  41db80:	b.ne	41dbbc <nftw@plt+0x1aecc>  // b.any
  41db84:	orr	w20, w20, #0x100
  41db88:	b	41d6ec <nftw@plt+0x1a9fc>
  41db8c:	mov	w20, #0x111                 	// #273
  41db90:	b	41d6ec <nftw@plt+0x1a9fc>
  41db94:	cmp	w26, #0x9
  41db98:	b.hi	41d92c <nftw@plt+0x1ac3c>  // b.pmore
  41db9c:	mov	w23, #0xa                   	// #10
  41dba0:	cmp	w23, #0x10
  41dba4:	eor	w4, w4, #0x1
  41dba8:	csel	w4, w4, wzr, eq  // eq = none
  41dbac:	cbz	w4, 41d954 <nftw@plt+0x1ac64>
  41dbb0:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41dbb4:	add	x4, x4, #0xfb0
  41dbb8:	b	41d6d4 <nftw@plt+0x1a9e4>
  41dbbc:	orr	w0, w20, #0x400
  41dbc0:	cmp	w23, #0x10
  41dbc4:	orr	w20, w20, #0x200
  41dbc8:	csel	w20, w20, w0, eq  // eq = none
  41dbcc:	b	41d6ec <nftw@plt+0x1a9fc>
  41dbd0:	cmp	w20, #0x2
  41dbd4:	b.ne	41d9e0 <nftw@plt+0x1acf0>  // b.any
  41dbd8:	ldrb	w0, [x21]
  41dbdc:	cmp	w0, #0x2b
  41dbe0:	b.eq	41dbec <nftw@plt+0x1aefc>  // b.none
  41dbe4:	cmp	w0, #0x2d
  41dbe8:	b.ne	41dbf0 <nftw@plt+0x1af00>  // b.any
  41dbec:	add	x21, x21, #0x1
  41dbf0:	ldrb	w1, [x21]
  41dbf4:	ldrb	w0, [x21]
  41dbf8:	ldrh	w1, [x27, x1, lsl #1]
  41dbfc:	tbnz	w1, #2, 41d9ac <nftw@plt+0x1acbc>
  41dc00:	cmp	w0, #0x27
  41dc04:	b.ne	41dc10 <nftw@plt+0x1af20>  // b.any
  41dc08:	ldrb	w0, [x19, #1166]
  41dc0c:	cbnz	w0, 41d7ec <nftw@plt+0x1aafc>
  41dc10:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41dc14:	add	x4, x4, #0x2f
  41dc18:	b	41d6d4 <nftw@plt+0x1a9e4>
  41dc1c:	cmp	w26, w23
  41dc20:	b.cs	41d900 <nftw@plt+0x1ac10>  // b.hs, b.nlast
  41dc24:	sub	x24, x24, x21
  41dc28:	mov	x1, x21
  41dc2c:	mov	x2, x24
  41dc30:	mov	x0, x19
  41dc34:	bl	41ca08 <nftw@plt+0x19d18>
  41dc38:	mov	w20, w0
  41dc3c:	cbnz	w0, 41dc58 <nftw@plt+0x1af68>
  41dc40:	ldrb	w0, [x19, #1161]
  41dc44:	cbz	w0, 41db54 <nftw@plt+0x1ae64>
  41dc48:	cbz	x25, 41dc50 <nftw@plt+0x1af60>
  41dc4c:	str	x21, [x25]
  41dc50:	mov	w20, #0x1040                	// #4160
  41dc54:	movk	w20, #0x100, lsl #16
  41dc58:	ldrb	w0, [x19, #1138]
  41dc5c:	and	w25, w20, #0xf0
  41dc60:	cbz	w0, 41dcac <nftw@plt+0x1afbc>
  41dc64:	mov	x0, x19
  41dc68:	bl	428c50 <nftw@plt+0x25f60>
  41dc6c:	cbnz	w0, 41dcac <nftw@plt+0x1afbc>
  41dc70:	and	w0, w20, #0x3000
  41dc74:	cmp	w25, #0x40
  41dc78:	b.ne	41dc84 <nftw@plt+0x1af94>  // b.any
  41dc7c:	ldrb	w1, [x19, #1139]
  41dc80:	cbnz	w1, 41db68 <nftw@plt+0x1ae78>
  41dc84:	cbz	w0, 41dcac <nftw@plt+0x1afbc>
  41dc88:	mov	w1, #0x6                   	// #6
  41dc8c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41dc90:	mov	x6, x21
  41dc94:	mov	w5, w24
  41dc98:	add	x4, x4, #0xa4
  41dc9c:	mov	w2, w22
  41dca0:	mov	x0, x19
  41dca4:	mov	w3, #0x0                   	// #0
  41dca8:	bl	41c240 <nftw@plt+0x19550>
  41dcac:	cmp	w25, #0x40
  41dcb0:	b.ne	41dcf4 <nftw@plt+0x1b004>  // b.any
  41dcb4:	ldrb	w0, [x19, #1139]
  41dcb8:	cbz	w0, 41dcf4 <nftw@plt+0x1b004>
  41dcbc:	ldrb	w1, [x19, #1120]
  41dcc0:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41dcc4:	adrp	x4, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41dcc8:	add	x0, x0, #0xdb9
  41dccc:	cmp	w1, #0x0
  41dcd0:	add	x4, x4, #0xd91
  41dcd4:	csel	x4, x4, x0, ne  // ne = any
  41dcd8:	ldrb	w0, [x19, #1152]
  41dcdc:	mov	w2, w22
  41dce0:	mov	w3, #0x0                   	// #0
  41dce4:	mov	w1, #0x7                   	// #7
  41dce8:	cbz	w0, 41db70 <nftw@plt+0x1ae80>
  41dcec:	mov	x0, x19
  41dcf0:	bl	41c240 <nftw@plt+0x19550>
  41dcf4:	orr	w20, w20, #0x1
  41dcf8:	b	41d874 <nftw@plt+0x1ab84>
  41dcfc:	cmp	w23, #0xa
  41dd00:	b.ls	41d800 <nftw@plt+0x1ab10>  // b.plast
  41dd04:	cmp	w23, #0x10
  41dd08:	b.ne	41d800 <nftw@plt+0x1ab10>  // b.any
  41dd0c:	and	w0, w0, #0xffffffdf
  41dd10:	cmp	w0, #0x50
  41dd14:	b	41d7d0 <nftw@plt+0x1aae0>
  41dd18:	stp	x29, x30, [sp, #-128]!
  41dd1c:	mov	w10, w2
  41dd20:	mov	x7, x0
  41dd24:	mov	x29, sp
  41dd28:	stp	x19, x20, [sp, #16]
  41dd2c:	ubfx	x0, x10, #12, #1
  41dd30:	ldr	w11, [x1, #8]
  41dd34:	stp	xzr, xzr, [x8]
  41dd38:	mov	x19, x8
  41dd3c:	cmp	w11, #0x1
  41dd40:	strb	w0, [x8, #16]
  41dd44:	strb	wzr, [x8, #17]
  41dd48:	ldr	x0, [x1, #16]
  41dd4c:	b.ne	41dd6c <nftw@plt+0x1b07c>  // b.any
  41dd50:	ldrb	w0, [x0]
  41dd54:	sub	w0, w0, #0x30
  41dd58:	sxtw	x0, w0
  41dd5c:	str	x0, [x8, #8]
  41dd60:	ldp	x19, x20, [sp, #16]
  41dd64:	ldp	x29, x30, [sp], #128
  41dd68:	ret
  41dd6c:	and	w1, w2, #0xf00
  41dd70:	cmp	w1, #0x400
  41dd74:	ldr	x18, [x7, #1208]
  41dd78:	b.ne	41dee0 <nftw@plt+0x1b1f0>  // b.any
  41dd7c:	add	x9, x0, #0x1
  41dd80:	mov	w6, #0x8                   	// #8
  41dd84:	neg	w5, w18
  41dd88:	mov	x1, #0xffffffffffffffff    	// #-1
  41dd8c:	cmp	x18, #0x40
  41dd90:	mov	w15, w6
  41dd94:	lsr	x5, x1, x5
  41dd98:	csel	x1, x5, x1, cc  // cc = lo, ul, last
  41dd9c:	mov	x5, #0x1                   	// #1
  41dda0:	adrp	x13, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41dda4:	sub	x5, x5, w6, uxtw
  41dda8:	adrp	x14, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  41ddac:	add	x5, x5, x1
  41ddb0:	add	x11, x0, w11, uxtw
  41ddb4:	add	x13, x13, #0xae
  41ddb8:	add	x14, x14, #0xd9c
  41ddbc:	mov	w12, #0x0                   	// #0
  41ddc0:	udiv	x5, x5, x15
  41ddc4:	add	x5, x5, #0x1
  41ddc8:	cmp	x9, x11
  41ddcc:	b.cs	41df5c <nftw@plt+0x1b26c>  // b.hs, b.nlast
  41ddd0:	ldrb	w1, [x9]
  41ddd4:	ldrb	w0, [x9]
  41ddd8:	ldrh	w1, [x13, x1, lsl #1]
  41dddc:	tbnz	w1, #2, 41ddec <nftw@plt+0x1b0fc>
  41dde0:	cmp	w6, #0x10
  41dde4:	b.ne	41df14 <nftw@plt+0x1b224>  // b.any
  41dde8:	tbz	w1, #8, 41df14 <nftw@plt+0x1b224>
  41ddec:	ldr	x4, [x19, #8]
  41ddf0:	ldrb	w0, [x14, w0, sxtw]
  41ddf4:	cmp	x4, x5
  41ddf8:	b.cc	41df2c <nftw@plt+0x1b23c>  // b.lo, b.ul, b.last
  41ddfc:	ldrb	w17, [x19, #16]
  41de00:	cmp	w6, #0x2
  41de04:	ldr	x1, [x19]
  41de08:	b.eq	41df38 <nftw@plt+0x1b248>  // b.none
  41de0c:	cmp	w6, #0x10
  41de10:	cset	w5, eq  // eq = none
  41de14:	add	w5, w5, #0x3
  41de18:	mov	w2, #0x40                  	// #64
  41de1c:	sub	w2, w2, w5
  41de20:	lsl	x8, x4, x5
  41de24:	cmp	w6, #0xa
  41de28:	lsl	x5, x1, x5
  41de2c:	lsr	x3, x4, x2
  41de30:	orr	x5, x5, x3
  41de34:	b.ne	41df40 <nftw@plt+0x1b250>  // b.any
  41de38:	lsr	x3, x4, #63
  41de3c:	lsl	x16, x4, #1
  41de40:	add	x3, x3, x1, lsl #1
  41de44:	adds	x4, x0, x16
  41de48:	cinc	x3, x3, cs  // cs = hs, nlast
  41de4c:	adds	x20, x8, x4
  41de50:	cinc	x3, x3, cs  // cs = hs, nlast
  41de54:	adds	x5, x5, x3
  41de58:	b.cs	41df4c <nftw@plt+0x1b25c>  // b.hs, b.nlast
  41de5c:	lsr	x1, x1, x2
  41de60:	cmp	x1, #0x0
  41de64:	cset	w0, ne  // ne = any
  41de68:	stp	x5, x20, [sp, #104]
  41de6c:	add	x8, sp, #0x40
  41de70:	strb	w17, [sp, #120]
  41de74:	strb	w0, [sp, #121]
  41de78:	ldp	x0, x1, [sp, #104]
  41de7c:	stp	x0, x1, [sp, #32]
  41de80:	ldr	x0, [sp, #120]
  41de84:	mov	x1, x18
  41de88:	str	x0, [sp, #48]
  41de8c:	add	x0, sp, #0x20
  41de90:	bl	41cb20 <nftw@plt+0x19e30>
  41de94:	ldp	x1, x0, [sp, #64]
  41de98:	stp	x1, x0, [sp, #104]
  41de9c:	ldr	x0, [sp, #80]
  41dea0:	str	x0, [sp, #120]
  41dea4:	ldr	x2, [sp, #112]
  41dea8:	ubfx	w0, w0, #8, #8
  41deac:	cmp	x20, x2
  41deb0:	b.ne	41df54 <nftw@plt+0x1b264>  // b.any
  41deb4:	cmp	x5, x1
  41deb8:	csinc	w0, w0, wzr, eq  // eq = none
  41debc:	strb	w0, [sp, #121]
  41dec0:	mov	x5, #0x0                   	// #0
  41dec4:	ldp	x0, x1, [sp, #104]
  41dec8:	stp	x0, x1, [x19]
  41decc:	ldr	x0, [sp, #120]
  41ded0:	str	x0, [x19, #16]
  41ded4:	ubfx	w0, w0, #8, #8
  41ded8:	orr	w12, w0, w12
  41dedc:	b	41df24 <nftw@plt+0x1b234>
  41dee0:	cmp	w1, #0x200
  41dee4:	b.ne	41def4 <nftw@plt+0x1b204>  // b.any
  41dee8:	add	x9, x0, #0x2
  41deec:	mov	w6, #0x10                  	// #16
  41def0:	b	41dd84 <nftw@plt+0x1b094>
  41def4:	cmp	w1, #0x800
  41def8:	b.ne	41df08 <nftw@plt+0x1b218>  // b.any
  41defc:	add	x9, x0, #0x2
  41df00:	mov	w6, #0x2                   	// #2
  41df04:	b	41dd84 <nftw@plt+0x1b094>
  41df08:	mov	x9, x0
  41df0c:	mov	w6, #0xa                   	// #10
  41df10:	b	41dd84 <nftw@plt+0x1b094>
  41df14:	cmp	w0, #0x27
  41df18:	b.ne	41df5c <nftw@plt+0x1b26c>  // b.any
  41df1c:	ldrb	w0, [x7, #1166]
  41df20:	cbz	w0, 41df5c <nftw@plt+0x1b26c>
  41df24:	add	x9, x9, #0x1
  41df28:	b	41ddc8 <nftw@plt+0x1b0d8>
  41df2c:	madd	x4, x15, x4, x0
  41df30:	str	x4, [x19, #8]
  41df34:	b	41df24 <nftw@plt+0x1b234>
  41df38:	mov	w5, #0x1                   	// #1
  41df3c:	b	41de18 <nftw@plt+0x1b128>
  41df40:	mov	x16, #0x0                   	// #0
  41df44:	mov	x3, #0x0                   	// #0
  41df48:	b	41de44 <nftw@plt+0x1b154>
  41df4c:	mov	w0, #0x1                   	// #1
  41df50:	b	41de68 <nftw@plt+0x1b178>
  41df54:	mov	w0, #0x1                   	// #1
  41df58:	b	41debc <nftw@plt+0x1b1cc>
  41df5c:	cbz	w12, 41df7c <nftw@plt+0x1b28c>
  41df60:	tbnz	w10, #24, 41df7c <nftw@plt+0x1b28c>
  41df64:	mov	x0, x7
  41df68:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41df6c:	mov	w1, #0x2                   	// #2
  41df70:	add	x2, x2, #0x1b1
  41df74:	bl	41c014 <nftw@plt+0x19324>
  41df78:	b	41dd60 <nftw@plt+0x1b070>
  41df7c:	ldrb	w0, [x19, #16]
  41df80:	cbnz	w0, 41dd60 <nftw@plt+0x1b070>
  41df84:	ldrb	w0, [x7, #1160]
  41df88:	cbz	w0, 41df94 <nftw@plt+0x1b2a4>
  41df8c:	ldrb	w0, [x7, #16]
  41df90:	cbnz	w0, 41dd60 <nftw@plt+0x1b070>
  41df94:	ldp	x0, x1, [x19]
  41df98:	mov	x2, x18
  41df9c:	bl	41ce18 <nftw@plt+0x1a128>
  41dfa0:	tst	w0, #0xff
  41dfa4:	b.ne	41dd60 <nftw@plt+0x1b070>  // b.any
  41dfa8:	cmp	w6, #0xa
  41dfac:	b.ne	41dfd0 <nftw@plt+0x1b2e0>  // b.any
  41dfb0:	ldrb	w0, [x7, #1152]
  41dfb4:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41dfb8:	add	x2, x2, #0x1dc
  41dfbc:	cmp	w0, #0x0
  41dfc0:	mov	x0, x7
  41dfc4:	cset	w1, ne  // ne = any
  41dfc8:	lsl	w1, w1, #1
  41dfcc:	bl	41c014 <nftw@plt+0x19324>
  41dfd0:	mov	w0, #0x1                   	// #1
  41dfd4:	strb	w0, [x19, #16]
  41dfd8:	b	41dd60 <nftw@plt+0x1b070>
  41dfdc:	stp	x29, x30, [sp, #-48]!
  41dfe0:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  41dfe4:	movk	x1, #0xcccd
  41dfe8:	mov	x29, sp
  41dfec:	stp	x19, x20, [sp, #16]
  41dff0:	mov	x20, x0
  41dff4:	ldr	x0, [x0, #1096]
  41dff8:	str	x21, [sp, #32]
  41dffc:	ldr	x21, [x20, #1104]
  41e000:	sub	x21, x21, x0
  41e004:	asr	x19, x21, #3
  41e008:	mul	x19, x19, x1
  41e00c:	mov	x1, #0x50                  	// #80
  41e010:	add	x19, x19, #0xa
  41e014:	mul	x19, x19, x1
  41e018:	mov	x1, x19
  41e01c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  41e020:	add	x19, x0, x19
  41e024:	str	x0, [x20, #1096]
  41e028:	str	x19, [x20, #1104]
  41e02c:	add	x0, x0, x21
  41e030:	ldp	x19, x20, [sp, #16]
  41e034:	ldr	x21, [sp, #32]
  41e038:	ldp	x29, x30, [sp], #48
  41e03c:	ret
  41e040:	stp	x29, x30, [sp, #-400]!
  41e044:	mov	x29, sp
  41e048:	stp	x27, x28, [sp, #80]
  41e04c:	mov	x28, x0
  41e050:	and	w0, w1, #0xff
  41e054:	stp	x19, x20, [sp, #16]
  41e058:	ldr	x19, [x28, #1096]
  41e05c:	stp	x21, x22, [sp, #32]
  41e060:	mov	w21, #0x1                   	// #1
  41e064:	stp	x23, x24, [sp, #48]
  41e068:	stp	x25, x26, [sp, #64]
  41e06c:	str	wzr, [x28, #28]
  41e070:	str	xzr, [x28, #432]
  41e074:	stp	wzr, wzr, [sp, #128]
  41e078:	str	w0, [sp, #136]
  41e07c:	mov	w0, #0x16                  	// #22
  41e080:	str	w0, [x19, #36]
  41e084:	str	wzr, [sp, #276]
  41e088:	ldr	w0, [sp, #128]
  41e08c:	add	x1, sp, #0x114
  41e090:	add	w0, w0, #0x1
  41e094:	str	w0, [sp, #128]
  41e098:	mov	x0, x28
  41e09c:	bl	42b410 <nftw@plt+0x28720>
  41e0a0:	ldrb	w20, [x0, #4]
  41e0a4:	mov	x23, x0
  41e0a8:	ldr	w22, [sp, #276]
  41e0ac:	cmp	w20, #0x5
  41e0b0:	b.eq	41e638 <nftw@plt+0x1b948>  // b.none
  41e0b4:	b.hi	41e104 <nftw@plt+0x1b414>  // b.pmore
  41e0b8:	cmp	w20, #0x1
  41e0bc:	b.eq	41e5c8 <nftw@plt+0x1b8d8>  // b.none
  41e0c0:	cmp	w20, #0x4
  41e0c4:	b.eq	41e628 <nftw@plt+0x1b938>  // b.none
  41e0c8:	sub	w0, w20, #0x1
  41e0cc:	cmp	w0, #0x19
  41e0d0:	b.ls	41e5d8 <nftw@plt+0x1b8e8>  // b.plast
  41e0d4:	mov	x1, x23
  41e0d8:	mov	x0, x28
  41e0dc:	bl	423e80 <nftw@plt+0x21190>
  41e0e0:	mov	x5, x0
  41e0e4:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e0e8:	add	x4, x4, #0x3ed
  41e0ec:	mov	w2, w22
  41e0f0:	mov	w3, #0x0                   	// #0
  41e0f4:	mov	w1, #0x3                   	// #3
  41e0f8:	mov	x0, x28
  41e0fc:	bl	41c1d0 <nftw@plt+0x194e0>
  41e100:	b	41e620 <nftw@plt+0x1b930>
  41e104:	cmp	w20, #0x35
  41e108:	b.eq	41e118 <nftw@plt+0x1b428>  // b.none
  41e10c:	b.hi	41e168 <nftw@plt+0x1b478>  // b.pmore
  41e110:	cmp	w20, #0x25
  41e114:	b.ne	41e0c8 <nftw@plt+0x1b3d8>  // b.any
  41e118:	cbnz	w21, 41e17c <nftw@plt+0x1b48c>
  41e11c:	mov	x1, x23
  41e120:	mov	x0, x28
  41e124:	bl	423e80 <nftw@plt+0x21190>
  41e128:	mov	x5, x0
  41e12c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e130:	mov	w2, w22
  41e134:	add	x4, x4, #0x213
  41e138:	mov	x0, x28
  41e13c:	mov	w3, #0x0                   	// #0
  41e140:	mov	w1, #0x3                   	// #3
  41e144:	bl	41c1d0 <nftw@plt+0x194e0>
  41e148:	mov	w0, w21
  41e14c:	ldp	x19, x20, [sp, #16]
  41e150:	ldp	x21, x22, [sp, #32]
  41e154:	ldp	x23, x24, [sp, #48]
  41e158:	ldp	x25, x26, [sp, #64]
  41e15c:	ldp	x27, x28, [sp, #80]
  41e160:	ldp	x29, x30, [sp], #400
  41e164:	ret
  41e168:	sub	w0, w20, #0x37
  41e16c:	and	w0, w0, #0xff
  41e170:	cmp	w0, #0x5
  41e174:	b.ls	41e118 <nftw@plt+0x1b428>  // b.plast
  41e178:	b	41e0c8 <nftw@plt+0x1b3d8>
  41e17c:	str	wzr, [sp, #328]
  41e180:	cmp	w20, #0x37
  41e184:	b.eq	41e254 <nftw@plt+0x1b564>  // b.none
  41e188:	b.hi	41e1b4 <nftw@plt+0x1b4c4>  // b.pmore
  41e18c:	cmp	w20, #0x25
  41e190:	b.eq	41e560 <nftw@plt+0x1b870>  // b.none
  41e194:	cmp	w20, #0x35
  41e198:	b.eq	41e2f4 <nftw@plt+0x1b604>  // b.none
  41e19c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e1a0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e1a4:	add	x2, x2, #0x3ce
  41e1a8:	add	x0, x0, #0x3d9
  41e1ac:	mov	w1, #0x4ad                 	// #1197
  41e1b0:	bl	402d60 <nftw@plt+0x70>
  41e1b4:	sub	w20, w20, #0x38
  41e1b8:	and	w20, w20, #0xff
  41e1bc:	cmp	w20, #0x4
  41e1c0:	b.hi	41e19c <nftw@plt+0x1b4ac>  // b.pmore
  41e1c4:	add	x2, sp, #0x130
  41e1c8:	mov	x1, x23
  41e1cc:	add	x3, sp, #0x148
  41e1d0:	mov	x0, x28
  41e1d4:	bl	418530 <nftw@plt+0x15840>
  41e1d8:	mov	w1, w0
  41e1dc:	ldr	w2, [sp, #328]
  41e1e0:	cbnz	w2, 41e520 <nftw@plt+0x1b830>
  41e1e4:	tbz	w0, #31, 41e520 <nftw@plt+0x1b830>
  41e1e8:	orr	x1, x1, #0xffffffff00000000
  41e1ec:	mov	x0, #0xffffffffffffffff    	// #-1
  41e1f0:	stp	x0, x1, [sp, #352]
  41e1f4:	add	x8, sp, #0xf0
  41e1f8:	ldp	x0, x1, [sp, #352]
  41e1fc:	stp	x0, x1, [sp, #208]
  41e200:	ldr	x1, [x28, #1208]
  41e204:	strh	wzr, [sp, #368]
  41e208:	ldr	x0, [sp, #368]
  41e20c:	str	x0, [sp, #224]
  41e210:	add	x0, sp, #0xd0
  41e214:	bl	41cb20 <nftw@plt+0x19e30>
  41e218:	ldp	x2, x0, [sp, #240]
  41e21c:	stp	x2, x0, [sp, #352]
  41e220:	ldr	x0, [sp, #256]
  41e224:	str	x0, [sp, #368]
  41e228:	ldr	x1, [sp, #360]
  41e22c:	ubfx	w0, w0, #8, #8
  41e230:	ldr	w3, [sp, #328]
  41e234:	strb	w0, [sp, #369]
  41e238:	cmp	w3, #0x0
  41e23c:	stp	x2, x1, [sp, #352]
  41e240:	cset	w3, ne  // ne = any
  41e244:	strb	w3, [sp, #368]
  41e248:	ldr	x4, [sp, #368]
  41e24c:	str	x4, [sp, #392]
  41e250:	b	41e3b0 <nftw@plt+0x1b6c0>
  41e254:	mov	w3, w22
  41e258:	mov	x1, x23
  41e25c:	mov	x0, x28
  41e260:	mov	x2, #0x0                   	// #0
  41e264:	bl	41d5dc <nftw@plt+0x1a8ec>
  41e268:	str	w0, [sp, #304]
  41e26c:	tbz	w0, #24, 41e284 <nftw@plt+0x1b594>
  41e270:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e274:	mov	x0, x28
  41e278:	add	x2, x2, #0x23d
  41e27c:	mov	w1, #0x3                   	// #3
  41e280:	bl	41c014 <nftw@plt+0x19324>
  41e284:	ldr	w2, [sp, #304]
  41e288:	and	w0, w2, #0xf
  41e28c:	cmp	w0, #0x1
  41e290:	b.eq	41e2c4 <nftw@plt+0x1b5d4>  // b.none
  41e294:	cmp	w0, #0x2
  41e298:	b.ne	41e2b8 <nftw@plt+0x1b5c8>  // b.any
  41e29c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e2a0:	add	x4, x4, #0x26d
  41e2a4:	mov	w2, w22
  41e2a8:	mov	x0, x28
  41e2ac:	mov	w3, #0x0                   	// #0
  41e2b0:	mov	w1, #0x3                   	// #3
  41e2b4:	bl	41c1d0 <nftw@plt+0x194e0>
  41e2b8:	mov	w0, #0x0                   	// #0
  41e2bc:	mov	x1, #0x0                   	// #0
  41e2c0:	b	41e524 <nftw@plt+0x1b834>
  41e2c4:	tbnz	w2, #13, 41e2e8 <nftw@plt+0x1b5f8>
  41e2c8:	add	x8, sp, #0x178
  41e2cc:	mov	x1, x23
  41e2d0:	mov	x0, x28
  41e2d4:	bl	41dd18 <nftw@plt+0x1b028>
  41e2d8:	ldrb	w3, [sp, #392]
  41e2dc:	ldrb	w0, [sp, #393]
  41e2e0:	ldp	x2, x1, [sp, #376]
  41e2e4:	b	41e3b0 <nftw@plt+0x1b6c0>
  41e2e8:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e2ec:	add	x4, x4, #0x29a
  41e2f0:	b	41e2a4 <nftw@plt+0x1b5b4>
  41e2f4:	ldr	x1, [x23, #8]
  41e2f8:	ldr	x0, [x28, #1248]
  41e2fc:	cmp	x1, x0
  41e300:	b.ne	41e4c0 <nftw@plt+0x1b7d0>  // b.any
  41e304:	ldrb	w0, [x28, #24]
  41e308:	ldr	x21, [x28, #136]
  41e30c:	add	w0, w0, #0x1
  41e310:	strb	w0, [x28, #24]
  41e314:	mov	x0, x28
  41e318:	bl	42b37c <nftw@plt+0x2868c>
  41e31c:	mov	x20, x0
  41e320:	ldrb	w0, [x0, #4]
  41e324:	cmp	w0, #0x14
  41e328:	b.ne	41e3d8 <nftw@plt+0x1b6e8>  // b.any
  41e32c:	mov	x0, x28
  41e330:	bl	42b37c <nftw@plt+0x2868c>
  41e334:	mov	x20, x0
  41e338:	mov	w0, #0x1                   	// #1
  41e33c:	ldrb	w1, [x20, #4]
  41e340:	cmp	w1, #0x35
  41e344:	b.ne	41e454 <nftw@plt+0x1b764>  // b.any
  41e348:	ldr	x20, [x20, #8]
  41e34c:	cbz	w0, 41e3e0 <nftw@plt+0x1b6f0>
  41e350:	mov	x0, x28
  41e354:	bl	42b37c <nftw@plt+0x2868c>
  41e358:	ldrb	w0, [x0, #4]
  41e35c:	cmp	w0, #0x15
  41e360:	b.eq	41e3e0 <nftw@plt+0x1b6f0>  // b.none
  41e364:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e368:	mov	x0, x28
  41e36c:	add	x2, x2, #0x2c6
  41e370:	mov	w1, #0x3                   	// #3
  41e374:	bl	41c014 <nftw@plt+0x19324>
  41e378:	mov	x20, #0x0                   	// #0
  41e37c:	ldrb	w0, [x28, #24]
  41e380:	sub	w0, w0, #0x1
  41e384:	strb	w0, [x28, #24]
  41e388:	cbz	x20, 41e4b8 <nftw@plt+0x1b7c8>
  41e38c:	ldrb	w0, [x20, #18]
  41e390:	tbz	w0, #1, 41e4b8 <nftw@plt+0x1b7c8>
  41e394:	ldrh	w1, [x20, #18]
  41e398:	eor	x1, x1, #0x100
  41e39c:	ubfx	w1, w1, #8, #1
  41e3a0:	and	x1, x1, #0xff
  41e3a4:	mov	w0, #0x0                   	// #0
  41e3a8:	mov	w3, #0x0                   	// #0
  41e3ac:	mov	x2, #0x0                   	// #0
  41e3b0:	strb	w0, [sp, #393]
  41e3b4:	add	x0, sp, #0x250
  41e3b8:	stp	x2, x1, [sp, #376]
  41e3bc:	mov	w21, #0x0                   	// #0
  41e3c0:	strb	w3, [sp, #392]
  41e3c4:	ldp	x0, x1, [x0, #-216]
  41e3c8:	stp	x0, x1, [x19, #8]
  41e3cc:	ldr	x0, [sp, #392]
  41e3d0:	str	x0, [x19, #24]
  41e3d4:	b	41e088 <nftw@plt+0x1b398>
  41e3d8:	mov	w0, #0x0                   	// #0
  41e3dc:	b	41e33c <nftw@plt+0x1b64c>
  41e3e0:	cbz	x20, 41e378 <nftw@plt+0x1b688>
  41e3e4:	ldr	x0, [x28, #136]
  41e3e8:	cmp	x21, x0
  41e3ec:	b.ne	41e3fc <nftw@plt+0x1b70c>  // b.any
  41e3f0:	add	x0, x28, #0x50
  41e3f4:	cmp	x21, x0
  41e3f8:	b.eq	41e418 <nftw@plt+0x1b728>  // b.none
  41e3fc:	ldrb	w0, [x28, #1150]
  41e400:	cbz	w0, 41e418 <nftw@plt+0x1b728>
  41e404:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e408:	mov	x0, x28
  41e40c:	add	x2, x2, #0x33b
  41e410:	mov	w1, #0x18                  	// #24
  41e414:	bl	41c0f0 <nftw@plt+0x19400>
  41e418:	ldrb	w0, [x20, #18]
  41e41c:	and	w0, w0, #0x3
  41e420:	cmp	w0, #0x2
  41e424:	b.ne	41e438 <nftw@plt+0x1b748>  // b.any
  41e428:	ldr	x1, [x20, #24]
  41e42c:	ldrb	w0, [x1, #19]
  41e430:	orr	w0, w0, #0x20
  41e434:	strb	w0, [x1, #19]
  41e438:	ldrh	w0, [x20, #18]
  41e43c:	tbnz	w0, #7, 41e44c <nftw@plt+0x1b75c>
  41e440:	mov	x1, x20
  41e444:	mov	x0, x28
  41e448:	bl	429b58 <nftw@plt+0x26e68>
  41e44c:	str	x20, [x28, #432]
  41e450:	b	41e37c <nftw@plt+0x1b68c>
  41e454:	mov	x0, x28
  41e458:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e45c:	mov	w1, #0x3                   	// #3
  41e460:	add	x2, x2, #0x2e2
  41e464:	bl	41c014 <nftw@plt+0x19324>
  41e468:	ldrh	w0, [x20, #6]
  41e46c:	tbz	w0, #4, 41e378 <nftw@plt+0x1b688>
  41e470:	ldrb	w0, [x20, #4]
  41e474:	mov	x1, x20
  41e478:	strb	w0, [sp, #380]
  41e47c:	mov	x0, x28
  41e480:	strh	wzr, [sp, #382]
  41e484:	bl	423e80 <nftw@plt+0x21190>
  41e488:	add	x1, sp, #0x178
  41e48c:	mov	x20, x0
  41e490:	mov	x0, x28
  41e494:	bl	423e80 <nftw@plt+0x21190>
  41e498:	mov	x3, x20
  41e49c:	mov	x4, x0
  41e4a0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e4a4:	mov	x0, x28
  41e4a8:	add	x2, x2, #0x30c
  41e4ac:	mov	w1, #0x3                   	// #3
  41e4b0:	bl	41c014 <nftw@plt+0x19324>
  41e4b4:	b	41e378 <nftw@plt+0x1b688>
  41e4b8:	mov	w1, #0x0                   	// #0
  41e4bc:	b	41e3a0 <nftw@plt+0x1b6b0>
  41e4c0:	ldr	x0, [x28, #1288]
  41e4c4:	cmp	x1, x0
  41e4c8:	b.ne	41e4e0 <nftw@plt+0x1b7f0>  // b.any
  41e4cc:	add	x8, sp, #0x178
  41e4d0:	mov	w1, #0x0                   	// #0
  41e4d4:	mov	x0, x28
  41e4d8:	bl	41cc84 <nftw@plt+0x19f94>
  41e4dc:	b	41e2d8 <nftw@plt+0x1b5e8>
  41e4e0:	ldr	x0, [x28, #1296]
  41e4e4:	cmp	x1, x0
  41e4e8:	b.ne	41e4f8 <nftw@plt+0x1b808>  // b.any
  41e4ec:	add	x8, sp, #0x178
  41e4f0:	mov	w1, #0x1                   	// #1
  41e4f4:	b	41e4d4 <nftw@plt+0x1b7e4>
  41e4f8:	ldrb	w0, [x28, #1120]
  41e4fc:	cbz	w0, 41e52c <nftw@plt+0x1b83c>
  41e500:	ldr	x0, [x28, #1256]
  41e504:	cmp	x1, x0
  41e508:	b.eq	41e518 <nftw@plt+0x1b828>  // b.none
  41e50c:	ldr	x2, [x28, #1264]
  41e510:	cmp	x1, x2
  41e514:	b.ne	41e52c <nftw@plt+0x1b83c>  // b.any
  41e518:	cmp	x1, x0
  41e51c:	cset	x1, eq  // eq = none
  41e520:	mov	w0, #0x0                   	// #0
  41e524:	mov	x2, #0x0                   	// #0
  41e528:	b	41e230 <nftw@plt+0x1b540>
  41e52c:	ldrb	w0, [x28, #1149]
  41e530:	cbz	w0, 41e2bc <nftw@plt+0x1b5cc>
  41e534:	ldr	w0, [x28, #28]
  41e538:	cbnz	w0, 41e2b8 <nftw@plt+0x1b5c8>
  41e53c:	ldr	x5, [x1]
  41e540:	mov	w2, w22
  41e544:	mov	x0, x28
  41e548:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e54c:	mov	w3, #0x0                   	// #0
  41e550:	add	x4, x4, #0x365
  41e554:	mov	w1, #0xd                   	// #13
  41e558:	bl	41c240 <nftw@plt+0x19550>
  41e55c:	b	41e2b8 <nftw@plt+0x1b5c8>
  41e560:	ldrb	w0, [x28, #18]
  41e564:	cbnz	w0, 41e58c <nftw@plt+0x1b89c>
  41e568:	ldrb	w0, [x28, #1154]
  41e56c:	cbz	w0, 41e5a0 <nftw@plt+0x1b8b0>
  41e570:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e574:	mov	w2, w22
  41e578:	add	x4, x4, #0x389
  41e57c:	mov	x0, x28
  41e580:	mov	w3, #0x0                   	// #0
  41e584:	mov	w1, #0x2                   	// #2
  41e588:	bl	41c1d0 <nftw@plt+0x194e0>
  41e58c:	add	x1, sp, #0x130
  41e590:	mov	x0, x28
  41e594:	bl	41b19c <nftw@plt+0x184ac>
  41e598:	ldr	w1, [sp, #304]
  41e59c:	b	41e520 <nftw@plt+0x1b830>
  41e5a0:	ldrb	w0, [x28, #1132]
  41e5a4:	cbz	w0, 41e58c <nftw@plt+0x1b89c>
  41e5a8:	mov	w2, w22
  41e5ac:	mov	x0, x28
  41e5b0:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e5b4:	mov	w3, #0x0                   	// #0
  41e5b8:	add	x4, x4, #0x3a8
  41e5bc:	mov	w1, #0x1                   	// #1
  41e5c0:	bl	41c240 <nftw@plt+0x19550>
  41e5c4:	b	41e58c <nftw@plt+0x1b89c>
  41e5c8:	ldr	w0, [sp, #128]
  41e5cc:	cmp	w0, #0x1
  41e5d0:	cset	w0, eq  // eq = none
  41e5d4:	str	w0, [sp, #132]
  41e5d8:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41e5dc:	add	x0, x0, #0xcde
  41e5e0:	str	x0, [sp, #112]
  41e5e4:	add	x0, x0, w20, sxtw #1
  41e5e8:	sxtw	x2, w20
  41e5ec:	ldrb	w1, [x0, #1]
  41e5f0:	tbz	w1, #0, 41e644 <nftw@plt+0x1b954>
  41e5f4:	cbz	w21, 41e11c <nftw@plt+0x1b42c>
  41e5f8:	ldr	w0, [x19, #36]
  41e5fc:	sub	w0, w0, #0x1
  41e600:	cmp	w0, #0x1b
  41e604:	b.ls	41e6f8 <nftw@plt+0x1ba08>  // b.plast
  41e608:	ldr	w3, [x19, #36]
  41e60c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e610:	mov	x0, x28
  41e614:	add	x2, x2, #0x4a3
  41e618:	mov	w1, #0x4                   	// #4
  41e61c:	bl	41c014 <nftw@plt+0x19324>
  41e620:	mov	w21, #0x0                   	// #0
  41e624:	b	41e148 <nftw@plt+0x1b458>
  41e628:	cmp	w21, #0x0
  41e62c:	mov	w0, #0x1b                  	// #27
  41e630:	csel	w20, w20, w0, eq  // eq = none
  41e634:	b	41e5d8 <nftw@plt+0x1b8e8>
  41e638:	cmp	w21, #0x0
  41e63c:	mov	w0, #0x1c                  	// #28
  41e640:	b	41e630 <nftw@plt+0x1b940>
  41e644:	cbz	w21, 41e5f8 <nftw@plt+0x1b908>
  41e648:	ldr	w0, [x19, #36]
  41e64c:	cmp	w20, #0x15
  41e650:	b.ne	41e670 <nftw@plt+0x1b980>  // b.any
  41e654:	cmp	w0, #0x14
  41e658:	b.ne	41e6a8 <nftw@plt+0x1b9b8>  // b.any
  41e65c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e660:	add	x4, x4, #0x421
  41e664:	mov	w2, w22
  41e668:	mov	w3, #0x0                   	// #0
  41e66c:	b	41f370 <nftw@plt+0x1c680>
  41e670:	cmp	w20, #0x16
  41e674:	b.ne	41e6a8 <nftw@plt+0x1b9b8>  // b.any
  41e678:	cmp	w0, #0x16
  41e67c:	b.ne	41e6a8 <nftw@plt+0x1b9b8>  // b.any
  41e680:	ldr	w1, [sp, #136]
  41e684:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e688:	adrp	x5, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41e68c:	add	x0, x0, #0x20d
  41e690:	add	x5, x5, #0xd8d
  41e694:	cmp	w1, #0x0
  41e698:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e69c:	csel	x5, x5, x0, ne  // ne = any
  41e6a0:	add	x4, x4, #0x448
  41e6a4:	b	41e0ec <nftw@plt+0x1b3fc>
  41e6a8:	and	w0, w0, #0xfffffffd
  41e6ac:	cmp	w0, #0x14
  41e6b0:	b.eq	41e6d0 <nftw@plt+0x1b9e0>  // b.none
  41e6b4:	ldr	x1, [x19]
  41e6b8:	mov	x0, x28
  41e6bc:	bl	423e80 <nftw@plt+0x21190>
  41e6c0:	mov	x5, x0
  41e6c4:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e6c8:	add	x4, x4, #0x45e
  41e6cc:	b	41e0ec <nftw@plt+0x1b3fc>
  41e6d0:	sub	w0, w20, #0x15
  41e6d4:	cmp	w0, #0x1
  41e6d8:	b.ls	41e5f8 <nftw@plt+0x1b908>  // b.plast
  41e6dc:	mov	x1, x23
  41e6e0:	mov	x0, x28
  41e6e4:	bl	423e80 <nftw@plt+0x21190>
  41e6e8:	mov	x5, x0
  41e6ec:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e6f0:	add	x4, x4, #0x481
  41e6f4:	b	41e0ec <nftw@plt+0x1b3fc>
  41e6f8:	cmp	w20, #0x14
  41e6fc:	b.eq	41f490 <nftw@plt+0x1c7a0>  // b.none
  41e700:	lsl	x0, x2, #1
  41e704:	ubfx	x1, x1, #1, #1
  41e708:	ldr	x2, [sp, #112]
  41e70c:	ldrb	w0, [x2, x0]
  41e710:	sub	w0, w0, w1
  41e714:	str	w0, [sp, #140]
  41e718:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e71c:	add	x0, x0, #0x4f0
  41e720:	str	x0, [sp, #144]
  41e724:	ldrsw	x0, [x19, #36]
  41e728:	ldr	x2, [sp, #112]
  41e72c:	lsl	x1, x0, #1
  41e730:	add	x0, x2, x0, lsl #1
  41e734:	ldrb	w1, [x2, x1]
  41e738:	ldr	w2, [sp, #140]
  41e73c:	cmp	w2, w1
  41e740:	b.cs	41f430 <nftw@plt+0x1c740>  // b.hs, b.nlast
  41e744:	ldrb	w1, [x28, #1141]
  41e748:	cbz	w1, 41e7ac <nftw@plt+0x1babc>
  41e74c:	ldrb	w0, [x0, #1]
  41e750:	tbz	w0, #2, 41e7ac <nftw@plt+0x1babc>
  41e754:	ldrb	w0, [x19, #24]
  41e758:	ldurb	w1, [x19, #-16]
  41e75c:	cmp	w1, w0
  41e760:	b.eq	41e7ac <nftw@plt+0x1babc>  // b.none
  41e764:	ldr	x2, [x28, #1208]
  41e768:	cbz	w0, 41e7dc <nftw@plt+0x1baec>
  41e76c:	ldp	x0, x1, [x19, #-32]
  41e770:	bl	41ce18 <nftw@plt+0x1a128>
  41e774:	tst	w0, #0xff
  41e778:	b.ne	41e7ac <nftw@plt+0x1babc>  // b.any
  41e77c:	ldr	x1, [x19]
  41e780:	mov	x0, x28
  41e784:	ldur	w24, [x19, #-8]
  41e788:	bl	423e80 <nftw@plt+0x21190>
  41e78c:	mov	x5, x0
  41e790:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e794:	add	x4, x4, #0x4bc
  41e798:	mov	w2, w24
  41e79c:	mov	x0, x28
  41e7a0:	mov	w3, #0x0                   	// #0
  41e7a4:	mov	w1, #0x0                   	// #0
  41e7a8:	bl	41c1d0 <nftw@plt+0x194e0>
  41e7ac:	ldr	w0, [x19, #36]
  41e7b0:	str	w0, [sp, #96]
  41e7b4:	mov	w0, w0
  41e7b8:	sub	w1, w0, #0x1
  41e7bc:	cmp	w1, #0x1b
  41e7c0:	b.hi	41e608 <nftw@plt+0x1b918>  // b.pmore
  41e7c4:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41e7c8:	add	x0, x0, #0xc98
  41e7cc:	ldrh	w0, [x0, w1, uxtw #1]
  41e7d0:	adr	x1, 41e7dc <nftw@plt+0x1baec>
  41e7d4:	add	x0, x1, w0, sxth #2
  41e7d8:	br	x0
  41e7dc:	ldp	x0, x1, [x19, #8]
  41e7e0:	bl	41ce18 <nftw@plt+0x1a128>
  41e7e4:	tst	w0, #0xff
  41e7e8:	b.ne	41e7ac <nftw@plt+0x1babc>  // b.any
  41e7ec:	ldr	x1, [x19]
  41e7f0:	mov	x0, x28
  41e7f4:	ldr	w24, [x19, #32]
  41e7f8:	bl	423e80 <nftw@plt+0x21190>
  41e7fc:	mov	x5, x0
  41e800:	ldr	x4, [sp, #144]
  41e804:	b	41e798 <nftw@plt+0x1baa8>
  41e808:	ldp	x0, x1, [x19, #8]
  41e80c:	stp	x0, x1, [sp, #352]
  41e810:	ldr	w1, [sp, #96]
  41e814:	ldr	x0, [x19, #24]
  41e818:	str	x0, [sp, #368]
  41e81c:	ldrb	w26, [x19, #24]
  41e820:	cmp	w1, #0x1b
  41e824:	ldrb	w0, [x19, #25]
  41e828:	ldp	x25, x27, [x19, #8]
  41e82c:	b.eq	41e894 <nftw@plt+0x1bba4>  // b.none
  41e830:	cmp	w1, #0x1c
  41e834:	b.eq	41e8c0 <nftw@plt+0x1bbd0>  // b.none
  41e838:	cmp	w1, #0xe
  41e83c:	b.ne	41e968 <nftw@plt+0x1bc78>  // b.any
  41e840:	mvn	x25, x25
  41e844:	str	x25, [sp, #352]
  41e848:	mvn	x25, x27
  41e84c:	str	x25, [sp, #360]
  41e850:	strb	w0, [sp, #369]
  41e854:	add	x8, sp, #0xf0
  41e858:	ldp	x0, x1, [sp, #352]
  41e85c:	stp	x0, x1, [sp, #208]
  41e860:	ldr	x1, [x28, #1208]
  41e864:	strb	w26, [sp, #368]
  41e868:	ldr	x0, [sp, #368]
  41e86c:	str	x0, [sp, #224]
  41e870:	add	x0, sp, #0xd0
  41e874:	bl	41cb20 <nftw@plt+0x19e30>
  41e878:	ldp	x25, x0, [sp, #240]
  41e87c:	stp	x25, x0, [sp, #352]
  41e880:	ldr	x26, [sp, #256]
  41e884:	str	x26, [sp, #368]
  41e888:	mov	x27, x0
  41e88c:	and	w26, w26, #0xff
  41e890:	b	41e8b8 <nftw@plt+0x1bbc8>
  41e894:	ldrb	w0, [x28, #1138]
  41e898:	cbz	w0, 41e908 <nftw@plt+0x1bc18>
  41e89c:	ldr	w0, [x28, #28]
  41e8a0:	cbnz	w0, 41e8b8 <nftw@plt+0x1bbc8>
  41e8a4:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e8a8:	mov	x0, x28
  41e8ac:	add	x2, x2, #0x525
  41e8b0:	mov	w1, #0x6                   	// #6
  41e8b4:	bl	41c080 <nftw@plt+0x19390>
  41e8b8:	mov	w0, #0x0                   	// #0
  41e8bc:	b	41e908 <nftw@plt+0x1bc18>
  41e8c0:	stp	x25, x27, [sp, #352]
  41e8c4:	add	x8, sp, #0xf0
  41e8c8:	strb	w0, [sp, #369]
  41e8cc:	ldp	x0, x1, [sp, #352]
  41e8d0:	stp	x0, x1, [sp, #208]
  41e8d4:	ldr	x1, [x28, #1208]
  41e8d8:	strb	w26, [sp, #368]
  41e8dc:	ldr	x0, [sp, #368]
  41e8e0:	str	x0, [sp, #224]
  41e8e4:	add	x0, sp, #0xd0
  41e8e8:	bl	41cb74 <nftw@plt+0x19e84>
  41e8ec:	ldp	x25, x0, [sp, #240]
  41e8f0:	stp	x25, x0, [sp, #352]
  41e8f4:	ldr	x0, [sp, #256]
  41e8f8:	str	x0, [sp, #368]
  41e8fc:	ldr	x27, [sp, #360]
  41e900:	and	w26, w0, #0xff
  41e904:	ubfx	w0, w0, #8, #8
  41e908:	add	x2, sp, #0x250
  41e90c:	stp	x25, x27, [sp, #352]
  41e910:	strb	w26, [sp, #368]
  41e914:	strb	w0, [sp, #369]
  41e918:	ldp	x0, x1, [sp, #352]
  41e91c:	stp	x0, x1, [x2, #-216]
  41e920:	ldr	x2, [sp, #368]
  41e924:	str	x2, [sp, #392]
  41e928:	stp	x0, x1, [x19, #-32]
  41e92c:	ldr	x0, [sp, #392]
  41e930:	stur	x0, [x19, #-16]
  41e934:	ldr	w0, [x19, #32]
  41e938:	stur	w0, [x19, #-8]
  41e93c:	ldurb	w0, [x19, #-15]
  41e940:	sub	x24, x19, #0x28
  41e944:	cbz	w0, 41f328 <nftw@plt+0x1c638>
  41e948:	ldr	w0, [x28, #28]
  41e94c:	cbnz	w0, 41f328 <nftw@plt+0x1c638>
  41e950:	mov	x0, x28
  41e954:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41e958:	mov	w1, #0x2                   	// #2
  41e95c:	add	x2, x2, #0x59f
  41e960:	bl	41c014 <nftw@plt+0x19324>
  41e964:	b	41f328 <nftw@plt+0x1c638>
  41e968:	orr	x25, x25, x27
  41e96c:	mov	w0, #0x0                   	// #0
  41e970:	cmp	x25, #0x0
  41e974:	mov	w26, #0x0                   	// #0
  41e978:	cset	x27, eq  // eq = none
  41e97c:	mov	x25, #0x0                   	// #0
  41e980:	b	41e908 <nftw@plt+0x1bc18>
  41e984:	ldp	x0, x1, [x19, #-32]
  41e988:	stp	x0, x1, [sp, #208]
  41e98c:	ldr	w3, [sp, #96]
  41e990:	ldur	x0, [x19, #-16]
  41e994:	str	x0, [sp, #224]
  41e998:	add	x8, sp, #0xf0
  41e99c:	add	x2, sp, #0xb0
  41e9a0:	ldp	x0, x1, [x19, #8]
  41e9a4:	stp	x0, x1, [sp, #176]
  41e9a8:	ldr	x0, [x19, #24]
  41e9ac:	add	x1, sp, #0xd0
  41e9b0:	str	x0, [sp, #192]
  41e9b4:	mov	x0, x28
  41e9b8:	bl	41d08c <nftw@plt+0x1a39c>
  41e9bc:	ldp	x0, x1, [sp, #240]
  41e9c0:	stp	x0, x1, [x19, #-32]
  41e9c4:	ldr	x0, [sp, #256]
  41e9c8:	b	41e930 <nftw@plt+0x1bc40>
  41e9cc:	ldp	x11, x13, [x19, #-32]
  41e9d0:	sub	x10, x19, #0x28
  41e9d4:	ldp	x12, x4, [x19, #8]
  41e9d8:	ldurb	w2, [x19, #-16]
  41e9dc:	ldrb	w5, [x19, #24]
  41e9e0:	ldr	x6, [x28, #1208]
  41e9e4:	ldp	x0, x1, [x19, #-32]
  41e9e8:	stp	x0, x1, [sp, #352]
  41e9ec:	mov	x3, x12
  41e9f0:	ldr	x0, [x10, #24]
  41e9f4:	mov	x1, x13
  41e9f8:	str	x0, [sp, #368]
  41e9fc:	mov	x0, x11
  41ea00:	bl	41d368 <nftw@plt+0x1a678>
  41ea04:	and	w2, w0, #0xff
  41ea08:	ldr	w1, [sp, #96]
  41ea0c:	cmp	w1, #0x19
  41ea10:	b.ne	41ea4c <nftw@plt+0x1bd5c>  // b.any
  41ea14:	and	x2, x0, #0xff
  41ea18:	stp	xzr, x2, [sp, #352]
  41ea1c:	add	x2, sp, #0x250
  41ea20:	strh	wzr, [sp, #368]
  41ea24:	ldp	x0, x1, [sp, #352]
  41ea28:	stp	x0, x1, [x2, #-216]
  41ea2c:	ldr	x2, [sp, #368]
  41ea30:	str	x2, [sp, #392]
  41ea34:	stp	x0, x1, [x10, #8]
  41ea38:	ldr	x0, [sp, #392]
  41ea3c:	str	x0, [x10, #24]
  41ea40:	ldr	w0, [x19, #32]
  41ea44:	str	w0, [x10, #32]
  41ea48:	b	41e93c <nftw@plt+0x1bc4c>
  41ea4c:	ldr	w0, [sp, #96]
  41ea50:	cmp	w0, #0x3
  41ea54:	b.ne	41ea64 <nftw@plt+0x1bd74>  // b.any
  41ea58:	eor	w2, w2, #0x1
  41ea5c:	and	x2, x2, #0xff
  41ea60:	b	41ea18 <nftw@plt+0x1bd28>
  41ea64:	ldr	w0, [sp, #96]
  41ea68:	cmp	w0, #0x2
  41ea6c:	b.ne	41ea88 <nftw@plt+0x1bd98>  // b.any
  41ea70:	cbz	w2, 41ea5c <nftw@plt+0x1bd6c>
  41ea74:	cmp	x4, x13
  41ea78:	b.ne	41ea5c <nftw@plt+0x1bd6c>  // b.any
  41ea7c:	cmp	x12, x11
  41ea80:	cset	w2, ne  // ne = any
  41ea84:	b	41ea5c <nftw@plt+0x1bd6c>
  41ea88:	cbz	w2, 41eaa0 <nftw@plt+0x1bdb0>
  41ea8c:	cmp	x4, x13
  41ea90:	b.ne	41eaa8 <nftw@plt+0x1bdb8>  // b.any
  41ea94:	cmp	x12, x11
  41ea98:	cset	w2, eq  // eq = none
  41ea9c:	b	41ea5c <nftw@plt+0x1bd6c>
  41eaa0:	mov	w2, #0x1                   	// #1
  41eaa4:	b	41ea5c <nftw@plt+0x1bd6c>
  41eaa8:	mov	w2, #0x0                   	// #0
  41eaac:	b	41ea5c <nftw@plt+0x1bd6c>
  41eab0:	ldp	x2, x6, [x19, #8]
  41eab4:	sub	x1, x19, #0x28
  41eab8:	ldp	x4, x5, [x19, #-32]
  41eabc:	stp	x4, x5, [sp, #352]
  41eac0:	ldur	x3, [x19, #-24]
  41eac4:	ldr	x0, [x1, #24]
  41eac8:	str	x0, [sp, #368]
  41eacc:	cmp	x6, x3
  41ead0:	ldur	x0, [x19, #-32]
  41ead4:	b.ne	41eb28 <nftw@plt+0x1be38>  // b.any
  41ead8:	cmp	x2, x0
  41eadc:	cset	w0, eq  // eq = none
  41eae0:	ldr	w2, [sp, #96]
  41eae4:	cmp	w2, #0x18
  41eae8:	b.ne	41eaf0 <nftw@plt+0x1be00>  // b.any
  41eaec:	eor	w0, w0, #0x1
  41eaf0:	and	x0, x0, #0xff
  41eaf4:	stp	xzr, x0, [sp, #352]
  41eaf8:	add	x0, sp, #0x250
  41eafc:	strh	wzr, [sp, #368]
  41eb00:	ldp	x2, x3, [sp, #352]
  41eb04:	stp	x2, x3, [x0, #-216]
  41eb08:	ldr	x0, [sp, #368]
  41eb0c:	str	x0, [sp, #392]
  41eb10:	stp	x2, x3, [x1, #8]
  41eb14:	ldr	x0, [sp, #392]
  41eb18:	str	x0, [x1, #24]
  41eb1c:	ldr	w0, [x19, #32]
  41eb20:	str	w0, [x1, #32]
  41eb24:	b	41e93c <nftw@plt+0x1bc4c>
  41eb28:	mov	w0, #0x0                   	// #0
  41eb2c:	b	41eae0 <nftw@plt+0x1bdf0>
  41eb30:	sub	x4, x19, #0x28
  41eb34:	ldrb	w6, [x19, #24]
  41eb38:	ldp	x2, x3, [x19, #-32]
  41eb3c:	stp	x2, x3, [sp, #352]
  41eb40:	ldr	x2, [x4, #24]
  41eb44:	str	x2, [sp, #368]
  41eb48:	ldurb	w2, [x19, #-16]
  41eb4c:	ldp	x3, x5, [x19, #-32]
  41eb50:	cmp	w2, #0x0
  41eb54:	csel	w2, w2, w6, ne  // ne = any
  41eb58:	ldr	w6, [sp, #96]
  41eb5c:	ldp	x1, x0, [x19, #8]
  41eb60:	cmp	w6, #0x9
  41eb64:	b.ne	41eba8 <nftw@plt+0x1beb8>  // b.any
  41eb68:	and	x0, x0, x5
  41eb6c:	and	x1, x1, x3
  41eb70:	stp	x1, x0, [sp, #352]
  41eb74:	strb	w2, [sp, #368]
  41eb78:	add	x2, sp, #0x250
  41eb7c:	strb	wzr, [sp, #369]
  41eb80:	ldp	x0, x1, [sp, #352]
  41eb84:	stp	x0, x1, [x2, #-216]
  41eb88:	ldr	x2, [sp, #368]
  41eb8c:	str	x2, [sp, #392]
  41eb90:	stp	x0, x1, [x4, #8]
  41eb94:	ldr	x0, [sp, #392]
  41eb98:	str	x0, [x4, #24]
  41eb9c:	ldr	w0, [x19, #32]
  41eba0:	str	w0, [x4, #32]
  41eba4:	b	41e93c <nftw@plt+0x1bc4c>
  41eba8:	ldr	w6, [sp, #96]
  41ebac:	cmp	w6, #0xa
  41ebb0:	b.ne	41ebc0 <nftw@plt+0x1bed0>  // b.any
  41ebb4:	orr	x0, x0, x5
  41ebb8:	orr	x1, x1, x3
  41ebbc:	b	41eb70 <nftw@plt+0x1be80>
  41ebc0:	eor	x0, x0, x5
  41ebc4:	eor	x1, x1, x3
  41ebc8:	b	41eb70 <nftw@plt+0x1be80>
  41ebcc:	sub	x13, x19, #0x28
  41ebd0:	add	x2, sp, #0x200
  41ebd4:	ldp	x0, x1, [x19, #-32]
  41ebd8:	stp	x0, x1, [sp, #304]
  41ebdc:	ldr	x0, [x13, #24]
  41ebe0:	str	x0, [sp, #320]
  41ebe4:	ldr	x18, [x28, #1208]
  41ebe8:	ldp	x0, x1, [x19, #8]
  41ebec:	ldurb	w15, [x19, #-16]
  41ebf0:	ldp	x14, x24, [x19, #-32]
  41ebf4:	stp	x0, x1, [x2, #-184]
  41ebf8:	ldr	x0, [x19, #24]
  41ebfc:	str	x0, [sp, #344]
  41ec00:	ldp	x11, x25, [x19, #8]
  41ec04:	cbnz	w15, 41ee1c <nftw@plt+0x1c12c>
  41ec08:	ldrb	w12, [x19, #24]
  41ec0c:	cbnz	w12, 41ecc8 <nftw@plt+0x1bfd8>
  41ec10:	mov	x2, x18
  41ec14:	mov	x1, x24
  41ec18:	mov	x0, x14
  41ec1c:	bl	41ce18 <nftw@plt+0x1a128>
  41ec20:	tst	w0, #0xff
  41ec24:	b.ne	41ee14 <nftw@plt+0x1c124>  // b.any
  41ec28:	stp	x14, x24, [sp, #304]
  41ec2c:	add	x8, sp, #0xf0
  41ec30:	strb	wzr, [sp, #320]
  41ec34:	ldp	x0, x1, [sp, #304]
  41ec38:	stp	x0, x1, [sp, #208]
  41ec3c:	ldr	x0, [sp, #320]
  41ec40:	mov	x1, x18
  41ec44:	str	x0, [sp, #224]
  41ec48:	add	x0, sp, #0xd0
  41ec4c:	bl	41cb74 <nftw@plt+0x19e84>
  41ec50:	ldp	x14, x0, [sp, #240]
  41ec54:	stp	x14, x0, [sp, #304]
  41ec58:	mov	w15, #0x1                   	// #1
  41ec5c:	ldr	x24, [sp, #312]
  41ec60:	ldr	x0, [sp, #256]
  41ec64:	str	x0, [sp, #320]
  41ec68:	mov	x2, x18
  41ec6c:	mov	x1, x25
  41ec70:	mov	x0, x11
  41ec74:	bl	41ce18 <nftw@plt+0x1a128>
  41ec78:	tst	w0, #0xff
  41ec7c:	b.ne	41ecc8 <nftw@plt+0x1bfd8>  // b.any
  41ec80:	add	x0, sp, #0x200
  41ec84:	stp	x11, x25, [sp, #328]
  41ec88:	eor	w15, w15, #0x1
  41ec8c:	strb	wzr, [sp, #344]
  41ec90:	add	x8, sp, #0xf0
  41ec94:	ldp	x0, x1, [x0, #-184]
  41ec98:	stp	x0, x1, [sp, #208]
  41ec9c:	ldr	x0, [sp, #344]
  41eca0:	mov	x1, x18
  41eca4:	str	x0, [sp, #224]
  41eca8:	add	x0, sp, #0xd0
  41ecac:	bl	41cb74 <nftw@plt+0x19e84>
  41ecb0:	ldp	x11, x0, [sp, #240]
  41ecb4:	stp	x11, x0, [sp, #328]
  41ecb8:	mov	w12, #0x0                   	// #0
  41ecbc:	ldr	x25, [sp, #336]
  41ecc0:	ldr	x0, [sp, #256]
  41ecc4:	str	x0, [sp, #344]
  41ecc8:	cbz	x14, 41ee28 <nftw@plt+0x1c138>
  41eccc:	cmp	x11, #0x0
  41ecd0:	cset	w10, ne  // ne = any
  41ecd4:	add	x8, sp, #0x178
  41ecd8:	mov	x1, x25
  41ecdc:	mov	x0, x24
  41ece0:	bl	41cc10 <nftw@plt+0x19f20>
  41ece4:	ldp	x9, x5, [sp, #376]
  41ece8:	mov	x0, x14
  41ecec:	add	x8, sp, #0x160
  41ecf0:	mov	x1, x25
  41ecf4:	bl	41cc10 <nftw@plt+0x19f20>
  41ecf8:	mov	x1, x11
  41ecfc:	ldr	x0, [sp, #360]
  41ed00:	mov	w6, #0x1                   	// #1
  41ed04:	add	x8, sp, #0x160
  41ed08:	add	x9, x9, x0
  41ed0c:	ldr	x0, [sp, #352]
  41ed10:	cmp	x0, #0x0
  41ed14:	mov	x0, x24
  41ed18:	csel	w10, w10, w6, eq  // eq = none
  41ed1c:	bl	41cc10 <nftw@plt+0x19f20>
  41ed20:	ldr	x0, [sp, #360]
  41ed24:	add	x8, sp, #0xf0
  41ed28:	add	x9, x9, x0
  41ed2c:	str	x9, [sp, #376]
  41ed30:	ldr	x0, [sp, #352]
  41ed34:	cmp	x0, #0x0
  41ed38:	add	x0, sp, #0x250
  41ed3c:	csel	w10, w10, w6, eq  // eq = none
  41ed40:	ldp	x0, x1, [x0, #-216]
  41ed44:	stp	x0, x1, [sp, #208]
  41ed48:	ldr	x0, [sp, #392]
  41ed4c:	mov	x1, x18
  41ed50:	str	x0, [sp, #224]
  41ed54:	add	x0, sp, #0xd0
  41ed58:	bl	41cb20 <nftw@plt+0x19e30>
  41ed5c:	ldp	x4, x0, [sp, #240]
  41ed60:	stp	x4, x0, [sp, #376]
  41ed64:	ldr	x0, [sp, #256]
  41ed68:	str	x0, [sp, #392]
  41ed6c:	ldr	x1, [sp, #384]
  41ed70:	cmp	x5, x1
  41ed74:	b.ne	41ee30 <nftw@plt+0x1c140>  // b.any
  41ed78:	cmp	x9, x4
  41ed7c:	csel	w10, w10, w6, eq  // eq = none
  41ed80:	cbz	w15, 41edbc <nftw@plt+0x1c0cc>
  41ed84:	add	x0, sp, #0x250
  41ed88:	add	x8, sp, #0xf0
  41ed8c:	ldp	x0, x1, [x0, #-216]
  41ed90:	stp	x0, x1, [sp, #208]
  41ed94:	ldr	x0, [sp, #392]
  41ed98:	mov	x1, x18
  41ed9c:	str	x0, [sp, #224]
  41eda0:	add	x0, sp, #0xd0
  41eda4:	bl	41cb74 <nftw@plt+0x19e84>
  41eda8:	ldp	x4, x0, [sp, #240]
  41edac:	stp	x4, x0, [sp, #376]
  41edb0:	ldr	x1, [sp, #384]
  41edb4:	ldr	x0, [sp, #256]
  41edb8:	str	x0, [sp, #392]
  41edbc:	cbnz	w12, 41ee38 <nftw@plt+0x1c148>
  41edc0:	cbnz	w10, 41ede8 <nftw@plt+0x1c0f8>
  41edc4:	mov	x2, x18
  41edc8:	mov	x0, x4
  41edcc:	bl	41ce18 <nftw@plt+0x1a128>
  41edd0:	eor	w15, w15, #0x1
  41edd4:	cmp	w15, w0, uxtb
  41edd8:	b.eq	41ede8 <nftw@plt+0x1c0f8>  // b.none
  41eddc:	orr	x0, x1, x4
  41ede0:	cmp	x0, #0x0
  41ede4:	cset	w10, ne  // ne = any
  41ede8:	add	x0, sp, #0x250
  41edec:	stp	x4, x1, [sp, #376]
  41edf0:	strb	w12, [sp, #392]
  41edf4:	strb	w10, [sp, #393]
  41edf8:	ldp	x0, x1, [x0, #-216]
  41edfc:	stp	x0, x1, [x13, #8]
  41ee00:	ldr	x0, [sp, #392]
  41ee04:	str	x0, [x13, #24]
  41ee08:	ldr	w0, [x19, #32]
  41ee0c:	str	w0, [x13, #32]
  41ee10:	b	41e93c <nftw@plt+0x1bc4c>
  41ee14:	mov	w15, w12
  41ee18:	b	41ec68 <nftw@plt+0x1bf78>
  41ee1c:	mov	w12, w15
  41ee20:	mov	w15, #0x0                   	// #0
  41ee24:	b	41ecc8 <nftw@plt+0x1bfd8>
  41ee28:	mov	w10, #0x0                   	// #0
  41ee2c:	b	41ecd4 <nftw@plt+0x1bfe4>
  41ee30:	mov	w10, w6
  41ee34:	b	41ed80 <nftw@plt+0x1c090>
  41ee38:	mov	w10, #0x0                   	// #0
  41ee3c:	b	41ede8 <nftw@plt+0x1c0f8>
  41ee40:	sub	x0, x19, #0x28
  41ee44:	add	x2, sp, #0x200
  41ee48:	str	x0, [sp, #120]
  41ee4c:	ldp	x0, x1, [x19, #-32]
  41ee50:	stp	x0, x1, [x2, #-232]
  41ee54:	ldurb	w26, [x19, #-16]
  41ee58:	ldur	x0, [x19, #-16]
  41ee5c:	str	x0, [sp, #296]
  41ee60:	ldp	x0, x1, [x19, #8]
  41ee64:	str	w26, [sp, #104]
  41ee68:	ldurb	w7, [x19, #-15]
  41ee6c:	ldr	w12, [x19, #32]
  41ee70:	ldp	x27, x25, [x19, #-32]
  41ee74:	stp	x0, x1, [sp, #304]
  41ee78:	ldr	x0, [x19, #24]
  41ee7c:	str	x0, [sp, #320]
  41ee80:	ldr	x24, [x28, #1208]
  41ee84:	ldp	x14, x15, [x19, #8]
  41ee88:	cbnz	w26, 41efb4 <nftw@plt+0x1c2c4>
  41ee8c:	ldrb	w0, [x19, #24]
  41ee90:	str	w0, [sp, #100]
  41ee94:	cbnz	w0, 41efc0 <nftw@plt+0x1c2d0>
  41ee98:	mov	x2, x24
  41ee9c:	mov	x1, x25
  41eea0:	mov	x0, x27
  41eea4:	str	w7, [sp, #104]
  41eea8:	bl	41ce18 <nftw@plt+0x1a128>
  41eeac:	tst	w0, #0xff
  41eeb0:	ldr	w7, [sp, #104]
  41eeb4:	b.ne	41efac <nftw@plt+0x1c2bc>  // b.any
  41eeb8:	add	x0, sp, #0x200
  41eebc:	stp	x27, x25, [sp, #280]
  41eec0:	add	x8, sp, #0xf0
  41eec4:	strb	wzr, [sp, #296]
  41eec8:	strb	w7, [sp, #297]
  41eecc:	ldp	x0, x1, [x0, #-232]
  41eed0:	stp	x0, x1, [sp, #208]
  41eed4:	ldr	x0, [sp, #296]
  41eed8:	mov	x1, x24
  41eedc:	str	x0, [sp, #224]
  41eee0:	add	x0, sp, #0xd0
  41eee4:	bl	41cb74 <nftw@plt+0x19e84>
  41eee8:	ldp	x10, x0, [sp, #240]
  41eeec:	stp	x10, x0, [sp, #280]
  41eef0:	ldr	x9, [sp, #256]
  41eef4:	str	x9, [sp, #296]
  41eef8:	mov	x27, x10
  41eefc:	and	w26, w9, #0xff
  41ef00:	ubfx	w7, w9, #8, #8
  41ef04:	mov	x25, x0
  41ef08:	mov	w0, #0x1                   	// #1
  41ef0c:	str	w0, [sp, #108]
  41ef10:	mov	x2, x24
  41ef14:	mov	x1, x15
  41ef18:	mov	x0, x14
  41ef1c:	str	w7, [sp, #104]
  41ef20:	bl	41ce18 <nftw@plt+0x1a128>
  41ef24:	tst	w0, #0xff
  41ef28:	ldr	w7, [sp, #104]
  41ef2c:	b.ne	41efc8 <nftw@plt+0x1c2d8>  // b.any
  41ef30:	ldr	w0, [sp, #108]
  41ef34:	add	x8, sp, #0xf0
  41ef38:	stp	x14, x15, [sp, #304]
  41ef3c:	eor	w0, w0, #0x1
  41ef40:	str	w0, [sp, #104]
  41ef44:	strb	wzr, [sp, #320]
  41ef48:	ldp	x0, x1, [sp, #304]
  41ef4c:	stp	x0, x1, [sp, #208]
  41ef50:	ldr	x0, [sp, #320]
  41ef54:	mov	x1, x24
  41ef58:	str	w7, [sp, #152]
  41ef5c:	str	x0, [sp, #224]
  41ef60:	add	x0, sp, #0xd0
  41ef64:	bl	41cb74 <nftw@plt+0x19e84>
  41ef68:	str	wzr, [sp, #100]
  41ef6c:	ldp	x14, x0, [sp, #240]
  41ef70:	stp	x14, x0, [sp, #304]
  41ef74:	ldr	w7, [sp, #152]
  41ef78:	ldr	x15, [sp, #312]
  41ef7c:	ldr	x0, [sp, #256]
  41ef80:	str	x0, [sp, #320]
  41ef84:	cbz	x14, 41efd4 <nftw@plt+0x1c2e4>
  41ef88:	sub	w2, w24, #0x41
  41ef8c:	mov	x1, #0x1                   	// #1
  41ef90:	sub	x0, x24, #0x1
  41ef94:	lsl	x1, x1, x2
  41ef98:	tst	x14, x1
  41ef9c:	b.ne	41f06c <nftw@plt+0x1c37c>  // b.any
  41efa0:	sub	x0, x0, #0x1
  41efa4:	lsr	x1, x1, #1
  41efa8:	b	41ef98 <nftw@plt+0x1c2a8>
  41efac:	str	wzr, [sp, #108]
  41efb0:	b	41ef10 <nftw@plt+0x1c220>
  41efb4:	stp	w26, wzr, [sp, #100]
  41efb8:	str	wzr, [sp, #108]
  41efbc:	b	41ef84 <nftw@plt+0x1c294>
  41efc0:	str	wzr, [sp, #108]
  41efc4:	b	41ef84 <nftw@plt+0x1c294>
  41efc8:	ldr	w0, [sp, #108]
  41efcc:	str	w0, [sp, #104]
  41efd0:	b	41ef84 <nftw@plt+0x1c294>
  41efd4:	cbz	x15, 41f004 <nftw@plt+0x1c314>
  41efd8:	sub	x1, x24, #0x41
  41efdc:	sub	x13, x24, #0x1
  41efe0:	cmp	x24, #0x40
  41efe4:	csel	x0, x1, x13, hi  // hi = pmore
  41efe8:	mov	x1, #0x1                   	// #1
  41efec:	lsl	x1, x1, x0
  41eff0:	tst	x15, x1
  41eff4:	b.ne	41f06c <nftw@plt+0x1c37c>  // b.any
  41eff8:	sub	x0, x0, #0x1
  41effc:	lsr	x1, x1, #1
  41f000:	b	41eff0 <nftw@plt+0x1c300>
  41f004:	ldr	w0, [x28, #28]
  41f008:	cbnz	w0, 41f030 <nftw@plt+0x1c340>
  41f00c:	mov	w2, w12
  41f010:	mov	x0, x28
  41f014:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f018:	mov	w3, #0x0                   	// #0
  41f01c:	add	x4, x4, #0x553
  41f020:	mov	w1, #0x3                   	// #3
  41f024:	str	w7, [sp, #96]
  41f028:	bl	41c1d0 <nftw@plt+0x194e0>
  41f02c:	ldr	w7, [sp, #96]
  41f030:	strb	w26, [sp, #296]
  41f034:	strb	w7, [sp, #297]
  41f038:	stp	x27, x25, [sp, #280]
  41f03c:	ldr	x0, [sp, #296]
  41f040:	str	x0, [sp, #392]
  41f044:	add	x0, sp, #0x250
  41f048:	stp	x27, x25, [sp, #376]
  41f04c:	ldr	x2, [sp, #120]
  41f050:	strb	w26, [sp, #392]
  41f054:	strb	w7, [sp, #393]
  41f058:	ldp	x0, x1, [x0, #-216]
  41f05c:	stp	x0, x1, [x2, #8]
  41f060:	mov	x1, x2
  41f064:	ldr	x0, [sp, #392]
  41f068:	b	41eb18 <nftw@plt+0x1be28>
  41f06c:	stp	x14, x15, [sp, #304]
  41f070:	sub	x13, x24, #0x1
  41f074:	sub	x13, x13, x0
  41f078:	ldp	x2, x3, [sp, #304]
  41f07c:	mov	w0, #0x1                   	// #1
  41f080:	strb	w0, [sp, #320]
  41f084:	add	x8, sp, #0x160
  41f088:	add	x0, sp, #0xf0
  41f08c:	str	x13, [sp, #152]
  41f090:	ldr	x1, [sp, #320]
  41f094:	str	w7, [sp, #160]
  41f098:	stp	x2, x3, [sp, #240]
  41f09c:	mov	x2, x13
  41f0a0:	str	x1, [sp, #256]
  41f0a4:	mov	x1, x24
  41f0a8:	bl	41cf4c <nftw@plt+0x1a25c>
  41f0ac:	ldp	x26, x4, [sp, #352]
  41f0b0:	mov	x18, x25
  41f0b4:	ldr	w7, [sp, #160]
  41f0b8:	mov	x12, x27
  41f0bc:	ldr	x13, [sp, #152]
  41f0c0:	mov	x25, #0x0                   	// #0
  41f0c4:	mov	x27, #0x0                   	// #0
  41f0c8:	mov	w15, #0x1                   	// #1
  41f0cc:	ldrb	w5, [sp, #368]
  41f0d0:	mov	x6, x24
  41f0d4:	mov	x3, x26
  41f0d8:	mov	w2, w15
  41f0dc:	mov	x1, x18
  41f0e0:	mov	x0, x12
  41f0e4:	str	x4, [sp, #152]
  41f0e8:	str	w7, [sp, #160]
  41f0ec:	str	x13, [sp, #168]
  41f0f0:	bl	41d368 <nftw@plt+0x1a678>
  41f0f4:	ldr	w7, [sp, #160]
  41f0f8:	tst	w0, #0xff
  41f0fc:	add	x8, sp, #0xf0
  41f100:	ldr	x4, [sp, #152]
  41f104:	ldr	x13, [sp, #168]
  41f108:	b.eq	41f190 <nftw@plt+0x1c4a0>  // b.none
  41f10c:	add	x0, sp, #0x200
  41f110:	stp	x12, x18, [sp, #280]
  41f114:	add	x2, sp, #0xb0
  41f118:	strb	w15, [sp, #296]
  41f11c:	mov	w3, #0x5                   	// #5
  41f120:	strb	w7, [sp, #297]
  41f124:	stp	x26, x4, [sp, #352]
  41f128:	ldp	x0, x1, [x0, #-232]
  41f12c:	stp	x0, x1, [sp, #208]
  41f130:	ldr	x0, [sp, #296]
  41f134:	str	x0, [sp, #224]
  41f138:	ldp	x0, x1, [sp, #352]
  41f13c:	stp	x0, x1, [sp, #176]
  41f140:	ldr	x0, [sp, #368]
  41f144:	add	x1, sp, #0xd0
  41f148:	str	x13, [sp, #160]
  41f14c:	str	x0, [sp, #192]
  41f150:	mov	x0, x28
  41f154:	bl	41d08c <nftw@plt+0x1a39c>
  41f158:	ldp	x4, x13, [sp, #152]
  41f15c:	ldp	x12, x0, [sp, #240]
  41f160:	stp	x12, x0, [sp, #280]
  41f164:	ldr	x9, [sp, #256]
  41f168:	str	x9, [sp, #296]
  41f16c:	cmp	x13, #0x3f
  41f170:	mov	x18, x0
  41f174:	and	w15, w9, #0xff
  41f178:	ubfx	w7, w9, #8, #8
  41f17c:	b.ls	41f1a8 <nftw@plt+0x1c4b8>  // b.plast
  41f180:	sub	w0, w13, #0x40
  41f184:	mov	x1, #0x1                   	// #1
  41f188:	lsl	x0, x1, x0
  41f18c:	orr	x27, x27, x0
  41f190:	sub	x13, x13, #0x1
  41f194:	cmn	x13, #0x1
  41f198:	b.eq	41f1b8 <nftw@plt+0x1c4c8>  // b.none
  41f19c:	extr	x4, x26, x4, #1
  41f1a0:	lsr	x26, x26, #1
  41f1a4:	b	41f0cc <nftw@plt+0x1c3dc>
  41f1a8:	mov	x0, #0x1                   	// #1
  41f1ac:	lsl	x0, x0, x13
  41f1b0:	orr	x25, x25, x0
  41f1b4:	b	41f190 <nftw@plt+0x1c4a0>
  41f1b8:	ldp	w0, w26, [sp, #96]
  41f1bc:	cmp	w0, #0x7
  41f1c0:	b.ne	41f274 <nftw@plt+0x1c584>  // b.any
  41f1c4:	cbnz	w26, 41f26c <nftw@plt+0x1c57c>
  41f1c8:	ldr	w0, [sp, #104]
  41f1cc:	cbz	w0, 41f264 <nftw@plt+0x1c574>
  41f1d0:	add	x0, sp, #0x200
  41f1d4:	stp	x27, x25, [sp, #328]
  41f1d8:	add	x8, sp, #0xf0
  41f1dc:	strh	wzr, [sp, #344]
  41f1e0:	ldp	x0, x1, [x0, #-184]
  41f1e4:	stp	x0, x1, [sp, #208]
  41f1e8:	ldr	x0, [sp, #344]
  41f1ec:	mov	x1, x24
  41f1f0:	str	x0, [sp, #224]
  41f1f4:	add	x0, sp, #0xd0
  41f1f8:	bl	41cb74 <nftw@plt+0x19e84>
  41f1fc:	ldp	x10, x0, [sp, #240]
  41f200:	stp	x10, x0, [sp, #328]
  41f204:	ldr	x5, [sp, #256]
  41f208:	str	x5, [sp, #344]
  41f20c:	mov	x27, x10
  41f210:	mov	x25, x0
  41f214:	and	w26, w5, #0xff
  41f218:	mov	x1, x25
  41f21c:	mov	x2, x24
  41f220:	mov	x0, x27
  41f224:	bl	41ce18 <nftw@plt+0x1a128>
  41f228:	ldr	w1, [sp, #104]
  41f22c:	eor	w1, w1, #0x1
  41f230:	and	w1, w1, #0xff
  41f234:	cmp	w1, w0, uxtb
  41f238:	b.eq	41f24c <nftw@plt+0x1c55c>  // b.none
  41f23c:	orr	x0, x27, x25
  41f240:	cmp	x0, #0x0
  41f244:	cset	w0, ne  // ne = any
  41f248:	str	w0, [sp, #100]
  41f24c:	ldr	w7, [sp, #100]
  41f250:	strb	w26, [sp, #344]
  41f254:	strb	w7, [sp, #345]
  41f258:	stp	x27, x25, [sp, #328]
  41f25c:	ldr	x0, [sp, #344]
  41f260:	b	41f040 <nftw@plt+0x1c350>
  41f264:	ldr	w26, [sp, #104]
  41f268:	b	41f218 <nftw@plt+0x1c528>
  41f26c:	mov	w7, #0x0                   	// #0
  41f270:	b	41f250 <nftw@plt+0x1c560>
  41f274:	ldr	w0, [sp, #108]
  41f278:	cbz	w0, 41f2e8 <nftw@plt+0x1c5f8>
  41f27c:	add	x0, sp, #0x200
  41f280:	stp	x12, x18, [sp, #280]
  41f284:	add	x8, sp, #0xf0
  41f288:	strb	w26, [sp, #296]
  41f28c:	strb	wzr, [sp, #297]
  41f290:	ldp	x0, x1, [x0, #-232]
  41f294:	stp	x0, x1, [sp, #208]
  41f298:	ldr	x0, [sp, #296]
  41f29c:	mov	x1, x24
  41f2a0:	str	x0, [sp, #224]
  41f2a4:	add	x0, sp, #0xd0
  41f2a8:	bl	41cb74 <nftw@plt+0x19e84>
  41f2ac:	ldp	x12, x0, [sp, #240]
  41f2b0:	stp	x12, x0, [sp, #280]
  41f2b4:	ldr	x9, [sp, #256]
  41f2b8:	str	x9, [sp, #296]
  41f2bc:	mov	x18, x0
  41f2c0:	and	w26, w9, #0xff
  41f2c4:	ubfx	w7, w9, #8, #8
  41f2c8:	strb	w26, [sp, #296]
  41f2cc:	mov	x25, x18
  41f2d0:	strb	w7, [sp, #297]
  41f2d4:	mov	x27, x12
  41f2d8:	stp	x12, x18, [sp, #280]
  41f2dc:	ldr	x0, [sp, #296]
  41f2e0:	str	x0, [sp, #392]
  41f2e4:	b	41f044 <nftw@plt+0x1c354>
  41f2e8:	mov	w7, #0x0                   	// #0
  41f2ec:	b	41f2c8 <nftw@plt+0x1c5d8>
  41f2f0:	ldp	x1, x0, [x19, #-32]
  41f2f4:	sub	x24, x19, #0x28
  41f2f8:	orr	x0, x0, x1
  41f2fc:	cbz	x0, 41f56c <nftw@plt+0x1c87c>
  41f300:	ldr	w0, [x28, #28]
  41f304:	sub	w0, w0, #0x1
  41f308:	str	w0, [x28, #28]
  41f30c:	mov	w0, #0x1                   	// #1
  41f310:	and	x0, x0, #0xff
  41f314:	stp	xzr, x0, [x24, #8]
  41f318:	ldr	w0, [x19, #32]
  41f31c:	strb	wzr, [x24, #24]
  41f320:	strb	wzr, [x24, #25]
  41f324:	str	w0, [x24, #32]
  41f328:	mov	x19, x24
  41f32c:	b	41e724 <nftw@plt+0x1ba34>
  41f330:	ldp	x1, x0, [x19, #-32]
  41f334:	sub	x24, x19, #0x28
  41f338:	orr	x0, x0, x1
  41f33c:	cbnz	x0, 41f56c <nftw@plt+0x1c87c>
  41f340:	ldr	w0, [x28, #28]
  41f344:	sub	w0, w0, #0x1
  41f348:	str	w0, [x28, #28]
  41f34c:	mov	w0, #0x0                   	// #0
  41f350:	b	41f310 <nftw@plt+0x1c620>
  41f354:	cmp	w20, #0x15
  41f358:	b.eq	41f380 <nftw@plt+0x1c690>  // b.none
  41f35c:	ldr	x0, [x19]
  41f360:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f364:	add	x4, x4, #0x56b
  41f368:	mov	w3, #0x0                   	// #0
  41f36c:	ldr	w2, [x0]
  41f370:	mov	x0, x28
  41f374:	mov	w1, #0x3                   	// #3
  41f378:	bl	41c1d0 <nftw@plt+0x194e0>
  41f37c:	b	41e620 <nftw@plt+0x1b930>
  41f380:	ldr	x1, [x19, #24]
  41f384:	sub	x0, x19, #0x28
  41f388:	stur	x1, [x19, #-16]
  41f38c:	ldr	w1, [x19, #32]
  41f390:	ldp	x2, x3, [x19, #8]
  41f394:	stp	x2, x3, [x19, #-32]
  41f398:	stur	w1, [x19, #-8]
  41f39c:	mov	x19, x0
  41f3a0:	b	41e088 <nftw@plt+0x1b398>
  41f3a4:	ldp	x1, x0, [x19, #-72]
  41f3a8:	sub	x24, x19, #0x50
  41f3ac:	add	x4, x24, #0x8
  41f3b0:	orr	x0, x0, x1
  41f3b4:	sub	x1, x19, #0x28
  41f3b8:	cbz	x0, 41f3f4 <nftw@plt+0x1c704>
  41f3bc:	ldr	w0, [x28, #28]
  41f3c0:	ldp	x2, x3, [x19, #-32]
  41f3c4:	sub	w0, w0, #0x1
  41f3c8:	str	w0, [x28, #28]
  41f3cc:	stp	x2, x3, [x19, #-72]
  41f3d0:	ldr	x0, [x1, #24]
  41f3d4:	str	x0, [x4, #16]
  41f3d8:	ldur	w0, [x19, #-8]
  41f3dc:	stur	w0, [x19, #-48]
  41f3e0:	ldrb	w0, [x1, #24]
  41f3e4:	cbnz	w0, 41f3ec <nftw@plt+0x1c6fc>
  41f3e8:	ldrb	w0, [x19, #24]
  41f3ec:	strb	w0, [x24, #24]
  41f3f0:	b	41f328 <nftw@plt+0x1c638>
  41f3f4:	ldp	x2, x3, [x19, #8]
  41f3f8:	stp	x2, x3, [x19, #-72]
  41f3fc:	ldr	x0, [x19, #24]
  41f400:	str	x0, [x4, #16]
  41f404:	ldr	w0, [x19, #32]
  41f408:	b	41f3dc <nftw@plt+0x1c6ec>
  41f40c:	sub	w0, w20, #0x12
  41f410:	cmp	w0, #0x1
  41f414:	b.ls	41f504 <nftw@plt+0x1c814>  // b.plast
  41f418:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f41c:	add	x2, x2, #0x585
  41f420:	mov	x0, x28
  41f424:	mov	w1, #0x3                   	// #3
  41f428:	bl	41c014 <nftw@plt+0x19324>
  41f42c:	b	41e620 <nftw@plt+0x1b930>
  41f430:	cmp	w20, #0x15
  41f434:	b.ne	41f504 <nftw@plt+0x1c814>  // b.any
  41f438:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f43c:	add	x2, x2, #0x5cb
  41f440:	b	41f420 <nftw@plt+0x1c730>
  41f444:	sub	w1, w20, #0xf
  41f448:	cmp	w1, #0x6
  41f44c:	b.hi	41f490 <nftw@plt+0x1c7a0>  // b.pmore
  41f450:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41f454:	add	x0, x0, #0xcd0
  41f458:	ldrh	w0, [x0, w1, uxtw #1]
  41f45c:	adr	x1, 41f468 <nftw@plt+0x1c778>
  41f460:	add	x0, x1, w0, sxth #2
  41f464:	br	x0
  41f468:	ldp	x1, x0, [x19, #8]
  41f46c:	orr	x0, x0, x1
  41f470:	cbz	x0, 41f490 <nftw@plt+0x1c7a0>
  41f474:	ldr	w0, [x28, #28]
  41f478:	add	w0, w0, #0x1
  41f47c:	str	w0, [x28, #28]
  41f480:	b	41f490 <nftw@plt+0x1c7a0>
  41f484:	ldp	x1, x0, [x19, #8]
  41f488:	orr	x0, x0, x1
  41f48c:	cbz	x0, 41f474 <nftw@plt+0x1c784>
  41f490:	ldr	x0, [x28, #1104]
  41f494:	add	x19, x19, #0x28
  41f498:	cmp	x0, x19
  41f49c:	b.ne	41f4ac <nftw@plt+0x1c7bc>  // b.any
  41f4a0:	mov	x0, x28
  41f4a4:	bl	41dfdc <nftw@plt+0x1b2ec>
  41f4a8:	mov	x19, x0
  41f4ac:	mov	w21, #0x1                   	// #1
  41f4b0:	str	x23, [x19]
  41f4b4:	stp	w22, w20, [x19, #32]
  41f4b8:	b	41e088 <nftw@plt+0x1b398>
  41f4bc:	ldr	w0, [x19, #36]
  41f4c0:	cmp	w0, #0x11
  41f4c4:	b.eq	41f4d4 <nftw@plt+0x1c7e4>  // b.none
  41f4c8:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f4cc:	add	x4, x4, #0x5e5
  41f4d0:	b	41e664 <nftw@plt+0x1b974>
  41f4d4:	ldp	x2, x1, [x19, #-32]
  41f4d8:	ldr	w0, [x28, #28]
  41f4dc:	orr	x1, x1, x2
  41f4e0:	sub	w2, w0, #0x1
  41f4e4:	cmp	x1, #0x0
  41f4e8:	csinc	w0, w2, w0, eq  // eq = none
  41f4ec:	b	41f47c <nftw@plt+0x1c78c>
  41f4f0:	ldp	x1, x0, [x19, #8]
  41f4f4:	orr	x0, x0, x1
  41f4f8:	cmp	x0, #0x0
  41f4fc:	cset	w21, ne  // ne = any
  41f500:	b	41e148 <nftw@plt+0x1b458>
  41f504:	cmp	w20, #0x16
  41f508:	b.ne	41f444 <nftw@plt+0x1c754>  // b.any
  41f50c:	ldr	x0, [x28, #432]
  41f510:	cbz	x0, 41f52c <nftw@plt+0x1c83c>
  41f514:	ldp	w1, w0, [sp, #128]
  41f518:	eor	w0, w0, #0x1
  41f51c:	cmp	w1, #0x3
  41f520:	csinc	w0, w0, wzr, eq  // eq = none
  41f524:	cbz	w0, 41f52c <nftw@plt+0x1c83c>
  41f528:	str	xzr, [x28, #432]
  41f52c:	ldr	x0, [x28, #1096]
  41f530:	cmp	x0, x19
  41f534:	b.eq	41f4f0 <nftw@plt+0x1c800>  // b.none
  41f538:	ldr	w1, [sp, #136]
  41f53c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f540:	adrp	x5, 455000 <_obstack_memory_used@@Base+0x17fa8>
  41f544:	add	x0, x0, #0x20d
  41f548:	cmp	w1, #0x0
  41f54c:	add	x5, x5, #0xd8d
  41f550:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f554:	ldr	w2, [x19, #32]
  41f558:	add	x4, x4, #0x600
  41f55c:	csel	x5, x5, x0, ne  // ne = any
  41f560:	mov	w3, #0x0                   	// #0
  41f564:	mov	w1, #0x4                   	// #4
  41f568:	b	41e0f8 <nftw@plt+0x1b408>
  41f56c:	ldp	x1, x0, [x19, #8]
  41f570:	orr	x0, x0, x1
  41f574:	cmp	x0, #0x0
  41f578:	cset	w0, ne  // ne = any
  41f57c:	b	41f310 <nftw@plt+0x1c620>
  41f580:	ldrb	w4, [x0, #16]
  41f584:	ldp	x2, x3, [x0]
  41f588:	cbnz	w4, 41f5bc <nftw@plt+0x1c8cc>
  41f58c:	cmp	x1, #0x40
  41f590:	b.ls	41f5d4 <nftw@plt+0x1c8e4>  // b.plast
  41f594:	sub	x1, x1, #0x40
  41f598:	cmp	x1, #0x3f
  41f59c:	b.hi	41f5bc <nftw@plt+0x1c8cc>  // b.pmore
  41f5a0:	sub	w4, w1, #0x1
  41f5a4:	lsr	x4, x2, x4
  41f5a8:	tbz	w4, #0, 41f5bc <nftw@plt+0x1c8cc>
  41f5ac:	neg	w1, w1
  41f5b0:	mov	x4, #0xffffffffffffffff    	// #-1
  41f5b4:	lsr	x1, x4, x1
  41f5b8:	orn	x2, x2, x1
  41f5bc:	stp	x2, x3, [x0]
  41f5c0:	ldp	x2, x3, [x0]
  41f5c4:	stp	x2, x3, [x8]
  41f5c8:	ldr	x0, [x0, #16]
  41f5cc:	str	x0, [x8, #16]
  41f5d0:	ret
  41f5d4:	sub	w4, w1, #0x1
  41f5d8:	lsr	x4, x3, x4
  41f5dc:	tbz	w4, #0, 41f5bc <nftw@plt+0x1c8cc>
  41f5e0:	cmp	x1, #0x40
  41f5e4:	mov	x2, #0xffffffffffffffff    	// #-1
  41f5e8:	b.eq	41f5bc <nftw@plt+0x1c8cc>  // b.none
  41f5ec:	neg	w1, w1
  41f5f0:	lsr	x1, x2, x1
  41f5f4:	orn	x3, x3, x1
  41f5f8:	b	41f5bc <nftw@plt+0x1c8cc>
  41f5fc:	ldr	x1, [x0, #24]
  41f600:	ldr	x0, [x0, #8]
  41f604:	cbz	x0, 41f610 <nftw@plt+0x1c920>
  41f608:	ldr	x0, [x1]
  41f60c:	b	43c9e0 <nftw@plt+0x39cf0>
  41f610:	ldr	x0, [x1, #8]
  41f614:	b	41f60c <nftw@plt+0x1c91c>
  41f618:	stp	x29, x30, [sp, #-32]!
  41f61c:	mov	x29, sp
  41f620:	str	x19, [sp, #16]
  41f624:	mov	x19, x0
  41f628:	ldr	x0, [x0, #48]
  41f62c:	bl	402a80 <free@plt>
  41f630:	ldr	x0, [x19]
  41f634:	bl	402a80 <free@plt>
  41f638:	ldr	x0, [x19, #8]
  41f63c:	bl	402a80 <free@plt>
  41f640:	mov	x0, x19
  41f644:	ldr	x19, [sp, #16]
  41f648:	ldp	x29, x30, [sp], #32
  41f64c:	b	402a80 <free@plt>
  41f650:	stp	x29, x30, [sp, #-32]!
  41f654:	mov	x29, sp
  41f658:	ldr	x0, [x0]
  41f65c:	stp	x19, x20, [sp, #16]
  41f660:	mov	x19, x1
  41f664:	ldr	x1, [x0, #8]
  41f668:	cbz	x1, 41f6c0 <nftw@plt+0x1c9d0>
  41f66c:	ldr	x20, [x0, #24]
  41f670:	ldrb	w0, [x20, #210]
  41f674:	cbnz	w0, 41f6c0 <nftw@plt+0x1c9d0>
  41f678:	ldr	x0, [x20, #56]
  41f67c:	cbnz	x0, 41f6c0 <nftw@plt+0x1c9d0>
  41f680:	ldrh	w0, [x20, #208]
  41f684:	cmp	w0, #0x1
  41f688:	b.ne	41f6c0 <nftw@plt+0x1c9d0>  // b.any
  41f68c:	ldrb	w0, [x20, #212]
  41f690:	cbnz	w0, 41f6c0 <nftw@plt+0x1c9d0>
  41f694:	ldr	x0, [x19]
  41f698:	cbnz	x0, 41f6ac <nftw@plt+0x1c9bc>
  41f69c:	ldr	x0, [x19, #8]
  41f6a0:	mov	x1, #0x8                   	// #8
  41f6a4:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  41f6a8:	stp	x0, xzr, [x19]
  41f6ac:	ldp	x1, x0, [x19]
  41f6b0:	add	x2, x0, #0x1
  41f6b4:	str	x2, [x19, #8]
  41f6b8:	ldr	x2, [x20, #8]
  41f6bc:	str	x2, [x1, x0, lsl #3]
  41f6c0:	mov	w0, #0x1                   	// #1
  41f6c4:	ldp	x19, x20, [sp, #16]
  41f6c8:	ldp	x29, x30, [sp], #32
  41f6cc:	ret
  41f6d0:	stp	x29, x30, [sp, #-16]!
  41f6d4:	mov	x29, sp
  41f6d8:	bl	43bcf4 <nftw@plt+0x39004>
  41f6dc:	cmp	w0, #0x0
  41f6e0:	cset	w0, eq  // eq = none
  41f6e4:	ldp	x29, x30, [sp], #16
  41f6e8:	ret
  41f6ec:	stp	x29, x30, [sp, #-16]!
  41f6f0:	mov	x29, sp
  41f6f4:	ldr	x2, [x0, #24]
  41f6f8:	ldr	x0, [x0, #8]
  41f6fc:	cbz	x0, 41f718 <nftw@plt+0x1ca28>
  41f700:	ldr	x0, [x2]
  41f704:	bl	43bcf4 <nftw@plt+0x39004>
  41f708:	cmp	w0, #0x0
  41f70c:	cset	w0, eq  // eq = none
  41f710:	ldp	x29, x30, [sp], #16
  41f714:	ret
  41f718:	ldr	x0, [x2, #8]
  41f71c:	b	41f704 <nftw@plt+0x1ca14>
  41f720:	stp	x29, x30, [sp, #-64]!
  41f724:	mov	x29, sp
  41f728:	stp	x19, x20, [sp, #16]
  41f72c:	ldr	w19, [x1, #16]
  41f730:	stp	x21, x22, [sp, #32]
  41f734:	mov	x22, x1
  41f738:	str	x23, [sp, #48]
  41f73c:	mov	x23, x0
  41f740:	bl	402630 <strlen@plt>
  41f744:	mov	x21, x0
  41f748:	add	x0, x19, #0x2
  41f74c:	add	x0, x0, x21
  41f750:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41f754:	ldr	x1, [x22, #8]
  41f758:	mov	x20, x0
  41f75c:	mov	x2, x19
  41f760:	bl	4025d0 <memcpy@plt>
  41f764:	cbz	x19, 41f784 <nftw@plt+0x1ca94>
  41f768:	add	x0, x20, x19
  41f76c:	ldurb	w0, [x0, #-1]
  41f770:	cmp	w0, #0x2f
  41f774:	b.eq	41f784 <nftw@plt+0x1ca94>  // b.none
  41f778:	mov	w0, #0x2f                  	// #47
  41f77c:	strb	w0, [x20, x19]
  41f780:	add	x19, x19, #0x1
  41f784:	add	x2, x21, #0x1
  41f788:	mov	x1, x23
  41f78c:	add	x0, x20, x19
  41f790:	bl	4025d0 <memcpy@plt>
  41f794:	mov	x0, x20
  41f798:	ldp	x19, x20, [sp, #16]
  41f79c:	ldp	x21, x22, [sp, #32]
  41f7a0:	ldr	x23, [sp, #48]
  41f7a4:	ldp	x29, x30, [sp], #64
  41f7a8:	ret
  41f7ac:	stp	x29, x30, [sp, #-80]!
  41f7b0:	mov	x29, sp
  41f7b4:	stp	x19, x20, [sp, #16]
  41f7b8:	stp	x21, x22, [sp, #32]
  41f7bc:	mov	w21, w0
  41f7c0:	mov	x0, #0x15                  	// #21
  41f7c4:	stp	x23, x24, [sp, #48]
  41f7c8:	mov	x23, x1
  41f7cc:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41f7d0:	str	x25, [sp, #64]
  41f7d4:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41f7d8:	add	x24, x24, #0xae
  41f7dc:	mov	x20, x0
  41f7e0:	and	x0, x21, #0xff
  41f7e4:	mov	x19, x20
  41f7e8:	ldrh	w0, [x24, x0, lsl #1]
  41f7ec:	tst	w0, #0xc00
  41f7f0:	b.ne	41f850 <nftw@plt+0x1cb60>  // b.any
  41f7f4:	mov	w22, #0x14                  	// #20
  41f7f8:	strb	w21, [x19], #1
  41f7fc:	mov	x0, x23
  41f800:	bl	402900 <getc_unlocked@plt>
  41f804:	mov	w21, w0
  41f808:	cmn	w0, #0x1
  41f80c:	b.eq	41f850 <nftw@plt+0x1cb60>  // b.none
  41f810:	and	x0, x0, #0xff
  41f814:	ldrh	w0, [x24, x0, lsl #1]
  41f818:	tst	w0, #0xc00
  41f81c:	b.ne	41f850 <nftw@plt+0x1cb60>  // b.any
  41f820:	sub	x25, x19, x20
  41f824:	cmp	x25, w22, sxtw
  41f828:	b.ne	41f848 <nftw@plt+0x1cb58>  // b.any
  41f82c:	lsl	w22, w22, #1
  41f830:	mov	x0, x20
  41f834:	add	w1, w22, #0x1
  41f838:	sxtw	x1, w1
  41f83c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  41f840:	mov	x20, x0
  41f844:	add	x19, x0, x25
  41f848:	strb	w21, [x19], #1
  41f84c:	b	41f7fc <nftw@plt+0x1cb0c>
  41f850:	strb	wzr, [x19]
  41f854:	mov	x1, x23
  41f858:	mov	w0, w21
  41f85c:	bl	402a90 <ungetc@plt>
  41f860:	mov	x0, x20
  41f864:	ldp	x19, x20, [sp, #16]
  41f868:	ldp	x21, x22, [sp, #32]
  41f86c:	ldp	x23, x24, [sp, #48]
  41f870:	ldr	x25, [sp, #64]
  41f874:	ldp	x29, x30, [sp], #80
  41f878:	ret
  41f87c:	stp	x29, x30, [sp, #-80]!
  41f880:	mov	x29, sp
  41f884:	stp	x19, x20, [sp, #16]
  41f888:	mov	x20, x0
  41f88c:	ldr	w19, [x0, #16]
  41f890:	stp	x21, x22, [sp, #32]
  41f894:	add	x0, x19, #0x1b
  41f898:	ldr	x1, [x20, #8]
  41f89c:	and	x0, x0, #0x1fffffff0
  41f8a0:	stp	x23, x24, [sp, #48]
  41f8a4:	mov	x2, x19
  41f8a8:	stp	x25, x26, [sp, #64]
  41f8ac:	sub	sp, sp, x0
  41f8b0:	mov	x21, sp
  41f8b4:	mov	x0, x21
  41f8b8:	bl	4025d0 <memcpy@plt>
  41f8bc:	cbz	x19, 41f8dc <nftw@plt+0x1cbec>
  41f8c0:	add	x0, x21, x19
  41f8c4:	ldurb	w0, [x0, #-1]
  41f8c8:	cmp	w0, #0x2f
  41f8cc:	b.eq	41f8dc <nftw@plt+0x1cbec>  // b.none
  41f8d0:	mov	w0, #0x2f                  	// #47
  41f8d4:	strb	w0, [x21, x19]
  41f8d8:	add	x19, x19, #0x1
  41f8dc:	add	x0, x21, x19
  41f8e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41f8e4:	add	x1, x1, #0x72b
  41f8e8:	bl	402b00 <strcpy@plt>
  41f8ec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  41f8f0:	add	x1, x1, #0xf69
  41f8f4:	mov	x0, x21
  41f8f8:	bl	43bdf8 <nftw@plt+0x39108>
  41f8fc:	mov	x21, x0
  41f900:	mov	x0, #0x48                  	// #72
  41f904:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41f908:	str	x0, [x20, #32]
  41f90c:	mov	x19, #0x0                   	// #0
  41f910:	cbnz	x21, 41f9f4 <nftw@plt+0x1cd04>
  41f914:	ldr	x0, [x20, #32]
  41f918:	str	xzr, [x0, x19, lsl #3]
  41f91c:	mov	sp, x29
  41f920:	ldp	x19, x20, [sp, #16]
  41f924:	ldp	x21, x22, [sp, #32]
  41f928:	ldp	x23, x24, [sp, #48]
  41f92c:	ldp	x25, x26, [sp, #64]
  41f930:	ldp	x29, x30, [sp], #80
  41f934:	ret
  41f938:	mov	x19, x25
  41f93c:	mov	x0, x21
  41f940:	bl	402900 <getc_unlocked@plt>
  41f944:	mov	w22, w0
  41f948:	cmn	w0, #0x1
  41f94c:	b.eq	41fa1c <nftw@plt+0x1cd2c>  // b.none
  41f950:	and	x0, x0, #0xff
  41f954:	ldrh	w0, [x24, x0, lsl #1]
  41f958:	tst	w0, #0xc00
  41f95c:	b.ne	41f93c <nftw@plt+0x1cc4c>  // b.any
  41f960:	add	x25, x19, #0x2
  41f964:	cmp	x25, x23
  41f968:	b.ls	41f980 <nftw@plt+0x1cc90>  // b.plast
  41f96c:	ldr	x0, [x20, #32]
  41f970:	add	x23, x23, #0x8
  41f974:	lsl	x1, x23, #3
  41f978:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  41f97c:	str	x0, [x20, #32]
  41f980:	ldr	x26, [x20, #32]
  41f984:	lsl	x19, x19, #3
  41f988:	mov	x1, x21
  41f98c:	mov	w0, w22
  41f990:	bl	41f7ac <nftw@plt+0x1cabc>
  41f994:	str	x0, [x26, x19]
  41f998:	mov	x0, x21
  41f99c:	bl	402900 <getc_unlocked@plt>
  41f9a0:	cmn	w0, #0x1
  41f9a4:	b.eq	41f9b4 <nftw@plt+0x1ccc4>  // b.none
  41f9a8:	and	x1, x0, #0xff
  41f9ac:	ldrh	w1, [x24, x1, lsl #1]
  41f9b0:	tbnz	w1, #0, 41f998 <nftw@plt+0x1cca8>
  41f9b4:	mov	x1, x21
  41f9b8:	bl	41f7ac <nftw@plt+0x1cabc>
  41f9bc:	ldrb	w1, [x0]
  41f9c0:	mov	x22, x0
  41f9c4:	add	x19, x19, #0x8
  41f9c8:	cmp	w1, #0x2f
  41f9cc:	ldr	x26, [x20, #32]
  41f9d0:	b.ne	41fa04 <nftw@plt+0x1cd14>  // b.any
  41f9d4:	str	x0, [x26, x19]
  41f9d8:	mov	x0, x21
  41f9dc:	bl	402900 <getc_unlocked@plt>
  41f9e0:	cmp	w0, #0xa
  41f9e4:	b.eq	41f938 <nftw@plt+0x1cc48>  // b.none
  41f9e8:	cmn	w0, #0x1
  41f9ec:	b.ne	41f9d8 <nftw@plt+0x1cce8>  // b.any
  41f9f0:	b	41f938 <nftw@plt+0x1cc48>
  41f9f4:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  41f9f8:	mov	x23, #0x9                   	// #9
  41f9fc:	add	x24, x24, #0xae
  41fa00:	b	41f93c <nftw@plt+0x1cc4c>
  41fa04:	mov	x1, x20
  41fa08:	bl	41f720 <nftw@plt+0x1ca30>
  41fa0c:	str	x0, [x26, x19]
  41fa10:	mov	x0, x22
  41fa14:	bl	402a80 <free@plt>
  41fa18:	b	41f9d8 <nftw@plt+0x1cce8>
  41fa1c:	mov	x0, x21
  41fa20:	bl	402760 <fclose@plt>
  41fa24:	b	41f914 <nftw@plt+0x1cc24>
  41fa28:	ldr	x0, [x0]
  41fa2c:	ldr	x1, [x1]
  41fa30:	b	402a00 <strcmp@plt>
  41fa34:	stp	x29, x30, [sp, #-32]!
  41fa38:	mov	x29, sp
  41fa3c:	str	x19, [sp, #16]
  41fa40:	mov	x19, x0
  41fa44:	ldr	x0, [x0, #8]
  41fa48:	ldrb	w1, [x0]
  41fa4c:	cbnz	w1, 41fa90 <nftw@plt+0x1cda0>
  41fa50:	str	wzr, [x19, #200]
  41fa54:	ldr	w0, [x19, #200]
  41fa58:	cmn	w0, #0x1
  41fa5c:	b.eq	41fad4 <nftw@plt+0x1cde4>  // b.none
  41fa60:	add	x1, x19, #0x48
  41fa64:	bl	44da18 <_obstack_memory_used@@Base+0x109c0>
  41fa68:	cbnz	w0, 41fab0 <nftw@plt+0x1cdc0>
  41fa6c:	ldr	w0, [x19, #88]
  41fa70:	and	w0, w0, #0xf000
  41fa74:	cmp	w0, #0x4, lsl #12
  41fa78:	b.eq	41faa4 <nftw@plt+0x1cdb4>  // b.none
  41fa7c:	mov	w0, #0x1                   	// #1
  41fa80:	str	wzr, [x19, #204]
  41fa84:	ldr	x19, [sp, #16]
  41fa88:	ldp	x29, x30, [sp], #32
  41fa8c:	ret
  41fa90:	mov	w2, #0x1b6                 	// #438
  41fa94:	mov	w1, #0x100                 	// #256
  41fa98:	bl	4027d0 <open@plt>
  41fa9c:	str	w0, [x19, #200]
  41faa0:	b	41fa54 <nftw@plt+0x1cd64>
  41faa4:	bl	402c20 <__errno_location@plt>
  41faa8:	mov	w1, #0x2                   	// #2
  41faac:	str	w1, [x0]
  41fab0:	ldr	w0, [x19, #200]
  41fab4:	bl	402920 <close@plt>
  41fab8:	mov	w0, #0xffffffff            	// #-1
  41fabc:	str	w0, [x19, #200]
  41fac0:	bl	402c20 <__errno_location@plt>
  41fac4:	ldr	w0, [x0]
  41fac8:	str	w0, [x19, #204]
  41facc:	mov	w0, #0x0                   	// #0
  41fad0:	b	41fa84 <nftw@plt+0x1cd94>
  41fad4:	bl	402c20 <__errno_location@plt>
  41fad8:	ldr	w1, [x0]
  41fadc:	cmp	w1, #0x14
  41fae0:	b.ne	41fac0 <nftw@plt+0x1cdd0>  // b.any
  41fae4:	mov	w1, #0x2                   	// #2
  41fae8:	str	w1, [x0]
  41faec:	b	41fac0 <nftw@plt+0x1cdd0>
  41faf0:	stp	x29, x30, [sp, #-80]!
  41faf4:	mov	x29, sp
  41faf8:	stp	x19, x20, [sp, #16]
  41fafc:	mov	x20, x0
  41fb00:	mov	x19, x1
  41fb04:	stp	x21, x22, [sp, #32]
  41fb08:	mov	x0, x1
  41fb0c:	mov	x22, x2
  41fb10:	stp	x23, x24, [sp, #48]
  41fb14:	stp	x25, x26, [sp, #64]
  41fb18:	ldr	x24, [x1, #8]
  41fb1c:	str	x2, [x1, #8]
  41fb20:	bl	41fa34 <nftw@plt+0x1cd44>
  41fb24:	ands	w21, w0, #0xff
  41fb28:	b.eq	41fbb4 <nftw@plt+0x1cec4>  // b.none
  41fb2c:	ldr	w2, [x19, #200]
  41fb30:	mov	x1, x22
  41fb34:	ldr	x3, [x20, #968]
  41fb38:	mov	x0, x20
  41fb3c:	blr	x3
  41fb40:	and	w21, w0, #0x1
  41fb44:	mov	w25, w21
  41fb48:	tbnz	w0, #0, 41fb5c <nftw@plt+0x1ce6c>
  41fb4c:	ldr	w0, [x19, #200]
  41fb50:	bl	402920 <close@plt>
  41fb54:	mov	w0, #0xffffffff            	// #-1
  41fb58:	str	w0, [x19, #200]
  41fb5c:	ldrb	w0, [x20, #1131]
  41fb60:	cbz	w0, 41fbb4 <nftw@plt+0x1cec4>
  41fb64:	mov	w23, #0x1                   	// #1
  41fb68:	adrp	x26, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  41fb6c:	ldr	x1, [x20, #40]
  41fb70:	ldr	x0, [x26, #1416]
  41fb74:	ldr	w1, [x1, #48]
  41fb78:	cmp	w1, w23
  41fb7c:	b.ls	41fb94 <nftw@plt+0x1cea4>  // b.plast
  41fb80:	mov	x1, x0
  41fb84:	add	w23, w23, #0x1
  41fb88:	mov	w0, #0x2e                  	// #46
  41fb8c:	bl	402740 <putc_unlocked@plt>
  41fb90:	b	41fb6c <nftw@plt+0x1ce7c>
  41fb94:	cmp	w25, #0x0
  41fb98:	mov	w1, #0x78                  	// #120
  41fb9c:	mov	w2, #0x21                  	// #33
  41fba0:	mov	x3, x22
  41fba4:	csel	w2, w2, w1, ne  // ne = any
  41fba8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41fbac:	add	x1, x1, #0x617
  41fbb0:	bl	402cb0 <fprintf@plt>
  41fbb4:	mov	w0, w21
  41fbb8:	ldp	x21, x22, [sp, #32]
  41fbbc:	ldp	x25, x26, [sp, #64]
  41fbc0:	str	x24, [x19, #8]
  41fbc4:	ldp	x19, x20, [sp, #16]
  41fbc8:	ldp	x23, x24, [sp, #48]
  41fbcc:	ldp	x29, x30, [sp], #80
  41fbd0:	ret
  41fbd4:	stp	x29, x30, [sp, #-64]!
  41fbd8:	mov	x29, sp
  41fbdc:	stp	x19, x20, [sp, #16]
  41fbe0:	mov	x19, x0
  41fbe4:	mov	x20, x1
  41fbe8:	ldr	x0, [x0, #40]
  41fbec:	stp	x21, x22, [sp, #32]
  41fbf0:	mov	w21, w3
  41fbf4:	stp	x23, x24, [sp, #48]
  41fbf8:	mov	w23, w2
  41fbfc:	ldr	w0, [x0, #60]
  41fc00:	cmp	w0, #0x1
  41fc04:	b.ls	41fc90 <nftw@plt+0x1cfa0>  // b.plast
  41fc08:	ldr	x0, [x19]
  41fc0c:	cbz	x0, 41fc90 <nftw@plt+0x1cfa0>
  41fc10:	ldrb	w22, [x0, #106]
  41fc14:	ldrb	w0, [x19, #26]
  41fc18:	cbnz	w0, 41fcbc <nftw@plt+0x1cfcc>
  41fc1c:	bl	402c20 <__errno_location@plt>
  41fc20:	orr	w22, w22, w23
  41fc24:	ldr	w1, [x20, #204]
  41fc28:	cmp	w22, #0x0
  41fc2c:	ldr	w24, [x19, #1200]
  41fc30:	str	w1, [x0]
  41fc34:	cset	w0, ne  // ne = any
  41fc38:	cmp	w24, w0
  41fc3c:	b.le	41fc98 <nftw@plt+0x1cfa8>
  41fc40:	ldrb	w0, [x19, #1204]
  41fc44:	cbz	w0, 41fc64 <nftw@plt+0x1cf74>
  41fc48:	cmp	w1, #0x2
  41fc4c:	b.ne	41fc64 <nftw@plt+0x1cf74>  // b.any
  41fc50:	ldr	x1, [x20]
  41fc54:	ldr	x0, [x19, #712]
  41fc58:	bl	42bc34 <nftw@plt+0x28f44>
  41fc5c:	ldrb	w0, [x19, #1207]
  41fc60:	cbz	w0, 41fcbc <nftw@plt+0x1cfcc>
  41fc64:	ldr	x2, [x20, #8]
  41fc68:	cbnz	x2, 41fc70 <nftw@plt+0x1cf80>
  41fc6c:	ldr	x2, [x20]
  41fc70:	mov	w3, w21
  41fc74:	mov	w1, #0x6                   	// #6
  41fc78:	mov	x0, x19
  41fc7c:	ldp	x19, x20, [sp, #16]
  41fc80:	ldp	x21, x22, [sp, #32]
  41fc84:	ldp	x23, x24, [sp, #48]
  41fc88:	ldp	x29, x30, [sp], #64
  41fc8c:	b	41c518 <nftw@plt+0x19828>
  41fc90:	mov	w22, #0x0                   	// #0
  41fc94:	b	41fc14 <nftw@plt+0x1cf24>
  41fc98:	cbz	w24, 41fc64 <nftw@plt+0x1cf74>
  41fc9c:	ldrb	w0, [x19, #1207]
  41fca0:	cbnz	w0, 41fc64 <nftw@plt+0x1cf74>
  41fca4:	ldr	x2, [x20, #8]
  41fca8:	cbnz	x2, 41fcb0 <nftw@plt+0x1cfc0>
  41fcac:	ldr	x2, [x20]
  41fcb0:	mov	w3, w21
  41fcb4:	mov	w1, #0x0                   	// #0
  41fcb8:	b	41fc78 <nftw@plt+0x1cf88>
  41fcbc:	ldp	x19, x20, [sp, #16]
  41fcc0:	ldp	x21, x22, [sp, #32]
  41fcc4:	ldp	x23, x24, [sp, #48]
  41fcc8:	ldp	x29, x30, [sp], #64
  41fccc:	ret
  41fcd0:	mov	x2, #0x20                  	// #32
  41fcd4:	b	4029c0 <memcmp@plt>
  41fcd8:	stp	x29, x30, [sp, #-32]!
  41fcdc:	mov	x29, sp
  41fce0:	str	x19, [sp, #16]
  41fce4:	mov	x19, x0
  41fce8:	ldr	x0, [x0, #312]
  41fcec:	ldr	w0, [x0]
  41fcf0:	cmp	w0, #0x7f
  41fcf4:	b.ne	41fd10 <nftw@plt+0x1d020>  // b.any
  41fcf8:	mov	x0, #0xff0                 	// #4080
  41fcfc:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41fd00:	ldr	x1, [x19, #312]
  41fd04:	str	wzr, [x0]
  41fd08:	str	x1, [x0, #8]
  41fd0c:	str	x0, [x19, #312]
  41fd10:	ldr	x0, [x19, #312]
  41fd14:	ldr	x19, [sp, #16]
  41fd18:	ldr	w1, [x0]
  41fd1c:	add	w2, w1, #0x1
  41fd20:	str	w2, [x0]
  41fd24:	ubfiz	x1, x1, #5, #32
  41fd28:	add	x1, x1, #0x10
  41fd2c:	add	x0, x0, x1
  41fd30:	ldp	x29, x30, [sp], #32
  41fd34:	ret
  41fd38:	stp	x29, x30, [sp, #-64]!
  41fd3c:	mov	x29, sp
  41fd40:	stp	x19, x20, [sp, #16]
  41fd44:	mov	x20, x0
  41fd48:	mov	x0, x1
  41fd4c:	stp	x21, x22, [sp, #32]
  41fd50:	mov	x21, x1
  41fd54:	ldr	x19, [x20, #304]
  41fd58:	str	x23, [sp, #48]
  41fd5c:	mov	w23, w2
  41fd60:	bl	43c9e0 <nftw@plt+0x39cf0>
  41fd64:	mov	x1, x21
  41fd68:	mov	w2, w0
  41fd6c:	mov	w3, #0x1                   	// #1
  41fd70:	mov	x0, x19
  41fd74:	bl	43c658 <nftw@plt+0x39968>
  41fd78:	mov	x22, x0
  41fd7c:	ldr	x0, [x0]
  41fd80:	cbz	x0, 41fdb0 <nftw@plt+0x1d0c0>
  41fd84:	ldr	x1, [x0, #8]
  41fd88:	cbnz	x1, 41fda8 <nftw@plt+0x1d0b8>
  41fd8c:	ldr	x19, [x0, #24]
  41fd90:	mov	x0, x19
  41fd94:	ldp	x19, x20, [sp, #16]
  41fd98:	ldp	x21, x22, [sp, #32]
  41fd9c:	ldr	x23, [sp, #48]
  41fda0:	ldp	x29, x30, [sp], #64
  41fda4:	ret
  41fda8:	ldr	x0, [x0]
  41fdac:	b	41fd80 <nftw@plt+0x1d090>
  41fdb0:	mov	x1, #0x40                  	// #64
  41fdb4:	mov	x0, #0x1                   	// #1
  41fdb8:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  41fdbc:	mov	x19, x0
  41fdc0:	ldr	x0, [x20, #200]
  41fdc4:	stp	x0, x21, [x19]
  41fdc8:	mov	x0, x21
  41fdcc:	bl	402630 <strlen@plt>
  41fdd0:	str	w0, [x19, #16]
  41fdd4:	strb	w23, [x19, #20]
  41fdd8:	mov	x0, x20
  41fddc:	str	xzr, [x19, #40]
  41fde0:	bl	41fcd8 <nftw@plt+0x1cfe8>
  41fde4:	ldr	x1, [x22]
  41fde8:	stp	x1, xzr, [x0]
  41fdec:	ldr	x1, [x20, #40]
  41fdf0:	ldr	w1, [x1, #56]
  41fdf4:	str	w1, [x0, #16]
  41fdf8:	str	x19, [x0, #24]
  41fdfc:	str	x0, [x22]
  41fe00:	b	41fd90 <nftw@plt+0x1d0a0>
  41fe04:	stp	x29, x30, [sp, #-48]!
  41fe08:	mov	x29, sp
  41fe0c:	stp	x19, x20, [sp, #16]
  41fe10:	mov	x19, x0
  41fe14:	stp	x21, x22, [sp, #32]
  41fe18:	ldrb	w0, [x1]
  41fe1c:	cmp	w0, #0x2f
  41fe20:	b.ne	41fe3c <nftw@plt+0x1d14c>  // b.any
  41fe24:	add	x20, x19, #0xd8
  41fe28:	mov	x0, x20
  41fe2c:	ldp	x19, x20, [sp, #16]
  41fe30:	ldp	x21, x22, [sp, #32]
  41fe34:	ldp	x29, x30, [sp], #48
  41fe38:	ret
  41fe3c:	ldr	x0, [x19]
  41fe40:	cbnz	x0, 41fe88 <nftw@plt+0x1d198>
  41fe44:	ldr	x20, [x19, #288]
  41fe48:	cmp	w3, #0x1
  41fe4c:	b.ne	41fe90 <nftw@plt+0x1d1a0>  // b.any
  41fe50:	ldr	x0, [x20, #64]
  41fe54:	cbz	x0, 41ff18 <nftw@plt+0x1d228>
  41fe58:	add	x3, x19, #0xd8
  41fe5c:	cmp	x0, x3
  41fe60:	b.eq	41ff18 <nftw@plt+0x1d228>  // b.none
  41fe64:	ldr	x20, [x0]
  41fe68:	cbnz	x20, 41fe28 <nftw@plt+0x1d138>
  41fe6c:	mov	x3, x1
  41fe70:	mov	x0, x19
  41fe74:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41fe78:	mov	w1, #0x3                   	// #3
  41fe7c:	add	x2, x2, #0x621
  41fe80:	bl	41c014 <nftw@plt+0x19324>
  41fe84:	b	41fe28 <nftw@plt+0x1d138>
  41fe88:	ldr	x20, [x0, #80]
  41fe8c:	b	41fe48 <nftw@plt+0x1d158>
  41fe90:	cbz	w2, 41fe9c <nftw@plt+0x1d1ac>
  41fe94:	ldr	x20, [x19, #208]
  41fe98:	b	41fe68 <nftw@plt+0x1d178>
  41fe9c:	cmp	w3, #0x3
  41fea0:	b.ne	41ff1c <nftw@plt+0x1d22c>  // b.any
  41fea4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  41fea8:	add	x1, x1, #0x61e
  41feac:	mov	w2, #0x0                   	// #0
  41feb0:	mov	x0, x19
  41feb4:	ldp	x19, x20, [sp, #16]
  41feb8:	ldp	x21, x22, [sp, #32]
  41febc:	ldp	x29, x30, [sp], #48
  41fec0:	b	41fd38 <nftw@plt+0x1d048>
  41fec4:	ldr	x0, [x20, #24]
  41fec8:	cbnz	x0, 41fefc <nftw@plt+0x1d20c>
  41fecc:	ldr	x0, [x20, #8]
  41fed0:	bl	43cd08 <nftw@plt+0x3a018>
  41fed4:	ldr	x21, [x20, #8]
  41fed8:	sub	x21, x0, x21
  41fedc:	add	x0, x21, #0x1
  41fee0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  41fee4:	ldr	x1, [x20, #8]
  41fee8:	mov	x22, x0
  41feec:	mov	x2, x21
  41fef0:	bl	4025d0 <memcpy@plt>
  41fef4:	strb	wzr, [x22, x21]
  41fef8:	str	x22, [x20, #24]
  41fefc:	ldr	x0, [x19]
  41ff00:	ldr	x1, [x20, #24]
  41ff04:	cbz	x0, 41ff10 <nftw@plt+0x1d220>
  41ff08:	ldrb	w2, [x0, #106]
  41ff0c:	b	41feb0 <nftw@plt+0x1d1c0>
  41ff10:	mov	w2, #0x0                   	// #0
  41ff14:	b	41feb0 <nftw@plt+0x1d1c0>
  41ff18:	cbnz	w2, 41fe94 <nftw@plt+0x1d1a4>
  41ff1c:	ldrb	w0, [x19, #416]
  41ff20:	cbz	w0, 41fec4 <nftw@plt+0x1d1d4>
  41ff24:	ldr	x20, [x19, #200]
  41ff28:	b	41fe68 <nftw@plt+0x1d178>
  41ff2c:	stp	x29, x30, [sp, #-48]!
  41ff30:	mov	x2, #0x8                   	// #8
  41ff34:	mov	x29, sp
  41ff38:	stp	x19, x20, [sp, #16]
  41ff3c:	mov	x19, x0
  41ff40:	mov	x20, x1
  41ff44:	str	x21, [sp, #32]
  41ff48:	bl	4029c0 <memcmp@plt>
  41ff4c:	cbnz	w0, 41ff9c <nftw@plt+0x1d2ac>
  41ff50:	ldrb	w0, [x19, #24]
  41ff54:	add	x21, x19, #0x8
  41ff58:	cbnz	w0, 41ff78 <nftw@plt+0x1d288>
  41ff5c:	ldr	x0, [x19, #32]
  41ff60:	mov	x2, x21
  41ff64:	ldr	x1, [x0, #120]
  41ff68:	ldr	x0, [x0, #40]
  41ff6c:	bl	43b5cc <nftw@plt+0x388dc>
  41ff70:	mov	w0, #0x1                   	// #1
  41ff74:	strb	w0, [x19, #24]
  41ff78:	add	x1, x20, #0x8
  41ff7c:	mov	x0, x21
  41ff80:	mov	x2, #0x10                  	// #16
  41ff84:	bl	4029c0 <memcmp@plt>
  41ff88:	cbnz	w0, 41ff9c <nftw@plt+0x1d2ac>
  41ff8c:	ldrb	w1, [x19, #25]
  41ff90:	cbnz	w1, 41ff9c <nftw@plt+0x1d2ac>
  41ff94:	ldrb	w0, [x20, #24]
  41ff98:	eor	w0, w0, #0x1
  41ff9c:	ldp	x19, x20, [sp, #16]
  41ffa0:	ldr	x21, [sp, #32]
  41ffa4:	ldp	x29, x30, [sp], #48
  41ffa8:	ret
  41ffac:	stp	x29, x30, [sp, #-80]!
  41ffb0:	mov	x29, sp
  41ffb4:	stp	x19, x20, [sp, #16]
  41ffb8:	ldrb	w20, [x1, #213]
  41ffbc:	stp	x21, x22, [sp, #32]
  41ffc0:	stp	x23, x24, [sp, #48]
  41ffc4:	stp	x25, x26, [sp, #64]
  41ffc8:	cbnz	w20, 420018 <nftw@plt+0x1d328>
  41ffcc:	ldrb	w24, [x1, #211]
  41ffd0:	mov	x19, x1
  41ffd4:	cbnz	w24, 420018 <nftw@plt+0x1d328>
  41ffd8:	mov	x22, x0
  41ffdc:	ldr	w0, [x1, #204]
  41ffe0:	cbnz	w0, 420018 <nftw@plt+0x1d328>
  41ffe4:	ldr	w0, [x1, #200]
  41ffe8:	mov	w25, w2
  41ffec:	cmn	w0, #0x1
  41fff0:	b.ne	420034 <nftw@plt+0x1d344>  // b.any
  41fff4:	mov	x0, x1
  41fff8:	bl	41fa34 <nftw@plt+0x1cd44>
  41fffc:	ands	w20, w0, #0xff
  420000:	b.ne	420034 <nftw@plt+0x1d344>  // b.any
  420004:	mov	w3, w25
  420008:	mov	x1, x19
  42000c:	mov	x0, x22
  420010:	mov	w2, #0x0                   	// #0
  420014:	bl	41fbd4 <nftw@plt+0x1cee4>
  420018:	mov	w0, w20
  42001c:	ldp	x19, x20, [sp, #16]
  420020:	ldp	x21, x22, [sp, #32]
  420024:	ldp	x23, x24, [sp, #48]
  420028:	ldp	x25, x26, [sp, #64]
  42002c:	ldp	x29, x30, [sp], #80
  420030:	ret
  420034:	ldr	w26, [x19, #88]
  420038:	and	w26, w26, #0xf000
  42003c:	cmp	w26, #0x6, lsl #12
  420040:	b.ne	420084 <nftw@plt+0x1d394>  // b.any
  420044:	ldr	x4, [x19, #8]
  420048:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42004c:	mov	w2, w25
  420050:	add	x3, x3, #0x64b
  420054:	mov	x0, x22
  420058:	mov	w1, #0x3                   	// #3
  42005c:	bl	41c39c <nftw@plt+0x196ac>
  420060:	ldr	w0, [x19, #200]
  420064:	eor	w24, w24, #0x1
  420068:	strb	w24, [x19, #211]
  42006c:	bl	402920 <close@plt>
  420070:	ldrb	w20, [x19, #211]
  420074:	mov	w0, #0xffffffff            	// #-1
  420078:	str	w0, [x19, #200]
  42007c:	eor	w20, w20, #0x1
  420080:	b	420018 <nftw@plt+0x1d328>
  420084:	cmp	w26, #0x8, lsl #12
  420088:	b.ne	4200e4 <nftw@plt+0x1d3f4>  // b.any
  42008c:	ldr	x21, [x19, #120]
  420090:	add	x0, x21, #0x10
  420094:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  420098:	mov	x20, x0
  42009c:	mov	x23, #0x0                   	// #0
  4200a0:	ldr	w0, [x19, #200]
  4200a4:	sub	x2, x21, x23
  4200a8:	add	x1, x20, x23
  4200ac:	bl	402b40 <read@plt>
  4200b0:	cmp	x0, #0x0
  4200b4:	b.le	4200ec <nftw@plt+0x1d3fc>
  4200b8:	add	x23, x23, x0
  4200bc:	cmp	x21, x23
  4200c0:	b.ne	4200a0 <nftw@plt+0x1d3b0>  // b.any
  4200c4:	cmp	w26, #0x8, lsl #12
  4200c8:	b.eq	420138 <nftw@plt+0x1d448>  // b.none
  4200cc:	lsl	x21, x21, #1
  4200d0:	mov	x0, x20
  4200d4:	add	x1, x21, #0x10
  4200d8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  4200dc:	mov	x20, x0
  4200e0:	b	4200a0 <nftw@plt+0x1d3b0>
  4200e4:	mov	x21, #0x2000                	// #8192
  4200e8:	b	420090 <nftw@plt+0x1d3a0>
  4200ec:	b.eq	420110 <nftw@plt+0x1d420>  // b.none
  4200f0:	ldr	x2, [x19, #8]
  4200f4:	mov	w3, w25
  4200f8:	mov	w1, #0x3                   	// #3
  4200fc:	mov	x0, x22
  420100:	bl	41c518 <nftw@plt+0x19828>
  420104:	mov	x0, x20
  420108:	bl	402a80 <free@plt>
  42010c:	b	420060 <nftw@plt+0x1d370>
  420110:	cmp	w26, #0x8, lsl #12
  420114:	ccmp	x23, x21, #0x4, eq  // eq = none
  420118:	b.eq	420138 <nftw@plt+0x1d448>  // b.none
  42011c:	ldr	x4, [x19, #8]
  420120:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x18fa8>
  420124:	mov	w2, w25
  420128:	add	x3, x3, #0x660
  42012c:	mov	x0, x22
  420130:	mov	w1, #0x0                   	// #0
  420134:	bl	41c39c <nftw@plt+0x196ac>
  420138:	ldr	x1, [x22, #1184]
  42013c:	add	x6, x19, #0x78
  420140:	add	x5, x19, #0x30
  420144:	mov	x4, x23
  420148:	add	x3, x21, #0x10
  42014c:	mov	x2, x20
  420150:	mov	x0, x22
  420154:	bl	414fac <nftw@plt+0x122bc>
  420158:	mov	w24, #0x1                   	// #1
  42015c:	str	x0, [x19, #40]
  420160:	mov	w0, #0x1                   	// #1
  420164:	strb	w0, [x19, #213]
  420168:	b	420060 <nftw@plt+0x1d370>
  42016c:	ldr	w0, [x0, #204]
  420170:	cmp	w0, #0x0
  420174:	cset	w0, ne  // ne = any
  420178:	ret
  42017c:	stp	x29, x30, [sp, #-304]!
  420180:	mov	x29, sp
  420184:	stp	x19, x20, [sp, #16]
  420188:	mov	x20, x0
  42018c:	stp	x21, x22, [sp, #32]
  420190:	and	w21, w3, #0xff
  420194:	stp	x23, x24, [sp, #48]
  420198:	mov	x24, x2
  42019c:	stp	x25, x26, [sp, #64]
  4201a0:	mov	x25, x1
  4201a4:	and	w1, w5, #0xff
  4201a8:	stp	x27, x28, [sp, #80]
  4201ac:	mov	w27, w6
  4201b0:	str	w1, [sp, #120]
  4201b4:	str	w4, [sp, #156]
  4201b8:	cbnz	x2, 4201d0 <nftw@plt+0x1d4e0>
  4201bc:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4201c0:	mov	w2, w6
  4201c4:	add	x3, x3, #0x67c
  4201c8:	mov	w1, #0x4                   	// #4
  4201cc:	bl	41c39c <nftw@plt+0x196ac>
  4201d0:	ldr	x19, [x20, #296]
  4201d4:	mov	x0, x25
  4201d8:	bl	43c9e0 <nftw@plt+0x39cf0>
  4201dc:	mov	w2, w0
  4201e0:	mov	x1, x25
  4201e4:	mov	x0, x19
  4201e8:	mov	w3, #0x1                   	// #1
  4201ec:	bl	43c658 <nftw@plt+0x39968>
  4201f0:	mov	x22, x0
  4201f4:	ldr	x0, [x0]
  4201f8:	cbz	x0, 420794 <nftw@plt+0x1daa4>
  4201fc:	ldr	x1, [x0, #8]
  420200:	cmp	x24, x1
  420204:	b.eq	42078c <nftw@plt+0x1da9c>  // b.none
  420208:	ldr	x0, [x0]
  42020c:	b	4201f8 <nftw@plt+0x1d508>
  420210:	mov	w0, #0x0                   	// #0
  420214:	b	4207e4 <nftw@plt+0x1daf4>
  420218:	ldr	w0, [sp, #120]
  42021c:	b	4207e4 <nftw@plt+0x1daf4>
  420220:	add	x21, x21, #0x2
  420224:	b	420834 <nftw@plt+0x1db44>
  420228:	ldrb	w0, [x28]
  42022c:	cmp	w0, #0x2f
  420230:	b.eq	4202fc <nftw@plt+0x1d60c>  // b.none
  420234:	mov	x0, x28
  420238:	mov	w1, #0x2f                  	// #47
  42023c:	bl	402ab0 <strchr@plt>
  420240:	cmp	x0, #0x0
  420244:	mov	x21, x0
  420248:	ccmp	x28, x0, #0x4, ne  // ne = any
  42024c:	b.eq	4202fc <nftw@plt+0x1d60c>  // b.none
  420250:	ldr	w5, [x23, #16]
  420254:	sub	x6, x0, x28
  420258:	add	x6, x6, #0x1
  42025c:	str	x6, [sp, #168]
  420260:	add	x5, x5, x6
  420264:	str	x5, [sp, #136]
  420268:	add	x0, x5, #0x2
  42026c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  420270:	str	x0, [sp, #128]
  420274:	ldr	w2, [x23, #16]
  420278:	ldr	x1, [x23, #8]
  42027c:	add	x7, x0, x2
  420280:	stp	x2, x7, [sp, #104]
  420284:	bl	4025d0 <memcpy@plt>
  420288:	ldr	w0, [x23, #16]
  42028c:	ldr	x7, [sp, #112]
  420290:	ldp	x4, x5, [sp, #128]
  420294:	ldr	x6, [sp, #168]
  420298:	cbz	w0, 4202c4 <nftw@plt+0x1d5d4>
  42029c:	ldr	x1, [x23, #8]
  4202a0:	sub	w0, w0, #0x1
  4202a4:	ldrb	w0, [x1, x0]
  4202a8:	cmp	w0, #0x2f
  4202ac:	b.eq	4202c4 <nftw@plt+0x1d5d4>  // b.none
  4202b0:	ldr	x2, [sp, #104]
  4202b4:	add	x5, x5, #0x1
  4202b8:	add	x7, x7, #0x1
  4202bc:	mov	w0, #0x2f                  	// #47
  4202c0:	strb	w0, [x4, x2]
  4202c4:	mov	x2, x6
  4202c8:	mov	x1, x28
  4202cc:	mov	x0, x7
  4202d0:	stp	x5, x4, [sp, #104]
  4202d4:	bl	4025d0 <memcpy@plt>
  4202d8:	ldp	x5, x4, [sp, #104]
  4202dc:	mov	x0, x20
  4202e0:	add	x28, x21, #0x1
  4202e4:	strb	wzr, [x4, x5]
  4202e8:	mov	x1, x4
  4202ec:	ldrb	w2, [x23, #20]
  4202f0:	bl	41fd38 <nftw@plt+0x1d048>
  4202f4:	mov	x23, x0
  4202f8:	b	420820 <nftw@plt+0x1db30>
  4202fc:	ldr	x1, [x19, #64]
  420300:	ldr	x0, [x19]
  420304:	ldr	x2, [x1, #40]
  420308:	cbz	x2, 420328 <nftw@plt+0x1d638>
  42030c:	blr	x2
  420310:	mov	x21, x0
  420314:	cbnz	x0, 420860 <nftw@plt+0x1db70>
  420318:	mov	w0, #0x2                   	// #2
  42031c:	str	xzr, [x19, #8]
  420320:	str	w0, [x19, #204]
  420324:	b	4208cc <nftw@plt+0x1dbdc>
  420328:	bl	41f720 <nftw@plt+0x1ca30>
  42032c:	b	420310 <nftw@plt+0x1d620>
  420330:	mov	x0, x21
  420334:	mov	x21, x23
  420338:	bl	402a80 <free@plt>
  42033c:	b	4208a4 <nftw@plt+0x1dbb4>
  420340:	ldr	x0, [x19]
  420344:	str	x21, [x19, #8]
  420348:	ldrb	w0, [x0]
  42034c:	cbz	w0, 420404 <nftw@plt+0x1d714>
  420350:	ldr	x0, [x20, #968]
  420354:	cbz	x0, 420404 <nftw@plt+0x1d714>
  420358:	ldr	x0, [x20, #280]
  42035c:	cbz	x0, 420378 <nftw@plt+0x1d688>
  420360:	ldrb	w1, [x0, #214]
  420364:	cbz	w1, 420370 <nftw@plt+0x1d680>
  420368:	ldr	x0, [x0, #32]
  42036c:	b	42035c <nftw@plt+0x1d66c>
  420370:	ldrb	w0, [x0, #212]
  420374:	cbz	w0, 420404 <nftw@plt+0x1d714>
  420378:	mov	x0, x21
  42037c:	bl	402630 <strlen@plt>
  420380:	mov	x28, x0
  420384:	add	x0, x0, #0x5
  420388:	str	x0, [sp, #104]
  42038c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  420390:	mov	x1, x21
  420394:	mov	x23, x0
  420398:	mov	x2, x28
  42039c:	bl	4025d0 <memcpy@plt>
  4203a0:	add	x0, x23, x28
  4203a4:	str	x0, [sp, #136]
  4203a8:	ldp	x1, x0, [sp, #136]
  4203ac:	ldr	w0, [x0]
  4203b0:	str	w0, [x23, x28]
  4203b4:	ldr	x0, [sp, #144]
  4203b8:	ldrb	w0, [x0, #4]
  4203bc:	strb	w0, [x1, #4]
  4203c0:	add	x1, sp, #0xb0
  4203c4:	mov	x0, x23
  4203c8:	bl	44da08 <_obstack_memory_used@@Base+0x109b0>
  4203cc:	cbnz	w0, 4203fc <nftw@plt+0x1d70c>
  4203d0:	ldr	w0, [sp, #192]
  4203d4:	and	w0, w0, #0xf000
  4203d8:	cmp	w0, #0x4, lsl #12
  4203dc:	b.eq	4204fc <nftw@plt+0x1d80c>  // b.none
  4203e0:	mov	x1, x19
  4203e4:	mov	x2, x23
  4203e8:	mov	x0, x20
  4203ec:	bl	41faf0 <nftw@plt+0x1ce00>
  4203f0:	and	w1, w0, #0xff
  4203f4:	cbnz	w1, 420784 <nftw@plt+0x1da94>
  4203f8:	mov	w26, #0x1                   	// #1
  4203fc:	mov	x0, x23
  420400:	bl	402a80 <free@plt>
  420404:	mov	x0, x19
  420408:	bl	41fa34 <nftw@plt+0x1cd44>
  42040c:	tst	w0, #0xff
  420410:	b.ne	420434 <nftw@plt+0x1d744>  // b.any
  420414:	ldr	w0, [x19, #204]
  420418:	cmp	w0, #0x2
  42041c:	b.eq	4205d8 <nftw@plt+0x1d8e8>  // b.none
  420420:	mov	w3, w27
  420424:	mov	w2, #0x0                   	// #0
  420428:	mov	x1, x19
  42042c:	mov	x0, x20
  420430:	bl	41fbd4 <nftw@plt+0x1cee4>
  420434:	ldr	x0, [x20, #280]
  420438:	mov	x21, #0x0                   	// #0
  42043c:	str	x0, [x19, #32]
  420440:	str	x19, [x20, #280]
  420444:	mov	x0, x20
  420448:	bl	41fcd8 <nftw@plt+0x1cfe8>
  42044c:	ldr	x1, [x22]
  420450:	stp	x1, x24, [x0]
  420454:	ldr	x1, [x20, #40]
  420458:	ldr	w1, [x1, #56]
  42045c:	str	w1, [x0, #16]
  420460:	str	x19, [x0, #24]
  420464:	str	x0, [x22]
  420468:	ldr	w0, [sp, #152]
  42046c:	cbz	w0, 4204b0 <nftw@plt+0x1d7c0>
  420470:	ldr	x0, [x20, #208]
  420474:	cmp	x0, x24
  420478:	b.eq	4204b0 <nftw@plt+0x1d7c0>  // b.none
  42047c:	cmp	x0, x21
  420480:	b.eq	4204b0 <nftw@plt+0x1d7c0>  // b.none
  420484:	mov	x0, x20
  420488:	bl	41fcd8 <nftw@plt+0x1cfe8>
  42048c:	ldr	x1, [x22]
  420490:	str	x1, [x0]
  420494:	ldr	x1, [x20, #208]
  420498:	str	x1, [x0, #8]
  42049c:	ldr	x1, [x20, #40]
  4204a0:	ldr	w1, [x1, #56]
  4204a4:	str	w1, [x0, #16]
  4204a8:	str	x19, [x0, #24]
  4204ac:	str	x0, [x22]
  4204b0:	ldr	w0, [sp, #124]
  4204b4:	cbz	w0, 420930 <nftw@plt+0x1dc40>
  4204b8:	ldr	x0, [x20, #200]
  4204bc:	cmp	x0, x24
  4204c0:	b.eq	420930 <nftw@plt+0x1dc40>  // b.none
  4204c4:	cmp	x0, x21
  4204c8:	b.eq	420930 <nftw@plt+0x1dc40>  // b.none
  4204cc:	mov	x0, x20
  4204d0:	bl	41fcd8 <nftw@plt+0x1cfe8>
  4204d4:	ldr	x1, [x22]
  4204d8:	str	x1, [x0]
  4204dc:	ldr	x1, [x20, #200]
  4204e0:	str	x1, [x0, #8]
  4204e4:	ldr	x1, [x20, #40]
  4204e8:	ldr	w1, [x1, #56]
  4204ec:	str	w1, [x0, #16]
  4204f0:	str	x19, [x0, #24]
  4204f4:	str	x0, [x22]
  4204f8:	b	420930 <nftw@plt+0x1dc40>
  4204fc:	mov	x0, x23
  420500:	bl	4026f0 <opendir@plt>
  420504:	str	x0, [sp, #112]
  420508:	cbz	x0, 4203f8 <nftw@plt+0x1d708>
  42050c:	ldr	x1, [sp, #136]
  420510:	mov	w0, #0x2f                  	// #47
  420514:	ldr	x26, [sp, #104]
  420518:	strb	w0, [x1, #4]
  42051c:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  420520:	add	x0, x0, #0x77e
  420524:	str	x0, [sp, #136]
  420528:	ldr	x0, [sp, #112]
  42052c:	bl	4028b0 <readdir@plt>
  420530:	cbz	x0, 4205d0 <nftw@plt+0x1d8e0>
  420534:	ldr	x1, [sp, #160]
  420538:	add	x28, x0, #0x13
  42053c:	mov	x0, x28
  420540:	bl	402a00 <strcmp@plt>
  420544:	cbz	w0, 420528 <nftw@plt+0x1d838>
  420548:	ldr	x1, [sp, #136]
  42054c:	mov	x0, x28
  420550:	bl	402a00 <strcmp@plt>
  420554:	cbz	w0, 420528 <nftw@plt+0x1d838>
  420558:	mov	x0, x28
  42055c:	bl	402630 <strlen@plt>
  420560:	add	x2, x0, #0x1
  420564:	ldr	x0, [sp, #104]
  420568:	add	x0, x0, x2
  42056c:	cmp	x0, x26
  420570:	b.ls	420594 <nftw@plt+0x1d8a4>  // b.plast
  420574:	add	x26, x26, #0x40
  420578:	mov	x0, x23
  42057c:	add	x26, x2, x26
  420580:	str	x2, [sp, #168]
  420584:	mov	x1, x26
  420588:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42058c:	ldr	x2, [sp, #168]
  420590:	mov	x23, x0
  420594:	ldr	x0, [sp, #104]
  420598:	mov	x1, x28
  42059c:	add	x0, x23, x0
  4205a0:	bl	4025d0 <memcpy@plt>
  4205a4:	mov	x1, x19
  4205a8:	mov	x2, x23
  4205ac:	mov	x0, x20
  4205b0:	bl	41faf0 <nftw@plt+0x1ce00>
  4205b4:	ands	w1, w0, #0xff
  4205b8:	b.eq	420528 <nftw@plt+0x1d838>  // b.none
  4205bc:	ldr	x0, [sp, #112]
  4205c0:	str	w1, [sp, #104]
  4205c4:	bl	4028f0 <closedir@plt>
  4205c8:	ldr	w1, [sp, #104]
  4205cc:	b	4203f4 <nftw@plt+0x1d704>
  4205d0:	mov	w1, #0x0                   	// #0
  4205d4:	b	4205bc <nftw@plt+0x1d8cc>
  4205d8:	add	x23, x20, #0x148
  4205dc:	mov	x0, x21
  4205e0:	bl	402630 <strlen@plt>
  4205e4:	add	x1, x0, #0x1
  4205e8:	mov	x28, x0
  4205ec:	ldp	x2, x0, [x23, #24]
  4205f0:	sub	x0, x0, x2
  4205f4:	cmp	x0, x1
  4205f8:	b.cs	420604 <nftw@plt+0x1d914>  // b.hs, b.nlast
  4205fc:	mov	x0, x23
  420600:	bl	43ce94 <_obstack_newchunk@@Base>
  420604:	ldr	x0, [x23, #24]
  420608:	mov	x2, x28
  42060c:	mov	x1, x21
  420610:	bl	4025d0 <memcpy@plt>
  420614:	ldr	x1, [x23, #24]
  420618:	add	x0, x1, x28
  42061c:	add	x0, x0, #0x1
  420620:	str	x0, [x23, #24]
  420624:	strb	wzr, [x1, x28]
  420628:	ldp	x28, x2, [x23, #16]
  42062c:	cmp	x28, x2
  420630:	b.ne	420640 <nftw@plt+0x1d950>  // b.any
  420634:	ldrb	w0, [x23, #80]
  420638:	orr	w0, w0, #0x2
  42063c:	strb	w0, [x23, #80]
  420640:	ldr	x0, [x23, #48]
  420644:	ldr	x1, [x23, #32]
  420648:	add	x2, x2, x0
  42064c:	bic	x0, x2, x0
  420650:	ldr	x2, [x23, #8]
  420654:	sub	x3, x0, x2
  420658:	sub	x2, x1, x2
  42065c:	cmp	x3, x2
  420660:	csel	x0, x0, x1, ls  // ls = plast
  420664:	stp	x0, x0, [x23, #16]
  420668:	mov	x0, x21
  42066c:	bl	402a80 <free@plt>
  420670:	ldr	w2, [sp, #128]
  420674:	mov	x1, x28
  420678:	ldr	x0, [x20, #320]
  42067c:	mov	w3, #0x1                   	// #1
  420680:	bl	43c658 <nftw@plt+0x39968>
  420684:	str	x28, [x0]
  420688:	ldr	x0, [x19]
  42068c:	str	x0, [x19, #8]
  420690:	b	4208cc <nftw@plt+0x1dbdc>
  420694:	ldr	x0, [x19, #8]
  420698:	bl	402a80 <free@plt>
  42069c:	ldr	x0, [x19]
  4206a0:	str	x0, [x19, #8]
  4206a4:	cbz	w26, 4206e0 <nftw@plt+0x1d9f0>
  4206a8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4206ac:	add	x2, x2, #0x698
  4206b0:	mov	w1, #0x3                   	// #3
  4206b4:	mov	x0, x20
  4206b8:	bl	41c014 <nftw@plt+0x19324>
  4206bc:	mov	x0, x20
  4206c0:	bl	41b230 <nftw@plt+0x18540>
  4206c4:	ldrb	w0, [x0, #84]
  4206c8:	cbnz	w0, 4206e0 <nftw@plt+0x1d9f0>
  4206cc:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4206d0:	mov	x0, x20
  4206d4:	add	x2, x2, #0x6d0
  4206d8:	mov	w1, #0x3                   	// #3
  4206dc:	bl	41c014 <nftw@plt+0x19324>
  4206e0:	ldr	w0, [sp, #120]
  4206e4:	cbz	w0, 420718 <nftw@plt+0x1da28>
  4206e8:	ldr	x0, [x19]
  4206ec:	bl	402a80 <free@plt>
  4206f0:	mov	x0, x19
  4206f4:	bl	402a80 <free@plt>
  4206f8:	ldr	x0, [x22]
  4206fc:	cbnz	x0, 420710 <nftw@plt+0x1da20>
  420700:	str	x19, [x22]
  420704:	mov	x1, x22
  420708:	ldr	x0, [x20, #296]
  42070c:	bl	43c898 <nftw@plt+0x39ba8>
  420710:	mov	x19, #0x0                   	// #0
  420714:	b	420930 <nftw@plt+0x1dc40>
  420718:	ldr	w2, [sp, #156]
  42071c:	mov	w3, w27
  420720:	b	420428 <nftw@plt+0x1d738>
  420724:	ldr	x1, [x20, #208]
  420728:	cmp	x0, x1
  42072c:	b.eq	420760 <nftw@plt+0x1da70>  // b.none
  420730:	ldr	x1, [x20, #200]
  420734:	cmp	x0, x1
  420738:	b.ne	420810 <nftw@plt+0x1db20>  // b.any
  42073c:	mov	w1, #0x1                   	// #1
  420740:	str	w1, [sp, #124]
  420744:	ldr	x23, [x22]
  420748:	cbz	x23, 420810 <nftw@plt+0x1db20>
  42074c:	ldr	x21, [x23, #8]
  420750:	cmp	x0, x21
  420754:	b.eq	42076c <nftw@plt+0x1da7c>  // b.none
  420758:	ldr	x23, [x23]
  42075c:	b	420748 <nftw@plt+0x1da58>
  420760:	mov	w1, #0x1                   	// #1
  420764:	str	w1, [sp, #152]
  420768:	b	420744 <nftw@plt+0x1da54>
  42076c:	ldr	x0, [x19]
  420770:	bl	402a80 <free@plt>
  420774:	mov	x0, x19
  420778:	bl	402a80 <free@plt>
  42077c:	ldr	x19, [x23, #24]
  420780:	b	420444 <nftw@plt+0x1d754>
  420784:	str	x23, [x19, #16]
  420788:	b	420434 <nftw@plt+0x1d744>
  42078c:	ldr	x19, [x0, #24]
  420790:	b	420930 <nftw@plt+0x1dc40>
  420794:	mov	x1, #0xd8                  	// #216
  420798:	mov	x0, #0x1                   	// #1
  42079c:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  4207a0:	mov	x19, x0
  4207a4:	ldr	x0, [x20]
  4207a8:	str	x24, [x19, #64]
  4207ac:	cmp	x0, #0x0
  4207b0:	cset	w0, eq  // eq = none
  4207b4:	strb	w0, [x19, #212]
  4207b8:	mov	w0, #0xffffffff            	// #-1
  4207bc:	str	w0, [x19, #200]
  4207c0:	mov	x0, x25
  4207c4:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  4207c8:	str	x0, [x19]
  4207cc:	ldr	w0, [sp, #120]
  4207d0:	cbnz	w0, 420218 <nftw@plt+0x1d528>
  4207d4:	ldr	x0, [x20]
  4207d8:	cbz	x0, 420210 <nftw@plt+0x1d520>
  4207dc:	ldr	x0, [x0, #80]
  4207e0:	ldrb	w0, [x0, #214]
  4207e4:	strb	w0, [x19, #214]
  4207e8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4207ec:	add	x0, x0, #0x6f7
  4207f0:	str	wzr, [sp, #124]
  4207f4:	str	x0, [sp, #144]
  4207f8:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4207fc:	add	x0, x0, #0x77f
  420800:	str	wzr, [sp, #152]
  420804:	str	x0, [sp, #160]
  420808:	mov	w26, #0x0                   	// #0
  42080c:	cbnz	w21, 420434 <nftw@plt+0x1d744>
  420810:	ldrb	w0, [x20, #1145]
  420814:	cbz	w0, 4202fc <nftw@plt+0x1d60c>
  420818:	ldr	x28, [x19]
  42081c:	ldr	x23, [x19, #64]
  420820:	ldr	x0, [x23, #32]
  420824:	cbnz	x0, 420830 <nftw@plt+0x1db40>
  420828:	mov	x0, x23
  42082c:	bl	41f87c <nftw@plt+0x1cb8c>
  420830:	mov	x21, #0x0                   	// #0
  420834:	ldr	x0, [x23, #32]
  420838:	ldr	x0, [x0, x21, lsl #3]
  42083c:	cbz	x0, 420228 <nftw@plt+0x1d538>
  420840:	mov	x1, x28
  420844:	bl	43bcf4 <nftw@plt+0x39004>
  420848:	cbnz	w0, 420220 <nftw@plt+0x1d530>
  42084c:	ldr	x0, [x23, #32]
  420850:	add	x2, x21, #0x1
  420854:	ldr	x0, [x0, x2, lsl #3]
  420858:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  42085c:	mov	x21, x0
  420860:	ldrb	w0, [x20, #1245]
  420864:	cbz	w0, 4208a4 <nftw@plt+0x1dbb4>
  420868:	ldr	x0, [x19, #64]
  42086c:	ldrb	w0, [x0, #20]
  420870:	cbz	w0, 4208a4 <nftw@plt+0x1dbb4>
  420874:	mov	x0, x21
  420878:	bl	43cd0c <nftw@plt+0x3a01c>
  42087c:	mov	x23, x0
  420880:	cbz	x0, 42089c <nftw@plt+0x1dbac>
  420884:	bl	402630 <strlen@plt>
  420888:	mov	x28, x0
  42088c:	mov	x0, x21
  420890:	bl	402630 <strlen@plt>
  420894:	cmp	x28, x0
  420898:	b.cc	420330 <nftw@plt+0x1d640>  // b.lo, b.ul, b.last
  42089c:	mov	x0, x23
  4208a0:	bl	402a80 <free@plt>
  4208a4:	mov	x0, x21
  4208a8:	bl	43c9e0 <nftw@plt+0x39cf0>
  4208ac:	mov	w2, w0
  4208b0:	str	w0, [sp, #128]
  4208b4:	ldr	x0, [x20, #320]
  4208b8:	mov	x1, x21
  4208bc:	bl	43c540 <nftw@plt+0x39850>
  4208c0:	cbz	x0, 420340 <nftw@plt+0x1d650>
  4208c4:	mov	w0, #0x2                   	// #2
  4208c8:	str	w0, [x19, #204]
  4208cc:	ldr	x0, [x19, #64]
  4208d0:	ldr	x0, [x0]
  4208d4:	str	x0, [x19, #64]
  4208d8:	cbnz	x0, 420724 <nftw@plt+0x1da34>
  4208dc:	ldr	x3, [x20, #984]
  4208e0:	cbz	x3, 4206a4 <nftw@plt+0x1d9b4>
  4208e4:	add	x2, x19, #0x40
  4208e8:	mov	x1, x25
  4208ec:	mov	x0, x20
  4208f0:	blr	x3
  4208f4:	str	x0, [x19, #8]
  4208f8:	cbz	x0, 42069c <nftw@plt+0x1d9ac>
  4208fc:	mov	x0, x19
  420900:	bl	41fa34 <nftw@plt+0x1cd44>
  420904:	tst	w0, #0xff
  420908:	b.eq	420694 <nftw@plt+0x1d9a4>  // b.none
  42090c:	ldr	x0, [x20, #280]
  420910:	str	x0, [x19, #32]
  420914:	str	x19, [x20, #280]
  420918:	ldr	x0, [x22]
  42091c:	cbnz	x0, 420930 <nftw@plt+0x1dc40>
  420920:	str	x19, [x22]
  420924:	mov	x1, x22
  420928:	ldr	x0, [x20, #296]
  42092c:	bl	43c898 <nftw@plt+0x39ba8>
  420930:	mov	x0, x19
  420934:	ldp	x19, x20, [sp, #16]
  420938:	ldp	x21, x22, [sp, #32]
  42093c:	ldp	x23, x24, [sp, #48]
  420940:	ldp	x25, x26, [sp, #64]
  420944:	ldp	x27, x28, [sp, #80]
  420948:	ldp	x29, x30, [sp], #304
  42094c:	ret
  420950:	stp	x29, x30, [sp, #-160]!
  420954:	mov	x29, sp
  420958:	stp	x23, x24, [sp, #48]
  42095c:	ldrb	w23, [x1, #210]
  420960:	stp	x19, x20, [sp, #16]
  420964:	stp	x21, x22, [sp, #32]
  420968:	stp	x25, x26, [sp, #64]
  42096c:	stp	x27, x28, [sp, #80]
  420970:	cbz	w23, 42097c <nftw@plt+0x1dc8c>
  420974:	mov	w23, #0x0                   	// #0
  420978:	b	4209c8 <nftw@plt+0x1dcd8>
  42097c:	mov	x20, x0
  420980:	mov	x19, x1
  420984:	and	w25, w2, #0xff
  420988:	mov	w26, w3
  42098c:	cbnz	w25, 4209e8 <nftw@plt+0x1dcf8>
  420990:	ldr	x0, [x19, #56]
  420994:	cbnz	x0, 420a00 <nftw@plt+0x1dd10>
  420998:	ldr	x1, [x19, #16]
  42099c:	cbz	x1, 420a0c <nftw@plt+0x1dd1c>
  4209a0:	ldr	w2, [x19, #200]
  4209a4:	mov	x0, x20
  4209a8:	ldr	x3, [x19, #8]
  4209ac:	ldr	x4, [x20, #976]
  4209b0:	blr	x4
  4209b4:	mov	w0, #0xffffffff            	// #-1
  4209b8:	str	w0, [x19, #200]
  4209bc:	ldr	x0, [x19, #16]
  4209c0:	bl	402a80 <free@plt>
  4209c4:	str	xzr, [x19, #16]
  4209c8:	mov	w0, w23
  4209cc:	ldp	x19, x20, [sp, #16]
  4209d0:	ldp	x21, x22, [sp, #32]
  4209d4:	ldp	x23, x24, [sp, #48]
  4209d8:	ldp	x25, x26, [sp, #64]
  4209dc:	ldp	x27, x28, [sp, #80]
  4209e0:	ldp	x29, x30, [sp], #160
  4209e4:	ret
  4209e8:	mov	w0, #0x1                   	// #1
  4209ec:	strb	w0, [x20, #417]
  4209f0:	strb	w0, [x1, #210]
  4209f4:	ldrh	w0, [x1, #208]
  4209f8:	cbz	w0, 420990 <nftw@plt+0x1dca0>
  4209fc:	b	420974 <nftw@plt+0x1dc84>
  420a00:	ldrb	w0, [x0, #18]
  420a04:	tbz	w0, #1, 420998 <nftw@plt+0x1dca8>
  420a08:	b	420974 <nftw@plt+0x1dc84>
  420a0c:	mov	w2, w26
  420a10:	mov	x1, x19
  420a14:	mov	x0, x20
  420a18:	bl	41ffac <nftw@plt+0x1d2bc>
  420a1c:	ands	w24, w0, #0xff
  420a20:	b.eq	420974 <nftw@plt+0x1dc84>  // b.none
  420a24:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  420a28:	ldr	x1, [x0, #2424]
  420a2c:	cbz	x1, 420a80 <nftw@plt+0x1dd90>
  420a30:	cbnz	w25, 420a3c <nftw@plt+0x1dd4c>
  420a34:	ldrb	w0, [x1, #8]
  420a38:	cbz	w0, 420a80 <nftw@plt+0x1dd90>
  420a3c:	ldr	x0, [x19, #120]
  420a40:	str	x0, [sp, #120]
  420a44:	adrp	x4, 41f000 <nftw@plt+0x1c310>
  420a48:	add	x0, sp, #0x78
  420a4c:	ldr	x2, [x1], #16
  420a50:	add	x4, x4, #0xf2c
  420a54:	mov	x3, #0x20                  	// #32
  420a58:	strb	wzr, [sp, #144]
  420a5c:	strb	w25, [sp, #145]
  420a60:	str	x19, [sp, #152]
  420a64:	bl	402880 <bsearch@plt>
  420a68:	cbz	x0, 420a80 <nftw@plt+0x1dd90>
  420a6c:	cbnz	w25, 420974 <nftw@plt+0x1dc84>
  420a70:	mov	w0, #0x1                   	// #1
  420a74:	strb	w0, [x20, #417]
  420a78:	strb	w0, [x19, #210]
  420a7c:	b	420974 <nftw@plt+0x1dc84>
  420a80:	ldrb	w0, [x20, #417]
  420a84:	cbz	w0, 420ba4 <nftw@plt+0x1deb4>
  420a88:	ldr	x21, [x20, #280]
  420a8c:	mov	w27, #0xffffffff            	// #-1
  420a90:	cbz	x21, 420ba4 <nftw@plt+0x1deb4>
  420a94:	cmp	x19, x21
  420a98:	b.ne	420aa4 <nftw@plt+0x1ddb4>  // b.any
  420a9c:	ldr	x21, [x21, #32]
  420aa0:	b	420a90 <nftw@plt+0x1dda0>
  420aa4:	cbnz	w25, 420ab0 <nftw@plt+0x1ddc0>
  420aa8:	ldrb	w0, [x21, #210]
  420aac:	cbz	w0, 420a9c <nftw@plt+0x1ddac>
  420ab0:	ldr	w0, [x21, #204]
  420ab4:	cbnz	w0, 420a9c <nftw@plt+0x1ddac>
  420ab8:	ldr	x0, [x19, #160]
  420abc:	ldr	x1, [x21, #160]
  420ac0:	cmp	x1, x0
  420ac4:	b.ne	420a9c <nftw@plt+0x1ddac>  // b.any
  420ac8:	ldr	x0, [x19, #120]
  420acc:	ldr	x1, [x21, #120]
  420ad0:	cmp	x1, x0
  420ad4:	b.ne	420a9c <nftw@plt+0x1ddac>  // b.any
  420ad8:	ldr	x0, [x21, #40]
  420adc:	cbz	x0, 420b94 <nftw@plt+0x1dea4>
  420ae0:	ldrb	w0, [x21, #213]
  420ae4:	cbnz	w0, 420b94 <nftw@plt+0x1dea4>
  420ae8:	ldr	x2, [x21, #64]
  420aec:	mov	x1, #0xd8                  	// #216
  420af0:	mov	x0, #0x1                   	// #1
  420af4:	str	x2, [sp, #104]
  420af8:	ldr	x28, [x21]
  420afc:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  420b00:	mov	x22, x0
  420b04:	ldr	x0, [x20]
  420b08:	ldr	x2, [sp, #104]
  420b0c:	cmp	x0, #0x0
  420b10:	cset	w0, eq  // eq = none
  420b14:	str	x2, [x22, #64]
  420b18:	str	w27, [x22, #200]
  420b1c:	strb	w0, [x22, #212]
  420b20:	mov	x0, x28
  420b24:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  420b28:	str	x0, [x22]
  420b2c:	ldr	x0, [x21, #8]
  420b30:	str	x0, [x22, #8]
  420b34:	mov	w2, w26
  420b38:	mov	x1, x22
  420b3c:	mov	x0, x20
  420b40:	bl	41ffac <nftw@plt+0x1d2bc>
  420b44:	ands	w28, w0, #0xff
  420b48:	b.eq	420b70 <nftw@plt+0x1de80>  // b.none
  420b4c:	ldr	x0, [x19, #120]
  420b50:	ldr	x2, [x22, #120]
  420b54:	cmp	x2, x0
  420b58:	b.ne	420b9c <nftw@plt+0x1deac>  // b.any
  420b5c:	ldr	x1, [x19, #40]
  420b60:	ldr	x0, [x22, #40]
  420b64:	bl	4029c0 <memcmp@plt>
  420b68:	cmp	w0, #0x0
  420b6c:	cset	w28, eq  // eq = none
  420b70:	ldr	x0, [x21, #40]
  420b74:	cbz	x0, 420b8c <nftw@plt+0x1de9c>
  420b78:	ldrb	w0, [x21, #213]
  420b7c:	cbnz	w0, 420b8c <nftw@plt+0x1de9c>
  420b80:	str	xzr, [x22, #8]
  420b84:	mov	x0, x22
  420b88:	bl	41f618 <nftw@plt+0x1c928>
  420b8c:	cbz	w28, 420a9c <nftw@plt+0x1ddac>
  420b90:	b	420974 <nftw@plt+0x1dc84>
  420b94:	mov	x22, x21
  420b98:	b	420b34 <nftw@plt+0x1de44>
  420b9c:	mov	w28, #0x0                   	// #0
  420ba0:	b	420b70 <nftw@plt+0x1de80>
  420ba4:	ldr	x1, [x20]
  420ba8:	cbz	x1, 420c70 <nftw@plt+0x1df80>
  420bac:	ldr	x0, [x19, #64]
  420bb0:	cbz	x0, 420c70 <nftw@plt+0x1df80>
  420bb4:	ldrb	w4, [x1, #106]
  420bb8:	ldrb	w21, [x0, #20]
  420bbc:	cmp	w21, w4, uxtb
  420bc0:	csel	w21, w21, w4, cs  // cs = hs, nlast
  420bc4:	and	w21, w21, #0xff
  420bc8:	cmp	w21, #0x0
  420bcc:	ldr	w1, [x20, #1200]
  420bd0:	cset	w0, ne  // ne = any
  420bd4:	cmp	w1, w0
  420bd8:	b.le	420c00 <nftw@plt+0x1df10>
  420bdc:	ldrh	w0, [x19, #208]
  420be0:	cbnz	w0, 420c00 <nftw@plt+0x1df10>
  420be4:	ldrb	w0, [x19, #212]
  420be8:	cbz	w0, 420bf4 <nftw@plt+0x1df04>
  420bec:	ldrb	w0, [x20, #1206]
  420bf0:	cbnz	w0, 420c00 <nftw@plt+0x1df10>
  420bf4:	ldr	x1, [x19, #8]
  420bf8:	ldr	x0, [x20, #712]
  420bfc:	bl	42bc34 <nftw@plt+0x28f44>
  420c00:	ldrh	w0, [x19, #208]
  420c04:	strb	wzr, [x19, #213]
  420c08:	add	w0, w0, #0x1
  420c0c:	strh	w0, [x19, #208]
  420c10:	ldr	x1, [x19, #40]
  420c14:	ldrb	w0, [x20, #1155]
  420c18:	ldr	x2, [x19, #120]
  420c1c:	cbz	w0, 420c28 <nftw@plt+0x1df38>
  420c20:	ldrb	w23, [x20, #1244]
  420c24:	eor	w23, w23, #0x1
  420c28:	mov	w3, w23
  420c2c:	mov	x0, x20
  420c30:	bl	41b28c <nftw@plt+0x1859c>
  420c34:	strb	w21, [x0, #106]
  420c38:	mov	w4, w21
  420c3c:	mov	w23, w24
  420c40:	ldr	x2, [x19, #8]
  420c44:	mov	w3, #0x1                   	// #1
  420c48:	ldr	x1, [x19, #48]
  420c4c:	str	x1, [x0, #40]
  420c50:	str	x19, [x0, #80]
  420c54:	mov	w0, #0x1                   	// #1
  420c58:	str	xzr, [x20, #424]
  420c5c:	mov	w1, #0x0                   	// #0
  420c60:	strb	w0, [x20, #440]
  420c64:	mov	x0, x20
  420c68:	bl	41aaec <nftw@plt+0x17dfc>
  420c6c:	b	4209c8 <nftw@plt+0x1dcd8>
  420c70:	mov	w21, #0x0                   	// #0
  420c74:	b	420bc8 <nftw@plt+0x1ded8>
  420c78:	mov	w2, #0x1                   	// #1
  420c7c:	strb	w2, [x0, #417]
  420c80:	strb	w2, [x1, #210]
  420c84:	ret
  420c88:	stp	x29, x30, [sp, #-64]!
  420c8c:	cmp	w3, #0x3
  420c90:	mov	x29, sp
  420c94:	stp	x19, x20, [sp, #16]
  420c98:	mov	x19, x0
  420c9c:	mov	w20, w3
  420ca0:	stp	x21, x22, [sp, #32]
  420ca4:	mov	x21, x1
  420ca8:	mov	w22, w4
  420cac:	stp	x23, x24, [sp, #48]
  420cb0:	mov	w24, w2
  420cb4:	b.ne	420cd0 <nftw@plt+0x1dfe0>  // b.any
  420cb8:	ldr	x1, [x19, #488]
  420cbc:	ldr	x0, [x0, #448]
  420cc0:	ldr	x1, [x1, #16]
  420cc4:	cmp	x0, x1
  420cc8:	b.eq	420cd0 <nftw@plt+0x1dfe0>  // b.none
  420ccc:	stur	wzr, [x0, #-24]
  420cd0:	mov	w2, w24
  420cd4:	mov	w3, w20
  420cd8:	mov	x1, x21
  420cdc:	mov	x0, x19
  420ce0:	bl	41fe04 <nftw@plt+0x1d114>
  420ce4:	mov	x2, x0
  420ce8:	cbnz	x0, 420d04 <nftw@plt+0x1e014>
  420cec:	mov	w0, #0x0                   	// #0
  420cf0:	ldp	x19, x20, [sp, #16]
  420cf4:	ldp	x21, x22, [sp, #32]
  420cf8:	ldp	x23, x24, [sp, #48]
  420cfc:	ldp	x29, x30, [sp], #64
  420d00:	ret
  420d04:	cmp	w20, #0x4
  420d08:	mov	x1, x21
  420d0c:	cset	w23, eq  // eq = none
  420d10:	mov	w6, w22
  420d14:	mov	w5, w23
  420d18:	mov	w4, w24
  420d1c:	mov	x0, x19
  420d20:	mov	w3, #0x0                   	// #0
  420d24:	bl	42017c <nftw@plt+0x1d48c>
  420d28:	cmp	x0, #0x0
  420d2c:	mov	x21, x0
  420d30:	csel	w23, w23, wzr, eq  // eq = none
  420d34:	cbnz	w23, 420cec <nftw@plt+0x1dffc>
  420d38:	ldr	x0, [x0, #16]
  420d3c:	cbz	x0, 420d80 <nftw@plt+0x1e090>
  420d40:	mov	w23, #0x0                   	// #0
  420d44:	cmp	w20, #0x2
  420d48:	mov	x1, x21
  420d4c:	cset	w2, eq  // eq = none
  420d50:	mov	w3, w22
  420d54:	mov	x0, x19
  420d58:	bl	420950 <nftw@plt+0x1dc60>
  420d5c:	and	w0, w0, #0xff
  420d60:	eor	w1, w0, #0x1
  420d64:	tst	w23, w1
  420d68:	b.eq	420cf0 <nftw@plt+0x1e000>  // b.none
  420d6c:	ldr	x1, [x19, #40]
  420d70:	ldr	w0, [x1, #56]
  420d74:	add	w0, w0, #0x1
  420d78:	str	w0, [x1, #56]
  420d7c:	b	420cec <nftw@plt+0x1dffc>
  420d80:	ldr	w0, [x21, #204]
  420d84:	cbnz	w0, 420d40 <nftw@plt+0x1e050>
  420d88:	sub	w0, w20, #0x3
  420d8c:	cmp	w0, #0x1
  420d90:	b.ls	420d40 <nftw@plt+0x1e050>  // b.plast
  420d94:	ldr	x0, [x19, #40]
  420d98:	ldr	w1, [x0, #56]
  420d9c:	bl	42678c <nftw@plt+0x23a9c>
  420da0:	mov	w23, w0
  420da4:	ldr	x0, [x19, #40]
  420da8:	mov	w1, w22
  420dac:	bl	42678c <nftw@plt+0x23a9c>
  420db0:	cmp	w23, w0
  420db4:	b.le	420d40 <nftw@plt+0x1e050>
  420db8:	ldr	x1, [x19, #40]
  420dbc:	mov	w23, #0x1                   	// #1
  420dc0:	ldr	w0, [x1, #56]
  420dc4:	sub	w0, w0, #0x1
  420dc8:	str	w0, [x1, #56]
  420dcc:	b	420d44 <nftw@plt+0x1e054>
  420dd0:	stp	x29, x30, [sp, #-32]!
  420dd4:	mov	x29, sp
  420dd8:	stp	x19, x20, [sp, #16]
  420ddc:	mov	x19, x1
  420de0:	ldr	x20, [x0, #296]
  420de4:	mov	x0, x1
  420de8:	bl	43c9e0 <nftw@plt+0x39cf0>
  420dec:	mov	w2, w0
  420df0:	mov	x1, x19
  420df4:	mov	x0, x20
  420df8:	bl	43c540 <nftw@plt+0x39850>
  420dfc:	cbz	x0, 420e1c <nftw@plt+0x1e12c>
  420e00:	ldr	x1, [x0, #8]
  420e04:	cbz	x1, 420e14 <nftw@plt+0x1e124>
  420e08:	ldr	x1, [x0, #24]
  420e0c:	ldr	w1, [x1, #204]
  420e10:	cbz	w1, 420e1c <nftw@plt+0x1e12c>
  420e14:	ldr	x0, [x0]
  420e18:	b	420dfc <nftw@plt+0x1e10c>
  420e1c:	cmp	x0, #0x0
  420e20:	cset	w0, ne  // ne = any
  420e24:	ldp	x19, x20, [sp, #16]
  420e28:	ldp	x29, x30, [sp], #32
  420e2c:	ret
  420e30:	stp	x29, x30, [sp, #-48]!
  420e34:	mov	x29, sp
  420e38:	stp	x21, x22, [sp, #32]
  420e3c:	mov	x21, x0
  420e40:	ldr	x22, [x0, #296]
  420e44:	mov	x0, x1
  420e48:	stp	x19, x20, [sp, #16]
  420e4c:	mov	x19, x1
  420e50:	mov	w20, w2
  420e54:	bl	43c9e0 <nftw@plt+0x39cf0>
  420e58:	mov	w2, w0
  420e5c:	mov	x1, x19
  420e60:	mov	x0, x22
  420e64:	bl	43c540 <nftw@plt+0x39850>
  420e68:	mov	x19, x0
  420e6c:	tbz	w20, #31, 420e80 <nftw@plt+0x1e190>
  420e70:	ldr	x0, [x21, #40]
  420e74:	mov	w1, w20
  420e78:	bl	425b4c <nftw@plt+0x22e5c>
  420e7c:	mov	w20, w0
  420e80:	cbz	x19, 420eac <nftw@plt+0x1e1bc>
  420e84:	ldr	x0, [x19, #8]
  420e88:	cbz	x0, 420ea4 <nftw@plt+0x1e1b4>
  420e8c:	ldr	x0, [x19, #24]
  420e90:	ldr	w0, [x0, #204]
  420e94:	cbnz	w0, 420ea4 <nftw@plt+0x1e1b4>
  420e98:	ldr	w0, [x19, #16]
  420e9c:	cmp	w0, w20
  420ea0:	b.ls	420eac <nftw@plt+0x1e1bc>  // b.plast
  420ea4:	ldr	x19, [x19]
  420ea8:	b	420e80 <nftw@plt+0x1e190>
  420eac:	cmp	x19, #0x0
  420eb0:	cset	w0, ne  // ne = any
  420eb4:	ldp	x19, x20, [sp, #16]
  420eb8:	ldp	x21, x22, [sp, #32]
  420ebc:	ldp	x29, x30, [sp], #48
  420ec0:	ret
  420ec4:	stp	x29, x30, [sp, #-64]!
  420ec8:	mov	x3, #0x0                   	// #0
  420ecc:	mov	x29, sp
  420ed0:	stp	x19, x20, [sp, #16]
  420ed4:	mov	x19, x0
  420ed8:	adrp	x20, 402000 <memcpy@plt-0x5d0>
  420edc:	add	x20, x20, #0xa80
  420ee0:	stp	x21, x22, [sp, #32]
  420ee4:	adrp	x21, 43d000 <_obstack_free@@Base+0x1c>
  420ee8:	adrp	x22, 41f000 <nftw@plt+0x1c310>
  420eec:	add	x21, x21, #0x18c
  420ef0:	add	x22, x22, #0x5fc
  420ef4:	str	x23, [sp, #48]
  420ef8:	adrp	x23, 41f000 <nftw@plt+0x1c310>
  420efc:	add	x23, x23, #0x6ec
  420f00:	mov	x5, x20
  420f04:	mov	x4, x21
  420f08:	mov	x1, x22
  420f0c:	mov	x2, x23
  420f10:	mov	x0, #0x7f                  	// #127
  420f14:	bl	43c348 <nftw@plt+0x39658>
  420f18:	str	x0, [x19, #296]
  420f1c:	mov	x5, x20
  420f20:	mov	x4, x21
  420f24:	mov	x2, x23
  420f28:	mov	x1, x22
  420f2c:	mov	x3, #0x0                   	// #0
  420f30:	mov	x0, #0x7f                  	// #127
  420f34:	bl	43c348 <nftw@plt+0x39658>
  420f38:	str	x0, [x19, #304]
  420f3c:	mov	x0, #0xff0                 	// #4080
  420f40:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  420f44:	str	wzr, [x0]
  420f48:	ldr	x1, [x19, #312]
  420f4c:	str	x1, [x0, #8]
  420f50:	str	x0, [x19, #312]
  420f54:	mov	x5, x20
  420f58:	mov	x4, x21
  420f5c:	mov	x3, #0x0                   	// #0
  420f60:	adrp	x2, 41f000 <nftw@plt+0x1c310>
  420f64:	adrp	x1, 43c000 <nftw@plt+0x39310>
  420f68:	add	x2, x2, #0x6d0
  420f6c:	add	x1, x1, #0x9e0
  420f70:	mov	x0, #0x7f                  	// #127
  420f74:	bl	43c348 <nftw@plt+0x39658>
  420f78:	ldp	x21, x22, [sp, #32]
  420f7c:	mov	x4, x20
  420f80:	ldr	x23, [sp, #48]
  420f84:	str	x0, [x19, #320]
  420f88:	add	x0, x19, #0x148
  420f8c:	adrp	x3, 43d000 <_obstack_free@@Base+0x1c>
  420f90:	ldp	x19, x20, [sp, #16]
  420f94:	add	x3, x3, #0x158
  420f98:	ldp	x29, x30, [sp], #64
  420f9c:	mov	x2, #0x0                   	// #0
  420fa0:	mov	x1, #0x0                   	// #0
  420fa4:	b	43ce68 <_obstack_begin@@Base>
  420fa8:	stp	x29, x30, [sp, #-32]!
  420fac:	mov	x29, sp
  420fb0:	stp	x19, x20, [sp, #16]
  420fb4:	mov	x19, x0
  420fb8:	ldr	x0, [x0, #296]
  420fbc:	bl	43c390 <nftw@plt+0x396a0>
  420fc0:	ldr	x0, [x19, #304]
  420fc4:	bl	43c390 <nftw@plt+0x396a0>
  420fc8:	ldr	x0, [x19, #320]
  420fcc:	bl	43c390 <nftw@plt+0x396a0>
  420fd0:	add	x0, x19, #0x148
  420fd4:	mov	x1, #0x0                   	// #0
  420fd8:	bl	43cfe4 <_obstack_free@@Base>
  420fdc:	ldr	x0, [x19, #312]
  420fe0:	cbz	x0, 420ff4 <nftw@plt+0x1e304>
  420fe4:	ldr	x20, [x0, #8]
  420fe8:	bl	402a80 <free@plt>
  420fec:	mov	x0, x20
  420ff0:	b	420fe0 <nftw@plt+0x1e2f0>
  420ff4:	ldr	x0, [x19, #280]
  420ff8:	cbz	x0, 42100c <nftw@plt+0x1e31c>
  420ffc:	ldr	x19, [x0, #32]
  421000:	bl	41f618 <nftw@plt+0x1c928>
  421004:	mov	x0, x19
  421008:	b	420ff8 <nftw@plt+0x1e308>
  42100c:	ldp	x19, x20, [sp, #16]
  421010:	ldp	x29, x30, [sp], #32
  421014:	ret
  421018:	stp	x29, x30, [sp, #-32]!
  42101c:	mov	x29, sp
  421020:	str	x19, [sp, #16]
  421024:	mov	x19, x0
  421028:	bl	420fa8 <nftw@plt+0x1e2b8>
  42102c:	mov	x0, x19
  421030:	str	xzr, [x19, #280]
  421034:	str	xzr, [x19, #312]
  421038:	ldr	x19, [sp, #16]
  42103c:	ldp	x29, x30, [sp], #32
  421040:	b	420ec4 <nftw@plt+0x1e1d4>
  421044:	ldr	x2, [x0]
  421048:	mov	w6, #0x0                   	// #0
  42104c:	mov	w5, #0x0                   	// #0
  421050:	mov	w4, #0x0                   	// #0
  421054:	mov	w3, #0x1                   	// #1
  421058:	ldr	x2, [x2, #80]
  42105c:	ldr	x2, [x2, #64]
  421060:	b	42017c <nftw@plt+0x1d48c>
  421064:	ldr	x3, [x0, #40]
  421068:	mov	w4, w1
  42106c:	mov	w5, #0x18                  	// #24
  421070:	ldr	w1, [x3, #12]
  421074:	ldr	x6, [x3]
  421078:	sub	w1, w1, #0x1
  42107c:	smull	x1, w1, w5
  421080:	add	x5, x6, x1
  421084:	cbz	w4, 421094 <nftw@plt+0x1e3a4>
  421088:	cmp	w2, #0x0
  42108c:	cset	w4, ne  // ne = any
  421090:	add	w4, w4, #0x1
  421094:	ldr	x2, [x0]
  421098:	strb	w4, [x2, #106]
  42109c:	ldr	w3, [x3, #60]
  4210a0:	ldr	w1, [x6, x1]
  4210a4:	ldr	x2, [x5, #8]
  4210a8:	sub	w1, w3, w1
  4210ac:	ldrb	w3, [x5, #6]
  4210b0:	lsr	w1, w1, w3
  4210b4:	ldr	w3, [x5, #16]
  4210b8:	add	w3, w1, w3
  4210bc:	mov	w1, #0x2                   	// #2
  4210c0:	b	41aaec <nftw@plt+0x17dfc>
  4210c4:	mov	w4, #0x0                   	// #0
  4210c8:	mov	w3, #0x1                   	// #1
  4210cc:	b	41aaec <nftw@plt+0x17dfc>
  4210d0:	stp	x29, x30, [sp, #-48]!
  4210d4:	mov	x29, sp
  4210d8:	stp	x19, x20, [sp, #16]
  4210dc:	mov	x19, x0
  4210e0:	ldr	x0, [x0, #296]
  4210e4:	str	xzr, [sp, #32]
  4210e8:	bl	43c19c <nftw@plt+0x394ac>
  4210ec:	str	x0, [sp, #40]
  4210f0:	ldr	x0, [x19, #296]
  4210f4:	add	x2, sp, #0x20
  4210f8:	adrp	x1, 41f000 <nftw@plt+0x1c310>
  4210fc:	add	x1, x1, #0x650
  421100:	bl	43c964 <nftw@plt+0x39c74>
  421104:	ldr	x0, [sp, #32]
  421108:	cbz	x0, 421174 <nftw@plt+0x1e484>
  42110c:	ldr	x1, [sp, #40]
  421110:	adrp	x3, 41f000 <nftw@plt+0x1c310>
  421114:	add	x3, x3, #0xa28
  421118:	mov	x2, #0x8                   	// #8
  42111c:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  421120:	mov	x20, #0x0                   	// #0
  421124:	bl	402720 <qsort@plt>
  421128:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42112c:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  421130:	add	x1, x1, #0x6fc
  421134:	add	x0, x0, #0xc40
  421138:	bl	402a70 <dgettext@plt>
  42113c:	ldr	x1, [x19, #1416]
  421140:	bl	402bd0 <fputs_unlocked@plt>
  421144:	ldp	x0, x1, [sp, #32]
  421148:	cmp	x1, x20
  42114c:	b.ls	421170 <nftw@plt+0x1e480>  // b.plast
  421150:	ldr	x1, [x19, #1416]
  421154:	ldr	x0, [x0, x20, lsl #3]
  421158:	add	x20, x20, #0x1
  42115c:	bl	402bd0 <fputs_unlocked@plt>
  421160:	ldr	x1, [x19, #1416]
  421164:	mov	w0, #0xa                   	// #10
  421168:	bl	402740 <putc_unlocked@plt>
  42116c:	b	421144 <nftw@plt+0x1e454>
  421170:	bl	402a80 <free@plt>
  421174:	ldp	x19, x20, [sp, #16]
  421178:	ldp	x29, x30, [sp], #48
  42117c:	ret
  421180:	stp	x29, x30, [sp, #-48]!
  421184:	mov	w3, #0x0                   	// #0
  421188:	mov	x29, sp
  42118c:	stp	x19, x20, [sp, #16]
  421190:	mov	x20, x0
  421194:	mov	x19, x1
  421198:	str	x21, [sp, #32]
  42119c:	mov	w21, w2
  4211a0:	bl	41fe04 <nftw@plt+0x1d114>
  4211a4:	cbnz	x0, 4211bc <nftw@plt+0x1e4cc>
  4211a8:	mov	w0, #0xffffffff            	// #-1
  4211ac:	ldp	x19, x20, [sp, #16]
  4211b0:	ldr	x21, [sp, #32]
  4211b4:	ldp	x29, x30, [sp], #48
  4211b8:	ret
  4211bc:	mov	x2, x0
  4211c0:	mov	x1, x19
  4211c4:	mov	w4, w21
  4211c8:	mov	x0, x20
  4211cc:	mov	w6, #0x0                   	// #0
  4211d0:	mov	w5, #0x0                   	// #0
  4211d4:	mov	w3, #0x0                   	// #0
  4211d8:	bl	42017c <nftw@plt+0x1d48c>
  4211dc:	mov	x19, x0
  4211e0:	ldr	w0, [x0, #204]
  4211e4:	cbnz	w0, 4211a8 <nftw@plt+0x1e4b8>
  4211e8:	ldr	w0, [x19, #200]
  4211ec:	cmn	w0, #0x1
  4211f0:	b.eq	421200 <nftw@plt+0x1e510>  // b.none
  4211f4:	bl	402920 <close@plt>
  4211f8:	mov	w0, #0xffffffff            	// #-1
  4211fc:	str	w0, [x19, #200]
  421200:	ldr	x0, [x20]
  421204:	ldr	x1, [x19, #160]
  421208:	ldr	x0, [x0, #80]
  42120c:	ldr	x0, [x0, #160]
  421210:	cmp	x1, x0
  421214:	cset	w0, gt
  421218:	b	4211ac <nftw@plt+0x1e4bc>
  42121c:	mov	w4, #0x0                   	// #0
  421220:	mov	w3, #0x3                   	// #3
  421224:	mov	w2, #0x0                   	// #0
  421228:	b	420c88 <nftw@plt+0x1df98>
  42122c:	mov	w4, #0x0                   	// #0
  421230:	mov	w3, #0x4                   	// #4
  421234:	mov	w2, #0x1                   	// #1
  421238:	b	420c88 <nftw@plt+0x1df98>
  42123c:	mov	x3, x0
  421240:	mov	x0, x2
  421244:	ldrb	w2, [x3, #440]
  421248:	cbz	w2, 42125c <nftw@plt+0x1e56c>
  42124c:	ldr	x2, [x1, #56]
  421250:	cbnz	x2, 42125c <nftw@plt+0x1e56c>
  421254:	ldr	x2, [x3, #424]
  421258:	str	x2, [x1, #56]
  42125c:	strb	wzr, [x3, #440]
  421260:	cbz	x0, 42127c <nftw@plt+0x1e58c>
  421264:	ldr	x2, [x1, #48]
  421268:	cmp	x2, x0
  42126c:	b.ne	421278 <nftw@plt+0x1e588>  // b.any
  421270:	stp	xzr, xzr, [x1, #40]
  421274:	strb	wzr, [x1, #213]
  421278:	b	402a80 <free@plt>
  42127c:	ret
  421280:	ldr	x0, [x0]
  421284:	ret
  421288:	add	x0, x0, #0x48
  42128c:	ret
  421290:	stp	x29, x30, [sp, #-48]!
  421294:	cmp	w3, #0x0
  421298:	mov	x29, sp
  42129c:	stp	x19, x20, [sp, #16]
  4212a0:	mov	x20, x0
  4212a4:	cset	w0, ne  // ne = any
  4212a8:	mov	x19, x1
  4212ac:	stp	x1, x1, [x20, #200]
  4212b0:	strb	w0, [x20, #416]
  4212b4:	str	x21, [sp, #32]
  4212b8:	mov	x21, x2
  4212bc:	cbz	x19, 4212e4 <nftw@plt+0x1e5f4>
  4212c0:	ldr	x0, [x19, #8]
  4212c4:	str	xzr, [x19, #32]
  4212c8:	bl	402630 <strlen@plt>
  4212cc:	str	w0, [x19, #16]
  4212d0:	cmp	x19, x21
  4212d4:	b.ne	4212dc <nftw@plt+0x1e5ec>  // b.any
  4212d8:	str	x19, [x20, #208]
  4212dc:	ldr	x19, [x19]
  4212e0:	b	4212bc <nftw@plt+0x1e5cc>
  4212e4:	ldp	x19, x20, [sp, #16]
  4212e8:	ldr	x21, [sp, #32]
  4212ec:	ldp	x29, x30, [sp], #48
  4212f0:	ret
  4212f4:	ldr	x0, [x0, #8]
  4212f8:	ret
  4212fc:	ldr	x0, [x0, #64]
  421300:	ret
  421304:	ldr	x0, [x0]
  421308:	ret
  42130c:	ldr	x0, [x0, #80]
  421310:	ret
  421314:	ldr	x0, [x0, #72]
  421318:	ret
  42131c:	stp	x29, x30, [sp, #-80]!
  421320:	mov	x29, sp
  421324:	stp	x23, x24, [sp, #48]
  421328:	mov	x23, x0
  42132c:	mov	x24, x1
  421330:	mov	x0, #0x0                   	// #0
  421334:	stp	x19, x20, [sp, #16]
  421338:	ldr	x1, [x23, #280]
  42133c:	stp	x21, x22, [sp, #32]
  421340:	stp	x25, x26, [sp, #64]
  421344:	cbz	x1, 421354 <nftw@plt+0x1e664>
  421348:	add	x0, x0, #0x1
  42134c:	ldr	x1, [x1, #32]
  421350:	b	421344 <nftw@plt+0x1e654>
  421354:	lsl	x0, x0, #5
  421358:	adrp	x25, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42135c:	add	x1, x0, #0x10
  421360:	mov	x0, #0x1                   	// #1
  421364:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  421368:	add	x25, x25, #0x728
  42136c:	ldr	x19, [x23, #280]
  421370:	mov	x20, x0
  421374:	str	xzr, [x0]
  421378:	strb	wzr, [x0, #8]
  42137c:	ldr	x21, [x20]
  421380:	cbz	x19, 421468 <nftw@plt+0x1e778>
  421384:	ldrb	w0, [x19, #211]
  421388:	cbnz	w0, 4213e8 <nftw@plt+0x1e6f8>
  42138c:	ldr	w0, [x19, #204]
  421390:	cbnz	w0, 4213e8 <nftw@plt+0x1e6f8>
  421394:	ldrh	w0, [x19, #208]
  421398:	cbz	w0, 4213e8 <nftw@plt+0x1e6f8>
  42139c:	add	x0, x21, #0x1
  4213a0:	ldrb	w1, [x19, #210]
  4213a4:	str	x0, [x20]
  4213a8:	add	x0, x20, x0, lsl #5
  4213ac:	strb	w1, [x0, #8]
  4213b0:	ldrb	w0, [x20, #8]
  4213b4:	ldrb	w1, [x19, #210]
  4213b8:	orr	w0, w0, w1
  4213bc:	strb	w0, [x20, #8]
  4213c0:	ldrb	w0, [x19, #213]
  4213c4:	cbz	w0, 4213f0 <nftw@plt+0x1e700>
  4213c8:	ldr	x0, [x19, #40]
  4213cc:	add	x2, x20, x21, lsl #5
  4213d0:	ldr	x1, [x19, #120]
  4213d4:	add	x2, x2, #0x18
  4213d8:	bl	43b5cc <nftw@plt+0x388dc>
  4213dc:	add	x21, x20, x21, lsl #5
  4213e0:	ldr	x0, [x19, #120]
  4213e4:	str	x0, [x21, #16]
  4213e8:	ldr	x19, [x19, #32]
  4213ec:	b	42137c <nftw@plt+0x1e68c>
  4213f0:	ldr	w26, [x19, #200]
  4213f4:	mov	x0, x19
  4213f8:	bl	41fa34 <nftw@plt+0x1cd44>
  4213fc:	ands	w22, w0, #0xff
  421400:	b.ne	42143c <nftw@plt+0x1e74c>  // b.any
  421404:	mov	x1, x19
  421408:	mov	x0, x23
  42140c:	mov	w3, #0x0                   	// #0
  421410:	mov	w2, #0x0                   	// #0
  421414:	bl	41fbd4 <nftw@plt+0x1cee4>
  421418:	mov	x0, x20
  42141c:	bl	402a80 <free@plt>
  421420:	mov	w0, w22
  421424:	ldp	x19, x20, [sp, #16]
  421428:	ldp	x21, x22, [sp, #32]
  42142c:	ldp	x23, x24, [sp, #48]
  421430:	ldp	x25, x26, [sp, #64]
  421434:	ldp	x29, x30, [sp], #80
  421438:	ret
  42143c:	ldr	w0, [x19, #200]
  421440:	mov	x1, x25
  421444:	bl	43be20 <nftw@plt+0x39130>
  421448:	mov	x22, x0
  42144c:	add	x1, x20, x21, lsl #5
  421450:	add	x1, x1, #0x18
  421454:	bl	43b614 <nftw@plt+0x38924>
  421458:	mov	x0, x22
  42145c:	bl	402760 <fclose@plt>
  421460:	str	w26, [x19, #200]
  421464:	b	4213dc <nftw@plt+0x1e6ec>
  421468:	mov	x1, x21
  42146c:	add	x0, x20, #0x10
  421470:	mov	x2, #0x20                  	// #32
  421474:	lsl	x21, x21, #5
  421478:	adrp	x3, 41f000 <nftw@plt+0x1c310>
  42147c:	add	x3, x3, #0xcd0
  421480:	bl	402720 <qsort@plt>
  421484:	mov	x3, x24
  421488:	add	x1, x21, #0x10
  42148c:	mov	x0, x20
  421490:	mov	x2, #0x1                   	// #1
  421494:	bl	402610 <fwrite_unlocked@plt>
  421498:	cmp	x0, #0x1
  42149c:	cset	w22, eq  // eq = none
  4214a0:	b	421418 <nftw@plt+0x1e728>
  4214a4:	stp	x29, x30, [sp, #-80]!
  4214a8:	mov	x3, x1
  4214ac:	mov	x2, #0x1                   	// #1
  4214b0:	mov	x29, sp
  4214b4:	add	x0, sp, #0x20
  4214b8:	str	x19, [sp, #16]
  4214bc:	mov	x19, x1
  4214c0:	mov	x1, #0x10                  	// #16
  4214c4:	bl	4029b0 <fread_unlocked@plt>
  4214c8:	cmp	x0, #0x1
  4214cc:	b.ne	421518 <nftw@plt+0x1e828>  // b.any
  4214d0:	ldr	x0, [sp, #32]
  4214d4:	lsl	x0, x0, #5
  4214d8:	add	x0, x0, #0x10
  4214dc:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4214e0:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4214e4:	ldp	x2, x3, [sp, #32]
  4214e8:	str	x0, [x1, #2424]
  4214ec:	stp	x2, x3, [x0], #16
  4214f0:	mov	x1, #0x20                  	// #32
  4214f4:	mov	x3, x19
  4214f8:	ldr	x2, [sp, #32]
  4214fc:	bl	4029b0 <fread_unlocked@plt>
  421500:	ldr	x1, [sp, #32]
  421504:	cmp	x1, x0
  421508:	cset	w0, eq  // eq = none
  42150c:	ldr	x19, [sp, #16]
  421510:	ldp	x29, x30, [sp], #80
  421514:	ret
  421518:	mov	w0, #0x0                   	// #0
  42151c:	b	42150c <nftw@plt+0x1e81c>
  421520:	stp	x29, x30, [sp, #-48]!
  421524:	mov	x29, sp
  421528:	stp	x19, x20, [sp, #16]
  42152c:	mov	x19, x0
  421530:	mov	x20, x1
  421534:	str	x21, [sp, #32]
  421538:	mov	w21, w2
  42153c:	bl	41fe04 <nftw@plt+0x1d114>
  421540:	mov	x2, x0
  421544:	mov	w4, w21
  421548:	mov	x1, x20
  42154c:	mov	x0, x19
  421550:	mov	w6, #0x0                   	// #0
  421554:	mov	w5, #0x0                   	// #0
  421558:	mov	w3, #0x0                   	// #0
  42155c:	bl	42017c <nftw@plt+0x1d48c>
  421560:	ldr	w0, [x0, #204]
  421564:	ldp	x19, x20, [sp, #16]
  421568:	cmp	w0, #0x2
  42156c:	cset	w0, ne  // ne = any
  421570:	ldr	x21, [sp, #32]
  421574:	ldp	x29, x30, [sp], #48
  421578:	ret
  42157c:	stp	x29, x30, [sp, #-32]!
  421580:	mov	x29, sp
  421584:	str	x19, [sp, #16]
  421588:	ldr	x19, [x0, #120]
  42158c:	add	x19, x19, #0x2d0
  421590:	ldp	x1, x0, [x19, #24]
  421594:	sub	x0, x0, x1
  421598:	cmp	x0, #0x1f
  42159c:	b.hi	4215ac <nftw@plt+0x1e8bc>  // b.pmore
  4215a0:	mov	x0, x19
  4215a4:	mov	x1, #0x20                  	// #32
  4215a8:	bl	43ce94 <_obstack_newchunk@@Base>
  4215ac:	ldp	x0, x2, [x19, #16]
  4215b0:	add	x2, x2, #0x20
  4215b4:	cmp	x2, x0
  4215b8:	b.ne	4215c8 <nftw@plt+0x1e8d8>  // b.any
  4215bc:	ldrb	w1, [x19, #80]
  4215c0:	orr	w1, w1, #0x2
  4215c4:	strb	w1, [x19, #80]
  4215c8:	ldr	x1, [x19, #48]
  4215cc:	ldr	x3, [x19, #32]
  4215d0:	add	x2, x2, x1
  4215d4:	bic	x1, x2, x1
  4215d8:	ldr	x2, [x19, #8]
  4215dc:	sub	x4, x1, x2
  4215e0:	sub	x2, x3, x2
  4215e4:	cmp	x4, x2
  4215e8:	csel	x1, x1, x3, ls  // ls = plast
  4215ec:	stp	x1, x1, [x19, #16]
  4215f0:	stp	xzr, xzr, [x0]
  4215f4:	stp	xzr, xzr, [x0, #16]
  4215f8:	ldr	x19, [sp, #16]
  4215fc:	ldp	x29, x30, [sp], #32
  421600:	ret
  421604:	stp	x29, x30, [sp, #-32]!
  421608:	mov	x29, sp
  42160c:	str	x19, [sp, #16]
  421610:	mov	x19, x0
  421614:	ldrb	w0, [x0, #1304]
  421618:	cbz	w0, 421638 <nftw@plt+0x1e948>
  42161c:	ldr	x0, [x19, #1088]
  421620:	bl	42c188 <nftw@plt+0x29498>
  421624:	add	x0, x19, #0x2d0
  421628:	mov	x1, #0x0                   	// #0
  42162c:	ldr	x19, [sp, #16]
  421630:	ldp	x29, x30, [sp], #32
  421634:	b	43cfe4 <_obstack_free@@Base>
  421638:	ldr	x19, [sp, #16]
  42163c:	ldp	x29, x30, [sp], #32
  421640:	ret
  421644:	ldr	x0, [x0, #1088]
  421648:	mov	w2, w2
  42164c:	mov	w3, #0x1                   	// #1
  421650:	b	42c488 <nftw@plt+0x29798>
  421654:	stp	x29, x30, [sp, #-32]!
  421658:	mov	x29, sp
  42165c:	stp	x19, x20, [sp, #16]
  421660:	mov	x19, x0
  421664:	cbnz	x1, 42178c <nftw@plt+0x1ea9c>
  421668:	mov	w0, #0x1                   	// #1
  42166c:	strb	w0, [x19, #1304]
  421670:	mov	w0, #0xd                   	// #13
  421674:	bl	42c114 <nftw@plt+0x29424>
  421678:	mov	x20, x0
  42167c:	adrp	x0, 421000 <nftw@plt+0x1e310>
  421680:	add	x0, x0, #0x57c
  421684:	adrp	x4, 402000 <memcpy@plt-0x5d0>
  421688:	adrp	x3, 43d000 <_obstack_free@@Base+0x1c>
  42168c:	str	x0, [x20, #96]
  421690:	add	x4, x4, #0xa80
  421694:	add	x3, x3, #0x158
  421698:	add	x0, x19, #0x2d0
  42169c:	mov	x2, #0x0                   	// #0
  4216a0:	mov	x1, #0x0                   	// #0
  4216a4:	bl	43ce68 <_obstack_begin@@Base>
  4216a8:	str	x19, [x20, #120]
  4216ac:	mov	x0, x19
  4216b0:	str	x20, [x19, #1088]
  4216b4:	bl	41bdb0 <nftw@plt+0x190c0>
  4216b8:	mov	x0, x19
  4216bc:	bl	41b034 <nftw@plt+0x18344>
  4216c0:	mov	x0, x19
  4216c4:	mov	w2, #0x7                   	// #7
  4216c8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4216cc:	add	x1, x1, #0xd43
  4216d0:	bl	421644 <nftw@plt+0x1e954>
  4216d4:	str	x0, [x19, #1248]
  4216d8:	mov	w2, #0x4                   	// #4
  4216dc:	mov	x0, x19
  4216e0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4216e4:	add	x1, x1, #0x736
  4216e8:	bl	421644 <nftw@plt+0x1e954>
  4216ec:	str	x0, [x19, #1256]
  4216f0:	mov	w2, #0x5                   	// #5
  4216f4:	mov	x0, x19
  4216f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4216fc:	add	x1, x1, #0x73b
  421700:	bl	421644 <nftw@plt+0x1e954>
  421704:	str	x0, [x19, #1264]
  421708:	mov	w2, #0xb                   	// #11
  42170c:	mov	x0, x19
  421710:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421714:	add	x1, x1, #0x741
  421718:	bl	421644 <nftw@plt+0x1e954>
  42171c:	str	x0, [x19, #1272]
  421720:	mov	w2, #0xa                   	// #10
  421724:	ldrh	w1, [x0, #18]
  421728:	orr	w1, w1, #0x10
  42172c:	strh	w1, [x0, #18]
  421730:	mov	x0, x19
  421734:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  421738:	add	x1, x1, #0xfae
  42173c:	bl	421644 <nftw@plt+0x1e954>
  421740:	str	x0, [x19, #1280]
  421744:	mov	w2, #0xf                   	// #15
  421748:	ldrh	w1, [x0, #18]
  42174c:	orr	w1, w1, #0x10
  421750:	strh	w1, [x0, #18]
  421754:	mov	x0, x19
  421758:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42175c:	add	x1, x1, #0x74d
  421760:	bl	421644 <nftw@plt+0x1e954>
  421764:	str	x0, [x19, #1288]
  421768:	mov	w2, #0x14                  	// #20
  42176c:	mov	x0, x19
  421770:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421774:	add	x1, x1, #0x75d
  421778:	bl	421644 <nftw@plt+0x1e954>
  42177c:	str	x0, [x19, #1296]
  421780:	ldp	x19, x20, [sp, #16]
  421784:	ldp	x29, x30, [sp], #32
  421788:	ret
  42178c:	mov	x20, x1
  421790:	b	4216a8 <nftw@plt+0x1e9b8>
  421794:	stp	x29, x30, [sp, #-16]!
  421798:	sxtw	x2, w2
  42179c:	mov	w3, #0x0                   	// #0
  4217a0:	mov	x29, sp
  4217a4:	ldr	x0, [x0, #1088]
  4217a8:	bl	42c488 <nftw@plt+0x29798>
  4217ac:	cbz	x0, 4217c0 <nftw@plt+0x1ead0>
  4217b0:	ldrb	w0, [x0, #18]
  4217b4:	ubfx	x0, x0, #1, #1
  4217b8:	ldp	x29, x30, [sp], #16
  4217bc:	ret
  4217c0:	mov	w0, #0x0                   	// #0
  4217c4:	b	4217b8 <nftw@plt+0x1eac8>
  4217c8:	ldr	x0, [x0, #1088]
  4217cc:	b	42c4c0 <nftw@plt+0x297d0>
  4217d0:	stp	x29, x30, [sp, #-48]!
  4217d4:	mov	x29, sp
  4217d8:	stp	x19, x20, [sp, #16]
  4217dc:	mov	x19, x0
  4217e0:	mov	w20, w2
  4217e4:	str	x21, [sp, #32]
  4217e8:	mov	x21, x1
  4217ec:	ldr	w1, [x0, #64]
  4217f0:	ldr	w0, [x0, #60]
  4217f4:	cmp	w0, w1
  4217f8:	b.ne	421818 <nftw@plt+0x1eb28>  // b.any
  4217fc:	add	w0, w0, #0x64
  421800:	lsl	w0, w0, #1
  421804:	str	w0, [x19, #64]
  421808:	lsl	x1, x0, #4
  42180c:	ldr	x0, [x19, #48]
  421810:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  421814:	str	x0, [x19, #48]
  421818:	ldr	w0, [x19, #60]
  42181c:	ldr	x2, [x19, #48]
  421820:	ubfiz	x1, x0, #4, #32
  421824:	add	w0, w0, #0x1
  421828:	add	x3, x2, x1
  42182c:	str	x21, [x2, x1]
  421830:	ldr	x21, [sp, #32]
  421834:	str	w20, [x3, #8]
  421838:	str	w0, [x19, #60]
  42183c:	ldp	x19, x20, [sp, #16]
  421840:	ldp	x29, x30, [sp], #48
  421844:	ret
  421848:	stp	x29, x30, [sp, #-48]!
  42184c:	mov	x4, x2
  421850:	mov	x29, sp
  421854:	str	x19, [sp, #16]
  421858:	ldr	x19, [x0]
  42185c:	ldr	x5, [x19]
  421860:	ldrb	w2, [x5]
  421864:	cmp	w2, #0x24
  421868:	b.ne	4218a8 <nftw@plt+0x1ebb8>  // b.any
  42186c:	ldrb	w1, [x0, #1146]
  421870:	cbz	w1, 421914 <nftw@plt+0x1ec24>
  421874:	add	x5, x5, #0x1
  421878:	str	x5, [x19]
  42187c:	ldrb	w1, [x0, #1148]
  421880:	cbz	w1, 4218a0 <nftw@plt+0x1ebb0>
  421884:	ldrb	w1, [x0, #18]
  421888:	cbnz	w1, 4218a0 <nftw@plt+0x1ebb0>
  42188c:	strb	wzr, [x0, #1148]
  421890:	adrp	x2, 450000 <_obstack_memory_used@@Base+0x12fa8>
  421894:	mov	w1, #0x2                   	// #2
  421898:	add	x2, x2, #0x7f7
  42189c:	bl	41c014 <nftw@plt+0x19324>
  4218a0:	mov	w0, #0x1                   	// #1
  4218a4:	b	421908 <nftw@plt+0x1ec18>
  4218a8:	ldrb	w3, [x0, #1147]
  4218ac:	cbz	w3, 421914 <nftw@plt+0x1ec24>
  4218b0:	cmp	w2, #0x5c
  4218b4:	b.ne	421914 <nftw@plt+0x1ec24>  // b.any
  4218b8:	ldrb	w6, [x5, #1]
  4218bc:	and	w6, w6, #0xffffffdf
  4218c0:	and	w6, w6, #0xff
  4218c4:	cmp	w6, #0x55
  4218c8:	b.ne	421914 <nftw@plt+0x1ec24>  // b.any
  4218cc:	ldr	x2, [x19, #32]
  4218d0:	add	x5, x5, #0x2
  4218d4:	str	x5, [x19]
  4218d8:	mov	x7, #0x0                   	// #0
  4218dc:	add	x5, sp, #0x2c
  4218e0:	mov	x6, #0x0                   	// #0
  4218e4:	mov	w3, #0x2                   	// #2
  4218e8:	sub	w3, w3, w1
  4218ec:	mov	x1, x19
  4218f0:	bl	41523c <nftw@plt+0x1254c>
  4218f4:	ands	w0, w0, #0xff
  4218f8:	b.ne	421908 <nftw@plt+0x1ec18>  // b.any
  4218fc:	ldr	x1, [x19]
  421900:	sub	x1, x1, #0x2
  421904:	str	x1, [x19]
  421908:	ldr	x19, [sp, #16]
  42190c:	ldp	x29, x30, [sp], #48
  421910:	ret
  421914:	mov	w0, #0x0                   	// #0
  421918:	b	421908 <nftw@plt+0x1ec18>
  42191c:	ldrb	w5, [x1]
  421920:	mov	w3, #0x0                   	// #0
  421924:	mov	w4, w5
  421928:	tbz	w4, #7, 421938 <nftw@plt+0x1ec48>
  42192c:	add	w3, w3, #0x1
  421930:	lsl	w4, w4, #1
  421934:	b	421928 <nftw@plt+0x1ec38>
  421938:	mov	w2, #0x7f                  	// #127
  42193c:	asr	w2, w2, w3
  421940:	and	w2, w2, w5
  421944:	mov	w5, #0x1                   	// #1
  421948:	sub	w5, w5, w1
  42194c:	sxtw	x2, w2
  421950:	add	w4, w5, w1
  421954:	cmp	w4, w3
  421958:	b.ge	421994 <nftw@plt+0x1eca4>  // b.tcont
  42195c:	ldrb	w4, [x1, #1]!
  421960:	and	x6, x4, #0x3f
  421964:	and	w4, w4, #0xffffffc0
  421968:	orr	x2, x6, x2, lsl #6
  42196c:	cmp	w4, #0x80
  421970:	b.eq	421950 <nftw@plt+0x1ec60>  // b.none
  421974:	stp	x29, x30, [sp, #-16]!
  421978:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42197c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421980:	mov	x29, sp
  421984:	add	x2, x2, #0x772
  421988:	add	x0, x0, #0x77e
  42198c:	mov	w1, #0xc89                 	// #3209
  421990:	bl	402d60 <nftw@plt+0x70>
  421994:	mov	w1, #0x555c                	// #21852
  421998:	adrp	x5, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42199c:	add	x5, x5, #0x791
  4219a0:	strh	w1, [x0], #2
  4219a4:	mov	w1, #0x1c                  	// #28
  4219a8:	lsr	x4, x2, x1
  4219ac:	and	x4, x4, #0xf
  4219b0:	sub	w1, w1, #0x4
  4219b4:	cmn	w1, #0x4
  4219b8:	ldrb	w4, [x5, x4]
  4219bc:	strb	w4, [x0], #1
  4219c0:	b.ne	4219a8 <nftw@plt+0x1ecb8>  // b.any
  4219c4:	sxtw	x0, w3
  4219c8:	ret
  4219cc:	ldrb	w1, [x0, #1154]
  4219d0:	cbz	w1, 4219fc <nftw@plt+0x1ed0c>
  4219d4:	ldrb	w1, [x0, #1167]
  4219d8:	cbnz	w1, 4219fc <nftw@plt+0x1ed0c>
  4219dc:	ldr	x1, [x0]
  4219e0:	cbz	x1, 4219ec <nftw@plt+0x1ecfc>
  4219e4:	ldrb	w1, [x1, #106]
  4219e8:	cbnz	w1, 421a10 <nftw@plt+0x1ed20>
  4219ec:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4219f0:	add	x2, x2, #0x7a2
  4219f4:	mov	w1, #0x2                   	// #2
  4219f8:	b	41c014 <nftw@plt+0x19324>
  4219fc:	ldrb	w1, [x0, #22]
  421a00:	cbnz	w1, 421a10 <nftw@plt+0x1ed20>
  421a04:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421a08:	add	x2, x2, #0x7ca
  421a0c:	b	4219f4 <nftw@plt+0x1ed04>
  421a10:	ret
  421a14:	stp	x29, x30, [sp, #-64]!
  421a18:	ands	w2, w2, #0xff
  421a1c:	mov	x29, sp
  421a20:	stp	x19, x20, [sp, #16]
  421a24:	mov	x19, x0
  421a28:	mov	x20, x3
  421a2c:	stp	x21, x22, [sp, #32]
  421a30:	mov	x21, x1
  421a34:	stp	x23, x24, [sp, #48]
  421a38:	mov	x24, x4
  421a3c:	ldrb	w23, [x1]
  421a40:	ldr	x1, [x0]
  421a44:	sub	w23, w23, #0x71
  421a48:	ldr	x22, [x1]
  421a4c:	b.ne	421a90 <nftw@plt+0x1eda0>  // b.any
  421a50:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  421a54:	add	x0, x0, #0xae
  421a58:	mov	w5, #0x204                 	// #516
  421a5c:	mov	w4, #0x43                  	// #67
  421a60:	ldrb	w6, [x22]
  421a64:	ldrb	w3, [x22]
  421a68:	ldrh	w6, [x0, x6, lsl #1]
  421a6c:	tst	w5, w6
  421a70:	b.eq	421a84 <nftw@plt+0x1ed94>  // b.none
  421a74:	madd	w23, w23, w4, w3
  421a78:	add	x22, x22, #0x1
  421a7c:	sub	w23, w23, #0x71
  421a80:	b	421a60 <nftw@plt+0x1ed70>
  421a84:	ldurb	w0, [x22, #-1]
  421a88:	str	w0, [x20]
  421a8c:	strb	wzr, [x20, #4]
  421a90:	str	x22, [x1]
  421a94:	cbz	w2, 421ad4 <nftw@plt+0x1ede4>
  421a98:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  421a9c:	add	x22, x22, #0xae
  421aa0:	mov	w23, #0x204                 	// #516
  421aa4:	ldr	x1, [x19]
  421aa8:	ldr	x0, [x1]
  421aac:	ldrb	w3, [x0]
  421ab0:	ldrb	w2, [x0]
  421ab4:	ldrh	w3, [x22, x3, lsl #1]
  421ab8:	tst	w23, w3
  421abc:	b.eq	421bc4 <nftw@plt+0x1eed4>  // b.none
  421ac0:	str	w2, [x20]
  421ac4:	add	x0, x0, #0x1
  421ac8:	strb	wzr, [x20, #4]
  421acc:	str	x0, [x1]
  421ad0:	b	421aa4 <nftw@plt+0x1edb4>
  421ad4:	mov	x2, x20
  421ad8:	mov	x0, x19
  421adc:	mov	w1, #0x0                   	// #0
  421ae0:	bl	421848 <nftw@plt+0x1eb58>
  421ae4:	tst	w0, #0xff
  421ae8:	b.ne	421a98 <nftw@plt+0x1eda8>  // b.any
  421aec:	ldr	x0, [x19, #1088]
  421af0:	sub	x3, x22, x21
  421af4:	add	w3, w23, w3
  421af8:	sub	w2, w22, w21
  421afc:	mov	x1, x21
  421b00:	mov	w4, #0x1                   	// #1
  421b04:	bl	42c1c0 <nftw@plt+0x294d0>
  421b08:	mov	x20, x0
  421b0c:	str	x0, [x24]
  421b10:	ldrh	w0, [x20, #18]
  421b14:	ubfx	x1, x0, #2, #8
  421b18:	tbz	w0, #4, 421bac <nftw@plt+0x1eebc>
  421b1c:	ldrb	w0, [x19, #18]
  421b20:	cbnz	w0, 421bac <nftw@plt+0x1eebc>
  421b24:	tbz	w1, #1, 421b48 <nftw@plt+0x1ee58>
  421b28:	ldrb	w0, [x19, #23]
  421b2c:	cbnz	w0, 421b48 <nftw@plt+0x1ee58>
  421b30:	ldr	x3, [x20]
  421b34:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421b38:	mov	x0, x19
  421b3c:	add	x2, x2, #0x810
  421b40:	mov	w1, #0x3                   	// #3
  421b44:	bl	41c014 <nftw@plt+0x19324>
  421b48:	ldr	x0, [x19, #1272]
  421b4c:	cmp	x0, x20
  421b50:	b.ne	421b78 <nftw@plt+0x1ee88>  // b.any
  421b54:	ldrb	w0, [x19, #22]
  421b58:	cbnz	w0, 421b78 <nftw@plt+0x1ee88>
  421b5c:	ldrb	w0, [x19, #1120]
  421b60:	cbz	w0, 421c18 <nftw@plt+0x1ef28>
  421b64:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421b68:	add	x2, x2, #0x82d
  421b6c:	mov	x0, x19
  421b70:	mov	w1, #0x2                   	// #2
  421b74:	bl	41c014 <nftw@plt+0x19324>
  421b78:	ldr	x0, [x19, #1280]
  421b7c:	cmp	x0, x20
  421b80:	b.ne	421b8c <nftw@plt+0x1ee9c>  // b.any
  421b84:	mov	x0, x19
  421b88:	bl	4219cc <nftw@plt+0x1ecdc>
  421b8c:	ldrh	w0, [x20, #18]
  421b90:	tbz	w0, #9, 421bac <nftw@plt+0x1eebc>
  421b94:	ldr	x3, [x20]
  421b98:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421b9c:	mov	x0, x19
  421ba0:	add	x2, x2, #0x8b9
  421ba4:	mov	w1, #0xf                   	// #15
  421ba8:	bl	41c080 <nftw@plt+0x19390>
  421bac:	mov	x0, x20
  421bb0:	ldp	x19, x20, [sp, #16]
  421bb4:	ldp	x21, x22, [sp, #32]
  421bb8:	ldp	x23, x24, [sp, #48]
  421bbc:	ldp	x29, x30, [sp], #64
  421bc0:	ret
  421bc4:	mov	x2, x20
  421bc8:	mov	x0, x19
  421bcc:	mov	w1, #0x0                   	// #0
  421bd0:	bl	421848 <nftw@plt+0x1eb58>
  421bd4:	tst	w0, #0xff
  421bd8:	b.ne	421aa4 <nftw@plt+0x1edb4>  // b.any
  421bdc:	ldr	x0, [x19]
  421be0:	mov	x1, x21
  421be4:	ldr	x2, [x0]
  421be8:	mov	x0, x19
  421bec:	sub	x2, x2, x21
  421bf0:	bl	414e7c <nftw@plt+0x1218c>
  421bf4:	mov	x20, x0
  421bf8:	mov	x1, x21
  421bfc:	ldr	x0, [x19]
  421c00:	ldr	x2, [x0]
  421c04:	mov	x0, x19
  421c08:	sub	w2, w2, w21
  421c0c:	bl	421644 <nftw@plt+0x1e954>
  421c10:	str	x0, [x24]
  421c14:	b	421b10 <nftw@plt+0x1ee20>
  421c18:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  421c1c:	add	x2, x2, #0x874
  421c20:	b	421b6c <nftw@plt+0x1ee7c>
  421c24:	ldrb	w2, [x1]
  421c28:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  421c2c:	add	x4, x4, #0xae
  421c30:	ldrb	w3, [x1]
  421c34:	ldrh	w2, [x4, x2, lsl #1]
  421c38:	tbnz	w2, #9, 421c50 <nftw@plt+0x1ef60>
  421c3c:	mov	w0, #0x0                   	// #0
  421c40:	ret
  421c44:	mov	w0, #0x0                   	// #0
  421c48:	ldp	x29, x30, [sp], #16
  421c4c:	ret
  421c50:	sub	w3, w3, #0x71
  421c54:	add	x2, x1, #0x1
  421c58:	stp	x29, x30, [sp, #-16]!
  421c5c:	mov	w7, #0x204                 	// #516
  421c60:	mov	w6, #0x43                  	// #67
  421c64:	mov	x29, sp
  421c68:	ldrb	w8, [x2]
  421c6c:	ldrb	w5, [x2]
  421c70:	ldrh	w8, [x4, x8, lsl #1]
  421c74:	tst	w7, w8
  421c78:	b.eq	421c8c <nftw@plt+0x1ef9c>  // b.none
  421c7c:	madd	w3, w3, w6, w5
  421c80:	add	x2, x2, #0x1
  421c84:	sub	w3, w3, #0x71
  421c88:	b	421c68 <nftw@plt+0x1ef78>
  421c8c:	ldr	x0, [x0]
  421c90:	sub	x2, x2, x1
  421c94:	add	w3, w3, w2
  421c98:	mov	w4, #0x0                   	// #0
  421c9c:	bl	42c1c0 <nftw@plt+0x294d0>
  421ca0:	cbz	x0, 421c44 <nftw@plt+0x1ef54>
  421ca4:	ldrb	w0, [x0, #18]
  421ca8:	ubfx	x0, x0, #1, #1
  421cac:	b	421c48 <nftw@plt+0x1ef58>
  421cb0:	ldrb	w2, [x0, #4]
  421cb4:	cmp	w2, #0x35
  421cb8:	b.ne	421ce0 <nftw@plt+0x1eff0>  // b.any
  421cbc:	stp	x29, x30, [sp, #-16]!
  421cc0:	mov	x29, sp
  421cc4:	ldr	x0, [x0, #8]
  421cc8:	ldr	x0, [x0]
  421ccc:	bl	402a00 <strcmp@plt>
  421cd0:	cmp	w0, #0x0
  421cd4:	cset	w0, eq  // eq = none
  421cd8:	ldp	x29, x30, [sp], #16
  421cdc:	ret
  421ce0:	mov	w0, #0x0                   	// #0
  421ce4:	ret
  421ce8:	ret
  421cec:	stp	x29, x30, [sp, #-96]!
  421cf0:	mov	x29, sp
  421cf4:	stp	x23, x24, [sp, #48]
  421cf8:	ldr	x24, [x0]
  421cfc:	stp	x21, x22, [sp, #32]
  421d00:	mov	x22, x0
  421d04:	stp	x19, x20, [sp, #16]
  421d08:	ldrb	w0, [x24, #105]
  421d0c:	stp	x25, x26, [sp, #64]
  421d10:	ldr	x23, [x24, #16]
  421d14:	str	x27, [sp, #80]
  421d18:	stp	x23, x23, [x24]
  421d1c:	str	xzr, [x24, #56]
  421d20:	strb	wzr, [x24, #104]
  421d24:	tbz	w0, #1, 421d58 <nftw@plt+0x1f068>
  421d28:	ldrb	w0, [x23]
  421d2c:	mov	x19, x23
  421d30:	add	x23, x23, #0x1
  421d34:	cmp	w0, #0xa
  421d38:	b.eq	421d50 <nftw@plt+0x1f060>  // b.none
  421d3c:	cmp	w0, #0xd
  421d40:	b.ne	421d28 <nftw@plt+0x1f038>  // b.any
  421d44:	ldr	x0, [x24, #32]
  421d48:	cmp	x0, x19
  421d4c:	b.ne	422098 <nftw@plt+0x1f3a8>  // b.any
  421d50:	mov	x23, x19
  421d54:	b	421f80 <nftw@plt+0x1f290>
  421d58:	adrp	x21, 47e000 <__environ@@GLIBC_2.17+0xa50>
  421d5c:	mov	x20, #0x0                   	// #0
  421d60:	movi	v2.16b, #0xa
  421d64:	add	x21, x21, #0x98c
  421d68:	movi	v3.16b, #0xd
  421d6c:	mov	x25, #0x1000                	// #4096
  421d70:	b	421dec <nftw@plt+0x1f0fc>
  421d74:	ldr	q1, [x23]
  421d78:	cmeq	v6.16b, v1.16b, v3.16b
  421d7c:	cmeq	v0.16b, v1.16b, v2.16b
  421d80:	orr	v0.16b, v0.16b, v6.16b
  421d84:	cmeq	v6.16b, v1.16b, v5.16b
  421d88:	cmeq	v1.16b, v1.16b, v4.16b
  421d8c:	orr	v0.16b, v0.16b, v6.16b
  421d90:	orr	v0.16b, v0.16b, v1.16b
  421d94:	addp	d1, v0.2d
  421d98:	fmov	x0, d1
  421d9c:	cbnz	x0, 421da8 <nftw@plt+0x1f0b8>
  421da0:	ldr	q1, [x1, #16]!
  421da4:	b	421d78 <nftw@plt+0x1f088>
  421da8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  421dac:	cmp	x1, x23
  421db0:	csel	x23, x23, x1, cc  // cc = lo, ul, last
  421db4:	ldr	q1, [x0, #1344]
  421db8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  421dbc:	and	v0.16b, v0.16b, v1.16b
  421dc0:	ldr	q1, [x0, #1360]
  421dc4:	uaddlp	v0.8h, v0.16b
  421dc8:	ushl	v0.8h, v0.8h, v1.8h
  421dcc:	addv	h0, v0.8h
  421dd0:	umov	w19, v0.h[0]
  421dd4:	rbit	w19, w19
  421dd8:	clz	w19, w19
  421ddc:	add	x19, x23, w19, sxtw
  421de0:	b	421e6c <nftw@plt+0x1f17c>
  421de4:	mov	x19, x20
  421de8:	mov	x20, x19
  421dec:	and	x0, x23, #0xfff
  421df0:	and	x1, x23, #0xfffffffffffffff0
  421df4:	movi	v5.16b, #0x5c
  421df8:	sub	x0, x25, x0
  421dfc:	movi	v4.16b, #0x3f
  421e00:	cmp	x0, #0xf
  421e04:	b.hi	421d74 <nftw@plt+0x1f084>  // b.pmore
  421e08:	ldr	q1, [x1]
  421e0c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  421e10:	and	w2, w23, #0xf
  421e14:	mov	w3, #0xffffffff            	// #-1
  421e18:	cmeq	v6.16b, v1.16b, v3.16b
  421e1c:	lsl	w3, w3, w2
  421e20:	cmeq	v0.16b, v1.16b, v2.16b
  421e24:	orr	v0.16b, v0.16b, v6.16b
  421e28:	cmeq	v6.16b, v1.16b, v5.16b
  421e2c:	cmeq	v1.16b, v1.16b, v4.16b
  421e30:	orr	v0.16b, v0.16b, v6.16b
  421e34:	orr	v0.16b, v0.16b, v1.16b
  421e38:	ldr	q1, [x0, #1344]
  421e3c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  421e40:	and	v0.16b, v0.16b, v1.16b
  421e44:	ldr	q1, [x0, #1360]
  421e48:	uaddlp	v0.8h, v0.16b
  421e4c:	ushl	v0.8h, v0.8h, v1.8h
  421e50:	addv	h0, v0.8h
  421e54:	umov	w2, v0.h[0]
  421e58:	ands	w19, w3, w2
  421e5c:	b.eq	421da0 <nftw@plt+0x1f0b0>  // b.none
  421e60:	rbit	w19, w19
  421e64:	clz	w19, w19
  421e68:	add	x19, x1, w19, sxtw
  421e6c:	mov	x23, x19
  421e70:	ldrb	w0, [x23], #1
  421e74:	cmp	w0, #0x5c
  421e78:	b.eq	421de8 <nftw@plt+0x1f0f8>  // b.none
  421e7c:	cmp	w0, #0x3f
  421e80:	b.ne	421f58 <nftw@plt+0x1f268>  // b.any
  421e84:	ldrb	w0, [x19, #1]
  421e88:	cmp	w0, #0x3f
  421e8c:	b.ne	421de4 <nftw@plt+0x1f0f4>  // b.any
  421e90:	ldrb	w0, [x19, #2]
  421e94:	ldrb	w2, [x19, #2]
  421e98:	ldrb	w0, [x21, x0]
  421e9c:	cbz	w0, 421de4 <nftw@plt+0x1f0f4>
  421ea0:	mov	x0, x24
  421ea4:	mov	x1, x19
  421ea8:	bl	4217d0 <nftw@plt+0x1eae0>
  421eac:	movi	v2.16b, #0xa
  421eb0:	ldrb	w0, [x22, #1125]
  421eb4:	movi	v3.16b, #0xd
  421eb8:	cbz	w0, 421de4 <nftw@plt+0x1f0f4>
  421ebc:	ldrb	w0, [x19, #2]
  421ec0:	mov	x23, x19
  421ec4:	ldrb	w0, [x21, x0]
  421ec8:	strb	w0, [x23], #2
  421ecc:	adrp	x25, 47e000 <__environ@@GLIBC_2.17+0xa50>
  421ed0:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  421ed4:	mov	x27, x19
  421ed8:	mov	x21, x23
  421edc:	add	x25, x25, #0x98c
  421ee0:	add	x26, x26, #0xae
  421ee4:	ldrb	w1, [x21, #1]
  421ee8:	add	x20, x21, #0x1
  421eec:	strb	w1, [x27, #1]
  421ef0:	add	x19, x19, #0x1
  421ef4:	cmp	w1, #0xa
  421ef8:	ccmp	w1, #0xd, #0x4, ne  // ne = any
  421efc:	b.ne	42204c <nftw@plt+0x1f35c>  // b.any
  421f00:	cmp	w1, #0xd
  421f04:	ldr	x23, [x24, #32]
  421f08:	b.ne	421f24 <nftw@plt+0x1f234>  // b.any
  421f0c:	cmp	x20, x23
  421f10:	b.eq	421f80 <nftw@plt+0x1f290>  // b.none
  421f14:	ldrb	w0, [x21, #2]
  421f18:	cmp	w0, #0xa
  421f1c:	b.ne	421f2c <nftw@plt+0x1f23c>  // b.any
  421f20:	add	x20, x21, #0x2
  421f24:	cmp	x20, x23
  421f28:	b.eq	421f80 <nftw@plt+0x1f290>  // b.none
  421f2c:	ldr	x1, [x24, #16]
  421f30:	mov	x23, x20
  421f34:	mov	x21, x19
  421f38:	cmp	x1, x21
  421f3c:	b.eq	421f80 <nftw@plt+0x1f290>  // b.none
  421f40:	ldurb	w2, [x21, #-1]
  421f44:	ldurb	w0, [x21, #-1]
  421f48:	ldrh	w2, [x26, x2, lsl #1]
  421f4c:	tbz	w2, #11, 422014 <nftw@plt+0x1f324>
  421f50:	sub	x21, x21, #0x1
  421f54:	b	421f38 <nftw@plt+0x1f248>
  421f58:	ldr	x1, [x24, #32]
  421f5c:	cmp	x1, x19
  421f60:	b.eq	421d50 <nftw@plt+0x1f060>  // b.none
  421f64:	cmp	w0, #0xd
  421f68:	b.ne	421fbc <nftw@plt+0x1f2cc>  // b.any
  421f6c:	ldrb	w0, [x19, #1]
  421f70:	cmp	w0, #0xa
  421f74:	b.ne	421fbc <nftw@plt+0x1f2cc>  // b.any
  421f78:	cmp	x1, x23
  421f7c:	b.ne	421fc0 <nftw@plt+0x1f2d0>  // b.any
  421f80:	mov	x1, x19
  421f84:	mov	w0, #0xa                   	// #10
  421f88:	add	x23, x23, #0x1
  421f8c:	mov	w2, #0xa                   	// #10
  421f90:	strb	w0, [x1], #1
  421f94:	mov	x0, x24
  421f98:	bl	4217d0 <nftw@plt+0x1eae0>
  421f9c:	ldp	x19, x20, [sp, #16]
  421fa0:	ldp	x21, x22, [sp, #32]
  421fa4:	ldp	x25, x26, [sp, #64]
  421fa8:	ldr	x27, [sp, #80]
  421fac:	str	x23, [x24, #16]
  421fb0:	ldp	x23, x24, [sp, #48]
  421fb4:	ldp	x29, x30, [sp], #96
  421fb8:	ret
  421fbc:	mov	x23, x19
  421fc0:	cbz	x20, 421f80 <nftw@plt+0x1f290>
  421fc4:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  421fc8:	mov	x1, x19
  421fcc:	add	x0, x0, #0xae
  421fd0:	ldurb	w2, [x1, #-1]
  421fd4:	mov	x21, x1
  421fd8:	sub	x1, x1, #0x1
  421fdc:	ldrh	w2, [x0, x2, lsl #1]
  421fe0:	tbnz	w2, #11, 421fd0 <nftw@plt+0x1f2e0>
  421fe4:	cmp	x20, x1
  421fe8:	b.ne	421f80 <nftw@plt+0x1f290>  // b.any
  421fec:	cmp	x21, x19
  421ff0:	mov	w0, #0x5c                  	// #92
  421ff4:	mov	x1, x20
  421ff8:	mov	w2, #0x20                  	// #32
  421ffc:	sub	x19, x21, #0x2
  422000:	csel	w2, w2, w0, ne  // ne = any
  422004:	mov	x0, x24
  422008:	bl	4217d0 <nftw@plt+0x1eae0>
  42200c:	str	x20, [x24, #16]
  422010:	b	421ecc <nftw@plt+0x1f1dc>
  422014:	cmp	w0, #0x5c
  422018:	b.ne	421f80 <nftw@plt+0x1f290>  // b.any
  42201c:	cmp	x21, x19
  422020:	sub	x23, x21, #0x1
  422024:	sub	x19, x21, #0x2
  422028:	mov	x1, x23
  42202c:	mov	w2, #0x20                  	// #32
  422030:	csel	w2, w2, w0, ne  // ne = any
  422034:	mov	x0, x24
  422038:	bl	4217d0 <nftw@plt+0x1eae0>
  42203c:	str	x23, [x24, #16]
  422040:	mov	x27, x19
  422044:	mov	x21, x20
  422048:	b	421ee4 <nftw@plt+0x1f1f4>
  42204c:	cmp	w1, #0x3f
  422050:	b.ne	422040 <nftw@plt+0x1f350>  // b.any
  422054:	ldrb	w0, [x21, #2]
  422058:	cmp	w0, #0x3f
  42205c:	b.ne	422040 <nftw@plt+0x1f350>  // b.any
  422060:	ldrb	w0, [x21, #3]
  422064:	ldrb	w2, [x21, #3]
  422068:	ldrb	w0, [x25, x0]
  42206c:	cbz	w0, 422040 <nftw@plt+0x1f350>
  422070:	mov	x0, x24
  422074:	mov	x1, x19
  422078:	bl	4217d0 <nftw@plt+0x1eae0>
  42207c:	ldrb	w0, [x22, #1125]
  422080:	cbz	w0, 422040 <nftw@plt+0x1f350>
  422084:	mov	x20, x21
  422088:	ldrb	w0, [x20, #3]!
  42208c:	ldrb	w0, [x25, x0]
  422090:	strb	w0, [x27, #1]
  422094:	b	422040 <nftw@plt+0x1f350>
  422098:	ldrb	w0, [x19, #1]
  42209c:	cmp	w0, #0xa
  4220a0:	csel	x23, x23, x19, eq  // eq = none
  4220a4:	b	421f80 <nftw@plt+0x1f290>
  4220a8:	stp	x29, x30, [sp, #-96]!
  4220ac:	mov	x29, sp
  4220b0:	stp	x19, x20, [sp, #16]
  4220b4:	mov	x19, x0
  4220b8:	stp	x21, x22, [sp, #32]
  4220bc:	mov	w22, w1
  4220c0:	stp	x23, x24, [sp, #48]
  4220c4:	adrp	x23, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4220c8:	adrp	x24, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4220cc:	add	x23, x23, #0x914
  4220d0:	add	x24, x24, #0x98c
  4220d4:	stp	x25, x26, [sp, #64]
  4220d8:	mov	w25, #0x18                  	// #24
  4220dc:	ldr	x20, [x0]
  4220e0:	str	x27, [sp, #80]
  4220e4:	ldr	w1, [x20, #56]
  4220e8:	ldr	x27, [x20, #48]
  4220ec:	ubfiz	x26, x1, #4, #32
  4220f0:	ldr	x3, [x20]
  4220f4:	add	x2, x27, x26
  4220f8:	ldr	x0, [x27, x26]
  4220fc:	cmp	x0, x3
  422100:	b.hi	4222a0 <nftw@plt+0x1f5b0>  // b.pmore
  422104:	add	w1, w1, #0x1
  422108:	ldr	w5, [x2, #8]
  42210c:	str	w1, [x20, #56]
  422110:	add	x21, x0, #0x1
  422114:	ldr	x1, [x20, #8]
  422118:	cmp	w5, #0x5c
  42211c:	sub	x21, x21, x1
  422120:	b.eq	422150 <nftw@plt+0x1f460>  // b.none
  422124:	cmp	w5, #0x20
  422128:	b.ne	4221d0 <nftw@plt+0x1f4e0>  // b.any
  42212c:	cbnz	w22, 422150 <nftw@plt+0x1f460>
  422130:	ldr	x0, [x19, #40]
  422134:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422138:	mov	w3, w21
  42213c:	add	x4, x4, #0x8eb
  422140:	mov	w1, #0x0                   	// #0
  422144:	ldr	w2, [x0, #60]
  422148:	mov	x0, x19
  42214c:	bl	41c1d0 <nftw@plt+0x194e0>
  422150:	ldr	x1, [x20, #16]
  422154:	ldr	x0, [x20, #32]
  422158:	cmp	x1, x0
  42215c:	b.ls	422184 <nftw@plt+0x1f494>  // b.plast
  422160:	ldr	x0, [x19, #40]
  422164:	mov	x4, x23
  422168:	mov	w3, w21
  42216c:	mov	w1, #0x2                   	// #2
  422170:	ldr	w2, [x0, #60]
  422174:	mov	x0, x19
  422178:	bl	41c1d0 <nftw@plt+0x194e0>
  42217c:	ldr	x0, [x20, #32]
  422180:	str	x0, [x20, #16]
  422184:	ldr	x0, [x27, x26]
  422188:	str	x0, [x20, #8]
  42218c:	ldr	x0, [x19, #40]
  422190:	ldr	w2, [x0, #12]
  422194:	ldr	x1, [x0]
  422198:	sub	w2, w2, #0x1
  42219c:	ldr	w3, [x0, #60]
  4221a0:	smull	x2, w2, w25
  4221a4:	add	x4, x1, x2
  4221a8:	ldr	w1, [x1, x2]
  4221ac:	mov	w2, #0x0                   	// #0
  4221b0:	sub	w3, w3, w1
  4221b4:	ldrb	w1, [x4, #6]
  4221b8:	lsr	w3, w3, w1
  4221bc:	ldr	w1, [x4, #16]
  4221c0:	add	w1, w1, #0x1
  4221c4:	add	w1, w3, w1
  4221c8:	bl	425f10 <nftw@plt+0x23220>
  4221cc:	b	4220e4 <nftw@plt+0x1f3f4>
  4221d0:	ldrb	w6, [x24, w5, uxtw]
  4221d4:	cbz	w6, 422284 <nftw@plt+0x1f594>
  4221d8:	ldrb	w1, [x19, #1136]
  4221dc:	cbz	w1, 4220e4 <nftw@plt+0x1f3f4>
  4221e0:	cbz	w22, 422200 <nftw@plt+0x1f510>
  4221e4:	cmp	w5, #0x2f
  4221e8:	b.ne	4220e4 <nftw@plt+0x1f3f4>  // b.any
  4221ec:	ldrb	w1, [x19, #1125]
  4221f0:	cbz	w1, 42222c <nftw@plt+0x1f53c>
  4221f4:	ldr	x1, [x2, #16]
  4221f8:	cmp	x0, x1
  4221fc:	b.ne	4220e4 <nftw@plt+0x1f3f4>  // b.any
  422200:	ldr	x0, [x19, #40]
  422204:	ldr	w2, [x0, #60]
  422208:	ldrb	w0, [x19, #1125]
  42220c:	cbz	w0, 422268 <nftw@plt+0x1f578>
  422210:	mov	w3, w21
  422214:	mov	x0, x19
  422218:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42221c:	mov	w1, #0x4                   	// #4
  422220:	add	x4, x4, #0x935
  422224:	bl	41c240 <nftw@plt+0x19550>
  422228:	b	4220e4 <nftw@plt+0x1f3f4>
  42222c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  422230:	add	x0, x0, #0x3
  422234:	add	x1, x1, #0xae
  422238:	ldrb	w4, [x0]
  42223c:	ldrb	w3, [x0]
  422240:	ldrh	w4, [x1, x4, lsl #1]
  422244:	tbz	w4, #11, 422250 <nftw@plt+0x1f560>
  422248:	add	x0, x0, #0x1
  42224c:	b	422238 <nftw@plt+0x1f548>
  422250:	cmp	w3, #0xa
  422254:	b.ne	4220e4 <nftw@plt+0x1f3f4>  // b.any
  422258:	ldr	x1, [x2, #16]
  42225c:	cmp	x0, x1
  422260:	b.cs	4220e4 <nftw@plt+0x1f3f4>  // b.hs, b.nlast
  422264:	b	422200 <nftw@plt+0x1f510>
  422268:	mov	w3, w21
  42226c:	mov	x0, x19
  422270:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422274:	mov	w1, #0x4                   	// #4
  422278:	add	x4, x4, #0x953
  42227c:	bl	41c240 <nftw@plt+0x19550>
  422280:	b	4220e4 <nftw@plt+0x1f3f4>
  422284:	cbz	w5, 4220e4 <nftw@plt+0x1f3f4>
  422288:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42228c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422290:	add	x2, x2, #0x983
  422294:	add	x0, x0, #0x77e
  422298:	mov	w1, #0x48b                 	// #1163
  42229c:	bl	402d60 <nftw@plt+0x70>
  4222a0:	ldp	x19, x20, [sp, #16]
  4222a4:	ldp	x21, x22, [sp, #32]
  4222a8:	ldp	x23, x24, [sp, #48]
  4222ac:	ldp	x25, x26, [sp, #64]
  4222b0:	ldr	x27, [sp, #80]
  4222b4:	ldp	x29, x30, [sp], #96
  4222b8:	ret
  4222bc:	stp	x29, x30, [sp, #-64]!
  4222c0:	mov	x29, sp
  4222c4:	stp	x19, x20, [sp, #16]
  4222c8:	mov	x19, x0
  4222cc:	ldr	x20, [x0]
  4222d0:	stp	x21, x22, [sp, #32]
  4222d4:	adrp	x22, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4222d8:	add	x22, x22, #0x99b
  4222dc:	ldr	x1, [x20]
  4222e0:	str	x23, [sp, #48]
  4222e4:	mov	w23, #0x18                  	// #24
  4222e8:	mov	x0, x1
  4222ec:	add	x1, x1, #0x2
  4222f0:	ldrb	w2, [x0, #1]!
  4222f4:	cmp	w2, #0x2f
  4222f8:	csel	x1, x1, x0, eq  // eq = none
  4222fc:	mov	x21, x1
  422300:	ldrb	w0, [x21], #1
  422304:	cmp	w0, #0x2f
  422308:	b.ne	422364 <nftw@plt+0x1f674>  // b.any
  42230c:	ldurb	w0, [x1, #-1]
  422310:	cmp	w0, #0x2a
  422314:	b.eq	4223e0 <nftw@plt+0x1f6f0>  // b.none
  422318:	ldrb	w0, [x19, #1133]
  42231c:	cbz	w0, 42235c <nftw@plt+0x1f66c>
  422320:	ldrb	w0, [x1, #1]
  422324:	cmp	w0, #0x2a
  422328:	b.ne	42235c <nftw@plt+0x1f66c>  // b.any
  42232c:	ldrb	w0, [x1, #2]
  422330:	cmp	w0, #0x2f
  422334:	b.eq	42235c <nftw@plt+0x1f66c>  // b.none
  422338:	ldr	x0, [x19, #40]
  42233c:	mov	x4, x22
  422340:	ldr	x3, [x20, #8]
  422344:	mov	w1, #0x2                   	// #2
  422348:	ldr	w2, [x0, #60]
  42234c:	mov	x0, x19
  422350:	str	x21, [x20]
  422354:	sub	w3, w21, w3
  422358:	bl	41c240 <nftw@plt+0x19550>
  42235c:	mov	x1, x21
  422360:	b	4222fc <nftw@plt+0x1f60c>
  422364:	cmp	w0, #0xa
  422368:	b.ne	42235c <nftw@plt+0x1f66c>  // b.any
  42236c:	str	x1, [x20]
  422370:	mov	x0, x19
  422374:	mov	w1, #0x1                   	// #1
  422378:	bl	4220a8 <nftw@plt+0x1f3b8>
  42237c:	ldr	x1, [x20, #16]
  422380:	ldr	x0, [x20, #32]
  422384:	cmp	x1, x0
  422388:	b.cs	422408 <nftw@plt+0x1f718>  // b.hs, b.nlast
  42238c:	mov	x0, x19
  422390:	bl	421cec <nftw@plt+0x1effc>
  422394:	ldr	x0, [x19, #40]
  422398:	ldp	x2, x6, [x20, #8]
  42239c:	ldr	w3, [x0, #12]
  4223a0:	ldr	x5, [x0]
  4223a4:	sub	w3, w3, #0x1
  4223a8:	ldr	w1, [x0, #60]
  4223ac:	sub	w2, w6, w2
  4223b0:	smull	x3, w3, w23
  4223b4:	add	x4, x5, x3
  4223b8:	ldr	w3, [x5, x3]
  4223bc:	sub	w3, w1, w3
  4223c0:	ldrb	w1, [x4, #6]
  4223c4:	lsr	w3, w3, w1
  4223c8:	ldr	w1, [x4, #16]
  4223cc:	add	w1, w1, #0x1
  4223d0:	add	w1, w3, w1
  4223d4:	bl	425f10 <nftw@plt+0x23220>
  4223d8:	ldr	x21, [x20]
  4223dc:	b	42235c <nftw@plt+0x1f66c>
  4223e0:	str	x21, [x20]
  4223e4:	mov	x0, x19
  4223e8:	mov	w1, #0x1                   	// #1
  4223ec:	bl	4220a8 <nftw@plt+0x1f3b8>
  4223f0:	mov	w0, #0x0                   	// #0
  4223f4:	ldp	x19, x20, [sp, #16]
  4223f8:	ldp	x21, x22, [sp, #32]
  4223fc:	ldr	x23, [sp, #48]
  422400:	ldp	x29, x30, [sp], #64
  422404:	ret
  422408:	mov	w0, #0x1                   	// #1
  42240c:	b	4223f4 <nftw@plt+0x1f704>
  422410:	stp	x29, x30, [sp, #-32]!
  422414:	mov	x2, x1
  422418:	adrp	x4, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  42241c:	mov	x29, sp
  422420:	stp	x19, x20, [sp, #16]
  422424:	mov	x19, x0
  422428:	add	x4, x4, #0xae
  42242c:	ldrb	w0, [x2], #1
  422430:	mov	w6, #0x204                 	// #516
  422434:	mov	w5, #0x43                  	// #67
  422438:	sub	w0, w0, #0x71
  42243c:	ldrb	w7, [x2]
  422440:	ldrb	w3, [x2]
  422444:	ldrh	w7, [x4, x7, lsl #1]
  422448:	tst	w6, w7
  42244c:	b.eq	422460 <nftw@plt+0x1f770>  // b.none
  422450:	madd	w0, w0, w5, w3
  422454:	add	x2, x2, #0x1
  422458:	sub	w0, w0, #0x71
  42245c:	b	42243c <nftw@plt+0x1f74c>
  422460:	sub	x3, x2, x1
  422464:	mov	w4, #0x1                   	// #1
  422468:	add	w3, w0, w3
  42246c:	sub	w2, w2, w1
  422470:	ldr	x0, [x19, #1088]
  422474:	bl	42c1c0 <nftw@plt+0x294d0>
  422478:	mov	x20, x0
  42247c:	ldrh	w0, [x0, #18]
  422480:	ubfx	x1, x0, #2, #8
  422484:	tbz	w0, #4, 422518 <nftw@plt+0x1f828>
  422488:	ldrb	w0, [x19, #18]
  42248c:	cbnz	w0, 422518 <nftw@plt+0x1f828>
  422490:	tbz	w1, #1, 4224b4 <nftw@plt+0x1f7c4>
  422494:	ldrb	w0, [x19, #23]
  422498:	cbnz	w0, 4224b4 <nftw@plt+0x1f7c4>
  42249c:	ldr	x3, [x20]
  4224a0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4224a4:	mov	x0, x19
  4224a8:	add	x2, x2, #0x810
  4224ac:	mov	w1, #0x3                   	// #3
  4224b0:	bl	41c014 <nftw@plt+0x19324>
  4224b4:	ldr	x0, [x19, #1272]
  4224b8:	cmp	x20, x0
  4224bc:	b.ne	4224e4 <nftw@plt+0x1f7f4>  // b.any
  4224c0:	ldrb	w0, [x19, #22]
  4224c4:	cbnz	w0, 4224e4 <nftw@plt+0x1f7f4>
  4224c8:	ldrb	w0, [x19, #1120]
  4224cc:	cbz	w0, 422528 <nftw@plt+0x1f838>
  4224d0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4224d4:	add	x2, x2, #0x82d
  4224d8:	mov	x0, x19
  4224dc:	mov	w1, #0x2                   	// #2
  4224e0:	bl	41c014 <nftw@plt+0x19324>
  4224e4:	ldr	x0, [x19, #1280]
  4224e8:	cmp	x20, x0
  4224ec:	b.ne	4224f8 <nftw@plt+0x1f808>  // b.any
  4224f0:	mov	x0, x19
  4224f4:	bl	4219cc <nftw@plt+0x1ecdc>
  4224f8:	ldrh	w0, [x20, #18]
  4224fc:	tbz	w0, #9, 422518 <nftw@plt+0x1f828>
  422500:	ldr	x3, [x20]
  422504:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422508:	mov	x0, x19
  42250c:	add	x2, x2, #0x8b9
  422510:	mov	w1, #0xf                   	// #15
  422514:	bl	41c080 <nftw@plt+0x19390>
  422518:	mov	x0, x20
  42251c:	ldp	x19, x20, [sp, #16]
  422520:	ldp	x29, x30, [sp], #32
  422524:	ret
  422528:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42252c:	add	x2, x2, #0x874
  422530:	b	4224d8 <nftw@plt+0x1f7e8>
  422534:	add	x0, x0, #0x568
  422538:	ret
  42253c:	stp	x29, x30, [sp, #-32]!
  422540:	mov	x29, sp
  422544:	stp	x19, x20, [sp, #16]
  422548:	mov	w20, #0x18                  	// #24
  42254c:	mov	x19, x0
  422550:	umull	x20, w1, w20
  422554:	mov	x0, x20
  422558:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42255c:	add	x1, x0, x20
  422560:	str	xzr, [x19]
  422564:	stp	x0, x1, [x19, #16]
  422568:	ldp	x19, x20, [sp, #16]
  42256c:	ldp	x29, x30, [sp], #32
  422570:	ret
  422574:	stp	x29, x30, [sp, #-32]!
  422578:	mov	x29, sp
  42257c:	str	x19, [sp, #16]
  422580:	mov	x19, x0
  422584:	ldr	x0, [x0]
  422588:	cbnz	x0, 4225a4 <nftw@plt+0x1f8b4>
  42258c:	mov	x0, #0x20                  	// #32
  422590:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  422594:	str	x0, [x19]
  422598:	mov	w1, #0xfa                  	// #250
  42259c:	str	x19, [x0, #8]
  4225a0:	bl	42253c <nftw@plt+0x1f84c>
  4225a4:	ldr	x0, [x19]
  4225a8:	ldr	x19, [sp, #16]
  4225ac:	ldp	x29, x30, [sp], #32
  4225b0:	ret
  4225b4:	ldr	w1, [x0, #48]
  4225b8:	cmp	w1, #0x1
  4225bc:	b.ne	4225e0 <nftw@plt+0x1f8f0>  // b.any
  4225c0:	ldr	x1, [x0, #24]
  4225c4:	ldr	x0, [x0, #16]
  4225c8:	sub	x0, x1, x0
  4225cc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4225d0:	movk	x1, #0xaaab
  4225d4:	asr	x0, x0, #3
  4225d8:	mul	w0, w0, w1
  4225dc:	ret
  4225e0:	tst	w1, #0xfffffffd
  4225e4:	b.ne	4225fc <nftw@plt+0x1f90c>  // b.any
  4225e8:	ldr	x1, [x0, #24]
  4225ec:	ldr	x0, [x0, #16]
  4225f0:	sub	x0, x1, x0
  4225f4:	ubfx	x0, x0, #3, #32
  4225f8:	ret
  4225fc:	stp	x29, x30, [sp, #-16]!
  422600:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422604:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422608:	mov	x29, sp
  42260c:	add	x2, x2, #0x9af
  422610:	add	x0, x0, #0x77e
  422614:	mov	w1, #0x99f                 	// #2463
  422618:	bl	402d60 <nftw@plt+0x70>
  42261c:	stp	x29, x30, [sp, #-64]!
  422620:	mov	x29, sp
  422624:	stp	x19, x20, [sp, #16]
  422628:	mov	x19, x0
  42262c:	stp	x21, x22, [sp, #32]
  422630:	ldr	w21, [x0, #496]
  422634:	ldr	x0, [x0, #488]
  422638:	stp	x23, x24, [sp, #48]
  42263c:	ldr	x23, [x19, #448]
  422640:	ldr	x22, [x0, #24]
  422644:	sub	x22, x22, x23
  422648:	cbz	x21, 4226f8 <nftw@plt+0x1fa08>
  42264c:	asr	x20, x22, #3
  422650:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  422654:	movk	x2, #0xaaab
  422658:	mul	x20, x20, x2
  42265c:	cmp	x20, x21
  422660:	b.gt	4226a8 <nftw@plt+0x1f9b8>
  422664:	bl	422574 <nftw@plt+0x1f884>
  422668:	mov	x24, x0
  42266c:	cmp	x20, x21
  422670:	b.ge	42268c <nftw@plt+0x1f99c>  // b.tcont
  422674:	sub	x2, x21, x20
  422678:	mov	x0, #0x18                  	// #24
  42267c:	ldr	x1, [x24, #16]
  422680:	mul	x2, x2, x0
  422684:	add	x0, x1, x0
  422688:	bl	4025e0 <memmove@plt>
  42268c:	ldr	x1, [x19, #488]
  422690:	ldr	x0, [x24, #16]
  422694:	ldr	x1, [x1, #24]
  422698:	ldp	x2, x3, [x1, #-24]
  42269c:	stp	x2, x3, [x0]
  4226a0:	ldur	x1, [x1, #-8]
  4226a4:	str	x1, [x0, #16]
  4226a8:	cmp	x22, #0x18
  4226ac:	b.le	4226f8 <nftw@plt+0x1fa08>
  4226b0:	sub	x20, x20, #0x1
  4226b4:	mov	x2, #0x18                  	// #24
  4226b8:	cmp	x20, x21
  4226bc:	csel	x20, x20, x21, le
  4226c0:	ldr	x1, [x19, #448]
  4226c4:	mul	x2, x20, x2
  4226c8:	add	x0, x1, #0x18
  4226cc:	bl	4025e0 <memmove@plt>
  4226d0:	ldr	x0, [x19, #448]
  4226d4:	ldp	x21, x22, [sp, #32]
  4226d8:	add	x1, x0, #0x18
  4226dc:	str	x1, [x19, #448]
  4226e0:	ldur	w1, [x23, #-24]
  4226e4:	ldp	x19, x20, [sp, #16]
  4226e8:	ldp	x23, x24, [sp, #48]
  4226ec:	str	w1, [x0]
  4226f0:	ldp	x29, x30, [sp], #64
  4226f4:	ret
  4226f8:	cbnz	x22, 4226d0 <nftw@plt+0x1f9e0>
  4226fc:	ldr	x0, [x19, #488]
  422700:	ldr	x1, [x19, #448]
  422704:	ldr	x2, [x0, #24]
  422708:	cmp	x2, x1
  42270c:	b.ne	4226d0 <nftw@plt+0x1f9e0>  // b.any
  422710:	bl	422574 <nftw@plt+0x1f884>
  422714:	str	x0, [x19, #488]
  422718:	ldr	x0, [x0, #16]
  42271c:	str	x0, [x19, #448]
  422720:	b	4226d0 <nftw@plt+0x1f9e0>
  422724:	stp	x29, x30, [sp, #-32]!
  422728:	mov	x29, sp
  42272c:	stp	x19, x20, [sp, #16]
  422730:	mov	x19, x0
  422734:	ldrb	w0, [x0, #16]
  422738:	cbnz	w0, 4227b0 <nftw@plt+0x1fac0>
  42273c:	ldr	x0, [x19]
  422740:	ldrb	w20, [x0, #104]
  422744:	cbz	w20, 4227b8 <nftw@plt+0x1fac8>
  422748:	ldr	x3, [x0, #16]
  42274c:	ldr	x2, [x0, #32]
  422750:	cmp	x3, x2
  422754:	b.cs	422770 <nftw@plt+0x1fa80>  // b.hs, b.nlast
  422758:	mov	x0, x19
  42275c:	bl	421cec <nftw@plt+0x1effc>
  422760:	mov	w0, w20
  422764:	ldp	x19, x20, [sp, #16]
  422768:	ldp	x29, x30, [sp], #32
  42276c:	ret
  422770:	ldrb	w1, [x19, #25]
  422774:	cbnz	w1, 4227b0 <nftw@plt+0x1fac0>
  422778:	ldr	x1, [x0, #24]
  42277c:	cmp	x2, x1
  422780:	ldrb	w1, [x0, #105]
  422784:	b.eq	422798 <nftw@plt+0x1faa8>  // b.none
  422788:	cmp	x3, x2
  42278c:	b.ls	422798 <nftw@plt+0x1faa8>  // b.plast
  422790:	tbnz	w1, #1, 422798 <nftw@plt+0x1faa8>
  422794:	str	x2, [x0, #16]
  422798:	mov	x0, x19
  42279c:	ubfx	x20, x1, #2, #1
  4227a0:	bl	41b37c <nftw@plt+0x1868c>
  4227a4:	ldr	x0, [x19]
  4227a8:	cbz	x0, 4227b0 <nftw@plt+0x1fac0>
  4227ac:	cbz	w20, 42273c <nftw@plt+0x1fa4c>
  4227b0:	mov	w20, #0x0                   	// #0
  4227b4:	b	422760 <nftw@plt+0x1fa70>
  4227b8:	mov	w20, #0x1                   	// #1
  4227bc:	b	422760 <nftw@plt+0x1fa70>
  4227c0:	ldrb	w1, [x0, #4]
  4227c4:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4227c8:	add	x2, x2, #0xfd0
  4227cc:	lsl	x1, x1, #4
  4227d0:	ldr	w1, [x2, x1]
  4227d4:	cmp	w1, #0x1
  4227d8:	b.eq	4227ec <nftw@plt+0x1fafc>  // b.none
  4227dc:	cmp	w1, #0x2
  4227e0:	b.ne	422800 <nftw@plt+0x1fb10>  // b.any
  4227e4:	ldr	w0, [x0, #8]
  4227e8:	ret
  4227ec:	ldr	x0, [x0, #8]
  4227f0:	mov	w1, #0xa                   	// #10
  4227f4:	ldr	w0, [x0, #8]
  4227f8:	mul	w0, w0, w1
  4227fc:	b	4227e8 <nftw@plt+0x1faf8>
  422800:	mov	w0, #0x6                   	// #6
  422804:	b	4227e8 <nftw@plt+0x1faf8>
  422808:	stp	x29, x30, [sp, #-48]!
  42280c:	mov	x29, sp
  422810:	stp	x21, x22, [sp, #32]
  422814:	mov	x21, x1
  422818:	ldr	x22, [x1]
  42281c:	stp	x19, x20, [sp, #16]
  422820:	mov	x19, x0
  422824:	mov	x20, #0x0                   	// #0
  422828:	ldr	w0, [x21, #8]
  42282c:	cmp	x0, x20
  422830:	b.ls	422864 <nftw@plt+0x1fb74>  // b.plast
  422834:	ldrb	w0, [x22, x20]
  422838:	add	x1, x22, x20
  42283c:	tbz	w0, #7, 42285c <nftw@plt+0x1fb6c>
  422840:	sub	x20, x20, #0x1
  422844:	mov	x0, x19
  422848:	add	x19, x19, #0xa
  42284c:	bl	42191c <nftw@plt+0x1ec2c>
  422850:	add	x20, x0, x20
  422854:	add	x20, x20, #0x1
  422858:	b	422828 <nftw@plt+0x1fb38>
  42285c:	strb	w0, [x19], #1
  422860:	b	422854 <nftw@plt+0x1fb64>
  422864:	mov	x0, x19
  422868:	ldp	x19, x20, [sp, #16]
  42286c:	ldp	x21, x22, [sp, #32]
  422870:	ldp	x29, x30, [sp], #48
  422874:	ret
  422878:	stp	x29, x30, [sp, #-32]!
  42287c:	mov	x29, sp
  422880:	stp	x19, x20, [sp, #16]
  422884:	mov	x20, x1
  422888:	mov	x19, x2
  42288c:	ldrb	w4, [x1, #4]
  422890:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422894:	ldrb	w2, [x20, #4]
  422898:	add	x1, x1, #0xfd0
  42289c:	lsl	x5, x2, #4
  4228a0:	ldr	w6, [x1, x5]
  4228a4:	cmp	w6, #0x3
  4228a8:	b.hi	42292c <nftw@plt+0x1fc3c>  // b.pmore
  4228ac:	adrp	x5, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4228b0:	and	w3, w3, #0xff
  4228b4:	add	x5, x5, #0xea0
  4228b8:	ldrb	w5, [x5, w6, uxtw]
  4228bc:	adr	x6, 4228c8 <nftw@plt+0x1fbd8>
  4228c0:	add	x5, x6, w5, sxtb #2
  4228c4:	br	x5
  4228c8:	ldrh	w0, [x20, #6]
  4228cc:	tbz	w0, #1, 4228f8 <nftw@plt+0x1fc08>
  4228d0:	add	x1, x1, #0x540
  4228d4:	sub	w4, w4, #0x25
  4228d8:	ldr	x2, [x1, w4, sxtw #3]
  4228dc:	mov	x0, #0x0                   	// #0
  4228e0:	ldrb	w1, [x2, x0]
  4228e4:	add	x3, x19, x0
  4228e8:	cbz	w1, 422984 <nftw@plt+0x1fc94>
  4228ec:	strb	w1, [x19, x0]
  4228f0:	add	x0, x0, #0x1
  4228f4:	b	4228e0 <nftw@plt+0x1fbf0>
  4228f8:	tbnz	w0, #4, 422908 <nftw@plt+0x1fc18>
  4228fc:	add	x1, x1, x2, lsl #4
  422900:	ldr	x2, [x1, #8]
  422904:	b	4228dc <nftw@plt+0x1fbec>
  422908:	cbz	w3, 42293c <nftw@plt+0x1fc4c>
  42290c:	ldr	x0, [x20, #16]
  422910:	ldr	w2, [x0, #8]
  422914:	ldr	x1, [x0]
  422918:	mov	x0, x19
  42291c:	bl	4025d0 <memcpy@plt>
  422920:	ldr	x0, [x20, #16]
  422924:	ldr	w0, [x0, #8]
  422928:	add	x19, x19, x0
  42292c:	mov	x0, x19
  422930:	ldp	x19, x20, [sp, #16]
  422934:	ldp	x29, x30, [sp], #32
  422938:	ret
  42293c:	mov	x0, x19
  422940:	ldr	x1, [x20, #8]
  422944:	ldp	x19, x20, [sp, #16]
  422948:	ldp	x29, x30, [sp], #32
  42294c:	b	422808 <nftw@plt+0x1fb18>
  422950:	ldr	w2, [x20, #8]
  422954:	mov	x0, x19
  422958:	ldr	x1, [x20, #16]
  42295c:	bl	4025d0 <memcpy@plt>
  422960:	ldr	w0, [x20, #8]
  422964:	b	422928 <nftw@plt+0x1fc38>
  422968:	add	x1, x1, x2, lsl #4
  42296c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422970:	add	x2, x2, #0x9d4
  422974:	ldr	x3, [x1, #8]
  422978:	mov	w1, #0x4                   	// #4
  42297c:	bl	41c014 <nftw@plt+0x19324>
  422980:	b	42292c <nftw@plt+0x1fc3c>
  422984:	mov	x19, x3
  422988:	b	42292c <nftw@plt+0x1fc3c>
  42298c:	stp	x29, x30, [sp, #-48]!
  422990:	mov	x29, sp
  422994:	stp	x19, x20, [sp, #16]
  422998:	mov	x20, x0
  42299c:	stp	x21, x22, [sp, #32]
  4229a0:	mov	x21, x1
  4229a4:	ldr	w1, [x0, #1192]
  4229a8:	ldr	w0, [x2]
  4229ac:	cmp	w1, w0
  4229b0:	b.ge	422a38 <nftw@plt+0x1fd48>  // b.tcont
  4229b4:	ldrb	w0, [x20, #18]
  4229b8:	cbnz	w0, 422a38 <nftw@plt+0x1fd48>
  4229bc:	mov	x22, x2
  4229c0:	mov	x0, x21
  4229c4:	bl	4227c0 <nftw@plt+0x1fad0>
  4229c8:	mov	w0, w0
  4229cc:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4229d0:	mov	x19, x0
  4229d4:	mov	x2, x0
  4229d8:	mov	x1, x21
  4229dc:	mov	x0, x20
  4229e0:	mov	w3, #0x0                   	// #0
  4229e4:	bl	422878 <nftw@plt+0x1fb88>
  4229e8:	sub	x5, x0, x19
  4229ec:	ldr	w0, [x22]
  4229f0:	mov	x6, x19
  4229f4:	cmp	w0, #0x1
  4229f8:	b.ne	422a2c <nftw@plt+0x1fd3c>  // b.any
  4229fc:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422a00:	add	x4, x4, #0x9e9
  422a04:	ldr	w2, [x21]
  422a08:	mov	x0, x20
  422a0c:	mov	w3, #0x0                   	// #0
  422a10:	mov	w1, #0x10                  	// #16
  422a14:	bl	41c240 <nftw@plt+0x19550>
  422a18:	mov	x0, x19
  422a1c:	ldp	x19, x20, [sp, #16]
  422a20:	ldp	x21, x22, [sp, #32]
  422a24:	ldp	x29, x30, [sp], #48
  422a28:	b	402a80 <free@plt>
  422a2c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422a30:	add	x4, x4, #0x9ff
  422a34:	b	422a04 <nftw@plt+0x1fd14>
  422a38:	ldp	x19, x20, [sp, #16]
  422a3c:	ldp	x21, x22, [sp, #32]
  422a40:	ldp	x29, x30, [sp], #48
  422a44:	ret
  422a48:	mov	w2, w0
  422a4c:	and	w3, w1, #0xff
  422a50:	tst	w1, #0x2
  422a54:	b.eq	422a70 <nftw@plt+0x1fd80>  // b.none
  422a58:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422a5c:	add	x0, x0, #0xfd0
  422a60:	sub	w2, w2, #0x25
  422a64:	add	x0, x0, #0x540
  422a68:	ldr	x0, [x0, w2, sxtw #3]
  422a6c:	ret
  422a70:	tbz	w3, #4, 422a78 <nftw@plt+0x1fd88>
  422a74:	b	42e448 <nftw@plt+0x2b758>
  422a78:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422a7c:	add	x0, x0, #0xfd0
  422a80:	add	x2, x0, w2, sxtw #4
  422a84:	ldr	x0, [x2, #8]
  422a88:	b	422a6c <nftw@plt+0x1fd7c>
  422a8c:	stp	x29, x30, [sp, #-64]!
  422a90:	mov	x29, sp
  422a94:	stp	x19, x20, [sp, #16]
  422a98:	mov	x20, x0
  422a9c:	ldrb	w2, [x0, #4]
  422aa0:	stp	x21, x22, [sp, #32]
  422aa4:	mov	x21, x1
  422aa8:	ldrb	w1, [x20, #4]
  422aac:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422ab0:	add	x0, x0, #0xfd0
  422ab4:	lsl	x3, x1, #4
  422ab8:	add	x1, x0, x1, lsl #4
  422abc:	ldr	w3, [x0, x3]
  422ac0:	cmp	w3, #0x1
  422ac4:	b.eq	422b18 <nftw@plt+0x1fe28>  // b.none
  422ac8:	cmp	w3, #0x2
  422acc:	b.eq	422b80 <nftw@plt+0x1fe90>  // b.none
  422ad0:	cbnz	w3, 422afc <nftw@plt+0x1fe0c>
  422ad4:	ldrh	w3, [x20, #6]
  422ad8:	tbz	w3, #1, 422b0c <nftw@plt+0x1fe1c>
  422adc:	add	x0, x0, #0x540
  422ae0:	sub	w1, w2, #0x25
  422ae4:	ldr	x19, [x0, w1, sxtw #3]
  422ae8:	ldrb	w0, [x19]
  422aec:	mov	x1, x21
  422af0:	bl	402740 <putc_unlocked@plt>
  422af4:	ldrb	w0, [x19, #1]!
  422af8:	cbnz	w0, 422aec <nftw@plt+0x1fdfc>
  422afc:	ldp	x19, x20, [sp, #16]
  422b00:	ldp	x21, x22, [sp, #32]
  422b04:	ldp	x29, x30, [sp], #64
  422b08:	ret
  422b0c:	tbnz	w3, #4, 422b18 <nftw@plt+0x1fe28>
  422b10:	ldr	x19, [x1, #8]
  422b14:	b	422ae8 <nftw@plt+0x1fdf8>
  422b18:	ldr	x0, [x20, #8]
  422b1c:	mov	x19, #0x0                   	// #0
  422b20:	ldr	x22, [x0]
  422b24:	ldr	x0, [x20, #8]
  422b28:	ldr	w1, [x0, #8]
  422b2c:	cmp	x1, x19
  422b30:	b.ls	422afc <nftw@plt+0x1fe0c>  // b.plast
  422b34:	ldrb	w2, [x22, x19]
  422b38:	add	x1, x22, x19
  422b3c:	tbz	w2, #7, 422b6c <nftw@plt+0x1fe7c>
  422b40:	add	x0, sp, #0x30
  422b44:	sub	x19, x19, #0x1
  422b48:	bl	42191c <nftw@plt+0x1ec2c>
  422b4c:	add	x19, x0, x19
  422b50:	mov	x3, x21
  422b54:	add	x0, sp, #0x30
  422b58:	mov	x2, #0xa                   	// #10
  422b5c:	mov	x1, #0x1                   	// #1
  422b60:	bl	402610 <fwrite_unlocked@plt>
  422b64:	add	x19, x19, #0x1
  422b68:	b	422b24 <nftw@plt+0x1fe34>
  422b6c:	ldr	x0, [x0]
  422b70:	mov	x1, x21
  422b74:	ldrb	w0, [x0, x19]
  422b78:	bl	402b80 <fputc_unlocked@plt>
  422b7c:	b	422b64 <nftw@plt+0x1fe74>
  422b80:	ldr	w2, [x20, #8]
  422b84:	mov	x3, x21
  422b88:	ldr	x0, [x20, #16]
  422b8c:	mov	x1, #0x1                   	// #1
  422b90:	bl	402610 <fwrite_unlocked@plt>
  422b94:	b	422afc <nftw@plt+0x1fe0c>
  422b98:	ldr	w3, [x0, #4]
  422b9c:	ldr	w2, [x1, #4]
  422ba0:	and	w3, w3, #0xffff00ff
  422ba4:	and	w2, w2, #0xffff00ff
  422ba8:	cmp	w3, w2
  422bac:	b.ne	422c74 <nftw@plt+0x1ff84>  // b.any
  422bb0:	ldrb	w2, [x0, #4]
  422bb4:	adrp	x3, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422bb8:	add	x3, x3, #0xfd0
  422bbc:	ldrb	w4, [x0, #4]
  422bc0:	lsl	x2, x2, #4
  422bc4:	ldr	w2, [x3, x2]
  422bc8:	cmp	w2, #0x2
  422bcc:	b.eq	422c3c <nftw@plt+0x1ff4c>  // b.none
  422bd0:	cmp	w2, #0x3
  422bd4:	b.eq	422bfc <nftw@plt+0x1ff0c>  // b.none
  422bd8:	cmp	w2, #0x1
  422bdc:	b.eq	422c2c <nftw@plt+0x1ff3c>  // b.none
  422be0:	cmp	w4, #0x26
  422be4:	b.ne	422c24 <nftw@plt+0x1ff34>  // b.any
  422be8:	ldr	w2, [x0, #8]
  422bec:	ldr	w0, [x1, #8]
  422bf0:	cmp	w2, w0
  422bf4:	cset	w0, eq  // eq = none
  422bf8:	ret
  422bfc:	cmp	w4, #0x50
  422c00:	b.ne	422c24 <nftw@plt+0x1ff34>  // b.any
  422c04:	ldr	w3, [x0, #8]
  422c08:	ldr	w2, [x1, #8]
  422c0c:	cmp	w3, w2
  422c10:	b.ne	422c74 <nftw@plt+0x1ff84>  // b.any
  422c14:	ldr	x2, [x0, #16]
  422c18:	ldr	x0, [x1, #16]
  422c1c:	cmp	x2, x0
  422c20:	b	422bf4 <nftw@plt+0x1ff04>
  422c24:	mov	w0, #0x1                   	// #1
  422c28:	ret
  422c2c:	ldr	x3, [x0, #8]
  422c30:	ldr	x2, [x1, #8]
  422c34:	cmp	x3, x2
  422c38:	b	422c10 <nftw@plt+0x1ff20>
  422c3c:	ldr	w2, [x0, #8]
  422c40:	ldr	w3, [x1, #8]
  422c44:	cmp	w2, w3
  422c48:	b.ne	422c74 <nftw@plt+0x1ff84>  // b.any
  422c4c:	stp	x29, x30, [sp, #-16]!
  422c50:	mov	w2, w2
  422c54:	mov	x29, sp
  422c58:	ldr	x0, [x0, #16]
  422c5c:	ldr	x1, [x1, #16]
  422c60:	bl	4029c0 <memcmp@plt>
  422c64:	cmp	w0, #0x0
  422c68:	cset	w0, eq  // eq = none
  422c6c:	ldp	x29, x30, [sp], #16
  422c70:	ret
  422c74:	mov	w0, #0x0                   	// #0
  422c78:	ret
  422c7c:	mov	x7, x0
  422c80:	ldrh	w0, [x1, #6]
  422c84:	ldrb	w5, [x1, #4]
  422c88:	mov	w4, #0x35                  	// #53
  422c8c:	ldrb	w8, [x2, #4]
  422c90:	adrp	x6, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422c94:	tst	x0, #0x10
  422c98:	ldrh	w0, [x2, #6]
  422c9c:	csel	w5, w5, w4, eq  // eq = none
  422ca0:	add	x6, x6, #0xfd0
  422ca4:	tst	x0, #0x10
  422ca8:	csel	w4, w8, w4, eq  // eq = none
  422cac:	tbz	w0, #1, 422ce8 <nftw@plt+0x1fff8>
  422cb0:	add	x0, x6, #0x540
  422cb4:	sub	w3, w4, #0x25
  422cb8:	ldr	x0, [x0, w3, sxtw #3]
  422cbc:	ldrb	w3, [x0]
  422cc0:	cmp	w5, #0xd
  422cc4:	cset	w0, le
  422cc8:	cmp	w3, #0x3d
  422ccc:	csel	w0, w0, wzr, eq  // eq = none
  422cd0:	cbnz	w0, 422f0c <nftw@plt+0x2021c>
  422cd4:	cmp	w5, #0x12
  422cd8:	b.hi	422d44 <nftw@plt+0x20054>  // b.pmore
  422cdc:	cmp	w5, #0x1
  422ce0:	b.hi	422d20 <nftw@plt+0x20030>  // b.pmore
  422ce4:	ret
  422ce8:	sbfiz	x3, x4, #4, #32
  422cec:	add	x0, x6, w4, sxtw #4
  422cf0:	ldr	w3, [x6, x3]
  422cf4:	cbnz	w3, 422d00 <nftw@plt+0x20010>
  422cf8:	ldr	x0, [x0, #8]
  422cfc:	b	422cbc <nftw@plt+0x1ffcc>
  422d00:	mov	w3, #0xffffffff            	// #-1
  422d04:	b	422cc0 <nftw@plt+0x1ffd0>
  422d08:	adrp	x9, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422d0c:	add	x9, x9, #0xea4
  422d10:	ldrb	w5, [x9, w5, uxtw]
  422d14:	adr	x9, 422d20 <nftw@plt+0x20030>
  422d18:	add	x5, x9, w5, sxtb #2
  422d1c:	br	x5
  422d20:	sub	w5, w5, #0x2
  422d24:	cmp	w5, #0x10
  422d28:	b.hi	422d58 <nftw@plt+0x20068>  // b.pmore
  422d2c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422d30:	add	x0, x0, #0xeb8
  422d34:	ldrb	w0, [x0, w5, uxtw]
  422d38:	adr	x1, 422d44 <nftw@plt+0x20054>
  422d3c:	add	x0, x1, w0, sxtb #2
  422d40:	br	x0
  422d44:	cmp	w5, #0x25
  422d48:	b.eq	422df4 <nftw@plt+0x20104>  // b.none
  422d4c:	sub	w5, w5, #0x2f
  422d50:	cmp	w5, #0x13
  422d54:	b.ls	422d08 <nftw@plt+0x20018>  // b.plast
  422d58:	mov	w0, #0x0                   	// #0
  422d5c:	b	422ce4 <nftw@plt+0x1fff4>
  422d60:	cmp	w3, #0x3e
  422d64:	cset	w0, eq  // eq = none
  422d68:	b	422ce4 <nftw@plt+0x1fff4>
  422d6c:	mov	x0, #0x2000000000          	// #137438953472
  422d70:	cmp	w3, #0x3d
  422d74:	movk	x0, #0x1400, lsl #48
  422d78:	lsr	x0, x0, x3
  422d7c:	mvn	x0, x0
  422d80:	and	w0, w0, #0x1
  422d84:	csinc	w0, w0, wzr, cc  // cc = lo, ul, last
  422d88:	eor	w0, w0, #0x1
  422d8c:	b	422ce4 <nftw@plt+0x1fff4>
  422d90:	cmp	w3, #0x2b
  422d94:	b	422d64 <nftw@plt+0x20074>
  422d98:	cmp	w3, #0x2d
  422d9c:	mov	w0, #0x3e                  	// #62
  422da0:	ccmp	w3, w0, #0x4, ne  // ne = any
  422da4:	b	422d64 <nftw@plt+0x20074>
  422da8:	cmp	w3, #0x2f
  422dac:	mov	w0, #0x2a                  	// #42
  422db0:	b	422da0 <nftw@plt+0x200b0>
  422db4:	cmp	w3, #0x26
  422db8:	b	422d64 <nftw@plt+0x20074>
  422dbc:	cmp	w3, #0x7c
  422dc0:	b	422d64 <nftw@plt+0x20074>
  422dc4:	and	w3, w3, #0xfffffffb
  422dc8:	cmp	w3, #0x3a
  422dcc:	b	422d64 <nftw@plt+0x20074>
  422dd0:	cmp	w3, #0x2a
  422dd4:	b	422d64 <nftw@plt+0x20074>
  422dd8:	cmp	w3, #0x2e
  422ddc:	cset	w0, eq  // eq = none
  422de0:	cmp	w3, #0x25
  422de4:	csinc	w0, w0, wzr, ne  // ne = any
  422de8:	cbnz	w0, 422ce4 <nftw@plt+0x1fff4>
  422dec:	cmp	w4, #0x37
  422df0:	b	422d64 <nftw@plt+0x20074>
  422df4:	cmp	w3, #0x23
  422df8:	ccmp	w3, w5, #0x4, ne  // ne = any
  422dfc:	b	422d64 <nftw@plt+0x20074>
  422e00:	cmp	w4, #0x37
  422e04:	b.ne	422e54 <nftw@plt+0x20164>  // b.any
  422e08:	ldr	w5, [x2, #8]
  422e0c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  422e10:	add	x1, x1, #0xae
  422e14:	mov	x0, #0x0                   	// #0
  422e18:	mov	w6, #0x204                 	// #516
  422e1c:	cmp	w5, w0
  422e20:	b.ls	422f0c <nftw@plt+0x2021c>  // b.plast
  422e24:	ldr	x3, [x2, #16]
  422e28:	ldrb	w8, [x3, x0]
  422e2c:	ldrb	w3, [x3, x0]
  422e30:	ldrh	w3, [x1, x3, lsl #1]
  422e34:	tst	w6, w3
  422e38:	b.ne	422e4c <nftw@plt+0x2015c>  // b.any
  422e3c:	cmp	w8, #0x24
  422e40:	b.ne	422e68 <nftw@plt+0x20178>  // b.any
  422e44:	ldrb	w3, [x7, #1146]
  422e48:	cbz	w3, 422e68 <nftw@plt+0x20178>
  422e4c:	add	x0, x0, #0x1
  422e50:	b	422e1c <nftw@plt+0x2012c>
  422e54:	cmp	w4, #0x35
  422e58:	cset	w0, eq  // eq = none
  422e5c:	cmp	w4, #0x38
  422e60:	csinc	w0, w0, wzr, ne  // ne = any
  422e64:	cbnz	w0, 422ce4 <nftw@plt+0x1fff4>
  422e68:	cmp	w4, #0x3e
  422e6c:	b	422d64 <nftw@plt+0x20074>
  422e70:	and	w4, w4, #0xfffffffd
  422e74:	cmp	w4, #0x35
  422e78:	b.eq	422f0c <nftw@plt+0x2021c>  // b.none
  422e7c:	cmp	w3, #0x2b
  422e80:	b.eq	422f0c <nftw@plt+0x2021c>  // b.none
  422e84:	sub	w3, w3, #0x2d
  422e88:	cmp	w3, #0x1
  422e8c:	cset	w0, ls  // ls = plast
  422e90:	b	422ce4 <nftw@plt+0x1fff4>
  422e94:	ldr	x1, [x1, #16]
  422e98:	ldrb	w1, [x1]
  422e9c:	cmp	w1, #0x5c
  422ea0:	b.ne	422eac <nftw@plt+0x201bc>  // b.any
  422ea4:	cmp	w4, #0x35
  422ea8:	b.eq	422f0c <nftw@plt+0x2021c>  // b.none
  422eac:	ldrb	w2, [x7, #1122]
  422eb0:	cbz	w2, 422ce4 <nftw@plt+0x1fff4>
  422eb4:	cmp	w1, #0x40
  422eb8:	b.ne	422ce4 <nftw@plt+0x1fff4>  // b.any
  422ebc:	cmp	w4, #0x35
  422ec0:	cset	w0, eq  // eq = none
  422ec4:	cmp	w4, #0x3e
  422ec8:	csinc	w0, w0, wzr, ne  // ne = any
  422ecc:	b	422ce4 <nftw@plt+0x1fff4>
  422ed0:	ldrb	w1, [x7, #1161]
  422ed4:	cbz	w1, 422ce4 <nftw@plt+0x1fff4>
  422ed8:	cmp	w4, #0x35
  422edc:	b.eq	422f0c <nftw@plt+0x2021c>  // b.none
  422ee0:	sbfiz	x8, x8, #4, #32
  422ee4:	ldr	w1, [x6, x8]
  422ee8:	cmp	w1, #0x2
  422eec:	b.ne	422ce4 <nftw@plt+0x1fff4>  // b.any
  422ef0:	ldr	x0, [x2, #16]
  422ef4:	ldrb	w1, [x0]
  422ef8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  422efc:	add	x0, x0, #0xae
  422f00:	ldrh	w0, [x0, x1, lsl #1]
  422f04:	ubfx	x0, x0, #9, #1
  422f08:	b	422ce4 <nftw@plt+0x1fff4>
  422f0c:	mov	w0, #0x1                   	// #1
  422f10:	b	422ce4 <nftw@plt+0x1fff4>
  422f14:	stp	x29, x30, [sp, #-48]!
  422f18:	mov	x29, sp
  422f1c:	stp	x19, x20, [sp, #16]
  422f20:	mov	x20, x1
  422f24:	str	x21, [sp, #32]
  422f28:	mov	x21, x0
  422f2c:	bl	42b37c <nftw@plt+0x2868c>
  422f30:	mov	x19, x0
  422f34:	ldrb	w0, [x19, #4]
  422f38:	mov	x1, x20
  422f3c:	cmp	w0, #0x16
  422f40:	b.eq	422f70 <nftw@plt+0x20280>  // b.none
  422f44:	mov	x0, x19
  422f48:	bl	422a8c <nftw@plt+0x1fd9c>
  422f4c:	mov	x0, x21
  422f50:	bl	42b37c <nftw@plt+0x2868c>
  422f54:	mov	x19, x0
  422f58:	ldrh	w0, [x0, #6]
  422f5c:	tbz	w0, #0, 422f34 <nftw@plt+0x20244>
  422f60:	mov	x1, x20
  422f64:	mov	w0, #0x20                  	// #32
  422f68:	bl	402740 <putc_unlocked@plt>
  422f6c:	b	422f34 <nftw@plt+0x20244>
  422f70:	ldp	x19, x20, [sp, #16]
  422f74:	mov	w0, #0xa                   	// #10
  422f78:	ldr	x21, [sp, #32]
  422f7c:	ldp	x29, x30, [sp], #48
  422f80:	b	402740 <putc_unlocked@plt>
  422f84:	stp	x29, x30, [sp, #-80]!
  422f88:	mov	x29, sp
  422f8c:	stp	x19, x20, [sp, #16]
  422f90:	stp	x21, x22, [sp, #32]
  422f94:	mov	x22, x0
  422f98:	mov	x21, x1
  422f9c:	stp	x23, x24, [sp, #48]
  422fa0:	str	x25, [sp, #64]
  422fa4:	cbz	x1, 42306c <nftw@plt+0x2037c>
  422fa8:	mov	x0, x1
  422fac:	bl	402630 <strlen@plt>
  422fb0:	mov	w19, w0
  422fb4:	add	w0, w19, #0x78
  422fb8:	add	w23, w19, #0x78
  422fbc:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  422fc0:	mov	x20, x0
  422fc4:	cbz	x21, 422fdc <nftw@plt+0x202ec>
  422fc8:	add	w19, w19, #0x2
  422fcc:	mov	x2, x21
  422fd0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  422fd4:	add	x1, x1, #0xa14
  422fd8:	bl	4026e0 <sprintf@plt>
  422fdc:	mov	x0, x22
  422fe0:	bl	42b37c <nftw@plt+0x2868c>
  422fe4:	mov	x21, x0
  422fe8:	mov	w25, #0x20                  	// #32
  422fec:	ldrb	w0, [x21, #4]
  422ff0:	mov	w24, w19
  422ff4:	cmp	w0, #0x16
  422ff8:	b.eq	423074 <nftw@plt+0x20384>  // b.none
  422ffc:	add	w19, w19, #0x2
  423000:	mov	x0, x21
  423004:	bl	4227c0 <nftw@plt+0x1fad0>
  423008:	add	w19, w19, w0
  42300c:	cmp	w19, w23
  423010:	b.ls	423030 <nftw@plt+0x20340>  // b.plast
  423014:	lsl	w1, w23, #1
  423018:	mov	x0, x20
  42301c:	cmp	w19, w1
  423020:	csel	w23, w19, w1, cs  // cs = hs, nlast
  423024:	csel	w1, w19, w1, cs  // cs = hs, nlast
  423028:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42302c:	mov	x20, x0
  423030:	add	x2, x20, x24
  423034:	mov	x1, x21
  423038:	mov	w3, #0x0                   	// #0
  42303c:	mov	x0, x22
  423040:	bl	422878 <nftw@plt+0x1fb88>
  423044:	sub	x24, x0, x20
  423048:	mov	x0, x22
  42304c:	bl	42b37c <nftw@plt+0x2868c>
  423050:	mov	x21, x0
  423054:	ldrh	w0, [x0, #6]
  423058:	mov	w19, w24
  42305c:	tbz	w0, #0, 422fec <nftw@plt+0x202fc>
  423060:	add	w19, w24, #0x1
  423064:	strb	w25, [x20, w24, uxtw]
  423068:	b	422fec <nftw@plt+0x202fc>
  42306c:	mov	w19, #0x0                   	// #0
  423070:	b	422fb4 <nftw@plt+0x202c4>
  423074:	strb	wzr, [x20, x24]
  423078:	mov	x0, x20
  42307c:	ldp	x19, x20, [sp, #16]
  423080:	ldp	x21, x22, [sp, #32]
  423084:	ldp	x23, x24, [sp, #48]
  423088:	ldr	x25, [sp, #64]
  42308c:	ldp	x29, x30, [sp], #80
  423090:	ret
  423094:	mov	x2, x1
  423098:	mov	x3, x2
  42309c:	ldr	x2, [x2]
  4230a0:	cbnz	x2, 423098 <nftw@plt+0x203a8>
  4230a4:	ldr	x2, [x0, #72]
  4230a8:	str	x2, [x3]
  4230ac:	str	x1, [x0, #72]
  4230b0:	ret
  4230b4:	add	x3, x1, x1, lsl #1
  4230b8:	add	x5, x0, #0x48
  4230bc:	mov	x2, #0x1f40                	// #8000
  4230c0:	ldr	x0, [x0, #72]
  4230c4:	add	x3, x2, x3, lsr #1
  4230c8:	cbnz	x0, 423114 <nftw@plt+0x20424>
  4230cc:	stp	x29, x30, [sp, #-32]!
  4230d0:	mov	x29, sp
  4230d4:	str	x19, [sp, #16]
  4230d8:	mov	x19, #0x1f40                	// #8000
  4230dc:	cmp	x1, x19
  4230e0:	csel	x19, x1, x19, cs  // cs = hs, nlast
  4230e4:	add	x19, x19, #0x7
  4230e8:	and	x19, x19, #0xfffffffffffffff8
  4230ec:	add	x0, x19, #0x20
  4230f0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4230f4:	mov	x1, x0
  4230f8:	add	x0, x0, x19
  4230fc:	stp	x1, x1, [x0, #8]
  423100:	str	x0, [x0, #24]
  423104:	str	xzr, [x1, x19]
  423108:	ldr	x19, [sp, #16]
  42310c:	ldp	x29, x30, [sp], #32
  423110:	ret
  423114:	ldr	x4, [x0, #8]
  423118:	ldr	x2, [x0, #24]
  42311c:	sub	x2, x2, x4
  423120:	cmp	x2, x1
  423124:	b.cc	423130 <nftw@plt+0x20440>  // b.lo, b.ul, b.last
  423128:	cmp	x3, x2
  42312c:	b.cs	42313c <nftw@plt+0x2044c>  // b.hs, b.nlast
  423130:	mov	x5, x0
  423134:	ldr	x0, [x0]
  423138:	b	4230c8 <nftw@plt+0x203d8>
  42313c:	ldr	x1, [x0]
  423140:	str	x1, [x5]
  423144:	str	xzr, [x0]
  423148:	str	x4, [x0, #16]
  42314c:	ret
  423150:	stp	x29, x30, [sp, #-32]!
  423154:	mov	x29, sp
  423158:	stp	x19, x20, [sp, #16]
  42315c:	mov	x19, x1
  423160:	ldp	x1, x3, [x1, #16]
  423164:	sub	x1, x3, x1
  423168:	add	x1, x2, x1, lsl #1
  42316c:	bl	4230b4 <nftw@plt+0x203c4>
  423170:	ldp	x1, x2, [x19, #16]
  423174:	mov	x20, x0
  423178:	ldr	x0, [x0, #8]
  42317c:	str	x20, [x19]
  423180:	sub	x2, x2, x1
  423184:	bl	4025d0 <memcpy@plt>
  423188:	mov	x0, x20
  42318c:	ldp	x19, x20, [sp, #16]
  423190:	ldp	x29, x30, [sp], #32
  423194:	ret
  423198:	stp	x29, x30, [sp, #-80]!
  42319c:	mov	x29, sp
  4231a0:	stp	x21, x22, [sp, #32]
  4231a4:	ldr	x22, [x3]
  4231a8:	stp	x19, x20, [sp, #16]
  4231ac:	mov	x20, x2
  4231b0:	stp	x23, x24, [sp, #48]
  4231b4:	mov	x23, x1
  4231b8:	mov	x24, x4
  4231bc:	stp	x25, x26, [sp, #64]
  4231c0:	mov	x25, x3
  4231c4:	ldr	x19, [x4]
  4231c8:	cbnz	x22, 423218 <nftw@plt+0x20528>
  4231cc:	mov	x1, x2
  4231d0:	bl	4230b4 <nftw@plt+0x203c4>
  4231d4:	mov	x22, x0
  4231d8:	mov	x19, x0
  4231dc:	ldr	x0, [x19, #16]
  4231e0:	mov	x2, x20
  4231e4:	mov	x1, x23
  4231e8:	bl	4025d0 <memcpy@plt>
  4231ec:	ldr	x2, [x19, #16]
  4231f0:	add	x20, x2, x20
  4231f4:	str	x20, [x19, #16]
  4231f8:	str	x22, [x25]
  4231fc:	ldp	x21, x22, [sp, #32]
  423200:	ldp	x25, x26, [sp, #64]
  423204:	str	x19, [x24]
  423208:	ldp	x19, x20, [sp, #16]
  42320c:	ldp	x23, x24, [sp, #48]
  423210:	ldp	x29, x30, [sp], #80
  423214:	ret
  423218:	mov	x26, x0
  42321c:	ldp	x0, x21, [x19, #16]
  423220:	sub	x21, x21, x0
  423224:	cmp	x21, x2
  423228:	b.cs	4231dc <nftw@plt+0x204ec>  // b.hs, b.nlast
  42322c:	mov	x2, x21
  423230:	bl	4025d0 <memcpy@plt>
  423234:	ldr	x0, [x19, #16]
  423238:	sub	x20, x20, x21
  42323c:	mov	x1, x19
  423240:	mov	x2, x20
  423244:	add	x0, x0, x21
  423248:	str	x0, [x19, #16]
  42324c:	add	x23, x23, x21
  423250:	mov	x0, x26
  423254:	bl	423150 <nftw@plt+0x20460>
  423258:	mov	x19, x0
  42325c:	b	4231dc <nftw@plt+0x204ec>
  423260:	stp	x29, x30, [sp, #-48]!
  423264:	mov	x29, sp
  423268:	stp	x19, x20, [sp, #16]
  42326c:	ldr	x20, [x1]
  423270:	str	x21, [sp, #32]
  423274:	mov	x21, x1
  423278:	ldp	x1, x3, [x20, #16]
  42327c:	sub	x1, x3, x1
  423280:	add	x1, x2, x1, lsl #1
  423284:	bl	4230b4 <nftw@plt+0x203c4>
  423288:	ldp	x1, x2, [x20, #16]
  42328c:	mov	x19, x0
  423290:	ldr	x0, [x0, #8]
  423294:	sub	x2, x2, x1
  423298:	bl	4025d0 <memcpy@plt>
  42329c:	str	x20, [x19]
  4232a0:	str	x19, [x21]
  4232a4:	ldp	x19, x20, [sp, #16]
  4232a8:	ldr	x21, [sp, #32]
  4232ac:	ldp	x29, x30, [sp], #48
  4232b0:	ret
  4232b4:	cbnz	x0, 4232bc <nftw@plt+0x205cc>
  4232b8:	ret
  4232bc:	stp	x29, x30, [sp, #-32]!
  4232c0:	mov	x29, sp
  4232c4:	str	x19, [sp, #16]
  4232c8:	ldp	x19, x0, [x0]
  4232cc:	bl	402a80 <free@plt>
  4232d0:	mov	x0, x19
  4232d4:	cbnz	x19, 4232c8 <nftw@plt+0x205d8>
  4232d8:	ldr	x19, [sp, #16]
  4232dc:	ldp	x29, x30, [sp], #32
  4232e0:	ret
  4232e4:	stp	x29, x30, [sp, #-32]!
  4232e8:	mov	x29, sp
  4232ec:	ldr	x2, [x0, #64]
  4232f0:	stp	x19, x20, [sp, #16]
  4232f4:	mov	x19, x1
  4232f8:	ldp	x3, x4, [x2, #16]
  4232fc:	sub	x4, x4, x3
  423300:	cmp	x4, x1
  423304:	b.cs	423324 <nftw@plt+0x20634>  // b.hs, b.nlast
  423308:	mov	x20, x0
  42330c:	bl	4230b4 <nftw@plt+0x203c4>
  423310:	mov	x2, x0
  423314:	ldr	x3, [x0, #16]
  423318:	ldr	x0, [x20, #64]
  42331c:	str	x0, [x2]
  423320:	str	x2, [x20, #64]
  423324:	add	x19, x3, x19
  423328:	str	x19, [x2, #16]
  42332c:	mov	x0, x3
  423330:	ldp	x19, x20, [sp, #16]
  423334:	ldp	x29, x30, [sp], #32
  423338:	ret
  42333c:	stp	x29, x30, [sp, #-64]!
  423340:	mov	x29, sp
  423344:	stp	x23, x24, [sp, #48]
  423348:	mov	w24, w3
  42334c:	mov	x23, x2
  423350:	stp	x19, x20, [sp, #16]
  423354:	mov	x19, x1
  423358:	add	w1, w24, #0x1
  42335c:	stp	x21, x22, [sp, #32]
  423360:	mov	w22, w4
  423364:	bl	4232e4 <nftw@plt+0x205f4>
  423368:	mov	x21, x0
  42336c:	mov	x2, x24
  423370:	mov	x1, x23
  423374:	bl	4025d0 <memcpy@plt>
  423378:	mov	x20, x24
  42337c:	strb	wzr, [x21, x24]
  423380:	strb	w22, [x19, #4]
  423384:	ldp	x23, x24, [sp, #48]
  423388:	str	w20, [x19, #8]
  42338c:	str	x21, [x19, #16]
  423390:	ldp	x19, x20, [sp, #16]
  423394:	ldp	x21, x22, [sp, #32]
  423398:	ldp	x29, x30, [sp], #64
  42339c:	ret
  4233a0:	stp	x29, x30, [sp, #-208]!
  4233a4:	mov	x29, sp
  4233a8:	stp	x19, x20, [sp, #16]
  4233ac:	mov	x19, x2
  4233b0:	stp	x21, x22, [sp, #32]
  4233b4:	mov	x21, x1
  4233b8:	mov	w1, #0x55                  	// #85
  4233bc:	stp	x23, x24, [sp, #48]
  4233c0:	stp	x25, x26, [sp, #64]
  4233c4:	stp	x27, x28, [sp, #80]
  4233c8:	mov	x27, x0
  4233cc:	ldrb	w0, [x2]
  4233d0:	cmp	w0, #0x4c
  4233d4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4233d8:	b.ne	42348c <nftw@plt+0x2079c>  // b.any
  4233dc:	ldrb	w22, [x2, #1]
  4233e0:	add	x6, x2, #0x2
  4233e4:	cmp	w22, #0x52
  4233e8:	b.ne	423c14 <nftw@plt+0x20f24>  // b.any
  4233ec:	ldr	x1, [x27]
  4233f0:	stp	xzr, xzr, [sp, #144]
  4233f4:	cmp	w0, #0x4c
  4233f8:	ldr	w8, [x1, #56]
  4233fc:	ldr	x1, [x1, #48]
  423400:	add	x28, x1, x8, lsl #4
  423404:	b.eq	4234c0 <nftw@plt+0x207d0>  // b.none
  423408:	cmp	w0, #0x55
  42340c:	b.eq	4234c8 <nftw@plt+0x207d8>  // b.none
  423410:	cmp	w0, #0x75
  423414:	b.ne	4234d0 <nftw@plt+0x207e0>  // b.any
  423418:	ldrb	w0, [x19, #1]
  42341c:	mov	w22, #0x42                  	// #66
  423420:	cmp	w0, #0x38
  423424:	mov	w0, #0x40                  	// #64
  423428:	csel	w22, w22, w0, eq  // eq = none
  42342c:	add	x25, x6, #0x1
  423430:	mov	x24, x19
  423434:	sub	x0, x25, x19
  423438:	mov	x23, #0x0                   	// #0
  42343c:	mov	x20, #0x0                   	// #0
  423440:	stp	wzr, wzr, [sp, #100]
  423444:	str	wzr, [sp, #108]
  423448:	str	x0, [sp, #112]
  42344c:	ldr	x0, [x28]
  423450:	cmp	x0, x25
  423454:	b.cc	4234f0 <nftw@plt+0x20800>  // b.lo, b.ul, b.last
  423458:	adrp	x26, 44d000 <_obstack_memory_used@@Base+0xffa8>
  42345c:	add	x26, x26, #0xe53
  423460:	ldr	x0, [x28]
  423464:	cmp	x25, x0
  423468:	b.ne	4237cc <nftw@plt+0x20adc>  // b.any
  42346c:	ldr	w0, [x28, #8]
  423470:	cmp	w0, #0x20
  423474:	b.eq	4234fc <nftw@plt+0x2080c>  // b.none
  423478:	cmp	w0, #0x5c
  42347c:	b.eq	4234fc <nftw@plt+0x2080c>  // b.none
  423480:	cbnz	w0, 423604 <nftw@plt+0x20914>
  423484:	add	x28, x28, #0x10
  423488:	b	423460 <nftw@plt+0x20770>
  42348c:	cmp	w0, #0x75
  423490:	b.eq	4234a0 <nftw@plt+0x207b0>  // b.none
  423494:	mov	w22, w0
  423498:	add	x6, x2, #0x1
  42349c:	b	4233e4 <nftw@plt+0x206f4>
  4234a0:	ldrb	w22, [x2, #1]
  4234a4:	cmp	w22, #0x38
  4234a8:	b.eq	4234b4 <nftw@plt+0x207c4>  // b.none
  4234ac:	add	x6, x2, #0x2
  4234b0:	b	4233e4 <nftw@plt+0x206f4>
  4234b4:	ldrb	w22, [x2, #2]
  4234b8:	add	x6, x2, #0x3
  4234bc:	b	4233e4 <nftw@plt+0x206f4>
  4234c0:	mov	w22, #0x3f                  	// #63
  4234c4:	b	42342c <nftw@plt+0x2073c>
  4234c8:	mov	w22, #0x41                  	// #65
  4234cc:	b	42342c <nftw@plt+0x2073c>
  4234d0:	mov	w22, #0x3e                  	// #62
  4234d4:	b	42342c <nftw@plt+0x2073c>
  4234d8:	mov	w0, #0x2                   	// #2
  4234dc:	mov	x26, #0x0                   	// #0
  4234e0:	str	w0, [sp, #100]
  4234e4:	str	wzr, [sp, #108]
  4234e8:	mov	x23, x26
  4234ec:	b	42344c <nftw@plt+0x2075c>
  4234f0:	add	x28, x28, #0x10
  4234f4:	mov	x26, x23
  4234f8:	b	4234e8 <nftw@plt+0x207f8>
  4234fc:	sub	x5, x25, x24
  423500:	mov	x1, x24
  423504:	mov	x2, x5
  423508:	add	x4, sp, #0x98
  42350c:	add	x3, sp, #0x90
  423510:	mov	x0, x27
  423514:	str	x5, [sp, #120]
  423518:	bl	423198 <nftw@plt+0x204a8>
  42351c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  423520:	add	x24, x1, #0x142
  423524:	mov	x2, #0x1                   	// #1
  423528:	add	x4, sp, #0x98
  42352c:	add	x3, sp, #0x90
  423530:	mov	x1, x24
  423534:	mov	x0, x27
  423538:	bl	423198 <nftw@plt+0x204a8>
  42353c:	ldr	x5, [sp, #120]
  423540:	add	x20, x20, #0x1
  423544:	cmp	x23, #0x10
  423548:	add	x2, x20, x5
  42354c:	b.hi	423568 <nftw@plt+0x20878>  // b.pmore
  423550:	cmp	x25, x24
  423554:	b.eq	423568 <nftw@plt+0x20878>  // b.none
  423558:	add	x1, sp, #0xb8
  42355c:	mov	w0, #0x5c                  	// #92
  423560:	strb	w0, [x1, x23]
  423564:	add	x23, x23, #0x1
  423568:	ldr	w24, [x28, #8]
  42356c:	add	x20, x2, #0x1
  423570:	cmp	w24, #0x20
  423574:	b.ne	4235fc <nftw@plt+0x2090c>  // b.any
  423578:	mov	x0, x27
  42357c:	add	x4, sp, #0x98
  423580:	add	x3, sp, #0x90
  423584:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  423588:	mov	x2, #0x1                   	// #1
  42358c:	add	x1, x1, #0xc6
  423590:	bl	423198 <nftw@plt+0x204a8>
  423594:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  423598:	cmp	x23, #0x10
  42359c:	add	x1, x0, #0xc6
  4235a0:	b.hi	4235b8 <nftw@plt+0x208c8>  // b.pmore
  4235a4:	cmp	x25, x1
  4235a8:	b.eq	4235b8 <nftw@plt+0x208c8>  // b.none
  4235ac:	add	x0, sp, #0xb8
  4235b0:	strb	w24, [x0, x23]
  4235b4:	add	x23, x23, #0x1
  4235b8:	add	x4, sp, #0x98
  4235bc:	add	x3, sp, #0x90
  4235c0:	mov	x1, x26
  4235c4:	mov	x0, x27
  4235c8:	mov	x2, #0x1                   	// #1
  4235cc:	bl	423198 <nftw@plt+0x204a8>
  4235d0:	add	x20, x20, #0x1
  4235d4:	mov	x24, x25
  4235d8:	cmp	x23, #0x10
  4235dc:	b.hi	423484 <nftw@plt+0x20794>  // b.pmore
  4235e0:	cmp	x25, x26
  4235e4:	b.eq	423484 <nftw@plt+0x20794>  // b.none
  4235e8:	add	x1, sp, #0xb8
  4235ec:	mov	w0, #0xa                   	// #10
  4235f0:	strb	w0, [x1, x23]
  4235f4:	add	x23, x23, #0x1
  4235f8:	b	423484 <nftw@plt+0x20794>
  4235fc:	mov	x20, x2
  423600:	b	4235b8 <nftw@plt+0x208c8>
  423604:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  423608:	add	x1, x1, #0x98c
  42360c:	ldrb	w1, [x1, w0, uxtw]
  423610:	cbz	w1, 4237bc <nftw@plt+0x20acc>
  423614:	str	wzr, [x28, #8]
  423618:	strb	w0, [sp, #143]
  42361c:	ldrb	w0, [x27, #1125]
  423620:	cbz	w0, 423484 <nftw@plt+0x20794>
  423624:	sub	x2, x25, x24
  423628:	mov	x1, x24
  42362c:	add	x4, sp, #0x98
  423630:	add	x3, sp, #0x90
  423634:	mov	x0, x27
  423638:	str	x2, [sp, #120]
  42363c:	bl	423198 <nftw@plt+0x204a8>
  423640:	ldr	x2, [sp, #120]
  423644:	adrp	x1, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  423648:	add	x24, x1, #0xe70
  42364c:	add	x4, sp, #0x98
  423650:	add	x3, sp, #0x90
  423654:	mov	x1, x24
  423658:	mov	x0, x27
  42365c:	add	x20, x20, x2
  423660:	mov	x2, #0x2                   	// #2
  423664:	bl	423198 <nftw@plt+0x204a8>
  423668:	cmp	x23, #0x10
  42366c:	b.hi	423688 <nftw@plt+0x20998>  // b.pmore
  423670:	cmp	x25, x24
  423674:	b.eq	423688 <nftw@plt+0x20998>  // b.none
  423678:	add	x1, sp, #0xb8
  42367c:	mov	w0, #0x3f3f                	// #16191
  423680:	strh	w0, [x1, x23]
  423684:	add	x23, x23, #0x2
  423688:	ldrb	w0, [sp, #143]
  42368c:	add	x20, x20, #0x3
  423690:	cmp	w0, #0x2f
  423694:	b.ne	42371c <nftw@plt+0x20a2c>  // b.any
  423698:	ldr	x0, [x28, #16]
  42369c:	cmp	x25, x0
  4236a0:	b.ne	42371c <nftw@plt+0x20a2c>  // b.any
  4236a4:	ldr	w0, [x28, #24]
  4236a8:	cmp	w0, #0x5c
  4236ac:	b.eq	4236d0 <nftw@plt+0x209e0>  // b.none
  4236b0:	cmp	w0, #0x20
  4236b4:	b.eq	4236d0 <nftw@plt+0x209e0>  // b.none
  4236b8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4236bc:	add	x2, x2, #0xa19
  4236c0:	mov	w1, #0x6e1                 	// #1761
  4236c4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4236c8:	add	x0, x0, #0x77e
  4236cc:	bl	402d60 <nftw@plt+0x70>
  4236d0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4236d4:	add	x24, x1, #0x61f
  4236d8:	mov	x2, #0x1                   	// #1
  4236dc:	add	x4, sp, #0x98
  4236e0:	add	x3, sp, #0x90
  4236e4:	mov	x1, x24
  4236e8:	mov	x0, x27
  4236ec:	bl	423198 <nftw@plt+0x204a8>
  4236f0:	mov	x2, x20
  4236f4:	cmp	x23, #0x10
  4236f8:	b.hi	423714 <nftw@plt+0x20a24>  // b.pmore
  4236fc:	cmp	x25, x24
  423700:	b.eq	423714 <nftw@plt+0x20a24>  // b.none
  423704:	add	x1, sp, #0xb8
  423708:	mov	w0, #0x2f                  	// #47
  42370c:	strb	w0, [x1, x23]
  423710:	add	x23, x23, #0x1
  423714:	add	x28, x28, #0x10
  423718:	b	423568 <nftw@plt+0x20878>
  42371c:	add	x26, sp, #0x8f
  423720:	add	x4, sp, #0x98
  423724:	add	x3, sp, #0x90
  423728:	mov	x1, x26
  42372c:	mov	x0, x27
  423730:	mov	x2, #0x1                   	// #1
  423734:	bl	423198 <nftw@plt+0x204a8>
  423738:	add	x25, x25, #0x1
  42373c:	cmp	x23, #0x10
  423740:	b.hi	42375c <nftw@plt+0x20a6c>  // b.pmore
  423744:	cmp	x25, x26
  423748:	b.eq	42375c <nftw@plt+0x20a6c>  // b.none
  42374c:	add	x1, sp, #0xb8
  423750:	ldrb	w0, [sp, #143]
  423754:	strb	w0, [x1, x23]
  423758:	add	x23, x23, #0x1
  42375c:	ldrb	w0, [sp, #143]
  423760:	mov	x24, x25
  423764:	ldr	w1, [sp, #100]
  423768:	cbnz	w1, 4238fc <nftw@plt+0x20c0c>
  42376c:	ldr	w0, [sp, #104]
  423770:	mov	x3, #0xffffffff77ffffff    	// #-2281701377
  423774:	mov	x4, #0xfcee00000000        	// #278099132416000
  423778:	mov	x2, #0x1                   	// #1
  42377c:	movk	x3, #0x3fff, lsl #48
  423780:	movk	x4, #0xffff, lsl #48
  423784:	str	w0, [sp, #104]
  423788:	cmp	x23, x0
  42378c:	b.ls	4234f4 <nftw@plt+0x20804>  // b.plast
  423790:	add	x1, sp, #0xb8
  423794:	ldrb	w5, [x1, x0]
  423798:	add	x1, sp, #0xa0
  42379c:	cmp	w5, #0x3f
  4237a0:	strb	w5, [x1, x0]
  4237a4:	b.hi	4237e8 <nftw@plt+0x20af8>  // b.pmore
  4237a8:	cmp	w5, #0x20
  4237ac:	b.ls	423804 <nftw@plt+0x20b14>  // b.plast
  4237b0:	lsl	x1, x2, x5
  4237b4:	tst	x1, x4
  4237b8:	b	423800 <nftw@plt+0x20b10>
  4237bc:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4237c0:	mov	w1, #0x6f0                 	// #1776
  4237c4:	add	x2, x2, #0xa19
  4237c8:	b	4236c4 <nftw@plt+0x209d4>
  4237cc:	ldrb	w0, [x25], #1
  4237d0:	cmp	x23, #0x10
  4237d4:	b.hi	423764 <nftw@plt+0x20a74>  // b.pmore
  4237d8:	add	x1, sp, #0xb8
  4237dc:	strb	w0, [x1, x23]
  4237e0:	add	x23, x23, #0x1
  4237e4:	b	423764 <nftw@plt+0x20a74>
  4237e8:	sub	w1, w5, #0x41
  4237ec:	and	w1, w1, #0xff
  4237f0:	cmp	w1, #0x3d
  4237f4:	b.hi	423804 <nftw@plt+0x20b14>  // b.pmore
  4237f8:	lsl	x1, x2, x1
  4237fc:	tst	x1, x3
  423800:	b.ne	42389c <nftw@plt+0x20bac>  // b.any
  423804:	cmp	w5, #0x28
  423808:	b.eq	4238dc <nftw@plt+0x20bec>  // b.none
  42380c:	ldr	x0, [x27]
  423810:	ldr	w2, [x21]
  423814:	ldr	x3, [x0, #8]
  423818:	ldr	w0, [sp, #104]
  42381c:	sub	x3, x25, x3
  423820:	add	w3, w3, #0x1
  423824:	cmp	w0, #0x10
  423828:	b.ne	4238b0 <nftw@plt+0x20bc0>  // b.any
  42382c:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423830:	add	x4, x4, #0xa28
  423834:	mov	x0, x27
  423838:	mov	w1, #0x3                   	// #3
  42383c:	bl	41c1d0 <nftw@plt+0x194e0>
  423840:	ldr	x0, [sp, #112]
  423844:	mov	x2, x19
  423848:	ldr	x1, [x27]
  42384c:	sub	x0, x0, #0x1
  423850:	add	x0, x19, x0
  423854:	mov	w4, #0x3d                  	// #61
  423858:	str	x0, [x1]
  42385c:	mov	x1, x21
  423860:	ldr	w0, [sp, #112]
  423864:	sub	w3, w0, #0x1
  423868:	mov	x0, x27
  42386c:	bl	42333c <nftw@plt+0x2064c>
  423870:	ldr	x1, [sp, #144]
  423874:	cbz	x1, 423880 <nftw@plt+0x20b90>
  423878:	mov	x0, x27
  42387c:	bl	423094 <nftw@plt+0x203a4>
  423880:	ldp	x19, x20, [sp, #16]
  423884:	ldp	x21, x22, [sp, #32]
  423888:	ldp	x23, x24, [sp, #48]
  42388c:	ldp	x25, x26, [sp, #64]
  423890:	ldp	x27, x28, [sp, #80]
  423894:	ldp	x29, x30, [sp], #208
  423898:	ret
  42389c:	ldr	w1, [sp, #104]
  4238a0:	cmp	w1, #0xf
  4238a4:	b.hi	423804 <nftw@plt+0x20b14>  // b.pmore
  4238a8:	add	x0, x0, #0x1
  4238ac:	b	423784 <nftw@plt+0x20a94>
  4238b0:	cmp	w5, #0xa
  4238b4:	b.ne	4238c4 <nftw@plt+0x20bd4>  // b.any
  4238b8:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4238bc:	add	x4, x4, #0xa57
  4238c0:	b	423834 <nftw@plt+0x20b44>
  4238c4:	mov	x0, x27
  4238c8:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4238cc:	mov	w1, #0x3                   	// #3
  4238d0:	add	x4, x4, #0xa80
  4238d4:	bl	41c1d0 <nftw@plt+0x194e0>
  4238d8:	b	423840 <nftw@plt+0x20b50>
  4238dc:	ldr	w1, [sp, #104]
  4238e0:	add	x2, sp, #0xa0
  4238e4:	mov	w0, #0x22                  	// #34
  4238e8:	mov	x26, #0x11                  	// #17
  4238ec:	strb	w0, [x2, w1, uxtw]
  4238f0:	mov	w0, #0x1                   	// #1
  4238f4:	str	w0, [sp, #100]
  4238f8:	b	4234e8 <nftw@plt+0x207f8>
  4238fc:	ldr	w1, [sp, #100]
  423900:	cmp	w1, #0x2
  423904:	b.ne	423954 <nftw@plt+0x20c64>  // b.any
  423908:	ldr	w26, [sp, #108]
  42390c:	ldr	w1, [sp, #104]
  423910:	str	w26, [sp, #108]
  423914:	cmp	w1, w26
  423918:	b.cc	4239b4 <nftw@plt+0x20cc4>  // b.lo, b.ul, b.last
  42391c:	cmp	x26, x23
  423920:	b.cs	423e68 <nftw@plt+0x21178>  // b.hs, b.nlast
  423924:	add	x1, sp, #0xb8
  423928:	add	x2, sp, #0xa0
  42392c:	ldrb	w1, [x1, x26]
  423930:	add	x26, x26, #0x1
  423934:	add	x2, x26, x2
  423938:	ldurb	w2, [x2, #-1]
  42393c:	cmp	w2, w1
  423940:	b.eq	42390c <nftw@plt+0x20c1c>  // b.none
  423944:	mov	w1, #0x1                   	// #1
  423948:	mov	x26, #0x11                  	// #17
  42394c:	str	w1, [sp, #100]
  423950:	b	423958 <nftw@plt+0x20c68>
  423954:	mov	x26, x23
  423958:	cmp	w0, #0x29
  42395c:	b.eq	4234d8 <nftw@plt+0x207e8>  // b.none
  423960:	cmp	w0, #0xa
  423964:	b.ne	4234e8 <nftw@plt+0x207f8>  // b.any
  423968:	ldrb	w0, [x27, #16]
  42396c:	sub	x23, x25, #0x1
  423970:	cbnz	w0, 423990 <nftw@plt+0x20ca0>
  423974:	ldrb	w0, [x27, #25]
  423978:	cbz	w0, 423a44 <nftw@plt+0x20d54>
  42397c:	ldr	x0, [x27]
  423980:	ldr	x1, [x0, #16]
  423984:	ldr	x0, [x0, #32]
  423988:	cmp	x1, x0
  42398c:	b.cc	423a44 <nftw@plt+0x20d54>  // b.lo, b.ul, b.last
  423990:	ldr	w2, [x21]
  423994:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423998:	mov	x25, x23
  42399c:	add	x4, x4, #0xaaf
  4239a0:	mov	x0, x27
  4239a4:	mov	w3, #0x0                   	// #0
  4239a8:	mov	w1, #0x3                   	// #3
  4239ac:	mov	w22, #0x3d                  	// #61
  4239b0:	bl	41c1d0 <nftw@plt+0x194e0>
  4239b4:	ldrb	w0, [x27, #1161]
  4239b8:	cbz	w0, 423a14 <nftw@plt+0x20d24>
  4239bc:	ldrb	w0, [x25]
  4239c0:	cmp	w0, #0x5f
  4239c4:	b.ne	4239d4 <nftw@plt+0x20ce4>  // b.any
  4239c8:	ldrb	w0, [x25, #1]
  4239cc:	cmp	w0, #0x5f
  4239d0:	b.ne	423b54 <nftw@plt+0x20e64>  // b.any
  4239d4:	mov	x1, x25
  4239d8:	add	x0, x27, #0x440
  4239dc:	bl	421c24 <nftw@plt+0x1ef34>
  4239e0:	tst	w0, #0xff
  4239e4:	b.eq	423b54 <nftw@plt+0x20e64>  // b.none
  4239e8:	ldrb	w0, [x27, #1162]
  4239ec:	cbz	w0, 423a14 <nftw@plt+0x20d24>
  4239f0:	ldrb	w0, [x27, #18]
  4239f4:	cbnz	w0, 423a14 <nftw@plt+0x20d24>
  4239f8:	ldr	w2, [x21]
  4239fc:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423a00:	mov	x0, x27
  423a04:	add	x4, x4, #0xac7
  423a08:	mov	w3, #0x0                   	// #0
  423a0c:	mov	w1, #0x13                  	// #19
  423a10:	bl	41c240 <nftw@plt+0x19550>
  423a14:	ldr	x0, [x27]
  423a18:	str	x25, [x0]
  423a1c:	sub	x25, x25, x24
  423a20:	ldr	x0, [sp, #144]
  423a24:	cbnz	x0, 423b94 <nftw@plt+0x20ea4>
  423a28:	mov	w4, w22
  423a2c:	mov	w3, w25
  423a30:	mov	x2, x24
  423a34:	mov	x1, x21
  423a38:	mov	x0, x27
  423a3c:	bl	42333c <nftw@plt+0x2064c>
  423a40:	b	423880 <nftw@plt+0x20b90>
  423a44:	sub	x25, x25, x24
  423a48:	mov	x1, x24
  423a4c:	mov	x0, x27
  423a50:	add	x4, sp, #0x98
  423a54:	add	x3, sp, #0x90
  423a58:	mov	x2, x25
  423a5c:	bl	423198 <nftw@plt+0x204a8>
  423a60:	add	x20, x20, x25
  423a64:	ldr	x0, [x27]
  423a68:	ldr	x1, [x0]
  423a6c:	ldr	x0, [x0, #32]
  423a70:	cmp	x1, x0
  423a74:	b.cs	423abc <nftw@plt+0x20dcc>  // b.hs, b.nlast
  423a78:	ldr	x0, [x27, #40]
  423a7c:	mov	w1, #0x18                  	// #24
  423a80:	ldr	w2, [x0, #12]
  423a84:	ldr	w3, [x0, #60]
  423a88:	sub	w2, w2, #0x1
  423a8c:	smull	x2, w2, w1
  423a90:	ldr	x1, [x0]
  423a94:	add	x4, x1, x2
  423a98:	ldr	w1, [x1, x2]
  423a9c:	mov	w2, #0x0                   	// #0
  423aa0:	sub	w3, w3, w1
  423aa4:	ldrb	w1, [x4, #6]
  423aa8:	lsr	w3, w3, w1
  423aac:	ldr	w1, [x4, #16]
  423ab0:	add	w1, w1, #0x1
  423ab4:	add	w1, w3, w1
  423ab8:	bl	425f10 <nftw@plt+0x23220>
  423abc:	ldr	x0, [x27]
  423ac0:	mov	w1, #0x1                   	// #1
  423ac4:	str	x23, [x0]
  423ac8:	strb	w1, [x0, #104]
  423acc:	mov	w1, #0x0                   	// #0
  423ad0:	mov	x0, x27
  423ad4:	bl	4220a8 <nftw@plt+0x1f3b8>
  423ad8:	mov	x0, x27
  423adc:	bl	422724 <nftw@plt+0x1fa34>
  423ae0:	tst	w0, #0xff
  423ae4:	b.ne	423b38 <nftw@plt+0x20e48>  // b.any
  423ae8:	mov	w0, #0x16                  	// #22
  423aec:	strb	w0, [x21, #4]
  423af0:	ldr	x0, [x27, #40]
  423af4:	ldr	x1, [sp, #144]
  423af8:	ldr	w0, [x0, #60]
  423afc:	ldr	w5, [x21]
  423b00:	str	w0, [x21]
  423b04:	mov	w0, #0x40                  	// #64
  423b08:	strh	w0, [x21, #6]
  423b0c:	cbz	x1, 423b18 <nftw@plt+0x20e28>
  423b10:	mov	x0, x27
  423b14:	bl	423094 <nftw@plt+0x203a4>
  423b18:	mov	w2, w5
  423b1c:	mov	x0, x27
  423b20:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423b24:	mov	w3, #0x0                   	// #0
  423b28:	add	x4, x4, #0xaaf
  423b2c:	mov	w1, #0x3                   	// #3
  423b30:	bl	41c1d0 <nftw@plt+0x194e0>
  423b34:	b	423880 <nftw@plt+0x20b90>
  423b38:	ldr	x0, [x27]
  423b3c:	ldr	w8, [x0, #56]
  423b40:	ldr	x24, [x0]
  423b44:	ldr	x0, [x0, #48]
  423b48:	mov	x25, x24
  423b4c:	add	x28, x0, x8, lsl #4
  423b50:	b	4234e8 <nftw@plt+0x207f8>
  423b54:	ldrb	w0, [x25]
  423b58:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  423b5c:	add	x19, x19, #0xae
  423b60:	ldrh	w0, [x19, x0, lsl #1]
  423b64:	tbz	w0, #9, 423a14 <nftw@plt+0x20d24>
  423b68:	mov	w0, w22
  423b6c:	add	x25, x25, #0x1
  423b70:	bl	41d460 <nftw@plt+0x1a770>
  423b74:	mov	w22, w0
  423b78:	mov	w0, #0x204                 	// #516
  423b7c:	ldrb	w1, [x25]
  423b80:	ldrh	w1, [x19, x1, lsl #1]
  423b84:	tst	w0, w1
  423b88:	b.eq	423a14 <nftw@plt+0x20d24>  // b.none
  423b8c:	add	x25, x25, #0x1
  423b90:	b	423b7c <nftw@plt+0x20e8c>
  423b94:	add	x1, x20, #0x1
  423b98:	mov	x0, x27
  423b9c:	add	x1, x1, x25
  423ba0:	bl	4232e4 <nftw@plt+0x205f4>
  423ba4:	mov	x19, x0
  423ba8:	add	w20, w20, w25
  423bac:	ldr	x0, [sp, #144]
  423bb0:	strb	w22, [x21, #4]
  423bb4:	str	w20, [x21, #8]
  423bb8:	str	x19, [x21, #16]
  423bbc:	str	x0, [sp, #152]
  423bc0:	ldr	x0, [sp, #152]
  423bc4:	cbz	x0, 423bf0 <nftw@plt+0x20f00>
  423bc8:	ldp	x1, x2, [x0, #8]
  423bcc:	mov	x0, x19
  423bd0:	sub	x2, x2, x1
  423bd4:	bl	4025d0 <memcpy@plt>
  423bd8:	ldr	x0, [sp, #152]
  423bdc:	ldp	x2, x1, [x0, #8]
  423be0:	ldr	x0, [x0]
  423be4:	sub	x1, x1, x2
  423be8:	add	x19, x19, x1
  423bec:	b	423bbc <nftw@plt+0x20ecc>
  423bf0:	ldr	x1, [sp, #144]
  423bf4:	mov	x0, x27
  423bf8:	bl	423094 <nftw@plt+0x203a4>
  423bfc:	mov	x2, x25
  423c00:	mov	x1, x24
  423c04:	mov	x0, x19
  423c08:	bl	4025d0 <memcpy@plt>
  423c0c:	strb	wzr, [x19, x25]
  423c10:	b	423880 <nftw@plt+0x20b90>
  423c14:	cmp	w22, #0x22
  423c18:	b.ne	423c80 <nftw@plt+0x20f90>  // b.any
  423c1c:	cmp	w0, #0x4c
  423c20:	b.eq	423cb4 <nftw@plt+0x20fc4>  // b.none
  423c24:	cmp	w0, #0x55
  423c28:	b.eq	423cbc <nftw@plt+0x20fcc>  // b.none
  423c2c:	cmp	w0, #0x75
  423c30:	b.ne	423cc4 <nftw@plt+0x20fd4>  // b.any
  423c34:	ldrb	w0, [x19, #1]
  423c38:	mov	w20, #0x42                  	// #66
  423c3c:	cmp	w0, #0x38
  423c40:	mov	w0, #0x40                  	// #64
  423c44:	csel	w20, w20, w0, eq  // eq = none
  423c48:	mov	w0, #0x0                   	// #0
  423c4c:	mov	w2, #0x1                   	// #1
  423c50:	mov	x23, x6
  423c54:	ldrb	w1, [x23], #1
  423c58:	cmp	w1, #0x5c
  423c5c:	b.ne	423cf0 <nftw@plt+0x21000>  // b.any
  423c60:	ldrb	w1, [x27, #19]
  423c64:	cbnz	w1, 423c78 <nftw@plt+0x20f88>
  423c68:	ldrb	w1, [x6, #1]
  423c6c:	cmp	w1, #0xa
  423c70:	b.eq	423c78 <nftw@plt+0x20f88>  // b.none
  423c74:	add	x23, x6, #0x2
  423c78:	mov	x6, x23
  423c7c:	b	423c50 <nftw@plt+0x20f60>
  423c80:	cmp	w22, #0x27
  423c84:	b.ne	423ccc <nftw@plt+0x20fdc>  // b.any
  423c88:	cmp	w0, #0x4c
  423c8c:	b.eq	423cd8 <nftw@plt+0x20fe8>  // b.none
  423c90:	cmp	w0, #0x55
  423c94:	b.eq	423ce0 <nftw@plt+0x20ff0>  // b.none
  423c98:	cmp	w0, #0x75
  423c9c:	b.ne	423ce8 <nftw@plt+0x20ff8>  // b.any
  423ca0:	ldrb	w0, [x19, #1]
  423ca4:	mov	w20, #0x3c                  	// #60
  423ca8:	cmp	w0, #0x38
  423cac:	mov	w0, #0x3a                  	// #58
  423cb0:	b	423c44 <nftw@plt+0x20f54>
  423cb4:	mov	w20, #0x3f                  	// #63
  423cb8:	b	423c48 <nftw@plt+0x20f58>
  423cbc:	mov	w20, #0x41                  	// #65
  423cc0:	b	423c48 <nftw@plt+0x20f58>
  423cc4:	mov	w20, #0x3e                  	// #62
  423cc8:	b	423c48 <nftw@plt+0x20f58>
  423ccc:	mov	w20, #0x44                  	// #68
  423cd0:	mov	w22, #0x3e                  	// #62
  423cd4:	b	423c48 <nftw@plt+0x20f58>
  423cd8:	mov	w20, #0x39                  	// #57
  423cdc:	b	423c48 <nftw@plt+0x20f58>
  423ce0:	mov	w20, #0x3b                  	// #59
  423ce4:	b	423c48 <nftw@plt+0x20f58>
  423ce8:	mov	w20, #0x38                  	// #56
  423cec:	b	423c48 <nftw@plt+0x20f58>
  423cf0:	cmp	w1, w22
  423cf4:	b.eq	423d20 <nftw@plt+0x21030>  // b.none
  423cf8:	cmp	w1, #0xa
  423cfc:	b.ne	423d14 <nftw@plt+0x21024>  // b.any
  423d00:	cmp	w22, #0x3e
  423d04:	b.ne	423e70 <nftw@plt+0x21180>  // b.any
  423d08:	mov	w0, #0x3                   	// #3
  423d0c:	strb	w0, [x21, #4]
  423d10:	b	423880 <nftw@plt+0x20b90>
  423d14:	cmp	w1, #0x0
  423d18:	csel	w0, w0, w2, ne  // ne = any
  423d1c:	b	423c78 <nftw@plt+0x20f88>
  423d20:	cbz	w0, 423d40 <nftw@plt+0x21050>
  423d24:	ldrb	w0, [x27, #18]
  423d28:	cbnz	w0, 423d40 <nftw@plt+0x21050>
  423d2c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423d30:	mov	x0, x27
  423d34:	add	x2, x2, #0xb1a
  423d38:	mov	w1, #0x0                   	// #0
  423d3c:	bl	41c014 <nftw@plt+0x19324>
  423d40:	cmp	w20, #0x3d
  423d44:	b.ne	423d70 <nftw@plt+0x21080>  // b.any
  423d48:	ldr	w0, [x27, #1116]
  423d4c:	cmp	w0, #0x15
  423d50:	b.eq	423d6c <nftw@plt+0x2107c>  // b.none
  423d54:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423d58:	mov	w3, w22
  423d5c:	add	x2, x2, #0xb41
  423d60:	mov	x0, x27
  423d64:	mov	w1, #0x2                   	// #2
  423d68:	bl	41c014 <nftw@plt+0x19324>
  423d6c:	mov	w20, #0x3d                  	// #61
  423d70:	ldrb	w0, [x27, #1161]
  423d74:	cbz	w0, 423e2c <nftw@plt+0x2113c>
  423d78:	ldrb	w0, [x23]
  423d7c:	cmp	w0, #0x5f
  423d80:	b.ne	423d90 <nftw@plt+0x210a0>  // b.any
  423d84:	ldrb	w0, [x23, #1]
  423d88:	cmp	w0, #0x5f
  423d8c:	b.ne	423de8 <nftw@plt+0x210f8>  // b.any
  423d90:	mov	x1, x23
  423d94:	add	x0, x27, #0x440
  423d98:	bl	421c24 <nftw@plt+0x1ef34>
  423d9c:	tst	w0, #0xff
  423da0:	b.eq	423de8 <nftw@plt+0x210f8>  // b.none
  423da4:	ldrb	w0, [x27, #1162]
  423da8:	cbz	w0, 423dd0 <nftw@plt+0x210e0>
  423dac:	ldrb	w0, [x27, #18]
  423db0:	cbnz	w0, 423dd0 <nftw@plt+0x210e0>
  423db4:	ldr	w2, [x21]
  423db8:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423dbc:	add	x4, x4, #0xac7
  423dc0:	mov	w3, #0x0                   	// #0
  423dc4:	mov	w1, #0x13                  	// #19
  423dc8:	mov	x0, x27
  423dcc:	bl	41c240 <nftw@plt+0x19550>
  423dd0:	ldr	x0, [x27]
  423dd4:	mov	w4, w20
  423dd8:	sub	w3, w23, w19
  423ddc:	mov	x2, x19
  423de0:	str	x23, [x0]
  423de4:	b	423a34 <nftw@plt+0x20d44>
  423de8:	ldrb	w0, [x23]
  423dec:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  423df0:	add	x22, x22, #0xae
  423df4:	ldrh	w0, [x22, x0, lsl #1]
  423df8:	tbz	w0, #9, 423dd0 <nftw@plt+0x210e0>
  423dfc:	mov	w0, w20
  423e00:	add	x23, x23, #0x1
  423e04:	bl	41d500 <nftw@plt+0x1a810>
  423e08:	bl	41d460 <nftw@plt+0x1a770>
  423e0c:	mov	w20, w0
  423e10:	mov	w0, #0x204                 	// #516
  423e14:	ldrb	w1, [x23]
  423e18:	ldrh	w1, [x22, x1, lsl #1]
  423e1c:	tst	w0, w1
  423e20:	b.eq	423dd0 <nftw@plt+0x210e0>  // b.none
  423e24:	add	x23, x23, #0x1
  423e28:	b	423e14 <nftw@plt+0x21124>
  423e2c:	ldrb	w0, [x27, #1199]
  423e30:	cbz	w0, 423dd0 <nftw@plt+0x210e0>
  423e34:	mov	x1, x23
  423e38:	add	x0, x27, #0x440
  423e3c:	bl	421c24 <nftw@plt+0x1ef34>
  423e40:	tst	w0, #0xff
  423e44:	b.eq	423dd0 <nftw@plt+0x210e0>  // b.none
  423e48:	ldrb	w0, [x27, #18]
  423e4c:	cbnz	w0, 423dd0 <nftw@plt+0x210e0>
  423e50:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  423e54:	ldr	w2, [x21]
  423e58:	add	x4, x4, #0xb62
  423e5c:	mov	w3, #0x0                   	// #0
  423e60:	mov	w1, #0x17                  	// #23
  423e64:	b	423dc8 <nftw@plt+0x210d8>
  423e68:	b.ne	423944 <nftw@plt+0x20c54>  // b.any
  423e6c:	b	4234e8 <nftw@plt+0x207f8>
  423e70:	mov	x23, x6
  423e74:	cbz	w0, 423d48 <nftw@plt+0x21058>
  423e78:	mov	w20, #0x3d                  	// #61
  423e7c:	b	423d24 <nftw@plt+0x21034>
  423e80:	stp	x29, x30, [sp, #-48]!
  423e84:	mov	x29, sp
  423e88:	stp	x19, x20, [sp, #16]
  423e8c:	mov	x20, x0
  423e90:	mov	x0, x1
  423e94:	str	x21, [sp, #32]
  423e98:	mov	x21, x1
  423e9c:	bl	4227c0 <nftw@plt+0x1fad0>
  423ea0:	add	w1, w0, #0x1
  423ea4:	mov	x0, x20
  423ea8:	bl	4232e4 <nftw@plt+0x205f4>
  423eac:	mov	x1, x21
  423eb0:	mov	x19, x0
  423eb4:	mov	x2, x0
  423eb8:	mov	w3, #0x0                   	// #0
  423ebc:	mov	x0, x20
  423ec0:	bl	422878 <nftw@plt+0x1fb88>
  423ec4:	strb	wzr, [x0]
  423ec8:	mov	x0, x19
  423ecc:	ldp	x19, x20, [sp, #16]
  423ed0:	ldr	x21, [sp, #32]
  423ed4:	ldp	x29, x30, [sp], #48
  423ed8:	ret
  423edc:	stp	x29, x30, [sp, #-80]!
  423ee0:	mov	x29, sp
  423ee4:	stp	x19, x20, [sp, #16]
  423ee8:	mov	x20, x0
  423eec:	ldr	x0, [x0]
  423ef0:	stp	x23, x24, [sp, #48]
  423ef4:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  423ef8:	add	x24, x24, #0xae
  423efc:	stp	x21, x22, [sp, #32]
  423f00:	mov	x21, x1
  423f04:	ldr	x23, [x0]
  423f08:	mov	x22, x2
  423f0c:	stp	x25, x26, [sp, #64]
  423f10:	mov	w25, #0x204                 	// #516
  423f14:	sub	x23, x23, #0x1
  423f18:	mov	w26, #0x2d                  	// #45
  423f1c:	ldr	x2, [x20]
  423f20:	ldr	x3, [x2]
  423f24:	mov	x19, x3
  423f28:	ldrb	w0, [x19]
  423f2c:	ldrb	w1, [x19]
  423f30:	ldrh	w0, [x24, x0, lsl #1]
  423f34:	tst	w25, w0
  423f38:	b.ne	423f54 <nftw@plt+0x21264>  // b.any
  423f3c:	cmp	w1, #0x2e
  423f40:	b.eq	423f54 <nftw@plt+0x21264>  // b.none
  423f44:	cmp	w1, #0x27
  423f48:	b.ne	423f64 <nftw@plt+0x21274>  // b.any
  423f4c:	ldrb	w0, [x20, #1166]
  423f50:	cbz	w0, 423f94 <nftw@plt+0x212a4>
  423f54:	add	x19, x19, #0x1
  423f58:	str	w1, [x22]
  423f5c:	strb	wzr, [x22, #4]
  423f60:	b	423f28 <nftw@plt+0x21238>
  423f64:	cmp	w1, #0x2b
  423f68:	ccmp	w1, w26, #0x4, ne  // ne = any
  423f6c:	b.ne	423f94 <nftw@plt+0x212a4>  // b.any
  423f70:	ldurb	w0, [x19, #-1]
  423f74:	and	w0, w0, #0xffffffdf
  423f78:	and	w0, w0, #0xff
  423f7c:	cmp	w0, #0x45
  423f80:	b.eq	423f54 <nftw@plt+0x21264>  // b.none
  423f84:	cmp	w0, #0x50
  423f88:	b.ne	423f94 <nftw@plt+0x212a4>  // b.any
  423f8c:	ldrb	w0, [x20, #1127]
  423f90:	b	423f50 <nftw@plt+0x21260>
  423f94:	cmp	x3, x19
  423f98:	b.cs	423fb8 <nftw@plt+0x212c8>  // b.hs, b.nlast
  423f9c:	ldurb	w0, [x19, #-1]
  423fa0:	cmp	w0, #0x27
  423fa4:	b.ne	423fb8 <nftw@plt+0x212c8>  // b.any
  423fa8:	ldrb	w0, [x20, #1166]
  423fac:	cbz	w0, 423fb8 <nftw@plt+0x212c8>
  423fb0:	sub	x19, x19, #0x1
  423fb4:	b	423f94 <nftw@plt+0x212a4>
  423fb8:	str	x19, [x2]
  423fbc:	mov	x0, x20
  423fc0:	mov	x2, x22
  423fc4:	mov	w1, #0x0                   	// #0
  423fc8:	bl	421848 <nftw@plt+0x1eb58>
  423fcc:	tst	w0, #0xff
  423fd0:	b.ne	423f1c <nftw@plt+0x2122c>  // b.any
  423fd4:	sub	x19, x19, x23
  423fd8:	str	w19, [x21]
  423fdc:	add	w1, w19, #0x1
  423fe0:	mov	x0, x20
  423fe4:	bl	4232e4 <nftw@plt+0x205f4>
  423fe8:	mov	x19, x0
  423fec:	ldr	w2, [x21]
  423ff0:	mov	x1, x23
  423ff4:	bl	4025d0 <memcpy@plt>
  423ff8:	ldr	w0, [x21]
  423ffc:	strb	wzr, [x19, x0]
  424000:	ldp	x23, x24, [sp, #48]
  424004:	ldp	x25, x26, [sp, #64]
  424008:	str	x19, [x21, #8]
  42400c:	ldp	x19, x20, [sp, #16]
  424010:	ldp	x21, x22, [sp, #32]
  424014:	ldp	x29, x30, [sp], #80
  424018:	ret
  42401c:	stp	x29, x30, [sp, #-128]!
  424020:	mov	x29, sp
  424024:	stp	x19, x20, [sp, #16]
  424028:	mov	x20, x0
  42402c:	ldr	x19, [x0, #448]
  424030:	stp	x21, x22, [sp, #32]
  424034:	add	x0, x19, #0x18
  424038:	stp	x23, x24, [sp, #48]
  42403c:	mov	w23, #0x0                   	// #0
  424040:	stp	x25, x26, [sp, #64]
  424044:	adrp	x25, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424048:	stp	x27, x28, [sp, #80]
  42404c:	str	x0, [x20, #448]
  424050:	add	x0, x25, #0xba4
  424054:	str	x0, [sp, #96]
  424058:	ldr	x21, [x20]
  42405c:	strh	wzr, [x19, #6]
  424060:	ldrb	w0, [x21, #104]
  424064:	cbz	w0, 42412c <nftw@plt+0x2143c>
  424068:	ldrb	w0, [x20, #32]
  42406c:	cbz	w0, 4240b0 <nftw@plt+0x213c0>
  424070:	mov	w0, #0x52                  	// #82
  424074:	strb	w0, [x19, #4]
  424078:	strb	wzr, [x20, #32]
  42407c:	ldrb	w0, [x20, #33]
  424080:	cbnz	w0, 424090 <nftw@plt+0x213a0>
  424084:	ldrb	w0, [x20, #24]
  424088:	sub	w0, w0, #0x1
  42408c:	strb	w0, [x20, #24]
  424090:	mov	x0, x19
  424094:	ldp	x19, x20, [sp, #16]
  424098:	ldp	x21, x22, [sp, #32]
  42409c:	ldp	x23, x24, [sp, #48]
  4240a0:	ldp	x25, x26, [sp, #64]
  4240a4:	ldp	x27, x28, [sp, #80]
  4240a8:	ldp	x29, x30, [sp], #128
  4240ac:	ret
  4240b0:	mov	x0, x20
  4240b4:	bl	422724 <nftw@plt+0x1fa34>
  4240b8:	tst	w0, #0xff
  4240bc:	b.ne	4240e8 <nftw@plt+0x213f8>  // b.any
  4240c0:	mov	w0, #0x16                  	// #22
  4240c4:	strb	w0, [x19, #4]
  4240c8:	ldrb	w0, [x20, #16]
  4240cc:	cbnz	w0, 424090 <nftw@plt+0x213a0>
  4240d0:	ldr	x0, [x20, #40]
  4240d4:	ldr	w0, [x0, #60]
  4240d8:	str	w0, [x19]
  4240dc:	mov	w0, #0x40                  	// #64
  4240e0:	strh	w0, [x19, #6]
  4240e4:	b	424090 <nftw@plt+0x213a0>
  4240e8:	ldr	x0, [x20]
  4240ec:	cmp	x0, x21
  4240f0:	ldr	w0, [x20, #500]
  4240f4:	csel	w23, w23, wzr, eq  // eq = none
  4240f8:	cbnz	w0, 424110 <nftw@plt+0x21420>
  4240fc:	ldr	x19, [x20, #472]
  424100:	add	x0, x20, #0x1c8
  424104:	str	x0, [x20, #488]
  424108:	add	x0, x19, #0x18
  42410c:	str	x0, [x20, #448]
  424110:	mov	w1, #0x40                  	// #64
  424114:	strh	w1, [x19, #6]
  424118:	ldrb	w0, [x20, #25]
  42411c:	cmp	w0, #0x2
  424120:	mov	w0, #0x41                  	// #65
  424124:	csel	w0, w0, w1, eq  // eq = none
  424128:	strh	w0, [x19, #6]
  42412c:	ldr	x27, [x20]
  424130:	adrp	x24, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424134:	ldr	x0, [x20, #40]
  424138:	add	x24, x24, #0xecc
  42413c:	ldr	w0, [x0, #60]
  424140:	str	w0, [x19]
  424144:	ldr	w0, [x27, #56]
  424148:	ldr	x2, [x27, #48]
  42414c:	lsl	x0, x0, #4
  424150:	ldr	x1, [x27]
  424154:	ldr	x0, [x2, x0]
  424158:	cmp	x1, x0
  42415c:	b.cc	424180 <nftw@plt+0x21490>  // b.lo, b.ul, b.last
  424160:	ldr	x0, [x20, #8]
  424164:	cbnz	x0, 424180 <nftw@plt+0x21490>
  424168:	mov	x0, x20
  42416c:	mov	w1, #0x0                   	// #0
  424170:	bl	4220a8 <nftw@plt+0x1f3b8>
  424174:	ldr	x0, [x20, #40]
  424178:	ldr	w0, [x0, #60]
  42417c:	str	w0, [x19]
  424180:	ldr	x1, [x27]
  424184:	add	x0, x1, #0x1
  424188:	str	x0, [x27]
  42418c:	ldrb	w21, [x1]
  424190:	ldr	w1, [x20, #1408]
  424194:	mov	w22, w21
  424198:	cbz	w1, 4241b8 <nftw@plt+0x214c8>
  42419c:	str	w1, [x19]
  4241a0:	cmp	w21, #0x7e
  4241a4:	b.hi	4254a8 <nftw@plt+0x227b8>  // b.pmore
  4241a8:	ldrh	w0, [x24, w21, uxtw #1]
  4241ac:	adr	x1, 4241b8 <nftw@plt+0x214c8>
  4241b0:	add	x0, x1, w0, sxth #2
  4241b4:	br	x0
  4241b8:	ldr	x1, [x27, #8]
  4241bc:	sub	w1, w0, w1
  4241c0:	ldr	x0, [x20, #40]
  4241c4:	bl	426110 <nftw@plt+0x23420>
  4241c8:	str	w0, [x19]
  4241cc:	b	4241a0 <nftw@plt+0x214b0>
  4241d0:	ldrh	w0, [x19, #6]
  4241d4:	adrp	x6, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4241d8:	ldr	x21, [x20]
  4241dc:	adrp	x28, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4241e0:	add	x26, x6, #0xb9a
  4241e4:	add	x28, x28, #0xae
  4241e8:	orr	w0, w0, #0x1
  4241ec:	mov	w25, #0x0                   	// #0
  4241f0:	strh	w0, [x19, #6]
  4241f4:	cmp	w22, #0x20
  4241f8:	ccmp	w22, #0x9, #0x4, ne  // ne = any
  4241fc:	b.eq	424244 <nftw@plt+0x21554>  // b.none
  424200:	cbz	w22, 424288 <nftw@plt+0x21598>
  424204:	ldrb	w0, [x20, #16]
  424208:	cbz	w0, 424244 <nftw@plt+0x21554>
  42420c:	ldrb	w0, [x20, #1154]
  424210:	cbz	w0, 424244 <nftw@plt+0x21554>
  424214:	ldr	x0, [x20, #40]
  424218:	cmp	w22, #0xc
  42421c:	ldr	x2, [sp, #96]
  424220:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424224:	ldp	x3, x1, [x21]
  424228:	csel	x5, x26, x2, eq  // eq = none
  42422c:	ldr	w2, [x0, #60]
  424230:	add	x4, x4, #0xbc0
  424234:	mov	x0, x20
  424238:	sub	w3, w3, w1
  42423c:	mov	w1, #0x2                   	// #2
  424240:	bl	41c1d0 <nftw@plt+0x194e0>
  424244:	ldr	x0, [x21]
  424248:	add	x1, x0, #0x1
  42424c:	str	x1, [x21]
  424250:	ldrb	w22, [x0]
  424254:	ldrb	w0, [x0]
  424258:	ldrh	w0, [x28, x0, lsl #1]
  42425c:	tbnz	w0, #11, 4241f4 <nftw@plt+0x21504>
  424260:	cbz	w25, 424278 <nftw@plt+0x21588>
  424264:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424268:	mov	x0, x20
  42426c:	add	x2, x2, #0xbde
  424270:	mov	w1, #0x0                   	// #0
  424274:	bl	41c014 <nftw@plt+0x19324>
  424278:	ldr	x0, [x21]
  42427c:	sub	x0, x0, #0x1
  424280:	str	x0, [x21]
  424284:	b	424144 <nftw@plt+0x21454>
  424288:	mov	w25, #0x1                   	// #1
  42428c:	b	424244 <nftw@plt+0x21554>
  424290:	ldr	x1, [x27]
  424294:	ldr	x0, [x27, #32]
  424298:	cmp	x1, x0
  42429c:	b.cs	4242e4 <nftw@plt+0x215f4>  // b.hs, b.nlast
  4242a0:	ldr	x0, [x20, #40]
  4242a4:	mov	w1, #0x18                  	// #24
  4242a8:	ldr	w2, [x0, #12]
  4242ac:	ldr	w3, [x0, #60]
  4242b0:	sub	w2, w2, #0x1
  4242b4:	smull	x2, w2, w1
  4242b8:	ldr	x1, [x0]
  4242bc:	add	x4, x1, x2
  4242c0:	ldr	w1, [x1, x2]
  4242c4:	mov	w2, #0x0                   	// #0
  4242c8:	sub	w3, w3, w1
  4242cc:	ldrb	w1, [x4, #6]
  4242d0:	lsr	w3, w3, w1
  4242d4:	ldr	w1, [x4, #16]
  4242d8:	add	w1, w1, #0x1
  4242dc:	add	w1, w3, w1
  4242e0:	bl	425f10 <nftw@plt+0x23220>
  4242e4:	mov	w0, #0x1                   	// #1
  4242e8:	strb	w0, [x27, #104]
  4242ec:	b	424058 <nftw@plt+0x21368>
  4242f0:	cmp	w21, #0x4c
  4242f4:	b.eq	424310 <nftw@plt+0x21620>  // b.none
  4242f8:	ldrb	w0, [x20, #1130]
  4242fc:	cbnz	w0, 424310 <nftw@plt+0x21620>
  424300:	cmp	w21, #0x52
  424304:	b.eq	424328 <nftw@plt+0x21638>  // b.none
  424308:	ldrb	w0, [x20, #1128]
  42430c:	cbz	w0, 424328 <nftw@plt+0x21638>
  424310:	ldr	x2, [x27]
  424314:	ldrb	w0, [x2]
  424318:	cmp	w0, #0x27
  42431c:	b.ne	424420 <nftw@plt+0x21730>  // b.any
  424320:	cmp	w21, #0x52
  424324:	b.ne	42444c <nftw@plt+0x2175c>  // b.any
  424328:	mov	w0, #0x35                  	// #53
  42432c:	strb	w0, [x19, #4]
  424330:	strb	wzr, [sp, #116]
  424334:	add	x4, x19, #0x10
  424338:	add	x3, sp, #0x70
  42433c:	mov	w2, #0x0                   	// #0
  424340:	ldr	x1, [x27]
  424344:	mov	x0, x20
  424348:	str	wzr, [sp, #112]
  42434c:	sub	x1, x1, #0x1
  424350:	str	wzr, [sp, #120]
  424354:	bl	421a14 <nftw@plt+0x1ed24>
  424358:	str	x0, [x19, #8]
  42435c:	mov	x1, x19
  424360:	mov	x0, x20
  424364:	add	x2, sp, #0x78
  424368:	bl	42298c <nftw@plt+0x1fc9c>
  42436c:	ldr	x1, [x19, #8]
  424370:	ldrh	w0, [x1, #18]
  424374:	tbz	w0, #2, 424390 <nftw@plt+0x216a0>
  424378:	ldrh	w0, [x19, #6]
  42437c:	orr	w0, w0, #0x10
  424380:	strh	w0, [x19, #6]
  424384:	ldrb	w0, [x1, #16]
  424388:	ubfx	x0, x0, #1, #7
  42438c:	strb	w0, [x19, #4]
  424390:	cbz	w23, 4243a0 <nftw@plt+0x216b0>
  424394:	ldrh	w0, [x19, #6]
  424398:	orr	w0, w0, #0x20
  42439c:	strh	w0, [x19, #6]
  4243a0:	ldr	w0, [x19]
  4243a4:	cmp	w0, #0x1
  4243a8:	b.ls	424090 <nftw@plt+0x213a0>  // b.plast
  4243ac:	ldrb	w0, [x19, #4]
  4243b0:	cmp	w0, #0x16
  4243b4:	b.eq	424090 <nftw@plt+0x213a0>  // b.none
  4243b8:	ldr	w0, [x27, #56]
  4243bc:	ldr	x2, [x27, #48]
  4243c0:	lsl	x0, x0, #4
  4243c4:	ldr	x1, [x27]
  4243c8:	ldr	x0, [x2, x0]
  4243cc:	cmp	x1, x0
  4243d0:	b.cc	4243e8 <nftw@plt+0x216f8>  // b.lo, b.ul, b.last
  4243d4:	ldr	x0, [x20, #8]
  4243d8:	cbnz	x0, 4243e8 <nftw@plt+0x216f8>
  4243dc:	mov	x0, x20
  4243e0:	mov	w1, #0x0                   	// #0
  4243e4:	bl	4220a8 <nftw@plt+0x1f3b8>
  4243e8:	ldp	x1, x0, [x27]
  4243ec:	ldr	w21, [x19]
  4243f0:	sub	w1, w1, w0
  4243f4:	ldr	x0, [x20, #40]
  4243f8:	bl	426110 <nftw@plt+0x23420>
  4243fc:	mov	x2, #0x0                   	// #0
  424400:	ldr	w1, [x19]
  424404:	bfxil	x2, x21, #0, #32
  424408:	mov	x3, #0x0                   	// #0
  42440c:	bfi	x2, x0, #32, #32
  424410:	ldr	x0, [x20, #40]
  424414:	bl	4263d4 <nftw@plt+0x236e4>
  424418:	str	w0, [x19]
  42441c:	b	424090 <nftw@plt+0x213a0>
  424420:	cmp	w0, #0x22
  424424:	b.eq	42444c <nftw@plt+0x2175c>  // b.none
  424428:	cmp	w0, #0x52
  42442c:	b.ne	424460 <nftw@plt+0x21770>  // b.any
  424430:	cmp	w21, #0x52
  424434:	b.eq	424328 <nftw@plt+0x21638>  // b.none
  424438:	ldrb	w0, [x2, #1]
  42443c:	cmp	w0, #0x22
  424440:	b.ne	424328 <nftw@plt+0x21638>  // b.any
  424444:	ldrb	w0, [x20, #1130]
  424448:	cbz	w0, 424328 <nftw@plt+0x21638>
  42444c:	sub	x2, x2, #0x1
  424450:	mov	x1, x19
  424454:	mov	x0, x20
  424458:	bl	4233a0 <nftw@plt+0x206b0>
  42445c:	b	4243a0 <nftw@plt+0x216b0>
  424460:	cmp	w0, #0x38
  424464:	b.ne	424328 <nftw@plt+0x21638>  // b.any
  424468:	cmp	w21, #0x75
  42446c:	b.ne	424328 <nftw@plt+0x21638>  // b.any
  424470:	ldrb	w0, [x2, #1]
  424474:	cmp	w0, #0x22
  424478:	b.eq	42444c <nftw@plt+0x2175c>  // b.none
  42447c:	cmp	w0, #0x27
  424480:	b.ne	42448c <nftw@plt+0x2179c>  // b.any
  424484:	ldrb	w0, [x20, #1129]
  424488:	b	424448 <nftw@plt+0x21758>
  42448c:	cmp	w0, #0x52
  424490:	b.ne	424328 <nftw@plt+0x21638>  // b.any
  424494:	ldrb	w0, [x2, #2]
  424498:	b	42443c <nftw@plt+0x2174c>
  42449c:	ldr	x2, [x27]
  4244a0:	b	42444c <nftw@plt+0x2175c>
  4244a4:	ldr	x22, [x27]
  4244a8:	ldrb	w24, [x22]
  4244ac:	cmp	w24, #0x2a
  4244b0:	b.ne	4244f8 <nftw@plt+0x21808>  // b.any
  4244b4:	mov	x0, x20
  4244b8:	bl	4222bc <nftw@plt+0x1f5cc>
  4244bc:	tst	w0, #0xff
  4244c0:	b.eq	4244d8 <nftw@plt+0x217e8>  // b.none
  4244c4:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4244c8:	mov	x0, x20
  4244cc:	add	x2, x2, #0xbf8
  4244d0:	mov	w1, #0x3                   	// #3
  4244d4:	bl	41c014 <nftw@plt+0x19324>
  4244d8:	ldrb	w0, [x20, #1144]
  4244dc:	add	x21, x22, #0x1
  4244e0:	cmp	w0, #0x2
  4244e4:	b.eq	4246ac <nftw@plt+0x219bc>  // b.none
  4244e8:	b.hi	42465c <nftw@plt+0x2196c>  // b.pmore
  4244ec:	cmp	w0, #0x1
  4244f0:	csinc	w23, w23, wzr, ne  // ne = any
  4244f4:	b	42466c <nftw@plt+0x2197c>
  4244f8:	cmp	w24, #0x2f
  4244fc:	b.ne	424640 <nftw@plt+0x21950>  // b.any
  424500:	ldrb	w0, [x20, #1160]
  424504:	cbnz	w0, 4245e4 <nftw@plt+0x218f4>
  424508:	ldr	x0, [x20]
  42450c:	cbz	x0, 424518 <nftw@plt+0x21828>
  424510:	ldrb	w0, [x0, #106]
  424514:	cbnz	w0, 42456c <nftw@plt+0x2187c>
  424518:	ldr	w0, [x20, #1116]
  42451c:	cbnz	w0, 424594 <nftw@plt+0x218a4>
  424520:	ldrb	w1, [x20, #1154]
  424524:	cbz	w1, 424594 <nftw@plt+0x218a4>
  424528:	ldrb	w1, [x27, #105]
  42452c:	tbnz	w1, #0, 424594 <nftw@plt+0x218a4>
  424530:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424534:	add	x2, x2, #0xc0d
  424538:	mov	w1, #0x2                   	// #2
  42453c:	mov	x0, x20
  424540:	bl	41c014 <nftw@plt+0x19324>
  424544:	tst	w0, #0xff
  424548:	b.eq	424560 <nftw@plt+0x21870>  // b.none
  42454c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424550:	mov	x0, x20
  424554:	add	x2, x2, #0xc3b
  424558:	mov	w1, #0x5                   	// #5
  42455c:	bl	41c014 <nftw@plt+0x19324>
  424560:	ldrb	w0, [x27, #105]
  424564:	orr	w0, w0, #0x1
  424568:	strb	w0, [x27, #105]
  42456c:	ldr	x0, [x20, #40]
  424570:	ldr	x1, [x20]
  424574:	ldr	w21, [x0, #60]
  424578:	ldr	x0, [x1]
  42457c:	ldrb	w2, [x0]
  424580:	cmp	w2, #0xa
  424584:	b.eq	424604 <nftw@plt+0x21914>  // b.none
  424588:	add	x0, x0, #0x1
  42458c:	str	x0, [x1]
  424590:	b	424578 <nftw@plt+0x21888>
  424594:	ldrsb	w1, [x20, #1198]
  424598:	cmp	w1, #0x0
  42459c:	b.le	4245c0 <nftw@plt+0x218d0>
  4245a0:	ldrb	w1, [x20, #1120]
  4245a4:	cbnz	w1, 4245c0 <nftw@plt+0x218d0>
  4245a8:	ldrb	w1, [x27, #105]
  4245ac:	tbnz	w1, #0, 4245c0 <nftw@plt+0x218d0>
  4245b0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4245b4:	mov	w1, #0x0                   	// #0
  4245b8:	add	x2, x2, #0xc6c
  4245bc:	b	42453c <nftw@plt+0x2184c>
  4245c0:	sub	w0, w0, #0x5
  4245c4:	cmp	w0, #0x1
  4245c8:	b.hi	42456c <nftw@plt+0x2187c>  // b.pmore
  4245cc:	ldrb	w0, [x22, #1]
  4245d0:	cmp	w0, #0x2a
  4245d4:	b.eq	4245e4 <nftw@plt+0x218f4>  // b.none
  4245d8:	ldr	w0, [x20, #16]
  4245dc:	tst	w0, #0xff00ff
  4245e0:	b.eq	4245ec <nftw@plt+0x218fc>  // b.none
  4245e4:	mov	w0, #0x7                   	// #7
  4245e8:	b	424654 <nftw@plt+0x21964>
  4245ec:	ldrb	w0, [x27, #105]
  4245f0:	tbnz	w0, #0, 42456c <nftw@plt+0x2187c>
  4245f4:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4245f8:	mov	w1, #0x3                   	// #3
  4245fc:	add	x2, x2, #0xc0d
  424600:	b	42453c <nftw@plt+0x2184c>
  424604:	mov	x0, x20
  424608:	mov	w1, #0x1                   	// #1
  42460c:	bl	4220a8 <nftw@plt+0x1f3b8>
  424610:	ldr	x0, [x20, #40]
  424614:	ldr	w0, [x0, #60]
  424618:	cmp	w21, w0
  42461c:	b.eq	4244d8 <nftw@plt+0x217e8>  // b.none
  424620:	ldrb	w0, [x20, #1133]
  424624:	cbz	w0, 4244d8 <nftw@plt+0x217e8>
  424628:	mov	x0, x20
  42462c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424630:	mov	w1, #0x2                   	// #2
  424634:	add	x2, x2, #0xc99
  424638:	bl	41c080 <nftw@plt+0x19390>
  42463c:	b	4244d8 <nftw@plt+0x217e8>
  424640:	cmp	w24, #0x3d
  424644:	b.ne	4245e4 <nftw@plt+0x218f4>  // b.any
  424648:	add	x22, x22, #0x1
  42464c:	mov	w0, #0x1e                  	// #30
  424650:	str	x22, [x27]
  424654:	strb	w0, [x19, #4]
  424658:	b	4243a0 <nftw@plt+0x216b0>
  42465c:	sub	w1, w0, #0x3
  424660:	and	w1, w1, #0xff
  424664:	cmp	w1, #0x1
  424668:	b.ls	4247ec <nftw@plt+0x21afc>  // b.plast
  42466c:	ldr	x4, [x20, #1072]
  424670:	cbz	x4, 424694 <nftw@plt+0x219a4>
  424674:	ldr	x0, [x20]
  424678:	sub	x2, x22, #0x1
  42467c:	ldr	w1, [x19]
  424680:	ldr	x3, [x0]
  424684:	mov	x0, x20
  424688:	sub	x3, x3, x22
  42468c:	add	x3, x3, #0x1
  424690:	blr	x4
  424694:	ldrb	w0, [x20, #21]
  424698:	cbnz	w0, 424d44 <nftw@plt+0x22054>
  42469c:	ldrh	w0, [x19, #6]
  4246a0:	orr	w0, w0, #0x1
  4246a4:	strh	w0, [x19, #6]
  4246a8:	b	424130 <nftw@plt+0x21440>
  4246ac:	ldr	x0, [x20]
  4246b0:	ldr	x1, [x0]
  4246b4:	sub	x0, x1, x21
  4246b8:	cmp	x0, #0x7
  4246bc:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  4246c0:	ldrb	w0, [x21]
  4246c4:	and	w0, w0, #0xffffffdf
  4246c8:	and	w0, w0, #0xff
  4246cc:	cmp	w0, #0x46
  4246d0:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  4246d4:	ldrb	w0, [x21, #1]
  4246d8:	and	w0, w0, #0xffffffdf
  4246dc:	and	w0, w0, #0xff
  4246e0:	cmp	w0, #0x41
  4246e4:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  4246e8:	ldrb	w0, [x21, #2]
  4246ec:	and	w0, w0, #0xffffffdf
  4246f0:	and	w0, w0, #0xff
  4246f4:	cmp	w0, #0x4c
  4246f8:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  4246fc:	ldrb	w0, [x21, #3]
  424700:	and	w0, w0, #0xffffffdf
  424704:	and	w0, w0, #0xff
  424708:	cmp	w0, #0x4c
  42470c:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  424710:	mov	x2, x21
  424714:	add	x21, x21, #0x5
  424718:	ldrb	w0, [x2, #4]!
  42471c:	and	w0, w0, #0xffffffdf
  424720:	and	w0, w0, #0xff
  424724:	cmp	w0, #0x53
  424728:	csel	x21, x21, x2, eq  // eq = none
  42472c:	ldrb	w0, [x21]
  424730:	cmp	w0, #0x2d
  424734:	b.ls	42474c <nftw@plt+0x21a5c>  // b.plast
  424738:	and	w0, w0, #0xffffffdf
  42473c:	cmp	w0, #0x54
  424740:	b.eq	424764 <nftw@plt+0x21a74>  // b.none
  424744:	add	x21, x21, #0x1
  424748:	b	4246b4 <nftw@plt+0x219c4>
  42474c:	mov	x2, #0x200                 	// #512
  424750:	movk	x2, #0x2001, lsl #32
  424754:	lsr	x0, x2, x0
  424758:	tbz	w0, #0, 424744 <nftw@plt+0x21a54>
  42475c:	add	x21, x21, #0x1
  424760:	b	42472c <nftw@plt+0x21a3c>
  424764:	ldrb	w0, [x21, #1]
  424768:	and	w0, w0, #0xffffffdf
  42476c:	and	w0, w0, #0xff
  424770:	cmp	w0, #0x48
  424774:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  424778:	ldrb	w0, [x21, #2]
  42477c:	and	w0, w0, #0xffffffdf
  424780:	and	w0, w0, #0xff
  424784:	cmp	w0, #0x52
  424788:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  42478c:	ldrb	w0, [x21, #3]
  424790:	and	w0, w0, #0xffffffdf
  424794:	and	w0, w0, #0xff
  424798:	cmp	w0, #0x55
  42479c:	b.eq	4247e4 <nftw@plt+0x21af4>  // b.none
  4247a0:	cmp	w0, #0x4f
  4247a4:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  4247a8:	ldrb	w0, [x21, #4]
  4247ac:	and	w0, w0, #0xffffffdf
  4247b0:	and	w0, w0, #0xff
  4247b4:	cmp	w0, #0x55
  4247b8:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  4247bc:	ldrb	w0, [x21, #5]
  4247c0:	and	w0, w0, #0xffffffdf
  4247c4:	and	w0, w0, #0xff
  4247c8:	cmp	w0, #0x47
  4247cc:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  4247d0:	ldrb	w0, [x21, #6]
  4247d4:	and	w0, w0, #0xffffffdf
  4247d8:	and	w0, w0, #0xff
  4247dc:	cmp	w0, #0x48
  4247e0:	b.ne	424744 <nftw@plt+0x21a54>  // b.any
  4247e4:	mov	w23, #0x1                   	// #1
  4247e8:	b	42466c <nftw@plt+0x2197c>
  4247ec:	ldrb	w28, [x22, #1]
  4247f0:	cmp	w28, #0x2d
  4247f4:	b.eq	424800 <nftw@plt+0x21b10>  // b.none
  4247f8:	cmp	w28, #0x40
  4247fc:	b.ne	42487c <nftw@plt+0x21b8c>  // b.any
  424800:	ldr	x0, [x20]
  424804:	ldr	x0, [x0]
  424808:	sub	x0, x0, x21
  42480c:	sub	x0, x0, #0x1
  424810:	cmp	x0, #0xa
  424814:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  424818:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42481c:	add	x0, x22, #0x2
  424820:	add	x1, x1, #0xcb1
  424824:	mov	x2, #0xb                   	// #11
  424828:	bl	4029c0 <memcmp@plt>
  42482c:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424830:	cmp	w28, #0x40
  424834:	b.ne	424874 <nftw@plt+0x21b84>  // b.any
  424838:	ldrb	w0, [x22, #13]
  42483c:	cmp	w0, #0x40
  424840:	b.ne	42466c <nftw@plt+0x2197c>  // b.any
  424844:	mov	x0, #0xc                   	// #12
  424848:	add	x0, x0, #0x1
  42484c:	add	x21, x21, x0
  424850:	ldrb	w1, [x22]
  424854:	ldrb	w0, [x21]
  424858:	cmp	w1, #0x2a
  42485c:	b.ne	424d3c <nftw@plt+0x2204c>  // b.any
  424860:	cmp	w0, #0x2a
  424864:	b.ne	42466c <nftw@plt+0x2197c>  // b.any
  424868:	ldrb	w0, [x21, #1]
  42486c:	cmp	w0, #0x2f
  424870:	b	4244f0 <nftw@plt+0x21800>
  424874:	mov	x0, #0xb                   	// #11
  424878:	b	424848 <nftw@plt+0x21b58>
  42487c:	cmp	w28, #0x6c
  424880:	b.ne	4248d4 <nftw@plt+0x21be4>  // b.any
  424884:	ldr	x0, [x20]
  424888:	ldr	x0, [x0]
  42488c:	sub	x21, x0, x21
  424890:	sub	x21, x21, #0x1
  424894:	cmp	x21, #0xf
  424898:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  42489c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4248a0:	add	x0, x22, #0x2
  4248a4:	add	x1, x1, #0xcac
  4248a8:	mov	x2, #0x10                  	// #16
  4248ac:	bl	4029c0 <memcmp@plt>
  4248b0:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  4248b4:	add	x21, x22, #0x12
  4248b8:	ldrb	w0, [x21]
  4248bc:	cmp	w0, #0x20
  4248c0:	b.eq	4248cc <nftw@plt+0x21bdc>  // b.none
  4248c4:	cmp	w0, #0x9
  4248c8:	b.ne	424850 <nftw@plt+0x21b60>  // b.any
  4248cc:	add	x21, x21, #0x1
  4248d0:	b	4248b8 <nftw@plt+0x21bc8>
  4248d4:	cmp	w0, #0x4
  4248d8:	b.eq	424900 <nftw@plt+0x21c10>  // b.none
  4248dc:	mov	x0, #0x200                 	// #512
  4248e0:	movk	x0, #0x4003, lsl #32
  4248e4:	ldrb	w28, [x21]
  4248e8:	cmp	w28, #0x2e
  4248ec:	b.hi	4249a0 <nftw@plt+0x21cb0>  // b.pmore
  4248f0:	lsr	x1, x0, x28
  4248f4:	tbz	w1, #0, 4249a0 <nftw@plt+0x21cb0>
  4248f8:	add	x21, x21, #0x1
  4248fc:	b	4248e4 <nftw@plt+0x21bf4>
  424900:	ldrb	w0, [x21]
  424904:	cmp	w0, #0x20
  424908:	b.eq	424914 <nftw@plt+0x21c24>  // b.none
  42490c:	cmp	w0, #0x9
  424910:	b.ne	42491c <nftw@plt+0x21c2c>  // b.any
  424914:	add	x21, x21, #0x1
  424918:	b	424900 <nftw@plt+0x21c10>
  42491c:	ldr	x0, [x20]
  424920:	ldr	x28, [x0]
  424924:	sub	x0, x28, x21
  424928:	cmp	x0, #0x7
  42492c:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  424930:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424934:	mov	x0, x21
  424938:	add	x1, x1, #0xcbd
  42493c:	mov	x2, #0x7                   	// #7
  424940:	bl	4029c0 <memcmp@plt>
  424944:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424948:	ldrb	w0, [x21, #7]
  42494c:	cmp	w0, #0x55
  424950:	b.ne	424974 <nftw@plt+0x21c84>  // b.any
  424954:	add	x21, x21, #0x8
  424958:	ldrb	w0, [x21]
  42495c:	cmp	w0, #0x20
  424960:	b.eq	42496c <nftw@plt+0x21c7c>  // b.none
  424964:	cmp	w0, #0x9
  424968:	b.ne	424850 <nftw@plt+0x21b60>  // b.any
  42496c:	add	x21, x21, #0x1
  424970:	b	424958 <nftw@plt+0x21c68>
  424974:	add	x0, x21, #0x7
  424978:	sub	x28, x28, x0
  42497c:	cmp	x28, #0x3
  424980:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  424984:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424988:	mov	x2, #0x4                   	// #4
  42498c:	add	x1, x1, #0xbbb
  424990:	bl	4029c0 <memcmp@plt>
  424994:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424998:	add	x21, x21, #0xb
  42499c:	b	424958 <nftw@plt+0x21c68>
  4249a0:	and	w0, w28, #0xffffffdf
  4249a4:	and	w1, w0, #0xff
  4249a8:	cmp	w0, #0x45
  4249ac:	b.ne	424b98 <nftw@plt+0x21ea8>  // b.any
  4249b0:	ldr	x0, [x20]
  4249b4:	ldr	x0, [x0]
  4249b8:	sub	x0, x0, x21
  4249bc:	cmp	x0, #0xc
  4249c0:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  4249c4:	add	x25, x21, #0x1
  4249c8:	cmp	w28, #0x45
  4249cc:	b.ne	4249e8 <nftw@plt+0x21cf8>  // b.any
  4249d0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4249d4:	mov	x0, x25
  4249d8:	add	x1, x1, #0xcc5
  4249dc:	mov	x2, #0x3                   	// #3
  4249e0:	bl	4029c0 <memcmp@plt>
  4249e4:	cbz	w0, 424b90 <nftw@plt+0x21ea0>
  4249e8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4249ec:	mov	x0, x25
  4249f0:	add	x1, x1, #0x73d
  4249f4:	mov	x2, #0x3                   	// #3
  4249f8:	bl	4029c0 <memcmp@plt>
  4249fc:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424a00:	mov	w26, #0x0                   	// #0
  424a04:	mov	x0, x21
  424a08:	add	x21, x21, #0x5
  424a0c:	ldrb	w1, [x0, #4]!
  424a10:	cmp	w1, #0x2c
  424a14:	csel	x21, x21, x0, eq  // eq = none
  424a18:	ldrb	w0, [x21]
  424a1c:	cmp	w0, #0x20
  424a20:	b.ne	42466c <nftw@plt+0x2197c>  // b.any
  424a24:	ldrb	w25, [x21, #1]
  424a28:	add	x3, x21, #0x1
  424a2c:	cbz	w26, 424a38 <nftw@plt+0x21d48>
  424a30:	cmp	w25, #0x66
  424a34:	b.eq	42466c <nftw@plt+0x2197c>  // b.none
  424a38:	cmp	w28, #0x65
  424a3c:	b.ne	424a48 <nftw@plt+0x21d58>  // b.any
  424a40:	cmp	w25, #0x46
  424a44:	b.eq	42466c <nftw@plt+0x2197c>  // b.none
  424a48:	and	w0, w25, #0xffffffdf
  424a4c:	cmp	w0, #0x46
  424a50:	b.ne	42466c <nftw@plt+0x2197c>  // b.any
  424a54:	ldr	x0, [x20]
  424a58:	ldr	x28, [x0]
  424a5c:	sub	x0, x28, x3
  424a60:	cmp	x0, #0x7
  424a64:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  424a68:	cmp	w25, #0x46
  424a6c:	b.ne	424a90 <nftw@plt+0x21da0>  // b.any
  424a70:	add	x0, x3, #0x1
  424a74:	mov	x2, #0x3                   	// #3
  424a78:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424a7c:	add	x1, x1, #0xce8
  424a80:	str	x3, [sp, #104]
  424a84:	bl	4029c0 <memcmp@plt>
  424a88:	ldr	x3, [sp, #104]
  424a8c:	cbz	w0, 424c6c <nftw@plt+0x21f7c>
  424a90:	cbnz	w26, 42466c <nftw@plt+0x2197c>
  424a94:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424a98:	add	x0, x3, #0x1
  424a9c:	add	x1, x1, #0xcec
  424aa0:	mov	x2, #0x3                   	// #3
  424aa4:	str	x3, [sp, #104]
  424aa8:	bl	4029c0 <memcmp@plt>
  424aac:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424ab0:	ldr	x3, [sp, #104]
  424ab4:	mov	w1, #0x73                  	// #115
  424ab8:	ldrb	w0, [x3, #4]
  424abc:	cmp	w0, w1
  424ac0:	b.ne	424c7c <nftw@plt+0x21f8c>  // b.any
  424ac4:	ldrb	w1, [x3, #5]
  424ac8:	cmp	w1, #0x20
  424acc:	b.ne	424c7c <nftw@plt+0x21f8c>  // b.any
  424ad0:	add	x21, x3, #0x6
  424ad4:	cmp	w25, #0x66
  424ad8:	b.eq	424ae8 <nftw@plt+0x21df8>  // b.none
  424adc:	ldrb	w0, [x21]
  424ae0:	cmp	w0, #0x54
  424ae4:	b.eq	424af8 <nftw@plt+0x21e08>  // b.none
  424ae8:	cbnz	w26, 42466c <nftw@plt+0x2197c>
  424aec:	ldrb	w0, [x21]
  424af0:	cmp	w0, #0x74
  424af4:	b.ne	42466c <nftw@plt+0x2197c>  // b.any
  424af8:	sub	x28, x28, x21
  424afc:	cmp	x28, #0x3
  424b00:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  424b04:	add	x3, x21, #0x1
  424b08:	cmp	w26, #0x0
  424b0c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424b10:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424b14:	add	x0, x0, #0xbb5
  424b18:	add	x1, x1, #0xbb1
  424b1c:	csel	x1, x1, x0, ne  // ne = any
  424b20:	mov	x2, #0x3                   	// #3
  424b24:	mov	x0, x3
  424b28:	str	x3, [sp, #104]
  424b2c:	bl	4029c0 <memcmp@plt>
  424b30:	cbz	w0, 424cb4 <nftw@plt+0x21fc4>
  424b34:	cmp	x28, #0x6
  424b38:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  424b3c:	ldr	x3, [sp, #104]
  424b40:	cmp	w26, #0x0
  424b44:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424b48:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424b4c:	add	x0, x0, #0xcb6
  424b50:	add	x1, x1, #0xbb9
  424b54:	csel	x1, x1, x0, ne  // ne = any
  424b58:	mov	x2, #0x6                   	// #6
  424b5c:	mov	x0, x3
  424b60:	bl	4029c0 <memcmp@plt>
  424b64:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424b68:	add	x21, x21, #0x7
  424b6c:	mov	x1, #0x200                 	// #512
  424b70:	movk	x1, #0x4003, lsl #32
  424b74:	ldrb	w0, [x21]
  424b78:	cmp	w0, #0x2e
  424b7c:	b.hi	424850 <nftw@plt+0x21b60>  // b.pmore
  424b80:	lsr	x2, x1, x0
  424b84:	tbz	w2, #0, 424cbc <nftw@plt+0x21fcc>
  424b88:	add	x21, x21, #0x1
  424b8c:	b	424b74 <nftw@plt+0x21e84>
  424b90:	mov	w26, #0x1                   	// #1
  424b94:	b	424a04 <nftw@plt+0x21d14>
  424b98:	cmp	w1, #0x49
  424b9c:	b.ne	424c5c <nftw@plt+0x21f6c>  // b.any
  424ba0:	ldr	x0, [x20]
  424ba4:	ldr	x0, [x0]
  424ba8:	sub	x0, x0, x21
  424bac:	cmp	x0, #0x13
  424bb0:	b.ls	42466c <nftw@plt+0x2197c>  // b.plast
  424bb4:	add	x25, x21, #0x1
  424bb8:	cmp	w28, #0x49
  424bbc:	b.ne	424bd8 <nftw@plt+0x21ee8>  // b.any
  424bc0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424bc4:	mov	x0, x25
  424bc8:	add	x1, x1, #0xcc9
  424bcc:	mov	x2, #0xa                   	// #10
  424bd0:	bl	4029c0 <memcmp@plt>
  424bd4:	cbz	w0, 424c20 <nftw@plt+0x21f30>
  424bd8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424bdc:	mov	x0, x25
  424be0:	add	x1, x1, #0xcd4
  424be4:	mov	x2, #0xa                   	// #10
  424be8:	bl	4029c0 <memcmp@plt>
  424bec:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424bf0:	mov	w26, #0x0                   	// #0
  424bf4:	ldrb	w0, [x21, #11]
  424bf8:	cmp	w0, #0x20
  424bfc:	b.ne	424c28 <nftw@plt+0x21f38>  // b.any
  424c00:	ldrb	w0, [x21, #12]
  424c04:	add	x3, x21, #0xc
  424c08:	cbz	w26, 424c14 <nftw@plt+0x21f24>
  424c0c:	cmp	w0, #0x66
  424c10:	b.eq	42466c <nftw@plt+0x2197c>  // b.none
  424c14:	ldrb	w25, [x3]
  424c18:	cmp	w28, #0x69
  424c1c:	b	424a3c <nftw@plt+0x21d4c>
  424c20:	mov	w26, #0x1                   	// #1
  424c24:	b	424bf4 <nftw@plt+0x21f04>
  424c28:	add	x0, x21, #0xb
  424c2c:	cbz	w26, 424c4c <nftw@plt+0x21f5c>
  424c30:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424c34:	add	x1, x1, #0xcdf
  424c38:	mov	x2, #0x4                   	// #4
  424c3c:	bl	4029c0 <memcmp@plt>
  424c40:	cbnz	w0, 42466c <nftw@plt+0x2197c>
  424c44:	add	x3, x21, #0xe
  424c48:	b	424c14 <nftw@plt+0x21f24>
  424c4c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  424c50:	mov	x2, #0x3                   	// #3
  424c54:	add	x1, x1, #0xce4
  424c58:	b	424c3c <nftw@plt+0x21f4c>
  424c5c:	mov	w25, w28
  424c60:	mov	x3, x21
  424c64:	mov	w26, #0x0                   	// #0
  424c68:	b	424a48 <nftw@plt+0x21d58>
  424c6c:	ldrb	w0, [x3, #4]
  424c70:	mov	w26, #0x1                   	// #1
  424c74:	mov	w1, #0x53                  	// #83
  424c78:	b	424abc <nftw@plt+0x21dcc>
  424c7c:	cmp	w0, #0x20
  424c80:	b.eq	424c8c <nftw@plt+0x21f9c>  // b.none
  424c84:	cmp	w0, #0x2d
  424c88:	b.ne	424c94 <nftw@plt+0x21fa4>  // b.any
  424c8c:	add	x21, x3, #0x5
  424c90:	b	424ad4 <nftw@plt+0x21de4>
  424c94:	cmp	w26, #0x0
  424c98:	mov	w1, #0x54                  	// #84
  424c9c:	mov	w2, #0x74                  	// #116
  424ca0:	csel	w1, w1, w2, ne  // ne = any
  424ca4:	cmp	w0, w1
  424ca8:	b.ne	42466c <nftw@plt+0x2197c>  // b.any
  424cac:	add	x21, x3, #0x4
  424cb0:	b	424ad4 <nftw@plt+0x21de4>
  424cb4:	add	x21, x21, #0x4
  424cb8:	b	424b6c <nftw@plt+0x21e7c>
  424cbc:	cmp	w0, #0x2d
  424cc0:	b.ne	424850 <nftw@plt+0x21b60>  // b.any
  424cc4:	ldrb	w1, [x22]
  424cc8:	add	x0, x21, #0x1
  424ccc:	cmp	w1, #0x2a
  424cd0:	b.ne	424d18 <nftw@plt+0x22028>  // b.any
  424cd4:	add	x0, x21, #0x2
  424cd8:	ldurb	w1, [x0, #-1]
  424cdc:	sub	x21, x0, #0x1
  424ce0:	cmp	w1, #0x2a
  424ce4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  424ce8:	b.eq	424d04 <nftw@plt+0x22014>  // b.none
  424cec:	cmp	w1, #0xa
  424cf0:	b.eq	424850 <nftw@plt+0x21b60>  // b.none
  424cf4:	cmp	w1, #0xd
  424cf8:	b.eq	424850 <nftw@plt+0x21b60>  // b.none
  424cfc:	add	x0, x0, #0x1
  424d00:	b	424cd8 <nftw@plt+0x21fe8>
  424d04:	cmp	w1, #0x2a
  424d08:	b.ne	424850 <nftw@plt+0x21b60>  // b.any
  424d0c:	ldrb	w1, [x0]
  424d10:	cmp	w1, #0x2f
  424d14:	b	424cf8 <nftw@plt+0x22008>
  424d18:	mov	x21, x0
  424d1c:	mov	x1, #0x2401                	// #9217
  424d20:	ldrb	w0, [x21]
  424d24:	cmp	w0, #0xd
  424d28:	b.hi	424d34 <nftw@plt+0x22044>  // b.pmore
  424d2c:	lsr	x0, x1, x0
  424d30:	tbnz	w0, #0, 424850 <nftw@plt+0x21b60>
  424d34:	add	x21, x21, #0x1
  424d38:	b	424d20 <nftw@plt+0x22030>
  424d3c:	cmp	w0, #0xa
  424d40:	b	4244f0 <nftw@plt+0x21800>
  424d44:	cbz	w23, 424d54 <nftw@plt+0x22064>
  424d48:	ldrh	w0, [x19, #6]
  424d4c:	orr	w0, w0, #0x20
  424d50:	strh	w0, [x19, #6]
  424d54:	ldr	x0, [x20]
  424d58:	ldr	x25, [x0]
  424d5c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  424d60:	add	x0, x0, #0xae
  424d64:	ldurb	w1, [x25, #-1]
  424d68:	sub	w25, w25, w22
  424d6c:	ldrh	w0, [x0, x1, lsl #1]
  424d70:	tst	x0, #0x400
  424d74:	ldrb	w0, [x20, #16]
  424d78:	cinc	w25, w25, eq  // eq = none
  424d7c:	cbnz	w0, 424d88 <nftw@plt+0x22098>
  424d80:	ldrb	w0, [x20, #25]
  424d84:	cbz	w0, 424e44 <nftw@plt+0x22154>
  424d88:	add	w21, w25, #0x2
  424d8c:	cmp	w24, #0x2f
  424d90:	csel	w21, w21, w25, eq  // eq = none
  424d94:	mov	w1, w21
  424d98:	mov	x0, x20
  424d9c:	bl	4232e4 <nftw@plt+0x205f4>
  424da0:	mov	x23, x0
  424da4:	mov	w0, #0x4f                  	// #79
  424da8:	strb	w0, [x19, #4]
  424dac:	mov	x0, x23
  424db0:	str	w21, [x19, #8]
  424db4:	str	x23, [x19, #16]
  424db8:	mov	w1, #0x2f                  	// #47
  424dbc:	sub	w2, w25, #0x1
  424dc0:	strb	w1, [x0], #1
  424dc4:	mov	x1, x22
  424dc8:	bl	4025d0 <memcpy@plt>
  424dcc:	ldrb	w0, [x20, #16]
  424dd0:	cbnz	w0, 424ddc <nftw@plt+0x220ec>
  424dd4:	ldrb	w0, [x20, #25]
  424dd8:	cbz	w0, 424e4c <nftw@plt+0x2215c>
  424ddc:	cmp	w24, #0x2f
  424de0:	b.ne	424e4c <nftw@plt+0x2215c>  // b.any
  424de4:	sub	w2, w21, #0x2
  424de8:	sub	w21, w21, #0x1
  424dec:	mov	w0, #0x2a                  	// #42
  424df0:	strb	w0, [x23, #1]
  424df4:	mov	w1, #0x2                   	// #2
  424df8:	mov	w3, #0x7c                  	// #124
  424dfc:	strb	w0, [x23, w2, uxtw]
  424e00:	add	x0, x23, #0x2
  424e04:	strb	w24, [x23, x21]
  424e08:	cmp	w2, w1
  424e0c:	b.ls	424e4c <nftw@plt+0x2215c>  // b.plast
  424e10:	ldrb	w4, [x0]
  424e14:	add	w1, w1, #0x1
  424e18:	cmp	w4, #0x2f
  424e1c:	b.ne	424e3c <nftw@plt+0x2214c>  // b.any
  424e20:	ldurb	w4, [x0, #-1]
  424e24:	cmp	w4, #0x2a
  424e28:	b.eq	424e38 <nftw@plt+0x22148>  // b.none
  424e2c:	ldrb	w4, [x23, w1, uxtw]
  424e30:	cmp	w4, #0x2a
  424e34:	b.ne	424e3c <nftw@plt+0x2214c>  // b.any
  424e38:	strb	w3, [x0]
  424e3c:	add	x0, x0, #0x1
  424e40:	b	424e08 <nftw@plt+0x22118>
  424e44:	mov	w21, w25
  424e48:	b	424d94 <nftw@plt+0x220a4>
  424e4c:	ldr	w0, [x20, #1396]
  424e50:	cbnz	w0, 424e68 <nftw@plt+0x22178>
  424e54:	mov	w0, #0x100                 	// #256
  424e58:	str	w0, [x20, #1396]
  424e5c:	mov	x0, #0x1000                	// #4096
  424e60:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  424e64:	str	x0, [x20, #1384]
  424e68:	ldr	w1, [x20, #1392]
  424e6c:	ldr	w0, [x20, #1396]
  424e70:	cmp	w1, w0
  424e74:	b.ne	424e90 <nftw@plt+0x221a0>  // b.any
  424e78:	ldr	x0, [x20, #1384]
  424e7c:	lsl	w1, w1, #1
  424e80:	str	w1, [x20, #1396]
  424e84:	sbfiz	x1, x1, #4, #32
  424e88:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  424e8c:	str	x0, [x20, #1384]
  424e90:	ldrsw	x22, [x20, #1392]
  424e94:	ldr	w21, [x19, #8]
  424e98:	ldr	x23, [x20, #1384]
  424e9c:	add	w0, w21, #0x1
  424ea0:	lsl	x22, x22, #4
  424ea4:	sxtw	x21, w21
  424ea8:	sxtw	x0, w0
  424eac:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  424eb0:	ldr	x3, [x20, #1384]
  424eb4:	str	x0, [x23, x22]
  424eb8:	ldrsw	x0, [x20, #1392]
  424ebc:	mov	x2, x21
  424ec0:	ldr	x1, [x19, #16]
  424ec4:	lsl	x0, x0, #4
  424ec8:	ldr	x0, [x3, x0]
  424ecc:	bl	4025d0 <memcpy@plt>
  424ed0:	ldrsw	x0, [x20, #1392]
  424ed4:	ldr	x1, [x20, #1384]
  424ed8:	lsl	x0, x0, #4
  424edc:	ldr	x0, [x1, x0]
  424ee0:	strb	wzr, [x0, x21]
  424ee4:	ldr	x1, [x20, #1384]
  424ee8:	ldr	w0, [x20, #1392]
  424eec:	ldr	w2, [x19]
  424ef0:	add	x1, x1, w0, sxtw #4
  424ef4:	add	w0, w0, #0x1
  424ef8:	str	w2, [x1, #8]
  424efc:	str	w0, [x20, #1392]
  424f00:	b	4243a0 <nftw@plt+0x216b0>
  424f04:	ldrb	w0, [x20, #19]
  424f08:	cbnz	w0, 424f34 <nftw@plt+0x22244>
  424f0c:	mov	w0, #0x3                   	// #3
  424f10:	strb	w0, [x19, #4]
  424f14:	ldr	x0, [x27]
  424f18:	ldrb	w1, [x0]
  424f1c:	cmp	w1, #0x3d
  424f20:	b.ne	424f58 <nftw@plt+0x22268>  // b.any
  424f24:	add	x0, x0, #0x1
  424f28:	str	x0, [x27]
  424f2c:	mov	w0, #0x1a                  	// #26
  424f30:	b	424654 <nftw@plt+0x21964>
  424f34:	ldr	x2, [x27]
  424f38:	mov	x0, x20
  424f3c:	mov	x1, x19
  424f40:	sub	x2, x2, #0x1
  424f44:	bl	4233a0 <nftw@plt+0x206b0>
  424f48:	ldrb	w0, [x19, #4]
  424f4c:	cmp	w0, #0x3
  424f50:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  424f54:	b	424f0c <nftw@plt+0x2221c>
  424f58:	cmp	w1, #0x3c
  424f5c:	b.ne	424f8c <nftw@plt+0x2229c>  // b.any
  424f60:	add	x1, x0, #0x1
  424f64:	str	x1, [x27]
  424f68:	mov	w1, #0xd                   	// #13
  424f6c:	strb	w1, [x19, #4]
  424f70:	ldrb	w1, [x0, #1]
  424f74:	cmp	w1, #0x3d
  424f78:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  424f7c:	add	x0, x0, #0x2
  424f80:	str	x0, [x27]
  424f84:	mov	w0, #0x24                  	// #36
  424f88:	b	424654 <nftw@plt+0x21964>
  424f8c:	ldrb	w2, [x20, #1126]
  424f90:	cbz	w2, 4243a0 <nftw@plt+0x216b0>
  424f94:	cmp	w1, #0x3a
  424f98:	b.ne	424ff0 <nftw@plt+0x22300>  // b.any
  424f9c:	ldrb	w1, [x20, #1120]
  424fa0:	cbz	w1, 424fd4 <nftw@plt+0x222e4>
  424fa4:	ldr	w1, [x20, #1116]
  424fa8:	sub	w1, w1, #0xb
  424fac:	cmp	w1, #0x1
  424fb0:	b.ls	424fd4 <nftw@plt+0x222e4>  // b.plast
  424fb4:	ldrb	w1, [x0, #1]
  424fb8:	cmp	w1, #0x3a
  424fbc:	b.ne	424fd4 <nftw@plt+0x222e4>  // b.any
  424fc0:	ldrb	w1, [x0, #2]
  424fc4:	and	w1, w1, #0xfffffffb
  424fc8:	and	w1, w1, #0xff
  424fcc:	cmp	w1, #0x3a
  424fd0:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  424fd4:	add	x0, x0, #0x1
  424fd8:	str	x0, [x27]
  424fdc:	ldrh	w0, [x19, #6]
  424fe0:	orr	w0, w0, #0x2
  424fe4:	strh	w0, [x19, #6]
  424fe8:	mov	w0, #0x27                  	// #39
  424fec:	b	424654 <nftw@plt+0x21964>
  424ff0:	cmp	w1, #0x25
  424ff4:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  424ff8:	add	x0, x0, #0x1
  424ffc:	str	x0, [x27]
  425000:	ldrh	w0, [x19, #6]
  425004:	orr	w0, w0, #0x2
  425008:	strh	w0, [x19, #6]
  42500c:	mov	w0, #0x29                  	// #41
  425010:	b	424654 <nftw@plt+0x21964>
  425014:	mov	w0, #0x2                   	// #2
  425018:	strb	w0, [x19, #4]
  42501c:	ldr	x0, [x27]
  425020:	ldrb	w1, [x0]
  425024:	cmp	w1, #0x3d
  425028:	b.ne	42503c <nftw@plt+0x2234c>  // b.any
  42502c:	add	x0, x0, #0x1
  425030:	str	x0, [x27]
  425034:	mov	w0, #0x19                  	// #25
  425038:	b	424654 <nftw@plt+0x21964>
  42503c:	cmp	w1, #0x3e
  425040:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  425044:	add	x1, x0, #0x1
  425048:	str	x1, [x27]
  42504c:	mov	w1, #0xc                   	// #12
  425050:	strb	w1, [x19, #4]
  425054:	ldrb	w1, [x0, #1]
  425058:	cmp	w1, #0x3d
  42505c:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  425060:	add	x0, x0, #0x2
  425064:	str	x0, [x27]
  425068:	mov	w0, #0x23                  	// #35
  42506c:	b	424654 <nftw@plt+0x21964>
  425070:	mov	w0, #0x8                   	// #8
  425074:	strb	w0, [x19, #4]
  425078:	ldr	x0, [x27]
  42507c:	ldrb	w1, [x0]
  425080:	cmp	w1, #0x3d
  425084:	b.ne	425098 <nftw@plt+0x223a8>  // b.any
  425088:	add	x0, x0, #0x1
  42508c:	str	x0, [x27]
  425090:	mov	w0, #0x1f                  	// #31
  425094:	b	424654 <nftw@plt+0x21964>
  425098:	ldrb	w2, [x20, #1126]
  42509c:	cbz	w2, 4243a0 <nftw@plt+0x216b0>
  4250a0:	cmp	w1, #0x3a
  4250a4:	b.ne	4250f4 <nftw@plt+0x22404>  // b.any
  4250a8:	add	x1, x0, #0x1
  4250ac:	str	x1, [x27]
  4250b0:	ldrh	w1, [x19, #6]
  4250b4:	orr	w1, w1, #0x2
  4250b8:	strh	w1, [x19, #6]
  4250bc:	mov	w1, #0x25                  	// #37
  4250c0:	strb	w1, [x19, #4]
  4250c4:	ldrb	w1, [x0, #1]
  4250c8:	cmp	w1, #0x25
  4250cc:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4250d0:	ldrb	w1, [x0, #2]
  4250d4:	cmp	w1, #0x3a
  4250d8:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4250dc:	add	x0, x0, #0x3
  4250e0:	str	x0, [x27]
  4250e4:	mov	w0, #0x26                  	// #38
  4250e8:	strb	w0, [x19, #4]
  4250ec:	str	wzr, [x19, #8]
  4250f0:	b	4243a0 <nftw@plt+0x216b0>
  4250f4:	cmp	w1, #0x3e
  4250f8:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4250fc:	add	x0, x0, #0x1
  425100:	str	x0, [x27]
  425104:	ldrh	w0, [x19, #6]
  425108:	orr	w0, w0, #0x2
  42510c:	strh	w0, [x19, #6]
  425110:	mov	w0, #0x2a                  	// #42
  425114:	b	424654 <nftw@plt+0x21964>
  425118:	mov	w0, #0x30                  	// #48
  42511c:	strb	w0, [x19, #4]
  425120:	ldr	x0, [x27]
  425124:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  425128:	add	x1, x1, #0xae
  42512c:	ldrb	w3, [x0]
  425130:	ldrb	w2, [x0]
  425134:	ldrh	w1, [x1, x3, lsl #1]
  425138:	tbz	w1, #2, 425174 <nftw@plt+0x22484>
  42513c:	str	wzr, [sp, #112]
  425140:	mov	w0, #0x37                  	// #55
  425144:	strb	wzr, [sp, #116]
  425148:	add	x2, sp, #0x70
  42514c:	str	wzr, [sp, #120]
  425150:	add	x1, x19, #0x8
  425154:	strb	w0, [x19, #4]
  425158:	mov	x0, x20
  42515c:	bl	423edc <nftw@plt+0x211ec>
  425160:	add	x2, sp, #0x78
  425164:	mov	x1, x19
  425168:	mov	x0, x20
  42516c:	bl	42298c <nftw@plt+0x1fc9c>
  425170:	b	4243a0 <nftw@plt+0x216b0>
  425174:	cmp	w2, #0x2e
  425178:	b.ne	425198 <nftw@plt+0x224a8>  // b.any
  42517c:	ldrb	w1, [x0, #1]
  425180:	cmp	w1, #0x2e
  425184:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  425188:	add	x0, x0, #0x2
  42518c:	str	x0, [x27]
  425190:	mov	w0, #0x2c                  	// #44
  425194:	b	424654 <nftw@plt+0x21964>
  425198:	cmp	w2, #0x2a
  42519c:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4251a0:	ldrb	w1, [x20, #1120]
  4251a4:	cbz	w1, 4243a0 <nftw@plt+0x216b0>
  4251a8:	add	x0, x0, #0x1
  4251ac:	str	x0, [x27]
  4251b0:	mov	w0, #0x33                  	// #51
  4251b4:	b	424654 <nftw@plt+0x21964>
  4251b8:	mov	w0, #0x4                   	// #4
  4251bc:	strb	w0, [x19, #4]
  4251c0:	ldr	x0, [x27]
  4251c4:	ldrb	w1, [x0]
  4251c8:	cmp	w1, #0x2b
  4251cc:	b.ne	4251e0 <nftw@plt+0x224f0>  // b.any
  4251d0:	add	x0, x0, #0x1
  4251d4:	str	x0, [x27]
  4251d8:	mov	w0, #0x2d                  	// #45
  4251dc:	b	424654 <nftw@plt+0x21964>
  4251e0:	cmp	w1, #0x3d
  4251e4:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4251e8:	add	x0, x0, #0x1
  4251ec:	str	x0, [x27]
  4251f0:	mov	w0, #0x1b                  	// #27
  4251f4:	b	424654 <nftw@plt+0x21964>
  4251f8:	mov	w0, #0x5                   	// #5
  4251fc:	strb	w0, [x19, #4]
  425200:	ldr	x0, [x27]
  425204:	ldrb	w1, [x0]
  425208:	cmp	w1, #0x3e
  42520c:	b.ne	425244 <nftw@plt+0x22554>  // b.any
  425210:	add	x1, x0, #0x1
  425214:	str	x1, [x27]
  425218:	mov	w1, #0x2f                  	// #47
  42521c:	strb	w1, [x19, #4]
  425220:	ldrb	w1, [x0, #1]
  425224:	cmp	w1, #0x2a
  425228:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  42522c:	ldrb	w1, [x20, #1120]
  425230:	cbz	w1, 4243a0 <nftw@plt+0x216b0>
  425234:	add	x0, x0, #0x2
  425238:	str	x0, [x27]
  42523c:	mov	w0, #0x32                  	// #50
  425240:	b	424654 <nftw@plt+0x21964>
  425244:	cmp	w1, #0x2d
  425248:	b.ne	42525c <nftw@plt+0x2256c>  // b.any
  42524c:	add	x0, x0, #0x1
  425250:	str	x0, [x27]
  425254:	mov	w0, #0x2e                  	// #46
  425258:	b	424654 <nftw@plt+0x21964>
  42525c:	cmp	w1, #0x3d
  425260:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  425264:	add	x0, x0, #0x1
  425268:	str	x0, [x27]
  42526c:	mov	w0, #0x1c                  	// #28
  425270:	b	424654 <nftw@plt+0x21964>
  425274:	mov	w0, #0x9                   	// #9
  425278:	strb	w0, [x19, #4]
  42527c:	ldr	x0, [x27]
  425280:	ldrb	w1, [x0]
  425284:	cmp	w1, #0x26
  425288:	b.ne	42529c <nftw@plt+0x225ac>  // b.any
  42528c:	add	x0, x0, #0x1
  425290:	str	x0, [x27]
  425294:	mov	w0, #0xf                   	// #15
  425298:	b	424654 <nftw@plt+0x21964>
  42529c:	cmp	w1, #0x3d
  4252a0:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4252a4:	add	x0, x0, #0x1
  4252a8:	str	x0, [x27]
  4252ac:	mov	w0, #0x20                  	// #32
  4252b0:	b	424654 <nftw@plt+0x21964>
  4252b4:	mov	w0, #0xa                   	// #10
  4252b8:	strb	w0, [x19, #4]
  4252bc:	ldr	x0, [x27]
  4252c0:	ldrb	w1, [x0]
  4252c4:	cmp	w1, #0x7c
  4252c8:	b.ne	4252dc <nftw@plt+0x225ec>  // b.any
  4252cc:	add	x0, x0, #0x1
  4252d0:	str	x0, [x27]
  4252d4:	mov	w0, #0x10                  	// #16
  4252d8:	b	424654 <nftw@plt+0x21964>
  4252dc:	cmp	w1, #0x3d
  4252e0:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4252e4:	add	x0, x0, #0x1
  4252e8:	str	x0, [x27]
  4252ec:	mov	w0, #0x21                  	// #33
  4252f0:	b	424654 <nftw@plt+0x21964>
  4252f4:	mov	w0, #0x12                  	// #18
  4252f8:	strb	w0, [x19, #4]
  4252fc:	ldr	x0, [x27]
  425300:	ldrb	w1, [x0]
  425304:	cmp	w1, #0x3a
  425308:	b.ne	425324 <nftw@plt+0x22634>  // b.any
  42530c:	ldrb	w1, [x20, #1120]
  425310:	cbz	w1, 4243a0 <nftw@plt+0x216b0>
  425314:	add	x0, x0, #0x1
  425318:	str	x0, [x27]
  42531c:	mov	w0, #0x31                  	// #49
  425320:	b	424654 <nftw@plt+0x21964>
  425324:	cmp	w1, #0x3e
  425328:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  42532c:	ldrb	w1, [x20, #1126]
  425330:	cbz	w1, 4243a0 <nftw@plt+0x216b0>
  425334:	add	x0, x0, #0x1
  425338:	str	x0, [x27]
  42533c:	ldrh	w0, [x19, #6]
  425340:	orr	w0, w0, #0x2
  425344:	strh	w0, [x19, #6]
  425348:	mov	w0, #0x28                  	// #40
  42534c:	b	424654 <nftw@plt+0x21964>
  425350:	mov	w0, #0x6                   	// #6
  425354:	strb	w0, [x19, #4]
  425358:	ldr	x0, [x27]
  42535c:	ldrb	w1, [x0]
  425360:	cmp	w1, #0x3d
  425364:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  425368:	add	x0, x0, #0x1
  42536c:	str	x0, [x27]
  425370:	mov	w0, #0x1d                  	// #29
  425374:	b	424654 <nftw@plt+0x21964>
  425378:	ldr	x0, [x27]
  42537c:	strb	wzr, [x19, #4]
  425380:	ldrb	w1, [x0]
  425384:	cmp	w1, #0x3d
  425388:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  42538c:	add	x0, x0, #0x1
  425390:	str	x0, [x27]
  425394:	mov	w0, #0x17                  	// #23
  425398:	b	424654 <nftw@plt+0x21964>
  42539c:	mov	w0, #0x1                   	// #1
  4253a0:	strb	w0, [x19, #4]
  4253a4:	ldr	x0, [x27]
  4253a8:	ldrb	w1, [x0]
  4253ac:	cmp	w1, #0x3d
  4253b0:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4253b4:	add	x0, x0, #0x1
  4253b8:	str	x0, [x27]
  4253bc:	mov	w0, #0x18                  	// #24
  4253c0:	b	424654 <nftw@plt+0x21964>
  4253c4:	mov	w0, #0xb                   	// #11
  4253c8:	strb	w0, [x19, #4]
  4253cc:	ldr	x0, [x27]
  4253d0:	ldrb	w1, [x0]
  4253d4:	cmp	w1, #0x3d
  4253d8:	b.ne	4243a0 <nftw@plt+0x216b0>  // b.any
  4253dc:	add	x0, x0, #0x1
  4253e0:	str	x0, [x27]
  4253e4:	mov	w0, #0x22                  	// #34
  4253e8:	b	424654 <nftw@plt+0x21964>
  4253ec:	mov	w0, #0x25                  	// #37
  4253f0:	strb	w0, [x19, #4]
  4253f4:	ldr	x0, [x27]
  4253f8:	ldrb	w1, [x0]
  4253fc:	cmp	w1, #0x23
  425400:	b.ne	4250ec <nftw@plt+0x223fc>  // b.any
  425404:	add	x0, x0, #0x1
  425408:	b	4250e0 <nftw@plt+0x223f0>
  42540c:	mov	w0, #0x11                  	// #17
  425410:	b	424654 <nftw@plt+0x21964>
  425414:	mov	w0, #0xe                   	// #14
  425418:	b	424654 <nftw@plt+0x21964>
  42541c:	mov	w0, #0x13                  	// #19
  425420:	b	424654 <nftw@plt+0x21964>
  425424:	mov	w0, #0x14                  	// #20
  425428:	b	424654 <nftw@plt+0x21964>
  42542c:	mov	w0, #0x15                  	// #21
  425430:	b	424654 <nftw@plt+0x21964>
  425434:	mov	w0, #0x2b                  	// #43
  425438:	b	424654 <nftw@plt+0x21964>
  42543c:	mov	w0, #0x34                  	// #52
  425440:	b	424654 <nftw@plt+0x21964>
  425444:	ldr	x21, [x27]
  425448:	add	x2, sp, #0x70
  42544c:	mov	x0, x20
  425450:	mov	w1, #0x1                   	// #1
  425454:	sub	x21, x21, #0x1
  425458:	str	x21, [x27]
  42545c:	str	wzr, [sp, #112]
  425460:	strb	wzr, [sp, #116]
  425464:	str	wzr, [sp, #120]
  425468:	bl	421848 <nftw@plt+0x1eb58>
  42546c:	tst	w0, #0xff
  425470:	b.eq	42549c <nftw@plt+0x227ac>  // b.none
  425474:	mov	w0, #0x35                  	// #53
  425478:	strb	w0, [x19, #4]
  42547c:	add	x4, x19, #0x10
  425480:	add	x3, sp, #0x70
  425484:	mov	x1, x21
  425488:	mov	x0, x20
  42548c:	mov	w2, #0x1                   	// #1
  425490:	bl	421a14 <nftw@plt+0x1ed24>
  425494:	str	x0, [x19, #8]
  425498:	b	425160 <nftw@plt+0x22470>
  42549c:	ldr	x0, [x27]
  4254a0:	add	x0, x0, #0x1
  4254a4:	str	x0, [x27]
  4254a8:	ldr	x2, [x27]
  4254ac:	mov	x1, x19
  4254b0:	mov	x0, x20
  4254b4:	mov	w4, #0x3d                  	// #61
  4254b8:	sub	x2, x2, #0x1
  4254bc:	mov	w3, #0x1                   	// #1
  4254c0:	bl	42333c <nftw@plt+0x2064c>
  4254c4:	b	4243a0 <nftw@plt+0x216b0>
  4254c8:	stp	x29, x30, [sp, #-48]!
  4254cc:	mov	x29, sp
  4254d0:	stp	x19, x20, [sp, #16]
  4254d4:	mov	x19, x0
  4254d8:	str	x21, [sp, #32]
  4254dc:	add	x21, x0, #0x98
  4254e0:	ldr	x0, [x19, #488]
  4254e4:	ldr	x2, [x19, #448]
  4254e8:	ldr	x1, [x0, #24]
  4254ec:	cmp	x2, x1
  4254f0:	b.ne	425504 <nftw@plt+0x22814>  // b.any
  4254f4:	bl	422574 <nftw@plt+0x1f884>
  4254f8:	str	x0, [x19, #488]
  4254fc:	ldr	x0, [x0, #16]
  425500:	str	x0, [x19, #448]
  425504:	ldr	x0, [x19, #488]
  425508:	ldr	x20, [x19, #448]
  42550c:	ldr	x1, [x0, #16]
  425510:	cmp	x20, x1
  425514:	b.cc	425524 <nftw@plt+0x22834>  // b.lo, b.ul, b.last
  425518:	ldr	x0, [x0, #24]
  42551c:	cmp	x20, x0
  425520:	b.cc	42553c <nftw@plt+0x2284c>  // b.lo, b.ul, b.last
  425524:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  425528:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42552c:	add	x2, x2, #0xcf0
  425530:	add	x0, x0, #0x77e
  425534:	mov	w1, #0xa1d                 	// #2589
  425538:	bl	402d60 <nftw@plt+0x70>
  42553c:	ldr	w0, [x19, #496]
  425540:	cbz	w0, 4255f0 <nftw@plt+0x22900>
  425544:	sub	w0, w0, #0x1
  425548:	str	w0, [x19, #496]
  42554c:	add	x0, x20, #0x18
  425550:	str	x0, [x19, #448]
  425554:	ldrh	w1, [x20, #6]
  425558:	tbz	w1, #6, 4255b4 <nftw@plt+0x228c4>
  42555c:	ldrb	w0, [x20, #4]
  425560:	cmp	w0, #0x25
  425564:	b.ne	425600 <nftw@plt+0x22910>  // b.any
  425568:	ldrb	w0, [x19, #25]
  42556c:	cmp	w0, #0x1
  425570:	b.eq	425600 <nftw@plt+0x22910>  // b.none
  425574:	and	w1, w1, #0x1
  425578:	mov	x0, x19
  42557c:	bl	41a73c <nftw@plt+0x17a4c>
  425580:	cbz	w0, 425594 <nftw@plt+0x228a4>
  425584:	ldrb	w0, [x19, #156]
  425588:	cmp	w0, #0x53
  42558c:	b.eq	4254e0 <nftw@plt+0x227f0>  // b.none
  425590:	mov	x20, x21
  425594:	ldr	x3, [x19, #904]
  425598:	cbz	x3, 4255b4 <nftw@plt+0x228c4>
  42559c:	ldrb	w0, [x19, #18]
  4255a0:	cbnz	w0, 4255b4 <nftw@plt+0x228c4>
  4255a4:	ldrb	w2, [x19, #25]
  4255a8:	mov	x1, x20
  4255ac:	mov	x0, x19
  4255b0:	blr	x3
  4255b4:	ldrb	w0, [x19, #16]
  4255b8:	cbnz	w0, 4255dc <nftw@plt+0x228ec>
  4255bc:	ldrb	w0, [x19, #32]
  4255c0:	cbnz	w0, 4255dc <nftw@plt+0x228ec>
  4255c4:	ldrb	w0, [x19, #18]
  4255c8:	strb	wzr, [x19, #440]
  4255cc:	cbz	w0, 4255dc <nftw@plt+0x228ec>
  4255d0:	ldrb	w0, [x20, #4]
  4255d4:	cmp	w0, #0x16
  4255d8:	b.ne	4254e0 <nftw@plt+0x227f0>  // b.any
  4255dc:	mov	x0, x20
  4255e0:	ldp	x19, x20, [sp, #16]
  4255e4:	ldr	x21, [sp, #32]
  4255e8:	ldp	x29, x30, [sp], #48
  4255ec:	ret
  4255f0:	mov	x0, x19
  4255f4:	bl	42401c <nftw@plt+0x2132c>
  4255f8:	mov	x20, x0
  4255fc:	b	425554 <nftw@plt+0x22864>
  425600:	ldrb	w0, [x19, #32]
  425604:	cbnz	w0, 425590 <nftw@plt+0x228a0>
  425608:	b	425594 <nftw@plt+0x228a4>
  42560c:	stp	x29, x30, [sp, #-64]!
  425610:	mov	x29, sp
  425614:	stp	x19, x20, [sp, #16]
  425618:	mov	x19, x0
  42561c:	mov	w20, w1
  425620:	stp	x21, x22, [sp, #32]
  425624:	ldr	x21, [x0, #136]
  425628:	str	x23, [sp, #48]
  42562c:	ldr	x22, [x21, #8]
  425630:	cbz	x22, 4256ac <nftw@plt+0x229bc>
  425634:	mov	x0, x21
  425638:	bl	4225b4 <nftw@plt+0x1f8c4>
  42563c:	cmp	w0, w20
  425640:	b.le	4256a0 <nftw@plt+0x229b0>
  425644:	ldr	w0, [x21, #48]
  425648:	cmp	w0, #0x1
  42564c:	b.ne	425674 <nftw@plt+0x22984>  // b.any
  425650:	ldr	x0, [x21, #16]
  425654:	mov	w21, #0x18                  	// #24
  425658:	smaddl	x21, w20, w21, x0
  42565c:	mov	x0, x21
  425660:	ldp	x19, x20, [sp, #16]
  425664:	ldp	x21, x22, [sp, #32]
  425668:	ldr	x23, [sp, #48]
  42566c:	ldp	x29, x30, [sp], #64
  425670:	ret
  425674:	tst	w0, #0xfffffffd
  425678:	b.ne	425688 <nftw@plt+0x22998>  // b.any
  42567c:	ldr	x0, [x21, #16]
  425680:	ldr	x21, [x0, w20, sxtw #3]
  425684:	b	42565c <nftw@plt+0x2296c>
  425688:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42568c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0x18fa8>
  425690:	add	x2, x2, #0xcff
  425694:	add	x0, x0, #0x77e
  425698:	mov	w1, #0x9ad                 	// #2477
  42569c:	bl	402d60 <nftw@plt+0x70>
  4256a0:	sub	w20, w20, w0
  4256a4:	mov	x21, x22
  4256a8:	b	42562c <nftw@plt+0x2293c>
  4256ac:	ldr	w0, [x19, #500]
  4256b0:	mov	w22, w20
  4256b4:	ldr	x23, [x19, #904]
  4256b8:	add	w0, w0, #0x1
  4256bc:	str	w0, [x19, #500]
  4256c0:	str	xzr, [x19, #904]
  4256c4:	mov	x0, x19
  4256c8:	bl	4254c8 <nftw@plt+0x227d8>
  4256cc:	mov	x21, x0
  4256d0:	mov	w0, w22
  4256d4:	sub	w22, w22, #0x1
  4256d8:	ldrb	w1, [x21, #4]
  4256dc:	cmp	w1, #0x16
  4256e0:	b.eq	4256ec <nftw@plt+0x229fc>  // b.none
  4256e4:	cbnz	w0, 4256c4 <nftw@plt+0x229d4>
  4256e8:	mov	w22, #0xffffffff            	// #-1
  4256ec:	mov	x0, x19
  4256f0:	sub	w1, w20, w22
  4256f4:	bl	428c88 <nftw@plt+0x25f98>
  4256f8:	str	x23, [x19, #904]
  4256fc:	ldr	w0, [x19, #500]
  425700:	sub	w0, w0, #0x1
  425704:	str	w0, [x19, #500]
  425708:	b	42565c <nftw@plt+0x2296c>
  42570c:	stp	x29, x30, [sp, #-32]!
  425710:	mov	x29, sp
  425714:	ldr	x2, [x0, #56]
  425718:	stp	x19, x20, [sp, #16]
  42571c:	mov	x19, x1
  425720:	ldp	x3, x4, [x2, #16]
  425724:	sub	x4, x4, x3
  425728:	cmp	x4, x1
  42572c:	b.cs	42574c <nftw@plt+0x22a5c>  // b.hs, b.nlast
  425730:	mov	x20, x0
  425734:	bl	4230b4 <nftw@plt+0x203c4>
  425738:	mov	x2, x0
  42573c:	ldr	x3, [x0, #16]
  425740:	ldr	x0, [x20, #56]
  425744:	str	x0, [x2]
  425748:	str	x2, [x20, #56]
  42574c:	add	x19, x3, x19
  425750:	str	x19, [x2, #16]
  425754:	mov	x0, x3
  425758:	ldp	x19, x20, [sp, #16]
  42575c:	ldp	x29, x30, [sp], #32
  425760:	ret
  425764:	stp	x29, x30, [sp, #-48]!
  425768:	mov	x29, sp
  42576c:	stp	x19, x20, [sp, #16]
  425770:	mov	x19, x1
  425774:	ldr	x1, [x0, #56]
  425778:	ldr	x0, [x0, #1088]
  42577c:	ldr	x2, [x0, #104]
  425780:	str	x21, [sp, #32]
  425784:	ldr	x21, [x1, #16]
  425788:	cbz	x2, 4257b8 <nftw@plt+0x22ac8>
  42578c:	mov	x0, x19
  425790:	blr	x2
  425794:	mov	x2, x19
  425798:	mov	x20, x0
  42579c:	mov	x1, x21
  4257a0:	bl	4025d0 <memcpy@plt>
  4257a4:	mov	x0, x20
  4257a8:	ldp	x19, x20, [sp, #16]
  4257ac:	ldr	x21, [sp, #32]
  4257b0:	ldp	x29, x30, [sp], #48
  4257b4:	ret
  4257b8:	add	x19, x21, x19
  4257bc:	mov	x20, x21
  4257c0:	str	x19, [x1, #16]
  4257c4:	b	4257a4 <nftw@plt+0x22ab4>
  4257c8:	ldrb	w1, [x0, #4]
  4257cc:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4257d0:	ldrb	w0, [x0, #4]
  4257d4:	add	x2, x2, #0xfd0
  4257d8:	lsl	x0, x0, #4
  4257dc:	ldr	w0, [x2, x0]
  4257e0:	cmp	w0, #0x3
  4257e4:	b.hi	425800 <nftw@plt+0x22b10>  // b.pmore
  4257e8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4257ec:	add	x2, x2, #0xfcc
  4257f0:	ldrb	w2, [x2, w0, uxtw]
  4257f4:	adr	x3, 425800 <nftw@plt+0x22b10>
  4257f8:	add	x2, x3, w2, sxtb #2
  4257fc:	br	x2
  425800:	mov	w0, #0x6                   	// #6
  425804:	ret
  425808:	cmp	w1, #0x26
  42580c:	mov	w0, #0x4                   	// #4
  425810:	mov	w1, #0x6                   	// #6
  425814:	csel	w0, w0, w1, eq  // eq = none
  425818:	b	425804 <nftw@plt+0x22b14>
  42581c:	cmp	w1, #0x50
  425820:	b.eq	425804 <nftw@plt+0x22b14>  // b.none
  425824:	cmp	w1, #0x53
  425828:	b.eq	425844 <nftw@plt+0x22b54>  // b.none
  42582c:	cmp	w1, #0x51
  425830:	cset	w0, ne  // ne = any
  425834:	add	w0, w0, #0x5
  425838:	b	425804 <nftw@plt+0x22b14>
  42583c:	mov	w0, #0x0                   	// #0
  425840:	b	425804 <nftw@plt+0x22b14>
  425844:	mov	w0, #0x1                   	// #1
  425848:	b	425804 <nftw@plt+0x22b14>
  42584c:	str	w1, [x0, #1408]
  425850:	ret
  425854:	str	wzr, [x0, #1408]
  425858:	ret
  42585c:	ldp	w2, w1, [x0]
  425860:	ldr	x3, [x0, #16]
  425864:	add	w2, w2, w1
  425868:	ldr	w1, [x0, #8]
  42586c:	add	w0, w1, w3
  425870:	add	w0, w2, w0
  425874:	ret
  425878:	ldr	x3, [x0]
  42587c:	ldr	x2, [x1]
  425880:	cmp	x3, x2
  425884:	b.ne	4258ac <nftw@plt+0x22bbc>  // b.any
  425888:	ldr	w3, [x0, #8]
  42588c:	ldr	w2, [x1, #8]
  425890:	cmp	w3, w2
  425894:	b.ne	4258ac <nftw@plt+0x22bbc>  // b.any
  425898:	ldr	x2, [x0, #16]
  42589c:	ldr	x0, [x1, #16]
  4258a0:	cmp	x2, x0
  4258a4:	cset	w0, eq  // eq = none
  4258a8:	ret
  4258ac:	mov	w0, #0x0                   	// #0
  4258b0:	b	4258a8 <nftw@plt+0x22bb8>
  4258b4:	ldr	x2, [x0]
  4258b8:	ldr	x1, [x1]
  4258bc:	add	x2, x2, x1
  4258c0:	str	x2, [x0]
  4258c4:	mov	w0, #0x1                   	// #1
  4258c8:	ret
  4258cc:	mov	x3, x0
  4258d0:	tbz	w1, #31, 4258e8 <nftw@plt+0x22bf8>
  4258d4:	and	w1, w1, #0x7fffffff
  4258d8:	mov	w0, #0x18                  	// #24
  4258dc:	umull	x1, w1, w0
  4258e0:	ldr	x0, [x3, #104]
  4258e4:	ldr	w1, [x0, x1]
  4258e8:	cmp	x3, #0x0
  4258ec:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4258f0:	b.ls	425978 <nftw@plt+0x22c88>  // b.plast
  4258f4:	ldr	w2, [x3, #16]
  4258f8:	mov	w4, #0x18                  	// #24
  4258fc:	ldr	x6, [x3]
  425900:	smull	x4, w2, w4
  425904:	add	x0, x6, x4
  425908:	ldr	w4, [x6, x4]
  42590c:	cmp	w1, w4
  425910:	b.cc	425934 <nftw@plt+0x22c44>  // b.lo, b.ul, b.last
  425914:	ldr	w4, [x3, #12]
  425918:	add	w5, w2, #0x1
  42591c:	cmp	w5, w4
  425920:	b.eq	425930 <nftw@plt+0x22c40>  // b.none
  425924:	ldr	w5, [x0, #24]
  425928:	cmp	w1, w5
  42592c:	b.cs	42593c <nftw@plt+0x22c4c>  // b.hs, b.nlast
  425930:	ret
  425934:	mov	w4, w2
  425938:	mov	w2, #0x0                   	// #0
  42593c:	mov	w0, #0x18                  	// #24
  425940:	sub	w5, w4, w2
  425944:	cmp	w5, #0x1
  425948:	b.ls	42596c <nftw@plt+0x22c7c>  // b.plast
  42594c:	add	w5, w2, w4
  425950:	lsr	w5, w5, #1
  425954:	umull	x7, w5, w0
  425958:	ldr	w7, [x6, x7]
  42595c:	cmp	w1, w7
  425960:	csel	w2, w2, w5, cc  // cc = lo, ul, last
  425964:	csel	w4, w5, w4, cc  // cc = lo, ul, last
  425968:	b	425940 <nftw@plt+0x22c50>
  42596c:	smaddl	x0, w2, w0, x6
  425970:	str	w2, [x3, #16]
  425974:	b	425930 <nftw@plt+0x22c40>
  425978:	mov	x0, #0x0                   	// #0
  42597c:	b	425930 <nftw@plt+0x22c40>
  425980:	stp	x29, x30, [sp, #-80]!
  425984:	mov	x29, sp
  425988:	stp	x19, x20, [sp, #16]
  42598c:	mov	x19, x0
  425990:	mov	w0, #0x6fffffff            	// #1879048191
  425994:	stp	x21, x22, [sp, #32]
  425998:	cmp	w1, w0
  42599c:	mov	w21, w1
  4259a0:	stp	x23, x24, [sp, #48]
  4259a4:	stp	x25, x26, [sp, #64]
  4259a8:	b.ls	425a74 <nftw@plt+0x22d84>  // b.plast
  4259ac:	ldp	w0, w20, [x19, #32]
  4259b0:	add	x25, x19, #0x24
  4259b4:	cmp	w0, w20
  4259b8:	b.ne	425a40 <nftw@plt+0x22d50>  // b.any
  4259bc:	add	x26, x19, #0x20
  4259c0:	cmp	w0, #0x0
  4259c4:	mov	w1, #0x80                  	// #128
  4259c8:	csel	w0, w0, w1, ne  // ne = any
  4259cc:	mov	w1, #0x6fffffff            	// #1879048191
  4259d0:	cmp	w21, w1
  4259d4:	lsl	w0, w0, #1
  4259d8:	b.ls	425a8c <nftw@plt+0x22d9c>  // b.plast
  4259dc:	ldr	x24, [x19, #24]
  4259e0:	mov	x22, #0x20                  	// #32
  4259e4:	mul	x0, x0, x22
  4259e8:	ldr	x1, [x19, #80]
  4259ec:	blr	x1
  4259f0:	udiv	x23, x0, x22
  4259f4:	mov	x0, x24
  4259f8:	ldr	x2, [x19, #72]
  4259fc:	and	x1, x23, #0xffffffff
  425a00:	mul	x1, x1, x22
  425a04:	blr	x2
  425a08:	mov	x24, x0
  425a0c:	sub	w2, w23, w20
  425a10:	mov	w0, w20
  425a14:	mov	w1, #0x0                   	// #0
  425a18:	mul	x2, x2, x22
  425a1c:	madd	x0, x0, x22, x24
  425a20:	bl	402840 <memset@plt>
  425a24:	mov	w0, #0x6fffffff            	// #1879048191
  425a28:	cmp	w21, w0
  425a2c:	b.ls	425a98 <nftw@plt+0x22da8>  // b.plast
  425a30:	str	x24, [x19, #24]
  425a34:	str	w23, [x26]
  425a38:	cmp	w21, w0
  425a3c:	b.ls	425aa0 <nftw@plt+0x22db0>  // b.plast
  425a40:	ubfiz	x0, x20, #5, #32
  425a44:	ldr	x20, [x19, #24]
  425a48:	add	x0, x20, x0
  425a4c:	ldr	w1, [x25]
  425a50:	ldp	x19, x20, [sp, #16]
  425a54:	add	w1, w1, #0x1
  425a58:	ldp	x23, x24, [sp, #48]
  425a5c:	str	w1, [x25]
  425a60:	ldp	x25, x26, [sp, #64]
  425a64:	str	w21, [x0]
  425a68:	ldp	x21, x22, [sp, #32]
  425a6c:	ldp	x29, x30, [sp], #80
  425a70:	ret
  425a74:	ldp	w0, w20, [x19, #8]
  425a78:	add	x25, x19, #0xc
  425a7c:	cmp	w0, w20
  425a80:	b.ne	425aa0 <nftw@plt+0x22db0>  // b.any
  425a84:	add	x26, x19, #0x8
  425a88:	b	4259c0 <nftw@plt+0x22cd0>
  425a8c:	mov	x22, #0x18                  	// #24
  425a90:	ldr	x24, [x19]
  425a94:	b	4259e4 <nftw@plt+0x22cf4>
  425a98:	str	x24, [x19]
  425a9c:	b	425a34 <nftw@plt+0x22d44>
  425aa0:	ldr	x0, [x19]
  425aa4:	mov	w1, #0x18                  	// #24
  425aa8:	umaddl	x0, w20, w1, x0
  425aac:	b	425a4c <nftw@plt+0x22d5c>
  425ab0:	ldr	x0, [x0, #88]
  425ab4:	cbz	x0, 425abc <nftw@plt+0x22dcc>
  425ab8:	b	43c390 <nftw@plt+0x396a0>
  425abc:	ret
  425ac0:	stp	x29, x30, [sp, #-48]!
  425ac4:	mov	x3, #0x0                   	// #0
  425ac8:	adrp	x2, 425000 <nftw@plt+0x22310>
  425acc:	mov	x29, sp
  425ad0:	stp	x19, x20, [sp, #16]
  425ad4:	mov	x19, x0
  425ad8:	add	x2, x2, #0x878
  425adc:	adrp	x1, 425000 <nftw@plt+0x22310>
  425ae0:	mov	x0, #0x64                  	// #100
  425ae4:	add	x1, x1, #0x85c
  425ae8:	mov	w20, #0x0                   	// #0
  425aec:	str	x21, [sp, #32]
  425af0:	bl	43c368 <nftw@plt+0x39678>
  425af4:	mov	w21, #0x18                  	// #24
  425af8:	str	x0, [x19, #88]
  425afc:	ldr	w0, [x19, #96]
  425b00:	cmp	w0, w20
  425b04:	b.ls	425b24 <nftw@plt+0x22e34>  // b.plast
  425b08:	ldr	x1, [x19, #104]
  425b0c:	mov	w2, #0x1                   	// #1
  425b10:	ldr	x0, [x19, #88]
  425b14:	umaddl	x1, w20, w21, x1
  425b18:	add	w20, w20, #0x1
  425b1c:	bl	43c7c8 <nftw@plt+0x39ad8>
  425b20:	b	425afc <nftw@plt+0x22e0c>
  425b24:	ldp	x19, x20, [sp, #16]
  425b28:	ldr	x21, [sp, #32]
  425b2c:	ldp	x29, x30, [sp], #48
  425b30:	ret
  425b34:	ldr	x0, [x0, #104]
  425b38:	and	w1, w1, #0x7fffffff
  425b3c:	mov	w2, #0x18                  	// #24
  425b40:	umaddl	x1, w1, w2, x0
  425b44:	ldr	x0, [x1, #16]
  425b48:	ret
  425b4c:	and	w1, w1, #0x7fffffff
  425b50:	mov	w2, #0x18                  	// #24
  425b54:	ldr	x0, [x0, #104]
  425b58:	umull	x1, w1, w2
  425b5c:	ldr	w0, [x0, x1]
  425b60:	ret
  425b64:	stp	x29, x30, [sp, #-32]!
  425b68:	mov	x2, #0x88                  	// #136
  425b6c:	mov	x29, sp
  425b70:	stp	x19, x20, [sp, #16]
  425b74:	mov	x19, x0
  425b78:	mov	w20, w1
  425b7c:	mov	w1, #0x0                   	// #0
  425b80:	bl	402840 <memset@plt>
  425b84:	adrp	x0, 43d000 <_obstack_free@@Base+0x1c>
  425b88:	add	x0, x0, #0x1dc
  425b8c:	str	x0, [x19, #72]
  425b90:	mov	x0, #0x100000001           	// #4294967297
  425b94:	str	x0, [x19, #56]
  425b98:	mov	x3, #0x0                   	// #0
  425b9c:	adrp	x2, 425000 <nftw@plt+0x22310>
  425ba0:	adrp	x1, 425000 <nftw@plt+0x22310>
  425ba4:	add	x2, x2, #0x878
  425ba8:	add	x1, x1, #0x85c
  425bac:	mov	x0, #0x64                  	// #100
  425bb0:	bl	43c368 <nftw@plt+0x39678>
  425bb4:	str	x0, [x19, #88]
  425bb8:	str	w20, [x19, #112]
  425bbc:	ldp	x19, x20, [sp, #16]
  425bc0:	ldp	x29, x30, [sp], #32
  425bc4:	ret
  425bc8:	ldr	w1, [x1, #20]
  425bcc:	b	4258cc <nftw@plt+0x22bdc>
  425bd0:	stp	x29, x30, [sp, #-48]!
  425bd4:	mov	x29, sp
  425bd8:	stp	x19, x20, [sp, #16]
  425bdc:	mov	x20, x0
  425be0:	stp	x21, x22, [sp, #32]
  425be4:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x19fa8>
  425be8:	bl	427f14 <nftw@plt+0x25224>
  425bec:	add	x21, x21, #0x56f
  425bf0:	mov	x19, x0
  425bf4:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  425bf8:	ldr	w0, [x19, #20]
  425bfc:	cbz	w0, 425c24 <nftw@plt+0x22f34>
  425c00:	ldr	x0, [x22, #1416]
  425c04:	mov	x1, x21
  425c08:	ldr	x2, [x19, #8]
  425c0c:	bl	402cb0 <fprintf@plt>
  425c10:	mov	x1, x19
  425c14:	mov	x0, x20
  425c18:	bl	425bc8 <nftw@plt+0x22ed8>
  425c1c:	mov	x19, x0
  425c20:	b	425bf8 <nftw@plt+0x22f08>
  425c24:	ldp	x19, x20, [sp, #16]
  425c28:	ldp	x21, x22, [sp, #32]
  425c2c:	ldp	x29, x30, [sp], #48
  425c30:	ret
  425c34:	stp	x29, x30, [sp, #-80]!
  425c38:	mov	x29, sp
  425c3c:	stp	x19, x20, [sp, #16]
  425c40:	mov	x19, x0
  425c44:	stp	x21, x22, [sp, #32]
  425c48:	mov	w22, w4
  425c4c:	ldr	w21, [x0, #56]
  425c50:	stp	x23, x24, [sp, #48]
  425c54:	mov	w0, #0x5fffffff            	// #1610612735
  425c58:	mov	w24, w1
  425c5c:	str	x25, [sp, #64]
  425c60:	mov	w23, w2
  425c64:	cmp	w21, w0
  425c68:	mov	x25, x3
  425c6c:	b.hi	425cd4 <nftw@plt+0x22fe4>  // b.pmore
  425c70:	ldr	w1, [x19, #120]
  425c74:	mov	w0, #0x1                   	// #1
  425c78:	lsl	w0, w0, w1
  425c7c:	add	w21, w0, w21
  425c80:	cbz	w1, 425c8c <nftw@plt+0x22f9c>
  425c84:	neg	w0, w0
  425c88:	and	w21, w21, w0
  425c8c:	cmp	w24, #0x1
  425c90:	b.ne	425cdc <nftw@plt+0x22fec>  // b.any
  425c94:	mov	x0, x19
  425c98:	bl	427f14 <nftw@plt+0x25224>
  425c9c:	ldr	w0, [x0, #20]
  425ca0:	cbnz	w0, 425cdc <nftw@plt+0x22fec>
  425ca4:	cbnz	x25, 425cdc <nftw@plt+0x22fec>
  425ca8:	ldr	w0, [x19, #48]
  425cac:	mov	x20, #0x0                   	// #0
  425cb0:	sub	w0, w0, #0x1
  425cb4:	str	w0, [x19, #48]
  425cb8:	mov	x0, x20
  425cbc:	ldp	x19, x20, [sp, #16]
  425cc0:	ldp	x21, x22, [sp, #32]
  425cc4:	ldp	x23, x24, [sp, #48]
  425cc8:	ldr	x25, [sp, #64]
  425ccc:	ldp	x29, x30, [sp], #80
  425cd0:	ret
  425cd4:	add	w21, w21, #0x1
  425cd8:	b	425c8c <nftw@plt+0x22f9c>
  425cdc:	mov	w0, #0x6fffffff            	// #1879048191
  425ce0:	cmp	w21, w0
  425ce4:	csel	w21, w21, wzr, ls  // ls = plast
  425ce8:	mov	x0, x19
  425cec:	mov	w1, w21
  425cf0:	bl	425980 <nftw@plt+0x22c90>
  425cf4:	strb	w24, [x0, #4]
  425cf8:	mov	x20, x0
  425cfc:	cmp	w24, #0x3
  425d00:	cbz	x25, 425d1c <nftw@plt+0x2302c>
  425d04:	ldrb	w0, [x25]
  425d08:	cbnz	w0, 425d1c <nftw@plt+0x2302c>
  425d0c:	b.ne	425de4 <nftw@plt+0x230f4>  // b.any
  425d10:	mov	w24, #0x2                   	// #2
  425d14:	mov	x0, #0x0                   	// #0
  425d18:	b	425d5c <nftw@plt+0x2306c>
  425d1c:	b.eq	425d10 <nftw@plt+0x23020>  // b.none
  425d20:	cmp	w24, #0x1
  425d24:	b.ne	425d14 <nftw@plt+0x23024>  // b.any
  425d28:	sub	x1, x20, #0x18
  425d2c:	mov	x0, x19
  425d30:	bl	425bc8 <nftw@plt+0x22ed8>
  425d34:	cbnz	x25, 425d5c <nftw@plt+0x2306c>
  425d38:	ldr	w4, [x0]
  425d3c:	ldr	w22, [x0, #24]
  425d40:	ldrb	w23, [x0, #5]
  425d44:	sub	w22, w22, w4
  425d48:	ldrb	w4, [x0, #6]
  425d4c:	ldr	x25, [x0, #8]
  425d50:	lsr	w22, w22, w4
  425d54:	ldr	w4, [x0, #16]
  425d58:	add	w22, w22, w4
  425d5c:	strb	w23, [x20, #5]
  425d60:	str	w22, [x20, #16]
  425d64:	str	x25, [x20, #8]
  425d68:	ldr	w2, [x19, #12]
  425d6c:	sub	w2, w2, #0x1
  425d70:	str	w2, [x19, #16]
  425d74:	strh	wzr, [x20, #6]
  425d78:	stp	w21, w21, [x19, #56]
  425d7c:	str	wzr, [x19, #64]
  425d80:	cbnz	w24, 425e0c <nftw@plt+0x2311c>
  425d84:	ldr	w21, [x19, #48]
  425d88:	cbz	w21, 425df0 <nftw@plt+0x23100>
  425d8c:	ldr	w0, [x20]
  425d90:	mov	w1, #0xffffffff            	// #-1
  425d94:	ldur	w2, [x20, #-24]
  425d98:	ldurb	w3, [x20, #-18]
  425d9c:	sub	w0, w0, #0x1
  425da0:	sub	w0, w0, w2
  425da4:	lsl	w1, w1, w3
  425da8:	and	w0, w0, w1
  425dac:	add	w0, w0, w2
  425db0:	str	w0, [x20, #20]
  425db4:	add	w21, w21, #0x1
  425db8:	ldrb	w0, [x19, #52]
  425dbc:	str	w21, [x19, #48]
  425dc0:	cbz	w0, 425cb8 <nftw@plt+0x22fc8>
  425dc4:	adrp	x19, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  425dc8:	ldr	x0, [x19, #1416]
  425dcc:	subs	w21, w21, #0x1
  425dd0:	b.eq	425df8 <nftw@plt+0x23108>  // b.none
  425dd4:	mov	x1, x0
  425dd8:	mov	w0, #0x2e                  	// #46
  425ddc:	bl	402740 <putc_unlocked@plt>
  425de0:	b	425dc8 <nftw@plt+0x230d8>
  425de4:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x19fa8>
  425de8:	add	x25, x25, #0x59b
  425dec:	b	425d20 <nftw@plt+0x23030>
  425df0:	mov	w0, #0x0                   	// #0
  425df4:	b	425db0 <nftw@plt+0x230c0>
  425df8:	ldr	x2, [x20, #8]
  425dfc:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  425e00:	add	x1, x1, #0x6ff
  425e04:	bl	402cb0 <fprintf@plt>
  425e08:	b	425cb8 <nftw@plt+0x22fc8>
  425e0c:	cmp	w24, #0x2
  425e10:	b.ne	425e20 <nftw@plt+0x23130>  // b.any
  425e14:	ldur	w0, [x20, #-4]
  425e18:	str	w0, [x20, #20]
  425e1c:	b	425cb8 <nftw@plt+0x22fc8>
  425e20:	cmp	w24, #0x1
  425e24:	b.ne	425cb8 <nftw@plt+0x22fc8>  // b.any
  425e28:	ldr	w1, [x19, #48]
  425e2c:	sub	w1, w1, #0x1
  425e30:	str	w1, [x19, #48]
  425e34:	ldr	w0, [x0, #20]
  425e38:	b	425e18 <nftw@plt+0x23128>
  425e3c:	ldr	x0, [x0, #24]
  425e40:	cmp	x0, #0x0
  425e44:	cset	w0, ne  // ne = any
  425e48:	ret
  425e4c:	stp	x29, x30, [sp, #-64]!
  425e50:	mov	x29, sp
  425e54:	stp	x19, x20, [sp, #16]
  425e58:	mov	w20, w3
  425e5c:	stp	x21, x22, [sp, #32]
  425e60:	mov	x21, x0
  425e64:	mov	w22, w2
  425e68:	str	x23, [sp, #48]
  425e6c:	mov	x23, x1
  425e70:	bl	412f84 <nftw@plt+0x10294>
  425e74:	sub	w1, w0, w20
  425e78:	mov	w0, #0x6fffffff            	// #1879048191
  425e7c:	cmp	w1, w0
  425e80:	b.ls	425ee4 <nftw@plt+0x231f4>  // b.plast
  425e84:	mov	x0, x21
  425e88:	bl	425980 <nftw@plt+0x22c90>
  425e8c:	mov	x19, x0
  425e90:	mov	x0, #0x0                   	// #0
  425e94:	ldr	x2, [x21, #72]
  425e98:	str	w20, [x19, #4]
  425e9c:	ubfiz	x20, x20, #3, #31
  425ea0:	str	x23, [x19, #8]
  425ea4:	mov	x1, x20
  425ea8:	blr	x2
  425eac:	str	x0, [x19, #16]
  425eb0:	str	w22, [x19, #24]
  425eb4:	mov	x2, x20
  425eb8:	mov	w1, #0x0                   	// #0
  425ebc:	bl	402840 <memset@plt>
  425ec0:	ldr	w0, [x21, #36]
  425ec4:	sub	w0, w0, #0x1
  425ec8:	str	w0, [x21, #40]
  425ecc:	mov	x0, x19
  425ed0:	ldp	x19, x20, [sp, #16]
  425ed4:	ldp	x21, x22, [sp, #32]
  425ed8:	ldr	x23, [sp, #48]
  425edc:	ldp	x29, x30, [sp], #64
  425ee0:	ret
  425ee4:	mov	x19, #0x0                   	// #0
  425ee8:	b	425ecc <nftw@plt+0x231dc>
  425eec:	ldr	x5, [x0, #16]
  425ef0:	lsl	w4, w1, #1
  425ef4:	ubfiz	x6, x1, #3, #31
  425ef8:	add	w4, w4, #0x1
  425efc:	str	w2, [x5, x6]
  425f00:	str	w3, [x5, x4, lsl #2]
  425f04:	ldr	w0, [x0]
  425f08:	add	w0, w1, w0
  425f0c:	ret
  425f10:	stp	x29, x30, [sp, #-96]!
  425f14:	mov	x29, sp
  425f18:	stp	x19, x20, [sp, #16]
  425f1c:	mov	x20, x0
  425f20:	stp	x21, x22, [sp, #32]
  425f24:	mov	w22, w1
  425f28:	stp	x23, x24, [sp, #48]
  425f2c:	stp	x25, x26, [sp, #64]
  425f30:	mov	w25, w2
  425f34:	str	x27, [sp, #80]
  425f38:	bl	427f14 <nftw@plt+0x25224>
  425f3c:	mov	x19, x0
  425f40:	ldrb	w0, [x0, #6]
  425f44:	ldp	w1, w4, [x20, #56]
  425f48:	ldr	w5, [x19]
  425f4c:	ldr	w24, [x19, #16]
  425f50:	sub	w5, w4, w5
  425f54:	ldrb	w27, [x19, #7]
  425f58:	lsr	w5, w5, w0
  425f5c:	add	w5, w5, w24
  425f60:	subs	w3, w22, w5
  425f64:	b.mi	426020 <nftw@plt+0x23330>  // b.first
  425f68:	cmp	w3, #0xa
  425f6c:	b.le	425f7c <nftw@plt+0x2328c>
  425f70:	mul	w2, w3, w0
  425f74:	cmp	w2, #0x3e8
  425f78:	b.gt	426020 <nftw@plt+0x23330>
  425f7c:	sub	w6, w0, w27
  425f80:	mov	w2, #0x1                   	// #1
  425f84:	lsl	w2, w2, w6
  425f88:	cmp	w2, w25
  425f8c:	b.ls	426020 <nftw@plt+0x23330>  // b.plast
  425f90:	cmp	w25, #0x50
  425f94:	ccmp	w6, #0x9, #0x4, ls  // ls = plast
  425f98:	b.gt	426020 <nftw@plt+0x23330>
  425f9c:	mov	w2, #0x50000000            	// #1342177280
  425fa0:	cmp	w1, w2
  425fa4:	b.ls	425fec <nftw@plt+0x232fc>  // b.plast
  425fa8:	cbnz	w27, 426020 <nftw@plt+0x23330>
  425fac:	mov	w2, #0x60000000            	// #1610612736
  425fb0:	ldr	w6, [x20, #64]
  425fb4:	cmp	w1, w2
  425fb8:	b.ls	425fec <nftw@plt+0x232fc>  // b.plast
  425fbc:	mov	w2, #0x6fffffff            	// #1879048191
  425fc0:	cmp	w1, w2
  425fc4:	cbnz	w6, 4260fc <nftw@plt+0x2340c>
  425fc8:	b.ls	425fec <nftw@plt+0x232fc>  // b.plast
  425fcc:	mov	w0, #0x0                   	// #0
  425fd0:	ldp	x19, x20, [sp, #16]
  425fd4:	ldp	x21, x22, [sp, #32]
  425fd8:	ldp	x23, x24, [sp, #48]
  425fdc:	ldp	x25, x26, [sp, #64]
  425fe0:	ldr	x27, [sp, #80]
  425fe4:	ldp	x29, x30, [sp], #96
  425fe8:	ret
  425fec:	ldr	w26, [x20, #64]
  425ff0:	lsl	w3, w3, w0
  425ff4:	add	w0, w3, w4
  425ff8:	mov	w1, #0x6fffffff            	// #1879048191
  425ffc:	cmp	w0, w1
  426000:	b.hi	425fcc <nftw@plt+0x232dc>  // b.pmore
  426004:	ldr	w1, [x20, #56]
  426008:	str	w0, [x20, #60]
  42600c:	cmp	w1, w0
  426010:	b.cs	426018 <nftw@plt+0x23328>  // b.hs, b.nlast
  426014:	str	w0, [x20, #56]
  426018:	str	w26, [x20, #64]
  42601c:	b	425fd0 <nftw@plt+0x232e0>
  426020:	cmp	w25, #0x1, lsl #12
  426024:	mov	w0, #0x60000000            	// #1610612736
  426028:	ccmp	w1, w0, #0x2, ls  // ls = plast
  42602c:	b.ls	4260c0 <nftw@plt+0x233d0>  // b.plast
  426030:	mov	w0, #0x6fffffff            	// #1879048191
  426034:	cmp	w1, w0
  426038:	b.hi	425fcc <nftw@plt+0x232dc>  // b.pmore
  42603c:	mov	w23, #0x0                   	// #0
  426040:	mov	w21, #0x0                   	// #0
  426044:	mov	w26, #0x0                   	// #0
  426048:	tbnz	w3, #31, 426084 <nftw@plt+0x23394>
  42604c:	cmp	w24, w5
  426050:	b.ne	426084 <nftw@plt+0x23394>  // b.any
  426054:	mov	x0, x19
  426058:	bl	427f2c <nftw@plt+0x2523c>
  42605c:	sub	w1, w21, w23
  426060:	lsr	w0, w0, w1
  426064:	cbnz	w0, 426084 <nftw@plt+0x23394>
  426068:	sub	w24, w22, w24
  42606c:	mov	w0, #0x20                  	// #32
  426070:	sub	w0, w0, w21
  426074:	lsr	x24, x24, x0
  426078:	cbnz	x24, 426084 <nftw@plt+0x23394>
  42607c:	cmp	w27, w23
  426080:	b.le	4260a0 <nftw@plt+0x233b0>
  426084:	ldrb	w2, [x19, #5]
  426088:	mov	w4, w22
  42608c:	ldr	x3, [x19, #8]
  426090:	mov	x0, x20
  426094:	mov	w1, #0x2                   	// #2
  426098:	bl	425c34 <nftw@plt+0x22f44>
  42609c:	mov	x19, x0
  4260a0:	ldr	w2, [x19, #16]
  4260a4:	ldr	w0, [x19]
  4260a8:	sub	w2, w22, w2
  4260ac:	strb	w21, [x19, #6]
  4260b0:	strb	w23, [x19, #7]
  4260b4:	lsl	w2, w2, w21
  4260b8:	add	w0, w2, w0
  4260bc:	b	425ff8 <nftw@plt+0x23308>
  4260c0:	mov	w0, #0x50000000            	// #1342177280
  4260c4:	cmp	w1, w0
  4260c8:	b.hi	4260ec <nftw@plt+0x233fc>  // b.pmore
  4260cc:	ldr	w23, [x20, #120]
  4260d0:	mov	w21, #0x7                   	// #7
  4260d4:	mov	w0, #0x1                   	// #1
  4260d8:	lsl	w26, w0, w21
  4260dc:	cmp	w26, w25
  4260e0:	b.hi	4260f4 <nftw@plt+0x23404>  // b.pmore
  4260e4:	add	w21, w21, #0x1
  4260e8:	b	4260d8 <nftw@plt+0x233e8>
  4260ec:	mov	w23, #0x0                   	// #0
  4260f0:	b	4260d0 <nftw@plt+0x233e0>
  4260f4:	add	w21, w21, w23
  4260f8:	b	426048 <nftw@plt+0x23358>
  4260fc:	b.hi	425fcc <nftw@plt+0x232dc>  // b.pmore
  426100:	mov	w23, #0x0                   	// #0
  426104:	mov	w21, #0x0                   	// #0
  426108:	mov	w26, #0x0                   	// #0
  42610c:	b	42604c <nftw@plt+0x2335c>
  426110:	stp	x29, x30, [sp, #-48]!
  426114:	mov	x29, sp
  426118:	stp	x19, x20, [sp, #16]
  42611c:	mov	x20, x0
  426120:	ldr	w19, [x0, #60]
  426124:	str	x21, [sp, #32]
  426128:	mov	w21, w1
  42612c:	ldr	w1, [x0, #64]
  426130:	cmp	w1, w21
  426134:	b.hi	426184 <nftw@plt+0x23494>  // b.pmore
  426138:	cmp	w21, #0x1, lsl #12
  42613c:	mov	w1, #0x60000000            	// #1610612736
  426140:	ccmp	w19, w1, #0x2, ls  // ls = plast
  426144:	b.hi	4261a8 <nftw@plt+0x234b8>  // b.pmore
  426148:	bl	427f14 <nftw@plt+0x25224>
  42614c:	ldr	w1, [x0]
  426150:	add	w2, w21, #0x32
  426154:	sub	w19, w19, w1
  426158:	ldrb	w1, [x0, #6]
  42615c:	lsr	w19, w19, w1
  426160:	ldr	w1, [x0, #16]
  426164:	mov	x0, x20
  426168:	add	w1, w19, w1
  42616c:	bl	425f10 <nftw@plt+0x23220>
  426170:	mov	w19, w0
  426174:	mov	x0, x20
  426178:	bl	427f14 <nftw@plt+0x25224>
  42617c:	ldrb	w0, [x0, #6]
  426180:	cbz	w0, 4261a8 <nftw@plt+0x234b8>
  426184:	mov	x0, x20
  426188:	bl	427f14 <nftw@plt+0x25224>
  42618c:	ldrb	w1, [x0, #7]
  426190:	ldr	w0, [x20, #56]
  426194:	lsl	w21, w21, w1
  426198:	add	w19, w19, w21
  42619c:	cmp	w0, w19
  4261a0:	b.hi	4261a8 <nftw@plt+0x234b8>  // b.pmore
  4261a4:	str	w19, [x20, #56]
  4261a8:	mov	w0, w19
  4261ac:	ldp	x19, x20, [sp, #16]
  4261b0:	ldr	x21, [sp, #32]
  4261b4:	ldp	x29, x30, [sp], #48
  4261b8:	ret
  4261bc:	stp	x29, x30, [sp, #-32]!
  4261c0:	mov	x29, sp
  4261c4:	stp	x19, x20, [sp, #16]
  4261c8:	mov	x20, x0
  4261cc:	ldr	w19, [x1, #16]
  4261d0:	ldrb	w0, [x1, #6]
  4261d4:	sub	w19, w2, w19
  4261d8:	ldr	w2, [x1]
  4261dc:	lsl	w19, w19, w0
  4261e0:	add	w19, w19, w2
  4261e4:	mov	w2, #0x60000000            	// #1610612736
  4261e8:	cmp	w19, w2
  4261ec:	b.hi	42620c <nftw@plt+0x2351c>  // b.pmore
  4261f0:	mov	w2, #0x1                   	// #1
  4261f4:	lsl	w2, w2, w0
  4261f8:	ldrb	w0, [x1, #7]
  4261fc:	sub	w2, w2, #0x1
  426200:	and	w3, w2, w3
  426204:	lsl	w3, w3, w0
  426208:	add	w19, w19, w3
  42620c:	mov	x0, x20
  426210:	bl	412f84 <nftw@plt+0x10294>
  426214:	cmp	w19, w0
  426218:	b.cc	426220 <nftw@plt+0x23530>  // b.lo, b.ul, b.last
  42621c:	sub	w19, w0, #0x1
  426220:	ldr	w0, [x20, #56]
  426224:	cmp	w0, w19
  426228:	b.cs	426230 <nftw@plt+0x23540>  // b.hs, b.nlast
  42622c:	str	w19, [x20, #56]
  426230:	mov	w0, w19
  426234:	ldp	x19, x20, [sp, #16]
  426238:	ldp	x29, x30, [sp], #32
  42623c:	ret
  426240:	cbz	x0, 426258 <nftw@plt+0x23568>
  426244:	ldr	w1, [x0]
  426248:	mov	w0, #0x6fffffff            	// #1879048191
  42624c:	cmp	w1, w0
  426250:	cset	w0, hi  // hi = pmore
  426254:	ret
  426258:	mov	w0, #0x0                   	// #0
  42625c:	b	426254 <nftw@plt+0x23564>
  426260:	mov	x3, x1
  426264:	mov	w1, w2
  426268:	tbz	w2, #31, 426294 <nftw@plt+0x235a4>
  42626c:	stp	x29, x30, [sp, #-16]!
  426270:	mov	x29, sp
  426274:	bl	425b4c <nftw@plt+0x22e5c>
  426278:	ldr	w2, [x3]
  42627c:	ldp	x29, x30, [sp], #16
  426280:	sub	w2, w0, w2
  426284:	ldr	x0, [x3, #16]
  426288:	ubfiz	x2, x2, #3, #31
  42628c:	ldr	w0, [x0, x2]
  426290:	ret
  426294:	ldr	w2, [x3]
  426298:	ldr	x0, [x3, #16]
  42629c:	sub	w2, w1, w2
  4262a0:	ubfiz	x2, x2, #3, #31
  4262a4:	ldr	w0, [x0, x2]
  4262a8:	ret
  4262ac:	ldr	x0, [x0, #8]
  4262b0:	ldr	x0, [x0]
  4262b4:	ret
  4262b8:	tbz	w1, #31, 4262d0 <nftw@plt+0x235e0>
  4262bc:	and	w1, w1, #0x7fffffff
  4262c0:	mov	w2, #0x18                  	// #24
  4262c4:	ldr	x0, [x0, #104]
  4262c8:	umull	x1, w1, w2
  4262cc:	ldr	w1, [x0, x1]
  4262d0:	mov	w0, #0x90000000            	// #-1879048192
  4262d4:	add	w1, w1, w0
  4262d8:	mov	w0, #0xfffffff             	// #268435455
  4262dc:	cmp	w1, w0
  4262e0:	cset	w0, ls  // ls = plast
  4262e4:	ret
  4262e8:	stp	x29, x30, [sp, #-16]!
  4262ec:	mov	x4, x0
  4262f0:	mov	w3, w1
  4262f4:	mov	x29, sp
  4262f8:	tbz	w1, #31, 426310 <nftw@plt+0x23620>
  4262fc:	and	w3, w1, #0x7fffffff
  426300:	mov	w1, #0x18                  	// #24
  426304:	ldr	x0, [x0, #104]
  426308:	umull	x3, w3, w1
  42630c:	ldr	w3, [x0, x3]
  426310:	mov	w1, w3
  426314:	mov	x0, x4
  426318:	bl	4262b8 <nftw@plt+0x235c8>
  42631c:	tst	w0, #0xff
  426320:	b.eq	4263c4 <nftw@plt+0x236d4>  // b.none
  426324:	tbz	w3, #31, 42639c <nftw@plt+0x236ac>
  426328:	and	w3, w3, #0x7fffffff
  42632c:	mov	w1, #0x18                  	// #24
  426330:	ldr	x0, [x4, #104]
  426334:	umull	x3, w3, w1
  426338:	ldr	w3, [x0, x3]
  42633c:	ldp	w1, w2, [x4, #36]
  426340:	ldr	x5, [x4, #24]
  426344:	sbfiz	x6, x2, #5, #32
  426348:	add	x0, x5, x6
  42634c:	ldr	w6, [x5, x6]
  426350:	cmp	w6, w3
  426354:	b.hi	426370 <nftw@plt+0x23680>  // b.pmore
  426358:	cbz	w2, 4263bc <nftw@plt+0x236cc>
  42635c:	ldur	w1, [x0, #-32]
  426360:	cmp	w1, w3
  426364:	b.hi	4263bc <nftw@plt+0x236cc>  // b.pmore
  426368:	sub	w1, w2, #0x1
  42636c:	mov	w2, #0x0                   	// #0
  426370:	cmp	w1, w2
  426374:	b.ls	4263b0 <nftw@plt+0x236c0>  // b.plast
  426378:	add	w0, w1, w2
  42637c:	lsr	w6, w0, #1
  426380:	lsr	w0, w0, #1
  426384:	lsl	x0, x0, #5
  426388:	ldr	w0, [x5, x0]
  42638c:	cmp	w0, w3
  426390:	b.ls	4263a8 <nftw@plt+0x236b8>  // b.plast
  426394:	add	w2, w6, #0x1
  426398:	b	426370 <nftw@plt+0x23680>
  42639c:	cbnz	x4, 42633c <nftw@plt+0x2364c>
  4263a0:	mov	x0, #0x0                   	// #0
  4263a4:	b	4263bc <nftw@plt+0x236cc>
  4263a8:	mov	w1, w6
  4263ac:	b	426370 <nftw@plt+0x23680>
  4263b0:	str	w1, [x4, #40]
  4263b4:	sbfiz	x1, x1, #5, #32
  4263b8:	add	x0, x5, x1
  4263bc:	ldp	x29, x30, [sp], #16
  4263c0:	ret
  4263c4:	ldp	x29, x30, [sp], #16
  4263c8:	mov	w1, w3
  4263cc:	mov	x0, x4
  4263d0:	b	4258cc <nftw@plt+0x22bdc>
  4263d4:	stp	x29, x30, [sp, #-96]!
  4263d8:	mov	x29, sp
  4263dc:	stp	x19, x20, [sp, #16]
  4263e0:	mov	x19, x0
  4263e4:	mov	w20, w1
  4263e8:	stp	x21, x22, [sp, #32]
  4263ec:	mov	x22, x2
  4263f0:	str	x23, [sp, #48]
  4263f4:	mov	x23, x3
  4263f8:	tbz	w1, #31, 426410 <nftw@plt+0x23720>
  4263fc:	and	w20, w1, #0x7fffffff
  426400:	mov	w1, #0x18                  	// #24
  426404:	ldr	x0, [x0, #104]
  426408:	umull	x20, w20, w1
  42640c:	ldr	w20, [x0, x20]
  426410:	cmp	w20, #0x0
  426414:	ccmp	x23, #0x0, #0x0, eq  // eq = none
  426418:	b.eq	4265bc <nftw@plt+0x238cc>  // b.none
  42641c:	lsr	x21, x22, #32
  426420:	mov	w0, w21
  426424:	cbnz	x23, 4264c8 <nftw@plt+0x237d8>
  426428:	cmp	w20, w22
  42642c:	b.ne	4264bc <nftw@plt+0x237cc>  // b.any
  426430:	cmp	w21, w20
  426434:	b.cc	4264bc <nftw@plt+0x237cc>  // b.lo, b.ul, b.last
  426438:	cmp	w20, #0x1
  42643c:	b.ls	4264a0 <nftw@plt+0x237b0>  // b.plast
  426440:	mov	w0, #0x4fffffff            	// #1342177279
  426444:	cmp	w20, w0
  426448:	b.hi	4265c4 <nftw@plt+0x238d4>  // b.pmore
  42644c:	mov	x0, x19
  426450:	bl	412f84 <nftw@plt+0x10294>
  426454:	cmp	w20, w0
  426458:	b.cs	4265c4 <nftw@plt+0x238d4>  // b.hs, b.nlast
  42645c:	cmp	w21, w0
  426460:	b.cs	4265c4 <nftw@plt+0x238d4>  // b.hs, b.nlast
  426464:	mov	w1, w20
  426468:	mov	x0, x19
  42646c:	bl	4262e8 <nftw@plt+0x235f8>
  426470:	ldrb	w2, [x0, #7]
  426474:	sub	w0, w21, w20
  426478:	mov	w1, #0x1                   	// #1
  42647c:	lsr	w0, w0, w2
  426480:	lsl	w1, w1, w2
  426484:	cmp	w1, w0
  426488:	b.ls	4265c4 <nftw@plt+0x238d4>  // b.plast
  42648c:	ldr	w1, [x19, #124]
  426490:	orr	w0, w20, w0
  426494:	add	w1, w1, #0x1
  426498:	str	w1, [x19, #124]
  42649c:	b	4264a8 <nftw@plt+0x237b8>
  4264a0:	cmp	w21, w20
  4264a4:	b.ne	4264bc <nftw@plt+0x237cc>  // b.any
  4264a8:	ldp	x19, x20, [sp, #16]
  4264ac:	ldp	x21, x22, [sp, #32]
  4264b0:	ldr	x23, [sp, #48]
  4264b4:	ldp	x29, x30, [sp], #96
  4264b8:	ret
  4264bc:	ldr	w0, [x19, #128]
  4264c0:	add	w0, w0, #0x1
  4264c4:	str	w0, [x19, #128]
  4264c8:	ldr	x0, [x19, #88]
  4264cc:	add	x1, sp, #0x48
  4264d0:	mov	w2, #0x1                   	// #1
  4264d4:	stp	w20, w22, [sp, #72]
  4264d8:	str	w21, [sp, #80]
  4264dc:	str	x23, [sp, #88]
  4264e0:	bl	43c7c8 <nftw@plt+0x39ad8>
  4264e4:	mov	x20, x0
  4264e8:	ldr	x0, [x0]
  4264ec:	cbnz	x0, 426598 <nftw@plt+0x238a8>
  4264f0:	ldp	w0, w1, [x19, #96]
  4264f4:	cmp	w0, w1
  4264f8:	b.cc	426560 <nftw@plt+0x23870>  // b.lo, b.ul, b.last
  4264fc:	ldr	x2, [x19, #72]
  426500:	cbnz	x2, 42650c <nftw@plt+0x2381c>
  426504:	adrp	x2, 43d000 <_obstack_free@@Base+0x1c>
  426508:	add	x2, x2, #0x1dc
  42650c:	cmp	w1, #0x0
  426510:	lsl	w0, w1, #1
  426514:	mov	w1, #0x80                  	// #128
  426518:	csel	w0, w0, w1, ne  // ne = any
  42651c:	mov	w1, #0x18                  	// #24
  426520:	str	w0, [x19, #100]
  426524:	ldr	x21, [x19, #104]
  426528:	umull	x1, w0, w1
  42652c:	mov	x0, x21
  426530:	blr	x2
  426534:	sub	x1, x0, x21
  426538:	str	x1, [sp, #64]
  42653c:	str	x0, [x19, #104]
  426540:	ldr	w0, [x19, #100]
  426544:	cmp	w0, #0x80
  426548:	b.ls	426560 <nftw@plt+0x23870>  // b.plast
  42654c:	ldr	x0, [x19, #88]
  426550:	adrp	x1, 425000 <nftw@plt+0x22310>
  426554:	add	x2, sp, #0x40
  426558:	add	x1, x1, #0x8b4
  42655c:	bl	43c964 <nftw@plt+0x39c74>
  426560:	ldr	w2, [x19, #96]
  426564:	mov	w0, #0x18                  	// #24
  426568:	umull	x1, w2, w0
  42656c:	add	w2, w2, #0x1
  426570:	ldr	x0, [x19, #104]
  426574:	add	x0, x0, x1
  426578:	str	x0, [x20]
  42657c:	str	w2, [x19, #96]
  426580:	ldr	x0, [x19, #104]
  426584:	ldp	x2, x3, [sp, #72]
  426588:	add	x0, x0, x1
  42658c:	stp	x2, x3, [x0]
  426590:	ldr	x1, [sp, #88]
  426594:	str	x1, [x0, #16]
  426598:	ldr	x0, [x20]
  42659c:	ldr	x1, [x19, #104]
  4265a0:	sub	x0, x0, x1
  4265a4:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4265a8:	movk	x1, #0xaaab
  4265ac:	asr	x0, x0, #3
  4265b0:	mul	x0, x0, x1
  4265b4:	orr	w0, w0, #0x80000000
  4265b8:	b	4264a8 <nftw@plt+0x237b8>
  4265bc:	mov	w0, #0x0                   	// #0
  4265c0:	b	4264a8 <nftw@plt+0x237b8>
  4265c4:	cmp	w21, w22
  4265c8:	b.ne	4264bc <nftw@plt+0x237cc>  // b.any
  4265cc:	mov	w0, w21
  4265d0:	b	4264a8 <nftw@plt+0x237b8>
  4265d4:	stp	x29, x30, [sp, #-32]!
  4265d8:	mov	x29, sp
  4265dc:	stp	x19, x20, [sp, #16]
  4265e0:	mov	x20, x0
  4265e4:	mov	w19, w1
  4265e8:	tbz	w1, #31, 42660c <nftw@plt+0x2391c>
  4265ec:	and	w19, w1, #0x7fffffff
  4265f0:	mov	w0, #0x18                  	// #24
  4265f4:	ldr	x1, [x20, #104]
  4265f8:	umaddl	x19, w19, w0, x1
  4265fc:	ldur	x0, [x19, #4]
  426600:	ldp	x19, x20, [sp, #16]
  426604:	ldp	x29, x30, [sp], #32
  426608:	ret
  42660c:	cmp	w1, #0x1
  426610:	b.ls	426668 <nftw@plt+0x23978>  // b.plast
  426614:	bl	412f84 <nftw@plt+0x10294>
  426618:	cmp	w0, w19
  42661c:	b.ls	426668 <nftw@plt+0x23978>  // b.plast
  426620:	mov	w0, #0x50000000            	// #1342177280
  426624:	cmp	w19, w0
  426628:	b.hi	426668 <nftw@plt+0x23978>  // b.pmore
  42662c:	mov	w1, w19
  426630:	mov	x0, x20
  426634:	bl	4262e8 <nftw@plt+0x235f8>
  426638:	ldrb	w3, [x0, #7]
  42663c:	mov	w1, #0x1                   	// #1
  426640:	mov	x0, #0x0                   	// #0
  426644:	lsl	w1, w1, w3
  426648:	sub	w1, w1, #0x1
  42664c:	and	w2, w1, w19
  426650:	bic	w19, w19, w1
  426654:	lsl	w2, w2, w3
  426658:	bfxil	x0, x19, #0, #32
  42665c:	add	w19, w2, w19
  426660:	bfi	x0, x19, #32, #32
  426664:	b	426600 <nftw@plt+0x23910>
  426668:	mov	x0, #0x0                   	// #0
  42666c:	bfxil	x0, x19, #0, #32
  426670:	b	426660 <nftw@plt+0x23970>
  426674:	tbnz	w1, #31, 4266a8 <nftw@plt+0x239b8>
  426678:	mov	w8, w1
  42667c:	stp	x29, x30, [sp, #-16]!
  426680:	mov	x29, sp
  426684:	bl	4262e8 <nftw@plt+0x235f8>
  426688:	cbz	x0, 4266b0 <nftw@plt+0x239c0>
  42668c:	ldrb	w1, [x0, #7]
  426690:	mov	w0, #0xffffffff            	// #-1
  426694:	lsl	w0, w0, w1
  426698:	bics	wzr, w8, w0
  42669c:	cset	w0, eq  // eq = none
  4266a0:	ldp	x29, x30, [sp], #16
  4266a4:	ret
  4266a8:	mov	w0, #0x0                   	// #0
  4266ac:	ret
  4266b0:	mov	w0, #0x1                   	// #1
  4266b4:	b	4266a0 <nftw@plt+0x239b0>
  4266b8:	stp	x29, x30, [sp, #-32]!
  4266bc:	mov	x29, sp
  4266c0:	stp	x19, x20, [sp, #16]
  4266c4:	mov	x20, x0
  4266c8:	mov	w19, w1
  4266cc:	tbz	w1, #31, 4266e4 <nftw@plt+0x239f4>
  4266d0:	and	w19, w1, #0x7fffffff
  4266d4:	mov	w1, #0x18                  	// #24
  4266d8:	ldr	x0, [x0, #104]
  4266dc:	umull	x19, w19, w1
  4266e0:	ldr	w19, [x0, x19]
  4266e4:	mov	x0, x20
  4266e8:	bl	412f84 <nftw@plt+0x10294>
  4266ec:	cmp	w0, w19
  4266f0:	b.ls	426718 <nftw@plt+0x23a28>  // b.plast
  4266f4:	cmp	w19, #0x1
  4266f8:	b.ls	426718 <nftw@plt+0x23a28>  // b.plast
  4266fc:	mov	w1, w19
  426700:	mov	x0, x20
  426704:	bl	4262e8 <nftw@plt+0x235f8>
  426708:	ldrb	w1, [x0, #7]
  42670c:	mov	w0, #0xffffffff            	// #-1
  426710:	lsl	w0, w0, w1
  426714:	and	w19, w19, w0
  426718:	mov	w0, w19
  42671c:	ldp	x19, x20, [sp, #16]
  426720:	ldp	x29, x30, [sp], #32
  426724:	ret
  426728:	stp	x29, x30, [sp, #-16]!
  42672c:	mov	x10, x0
  426730:	mov	x9, x2
  426734:	mov	x29, sp
  426738:	tbz	w1, #31, 426750 <nftw@plt+0x23a60>
  42673c:	and	w1, w1, #0x7fffffff
  426740:	mov	w0, #0x18                  	// #24
  426744:	umull	x1, w1, w0
  426748:	ldr	x0, [x10, #104]
  42674c:	ldr	w1, [x0, x1]
  426750:	mov	w8, w1
  426754:	mov	w1, w8
  426758:	mov	x0, x10
  42675c:	bl	4262e8 <nftw@plt+0x235f8>
  426760:	mov	x2, x0
  426764:	bl	426240 <nftw@plt+0x23550>
  426768:	tst	w0, #0xff
  42676c:	b.eq	426778 <nftw@plt+0x23a88>  // b.none
  426770:	ldr	w8, [x2, #24]
  426774:	b	426754 <nftw@plt+0x23a64>
  426778:	cbz	x9, 426780 <nftw@plt+0x23a90>
  42677c:	str	x2, [x9]
  426780:	mov	w0, w8
  426784:	ldp	x29, x30, [sp], #16
  426788:	ret
  42678c:	stp	x29, x30, [sp, #-32]!
  426790:	mov	x29, sp
  426794:	str	xzr, [sp, #24]
  426798:	tbz	w1, #31, 4267b0 <nftw@plt+0x23ac0>
  42679c:	and	w1, w1, #0x7fffffff
  4267a0:	mov	w2, #0x18                  	// #24
  4267a4:	umull	x1, w1, w2
  4267a8:	ldr	x2, [x0, #104]
  4267ac:	ldr	w1, [x2, x1]
  4267b0:	cmp	w1, #0x1
  4267b4:	b.ls	4267e4 <nftw@plt+0x23af4>  // b.plast
  4267b8:	add	x2, sp, #0x18
  4267bc:	bl	426728 <nftw@plt+0x23a38>
  4267c0:	ldr	x1, [sp, #24]
  4267c4:	ldr	w2, [x1]
  4267c8:	sub	w0, w0, w2
  4267cc:	ldrb	w2, [x1, #6]
  4267d0:	ldr	w1, [x1, #16]
  4267d4:	lsr	w0, w0, w2
  4267d8:	add	w0, w0, w1
  4267dc:	ldp	x29, x30, [sp], #32
  4267e0:	ret
  4267e4:	mov	w0, #0x0                   	// #0
  4267e8:	b	4267dc <nftw@plt+0x23aec>
  4267ec:	stp	x29, x30, [sp, #-32]!
  4267f0:	mov	x29, sp
  4267f4:	str	xzr, [sp, #24]
  4267f8:	tbz	w1, #31, 426810 <nftw@plt+0x23b20>
  4267fc:	and	w1, w1, #0x7fffffff
  426800:	mov	w2, #0x18                  	// #24
  426804:	umull	x1, w1, w2
  426808:	ldr	x2, [x0, #104]
  42680c:	ldr	w1, [x2, x1]
  426810:	cmp	w1, #0x1
  426814:	b.ls	426830 <nftw@plt+0x23b40>  // b.plast
  426818:	add	x2, sp, #0x18
  42681c:	bl	426728 <nftw@plt+0x23a38>
  426820:	ldr	x0, [sp, #24]
  426824:	ldr	x0, [x0, #8]
  426828:	ldp	x29, x30, [sp], #32
  42682c:	ret
  426830:	mov	x0, #0x0                   	// #0
  426834:	b	426828 <nftw@plt+0x23b38>
  426838:	mov	x9, x0
  42683c:	mov	w8, w1
  426840:	tbz	w1, #31, 426858 <nftw@plt+0x23b68>
  426844:	and	w8, w1, #0x7fffffff
  426848:	mov	w1, #0x18                  	// #24
  42684c:	ldr	x0, [x0, #104]
  426850:	umull	x8, w8, w1
  426854:	ldr	w8, [x0, x8]
  426858:	cmp	w8, #0x1
  42685c:	b.ls	4268c0 <nftw@plt+0x23bd0>  // b.plast
  426860:	stp	x29, x30, [sp, #-16]!
  426864:	mov	x29, sp
  426868:	b	42688c <nftw@plt+0x23b9c>
  42686c:	mov	w2, w8
  426870:	mov	x1, x4
  426874:	mov	x0, x9
  426878:	bl	426260 <nftw@plt+0x23570>
  42687c:	mov	w8, w0
  426880:	cmp	w0, #0x1
  426884:	b.hi	42688c <nftw@plt+0x23b9c>  // b.pmore
  426888:	ldr	w8, [x4, #24]
  42688c:	mov	w1, w8
  426890:	mov	x0, x9
  426894:	bl	4262e8 <nftw@plt+0x235f8>
  426898:	mov	x4, x0
  42689c:	cbz	x0, 4268b8 <nftw@plt+0x23bc8>
  4268a0:	bl	426240 <nftw@plt+0x23550>
  4268a4:	tst	w0, #0xff
  4268a8:	b.ne	42686c <nftw@plt+0x23b7c>  // b.any
  4268ac:	ldrb	w0, [x4, #5]
  4268b0:	ldp	x29, x30, [sp], #16
  4268b4:	ret
  4268b8:	mov	w0, #0x0                   	// #0
  4268bc:	b	4268b0 <nftw@plt+0x23bc0>
  4268c0:	mov	w0, #0x0                   	// #0
  4268c4:	ret
  4268c8:	mov	x11, x0
  4268cc:	mov	w8, w1
  4268d0:	mov	x10, x3
  4268d4:	tbz	w1, #31, 426904 <nftw@plt+0x23c14>
  4268d8:	and	w0, w1, #0x7fffffff
  4268dc:	mov	w1, #0x18                  	// #24
  4268e0:	umull	x0, w0, w1
  4268e4:	ldr	x1, [x11, #104]
  4268e8:	ldr	w0, [x1, x0]
  4268ec:	cmp	w0, #0x1
  4268f0:	b.hi	42690c <nftw@plt+0x23c1c>  // b.pmore
  4268f4:	cbz	x10, 4268fc <nftw@plt+0x23c0c>
  4268f8:	str	xzr, [x10]
  4268fc:	mov	w0, w8
  426900:	ret
  426904:	mov	w0, w1
  426908:	b	4268ec <nftw@plt+0x23bfc>
  42690c:	stp	x29, x30, [sp, #-16]!
  426910:	cmp	w2, #0x1
  426914:	mov	x29, sp
  426918:	b.ne	426950 <nftw@plt+0x23c60>  // b.any
  42691c:	mov	w9, #0x6fffffff            	// #1879048191
  426920:	mov	w1, w8
  426924:	mov	x0, x11
  426928:	bl	4262e8 <nftw@plt+0x235f8>
  42692c:	mov	x1, x0
  426930:	cbz	x0, 426940 <nftw@plt+0x23c50>
  426934:	ldr	w0, [x0]
  426938:	cmp	w0, w9
  42693c:	b.hi	4269b0 <nftw@plt+0x23cc0>  // b.pmore
  426940:	cbnz	x10, 4269c4 <nftw@plt+0x23cd4>
  426944:	mov	w0, w8
  426948:	ldp	x29, x30, [sp], #16
  42694c:	ret
  426950:	cmp	w2, #0x2
  426954:	b.ne	426998 <nftw@plt+0x23ca8>  // b.any
  426958:	mov	w12, #0x6fffffff            	// #1879048191
  42695c:	tbz	w8, #31, 4269cc <nftw@plt+0x23cdc>
  426960:	mov	w1, w8
  426964:	mov	x0, x11
  426968:	bl	425b4c <nftw@plt+0x22e5c>
  42696c:	mov	w9, w0
  426970:	mov	w1, w9
  426974:	mov	x0, x11
  426978:	bl	4262e8 <nftw@plt+0x235f8>
  42697c:	cbz	x0, 42698c <nftw@plt+0x23c9c>
  426980:	ldr	w1, [x0]
  426984:	cmp	w1, w12
  426988:	b.hi	4269d4 <nftw@plt+0x23ce4>  // b.pmore
  42698c:	cbz	x10, 426944 <nftw@plt+0x23c54>
  426990:	str	x0, [x10]
  426994:	b	426944 <nftw@plt+0x23c54>
  426998:	cbnz	w2, 4269ec <nftw@plt+0x23cfc>
  42699c:	ldp	x29, x30, [sp], #16
  4269a0:	mov	x2, x10
  4269a4:	mov	w1, w8
  4269a8:	mov	x0, x11
  4269ac:	b	426728 <nftw@plt+0x23a38>
  4269b0:	mov	w2, w8
  4269b4:	mov	x0, x11
  4269b8:	bl	426260 <nftw@plt+0x23570>
  4269bc:	mov	w8, w0
  4269c0:	b	426920 <nftw@plt+0x23c30>
  4269c4:	str	x1, [x10]
  4269c8:	b	426944 <nftw@plt+0x23c54>
  4269cc:	mov	w9, w8
  4269d0:	b	426970 <nftw@plt+0x23c80>
  4269d4:	sub	w9, w9, w1
  4269d8:	ldr	x0, [x0, #16]
  4269dc:	lsl	w9, w9, #1
  4269e0:	add	w9, w9, #0x1
  4269e4:	ldr	w8, [x0, x9, lsl #2]
  4269e8:	b	42695c <nftw@plt+0x23c6c>
  4269ec:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4269f0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4269f4:	add	x2, x2, #0x5a3
  4269f8:	add	x0, x0, #0x5bc
  4269fc:	mov	w1, #0x621                 	// #1569
  426a00:	bl	402d60 <nftw@plt+0x70>
  426a04:	stp	x29, x30, [sp, #-80]!
  426a08:	mov	x29, sp
  426a0c:	stp	x19, x20, [sp, #16]
  426a10:	mov	x20, x0
  426a14:	mov	w19, w1
  426a18:	stp	x21, x22, [sp, #32]
  426a1c:	mov	w22, w2
  426a20:	str	x23, [sp, #48]
  426a24:	str	xzr, [sp, #72]
  426a28:	tbz	w1, #31, 426a40 <nftw@plt+0x23d50>
  426a2c:	and	w19, w1, #0x7fffffff
  426a30:	mov	w1, #0x18                  	// #24
  426a34:	ldr	x0, [x0, #104]
  426a38:	umull	x19, w19, w1
  426a3c:	ldr	w19, [x0, x19]
  426a40:	mov	w1, w19
  426a44:	mov	x0, x20
  426a48:	bl	4262b8 <nftw@plt+0x235c8>
  426a4c:	tst	w0, #0xff
  426a50:	b.ne	426af4 <nftw@plt+0x23e04>  // b.any
  426a54:	cmp	w22, #0x0
  426a58:	ccmp	w19, #0x1, #0x0, ne  // ne = any
  426a5c:	b.ls	426af4 <nftw@plt+0x23e04>  // b.plast
  426a60:	mov	w1, w19
  426a64:	add	x3, sp, #0x48
  426a68:	mov	x0, x20
  426a6c:	mov	w2, #0x1                   	// #1
  426a70:	bl	4268c8 <nftw@plt+0x23bd8>
  426a74:	mov	w19, w0
  426a78:	ldr	x0, [sp, #72]
  426a7c:	ldrb	w1, [x0, #7]
  426a80:	ldr	w21, [x0]
  426a84:	lsl	w1, w22, w1
  426a88:	add	w1, w1, w19
  426a8c:	cmp	w1, w21
  426a90:	b.ls	426af4 <nftw@plt+0x23e04>  // b.plast
  426a94:	ldrb	w2, [x0, #6]
  426a98:	sub	w21, w19, w21
  426a9c:	mov	w1, w19
  426aa0:	lsr	w21, w21, w2
  426aa4:	ldr	w2, [x0, #16]
  426aa8:	add	w21, w21, w2
  426aac:	bl	427f2c <nftw@plt+0x2523c>
  426ab0:	mov	w23, w0
  426ab4:	mov	x0, x20
  426ab8:	bl	427f14 <nftw@plt+0x25224>
  426abc:	ldr	x1, [sp, #72]
  426ac0:	cmp	x1, x0
  426ac4:	ldrb	w2, [x1, #7]
  426ac8:	b.eq	426b0c <nftw@plt+0x23e1c>  // b.none
  426acc:	ldr	w0, [x1, #24]
  426ad0:	lsl	w3, w22, w2
  426ad4:	add	w3, w3, w19
  426ad8:	cmp	w3, w0
  426adc:	b.cc	426b0c <nftw@plt+0x23e1c>  // b.lo, b.ul, b.last
  426ae0:	add	x0, x1, #0x18
  426ae4:	str	x0, [sp, #72]
  426ae8:	ldr	w0, [x1, #40]
  426aec:	cmp	w0, w21
  426af0:	b.ls	426ab4 <nftw@plt+0x23dc4>  // b.plast
  426af4:	mov	w0, w19
  426af8:	ldp	x19, x20, [sp, #16]
  426afc:	ldp	x21, x22, [sp, #32]
  426b00:	ldr	x23, [sp, #48]
  426b04:	ldp	x29, x30, [sp], #80
  426b08:	ret
  426b0c:	ldrb	w0, [x1, #6]
  426b10:	add	w3, w22, w23
  426b14:	sub	w2, w0, w2
  426b18:	mov	w0, #0x1                   	// #1
  426b1c:	lsl	w0, w0, w2
  426b20:	cmp	w0, w3
  426b24:	b.ls	426af4 <nftw@plt+0x23e04>  // b.plast
  426b28:	mov	w2, w21
  426b2c:	mov	x0, x20
  426b30:	bl	4261bc <nftw@plt+0x234cc>
  426b34:	mov	w8, w0
  426b38:	ldr	w0, [x20, #56]
  426b3c:	cmp	w0, w8
  426b40:	b.cc	426af4 <nftw@plt+0x23e04>  // b.lo, b.ul, b.last
  426b44:	mov	w1, w8
  426b48:	mov	x0, x20
  426b4c:	bl	4262e8 <nftw@plt+0x235f8>
  426b50:	ldr	x1, [sp, #72]
  426b54:	cmp	x1, x0
  426b58:	csel	w19, w19, w8, ne  // ne = any
  426b5c:	b	426af4 <nftw@plt+0x23e04>
  426b60:	stp	x29, x30, [sp, #-64]!
  426b64:	mov	x29, sp
  426b68:	stp	x19, x20, [sp, #16]
  426b6c:	stp	x21, x22, [sp, #32]
  426b70:	mov	x21, x0
  426b74:	mov	w22, w2
  426b78:	stp	x23, x24, [sp, #48]
  426b7c:	mov	w23, w1
  426b80:	tbz	w1, #31, 426c6c <nftw@plt+0x23f7c>
  426b84:	bl	425b4c <nftw@plt+0x22e5c>
  426b88:	mov	w20, w0
  426b8c:	tbz	w22, #31, 426c74 <nftw@plt+0x23f84>
  426b90:	mov	w1, w22
  426b94:	mov	x0, x21
  426b98:	bl	425b4c <nftw@plt+0x22e5c>
  426b9c:	mov	w19, w0
  426ba0:	cmp	w20, w19
  426ba4:	b.eq	426cfc <nftw@plt+0x2400c>  // b.none
  426ba8:	mov	w1, w20
  426bac:	mov	x0, x21
  426bb0:	bl	4262b8 <nftw@plt+0x235c8>
  426bb4:	ands	w24, w0, #0xff
  426bb8:	b.eq	426bd4 <nftw@plt+0x23ee4>  // b.none
  426bbc:	mov	w1, w20
  426bc0:	mov	x0, x21
  426bc4:	mov	x3, #0x0                   	// #0
  426bc8:	mov	w2, #0x0                   	// #0
  426bcc:	bl	4268c8 <nftw@plt+0x23bd8>
  426bd0:	mov	w20, w0
  426bd4:	mov	w1, w19
  426bd8:	mov	x0, x21
  426bdc:	bl	4262b8 <nftw@plt+0x235c8>
  426be0:	tst	w0, #0xff
  426be4:	b.eq	426cbc <nftw@plt+0x23fcc>  // b.none
  426be8:	mov	w1, w19
  426bec:	mov	x0, x21
  426bf0:	mov	x3, #0x0                   	// #0
  426bf4:	mov	w2, #0x0                   	// #0
  426bf8:	bl	4268c8 <nftw@plt+0x23bd8>
  426bfc:	mov	w19, w0
  426c00:	cmp	w0, w20
  426c04:	b.ne	426cbc <nftw@plt+0x23fcc>  // b.any
  426c08:	cbz	w24, 426cbc <nftw@plt+0x23fcc>
  426c0c:	mov	w1, w23
  426c10:	mov	x0, x21
  426c14:	bl	4262e8 <nftw@plt+0x235f8>
  426c18:	mov	x9, x0
  426c1c:	mov	w1, w22
  426c20:	mov	x0, x21
  426c24:	bl	4262e8 <nftw@plt+0x235f8>
  426c28:	mov	x8, x0
  426c2c:	mov	x0, x9
  426c30:	bl	426240 <nftw@plt+0x23550>
  426c34:	tst	w0, #0xff
  426c38:	b.eq	426c7c <nftw@plt+0x23f8c>  // b.none
  426c3c:	mov	x0, x8
  426c40:	bl	426240 <nftw@plt+0x23550>
  426c44:	tst	w0, #0xff
  426c48:	b.eq	426c7c <nftw@plt+0x23f8c>  // b.none
  426c4c:	cmp	x9, x8
  426c50:	b.eq	426c84 <nftw@plt+0x23f94>  // b.none
  426c54:	ldr	w0, [x8]
  426c58:	ldr	w1, [x9]
  426c5c:	cmp	w1, w0
  426c60:	b.cc	426ca4 <nftw@plt+0x23fb4>  // b.lo, b.ul, b.last
  426c64:	ldr	w22, [x8, #24]
  426c68:	b	426c1c <nftw@plt+0x23f2c>
  426c6c:	mov	w20, w1
  426c70:	b	426b8c <nftw@plt+0x23e9c>
  426c74:	mov	w19, w22
  426c78:	b	426ba0 <nftw@plt+0x23eb0>
  426c7c:	cmp	x9, x8
  426c80:	b.ne	426c8c <nftw@plt+0x23f9c>  // b.any
  426c84:	sub	w0, w22, w23
  426c88:	cbnz	x8, 426ce8 <nftw@plt+0x23ff8>
  426c8c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  426c90:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  426c94:	add	x2, x2, #0x5d4
  426c98:	add	x0, x0, #0x5bc
  426c9c:	mov	w1, #0x549                 	// #1353
  426ca0:	bl	402d60 <nftw@plt+0x70>
  426ca4:	ldr	w23, [x9, #24]
  426ca8:	mov	x0, x21
  426cac:	mov	w1, w23
  426cb0:	bl	4262e8 <nftw@plt+0x235f8>
  426cb4:	mov	x9, x0
  426cb8:	b	426c2c <nftw@plt+0x23f3c>
  426cbc:	tbz	w20, #31, 426cd0 <nftw@plt+0x23fe0>
  426cc0:	mov	w1, w20
  426cc4:	mov	x0, x21
  426cc8:	bl	425b4c <nftw@plt+0x22e5c>
  426ccc:	mov	w20, w0
  426cd0:	tbz	w19, #31, 426ce4 <nftw@plt+0x23ff4>
  426cd4:	mov	w1, w19
  426cd8:	mov	x0, x21
  426cdc:	bl	425b4c <nftw@plt+0x22e5c>
  426ce0:	mov	w19, w0
  426ce4:	sub	w0, w19, w20
  426ce8:	ldp	x19, x20, [sp, #16]
  426cec:	ldp	x21, x22, [sp, #32]
  426cf0:	ldp	x23, x24, [sp, #48]
  426cf4:	ldp	x29, x30, [sp], #64
  426cf8:	ret
  426cfc:	mov	w0, #0x0                   	// #0
  426d00:	b	426ce8 <nftw@plt+0x23ff8>
  426d04:	stp	x29, x30, [sp, #-16]!
  426d08:	mov	x9, x0
  426d0c:	mov	x29, sp
  426d10:	tbz	w1, #31, 426d94 <nftw@plt+0x240a4>
  426d14:	bl	425b4c <nftw@plt+0x22e5c>
  426d18:	mov	w8, w0
  426d1c:	mov	w1, w8
  426d20:	mov	x0, x9
  426d24:	bl	4262b8 <nftw@plt+0x235c8>
  426d28:	ands	w0, w0, #0xff
  426d2c:	b.eq	426d8c <nftw@plt+0x2409c>  // b.none
  426d30:	mov	w1, w8
  426d34:	mov	x0, x9
  426d38:	bl	4262e8 <nftw@plt+0x235f8>
  426d3c:	mov	x5, x0
  426d40:	mov	w4, w8
  426d44:	mov	w2, w8
  426d48:	mov	x1, x0
  426d4c:	mov	x0, x9
  426d50:	bl	426260 <nftw@plt+0x23570>
  426d54:	mov	w8, w0
  426d58:	mov	w1, w0
  426d5c:	mov	x0, x9
  426d60:	bl	4262b8 <nftw@plt+0x235c8>
  426d64:	tst	w0, #0xff
  426d68:	b.ne	426d30 <nftw@plt+0x24040>  // b.any
  426d6c:	ldr	w2, [x5]
  426d70:	ldr	x0, [x5, #16]
  426d74:	sub	w4, w4, w2
  426d78:	lsl	w4, w4, #1
  426d7c:	add	w4, w4, #0x1
  426d80:	ldr	w0, [x0, x4, lsl #2]
  426d84:	cmp	w0, w8
  426d88:	cset	w0, eq  // eq = none
  426d8c:	ldp	x29, x30, [sp], #16
  426d90:	ret
  426d94:	mov	w8, w1
  426d98:	b	426d1c <nftw@plt+0x2402c>
  426d9c:	stp	x29, x30, [sp, #-16]!
  426da0:	mov	x9, x0
  426da4:	mov	x10, x2
  426da8:	mov	x29, sp
  426dac:	ldr	x11, [x2]
  426db0:	tbz	w1, #31, 426dc8 <nftw@plt+0x240d8>
  426db4:	and	w1, w1, #0x7fffffff
  426db8:	mov	w0, #0x18                  	// #24
  426dbc:	umull	x1, w1, w0
  426dc0:	ldr	x0, [x9, #104]
  426dc4:	ldr	w1, [x0, x1]
  426dc8:	mov	w2, w1
  426dcc:	mov	x0, x9
  426dd0:	mov	x1, x11
  426dd4:	bl	426260 <nftw@plt+0x23570>
  426dd8:	mov	w8, w0
  426ddc:	mov	w1, w0
  426de0:	mov	x0, x9
  426de4:	bl	4262e8 <nftw@plt+0x235f8>
  426de8:	mov	x3, x0
  426dec:	bl	426240 <nftw@plt+0x23550>
  426df0:	tst	w0, #0xff
  426df4:	b.ne	426e0c <nftw@plt+0x2411c>  // b.any
  426df8:	ldr	w8, [x11, #24]
  426dfc:	mov	x0, x9
  426e00:	mov	w1, w8
  426e04:	bl	4262e8 <nftw@plt+0x235f8>
  426e08:	mov	x3, x0
  426e0c:	ldp	x29, x30, [sp], #16
  426e10:	mov	w0, w8
  426e14:	str	x3, [x10]
  426e18:	ret
  426e1c:	stp	x29, x30, [sp, #-64]!
  426e20:	mov	x29, sp
  426e24:	stp	x19, x20, [sp, #16]
  426e28:	mov	x20, x0
  426e2c:	mov	w19, w1
  426e30:	str	x21, [sp, #32]
  426e34:	mov	x21, x2
  426e38:	stp	xzr, xzr, [sp, #48]
  426e3c:	tbz	w1, #31, 426e54 <nftw@plt+0x24164>
  426e40:	and	w19, w1, #0x7fffffff
  426e44:	mov	w1, #0x18                  	// #24
  426e48:	ldr	x0, [x0, #104]
  426e4c:	umull	x19, w19, w1
  426e50:	ldr	w19, [x0, x19]
  426e54:	mov	w1, w19
  426e58:	mov	x0, x20
  426e5c:	bl	4262e8 <nftw@plt+0x235f8>
  426e60:	str	x0, [sp, #48]
  426e64:	bl	426240 <nftw@plt+0x23550>
  426e68:	tst	w0, #0xff
  426e6c:	b.eq	426efc <nftw@plt+0x2420c>  // b.none
  426e70:	add	x3, sp, #0x38
  426e74:	mov	w1, w19
  426e78:	mov	x0, x20
  426e7c:	mov	w2, #0x1                   	// #1
  426e80:	bl	4268c8 <nftw@plt+0x23bd8>
  426e84:	mov	w3, w0
  426e88:	cmp	w0, #0x1
  426e8c:	b.ls	426e9c <nftw@plt+0x241ac>  // b.plast
  426e90:	ldr	x0, [sp, #56]
  426e94:	ldrb	w0, [x0, #5]
  426e98:	cbz	w0, 426efc <nftw@plt+0x2420c>
  426e9c:	ldr	x2, [sp, #48]
  426ea0:	mov	x0, x2
  426ea4:	bl	426240 <nftw@plt+0x23550>
  426ea8:	tst	w0, #0xff
  426eac:	b.eq	426ef4 <nftw@plt+0x24204>  // b.none
  426eb0:	cmp	w3, #0x1
  426eb4:	b.ls	426ec4 <nftw@plt+0x241d4>  // b.plast
  426eb8:	ldr	x0, [sp, #56]
  426ebc:	ldrb	w0, [x0, #5]
  426ec0:	cbz	w0, 426ef4 <nftw@plt+0x24204>
  426ec4:	mov	w1, w19
  426ec8:	add	x2, sp, #0x30
  426ecc:	mov	x0, x20
  426ed0:	bl	426d9c <nftw@plt+0x240ac>
  426ed4:	add	x3, sp, #0x38
  426ed8:	mov	w1, w0
  426edc:	mov	w19, w0
  426ee0:	mov	w2, #0x1                   	// #1
  426ee4:	mov	x0, x20
  426ee8:	bl	4268c8 <nftw@plt+0x23bd8>
  426eec:	mov	w3, w0
  426ef0:	b	426e9c <nftw@plt+0x241ac>
  426ef4:	cbz	x21, 426efc <nftw@plt+0x2420c>
  426ef8:	str	x2, [x21]
  426efc:	mov	w0, w19
  426f00:	ldp	x19, x20, [sp, #16]
  426f04:	ldr	x21, [sp, #32]
  426f08:	ldp	x29, x30, [sp], #64
  426f0c:	ret
  426f10:	stp	x29, x30, [sp, #-32]!
  426f14:	mov	w3, w2
  426f18:	mov	x29, sp
  426f1c:	stp	x19, x20, [sp, #16]
  426f20:	mov	x19, x8
  426f24:	mov	x20, x1
  426f28:	stp	xzr, xzr, [x8]
  426f2c:	stp	xzr, xzr, [x8, #16]
  426f30:	tbz	w2, #31, 426f54 <nftw@plt+0x24264>
  426f34:	and	w3, w2, #0x7fffffff
  426f38:	mov	w1, #0x18                  	// #24
  426f3c:	umull	x3, w3, w1
  426f40:	ldr	x1, [x0, #104]
  426f44:	add	x2, x1, x3
  426f48:	ldr	w3, [x1, x3]
  426f4c:	ldr	x2, [x2, #16]
  426f50:	str	x2, [x8, #16]
  426f54:	cmp	w3, #0x1
  426f58:	b.ls	426fdc <nftw@plt+0x242ec>  // b.plast
  426f5c:	cbnz	x20, 426f78 <nftw@plt+0x24288>
  426f60:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  426f64:	add	x2, x2, #0x5ee
  426f68:	mov	w1, #0x6bd                 	// #1725
  426f6c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  426f70:	add	x0, x0, #0x5bc
  426f74:	bl	402d60 <nftw@plt+0x70>
  426f78:	mov	w1, w3
  426f7c:	bl	4262b8 <nftw@plt+0x235c8>
  426f80:	tst	w0, #0xff
  426f84:	b.eq	426f98 <nftw@plt+0x242a8>  // b.none
  426f88:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  426f8c:	mov	w1, #0x6c5                 	// #1733
  426f90:	add	x2, x2, #0x5ee
  426f94:	b	426f6c <nftw@plt+0x2427c>
  426f98:	ldr	x0, [x20, #8]
  426f9c:	str	x0, [x19]
  426fa0:	ldr	w0, [x20]
  426fa4:	ldrb	w1, [x20, #6]
  426fa8:	sub	w0, w3, w0
  426fac:	lsr	w0, w0, w1
  426fb0:	ldr	w1, [x20, #16]
  426fb4:	add	w0, w0, w1
  426fb8:	mov	w1, w3
  426fbc:	str	w0, [x19, #8]
  426fc0:	mov	x0, x20
  426fc4:	bl	427f2c <nftw@plt+0x2523c>
  426fc8:	str	w0, [x19, #12]
  426fcc:	ldrb	w0, [x20, #5]
  426fd0:	cmp	w0, #0x0
  426fd4:	cset	w0, ne  // ne = any
  426fd8:	strb	w0, [x19, #24]
  426fdc:	ldp	x19, x20, [sp, #16]
  426fe0:	ldp	x29, x30, [sp], #32
  426fe4:	ret
  426fe8:	stp	x29, x30, [sp, #-96]!
  426fec:	mov	x29, sp
  426ff0:	stp	x19, x20, [sp, #16]
  426ff4:	mov	x20, x0
  426ff8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  426ffc:	add	x0, x0, #0x748
  427000:	stp	x21, x22, [sp, #32]
  427004:	mov	x21, x1
  427008:	and	w22, w3, #0xff
  42700c:	ldp	x4, x5, [x0]
  427010:	stp	x4, x5, [sp, #56]
  427014:	ldp	x4, x5, [x0, #16]
  427018:	stp	x4, x5, [sp, #72]
  42701c:	ldr	x0, [x0, #32]
  427020:	str	x0, [sp, #88]
  427024:	cbnz	x20, 427030 <nftw@plt+0x24340>
  427028:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  42702c:	ldr	x20, [x0, #1416]
  427030:	cbnz	w22, 427104 <nftw@plt+0x24414>
  427034:	ldr	x0, [x21]
  427038:	mov	w19, #0x18                  	// #24
  42703c:	smaddl	x19, w2, w19, x0
  427040:	ldrb	w0, [x19, #4]
  427044:	ldr	w4, [x19]
  427048:	cmp	w0, #0x4
  42704c:	b.hi	427118 <nftw@plt+0x24428>  // b.pmore
  427050:	add	x1, sp, #0x60
  427054:	add	x0, x1, w0, uxtb #3
  427058:	ldur	x5, [x0, #-40]
  42705c:	cbnz	w22, 427124 <nftw@plt+0x24434>
  427060:	ldrb	w1, [x19, #5]
  427064:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427068:	adrp	x6, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42706c:	add	x0, x0, #0x609
  427070:	cmp	w1, #0x0
  427074:	add	x6, x6, #0x606
  427078:	csel	x6, x6, x0, eq  // eq = none
  42707c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427080:	mov	x3, x19
  427084:	add	x1, x1, #0x612
  427088:	mov	x0, x20
  42708c:	bl	402cb0 <fprintf@plt>
  427090:	cbnz	w22, 427140 <nftw@plt+0x24450>
  427094:	mov	x1, x19
  427098:	mov	x0, x21
  42709c:	bl	425bc8 <nftw@plt+0x22ed8>
  4270a0:	mov	x22, x0
  4270a4:	ldr	w3, [x19, #16]
  4270a8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4270ac:	ldr	x2, [x19, #8]
  4270b0:	add	x1, x1, #0x642
  4270b4:	mov	x0, x20
  4270b8:	bl	402cb0 <fprintf@plt>
  4270bc:	cbz	x22, 427130 <nftw@plt+0x24440>
  4270c0:	ldr	x2, [x21]
  4270c4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4270c8:	movk	x0, #0xaaab
  4270cc:	sub	x2, x22, x2
  4270d0:	ldr	x3, [x22, #8]
  4270d4:	asr	x2, x2, #3
  4270d8:	mul	w2, w2, w0
  4270dc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4270e0:	mov	x0, x20
  4270e4:	add	x1, x1, #0x64f
  4270e8:	bl	402cb0 <fprintf@plt>
  4270ec:	mov	x1, x20
  4270f0:	mov	w0, #0xa                   	// #10
  4270f4:	ldp	x19, x20, [sp, #16]
  4270f8:	ldp	x21, x22, [sp, #32]
  4270fc:	ldp	x29, x30, [sp], #96
  427100:	b	402710 <fputc@plt>
  427104:	ldr	x0, [x21, #24]
  427108:	sbfiz	x19, x2, #5, #32
  42710c:	add	x19, x0, x19
  427110:	mov	w0, #0x4                   	// #4
  427114:	b	427044 <nftw@plt+0x24354>
  427118:	adrp	x5, 44e000 <_obstack_memory_used@@Base+0x10fa8>
  42711c:	add	x5, x5, #0xe6f
  427120:	b	42705c <nftw@plt+0x2436c>
  427124:	adrp	x6, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427128:	add	x6, x6, #0x606
  42712c:	b	42707c <nftw@plt+0x2438c>
  427130:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427134:	mov	w2, #0xffffffff            	// #-1
  427138:	add	x3, x3, #0x60d
  42713c:	b	4270dc <nftw@plt+0x243ec>
  427140:	ldr	x0, [x19, #8]
  427144:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427148:	ldr	w3, [x19, #4]
  42714c:	add	x1, x1, #0x667
  427150:	ldr	x2, [x0]
  427154:	mov	x0, x20
  427158:	bl	402cb0 <fprintf@plt>
  42715c:	b	4270ec <nftw@plt+0x243fc>
  427160:	sub	sp, sp, #0x80
  427164:	stp	x29, x30, [sp, #32]
  427168:	add	x29, sp, #0x20
  42716c:	stp	x19, x20, [sp, #48]
  427170:	mov	w19, w1
  427174:	stp	x21, x22, [sp, #64]
  427178:	stp	x23, x24, [sp, #80]
  42717c:	mov	x24, x0
  427180:	mov	x23, x2
  427184:	str	x25, [sp, #96]
  427188:	tbz	w1, #31, 4271a0 <nftw@plt+0x244b0>
  42718c:	and	w19, w1, #0x7fffffff
  427190:	mov	w1, #0x18                  	// #24
  427194:	ldr	x0, [x0, #104]
  427198:	umull	x19, w19, w1
  42719c:	ldr	w19, [x0, x19]
  4271a0:	cbz	w19, 42724c <nftw@plt+0x2455c>
  4271a4:	add	x3, sp, #0x78
  4271a8:	mov	w1, w19
  4271ac:	mov	x0, x24
  4271b0:	mov	w2, #0x2                   	// #2
  4271b4:	bl	4268c8 <nftw@plt+0x23bd8>
  4271b8:	mov	w22, w0
  4271bc:	ldr	x21, [sp, #120]
  4271c0:	cbz	x21, 427268 <nftw@plt+0x24578>
  4271c4:	ldr	w20, [x21]
  4271c8:	mov	w1, w0
  4271cc:	ldrb	w4, [x21, #6]
  4271d0:	mov	x0, x21
  4271d4:	sub	w20, w22, w20
  4271d8:	lsr	w20, w20, w4
  4271dc:	ldr	w4, [x21, #16]
  4271e0:	add	w20, w20, w4
  4271e4:	bl	427f2c <nftw@plt+0x2523c>
  4271e8:	mov	w8, w0
  4271ec:	ldrb	w0, [x21, #5]
  4271f0:	ldr	x25, [x21, #8]
  4271f4:	cmp	w0, #0x0
  4271f8:	cset	w9, ne  // ne = any
  4271fc:	cmp	w19, w22
  427200:	b.ne	427288 <nftw@plt+0x24598>  // b.any
  427204:	mov	x1, x21
  427208:	mov	x0, x24
  42720c:	bl	425bc8 <nftw@plt+0x22ed8>
  427210:	cbz	x0, 427298 <nftw@plt+0x245a8>
  427214:	ldr	x3, [x0, #8]
  427218:	mov	w1, #0x0                   	// #0
  42721c:	ldr	x7, [sp, #120]
  427220:	str	w1, [sp]
  427224:	str	w19, [sp, #8]
  427228:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42722c:	str	w22, [sp, #16]
  427230:	mov	w6, w9
  427234:	mov	w5, w8
  427238:	mov	w4, w20
  42723c:	mov	x2, x25
  427240:	mov	x0, x23
  427244:	add	x1, x1, #0x689
  427248:	bl	402cb0 <fprintf@plt>
  42724c:	ldp	x29, x30, [sp, #32]
  427250:	ldp	x19, x20, [sp, #48]
  427254:	ldp	x21, x22, [sp, #64]
  427258:	ldp	x23, x24, [sp, #80]
  42725c:	ldr	x25, [sp, #96]
  427260:	add	sp, sp, #0x80
  427264:	ret
  427268:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0xffa8>
  42726c:	add	x3, x3, #0xe54
  427270:	mov	w1, #0xffffffff            	// #-1
  427274:	mov	x25, x3
  427278:	mov	w9, w1
  42727c:	mov	w8, w1
  427280:	mov	w20, w1
  427284:	b	42721c <nftw@plt+0x2452c>
  427288:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42728c:	mov	w1, #0x1                   	// #1
  427290:	add	x3, x3, #0x67e
  427294:	b	42721c <nftw@plt+0x2452c>
  427298:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42729c:	mov	w1, #0x0                   	// #0
  4272a0:	add	x3, x3, #0x682
  4272a4:	b	42721c <nftw@plt+0x2452c>
  4272a8:	cbnz	x0, 4272cc <nftw@plt+0x245dc>
  4272ac:	mov	w0, #0x0                   	// #0
  4272b0:	ret
  4272b4:	mov	w0, #0x0                   	// #0
  4272b8:	ldp	x19, x20, [sp, #16]
  4272bc:	ldp	x21, x22, [sp, #32]
  4272c0:	ldp	x23, x24, [sp, #48]
  4272c4:	ldp	x29, x30, [sp], #64
  4272c8:	ret
  4272cc:	stp	x29, x30, [sp, #-64]!
  4272d0:	mov	x29, sp
  4272d4:	stp	x19, x20, [sp, #16]
  4272d8:	mov	x19, x0
  4272dc:	ldr	w20, [x0, #12]
  4272e0:	stp	x21, x22, [sp, #32]
  4272e4:	stp	x23, x24, [sp, #48]
  4272e8:	cbz	w20, 4272b4 <nftw@plt+0x245c4>
  4272ec:	sub	w20, w20, #0x1
  4272f0:	mov	x24, x1
  4272f4:	mov	x23, x2
  4272f8:	mov	x21, #0x18                  	// #24
  4272fc:	sxtw	x22, w20
  427300:	tbnz	w20, #31, 4272b4 <nftw@plt+0x245c4>
  427304:	ldr	x0, [x19]
  427308:	madd	x0, x22, x21, x0
  42730c:	ldr	x0, [x0, #8]
  427310:	cbnz	x0, 427320 <nftw@plt+0x24630>
  427314:	sub	w20, w20, #0x1
  427318:	sub	x22, x22, #0x1
  42731c:	b	427300 <nftw@plt+0x24610>
  427320:	mov	x1, x24
  427324:	bl	43bcf4 <nftw@plt+0x39004>
  427328:	cbnz	w0, 427314 <nftw@plt+0x24624>
  42732c:	ldr	w0, [x19, #12]
  427330:	sub	w0, w0, #0x1
  427334:	cmp	w0, w20
  427338:	b.ne	42734c <nftw@plt+0x2465c>  // b.any
  42733c:	ldr	w0, [x19, #56]
  427340:	str	w0, [x23]
  427344:	mov	w0, #0x1                   	// #1
  427348:	b	4272b8 <nftw@plt+0x245c8>
  42734c:	madd	x21, x22, x21, x21
  427350:	ldr	x0, [x19]
  427354:	ldr	w0, [x0, x21]
  427358:	sub	w0, w0, #0x1
  42735c:	b	427340 <nftw@plt+0x24650>
  427360:	ldp	w7, w8, [x0, #8]
  427364:	mov	w2, #0x18                  	// #24
  427368:	ldp	w12, w3, [x0, #32]
  42736c:	mov	x11, #0x0                   	// #0
  427370:	umull	x15, w7, w2
  427374:	mov	x10, #0x0                   	// #0
  427378:	umull	x6, w8, w2
  42737c:	sub	w4, w3, #0x1
  427380:	ldr	x2, [x0, #24]
  427384:	sbfiz	x4, x4, #5, #32
  427388:	lsl	x12, x12, #5
  42738c:	add	x4, x2, x4
  427390:	cbz	x2, 4273d8 <nftw@plt+0x246e8>
  427394:	cmp	x2, x4
  427398:	b.hi	4273d8 <nftw@plt+0x246e8>  // b.pmore
  42739c:	ldr	w9, [x2, #4]
  4273a0:	mov	w5, #0x0                   	// #0
  4273a4:	lsl	w9, w9, #1
  4273a8:	add	x10, x10, w9, uxtw #2
  4273ac:	cmp	w9, w5
  4273b0:	b.ls	42742c <nftw@plt+0x2473c>  // b.plast
  4273b4:	ldr	x14, [x2, #16]
  4273b8:	add	w13, w5, #0x1
  4273bc:	ldr	w16, [x14, w5, uxtw #2]
  4273c0:	ldr	w13, [x14, x13, lsl #2]
  4273c4:	cmp	w16, w13
  4273c8:	b.ne	4273d0 <nftw@plt+0x246e0>  // b.any
  4273cc:	add	x11, x11, #0x4
  4273d0:	add	w5, w5, #0x2
  4273d4:	b	4273ac <nftw@plt+0x246bc>
  4273d8:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4273dc:	mov	w3, w3
  4273e0:	stp	x3, x12, [x1, #48]
  4273e4:	mov	w7, w7
  4273e8:	ldr	w2, [x2, #2436]
  4273ec:	str	x2, [x1, #32]
  4273f0:	lsl	x3, x3, #5
  4273f4:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  4273f8:	str	x3, [x1, #64]
  4273fc:	mov	w3, #0x18                  	// #24
  427400:	mov	w8, w8
  427404:	ldr	w2, [x2, #2432]
  427408:	str	x2, [x1, #40]
  42740c:	ldr	w2, [x0, #100]
  427410:	ldr	w0, [x0, #96]
  427414:	stp	x7, x8, [x1]
  427418:	umull	x2, w2, w3
  42741c:	stp	x15, x6, [x1, #16]
  427420:	stp	x10, x11, [x1, #72]
  427424:	stp	x2, x0, [x1, #88]
  427428:	ret
  42742c:	add	x2, x2, #0x20
  427430:	b	427390 <nftw@plt+0x246a0>
  427434:	cbz	x1, 427580 <nftw@plt+0x24890>
  427438:	stp	x29, x30, [sp, #-64]!
  42743c:	mov	x29, sp
  427440:	stp	x19, x20, [sp, #16]
  427444:	mov	x19, x0
  427448:	mov	x20, x1
  42744c:	stp	x21, x22, [sp, #32]
  427450:	mov	w22, w3
  427454:	str	x23, [sp, #48]
  427458:	mov	w23, w2
  42745c:	cbnz	x0, 427468 <nftw@plt+0x24778>
  427460:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  427464:	ldr	x19, [x0, #1416]
  427468:	mov	x0, x19
  42746c:	ldr	w2, [x20, #12]
  427470:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427474:	add	x1, x1, #0x6ba
  427478:	bl	402cb0 <fprintf@plt>
  42747c:	ldr	w2, [x20, #36]
  427480:	mov	x0, x19
  427484:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427488:	add	x1, x1, #0x6d3
  42748c:	bl	402cb0 <fprintf@plt>
  427490:	ldr	w2, [x20, #48]
  427494:	mov	x0, x19
  427498:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42749c:	add	x1, x1, #0x6ec
  4274a0:	bl	402cb0 <fprintf@plt>
  4274a4:	ldr	w2, [x20, #56]
  4274a8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4274ac:	mov	x0, x19
  4274b0:	add	x1, x1, #0x705
  4274b4:	bl	402cb0 <fprintf@plt>
  4274b8:	cbz	w23, 427508 <nftw@plt+0x24818>
  4274bc:	mov	w21, #0x0                   	// #0
  4274c0:	mov	x1, x19
  4274c4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4274c8:	add	x0, x0, #0x71e
  4274cc:	bl	402640 <fputs@plt>
  4274d0:	ldr	w0, [x20, #12]
  4274d4:	cmp	w0, w21
  4274d8:	b.ls	4274fc <nftw@plt+0x2480c>  // b.plast
  4274dc:	mov	w2, w21
  4274e0:	mov	x1, x20
  4274e4:	mov	x0, x19
  4274e8:	add	w21, w21, #0x1
  4274ec:	mov	w3, #0x0                   	// #0
  4274f0:	bl	426fe8 <nftw@plt+0x242f8>
  4274f4:	cmp	w23, w21
  4274f8:	b.ne	4274d0 <nftw@plt+0x247e0>  // b.any
  4274fc:	mov	x1, x19
  427500:	mov	w0, #0xa                   	// #10
  427504:	bl	402710 <fputc@plt>
  427508:	cbz	w22, 42756c <nftw@plt+0x2487c>
  42750c:	mov	w21, #0x0                   	// #0
  427510:	mov	x1, x19
  427514:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  427518:	add	x0, x0, #0x733
  42751c:	bl	402640 <fputs@plt>
  427520:	ldr	w0, [x20, #36]
  427524:	cmp	w0, w21
  427528:	b.hi	427548 <nftw@plt+0x24858>  // b.pmore
  42752c:	mov	x1, x19
  427530:	mov	w0, #0xa                   	// #10
  427534:	ldp	x19, x20, [sp, #16]
  427538:	ldp	x21, x22, [sp, #32]
  42753c:	ldr	x23, [sp, #48]
  427540:	ldp	x29, x30, [sp], #64
  427544:	b	402710 <fputc@plt>
  427548:	mov	w2, w21
  42754c:	mov	x1, x20
  427550:	mov	x0, x19
  427554:	add	w21, w21, #0x1
  427558:	mov	w3, #0x1                   	// #1
  42755c:	bl	426fe8 <nftw@plt+0x242f8>
  427560:	cmp	w22, w21
  427564:	b.ne	427520 <nftw@plt+0x24830>  // b.any
  427568:	b	42752c <nftw@plt+0x2483c>
  42756c:	ldp	x19, x20, [sp, #16]
  427570:	ldp	x21, x22, [sp, #32]
  427574:	ldr	x23, [sp, #48]
  427578:	ldp	x29, x30, [sp], #64
  42757c:	ret
  427580:	ret
  427584:	stp	x29, x30, [sp, #-64]!
  427588:	mov	x29, sp
  42758c:	stp	x19, x20, [sp, #16]
  427590:	mov	x20, x0
  427594:	mov	w19, #0x0                   	// #0
  427598:	stp	x21, x22, [sp, #32]
  42759c:	add	x21, x0, #0x78
  4275a0:	str	x23, [sp, #48]
  4275a4:	mov	x23, #0xfffffffffffffff0    	// #-16
  4275a8:	ldr	w0, [x20, #120]
  4275ac:	cmp	w19, w0
  4275b0:	b.cs	4275fc <nftw@plt+0x2490c>  // b.hs, b.nlast
  4275b4:	sxtw	x1, w19
  4275b8:	cmp	w19, #0x1
  4275bc:	b.gt	4275ec <nftw@plt+0x248fc>
  4275c0:	add	x1, x1, #0x1
  4275c4:	add	x1, x21, x1, lsl #3
  4275c8:	ldr	x22, [x1]
  4275cc:	cbz	x22, 4275e4 <nftw@plt+0x248f4>
  4275d0:	ldr	x0, [x22, #8]
  4275d4:	bl	402a80 <free@plt>
  4275d8:	mov	x0, x22
  4275dc:	mov	x1, #0x18                  	// #24
  4275e0:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  4275e4:	add	w19, w19, #0x1
  4275e8:	b	4275a8 <nftw@plt+0x248b8>
  4275ec:	ldr	x2, [x21, #32]
  4275f0:	add	x1, x23, w19, sxtw #3
  4275f4:	add	x1, x2, x1
  4275f8:	b	4275c8 <nftw@plt+0x248d8>
  4275fc:	ldr	x0, [x21, #32]
  427600:	bl	402a80 <free@plt>
  427604:	ldp	x21, x22, [sp, #32]
  427608:	ldr	x23, [sp, #48]
  42760c:	ldr	x0, [x20, #72]
  427610:	ldp	x19, x20, [sp, #16]
  427614:	ldp	x29, x30, [sp], #64
  427618:	b	402a80 <free@plt>
  42761c:	sbfiz	x2, x1, #4, #32
  427620:	cmp	w1, #0x2
  427624:	add	x0, x0, #0x8
  427628:	b.gt	42763c <nftw@plt+0x2494c>
  42762c:	add	x2, x2, #0x8
  427630:	add	x0, x0, x2
  427634:	ldr	w0, [x0]
  427638:	ret
  42763c:	sub	x2, x2, #0x30
  427640:	ldr	x0, [x0, #64]
  427644:	b	427630 <nftw@plt+0x24940>
  427648:	sbfiz	x2, x1, #4, #32
  42764c:	cmp	w1, #0x2
  427650:	add	x0, x0, #0x8
  427654:	b.gt	427664 <nftw@plt+0x24974>
  427658:	add	x2, x2, #0x8
  42765c:	add	x0, x0, x2
  427660:	ret
  427664:	sub	x2, x2, #0x30
  427668:	ldr	x0, [x0, #64]
  42766c:	b	42765c <nftw@plt+0x2496c>
  427670:	sbfiz	x2, x1, #4, #32
  427674:	cmp	w1, #0x2
  427678:	add	x0, x0, #0x8
  42767c:	b.gt	42768c <nftw@plt+0x2499c>
  427680:	add	x2, x2, #0x8
  427684:	add	x0, x0, x2
  427688:	ret
  42768c:	sub	x2, x2, #0x30
  427690:	ldr	x0, [x0, #64]
  427694:	b	427684 <nftw@plt+0x24994>
  427698:	stp	x29, x30, [sp, #-80]!
  42769c:	mov	x29, sp
  4276a0:	stp	x19, x20, [sp, #16]
  4276a4:	mov	x20, x8
  4276a8:	str	x21, [sp, #32]
  4276ac:	cbnz	w1, 427714 <nftw@plt+0x24a24>
  4276b0:	ldrb	w2, [x0, #84]
  4276b4:	mov	x19, x0
  4276b8:	add	x21, x0, #0x58
  4276bc:	cbnz	w2, 4276f4 <nftw@plt+0x24a04>
  4276c0:	bl	42761c <nftw@plt+0x2492c>
  4276c4:	mov	w1, #0x0                   	// #0
  4276c8:	add	x8, sp, #0x30
  4276cc:	bl	4117e4 <nftw@plt+0xeaf4>
  4276d0:	ldp	x0, x1, [sp, #48]
  4276d4:	stp	x0, x1, [x19, #88]
  4276d8:	ldp	x0, x1, [sp, #64]
  4276dc:	stp	x0, x1, [x21, #16]
  4276e0:	ldr	w0, [x19, #80]
  4276e4:	cbz	w0, 4276ec <nftw@plt+0x249fc>
  4276e8:	str	w0, [x19, #100]
  4276ec:	mov	w0, #0x1                   	// #1
  4276f0:	strb	w0, [x19, #84]
  4276f4:	ldp	x0, x1, [x19, #88]
  4276f8:	stp	x0, x1, [x20]
  4276fc:	ldp	x0, x1, [x21, #16]
  427700:	stp	x0, x1, [x20, #16]
  427704:	ldp	x19, x20, [sp, #16]
  427708:	ldr	x21, [sp, #32]
  42770c:	ldp	x29, x30, [sp], #80
  427710:	ret
  427714:	bl	42761c <nftw@plt+0x2492c>
  427718:	mov	w1, #0x0                   	// #0
  42771c:	bl	4117e4 <nftw@plt+0xeaf4>
  427720:	b	427704 <nftw@plt+0x24a14>
  427724:	str	w1, [x0, #80]
  427728:	strb	wzr, [x0, #84]
  42772c:	ret
  427730:	stp	x29, x30, [sp, #-64]!
  427734:	mov	x29, sp
  427738:	ldr	w4, [x0, #8]
  42773c:	stp	x19, x20, [sp, #16]
  427740:	add	x20, x0, #0x8
  427744:	cmp	w4, #0x2
  427748:	stp	x21, x22, [sp, #32]
  42774c:	mov	w22, w2
  427750:	mov	x21, x3
  427754:	str	x23, [sp, #48]
  427758:	mov	w23, w1
  42775c:	add	w1, w4, #0x1
  427760:	str	w1, [x0, #8]
  427764:	b.gt	427794 <nftw@plt+0x24aa4>
  427768:	mov	x0, #0x8                   	// #8
  42776c:	add	x4, x0, w4, sxtw #4
  427770:	add	x0, x20, x4
  427774:	str	w23, [x20, x4]
  427778:	str	w2, [x0, #4]
  42777c:	str	x3, [x0, #8]
  427780:	ldp	x19, x20, [sp, #16]
  427784:	ldp	x21, x22, [sp, #32]
  427788:	ldr	x23, [sp, #48]
  42778c:	ldp	x29, x30, [sp], #64
  427790:	ret
  427794:	ldr	x0, [x20, #64]
  427798:	sub	w19, w4, #0x3
  42779c:	cbnz	x0, 4277d0 <nftw@plt+0x24ae0>
  4277a0:	mov	w0, #0x10                  	// #16
  4277a4:	str	w0, [x20, #56]
  4277a8:	mov	x0, #0x100                 	// #256
  4277ac:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4277b0:	str	x0, [x20, #64]
  4277b4:	ldr	x0, [x20, #64]
  4277b8:	sbfiz	x1, x19, #4, #32
  4277bc:	add	x4, x0, w19, sxtw #4
  4277c0:	str	w23, [x0, x1]
  4277c4:	str	w22, [x4, #4]
  4277c8:	str	x21, [x4, #8]
  4277cc:	b	427780 <nftw@plt+0x24a90>
  4277d0:	ldr	w4, [x20, #56]
  4277d4:	cmp	w19, w4
  4277d8:	b.lt	4277b4 <nftw@plt+0x24ac4>  // b.tstop
  4277dc:	lsl	w4, w4, #1
  4277e0:	str	w4, [x20, #56]
  4277e4:	sbfiz	x1, x4, #4, #32
  4277e8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  4277ec:	b	4277b0 <nftw@plt+0x24ac0>
  4277f0:	mov	x5, x1
  4277f4:	mov	w1, w2
  4277f8:	mov	x2, x0
  4277fc:	str	x5, [x2], #8
  427800:	str	wzr, [x0, #8]
  427804:	str	wzr, [x2, #56]
  427808:	str	xzr, [x2, #64]
  42780c:	mov	w2, #0x0                   	// #0
  427810:	str	wzr, [x0, #80]
  427814:	strb	wzr, [x0, #84]
  427818:	str	wzr, [x0, #120]
  42781c:	str	wzr, [x0, #144]
  427820:	str	xzr, [x0, #152]
  427824:	strh	wzr, [x0, #160]
  427828:	b	427730 <nftw@plt+0x24a40>
  42782c:	stp	x29, x30, [sp, #-32]!
  427830:	mov	x29, sp
  427834:	stp	x19, x20, [sp, #16]
  427838:	mov	w19, w1
  42783c:	mov	w1, w2
  427840:	mov	w2, w3
  427844:	ldr	w3, [x0, #8]
  427848:	mov	x20, x0
  42784c:	cmp	w3, w19
  427850:	b.ne	427870 <nftw@plt+0x24b80>  // b.any
  427854:	mov	x3, #0x0                   	// #0
  427858:	bl	427730 <nftw@plt+0x24a40>
  42785c:	cbnz	w19, 427864 <nftw@plt+0x24b74>
  427860:	strb	wzr, [x20, #84]
  427864:	ldp	x19, x20, [sp, #16]
  427868:	ldp	x29, x30, [sp], #32
  42786c:	ret
  427870:	sbfiz	x4, x19, #4, #32
  427874:	cmp	w19, #0x2
  427878:	add	x5, x0, #0x8
  42787c:	b.gt	427890 <nftw@plt+0x24ba0>
  427880:	add	x4, x4, #0x8
  427884:	add	x4, x5, x4
  427888:	stp	w1, w2, [x4]
  42788c:	b	42785c <nftw@plt+0x24b6c>
  427890:	sub	x6, x4, #0x30
  427894:	ldr	x4, [x5, #64]
  427898:	add	x4, x4, x6
  42789c:	b	427888 <nftw@plt+0x24b98>
  4278a0:	ldr	w2, [x0, #120]
  4278a4:	cbz	w2, 4278e0 <nftw@plt+0x24bf0>
  4278a8:	sub	w2, w2, #0x1
  4278ac:	add	x3, x0, #0x78
  4278b0:	cmp	w2, #0x1
  4278b4:	sxtw	x1, w2
  4278b8:	b.gt	4278cc <nftw@plt+0x24bdc>
  4278bc:	add	x0, x1, #0x1
  4278c0:	add	x0, x3, x0, lsl #3
  4278c4:	ldr	x0, [x0]
  4278c8:	ret
  4278cc:	mov	x0, #0xfffffffffffffff0    	// #-16
  4278d0:	add	x2, x0, w2, sxtw #3
  4278d4:	ldr	x0, [x3, #32]
  4278d8:	add	x0, x0, x2
  4278dc:	b	4278c4 <nftw@plt+0x24bd4>
  4278e0:	mov	x0, #0x0                   	// #0
  4278e4:	b	4278c8 <nftw@plt+0x24bd8>
  4278e8:	stp	x29, x30, [sp, #-64]!
  4278ec:	mov	x29, sp
  4278f0:	stp	x19, x20, [sp, #16]
  4278f4:	mov	x19, x0
  4278f8:	mov	w0, #0x1                   	// #1
  4278fc:	stp	x21, x22, [sp, #32]
  427900:	add	x22, x19, #0x78
  427904:	mov	w20, #0x0                   	// #0
  427908:	strb	w0, [x19, #160]
  42790c:	str	x23, [sp, #48]
  427910:	mov	x23, #0xfffffffffffffff0    	// #-16
  427914:	ldr	w0, [x19, #120]
  427918:	cmp	w20, w0
  42791c:	b.cs	427968 <nftw@plt+0x24c78>  // b.hs, b.nlast
  427920:	sxtw	x1, w20
  427924:	cmp	w20, #0x1
  427928:	b.gt	427958 <nftw@plt+0x24c68>
  42792c:	add	x1, x1, #0x1
  427930:	add	x1, x22, x1, lsl #3
  427934:	ldr	x21, [x1]
  427938:	cbz	x21, 427950 <nftw@plt+0x24c60>
  42793c:	ldr	x0, [x21, #8]
  427940:	bl	402a80 <free@plt>
  427944:	mov	x0, x21
  427948:	mov	x1, #0x18                  	// #24
  42794c:	bl	43d660 <_obstack_memory_used@@Base+0x608>
  427950:	add	w20, w20, #0x1
  427954:	b	427914 <nftw@plt+0x24c24>
  427958:	ldr	x2, [x22, #32]
  42795c:	add	x1, x23, w20, sxtw #3
  427960:	add	x1, x2, x1
  427964:	b	427934 <nftw@plt+0x24c44>
  427968:	ldp	x21, x22, [sp, #32]
  42796c:	ldr	x23, [sp, #48]
  427970:	str	wzr, [x19, #120]
  427974:	ldp	x19, x20, [sp, #16]
  427978:	ldp	x29, x30, [sp], #64
  42797c:	ret
  427980:	ldrb	w2, [x0, #160]
  427984:	cbnz	w2, 4279b0 <nftw@plt+0x24cc0>
  427988:	mov	w3, #0x60000000            	// #1610612736
  42798c:	cmp	w1, w3
  427990:	b.ls	4279b0 <nftw@plt+0x24cc0>  // b.plast
  427994:	stp	x29, x30, [sp, #-16]!
  427998:	mov	x29, sp
  42799c:	bl	4278e8 <nftw@plt+0x24bf8>
  4279a0:	mov	w2, #0x1                   	// #1
  4279a4:	mov	w0, w2
  4279a8:	ldp	x29, x30, [sp], #16
  4279ac:	ret
  4279b0:	mov	w0, w2
  4279b4:	ret
  4279b8:	stp	x29, x30, [sp, #-32]!
  4279bc:	mov	x29, sp
  4279c0:	stp	x19, x20, [sp, #16]
  4279c4:	mov	x19, x0
  4279c8:	mov	x20, x3
  4279cc:	mov	x0, x3
  4279d0:	stp	w1, w2, [x19]
  4279d4:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  4279d8:	str	x0, [x19, #8]
  4279dc:	mov	x0, x20
  4279e0:	bl	402630 <strlen@plt>
  4279e4:	str	x0, [x19, #16]
  4279e8:	ldp	x19, x20, [sp, #16]
  4279ec:	ldp	x29, x30, [sp], #32
  4279f0:	ret
  4279f4:	stp	x29, x30, [sp, #-112]!
  4279f8:	mov	x29, sp
  4279fc:	stp	x19, x20, [sp, #16]
  427a00:	mov	x20, x0
  427a04:	ldr	w0, [x0]
  427a08:	mov	w19, w2
  427a0c:	add	x8, sp, #0x30
  427a10:	stp	x21, x22, [sp, #32]
  427a14:	mov	x21, x1
  427a18:	mov	w1, #0x1                   	// #1
  427a1c:	bl	4117e4 <nftw@plt+0xeaf4>
  427a20:	ldr	x22, [sp, #48]
  427a24:	cmp	x22, x21
  427a28:	b.eq	427a40 <nftw@plt+0x24d50>  // b.none
  427a2c:	mov	w0, #0x0                   	// #0
  427a30:	ldp	x19, x20, [sp, #16]
  427a34:	ldp	x21, x22, [sp, #32]
  427a38:	ldp	x29, x30, [sp], #112
  427a3c:	ret
  427a40:	ldr	w0, [sp, #56]
  427a44:	cmp	w0, w19
  427a48:	b.gt	427a2c <nftw@plt+0x24d3c>
  427a4c:	ldr	w0, [x20, #4]
  427a50:	add	x8, sp, #0x50
  427a54:	mov	w1, #0x1                   	// #1
  427a58:	bl	4117e4 <nftw@plt+0xeaf4>
  427a5c:	ldr	x0, [sp, #80]
  427a60:	cmp	x0, x22
  427a64:	b.ne	427a2c <nftw@plt+0x24d3c>  // b.any
  427a68:	ldr	w0, [sp, #88]
  427a6c:	cmp	w0, w19
  427a70:	cset	w0, ge  // ge = tcont
  427a74:	b	427a30 <nftw@plt+0x24d40>
  427a78:	stp	x29, x30, [sp, #-48]!
  427a7c:	mov	x29, sp
  427a80:	stp	x19, x20, [sp, #16]
  427a84:	mov	x19, x0
  427a88:	ldr	w0, [x0, #4]
  427a8c:	str	x21, [sp, #32]
  427a90:	cmp	w0, w1
  427a94:	b.ne	427af8 <nftw@plt+0x24e08>  // b.any
  427a98:	str	w2, [x19, #4]
  427a9c:	mov	x21, x3
  427aa0:	mov	x0, x3
  427aa4:	bl	402630 <strlen@plt>
  427aa8:	mov	x20, x0
  427aac:	ldp	x0, x1, [x19, #8]
  427ab0:	add	x1, x1, #0x1
  427ab4:	add	x1, x1, x20
  427ab8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  427abc:	ldr	x3, [x19, #16]
  427ac0:	str	x0, [x19, #8]
  427ac4:	mov	x2, x20
  427ac8:	mov	x1, x21
  427acc:	add	x0, x0, x3
  427ad0:	bl	4025d0 <memcpy@plt>
  427ad4:	ldp	x0, x2, [x19, #8]
  427ad8:	add	x20, x20, x2
  427adc:	str	x20, [x19, #16]
  427ae0:	strb	wzr, [x0, x20]
  427ae4:	mov	w0, #0x1                   	// #1
  427ae8:	ldp	x19, x20, [sp, #16]
  427aec:	ldr	x21, [sp, #32]
  427af0:	ldp	x29, x30, [sp], #48
  427af4:	ret
  427af8:	mov	w0, #0x0                   	// #0
  427afc:	b	427ae8 <nftw@plt+0x24df8>
  427b00:	ldr	x1, [x0, #16]
  427b04:	cbz	x1, 427b20 <nftw@plt+0x24e30>
  427b08:	ldr	x0, [x0, #8]
  427b0c:	add	x0, x0, x1
  427b10:	ldurb	w0, [x0, #-1]
  427b14:	cmp	w0, #0xa
  427b18:	cset	w0, eq  // eq = none
  427b1c:	ret
  427b20:	mov	w0, #0x0                   	// #0
  427b24:	b	427b1c <nftw@plt+0x24e2c>
  427b28:	stp	x29, x30, [sp, #-128]!
  427b2c:	mov	x29, sp
  427b30:	stp	x19, x20, [sp, #16]
  427b34:	mov	x19, x0
  427b38:	mov	w20, w2
  427b3c:	stp	x21, x22, [sp, #32]
  427b40:	mov	w21, w1
  427b44:	str	x23, [sp, #48]
  427b48:	mov	x23, x3
  427b4c:	bl	427980 <nftw@plt+0x24c90>
  427b50:	tst	w0, #0xff
  427b54:	b.ne	427c74 <nftw@plt+0x24f84>  // b.any
  427b58:	mov	w1, w20
  427b5c:	mov	x0, x19
  427b60:	bl	427980 <nftw@plt+0x24c90>
  427b64:	tst	w0, #0xff
  427b68:	b.ne	427c74 <nftw@plt+0x24f84>  // b.any
  427b6c:	add	x8, sp, #0x40
  427b70:	mov	w0, w21
  427b74:	mov	w1, #0x1                   	// #1
  427b78:	bl	4117e4 <nftw@plt+0xeaf4>
  427b7c:	mov	w0, w20
  427b80:	mov	w1, #0x1                   	// #1
  427b84:	ldr	w22, [sp, #76]
  427b88:	add	x8, sp, #0x60
  427b8c:	bl	4117e4 <nftw@plt+0xeaf4>
  427b90:	ldr	x1, [sp, #64]
  427b94:	ldr	x0, [sp, #96]
  427b98:	cmp	x1, x0
  427b9c:	b.eq	427bb8 <nftw@plt+0x24ec8>  // b.none
  427ba0:	mov	x0, x19
  427ba4:	ldp	x19, x20, [sp, #16]
  427ba8:	ldp	x21, x22, [sp, #32]
  427bac:	ldr	x23, [sp, #48]
  427bb0:	ldp	x29, x30, [sp], #128
  427bb4:	b	4278e8 <nftw@plt+0x24bf8>
  427bb8:	ldr	w1, [sp, #72]
  427bbc:	ldr	w0, [sp, #104]
  427bc0:	cmp	w1, w0
  427bc4:	b.ne	427ba0 <nftw@plt+0x24eb0>  // b.any
  427bc8:	ldr	w0, [sp, #108]
  427bcc:	cmp	w0, w22
  427bd0:	b.lt	427ba0 <nftw@plt+0x24eb0>  // b.tstop
  427bd4:	mov	x0, x23
  427bd8:	mov	w1, #0xa                   	// #10
  427bdc:	bl	402ab0 <strchr@plt>
  427be0:	cbz	x0, 427bfc <nftw@plt+0x24f0c>
  427be4:	cmp	w21, w20
  427be8:	b.ne	427ba0 <nftw@plt+0x24eb0>  // b.any
  427bec:	cmp	w22, #0x1
  427bf0:	b.ne	427ba0 <nftw@plt+0x24eb0>  // b.any
  427bf4:	ldrb	w0, [x0, #1]
  427bf8:	cbnz	w0, 427ba0 <nftw@plt+0x24eb0>
  427bfc:	mov	x0, x19
  427c00:	bl	4278a0 <nftw@plt+0x24bb0>
  427c04:	mov	x4, x0
  427c08:	cbnz	x0, 427c4c <nftw@plt+0x24f5c>
  427c0c:	mov	x0, #0x18                  	// #24
  427c10:	bl	43d8a0 <_obstack_memory_used@@Base+0x848>
  427c14:	mov	w2, w20
  427c18:	mov	x22, x0
  427c1c:	mov	w1, w21
  427c20:	mov	x3, x23
  427c24:	bl	4279b8 <nftw@plt+0x24cc8>
  427c28:	add	x20, x19, #0x78
  427c2c:	ldr	w1, [x19, #120]
  427c30:	add	w0, w1, #0x1
  427c34:	str	w0, [x19, #120]
  427c38:	cmp	w1, #0x1
  427c3c:	b.gt	427c88 <nftw@plt+0x24f98>
  427c40:	add	x1, x20, w1, sxtw #3
  427c44:	str	x22, [x1, #8]
  427c48:	b	427c74 <nftw@plt+0x24f84>
  427c4c:	bl	427b00 <nftw@plt+0x24e10>
  427c50:	tst	w0, #0xff
  427c54:	b.ne	427c0c <nftw@plt+0x24f1c>  // b.any
  427c58:	mov	x3, x23
  427c5c:	mov	w2, w20
  427c60:	mov	w1, w21
  427c64:	mov	x0, x4
  427c68:	bl	427a78 <nftw@plt+0x24d88>
  427c6c:	tst	w0, #0xff
  427c70:	b.eq	427c0c <nftw@plt+0x24f1c>  // b.none
  427c74:	ldp	x19, x20, [sp, #16]
  427c78:	ldp	x21, x22, [sp, #32]
  427c7c:	ldr	x23, [sp, #48]
  427c80:	ldp	x29, x30, [sp], #128
  427c84:	ret
  427c88:	ldr	x0, [x20, #32]
  427c8c:	sub	w19, w1, #0x2
  427c90:	cbnz	x0, 427cb4 <nftw@plt+0x24fc4>
  427c94:	mov	w0, #0x10                  	// #16
  427c98:	str	w0, [x20, #24]
  427c9c:	mov	x0, #0x80                  	// #128
  427ca0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  427ca4:	str	x0, [x20, #32]
  427ca8:	ldr	x0, [x20, #32]
  427cac:	str	x22, [x0, w19, sxtw #3]
  427cb0:	b	427c74 <nftw@plt+0x24f84>
  427cb4:	ldr	w1, [x20, #24]
  427cb8:	cmp	w19, w1
  427cbc:	b.lt	427ca8 <nftw@plt+0x24fb8>  // b.tstop
  427cc0:	lsl	w1, w1, #1
  427cc4:	str	w1, [x20, #24]
  427cc8:	sbfiz	x1, x1, #3, #32
  427ccc:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  427cd0:	b	427ca4 <nftw@plt+0x24fb4>
  427cd4:	stp	x29, x30, [sp, #-32]!
  427cd8:	mov	x29, sp
  427cdc:	stp	x19, x20, [sp, #16]
  427ce0:	mov	x19, x0
  427ce4:	mov	x20, x2
  427ce8:	ldr	x0, [x0]
  427cec:	bl	4265d4 <nftw@plt+0x238e4>
  427cf0:	mov	x1, x0
  427cf4:	mov	x3, x20
  427cf8:	mov	w2, w0
  427cfc:	mov	x0, x19
  427d00:	ldp	x19, x20, [sp, #16]
  427d04:	ldp	x29, x30, [sp], #32
  427d08:	b	427b28 <nftw@plt+0x24e38>
  427d0c:	mov	x4, x1
  427d10:	mov	x3, x0
  427d14:	stp	x29, x30, [sp, #-16]!
  427d18:	mov	w1, #0x0                   	// #0
  427d1c:	mov	x29, sp
  427d20:	bl	42761c <nftw@plt+0x2492c>
  427d24:	mov	w1, w0
  427d28:	ldp	x29, x30, [sp], #16
  427d2c:	mov	x2, x4
  427d30:	mov	x0, x3
  427d34:	b	427cd4 <nftw@plt+0x24fe4>
  427d38:	stp	x29, x30, [sp, #-48]!
  427d3c:	mov	x29, sp
  427d40:	stp	x19, x20, [sp, #16]
  427d44:	mov	x19, x0
  427d48:	ldr	x0, [x0]
  427d4c:	str	x21, [sp, #32]
  427d50:	mov	x21, x2
  427d54:	bl	4265d4 <nftw@plt+0x238e4>
  427d58:	lsr	x20, x0, #32
  427d5c:	ldr	x0, [x19]
  427d60:	mov	w1, w20
  427d64:	mov	w2, #0x1                   	// #1
  427d68:	bl	426a04 <nftw@plt+0x23d14>
  427d6c:	cmp	w20, w0
  427d70:	b.ne	427d88 <nftw@plt+0x25098>  // b.any
  427d74:	mov	x0, x19
  427d78:	ldp	x19, x20, [sp, #16]
  427d7c:	ldr	x21, [sp, #32]
  427d80:	ldp	x29, x30, [sp], #48
  427d84:	b	4278e8 <nftw@plt+0x24bf8>
  427d88:	mov	w2, w0
  427d8c:	mov	x3, x21
  427d90:	mov	w1, w0
  427d94:	mov	x0, x19
  427d98:	ldp	x19, x20, [sp, #16]
  427d9c:	ldr	x21, [sp, #32]
  427da0:	ldp	x29, x30, [sp], #48
  427da4:	b	427b28 <nftw@plt+0x24e38>
  427da8:	mov	x4, x1
  427dac:	mov	x3, x0
  427db0:	stp	x29, x30, [sp, #-16]!
  427db4:	mov	w1, #0x0                   	// #0
  427db8:	mov	x29, sp
  427dbc:	bl	42761c <nftw@plt+0x2492c>
  427dc0:	mov	w1, w0
  427dc4:	ldp	x29, x30, [sp], #16
  427dc8:	mov	x2, x4
  427dcc:	mov	x0, x3
  427dd0:	b	427d38 <nftw@plt+0x25048>
  427dd4:	stp	x29, x30, [sp, #-48]!
  427dd8:	mov	x29, sp
  427ddc:	stp	x19, x20, [sp, #16]
  427de0:	mov	x19, x0
  427de4:	mov	x20, x1
  427de8:	ldr	x0, [x0]
  427dec:	stp	x21, x22, [sp, #32]
  427df0:	mov	x22, x2
  427df4:	bl	4266b8 <nftw@plt+0x239c8>
  427df8:	mov	w21, w0
  427dfc:	ldr	x0, [x19]
  427e00:	lsr	x1, x20, #32
  427e04:	bl	4266b8 <nftw@plt+0x239c8>
  427e08:	mov	w20, w0
  427e0c:	mov	w1, w0
  427e10:	mov	w2, #0x1                   	// #1
  427e14:	ldr	x0, [x19]
  427e18:	bl	426a04 <nftw@plt+0x23d14>
  427e1c:	cmp	w20, w0
  427e20:	b.ne	427e38 <nftw@plt+0x25148>  // b.any
  427e24:	mov	x0, x19
  427e28:	ldp	x19, x20, [sp, #16]
  427e2c:	ldp	x21, x22, [sp, #32]
  427e30:	ldp	x29, x30, [sp], #48
  427e34:	b	4278e8 <nftw@plt+0x24bf8>
  427e38:	mov	w2, w0
  427e3c:	mov	x3, x22
  427e40:	mov	w1, w21
  427e44:	mov	x0, x19
  427e48:	ldp	x19, x20, [sp, #16]
  427e4c:	ldp	x21, x22, [sp, #32]
  427e50:	ldp	x29, x30, [sp], #48
  427e54:	b	427b28 <nftw@plt+0x24e38>
  427e58:	adrp	x2, 44d000 <_obstack_memory_used@@Base+0xffa8>
  427e5c:	add	x2, x2, #0xe54
  427e60:	b	427dd4 <nftw@plt+0x250e4>
  427e64:	stp	x29, x30, [sp, #-32]!
  427e68:	mov	x29, sp
  427e6c:	str	x19, [sp, #16]
  427e70:	mov	x19, x0
  427e74:	ldr	x0, [x0]
  427e78:	bl	4265d4 <nftw@plt+0x238e4>
  427e7c:	mov	x1, x0
  427e80:	mov	x0, x19
  427e84:	ldr	x19, [sp, #16]
  427e88:	ldp	x29, x30, [sp], #32
  427e8c:	b	427e58 <nftw@plt+0x25168>
  427e90:	mov	x3, x0
  427e94:	stp	x29, x30, [sp, #-16]!
  427e98:	mov	w1, #0x0                   	// #0
  427e9c:	mov	x29, sp
  427ea0:	bl	42761c <nftw@plt+0x2492c>
  427ea4:	mov	w1, w0
  427ea8:	ldp	x29, x30, [sp], #16
  427eac:	mov	x0, x3
  427eb0:	b	427e64 <nftw@plt+0x25174>
  427eb4:	stp	x29, x30, [sp, #-32]!
  427eb8:	mov	x29, sp
  427ebc:	stp	x19, x20, [sp, #16]
  427ec0:	mov	x19, x0
  427ec4:	mov	x20, x2
  427ec8:	ldr	x0, [x0]
  427ecc:	bl	4265d4 <nftw@plt+0x238e4>
  427ed0:	mov	x1, x0
  427ed4:	mov	x2, x20
  427ed8:	mov	x0, x19
  427edc:	ldp	x19, x20, [sp, #16]
  427ee0:	ldp	x29, x30, [sp], #32
  427ee4:	b	427dd4 <nftw@plt+0x250e4>
  427ee8:	mov	x4, x1
  427eec:	mov	x3, x0
  427ef0:	stp	x29, x30, [sp, #-16]!
  427ef4:	mov	w1, #0x0                   	// #0
  427ef8:	mov	x29, sp
  427efc:	bl	42761c <nftw@plt+0x2492c>
  427f00:	mov	w1, w0
  427f04:	ldp	x29, x30, [sp], #16
  427f08:	mov	x2, x4
  427f0c:	mov	x0, x3
  427f10:	b	427eb4 <nftw@plt+0x251c4>
  427f14:	ldr	w1, [x0, #12]
  427f18:	mov	w2, #0x18                  	// #24
  427f1c:	ldr	x0, [x0]
  427f20:	sub	w1, w1, #0x1
  427f24:	smaddl	x0, w1, w2, x0
  427f28:	ret
  427f2c:	ldrb	w3, [x0, #6]
  427f30:	mov	w2, #0x1                   	// #1
  427f34:	lsl	w2, w2, w3
  427f38:	ldr	w3, [x0]
  427f3c:	sub	w2, w2, #0x1
  427f40:	ldrb	w0, [x0, #7]
  427f44:	sub	w1, w1, w3
  427f48:	and	w2, w2, w1
  427f4c:	lsr	w0, w2, w0
  427f50:	ret
  427f54:	mov	x4, x0
  427f58:	cmp	w2, #0x1
  427f5c:	b.eq	427f74 <nftw@plt+0x25284>  // b.none
  427f60:	ldp	x0, x5, [x0]
  427f64:	cmp	w2, #0x2
  427f68:	csel	x0, x0, x5, ne  // ne = any
  427f6c:	cbnz	x0, 427f84 <nftw@plt+0x25294>
  427f70:	ret
  427f74:	add	x0, x0, #0x10
  427f78:	cbnz	x3, 427fa8 <nftw@plt+0x252b8>
  427f7c:	add	x0, x0, x1, lsl #3
  427f80:	b	427f70 <nftw@plt+0x25280>
  427f84:	cbz	x3, 427f7c <nftw@plt+0x2528c>
  427f88:	cbnz	w2, 427f9c <nftw@plt+0x252ac>
  427f8c:	ldr	x2, [x4, #32]
  427f90:	add	x2, x2, x1, lsl #2
  427f94:	str	x2, [x3]
  427f98:	b	427f7c <nftw@plt+0x2528c>
  427f9c:	b.ne	427fa8 <nftw@plt+0x252b8>  // b.any
  427fa0:	ldr	x2, [x4, #40]
  427fa4:	b	427f90 <nftw@plt+0x252a0>
  427fa8:	ldr	x2, [x0, x1, lsl #3]
  427fac:	b	427f94 <nftw@plt+0x252a4>
  427fb0:	stp	x29, x30, [sp, #-32]!
  427fb4:	mov	x7, x1
  427fb8:	mov	w6, w2
  427fbc:	tst	w5, #0xff
  427fc0:	mov	x29, sp
  427fc4:	mov	x1, x3
  427fc8:	add	x3, sp, #0x18
  427fcc:	mov	w2, w4
  427fd0:	csel	x3, x3, xzr, ne  // ne = any
  427fd4:	str	xzr, [sp, #24]
  427fd8:	bl	427f54 <nftw@plt+0x25264>
  427fdc:	str	x7, [x0]
  427fe0:	ldr	x0, [sp, #24]
  427fe4:	cbz	x0, 427fec <nftw@plt+0x252fc>
  427fe8:	str	w6, [x0]
  427fec:	ldp	x29, x30, [sp], #32
  427ff0:	ret
  427ff4:	and	w1, w1, #0xff
  427ff8:	strb	w1, [x0]
  427ffc:	str	w2, [x0, #4]
  428000:	mov	x6, x0
  428004:	stp	x4, xzr, [x0, #8]
  428008:	cbz	w1, 42803c <nftw@plt+0x2534c>
  42800c:	stp	x29, x30, [sp, #-32]!
  428010:	mov	x0, x3
  428014:	mov	x1, #0x0                   	// #0
  428018:	mov	x29, sp
  42801c:	add	x3, sp, #0x18
  428020:	str	xzr, [sp, #24]
  428024:	bl	427f54 <nftw@plt+0x25264>
  428028:	cbz	x0, 428030 <nftw@plt+0x25340>
  42802c:	ldr	x0, [sp, #24]
  428030:	str	x0, [x6, #16]
  428034:	ldp	x29, x30, [sp], #32
  428038:	ret
  42803c:	ret
  428040:	cbz	x0, 428058 <nftw@plt+0x25368>
  428044:	ldr	w1, [x0, #48]
  428048:	ldr	x0, [x0, #40]
  42804c:	cmp	w1, #0x2
  428050:	b.ne	428058 <nftw@plt+0x25368>  // b.any
  428054:	ldr	x0, [x0]
  428058:	ret
  42805c:	stp	x29, x30, [sp, #-32]!
  428060:	mov	x29, sp
  428064:	str	x19, [sp, #16]
  428068:	mov	x19, x1
  42806c:	bl	42261c <nftw@plt+0x1f92c>
  428070:	strh	wzr, [x0, #6]
  428074:	mov	w1, #0x53                  	// #83
  428078:	strb	w1, [x0, #4]
  42807c:	str	x19, [x0, #8]
  428080:	ldr	x19, [sp, #16]
  428084:	ldp	x29, x30, [sp], #32
  428088:	ret
  42808c:	stp	x29, x30, [sp, #-48]!
  428090:	mov	x29, sp
  428094:	stp	x19, x20, [sp, #16]
  428098:	mov	x20, x0
  42809c:	str	x21, [sp, #32]
  4280a0:	lsl	x21, x1, #3
  4280a4:	cbz	x2, 4280b8 <nftw@plt+0x253c8>
  4280a8:	mov	x19, x2
  4280ac:	lsl	x0, x1, #4
  4280b0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4280b4:	str	x0, [x19]
  4280b8:	mov	x1, x21
  4280bc:	mov	x0, x20
  4280c0:	ldp	x19, x20, [sp, #16]
  4280c4:	ldr	x21, [sp, #32]
  4280c8:	ldp	x29, x30, [sp], #48
  4280cc:	b	4230b4 <nftw@plt+0x203c4>
  4280d0:	stp	x29, x30, [sp, #-32]!
  4280d4:	add	x1, x1, x2
  4280d8:	mov	x29, sp
  4280dc:	ldr	x4, [x0, #56]
  4280e0:	ldr	x3, [x4, #24]
  4280e4:	ldr	x4, [x4, #16]
  4280e8:	str	x19, [sp, #16]
  4280ec:	mov	x19, x0
  4280f0:	sub	x3, x3, x4
  4280f4:	cmp	x3, x1
  4280f8:	b.cs	428104 <nftw@plt+0x25414>  // b.hs, b.nlast
  4280fc:	add	x1, x0, #0x38
  428100:	bl	423260 <nftw@plt+0x20570>
  428104:	ldr	x0, [x19, #56]
  428108:	ldr	x19, [sp, #16]
  42810c:	ldp	x29, x30, [sp], #32
  428110:	ldr	x0, [x0, #16]
  428114:	ret
  428118:	ldr	w1, [x0, #4]
  42811c:	tst	w1, #0xfffffffd
  428120:	b.ne	428144 <nftw@plt+0x25454>  // b.any
  428124:	ldr	x1, [x0, #8]
  428128:	add	x1, x1, #0x8
  42812c:	str	x1, [x0, #8]
  428130:	ldrb	w1, [x0]
  428134:	cbz	w1, 428144 <nftw@plt+0x25454>
  428138:	ldr	x1, [x0, #16]
  42813c:	add	x1, x1, #0x4
  428140:	str	x1, [x0, #16]
  428144:	ret
  428148:	stp	x29, x30, [sp, #-32]!
  42814c:	mov	x29, sp
  428150:	str	x19, [sp, #16]
  428154:	mov	x19, x0
  428158:	ldr	x0, [x0]
  42815c:	ldr	x0, [x0]
  428160:	cbnz	x0, 428188 <nftw@plt+0x25498>
  428164:	mov	x0, #0x38                  	// #56
  428168:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42816c:	ldr	x1, [x19]
  428170:	stp	xzr, xzr, [x0]
  428174:	str	x1, [x0, #8]
  428178:	stp	xzr, xzr, [x0, #16]
  42817c:	stp	xzr, xzr, [x0, #32]
  428180:	str	xzr, [x0, #48]
  428184:	str	x0, [x1]
  428188:	str	x0, [x19]
  42818c:	ldr	x19, [sp, #16]
  428190:	ldp	x29, x30, [sp], #32
  428194:	ret
  428198:	stp	x29, x30, [sp, #-64]!
  42819c:	mov	x6, x0
  4281a0:	mov	x29, sp
  4281a4:	stp	x19, x20, [sp, #16]
  4281a8:	stp	x21, x22, [sp, #32]
  4281ac:	mov	x22, x4
  4281b0:	mov	w21, w5
  4281b4:	stp	x23, x24, [sp, #48]
  4281b8:	mov	x24, x2
  4281bc:	mov	x23, x3
  4281c0:	cbnz	x1, 428218 <nftw@plt+0x25528>
  4281c4:	ldr	x0, [x0, #136]
  4281c8:	bl	428040 <nftw@plt+0x25350>
  4281cc:	mov	x20, x0
  4281d0:	add	x0, x6, #0x88
  4281d4:	bl	428148 <nftw@plt+0x25458>
  4281d8:	mov	x19, x0
  4281dc:	mov	w0, #0x2                   	// #2
  4281e0:	add	x21, x22, w21, uxtw #3
  4281e4:	str	x24, [x19, #32]
  4281e8:	str	w0, [x19, #48]
  4281ec:	mov	x0, #0x18                  	// #24
  4281f0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  4281f4:	stp	x20, x23, [x0]
  4281f8:	str	x23, [x0, #16]
  4281fc:	ldp	x23, x24, [sp, #48]
  428200:	stp	x22, x21, [x19, #16]
  428204:	str	x0, [x19, #40]
  428208:	ldp	x19, x20, [sp, #16]
  42820c:	ldp	x21, x22, [sp, #32]
  428210:	ldp	x29, x30, [sp], #64
  428214:	ret
  428218:	mov	x20, x1
  42821c:	b	4281d0 <nftw@plt+0x254e0>
  428220:	stp	x29, x30, [sp, #-32]!
  428224:	mov	x29, sp
  428228:	stp	x19, x20, [sp, #16]
  42822c:	mov	x19, x1
  428230:	mov	x20, x2
  428234:	bl	42261c <nftw@plt+0x1f92c>
  428238:	ldr	x1, [x19]
  42823c:	ldrb	w1, [x1, #4]
  428240:	strb	w1, [x0, #4]
  428244:	ldr	x1, [x19]
  428248:	ldp	x2, x3, [x1, #8]
  42824c:	stp	x2, x3, [x0, #8]
  428250:	ldrh	w2, [x20]
  428254:	ldr	x1, [x19]
  428258:	tbz	w2, #3, 428278 <nftw@plt+0x25588>
  42825c:	ldrh	w2, [x1, #6]
  428260:	orr	w2, w2, #0x8
  428264:	strh	w2, [x0, #6]
  428268:	str	x0, [x19]
  42826c:	ldp	x19, x20, [sp, #16]
  428270:	ldp	x29, x30, [sp], #32
  428274:	ret
  428278:	ldrh	w2, [x1, #6]
  42827c:	and	w2, w2, #0xfffffff7
  428280:	and	w2, w2, #0xffff
  428284:	b	428264 <nftw@plt+0x25574>
  428288:	stp	x29, x30, [sp, #-64]!
  42828c:	mov	x29, sp
  428290:	stp	x19, x20, [sp, #16]
  428294:	ldr	x19, [x0, #16]
  428298:	str	x23, [sp, #48]
  42829c:	mov	x23, x2
  4282a0:	mov	w2, w3
  4282a4:	mov	w3, w4
  4282a8:	stp	x21, x22, [sp, #32]
  4282ac:	mov	x21, x0
  4282b0:	ldr	x4, [x0, #24]
  4282b4:	cmp	x19, x4
  4282b8:	b.ls	4282d4 <nftw@plt+0x255e4>  // b.plast
  4282bc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4282c0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4282c4:	add	x2, x2, #0x818
  4282c8:	add	x0, x0, #0x82e
  4282cc:	mov	w1, #0x953                 	// #2387
  4282d0:	bl	402d60 <nftw@plt+0x70>
  4282d4:	mov	x22, x1
  4282d8:	cbz	x1, 428304 <nftw@plt+0x25614>
  4282dc:	ldr	x20, [x21, #8]
  4282e0:	mov	x0, x5
  4282e4:	sub	x20, x19, x20
  4282e8:	ubfx	x20, x20, #3, #32
  4282ec:	lsl	x20, x20, #2
  4282f0:	cbz	x5, 428300 <nftw@plt+0x25610>
  4282f4:	mov	w1, w6
  4282f8:	bl	425eec <nftw@plt+0x231fc>
  4282fc:	mov	w2, w0
  428300:	str	w2, [x22, x20]
  428304:	mov	x0, x19
  428308:	ldp	x19, x20, [sp, #16]
  42830c:	str	x23, [x0], #8
  428310:	ldr	x23, [sp, #48]
  428314:	str	x0, [x21, #16]
  428318:	ldp	x21, x22, [sp, #32]
  42831c:	ldp	x29, x30, [sp], #64
  428320:	ret
  428324:	ldrb	w2, [x0, #19]
  428328:	mov	x1, x0
  42832c:	ldr	w0, [x0, #12]
  428330:	tbz	w2, #6, 428354 <nftw@plt+0x25664>
  428334:	mov	x4, #0x18                  	// #24
  428338:	sub	w3, w0, #0x1
  42833c:	cbz	w0, 428354 <nftw@plt+0x25664>
  428340:	mov	w2, w3
  428344:	madd	x2, x2, x4, x1
  428348:	ldrb	w2, [x2, #28]
  42834c:	cmp	w2, #0x26
  428350:	b.eq	428358 <nftw@plt+0x25668>  // b.none
  428354:	ret
  428358:	mov	w0, w3
  42835c:	b	428338 <nftw@plt+0x25648>
  428360:	cbz	x1, 428384 <nftw@plt+0x25694>
  428364:	ldr	x2, [x0, #16]
  428368:	ldr	x0, [x0, #8]
  42836c:	cmp	x2, x0
  428370:	b.eq	428384 <nftw@plt+0x25694>  // b.none
  428374:	sub	x2, x2, #0x8
  428378:	cmp	x1, x2
  42837c:	cset	w0, eq  // eq = none
  428380:	ret
  428384:	mov	w0, #0x0                   	// #0
  428388:	b	428380 <nftw@plt+0x25690>
  42838c:	stp	x29, x30, [sp, #-48]!
  428390:	mov	x29, sp
  428394:	stp	x19, x20, [sp, #16]
  428398:	mov	x20, x0
  42839c:	ldrb	w0, [x1, #18]
  4283a0:	str	x21, [sp, #32]
  4283a4:	and	w0, w0, #0x3
  4283a8:	cmp	w0, #0x2
  4283ac:	b.ne	4283f4 <nftw@plt+0x25704>  // b.any
  4283b0:	ldr	x21, [x1, #24]
  4283b4:	mov	x19, x1
  4283b8:	ldrb	w0, [x21, #19]
  4283bc:	tbnz	w0, #5, 4283f4 <nftw@plt+0x25704>
  4283c0:	ldr	w1, [x21, #8]
  4283c4:	ldr	x0, [x20, #40]
  4283c8:	bl	4262e8 <nftw@plt+0x235f8>
  4283cc:	ldr	w0, [x0, #20]
  4283d0:	cbnz	w0, 4283f4 <nftw@plt+0x25704>
  4283d4:	ldr	w2, [x21, #8]
  4283d8:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4283dc:	ldr	x5, [x19]
  4283e0:	add	x4, x4, #0x843
  4283e4:	mov	x0, x20
  4283e8:	mov	w3, #0x0                   	// #0
  4283ec:	mov	w1, #0xe                   	// #14
  4283f0:	bl	41c240 <nftw@plt+0x19550>
  4283f4:	mov	w0, #0x1                   	// #1
  4283f8:	ldp	x19, x20, [sp, #16]
  4283fc:	ldr	x21, [sp, #32]
  428400:	ldp	x29, x30, [sp], #48
  428404:	ret
  428408:	mov	w2, w2
  42840c:	mov	x4, #0x0                   	// #0
  428410:	mov	w5, #0x5c                  	// #92
  428414:	cmp	x4, x2
  428418:	b.eq	42844c <nftw@plt+0x2575c>  // b.none
  42841c:	ldrb	w3, [x1, x4]
  428420:	cmp	w3, #0x22
  428424:	b.eq	42843c <nftw@plt+0x2574c>  // b.none
  428428:	cmp	w3, #0x5c
  42842c:	b.eq	42843c <nftw@plt+0x2574c>  // b.none
  428430:	cmp	w3, #0xa
  428434:	b.ne	428440 <nftw@plt+0x25750>  // b.any
  428438:	mov	w3, #0x6e                  	// #110
  42843c:	strb	w5, [x0], #1
  428440:	add	x4, x4, #0x1
  428444:	strb	w3, [x0], #1
  428448:	b	428414 <nftw@plt+0x25724>
  42844c:	ret
  428450:	stp	x29, x30, [sp, #-80]!
  428454:	mov	x29, sp
  428458:	stp	x19, x20, [sp, #16]
  42845c:	mov	x19, x0
  428460:	ldr	w0, [x1, #24]
  428464:	stp	x21, x22, [sp, #32]
  428468:	mov	x21, x1
  42846c:	cmp	w0, #0xa
  428470:	stp	x23, x24, [sp, #48]
  428474:	b.hi	428494 <nftw@plt+0x257a4>  // b.pmore
  428478:	mov	w1, w2
  42847c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  428480:	add	x2, x2, #0x20
  428484:	ldrh	w2, [x2, w0, uxtw #1]
  428488:	adr	x3, 428494 <nftw@plt+0x257a4>
  42848c:	add	x2, x3, w2, sxth #2
  428490:	br	x2
  428494:	ldr	x3, [x21]
  428498:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42849c:	mov	x0, x19
  4284a0:	add	x2, x2, #0x85a
  4284a4:	mov	w1, #0x4                   	// #4
  4284a8:	bl	41c014 <nftw@plt+0x19324>
  4284ac:	mov	w20, #0x1                   	// #1
  4284b0:	b	428620 <nftw@plt+0x25930>
  4284b4:	ldrb	w0, [x19, #1134]
  4284b8:	cbz	w0, 4284d4 <nftw@plt+0x257e4>
  4284bc:	ldr	x3, [x21]
  4284c0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4284c4:	mov	x0, x19
  4284c8:	add	x2, x2, #0x876
  4284cc:	mov	w1, #0x14                  	// #20
  4284d0:	bl	41c080 <nftw@plt+0x19390>
  4284d4:	mov	x0, x19
  4284d8:	bl	421304 <nftw@plt+0x1e614>
  4284dc:	ldr	x1, [x0, #88]
  4284e0:	mov	x20, x0
  4284e4:	cbnz	x1, 42853c <nftw@plt+0x2584c>
  4284e8:	bl	42130c <nftw@plt+0x1e61c>
  4284ec:	cbz	x0, 42853c <nftw@plt+0x2584c>
  4284f0:	bl	421288 <nftw@plt+0x1e598>
  4284f4:	cbz	x0, 428548 <nftw@plt+0x25858>
  4284f8:	add	x0, x0, #0x58
  4284fc:	bl	402750 <localtime@plt>
  428500:	cbz	x0, 428548 <nftw@plt+0x25858>
  428504:	bl	402b70 <asctime@plt>
  428508:	mov	x23, x0
  42850c:	bl	402630 <strlen@plt>
  428510:	add	x1, x0, #0x2
  428514:	mov	x22, x0
  428518:	mov	x0, x19
  42851c:	bl	4232e4 <nftw@plt+0x205f4>
  428520:	mov	x21, x0
  428524:	mov	w24, #0x22                  	// #34
  428528:	strb	w24, [x0], #1
  42852c:	mov	x1, x23
  428530:	bl	402b00 <strcpy@plt>
  428534:	strb	w24, [x21, x22]
  428538:	str	x21, [x20, #88]
  42853c:	ldr	x21, [x20, #88]
  428540:	cbnz	x21, 4285d4 <nftw@plt+0x258e4>
  428544:	b	4284ac <nftw@plt+0x257bc>
  428548:	mov	x0, x19
  42854c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428550:	mov	w1, #0x0                   	// #0
  428554:	add	x2, x2, #0x8a3
  428558:	bl	41c4b8 <nftw@plt+0x197c8>
  42855c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428560:	add	x0, x0, #0x8c6
  428564:	str	x0, [x20, #88]
  428568:	b	42853c <nftw@plt+0x2584c>
  42856c:	cmp	w0, #0x2
  428570:	b.ne	4285ec <nftw@plt+0x258fc>  // b.any
  428574:	ldr	x0, [x19, #40]
  428578:	ldr	w1, [x0, #60]
  42857c:	bl	4267ec <nftw@plt+0x23afc>
  428580:	mov	x20, x0
  428584:	ldr	x1, [x19, #1080]
  428588:	cbz	x1, 428598 <nftw@plt+0x258a8>
  42858c:	mov	x0, x20
  428590:	blr	x1
  428594:	mov	x20, x0
  428598:	mov	x0, x20
  42859c:	bl	402630 <strlen@plt>
  4285a0:	lsl	w1, w0, #1
  4285a4:	mov	x22, x0
  4285a8:	add	w1, w1, #0x3
  4285ac:	mov	x0, x19
  4285b0:	bl	4232e4 <nftw@plt+0x205f4>
  4285b4:	mov	x21, x0
  4285b8:	mov	w1, #0x22                  	// #34
  4285bc:	strb	w1, [x0], #1
  4285c0:	mov	w2, w22
  4285c4:	mov	x1, x20
  4285c8:	bl	428408 <nftw@plt+0x25718>
  4285cc:	mov	w1, #0x22                  	// #34
  4285d0:	strh	w1, [x0]
  4285d4:	mov	x0, x21
  4285d8:	ldp	x19, x20, [sp, #16]
  4285dc:	ldp	x21, x22, [sp, #32]
  4285e0:	ldp	x23, x24, [sp, #48]
  4285e4:	ldp	x29, x30, [sp], #80
  4285e8:	ret
  4285ec:	ldr	x0, [x19, #288]
  4285f0:	bl	421280 <nftw@plt+0x1e590>
  4285f4:	mov	x20, x0
  4285f8:	cbnz	x0, 428584 <nftw@plt+0x25894>
  4285fc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428600:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428604:	add	x2, x2, #0x8e1
  428608:	add	x0, x0, #0x82e
  42860c:	mov	w1, #0x1c5                 	// #453
  428610:	bl	402d60 <nftw@plt+0x70>
  428614:	ldr	x0, [x19, #40]
  428618:	ldr	w20, [x0, #48]
  42861c:	sub	w20, w20, #0x1
  428620:	mov	x0, x19
  428624:	mov	x1, #0x15                  	// #21
  428628:	bl	4232e4 <nftw@plt+0x205f4>
  42862c:	mov	x21, x0
  428630:	mov	w2, w20
  428634:	adrp	x1, 450000 <_obstack_memory_used@@Base+0x12fa8>
  428638:	add	x1, x1, #0x1d
  42863c:	bl	4026e0 <sprintf@plt>
  428640:	b	4285d4 <nftw@plt+0x258e4>
  428644:	ldrb	w2, [x19, #1160]
  428648:	ldr	x0, [x19, #40]
  42864c:	cbz	w2, 428664 <nftw@plt+0x25974>
  428650:	ldr	w1, [x0, #60]
  428654:	ldr	x0, [x19, #40]
  428658:	bl	42678c <nftw@plt+0x23a9c>
  42865c:	mov	w20, w0
  428660:	b	428620 <nftw@plt+0x25930>
  428664:	mov	x3, #0x0                   	// #0
  428668:	mov	w2, #0x0                   	// #0
  42866c:	bl	4268c8 <nftw@plt+0x23bd8>
  428670:	mov	w1, w0
  428674:	b	428654 <nftw@plt+0x25964>
  428678:	ldr	x0, [x19]
  42867c:	cbz	x0, 4284ac <nftw@plt+0x257bc>
  428680:	ldrb	w0, [x0, #106]
  428684:	cmp	w0, #0x0
  428688:	cset	w20, eq  // eq = none
  42868c:	b	428620 <nftw@plt+0x25930>
  428690:	ldrb	w0, [x19, #1134]
  428694:	cbz	w0, 4286b0 <nftw@plt+0x259c0>
  428698:	ldr	x3, [x21]
  42869c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4286a0:	mov	x0, x19
  4286a4:	add	x2, x2, #0x876
  4286a8:	mov	w1, #0x14                  	// #20
  4286ac:	bl	41c080 <nftw@plt+0x19390>
  4286b0:	ldr	x0, [x19, #640]
  4286b4:	cbnz	x0, 42874c <nftw@plt+0x25a5c>
  4286b8:	ldr	x0, [x19, #656]
  4286bc:	cmn	x0, #0x2
  4286c0:	b.ne	4286d8 <nftw@plt+0x259e8>  // b.any
  4286c4:	ldr	x1, [x19, #1056]
  4286c8:	cbz	x1, 428760 <nftw@plt+0x25a70>
  4286cc:	mov	x0, x19
  4286d0:	blr	x1
  4286d4:	str	x0, [x19, #656]
  4286d8:	ldr	x0, [x19, #656]
  4286dc:	tbnz	x0, #63, 428760 <nftw@plt+0x25a70>
  4286e0:	add	x0, x19, #0x290
  4286e4:	bl	4028a0 <gmtime@plt>
  4286e8:	mov	x20, x0
  4286ec:	cbz	x0, 428794 <nftw@plt+0x25aa4>
  4286f0:	mov	x1, #0xe                   	// #14
  4286f4:	mov	x0, x19
  4286f8:	bl	4232e4 <nftw@plt+0x205f4>
  4286fc:	ldrsw	x2, [x20, #16]
  428700:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  428704:	add	x1, x1, #0x38
  428708:	ldr	w3, [x20, #12]
  42870c:	ldr	w4, [x20, #20]
  428710:	str	x0, [x19, #640]
  428714:	ldr	x2, [x1, x2, lsl #3]
  428718:	add	w4, w4, #0x76c
  42871c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428720:	add	x1, x1, #0x8f9
  428724:	bl	4026e0 <sprintf@plt>
  428728:	mov	x1, #0xb                   	// #11
  42872c:	mov	x0, x19
  428730:	bl	4232e4 <nftw@plt+0x205f4>
  428734:	ldp	w4, w3, [x20]
  428738:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42873c:	ldr	w2, [x20, #8]
  428740:	add	x1, x1, #0x906
  428744:	str	x0, [x19, #648]
  428748:	bl	4026e0 <sprintf@plt>
  42874c:	ldr	w0, [x21, #24]
  428750:	cmp	w0, #0x1
  428754:	b.ne	4287c4 <nftw@plt+0x25ad4>  // b.any
  428758:	ldr	x21, [x19, #640]
  42875c:	b	428540 <nftw@plt+0x25850>
  428760:	bl	402c20 <__errno_location@plt>
  428764:	mov	x20, x0
  428768:	mov	x0, #0x0                   	// #0
  42876c:	str	wzr, [x20]
  428770:	bl	4027b0 <time@plt>
  428774:	str	x0, [sp, #72]
  428778:	cmn	x0, #0x1
  42877c:	b.ne	428788 <nftw@plt+0x25a98>  // b.any
  428780:	ldr	w0, [x20]
  428784:	cbnz	w0, 428794 <nftw@plt+0x25aa4>
  428788:	add	x0, sp, #0x48
  42878c:	bl	402750 <localtime@plt>
  428790:	b	4286e8 <nftw@plt+0x259f8>
  428794:	mov	x0, x19
  428798:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42879c:	mov	w1, #0x0                   	// #0
  4287a0:	add	x2, x2, #0x917
  4287a4:	bl	41c4b8 <nftw@plt+0x197c8>
  4287a8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4287ac:	add	x0, x0, #0x939
  4287b0:	str	x0, [x19, #640]
  4287b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4287b8:	add	x0, x0, #0x947
  4287bc:	str	x0, [x19, #648]
  4287c0:	b	42874c <nftw@plt+0x25a5c>
  4287c4:	ldr	x21, [x19, #648]
  4287c8:	b	428540 <nftw@plt+0x25850>
  4287cc:	ldrb	w0, [x19, #1244]
  4287d0:	cbz	w0, 4287f0 <nftw@plt+0x25b00>
  4287d4:	ldrb	w0, [x19, #16]
  4287d8:	cbz	w0, 4287f0 <nftw@plt+0x25b00>
  4287dc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4287e0:	mov	x0, x19
  4287e4:	add	x2, x2, #0x952
  4287e8:	mov	w1, #0x3                   	// #3
  4287ec:	bl	41c014 <nftw@plt+0x19324>
  4287f0:	ldr	w20, [x19, #1376]
  4287f4:	add	w0, w20, #0x1
  4287f8:	str	w0, [x19, #1376]
  4287fc:	b	428620 <nftw@plt+0x25930>
  428800:	ldr	x1, [x19, #1040]
  428804:	mov	x0, x19
  428808:	blr	x1
  42880c:	b	42865c <nftw@plt+0x2596c>
  428810:	ldrh	w4, [x1, #16]
  428814:	cmp	w4, w3
  428818:	b.eq	428900 <nftw@plt+0x25c10>  // b.none
  42881c:	stp	x29, x30, [sp, #-48]!
  428820:	mov	x29, sp
  428824:	stp	x19, x20, [sp, #16]
  428828:	mov	x19, x0
  42882c:	mov	x20, x2
  428830:	str	x21, [sp, #32]
  428834:	mov	x21, x1
  428838:	b.ls	4288e4 <nftw@plt+0x25bf4>  // b.plast
  42883c:	add	w1, w3, #0x1
  428840:	cmp	w4, w1
  428844:	b.ne	42889c <nftw@plt+0x25bac>  // b.any
  428848:	ldrb	w1, [x21, #19]
  42884c:	tbz	w1, #3, 42889c <nftw@plt+0x25bac>
  428850:	ldrb	w2, [x0, #1154]
  428854:	cbz	w2, 42887c <nftw@plt+0x25b8c>
  428858:	tbnz	w1, #4, 42887c <nftw@plt+0x25b8c>
  42885c:	ldrb	w1, [x0, #1167]
  428860:	cbnz	w1, 42887c <nftw@plt+0x25b8c>
  428864:	ldrb	w1, [x0, #1120]
  428868:	cbz	w1, 428890 <nftw@plt+0x25ba0>
  42886c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428870:	add	x2, x2, #0x98f
  428874:	mov	w1, #0x2                   	// #2
  428878:	bl	41c014 <nftw@plt+0x19324>
  42887c:	mov	w0, #0x1                   	// #1
  428880:	ldp	x19, x20, [sp, #16]
  428884:	ldr	x21, [sp, #32]
  428888:	ldp	x29, x30, [sp], #48
  42888c:	ret
  428890:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428894:	add	x2, x2, #0x9da
  428898:	b	428874 <nftw@plt+0x25b84>
  42889c:	mov	w5, w3
  4288a0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4288a4:	ldr	x3, [x20]
  4288a8:	add	x2, x2, #0xa23
  4288ac:	mov	x0, x19
  4288b0:	mov	w1, #0x3                   	// #3
  4288b4:	bl	41c014 <nftw@plt+0x19324>
  4288b8:	ldr	w2, [x21, #8]
  4288bc:	cmp	w2, #0x2
  4288c0:	b.ls	4288dc <nftw@plt+0x25bec>  // b.plast
  4288c4:	ldr	x4, [x20]
  4288c8:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4288cc:	mov	x0, x19
  4288d0:	add	x3, x3, #0xa89
  4288d4:	mov	w1, #0x5                   	// #5
  4288d8:	bl	41c39c <nftw@plt+0x196ac>
  4288dc:	mov	w0, #0x0                   	// #0
  4288e0:	b	428880 <nftw@plt+0x25b90>
  4288e4:	mov	w5, w4
  4288e8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4288ec:	mov	w4, w3
  4288f0:	add	x2, x2, #0xa57
  4288f4:	mov	w1, #0x3                   	// #3
  4288f8:	ldr	x3, [x20]
  4288fc:	b	4288b4 <nftw@plt+0x25bc4>
  428900:	mov	w0, #0x1                   	// #1
  428904:	ret
  428908:	stp	x29, x30, [sp, #-48]!
  42890c:	mov	x4, x0
  428910:	mov	x29, sp
  428914:	stp	x19, x20, [sp, #16]
  428918:	mov	w20, w3
  42891c:	str	x21, [sp, #32]
  428920:	mov	x21, x2
  428924:	cbnz	x1, 428964 <nftw@plt+0x25c74>
  428928:	ldr	x0, [x0, #136]
  42892c:	bl	428040 <nftw@plt+0x25350>
  428930:	mov	x19, x0
  428934:	add	x0, x4, #0x88
  428938:	bl	428148 <nftw@plt+0x25458>
  42893c:	mov	w2, #0x18                  	// #24
  428940:	mov	w1, #0x1                   	// #1
  428944:	stp	xzr, x19, [x0, #32]
  428948:	umaddl	x20, w20, w2, x21
  42894c:	stp	x21, x20, [x0, #16]
  428950:	str	w1, [x0, #48]
  428954:	ldp	x19, x20, [sp, #16]
  428958:	ldr	x21, [sp, #32]
  42895c:	ldp	x29, x30, [sp], #48
  428960:	ret
  428964:	mov	x19, x1
  428968:	b	428934 <nftw@plt+0x25c44>
  42896c:	stp	x29, x30, [sp, #-80]!
  428970:	mov	x29, sp
  428974:	stp	x19, x20, [sp, #16]
  428978:	mov	x19, x0
  42897c:	stp	x21, x22, [sp, #32]
  428980:	str	x23, [sp, #48]
  428984:	mov	w23, w2
  428988:	mov	w2, w3
  42898c:	ldr	w3, [x1, #24]
  428990:	cmp	w3, #0x7
  428994:	b.ne	4289c0 <nftw@plt+0x25cd0>  // b.any
  428998:	ldrb	w1, [x0, #16]
  42899c:	cbnz	w1, 428b08 <nftw@plt+0x25e18>
  4289a0:	mov	w1, w23
  4289a4:	bl	41b9c0 <nftw@plt+0x18cd0>
  4289a8:	mov	sp, x29
  4289ac:	ldp	x19, x20, [sp, #16]
  4289b0:	ldp	x21, x22, [sp, #32]
  4289b4:	ldr	x23, [sp, #48]
  4289b8:	ldp	x29, x30, [sp], #80
  4289bc:	ret
  4289c0:	mov	x20, x1
  4289c4:	bl	428450 <nftw@plt+0x25760>
  4289c8:	mov	x22, x0
  4289cc:	bl	402630 <strlen@plt>
  4289d0:	mov	x21, x0
  4289d4:	add	x0, x0, #0x10
  4289d8:	and	x0, x0, #0xfffffffffffffff0
  4289dc:	mov	x2, x21
  4289e0:	sub	sp, sp, x0
  4289e4:	mov	x1, x22
  4289e8:	mov	x4, sp
  4289ec:	mov	x0, x4
  4289f0:	bl	4025d0 <memcpy@plt>
  4289f4:	mov	x4, x0
  4289f8:	mov	x2, x21
  4289fc:	mov	x1, x4
  428a00:	mov	w0, #0xa                   	// #10
  428a04:	mov	w3, #0x1                   	// #1
  428a08:	strb	w0, [x4, x21]
  428a0c:	mov	x0, x19
  428a10:	bl	41b28c <nftw@plt+0x1859c>
  428a14:	mov	x0, x19
  428a18:	bl	421cec <nftw@plt+0x1effc>
  428a1c:	mov	x0, x19
  428a20:	bl	42261c <nftw@plt+0x1f92c>
  428a24:	str	x0, [x19, #448]
  428a28:	mov	x0, x19
  428a2c:	bl	42401c <nftw@plt+0x2132c>
  428a30:	mov	x21, x0
  428a34:	ldr	x0, [x19, #136]
  428a38:	ldr	w0, [x0, #48]
  428a3c:	str	w23, [x21]
  428a40:	cmp	w0, #0x2
  428a44:	b.ne	428af0 <nftw@plt+0x25e00>  // b.any
  428a48:	add	x2, x29, #0x48
  428a4c:	mov	x1, #0x1                   	// #1
  428a50:	mov	x0, x19
  428a54:	str	xzr, [x29, #72]
  428a58:	bl	42808c <nftw@plt+0x2539c>
  428a5c:	mov	x22, x0
  428a60:	ldr	x0, [x19, #40]
  428a64:	mov	w2, w23
  428a68:	mov	x1, x20
  428a6c:	mov	w3, #0x1                   	// #1
  428a70:	bl	425e4c <nftw@plt+0x2315c>
  428a74:	mov	x5, x0
  428a78:	ldr	x1, [x19, #40]
  428a7c:	mov	x2, x21
  428a80:	mov	x0, x22
  428a84:	mov	w6, #0x0                   	// #0
  428a88:	ldr	w4, [x1, #112]
  428a8c:	ldr	x1, [x29, #72]
  428a90:	mov	w3, w4
  428a94:	bl	428288 <nftw@plt+0x25598>
  428a98:	ldr	x4, [x22, #8]
  428a9c:	mov	x2, x22
  428aa0:	ldr	x3, [x29, #72]
  428aa4:	mov	x1, x20
  428aa8:	mov	x0, x19
  428aac:	mov	w5, #0x1                   	// #1
  428ab0:	bl	428198 <nftw@plt+0x254a8>
  428ab4:	ldr	x0, [x19]
  428ab8:	ldr	x1, [x0]
  428abc:	ldr	x0, [x0, #32]
  428ac0:	cmp	x1, x0
  428ac4:	b.eq	428ae0 <nftw@plt+0x25df0>  // b.none
  428ac8:	ldr	x3, [x20]
  428acc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428ad0:	mov	x0, x19
  428ad4:	add	x2, x2, #0x85a
  428ad8:	mov	w1, #0x4                   	// #4
  428adc:	bl	41c014 <nftw@plt+0x19324>
  428ae0:	mov	x0, x19
  428ae4:	bl	41b37c <nftw@plt+0x1868c>
  428ae8:	mov	w0, #0x1                   	// #1
  428aec:	b	4289a8 <nftw@plt+0x25cb8>
  428af0:	mov	x2, x21
  428af4:	mov	x0, x19
  428af8:	mov	w3, #0x1                   	// #1
  428afc:	mov	x1, #0x0                   	// #0
  428b00:	bl	428908 <nftw@plt+0x25c18>
  428b04:	b	428ab4 <nftw@plt+0x25dc4>
  428b08:	mov	w0, #0x0                   	// #0
  428b0c:	b	4289a8 <nftw@plt+0x25cb8>
  428b10:	stp	x29, x30, [sp, #-48]!
  428b14:	add	x0, x0, #0x88
  428b18:	mov	x29, sp
  428b1c:	stp	x19, x20, [sp, #16]
  428b20:	mov	x20, x1
  428b24:	mov	x19, x2
  428b28:	str	x21, [sp, #32]
  428b2c:	mov	x21, x3
  428b30:	bl	428148 <nftw@plt+0x25458>
  428b34:	str	x19, [x0, #16]
  428b38:	mov	w1, #0x1                   	// #1
  428b3c:	add	x19, x19, x21
  428b40:	stp	xzr, x20, [x0, #32]
  428b44:	str	w1, [x0, #48]
  428b48:	ldr	x21, [sp, #32]
  428b4c:	str	x19, [x0, #24]
  428b50:	ldrh	w0, [x20, #18]
  428b54:	orr	w0, w0, #0x40
  428b58:	strh	w0, [x20, #18]
  428b5c:	ldp	x19, x20, [sp, #16]
  428b60:	ldp	x29, x30, [sp], #48
  428b64:	ret
  428b68:	stp	x29, x30, [sp, #-48]!
  428b6c:	mov	x29, sp
  428b70:	stp	x19, x20, [sp, #16]
  428b74:	ldr	x19, [x0, #136]
  428b78:	stp	x21, x22, [sp, #32]
  428b7c:	mov	x21, x0
  428b80:	add	x0, x0, #0x50
  428b84:	cmp	x19, x0
  428b88:	b.ne	428ba4 <nftw@plt+0x25eb4>  // b.any
  428b8c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428b90:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428b94:	add	x2, x2, #0xaa1
  428b98:	add	x0, x0, #0x82e
  428b9c:	mov	w1, #0x9eb                 	// #2539
  428ba0:	bl	402d60 <nftw@plt+0x70>
  428ba4:	ldr	x20, [x19, #40]
  428ba8:	cbz	x20, 428c24 <nftw@plt+0x25f34>
  428bac:	ldr	w0, [x19, #48]
  428bb0:	cmp	w0, #0x2
  428bb4:	b.ne	428be8 <nftw@plt+0x25ef8>  // b.any
  428bb8:	ldr	x0, [x19, #32]
  428bbc:	ldr	x22, [x20]
  428bc0:	cbz	x0, 428bd0 <nftw@plt+0x25ee0>
  428bc4:	ldr	x0, [x20, #8]
  428bc8:	cbz	x0, 428bd0 <nftw@plt+0x25ee0>
  428bcc:	bl	402a80 <free@plt>
  428bd0:	mov	x0, x20
  428bd4:	bl	402a80 <free@plt>
  428bd8:	str	xzr, [x19, #40]
  428bdc:	mov	x20, #0x0                   	// #0
  428be0:	cbz	x22, 428c0c <nftw@plt+0x25f1c>
  428be4:	mov	x20, x22
  428be8:	ldr	x0, [x19, #8]
  428bec:	bl	428040 <nftw@plt+0x25350>
  428bf0:	cmp	x20, x0
  428bf4:	b.eq	428c0c <nftw@plt+0x25f1c>  // b.none
  428bf8:	ldrh	w0, [x20, #18]
  428bfc:	ubfx	x1, x0, #2, #8
  428c00:	and	w1, w1, #0xffffffef
  428c04:	bfi	w0, w1, #2, #8
  428c08:	strh	w0, [x20, #18]
  428c0c:	ldr	x0, [x21, #184]
  428c10:	cmp	x0, x20
  428c14:	b.ne	428c24 <nftw@plt+0x25f34>  // b.any
  428c18:	ldr	x0, [x19, #8]
  428c1c:	cbnz	x0, 428c24 <nftw@plt+0x25f34>
  428c20:	str	xzr, [x21, #184]
  428c24:	ldr	x0, [x19, #32]
  428c28:	cbz	x0, 428c30 <nftw@plt+0x25f40>
  428c2c:	bl	4232b4 <nftw@plt+0x205c4>
  428c30:	ldr	x0, [x19, #8]
  428c34:	str	x0, [x21, #136]
  428c38:	ldp	x21, x22, [sp, #32]
  428c3c:	str	xzr, [x0]
  428c40:	mov	x0, x19
  428c44:	ldp	x19, x20, [sp, #16]
  428c48:	ldp	x29, x30, [sp], #48
  428c4c:	b	402a80 <free@plt>
  428c50:	ldr	x1, [x0, #136]
  428c54:	ldr	x0, [x1, #40]
  428c58:	ldr	w1, [x1, #48]
  428c5c:	cmp	w1, #0x2
  428c60:	b.ne	428c68 <nftw@plt+0x25f78>  // b.any
  428c64:	ldr	x0, [x0]
  428c68:	cbz	x0, 428c80 <nftw@plt+0x25f90>
  428c6c:	ldr	x0, [x0, #24]
  428c70:	cbz	x0, 428c80 <nftw@plt+0x25f90>
  428c74:	ldrb	w0, [x0, #19]
  428c78:	ubfx	x0, x0, #4, #1
  428c7c:	ret
  428c80:	mov	w0, #0x0                   	// #0
  428c84:	b	428c7c <nftw@plt+0x25f8c>
  428c88:	ldr	w2, [x0, #496]
  428c8c:	add	w2, w2, w1
  428c90:	str	w2, [x0, #496]
  428c94:	sub	w1, w1, #0x1
  428c98:	cmn	w1, #0x1
  428c9c:	b.eq	428cd4 <nftw@plt+0x25fe4>  // b.none
  428ca0:	ldr	x3, [x0, #488]
  428ca4:	ldr	x2, [x0, #448]
  428ca8:	ldr	x4, [x3, #16]
  428cac:	sub	x2, x2, #0x18
  428cb0:	str	x2, [x0, #448]
  428cb4:	cmp	x2, x4
  428cb8:	b.ne	428c94 <nftw@plt+0x25fa4>  // b.any
  428cbc:	ldr	x2, [x3, #8]
  428cc0:	cbz	x2, 428c94 <nftw@plt+0x25fa4>
  428cc4:	str	x2, [x0, #488]
  428cc8:	ldr	x2, [x2, #24]
  428ccc:	str	x2, [x0, #448]
  428cd0:	b	428c94 <nftw@plt+0x25fa4>
  428cd4:	ret
  428cd8:	ldr	x2, [x0, #136]
  428cdc:	ldr	x4, [x2, #8]
  428ce0:	cbnz	x4, 428ce8 <nftw@plt+0x25ff8>
  428ce4:	b	428c88 <nftw@plt+0x25f98>
  428ce8:	stp	x29, x30, [sp, #-16]!
  428cec:	cmp	w1, #0x1
  428cf0:	mov	x29, sp
  428cf4:	b.eq	428d10 <nftw@plt+0x26020>  // b.none
  428cf8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428cfc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428d00:	add	x2, x2, #0xab2
  428d04:	add	x0, x0, #0x82e
  428d08:	mov	w1, #0xb8f                 	// #2959
  428d0c:	bl	402d60 <nftw@plt+0x70>
  428d10:	ldr	w0, [x2, #48]
  428d14:	cmp	w0, #0x1
  428d18:	b.ne	428d30 <nftw@plt+0x26040>  // b.any
  428d1c:	ldr	x0, [x2, #16]
  428d20:	sub	x0, x0, #0x18
  428d24:	str	x0, [x2, #16]
  428d28:	ldp	x29, x30, [sp], #16
  428d2c:	ret
  428d30:	cbnz	w0, 428d40 <nftw@plt+0x26050>
  428d34:	ldr	x0, [x2, #16]
  428d38:	sub	x0, x0, #0x8
  428d3c:	b	428d24 <nftw@plt+0x26034>
  428d40:	cmp	w0, #0x2
  428d44:	b.ne	428d84 <nftw@plt+0x26094>  // b.any
  428d48:	ldr	x0, [x2, #16]
  428d4c:	sub	x0, x0, #0x8
  428d50:	str	x0, [x2, #16]
  428d54:	ldr	x0, [x2, #40]
  428d58:	cbz	x0, 428d6c <nftw@plt+0x2607c>
  428d5c:	ldr	x1, [x0, #16]
  428d60:	sub	x1, x1, #0x4
  428d64:	str	x1, [x0, #16]
  428d68:	b	428d28 <nftw@plt+0x26038>
  428d6c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428d70:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428d74:	add	x2, x2, #0xab2
  428d78:	add	x0, x0, #0x82e
  428d7c:	mov	w1, #0xb9e                 	// #2974
  428d80:	bl	402d60 <nftw@plt+0x70>
  428d84:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428d88:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428d8c:	add	x2, x2, #0xab2
  428d90:	add	x0, x0, #0x82e
  428d94:	mov	w1, #0xba1                 	// #2977
  428d98:	bl	402d60 <nftw@plt+0x70>
  428d9c:	stp	x29, x30, [sp, #-80]!
  428da0:	mov	x29, sp
  428da4:	stp	x19, x20, [sp, #16]
  428da8:	mov	x19, x0
  428dac:	ldr	x0, [x2]
  428db0:	stp	x21, x22, [sp, #32]
  428db4:	mov	x21, x2
  428db8:	mov	x22, x3
  428dbc:	stp	x23, x24, [sp, #48]
  428dc0:	mov	w23, w1
  428dc4:	stp	x25, x26, [sp, #64]
  428dc8:	bl	4227c0 <nftw@plt+0x1fad0>
  428dcc:	mov	w20, w0
  428dd0:	mov	x0, x22
  428dd4:	bl	4227c0 <nftw@plt+0x1fad0>
  428dd8:	add	w20, w20, w0
  428ddc:	mov	w3, #0x1                   	// #1
  428de0:	add	w20, w20, #0x1
  428de4:	mov	x0, x19
  428de8:	add	x20, x20, #0xf
  428dec:	ldr	x1, [x21]
  428df0:	and	x20, x20, #0x1fffffff0
  428df4:	sub	sp, sp, x20
  428df8:	mov	x25, sp
  428dfc:	mov	x2, x25
  428e00:	bl	422878 <nftw@plt+0x1fb88>
  428e04:	mov	x24, x0
  428e08:	ldr	x0, [x21]
  428e0c:	ldrb	w0, [x0, #4]
  428e10:	cmp	w0, #0x7
  428e14:	b.ne	428f24 <nftw@plt+0x26234>  // b.any
  428e18:	ldrb	w0, [x22, #4]
  428e1c:	mov	x2, x24
  428e20:	cbz	w0, 428e2c <nftw@plt+0x2613c>
  428e24:	mov	w0, #0x20                  	// #32
  428e28:	strb	w0, [x2], #1
  428e2c:	ldrb	w0, [x22, #4]
  428e30:	cmp	w0, #0x53
  428e34:	b.eq	428e4c <nftw@plt+0x2615c>  // b.none
  428e38:	mov	x1, x22
  428e3c:	mov	x0, x19
  428e40:	mov	w3, #0x1                   	// #1
  428e44:	bl	422878 <nftw@plt+0x1fb88>
  428e48:	mov	x2, x0
  428e4c:	mov	x1, x25
  428e50:	mov	w0, #0xa                   	// #10
  428e54:	strb	w0, [x2]
  428e58:	sub	x2, x2, x25
  428e5c:	mov	w3, #0x1                   	// #1
  428e60:	mov	x0, x19
  428e64:	bl	41b28c <nftw@plt+0x1859c>
  428e68:	mov	x0, x19
  428e6c:	bl	421cec <nftw@plt+0x1effc>
  428e70:	mov	x0, x19
  428e74:	bl	42261c <nftw@plt+0x1f92c>
  428e78:	str	x0, [x19, #448]
  428e7c:	mov	x0, x19
  428e80:	bl	42401c <nftw@plt+0x2132c>
  428e84:	mov	x20, x0
  428e88:	ldr	x0, [x19]
  428e8c:	ldr	x1, [x0]
  428e90:	ldr	x0, [x0, #32]
  428e94:	cmp	x1, x0
  428e98:	b.eq	428f2c <nftw@plt+0x2623c>  // b.none
  428e9c:	ldr	w26, [x20]
  428ea0:	mov	x0, x19
  428ea4:	bl	41b37c <nftw@plt+0x1868c>
  428ea8:	mov	x0, x19
  428eac:	mov	w1, #0x1                   	// #1
  428eb0:	bl	428cd8 <nftw@plt+0x25fe8>
  428eb4:	strb	wzr, [x24]
  428eb8:	ldr	x0, [x21]
  428ebc:	ldp	x2, x3, [x0]
  428ec0:	stp	x2, x3, [x20]
  428ec4:	ldr	x0, [x0, #16]
  428ec8:	str	x0, [x20, #16]
  428ecc:	ldrh	w0, [x20, #6]
  428ed0:	str	x20, [x21]
  428ed4:	and	w0, w0, #0xfffffff7
  428ed8:	strh	w0, [x20, #6]
  428edc:	ldr	w0, [x19, #1116]
  428ee0:	str	w26, [x20]
  428ee4:	cmp	w0, #0x15
  428ee8:	b.eq	428f1c <nftw@plt+0x2622c>  // b.none
  428eec:	mov	x1, x22
  428ef0:	mov	x0, x19
  428ef4:	bl	423e80 <nftw@plt+0x21190>
  428ef8:	mov	x6, x0
  428efc:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428f00:	mov	x5, x25
  428f04:	add	x4, x4, #0xac5
  428f08:	mov	w2, w23
  428f0c:	mov	x0, x19
  428f10:	mov	w3, #0x0                   	// #0
  428f14:	mov	w1, #0x3                   	// #3
  428f18:	bl	41c1d0 <nftw@plt+0x194e0>
  428f1c:	mov	w0, #0x0                   	// #0
  428f20:	b	428f3c <nftw@plt+0x2624c>
  428f24:	mov	x2, x24
  428f28:	b	428e2c <nftw@plt+0x2613c>
  428f2c:	str	x20, [x21]
  428f30:	mov	x0, x19
  428f34:	bl	41b37c <nftw@plt+0x1868c>
  428f38:	mov	w0, #0x1                   	// #1
  428f3c:	mov	sp, x29
  428f40:	ldp	x19, x20, [sp, #16]
  428f44:	ldp	x21, x22, [sp, #32]
  428f48:	ldp	x23, x24, [sp, #48]
  428f4c:	ldp	x25, x26, [sp, #64]
  428f50:	ldp	x29, x30, [sp], #80
  428f54:	ret
  428f58:	ldrb	w1, [x0, #18]
  428f5c:	str	xzr, [x0, #24]
  428f60:	and	w1, w1, #0xfffffffc
  428f64:	strb	w1, [x0, #18]
  428f68:	ldrh	w1, [x0, #18]
  428f6c:	ubfx	x2, x1, #2, #8
  428f70:	and	w2, w2, #0xffffffcf
  428f74:	bfi	w1, w2, #2, #8
  428f78:	strh	w1, [x0, #18]
  428f7c:	ret
  428f80:	stp	x29, x30, [sp, #-64]!
  428f84:	mov	x29, sp
  428f88:	stp	x19, x20, [sp, #16]
  428f8c:	mov	w20, w1
  428f90:	ldrb	w1, [x2, #18]
  428f94:	stp	x21, x22, [sp, #32]
  428f98:	mov	x19, x2
  428f9c:	and	w1, w1, #0x3
  428fa0:	stp	x23, x24, [sp, #48]
  428fa4:	cmp	w1, #0x1
  428fa8:	b.ne	428fd8 <nftw@plt+0x262e8>  // b.any
  428fac:	ldr	x3, [x19]
  428fb0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  428fb4:	mov	w1, #0x3                   	// #3
  428fb8:	add	x2, x2, #0xb05
  428fbc:	bl	41c014 <nftw@plt+0x19324>
  428fc0:	mov	w0, #0x0                   	// #0
  428fc4:	ldp	x19, x20, [sp, #16]
  428fc8:	ldp	x21, x22, [sp, #32]
  428fcc:	ldp	x23, x24, [sp, #48]
  428fd0:	ldp	x29, x30, [sp], #64
  428fd4:	ret
  428fd8:	mov	w22, #0x18                  	// #24
  428fdc:	mov	x21, x0
  428fe0:	ldr	w0, [x0, #512]
  428fe4:	mov	x24, x3
  428fe8:	madd	w22, w20, w22, w22
  428fec:	add	w23, w20, #0x1
  428ff0:	cmp	w0, w22
  428ff4:	b.cs	42900c <nftw@plt+0x2631c>  // b.hs, b.nlast
  428ff8:	ldr	x0, [x21, #504]
  428ffc:	mov	w1, w22
  429000:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  429004:	str	x0, [x21, #504]
  429008:	str	w22, [x21, #512]
  42900c:	mov	w0, #0x18                  	// #24
  429010:	ldr	x2, [x21, #504]
  429014:	umull	x0, w20, w0
  429018:	ubfiz	x20, x20, #3, #32
  42901c:	add	x1, x2, x0
  429020:	str	x19, [x2, x0]
  429024:	mov	x2, #0x8                   	// #8
  429028:	ldr	x0, [x19, #24]
  42902c:	str	x0, [x1, #8]
  429030:	ldrb	w0, [x19, #18]
  429034:	and	w0, w0, #0x3
  429038:	str	w0, [x1, #16]
  42903c:	mov	x1, x20
  429040:	mov	x0, x21
  429044:	bl	4280d0 <nftw@plt+0x253e0>
  429048:	str	x24, [x0, x20]
  42904c:	ldrb	w1, [x19, #18]
  429050:	mov	w0, #0x1                   	// #1
  429054:	strh	w23, [x19, #24]
  429058:	bfxil	w1, w0, #0, #2
  42905c:	strb	w1, [x19, #18]
  429060:	b	428fc4 <nftw@plt+0x262d4>
  429064:	mov	w6, #0x18                  	// #24
  429068:	sub	w1, w1, #0x1
  42906c:	cmn	w1, #0x1
  429070:	b.eq	4290a0 <nftw@plt+0x263b0>  // b.none
  429074:	umull	x2, w1, w6
  429078:	ldr	x4, [x0, #504]
  42907c:	add	x3, x4, x2
  429080:	ldr	x2, [x4, x2]
  429084:	ldr	w5, [x3, #16]
  429088:	ldrb	w4, [x2, #18]
  42908c:	bfxil	w4, w5, #0, #2
  429090:	strb	w4, [x2, #18]
  429094:	ldr	x3, [x3, #8]
  429098:	str	x3, [x2, #24]
  42909c:	b	429068 <nftw@plt+0x26378>
  4290a0:	ret
  4290a4:	mov	x3, x0
  4290a8:	mov	x0, x2
  4290ac:	mov	x5, #0x9300000000000000    	// #-7854277750134145024
  4290b0:	ldr	w2, [x3, #48]
  4290b4:	str	xzr, [x0]
  4290b8:	str	w2, [x0, #8]
  4290bc:	ldur	x4, [x0, #12]
  4290c0:	ldrb	w2, [x3, #1151]
  4290c4:	and	x4, x4, x5
  4290c8:	cmp	w2, #0x0
  4290cc:	cset	x2, eq  // eq = none
  4290d0:	orr	x2, x4, x2, lsl #61
  4290d4:	stur	x2, [x0, #12]
  4290d8:	ldr	x2, [x3]
  4290dc:	cbz	x2, 42910c <nftw@plt+0x2641c>
  4290e0:	ldrb	w2, [x2, #106]
  4290e4:	cmp	w2, #0x0
  4290e8:	cset	w2, ne  // ne = any
  4290ec:	and	w1, w1, #0x3
  4290f0:	mov	w3, #0xffffffec            	// #-20
  4290f4:	orr	w2, w1, w2, lsl #4
  4290f8:	ldrb	w1, [x0, #19]
  4290fc:	and	w1, w1, w3
  429100:	orr	w2, w2, w1
  429104:	strb	w2, [x0, #19]
  429108:	ret
  42910c:	mov	w2, #0x0                   	// #0
  429110:	b	4290ec <nftw@plt+0x263fc>
  429114:	stp	x29, x30, [sp, #-192]!
  429118:	mov	x29, sp
  42911c:	stp	x19, x20, [sp, #16]
  429120:	mov	x19, x0
  429124:	stp	x21, x22, [sp, #32]
  429128:	mov	x22, x1
  42912c:	stp	x23, x24, [sp, #48]
  429130:	stp	x25, x26, [sp, #64]
  429134:	stp	x27, x28, [sp, #80]
  429138:	ldrb	w1, [x0, #1160]
  42913c:	cbz	w1, 4291e4 <nftw@plt+0x264f4>
  429140:	bl	42dbc4 <nftw@plt+0x2aed4>
  429144:	mov	x20, x0
  429148:	cbz	x20, 429b28 <nftw@plt+0x26e38>
  42914c:	ldrb	w0, [x22, #18]
  429150:	tbz	w0, #1, 429a54 <nftw@plt+0x26d64>
  429154:	ldrb	w0, [x19, #1151]
  429158:	cbz	w0, 42916c <nftw@plt+0x2647c>
  42915c:	mov	x1, x22
  429160:	mov	x0, x19
  429164:	mov	x2, #0x0                   	// #0
  429168:	bl	42838c <nftw@plt+0x2569c>
  42916c:	ldrh	w0, [x22, #18]
  429170:	ubfx	x1, x0, #2, #8
  429174:	tbz	w0, #5, 429980 <nftw@plt+0x26c90>
  429178:	ldrb	w0, [x22, #18]
  42917c:	and	w0, w0, #0x3
  429180:	cmp	w0, #0x3
  429184:	b.eq	4299a0 <nftw@plt+0x26cb0>  // b.none
  429188:	mov	w1, #0x0                   	// #0
  42918c:	ldr	w2, [x19, #48]
  429190:	mov	x0, x19
  429194:	ldr	x5, [x22]
  429198:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42919c:	mov	w3, #0x0                   	// #0
  4291a0:	add	x4, x4, #0xd3c
  4291a4:	bl	41c2b4 <nftw@plt+0x195c4>
  4291a8:	tst	w0, #0xff
  4291ac:	b.eq	429a4c <nftw@plt+0x26d5c>  // b.none
  4291b0:	ldrb	w0, [x22, #18]
  4291b4:	and	w0, w0, #0x3
  4291b8:	cmp	w0, #0x2
  4291bc:	b.ne	429a4c <nftw@plt+0x26d5c>  // b.any
  4291c0:	ldr	x0, [x22, #24]
  4291c4:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4291c8:	mov	w3, #0x0                   	// #0
  4291cc:	add	x4, x4, #0xd4b
  4291d0:	mov	w1, #0x5                   	// #5
  4291d4:	ldr	w2, [x0, #8]
  4291d8:	mov	x0, x19
  4291dc:	bl	41c1d0 <nftw@plt+0x194e0>
  4291e0:	b	429a4c <nftw@plt+0x26d5c>
  4291e4:	add	x1, sp, #0x80
  4291e8:	ldr	x20, [x0, #448]
  4291ec:	str	x1, [x0, #448]
  4291f0:	bl	42401c <nftw@plt+0x2132c>
  4291f4:	mov	x21, x0
  4291f8:	ldrh	w0, [x0, #6]
  4291fc:	str	x20, [x19, #448]
  429200:	tbnz	w0, #0, 429480 <nftw@plt+0x26790>
  429204:	ldrb	w0, [x21, #4]
  429208:	cmp	w0, #0x14
  42920c:	b.ne	429438 <nftw@plt+0x26748>  // b.any
  429210:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429214:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429218:	add	x20, x20, #0xbb6
  42921c:	add	x24, x24, #0xb88
  429220:	mov	w25, #0x0                   	// #0
  429224:	mov	w21, #0x0                   	// #0
  429228:	mov	w23, #0x0                   	// #0
  42922c:	mov	x0, x19
  429230:	bl	4254c8 <nftw@plt+0x227d8>
  429234:	ldrb	w2, [x0, #4]
  429238:	mov	x1, x0
  42923c:	cmp	w2, #0x2c
  429240:	b.eq	42936c <nftw@plt+0x2667c>  // b.none
  429244:	b.hi	4292dc <nftw@plt+0x265ec>  // b.pmore
  429248:	cmp	w2, #0x13
  42924c:	b.eq	42935c <nftw@plt+0x2666c>  // b.none
  429250:	cmp	w2, #0x15
  429254:	b.eq	429344 <nftw@plt+0x26654>  // b.none
  429258:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42925c:	add	x0, x0, #0x38
  429260:	ldp	x4, x5, [x0, #96]
  429264:	stp	x4, x5, [sp, #152]
  429268:	ldp	x4, x5, [x0, #112]
  42926c:	stp	x4, x5, [sp, #168]
  429270:	ldr	x0, [x0, #128]
  429274:	str	x0, [sp, #184]
  429278:	cbnz	w25, 429310 <nftw@plt+0x26620>
  42927c:	cmp	w2, #0x16
  429280:	b.ne	429300 <nftw@plt+0x26610>  // b.any
  429284:	add	w21, w21, #0x2
  429288:	mov	x3, #0x0                   	// #0
  42928c:	add	x0, sp, #0x98
  429290:	mov	x20, #0x0                   	// #0
  429294:	mov	w1, #0x3                   	// #3
  429298:	ldr	x2, [x0, w21, uxtw #3]
  42929c:	mov	x0, x19
  4292a0:	bl	41c014 <nftw@plt+0x19324>
  4292a4:	mov	w21, #0x0                   	// #0
  4292a8:	strb	wzr, [x19, #22]
  4292ac:	mov	w1, w23
  4292b0:	mov	x0, x19
  4292b4:	bl	429064 <nftw@plt+0x26374>
  4292b8:	cbnz	w21, 429148 <nftw@plt+0x26458>
  4292bc:	mov	w0, w21
  4292c0:	ldp	x19, x20, [sp, #16]
  4292c4:	ldp	x21, x22, [sp, #32]
  4292c8:	ldp	x23, x24, [sp, #48]
  4292cc:	ldp	x25, x26, [sp, #64]
  4292d0:	ldp	x27, x28, [sp, #80]
  4292d4:	ldp	x29, x30, [sp], #192
  4292d8:	ret
  4292dc:	cmp	w2, #0x35
  4292e0:	b.eq	42931c <nftw@plt+0x2662c>  // b.none
  4292e4:	cmp	w2, #0x4f
  4292e8:	b.ne	429258 <nftw@plt+0x26568>  // b.any
  4292ec:	ldrb	w0, [x19, #1124]
  4292f0:	cbz	w0, 42922c <nftw@plt+0x2653c>
  4292f4:	b	429258 <nftw@plt+0x26568>
  4292f8:	mov	w21, w25
  4292fc:	b	429258 <nftw@plt+0x26568>
  429300:	mov	x0, x19
  429304:	bl	423e80 <nftw@plt+0x21190>
  429308:	mov	x3, x0
  42930c:	b	42928c <nftw@plt+0x2659c>
  429310:	mov	x3, #0x0                   	// #0
  429314:	mov	w21, #0x4                   	// #4
  429318:	b	42928c <nftw@plt+0x2659c>
  42931c:	cbnz	w21, 429258 <nftw@plt+0x26568>
  429320:	cbnz	w25, 429258 <nftw@plt+0x26568>
  429324:	ldp	x2, x3, [x1, #8]
  429328:	mov	x0, x19
  42932c:	mov	w1, w23
  429330:	bl	428f80 <nftw@plt+0x26290>
  429334:	ands	w21, w0, #0xff
  429338:	b.eq	429978 <nftw@plt+0x26c88>  // b.none
  42933c:	add	w23, w23, #0x1
  429340:	b	42922c <nftw@plt+0x2653c>
  429344:	cmp	w23, #0x0
  429348:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  42934c:	b.ne	429b30 <nftw@plt+0x26e40>  // b.any
  429350:	cbnz	w25, 429b30 <nftw@plt+0x26e40>
  429354:	mov	w21, #0x0                   	// #0
  429358:	b	429258 <nftw@plt+0x26568>
  42935c:	cbz	w21, 429258 <nftw@plt+0x26568>
  429360:	cbnz	w25, 4292f8 <nftw@plt+0x26608>
  429364:	mov	w21, #0x0                   	// #0
  429368:	b	42922c <nftw@plt+0x2653c>
  42936c:	cbnz	w25, 429258 <nftw@plt+0x26568>
  429370:	cbnz	w21, 429408 <nftw@plt+0x26718>
  429374:	ldr	x3, [x19, #1272]
  429378:	mov	w1, w23
  42937c:	mov	x0, x19
  429380:	add	w23, w23, #0x1
  429384:	mov	x2, x3
  429388:	bl	428f80 <nftw@plt+0x26290>
  42938c:	mov	w0, #0x1                   	// #1
  429390:	strb	w0, [x19, #22]
  429394:	ldrb	w0, [x19, #1152]
  429398:	cbnz	w0, 4293dc <nftw@plt+0x266ec>
  42939c:	ldrb	w0, [x19, #1154]
  4293a0:	cbz	w0, 4293dc <nftw@plt+0x266ec>
  4293a4:	ldrb	w0, [x19, #1142]
  4293a8:	cbz	w0, 4293dc <nftw@plt+0x266ec>
  4293ac:	ldrb	w1, [x19, #1120]
  4293b0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4293b4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4293b8:	add	x0, x0, #0xb57
  4293bc:	cmp	w1, #0x0
  4293c0:	add	x2, x2, #0xb24
  4293c4:	csel	x2, x2, x0, ne  // ne = any
  4293c8:	mov	w1, #0xa                   	// #10
  4293cc:	mov	x0, x19
  4293d0:	bl	41c0f0 <nftw@plt+0x19400>
  4293d4:	mov	w25, #0x1                   	// #1
  4293d8:	b	42922c <nftw@plt+0x2653c>
  4293dc:	ldrsb	w0, [x19, #1198]
  4293e0:	cmp	w0, #0x0
  4293e4:	b.le	4293d4 <nftw@plt+0x266e4>
  4293e8:	ldrb	w0, [x19, #1120]
  4293ec:	cbnz	w0, 4293d4 <nftw@plt+0x266e4>
  4293f0:	mov	x0, x19
  4293f4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4293f8:	mov	w1, #0x0                   	// #0
  4293fc:	add	x2, x2, #0xb57
  429400:	bl	41c014 <nftw@plt+0x19324>
  429404:	b	4293d4 <nftw@plt+0x266e4>
  429408:	ldrb	w0, [x19, #1154]
  42940c:	cbz	w0, 429430 <nftw@plt+0x26740>
  429410:	ldrb	w0, [x19, #1142]
  429414:	cbz	w0, 429430 <nftw@plt+0x26740>
  429418:	ldrb	w0, [x19, #1120]
  42941c:	mov	w1, #0xa                   	// #10
  429420:	cmp	w0, #0x0
  429424:	mov	x0, x19
  429428:	csel	x2, x24, x20, ne  // ne = any
  42942c:	bl	41c0f0 <nftw@plt+0x19400>
  429430:	mov	w25, w21
  429434:	b	42922c <nftw@plt+0x2653c>
  429438:	cmp	w0, #0x16
  42943c:	b.eq	429480 <nftw@plt+0x26790>  // b.none
  429440:	cmp	w0, #0x4f
  429444:	b.ne	429450 <nftw@plt+0x26760>  // b.any
  429448:	ldrb	w1, [x19, #1124]
  42944c:	cbz	w1, 429480 <nftw@plt+0x26790>
  429450:	ldrb	w1, [x19, #1152]
  429454:	cbz	w1, 429634 <nftw@plt+0x26944>
  429458:	ldrb	w1, [x19, #1120]
  42945c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429460:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429464:	add	x0, x0, #0xc15
  429468:	cmp	w1, #0x0
  42946c:	add	x2, x2, #0xbe2
  429470:	csel	x2, x2, x0, ne  // ne = any
  429474:	mov	w1, #0x2                   	// #2
  429478:	mov	x0, x19
  42947c:	bl	41c014 <nftw@plt+0x19324>
  429480:	mov	w25, #0x0                   	// #0
  429484:	mov	w23, #0x0                   	// #0
  429488:	mov	x24, #0x0                   	// #0
  42948c:	mov	x2, #0x30                  	// #48
  429490:	mov	x1, #0x0                   	// #0
  429494:	mov	x0, x19
  429498:	bl	4280d0 <nftw@plt+0x253e0>
  42949c:	mov	w1, #0x0                   	// #0
  4294a0:	mov	x2, x0
  4294a4:	mov	x0, x19
  4294a8:	bl	4290a4 <nftw@plt+0x263b4>
  4294ac:	mov	x20, x0
  4294b0:	cbnz	x21, 429680 <nftw@plt+0x26990>
  4294b4:	strh	w23, [x0, #16]
  4294b8:	ubfiz	w0, w25, #3, #1
  4294bc:	orr	w0, w0, #0x4
  4294c0:	str	x24, [x20]
  4294c4:	ldrb	w1, [x20, #19]
  4294c8:	and	w1, w1, #0xfffffff3
  4294cc:	orr	w0, w0, w1
  4294d0:	strb	w0, [x20, #19]
  4294d4:	ldrb	w0, [x20, #19]
  4294d8:	mov	w1, #0x1                   	// #1
  4294dc:	str	x19, [sp, #152]
  4294e0:	adrp	x26, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4294e4:	strb	w1, [sp, #160]
  4294e8:	add	x26, x26, #0xae
  4294ec:	ubfx	x0, x0, #3, #1
  4294f0:	strb	w0, [sp, #161]
  4294f4:	strb	wzr, [sp, #162]
  4294f8:	mov	w24, #0x0                   	// #0
  4294fc:	str	wzr, [sp, #164]
  429500:	mov	w25, #0x0                   	// #0
  429504:	str	xzr, [sp, #168]
  429508:	cbnz	x21, 429594 <nftw@plt+0x268a4>
  42950c:	ldr	w1, [x20, #12]
  429510:	mov	x21, #0x18                  	// #24
  429514:	mov	x0, x19
  429518:	mov	x2, x21
  42951c:	madd	x1, x1, x21, x21
  429520:	bl	4280d0 <nftw@plt+0x253e0>
  429524:	mov	x20, x0
  429528:	ldr	x28, [x19, #448]
  42952c:	mov	x0, x19
  429530:	ldr	w2, [x20, #12]
  429534:	madd	x21, x2, x21, x21
  429538:	add	x21, x20, x21
  42953c:	str	x21, [x19, #448]
  429540:	bl	42401c <nftw@plt+0x2132c>
  429544:	ldrb	w1, [x0, #4]
  429548:	str	x28, [x19, #448]
  42954c:	cmp	w1, #0x35
  429550:	b.ne	4296a4 <nftw@plt+0x269b4>  // b.any
  429554:	ldr	x3, [x0, #8]
  429558:	ldrb	w2, [x3, #18]
  42955c:	and	w2, w2, #0x3
  429560:	cmp	w2, #0x1
  429564:	b.ne	4296a4 <nftw@plt+0x269b4>  // b.any
  429568:	mov	w1, #0x50                  	// #80
  42956c:	strb	w1, [x0, #4]
  429570:	ldrh	w1, [x3, #24]
  429574:	str	w1, [x0, #8]
  429578:	ldr	w21, [x20, #12]
  42957c:	add	w0, w21, #0x1
  429580:	str	w0, [x20, #12]
  429584:	mov	w0, w21
  429588:	mov	x21, #0x18                  	// #24
  42958c:	madd	x21, x0, x21, x21
  429590:	add	x21, x20, x21
  429594:	ldr	w1, [x20, #12]
  429598:	cmp	w1, #0x1
  42959c:	b.ls	429618 <nftw@plt+0x26928>  // b.plast
  4295a0:	ldurb	w0, [x21, #-20]
  4295a4:	sub	x4, x21, #0x18
  4295a8:	cmp	w0, #0x25
  4295ac:	b.ne	429618 <nftw@plt+0x26928>  // b.any
  4295b0:	ldrb	w0, [x20, #19]
  4295b4:	tbz	w0, #2, 429618 <nftw@plt+0x26928>
  4295b8:	ldrb	w0, [x21, #4]
  4295bc:	cmp	w0, #0x50
  4295c0:	b.ne	4297d0 <nftw@plt+0x26ae0>  // b.any
  4295c4:	ldrh	w0, [x21, #6]
  4295c8:	tbz	w0, #0, 4295d4 <nftw@plt+0x268e4>
  4295cc:	orr	w0, w0, #0x200
  4295d0:	strh	w0, [x21, #6]
  4295d4:	ldrh	w2, [x4, #6]
  4295d8:	tbz	w2, #1, 4295e8 <nftw@plt+0x268f8>
  4295dc:	ldrh	w0, [x21, #6]
  4295e0:	orr	w0, w0, #0x100
  4295e4:	strh	w0, [x21, #6]
  4295e8:	ldrh	w0, [x21, #6]
  4295ec:	and	w2, w2, #0x1
  4295f0:	sub	w1, w1, #0x1
  4295f4:	and	w0, w0, #0xfffffffe
  4295f8:	orr	w0, w0, #0x4
  4295fc:	orr	w0, w0, w2
  429600:	strh	w0, [x21, #6]
  429604:	ldp	x2, x3, [x21]
  429608:	stp	x2, x3, [x4]
  42960c:	ldr	x0, [x21, #16]
  429610:	str	x0, [x4, #16]
  429614:	str	w1, [x20, #12]
  429618:	ldrb	w0, [x21, #4]
  42961c:	cmp	w0, #0x16
  429620:	b.ne	4298c0 <nftw@plt+0x26bd0>  // b.any
  429624:	cbz	w25, 4297f4 <nftw@plt+0x26b04>
  429628:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42962c:	add	x2, x2, #0xcee
  429630:	b	4297e4 <nftw@plt+0x26af4>
  429634:	cmp	w0, #0x3d
  429638:	b.eq	429664 <nftw@plt+0x26974>  // b.none
  42963c:	b.hi	42965c <nftw@plt+0x2696c>  // b.pmore
  429640:	and	w0, w0, #0xfffffffd
  429644:	cmp	w0, #0x34
  429648:	cset	w1, eq  // eq = none
  42964c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429650:	add	x2, x2, #0xc63
  429654:	lsl	w1, w1, #1
  429658:	b	429478 <nftw@plt+0x26788>
  42965c:	cmp	w0, #0x43
  429660:	b	429648 <nftw@plt+0x26958>
  429664:	ldr	x0, [x21, #16]
  429668:	ldrb	w1, [x0]
  42966c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429670:	add	x0, x0, #0xc46
  429674:	bl	402ab0 <strchr@plt>
  429678:	cmp	x0, #0x0
  42967c:	b	429648 <nftw@plt+0x26958>
  429680:	ldp	x2, x3, [x21]
  429684:	stp	x2, x3, [x20, #24]
  429688:	add	x0, x0, #0x18
  42968c:	ldr	x1, [x21, #16]
  429690:	mov	x21, x0
  429694:	mov	w0, #0x1                   	// #1
  429698:	str	w0, [x20, #12]
  42969c:	str	x1, [x20, #40]
  4296a0:	b	4294d4 <nftw@plt+0x267e4>
  4296a4:	ldrb	w2, [x19, #1138]
  4296a8:	cbz	w2, 429578 <nftw@plt+0x26888>
  4296ac:	ldrh	w2, [x20, #16]
  4296b0:	cbz	w2, 429578 <nftw@plt+0x26888>
  4296b4:	cmp	w1, #0x3e
  4296b8:	b.eq	4296c4 <nftw@plt+0x269d4>  // b.none
  4296bc:	cmp	w1, #0x38
  4296c0:	b.ne	429578 <nftw@plt+0x26888>  // b.any
  4296c4:	ldr	w1, [x0, #8]
  4296c8:	ldr	x2, [x0, #16]
  4296cc:	sub	x1, x1, #0x1
  4296d0:	add	x27, x2, x1
  4296d4:	add	x4, x2, #0x1
  4296d8:	cmp	x27, x4
  4296dc:	b.ls	429578 <nftw@plt+0x26888>  // b.plast
  4296e0:	ldrb	w1, [x4]
  4296e4:	ldrb	w0, [x4]
  4296e8:	ldrh	w1, [x26, x1, lsl #1]
  4296ec:	tbnz	w1, #9, 42978c <nftw@plt+0x26a9c>
  4296f0:	cmp	w0, #0x24
  4296f4:	b.ne	429700 <nftw@plt+0x26a10>  // b.any
  4296f8:	ldrb	w0, [x19, #1146]
  4296fc:	cbnz	w0, 42978c <nftw@plt+0x26a9c>
  429700:	add	x4, x4, #0x1
  429704:	cmp	x27, x4
  429708:	b.ne	4296e0 <nftw@plt+0x269f0>  // b.any
  42970c:	mov	x4, x27
  429710:	mov	x28, x27
  429714:	sub	x2, x28, x4
  429718:	ldrh	w8, [x20, #16]
  42971c:	mov	w7, w2
  429720:	and	x2, x2, #0xffffffff
  429724:	mov	x21, #0x0                   	// #0
  429728:	cmp	w8, w21
  42972c:	b.ls	429784 <nftw@plt+0x26a94>  // b.plast
  429730:	ldr	x0, [x20]
  429734:	ldr	x0, [x0, x21, lsl #3]
  429738:	ldr	w1, [x0, #8]
  42973c:	cmp	w7, w1
  429740:	b.ne	4297c8 <nftw@plt+0x26ad8>  // b.any
  429744:	ldr	x3, [x0]
  429748:	mov	x0, x4
  42974c:	stp	x4, x3, [sp, #96]
  429750:	mov	x1, x3
  429754:	str	x2, [sp, #112]
  429758:	stp	w7, w8, [sp, #120]
  42975c:	bl	4029c0 <memcmp@plt>
  429760:	ldp	w7, w8, [sp, #120]
  429764:	ldp	x4, x3, [sp, #96]
  429768:	ldr	x2, [sp, #112]
  42976c:	cbnz	w0, 4297c8 <nftw@plt+0x26ad8>
  429770:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429774:	mov	w1, #0x6                   	// #6
  429778:	add	x2, x0, #0xc8b
  42977c:	mov	x0, x19
  429780:	bl	41c080 <nftw@plt+0x19390>
  429784:	mov	x4, x28
  429788:	b	4296d8 <nftw@plt+0x269e8>
  42978c:	mov	x28, x4
  429790:	cmp	x27, x28
  429794:	b.ls	429714 <nftw@plt+0x26a24>  // b.plast
  429798:	ldrb	w1, [x28]
  42979c:	mov	w2, #0x204                 	// #516
  4297a0:	ldrb	w0, [x28]
  4297a4:	ldrh	w1, [x26, x1, lsl #1]
  4297a8:	tst	w2, w1
  4297ac:	b.ne	4297c0 <nftw@plt+0x26ad0>  // b.any
  4297b0:	cmp	w0, #0x24
  4297b4:	b.ne	429714 <nftw@plt+0x26a24>  // b.any
  4297b8:	ldrb	w0, [x19, #1146]
  4297bc:	cbz	w0, 429714 <nftw@plt+0x26a24>
  4297c0:	add	x28, x28, #0x1
  4297c4:	b	429790 <nftw@plt+0x26aa0>
  4297c8:	add	x21, x21, #0x1
  4297cc:	b	429728 <nftw@plt+0x26a38>
  4297d0:	ldr	w0, [x19, #1116]
  4297d4:	cmp	w0, #0x15
  4297d8:	b.eq	429618 <nftw@plt+0x26928>  // b.none
  4297dc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  4297e0:	add	x2, x2, #0xcc5
  4297e4:	mov	x0, x19
  4297e8:	mov	w1, #0x3                   	// #3
  4297ec:	bl	41c014 <nftw@plt+0x19324>
  4297f0:	b	4292a4 <nftw@plt+0x265b4>
  4297f4:	ldrb	w0, [sp, #161]
  4297f8:	cbz	w0, 42981c <nftw@plt+0x26b2c>
  4297fc:	ldr	w0, [sp, #164]
  429800:	cbz	w0, 429824 <nftw@plt+0x26b34>
  429804:	ldr	w2, [sp, #172]
  429808:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42980c:	ldr	x0, [sp, #152]
  429810:	add	x3, x3, #0xd24
  429814:	mov	w1, #0x3                   	// #3
  429818:	bl	41c39c <nftw@plt+0x196ac>
  42981c:	ldr	w0, [sp, #164]
  429820:	cbnz	w0, 4292a4 <nftw@plt+0x265b4>
  429824:	ldr	w1, [x20, #12]
  429828:	mov	x0, #0x18                  	// #24
  42982c:	sub	w1, w1, #0x1
  429830:	str	w1, [x20, #12]
  429834:	madd	x1, x1, x0, x0
  429838:	mov	x0, x19
  42983c:	bl	425764 <nftw@plt+0x22a74>
  429840:	mov	x20, x0
  429844:	ldr	w0, [x0, #12]
  429848:	cbnz	w0, 429938 <nftw@plt+0x26c48>
  42984c:	cbz	w24, 429970 <nftw@plt+0x26c80>
  429850:	mov	w21, #0x18                  	// #24
  429854:	mov	x1, #0x0                   	// #0
  429858:	mov	x0, x19
  42985c:	umull	x24, w24, w21
  429860:	mov	x2, x24
  429864:	bl	4280d0 <nftw@plt+0x253e0>
  429868:	add	x7, x20, #0x18
  42986c:	mov	x1, x0
  429870:	mov	w2, w21
  429874:	mov	w3, #0x0                   	// #0
  429878:	mov	w6, #0x0                   	// #0
  42987c:	mov	w5, #0x0                   	// #0
  429880:	ldr	w4, [x20, #12]
  429884:	umaddl	x0, w6, w2, x7
  429888:	cmp	w4, w3
  42988c:	b.eq	42995c <nftw@plt+0x26c6c>  // b.none
  429890:	umaddl	x4, w3, w2, x7
  429894:	ldrb	w8, [x4, #4]
  429898:	cmp	w8, #0x26
  42989c:	ldp	x8, x9, [x4]
  4298a0:	b.ne	429948 <nftw@plt+0x26c58>  // b.any
  4298a4:	umaddl	x0, w5, w2, x1
  4298a8:	add	w5, w5, #0x1
  4298ac:	stp	x8, x9, [x0]
  4298b0:	ldr	x4, [x4, #16]
  4298b4:	str	x4, [x0, #16]
  4298b8:	add	w3, w3, #0x1
  4298bc:	b	429880 <nftw@plt+0x26b90>
  4298c0:	cmp	w0, #0x26
  4298c4:	b.ne	429930 <nftw@plt+0x26c40>  // b.any
  4298c8:	ldr	w0, [x20, #12]
  4298cc:	cmp	w0, #0x1
  4298d0:	b.eq	429628 <nftw@plt+0x26938>  // b.none
  4298d4:	sub	w0, w0, #0x1
  4298d8:	cbz	w25, 4298f8 <nftw@plt+0x26c08>
  4298dc:	add	w24, w24, #0x1
  4298e0:	str	w0, [x21, #8]
  4298e4:	mov	x1, x21
  4298e8:	add	x0, sp, #0x98
  4298ec:	bl	42b6d8 <nftw@plt+0x289e8>
  4298f0:	cbnz	w0, 42950c <nftw@plt+0x2681c>
  4298f4:	b	4292a4 <nftw@plt+0x265b4>
  4298f8:	ldrh	w3, [x21, #6]
  4298fc:	mov	w4, #0x108                 	// #264
  429900:	ldurh	w1, [x21, #-18]
  429904:	str	w0, [x20, #12]
  429908:	tst	x3, #0x2
  42990c:	orr	w0, w1, #0x8
  429910:	orr	w1, w1, w4
  429914:	csel	w0, w0, w1, eq  // eq = none
  429918:	sturh	w0, [x21, #-18]
  42991c:	tbz	w3, #0, 429928 <nftw@plt+0x26c38>
  429920:	orr	w0, w0, #0x200
  429924:	sturh	w0, [x21, #-18]
  429928:	mov	w25, #0x1                   	// #1
  42992c:	b	4298e4 <nftw@plt+0x26bf4>
  429930:	mov	w25, #0x0                   	// #0
  429934:	b	4298e4 <nftw@plt+0x26bf4>
  429938:	ldrh	w0, [x20, #30]
  42993c:	and	w0, w0, #0xfffffffe
  429940:	strh	w0, [x20, #30]
  429944:	b	42984c <nftw@plt+0x26b5c>
  429948:	stp	x8, x9, [x0]
  42994c:	add	w6, w6, #0x1
  429950:	ldr	x4, [x4, #16]
  429954:	str	x4, [x0, #16]
  429958:	b	4298b8 <nftw@plt+0x26bc8>
  42995c:	mov	x2, x24
  429960:	bl	4025d0 <memcpy@plt>
  429964:	ldrb	w0, [x20, #19]
  429968:	orr	w0, w0, #0x40
  42996c:	strb	w0, [x20, #19]
  429970:	mov	w21, #0x1                   	// #1
  429974:	b	4292a8 <nftw@plt+0x265b8>
  429978:	mov	x20, #0x0                   	// #0
  42997c:	b	4292a8 <nftw@plt+0x265b8>
  429980:	ldrb	w0, [x22, #18]
  429984:	and	w0, w0, #0x3
  429988:	cmp	w0, #0x3
  42998c:	b.ne	4299b4 <nftw@plt+0x26cc4>  // b.any
  429990:	ldrb	w0, [x19, #1143]
  429994:	cbz	w0, 429a4c <nftw@plt+0x26d5c>
  429998:	mov	w1, #0xb                   	// #11
  42999c:	b	42918c <nftw@plt+0x2649c>
  4299a0:	ldrh	w0, [x22, #18]
  4299a4:	mov	w1, #0xb                   	// #11
  4299a8:	tst	x0, #0x20
  4299ac:	csel	w1, w1, wzr, eq  // eq = none
  4299b0:	b	42918c <nftw@plt+0x2649c>
  4299b4:	tbnz	w1, #6, 429a4c <nftw@plt+0x26d5c>
  4299b8:	ldr	x24, [x22, #24]
  4299bc:	ldrb	w2, [x24, #18]
  4299c0:	cbz	w2, 4299dc <nftw@plt+0x26cec>
  4299c4:	ldr	x3, [x19, #1048]
  4299c8:	sub	w2, w2, #0x1
  4299cc:	mov	x1, x24
  4299d0:	mov	x0, x19
  4299d4:	blr	x3
  4299d8:	strb	wzr, [x24, #18]
  4299dc:	ldrh	w1, [x24, #16]
  4299e0:	ldrh	w0, [x20, #16]
  4299e4:	cmp	w0, w1
  4299e8:	b.ne	429178 <nftw@plt+0x26488>  // b.any
  4299ec:	ldrb	w1, [x24, #19]
  4299f0:	ldrb	w2, [x20, #19]
  4299f4:	eor	w2, w1, w2
  4299f8:	tst	w2, #0xc
  4299fc:	b.ne	429178 <nftw@plt+0x26488>  // b.any
  429a00:	mov	w2, w0
  429a04:	sub	w0, w0, #0x1
  429a08:	cbz	w2, 429a2c <nftw@plt+0x26d3c>
  429a0c:	ldr	x4, [x20]
  429a10:	ubfiz	x2, x0, #3, #32
  429a14:	ldr	x3, [x24]
  429a18:	ldr	x3, [x3, x2]
  429a1c:	ldr	x2, [x4, x2]
  429a20:	cmp	x3, x2
  429a24:	b.eq	429a00 <nftw@plt+0x26d10>  // b.none
  429a28:	b	429178 <nftw@plt+0x26488>
  429a2c:	and	w1, w1, #0x3
  429a30:	cmp	w1, #0x2
  429a34:	b.ne	429ae8 <nftw@plt+0x26df8>  // b.any
  429a38:	mov	x1, x20
  429a3c:	mov	x0, x24
  429a40:	bl	42de08 <nftw@plt+0x2b118>
  429a44:	tst	w0, #0xff
  429a48:	b.ne	429178 <nftw@plt+0x26488>  // b.any
  429a4c:	mov	x0, x22
  429a50:	bl	428f58 <nftw@plt+0x26268>
  429a54:	ldrb	w0, [x22, #18]
  429a58:	mov	w1, #0x2                   	// #2
  429a5c:	ldr	x19, [x22]
  429a60:	str	x20, [x22, #24]
  429a64:	bfxil	w0, w1, #0, #2
  429a68:	strb	w0, [x22, #18]
  429a6c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429a70:	mov	x0, x19
  429a74:	add	x1, x1, #0xd7b
  429a78:	mov	x2, #0x7                   	// #7
  429a7c:	bl	4027f0 <strncmp@plt>
  429a80:	cbnz	w0, 429acc <nftw@plt+0x26ddc>
  429a84:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429a88:	mov	x0, x19
  429a8c:	add	x1, x1, #0xd83
  429a90:	bl	402a00 <strcmp@plt>
  429a94:	cbz	w0, 429acc <nftw@plt+0x26ddc>
  429a98:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429a9c:	mov	x0, x19
  429aa0:	add	x1, x1, #0xd98
  429aa4:	bl	402a00 <strcmp@plt>
  429aa8:	cbz	w0, 429acc <nftw@plt+0x26ddc>
  429aac:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429ab0:	mov	x0, x19
  429ab4:	add	x1, x1, #0xdac
  429ab8:	bl	402a00 <strcmp@plt>
  429abc:	cbz	w0, 429acc <nftw@plt+0x26ddc>
  429ac0:	ldrh	w0, [x22, #18]
  429ac4:	orr	w0, w0, #0x20
  429ac8:	strh	w0, [x22, #18]
  429acc:	ldrh	w0, [x22, #18]
  429ad0:	mov	w21, #0x1                   	// #1
  429ad4:	ubfx	x1, x0, #2, #8
  429ad8:	and	w1, w1, #0xffffffbf
  429adc:	bfi	w0, w1, #2, #8
  429ae0:	strh	w0, [x22, #18]
  429ae4:	b	4292bc <nftw@plt+0x265cc>
  429ae8:	ldr	w0, [x20, #12]
  429aec:	ldr	w21, [x24, #12]
  429af0:	cmp	w21, w0
  429af4:	b.ne	429178 <nftw@plt+0x26488>  // b.any
  429af8:	sub	w21, w21, #0x1
  429afc:	mov	x23, #0x18                  	// #24
  429b00:	cmn	w21, #0x1
  429b04:	b.eq	429a4c <nftw@plt+0x26d5c>  // b.none
  429b08:	mov	w0, w21
  429b0c:	sub	w21, w21, #0x1
  429b10:	madd	x0, x0, x23, x23
  429b14:	add	x1, x20, x0
  429b18:	add	x0, x24, x0
  429b1c:	bl	422b98 <nftw@plt+0x1fea8>
  429b20:	cbnz	w0, 429b00 <nftw@plt+0x26e10>
  429b24:	b	429178 <nftw@plt+0x26488>
  429b28:	mov	w21, #0x0                   	// #0
  429b2c:	b	4292bc <nftw@plt+0x265cc>
  429b30:	ubfiz	x1, x23, #3, #32
  429b34:	mov	x0, x19
  429b38:	mov	x21, #0x0                   	// #0
  429b3c:	bl	425764 <nftw@plt+0x22a74>
  429b40:	mov	x24, x0
  429b44:	b	42948c <nftw@plt+0x2679c>
  429b48:	ldr	x0, [x1, #24]
  429b4c:	add	w2, w2, #0x1
  429b50:	strb	w2, [x0, #18]
  429b54:	ret
  429b58:	stp	x29, x30, [sp, #-48]!
  429b5c:	mov	x29, sp
  429b60:	stp	x19, x20, [sp, #16]
  429b64:	mov	x19, x0
  429b68:	mov	x20, x1
  429b6c:	str	x21, [sp, #32]
  429b70:	ldrh	w2, [x1, #18]
  429b74:	orr	w2, w2, #0x80
  429b78:	strh	w2, [x1, #18]
  429b7c:	and	w2, w2, #0x3
  429b80:	cmp	w2, #0x2
  429b84:	b.eq	429ba8 <nftw@plt+0x26eb8>  // b.none
  429b88:	cmp	w2, #0x3
  429b8c:	b.eq	429bc8 <nftw@plt+0x26ed8>  // b.none
  429b90:	cbnz	w2, 429bf0 <nftw@plt+0x26f00>
  429b94:	ldr	x3, [x0, #1016]
  429b98:	cbz	x3, 429c08 <nftw@plt+0x26f18>
  429b9c:	mov	x2, x1
  429ba0:	ldr	w1, [x0, #48]
  429ba4:	b	429bdc <nftw@plt+0x26eec>
  429ba8:	ldr	x21, [x1, #24]
  429bac:	ldrb	w2, [x21, #18]
  429bb0:	cbz	w2, 429bc8 <nftw@plt+0x26ed8>
  429bb4:	ldr	x3, [x0, #1048]
  429bb8:	sub	w2, w2, #0x1
  429bbc:	mov	x1, x21
  429bc0:	blr	x3
  429bc4:	strb	wzr, [x21, #18]
  429bc8:	ldr	x3, [x19, #1008]
  429bcc:	cbz	x3, 429c08 <nftw@plt+0x26f18>
  429bd0:	ldr	w1, [x19, #48]
  429bd4:	mov	x2, x20
  429bd8:	mov	x0, x19
  429bdc:	ldp	x19, x20, [sp, #16]
  429be0:	mov	x16, x3
  429be4:	ldr	x21, [sp, #32]
  429be8:	ldp	x29, x30, [sp], #48
  429bec:	br	x16
  429bf0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429bf4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429bf8:	add	x2, x2, #0xdc3
  429bfc:	add	x0, x0, #0x82e
  429c00:	mov	w1, #0xe0b                 	// #3595
  429c04:	bl	402d60 <nftw@plt+0x70>
  429c08:	ldp	x19, x20, [sp, #16]
  429c0c:	ldr	x21, [sp, #32]
  429c10:	ldp	x29, x30, [sp], #48
  429c14:	ret
  429c18:	stp	x29, x30, [sp, #-272]!
  429c1c:	mov	x29, sp
  429c20:	stp	x19, x20, [sp, #16]
  429c24:	mov	x20, x1
  429c28:	mov	x19, x0
  429c2c:	stp	x21, x22, [sp, #32]
  429c30:	mov	w1, #0x1                   	// #1
  429c34:	stp	x23, x24, [sp, #48]
  429c38:	stp	x25, x26, [sp, #64]
  429c3c:	stp	x27, x28, [sp, #80]
  429c40:	strb	wzr, [x0, #19]
  429c44:	strb	w1, [x0, #192]
  429c48:	strb	wzr, [x0, #440]
  429c4c:	ldrb	w0, [x20, #18]
  429c50:	str	x2, [sp, #176]
  429c54:	str	w3, [sp, #200]
  429c58:	and	w0, w0, #0x3
  429c5c:	cmp	w0, #0x2
  429c60:	b.ne	42aec0 <nftw@plt+0x281d0>  // b.any
  429c64:	ldr	x0, [x20, #24]
  429c68:	str	x0, [sp, #104]
  429c6c:	ldrb	w0, [x0, #19]
  429c70:	tbz	w0, #2, 42add8 <nftw@plt+0x280e8>
  429c74:	ldrb	w0, [x19, #24]
  429c78:	mov	x21, #0x0                   	// #0
  429c7c:	strb	w1, [x19, #25]
  429c80:	add	w0, w0, #0x1
  429c84:	strb	w0, [x19, #24]
  429c88:	ldr	w0, [x19, #500]
  429c8c:	add	w0, w0, #0x1
  429c90:	str	w0, [x19, #500]
  429c94:	mov	x0, x19
  429c98:	bl	42b37c <nftw@plt+0x2868c>
  429c9c:	ldrb	w1, [x0, #4]
  429ca0:	cmp	w1, #0x53
  429ca4:	b.ne	429ccc <nftw@plt+0x26fdc>  // b.any
  429ca8:	cbz	x21, 429cc4 <nftw@plt+0x26fd4>
  429cac:	ldrh	w1, [x21, #6]
  429cb0:	tbnz	w1, #0, 429c94 <nftw@plt+0x26fa4>
  429cb4:	ldr	x1, [x0, #8]
  429cb8:	cmp	x1, #0x0
  429cbc:	csel	x21, x21, x0, ne  // ne = any
  429cc0:	b	429c94 <nftw@plt+0x26fa4>
  429cc4:	mov	x21, x0
  429cc8:	b	429c94 <nftw@plt+0x26fa4>
  429ccc:	cmp	w1, #0x14
  429cd0:	b.ne	42a12c <nftw@plt+0x2743c>  // b.any
  429cd4:	mov	w0, #0x2                   	// #2
  429cd8:	strb	w0, [x19, #25]
  429cdc:	mov	w1, #0x1c0                 	// #448
  429ce0:	ldrb	w0, [x19, #1157]
  429ce4:	ldr	x25, [x20, #24]
  429ce8:	str	w0, [sp, #136]
  429cec:	mov	x0, x19
  429cf0:	ldrh	w21, [x25, #16]
  429cf4:	cmp	w21, #0x0
  429cf8:	csinc	w21, w21, wzr, ne  // ne = any
  429cfc:	umull	x1, w21, w1
  429d00:	bl	4230b4 <nftw@plt+0x203c4>
  429d04:	str	x0, [sp, #112]
  429d08:	mov	w2, #0x30                  	// #48
  429d0c:	mov	w1, #0x0                   	// #0
  429d10:	ldr	x26, [x0, #8]
  429d14:	umull	x21, w21, w2
  429d18:	mov	x0, x26
  429d1c:	mov	x2, x21
  429d20:	bl	402840 <memset@plt>
  429d24:	add	x21, x26, x21
  429d28:	ldr	x0, [sp, #112]
  429d2c:	mov	x22, x26
  429d30:	str	wzr, [sp, #124]
  429d34:	mov	x24, x0
  429d38:	str	x21, [x0, #16]
  429d3c:	mov	x21, #0x0                   	// #0
  429d40:	ldr	w0, [sp, #124]
  429d44:	add	w0, w0, #0x1
  429d48:	str	w0, [sp, #124]
  429d4c:	ldr	x0, [x24, #16]
  429d50:	str	x0, [x22]
  429d54:	ldr	w0, [sp, #136]
  429d58:	cbz	w0, 429d68 <nftw@plt+0x27078>
  429d5c:	mov	x0, #0xc8                  	// #200
  429d60:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  429d64:	str	x0, [x22, #32]
  429d68:	mov	w0, #0x32                  	// #50
  429d6c:	mov	w23, #0x0                   	// #0
  429d70:	mov	w27, #0x0                   	// #0
  429d74:	str	w0, [sp, #128]
  429d78:	ldr	x1, [x22]
  429d7c:	add	w0, w23, #0x2
  429d80:	add	w28, w23, #0x2
  429d84:	add	x0, x1, x0, lsl #3
  429d88:	ldr	x1, [x24, #24]
  429d8c:	cmp	x1, x0
  429d90:	b.cs	429db0 <nftw@plt+0x270c0>  // b.hs, b.nlast
  429d94:	mov	x1, x24
  429d98:	mov	x0, x19
  429d9c:	mov	x2, #0x1f40                	// #8000
  429da0:	bl	423150 <nftw@plt+0x20460>
  429da4:	mov	x24, x0
  429da8:	ldr	x0, [x0, #16]
  429dac:	str	x0, [x22]
  429db0:	ldr	w0, [sp, #136]
  429db4:	cbz	w0, 429de0 <nftw@plt+0x270f0>
  429db8:	ldr	w0, [sp, #128]
  429dbc:	cmp	w28, w0
  429dc0:	b.ls	429de0 <nftw@plt+0x270f0>  // b.plast
  429dc4:	add	w0, w0, #0x3e8
  429dc8:	str	w0, [sp, #128]
  429dcc:	ldr	x0, [sp, #128]
  429dd0:	ubfiz	x1, x0, #2, #32
  429dd4:	ldr	x0, [x22, #32]
  429dd8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  429ddc:	str	x0, [x22, #32]
  429de0:	add	x1, sp, #0xf8
  429de4:	mov	x0, x19
  429de8:	bl	42af20 <nftw@plt+0x28230>
  429dec:	mov	x28, x0
  429df0:	ldrb	w0, [x0, #4]
  429df4:	cmp	w0, #0x53
  429df8:	b.ne	429e2c <nftw@plt+0x2713c>  // b.any
  429dfc:	cbz	w23, 429d78 <nftw@plt+0x27088>
  429e00:	ldrb	w0, [x19, #1157]
  429e04:	mov	w3, w23
  429e08:	ldr	w2, [sp, #248]
  429e0c:	mov	x1, x28
  429e10:	cmp	w0, #0x0
  429e14:	add	w23, w23, #0x1
  429e18:	cset	w5, ne  // ne = any
  429e1c:	mov	x0, x22
  429e20:	mov	w4, #0x0                   	// #0
  429e24:	bl	427fb0 <nftw@plt+0x252c0>
  429e28:	b	429d78 <nftw@plt+0x27088>
  429e2c:	cmp	w0, #0x14
  429e30:	b.ne	429e3c <nftw@plt+0x2714c>  // b.any
  429e34:	add	w27, w27, #0x1
  429e38:	b	429e00 <nftw@plt+0x27110>
  429e3c:	cmp	w0, #0x15
  429e40:	b.ne	429e54 <nftw@plt+0x27164>  // b.any
  429e44:	sub	w0, w27, #0x1
  429e48:	cbz	w27, 429e78 <nftw@plt+0x27188>
  429e4c:	mov	w27, w0
  429e50:	b	429e00 <nftw@plt+0x27110>
  429e54:	cmp	w0, #0x13
  429e58:	b.ne	429f54 <nftw@plt+0x27264>  // b.any
  429e5c:	cbnz	w27, 429e00 <nftw@plt+0x27110>
  429e60:	ldrb	w0, [x25, #19]
  429e64:	tbz	w0, #3, 429e78 <nftw@plt+0x27188>
  429e68:	ldrh	w0, [x25, #16]
  429e6c:	ldr	w1, [sp, #124]
  429e70:	cmp	w1, w0
  429e74:	b.eq	429e00 <nftw@plt+0x27110>  // b.none
  429e78:	cbz	w23, 429e94 <nftw@plt+0x271a4>
  429e7c:	ldr	x1, [x22]
  429e80:	sub	w0, w23, #0x1
  429e84:	ldr	x1, [x1, w0, uxtw #3]
  429e88:	ldrb	w1, [x1, #4]
  429e8c:	cmp	w1, #0x53
  429e90:	b.eq	42a024 <nftw@plt+0x27334>  // b.none
  429e94:	ldr	w2, [x19, #688]
  429e98:	add	x1, x19, #0x2b0
  429e9c:	str	w23, [x22, #24]
  429ea0:	mov	w3, w23
  429ea4:	mov	w4, #0x0                   	// #0
  429ea8:	ldrb	w0, [x19, #1157]
  429eac:	cmp	w0, #0x0
  429eb0:	mov	x0, x22
  429eb4:	cset	w5, ne  // ne = any
  429eb8:	bl	427fb0 <nftw@plt+0x252c0>
  429ebc:	ldrh	w1, [x25, #16]
  429ec0:	ldr	w0, [sp, #124]
  429ec4:	cmp	w0, w1
  429ec8:	b.hi	429ee8 <nftw@plt+0x271f8>  // b.pmore
  429ecc:	ldr	x0, [x22]
  429ed0:	add	w23, w23, #0x1
  429ed4:	add	x23, x0, x23, lsl #3
  429ed8:	mov	x0, x22
  429edc:	add	x22, x22, #0x30
  429ee0:	str	x23, [x24, #16]
  429ee4:	csel	x22, x22, x0, ne  // ne = any
  429ee8:	ldrb	w2, [x28, #4]
  429eec:	sub	w0, w2, #0x15
  429ef0:	and	w0, w0, #0xff
  429ef4:	cmp	w0, #0x1
  429ef8:	b.hi	429d40 <nftw@plt+0x27050>  // b.pmore
  429efc:	cmp	w2, #0x16
  429f00:	b.ne	42a02c <nftw@plt+0x2733c>  // b.any
  429f04:	ldr	x0, [x19, #136]
  429f08:	ldr	x0, [x0, #8]
  429f0c:	cbnz	x0, 429f18 <nftw@plt+0x27228>
  429f10:	ldrb	w0, [x19, #16]
  429f14:	cbz	w0, 429f24 <nftw@plt+0x27234>
  429f18:	mov	x0, x19
  429f1c:	mov	w1, #0x1                   	// #1
  429f20:	bl	428cd8 <nftw@plt+0x25fe8>
  429f24:	ldr	x3, [x20]
  429f28:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  429f2c:	mov	x0, x19
  429f30:	add	x2, x2, #0xdd9
  429f34:	mov	w1, #0x3                   	// #3
  429f38:	bl	41c014 <nftw@plt+0x19324>
  429f3c:	ldr	x1, [sp, #112]
  429f40:	mov	x0, x19
  429f44:	bl	423094 <nftw@plt+0x203a4>
  429f48:	str	wzr, [sp, #124]
  429f4c:	str	xzr, [sp, #112]
  429f50:	b	42a0a0 <nftw@plt+0x273b0>
  429f54:	cmp	w0, #0x16
  429f58:	b.eq	429e78 <nftw@plt+0x27188>  // b.none
  429f5c:	cmp	w0, #0x25
  429f60:	b.ne	429f70 <nftw@plt+0x27280>  // b.any
  429f64:	ldrh	w0, [x28, #6]
  429f68:	tbz	w0, #6, 429e00 <nftw@plt+0x27110>
  429f6c:	b	429e78 <nftw@plt+0x27188>
  429f70:	cmp	w0, #0x51
  429f74:	b.ne	429e00 <nftw@plt+0x27110>  // b.any
  429f78:	mov	x0, x19
  429f7c:	bl	42261c <nftw@plt+0x1f92c>
  429f80:	ldp	x2, x3, [x28]
  429f84:	stp	x2, x3, [x0]
  429f88:	ldr	x1, [x28, #16]
  429f8c:	mov	x28, x0
  429f90:	str	x1, [x0, #16]
  429f94:	cbz	x21, 429ff4 <nftw@plt+0x27304>
  429f98:	ldp	x1, x0, [x21, #16]
  429f9c:	sub	x0, x0, x1
  429fa0:	cmp	x0, #0x7
  429fa4:	b.ls	42a008 <nftw@plt+0x27318>  // b.plast
  429fa8:	ldr	x0, [x21, #16]
  429fac:	str	x28, [x0], #8
  429fb0:	str	x0, [x21, #16]
  429fb4:	ldrb	w0, [x28, #4]
  429fb8:	cmp	w0, #0x52
  429fbc:	b.eq	429fdc <nftw@plt+0x272ec>  // b.none
  429fc0:	add	x1, sp, #0xf8
  429fc4:	mov	x0, x19
  429fc8:	bl	42af20 <nftw@plt+0x28230>
  429fcc:	mov	x28, x0
  429fd0:	ldrb	w0, [x0, #4]
  429fd4:	cmp	w0, #0x16
  429fd8:	b.ne	429f94 <nftw@plt+0x272a4>  // b.any
  429fdc:	mov	w0, #0x201                 	// #513
  429fe0:	strh	w0, [x19, #24]
  429fe4:	ldrb	w0, [x28, #4]
  429fe8:	cmp	w0, #0x16
  429fec:	b.eq	429e78 <nftw@plt+0x27188>  // b.none
  429ff0:	b	429d78 <nftw@plt+0x27088>
  429ff4:	mov	x0, x19
  429ff8:	mov	x1, #0x100                 	// #256
  429ffc:	bl	4230b4 <nftw@plt+0x203c4>
  42a000:	mov	x21, x0
  42a004:	b	429fa8 <nftw@plt+0x272b8>
  42a008:	ldr	x0, [x21, #8]
  42a00c:	sub	x1, x1, x0
  42a010:	mov	x0, x19
  42a014:	lsl	x1, x1, #1
  42a018:	bl	4230b4 <nftw@plt+0x203c4>
  42a01c:	str	x21, [x0]
  42a020:	b	42a000 <nftw@plt+0x27310>
  42a024:	mov	w23, w0
  42a028:	b	429e78 <nftw@plt+0x27188>
  42a02c:	ldr	w0, [sp, #124]
  42a030:	cmp	w0, #0x1
  42a034:	b.ne	42a124 <nftw@plt+0x27434>  // b.any
  42a038:	cbnz	w1, 42a124 <nftw@plt+0x27434>
  42a03c:	ldr	w0, [x26, #24]
  42a040:	cmp	w0, #0x0
  42a044:	cset	w22, ne  // ne = any
  42a048:	mov	w3, w22
  42a04c:	mov	x2, x20
  42a050:	mov	x1, x25
  42a054:	mov	x0, x19
  42a058:	bl	428810 <nftw@plt+0x25b20>
  42a05c:	tst	w0, #0xff
  42a060:	b.eq	429f3c <nftw@plt+0x2724c>  // b.none
  42a064:	ldrb	w0, [x25, #19]
  42a068:	tbz	w0, #3, 42a0a0 <nftw@plt+0x273b0>
  42a06c:	ldrh	w1, [x25, #16]
  42a070:	cmp	w22, w1
  42a074:	b.cc	42a090 <nftw@plt+0x273a0>  // b.lo, b.ul, b.last
  42a078:	cmp	w22, #0x1
  42a07c:	b.ne	42a0a0 <nftw@plt+0x273b0>  // b.any
  42a080:	ldr	w0, [x26, #24]
  42a084:	cbnz	w0, 42a0a0 <nftw@plt+0x273b0>
  42a088:	ldrb	w0, [x19, #1153]
  42a08c:	cbnz	w0, 42a0a0 <nftw@plt+0x273b0>
  42a090:	mov	w0, #0x30                  	// #48
  42a094:	mov	x2, #0xffffffffffffffd0    	// #-48
  42a098:	umaddl	x0, w0, w1, x2
  42a09c:	str	xzr, [x26, x0]
  42a0a0:	ldr	w0, [x19, #500]
  42a0a4:	strb	wzr, [x19, #25]
  42a0a8:	sub	w0, w0, #0x1
  42a0ac:	str	w0, [x19, #500]
  42a0b0:	ldrb	w0, [x19, #24]
  42a0b4:	sub	w0, w0, #0x1
  42a0b8:	strb	w0, [x19, #24]
  42a0bc:	ldr	x0, [sp, #112]
  42a0c0:	cbnz	x0, 42a174 <nftw@plt+0x27484>
  42a0c4:	ldrb	w0, [x19, #1138]
  42a0c8:	cbz	w0, 42a0f0 <nftw@plt+0x27400>
  42a0cc:	ldr	x0, [x20, #24]
  42a0d0:	ldrb	w0, [x0, #19]
  42a0d4:	tbnz	w0, #4, 42a0f0 <nftw@plt+0x27400>
  42a0d8:	ldr	x3, [x20]
  42a0dc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42a0e0:	mov	x0, x19
  42a0e4:	add	x2, x2, #0xe08
  42a0e8:	mov	w1, #0x6                   	// #6
  42a0ec:	bl	41c080 <nftw@plt+0x19390>
  42a0f0:	cbz	x21, 42a100 <nftw@plt+0x27410>
  42a0f4:	mov	x1, x21
  42a0f8:	mov	x0, x19
  42a0fc:	bl	423094 <nftw@plt+0x203a4>
  42a100:	mov	w0, #0x0                   	// #0
  42a104:	strb	wzr, [x19, #192]
  42a108:	ldp	x19, x20, [sp, #16]
  42a10c:	ldp	x21, x22, [sp, #32]
  42a110:	ldp	x23, x24, [sp, #48]
  42a114:	ldp	x25, x26, [sp, #64]
  42a118:	ldp	x27, x28, [sp, #80]
  42a11c:	ldp	x29, x30, [sp], #272
  42a120:	ret
  42a124:	ldr	w22, [sp, #124]
  42a128:	b	42a048 <nftw@plt+0x27358>
  42a12c:	cmp	w1, #0x16
  42a130:	b.ne	42a14c <nftw@plt+0x2745c>  // b.any
  42a134:	add	x1, x19, #0x2b0
  42a138:	cmp	x0, x1
  42a13c:	b.eq	42a14c <nftw@plt+0x2745c>  // b.none
  42a140:	mov	x21, #0x0                   	// #0
  42a144:	str	wzr, [sp, #124]
  42a148:	b	429f4c <nftw@plt+0x2725c>
  42a14c:	mov	x0, x19
  42a150:	mov	w1, #0x1                   	// #1
  42a154:	bl	428cd8 <nftw@plt+0x25fe8>
  42a158:	cbz	x21, 42a140 <nftw@plt+0x27450>
  42a15c:	mov	x2, x21
  42a160:	mov	x0, x19
  42a164:	mov	w3, #0x1                   	// #1
  42a168:	mov	x1, #0x0                   	// #0
  42a16c:	bl	428908 <nftw@plt+0x25c18>
  42a170:	b	42a140 <nftw@plt+0x27450>
  42a174:	ldr	x0, [sp, #104]
  42a178:	ldrh	w0, [x0, #16]
  42a17c:	cbz	w0, 42ac7c <nftw@plt+0x27f8c>
  42a180:	ldr	x0, [sp, #112]
  42a184:	str	xzr, [sp, #216]
  42a188:	ldr	x0, [x0, #8]
  42a18c:	str	x0, [sp, #136]
  42a190:	ldr	x0, [sp, #104]
  42a194:	bl	428324 <nftw@plt+0x25634>
  42a198:	mov	w25, w0
  42a19c:	mov	w23, w0
  42a1a0:	ldr	x0, [sp, #104]
  42a1a4:	add	x0, x0, #0x18
  42a1a8:	str	x0, [sp, #128]
  42a1ac:	mov	w0, #0x18                  	// #24
  42a1b0:	ldr	x1, [sp, #128]
  42a1b4:	mov	x24, x1
  42a1b8:	umaddl	x0, w25, w0, x1
  42a1bc:	str	x0, [sp, #160]
  42a1c0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42a1c4:	add	x0, x0, #0xe4e
  42a1c8:	str	x0, [sp, #184]
  42a1cc:	ldr	x0, [sp, #160]
  42a1d0:	cmp	x0, x24
  42a1d4:	b.ls	42a610 <nftw@plt+0x27920>  // b.plast
  42a1d8:	ldrb	w0, [x24, #4]
  42a1dc:	cmp	w0, #0x50
  42a1e0:	b.ne	42a608 <nftw@plt+0x27918>  // b.any
  42a1e4:	ldr	w26, [x24, #8]
  42a1e8:	add	w0, w23, #0x2
  42a1ec:	str	w0, [sp, #144]
  42a1f0:	mov	w0, #0x30                  	// #48
  42a1f4:	sub	w26, w26, #0x1
  42a1f8:	add	w25, w25, #0x2
  42a1fc:	umull	x26, w26, w0
  42a200:	ldr	x0, [sp, #136]
  42a204:	add	x22, x0, x26
  42a208:	ldrh	w0, [x24, #6]
  42a20c:	tbz	w0, #2, 42a494 <nftw@plt+0x277a4>
  42a210:	ldr	x0, [x22, #16]
  42a214:	cbnz	x0, 42a488 <nftw@plt+0x27798>
  42a218:	ldr	x1, [x19, #64]
  42a21c:	ldr	x0, [x1, #24]
  42a220:	ldr	x1, [x1, #16]
  42a224:	sub	x0, x0, x1
  42a228:	cmp	x0, #0x2
  42a22c:	b.hi	42a240 <nftw@plt+0x27550>  // b.pmore
  42a230:	add	x1, x19, #0x40
  42a234:	mov	x0, x19
  42a238:	mov	x2, #0x3                   	// #3
  42a23c:	bl	423260 <nftw@plt+0x20570>
  42a240:	mov	x1, x19
  42a244:	mov	x26, #0x0                   	// #0
  42a248:	mov	w23, #0x0                   	// #0
  42a24c:	str	wzr, [sp, #152]
  42a250:	ldr	x0, [x1, #64]!
  42a254:	str	x1, [sp, #168]
  42a258:	ldr	x28, [x0, #16]
  42a25c:	mov	w0, #0x22                  	// #34
  42a260:	strb	w0, [x28], #1
  42a264:	ldr	w0, [x22, #24]
  42a268:	ldr	w1, [sp, #152]
  42a26c:	cmp	w0, w1
  42a270:	b.ls	42a42c <nftw@plt+0x2773c>  // b.plast
  42a274:	ldr	x0, [x22]
  42a278:	ldr	x27, [x0, w1, uxtw #3]
  42a27c:	ldrb	w0, [x27, #4]
  42a280:	cmp	w0, #0x53
  42a284:	b.ne	42a2b0 <nftw@plt+0x275c0>  // b.any
  42a288:	cbz	x26, 42a29c <nftw@plt+0x275ac>
  42a28c:	ldrh	w0, [x26, #6]
  42a290:	tbnz	w0, #0, 42a2a0 <nftw@plt+0x275b0>
  42a294:	ldr	x0, [x27, #8]
  42a298:	cbnz	x0, 42a2a0 <nftw@plt+0x275b0>
  42a29c:	ldr	x26, [x27, #8]
  42a2a0:	ldr	w0, [sp, #152]
  42a2a4:	add	w0, w0, #0x1
  42a2a8:	str	w0, [sp, #152]
  42a2ac:	b	42a264 <nftw@plt+0x27574>
  42a2b0:	sub	w1, w0, #0x3e
  42a2b4:	and	w1, w1, #0xff
  42a2b8:	cmp	w1, #0x4
  42a2bc:	b.hi	42a3d8 <nftw@plt+0x276e8>  // b.pmore
  42a2c0:	mov	w5, #0x1                   	// #1
  42a2c4:	mov	x0, x27
  42a2c8:	str	w5, [sp, #192]
  42a2cc:	bl	4227c0 <nftw@plt+0x1fad0>
  42a2d0:	mov	w2, w0
  42a2d4:	ldr	w5, [sp, #192]
  42a2d8:	cbz	w5, 42a2e0 <nftw@plt+0x275f0>
  42a2dc:	lsl	x2, x2, #2
  42a2e0:	ldr	x1, [x19, #64]
  42a2e4:	add	x2, x2, #0x3
  42a2e8:	ldr	x0, [x1, #24]
  42a2ec:	sub	x0, x0, x28
  42a2f0:	cmp	x2, x0
  42a2f4:	b.ls	42a328 <nftw@plt+0x27638>  // b.plast
  42a2f8:	ldr	x0, [x1, #16]
  42a2fc:	str	x2, [sp, #192]
  42a300:	ldr	x1, [sp, #168]
  42a304:	sub	x28, x28, x0
  42a308:	mov	x0, x19
  42a30c:	str	w5, [sp, #204]
  42a310:	bl	423260 <nftw@plt+0x20570>
  42a314:	ldr	x0, [x19, #64]
  42a318:	ldr	w5, [sp, #204]
  42a31c:	ldr	x2, [sp, #192]
  42a320:	ldr	x0, [x0, #16]
  42a324:	add	x28, x0, x28
  42a328:	ldr	x1, [x19, #64]
  42a32c:	sub	x0, x28, #0x1
  42a330:	ldr	x1, [x1, #16]
  42a334:	cmp	x1, x0
  42a338:	b.eq	42a35c <nftw@plt+0x2766c>  // b.none
  42a33c:	cmp	x26, #0x0
  42a340:	csel	x26, x26, x27, ne  // ne = any
  42a344:	ldrh	w0, [x26, #6]
  42a348:	tbz	w0, #0, 42a35c <nftw@plt+0x2766c>
  42a34c:	mov	x4, x28
  42a350:	mov	w0, #0x20                  	// #32
  42a354:	strb	w0, [x4], #1
  42a358:	mov	x28, x4
  42a35c:	cbz	w5, 42a404 <nftw@plt+0x27714>
  42a360:	mov	x1, x2
  42a364:	mov	x0, x19
  42a368:	bl	4230b4 <nftw@plt+0x203c4>
  42a36c:	mov	x26, x0
  42a370:	mov	x1, x27
  42a374:	mov	w3, #0x1                   	// #1
  42a378:	mov	x0, x19
  42a37c:	ldr	x6, [x26, #16]
  42a380:	str	x6, [sp, #192]
  42a384:	mov	x2, x6
  42a388:	bl	422878 <nftw@plt+0x1fb88>
  42a38c:	ldr	x6, [sp, #192]
  42a390:	sub	w2, w0, w6
  42a394:	mov	x1, x6
  42a398:	mov	x0, x28
  42a39c:	bl	428408 <nftw@plt+0x25718>
  42a3a0:	mov	x1, x26
  42a3a4:	mov	x28, x0
  42a3a8:	mov	x0, x19
  42a3ac:	bl	423094 <nftw@plt+0x203a4>
  42a3b0:	ldrb	w0, [x27, #4]
  42a3b4:	cmp	w0, #0x3d
  42a3b8:	b.ne	42a420 <nftw@plt+0x27730>  // b.any
  42a3bc:	ldr	x0, [x27, #16]
  42a3c0:	ldrb	w0, [x0]
  42a3c4:	cmp	w0, #0x5c
  42a3c8:	b.ne	42a420 <nftw@plt+0x27730>  // b.any
  42a3cc:	add	w23, w23, #0x1
  42a3d0:	mov	x26, #0x0                   	// #0
  42a3d4:	b	42a2a0 <nftw@plt+0x275b0>
  42a3d8:	sub	w1, w0, #0x38
  42a3dc:	and	w1, w1, #0xff
  42a3e0:	cmp	w1, #0x4
  42a3e4:	b.ls	42a2c0 <nftw@plt+0x275d0>  // b.plast
  42a3e8:	bl	41d550 <nftw@plt+0x1a860>
  42a3ec:	tst	w0, #0xff
  42a3f0:	b.ne	42a2c0 <nftw@plt+0x275d0>  // b.any
  42a3f4:	ldrb	w0, [x27, #4]
  42a3f8:	bl	41d560 <nftw@plt+0x1a870>
  42a3fc:	and	w5, w0, #0xff
  42a400:	b	42a2c4 <nftw@plt+0x275d4>
  42a404:	mov	x2, x28
  42a408:	mov	x1, x27
  42a40c:	mov	x0, x19
  42a410:	mov	w3, #0x1                   	// #1
  42a414:	bl	422878 <nftw@plt+0x1fb88>
  42a418:	mov	x28, x0
  42a41c:	b	42a3b0 <nftw@plt+0x276c0>
  42a420:	mov	x26, #0x0                   	// #0
  42a424:	mov	w23, #0x0                   	// #0
  42a428:	b	42a2a0 <nftw@plt+0x275b0>
  42a42c:	tbz	w23, #0, 42a444 <nftw@plt+0x27754>
  42a430:	ldr	x2, [sp, #184]
  42a434:	mov	x0, x19
  42a438:	sub	x28, x28, #0x1
  42a43c:	mov	w1, #0x0                   	// #0
  42a440:	bl	41c014 <nftw@plt+0x19324>
  42a444:	mov	x4, x28
  42a448:	mov	w0, #0x22                  	// #34
  42a44c:	add	x26, x28, #0x1
  42a450:	strb	w0, [x4], #2
  42a454:	ldr	x0, [x19, #64]
  42a458:	ldr	x23, [x0, #16]
  42a45c:	str	x4, [x0, #16]
  42a460:	mov	x0, x19
  42a464:	sub	x26, x26, x23
  42a468:	bl	42261c <nftw@plt+0x1f92c>
  42a46c:	mov	w1, #0x3e                  	// #62
  42a470:	strb	wzr, [x23, w26, uxtw]
  42a474:	strb	w1, [x0, #4]
  42a478:	strh	wzr, [x0, #6]
  42a47c:	str	w26, [x0, #8]
  42a480:	str	x23, [x0, #16]
  42a484:	str	x0, [x22, #16]
  42a488:	ldr	w23, [sp, #144]
  42a48c:	add	x24, x24, #0x18
  42a490:	b	42a1cc <nftw@plt+0x274dc>
  42a494:	tbnz	w0, #3, 42a4ac <nftw@plt+0x277bc>
  42a498:	ldr	x0, [sp, #128]
  42a49c:	cmp	x0, x24
  42a4a0:	b.eq	42a4c0 <nftw@plt+0x277d0>  // b.none
  42a4a4:	ldurh	w0, [x24, #-18]
  42a4a8:	tbz	w0, #3, 42a4c0 <nftw@plt+0x277d0>
  42a4ac:	ldr	w27, [x22, #24]
  42a4b0:	add	w23, w23, #0x1
  42a4b4:	add	w0, w23, w27
  42a4b8:	str	w0, [sp, #144]
  42a4bc:	b	42a488 <nftw@plt+0x27798>
  42a4c0:	ldr	x0, [x22, #8]
  42a4c4:	cbnz	x0, 42a5fc <nftw@plt+0x2790c>
  42a4c8:	ldr	w0, [x22, #24]
  42a4cc:	cbz	w0, 42a5fc <nftw@plt+0x2790c>
  42a4d0:	ldrb	w0, [x19, #1138]
  42a4d4:	strb	wzr, [x19, #1138]
  42a4d8:	cmp	w0, #0x0
  42a4dc:	ldrb	w27, [x19, #1157]
  42a4e0:	cset	w28, ne  // ne = any
  42a4e4:	mov	x0, #0x800                 	// #2048
  42a4e8:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42a4ec:	str	x0, [x22, #8]
  42a4f0:	ldrb	w0, [x19, #1157]
  42a4f4:	cbz	w0, 42a504 <nftw@plt+0x27814>
  42a4f8:	mov	x0, #0x400                 	// #1024
  42a4fc:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42a500:	str	x0, [x22, #40]
  42a504:	ldr	x0, [sp, #136]
  42a508:	ldr	x4, [x0, x26]
  42a50c:	ldr	w26, [x22, #24]
  42a510:	add	w26, w26, #0x1
  42a514:	cbz	w27, 42a5c4 <nftw@plt+0x278d4>
  42a518:	ldr	x3, [x22, #32]
  42a51c:	mov	w5, w26
  42a520:	mov	x0, x19
  42a524:	mov	x2, #0x0                   	// #0
  42a528:	mov	x1, #0x0                   	// #0
  42a52c:	bl	428198 <nftw@plt+0x254a8>
  42a530:	mov	x26, #0x100                 	// #256
  42a534:	ldr	w27, [x22, #28]
  42a538:	add	w27, w27, #0x1
  42a53c:	cmp	x27, x26
  42a540:	b.ls	42a578 <nftw@plt+0x27888>  // b.plast
  42a544:	ldr	x0, [x22, #8]
  42a548:	lsl	x1, x27, #4
  42a54c:	lsl	x26, x27, #1
  42a550:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42a554:	str	x0, [x22, #8]
  42a558:	ldrb	w0, [x19, #1157]
  42a55c:	cbz	w0, 42a578 <nftw@plt+0x27888>
  42a560:	ldr	x0, [x22, #40]
  42a564:	lsl	x1, x27, #3
  42a568:	cbnz	x0, 42a5e8 <nftw@plt+0x278f8>
  42a56c:	mov	x0, x1
  42a570:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42a574:	str	x0, [x22, #40]
  42a578:	add	x1, sp, #0xf8
  42a57c:	mov	x0, x19
  42a580:	bl	42af20 <nftw@plt+0x28230>
  42a584:	mov	x1, x0
  42a588:	ldrb	w0, [x0, #4]
  42a58c:	cmp	w0, #0x16
  42a590:	b.eq	42a5f0 <nftw@plt+0x27900>  // b.none
  42a594:	ldrb	w0, [x19, #1157]
  42a598:	mov	w4, #0x2                   	// #2
  42a59c:	ldr	w3, [x22, #28]
  42a5a0:	ldr	w2, [sp, #248]
  42a5a4:	cmp	w0, #0x0
  42a5a8:	cset	w5, ne  // ne = any
  42a5ac:	mov	x0, x22
  42a5b0:	bl	427fb0 <nftw@plt+0x252c0>
  42a5b4:	ldr	w0, [x22, #28]
  42a5b8:	add	w0, w0, #0x1
  42a5bc:	str	w0, [x22, #28]
  42a5c0:	b	42a534 <nftw@plt+0x27844>
  42a5c4:	add	x0, x19, #0x88
  42a5c8:	str	x4, [sp, #144]
  42a5cc:	bl	428148 <nftw@plt+0x25458>
  42a5d0:	stp	xzr, xzr, [x0, #32]
  42a5d4:	ldr	x4, [sp, #144]
  42a5d8:	str	wzr, [x0, #48]
  42a5dc:	add	x26, x4, w26, uxtw #3
  42a5e0:	stp	x4, x26, [x0, #16]
  42a5e4:	b	42a530 <nftw@plt+0x27840>
  42a5e8:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42a5ec:	b	42a574 <nftw@plt+0x27884>
  42a5f0:	mov	x0, x19
  42a5f4:	bl	428b68 <nftw@plt+0x25e78>
  42a5f8:	strb	w28, [x19, #1138]
  42a5fc:	ldr	w27, [x22, #28]
  42a600:	add	w23, w23, #0x1
  42a604:	b	42a4b4 <nftw@plt+0x277c4>
  42a608:	str	w23, [sp, #144]
  42a60c:	b	42a488 <nftw@plt+0x27798>
  42a610:	ldrb	w0, [x19, #1157]
  42a614:	add	x2, sp, #0xd8
  42a618:	mov	w1, w23
  42a61c:	str	w0, [sp, #144]
  42a620:	cmp	w0, #0x0
  42a624:	mov	x0, x19
  42a628:	csel	x2, x2, xzr, ne  // ne = any
  42a62c:	bl	42808c <nftw@plt+0x2539c>
  42a630:	mov	x24, x0
  42a634:	ldr	x0, [x0, #8]
  42a638:	str	x0, [sp, #152]
  42a63c:	ldr	w0, [sp, #144]
  42a640:	cbz	w0, 42a760 <nftw@plt+0x27a70>
  42a644:	cmp	w0, #0x1
  42a648:	ldr	w2, [sp, #200]
  42a64c:	ldr	x0, [x19, #40]
  42a650:	csel	w3, w23, w25, ne  // ne = any
  42a654:	mov	x1, x20
  42a658:	bl	425e4c <nftw@plt+0x2315c>
  42a65c:	mov	x27, x0
  42a660:	ldr	x0, [sp, #104]
  42a664:	mov	x2, #0xffffffffffffffd0    	// #-48
  42a668:	ldr	x22, [sp, #128]
  42a66c:	mov	x23, #0x0                   	// #0
  42a670:	ldrh	w3, [x0, #16]
  42a674:	mov	w26, #0x0                   	// #0
  42a678:	ldrb	w1, [x0, #19]
  42a67c:	mov	w0, #0x30                  	// #48
  42a680:	str	x19, [sp, #224]
  42a684:	strb	wzr, [sp, #234]
  42a688:	umaddl	x0, w0, w3, x2
  42a68c:	ubfx	x1, x1, #3, #1
  42a690:	ldr	x2, [sp, #136]
  42a694:	strb	w1, [sp, #233]
  42a698:	str	wzr, [sp, #236]
  42a69c:	add	x0, x2, x0
  42a6a0:	str	xzr, [sp, #240]
  42a6a4:	ldr	w0, [x0, #24]
  42a6a8:	cmp	w0, #0x0
  42a6ac:	cset	w0, ne  // ne = any
  42a6b0:	strb	w0, [sp, #232]
  42a6b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42a6b8:	add	x0, x0, #0xec9
  42a6bc:	str	x0, [sp, #168]
  42a6c0:	ldr	x0, [sp, #160]
  42a6c4:	cmp	x0, x22
  42a6c8:	b.ls	42ac30 <nftw@plt+0x27f40>  // b.plast
  42a6cc:	mov	x1, x22
  42a6d0:	add	x0, sp, #0xe0
  42a6d4:	bl	42b6d8 <nftw@plt+0x289e8>
  42a6d8:	cmp	w0, #0x2
  42a6dc:	b.eq	42a81c <nftw@plt+0x27b2c>  // b.none
  42a6e0:	cmp	w0, #0x3
  42a6e4:	b.ne	42a768 <nftw@plt+0x27a78>  // b.any
  42a6e8:	ldr	x0, [sp, #128]
  42a6ec:	cmp	x0, x22
  42a6f0:	b.eq	42a748 <nftw@plt+0x27a58>  // b.none
  42a6f4:	ldurh	w0, [x22, #-18]
  42a6f8:	tbnz	w0, #3, 42a748 <nftw@plt+0x27a58>
  42a6fc:	mov	x1, x22
  42a700:	mov	x0, x19
  42a704:	bl	42805c <nftw@plt+0x2536c>
  42a708:	mov	x2, x0
  42a70c:	ldr	x1, [sp, #128]
  42a710:	mov	x5, x27
  42a714:	ldrb	w0, [x19, #1157]
  42a718:	sub	x6, x22, x1
  42a71c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42a720:	movk	x1, #0xaaab
  42a724:	ldr	w4, [x2]
  42a728:	asr	x6, x6, #3
  42a72c:	cmp	w0, #0x2
  42a730:	mov	w3, w4
  42a734:	mov	x0, x24
  42a738:	mul	x6, x6, x1
  42a73c:	ldr	x1, [sp, #216]
  42a740:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  42a744:	bl	428288 <nftw@plt+0x25598>
  42a748:	ldp	x1, x0, [x24, #8]
  42a74c:	sub	x23, x0, #0x8
  42a750:	cmp	x0, x1
  42a754:	csel	x23, x23, xzr, ne  // ne = any
  42a758:	add	x22, x22, #0x18
  42a75c:	b	42a6c0 <nftw@plt+0x279d0>
  42a760:	mov	x27, #0x0                   	// #0
  42a764:	b	42a660 <nftw@plt+0x27970>
  42a768:	cmp	w0, #0x4
  42a76c:	b.ne	42a758 <nftw@plt+0x27a68>  // b.any
  42a770:	ldp	x2, x1, [x24, #8]
  42a774:	cmp	x1, x2
  42a778:	b.eq	42a7c4 <nftw@plt+0x27ad4>  // b.none
  42a77c:	sub	x1, x1, #0x8
  42a780:	cmp	x1, #0x0
  42a784:	ccmp	x1, x23, #0x4, ne  // ne = any
  42a788:	b.eq	42a7c8 <nftw@plt+0x27ad8>  // b.none
  42a78c:	ldr	x0, [x1]
  42a790:	ldrb	w0, [x0, #4]
  42a794:	cmp	w0, #0x53
  42a798:	b.ne	42a7c8 <nftw@plt+0x27ad8>  // b.any
  42a79c:	ldr	x0, [x24, #16]
  42a7a0:	cmp	x2, x0
  42a7a4:	b.cs	42a7b0 <nftw@plt+0x27ac0>  // b.hs, b.nlast
  42a7a8:	sub	x0, x0, #0x8
  42a7ac:	str	x0, [x24, #16]
  42a7b0:	ldr	x0, [x24, #16]
  42a7b4:	sub	x1, x0, #0x8
  42a7b8:	cmp	x2, x0
  42a7bc:	csel	x1, x1, xzr, ne  // ne = any
  42a7c0:	b	42a780 <nftw@plt+0x27a90>
  42a7c4:	mov	x1, #0x0                   	// #0
  42a7c8:	ldrh	w0, [x22, #6]
  42a7cc:	tbz	w0, #3, 42a7f8 <nftw@plt+0x27b08>
  42a7d0:	cbz	x1, 42a7f0 <nftw@plt+0x27b00>
  42a7d4:	ldr	x0, [x1]
  42a7d8:	ldrb	w0, [x0, #4]
  42a7dc:	cmp	w0, #0x53
  42a7e0:	b.eq	42a7f0 <nftw@plt+0x27b00>  // b.none
  42a7e4:	add	x2, x22, #0x6
  42a7e8:	mov	x0, x19
  42a7ec:	bl	428220 <nftw@plt+0x25530>
  42a7f0:	mov	x23, #0x0                   	// #0
  42a7f4:	b	42a758 <nftw@plt+0x27a68>
  42a7f8:	ldr	w4, [x19, #664]
  42a7fc:	add	x2, x19, #0x298
  42a800:	ldr	x1, [sp, #216]
  42a804:	mov	x0, x24
  42a808:	mov	w3, w4
  42a80c:	mov	w6, #0x0                   	// #0
  42a810:	mov	x5, #0x0                   	// #0
  42a814:	bl	428288 <nftw@plt+0x25598>
  42a818:	b	42a7f0 <nftw@plt+0x27b00>
  42a81c:	ldrb	w0, [x22, #4]
  42a820:	ldrb	w1, [x19, #1157]
  42a824:	cmp	w0, #0x50
  42a828:	b.eq	42a870 <nftw@plt+0x27b80>  // b.none
  42a82c:	ldr	x0, [sp, #128]
  42a830:	cmp	w1, #0x2
  42a834:	ldr	w4, [x22]
  42a838:	mov	x5, x27
  42a83c:	sub	x6, x22, x0
  42a840:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42a844:	movk	x0, #0xaaab
  42a848:	mov	x2, x22
  42a84c:	asr	x6, x6, #3
  42a850:	mov	w3, w4
  42a854:	ldr	x1, [sp, #216]
  42a858:	mul	x6, x6, x0
  42a85c:	mov	x0, x24
  42a860:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  42a864:	add	w26, w26, #0x1
  42a868:	bl	428288 <nftw@plt+0x25598>
  42a86c:	b	42a758 <nftw@plt+0x27a68>
  42a870:	ldr	w0, [x22, #8]
  42a874:	mov	w2, #0x30                  	// #48
  42a878:	cmp	w1, #0x0
  42a87c:	sub	w0, w0, #0x1
  42a880:	cset	w1, ne  // ne = any
  42a884:	umull	x0, w0, w2
  42a888:	ldr	x2, [sp, #136]
  42a88c:	add	x3, x2, x0
  42a890:	ldrh	w2, [x22, #6]
  42a894:	tbz	w2, #2, 42aa3c <nftw@plt+0x27d4c>
  42a898:	mov	x28, #0x0                   	// #0
  42a89c:	mov	w25, #0x1                   	// #1
  42a8a0:	add	x4, x3, #0x10
  42a8a4:	add	x0, sp, #0xf8
  42a8a8:	mov	w2, #0x1                   	// #1
  42a8ac:	bl	427ff4 <nftw@plt+0x25304>
  42a8b0:	ldrb	w0, [x19, #16]
  42a8b4:	cbz	w0, 42a8c0 <nftw@plt+0x27bd0>
  42a8b8:	ldrb	w0, [x19, #17]
  42a8bc:	cbz	w0, 42a934 <nftw@plt+0x27c44>
  42a8c0:	ldr	x0, [sp, #128]
  42a8c4:	cmp	x0, x22
  42a8c8:	b.eq	42a934 <nftw@plt+0x27c44>  // b.none
  42a8cc:	ldurh	w0, [x22, #-18]
  42a8d0:	tbnz	w0, #3, 42a934 <nftw@plt+0x27c44>
  42a8d4:	mov	x1, x23
  42a8d8:	mov	x0, x24
  42a8dc:	bl	428360 <nftw@plt+0x25670>
  42a8e0:	tst	w0, #0xff
  42a8e4:	b.ne	42a934 <nftw@plt+0x27c44>  // b.any
  42a8e8:	mov	x1, x22
  42a8ec:	mov	x0, x19
  42a8f0:	bl	42805c <nftw@plt+0x2536c>
  42a8f4:	mov	x2, x0
  42a8f8:	ldr	x1, [sp, #128]
  42a8fc:	mov	x5, x27
  42a900:	ldrb	w0, [x19, #1157]
  42a904:	sub	x6, x22, x1
  42a908:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42a90c:	movk	x1, #0xaaab
  42a910:	ldr	w4, [x2]
  42a914:	asr	x6, x6, #3
  42a918:	cmp	w0, #0x2
  42a91c:	mov	w3, w4
  42a920:	mov	x0, x24
  42a924:	mul	x6, x6, x1
  42a928:	ldr	x1, [sp, #216]
  42a92c:	csel	w6, w6, w26, cc  // cc = lo, ul, last
  42a930:	bl	428288 <nftw@plt+0x25598>
  42a934:	cbz	w25, 42ab6c <nftw@plt+0x27e7c>
  42a938:	ldr	x0, [sp, #128]
  42a93c:	mov	w9, #0x0                   	// #0
  42a940:	sub	x8, x22, x0
  42a944:	mov	w0, #0xaaab                	// #43691
  42a948:	movk	w0, #0xaaaa, lsl #16
  42a94c:	asr	x8, x8, #3
  42a950:	mul	w8, w8, w0
  42a954:	ldr	w0, [sp, #144]
  42a958:	add	w6, w26, w9
  42a95c:	ldr	x1, [sp, #216]
  42a960:	cmp	w0, #0x1
  42a964:	ldrb	w0, [x19, #1157]
  42a968:	csel	w6, w6, w26, gt
  42a96c:	cmp	w0, #0x1
  42a970:	ldr	x0, [sp, #256]
  42a974:	csel	w6, w6, w8, hi  // hi = pmore
  42a978:	cbz	x0, 42ab5c <nftw@plt+0x27e6c>
  42a97c:	ldr	x2, [x0]
  42a980:	ldrb	w3, [sp, #248]
  42a984:	cbz	w3, 42ab64 <nftw@plt+0x27e74>
  42a988:	ldr	x0, [sp, #264]
  42a98c:	mov	x5, x27
  42a990:	ldr	w3, [x0]
  42a994:	mov	x0, x24
  42a998:	ldr	w4, [x22]
  42a99c:	str	w8, [sp, #184]
  42a9a0:	str	w9, [sp, #192]
  42a9a4:	bl	428288 <nftw@plt+0x25598>
  42a9a8:	add	x0, sp, #0xf8
  42a9ac:	bl	428118 <nftw@plt+0x25428>
  42a9b0:	ldr	w9, [sp, #192]
  42a9b4:	ldr	w8, [sp, #184]
  42a9b8:	add	w9, w9, #0x1
  42a9bc:	cmp	w25, w9
  42a9c0:	b.ne	42a954 <nftw@plt+0x27c64>  // b.any
  42a9c4:	ldrh	w0, [x22, #6]
  42a9c8:	tbz	w0, #3, 42a9dc <nftw@plt+0x27cec>
  42a9cc:	ldp	x1, x0, [x24, #8]
  42a9d0:	sub	x7, x0, #0x8
  42a9d4:	cmp	x0, x1
  42a9d8:	csel	x28, x7, xzr, ne  // ne = any
  42a9dc:	ldrb	w0, [x19, #16]
  42a9e0:	cbnz	w0, 42aa20 <nftw@plt+0x27d30>
  42a9e4:	ldrh	w0, [x22, #6]
  42a9e8:	tbnz	w0, #3, 42aa20 <nftw@plt+0x27d30>
  42a9ec:	mov	x1, x23
  42a9f0:	mov	x0, x24
  42a9f4:	bl	428360 <nftw@plt+0x25670>
  42a9f8:	tst	w0, #0xff
  42a9fc:	b.ne	42aa20 <nftw@plt+0x27d30>  // b.any
  42aa00:	ldr	w4, [x19, #664]
  42aa04:	add	x2, x19, #0x298
  42aa08:	ldr	x1, [sp, #216]
  42aa0c:	mov	x0, x24
  42aa10:	mov	w3, w4
  42aa14:	mov	w6, #0x0                   	// #0
  42aa18:	mov	x5, #0x0                   	// #0
  42aa1c:	bl	428288 <nftw@plt+0x25598>
  42aa20:	cbz	x28, 42aa34 <nftw@plt+0x27d44>
  42aa24:	add	x2, x22, #0x6
  42aa28:	mov	x1, x28
  42aa2c:	mov	x0, x19
  42aa30:	bl	428220 <nftw@plt+0x25530>
  42aa34:	add	w26, w26, w25
  42aa38:	b	42a758 <nftw@plt+0x27a68>
  42aa3c:	tbz	w2, #3, 42aa60 <nftw@plt+0x27d70>
  42aa40:	ldr	x2, [sp, #136]
  42aa44:	ldr	w25, [x3, #24]
  42aa48:	ldr	x4, [x2, x0]
  42aa4c:	add	x0, sp, #0xf8
  42aa50:	mov	w2, #0x0                   	// #0
  42aa54:	bl	427ff4 <nftw@plt+0x25304>
  42aa58:	mov	x28, #0x0                   	// #0
  42aa5c:	b	42a8b0 <nftw@plt+0x27bc0>
  42aa60:	ldr	x2, [sp, #128]
  42aa64:	cmp	x2, x22
  42aa68:	b.eq	42ab08 <nftw@plt+0x27e18>  // b.none
  42aa6c:	ldurh	w2, [x22, #-18]
  42aa70:	tbz	w2, #3, 42ab08 <nftw@plt+0x27e18>
  42aa74:	ldr	x2, [sp, #136]
  42aa78:	ldr	w25, [x3, #24]
  42aa7c:	ldr	x4, [x2, x0]
  42aa80:	add	x0, sp, #0xf8
  42aa84:	mov	w2, #0x0                   	// #0
  42aa88:	bl	427ff4 <nftw@plt+0x25304>
  42aa8c:	ldp	x1, x0, [x24, #8]
  42aa90:	sub	x2, x0, x1
  42aa94:	tst	x2, #0x7fffffff8
  42aa98:	b.eq	42aa58 <nftw@plt+0x27d68>  // b.none
  42aa9c:	cmp	x0, x1
  42aaa0:	b.eq	42af0c <nftw@plt+0x2821c>  // b.none
  42aaa4:	ldur	x2, [x0, #-8]
  42aaa8:	sub	x28, x0, #0x8
  42aaac:	ldrb	w2, [x2, #4]
  42aab0:	cmp	w2, #0x13
  42aab4:	b.ne	42aaf8 <nftw@plt+0x27e08>  // b.any
  42aab8:	ldr	x2, [sp, #104]
  42aabc:	ldrb	w2, [x2, #19]
  42aac0:	tbz	w2, #3, 42aaf8 <nftw@plt+0x27e08>
  42aac4:	ldr	x2, [sp, #104]
  42aac8:	ldr	w3, [x22, #8]
  42aacc:	ldrh	w2, [x2, #16]
  42aad0:	cmp	w3, w2
  42aad4:	b.ne	42aaf8 <nftw@plt+0x27e08>  // b.any
  42aad8:	ldr	x2, [sp, #256]
  42aadc:	cbz	x2, 42aae8 <nftw@plt+0x27df8>
  42aae0:	ldr	x2, [x2]
  42aae4:	cbnz	x2, 42a8b0 <nftw@plt+0x27bc0>
  42aae8:	cmp	x0, x1
  42aaec:	b.ls	42aa58 <nftw@plt+0x27d68>  // b.plast
  42aaf0:	str	x28, [x24, #16]
  42aaf4:	b	42aa58 <nftw@plt+0x27d68>
  42aaf8:	cmp	w25, #0x0
  42aafc:	ccmp	x23, x28, #0x4, eq  // eq = none
  42ab00:	csel	x28, x28, xzr, ne  // ne = any
  42ab04:	b	42a8b0 <nftw@plt+0x27bc0>
  42ab08:	ldr	x4, [x3, #8]
  42ab0c:	mov	w2, #0x2                   	// #2
  42ab10:	ldr	w25, [x3, #28]
  42ab14:	add	x0, sp, #0xf8
  42ab18:	bl	427ff4 <nftw@plt+0x25304>
  42ab1c:	mov	x1, x23
  42ab20:	mov	x0, x24
  42ab24:	bl	428360 <nftw@plt+0x25670>
  42ab28:	tst	w0, #0xff
  42ab2c:	b.eq	42aa58 <nftw@plt+0x27d68>  // b.none
  42ab30:	cbz	w25, 42aa58 <nftw@plt+0x27d68>
  42ab34:	ldr	x0, [sp, #256]
  42ab38:	cbz	x0, 42af18 <nftw@plt+0x28228>
  42ab3c:	ldr	x0, [x0]
  42ab40:	ldrb	w0, [x0, #4]
  42ab44:	cmp	w0, #0x53
  42ab48:	b.ne	42aa58 <nftw@plt+0x27d68>  // b.any
  42ab4c:	add	x0, sp, #0xf8
  42ab50:	sub	w25, w25, #0x1
  42ab54:	bl	428118 <nftw@plt+0x25428>
  42ab58:	b	42ab30 <nftw@plt+0x27e40>
  42ab5c:	mov	x2, #0x0                   	// #0
  42ab60:	b	42a980 <nftw@plt+0x27c90>
  42ab64:	ldr	x0, [x0]
  42ab68:	b	42a98c <nftw@plt+0x27c9c>
  42ab6c:	ldrb	w0, [x19, #1154]
  42ab70:	cbz	w0, 42ab98 <nftw@plt+0x27ea8>
  42ab74:	ldrb	w0, [x19, #1152]
  42ab78:	cbnz	w0, 42ab98 <nftw@plt+0x27ea8>
  42ab7c:	ldr	x0, [sp, #104]
  42ab80:	ldrb	w0, [x0, #19]
  42ab84:	tbnz	w0, #4, 42ab98 <nftw@plt+0x27ea8>
  42ab88:	ldr	x0, [x19]
  42ab8c:	cbz	x0, 42abe4 <nftw@plt+0x27ef4>
  42ab90:	ldrb	w0, [x0, #106]
  42ab94:	cbz	w0, 42abe4 <nftw@plt+0x27ef4>
  42ab98:	ldrsb	w0, [x19, #1198]
  42ab9c:	cmp	w0, #0x0
  42aba0:	b.le	42a9dc <nftw@plt+0x27cec>
  42aba4:	ldrb	w0, [x19, #1120]
  42aba8:	cbnz	w0, 42a9dc <nftw@plt+0x27cec>
  42abac:	ldr	x0, [sp, #104]
  42abb0:	ldrb	w0, [x0, #19]
  42abb4:	tbnz	w0, #4, 42a9dc <nftw@plt+0x27cec>
  42abb8:	ldr	x0, [x19]
  42abbc:	cbz	x0, 42abc8 <nftw@plt+0x27ed8>
  42abc0:	ldrb	w0, [x0, #106]
  42abc4:	cbnz	w0, 42a9dc <nftw@plt+0x27cec>
  42abc8:	ldr	w4, [x22, #8]
  42abcc:	mov	x0, x19
  42abd0:	ldr	x3, [x20]
  42abd4:	mov	w1, #0x16                  	// #22
  42abd8:	ldr	x2, [sp, #168]
  42abdc:	bl	41c080 <nftw@plt+0x19390>
  42abe0:	b	42a9dc <nftw@plt+0x27cec>
  42abe4:	ldrb	w0, [x19, #1120]
  42abe8:	cbz	w0, 42ac0c <nftw@plt+0x27f1c>
  42abec:	ldr	w4, [x22, #8]
  42abf0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42abf4:	ldr	x3, [x20]
  42abf8:	add	x2, x2, #0xe79
  42abfc:	mov	w1, #0x15                  	// #21
  42ac00:	mov	x0, x19
  42ac04:	bl	41c0f0 <nftw@plt+0x19400>
  42ac08:	b	42a9dc <nftw@plt+0x27cec>
  42ac0c:	ldrsb	w0, [x19, #1198]
  42ac10:	cmp	w0, #0x0
  42ac14:	cbz	w0, 42a9dc <nftw@plt+0x27cec>
  42ac18:	cset	w1, gt
  42ac1c:	ldr	w4, [x22, #8]
  42ac20:	add	w1, w1, #0x15
  42ac24:	ldr	x3, [x20]
  42ac28:	ldr	x2, [sp, #168]
  42ac2c:	b	42ac00 <nftw@plt+0x27f10>
  42ac30:	ldp	x5, x22, [x24, #8]
  42ac34:	ldr	w0, [sp, #144]
  42ac38:	sub	x22, x22, x5
  42ac3c:	lsr	x22, x22, #3
  42ac40:	cbz	w0, 42acd4 <nftw@plt+0x27fe4>
  42ac44:	ldr	x4, [sp, #152]
  42ac48:	mov	w5, w22
  42ac4c:	ldr	x3, [sp, #216]
  42ac50:	mov	x2, x24
  42ac54:	mov	x1, x20
  42ac58:	mov	x0, x19
  42ac5c:	bl	428198 <nftw@plt+0x254a8>
  42ac60:	ldp	x1, x0, [x24, #8]
  42ac64:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  42ac68:	sub	x0, x0, x1
  42ac6c:	ldr	w1, [x2, #2432]
  42ac70:	lsr	x0, x0, #3
  42ac74:	add	w0, w1, w0
  42ac78:	str	w0, [x2, #2432]
  42ac7c:	ldr	x0, [sp, #112]
  42ac80:	mov	w23, #0x0                   	// #0
  42ac84:	ldr	x22, [x0, #8]
  42ac88:	add	x22, x22, #0x8
  42ac8c:	ldr	w0, [sp, #124]
  42ac90:	cmp	w23, w0
  42ac94:	b.eq	42acf4 <nftw@plt+0x28004>  // b.none
  42ac98:	ldr	x0, [x22]
  42ac9c:	cbz	x0, 42aca8 <nftw@plt+0x27fb8>
  42aca0:	bl	402a80 <free@plt>
  42aca4:	str	xzr, [x22]
  42aca8:	ldr	x0, [x22, #24]
  42acac:	cbz	x0, 42acb8 <nftw@plt+0x27fc8>
  42acb0:	bl	402a80 <free@plt>
  42acb4:	str	xzr, [x22, #24]
  42acb8:	ldr	x0, [x22, #32]
  42acbc:	cbz	x0, 42acc8 <nftw@plt+0x27fd8>
  42acc0:	bl	402a80 <free@plt>
  42acc4:	str	xzr, [x22, #32]
  42acc8:	add	w23, w23, #0x1
  42accc:	add	x22, x22, #0x30
  42acd0:	b	42ac8c <nftw@plt+0x27f9c>
  42acd4:	add	x0, x19, #0x88
  42acd8:	bl	428148 <nftw@plt+0x25458>
  42acdc:	ldr	x1, [sp, #152]
  42ace0:	stp	x24, x20, [x0, #32]
  42ace4:	str	wzr, [x0, #48]
  42ace8:	add	x22, x1, w22, uxtw #3
  42acec:	stp	x1, x22, [x0, #16]
  42acf0:	b	42ac60 <nftw@plt+0x27f70>
  42acf4:	ldr	x0, [sp, #112]
  42acf8:	bl	4232b4 <nftw@plt+0x205c4>
  42acfc:	ldrh	w0, [x20, #18]
  42ad00:	ubfx	x1, x0, #2, #8
  42ad04:	orr	w2, w1, #0x10
  42ad08:	bfi	w0, w2, #2, #8
  42ad0c:	strh	w0, [x20, #18]
  42ad10:	tbnz	w1, #5, 42ad20 <nftw@plt+0x28030>
  42ad14:	mov	x1, x20
  42ad18:	mov	x0, x19
  42ad1c:	bl	429b58 <nftw@plt+0x26e68>
  42ad20:	ldr	x3, [x19, #1032]
  42ad24:	cbz	x3, 42ad38 <nftw@plt+0x28048>
  42ad28:	ldr	w1, [sp, #200]
  42ad2c:	mov	x2, x20
  42ad30:	mov	x0, x19
  42ad34:	blr	x3
  42ad38:	ldr	x0, [sp, #104]
  42ad3c:	ldr	x1, [sp, #104]
  42ad40:	ldrb	w0, [x0, #19]
  42ad44:	orr	w0, w0, #0x20
  42ad48:	strb	w0, [x1, #19]
  42ad4c:	ldrh	w0, [x1, #16]
  42ad50:	cbnz	w0, 42ae0c <nftw@plt+0x2811c>
  42ad54:	mov	x0, x1
  42ad58:	bl	428324 <nftw@plt+0x25634>
  42ad5c:	mov	w24, w0
  42ad60:	ldr	x0, [sp, #104]
  42ad64:	add	x22, x0, #0x18
  42ad68:	ldrb	w0, [x19, #1157]
  42ad6c:	cbz	w0, 42ae9c <nftw@plt+0x281ac>
  42ad70:	add	x2, sp, #0xf8
  42ad74:	mov	w1, w24
  42ad78:	mov	x0, x19
  42ad7c:	str	xzr, [sp, #248]
  42ad80:	bl	42808c <nftw@plt+0x2539c>
  42ad84:	mov	x23, x0
  42ad88:	ldr	w2, [sp, #200]
  42ad8c:	mov	w3, w24
  42ad90:	ldr	x0, [x19, #40]
  42ad94:	mov	x1, x20
  42ad98:	mov	w25, #0x0                   	// #0
  42ad9c:	bl	425e4c <nftw@plt+0x2315c>
  42ada0:	mov	x26, x0
  42ada4:	cmp	w24, w25
  42ada8:	ldr	x1, [sp, #248]
  42adac:	b.eq	42ade0 <nftw@plt+0x280f0>  // b.none
  42adb0:	ldr	w4, [x22]
  42adb4:	mov	w6, w25
  42adb8:	mov	x2, x22
  42adbc:	mov	x5, x26
  42adc0:	mov	x0, x23
  42adc4:	mov	w3, w4
  42adc8:	add	w25, w25, #0x1
  42adcc:	add	x22, x22, #0x18
  42add0:	bl	428288 <nftw@plt+0x25598>
  42add4:	b	42ada4 <nftw@plt+0x280b4>
  42add8:	mov	x21, #0x0                   	// #0
  42addc:	b	42acfc <nftw@plt+0x2800c>
  42ade0:	ldr	x4, [x23, #8]
  42ade4:	mov	x3, x1
  42ade8:	mov	w5, w24
  42adec:	mov	x2, x23
  42adf0:	mov	x1, x20
  42adf4:	mov	x0, x19
  42adf8:	bl	428198 <nftw@plt+0x254a8>
  42adfc:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  42ae00:	ldr	w0, [x1, #2432]
  42ae04:	add	w24, w0, w24
  42ae08:	str	w24, [x1, #2432]
  42ae0c:	cbz	x21, 42aeb4 <nftw@plt+0x281c4>
  42ae10:	ldrb	w0, [x19, #16]
  42ae14:	cbnz	w0, 42ae38 <nftw@plt+0x28148>
  42ae18:	ldr	x1, [sp, #176]
  42ae1c:	mov	x0, x19
  42ae20:	bl	42805c <nftw@plt+0x2536c>
  42ae24:	mov	x2, x0
  42ae28:	mov	w3, #0x1                   	// #1
  42ae2c:	mov	x0, x19
  42ae30:	mov	x1, #0x0                   	// #0
  42ae34:	bl	428908 <nftw@plt+0x25c18>
  42ae38:	adrp	x23, 47e000 <__environ@@GLIBC_2.17+0xa50>
  42ae3c:	add	x25, x19, #0x88
  42ae40:	add	x23, x23, #0x980
  42ae44:	mov	x24, x21
  42ae48:	mov	x0, x25
  42ae4c:	ldr	x21, [x21]
  42ae50:	ldp	x22, x20, [x24, #8]
  42ae54:	str	xzr, [x24]
  42ae58:	bl	428148 <nftw@plt+0x25458>
  42ae5c:	str	x22, [x0, #16]
  42ae60:	stp	x24, xzr, [x0, #32]
  42ae64:	sub	x20, x20, x22
  42ae68:	str	wzr, [x0, #48]
  42ae6c:	asr	x20, x20, #3
  42ae70:	add	x22, x22, w20, uxtw #3
  42ae74:	str	x22, [x0, #24]
  42ae78:	ldrb	w0, [x19, #1157]
  42ae7c:	cbnz	w0, 42ae8c <nftw@plt+0x2819c>
  42ae80:	ldr	w0, [x23]
  42ae84:	add	w20, w0, w20
  42ae88:	str	w20, [x23]
  42ae8c:	cbnz	x21, 42ae44 <nftw@plt+0x28154>
  42ae90:	mov	w0, #0x2                   	// #2
  42ae94:	strb	wzr, [x19, #192]
  42ae98:	b	42a108 <nftw@plt+0x27418>
  42ae9c:	mov	w3, w24
  42aea0:	mov	x2, x22
  42aea4:	mov	x1, x20
  42aea8:	mov	x0, x19
  42aeac:	bl	428908 <nftw@plt+0x25c18>
  42aeb0:	b	42adfc <nftw@plt+0x2810c>
  42aeb4:	mov	w0, #0x1                   	// #1
  42aeb8:	strb	wzr, [x19, #192]
  42aebc:	b	42a108 <nftw@plt+0x27418>
  42aec0:	ldr	x1, [x19, #184]
  42aec4:	strb	wzr, [x19, #192]
  42aec8:	ldrb	w0, [x1, #18]
  42aecc:	and	w0, w0, #0x3
  42aed0:	cmp	w0, #0x2
  42aed4:	b.ne	42aeec <nftw@plt+0x281fc>  // b.any
  42aed8:	ldr	x0, [x1, #24]
  42aedc:	ldrb	w0, [x0, #19]
  42aee0:	tbz	w0, #2, 42aeec <nftw@plt+0x281fc>
  42aee4:	ldrb	w0, [x19, #1157]
  42aee8:	cbnz	w0, 42af04 <nftw@plt+0x28214>
  42aeec:	ldr	w3, [x19, #176]
  42aef0:	ldr	w2, [sp, #200]
  42aef4:	mov	x1, x20
  42aef8:	mov	x0, x19
  42aefc:	bl	42896c <nftw@plt+0x25c7c>
  42af00:	b	42a108 <nftw@plt+0x27418>
  42af04:	ldr	w3, [sp, #200]
  42af08:	b	42aef0 <nftw@plt+0x28200>
  42af0c:	mov	x0, #0x0                   	// #0
  42af10:	ldr	x0, [x0]
  42af14:	brk	#0x3e8
  42af18:	ldrb	w0, [x0, #4]
  42af1c:	b	42af14 <nftw@plt+0x28224>
  42af20:	stp	x29, x30, [sp, #-112]!
  42af24:	mov	x29, sp
  42af28:	stp	x19, x20, [sp, #16]
  42af2c:	mov	x19, x0
  42af30:	stp	x23, x24, [sp, #48]
  42af34:	mov	x24, x1
  42af38:	stp	x25, x26, [sp, #64]
  42af3c:	adrp	x25, 47e000 <__environ@@GLIBC_2.17+0xa50>
  42af40:	add	x25, x25, #0x980
  42af44:	ldrb	w26, [x0, #192]
  42af48:	stp	x21, x22, [sp, #32]
  42af4c:	mov	w22, #0x0                   	// #0
  42af50:	str	x27, [sp, #80]
  42af54:	ldr	x21, [x19, #136]
  42af58:	ldr	x0, [x21, #8]
  42af5c:	cbnz	x0, 42b044 <nftw@plt+0x28354>
  42af60:	mov	x0, x19
  42af64:	bl	4254c8 <nftw@plt+0x227d8>
  42af68:	ldr	w22, [x0]
  42af6c:	mov	x20, x0
  42af70:	ldrb	w1, [x19, #16]
  42af74:	ldrb	w0, [x20, #4]
  42af78:	cbz	w1, 42af84 <nftw@plt+0x28294>
  42af7c:	cmp	w0, #0x4f
  42af80:	b.eq	42af54 <nftw@plt+0x28264>  // b.none
  42af84:	cmp	w0, #0x35
  42af88:	b.ne	42b084 <nftw@plt+0x28394>  // b.any
  42af8c:	ldr	x4, [x20, #8]
  42af90:	ldrb	w0, [x4, #18]
  42af94:	tst	x0, #0x3
  42af98:	b.eq	42b084 <nftw@plt+0x28394>  // b.none
  42af9c:	ldrh	w0, [x20, #6]
  42afa0:	tbnz	w0, #10, 42b084 <nftw@plt+0x28394>
  42afa4:	ldrh	w0, [x4, #18]
  42afa8:	ubfx	x2, x0, #2, #8
  42afac:	tbnz	w0, #6, 42b354 <nftw@plt+0x28664>
  42afb0:	ldrb	w0, [x19, #192]
  42afb4:	cbnz	w0, 42afd0 <nftw@plt+0x282e0>
  42afb8:	ldr	x0, [x19, #136]
  42afbc:	bl	428040 <nftw@plt+0x25350>
  42afc0:	cbnz	x0, 42afd0 <nftw@plt+0x282e0>
  42afc4:	ldr	w0, [x20]
  42afc8:	str	w0, [x19, #176]
  42afcc:	str	x4, [x19, #184]
  42afd0:	ldrb	w0, [x19, #24]
  42afd4:	cbnz	w0, 42b084 <nftw@plt+0x28394>
  42afd8:	tbz	w2, #6, 42b344 <nftw@plt+0x28654>
  42afdc:	ldr	x0, [x19, #992]
  42afe0:	cbz	x0, 42b084 <nftw@plt+0x28394>
  42afe4:	mov	w1, #0x0                   	// #0
  42afe8:	mov	x0, x19
  42afec:	bl	42560c <nftw@plt+0x2291c>
  42aff0:	ldrb	w1, [x0, #4]
  42aff4:	cmp	w1, #0x53
  42aff8:	b.eq	42b2f4 <nftw@plt+0x28604>  // b.none
  42affc:	ldrb	w21, [x0, #6]
  42b000:	and	w21, w21, #0x1
  42b004:	ldr	x2, [x19, #992]
  42b008:	mov	x1, x20
  42b00c:	mov	x0, x19
  42b010:	blr	x2
  42b014:	mov	x1, x0
  42b018:	cbz	x0, 42b2fc <nftw@plt+0x2860c>
  42b01c:	mov	w3, w22
  42b020:	mov	x2, x20
  42b024:	mov	x0, x19
  42b028:	bl	429c18 <nftw@plt+0x26f28>
  42b02c:	cbz	w0, 42b084 <nftw@plt+0x28394>
  42b030:	ldrb	w1, [x19, #16]
  42b034:	cbnz	w1, 42af54 <nftw@plt+0x28264>
  42b038:	cmp	w0, #0x2
  42b03c:	b.eq	42af54 <nftw@plt+0x28264>  // b.none
  42b040:	b	42b2c8 <nftw@plt+0x285d8>
  42b044:	ldr	w2, [x21, #48]
  42b048:	cmp	w2, #0x1
  42b04c:	b.ne	42b0f0 <nftw@plt+0x28400>  // b.any
  42b050:	ldp	x20, x0, [x21, #16]
  42b054:	cmp	x20, x0
  42b058:	b.ne	42b130 <nftw@plt+0x28440>  // b.any
  42b05c:	ldr	x0, [x21, #40]
  42b060:	cbz	x0, 42b070 <nftw@plt+0x28380>
  42b064:	ldr	w0, [x25, #4]
  42b068:	add	w0, w0, #0x1
  42b06c:	str	w0, [x25, #4]
  42b070:	mov	x0, x19
  42b074:	bl	428b68 <nftw@plt+0x25e78>
  42b078:	ldrb	w0, [x19, #16]
  42b07c:	cbnz	w0, 42af54 <nftw@plt+0x28264>
  42b080:	add	x20, x19, #0x298
  42b084:	cbz	x24, 42b0cc <nftw@plt+0x283dc>
  42b088:	cbnz	w22, 42b090 <nftw@plt+0x283a0>
  42b08c:	ldr	w22, [x20]
  42b090:	str	w22, [x24]
  42b094:	ldrb	w0, [x19, #1157]
  42b098:	cbnz	w0, 42b0b0 <nftw@plt+0x283c0>
  42b09c:	ldr	x0, [x19, #136]
  42b0a0:	bl	428040 <nftw@plt+0x25350>
  42b0a4:	cbz	x0, 42b0b0 <nftw@plt+0x283c0>
  42b0a8:	ldr	w0, [x19, #176]
  42b0ac:	str	w0, [x24]
  42b0b0:	ldrb	w1, [x19, #1160]
  42b0b4:	ldr	w0, [x24]
  42b0b8:	cbz	w1, 42b0c8 <nftw@plt+0x283d8>
  42b0bc:	ldrb	w1, [x19, #16]
  42b0c0:	cbz	w1, 42b0c8 <nftw@plt+0x283d8>
  42b0c4:	ldr	w0, [x19, #48]
  42b0c8:	str	w0, [x24]
  42b0cc:	strb	w26, [x19, #192]
  42b0d0:	mov	x0, x20
  42b0d4:	ldp	x19, x20, [sp, #16]
  42b0d8:	ldp	x21, x22, [sp, #32]
  42b0dc:	ldp	x23, x24, [sp, #48]
  42b0e0:	ldp	x25, x26, [sp, #64]
  42b0e4:	ldr	x27, [sp, #80]
  42b0e8:	ldp	x29, x30, [sp], #112
  42b0ec:	ret
  42b0f0:	tst	w2, #0xfffffffd
  42b0f4:	b.ne	42b118 <nftw@plt+0x28428>  // b.any
  42b0f8:	ldp	x0, x1, [x21, #16]
  42b0fc:	cmp	x0, x1
  42b100:	b.eq	42b05c <nftw@plt+0x2836c>  // b.none
  42b104:	add	x3, x0, #0x8
  42b108:	cbnz	w2, 42b1a8 <nftw@plt+0x284b8>
  42b10c:	ldr	x20, [x0]
  42b110:	ldr	w22, [x20]
  42b114:	b	42b1cc <nftw@plt+0x284dc>
  42b118:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b11c:	add	x2, x2, #0xf17
  42b120:	mov	w1, #0xa2f                 	// #2607
  42b124:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b128:	add	x0, x0, #0x82e
  42b12c:	bl	402d60 <nftw@plt+0x70>
  42b130:	mov	x0, x20
  42b134:	ldr	w22, [x0], #24
  42b138:	str	x0, [x21, #16]
  42b13c:	ldrh	w0, [x20, #6]
  42b140:	tbz	w0, #3, 42af70 <nftw@plt+0x28280>
  42b144:	mov	x0, x21
  42b148:	str	x20, [sp, #96]
  42b14c:	bl	428040 <nftw@plt+0x25350>
  42b150:	cbz	x0, 42b1e4 <nftw@plt+0x284f4>
  42b154:	cmp	w2, #0x2
  42b158:	b.ne	42b1f4 <nftw@plt+0x28504>  // b.any
  42b15c:	ldr	x0, [x21, #40]
  42b160:	ldr	x0, [x0, #16]
  42b164:	ldur	w27, [x0, #-4]
  42b168:	mov	x23, #0x0                   	// #0
  42b16c:	ldr	w0, [x21, #48]
  42b170:	cmp	w0, #0x1
  42b174:	b.ne	42b1fc <nftw@plt+0x2850c>  // b.any
  42b178:	ldr	x23, [x21, #16]
  42b17c:	add	x0, x23, #0x18
  42b180:	str	x0, [x21, #16]
  42b184:	ldrb	w0, [x23, #4]
  42b188:	cmp	w0, #0x53
  42b18c:	b.ne	42b240 <nftw@plt+0x28550>  // b.any
  42b190:	ldrh	w0, [x23, #6]
  42b194:	tbz	w0, #3, 42b240 <nftw@plt+0x28550>
  42b198:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b19c:	mov	w1, #0x380                 	// #896
  42b1a0:	add	x2, x2, #0xf4e
  42b1a4:	b	42b124 <nftw@plt+0x28434>
  42b1a8:	cmp	w2, #0x2
  42b1ac:	b.ne	42b1d4 <nftw@plt+0x284e4>  // b.any
  42b1b0:	ldr	x1, [x21, #40]
  42b1b4:	ldr	x20, [x0]
  42b1b8:	ldr	x0, [x1, #8]
  42b1bc:	cbz	x0, 42b110 <nftw@plt+0x28420>
  42b1c0:	ldr	x0, [x1, #16]
  42b1c4:	ldr	w22, [x0], #4
  42b1c8:	str	x0, [x1, #16]
  42b1cc:	str	x3, [x21, #16]
  42b1d0:	b	42b13c <nftw@plt+0x2844c>
  42b1d4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b1d8:	mov	w1, #0xa59                 	// #2649
  42b1dc:	add	x2, x2, #0xf2e
  42b1e0:	b	42b124 <nftw@plt+0x28434>
  42b1e4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b1e8:	mov	w1, #0x352                 	// #850
  42b1ec:	add	x2, x2, #0xf4e
  42b1f0:	b	42b124 <nftw@plt+0x28434>
  42b1f4:	ldr	w27, [x19, #176]
  42b1f8:	b	42b168 <nftw@plt+0x28478>
  42b1fc:	cbnz	w0, 42b214 <nftw@plt+0x28524>
  42b200:	ldr	x0, [x21, #16]
  42b204:	add	x1, x0, #0x8
  42b208:	str	x1, [x21, #16]
  42b20c:	ldr	x23, [x0]
  42b210:	b	42b184 <nftw@plt+0x28494>
  42b214:	cmp	w0, #0x2
  42b218:	b.ne	42b184 <nftw@plt+0x28494>  // b.any
  42b21c:	ldr	x0, [x21, #16]
  42b220:	add	x1, x0, #0x8
  42b224:	str	x1, [x21, #16]
  42b228:	ldr	x1, [x21, #40]
  42b22c:	ldr	x23, [x0]
  42b230:	ldr	x0, [x1, #16]
  42b234:	add	x0, x0, #0x4
  42b238:	str	x0, [x1, #16]
  42b23c:	b	42b184 <nftw@plt+0x28494>
  42b240:	mov	x3, x23
  42b244:	add	x2, sp, #0x60
  42b248:	mov	w1, w27
  42b24c:	mov	x0, x19
  42b250:	bl	428d9c <nftw@plt+0x260ac>
  42b254:	tst	w0, #0xff
  42b258:	b.eq	42b264 <nftw@plt+0x28574>  // b.none
  42b25c:	ldrh	w0, [x23, #6]
  42b260:	tbnz	w0, #3, 42b16c <nftw@plt+0x2847c>
  42b264:	ldr	w0, [x21, #48]
  42b268:	cmp	w0, #0x2
  42b26c:	b.ne	42b2dc <nftw@plt+0x285ec>  // b.any
  42b270:	add	x2, sp, #0x68
  42b274:	mov	x1, #0x1                   	// #1
  42b278:	mov	x0, x19
  42b27c:	str	xzr, [sp, #104]
  42b280:	bl	42808c <nftw@plt+0x2539c>
  42b284:	mov	x23, x0
  42b288:	ldp	x2, x1, [sp, #96]
  42b28c:	mov	w3, w27
  42b290:	mov	x5, #0x0                   	// #0
  42b294:	mov	w4, #0x0                   	// #0
  42b298:	mov	w6, #0x0                   	// #0
  42b29c:	bl	428288 <nftw@plt+0x25598>
  42b2a0:	ldr	x0, [x21, #40]
  42b2a4:	mov	x2, x23
  42b2a8:	ldr	x4, [x23, #8]
  42b2ac:	mov	w5, #0x1                   	// #1
  42b2b0:	ldr	x1, [x0]
  42b2b4:	mov	x0, x19
  42b2b8:	ldr	x3, [sp, #104]
  42b2bc:	bl	428198 <nftw@plt+0x254a8>
  42b2c0:	ldrb	w0, [x19, #16]
  42b2c4:	cbnz	w0, 42af54 <nftw@plt+0x28264>
  42b2c8:	mov	x1, x20
  42b2cc:	mov	x0, x19
  42b2d0:	bl	42805c <nftw@plt+0x2536c>
  42b2d4:	mov	x20, x0
  42b2d8:	b	42b084 <nftw@plt+0x28394>
  42b2dc:	ldr	x2, [sp, #96]
  42b2e0:	mov	x0, x19
  42b2e4:	mov	w3, #0x1                   	// #1
  42b2e8:	mov	x1, #0x0                   	// #0
  42b2ec:	bl	428908 <nftw@plt+0x25c18>
  42b2f0:	b	42b2c0 <nftw@plt+0x285d0>
  42b2f4:	mov	w21, #0x1                   	// #1
  42b2f8:	b	42b004 <nftw@plt+0x28314>
  42b2fc:	cbz	w21, 42b084 <nftw@plt+0x28394>
  42b300:	mov	w1, #0x0                   	// #0
  42b304:	mov	x0, x19
  42b308:	bl	42560c <nftw@plt+0x2291c>
  42b30c:	mov	x1, x0
  42b310:	ldrb	w0, [x0, #4]
  42b314:	cmp	w0, #0x53
  42b318:	b.eq	42b084 <nftw@plt+0x28394>  // b.none
  42b31c:	ldrh	w0, [x1, #6]
  42b320:	tbnz	w0, #0, 42b084 <nftw@plt+0x28394>
  42b324:	mov	x0, x19
  42b328:	bl	42805c <nftw@plt+0x2536c>
  42b32c:	mov	w3, #0x1                   	// #1
  42b330:	mov	x2, x0
  42b334:	mov	x1, #0x0                   	// #0
  42b338:	mov	x0, x19
  42b33c:	bl	428908 <nftw@plt+0x25c18>
  42b340:	b	42b084 <nftw@plt+0x28394>
  42b344:	mov	w3, w22
  42b348:	mov	x2, x20
  42b34c:	mov	x1, x4
  42b350:	b	42b024 <nftw@plt+0x28334>
  42b354:	mov	x0, x19
  42b358:	bl	42261c <nftw@plt+0x1f92c>
  42b35c:	ldrb	w1, [x20, #4]
  42b360:	strb	w1, [x0, #4]
  42b364:	ldrh	w1, [x20, #6]
  42b368:	ldp	x2, x3, [x20, #8]
  42b36c:	orr	w1, w1, #0x400
  42b370:	strh	w1, [x0, #6]
  42b374:	stp	x2, x3, [x0, #8]
  42b378:	b	42b2d4 <nftw@plt+0x285e4>
  42b37c:	mov	x1, #0x0                   	// #0
  42b380:	b	42af20 <nftw@plt+0x28230>
  42b384:	stp	x29, x30, [sp, #-32]!
  42b388:	mov	x29, sp
  42b38c:	ldr	x1, [x0]
  42b390:	str	x19, [sp, #16]
  42b394:	mov	x19, x0
  42b398:	ldrb	w0, [x1, #105]
  42b39c:	orr	w0, w0, #0x4
  42b3a0:	strb	w0, [x1, #105]
  42b3a4:	ldrb	w0, [x19, #27]
  42b3a8:	add	w0, w0, #0x1
  42b3ac:	strb	w0, [x19, #27]
  42b3b0:	ldrb	w0, [x19, #24]
  42b3b4:	add	w0, w0, #0x1
  42b3b8:	strb	w0, [x19, #24]
  42b3bc:	ldrb	w0, [x19, #1160]
  42b3c0:	cbz	w0, 42b3f8 <nftw@plt+0x28708>
  42b3c4:	mov	x0, x19
  42b3c8:	bl	42da44 <nftw@plt+0x2ad54>
  42b3cc:	tst	w0, #0xff
  42b3d0:	b.ne	42b3c4 <nftw@plt+0x286d4>  // b.any
  42b3d4:	ldrb	w0, [x19, #27]
  42b3d8:	sub	w0, w0, #0x1
  42b3dc:	strb	w0, [x19, #27]
  42b3e0:	ldrb	w0, [x19, #24]
  42b3e4:	sub	w0, w0, #0x1
  42b3e8:	strb	w0, [x19, #24]
  42b3ec:	ldr	x19, [sp, #16]
  42b3f0:	ldp	x29, x30, [sp], #32
  42b3f4:	ret
  42b3f8:	mov	x0, x19
  42b3fc:	bl	42b37c <nftw@plt+0x2868c>
  42b400:	ldrb	w0, [x0, #4]
  42b404:	cmp	w0, #0x16
  42b408:	b.ne	42b3f8 <nftw@plt+0x28708>  // b.any
  42b40c:	b	42b3d4 <nftw@plt+0x286e4>
  42b410:	b	42af20 <nftw@plt+0x28230>
  42b414:	stp	x29, x30, [sp, #-96]!
  42b418:	mov	x29, sp
  42b41c:	stp	x19, x20, [sp, #16]
  42b420:	mov	x20, x0
  42b424:	ldr	w19, [x1, #8]
  42b428:	stp	x23, x24, [sp, #48]
  42b42c:	mov	w0, #0xa                   	// #10
  42b430:	mov	x24, x1
  42b434:	ldr	x23, [x1, #24]
  42b438:	mul	w19, w19, w0
  42b43c:	stp	x21, x22, [sp, #32]
  42b440:	ldrb	w0, [x23, #19]
  42b444:	stp	x25, x26, [sp, #64]
  42b448:	stp	x27, x28, [sp, #80]
  42b44c:	tbz	w0, #2, 42b480 <nftw@plt+0x28790>
  42b450:	ldrh	w2, [x23, #16]
  42b454:	add	w19, w19, #0x6
  42b458:	mov	x0, #0x0                   	// #0
  42b45c:	cmp	w2, w0
  42b460:	b.ls	42b484 <nftw@plt+0x28794>  // b.plast
  42b464:	ldr	x1, [x23]
  42b468:	ldr	x1, [x1, x0, lsl #3]
  42b46c:	add	x0, x0, #0x1
  42b470:	ldr	w1, [x1, #8]
  42b474:	add	w1, w1, #0x1
  42b478:	add	w19, w19, w1
  42b47c:	b	42b45c <nftw@plt+0x2876c>
  42b480:	add	w19, w19, #0x2
  42b484:	ldrb	w0, [x20, #1160]
  42b488:	cbz	w0, 42b540 <nftw@plt+0x28850>
  42b48c:	mov	x0, x23
  42b490:	bl	42daac <nftw@plt+0x2adbc>
  42b494:	add	w19, w19, w0
  42b498:	ldr	w0, [x20, #512]
  42b49c:	cmp	w0, w19
  42b4a0:	b.cs	42b4b8 <nftw@plt+0x287c8>  // b.hs, b.nlast
  42b4a4:	ldr	x0, [x20, #504]
  42b4a8:	mov	w1, w19
  42b4ac:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42b4b0:	str	x0, [x20, #504]
  42b4b4:	str	w19, [x20, #512]
  42b4b8:	ldr	x0, [x20, #504]
  42b4bc:	mov	x1, x24
  42b4c0:	bl	422808 <nftw@plt+0x1fb18>
  42b4c4:	mov	x19, x0
  42b4c8:	ldrb	w0, [x23, #19]
  42b4cc:	tbz	w0, #2, 42b5d8 <nftw@plt+0x288e8>
  42b4d0:	mov	w0, #0x28                  	// #40
  42b4d4:	mov	x21, #0x0                   	// #0
  42b4d8:	mov	w26, #0x2e2e                	// #11822
  42b4dc:	mov	w25, #0x2e                  	// #46
  42b4e0:	mov	w27, #0x2c                  	// #44
  42b4e4:	strb	w0, [x19], #1
  42b4e8:	ldrh	w0, [x23, #16]
  42b4ec:	mov	w24, w21
  42b4f0:	cmp	w21, w0
  42b4f4:	b.cs	42b5d0 <nftw@plt+0x288e0>  // b.hs, b.nlast
  42b4f8:	ldr	x0, [x23]
  42b4fc:	ldr	x22, [x0, x21, lsl #3]
  42b500:	ldr	x0, [x20, #1272]
  42b504:	cmp	x0, x22
  42b508:	b.eq	42b524 <nftw@plt+0x28834>  // b.none
  42b50c:	ldr	w2, [x22, #8]
  42b510:	mov	x0, x19
  42b514:	ldr	x1, [x22]
  42b518:	bl	4025d0 <memcpy@plt>
  42b51c:	ldr	w0, [x22, #8]
  42b520:	add	x19, x19, x0
  42b524:	ldrh	w0, [x23, #16]
  42b528:	add	w24, w24, #0x1
  42b52c:	cmp	w0, w24
  42b530:	b.ls	42b5b4 <nftw@plt+0x288c4>  // b.plast
  42b534:	strb	w27, [x19], #1
  42b538:	add	x21, x21, #0x1
  42b53c:	b	42b4e8 <nftw@plt+0x287f8>
  42b540:	mov	x0, x23
  42b544:	add	x21, x23, #0x18
  42b548:	bl	428324 <nftw@plt+0x25634>
  42b54c:	mov	w25, w0
  42b550:	mov	w22, #0x0                   	// #0
  42b554:	mov	x26, #0x18                  	// #24
  42b558:	cmp	w22, w25
  42b55c:	b.eq	42b498 <nftw@plt+0x287a8>  // b.none
  42b560:	mov	w0, w22
  42b564:	madd	x0, x0, x26, x23
  42b568:	ldrb	w0, [x0, #28]
  42b56c:	cmp	w0, #0x50
  42b570:	b.ne	42b5a8 <nftw@plt+0x288b8>  // b.any
  42b574:	ldr	x0, [x21, #16]
  42b578:	ldr	w0, [x0, #8]
  42b57c:	ldrh	w2, [x21, #6]
  42b580:	add	w19, w19, w0
  42b584:	ubfx	x0, x2, #2, #1
  42b588:	add	w19, w19, w0
  42b58c:	tbz	w2, #3, 42b594 <nftw@plt+0x288a4>
  42b590:	add	w19, w19, #0x3
  42b594:	and	w2, w2, #0x1
  42b598:	add	w22, w22, #0x1
  42b59c:	add	w19, w19, w2
  42b5a0:	add	x21, x21, #0x18
  42b5a4:	b	42b558 <nftw@plt+0x28868>
  42b5a8:	mov	x0, x21
  42b5ac:	bl	4227c0 <nftw@plt+0x1fad0>
  42b5b0:	b	42b57c <nftw@plt+0x2888c>
  42b5b4:	ldrb	w0, [x23, #19]
  42b5b8:	tbz	w0, #3, 42b538 <nftw@plt+0x28848>
  42b5bc:	mov	x0, x19
  42b5c0:	strh	w26, [x0], #3
  42b5c4:	strb	w25, [x19, #2]
  42b5c8:	mov	x19, x0
  42b5cc:	b	42b538 <nftw@plt+0x28848>
  42b5d0:	mov	w0, #0x29                  	// #41
  42b5d4:	strb	w0, [x19], #1
  42b5d8:	mov	w21, #0x20                  	// #32
  42b5dc:	strb	w21, [x19], #1
  42b5e0:	ldrb	w0, [x20, #1160]
  42b5e4:	cbz	w0, 42b61c <nftw@plt+0x2892c>
  42b5e8:	mov	x1, x19
  42b5ec:	mov	x0, x23
  42b5f0:	bl	42db08 <nftw@plt+0x2ae18>
  42b5f4:	mov	x19, x0
  42b5f8:	strb	wzr, [x19]
  42b5fc:	ldp	x21, x22, [sp, #32]
  42b600:	ldp	x23, x24, [sp, #48]
  42b604:	ldp	x25, x26, [sp, #64]
  42b608:	ldp	x27, x28, [sp, #80]
  42b60c:	ldr	x0, [x20, #504]
  42b610:	ldp	x19, x20, [sp, #16]
  42b614:	ldp	x29, x30, [sp], #96
  42b618:	ret
  42b61c:	ldr	w0, [x23, #12]
  42b620:	cbz	w0, 42b5f8 <nftw@plt+0x28908>
  42b624:	mov	x0, x23
  42b628:	add	x27, x23, #0x18
  42b62c:	bl	428324 <nftw@plt+0x25634>
  42b630:	mov	w22, w0
  42b634:	mov	w28, #0x0                   	// #0
  42b638:	mov	w24, #0x23                  	// #35
  42b63c:	mov	x25, #0x18                  	// #24
  42b640:	mov	w26, #0x2320                	// #8992
  42b644:	cmp	w28, w22
  42b648:	b.eq	42b5f8 <nftw@plt+0x28908>  // b.none
  42b64c:	ldrh	w0, [x27, #6]
  42b650:	tbz	w0, #0, 42b658 <nftw@plt+0x28968>
  42b654:	strb	w21, [x19], #1
  42b658:	ldrh	w0, [x27, #6]
  42b65c:	tbz	w0, #2, 42b664 <nftw@plt+0x28974>
  42b660:	strb	w24, [x19], #1
  42b664:	mov	w0, w28
  42b668:	madd	x0, x0, x25, x23
  42b66c:	ldrb	w0, [x0, #28]
  42b670:	cmp	w0, #0x50
  42b674:	b.ne	42b6bc <nftw@plt+0x289cc>  // b.any
  42b678:	ldr	x0, [x27, #16]
  42b67c:	ldr	w2, [x0, #8]
  42b680:	ldr	x1, [x0]
  42b684:	mov	x0, x19
  42b688:	bl	4025d0 <memcpy@plt>
  42b68c:	ldr	x0, [x27, #16]
  42b690:	ldr	w0, [x0, #8]
  42b694:	add	x19, x19, x0
  42b698:	ldrh	w0, [x27, #6]
  42b69c:	tbz	w0, #3, 42b6b0 <nftw@plt+0x289c0>
  42b6a0:	mov	x0, x19
  42b6a4:	strh	w26, [x0], #3
  42b6a8:	strb	w24, [x19, #2]
  42b6ac:	mov	x19, x0
  42b6b0:	add	w28, w28, #0x1
  42b6b4:	add	x27, x27, #0x18
  42b6b8:	b	42b644 <nftw@plt+0x28954>
  42b6bc:	mov	x2, x19
  42b6c0:	mov	x1, x27
  42b6c4:	mov	x0, x20
  42b6c8:	mov	w3, #0x1                   	// #1
  42b6cc:	bl	422878 <nftw@plt+0x1fb88>
  42b6d0:	mov	x19, x0
  42b6d4:	b	42b698 <nftw@plt+0x289a8>
  42b6d8:	mov	x4, x0
  42b6dc:	ldrb	w0, [x0, #9]
  42b6e0:	cbz	w0, 42b834 <nftw@plt+0x28b44>
  42b6e4:	stp	x29, x30, [sp, #-16]!
  42b6e8:	mov	x29, sp
  42b6ec:	ldrb	w2, [x1, #4]
  42b6f0:	ldr	w3, [x4, #12]
  42b6f4:	cmp	w2, #0x35
  42b6f8:	b.ne	42b74c <nftw@plt+0x28a5c>  // b.any
  42b6fc:	ldr	x0, [x4]
  42b700:	ldr	x6, [x1, #8]
  42b704:	ldr	x5, [x0, #1280]
  42b708:	cmp	x6, x5
  42b70c:	b.ne	42b804 <nftw@plt+0x28b14>  // b.any
  42b710:	ldr	w2, [x1]
  42b714:	cmp	w3, #0x0
  42b718:	b.le	42b734 <nftw@plt+0x28a44>
  42b71c:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b720:	add	x3, x3, #0xf8f
  42b724:	mov	w1, #0x3                   	// #3
  42b728:	bl	41c39c <nftw@plt+0x196ac>
  42b72c:	mov	w0, #0x0                   	// #0
  42b730:	b	42b744 <nftw@plt+0x28a54>
  42b734:	add	w0, w3, #0x1
  42b738:	str	w0, [x4, #12]
  42b73c:	mov	w0, #0x3                   	// #3
  42b740:	str	w2, [x4, #20]
  42b744:	ldp	x29, x30, [sp], #16
  42b748:	ret
  42b74c:	cmp	w3, #0x1
  42b750:	b.ne	42b80c <nftw@plt+0x28b1c>  // b.any
  42b754:	cmp	w2, #0x14
  42b758:	b.eq	42b774 <nftw@plt+0x28a84>  // b.none
  42b75c:	ldr	w2, [x4, #20]
  42b760:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b764:	add	x3, x3, #0xfb9
  42b768:	mov	w1, #0x3                   	// #3
  42b76c:	ldr	x0, [x4]
  42b770:	b	42b728 <nftw@plt+0x28a38>
  42b774:	mov	w0, #0x2                   	// #2
  42b778:	str	w0, [x4, #12]
  42b77c:	mov	w0, #0x1                   	// #1
  42b780:	b	42b744 <nftw@plt+0x28a54>
  42b784:	mov	w0, #0x3                   	// #3
  42b788:	str	w0, [x4, #12]
  42b78c:	ldrb	w3, [x4, #10]
  42b790:	cmp	w2, #0x26
  42b794:	strb	wzr, [x4, #10]
  42b798:	b.ne	42b7bc <nftw@plt+0x28acc>  // b.any
  42b79c:	mov	w0, #0x1                   	// #1
  42b7a0:	strb	w0, [x4, #10]
  42b7a4:	ldr	w0, [x1]
  42b7a8:	str	w0, [x4, #16]
  42b7ac:	ldrb	w0, [x4, #8]
  42b7b0:	cbz	w0, 42b77c <nftw@plt+0x28a8c>
  42b7b4:	mov	w0, #0x2                   	// #2
  42b7b8:	b	42b744 <nftw@plt+0x28a54>
  42b7bc:	cmp	w2, #0x14
  42b7c0:	b.ne	42b7d4 <nftw@plt+0x28ae4>  // b.any
  42b7c4:	ldr	w0, [x4, #12]
  42b7c8:	add	w0, w0, #0x1
  42b7cc:	str	w0, [x4, #12]
  42b7d0:	b	42b7ac <nftw@plt+0x28abc>
  42b7d4:	cmp	w2, #0x15
  42b7d8:	b.ne	42b7ac <nftw@plt+0x28abc>  // b.any
  42b7dc:	ldr	w0, [x4, #12]
  42b7e0:	sub	w2, w0, #0x1
  42b7e4:	cmp	w0, #0x3
  42b7e8:	b.eq	42b7f4 <nftw@plt+0x28b04>  // b.none
  42b7ec:	str	w2, [x4, #12]
  42b7f0:	b	42b7ac <nftw@plt+0x28abc>
  42b7f4:	str	wzr, [x4, #12]
  42b7f8:	cbnz	w3, 42b824 <nftw@plt+0x28b34>
  42b7fc:	mov	w0, #0x4                   	// #4
  42b800:	b	42b744 <nftw@plt+0x28a54>
  42b804:	cmp	w3, #0x1
  42b808:	b.eq	42b75c <nftw@plt+0x28a6c>  // b.none
  42b80c:	cmp	w3, #0x1
  42b810:	b.le	42b7b4 <nftw@plt+0x28ac4>
  42b814:	cmp	w3, #0x2
  42b818:	b.ne	42b78c <nftw@plt+0x28a9c>  // b.any
  42b81c:	cmp	w2, #0x26
  42b820:	b.ne	42b784 <nftw@plt+0x28a94>  // b.any
  42b824:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42b828:	ldr	w2, [x1]
  42b82c:	add	x3, x3, #0xfec
  42b830:	b	42b768 <nftw@plt+0x28a78>
  42b834:	mov	w0, #0x2                   	// #2
  42b838:	ret
  42b83c:	stp	x29, x30, [sp, #-48]!
  42b840:	mov	x29, sp
  42b844:	stp	x19, x20, [sp, #16]
  42b848:	mov	x20, x0
  42b84c:	mov	x19, x1
  42b850:	ldr	x0, [x0, #32]
  42b854:	stp	x21, x22, [sp, #32]
  42b858:	cbz	x0, 42b8b4 <nftw@plt+0x28bc4>
  42b85c:	mov	w21, #0x0                   	// #0
  42b860:	ldr	w0, [x20, #48]
  42b864:	cmp	w0, w21
  42b868:	b.ls	42b8b4 <nftw@plt+0x28bc4>  // b.plast
  42b86c:	ldp	x0, x1, [x20, #32]
  42b870:	ubfiz	x22, x21, #3, #32
  42b874:	ldr	x2, [x1, x22]
  42b878:	mov	x1, x19
  42b87c:	ldr	x0, [x0, x22]
  42b880:	bl	43bcf8 <nftw@plt+0x39008>
  42b884:	cbnz	w0, 42b900 <nftw@plt+0x28c10>
  42b888:	ldr	x0, [x20, #40]
  42b88c:	ldr	x0, [x0, x22]
  42b890:	add	x1, x19, x0
  42b894:	ldrb	w2, [x19, x0]
  42b898:	cmp	w2, #0x2f
  42b89c:	b.ne	42b900 <nftw@plt+0x28c10>  // b.any
  42b8a0:	ldrb	w2, [x1, #1]
  42b8a4:	cmp	w2, #0x2e
  42b8a8:	b.eq	42b8e8 <nftw@plt+0x28bf8>  // b.none
  42b8ac:	add	x0, x0, #0x1
  42b8b0:	add	x19, x19, x0
  42b8b4:	mov	x0, x19
  42b8b8:	ldrb	w1, [x0]
  42b8bc:	cmp	w1, #0x2e
  42b8c0:	b.ne	42b908 <nftw@plt+0x28c18>  // b.any
  42b8c4:	ldrb	w1, [x0, #1]
  42b8c8:	cmp	w1, #0x2f
  42b8cc:	b.ne	42b908 <nftw@plt+0x28c18>  // b.any
  42b8d0:	add	x0, x0, #0x2
  42b8d4:	ldrb	w1, [x0]
  42b8d8:	cmp	w1, #0x2f
  42b8dc:	b.ne	42b8b8 <nftw@plt+0x28bc8>  // b.any
  42b8e0:	add	x0, x0, #0x1
  42b8e4:	b	42b8d4 <nftw@plt+0x28be4>
  42b8e8:	ldrb	w2, [x1, #2]
  42b8ec:	cmp	w2, #0x2e
  42b8f0:	b.ne	42b8ac <nftw@plt+0x28bbc>  // b.any
  42b8f4:	ldrb	w1, [x1, #3]
  42b8f8:	cmp	w1, #0x2f
  42b8fc:	b.ne	42b8ac <nftw@plt+0x28bbc>  // b.any
  42b900:	add	w21, w21, #0x1
  42b904:	b	42b860 <nftw@plt+0x28b70>
  42b908:	ldp	x19, x20, [sp, #16]
  42b90c:	ldp	x21, x22, [sp, #32]
  42b910:	ldp	x29, x30, [sp], #48
  42b914:	ret
  42b918:	stp	x29, x30, [sp, #-32]!
  42b91c:	mov	x3, x0
  42b920:	mov	w1, #0x0                   	// #0
  42b924:	mov	x29, sp
  42b928:	str	x19, [sp, #16]
  42b92c:	mov	x19, x0
  42b930:	ldrb	w2, [x3]
  42b934:	add	w0, w1, #0x1
  42b938:	cbz	w2, 42b990 <nftw@plt+0x28ca0>
  42b93c:	cmp	w2, #0x24
  42b940:	b.hi	42b984 <nftw@plt+0x28c94>  // b.pmore
  42b944:	cmp	w2, #0x22
  42b948:	b.hi	42b980 <nftw@plt+0x28c90>  // b.pmore
  42b94c:	cmp	w2, #0x9
  42b950:	b.eq	42b95c <nftw@plt+0x28c6c>  // b.none
  42b954:	cmp	w2, #0x20
  42b958:	b.ne	42b984 <nftw@plt+0x28c94>  // b.any
  42b95c:	sub	x0, x3, #0x1
  42b960:	add	w1, w1, #0x1
  42b964:	cmp	x0, x19
  42b968:	b.cc	42b984 <nftw@plt+0x28c94>  // b.lo, b.ul, b.last
  42b96c:	ldrb	w2, [x0]
  42b970:	cmp	w2, #0x5c
  42b974:	b.ne	42b984 <nftw@plt+0x28c94>  // b.any
  42b978:	sub	x0, x0, #0x1
  42b97c:	b	42b960 <nftw@plt+0x28c70>
  42b980:	mov	w1, w0
  42b984:	add	x3, x3, #0x1
  42b988:	add	w1, w1, #0x1
  42b98c:	b	42b930 <nftw@plt+0x28c40>
  42b990:	sxtw	x0, w0
  42b994:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42b998:	mov	x3, x19
  42b99c:	mov	x1, x0
  42b9a0:	mov	w5, #0x5c                  	// #92
  42b9a4:	ldrb	w2, [x3]
  42b9a8:	cbz	w2, 42ba28 <nftw@plt+0x28d38>
  42b9ac:	add	x4, x1, #0x1
  42b9b0:	cmp	w2, #0x23
  42b9b4:	b.eq	42ba20 <nftw@plt+0x28d30>  // b.none
  42b9b8:	b.hi	42b9d8 <nftw@plt+0x28ce8>  // b.pmore
  42b9bc:	cmp	w2, #0x9
  42b9c0:	b.eq	42b9ec <nftw@plt+0x28cfc>  // b.none
  42b9c4:	cmp	w2, #0x20
  42b9c8:	b.eq	42b9ec <nftw@plt+0x28cfc>  // b.none
  42b9cc:	add	x3, x3, #0x1
  42b9d0:	strb	w2, [x1], #1
  42b9d4:	b	42b9a4 <nftw@plt+0x28cb4>
  42b9d8:	cmp	w2, #0x24
  42b9dc:	b.ne	42b9cc <nftw@plt+0x28cdc>  // b.any
  42b9e0:	strb	w2, [x1]
  42b9e4:	mov	x1, x4
  42b9e8:	b	42b9cc <nftw@plt+0x28cdc>
  42b9ec:	sub	x4, x3, #0x1
  42b9f0:	mov	x6, x1
  42b9f4:	cmp	x4, x19
  42b9f8:	add	x1, x1, #0x1
  42b9fc:	b.cc	42ba18 <nftw@plt+0x28d28>  // b.lo, b.ul, b.last
  42ba00:	ldrb	w7, [x4]
  42ba04:	cmp	w7, #0x5c
  42ba08:	b.ne	42ba18 <nftw@plt+0x28d28>  // b.any
  42ba0c:	sub	x4, x4, #0x1
  42ba10:	sturb	w7, [x1, #-1]
  42ba14:	b	42b9f0 <nftw@plt+0x28d00>
  42ba18:	strb	w5, [x6]
  42ba1c:	b	42b9cc <nftw@plt+0x28cdc>
  42ba20:	strb	w5, [x1]
  42ba24:	b	42b9e4 <nftw@plt+0x28cf4>
  42ba28:	strb	wzr, [x1]
  42ba2c:	ldr	x19, [sp, #16]
  42ba30:	ldp	x29, x30, [sp], #32
  42ba34:	ret
  42ba38:	mov	x1, #0x38                  	// #56
  42ba3c:	mov	x0, #0x1                   	// #1
  42ba40:	b	43d18c <_obstack_memory_used@@Base+0x134>
  42ba44:	stp	x29, x30, [sp, #-32]!
  42ba48:	mov	x29, sp
  42ba4c:	stp	x19, x20, [sp, #16]
  42ba50:	mov	x19, x0
  42ba54:	ldr	x0, [x0]
  42ba58:	cbz	x0, 42ba84 <nftw@plt+0x28d94>
  42ba5c:	mov	w20, #0x0                   	// #0
  42ba60:	ldr	w1, [x19, #8]
  42ba64:	ldr	x0, [x19]
  42ba68:	cmp	w1, w20
  42ba6c:	b.ls	42ba80 <nftw@plt+0x28d90>  // b.plast
  42ba70:	ldr	x0, [x0, w20, uxtw #3]
  42ba74:	add	w20, w20, #0x1
  42ba78:	bl	402a80 <free@plt>
  42ba7c:	b	42ba60 <nftw@plt+0x28d70>
  42ba80:	bl	402a80 <free@plt>
  42ba84:	ldr	x0, [x19, #16]
  42ba88:	cbz	x0, 42bab4 <nftw@plt+0x28dc4>
  42ba8c:	mov	w20, #0x0                   	// #0
  42ba90:	ldr	w1, [x19, #24]
  42ba94:	ldr	x0, [x19, #16]
  42ba98:	cmp	w1, w20
  42ba9c:	b.ls	42bab0 <nftw@plt+0x28dc0>  // b.plast
  42baa0:	ldr	x0, [x0, w20, uxtw #3]
  42baa4:	add	w20, w20, #0x1
  42baa8:	bl	402a80 <free@plt>
  42baac:	b	42ba90 <nftw@plt+0x28da0>
  42bab0:	bl	402a80 <free@plt>
  42bab4:	ldr	x0, [x19, #32]
  42bab8:	cbz	x0, 42baec <nftw@plt+0x28dfc>
  42babc:	mov	w20, #0x0                   	// #0
  42bac0:	ldr	w1, [x19, #48]
  42bac4:	ldr	x0, [x19, #32]
  42bac8:	cmp	w1, w20
  42bacc:	b.ls	42bae0 <nftw@plt+0x28df0>  // b.plast
  42bad0:	ldr	x0, [x0, w20, uxtw #3]
  42bad4:	add	w20, w20, #0x1
  42bad8:	bl	402a80 <free@plt>
  42badc:	b	42bac0 <nftw@plt+0x28dd0>
  42bae0:	bl	402a80 <free@plt>
  42bae4:	ldr	x0, [x19, #40]
  42bae8:	bl	402a80 <free@plt>
  42baec:	mov	x0, x19
  42baf0:	ldp	x19, x20, [sp, #16]
  42baf4:	ldp	x29, x30, [sp], #32
  42baf8:	b	402a80 <free@plt>
  42bafc:	stp	x29, x30, [sp, #-48]!
  42bb00:	mov	x29, sp
  42bb04:	stp	x19, x20, [sp, #16]
  42bb08:	mov	x19, x0
  42bb0c:	mov	w20, w2
  42bb10:	str	x21, [sp, #32]
  42bb14:	mov	x21, x1
  42bb18:	ldr	w1, [x0, #12]
  42bb1c:	ldr	w0, [x0, #8]
  42bb20:	cmp	w0, w1
  42bb24:	b.ne	42bb44 <nftw@plt+0x28e54>  // b.any
  42bb28:	add	w0, w0, #0x2
  42bb2c:	lsl	w0, w0, #1
  42bb30:	str	w0, [x19, #12]
  42bb34:	lsl	x1, x0, #3
  42bb38:	ldr	x0, [x19]
  42bb3c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42bb40:	str	x0, [x19]
  42bb44:	mov	x1, x21
  42bb48:	mov	x0, x19
  42bb4c:	bl	42b83c <nftw@plt+0x28b4c>
  42bb50:	cbz	w20, 42bb7c <nftw@plt+0x28e8c>
  42bb54:	bl	42b918 <nftw@plt+0x28c28>
  42bb58:	ldr	w1, [x19, #8]
  42bb5c:	ldr	x2, [x19]
  42bb60:	add	w3, w1, #0x1
  42bb64:	ldr	x21, [sp, #32]
  42bb68:	str	w3, [x19, #8]
  42bb6c:	str	x0, [x2, w1, uxtw #3]
  42bb70:	ldp	x19, x20, [sp, #16]
  42bb74:	ldp	x29, x30, [sp], #48
  42bb78:	ret
  42bb7c:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  42bb80:	b	42bb58 <nftw@plt+0x28e68>
  42bb84:	ldr	w2, [x0, #8]
  42bb88:	cbnz	w2, 42bc30 <nftw@plt+0x28f40>
  42bb8c:	stp	x29, x30, [sp, #-48]!
  42bb90:	mov	x29, sp
  42bb94:	stp	x19, x20, [sp, #16]
  42bb98:	str	x21, [sp, #32]
  42bb9c:	ldrb	w2, [x1]
  42bba0:	cbnz	w2, 42bbc8 <nftw@plt+0x28ed8>
  42bba4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42bba8:	add	x1, x1, #0xd5e
  42bbac:	mov	w2, #0x1                   	// #1
  42bbb0:	bl	42bafc <nftw@plt+0x28e0c>
  42bbb4:	mov	sp, x29
  42bbb8:	ldp	x19, x20, [sp, #16]
  42bbbc:	ldr	x21, [sp, #32]
  42bbc0:	ldp	x29, x30, [sp], #48
  42bbc4:	ret
  42bbc8:	mov	x20, x0
  42bbcc:	mov	x0, x1
  42bbd0:	bl	43cd08 <nftw@plt+0x3a018>
  42bbd4:	mov	x21, x0
  42bbd8:	bl	402630 <strlen@plt>
  42bbdc:	add	x2, x0, #0x12
  42bbe0:	and	x2, x2, #0xfffffffffffffff0
  42bbe4:	mov	x1, x21
  42bbe8:	sub	sp, sp, x2
  42bbec:	mov	x19, sp
  42bbf0:	mov	x0, x19
  42bbf4:	bl	402b00 <strcpy@plt>
  42bbf8:	mov	x0, x19
  42bbfc:	mov	w1, #0x2e                  	// #46
  42bc00:	bl	402930 <strrchr@plt>
  42bc04:	cbnz	x0, 42bc14 <nftw@plt+0x28f24>
  42bc08:	mov	x0, x19
  42bc0c:	bl	402630 <strlen@plt>
  42bc10:	add	x0, x19, x0
  42bc14:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42bc18:	add	x1, x1, #0xc0
  42bc1c:	bl	402b00 <strcpy@plt>
  42bc20:	mov	x1, x19
  42bc24:	mov	x0, x20
  42bc28:	mov	w2, #0x1                   	// #1
  42bc2c:	b	42bbb0 <nftw@plt+0x28ec0>
  42bc30:	ret
  42bc34:	stp	x29, x30, [sp, #-32]!
  42bc38:	mov	x29, sp
  42bc3c:	stp	x19, x20, [sp, #16]
  42bc40:	mov	x19, x0
  42bc44:	bl	42b83c <nftw@plt+0x28b4c>
  42bc48:	bl	42b918 <nftw@plt+0x28c28>
  42bc4c:	mov	x20, x0
  42bc50:	ldp	w1, w0, [x19, #24]
  42bc54:	cmp	w1, w0
  42bc58:	b.ne	42bc78 <nftw@plt+0x28f88>  // b.any
  42bc5c:	add	w1, w1, #0x4
  42bc60:	ldr	x0, [x19, #16]
  42bc64:	lsl	w1, w1, #1
  42bc68:	str	w1, [x19, #28]
  42bc6c:	lsl	x1, x1, #3
  42bc70:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42bc74:	str	x0, [x19, #16]
  42bc78:	ldr	w0, [x19, #24]
  42bc7c:	ldr	x1, [x19, #16]
  42bc80:	add	w2, w0, #0x1
  42bc84:	str	w2, [x19, #24]
  42bc88:	str	x20, [x1, w0, uxtw #3]
  42bc8c:	ldp	x19, x20, [sp, #16]
  42bc90:	ldp	x29, x30, [sp], #32
  42bc94:	ret
  42bc98:	stp	x29, x30, [sp, #-64]!
  42bc9c:	mov	x29, sp
  42bca0:	stp	x19, x20, [sp, #16]
  42bca4:	mov	x19, x0
  42bca8:	stp	x21, x22, [sp, #32]
  42bcac:	mov	x21, x1
  42bcb0:	str	x23, [sp, #48]
  42bcb4:	ldrb	w0, [x21]
  42bcb8:	cbz	w0, 42bd6c <nftw@plt+0x2907c>
  42bcbc:	mov	x20, x21
  42bcc0:	ldrb	w0, [x20]
  42bcc4:	cbz	w0, 42bcd8 <nftw@plt+0x28fe8>
  42bcc8:	cmp	w0, #0x3a
  42bccc:	b.eq	42bcd8 <nftw@plt+0x28fe8>  // b.none
  42bcd0:	add	x20, x20, #0x1
  42bcd4:	b	42bcc0 <nftw@plt+0x28fd0>
  42bcd8:	sub	x22, x20, x21
  42bcdc:	add	x0, x22, #0x1
  42bce0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42bce4:	mov	x23, x0
  42bce8:	mov	x2, x22
  42bcec:	mov	x1, x21
  42bcf0:	bl	4025d0 <memcpy@plt>
  42bcf4:	ldrb	w0, [x20]
  42bcf8:	strb	wzr, [x23, x22]
  42bcfc:	cmp	w0, #0x3a
  42bd00:	b.ne	42bd08 <nftw@plt+0x29018>  // b.any
  42bd04:	add	x20, x20, #0x1
  42bd08:	ldp	w1, w0, [x19, #48]
  42bd0c:	cmp	w1, w0
  42bd10:	b.ne	42bd44 <nftw@plt+0x29054>  // b.any
  42bd14:	add	w1, w1, #0x4
  42bd18:	ldr	x0, [x19, #32]
  42bd1c:	lsl	w1, w1, #1
  42bd20:	str	w1, [x19, #52]
  42bd24:	lsl	x1, x1, #3
  42bd28:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42bd2c:	str	x0, [x19, #32]
  42bd30:	ldr	x0, [x19, #40]
  42bd34:	ldr	w1, [x19, #52]
  42bd38:	lsl	x1, x1, #3
  42bd3c:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42bd40:	str	x0, [x19, #40]
  42bd44:	ldr	w1, [x19, #48]
  42bd48:	mov	x21, x20
  42bd4c:	ldr	x2, [x19, #32]
  42bd50:	ubfiz	x0, x1, #3, #32
  42bd54:	add	w1, w1, #0x1
  42bd58:	str	x23, [x2, x0]
  42bd5c:	ldr	x2, [x19, #40]
  42bd60:	str	x22, [x2, x0]
  42bd64:	str	w1, [x19, #48]
  42bd68:	b	42bcb4 <nftw@plt+0x28fc4>
  42bd6c:	ldp	x19, x20, [sp, #16]
  42bd70:	ldp	x21, x22, [sp, #32]
  42bd74:	ldr	x23, [sp, #48]
  42bd78:	ldp	x29, x30, [sp], #64
  42bd7c:	ret
  42bd80:	stp	x29, x30, [sp, #-80]!
  42bd84:	mov	x29, sp
  42bd88:	stp	x21, x22, [sp, #32]
  42bd8c:	mov	x22, x0
  42bd90:	sub	w0, w2, #0x1
  42bd94:	cmp	w0, #0x20
  42bd98:	mov	w0, #0x22                  	// #34
  42bd9c:	csel	w21, w2, w0, hi  // hi = pmore
  42bda0:	stp	x19, x20, [sp, #16]
  42bda4:	mov	x20, x1
  42bda8:	stp	x25, x26, [sp, #64]
  42bdac:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42bdb0:	add	x25, x25, #0xc3
  42bdb4:	mov	w19, #0x0                   	// #0
  42bdb8:	stp	x23, x24, [sp, #48]
  42bdbc:	mov	w23, #0x0                   	// #0
  42bdc0:	ldr	w0, [x22, #8]
  42bdc4:	cmp	w0, w23
  42bdc8:	b.ls	42be2c <nftw@plt+0x2913c>  // b.plast
  42bdcc:	ldr	x0, [x22]
  42bdd0:	ubfiz	x26, x23, #3, #32
  42bdd4:	ldr	x0, [x0, x26]
  42bdd8:	bl	402630 <strlen@plt>
  42bddc:	mov	x24, x0
  42bde0:	add	w19, w19, w0
  42bde4:	cbz	w23, 42be04 <nftw@plt+0x29114>
  42bde8:	cmp	w21, #0x0
  42bdec:	mov	x1, x20
  42bdf0:	ccmp	w21, w19, #0x2, ne  // ne = any
  42bdf4:	b.cs	42be1c <nftw@plt+0x2912c>  // b.hs, b.nlast
  42bdf8:	add	w19, w24, #0x1
  42bdfc:	mov	x0, x25
  42be00:	bl	402bd0 <fputs_unlocked@plt>
  42be04:	ldr	x0, [x22]
  42be08:	mov	x1, x20
  42be0c:	add	w23, w23, #0x1
  42be10:	ldr	x0, [x0, x26]
  42be14:	bl	402bd0 <fputs_unlocked@plt>
  42be18:	b	42bdc0 <nftw@plt+0x290d0>
  42be1c:	mov	w0, #0x20                  	// #32
  42be20:	add	w19, w19, #0x1
  42be24:	bl	402740 <putc_unlocked@plt>
  42be28:	b	42be04 <nftw@plt+0x29114>
  42be2c:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42be30:	add	w19, w19, #0x1
  42be34:	add	x25, x25, #0xc3
  42be38:	mov	w23, #0x0                   	// #0
  42be3c:	mov	x1, x20
  42be40:	mov	w0, #0x3a                  	// #58
  42be44:	bl	402740 <putc_unlocked@plt>
  42be48:	ldr	w0, [x22, #24]
  42be4c:	cmp	w0, w23
  42be50:	b.ls	42beb0 <nftw@plt+0x291c0>  // b.plast
  42be54:	ldr	x0, [x22, #16]
  42be58:	ubfiz	x26, x23, #3, #32
  42be5c:	ldr	x0, [x0, x26]
  42be60:	bl	402630 <strlen@plt>
  42be64:	add	w19, w19, w0
  42be68:	cmp	w21, #0x0
  42be6c:	mov	x24, x0
  42be70:	ccmp	w21, w19, #0x2, ne  // ne = any
  42be74:	mov	x1, x20
  42be78:	b.cs	42bea0 <nftw@plt+0x291b0>  // b.hs, b.nlast
  42be7c:	add	w19, w24, #0x1
  42be80:	mov	x0, x25
  42be84:	bl	402bd0 <fputs_unlocked@plt>
  42be88:	ldr	x0, [x22, #16]
  42be8c:	mov	x1, x20
  42be90:	add	w23, w23, #0x1
  42be94:	ldr	x0, [x0, x26]
  42be98:	bl	402bd0 <fputs_unlocked@plt>
  42be9c:	b	42be48 <nftw@plt+0x29158>
  42bea0:	mov	w0, #0x20                  	// #32
  42bea4:	add	w19, w19, #0x1
  42bea8:	bl	402740 <putc_unlocked@plt>
  42beac:	b	42be88 <nftw@plt+0x29198>
  42beb0:	mov	x1, x20
  42beb4:	mov	w0, #0xa                   	// #10
  42beb8:	ldp	x19, x20, [sp, #16]
  42bebc:	ldp	x21, x22, [sp, #32]
  42bec0:	ldp	x23, x24, [sp, #48]
  42bec4:	ldp	x25, x26, [sp, #64]
  42bec8:	ldp	x29, x30, [sp], #80
  42becc:	b	402740 <putc_unlocked@plt>
  42bed0:	stp	x29, x30, [sp, #-48]!
  42bed4:	mov	x29, sp
  42bed8:	stp	x19, x20, [sp, #16]
  42bedc:	mov	x19, x1
  42bee0:	mov	w20, #0x1                   	// #1
  42bee4:	str	x21, [sp, #32]
  42bee8:	mov	x21, x0
  42beec:	ldr	w0, [x21, #24]
  42bef0:	cmp	w0, w20
  42bef4:	b.ls	42bf34 <nftw@plt+0x29244>  // b.plast
  42bef8:	mov	x1, x19
  42befc:	mov	w0, #0xa                   	// #10
  42bf00:	bl	402740 <putc_unlocked@plt>
  42bf04:	ldr	x0, [x21, #16]
  42bf08:	mov	x1, x19
  42bf0c:	ldr	x0, [x0, w20, uxtw #3]
  42bf10:	add	w20, w20, #0x1
  42bf14:	bl	402bd0 <fputs_unlocked@plt>
  42bf18:	mov	x1, x19
  42bf1c:	mov	w0, #0x3a                  	// #58
  42bf20:	bl	402740 <putc_unlocked@plt>
  42bf24:	mov	x1, x19
  42bf28:	mov	w0, #0xa                   	// #10
  42bf2c:	bl	402740 <putc_unlocked@plt>
  42bf30:	b	42beec <nftw@plt+0x291fc>
  42bf34:	ldp	x19, x20, [sp, #16]
  42bf38:	ldr	x21, [sp, #32]
  42bf3c:	ldp	x29, x30, [sp], #48
  42bf40:	ret
  42bf44:	stp	x29, x30, [sp, #-64]!
  42bf48:	mov	x3, x1
  42bf4c:	mov	x2, #0x1                   	// #1
  42bf50:	mov	x29, sp
  42bf54:	stp	x19, x20, [sp, #16]
  42bf58:	mov	x19, x0
  42bf5c:	mov	x20, x1
  42bf60:	add	x0, x0, #0x18
  42bf64:	mov	x1, #0x4                   	// #4
  42bf68:	stp	x21, x22, [sp, #32]
  42bf6c:	bl	402610 <fwrite_unlocked@plt>
  42bf70:	cmp	x0, #0x1
  42bf74:	b.ne	42bfe0 <nftw@plt+0x292f0>  // b.any
  42bf78:	mov	w21, #0x0                   	// #0
  42bf7c:	ldr	w0, [x19, #24]
  42bf80:	cmp	w0, w21
  42bf84:	b.ls	42bff4 <nftw@plt+0x29304>  // b.plast
  42bf88:	ldr	x0, [x19, #16]
  42bf8c:	ubfiz	x22, x21, #3, #32
  42bf90:	ldr	x0, [x0, x22]
  42bf94:	bl	402630 <strlen@plt>
  42bf98:	str	x0, [sp, #56]
  42bf9c:	mov	x2, #0x1                   	// #1
  42bfa0:	mov	x3, x20
  42bfa4:	add	x0, sp, #0x38
  42bfa8:	mov	x1, #0x8                   	// #8
  42bfac:	bl	402610 <fwrite_unlocked@plt>
  42bfb0:	mov	x2, x0
  42bfb4:	cmp	x0, #0x1
  42bfb8:	b.ne	42bfe0 <nftw@plt+0x292f0>  // b.any
  42bfbc:	ldr	x0, [x19, #16]
  42bfc0:	mov	x3, x20
  42bfc4:	ldr	x1, [sp, #56]
  42bfc8:	ldr	x0, [x0, x22]
  42bfcc:	bl	402610 <fwrite_unlocked@plt>
  42bfd0:	cmp	x0, #0x1
  42bfd4:	b.ne	42bfe0 <nftw@plt+0x292f0>  // b.any
  42bfd8:	add	w21, w21, #0x1
  42bfdc:	b	42bf7c <nftw@plt+0x2928c>
  42bfe0:	mov	w0, #0xffffffff            	// #-1
  42bfe4:	ldp	x19, x20, [sp, #16]
  42bfe8:	ldp	x21, x22, [sp, #32]
  42bfec:	ldp	x29, x30, [sp], #64
  42bff0:	ret
  42bff4:	mov	w0, #0x0                   	// #0
  42bff8:	b	42bfe4 <nftw@plt+0x292f4>
  42bffc:	stp	x29, x30, [sp, #-80]!
  42c000:	mov	x3, x1
  42c004:	mov	x29, sp
  42c008:	stp	x19, x20, [sp, #16]
  42c00c:	mov	x20, x1
  42c010:	mov	x1, #0x1                   	// #1
  42c014:	stp	x21, x22, [sp, #32]
  42c018:	mov	x21, x2
  42c01c:	mov	x2, #0x4                   	// #4
  42c020:	stp	x23, x24, [sp, #48]
  42c024:	mov	x24, x0
  42c028:	add	x0, sp, #0x44
  42c02c:	bl	4029b0 <fread_unlocked@plt>
  42c030:	cmp	x0, #0x4
  42c034:	b.ne	42c07c <nftw@plt+0x2938c>  // b.any
  42c038:	mov	x0, #0x200                 	// #512
  42c03c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42c040:	mov	x19, x0
  42c044:	mov	x23, #0x200                 	// #512
  42c048:	mov	w22, #0x0                   	// #0
  42c04c:	ldr	w0, [sp, #68]
  42c050:	cmp	w0, w22
  42c054:	b.ls	42c0f4 <nftw@plt+0x29404>  // b.plast
  42c058:	mov	x3, x20
  42c05c:	add	x0, sp, #0x48
  42c060:	mov	x2, #0x8                   	// #8
  42c064:	mov	x1, #0x1                   	// #1
  42c068:	bl	4029b0 <fread_unlocked@plt>
  42c06c:	cmp	x0, #0x8
  42c070:	b.eq	42c084 <nftw@plt+0x29394>  // b.none
  42c074:	mov	x0, x19
  42c078:	bl	402a80 <free@plt>
  42c07c:	mov	w0, #0xffffffff            	// #-1
  42c080:	b	42c100 <nftw@plt+0x29410>
  42c084:	ldr	x0, [sp, #72]
  42c088:	add	x1, x0, #0x1
  42c08c:	cmp	x1, x23
  42c090:	b.ls	42c0a8 <nftw@plt+0x293b8>  // b.plast
  42c094:	add	x23, x0, #0x80
  42c098:	mov	x0, x19
  42c09c:	mov	x1, x23
  42c0a0:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42c0a4:	mov	x19, x0
  42c0a8:	ldr	x2, [sp, #72]
  42c0ac:	mov	x1, #0x1                   	// #1
  42c0b0:	mov	x3, x20
  42c0b4:	mov	x0, x19
  42c0b8:	bl	4029b0 <fread_unlocked@plt>
  42c0bc:	ldr	x1, [sp, #72]
  42c0c0:	cmp	x0, x1
  42c0c4:	b.ne	42c074 <nftw@plt+0x29384>  // b.any
  42c0c8:	strb	wzr, [x19, x0]
  42c0cc:	cbz	x21, 42c0ec <nftw@plt+0x293fc>
  42c0d0:	mov	x1, x21
  42c0d4:	mov	x0, x19
  42c0d8:	bl	43bcf4 <nftw@plt+0x39004>
  42c0dc:	cbz	w0, 42c0ec <nftw@plt+0x293fc>
  42c0e0:	mov	x1, x19
  42c0e4:	mov	x0, x24
  42c0e8:	bl	42bc34 <nftw@plt+0x28f44>
  42c0ec:	add	w22, w22, #0x1
  42c0f0:	b	42c04c <nftw@plt+0x2935c>
  42c0f4:	mov	x0, x19
  42c0f8:	bl	402a80 <free@plt>
  42c0fc:	mov	w0, #0x0                   	// #0
  42c100:	ldp	x19, x20, [sp, #16]
  42c104:	ldp	x21, x22, [sp, #32]
  42c108:	ldp	x23, x24, [sp, #48]
  42c10c:	ldp	x29, x30, [sp], #80
  42c110:	ret
  42c114:	stp	x29, x30, [sp, #-48]!
  42c118:	mov	x1, #0x90                  	// #144
  42c11c:	mov	x29, sp
  42c120:	str	x21, [sp, #32]
  42c124:	mov	w21, #0x1                   	// #1
  42c128:	stp	x19, x20, [sp, #16]
  42c12c:	lsl	w20, w21, w0
  42c130:	mov	x0, #0x1                   	// #1
  42c134:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  42c138:	mov	x19, x0
  42c13c:	adrp	x4, 402000 <memcpy@plt-0x5d0>
  42c140:	adrp	x3, 43d000 <_obstack_free@@Base+0x1c>
  42c144:	add	x4, x4, #0xa80
  42c148:	add	x3, x3, #0x158
  42c14c:	mov	x2, #0x0                   	// #0
  42c150:	mov	x1, #0x0                   	// #0
  42c154:	bl	43ce68 <_obstack_begin@@Base>
  42c158:	str	xzr, [x19, #48]
  42c15c:	mov	w0, w20
  42c160:	mov	x1, #0x8                   	// #8
  42c164:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  42c168:	str	x0, [x19, #88]
  42c16c:	mov	x0, x19
  42c170:	str	w20, [x19, #112]
  42c174:	strb	w21, [x19, #136]
  42c178:	ldp	x19, x20, [sp, #16]
  42c17c:	ldr	x21, [sp, #32]
  42c180:	ldp	x29, x30, [sp], #48
  42c184:	ret
  42c188:	stp	x29, x30, [sp, #-32]!
  42c18c:	mov	x1, #0x0                   	// #0
  42c190:	mov	x29, sp
  42c194:	str	x19, [sp, #16]
  42c198:	mov	x19, x0
  42c19c:	bl	43cfe4 <_obstack_free@@Base>
  42c1a0:	ldrb	w0, [x19, #136]
  42c1a4:	cbz	w0, 42c1b0 <nftw@plt+0x294c0>
  42c1a8:	ldr	x0, [x19, #88]
  42c1ac:	bl	402a80 <free@plt>
  42c1b0:	mov	x0, x19
  42c1b4:	ldr	x19, [sp, #16]
  42c1b8:	ldp	x29, x30, [sp], #32
  42c1bc:	b	402a80 <free@plt>
  42c1c0:	stp	x29, x30, [sp, #-112]!
  42c1c4:	mov	x29, sp
  42c1c8:	stp	x19, x20, [sp, #16]
  42c1cc:	mov	x19, x0
  42c1d0:	stp	x25, x26, [sp, #64]
  42c1d4:	mov	x26, x1
  42c1d8:	ldr	w25, [x0, #112]
  42c1dc:	ldr	w0, [x0, #128]
  42c1e0:	stp	x21, x22, [sp, #32]
  42c1e4:	mov	x21, x2
  42c1e8:	add	w0, w0, #0x1
  42c1ec:	stp	x23, x24, [sp, #48]
  42c1f0:	mov	w22, w3
  42c1f4:	stp	x27, x28, [sp, #80]
  42c1f8:	sub	w27, w25, #0x1
  42c1fc:	and	w24, w27, w3
  42c200:	ldr	x28, [x19, #88]
  42c204:	str	w0, [x19, #128]
  42c208:	and	w0, w27, w3
  42c20c:	str	w4, [sp, #104]
  42c210:	ldr	x20, [x28, x0, lsl #3]
  42c214:	cbz	x20, 42c47c <nftw@plt+0x2978c>
  42c218:	cmn	x20, #0x1
  42c21c:	b.eq	42c24c <nftw@plt+0x2955c>  // b.none
  42c220:	ldr	w0, [x20, #12]
  42c224:	cmp	w0, w3
  42c228:	b.ne	42c244 <nftw@plt+0x29554>  // b.any
  42c22c:	ldr	w0, [x20, #8]
  42c230:	cmp	w0, w2
  42c234:	b.ne	42c244 <nftw@plt+0x29554>  // b.any
  42c238:	ldr	x0, [x20]
  42c23c:	bl	4029c0 <memcmp@plt>
  42c240:	cbz	w0, 42c2c4 <nftw@plt+0x295d4>
  42c244:	mov	w23, w25
  42c248:	b	42c250 <nftw@plt+0x29560>
  42c24c:	mov	w23, w24
  42c250:	add	w4, w22, w22, lsl #4
  42c254:	and	w4, w4, w27
  42c258:	orr	w4, w4, #0x1
  42c25c:	ldr	w0, [x19, #132]
  42c260:	add	w0, w0, #0x1
  42c264:	str	w0, [x19, #132]
  42c268:	add	w0, w24, w4
  42c26c:	and	w24, w27, w0
  42c270:	and	w0, w27, w0
  42c274:	ldr	x20, [x28, x0, lsl #3]
  42c278:	cbz	x20, 42c2e4 <nftw@plt+0x295f4>
  42c27c:	cmn	x20, #0x1
  42c280:	b.ne	42c290 <nftw@plt+0x295a0>  // b.any
  42c284:	cmp	w23, w25
  42c288:	csel	w23, w23, w24, eq  // eq = none
  42c28c:	b	42c25c <nftw@plt+0x2956c>
  42c290:	ldr	w0, [x20, #12]
  42c294:	cmp	w0, w22
  42c298:	b.ne	42c25c <nftw@plt+0x2956c>  // b.any
  42c29c:	ldr	w0, [x20, #8]
  42c2a0:	cmp	w0, w21
  42c2a4:	b.ne	42c25c <nftw@plt+0x2956c>  // b.any
  42c2a8:	ldr	x0, [x20]
  42c2ac:	mov	x2, x21
  42c2b0:	mov	x1, x26
  42c2b4:	str	w4, [sp, #108]
  42c2b8:	bl	4029c0 <memcmp@plt>
  42c2bc:	ldr	w4, [sp, #108]
  42c2c0:	cbnz	w0, 42c25c <nftw@plt+0x2956c>
  42c2c4:	mov	x0, x20
  42c2c8:	ldp	x19, x20, [sp, #16]
  42c2cc:	ldp	x21, x22, [sp, #32]
  42c2d0:	ldp	x23, x24, [sp, #48]
  42c2d4:	ldp	x25, x26, [sp, #64]
  42c2d8:	ldp	x27, x28, [sp, #80]
  42c2dc:	ldp	x29, x30, [sp], #112
  42c2e0:	ret
  42c2e4:	ldr	w0, [sp, #104]
  42c2e8:	cbnz	w0, 42c2f4 <nftw@plt+0x29604>
  42c2ec:	mov	x20, #0x0                   	// #0
  42c2f0:	b	42c2c4 <nftw@plt+0x295d4>
  42c2f4:	cmp	w23, w25
  42c2f8:	csel	w24, w24, w23, eq  // eq = none
  42c2fc:	ldr	x1, [x19, #96]
  42c300:	mov	x0, x19
  42c304:	blr	x1
  42c308:	mov	x20, x0
  42c30c:	ldr	x0, [x19, #88]
  42c310:	ldr	x1, [x19, #104]
  42c314:	str	x20, [x0, w24, uxtw #3]
  42c318:	add	x0, x21, #0x1
  42c31c:	stp	w21, w22, [x20, #8]
  42c320:	cbz	x1, 42c3f4 <nftw@plt+0x29704>
  42c324:	blr	x1
  42c328:	mov	x22, x0
  42c32c:	mov	x2, x21
  42c330:	mov	x1, x26
  42c334:	bl	4025d0 <memcpy@plt>
  42c338:	strb	wzr, [x22, x21]
  42c33c:	str	x22, [x20]
  42c340:	ldp	w0, w1, [x19, #112]
  42c344:	add	w1, w1, #0x1
  42c348:	str	w1, [x19, #116]
  42c34c:	lsl	w22, w0, #1
  42c350:	add	w0, w0, w0, lsl #1
  42c354:	cmp	w0, w1, lsl #2
  42c358:	b.hi	42c2c4 <nftw@plt+0x295d4>  // b.pmore
  42c35c:	mov	w0, w22
  42c360:	mov	x1, #0x8                   	// #8
  42c364:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  42c368:	mov	x21, x0
  42c36c:	ldr	x0, [x19, #88]
  42c370:	sub	w2, w22, #0x1
  42c374:	ldr	w5, [x19, #112]
  42c378:	mov	x3, x0
  42c37c:	add	x5, x0, x5, lsl #3
  42c380:	ldr	x7, [x3]
  42c384:	sub	x1, x7, #0x1
  42c388:	cmn	x1, #0x3
  42c38c:	b.hi	42c3c8 <nftw@plt+0x296d8>  // b.pmore
  42c390:	ldr	w1, [x7, #12]
  42c394:	and	w4, w2, w1
  42c398:	and	w6, w2, w1
  42c39c:	ldr	x4, [x21, x4, lsl #3]
  42c3a0:	cbz	x4, 42c3c4 <nftw@plt+0x296d4>
  42c3a4:	add	w1, w1, w1, lsl #4
  42c3a8:	and	w1, w1, w2
  42c3ac:	orr	w1, w1, #0x1
  42c3b0:	add	w4, w1, w6
  42c3b4:	and	w6, w2, w4
  42c3b8:	and	w4, w2, w4
  42c3bc:	ldr	x4, [x21, x4, lsl #3]
  42c3c0:	cbnz	x4, 42c3b0 <nftw@plt+0x296c0>
  42c3c4:	str	x7, [x21, w6, uxtw #3]
  42c3c8:	add	x3, x3, #0x8
  42c3cc:	cmp	x5, x3
  42c3d0:	b.hi	42c380 <nftw@plt+0x29690>  // b.pmore
  42c3d4:	ldrb	w1, [x19, #136]
  42c3d8:	cbz	w1, 42c3e0 <nftw@plt+0x296f0>
  42c3dc:	bl	402a80 <free@plt>
  42c3e0:	mov	w0, #0x1                   	// #1
  42c3e4:	str	x21, [x19, #88]
  42c3e8:	str	w22, [x19, #112]
  42c3ec:	strb	w0, [x19, #136]
  42c3f0:	b	42c2c4 <nftw@plt+0x295d4>
  42c3f4:	ldp	x2, x1, [x19, #24]
  42c3f8:	sub	x1, x1, x2
  42c3fc:	cmp	x1, x0
  42c400:	b.cs	42c410 <nftw@plt+0x29720>  // b.hs, b.nlast
  42c404:	mov	x1, x0
  42c408:	mov	x0, x19
  42c40c:	bl	43ce94 <_obstack_newchunk@@Base>
  42c410:	ldr	x0, [x19, #24]
  42c414:	mov	x2, x21
  42c418:	mov	x1, x26
  42c41c:	bl	4025d0 <memcpy@plt>
  42c420:	ldr	x1, [x19, #24]
  42c424:	add	x0, x1, x21
  42c428:	add	x0, x0, #0x1
  42c42c:	str	x0, [x19, #24]
  42c430:	strb	wzr, [x1, x21]
  42c434:	ldp	x2, x1, [x19, #16]
  42c438:	cmp	x1, x2
  42c43c:	b.ne	42c44c <nftw@plt+0x2975c>  // b.any
  42c440:	ldrb	w0, [x19, #80]
  42c444:	orr	w0, w0, #0x2
  42c448:	strb	w0, [x19, #80]
  42c44c:	ldr	x0, [x19, #48]
  42c450:	ldr	x3, [x19, #32]
  42c454:	add	x1, x1, x0
  42c458:	bic	x0, x1, x0
  42c45c:	ldr	x1, [x19, #8]
  42c460:	sub	x4, x0, x1
  42c464:	sub	x1, x3, x1
  42c468:	cmp	x4, x1
  42c46c:	csel	x0, x0, x3, ls  // ls = plast
  42c470:	stp	x0, x0, [x19, #16]
  42c474:	str	x2, [x20]
  42c478:	b	42c340 <nftw@plt+0x29650>
  42c47c:	ldr	w0, [sp, #104]
  42c480:	cbnz	w0, 42c2fc <nftw@plt+0x2960c>
  42c484:	b	42c2ec <nftw@plt+0x295fc>
  42c488:	mov	w4, w3
  42c48c:	mov	x6, #0x0                   	// #0
  42c490:	mov	w5, #0x0                   	// #0
  42c494:	mov	w7, #0x43                  	// #67
  42c498:	cmp	x2, x6
  42c49c:	b.eq	42c4b8 <nftw@plt+0x297c8>  // b.none
  42c4a0:	mul	w5, w5, w7
  42c4a4:	ldrb	w3, [x1, x6]
  42c4a8:	add	x6, x6, #0x1
  42c4ac:	sub	w5, w5, #0x71
  42c4b0:	add	w5, w3, w5
  42c4b4:	b	42c498 <nftw@plt+0x297a8>
  42c4b8:	add	w3, w5, w2
  42c4bc:	b	42c1c0 <nftw@plt+0x294d0>
  42c4c0:	stp	x29, x30, [sp, #-64]!
  42c4c4:	mov	x29, sp
  42c4c8:	stp	x19, x20, [sp, #16]
  42c4cc:	mov	x19, x0
  42c4d0:	ldr	x20, [x0, #88]
  42c4d4:	str	x23, [sp, #48]
  42c4d8:	ldr	w23, [x0, #112]
  42c4dc:	stp	x21, x22, [sp, #32]
  42c4e0:	mov	x21, x1
  42c4e4:	mov	x22, x2
  42c4e8:	add	x23, x20, x23, lsl #3
  42c4ec:	ldr	x1, [x20]
  42c4f0:	sub	x0, x1, #0x1
  42c4f4:	cmn	x0, #0x3
  42c4f8:	b.ls	42c51c <nftw@plt+0x2982c>  // b.plast
  42c4fc:	add	x20, x20, #0x8
  42c500:	cmp	x23, x20
  42c504:	b.hi	42c4ec <nftw@plt+0x297fc>  // b.pmore
  42c508:	ldp	x19, x20, [sp, #16]
  42c50c:	ldp	x21, x22, [sp, #32]
  42c510:	ldr	x23, [sp, #48]
  42c514:	ldp	x29, x30, [sp], #64
  42c518:	ret
  42c51c:	ldr	x0, [x19, #120]
  42c520:	mov	x2, x22
  42c524:	blr	x21
  42c528:	cbnz	w0, 42c4fc <nftw@plt+0x2980c>
  42c52c:	b	42c508 <nftw@plt+0x29818>
  42c530:	stp	x29, x30, [sp, #-64]!
  42c534:	mov	x29, sp
  42c538:	stp	x19, x20, [sp, #16]
  42c53c:	mov	x20, x0
  42c540:	ldr	x19, [x0, #88]
  42c544:	stp	x21, x22, [sp, #32]
  42c548:	ldr	w21, [x0, #112]
  42c54c:	mov	x22, x1
  42c550:	stp	x23, x24, [sp, #48]
  42c554:	mov	x23, x2
  42c558:	add	x21, x19, x21, lsl #3
  42c55c:	mov	x24, #0xffffffffffffffff    	// #-1
  42c560:	ldr	x1, [x19]
  42c564:	sub	x0, x1, #0x1
  42c568:	cmn	x0, #0x3
  42c56c:	b.hi	42c584 <nftw@plt+0x29894>  // b.pmore
  42c570:	ldr	x0, [x20, #120]
  42c574:	mov	x2, x23
  42c578:	blr	x22
  42c57c:	cbz	w0, 42c584 <nftw@plt+0x29894>
  42c580:	str	x24, [x19]
  42c584:	add	x19, x19, #0x8
  42c588:	cmp	x21, x19
  42c58c:	b.hi	42c560 <nftw@plt+0x29870>  // b.pmore
  42c590:	ldp	x19, x20, [sp, #16]
  42c594:	ldp	x21, x22, [sp, #32]
  42c598:	ldp	x23, x24, [sp, #48]
  42c59c:	ldp	x29, x30, [sp], #64
  42c5a0:	ret
  42c5a4:	stp	x29, x30, [sp, #-64]!
  42c5a8:	mov	x29, sp
  42c5ac:	stp	x19, x20, [sp, #16]
  42c5b0:	mov	x19, x0
  42c5b4:	ldrb	w0, [x0, #136]
  42c5b8:	stp	x21, x22, [sp, #32]
  42c5bc:	mov	w20, w3
  42c5c0:	mov	x22, x1
  42c5c4:	str	x23, [sp, #48]
  42c5c8:	mov	w21, w2
  42c5cc:	and	w23, w4, #0xff
  42c5d0:	cbz	w0, 42c5dc <nftw@plt+0x298ec>
  42c5d4:	ldr	x0, [x19, #88]
  42c5d8:	bl	402a80 <free@plt>
  42c5dc:	strb	w23, [x19, #136]
  42c5e0:	ldr	x23, [sp, #48]
  42c5e4:	str	x22, [x19, #88]
  42c5e8:	stp	w21, w20, [x19, #112]
  42c5ec:	ldp	x19, x20, [sp, #16]
  42c5f0:	ldp	x21, x22, [sp, #32]
  42c5f4:	ldp	x29, x30, [sp], #64
  42c5f8:	ret
  42c5fc:	stp	x29, x30, [sp, #-112]!
  42c600:	mov	x29, sp
  42c604:	ldr	w1, [x0, #112]
  42c608:	stp	x21, x22, [sp, #32]
  42c60c:	mov	x22, x0
  42c610:	ldr	x0, [x0, #88]
  42c614:	stp	d8, d9, [sp, #80]
  42c618:	movi	d9, #0x0
  42c61c:	lsl	x21, x1, #3
  42c620:	stp	x19, x20, [sp, #16]
  42c624:	add	x1, x0, x1, lsl #3
  42c628:	mov	x19, #0x0                   	// #0
  42c62c:	stp	x23, x24, [sp, #48]
  42c630:	mov	x24, #0x0                   	// #0
  42c634:	mov	x23, #0x0                   	// #0
  42c638:	stp	x25, x26, [sp, #64]
  42c63c:	mov	x25, #0x0                   	// #0
  42c640:	str	d10, [sp, #96]
  42c644:	ldr	x2, [x0]
  42c648:	cmn	x2, #0x1
  42c64c:	b.ne	42c7f0 <nftw@plt+0x29b00>  // b.any
  42c650:	add	x25, x25, #0x1
  42c654:	add	x0, x0, #0x8
  42c658:	cmp	x1, x0
  42c65c:	b.hi	42c644 <nftw@plt+0x29954>  // b.pmore
  42c660:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  42c664:	ldr	w26, [x22, #116]
  42c668:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c66c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c670:	ldr	x0, [x20, #1416]
  42c674:	add	x2, x2, #0xc8
  42c678:	add	x1, x1, #0xd1
  42c67c:	mov	w3, w26
  42c680:	bl	402cb0 <fprintf@plt>
  42c684:	ucvtf	d0, x23
  42c688:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  42c68c:	fmov	d1, x0
  42c690:	ucvtf	d10, w26
  42c694:	ldr	x0, [x20, #1416]
  42c698:	mov	x3, x23
  42c69c:	fmul	d0, d0, d1
  42c6a0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c6a4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c6a8:	add	x2, x2, #0xe8
  42c6ac:	add	x1, x1, #0xf5
  42c6b0:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c6b4:	add	x23, x23, #0xde
  42c6b8:	fdiv	d0, d0, d10
  42c6bc:	bl	402cb0 <fprintf@plt>
  42c6c0:	ldr	w3, [x22, #112]
  42c6c4:	mov	x1, x23
  42c6c8:	ldr	x0, [x20, #1416]
  42c6cc:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c6d0:	add	x2, x2, #0x108
  42c6d4:	bl	402cb0 <fprintf@plt>
  42c6d8:	ldr	x0, [x20, #1416]
  42c6dc:	mov	x3, x25
  42c6e0:	mov	x1, x23
  42c6e4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c6e8:	add	x2, x2, #0x10f
  42c6ec:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c6f0:	bl	402cb0 <fprintf@plt>
  42c6f4:	add	x25, x25, #0x123
  42c6f8:	ldr	x0, [x22, #104]
  42c6fc:	cbz	x0, 42c830 <nftw@plt+0x29b40>
  42c700:	mov	x1, #0x27ff                	// #10239
  42c704:	cmp	x19, x1
  42c708:	ldr	x0, [x20, #1416]
  42c70c:	b.ls	42c824 <nftw@plt+0x29b34>  // b.plast
  42c710:	mov	w1, #0x9fffff              	// #10485759
  42c714:	cmp	x19, x1
  42c718:	b.hi	42c818 <nftw@plt+0x29b28>  // b.pmore
  42c71c:	lsr	x3, x19, #10
  42c720:	mov	w4, #0x6b                  	// #107
  42c724:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c728:	mov	x1, x25
  42c72c:	add	x2, x2, #0x118
  42c730:	bl	402cb0 <fprintf@plt>
  42c734:	mov	x1, #0x27ff                	// #10239
  42c738:	cmp	x21, x1
  42c73c:	ldr	x0, [x20, #1416]
  42c740:	b.ls	42c8d0 <nftw@plt+0x29be0>  // b.plast
  42c744:	mov	w1, #0x9fffff              	// #10485759
  42c748:	cmp	x21, x1
  42c74c:	b.hi	42c8c4 <nftw@plt+0x29bd4>  // b.pmore
  42c750:	lsr	x21, x21, #10
  42c754:	mov	w4, #0x6b                  	// #107
  42c758:	mov	x3, x21
  42c75c:	mov	x1, x25
  42c760:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c764:	add	x2, x2, #0x15b
  42c768:	bl	402cb0 <fprintf@plt>
  42c76c:	ldr	w0, [x22, #132]
  42c770:	ucvtf	d8, x19
  42c774:	adrp	x19, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c778:	add	x19, x19, #0x174
  42c77c:	mov	x1, x19
  42c780:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c784:	ucvtf	d1, w0
  42c788:	ldr	w0, [x22, #128]
  42c78c:	fdiv	d8, d8, d10
  42c790:	add	x2, x2, #0x167
  42c794:	ucvtf	d0, w0
  42c798:	ldr	x0, [x20, #1416]
  42c79c:	fdiv	d0, d1, d0
  42c7a0:	bl	402cb0 <fprintf@plt>
  42c7a4:	ldr	w0, [x22, #128]
  42c7a8:	mov	x1, x19
  42c7ac:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c7b0:	add	x2, x2, #0x17f
  42c7b4:	ucvtf	d0, w0
  42c7b8:	ldr	x0, [x20, #1416]
  42c7bc:	fdiv	d0, d10, d0
  42c7c0:	bl	402cb0 <fprintf@plt>
  42c7c4:	fdiv	d0, d9, d10
  42c7c8:	ldr	x0, [x20, #1416]
  42c7cc:	fmsub	d0, d8, d8, d0
  42c7d0:	fcmpe	d0, #0.0
  42c7d4:	b.pl	42c8d8 <nftw@plt+0x29be8>  // b.nfrst
  42c7d8:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c7dc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c7e0:	add	x2, x2, #0x18b
  42c7e4:	add	x0, x0, #0x197
  42c7e8:	mov	w1, #0x165                 	// #357
  42c7ec:	bl	402d60 <nftw@plt+0x70>
  42c7f0:	cbz	x2, 42c654 <nftw@plt+0x29964>
  42c7f4:	ldr	w2, [x2, #8]
  42c7f8:	add	x23, x23, #0x1
  42c7fc:	mov	w3, w2
  42c800:	ucvtf	d0, w2
  42c804:	cmp	x24, w2, uxtw
  42c808:	add	x19, x19, w2, uxtw
  42c80c:	csel	x24, x24, x3, cs  // cs = hs, nlast
  42c810:	fmadd	d9, d0, d0, d9
  42c814:	b	42c654 <nftw@plt+0x29964>
  42c818:	lsr	x3, x19, #20
  42c81c:	mov	w4, #0x4d                  	// #77
  42c820:	b	42c724 <nftw@plt+0x29a34>
  42c824:	mov	x3, x19
  42c828:	mov	w4, #0x20                  	// #32
  42c82c:	b	42c724 <nftw@plt+0x29a34>
  42c830:	mov	x0, x22
  42c834:	bl	43d058 <_obstack_memory_used@@Base>
  42c838:	mov	x1, #0x27ff                	// #10239
  42c83c:	sub	x5, x0, x19
  42c840:	cmp	x19, x1
  42c844:	ldr	x0, [x20, #1416]
  42c848:	b.ls	42c8a4 <nftw@plt+0x29bb4>  // b.plast
  42c84c:	mov	w1, #0x9fffff              	// #10485759
  42c850:	cmp	x19, x1
  42c854:	b.hi	42c898 <nftw@plt+0x29ba8>  // b.pmore
  42c858:	lsr	x3, x19, #10
  42c85c:	mov	w4, #0x6b                  	// #107
  42c860:	mov	x1, #0x27ff                	// #10239
  42c864:	cmp	x5, x1
  42c868:	b.ls	42c8bc <nftw@plt+0x29bcc>  // b.plast
  42c86c:	mov	w1, #0x9fffff              	// #10485759
  42c870:	cmp	x5, x1
  42c874:	b.hi	42c8b0 <nftw@plt+0x29bc0>  // b.pmore
  42c878:	lsr	x5, x5, #10
  42c87c:	mov	w6, #0x6b                  	// #107
  42c880:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c884:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c888:	add	x2, x2, #0x12f
  42c88c:	add	x1, x1, #0x13e
  42c890:	bl	402cb0 <fprintf@plt>
  42c894:	b	42c734 <nftw@plt+0x29a44>
  42c898:	lsr	x3, x19, #20
  42c89c:	mov	w4, #0x4d                  	// #77
  42c8a0:	b	42c860 <nftw@plt+0x29b70>
  42c8a4:	mov	x3, x19
  42c8a8:	mov	w4, #0x20                  	// #32
  42c8ac:	b	42c860 <nftw@plt+0x29b70>
  42c8b0:	lsr	x5, x5, #20
  42c8b4:	mov	w6, #0x4d                  	// #77
  42c8b8:	b	42c880 <nftw@plt+0x29b90>
  42c8bc:	mov	w6, #0x20                  	// #32
  42c8c0:	b	42c880 <nftw@plt+0x29b90>
  42c8c4:	lsr	x21, x21, #20
  42c8c8:	mov	w4, #0x4d                  	// #77
  42c8cc:	b	42c758 <nftw@plt+0x29a68>
  42c8d0:	mov	w4, #0x20                  	// #32
  42c8d4:	b	42c758 <nftw@plt+0x29a68>
  42c8d8:	fcmp	d0, #0.0
  42c8dc:	b.eq	42c950 <nftw@plt+0x29c60>  // b.none
  42c8e0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c8e4:	fmov	d1, d0
  42c8e8:	ldr	d3, [x1, #488]
  42c8ec:	fnmsub	d2, d1, d1, d0
  42c8f0:	fadd	d4, d1, d1
  42c8f4:	fdiv	d2, d2, d4
  42c8f8:	fcmpe	d2, d3
  42c8fc:	fsub	d1, d1, d2
  42c900:	b.gt	42c8ec <nftw@plt+0x29bfc>
  42c904:	fmov	d0, d8
  42c908:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c90c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c910:	add	x2, x2, #0x1ad
  42c914:	add	x1, x1, #0x1b9
  42c918:	bl	402cb0 <fprintf@plt>
  42c91c:	ldr	x0, [x20, #1416]
  42c920:	mov	x3, x24
  42c924:	mov	x1, x23
  42c928:	ldr	d10, [sp, #96]
  42c92c:	ldp	x19, x20, [sp, #16]
  42c930:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42c934:	ldp	x21, x22, [sp, #32]
  42c938:	add	x2, x2, #0x1d5
  42c93c:	ldp	x23, x24, [sp, #48]
  42c940:	ldp	x25, x26, [sp, #64]
  42c944:	ldp	d8, d9, [sp, #80]
  42c948:	ldp	x29, x30, [sp], #112
  42c94c:	b	402cb0 <fprintf@plt>
  42c950:	movi	d1, #0x0
  42c954:	b	42c904 <nftw@plt+0x29c14>
  42c958:	ldp	w3, w2, [x0, #36]
  42c95c:	add	w2, w2, #0x1
  42c960:	str	w2, [x0, #40]
  42c964:	cmp	w2, w3
  42c968:	b.hi	42c974 <nftw@plt+0x29c84>  // b.pmore
  42c96c:	ldr	x0, [x0, #8]
  42c970:	str	x1, [x0, w2, uxtw #3]
  42c974:	ret
  42c978:	ldrb	w6, [x3]
  42c97c:	adrp	x7, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  42c980:	mov	x4, x0
  42c984:	add	x7, x7, #0xae
  42c988:	mov	w8, #0x20                  	// #32
  42c98c:	cbz	x2, 42ca04 <nftw@plt+0x29d14>
  42c990:	ldrb	w9, [x1]
  42c994:	ldrb	w5, [x1]
  42c998:	ldrh	w9, [x7, x9, lsl #1]
  42c99c:	tst	w9, #0xc00
  42c9a0:	b.eq	42c9d0 <nftw@plt+0x29ce0>  // b.none
  42c9a4:	cbnz	w6, 42ca10 <nftw@plt+0x29d20>
  42c9a8:	add	x1, x1, #0x1
  42c9ac:	subs	x2, x2, #0x1
  42c9b0:	b.eq	42c9c4 <nftw@plt+0x29cd4>  // b.none
  42c9b4:	ldrb	w5, [x1]
  42c9b8:	ldrh	w5, [x7, x5, lsl #1]
  42c9bc:	tst	w5, #0xc00
  42c9c0:	b.ne	42c9a8 <nftw@plt+0x29cb8>  // b.any
  42c9c4:	strb	w8, [x4]
  42c9c8:	add	x4, x4, #0x1
  42c9cc:	b	42c98c <nftw@plt+0x29c9c>
  42c9d0:	cmp	w5, #0x27
  42c9d4:	b.eq	42c9e0 <nftw@plt+0x29cf0>  // b.none
  42c9d8:	cmp	w5, #0x22
  42c9dc:	b.ne	42c9ec <nftw@plt+0x29cfc>  // b.any
  42c9e0:	cbz	w6, 42c9fc <nftw@plt+0x29d0c>
  42c9e4:	cmp	w5, w6
  42c9e8:	csel	w6, w6, wzr, ne  // ne = any
  42c9ec:	add	x1, x1, #0x1
  42c9f0:	sub	x2, x2, #0x1
  42c9f4:	strb	w5, [x4]
  42c9f8:	b	42c9c8 <nftw@plt+0x29cd8>
  42c9fc:	mov	w6, w5
  42ca00:	b	42c9ec <nftw@plt+0x29cfc>
  42ca04:	sub	x0, x4, x0
  42ca08:	strb	w6, [x3]
  42ca0c:	ret
  42ca10:	cmp	w5, #0x27
  42ca14:	b.eq	42c9e4 <nftw@plt+0x29cf4>  // b.none
  42ca18:	cmp	w5, #0x22
  42ca1c:	b.ne	42c9ec <nftw@plt+0x29cfc>  // b.any
  42ca20:	b	42c9e4 <nftw@plt+0x29cf4>
  42ca24:	stp	x29, x30, [sp, #-64]!
  42ca28:	mov	x29, sp
  42ca2c:	stp	x19, x20, [sp, #16]
  42ca30:	mov	x20, x1
  42ca34:	mov	x19, x0
  42ca38:	stp	x21, x22, [sp, #32]
  42ca3c:	ldr	x1, [x0, #1312]
  42ca40:	ldr	x21, [x0, #1328]
  42ca44:	sub	x21, x21, x1
  42ca48:	ldrh	w1, [x20, #16]
  42ca4c:	str	x23, [sp, #48]
  42ca50:	cbnz	w1, 42ca90 <nftw@plt+0x29da0>
  42ca54:	add	x1, x21, #0x1
  42ca58:	bl	4232e4 <nftw@plt+0x205f4>
  42ca5c:	ldr	x1, [x19, #1312]
  42ca60:	mov	x22, x0
  42ca64:	mov	x2, x21
  42ca68:	bl	4025d0 <memcpy@plt>
  42ca6c:	mov	w0, #0xa                   	// #10
  42ca70:	strb	w0, [x22, x21]
  42ca74:	str	w21, [x20, #12]
  42ca78:	str	x22, [x20, #24]
  42ca7c:	ldp	x19, x20, [sp, #16]
  42ca80:	ldp	x21, x22, [sp, #32]
  42ca84:	ldr	x23, [sp, #48]
  42ca88:	ldp	x29, x30, [sp], #64
  42ca8c:	ret
  42ca90:	ldr	x3, [x0, #56]
  42ca94:	mov	w22, w2
  42ca98:	add	x23, x21, #0xd
  42ca9c:	ldr	w2, [x20, #12]
  42caa0:	and	x23, x23, #0xfffffffffffffff8
  42caa4:	ldr	x1, [x3, #24]
  42caa8:	add	x2, x2, x23
  42caac:	ldr	x3, [x3, #16]
  42cab0:	sub	x1, x1, x3
  42cab4:	cmp	x2, x1
  42cab8:	b.ls	42cac4 <nftw@plt+0x29dd4>  // b.plast
  42cabc:	add	x1, x0, #0x38
  42cac0:	bl	423260 <nftw@plt+0x20570>
  42cac4:	ldr	x0, [x19, #56]
  42cac8:	ldr	w2, [x20, #12]
  42cacc:	ldr	x1, [x0, #16]
  42cad0:	str	x1, [x20, #24]
  42cad4:	add	x0, x1, x2
  42cad8:	str	w21, [x1, x2]
  42cadc:	add	x0, x0, #0x6
  42cae0:	ldr	x1, [x19, #1312]
  42cae4:	sturh	w22, [x0, #-2]
  42cae8:	mov	x2, x21
  42caec:	bl	4025d0 <memcpy@plt>
  42caf0:	ldr	x0, [x19, #1312]
  42caf4:	str	x0, [x19, #1328]
  42caf8:	ldr	w0, [x20, #12]
  42cafc:	add	w0, w0, w23
  42cb00:	str	w0, [x20, #12]
  42cb04:	cbnz	w22, 42ca7c <nftw@plt+0x29d8c>
  42cb08:	ldr	x1, [x19, #56]
  42cb0c:	ldr	x2, [x1, #16]
  42cb10:	add	x0, x2, w0, uxtw
  42cb14:	str	x0, [x1, #16]
  42cb18:	b	42ca7c <nftw@plt+0x29d8c>
  42cb1c:	stp	x29, x30, [sp, #-48]!
  42cb20:	mov	x29, sp
  42cb24:	stp	x19, x20, [sp, #16]
  42cb28:	mov	x20, x0
  42cb2c:	add	x19, x1, #0x3
  42cb30:	str	x21, [sp, #32]
  42cb34:	ldr	x21, [x0, #1328]
  42cb38:	ldr	x0, [x0, #1320]
  42cb3c:	sub	x0, x0, x21
  42cb40:	cmp	x0, x19
  42cb44:	b.cs	42cb78 <nftw@plt+0x29e88>  // b.hs, b.nlast
  42cb48:	ldr	x0, [x20, #1312]
  42cb4c:	sub	x21, x21, x0
  42cb50:	add	x19, x19, x21
  42cb54:	add	x19, x19, x19, lsl #1
  42cb58:	lsr	x19, x19, #1
  42cb5c:	mov	x1, x19
  42cb60:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  42cb64:	add	x19, x0, x19
  42cb68:	str	x0, [x20, #1312]
  42cb6c:	add	x0, x0, x21
  42cb70:	str	x19, [x20, #1320]
  42cb74:	str	x0, [x20, #1328]
  42cb78:	ldp	x19, x20, [sp, #16]
  42cb7c:	ldr	x21, [sp, #32]
  42cb80:	ldp	x29, x30, [sp], #48
  42cb84:	ret
  42cb88:	stp	x29, x30, [sp, #-64]!
  42cb8c:	mov	x29, sp
  42cb90:	ldrb	w2, [x1, #18]
  42cb94:	stp	x19, x20, [sp, #16]
  42cb98:	mov	x20, x1
  42cb9c:	and	w2, w2, #0x3
  42cba0:	stp	x21, x22, [sp, #32]
  42cba4:	cmp	w2, #0x3
  42cba8:	mov	x22, x0
  42cbac:	str	x23, [sp, #48]
  42cbb0:	b.ne	42cc10 <nftw@plt+0x29f20>  // b.any
  42cbb4:	mov	w2, #0x0                   	// #0
  42cbb8:	bl	428450 <nftw@plt+0x25760>
  42cbbc:	mov	x23, x0
  42cbc0:	bl	402630 <strlen@plt>
  42cbc4:	mov	x19, x0
  42cbc8:	add	x1, x0, #0x1
  42cbcc:	mov	x0, x22
  42cbd0:	bl	4232e4 <nftw@plt+0x205f4>
  42cbd4:	mov	x21, x0
  42cbd8:	mov	x2, x19
  42cbdc:	mov	x1, x23
  42cbe0:	bl	4025d0 <memcpy@plt>
  42cbe4:	mov	w0, #0xa                   	// #10
  42cbe8:	strb	w0, [x21, x19]
  42cbec:	mov	x3, x19
  42cbf0:	mov	x2, x21
  42cbf4:	mov	x1, x20
  42cbf8:	mov	x0, x22
  42cbfc:	ldp	x19, x20, [sp, #16]
  42cc00:	ldp	x21, x22, [sp, #32]
  42cc04:	ldr	x23, [sp, #48]
  42cc08:	ldp	x29, x30, [sp], #64
  42cc0c:	b	428b10 <nftw@plt+0x25e20>
  42cc10:	ldr	x0, [x1, #24]
  42cc14:	ldrb	w1, [x0, #19]
  42cc18:	ldr	w19, [x0, #12]
  42cc1c:	orr	w1, w1, #0x20
  42cc20:	strb	w1, [x0, #19]
  42cc24:	ldr	x21, [x0, #24]
  42cc28:	b	42cbec <nftw@plt+0x29efc>
  42cc2c:	stp	x29, x30, [sp, #-32]!
  42cc30:	mov	w3, #0x204                 	// #516
  42cc34:	mov	x29, sp
  42cc38:	stp	x19, x20, [sp, #16]
  42cc3c:	mov	x19, x0
  42cc40:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  42cc44:	add	x0, x0, #0xae
  42cc48:	ldr	x20, [x19, #1328]
  42cc4c:	ldrb	w2, [x1], #1
  42cc50:	strb	w2, [x20], #1
  42cc54:	ldrb	w2, [x1]
  42cc58:	ldrh	w2, [x0, x2, lsl #1]
  42cc5c:	tst	w3, w2
  42cc60:	b.ne	42cc4c <nftw@plt+0x29f5c>  // b.any
  42cc64:	ldr	x0, [x19, #136]
  42cc68:	mov	w3, #0x1                   	// #1
  42cc6c:	str	x1, [x0, #16]
  42cc70:	ldr	x0, [x19, #1088]
  42cc74:	ldr	x1, [x19, #1328]
  42cc78:	sub	x2, x20, x1
  42cc7c:	bl	42c488 <nftw@plt+0x29798>
  42cc80:	str	x20, [x19, #1328]
  42cc84:	ldp	x19, x20, [sp, #16]
  42cc88:	ldp	x29, x30, [sp], #32
  42cc8c:	ret
  42cc90:	stp	x29, x30, [sp, #-64]!
  42cc94:	mov	x29, sp
  42cc98:	stp	x19, x20, [sp, #16]
  42cc9c:	mov	x20, x1
  42cca0:	mov	x19, x0
  42cca4:	ldr	x1, [x0, #40]
  42cca8:	stp	x23, x24, [sp, #48]
  42ccac:	mov	w23, w2
  42ccb0:	stp	x21, x22, [sp, #32]
  42ccb4:	ldr	w24, [x1, #60]
  42ccb8:	ldr	x1, [x0, #136]
  42ccbc:	ldr	x22, [x0]
  42ccc0:	ldr	x1, [x1, #8]
  42ccc4:	str	x20, [x22]
  42ccc8:	cbz	x1, 42cd60 <nftw@plt+0x2a070>
  42cccc:	mov	x1, x20
  42ccd0:	add	x0, x20, #0x2
  42ccd4:	ldrb	w2, [x1, #1]!
  42ccd8:	cmp	w2, #0x2f
  42ccdc:	csel	x0, x0, x1, eq  // eq = none
  42cce0:	mov	x1, x0
  42cce4:	ldrb	w3, [x1], #1
  42cce8:	cmp	w3, #0x2f
  42ccec:	b.ne	42cd30 <nftw@plt+0x2a040>  // b.any
  42ccf0:	ldurb	w0, [x1, #-2]
  42ccf4:	cmp	w0, #0x2a
  42ccf8:	b.ne	42cd28 <nftw@plt+0x2a038>  // b.any
  42ccfc:	mov	w21, #0x0                   	// #0
  42cd00:	str	x1, [x22]
  42cd04:	ldrb	w1, [x19, #16]
  42cd08:	ldr	x0, [x19, #1328]
  42cd0c:	cbz	w1, 42cd90 <nftw@plt+0x2a0a0>
  42cd10:	cbz	w23, 42cd70 <nftw@plt+0x2a080>
  42cd14:	ldrb	w1, [x19, #1124]
  42cd18:	cbz	w1, 42cd98 <nftw@plt+0x2a0a8>
  42cd1c:	sub	x0, x0, #0x1
  42cd20:	str	x0, [x19, #1328]
  42cd24:	b	42cd78 <nftw@plt+0x2a088>
  42cd28:	mov	x0, x1
  42cd2c:	b	42cce0 <nftw@plt+0x29ff0>
  42cd30:	cmp	w3, #0xa
  42cd34:	b.ne	42cd28 <nftw@plt+0x2a038>  // b.any
  42cd38:	str	x0, [x22]
  42cd3c:	mov	w2, w24
  42cd40:	mov	x0, x19
  42cd44:	adrp	x4, 456000 <_obstack_memory_used@@Base+0x18fa8>
  42cd48:	mov	w3, #0x0                   	// #0
  42cd4c:	add	x4, x4, #0xbf8
  42cd50:	mov	w1, #0x3                   	// #3
  42cd54:	mov	w21, #0x1                   	// #1
  42cd58:	bl	41c1d0 <nftw@plt+0x194e0>
  42cd5c:	b	42cd04 <nftw@plt+0x2a014>
  42cd60:	bl	4222bc <nftw@plt+0x1f5cc>
  42cd64:	ands	w21, w0, #0xff
  42cd68:	b.eq	42cd04 <nftw@plt+0x2a014>  // b.none
  42cd6c:	b	42cd3c <nftw@plt+0x2a04c>
  42cd70:	mov	w1, #0x20                  	// #32
  42cd74:	sturb	w1, [x0, #-1]
  42cd78:	ldr	x0, [x22]
  42cd7c:	ldp	x19, x20, [sp, #16]
  42cd80:	ldp	x21, x22, [sp, #32]
  42cd84:	ldp	x23, x24, [sp, #48]
  42cd88:	ldp	x29, x30, [sp], #64
  42cd8c:	ret
  42cd90:	ldrb	w1, [x19, #1123]
  42cd94:	b	42cd18 <nftw@plt+0x2a028>
  42cd98:	ldr	x23, [x22]
  42cd9c:	mov	x1, x20
  42cda0:	sub	x23, x23, x20
  42cda4:	mov	x2, x23
  42cda8:	bl	4025d0 <memcpy@plt>
  42cdac:	ldr	x1, [x19, #1328]
  42cdb0:	add	x0, x1, x23
  42cdb4:	cbz	w21, 42cd20 <nftw@plt+0x2a030>
  42cdb8:	add	x0, x0, #0x1
  42cdbc:	str	x0, [x19, #1328]
  42cdc0:	mov	w0, #0x2a                  	// #42
  42cdc4:	strb	w0, [x1, x23]
  42cdc8:	ldr	x0, [x19, #1328]
  42cdcc:	add	x1, x0, #0x1
  42cdd0:	str	x1, [x19, #1328]
  42cdd4:	mov	w1, #0x2f                  	// #47
  42cdd8:	strb	w1, [x0]
  42cddc:	b	42cd78 <nftw@plt+0x2a088>
  42cde0:	stp	x29, x30, [sp, #-48]!
  42cde4:	mov	x29, sp
  42cde8:	stp	x19, x20, [sp, #16]
  42cdec:	mov	x19, x0
  42cdf0:	mov	w20, w2
  42cdf4:	ldr	x3, [x0, #1328]
  42cdf8:	str	x21, [sp, #32]
  42cdfc:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  42ce00:	add	x21, x21, #0xae
  42ce04:	mov	x0, x1
  42ce08:	ldrb	w5, [x1], #1
  42ce0c:	mov	x4, x3
  42ce10:	strb	w5, [x3], #1
  42ce14:	mov	x2, x5
  42ce18:	ldrh	w5, [x21, x5, lsl #1]
  42ce1c:	tbnz	w5, #11, 42ce04 <nftw@plt+0x2a114>
  42ce20:	cmp	w2, #0x2f
  42ce24:	b.ne	42ce54 <nftw@plt+0x2a164>  // b.any
  42ce28:	ldrb	w2, [x0, #1]
  42ce2c:	cmp	w2, #0x2a
  42ce30:	b.ne	42ce54 <nftw@plt+0x2a164>  // b.any
  42ce34:	cbz	w20, 42ce54 <nftw@plt+0x2a164>
  42ce38:	str	x3, [x19, #1328]
  42ce3c:	mov	x0, x19
  42ce40:	mov	w2, #0x0                   	// #0
  42ce44:	bl	42cc90 <nftw@plt+0x29fa0>
  42ce48:	mov	x1, x0
  42ce4c:	ldr	x3, [x19, #1328]
  42ce50:	b	42ce04 <nftw@plt+0x2a114>
  42ce54:	ldr	x21, [sp, #32]
  42ce58:	str	x4, [x19, #1328]
  42ce5c:	ldp	x19, x20, [sp, #16]
  42ce60:	ldp	x29, x30, [sp], #48
  42ce64:	ret
  42ce68:	ldrh	w2, [x1, #18]
  42ce6c:	tbz	w2, #6, 42ceb8 <nftw@plt+0x2a1c8>
  42ce70:	ldrb	w2, [x1, #18]
  42ce74:	and	w2, w2, #0x3
  42ce78:	cmp	w2, #0x3
  42ce7c:	b.ne	42cec0 <nftw@plt+0x2a1d0>  // b.any
  42ce80:	ldr	w2, [x1, #24]
  42ce84:	cmp	w2, #0xa
  42ce88:	cset	w2, eq  // eq = none
  42ce8c:	cbz	w2, 42ced0 <nftw@plt+0x2a1e0>
  42ce90:	ldr	x2, [x0, #136]
  42ce94:	mov	x3, #0x0                   	// #0
  42ce98:	ldr	x4, [x2, #40]
  42ce9c:	add	x3, x3, #0x1
  42cea0:	cmp	x4, x1
  42cea4:	b.ne	42ceb0 <nftw@plt+0x2a1c0>  // b.any
  42cea8:	cmp	x3, #0x14
  42ceac:	b.hi	42ced0 <nftw@plt+0x2a1e0>  // b.pmore
  42ceb0:	ldr	x2, [x2, #8]
  42ceb4:	cbnz	x2, 42ce98 <nftw@plt+0x2a1a8>
  42ceb8:	mov	w0, #0x0                   	// #0
  42cebc:	ret
  42cec0:	ldr	x2, [x1, #24]
  42cec4:	ldrb	w2, [x2, #19]
  42cec8:	ubfx	x2, x2, #2, #1
  42cecc:	b	42ce8c <nftw@plt+0x2a19c>
  42ced0:	stp	x29, x30, [sp, #-16]!
  42ced4:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42ced8:	add	x2, x2, #0x1f0
  42cedc:	mov	x29, sp
  42cee0:	ldr	x3, [x1]
  42cee4:	mov	w1, #0x3                   	// #3
  42cee8:	bl	41c014 <nftw@plt+0x19324>
  42ceec:	mov	w0, #0x1                   	// #1
  42cef0:	ldp	x29, x30, [sp], #16
  42cef4:	ret
  42cef8:	ldr	x3, [x0]
  42cefc:	ldr	x4, [x3]
  42cf00:	str	x4, [x0, #1344]
  42cf04:	ldr	x4, [x3, #32]
  42cf08:	str	x4, [x0, #1352]
  42cf0c:	ldr	x4, [x3, #16]
  42cf10:	str	x3, [x0, #8]
  42cf14:	str	x4, [x0, #1360]
  42cf18:	stp	x1, x1, [x3]
  42cf1c:	add	x1, x1, x2
  42cf20:	str	x1, [x3, #32]
  42cf24:	strb	wzr, [x3, #104]
  42cf28:	ret
  42cf2c:	ldr	x1, [x0, #8]
  42cf30:	ldr	x2, [x0, #1344]
  42cf34:	str	x2, [x1]
  42cf38:	ldr	x2, [x0, #1352]
  42cf3c:	str	x2, [x1, #32]
  42cf40:	ldr	x2, [x0, #1360]
  42cf44:	str	x2, [x1, #8]
  42cf48:	mov	w2, #0x1                   	// #1
  42cf4c:	strb	w2, [x1, #104]
  42cf50:	str	xzr, [x0, #8]
  42cf54:	ret
  42cf58:	stp	x29, x30, [sp, #-256]!
  42cf5c:	mov	x29, sp
  42cf60:	stp	x19, x20, [sp, #16]
  42cf64:	stp	x21, x22, [sp, #32]
  42cf68:	stp	x23, x24, [sp, #48]
  42cf6c:	stp	x25, x26, [sp, #64]
  42cf70:	mov	x26, x0
  42cf74:	mov	x25, x1
  42cf78:	stp	x27, x28, [sp, #80]
  42cf7c:	ldrb	w0, [x0, #19]
  42cf80:	ldr	x1, [x26]
  42cf84:	cmp	w0, #0x0
  42cf88:	cset	w0, ne  // ne = any
  42cf8c:	str	w0, [sp, #112]
  42cf90:	ldr	x0, [x26, #136]
  42cf94:	ldr	x3, [x1]
  42cf98:	stp	xzr, xzr, [sp, #176]
  42cf9c:	ldr	x1, [x1, #32]
  42cfa0:	str	xzr, [sp, #192]
  42cfa4:	str	wzr, [sp, #200]
  42cfa8:	stp	x3, x1, [x0, #16]
  42cfac:	ands	w0, w2, #0xff
  42cfb0:	str	x3, [sp, #104]
  42cfb4:	str	w0, [sp, #116]
  42cfb8:	stp	xzr, xzr, [sp, #160]
  42cfbc:	b.ne	42cfd4 <nftw@plt+0x2a2e4>  // b.any
  42cfc0:	ldr	x0, [x26, #1312]
  42cfc4:	str	x0, [x26, #1328]
  42cfc8:	ldr	x0, [x26, #40]
  42cfcc:	ldr	w0, [x0, #60]
  42cfd0:	str	w0, [x26, #1336]
  42cfd4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42cfd8:	mov	w27, #0x0                   	// #0
  42cfdc:	add	x0, x0, #0x244
  42cfe0:	mov	w20, #0x0                   	// #0
  42cfe4:	mov	w23, #0x0                   	// #0
  42cfe8:	str	x0, [sp, #120]
  42cfec:	ldr	x22, [x26, #136]
  42cff0:	mov	x0, x26
  42cff4:	ldp	x28, x1, [x22, #16]
  42cff8:	sub	x1, x1, x28
  42cffc:	bl	42cb1c <nftw@plt+0x29e2c>
  42d000:	ldr	x24, [x26, #1328]
  42d004:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  42d008:	add	x0, x0, #0xae
  42d00c:	str	x0, [sp, #128]
  42d010:	ldr	x0, [x22, #8]
  42d014:	cbnz	x0, 42d04c <nftw@plt+0x2a35c>
  42d018:	ldr	w0, [sp, #116]
  42d01c:	cbnz	w0, 42d04c <nftw@plt+0x2a35c>
  42d020:	ldr	x0, [x26]
  42d024:	ldr	w1, [x0, #56]
  42d028:	ldr	x4, [x0, #48]
  42d02c:	lsl	x1, x1, #4
  42d030:	ldr	x1, [x4, x1]
  42d034:	cmp	x1, x28
  42d038:	b.hi	42d04c <nftw@plt+0x2a35c>  // b.pmore
  42d03c:	str	x28, [x0]
  42d040:	mov	w1, #0x0                   	// #0
  42d044:	mov	x0, x26
  42d048:	bl	4220a8 <nftw@plt+0x1f3b8>
  42d04c:	mov	x19, x28
  42d050:	mov	x21, x24
  42d054:	ldrb	w0, [x19], #1
  42d058:	strb	w0, [x21], #1
  42d05c:	cmp	w0, #0x2f
  42d060:	b.hi	42d100 <nftw@plt+0x2a410>  // b.pmore
  42d064:	cmp	w0, #0x1f
  42d068:	b.hi	42d0c8 <nftw@plt+0x2a3d8>  // b.pmore
  42d06c:	cmp	w0, #0xc
  42d070:	b.ls	42d0e8 <nftw@plt+0x2a3f8>  // b.plast
  42d074:	ldrb	w0, [x26, #16]
  42d078:	cbnz	w0, 42d080 <nftw@plt+0x2a390>
  42d07c:	strb	wzr, [x26, #440]
  42d080:	cmp	w27, #0x8
  42d084:	b.hi	42d0a0 <nftw@plt+0x2a3b0>  // b.pmore
  42d088:	mov	x0, #0x16b                 	// #363
  42d08c:	lsr	x0, x0, x27
  42d090:	mvn	x0, x0
  42d094:	and	w1, w0, #0x1
  42d098:	str	w1, [sp, #112]
  42d09c:	tbz	w0, #0, 42d0c0 <nftw@plt+0x2a3d0>
  42d0a0:	str	wzr, [sp, #112]
  42d0a4:	b	42d0ac <nftw@plt+0x2a3bc>
  42d0a8:	mov	w27, #0x6                   	// #6
  42d0ac:	mov	x24, x21
  42d0b0:	mov	x28, x19
  42d0b4:	b	42d010 <nftw@plt+0x2a320>
  42d0b8:	mov	w27, #0x3                   	// #3
  42d0bc:	b	42d0ac <nftw@plt+0x2a3bc>
  42d0c0:	mov	w27, #0x0                   	// #0
  42d0c4:	b	42d0ac <nftw@plt+0x2a3bc>
  42d0c8:	sub	w1, w0, #0x20
  42d0cc:	cmp	w1, #0xf
  42d0d0:	b.hi	42d074 <nftw@plt+0x2a384>  // b.pmore
  42d0d4:	ldr	x2, [sp, #120]
  42d0d8:	ldrh	w1, [x2, w1, uxtw #1]
  42d0dc:	adr	x2, 42d0e8 <nftw@plt+0x2a3f8>
  42d0e0:	add	x1, x2, w1, sxth #2
  42d0e4:	br	x1
  42d0e8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42d0ec:	add	x1, x1, #0x264
  42d0f0:	ldrb	w0, [x1, w0, uxtw]
  42d0f4:	adr	x1, 42d100 <nftw@plt+0x2a410>
  42d0f8:	add	x0, x1, w0, sxtb #2
  42d0fc:	br	x0
  42d100:	cmp	w0, #0x3e
  42d104:	b.eq	42d27c <nftw@plt+0x2a58c>  // b.none
  42d108:	b.hi	42d128 <nftw@plt+0x2a438>  // b.pmore
  42d10c:	cmp	w0, #0x3c
  42d110:	b.ne	42d074 <nftw@plt+0x2a384>  // b.any
  42d114:	ldr	w0, [sp, #112]
  42d118:	cmp	w0, #0x0
  42d11c:	mov	w0, #0x3e                  	// #62
  42d120:	csel	w20, w20, w0, eq  // eq = none
  42d124:	b	42d074 <nftw@plt+0x2a384>
  42d128:	cmp	w0, #0x5c
  42d12c:	b.eq	42d29c <nftw@plt+0x2a5ac>  // b.none
  42d130:	b.hi	42d1b8 <nftw@plt+0x2a4c8>  // b.pmore
  42d134:	sub	w0, w0, #0x41
  42d138:	and	w0, w0, #0xff
  42d13c:	cmp	w0, #0x19
  42d140:	b.hi	42d074 <nftw@plt+0x2a384>  // b.pmore
  42d144:	ldrb	w0, [x26, #18]
  42d148:	cbnz	w0, 42d074 <nftw@plt+0x2a384>
  42d14c:	cmp	w20, #0x0
  42d150:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  42d154:	b.eq	42d074 <nftw@plt+0x2a384>  // b.none
  42d158:	str	x24, [x26, #1328]
  42d15c:	mov	x1, x28
  42d160:	mov	x0, x26
  42d164:	bl	42cc2c <nftw@plt+0x29f3c>
  42d168:	mov	x28, x0
  42d16c:	ldrb	w0, [x0, #18]
  42d170:	ldr	x19, [x22, #16]
  42d174:	ldr	x21, [x26, #1328]
  42d178:	tbz	w0, #1, 42d304 <nftw@plt+0x2a614>
  42d17c:	cmp	w27, #0x1
  42d180:	b.hi	42d304 <nftw@plt+0x2a614>  // b.pmore
  42d184:	ldrb	w1, [x26, #24]
  42d188:	cbz	w1, 42d344 <nftw@plt+0x2a654>
  42d18c:	cbz	x25, 42d310 <nftw@plt+0x2a620>
  42d190:	and	w0, w0, #0x3
  42d194:	cmp	w0, #0x1
  42d198:	b.ne	42d308 <nftw@plt+0x2a618>  // b.any
  42d19c:	ldrh	w2, [x28, #24]
  42d1a0:	mov	x1, x25
  42d1a4:	str	x24, [x26, #1328]
  42d1a8:	mov	x0, x26
  42d1ac:	bl	42ca24 <nftw@plt+0x29d34>
  42d1b0:	ldr	x21, [x26, #1312]
  42d1b4:	b	42d074 <nftw@plt+0x2a384>
  42d1b8:	cmp	w0, #0x5f
  42d1bc:	b.eq	42d144 <nftw@plt+0x2a454>  // b.none
  42d1c0:	sub	w0, w0, #0x61
  42d1c4:	b	42d138 <nftw@plt+0x2a448>
  42d1c8:	ldr	x0, [x22, #8]
  42d1cc:	str	x24, [x26, #1328]
  42d1d0:	cbz	x0, 42d1e0 <nftw@plt+0x2a4f0>
  42d1d4:	mov	x0, x26
  42d1d8:	bl	428b68 <nftw@plt+0x25e78>
  42d1dc:	b	42cfec <nftw@plt+0x2a2fc>
  42d1e0:	ldr	x0, [x26]
  42d1e4:	ldr	w1, [sp, #116]
  42d1e8:	str	x19, [x0]
  42d1ec:	cbnz	w1, 42da3c <nftw@plt+0x2ad4c>
  42d1f0:	mov	w1, #0x1                   	// #1
  42d1f4:	strb	w1, [x0, #104]
  42d1f8:	ldr	x0, [x26, #40]
  42d1fc:	mov	w1, #0x18                  	// #24
  42d200:	ldr	w2, [x0, #12]
  42d204:	ldr	w4, [x0, #60]
  42d208:	sub	w2, w2, #0x1
  42d20c:	smull	x2, w2, w1
  42d210:	ldr	x1, [x0]
  42d214:	add	x5, x1, x2
  42d218:	ldr	w1, [x1, x2]
  42d21c:	mov	w2, #0x0                   	// #0
  42d220:	sub	w4, w4, w1
  42d224:	ldrb	w1, [x5, #6]
  42d228:	lsr	w4, w4, w1
  42d22c:	ldr	w1, [x5, #16]
  42d230:	add	w1, w1, #0x1
  42d234:	add	w1, w4, w1
  42d238:	bl	425f10 <nftw@plt+0x23220>
  42d23c:	sub	w0, w27, #0x1
  42d240:	cmp	w0, #0x1
  42d244:	b.hi	42da3c <nftw@plt+0x2ad4c>  // b.pmore
  42d248:	ldrb	w0, [x26, #16]
  42d24c:	cbnz	w0, 42da3c <nftw@plt+0x2ad4c>
  42d250:	mov	x0, x26
  42d254:	bl	422724 <nftw@plt+0x1fa34>
  42d258:	tst	w0, #0xff
  42d25c:	b.eq	42da3c <nftw@plt+0x2ad4c>  // b.none
  42d260:	cmp	w27, #0x2
  42d264:	b.ne	42d270 <nftw@plt+0x2a580>  // b.any
  42d268:	mov	w0, #0x20                  	// #32
  42d26c:	strb	w0, [x24]
  42d270:	ldr	x0, [x26]
  42d274:	ldr	x19, [x0]
  42d278:	b	42d0ac <nftw@plt+0x2a3bc>
  42d27c:	cmp	w20, #0x3e
  42d280:	csel	w20, w20, wzr, ne  // ne = any
  42d284:	b	42d074 <nftw@plt+0x2a384>
  42d288:	cmp	w20, w0
  42d28c:	b.eq	42d480 <nftw@plt+0x2a790>  // b.none
  42d290:	cmp	w20, #0x0
  42d294:	csel	w20, w20, w0, ne  // ne = any
  42d298:	b	42d074 <nftw@plt+0x2a384>
  42d29c:	ldrb	w1, [x28, #1]
  42d2a0:	sub	w0, w1, #0x22
  42d2a4:	and	w0, w0, #0xff
  42d2a8:	cmp	w0, #0x3a
  42d2ac:	b.hi	42d074 <nftw@plt+0x2a384>  // b.pmore
  42d2b0:	mov	x2, #0x21                  	// #33
  42d2b4:	movk	x2, #0x400, lsl #48
  42d2b8:	lsr	x0, x2, x0
  42d2bc:	tbz	w0, #0, 42d074 <nftw@plt+0x2a384>
  42d2c0:	add	x19, x28, #0x2
  42d2c4:	add	x21, x24, #0x2
  42d2c8:	strb	w1, [x24, #1]
  42d2cc:	b	42d074 <nftw@plt+0x2a384>
  42d2d0:	cbnz	w20, 42d074 <nftw@plt+0x2a384>
  42d2d4:	ldrb	w0, [x28, #1]
  42d2d8:	cmp	w0, #0x2a
  42d2dc:	b.ne	42d074 <nftw@plt+0x2a384>  // b.any
  42d2e0:	cmp	x25, #0x0
  42d2e4:	str	x21, [x26, #1328]
  42d2e8:	mov	x1, x19
  42d2ec:	cset	w2, ne  // ne = any
  42d2f0:	mov	x0, x26
  42d2f4:	bl	42cc90 <nftw@plt+0x29fa0>
  42d2f8:	mov	x19, x0
  42d2fc:	ldr	x21, [x26, #1328]
  42d300:	b	42d0ac <nftw@plt+0x2a3bc>
  42d304:	cbnz	x25, 42d190 <nftw@plt+0x2a4a0>
  42d308:	cmp	w27, #0x5
  42d30c:	b.eq	42d0a8 <nftw@plt+0x2a3b8>  // b.none
  42d310:	ldrb	w0, [x26, #20]
  42d314:	cbz	w0, 42d074 <nftw@plt+0x2a384>
  42d318:	ldr	x0, [x26, #1248]
  42d31c:	cmp	x0, x28
  42d320:	b.eq	42d0b8 <nftw@plt+0x2a3c8>  // b.none
  42d324:	ldr	x0, [x26, #1288]
  42d328:	cmp	x0, x28
  42d32c:	b.eq	42d33c <nftw@plt+0x2a64c>  // b.none
  42d330:	ldr	x0, [x26, #1296]
  42d334:	cmp	x0, x28
  42d338:	b.ne	42d074 <nftw@plt+0x2a384>  // b.any
  42d33c:	mov	w27, #0x8                   	// #8
  42d340:	b	42d0ac <nftw@plt+0x2a3bc>
  42d344:	strb	wzr, [x26, #440]
  42d348:	and	w0, w0, #0x3
  42d34c:	cmp	w0, #0x3
  42d350:	b.ne	42d368 <nftw@plt+0x2a678>  // b.any
  42d354:	ldr	w0, [x28, #24]
  42d358:	cmp	w0, #0xa
  42d35c:	b.ne	42d3c8 <nftw@plt+0x2a6d8>  // b.any
  42d360:	mov	w27, #0x1                   	// #1
  42d364:	b	42d378 <nftw@plt+0x2a688>
  42d368:	ldr	x0, [x28, #24]
  42d36c:	ldrb	w1, [x0, #19]
  42d370:	tbz	w1, #2, 42d3c8 <nftw@plt+0x2a6d8>
  42d374:	ldrh	w27, [x0, #16]
  42d378:	ldr	x1, [sp, #160]
  42d37c:	cbz	x1, 42d388 <nftw@plt+0x2a698>
  42d380:	mov	x0, x26
  42d384:	bl	423094 <nftw@plt+0x203a4>
  42d388:	add	w1, w27, #0x1
  42d38c:	mov	x0, x26
  42d390:	ubfiz	x1, x1, #3, #17
  42d394:	bl	4230b4 <nftw@plt+0x203c4>
  42d398:	str	x0, [sp, #160]
  42d39c:	ldr	x0, [x0, #16]
  42d3a0:	stp	x0, x28, [sp, #168]
  42d3a4:	ldr	x0, [x26, #1312]
  42d3a8:	stp	w27, wzr, [sp, #196]
  42d3ac:	mov	w27, #0x1                   	// #1
  42d3b0:	sub	x24, x24, x0
  42d3b4:	str	x24, [sp, #184]
  42d3b8:	ldr	x0, [x26, #40]
  42d3bc:	ldr	w0, [x0, #60]
  42d3c0:	str	w0, [sp, #192]
  42d3c4:	b	42d0ac <nftw@plt+0x2a3bc>
  42d3c8:	mov	x1, x28
  42d3cc:	mov	x0, x26
  42d3d0:	bl	42ce68 <nftw@plt+0x2a178>
  42d3d4:	tst	w0, #0xff
  42d3d8:	b.ne	42d074 <nftw@plt+0x2a384>  // b.any
  42d3dc:	str	x24, [x26, #1328]
  42d3e0:	mov	x1, x28
  42d3e4:	mov	x0, x26
  42d3e8:	mov	w27, #0x0                   	// #0
  42d3ec:	bl	42cb88 <nftw@plt+0x29e98>
  42d3f0:	b	42cfec <nftw@plt+0x2a2fc>
  42d3f4:	cbnz	w20, 42d074 <nftw@plt+0x2a384>
  42d3f8:	add	w23, w23, #0x1
  42d3fc:	cmp	w27, #0x1
  42d400:	b.ne	42d438 <nftw@plt+0x2a748>  // b.any
  42d404:	ldr	x1, [sp, #176]
  42d408:	mov	x0, x26
  42d40c:	bl	42ce68 <nftw@plt+0x2a178>
  42d410:	tst	w0, #0xff
  42d414:	b.ne	42da18 <nftw@plt+0x2ad28>  // b.any
  42d418:	ldr	x1, [sp, #168]
  42d41c:	mov	w23, w27
  42d420:	ldr	x0, [sp, #184]
  42d424:	mov	w27, #0x2                   	// #2
  42d428:	ldr	x21, [x26, #1312]
  42d42c:	str	x0, [x1]
  42d430:	add	x21, x21, x0
  42d434:	b	42d074 <nftw@plt+0x2a384>
  42d438:	cmp	w27, #0x6
  42d43c:	b.eq	42da20 <nftw@plt+0x2ad30>  // b.none
  42d440:	cmp	w27, #0x3
  42d444:	b.eq	42da28 <nftw@plt+0x2ad38>  // b.none
  42d448:	cmp	w27, #0x8
  42d44c:	mov	w0, #0x9                   	// #9
  42d450:	csel	w27, w27, w0, ne  // ne = any
  42d454:	b	42d074 <nftw@plt+0x2a384>
  42d458:	cmp	w20, #0x0
  42d45c:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  42d460:	b.ne	42d074 <nftw@plt+0x2a384>  // b.any
  42d464:	cmp	w23, #0x1
  42d468:	b.ne	42d47c <nftw@plt+0x2a78c>  // b.any
  42d46c:	ldr	x1, [x26, #1312]
  42d470:	add	x0, sp, #0xa0
  42d474:	sub	x1, x21, x1
  42d478:	bl	42c958 <nftw@plt+0x29c68>
  42d47c:	mov	w27, #0x2                   	// #2
  42d480:	mov	w20, #0x0                   	// #0
  42d484:	b	42d074 <nftw@plt+0x2a384>
  42d488:	cbnz	w20, 42d074 <nftw@plt+0x2a384>
  42d48c:	subs	w23, w23, #0x1
  42d490:	ccmp	w27, #0x2, #0x0, eq  // eq = none
  42d494:	b.ne	42d88c <nftw@plt+0x2ab9c>  // b.any
  42d498:	ldr	x2, [sp, #176]
  42d49c:	ldr	x1, [x26, #1312]
  42d4a0:	ldrb	w0, [x2, #18]
  42d4a4:	sub	x1, x21, x1
  42d4a8:	and	w0, w0, #0x3
  42d4ac:	cmp	w0, #0x3
  42d4b0:	b.ne	42d67c <nftw@plt+0x2a98c>  // b.any
  42d4b4:	add	x0, sp, #0xa0
  42d4b8:	bl	42c958 <nftw@plt+0x29c68>
  42d4bc:	ldp	w0, w3, [sp, #196]
  42d4c0:	stp	xzr, xzr, [sp, #224]
  42d4c4:	add	x1, sp, #0xd0
  42d4c8:	ldr	x2, [sp, #176]
  42d4cc:	stp	xzr, xzr, [sp, #208]
  42d4d0:	strh	w0, [sp, #224]
  42d4d4:	mov	x0, x26
  42d4d8:	stp	xzr, xzr, [sp, #240]
  42d4dc:	bl	428810 <nftw@plt+0x25b20>
  42d4e0:	tst	w0, #0xff
  42d4e4:	b.eq	42da30 <nftw@plt+0x2ad40>  // b.none
  42d4e8:	ldr	x0, [sp, #168]
  42d4ec:	mov	w24, #0xa                   	// #10
  42d4f0:	ldr	x1, [sp, #184]
  42d4f4:	ldp	x2, x21, [x0]
  42d4f8:	ldr	x0, [x26, #1312]
  42d4fc:	add	x0, x0, x1
  42d500:	str	x0, [x26, #1328]
  42d504:	str	x19, [x22, #16]
  42d508:	sub	x21, x21, x2
  42d50c:	add	x1, x21, #0x2
  42d510:	mov	x0, x26
  42d514:	bl	4232e4 <nftw@plt+0x205f4>
  42d518:	mov	x23, x0
  42d51c:	mov	w1, #0x28                  	// #40
  42d520:	strb	w1, [x0], #1
  42d524:	mov	x2, x21
  42d528:	add	x21, x21, #0x1
  42d52c:	ldr	x1, [sp, #168]
  42d530:	ldr	x3, [x26, #1312]
  42d534:	ldr	x1, [x1]
  42d538:	add	x1, x3, x1
  42d53c:	bl	4025d0 <memcpy@plt>
  42d540:	strb	w24, [x23, x21]
  42d544:	add	x0, x23, x21
  42d548:	mov	w2, #0x1                   	// #1
  42d54c:	ldp	x1, x27, [x26]
  42d550:	ldr	x21, [x22, #24]
  42d554:	ldrb	w28, [x1, #104]
  42d558:	strb	wzr, [x1, #104]
  42d55c:	ldp	x8, x5, [x1]
  42d560:	stp	x23, x23, [x1]
  42d564:	ldr	x7, [x1, #32]
  42d568:	str	x0, [x1, #32]
  42d56c:	stp	x7, x8, [sp, #144]
  42d570:	ldrb	w0, [x26, #16]
  42d574:	strb	w2, [x26, #16]
  42d578:	cmp	w0, #0x0
  42d57c:	mov	x0, x26
  42d580:	ldr	x9, [x22, #8]
  42d584:	str	x1, [x26, #8]
  42d588:	str	xzr, [x22, #8]
  42d58c:	cset	w23, ne  // ne = any
  42d590:	mov	x1, #0x0                   	// #0
  42d594:	stp	x9, x5, [sp, #128]
  42d598:	bl	42cf58 <nftw@plt+0x2a268>
  42d59c:	strb	w23, [x26, #16]
  42d5a0:	mov	x0, x26
  42d5a4:	mov	x1, #0x1                   	// #1
  42d5a8:	bl	42cb1c <nftw@plt+0x29e2c>
  42d5ac:	ldr	x0, [x26, #1328]
  42d5b0:	strb	w24, [x0]
  42d5b4:	ldr	x1, [x26]
  42d5b8:	ldr	x2, [sp, #184]
  42d5bc:	ldr	x0, [x26, #1312]
  42d5c0:	add	x0, x0, x2
  42d5c4:	ldr	x2, [x26, #1328]
  42d5c8:	stp	x0, x0, [x1]
  42d5cc:	str	x2, [x1, #32]
  42d5d0:	ldr	x1, [sp, #176]
  42d5d4:	stp	x0, x2, [x22, #16]
  42d5d8:	mov	w2, #0x0                   	// #0
  42d5dc:	ldrb	w0, [x26, #24]
  42d5e0:	add	w0, w0, #0x1
  42d5e4:	strb	w0, [x26, #24]
  42d5e8:	mov	x0, x26
  42d5ec:	bl	428450 <nftw@plt+0x25760>
  42d5f0:	mov	x23, x0
  42d5f4:	ldrb	w1, [x26, #24]
  42d5f8:	ldp	x9, x5, [sp, #128]
  42d5fc:	sub	w1, w1, #0x1
  42d600:	strb	w1, [x26, #24]
  42d604:	ldr	x1, [x26]
  42d608:	ldp	x7, x8, [sp, #144]
  42d60c:	ldr	x2, [sp, #184]
  42d610:	str	x9, [x22, #8]
  42d614:	stp	x8, x5, [x1]
  42d618:	str	x7, [x1, #32]
  42d61c:	strb	w28, [x1, #104]
  42d620:	ldr	x1, [x26, #1312]
  42d624:	str	x27, [x26, #8]
  42d628:	add	x1, x1, x2
  42d62c:	str	x1, [x26, #1328]
  42d630:	stp	x19, x21, [x22, #16]
  42d634:	bl	402630 <strlen@plt>
  42d638:	mov	x19, x0
  42d63c:	add	x1, x0, #0x1
  42d640:	mov	x0, x26
  42d644:	bl	4232e4 <nftw@plt+0x205f4>
  42d648:	mov	x21, x0
  42d64c:	mov	x2, x19
  42d650:	mov	x1, x23
  42d654:	bl	4025d0 <memcpy@plt>
  42d658:	strb	w24, [x21, x19]
  42d65c:	mov	x3, x19
  42d660:	mov	x2, x21
  42d664:	mov	x0, x26
  42d668:	ldr	x1, [sp, #176]
  42d66c:	bl	428b10 <nftw@plt+0x25e20>
  42d670:	mov	w27, #0x0                   	// #0
  42d674:	mov	w23, #0x0                   	// #0
  42d678:	b	42cfec <nftw@plt+0x2a2fc>
  42d67c:	ldr	x4, [x2, #24]
  42d680:	ldrb	w0, [x4, #19]
  42d684:	orr	w0, w0, #0x20
  42d688:	strb	w0, [x4, #19]
  42d68c:	add	x0, sp, #0xa0
  42d690:	bl	42c958 <nftw@plt+0x29c68>
  42d694:	ldr	w0, [sp, #200]
  42d698:	cmp	w0, #0x1
  42d69c:	b.ne	42d6c4 <nftw@plt+0x2a9d4>  // b.any
  42d6a0:	ldrh	w0, [x4, #16]
  42d6a4:	cbnz	w0, 42d6c4 <nftw@plt+0x2a9d4>
  42d6a8:	ldr	x0, [sp, #184]
  42d6ac:	add	x1, x0, #0x1
  42d6b0:	ldr	x0, [x26, #1312]
  42d6b4:	add	x0, x0, x1
  42d6b8:	cmp	x21, x0
  42d6bc:	b.ne	42d6c4 <nftw@plt+0x2a9d4>  // b.any
  42d6c0:	str	wzr, [sp, #200]
  42d6c4:	ldr	w3, [sp, #200]
  42d6c8:	mov	x1, x4
  42d6cc:	ldr	x2, [sp, #176]
  42d6d0:	mov	x0, x26
  42d6d4:	bl	428810 <nftw@plt+0x25b20>
  42d6d8:	tst	w0, #0xff
  42d6dc:	b.eq	42da30 <nftw@plt+0x2ad40>  // b.none
  42d6e0:	ldr	x1, [sp, #184]
  42d6e4:	ldr	x0, [x26, #1312]
  42d6e8:	add	x0, x0, x1
  42d6ec:	ldr	x1, [sp, #176]
  42d6f0:	ldr	x21, [x1, #24]
  42d6f4:	str	x0, [x26, #1328]
  42d6f8:	ldrh	w0, [x21, #16]
  42d6fc:	str	x19, [x22, #16]
  42d700:	cbnz	w0, 42d710 <nftw@plt+0x2aa20>
  42d704:	mov	x0, x26
  42d708:	bl	42cb88 <nftw@plt+0x29e98>
  42d70c:	b	42d670 <nftw@plt+0x2a980>
  42d710:	ldr	x4, [x21, #24]
  42d714:	mov	x1, #0x0                   	// #0
  42d718:	ldr	x5, [sp, #168]
  42d71c:	ldrh	w0, [x4, #4]
  42d720:	ldr	w2, [x4]
  42d724:	add	x1, x2, x1
  42d728:	cbz	w0, 42d758 <nftw@plt+0x2aa68>
  42d72c:	ubfiz	x0, x0, #3, #16
  42d730:	add	x2, x2, #0xd
  42d734:	and	x2, x2, #0xfffffffffffffff8
  42d738:	add	x4, x4, x2
  42d73c:	ldr	x3, [x5, x0]
  42d740:	add	x0, x5, x0
  42d744:	sub	x3, x3, #0x1
  42d748:	ldur	x0, [x0, #-8]
  42d74c:	sub	x0, x3, x0
  42d750:	add	x1, x1, x0, lsl #1
  42d754:	b	42d71c <nftw@plt+0x2aa2c>
  42d758:	add	x1, x1, #0x1
  42d75c:	mov	x0, x26
  42d760:	bl	4230b4 <nftw@plt+0x203c4>
  42d764:	mov	x19, x0
  42d768:	ldr	x1, [x0, #16]
  42d76c:	mov	w7, #0x0                   	// #0
  42d770:	ldr	x0, [x21, #24]
  42d774:	mov	x3, #0x0                   	// #0
  42d778:	mov	w10, #0x5c                  	// #92
  42d77c:	mov	x5, x0
  42d780:	mov	x2, #0x0                   	// #0
  42d784:	ldr	w4, [x5], #6
  42d788:	add	x3, x3, x4
  42d78c:	cmp	x4, x2
  42d790:	b.eq	42d7b0 <nftw@plt+0x2aac0>  // b.none
  42d794:	ldrb	w8, [x5, x2]
  42d798:	cmp	w8, #0x22
  42d79c:	b.ne	42d7a4 <nftw@plt+0x2aab4>  // b.any
  42d7a0:	eor	w7, w7, #0x1
  42d7a4:	strb	w8, [x1, x2]
  42d7a8:	add	x2, x2, #0x1
  42d7ac:	b	42d78c <nftw@plt+0x2aa9c>
  42d7b0:	ldrh	w2, [x0, #4]
  42d7b4:	add	x1, x1, x4
  42d7b8:	cbz	w2, 42d868 <nftw@plt+0x2ab78>
  42d7bc:	ldr	x8, [sp, #168]
  42d7c0:	ubfiz	x2, x2, #3, #16
  42d7c4:	ldr	x5, [x26, #1312]
  42d7c8:	add	x4, x8, x2
  42d7cc:	ldr	x2, [x8, x2]
  42d7d0:	mov	w8, #0x0                   	// #0
  42d7d4:	ldur	x4, [x4, #-8]
  42d7d8:	sub	x2, x2, #0x1
  42d7dc:	add	x4, x5, x4
  42d7e0:	add	x5, x5, x2
  42d7e4:	mov	x2, x4
  42d7e8:	cmp	x2, x5
  42d7ec:	b.eq	42d854 <nftw@plt+0x2ab64>  // b.none
  42d7f0:	cbz	w7, 42d82c <nftw@plt+0x2ab3c>
  42d7f4:	ldrb	w9, [x2]
  42d7f8:	add	x11, x1, #0x1
  42d7fc:	add	x12, x3, #0x1
  42d800:	cmp	w9, #0x22
  42d804:	b.ne	42d83c <nftw@plt+0x2ab4c>  // b.any
  42d808:	cmp	x4, x2
  42d80c:	b.cs	42d820 <nftw@plt+0x2ab30>  // b.hs, b.nlast
  42d810:	ldurb	w3, [x2, #-1]
  42d814:	cmp	w3, #0x5c
  42d818:	b.eq	42d820 <nftw@plt+0x2ab30>  // b.none
  42d81c:	eor	w8, w8, #0x1
  42d820:	mov	x3, x12
  42d824:	strb	w10, [x1]
  42d828:	mov	x1, x11
  42d82c:	ldrb	w9, [x2], #1
  42d830:	add	x3, x3, #0x1
  42d834:	strb	w9, [x1], #1
  42d838:	b	42d7e8 <nftw@plt+0x2aaf8>
  42d83c:	cbz	w8, 42d82c <nftw@plt+0x2ab3c>
  42d840:	cmp	w9, #0x5c
  42d844:	b.ne	42d82c <nftw@plt+0x2ab3c>  // b.any
  42d848:	mov	x3, x12
  42d84c:	strb	w9, [x1]
  42d850:	b	42d828 <nftw@plt+0x2ab38>
  42d854:	ldr	w2, [x0]
  42d858:	add	x2, x2, #0xd
  42d85c:	and	x2, x2, #0xfffffffffffffff8
  42d860:	add	x0, x0, x2
  42d864:	b	42d77c <nftw@plt+0x2aa8c>
  42d868:	mov	w0, #0xa                   	// #10
  42d86c:	strb	w0, [x1]
  42d870:	mov	x0, x26
  42d874:	ldr	x2, [x19, #16]
  42d878:	ldr	x1, [sp, #176]
  42d87c:	bl	428b10 <nftw@plt+0x25e20>
  42d880:	ldr	x0, [x26, #136]
  42d884:	str	x19, [x0, #32]
  42d888:	b	42d670 <nftw@plt+0x2a980>
  42d88c:	cmp	w27, #0x9
  42d890:	b.hi	42d074 <nftw@plt+0x2a384>  // b.pmore
  42d894:	mov	x0, #0x290                 	// #656
  42d898:	lsr	x0, x0, x27
  42d89c:	tst	x0, #0x1
  42d8a0:	csel	w27, w27, wzr, eq  // eq = none
  42d8a4:	b	42d074 <nftw@plt+0x2a384>
  42d8a8:	ldr	x0, [sp, #104]
  42d8ac:	cmp	x0, x28
  42d8b0:	b.ne	42d9e8 <nftw@plt+0x2acf8>  // b.any
  42d8b4:	ldr	x0, [x26, #136]
  42d8b8:	ldr	x0, [x0, #8]
  42d8bc:	cbnz	x0, 42d9e8 <nftw@plt+0x2acf8>
  42d8c0:	ldrb	w0, [x26, #16]
  42d8c4:	cbnz	w0, 42d9e8 <nftw@plt+0x2acf8>
  42d8c8:	str	x21, [x26, #1328]
  42d8cc:	mov	x1, x19
  42d8d0:	mov	x0, x26
  42d8d4:	mov	w2, #0x1                   	// #1
  42d8d8:	bl	42cde0 <nftw@plt+0x2a0f0>
  42d8dc:	mov	x19, x0
  42d8e0:	ldrb	w0, [x0]
  42d8e4:	ldr	x21, [x26, #1328]
  42d8e8:	cmp	w0, #0xa
  42d8ec:	b.ne	42d9a0 <nftw@plt+0x2acb0>  // b.any
  42d8f0:	ldr	x0, [x26]
  42d8f4:	mov	w1, #0x1                   	// #1
  42d8f8:	strb	w1, [x0, #104]
  42d8fc:	mov	w1, #0x18                  	// #24
  42d900:	ldr	x0, [x26, #40]
  42d904:	ldr	w2, [x0, #12]
  42d908:	ldr	w4, [x0, #60]
  42d90c:	sub	w2, w2, #0x1
  42d910:	smull	x2, w2, w1
  42d914:	ldr	x1, [x0]
  42d918:	add	x5, x1, x2
  42d91c:	ldr	w1, [x1, x2]
  42d920:	mov	w2, #0x0                   	// #0
  42d924:	sub	w4, w4, w1
  42d928:	ldrb	w1, [x5, #6]
  42d92c:	lsr	w4, w4, w1
  42d930:	ldr	w1, [x5, #16]
  42d934:	add	w1, w1, #0x1
  42d938:	add	w1, w4, w1
  42d93c:	bl	425f10 <nftw@plt+0x23220>
  42d940:	mov	w19, #0x0                   	// #0
  42d944:	ldr	x1, [sp, #160]
  42d948:	cbz	x1, 42d954 <nftw@plt+0x2ac64>
  42d94c:	mov	x0, x26
  42d950:	bl	423094 <nftw@plt+0x203a4>
  42d954:	cmp	w27, #0x2
  42d958:	b.ne	42d980 <nftw@plt+0x2ac90>  // b.any
  42d95c:	ldr	x0, [sp, #176]
  42d960:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x19fa8>
  42d964:	ldr	w2, [sp, #192]
  42d968:	add	x4, x4, #0xdd9
  42d96c:	mov	w3, #0x0                   	// #0
  42d970:	mov	w1, #0x3                   	// #3
  42d974:	ldr	x5, [x0]
  42d978:	mov	x0, x26
  42d97c:	bl	41c1d0 <nftw@plt+0x194e0>
  42d980:	mov	w0, w19
  42d984:	ldp	x19, x20, [sp, #16]
  42d988:	ldp	x21, x22, [sp, #32]
  42d98c:	ldp	x23, x24, [sp, #48]
  42d990:	ldp	x25, x26, [sp, #64]
  42d994:	ldp	x27, x28, [sp, #80]
  42d998:	ldp	x29, x30, [sp], #256
  42d99c:	ret
  42d9a0:	ldr	x1, [sp, #128]
  42d9a4:	ldrh	w1, [x1, w0, sxtw #1]
  42d9a8:	tbz	w1, #2, 42d9d0 <nftw@plt+0x2ace0>
  42d9ac:	ldr	w2, [x26, #1116]
  42d9b0:	cmp	w2, #0x15
  42d9b4:	b.eq	42d9d0 <nftw@plt+0x2ace0>  // b.none
  42d9b8:	ldr	x0, [x26]
  42d9bc:	mov	w1, #0x0                   	// #0
  42d9c0:	str	x19, [x0]
  42d9c4:	mov	x0, x26
  42d9c8:	bl	41a73c <nftw@plt+0x17a4c>
  42d9cc:	b	42d940 <nftw@plt+0x2ac50>
  42d9d0:	tbnz	w1, #9, 42da00 <nftw@plt+0x2ad10>
  42d9d4:	cmp	w0, #0x24
  42d9d8:	b.eq	42d9f8 <nftw@plt+0x2ad08>  // b.none
  42d9dc:	ldr	w0, [x26, #1116]
  42d9e0:	cmp	w0, #0x15
  42d9e4:	b.ne	42d9b8 <nftw@plt+0x2acc8>  // b.any
  42d9e8:	ldrb	w0, [x26, #20]
  42d9ec:	cbz	w0, 42d074 <nftw@plt+0x2a384>
  42d9f0:	mov	w27, #0x5                   	// #5
  42d9f4:	b	42d0ac <nftw@plt+0x2a3bc>
  42d9f8:	ldrb	w0, [x26, #1146]
  42d9fc:	cbz	w0, 42d9dc <nftw@plt+0x2acec>
  42da00:	mov	x1, x19
  42da04:	mov	x0, x26
  42da08:	bl	42cc2c <nftw@plt+0x29f3c>
  42da0c:	ldrb	w0, [x0, #16]
  42da10:	tbz	w0, #0, 42d9dc <nftw@plt+0x2acec>
  42da14:	b	42d9b8 <nftw@plt+0x2acc8>
  42da18:	mov	w27, #0x0                   	// #0
  42da1c:	b	42d074 <nftw@plt+0x2a384>
  42da20:	mov	w27, #0x7                   	// #7
  42da24:	b	42d074 <nftw@plt+0x2a384>
  42da28:	mov	w27, #0x4                   	// #4
  42da2c:	b	42d074 <nftw@plt+0x2a384>
  42da30:	mov	w27, #0x0                   	// #0
  42da34:	mov	w23, #0x0                   	// #0
  42da38:	b	42d074 <nftw@plt+0x2a384>
  42da3c:	mov	w19, #0x1                   	// #1
  42da40:	b	42d944 <nftw@plt+0x2ac54>
  42da44:	stp	x29, x30, [sp, #-32]!
  42da48:	mov	x29, sp
  42da4c:	str	x19, [sp, #16]
  42da50:	mov	x19, x0
  42da54:	ldr	x0, [x19]
  42da58:	ldrb	w0, [x0, #104]
  42da5c:	cbnz	w0, 42da90 <nftw@plt+0x2ada0>
  42da60:	mov	x0, x19
  42da64:	mov	w2, #0x0                   	// #0
  42da68:	mov	x1, #0x0                   	// #0
  42da6c:	bl	42cf58 <nftw@plt+0x2a268>
  42da70:	tst	w0, #0xff
  42da74:	b.eq	42da54 <nftw@plt+0x2ad64>  // b.none
  42da78:	ldrb	w0, [x19, #18]
  42da7c:	cbnz	w0, 42da54 <nftw@plt+0x2ad64>
  42da80:	ldr	x0, [x19]
  42da84:	cmp	x0, #0x0
  42da88:	cset	w0, ne  // ne = any
  42da8c:	b	42daa0 <nftw@plt+0x2adb0>
  42da90:	mov	x0, x19
  42da94:	bl	422724 <nftw@plt+0x1fa34>
  42da98:	ands	w0, w0, #0xff
  42da9c:	b.ne	42da60 <nftw@plt+0x2ad70>  // b.any
  42daa0:	ldr	x19, [sp, #16]
  42daa4:	ldp	x29, x30, [sp], #32
  42daa8:	ret
  42daac:	mov	x1, x0
  42dab0:	ldrb	w0, [x0, #19]
  42dab4:	tbz	w0, #2, 42db00 <nftw@plt+0x2ae10>
  42dab8:	ldrh	w0, [x1, #16]
  42dabc:	cbz	w0, 42db00 <nftw@plt+0x2ae10>
  42dac0:	ldr	x3, [x1, #24]
  42dac4:	mov	x0, #0x0                   	// #0
  42dac8:	mov	x6, #0xfffffffffffffff8    	// #-8
  42dacc:	ldrh	w4, [x3, #4]
  42dad0:	ldr	w2, [x3]
  42dad4:	add	x0, x2, x0
  42dad8:	cbz	w4, 42db04 <nftw@plt+0x2ae14>
  42dadc:	ldr	x5, [x1]
  42dae0:	add	x4, x6, w4, uxtw #3
  42dae4:	add	x2, x2, #0xd
  42dae8:	and	x2, x2, #0xfffffffffffffff8
  42daec:	ldr	x4, [x5, x4]
  42daf0:	add	x3, x3, x2
  42daf4:	ldr	w4, [x4, #8]
  42daf8:	add	x0, x4, x0
  42dafc:	b	42dacc <nftw@plt+0x2addc>
  42db00:	ldr	w0, [x1, #12]
  42db04:	ret
  42db08:	stp	x29, x30, [sp, #-48]!
  42db0c:	mov	x3, x1
  42db10:	mov	x29, sp
  42db14:	stp	x19, x20, [sp, #16]
  42db18:	mov	x19, x0
  42db1c:	ldr	x20, [x0, #24]
  42db20:	stp	x21, x22, [sp, #32]
  42db24:	ldrb	w0, [x0, #19]
  42db28:	tbz	w0, #2, 42db98 <nftw@plt+0x2aea8>
  42db2c:	ldrh	w0, [x19, #16]
  42db30:	cbz	w0, 42db98 <nftw@plt+0x2aea8>
  42db34:	mov	x21, #0xfffffffffffffff8    	// #-8
  42db38:	mov	x1, x20
  42db3c:	mov	x0, x3
  42db40:	ldr	w2, [x1], #6
  42db44:	bl	4025d0 <memcpy@plt>
  42db48:	mov	x3, x0
  42db4c:	ldrh	w0, [x20, #4]
  42db50:	ldr	w1, [x20]
  42db54:	add	x3, x3, x1
  42db58:	cbz	w0, 42dbb0 <nftw@plt+0x2aec0>
  42db5c:	ldr	x1, [x19]
  42db60:	add	x0, x21, w0, uxtw #3
  42db64:	ldr	x22, [x1, x0]
  42db68:	mov	x0, x3
  42db6c:	ldr	w2, [x22, #8]
  42db70:	ldr	x1, [x22]
  42db74:	bl	4025d0 <memcpy@plt>
  42db78:	mov	x3, x0
  42db7c:	ldr	w0, [x20]
  42db80:	ldr	w1, [x22, #8]
  42db84:	add	x0, x0, #0xd
  42db88:	and	x0, x0, #0xfffffffffffffff8
  42db8c:	add	x3, x3, x1
  42db90:	add	x20, x20, x0
  42db94:	b	42db38 <nftw@plt+0x2ae48>
  42db98:	ldr	w2, [x19, #12]
  42db9c:	mov	x1, x20
  42dba0:	mov	x0, x3
  42dba4:	bl	4025d0 <memcpy@plt>
  42dba8:	ldr	w1, [x19, #12]
  42dbac:	add	x3, x0, x1
  42dbb0:	mov	x0, x3
  42dbb4:	ldp	x19, x20, [sp, #16]
  42dbb8:	ldp	x21, x22, [sp, #32]
  42dbbc:	ldp	x29, x30, [sp], #48
  42dbc0:	ret
  42dbc4:	stp	x29, x30, [sp, #-64]!
  42dbc8:	mov	x29, sp
  42dbcc:	ldr	x2, [x0]
  42dbd0:	stp	x21, x22, [sp, #32]
  42dbd4:	ldr	x21, [x0, #136]
  42dbd8:	stp	x19, x20, [sp, #16]
  42dbdc:	mov	x19, x0
  42dbe0:	stp	x23, x24, [sp, #48]
  42dbe4:	ldr	x1, [x0, #1312]
  42dbe8:	str	x1, [x0, #1328]
  42dbec:	ldr	x1, [x2]
  42dbf0:	ldr	x2, [x2, #32]
  42dbf4:	stp	x1, x2, [x21, #16]
  42dbf8:	sub	x1, x2, x1
  42dbfc:	bl	42cb1c <nftw@plt+0x29e2c>
  42dc00:	ldr	x0, [x21, #16]
  42dc04:	ldrb	w0, [x0]
  42dc08:	cmp	w0, #0x28
  42dc0c:	b.ne	42ddc4 <nftw@plt+0x2b0d4>  // b.any
  42dc10:	ldr	x0, [x19, #136]
  42dc14:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  42dc18:	add	x24, x24, #0xae
  42dc1c:	mov	w22, #0x0                   	// #0
  42dc20:	ldr	x1, [x0, #16]
  42dc24:	add	x1, x1, #0x1
  42dc28:	mov	x0, x19
  42dc2c:	mov	w2, #0x1                   	// #1
  42dc30:	bl	42cde0 <nftw@plt+0x2a0f0>
  42dc34:	mov	x20, x0
  42dc38:	ldrb	w0, [x0]
  42dc3c:	ldrb	w1, [x20]
  42dc40:	ldrh	w1, [x24, x1, lsl #1]
  42dc44:	tbnz	w1, #9, 42dc58 <nftw@plt+0x2af68>
  42dc48:	cmp	w0, #0x24
  42dc4c:	b.ne	42ddb0 <nftw@plt+0x2b0c0>  // b.any
  42dc50:	ldrb	w0, [x19, #1146]
  42dc54:	cbz	w0, 42dcb8 <nftw@plt+0x2afc8>
  42dc58:	mov	x1, x20
  42dc5c:	mov	x0, x19
  42dc60:	bl	42cc2c <nftw@plt+0x29f3c>
  42dc64:	mov	x3, x0
  42dc68:	mov	x2, x0
  42dc6c:	mov	w1, w22
  42dc70:	mov	x0, x19
  42dc74:	bl	428f80 <nftw@plt+0x26290>
  42dc78:	ands	w23, w0, #0xff
  42dc7c:	b.eq	42dcb8 <nftw@plt+0x2afc8>  // b.none
  42dc80:	ldr	x0, [x19, #136]
  42dc84:	mov	w2, #0x1                   	// #1
  42dc88:	add	w22, w22, #0x1
  42dc8c:	ldr	x1, [x0, #16]
  42dc90:	mov	x0, x19
  42dc94:	bl	42cde0 <nftw@plt+0x2a0f0>
  42dc98:	mov	x20, x0
  42dc9c:	ldrb	w0, [x0]
  42dca0:	cmp	w0, #0x2c
  42dca4:	b.ne	42dcb0 <nftw@plt+0x2afc0>  // b.any
  42dca8:	add	x1, x20, #0x1
  42dcac:	b	42dc28 <nftw@plt+0x2af38>
  42dcb0:	cmp	w0, #0x29
  42dcb4:	b.eq	42dcd0 <nftw@plt+0x2afe0>  // b.none
  42dcb8:	mov	w23, #0x0                   	// #0
  42dcbc:	mov	x0, x19
  42dcc0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42dcc4:	mov	w1, #0x3                   	// #3
  42dcc8:	add	x2, x2, #0x21f
  42dccc:	bl	41c014 <nftw@plt+0x19324>
  42dcd0:	ldr	x0, [x19, #136]
  42dcd4:	ldrb	w1, [x20]
  42dcd8:	cmp	w1, #0x29
  42dcdc:	cinc	x20, x20, eq  // eq = none
  42dce0:	str	x20, [x0, #16]
  42dce4:	cbz	w23, 42ddd4 <nftw@plt+0x2b0e4>
  42dce8:	ubfiz	x1, x22, #3, #32
  42dcec:	mov	x0, x19
  42dcf0:	bl	425764 <nftw@plt+0x22a74>
  42dcf4:	mov	x23, x0
  42dcf8:	mov	w24, #0x1                   	// #1
  42dcfc:	mov	x1, #0x30                  	// #48
  42dd00:	mov	x0, x19
  42dd04:	bl	42570c <nftw@plt+0x22a1c>
  42dd08:	mov	x2, x0
  42dd0c:	mov	w1, #0x2                   	// #2
  42dd10:	mov	x0, x19
  42dd14:	bl	4290a4 <nftw@plt+0x263b4>
  42dd18:	mov	x20, x0
  42dd1c:	strh	w22, [x0, #16]
  42dd20:	ldrb	w0, [x0, #19]
  42dd24:	str	x23, [x20]
  42dd28:	bfi	w0, w24, #2, #1
  42dd2c:	strb	w0, [x20, #19]
  42dd30:	ldrb	w2, [x19, #1124]
  42dd34:	mov	x0, x19
  42dd38:	ldr	x23, [x19]
  42dd3c:	ldr	x1, [x21, #16]
  42dd40:	bl	42cde0 <nftw@plt+0x2a0f0>
  42dd44:	str	x0, [x23]
  42dd48:	mov	x1, x20
  42dd4c:	mov	w2, #0x0                   	// #0
  42dd50:	ldrb	w0, [x19, #24]
  42dd54:	add	w0, w0, #0x1
  42dd58:	strb	w0, [x19, #24]
  42dd5c:	mov	x0, x19
  42dd60:	bl	42cf58 <nftw@plt+0x2a268>
  42dd64:	ldrb	w0, [x19, #24]
  42dd68:	mov	w1, w22
  42dd6c:	sub	w0, w0, #0x1
  42dd70:	strb	w0, [x19, #24]
  42dd74:	mov	x0, x19
  42dd78:	bl	429064 <nftw@plt+0x26374>
  42dd7c:	cbz	x20, 42ddf0 <nftw@plt+0x2b100>
  42dd80:	ldr	x2, [x19, #1312]
  42dd84:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  42dd88:	ldr	x0, [x19, #1328]
  42dd8c:	add	x1, x1, #0xae
  42dd90:	cmp	x0, x2
  42dd94:	b.ls	42dddc <nftw@plt+0x2b0ec>  // b.plast
  42dd98:	ldurb	w3, [x0, #-1]
  42dd9c:	ldrh	w3, [x1, x3, lsl #1]
  42dda0:	tst	w3, #0xc00
  42dda4:	b.eq	42dddc <nftw@plt+0x2b0ec>  // b.none
  42dda8:	sub	x0, x0, #0x1
  42ddac:	b	42dd90 <nftw@plt+0x2b0a0>
  42ddb0:	cmp	w0, #0x29
  42ddb4:	b.ne	42dcb8 <nftw@plt+0x2afc8>  // b.any
  42ddb8:	cbnz	w22, 42dcb8 <nftw@plt+0x2afc8>
  42ddbc:	mov	w23, #0x1                   	// #1
  42ddc0:	b	42dcd0 <nftw@plt+0x2afe0>
  42ddc4:	mov	w22, #0x0                   	// #0
  42ddc8:	mov	x23, #0x0                   	// #0
  42ddcc:	mov	w24, #0x0                   	// #0
  42ddd0:	b	42dcfc <nftw@plt+0x2b00c>
  42ddd4:	mov	x20, #0x0                   	// #0
  42ddd8:	b	42dd30 <nftw@plt+0x2b040>
  42dddc:	str	x0, [x19, #1328]
  42dde0:	mov	x1, x20
  42dde4:	mov	x0, x19
  42dde8:	mov	w2, #0x0                   	// #0
  42ddec:	bl	42ca24 <nftw@plt+0x29d34>
  42ddf0:	mov	x0, x20
  42ddf4:	ldp	x19, x20, [sp, #16]
  42ddf8:	ldp	x21, x22, [sp, #32]
  42ddfc:	ldp	x23, x24, [sp, #48]
  42de00:	ldp	x29, x30, [sp], #64
  42de04:	ret
  42de08:	stp	x29, x30, [sp, #-64]!
  42de0c:	mov	x29, sp
  42de10:	stp	x21, x22, [sp, #32]
  42de14:	mov	x21, x1
  42de18:	ldr	w1, [x0, #12]
  42de1c:	stp	x19, x20, [sp, #16]
  42de20:	mov	x20, x0
  42de24:	ldr	w0, [x21, #12]
  42de28:	add	w0, w1, w0
  42de2c:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  42de30:	ldrh	w1, [x20, #16]
  42de34:	mov	x19, x0
  42de38:	ldr	w2, [x20, #12]
  42de3c:	strb	wzr, [sp, #62]
  42de40:	strb	wzr, [sp, #63]
  42de44:	add	x22, x0, x2
  42de48:	cbz	w1, 42def8 <nftw@plt+0x2b208>
  42de4c:	ldr	x20, [x20, #24]
  42de50:	ldr	x21, [x21, #24]
  42de54:	ldrh	w1, [x20, #4]
  42de58:	ldrh	w0, [x21, #4]
  42de5c:	cmp	w1, w0
  42de60:	b.eq	42de84 <nftw@plt+0x2b194>  // b.none
  42de64:	mov	w20, #0x1                   	// #1
  42de68:	mov	x0, x19
  42de6c:	bl	402a80 <free@plt>
  42de70:	mov	w0, w20
  42de74:	ldp	x19, x20, [sp, #16]
  42de78:	ldp	x21, x22, [sp, #32]
  42de7c:	ldp	x29, x30, [sp], #64
  42de80:	ret
  42de84:	mov	x1, x20
  42de88:	add	x3, sp, #0x3e
  42de8c:	mov	x0, x19
  42de90:	ldr	w2, [x1], #6
  42de94:	bl	42c978 <nftw@plt+0x29c88>
  42de98:	mov	x10, x0
  42de9c:	mov	x1, x21
  42dea0:	add	x3, sp, #0x3f
  42dea4:	mov	x0, x22
  42dea8:	ldr	w2, [x1], #6
  42deac:	bl	42c978 <nftw@plt+0x29c88>
  42deb0:	cmp	x10, x0
  42deb4:	b.ne	42de64 <nftw@plt+0x2b174>  // b.any
  42deb8:	mov	x2, x10
  42debc:	mov	x1, x22
  42dec0:	mov	x0, x19
  42dec4:	bl	4029c0 <memcmp@plt>
  42dec8:	cbnz	w0, 42de64 <nftw@plt+0x2b174>
  42decc:	ldrh	w0, [x20, #4]
  42ded0:	cbz	w0, 42df40 <nftw@plt+0x2b250>
  42ded4:	ldr	w0, [x20]
  42ded8:	add	x0, x0, #0xd
  42dedc:	and	x0, x0, #0xfffffffffffffff8
  42dee0:	add	x20, x20, x0
  42dee4:	ldr	w0, [x21]
  42dee8:	add	x0, x0, #0xd
  42deec:	and	x0, x0, #0xfffffffffffffff8
  42def0:	add	x21, x21, x0
  42def4:	b	42de54 <nftw@plt+0x2b164>
  42def8:	ldr	x1, [x20, #24]
  42defc:	add	x3, sp, #0x3e
  42df00:	bl	42c978 <nftw@plt+0x29c88>
  42df04:	mov	x10, x0
  42df08:	ldr	w2, [x21, #12]
  42df0c:	add	x3, sp, #0x3f
  42df10:	ldr	x1, [x21, #24]
  42df14:	mov	x0, x22
  42df18:	bl	42c978 <nftw@plt+0x29c88>
  42df1c:	cmp	x10, x0
  42df20:	b.ne	42de64 <nftw@plt+0x2b174>  // b.any
  42df24:	mov	x2, x10
  42df28:	mov	x1, x22
  42df2c:	mov	x0, x19
  42df30:	bl	4029c0 <memcmp@plt>
  42df34:	cmp	w0, #0x0
  42df38:	cset	w20, ne  // ne = any
  42df3c:	b	42de68 <nftw@plt+0x2b178>
  42df40:	mov	w20, #0x0                   	// #0
  42df44:	b	42de68 <nftw@plt+0x2b178>
  42df48:	stp	x29, x30, [sp, #-48]!
  42df4c:	mov	x29, sp
  42df50:	stp	x19, x20, [sp, #16]
  42df54:	mov	x19, x0
  42df58:	str	x21, [sp, #32]
  42df5c:	bl	42401c <nftw@plt+0x2132c>
  42df60:	ldrb	w0, [x0, #4]
  42df64:	cmp	w0, #0x25
  42df68:	b.eq	42df8c <nftw@plt+0x2b29c>  // b.none
  42df6c:	mov	w1, #0x1                   	// #1
  42df70:	mov	x0, x19
  42df74:	bl	428cd8 <nftw@plt+0x25fe8>
  42df78:	mov	sp, x29
  42df7c:	ldp	x19, x20, [sp, #16]
  42df80:	ldr	x21, [sp, #32]
  42df84:	ldp	x29, x30, [sp], #48
  42df88:	ret
  42df8c:	mov	x0, x19
  42df90:	bl	42401c <nftw@plt+0x2132c>
  42df94:	ldrb	w0, [x0, #4]
  42df98:	cmp	w0, #0x37
  42df9c:	b.eq	42dfa8 <nftw@plt+0x2b2b8>  // b.none
  42dfa0:	mov	w1, #0x2                   	// #2
  42dfa4:	b	42df70 <nftw@plt+0x2b280>
  42dfa8:	mov	x0, x19
  42dfac:	bl	42401c <nftw@plt+0x2132c>
  42dfb0:	mov	x20, x0
  42dfb4:	ldrb	w0, [x0, #4]
  42dfb8:	cmp	w0, #0x3e
  42dfbc:	b.ne	42dff0 <nftw@plt+0x2b300>  // b.any
  42dfc0:	ldr	w2, [x20, #8]
  42dfc4:	cmp	w2, #0x4
  42dfc8:	b.ls	42dff0 <nftw@plt+0x2b300>  // b.plast
  42dfcc:	ldr	x1, [x20, #16]
  42dfd0:	sub	w0, w2, #0x2
  42dfd4:	ldrb	w0, [x1, x0]
  42dfd8:	cmp	w0, #0x2f
  42dfdc:	b.ne	42dff0 <nftw@plt+0x2b300>  // b.any
  42dfe0:	sub	w0, w2, #0x3
  42dfe4:	ldrb	w3, [x1, x0]
  42dfe8:	cmp	w3, #0x2f
  42dfec:	b.eq	42dff8 <nftw@plt+0x2b308>  // b.none
  42dff0:	mov	w1, #0x3                   	// #3
  42dff4:	b	42df70 <nftw@plt+0x2b280>
  42dff8:	ldr	x21, [x19, #920]
  42dffc:	cbz	x21, 42df78 <nftw@plt+0x2b288>
  42e000:	add	x0, x0, #0xf
  42e004:	sub	w2, w2, #0x4
  42e008:	and	x0, x0, #0x1fffffff0
  42e00c:	add	x1, x1, #0x1
  42e010:	sub	sp, sp, x0
  42e014:	mov	x3, sp
  42e018:	mov	x0, x3
  42e01c:	bl	4025d0 <memcpy@plt>
  42e020:	mov	x3, x0
  42e024:	mov	x1, x0
  42e028:	ldr	w0, [x20, #8]
  42e02c:	sub	w0, w0, #0x4
  42e030:	strb	wzr, [x3, x0]
  42e034:	mov	x0, x19
  42e038:	blr	x21
  42e03c:	b	42df78 <nftw@plt+0x2b288>
  42e040:	str	w1, [x0, #1116]
  42e044:	sxtw	x1, w1
  42e048:	mov	x2, #0xf                   	// #15
  42e04c:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e050:	add	x3, x3, #0x488
  42e054:	mul	x2, x1, x2
  42e058:	add	x1, x3, x2
  42e05c:	ldrb	w2, [x3, x2]
  42e060:	strb	w2, [x0, #1152]
  42e064:	ldrb	w2, [x1, #1]
  42e068:	strb	w2, [x0, #1120]
  42e06c:	ldrb	w2, [x1, #2]
  42e070:	strb	w2, [x0, #1127]
  42e074:	ldrb	w2, [x1, #3]
  42e078:	strb	w2, [x0, #1147]
  42e07c:	ldrb	w2, [x1, #4]
  42e080:	strb	w2, [x0, #1164]
  42e084:	ldrb	w2, [x1, #5]
  42e088:	strb	w2, [x0, #1153]
  42e08c:	ldrb	w2, [x1, #6]
  42e090:	strb	w2, [x0, #1126]
  42e094:	ldrb	w2, [x1, #7]
  42e098:	strb	w2, [x0, #1128]
  42e09c:	ldrb	w2, [x1, #8]
  42e0a0:	strb	w2, [x0, #1130]
  42e0a4:	ldrb	w2, [x1, #9]
  42e0a8:	strb	w2, [x0, #1161]
  42e0ac:	add	x2, x0, #0x400
  42e0b0:	ldrh	w3, [x1, #10]
  42e0b4:	sturh	w3, [x2, #141]
  42e0b8:	ldrb	w2, [x1, #12]
  42e0bc:	strb	w2, [x0, #1125]
  42e0c0:	ldrb	w2, [x1, #13]
  42e0c4:	ldrb	w1, [x1, #14]
  42e0c8:	strb	w2, [x0, #1129]
  42e0cc:	strb	w1, [x0, #1167]
  42e0d0:	ret
  42e0d4:	stp	x29, x30, [sp, #-64]!
  42e0d8:	mov	x29, sp
  42e0dc:	str	x23, [sp, #48]
  42e0e0:	mov	w23, w0
  42e0e4:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  42e0e8:	stp	x21, x22, [sp, #32]
  42e0ec:	mov	x21, x1
  42e0f0:	ldr	w1, [x0, #2440]
  42e0f4:	mov	x22, x2
  42e0f8:	stp	x19, x20, [sp, #16]
  42e0fc:	cbnz	w1, 42e15c <nftw@plt+0x2b46c>
  42e100:	mov	w1, #0x1                   	// #1
  42e104:	add	x19, x0, #0x988
  42e108:	str	w1, [x0, #2440]
  42e10c:	bl	421ce8 <nftw@plt+0x1eff8>
  42e110:	mov	w0, #0x7c                  	// #124
  42e114:	strb	w0, [x19, #37]
  42e118:	mov	w0, #0x5b5e                	// #23390
  42e11c:	sturh	w0, [x19, #43]
  42e120:	mov	w0, #0x5d                  	// #93
  42e124:	strb	w0, [x19, #45]
  42e128:	mov	w0, #0x5c                  	// #92
  42e12c:	strb	w0, [x19, #51]
  42e130:	mov	w0, #0x237b                	// #9083
  42e134:	strh	w0, [x19, #64]
  42e138:	mov	w0, #0x7d                  	// #125
  42e13c:	strb	w0, [x19, #66]
  42e140:	mov	w0, #0x7e                  	// #126
  42e144:	strb	w0, [x19, #49]
  42e148:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  42e14c:	adrp	x0, 455000 <_obstack_memory_used@@Base+0x17fa8>
  42e150:	add	x1, x1, #0x828
  42e154:	add	x0, x0, #0xc40
  42e158:	bl	402800 <bindtextdomain@plt>
  42e15c:	mov	x1, #0x588                 	// #1416
  42e160:	mov	x0, #0x1                   	// #1
  42e164:	bl	43d18c <_obstack_memory_used@@Base+0x134>
  42e168:	stp	xzr, xzr, [x0, #80]
  42e16c:	mov	x19, x0
  42e170:	stp	xzr, xzr, [x0, #96]
  42e174:	add	x20, x0, #0x50
  42e178:	mov	w1, w23
  42e17c:	stp	xzr, xzr, [x0, #112]
  42e180:	str	xzr, [x0, #128]
  42e184:	bl	42e040 <nftw@plt+0x2b350>
  42e188:	add	x2, x0, #0x400
  42e18c:	mov	w1, #0x101                 	// #257
  42e190:	mov	w0, #0x8                   	// #8
  42e194:	mov	w4, #0x102                 	// #258
  42e198:	mov	w3, #0x100                 	// #256
  42e19c:	sturh	w1, [x2, #99]
  42e1a0:	str	w0, [x19, #1112]
  42e1a4:	mov	w0, #0xff                  	// #255
  42e1a8:	strh	w4, [x19, #1136]
  42e1ac:	strh	w0, [x19, #1198]
  42e1b0:	mov	w0, #0x1                   	// #1
  42e1b4:	strb	w0, [x19, #1132]
  42e1b8:	sturh	w3, [x2, #115]
  42e1bc:	strh	w1, [x19, #1142]
  42e1c0:	strb	wzr, [x19, #1144]
  42e1c4:	strb	w0, [x19, #1146]
  42e1c8:	strb	w0, [x19, #1148]
  42e1cc:	sturh	w4, [x2, #133]
  42e1d0:	mov	w2, #0x1                   	// #1
  42e1d4:	strh	w1, [x19, #1162]
  42e1d8:	mov	x1, #0x40                  	// #64
  42e1dc:	str	x1, [x19, #1208]
  42e1e0:	mov	x1, #0x8                   	// #8
  42e1e4:	strb	wzr, [x19, #1134]
  42e1e8:	str	w2, [x19, #1192]
  42e1ec:	str	x1, [x19, #1216]
  42e1f0:	mov	x1, #0x20                  	// #32
  42e1f4:	str	x1, [x19, #1224]
  42e1f8:	str	x1, [x19, #1232]
  42e1fc:	strh	w3, [x19, #1240]
  42e200:	strb	w0, [x19, #1242]
  42e204:	strb	w2, [x19, #1245]
  42e208:	bl	415154 <nftw@plt+0x12464>
  42e20c:	str	x0, [x19, #1168]
  42e210:	str	xzr, [x19, #1176]
  42e214:	bl	415154 <nftw@plt+0x12464>
  42e218:	str	x0, [x19, #1184]
  42e21c:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0xffa8>
  42e220:	add	x0, x0, #0xe54
  42e224:	str	x0, [x19, #224]
  42e228:	mov	w1, #0xfa                  	// #250
  42e22c:	ldrb	w0, [x19, #1123]
  42e230:	str	x22, [x19, #40]
  42e234:	add	x22, x19, #0x1c8
  42e238:	cmp	w0, #0x0
  42e23c:	str	xzr, [x19, #672]
  42e240:	cset	w0, eq  // eq = none
  42e244:	strb	w0, [x19, #21]
  42e248:	mov	w0, #0x53                  	// #83
  42e24c:	strb	w0, [x19, #668]
  42e250:	mov	w0, #0x16                  	// #22
  42e254:	strb	w0, [x19, #692]
  42e258:	strh	wzr, [x19, #694]
  42e25c:	mov	x0, x22
  42e260:	bl	42253c <nftw@plt+0x1f84c>
  42e264:	stp	xzr, xzr, [x19, #80]
  42e268:	mov	x1, #0x0                   	// #0
  42e26c:	ldr	x0, [x19, #472]
  42e270:	str	xzr, [x19, #120]
  42e274:	str	x20, [x19, #136]
  42e278:	str	x0, [x19, #448]
  42e27c:	mov	x0, x19
  42e280:	str	x22, [x19, #488]
  42e284:	bl	4230b4 <nftw@plt+0x203c4>
  42e288:	str	x0, [x19, #56]
  42e28c:	mov	x1, #0x0                   	// #0
  42e290:	mov	x0, x19
  42e294:	bl	4230b4 <nftw@plt+0x203c4>
  42e298:	str	x0, [x19, #64]
  42e29c:	mov	x0, #0xfffffffffffffffe    	// #-2
  42e2a0:	str	x0, [x19, #656]
  42e2a4:	str	xzr, [x19, #1400]
  42e2a8:	mov	x0, x19
  42e2ac:	str	wzr, [x19, #1408]
  42e2b0:	bl	41dfdc <nftw@plt+0x1b2ec>
  42e2b4:	adrp	x4, 402000 <memcpy@plt-0x5d0>
  42e2b8:	adrp	x3, 43d000 <_obstack_free@@Base+0x1c>
  42e2bc:	add	x4, x4, #0xa80
  42e2c0:	add	x3, x3, #0x158
  42e2c4:	mov	x2, #0x0                   	// #0
  42e2c8:	mov	x1, #0x0                   	// #0
  42e2cc:	add	x0, x19, #0x328
  42e2d0:	bl	43ce68 <_obstack_begin@@Base>
  42e2d4:	mov	x0, x19
  42e2d8:	bl	420ec4 <nftw@plt+0x1e1d4>
  42e2dc:	mov	x1, x21
  42e2e0:	mov	x0, x19
  42e2e4:	bl	421654 <nftw@plt+0x1e964>
  42e2e8:	mov	x0, x19
  42e2ec:	ldp	x19, x20, [sp, #16]
  42e2f0:	ldp	x21, x22, [sp, #32]
  42e2f4:	ldr	x23, [sp, #48]
  42e2f8:	ldp	x29, x30, [sp], #64
  42e2fc:	ret
  42e300:	str	x1, [x0, #40]
  42e304:	ret
  42e308:	stp	x29, x30, [sp, #-48]!
  42e30c:	mov	x29, sp
  42e310:	stp	x19, x20, [sp, #16]
  42e314:	mov	x19, x0
  42e318:	ldr	x0, [x0, #1096]
  42e31c:	stp	x21, x22, [sp, #32]
  42e320:	bl	402a80 <free@plt>
  42e324:	ldr	x0, [x19]
  42e328:	cbz	x0, 42e338 <nftw@plt+0x2b648>
  42e32c:	mov	x0, x19
  42e330:	bl	41b37c <nftw@plt+0x1868c>
  42e334:	b	42e324 <nftw@plt+0x2b634>
  42e338:	ldr	x0, [x19, #1312]
  42e33c:	bl	402a80 <free@plt>
  42e340:	ldr	x0, [x19, #504]
  42e344:	cbz	x0, 42e354 <nftw@plt+0x2b664>
  42e348:	bl	402a80 <free@plt>
  42e34c:	str	xzr, [x19, #504]
  42e350:	str	wzr, [x19, #512]
  42e354:	ldr	x0, [x19, #712]
  42e358:	cbz	x0, 42e360 <nftw@plt+0x2b670>
  42e35c:	bl	42ba44 <nftw@plt+0x28d54>
  42e360:	mov	x1, #0x0                   	// #0
  42e364:	add	x0, x19, #0x328
  42e368:	bl	43cfe4 <_obstack_free@@Base>
  42e36c:	add	x22, x19, #0x1c8
  42e370:	mov	x0, x19
  42e374:	bl	421604 <nftw@plt+0x1e914>
  42e378:	mov	x0, x19
  42e37c:	bl	420fa8 <nftw@plt+0x1e2b8>
  42e380:	mov	x0, x19
  42e384:	bl	414c84 <nftw@plt+0x11f94>
  42e388:	ldr	x0, [x19, #56]
  42e38c:	mov	x20, x22
  42e390:	bl	4232b4 <nftw@plt+0x205c4>
  42e394:	ldr	x0, [x19, #64]
  42e398:	bl	4232b4 <nftw@plt+0x205c4>
  42e39c:	ldr	x0, [x19, #72]
  42e3a0:	bl	4232b4 <nftw@plt+0x205c4>
  42e3a4:	mov	x21, x20
  42e3a8:	ldr	x20, [x20]
  42e3ac:	ldr	x0, [x21, #16]
  42e3b0:	bl	402a80 <free@plt>
  42e3b4:	cmp	x22, x21
  42e3b8:	b.eq	42e3c4 <nftw@plt+0x2b6d4>  // b.none
  42e3bc:	mov	x0, x21
  42e3c0:	bl	402a80 <free@plt>
  42e3c4:	cbnz	x20, 42e3a4 <nftw@plt+0x2b6b4>
  42e3c8:	ldr	x0, [x19, #80]
  42e3cc:	cbz	x0, 42e3e0 <nftw@plt+0x2b6f0>
  42e3d0:	ldr	x20, [x0]
  42e3d4:	bl	402a80 <free@plt>
  42e3d8:	mov	x0, x20
  42e3dc:	b	42e3cc <nftw@plt+0x2b6dc>
  42e3e0:	ldr	x0, [x19, #1384]
  42e3e4:	cbz	x0, 42e42c <nftw@plt+0x2b73c>
  42e3e8:	mov	x20, #0x0                   	// #0
  42e3ec:	ldr	w1, [x19, #1392]
  42e3f0:	ldr	x0, [x19, #1384]
  42e3f4:	cmp	w1, w20
  42e3f8:	b.le	42e428 <nftw@plt+0x2b738>
  42e3fc:	lsl	x1, x20, #4
  42e400:	add	x20, x20, #0x1
  42e404:	ldr	x0, [x0, x1]
  42e408:	bl	402a80 <free@plt>
  42e40c:	b	42e3ec <nftw@plt+0x2b6fc>
  42e410:	ldr	x20, [x19, #1400]
  42e414:	ldr	x0, [x20]
  42e418:	str	x0, [x19, #1400]
  42e41c:	ldr	x0, [x20, #8]
  42e420:	bl	402a80 <free@plt>
  42e424:	mov	x0, x20
  42e428:	bl	402a80 <free@plt>
  42e42c:	ldr	x0, [x19, #1400]
  42e430:	cbnz	x0, 42e410 <nftw@plt+0x2b720>
  42e434:	mov	x0, x19
  42e438:	ldp	x19, x20, [sp, #16]
  42e43c:	ldp	x21, x22, [sp, #32]
  42e440:	ldp	x29, x30, [sp], #48
  42e444:	b	402a80 <free@plt>
  42e448:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e44c:	add	x1, x1, #0x488
  42e450:	add	x1, x1, #0x150
  42e454:	mov	x2, #0xb                   	// #11
  42e458:	ldrh	w3, [x1, #10]
  42e45c:	cmp	w3, w0
  42e460:	b.ne	42e46c <nftw@plt+0x2b77c>  // b.any
  42e464:	ldr	x0, [x1]
  42e468:	ret
  42e46c:	add	x1, x1, #0x10
  42e470:	subs	x2, x2, #0x1
  42e474:	b.ne	42e458 <nftw@plt+0x2b768>  // b.any
  42e478:	mov	x0, #0x0                   	// #0
  42e47c:	b	42e468 <nftw@plt+0x2b778>
  42e480:	stp	x29, x30, [sp, #-48]!
  42e484:	mov	x29, sp
  42e488:	stp	x19, x20, [sp, #16]
  42e48c:	mov	x20, x0
  42e490:	str	x21, [sp, #32]
  42e494:	ldrb	w0, [x0, #1160]
  42e498:	cbnz	w0, 42e52c <nftw@plt+0x2b83c>
  42e49c:	ldrb	w0, [x20, #1243]
  42e4a0:	cbz	w0, 42e534 <nftw@plt+0x2b844>
  42e4a4:	ldrb	w0, [x20, #1153]
  42e4a8:	cmp	w0, #0x0
  42e4ac:	cset	x0, eq  // eq = none
  42e4b0:	add	x0, x0, #0xb
  42e4b4:	adrp	x19, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e4b8:	add	x19, x19, #0x488
  42e4bc:	add	x19, x19, #0x200
  42e4c0:	add	x21, x19, x0, lsl #4
  42e4c4:	cmp	x21, x19
  42e4c8:	b.ls	42e53c <nftw@plt+0x2b84c>  // b.plast
  42e4cc:	ldrh	w0, [x19, #10]
  42e4d0:	cmp	w0, #0xa
  42e4d4:	b.ne	42e4ec <nftw@plt+0x2b7fc>  // b.any
  42e4d8:	ldr	w0, [x20, #1116]
  42e4dc:	cmp	w0, #0x15
  42e4e0:	b.eq	42e524 <nftw@plt+0x2b834>  // b.none
  42e4e4:	ldr	x0, [x20, #1040]
  42e4e8:	cbz	x0, 42e524 <nftw@plt+0x2b834>
  42e4ec:	ldrh	w2, [x19, #8]
  42e4f0:	mov	x0, x20
  42e4f4:	ldr	x1, [x19]
  42e4f8:	bl	421644 <nftw@plt+0x1e954>
  42e4fc:	ldrb	w1, [x0, #18]
  42e500:	orr	w1, w1, #0x3
  42e504:	strb	w1, [x0, #18]
  42e508:	ldrb	w1, [x19, #12]
  42e50c:	cbz	w1, 42e51c <nftw@plt+0x2b82c>
  42e510:	ldrh	w1, [x0, #18]
  42e514:	orr	w1, w1, #0x20
  42e518:	strh	w1, [x0, #18]
  42e51c:	ldrh	w1, [x19, #10]
  42e520:	str	w1, [x0, #24]
  42e524:	add	x19, x19, #0x10
  42e528:	b	42e4c4 <nftw@plt+0x2b7d4>
  42e52c:	mov	x0, #0xa                   	// #10
  42e530:	b	42e4b4 <nftw@plt+0x2b7c4>
  42e534:	mov	x0, #0xb                   	// #11
  42e538:	b	42e4b4 <nftw@plt+0x2b7c4>
  42e53c:	ldp	x19, x20, [sp, #16]
  42e540:	ldr	x21, [sp, #32]
  42e544:	ldp	x29, x30, [sp], #48
  42e548:	ret
  42e54c:	stp	x29, x30, [sp, #-32]!
  42e550:	mov	x29, sp
  42e554:	stp	x19, x20, [sp, #16]
  42e558:	mov	x19, x0
  42e55c:	mov	w20, w1
  42e560:	bl	42e480 <nftw@plt+0x2b790>
  42e564:	ldrb	w0, [x19, #1160]
  42e568:	cbnz	w0, 42e58c <nftw@plt+0x2b89c>
  42e56c:	ldrb	w0, [x19, #1243]
  42e570:	cbz	w0, 42e57c <nftw@plt+0x2b88c>
  42e574:	ldrb	w0, [x19, #1153]
  42e578:	cbz	w0, 42e58c <nftw@plt+0x2b89c>
  42e57c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e580:	mov	x0, x19
  42e584:	add	x1, x1, #0x271
  42e588:	bl	41bc00 <nftw@plt+0x18f10>
  42e58c:	ldrb	w1, [x19, #1120]
  42e590:	ldr	w0, [x19, #1116]
  42e594:	cbz	w1, 42e67c <nftw@plt+0x2b98c>
  42e598:	sub	w1, w0, #0x13
  42e59c:	cmp	w1, #0x1
  42e5a0:	b.hi	42e628 <nftw@plt+0x2b938>  // b.pmore
  42e5a4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e5a8:	add	x1, x1, #0x27c
  42e5ac:	mov	x0, x19
  42e5b0:	bl	41bc00 <nftw@plt+0x18f10>
  42e5b4:	ldrb	w0, [x19, #1128]
  42e5b8:	cbz	w0, 42e5f4 <nftw@plt+0x2b904>
  42e5bc:	ldrb	w0, [x19, #1120]
  42e5c0:	cbz	w0, 42e5d4 <nftw@plt+0x2b8e4>
  42e5c4:	ldr	w0, [x19, #1116]
  42e5c8:	sub	w0, w0, #0xb
  42e5cc:	cmp	w0, #0x1
  42e5d0:	b.ls	42e5f4 <nftw@plt+0x2b904>  // b.plast
  42e5d4:	mov	x0, x19
  42e5d8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e5dc:	add	x1, x1, #0x36d
  42e5e0:	bl	41bc00 <nftw@plt+0x18f10>
  42e5e4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e5e8:	mov	x0, x19
  42e5ec:	add	x1, x1, #0x37f
  42e5f0:	bl	41bc00 <nftw@plt+0x18f10>
  42e5f4:	cbz	w20, 42e70c <nftw@plt+0x2ba1c>
  42e5f8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e5fc:	add	x1, x1, #0x391
  42e600:	mov	x0, x19
  42e604:	bl	41bc00 <nftw@plt+0x18f10>
  42e608:	ldrb	w0, [x19, #1122]
  42e60c:	cbz	w0, 42e718 <nftw@plt+0x2ba28>
  42e610:	mov	x0, x19
  42e614:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e618:	ldp	x19, x20, [sp, #16]
  42e61c:	add	x1, x1, #0x3b5
  42e620:	ldp	x29, x30, [sp], #32
  42e624:	b	41bc00 <nftw@plt+0x18f10>
  42e628:	sub	w1, w0, #0x11
  42e62c:	cmp	w1, #0x1
  42e630:	b.hi	42e640 <nftw@plt+0x2b950>  // b.pmore
  42e634:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e638:	add	x1, x1, #0x290
  42e63c:	b	42e5ac <nftw@plt+0x2b8bc>
  42e640:	sub	w1, w0, #0xf
  42e644:	cmp	w1, #0x1
  42e648:	b.hi	42e658 <nftw@plt+0x2b968>  // b.pmore
  42e64c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e650:	add	x1, x1, #0x2a4
  42e654:	b	42e5ac <nftw@plt+0x2b8bc>
  42e658:	sub	w0, w0, #0xd
  42e65c:	cmp	w0, #0x1
  42e660:	b.hi	42e670 <nftw@plt+0x2b980>  // b.pmore
  42e664:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e668:	add	x1, x1, #0x2b8
  42e66c:	b	42e5ac <nftw@plt+0x2b8bc>
  42e670:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e674:	add	x1, x1, #0x2cc
  42e678:	b	42e5ac <nftw@plt+0x2b8bc>
  42e67c:	cmp	w0, #0x15
  42e680:	b.ne	42e690 <nftw@plt+0x2b9a0>  // b.any
  42e684:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e688:	add	x1, x1, #0x2e0
  42e68c:	b	42e5ac <nftw@plt+0x2b8bc>
  42e690:	cmp	w0, #0x6
  42e694:	b.ne	42e6a4 <nftw@plt+0x2b9b4>  // b.any
  42e698:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e69c:	add	x1, x1, #0x2f0
  42e6a0:	b	42e5ac <nftw@plt+0x2b8bc>
  42e6a4:	cmp	w0, #0xa
  42e6a8:	b.eq	42e6b4 <nftw@plt+0x2b9c4>  // b.none
  42e6ac:	cmp	w0, #0x4
  42e6b0:	b.ne	42e6c0 <nftw@plt+0x2b9d0>  // b.any
  42e6b4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e6b8:	add	x1, x1, #0x309
  42e6bc:	b	42e5ac <nftw@plt+0x2b8bc>
  42e6c0:	cmp	w0, #0x9
  42e6c4:	b.eq	42e6d0 <nftw@plt+0x2b9e0>  // b.none
  42e6c8:	cmp	w0, #0x3
  42e6cc:	b.ne	42e6dc <nftw@plt+0x2b9ec>  // b.any
  42e6d0:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e6d4:	add	x1, x1, #0x322
  42e6d8:	b	42e5ac <nftw@plt+0x2b8bc>
  42e6dc:	cmp	w0, #0x8
  42e6e0:	b.eq	42e6ec <nftw@plt+0x2b9fc>  // b.none
  42e6e4:	cmp	w0, #0x2
  42e6e8:	b.ne	42e6f8 <nftw@plt+0x2ba08>  // b.any
  42e6ec:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e6f0:	add	x1, x1, #0x33b
  42e6f4:	b	42e5ac <nftw@plt+0x2b8bc>
  42e6f8:	ldrb	w0, [x19, #1152]
  42e6fc:	cbz	w0, 42e5b4 <nftw@plt+0x2b8c4>
  42e700:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e704:	add	x1, x1, #0x354
  42e708:	b	42e5ac <nftw@plt+0x2b8bc>
  42e70c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e710:	add	x1, x1, #0x3a3
  42e714:	b	42e600 <nftw@plt+0x2b910>
  42e718:	ldp	x19, x20, [sp, #16]
  42e71c:	ldp	x29, x30, [sp], #32
  42e720:	ret
  42e724:	stp	x29, x30, [sp, #-48]!
  42e728:	mov	x29, sp
  42e72c:	stp	x19, x20, [sp, #16]
  42e730:	mov	x19, x0
  42e734:	stp	x21, x22, [sp, #32]
  42e738:	ldrb	w0, [x0, #1120]
  42e73c:	cbz	w0, 42e744 <nftw@plt+0x2ba54>
  42e740:	strb	wzr, [x19, #1138]
  42e744:	ldrb	w1, [x19, #1155]
  42e748:	cbz	w1, 42e760 <nftw@plt+0x2ba70>
  42e74c:	ldrb	w1, [x19, #1244]
  42e750:	cbnz	w1, 42e75c <nftw@plt+0x2ba6c>
  42e754:	mov	w1, #0x1                   	// #1
  42e758:	strb	w1, [x19, #24]
  42e75c:	strb	wzr, [x19, #1160]
  42e760:	ldrb	w1, [x19, #1136]
  42e764:	cmp	w1, #0x2
  42e768:	b.ne	42e77c <nftw@plt+0x2ba8c>  // b.any
  42e76c:	ldrb	w1, [x19, #1125]
  42e770:	cmp	w1, #0x0
  42e774:	cset	w1, eq  // eq = none
  42e778:	strb	w1, [x19, #1136]
  42e77c:	ldrb	w1, [x19, #1160]
  42e780:	cbz	w1, 42e78c <nftw@plt+0x2ba9c>
  42e784:	strb	wzr, [x19, #1125]
  42e788:	strb	wzr, [x19, #1136]
  42e78c:	cbz	w0, 42e808 <nftw@plt+0x2bb18>
  42e790:	ldrb	w0, [x19, #1158]
  42e794:	cmp	w0, #0x0
  42e798:	cset	w21, ne  // ne = any
  42e79c:	ldrb	w0, [x19, #1159]
  42e7a0:	cbz	w0, 42e810 <nftw@plt+0x2bb20>
  42e7a4:	mov	w0, #0x84                  	// #132
  42e7a8:	orr	w21, w21, w0
  42e7ac:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42e7b0:	add	x20, x20, #0x488
  42e7b4:	add	x20, x20, #0x150
  42e7b8:	mov	x22, #0xb                   	// #11
  42e7bc:	ldrh	w2, [x20, #8]
  42e7c0:	mov	x0, x19
  42e7c4:	ldr	x1, [x20]
  42e7c8:	add	x20, x20, #0x10
  42e7cc:	bl	421644 <nftw@plt+0x1e954>
  42e7d0:	ldrh	w1, [x0, #18]
  42e7d4:	subs	x22, x22, #0x1
  42e7d8:	ubfx	x2, x1, #2, #8
  42e7dc:	orr	w2, w21, w2
  42e7e0:	bfi	w1, w2, #2, #8
  42e7e4:	strh	w1, [x0, #18]
  42e7e8:	ldrb	w1, [x0, #16]
  42e7ec:	and	w1, w1, #0xfffffffe
  42e7f0:	strb	w1, [x0, #16]
  42e7f4:	ldurh	w2, [x20, #-6]
  42e7f8:	bfi	w1, w2, #1, #7
  42e7fc:	strb	w1, [x0, #16]
  42e800:	b.ne	42e7bc <nftw@plt+0x2bacc>  // b.any
  42e804:	b	42e814 <nftw@plt+0x2bb24>
  42e808:	mov	w21, #0x0                   	// #0
  42e80c:	b	42e79c <nftw@plt+0x2baac>
  42e810:	cbnz	w21, 42e7ac <nftw@plt+0x2babc>
  42e814:	ldp	x19, x20, [sp, #16]
  42e818:	ldp	x21, x22, [sp, #32]
  42e81c:	ldp	x29, x30, [sp], #48
  42e820:	ret
  42e824:	stp	x29, x30, [sp, #-48]!
  42e828:	mov	x29, sp
  42e82c:	stp	x19, x20, [sp, #16]
  42e830:	mov	x19, x0
  42e834:	ldr	w0, [x0, #1200]
  42e838:	str	x21, [sp, #32]
  42e83c:	mov	x20, x1
  42e840:	cbz	w0, 42e860 <nftw@plt+0x2bb70>
  42e844:	ldr	x0, [x19, #712]
  42e848:	cbnz	x0, 42e854 <nftw@plt+0x2bb64>
  42e84c:	bl	42ba38 <nftw@plt+0x28d48>
  42e850:	str	x0, [x19, #712]
  42e854:	ldr	x0, [x19, #712]
  42e858:	mov	x1, x20
  42e85c:	bl	42bb84 <nftw@plt+0x28e94>
  42e860:	add	x2, x19, #0xd8
  42e864:	mov	x1, x20
  42e868:	mov	w6, #0x0                   	// #0
  42e86c:	mov	w5, #0x0                   	// #0
  42e870:	mov	w4, #0x0                   	// #0
  42e874:	mov	w3, #0x0                   	// #0
  42e878:	mov	x0, x19
  42e87c:	bl	42017c <nftw@plt+0x1d48c>
  42e880:	str	x0, [x19, #288]
  42e884:	bl	42016c <nftw@plt+0x1d47c>
  42e888:	tst	w0, #0xff
  42e88c:	b.ne	42e950 <nftw@plt+0x2bc60>  // b.any
  42e890:	ldr	x1, [x19, #288]
  42e894:	mov	x0, x19
  42e898:	mov	w3, #0x0                   	// #0
  42e89c:	mov	w2, #0x0                   	// #0
  42e8a0:	bl	420950 <nftw@plt+0x1dc60>
  42e8a4:	ldrb	w0, [x19, #1155]
  42e8a8:	cbz	w0, 42e92c <nftw@plt+0x2bc3c>
  42e8ac:	mov	x0, x19
  42e8b0:	bl	42401c <nftw@plt+0x2132c>
  42e8b4:	mov	x20, x0
  42e8b8:	ldrb	w0, [x0, #4]
  42e8bc:	cmp	w0, #0x25
  42e8c0:	b.ne	42e940 <nftw@plt+0x2bc50>  // b.any
  42e8c4:	mov	w0, #0x1                   	// #1
  42e8c8:	strb	w0, [x19, #16]
  42e8cc:	mov	x0, x19
  42e8d0:	bl	42401c <nftw@plt+0x2132c>
  42e8d4:	mov	x21, x0
  42e8d8:	mov	w1, #0x1                   	// #1
  42e8dc:	mov	x0, x19
  42e8e0:	bl	428cd8 <nftw@plt+0x25fe8>
  42e8e4:	strb	wzr, [x19, #16]
  42e8e8:	ldrb	w0, [x21, #4]
  42e8ec:	cmp	w0, #0x37
  42e8f0:	b.ne	42e940 <nftw@plt+0x2bc50>  // b.any
  42e8f4:	ldrh	w1, [x20, #6]
  42e8f8:	mov	x0, x19
  42e8fc:	and	w1, w1, #0x1
  42e900:	bl	41a73c <nftw@plt+0x17a4c>
  42e904:	cbz	w0, 42e940 <nftw@plt+0x2bc50>
  42e908:	mov	x0, x19
  42e90c:	bl	42df48 <nftw@plt+0x2b258>
  42e910:	ldr	x1, [x19, #40]
  42e914:	mov	w2, #0x18                  	// #24
  42e918:	ldr	w0, [x1, #12]
  42e91c:	ldr	x1, [x1]
  42e920:	sub	w0, w0, #0x1
  42e924:	smaddl	x0, w0, w2, x1
  42e928:	ldr	x20, [x0, #8]
  42e92c:	mov	x0, x20
  42e930:	ldp	x19, x20, [sp, #16]
  42e934:	ldr	x21, [sp, #32]
  42e938:	ldp	x29, x30, [sp], #48
  42e93c:	ret
  42e940:	mov	x0, x19
  42e944:	mov	w1, #0x1                   	// #1
  42e948:	bl	428cd8 <nftw@plt+0x25fe8>
  42e94c:	b	42e910 <nftw@plt+0x2bc20>
  42e950:	mov	x20, #0x0                   	// #0
  42e954:	b	42e92c <nftw@plt+0x2bc3c>
  42e958:	stp	x29, x30, [sp, #-32]!
  42e95c:	mov	x29, sp
  42e960:	stp	x19, x20, [sp, #16]
  42e964:	mov	x20, x1
  42e968:	mov	x19, x0
  42e96c:	ldrb	w1, [x0, #1151]
  42e970:	cbz	w1, 42e984 <nftw@plt+0x2bc94>
  42e974:	adrp	x1, 428000 <nftw@plt+0x25310>
  42e978:	mov	x2, #0x0                   	// #0
  42e97c:	add	x1, x1, #0x38c
  42e980:	bl	4217c8 <nftw@plt+0x1ead8>
  42e984:	ldr	x0, [x19]
  42e988:	cbz	x0, 42e998 <nftw@plt+0x2bca8>
  42e98c:	mov	x0, x19
  42e990:	bl	41b37c <nftw@plt+0x1868c>
  42e994:	b	42e984 <nftw@plt+0x2bc94>
  42e998:	ldr	w0, [x19, #1200]
  42e99c:	cbz	w0, 42e9c8 <nftw@plt+0x2bcd8>
  42e9a0:	cbz	x20, 42e9c8 <nftw@plt+0x2bcd8>
  42e9a4:	ldr	x0, [x19, #712]
  42e9a8:	mov	x1, x20
  42e9ac:	mov	w2, #0x48                  	// #72
  42e9b0:	bl	42bd80 <nftw@plt+0x29090>
  42e9b4:	ldrb	w0, [x19, #1205]
  42e9b8:	cbz	w0, 42e9c8 <nftw@plt+0x2bcd8>
  42e9bc:	ldr	x0, [x19, #712]
  42e9c0:	mov	x1, x20
  42e9c4:	bl	42bed0 <nftw@plt+0x291e0>
  42e9c8:	ldrb	w0, [x19, #1131]
  42e9cc:	cbz	w0, 42e9e0 <nftw@plt+0x2bcf0>
  42e9d0:	mov	x0, x19
  42e9d4:	ldp	x19, x20, [sp, #16]
  42e9d8:	ldp	x29, x30, [sp], #32
  42e9dc:	b	4210d0 <nftw@plt+0x1e3e0>
  42e9e0:	ldp	x19, x20, [sp, #16]
  42e9e4:	ldp	x29, x30, [sp], #32
  42e9e8:	ret
  42e9ec:	stp	x29, x30, [sp, #-112]!
  42e9f0:	mov	x29, sp
  42e9f4:	stp	x19, x20, [sp, #16]
  42e9f8:	add	x20, sp, #0x28
  42e9fc:	stp	xzr, xzr, [sp, #48]
  42ea00:	str	x0, [sp, #40]
  42ea04:	mov	x0, x20
  42ea08:	str	w1, [sp, #48]
  42ea0c:	mov	x1, #0x48                  	// #72
  42ea10:	stp	xzr, xzr, [sp, #64]
  42ea14:	stp	xzr, xzr, [sp, #80]
  42ea18:	stp	xzr, xzr, [sp, #96]
  42ea1c:	bl	42ec94 <nftw@plt+0x2bfa4>
  42ea20:	mov	x19, x0
  42ea24:	cbz	x0, 42ea34 <nftw@plt+0x2bd44>
  42ea28:	mov	x1, x20
  42ea2c:	mov	x2, #0x48                  	// #72
  42ea30:	bl	4025d0 <memcpy@plt>
  42ea34:	mov	x0, x19
  42ea38:	ldp	x19, x20, [sp, #16]
  42ea3c:	ldp	x29, x30, [sp], #112
  42ea40:	ret
  42ea44:	stp	x29, x30, [sp, #-48]!
  42ea48:	mov	x29, sp
  42ea4c:	str	x19, [sp, #16]
  42ea50:	mov	x19, x1
  42ea54:	add	x1, sp, #0x2c
  42ea58:	str	wzr, [sp, #44]
  42ea5c:	bl	44b798 <_obstack_memory_used@@Base+0xe740>
  42ea60:	mov	x1, x0
  42ea64:	ldr	w0, [x19]
  42ea68:	cmp	w0, #0x0
  42ea6c:	b.le	42ea88 <nftw@plt+0x2bd98>
  42ea70:	sub	w0, w0, #0x1
  42ea74:	str	w0, [x19]
  42ea78:	mov	w0, #0x0                   	// #0
  42ea7c:	ldr	x19, [sp, #16]
  42ea80:	ldp	x29, x30, [sp], #48
  42ea84:	ret
  42ea88:	ldr	w0, [sp, #44]
  42ea8c:	ldr	w2, [x19, #44]
  42ea90:	cmp	w0, #0x0
  42ea94:	cset	x0, eq  // eq = none
  42ea98:	sub	x1, x1, x0
  42ea9c:	ldr	x5, [x19, #16]
  42eaa0:	ldr	x0, [x19, #32]
  42eaa4:	cbnz	w2, 42ead0 <nftw@plt+0x2bde0>
  42eaa8:	mov	x4, #0x0                   	// #0
  42eaac:	mov	w3, #0x0                   	// #0
  42eab0:	mov	x2, #0x0                   	// #0
  42eab4:	blr	x5
  42eab8:	str	w0, [x19, #40]
  42eabc:	ldr	w0, [x19, #40]
  42eac0:	cmp	w0, #0x0
  42eac4:	mov	w0, #0x5                   	// #5
  42eac8:	csel	w0, wzr, w0, eq  // eq = none
  42eacc:	b	42ea7c <nftw@plt+0x2bd8c>
  42ead0:	mov	x4, x0
  42ead4:	mov	x2, x5
  42ead8:	ldr	x0, [x19, #8]
  42eadc:	ldr	x3, [x19, #24]
  42eae0:	bl	42f12c <nftw@plt+0x2c43c>
  42eae4:	b	42eab8 <nftw@plt+0x2bdc8>
  42eae8:	stp	x29, x30, [sp, #-80]!
  42eaec:	add	w1, w1, #0x1
  42eaf0:	mov	x29, sp
  42eaf4:	str	x19, [sp, #16]
  42eaf8:	mov	x19, x0
  42eafc:	str	w1, [sp, #32]
  42eb00:	mov	x1, #0x1000                	// #4096
  42eb04:	stp	x0, x2, [sp, #40]
  42eb08:	mov	x2, #0x0                   	// #0
  42eb0c:	stp	x3, x4, [sp, #56]
  42eb10:	mov	x3, #0x0                   	// #0
  42eb14:	str	wzr, [sp, #72]
  42eb18:	bl	42ec94 <nftw@plt+0x2bfa4>
  42eb1c:	cbnz	x0, 42eb44 <nftw@plt+0x2be54>
  42eb20:	str	wzr, [sp, #76]
  42eb24:	add	x1, sp, #0x20
  42eb28:	adrp	x0, 42e000 <nftw@plt+0x2b310>
  42eb2c:	add	x0, x0, #0xa44
  42eb30:	bl	44bde0 <_obstack_memory_used@@Base+0xed88>
  42eb34:	ldr	w0, [sp, #72]
  42eb38:	ldr	x19, [sp, #16]
  42eb3c:	ldp	x29, x30, [sp], #80
  42eb40:	ret
  42eb44:	mov	x1, x0
  42eb48:	mov	x4, #0x0                   	// #0
  42eb4c:	mov	x0, x19
  42eb50:	mov	x3, #0x0                   	// #0
  42eb54:	mov	x2, #0x1000                	// #4096
  42eb58:	bl	42ebd8 <nftw@plt+0x2bee8>
  42eb5c:	mov	w0, #0x1                   	// #1
  42eb60:	str	w0, [sp, #76]
  42eb64:	b	42eb24 <nftw@plt+0x2be34>
  42eb68:	ldr	x4, [x0, #64]
  42eb6c:	add	x5, x0, #0x40
  42eb70:	mov	x3, #0x0                   	// #0
  42eb74:	mov	x6, #0x0                   	// #0
  42eb78:	cbnz	x4, 42ebac <nftw@plt+0x2bebc>
  42eb7c:	cmp	x6, #0xf
  42eb80:	b.ls	42eb9c <nftw@plt+0x2beac>  // b.plast
  42eb84:	ldr	x4, [x3]
  42eb88:	ldr	x5, [x4, #8]
  42eb8c:	cmp	x5, x2
  42eb90:	b.cs	42eba8 <nftw@plt+0x2beb8>  // b.hs, b.nlast
  42eb94:	ldr	x4, [x4]
  42eb98:	str	x4, [x3]
  42eb9c:	ldr	x3, [x0, #64]
  42eba0:	stp	x3, x2, [x1]
  42eba4:	str	x1, [x0, #64]
  42eba8:	ret
  42ebac:	cbz	x3, 42ebc4 <nftw@plt+0x2bed4>
  42ebb0:	ldr	x7, [x3]
  42ebb4:	ldr	x8, [x4, #8]
  42ebb8:	ldr	x7, [x7, #8]
  42ebbc:	cmp	x8, x7
  42ebc0:	csel	x5, x5, x3, cc  // cc = lo, ul, last
  42ebc4:	mov	x3, x5
  42ebc8:	add	x6, x6, #0x1
  42ebcc:	mov	x5, x4
  42ebd0:	ldr	x4, [x4]
  42ebd4:	b	42eb78 <nftw@plt+0x2be88>
  42ebd8:	stp	x29, x30, [sp, #-48]!
  42ebdc:	mov	x29, sp
  42ebe0:	stp	x19, x20, [sp, #16]
  42ebe4:	mov	x19, x0
  42ebe8:	mov	x20, x2
  42ebec:	str	x21, [sp, #32]
  42ebf0:	mov	x0, #0xffff                	// #65535
  42ebf4:	mov	x21, x1
  42ebf8:	cmp	x2, x0
  42ebfc:	b.hi	42ec50 <nftw@plt+0x2bf60>  // b.pmore
  42ec00:	ldr	w0, [x19, #8]
  42ec04:	cbz	w0, 42ec88 <nftw@plt+0x2bf98>
  42ec08:	add	x0, x19, #0x3c
  42ec0c:	mov	w2, #0x1                   	// #1
  42ec10:	ldxr	w1, [x0]
  42ec14:	stxr	w3, w2, [x0]
  42ec18:	cbnz	w3, 42ec10 <nftw@plt+0x2bf20>
  42ec1c:	dmb	ish
  42ec20:	cbnz	w1, 42ec78 <nftw@plt+0x2bf88>
  42ec24:	cmp	x20, #0xf
  42ec28:	b.ls	42ec3c <nftw@plt+0x2bf4c>  // b.plast
  42ec2c:	mov	x2, x20
  42ec30:	mov	x1, x21
  42ec34:	mov	x0, x19
  42ec38:	bl	42eb68 <nftw@plt+0x2be78>
  42ec3c:	ldr	w0, [x19, #8]
  42ec40:	cbz	w0, 42ec78 <nftw@plt+0x2bf88>
  42ec44:	add	x19, x19, #0x3c
  42ec48:	stlr	wzr, [x19]
  42ec4c:	b	42ec78 <nftw@plt+0x2bf88>
  42ec50:	bl	4028d0 <getpagesize@plt>
  42ec54:	sxtw	x0, w0
  42ec58:	sub	x0, x0, #0x1
  42ec5c:	orr	x1, x21, x20
  42ec60:	tst	x0, x1
  42ec64:	b.ne	42ec00 <nftw@plt+0x2bf10>  // b.any
  42ec68:	mov	x1, x20
  42ec6c:	mov	x0, x21
  42ec70:	bl	402ae0 <munmap@plt>
  42ec74:	cbnz	w0, 42ec00 <nftw@plt+0x2bf10>
  42ec78:	ldp	x19, x20, [sp, #16]
  42ec7c:	ldr	x21, [sp, #32]
  42ec80:	ldp	x29, x30, [sp], #48
  42ec84:	ret
  42ec88:	cmp	x20, #0xf
  42ec8c:	b.hi	42ec2c <nftw@plt+0x2bf3c>  // b.pmore
  42ec90:	b	42ec78 <nftw@plt+0x2bf88>
  42ec94:	stp	x29, x30, [sp, #-64]!
  42ec98:	mov	x29, sp
  42ec9c:	stp	x21, x22, [sp, #32]
  42eca0:	mov	x21, x0
  42eca4:	ldr	w0, [x0, #8]
  42eca8:	stp	x19, x20, [sp, #16]
  42ecac:	mov	x19, x1
  42ecb0:	stp	x23, x24, [sp, #48]
  42ecb4:	mov	x23, x2
  42ecb8:	mov	x24, x3
  42ecbc:	cbnz	w0, 42ed30 <nftw@plt+0x2c040>
  42ecc0:	ldr	x20, [x21, #64]
  42ecc4:	add	x0, x21, #0x40
  42ecc8:	cbz	x20, 42ed04 <nftw@plt+0x2c014>
  42eccc:	ldp	x1, x2, [x20]
  42ecd0:	cmp	x2, x19
  42ecd4:	b.cc	42edb0 <nftw@plt+0x2c0c0>  // b.lo, b.ul, b.last
  42ecd8:	add	x19, x19, #0x7
  42ecdc:	str	x1, [x0]
  42ece0:	and	x19, x19, #0xfffffffffffffff8
  42ece4:	cmp	x2, x19
  42ece8:	b.ls	42ed04 <nftw@plt+0x2c014>  // b.plast
  42ecec:	sub	x2, x2, x19
  42ecf0:	cmp	x2, #0xf
  42ecf4:	b.ls	42ed04 <nftw@plt+0x2c014>  // b.plast
  42ecf8:	add	x1, x20, x19
  42ecfc:	mov	x0, x21
  42ed00:	bl	42eb68 <nftw@plt+0x2be78>
  42ed04:	ldr	w0, [x21, #8]
  42ed08:	cbz	w0, 42ed14 <nftw@plt+0x2c024>
  42ed0c:	add	x0, x21, #0x3c
  42ed10:	stlr	wzr, [x0]
  42ed14:	cbz	x20, 42ed4c <nftw@plt+0x2c05c>
  42ed18:	mov	x0, x20
  42ed1c:	ldp	x19, x20, [sp, #16]
  42ed20:	ldp	x21, x22, [sp, #32]
  42ed24:	ldp	x23, x24, [sp, #48]
  42ed28:	ldp	x29, x30, [sp], #64
  42ed2c:	ret
  42ed30:	add	x0, x21, #0x3c
  42ed34:	mov	w2, #0x1                   	// #1
  42ed38:	ldxr	w1, [x0]
  42ed3c:	stxr	w3, w2, [x0]
  42ed40:	cbnz	w3, 42ed38 <nftw@plt+0x2c048>
  42ed44:	dmb	ish
  42ed48:	cbz	w1, 42ecc0 <nftw@plt+0x2bfd0>
  42ed4c:	bl	4028d0 <getpagesize@plt>
  42ed50:	sub	x22, x19, #0x1
  42ed54:	sxtw	x2, w0
  42ed58:	add	x0, x22, w0, sxtw
  42ed5c:	neg	x22, x2
  42ed60:	mov	x5, #0x0                   	// #0
  42ed64:	and	x22, x0, x22
  42ed68:	mov	w4, #0xffffffff            	// #-1
  42ed6c:	mov	x1, x22
  42ed70:	mov	w3, #0x22                  	// #34
  42ed74:	mov	w2, #0x3                   	// #3
  42ed78:	mov	x0, #0x0                   	// #0
  42ed7c:	bl	402a20 <mmap@plt>
  42ed80:	mov	x20, x0
  42ed84:	cmn	x0, #0x1
  42ed88:	b.ne	42edbc <nftw@plt+0x2c0cc>  // b.any
  42ed8c:	cbz	x23, 42eda8 <nftw@plt+0x2c0b8>
  42ed90:	bl	402c20 <__errno_location@plt>
  42ed94:	ldr	w2, [x0]
  42ed98:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42ed9c:	mov	x0, x24
  42eda0:	add	x1, x1, #0x748
  42eda4:	blr	x23
  42eda8:	mov	x20, #0x0                   	// #0
  42edac:	b	42ed18 <nftw@plt+0x2c028>
  42edb0:	mov	x0, x20
  42edb4:	mov	x20, x1
  42edb8:	b	42ecc8 <nftw@plt+0x2bfd8>
  42edbc:	add	x19, x19, #0x7
  42edc0:	and	x19, x19, #0xfffffffffffffff8
  42edc4:	cmp	x22, x19
  42edc8:	b.ls	42ed18 <nftw@plt+0x2c028>  // b.plast
  42edcc:	add	x1, x0, x19
  42edd0:	mov	x4, x24
  42edd4:	mov	x3, x23
  42edd8:	sub	x2, x22, x19
  42eddc:	mov	x0, x21
  42ede0:	bl	42ebd8 <nftw@plt+0x2bee8>
  42ede4:	b	42ed18 <nftw@plt+0x2c028>
  42ede8:	stp	x29, x30, [sp, #-96]!
  42edec:	mov	x29, sp
  42edf0:	stp	x23, x24, [sp, #48]
  42edf4:	mov	x23, x0
  42edf8:	ldr	x0, [x4, #16]
  42edfc:	stp	x19, x20, [sp, #16]
  42ee00:	mov	x19, x4
  42ee04:	stp	x21, x22, [sp, #32]
  42ee08:	cmp	x0, x1
  42ee0c:	mov	x22, x1
  42ee10:	stp	x25, x26, [sp, #64]
  42ee14:	str	x27, [sp, #80]
  42ee18:	b.cs	42ee94 <nftw@plt+0x2c1a4>  // b.hs, b.nlast
  42ee1c:	ldr	x0, [x4, #8]
  42ee20:	mov	x24, x2
  42ee24:	mov	x25, x3
  42ee28:	add	x21, x1, x0
  42ee2c:	cbnz	x0, 42eecc <nftw@plt+0x2c1dc>
  42ee30:	lsl	x20, x21, #4
  42ee34:	mov	x3, x25
  42ee38:	mov	x2, x24
  42ee3c:	mov	x1, x20
  42ee40:	mov	x0, x23
  42ee44:	bl	42ec94 <nftw@plt+0x2bfa4>
  42ee48:	mov	x21, x0
  42ee4c:	cbz	x0, 42eeac <nftw@plt+0x2c1bc>
  42ee50:	ldr	x26, [x19]
  42ee54:	cbz	x26, 42ee84 <nftw@plt+0x2c194>
  42ee58:	ldr	x27, [x19, #8]
  42ee5c:	mov	x1, x26
  42ee60:	mov	x2, x27
  42ee64:	bl	4025d0 <memcpy@plt>
  42ee68:	ldr	x2, [x19, #16]
  42ee6c:	mov	x4, x25
  42ee70:	mov	x3, x24
  42ee74:	mov	x1, x26
  42ee78:	mov	x0, x23
  42ee7c:	add	x2, x27, x2
  42ee80:	bl	42ebd8 <nftw@plt+0x2bee8>
  42ee84:	ldr	x0, [x19, #8]
  42ee88:	str	x21, [x19]
  42ee8c:	sub	x20, x20, x0
  42ee90:	str	x20, [x19, #16]
  42ee94:	ldp	x21, x0, [x19]
  42ee98:	ldr	x1, [x19, #16]
  42ee9c:	add	x21, x21, x0
  42eea0:	add	x0, x0, x22
  42eea4:	sub	x22, x1, x22
  42eea8:	stp	x0, x22, [x19, #8]
  42eeac:	mov	x0, x21
  42eeb0:	ldp	x19, x20, [sp, #16]
  42eeb4:	ldp	x21, x22, [sp, #32]
  42eeb8:	ldp	x23, x24, [sp, #48]
  42eebc:	ldp	x25, x26, [sp, #64]
  42eec0:	ldr	x27, [sp, #80]
  42eec4:	ldp	x29, x30, [sp], #96
  42eec8:	ret
  42eecc:	bl	4028d0 <getpagesize@plt>
  42eed0:	lsl	x20, x21, #1
  42eed4:	sxtw	x1, w0
  42eed8:	cmp	x21, w0, sxtw
  42eedc:	b.cs	42eeec <nftw@plt+0x2c1fc>  // b.hs, b.nlast
  42eee0:	cmp	x1, x20
  42eee4:	csel	x20, x1, x20, ls  // ls = plast
  42eee8:	b	42ee34 <nftw@plt+0x2c144>
  42eeec:	sub	x20, x20, #0x1
  42eef0:	add	x20, x20, x1
  42eef4:	neg	x1, x1
  42eef8:	and	x20, x20, x1
  42eefc:	b	42ee34 <nftw@plt+0x2c144>
  42ef00:	ldp	x0, x2, [x1]
  42ef04:	add	x2, x0, x2
  42ef08:	stp	x2, xzr, [x1]
  42ef0c:	ret
  42ef10:	stp	x29, x30, [sp, #-32]!
  42ef14:	mov	x29, sp
  42ef18:	ldr	x5, [x1, #8]
  42ef1c:	str	x19, [sp, #16]
  42ef20:	mov	x19, x1
  42ef24:	add	x1, x5, #0x7
  42ef28:	and	x1, x1, #0xfffffffffffffff8
  42ef2c:	ldr	x4, [x19, #16]
  42ef30:	ldr	x6, [x19]
  42ef34:	add	x5, x5, x4
  42ef38:	mov	x4, x3
  42ef3c:	mov	x3, x2
  42ef40:	sub	x2, x5, x1
  42ef44:	add	x1, x6, x1
  42ef48:	bl	42ebd8 <nftw@plt+0x2bee8>
  42ef4c:	str	xzr, [x19, #16]
  42ef50:	ldr	x0, [x19, #8]
  42ef54:	cbnz	x0, 42ef5c <nftw@plt+0x2c26c>
  42ef58:	str	xzr, [x19]
  42ef5c:	mov	w0, #0x1                   	// #1
  42ef60:	ldr	x19, [sp, #16]
  42ef64:	ldp	x29, x30, [sp], #32
  42ef68:	ret
  42ef6c:	stp	x29, x30, [sp, #-160]!
  42ef70:	mov	x29, sp
  42ef74:	stp	x19, x20, [sp, #16]
  42ef78:	mov	x19, x0
  42ef7c:	ldr	w0, [x0, #8]
  42ef80:	stp	x21, x22, [sp, #32]
  42ef84:	mov	x21, x1
  42ef88:	mov	x22, x2
  42ef8c:	stp	x23, x24, [sp, #48]
  42ef90:	stp	x25, x26, [sp, #64]
  42ef94:	cbnz	w0, 42f000 <nftw@plt+0x2c310>
  42ef98:	ldr	w0, [x19, #56]
  42ef9c:	cbnz	w0, 42efe4 <nftw@plt+0x2c2f4>
  42efa0:	ldr	x0, [x19, #24]
  42efa4:	str	x0, [sp, #88]
  42efa8:	ldr	x0, [sp, #88]
  42efac:	cbnz	x0, 42f0f0 <nftw@plt+0x2c400>
  42efb0:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42efb4:	adrp	x24, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42efb8:	add	x25, sp, #0x54
  42efbc:	add	x23, x23, #0x7dc
  42efc0:	add	x24, x24, #0x760
  42efc4:	mov	w26, #0x0                   	// #0
  42efc8:	sub	w0, w26, #0x1
  42efcc:	cmp	w0, #0x3
  42efd0:	b.hi	42f020 <nftw@plt+0x2c330>  // b.pmore
  42efd4:	ldrb	w0, [x23, w0, uxtw]
  42efd8:	adr	x1, 42efe4 <nftw@plt+0x2c2f4>
  42efdc:	add	x0, x1, w0, sxtb #2
  42efe0:	br	x0
  42efe4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42efe8:	mov	x0, x22
  42efec:	add	x1, x1, #0x76f
  42eff0:	mov	w2, #0xffffffff            	// #-1
  42eff4:	blr	x21
  42eff8:	mov	w0, #0x0                   	// #0
  42effc:	b	42f07c <nftw@plt+0x2c38c>
  42f000:	add	x0, x19, #0x38
  42f004:	ldar	w0, [x0]
  42f008:	cbnz	w0, 42efe4 <nftw@plt+0x2c2f4>
  42f00c:	ldr	w0, [x19, #8]
  42f010:	cbz	w0, 42efa0 <nftw@plt+0x2c2b0>
  42f014:	add	x0, x19, #0x18
  42f018:	ldar	x0, [x0]
  42f01c:	b	42efa4 <nftw@plt+0x2c2b4>
  42f020:	ldr	x20, [x19]
  42f024:	cbz	x20, 42f04c <nftw@plt+0x2c35c>
  42f028:	mov	x2, x22
  42f02c:	mov	x3, x25
  42f030:	mov	x1, x21
  42f034:	mov	x0, x20
  42f038:	bl	42f230 <nftw@plt+0x2c540>
  42f03c:	mov	w2, w0
  42f040:	tbz	w0, #31, 42f0f8 <nftw@plt+0x2c408>
  42f044:	ldr	w0, [sp, #84]
  42f048:	cbz	w0, 42f06c <nftw@plt+0x2c37c>
  42f04c:	add	w26, w26, #0x1
  42f050:	cmp	w26, #0x5
  42f054:	b.ne	42efc8 <nftw@plt+0x2c2d8>  // b.any
  42f058:	ldr	x1, [x19]
  42f05c:	cbz	x1, 42f0cc <nftw@plt+0x2c3dc>
  42f060:	mov	w2, #0x2                   	// #2
  42f064:	mov	x0, x22
  42f068:	blr	x21
  42f06c:	ldr	w0, [x19, #8]
  42f070:	cbnz	w0, 42f0dc <nftw@plt+0x2c3ec>
  42f074:	mov	w1, #0x1                   	// #1
  42f078:	str	w1, [x19, #56]
  42f07c:	ldp	x19, x20, [sp, #16]
  42f080:	ldp	x21, x22, [sp, #32]
  42f084:	ldp	x23, x24, [sp, #48]
  42f088:	ldp	x25, x26, [sp, #64]
  42f08c:	ldp	x29, x30, [sp], #160
  42f090:	ret
  42f094:	bl	402780 <getpid@plt>
  42f098:	add	x20, sp, #0x60
  42f09c:	sxtw	x3, w0
  42f0a0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42f0a4:	mov	x0, x20
  42f0a8:	add	x2, x2, #0x795
  42f0ac:	mov	x1, #0x40                  	// #64
  42f0b0:	bl	402730 <snprintf@plt>
  42f0b4:	b	42f028 <nftw@plt+0x2c338>
  42f0b8:	adrp	x20, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42f0bc:	add	x20, x20, #0x74d
  42f0c0:	b	42f028 <nftw@plt+0x2c338>
  42f0c4:	mov	x20, x24
  42f0c8:	b	42f028 <nftw@plt+0x2c338>
  42f0cc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42f0d0:	mov	w2, #0x0                   	// #0
  42f0d4:	add	x1, x1, #0x7ac
  42f0d8:	b	42f064 <nftw@plt+0x2c374>
  42f0dc:	mov	w0, #0x1                   	// #1
  42f0e0:	add	x19, x19, #0x38
  42f0e4:	stlr	w0, [x19]
  42f0e8:	b	42eff8 <nftw@plt+0x2c308>
  42f0ec:	str	x1, [x19, #24]
  42f0f0:	mov	w0, #0x1                   	// #1
  42f0f4:	b	42f07c <nftw@plt+0x2c38c>
  42f0f8:	add	x5, sp, #0x58
  42f0fc:	mov	x4, x22
  42f100:	mov	x3, x21
  42f104:	mov	x1, x20
  42f108:	mov	x0, x19
  42f10c:	bl	431d48 <nftw@plt+0x2f058>
  42f110:	cbz	w0, 42f06c <nftw@plt+0x2c37c>
  42f114:	ldr	w0, [x19, #8]
  42f118:	ldr	x1, [sp, #88]
  42f11c:	cbz	w0, 42f0ec <nftw@plt+0x2c3fc>
  42f120:	add	x19, x19, #0x18
  42f124:	stlr	x1, [x19]
  42f128:	b	42f0f0 <nftw@plt+0x2c400>
  42f12c:	stp	x29, x30, [sp, #-64]!
  42f130:	mov	x29, sp
  42f134:	stp	x19, x20, [sp, #16]
  42f138:	mov	x19, x0
  42f13c:	mov	x20, x3
  42f140:	stp	x21, x22, [sp, #32]
  42f144:	mov	x22, x1
  42f148:	mov	x21, x4
  42f14c:	mov	x1, x3
  42f150:	str	x23, [sp, #48]
  42f154:	mov	x23, x2
  42f158:	mov	x2, x4
  42f15c:	bl	42ef6c <nftw@plt+0x2c27c>
  42f160:	cbz	w0, 42f19c <nftw@plt+0x2c4ac>
  42f164:	ldr	w0, [x19, #56]
  42f168:	cbnz	w0, 42f19c <nftw@plt+0x2c4ac>
  42f16c:	mov	x4, x21
  42f170:	mov	x3, x20
  42f174:	mov	x2, x23
  42f178:	mov	x1, x22
  42f17c:	mov	x0, x19
  42f180:	ldr	x5, [x19, #24]
  42f184:	ldp	x19, x20, [sp, #16]
  42f188:	mov	x16, x5
  42f18c:	ldp	x21, x22, [sp, #32]
  42f190:	ldr	x23, [sp, #48]
  42f194:	ldp	x29, x30, [sp], #64
  42f198:	br	x16
  42f19c:	mov	w0, #0x0                   	// #0
  42f1a0:	ldp	x19, x20, [sp, #16]
  42f1a4:	ldp	x21, x22, [sp, #32]
  42f1a8:	ldr	x23, [sp, #48]
  42f1ac:	ldp	x29, x30, [sp], #64
  42f1b0:	ret
  42f1b4:	stp	x29, x30, [sp, #-64]!
  42f1b8:	mov	x29, sp
  42f1bc:	stp	x19, x20, [sp, #16]
  42f1c0:	mov	x19, x0
  42f1c4:	mov	x20, x3
  42f1c8:	stp	x21, x22, [sp, #32]
  42f1cc:	mov	x22, x1
  42f1d0:	mov	x21, x4
  42f1d4:	mov	x1, x3
  42f1d8:	str	x23, [sp, #48]
  42f1dc:	mov	x23, x2
  42f1e0:	mov	x2, x4
  42f1e4:	bl	42ef6c <nftw@plt+0x2c27c>
  42f1e8:	cbz	w0, 42f214 <nftw@plt+0x2c524>
  42f1ec:	ldr	w0, [x19, #56]
  42f1f0:	cbnz	w0, 42f228 <nftw@plt+0x2c538>
  42f1f4:	ldr	x5, [x19, #40]
  42f1f8:	mov	x0, x19
  42f1fc:	mov	x4, x21
  42f200:	mov	x3, x20
  42f204:	mov	x2, x23
  42f208:	mov	x1, x22
  42f20c:	blr	x5
  42f210:	mov	w0, #0x1                   	// #1
  42f214:	ldp	x19, x20, [sp, #16]
  42f218:	ldp	x21, x22, [sp, #32]
  42f21c:	ldr	x23, [sp, #48]
  42f220:	ldp	x29, x30, [sp], #64
  42f224:	ret
  42f228:	mov	w0, #0x0                   	// #0
  42f22c:	b	42f214 <nftw@plt+0x2c524>
  42f230:	stp	x29, x30, [sp, #-64]!
  42f234:	mov	x29, sp
  42f238:	stp	x19, x20, [sp, #16]
  42f23c:	mov	x20, x3
  42f240:	stp	x21, x22, [sp, #32]
  42f244:	mov	x21, x0
  42f248:	mov	x22, x1
  42f24c:	str	x23, [sp, #48]
  42f250:	mov	x23, x2
  42f254:	cbz	x3, 42f25c <nftw@plt+0x2c56c>
  42f258:	str	wzr, [x3]
  42f25c:	mov	x0, x21
  42f260:	mov	w1, #0x80000               	// #524288
  42f264:	bl	4027d0 <open@plt>
  42f268:	mov	w19, w0
  42f26c:	tbz	w0, #31, 42f2b8 <nftw@plt+0x2c5c8>
  42f270:	bl	402c20 <__errno_location@plt>
  42f274:	ldr	w2, [x0]
  42f278:	cbz	x20, 42f2a8 <nftw@plt+0x2c5b8>
  42f27c:	cmp	w2, #0x2
  42f280:	b.ne	42f2a8 <nftw@plt+0x2c5b8>  // b.any
  42f284:	mov	w0, #0x1                   	// #1
  42f288:	str	w0, [x20]
  42f28c:	mov	w19, #0xffffffff            	// #-1
  42f290:	mov	w0, w19
  42f294:	ldp	x19, x20, [sp, #16]
  42f298:	ldp	x21, x22, [sp, #32]
  42f29c:	ldr	x23, [sp, #48]
  42f2a0:	ldp	x29, x30, [sp], #64
  42f2a4:	ret
  42f2a8:	mov	x1, x21
  42f2ac:	mov	x0, x23
  42f2b0:	blr	x22
  42f2b4:	b	42f28c <nftw@plt+0x2c59c>
  42f2b8:	mov	w2, #0x1                   	// #1
  42f2bc:	mov	w1, #0x2                   	// #2
  42f2c0:	bl	402ad0 <fcntl@plt>
  42f2c4:	b	42f290 <nftw@plt+0x2c5a0>
  42f2c8:	stp	x29, x30, [sp, #-32]!
  42f2cc:	mov	x29, sp
  42f2d0:	stp	x19, x20, [sp, #16]
  42f2d4:	mov	x19, x1
  42f2d8:	mov	x20, x2
  42f2dc:	bl	402920 <close@plt>
  42f2e0:	tbz	w0, #31, 42f30c <nftw@plt+0x2c61c>
  42f2e4:	bl	402c20 <__errno_location@plt>
  42f2e8:	ldr	w2, [x0]
  42f2ec:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42f2f0:	mov	x0, x20
  42f2f4:	add	x1, x1, #0x7e0
  42f2f8:	blr	x19
  42f2fc:	mov	w0, #0x0                   	// #0
  42f300:	ldp	x19, x20, [sp, #16]
  42f304:	ldp	x29, x30, [sp], #32
  42f308:	ret
  42f30c:	mov	w0, #0x1                   	// #1
  42f310:	b	42f300 <nftw@plt+0x2c610>
  42f314:	stp	x29, x30, [sp, #-16]!
  42f318:	mov	x0, x4
  42f31c:	mov	w2, #0xffffffff            	// #-1
  42f320:	mov	x29, sp
  42f324:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42f328:	add	x1, x1, #0x7e6
  42f32c:	blr	x3
  42f330:	mov	w0, #0x0                   	// #0
  42f334:	ldp	x29, x30, [sp], #16
  42f338:	ret
  42f33c:	mov	x16, x3
  42f340:	mov	x0, x4
  42f344:	mov	w2, #0xffffffff            	// #-1
  42f348:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42f34c:	add	x1, x1, #0x806
  42f350:	br	x16
  42f354:	ldr	x2, [x0, #8]
  42f358:	ldr	x1, [x1, #8]
  42f35c:	cmp	x2, x1
  42f360:	cset	w0, hi  // hi = pmore
  42f364:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  42f368:	ret
  42f36c:	ldr	x2, [x0]
  42f370:	ldr	x0, [x1, #8]
  42f374:	cmp	x0, x2
  42f378:	b.hi	42f390 <nftw@plt+0x2c6a0>  // b.pmore
  42f37c:	ldr	x1, [x1, #16]
  42f380:	add	x0, x0, x1
  42f384:	cmp	x0, x2
  42f388:	cset	w0, ls  // ls = plast
  42f38c:	ret
  42f390:	mov	w0, #0xffffffff            	// #-1
  42f394:	b	42f38c <nftw@plt+0x2c69c>
  42f398:	stp	x29, x30, [sp, #-192]!
  42f39c:	mov	x4, #0x0                   	// #0
  42f3a0:	mov	x29, sp
  42f3a4:	add	x6, sp, #0xa0
  42f3a8:	add	x8, sp, #0x80
  42f3ac:	stp	x19, x20, [sp, #16]
  42f3b0:	add	x20, x2, #0x1, lsl #12
  42f3b4:	add	x19, sp, #0x60
  42f3b8:	stp	x21, x22, [sp, #32]
  42f3bc:	stp	x23, x24, [sp, #48]
  42f3c0:	str	x25, [sp, #64]
  42f3c4:	stp	xzr, xzr, [sp, #96]
  42f3c8:	stp	xzr, xzr, [sp, #112]
  42f3cc:	ldrb	w7, [x0, x4]
  42f3d0:	cmp	w7, #0xf
  42f3d4:	b.ls	42f3f4 <nftw@plt+0x2c704>  // b.plast
  42f3d8:	mov	w0, #0x0                   	// #0
  42f3dc:	ldp	x19, x20, [sp, #16]
  42f3e0:	ldp	x21, x22, [sp, #32]
  42f3e4:	ldp	x23, x24, [sp, #48]
  42f3e8:	ldr	x25, [sp, #64]
  42f3ec:	ldp	x29, x30, [sp], #192
  42f3f0:	ret
  42f3f4:	sbfiz	x5, x7, #1, #32
  42f3f8:	ldrh	w7, [x19, w7, sxtw #1]
  42f3fc:	and	w2, w4, #0xffff
  42f400:	cbnz	w7, 42f560 <nftw@plt+0x2c870>
  42f404:	strh	w2, [x8, x5]
  42f408:	strh	w2, [x6, x5]
  42f40c:	ldrb	w2, [x0, x4]
  42f410:	add	x4, x4, #0x1
  42f414:	cmp	x1, x4
  42f418:	lsl	x2, x2, #1
  42f41c:	ldrh	w5, [x19, x2]
  42f420:	add	w5, w5, #0x1
  42f424:	strh	w5, [x19, x2]
  42f428:	b.ne	42f3cc <nftw@plt+0x2c6dc>  // b.any
  42f42c:	mov	x0, x3
  42f430:	mov	w1, #0x0                   	// #0
  42f434:	mov	x2, #0x800                 	// #2048
  42f438:	bl	402840 <memset@plt>
  42f43c:	add	x12, sp, #0x80
  42f440:	mov	x3, x0
  42f444:	mov	x0, #0x1                   	// #1
  42f448:	mov	w11, w0
  42f44c:	mov	w1, #0x0                   	// #0
  42f450:	ldrh	w4, [x19, x0, lsl #1]
  42f454:	cbz	w4, 42f490 <nftw@plt+0x2c7a0>
  42f458:	lsl	w5, w11, w0
  42f45c:	cmp	w5, w4
  42f460:	b.cc	42f3d8 <nftw@plt+0x2c6e8>  // b.lo, b.ul, b.last
  42f464:	ubfiz	w2, w0, #9, #7
  42f468:	sub	w9, w0, #0x1
  42f46c:	sub	w2, w2, #0x200
  42f470:	ldrh	w6, [x12, x0, lsl #1]
  42f474:	sxtw	x8, w5
  42f478:	and	w2, w2, #0xffff
  42f47c:	and	x5, x4, #0xffff
  42f480:	lsl	w9, w11, w9
  42f484:	mov	x7, #0x0                   	// #0
  42f488:	cmp	x5, x7
  42f48c:	b.hi	42f574 <nftw@plt+0x2c884>  // b.pmore
  42f490:	add	x0, x0, #0x1
  42f494:	cmp	x0, #0x9
  42f498:	b.ne	42f450 <nftw@plt+0x2c760>  // b.any
  42f49c:	add	x10, sp, #0x50
  42f4a0:	mov	x6, #0x0                   	// #0
  42f4a4:	mov	w9, #0x1                   	// #1
  42f4a8:	ldrh	w2, [x19, x0, lsl #1]
  42f4ac:	cbz	w2, 42f4cc <nftw@plt+0x2c7dc>
  42f4b0:	sub	w11, w0, #0x1
  42f4b4:	mov	w4, #0x0                   	// #0
  42f4b8:	strh	w1, [x6, x10]
  42f4bc:	mov	w7, w4
  42f4c0:	cmp	x0, w4, uxtw
  42f4c4:	b.hi	42f5e0 <nftw@plt+0x2c8f0>  // b.pmore
  42f4c8:	cbnz	w2, 42f3d8 <nftw@plt+0x2c6e8>
  42f4cc:	add	x0, x0, #0x1
  42f4d0:	add	x6, x6, #0x2
  42f4d4:	cmp	x0, #0x10
  42f4d8:	b.ne	42f4a8 <nftw@plt+0x2c7b8>  // b.any
  42f4dc:	add	x17, sp, #0x80
  42f4e0:	add	x18, sp, #0x50
  42f4e4:	mov	x11, #0x6                   	// #6
  42f4e8:	mov	x8, #0x0                   	// #0
  42f4ec:	mov	x0, #0xf                   	// #15
  42f4f0:	mov	w12, #0x1                   	// #1
  42f4f4:	ldrh	w2, [x19, x0, lsl #1]
  42f4f8:	cbz	w2, 42f548 <nftw@plt+0x2c858>
  42f4fc:	sub	w1, w0, #0x8
  42f500:	ubfiz	w15, w0, #9, #7
  42f504:	sub	w13, w15, #0x1, lsl #12
  42f508:	sub	w14, w0, #0x1
  42f50c:	ldrh	w9, [x17, x0, lsl #1]
  42f510:	lsl	w1, w12, w1
  42f514:	ldrh	w7, [x18, x11, lsl #1]
  42f518:	sub	x16, x0, #0x8
  42f51c:	and	w13, w13, #0xffff
  42f520:	and	x2, x2, #0xffff
  42f524:	sxtw	x30, w1
  42f528:	mov	w6, w1
  42f52c:	lsl	w14, w12, w14
  42f530:	mov	x1, #0x0                   	// #0
  42f534:	mov	x21, #0x0                   	// #0
  42f538:	mov	x5, #0x100                 	// #256
  42f53c:	mov	x10, #0x0                   	// #0
  42f540:	cmp	x2, x10
  42f544:	b.hi	42f62c <nftw@plt+0x2c93c>  // b.pmore
  42f548:	sub	x0, x0, #0x1
  42f54c:	sub	x11, x11, #0x1
  42f550:	cmp	x0, #0x8
  42f554:	b.ne	42f4f4 <nftw@plt+0x2c804>  // b.any
  42f558:	mov	w0, #0x1                   	// #1
  42f55c:	b	42f3dc <nftw@plt+0x2c6ec>
  42f560:	ldrh	w5, [x6, x5]
  42f564:	strh	w2, [x20, x5, lsl #1]
  42f568:	ldrb	w5, [x0, x4]
  42f56c:	strh	w2, [x6, x5, lsl #1]
  42f570:	b	42f40c <nftw@plt+0x2c71c>
  42f574:	tst	w6, #0xfe00
  42f578:	b.ne	42f3d8 <nftw@plt+0x2c6e8>  // b.any
  42f57c:	orr	w10, w2, w6
  42f580:	mov	w4, w1
  42f584:	cmp	x4, #0xff
  42f588:	b.ls	42f5c4 <nftw@plt+0x2c8d4>  // b.plast
  42f58c:	add	x7, x7, #0x1
  42f590:	cmp	x7, x5
  42f594:	b.cs	42f5a0 <nftw@plt+0x2c8b0>  // b.hs, b.nlast
  42f598:	ubfiz	x6, x6, #1, #16
  42f59c:	ldrh	w6, [x20, x6]
  42f5a0:	mov	w4, w9
  42f5a4:	tst	w1, w4
  42f5a8:	b.ne	42f5d8 <nftw@plt+0x2c8e8>  // b.any
  42f5ac:	cbz	w4, 42f5bc <nftw@plt+0x2c8cc>
  42f5b0:	sub	w10, w4, #0x1
  42f5b4:	and	w1, w10, w1
  42f5b8:	add	w4, w4, w1
  42f5bc:	mov	w1, w4
  42f5c0:	b	42f488 <nftw@plt+0x2c798>
  42f5c4:	ldrh	w13, [x3, x4, lsl #1]
  42f5c8:	cbnz	w13, 42f3d8 <nftw@plt+0x2c6e8>
  42f5cc:	strh	w10, [x3, x4, lsl #1]
  42f5d0:	add	x4, x4, x8
  42f5d4:	b	42f584 <nftw@plt+0x2c894>
  42f5d8:	lsr	w4, w4, #1
  42f5dc:	b	42f5a4 <nftw@plt+0x2c8b4>
  42f5e0:	lsr	w5, w2, w4
  42f5e4:	tbz	w5, #0, 42f614 <nftw@plt+0x2c924>
  42f5e8:	sub	w5, w11, w4
  42f5ec:	sub	x7, x0, x7
  42f5f0:	mov	w8, #0x0                   	// #0
  42f5f4:	lsl	w5, w9, w5
  42f5f8:	cmp	x7, w8, uxtw
  42f5fc:	b.ls	42f60c <nftw@plt+0x2c91c>  // b.plast
  42f600:	tst	w1, w5
  42f604:	b.ne	42f61c <nftw@plt+0x2c92c>  // b.any
  42f608:	add	w1, w1, w5
  42f60c:	lsl	w5, w9, w4
  42f610:	bic	w2, w2, w5
  42f614:	add	w4, w4, #0x1
  42f618:	b	42f4bc <nftw@plt+0x2c7cc>
  42f61c:	bic	w1, w1, w5
  42f620:	add	w8, w8, #0x1
  42f624:	lsr	w5, w5, #1
  42f628:	b	42f5f8 <nftw@plt+0x2c908>
  42f62c:	and	x22, x7, #0xff
  42f630:	cmp	x5, w7, uxtb
  42f634:	b.eq	42f6d0 <nftw@plt+0x2c9e0>  // b.none
  42f638:	ldrh	w1, [x3, x22, lsl #1]
  42f63c:	lsl	x4, x22, #1
  42f640:	cbnz	w1, 42f6b8 <nftw@plt+0x2c9c8>
  42f644:	tst	x8, #0xfffffffffffffe00
  42f648:	b.ne	42f3d8 <nftw@plt+0x2c6e8>  // b.any
  42f64c:	add	w1, w15, w8
  42f650:	mov	x21, x8
  42f654:	add	x8, x30, x8
  42f658:	strh	w1, [x3, x4]
  42f65c:	mov	x1, x16
  42f660:	add	x5, x3, x21, lsl #1
  42f664:	orr	w24, w13, w9
  42f668:	lsr	w4, w7, #8
  42f66c:	add	x5, x5, #0x200
  42f670:	lsl	w23, w12, w1
  42f674:	cmp	x23, x4
  42f678:	b.hi	42f6d8 <nftw@plt+0x2c9e8>  // b.pmore
  42f67c:	add	x10, x10, #0x1
  42f680:	cmp	x10, x2
  42f684:	b.cs	42f690 <nftw@plt+0x2c9a0>  // b.hs, b.nlast
  42f688:	ubfiz	x9, x9, #1, #16
  42f68c:	ldrh	w9, [x20, x9]
  42f690:	mov	w4, w14
  42f694:	tst	w7, w4
  42f698:	b.ne	42f6ec <nftw@plt+0x2c9fc>  // b.any
  42f69c:	cbz	w4, 42f6ac <nftw@plt+0x2c9bc>
  42f6a0:	sub	w5, w4, #0x1
  42f6a4:	and	w7, w5, w7
  42f6a8:	add	w4, w4, w7
  42f6ac:	mov	x5, x22
  42f6b0:	mov	w7, w4
  42f6b4:	b	42f540 <nftw@plt+0x2c850>
  42f6b8:	tbz	w1, #12, 42f3d8 <nftw@plt+0x2c6e8>
  42f6bc:	and	x21, x1, #0x1ff
  42f6c0:	ubfx	x1, x1, #9, #3
  42f6c4:	cmp	x1, x16
  42f6c8:	b.cs	42f660 <nftw@plt+0x2c970>  // b.hs, b.nlast
  42f6cc:	b	42f3d8 <nftw@plt+0x2c6e8>
  42f6d0:	mov	x22, x5
  42f6d4:	b	42f660 <nftw@plt+0x2c970>
  42f6d8:	ldrh	w25, [x5, x4, lsl #1]
  42f6dc:	cbnz	w25, 42f3d8 <nftw@plt+0x2c6e8>
  42f6e0:	strh	w24, [x5, x4, lsl #1]
  42f6e4:	add	x4, x4, x6
  42f6e8:	b	42f674 <nftw@plt+0x2c984>
  42f6ec:	lsr	w4, w4, #1
  42f6f0:	b	42f694 <nftw@plt+0x2c9a4>
  42f6f4:	ldr	w4, [x3]
  42f6f8:	mov	x6, x1
  42f6fc:	cmp	w4, #0xe
  42f700:	b.hi	42f738 <nftw@plt+0x2ca48>  // b.pmore
  42f704:	ldr	x1, [x0]
  42f708:	ldr	x7, [x2]
  42f70c:	sub	x6, x6, x1
  42f710:	cmp	x6, #0x3
  42f714:	b.le	42f740 <nftw@plt+0x2ca50>
  42f718:	ldr	w5, [x1], #4
  42f71c:	lsl	x5, x5, x4
  42f720:	orr	x5, x5, x7
  42f724:	prfm	pldl1strm, [x1]
  42f728:	add	w4, w4, #0x20
  42f72c:	str	x1, [x0]
  42f730:	str	x5, [x2]
  42f734:	str	w4, [x3]
  42f738:	mov	w0, #0x1                   	// #1
  42f73c:	ret
  42f740:	mov	w0, #0x0                   	// #0
  42f744:	b	42f73c <nftw@plt+0x2ca4c>
  42f748:	stp	x29, x30, [sp, #-80]!
  42f74c:	mov	x29, sp
  42f750:	str	x1, [sp, #72]
  42f754:	ldr	w1, [x0, #8]
  42f758:	stp	x19, x20, [sp, #16]
  42f75c:	mov	x20, x2
  42f760:	stp	x21, x22, [sp, #32]
  42f764:	mov	x21, x4
  42f768:	str	x23, [sp, #48]
  42f76c:	cbnz	w1, 42f7d0 <nftw@plt+0x2cae0>
  42f770:	ldr	x19, [x0, #48]
  42f774:	adrp	x22, 42f000 <nftw@plt+0x2c310>
  42f778:	add	x23, sp, #0x48
  42f77c:	add	x22, x22, #0x36c
  42f780:	cbnz	x19, 42f7b0 <nftw@plt+0x2cac0>
  42f784:	mov	x4, #0x0                   	// #0
  42f788:	mov	x3, #0x0                   	// #0
  42f78c:	mov	x2, #0x0                   	// #0
  42f790:	ldr	x1, [sp, #72]
  42f794:	mov	x0, x21
  42f798:	blr	x20
  42f79c:	ldp	x19, x20, [sp, #16]
  42f7a0:	ldp	x21, x22, [sp, #32]
  42f7a4:	ldr	x23, [sp, #48]
  42f7a8:	ldp	x29, x30, [sp], #80
  42f7ac:	ret
  42f7b0:	ldp	x1, x2, [x19, #8]
  42f7b4:	mov	x4, x22
  42f7b8:	mov	x0, x23
  42f7bc:	mov	x3, #0x18                  	// #24
  42f7c0:	bl	402880 <bsearch@plt>
  42f7c4:	cbnz	x0, 42f800 <nftw@plt+0x2cb10>
  42f7c8:	ldr	x19, [x19]
  42f7cc:	b	42f780 <nftw@plt+0x2ca90>
  42f7d0:	adrp	x22, 42f000 <nftw@plt+0x2c310>
  42f7d4:	add	x19, x0, #0x30
  42f7d8:	add	x22, x22, #0x36c
  42f7dc:	add	x23, sp, #0x48
  42f7e0:	ldar	x19, [x19]
  42f7e4:	cbz	x19, 42f784 <nftw@plt+0x2ca94>
  42f7e8:	ldp	x1, x2, [x19, #8]
  42f7ec:	mov	x4, x22
  42f7f0:	mov	x0, x23
  42f7f4:	mov	x3, #0x18                  	// #24
  42f7f8:	bl	402880 <bsearch@plt>
  42f7fc:	cbz	x0, 42f7e0 <nftw@plt+0x2caf0>
  42f800:	ldp	x2, x3, [x0]
  42f804:	ldr	x4, [x0, #16]
  42f808:	b	42f790 <nftw@plt+0x2caa0>
  42f80c:	stp	x29, x30, [sp, #-144]!
  42f810:	mov	x29, sp
  42f814:	stp	x27, x28, [sp, #80]
  42f818:	add	x28, x2, x4
  42f81c:	mov	x27, x5
  42f820:	stp	x19, x20, [sp, #16]
  42f824:	mov	x20, x6
  42f828:	stp	x21, x22, [sp, #32]
  42f82c:	mov	x22, x2
  42f830:	mov	x21, x7
  42f834:	stp	x23, x24, [sp, #48]
  42f838:	mov	x23, x0
  42f83c:	mov	x0, x5
  42f840:	stp	x25, x26, [sp, #64]
  42f844:	mov	x25, x4
  42f848:	stp	x3, x1, [sp, #112]
  42f84c:	bl	402630 <strlen@plt>
  42f850:	mov	x24, x0
  42f854:	add	x0, x28, x0
  42f858:	mov	x3, x21
  42f85c:	add	x26, x0, #0x1
  42f860:	mov	x2, x20
  42f864:	mov	x1, x26
  42f868:	str	x0, [sp, #104]
  42f86c:	mov	x0, x23
  42f870:	bl	42ec94 <nftw@plt+0x2bfa4>
  42f874:	cbz	x0, 42f904 <nftw@plt+0x2cc14>
  42f878:	ldr	x8, [sp, #120]
  42f87c:	mov	x19, x0
  42f880:	mov	x2, x22
  42f884:	mov	x1, x8
  42f888:	bl	4025d0 <memcpy@plt>
  42f88c:	ldr	x1, [sp, #112]
  42f890:	mov	x2, x25
  42f894:	add	x0, x19, x22
  42f898:	bl	4025d0 <memcpy@plt>
  42f89c:	mov	x2, x24
  42f8a0:	mov	x1, x27
  42f8a4:	add	x0, x19, x28
  42f8a8:	bl	4025d0 <memcpy@plt>
  42f8ac:	ldr	x0, [sp, #104]
  42f8b0:	add	x3, sp, #0x8c
  42f8b4:	mov	x2, x21
  42f8b8:	mov	x1, x20
  42f8bc:	strb	wzr, [x19, x0]
  42f8c0:	mov	x0, x19
  42f8c4:	bl	42f230 <nftw@plt+0x2c540>
  42f8c8:	mov	w22, w0
  42f8cc:	mov	x4, x21
  42f8d0:	mov	x3, x20
  42f8d4:	mov	x2, x26
  42f8d8:	mov	x1, x19
  42f8dc:	mov	x0, x23
  42f8e0:	bl	42ebd8 <nftw@plt+0x2bee8>
  42f8e4:	mov	w0, w22
  42f8e8:	ldp	x19, x20, [sp, #16]
  42f8ec:	ldp	x21, x22, [sp, #32]
  42f8f0:	ldp	x23, x24, [sp, #48]
  42f8f4:	ldp	x25, x26, [sp, #64]
  42f8f8:	ldp	x27, x28, [sp, #80]
  42f8fc:	ldp	x29, x30, [sp], #144
  42f900:	ret
  42f904:	mov	w22, #0xffffffff            	// #-1
  42f908:	b	42f8e4 <nftw@plt+0x2cbf4>
  42f90c:	stp	x29, x30, [sp, #-256]!
  42f910:	mov	x29, sp
  42f914:	stp	x21, x22, [sp, #32]
  42f918:	mov	x21, x3
  42f91c:	mov	x22, x4
  42f920:	stp	x25, x26, [sp, #64]
  42f924:	mov	x25, x1
  42f928:	mov	x26, x2
  42f92c:	stp	x19, x20, [sp, #16]
  42f930:	mov	x20, x0
  42f934:	add	x0, sp, #0x80
  42f938:	stp	x23, x24, [sp, #48]
  42f93c:	mov	x24, #0x0                   	// #0
  42f940:	mov	x23, #0x0                   	// #0
  42f944:	stp	x27, x28, [sp, #80]
  42f948:	str	x0, [sp, #112]
  42f94c:	ldr	x1, [sp, #112]
  42f950:	mov	x0, x25
  42f954:	bl	44da28 <_obstack_memory_used@@Base+0x109d0>
  42f958:	tbnz	w0, #31, 42f9b8 <nftw@plt+0x2ccc8>
  42f95c:	ldr	w0, [sp, #144]
  42f960:	and	w0, w0, #0xf000
  42f964:	cmp	w0, #0xa, lsl #12
  42f968:	b.ne	42f9b8 <nftw@plt+0x2ccc8>  // b.any
  42f96c:	mov	x27, #0x80                  	// #128
  42f970:	mov	x3, x22
  42f974:	mov	x2, x21
  42f978:	mov	x1, x27
  42f97c:	mov	x0, x20
  42f980:	bl	42ec94 <nftw@plt+0x2bfa4>
  42f984:	mov	x28, x0
  42f988:	cbz	x0, 42f9b8 <nftw@plt+0x2ccc8>
  42f98c:	mov	x1, x0
  42f990:	mov	x2, x27
  42f994:	mov	x0, x25
  42f998:	bl	4026c0 <readlink@plt>
  42f99c:	tbz	x0, #63, 42faa4 <nftw@plt+0x2cdb4>
  42f9a0:	mov	x4, x22
  42f9a4:	mov	x3, x21
  42f9a8:	mov	x2, x27
  42f9ac:	mov	x1, x28
  42f9b0:	mov	x0, x20
  42f9b4:	bl	42ebd8 <nftw@plt+0x2bee8>
  42f9b8:	mov	x0, x25
  42f9bc:	mov	w1, #0x2f                  	// #47
  42f9c0:	bl	402930 <strrchr@plt>
  42f9c4:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0xffa8>
  42f9c8:	cbz	x0, 42fbb4 <nftw@plt+0x2cec4>
  42f9cc:	add	x0, x0, #0x1
  42f9d0:	sub	x27, x0, x25
  42f9d4:	mov	x7, x22
  42f9d8:	mov	x6, x21
  42f9dc:	mov	x5, x26
  42f9e0:	add	x3, x3, #0xe54
  42f9e4:	mov	x2, x27
  42f9e8:	mov	x1, x25
  42f9ec:	mov	x0, x20
  42f9f0:	mov	x4, #0x0                   	// #0
  42f9f4:	bl	42f80c <nftw@plt+0x2cb1c>
  42f9f8:	mov	w19, w0
  42f9fc:	tbz	w0, #31, 42fa60 <nftw@plt+0x2cd70>
  42fa00:	mov	x7, x22
  42fa04:	mov	x6, x21
  42fa08:	mov	x5, x26
  42fa0c:	mov	x2, x27
  42fa10:	mov	x1, x25
  42fa14:	mov	x0, x20
  42fa18:	mov	x4, #0x7                   	// #7
  42fa1c:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42fa20:	add	x3, x3, #0x828
  42fa24:	bl	42f80c <nftw@plt+0x2cb1c>
  42fa28:	mov	w19, w0
  42fa2c:	tbz	w0, #31, 42fa60 <nftw@plt+0x2cd70>
  42fa30:	mov	x7, x22
  42fa34:	mov	x6, x21
  42fa38:	mov	x5, x26
  42fa3c:	mov	x4, x27
  42fa40:	mov	x3, x25
  42fa44:	mov	x0, x20
  42fa48:	mov	x2, #0xf                   	// #15
  42fa4c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42fa50:	add	x1, x1, #0x830
  42fa54:	bl	42f80c <nftw@plt+0x2cb1c>
  42fa58:	cmp	w0, #0x0
  42fa5c:	csinv	w19, w0, wzr, ge  // ge = tcont
  42fa60:	cmp	x23, #0x0
  42fa64:	ccmp	x24, #0x0, #0x4, ne  // ne = any
  42fa68:	b.eq	42fa84 <nftw@plt+0x2cd94>  // b.none
  42fa6c:	mov	x4, x22
  42fa70:	mov	x3, x21
  42fa74:	mov	x2, x24
  42fa78:	mov	x1, x23
  42fa7c:	mov	x0, x20
  42fa80:	bl	42ebd8 <nftw@plt+0x2bee8>
  42fa84:	mov	w0, w19
  42fa88:	ldp	x19, x20, [sp, #16]
  42fa8c:	ldp	x21, x22, [sp, #32]
  42fa90:	ldp	x23, x24, [sp, #48]
  42fa94:	ldp	x25, x26, [sp, #64]
  42fa98:	ldp	x27, x28, [sp, #80]
  42fa9c:	ldp	x29, x30, [sp], #256
  42faa0:	ret
  42faa4:	sub	x1, x27, #0x1
  42faa8:	cmp	x1, x0
  42faac:	b.ls	42faec <nftw@plt+0x2cdfc>  // b.plast
  42fab0:	strb	wzr, [x28, x0]
  42fab4:	ldrb	w0, [x28]
  42fab8:	cmp	w0, #0x2f
  42fabc:	b.ne	42fb0c <nftw@plt+0x2ce1c>  // b.any
  42fac0:	cbz	x23, 42fadc <nftw@plt+0x2cdec>
  42fac4:	mov	x4, x22
  42fac8:	mov	x3, x21
  42facc:	mov	x2, x24
  42fad0:	mov	x1, x23
  42fad4:	mov	x0, x20
  42fad8:	bl	42ebd8 <nftw@plt+0x2bee8>
  42fadc:	mov	x24, x27
  42fae0:	mov	x23, x28
  42fae4:	mov	x25, x28
  42fae8:	b	42f94c <nftw@plt+0x2cc5c>
  42faec:	mov	x2, x27
  42faf0:	mov	x4, x22
  42faf4:	mov	x3, x21
  42faf8:	mov	x1, x28
  42fafc:	mov	x0, x20
  42fb00:	lsl	x27, x27, #1
  42fb04:	bl	42ebd8 <nftw@plt+0x2bee8>
  42fb08:	b	42f970 <nftw@plt+0x2cc80>
  42fb0c:	mov	x0, x25
  42fb10:	mov	w1, #0x2f                  	// #47
  42fb14:	bl	402930 <strrchr@plt>
  42fb18:	cbz	x0, 42fac0 <nftw@plt+0x2cdd0>
  42fb1c:	add	x0, x0, #0x1
  42fb20:	sub	x19, x0, x25
  42fb24:	mov	x0, x28
  42fb28:	bl	402630 <strlen@plt>
  42fb2c:	add	x1, x19, #0x1
  42fb30:	mov	x3, x22
  42fb34:	add	x0, x1, x0
  42fb38:	mov	x2, x21
  42fb3c:	mov	x1, x0
  42fb40:	str	x0, [sp, #104]
  42fb44:	mov	x0, x20
  42fb48:	bl	42ec94 <nftw@plt+0x2bfa4>
  42fb4c:	str	x0, [sp, #120]
  42fb50:	cbz	x0, 42fbc0 <nftw@plt+0x2ced0>
  42fb54:	mov	x2, x19
  42fb58:	mov	x1, x25
  42fb5c:	bl	4025d0 <memcpy@plt>
  42fb60:	mov	x0, x28
  42fb64:	bl	402630 <strlen@plt>
  42fb68:	mov	x2, x0
  42fb6c:	ldr	x7, [sp, #120]
  42fb70:	mov	x1, x28
  42fb74:	add	x19, x7, x19
  42fb78:	mov	x0, x19
  42fb7c:	bl	4025d0 <memcpy@plt>
  42fb80:	mov	x0, x28
  42fb84:	bl	402630 <strlen@plt>
  42fb88:	strb	wzr, [x19, x0]
  42fb8c:	mov	x2, x27
  42fb90:	mov	x1, x28
  42fb94:	mov	x4, x22
  42fb98:	mov	x3, x21
  42fb9c:	mov	x0, x20
  42fba0:	bl	42ebd8 <nftw@plt+0x2bee8>
  42fba4:	ldr	x7, [sp, #120]
  42fba8:	ldr	x27, [sp, #104]
  42fbac:	mov	x28, x7
  42fbb0:	b	42fac0 <nftw@plt+0x2cdd0>
  42fbb4:	add	x25, x3, #0xe54
  42fbb8:	mov	x27, #0x0                   	// #0
  42fbbc:	b	42f9d4 <nftw@plt+0x2cce4>
  42fbc0:	mov	w19, #0xffffffff            	// #-1
  42fbc4:	b	42fa60 <nftw@plt+0x2cd70>
  42fbc8:	stp	x29, x30, [sp, #-240]!
  42fbcc:	mov	x29, sp
  42fbd0:	stp	x21, x22, [sp, #32]
  42fbd4:	add	x21, x0, x1
  42fbd8:	mov	x22, x2
  42fbdc:	stp	x0, x1, [sp, #128]
  42fbe0:	str	x0, [sp, #200]
  42fbe4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  42fbe8:	add	x0, x0, #0xa34
  42fbec:	stp	x19, x20, [sp, #16]
  42fbf0:	mov	x19, x3
  42fbf4:	mov	x20, x3
  42fbf8:	stp	x25, x26, [sp, #64]
  42fbfc:	mov	x26, x4
  42fc00:	stp	x27, x28, [sp, #80]
  42fc04:	add	x27, x3, x4
  42fc08:	str	x0, [sp, #144]
  42fc0c:	add	x0, x0, #0x200
  42fc10:	stp	x23, x24, [sp, #48]
  42fc14:	str	x0, [sp, #152]
  42fc18:	add	x0, sp, #0xd8
  42fc1c:	str	x0, [sp, #96]
  42fc20:	ldr	x0, [sp, #200]
  42fc24:	sub	x1, x21, x0
  42fc28:	cmp	x1, #0x4
  42fc2c:	b.gt	42fc58 <nftw@plt+0x2cf68>
  42fc30:	cmp	x27, x20
  42fc34:	b.eq	43065c <nftw@plt+0x2d96c>  // b.none
  42fc38:	mov	w0, #0x0                   	// #0
  42fc3c:	ldp	x19, x20, [sp, #16]
  42fc40:	ldp	x21, x22, [sp, #32]
  42fc44:	ldp	x23, x24, [sp, #48]
  42fc48:	ldp	x25, x26, [sp, #64]
  42fc4c:	ldp	x27, x28, [sp, #80]
  42fc50:	ldp	x29, x30, [sp], #240
  42fc54:	ret
  42fc58:	ldrb	w1, [x0]
  42fc5c:	and	w2, w1, #0xf
  42fc60:	cmp	w2, #0x8
  42fc64:	b.ne	42fc38 <nftw@plt+0x2cf48>  // b.any
  42fc68:	cmp	w1, #0x7f
  42fc6c:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  42fc70:	ldrb	w2, [x0, #1]
  42fc74:	ldrh	w1, [x0]
  42fc78:	rev16	w1, w1
  42fc7c:	tbnz	w2, #5, 42fc38 <nftw@plt+0x2cf48>
  42fc80:	and	x1, x1, #0xffff
  42fc84:	mov	x3, #0x1f                  	// #31
  42fc88:	udiv	x2, x1, x3
  42fc8c:	msub	x1, x2, x3, x1
  42fc90:	cbnz	x1, 42fc38 <nftw@plt+0x2cf48>
  42fc94:	add	x0, x0, #0x2
  42fc98:	str	wzr, [sp, #196]
  42fc9c:	stp	x0, xzr, [sp, #200]
  42fca0:	ldr	x0, [sp, #200]
  42fca4:	tst	x0, #0x3
  42fca8:	b.ne	42fdb8 <nftw@plt+0x2d0c8>  // b.any
  42fcac:	add	x23, sp, #0xc4
  42fcb0:	add	x24, sp, #0xd0
  42fcb4:	add	x25, sp, #0xc8
  42fcb8:	mov	x3, x23
  42fcbc:	mov	x2, x24
  42fcc0:	mov	x1, x21
  42fcc4:	mov	x0, x25
  42fcc8:	bl	42f6f4 <nftw@plt+0x2ca04>
  42fccc:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  42fcd0:	ldr	x0, [sp, #208]
  42fcd4:	str	x0, [sp, #104]
  42fcd8:	ldr	w0, [sp, #104]
  42fcdc:	ubfx	w1, w0, #1, #2
  42fce0:	ldr	x0, [sp, #104]
  42fce4:	cmp	w1, #0x3
  42fce8:	lsr	x0, x0, #3
  42fcec:	str	x0, [sp, #208]
  42fcf0:	ldr	w0, [sp, #196]
  42fcf4:	sub	w0, w0, #0x3
  42fcf8:	str	w0, [sp, #196]
  42fcfc:	b.eq	42fc38 <nftw@plt+0x2cf48>  // b.none
  42fd00:	cbnz	w1, 42fe0c <nftw@plt+0x2d11c>
  42fd04:	ldr	x1, [sp, #200]
  42fd08:	mov	w2, #0x0                   	// #0
  42fd0c:	mov	x3, x1
  42fd10:	cmp	w0, #0x8
  42fd14:	sub	x1, x1, #0x1
  42fd18:	b.hi	42fddc <nftw@plt+0x2d0ec>  // b.pmore
  42fd1c:	cbz	w2, 42fd24 <nftw@plt+0x2d034>
  42fd20:	str	x3, [sp, #200]
  42fd24:	ldr	x1, [sp, #200]
  42fd28:	str	wzr, [sp, #196]
  42fd2c:	str	xzr, [sp, #208]
  42fd30:	sub	x0, x21, x1
  42fd34:	cmp	x0, #0x3
  42fd38:	b.le	42fc38 <nftw@plt+0x2cf48>
  42fd3c:	ldrb	w0, [x1]
  42fd40:	add	x1, x1, #0x4
  42fd44:	ldurb	w2, [x1, #-3]
  42fd48:	ldurb	w3, [x1, #-2]
  42fd4c:	orr	w2, w0, w2, lsl #8
  42fd50:	ldurb	w0, [x1, #-1]
  42fd54:	str	x1, [sp, #200]
  42fd58:	orr	w0, w3, w0, lsl #8
  42fd5c:	mvn	w0, w0
  42fd60:	cmp	w2, w0, uxth
  42fd64:	b.ne	42fc38 <nftw@plt+0x2cf48>  // b.any
  42fd68:	sub	x0, x21, x1
  42fd6c:	cmp	w2, w0
  42fd70:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  42fd74:	sub	x0, x27, x20
  42fd78:	cmp	w2, w0
  42fd7c:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  42fd80:	and	x23, x2, #0xffff
  42fd84:	mov	x0, x20
  42fd88:	mov	x2, x23
  42fd8c:	bl	4025d0 <memcpy@plt>
  42fd90:	ldr	x2, [sp, #200]
  42fd94:	add	x20, x20, x23
  42fd98:	add	x2, x2, x23
  42fd9c:	str	x2, [sp, #200]
  42fda0:	ldr	x0, [sp, #200]
  42fda4:	tst	x0, #0x3
  42fda8:	b.ne	42fde8 <nftw@plt+0x2d0f8>  // b.any
  42fdac:	ldr	x0, [sp, #104]
  42fdb0:	tbz	w0, #0, 42fcac <nftw@plt+0x2cfbc>
  42fdb4:	b	42fc20 <nftw@plt+0x2cf30>
  42fdb8:	ldrb	w2, [x0], #1
  42fdbc:	ldr	w1, [sp, #196]
  42fdc0:	lsl	x3, x2, x1
  42fdc4:	add	w1, w1, #0x8
  42fdc8:	ldr	x2, [sp, #208]
  42fdcc:	str	w1, [sp, #196]
  42fdd0:	orr	x2, x2, x3
  42fdd4:	stp	x0, x2, [sp, #200]
  42fdd8:	b	42fca0 <nftw@plt+0x2cfb0>
  42fddc:	sub	w0, w0, #0x8
  42fde0:	mov	w2, #0x1                   	// #1
  42fde4:	b	42fd0c <nftw@plt+0x2d01c>
  42fde8:	ldrb	w2, [x0], #1
  42fdec:	ldr	w1, [sp, #196]
  42fdf0:	lsl	x3, x2, x1
  42fdf4:	add	w1, w1, #0x8
  42fdf8:	ldr	x2, [sp, #208]
  42fdfc:	str	w1, [sp, #196]
  42fe00:	orr	x2, x2, x3
  42fe04:	stp	x0, x2, [sp, #200]
  42fe08:	b	42fda0 <nftw@plt+0x2d0b0>
  42fe0c:	cmp	w1, #0x1
  42fe10:	b.eq	4303b8 <nftw@plt+0x2d6c8>  // b.none
  42fe14:	mov	x1, x21
  42fe18:	mov	x0, x25
  42fe1c:	bl	42f6f4 <nftw@plt+0x2ca04>
  42fe20:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  42fe24:	ldr	x0, [sp, #208]
  42fe28:	and	w28, w0, #0x1f
  42fe2c:	ubfx	w1, w0, #5, #5
  42fe30:	ubfx	w8, w0, #10, #4
  42fe34:	lsr	x0, x0, #14
  42fe38:	str	x0, [sp, #208]
  42fe3c:	ldr	w0, [sp, #196]
  42fe40:	add	w1, w1, #0x1
  42fe44:	add	w28, w28, #0x101
  42fe48:	str	w1, [sp, #112]
  42fe4c:	sub	w0, w0, #0xe
  42fe50:	str	w0, [sp, #196]
  42fe54:	cmp	w28, #0x11e
  42fe58:	mov	w0, w1
  42fe5c:	add	w8, w8, #0x4
  42fe60:	ccmp	w0, #0x1e, #0x2, ls  // ls = plast
  42fe64:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  42fe68:	ldr	x0, [sp, #96]
  42fe6c:	mov	x1, x21
  42fe70:	stp	xzr, xzr, [x0]
  42fe74:	strh	wzr, [x0, #16]
  42fe78:	strb	wzr, [x0, #18]
  42fe7c:	mov	x0, x25
  42fe80:	bl	42f6f4 <nftw@plt+0x2ca04>
  42fe84:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  42fe88:	ldr	x0, [sp, #208]
  42fe8c:	cmp	w8, #0x4
  42fe90:	and	w1, w0, #0x7
  42fe94:	strb	w1, [sp, #232]
  42fe98:	ubfx	w1, w0, #3, #3
  42fe9c:	strb	w1, [sp, #233]
  42fea0:	ubfx	w1, w0, #6, #3
  42fea4:	strb	w1, [sp, #234]
  42fea8:	ubfx	w1, w0, #9, #3
  42feac:	strb	w1, [sp, #216]
  42feb0:	ldr	w1, [sp, #196]
  42feb4:	lsr	x2, x0, #12
  42feb8:	str	x2, [sp, #208]
  42febc:	sub	w3, w1, #0xc
  42fec0:	str	w3, [sp, #196]
  42fec4:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42fec8:	and	w2, w2, #0x7
  42fecc:	lsr	x0, x0, #15
  42fed0:	sub	w1, w1, #0xf
  42fed4:	str	w1, [sp, #196]
  42fed8:	str	x0, [sp, #208]
  42fedc:	cmp	w8, #0x5
  42fee0:	strb	w2, [sp, #224]
  42fee4:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42fee8:	mov	x3, x23
  42feec:	mov	x2, x24
  42fef0:	mov	x1, x21
  42fef4:	mov	x0, x25
  42fef8:	bl	42f6f4 <nftw@plt+0x2ca04>
  42fefc:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  42ff00:	ldr	x0, [sp, #208]
  42ff04:	cmp	w8, #0x6
  42ff08:	and	w1, w0, #0x7
  42ff0c:	strb	w1, [sp, #223]
  42ff10:	ldr	w1, [sp, #196]
  42ff14:	lsr	x2, x0, #3
  42ff18:	str	x2, [sp, #208]
  42ff1c:	sub	w3, w1, #0x3
  42ff20:	str	w3, [sp, #196]
  42ff24:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42ff28:	and	w2, w2, #0x7
  42ff2c:	sub	w3, w1, #0x6
  42ff30:	str	w3, [sp, #196]
  42ff34:	cmp	w8, #0x7
  42ff38:	strb	w2, [sp, #225]
  42ff3c:	lsr	x2, x0, #6
  42ff40:	str	x2, [sp, #208]
  42ff44:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42ff48:	and	w2, w2, #0x7
  42ff4c:	sub	w3, w1, #0x9
  42ff50:	str	w3, [sp, #196]
  42ff54:	cmp	w8, #0x8
  42ff58:	strb	w2, [sp, #222]
  42ff5c:	lsr	x2, x0, #9
  42ff60:	str	x2, [sp, #208]
  42ff64:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42ff68:	and	w2, w2, #0x7
  42ff6c:	sub	w3, w1, #0xc
  42ff70:	str	w3, [sp, #196]
  42ff74:	cmp	w8, #0x9
  42ff78:	strb	w2, [sp, #226]
  42ff7c:	lsr	x2, x0, #12
  42ff80:	str	x2, [sp, #208]
  42ff84:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42ff88:	and	w2, w2, #0x7
  42ff8c:	lsr	x0, x0, #15
  42ff90:	sub	w1, w1, #0xf
  42ff94:	str	w1, [sp, #196]
  42ff98:	str	x0, [sp, #208]
  42ff9c:	cmp	w8, #0xa
  42ffa0:	strb	w2, [sp, #221]
  42ffa4:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42ffa8:	mov	x3, x23
  42ffac:	mov	x2, x24
  42ffb0:	mov	x1, x21
  42ffb4:	mov	x0, x25
  42ffb8:	bl	42f6f4 <nftw@plt+0x2ca04>
  42ffbc:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  42ffc0:	ldr	x0, [sp, #208]
  42ffc4:	cmp	w8, #0xb
  42ffc8:	and	w1, w0, #0x7
  42ffcc:	strb	w1, [sp, #227]
  42ffd0:	ldr	w1, [sp, #196]
  42ffd4:	lsr	x2, x0, #3
  42ffd8:	str	x2, [sp, #208]
  42ffdc:	sub	w3, w1, #0x3
  42ffe0:	str	w3, [sp, #196]
  42ffe4:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  42ffe8:	and	w2, w2, #0x7
  42ffec:	sub	w3, w1, #0x6
  42fff0:	str	w3, [sp, #196]
  42fff4:	cmp	w8, #0xc
  42fff8:	strb	w2, [sp, #220]
  42fffc:	lsr	x2, x0, #6
  430000:	str	x2, [sp, #208]
  430004:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  430008:	and	w2, w2, #0x7
  43000c:	sub	w3, w1, #0x9
  430010:	str	w3, [sp, #196]
  430014:	cmp	w8, #0xd
  430018:	strb	w2, [sp, #228]
  43001c:	lsr	x2, x0, #9
  430020:	str	x2, [sp, #208]
  430024:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  430028:	and	w2, w2, #0x7
  43002c:	sub	w3, w1, #0xc
  430030:	str	w3, [sp, #196]
  430034:	cmp	w8, #0xe
  430038:	strb	w2, [sp, #219]
  43003c:	lsr	x2, x0, #12
  430040:	str	x2, [sp, #208]
  430044:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  430048:	and	w2, w2, #0x7
  43004c:	lsr	x0, x0, #15
  430050:	sub	w1, w1, #0xf
  430054:	str	w1, [sp, #196]
  430058:	str	x0, [sp, #208]
  43005c:	cmp	w8, #0xf
  430060:	strb	w2, [sp, #229]
  430064:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  430068:	mov	x3, x23
  43006c:	mov	x2, x24
  430070:	mov	x1, x21
  430074:	mov	x0, x25
  430078:	bl	42f6f4 <nftw@plt+0x2ca04>
  43007c:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  430080:	ldr	x0, [sp, #208]
  430084:	cmp	w8, #0x10
  430088:	and	w1, w0, #0x7
  43008c:	strb	w1, [sp, #218]
  430090:	ldr	w1, [sp, #196]
  430094:	lsr	x2, x0, #3
  430098:	str	x2, [sp, #208]
  43009c:	sub	w3, w1, #0x3
  4300a0:	str	w3, [sp, #196]
  4300a4:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  4300a8:	and	w2, w2, #0x7
  4300ac:	sub	w3, w1, #0x6
  4300b0:	str	w3, [sp, #196]
  4300b4:	cmp	w8, #0x11
  4300b8:	strb	w2, [sp, #230]
  4300bc:	lsr	x2, x0, #6
  4300c0:	str	x2, [sp, #208]
  4300c4:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  4300c8:	and	w2, w2, #0x7
  4300cc:	sub	w3, w1, #0x9
  4300d0:	str	w3, [sp, #196]
  4300d4:	cmp	w8, #0x12
  4300d8:	strb	w2, [sp, #217]
  4300dc:	lsr	x2, x0, #9
  4300e0:	str	x2, [sp, #208]
  4300e4:	b.eq	430100 <nftw@plt+0x2d410>  // b.none
  4300e8:	and	w2, w2, #0x7
  4300ec:	lsr	x0, x0, #12
  4300f0:	sub	w1, w1, #0xc
  4300f4:	str	w1, [sp, #196]
  4300f8:	str	x0, [sp, #208]
  4300fc:	strb	w2, [sp, #231]
  430100:	ldr	x0, [sp, #96]
  430104:	mov	x3, x22
  430108:	mov	x2, x22
  43010c:	mov	x1, #0x13                  	// #19
  430110:	bl	42f398 <nftw@plt+0x2c6a8>
  430114:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  430118:	mov	x0, #0x1278                	// #4728
  43011c:	add	x6, x22, x0
  430120:	ldr	w0, [sp, #112]
  430124:	mov	x4, x6
  430128:	str	x0, [sp, #120]
  43012c:	add	x5, x28, x0
  430130:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430134:	add	x5, x6, x5
  430138:	add	x0, x0, #0xa2c
  43013c:	str	x0, [sp, #112]
  430140:	cmp	x5, x4
  430144:	b.hi	430208 <nftw@plt+0x2d518>  // b.pmore
  430148:	add	x0, x22, #0x1, lsl #12
  43014c:	ldrb	w0, [x0, #888]
  430150:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  430154:	mov	x3, x22
  430158:	mov	x2, x22
  43015c:	mov	x1, x28
  430160:	mov	x0, x6
  430164:	str	x6, [sp, #160]
  430168:	bl	42f398 <nftw@plt+0x2c6a8>
  43016c:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  430170:	ldr	x1, [sp, #120]
  430174:	add	x0, x22, #0x800
  430178:	ldr	x6, [sp, #160]
  43017c:	mov	x3, x0
  430180:	mov	x2, x22
  430184:	str	x0, [sp, #112]
  430188:	add	x0, x6, x28
  43018c:	bl	42f398 <nftw@plt+0x2c6a8>
  430190:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  430194:	str	x22, [sp, #120]
  430198:	mov	x3, x23
  43019c:	mov	x2, x24
  4301a0:	mov	x1, x21
  4301a4:	mov	x0, x25
  4301a8:	bl	42f6f4 <nftw@plt+0x2ca04>
  4301ac:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  4301b0:	ldr	x3, [sp, #208]
  4301b4:	ldr	x1, [sp, #120]
  4301b8:	and	x0, x3, #0xff
  4301bc:	ldrh	w2, [x1, x0, lsl #1]
  4301c0:	ldr	w0, [sp, #196]
  4301c4:	and	w4, w2, #0x1ff
  4301c8:	ubfx	x1, x2, #9, #3
  4301cc:	tbnz	w2, #12, 4303cc <nftw@plt+0x2d6dc>
  4301d0:	add	w2, w1, #0x1
  4301d4:	mov	w28, w4
  4301d8:	sub	w0, w0, #0x1
  4301dc:	lsr	x3, x3, x2
  4301e0:	str	x3, [sp, #208]
  4301e4:	sub	w0, w0, w1
  4301e8:	str	w0, [sp, #196]
  4301ec:	cmp	w28, #0xff
  4301f0:	b.hi	430408 <nftw@plt+0x2d718>  // b.pmore
  4301f4:	cmp	x27, x20
  4301f8:	b.eq	42fc38 <nftw@plt+0x2cf48>  // b.none
  4301fc:	strb	w28, [x20], #1
  430200:	prfm	pstl1keep, [x20]
  430204:	b	430198 <nftw@plt+0x2d4a8>
  430208:	mov	x3, x23
  43020c:	mov	x2, x24
  430210:	mov	x1, x21
  430214:	mov	x0, x25
  430218:	stp	x6, x5, [sp, #160]
  43021c:	str	x4, [sp, #176]
  430220:	bl	42f6f4 <nftw@plt+0x2ca04>
  430224:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  430228:	ldr	x0, [sp, #208]
  43022c:	and	x1, x0, #0xff
  430230:	ldrh	w3, [x22, x1, lsl #1]
  430234:	tbnz	w3, #12, 42fc38 <nftw@plt+0x2cf48>
  430238:	ubfx	x2, x3, #9, #3
  43023c:	tst	w3, #0x1f0
  430240:	add	w1, w2, #0x1
  430244:	ldp	x6, x5, [sp, #160]
  430248:	lsr	x0, x0, x1
  43024c:	ldr	w1, [sp, #196]
  430250:	str	x0, [sp, #208]
  430254:	sub	w1, w1, w2
  430258:	sub	w2, w1, #0x1
  43025c:	str	w2, [sp, #196]
  430260:	and	w2, w3, #0x1ff
  430264:	ldr	x4, [sp, #176]
  430268:	b.ne	430274 <nftw@plt+0x2d584>  // b.any
  43026c:	strb	w2, [x4], #1
  430270:	b	430140 <nftw@plt+0x2d450>
  430274:	cmp	w2, #0x10
  430278:	b.ne	4302e8 <nftw@plt+0x2d5f8>  // b.any
  43027c:	cmp	x6, x4
  430280:	b.eq	42fc38 <nftw@plt+0x2cf48>  // b.none
  430284:	and	w2, w0, #0x3
  430288:	sub	w1, w1, #0x3
  43028c:	lsr	x0, x0, #2
  430290:	str	w1, [sp, #196]
  430294:	str	x0, [sp, #208]
  430298:	add	w2, w2, #0x3
  43029c:	sub	x0, x5, x4
  4302a0:	cmp	w2, w0
  4302a4:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  4302a8:	ldurb	w0, [x4, #-1]
  4302ac:	cmp	w2, #0x5
  4302b0:	b.eq	4302e0 <nftw@plt+0x2d5f0>  // b.none
  4302b4:	cmp	w2, #0x6
  4302b8:	b.eq	4302dc <nftw@plt+0x2d5ec>  // b.none
  4302bc:	cmp	w2, #0x4
  4302c0:	b.ne	4302c8 <nftw@plt+0x2d5d8>  // b.any
  4302c4:	strb	w0, [x4], #1
  4302c8:	add	x4, x4, #0x3
  4302cc:	sturb	w0, [x4, #-3]
  4302d0:	sturb	w0, [x4, #-2]
  4302d4:	sturb	w0, [x4, #-1]
  4302d8:	b	430140 <nftw@plt+0x2d450>
  4302dc:	strb	w0, [x4], #1
  4302e0:	strb	w0, [x4], #1
  4302e4:	b	4302c4 <nftw@plt+0x2d5d4>
  4302e8:	cmp	w2, #0x11
  4302ec:	b.ne	430364 <nftw@plt+0x2d674>  // b.any
  4302f0:	and	w2, w0, #0x7
  4302f4:	sub	w1, w1, #0x4
  4302f8:	lsr	x0, x0, #3
  4302fc:	str	w1, [sp, #196]
  430300:	str	x0, [sp, #208]
  430304:	add	w3, w2, #0x3
  430308:	sub	x0, x5, x4
  43030c:	cmp	w3, w0
  430310:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  430314:	sub	w0, w2, #0x1
  430318:	cmp	w0, #0x6
  43031c:	b.hi	430350 <nftw@plt+0x2d660>  // b.pmore
  430320:	ldr	x1, [sp, #112]
  430324:	ldrb	w0, [x1, w0, uxtw]
  430328:	adr	x1, 430334 <nftw@plt+0x2d644>
  43032c:	add	x0, x1, w0, sxtb #2
  430330:	br	x0
  430334:	strb	wzr, [x4], #1
  430338:	strb	wzr, [x4], #1
  43033c:	strb	wzr, [x4], #1
  430340:	strb	wzr, [x4], #1
  430344:	strb	wzr, [x4], #1
  430348:	strb	wzr, [x4], #1
  43034c:	strb	wzr, [x4], #1
  430350:	mov	x0, x4
  430354:	strh	wzr, [x0], #3
  430358:	strb	wzr, [x4, #2]
  43035c:	mov	x4, x0
  430360:	b	430140 <nftw@plt+0x2d450>
  430364:	str	x6, [sp, #176]
  430368:	cmp	w2, #0x12
  43036c:	b.ne	42fc38 <nftw@plt+0x2cf48>  // b.any
  430370:	and	w2, w0, #0x7f
  430374:	sub	w1, w1, #0x8
  430378:	lsr	x0, x0, #7
  43037c:	str	x5, [sp, #168]
  430380:	str	w1, [sp, #196]
  430384:	add	w2, w2, #0xb
  430388:	str	x0, [sp, #208]
  43038c:	sub	x0, x5, x4
  430390:	cmp	w2, w0
  430394:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  430398:	mov	x0, x4
  43039c:	mov	w1, #0x0                   	// #0
  4303a0:	str	x2, [sp, #160]
  4303a4:	bl	402840 <memset@plt>
  4303a8:	ldp	x2, x5, [sp, #160]
  4303ac:	ldr	x6, [sp, #176]
  4303b0:	add	x4, x0, x2
  4303b4:	b	430140 <nftw@plt+0x2d450>
  4303b8:	ldr	x0, [sp, #144]
  4303bc:	str	x0, [sp, #112]
  4303c0:	ldr	x0, [sp, #152]
  4303c4:	str	x0, [sp, #120]
  4303c8:	b	430198 <nftw@plt+0x2d4a8>
  4303cc:	mov	w2, #0x1                   	// #1
  4303d0:	add	w4, w4, #0x100
  4303d4:	lsl	w1, w2, w1
  4303d8:	sub	w1, w1, #0x1
  4303dc:	and	x1, x1, x3, lsr #8
  4303e0:	sub	w0, w0, #0x8
  4303e4:	ldr	x2, [sp, #120]
  4303e8:	add	x1, x1, w4, sxtw
  4303ec:	ldrh	w4, [x2, x1, lsl #1]
  4303f0:	and	w28, w4, #0x1ff
  4303f4:	ubfx	x1, x4, #9, #3
  4303f8:	add	w2, w1, #0x8
  4303fc:	lsr	x3, x3, x2
  430400:	str	x3, [sp, #208]
  430404:	b	4301e4 <nftw@plt+0x2d4f4>
  430408:	cmp	w28, #0x100
  43040c:	b.eq	42fdac <nftw@plt+0x2d0bc>  // b.none
  430410:	cmp	w28, #0x108
  430414:	b.hi	4304a0 <nftw@plt+0x2d7b0>  // b.pmore
  430418:	sub	w28, w28, #0xfe
  43041c:	mov	x3, x23
  430420:	mov	x2, x24
  430424:	mov	x1, x21
  430428:	mov	x0, x25
  43042c:	bl	42f6f4 <nftw@plt+0x2ca04>
  430430:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  430434:	ldr	x2, [sp, #208]
  430438:	ldr	x1, [sp, #112]
  43043c:	and	x0, x2, #0xff
  430440:	ldrh	w5, [x1, x0, lsl #1]
  430444:	ldr	w0, [sp, #196]
  430448:	and	w3, w5, #0x1ff
  43044c:	ubfx	x1, x5, #9, #3
  430450:	tbnz	w5, #12, 430520 <nftw@plt+0x2d830>
  430454:	mov	w8, w3
  430458:	sub	w0, w0, #0x1
  43045c:	add	w3, w1, #0x1
  430460:	sub	w0, w0, w1
  430464:	lsr	x2, x2, x3
  430468:	str	x2, [sp, #208]
  43046c:	str	w0, [sp, #196]
  430470:	cbnz	w8, 430560 <nftw@plt+0x2d870>
  430474:	cmp	x19, x20
  430478:	b.eq	42fc38 <nftw@plt+0x2cf48>  // b.none
  43047c:	sub	x0, x27, x20
  430480:	cmp	w28, w0
  430484:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  430488:	ldurb	w1, [x20, #-1]
  43048c:	mov	x2, x28
  430490:	mov	x0, x20
  430494:	bl	402840 <memset@plt>
  430498:	add	x20, x20, x28
  43049c:	b	430198 <nftw@plt+0x2d4a8>
  4304a0:	cmp	w28, #0x11d
  4304a4:	b.eq	430518 <nftw@plt+0x2d828>  // b.none
  4304a8:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  4304ac:	mov	x3, x23
  4304b0:	mov	x2, x24
  4304b4:	mov	x1, x21
  4304b8:	mov	x0, x25
  4304bc:	bl	42f6f4 <nftw@plt+0x2ca04>
  4304c0:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  4304c4:	sub	w4, w28, #0x109
  4304c8:	mov	w2, #0x1                   	// #1
  4304cc:	ldr	x3, [sp, #208]
  4304d0:	lsr	w0, w4, #2
  4304d4:	add	w1, w0, #0x1
  4304d8:	and	w4, w4, #0x3
  4304dc:	lsl	w4, w4, w1
  4304e0:	add	w8, w4, #0xb
  4304e4:	lsl	w4, w2, w0
  4304e8:	mov	w0, #0xffffffff            	// #-1
  4304ec:	sub	w4, w4, #0x1
  4304f0:	lsl	w2, w0, w1
  4304f4:	ldr	w0, [sp, #196]
  4304f8:	bic	w2, w3, w2
  4304fc:	add	w4, w2, w4, lsl #3
  430500:	lsr	x3, x3, x1
  430504:	add	w28, w4, w8
  430508:	sub	w1, w0, w1
  43050c:	str	w1, [sp, #196]
  430510:	str	x3, [sp, #208]
  430514:	b	43041c <nftw@plt+0x2d72c>
  430518:	mov	x28, #0x102                 	// #258
  43051c:	b	43041c <nftw@plt+0x2d72c>
  430520:	mov	w4, #0x1                   	// #1
  430524:	add	w3, w3, #0x100
  430528:	lsl	w1, w4, w1
  43052c:	sub	w1, w1, #0x1
  430530:	and	x1, x1, x2, lsr #8
  430534:	sub	w0, w0, #0x8
  430538:	add	x1, x1, w3, sxtw
  43053c:	ldr	x3, [sp, #112]
  430540:	ldrh	w3, [x3, x1, lsl #1]
  430544:	and	w8, w3, #0x1ff
  430548:	ubfx	x5, x3, #9, #3
  43054c:	add	w1, w5, #0x8
  430550:	sub	w0, w0, w5
  430554:	lsr	x2, x2, x1
  430558:	str	x2, [sp, #208]
  43055c:	b	43046c <nftw@plt+0x2d77c>
  430560:	cmp	w8, #0x1d
  430564:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  430568:	cmp	w8, #0x3
  43056c:	b.hi	4305b0 <nftw@plt+0x2d8c0>  // b.pmore
  430570:	add	w3, w8, #0x1
  430574:	sub	x0, x20, x19
  430578:	cmp	w3, w0
  43057c:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  430580:	sub	x0, x27, x20
  430584:	cmp	w28, w0
  430588:	b.hi	42fc38 <nftw@plt+0x2cf48>  // b.pmore
  43058c:	mov	w5, w3
  430590:	cmp	w28, w3
  430594:	neg	x5, x5
  430598:	b.hi	43061c <nftw@plt+0x2d92c>  // b.pmore
  43059c:	mov	x2, x28
  4305a0:	add	x1, x20, x5
  4305a4:	mov	x0, x20
  4305a8:	bl	4025d0 <memcpy@plt>
  4305ac:	b	430498 <nftw@plt+0x2d7a8>
  4305b0:	mov	x3, x23
  4305b4:	mov	x2, x24
  4305b8:	mov	x1, x21
  4305bc:	mov	x0, x25
  4305c0:	bl	42f6f4 <nftw@plt+0x2ca04>
  4305c4:	cbz	w0, 42fc38 <nftw@plt+0x2cf48>
  4305c8:	sub	w3, w8, #0x4
  4305cc:	ldr	x5, [sp, #208]
  4305d0:	lsr	w0, w3, #1
  4305d4:	add	w2, w0, #0x1
  4305d8:	and	w3, w3, #0x1
  4305dc:	lsl	w3, w3, w2
  4305e0:	add	w1, w3, #0x5
  4305e4:	mov	w3, #0x1                   	// #1
  4305e8:	lsl	w3, w3, w0
  4305ec:	mov	w0, #0xffffffff            	// #-1
  4305f0:	sub	w3, w3, #0x1
  4305f4:	lsl	w0, w0, w2
  4305f8:	bic	w0, w5, w0
  4305fc:	lsr	x5, x5, x2
  430600:	add	w3, w0, w3, lsl #2
  430604:	ldr	w0, [sp, #196]
  430608:	add	w3, w3, w1
  43060c:	str	x5, [sp, #208]
  430610:	sub	w2, w0, w2
  430614:	str	w2, [sp, #196]
  430618:	b	430574 <nftw@plt+0x2d884>
  43061c:	cmp	w3, w28
  430620:	add	x1, x20, x5
  430624:	csel	w6, w3, w28, ls  // ls = plast
  430628:	csel	w2, w3, w28, ls  // ls = plast
  43062c:	mov	x0, x20
  430630:	stp	x5, x2, [sp, #160]
  430634:	str	w3, [sp, #176]
  430638:	str	w6, [sp, #188]
  43063c:	bl	4025d0 <memcpy@plt>
  430640:	ldp	x5, x2, [sp, #160]
  430644:	ldr	w6, [sp, #188]
  430648:	ldr	w3, [sp, #176]
  43064c:	subs	w28, w28, w6
  430650:	add	x20, x20, x2
  430654:	b.ne	43061c <nftw@plt+0x2d92c>  // b.any
  430658:	b	430198 <nftw@plt+0x2d4a8>
  43065c:	ldp	x1, x0, [sp, #128]
  430660:	mov	w8, #0x0                   	// #0
  430664:	sub	x0, x0, #0x4
  430668:	add	x0, x1, x0
  43066c:	ldrb	w1, [x0], #1
  430670:	cmp	x21, x0
  430674:	orr	w8, w1, w8, lsl #8
  430678:	b.ne	43066c <nftw@plt+0x2d97c>  // b.any
  43067c:	mov	w13, #0x0                   	// #0
  430680:	mov	w12, #0x1                   	// #1
  430684:	mov	x15, #0x15af                	// #5551
  430688:	mov	x14, #0x15b0                	// #5552
  43068c:	mov	w1, #0xfff1                	// #65521
  430690:	cmp	x26, x15
  430694:	b.hi	4306e4 <nftw@plt+0x2d9f4>  // b.pmore
  430698:	and	x14, x26, #0xfffffffffffffff0
  43069c:	lsr	x4, x26, #4
  4306a0:	add	x14, x19, x14
  4306a4:	cmp	x19, x14
  4306a8:	b.ne	4307cc <nftw@plt+0x2dadc>  // b.any
  4306ac:	mov	x0, #0xfffffffffffffff0    	// #-16
  4306b0:	mov	x3, #0x0                   	// #0
  4306b4:	madd	x26, x4, x0, x26
  4306b8:	cmp	x26, w3, uxtw
  4306bc:	b.hi	430894 <nftw@plt+0x2dba4>  // b.pmore
  4306c0:	mov	w2, #0xfff1                	// #65521
  4306c4:	udiv	w1, w13, w2
  4306c8:	udiv	w0, w12, w2
  4306cc:	msub	w1, w1, w2, w13
  4306d0:	msub	w2, w0, w2, w12
  4306d4:	add	w1, w2, w1, lsl #16
  4306d8:	cmp	w1, w8
  4306dc:	cset	w0, eq  // eq = none
  4306e0:	b	42fc3c <nftw@plt+0x2cf4c>
  4306e4:	add	x16, x19, x14
  4306e8:	ldrb	w11, [x19]
  4306ec:	add	x19, x19, #0x10
  4306f0:	ldurb	w24, [x19, #-15]
  4306f4:	ldurb	w4, [x19, #-14]
  4306f8:	add	w11, w11, w12
  4306fc:	add	w24, w24, w11
  430700:	ldurb	w10, [x19, #-12]
  430704:	add	w3, w4, w24
  430708:	ldurb	w4, [x19, #-13]
  43070c:	ldurb	w23, [x19, #-11]
  430710:	add	w11, w11, w24
  430714:	add	w25, w4, w3
  430718:	ldurb	w9, [x19, #-10]
  43071c:	add	w10, w10, w25
  430720:	ldurb	w22, [x19, #-9]
  430724:	add	w23, w23, w10
  430728:	ldurb	w7, [x19, #-8]
  43072c:	add	w9, w9, w23
  430730:	ldurb	w21, [x19, #-7]
  430734:	add	w22, w22, w9
  430738:	ldurb	w6, [x19, #-6]
  43073c:	add	w7, w7, w22
  430740:	ldurb	w20, [x19, #-5]
  430744:	add	w21, w21, w7
  430748:	ldurb	w5, [x19, #-4]
  43074c:	add	w6, w6, w21
  430750:	ldurb	w18, [x19, #-3]
  430754:	add	w20, w20, w6
  430758:	ldurb	w4, [x19, #-2]
  43075c:	add	w5, w5, w20
  430760:	add	w10, w10, w23
  430764:	add	w18, w18, w5
  430768:	add	w9, w9, w22
  43076c:	add	w0, w4, w18
  430770:	add	w4, w3, w25
  430774:	add	w4, w4, w11
  430778:	ldurb	w17, [x19, #-1]
  43077c:	add	w4, w4, w10
  430780:	add	w7, w7, w21
  430784:	add	w4, w4, w9
  430788:	add	w6, w6, w20
  43078c:	add	w2, w4, w7
  430790:	add	w5, w5, w18
  430794:	add	w2, w2, w6
  430798:	add	w4, w17, w0, lsl #1
  43079c:	add	w2, w2, w5
  4307a0:	add	w12, w17, w0
  4307a4:	add	w2, w2, w4
  4307a8:	cmp	x19, x16
  4307ac:	add	w13, w13, w2
  4307b0:	b.ne	4306e8 <nftw@plt+0x2d9f8>  // b.any
  4307b4:	udiv	w0, w12, w1
  4307b8:	sub	x26, x26, x14
  4307bc:	msub	w12, w0, w1, w12
  4307c0:	udiv	w0, w13, w1
  4307c4:	msub	w13, w0, w1, w13
  4307c8:	b	430690 <nftw@plt+0x2d9a0>
  4307cc:	ldrb	w1, [x19]
  4307d0:	add	x19, x19, #0x10
  4307d4:	ldurb	w11, [x19, #-15]
  4307d8:	add	w2, w1, w12
  4307dc:	ldurb	w22, [x19, #-14]
  4307e0:	add	w11, w11, w2
  4307e4:	ldurb	w10, [x19, #-13]
  4307e8:	ldurb	w21, [x19, #-12]
  4307ec:	add	w22, w22, w11
  4307f0:	ldurb	w9, [x19, #-11]
  4307f4:	add	w10, w10, w22
  4307f8:	ldurb	w20, [x19, #-10]
  4307fc:	add	w21, w21, w10
  430800:	ldurb	w7, [x19, #-9]
  430804:	add	w9, w9, w21
  430808:	ldurb	w18, [x19, #-8]
  43080c:	add	w20, w20, w9
  430810:	ldurb	w6, [x19, #-7]
  430814:	add	w7, w7, w20
  430818:	ldurb	w17, [x19, #-6]
  43081c:	add	w18, w18, w7
  430820:	add	w1, w2, w13
  430824:	ldurb	w5, [x19, #-5]
  430828:	add	w6, w6, w18
  43082c:	add	w11, w11, w22
  430830:	ldurb	w16, [x19, #-2]
  430834:	add	w17, w17, w6
  430838:	ldurb	w15, [x19, #-4]
  43083c:	add	w1, w1, w11
  430840:	ldurb	w3, [x19, #-3]
  430844:	add	w10, w10, w21
  430848:	add	w5, w5, w17
  43084c:	add	w1, w1, w10
  430850:	add	w9, w9, w20
  430854:	add	w15, w15, w5
  430858:	add	w1, w1, w9
  43085c:	add	w7, w7, w18
  430860:	add	w3, w3, w15
  430864:	add	w0, w1, w7
  430868:	add	w6, w6, w17
  43086c:	ldurb	w2, [x19, #-1]
  430870:	add	w0, w0, w6
  430874:	add	w5, w5, w15
  430878:	add	w12, w16, w3
  43087c:	add	w0, w0, w5
  430880:	add	w3, w16, w3, lsl #1
  430884:	add	w12, w2, w12
  430888:	add	w0, w0, w3
  43088c:	add	w13, w12, w0
  430890:	b	4306a4 <nftw@plt+0x2d9b4>
  430894:	ldrb	w0, [x19, x3]
  430898:	add	x3, x3, #0x1
  43089c:	add	w12, w12, w0
  4308a0:	add	w13, w13, w12
  4308a4:	b	4306b8 <nftw@plt+0x2d9c8>
  4308a8:	stp	x29, x30, [sp, #-80]!
  4308ac:	mov	x29, sp
  4308b0:	stp	x21, x22, [sp, #32]
  4308b4:	mov	x21, x1
  4308b8:	mov	x22, x7
  4308bc:	stp	x23, x24, [sp, #48]
  4308c0:	mov	x24, x2
  4308c4:	mov	x23, x6
  4308c8:	mov	x2, x4
  4308cc:	str	x25, [sp, #64]
  4308d0:	mov	x25, x3
  4308d4:	mov	x3, x5
  4308d8:	add	x5, x21, #0x4
  4308dc:	mov	x1, #0x0                   	// #0
  4308e0:	stp	x19, x20, [sp, #16]
  4308e4:	mov	x19, #0x0                   	// #0
  4308e8:	ldrb	w4, [x5, x1]
  4308ec:	add	x1, x1, #0x1
  4308f0:	cmp	x1, #0x8
  4308f4:	orr	x19, x4, x19, lsl #8
  4308f8:	b.ne	4308e8 <nftw@plt+0x2dbf8>  // b.any
  4308fc:	mov	x1, x19
  430900:	bl	42ec94 <nftw@plt+0x2bfa4>
  430904:	mov	x20, x0
  430908:	cbz	x0, 430938 <nftw@plt+0x2dc48>
  43090c:	mov	x3, x0
  430910:	mov	x4, x19
  430914:	mov	x2, x25
  430918:	sub	x1, x24, #0xc
  43091c:	add	x0, x21, #0xc
  430920:	bl	42fbc8 <nftw@plt+0x2ced8>
  430924:	cbz	w0, 430930 <nftw@plt+0x2dc40>
  430928:	str	x20, [x23]
  43092c:	str	x19, [x22]
  430930:	mov	w0, #0x1                   	// #1
  430934:	b	43093c <nftw@plt+0x2dc4c>
  430938:	mov	w0, #0x0                   	// #0
  43093c:	ldp	x19, x20, [sp, #16]
  430940:	ldp	x21, x22, [sp, #32]
  430944:	ldp	x23, x24, [sp, #48]
  430948:	ldr	x25, [sp, #64]
  43094c:	ldp	x29, x30, [sp], #80
  430950:	ret
  430954:	sub	sp, sp, #0x4a0
  430958:	stp	x29, x30, [sp, #80]
  43095c:	add	x29, sp, #0x50
  430960:	stp	x27, x28, [sp, #160]
  430964:	mov	x27, x0
  430968:	ldr	w0, [sp, #1208]
  43096c:	stp	x19, x20, [sp, #96]
  430970:	mov	x19, x4
  430974:	mov	x20, x5
  430978:	stp	x21, x22, [sp, #112]
  43097c:	stp	x23, x24, [sp, #128]
  430980:	mov	w24, w2
  430984:	stp	x25, x26, [sp, #144]
  430988:	stp	x3, x7, [sp, #240]
  43098c:	str	x6, [sp, #272]
  430990:	str	x1, [sp, #296]
  430994:	cbnz	w0, 4309a4 <nftw@plt+0x2dcb4>
  430998:	ldr	x0, [sp, #1184]
  43099c:	str	wzr, [x7]
  4309a0:	str	wzr, [x0]
  4309a4:	add	x25, sp, #0x198
  4309a8:	mov	x5, x20
  4309ac:	mov	x6, x25
  4309b0:	mov	x4, x19
  4309b4:	mov	w1, w24
  4309b8:	mov	x0, x27
  4309bc:	mov	x3, #0x40                  	// #64
  4309c0:	mov	x2, #0x0                   	// #0
  4309c4:	bl	431eb8 <nftw@plt+0x2f1c8>
  4309c8:	cbz	w0, 430a6c <nftw@plt+0x2dd7c>
  4309cc:	ldr	x0, [sp, #408]
  4309d0:	add	x1, sp, #0x200
  4309d4:	ldp	x2, x3, [x0]
  4309d8:	stp	x2, x3, [x1, #160]
  4309dc:	ldrb	w4, [x0, #6]
  4309e0:	ldp	x2, x3, [x0, #16]
  4309e4:	stp	x2, x3, [x1, #176]
  4309e8:	ldrb	w23, [x0, #4]
  4309ec:	ldp	x2, x3, [x0, #32]
  4309f0:	stp	x2, x3, [x1, #192]
  4309f4:	add	x1, sp, #0x2d0
  4309f8:	ldp	x2, x3, [x0, #48]
  4309fc:	str	w4, [sp, #184]
  430a00:	stp	x2, x3, [x1]
  430a04:	ldrb	w1, [x0, #5]
  430a08:	str	w1, [sp, #316]
  430a0c:	mov	x3, x20
  430a10:	ldrh	w1, [x0, #18]
  430a14:	mov	x2, x19
  430a18:	str	w1, [sp, #376]
  430a1c:	ldr	w1, [x0, #48]
  430a20:	ldrh	w26, [x0, #16]
  430a24:	ldrh	w28, [x0, #60]
  430a28:	ldrh	w22, [x0, #62]
  430a2c:	str	w1, [sp, #336]
  430a30:	mov	x1, x25
  430a34:	ldr	x21, [x0, #40]
  430a38:	mov	x0, x27
  430a3c:	bl	431f74 <nftw@plt+0x2f284>
  430a40:	ldr	w1, [sp, #672]
  430a44:	mov	w0, #0x457f                	// #17791
  430a48:	movk	w0, #0x464c, lsl #16
  430a4c:	ldr	w4, [sp, #184]
  430a50:	cmp	w1, w0
  430a54:	b.eq	430a78 <nftw@plt+0x2dd88>  // b.none
  430a58:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430a5c:	add	x1, x1, #0x840
  430a60:	mov	w2, #0x0                   	// #0
  430a64:	mov	x0, x20
  430a68:	blr	x19
  430a6c:	mov	w28, #0x0                   	// #0
  430a70:	mov	x22, #0x0                   	// #0
  430a74:	b	430dd4 <nftw@plt+0x2e0e4>
  430a78:	cmp	w4, #0x1
  430a7c:	b.eq	430a90 <nftw@plt+0x2dda0>  // b.none
  430a80:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430a84:	mov	w2, #0x0                   	// #0
  430a88:	add	x1, x1, #0x85b
  430a8c:	b	430a64 <nftw@plt+0x2dd74>
  430a90:	cmp	w23, #0x2
  430a94:	b.eq	430aa8 <nftw@plt+0x2ddb8>  // b.none
  430a98:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430a9c:	mov	w2, #0x0                   	// #0
  430aa0:	add	x1, x1, #0x887
  430aa4:	b	430a64 <nftw@plt+0x2dd74>
  430aa8:	ldr	w0, [sp, #316]
  430aac:	sub	w0, w0, #0x1
  430ab0:	and	w0, w0, #0xff
  430ab4:	cmp	w0, #0x1
  430ab8:	b.ls	430acc <nftw@plt+0x2dddc>  // b.plast
  430abc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430ac0:	mov	w2, #0x0                   	// #0
  430ac4:	add	x1, x1, #0x8af
  430ac8:	b	430a64 <nftw@plt+0x2dd74>
  430acc:	ldr	w0, [sp, #1200]
  430ad0:	cbz	w0, 430adc <nftw@plt+0x2ddec>
  430ad4:	cmp	w26, #0x3
  430ad8:	b.eq	431b00 <nftw@plt+0x2ee10>  // b.none
  430adc:	mov	w0, w28
  430ae0:	str	w28, [sp, #192]
  430ae4:	cmp	w0, #0x0
  430ae8:	mov	w25, #0xffff                	// #65535
  430aec:	ccmp	w22, w25, #0x4, ne  // ne = any
  430af0:	b.ne	430b70 <nftw@plt+0x2de80>  // b.any
  430af4:	cbz	x21, 430b70 <nftw@plt+0x2de80>
  430af8:	add	x23, sp, #0x360
  430afc:	mov	x5, x20
  430b00:	mov	x6, x23
  430b04:	mov	x4, x19
  430b08:	mov	x2, x21
  430b0c:	mov	w1, w24
  430b10:	mov	x0, x27
  430b14:	mov	x3, #0x8                   	// #8
  430b18:	bl	431eb8 <nftw@plt+0x2f1c8>
  430b1c:	cbz	w0, 430a6c <nftw@plt+0x2dd7c>
  430b20:	ldr	w1, [sp, #192]
  430b24:	ldr	x0, [sp, #864]
  430b28:	cbnz	w1, 430b3c <nftw@plt+0x2de4c>
  430b2c:	ldr	w1, [x0, #32]
  430b30:	cmp	w22, w25
  430b34:	str	w1, [sp, #192]
  430b38:	b.ne	430b5c <nftw@plt+0x2de6c>  // b.any
  430b3c:	ldr	w22, [x0, #40]
  430b40:	ldr	w0, [sp, #192]
  430b44:	cmp	w22, w0
  430b48:	mov	w0, #0xffff                	// #65535
  430b4c:	ccmp	w22, w0, #0x0, cs  // cs = hs, nlast
  430b50:	mov	w0, w22
  430b54:	sub	w22, w22, #0x100
  430b58:	csel	w22, w22, w0, hi  // hi = pmore
  430b5c:	mov	x3, x20
  430b60:	mov	x2, x19
  430b64:	mov	x1, x23
  430b68:	mov	x0, x27
  430b6c:	bl	431f74 <nftw@plt+0x2f284>
  430b70:	ldr	w0, [sp, #192]
  430b74:	add	x6, sp, #0x1b0
  430b78:	mov	x5, x20
  430b7c:	mov	x4, x19
  430b80:	sub	w3, w0, #0x1
  430b84:	add	x2, x21, #0x40
  430b88:	mov	w1, w24
  430b8c:	mov	x0, x27
  430b90:	lsl	x3, x3, #6
  430b94:	bl	431eb8 <nftw@plt+0x2f1c8>
  430b98:	cbz	w0, 430a6c <nftw@plt+0x2dd7c>
  430b9c:	ldr	x0, [sp, #432]
  430ba0:	sub	w22, w22, #0x1
  430ba4:	str	x0, [sp, #264]
  430ba8:	add	x6, sp, #0x1c8
  430bac:	mov	x5, x20
  430bb0:	mov	x4, x19
  430bb4:	add	x22, x0, x22, lsl #6
  430bb8:	mov	w1, w24
  430bbc:	ldr	x2, [x22, #24]
  430bc0:	ldr	x0, [x22, #32]
  430bc4:	str	x0, [sp, #320]
  430bc8:	mov	x3, x0
  430bcc:	mov	x0, x27
  430bd0:	bl	431eb8 <nftw@plt+0x2f1c8>
  430bd4:	mov	w21, w0
  430bd8:	cbz	w0, 431b08 <nftw@plt+0x2ee18>
  430bdc:	add	x3, sp, #0x360
  430be0:	mov	x2, #0x140                 	// #320
  430be4:	ldr	x0, [sp, #456]
  430be8:	mov	w1, #0x0                   	// #0
  430bec:	str	x0, [sp, #344]
  430bf0:	mov	x0, x3
  430bf4:	bl	402840 <memset@plt>
  430bf8:	mov	x3, x0
  430bfc:	mov	w0, #0x1                   	// #1
  430c00:	str	w0, [sp, #208]
  430c04:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  430c08:	add	x0, x0, #0xda0
  430c0c:	ldr	x23, [sp, #264]
  430c10:	str	x0, [sp, #352]
  430c14:	add	x0, sp, #0x270
  430c18:	mov	x22, #0x0                   	// #0
  430c1c:	mov	w26, #0x0                   	// #0
  430c20:	mov	w25, #0x0                   	// #0
  430c24:	str	wzr, [sp, #184]
  430c28:	str	wzr, [sp, #200]
  430c2c:	str	wzr, [sp, #216]
  430c30:	str	xzr, [sp, #224]
  430c34:	str	xzr, [sp, #256]
  430c38:	str	xzr, [sp, #280]
  430c3c:	str	wzr, [sp, #288]
  430c40:	str	wzr, [sp, #292]
  430c44:	str	xzr, [sp, #304]
  430c48:	str	wzr, [sp, #312]
  430c4c:	str	x0, [sp, #328]
  430c50:	add	x0, x0, #0x18
  430c54:	str	x3, [sp, #360]
  430c58:	str	x0, [sp, #368]
  430c5c:	ldr	w0, [sp, #192]
  430c60:	ldr	w1, [sp, #208]
  430c64:	cmp	w0, w1
  430c68:	b.hi	430cc8 <nftw@plt+0x2dfd8>  // b.pmore
  430c6c:	ldr	w0, [sp, #200]
  430c70:	ldr	w1, [sp, #288]
  430c74:	cmp	w0, #0x0
  430c78:	csel	w0, w0, w1, ne  // ne = any
  430c7c:	str	w0, [sp, #200]
  430c80:	cmp	w0, #0x0
  430c84:	ldr	w0, [sp, #1208]
  430c88:	eor	w0, w0, #0x1
  430c8c:	and	w0, w0, #0x1
  430c90:	csel	w0, w0, wzr, ne  // ne = any
  430c94:	cbz	w0, 43153c <nftw@plt+0x2e84c>
  430c98:	ldr	w0, [sp, #200]
  430c9c:	sub	w21, w0, #0x1
  430ca0:	ldr	x0, [sp, #264]
  430ca4:	add	x21, x0, x21, lsl #6
  430ca8:	ldr	w0, [sp, #192]
  430cac:	ldr	w23, [x21, #40]
  430cb0:	cmp	w0, w23
  430cb4:	b.hi	43110c <nftw@plt+0x2e41c>  // b.pmore
  430cb8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430cbc:	mov	w2, #0x0                   	// #0
  430cc0:	add	x1, x1, #0x931
  430cc4:	b	430d04 <nftw@plt+0x2e014>
  430cc8:	ldr	w0, [x23, #4]
  430ccc:	cmp	w0, #0x2
  430cd0:	b.eq	430e24 <nftw@plt+0x2e134>  // b.none
  430cd4:	cmp	w0, #0xb
  430cd8:	ldr	w1, [sp, #208]
  430cdc:	ldr	w0, [sp, #288]
  430ce0:	csel	w0, w0, w1, ne  // ne = any
  430ce4:	str	w0, [sp, #288]
  430ce8:	ldr	x1, [sp, #320]
  430cec:	ldr	w0, [x23]
  430cf0:	cmp	x0, x1
  430cf4:	b.cc	430e30 <nftw@plt+0x2e140>  // b.lo, b.ul, b.last
  430cf8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430cfc:	add	x1, x1, #0x8d6
  430d00:	mov	w2, #0x0                   	// #0
  430d04:	mov	w28, #0x0                   	// #0
  430d08:	mov	x0, x20
  430d0c:	blr	x19
  430d10:	mov	w7, #0x0                   	// #0
  430d14:	mov	w21, #0x1                   	// #1
  430d18:	mov	x3, x20
  430d1c:	mov	x2, x19
  430d20:	add	x1, sp, #0x1b0
  430d24:	mov	x0, x27
  430d28:	str	w7, [sp, #192]
  430d2c:	bl	431f74 <nftw@plt+0x2f284>
  430d30:	ldr	w7, [sp, #192]
  430d34:	cbz	w21, 430d54 <nftw@plt+0x2e064>
  430d38:	mov	x3, x20
  430d3c:	mov	x2, x19
  430d40:	add	x1, sp, #0x1c8
  430d44:	mov	x0, x27
  430d48:	str	w7, [sp, #192]
  430d4c:	bl	431f74 <nftw@plt+0x2f284>
  430d50:	ldr	w7, [sp, #192]
  430d54:	cbz	w7, 430d6c <nftw@plt+0x2e07c>
  430d58:	mov	x3, x20
  430d5c:	mov	x2, x19
  430d60:	add	x1, sp, #0x1e0
  430d64:	mov	x0, x27
  430d68:	bl	431f74 <nftw@plt+0x2f284>
  430d6c:	cbz	w28, 430d88 <nftw@plt+0x2e098>
  430d70:	mov	w28, #0x0                   	// #0
  430d74:	mov	x3, x20
  430d78:	mov	x2, x19
  430d7c:	add	x1, sp, #0x1f8
  430d80:	mov	x0, x27
  430d84:	bl	431f74 <nftw@plt+0x2f284>
  430d88:	cbz	w26, 430da0 <nftw@plt+0x2e0b0>
  430d8c:	mov	x3, x20
  430d90:	mov	x2, x19
  430d94:	add	x1, sp, #0x228
  430d98:	mov	x0, x27
  430d9c:	bl	431f74 <nftw@plt+0x2f284>
  430da0:	ldr	w0, [sp, #184]
  430da4:	cbz	w0, 430dbc <nftw@plt+0x2e0cc>
  430da8:	mov	x3, x20
  430dac:	mov	x2, x19
  430db0:	add	x1, sp, #0x240
  430db4:	mov	x0, x27
  430db8:	bl	431f74 <nftw@plt+0x2f284>
  430dbc:	cbz	w25, 430dd4 <nftw@plt+0x2e0e4>
  430dc0:	mov	x3, x20
  430dc4:	mov	x2, x19
  430dc8:	add	x1, sp, #0x210
  430dcc:	mov	x0, x27
  430dd0:	bl	431f74 <nftw@plt+0x2f284>
  430dd4:	cbz	w28, 430dec <nftw@plt+0x2e0fc>
  430dd8:	mov	x3, x20
  430ddc:	mov	x2, x19
  430de0:	add	x1, sp, #0x2e0
  430de4:	mov	x0, x27
  430de8:	bl	431f74 <nftw@plt+0x2f284>
  430dec:	cbz	x22, 430e04 <nftw@plt+0x2e114>
  430df0:	mov	x3, x20
  430df4:	mov	x2, x19
  430df8:	add	x1, x22, #0x18
  430dfc:	mov	x0, x27
  430e00:	bl	431f74 <nftw@plt+0x2f284>
  430e04:	cmn	w24, #0x1
  430e08:	b.eq	430e1c <nftw@plt+0x2e12c>  // b.none
  430e0c:	mov	x2, x20
  430e10:	mov	x1, x19
  430e14:	mov	w0, w24
  430e18:	bl	42f2c8 <nftw@plt+0x2c5d8>
  430e1c:	mov	w22, #0x0                   	// #0
  430e20:	b	4315a0 <nftw@plt+0x2e8b0>
  430e24:	ldr	w0, [sp, #208]
  430e28:	str	w0, [sp, #200]
  430e2c:	b	430ce8 <nftw@plt+0x2dff8>
  430e30:	ldr	x1, [sp, #344]
  430e34:	mov	x21, #0x0                   	// #0
  430e38:	add	x0, x1, x0
  430e3c:	str	x0, [sp, #232]
  430e40:	ldr	x0, [sp, #352]
  430e44:	ldr	x1, [x0, x21, lsl #3]
  430e48:	ldr	x0, [sp, #232]
  430e4c:	bl	402a00 <strcmp@plt>
  430e50:	cbnz	w0, 430ff4 <nftw@plt+0x2e304>
  430e54:	ldr	x2, [sp, #360]
  430e58:	sbfiz	x0, x21, #5, #32
  430e5c:	ldr	x1, [x23, #24]
  430e60:	str	x1, [x2, x0]
  430e64:	add	x1, sp, #0x368
  430e68:	ldr	x2, [x23, #32]
  430e6c:	str	x2, [x1, x0]
  430e70:	add	x2, sp, #0x378
  430e74:	ldr	x1, [x23, #8]
  430e78:	ubfx	w1, w1, #11, #1
  430e7c:	str	w1, [x2, x0]
  430e80:	ldr	w0, [sp, #1208]
  430e84:	ldr	x1, [sp, #1216]
  430e88:	eor	w0, w0, #0x1
  430e8c:	and	w0, w0, #0x1
  430e90:	cmp	x1, #0x0
  430e94:	csinc	w0, w0, wzr, eq  // eq = none
  430e98:	cbz	w0, 430f74 <nftw@plt+0x2e284>
  430e9c:	cbnz	w25, 430f74 <nftw@plt+0x2e284>
  430ea0:	ldr	x0, [sp, #232]
  430ea4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430ea8:	add	x1, x1, #0x8f4
  430eac:	bl	402a00 <strcmp@plt>
  430eb0:	mov	w7, w0
  430eb4:	cbnz	w0, 430f74 <nftw@plt+0x2e284>
  430eb8:	ldp	x2, x3, [x23, #24]
  430ebc:	add	x6, sp, #0x210
  430ec0:	mov	x5, x20
  430ec4:	mov	x4, x19
  430ec8:	mov	w1, w24
  430ecc:	mov	x0, x27
  430ed0:	str	w7, [sp, #380]
  430ed4:	bl	431eb8 <nftw@plt+0x2f1c8>
  430ed8:	mov	w28, w0
  430edc:	cbz	w0, 430d10 <nftw@plt+0x2e020>
  430ee0:	ldr	x21, [sp, #528]
  430ee4:	ldr	w7, [sp, #380]
  430ee8:	ldr	w0, [x21, #8]
  430eec:	cmp	w0, #0x3
  430ef0:	b.ne	430f3c <nftw@plt+0x2e24c>  // b.any
  430ef4:	ldr	w0, [x21]
  430ef8:	cmp	w0, #0x4
  430efc:	b.ne	430f3c <nftw@plt+0x2e24c>  // b.any
  430f00:	add	x0, x21, #0xc
  430f04:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430f08:	add	x1, x1, #0x907
  430f0c:	str	w7, [sp, #380]
  430f10:	bl	402a00 <strcmp@plt>
  430f14:	ldr	w7, [sp, #380]
  430f18:	cbnz	w0, 430f3c <nftw@plt+0x2e24c>
  430f1c:	ldr	w0, [x21, #4]
  430f20:	ldr	x2, [x23, #32]
  430f24:	add	w1, w0, #0x10
  430f28:	cmp	x2, x1
  430f2c:	b.hi	430f3c <nftw@plt+0x2e24c>  // b.pmore
  430f30:	add	x1, x21, #0x10
  430f34:	str	w0, [sp, #216]
  430f38:	str	x1, [sp, #256]
  430f3c:	ldr	w0, [sp, #1224]
  430f40:	cbz	w0, 430f70 <nftw@plt+0x2e280>
  430f44:	ldr	w0, [sp, #216]
  430f48:	ldr	w1, [sp, #1224]
  430f4c:	cmp	w0, w1
  430f50:	b.ne	431b24 <nftw@plt+0x2ee34>  // b.any
  430f54:	mov	x2, x0
  430f58:	str	w7, [sp, #380]
  430f5c:	ldr	x0, [sp, #256]
  430f60:	ldr	x1, [sp, #1216]
  430f64:	bl	4029c0 <memcmp@plt>
  430f68:	ldr	w7, [sp, #380]
  430f6c:	cbnz	w0, 431b24 <nftw@plt+0x2ee34>
  430f70:	mov	w25, #0x1                   	// #1
  430f74:	ldr	w0, [sp, #1208]
  430f78:	orr	w0, w26, w0
  430f7c:	cbnz	w0, 431008 <nftw@plt+0x2e318>
  430f80:	ldr	x0, [sp, #232]
  430f84:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  430f88:	add	x1, x1, #0x90b
  430f8c:	bl	402a00 <strcmp@plt>
  430f90:	cbnz	w0, 431004 <nftw@plt+0x2e314>
  430f94:	ldp	x2, x3, [x23, #24]
  430f98:	add	x6, sp, #0x228
  430f9c:	mov	x5, x20
  430fa0:	mov	x4, x19
  430fa4:	mov	w1, w24
  430fa8:	mov	x0, x27
  430fac:	bl	431eb8 <nftw@plt+0x2f1c8>
  430fb0:	mov	w7, w0
  430fb4:	cbz	w0, 431b30 <nftw@plt+0x2ee40>
  430fb8:	ldr	x26, [x23, #32]
  430fbc:	ldr	x21, [sp, #552]
  430fc0:	mov	x1, x26
  430fc4:	mov	x0, x21
  430fc8:	bl	402680 <strnlen@plt>
  430fcc:	add	x0, x0, #0x3
  430fd0:	and	x0, x0, #0xfffffffffffffffc
  430fd4:	add	x1, x0, #0x4
  430fd8:	cmp	x26, x1
  430fdc:	b.cc	430fec <nftw@plt+0x2e2fc>  // b.lo, b.ul, b.last
  430fe0:	ldr	w0, [x21, x0]
  430fe4:	str	x21, [sp, #280]
  430fe8:	str	w0, [sp, #292]
  430fec:	mov	w26, #0x1                   	// #1
  430ff0:	b	431008 <nftw@plt+0x2e318>
  430ff4:	add	x21, x21, #0x1
  430ff8:	cmp	x21, #0xa
  430ffc:	b.ne	430e40 <nftw@plt+0x2e150>  // b.any
  431000:	b	430e80 <nftw@plt+0x2e190>
  431004:	mov	w26, #0x0                   	// #0
  431008:	ldr	w0, [sp, #184]
  43100c:	cbnz	w0, 431084 <nftw@plt+0x2e394>
  431010:	ldr	x0, [sp, #232]
  431014:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  431018:	add	x1, x1, #0x91a
  43101c:	bl	402a00 <strcmp@plt>
  431020:	cbnz	w0, 431084 <nftw@plt+0x2e394>
  431024:	ldp	x2, x3, [x23, #24]
  431028:	add	x6, sp, #0x240
  43102c:	mov	x5, x20
  431030:	mov	x4, x19
  431034:	mov	w1, w24
  431038:	mov	x0, x27
  43103c:	bl	431eb8 <nftw@plt+0x2f1c8>
  431040:	mov	w7, w0
  431044:	cbz	w0, 431b34 <nftw@plt+0x2ee44>
  431048:	ldr	x0, [sp, #576]
  43104c:	str	x0, [sp, #224]
  431050:	ldr	x21, [x23, #32]
  431054:	mov	x1, x21
  431058:	bl	402680 <strnlen@plt>
  43105c:	cmp	x21, x0
  431060:	b.ls	43107c <nftw@plt+0x2e38c>  // b.plast
  431064:	ldr	x1, [sp, #224]
  431068:	add	x0, x0, #0x1
  43106c:	add	x1, x1, x0
  431070:	sub	w0, w21, w0
  431074:	str	x1, [sp, #304]
  431078:	str	w0, [sp, #312]
  43107c:	mov	w0, #0x1                   	// #1
  431080:	str	w0, [sp, #184]
  431084:	ldr	w0, [sp, #376]
  431088:	cmp	w0, #0x15
  43108c:	b.ne	4310f8 <nftw@plt+0x2e408>  // b.any
  431090:	ldr	x0, [sp, #336]
  431094:	tbnz	w0, #1, 4310f8 <nftw@plt+0x2e408>
  431098:	ldr	w21, [x23, #4]
  43109c:	cmp	w21, #0x1
  4310a0:	b.ne	4310f8 <nftw@plt+0x2e408>  // b.any
  4310a4:	ldr	x0, [sp, #232]
  4310a8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  4310ac:	add	x1, x1, #0x92c
  4310b0:	bl	402a00 <strcmp@plt>
  4310b4:	cbnz	w0, 4310f8 <nftw@plt+0x2e408>
  4310b8:	ldp	x2, x3, [x23, #24]
  4310bc:	mov	x5, x20
  4310c0:	ldr	x6, [sp, #368]
  4310c4:	mov	x4, x19
  4310c8:	mov	w1, w24
  4310cc:	mov	x0, x27
  4310d0:	bl	431eb8 <nftw@plt+0x2f1c8>
  4310d4:	mov	w7, w0
  4310d8:	cbz	w0, 431b3c <nftw@plt+0x2ee4c>
  4310dc:	ldr	x0, [x23, #16]
  4310e0:	str	x0, [sp, #624]
  4310e4:	ldr	x22, [sp, #328]
  4310e8:	ldr	x0, [sp, #648]
  4310ec:	str	x0, [sp, #632]
  4310f0:	ldr	x0, [x23, #32]
  4310f4:	str	x0, [sp, #640]
  4310f8:	ldr	w0, [sp, #208]
  4310fc:	add	x23, x23, #0x40
  431100:	add	w0, w0, #0x1
  431104:	str	w0, [sp, #208]
  431108:	b	430c5c <nftw@plt+0x2df6c>
  43110c:	ldp	x2, x3, [x21, #24]
  431110:	add	x6, sp, #0x1e0
  431114:	mov	x5, x20
  431118:	mov	x4, x19
  43111c:	mov	w1, w24
  431120:	mov	x0, x27
  431124:	bl	431eb8 <nftw@plt+0x2f1c8>
  431128:	mov	w7, w0
  43112c:	cbz	w0, 431b34 <nftw@plt+0x2ee44>
  431130:	ldr	x0, [sp, #264]
  431134:	sub	w7, w23, #0x1
  431138:	add	x6, sp, #0x1f8
  43113c:	mov	x5, x20
  431140:	mov	x4, x19
  431144:	mov	w1, w24
  431148:	add	x7, x0, x7, lsl #6
  43114c:	mov	x0, x27
  431150:	str	x7, [sp, #192]
  431154:	ldp	x2, x3, [x7, #24]
  431158:	bl	431eb8 <nftw@plt+0x2f1c8>
  43115c:	mov	w28, w0
  431160:	cbz	w0, 431b44 <nftw@plt+0x2ee54>
  431164:	mov	x3, x20
  431168:	mov	x2, x19
  43116c:	mov	x0, x27
  431170:	mov	x1, #0x18                  	// #24
  431174:	bl	42ec94 <nftw@plt+0x2bfa4>
  431178:	mov	x28, x0
  43117c:	cbz	x0, 43130c <nftw@plt+0x2e61c>
  431180:	ldr	x0, [x21, #32]
  431184:	mov	x1, #0x18                  	// #24
  431188:	ldr	x7, [sp, #192]
  43118c:	mov	x5, #0x0                   	// #0
  431190:	udiv	x0, x0, x1
  431194:	ldr	x23, [sp, #480]
  431198:	ldr	x7, [x7, #32]
  43119c:	mov	x4, x23
  4311a0:	madd	x0, x0, x1, x23
  4311a4:	ldr	x8, [sp, #504]
  4311a8:	cmp	x0, x4
  4311ac:	b.ne	431270 <nftw@plt+0x2e580>  // b.any
  4311b0:	mov	x9, #0x18                  	// #24
  4311b4:	mov	x3, x20
  4311b8:	mov	x2, x19
  4311bc:	mov	x0, x27
  4311c0:	mul	x6, x5, x9
  4311c4:	str	x8, [sp, #208]
  4311c8:	stp	x6, x5, [sp, #192]
  4311cc:	mov	x1, x6
  4311d0:	str	x7, [sp, #232]
  4311d4:	str	x4, [sp, #264]
  4311d8:	bl	42ec94 <nftw@plt+0x2bfa4>
  4311dc:	mov	x21, x0
  4311e0:	cbz	x0, 4312f4 <nftw@plt+0x2e604>
  4311e4:	ldp	x6, x5, [sp, #192]
  4311e8:	mov	x9, #0x18                  	// #24
  4311ec:	ldr	x8, [sp, #208]
  4311f0:	mov	w2, w9
  4311f4:	ldr	x7, [sp, #232]
  4311f8:	mov	w3, #0x0                   	// #0
  4311fc:	ldr	x4, [sp, #264]
  431200:	cmp	x4, x23
  431204:	b.ne	431298 <nftw@plt+0x2e5a8>  // b.any
  431208:	mov	x1, x5
  43120c:	mov	x0, x21
  431210:	mov	x2, #0x18                  	// #24
  431214:	adrp	x3, 42f000 <nftw@plt+0x2c310>
  431218:	add	x3, x3, #0x354
  43121c:	str	x5, [sp, #192]
  431220:	bl	434fc0 <nftw@plt+0x322d0>
  431224:	stp	xzr, x21, [x28]
  431228:	add	x1, sp, #0x1e0
  43122c:	ldr	x5, [sp, #192]
  431230:	str	x5, [x28, #16]
  431234:	mov	x0, x27
  431238:	mov	x3, x20
  43123c:	mov	x2, x19
  431240:	bl	431f74 <nftw@plt+0x2f284>
  431244:	ldr	x1, [sp, #248]
  431248:	mov	w0, #0x1                   	// #1
  43124c:	str	w0, [x1]
  431250:	add	x1, x27, #0x30
  431254:	ldr	w0, [x27, #8]
  431258:	cbz	w0, 43137c <nftw@plt+0x2e68c>
  43125c:	mov	x0, x1
  431260:	ldar	x2, [x0]
  431264:	cbz	x2, 43151c <nftw@plt+0x2e82c>
  431268:	mov	x0, x2
  43126c:	b	431260 <nftw@plt+0x2e570>
  431270:	ldrb	w1, [x4, #4]
  431274:	and	w1, w1, #0xf
  431278:	sub	w1, w1, #0x1
  43127c:	cmp	w1, #0x1
  431280:	b.hi	431290 <nftw@plt+0x2e5a0>  // b.pmore
  431284:	ldrh	w1, [x4, #6]
  431288:	cbz	w1, 431290 <nftw@plt+0x2e5a0>
  43128c:	add	x5, x5, #0x1
  431290:	add	x4, x4, #0x18
  431294:	b	4311a8 <nftw@plt+0x2e4b8>
  431298:	ldrb	w0, [x23, #4]
  43129c:	and	w0, w0, #0xf
  4312a0:	sub	w0, w0, #0x1
  4312a4:	cmp	w0, #0x1
  4312a8:	b.hi	431374 <nftw@plt+0x2e684>  // b.pmore
  4312ac:	ldrh	w0, [x23, #6]
  4312b0:	cbz	w0, 431374 <nftw@plt+0x2e684>
  4312b4:	ldr	w0, [x23]
  4312b8:	cmp	x7, x0
  4312bc:	b.hi	43131c <nftw@plt+0x2e62c>  // b.pmore
  4312c0:	str	x6, [sp, #192]
  4312c4:	mov	x0, x20
  4312c8:	mov	w2, #0x0                   	// #0
  4312cc:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  4312d0:	add	x1, x1, #0x95b
  4312d4:	blr	x19
  4312d8:	ldr	x6, [sp, #192]
  4312dc:	mov	x4, x20
  4312e0:	mov	x3, x19
  4312e4:	mov	x1, x21
  4312e8:	mov	x0, x27
  4312ec:	mov	x2, x6
  4312f0:	bl	42ebd8 <nftw@plt+0x2bee8>
  4312f4:	mov	x4, x20
  4312f8:	mov	x3, x19
  4312fc:	mov	x1, x28
  431300:	mov	x0, x27
  431304:	mov	x2, #0x18                  	// #24
  431308:	bl	42ebd8 <nftw@plt+0x2bee8>
  43130c:	mov	w28, #0x1                   	// #1
  431310:	mov	w7, w28
  431314:	mov	w21, w28
  431318:	b	430d18 <nftw@plt+0x2e028>
  43131c:	umull	x1, w3, w2
  431320:	add	x0, x8, x0
  431324:	add	x10, x21, x1
  431328:	str	x0, [x21, x1]
  43132c:	ldr	x1, [x23, #8]
  431330:	cbz	x22, 43135c <nftw@plt+0x2e66c>
  431334:	ldr	x0, [x22]
  431338:	cmp	x0, x1
  43133c:	b.hi	43135c <nftw@plt+0x2e66c>  // b.pmore
  431340:	ldr	x9, [x22, #16]
  431344:	add	x9, x0, x9
  431348:	cmp	x9, x1
  43134c:	b.ls	43135c <nftw@plt+0x2e66c>  // b.plast
  431350:	sub	x1, x1, x0
  431354:	ldr	x0, [x22, #8]
  431358:	ldr	x1, [x0, x1]
  43135c:	add	w3, w3, #0x1
  431360:	ldr	x0, [sp, #240]
  431364:	add	x1, x0, x1
  431368:	str	x1, [x10, #8]
  43136c:	ldr	x0, [x23, #16]
  431370:	str	x0, [x10, #16]
  431374:	add	x23, x23, #0x18
  431378:	b	431200 <nftw@plt+0x2e510>
  43137c:	ldr	x0, [x27, #48]
  431380:	cbnz	x0, 431510 <nftw@plt+0x2e820>
  431384:	str	x28, [x1]
  431388:	mov	w0, #0x1                   	// #1
  43138c:	str	w0, [sp, #192]
  431390:	mov	x3, x20
  431394:	mov	x2, x19
  431398:	add	x1, sp, #0x1b0
  43139c:	mov	x0, x27
  4313a0:	bl	431f74 <nftw@plt+0x2f284>
  4313a4:	mov	x0, x27
  4313a8:	mov	x3, x20
  4313ac:	mov	x2, x19
  4313b0:	add	x1, sp, #0x1c8
  4313b4:	bl	431f74 <nftw@plt+0x2f284>
  4313b8:	ldr	x0, [sp, #256]
  4313bc:	cbz	x0, 4315c4 <nftw@plt+0x2e8d4>
  4313c0:	ldr	w21, [sp, #216]
  4313c4:	mov	x5, #0x21                  	// #33
  4313c8:	mov	x3, x20
  4313cc:	mov	x2, x19
  4313d0:	mov	x0, x27
  4313d4:	add	x23, x5, w21, uxtw #1
  4313d8:	mov	x1, x23
  4313dc:	bl	42ec94 <nftw@plt+0x2bfa4>
  4313e0:	mov	x28, x0
  4313e4:	cbz	x0, 4315c4 <nftw@plt+0x2e8d4>
  4313e8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  4313ec:	add	x0, x0, #0x97c
  4313f0:	mov	w6, #0x2f                  	// #47
  4313f4:	ldp	x2, x3, [x0]
  4313f8:	stp	x2, x3, [x28]
  4313fc:	ldr	x1, [x0, #16]
  431400:	str	x1, [x28, #16]
  431404:	ldrb	w0, [x0, #24]
  431408:	add	x1, x28, #0x19
  43140c:	mov	x2, #0x0                   	// #0
  431410:	strb	w0, [x28, #24]
  431414:	cmp	x21, x2
  431418:	b.hi	431544 <nftw@plt+0x2e854>  // b.pmore
  43141c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  431420:	add	x0, x0, #0x996
  431424:	strb	wzr, [x1, #6]
  431428:	add	x3, sp, #0x2e0
  43142c:	ldr	w2, [x0]
  431430:	ldrh	w0, [x0, #4]
  431434:	str	w2, [x1]
  431438:	mov	x2, x20
  43143c:	strh	w0, [x1, #4]
  431440:	mov	x1, x19
  431444:	mov	x0, x28
  431448:	bl	42f230 <nftw@plt+0x2c540>
  43144c:	mov	w21, w0
  431450:	mov	x4, x20
  431454:	mov	x3, x19
  431458:	mov	x2, x23
  43145c:	mov	x1, x28
  431460:	mov	x0, x27
  431464:	bl	42ebd8 <nftw@plt+0x2bee8>
  431468:	tbnz	w21, #31, 4315c4 <nftw@plt+0x2e8d4>
  43146c:	mov	x3, x20
  431470:	mov	x2, x19
  431474:	add	x1, sp, #0x210
  431478:	mov	x0, x27
  43147c:	bl	431f74 <nftw@plt+0x2f284>
  431480:	cbz	w26, 431498 <nftw@plt+0x2e7a8>
  431484:	mov	x3, x20
  431488:	mov	x2, x19
  43148c:	add	x1, sp, #0x228
  431490:	mov	x0, x27
  431494:	bl	431f74 <nftw@plt+0x2f284>
  431498:	ldr	w0, [sp, #184]
  43149c:	cbz	w0, 4314b4 <nftw@plt+0x2e7c4>
  4314a0:	mov	x3, x20
  4314a4:	mov	x2, x19
  4314a8:	add	x1, sp, #0x240
  4314ac:	mov	x0, x27
  4314b0:	bl	431f74 <nftw@plt+0x2f284>
  4314b4:	ldp	x3, x7, [sp, #240]
  4314b8:	mov	w0, #0x1                   	// #1
  4314bc:	ldr	x6, [sp, #272]
  4314c0:	str	w0, [sp, #24]
  4314c4:	ldr	x0, [sp, #1184]
  4314c8:	str	x0, [sp]
  4314cc:	str	xzr, [sp, #8]
  4314d0:	mov	w2, w21
  4314d4:	str	wzr, [sp, #16]
  4314d8:	mov	x5, x20
  4314dc:	str	xzr, [sp, #32]
  4314e0:	mov	x4, x19
  4314e4:	str	wzr, [sp, #40]
  4314e8:	mov	x0, x27
  4314ec:	adrp	x1, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4314f0:	add	x1, x1, #0xe54
  4314f4:	bl	430954 <nftw@plt+0x2dc64>
  4314f8:	mov	w22, w0
  4314fc:	mov	x2, x20
  431500:	mov	x1, x19
  431504:	tbz	w0, #31, 431598 <nftw@plt+0x2e8a8>
  431508:	mov	w0, w21
  43150c:	b	43159c <nftw@plt+0x2e8ac>
  431510:	mov	x1, x0
  431514:	ldr	x0, [x0]
  431518:	b	431380 <nftw@plt+0x2e690>
  43151c:	ldxr	x2, [x0]
  431520:	cbnz	x2, 43152c <nftw@plt+0x2e83c>
  431524:	stlxr	w3, x28, [x0]
  431528:	cbnz	w3, 43151c <nftw@plt+0x2e82c>
  43152c:	dmb	ish
  431530:	cmp	x2, #0x0
  431534:	b.eq	431388 <nftw@plt+0x2e698>  // b.none
  431538:	b	43125c <nftw@plt+0x2e56c>
  43153c:	str	wzr, [sp, #192]
  431540:	b	431390 <nftw@plt+0x2e6a0>
  431544:	ldr	x0, [sp, #256]
  431548:	ldrb	w0, [x0, x2]
  43154c:	lsr	w4, w0, #4
  431550:	and	w0, w0, #0xf
  431554:	cmp	w4, #0x9
  431558:	add	w7, w4, #0x30
  43155c:	add	w3, w4, #0x57
  431560:	add	w4, w0, #0x30
  431564:	csel	w3, w3, w7, hi  // hi = pmore
  431568:	cmp	w0, #0x9
  43156c:	strb	w3, [x1]
  431570:	add	w3, w0, #0x57
  431574:	csel	w0, w3, w4, hi  // hi = pmore
  431578:	strb	w0, [x1, #1]
  43157c:	cbz	x2, 43158c <nftw@plt+0x2e89c>
  431580:	add	x1, x1, #0x2
  431584:	add	x2, x2, #0x1
  431588:	b	431414 <nftw@plt+0x2e724>
  43158c:	add	x1, x1, #0x3
  431590:	sturb	w6, [x1, #-1]
  431594:	b	431584 <nftw@plt+0x2e894>
  431598:	mov	w0, w24
  43159c:	bl	42f2c8 <nftw@plt+0x2c5d8>
  4315a0:	mov	w0, w22
  4315a4:	ldp	x29, x30, [sp, #80]
  4315a8:	ldp	x19, x20, [sp, #96]
  4315ac:	ldp	x21, x22, [sp, #112]
  4315b0:	ldp	x23, x24, [sp, #128]
  4315b4:	ldp	x25, x26, [sp, #144]
  4315b8:	ldp	x27, x28, [sp, #160]
  4315bc:	add	sp, sp, #0x4a0
  4315c0:	ret
  4315c4:	cbz	w25, 4315dc <nftw@plt+0x2e8ec>
  4315c8:	mov	x3, x20
  4315cc:	mov	x2, x19
  4315d0:	add	x1, sp, #0x210
  4315d4:	mov	x0, x27
  4315d8:	bl	431f74 <nftw@plt+0x2f284>
  4315dc:	cbz	x22, 4315f4 <nftw@plt+0x2e904>
  4315e0:	mov	x3, x20
  4315e4:	mov	x2, x19
  4315e8:	add	x1, x22, #0x18
  4315ec:	mov	x0, x27
  4315f0:	bl	431f74 <nftw@plt+0x2f284>
  4315f4:	ldr	x0, [sp, #280]
  4315f8:	cbz	x0, 431658 <nftw@plt+0x2e968>
  4315fc:	ldr	x1, [sp, #296]
  431600:	mov	x2, x0
  431604:	mov	x4, x20
  431608:	mov	x3, x19
  43160c:	mov	x0, x27
  431610:	bl	42f90c <nftw@plt+0x2cc1c>
  431614:	mov	w21, w0
  431618:	tbnz	w0, #31, 431658 <nftw@plt+0x2e968>
  43161c:	ldr	w1, [sp, #292]
  431620:	cbz	w1, 431484 <nftw@plt+0x2e794>
  431624:	add	x1, sp, #0x2e0
  431628:	bl	44da18 <_obstack_memory_used@@Base+0x109c0>
  43162c:	tbz	w0, #31, 431710 <nftw@plt+0x2ea20>
  431630:	bl	402c20 <__errno_location@plt>
  431634:	ldr	w2, [x0]
  431638:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  43163c:	mov	x0, x20
  431640:	add	x1, x1, #0x99d
  431644:	blr	x19
  431648:	mov	x2, x20
  43164c:	mov	x1, x19
  431650:	mov	w0, w21
  431654:	bl	42f2c8 <nftw@plt+0x2c5d8>
  431658:	cbz	w26, 431670 <nftw@plt+0x2e980>
  43165c:	mov	x3, x20
  431660:	mov	x2, x19
  431664:	add	x1, sp, #0x228
  431668:	mov	x0, x27
  43166c:	bl	431f74 <nftw@plt+0x2f284>
  431670:	ldr	x0, [sp, #224]
  431674:	str	xzr, [sp, #392]
  431678:	cbz	x0, 43179c <nftw@plt+0x2eaac>
  43167c:	ldr	x1, [sp, #296]
  431680:	mov	x2, x0
  431684:	mov	x4, x20
  431688:	mov	x3, x19
  43168c:	mov	x0, x27
  431690:	bl	42f90c <nftw@plt+0x2cc1c>
  431694:	mov	w21, w0
  431698:	tbnz	w0, #31, 43179c <nftw@plt+0x2eaac>
  43169c:	mov	w2, w0
  4316a0:	ldr	w0, [sp, #312]
  4316a4:	str	w0, [sp, #40]
  4316a8:	mov	x5, x20
  4316ac:	ldr	x0, [sp, #304]
  4316b0:	str	x0, [sp, #32]
  4316b4:	ldp	x3, x7, [sp, #240]
  4316b8:	mov	w0, #0x1                   	// #1
  4316bc:	str	w0, [sp, #24]
  4316c0:	add	x0, sp, #0x188
  4316c4:	ldr	x6, [sp, #272]
  4316c8:	str	x0, [sp, #8]
  4316cc:	ldr	x1, [sp, #296]
  4316d0:	mov	x4, x19
  4316d4:	ldr	x0, [sp, #1184]
  4316d8:	str	x0, [sp]
  4316dc:	str	wzr, [sp, #16]
  4316e0:	mov	x0, x27
  4316e4:	bl	430954 <nftw@plt+0x2dc64>
  4316e8:	mov	w22, w0
  4316ec:	mov	x3, x20
  4316f0:	mov	x2, x19
  4316f4:	add	x1, sp, #0x240
  4316f8:	mov	x0, x27
  4316fc:	bl	431f74 <nftw@plt+0x2f284>
  431700:	tbz	w22, #31, 4317b8 <nftw@plt+0x2eac8>
  431704:	mov	x2, x20
  431708:	mov	x1, x19
  43170c:	b	431508 <nftw@plt+0x2e818>
  431710:	ldr	x3, [sp, #784]
  431714:	add	x25, sp, #0x258
  431718:	mov	x6, x25
  43171c:	mov	x5, x20
  431720:	mov	x4, x19
  431724:	mov	w1, w21
  431728:	mov	x0, x27
  43172c:	mov	x2, #0x0                   	// #0
  431730:	bl	431eb8 <nftw@plt+0x2f1c8>
  431734:	cbz	w0, 431648 <nftw@plt+0x2e958>
  431738:	ldr	x2, [sp, #600]
  43173c:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  431740:	ldr	x3, [sp, #784]
  431744:	add	x0, x0, #0xa34
  431748:	add	x0, x0, #0x4e0
  43174c:	mov	w22, #0xffffffff            	// #-1
  431750:	add	x3, x2, x3
  431754:	cmp	x3, x2
  431758:	b.hi	431784 <nftw@plt+0x2ea94>  // b.pmore
  43175c:	mov	x0, x27
  431760:	mov	x3, x20
  431764:	mov	x2, x19
  431768:	mov	x1, x25
  43176c:	bl	431f74 <nftw@plt+0x2f284>
  431770:	mvn	w22, w22
  431774:	ldr	w0, [sp, #292]
  431778:	cmp	w0, w22
  43177c:	b.eq	431484 <nftw@plt+0x2e794>  // b.none
  431780:	b	431648 <nftw@plt+0x2e958>
  431784:	ldrb	w1, [x2], #1
  431788:	eor	w1, w1, w22
  43178c:	and	x1, x1, #0xff
  431790:	ldr	w1, [x0, x1, lsl #2]
  431794:	eor	w22, w1, w22, lsr #8
  431798:	b	431754 <nftw@plt+0x2ea64>
  43179c:	ldr	w0, [sp, #184]
  4317a0:	cbz	w0, 4317b8 <nftw@plt+0x2eac8>
  4317a4:	mov	x3, x20
  4317a8:	mov	x2, x19
  4317ac:	add	x1, sp, #0x240
  4317b0:	mov	x0, x27
  4317b4:	bl	431f74 <nftw@plt+0x2f284>
  4317b8:	add	x21, sp, #0x360
  4317bc:	mov	w22, #0xa                   	// #10
  4317c0:	mov	x1, x21
  4317c4:	mov	x3, #0x0                   	// #0
  4317c8:	mov	x25, #0x0                   	// #0
  4317cc:	ldr	x2, [x1, #8]
  4317d0:	cbz	x2, 4317f0 <nftw@plt+0x2eb00>
  4317d4:	ldr	x0, [x1]
  4317d8:	cbz	x25, 431828 <nftw@plt+0x2eb38>
  4317dc:	cmp	x0, x25
  4317e0:	csel	x25, x25, x0, ge  // ge = tcont
  4317e4:	add	x0, x0, x2
  4317e8:	cmp	x3, x0
  4317ec:	csel	x3, x3, x0, ge  // ge = tcont
  4317f0:	add	x1, x1, #0x20
  4317f4:	subs	w22, w22, #0x1
  4317f8:	b.ne	4317cc <nftw@plt+0x2eadc>  // b.any
  4317fc:	cmp	x25, #0x0
  431800:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  431804:	b.ne	431830 <nftw@plt+0x2eb40>  // b.any
  431808:	mov	x2, x20
  43180c:	mov	x1, x19
  431810:	mov	w0, w24
  431814:	bl	42f2c8 <nftw@plt+0x2c5d8>
  431818:	mov	w28, w0
  43181c:	cbz	w0, 431b5c <nftw@plt+0x2ee6c>
  431820:	mov	w22, #0x1                   	// #1
  431824:	b	4315a0 <nftw@plt+0x2e8b0>
  431828:	mov	x25, x0
  43182c:	b	4317e4 <nftw@plt+0x2eaf4>
  431830:	add	x26, sp, #0x2e0
  431834:	mov	x5, x20
  431838:	mov	x6, x26
  43183c:	mov	x4, x19
  431840:	sub	x3, x3, x25
  431844:	mov	x2, x25
  431848:	mov	w1, w24
  43184c:	mov	x0, x27
  431850:	bl	431eb8 <nftw@plt+0x2f1c8>
  431854:	mov	w28, w0
  431858:	cbz	w0, 431b5c <nftw@plt+0x2ee6c>
  43185c:	mov	x2, x20
  431860:	mov	x1, x19
  431864:	mov	w0, w24
  431868:	bl	42f2c8 <nftw@plt+0x2c5d8>
  43186c:	cbz	w0, 431b58 <nftw@plt+0x2ee68>
  431870:	ldr	x3, [sp, #736]
  431874:	mov	x0, x21
  431878:	mov	w2, #0x0                   	// #0
  43187c:	ldr	x1, [x0, #8]
  431880:	cbnz	x1, 431a8c <nftw@plt+0x2ed9c>
  431884:	str	xzr, [x0, #16]
  431888:	add	w2, w2, #0x1
  43188c:	add	x0, x0, #0x20
  431890:	cmp	w2, #0xa
  431894:	b.ne	43187c <nftw@plt+0x2eb8c>  // b.any
  431898:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x1afa8>
  43189c:	add	x0, x25, #0x9a3
  4318a0:	mov	x28, x21
  4318a4:	str	x0, [sp, #184]
  4318a8:	add	x0, sp, #0x258
  4318ac:	mov	w24, #0x5                   	// #5
  4318b0:	mov	x23, #0x0                   	// #0
  4318b4:	str	x0, [sp, #200]
  4318b8:	add	x0, sp, #0x190
  4318bc:	str	x0, [sp, #208]
  4318c0:	ldr	x0, [x28, #8]
  4318c4:	cbnz	x0, 431914 <nftw@plt+0x2ec24>
  4318c8:	ldr	x25, [x28, #168]
  4318cc:	cbz	x25, 431914 <nftw@plt+0x2ec24>
  4318d0:	cbnz	x23, 4318f0 <nftw@plt+0x2ec00>
  4318d4:	mov	x3, x20
  4318d8:	mov	x2, x19
  4318dc:	mov	x0, x27
  4318e0:	mov	x1, #0x13b4                	// #5044
  4318e4:	bl	42ec94 <nftw@plt+0x2bfa4>
  4318e8:	mov	x23, x0
  4318ec:	cbz	x0, 431aec <nftw@plt+0x2edfc>
  4318f0:	str	xzr, [sp, #400]
  4318f4:	cmp	x25, #0xb
  4318f8:	str	xzr, [sp, #600]
  4318fc:	b.hi	431aa8 <nftw@plt+0x2edb8>  // b.pmore
  431900:	ldr	x0, [sp, #400]
  431904:	str	x0, [x28, #16]
  431908:	ldr	x0, [sp, #600]
  43190c:	str	x0, [x28, #8]
  431910:	str	wzr, [x28, #24]
  431914:	add	x28, x28, #0x20
  431918:	subs	w24, w24, #0x1
  43191c:	b.ne	4318c0 <nftw@plt+0x2ebd0>  // b.any
  431920:	mov	w0, #0x5                   	// #5
  431924:	str	w0, [sp, #184]
  431928:	ldr	x28, [x21, #8]
  43192c:	cbz	x28, 4319c0 <nftw@plt+0x2ecd0>
  431930:	ldr	w0, [x21, #24]
  431934:	cbz	w0, 4319c0 <nftw@plt+0x2ecd0>
  431938:	cbnz	x23, 431958 <nftw@plt+0x2ec68>
  43193c:	mov	x3, x20
  431940:	mov	x2, x19
  431944:	mov	x0, x27
  431948:	mov	x1, #0x13b4                	// #5044
  43194c:	bl	42ec94 <nftw@plt+0x2bfa4>
  431950:	mov	x23, x0
  431954:	cbz	x0, 431aec <nftw@plt+0x2edfc>
  431958:	cmp	x28, #0x17
  43195c:	b.ls	431b4c <nftw@plt+0x2ee5c>  // b.plast
  431960:	ldr	x24, [x21, #16]
  431964:	ldr	w8, [x24]
  431968:	cmp	w8, #0x1
  43196c:	b.ne	431b4c <nftw@plt+0x2ee5c>  // b.any
  431970:	ldr	x1, [x24, #8]
  431974:	mov	x3, x20
  431978:	mov	x2, x19
  43197c:	mov	x0, x27
  431980:	str	w8, [sp, #200]
  431984:	bl	42ec94 <nftw@plt+0x2bfa4>
  431988:	mov	x25, x0
  43198c:	ldr	w8, [sp, #200]
  431990:	cbz	x0, 431b78 <nftw@plt+0x2ee88>
  431994:	ldr	x4, [x24, #8]
  431998:	mov	x3, x0
  43199c:	mov	x2, x23
  4319a0:	sub	x1, x28, #0x18
  4319a4:	add	x0, x24, #0x18
  4319a8:	bl	42fbc8 <nftw@plt+0x2ced8>
  4319ac:	cbz	w0, 431b4c <nftw@plt+0x2ee5c>
  4319b0:	ldr	x0, [x24, #8]
  4319b4:	sub	w22, w22, #0x1
  4319b8:	stp	x0, x25, [x21, #8]
  4319bc:	str	wzr, [x21, #24]
  4319c0:	ldr	w0, [sp, #184]
  4319c4:	add	x21, x21, #0x20
  4319c8:	subs	w0, w0, #0x1
  4319cc:	str	w0, [sp, #184]
  4319d0:	b.ne	431928 <nftw@plt+0x2ec38>  // b.any
  4319d4:	cbz	x23, 4319f0 <nftw@plt+0x2ed00>
  4319d8:	mov	x4, x20
  4319dc:	mov	x3, x19
  4319e0:	mov	x1, x23
  4319e4:	mov	x0, x27
  4319e8:	mov	x2, #0x13b4                	// #5044
  4319ec:	bl	42ebd8 <nftw@plt+0x2bee8>
  4319f0:	cbnz	w22, 431af8 <nftw@plt+0x2ee08>
  4319f4:	mov	w28, #0x0                   	// #0
  4319f8:	mov	x3, x20
  4319fc:	mov	x2, x19
  431a00:	mov	x1, x26
  431a04:	mov	x0, x27
  431a08:	bl	431f74 <nftw@plt+0x2f284>
  431a0c:	add	x0, sp, #0x368
  431a10:	ldr	x1, [sp, #240]
  431a14:	ldp	x3, x2, [x0]
  431a18:	ldp	x5, x4, [x0, #32]
  431a1c:	stp	x19, x20, [sp, #48]
  431a20:	ldr	x0, [sp, #1192]
  431a24:	str	x0, [sp, #72]
  431a28:	ldr	x0, [sp, #272]
  431a2c:	str	x0, [sp, #64]
  431a30:	ldr	x0, [sp, #392]
  431a34:	str	x0, [sp, #40]
  431a38:	ldr	w0, [sp, #316]
  431a3c:	ldr	x7, [sp, #936]
  431a40:	cmp	w0, #0x2
  431a44:	cset	w0, eq  // eq = none
  431a48:	str	w0, [sp, #32]
  431a4c:	ldr	x0, [sp, #1000]
  431a50:	str	x0, [sp, #24]
  431a54:	ldr	x0, [sp, #1008]
  431a58:	str	x0, [sp, #16]
  431a5c:	ldr	x6, [sp, #944]
  431a60:	ldr	x0, [sp, #968]
  431a64:	str	x0, [sp, #8]
  431a68:	ldr	x0, [sp, #976]
  431a6c:	str	x0, [sp]
  431a70:	mov	x0, x27
  431a74:	bl	434890 <nftw@plt+0x31ba0>
  431a78:	cbz	w0, 431af0 <nftw@plt+0x2ee00>
  431a7c:	ldr	x0, [sp, #1184]
  431a80:	mov	w22, #0x1                   	// #1
  431a84:	str	w22, [x0]
  431a88:	b	4315a0 <nftw@plt+0x2e8b0>
  431a8c:	ldr	x1, [x0]
  431a90:	cmp	w2, #0x5
  431a94:	cinc	w22, w22, cc  // cc = lo, ul, last
  431a98:	sub	x1, x1, x25
  431a9c:	add	x1, x3, x1
  431aa0:	str	x1, [x0, #16]
  431aa4:	b	431888 <nftw@plt+0x2eb98>
  431aa8:	ldr	x11, [x28, #176]
  431aac:	mov	x2, #0x4                   	// #4
  431ab0:	ldr	x1, [sp, #184]
  431ab4:	mov	x0, x11
  431ab8:	str	x11, [sp, #216]
  431abc:	bl	4029c0 <memcmp@plt>
  431ac0:	cbnz	w0, 431900 <nftw@plt+0x2ec10>
  431ac4:	ldp	x7, x6, [sp, #200]
  431ac8:	mov	x5, x20
  431acc:	ldr	x11, [sp, #216]
  431ad0:	mov	x4, x19
  431ad4:	mov	x3, x23
  431ad8:	mov	x2, x25
  431adc:	mov	x0, x27
  431ae0:	mov	x1, x11
  431ae4:	bl	4308a8 <nftw@plt+0x2dbb8>
  431ae8:	cbnz	w0, 431900 <nftw@plt+0x2ec10>
  431aec:	mov	w28, #0x1                   	// #1
  431af0:	mov	w24, #0xffffffff            	// #-1
  431af4:	b	431b5c <nftw@plt+0x2ee6c>
  431af8:	mov	w28, #0x1                   	// #1
  431afc:	b	431a0c <nftw@plt+0x2ed1c>
  431b00:	mov	w22, #0xffffffff            	// #-1
  431b04:	b	4315a0 <nftw@plt+0x2e8b0>
  431b08:	mov	w26, #0x0                   	// #0
  431b0c:	mov	w25, #0x0                   	// #0
  431b10:	mov	w28, #0x0                   	// #0
  431b14:	mov	w7, #0x0                   	// #0
  431b18:	mov	x22, #0x0                   	// #0
  431b1c:	str	wzr, [sp, #184]
  431b20:	b	430d18 <nftw@plt+0x2e028>
  431b24:	mov	w28, #0x0                   	// #0
  431b28:	mov	w25, #0x1                   	// #1
  431b2c:	b	430d14 <nftw@plt+0x2e024>
  431b30:	mov	w26, #0x0                   	// #0
  431b34:	mov	w28, #0x0                   	// #0
  431b38:	b	430d14 <nftw@plt+0x2e024>
  431b3c:	mov	w28, #0x0                   	// #0
  431b40:	b	430d18 <nftw@plt+0x2e028>
  431b44:	mov	w7, #0x1                   	// #1
  431b48:	b	430d14 <nftw@plt+0x2e024>
  431b4c:	mov	x0, #0x0                   	// #0
  431b50:	mov	x25, #0x0                   	// #0
  431b54:	b	4319b4 <nftw@plt+0x2ecc4>
  431b58:	mov	w28, #0x1                   	// #1
  431b5c:	ldr	w0, [sp, #192]
  431b60:	cbz	w0, 430a70 <nftw@plt+0x2dd80>
  431b64:	mov	w26, #0x0                   	// #0
  431b68:	mov	x22, #0x0                   	// #0
  431b6c:	mov	w25, #0x0                   	// #0
  431b70:	str	wzr, [sp, #184]
  431b74:	b	430d74 <nftw@plt+0x2e084>
  431b78:	mov	w28, w8
  431b7c:	b	431af0 <nftw@plt+0x2ee00>
  431b80:	sub	sp, sp, #0x70
  431b84:	stp	x29, x30, [sp, #48]
  431b88:	add	x29, sp, #0x30
  431b8c:	ldr	x1, [x0, #8]
  431b90:	stp	x19, x20, [sp, #64]
  431b94:	mov	x20, x0
  431b98:	ldr	w0, [x2, #56]
  431b9c:	mov	x19, x2
  431ba0:	str	x21, [sp, #80]
  431ba4:	cmn	w0, #0x1
  431ba8:	cbz	x1, 431bb4 <nftw@plt+0x2eec4>
  431bac:	ldrb	w1, [x1]
  431bb0:	cbnz	w1, 431c24 <nftw@plt+0x2ef34>
  431bb4:	b.eq	431c50 <nftw@plt+0x2ef60>  // b.none
  431bb8:	ldr	x21, [x19, #48]
  431bbc:	mov	w1, #0xffffffff            	// #-1
  431bc0:	str	w1, [x19, #56]
  431bc4:	mov	w2, w0
  431bc8:	add	x1, sp, #0x64
  431bcc:	ldp	x0, x4, [x19]
  431bd0:	add	x6, sp, #0x68
  431bd4:	ldr	x3, [x20]
  431bd8:	ldr	x5, [x19, #16]
  431bdc:	ldr	x7, [x19, #32]
  431be0:	stp	x1, xzr, [sp]
  431be4:	mov	x1, x21
  431be8:	str	wzr, [sp, #16]
  431bec:	str	wzr, [sp, #24]
  431bf0:	str	xzr, [sp, #32]
  431bf4:	str	wzr, [sp, #40]
  431bf8:	bl	430954 <nftw@plt+0x2dc64>
  431bfc:	cbz	w0, 431c50 <nftw@plt+0x2ef60>
  431c00:	ldr	w0, [sp, #100]
  431c04:	cbz	w0, 431c50 <nftw@plt+0x2ef60>
  431c08:	ldr	x0, [x19, #40]
  431c0c:	mov	w1, #0x1                   	// #1
  431c10:	str	w1, [x0]
  431c14:	ldr	x0, [x19, #24]
  431c18:	ldr	x1, [sp, #104]
  431c1c:	str	x1, [x0]
  431c20:	b	431c50 <nftw@plt+0x2ef60>
  431c24:	b.eq	431c38 <nftw@plt+0x2ef48>  // b.none
  431c28:	ldp	x1, x2, [x2, #8]
  431c2c:	bl	42f2c8 <nftw@plt+0x2c5d8>
  431c30:	mov	w0, #0xffffffff            	// #-1
  431c34:	str	w0, [x19, #56]
  431c38:	ldp	x1, x2, [x19, #8]
  431c3c:	add	x3, sp, #0x60
  431c40:	ldr	x21, [x20, #8]
  431c44:	mov	x0, x21
  431c48:	bl	42f230 <nftw@plt+0x2c540>
  431c4c:	tbz	w0, #31, 431bc4 <nftw@plt+0x2eed4>
  431c50:	mov	w0, #0x0                   	// #0
  431c54:	ldp	x29, x30, [sp, #48]
  431c58:	ldp	x19, x20, [sp, #64]
  431c5c:	ldr	x21, [sp, #80]
  431c60:	add	sp, sp, #0x70
  431c64:	ret
  431c68:	stp	x29, x30, [sp, #-80]!
  431c6c:	mov	x29, sp
  431c70:	stp	x21, x22, [sp, #32]
  431c74:	mov	x21, x3
  431c78:	mov	x22, x4
  431c7c:	mov	x3, x4
  431c80:	stp	x19, x20, [sp, #16]
  431c84:	mov	x19, x1
  431c88:	mov	x1, #0x13b4                	// #5044
  431c8c:	stp	x23, x24, [sp, #48]
  431c90:	mov	x24, x2
  431c94:	mov	x23, x0
  431c98:	mov	x2, x21
  431c9c:	stp	x25, x26, [sp, #64]
  431ca0:	mov	x25, x5
  431ca4:	mov	x26, x6
  431ca8:	bl	42ec94 <nftw@plt+0x2bfa4>
  431cac:	cbz	x0, 431d40 <nftw@plt+0x2f050>
  431cb0:	str	xzr, [x25]
  431cb4:	mov	x20, x0
  431cb8:	str	xzr, [x26]
  431cbc:	cmp	x24, #0xb
  431cc0:	b.ls	431d38 <nftw@plt+0x2f048>  // b.plast
  431cc4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  431cc8:	mov	x0, x19
  431ccc:	add	x1, x1, #0x9a3
  431cd0:	mov	x2, #0x4                   	// #4
  431cd4:	bl	4029c0 <memcmp@plt>
  431cd8:	cbnz	w0, 431d38 <nftw@plt+0x2f048>
  431cdc:	mov	x1, x19
  431ce0:	mov	x7, x26
  431ce4:	mov	x6, x25
  431ce8:	mov	x5, x22
  431cec:	mov	x4, x21
  431cf0:	mov	x3, x20
  431cf4:	mov	x2, x24
  431cf8:	mov	x0, x23
  431cfc:	bl	4308a8 <nftw@plt+0x2dbb8>
  431d00:	mov	w19, w0
  431d04:	mov	x4, x22
  431d08:	mov	x3, x21
  431d0c:	mov	x1, x20
  431d10:	mov	x0, x23
  431d14:	mov	x2, #0x13b4                	// #5044
  431d18:	bl	42ebd8 <nftw@plt+0x2bee8>
  431d1c:	mov	w0, w19
  431d20:	ldp	x19, x20, [sp, #16]
  431d24:	ldp	x21, x22, [sp, #32]
  431d28:	ldp	x23, x24, [sp, #48]
  431d2c:	ldp	x25, x26, [sp, #64]
  431d30:	ldp	x29, x30, [sp], #80
  431d34:	ret
  431d38:	mov	w19, #0x1                   	// #1
  431d3c:	b	431d04 <nftw@plt+0x2f014>
  431d40:	mov	w19, #0x0                   	// #0
  431d44:	b	431d1c <nftw@plt+0x2f02c>
  431d48:	sub	sp, sp, #0xe0
  431d4c:	stp	x29, x30, [sp, #48]
  431d50:	add	x29, sp, #0x30
  431d54:	stp	x23, x24, [sp, #96]
  431d58:	mov	x23, x3
  431d5c:	mov	x24, x1
  431d60:	stp	x27, x28, [sp, #128]
  431d64:	adrp	x28, 42f000 <nftw@plt+0x2c310>
  431d68:	add	x3, x28, #0x314
  431d6c:	str	wzr, [sp, #24]
  431d70:	add	x27, sp, #0x98
  431d74:	str	xzr, [sp, #32]
  431d78:	mov	x6, x27
  431d7c:	str	wzr, [sp, #40]
  431d80:	stp	x25, x26, [sp, #112]
  431d84:	add	x25, sp, #0x94
  431d88:	add	x26, sp, #0x90
  431d8c:	stp	x25, xzr, [sp]
  431d90:	mov	x7, x26
  431d94:	str	x3, [sp, #152]
  431d98:	mov	w3, #0x1                   	// #1
  431d9c:	str	w3, [sp, #16]
  431da0:	mov	x3, #0x0                   	// #0
  431da4:	stp	x19, x20, [sp, #64]
  431da8:	mov	x20, x5
  431dac:	mov	x19, x0
  431db0:	mov	x5, x4
  431db4:	stp	x21, x22, [sp, #80]
  431db8:	mov	x22, x4
  431dbc:	mov	w21, w2
  431dc0:	mov	x4, x23
  431dc4:	bl	430954 <nftw@plt+0x2dc64>
  431dc8:	cbz	w0, 431e78 <nftw@plt+0x2f188>
  431dcc:	cmp	w0, #0x0
  431dd0:	add	x1, sp, #0xa0
  431dd4:	csinv	w21, w21, wzr, lt  // lt = tstop
  431dd8:	adrp	x0, 431000 <nftw@plt+0x2e310>
  431ddc:	add	x0, x0, #0xb80
  431de0:	stp	x19, x23, [sp, #160]
  431de4:	stp	x22, x27, [sp, #176]
  431de8:	stp	x26, x25, [sp, #192]
  431dec:	str	x24, [sp, #208]
  431df0:	str	w21, [sp, #216]
  431df4:	bl	402a50 <dl_iterate_phdr@plt>
  431df8:	ldr	w0, [x19, #8]
  431dfc:	ldr	w1, [sp, #144]
  431e00:	cbnz	w0, 431e30 <nftw@plt+0x2f140>
  431e04:	cbz	w1, 431e1c <nftw@plt+0x2f12c>
  431e08:	adrp	x0, 42f000 <nftw@plt+0x2c310>
  431e0c:	add	x0, x0, #0x748
  431e10:	str	x0, [x19, #40]
  431e14:	ldr	x0, [x19, #24]
  431e18:	b	431e54 <nftw@plt+0x2f164>
  431e1c:	ldr	x0, [x19, #40]
  431e20:	cbnz	x0, 431e14 <nftw@plt+0x2f124>
  431e24:	adrp	x0, 42f000 <nftw@plt+0x2c310>
  431e28:	add	x0, x0, #0x33c
  431e2c:	b	431e10 <nftw@plt+0x2f120>
  431e30:	add	x0, x19, #0x28
  431e34:	cbz	w1, 431e98 <nftw@plt+0x2f1a8>
  431e38:	adrp	x1, 42f000 <nftw@plt+0x2c310>
  431e3c:	add	x1, x1, #0x748
  431e40:	stlr	x1, [x0]
  431e44:	ldr	w0, [x19, #8]
  431e48:	cbz	w0, 431e14 <nftw@plt+0x2f124>
  431e4c:	add	x19, x19, #0x18
  431e50:	ldar	x0, [x19]
  431e54:	str	x0, [x20]
  431e58:	ldr	x0, [x20]
  431e5c:	cbz	x0, 431e6c <nftw@plt+0x2f17c>
  431e60:	add	x28, x28, #0x314
  431e64:	cmp	x0, x28
  431e68:	b.ne	431e74 <nftw@plt+0x2f184>  // b.any
  431e6c:	ldr	x0, [sp, #152]
  431e70:	str	x0, [x20]
  431e74:	mov	w0, #0x1                   	// #1
  431e78:	ldp	x29, x30, [sp, #48]
  431e7c:	ldp	x19, x20, [sp, #64]
  431e80:	ldp	x21, x22, [sp, #80]
  431e84:	ldp	x23, x24, [sp, #96]
  431e88:	ldp	x25, x26, [sp, #112]
  431e8c:	ldp	x27, x28, [sp, #128]
  431e90:	add	sp, sp, #0xe0
  431e94:	ret
  431e98:	adrp	x1, 42f000 <nftw@plt+0x2c310>
  431e9c:	add	x1, x1, #0x33c
  431ea0:	ldxr	x2, [x0]
  431ea4:	cbnz	x2, 431eb0 <nftw@plt+0x2f1c0>
  431ea8:	stlxr	w3, x1, [x0]
  431eac:	cbnz	w3, 431ea0 <nftw@plt+0x2f1b0>
  431eb0:	dmb	ish
  431eb4:	b	431e44 <nftw@plt+0x2f154>
  431eb8:	stp	x29, x30, [sp, #-80]!
  431ebc:	mov	x29, sp
  431ec0:	stp	x19, x20, [sp, #16]
  431ec4:	sub	x19, x3, #0x1
  431ec8:	stp	x21, x22, [sp, #32]
  431ecc:	mov	x21, x4
  431ed0:	mov	x22, x5
  431ed4:	stp	x23, x24, [sp, #48]
  431ed8:	mov	x24, x2
  431edc:	mov	x23, x6
  431ee0:	str	x25, [sp, #64]
  431ee4:	mov	w25, w1
  431ee8:	bl	4028d0 <getpagesize@plt>
  431eec:	sxtw	x0, w0
  431ef0:	mov	w4, w25
  431ef4:	mov	w3, #0x2                   	// #2
  431ef8:	mov	w2, #0x1                   	// #1
  431efc:	udiv	x20, x24, x0
  431f00:	msub	w20, w20, w0, w24
  431f04:	add	x1, x0, x20
  431f08:	neg	x0, x0
  431f0c:	add	x19, x19, x1
  431f10:	sub	x5, x24, x20
  431f14:	and	x19, x0, x19
  431f18:	mov	x0, #0x0                   	// #0
  431f1c:	mov	x1, x19
  431f20:	bl	402a20 <mmap@plt>
  431f24:	cmn	x0, #0x1
  431f28:	b.ne	431f60 <nftw@plt+0x2f270>  // b.any
  431f2c:	bl	402c20 <__errno_location@plt>
  431f30:	ldr	w2, [x0]
  431f34:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  431f38:	mov	x0, x22
  431f3c:	add	x1, x1, #0x748
  431f40:	blr	x21
  431f44:	mov	w0, #0x0                   	// #0
  431f48:	ldp	x19, x20, [sp, #16]
  431f4c:	ldp	x21, x22, [sp, #32]
  431f50:	ldp	x23, x24, [sp, #48]
  431f54:	ldr	x25, [sp, #64]
  431f58:	ldp	x29, x30, [sp], #80
  431f5c:	ret
  431f60:	add	x20, x0, x20
  431f64:	stp	x20, x0, [x23]
  431f68:	mov	w0, #0x1                   	// #1
  431f6c:	str	x19, [x23, #16]
  431f70:	b	431f48 <nftw@plt+0x2f258>
  431f74:	mov	x4, x1
  431f78:	stp	x29, x30, [sp, #-32]!
  431f7c:	mov	x29, sp
  431f80:	ldr	x0, [x4, #8]
  431f84:	stp	x19, x20, [sp, #16]
  431f88:	mov	x19, x2
  431f8c:	ldr	x1, [x1, #16]
  431f90:	mov	x20, x3
  431f94:	bl	402ae0 <munmap@plt>
  431f98:	tbz	w0, #31, 431fc0 <nftw@plt+0x2f2d0>
  431f9c:	bl	402c20 <__errno_location@plt>
  431fa0:	ldr	w2, [x0]
  431fa4:	mov	x16, x19
  431fa8:	mov	x0, x20
  431fac:	ldp	x19, x20, [sp, #16]
  431fb0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  431fb4:	ldp	x29, x30, [sp], #32
  431fb8:	add	x1, x1, #0x314
  431fbc:	br	x16
  431fc0:	ldp	x19, x20, [sp, #16]
  431fc4:	ldp	x29, x30, [sp], #32
  431fc8:	ret
  431fcc:	sub	w1, w1, #0x1
  431fd0:	cmp	w1, #0x7
  431fd4:	b.hi	432018 <nftw@plt+0x2f328>  // b.pmore
  431fd8:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  431fdc:	add	x2, x2, #0x31c
  431fe0:	ldrb	w1, [x2, w1, uxtw]
  431fe4:	adr	x2, 431ff0 <nftw@plt+0x2f300>
  431fe8:	add	x1, x2, w1, sxtb #2
  431fec:	br	x1
  431ff0:	cmp	x0, #0xff
  431ff4:	cset	w0, eq  // eq = none
  431ff8:	ret
  431ffc:	mov	x1, #0xffff                	// #65535
  432000:	cmp	x0, x1
  432004:	b	431ff4 <nftw@plt+0x2f304>
  432008:	mov	x1, #0xffffffff            	// #4294967295
  43200c:	b	432000 <nftw@plt+0x2f310>
  432010:	cmn	x0, #0x1
  432014:	b	431ff4 <nftw@plt+0x2f304>
  432018:	mov	w0, #0x0                   	// #0
  43201c:	b	431ff8 <nftw@plt+0x2f308>
  432020:	ldr	x1, [x1]
  432024:	ldr	x0, [x0]
  432028:	ldr	x2, [x1, #24]
  43202c:	cmp	x2, x0
  432030:	b.hi	432044 <nftw@plt+0x2f354>  // b.pmore
  432034:	ldr	x1, [x1, #32]
  432038:	cmp	x1, x0
  43203c:	cset	w0, ls  // ls = plast
  432040:	ret
  432044:	mov	w0, #0xffffffff            	// #-1
  432048:	b	432040 <nftw@plt+0x2f350>
  43204c:	ldr	x0, [x0]
  432050:	ldr	x2, [x1]
  432054:	cmp	x2, x0
  432058:	b.hi	43206c <nftw@plt+0x2f37c>  // b.pmore
  43205c:	ldr	x1, [x1, #8]
  432060:	cmp	x1, x0
  432064:	cset	w0, ls  // ls = plast
  432068:	ret
  43206c:	mov	w0, #0xffffffff            	// #-1
  432070:	b	432068 <nftw@plt+0x2f378>
  432074:	ldr	x0, [x0]
  432078:	ldr	x2, [x1]
  43207c:	cmp	x2, x0
  432080:	b.hi	432094 <nftw@plt+0x2f3a4>  // b.pmore
  432084:	ldr	x1, [x1, #8]
  432088:	cmp	x1, x0
  43208c:	cset	w0, ls  // ls = plast
  432090:	ret
  432094:	mov	w0, #0xffffffff            	// #-1
  432098:	b	432090 <nftw@plt+0x2f3a0>
  43209c:	ldr	x0, [x0]
  4320a0:	ldr	x2, [x1]
  4320a4:	cmp	x2, x0
  4320a8:	b.hi	4320bc <nftw@plt+0x2f3cc>  // b.pmore
  4320ac:	ldr	x1, [x1, #24]
  4320b0:	cmp	x1, x0
  4320b4:	cset	w0, ls  // ls = plast
  4320b8:	ret
  4320bc:	mov	w0, #0xffffffff            	// #-1
  4320c0:	b	4320b8 <nftw@plt+0x2f3c8>
  4320c4:	ldr	x2, [x0]
  4320c8:	ldr	x1, [x1]
  4320cc:	cmp	x2, x1
  4320d0:	cset	w0, hi  // hi = pmore
  4320d4:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  4320d8:	ret
  4320dc:	stp	x29, x30, [sp, #-80]!
  4320e0:	mov	x29, sp
  4320e4:	stp	x21, x22, [sp, #32]
  4320e8:	mov	x21, x2
  4320ec:	ldr	x2, [x1, #32]
  4320f0:	stp	x19, x20, [sp, #16]
  4320f4:	str	x23, [sp, #48]
  4320f8:	str	x0, [sp, #72]
  4320fc:	cbnz	x2, 432118 <nftw@plt+0x2f428>
  432100:	mov	w0, #0x0                   	// #0
  432104:	ldp	x19, x20, [sp, #16]
  432108:	ldp	x21, x22, [sp, #32]
  43210c:	ldr	x23, [sp, #48]
  432110:	ldp	x29, x30, [sp], #80
  432114:	ret
  432118:	mov	x22, x1
  43211c:	mov	x23, x3
  432120:	ldr	x1, [x1, #24]
  432124:	mov	x20, x4
  432128:	mov	x19, x5
  43212c:	add	x0, sp, #0x48
  432130:	adrp	x4, 432000 <nftw@plt+0x2f310>
  432134:	mov	x3, #0x18                  	// #24
  432138:	add	x4, x4, #0x4c
  43213c:	bl	402880 <bsearch@plt>
  432140:	mov	x6, x0
  432144:	cbz	x0, 432100 <nftw@plt+0x2f410>
  432148:	ldp	x2, x3, [x22, #24]
  43214c:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  432150:	ldr	x0, [sp, #72]
  432154:	movk	x4, #0xaaab
  432158:	sub	x1, x6, x2
  43215c:	asr	x1, x1, #3
  432160:	mul	x1, x1, x4
  432164:	add	x1, x1, #0x1
  432168:	cmp	x1, x3
  43216c:	b.cs	432188 <nftw@plt+0x2f498>  // b.hs, b.nlast
  432170:	ldr	x1, [x6, #24]
  432174:	cmp	x1, x0
  432178:	b.hi	432188 <nftw@plt+0x2f498>  // b.pmore
  43217c:	ldr	x1, [x6, #32]
  432180:	cmp	x0, x1
  432184:	b.cc	4321d8 <nftw@plt+0x2f4e8>  // b.lo, b.ul, b.last
  432188:	ldr	x22, [x6, #16]
  43218c:	mov	x5, x19
  432190:	mov	x4, x20
  432194:	mov	x3, x23
  432198:	mov	x2, x21
  43219c:	mov	x1, x22
  4321a0:	bl	4320dc <nftw@plt+0x2f3ec>
  4321a4:	cbnz	w0, 432104 <nftw@plt+0x2f414>
  4321a8:	ldr	w3, [x19]
  4321ac:	mov	x0, x23
  4321b0:	ldr	x2, [x20]
  4321b4:	ldr	x4, [x22]
  4321b8:	ldr	x1, [sp, #72]
  4321bc:	blr	x21
  4321c0:	cbnz	w0, 432104 <nftw@plt+0x2f414>
  4321c4:	ldr	x1, [x22, #8]
  4321c8:	str	x1, [x20]
  4321cc:	ldr	w1, [x22, #16]
  4321d0:	str	w1, [x19]
  4321d4:	b	432104 <nftw@plt+0x2f414>
  4321d8:	add	x6, x6, #0x18
  4321dc:	b	432158 <nftw@plt+0x2f468>
  4321e0:	stp	x29, x30, [sp, #-48]!
  4321e4:	mov	x29, sp
  4321e8:	stp	x19, x20, [sp, #16]
  4321ec:	mov	x19, x2
  4321f0:	mov	x2, x3
  4321f4:	stp	x21, x22, [sp, #32]
  4321f8:	mov	x3, x4
  4321fc:	mov	x21, x5
  432200:	ldp	x22, x20, [x19]
  432204:	add	x22, x1, x22
  432208:	add	x20, x1, x20
  43220c:	ldr	x1, [x5, #24]
  432210:	cbz	x1, 432270 <nftw@plt+0x2f580>
  432214:	mov	x4, #0x18                  	// #24
  432218:	ldr	x5, [x5]
  43221c:	mul	x1, x1, x4
  432220:	sub	x1, x1, #0x18
  432224:	add	x1, x5, x1
  432228:	ldr	x4, [x1, #8]
  43222c:	cmp	x22, x4
  432230:	b.eq	432240 <nftw@plt+0x2f550>  // b.none
  432234:	add	x5, x4, #0x1
  432238:	cmp	x22, x5
  43223c:	b.ne	432270 <nftw@plt+0x2f580>  // b.any
  432240:	ldr	x5, [x1, #16]
  432244:	ldr	x6, [x19, #16]
  432248:	cmp	x6, x5
  43224c:	b.ne	432270 <nftw@plt+0x2f580>  // b.any
  432250:	cmp	x20, x4
  432254:	b.ls	43225c <nftw@plt+0x2f56c>  // b.plast
  432258:	str	x20, [x1, #8]
  43225c:	mov	w0, #0x1                   	// #1
  432260:	ldp	x19, x20, [sp, #16]
  432264:	ldp	x21, x22, [sp, #32]
  432268:	ldp	x29, x30, [sp], #48
  43226c:	ret
  432270:	mov	x4, x21
  432274:	mov	x1, #0x18                  	// #24
  432278:	bl	42ede8 <nftw@plt+0x2c0f8>
  43227c:	cbz	x0, 4322a4 <nftw@plt+0x2f5b4>
  432280:	stp	x22, x20, [x19]
  432284:	ldp	x2, x3, [x19]
  432288:	stp	x2, x3, [x0]
  43228c:	ldr	x1, [x19, #16]
  432290:	str	x1, [x0, #16]
  432294:	ldr	x0, [x21, #24]
  432298:	add	x0, x0, #0x1
  43229c:	str	x0, [x21, #24]
  4322a0:	b	43225c <nftw@plt+0x2f56c>
  4322a4:	mov	w0, #0x0                   	// #0
  4322a8:	b	432260 <nftw@plt+0x2f570>
  4322ac:	stp	x29, x30, [sp, #-240]!
  4322b0:	mov	x3, x1
  4322b4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4322b8:	mov	x29, sp
  4322bc:	stp	x19, x20, [sp, #16]
  4322c0:	mov	x19, x0
  4322c4:	add	x20, sp, #0x28
  4322c8:	ldp	x4, x0, [x0]
  4322cc:	add	x2, x2, #0x398
  4322d0:	ldr	x5, [x19, #16]
  4322d4:	mov	x1, #0xc8                  	// #200
  4322d8:	sub	w5, w5, w0
  4322dc:	mov	x0, x20
  4322e0:	bl	402730 <snprintf@plt>
  4322e4:	ldp	x3, x0, [x19, #40]
  4322e8:	mov	x1, x20
  4322ec:	mov	w2, #0x0                   	// #0
  4322f0:	blr	x3
  4322f4:	ldp	x19, x20, [sp, #16]
  4322f8:	ldp	x29, x30, [sp], #240
  4322fc:	ret
  432300:	stp	x29, x30, [sp, #-48]!
  432304:	mov	x29, sp
  432308:	stp	x19, x20, [sp, #16]
  43230c:	mov	x20, x2
  432310:	mov	x19, x1
  432314:	ldr	x2, [x1, #32]
  432318:	stp	x21, x22, [sp, #32]
  43231c:	mov	x22, x0
  432320:	mov	x21, x3
  432324:	cbz	x2, 43233c <nftw@plt+0x2f64c>
  432328:	ldr	x1, [x1, #40]
  43232c:	mov	x4, x3
  432330:	lsl	x2, x2, #3
  432334:	mov	x3, x20
  432338:	bl	42ebd8 <nftw@plt+0x2bee8>
  43233c:	mov	x4, x21
  432340:	mov	x3, x20
  432344:	mov	x0, x22
  432348:	ldp	x21, x22, [sp, #32]
  43234c:	ldp	x2, x1, [x19, #48]
  432350:	ldp	x19, x20, [sp, #16]
  432354:	ldp	x29, x30, [sp], #48
  432358:	lsl	x2, x2, #3
  43235c:	b	42ebd8 <nftw@plt+0x2bee8>
  432360:	stp	x29, x30, [sp, #-64]!
  432364:	mov	x29, sp
  432368:	stp	x19, x20, [sp, #16]
  43236c:	mov	x20, x0
  432370:	mov	x19, x1
  432374:	stp	x21, x22, [sp, #32]
  432378:	mov	x21, x2
  43237c:	mov	x22, x3
  432380:	str	x23, [sp, #48]
  432384:	mov	x23, #0x0                   	// #0
  432388:	ldp	x2, x1, [x19]
  43238c:	cmp	x2, x23
  432390:	b.hi	4323c0 <nftw@plt+0x2f6d0>  // b.pmore
  432394:	mov	x4, x22
  432398:	mov	x3, x21
  43239c:	mov	x0, x20
  4323a0:	lsl	x2, x2, #5
  4323a4:	bl	42ebd8 <nftw@plt+0x2bee8>
  4323a8:	ldp	x21, x22, [sp, #32]
  4323ac:	ldr	x23, [sp, #48]
  4323b0:	stp	xzr, xzr, [x19]
  4323b4:	ldp	x19, x20, [sp, #16]
  4323b8:	ldp	x29, x30, [sp], #64
  4323bc:	ret
  4323c0:	add	x1, x1, x23, lsl #5
  4323c4:	mov	x4, x22
  4323c8:	mov	x3, x21
  4323cc:	mov	x0, x20
  4323d0:	add	x23, x23, #0x1
  4323d4:	ldp	x2, x1, [x1, #16]
  4323d8:	lsl	x2, x2, #3
  4323dc:	bl	42ebd8 <nftw@plt+0x2bee8>
  4323e0:	b	432388 <nftw@plt+0x2f698>
  4323e4:	ldr	x3, [x0]
  4323e8:	ldr	x2, [x1]
  4323ec:	cmp	x3, x2
  4323f0:	b.cc	432434 <nftw@plt+0x2f744>  // b.lo, b.ul, b.last
  4323f4:	b.hi	43242c <nftw@plt+0x2f73c>  // b.pmore
  4323f8:	ldr	x3, [x0, #8]
  4323fc:	ldr	x2, [x1, #8]
  432400:	cmp	x3, x2
  432404:	b.cc	43242c <nftw@plt+0x2f73c>  // b.lo, b.ul, b.last
  432408:	b.hi	432434 <nftw@plt+0x2f744>  // b.pmore
  43240c:	ldr	x0, [x0, #16]
  432410:	ldr	x2, [x0, #56]
  432414:	ldr	x0, [x1, #16]
  432418:	ldr	x1, [x0, #56]
  43241c:	cmp	x2, x1
  432420:	cset	w0, gt
  432424:	csinv	w0, w0, wzr, ge  // ge = tcont
  432428:	ret
  43242c:	mov	w0, #0x1                   	// #1
  432430:	b	432428 <nftw@plt+0x2f738>
  432434:	mov	w0, #0xffffffff            	// #-1
  432438:	b	432428 <nftw@plt+0x2f738>
  43243c:	ldr	x3, [x0]
  432440:	ldr	x2, [x1]
  432444:	cmp	x3, x2
  432448:	b.cc	432468 <nftw@plt+0x2f778>  // b.lo, b.ul, b.last
  43244c:	b.hi	432470 <nftw@plt+0x2f780>  // b.pmore
  432450:	ldr	w2, [x0, #20]
  432454:	ldr	w1, [x1, #20]
  432458:	cmp	w2, w1
  43245c:	cset	w0, gt
  432460:	csinv	w0, w0, wzr, ge  // ge = tcont
  432464:	ret
  432468:	mov	w0, #0xffffffff            	// #-1
  43246c:	b	432464 <nftw@plt+0x2f774>
  432470:	mov	w0, #0x1                   	// #1
  432474:	b	432464 <nftw@plt+0x2f774>
  432478:	stp	x29, x30, [sp, #-80]!
  43247c:	mov	x5, x0
  432480:	mov	x29, sp
  432484:	stp	x19, x20, [sp, #16]
  432488:	mov	x20, x2
  43248c:	ldr	x2, [x0]
  432490:	str	x21, [sp, #32]
  432494:	sub	x0, x1, #0x1
  432498:	mov	x21, x3
  43249c:	cmp	x0, x2
  4324a0:	b.cs	4324c0 <nftw@plt+0x2f7d0>  // b.hs, b.nlast
  4324a4:	lsl	x0, x1, #5
  4324a8:	ldr	x3, [x5, #8]
  4324ac:	sub	x0, x0, #0x20
  4324b0:	add	x19, x3, x0
  4324b4:	ldr	x0, [x3, x0]
  4324b8:	cmp	x0, x1
  4324bc:	b.eq	432500 <nftw@plt+0x2f810>  // b.none
  4324c0:	add	x0, sp, #0x30
  4324c4:	str	x1, [sp, #48]
  4324c8:	ldr	x1, [x5, #8]
  4324cc:	stp	xzr, xzr, [sp, #56]
  4324d0:	adrp	x4, 432000 <nftw@plt+0x2f310>
  4324d4:	str	xzr, [x0, #24]
  4324d8:	add	x4, x4, #0xc4
  4324dc:	mov	x3, #0x20                  	// #32
  4324e0:	bl	402880 <bsearch@plt>
  4324e4:	mov	x19, x0
  4324e8:	cbnz	x0, 432500 <nftw@plt+0x2f810>
  4324ec:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4324f0:	mov	x0, x21
  4324f4:	add	x1, x1, #0x3a7
  4324f8:	mov	w2, #0x0                   	// #0
  4324fc:	blr	x20
  432500:	mov	x0, x19
  432504:	ldp	x19, x20, [sp, #16]
  432508:	ldr	x21, [sp, #32]
  43250c:	ldp	x29, x30, [sp], #80
  432510:	ret
  432514:	stp	x29, x30, [sp, #-64]!
  432518:	mov	x29, sp
  43251c:	stp	x19, x20, [sp, #16]
  432520:	mov	x19, x7
  432524:	mov	w20, w4
  432528:	ldr	x7, [x7, #24]
  43252c:	stp	x21, x22, [sp, #32]
  432530:	mov	x22, x2
  432534:	str	x23, [sp, #48]
  432538:	mov	x21, x3
  43253c:	mov	x2, x5
  432540:	mov	x3, x6
  432544:	mov	x23, x1
  432548:	cbz	x7, 432584 <nftw@plt+0x2f894>
  43254c:	mov	x1, #0x18                  	// #24
  432550:	ldr	x4, [x19]
  432554:	mul	x7, x7, x1
  432558:	sub	x7, x7, #0x18
  43255c:	add	x1, x4, x7
  432560:	ldr	x4, [x4, x7]
  432564:	cmp	x4, x22
  432568:	b.ne	432584 <nftw@plt+0x2f894>  // b.any
  43256c:	ldr	x4, [x1, #8]
  432570:	cmp	x4, x21
  432574:	b.ne	432584 <nftw@plt+0x2f894>  // b.any
  432578:	ldr	w1, [x1, #16]
  43257c:	cmp	w1, w20
  432580:	b.eq	4325b0 <nftw@plt+0x2f8c0>  // b.none
  432584:	mov	x4, x19
  432588:	mov	x1, #0x18                  	// #24
  43258c:	bl	42ede8 <nftw@plt+0x2c0f8>
  432590:	cbz	x0, 4325c8 <nftw@plt+0x2f8d8>
  432594:	ldr	x2, [x23]
  432598:	ldr	x1, [x19, #24]
  43259c:	add	x22, x2, x22
  4325a0:	stp	x22, x21, [x0]
  4325a4:	stp	w20, w1, [x0, #16]
  4325a8:	add	x1, x1, #0x1
  4325ac:	str	x1, [x19, #24]
  4325b0:	mov	w0, #0x1                   	// #1
  4325b4:	ldp	x19, x20, [sp, #16]
  4325b8:	ldp	x21, x22, [sp, #32]
  4325bc:	ldr	x23, [sp, #48]
  4325c0:	ldp	x29, x30, [sp], #64
  4325c4:	ret
  4325c8:	mov	w0, #0x0                   	// #0
  4325cc:	b	4325b4 <nftw@plt+0x2f8c4>
  4325d0:	stp	x29, x30, [sp, #-48]!
  4325d4:	mov	x29, sp
  4325d8:	stp	x21, x22, [sp, #32]
  4325dc:	mov	x21, x3
  4325e0:	add	x21, x21, x1
  4325e4:	stp	x19, x20, [sp, #16]
  4325e8:	add	x20, x4, x1
  4325ec:	mov	x22, x2
  4325f0:	ldr	x1, [x7, #24]
  4325f4:	mov	x2, x5
  4325f8:	mov	x3, x6
  4325fc:	mov	x19, x7
  432600:	cbz	x1, 43265c <nftw@plt+0x2f96c>
  432604:	mov	x4, #0x18                  	// #24
  432608:	mul	x1, x1, x4
  43260c:	ldr	x4, [x7]
  432610:	sub	x1, x1, #0x18
  432614:	add	x1, x4, x1
  432618:	ldr	x4, [x1, #8]
  43261c:	cmp	x21, x4
  432620:	b.eq	432630 <nftw@plt+0x2f940>  // b.none
  432624:	add	x5, x4, #0x1
  432628:	cmp	x21, x5
  43262c:	b.ne	43265c <nftw@plt+0x2f96c>  // b.any
  432630:	ldr	x5, [x1, #16]
  432634:	cmp	x5, x22
  432638:	b.ne	43265c <nftw@plt+0x2f96c>  // b.any
  43263c:	cmp	x20, x4
  432640:	b.ls	432648 <nftw@plt+0x2f958>  // b.plast
  432644:	str	x20, [x1, #8]
  432648:	mov	w0, #0x1                   	// #1
  43264c:	ldp	x19, x20, [sp, #16]
  432650:	ldp	x21, x22, [sp, #32]
  432654:	ldp	x29, x30, [sp], #48
  432658:	ret
  43265c:	mov	x4, x19
  432660:	mov	x1, #0x18                  	// #24
  432664:	bl	42ede8 <nftw@plt+0x2c0f8>
  432668:	cbz	x0, 432684 <nftw@plt+0x2f994>
  43266c:	stp	x21, x20, [x0]
  432670:	str	x22, [x0, #16]
  432674:	ldr	x0, [x19, #24]
  432678:	add	x0, x0, #0x1
  43267c:	str	x0, [x19, #24]
  432680:	b	432648 <nftw@plt+0x2f958>
  432684:	mov	w0, #0x0                   	// #0
  432688:	b	43264c <nftw@plt+0x2f95c>
  43268c:	stp	x29, x30, [sp, #-32]!
  432690:	mov	x29, sp
  432694:	ldr	x2, [x0, #24]
  432698:	stp	x19, x20, [sp, #16]
  43269c:	mov	x19, x0
  4326a0:	cmp	x1, x2
  4326a4:	b.hi	4326cc <nftw@plt+0x2f9dc>  // b.pmore
  4326a8:	ldr	x0, [x0, #16]
  4326ac:	mov	w20, #0x1                   	// #1
  4326b0:	add	x0, x0, x1
  4326b4:	sub	x1, x2, x1
  4326b8:	stp	x0, x1, [x19, #16]
  4326bc:	mov	w0, w20
  4326c0:	ldp	x19, x20, [sp, #16]
  4326c4:	ldp	x29, x30, [sp], #32
  4326c8:	ret
  4326cc:	ldr	w20, [x0, #56]
  4326d0:	cbnz	w20, 4326ec <nftw@plt+0x2f9fc>
  4326d4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4326d8:	add	x1, x1, #0x3c1
  4326dc:	bl	4322ac <nftw@plt+0x2f5bc>
  4326e0:	mov	w0, #0x1                   	// #1
  4326e4:	str	w0, [x19, #56]
  4326e8:	b	4326bc <nftw@plt+0x2f9cc>
  4326ec:	mov	w20, #0x0                   	// #0
  4326f0:	b	4326bc <nftw@plt+0x2f9cc>
  4326f4:	stp	x29, x30, [sp, #-32]!
  4326f8:	mov	x1, #0x4                   	// #4
  4326fc:	mov	x29, sp
  432700:	stp	x19, x20, [sp, #16]
  432704:	mov	x19, x0
  432708:	ldr	x20, [x0, #16]
  43270c:	bl	43268c <nftw@plt+0x2f99c>
  432710:	cbz	w0, 432730 <nftw@plt+0x2fa40>
  432714:	ldr	w1, [x19, #32]
  432718:	ldr	w0, [x20]
  43271c:	cbz	w1, 432724 <nftw@plt+0x2fa34>
  432720:	rev	w0, w0
  432724:	ldp	x19, x20, [sp, #16]
  432728:	ldp	x29, x30, [sp], #32
  43272c:	ret
  432730:	mov	w0, #0x0                   	// #0
  432734:	b	432724 <nftw@plt+0x2fa34>
  432738:	stp	x29, x30, [sp, #-32]!
  43273c:	mov	x1, #0x8                   	// #8
  432740:	mov	x29, sp
  432744:	stp	x19, x20, [sp, #16]
  432748:	mov	x19, x0
  43274c:	ldr	x20, [x0, #16]
  432750:	bl	43268c <nftw@plt+0x2f99c>
  432754:	cbz	w0, 432774 <nftw@plt+0x2fa84>
  432758:	ldr	w1, [x19, #32]
  43275c:	ldr	x0, [x20]
  432760:	cbz	w1, 432768 <nftw@plt+0x2fa78>
  432764:	rev	x0, x0
  432768:	ldp	x19, x20, [sp, #16]
  43276c:	ldp	x29, x30, [sp], #32
  432770:	ret
  432774:	mov	x0, #0x0                   	// #0
  432778:	b	432768 <nftw@plt+0x2fa78>
  43277c:	cbz	w1, 432784 <nftw@plt+0x2fa94>
  432780:	b	432738 <nftw@plt+0x2fa48>
  432784:	stp	x29, x30, [sp, #-16]!
  432788:	mov	x29, sp
  43278c:	bl	4326f4 <nftw@plt+0x2fa04>
  432790:	mov	w0, w0
  432794:	ldp	x29, x30, [sp], #16
  432798:	ret
  43279c:	stp	x29, x30, [sp, #-32]!
  4327a0:	mov	x1, #0x2                   	// #2
  4327a4:	mov	x29, sp
  4327a8:	stp	x19, x20, [sp, #16]
  4327ac:	mov	x19, x0
  4327b0:	ldr	x20, [x0, #16]
  4327b4:	bl	43268c <nftw@plt+0x2f99c>
  4327b8:	cbz	w0, 4327e4 <nftw@plt+0x2faf4>
  4327bc:	ldrb	w1, [x20, #1]
  4327c0:	ldrb	w0, [x20]
  4327c4:	ldr	w3, [x19, #32]
  4327c8:	orr	w2, w1, w0, lsl #8
  4327cc:	cmp	w3, #0x0
  4327d0:	orr	w0, w0, w1, lsl #8
  4327d4:	csel	w0, w0, w2, eq  // eq = none
  4327d8:	ldp	x19, x20, [sp, #16]
  4327dc:	ldp	x29, x30, [sp], #32
  4327e0:	ret
  4327e4:	mov	w0, #0x0                   	// #0
  4327e8:	b	4327d8 <nftw@plt+0x2fae8>
  4327ec:	stp	x29, x30, [sp, #-32]!
  4327f0:	mov	x1, #0x1                   	// #1
  4327f4:	mov	x29, sp
  4327f8:	str	x19, [sp, #16]
  4327fc:	ldr	x19, [x0, #16]
  432800:	bl	43268c <nftw@plt+0x2f99c>
  432804:	cbz	w0, 432818 <nftw@plt+0x2fb28>
  432808:	ldrb	w0, [x19]
  43280c:	ldr	x19, [sp, #16]
  432810:	ldp	x29, x30, [sp], #32
  432814:	ret
  432818:	mov	w0, #0x0                   	// #0
  43281c:	b	43280c <nftw@plt+0x2fb1c>
  432820:	stp	x29, x30, [sp, #-16]!
  432824:	sub	w1, w1, #0x1
  432828:	cmp	w1, #0x7
  43282c:	mov	x29, sp
  432830:	b.hi	43287c <nftw@plt+0x2fb8c>  // b.pmore
  432834:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432838:	add	x2, x2, #0x324
  43283c:	ldrb	w1, [x2, w1, uxtw]
  432840:	adr	x2, 43284c <nftw@plt+0x2fb5c>
  432844:	add	x1, x2, w1, sxtb #2
  432848:	br	x1
  43284c:	bl	4327ec <nftw@plt+0x2fafc>
  432850:	and	x0, x0, #0xff
  432854:	ldp	x29, x30, [sp], #16
  432858:	ret
  43285c:	bl	43279c <nftw@plt+0x2faac>
  432860:	and	x0, x0, #0xffff
  432864:	b	432854 <nftw@plt+0x2fb64>
  432868:	bl	4326f4 <nftw@plt+0x2fa04>
  43286c:	mov	w0, w0
  432870:	b	432854 <nftw@plt+0x2fb64>
  432874:	ldp	x29, x30, [sp], #16
  432878:	b	432738 <nftw@plt+0x2fa48>
  43287c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432880:	add	x1, x1, #0x3d1
  432884:	bl	4322ac <nftw@plt+0x2f5bc>
  432888:	mov	x0, #0x0                   	// #0
  43288c:	b	432854 <nftw@plt+0x2fb64>
  432890:	stp	x29, x30, [sp, #-64]!
  432894:	mov	x29, sp
  432898:	stp	x19, x20, [sp, #16]
  43289c:	mov	x19, x0
  4328a0:	mov	x20, #0x0                   	// #0
  4328a4:	stp	x21, x22, [sp, #32]
  4328a8:	adrp	x22, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4328ac:	add	x22, x22, #0x3f2
  4328b0:	mov	w21, #0x0                   	// #0
  4328b4:	stp	x23, x24, [sp, #48]
  4328b8:	mov	w24, #0x0                   	// #0
  4328bc:	mov	x0, x19
  4328c0:	mov	x1, #0x1                   	// #1
  4328c4:	ldr	x23, [x19, #16]
  4328c8:	bl	43268c <nftw@plt+0x2f99c>
  4328cc:	cbz	w0, 432920 <nftw@plt+0x2fc30>
  4328d0:	ldrb	w23, [x23]
  4328d4:	cmp	w21, #0x3f
  4328d8:	b.hi	432908 <nftw@plt+0x2fc18>  // b.pmore
  4328dc:	and	x0, x23, #0x7f
  4328e0:	lsl	x0, x0, x21
  4328e4:	orr	x20, x20, x0
  4328e8:	add	w21, w21, #0x7
  4328ec:	tbnz	w23, #7, 4328bc <nftw@plt+0x2fbcc>
  4328f0:	mov	x0, x20
  4328f4:	ldp	x19, x20, [sp, #16]
  4328f8:	ldp	x21, x22, [sp, #32]
  4328fc:	ldp	x23, x24, [sp, #48]
  432900:	ldp	x29, x30, [sp], #64
  432904:	ret
  432908:	cbnz	w24, 4328e8 <nftw@plt+0x2fbf8>
  43290c:	mov	x1, x22
  432910:	mov	x0, x19
  432914:	mov	w24, #0x1                   	// #1
  432918:	bl	4322ac <nftw@plt+0x2f5bc>
  43291c:	b	4328e8 <nftw@plt+0x2fbf8>
  432920:	mov	x20, #0x0                   	// #0
  432924:	b	4328f0 <nftw@plt+0x2fc00>
  432928:	stp	x29, x30, [sp, #-64]!
  43292c:	mov	x29, sp
  432930:	stp	x21, x22, [sp, #32]
  432934:	mov	x21, x0
  432938:	stp	x23, x24, [sp, #48]
  43293c:	adrp	x23, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432940:	add	x23, x23, #0x3eb
  432944:	mov	w24, #0x0                   	// #0
  432948:	stp	x19, x20, [sp, #16]
  43294c:	mov	w20, #0x0                   	// #0
  432950:	mov	x19, #0x0                   	// #0
  432954:	mov	x0, x21
  432958:	mov	x1, #0x1                   	// #1
  43295c:	ldr	x22, [x21, #16]
  432960:	bl	43268c <nftw@plt+0x2f99c>
  432964:	cbz	w0, 4329d0 <nftw@plt+0x2fce0>
  432968:	ldrb	w22, [x22]
  43296c:	cmp	w20, #0x3f
  432970:	b.hi	4329b8 <nftw@plt+0x2fcc8>  // b.pmore
  432974:	and	x0, x22, #0x7f
  432978:	lsl	x0, x0, x20
  43297c:	orr	x19, x19, x0
  432980:	add	w20, w20, #0x7
  432984:	tbnz	w22, #7, 432954 <nftw@plt+0x2fc64>
  432988:	tbz	w22, #6, 4329a0 <nftw@plt+0x2fcb0>
  43298c:	cmp	w20, #0x3f
  432990:	b.hi	4329a0 <nftw@plt+0x2fcb0>  // b.pmore
  432994:	mov	x0, #0xffffffffffffffff    	// #-1
  432998:	lsl	x20, x0, x20
  43299c:	orr	x19, x19, x20
  4329a0:	mov	x0, x19
  4329a4:	ldp	x19, x20, [sp, #16]
  4329a8:	ldp	x21, x22, [sp, #32]
  4329ac:	ldp	x23, x24, [sp, #48]
  4329b0:	ldp	x29, x30, [sp], #64
  4329b4:	ret
  4329b8:	cbnz	w24, 432980 <nftw@plt+0x2fc90>
  4329bc:	mov	x1, x23
  4329c0:	mov	x0, x21
  4329c4:	mov	w24, #0x1                   	// #1
  4329c8:	bl	4322ac <nftw@plt+0x2f5bc>
  4329cc:	b	432980 <nftw@plt+0x2fc90>
  4329d0:	mov	x0, #0x0                   	// #0
  4329d4:	b	4329a4 <nftw@plt+0x2fcb4>
  4329d8:	stp	x29, x30, [sp, #-32]!
  4329dc:	mov	x29, sp
  4329e0:	stp	x19, x20, [sp, #16]
  4329e4:	mov	x19, x0
  4329e8:	ldp	x20, x1, [x0, #16]
  4329ec:	mov	x0, x20
  4329f0:	bl	402680 <strnlen@plt>
  4329f4:	add	x1, x0, #0x1
  4329f8:	mov	x0, x19
  4329fc:	bl	43268c <nftw@plt+0x2f99c>
  432a00:	cmp	w0, #0x0
  432a04:	csel	x0, x20, xzr, ne  // ne = any
  432a08:	ldp	x19, x20, [sp, #16]
  432a0c:	ldp	x29, x30, [sp], #32
  432a10:	ret
  432a14:	stp	x29, x30, [sp, #-96]!
  432a18:	mov	x29, sp
  432a1c:	stp	x19, x20, [sp, #16]
  432a20:	mov	x20, x1
  432a24:	ldr	x19, [sp, #96]
  432a28:	stp	x21, x22, [sp, #32]
  432a2c:	mov	w21, w2
  432a30:	mov	x22, x7
  432a34:	stp	x23, x24, [sp, #48]
  432a38:	mov	x23, x5
  432a3c:	mov	x24, x6
  432a40:	stp	x25, x26, [sp, #64]
  432a44:	mov	w26, w3
  432a48:	mov	w25, w4
  432a4c:	str	x27, [sp, #80]
  432a50:	adrp	x27, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432a54:	add	x27, x27, #0x32c
  432a58:	stp	xzr, xzr, [x19]
  432a5c:	cmp	w0, #0x20
  432a60:	b.hi	432a84 <nftw@plt+0x2fd94>  // b.pmore
  432a64:	cbz	w0, 432aa4 <nftw@plt+0x2fdb4>
  432a68:	sub	w0, w0, #0x1
  432a6c:	cmp	w0, #0x1f
  432a70:	b.hi	432aa4 <nftw@plt+0x2fdb4>  // b.pmore
  432a74:	ldrh	w0, [x27, w0, uxtw #1]
  432a78:	adr	x1, 432a84 <nftw@plt+0x2fd94>
  432a7c:	add	x0, x1, w0, sxth #2
  432a80:	br	x0
  432a84:	mov	w1, #0x1f20                	// #7968
  432a88:	cmp	w0, w1
  432a8c:	b.eq	432d00 <nftw@plt+0x30010>  // b.none
  432a90:	b.hi	432ab0 <nftw@plt+0x2fdc0>  // b.pmore
  432a94:	mov	w1, #0xffffe0ff            	// #-7937
  432a98:	add	w0, w0, w1
  432a9c:	cmp	w0, #0x1
  432aa0:	b.ls	432cf8 <nftw@plt+0x30008>  // b.plast
  432aa4:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432aa8:	add	x1, x1, #0x448
  432aac:	b	432c40 <nftw@plt+0x2ff50>
  432ab0:	mov	w1, #0x1f21                	// #7969
  432ab4:	cmp	w0, w1
  432ab8:	b.ne	432aa4 <nftw@plt+0x2fdb4>  // b.any
  432abc:	mov	w1, w21
  432ac0:	mov	x0, x20
  432ac4:	bl	43277c <nftw@plt+0x2fa8c>
  432ac8:	cbz	x22, 432d14 <nftw@plt+0x30024>
  432acc:	ldr	x1, [x22, #112]
  432ad0:	cmp	x1, x0
  432ad4:	b.hi	432d2c <nftw@plt+0x3003c>  // b.pmore
  432ad8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432adc:	add	x1, x1, #0x426
  432ae0:	b	432c40 <nftw@plt+0x2ff50>
  432ae4:	mov	w21, #0x1                   	// #1
  432ae8:	str	w21, [x19]
  432aec:	mov	w1, w25
  432af0:	mov	x0, x20
  432af4:	bl	432820 <nftw@plt+0x2fb30>
  432af8:	b	432c1c <nftw@plt+0x2ff2c>
  432afc:	mov	w0, #0xa                   	// #10
  432b00:	str	w0, [x19]
  432b04:	mov	x0, x20
  432b08:	bl	43279c <nftw@plt+0x2faac>
  432b0c:	and	x1, x0, #0xffff
  432b10:	mov	x0, x20
  432b14:	ldp	x19, x20, [sp, #16]
  432b18:	ldp	x21, x22, [sp, #32]
  432b1c:	ldp	x23, x24, [sp, #48]
  432b20:	ldp	x25, x26, [sp, #64]
  432b24:	ldr	x27, [sp, #80]
  432b28:	ldp	x29, x30, [sp], #96
  432b2c:	b	43268c <nftw@plt+0x2f99c>
  432b30:	mov	w0, #0xa                   	// #10
  432b34:	str	w0, [x19]
  432b38:	mov	x0, x20
  432b3c:	bl	4326f4 <nftw@plt+0x2fa04>
  432b40:	mov	w1, w0
  432b44:	b	432b10 <nftw@plt+0x2fe20>
  432b48:	mov	w0, #0x2                   	// #2
  432b4c:	str	w0, [x19]
  432b50:	mov	x0, x20
  432b54:	bl	43279c <nftw@plt+0x2faac>
  432b58:	and	x0, x0, #0xffff
  432b5c:	b	432c1c <nftw@plt+0x2ff2c>
  432b60:	mov	w0, #0x2                   	// #2
  432b64:	str	w0, [x19]
  432b68:	mov	x0, x20
  432b6c:	bl	4326f4 <nftw@plt+0x2fa04>
  432b70:	mov	w0, w0
  432b74:	b	432c1c <nftw@plt+0x2ff2c>
  432b78:	mov	w0, #0x2                   	// #2
  432b7c:	str	w0, [x19]
  432b80:	mov	x0, x20
  432b84:	bl	432738 <nftw@plt+0x2fa48>
  432b88:	b	432c1c <nftw@plt+0x2ff2c>
  432b8c:	mov	w0, #0x4                   	// #4
  432b90:	str	w0, [x19]
  432b94:	mov	x0, x20
  432b98:	bl	4329d8 <nftw@plt+0x2fce8>
  432b9c:	cmp	x0, #0x0
  432ba0:	str	x0, [x19, #8]
  432ba4:	cset	w0, ne  // ne = any
  432ba8:	ldp	x19, x20, [sp, #16]
  432bac:	ldp	x21, x22, [sp, #32]
  432bb0:	ldp	x23, x24, [sp, #48]
  432bb4:	ldp	x25, x26, [sp, #64]
  432bb8:	ldr	x27, [sp, #80]
  432bbc:	ldp	x29, x30, [sp], #96
  432bc0:	ret
  432bc4:	mov	w0, #0xa                   	// #10
  432bc8:	str	w0, [x19]
  432bcc:	mov	x0, x20
  432bd0:	bl	432890 <nftw@plt+0x2fba0>
  432bd4:	mov	x1, x0
  432bd8:	b	432b10 <nftw@plt+0x2fe20>
  432bdc:	mov	w0, #0xa                   	// #10
  432be0:	str	w0, [x19]
  432be4:	mov	x0, x20
  432be8:	bl	4327ec <nftw@plt+0x2fafc>
  432bec:	and	x1, x0, #0xff
  432bf0:	b	432b10 <nftw@plt+0x2fe20>
  432bf4:	mov	w0, #0x2                   	// #2
  432bf8:	str	w0, [x19]
  432bfc:	mov	x0, x20
  432c00:	bl	4327ec <nftw@plt+0x2fafc>
  432c04:	and	x0, x0, #0xff
  432c08:	b	432c1c <nftw@plt+0x2ff2c>
  432c0c:	mov	w0, #0x3                   	// #3
  432c10:	str	w0, [x19]
  432c14:	mov	x0, x20
  432c18:	bl	432928 <nftw@plt+0x2fc38>
  432c1c:	str	x0, [x19, #8]
  432c20:	b	432d18 <nftw@plt+0x30028>
  432c24:	mov	w1, w21
  432c28:	mov	x0, x20
  432c2c:	bl	43277c <nftw@plt+0x2fa8c>
  432c30:	cmp	x24, x0
  432c34:	b.hi	432c50 <nftw@plt+0x2ff60>  // b.pmore
  432c38:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432c3c:	add	x1, x1, #0x40c
  432c40:	mov	x0, x20
  432c44:	bl	4322ac <nftw@plt+0x2f5bc>
  432c48:	mov	w0, #0x0                   	// #0
  432c4c:	b	432ba8 <nftw@plt+0x2feb8>
  432c50:	mov	w1, #0x4                   	// #4
  432c54:	add	x0, x23, x0
  432c58:	str	w1, [x19]
  432c5c:	b	432c1c <nftw@plt+0x2ff2c>
  432c60:	mov	w0, #0x2                   	// #2
  432c64:	str	w0, [x19]
  432c68:	mov	x0, x20
  432c6c:	bl	432890 <nftw@plt+0x2fba0>
  432c70:	b	432c1c <nftw@plt+0x2ff2c>
  432c74:	mov	w0, #0x6                   	// #6
  432c78:	str	w0, [x19]
  432c7c:	cmp	w26, #0x2
  432c80:	b.eq	432aec <nftw@plt+0x2fdfc>  // b.none
  432c84:	mov	w1, w21
  432c88:	mov	x0, x20
  432c8c:	bl	43277c <nftw@plt+0x2fa8c>
  432c90:	b	432c1c <nftw@plt+0x2ff2c>
  432c94:	mov	w0, #0x5                   	// #5
  432c98:	b	432bf8 <nftw@plt+0x2ff08>
  432c9c:	mov	w0, #0x5                   	// #5
  432ca0:	b	432b4c <nftw@plt+0x2fe5c>
  432ca4:	mov	w0, #0x5                   	// #5
  432ca8:	b	432b64 <nftw@plt+0x2fe74>
  432cac:	mov	w0, #0x5                   	// #5
  432cb0:	b	432b7c <nftw@plt+0x2fe8c>
  432cb4:	mov	w0, #0x5                   	// #5
  432cb8:	b	432c64 <nftw@plt+0x2ff74>
  432cbc:	mov	x0, x20
  432cc0:	bl	432890 <nftw@plt+0x2fba0>
  432cc4:	b	432a58 <nftw@plt+0x2fd68>
  432cc8:	mov	w0, #0x8                   	// #8
  432ccc:	str	w0, [x19]
  432cd0:	b	432c84 <nftw@plt+0x2ff94>
  432cd4:	mov	w0, #0xb                   	// #11
  432cd8:	b	432bc8 <nftw@plt+0x2fed8>
  432cdc:	mov	w0, #0x2                   	// #2
  432ce0:	str	w0, [x19]
  432ce4:	mov	x0, #0x1                   	// #1
  432ce8:	str	x0, [x19, #8]
  432cec:	b	432ba8 <nftw@plt+0x2feb8>
  432cf0:	mov	w0, #0x9                   	// #9
  432cf4:	b	432b7c <nftw@plt+0x2fe8c>
  432cf8:	mov	w0, #0x8                   	// #8
  432cfc:	b	432c64 <nftw@plt+0x2ff74>
  432d00:	mov	w1, w21
  432d04:	mov	x0, x20
  432d08:	bl	43277c <nftw@plt+0x2fa8c>
  432d0c:	str	x0, [x19, #8]
  432d10:	cbnz	x22, 432d20 <nftw@plt+0x30030>
  432d14:	str	wzr, [x19]
  432d18:	mov	w0, #0x1                   	// #1
  432d1c:	b	432ba8 <nftw@plt+0x2feb8>
  432d20:	mov	w0, #0x7                   	// #7
  432d24:	str	w0, [x19]
  432d28:	b	432d18 <nftw@plt+0x30028>
  432d2c:	mov	w1, #0x4                   	// #4
  432d30:	str	w1, [x19]
  432d34:	ldr	x1, [x22, #104]
  432d38:	add	x0, x1, x0
  432d3c:	b	432c1c <nftw@plt+0x2ff2c>
  432d40:	sub	sp, sp, #0x170
  432d44:	stp	x29, x30, [sp, #48]
  432d48:	add	x29, sp, #0x30
  432d4c:	stp	x21, x22, [sp, #80]
  432d50:	ldp	x21, x22, [sp, #376]
  432d54:	stp	x19, x20, [sp, #64]
  432d58:	mov	x20, x2
  432d5c:	ldr	x19, [sp, #392]
  432d60:	stp	x23, x24, [sp, #96]
  432d64:	add	x23, sp, #0xf0
  432d68:	stp	x25, x26, [sp, #112]
  432d6c:	mov	x25, x0
  432d70:	mov	x26, x1
  432d74:	stp	x27, x28, [sp, #128]
  432d78:	add	x27, sp, #0x130
  432d7c:	stp	x5, x6, [sp, #160]
  432d80:	stp	x3, x4, [sp, #176]
  432d84:	str	w7, [sp, #224]
  432d88:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  432d8c:	add	x0, x0, #0x36c
  432d90:	str	x0, [sp, #192]
  432d94:	ldr	x0, [x20, #24]
  432d98:	cbz	x0, 432dac <nftw@plt+0x300bc>
  432d9c:	mov	x0, x20
  432da0:	bl	432890 <nftw@plt+0x2fba0>
  432da4:	mov	x1, x0
  432da8:	cbnz	x0, 432dd0 <nftw@plt+0x300e0>
  432dac:	mov	w0, #0x1                   	// #1
  432db0:	ldp	x29, x30, [sp, #48]
  432db4:	ldp	x19, x20, [sp, #64]
  432db8:	ldp	x21, x22, [sp, #80]
  432dbc:	ldp	x23, x24, [sp, #96]
  432dc0:	ldp	x25, x26, [sp, #112]
  432dc4:	ldp	x27, x28, [sp, #128]
  432dc8:	add	sp, sp, #0x170
  432dcc:	ret
  432dd0:	mov	x3, x22
  432dd4:	mov	x2, x21
  432dd8:	add	x0, x19, #0x58
  432ddc:	bl	432478 <nftw@plt+0x2f788>
  432de0:	mov	x28, x0
  432de4:	cbnz	x0, 432df0 <nftw@plt+0x30100>
  432de8:	mov	w0, #0x0                   	// #0
  432dec:	b	432db0 <nftw@plt+0x300c0>
  432df0:	ldr	x0, [sp, #408]
  432df4:	cbz	x0, 432e04 <nftw@plt+0x30114>
  432df8:	ldr	x1, [sp, #408]
  432dfc:	ldr	w0, [x28, #8]
  432e00:	str	w0, [x1]
  432e04:	mov	x11, #0x0                   	// #0
  432e08:	mov	x9, #0x0                   	// #0
  432e0c:	mov	w12, #0x0                   	// #0
  432e10:	mov	x10, #0x0                   	// #0
  432e14:	mov	x24, #0x0                   	// #0
  432e18:	stp	wzr, wzr, [sp, #148]
  432e1c:	str	wzr, [sp, #156]
  432e20:	ldr	x0, [x28, #16]
  432e24:	cmp	x0, x11
  432e28:	b.hi	432e80 <nftw@plt+0x30190>  // b.pmore
  432e2c:	ldr	w0, [x28, #8]
  432e30:	cmp	w0, #0x2e
  432e34:	ccmp	w0, #0x11, #0x4, ne  // ne = any
  432e38:	b.eq	432ff8 <nftw@plt+0x30308>  // b.none
  432e3c:	ldr	w0, [x28, #12]
  432e40:	cbz	w0, 432d94 <nftw@plt+0x300a4>
  432e44:	ldp	x5, x6, [sp, #160]
  432e48:	stp	x21, x22, [sp, #8]
  432e4c:	ldr	w7, [sp, #224]
  432e50:	ldp	x3, x4, [sp, #176]
  432e54:	str	xzr, [sp, #40]
  432e58:	ldr	x0, [sp, #400]
  432e5c:	stp	x19, x0, [sp, #24]
  432e60:	mov	x2, x20
  432e64:	ldr	x0, [sp, #368]
  432e68:	str	x0, [sp]
  432e6c:	mov	x1, x26
  432e70:	mov	x0, x25
  432e74:	bl	432d40 <nftw@plt+0x30050>
  432e78:	cbnz	w0, 432d88 <nftw@plt+0x30098>
  432e7c:	b	432de8 <nftw@plt+0x300f8>
  432e80:	ldr	x0, [x28, #24]
  432e84:	str	x27, [sp]
  432e88:	ldp	x5, x6, [sp, #176]
  432e8c:	lsl	x13, x11, #3
  432e90:	add	x0, x0, x11, lsl #3
  432e94:	ldr	w4, [x19, #48]
  432e98:	ldp	w3, w2, [x19, #40]
  432e9c:	mov	x1, x20
  432ea0:	ldr	w0, [x0, #4]
  432ea4:	ldr	x7, [sp, #368]
  432ea8:	stp	x11, x13, [sp, #200]
  432eac:	str	x10, [sp, #216]
  432eb0:	str	w12, [sp, #228]
  432eb4:	str	x9, [sp, #232]
  432eb8:	bl	432a14 <nftw@plt+0x2fd24>
  432ebc:	cbz	w0, 432db0 <nftw@plt+0x300c0>
  432ec0:	ldp	x11, x13, [sp, #200]
  432ec4:	ldr	x0, [x28, #24]
  432ec8:	ldr	w12, [sp, #228]
  432ecc:	ldr	x10, [sp, #216]
  432ed0:	ldr	w0, [x0, x13]
  432ed4:	ldr	x9, [sp, #232]
  432ed8:	cmp	w0, #0x1b
  432edc:	b.hi	432f18 <nftw@plt+0x30228>  // b.pmore
  432ee0:	cmp	w0, #0xf
  432ee4:	b.hi	432ef8 <nftw@plt+0x30208>  // b.pmore
  432ee8:	cmp	w0, #0x3
  432eec:	b.eq	432fb0 <nftw@plt+0x302c0>  // b.none
  432ef0:	add	x11, x11, #0x1
  432ef4:	b	432e20 <nftw@plt+0x30130>
  432ef8:	sub	w0, w0, #0x10
  432efc:	cmp	w0, #0xb
  432f00:	b.hi	432ef0 <nftw@plt+0x30200>  // b.pmore
  432f04:	ldr	x1, [sp, #192]
  432f08:	ldrb	w0, [x1, w0, uxtw]
  432f0c:	adr	x1, 432f18 <nftw@plt+0x30228>
  432f10:	add	x0, x1, w0, sxtb #2
  432f14:	br	x0
  432f18:	cmp	w0, #0x55
  432f1c:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432f20:	ldr	w0, [sp, #304]
  432f24:	cmp	w0, #0x2
  432f28:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  432f2c:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432f30:	mov	w0, #0x1                   	// #1
  432f34:	str	w0, [sp, #156]
  432f38:	ldr	x9, [sp, #312]
  432f3c:	b	432ef0 <nftw@plt+0x30200>
  432f40:	ldr	w0, [sp, #304]
  432f44:	cmp	w0, #0x1
  432f48:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432f4c:	str	w0, [sp, #152]
  432f50:	ldr	x24, [sp, #312]
  432f54:	b	432ef0 <nftw@plt+0x30200>
  432f58:	ldr	w0, [sp, #304]
  432f5c:	cmp	w0, #0x1
  432f60:	b.ne	432f70 <nftw@plt+0x30280>  // b.any
  432f64:	str	w0, [sp, #148]
  432f68:	ldr	x10, [sp, #312]
  432f6c:	b	432ef0 <nftw@plt+0x30200>
  432f70:	cmp	w0, #0x2
  432f74:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432f78:	mov	w12, #0x1                   	// #1
  432f7c:	str	w12, [sp, #148]
  432f80:	ldr	x10, [sp, #312]
  432f84:	b	432ef0 <nftw@plt+0x30200>
  432f88:	ldr	w0, [x28, #8]
  432f8c:	cmp	w0, #0x11
  432f90:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432f94:	ldr	w0, [sp, #304]
  432f98:	cmp	w0, #0x2
  432f9c:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  432fa0:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432fa4:	ldr	x0, [sp, #312]
  432fa8:	str	x0, [x19, #56]
  432fac:	b	432ef0 <nftw@plt+0x30200>
  432fb0:	ldr	w0, [x28, #8]
  432fb4:	cmp	w0, #0x11
  432fb8:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432fbc:	ldr	w0, [sp, #304]
  432fc0:	cmp	w0, #0x4
  432fc4:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432fc8:	ldr	x0, [sp, #312]
  432fcc:	str	x0, [x19, #64]
  432fd0:	b	432ef0 <nftw@plt+0x30200>
  432fd4:	ldr	w0, [x28, #8]
  432fd8:	cmp	w0, #0x11
  432fdc:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432fe0:	ldr	w0, [sp, #304]
  432fe4:	cmp	w0, #0x4
  432fe8:	b.ne	432ef0 <nftw@plt+0x30200>  // b.any
  432fec:	ldr	x0, [sp, #312]
  432ff0:	str	x0, [x19, #72]
  432ff4:	b	432ef0 <nftw@plt+0x30200>
  432ff8:	ldr	w0, [sp, #156]
  432ffc:	cbz	w0, 433120 <nftw@plt+0x30430>
  433000:	ldr	x0, [sp, #168]
  433004:	cmp	x9, x0
  433008:	b.cc	433024 <nftw@plt+0x30334>  // b.lo, b.ul, b.last
  43300c:	mov	x0, x22
  433010:	mov	w2, #0x0                   	// #0
  433014:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  433018:	add	x1, x1, #0x4f1
  43301c:	blr	x21
  433020:	b	432de8 <nftw@plt+0x300f8>
  433024:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  433028:	add	x0, x0, #0x9ce
  43302c:	str	x0, [sp, #304]
  433030:	ldr	x0, [sp, #160]
  433034:	str	x0, [sp, #312]
  433038:	stp	x21, x22, [sp, #344]
  43303c:	add	x0, x0, x9
  433040:	str	x0, [sp, #320]
  433044:	ldr	x0, [sp, #168]
  433048:	str	wzr, [sp, #360]
  43304c:	sub	x9, x0, x9
  433050:	ldr	w0, [sp, #224]
  433054:	str	x9, [sp, #328]
  433058:	str	w0, [sp, #336]
  43305c:	ldr	w0, [sp, #360]
  433060:	cbnz	w0, 432de8 <nftw@plt+0x300f8>
  433064:	ldr	w1, [x19, #48]
  433068:	mov	x0, x27
  43306c:	bl	432820 <nftw@plt+0x2fb30>
  433070:	mov	x2, x0
  433074:	ldr	w1, [x19, #48]
  433078:	mov	x0, x27
  43307c:	str	x2, [sp, #200]
  433080:	bl	432820 <nftw@plt+0x2fb30>
  433084:	mov	x3, x0
  433088:	ldr	x2, [sp, #200]
  43308c:	orr	x0, x2, x0
  433090:	cbz	x0, 4330f4 <nftw@plt+0x30404>
  433094:	ldr	w1, [x19, #48]
  433098:	mov	x0, x2
  43309c:	bl	431fcc <nftw@plt+0x2f2dc>
  4330a0:	ldr	x2, [sp, #200]
  4330a4:	cbnz	w0, 4330ec <nftw@plt+0x303fc>
  4330a8:	add	x0, sp, #0x200
  4330ac:	add	x2, x2, x24
  4330b0:	add	x3, x3, x24
  4330b4:	stp	x2, x3, [sp, #280]
  4330b8:	mov	x4, x22
  4330bc:	ldr	x5, [sp, #400]
  4330c0:	str	x19, [sp, #296]
  4330c4:	ldp	x0, x1, [x0, #-232]
  4330c8:	mov	x3, x21
  4330cc:	mov	x2, x23
  4330d0:	stp	x0, x1, [x23]
  4330d4:	mov	x1, x26
  4330d8:	mov	x0, x25
  4330dc:	str	x19, [x23, #16]
  4330e0:	bl	4321e0 <nftw@plt+0x2f4f0>
  4330e4:	cbnz	w0, 43305c <nftw@plt+0x3036c>
  4330e8:	b	432db0 <nftw@plt+0x300c0>
  4330ec:	mov	x24, x3
  4330f0:	b	43305c <nftw@plt+0x3036c>
  4330f4:	ldr	w0, [sp, #360]
  4330f8:	cbnz	w0, 432de8 <nftw@plt+0x300f8>
  4330fc:	ldr	w0, [x28, #8]
  433100:	cmp	w0, #0x11
  433104:	b.ne	432e3c <nftw@plt+0x3014c>  // b.any
  433108:	ldr	w0, [sp, #156]
  43310c:	cbnz	w0, 432dac <nftw@plt+0x300bc>
  433110:	ldp	w1, w0, [sp, #148]
  433114:	tst	w0, w1
  433118:	b.eq	432e3c <nftw@plt+0x3014c>  // b.none
  43311c:	b	432dac <nftw@plt+0x300bc>
  433120:	ldp	w1, w0, [sp, #148]
  433124:	tst	w0, w1
  433128:	b.eq	4330fc <nftw@plt+0x3040c>  // b.none
  43312c:	cbz	w12, 433134 <nftw@plt+0x30444>
  433130:	add	x10, x10, x24
  433134:	stp	x24, x10, [sp, #304]
  433138:	mov	x4, x22
  43313c:	mov	x3, x21
  433140:	ldr	x5, [sp, #400]
  433144:	str	x19, [sp, #320]
  433148:	ldp	x0, x1, [x27]
  43314c:	mov	x2, x23
  433150:	stp	x0, x1, [x23]
  433154:	mov	x1, x26
  433158:	mov	x0, x25
  43315c:	str	x19, [x23, #16]
  433160:	bl	4321e0 <nftw@plt+0x2f4f0>
  433164:	cbnz	w0, 4330fc <nftw@plt+0x3040c>
  433168:	b	432db0 <nftw@plt+0x300c0>
  43316c:	ldr	x3, [x0]
  433170:	ldr	x2, [x1]
  433174:	cmp	x3, x2
  433178:	b.cc	4331b0 <nftw@plt+0x304c0>  // b.lo, b.ul, b.last
  43317c:	b.hi	4331a8 <nftw@plt+0x304b8>  // b.pmore
  433180:	ldr	x3, [x0, #8]
  433184:	ldr	x2, [x1, #8]
  433188:	cmp	x3, x2
  43318c:	b.cc	4331a8 <nftw@plt+0x304b8>  // b.lo, b.ul, b.last
  433190:	b.hi	4331b0 <nftw@plt+0x304c0>  // b.pmore
  433194:	ldr	x0, [x0, #16]
  433198:	ldr	x1, [x1, #16]
  43319c:	ldr	x0, [x0]
  4331a0:	ldr	x1, [x1]
  4331a4:	b	402a00 <strcmp@plt>
  4331a8:	mov	w0, #0x1                   	// #1
  4331ac:	ret
  4331b0:	mov	w0, #0xffffffff            	// #-1
  4331b4:	b	4331ac <nftw@plt+0x304bc>
  4331b8:	sub	sp, sp, #0xd0
  4331bc:	stp	x29, x30, [sp, #16]
  4331c0:	add	x29, sp, #0x10
  4331c4:	stp	x21, x22, [sp, #48]
  4331c8:	mov	x21, x0
  4331cc:	ldr	x0, [x1, #16]
  4331d0:	stp	x19, x20, [sp, #32]
  4331d4:	stp	x23, x24, [sp, #64]
  4331d8:	cmp	x0, x2
  4331dc:	mov	x23, x3
  4331e0:	stp	x25, x26, [sp, #80]
  4331e4:	mov	x24, x4
  4331e8:	stp	x27, x28, [sp, #96]
  4331ec:	b.hi	433204 <nftw@plt+0x30514>  // b.pmore
  4331f0:	ldr	x4, [x1, #8]
  4331f4:	sub	x5, x2, x0
  4331f8:	mov	x20, x1
  4331fc:	cmp	x5, x4
  433200:	b.cc	433220 <nftw@plt+0x30530>  // b.lo, b.ul, b.last
  433204:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  433208:	mov	x0, x24
  43320c:	add	x1, x1, #0x460
  433210:	mov	w2, #0x0                   	// #0
  433214:	blr	x23
  433218:	mov	x19, #0x0                   	// #0
  43321c:	b	433334 <nftw@plt+0x30644>
  433220:	ldr	x1, [x21, #56]
  433224:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x1afa8>
  433228:	add	x3, x3, #0x9a8
  43322c:	stp	x3, x1, [sp, #144]
  433230:	add	x0, x0, x4
  433234:	ldr	x1, [x20]
  433238:	sub	x0, x0, x2
  43323c:	add	x26, sp, #0x90
  433240:	str	x0, [sp, #168]
  433244:	add	x1, x1, x5
  433248:	ldr	w0, [x21, #120]
  43324c:	str	x1, [sp, #160]
  433250:	str	w0, [sp, #176]
  433254:	mov	x0, x26
  433258:	stp	x23, x24, [sp, #184]
  43325c:	str	wzr, [sp, #200]
  433260:	bl	432890 <nftw@plt+0x2fba0>
  433264:	mov	x1, x0
  433268:	cbnz	x0, 433280 <nftw@plt+0x30590>
  43326c:	mov	x0, x26
  433270:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  433274:	add	x1, x1, #0x48e
  433278:	bl	4322ac <nftw@plt+0x2f5bc>
  43327c:	b	433218 <nftw@plt+0x30528>
  433280:	mov	x3, x24
  433284:	mov	x2, x23
  433288:	add	x0, x20, #0x58
  43328c:	bl	432478 <nftw@plt+0x2f788>
  433290:	mov	x22, x0
  433294:	cbz	x0, 433218 <nftw@plt+0x30528>
  433298:	add	x27, sp, #0x80
  43329c:	mov	x25, #0x0                   	// #0
  4332a0:	mov	x19, #0x0                   	// #0
  4332a4:	mov	w28, #0x2007                	// #8199
  4332a8:	ldr	x0, [x22, #16]
  4332ac:	cmp	x0, x25
  4332b0:	b.ls	433334 <nftw@plt+0x30644>  // b.plast
  4332b4:	ldr	x0, [x22, #24]
  4332b8:	lsl	x8, x25, #3
  4332bc:	ldr	x7, [x21, #8]
  4332c0:	mov	x1, x26
  4332c4:	add	x0, x0, x25, lsl #3
  4332c8:	str	x8, [sp, #120]
  4332cc:	ldp	x5, x6, [x21, #104]
  4332d0:	str	x27, [sp]
  4332d4:	ldr	w0, [x0, #4]
  4332d8:	ldp	w3, w2, [x20, #40]
  4332dc:	ldr	w4, [x20, #48]
  4332e0:	bl	432a14 <nftw@plt+0x2fd24>
  4332e4:	cbz	w0, 433218 <nftw@plt+0x30528>
  4332e8:	ldr	x0, [x22, #24]
  4332ec:	ldr	x8, [sp, #120]
  4332f0:	add	x1, x0, x8
  4332f4:	ldr	w0, [x0, x8]
  4332f8:	cmp	w0, #0x47
  4332fc:	b.eq	433370 <nftw@plt+0x30680>  // b.none
  433300:	b.hi	433314 <nftw@plt+0x30624>  // b.pmore
  433304:	cmp	w0, #0x3
  433308:	b.eq	433358 <nftw@plt+0x30668>  // b.none
  43330c:	add	x25, x25, #0x1
  433310:	b	4332a8 <nftw@plt+0x305b8>
  433314:	cmp	w0, #0x6e
  433318:	b.eq	433324 <nftw@plt+0x30634>  // b.none
  43331c:	cmp	w0, w28
  433320:	b.ne	43330c <nftw@plt+0x3061c>  // b.any
  433324:	ldr	w0, [sp, #128]
  433328:	cmp	w0, #0x4
  43332c:	b.ne	43330c <nftw@plt+0x3061c>  // b.any
  433330:	ldr	x19, [sp, #136]
  433334:	mov	x0, x19
  433338:	ldp	x29, x30, [sp, #16]
  43333c:	ldp	x19, x20, [sp, #32]
  433340:	ldp	x21, x22, [sp, #48]
  433344:	ldp	x23, x24, [sp, #64]
  433348:	ldp	x25, x26, [sp, #80]
  43334c:	ldp	x27, x28, [sp, #96]
  433350:	add	sp, sp, #0xd0
  433354:	ret
  433358:	cbnz	x19, 43330c <nftw@plt+0x3061c>
  43335c:	ldr	w0, [sp, #128]
  433360:	cmp	w0, #0x4
  433364:	b.ne	43330c <nftw@plt+0x3061c>  // b.any
  433368:	ldr	x19, [sp, #136]
  43336c:	b	43330c <nftw@plt+0x3061c>
  433370:	ldr	w0, [x1, #4]
  433374:	cmp	w0, #0x20
  433378:	b.eq	43330c <nftw@plt+0x3061c>  // b.none
  43337c:	mov	x4, x24
  433380:	mov	x3, x23
  433384:	mov	x2, x27
  433388:	mov	x1, x20
  43338c:	mov	x0, x21
  433390:	bl	4333a0 <nftw@plt+0x306b0>
  433394:	cmp	x0, #0x0
  433398:	csel	x19, x19, x0, eq  // eq = none
  43339c:	b	43330c <nftw@plt+0x3061c>
  4333a0:	stp	x29, x30, [sp, #-64]!
  4333a4:	mov	x29, sp
  4333a8:	stp	x19, x20, [sp, #16]
  4333ac:	mov	x19, x2
  4333b0:	ldr	w2, [x2]
  4333b4:	stp	x21, x22, [sp, #32]
  4333b8:	mov	x20, x0
  4333bc:	mov	x21, x3
  4333c0:	mov	x22, x4
  4333c4:	cmp	w2, #0x6
  4333c8:	b.ne	43342c <nftw@plt+0x3073c>  // b.any
  4333cc:	ldp	x1, x2, [x20, #40]
  4333d0:	adrp	x4, 432000 <nftw@plt+0x2f310>
  4333d4:	ldr	x0, [x19, #8]
  4333d8:	add	x4, x4, #0x20
  4333dc:	mov	x3, #0x8                   	// #8
  4333e0:	str	x0, [sp, #56]
  4333e4:	add	x0, sp, #0x38
  4333e8:	bl	402880 <bsearch@plt>
  4333ec:	cbz	x0, 4333fc <nftw@plt+0x3070c>
  4333f0:	ldr	x1, [x0]
  4333f4:	cbnz	x1, 43340c <nftw@plt+0x3071c>
  4333f8:	mov	x0, #0x0                   	// #0
  4333fc:	ldp	x19, x20, [sp, #16]
  433400:	ldp	x21, x22, [sp, #32]
  433404:	ldp	x29, x30, [sp], #64
  433408:	ret
  43340c:	ldr	x2, [x19, #8]
  433410:	mov	x4, x22
  433414:	ldr	x0, [x1, #24]
  433418:	mov	x3, x21
  43341c:	sub	x2, x2, x0
  433420:	mov	x0, x20
  433424:	bl	4331b8 <nftw@plt+0x304c8>
  433428:	b	4333fc <nftw@plt+0x3070c>
  43342c:	cmp	w2, #0x2
  433430:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  433434:	b.ne	433440 <nftw@plt+0x30750>  // b.any
  433438:	ldr	x2, [x19, #8]
  43343c:	b	433424 <nftw@plt+0x30734>
  433440:	cmp	w2, #0x7
  433444:	b.ne	4333f8 <nftw@plt+0x30708>  // b.any
  433448:	ldr	x0, [x0, #8]
  43344c:	adrp	x4, 432000 <nftw@plt+0x2f310>
  433450:	mov	x3, #0x8                   	// #8
  433454:	add	x4, x4, #0x20
  433458:	ldp	x1, x2, [x0, #40]
  43345c:	ldr	x0, [x19, #8]
  433460:	str	x0, [sp, #56]
  433464:	add	x0, sp, #0x38
  433468:	bl	402880 <bsearch@plt>
  43346c:	cbz	x0, 4333fc <nftw@plt+0x3070c>
  433470:	ldr	x1, [x0]
  433474:	cbz	x1, 4333f8 <nftw@plt+0x30708>
  433478:	ldr	x2, [x19, #8]
  43347c:	mov	x4, x22
  433480:	ldr	x0, [x1, #24]
  433484:	mov	x3, x21
  433488:	sub	x2, x2, x0
  43348c:	ldr	x0, [x20, #8]
  433490:	b	433424 <nftw@plt+0x30734>
  433494:	sub	sp, sp, #0x120
  433498:	stp	x29, x30, [sp, #16]
  43349c:	add	x29, sp, #0x10
  4334a0:	stp	x19, x20, [sp, #32]
  4334a4:	mov	x19, x6
  4334a8:	mov	x20, x7
  4334ac:	stp	x21, x22, [sp, #48]
  4334b0:	mov	x21, x1
  4334b4:	mov	x22, x2
  4334b8:	stp	x25, x26, [sp, #80]
  4334bc:	mov	x25, x4
  4334c0:	add	x26, sp, #0xe0
  4334c4:	stp	x23, x24, [sp, #64]
  4334c8:	mov	x24, x0
  4334cc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0xffa8>
  4334d0:	add	x0, x0, #0xe54
  4334d4:	stp	x27, x28, [sp, #96]
  4334d8:	stp	x3, x5, [sp, #128]
  4334dc:	str	x0, [sp, #160]
  4334e0:	ldr	x0, [x25, #24]
  4334e4:	cbz	x0, 4334f8 <nftw@plt+0x30808>
  4334e8:	mov	x0, x25
  4334ec:	bl	432890 <nftw@plt+0x2fba0>
  4334f0:	mov	x1, x0
  4334f4:	cbnz	x0, 43351c <nftw@plt+0x3082c>
  4334f8:	mov	w0, #0x1                   	// #1
  4334fc:	ldp	x29, x30, [sp, #16]
  433500:	ldp	x19, x20, [sp, #32]
  433504:	ldp	x21, x22, [sp, #48]
  433508:	ldp	x23, x24, [sp, #64]
  43350c:	ldp	x25, x26, [sp, #80]
  433510:	ldp	x27, x28, [sp, #96]
  433514:	add	sp, sp, #0x120
  433518:	ret
  43351c:	mov	x3, x20
  433520:	mov	x2, x19
  433524:	add	x0, x22, #0x58
  433528:	bl	432478 <nftw@plt+0x2f788>
  43352c:	mov	x23, x0
  433530:	cbnz	x0, 43353c <nftw@plt+0x3084c>
  433534:	mov	w0, #0x0                   	// #0
  433538:	b	4334fc <nftw@plt+0x3080c>
  43353c:	ldr	w0, [x0, #8]
  433540:	cmp	w0, #0x2e
  433544:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  433548:	b.eq	433a68 <nftw@plt+0x30d78>  // b.none
  43354c:	cmp	w0, #0x1d
  433550:	b.ne	433620 <nftw@plt+0x30930>  // b.any
  433554:	ldr	x0, [sp, #296]
  433558:	mov	x3, x20
  43355c:	mov	x2, x19
  433560:	mov	x1, #0x28                  	// #40
  433564:	str	x0, [sp, #120]
  433568:	mov	x0, x24
  43356c:	bl	42ec94 <nftw@plt+0x2bfa4>
  433570:	mov	x27, x0
  433574:	cbz	x0, 433534 <nftw@plt+0x30844>
  433578:	mov	w28, #0x1                   	// #1
  43357c:	stp	xzr, xzr, [x0]
  433580:	stp	xzr, xzr, [x0, #16]
  433584:	str	xzr, [x0, #32]
  433588:	mov	w10, #0x0                   	// #0
  43358c:	mov	x14, #0x0                   	// #0
  433590:	mov	w13, #0x0                   	// #0
  433594:	mov	x12, #0x0                   	// #0
  433598:	mov	x15, #0x0                   	// #0
  43359c:	mov	x11, #0x0                   	// #0
  4335a0:	stp	wzr, wzr, [sp, #148]
  4335a4:	str	wzr, [sp, #216]
  4335a8:	ldr	x0, [x23, #16]
  4335ac:	cmp	x0, x11
  4335b0:	b.hi	433634 <nftw@plt+0x30944>  // b.pmore
  4335b4:	cbz	w28, 4335dc <nftw@plt+0x308ec>
  4335b8:	ldr	x0, [x27]
  4335bc:	cbnz	x0, 43389c <nftw@plt+0x30bac>
  4335c0:	mov	w28, #0x0                   	// #0
  4335c4:	mov	x4, x20
  4335c8:	mov	x3, x19
  4335cc:	mov	x1, x27
  4335d0:	mov	x0, x24
  4335d4:	mov	x2, #0x28                  	// #40
  4335d8:	bl	42ebd8 <nftw@plt+0x2bee8>
  4335dc:	ldr	w0, [x23, #12]
  4335e0:	cbz	w0, 4334e0 <nftw@plt+0x307f0>
  4335e4:	cbnz	w28, 4339ec <nftw@plt+0x30cfc>
  4335e8:	ldp	x3, x5, [sp, #128]
  4335ec:	mov	x7, x20
  4335f0:	ldr	x0, [sp, #296]
  4335f4:	str	x0, [sp, #8]
  4335f8:	ldr	x0, [sp, #288]
  4335fc:	str	x0, [sp]
  433600:	mov	x6, x19
  433604:	mov	x4, x25
  433608:	mov	x2, x22
  43360c:	mov	x1, x21
  433610:	mov	x0, x24
  433614:	bl	433494 <nftw@plt+0x307a4>
  433618:	cbnz	w0, 4334e0 <nftw@plt+0x307f0>
  43361c:	b	433534 <nftw@plt+0x30844>
  433620:	ldr	x0, [sp, #288]
  433624:	mov	w28, #0x0                   	// #0
  433628:	mov	x27, #0x0                   	// #0
  43362c:	str	x0, [sp, #120]
  433630:	b	433588 <nftw@plt+0x30898>
  433634:	ldr	x0, [x23, #24]
  433638:	lsl	x18, x11, #3
  43363c:	ldp	w3, w2, [x22, #40]
  433640:	mov	x1, x25
  433644:	add	x0, x0, x11, lsl #3
  433648:	ldr	w4, [x22, #48]
  43364c:	ldr	x7, [x21, #8]
  433650:	stp	x11, x18, [sp, #168]
  433654:	ldp	x5, x6, [x21, #104]
  433658:	str	x26, [sp]
  43365c:	stp	x15, x12, [sp, #184]
  433660:	ldr	w0, [x0, #4]
  433664:	str	w13, [sp, #200]
  433668:	str	x14, [sp, #208]
  43366c:	str	w10, [sp, #220]
  433670:	bl	432a14 <nftw@plt+0x2fd24>
  433674:	cbz	w0, 433534 <nftw@plt+0x30844>
  433678:	ldr	w0, [x23, #8]
  43367c:	ldr	w13, [sp, #200]
  433680:	ldr	w10, [sp, #220]
  433684:	cmp	w0, #0x11
  433688:	ldp	x11, x18, [sp, #168]
  43368c:	ldp	x15, x12, [sp, #184]
  433690:	ldr	x14, [sp, #208]
  433694:	b.ne	4336bc <nftw@plt+0x309cc>  // b.any
  433698:	ldr	x0, [x23, #24]
  43369c:	ldr	w0, [x0, x18]
  4336a0:	cmp	w0, #0x11
  4336a4:	b.ne	4336bc <nftw@plt+0x309cc>  // b.any
  4336a8:	ldr	w0, [sp, #224]
  4336ac:	cmp	w0, #0x1
  4336b0:	b.ne	4336bc <nftw@plt+0x309cc>  // b.any
  4336b4:	ldr	x0, [sp, #232]
  4336b8:	str	x0, [sp, #128]
  4336bc:	cbz	w28, 4336f4 <nftw@plt+0x30a04>
  4336c0:	ldr	x0, [x23, #24]
  4336c4:	add	x1, x0, x18
  4336c8:	ldr	w0, [x0, x18]
  4336cc:	cmp	w0, #0x55
  4336d0:	b.eq	433880 <nftw@plt+0x30b90>  // b.none
  4336d4:	b.hi	433764 <nftw@plt+0x30a74>  // b.pmore
  4336d8:	cmp	w0, #0x12
  4336dc:	b.eq	433854 <nftw@plt+0x30b64>  // b.none
  4336e0:	b.hi	4336fc <nftw@plt+0x30a0c>  // b.pmore
  4336e4:	cmp	w0, #0x3
  4336e8:	b.eq	43381c <nftw@plt+0x30b2c>  // b.none
  4336ec:	cmp	w0, #0x11
  4336f0:	b.eq	43383c <nftw@plt+0x30b4c>  // b.none
  4336f4:	add	x11, x11, #0x1
  4336f8:	b	4335a8 <nftw@plt+0x308b8>
  4336fc:	cmp	w0, #0x31
  433700:	b.eq	43370c <nftw@plt+0x30a1c>  // b.none
  433704:	cmp	w0, #0x47
  433708:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  43370c:	cbnz	w10, 4336f4 <nftw@plt+0x30a04>
  433710:	ldr	w0, [x1, #4]
  433714:	cmp	w0, #0x20
  433718:	b.eq	43375c <nftw@plt+0x30a6c>  // b.none
  43371c:	mov	x4, x20
  433720:	mov	x3, x19
  433724:	mov	x2, x26
  433728:	mov	x1, x22
  43372c:	mov	x0, x21
  433730:	stp	x11, x15, [sp, #168]
  433734:	str	x12, [sp, #184]
  433738:	str	w13, [sp, #192]
  43373c:	str	x14, [sp, #200]
  433740:	bl	4333a0 <nftw@plt+0x306b0>
  433744:	ldr	w13, [sp, #192]
  433748:	ldp	x11, x15, [sp, #168]
  43374c:	ldr	x12, [sp, #184]
  433750:	ldr	x14, [sp, #200]
  433754:	cbz	x0, 43375c <nftw@plt+0x30a6c>
  433758:	str	x0, [x27]
  43375c:	mov	w10, #0x0                   	// #0
  433760:	b	4336f4 <nftw@plt+0x30a04>
  433764:	cmp	w0, #0x59
  433768:	b.eq	433804 <nftw@plt+0x30b14>  // b.none
  43376c:	b.hi	433798 <nftw@plt+0x30aa8>  // b.pmore
  433770:	cmp	w0, #0x58
  433774:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  433778:	ldr	w0, [sp, #224]
  43377c:	cmp	w0, #0x2
  433780:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  433784:	ldr	x0, [sp, #232]
  433788:	cbnz	x0, 4337c8 <nftw@plt+0x30ad8>
  43378c:	ldr	x0, [sp, #160]
  433790:	str	x0, [x27, #8]
  433794:	b	4336f4 <nftw@plt+0x30a04>
  433798:	cmp	w0, #0x6e
  43379c:	b.eq	4337ac <nftw@plt+0x30abc>  // b.none
  4337a0:	mov	w1, #0x2007                	// #8199
  4337a4:	cmp	w0, w1
  4337a8:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  4337ac:	ldr	w0, [sp, #224]
  4337b0:	cmp	w0, #0x4
  4337b4:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  4337b8:	ldr	x0, [sp, #232]
  4337bc:	mov	w10, w28
  4337c0:	str	x0, [x27]
  4337c4:	b	4336f4 <nftw@plt+0x30a04>
  4337c8:	ldr	x2, [sp, #136]
  4337cc:	sub	x1, x0, #0x1
  4337d0:	ldr	x2, [x2, #48]
  4337d4:	cmp	x1, x2
  4337d8:	b.cc	4337f0 <nftw@plt+0x30b00>  // b.lo, b.ul, b.last
  4337dc:	mov	x0, x25
  4337e0:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4337e4:	add	x1, x1, #0x4b7
  4337e8:	bl	4322ac <nftw@plt+0x2f5bc>
  4337ec:	b	433534 <nftw@plt+0x30844>
  4337f0:	ldr	x1, [sp, #136]
  4337f4:	ldr	x1, [x1, #56]
  4337f8:	add	x0, x1, x0, lsl #3
  4337fc:	ldur	x0, [x0, #-8]
  433800:	b	433790 <nftw@plt+0x30aa0>
  433804:	ldr	w0, [sp, #224]
  433808:	cmp	w0, #0x2
  43380c:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  433810:	ldr	x0, [sp, #232]
  433814:	str	w0, [x27, #16]
  433818:	b	4336f4 <nftw@plt+0x30a04>
  43381c:	ldr	x0, [x27]
  433820:	cbnz	x0, 4336f4 <nftw@plt+0x30a04>
  433824:	ldr	w0, [sp, #224]
  433828:	cmp	w0, #0x4
  43382c:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  433830:	ldr	x0, [sp, #232]
  433834:	str	x0, [x27]
  433838:	b	4336f4 <nftw@plt+0x30a04>
  43383c:	ldr	w0, [sp, #224]
  433840:	cmp	w0, #0x1
  433844:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  433848:	str	w28, [sp, #152]
  43384c:	ldr	x15, [sp, #232]
  433850:	b	4336f4 <nftw@plt+0x30a04>
  433854:	ldr	w0, [sp, #224]
  433858:	cmp	w0, #0x1
  43385c:	b.ne	43386c <nftw@plt+0x30b7c>  // b.any
  433860:	ldr	x12, [sp, #232]
  433864:	mov	w13, w28
  433868:	b	4336f4 <nftw@plt+0x30a04>
  43386c:	cmp	w0, #0x2
  433870:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  433874:	str	w28, [sp, #216]
  433878:	ldr	x12, [sp, #232]
  43387c:	b	433864 <nftw@plt+0x30b74>
  433880:	ldr	w0, [sp, #224]
  433884:	cmp	w0, #0x2
  433888:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  43388c:	b.ne	4336f4 <nftw@plt+0x30a04>  // b.any
  433890:	str	w28, [sp, #148]
  433894:	ldr	x14, [sp, #232]
  433898:	b	4336f4 <nftw@plt+0x30a04>
  43389c:	ldr	w0, [sp, #148]
  4338a0:	cbz	w0, 43398c <nftw@plt+0x30c9c>
  4338a4:	ldr	x0, [x21, #96]
  4338a8:	cmp	x14, x0
  4338ac:	b.cc	4338c8 <nftw@plt+0x30bd8>  // b.lo, b.ul, b.last
  4338b0:	mov	x0, x20
  4338b4:	mov	w2, #0x0                   	// #0
  4338b8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4338bc:	add	x1, x1, #0x4e8
  4338c0:	blr	x19
  4338c4:	b	433534 <nftw@plt+0x30844>
  4338c8:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  4338cc:	add	x1, x1, #0x9ce
  4338d0:	str	x1, [sp, #224]
  4338d4:	ldr	x1, [x21, #88]
  4338d8:	str	x1, [sp, #232]
  4338dc:	ldr	x28, [sp, #128]
  4338e0:	add	x1, x1, x14
  4338e4:	sub	x14, x0, x14
  4338e8:	ldr	w0, [x21, #120]
  4338ec:	stp	x1, x14, [sp, #240]
  4338f0:	str	w0, [sp, #256]
  4338f4:	stp	x19, x20, [sp, #264]
  4338f8:	str	wzr, [sp, #280]
  4338fc:	ldr	w0, [sp, #280]
  433900:	cbnz	w0, 433534 <nftw@plt+0x30844>
  433904:	ldr	w1, [x22, #48]
  433908:	mov	x0, x26
  43390c:	bl	432820 <nftw@plt+0x2fb30>
  433910:	mov	x3, x0
  433914:	ldr	w1, [x22, #48]
  433918:	mov	x0, x26
  43391c:	str	x3, [sp, #152]
  433920:	bl	432820 <nftw@plt+0x2fb30>
  433924:	mov	x4, x0
  433928:	ldr	x3, [sp, #152]
  43392c:	orr	x0, x3, x0
  433930:	cbz	x0, 43397c <nftw@plt+0x30c8c>
  433934:	ldr	w1, [x22, #48]
  433938:	mov	x0, x3
  43393c:	bl	431fcc <nftw@plt+0x2f2dc>
  433940:	ldr	x3, [sp, #152]
  433944:	cbnz	w0, 433974 <nftw@plt+0x30c84>
  433948:	ldr	x1, [x21, #16]
  43394c:	mov	x6, x20
  433950:	ldr	x7, [sp, #120]
  433954:	mov	x5, x19
  433958:	add	x4, x4, x28
  43395c:	add	x3, x3, x28
  433960:	mov	x2, x27
  433964:	mov	x0, x24
  433968:	bl	4325d0 <nftw@plt+0x2f8e0>
  43396c:	cbnz	w0, 4338fc <nftw@plt+0x30c0c>
  433970:	b	433534 <nftw@plt+0x30844>
  433974:	mov	x28, x4
  433978:	b	4338fc <nftw@plt+0x30c0c>
  43397c:	ldr	w0, [sp, #280]
  433980:	cbnz	w0, 433534 <nftw@plt+0x30844>
  433984:	ldr	w28, [sp, #148]
  433988:	b	4335dc <nftw@plt+0x308ec>
  43398c:	ldr	w0, [sp, #152]
  433990:	ands	w28, w0, w13
  433994:	b.eq	4339d0 <nftw@plt+0x30ce0>  // b.none
  433998:	ldr	w0, [sp, #216]
  43399c:	cbz	w0, 4339a4 <nftw@plt+0x30cb4>
  4339a0:	add	x12, x12, x15
  4339a4:	ldr	x1, [x21, #16]
  4339a8:	mov	x6, x20
  4339ac:	ldr	x7, [sp, #120]
  4339b0:	mov	x5, x19
  4339b4:	mov	x4, x12
  4339b8:	mov	x3, x15
  4339bc:	mov	x2, x27
  4339c0:	mov	x0, x24
  4339c4:	bl	4325d0 <nftw@plt+0x2f8e0>
  4339c8:	cbnz	w0, 4335dc <nftw@plt+0x308ec>
  4339cc:	b	433534 <nftw@plt+0x30844>
  4339d0:	mov	x4, x20
  4339d4:	mov	x3, x19
  4339d8:	mov	x1, x27
  4339dc:	mov	x0, x24
  4339e0:	mov	x2, #0x28                  	// #40
  4339e4:	bl	42ebd8 <nftw@plt+0x2bee8>
  4339e8:	b	4335dc <nftw@plt+0x308ec>
  4339ec:	ldp	x3, x5, [sp, #128]
  4339f0:	stp	xzr, xzr, [x26]
  4339f4:	mov	x7, x20
  4339f8:	stp	xzr, xzr, [x26, #16]
  4339fc:	mov	x6, x19
  433a00:	mov	x4, x25
  433a04:	ldr	x0, [sp, #288]
  433a08:	stp	x0, x26, [sp]
  433a0c:	mov	x2, x22
  433a10:	mov	x1, x21
  433a14:	mov	x0, x24
  433a18:	bl	433494 <nftw@plt+0x307a4>
  433a1c:	cbz	w0, 433534 <nftw@plt+0x30844>
  433a20:	ldr	x0, [sp, #248]
  433a24:	cbz	x0, 4334e0 <nftw@plt+0x307f0>
  433a28:	mov	x3, x20
  433a2c:	mov	x2, x19
  433a30:	mov	x1, x26
  433a34:	mov	x0, x24
  433a38:	bl	42ef10 <nftw@plt+0x2c220>
  433a3c:	cbz	w0, 433534 <nftw@plt+0x30844>
  433a40:	ldr	x1, [sp, #248]
  433a44:	adrp	x3, 433000 <nftw@plt+0x30310>
  433a48:	ldr	x23, [sp, #224]
  433a4c:	add	x3, x3, #0x16c
  433a50:	mov	x2, #0x18                  	// #24
  433a54:	mov	x0, x23
  433a58:	bl	434fc0 <nftw@plt+0x322d0>
  433a5c:	ldr	x0, [sp, #248]
  433a60:	stp	x23, x0, [x27, #24]
  433a64:	b	4334e0 <nftw@plt+0x307f0>
  433a68:	cmp	w0, #0x1d
  433a6c:	ldp	x1, x0, [sp, #288]
  433a70:	csel	x0, x0, x1, eq  // eq = none
  433a74:	b	433558 <nftw@plt+0x30868>
  433a78:	sub	sp, sp, #0x1d0
  433a7c:	stp	x29, x30, [sp, #16]
  433a80:	add	x29, sp, #0x10
  433a84:	str	x2, [sp, #232]
  433a88:	ldr	x2, [x1, #32]
  433a8c:	stp	x19, x20, [sp, #32]
  433a90:	stp	x21, x22, [sp, #48]
  433a94:	mov	x21, x0
  433a98:	mov	w0, #0x1                   	// #1
  433a9c:	stp	x23, x24, [sp, #64]
  433aa0:	mov	x23, x1
  433aa4:	stp	x25, x26, [sp, #80]
  433aa8:	stp	x27, x28, [sp, #96]
  433aac:	str	w0, [x6]
  433ab0:	str	x3, [sp, #144]
  433ab4:	str	x6, [sp, #168]
  433ab8:	cbz	x2, 433c48 <nftw@plt+0x30f58>
  433abc:	ldr	x1, [x1, #24]
  433ac0:	add	x0, sp, #0xe8
  433ac4:	mov	x24, x4
  433ac8:	mov	x22, x5
  433acc:	adrp	x4, 432000 <nftw@plt+0x2f310>
  433ad0:	mov	x3, #0x18                  	// #24
  433ad4:	add	x4, x4, #0x74
  433ad8:	str	x0, [sp, #176]
  433adc:	bl	402880 <bsearch@plt>
  433ae0:	mov	x20, x0
  433ae4:	cbz	x0, 433c48 <nftw@plt+0x30f58>
  433ae8:	ldp	x2, x3, [x23, #24]
  433aec:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  433af0:	ldr	x1, [sp, #232]
  433af4:	movk	x4, #0xaaab
  433af8:	sub	x0, x20, x2
  433afc:	asr	x0, x0, #3
  433b00:	mul	x0, x0, x4
  433b04:	add	x0, x0, #0x1
  433b08:	cmp	x0, x3
  433b0c:	b.cs	433b28 <nftw@plt+0x30e38>  // b.hs, b.nlast
  433b10:	ldr	x0, [x20, #24]
  433b14:	cmp	x0, x1
  433b18:	b.hi	433b28 <nftw@plt+0x30e38>  // b.pmore
  433b1c:	ldr	x0, [x20, #32]
  433b20:	cmp	x1, x0
  433b24:	b.cc	433c74 <nftw@plt+0x30f84>  // b.lo, b.ul, b.last
  433b28:	ldr	x0, [x20, #16]
  433b2c:	ldr	w3, [x21, #8]
  433b30:	ldr	x1, [x0, #104]
  433b34:	str	x0, [sp, #120]
  433b38:	ldr	x0, [x23, #24]
  433b3c:	cmp	x0, x20
  433b40:	b.cs	433b60 <nftw@plt+0x30e70>  // b.hs, b.nlast
  433b44:	ldur	x2, [x20, #-24]
  433b48:	ldr	x0, [sp, #232]
  433b4c:	cmp	x2, x0
  433b50:	b.hi	433b60 <nftw@plt+0x30e70>  // b.pmore
  433b54:	ldur	x2, [x20, #-16]
  433b58:	cmp	x0, x2
  433b5c:	b.cc	433c7c <nftw@plt+0x30f8c>  // b.lo, b.ul, b.last
  433b60:	ldr	w0, [x21, #8]
  433b64:	cbz	w0, 433b74 <nftw@plt+0x30e84>
  433b68:	ldr	x0, [sp, #120]
  433b6c:	add	x0, x0, #0x68
  433b70:	ldar	x1, [x0]
  433b74:	cbnz	x1, 43477c <nftw@plt+0x31a8c>
  433b78:	ldr	x0, [x20, #16]
  433b7c:	stp	xzr, xzr, [sp, #272]
  433b80:	stp	xzr, xzr, [sp, #288]
  433b84:	stp	xzr, xzr, [sp, #304]
  433b88:	stp	xzr, xzr, [sp, #320]
  433b8c:	str	x0, [sp, #152]
  433b90:	ldr	x2, [x0, #56]
  433b94:	stp	xzr, xzr, [sp, #240]
  433b98:	ldr	x0, [x23, #80]
  433b9c:	stp	xzr, xzr, [sp, #256]
  433ba0:	cmp	x2, x0
  433ba4:	b.cc	433c9c <nftw@plt+0x30fac>  // b.lo, b.ul, b.last
  433ba8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  433bac:	mov	x0, x22
  433bb0:	add	x1, x1, #0x50c
  433bb4:	mov	w2, #0x0                   	// #0
  433bb8:	blr	x24
  433bbc:	ldp	x1, x0, [sp, #248]
  433bc0:	mov	x3, x22
  433bc4:	mov	x2, x24
  433bc8:	mov	x19, #0x0                   	// #0
  433bcc:	mov	x26, #0x0                   	// #0
  433bd0:	mov	x25, #0x0                   	// #0
  433bd4:	add	x0, x0, x1
  433bd8:	add	x1, sp, #0xf0
  433bdc:	stp	xzr, x0, [sp, #248]
  433be0:	mov	x0, x21
  433be4:	bl	42ef10 <nftw@plt+0x2c220>
  433be8:	add	x1, sp, #0x110
  433bec:	mov	x0, x21
  433bf0:	mov	x3, x22
  433bf4:	mov	x2, x24
  433bf8:	bl	432300 <nftw@plt+0x2f610>
  433bfc:	mov	x1, #0xffffffffffffffff    	// #-1
  433c00:	mov	w0, #0x0                   	// #0
  433c04:	ldr	w2, [x21, #8]
  433c08:	cbnz	w2, 4345b8 <nftw@plt+0x318c8>
  433c0c:	ldr	x2, [sp, #120]
  433c10:	stp	x1, x26, [x2, #104]
  433c14:	stp	x19, x25, [x2, #120]
  433c18:	cmn	x1, #0x1
  433c1c:	b.ne	4345ec <nftw@plt+0x318fc>  // b.any
  433c20:	cbz	w0, 434784 <nftw@plt+0x31a94>
  433c24:	ldr	x3, [sp, #144]
  433c28:	mov	x5, x22
  433c2c:	ldr	x6, [sp, #168]
  433c30:	mov	x4, x24
  433c34:	ldr	x2, [sp, #232]
  433c38:	mov	x1, x23
  433c3c:	mov	x0, x21
  433c40:	bl	433a78 <nftw@plt+0x30d88>
  433c44:	b	433c54 <nftw@plt+0x30f64>
  433c48:	ldr	x0, [sp, #168]
  433c4c:	str	wzr, [x0]
  433c50:	mov	w0, #0x0                   	// #0
  433c54:	ldp	x29, x30, [sp, #16]
  433c58:	ldp	x19, x20, [sp, #32]
  433c5c:	ldp	x21, x22, [sp, #48]
  433c60:	ldp	x23, x24, [sp, #64]
  433c64:	ldp	x25, x26, [sp, #80]
  433c68:	ldp	x27, x28, [sp, #96]
  433c6c:	add	sp, sp, #0x1d0
  433c70:	ret
  433c74:	add	x20, x20, #0x18
  433c78:	b	433af8 <nftw@plt+0x30e08>
  433c7c:	cbz	w3, 433c8c <nftw@plt+0x30f9c>
  433c80:	ldr	x0, [sp, #120]
  433c84:	add	x0, x0, #0x68
  433c88:	ldar	x1, [x0]
  433c8c:	cmn	x1, #0x1
  433c90:	b.ne	433b60 <nftw@plt+0x30e70>  // b.any
  433c94:	sub	x20, x20, #0x18
  433c98:	b	433b28 <nftw@plt+0x30e38>
  433c9c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  433ca0:	add	x1, x1, #0x9b4
  433ca4:	str	x1, [sp, #336]
  433ca8:	sub	x0, x0, x2
  433cac:	ldr	x1, [x23, #72]
  433cb0:	str	x1, [sp, #344]
  433cb4:	add	x19, sp, #0x150
  433cb8:	str	x0, [sp, #360]
  433cbc:	add	x1, x1, x2
  433cc0:	ldr	w0, [x23, #120]
  433cc4:	str	x1, [sp, #352]
  433cc8:	str	w0, [sp, #368]
  433ccc:	mov	x0, x19
  433cd0:	stp	x24, x22, [sp, #376]
  433cd4:	str	wzr, [sp, #392]
  433cd8:	bl	4326f4 <nftw@plt+0x2fa04>
  433cdc:	mov	x1, #0xffffffff            	// #4294967295
  433ce0:	mov	w2, w0
  433ce4:	cmp	x1, w0, uxtw
  433ce8:	b.ne	433d30 <nftw@plt+0x31040>  // b.any
  433cec:	mov	x0, x19
  433cf0:	bl	432738 <nftw@plt+0x2fa48>
  433cf4:	mov	x2, x0
  433cf8:	mov	w25, #0x1                   	// #1
  433cfc:	mov	x0, x19
  433d00:	str	x2, [sp, #360]
  433d04:	bl	43279c <nftw@plt+0x2faac>
  433d08:	and	w0, w0, #0xffff
  433d0c:	str	w0, [sp, #272]
  433d10:	sub	w0, w0, #0x2
  433d14:	cmp	w0, #0x2
  433d18:	b.ls	433d38 <nftw@plt+0x31048>  // b.plast
  433d1c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  433d20:	add	x1, x1, #0x52a
  433d24:	mov	x0, x19
  433d28:	bl	4322ac <nftw@plt+0x2f5bc>
  433d2c:	b	433bbc <nftw@plt+0x30ecc>
  433d30:	mov	w25, #0x0                   	// #0
  433d34:	b	433cfc <nftw@plt+0x3100c>
  433d38:	mov	w1, w25
  433d3c:	mov	x0, x19
  433d40:	bl	43277c <nftw@plt+0x2fa8c>
  433d44:	add	x25, sp, #0x190
  433d48:	ldp	x2, x3, [sp, #336]
  433d4c:	stp	x2, x3, [sp, #400]
  433d50:	mov	x1, x0
  433d54:	ldp	x2, x3, [sp, #352]
  433d58:	stp	x2, x3, [sp, #416]
  433d5c:	mov	x0, x19
  433d60:	ldp	x2, x3, [sp, #368]
  433d64:	stp	x2, x3, [sp, #432]
  433d68:	ldp	x2, x3, [sp, #384]
  433d6c:	str	x1, [sp, #424]
  433d70:	stp	x2, x3, [sp, #448]
  433d74:	bl	43268c <nftw@plt+0x2f99c>
  433d78:	cbz	w0, 433bbc <nftw@plt+0x30ecc>
  433d7c:	mov	x0, x25
  433d80:	bl	4327ec <nftw@plt+0x2fafc>
  433d84:	and	w0, w0, #0xff
  433d88:	str	w0, [sp, #276]
  433d8c:	ldr	w0, [sp, #272]
  433d90:	cmp	w0, #0x3
  433d94:	b.gt	433f7c <nftw@plt+0x3128c>
  433d98:	mov	w0, #0x1                   	// #1
  433d9c:	str	w0, [sp, #280]
  433da0:	mov	x0, x25
  433da4:	bl	4327ec <nftw@plt+0x2fafc>
  433da8:	mov	x0, x25
  433dac:	mov	x1, #0x1                   	// #1
  433db0:	ldr	x26, [sp, #416]
  433db4:	bl	43268c <nftw@plt+0x2f99c>
  433db8:	cbz	w0, 433f8c <nftw@plt+0x3129c>
  433dbc:	ldrb	w0, [x26]
  433dc0:	eor	w0, w0, #0xffffff80
  433dc4:	sub	w0, w0, #0x80
  433dc8:	sxtb	w0, w0
  433dcc:	str	w0, [sp, #284]
  433dd0:	mov	x0, x25
  433dd4:	bl	4327ec <nftw@plt+0x2fafc>
  433dd8:	and	w0, w0, #0xff
  433ddc:	str	w0, [sp, #288]
  433de0:	mov	x0, x25
  433de4:	bl	4327ec <nftw@plt+0x2fafc>
  433de8:	and	w1, w0, #0xff
  433dec:	ldr	x0, [sp, #416]
  433df0:	str	w1, [sp, #292]
  433df4:	sub	w1, w1, #0x1
  433df8:	str	x0, [sp, #296]
  433dfc:	mov	x0, x25
  433e00:	bl	43268c <nftw@plt+0x2f99c>
  433e04:	cbz	w0, 433bbc <nftw@plt+0x30ecc>
  433e08:	ldp	x26, x28, [sp, #416]
  433e0c:	str	xzr, [sp, #304]
  433e10:	add	x28, x26, x28
  433e14:	cmp	x28, x26
  433e18:	ldr	x27, [sp, #304]
  433e1c:	b.ls	433e28 <nftw@plt+0x31138>  // b.plast
  433e20:	ldrb	w0, [x26]
  433e24:	cbnz	w0, 433f94 <nftw@plt+0x312a4>
  433e28:	str	xzr, [sp, #312]
  433e2c:	cbnz	x27, 433fb4 <nftw@plt+0x312c4>
  433e30:	mov	x26, #0x0                   	// #0
  433e34:	ldr	x0, [sp, #416]
  433e38:	ldrb	w0, [x0]
  433e3c:	cbnz	w0, 433fd0 <nftw@plt+0x312e0>
  433e40:	mov	x0, x25
  433e44:	mov	x1, #0x1                   	// #1
  433e48:	bl	43268c <nftw@plt+0x2f99c>
  433e4c:	cbz	w0, 433bbc <nftw@plt+0x30ecc>
  433e50:	ldp	x26, x27, [sp, #416]
  433e54:	str	xzr, [sp, #320]
  433e58:	add	x27, x26, x27
  433e5c:	cmp	x27, x26
  433e60:	b.ls	433e6c <nftw@plt+0x3117c>  // b.plast
  433e64:	ldrb	w0, [x26]
  433e68:	cbnz	w0, 433ffc <nftw@plt+0x3130c>
  433e6c:	ldp	x2, x3, [sp, #376]
  433e70:	mov	x0, x21
  433e74:	ldr	x1, [sp, #320]
  433e78:	lsl	x1, x1, #3
  433e7c:	bl	42ec94 <nftw@plt+0x2bfa4>
  433e80:	str	x0, [sp, #328]
  433e84:	cbz	x0, 433bbc <nftw@plt+0x30ecc>
  433e88:	mov	x28, #0x0                   	// #0
  433e8c:	ldr	x1, [sp, #416]
  433e90:	ldr	w0, [sp, #456]
  433e94:	ldrb	w1, [x1]
  433e98:	cbnz	w1, 434074 <nftw@plt+0x31384>
  433e9c:	cbnz	w0, 433bbc <nftw@plt+0x30ecc>
  433ea0:	ldr	x0, [sp, #320]
  433ea4:	cbz	x0, 434170 <nftw@plt+0x31480>
  433ea8:	ldr	x0, [sp, #328]
  433eac:	ldr	x0, [x0]
  433eb0:	str	x0, [sp, #160]
  433eb4:	mov	w0, #0x1                   	// #1
  433eb8:	str	w0, [sp, #136]
  433ebc:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  433ec0:	add	x0, x0, #0x380
  433ec4:	ldr	x27, [sp, #160]
  433ec8:	str	x0, [sp, #200]
  433ecc:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0xffa8>
  433ed0:	add	x0, x0, #0xe54
  433ed4:	mov	x26, #0x0                   	// #0
  433ed8:	str	wzr, [sp, #128]
  433edc:	str	x0, [sp, #208]
  433ee0:	add	x0, sp, #0xf0
  433ee4:	str	x0, [sp, #192]
  433ee8:	ldr	x0, [sp, #360]
  433eec:	cbnz	x0, 43417c <nftw@plt+0x3148c>
  433ef0:	ldr	w0, [sp, #392]
  433ef4:	cbnz	w0, 433bbc <nftw@plt+0x30ecc>
  433ef8:	ldr	x0, [sp, #264]
  433efc:	cbz	x0, 433bbc <nftw@plt+0x30ecc>
  433f00:	add	x26, sp, #0xf0
  433f04:	mov	x3, x22
  433f08:	mov	x4, x26
  433f0c:	mov	x2, x24
  433f10:	mov	x0, x21
  433f14:	mov	x1, #0x18                  	// #24
  433f18:	bl	42ede8 <nftw@plt+0x2c0f8>
  433f1c:	cbz	x0, 433bbc <nftw@plt+0x30ecc>
  433f20:	mov	x1, #0xffffffffffffffff    	// #-1
  433f24:	stp	x1, xzr, [x0]
  433f28:	mov	x3, x22
  433f2c:	str	xzr, [x0, #16]
  433f30:	mov	x2, x24
  433f34:	mov	x1, x26
  433f38:	mov	x0, x21
  433f3c:	bl	42ef10 <nftw@plt+0x2c220>
  433f40:	cbz	w0, 433bbc <nftw@plt+0x30ecc>
  433f44:	ldr	x0, [sp, #240]
  433f48:	mov	x2, #0x18                  	// #24
  433f4c:	ldr	x1, [sp, #264]
  433f50:	adrp	x3, 432000 <nftw@plt+0x2f310>
  433f54:	add	x3, x3, #0x43c
  433f58:	str	x0, [sp, #128]
  433f5c:	bl	434fc0 <nftw@plt+0x322d0>
  433f60:	ldr	w0, [x21, #8]
  433f64:	ldr	x2, [x20, #16]
  433f68:	ldr	x26, [sp, #264]
  433f6c:	cbnz	w0, 434498 <nftw@plt+0x317a8>
  433f70:	add	x8, x23, #0x80
  433f74:	mov	x28, x8
  433f78:	b	4344a8 <nftw@plt+0x317b8>
  433f7c:	mov	x0, x25
  433f80:	bl	4327ec <nftw@plt+0x2fafc>
  433f84:	and	w0, w0, #0xff
  433f88:	b	433d9c <nftw@plt+0x310ac>
  433f8c:	mov	w0, #0x0                   	// #0
  433f90:	b	433dcc <nftw@plt+0x310dc>
  433f94:	sub	x1, x28, x26
  433f98:	mov	x0, x26
  433f9c:	bl	402680 <strnlen@plt>
  433fa0:	add	x0, x0, #0x1
  433fa4:	add	x27, x27, #0x1
  433fa8:	add	x26, x26, x0
  433fac:	str	x27, [sp, #304]
  433fb0:	b	433e14 <nftw@plt+0x31124>
  433fb4:	ldp	x2, x3, [sp, #376]
  433fb8:	lsl	x1, x27, #3
  433fbc:	mov	x0, x21
  433fc0:	bl	42ec94 <nftw@plt+0x2bfa4>
  433fc4:	str	x0, [sp, #312]
  433fc8:	cbnz	x0, 433e30 <nftw@plt+0x31140>
  433fcc:	b	433bbc <nftw@plt+0x30ecc>
  433fd0:	ldr	w0, [sp, #456]
  433fd4:	cbnz	w0, 433bbc <nftw@plt+0x30ecc>
  433fd8:	ldr	x27, [sp, #312]
  433fdc:	mov	x0, x25
  433fe0:	bl	4329d8 <nftw@plt+0x2fce8>
  433fe4:	str	x0, [x27, x26]
  433fe8:	ldr	x0, [sp, #312]
  433fec:	ldr	x0, [x0, x26]
  433ff0:	add	x26, x26, #0x8
  433ff4:	cbnz	x0, 433e34 <nftw@plt+0x31144>
  433ff8:	b	433bbc <nftw@plt+0x30ecc>
  433ffc:	sub	x1, x27, x26
  434000:	mov	x0, x26
  434004:	bl	402680 <strnlen@plt>
  434008:	add	x2, x0, #0x1
  43400c:	add	x0, x26, x0
  434010:	mov	x1, #0x1                   	// #1
  434014:	ldrsb	w3, [x0, x1]
  434018:	tbnz	w3, #31, 43405c <nftw@plt+0x3136c>
  43401c:	add	x1, x2, x1
  434020:	mov	x0, #0x1                   	// #1
  434024:	add	x26, x26, x1
  434028:	sub	x2, x26, #0x1
  43402c:	ldrsb	w1, [x2, x0]
  434030:	tbnz	w1, #31, 434064 <nftw@plt+0x31374>
  434034:	add	x26, x26, x0
  434038:	mov	x0, #0x1                   	// #1
  43403c:	sub	x2, x26, #0x1
  434040:	ldrsb	w1, [x2, x0]
  434044:	tbnz	w1, #31, 43406c <nftw@plt+0x3137c>
  434048:	add	x26, x26, x0
  43404c:	ldr	x0, [sp, #320]
  434050:	add	x0, x0, #0x1
  434054:	str	x0, [sp, #320]
  434058:	b	433e5c <nftw@plt+0x3116c>
  43405c:	add	x1, x1, #0x1
  434060:	b	434014 <nftw@plt+0x31324>
  434064:	add	x0, x0, #0x1
  434068:	b	43402c <nftw@plt+0x3133c>
  43406c:	add	x0, x0, #0x1
  434070:	b	434040 <nftw@plt+0x31350>
  434074:	cbnz	w0, 433bbc <nftw@plt+0x30ecc>
  434078:	mov	x0, x25
  43407c:	bl	4329d8 <nftw@plt+0x2fce8>
  434080:	mov	x27, x0
  434084:	cbz	x0, 433bbc <nftw@plt+0x30ecc>
  434088:	mov	x0, x25
  43408c:	bl	432890 <nftw@plt+0x2fba0>
  434090:	ldrb	w1, [x27]
  434094:	cmp	w1, #0x2f
  434098:	b.eq	4340ac <nftw@plt+0x313bc>  // b.none
  43409c:	cbnz	x0, 4340cc <nftw@plt+0x313dc>
  4340a0:	ldr	x0, [sp, #152]
  4340a4:	ldr	x4, [x0, #72]
  4340a8:	cbnz	x4, 4340e8 <nftw@plt+0x313f8>
  4340ac:	ldr	x0, [sp, #328]
  4340b0:	str	x27, [x0, x28]
  4340b4:	mov	x0, x25
  4340b8:	bl	432890 <nftw@plt+0x2fba0>
  4340bc:	mov	x0, x25
  4340c0:	add	x28, x28, #0x8
  4340c4:	bl	432890 <nftw@plt+0x2fba0>
  4340c8:	b	433e8c <nftw@plt+0x3119c>
  4340cc:	ldr	x2, [sp, #304]
  4340d0:	sub	x1, x0, #0x1
  4340d4:	cmp	x1, x2
  4340d8:	b.cs	434164 <nftw@plt+0x31474>  // b.hs, b.nlast
  4340dc:	ldr	x1, [sp, #312]
  4340e0:	add	x0, x1, x0, lsl #3
  4340e4:	ldur	x4, [x0, #-8]
  4340e8:	mov	x0, x4
  4340ec:	str	x4, [sp, #160]
  4340f0:	bl	402630 <strlen@plt>
  4340f4:	mov	x26, x0
  4340f8:	mov	x0, x27
  4340fc:	bl	402630 <strlen@plt>
  434100:	add	x1, x26, x0
  434104:	ldp	x2, x3, [sp, #376]
  434108:	add	x1, x1, #0x2
  43410c:	str	x0, [sp, #128]
  434110:	mov	x0, x21
  434114:	bl	42ec94 <nftw@plt+0x2bfa4>
  434118:	str	x0, [sp, #136]
  43411c:	cbz	x0, 433bbc <nftw@plt+0x30ecc>
  434120:	ldr	x4, [sp, #160]
  434124:	mov	x2, x26
  434128:	mov	x1, x4
  43412c:	bl	4025d0 <memcpy@plt>
  434130:	ldp	x1, x3, [sp, #128]
  434134:	mov	w0, #0x2f                  	// #47
  434138:	str	x3, [sp, #128]
  43413c:	strb	w0, [x3, x26]
  434140:	add	x0, x26, #0x1
  434144:	add	x2, x1, #0x1
  434148:	add	x0, x3, x0
  43414c:	mov	x1, x27
  434150:	bl	4025d0 <memcpy@plt>
  434154:	ldr	x0, [sp, #328]
  434158:	ldr	x3, [sp, #128]
  43415c:	str	x3, [x0, x28]
  434160:	b	4340b4 <nftw@plt+0x313c4>
  434164:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  434168:	add	x1, x1, #0x54a
  43416c:	b	433d24 <nftw@plt+0x31034>
  434170:	adrp	x0, 44d000 <_obstack_memory_used@@Base+0xffa8>
  434174:	add	x0, x0, #0xe54
  434178:	b	433eb0 <nftw@plt+0x311c0>
  43417c:	mov	x0, x19
  434180:	bl	4327ec <nftw@plt+0x2fafc>
  434184:	ldr	w2, [sp, #292]
  434188:	and	w1, w0, #0xff
  43418c:	cmp	w2, w0, uxtb
  434190:	b.hi	434200 <nftw@plt+0x31510>  // b.pmore
  434194:	ldr	w5, [sp, #288]
  434198:	sub	w1, w1, w2
  43419c:	ldr	w0, [sp, #128]
  4341a0:	ldr	w3, [sp, #276]
  4341a4:	ldr	x7, [sp, #192]
  4341a8:	udiv	w2, w1, w5
  4341ac:	add	w4, w2, w0
  4341b0:	ldr	w0, [sp, #280]
  4341b4:	msub	w1, w2, w5, w1
  4341b8:	ldr	w2, [sp, #284]
  4341bc:	ldp	x5, x6, [sp, #376]
  4341c0:	mul	w3, w4, w3
  4341c4:	add	w1, w1, w2
  4341c8:	udiv	w3, w3, w0
  4341cc:	add	x26, x26, x3
  4341d0:	udiv	w3, w4, w0
  4341d4:	msub	w0, w3, w0, w4
  4341d8:	str	w0, [sp, #128]
  4341dc:	ldr	w0, [sp, #136]
  4341e0:	add	w4, w0, w1
  4341e4:	str	w4, [sp, #136]
  4341e8:	mov	x3, x27
  4341ec:	mov	x2, x26
  4341f0:	add	x1, x23, #0x10
  4341f4:	mov	x0, x21
  4341f8:	bl	432514 <nftw@plt+0x2f824>
  4341fc:	b	433ee8 <nftw@plt+0x311f8>
  434200:	cbnz	w1, 434354 <nftw@plt+0x31664>
  434204:	mov	x0, x19
  434208:	bl	432890 <nftw@plt+0x2fba0>
  43420c:	mov	x28, x0
  434210:	mov	x0, x19
  434214:	bl	4327ec <nftw@plt+0x2fafc>
  434218:	and	w2, w0, #0xff
  43421c:	sub	w2, w2, #0x1
  434220:	cmp	w2, #0x3
  434224:	b.hi	434340 <nftw@plt+0x31650>  // b.pmore
  434228:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  43422c:	add	x0, x0, #0x378
  434230:	ldrh	w0, [x0, w2, uxtw #1]
  434234:	adr	x1, 434240 <nftw@plt+0x31550>
  434238:	add	x0, x1, w0, sxth #2
  43423c:	br	x0
  434240:	ldr	x0, [sp, #152]
  434244:	ldr	w1, [x0, #48]
  434248:	mov	x0, x19
  43424c:	bl	432820 <nftw@plt+0x2fb30>
  434250:	mov	x26, x0
  434254:	b	433ee8 <nftw@plt+0x311f8>
  434258:	mov	x0, x19
  43425c:	bl	4329d8 <nftw@plt+0x2fce8>
  434260:	mov	x27, x0
  434264:	cbz	x0, 433bbc <nftw@plt+0x30ecc>
  434268:	mov	x0, x19
  43426c:	bl	432890 <nftw@plt+0x2fba0>
  434270:	mov	x28, x0
  434274:	mov	x0, x19
  434278:	bl	432890 <nftw@plt+0x2fba0>
  43427c:	mov	x0, x19
  434280:	bl	432890 <nftw@plt+0x2fba0>
  434284:	ldrb	w0, [x27]
  434288:	cmp	w0, #0x2f
  43428c:	b.eq	433ee8 <nftw@plt+0x311f8>  // b.none
  434290:	cbnz	w28, 434318 <nftw@plt+0x31628>
  434294:	ldr	x0, [sp, #152]
  434298:	ldr	x4, [x0, #72]
  43429c:	mov	x0, x4
  4342a0:	str	x4, [sp, #224]
  4342a4:	bl	402630 <strlen@plt>
  4342a8:	mov	x28, x0
  4342ac:	mov	x0, x27
  4342b0:	bl	402630 <strlen@plt>
  4342b4:	add	x1, x28, x0
  4342b8:	ldp	x2, x3, [sp, #376]
  4342bc:	add	x1, x1, #0x2
  4342c0:	str	x0, [sp, #184]
  4342c4:	mov	x0, x21
  4342c8:	bl	42ec94 <nftw@plt+0x2bfa4>
  4342cc:	str	x0, [sp, #216]
  4342d0:	cbz	x0, 433bbc <nftw@plt+0x30ecc>
  4342d4:	ldr	x4, [sp, #224]
  4342d8:	mov	x2, x28
  4342dc:	mov	x1, x4
  4342e0:	bl	4025d0 <memcpy@plt>
  4342e4:	ldr	x3, [sp, #216]
  4342e8:	mov	w0, #0x2f                  	// #47
  4342ec:	ldr	x1, [sp, #184]
  4342f0:	str	x3, [sp, #184]
  4342f4:	strb	w0, [x3, x28]
  4342f8:	add	x0, x28, #0x1
  4342fc:	add	x2, x1, #0x1
  434300:	add	x0, x3, x0
  434304:	mov	x1, x27
  434308:	bl	4025d0 <memcpy@plt>
  43430c:	ldr	x3, [sp, #184]
  434310:	mov	x27, x3
  434314:	b	433ee8 <nftw@plt+0x311f8>
  434318:	ldr	x0, [sp, #304]
  43431c:	sub	w28, w28, #0x1
  434320:	cmp	x28, x0
  434324:	b.cs	434334 <nftw@plt+0x31644>  // b.hs, b.nlast
  434328:	ldr	x0, [sp, #312]
  43432c:	ldr	x4, [x0, x28, lsl #3]
  434330:	b	43429c <nftw@plt+0x315ac>
  434334:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  434338:	add	x1, x1, #0x580
  43433c:	b	433d24 <nftw@plt+0x31034>
  434340:	sub	x1, x28, #0x1
  434344:	mov	x0, x19
  434348:	bl	43268c <nftw@plt+0x2f99c>
  43434c:	cbnz	w0, 433ee8 <nftw@plt+0x311f8>
  434350:	b	433bbc <nftw@plt+0x30ecc>
  434354:	sub	w1, w1, #0x1
  434358:	cmp	w1, #0xb
  43435c:	b.hi	43445c <nftw@plt+0x3176c>  // b.pmore
  434360:	ldr	x0, [sp, #200]
  434364:	ldrh	w0, [x0, w1, uxtw #1]
  434368:	adr	x1, 434374 <nftw@plt+0x31684>
  43436c:	add	x0, x1, w0, sxth #2
  434370:	br	x0
  434374:	ldr	w4, [sp, #136]
  434378:	ldr	x7, [sp, #192]
  43437c:	ldp	x5, x6, [sp, #376]
  434380:	b	4341e8 <nftw@plt+0x314f8>
  434384:	mov	x0, x19
  434388:	bl	432890 <nftw@plt+0x2fba0>
  43438c:	ldr	w1, [sp, #128]
  434390:	ldr	w2, [sp, #280]
  434394:	add	x0, x0, w1, uxtw
  434398:	ldr	w1, [sp, #276]
  43439c:	mul	x1, x1, x0
  4343a0:	udiv	x1, x1, x2
  4343a4:	add	x26, x26, x1
  4343a8:	udiv	x1, x0, x2
  4343ac:	msub	w0, w1, w2, w0
  4343b0:	str	w0, [sp, #128]
  4343b4:	b	433ee8 <nftw@plt+0x311f8>
  4343b8:	mov	x0, x19
  4343bc:	bl	432928 <nftw@plt+0x2fc38>
  4343c0:	ldr	w1, [sp, #136]
  4343c4:	add	w0, w1, w0
  4343c8:	str	w0, [sp, #136]
  4343cc:	b	433ee8 <nftw@plt+0x311f8>
  4343d0:	mov	x0, x19
  4343d4:	bl	432890 <nftw@plt+0x2fba0>
  4343d8:	cbz	x0, 434490 <nftw@plt+0x317a0>
  4343dc:	ldr	x2, [sp, #320]
  4343e0:	sub	x1, x0, #0x1
  4343e4:	cmp	x1, x2
  4343e8:	b.cc	4343f8 <nftw@plt+0x31708>  // b.lo, b.ul, b.last
  4343ec:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4343f0:	add	x1, x1, #0x5af
  4343f4:	b	433d24 <nftw@plt+0x31034>
  4343f8:	ldr	x1, [sp, #328]
  4343fc:	add	x0, x1, x0, lsl #3
  434400:	ldur	x27, [x0, #-8]
  434404:	b	433ee8 <nftw@plt+0x311f8>
  434408:	ldr	w1, [sp, #288]
  43440c:	mov	w0, #0xff                  	// #255
  434410:	sub	w0, w0, w2
  434414:	ldr	w2, [sp, #280]
  434418:	udiv	w0, w0, w1
  43441c:	ldr	w1, [sp, #128]
  434420:	add	w0, w0, w1
  434424:	ldr	w1, [sp, #276]
  434428:	mul	w1, w0, w1
  43442c:	udiv	w1, w1, w2
  434430:	add	x26, x26, x1
  434434:	udiv	w1, w0, w2
  434438:	b	4343ac <nftw@plt+0x316bc>
  43443c:	mov	x0, x19
  434440:	bl	43279c <nftw@plt+0x2faac>
  434444:	add	x26, x26, w0, uxth
  434448:	str	wzr, [sp, #128]
  43444c:	b	433ee8 <nftw@plt+0x311f8>
  434450:	mov	x0, x19
  434454:	bl	432890 <nftw@plt+0x2fba0>
  434458:	b	433ee8 <nftw@plt+0x311f8>
  43445c:	ldr	x0, [sp, #296]
  434460:	ldrb	w28, [x0, w1, uxtw]
  434464:	cbz	w28, 433ee8 <nftw@plt+0x311f8>
  434468:	mov	x0, x19
  43446c:	sub	w28, w28, #0x1
  434470:	bl	432890 <nftw@plt+0x2fba0>
  434474:	b	434464 <nftw@plt+0x31774>
  434478:	mov	w0, #0x1                   	// #1
  43447c:	mov	x26, #0x0                   	// #0
  434480:	str	wzr, [sp, #128]
  434484:	str	w0, [sp, #136]
  434488:	ldr	x27, [sp, #160]
  43448c:	b	433ee8 <nftw@plt+0x311f8>
  434490:	ldr	x27, [sp, #208]
  434494:	b	433ee8 <nftw@plt+0x311f8>
  434498:	mov	x8, x19
  43449c:	mov	x28, #0x0                   	// #0
  4344a0:	stp	xzr, xzr, [sp, #336]
  4344a4:	stp	xzr, xzr, [sp, #352]
  4344a8:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  4344ac:	add	x0, x0, #0x9a8
  4344b0:	str	x0, [sp, #400]
  4344b4:	ldr	x0, [x23, #56]
  4344b8:	str	x0, [sp, #408]
  4344bc:	ldr	x0, [x2]
  4344c0:	str	x0, [sp, #416]
  4344c4:	ldr	x0, [x2, #8]
  4344c8:	add	x27, sp, #0x110
  4344cc:	str	x0, [sp, #424]
  4344d0:	ldr	w0, [x23, #120]
  4344d4:	str	w0, [sp, #432]
  4344d8:	stp	x24, x22, [sp, #440]
  4344dc:	str	wzr, [sp, #456]
  4344e0:	ldr	x0, [sp, #424]
  4344e4:	cbnz	x0, 434550 <nftw@plt+0x31860>
  4344e8:	ldr	x25, [x8, #24]
  4344ec:	cbz	x25, 434588 <nftw@plt+0x31898>
  4344f0:	cbnz	x28, 434594 <nftw@plt+0x318a4>
  4344f4:	mov	x3, x22
  4344f8:	mov	x2, x24
  4344fc:	mov	x1, x19
  434500:	mov	x0, x21
  434504:	str	x8, [sp, #136]
  434508:	bl	42ef10 <nftw@plt+0x2c220>
  43450c:	cbz	w0, 434588 <nftw@plt+0x31898>
  434510:	ldr	x8, [sp, #136]
  434514:	ldr	x19, [x8]
  434518:	adrp	x3, 433000 <nftw@plt+0x30310>
  43451c:	mov	x1, x25
  434520:	add	x3, x3, #0x16c
  434524:	mov	x0, x19
  434528:	mov	x2, #0x18                  	// #24
  43452c:	bl	434fc0 <nftw@plt+0x322d0>
  434530:	mov	x1, x27
  434534:	mov	x0, x21
  434538:	mov	x3, x22
  43453c:	mov	x2, x24
  434540:	bl	432300 <nftw@plt+0x2f610>
  434544:	mov	w0, #0x1                   	// #1
  434548:	ldr	x1, [sp, #128]
  43454c:	b	433c04 <nftw@plt+0x30f14>
  434550:	stp	x8, x8, [sp]
  434554:	mov	x7, x22
  434558:	mov	x6, x24
  43455c:	mov	x5, x27
  434560:	mov	x4, x25
  434564:	mov	x1, x23
  434568:	mov	x0, x21
  43456c:	mov	x3, #0x0                   	// #0
  434570:	str	x2, [sp, #136]
  434574:	str	x8, [sp, #152]
  434578:	bl	433494 <nftw@plt+0x307a4>
  43457c:	ldr	x2, [sp, #136]
  434580:	ldr	x8, [sp, #152]
  434584:	cbnz	w0, 4344e0 <nftw@plt+0x317f0>
  434588:	mov	x25, #0x0                   	// #0
  43458c:	mov	x19, #0x0                   	// #0
  434590:	b	434530 <nftw@plt+0x31840>
  434594:	mov	x3, x22
  434598:	mov	x2, x24
  43459c:	mov	x1, x28
  4345a0:	mov	x0, x21
  4345a4:	bl	42ef00 <nftw@plt+0x2c210>
  4345a8:	mov	x19, x0
  4345ac:	cbz	x0, 434588 <nftw@plt+0x31898>
  4345b0:	str	xzr, [x28, #24]
  4345b4:	b	434518 <nftw@plt+0x31828>
  4345b8:	ldr	x2, [sp, #120]
  4345bc:	add	x2, x2, #0x70
  4345c0:	stlr	x26, [x2]
  4345c4:	ldr	x2, [sp, #120]
  4345c8:	add	x2, x2, #0x78
  4345cc:	stlr	x19, [x2]
  4345d0:	ldr	x2, [sp, #120]
  4345d4:	add	x2, x2, #0x80
  4345d8:	stlr	x25, [x2]
  4345dc:	ldr	x2, [sp, #120]
  4345e0:	add	x2, x2, #0x68
  4345e4:	stlr	x1, [x2]
  4345e8:	b	433c18 <nftw@plt+0x30f28>
  4345ec:	ldr	x0, [x20, #16]
  4345f0:	adrp	x4, 432000 <nftw@plt+0x2f310>
  4345f4:	mov	x3, #0x18                  	// #24
  4345f8:	add	x4, x4, #0x9c
  4345fc:	ldr	x2, [x0, #112]
  434600:	ldr	x0, [sp, #176]
  434604:	bl	402880 <bsearch@plt>
  434608:	mov	x19, x0
  43460c:	ldr	x0, [x20, #16]
  434610:	cbnz	x19, 4346b8 <nftw@plt+0x319c8>
  434614:	ldr	x1, [x0, #80]
  434618:	cbnz	x1, 4346a4 <nftw@plt+0x319b4>
  43461c:	ldr	x25, [x0, #64]
  434620:	cbz	x25, 43469c <nftw@plt+0x319ac>
  434624:	ldrb	w1, [x25]
  434628:	cmp	w1, #0x2f
  43462c:	b.eq	43469c <nftw@plt+0x319ac>  // b.none
  434630:	ldr	x26, [x0, #72]
  434634:	cbz	x26, 43469c <nftw@plt+0x319ac>
  434638:	mov	x0, x25
  43463c:	bl	402630 <strlen@plt>
  434640:	mov	x23, x0
  434644:	mov	x0, x26
  434648:	bl	402630 <strlen@plt>
  43464c:	add	x1, x23, x0
  434650:	mov	x19, x0
  434654:	mov	x3, x22
  434658:	mov	x0, x21
  43465c:	mov	x2, x24
  434660:	add	x1, x1, #0x2
  434664:	bl	42ec94 <nftw@plt+0x2bfa4>
  434668:	mov	x21, x0
  43466c:	cbz	x0, 433c48 <nftw@plt+0x30f58>
  434670:	mov	x2, x19
  434674:	mov	x1, x26
  434678:	bl	4025d0 <memcpy@plt>
  43467c:	mov	x1, x25
  434680:	mov	x25, x21
  434684:	mov	w0, #0x2f                  	// #47
  434688:	strb	w0, [x21, x19]
  43468c:	add	x19, x19, #0x1
  434690:	add	x2, x23, #0x1
  434694:	add	x0, x21, x19
  434698:	bl	4025d0 <memcpy@plt>
  43469c:	ldr	x0, [x20, #16]
  4346a0:	str	x25, [x0, #80]
  4346a4:	ldr	x0, [x20, #16]
  4346a8:	mov	x4, #0x0                   	// #0
  4346ac:	mov	w3, #0x0                   	// #0
  4346b0:	ldr	x2, [x0, #80]
  4346b4:	b	434790 <nftw@plt+0x31aa0>
  4346b8:	ldr	x2, [x0, #128]
  4346bc:	cbnz	x2, 4346d0 <nftw@plt+0x319e0>
  4346c0:	ldr	w3, [x19, #16]
  4346c4:	mov	x4, #0x0                   	// #0
  4346c8:	ldr	x2, [x19, #8]
  4346cc:	b	434790 <nftw@plt+0x31aa0>
  4346d0:	ldr	x1, [x0, #120]
  4346d4:	adrp	x4, 432000 <nftw@plt+0x2f310>
  4346d8:	ldr	x0, [sp, #176]
  4346dc:	add	x4, x4, #0x4c
  4346e0:	mov	x3, #0x18                  	// #24
  4346e4:	bl	402880 <bsearch@plt>
  4346e8:	mov	x1, x0
  4346ec:	cbz	x0, 4346c0 <nftw@plt+0x319d0>
  4346f0:	ldr	x0, [x20, #16]
  4346f4:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4346f8:	movk	x5, #0xaaab
  4346fc:	ldp	x3, x4, [x0, #120]
  434700:	ldr	x0, [sp, #232]
  434704:	sub	x2, x1, x3
  434708:	asr	x2, x2, #3
  43470c:	mul	x2, x2, x5
  434710:	add	x2, x2, #0x1
  434714:	cmp	x2, x4
  434718:	b.cs	434734 <nftw@plt+0x31a44>  // b.hs, b.nlast
  43471c:	ldr	x2, [x1, #24]
  434720:	cmp	x2, x0
  434724:	b.hi	434734 <nftw@plt+0x31a44>  // b.pmore
  434728:	ldr	x2, [x1, #32]
  43472c:	cmp	x0, x2
  434730:	b.cc	434774 <nftw@plt+0x31a84>  // b.lo, b.ul, b.last
  434734:	ldr	x2, [sp, #144]
  434738:	add	x5, sp, #0x150
  43473c:	ldr	x20, [x1, #16]
  434740:	add	x4, sp, #0x190
  434744:	ldr	x1, [x19, #8]
  434748:	str	x1, [sp, #400]
  43474c:	ldr	w1, [x19, #16]
  434750:	mov	x3, x22
  434754:	str	w1, [sp, #336]
  434758:	mov	x1, x20
  43475c:	bl	4320dc <nftw@plt+0x2f3ec>
  434760:	cbnz	w0, 433c54 <nftw@plt+0x30f64>
  434764:	ldr	w3, [sp, #336]
  434768:	ldr	x4, [x20]
  43476c:	ldr	x2, [sp, #400]
  434770:	b	434790 <nftw@plt+0x31aa0>
  434774:	add	x1, x1, #0x18
  434778:	b	434704 <nftw@plt+0x31a14>
  43477c:	cmn	x1, #0x1
  434780:	b.ne	4345ec <nftw@plt+0x318fc>  // b.any
  434784:	mov	x4, #0x0                   	// #0
  434788:	mov	w3, #0x0                   	// #0
  43478c:	mov	x2, #0x0                   	// #0
  434790:	ldr	x5, [sp, #144]
  434794:	mov	x0, x22
  434798:	ldr	x1, [sp, #232]
  43479c:	blr	x5
  4347a0:	b	433c54 <nftw@plt+0x30f64>
  4347a4:	stp	x29, x30, [sp, #-96]!
  4347a8:	mov	x29, sp
  4347ac:	stp	x19, x20, [sp, #16]
  4347b0:	mov	x19, x0
  4347b4:	ldr	w0, [x0, #8]
  4347b8:	stp	x21, x22, [sp, #32]
  4347bc:	mov	x21, x2
  4347c0:	mov	x22, x4
  4347c4:	stp	x23, x24, [sp, #48]
  4347c8:	mov	x23, x1
  4347cc:	mov	x24, x3
  4347d0:	str	x25, [sp, #64]
  4347d4:	cbnz	w0, 434850 <nftw@plt+0x31b60>
  4347d8:	ldr	x20, [x19, #32]
  4347dc:	add	x25, sp, #0x5c
  4347e0:	cbnz	x20, 434800 <nftw@plt+0x31b10>
  4347e4:	mov	x1, x23
  4347e8:	mov	x0, x22
  4347ec:	mov	x4, #0x0                   	// #0
  4347f0:	mov	w3, #0x0                   	// #0
  4347f4:	mov	x2, #0x0                   	// #0
  4347f8:	blr	x21
  4347fc:	b	434830 <nftw@plt+0x31b40>
  434800:	mov	x6, x25
  434804:	mov	x5, x22
  434808:	mov	x4, x24
  43480c:	mov	x3, x21
  434810:	mov	x2, x23
  434814:	mov	x1, x20
  434818:	mov	x0, x19
  43481c:	bl	433a78 <nftw@plt+0x30d88>
  434820:	cbnz	w0, 434830 <nftw@plt+0x31b40>
  434824:	ldr	w0, [sp, #92]
  434828:	cbz	w0, 434848 <nftw@plt+0x31b58>
  43482c:	mov	w0, #0x0                   	// #0
  434830:	ldp	x19, x20, [sp, #16]
  434834:	ldp	x21, x22, [sp, #32]
  434838:	ldp	x23, x24, [sp, #48]
  43483c:	ldr	x25, [sp, #64]
  434840:	ldp	x29, x30, [sp], #96
  434844:	ret
  434848:	ldr	x20, [x20]
  43484c:	b	4347e0 <nftw@plt+0x31af0>
  434850:	add	x20, x19, #0x20
  434854:	add	x25, sp, #0x5c
  434858:	ldar	x20, [x20]
  43485c:	cbz	x20, 4347e4 <nftw@plt+0x31af4>
  434860:	mov	x6, x25
  434864:	mov	x5, x22
  434868:	mov	x4, x24
  43486c:	mov	x3, x21
  434870:	mov	x2, x23
  434874:	mov	x1, x20
  434878:	mov	x0, x19
  43487c:	bl	433a78 <nftw@plt+0x30d88>
  434880:	cbnz	w0, 434830 <nftw@plt+0x31b40>
  434884:	ldr	w0, [sp, #92]
  434888:	cbz	w0, 434858 <nftw@plt+0x31b68>
  43488c:	b	43482c <nftw@plt+0x31b3c>
  434890:	sub	sp, sp, #0x290
  434894:	stp	x29, x30, [sp, #48]
  434898:	add	x29, sp, #0x30
  43489c:	stp	x19, x20, [sp, #64]
  4348a0:	mov	x20, x0
  4348a4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x1afa8>
  4348a8:	add	x0, x0, #0x9a8
  4348ac:	stp	x21, x22, [sp, #80]
  4348b0:	add	x21, sp, #0x250
  4348b4:	stp	x23, x24, [sp, #96]
  4348b8:	add	x24, sp, #0x1d0
  4348bc:	stp	x25, x26, [sp, #112]
  4348c0:	add	x25, sp, #0x190
  4348c4:	stp	x27, x28, [sp, #128]
  4348c8:	str	x2, [sp, #176]
  4348cc:	stp	x1, x3, [sp, #192]
  4348d0:	stp	x6, x7, [sp, #208]
  4348d4:	stp	x4, x5, [sp, #256]
  4348d8:	stp	xzr, xzr, [sp, #336]
  4348dc:	stp	xzr, xzr, [sp, #352]
  4348e0:	stp	xzr, xzr, [sp, #368]
  4348e4:	stp	xzr, xzr, [sp, #384]
  4348e8:	stp	x0, x2, [sp, #400]
  4348ec:	stp	x2, x3, [sp, #416]
  4348f0:	ldr	x22, [sp, #704]
  4348f4:	ldr	x23, [sp, #712]
  4348f8:	ldr	w0, [sp, #688]
  4348fc:	str	w0, [sp, #432]
  434900:	add	x0, sp, #0x200
  434904:	stp	xzr, xzr, [sp, #144]
  434908:	stp	xzr, xzr, [x0, #-200]
  43490c:	add	x0, sp, #0x138
  434910:	str	x0, [sp, #272]
  434914:	str	xzr, [sp, #328]
  434918:	stp	x22, x23, [sp, #440]
  43491c:	str	wzr, [sp, #456]
  434920:	ldr	x0, [sp, #424]
  434924:	ldr	w26, [sp, #456]
  434928:	cbnz	x0, 434988 <nftw@plt+0x31c98>
  43492c:	cbnz	w26, 434a24 <nftw@plt+0x31d34>
  434930:	add	x0, sp, #0x200
  434934:	mov	x3, x23
  434938:	mov	x2, x22
  43493c:	ldp	x0, x1, [x0, #-200]
  434940:	stp	x0, x1, [sp, #368]
  434944:	ldr	x0, [sp, #328]
  434948:	str	x0, [sp, #384]
  43494c:	ldr	x0, [sp, #144]
  434950:	add	x1, sp, #0x150
  434954:	str	x0, [sp, #392]
  434958:	mov	x0, x20
  43495c:	bl	42ef10 <nftw@plt+0x2c220>
  434960:	cbnz	w0, 434e64 <nftw@plt+0x32174>
  434964:	mov	w0, #0x0                   	// #0
  434968:	ldp	x29, x30, [sp, #48]
  43496c:	ldp	x19, x20, [sp, #64]
  434970:	ldp	x21, x22, [sp, #80]
  434974:	ldp	x23, x24, [sp, #96]
  434978:	ldp	x25, x26, [sp, #112]
  43497c:	ldp	x27, x28, [sp, #128]
  434980:	add	sp, sp, #0x290
  434984:	ret
  434988:	cbnz	w26, 434a24 <nftw@plt+0x31d34>
  43498c:	ldr	x0, [sp, #416]
  434990:	str	x0, [sp, #224]
  434994:	mov	x0, x25
  434998:	bl	4326f4 <nftw@plt+0x2fa04>
  43499c:	mov	w1, w0
  4349a0:	str	x1, [sp, #160]
  4349a4:	mov	x1, #0xffffffff            	// #4294967295
  4349a8:	cmp	x1, w0, uxtw
  4349ac:	b.ne	4349c0 <nftw@plt+0x31cd0>  // b.any
  4349b0:	mov	x0, x25
  4349b4:	mov	w26, #0x1                   	// #1
  4349b8:	bl	432738 <nftw@plt+0x2fa48>
  4349bc:	str	x0, [sp, #160]
  4349c0:	ldp	x0, x1, [x25]
  4349c4:	stp	x0, x1, [x24]
  4349c8:	ldp	x0, x1, [x25, #16]
  4349cc:	stp	x0, x1, [x24, #16]
  4349d0:	ldp	x0, x1, [x25, #32]
  4349d4:	stp	x0, x1, [x24, #32]
  4349d8:	ldp	x0, x1, [x25, #48]
  4349dc:	stp	x0, x1, [x24, #48]
  4349e0:	ldr	x0, [sp, #160]
  4349e4:	str	x0, [sp, #488]
  4349e8:	mov	x1, x0
  4349ec:	mov	x0, x25
  4349f0:	bl	43268c <nftw@plt+0x2f99c>
  4349f4:	cbz	w0, 434a24 <nftw@plt+0x31d34>
  4349f8:	mov	x0, x24
  4349fc:	bl	43279c <nftw@plt+0x2faac>
  434a00:	and	w0, w0, #0xffff
  434a04:	str	w0, [sp, #248]
  434a08:	sub	w0, w0, #0x2
  434a0c:	cmp	w0, #0x2
  434a10:	b.ls	434ac0 <nftw@plt+0x31dd0>  // b.plast
  434a14:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  434a18:	mov	x0, x24
  434a1c:	add	x1, x1, #0x5da
  434a20:	bl	4322ac <nftw@plt+0x2f5bc>
  434a24:	ldr	x0, [sp, #144]
  434a28:	cbz	x0, 434a94 <nftw@plt+0x31da4>
  434a2c:	ldr	x21, [sp, #312]
  434a30:	mov	x19, #0x0                   	// #0
  434a34:	ldr	x1, [x21, x19, lsl #3]
  434a38:	mov	x3, x23
  434a3c:	mov	x2, x22
  434a40:	mov	x0, x20
  434a44:	add	x1, x1, #0x58
  434a48:	bl	432360 <nftw@plt+0x2f670>
  434a4c:	ldr	x1, [x21, x19, lsl #3]
  434a50:	mov	x0, x20
  434a54:	mov	x4, x23
  434a58:	mov	x3, x22
  434a5c:	mov	x2, #0x88                  	// #136
  434a60:	add	x19, x19, #0x1
  434a64:	bl	42ebd8 <nftw@plt+0x2bee8>
  434a68:	ldr	x0, [sp, #144]
  434a6c:	cmp	x0, x19
  434a70:	b.ne	434a34 <nftw@plt+0x31d44>  // b.any
  434a74:	ldp	x1, x0, [sp, #320]
  434a78:	mov	x3, x23
  434a7c:	mov	x2, x22
  434a80:	add	x0, x0, x1
  434a84:	add	x1, sp, #0x138
  434a88:	stp	xzr, x0, [sp, #320]
  434a8c:	mov	x0, x20
  434a90:	bl	42ef10 <nftw@plt+0x2c220>
  434a94:	ldr	x0, [sp, #360]
  434a98:	cbz	x0, 434964 <nftw@plt+0x31c74>
  434a9c:	ldp	x1, x0, [sp, #344]
  434aa0:	mov	x3, x23
  434aa4:	mov	x2, x22
  434aa8:	add	x0, x0, x1
  434aac:	add	x1, sp, #0x150
  434ab0:	stp	xzr, x0, [sp, #344]
  434ab4:	mov	x0, x20
  434ab8:	bl	42ef10 <nftw@plt+0x2c220>
  434abc:	b	434964 <nftw@plt+0x31c74>
  434ac0:	ldr	x4, [sp, #272]
  434ac4:	mov	x3, x23
  434ac8:	mov	x2, x22
  434acc:	mov	x0, x20
  434ad0:	mov	x1, #0x8                   	// #8
  434ad4:	bl	42ede8 <nftw@plt+0x2c0f8>
  434ad8:	mov	x27, x0
  434adc:	cbz	x0, 434a24 <nftw@plt+0x31d34>
  434ae0:	mov	x3, x23
  434ae4:	mov	x2, x22
  434ae8:	mov	x0, x20
  434aec:	mov	x1, #0x88                  	// #136
  434af0:	bl	42ec94 <nftw@plt+0x2bfa4>
  434af4:	mov	x19, x0
  434af8:	cbz	x0, 434a24 <nftw@plt+0x31d34>
  434afc:	ldr	x0, [sp, #144]
  434b00:	str	x19, [x27]
  434b04:	stp	xzr, xzr, [x19, #88]
  434b08:	mov	w1, w26
  434b0c:	add	x0, x0, #0x1
  434b10:	str	x0, [sp, #144]
  434b14:	add	x0, x19, #0x58
  434b18:	str	x0, [sp, #232]
  434b1c:	mov	x0, x24
  434b20:	bl	43277c <nftw@plt+0x2fa8c>
  434b24:	stp	xzr, xzr, [x19, #88]
  434b28:	ldr	x1, [sp, #216]
  434b2c:	cmp	x1, x0
  434b30:	b.hi	434b4c <nftw@plt+0x31e5c>  // b.pmore
  434b34:	mov	x0, x23
  434b38:	mov	w2, #0x0                   	// #0
  434b3c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  434b40:	add	x1, x1, #0x5f5
  434b44:	blr	x22
  434b48:	b	434a24 <nftw@plt+0x31d34>
  434b4c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x1afa8>
  434b50:	add	x1, x1, #0x9c0
  434b54:	str	x1, [sp, #528]
  434b58:	mov	x27, #0x0                   	// #0
  434b5c:	ldr	x1, [sp, #208]
  434b60:	str	x1, [sp, #536]
  434b64:	str	x22, [sp, #568]
  434b68:	add	x1, x1, x0
  434b6c:	str	x1, [sp, #544]
  434b70:	ldr	x1, [sp, #216]
  434b74:	str	x23, [sp, #576]
  434b78:	str	wzr, [sp, #584]
  434b7c:	sub	x0, x1, x0
  434b80:	str	x0, [sp, #552]
  434b84:	ldr	w0, [sp, #688]
  434b88:	str	w0, [sp, #560]
  434b8c:	add	x0, sp, #0x200
  434b90:	ldp	x0, x1, [x0, #16]
  434b94:	stp	x0, x1, [x21]
  434b98:	add	x0, sp, #0x200
  434b9c:	ldp	x0, x1, [x0, #32]
  434ba0:	stp	x0, x1, [x21, #16]
  434ba4:	add	x0, sp, #0x200
  434ba8:	ldp	x0, x1, [x0, #48]
  434bac:	stp	x0, x1, [x21, #32]
  434bb0:	add	x0, sp, #0x200
  434bb4:	ldp	x0, x1, [x0, #64]
  434bb8:	stp	x0, x1, [x21, #48]
  434bbc:	mov	x0, x21
  434bc0:	bl	432890 <nftw@plt+0x2fba0>
  434bc4:	ldr	w1, [sp, #648]
  434bc8:	cbnz	x0, 434cc8 <nftw@plt+0x31fd8>
  434bcc:	cbnz	w1, 434a24 <nftw@plt+0x31d34>
  434bd0:	cbz	x27, 434da8 <nftw@plt+0x320b8>
  434bd4:	lsl	x28, x27, #5
  434bd8:	mov	x3, x23
  434bdc:	mov	x2, x22
  434be0:	mov	x1, x28
  434be4:	mov	x0, x20
  434be8:	bl	42ec94 <nftw@plt+0x2bfa4>
  434bec:	str	x0, [x19, #96]
  434bf0:	cbz	x0, 434a24 <nftw@plt+0x31d34>
  434bf4:	str	x27, [x19, #88]
  434bf8:	add	x27, sp, #0x210
  434bfc:	mov	x2, x28
  434c00:	mov	x28, #0x0                   	// #0
  434c04:	mov	w1, #0x0                   	// #0
  434c08:	bl	402840 <memset@plt>
  434c0c:	ldr	w0, [sp, #584]
  434c10:	cbnz	w0, 434d7c <nftw@plt+0x3208c>
  434c14:	mov	x0, x27
  434c18:	bl	432890 <nftw@plt+0x2fba0>
  434c1c:	str	x0, [sp, #184]
  434c20:	cbz	x0, 434d94 <nftw@plt+0x320a4>
  434c24:	mov	x0, x27
  434c28:	bl	432890 <nftw@plt+0x2fba0>
  434c2c:	str	x0, [sp, #240]
  434c30:	mov	x0, x27
  434c34:	bl	4327ec <nftw@plt+0x2fafc>
  434c38:	and	w0, w0, #0xff
  434c3c:	str	w0, [sp, #252]
  434c40:	ldp	x0, x1, [x27]
  434c44:	stp	x0, x1, [x21]
  434c48:	ldp	x0, x1, [x27, #16]
  434c4c:	stp	x0, x1, [x21, #16]
  434c50:	ldp	x0, x1, [x27, #32]
  434c54:	stp	x0, x1, [x21, #32]
  434c58:	ldp	x0, x1, [x27, #48]
  434c5c:	stp	x0, x1, [x21, #48]
  434c60:	mov	x1, #0x0                   	// #0
  434c64:	mov	x0, x21
  434c68:	str	x1, [sp, #280]
  434c6c:	bl	432890 <nftw@plt+0x2fba0>
  434c70:	str	x0, [sp, #168]
  434c74:	ldr	x1, [sp, #280]
  434c78:	cbnz	x0, 434d04 <nftw@plt+0x32014>
  434c7c:	cbnz	x1, 434d1c <nftw@plt+0x3202c>
  434c80:	mov	x0, x27
  434c84:	bl	432890 <nftw@plt+0x2fba0>
  434c88:	mov	x0, x27
  434c8c:	bl	432890 <nftw@plt+0x2fba0>
  434c90:	mov	x1, #0x0                   	// #0
  434c94:	ldr	x2, [x19, #96]
  434c98:	ldr	x3, [sp, #184]
  434c9c:	add	x0, x2, x28
  434ca0:	str	x3, [x2, x28]
  434ca4:	add	x28, x28, #0x20
  434ca8:	ldr	w2, [sp, #240]
  434cac:	str	w2, [x0, #8]
  434cb0:	ldr	w2, [sp, #252]
  434cb4:	str	w2, [x0, #12]
  434cb8:	ldr	x2, [sp, #168]
  434cbc:	str	x2, [x0, #16]
  434cc0:	str	x1, [x0, #24]
  434cc4:	b	434c0c <nftw@plt+0x31f1c>
  434cc8:	cbnz	w1, 434a24 <nftw@plt+0x31d34>
  434ccc:	mov	x0, x21
  434cd0:	bl	432890 <nftw@plt+0x2fba0>
  434cd4:	add	x27, x27, #0x1
  434cd8:	mov	x0, x21
  434cdc:	bl	4327ec <nftw@plt+0x2fafc>
  434ce0:	mov	x0, x21
  434ce4:	bl	432890 <nftw@plt+0x2fba0>
  434ce8:	cbnz	x0, 434cf8 <nftw@plt+0x32008>
  434cec:	mov	x0, x21
  434cf0:	bl	432890 <nftw@plt+0x2fba0>
  434cf4:	b	434bbc <nftw@plt+0x31ecc>
  434cf8:	mov	x0, x21
  434cfc:	bl	432890 <nftw@plt+0x2fba0>
  434d00:	b	434ce0 <nftw@plt+0x31ff0>
  434d04:	add	x1, x1, #0x1
  434d08:	mov	x0, x21
  434d0c:	str	x1, [sp, #168]
  434d10:	bl	432890 <nftw@plt+0x2fba0>
  434d14:	ldr	x1, [sp, #168]
  434d18:	b	434c64 <nftw@plt+0x31f74>
  434d1c:	lsl	x1, x1, #3
  434d20:	mov	x3, x23
  434d24:	mov	x2, x22
  434d28:	mov	x0, x20
  434d2c:	bl	42ec94 <nftw@plt+0x2bfa4>
  434d30:	mov	x1, x0
  434d34:	cbz	x0, 434d7c <nftw@plt+0x3208c>
  434d38:	mov	x2, x0
  434d3c:	mov	x0, x27
  434d40:	stp	x1, x2, [sp, #288]
  434d44:	bl	432890 <nftw@plt+0x2fba0>
  434d48:	mov	x3, x0
  434d4c:	mov	x0, x27
  434d50:	str	x3, [sp, #280]
  434d54:	bl	432890 <nftw@plt+0x2fba0>
  434d58:	ldp	x3, x1, [sp, #280]
  434d5c:	cbz	x3, 434c94 <nftw@plt+0x31fa4>
  434d60:	ldr	x2, [sp, #296]
  434d64:	stp	w3, w0, [x2]
  434d68:	add	x2, x2, #0x8
  434d6c:	ldr	x0, [sp, #168]
  434d70:	add	x0, x0, #0x1
  434d74:	str	x0, [sp, #168]
  434d78:	b	434d3c <nftw@plt+0x3204c>
  434d7c:	ldr	x1, [sp, #232]
  434d80:	mov	x3, x23
  434d84:	mov	x2, x22
  434d88:	mov	x0, x20
  434d8c:	bl	432360 <nftw@plt+0x2f670>
  434d90:	b	434a24 <nftw@plt+0x31d34>
  434d94:	ldp	x1, x0, [x19, #88]
  434d98:	adrp	x3, 432000 <nftw@plt+0x2f310>
  434d9c:	mov	x2, #0x20                  	// #32
  434da0:	add	x3, x3, #0xc4
  434da4:	bl	434fc0 <nftw@plt+0x322d0>
  434da8:	mov	x0, x24
  434dac:	bl	4327ec <nftw@plt+0x2fafc>
  434db0:	and	w2, w0, #0xff
  434db4:	mov	x1, #0x4                   	// #4
  434db8:	ldr	x0, [sp, #152]
  434dbc:	cmp	w26, #0x0
  434dc0:	str	x0, [x19, #24]
  434dc4:	mov	x0, #0xc                   	// #12
  434dc8:	csel	x0, x0, x1, ne  // ne = any
  434dcc:	stp	w26, w2, [x19, #44]
  434dd0:	ldr	x1, [sp, #160]
  434dd4:	stp	xzr, xzr, [x19, #56]
  434dd8:	ldr	w7, [sp, #688]
  434ddc:	add	x0, x0, x1
  434de0:	stp	xzr, xzr, [x19, #72]
  434de4:	mov	x2, x24
  434de8:	ldr	x1, [sp, #152]
  434dec:	stp	xzr, xzr, [x19, #104]
  434df0:	add	x0, x1, x0
  434df4:	str	x0, [x19, #32]
  434df8:	str	x0, [sp, #152]
  434dfc:	ldr	x0, [sp, #488]
  434e00:	str	x0, [x19, #8]
  434e04:	ldr	x0, [sp, #224]
  434e08:	stp	xzr, xzr, [x19, #120]
  434e0c:	ldr	x1, [sp, #480]
  434e10:	str	x1, [x19]
  434e14:	sub	x1, x1, x0
  434e18:	ldr	w0, [sp, #248]
  434e1c:	str	x1, [x19, #16]
  434e20:	add	x1, sp, #0x290
  434e24:	str	w0, [x19, #40]
  434e28:	add	x0, sp, #0x150
  434e2c:	stp	x19, x0, [sp, #24]
  434e30:	ldr	x0, [sp, #696]
  434e34:	str	x0, [sp]
  434e38:	stp	x22, x23, [sp, #8]
  434e3c:	mov	x0, x20
  434e40:	str	x21, [sp, #40]
  434e44:	ldp	x5, x6, [x1]
  434e48:	ldp	x3, x4, [x1, #16]
  434e4c:	ldr	x1, [sp, #192]
  434e50:	bl	432d40 <nftw@plt+0x30050>
  434e54:	cbz	w0, 434a24 <nftw@plt+0x31d34>
  434e58:	ldr	w0, [sp, #520]
  434e5c:	cbz	w0, 434920 <nftw@plt+0x31c30>
  434e60:	b	434a24 <nftw@plt+0x31d34>
  434e64:	mov	x3, x23
  434e68:	mov	x2, x22
  434e6c:	add	x1, sp, #0x170
  434e70:	mov	x0, x20
  434e74:	bl	42ef10 <nftw@plt+0x2c220>
  434e78:	cbz	w0, 434964 <nftw@plt+0x31c74>
  434e7c:	ldp	x19, x25, [sp, #360]
  434e80:	mov	x2, #0x18                  	// #24
  434e84:	ldr	x21, [sp, #336]
  434e88:	adrp	x3, 432000 <nftw@plt+0x2f310>
  434e8c:	add	x3, x3, #0x3e4
  434e90:	mov	x0, x21
  434e94:	mov	x1, x19
  434e98:	ldr	x24, [sp, #392]
  434e9c:	bl	434fc0 <nftw@plt+0x322d0>
  434ea0:	mov	x3, x23
  434ea4:	mov	x2, x22
  434ea8:	mov	x0, x20
  434eac:	mov	x1, #0xa0                  	// #160
  434eb0:	bl	42ec94 <nftw@plt+0x2bfa4>
  434eb4:	cbz	x0, 434964 <nftw@plt+0x31c74>
  434eb8:	ldr	x1, [sp, #696]
  434ebc:	stp	xzr, x1, [x0]
  434ec0:	ldr	x1, [sp, #192]
  434ec4:	str	x1, [x0, #16]
  434ec8:	ldr	x1, [sp, #176]
  434ecc:	str	x1, [x0, #56]
  434ed0:	ldr	x1, [sp, #200]
  434ed4:	str	x1, [x0, #64]
  434ed8:	ldr	x1, [sp, #256]
  434edc:	str	x1, [x0, #72]
  434ee0:	ldr	x1, [sp, #264]
  434ee4:	str	x1, [x0, #80]
  434ee8:	ldr	x1, [sp, #656]
  434eec:	str	x1, [x0, #88]
  434ef0:	ldr	x1, [sp, #664]
  434ef4:	str	x1, [x0, #96]
  434ef8:	ldr	x1, [sp, #672]
  434efc:	str	x1, [x0, #104]
  434f00:	ldr	x1, [sp, #680]
  434f04:	str	x1, [x0, #112]
  434f08:	ldr	w1, [sp, #688]
  434f0c:	str	w1, [x0, #120]
  434f10:	ldr	x1, [sp, #728]
  434f14:	stp	x21, x19, [x0, #24]
  434f18:	stp	x25, x24, [x0, #40]
  434f1c:	stp	xzr, xzr, [x0, #128]
  434f20:	stp	xzr, xzr, [x0, #144]
  434f24:	cbz	x1, 434f2c <nftw@plt+0x3223c>
  434f28:	str	x0, [x1]
  434f2c:	ldr	w1, [x20, #8]
  434f30:	add	x2, x20, #0x20
  434f34:	cbnz	w1, 434f84 <nftw@plt+0x32294>
  434f38:	ldr	x1, [x20, #32]
  434f3c:	cbnz	x1, 434f5c <nftw@plt+0x3226c>
  434f40:	str	x0, [x2]
  434f44:	ldr	x1, [sp, #720]
  434f48:	adrp	x0, 434000 <nftw@plt+0x31310>
  434f4c:	add	x0, x0, #0x7a4
  434f50:	str	x0, [x1]
  434f54:	mov	w0, #0x1                   	// #1
  434f58:	b	434968 <nftw@plt+0x31c78>
  434f5c:	mov	x2, x1
  434f60:	ldr	x1, [x1]
  434f64:	b	434f3c <nftw@plt+0x3224c>
  434f68:	ldxr	x3, [x1]
  434f6c:	cbnz	x3, 434f78 <nftw@plt+0x32288>
  434f70:	stlxr	w4, x0, [x1]
  434f74:	cbnz	w4, 434f68 <nftw@plt+0x32278>
  434f78:	dmb	ish
  434f7c:	cmp	x3, #0x0
  434f80:	b.eq	434f44 <nftw@plt+0x32254>  // b.none
  434f84:	mov	x1, x2
  434f88:	ldar	x3, [x1]
  434f8c:	cbz	x3, 434f68 <nftw@plt+0x32278>
  434f90:	mov	x1, x3
  434f94:	b	434f88 <nftw@plt+0x32298>
  434f98:	mov	x3, #0x0                   	// #0
  434f9c:	cmp	x3, x2
  434fa0:	b.ne	434fa8 <nftw@plt+0x322b8>  // b.any
  434fa4:	ret
  434fa8:	ldrb	w5, [x1, x3]
  434fac:	ldrb	w4, [x0, x3]
  434fb0:	strb	w5, [x0, x3]
  434fb4:	strb	w4, [x1, x3]
  434fb8:	add	x3, x3, #0x1
  434fbc:	b	434f9c <nftw@plt+0x322ac>
  434fc0:	stp	x29, x30, [sp, #-80]!
  434fc4:	mov	x29, sp
  434fc8:	stp	x19, x20, [sp, #16]
  434fcc:	mov	x20, x0
  434fd0:	mov	x19, x2
  434fd4:	stp	x21, x22, [sp, #32]
  434fd8:	mov	x22, x1
  434fdc:	stp	x23, x24, [sp, #48]
  434fe0:	mov	x24, x3
  434fe4:	str	x25, [sp, #64]
  434fe8:	cmp	x22, #0x1
  434fec:	b.ls	4350bc <nftw@plt+0x323cc>  // b.plast
  434ff0:	lsr	x1, x22, #1
  434ff4:	add	x25, x20, x19
  434ff8:	mov	x21, #0x0                   	// #0
  434ffc:	mov	x23, #0x1                   	// #1
  435000:	mov	x2, x19
  435004:	mov	x0, x20
  435008:	madd	x1, x1, x19, x20
  43500c:	bl	434f98 <nftw@plt+0x322a8>
  435010:	mov	x1, x25
  435014:	mov	x0, x20
  435018:	blr	x24
  43501c:	cmp	w0, #0x0
  435020:	b.le	435040 <nftw@plt+0x32350>
  435024:	add	x21, x21, #0x1
  435028:	cmp	x21, x23
  43502c:	b.eq	435040 <nftw@plt+0x32350>  // b.none
  435030:	madd	x0, x21, x19, x20
  435034:	mov	x2, x19
  435038:	mov	x1, x25
  43503c:	bl	434f98 <nftw@plt+0x322a8>
  435040:	add	x23, x23, #0x1
  435044:	add	x25, x25, x19
  435048:	cmp	x22, x23
  43504c:	b.ne	435010 <nftw@plt+0x32320>  // b.any
  435050:	madd	x1, x21, x19, x19
  435054:	sub	x23, x22, #0x1
  435058:	sub	x23, x23, x21
  43505c:	add	x25, x20, x1
  435060:	cbnz	x21, 435084 <nftw@plt+0x32394>
  435064:	mov	x3, x24
  435068:	mov	x2, x19
  43506c:	mov	x1, x21
  435070:	mov	x0, x20
  435074:	bl	434fc0 <nftw@plt+0x322d0>
  435078:	mov	x20, x25
  43507c:	mov	x22, x23
  435080:	b	434fe8 <nftw@plt+0x322f8>
  435084:	sub	x1, x1, x19
  435088:	mov	x2, x19
  43508c:	add	x1, x20, x1
  435090:	mov	x0, x20
  435094:	bl	434f98 <nftw@plt+0x322a8>
  435098:	cmp	x22, x21, lsl #1
  43509c:	b.hi	435064 <nftw@plt+0x32374>  // b.pmore
  4350a0:	mov	x1, x23
  4350a4:	mov	x0, x25
  4350a8:	mov	x3, x24
  4350ac:	mov	x25, x20
  4350b0:	mov	x23, x21
  4350b4:	bl	434fc0 <nftw@plt+0x322d0>
  4350b8:	b	435078 <nftw@plt+0x32388>
  4350bc:	ldp	x19, x20, [sp, #16]
  4350c0:	ldp	x21, x22, [sp, #32]
  4350c4:	ldp	x23, x24, [sp, #48]
  4350c8:	ldr	x25, [sp, #64]
  4350cc:	ldp	x29, x30, [sp], #80
  4350d0:	ret
  4350d4:	sub	w0, w0, #0x1c
  4350d8:	cmp	w0, #0x34
  4350dc:	b.hi	4350fc <nftw@plt+0x3240c>  // b.pmore
  4350e0:	mov	x1, #0x1                   	// #1
  4350e4:	lsl	x0, x1, x0
  4350e8:	mov	x1, #0x1f                  	// #31
  4350ec:	movk	x1, #0x1a, lsl #48
  4350f0:	tst	x0, x1
  4350f4:	cset	w0, ne  // ne = any
  4350f8:	ret
  4350fc:	mov	w0, #0x0                   	// #0
  435100:	b	4350f8 <nftw@plt+0x32408>
  435104:	mov	x1, x0
  435108:	ldp	w2, w0, [x0, #40]
  43510c:	cmp	w2, w0
  435110:	b.ge	435130 <nftw@plt+0x32440>  // b.tcont
  435114:	ldr	x3, [x1, #32]
  435118:	mov	w0, #0x18                  	// #24
  43511c:	smaddl	x0, w2, w0, x3
  435120:	add	w2, w2, #0x1
  435124:	str	wzr, [x0, #4]
  435128:	str	w2, [x1, #40]
  43512c:	ret
  435130:	mov	x0, #0x0                   	// #0
  435134:	b	43512c <nftw@plt+0x3243c>
  435138:	mov	x5, x2
  43513c:	sub	w2, w1, #0x1
  435140:	cmp	w2, #0x4f
  435144:	b.hi	435174 <nftw@plt+0x32484>  // b.pmore
  435148:	mov	w6, w1
  43514c:	mov	x4, x3
  435150:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  435154:	add	x1, x1, #0x610
  435158:	ldrb	w1, [x1, w2, uxtw]
  43515c:	adr	x2, 435168 <nftw@plt+0x32478>
  435160:	add	x1, x2, w1, sxtb #2
  435164:	br	x1
  435168:	cmp	x5, #0x0
  43516c:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  435170:	b.ne	435180 <nftw@plt+0x32490>  // b.any
  435174:	mov	x0, #0x0                   	// #0
  435178:	ret
  43517c:	cbz	x5, 435174 <nftw@plt+0x32484>
  435180:	stp	x29, x30, [sp, #-16]!
  435184:	mov	x29, sp
  435188:	bl	435104 <nftw@plt+0x32414>
  43518c:	cbz	x0, 435198 <nftw@plt+0x324a8>
  435190:	str	w6, [x0]
  435194:	stp	x5, x4, [x0, #8]
  435198:	ldp	x29, x30, [sp], #16
  43519c:	ret
  4351a0:	cbnz	x3, 435180 <nftw@plt+0x32490>
  4351a4:	b	435174 <nftw@plt+0x32484>
  4351a8:	mov	x4, x1
  4351ac:	stp	x29, x30, [sp, #-16]!
  4351b0:	mov	x29, sp
  4351b4:	bl	435104 <nftw@plt+0x32414>
  4351b8:	cbz	x0, 4351c8 <nftw@plt+0x324d8>
  4351bc:	mov	w1, #0x27                  	// #39
  4351c0:	str	w1, [x0]
  4351c4:	str	x4, [x0, #8]
  4351c8:	ldp	x29, x30, [sp], #16
  4351cc:	ret
  4351d0:	ldr	x4, [x0, #24]
  4351d4:	mov	x2, x1
  4351d8:	mov	w3, #0x4f                  	// #79
  4351dc:	ldrb	w1, [x4]
  4351e0:	cmp	w1, #0x52
  4351e4:	ccmp	w1, w3, #0x4, ne  // ne = any
  4351e8:	b.ne	435220 <nftw@plt+0x32530>  // b.any
  4351ec:	ldr	w3, [x0, #72]
  4351f0:	cmp	w1, #0x52
  4351f4:	b.ne	435214 <nftw@plt+0x32524>  // b.any
  4351f8:	add	w3, w3, #0x2
  4351fc:	mov	w1, #0x1f                  	// #31
  435200:	add	x4, x4, #0x1
  435204:	str	x4, [x0, #24]
  435208:	str	w3, [x0, #72]
  43520c:	mov	x3, #0x0                   	// #0
  435210:	b	435138 <nftw@plt+0x32448>
  435214:	add	w3, w3, #0x3
  435218:	mov	w1, #0x20                  	// #32
  43521c:	b	435200 <nftw@plt+0x32510>
  435220:	mov	x0, x2
  435224:	ret
  435228:	cbz	x1, 435250 <nftw@plt+0x32560>
  43522c:	ldp	w2, w3, [x0, #56]
  435230:	cmp	w2, w3
  435234:	b.ge	435250 <nftw@plt+0x32560>  // b.tcont
  435238:	ldr	x3, [x0, #48]
  43523c:	str	x1, [x3, w2, sxtw #3]
  435240:	add	w2, w2, #0x1
  435244:	str	w2, [x0, #56]
  435248:	mov	w0, #0x1                   	// #1
  43524c:	ret
  435250:	mov	w0, #0x0                   	// #0
  435254:	b	43524c <nftw@plt+0x3255c>
  435258:	stp	x29, x30, [sp, #-32]!
  43525c:	mov	x29, sp
  435260:	stp	x19, x20, [sp, #16]
  435264:	mov	x19, x1
  435268:	mov	x20, x0
  43526c:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  435270:	add	x1, x1, #0x660
  435274:	cbz	x19, 4352dc <nftw@plt+0x325ec>
  435278:	ldr	w0, [x19]
  43527c:	sub	w0, w0, #0x1
  435280:	cmp	w0, #0x4f
  435284:	b.hi	4352dc <nftw@plt+0x325ec>  // b.pmore
  435288:	ldrb	w0, [x1, w0, uxtw]
  43528c:	adr	x2, 435298 <nftw@plt+0x325a8>
  435290:	add	x0, x2, w0, sxtb #2
  435294:	br	x0
  435298:	ldr	w0, [x20, #364]
  43529c:	add	w0, w0, #0x1
  4352a0:	str	w0, [x20, #364]
  4352a4:	ldr	w0, [x20, #308]
  4352a8:	cmp	w0, #0x800
  4352ac:	b.gt	4352dc <nftw@plt+0x325ec>
  4352b0:	ldr	x1, [x19, #8]
  4352b4:	add	w0, w0, #0x1
  4352b8:	str	w0, [x20, #308]
  4352bc:	mov	x0, x20
  4352c0:	bl	435258 <nftw@plt+0x32568>
  4352c4:	ldr	x1, [x19, #16]
  4352c8:	mov	x0, x20
  4352cc:	bl	435258 <nftw@plt+0x32568>
  4352d0:	ldr	w0, [x20, #308]
  4352d4:	sub	w0, w0, #0x1
  4352d8:	str	w0, [x20, #308]
  4352dc:	ldp	x19, x20, [sp, #16]
  4352e0:	ldp	x29, x30, [sp], #32
  4352e4:	ret
  4352e8:	ldr	x0, [x19, #8]
  4352ec:	ldr	w0, [x0]
  4352f0:	cmp	w0, #0x5
  4352f4:	b.ne	4352a4 <nftw@plt+0x325b4>  // b.any
  4352f8:	ldr	w0, [x20, #348]
  4352fc:	add	w0, w0, #0x1
  435300:	str	w0, [x20, #348]
  435304:	b	4352a4 <nftw@plt+0x325b4>
  435308:	ldr	x19, [x19, #16]
  43530c:	b	435274 <nftw@plt+0x32584>
  435310:	ldr	x19, [x19, #8]
  435314:	b	435274 <nftw@plt+0x32584>
  435318:	stp	x29, x30, [sp, #-32]!
  43531c:	mov	x29, sp
  435320:	ldr	x1, [x0, #256]
  435324:	str	x19, [sp, #16]
  435328:	mov	x19, x0
  43532c:	strb	wzr, [x0, x1]
  435330:	ldp	x3, x2, [x0, #272]
  435334:	blr	x3
  435338:	str	xzr, [x19, #256]
  43533c:	ldr	x0, [x19, #320]
  435340:	add	x0, x0, #0x1
  435344:	str	x0, [x19, #320]
  435348:	ldr	x19, [sp, #16]
  43534c:	ldp	x29, x30, [sp], #32
  435350:	ret
  435354:	stp	x29, x30, [sp, #-32]!
  435358:	mov	x29, sp
  43535c:	stp	x19, x20, [sp, #16]
  435360:	and	w20, w1, #0xff
  435364:	mov	x19, x0
  435368:	ldr	x1, [x0, #256]
  43536c:	cmp	x1, #0xff
  435370:	b.ne	435378 <nftw@plt+0x32688>  // b.any
  435374:	bl	435318 <nftw@plt+0x32628>
  435378:	ldr	x0, [x19, #256]
  43537c:	add	x1, x0, #0x1
  435380:	str	x1, [x19, #256]
  435384:	strb	w20, [x19, x0]
  435388:	strb	w20, [x19, #264]
  43538c:	ldp	x19, x20, [sp, #16]
  435390:	ldp	x29, x30, [sp], #32
  435394:	ret
  435398:	stp	x29, x30, [sp, #-48]!
  43539c:	mov	x29, sp
  4353a0:	stp	x19, x20, [sp, #16]
  4353a4:	mov	x19, x1
  4353a8:	add	x20, x1, x2
  4353ac:	str	x21, [sp, #32]
  4353b0:	mov	x21, x0
  4353b4:	cmp	x19, x20
  4353b8:	b.ne	4353cc <nftw@plt+0x326dc>  // b.any
  4353bc:	ldp	x19, x20, [sp, #16]
  4353c0:	ldr	x21, [sp, #32]
  4353c4:	ldp	x29, x30, [sp], #48
  4353c8:	ret
  4353cc:	ldrb	w1, [x19], #1
  4353d0:	mov	x0, x21
  4353d4:	bl	435354 <nftw@plt+0x32664>
  4353d8:	b	4353b4 <nftw@plt+0x326c4>
  4353dc:	mov	x1, x0
  4353e0:	mov	w0, #0x0                   	// #0
  4353e4:	cbz	x1, 4353fc <nftw@plt+0x3270c>
  4353e8:	ldr	w2, [x1]
  4353ec:	cmp	w2, #0x2f
  4353f0:	b.ne	4353fc <nftw@plt+0x3270c>  // b.any
  4353f4:	ldr	x2, [x1, #8]
  4353f8:	cbnz	x2, 435400 <nftw@plt+0x32710>
  4353fc:	ret
  435400:	add	w0, w0, #0x1
  435404:	ldr	x1, [x1, #16]
  435408:	b	4353e4 <nftw@plt+0x326f4>
  43540c:	stp	x29, x30, [sp, #-32]!
  435410:	mov	x29, sp
  435414:	stp	x19, x20, [sp, #16]
  435418:	mov	x20, x0
  43541c:	mov	x19, x1
  435420:	mov	x0, x1
  435424:	bl	402630 <strlen@plt>
  435428:	mov	x1, x19
  43542c:	mov	x2, x0
  435430:	mov	x0, x20
  435434:	ldp	x19, x20, [sp, #16]
  435438:	ldp	x29, x30, [sp], #32
  43543c:	b	435398 <nftw@plt+0x326a8>
  435440:	stp	x29, x30, [sp, #-64]!
  435444:	mov	w2, w1
  435448:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  43544c:	mov	x29, sp
  435450:	add	x1, x1, #0xed4
  435454:	str	x19, [sp, #16]
  435458:	mov	x19, x0
  43545c:	add	x0, sp, #0x20
  435460:	bl	4026e0 <sprintf@plt>
  435464:	add	x1, sp, #0x20
  435468:	mov	x0, x19
  43546c:	bl	43540c <nftw@plt+0x3271c>
  435470:	ldr	x19, [sp, #16]
  435474:	ldp	x29, x30, [sp], #64
  435478:	ret
  43547c:	mov	x1, x0
  435480:	ldr	x0, [x0]
  435484:	ldrb	w3, [x0]
  435488:	cmp	w3, #0x6e
  43548c:	b.ne	4354c8 <nftw@plt+0x327d8>  // b.any
  435490:	add	x2, x0, #0x1
  435494:	str	x2, [x1]
  435498:	mov	w5, #0x1                   	// #1
  43549c:	ldrb	w3, [x0, #1]
  4354a0:	mov	w0, #0x0                   	// #0
  4354a4:	mov	w6, #0x7fffffff            	// #2147483647
  4354a8:	mov	w4, #0xa                   	// #10
  4354ac:	sub	w2, w3, #0x30
  4354b0:	and	w7, w2, #0xff
  4354b4:	cmp	w7, #0x9
  4354b8:	b.ls	4354d0 <nftw@plt+0x327e0>  // b.plast
  4354bc:	cbz	w5, 4354c4 <nftw@plt+0x327d4>
  4354c0:	neg	w0, w0
  4354c4:	ret
  4354c8:	mov	w5, #0x0                   	// #0
  4354cc:	b	4354a0 <nftw@plt+0x327b0>
  4354d0:	sub	w2, w6, w2
  4354d4:	udiv	w2, w2, w4
  4354d8:	cmp	w2, w0
  4354dc:	b.lt	4354fc <nftw@plt+0x3280c>  // b.tstop
  4354e0:	ldr	x2, [x1]
  4354e4:	madd	w0, w0, w4, w3
  4354e8:	add	x3, x2, #0x1
  4354ec:	str	x3, [x1]
  4354f0:	sub	w0, w0, #0x30
  4354f4:	ldrb	w3, [x2, #1]
  4354f8:	b	4354ac <nftw@plt+0x327bc>
  4354fc:	mov	w0, #0xffffffff            	// #-1
  435500:	b	4354c4 <nftw@plt+0x327d4>
  435504:	mov	x4, x0
  435508:	stp	x29, x30, [sp, #-16]!
  43550c:	mov	x29, sp
  435510:	bl	435104 <nftw@plt+0x32414>
  435514:	mov	x8, x0
  435518:	cbz	x0, 435534 <nftw@plt+0x32844>
  43551c:	mov	w0, #0x42                  	// #66
  435520:	str	w0, [x8]
  435524:	add	x0, x4, #0x18
  435528:	bl	43547c <nftw@plt+0x3278c>
  43552c:	sxtw	x0, w0
  435530:	str	x0, [x8, #8]
  435534:	mov	x0, x8
  435538:	ldp	x29, x30, [sp], #16
  43553c:	ret
  435540:	mov	x8, x0
  435544:	ldr	x0, [x0, #24]
  435548:	ldrb	w0, [x0]
  43554c:	cmp	w0, #0x5f
  435550:	b.eq	4355a4 <nftw@plt+0x328b4>  // b.none
  435554:	cmp	w0, #0x6e
  435558:	b.ne	435570 <nftw@plt+0x32880>  // b.any
  43555c:	mov	w0, #0xffffffff            	// #-1
  435560:	ret
  435564:	mov	w0, #0xffffffff            	// #-1
  435568:	ldp	x29, x30, [sp], #16
  43556c:	ret
  435570:	stp	x29, x30, [sp, #-16]!
  435574:	add	x0, x8, #0x18
  435578:	mov	x29, sp
  43557c:	bl	43547c <nftw@plt+0x3278c>
  435580:	adds	w0, w0, #0x1
  435584:	b.mi	435564 <nftw@plt+0x32874>  // b.first
  435588:	ldr	x1, [x8, #24]
  43558c:	ldrb	w2, [x1]
  435590:	cmp	w2, #0x5f
  435594:	b.ne	435564 <nftw@plt+0x32874>  // b.any
  435598:	add	x1, x1, #0x1
  43559c:	str	x1, [x8, #24]
  4355a0:	b	435568 <nftw@plt+0x32878>
  4355a4:	ldr	x1, [x8, #24]
  4355a8:	mov	w0, #0x0                   	// #0
  4355ac:	ldrb	w2, [x1]
  4355b0:	cmp	w2, #0x5f
  4355b4:	b.ne	43555c <nftw@plt+0x3286c>  // b.any
  4355b8:	add	x1, x1, #0x1
  4355bc:	str	x1, [x8, #24]
  4355c0:	ret
  4355c4:	ldr	x1, [x0, #24]
  4355c8:	ldrb	w2, [x1]
  4355cc:	cmp	w2, #0x54
  4355d0:	b.eq	4355e8 <nftw@plt+0x328f8>  // b.none
  4355d4:	mov	x0, #0x0                   	// #0
  4355d8:	ret
  4355dc:	mov	x0, #0x0                   	// #0
  4355e0:	ldp	x29, x30, [sp], #16
  4355e4:	ret
  4355e8:	stp	x29, x30, [sp, #-16]!
  4355ec:	add	x1, x1, #0x1
  4355f0:	mov	x9, x0
  4355f4:	mov	x29, sp
  4355f8:	str	x1, [x0, #24]
  4355fc:	bl	435540 <nftw@plt+0x32850>
  435600:	sxtw	x4, w0
  435604:	tbnz	w4, #31, 4355dc <nftw@plt+0x328ec>
  435608:	mov	x0, x9
  43560c:	bl	435104 <nftw@plt+0x32414>
  435610:	cbz	x0, 4355e0 <nftw@plt+0x328f0>
  435614:	mov	w1, #0x5                   	// #5
  435618:	str	w1, [x0]
  43561c:	str	x4, [x0, #8]
  435620:	b	4355e0 <nftw@plt+0x328f0>
  435624:	mov	x8, x0
  435628:	cbnz	w1, 435658 <nftw@plt+0x32968>
  43562c:	ldr	x0, [x0, #24]
  435630:	ldrb	w1, [x0]
  435634:	cbnz	w1, 43564c <nftw@plt+0x3295c>
  435638:	mov	w0, #0x0                   	// #0
  43563c:	ret
  435640:	mov	w0, #0x0                   	// #0
  435644:	ldp	x29, x30, [sp], #16
  435648:	ret
  43564c:	add	x1, x0, #0x1
  435650:	str	x1, [x8, #24]
  435654:	ldrb	w1, [x0]
  435658:	stp	x29, x30, [sp, #-16]!
  43565c:	cmp	w1, #0x68
  435660:	mov	x29, sp
  435664:	b.ne	435690 <nftw@plt+0x329a0>  // b.any
  435668:	add	x0, x8, #0x18
  43566c:	bl	43547c <nftw@plt+0x3278c>
  435670:	ldr	x0, [x8, #24]
  435674:	ldrb	w1, [x0]
  435678:	cmp	w1, #0x5f
  43567c:	b.ne	435640 <nftw@plt+0x32950>  // b.any
  435680:	add	x0, x0, #0x1
  435684:	str	x0, [x8, #24]
  435688:	mov	w0, #0x1                   	// #1
  43568c:	b	435644 <nftw@plt+0x32954>
  435690:	cmp	w1, #0x76
  435694:	b.ne	435640 <nftw@plt+0x32950>  // b.any
  435698:	add	x9, x8, #0x18
  43569c:	mov	x0, x9
  4356a0:	bl	43547c <nftw@plt+0x3278c>
  4356a4:	ldr	x0, [x8, #24]
  4356a8:	ldrb	w1, [x0]
  4356ac:	cmp	w1, #0x5f
  4356b0:	b.ne	435640 <nftw@plt+0x32950>  // b.any
  4356b4:	add	x0, x0, #0x1
  4356b8:	str	x0, [x8, #24]
  4356bc:	mov	x0, x9
  4356c0:	b	43566c <nftw@plt+0x3297c>
  4356c4:	ldrb	w2, [x0]
  4356c8:	sub	w1, w2, #0x4b
  4356cc:	and	w1, w1, #0xff
  4356d0:	cmp	w1, #0x27
  4356d4:	b.ls	4356e8 <nftw@plt+0x329f8>  // b.plast
  4356d8:	cmp	w2, #0x44
  4356dc:	b.eq	4356fc <nftw@plt+0x32a0c>  // b.none
  4356e0:	mov	w0, #0x0                   	// #0
  4356e4:	ret
  4356e8:	mov	x0, #0x801                 	// #2049
  4356ec:	movk	x0, #0x80, lsl #32
  4356f0:	lsr	x0, x0, x1
  4356f4:	and	w0, w0, #0x1
  4356f8:	b	4356e4 <nftw@plt+0x329f4>
  4356fc:	ldrb	w0, [x0, #1]
  435700:	and	w1, w0, #0xffffffdf
  435704:	sub	w0, w0, #0x77
  435708:	and	w0, w0, #0xff
  43570c:	cmp	w1, #0x4f
  435710:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  435714:	cset	w0, ls  // ls = plast
  435718:	b	4356e4 <nftw@plt+0x329f4>
  43571c:	ldr	x0, [x0]
  435720:	ldrb	w1, [x0, #1]
  435724:	cmp	w1, #0x63
  435728:	b.ne	435754 <nftw@plt+0x32a64>  // b.any
  43572c:	ldrb	w0, [x0]
  435730:	sub	w1, w0, #0x63
  435734:	and	w1, w1, #0xff
  435738:	cmp	w1, #0x1
  43573c:	b.ls	43575c <nftw@plt+0x32a6c>  // b.plast
  435740:	sub	w0, w0, #0x72
  435744:	and	w0, w0, #0xff
  435748:	cmp	w0, #0x1
  43574c:	cset	w0, ls  // ls = plast
  435750:	ret
  435754:	mov	w0, #0x0                   	// #0
  435758:	b	435750 <nftw@plt+0x32a60>
  43575c:	mov	w0, #0x1                   	// #1
  435760:	b	435750 <nftw@plt+0x32a60>
  435764:	mov	x8, x0
  435768:	ldr	x0, [x0, #24]
  43576c:	ldrb	w1, [x0]
  435770:	cmp	w1, #0x5f
  435774:	b.eq	435780 <nftw@plt+0x32a90>  // b.none
  435778:	mov	w0, #0x1                   	// #1
  43577c:	ret
  435780:	stp	x29, x30, [sp, #-16]!
  435784:	add	x1, x0, #0x1
  435788:	mov	x29, sp
  43578c:	str	x1, [x8, #24]
  435790:	ldrb	w1, [x0, #1]
  435794:	cmp	w1, #0x5f
  435798:	b.ne	4357e4 <nftw@plt+0x32af4>  // b.any
  43579c:	add	x0, x0, #0x2
  4357a0:	mov	w9, #0x2                   	// #2
  4357a4:	str	x0, [x8, #24]
  4357a8:	add	x0, x8, #0x18
  4357ac:	bl	43547c <nftw@plt+0x3278c>
  4357b0:	tbnz	w0, #31, 4357ec <nftw@plt+0x32afc>
  4357b4:	cmp	w9, #0x1
  4357b8:	ccmp	w0, #0x9, #0x4, gt
  4357bc:	b.le	4357d8 <nftw@plt+0x32ae8>
  4357c0:	ldr	x0, [x8, #24]
  4357c4:	ldrb	w1, [x0]
  4357c8:	cmp	w1, #0x5f
  4357cc:	b.ne	4357ec <nftw@plt+0x32afc>  // b.any
  4357d0:	add	x0, x0, #0x1
  4357d4:	str	x0, [x8, #24]
  4357d8:	mov	w0, #0x1                   	// #1
  4357dc:	ldp	x29, x30, [sp], #16
  4357e0:	ret
  4357e4:	mov	w9, #0x1                   	// #1
  4357e8:	b	4357a8 <nftw@plt+0x32ab8>
  4357ec:	mov	w0, #0x0                   	// #0
  4357f0:	b	4357dc <nftw@plt+0x32aec>
  4357f4:	cbnz	x0, 4357fc <nftw@plt+0x32b0c>
  4357f8:	ret
  4357fc:	ldr	w2, [x0]
  435800:	cmp	w2, #0x2f
  435804:	b.ne	435828 <nftw@plt+0x32b38>  // b.any
  435808:	cmp	w1, #0x0
  43580c:	b.le	43581c <nftw@plt+0x32b2c>
  435810:	sub	w1, w1, #0x1
  435814:	ldr	x0, [x0, #16]
  435818:	b	4357f4 <nftw@plt+0x32b04>
  43581c:	b.ne	435828 <nftw@plt+0x32b38>  // b.any
  435820:	ldr	x0, [x0, #8]
  435824:	b	4357f8 <nftw@plt+0x32b08>
  435828:	mov	x0, #0x0                   	// #0
  43582c:	b	4357f8 <nftw@plt+0x32b08>
  435830:	stp	x29, x30, [sp, #-32]!
  435834:	mov	x29, sp
  435838:	stp	x19, x20, [sp, #16]
  43583c:	mov	x19, x0
  435840:	ldr	w0, [x0, #24]
  435844:	cbnz	w0, 435888 <nftw@plt+0x32b98>
  435848:	ldr	x20, [x19, #16]
  43584c:	mov	x0, #0x2                   	// #2
  435850:	cmp	x20, #0x0
  435854:	csel	x20, x20, x0, ne  // ne = any
  435858:	cmp	x20, x1
  43585c:	b.cc	435894 <nftw@plt+0x32ba4>  // b.lo, b.ul, b.last
  435860:	ldr	x0, [x19]
  435864:	mov	x1, x20
  435868:	bl	4028c0 <realloc@plt>
  43586c:	cbnz	x0, 43589c <nftw@plt+0x32bac>
  435870:	ldr	x0, [x19]
  435874:	bl	402a80 <free@plt>
  435878:	stp	xzr, xzr, [x19]
  43587c:	mov	w0, #0x1                   	// #1
  435880:	str	xzr, [x19, #16]
  435884:	str	w0, [x19, #24]
  435888:	ldp	x19, x20, [sp, #16]
  43588c:	ldp	x29, x30, [sp], #32
  435890:	ret
  435894:	lsl	x20, x20, #1
  435898:	b	435858 <nftw@plt+0x32b68>
  43589c:	str	x0, [x19]
  4358a0:	str	x20, [x19, #16]
  4358a4:	b	435888 <nftw@plt+0x32b98>
  4358a8:	stp	x29, x30, [sp, #-48]!
  4358ac:	mov	x29, sp
  4358b0:	str	x21, [sp, #32]
  4358b4:	mov	x21, x0
  4358b8:	ldr	x0, [x2, #8]
  4358bc:	stp	x19, x20, [sp, #16]
  4358c0:	mov	x20, x1
  4358c4:	add	x1, x1, #0x1
  4358c8:	mov	x19, x2
  4358cc:	add	x1, x1, x0
  4358d0:	ldr	x0, [x2, #16]
  4358d4:	cmp	x1, x0
  4358d8:	b.ls	4358e4 <nftw@plt+0x32bf4>  // b.plast
  4358dc:	mov	x0, x2
  4358e0:	bl	435830 <nftw@plt+0x32b40>
  4358e4:	ldr	w0, [x19, #24]
  4358e8:	cbnz	w0, 435918 <nftw@plt+0x32c28>
  4358ec:	ldp	x3, x0, [x19]
  4358f0:	mov	x2, x20
  4358f4:	mov	x1, x21
  4358f8:	add	x0, x3, x0
  4358fc:	bl	4025d0 <memcpy@plt>
  435900:	ldp	x0, x1, [x19]
  435904:	add	x0, x0, x20
  435908:	strb	wzr, [x0, x1]
  43590c:	ldr	x1, [x19, #8]
  435910:	add	x20, x1, x20
  435914:	str	x20, [x19, #8]
  435918:	ldp	x19, x20, [sp, #16]
  43591c:	ldr	x21, [sp, #32]
  435920:	ldp	x29, x30, [sp], #48
  435924:	ret
  435928:	mov	x2, x0
  43592c:	ldr	x0, [x0, #288]
  435930:	cbnz	x0, 435940 <nftw@plt+0x32c50>
  435934:	mov	w1, #0x1                   	// #1
  435938:	str	w1, [x2, #304]
  43593c:	ret
  435940:	ldr	x1, [x1]
  435944:	ldr	x0, [x0, #8]
  435948:	ldr	x0, [x0, #16]
  43594c:	tbnz	w1, #31, 43593c <nftw@plt+0x32c4c>
  435950:	b	4357f4 <nftw@plt+0x32b04>
  435954:	stp	x29, x30, [sp, #-64]!
  435958:	mov	x29, sp
  43595c:	str	x23, [sp, #48]
  435960:	mov	x23, #0x8001                	// #32769
  435964:	movk	x23, #0x410, lsl #16
  435968:	stp	x19, x20, [sp, #16]
  43596c:	movk	x23, #0xc600, lsl #32
  435970:	mov	x20, x0
  435974:	mov	x19, x1
  435978:	stp	x21, x22, [sp, #32]
  43597c:	adrp	x21, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  435980:	add	x21, x21, #0x6b0
  435984:	mov	x22, #0x1                   	// #1
  435988:	movk	x23, #0x19, lsl #48
  43598c:	cbz	x19, 435a14 <nftw@plt+0x32d24>
  435990:	ldr	w1, [x19]
  435994:	cmp	w1, #0x8
  435998:	b.ls	4359d4 <nftw@plt+0x32ce4>  // b.plast
  43599c:	sub	w1, w1, #0x18
  4359a0:	cmp	w1, #0x34
  4359a4:	b.ls	4359bc <nftw@plt+0x32ccc>  // b.plast
  4359a8:	ldr	x1, [x19, #8]
  4359ac:	mov	x0, x20
  4359b0:	bl	435954 <nftw@plt+0x32c64>
  4359b4:	cbz	x0, 4359cc <nftw@plt+0x32cdc>
  4359b8:	b	435a00 <nftw@plt+0x32d10>
  4359bc:	lsl	x1, x22, x1
  4359c0:	tst	x1, x23
  4359c4:	b.ne	435a14 <nftw@plt+0x32d24>  // b.any
  4359c8:	tbz	w1, #27, 4359a8 <nftw@plt+0x32cb8>
  4359cc:	ldr	x19, [x19, #16]
  4359d0:	b	43598c <nftw@plt+0x32c9c>
  4359d4:	ldrb	w0, [x21, w1, uxtw]
  4359d8:	adr	x1, 4359e4 <nftw@plt+0x32cf4>
  4359dc:	add	x0, x1, w0, sxtb #2
  4359e0:	br	x0
  4359e4:	add	x1, x19, #0x8
  4359e8:	mov	x0, x20
  4359ec:	bl	435928 <nftw@plt+0x32c38>
  4359f0:	cbz	x0, 435a14 <nftw@plt+0x32d24>
  4359f4:	ldr	w1, [x0]
  4359f8:	cmp	w1, #0x2f
  4359fc:	b.ne	435a14 <nftw@plt+0x32d24>  // b.any
  435a00:	ldp	x19, x20, [sp, #16]
  435a04:	ldp	x21, x22, [sp, #32]
  435a08:	ldr	x23, [sp, #48]
  435a0c:	ldp	x29, x30, [sp], #64
  435a10:	ret
  435a14:	mov	x0, #0x0                   	// #0
  435a18:	b	435a00 <nftw@plt+0x32d10>
  435a1c:	stp	x29, x30, [sp, #-224]!
  435a20:	mov	x29, sp
  435a24:	stp	x19, x20, [sp, #16]
  435a28:	mov	x19, x0
  435a2c:	stp	x21, x22, [sp, #32]
  435a30:	stp	x23, x24, [sp, #48]
  435a34:	str	x25, [sp, #64]
  435a38:	cbnz	x2, 435a5c <nftw@plt+0x32d6c>
  435a3c:	mov	w0, #0x1                   	// #1
  435a40:	str	w0, [x19, #304]
  435a44:	ldp	x19, x20, [sp, #16]
  435a48:	ldp	x21, x22, [sp, #32]
  435a4c:	ldp	x23, x24, [sp, #48]
  435a50:	ldr	x25, [sp, #64]
  435a54:	ldp	x29, x30, [sp], #224
  435a58:	ret
  435a5c:	ldr	w22, [x0, #304]
  435a60:	cbnz	w22, 435a44 <nftw@plt+0x32d54>
  435a64:	ldr	w0, [x2]
  435a68:	mov	x20, x2
  435a6c:	cmp	w0, #0x50
  435a70:	b.hi	436c24 <nftw@plt+0x33f34>  // b.pmore
  435a74:	mov	w21, w1
  435a78:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  435a7c:	add	x1, x1, #0x6bc
  435a80:	ldrh	w1, [x1, w0, uxtw #1]
  435a84:	adr	x2, 435a90 <nftw@plt+0x32da0>
  435a88:	add	x1, x2, w1, sxth #2
  435a8c:	br	x1
  435a90:	ldrsw	x2, [x20, #16]
  435a94:	ldr	x20, [x20, #8]
  435a98:	tbnz	w21, #2, 435aac <nftw@plt+0x32dbc>
  435a9c:	mov	x1, x20
  435aa0:	mov	x0, x19
  435aa4:	bl	435398 <nftw@plt+0x326a8>
  435aa8:	b	435a44 <nftw@plt+0x32d54>
  435aac:	add	x21, x20, x2
  435ab0:	cmp	x21, x20
  435ab4:	b.ls	435a44 <nftw@plt+0x32d54>  // b.plast
  435ab8:	sub	x0, x21, x20
  435abc:	ldrb	w3, [x20]
  435ac0:	cmp	x0, #0x3
  435ac4:	b.le	435af8 <nftw@plt+0x32e08>
  435ac8:	cmp	w3, #0x5f
  435acc:	b.ne	435af8 <nftw@plt+0x32e08>  // b.any
  435ad0:	ldrb	w0, [x20, #1]
  435ad4:	cmp	w0, #0x5f
  435ad8:	b.ne	435af8 <nftw@plt+0x32e08>  // b.any
  435adc:	ldrb	w0, [x20, #2]
  435ae0:	cmp	w0, #0x55
  435ae4:	b.ne	435af8 <nftw@plt+0x32e08>  // b.any
  435ae8:	add	x22, x20, #0x3
  435aec:	mov	x1, #0x0                   	// #0
  435af0:	cmp	x21, x22
  435af4:	b.hi	435b0c <nftw@plt+0x32e1c>  // b.pmore
  435af8:	mov	w1, w3
  435afc:	mov	x0, x19
  435b00:	mov	x22, x20
  435b04:	bl	435354 <nftw@plt+0x32664>
  435b08:	b	435b74 <nftw@plt+0x32e84>
  435b0c:	ldrb	w2, [x22]
  435b10:	sub	w0, w2, #0x30
  435b14:	and	w4, w0, #0xff
  435b18:	cmp	w4, #0x9
  435b1c:	b.ls	435b34 <nftw@plt+0x32e44>  // b.plast
  435b20:	sub	w0, w2, #0x41
  435b24:	and	w0, w0, #0xff
  435b28:	cmp	w0, #0x5
  435b2c:	b.hi	435b44 <nftw@plt+0x32e54>  // b.pmore
  435b30:	sub	w0, w2, #0x37
  435b34:	sxtw	x0, w0
  435b38:	add	x22, x22, #0x1
  435b3c:	add	x1, x0, x1, lsl #4
  435b40:	b	435af0 <nftw@plt+0x32e00>
  435b44:	sub	w0, w2, #0x61
  435b48:	and	w0, w0, #0xff
  435b4c:	cmp	w0, #0x5
  435b50:	b.hi	435b5c <nftw@plt+0x32e6c>  // b.pmore
  435b54:	sub	w0, w2, #0x57
  435b58:	b	435b34 <nftw@plt+0x32e44>
  435b5c:	cmp	w2, #0x5f
  435b60:	b.ne	435af8 <nftw@plt+0x32e08>  // b.any
  435b64:	cmp	x1, #0xff
  435b68:	b.hi	435af8 <nftw@plt+0x32e08>  // b.pmore
  435b6c:	mov	x0, x19
  435b70:	bl	435354 <nftw@plt+0x32664>
  435b74:	add	x20, x22, #0x1
  435b78:	b	435ab0 <nftw@plt+0x32dc0>
  435b7c:	ldr	x2, [x20, #8]
  435b80:	mov	w1, w21
  435b84:	mov	x0, x19
  435b88:	bl	43722c <nftw@plt+0x3453c>
  435b8c:	mov	x0, x19
  435b90:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435b94:	add	x1, x1, #0x4f0
  435b98:	bl	43540c <nftw@plt+0x3271c>
  435b9c:	ldr	x2, [x20, #16]
  435ba0:	mov	w1, w21
  435ba4:	mov	x0, x19
  435ba8:	bl	43722c <nftw@plt+0x3453c>
  435bac:	mov	x0, x19
  435bb0:	mov	w1, #0x5d                  	// #93
  435bb4:	bl	435354 <nftw@plt+0x32664>
  435bb8:	b	435a44 <nftw@plt+0x32d54>
  435bbc:	ldr	x2, [x20, #8]
  435bc0:	mov	w1, w21
  435bc4:	mov	x0, x19
  435bc8:	bl	43722c <nftw@plt+0x3453c>
  435bcc:	tbnz	w21, #2, 435c38 <nftw@plt+0x32f48>
  435bd0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435bd4:	mov	x0, x19
  435bd8:	add	x1, x1, #0x505
  435bdc:	bl	43540c <nftw@plt+0x3271c>
  435be0:	ldr	x20, [x20, #16]
  435be4:	ldr	w0, [x20]
  435be8:	cmp	w0, #0x47
  435bec:	b.ne	435c24 <nftw@plt+0x32f34>  // b.any
  435bf0:	mov	x0, x19
  435bf4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435bf8:	add	x1, x1, #0x4f6
  435bfc:	bl	43540c <nftw@plt+0x3271c>
  435c00:	ldr	w1, [x20, #16]
  435c04:	mov	x0, x19
  435c08:	add	w1, w1, #0x1
  435c0c:	bl	435440 <nftw@plt+0x32750>
  435c10:	mov	x0, x19
  435c14:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435c18:	add	x1, x1, #0x504
  435c1c:	bl	43540c <nftw@plt+0x3271c>
  435c20:	ldr	x20, [x20, #8]
  435c24:	mov	x2, x20
  435c28:	mov	w1, w21
  435c2c:	mov	x0, x19
  435c30:	bl	43722c <nftw@plt+0x3453c>
  435c34:	b	435a44 <nftw@plt+0x32d54>
  435c38:	mov	x0, x19
  435c3c:	mov	w1, #0x2e                  	// #46
  435c40:	bl	435354 <nftw@plt+0x32664>
  435c44:	b	435be0 <nftw@plt+0x32ef0>
  435c48:	add	x3, sp, #0x60
  435c4c:	mov	w23, #0x0                   	// #0
  435c50:	mov	x2, x3
  435c54:	ldr	x22, [x20, #8]
  435c58:	ldr	x24, [x19, #296]
  435c5c:	str	xzr, [x19, #296]
  435c60:	cbz	x22, 435c6c <nftw@plt+0x32f7c>
  435c64:	cmp	w23, #0x4
  435c68:	b.ne	435c78 <nftw@plt+0x32f88>  // b.any
  435c6c:	mov	w0, #0x1                   	// #1
  435c70:	str	w0, [x19, #304]
  435c74:	b	435a44 <nftw@plt+0x32d54>
  435c78:	str	wzr, [x3, #16]
  435c7c:	add	w23, w23, #0x1
  435c80:	ldp	x4, x0, [x19, #288]
  435c84:	stp	x0, x22, [x3]
  435c88:	ldr	w5, [x22]
  435c8c:	str	x4, [x3, #24]
  435c90:	str	x3, [x19, #296]
  435c94:	mov	w0, w5
  435c98:	bl	4350d4 <nftw@plt+0x323e4>
  435c9c:	add	x3, x3, #0x20
  435ca0:	cbz	w0, 43717c <nftw@plt+0x3448c>
  435ca4:	ldr	x22, [x22, #8]
  435ca8:	b	435c60 <nftw@plt+0x32f70>
  435cac:	cmp	w23, #0x4
  435cb0:	b.eq	435c6c <nftw@plt+0x32f7c>  // b.none
  435cb4:	ldp	x0, x1, [x2, #-32]
  435cb8:	stur	x22, [x2, #-24]
  435cbc:	stp	x0, x1, [x2]
  435cc0:	sub	x3, x2, #0x20
  435cc4:	add	w23, w23, #0x1
  435cc8:	ldp	x0, x1, [x2, #-16]
  435ccc:	stur	wzr, [x2, #-16]
  435cd0:	stp	x4, x3, [x2, #-8]
  435cd4:	stp	x0, x1, [x2, #16]
  435cd8:	ldr	x22, [x22, #8]
  435cdc:	str	x2, [x19, #296]
  435ce0:	add	x2, x2, #0x20
  435ce4:	b	4371a4 <nftw@plt+0x344b4>
  435ce8:	ldr	x22, [x20, #8]
  435cec:	ldr	x24, [x19, #296]
  435cf0:	str	xzr, [x19, #296]
  435cf4:	ldr	x23, [x19, #368]
  435cf8:	str	x20, [x19, #368]
  435cfc:	tbz	w21, #2, 435d58 <nftw@plt+0x33068>
  435d00:	ldr	w0, [x22]
  435d04:	cbnz	w0, 435d58 <nftw@plt+0x33068>
  435d08:	ldr	w0, [x22, #16]
  435d0c:	cmp	w0, #0x6
  435d10:	b.ne	435d58 <nftw@plt+0x33068>  // b.any
  435d14:	ldr	x0, [x22, #8]
  435d18:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435d1c:	mov	x2, #0x6                   	// #6
  435d20:	add	x1, x1, #0x508
  435d24:	bl	4027f0 <strncmp@plt>
  435d28:	cbnz	w0, 435d58 <nftw@plt+0x33068>
  435d2c:	ldr	x2, [x20, #16]
  435d30:	mov	w1, w21
  435d34:	mov	x0, x19
  435d38:	bl	43722c <nftw@plt+0x3453c>
  435d3c:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  435d40:	mov	x0, x19
  435d44:	add	x1, x1, #0x6c1
  435d48:	bl	43540c <nftw@plt+0x3271c>
  435d4c:	str	x24, [x19, #296]
  435d50:	str	x23, [x19, #368]
  435d54:	b	435a44 <nftw@plt+0x32d54>
  435d58:	mov	x0, x19
  435d5c:	mov	x2, x22
  435d60:	mov	w1, w21
  435d64:	bl	43722c <nftw@plt+0x3453c>
  435d68:	ldrb	w0, [x19, #264]
  435d6c:	cmp	w0, #0x3c
  435d70:	b.ne	435d80 <nftw@plt+0x33090>  // b.any
  435d74:	mov	x0, x19
  435d78:	mov	w1, #0x20                  	// #32
  435d7c:	bl	435354 <nftw@plt+0x32664>
  435d80:	mov	x0, x19
  435d84:	mov	w1, #0x3c                  	// #60
  435d88:	bl	435354 <nftw@plt+0x32664>
  435d8c:	ldr	x2, [x20, #16]
  435d90:	mov	x0, x19
  435d94:	mov	w1, w21
  435d98:	bl	43722c <nftw@plt+0x3453c>
  435d9c:	ldrb	w0, [x19, #264]
  435da0:	cmp	w0, #0x3e
  435da4:	b.ne	435db4 <nftw@plt+0x330c4>  // b.any
  435da8:	mov	x0, x19
  435dac:	mov	w1, #0x20                  	// #32
  435db0:	bl	435354 <nftw@plt+0x32664>
  435db4:	mov	x0, x19
  435db8:	mov	w1, #0x3e                  	// #62
  435dbc:	bl	435354 <nftw@plt+0x32664>
  435dc0:	b	435d4c <nftw@plt+0x3305c>
  435dc4:	ldr	w0, [x19, #312]
  435dc8:	cbz	w0, 435df4 <nftw@plt+0x33104>
  435dcc:	mov	x0, x19
  435dd0:	mov	x2, #0x5                   	// #5
  435dd4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435dd8:	add	x1, x1, #0x50f
  435ddc:	bl	435398 <nftw@plt+0x326a8>
  435de0:	ldr	x1, [x20, #8]
  435de4:	mov	x0, x19
  435de8:	add	w1, w1, #0x1
  435dec:	bl	435440 <nftw@plt+0x32750>
  435df0:	b	435a44 <nftw@plt+0x32d54>
  435df4:	add	x1, x20, #0x8
  435df8:	mov	x0, x19
  435dfc:	bl	435928 <nftw@plt+0x32c38>
  435e00:	mov	x2, x0
  435e04:	cbz	x0, 435a3c <nftw@plt+0x32d4c>
  435e08:	ldr	w1, [x0]
  435e0c:	cmp	w1, #0x2f
  435e10:	b.ne	435e28 <nftw@plt+0x33138>  // b.any
  435e14:	ldr	w1, [x19, #316]
  435e18:	tbnz	w1, #31, 435e28 <nftw@plt+0x33138>
  435e1c:	bl	4357f4 <nftw@plt+0x32b04>
  435e20:	mov	x2, x0
  435e24:	cbz	x0, 435a3c <nftw@plt+0x32d4c>
  435e28:	ldr	x20, [x19, #288]
  435e2c:	mov	w1, w21
  435e30:	ldr	x0, [x20]
  435e34:	str	x0, [x19, #288]
  435e38:	mov	x0, x19
  435e3c:	bl	43722c <nftw@plt+0x3453c>
  435e40:	str	x20, [x19, #288]
  435e44:	b	435a44 <nftw@plt+0x32d54>
  435e48:	mov	x0, x19
  435e4c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435e50:	add	x1, x1, #0x515
  435e54:	bl	43540c <nftw@plt+0x3271c>
  435e58:	ldr	x2, [x20, #8]
  435e5c:	mov	w1, w21
  435e60:	mov	x0, x19
  435e64:	bl	43722c <nftw@plt+0x3453c>
  435e68:	b	435a44 <nftw@plt+0x32d54>
  435e6c:	ldr	x2, [x20, #16]
  435e70:	mov	w1, w21
  435e74:	mov	x0, x19
  435e78:	bl	43722c <nftw@plt+0x3453c>
  435e7c:	b	435a44 <nftw@plt+0x32d54>
  435e80:	mov	x0, x19
  435e84:	mov	w1, #0x7e                  	// #126
  435e88:	bl	435354 <nftw@plt+0x32664>
  435e8c:	ldr	x2, [x20, #16]
  435e90:	mov	w1, w21
  435e94:	mov	x0, x19
  435e98:	bl	43722c <nftw@plt+0x3453c>
  435e9c:	b	435a44 <nftw@plt+0x32d54>
  435ea0:	mov	x0, x19
  435ea4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435ea8:	add	x1, x1, #0x54a
  435eac:	bl	43540c <nftw@plt+0x3271c>
  435eb0:	ldr	x2, [x20, #8]
  435eb4:	mov	w1, w21
  435eb8:	mov	x0, x19
  435ebc:	bl	43722c <nftw@plt+0x3453c>
  435ec0:	b	435a44 <nftw@plt+0x32d54>
  435ec4:	mov	x0, x19
  435ec8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435ecc:	add	x1, x1, #0x534
  435ed0:	bl	43540c <nftw@plt+0x3271c>
  435ed4:	ldr	x2, [x20, #8]
  435ed8:	mov	w1, w21
  435edc:	mov	x0, x19
  435ee0:	bl	43722c <nftw@plt+0x3453c>
  435ee4:	b	435a44 <nftw@plt+0x32d54>
  435ee8:	mov	x0, x19
  435eec:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435ef0:	add	x1, x1, #0x53d
  435ef4:	bl	43540c <nftw@plt+0x3271c>
  435ef8:	ldr	x2, [x20, #8]
  435efc:	mov	w1, w21
  435f00:	mov	x0, x19
  435f04:	bl	43722c <nftw@plt+0x3453c>
  435f08:	mov	x0, x19
  435f0c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435f10:	add	x1, x1, #0x556
  435f14:	bl	43540c <nftw@plt+0x3271c>
  435f18:	ldr	x2, [x20, #16]
  435f1c:	mov	w1, w21
  435f20:	mov	x0, x19
  435f24:	bl	43722c <nftw@plt+0x3453c>
  435f28:	b	435a44 <nftw@plt+0x32d54>
  435f2c:	mov	x0, x19
  435f30:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435f34:	add	x1, x1, #0x55b
  435f38:	bl	43540c <nftw@plt+0x3271c>
  435f3c:	ldr	x2, [x20, #8]
  435f40:	mov	w1, w21
  435f44:	mov	x0, x19
  435f48:	bl	43722c <nftw@plt+0x3453c>
  435f4c:	b	435a44 <nftw@plt+0x32d54>
  435f50:	mov	x0, x19
  435f54:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435f58:	add	x1, x1, #0x569
  435f5c:	bl	43540c <nftw@plt+0x3271c>
  435f60:	ldr	x2, [x20, #8]
  435f64:	mov	w1, w21
  435f68:	mov	x0, x19
  435f6c:	bl	43722c <nftw@plt+0x3453c>
  435f70:	b	435a44 <nftw@plt+0x32d54>
  435f74:	mov	x0, x19
  435f78:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435f7c:	add	x1, x1, #0x57c
  435f80:	bl	43540c <nftw@plt+0x3271c>
  435f84:	ldr	x2, [x20, #8]
  435f88:	mov	w1, w21
  435f8c:	mov	x0, x19
  435f90:	bl	43722c <nftw@plt+0x3453c>
  435f94:	b	435a44 <nftw@plt+0x32d54>
  435f98:	mov	x0, x19
  435f9c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435fa0:	add	x1, x1, #0x58d
  435fa4:	bl	43540c <nftw@plt+0x3271c>
  435fa8:	ldr	x2, [x20, #8]
  435fac:	mov	w1, w21
  435fb0:	mov	x0, x19
  435fb4:	bl	43722c <nftw@plt+0x3453c>
  435fb8:	b	435a44 <nftw@plt+0x32d54>
  435fbc:	mov	x0, x19
  435fc0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435fc4:	add	x1, x1, #0x591
  435fc8:	bl	43540c <nftw@plt+0x3271c>
  435fcc:	ldr	x2, [x20, #8]
  435fd0:	mov	w1, w21
  435fd4:	mov	x0, x19
  435fd8:	bl	43722c <nftw@plt+0x3453c>
  435fdc:	b	435a44 <nftw@plt+0x32d54>
  435fe0:	mov	x0, x19
  435fe4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  435fe8:	add	x1, x1, #0x5a3
  435fec:	bl	43540c <nftw@plt+0x3271c>
  435ff0:	ldr	x2, [x20, #8]
  435ff4:	mov	w1, w21
  435ff8:	mov	x0, x19
  435ffc:	bl	43722c <nftw@plt+0x3453c>
  436000:	b	435a44 <nftw@plt+0x32d54>
  436004:	mov	x0, x19
  436008:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43600c:	add	x1, x1, #0x5be
  436010:	bl	43540c <nftw@plt+0x3271c>
  436014:	ldr	x2, [x20, #8]
  436018:	mov	w1, w21
  43601c:	mov	x0, x19
  436020:	bl	43722c <nftw@plt+0x3453c>
  436024:	b	435a44 <nftw@plt+0x32d54>
  436028:	mov	x0, x19
  43602c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436030:	add	x1, x1, #0x5ce
  436034:	bl	43540c <nftw@plt+0x3271c>
  436038:	ldr	x2, [x20, #8]
  43603c:	mov	w1, w21
  436040:	mov	x0, x19
  436044:	bl	43722c <nftw@plt+0x3453c>
  436048:	b	435a44 <nftw@plt+0x32d54>
  43604c:	mov	x0, x19
  436050:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436054:	add	x1, x1, #0x5e2
  436058:	bl	43540c <nftw@plt+0x3271c>
  43605c:	ldr	x2, [x20, #8]
  436060:	mov	w1, w21
  436064:	mov	x0, x19
  436068:	bl	43722c <nftw@plt+0x3453c>
  43606c:	b	435a44 <nftw@plt+0x32d54>
  436070:	mov	x0, x19
  436074:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436078:	add	x1, x1, #0x5f9
  43607c:	bl	43540c <nftw@plt+0x3271c>
  436080:	ldr	x2, [x20, #8]
  436084:	mov	w1, w21
  436088:	mov	x0, x19
  43608c:	bl	43722c <nftw@plt+0x3453c>
  436090:	b	435a44 <nftw@plt+0x32d54>
  436094:	mov	x0, x19
  436098:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43609c:	add	x1, x1, #0x613
  4360a0:	bl	43540c <nftw@plt+0x3271c>
  4360a4:	ldr	x2, [x20, #16]
  4360a8:	mov	w1, w21
  4360ac:	mov	x0, x19
  4360b0:	bl	43722c <nftw@plt+0x3453c>
  4360b4:	mov	x0, x19
  4360b8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4360bc:	add	x1, x1, #0x537
  4360c0:	bl	43540c <nftw@plt+0x3271c>
  4360c4:	ldr	x2, [x20, #8]
  4360c8:	mov	w1, w21
  4360cc:	mov	x0, x19
  4360d0:	bl	43722c <nftw@plt+0x3453c>
  4360d4:	b	435a44 <nftw@plt+0x32d54>
  4360d8:	mov	x0, x19
  4360dc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4360e0:	add	x1, x1, #0x629
  4360e4:	bl	43540c <nftw@plt+0x3271c>
  4360e8:	ldr	x2, [x20, #8]
  4360ec:	mov	w1, w21
  4360f0:	mov	x0, x19
  4360f4:	bl	43722c <nftw@plt+0x3453c>
  4360f8:	b	435a44 <nftw@plt+0x32d54>
  4360fc:	mov	x0, x19
  436100:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436104:	add	x1, x1, #0x63f
  436108:	bl	43540c <nftw@plt+0x3271c>
  43610c:	ldr	x2, [x20, #8]
  436110:	mov	w1, w21
  436114:	mov	x0, x19
  436118:	bl	43722c <nftw@plt+0x3453c>
  43611c:	b	435a44 <nftw@plt+0x32d54>
  436120:	mov	x0, x19
  436124:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436128:	add	x1, x1, #0x63b
  43612c:	bl	43540c <nftw@plt+0x3271c>
  436130:	ldr	x2, [x20, #8]
  436134:	mov	w1, w21
  436138:	mov	x0, x19
  43613c:	bl	43722c <nftw@plt+0x3453c>
  436140:	b	435a44 <nftw@plt+0x32d54>
  436144:	ldrsw	x2, [x20, #16]
  436148:	mov	x0, x19
  43614c:	ldr	x1, [x20, #8]
  436150:	bl	435398 <nftw@plt+0x326a8>
  436154:	b	435a44 <nftw@plt+0x32d54>
  436158:	ldr	x2, [x19, #296]
  43615c:	cbnz	x2, 4361c0 <nftw@plt+0x334d0>
  436160:	mov	w22, #0x0                   	// #0
  436164:	ldr	x0, [x19, #296]
  436168:	stp	x0, x20, [sp, #96]
  43616c:	add	x0, sp, #0x60
  436170:	str	x0, [x19, #296]
  436174:	ldr	x0, [x19, #288]
  436178:	str	wzr, [sp, #112]
  43617c:	str	x0, [sp, #120]
  436180:	cbnz	x2, 436188 <nftw@plt+0x33498>
  436184:	ldr	x2, [x20, #8]
  436188:	mov	x0, x19
  43618c:	mov	w1, w21
  436190:	bl	43722c <nftw@plt+0x3453c>
  436194:	ldr	w0, [sp, #112]
  436198:	cbnz	w0, 4361ac <nftw@plt+0x334bc>
  43619c:	mov	x2, x20
  4361a0:	mov	w1, w21
  4361a4:	mov	x0, x19
  4361a8:	bl	4372b8 <nftw@plt+0x345c8>
  4361ac:	ldr	x0, [sp, #96]
  4361b0:	str	x0, [x19, #296]
  4361b4:	cbz	w22, 435a44 <nftw@plt+0x32d54>
  4361b8:	str	x23, [x19, #288]
  4361bc:	b	435a44 <nftw@plt+0x32d54>
  4361c0:	ldr	w22, [x2, #16]
  4361c4:	cbnz	w22, 4361f8 <nftw@plt+0x33508>
  4361c8:	ldr	x1, [x2, #8]
  4361cc:	ldr	w1, [x1]
  4361d0:	sub	w3, w1, #0x19
  4361d4:	cmp	w3, #0x2
  4361d8:	b.hi	436370 <nftw@plt+0x33680>  // b.pmore
  4361dc:	cmp	w0, w1
  4361e0:	b.ne	4361f8 <nftw@plt+0x33508>  // b.any
  4361e4:	ldr	x2, [x20, #8]
  4361e8:	mov	w1, w21
  4361ec:	mov	x0, x19
  4361f0:	bl	43722c <nftw@plt+0x3453c>
  4361f4:	b	435a44 <nftw@plt+0x32d54>
  4361f8:	ldr	x2, [x2]
  4361fc:	b	43615c <nftw@plt+0x3346c>
  436200:	ldr	w22, [x19, #312]
  436204:	ldr	x2, [x20, #8]
  436208:	cbnz	w22, 436340 <nftw@plt+0x33650>
  43620c:	ldr	w0, [x2]
  436210:	cmp	w0, #0x5
  436214:	b.ne	436344 <nftw@plt+0x33654>  // b.any
  436218:	ldr	w0, [x19, #344]
  43621c:	mov	x1, #0x0                   	// #0
  436220:	cmp	w0, w1
  436224:	b.gt	436240 <nftw@plt+0x33550>
  436228:	ldr	w1, [x19, #348]
  43622c:	cmp	w0, w1
  436230:	b.lt	436268 <nftw@plt+0x33578>  // b.tstop
  436234:	mov	w0, #0x1                   	// #1
  436238:	str	w0, [x19, #304]
  43623c:	b	435a44 <nftw@plt+0x32d54>
  436240:	ldr	x4, [x19, #336]
  436244:	lsl	x3, x1, #4
  436248:	ldr	x3, [x4, x3]
  43624c:	add	x5, x4, x1, lsl #4
  436250:	add	x1, x1, #0x1
  436254:	cmp	x2, x3
  436258:	b.ne	436220 <nftw@plt+0x33530>  // b.any
  43625c:	ldr	x1, [x19, #328]
  436260:	mov	x0, x1
  436264:	b	436328 <nftw@plt+0x33638>
  436268:	ldr	x3, [x19, #336]
  43626c:	sbfiz	x4, x0, #4, #32
  436270:	add	x1, x3, w0, sxtw #4
  436274:	add	w0, w0, #0x1
  436278:	str	w0, [x19, #344]
  43627c:	add	x0, x1, #0x8
  436280:	str	x2, [x3, x4]
  436284:	ldr	x4, [x19, #288]
  436288:	cbnz	x4, 4362d0 <nftw@plt+0x335e0>
  43628c:	str	xzr, [x0]
  436290:	add	x1, x2, #0x8
  436294:	mov	x0, x19
  436298:	bl	435928 <nftw@plt+0x32c38>
  43629c:	mov	x2, x0
  4362a0:	cbz	x0, 4362c4 <nftw@plt+0x335d4>
  4362a4:	ldr	w1, [x0]
  4362a8:	cmp	w1, #0x2f
  4362ac:	b.ne	436344 <nftw@plt+0x33654>  // b.any
  4362b0:	ldr	w1, [x19, #316]
  4362b4:	tbnz	w1, #31, 436344 <nftw@plt+0x33654>
  4362b8:	bl	4357f4 <nftw@plt+0x32b04>
  4362bc:	mov	x2, x0
  4362c0:	cbnz	x0, 436344 <nftw@plt+0x33654>
  4362c4:	cbz	w22, 435a3c <nftw@plt+0x32d4c>
  4362c8:	str	x23, [x19, #288]
  4362cc:	b	435a3c <nftw@plt+0x32d4c>
  4362d0:	ldr	w3, [x19, #360]
  4362d4:	ldr	w1, [x19, #364]
  4362d8:	cmp	w3, w1
  4362dc:	b.ge	436234 <nftw@plt+0x33544>  // b.tcont
  4362e0:	ldr	x1, [x19, #352]
  4362e4:	add	x1, x1, w3, sxtw #4
  4362e8:	add	w3, w3, #0x1
  4362ec:	str	w3, [x19, #360]
  4362f0:	ldr	x3, [x4, #8]
  4362f4:	str	x3, [x1, #8]
  4362f8:	str	x1, [x0]
  4362fc:	mov	x0, x1
  436300:	ldr	x4, [x4]
  436304:	b	436288 <nftw@plt+0x33598>
  436308:	ldr	x3, [x0]
  43630c:	cmp	x3, x2
  436310:	b.eq	436290 <nftw@plt+0x335a0>  // b.none
  436314:	cmp	x3, x20
  436318:	b.ne	436324 <nftw@plt+0x33634>  // b.any
  43631c:	cmp	x0, x1
  436320:	b.ne	436290 <nftw@plt+0x335a0>  // b.any
  436324:	ldr	x0, [x0, #8]
  436328:	cbnz	x0, 436308 <nftw@plt+0x33618>
  43632c:	ldr	x0, [x5, #8]
  436330:	mov	w22, #0x1                   	// #1
  436334:	ldr	x23, [x19, #288]
  436338:	str	x0, [x19, #288]
  43633c:	b	436290 <nftw@plt+0x335a0>
  436340:	mov	w22, #0x0                   	// #0
  436344:	ldr	w0, [x2]
  436348:	cmp	w0, #0x23
  43634c:	b.eq	436378 <nftw@plt+0x33688>  // b.none
  436350:	ldr	w1, [x20]
  436354:	cmp	w0, w1
  436358:	b.eq	436378 <nftw@plt+0x33688>  // b.none
  43635c:	cmp	w0, #0x24
  436360:	b.ne	436370 <nftw@plt+0x33680>  // b.any
  436364:	ldr	x2, [x2, #8]
  436368:	b	436164 <nftw@plt+0x33474>
  43636c:	mov	w22, #0x0                   	// #0
  436370:	mov	x2, #0x0                   	// #0
  436374:	b	436164 <nftw@plt+0x33474>
  436378:	mov	x20, x2
  43637c:	b	436370 <nftw@plt+0x33680>
  436380:	ldr	x0, [x20, #8]
  436384:	tbnz	w21, #2, 43639c <nftw@plt+0x336ac>
  436388:	ldrsw	x2, [x0, #8]
  43638c:	ldr	x1, [x0]
  436390:	mov	x0, x19
  436394:	bl	435398 <nftw@plt+0x326a8>
  436398:	b	435a44 <nftw@plt+0x32d54>
  43639c:	ldrsw	x2, [x0, #24]
  4363a0:	ldr	x1, [x0, #16]
  4363a4:	mov	x0, x19
  4363a8:	bl	435398 <nftw@plt+0x326a8>
  4363ac:	b	435a44 <nftw@plt+0x32d54>
  4363b0:	ldr	x2, [x20, #8]
  4363b4:	mov	w1, w21
  4363b8:	mov	x0, x19
  4363bc:	bl	43722c <nftw@plt+0x3453c>
  4363c0:	b	435a44 <nftw@plt+0x32d54>
  4363c4:	and	w22, w21, #0x20
  4363c8:	tbz	w21, #5, 4363e0 <nftw@plt+0x336f0>
  4363cc:	ldr	x3, [x19, #296]
  4363d0:	add	x2, x20, #0x10
  4363d4:	and	w1, w21, #0xffffff9f
  4363d8:	mov	x0, x19
  4363dc:	bl	437480 <nftw@plt+0x34790>
  4363e0:	ldr	x2, [x20, #8]
  4363e4:	cbz	x2, 436458 <nftw@plt+0x33768>
  4363e8:	and	w1, w21, #0xffffff9f
  4363ec:	cbz	w22, 4363fc <nftw@plt+0x3370c>
  4363f0:	mov	x0, x19
  4363f4:	bl	43722c <nftw@plt+0x3453c>
  4363f8:	b	435a44 <nftw@plt+0x32d54>
  4363fc:	tbnz	w21, #6, 436440 <nftw@plt+0x33750>
  436400:	ldr	x0, [x19, #296]
  436404:	stp	x0, x20, [sp, #96]
  436408:	add	x0, sp, #0x60
  43640c:	str	x0, [x19, #296]
  436410:	ldr	x0, [x19, #288]
  436414:	str	wzr, [sp, #112]
  436418:	str	x0, [sp, #120]
  43641c:	mov	x0, x19
  436420:	bl	43722c <nftw@plt+0x3453c>
  436424:	ldr	x0, [sp, #96]
  436428:	str	x0, [x19, #296]
  43642c:	ldr	w0, [sp, #112]
  436430:	cbnz	w0, 435a44 <nftw@plt+0x32d54>
  436434:	mov	x0, x19
  436438:	mov	w1, #0x20                  	// #32
  43643c:	bl	435354 <nftw@plt+0x32664>
  436440:	ldr	x3, [x19, #296]
  436444:	add	x2, x20, #0x10
  436448:	and	w1, w21, #0xffffff9f
  43644c:	mov	x0, x19
  436450:	bl	437480 <nftw@plt+0x34790>
  436454:	b	435a44 <nftw@plt+0x32d54>
  436458:	cbnz	w22, 435a44 <nftw@plt+0x32d54>
  43645c:	b	436440 <nftw@plt+0x33750>
  436460:	ldp	x0, x23, [x19, #288]
  436464:	mov	w22, #0x1                   	// #1
  436468:	mov	w6, w22
  43646c:	str	x0, [sp, #120]
  436470:	add	x4, sp, #0x60
  436474:	stp	x23, x20, [sp, #96]
  436478:	str	wzr, [sp, #112]
  43647c:	mov	x0, x23
  436480:	str	x4, [x19, #296]
  436484:	cbz	x0, 43649c <nftw@plt+0x337ac>
  436488:	ldr	x1, [x0, #8]
  43648c:	ldr	w1, [x1]
  436490:	sub	w1, w1, #0x19
  436494:	cmp	w1, #0x2
  436498:	b.ls	4364dc <nftw@plt+0x337ec>  // b.plast
  43649c:	ldr	x2, [x20, #16]
  4364a0:	mov	x0, x19
  4364a4:	mov	w1, w21
  4364a8:	bl	43722c <nftw@plt+0x3453c>
  4364ac:	str	x23, [x19, #296]
  4364b0:	ldr	w0, [sp, #112]
  4364b4:	cbnz	w0, 435a44 <nftw@plt+0x32d54>
  4364b8:	add	x23, sp, #0x68
  4364bc:	cmp	w22, #0x1
  4364c0:	b.ne	43652c <nftw@plt+0x3383c>  // b.any
  4364c4:	ldr	x3, [x19, #296]
  4364c8:	add	x2, x20, #0x8
  4364cc:	mov	w1, w21
  4364d0:	mov	x0, x19
  4364d4:	bl	437734 <nftw@plt+0x34a44>
  4364d8:	b	435a44 <nftw@plt+0x32d54>
  4364dc:	ldr	w1, [x0, #16]
  4364e0:	cbnz	w1, 436524 <nftw@plt+0x33834>
  4364e4:	cmp	w22, #0x3
  4364e8:	b.ls	4364f8 <nftw@plt+0x33808>  // b.plast
  4364ec:	mov	w0, #0x1                   	// #1
  4364f0:	str	w0, [x19, #304]
  4364f4:	b	435a44 <nftw@plt+0x32d54>
  4364f8:	ubfiz	x5, x22, #5, #32
  4364fc:	add	w22, w22, #0x1
  436500:	add	x1, x4, x5
  436504:	ldp	x2, x3, [x0]
  436508:	stp	x2, x3, [x1]
  43650c:	ldp	x2, x3, [x0, #16]
  436510:	stp	x2, x3, [x1, #16]
  436514:	ldr	x2, [x19, #296]
  436518:	str	x2, [x4, x5]
  43651c:	str	x1, [x19, #296]
  436520:	str	w6, [x0, #16]
  436524:	ldr	x0, [x0]
  436528:	b	436484 <nftw@plt+0x33794>
  43652c:	sub	w22, w22, #0x1
  436530:	mov	w1, w21
  436534:	ubfiz	x0, x22, #5, #32
  436538:	ldr	x2, [x23, x0]
  43653c:	mov	x0, x19
  436540:	bl	4372b8 <nftw@plt+0x345c8>
  436544:	b	4364bc <nftw@plt+0x337cc>
  436548:	ldr	x2, [x20, #16]
  43654c:	mov	w1, w21
  436550:	ldr	x0, [x19, #296]
  436554:	stp	x0, x20, [sp, #96]
  436558:	add	x0, sp, #0x60
  43655c:	str	x0, [x19, #296]
  436560:	ldr	x0, [x19, #288]
  436564:	str	wzr, [sp, #112]
  436568:	str	x0, [sp, #120]
  43656c:	mov	x0, x19
  436570:	bl	43722c <nftw@plt+0x3453c>
  436574:	ldr	w0, [sp, #112]
  436578:	cbnz	w0, 43658c <nftw@plt+0x3389c>
  43657c:	mov	x2, x20
  436580:	mov	w1, w21
  436584:	mov	x0, x19
  436588:	bl	4372b8 <nftw@plt+0x345c8>
  43658c:	ldr	x0, [sp, #96]
  436590:	str	x0, [x19, #296]
  436594:	b	435a44 <nftw@plt+0x32d54>
  436598:	ldrsh	w0, [x20, #18]
  43659c:	cbz	w0, 4365b0 <nftw@plt+0x338c0>
  4365a0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4365a4:	mov	x0, x19
  4365a8:	add	x1, x1, #0x656
  4365ac:	bl	43540c <nftw@plt+0x3271c>
  4365b0:	ldr	x2, [x20, #8]
  4365b4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4365b8:	add	x0, x0, #0x8c8
  4365bc:	add	x0, x0, #0x100
  4365c0:	ldr	x1, [x2, #8]
  4365c4:	cmp	x1, x0
  4365c8:	b.eq	4365e4 <nftw@plt+0x338f4>  // b.none
  4365cc:	mov	w1, w21
  4365d0:	mov	x0, x19
  4365d4:	bl	43722c <nftw@plt+0x3453c>
  4365d8:	mov	x0, x19
  4365dc:	mov	w1, #0x20                  	// #32
  4365e0:	bl	435354 <nftw@plt+0x32664>
  4365e4:	ldrsh	w0, [x20, #16]
  4365e8:	cbz	w0, 436600 <nftw@plt+0x33910>
  4365ec:	mov	x0, x19
  4365f0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4365f4:	add	x1, x1, #0x65c
  4365f8:	bl	43540c <nftw@plt+0x3271c>
  4365fc:	b	435a44 <nftw@plt+0x32d54>
  436600:	mov	x0, x19
  436604:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436608:	add	x1, x1, #0x663
  43660c:	bl	43540c <nftw@plt+0x3271c>
  436610:	b	435a44 <nftw@plt+0x32d54>
  436614:	ldr	x2, [x20, #8]
  436618:	cbz	x2, 436628 <nftw@plt+0x33938>
  43661c:	mov	w1, w21
  436620:	mov	x0, x19
  436624:	bl	43722c <nftw@plt+0x3453c>
  436628:	ldr	x0, [x20, #16]
  43662c:	cbz	x0, 435a44 <nftw@plt+0x32d54>
  436630:	ldr	x0, [x19, #256]
  436634:	cmp	x0, #0xfd
  436638:	b.ls	436644 <nftw@plt+0x33954>  // b.plast
  43663c:	mov	x0, x19
  436640:	bl	435318 <nftw@plt+0x32628>
  436644:	mov	x0, x19
  436648:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43664c:	add	x1, x1, #0x66a
  436650:	bl	43540c <nftw@plt+0x3271c>
  436654:	ldr	x2, [x20, #16]
  436658:	mov	x0, x19
  43665c:	mov	w1, w21
  436660:	ldr	x22, [x19, #256]
  436664:	ldr	x23, [x19, #320]
  436668:	bl	43722c <nftw@plt+0x3453c>
  43666c:	ldr	x0, [x19, #320]
  436670:	cmp	x0, x23
  436674:	b.ne	435a44 <nftw@plt+0x32d54>  // b.any
  436678:	ldr	x0, [x19, #256]
  43667c:	cmp	x0, x22
  436680:	b.ne	435a44 <nftw@plt+0x32d54>  // b.any
  436684:	sub	x0, x0, #0x2
  436688:	str	x0, [x19, #256]
  43668c:	b	435a44 <nftw@plt+0x32d54>
  436690:	ldp	x2, x20, [x20, #8]
  436694:	cbz	x2, 4366a4 <nftw@plt+0x339b4>
  436698:	mov	w1, w21
  43669c:	mov	x0, x19
  4366a0:	bl	43722c <nftw@plt+0x3453c>
  4366a4:	mov	x0, x19
  4366a8:	mov	w1, #0x7b                  	// #123
  4366ac:	bl	435354 <nftw@plt+0x32664>
  4366b0:	mov	x2, x20
  4366b4:	mov	w1, w21
  4366b8:	mov	x0, x19
  4366bc:	bl	43722c <nftw@plt+0x3453c>
  4366c0:	mov	x0, x19
  4366c4:	mov	w1, #0x7d                  	// #125
  4366c8:	bl	435354 <nftw@plt+0x32664>
  4366cc:	b	435a44 <nftw@plt+0x32d54>
  4366d0:	ldr	x21, [x20, #8]
  4366d4:	mov	x0, x19
  4366d8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4366dc:	add	x1, x1, #0x54a
  4366e0:	ldr	w20, [x21, #16]
  4366e4:	bl	43540c <nftw@plt+0x3271c>
  4366e8:	ldr	x0, [x21, #8]
  4366ec:	ldrb	w0, [x0]
  4366f0:	sub	w0, w0, #0x61
  4366f4:	and	w0, w0, #0xff
  4366f8:	cmp	w0, #0x19
  4366fc:	b.hi	43670c <nftw@plt+0x33a1c>  // b.pmore
  436700:	mov	x0, x19
  436704:	mov	w1, #0x20                  	// #32
  436708:	bl	435354 <nftw@plt+0x32664>
  43670c:	ldr	x1, [x21, #8]
  436710:	add	x0, x1, w20, sxtw
  436714:	ldurb	w0, [x0, #-1]
  436718:	cmp	w0, #0x20
  43671c:	cset	w0, eq  // eq = none
  436720:	sub	w20, w20, w0
  436724:	mov	x0, x19
  436728:	sxtw	x2, w20
  43672c:	bl	435398 <nftw@plt+0x326a8>
  436730:	b	435a44 <nftw@plt+0x32d54>
  436734:	mov	x0, x19
  436738:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43673c:	add	x1, x1, #0x66d
  436740:	bl	43540c <nftw@plt+0x3271c>
  436744:	ldr	x2, [x20, #16]
  436748:	mov	w1, w21
  43674c:	mov	x0, x19
  436750:	bl	43722c <nftw@plt+0x3453c>
  436754:	b	435a44 <nftw@plt+0x32d54>
  436758:	mov	x0, x19
  43675c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436760:	add	x1, x1, #0x66d
  436764:	bl	43540c <nftw@plt+0x3271c>
  436768:	ldr	x0, [x19, #368]
  43676c:	cbz	x0, 436780 <nftw@plt+0x33a90>
  436770:	ldr	x1, [x19, #288]
  436774:	stp	x1, x0, [sp, #96]
  436778:	add	x1, sp, #0x60
  43677c:	str	x1, [x19, #288]
  436780:	ldr	x2, [x20, #8]
  436784:	ldr	w0, [x2]
  436788:	cmp	w0, #0x4
  43678c:	b.eq	4367b0 <nftw@plt+0x33ac0>  // b.none
  436790:	mov	x0, x19
  436794:	mov	w1, w21
  436798:	bl	43722c <nftw@plt+0x3453c>
  43679c:	ldr	x0, [x19, #368]
  4367a0:	cbz	x0, 435a44 <nftw@plt+0x32d54>
  4367a4:	ldr	x0, [sp, #96]
  4367a8:	str	x0, [x19, #288]
  4367ac:	b	435a44 <nftw@plt+0x32d54>
  4367b0:	ldr	x2, [x2, #8]
  4367b4:	mov	x0, x19
  4367b8:	mov	w1, w21
  4367bc:	bl	43722c <nftw@plt+0x3453c>
  4367c0:	ldr	x0, [x19, #368]
  4367c4:	cbz	x0, 4367d0 <nftw@plt+0x33ae0>
  4367c8:	ldr	x0, [sp, #96]
  4367cc:	str	x0, [x19, #288]
  4367d0:	ldrb	w0, [x19, #264]
  4367d4:	cmp	w0, #0x3c
  4367d8:	b.ne	4367e8 <nftw@plt+0x33af8>  // b.any
  4367dc:	mov	x0, x19
  4367e0:	mov	w1, #0x20                  	// #32
  4367e4:	bl	435354 <nftw@plt+0x32664>
  4367e8:	mov	x0, x19
  4367ec:	mov	w1, #0x3c                  	// #60
  4367f0:	bl	435354 <nftw@plt+0x32664>
  4367f4:	ldr	x0, [x20, #8]
  4367f8:	mov	w1, w21
  4367fc:	ldr	x2, [x0, #16]
  436800:	mov	x0, x19
  436804:	bl	43722c <nftw@plt+0x3453c>
  436808:	ldrb	w0, [x19, #264]
  43680c:	cmp	w0, #0x3e
  436810:	b.ne	436820 <nftw@plt+0x33b30>  // b.any
  436814:	mov	x0, x19
  436818:	mov	w1, #0x20                  	// #32
  43681c:	bl	435354 <nftw@plt+0x32664>
  436820:	mov	x0, x19
  436824:	mov	w1, #0x3e                  	// #62
  436828:	bl	435354 <nftw@plt+0x32664>
  43682c:	b	435a44 <nftw@plt+0x32d54>
  436830:	ldr	x2, [x20, #8]
  436834:	mov	w1, w21
  436838:	mov	x0, x19
  43683c:	bl	43781c <nftw@plt+0x34b2c>
  436840:	b	435a44 <nftw@plt+0x32d54>
  436844:	ldp	x23, x20, [x20, #8]
  436848:	ldr	w0, [x23]
  43684c:	cmp	w0, #0x32
  436850:	b.ne	436900 <nftw@plt+0x33c10>  // b.any
  436854:	ldr	x0, [x23, #8]
  436858:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  43685c:	add	x1, x1, #0x8ad
  436860:	ldr	x22, [x0]
  436864:	mov	x0, x22
  436868:	bl	402a00 <strcmp@plt>
  43686c:	cbnz	w0, 43689c <nftw@plt+0x33bac>
  436870:	ldr	w0, [x20]
  436874:	cmp	w0, #0x3
  436878:	b.ne	43689c <nftw@plt+0x33bac>  // b.any
  43687c:	ldr	x0, [x20, #8]
  436880:	ldr	w1, [x0]
  436884:	cmp	w1, #0x1
  436888:	b.ne	43689c <nftw@plt+0x33bac>  // b.any
  43688c:	ldr	x1, [x20, #16]
  436890:	ldr	w1, [x1]
  436894:	cmp	w1, #0x29
  436898:	csel	x20, x20, x0, ne  // ne = any
  43689c:	ldr	w0, [x20]
  4368a0:	cmp	w0, #0x39
  4368a4:	b.ne	4368cc <nftw@plt+0x33bdc>  // b.any
  4368a8:	ldr	x2, [x20, #8]
  4368ac:	mov	w1, w21
  4368b0:	mov	x0, x19
  4368b4:	bl	43783c <nftw@plt+0x34b4c>
  4368b8:	mov	x2, x23
  4368bc:	mov	w1, w21
  4368c0:	mov	x0, x19
  4368c4:	bl	43781c <nftw@plt+0x34b2c>
  4368c8:	b	435a44 <nftw@plt+0x32d54>
  4368cc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4368d0:	mov	x0, x22
  4368d4:	add	x1, x1, #0x677
  4368d8:	bl	402a00 <strcmp@plt>
  4368dc:	cbnz	w0, 436934 <nftw@plt+0x33c44>
  4368e0:	mov	x1, x20
  4368e4:	mov	x0, x19
  4368e8:	bl	435954 <nftw@plt+0x32c64>
  4368ec:	bl	4353dc <nftw@plt+0x326ec>
  4368f0:	mov	w1, w0
  4368f4:	mov	x0, x19
  4368f8:	bl	435440 <nftw@plt+0x32750>
  4368fc:	b	435a44 <nftw@plt+0x32d54>
  436900:	cmp	w0, #0x34
  436904:	b.eq	4369a0 <nftw@plt+0x33cb0>  // b.none
  436908:	mov	x22, #0x0                   	// #0
  43690c:	mov	x2, x23
  436910:	mov	w1, w21
  436914:	mov	x0, x19
  436918:	bl	43781c <nftw@plt+0x34b2c>
  43691c:	cbnz	x22, 4369cc <nftw@plt+0x33cdc>
  436920:	mov	x2, x20
  436924:	mov	w1, w21
  436928:	mov	x0, x19
  43692c:	bl	43783c <nftw@plt+0x34b4c>
  436930:	b	435a44 <nftw@plt+0x32d54>
  436934:	mov	x0, x22
  436938:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43693c:	add	x1, x1, #0x67a
  436940:	bl	402a00 <strcmp@plt>
  436944:	mov	w3, w0
  436948:	cbnz	w0, 43690c <nftw@plt+0x33c1c>
  43694c:	ldr	w0, [x20]
  436950:	cmp	w0, #0x2f
  436954:	b.ne	436988 <nftw@plt+0x33c98>  // b.any
  436958:	ldr	x0, [x20, #8]
  43695c:	cbz	x0, 436988 <nftw@plt+0x33c98>
  436960:	ldr	w1, [x0]
  436964:	cmp	w1, #0x4b
  436968:	b.ne	436998 <nftw@plt+0x33ca8>  // b.any
  43696c:	ldr	x1, [x0, #8]
  436970:	mov	x0, x19
  436974:	bl	435954 <nftw@plt+0x32c64>
  436978:	bl	4353dc <nftw@plt+0x326ec>
  43697c:	add	w3, w3, w0
  436980:	ldr	x20, [x20, #16]
  436984:	cbnz	x20, 43694c <nftw@plt+0x33c5c>
  436988:	mov	w1, w3
  43698c:	mov	x0, x19
  436990:	bl	435440 <nftw@plt+0x32750>
  436994:	b	435a44 <nftw@plt+0x32d54>
  436998:	add	w3, w3, #0x1
  43699c:	b	436980 <nftw@plt+0x33c90>
  4369a0:	mov	x0, x19
  4369a4:	mov	w1, #0x28                  	// #40
  4369a8:	bl	435354 <nftw@plt+0x32664>
  4369ac:	ldr	x2, [x23, #8]
  4369b0:	mov	w1, w21
  4369b4:	mov	x0, x19
  4369b8:	bl	43722c <nftw@plt+0x3453c>
  4369bc:	mov	x0, x19
  4369c0:	mov	w1, #0x29                  	// #41
  4369c4:	bl	435354 <nftw@plt+0x32664>
  4369c8:	b	436920 <nftw@plt+0x33c30>
  4369cc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4369d0:	mov	x0, x22
  4369d4:	add	x1, x1, #0x67d
  4369d8:	bl	402a00 <strcmp@plt>
  4369dc:	cbnz	w0, 4369f4 <nftw@plt+0x33d04>
  4369e0:	mov	x2, x20
  4369e4:	mov	w1, w21
  4369e8:	mov	x0, x19
  4369ec:	bl	43722c <nftw@plt+0x3453c>
  4369f0:	b	435a44 <nftw@plt+0x32d54>
  4369f4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4369f8:	mov	x0, x22
  4369fc:	add	x1, x1, #0xa4d
  436a00:	bl	402a00 <strcmp@plt>
  436a04:	cbnz	w0, 436920 <nftw@plt+0x33c30>
  436a08:	mov	x0, x19
  436a0c:	mov	w1, #0x28                  	// #40
  436a10:	bl	435354 <nftw@plt+0x32664>
  436a14:	mov	x2, x20
  436a18:	mov	w1, w21
  436a1c:	mov	x0, x19
  436a20:	bl	43722c <nftw@plt+0x3453c>
  436a24:	mov	x0, x19
  436a28:	mov	w1, #0x29                  	// #41
  436a2c:	bl	435354 <nftw@plt+0x32664>
  436a30:	b	435a44 <nftw@plt+0x32d54>
  436a34:	ldr	x0, [x20, #16]
  436a38:	ldr	w0, [x0]
  436a3c:	cmp	w0, #0x39
  436a40:	b.ne	435a3c <nftw@plt+0x32d4c>  // b.any
  436a44:	ldr	x2, [x20, #8]
  436a48:	ldr	x0, [x2, #8]
  436a4c:	bl	43571c <nftw@plt+0x32a2c>
  436a50:	cbz	w0, 436ab4 <nftw@plt+0x33dc4>
  436a54:	mov	w1, w21
  436a58:	mov	x0, x19
  436a5c:	bl	43781c <nftw@plt+0x34b2c>
  436a60:	mov	x0, x19
  436a64:	mov	w1, #0x3c                  	// #60
  436a68:	bl	435354 <nftw@plt+0x32664>
  436a6c:	ldr	x0, [x20, #16]
  436a70:	mov	w1, w21
  436a74:	ldr	x2, [x0, #8]
  436a78:	mov	x0, x19
  436a7c:	bl	43722c <nftw@plt+0x3453c>
  436a80:	mov	x0, x19
  436a84:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436a88:	add	x1, x1, #0x680
  436a8c:	bl	43540c <nftw@plt+0x3271c>
  436a90:	ldr	x0, [x20, #16]
  436a94:	mov	w1, w21
  436a98:	ldr	x2, [x0, #16]
  436a9c:	mov	x0, x19
  436aa0:	bl	43722c <nftw@plt+0x3453c>
  436aa4:	mov	x0, x19
  436aa8:	mov	w1, #0x29                  	// #41
  436aac:	bl	435354 <nftw@plt+0x32664>
  436ab0:	b	435a44 <nftw@plt+0x32d54>
  436ab4:	mov	x2, x20
  436ab8:	mov	w1, w21
  436abc:	mov	x0, x19
  436ac0:	bl	4378c8 <nftw@plt+0x34bd8>
  436ac4:	cbnz	w0, 435a44 <nftw@plt+0x32d54>
  436ac8:	ldr	x0, [x20, #8]
  436acc:	ldr	w1, [x0]
  436ad0:	cmp	w1, #0x32
  436ad4:	b.ne	436b04 <nftw@plt+0x33e14>  // b.any
  436ad8:	ldr	x0, [x0, #8]
  436adc:	ldr	w1, [x0, #16]
  436ae0:	cmp	w1, #0x1
  436ae4:	b.ne	436b04 <nftw@plt+0x33e14>  // b.any
  436ae8:	ldr	x0, [x0, #8]
  436aec:	ldrb	w0, [x0]
  436af0:	cmp	w0, #0x3e
  436af4:	b.ne	436b04 <nftw@plt+0x33e14>  // b.any
  436af8:	mov	x0, x19
  436afc:	mov	w1, #0x28                  	// #40
  436b00:	bl	435354 <nftw@plt+0x32664>
  436b04:	ldr	x0, [x20, #8]
  436b08:	adrp	x22, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436b0c:	add	x22, x22, #0x683
  436b10:	mov	x1, x22
  436b14:	ldr	x0, [x0, #8]
  436b18:	ldr	x0, [x0]
  436b1c:	bl	402a00 <strcmp@plt>
  436b20:	ldr	x1, [x20, #16]
  436b24:	ldr	x2, [x1, #8]
  436b28:	cbnz	w0, 436b54 <nftw@plt+0x33e64>
  436b2c:	ldr	w0, [x2]
  436b30:	cmp	w0, #0x3
  436b34:	b.ne	436b54 <nftw@plt+0x33e64>  // b.any
  436b38:	ldr	x0, [x2, #16]
  436b3c:	ldr	w0, [x0]
  436b40:	cmp	w0, #0x29
  436b44:	b.eq	436b50 <nftw@plt+0x33e60>  // b.none
  436b48:	mov	w0, #0x1                   	// #1
  436b4c:	str	w0, [x19, #304]
  436b50:	ldr	x2, [x2, #8]
  436b54:	mov	w1, w21
  436b58:	mov	x0, x19
  436b5c:	bl	43783c <nftw@plt+0x34b4c>
  436b60:	ldr	x23, [x20, #8]
  436b64:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  436b68:	add	x1, x1, #0x11f
  436b6c:	ldr	x0, [x23, #8]
  436b70:	ldr	x24, [x0]
  436b74:	mov	x0, x24
  436b78:	bl	402a00 <strcmp@plt>
  436b7c:	cbnz	w0, 436bec <nftw@plt+0x33efc>
  436b80:	mov	x0, x19
  436b84:	mov	w1, #0x5b                  	// #91
  436b88:	bl	435354 <nftw@plt+0x32664>
  436b8c:	ldr	x0, [x20, #16]
  436b90:	mov	w1, w21
  436b94:	ldr	x2, [x0, #16]
  436b98:	mov	x0, x19
  436b9c:	bl	43722c <nftw@plt+0x3453c>
  436ba0:	mov	x0, x19
  436ba4:	mov	w1, #0x5d                  	// #93
  436ba8:	bl	435354 <nftw@plt+0x32664>
  436bac:	ldr	x0, [x20, #8]
  436bb0:	ldr	w1, [x0]
  436bb4:	cmp	w1, #0x32
  436bb8:	b.ne	435a44 <nftw@plt+0x32d54>  // b.any
  436bbc:	ldr	x0, [x0, #8]
  436bc0:	ldr	w1, [x0, #16]
  436bc4:	cmp	w1, #0x1
  436bc8:	b.ne	435a44 <nftw@plt+0x32d54>  // b.any
  436bcc:	ldr	x0, [x0, #8]
  436bd0:	ldrb	w0, [x0]
  436bd4:	cmp	w0, #0x3e
  436bd8:	b.ne	435a44 <nftw@plt+0x32d54>  // b.any
  436bdc:	mov	x0, x19
  436be0:	mov	w1, #0x29                  	// #41
  436be4:	bl	435354 <nftw@plt+0x32664>
  436be8:	b	435a44 <nftw@plt+0x32d54>
  436bec:	mov	x1, x22
  436bf0:	mov	x0, x24
  436bf4:	bl	402a00 <strcmp@plt>
  436bf8:	cbz	w0, 436c0c <nftw@plt+0x33f1c>
  436bfc:	mov	x2, x23
  436c00:	mov	w1, w21
  436c04:	mov	x0, x19
  436c08:	bl	43781c <nftw@plt+0x34b2c>
  436c0c:	ldr	x0, [x20, #16]
  436c10:	mov	w1, w21
  436c14:	ldr	x2, [x0, #16]
  436c18:	mov	x0, x19
  436c1c:	bl	43783c <nftw@plt+0x34b4c>
  436c20:	b	436bac <nftw@plt+0x33ebc>
  436c24:	mov	w0, #0x1                   	// #1
  436c28:	str	w0, [x19, #304]
  436c2c:	b	435a44 <nftw@plt+0x32d54>
  436c30:	ldr	x0, [x20, #16]
  436c34:	ldr	w1, [x0]
  436c38:	cmp	w1, #0x3b
  436c3c:	b.ne	435a3c <nftw@plt+0x32d4c>  // b.any
  436c40:	ldr	x0, [x0, #16]
  436c44:	ldr	w0, [x0]
  436c48:	cmp	w0, #0x3c
  436c4c:	b.ne	435a3c <nftw@plt+0x32d4c>  // b.any
  436c50:	mov	x2, x20
  436c54:	mov	w1, w21
  436c58:	mov	x0, x19
  436c5c:	bl	4378c8 <nftw@plt+0x34bd8>
  436c60:	cbnz	w0, 435a44 <nftw@plt+0x32d54>
  436c64:	ldp	x24, x0, [x20, #8]
  436c68:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436c6c:	add	x1, x1, #0x686
  436c70:	ldp	x22, x0, [x0, #8]
  436c74:	ldp	x23, x20, [x0, #8]
  436c78:	ldr	x0, [x24, #8]
  436c7c:	ldr	x0, [x0]
  436c80:	bl	402a00 <strcmp@plt>
  436c84:	cbnz	w0, 436cdc <nftw@plt+0x33fec>
  436c88:	mov	x2, x22
  436c8c:	mov	w1, w21
  436c90:	mov	x0, x19
  436c94:	bl	43783c <nftw@plt+0x34b4c>
  436c98:	mov	x2, x24
  436c9c:	mov	w1, w21
  436ca0:	mov	x0, x19
  436ca4:	bl	43781c <nftw@plt+0x34b2c>
  436ca8:	mov	x2, x23
  436cac:	mov	w1, w21
  436cb0:	mov	x0, x19
  436cb4:	bl	43783c <nftw@plt+0x34b4c>
  436cb8:	mov	x0, x19
  436cbc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436cc0:	add	x1, x1, #0x689
  436cc4:	bl	43540c <nftw@plt+0x3271c>
  436cc8:	mov	x2, x20
  436ccc:	mov	w1, w21
  436cd0:	mov	x0, x19
  436cd4:	bl	43783c <nftw@plt+0x34b4c>
  436cd8:	b	435a44 <nftw@plt+0x32d54>
  436cdc:	mov	x0, x19
  436ce0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436ce4:	add	x1, x1, #0x68d
  436ce8:	bl	43540c <nftw@plt+0x3271c>
  436cec:	ldr	x0, [x22, #8]
  436cf0:	cbz	x0, 436d10 <nftw@plt+0x34020>
  436cf4:	mov	x2, x22
  436cf8:	mov	w1, w21
  436cfc:	mov	x0, x19
  436d00:	bl	43783c <nftw@plt+0x34b4c>
  436d04:	mov	x0, x19
  436d08:	mov	w1, #0x20                  	// #32
  436d0c:	bl	435354 <nftw@plt+0x32664>
  436d10:	mov	x2, x23
  436d14:	mov	w1, w21
  436d18:	mov	x0, x19
  436d1c:	bl	43722c <nftw@plt+0x3453c>
  436d20:	cbz	x20, 435a44 <nftw@plt+0x32d54>
  436d24:	mov	x2, x20
  436d28:	mov	w1, w21
  436d2c:	mov	x0, x19
  436d30:	bl	43783c <nftw@plt+0x34b4c>
  436d34:	b	435a44 <nftw@plt+0x32d54>
  436d38:	ldr	x1, [x20, #8]
  436d3c:	ldr	w2, [x1]
  436d40:	cmp	w2, #0x27
  436d44:	b.ne	436ef0 <nftw@plt+0x34200>  // b.any
  436d48:	ldr	x1, [x1, #8]
  436d4c:	ldr	w22, [x1, #28]
  436d50:	cmp	w22, #0x6
  436d54:	b.hi	436db0 <nftw@plt+0x340c0>  // b.pmore
  436d58:	cbz	w22, 436db8 <nftw@plt+0x340c8>
  436d5c:	ldr	x1, [x20, #16]
  436d60:	ldr	w1, [x1]
  436d64:	cbnz	w1, 436db8 <nftw@plt+0x340c8>
  436d68:	cmp	w0, #0x3e
  436d6c:	b.ne	436d7c <nftw@plt+0x3408c>  // b.any
  436d70:	mov	x0, x19
  436d74:	mov	w1, #0x2d                  	// #45
  436d78:	bl	435354 <nftw@plt+0x32664>
  436d7c:	ldr	x2, [x20, #16]
  436d80:	mov	w1, w21
  436d84:	mov	x0, x19
  436d88:	sub	w22, w22, #0x2
  436d8c:	bl	43722c <nftw@plt+0x3453c>
  436d90:	cmp	w22, #0x4
  436d94:	b.hi	435a44 <nftw@plt+0x32d54>  // b.pmore
  436d98:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  436d9c:	add	x0, x0, #0x760
  436da0:	ldrb	w0, [x0, w22, uxtw]
  436da4:	adr	x1, 436db0 <nftw@plt+0x340c0>
  436da8:	add	x0, x1, w0, sxtb #2
  436dac:	br	x0
  436db0:	cmp	w22, #0x7
  436db4:	b.eq	436e90 <nftw@plt+0x341a0>  // b.none
  436db8:	mov	x0, x19
  436dbc:	mov	w1, #0x28                  	// #40
  436dc0:	bl	435354 <nftw@plt+0x32664>
  436dc4:	ldr	x2, [x20, #8]
  436dc8:	mov	w1, w21
  436dcc:	mov	x0, x19
  436dd0:	bl	43722c <nftw@plt+0x3453c>
  436dd4:	mov	x0, x19
  436dd8:	mov	w1, #0x29                  	// #41
  436ddc:	bl	435354 <nftw@plt+0x32664>
  436de0:	ldr	w0, [x20]
  436de4:	cmp	w0, #0x3e
  436de8:	b.ne	436df8 <nftw@plt+0x34108>  // b.any
  436dec:	mov	x0, x19
  436df0:	mov	w1, #0x2d                  	// #45
  436df4:	bl	435354 <nftw@plt+0x32664>
  436df8:	cmp	w22, #0x8
  436dfc:	b.ne	436e0c <nftw@plt+0x3411c>  // b.any
  436e00:	mov	x0, x19
  436e04:	mov	w1, #0x5b                  	// #91
  436e08:	bl	435354 <nftw@plt+0x32664>
  436e0c:	ldr	x2, [x20, #16]
  436e10:	mov	w1, w21
  436e14:	mov	x0, x19
  436e18:	bl	43722c <nftw@plt+0x3453c>
  436e1c:	cmp	w22, #0x8
  436e20:	b.ne	435a44 <nftw@plt+0x32d54>  // b.any
  436e24:	mov	x0, x19
  436e28:	mov	w1, #0x5d                  	// #93
  436e2c:	bl	435354 <nftw@plt+0x32664>
  436e30:	b	435a44 <nftw@plt+0x32d54>
  436e34:	mov	x0, x19
  436e38:	mov	w1, #0x75                  	// #117
  436e3c:	bl	435354 <nftw@plt+0x32664>
  436e40:	b	435a44 <nftw@plt+0x32d54>
  436e44:	mov	x0, x19
  436e48:	mov	w1, #0x6c                  	// #108
  436e4c:	bl	435354 <nftw@plt+0x32664>
  436e50:	b	435a44 <nftw@plt+0x32d54>
  436e54:	mov	x0, x19
  436e58:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x19fa8>
  436e5c:	add	x1, x1, #0xf78
  436e60:	bl	43540c <nftw@plt+0x3271c>
  436e64:	b	435a44 <nftw@plt+0x32d54>
  436e68:	mov	x0, x19
  436e6c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  436e70:	add	x1, x1, #0xced
  436e74:	bl	43540c <nftw@plt+0x3271c>
  436e78:	b	435a44 <nftw@plt+0x32d54>
  436e7c:	mov	x0, x19
  436e80:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436e84:	add	x1, x1, #0x692
  436e88:	bl	43540c <nftw@plt+0x3271c>
  436e8c:	b	435a44 <nftw@plt+0x32d54>
  436e90:	ldr	x1, [x20, #16]
  436e94:	ldr	w2, [x1]
  436e98:	cbnz	w2, 436db8 <nftw@plt+0x340c8>
  436e9c:	ldr	w2, [x1, #16]
  436ea0:	cmp	w2, #0x1
  436ea4:	b.ne	436db8 <nftw@plt+0x340c8>  // b.any
  436ea8:	cmp	w0, #0x3d
  436eac:	b.ne	436db8 <nftw@plt+0x340c8>  // b.any
  436eb0:	ldr	x0, [x1, #8]
  436eb4:	ldrb	w0, [x0]
  436eb8:	cmp	w0, #0x30
  436ebc:	b.eq	436edc <nftw@plt+0x341ec>  // b.none
  436ec0:	cmp	w0, #0x31
  436ec4:	b.ne	436db8 <nftw@plt+0x340c8>  // b.any
  436ec8:	mov	x0, x19
  436ecc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  436ed0:	add	x1, x1, #0x736
  436ed4:	bl	43540c <nftw@plt+0x3271c>
  436ed8:	b	435a44 <nftw@plt+0x32d54>
  436edc:	mov	x0, x19
  436ee0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  436ee4:	add	x1, x1, #0x73b
  436ee8:	bl	43540c <nftw@plt+0x3271c>
  436eec:	b	435a44 <nftw@plt+0x32d54>
  436ef0:	mov	w22, #0x0                   	// #0
  436ef4:	b	436db8 <nftw@plt+0x340c8>
  436ef8:	ldr	w1, [x20, #8]
  436efc:	mov	x0, x19
  436f00:	bl	435440 <nftw@plt+0x32750>
  436f04:	b	435a44 <nftw@plt+0x32d54>
  436f08:	mov	x0, x19
  436f0c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436f10:	add	x1, x1, #0x696
  436f14:	bl	43540c <nftw@plt+0x3271c>
  436f18:	ldr	x2, [x20, #8]
  436f1c:	mov	w1, w21
  436f20:	mov	x0, x19
  436f24:	bl	43722c <nftw@plt+0x3453c>
  436f28:	b	435a44 <nftw@plt+0x32d54>
  436f2c:	ldr	x2, [x20, #8]
  436f30:	mov	w1, w21
  436f34:	mov	x0, x19
  436f38:	bl	43722c <nftw@plt+0x3453c>
  436f3c:	ldr	x2, [x20, #16]
  436f40:	mov	w1, w21
  436f44:	mov	x0, x19
  436f48:	bl	43722c <nftw@plt+0x3453c>
  436f4c:	b	435a44 <nftw@plt+0x32d54>
  436f50:	ldrb	w1, [x20, #8]
  436f54:	mov	x0, x19
  436f58:	bl	435354 <nftw@plt+0x32664>
  436f5c:	b	435a44 <nftw@plt+0x32d54>
  436f60:	mov	x0, x19
  436f64:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436f68:	add	x1, x1, #0x6a5
  436f6c:	bl	43540c <nftw@plt+0x3271c>
  436f70:	ldr	x2, [x20, #8]
  436f74:	mov	w1, w21
  436f78:	mov	x0, x19
  436f7c:	bl	43722c <nftw@plt+0x3453c>
  436f80:	mov	x0, x19
  436f84:	mov	w1, #0x29                  	// #41
  436f88:	bl	435354 <nftw@plt+0x32664>
  436f8c:	b	435a44 <nftw@plt+0x32d54>
  436f90:	ldr	x1, [x20, #8]
  436f94:	mov	x0, x19
  436f98:	bl	435954 <nftw@plt+0x32c64>
  436f9c:	cbnz	x0, 436fc4 <nftw@plt+0x342d4>
  436fa0:	ldr	x2, [x20, #8]
  436fa4:	mov	w1, w21
  436fa8:	mov	x0, x19
  436fac:	bl	43783c <nftw@plt+0x34b4c>
  436fb0:	mov	x0, x19
  436fb4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436fb8:	add	x1, x1, #0x77d
  436fbc:	bl	43540c <nftw@plt+0x3271c>
  436fc0:	b	435a44 <nftw@plt+0x32d54>
  436fc4:	bl	4353dc <nftw@plt+0x326ec>
  436fc8:	mov	w23, w0
  436fcc:	sub	w25, w0, #0x1
  436fd0:	ldr	x24, [x20, #8]
  436fd4:	adrp	x20, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  436fd8:	add	x20, x20, #0x66a
  436fdc:	cmp	w22, w23
  436fe0:	b.ge	435a44 <nftw@plt+0x32d54>  // b.tcont
  436fe4:	str	w22, [x19, #316]
  436fe8:	mov	x2, x24
  436fec:	mov	w1, w21
  436ff0:	mov	x0, x19
  436ff4:	bl	43722c <nftw@plt+0x3453c>
  436ff8:	cmp	w25, w22
  436ffc:	b.le	43700c <nftw@plt+0x3431c>
  437000:	mov	x1, x20
  437004:	mov	x0, x19
  437008:	bl	43540c <nftw@plt+0x3271c>
  43700c:	add	w22, w22, #0x1
  437010:	b	436fdc <nftw@plt+0x342ec>
  437014:	ldr	x20, [x20, #8]
  437018:	cbnz	x20, 437030 <nftw@plt+0x34340>
  43701c:	mov	x0, x19
  437020:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437024:	add	x1, x1, #0x6b0
  437028:	bl	43540c <nftw@plt+0x3271c>
  43702c:	b	435a44 <nftw@plt+0x32d54>
  437030:	mov	x0, x19
  437034:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437038:	add	x1, x1, #0x6b5
  43703c:	bl	43540c <nftw@plt+0x3271c>
  437040:	mov	w1, w20
  437044:	mov	x0, x19
  437048:	bl	435440 <nftw@plt+0x32750>
  43704c:	mov	x0, x19
  437050:	mov	w1, #0x7d                  	// #125
  437054:	bl	435354 <nftw@plt+0x32664>
  437058:	b	435a44 <nftw@plt+0x32d54>
  43705c:	mov	x0, x19
  437060:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437064:	add	x1, x1, #0x6bc
  437068:	bl	43540c <nftw@plt+0x3271c>
  43706c:	ldr	x2, [x20, #8]
  437070:	mov	w1, w21
  437074:	mov	x0, x19
  437078:	bl	43722c <nftw@plt+0x3453c>
  43707c:	b	435a44 <nftw@plt+0x32d54>
  437080:	mov	x0, x19
  437084:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437088:	add	x1, x1, #0x6da
  43708c:	bl	43540c <nftw@plt+0x3271c>
  437090:	ldr	x2, [x20, #8]
  437094:	mov	w1, w21
  437098:	mov	x0, x19
  43709c:	bl	43722c <nftw@plt+0x3453c>
  4370a0:	b	435a44 <nftw@plt+0x32d54>
  4370a4:	mov	x0, x19
  4370a8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4370ac:	add	x1, x1, #0x6f7
  4370b0:	bl	43540c <nftw@plt+0x3271c>
  4370b4:	ldr	w0, [x19, #312]
  4370b8:	mov	w1, w21
  4370bc:	ldr	x2, [x20, #8]
  4370c0:	add	w0, w0, #0x1
  4370c4:	str	w0, [x19, #312]
  4370c8:	mov	x0, x19
  4370cc:	bl	43722c <nftw@plt+0x3453c>
  4370d0:	ldr	w0, [x19, #312]
  4370d4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4370d8:	add	x1, x1, #0x700
  4370dc:	sub	w0, w0, #0x1
  4370e0:	str	w0, [x19, #312]
  4370e4:	mov	x0, x19
  4370e8:	bl	43540c <nftw@plt+0x3271c>
  4370ec:	ldr	w1, [x20, #16]
  4370f0:	mov	x0, x19
  4370f4:	add	w1, w1, #0x1
  4370f8:	bl	435440 <nftw@plt+0x32750>
  4370fc:	mov	x0, x19
  437100:	mov	w1, #0x7d                  	// #125
  437104:	bl	435354 <nftw@plt+0x32664>
  437108:	b	435a44 <nftw@plt+0x32d54>
  43710c:	mov	x0, x19
  437110:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437114:	add	x1, x1, #0x703
  437118:	bl	43540c <nftw@plt+0x3271c>
  43711c:	ldr	x1, [x20, #8]
  437120:	mov	x0, x19
  437124:	add	w1, w1, #0x1
  437128:	bl	435440 <nftw@plt+0x32750>
  43712c:	mov	x0, x19
  437130:	mov	w1, #0x7d                  	// #125
  437134:	bl	435354 <nftw@plt+0x32664>
  437138:	b	435a44 <nftw@plt+0x32d54>
  43713c:	ldr	x2, [x20, #8]
  437140:	mov	w1, w21
  437144:	mov	x0, x19
  437148:	bl	43722c <nftw@plt+0x3453c>
  43714c:	mov	x0, x19
  437150:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437154:	add	x1, x1, #0x712
  437158:	bl	43540c <nftw@plt+0x3271c>
  43715c:	ldr	x2, [x20, #16]
  437160:	mov	w1, w21
  437164:	mov	x0, x19
  437168:	bl	43722c <nftw@plt+0x3453c>
  43716c:	mov	x0, x19
  437170:	mov	w1, #0x5d                  	// #93
  437174:	bl	435354 <nftw@plt+0x32664>
  437178:	b	435a44 <nftw@plt+0x32d54>
  43717c:	cmp	w5, #0x2
  437180:	b.ne	4371b0 <nftw@plt+0x344c0>  // b.any
  437184:	ldr	x22, [x22, #16]
  437188:	ldr	w0, [x22]
  43718c:	cmp	w0, #0x47
  437190:	b.ne	43719c <nftw@plt+0x344ac>  // b.any
  437194:	ldr	x22, [x22, #8]
  437198:	cbz	x22, 435c6c <nftw@plt+0x32f7c>
  43719c:	ubfiz	x0, x23, #5, #32
  4371a0:	add	x2, x2, x0
  4371a4:	ldr	w0, [x22]
  4371a8:	bl	4350d4 <nftw@plt+0x323e4>
  4371ac:	cbnz	w0, 435cac <nftw@plt+0x32fbc>
  4371b0:	ldr	w0, [x22]
  4371b4:	cmp	w0, #0x4
  4371b8:	b.ne	4371c8 <nftw@plt+0x344d8>  // b.any
  4371bc:	add	x0, sp, #0x50
  4371c0:	stp	x4, x22, [sp, #80]
  4371c4:	str	x0, [x19, #288]
  4371c8:	ldr	x2, [x20, #16]
  4371cc:	mov	x0, x19
  4371d0:	mov	w1, w21
  4371d4:	bl	43722c <nftw@plt+0x3453c>
  4371d8:	ldr	w0, [x22]
  4371dc:	cmp	w0, #0x4
  4371e0:	b.ne	4371ec <nftw@plt+0x344fc>  // b.any
  4371e4:	ldr	x0, [sp, #80]
  4371e8:	str	x0, [x19, #288]
  4371ec:	add	x22, sp, #0x70
  4371f0:	add	x25, sp, #0x68
  4371f4:	sub	w23, w23, #0x1
  4371f8:	ubfiz	x20, x23, #5, #32
  4371fc:	ldr	w0, [x22, x20]
  437200:	cbnz	w0, 437220 <nftw@plt+0x34530>
  437204:	mov	x0, x19
  437208:	mov	w1, #0x20                  	// #32
  43720c:	bl	435354 <nftw@plt+0x32664>
  437210:	ldr	x2, [x25, x20]
  437214:	mov	w1, w21
  437218:	mov	x0, x19
  43721c:	bl	4372b8 <nftw@plt+0x345c8>
  437220:	cbnz	w23, 4371f4 <nftw@plt+0x34504>
  437224:	str	x24, [x19, #296]
  437228:	b	435a44 <nftw@plt+0x32d54>
  43722c:	stp	x29, x30, [sp, #-48]!
  437230:	mov	x29, sp
  437234:	stp	x19, x20, [sp, #16]
  437238:	mov	x19, x0
  43723c:	cbz	x2, 43725c <nftw@plt+0x3456c>
  437240:	ldr	w4, [x2, #4]
  437244:	mov	x20, x2
  437248:	cmp	w4, #0x1
  43724c:	b.gt	43725c <nftw@plt+0x3456c>
  437250:	ldr	w3, [x0, #308]
  437254:	cmp	w3, #0x400
  437258:	b.le	437270 <nftw@plt+0x34580>
  43725c:	mov	w0, #0x1                   	// #1
  437260:	str	w0, [x19, #304]
  437264:	ldp	x19, x20, [sp, #16]
  437268:	ldp	x29, x30, [sp], #48
  43726c:	ret
  437270:	add	w4, w4, #0x1
  437274:	add	w3, w3, #0x1
  437278:	str	w4, [x2, #4]
  43727c:	str	w3, [x0, #308]
  437280:	ldr	x3, [x0, #328]
  437284:	stp	x2, x3, [sp, #32]
  437288:	add	x3, sp, #0x20
  43728c:	str	x3, [x0, #328]
  437290:	bl	435a1c <nftw@plt+0x32d2c>
  437294:	ldr	x0, [sp, #40]
  437298:	str	x0, [x19, #328]
  43729c:	ldr	w0, [x20, #4]
  4372a0:	sub	w0, w0, #0x1
  4372a4:	str	w0, [x20, #4]
  4372a8:	ldr	w0, [x19, #308]
  4372ac:	sub	w0, w0, #0x1
  4372b0:	str	w0, [x19, #308]
  4372b4:	b	437264 <nftw@plt+0x34574>
  4372b8:	stp	x29, x30, [sp, #-48]!
  4372bc:	mov	x29, sp
  4372c0:	stp	x19, x20, [sp, #16]
  4372c4:	mov	x20, x2
  4372c8:	ldr	w2, [x2]
  4372cc:	str	x21, [sp, #32]
  4372d0:	cmp	w2, #0x3
  4372d4:	b.eq	43743c <nftw@plt+0x3474c>  // b.none
  4372d8:	sub	w2, w2, #0x19
  4372dc:	mov	x19, x0
  4372e0:	mov	w21, w1
  4372e4:	cmp	w2, #0x37
  4372e8:	b.hi	437468 <nftw@plt+0x34778>  // b.pmore
  4372ec:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4372f0:	add	x0, x0, #0x768
  4372f4:	ldrb	w0, [x0, w2, uxtw]
  4372f8:	adr	x1, 437304 <nftw@plt+0x34614>
  4372fc:	add	x0, x1, w0, sxtb #2
  437300:	br	x0
  437304:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437308:	add	x1, x1, #0x71b
  43730c:	mov	x0, x19
  437310:	ldp	x19, x20, [sp, #16]
  437314:	ldr	x21, [sp, #32]
  437318:	ldp	x29, x30, [sp], #48
  43731c:	b	43540c <nftw@plt+0x3271c>
  437320:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437324:	add	x1, x1, #0x725
  437328:	b	43730c <nftw@plt+0x3461c>
  43732c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437330:	add	x1, x1, #0x72f
  437334:	b	43730c <nftw@plt+0x3461c>
  437338:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43733c:	add	x1, x1, #0x736
  437340:	b	43730c <nftw@plt+0x3461c>
  437344:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437348:	add	x1, x1, #0x748
  43734c:	mov	x0, x19
  437350:	bl	43540c <nftw@plt+0x3271c>
  437354:	ldr	x0, [x20, #16]
  437358:	cbz	x0, 437470 <nftw@plt+0x34780>
  43735c:	mov	x0, x19
  437360:	mov	w1, #0x28                  	// #40
  437364:	bl	435354 <nftw@plt+0x32664>
  437368:	ldr	x2, [x20, #16]
  43736c:	mov	w1, w21
  437370:	mov	x0, x19
  437374:	bl	43722c <nftw@plt+0x3453c>
  437378:	mov	w1, #0x29                  	// #41
  43737c:	b	4373b0 <nftw@plt+0x346c0>
  437380:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437384:	add	x1, x1, #0x752
  437388:	b	43734c <nftw@plt+0x3465c>
  43738c:	mov	x0, x19
  437390:	mov	w1, #0x20                  	// #32
  437394:	bl	435354 <nftw@plt+0x32664>
  437398:	ldr	x2, [x20, #16]
  43739c:	mov	w1, w21
  4373a0:	mov	x0, x19
  4373a4:	b	437440 <nftw@plt+0x34750>
  4373a8:	tbnz	w21, #2, 437470 <nftw@plt+0x34780>
  4373ac:	mov	w1, #0x2a                  	// #42
  4373b0:	mov	x0, x19
  4373b4:	ldp	x19, x20, [sp, #16]
  4373b8:	ldr	x21, [sp, #32]
  4373bc:	ldp	x29, x30, [sp], #48
  4373c0:	b	435354 <nftw@plt+0x32664>
  4373c4:	mov	x0, x19
  4373c8:	mov	w1, #0x20                  	// #32
  4373cc:	bl	435354 <nftw@plt+0x32664>
  4373d0:	mov	w1, #0x26                  	// #38
  4373d4:	b	4373b0 <nftw@plt+0x346c0>
  4373d8:	mov	x0, x19
  4373dc:	mov	w1, #0x20                  	// #32
  4373e0:	bl	435354 <nftw@plt+0x32664>
  4373e4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0x18fa8>
  4373e8:	add	x1, x1, #0xd24
  4373ec:	b	43730c <nftw@plt+0x3461c>
  4373f0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4373f4:	add	x1, x1, #0x759
  4373f8:	b	43730c <nftw@plt+0x3461c>
  4373fc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437400:	add	x1, x1, #0x762
  437404:	b	43730c <nftw@plt+0x3461c>
  437408:	ldrb	w0, [x19, #264]
  43740c:	cmp	w0, #0x28
  437410:	b.eq	437420 <nftw@plt+0x34730>  // b.none
  437414:	mov	x0, x19
  437418:	mov	w1, #0x20                  	// #32
  43741c:	bl	435354 <nftw@plt+0x32664>
  437420:	ldr	x2, [x20, #8]
  437424:	mov	w1, w21
  437428:	mov	x0, x19
  43742c:	bl	43722c <nftw@plt+0x3453c>
  437430:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437434:	add	x1, x1, #0x76d
  437438:	b	43730c <nftw@plt+0x3461c>
  43743c:	ldr	x2, [x20, #8]
  437440:	ldp	x19, x20, [sp, #16]
  437444:	ldr	x21, [sp, #32]
  437448:	ldp	x29, x30, [sp], #48
  43744c:	b	43722c <nftw@plt+0x3453c>
  437450:	mov	x0, x19
  437454:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437458:	add	x1, x1, #0x771
  43745c:	bl	43540c <nftw@plt+0x3271c>
  437460:	ldr	x2, [x20, #8]
  437464:	b	43736c <nftw@plt+0x3467c>
  437468:	mov	x2, x20
  43746c:	b	43739c <nftw@plt+0x346ac>
  437470:	ldp	x19, x20, [sp, #16]
  437474:	ldr	x21, [sp, #32]
  437478:	ldp	x29, x30, [sp], #48
  43747c:	ret
  437480:	stp	x29, x30, [sp, #-64]!
  437484:	mov	x29, sp
  437488:	stp	x19, x20, [sp, #16]
  43748c:	mov	x19, x0
  437490:	mov	w20, w1
  437494:	mov	x0, x3
  437498:	stp	x21, x22, [sp, #32]
  43749c:	mov	x22, x2
  4374a0:	mov	x21, x3
  4374a4:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4374a8:	add	x2, x2, #0x7a0
  4374ac:	stp	x23, x24, [sp, #48]
  4374b0:	cbnz	x0, 4374bc <nftw@plt+0x347cc>
  4374b4:	mov	w23, #0x0                   	// #0
  4374b8:	b	43752c <nftw@plt+0x3483c>
  4374bc:	ldr	w1, [x0, #16]
  4374c0:	cbnz	w1, 4374b4 <nftw@plt+0x347c4>
  4374c4:	ldr	x1, [x0, #8]
  4374c8:	ldr	w1, [x1]
  4374cc:	sub	w1, w1, #0x19
  4374d0:	cmp	w1, #0x12
  4374d4:	b.hi	4374e8 <nftw@plt+0x347f8>  // b.pmore
  4374d8:	ldrb	w1, [x2, w1, uxtw]
  4374dc:	adr	x3, 4374e8 <nftw@plt+0x347f8>
  4374e0:	add	x1, x3, w1, sxtb #2
  4374e4:	br	x1
  4374e8:	ldr	x0, [x0]
  4374ec:	b	4374b0 <nftw@plt+0x347c0>
  4374f0:	ldrb	w0, [x19, #264]
  4374f4:	and	w0, w0, #0xfffffffd
  4374f8:	and	w0, w0, #0xff
  4374fc:	cmp	w0, #0x28
  437500:	b.eq	43751c <nftw@plt+0x3482c>  // b.none
  437504:	ldrb	w0, [x19, #264]
  437508:	cmp	w0, #0x20
  43750c:	b.eq	43751c <nftw@plt+0x3482c>  // b.none
  437510:	mov	x0, x19
  437514:	mov	w1, #0x20                  	// #32
  437518:	bl	435354 <nftw@plt+0x32664>
  43751c:	mov	w23, #0x1                   	// #1
  437520:	mov	x0, x19
  437524:	mov	w1, #0x28                  	// #40
  437528:	bl	435354 <nftw@plt+0x32664>
  43752c:	ldr	x24, [x19, #296]
  437530:	str	xzr, [x19, #296]
  437534:	mov	x2, x21
  437538:	mov	w1, w20
  43753c:	mov	x0, x19
  437540:	mov	w3, #0x0                   	// #0
  437544:	bl	4375b0 <nftw@plt+0x348c0>
  437548:	cbz	w23, 437558 <nftw@plt+0x34868>
  43754c:	mov	x0, x19
  437550:	mov	w1, #0x29                  	// #41
  437554:	bl	435354 <nftw@plt+0x32664>
  437558:	mov	x0, x19
  43755c:	mov	w1, #0x28                  	// #40
  437560:	bl	435354 <nftw@plt+0x32664>
  437564:	ldr	x2, [x22]
  437568:	cbz	x2, 437578 <nftw@plt+0x34888>
  43756c:	mov	w1, w20
  437570:	mov	x0, x19
  437574:	bl	43722c <nftw@plt+0x3453c>
  437578:	mov	x0, x19
  43757c:	mov	w1, #0x29                  	// #41
  437580:	bl	435354 <nftw@plt+0x32664>
  437584:	mov	x2, x21
  437588:	mov	w1, w20
  43758c:	mov	x0, x19
  437590:	mov	w3, #0x1                   	// #1
  437594:	bl	4375b0 <nftw@plt+0x348c0>
  437598:	ldp	x21, x22, [sp, #32]
  43759c:	str	x24, [x19, #296]
  4375a0:	ldp	x19, x20, [sp, #16]
  4375a4:	ldp	x23, x24, [sp, #48]
  4375a8:	ldp	x29, x30, [sp], #64
  4375ac:	ret
  4375b0:	stp	x29, x30, [sp, #-64]!
  4375b4:	mov	x29, sp
  4375b8:	stp	x19, x20, [sp, #16]
  4375bc:	mov	x19, x0
  4375c0:	mov	x20, x2
  4375c4:	stp	x21, x22, [sp, #32]
  4375c8:	mov	w21, w1
  4375cc:	stp	x23, x24, [sp, #48]
  4375d0:	mov	w23, w3
  4375d4:	mov	w24, #0x1                   	// #1
  4375d8:	cbz	x20, 43763c <nftw@plt+0x3494c>
  4375dc:	ldr	w0, [x19, #304]
  4375e0:	cbnz	w0, 43763c <nftw@plt+0x3494c>
  4375e4:	ldr	w0, [x20, #16]
  4375e8:	cbnz	w0, 437604 <nftw@plt+0x34914>
  4375ec:	ldr	x2, [x20, #8]
  4375f0:	ldr	w4, [x2]
  4375f4:	cbnz	w23, 43760c <nftw@plt+0x3491c>
  4375f8:	mov	w0, w4
  4375fc:	bl	4350d4 <nftw@plt+0x323e4>
  437600:	cbz	w0, 43760c <nftw@plt+0x3491c>
  437604:	ldr	x20, [x20]
  437608:	b	4375d8 <nftw@plt+0x348e8>
  43760c:	ldr	x0, [x20, #24]
  437610:	cmp	w4, #0x29
  437614:	ldr	x22, [x19, #288]
  437618:	str	w24, [x20, #16]
  43761c:	str	x0, [x19, #288]
  437620:	b.ne	437650 <nftw@plt+0x34960>  // b.any
  437624:	ldr	x3, [x20]
  437628:	add	x2, x2, #0x10
  43762c:	mov	w1, w21
  437630:	mov	x0, x19
  437634:	bl	437480 <nftw@plt+0x34790>
  437638:	str	x22, [x19, #288]
  43763c:	ldp	x19, x20, [sp, #16]
  437640:	ldp	x21, x22, [sp, #32]
  437644:	ldp	x23, x24, [sp, #48]
  437648:	ldp	x29, x30, [sp], #64
  43764c:	ret
  437650:	cmp	w4, #0x2a
  437654:	b.ne	437670 <nftw@plt+0x34980>  // b.any
  437658:	ldr	x3, [x20]
  43765c:	add	x2, x2, #0x8
  437660:	mov	w1, w21
  437664:	mov	x0, x19
  437668:	bl	437734 <nftw@plt+0x34a44>
  43766c:	b	437638 <nftw@plt+0x34948>
  437670:	cmp	w4, #0x2
  437674:	b.ne	437720 <nftw@plt+0x34a30>  // b.any
  437678:	ldr	x2, [x2, #8]
  43767c:	mov	w1, w21
  437680:	ldr	x23, [x19, #296]
  437684:	str	xzr, [x19, #296]
  437688:	mov	x0, x19
  43768c:	bl	43722c <nftw@plt+0x3453c>
  437690:	str	x23, [x19, #296]
  437694:	tbnz	w21, #2, 437710 <nftw@plt+0x34a20>
  437698:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43769c:	mov	x0, x19
  4376a0:	add	x1, x1, #0x505
  4376a4:	bl	43540c <nftw@plt+0x3271c>
  4376a8:	ldr	x0, [x20, #8]
  4376ac:	ldr	x20, [x0, #16]
  4376b0:	ldr	w0, [x20]
  4376b4:	cmp	w0, #0x47
  4376b8:	b.ne	4376f0 <nftw@plt+0x34a00>  // b.any
  4376bc:	mov	x0, x19
  4376c0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4376c4:	add	x1, x1, #0x4f6
  4376c8:	bl	43540c <nftw@plt+0x3271c>
  4376cc:	ldr	w1, [x20, #16]
  4376d0:	mov	x0, x19
  4376d4:	add	w1, w1, #0x1
  4376d8:	bl	435440 <nftw@plt+0x32750>
  4376dc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4376e0:	mov	x0, x19
  4376e4:	add	x1, x1, #0x504
  4376e8:	bl	43540c <nftw@plt+0x3271c>
  4376ec:	ldr	x20, [x20, #8]
  4376f0:	ldr	w0, [x20]
  4376f4:	bl	4350d4 <nftw@plt+0x323e4>
  4376f8:	cbnz	w0, 4376ec <nftw@plt+0x349fc>
  4376fc:	mov	x2, x20
  437700:	mov	w1, w21
  437704:	mov	x0, x19
  437708:	bl	43722c <nftw@plt+0x3453c>
  43770c:	b	437638 <nftw@plt+0x34948>
  437710:	mov	x0, x19
  437714:	mov	w1, #0x2e                  	// #46
  437718:	bl	435354 <nftw@plt+0x32664>
  43771c:	b	4376a8 <nftw@plt+0x349b8>
  437720:	mov	w1, w21
  437724:	mov	x0, x19
  437728:	bl	4372b8 <nftw@plt+0x345c8>
  43772c:	str	x22, [x19, #288]
  437730:	b	437604 <nftw@plt+0x34914>
  437734:	stp	x29, x30, [sp, #-64]!
  437738:	mov	x29, sp
  43773c:	stp	x19, x20, [sp, #16]
  437740:	mov	x19, x0
  437744:	stp	x21, x22, [sp, #32]
  437748:	mov	w21, w1
  43774c:	stp	x23, x24, [sp, #48]
  437750:	mov	x24, x2
  437754:	cbnz	x3, 4377a0 <nftw@plt+0x34ab0>
  437758:	mov	x0, x19
  43775c:	mov	w1, #0x20                  	// #32
  437760:	bl	435354 <nftw@plt+0x32664>
  437764:	mov	x0, x19
  437768:	mov	w1, #0x5b                  	// #91
  43776c:	bl	435354 <nftw@plt+0x32664>
  437770:	ldr	x2, [x24]
  437774:	cbz	x2, 437784 <nftw@plt+0x34a94>
  437778:	mov	w1, w21
  43777c:	mov	x0, x19
  437780:	bl	43722c <nftw@plt+0x3453c>
  437784:	mov	x0, x19
  437788:	mov	w1, #0x5d                  	// #93
  43778c:	ldp	x19, x20, [sp, #16]
  437790:	ldp	x21, x22, [sp, #32]
  437794:	ldp	x23, x24, [sp, #48]
  437798:	ldp	x29, x30, [sp], #64
  43779c:	b	435354 <nftw@plt+0x32664>
  4377a0:	mov	x20, x3
  4377a4:	mov	x0, x3
  4377a8:	ldr	w22, [x0, #16]
  4377ac:	cbnz	w22, 4377d8 <nftw@plt+0x34ae8>
  4377b0:	ldr	x0, [x0, #8]
  4377b4:	ldr	w0, [x0]
  4377b8:	cmp	w0, #0x2a
  4377bc:	b.eq	437814 <nftw@plt+0x34b24>  // b.none
  4377c0:	mov	x0, x19
  4377c4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4377c8:	mov	w23, #0x1                   	// #1
  4377cc:	add	x1, x1, #0x6ad
  4377d0:	bl	43540c <nftw@plt+0x3271c>
  4377d4:	b	4377e4 <nftw@plt+0x34af4>
  4377d8:	ldr	x0, [x0]
  4377dc:	cbnz	x0, 4377a8 <nftw@plt+0x34ab8>
  4377e0:	mov	w23, #0x0                   	// #0
  4377e4:	mov	w22, #0x1                   	// #1
  4377e8:	mov	x2, x20
  4377ec:	mov	w1, w21
  4377f0:	mov	x0, x19
  4377f4:	mov	w3, #0x0                   	// #0
  4377f8:	bl	4375b0 <nftw@plt+0x348c0>
  4377fc:	cbz	w23, 43780c <nftw@plt+0x34b1c>
  437800:	mov	x0, x19
  437804:	mov	w1, #0x29                  	// #41
  437808:	bl	435354 <nftw@plt+0x32664>
  43780c:	cbnz	w22, 437758 <nftw@plt+0x34a68>
  437810:	b	437764 <nftw@plt+0x34a74>
  437814:	mov	w23, #0x0                   	// #0
  437818:	b	4377e8 <nftw@plt+0x34af8>
  43781c:	ldr	w4, [x2]
  437820:	cmp	w4, #0x32
  437824:	b.ne	437838 <nftw@plt+0x34b48>  // b.any
  437828:	ldr	x1, [x2, #8]
  43782c:	ldrsw	x2, [x1, #16]
  437830:	ldr	x1, [x1, #8]
  437834:	b	435398 <nftw@plt+0x326a8>
  437838:	b	43722c <nftw@plt+0x3453c>
  43783c:	stp	x29, x30, [sp, #-48]!
  437840:	mov	x29, sp
  437844:	stp	x19, x20, [sp, #16]
  437848:	mov	x19, x0
  43784c:	mov	x20, x2
  437850:	stp	x21, x22, [sp, #32]
  437854:	mov	w21, w1
  437858:	ldr	w1, [x2]
  43785c:	cmp	w1, #0x31
  437860:	b.hi	437874 <nftw@plt+0x34b84>  // b.pmore
  437864:	mov	x0, #0x43                  	// #67
  437868:	movk	x0, #0x2, lsl #48
  43786c:	lsr	x0, x0, x1
  437870:	tbnz	w0, #0, 4378b0 <nftw@plt+0x34bc0>
  437874:	mov	w22, #0x0                   	// #0
  437878:	mov	x0, x19
  43787c:	mov	w1, #0x28                  	// #40
  437880:	bl	435354 <nftw@plt+0x32664>
  437884:	mov	x2, x20
  437888:	mov	w1, w21
  43788c:	mov	x0, x19
  437890:	bl	43722c <nftw@plt+0x3453c>
  437894:	cbnz	w22, 4378b8 <nftw@plt+0x34bc8>
  437898:	mov	x0, x19
  43789c:	mov	w1, #0x29                  	// #41
  4378a0:	ldp	x19, x20, [sp, #16]
  4378a4:	ldp	x21, x22, [sp, #32]
  4378a8:	ldp	x29, x30, [sp], #48
  4378ac:	b	435354 <nftw@plt+0x32664>
  4378b0:	mov	w22, #0x1                   	// #1
  4378b4:	b	437884 <nftw@plt+0x34b94>
  4378b8:	ldp	x19, x20, [sp, #16]
  4378bc:	ldp	x21, x22, [sp, #32]
  4378c0:	ldp	x29, x30, [sp], #48
  4378c4:	ret
  4378c8:	stp	x29, x30, [sp, #-64]!
  4378cc:	mov	x29, sp
  4378d0:	stp	x19, x20, [sp, #16]
  4378d4:	mov	x19, x0
  4378d8:	mov	w20, w1
  4378dc:	ldr	x0, [x2, #8]
  4378e0:	stp	x21, x22, [sp, #32]
  4378e4:	stp	x23, x24, [sp, #48]
  4378e8:	ldr	x0, [x0, #8]
  4378ec:	ldr	x0, [x0]
  4378f0:	ldrb	w1, [x0]
  4378f4:	cmp	w1, #0x66
  4378f8:	b.ne	437a44 <nftw@plt+0x34d54>  // b.any
  4378fc:	ldr	x1, [x2, #16]
  437900:	ldp	x22, x21, [x1, #8]
  437904:	ldr	w1, [x21]
  437908:	cmp	w1, #0x3c
  43790c:	b.ne	437960 <nftw@plt+0x34c70>  // b.any
  437910:	ldr	x23, [x21, #16]
  437914:	ldr	x21, [x21, #8]
  437918:	mov	w1, #0xffffffff            	// #-1
  43791c:	ldr	w24, [x19, #316]
  437920:	str	w1, [x19, #316]
  437924:	ldrb	w0, [x0, #1]
  437928:	cmp	w0, #0x6c
  43792c:	b.eq	4379b0 <nftw@plt+0x34cc0>  // b.none
  437930:	b.hi	437968 <nftw@plt+0x34c78>  // b.pmore
  437934:	cmp	w0, #0x4c
  437938:	b.eq	4379f0 <nftw@plt+0x34d00>  // b.none
  43793c:	cmp	w0, #0x52
  437940:	b.eq	4379f0 <nftw@plt+0x34d00>  // b.none
  437944:	mov	w0, #0x1                   	// #1
  437948:	str	w24, [x19, #316]
  43794c:	ldp	x19, x20, [sp, #16]
  437950:	ldp	x21, x22, [sp, #32]
  437954:	ldp	x23, x24, [sp, #48]
  437958:	ldp	x29, x30, [sp], #64
  43795c:	ret
  437960:	mov	x23, #0x0                   	// #0
  437964:	b	437918 <nftw@plt+0x34c28>
  437968:	cmp	w0, #0x72
  43796c:	b.ne	437944 <nftw@plt+0x34c54>  // b.any
  437970:	mov	x0, x19
  437974:	mov	w1, #0x28                  	// #40
  437978:	bl	435354 <nftw@plt+0x32664>
  43797c:	mov	x2, x21
  437980:	mov	w1, w20
  437984:	mov	x0, x19
  437988:	bl	43783c <nftw@plt+0x34b4c>
  43798c:	mov	x2, x22
  437990:	mov	w1, w20
  437994:	mov	x0, x19
  437998:	bl	43781c <nftw@plt+0x34b2c>
  43799c:	mov	x0, x19
  4379a0:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4379a4:	add	x1, x1, #0x781
  4379a8:	bl	43540c <nftw@plt+0x3271c>
  4379ac:	b	437944 <nftw@plt+0x34c54>
  4379b0:	mov	x0, x19
  4379b4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4379b8:	add	x1, x1, #0x77c
  4379bc:	bl	43540c <nftw@plt+0x3271c>
  4379c0:	mov	x2, x22
  4379c4:	mov	w1, w20
  4379c8:	mov	x0, x19
  4379cc:	bl	43781c <nftw@plt+0x34b2c>
  4379d0:	mov	x2, x21
  4379d4:	mov	w1, w20
  4379d8:	mov	x0, x19
  4379dc:	bl	43783c <nftw@plt+0x34b4c>
  4379e0:	mov	x0, x19
  4379e4:	mov	w1, #0x29                  	// #41
  4379e8:	bl	435354 <nftw@plt+0x32664>
  4379ec:	b	437944 <nftw@plt+0x34c54>
  4379f0:	mov	x0, x19
  4379f4:	mov	w1, #0x28                  	// #40
  4379f8:	bl	435354 <nftw@plt+0x32664>
  4379fc:	mov	x2, x21
  437a00:	mov	w1, w20
  437a04:	mov	x0, x19
  437a08:	bl	43783c <nftw@plt+0x34b4c>
  437a0c:	mov	x2, x22
  437a10:	mov	w1, w20
  437a14:	mov	x0, x19
  437a18:	bl	43781c <nftw@plt+0x34b2c>
  437a1c:	mov	x0, x19
  437a20:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437a24:	add	x1, x1, #0x77d
  437a28:	bl	43540c <nftw@plt+0x3271c>
  437a2c:	mov	x2, x22
  437a30:	mov	w1, w20
  437a34:	mov	x0, x19
  437a38:	bl	43781c <nftw@plt+0x34b2c>
  437a3c:	mov	x2, x23
  437a40:	b	4379d4 <nftw@plt+0x34ce4>
  437a44:	mov	w0, #0x0                   	// #0
  437a48:	b	43794c <nftw@plt+0x34c5c>
  437a4c:	cmp	x0, #0x0
  437a50:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  437a54:	b.eq	437a70 <nftw@plt+0x34d80>  // b.none
  437a58:	cmp	w2, #0x0
  437a5c:	b.le	437a70 <nftw@plt+0x34d80>
  437a60:	stp	xzr, x1, [x0]
  437a64:	str	w2, [x0, #16]
  437a68:	mov	w0, #0x1                   	// #1
  437a6c:	ret
  437a70:	mov	w0, #0x0                   	// #0
  437a74:	b	437a6c <nftw@plt+0x34d7c>
  437a78:	mov	x4, x1
  437a7c:	mov	w5, w2
  437a80:	stp	x29, x30, [sp, #-16]!
  437a84:	mov	x29, sp
  437a88:	bl	435104 <nftw@plt+0x32414>
  437a8c:	mov	x3, x0
  437a90:	mov	w2, w5
  437a94:	mov	x1, x4
  437a98:	bl	437a4c <nftw@plt+0x34d5c>
  437a9c:	cmp	w0, #0x0
  437aa0:	csel	x0, x3, xzr, ne  // ne = any
  437aa4:	ldp	x29, x30, [sp], #16
  437aa8:	ret
  437aac:	stp	x29, x30, [sp, #-48]!
  437ab0:	mov	x29, sp
  437ab4:	stp	x19, x20, [sp, #16]
  437ab8:	mov	x19, x0
  437abc:	add	x0, x0, #0x18
  437ac0:	str	x21, [sp, #32]
  437ac4:	bl	43547c <nftw@plt+0x3278c>
  437ac8:	cmp	w0, #0x0
  437acc:	b.le	437bac <nftw@plt+0x34ebc>
  437ad0:	mov	w20, w0
  437ad4:	sxtw	x1, w0
  437ad8:	ldr	x0, [x19, #8]
  437adc:	ldr	x21, [x19, #24]
  437ae0:	sub	x0, x0, x21
  437ae4:	cmp	x0, w20, sxtw
  437ae8:	b.lt	437ba4 <nftw@plt+0x34eb4>  // b.tstop
  437aec:	ldr	w2, [x19, #16]
  437af0:	add	x0, x21, x1
  437af4:	str	x0, [x19, #24]
  437af8:	tbz	w2, #2, 437b10 <nftw@plt+0x34e20>
  437afc:	ldrb	w1, [x21, x1]
  437b00:	cmp	w1, #0x24
  437b04:	b.ne	437b10 <nftw@plt+0x34e20>  // b.any
  437b08:	add	x0, x0, #0x1
  437b0c:	str	x0, [x19, #24]
  437b10:	cmp	w20, #0x9
  437b14:	b.le	437b98 <nftw@plt+0x34ea8>
  437b18:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437b1c:	mov	x0, x21
  437b20:	add	x1, x1, #0x786
  437b24:	mov	x2, #0x8                   	// #8
  437b28:	bl	4029c0 <memcmp@plt>
  437b2c:	cbnz	w0, 437b98 <nftw@plt+0x34ea8>
  437b30:	ldrb	w0, [x21, #8]
  437b34:	sub	w0, w0, #0x24
  437b38:	and	w0, w0, #0xff
  437b3c:	cmp	w0, #0x3b
  437b40:	b.hi	437b98 <nftw@plt+0x34ea8>  // b.pmore
  437b44:	mov	x1, #0x401                 	// #1025
  437b48:	movk	x1, #0x800, lsl #48
  437b4c:	lsr	x0, x1, x0
  437b50:	tbz	w0, #0, 437b98 <nftw@plt+0x34ea8>
  437b54:	ldrb	w0, [x21, #9]
  437b58:	cmp	w0, #0x4e
  437b5c:	b.ne	437b98 <nftw@plt+0x34ea8>  // b.any
  437b60:	ldr	w0, [x19, #72]
  437b64:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  437b68:	add	x1, x1, #0x78f
  437b6c:	mov	w2, #0x15                  	// #21
  437b70:	add	w0, w0, #0x16
  437b74:	sub	w20, w0, w20
  437b78:	str	w20, [x19, #72]
  437b7c:	mov	x0, x19
  437b80:	bl	437a78 <nftw@plt+0x34d88>
  437b84:	str	x0, [x19, #64]
  437b88:	ldp	x19, x20, [sp, #16]
  437b8c:	ldr	x21, [sp, #32]
  437b90:	ldp	x29, x30, [sp], #48
  437b94:	ret
  437b98:	mov	w2, w20
  437b9c:	mov	x1, x21
  437ba0:	b	437b7c <nftw@plt+0x34e8c>
  437ba4:	mov	x0, #0x0                   	// #0
  437ba8:	b	437b84 <nftw@plt+0x34e94>
  437bac:	mov	x0, #0x0                   	// #0
  437bb0:	b	437b88 <nftw@plt+0x34e98>
  437bb4:	stp	x29, x30, [sp, #-48]!
  437bb8:	mov	x29, sp
  437bbc:	str	x21, [sp, #32]
  437bc0:	ldr	x21, [x0, #64]
  437bc4:	stp	x19, x20, [sp, #16]
  437bc8:	mov	x19, x0
  437bcc:	mov	x20, x1
  437bd0:	ldr	x0, [x19, #24]
  437bd4:	ldrb	w1, [x0]
  437bd8:	cmp	w1, #0x42
  437bdc:	b.eq	437bf8 <nftw@plt+0x34f08>  // b.none
  437be0:	str	x21, [x19, #64]
  437be4:	mov	x0, x20
  437be8:	ldp	x19, x20, [sp, #16]
  437bec:	ldr	x21, [sp, #32]
  437bf0:	ldp	x29, x30, [sp], #48
  437bf4:	ret
  437bf8:	add	x0, x0, #0x1
  437bfc:	str	x0, [x19, #24]
  437c00:	mov	x0, x19
  437c04:	bl	437aac <nftw@plt+0x34dbc>
  437c08:	mov	x3, x0
  437c0c:	mov	x2, x20
  437c10:	mov	x0, x19
  437c14:	mov	w1, #0x4c                  	// #76
  437c18:	bl	435138 <nftw@plt+0x32448>
  437c1c:	mov	x20, x0
  437c20:	b	437bd0 <nftw@plt+0x34ee0>
  437c24:	stp	x29, x30, [sp, #-32]!
  437c28:	mov	x29, sp
  437c2c:	ldr	x2, [x0, #24]
  437c30:	str	x19, [sp, #16]
  437c34:	mov	x19, x0
  437c38:	ldrb	w0, [x2]
  437c3c:	cmp	w0, #0x53
  437c40:	b.ne	437dfc <nftw@plt+0x3510c>  // b.any
  437c44:	add	x0, x2, #0x1
  437c48:	str	x0, [x19, #24]
  437c4c:	ldrb	w0, [x2, #1]
  437c50:	cbz	w0, 437d24 <nftw@plt+0x35034>
  437c54:	add	x0, x2, #0x2
  437c58:	str	x0, [x19, #24]
  437c5c:	ldrb	w0, [x2, #1]
  437c60:	sub	w2, w0, #0x30
  437c64:	and	w2, w2, #0xff
  437c68:	cmp	w2, #0x2f
  437c6c:	b.hi	437d24 <nftw@plt+0x35034>  // b.pmore
  437c70:	mov	w3, #0xfffe03ff            	// #-130049
  437c74:	movk	x3, #0x87ff, lsl #32
  437c78:	lsr	x2, x3, x2
  437c7c:	tbz	w2, #0, 437d24 <nftw@plt+0x35034>
  437c80:	cmp	w0, #0x5f
  437c84:	b.ne	437cfc <nftw@plt+0x3500c>  // b.any
  437c88:	mov	w0, #0x0                   	// #0
  437c8c:	ldr	w1, [x19, #56]
  437c90:	cmp	w1, w0
  437c94:	b.ls	437dfc <nftw@plt+0x3510c>  // b.plast
  437c98:	ldr	x1, [x19, #48]
  437c9c:	ldr	x1, [x1, w0, uxtw #3]
  437ca0:	mov	x0, x1
  437ca4:	ldr	x19, [sp, #16]
  437ca8:	ldp	x29, x30, [sp], #32
  437cac:	ret
  437cb0:	mov	w2, w1
  437cb4:	sub	w1, w0, #0x30
  437cb8:	and	w1, w1, #0xff
  437cbc:	cmp	w1, #0x9
  437cc0:	b.hi	437d08 <nftw@plt+0x35018>  // b.pmore
  437cc4:	madd	w0, w2, w3, w0
  437cc8:	sub	w1, w0, #0x30
  437ccc:	cmp	w2, w1
  437cd0:	b.hi	437dfc <nftw@plt+0x3510c>  // b.pmore
  437cd4:	ldr	x2, [x19, #24]
  437cd8:	ldrb	w0, [x2]
  437cdc:	cbz	w0, 437cb0 <nftw@plt+0x34fc0>
  437ce0:	add	x0, x2, #0x1
  437ce4:	str	x0, [x19, #24]
  437ce8:	ldrb	w0, [x2]
  437cec:	cmp	w0, #0x5f
  437cf0:	b.ne	437cb0 <nftw@plt+0x34fc0>  // b.any
  437cf4:	add	w0, w1, #0x1
  437cf8:	b	437c8c <nftw@plt+0x34f9c>
  437cfc:	mov	w2, #0x0                   	// #0
  437d00:	mov	w3, #0x24                  	// #36
  437d04:	b	437cb4 <nftw@plt+0x34fc4>
  437d08:	sub	w1, w0, #0x41
  437d0c:	and	w1, w1, #0xff
  437d10:	cmp	w1, #0x19
  437d14:	b.hi	437dfc <nftw@plt+0x3510c>  // b.pmore
  437d18:	madd	w0, w2, w3, w0
  437d1c:	sub	w1, w0, #0x37
  437d20:	b	437ccc <nftw@plt+0x34fdc>
  437d24:	ldr	w5, [x19, #16]
  437d28:	and	w1, w1, #0x1
  437d2c:	ands	w2, w5, #0x8
  437d30:	csel	w1, w1, wzr, eq  // eq = none
  437d34:	ubfx	x5, x5, #3, #1
  437d38:	cbz	w1, 437d54 <nftw@plt+0x35064>
  437d3c:	ldr	x1, [x19, #24]
  437d40:	ldrb	w1, [x1]
  437d44:	sub	w1, w1, #0x43
  437d48:	and	w1, w1, #0xff
  437d4c:	cmp	w1, #0x1
  437d50:	csinc	w5, w5, wzr, hi  // hi = pmore
  437d54:	adrp	x4, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  437d58:	add	x4, x4, #0x8c8
  437d5c:	add	x4, x4, #0x440
  437d60:	mov	x1, #0x7                   	// #7
  437d64:	ldrb	w2, [x4]
  437d68:	cmp	w2, w0
  437d6c:	b.ne	437e10 <nftw@plt+0x35120>  // b.any
  437d70:	ldr	x6, [x4, #40]
  437d74:	cbz	x6, 437d9c <nftw@plt+0x350ac>
  437d78:	ldr	w7, [x4, #48]
  437d7c:	mov	x0, x19
  437d80:	bl	435104 <nftw@plt+0x32414>
  437d84:	cbz	x0, 437d98 <nftw@plt+0x350a8>
  437d88:	mov	w1, #0x18                  	// #24
  437d8c:	str	w1, [x0]
  437d90:	str	x6, [x0, #8]
  437d94:	str	w7, [x0, #16]
  437d98:	str	x0, [x19, #64]
  437d9c:	cbz	w5, 437e04 <nftw@plt+0x35114>
  437da0:	ldr	x5, [x4, #24]
  437da4:	ldr	w4, [x4, #32]
  437da8:	ldr	w0, [x19, #72]
  437dac:	add	w0, w0, w4
  437db0:	str	w0, [x19, #72]
  437db4:	mov	x0, x19
  437db8:	bl	435104 <nftw@plt+0x32414>
  437dbc:	mov	x1, x0
  437dc0:	cbz	x0, 437dd4 <nftw@plt+0x350e4>
  437dc4:	mov	w0, #0x18                  	// #24
  437dc8:	str	w0, [x1]
  437dcc:	str	x5, [x1, #8]
  437dd0:	str	w4, [x1, #16]
  437dd4:	ldr	x0, [x19, #24]
  437dd8:	ldrb	w0, [x0]
  437ddc:	cmp	w0, #0x42
  437de0:	b.ne	437ca0 <nftw@plt+0x34fb0>  // b.any
  437de4:	mov	x0, x19
  437de8:	bl	437bb4 <nftw@plt+0x34ec4>
  437dec:	mov	x1, x0
  437df0:	mov	x0, x19
  437df4:	bl	435228 <nftw@plt+0x32538>
  437df8:	cbnz	w0, 437ca0 <nftw@plt+0x34fb0>
  437dfc:	mov	x1, #0x0                   	// #0
  437e00:	b	437ca0 <nftw@plt+0x34fb0>
  437e04:	ldr	x5, [x4, #8]
  437e08:	ldr	w4, [x4, #16]
  437e0c:	b	437da8 <nftw@plt+0x350b8>
  437e10:	add	x4, x4, #0x38
  437e14:	subs	x1, x1, #0x1
  437e18:	b.ne	437d64 <nftw@plt+0x35074>  // b.any
  437e1c:	b	437dfc <nftw@plt+0x3510c>
  437e20:	cmp	x0, #0x0
  437e24:	ccmp	w1, #0x0, #0x1, ne  // ne = any
  437e28:	b.lt	437e48 <nftw@plt+0x35158>  // b.tstop
  437e2c:	cbz	x2, 437e48 <nftw@plt+0x35158>
  437e30:	mov	x3, #0x33                  	// #51
  437e34:	str	x3, [x0]
  437e38:	str	w1, [x0, #8]
  437e3c:	str	x2, [x0, #16]
  437e40:	mov	w0, #0x1                   	// #1
  437e44:	ret
  437e48:	mov	w0, #0x0                   	// #0
  437e4c:	b	437e44 <nftw@plt+0x35154>
  437e50:	cmp	x0, #0x0
  437e54:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  437e58:	b.eq	437e80 <nftw@plt+0x35190>  // b.none
  437e5c:	sub	w3, w1, #0x1
  437e60:	cmp	w3, #0x4
  437e64:	b.hi	437e80 <nftw@plt+0x35190>  // b.pmore
  437e68:	mov	x3, #0x7                   	// #7
  437e6c:	str	x3, [x0]
  437e70:	str	w1, [x0, #8]
  437e74:	str	x2, [x0, #16]
  437e78:	mov	w0, #0x1                   	// #1
  437e7c:	ret
  437e80:	mov	w0, #0x0                   	// #0
  437e84:	b	437e7c <nftw@plt+0x3518c>
  437e88:	cmp	x0, #0x0
  437e8c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  437e90:	b.eq	437eb8 <nftw@plt+0x351c8>  // b.none
  437e94:	sub	w3, w1, #0x1
  437e98:	cmp	w3, #0x4
  437e9c:	b.hi	437eb8 <nftw@plt+0x351c8>  // b.pmore
  437ea0:	mov	x3, #0x8                   	// #8
  437ea4:	str	x3, [x0]
  437ea8:	str	w1, [x0, #8]
  437eac:	str	x2, [x0, #16]
  437eb0:	mov	w0, #0x1                   	// #1
  437eb4:	ret
  437eb8:	mov	w0, #0x0                   	// #0
  437ebc:	b	437eb4 <nftw@plt+0x351c4>
  437ec0:	stp	x29, x30, [sp, #-80]!
  437ec4:	mov	x29, sp
  437ec8:	ldr	x3, [x0, #24]
  437ecc:	stp	x19, x20, [sp, #16]
  437ed0:	mov	x19, x0
  437ed4:	mov	x0, x3
  437ed8:	stp	x21, x22, [sp, #32]
  437edc:	str	x23, [sp, #48]
  437ee0:	bl	4356c4 <nftw@plt+0x329d4>
  437ee4:	cbz	w0, 437f80 <nftw@plt+0x35290>
  437ee8:	add	x1, sp, #0x48
  437eec:	mov	x0, x19
  437ef0:	mov	w2, #0x0                   	// #0
  437ef4:	bl	43a124 <nftw@plt+0x37434>
  437ef8:	mov	x20, x0
  437efc:	cbnz	x0, 437f18 <nftw@plt+0x35228>
  437f00:	mov	x0, #0x0                   	// #0
  437f04:	ldp	x19, x20, [sp, #16]
  437f08:	ldp	x21, x22, [sp, #32]
  437f0c:	ldr	x23, [sp, #48]
  437f10:	ldp	x29, x30, [sp], #80
  437f14:	ret
  437f18:	ldr	x0, [x19, #24]
  437f1c:	ldrb	w0, [x0]
  437f20:	cmp	w0, #0x46
  437f24:	mov	x0, x19
  437f28:	b.ne	437f78 <nftw@plt+0x35288>  // b.any
  437f2c:	bl	438bc8 <nftw@plt+0x35ed8>
  437f30:	str	x0, [x20]
  437f34:	ldr	x0, [x20]
  437f38:	cbz	x0, 437f00 <nftw@plt+0x35210>
  437f3c:	ldr	w1, [x0]
  437f40:	sub	w1, w1, #0x1f
  437f44:	cmp	w1, #0x1
  437f48:	b.hi	437f64 <nftw@plt+0x35274>  // b.pmore
  437f4c:	ldr	x2, [sp, #72]
  437f50:	ldr	x1, [x0, #8]
  437f54:	str	x2, [x0, #8]
  437f58:	ldr	x0, [x20]
  437f5c:	str	x0, [sp, #72]
  437f60:	str	x1, [x20]
  437f64:	ldr	x1, [sp, #72]
  437f68:	mov	x0, x19
  437f6c:	bl	435228 <nftw@plt+0x32538>
  437f70:	cbnz	w0, 437fe8 <nftw@plt+0x352f8>
  437f74:	b	437f00 <nftw@plt+0x35210>
  437f78:	bl	437ec0 <nftw@plt+0x351d0>
  437f7c:	b	437f30 <nftw@plt+0x35240>
  437f80:	ldrb	w1, [x3]
  437f84:	sub	w2, w1, #0x30
  437f88:	cmp	w2, #0x4a
  437f8c:	b.hi	437f00 <nftw@plt+0x35210>  // b.pmore
  437f90:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  437f94:	add	x0, x0, #0x7b4
  437f98:	ldrh	w0, [x0, w2, uxtw #1]
  437f9c:	adr	x2, 437fa8 <nftw@plt+0x352b8>
  437fa0:	add	x0, x2, w0, sxth #2
  437fa4:	br	x0
  437fa8:	sub	w1, w1, #0x61
  437fac:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  437fb0:	add	x0, x0, #0x8c8
  437fb4:	sbfiz	x1, x1, #5, #32
  437fb8:	add	x1, x0, x1
  437fbc:	mov	x0, x19
  437fc0:	bl	4351a8 <nftw@plt+0x324b8>
  437fc4:	str	x0, [sp, #72]
  437fc8:	ldr	x1, [x0, #8]
  437fcc:	ldr	w0, [x19, #72]
  437fd0:	ldr	w1, [x1, #8]
  437fd4:	add	w0, w0, w1
  437fd8:	str	w0, [x19, #72]
  437fdc:	ldr	x0, [x19, #24]
  437fe0:	add	x0, x0, #0x1
  437fe4:	str	x0, [x19, #24]
  437fe8:	ldr	x0, [sp, #72]
  437fec:	b	437f04 <nftw@plt+0x35214>
  437ff0:	add	x3, x3, #0x1
  437ff4:	str	x3, [x19, #24]
  437ff8:	mov	x0, x19
  437ffc:	bl	437aac <nftw@plt+0x34dbc>
  438000:	mov	x2, x0
  438004:	mov	x3, #0x0                   	// #0
  438008:	mov	w1, #0x28                  	// #40
  43800c:	mov	x0, x19
  438010:	bl	435138 <nftw@plt+0x32448>
  438014:	b	438020 <nftw@plt+0x35330>
  438018:	mov	x0, x19
  43801c:	bl	438bc8 <nftw@plt+0x35ed8>
  438020:	str	x0, [sp, #72]
  438024:	b	437f64 <nftw@plt+0x35274>
  438028:	mov	x0, x19
  43802c:	bl	438c80 <nftw@plt+0x35f90>
  438030:	b	438020 <nftw@plt+0x35330>
  438034:	add	x1, x3, #0x1
  438038:	str	x1, [x19, #24]
  43803c:	ldrb	w0, [x3, #1]
  438040:	cmp	w0, #0x5f
  438044:	b.eq	4380a0 <nftw@plt+0x353b0>  // b.none
  438048:	sub	w0, w0, #0x30
  43804c:	and	w0, w0, #0xff
  438050:	cmp	w0, #0x9
  438054:	b.hi	438094 <nftw@plt+0x353a4>  // b.pmore
  438058:	ldr	x0, [x19, #24]
  43805c:	add	x2, x0, #0x1
  438060:	str	x2, [x19, #24]
  438064:	ldrb	w0, [x0, #1]
  438068:	sub	w0, w0, #0x30
  43806c:	and	w0, w0, #0xff
  438070:	cmp	w0, #0x9
  438074:	b.ls	438058 <nftw@plt+0x35368>  // b.plast
  438078:	sub	w2, w2, w1
  43807c:	mov	x0, x19
  438080:	bl	437a78 <nftw@plt+0x34d88>
  438084:	mov	x20, x0
  438088:	cbnz	x0, 4380a4 <nftw@plt+0x353b4>
  43808c:	mov	x0, #0x0                   	// #0
  438090:	b	438020 <nftw@plt+0x35330>
  438094:	mov	x0, x19
  438098:	bl	439ec8 <nftw@plt+0x371d8>
  43809c:	b	438084 <nftw@plt+0x35394>
  4380a0:	mov	x20, #0x0                   	// #0
  4380a4:	ldr	x0, [x19, #24]
  4380a8:	ldrb	w1, [x0]
  4380ac:	cmp	w1, #0x5f
  4380b0:	b.ne	43808c <nftw@plt+0x3539c>  // b.any
  4380b4:	add	x0, x0, #0x1
  4380b8:	str	x0, [x19, #24]
  4380bc:	mov	x0, x19
  4380c0:	bl	437ec0 <nftw@plt+0x351d0>
  4380c4:	mov	x3, x0
  4380c8:	mov	x2, x20
  4380cc:	mov	w1, #0x2a                  	// #42
  4380d0:	b	43800c <nftw@plt+0x3531c>
  4380d4:	add	x3, x3, #0x1
  4380d8:	str	x3, [x19, #24]
  4380dc:	mov	x0, x19
  4380e0:	bl	437ec0 <nftw@plt+0x351d0>
  4380e4:	mov	x20, x0
  4380e8:	cbz	x0, 43808c <nftw@plt+0x3539c>
  4380ec:	mov	x0, x19
  4380f0:	bl	437ec0 <nftw@plt+0x351d0>
  4380f4:	mov	x3, x0
  4380f8:	cbz	x0, 43808c <nftw@plt+0x3539c>
  4380fc:	mov	x2, x20
  438100:	mov	w1, #0x2b                  	// #43
  438104:	b	43800c <nftw@plt+0x3531c>
  438108:	mov	x0, x19
  43810c:	bl	4355c4 <nftw@plt+0x328d4>
  438110:	ldr	x20, [x19, #24]
  438114:	str	x0, [sp, #72]
  438118:	mov	x1, x0
  43811c:	ldrb	w0, [x20]
  438120:	cmp	w0, #0x49
  438124:	b.ne	437f64 <nftw@plt+0x35274>  // b.any
  438128:	ldr	w0, [x19, #80]
  43812c:	cbnz	w0, 438154 <nftw@plt+0x35464>
  438130:	mov	x0, x19
  438134:	bl	435228 <nftw@plt+0x32538>
  438138:	cbz	w0, 437f00 <nftw@plt+0x35210>
  43813c:	ldr	x20, [sp, #72]
  438140:	mov	x0, x19
  438144:	bl	43a044 <nftw@plt+0x37354>
  438148:	mov	x3, x0
  43814c:	mov	x2, x20
  438150:	b	438194 <nftw@plt+0x354a4>
  438154:	ldr	w23, [x19, #40]
  438158:	mov	x0, x19
  43815c:	ldr	w22, [x19, #56]
  438160:	ldr	w21, [x19, #72]
  438164:	bl	43a044 <nftw@plt+0x37354>
  438168:	mov	x4, x0
  43816c:	ldr	x0, [x19, #24]
  438170:	ldrb	w0, [x0]
  438174:	cmp	w0, #0x49
  438178:	b.ne	43819c <nftw@plt+0x354ac>  // b.any
  43817c:	ldr	x1, [sp, #72]
  438180:	mov	x0, x19
  438184:	bl	435228 <nftw@plt+0x32538>
  438188:	cbz	w0, 437f00 <nftw@plt+0x35210>
  43818c:	ldr	x2, [sp, #72]
  438190:	mov	x3, x4
  438194:	mov	w1, #0x4                   	// #4
  438198:	b	43800c <nftw@plt+0x3531c>
  43819c:	str	x20, [x19, #24]
  4381a0:	str	w23, [x19, #40]
  4381a4:	str	w22, [x19, #56]
  4381a8:	str	w21, [x19, #72]
  4381ac:	b	437f64 <nftw@plt+0x35274>
  4381b0:	ldrb	w0, [x3, #1]
  4381b4:	sub	w0, w0, #0x30
  4381b8:	and	w0, w0, #0xff
  4381bc:	cmp	w0, #0x2f
  4381c0:	b.hi	4381d4 <nftw@plt+0x354e4>  // b.pmore
  4381c4:	mov	w1, #0xfffe03ff            	// #-130049
  4381c8:	movk	x1, #0x87ff, lsl #32
  4381cc:	lsr	x0, x1, x0
  4381d0:	tbnz	w0, #0, 4381f4 <nftw@plt+0x35504>
  4381d4:	mov	x0, x19
  4381d8:	bl	438c80 <nftw@plt+0x35f90>
  4381dc:	str	x0, [sp, #72]
  4381e0:	cbz	x0, 437f64 <nftw@plt+0x35274>
  4381e4:	ldr	w0, [x0]
  4381e8:	cmp	w0, #0x18
  4381ec:	b.ne	437f64 <nftw@plt+0x35274>  // b.any
  4381f0:	b	437fe8 <nftw@plt+0x352f8>
  4381f4:	mov	x0, x19
  4381f8:	mov	w1, #0x0                   	// #0
  4381fc:	bl	437c24 <nftw@plt+0x34f34>
  438200:	mov	x20, x0
  438204:	ldr	x0, [x19, #24]
  438208:	str	x20, [sp, #72]
  43820c:	ldrb	w0, [x0]
  438210:	cmp	w0, #0x49
  438214:	b.ne	437fe8 <nftw@plt+0x352f8>  // b.any
  438218:	b	438140 <nftw@plt+0x35450>
  43821c:	add	x3, x3, #0x1
  438220:	str	x3, [x19, #24]
  438224:	mov	x0, x19
  438228:	bl	437ec0 <nftw@plt+0x351d0>
  43822c:	mov	x2, x0
  438230:	mov	x3, #0x0                   	// #0
  438234:	mov	w1, #0x24                  	// #36
  438238:	b	43800c <nftw@plt+0x3531c>
  43823c:	add	x3, x3, #0x1
  438240:	str	x3, [x19, #24]
  438244:	mov	x0, x19
  438248:	bl	437ec0 <nftw@plt+0x351d0>
  43824c:	mov	x2, x0
  438250:	mov	x3, #0x0                   	// #0
  438254:	mov	w1, #0x22                  	// #34
  438258:	b	43800c <nftw@plt+0x3531c>
  43825c:	add	x3, x3, #0x1
  438260:	str	x3, [x19, #24]
  438264:	mov	x0, x19
  438268:	bl	437ec0 <nftw@plt+0x351d0>
  43826c:	mov	x2, x0
  438270:	mov	x3, #0x0                   	// #0
  438274:	mov	w1, #0x23                  	// #35
  438278:	b	43800c <nftw@plt+0x3531c>
  43827c:	add	x3, x3, #0x1
  438280:	str	x3, [x19, #24]
  438284:	mov	x0, x19
  438288:	bl	437ec0 <nftw@plt+0x351d0>
  43828c:	mov	x2, x0
  438290:	mov	x3, #0x0                   	// #0
  438294:	mov	w1, #0x25                  	// #37
  438298:	b	43800c <nftw@plt+0x3531c>
  43829c:	add	x3, x3, #0x1
  4382a0:	str	x3, [x19, #24]
  4382a4:	mov	x0, x19
  4382a8:	bl	437ec0 <nftw@plt+0x351d0>
  4382ac:	mov	x2, x0
  4382b0:	mov	x3, #0x0                   	// #0
  4382b4:	mov	w1, #0x26                  	// #38
  4382b8:	b	43800c <nftw@plt+0x3531c>
  4382bc:	add	x3, x3, #0x1
  4382c0:	str	x3, [x19, #24]
  4382c4:	mov	x0, x19
  4382c8:	bl	437aac <nftw@plt+0x34dbc>
  4382cc:	mov	x20, x0
  4382d0:	ldr	x0, [x19, #24]
  4382d4:	str	x20, [sp, #72]
  4382d8:	ldrb	w0, [x0]
  4382dc:	cmp	w0, #0x49
  4382e0:	b.ne	438304 <nftw@plt+0x35614>  // b.any
  4382e4:	mov	x0, x19
  4382e8:	bl	43a044 <nftw@plt+0x37354>
  4382ec:	mov	x2, x20
  4382f0:	mov	x3, x0
  4382f4:	mov	w1, #0x4                   	// #4
  4382f8:	mov	x0, x19
  4382fc:	bl	435138 <nftw@plt+0x32448>
  438300:	str	x0, [sp, #72]
  438304:	mov	x0, x19
  438308:	bl	437ec0 <nftw@plt+0x351d0>
  43830c:	mov	w1, #0x21                  	// #33
  438310:	mov	x2, x0
  438314:	ldr	x3, [sp, #72]
  438318:	b	43800c <nftw@plt+0x3531c>
  43831c:	add	x0, x3, #0x1
  438320:	str	x0, [x19, #24]
  438324:	ldrb	w0, [x3, #1]
  438328:	cbz	w0, 437f00 <nftw@plt+0x35210>
  43832c:	add	x0, x3, #0x2
  438330:	str	x0, [x19, #24]
  438334:	ldrb	w0, [x3, #1]
  438338:	cmp	w0, #0x46
  43833c:	b.eq	438494 <nftw@plt+0x357a4>  // b.none
  438340:	sub	w0, w0, #0x54
  438344:	and	w1, w0, #0xff
  438348:	cmp	w1, #0x22
  43834c:	b.hi	437f00 <nftw@plt+0x35210>  // b.pmore
  438350:	cmp	w0, #0x22
  438354:	b.hi	437f00 <nftw@plt+0x35210>  // b.pmore
  438358:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  43835c:	add	x1, x1, #0x84c
  438360:	ldrh	w0, [x1, w0, uxtw #1]
  438364:	adr	x1, 438370 <nftw@plt+0x35680>
  438368:	add	x0, x1, w0, sxth #2
  43836c:	br	x0
  438370:	mov	x0, x19
  438374:	bl	439ec8 <nftw@plt+0x371d8>
  438378:	mov	x3, #0x0                   	// #0
  43837c:	mov	x2, x0
  438380:	mov	w1, #0x43                  	// #67
  438384:	mov	x0, x19
  438388:	bl	435138 <nftw@plt+0x32448>
  43838c:	str	x0, [sp, #72]
  438390:	cbz	x0, 437f64 <nftw@plt+0x35274>
  438394:	ldr	x0, [x19, #24]
  438398:	ldrb	w1, [x0]
  43839c:	cbnz	w1, 4383a8 <nftw@plt+0x356b8>
  4383a0:	str	xzr, [sp, #72]
  4383a4:	b	437f64 <nftw@plt+0x35274>
  4383a8:	add	x1, x0, #0x1
  4383ac:	str	x1, [x19, #24]
  4383b0:	ldrb	w0, [x0]
  4383b4:	cmp	w0, #0x45
  4383b8:	b.ne	4383a0 <nftw@plt+0x356b0>  // b.any
  4383bc:	b	437f64 <nftw@plt+0x35274>
  4383c0:	mov	x0, x19
  4383c4:	bl	437ec0 <nftw@plt+0x351d0>
  4383c8:	mov	x3, #0x0                   	// #0
  4383cc:	mov	x2, x0
  4383d0:	mov	w1, #0x4b                  	// #75
  4383d4:	b	43800c <nftw@plt+0x3531c>
  4383d8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4383dc:	add	x1, x1, #0x7a5
  4383e0:	mov	w2, #0x4                   	// #4
  4383e4:	mov	x0, x19
  4383e8:	bl	437a78 <nftw@plt+0x34d88>
  4383ec:	str	x0, [sp, #72]
  4383f0:	b	437fe8 <nftw@plt+0x352f8>
  4383f4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4383f8:	mov	w2, #0xe                   	// #14
  4383fc:	add	x1, x1, #0x7aa
  438400:	b	4383e4 <nftw@plt+0x356f4>
  438404:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438408:	add	x1, x1, #0x8c8
  43840c:	add	x1, x1, #0x340
  438410:	mov	x0, x19
  438414:	bl	4351a8 <nftw@plt+0x324b8>
  438418:	str	x0, [sp, #72]
  43841c:	ldr	x1, [x0, #8]
  438420:	ldr	w0, [x19, #72]
  438424:	ldr	w1, [x1, #8]
  438428:	add	w0, w0, w1
  43842c:	str	w0, [x19, #72]
  438430:	b	437fe8 <nftw@plt+0x352f8>
  438434:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438438:	add	x1, x1, #0x8c8
  43843c:	add	x1, x1, #0x360
  438440:	b	438410 <nftw@plt+0x35720>
  438444:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438448:	add	x1, x1, #0x8c8
  43844c:	add	x1, x1, #0x380
  438450:	b	438410 <nftw@plt+0x35720>
  438454:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438458:	add	x1, x1, #0x8c8
  43845c:	add	x1, x1, #0x3a0
  438460:	b	438410 <nftw@plt+0x35720>
  438464:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438468:	add	x1, x1, #0x8c8
  43846c:	add	x1, x1, #0x3c0
  438470:	b	438410 <nftw@plt+0x35720>
  438474:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438478:	add	x1, x1, #0x8c8
  43847c:	add	x1, x1, #0x3e0
  438480:	b	438410 <nftw@plt+0x35720>
  438484:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438488:	add	x1, x1, #0x8c8
  43848c:	add	x1, x1, #0x400
  438490:	b	438410 <nftw@plt+0x35720>
  438494:	mov	x0, x19
  438498:	bl	435104 <nftw@plt+0x32414>
  43849c:	mov	w1, #0x2c                  	// #44
  4384a0:	str	x0, [sp, #72]
  4384a4:	str	w1, [x0]
  4384a8:	ldr	x1, [x19, #24]
  4384ac:	ldrb	w1, [x1]
  4384b0:	sub	w1, w1, #0x30
  4384b4:	and	w1, w1, #0xff
  4384b8:	cmp	w1, #0x9
  4384bc:	cset	w2, ls  // ls = plast
  4384c0:	strh	w2, [x0, #16]
  4384c4:	b.hi	4384d0 <nftw@plt+0x357e0>  // b.pmore
  4384c8:	add	x0, x19, #0x18
  4384cc:	bl	43547c <nftw@plt+0x3278c>
  4384d0:	ldr	x20, [sp, #72]
  4384d4:	mov	x0, x19
  4384d8:	bl	437ec0 <nftw@plt+0x351d0>
  4384dc:	str	x0, [x20, #8]
  4384e0:	ldr	x0, [sp, #72]
  4384e4:	ldr	x0, [x0, #8]
  4384e8:	cbz	x0, 437f00 <nftw@plt+0x35210>
  4384ec:	add	x0, x19, #0x18
  4384f0:	bl	43547c <nftw@plt+0x3278c>
  4384f4:	ldr	x1, [x19, #24]
  4384f8:	ldrb	w0, [x1]
  4384fc:	cbz	w0, 43850c <nftw@plt+0x3581c>
  438500:	add	x0, x1, #0x1
  438504:	str	x0, [x19, #24]
  438508:	ldrb	w0, [x1]
  43850c:	cmp	w0, #0x73
  438510:	ldr	x0, [sp, #72]
  438514:	cset	w1, eq  // eq = none
  438518:	strh	w1, [x0, #18]
  43851c:	b	437fe8 <nftw@plt+0x352f8>
  438520:	ldrb	w0, [x3, #2]
  438524:	cmp	w0, #0x5f
  438528:	b.ne	438584 <nftw@plt+0x35894>  // b.any
  43852c:	add	x3, x3, #0x3
  438530:	str	x3, [x19, #24]
  438534:	mov	x0, x19
  438538:	bl	439ec8 <nftw@plt+0x371d8>
  43853c:	mov	x20, x0
  438540:	cbz	x0, 43857c <nftw@plt+0x3588c>
  438544:	ldr	x0, [x19, #24]
  438548:	ldrb	w1, [x0]
  43854c:	cmp	w1, #0x5f
  438550:	b.ne	438590 <nftw@plt+0x358a0>  // b.any
  438554:	add	x0, x0, #0x1
  438558:	str	x0, [x19, #24]
  43855c:	mov	x0, x19
  438560:	bl	437ec0 <nftw@plt+0x351d0>
  438564:	mov	x3, x0
  438568:	mov	x2, x20
  43856c:	mov	x0, x19
  438570:	mov	w1, #0x2d                  	// #45
  438574:	bl	435138 <nftw@plt+0x32448>
  438578:	mov	x20, x0
  43857c:	str	x20, [sp, #72]
  438580:	b	437f64 <nftw@plt+0x35274>
  438584:	mov	x0, x19
  438588:	bl	435504 <nftw@plt+0x32814>
  43858c:	b	43853c <nftw@plt+0x3584c>
  438590:	mov	x20, #0x0                   	// #0
  438594:	b	43857c <nftw@plt+0x3588c>
  438598:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  43859c:	add	x1, x1, #0x8c8
  4385a0:	add	x1, x1, #0x420
  4385a4:	b	438410 <nftw@plt+0x35720>
  4385a8:	stp	x29, x30, [sp, #-64]!
  4385ac:	mov	x29, sp
  4385b0:	stp	x19, x20, [sp, #16]
  4385b4:	mov	x19, x0
  4385b8:	add	x20, sp, #0x38
  4385bc:	str	x21, [sp, #32]
  4385c0:	mov	w21, #0x4f                  	// #79
  4385c4:	str	xzr, [sp, #56]
  4385c8:	ldr	x1, [x19, #24]
  4385cc:	ldrb	w0, [x1]
  4385d0:	cmp	w0, #0x45
  4385d4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4385d8:	b.eq	438640 <nftw@plt+0x35950>  // b.none
  4385dc:	cmp	w0, #0x2e
  4385e0:	b.eq	438640 <nftw@plt+0x35950>  // b.none
  4385e4:	cmp	w0, #0x52
  4385e8:	ccmp	w0, w21, #0x4, ne  // ne = any
  4385ec:	b.ne	4385fc <nftw@plt+0x3590c>  // b.any
  4385f0:	ldrb	w0, [x1, #1]
  4385f4:	cmp	w0, #0x45
  4385f8:	b.eq	438640 <nftw@plt+0x35950>  // b.none
  4385fc:	mov	x0, x19
  438600:	bl	437ec0 <nftw@plt+0x351d0>
  438604:	mov	x2, x0
  438608:	cbnz	x0, 438620 <nftw@plt+0x35930>
  43860c:	mov	x0, #0x0                   	// #0
  438610:	ldp	x19, x20, [sp, #16]
  438614:	ldr	x21, [sp, #32]
  438618:	ldp	x29, x30, [sp], #64
  43861c:	ret
  438620:	mov	x0, x19
  438624:	mov	x3, #0x0                   	// #0
  438628:	mov	w1, #0x2e                  	// #46
  43862c:	bl	435138 <nftw@plt+0x32448>
  438630:	str	x0, [x20]
  438634:	cbz	x0, 43860c <nftw@plt+0x3591c>
  438638:	add	x20, x0, #0x10
  43863c:	b	4385c8 <nftw@plt+0x358d8>
  438640:	ldr	x0, [sp, #56]
  438644:	cbz	x0, 43860c <nftw@plt+0x3591c>
  438648:	ldr	x1, [x0, #16]
  43864c:	cbnz	x1, 438610 <nftw@plt+0x35920>
  438650:	ldr	x1, [x0, #8]
  438654:	ldr	w2, [x1]
  438658:	cmp	w2, #0x27
  43865c:	b.ne	438610 <nftw@plt+0x35920>  // b.any
  438660:	ldr	x2, [x1, #8]
  438664:	ldr	w1, [x2, #28]
  438668:	cmp	w1, #0x9
  43866c:	b.ne	438610 <nftw@plt+0x35920>  // b.any
  438670:	ldr	w2, [x2, #8]
  438674:	ldr	w1, [x19, #72]
  438678:	sub	w1, w1, w2
  43867c:	str	w1, [x19, #72]
  438680:	str	xzr, [x0, #8]
  438684:	b	438610 <nftw@plt+0x35920>
  438688:	stp	x29, x30, [sp, #-32]!
  43868c:	mov	x29, sp
  438690:	stp	x19, x20, [sp, #16]
  438694:	mov	x19, x0
  438698:	ldr	x0, [x0, #24]
  43869c:	ldrb	w2, [x0]
  4386a0:	cbz	w2, 4386b0 <nftw@plt+0x359c0>
  4386a4:	add	x1, x0, #0x1
  4386a8:	str	x1, [x19, #24]
  4386ac:	ldrb	w2, [x0]
  4386b0:	ldr	x0, [x19, #24]
  4386b4:	ldrb	w3, [x0]
  4386b8:	cbz	w3, 438774 <nftw@plt+0x35a84>
  4386bc:	add	x1, x0, #0x1
  4386c0:	str	x1, [x19, #24]
  4386c4:	cmp	w2, #0x76
  4386c8:	ldrb	w3, [x0]
  4386cc:	b.ne	43871c <nftw@plt+0x35a2c>  // b.any
  4386d0:	sub	w20, w3, #0x30
  4386d4:	and	w0, w20, #0xff
  4386d8:	cmp	w0, #0x9
  4386dc:	b.hi	438774 <nftw@plt+0x35a84>  // b.pmore
  4386e0:	mov	x0, x19
  4386e4:	bl	437aac <nftw@plt+0x34dbc>
  4386e8:	mov	x5, x0
  4386ec:	mov	x0, x19
  4386f0:	bl	435104 <nftw@plt+0x32414>
  4386f4:	mov	x4, x0
  4386f8:	mov	x2, x5
  4386fc:	mov	w1, w20
  438700:	bl	437e20 <nftw@plt+0x35130>
  438704:	cbnz	w0, 43870c <nftw@plt+0x35a1c>
  438708:	mov	x4, #0x0                   	// #0
  43870c:	mov	x0, x4
  438710:	ldp	x19, x20, [sp, #16]
  438714:	ldp	x29, x30, [sp], #32
  438718:	ret
  43871c:	cmp	w2, #0x63
  438720:	mov	w0, #0x76                  	// #118
  438724:	ccmp	w3, w0, #0x0, eq  // eq = none
  438728:	b.ne	438774 <nftw@plt+0x35a84>  // b.any
  43872c:	ldp	w0, w20, [x19, #76]
  438730:	cmp	w0, #0x0
  438734:	cset	w0, eq  // eq = none
  438738:	str	w0, [x19, #80]
  43873c:	mov	x0, x19
  438740:	bl	437ec0 <nftw@plt+0x351d0>
  438744:	mov	x2, x0
  438748:	ldr	w0, [x19, #80]
  43874c:	mov	x3, #0x0                   	// #0
  438750:	cbz	w0, 43876c <nftw@plt+0x35a7c>
  438754:	mov	w1, #0x35                  	// #53
  438758:	mov	x0, x19
  43875c:	bl	435138 <nftw@plt+0x32448>
  438760:	mov	x4, x0
  438764:	str	w20, [x19, #80]
  438768:	b	43870c <nftw@plt+0x35a1c>
  43876c:	mov	w1, #0x34                  	// #52
  438770:	b	438758 <nftw@plt+0x35a68>
  438774:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  438778:	add	x1, x1, #0x8c8
  43877c:	add	x1, x1, #0x5c8
  438780:	mov	w5, #0x43                  	// #67
  438784:	mov	w4, #0x0                   	// #0
  438788:	mov	w7, #0x2                   	// #2
  43878c:	mov	w8, #0x18                  	// #24
  438790:	sub	w0, w5, w4
  438794:	sdiv	w0, w0, w7
  438798:	add	w0, w0, w4
  43879c:	smull	x6, w0, w8
  4387a0:	add	x9, x1, x6
  4387a4:	ldr	x6, [x1, x6]
  4387a8:	ldrb	w10, [x6]
  4387ac:	cmp	w10, w2
  4387b0:	b.ne	4387e0 <nftw@plt+0x35af0>  // b.any
  4387b4:	ldrb	w6, [x6, #1]
  4387b8:	cmp	w6, w3
  4387bc:	b.ne	4387e0 <nftw@plt+0x35af0>  // b.any
  4387c0:	mov	x0, x19
  4387c4:	bl	435104 <nftw@plt+0x32414>
  4387c8:	mov	x4, x0
  4387cc:	cbz	x0, 43870c <nftw@plt+0x35a1c>
  4387d0:	mov	w0, #0x32                  	// #50
  4387d4:	str	w0, [x4]
  4387d8:	str	x9, [x4, #8]
  4387dc:	b	43870c <nftw@plt+0x35a1c>
  4387e0:	b.hi	4387ec <nftw@plt+0x35afc>  // b.pmore
  4387e4:	add	w4, w0, #0x1
  4387e8:	mov	w0, w5
  4387ec:	cmp	w4, w0
  4387f0:	b.eq	438708 <nftw@plt+0x35a18>  // b.none
  4387f4:	mov	w5, w0
  4387f8:	b	438790 <nftw@plt+0x35aa0>
  4387fc:	stp	x29, x30, [sp, #-48]!
  438800:	mov	x29, sp
  438804:	ldr	x3, [x0, #24]
  438808:	stp	x19, x20, [sp, #16]
  43880c:	mov	x20, x0
  438810:	str	x21, [sp, #32]
  438814:	ldrb	w1, [x3]
  438818:	sub	w2, w1, #0x30
  43881c:	and	w2, w2, #0xff
  438820:	cmp	w2, #0x9
  438824:	b.hi	438858 <nftw@plt+0x35b68>  // b.pmore
  438828:	bl	437aac <nftw@plt+0x34dbc>
  43882c:	mov	x19, x0
  438830:	ldr	x0, [x20, #24]
  438834:	ldrb	w0, [x0]
  438838:	cmp	w0, #0x42
  43883c:	b.ne	438a48 <nftw@plt+0x35d58>  // b.any
  438840:	mov	x1, x19
  438844:	mov	x0, x20
  438848:	ldp	x19, x20, [sp, #16]
  43884c:	ldr	x21, [sp, #32]
  438850:	ldp	x29, x30, [sp], #48
  438854:	b	437bb4 <nftw@plt+0x34ec4>
  438858:	sub	w2, w1, #0x61
  43885c:	and	w2, w2, #0xff
  438860:	cmp	w2, #0x19
  438864:	b.hi	4388ec <nftw@plt+0x35bfc>  // b.pmore
  438868:	cmp	w1, #0x6f
  43886c:	b.ne	438884 <nftw@plt+0x35b94>  // b.any
  438870:	ldrb	w0, [x3, #1]
  438874:	cmp	w0, #0x6e
  438878:	b.ne	438884 <nftw@plt+0x35b94>  // b.any
  43887c:	add	x3, x3, #0x2
  438880:	str	x3, [x20, #24]
  438884:	mov	x0, x20
  438888:	bl	438688 <nftw@plt+0x35998>
  43888c:	mov	x19, x0
  438890:	cbz	x0, 43893c <nftw@plt+0x35c4c>
  438894:	ldr	w0, [x0]
  438898:	cmp	w0, #0x32
  43889c:	b.ne	438830 <nftw@plt+0x35b40>  // b.any
  4388a0:	ldr	x2, [x19, #8]
  4388a4:	ldr	w0, [x20, #72]
  4388a8:	ldr	w1, [x2, #16]
  4388ac:	add	w0, w0, #0x7
  4388b0:	add	w0, w0, w1
  4388b4:	str	w0, [x20, #72]
  4388b8:	ldr	x0, [x2]
  4388bc:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  4388c0:	add	x1, x1, #0x7b9
  4388c4:	bl	402a00 <strcmp@plt>
  4388c8:	cbnz	w0, 438830 <nftw@plt+0x35b40>
  4388cc:	mov	x0, x20
  4388d0:	bl	437aac <nftw@plt+0x34dbc>
  4388d4:	mov	x2, x19
  4388d8:	mov	x3, x0
  4388dc:	mov	w1, #0x37                  	// #55
  4388e0:	mov	x0, x20
  4388e4:	bl	435138 <nftw@plt+0x32448>
  4388e8:	b	43882c <nftw@plt+0x35b3c>
  4388ec:	sub	w2, w1, #0x43
  4388f0:	and	w2, w2, #0xff
  4388f4:	cmp	w2, #0x1
  4388f8:	b.hi	438a28 <nftw@plt+0x35d38>  // b.pmore
  4388fc:	ldr	x5, [x0, #64]
  438900:	cbz	x5, 438928 <nftw@plt+0x35c38>
  438904:	ldr	w0, [x5]
  438908:	cbnz	w0, 438920 <nftw@plt+0x35c30>
  43890c:	ldr	w1, [x5, #16]
  438910:	ldr	w0, [x20, #72]
  438914:	add	w0, w0, w1
  438918:	str	w0, [x20, #72]
  43891c:	b	438928 <nftw@plt+0x35c38>
  438920:	cmp	w0, #0x18
  438924:	b.eq	43890c <nftw@plt+0x35c1c>  // b.none
  438928:	ldrb	w0, [x3]
  43892c:	cmp	w0, #0x43
  438930:	b.eq	438944 <nftw@plt+0x35c54>  // b.none
  438934:	cmp	w0, #0x44
  438938:	b.eq	4389b8 <nftw@plt+0x35cc8>  // b.none
  43893c:	mov	x19, #0x0                   	// #0
  438940:	b	438830 <nftw@plt+0x35b40>
  438944:	ldrb	w0, [x3, #1]
  438948:	cmp	w0, #0x49
  43894c:	b.ne	4389b0 <nftw@plt+0x35cc0>  // b.any
  438950:	add	x3, x3, #0x1
  438954:	str	x3, [x20, #24]
  438958:	mov	w3, #0x1                   	// #1
  43895c:	ldr	x0, [x20, #24]
  438960:	ldrb	w1, [x0, #1]
  438964:	sub	w2, w1, #0x31
  438968:	and	w2, w2, #0xff
  43896c:	cmp	w2, #0x4
  438970:	b.hi	43893c <nftw@plt+0x35c4c>  // b.pmore
  438974:	add	x0, x0, #0x2
  438978:	str	x0, [x20, #24]
  43897c:	sub	w21, w1, #0x30
  438980:	cbz	w3, 43898c <nftw@plt+0x35c9c>
  438984:	mov	x0, x20
  438988:	bl	437ec0 <nftw@plt+0x351d0>
  43898c:	ldr	x4, [x20, #64]
  438990:	mov	x0, x20
  438994:	bl	435104 <nftw@plt+0x32414>
  438998:	mov	x19, x0
  43899c:	mov	x2, x4
  4389a0:	mov	w1, w21
  4389a4:	bl	437e50 <nftw@plt+0x35160>
  4389a8:	cbnz	w0, 438830 <nftw@plt+0x35b40>
  4389ac:	b	43893c <nftw@plt+0x35c4c>
  4389b0:	mov	w3, #0x0                   	// #0
  4389b4:	b	43895c <nftw@plt+0x35c6c>
  4389b8:	ldrb	w0, [x3, #1]
  4389bc:	sub	w0, w0, #0x30
  4389c0:	cmp	w0, #0x5
  4389c4:	b.hi	43893c <nftw@plt+0x35c4c>  // b.pmore
  4389c8:	adrp	x1, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4389cc:	add	x1, x1, #0x894
  4389d0:	ldrb	w0, [x1, w0, uxtw]
  4389d4:	adr	x1, 4389e0 <nftw@plt+0x35cf0>
  4389d8:	add	x0, x1, w0, sxtb #2
  4389dc:	br	x0
  4389e0:	mov	w4, #0x2                   	// #2
  4389e4:	add	x3, x3, #0x2
  4389e8:	str	x3, [x20, #24]
  4389ec:	mov	x0, x20
  4389f0:	bl	435104 <nftw@plt+0x32414>
  4389f4:	mov	x19, x0
  4389f8:	mov	x2, x5
  4389fc:	mov	w1, w4
  438a00:	bl	437e88 <nftw@plt+0x35198>
  438a04:	b	4389a8 <nftw@plt+0x35cb8>
  438a08:	mov	w4, #0x3                   	// #3
  438a0c:	b	4389e4 <nftw@plt+0x35cf4>
  438a10:	mov	w4, #0x4                   	// #4
  438a14:	b	4389e4 <nftw@plt+0x35cf4>
  438a18:	mov	w4, #0x5                   	// #5
  438a1c:	b	4389e4 <nftw@plt+0x35cf4>
  438a20:	mov	w4, #0x1                   	// #1
  438a24:	b	4389e4 <nftw@plt+0x35cf4>
  438a28:	cmp	w1, #0x4c
  438a2c:	b.ne	438a6c <nftw@plt+0x35d7c>  // b.any
  438a30:	add	x3, x3, #0x1
  438a34:	str	x3, [x0, #24]
  438a38:	bl	437aac <nftw@plt+0x34dbc>
  438a3c:	mov	x19, x0
  438a40:	cbnz	x0, 438a5c <nftw@plt+0x35d6c>
  438a44:	mov	x19, #0x0                   	// #0
  438a48:	mov	x0, x19
  438a4c:	ldp	x19, x20, [sp, #16]
  438a50:	ldr	x21, [sp, #32]
  438a54:	ldp	x29, x30, [sp], #48
  438a58:	ret
  438a5c:	mov	x0, x20
  438a60:	bl	435764 <nftw@plt+0x32a74>
  438a64:	cbnz	w0, 438830 <nftw@plt+0x35b40>
  438a68:	b	438a44 <nftw@plt+0x35d54>
  438a6c:	cmp	w1, #0x55
  438a70:	b.ne	438a44 <nftw@plt+0x35d54>  // b.any
  438a74:	ldrb	w1, [x3, #1]
  438a78:	cmp	w1, #0x6c
  438a7c:	b.eq	438ad0 <nftw@plt+0x35de0>  // b.none
  438a80:	cmp	w1, #0x74
  438a84:	b.ne	438a44 <nftw@plt+0x35d54>  // b.any
  438a88:	add	x1, x3, #0x1
  438a8c:	str	x1, [x0, #24]
  438a90:	ldrb	w1, [x3, #1]
  438a94:	cmp	w1, #0x74
  438a98:	b.ne	43893c <nftw@plt+0x35c4c>  // b.any
  438a9c:	add	x3, x3, #0x2
  438aa0:	str	x3, [x0, #24]
  438aa4:	bl	435540 <nftw@plt+0x32850>
  438aa8:	sxtw	x4, w0
  438aac:	tbnz	w4, #31, 43893c <nftw@plt+0x35c4c>
  438ab0:	mov	x0, x20
  438ab4:	bl	435104 <nftw@plt+0x32414>
  438ab8:	mov	x19, x0
  438abc:	cbz	x0, 438b40 <nftw@plt+0x35e50>
  438ac0:	mov	w0, #0x48                  	// #72
  438ac4:	str	w0, [x19]
  438ac8:	str	x4, [x19, #8]
  438acc:	b	438b40 <nftw@plt+0x35e50>
  438ad0:	add	x1, x3, #0x1
  438ad4:	str	x1, [x0, #24]
  438ad8:	ldrb	w1, [x3, #1]
  438adc:	cmp	w1, #0x6c
  438ae0:	b.ne	43893c <nftw@plt+0x35c4c>  // b.any
  438ae4:	add	x3, x3, #0x2
  438ae8:	str	x3, [x0, #24]
  438aec:	bl	4385a8 <nftw@plt+0x358b8>
  438af0:	mov	x9, x0
  438af4:	cbz	x0, 43893c <nftw@plt+0x35c4c>
  438af8:	ldr	x0, [x20, #24]
  438afc:	ldrb	w1, [x0]
  438b00:	cmp	w1, #0x45
  438b04:	b.ne	43893c <nftw@plt+0x35c4c>  // b.any
  438b08:	add	x0, x0, #0x1
  438b0c:	str	x0, [x20, #24]
  438b10:	mov	x0, x20
  438b14:	bl	435540 <nftw@plt+0x32850>
  438b18:	mov	w4, w0
  438b1c:	tbnz	w0, #31, 43893c <nftw@plt+0x35c4c>
  438b20:	mov	x0, x20
  438b24:	bl	435104 <nftw@plt+0x32414>
  438b28:	mov	x19, x0
  438b2c:	cbz	x0, 438b40 <nftw@plt+0x35e50>
  438b30:	mov	w0, #0x46                  	// #70
  438b34:	str	w0, [x19]
  438b38:	str	x9, [x19, #8]
  438b3c:	str	w4, [x19, #16]
  438b40:	mov	x1, x19
  438b44:	mov	x0, x20
  438b48:	bl	435228 <nftw@plt+0x32538>
  438b4c:	b	4389a8 <nftw@plt+0x35cb8>
  438b50:	stp	x29, x30, [sp, #-32]!
  438b54:	mov	x29, sp
  438b58:	stp	x19, x20, [sp, #16]
  438b5c:	mov	x19, x0
  438b60:	ldr	x0, [x0, #24]
  438b64:	ldrb	w2, [x0]
  438b68:	cmp	w2, #0x4a
  438b6c:	b.ne	438b98 <nftw@plt+0x35ea8>  // b.any
  438b70:	add	x0, x0, #0x1
  438b74:	str	x0, [x19, #24]
  438b78:	mov	x0, x19
  438b7c:	bl	437ec0 <nftw@plt+0x351d0>
  438b80:	mov	x20, x0
  438b84:	cbnz	x0, 438ba0 <nftw@plt+0x35eb0>
  438b88:	mov	x0, #0x0                   	// #0
  438b8c:	ldp	x19, x20, [sp, #16]
  438b90:	ldp	x29, x30, [sp], #32
  438b94:	ret
  438b98:	cbnz	w1, 438b78 <nftw@plt+0x35e88>
  438b9c:	mov	x20, #0x0                   	// #0
  438ba0:	mov	x0, x19
  438ba4:	bl	4385a8 <nftw@plt+0x358b8>
  438ba8:	mov	x3, x0
  438bac:	cbz	x0, 438b88 <nftw@plt+0x35e98>
  438bb0:	mov	x2, x20
  438bb4:	mov	x0, x19
  438bb8:	ldp	x19, x20, [sp, #16]
  438bbc:	mov	w1, #0x29                  	// #41
  438bc0:	ldp	x29, x30, [sp], #32
  438bc4:	b	435138 <nftw@plt+0x32448>
  438bc8:	stp	x29, x30, [sp, #-32]!
  438bcc:	mov	x29, sp
  438bd0:	str	x19, [sp, #16]
  438bd4:	mov	x19, x0
  438bd8:	ldr	w0, [x0, #16]
  438bdc:	tbnz	w0, #18, 438bf4 <nftw@plt+0x35f04>
  438be0:	ldr	w0, [x19, #84]
  438be4:	cmp	w0, #0x800
  438be8:	b.hi	438c78 <nftw@plt+0x35f88>  // b.pmore
  438bec:	add	w0, w0, #0x1
  438bf0:	str	w0, [x19, #84]
  438bf4:	ldr	x0, [x19, #24]
  438bf8:	ldrb	w1, [x0]
  438bfc:	cmp	w1, #0x46
  438c00:	b.eq	438c28 <nftw@plt+0x35f38>  // b.none
  438c04:	mov	x0, #0x0                   	// #0
  438c08:	ldr	w1, [x19, #16]
  438c0c:	tbnz	w1, #18, 438c1c <nftw@plt+0x35f2c>
  438c10:	ldr	w1, [x19, #84]
  438c14:	sub	w1, w1, #0x1
  438c18:	str	w1, [x19, #84]
  438c1c:	ldr	x19, [sp, #16]
  438c20:	ldp	x29, x30, [sp], #32
  438c24:	ret
  438c28:	add	x1, x0, #0x1
  438c2c:	str	x1, [x19, #24]
  438c30:	add	x0, x0, #0x2
  438c34:	ldurb	w2, [x0, #-1]
  438c38:	cmp	w2, #0x59
  438c3c:	csel	x0, x0, x1, eq  // eq = none
  438c40:	str	x0, [x19, #24]
  438c44:	mov	w1, #0x1                   	// #1
  438c48:	mov	x0, x19
  438c4c:	bl	438b50 <nftw@plt+0x35e60>
  438c50:	mov	x1, x0
  438c54:	mov	x0, x19
  438c58:	bl	4351d0 <nftw@plt+0x324e0>
  438c5c:	ldr	x1, [x19, #24]
  438c60:	ldrb	w2, [x1]
  438c64:	cmp	w2, #0x45
  438c68:	b.ne	438c04 <nftw@plt+0x35f14>  // b.any
  438c6c:	add	x1, x1, #0x1
  438c70:	str	x1, [x19, #24]
  438c74:	b	438c08 <nftw@plt+0x35f18>
  438c78:	mov	x0, #0x0                   	// #0
  438c7c:	b	438c1c <nftw@plt+0x35f2c>
  438c80:	stp	x29, x30, [sp, #-96]!
  438c84:	mov	x29, sp
  438c88:	ldr	x1, [x0, #24]
  438c8c:	stp	x19, x20, [sp, #16]
  438c90:	stp	x21, x22, [sp, #32]
  438c94:	stp	x23, x24, [sp, #48]
  438c98:	str	x25, [sp, #64]
  438c9c:	ldrb	w2, [x1]
  438ca0:	cmp	w2, #0x55
  438ca4:	b.eq	43900c <nftw@plt+0x3631c>  // b.none
  438ca8:	mov	x19, x0
  438cac:	b.hi	438cf0 <nftw@plt+0x36000>  // b.pmore
  438cb0:	cmp	w2, #0x4e
  438cb4:	b.eq	438d94 <nftw@plt+0x360a4>  // b.none
  438cb8:	cmp	w2, #0x53
  438cbc:	b.eq	439018 <nftw@plt+0x36328>  // b.none
  438cc0:	mov	x0, x19
  438cc4:	bl	4387fc <nftw@plt+0x35b0c>
  438cc8:	mov	x20, x0
  438ccc:	ldr	x0, [x19, #24]
  438cd0:	ldrb	w0, [x0]
  438cd4:	cmp	w0, #0x49
  438cd8:	b.ne	438f60 <nftw@plt+0x36270>  // b.any
  438cdc:	mov	x1, x20
  438ce0:	mov	x0, x19
  438ce4:	bl	435228 <nftw@plt+0x32538>
  438ce8:	cbnz	w0, 439048 <nftw@plt+0x36358>
  438cec:	b	438db0 <nftw@plt+0x360c0>
  438cf0:	cmp	w2, #0x5a
  438cf4:	b.ne	438cc0 <nftw@plt+0x35fd0>  // b.any
  438cf8:	add	x1, x1, #0x1
  438cfc:	str	x1, [x0, #24]
  438d00:	mov	w1, #0x0                   	// #0
  438d04:	bl	4390b0 <nftw@plt+0x363c0>
  438d08:	mov	x20, x0
  438d0c:	cbz	x0, 438db0 <nftw@plt+0x360c0>
  438d10:	ldr	x1, [x19, #24]
  438d14:	ldrb	w0, [x1]
  438d18:	cmp	w0, #0x45
  438d1c:	b.ne	438db0 <nftw@plt+0x360c0>  // b.any
  438d20:	add	x0, x1, #0x1
  438d24:	str	x0, [x19, #24]
  438d28:	ldrb	w0, [x1, #1]
  438d2c:	cmp	w0, #0x73
  438d30:	b.ne	438f7c <nftw@plt+0x3628c>  // b.any
  438d34:	add	x1, x1, #0x2
  438d38:	str	x1, [x19, #24]
  438d3c:	mov	x0, x19
  438d40:	bl	435764 <nftw@plt+0x32a74>
  438d44:	cbz	w0, 438db0 <nftw@plt+0x360c0>
  438d48:	mov	x0, x19
  438d4c:	mov	w2, #0xe                   	// #14
  438d50:	adrp	x1, 455000 <_obstack_memory_used@@Base+0x17fa8>
  438d54:	add	x1, x1, #0x92f
  438d58:	bl	437a78 <nftw@plt+0x34d88>
  438d5c:	mov	x3, x0
  438d60:	ldr	w0, [x20]
  438d64:	cmp	w0, #0x3
  438d68:	b.ne	438d80 <nftw@plt+0x36090>  // b.any
  438d6c:	ldr	x0, [x20, #16]
  438d70:	ldr	w1, [x0]
  438d74:	cmp	w1, #0x29
  438d78:	b.ne	438d80 <nftw@plt+0x36090>  // b.any
  438d7c:	str	xzr, [x0, #8]
  438d80:	mov	x2, x20
  438d84:	mov	w1, #0x2                   	// #2
  438d88:	mov	x0, x19
  438d8c:	bl	435138 <nftw@plt+0x32448>
  438d90:	b	439010 <nftw@plt+0x36320>
  438d94:	add	x1, x1, #0x1
  438d98:	str	x1, [x0, #24]
  438d9c:	mov	w2, #0x1                   	// #1
  438da0:	add	x1, sp, #0x58
  438da4:	bl	43a124 <nftw@plt+0x37434>
  438da8:	mov	x21, x0
  438dac:	cbnz	x0, 438db8 <nftw@plt+0x360c8>
  438db0:	mov	x20, #0x0                   	// #0
  438db4:	b	438f60 <nftw@plt+0x36270>
  438db8:	mov	x24, #0x3ff                 	// #1023
  438dbc:	mov	x0, x19
  438dc0:	mov	x1, #0x0                   	// #0
  438dc4:	movk	x24, #0x1008, lsl #16
  438dc8:	bl	4351d0 <nftw@plt+0x324e0>
  438dcc:	mov	x22, x0
  438dd0:	mov	x25, #0x0                   	// #0
  438dd4:	mov	w23, #0x1                   	// #1
  438dd8:	movk	x24, #0x20, lsl #32
  438ddc:	ldr	x1, [x19, #24]
  438de0:	ldrb	w20, [x1]
  438de4:	cbnz	w20, 438df0 <nftw@plt+0x36100>
  438de8:	str	xzr, [x21]
  438dec:	b	438db0 <nftw@plt+0x360c0>
  438df0:	cmp	w20, #0x44
  438df4:	b.ne	438e48 <nftw@plt+0x36158>  // b.any
  438df8:	ldrb	w0, [x1, #1]
  438dfc:	and	w0, w0, #0xffffffdf
  438e00:	and	w0, w0, #0xff
  438e04:	cmp	w0, #0x54
  438e08:	mov	x0, x19
  438e0c:	b.ne	438e40 <nftw@plt+0x36150>  // b.any
  438e10:	bl	437ec0 <nftw@plt+0x351d0>
  438e14:	mov	x4, x0
  438e18:	cbnz	x25, 438eb4 <nftw@plt+0x361c4>
  438e1c:	ldr	x0, [x19, #24]
  438e20:	ldrb	w0, [x0]
  438e24:	cmp	w0, #0x45
  438e28:	b.eq	438e9c <nftw@plt+0x361ac>  // b.none
  438e2c:	mov	x1, x4
  438e30:	mov	x0, x19
  438e34:	bl	435228 <nftw@plt+0x32538>
  438e38:	cbnz	w0, 438e9c <nftw@plt+0x361ac>
  438e3c:	b	438de8 <nftw@plt+0x360f8>
  438e40:	bl	4387fc <nftw@plt+0x35b0c>
  438e44:	b	438e14 <nftw@plt+0x36124>
  438e48:	sub	w0, w20, #0x30
  438e4c:	and	w2, w0, #0xff
  438e50:	cmp	w2, #0x26
  438e54:	lsr	x0, x24, x0
  438e58:	sub	w2, w20, #0x61
  438e5c:	mvn	x0, x0
  438e60:	and	w2, w2, #0xff
  438e64:	and	w0, w0, #0x1
  438e68:	csel	w0, w0, w23, cc  // cc = lo, ul, last
  438e6c:	cmp	w2, #0x19
  438e70:	cset	w2, ls  // ls = plast
  438e74:	eor	w0, w0, #0x1
  438e78:	orr	w0, w2, w0
  438e7c:	cbnz	w0, 438ea4 <nftw@plt+0x361b4>
  438e80:	cmp	w20, #0x53
  438e84:	b.ne	438ebc <nftw@plt+0x361cc>  // b.any
  438e88:	mov	x0, x19
  438e8c:	mov	w1, #0x1                   	// #1
  438e90:	bl	437c24 <nftw@plt+0x34f34>
  438e94:	mov	x4, x0
  438e98:	cbnz	x25, 438eb4 <nftw@plt+0x361c4>
  438e9c:	mov	x25, x4
  438ea0:	b	438ddc <nftw@plt+0x360ec>
  438ea4:	mov	x0, x19
  438ea8:	bl	4387fc <nftw@plt+0x35b0c>
  438eac:	mov	x4, x0
  438eb0:	cbz	x25, 438eec <nftw@plt+0x361fc>
  438eb4:	mov	w1, #0x1                   	// #1
  438eb8:	b	438ed8 <nftw@plt+0x361e8>
  438ebc:	cmp	w20, #0x49
  438ec0:	b.ne	438ef8 <nftw@plt+0x36208>  // b.any
  438ec4:	cbz	x25, 438de8 <nftw@plt+0x360f8>
  438ec8:	mov	x0, x19
  438ecc:	bl	43a044 <nftw@plt+0x37354>
  438ed0:	mov	x4, x0
  438ed4:	mov	w1, #0x4                   	// #4
  438ed8:	mov	x3, x4
  438edc:	mov	x2, x25
  438ee0:	mov	x0, x19
  438ee4:	bl	435138 <nftw@plt+0x32448>
  438ee8:	mov	x4, x0
  438eec:	cmp	w20, #0x53
  438ef0:	b.ne	438e1c <nftw@plt+0x3612c>  // b.any
  438ef4:	b	438e9c <nftw@plt+0x361ac>
  438ef8:	cmp	w20, #0x54
  438efc:	b.ne	438f0c <nftw@plt+0x3621c>  // b.any
  438f00:	mov	x0, x19
  438f04:	bl	4355c4 <nftw@plt+0x328d4>
  438f08:	b	438e14 <nftw@plt+0x36124>
  438f0c:	cmp	w20, #0x45
  438f10:	b.eq	438f30 <nftw@plt+0x36240>  // b.none
  438f14:	cmp	w20, #0x4d
  438f18:	b.ne	438de8 <nftw@plt+0x360f8>  // b.any
  438f1c:	cbz	x25, 438de8 <nftw@plt+0x360f8>
  438f20:	add	x1, x1, #0x1
  438f24:	mov	x4, x25
  438f28:	str	x1, [x19, #24]
  438f2c:	b	438e9c <nftw@plt+0x361ac>
  438f30:	str	x25, [x21]
  438f34:	cbz	x25, 438db0 <nftw@plt+0x360c0>
  438f38:	cbz	x22, 438f48 <nftw@plt+0x36258>
  438f3c:	ldr	x0, [sp, #88]
  438f40:	str	x0, [x22, #8]
  438f44:	str	x22, [sp, #88]
  438f48:	ldrb	w0, [x1]
  438f4c:	cmp	w0, #0x45
  438f50:	b.ne	438db0 <nftw@plt+0x360c0>  // b.any
  438f54:	ldr	x20, [sp, #88]
  438f58:	add	x1, x1, #0x1
  438f5c:	str	x1, [x19, #24]
  438f60:	mov	x0, x20
  438f64:	ldp	x19, x20, [sp, #16]
  438f68:	ldp	x21, x22, [sp, #32]
  438f6c:	ldp	x23, x24, [sp, #48]
  438f70:	ldr	x25, [sp, #64]
  438f74:	ldp	x29, x30, [sp], #96
  438f78:	ret
  438f7c:	cmp	w0, #0x64
  438f80:	b.ne	438fbc <nftw@plt+0x362cc>  // b.any
  438f84:	add	x1, x1, #0x2
  438f88:	str	x1, [x19, #24]
  438f8c:	mov	x0, x19
  438f90:	bl	435540 <nftw@plt+0x32850>
  438f94:	mov	w21, w0
  438f98:	tbnz	w0, #31, 438db0 <nftw@plt+0x360c0>
  438f9c:	mov	x0, x19
  438fa0:	bl	438c80 <nftw@plt+0x35f90>
  438fa4:	mov	x10, x0
  438fa8:	cbnz	x0, 438fc4 <nftw@plt+0x362d4>
  438fac:	cmn	w21, #0x1
  438fb0:	b.ne	438fe8 <nftw@plt+0x362f8>  // b.any
  438fb4:	mov	x3, x10
  438fb8:	b	438d60 <nftw@plt+0x36070>
  438fbc:	mov	w21, #0xffffffff            	// #-1
  438fc0:	b	438f9c <nftw@plt+0x362ac>
  438fc4:	ldr	w0, [x0]
  438fc8:	cmp	w0, #0x46
  438fcc:	b.eq	438fac <nftw@plt+0x362bc>  // b.none
  438fd0:	cmp	w0, #0x48
  438fd4:	b.eq	438fac <nftw@plt+0x362bc>  // b.none
  438fd8:	mov	x0, x19
  438fdc:	bl	435764 <nftw@plt+0x32a74>
  438fe0:	cbnz	w0, 438fac <nftw@plt+0x362bc>
  438fe4:	b	438db0 <nftw@plt+0x360c0>
  438fe8:	mov	x0, x19
  438fec:	bl	435104 <nftw@plt+0x32414>
  438ff0:	mov	x3, x0
  438ff4:	cbz	x0, 438d60 <nftw@plt+0x36070>
  438ff8:	mov	w0, #0x47                  	// #71
  438ffc:	str	w0, [x3]
  439000:	str	x10, [x3, #8]
  439004:	str	w21, [x3, #16]
  439008:	b	438d60 <nftw@plt+0x36070>
  43900c:	bl	4387fc <nftw@plt+0x35b0c>
  439010:	mov	x20, x0
  439014:	b	438f60 <nftw@plt+0x36270>
  439018:	ldrb	w2, [x1, #1]
  43901c:	cmp	w2, #0x74
  439020:	b.eq	439060 <nftw@plt+0x36370>  // b.none
  439024:	mov	w1, #0x0                   	// #0
  439028:	bl	437c24 <nftw@plt+0x34f34>
  43902c:	mov	x20, x0
  439030:	mov	w0, #0x1                   	// #1
  439034:	ldr	x1, [x19, #24]
  439038:	ldrb	w1, [x1]
  43903c:	cmp	w1, #0x49
  439040:	b.ne	438f60 <nftw@plt+0x36270>  // b.any
  439044:	cbz	w0, 438cdc <nftw@plt+0x35fec>
  439048:	mov	x0, x19
  43904c:	bl	43a044 <nftw@plt+0x37354>
  439050:	mov	x2, x20
  439054:	mov	x3, x0
  439058:	mov	w1, #0x4                   	// #4
  43905c:	b	438d88 <nftw@plt+0x36098>
  439060:	add	x1, x1, #0x2
  439064:	str	x1, [x0, #24]
  439068:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43906c:	add	x1, x1, #0x7bc
  439070:	mov	w2, #0x3                   	// #3
  439074:	bl	437a78 <nftw@plt+0x34d88>
  439078:	mov	x20, x0
  43907c:	mov	x0, x19
  439080:	bl	4387fc <nftw@plt+0x35b0c>
  439084:	mov	x3, x0
  439088:	mov	x2, x20
  43908c:	mov	x0, x19
  439090:	mov	w1, #0x1                   	// #1
  439094:	bl	435138 <nftw@plt+0x32448>
  439098:	mov	x20, x0
  43909c:	ldr	w0, [x19, #72]
  4390a0:	add	w0, w0, #0x3
  4390a4:	str	w0, [x19, #72]
  4390a8:	mov	w0, #0x0                   	// #0
  4390ac:	b	439034 <nftw@plt+0x36344>
  4390b0:	stp	x29, x30, [sp, #-48]!
  4390b4:	mov	w3, #0x54                  	// #84
  4390b8:	mov	x29, sp
  4390bc:	ldr	x2, [x0, #24]
  4390c0:	stp	x19, x20, [sp, #16]
  4390c4:	mov	x19, x0
  4390c8:	str	x21, [sp, #32]
  4390cc:	mov	w21, w1
  4390d0:	ldrb	w1, [x2]
  4390d4:	cmp	w1, #0x47
  4390d8:	ccmp	w1, w3, #0x4, ne  // ne = any
  4390dc:	b.ne	439558 <nftw@plt+0x36868>  // b.any
  4390e0:	ldr	w3, [x0, #72]
  4390e4:	add	w1, w3, #0x14
  4390e8:	str	w1, [x0, #72]
  4390ec:	ldrb	w1, [x2]
  4390f0:	cmp	w1, #0x54
  4390f4:	b.ne	439120 <nftw@plt+0x36430>  // b.any
  4390f8:	add	x1, x2, #0x1
  4390fc:	str	x1, [x0, #24]
  439100:	ldrb	w1, [x2, #1]
  439104:	cbnz	w1, 439180 <nftw@plt+0x36490>
  439108:	mov	x20, #0x0                   	// #0
  43910c:	mov	x0, x20
  439110:	ldp	x19, x20, [sp, #16]
  439114:	ldr	x21, [sp, #32]
  439118:	ldp	x29, x30, [sp], #48
  43911c:	ret
  439120:	cmp	w1, #0x47
  439124:	b.ne	439108 <nftw@plt+0x36418>  // b.any
  439128:	add	x1, x2, #0x1
  43912c:	str	x1, [x0, #24]
  439130:	ldrb	w1, [x2, #1]
  439134:	cbz	w1, 439108 <nftw@plt+0x36418>
  439138:	add	x1, x2, #0x2
  43913c:	str	x1, [x0, #24]
  439140:	ldrb	w1, [x2, #1]
  439144:	cmp	w1, #0x54
  439148:	b.eq	4394a4 <nftw@plt+0x367b4>  // b.none
  43914c:	b.hi	4393a4 <nftw@plt+0x366b4>  // b.pmore
  439150:	cmp	w1, #0x41
  439154:	b.eq	43948c <nftw@plt+0x3679c>  // b.none
  439158:	cmp	w1, #0x52
  43915c:	b.ne	439108 <nftw@plt+0x36418>  // b.any
  439160:	bl	438c80 <nftw@plt+0x35f90>
  439164:	mov	x9, x0
  439168:	mov	x0, x19
  43916c:	bl	435504 <nftw@plt+0x32814>
  439170:	mov	x3, x0
  439174:	mov	x2, x9
  439178:	mov	w1, #0x16                  	// #22
  43917c:	b	43922c <nftw@plt+0x3653c>
  439180:	add	x1, x2, #0x2
  439184:	str	x1, [x0, #24]
  439188:	ldrb	w1, [x2, #1]
  43918c:	cmp	w1, #0x57
  439190:	b.hi	4391c0 <nftw@plt+0x364d0>  // b.pmore
  439194:	cmp	w1, #0x40
  439198:	b.ls	439108 <nftw@plt+0x36418>  // b.plast
  43919c:	sub	w1, w1, #0x41
  4391a0:	cmp	w1, #0x16
  4391a4:	b.hi	439108 <nftw@plt+0x36418>  // b.pmore
  4391a8:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  4391ac:	add	x0, x0, #0x89c
  4391b0:	ldrb	w0, [x0, w1, uxtw]
  4391b4:	adr	x1, 4391c0 <nftw@plt+0x364d0>
  4391b8:	add	x0, x1, w0, sxtb #2
  4391bc:	br	x0
  4391c0:	cmp	w1, #0x68
  4391c4:	b.eq	439290 <nftw@plt+0x365a0>  // b.none
  4391c8:	cmp	w1, #0x76
  4391cc:	b.eq	4392b4 <nftw@plt+0x365c4>  // b.none
  4391d0:	cmp	w1, #0x63
  4391d4:	b.ne	439108 <nftw@plt+0x36418>  // b.any
  4391d8:	mov	w1, #0x0                   	// #0
  4391dc:	bl	435624 <nftw@plt+0x32934>
  4391e0:	cbz	w0, 439108 <nftw@plt+0x36418>
  4391e4:	mov	x0, x19
  4391e8:	mov	w1, #0x0                   	// #0
  4391ec:	bl	435624 <nftw@plt+0x32934>
  4391f0:	cbz	w0, 439108 <nftw@plt+0x36418>
  4391f4:	mov	w1, #0x0                   	// #0
  4391f8:	mov	x0, x19
  4391fc:	bl	4390b0 <nftw@plt+0x363c0>
  439200:	mov	x2, x0
  439204:	mov	x3, #0x0                   	// #0
  439208:	mov	w1, #0x11                  	// #17
  43920c:	b	43922c <nftw@plt+0x3653c>
  439210:	add	w3, w3, #0xf
  439214:	str	w3, [x19, #72]
  439218:	mov	x0, x19
  43921c:	bl	437ec0 <nftw@plt+0x351d0>
  439220:	mov	x2, x0
  439224:	mov	x3, #0x0                   	// #0
  439228:	mov	w1, #0x9                   	// #9
  43922c:	mov	x0, x19
  439230:	ldp	x19, x20, [sp, #16]
  439234:	ldr	x21, [sp, #32]
  439238:	ldp	x29, x30, [sp], #48
  43923c:	b	435138 <nftw@plt+0x32448>
  439240:	add	w3, w3, #0xa
  439244:	str	w3, [x19, #72]
  439248:	mov	x0, x19
  43924c:	bl	437ec0 <nftw@plt+0x351d0>
  439250:	mov	x2, x0
  439254:	mov	x3, #0x0                   	// #0
  439258:	mov	w1, #0xa                   	// #10
  43925c:	b	43922c <nftw@plt+0x3653c>
  439260:	mov	x0, x19
  439264:	bl	437ec0 <nftw@plt+0x351d0>
  439268:	mov	x3, #0x0                   	// #0
  43926c:	mov	x2, x0
  439270:	mov	w1, #0xc                   	// #12
  439274:	b	43922c <nftw@plt+0x3653c>
  439278:	mov	x0, x19
  43927c:	bl	437ec0 <nftw@plt+0x351d0>
  439280:	mov	x3, #0x0                   	// #0
  439284:	mov	x2, x0
  439288:	mov	w1, #0xd                   	// #13
  43928c:	b	43922c <nftw@plt+0x3653c>
  439290:	bl	435624 <nftw@plt+0x32934>
  439294:	cbz	w0, 439108 <nftw@plt+0x36418>
  439298:	mov	w1, #0x0                   	// #0
  43929c:	mov	x0, x19
  4392a0:	bl	4390b0 <nftw@plt+0x363c0>
  4392a4:	mov	x2, x0
  4392a8:	mov	x3, #0x0                   	// #0
  4392ac:	mov	w1, #0xf                   	// #15
  4392b0:	b	43922c <nftw@plt+0x3653c>
  4392b4:	bl	435624 <nftw@plt+0x32934>
  4392b8:	cbz	w0, 439108 <nftw@plt+0x36418>
  4392bc:	mov	w1, #0x0                   	// #0
  4392c0:	mov	x0, x19
  4392c4:	bl	4390b0 <nftw@plt+0x363c0>
  4392c8:	mov	x2, x0
  4392cc:	mov	x3, #0x0                   	// #0
  4392d0:	mov	w1, #0x10                  	// #16
  4392d4:	b	43922c <nftw@plt+0x3653c>
  4392d8:	mov	x0, x19
  4392dc:	bl	437ec0 <nftw@plt+0x351d0>
  4392e0:	mov	x20, x0
  4392e4:	add	x0, x19, #0x18
  4392e8:	bl	43547c <nftw@plt+0x3278c>
  4392ec:	tbnz	w0, #31, 439108 <nftw@plt+0x36418>
  4392f0:	ldr	x1, [x19, #24]
  4392f4:	ldrb	w0, [x1]
  4392f8:	cmp	w0, #0x5f
  4392fc:	b.ne	439108 <nftw@plt+0x36418>  // b.any
  439300:	add	x1, x1, #0x1
  439304:	str	x1, [x19, #24]
  439308:	mov	x0, x19
  43930c:	bl	437ec0 <nftw@plt+0x351d0>
  439310:	mov	x2, x0
  439314:	ldr	w1, [x19, #72]
  439318:	mov	x3, x20
  43931c:	add	w1, w1, #0x5
  439320:	str	w1, [x19, #72]
  439324:	mov	w1, #0xb                   	// #11
  439328:	b	43922c <nftw@plt+0x3653c>
  43932c:	mov	x0, x19
  439330:	bl	437ec0 <nftw@plt+0x351d0>
  439334:	mov	x3, #0x0                   	// #0
  439338:	mov	x2, x0
  43933c:	mov	w1, #0xe                   	// #14
  439340:	b	43922c <nftw@plt+0x3653c>
  439344:	mov	x0, x19
  439348:	bl	437ec0 <nftw@plt+0x351d0>
  43934c:	mov	x3, #0x0                   	// #0
  439350:	mov	x2, x0
  439354:	mov	w1, #0x12                  	// #18
  439358:	b	43922c <nftw@plt+0x3653c>
  43935c:	mov	x0, x19
  439360:	bl	438c80 <nftw@plt+0x35f90>
  439364:	mov	x3, #0x0                   	// #0
  439368:	mov	x2, x0
  43936c:	mov	w1, #0x14                  	// #20
  439370:	b	43922c <nftw@plt+0x3653c>
  439374:	mov	x0, x19
  439378:	bl	438c80 <nftw@plt+0x35f90>
  43937c:	mov	x3, #0x0                   	// #0
  439380:	mov	x2, x0
  439384:	mov	w1, #0x15                  	// #21
  439388:	b	43922c <nftw@plt+0x3653c>
  43938c:	mov	x0, x19
  439390:	bl	439ef8 <nftw@plt+0x37208>
  439394:	mov	x3, #0x0                   	// #0
  439398:	mov	x2, x0
  43939c:	mov	w1, #0x30                  	// #48
  4393a0:	b	43922c <nftw@plt+0x3653c>
  4393a4:	cmp	w1, #0x56
  4393a8:	b.eq	439478 <nftw@plt+0x36788>  // b.none
  4393ac:	cmp	w1, #0x72
  4393b0:	b.ne	439108 <nftw@plt+0x36418>  // b.any
  4393b4:	add	x0, x0, #0x18
  4393b8:	bl	43547c <nftw@plt+0x3278c>
  4393bc:	cmp	w0, #0x1
  4393c0:	b.le	439108 <nftw@plt+0x36418>
  4393c4:	ldr	x1, [x19, #24]
  4393c8:	ldrb	w2, [x1]
  4393cc:	cbz	w2, 439108 <nftw@plt+0x36418>
  4393d0:	add	x7, x1, #0x1
  4393d4:	str	x7, [x19, #24]
  4393d8:	ldrb	w1, [x1]
  4393dc:	cmp	w1, #0x5f
  4393e0:	b.ne	439108 <nftw@plt+0x36418>  // b.any
  4393e4:	sub	w8, w0, #0x1
  4393e8:	mov	x9, #0x0                   	// #0
  4393ec:	mov	w10, #0x41                  	// #65
  4393f0:	ldrb	w0, [x7]
  4393f4:	cbz	w0, 439108 <nftw@plt+0x36418>
  4393f8:	cmp	w0, #0x24
  4393fc:	b.ne	43950c <nftw@plt+0x3681c>  // b.any
  439400:	ldrb	w4, [x7, #1]
  439404:	cmp	w4, #0x53
  439408:	b.eq	4394fc <nftw@plt+0x3680c>  // b.none
  43940c:	cmp	w4, #0x5f
  439410:	b.eq	439504 <nftw@plt+0x36814>  // b.none
  439414:	cmp	w4, #0x24
  439418:	b.ne	439108 <nftw@plt+0x36418>  // b.any
  43941c:	mov	x0, x19
  439420:	bl	435104 <nftw@plt+0x32414>
  439424:	cbz	x0, 439430 <nftw@plt+0x36740>
  439428:	str	w10, [x0]
  43942c:	str	w4, [x0, #8]
  439430:	ldr	x7, [x19, #24]
  439434:	sub	w8, w8, #0x2
  439438:	add	x7, x7, #0x2
  43943c:	str	x7, [x19, #24]
  439440:	cbz	x0, 439108 <nftw@plt+0x36418>
  439444:	cbz	x9, 439460 <nftw@plt+0x36770>
  439448:	mov	x3, x0
  43944c:	mov	x2, x9
  439450:	mov	x0, x19
  439454:	mov	w1, #0x40                  	// #64
  439458:	bl	435138 <nftw@plt+0x32448>
  43945c:	cbz	x0, 439108 <nftw@plt+0x36418>
  439460:	cmp	w8, #0x0
  439464:	b.gt	4394f4 <nftw@plt+0x36804>
  439468:	mov	x2, x0
  43946c:	mov	x3, #0x0                   	// #0
  439470:	mov	w1, #0x3f                  	// #63
  439474:	b	43922c <nftw@plt+0x3653c>
  439478:	bl	438c80 <nftw@plt+0x35f90>
  43947c:	mov	x2, x0
  439480:	mov	x3, #0x0                   	// #0
  439484:	mov	w1, #0x13                  	// #19
  439488:	b	43922c <nftw@plt+0x3653c>
  43948c:	mov	w1, #0x0                   	// #0
  439490:	bl	4390b0 <nftw@plt+0x363c0>
  439494:	mov	x3, #0x0                   	// #0
  439498:	mov	x2, x0
  43949c:	mov	w1, #0x17                  	// #23
  4394a0:	b	43922c <nftw@plt+0x3653c>
  4394a4:	ldrb	w1, [x2, #2]
  4394a8:	cbz	w1, 4394d8 <nftw@plt+0x367e8>
  4394ac:	add	x1, x2, #0x3
  4394b0:	str	x1, [x0, #24]
  4394b4:	ldrb	w1, [x2, #2]
  4394b8:	cmp	w1, #0x6e
  4394bc:	b.ne	4394d8 <nftw@plt+0x367e8>  // b.any
  4394c0:	mov	w1, #0x0                   	// #0
  4394c4:	bl	4390b0 <nftw@plt+0x363c0>
  4394c8:	mov	x3, #0x0                   	// #0
  4394cc:	mov	x2, x0
  4394d0:	mov	w1, #0x4a                  	// #74
  4394d4:	b	43922c <nftw@plt+0x3653c>
  4394d8:	mov	w1, #0x0                   	// #0
  4394dc:	mov	x0, x19
  4394e0:	bl	4390b0 <nftw@plt+0x363c0>
  4394e4:	mov	x2, x0
  4394e8:	mov	x3, #0x0                   	// #0
  4394ec:	mov	w1, #0x49                  	// #73
  4394f0:	b	43922c <nftw@plt+0x3653c>
  4394f4:	mov	x9, x0
  4394f8:	b	4393f0 <nftw@plt+0x36700>
  4394fc:	mov	w4, #0x2f                  	// #47
  439500:	b	43941c <nftw@plt+0x3672c>
  439504:	mov	w4, #0x2e                  	// #46
  439508:	b	43941c <nftw@plt+0x3672c>
  43950c:	mov	x0, #0x0                   	// #0
  439510:	ldrb	w1, [x7, x0]
  439514:	mov	w6, w0
  439518:	cbz	w1, 439534 <nftw@plt+0x36844>
  43951c:	cmp	w1, #0x24
  439520:	b.eq	439534 <nftw@plt+0x36844>  // b.none
  439524:	add	x0, x0, #0x1
  439528:	add	w6, w6, #0x1
  43952c:	cmp	w8, w0
  439530:	b.gt	439510 <nftw@plt+0x36820>
  439534:	mov	x1, x7
  439538:	mov	w2, w6
  43953c:	mov	x0, x19
  439540:	bl	437a78 <nftw@plt+0x34d88>
  439544:	ldr	x7, [x19, #24]
  439548:	sub	w8, w8, w6
  43954c:	add	x7, x7, w6, sxtw
  439550:	str	x7, [x19, #24]
  439554:	b	439440 <nftw@plt+0x36750>
  439558:	bl	438c80 <nftw@plt+0x35f90>
  43955c:	mov	x20, x0
  439560:	cbz	x0, 439108 <nftw@plt+0x36418>
  439564:	cbz	w21, 439570 <nftw@plt+0x36880>
  439568:	ldr	w0, [x19, #16]
  43956c:	tbz	w0, #0, 4395c0 <nftw@plt+0x368d0>
  439570:	ldr	x0, [x19, #24]
  439574:	ldrb	w0, [x0]
  439578:	cmp	w0, #0x45
  43957c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  439580:	b.eq	43910c <nftw@plt+0x3641c>  // b.none
  439584:	mov	x3, #0x1f                  	// #31
  439588:	mov	x2, x20
  43958c:	mov	x1, #0x1                   	// #1
  439590:	movk	x3, #0x1a, lsl #48
  439594:	ldr	w0, [x2]
  439598:	cmp	w0, #0x4
  43959c:	b.eq	439614 <nftw@plt+0x36924>  // b.none
  4395a0:	b.hi	4395f4 <nftw@plt+0x36904>  // b.pmore
  4395a4:	cmp	w0, #0x2
  4395a8:	b.ne	4395b4 <nftw@plt+0x368c4>  // b.any
  4395ac:	ldr	x2, [x2, #16]
  4395b0:	cbnz	x2, 439594 <nftw@plt+0x368a4>
  4395b4:	mov	w1, #0x0                   	// #0
  4395b8:	b	439650 <nftw@plt+0x36960>
  4395bc:	ldr	x20, [x20, #8]
  4395c0:	ldr	w2, [x20]
  4395c4:	mov	w0, w2
  4395c8:	bl	4350d4 <nftw@plt+0x323e4>
  4395cc:	cbnz	w0, 4395bc <nftw@plt+0x368cc>
  4395d0:	cmp	w2, #0x2
  4395d4:	b.ne	43910c <nftw@plt+0x3641c>  // b.any
  4395d8:	ldr	x2, [x20, #16]
  4395dc:	ldr	w0, [x2]
  4395e0:	bl	4350d4 <nftw@plt+0x323e4>
  4395e4:	cbz	w0, 43910c <nftw@plt+0x3641c>
  4395e8:	ldr	x0, [x2, #8]
  4395ec:	str	x0, [x20, #16]
  4395f0:	b	4395d8 <nftw@plt+0x368e8>
  4395f4:	sub	w0, w0, #0x1c
  4395f8:	cmp	w0, #0x34
  4395fc:	b.hi	4395b4 <nftw@plt+0x368c4>  // b.pmore
  439600:	lsl	x0, x1, x0
  439604:	tst	x0, x3
  439608:	b.eq	4395b4 <nftw@plt+0x368c4>  // b.none
  43960c:	ldr	x2, [x2, #8]
  439610:	b	4395b0 <nftw@plt+0x368c0>
  439614:	ldr	x1, [x2, #8]
  439618:	cbz	x1, 43963c <nftw@plt+0x3694c>
  43961c:	ldr	w0, [x1]
  439620:	cmp	w0, #0x8
  439624:	b.hi	439644 <nftw@plt+0x36954>  // b.pmore
  439628:	cmp	w0, #0x6
  43962c:	b.hi	439694 <nftw@plt+0x369a4>  // b.pmore
  439630:	sub	w0, w0, #0x1
  439634:	cmp	w0, #0x1
  439638:	b.ls	43968c <nftw@plt+0x3699c>  // b.plast
  43963c:	mov	w0, #0x0                   	// #0
  439640:	b	43964c <nftw@plt+0x3695c>
  439644:	cmp	w0, #0x35
  439648:	cset	w0, eq  // eq = none
  43964c:	eor	w1, w0, #0x1
  439650:	mov	x0, x19
  439654:	bl	438b50 <nftw@plt+0x35e60>
  439658:	mov	x3, x0
  43965c:	cbz	x0, 439108 <nftw@plt+0x36418>
  439660:	cbnz	w21, 439680 <nftw@plt+0x36990>
  439664:	ldr	w0, [x20]
  439668:	cmp	w0, #0x2
  43966c:	b.ne	439680 <nftw@plt+0x36990>  // b.any
  439670:	ldr	w0, [x3]
  439674:	cmp	w0, #0x29
  439678:	b.ne	439680 <nftw@plt+0x36990>  // b.any
  43967c:	str	xzr, [x3, #8]
  439680:	mov	x2, x20
  439684:	mov	w1, #0x3                   	// #3
  439688:	b	43922c <nftw@plt+0x3653c>
  43968c:	ldr	x1, [x1, #16]
  439690:	b	439618 <nftw@plt+0x36928>
  439694:	mov	w0, #0x1                   	// #1
  439698:	b	43964c <nftw@plt+0x3695c>
  43969c:	stp	x29, x30, [sp, #-32]!
  4396a0:	mov	x29, sp
  4396a4:	stp	x19, x20, [sp, #16]
  4396a8:	mov	x19, x0
  4396ac:	mov	w20, w1
  4396b0:	ldr	x0, [x0, #24]
  4396b4:	ldrb	w1, [x0]
  4396b8:	cmp	w1, #0x5f
  4396bc:	b.ne	43973c <nftw@plt+0x36a4c>  // b.any
  4396c0:	add	x0, x0, #0x1
  4396c4:	str	x0, [x19, #24]
  4396c8:	ldr	x0, [x19, #24]
  4396cc:	ldrb	w1, [x0]
  4396d0:	cmp	w1, #0x5a
  4396d4:	b.ne	439740 <nftw@plt+0x36a50>  // b.any
  4396d8:	add	x0, x0, #0x1
  4396dc:	str	x0, [x19, #24]
  4396e0:	mov	w1, w20
  4396e4:	mov	x0, x19
  4396e8:	bl	4390b0 <nftw@plt+0x363c0>
  4396ec:	mov	x6, x0
  4396f0:	cbz	w20, 439744 <nftw@plt+0x36a54>
  4396f4:	ldr	w0, [x19, #16]
  4396f8:	tbz	w0, #0, 439744 <nftw@plt+0x36a54>
  4396fc:	ldr	x1, [x19, #24]
  439700:	ldrb	w0, [x1]
  439704:	cmp	w0, #0x2e
  439708:	b.ne	439744 <nftw@plt+0x36a54>  // b.any
  43970c:	ldrb	w0, [x1, #1]
  439710:	sub	w2, w0, #0x61
  439714:	cmp	w0, #0x5f
  439718:	and	w2, w2, #0xff
  43971c:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  439720:	b.ls	439754 <nftw@plt+0x36a64>  // b.plast
  439724:	sub	w0, w0, #0x30
  439728:	and	w0, w0, #0xff
  43972c:	cmp	w0, #0x9
  439730:	b.hi	439744 <nftw@plt+0x36a54>  // b.pmore
  439734:	mov	x2, x1
  439738:	b	439770 <nftw@plt+0x36a80>
  43973c:	cbz	w20, 4396c8 <nftw@plt+0x369d8>
  439740:	mov	x6, #0x0                   	// #0
  439744:	mov	x0, x6
  439748:	ldp	x19, x20, [sp, #16]
  43974c:	ldp	x29, x30, [sp], #32
  439750:	ret
  439754:	add	x2, x1, #0x2
  439758:	ldrb	w3, [x2]
  43975c:	sub	w0, w3, #0x61
  439760:	cmp	w3, #0x5f
  439764:	and	w0, w0, #0xff
  439768:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  43976c:	b.ls	4397a8 <nftw@plt+0x36ab8>  // b.plast
  439770:	ldrb	w0, [x2]
  439774:	cmp	w0, #0x2e
  439778:	b.eq	4397b0 <nftw@plt+0x36ac0>  // b.none
  43977c:	str	x2, [x19, #24]
  439780:	mov	x0, x19
  439784:	sub	w2, w2, w1
  439788:	bl	437a78 <nftw@plt+0x34d88>
  43978c:	mov	x3, x0
  439790:	mov	x2, x6
  439794:	mov	x0, x19
  439798:	mov	w1, #0x4e                  	// #78
  43979c:	bl	435138 <nftw@plt+0x32448>
  4397a0:	mov	x6, x0
  4397a4:	b	4396fc <nftw@plt+0x36a0c>
  4397a8:	add	x2, x2, #0x1
  4397ac:	b	439758 <nftw@plt+0x36a68>
  4397b0:	ldrb	w0, [x2, #1]
  4397b4:	sub	w0, w0, #0x30
  4397b8:	and	w0, w0, #0xff
  4397bc:	cmp	w0, #0x9
  4397c0:	b.hi	43977c <nftw@plt+0x36a8c>  // b.pmore
  4397c4:	add	x2, x2, #0x2
  4397c8:	ldrb	w0, [x2]
  4397cc:	sub	w0, w0, #0x30
  4397d0:	and	w0, w0, #0xff
  4397d4:	cmp	w0, #0x9
  4397d8:	b.hi	439770 <nftw@plt+0x36a80>  // b.pmore
  4397dc:	add	x2, x2, #0x1
  4397e0:	b	4397c8 <nftw@plt+0x36ad8>
  4397e4:	ldr	x1, [x0, #24]
  4397e8:	ldrb	w2, [x1]
  4397ec:	cmp	w2, #0x4c
  4397f0:	b.eq	43980c <nftw@plt+0x36b1c>  // b.none
  4397f4:	mov	x0, #0x0                   	// #0
  4397f8:	ret
  4397fc:	mov	x0, #0x0                   	// #0
  439800:	ldr	x19, [sp, #16]
  439804:	ldp	x29, x30, [sp], #32
  439808:	ret
  43980c:	stp	x29, x30, [sp, #-32]!
  439810:	add	x2, x1, #0x1
  439814:	mov	x29, sp
  439818:	str	x19, [sp, #16]
  43981c:	mov	x19, x0
  439820:	str	x2, [x0, #24]
  439824:	mov	w2, #0x5a                  	// #90
  439828:	ldrb	w1, [x1, #1]
  43982c:	cmp	w1, #0x5f
  439830:	ccmp	w1, w2, #0x4, ne  // ne = any
  439834:	b.ne	43985c <nftw@plt+0x36b6c>  // b.any
  439838:	mov	w1, #0x0                   	// #0
  43983c:	bl	43969c <nftw@plt+0x369ac>
  439840:	ldr	x1, [x19, #24]
  439844:	ldrb	w2, [x1]
  439848:	cmp	w2, #0x45
  43984c:	b.ne	4397fc <nftw@plt+0x36b0c>  // b.any
  439850:	add	x1, x1, #0x1
  439854:	str	x1, [x19, #24]
  439858:	b	439800 <nftw@plt+0x36b10>
  43985c:	bl	437ec0 <nftw@plt+0x351d0>
  439860:	mov	x6, x0
  439864:	cbz	x0, 4397fc <nftw@plt+0x36b0c>
  439868:	ldr	w0, [x0]
  43986c:	cmp	w0, #0x27
  439870:	b.ne	439890 <nftw@plt+0x36ba0>  // b.any
  439874:	ldr	x1, [x6, #8]
  439878:	ldr	w0, [x1, #28]
  43987c:	cbz	w0, 439890 <nftw@plt+0x36ba0>
  439880:	ldr	w1, [x1, #8]
  439884:	ldr	w0, [x19, #72]
  439888:	sub	w0, w0, w1
  43988c:	str	w0, [x19, #72]
  439890:	ldr	x0, [x19, #24]
  439894:	ldrb	w1, [x0]
  439898:	cmp	w1, #0x6e
  43989c:	b.ne	4398e4 <nftw@plt+0x36bf4>  // b.any
  4398a0:	add	x0, x0, #0x1
  4398a4:	mov	w7, #0x3e                  	// #62
  4398a8:	str	x0, [x19, #24]
  4398ac:	ldr	x1, [x19, #24]
  4398b0:	ldr	x2, [x19, #24]
  4398b4:	ldrb	w0, [x2]
  4398b8:	cmp	w0, #0x45
  4398bc:	b.ne	4398ec <nftw@plt+0x36bfc>  // b.any
  4398c0:	sub	w2, w2, w1
  4398c4:	mov	x0, x19
  4398c8:	bl	437a78 <nftw@plt+0x34d88>
  4398cc:	mov	x3, x0
  4398d0:	mov	x2, x6
  4398d4:	mov	w1, w7
  4398d8:	mov	x0, x19
  4398dc:	bl	435138 <nftw@plt+0x32448>
  4398e0:	b	439840 <nftw@plt+0x36b50>
  4398e4:	mov	w7, #0x3d                  	// #61
  4398e8:	b	4398ac <nftw@plt+0x36bbc>
  4398ec:	cbz	w0, 4397fc <nftw@plt+0x36b0c>
  4398f0:	add	x2, x2, #0x1
  4398f4:	str	x2, [x19, #24]
  4398f8:	b	4398b0 <nftw@plt+0x36bc0>
  4398fc:	ldr	x1, [x0, #24]
  439900:	ldrb	w2, [x1]
  439904:	cmp	w2, #0x4c
  439908:	b.ne	439910 <nftw@plt+0x36c20>  // b.any
  43990c:	b	4397e4 <nftw@plt+0x36af4>
  439910:	cmp	w2, #0x54
  439914:	b.ne	43991c <nftw@plt+0x36c2c>  // b.any
  439918:	b	4355c4 <nftw@plt+0x328d4>
  43991c:	stp	x29, x30, [sp, #-48]!
  439920:	cmp	w2, #0x73
  439924:	mov	x29, sp
  439928:	stp	x19, x20, [sp, #16]
  43992c:	mov	x19, x0
  439930:	stp	x21, x22, [sp, #32]
  439934:	b.ne	4399d8 <nftw@plt+0x36ce8>  // b.any
  439938:	ldrb	w3, [x1, #1]
  43993c:	cmp	w3, #0x72
  439940:	b.ne	4399b4 <nftw@plt+0x36cc4>  // b.any
  439944:	add	x1, x1, #0x2
  439948:	str	x1, [x0, #24]
  43994c:	bl	437ec0 <nftw@plt+0x351d0>
  439950:	mov	x20, x0
  439954:	mov	x0, x19
  439958:	bl	4387fc <nftw@plt+0x35b0c>
  43995c:	mov	x21, x0
  439960:	ldr	x0, [x19, #24]
  439964:	ldrb	w0, [x0]
  439968:	cmp	w0, #0x49
  43996c:	b.eq	439990 <nftw@plt+0x36ca0>  // b.none
  439970:	mov	x3, x21
  439974:	mov	x2, x20
  439978:	mov	w1, #0x1                   	// #1
  43997c:	mov	x0, x19
  439980:	ldp	x19, x20, [sp, #16]
  439984:	ldp	x21, x22, [sp, #32]
  439988:	ldp	x29, x30, [sp], #48
  43998c:	b	435138 <nftw@plt+0x32448>
  439990:	mov	x0, x19
  439994:	bl	43a044 <nftw@plt+0x37354>
  439998:	mov	x3, x0
  43999c:	mov	x2, x21
  4399a0:	mov	x0, x19
  4399a4:	mov	w1, #0x4                   	// #4
  4399a8:	bl	435138 <nftw@plt+0x32448>
  4399ac:	mov	x3, x0
  4399b0:	b	439974 <nftw@plt+0x36c84>
  4399b4:	cmp	w3, #0x70
  4399b8:	b.ne	439ac4 <nftw@plt+0x36dd4>  // b.any
  4399bc:	add	x1, x1, #0x2
  4399c0:	str	x1, [x0, #24]
  4399c4:	bl	4398fc <nftw@plt+0x36c0c>
  4399c8:	mov	x2, x0
  4399cc:	mov	x3, #0x0                   	// #0
  4399d0:	mov	w1, #0x4b                  	// #75
  4399d4:	b	43997c <nftw@plt+0x36c8c>
  4399d8:	cmp	w2, #0x66
  4399dc:	b.ne	439a60 <nftw@plt+0x36d70>  // b.any
  4399e0:	ldrb	w3, [x1, #1]
  4399e4:	cmp	w3, #0x70
  4399e8:	b.ne	439ac4 <nftw@plt+0x36dd4>  // b.any
  4399ec:	add	x2, x1, #0x2
  4399f0:	str	x2, [x0, #24]
  4399f4:	ldrb	w2, [x1, #2]
  4399f8:	cmp	w2, #0x54
  4399fc:	b.ne	439a40 <nftw@plt+0x36d50>  // b.any
  439a00:	add	x1, x1, #0x3
  439a04:	mov	w4, #0x0                   	// #0
  439a08:	str	x1, [x0, #24]
  439a0c:	mov	x0, x19
  439a10:	bl	435104 <nftw@plt+0x32414>
  439a14:	mov	x20, x0
  439a18:	cbz	x0, 439a2c <nftw@plt+0x36d3c>
  439a1c:	sxtw	x4, w4
  439a20:	mov	w0, #0x6                   	// #6
  439a24:	str	w0, [x20]
  439a28:	str	x4, [x20, #8]
  439a2c:	mov	x0, x20
  439a30:	ldp	x19, x20, [sp, #16]
  439a34:	ldp	x21, x22, [sp, #32]
  439a38:	ldp	x29, x30, [sp], #48
  439a3c:	ret
  439a40:	bl	435540 <nftw@plt+0x32850>
  439a44:	mvn	x1, x0
  439a48:	tst	x1, #0x7fffffff
  439a4c:	b.ne	439a58 <nftw@plt+0x36d68>  // b.any
  439a50:	mov	x20, #0x0                   	// #0
  439a54:	b	439a2c <nftw@plt+0x36d3c>
  439a58:	add	w4, w0, #0x1
  439a5c:	b	439a0c <nftw@plt+0x36d1c>
  439a60:	sub	w0, w2, #0x30
  439a64:	and	w0, w0, #0xff
  439a68:	cmp	w0, #0x9
  439a6c:	b.ls	439a8c <nftw@plt+0x36d9c>  // b.plast
  439a70:	cmp	w2, #0x6f
  439a74:	b.ne	439ac4 <nftw@plt+0x36dd4>  // b.any
  439a78:	ldrb	w0, [x1, #1]
  439a7c:	cmp	w0, #0x6e
  439a80:	b.ne	439b2c <nftw@plt+0x36e3c>  // b.any
  439a84:	add	x1, x1, #0x2
  439a88:	str	x1, [x19, #24]
  439a8c:	mov	x0, x19
  439a90:	bl	4387fc <nftw@plt+0x35b0c>
  439a94:	mov	x20, x0
  439a98:	cbz	x0, 439a50 <nftw@plt+0x36d60>
  439a9c:	ldr	x0, [x19, #24]
  439aa0:	ldrb	w0, [x0]
  439aa4:	cmp	w0, #0x49
  439aa8:	b.ne	439a2c <nftw@plt+0x36d3c>  // b.any
  439aac:	mov	x0, x19
  439ab0:	bl	43a044 <nftw@plt+0x37354>
  439ab4:	mov	x2, x20
  439ab8:	mov	x3, x0
  439abc:	mov	w1, #0x4                   	// #4
  439ac0:	b	43997c <nftw@plt+0x36c8c>
  439ac4:	cmp	w2, #0x69
  439ac8:	mov	w0, #0x74                  	// #116
  439acc:	ccmp	w2, w0, #0x4, ne  // ne = any
  439ad0:	b.ne	439b2c <nftw@plt+0x36e3c>  // b.any
  439ad4:	ldrb	w0, [x1, #1]
  439ad8:	cmp	w0, #0x6c
  439adc:	b.ne	439b2c <nftw@plt+0x36e3c>  // b.any
  439ae0:	add	x1, x1, #0x2
  439ae4:	str	x1, [x19, #24]
  439ae8:	cmp	w2, #0x74
  439aec:	b.ne	439b24 <nftw@plt+0x36e34>  // b.any
  439af0:	mov	x0, x19
  439af4:	bl	437ec0 <nftw@plt+0x351d0>
  439af8:	mov	x20, x0
  439afc:	ldr	x0, [x19, #24]
  439b00:	ldrb	w0, [x0, #1]
  439b04:	cbz	w0, 439a50 <nftw@plt+0x36d60>
  439b08:	mov	w1, #0x45                  	// #69
  439b0c:	mov	x0, x19
  439b10:	bl	43a070 <nftw@plt+0x37380>
  439b14:	mov	x3, x0
  439b18:	mov	x2, x20
  439b1c:	mov	w1, #0x31                  	// #49
  439b20:	b	43997c <nftw@plt+0x36c8c>
  439b24:	mov	x20, #0x0                   	// #0
  439b28:	b	439afc <nftw@plt+0x36e0c>
  439b2c:	mov	x0, x19
  439b30:	bl	438688 <nftw@plt+0x35998>
  439b34:	mov	x20, x0
  439b38:	cbz	x0, 439a50 <nftw@plt+0x36d60>
  439b3c:	ldr	w0, [x0]
  439b40:	cmp	w0, #0x32
  439b44:	b.ne	439b94 <nftw@plt+0x36ea4>  // b.any
  439b48:	ldr	x0, [x20, #8]
  439b4c:	ldr	x21, [x0]
  439b50:	ldr	w0, [x0, #16]
  439b54:	sub	w1, w0, #0x2
  439b58:	ldr	w0, [x19, #72]
  439b5c:	add	w0, w0, w1
  439b60:	str	w0, [x19, #72]
  439b64:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  439b68:	mov	x0, x21
  439b6c:	add	x1, x1, #0xa4d
  439b70:	bl	402a00 <strcmp@plt>
  439b74:	ldr	x1, [x20, #8]
  439b78:	cbnz	w0, 439bcc <nftw@plt+0x36edc>
  439b7c:	mov	x0, x19
  439b80:	bl	437ec0 <nftw@plt+0x351d0>
  439b84:	mov	x3, x0
  439b88:	mov	x2, x20
  439b8c:	mov	w1, #0x37                  	// #55
  439b90:	b	43997c <nftw@plt+0x36c8c>
  439b94:	cmp	w0, #0x34
  439b98:	b.eq	439c74 <nftw@plt+0x36f84>  // b.none
  439b9c:	b.hi	439a50 <nftw@plt+0x36d60>  // b.pmore
  439ba0:	cmp	w0, #0x33
  439ba4:	b.ne	439a50 <nftw@plt+0x36d60>  // b.any
  439ba8:	ldr	w1, [x20, #8]
  439bac:	cmp	w1, #0x3
  439bb0:	b.hi	439a50 <nftw@plt+0x36d60>  // b.pmore
  439bb4:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  439bb8:	add	x0, x0, #0x8b4
  439bbc:	ldrb	w0, [x0, w1, uxtw]
  439bc0:	adr	x1, 439bcc <nftw@plt+0x36edc>
  439bc4:	add	x0, x1, w0, sxtb #2
  439bc8:	br	x0
  439bcc:	ldr	w22, [x1, #20]
  439bd0:	cmp	w22, #0x3
  439bd4:	b.hi	439a50 <nftw@plt+0x36d60>  // b.pmore
  439bd8:	adrp	x0, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  439bdc:	add	x0, x0, #0x8b8
  439be0:	ldrb	w0, [x0, w22, uxtw]
  439be4:	adr	x1, 439bf0 <nftw@plt+0x36f00>
  439be8:	add	x0, x1, w0, sxtb #2
  439bec:	br	x0
  439bf0:	mov	x2, x20
  439bf4:	mov	x3, #0x0                   	// #0
  439bf8:	mov	w1, #0x36                  	// #54
  439bfc:	b	43997c <nftw@plt+0x36c8c>
  439c00:	ldrb	w0, [x21]
  439c04:	mov	w1, #0x6d                  	// #109
  439c08:	cmp	w0, #0x70
  439c0c:	ccmp	w0, w1, #0x4, ne  // ne = any
  439c10:	b.ne	439c38 <nftw@plt+0x36f48>  // b.any
  439c14:	ldrb	w1, [x21, #1]
  439c18:	cmp	w1, w0
  439c1c:	b.ne	439c38 <nftw@plt+0x36f48>  // b.any
  439c20:	ldr	x0, [x19, #24]
  439c24:	ldrb	w1, [x0]
  439c28:	cmp	w1, #0x5f
  439c2c:	b.ne	439c3c <nftw@plt+0x36f4c>  // b.any
  439c30:	add	x0, x0, #0x1
  439c34:	str	x0, [x19, #24]
  439c38:	mov	w22, #0x0                   	// #0
  439c3c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  439c40:	mov	x0, x21
  439c44:	add	x1, x1, #0x67a
  439c48:	bl	402a00 <strcmp@plt>
  439c4c:	cbnz	w0, 439ca0 <nftw@plt+0x36fb0>
  439c50:	mov	x0, x19
  439c54:	bl	439f8c <nftw@plt+0x3729c>
  439c58:	mov	x3, x0
  439c5c:	cbz	w22, 439b88 <nftw@plt+0x36e98>
  439c60:	mov	x2, x0
  439c64:	mov	w1, #0x39                  	// #57
  439c68:	mov	x0, x19
  439c6c:	bl	435138 <nftw@plt+0x32448>
  439c70:	b	439b84 <nftw@plt+0x36e94>
  439c74:	ldr	x0, [x19, #24]
  439c78:	ldrb	w1, [x0]
  439c7c:	cmp	w1, #0x5f
  439c80:	b.ne	439c9c <nftw@plt+0x36fac>  // b.any
  439c84:	add	x0, x0, #0x1
  439c88:	str	x0, [x19, #24]
  439c8c:	mov	w1, #0x45                  	// #69
  439c90:	mov	x0, x19
  439c94:	bl	43a070 <nftw@plt+0x37380>
  439c98:	b	439b84 <nftw@plt+0x36e94>
  439c9c:	mov	w22, #0x0                   	// #0
  439ca0:	mov	x0, x19
  439ca4:	bl	4398fc <nftw@plt+0x36c0c>
  439ca8:	b	439c58 <nftw@plt+0x36f68>
  439cac:	ldr	x0, [x20, #8]
  439cb0:	bl	43571c <nftw@plt+0x32a2c>
  439cb4:	cbz	w0, 439d0c <nftw@plt+0x3701c>
  439cb8:	mov	x0, x19
  439cbc:	bl	437ec0 <nftw@plt+0x351d0>
  439cc0:	mov	x22, x0
  439cc4:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  439cc8:	mov	x0, x21
  439ccc:	add	x1, x1, #0x683
  439cd0:	bl	402a00 <strcmp@plt>
  439cd4:	cbnz	w0, 439d2c <nftw@plt+0x3703c>
  439cd8:	mov	x0, x19
  439cdc:	mov	w1, #0x45                  	// #69
  439ce0:	bl	43a070 <nftw@plt+0x37380>
  439ce4:	mov	x21, x0
  439ce8:	mov	x3, x21
  439cec:	mov	x2, x22
  439cf0:	mov	w1, #0x39                  	// #57
  439cf4:	mov	x0, x19
  439cf8:	bl	435138 <nftw@plt+0x32448>
  439cfc:	mov	x3, x0
  439d00:	mov	x2, x20
  439d04:	mov	w1, #0x38                  	// #56
  439d08:	b	43997c <nftw@plt+0x36c8c>
  439d0c:	ldrb	w0, [x21]
  439d10:	cmp	w0, #0x66
  439d14:	mov	x0, x19
  439d18:	b.ne	439d24 <nftw@plt+0x37034>  // b.any
  439d1c:	bl	438688 <nftw@plt+0x35998>
  439d20:	b	439cc0 <nftw@plt+0x36fd0>
  439d24:	bl	4398fc <nftw@plt+0x36c0c>
  439d28:	b	439cc0 <nftw@plt+0x36fd0>
  439d2c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  439d30:	mov	x0, x21
  439d34:	add	x1, x1, #0x7c0
  439d38:	bl	402a00 <strcmp@plt>
  439d3c:	cbz	w0, 439d54 <nftw@plt+0x37064>
  439d40:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  439d44:	mov	x0, x21
  439d48:	add	x1, x1, #0x74f
  439d4c:	bl	402a00 <strcmp@plt>
  439d50:	cbnz	w0, 439d90 <nftw@plt+0x370a0>
  439d54:	mov	x0, x19
  439d58:	bl	4387fc <nftw@plt+0x35b0c>
  439d5c:	mov	x21, x0
  439d60:	ldr	x0, [x19, #24]
  439d64:	ldrb	w0, [x0]
  439d68:	cmp	w0, #0x49
  439d6c:	b.ne	439ce8 <nftw@plt+0x36ff8>  // b.any
  439d70:	mov	x0, x19
  439d74:	bl	43a044 <nftw@plt+0x37354>
  439d78:	mov	x2, x21
  439d7c:	mov	x3, x0
  439d80:	mov	w1, #0x4                   	// #4
  439d84:	mov	x0, x19
  439d88:	bl	435138 <nftw@plt+0x32448>
  439d8c:	b	439ce4 <nftw@plt+0x36ff4>
  439d90:	mov	x0, x19
  439d94:	bl	4398fc <nftw@plt+0x36c0c>
  439d98:	b	439ce4 <nftw@plt+0x36ff4>
  439d9c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  439da0:	mov	x0, x21
  439da4:	add	x1, x1, #0x686
  439da8:	bl	402a00 <strcmp@plt>
  439dac:	cbnz	w0, 439e0c <nftw@plt+0x3711c>
  439db0:	mov	x0, x19
  439db4:	bl	4398fc <nftw@plt+0x36c0c>
  439db8:	mov	x21, x0
  439dbc:	mov	x0, x19
  439dc0:	bl	4398fc <nftw@plt+0x36c0c>
  439dc4:	mov	x22, x0
  439dc8:	mov	x0, x19
  439dcc:	bl	4398fc <nftw@plt+0x36c0c>
  439dd0:	cbz	x0, 439a50 <nftw@plt+0x36d60>
  439dd4:	mov	x3, x0
  439dd8:	mov	x2, x22
  439ddc:	mov	w1, #0x3c                  	// #60
  439de0:	mov	x0, x19
  439de4:	bl	435138 <nftw@plt+0x32448>
  439de8:	mov	x3, x0
  439dec:	mov	x2, x21
  439df0:	mov	w1, #0x3b                  	// #59
  439df4:	mov	x0, x19
  439df8:	bl	435138 <nftw@plt+0x32448>
  439dfc:	mov	x2, x20
  439e00:	mov	x3, x0
  439e04:	mov	w1, #0x3a                  	// #58
  439e08:	b	43997c <nftw@plt+0x36c8c>
  439e0c:	ldrb	w0, [x21]
  439e10:	cmp	w0, #0x66
  439e14:	b.ne	439e24 <nftw@plt+0x37134>  // b.any
  439e18:	mov	x0, x19
  439e1c:	bl	438688 <nftw@plt+0x35998>
  439e20:	b	439db8 <nftw@plt+0x370c8>
  439e24:	cmp	w0, #0x6e
  439e28:	b.ne	439a50 <nftw@plt+0x36d60>  // b.any
  439e2c:	ldrb	w0, [x21, #1]
  439e30:	mov	w1, #0x61                  	// #97
  439e34:	cmp	w0, #0x77
  439e38:	ccmp	w0, w1, #0x4, ne  // ne = any
  439e3c:	b.ne	439a50 <nftw@plt+0x36d60>  // b.any
  439e40:	mov	w1, #0x5f                  	// #95
  439e44:	mov	x0, x19
  439e48:	bl	43a070 <nftw@plt+0x37380>
  439e4c:	mov	x21, x0
  439e50:	mov	x0, x19
  439e54:	bl	437ec0 <nftw@plt+0x351d0>
  439e58:	mov	x22, x0
  439e5c:	ldr	x0, [x19, #24]
  439e60:	ldrb	w1, [x0]
  439e64:	cmp	w1, #0x45
  439e68:	b.ne	439e7c <nftw@plt+0x3718c>  // b.any
  439e6c:	add	x0, x0, #0x1
  439e70:	str	x0, [x19, #24]
  439e74:	mov	x0, #0x0                   	// #0
  439e78:	b	439dd4 <nftw@plt+0x370e4>
  439e7c:	cmp	w1, #0x70
  439e80:	b.ne	439ea8 <nftw@plt+0x371b8>  // b.any
  439e84:	ldrb	w1, [x0, #1]
  439e88:	cmp	w1, #0x69
  439e8c:	b.ne	439a50 <nftw@plt+0x36d60>  // b.any
  439e90:	add	x0, x0, #0x2
  439e94:	str	x0, [x19, #24]
  439e98:	mov	w1, #0x45                  	// #69
  439e9c:	mov	x0, x19
  439ea0:	bl	43a070 <nftw@plt+0x37380>
  439ea4:	b	439dd4 <nftw@plt+0x370e4>
  439ea8:	cmp	w1, #0x69
  439eac:	b.ne	439a50 <nftw@plt+0x36d60>  // b.any
  439eb0:	ldrb	w0, [x0, #1]
  439eb4:	cmp	w0, #0x6c
  439eb8:	b.ne	439a50 <nftw@plt+0x36d60>  // b.any
  439ebc:	mov	x0, x19
  439ec0:	bl	4398fc <nftw@plt+0x36c0c>
  439ec4:	b	439dd4 <nftw@plt+0x370e4>
  439ec8:	stp	x29, x30, [sp, #-32]!
  439ecc:	mov	w1, #0x1                   	// #1
  439ed0:	mov	x29, sp
  439ed4:	stp	x19, x20, [sp, #16]
  439ed8:	mov	x19, x0
  439edc:	ldr	w20, [x0, #76]
  439ee0:	str	w1, [x0, #76]
  439ee4:	bl	4398fc <nftw@plt+0x36c0c>
  439ee8:	str	w20, [x19, #76]
  439eec:	ldp	x19, x20, [sp, #16]
  439ef0:	ldp	x29, x30, [sp], #32
  439ef4:	ret
  439ef8:	ldr	x2, [x0, #24]
  439efc:	ldrb	w1, [x2]
  439f00:	cmp	w1, #0x4c
  439f04:	b.eq	439f74 <nftw@plt+0x37284>  // b.none
  439f08:	stp	x29, x30, [sp, #-32]!
  439f0c:	mov	x29, sp
  439f10:	str	x19, [sp, #16]
  439f14:	mov	x19, x0
  439f18:	b.hi	439f3c <nftw@plt+0x3724c>  // b.pmore
  439f1c:	sub	w1, w1, #0x49
  439f20:	and	w1, w1, #0xff
  439f24:	cmp	w1, #0x1
  439f28:	b.ls	439f78 <nftw@plt+0x37288>  // b.plast
  439f2c:	mov	x0, x19
  439f30:	ldr	x19, [sp, #16]
  439f34:	ldp	x29, x30, [sp], #32
  439f38:	b	437ec0 <nftw@plt+0x351d0>
  439f3c:	cmp	w1, #0x58
  439f40:	b.ne	439f2c <nftw@plt+0x3723c>  // b.any
  439f44:	add	x2, x2, #0x1
  439f48:	str	x2, [x0, #24]
  439f4c:	bl	439ec8 <nftw@plt+0x371d8>
  439f50:	ldr	x1, [x19, #24]
  439f54:	ldrb	w2, [x1]
  439f58:	cmp	w2, #0x45
  439f5c:	b.ne	439f84 <nftw@plt+0x37294>  // b.any
  439f60:	add	x1, x1, #0x1
  439f64:	str	x1, [x19, #24]
  439f68:	ldr	x19, [sp, #16]
  439f6c:	ldp	x29, x30, [sp], #32
  439f70:	ret
  439f74:	b	4397e4 <nftw@plt+0x36af4>
  439f78:	ldr	x19, [sp, #16]
  439f7c:	ldp	x29, x30, [sp], #32
  439f80:	b	43a044 <nftw@plt+0x37354>
  439f84:	mov	x0, #0x0                   	// #0
  439f88:	b	439f68 <nftw@plt+0x37278>
  439f8c:	stp	x29, x30, [sp, #-64]!
  439f90:	mov	x29, sp
  439f94:	ldr	x1, [x0, #24]
  439f98:	stp	x19, x20, [sp, #16]
  439f9c:	mov	x19, x0
  439fa0:	str	x21, [sp, #32]
  439fa4:	ldr	x21, [x0, #64]
  439fa8:	ldrb	w2, [x1]
  439fac:	cmp	w2, #0x45
  439fb0:	b.ne	439fd8 <nftw@plt+0x372e8>  // b.any
  439fb4:	add	x1, x1, #0x1
  439fb8:	mov	x3, #0x0                   	// #0
  439fbc:	ldr	x21, [sp, #32]
  439fc0:	str	x1, [x0, #24]
  439fc4:	ldp	x19, x20, [sp, #16]
  439fc8:	mov	x2, #0x0                   	// #0
  439fcc:	ldp	x29, x30, [sp], #64
  439fd0:	mov	w1, #0x2f                  	// #47
  439fd4:	b	435138 <nftw@plt+0x32448>
  439fd8:	add	x20, sp, #0x38
  439fdc:	str	xzr, [sp, #56]
  439fe0:	mov	x0, x19
  439fe4:	bl	439ef8 <nftw@plt+0x37208>
  439fe8:	mov	x2, x0
  439fec:	cbnz	x0, 43a004 <nftw@plt+0x37314>
  439ff0:	mov	x0, #0x0                   	// #0
  439ff4:	ldp	x19, x20, [sp, #16]
  439ff8:	ldr	x21, [sp, #32]
  439ffc:	ldp	x29, x30, [sp], #64
  43a000:	ret
  43a004:	mov	x0, x19
  43a008:	mov	x3, #0x0                   	// #0
  43a00c:	mov	w1, #0x2f                  	// #47
  43a010:	bl	435138 <nftw@plt+0x32448>
  43a014:	str	x0, [x20]
  43a018:	cbz	x0, 439ff0 <nftw@plt+0x37300>
  43a01c:	add	x20, x0, #0x10
  43a020:	ldr	x0, [x19, #24]
  43a024:	ldrb	w1, [x0]
  43a028:	cmp	w1, #0x45
  43a02c:	b.ne	439fe0 <nftw@plt+0x372f0>  // b.any
  43a030:	add	x0, x0, #0x1
  43a034:	str	x0, [x19, #24]
  43a038:	str	x21, [x19, #64]
  43a03c:	ldr	x0, [sp, #56]
  43a040:	b	439ff4 <nftw@plt+0x37304>
  43a044:	ldr	x3, [x0, #24]
  43a048:	ldrb	w1, [x3]
  43a04c:	sub	w1, w1, #0x49
  43a050:	and	w1, w1, #0xff
  43a054:	cmp	w1, #0x1
  43a058:	b.hi	43a068 <nftw@plt+0x37378>  // b.pmore
  43a05c:	add	x3, x3, #0x1
  43a060:	str	x3, [x0, #24]
  43a064:	b	439f8c <nftw@plt+0x3729c>
  43a068:	mov	x0, #0x0                   	// #0
  43a06c:	ret
  43a070:	stp	x29, x30, [sp, #-64]!
  43a074:	mov	x29, sp
  43a078:	ldr	x2, [x0, #24]
  43a07c:	stp	x19, x20, [sp, #16]
  43a080:	mov	x19, x0
  43a084:	str	x21, [sp, #32]
  43a088:	str	xzr, [sp, #56]
  43a08c:	ldrb	w3, [x2]
  43a090:	cmp	w3, w1, uxtb
  43a094:	b.ne	43a0bc <nftw@plt+0x373cc>  // b.any
  43a098:	add	x2, x2, #0x1
  43a09c:	mov	x3, #0x0                   	// #0
  43a0a0:	ldr	x21, [sp, #32]
  43a0a4:	str	x2, [x0, #24]
  43a0a8:	ldp	x19, x20, [sp, #16]
  43a0ac:	mov	w1, #0x2e                  	// #46
  43a0b0:	ldp	x29, x30, [sp], #64
  43a0b4:	mov	x2, #0x0                   	// #0
  43a0b8:	b	435138 <nftw@plt+0x32448>
  43a0bc:	and	w21, w1, #0xff
  43a0c0:	add	x20, sp, #0x38
  43a0c4:	mov	x0, x19
  43a0c8:	bl	439ec8 <nftw@plt+0x371d8>
  43a0cc:	mov	x2, x0
  43a0d0:	cbnz	x0, 43a0e8 <nftw@plt+0x373f8>
  43a0d4:	mov	x0, #0x0                   	// #0
  43a0d8:	ldp	x19, x20, [sp, #16]
  43a0dc:	ldr	x21, [sp, #32]
  43a0e0:	ldp	x29, x30, [sp], #64
  43a0e4:	ret
  43a0e8:	mov	x0, x19
  43a0ec:	mov	x3, #0x0                   	// #0
  43a0f0:	mov	w1, #0x2e                  	// #46
  43a0f4:	bl	435138 <nftw@plt+0x32448>
  43a0f8:	str	x0, [x20]
  43a0fc:	cbz	x0, 43a0d4 <nftw@plt+0x373e4>
  43a100:	add	x20, x0, #0x10
  43a104:	ldr	x0, [x19, #24]
  43a108:	ldrb	w1, [x0]
  43a10c:	cmp	w1, w21
  43a110:	b.ne	43a0c4 <nftw@plt+0x373d4>  // b.any
  43a114:	add	x0, x0, #0x1
  43a118:	str	x0, [x19, #24]
  43a11c:	ldr	x0, [sp, #56]
  43a120:	b	43a0d8 <nftw@plt+0x373e8>
  43a124:	stp	x29, x30, [sp, #-80]!
  43a128:	cmp	w2, #0x0
  43a12c:	mov	x29, sp
  43a130:	stp	x19, x20, [sp, #16]
  43a134:	mov	x19, x0
  43a138:	mov	x20, x1
  43a13c:	ldr	x0, [x0, #24]
  43a140:	stp	x21, x22, [sp, #32]
  43a144:	mov	w21, w2
  43a148:	stp	x23, x24, [sp, #48]
  43a14c:	mov	x22, x1
  43a150:	mov	w24, #0x1d                  	// #29
  43a154:	str	x25, [sp, #64]
  43a158:	mov	w25, #0x1e                  	// #30
  43a15c:	mov	w23, #0x1c                  	// #28
  43a160:	ldrb	w3, [x0]
  43a164:	mov	w0, #0x1b                  	// #27
  43a168:	csel	w25, w25, w0, ne  // ne = any
  43a16c:	mov	w0, #0x1a                  	// #26
  43a170:	csel	w24, w24, w0, ne  // ne = any
  43a174:	mov	w0, #0x19                  	// #25
  43a178:	csel	w23, w23, w0, ne  // ne = any
  43a17c:	ldr	x4, [x19, #24]
  43a180:	mov	x0, x4
  43a184:	bl	4356c4 <nftw@plt+0x329d4>
  43a188:	cbnz	w0, 43a1e0 <nftw@plt+0x374f0>
  43a18c:	cmp	w3, #0x46
  43a190:	eor	w21, w21, #0x1
  43a194:	cset	w0, eq  // eq = none
  43a198:	tst	w21, w0
  43a19c:	b.eq	43a34c <nftw@plt+0x3765c>  // b.none
  43a1a0:	mov	w1, #0x1d                  	// #29
  43a1a4:	mov	w2, #0x1e                  	// #30
  43a1a8:	mov	w3, #0x1c                  	// #28
  43a1ac:	cmp	x22, x20
  43a1b0:	b.eq	43a24c <nftw@plt+0x3755c>  // b.none
  43a1b4:	ldr	x20, [x20]
  43a1b8:	ldr	w0, [x20]
  43a1bc:	cmp	w0, #0x1a
  43a1c0:	b.eq	43a354 <nftw@plt+0x37664>  // b.none
  43a1c4:	cmp	w0, #0x1b
  43a1c8:	b.eq	43a35c <nftw@plt+0x3766c>  // b.none
  43a1cc:	cmp	w0, #0x19
  43a1d0:	b.ne	43a1d8 <nftw@plt+0x374e8>  // b.any
  43a1d4:	str	w3, [x20]
  43a1d8:	add	x20, x20, #0x8
  43a1dc:	b	43a1ac <nftw@plt+0x374bc>
  43a1e0:	add	x0, x4, #0x1
  43a1e4:	str	x0, [x19, #24]
  43a1e8:	cmp	w3, #0x72
  43a1ec:	b.ne	43a208 <nftw@plt+0x37518>  // b.any
  43a1f0:	ldr	w0, [x19, #72]
  43a1f4:	mov	w1, w23
  43a1f8:	add	w0, w0, #0x9
  43a1fc:	str	w0, [x19, #72]
  43a200:	mov	x3, #0x0                   	// #0
  43a204:	b	43a290 <nftw@plt+0x375a0>
  43a208:	cmp	w3, #0x56
  43a20c:	b.ne	43a224 <nftw@plt+0x37534>  // b.any
  43a210:	ldr	w0, [x19, #72]
  43a214:	mov	w1, w24
  43a218:	add	w0, w0, #0x9
  43a21c:	str	w0, [x19, #72]
  43a220:	b	43a200 <nftw@plt+0x37510>
  43a224:	cmp	w3, #0x4b
  43a228:	b.ne	43a240 <nftw@plt+0x37550>  // b.any
  43a22c:	ldr	w0, [x19, #72]
  43a230:	mov	w1, w25
  43a234:	add	w0, w0, #0x6
  43a238:	str	w0, [x19, #72]
  43a23c:	b	43a200 <nftw@plt+0x37510>
  43a240:	ldrb	w0, [x4, #1]
  43a244:	cbnz	w0, 43a268 <nftw@plt+0x37578>
  43a248:	mov	x20, #0x0                   	// #0
  43a24c:	mov	x0, x20
  43a250:	ldp	x19, x20, [sp, #16]
  43a254:	ldp	x21, x22, [sp, #32]
  43a258:	ldp	x23, x24, [sp, #48]
  43a25c:	ldr	x25, [sp, #64]
  43a260:	ldp	x29, x30, [sp], #80
  43a264:	ret
  43a268:	add	x0, x4, #0x2
  43a26c:	str	x0, [x19, #24]
  43a270:	ldrb	w0, [x4, #1]
  43a274:	cmp	w0, #0x78
  43a278:	b.ne	43a2b4 <nftw@plt+0x375c4>  // b.any
  43a27c:	ldr	w0, [x19, #72]
  43a280:	mov	x3, #0x0                   	// #0
  43a284:	mov	w1, #0x4d                  	// #77
  43a288:	add	w0, w0, #0x11
  43a28c:	str	w0, [x19, #72]
  43a290:	mov	x0, x19
  43a294:	mov	x2, #0x0                   	// #0
  43a298:	bl	435138 <nftw@plt+0x32448>
  43a29c:	str	x0, [x22]
  43a2a0:	cbz	x0, 43a248 <nftw@plt+0x37558>
  43a2a4:	add	x22, x0, #0x8
  43a2a8:	ldr	x0, [x19, #24]
  43a2ac:	ldrb	w3, [x0]
  43a2b0:	b	43a17c <nftw@plt+0x3748c>
  43a2b4:	and	w2, w0, #0xffffffdf
  43a2b8:	and	w1, w2, #0xff
  43a2bc:	cmp	w2, #0x4f
  43a2c0:	b.ne	43a308 <nftw@plt+0x37618>  // b.any
  43a2c4:	ldr	w2, [x19, #72]
  43a2c8:	cmp	w0, #0x4f
  43a2cc:	add	w2, w2, #0x9
  43a2d0:	str	w2, [x19, #72]
  43a2d4:	b.ne	43a200 <nftw@plt+0x37510>  // b.any
  43a2d8:	mov	x0, x19
  43a2dc:	bl	439ec8 <nftw@plt+0x371d8>
  43a2e0:	mov	x3, x0
  43a2e4:	cbz	x0, 43a248 <nftw@plt+0x37558>
  43a2e8:	ldr	x0, [x19, #24]
  43a2ec:	ldrb	w1, [x0]
  43a2f0:	cmp	w1, #0x45
  43a2f4:	b.ne	43a248 <nftw@plt+0x37558>  // b.any
  43a2f8:	add	x0, x0, #0x1
  43a2fc:	mov	w1, #0x4f                  	// #79
  43a300:	str	x0, [x19, #24]
  43a304:	b	43a290 <nftw@plt+0x375a0>
  43a308:	cmp	w0, #0x77
  43a30c:	b.ne	43a248 <nftw@plt+0x37558>  // b.any
  43a310:	ldr	w0, [x19, #72]
  43a314:	add	w0, w0, #0x6
  43a318:	str	w0, [x19, #72]
  43a31c:	mov	x0, x19
  43a320:	bl	4385a8 <nftw@plt+0x358b8>
  43a324:	mov	x3, x0
  43a328:	cbz	x0, 43a248 <nftw@plt+0x37558>
  43a32c:	ldr	x0, [x19, #24]
  43a330:	ldrb	w1, [x0]
  43a334:	cmp	w1, #0x45
  43a338:	b.ne	43a248 <nftw@plt+0x37558>  // b.any
  43a33c:	add	x0, x0, #0x1
  43a340:	mov	w1, #0x50                  	// #80
  43a344:	str	x0, [x19, #24]
  43a348:	b	43a290 <nftw@plt+0x375a0>
  43a34c:	mov	x20, x22
  43a350:	b	43a24c <nftw@plt+0x3755c>
  43a354:	str	w1, [x20]
  43a358:	b	43a1d8 <nftw@plt+0x374e8>
  43a35c:	str	w2, [x20]
  43a360:	b	43a1d8 <nftw@plt+0x374e8>
  43a364:	stp	x29, x30, [sp, #-416]!
  43a368:	mov	w4, w0
  43a36c:	mov	x5, x1
  43a370:	mov	x29, sp
  43a374:	str	x19, [sp, #16]
  43a378:	add	x0, x29, #0x28
  43a37c:	str	xzr, [x29, #296]
  43a380:	strb	wzr, [x29, #304]
  43a384:	stp	x2, x3, [x29, #312]
  43a388:	stp	xzr, xzr, [x29, #328]
  43a38c:	stp	xzr, xzr, [x29, #344]
  43a390:	stp	xzr, xzr, [x29, #360]
  43a394:	stp	xzr, xzr, [x29, #376]
  43a398:	stp	xzr, xzr, [x29, #392]
  43a39c:	bl	435258 <nftw@plt+0x32568>
  43a3a0:	ldr	w0, [x29, #348]
  43a3a4:	cmp	w0, #0x7ff
  43a3a8:	b.gt	43a3b0 <nftw@plt+0x376c0>
  43a3ac:	str	wzr, [x29, #348]
  43a3b0:	ldr	w3, [x29, #388]
  43a3b4:	mov	w0, #0x1                   	// #1
  43a3b8:	ldr	w2, [x29, #404]
  43a3bc:	mov	x19, sp
  43a3c0:	cmp	w3, #0x0
  43a3c4:	str	xzr, [x29, #408]
  43a3c8:	mul	w2, w3, w2
  43a3cc:	csel	w3, w3, w0, gt
  43a3d0:	str	w2, [x29, #404]
  43a3d4:	cmp	w2, #0x0
  43a3d8:	sub	sp, sp, w3, sxtw #4
  43a3dc:	csel	w2, w2, w0, gt
  43a3e0:	mov	x1, sp
  43a3e4:	str	x1, [x29, #376]
  43a3e8:	mov	w1, w4
  43a3ec:	sub	sp, sp, w2, sxtw #4
  43a3f0:	mov	x2, x5
  43a3f4:	mov	x0, sp
  43a3f8:	str	x0, [x29, #392]
  43a3fc:	add	x0, x29, #0x28
  43a400:	bl	43722c <nftw@plt+0x3453c>
  43a404:	add	x0, x29, #0x28
  43a408:	mov	sp, x19
  43a40c:	bl	435318 <nftw@plt+0x32628>
  43a410:	ldr	w0, [x29, #344]
  43a414:	mov	sp, x29
  43a418:	cmp	w0, #0x0
  43a41c:	cset	w0, eq  // eq = none
  43a420:	ldr	x19, [sp, #16]
  43a424:	ldp	x29, x30, [sp], #416
  43a428:	ret
  43a42c:	stp	x29, x30, [sp, #-80]!
  43a430:	mov	x29, sp
  43a434:	stp	x19, x20, [sp, #16]
  43a438:	mov	w20, w0
  43a43c:	mov	x19, x3
  43a440:	str	x21, [sp, #32]
  43a444:	mov	x21, x1
  43a448:	stp	xzr, xzr, [sp, #48]
  43a44c:	str	xzr, [sp, #64]
  43a450:	str	wzr, [sp, #72]
  43a454:	cbz	w2, 43a464 <nftw@plt+0x37774>
  43a458:	sxtw	x1, w2
  43a45c:	add	x0, sp, #0x30
  43a460:	bl	435830 <nftw@plt+0x32b40>
  43a464:	adrp	x2, 435000 <nftw@plt+0x32310>
  43a468:	add	x3, sp, #0x30
  43a46c:	add	x2, x2, #0x8a8
  43a470:	mov	x1, x21
  43a474:	mov	w0, w20
  43a478:	bl	43a364 <nftw@plt+0x37674>
  43a47c:	cbnz	w0, 43a4a0 <nftw@plt+0x377b0>
  43a480:	ldr	x0, [sp, #48]
  43a484:	bl	402a80 <free@plt>
  43a488:	str	xzr, [x19]
  43a48c:	mov	x0, #0x0                   	// #0
  43a490:	ldp	x19, x20, [sp, #16]
  43a494:	ldr	x21, [sp, #32]
  43a498:	ldp	x29, x30, [sp], #80
  43a49c:	ret
  43a4a0:	ldr	w0, [sp, #72]
  43a4a4:	cmp	w0, #0x0
  43a4a8:	ldr	x0, [sp, #64]
  43a4ac:	csinc	x0, x0, xzr, eq  // eq = none
  43a4b0:	str	x0, [x19]
  43a4b4:	ldr	x0, [sp, #48]
  43a4b8:	b	43a490 <nftw@plt+0x377a0>
  43a4bc:	add	x4, x0, x2
  43a4c0:	stp	x0, x4, [x3]
  43a4c4:	str	w1, [x3, #16]
  43a4c8:	str	x0, [x3, #24]
  43a4cc:	lsl	w0, w2, #1
  43a4d0:	str	wzr, [x3, #40]
  43a4d4:	str	w0, [x3, #44]
  43a4d8:	stp	wzr, w2, [x3, #56]
  43a4dc:	stp	xzr, xzr, [x3, #64]
  43a4e0:	str	xzr, [x3, #80]
  43a4e4:	ret
  43a4e8:	stp	x29, x30, [sp, #-176]!
  43a4ec:	mov	x29, sp
  43a4f0:	stp	x19, x20, [sp, #16]
  43a4f4:	mov	x19, x0
  43a4f8:	stp	x21, x22, [sp, #32]
  43a4fc:	mov	w21, w1
  43a500:	mov	x22, x2
  43a504:	stp	x23, x24, [sp, #48]
  43a508:	mov	x23, x3
  43a50c:	str	x25, [sp, #64]
  43a510:	ldrb	w0, [x0]
  43a514:	cmp	w0, #0x5f
  43a518:	b.ne	43a528 <nftw@plt+0x37838>  // b.any
  43a51c:	ldrb	w0, [x19, #1]
  43a520:	cmp	w0, #0x5a
  43a524:	b.eq	43a69c <nftw@plt+0x379ac>  // b.none
  43a528:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43a52c:	mov	x0, x19
  43a530:	add	x1, x1, #0x786
  43a534:	mov	x2, #0x8                   	// #8
  43a538:	bl	4027f0 <strncmp@plt>
  43a53c:	cbnz	w0, 43a678 <nftw@plt+0x37988>
  43a540:	ldrb	w0, [x19, #8]
  43a544:	sub	w0, w0, #0x24
  43a548:	and	w0, w0, #0xff
  43a54c:	cmp	w0, #0x3b
  43a550:	b.hi	43a678 <nftw@plt+0x37988>  // b.pmore
  43a554:	mov	x1, #0x401                 	// #1025
  43a558:	movk	x1, #0x800, lsl #48
  43a55c:	lsr	x0, x1, x0
  43a560:	tbz	w0, #0, 43a678 <nftw@plt+0x37988>
  43a564:	ldrb	w0, [x19, #9]
  43a568:	mov	w1, #0x49                  	// #73
  43a56c:	cmp	w0, #0x44
  43a570:	ccmp	w0, w1, #0x4, ne  // ne = any
  43a574:	b.ne	43a678 <nftw@plt+0x37988>  // b.any
  43a578:	ldrb	w1, [x19, #10]
  43a57c:	cmp	w1, #0x5f
  43a580:	b.ne	43a678 <nftw@plt+0x37988>  // b.any
  43a584:	cmp	w0, #0x49
  43a588:	cset	w20, ne  // ne = any
  43a58c:	add	w20, w20, #0x2
  43a590:	mov	x0, x19
  43a594:	bl	402630 <strlen@plt>
  43a598:	add	x3, x29, #0x58
  43a59c:	mov	x2, x0
  43a5a0:	mov	w1, w21
  43a5a4:	mov	x0, x19
  43a5a8:	bl	43a4bc <nftw@plt+0x377cc>
  43a5ac:	ldr	w0, [x29, #132]
  43a5b0:	tbnz	w21, #18, 43a5bc <nftw@plt+0x378cc>
  43a5b4:	cmp	w0, #0x800
  43a5b8:	b.hi	43a67c <nftw@plt+0x3798c>  // b.pmore
  43a5bc:	mov	w1, #0x18                  	// #24
  43a5c0:	mov	x24, sp
  43a5c4:	cmp	w20, #0x1
  43a5c8:	smull	x0, w0, w1
  43a5cc:	add	x0, x0, #0xf
  43a5d0:	and	x0, x0, #0xfffffffffffffff0
  43a5d4:	sub	sp, sp, x0
  43a5d8:	ldrsw	x0, [x29, #148]
  43a5dc:	mov	x1, sp
  43a5e0:	str	x1, [x29, #120]
  43a5e4:	lsl	x0, x0, #3
  43a5e8:	add	x0, x0, #0xf
  43a5ec:	and	x0, x0, #0xfffffffffffffff0
  43a5f0:	sub	sp, sp, x0
  43a5f4:	mov	x0, sp
  43a5f8:	str	x0, [x29, #136]
  43a5fc:	b.eq	43a6e8 <nftw@plt+0x379f8>  // b.none
  43a600:	sub	w0, w20, #0x2
  43a604:	cmp	w0, #0x1
  43a608:	b.hi	43a6ac <nftw@plt+0x379bc>  // b.pmore
  43a60c:	ldr	x0, [x29, #112]
  43a610:	cmp	w20, #0x2
  43a614:	cset	w19, ne  // ne = any
  43a618:	add	x25, x0, #0xb
  43a61c:	str	x25, [x29, #112]
  43a620:	add	w19, w19, #0x44
  43a624:	ldrb	w1, [x0, #11]
  43a628:	cmp	w1, #0x5f
  43a62c:	b.eq	43a6f8 <nftw@plt+0x37a08>  // b.none
  43a630:	mov	x0, x25
  43a634:	bl	402630 <strlen@plt>
  43a638:	mov	x1, x25
  43a63c:	mov	w2, w0
  43a640:	add	x0, x29, #0x58
  43a644:	bl	437a78 <nftw@plt+0x34d88>
  43a648:	mov	x2, x0
  43a64c:	mov	w1, w19
  43a650:	mov	x3, #0x0                   	// #0
  43a654:	add	x0, x29, #0x58
  43a658:	bl	435138 <nftw@plt+0x32448>
  43a65c:	mov	x19, x0
  43a660:	ldr	x20, [x29, #112]
  43a664:	mov	x0, x20
  43a668:	bl	402630 <strlen@plt>
  43a66c:	add	x20, x20, x0
  43a670:	str	x20, [x29, #112]
  43a674:	b	43a6b8 <nftw@plt+0x379c8>
  43a678:	tbnz	w21, #4, 43a6a4 <nftw@plt+0x379b4>
  43a67c:	mov	w0, #0x0                   	// #0
  43a680:	mov	sp, x29
  43a684:	ldp	x19, x20, [sp, #16]
  43a688:	ldp	x21, x22, [sp, #32]
  43a68c:	ldp	x23, x24, [sp, #48]
  43a690:	ldr	x25, [sp, #64]
  43a694:	ldp	x29, x30, [sp], #176
  43a698:	ret
  43a69c:	mov	w20, #0x1                   	// #1
  43a6a0:	b	43a590 <nftw@plt+0x378a0>
  43a6a4:	mov	w20, #0x0                   	// #0
  43a6a8:	b	43a590 <nftw@plt+0x378a0>
  43a6ac:	add	x0, x29, #0x58
  43a6b0:	bl	437ec0 <nftw@plt+0x351d0>
  43a6b4:	mov	x19, x0
  43a6b8:	tbz	w21, #0, 43a6c8 <nftw@plt+0x379d8>
  43a6bc:	ldr	x0, [x29, #112]
  43a6c0:	ldrb	w0, [x0]
  43a6c4:	cbnz	w0, 43a71c <nftw@plt+0x37a2c>
  43a6c8:	cbz	x19, 43a71c <nftw@plt+0x37a2c>
  43a6cc:	mov	x3, x23
  43a6d0:	mov	x2, x22
  43a6d4:	mov	x1, x19
  43a6d8:	mov	w0, w21
  43a6dc:	bl	43a364 <nftw@plt+0x37674>
  43a6e0:	mov	sp, x24
  43a6e4:	b	43a680 <nftw@plt+0x37990>
  43a6e8:	mov	w1, w20
  43a6ec:	add	x0, x29, #0x58
  43a6f0:	bl	43969c <nftw@plt+0x369ac>
  43a6f4:	b	43a6b4 <nftw@plt+0x379c4>
  43a6f8:	ldrb	w1, [x0, #12]
  43a6fc:	cmp	w1, #0x5a
  43a700:	b.ne	43a630 <nftw@plt+0x37940>  // b.any
  43a704:	add	x0, x0, #0xd
  43a708:	mov	w1, #0x0                   	// #0
  43a70c:	str	x0, [x29, #112]
  43a710:	add	x0, x29, #0x58
  43a714:	bl	4390b0 <nftw@plt+0x363c0>
  43a718:	b	43a648 <nftw@plt+0x37958>
  43a71c:	mov	w0, #0x0                   	// #0
  43a720:	b	43a6e0 <nftw@plt+0x379f0>
  43a724:	stp	x29, x30, [sp, #-64]!
  43a728:	mov	x29, sp
  43a72c:	add	x3, sp, #0x20
  43a730:	str	x19, [sp, #16]
  43a734:	mov	x19, x2
  43a738:	adrp	x2, 435000 <nftw@plt+0x32310>
  43a73c:	add	x2, x2, #0x8a8
  43a740:	stp	xzr, xzr, [sp, #32]
  43a744:	str	xzr, [sp, #48]
  43a748:	str	wzr, [sp, #56]
  43a74c:	bl	43a4e8 <nftw@plt+0x377f8>
  43a750:	cbnz	w0, 43a770 <nftw@plt+0x37a80>
  43a754:	ldr	x0, [sp, #32]
  43a758:	bl	402a80 <free@plt>
  43a75c:	str	xzr, [x19]
  43a760:	mov	x0, #0x0                   	// #0
  43a764:	ldr	x19, [sp, #16]
  43a768:	ldp	x29, x30, [sp], #64
  43a76c:	ret
  43a770:	ldr	w0, [sp, #56]
  43a774:	cmp	w0, #0x0
  43a778:	ldr	x0, [sp, #48]
  43a77c:	csinc	x0, x0, xzr, eq  // eq = none
  43a780:	str	x0, [x19]
  43a784:	ldr	x0, [sp, #32]
  43a788:	b	43a764 <nftw@plt+0x37a74>
  43a78c:	stp	x29, x30, [sp, #-144]!
  43a790:	mov	x29, sp
  43a794:	stp	x19, x20, [sp, #16]
  43a798:	mov	x19, x1
  43a79c:	mov	x20, x2
  43a7a0:	str	x21, [sp, #32]
  43a7a4:	mov	x21, x0
  43a7a8:	str	wzr, [x1]
  43a7ac:	str	wzr, [x2]
  43a7b0:	bl	402630 <strlen@plt>
  43a7b4:	mov	x2, x0
  43a7b8:	add	x3, x29, #0x38
  43a7bc:	mov	x0, x21
  43a7c0:	mov	w1, #0x4000                	// #16384
  43a7c4:	bl	43a4bc <nftw@plt+0x377cc>
  43a7c8:	ldr	w0, [x29, #100]
  43a7cc:	mov	w1, #0x18                  	// #24
  43a7d0:	smull	x0, w0, w1
  43a7d4:	add	x0, x0, #0xf
  43a7d8:	and	x0, x0, #0xfffffffffffffff0
  43a7dc:	sub	sp, sp, x0
  43a7e0:	ldrsw	x0, [x29, #116]
  43a7e4:	mov	x1, sp
  43a7e8:	str	x1, [x29, #88]
  43a7ec:	mov	w1, #0x1                   	// #1
  43a7f0:	lsl	x0, x0, #3
  43a7f4:	add	x0, x0, #0xf
  43a7f8:	and	x0, x0, #0xfffffffffffffff0
  43a7fc:	sub	sp, sp, x0
  43a800:	mov	x0, sp
  43a804:	str	x0, [x29, #104]
  43a808:	add	x0, x29, #0x38
  43a80c:	bl	43969c <nftw@plt+0x369ac>
  43a810:	adrp	x2, 459000 <_obstack_memory_used@@Base+0x1bfa8>
  43a814:	add	x2, x2, #0x8bc
  43a818:	cbz	x0, 43a858 <nftw@plt+0x37b68>
  43a81c:	ldr	w1, [x0]
  43a820:	sub	w1, w1, #0x1
  43a824:	cmp	w1, #0x7
  43a828:	b.hi	43a878 <nftw@plt+0x37b88>  // b.pmore
  43a82c:	ldrb	w1, [x2, w1, uxtw]
  43a830:	adr	x3, 43a83c <nftw@plt+0x37b4c>
  43a834:	add	x1, x3, w1, sxtb #2
  43a838:	br	x1
  43a83c:	ldr	x0, [x0, #8]
  43a840:	b	43a818 <nftw@plt+0x37b28>
  43a844:	ldr	x0, [x0, #16]
  43a848:	b	43a818 <nftw@plt+0x37b28>
  43a84c:	ldr	w0, [x0, #8]
  43a850:	str	w0, [x19]
  43a854:	mov	w0, #0x1                   	// #1
  43a858:	mov	sp, x29
  43a85c:	ldp	x19, x20, [sp, #16]
  43a860:	ldr	x21, [sp, #32]
  43a864:	ldp	x29, x30, [sp], #144
  43a868:	ret
  43a86c:	ldr	w0, [x0, #8]
  43a870:	str	w0, [x20]
  43a874:	b	43a854 <nftw@plt+0x37b64>
  43a878:	mov	w0, #0x0                   	// #0
  43a87c:	b	43a858 <nftw@plt+0x37b68>
  43a880:	stp	x29, x30, [sp, #-32]!
  43a884:	mov	x29, sp
  43a888:	add	x2, sp, #0x18
  43a88c:	bl	43a724 <nftw@plt+0x37a34>
  43a890:	ldp	x29, x30, [sp], #32
  43a894:	ret
  43a898:	b	43a4e8 <nftw@plt+0x377f8>
  43a89c:	stp	x29, x30, [sp, #-32]!
  43a8a0:	mov	w1, #0x25                  	// #37
  43a8a4:	mov	x29, sp
  43a8a8:	add	x2, sp, #0x18
  43a8ac:	bl	43a724 <nftw@plt+0x37a34>
  43a8b0:	ldp	x29, x30, [sp], #32
  43a8b4:	ret
  43a8b8:	mov	x3, x2
  43a8bc:	mov	x2, x1
  43a8c0:	mov	w1, #0x25                  	// #37
  43a8c4:	b	43a4e8 <nftw@plt+0x377f8>
  43a8c8:	stp	x29, x30, [sp, #-32]!
  43a8cc:	mov	x29, sp
  43a8d0:	add	x2, sp, #0x1c
  43a8d4:	add	x1, sp, #0x18
  43a8d8:	bl	43a78c <nftw@plt+0x37a9c>
  43a8dc:	cmp	w0, #0x0
  43a8e0:	ldr	w0, [sp, #24]
  43a8e4:	ldp	x29, x30, [sp], #32
  43a8e8:	csel	w0, w0, wzr, ne  // ne = any
  43a8ec:	ret
  43a8f0:	stp	x29, x30, [sp, #-32]!
  43a8f4:	mov	x29, sp
  43a8f8:	add	x2, sp, #0x1c
  43a8fc:	add	x1, sp, #0x18
  43a900:	bl	43a78c <nftw@plt+0x37a9c>
  43a904:	cmp	w0, #0x0
  43a908:	ldr	w0, [sp, #28]
  43a90c:	ldp	x29, x30, [sp], #32
  43a910:	csel	w0, w0, wzr, ne  // ne = any
  43a914:	ret
  43a918:	mov	x1, #0x2301                	// #8961
  43a91c:	str	xzr, [x0, #16]
  43a920:	movk	x1, #0x6745, lsl #16
  43a924:	str	wzr, [x0, #24]
  43a928:	movk	x1, #0xab89, lsl #32
  43a92c:	movk	x1, #0xefcd, lsl #48
  43a930:	str	x1, [x0]
  43a934:	mov	x1, #0xdcfe                	// #56574
  43a938:	movk	x1, #0x98ba, lsl #16
  43a93c:	movk	x1, #0x5476, lsl #32
  43a940:	movk	x1, #0x1032, lsl #48
  43a944:	str	x1, [x0, #8]
  43a948:	ret
  43a94c:	mov	x2, x0
  43a950:	mov	x0, x1
  43a954:	ldp	x3, x1, [x2]
  43a958:	stp	x3, x1, [x0]
  43a95c:	ret
  43a960:	stp	x29, x30, [sp, #-112]!
  43a964:	and	x3, x1, #0xfffffffffffffffc
  43a968:	add	x3, x0, x3
  43a96c:	mov	x29, sp
  43a970:	ldr	w4, [x2, #16]
  43a974:	lsr	x5, x1, #32
  43a978:	str	x3, [sp, #104]
  43a97c:	add	w4, w4, w1
  43a980:	ldr	w3, [x2, #20]
  43a984:	stp	x21, x22, [sp, #32]
  43a988:	cmp	x1, w4, uxtw
  43a98c:	stp	x23, x24, [sp, #48]
  43a990:	add	w3, w3, w5
  43a994:	cinc	w1, w3, hi  // hi = pmore
  43a998:	ldp	w23, w24, [x2, #8]
  43a99c:	stp	x25, x26, [sp, #64]
  43a9a0:	ldp	w26, w22, [x2]
  43a9a4:	stp	x27, x28, [sp, #80]
  43a9a8:	mov	w27, #0xcde6                	// #52710
  43a9ac:	mov	w28, #0x7d6                 	// #2006
  43a9b0:	movk	w27, #0x21e1, lsl #16
  43a9b4:	movk	w28, #0xc337, lsl #16
  43a9b8:	stp	x19, x20, [sp, #16]
  43a9bc:	str	w4, [x2, #16]
  43a9c0:	str	w1, [x2, #20]
  43a9c4:	mov	w1, #0xa478                	// #42104
  43a9c8:	movk	w1, #0xd76a, lsl #16
  43a9cc:	add	w5, w26, w1
  43a9d0:	mov	w1, #0xb756                	// #46934
  43a9d4:	movk	w1, #0xe8c7, lsl #16
  43a9d8:	add	w4, w24, w1
  43a9dc:	mov	w1, #0x70db                	// #28891
  43a9e0:	movk	w1, #0x2420, lsl #16
  43a9e4:	add	w8, w23, w1
  43a9e8:	mov	w1, #0xceee                	// #52974
  43a9ec:	movk	w1, #0xc1bd, lsl #16
  43a9f0:	add	w10, w22, w1
  43a9f4:	ldr	x1, [sp, #104]
  43a9f8:	cmp	x0, x1
  43a9fc:	b.cc	43aa24 <nftw@plt+0x37d34>  // b.lo, b.ul, b.last
  43aa00:	stp	w26, w22, [x2]
  43aa04:	stp	w23, w24, [x2, #8]
  43aa08:	ldp	x19, x20, [sp, #16]
  43aa0c:	ldp	x21, x22, [sp, #32]
  43aa10:	ldp	x23, x24, [sp, #48]
  43aa14:	ldp	x25, x26, [sp, #64]
  43aa18:	ldp	x27, x28, [sp, #80]
  43aa1c:	ldp	x29, x30, [sp], #112
  43aa20:	ret
  43aa24:	ldp	w14, w7, [x0]
  43aa28:	eor	w3, w23, w24
  43aa2c:	and	w3, w3, w22
  43aa30:	mov	w6, #0xfaf                 	// #4015
  43aa34:	eor	w3, w3, w24
  43aa38:	movk	w6, #0xf57c, lsl #16
  43aa3c:	add	w3, w3, w14
  43aa40:	ldr	w11, [x0, #20]
  43aa44:	add	w3, w3, w5
  43aa48:	ldr	w20, [x0, #36]
  43aa4c:	ldp	w16, w9, [x0, #8]
  43aa50:	ror	w3, w3, #25
  43aa54:	add	w1, w22, w3
  43aa58:	eor	w3, w22, w23
  43aa5c:	and	w3, w3, w1
  43aa60:	mov	w12, #0xffff5bb1            	// #-42063
  43aa64:	eor	w3, w3, w23
  43aa68:	mov	w17, #0xd7be                	// #55230
  43aa6c:	add	w3, w3, w7
  43aa70:	movk	w17, #0x895c, lsl #16
  43aa74:	add	w3, w3, w4
  43aa78:	mov	w19, #0x7193                	// #29075
  43aa7c:	movk	w19, #0xfd98, lsl #16
  43aa80:	mov	w21, #0x438e                	// #17294
  43aa84:	movk	w21, #0xa679, lsl #16
  43aa88:	ror	w3, w3, #20
  43aa8c:	add	w5, w1, w3
  43aa90:	eor	w3, w22, w1
  43aa94:	and	w3, w3, w5
  43aa98:	mov	w25, #0x821                 	// #2081
  43aa9c:	eor	w3, w3, w22
  43aaa0:	movk	w25, #0x49b4, lsl #16
  43aaa4:	add	w3, w3, w16
  43aaa8:	add	x0, x0, #0x40
  43aaac:	add	w3, w3, w8
  43aab0:	ror	w3, w3, #15
  43aab4:	add	w4, w5, w3
  43aab8:	eor	w3, w1, w5
  43aabc:	and	w3, w3, w4
  43aac0:	eor	w3, w3, w1
  43aac4:	add	w3, w3, w9
  43aac8:	add	w3, w3, w10
  43aacc:	ror	w3, w3, #10
  43aad0:	add	w13, w4, w3
  43aad4:	eor	w3, w5, w4
  43aad8:	and	w3, w3, w13
  43aadc:	eor	w3, w3, w5
  43aae0:	add	w3, w3, w1
  43aae4:	ldur	w1, [x0, #-48]
  43aae8:	add	w6, w1, w6
  43aaec:	add	w3, w6, w3
  43aaf0:	ror	w3, w3, #25
  43aaf4:	add	w6, w13, w3
  43aaf8:	eor	w3, w4, w13
  43aafc:	and	w3, w3, w6
  43ab00:	eor	w3, w3, w4
  43ab04:	add	w3, w3, w5
  43ab08:	mov	w5, #0xc62a                	// #50730
  43ab0c:	movk	w5, #0x4787, lsl #16
  43ab10:	add	w18, w11, w5
  43ab14:	add	w3, w18, w3
  43ab18:	mov	w5, #0x4613                	// #17939
  43ab1c:	movk	w5, #0xa830, lsl #16
  43ab20:	ror	w3, w3, #20
  43ab24:	add	w18, w6, w3
  43ab28:	eor	w3, w13, w6
  43ab2c:	and	w3, w3, w18
  43ab30:	eor	w3, w3, w13
  43ab34:	add	w3, w3, w4
  43ab38:	ldur	w4, [x0, #-40]
  43ab3c:	add	w5, w4, w5
  43ab40:	add	w5, w5, w3
  43ab44:	eor	w3, w6, w18
  43ab48:	ror	w5, w5, #15
  43ab4c:	add	w8, w18, w5
  43ab50:	mov	w5, #0x9501                	// #38145
  43ab54:	and	w3, w3, w8
  43ab58:	movk	w5, #0xfd46, lsl #16
  43ab5c:	eor	w3, w3, w6
  43ab60:	add	w3, w3, w13
  43ab64:	ldur	w13, [x0, #-36]
  43ab68:	add	w5, w13, w5
  43ab6c:	add	w5, w5, w3
  43ab70:	eor	w3, w18, w8
  43ab74:	ror	w5, w5, #10
  43ab78:	add	w15, w8, w5
  43ab7c:	mov	w5, #0x98d8                	// #39128
  43ab80:	and	w3, w3, w15
  43ab84:	movk	w5, #0x6980, lsl #16
  43ab88:	eor	w3, w3, w18
  43ab8c:	add	w3, w3, w6
  43ab90:	ldur	w6, [x0, #-32]
  43ab94:	add	w10, w6, w5
  43ab98:	mov	w5, #0xf7af                	// #63407
  43ab9c:	add	w10, w10, w3
  43aba0:	eor	w3, w8, w15
  43aba4:	movk	w5, #0x8b44, lsl #16
  43aba8:	ror	w10, w10, #25
  43abac:	add	w10, w15, w10
  43abb0:	and	w3, w3, w10
  43abb4:	eor	w3, w3, w8
  43abb8:	add	w3, w3, w18
  43abbc:	add	w18, w20, w5
  43abc0:	add	w3, w18, w3
  43abc4:	eor	w5, w15, w10
  43abc8:	ror	w18, w3, #20
  43abcc:	add	w3, w10, w18
  43abd0:	and	w5, w5, w3
  43abd4:	eor	w5, w5, w15
  43abd8:	add	w5, w5, w8
  43abdc:	ldur	w8, [x0, #-24]
  43abe0:	add	w12, w8, w12
  43abe4:	add	w12, w12, w5
  43abe8:	eor	w5, w10, w3
  43abec:	ror	w12, w12, #15
  43abf0:	add	w12, w3, w12
  43abf4:	and	w5, w5, w12
  43abf8:	eor	w5, w5, w10
  43abfc:	add	w5, w5, w15
  43ac00:	ldur	w15, [x0, #-20]
  43ac04:	add	w18, w15, w17
  43ac08:	eor	w17, w3, w12
  43ac0c:	add	w5, w18, w5
  43ac10:	ror	w18, w5, #10
  43ac14:	add	w5, w12, w18
  43ac18:	mov	w18, #0x1122                	// #4386
  43ac1c:	and	w17, w17, w5
  43ac20:	movk	w18, #0x6b90, lsl #16
  43ac24:	eor	w17, w17, w3
  43ac28:	add	w17, w17, w10
  43ac2c:	ldur	w10, [x0, #-16]
  43ac30:	add	w18, w10, w18
  43ac34:	add	w17, w18, w17
  43ac38:	eor	w18, w12, w5
  43ac3c:	ror	w17, w17, #25
  43ac40:	add	w17, w5, w17
  43ac44:	and	w18, w18, w17
  43ac48:	eor	w18, w18, w12
  43ac4c:	add	w18, w18, w3
  43ac50:	ldur	w3, [x0, #-12]
  43ac54:	add	w19, w3, w19
  43ac58:	add	w19, w19, w18
  43ac5c:	eor	w18, w5, w17
  43ac60:	ror	w19, w19, #20
  43ac64:	add	w19, w17, w19
  43ac68:	and	w18, w18, w19
  43ac6c:	eor	w18, w18, w5
  43ac70:	add	w18, w18, w12
  43ac74:	ldur	w12, [x0, #-8]
  43ac78:	add	w21, w12, w21
  43ac7c:	add	w21, w21, w18
  43ac80:	eor	w18, w17, w19
  43ac84:	ror	w21, w21, #15
  43ac88:	add	w21, w19, w21
  43ac8c:	and	w18, w18, w21
  43ac90:	eor	w18, w18, w17
  43ac94:	add	w18, w18, w5
  43ac98:	ldur	w5, [x0, #-4]
  43ac9c:	add	w25, w5, w25
  43aca0:	add	w18, w25, w18
  43aca4:	ror	w18, w18, #10
  43aca8:	add	w18, w21, w18
  43acac:	eor	w25, w21, w18
  43acb0:	and	w25, w25, w19
  43acb4:	eor	w25, w25, w21
  43acb8:	add	w17, w25, w17
  43acbc:	mov	w25, #0x2562                	// #9570
  43acc0:	movk	w25, #0xf61e, lsl #16
  43acc4:	add	w25, w7, w25
  43acc8:	add	w17, w25, w17
  43accc:	ror	w17, w17, #27
  43acd0:	add	w17, w18, w17
  43acd4:	eor	w25, w18, w17
  43acd8:	and	w25, w25, w21
  43acdc:	eor	w25, w25, w18
  43ace0:	add	w19, w25, w19
  43ace4:	mov	w25, #0xb340                	// #45888
  43ace8:	movk	w25, #0xc040, lsl #16
  43acec:	add	w25, w4, w25
  43acf0:	add	w19, w25, w19
  43acf4:	ror	w19, w19, #23
  43acf8:	add	w19, w17, w19
  43acfc:	eor	w25, w17, w19
  43ad00:	and	w25, w25, w18
  43ad04:	eor	w25, w25, w17
  43ad08:	add	w21, w25, w21
  43ad0c:	mov	w25, #0x5a51                	// #23121
  43ad10:	movk	w25, #0x265e, lsl #16
  43ad14:	add	w25, w15, w25
  43ad18:	add	w21, w25, w21
  43ad1c:	ror	w21, w21, #18
  43ad20:	add	w21, w19, w21
  43ad24:	eor	w25, w19, w21
  43ad28:	and	w25, w25, w17
  43ad2c:	eor	w25, w25, w19
  43ad30:	add	w18, w25, w18
  43ad34:	mov	w25, #0xc7aa                	// #51114
  43ad38:	movk	w25, #0xe9b6, lsl #16
  43ad3c:	add	w25, w14, w25
  43ad40:	add	w18, w25, w18
  43ad44:	ror	w18, w18, #12
  43ad48:	add	w18, w21, w18
  43ad4c:	eor	w25, w21, w18
  43ad50:	and	w25, w25, w19
  43ad54:	eor	w25, w25, w21
  43ad58:	add	w17, w25, w17
  43ad5c:	mov	w25, #0x105d                	// #4189
  43ad60:	movk	w25, #0xd62f, lsl #16
  43ad64:	add	w25, w11, w25
  43ad68:	add	w17, w25, w17
  43ad6c:	ror	w17, w17, #27
  43ad70:	add	w17, w18, w17
  43ad74:	eor	w25, w18, w17
  43ad78:	and	w25, w25, w21
  43ad7c:	eor	w25, w25, w18
  43ad80:	add	w19, w25, w19
  43ad84:	mov	w25, #0x1453                	// #5203
  43ad88:	movk	w25, #0x244, lsl #16
  43ad8c:	add	w25, w8, w25
  43ad90:	add	w19, w25, w19
  43ad94:	ror	w19, w19, #23
  43ad98:	add	w19, w17, w19
  43ad9c:	eor	w25, w17, w19
  43ada0:	and	w25, w25, w18
  43ada4:	eor	w25, w25, w17
  43ada8:	add	w21, w25, w21
  43adac:	mov	w25, #0xe681                	// #59009
  43adb0:	movk	w25, #0xd8a1, lsl #16
  43adb4:	add	w25, w5, w25
  43adb8:	add	w21, w25, w21
  43adbc:	ror	w21, w21, #18
  43adc0:	add	w21, w19, w21
  43adc4:	eor	w25, w19, w21
  43adc8:	and	w25, w25, w17
  43adcc:	eor	w25, w25, w19
  43add0:	add	w18, w25, w18
  43add4:	mov	w25, #0xfbc8                	// #64456
  43add8:	movk	w25, #0xe7d3, lsl #16
  43addc:	add	w25, w1, w25
  43ade0:	add	w18, w25, w18
  43ade4:	ror	w18, w18, #12
  43ade8:	add	w18, w21, w18
  43adec:	eor	w25, w21, w18
  43adf0:	and	w25, w25, w19
  43adf4:	eor	w25, w25, w21
  43adf8:	add	w17, w25, w17
  43adfc:	add	w25, w20, w27
  43ae00:	add	w17, w25, w17
  43ae04:	ror	w17, w17, #27
  43ae08:	add	w17, w18, w17
  43ae0c:	eor	w25, w18, w17
  43ae10:	and	w25, w25, w21
  43ae14:	eor	w25, w25, w18
  43ae18:	add	w19, w25, w19
  43ae1c:	add	w25, w12, w28
  43ae20:	add	w19, w25, w19
  43ae24:	ror	w19, w19, #23
  43ae28:	add	w19, w17, w19
  43ae2c:	eor	w25, w17, w19
  43ae30:	and	w25, w25, w18
  43ae34:	eor	w25, w25, w17
  43ae38:	add	w21, w25, w21
  43ae3c:	mov	w25, #0xd87                 	// #3463
  43ae40:	movk	w25, #0xf4d5, lsl #16
  43ae44:	add	w25, w9, w25
  43ae48:	add	w21, w25, w21
  43ae4c:	ror	w21, w21, #18
  43ae50:	add	w21, w19, w21
  43ae54:	eor	w25, w19, w21
  43ae58:	and	w25, w25, w17
  43ae5c:	eor	w25, w25, w19
  43ae60:	add	w18, w25, w18
  43ae64:	mov	w25, #0x14ed                	// #5357
  43ae68:	movk	w25, #0x455a, lsl #16
  43ae6c:	add	w25, w6, w25
  43ae70:	add	w18, w25, w18
  43ae74:	ror	w18, w18, #12
  43ae78:	add	w18, w21, w18
  43ae7c:	eor	w25, w21, w18
  43ae80:	and	w25, w25, w19
  43ae84:	eor	w25, w25, w21
  43ae88:	add	w17, w25, w17
  43ae8c:	mov	w25, #0xe905                	// #59653
  43ae90:	movk	w25, #0xa9e3, lsl #16
  43ae94:	add	w25, w3, w25
  43ae98:	add	w17, w25, w17
  43ae9c:	ror	w17, w17, #27
  43aea0:	add	w17, w18, w17
  43aea4:	eor	w25, w18, w17
  43aea8:	and	w25, w25, w21
  43aeac:	eor	w25, w25, w18
  43aeb0:	add	w19, w25, w19
  43aeb4:	mov	w25, #0xa3f8                	// #41976
  43aeb8:	movk	w25, #0xfcef, lsl #16
  43aebc:	add	w25, w16, w25
  43aec0:	add	w19, w25, w19
  43aec4:	ror	w19, w19, #23
  43aec8:	add	w19, w17, w19
  43aecc:	eor	w25, w17, w19
  43aed0:	and	w25, w25, w18
  43aed4:	eor	w25, w25, w17
  43aed8:	add	w21, w25, w21
  43aedc:	mov	w25, #0x2d9                 	// #729
  43aee0:	movk	w25, #0x676f, lsl #16
  43aee4:	add	w25, w13, w25
  43aee8:	add	w21, w25, w21
  43aeec:	ror	w21, w21, #18
  43aef0:	add	w21, w19, w21
  43aef4:	eor	w25, w19, w21
  43aef8:	and	w30, w25, w17
  43aefc:	eor	w30, w30, w19
  43af00:	add	w18, w30, w18
  43af04:	mov	w30, #0x4c8a                	// #19594
  43af08:	movk	w30, #0x8d2a, lsl #16
  43af0c:	add	w30, w10, w30
  43af10:	add	w18, w30, w18
  43af14:	ror	w18, w18, #12
  43af18:	add	w18, w21, w18
  43af1c:	eor	w25, w25, w18
  43af20:	add	w17, w25, w17
  43af24:	sub	w25, w11, #0x5c, lsl #12
  43af28:	sub	w25, w25, #0x6be
  43af2c:	add	w17, w25, w17
  43af30:	eor	w25, w21, w18
  43af34:	ror	w17, w17, #28
  43af38:	add	w17, w18, w17
  43af3c:	eor	w25, w25, w17
  43af40:	add	w19, w25, w19
  43af44:	mov	w25, #0xf681                	// #63105
  43af48:	movk	w25, #0x8771, lsl #16
  43af4c:	add	w25, w6, w25
  43af50:	add	w19, w25, w19
  43af54:	eor	w25, w18, w17
  43af58:	ror	w19, w19, #21
  43af5c:	add	w19, w17, w19
  43af60:	eor	w25, w25, w19
  43af64:	add	w21, w25, w21
  43af68:	mov	w25, #0x6122                	// #24866
  43af6c:	movk	w25, #0x6d9d, lsl #16
  43af70:	add	w25, w15, w25
  43af74:	add	w21, w25, w21
  43af78:	eor	w25, w17, w19
  43af7c:	ror	w21, w21, #16
  43af80:	add	w21, w19, w21
  43af84:	eor	w25, w25, w21
  43af88:	add	w18, w25, w18
  43af8c:	mov	w25, #0x380c                	// #14348
  43af90:	movk	w25, #0xfde5, lsl #16
  43af94:	add	w25, w12, w25
  43af98:	add	w25, w25, w18
  43af9c:	eor	w18, w19, w21
  43afa0:	ror	w25, w25, #9
  43afa4:	add	w25, w21, w25
  43afa8:	eor	w18, w18, w25
  43afac:	add	w17, w18, w17
  43afb0:	mov	w18, #0xea44                	// #59972
  43afb4:	movk	w18, #0xa4be, lsl #16
  43afb8:	add	w18, w7, w18
  43afbc:	add	w17, w18, w17
  43afc0:	eor	w18, w21, w25
  43afc4:	ror	w17, w17, #28
  43afc8:	add	w17, w25, w17
  43afcc:	eor	w18, w18, w17
  43afd0:	add	w19, w18, w19
  43afd4:	mov	w18, #0xcfa9                	// #53161
  43afd8:	movk	w18, #0x4bde, lsl #16
  43afdc:	add	w18, w1, w18
  43afe0:	add	w19, w18, w19
  43afe4:	eor	w18, w25, w17
  43afe8:	ror	w19, w19, #21
  43afec:	add	w19, w17, w19
  43aff0:	eor	w18, w18, w19
  43aff4:	add	w21, w18, w21
  43aff8:	mov	w18, #0x4b60                	// #19296
  43affc:	movk	w18, #0xf6bb, lsl #16
  43b000:	add	w18, w13, w18
  43b004:	add	w18, w18, w21
  43b008:	eor	w21, w17, w19
  43b00c:	ror	w18, w18, #16
  43b010:	add	w18, w19, w18
  43b014:	eor	w21, w21, w18
  43b018:	add	w25, w21, w25
  43b01c:	mov	w21, #0xbc70                	// #48240
  43b020:	movk	w21, #0xbebf, lsl #16
  43b024:	add	w21, w8, w21
  43b028:	add	w25, w21, w25
  43b02c:	eor	w21, w19, w18
  43b030:	sub	w8, w8, #0x100, lsl #12
  43b034:	sub	w8, w8, #0xb83
  43b038:	ror	w25, w25, #9
  43b03c:	add	w25, w18, w25
  43b040:	eor	w21, w21, w25
  43b044:	add	w17, w21, w17
  43b048:	mov	w21, #0x7ec6                	// #32454
  43b04c:	movk	w21, #0x289b, lsl #16
  43b050:	add	w21, w3, w21
  43b054:	add	w21, w21, w17
  43b058:	eor	w17, w18, w25
  43b05c:	ror	w21, w21, #28
  43b060:	add	w21, w25, w21
  43b064:	eor	w17, w17, w21
  43b068:	add	w19, w17, w19
  43b06c:	mov	w17, #0x27fa                	// #10234
  43b070:	movk	w17, #0xeaa1, lsl #16
  43b074:	add	w17, w14, w17
  43b078:	add	w17, w17, w19
  43b07c:	eor	w19, w25, w21
  43b080:	ror	w17, w17, #21
  43b084:	add	w17, w21, w17
  43b088:	eor	w19, w19, w17
  43b08c:	add	w18, w19, w18
  43b090:	mov	w19, #0x3085                	// #12421
  43b094:	movk	w19, #0xd4ef, lsl #16
  43b098:	add	w19, w9, w19
  43b09c:	add	w19, w19, w18
  43b0a0:	eor	w18, w21, w17
  43b0a4:	ror	w19, w19, #16
  43b0a8:	add	w19, w17, w19
  43b0ac:	eor	w18, w18, w19
  43b0b0:	add	w25, w18, w25
  43b0b4:	mov	w18, #0x1d05                	// #7429
  43b0b8:	movk	w18, #0x488, lsl #16
  43b0bc:	add	w18, w4, w18
  43b0c0:	add	w25, w18, w25
  43b0c4:	eor	w18, w17, w19
  43b0c8:	ror	w25, w25, #9
  43b0cc:	add	w25, w19, w25
  43b0d0:	eor	w18, w18, w25
  43b0d4:	add	w21, w18, w21
  43b0d8:	mov	w18, #0xd039                	// #53305
  43b0dc:	movk	w18, #0xd9d4, lsl #16
  43b0e0:	add	w18, w20, w18
  43b0e4:	add	w18, w18, w21
  43b0e8:	eor	w21, w19, w25
  43b0ec:	ror	w18, w18, #28
  43b0f0:	add	w18, w25, w18
  43b0f4:	eor	w21, w21, w18
  43b0f8:	add	w17, w21, w17
  43b0fc:	mov	w21, #0x99e5                	// #39397
  43b100:	movk	w21, #0xe6db, lsl #16
  43b104:	add	w21, w10, w21
  43b108:	add	w21, w21, w17
  43b10c:	eor	w17, w25, w18
  43b110:	ror	w21, w21, #21
  43b114:	add	w21, w18, w21
  43b118:	eor	w17, w17, w21
  43b11c:	add	w19, w17, w19
  43b120:	mov	w17, #0x7cf8                	// #31992
  43b124:	movk	w17, #0x1fa2, lsl #16
  43b128:	add	w17, w5, w17
  43b12c:	add	w19, w17, w19
  43b130:	eor	w17, w18, w21
  43b134:	ror	w19, w19, #16
  43b138:	add	w19, w21, w19
  43b13c:	eor	w17, w17, w19
  43b140:	add	w25, w17, w25
  43b144:	mov	w17, #0x5665                	// #22117
  43b148:	movk	w17, #0xc4ac, lsl #16
  43b14c:	add	w17, w16, w17
  43b150:	add	w17, w17, w25
  43b154:	ror	w17, w17, #9
  43b158:	add	w17, w19, w17
  43b15c:	orn	w25, w17, w21
  43b160:	eor	w25, w25, w19
  43b164:	add	w18, w25, w18
  43b168:	mov	w25, #0x2244                	// #8772
  43b16c:	movk	w25, #0xf429, lsl #16
  43b170:	add	w14, w14, w25
  43b174:	add	w18, w14, w18
  43b178:	ror	w18, w18, #26
  43b17c:	add	w18, w17, w18
  43b180:	orn	w14, w18, w19
  43b184:	eor	w14, w14, w17
  43b188:	add	w21, w14, w21
  43b18c:	mov	w14, #0xff97                	// #65431
  43b190:	movk	w14, #0x432a, lsl #16
  43b194:	add	w13, w13, w14
  43b198:	add	w21, w13, w21
  43b19c:	ror	w21, w21, #22
  43b1a0:	add	w21, w18, w21
  43b1a4:	orn	w13, w21, w17
  43b1a8:	eor	w13, w13, w18
  43b1ac:	add	w19, w13, w19
  43b1b0:	mov	w13, #0x23a7                	// #9127
  43b1b4:	movk	w13, #0xab94, lsl #16
  43b1b8:	add	w12, w12, w13
  43b1bc:	add	w19, w12, w19
  43b1c0:	ror	w19, w19, #17
  43b1c4:	add	w19, w21, w19
  43b1c8:	orn	w12, w19, w18
  43b1cc:	eor	w12, w12, w21
  43b1d0:	add	w17, w12, w17
  43b1d4:	mov	w12, #0xa039                	// #41017
  43b1d8:	movk	w12, #0xfc93, lsl #16
  43b1dc:	add	w11, w11, w12
  43b1e0:	add	w17, w11, w17
  43b1e4:	ror	w17, w17, #11
  43b1e8:	add	w17, w19, w17
  43b1ec:	orn	w11, w17, w21
  43b1f0:	eor	w11, w11, w19
  43b1f4:	add	w18, w11, w18
  43b1f8:	mov	w11, #0x59c3                	// #22979
  43b1fc:	movk	w11, #0x655b, lsl #16
  43b200:	add	w10, w10, w11
  43b204:	add	w18, w10, w18
  43b208:	ror	w18, w18, #26
  43b20c:	add	w18, w17, w18
  43b210:	orn	w10, w18, w19
  43b214:	eor	w10, w10, w17
  43b218:	add	w21, w10, w21
  43b21c:	mov	w10, #0xcc92                	// #52370
  43b220:	movk	w10, #0x8f0c, lsl #16
  43b224:	add	w9, w9, w10
  43b228:	add	w21, w9, w21
  43b22c:	ror	w21, w21, #22
  43b230:	add	w21, w18, w21
  43b234:	orn	w9, w21, w17
  43b238:	eor	w9, w9, w18
  43b23c:	add	w19, w9, w19
  43b240:	add	w8, w8, w19
  43b244:	ror	w8, w8, #17
  43b248:	add	w8, w21, w8
  43b24c:	orn	w9, w8, w18
  43b250:	eor	w9, w9, w21
  43b254:	add	w17, w9, w17
  43b258:	mov	w9, #0x5dd1                	// #24017
  43b25c:	movk	w9, #0x8584, lsl #16
  43b260:	add	w7, w7, w9
  43b264:	add	w17, w7, w17
  43b268:	ror	w17, w17, #11
  43b26c:	add	w17, w8, w17
  43b270:	orn	w7, w17, w21
  43b274:	eor	w7, w7, w8
  43b278:	add	w18, w7, w18
  43b27c:	mov	w7, #0x7e4f                	// #32335
  43b280:	movk	w7, #0x6fa8, lsl #16
  43b284:	add	w6, w6, w7
  43b288:	add	w18, w6, w18
  43b28c:	ror	w18, w18, #26
  43b290:	add	w18, w17, w18
  43b294:	orn	w6, w18, w8
  43b298:	eor	w6, w6, w17
  43b29c:	add	w21, w6, w21
  43b2a0:	mov	w6, #0xe6e0                	// #59104
  43b2a4:	movk	w6, #0xfe2c, lsl #16
  43b2a8:	add	w5, w5, w6
  43b2ac:	add	w21, w5, w21
  43b2b0:	ror	w21, w21, #22
  43b2b4:	add	w21, w18, w21
  43b2b8:	orn	w5, w21, w17
  43b2bc:	eor	w5, w5, w18
  43b2c0:	add	w8, w5, w8
  43b2c4:	mov	w5, #0x4314                	// #17172
  43b2c8:	movk	w5, #0xa301, lsl #16
  43b2cc:	add	w4, w4, w5
  43b2d0:	add	w8, w4, w8
  43b2d4:	ror	w8, w8, #17
  43b2d8:	add	w8, w21, w8
  43b2dc:	orn	w4, w8, w18
  43b2e0:	eor	w4, w4, w21
  43b2e4:	add	w17, w4, w17
  43b2e8:	mov	w4, #0x11a1                	// #4513
  43b2ec:	movk	w4, #0x4e08, lsl #16
  43b2f0:	add	w3, w3, w4
  43b2f4:	add	w17, w3, w17
  43b2f8:	ror	w17, w17, #11
  43b2fc:	add	w17, w8, w17
  43b300:	orn	w3, w17, w21
  43b304:	eor	w3, w3, w8
  43b308:	add	w18, w3, w18
  43b30c:	mov	w3, #0x7e82                	// #32386
  43b310:	movk	w3, #0xf753, lsl #16
  43b314:	add	w1, w1, w3
  43b318:	add	w18, w1, w18
  43b31c:	ror	w18, w18, #26
  43b320:	add	w18, w17, w18
  43b324:	orn	w1, w18, w8
  43b328:	add	w26, w26, w18
  43b32c:	eor	w1, w1, w17
  43b330:	add	w21, w1, w21
  43b334:	mov	w1, #0xf235                	// #62005
  43b338:	movk	w1, #0xbd3a, lsl #16
  43b33c:	add	w15, w15, w1
  43b340:	add	w21, w15, w21
  43b344:	ror	w21, w21, #22
  43b348:	add	w21, w18, w21
  43b34c:	orn	w1, w21, w17
  43b350:	add	w24, w24, w21
  43b354:	eor	w1, w1, w18
  43b358:	add	w8, w1, w8
  43b35c:	mov	w1, #0xd2bb                	// #53947
  43b360:	movk	w1, #0x2ad7, lsl #16
  43b364:	add	w16, w16, w1
  43b368:	add	w8, w16, w8
  43b36c:	ror	w8, w8, #17
  43b370:	add	w8, w21, w8
  43b374:	orn	w1, w8, w18
  43b378:	add	w23, w23, w8
  43b37c:	eor	w1, w1, w21
  43b380:	add	w17, w1, w17
  43b384:	mov	w1, #0xd391                	// #54161
  43b388:	movk	w1, #0xeb86, lsl #16
  43b38c:	add	w20, w20, w1
  43b390:	add	w17, w20, w17
  43b394:	ror	w17, w17, #11
  43b398:	add	w17, w8, w17
  43b39c:	add	w22, w22, w17
  43b3a0:	b	43a9c4 <nftw@plt+0x37cd4>
  43b3a4:	stp	x29, x30, [sp, #-48]!
  43b3a8:	mov	x29, sp
  43b3ac:	stp	x19, x20, [sp, #16]
  43b3b0:	mov	x19, x0
  43b3b4:	ldr	w0, [x0, #24]
  43b3b8:	stp	x21, x22, [sp, #32]
  43b3bc:	mov	x22, x1
  43b3c0:	ldr	w2, [x19, #16]
  43b3c4:	adds	w2, w2, w0
  43b3c8:	str	w2, [x19, #16]
  43b3cc:	b.cc	43b3dc <nftw@plt+0x386ec>  // b.lo, b.ul, b.last
  43b3d0:	ldr	w1, [x19, #20]
  43b3d4:	add	w1, w1, #0x1
  43b3d8:	str	w1, [x19, #20]
  43b3dc:	cmp	w0, #0x38
  43b3e0:	mov	w20, #0x78                  	// #120
  43b3e4:	mov	w21, w0
  43b3e8:	sub	w1, w20, w0
  43b3ec:	mov	w20, #0x38                  	// #56
  43b3f0:	sub	w20, w20, w0
  43b3f4:	csel	x20, x20, x1, cc  // cc = lo, ul, last
  43b3f8:	add	x0, x21, #0x1c
  43b3fc:	mov	x2, x20
  43b400:	add	x0, x19, x0
  43b404:	add	x20, x20, x21
  43b408:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43b40c:	add	x1, x1, #0xafb
  43b410:	bl	4025d0 <memcpy@plt>
  43b414:	ldr	w2, [x19, #16]
  43b418:	add	x1, x19, x20
  43b41c:	lsl	w0, w2, #3
  43b420:	str	w0, [x1, #28]
  43b424:	ldr	w0, [x19, #20]
  43b428:	extr	w0, w0, w2, #29
  43b42c:	str	w0, [x1, #32]
  43b430:	mov	x2, x19
  43b434:	add	x1, x20, #0x8
  43b438:	add	x0, x19, #0x1c
  43b43c:	bl	43a960 <nftw@plt+0x37c70>
  43b440:	mov	x1, x22
  43b444:	mov	x0, x19
  43b448:	ldp	x19, x20, [sp, #16]
  43b44c:	ldp	x21, x22, [sp, #32]
  43b450:	ldp	x29, x30, [sp], #48
  43b454:	b	43a94c <nftw@plt+0x37c5c>
  43b458:	stp	x29, x30, [sp, #-80]!
  43b45c:	mov	x29, sp
  43b460:	stp	x21, x22, [sp, #32]
  43b464:	ldr	w21, [x2, #24]
  43b468:	stp	x19, x20, [sp, #16]
  43b46c:	mov	x19, x1
  43b470:	stp	x23, x24, [sp, #48]
  43b474:	stp	x25, x26, [sp, #64]
  43b478:	mov	x26, x0
  43b47c:	mov	x25, x2
  43b480:	cbz	w21, 43b504 <nftw@plt+0x38814>
  43b484:	mov	x20, #0x80                  	// #128
  43b488:	mov	w22, w21
  43b48c:	sub	x20, x20, w21, uxtw
  43b490:	add	x0, x22, #0x1c
  43b494:	cmp	x20, x1
  43b498:	add	x0, x25, x0
  43b49c:	csel	x20, x20, x1, ls  // ls = plast
  43b4a0:	mov	x1, x26
  43b4a4:	mov	x2, x20
  43b4a8:	add	x22, x22, x20
  43b4ac:	bl	4025d0 <memcpy@plt>
  43b4b0:	ldr	w1, [x25, #24]
  43b4b4:	cmp	x22, #0x40
  43b4b8:	add	w1, w1, w20
  43b4bc:	str	w1, [x25, #24]
  43b4c0:	b.ls	43b4fc <nftw@plt+0x3880c>  // b.plast
  43b4c4:	add	x23, x25, #0x1c
  43b4c8:	and	x24, x22, #0xffffffffffffffc0
  43b4cc:	mov	x2, x25
  43b4d0:	mov	x1, x24
  43b4d4:	mov	x0, x23
  43b4d8:	bl	43a960 <nftw@plt+0x37c70>
  43b4dc:	add	x1, x24, #0x1c
  43b4e0:	add	w21, w21, w20
  43b4e4:	and	x2, x22, #0x3f
  43b4e8:	add	x1, x25, x1
  43b4ec:	mov	x0, x23
  43b4f0:	and	w21, w21, #0x3f
  43b4f4:	bl	4025d0 <memcpy@plt>
  43b4f8:	str	w21, [x25, #24]
  43b4fc:	add	x26, x26, x20
  43b500:	sub	x19, x19, x20
  43b504:	cmp	x19, #0x40
  43b508:	b.ls	43b5b0 <nftw@plt+0x388c0>  // b.plast
  43b50c:	tst	x26, #0x3
  43b510:	b.eq	43b594 <nftw@plt+0x388a4>  // b.none
  43b514:	mov	x20, x26
  43b518:	add	x21, x25, #0x1c
  43b51c:	add	x22, x26, x19
  43b520:	ldp	x0, x1, [x20]
  43b524:	stp	x0, x1, [x21]
  43b528:	mov	x2, x25
  43b52c:	ldp	x0, x1, [x20, #16]
  43b530:	stp	x0, x1, [x21, #16]
  43b534:	add	x20, x20, #0x40
  43b538:	ldp	x0, x1, [x20, #-32]
  43b53c:	stp	x0, x1, [x21, #32]
  43b540:	ldp	x0, x1, [x20, #-16]
  43b544:	stp	x0, x1, [x21, #48]
  43b548:	mov	x0, x21
  43b54c:	mov	x1, #0x40                  	// #64
  43b550:	bl	43a960 <nftw@plt+0x37c70>
  43b554:	sub	x0, x22, x20
  43b558:	cmp	x0, #0x40
  43b55c:	b.hi	43b520 <nftw@plt+0x38830>  // b.pmore
  43b560:	sub	x3, x19, #0x41
  43b564:	sub	x19, x19, #0x40
  43b568:	mov	x1, #0xffffffffffffffc0    	// #-64
  43b56c:	lsr	x3, x3, #6
  43b570:	add	x0, x3, #0x1
  43b574:	madd	x19, x3, x1, x19
  43b578:	add	x26, x26, x0, lsl #6
  43b57c:	mov	x2, x19
  43b580:	mov	x1, x26
  43b584:	add	x0, x25, #0x1c
  43b588:	bl	4025d0 <memcpy@plt>
  43b58c:	str	w19, [x25, #24]
  43b590:	b	43b5b4 <nftw@plt+0x388c4>
  43b594:	and	x20, x19, #0xffffffffffffffc0
  43b598:	mov	x0, x26
  43b59c:	and	x19, x19, #0x3f
  43b5a0:	add	x26, x26, x20
  43b5a4:	mov	x2, x25
  43b5a8:	mov	x1, x20
  43b5ac:	bl	43a960 <nftw@plt+0x37c70>
  43b5b0:	cbnz	x19, 43b57c <nftw@plt+0x3888c>
  43b5b4:	ldp	x19, x20, [sp, #16]
  43b5b8:	ldp	x21, x22, [sp, #32]
  43b5bc:	ldp	x23, x24, [sp, #48]
  43b5c0:	ldp	x25, x26, [sp, #64]
  43b5c4:	ldp	x29, x30, [sp], #80
  43b5c8:	ret
  43b5cc:	stp	x29, x30, [sp, #-192]!
  43b5d0:	mov	x3, x0
  43b5d4:	mov	x4, x1
  43b5d8:	mov	x29, sp
  43b5dc:	add	x0, sp, #0x20
  43b5e0:	str	x19, [sp, #16]
  43b5e4:	mov	x19, x2
  43b5e8:	bl	43a918 <nftw@plt+0x37c28>
  43b5ec:	add	x2, sp, #0x20
  43b5f0:	mov	x1, x4
  43b5f4:	mov	x0, x3
  43b5f8:	bl	43b458 <nftw@plt+0x38768>
  43b5fc:	mov	x1, x19
  43b600:	add	x0, sp, #0x20
  43b604:	bl	43b3a4 <nftw@plt+0x386b4>
  43b608:	ldr	x19, [sp, #16]
  43b60c:	ldp	x29, x30, [sp], #192
  43b610:	ret
  43b614:	mov	x12, #0x1120                	// #4384
  43b618:	sub	sp, sp, x12
  43b61c:	stp	x29, x30, [sp]
  43b620:	mov	x29, sp
  43b624:	stp	x21, x22, [sp, #32]
  43b628:	mov	x22, #0x1000                	// #4096
  43b62c:	mov	x21, x1
  43b630:	stp	x19, x20, [sp, #16]
  43b634:	mov	x20, x0
  43b638:	add	x0, sp, #0x38
  43b63c:	bl	43a918 <nftw@plt+0x37c28>
  43b640:	mov	x19, #0x0                   	// #0
  43b644:	add	x0, sp, #0xd8
  43b648:	sub	x2, x22, x19
  43b64c:	add	x0, x0, x19
  43b650:	mov	x3, x20
  43b654:	mov	x1, #0x1                   	// #1
  43b658:	bl	402a40 <fread@plt>
  43b65c:	add	x19, x19, x0
  43b660:	cmp	x19, #0xfff
  43b664:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  43b668:	b.ne	43b644 <nftw@plt+0x38954>  // b.any
  43b66c:	cbnz	x0, 43b688 <nftw@plt+0x38998>
  43b670:	mov	x0, x20
  43b674:	bl	402ce0 <ferror@plt>
  43b678:	mov	w20, w0
  43b67c:	cbz	w0, 43b69c <nftw@plt+0x389ac>
  43b680:	mov	w20, #0x1                   	// #1
  43b684:	b	43b6bc <nftw@plt+0x389cc>
  43b688:	add	x2, sp, #0x38
  43b68c:	add	x0, sp, #0xd8
  43b690:	mov	x1, #0x1000                	// #4096
  43b694:	bl	43a960 <nftw@plt+0x37c70>
  43b698:	b	43b640 <nftw@plt+0x38950>
  43b69c:	cbz	x19, 43b6b0 <nftw@plt+0x389c0>
  43b6a0:	add	x2, sp, #0x38
  43b6a4:	mov	x1, x19
  43b6a8:	add	x0, sp, #0xd8
  43b6ac:	bl	43b458 <nftw@plt+0x38768>
  43b6b0:	mov	x1, x21
  43b6b4:	add	x0, sp, #0x38
  43b6b8:	bl	43b3a4 <nftw@plt+0x386b4>
  43b6bc:	mov	w0, w20
  43b6c0:	mov	x12, #0x1120                	// #4384
  43b6c4:	ldp	x29, x30, [sp]
  43b6c8:	ldp	x19, x20, [sp, #16]
  43b6cc:	ldp	x21, x22, [sp, #32]
  43b6d0:	add	sp, sp, x12
  43b6d4:	ret
  43b6d8:	stp	x29, x30, [sp, #-48]!
  43b6dc:	mov	x29, sp
  43b6e0:	stp	x19, x20, [sp, #16]
  43b6e4:	mov	x19, x0
  43b6e8:	str	x21, [sp, #32]
  43b6ec:	cbz	x0, 43b728 <nftw@plt+0x38a38>
  43b6f0:	mov	x1, #0x0                   	// #0
  43b6f4:	ldr	x2, [x19, x1, lsl #3]
  43b6f8:	add	w0, w1, #0x1
  43b6fc:	add	x1, x1, #0x1
  43b700:	cbnz	x2, 43b6f4 <nftw@plt+0x38a04>
  43b704:	sbfiz	x0, x0, #3, #32
  43b708:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43b70c:	mov	x20, x0
  43b710:	mov	x21, #0x0                   	// #0
  43b714:	ldr	x0, [x19, x21]
  43b718:	add	x1, x20, x21
  43b71c:	cbnz	x0, 43b73c <nftw@plt+0x38a4c>
  43b720:	mov	x19, x20
  43b724:	str	xzr, [x1]
  43b728:	mov	x0, x19
  43b72c:	ldp	x19, x20, [sp, #16]
  43b730:	ldr	x21, [sp, #32]
  43b734:	ldp	x29, x30, [sp], #48
  43b738:	ret
  43b73c:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  43b740:	str	x0, [x20, x21]
  43b744:	add	x21, x21, #0x8
  43b748:	b	43b714 <nftw@plt+0x38a24>
  43b74c:	cbnz	x0, 43b774 <nftw@plt+0x38a84>
  43b750:	ret
  43b754:	add	x20, x20, #0x8
  43b758:	bl	402a80 <free@plt>
  43b75c:	ldr	x0, [x20]
  43b760:	cbnz	x0, 43b754 <nftw@plt+0x38a64>
  43b764:	mov	x0, x19
  43b768:	ldp	x19, x20, [sp, #16]
  43b76c:	ldp	x29, x30, [sp], #32
  43b770:	b	402a80 <free@plt>
  43b774:	stp	x29, x30, [sp, #-32]!
  43b778:	mov	x29, sp
  43b77c:	stp	x19, x20, [sp, #16]
  43b780:	mov	x19, x0
  43b784:	mov	x20, x0
  43b788:	b	43b75c <nftw@plt+0x38a6c>
  43b78c:	stp	x29, x30, [sp, #-112]!
  43b790:	mov	x29, sp
  43b794:	stp	x19, x20, [sp, #16]
  43b798:	mov	x19, x0
  43b79c:	stp	x21, x22, [sp, #32]
  43b7a0:	stp	x23, x24, [sp, #48]
  43b7a4:	stp	x25, x26, [sp, #64]
  43b7a8:	stp	x27, x28, [sp, #80]
  43b7ac:	cbz	x0, 43b870 <nftw@plt+0x38b80>
  43b7b0:	bl	402630 <strlen@plt>
  43b7b4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43b7b8:	add	x0, x0, #0x1
  43b7bc:	add	x22, x22, #0xae
  43b7c0:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43b7c4:	mov	x21, x0
  43b7c8:	mov	x26, #0x0                   	// #0
  43b7cc:	mov	x20, #0x0                   	// #0
  43b7d0:	mov	w27, #0x0                   	// #0
  43b7d4:	mov	w25, #0x0                   	// #0
  43b7d8:	mov	w23, #0x0                   	// #0
  43b7dc:	mov	w24, #0x0                   	// #0
  43b7e0:	ldrb	w0, [x19]
  43b7e4:	ldrh	w0, [x22, x0, lsl #1]
  43b7e8:	tbnz	w0, #6, 43b890 <nftw@plt+0x38ba0>
  43b7ec:	cbz	w27, 43b7fc <nftw@plt+0x38b0c>
  43b7f0:	sub	w0, w27, #0x1
  43b7f4:	cmp	w0, w26
  43b7f8:	b.gt	43b814 <nftw@plt+0x38b24>
  43b7fc:	cbnz	x20, 43b898 <nftw@plt+0x38ba8>
  43b800:	mov	x0, #0x40                  	// #64
  43b804:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43b808:	mov	x20, x0
  43b80c:	mov	w27, #0x8                   	// #8
  43b810:	str	xzr, [x20, x26, lsl #3]
  43b814:	mov	w2, w25
  43b818:	mov	x1, x21
  43b81c:	ldrb	w0, [x19]
  43b820:	cbnz	w0, 43b8b0 <nftw@plt+0x38bc0>
  43b824:	mov	w25, w2
  43b828:	strb	wzr, [x1]
  43b82c:	lsl	x1, x26, #3
  43b830:	mov	x0, x21
  43b834:	str	x1, [sp, #104]
  43b838:	add	x28, x20, x26, lsl #3
  43b83c:	bl	43d27c <_obstack_memory_used@@Base+0x224>
  43b840:	ldr	x1, [sp, #104]
  43b844:	str	x0, [x20, x1]
  43b848:	str	xzr, [x28, #8]
  43b84c:	ldrb	w1, [x19]
  43b850:	ldrb	w0, [x19]
  43b854:	ldrh	w1, [x22, x1, lsl #1]
  43b858:	tbnz	w1, #6, 43b95c <nftw@plt+0x38c6c>
  43b85c:	add	x26, x26, #0x1
  43b860:	cbnz	w0, 43b7e0 <nftw@plt+0x38af0>
  43b864:	mov	x19, x20
  43b868:	mov	x0, x21
  43b86c:	bl	402a80 <free@plt>
  43b870:	mov	x0, x19
  43b874:	ldp	x19, x20, [sp, #16]
  43b878:	ldp	x21, x22, [sp, #32]
  43b87c:	ldp	x23, x24, [sp, #48]
  43b880:	ldp	x25, x26, [sp, #64]
  43b884:	ldp	x27, x28, [sp, #80]
  43b888:	ldp	x29, x30, [sp], #112
  43b88c:	ret
  43b890:	add	x19, x19, #0x1
  43b894:	b	43b7e0 <nftw@plt+0x38af0>
  43b898:	lsl	w27, w27, #1
  43b89c:	mov	x0, x20
  43b8a0:	sbfiz	x1, x27, #3, #32
  43b8a4:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  43b8a8:	mov	x20, x0
  43b8ac:	b	43b810 <nftw@plt+0x38b20>
  43b8b0:	ldrh	w3, [x22, w0, sxtw #1]
  43b8b4:	tbz	w3, #6, 43b8c4 <nftw@plt+0x38bd4>
  43b8b8:	orr	w25, w24, w23
  43b8bc:	orr	w25, w25, w2
  43b8c0:	cbz	w25, 43b950 <nftw@plt+0x38c60>
  43b8c4:	cbz	w2, 43b8d8 <nftw@plt+0x38be8>
  43b8c8:	mov	w2, #0x0                   	// #0
  43b8cc:	strb	w0, [x1], #1
  43b8d0:	add	x19, x19, #0x1
  43b8d4:	b	43b81c <nftw@plt+0x38b2c>
  43b8d8:	cmp	w0, #0x5c
  43b8dc:	b.eq	43b92c <nftw@plt+0x38c3c>  // b.none
  43b8e0:	cbz	w24, 43b8f4 <nftw@plt+0x38c04>
  43b8e4:	cmp	w0, #0x27
  43b8e8:	b.eq	43b924 <nftw@plt+0x38c34>  // b.none
  43b8ec:	strb	w0, [x1], #1
  43b8f0:	b	43b8d0 <nftw@plt+0x38be0>
  43b8f4:	cbz	w23, 43b90c <nftw@plt+0x38c1c>
  43b8f8:	cmp	w0, #0x22
  43b8fc:	b.ne	43b8c8 <nftw@plt+0x38bd8>  // b.any
  43b900:	mov	w2, w24
  43b904:	mov	w23, #0x0                   	// #0
  43b908:	b	43b8d0 <nftw@plt+0x38be0>
  43b90c:	cmp	w0, #0x27
  43b910:	b.eq	43b934 <nftw@plt+0x38c44>  // b.none
  43b914:	cmp	w0, #0x22
  43b918:	b.eq	43b940 <nftw@plt+0x38c50>  // b.none
  43b91c:	mov	w2, w23
  43b920:	strb	w0, [x1], #1
  43b924:	mov	w24, #0x0                   	// #0
  43b928:	b	43b8d0 <nftw@plt+0x38be0>
  43b92c:	mov	w2, #0x1                   	// #1
  43b930:	b	43b8d0 <nftw@plt+0x38be0>
  43b934:	mov	w2, w23
  43b938:	mov	w24, #0x1                   	// #1
  43b93c:	b	43b8d0 <nftw@plt+0x38be0>
  43b940:	mov	w2, w23
  43b944:	mov	w24, w23
  43b948:	mov	w23, #0x1                   	// #1
  43b94c:	b	43b8d0 <nftw@plt+0x38be0>
  43b950:	mov	w23, #0x0                   	// #0
  43b954:	mov	w24, #0x0                   	// #0
  43b958:	b	43b828 <nftw@plt+0x38b38>
  43b95c:	add	x19, x19, #0x1
  43b960:	b	43b84c <nftw@plt+0x38b5c>
  43b964:	cbz	x1, 43ba30 <nftw@plt+0x38d40>
  43b968:	stp	x29, x30, [sp, #-64]!
  43b96c:	mov	x29, sp
  43b970:	stp	x19, x20, [sp, #16]
  43b974:	mov	x20, x0
  43b978:	mov	x19, x1
  43b97c:	stp	x23, x24, [sp, #48]
  43b980:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43b984:	mov	x24, #0x21                  	// #33
  43b988:	add	x23, x23, #0xae
  43b98c:	movk	x24, #0x400, lsl #48
  43b990:	stp	x21, x22, [sp, #32]
  43b994:	ldr	x21, [x20]
  43b998:	cbnz	x21, 43ba0c <nftw@plt+0x38d1c>
  43b99c:	mov	w0, #0x0                   	// #0
  43b9a0:	b	43b9dc <nftw@plt+0x38cec>
  43b9a4:	ldrh	w0, [x23, w22, sxtw #1]
  43b9a8:	tbnz	w0, #6, 43b9f0 <nftw@plt+0x38d00>
  43b9ac:	sub	w1, w22, #0x22
  43b9b0:	and	w1, w1, #0xff
  43b9b4:	cmp	w1, #0x3a
  43b9b8:	b.hi	43b9c4 <nftw@plt+0x38cd4>  // b.pmore
  43b9bc:	lsr	x1, x24, x1
  43b9c0:	tbnz	w1, #0, 43b9f0 <nftw@plt+0x38d00>
  43b9c4:	mov	x1, x19
  43b9c8:	mov	w0, w22
  43b9cc:	bl	402710 <fputc@plt>
  43b9d0:	cmn	w0, #0x1
  43b9d4:	b.ne	43ba08 <nftw@plt+0x38d18>  // b.any
  43b9d8:	mov	w0, #0x1                   	// #1
  43b9dc:	ldp	x19, x20, [sp, #16]
  43b9e0:	ldp	x21, x22, [sp, #32]
  43b9e4:	ldp	x23, x24, [sp, #48]
  43b9e8:	ldp	x29, x30, [sp], #64
  43b9ec:	ret
  43b9f0:	mov	x1, x19
  43b9f4:	mov	w0, #0x5c                  	// #92
  43b9f8:	bl	402710 <fputc@plt>
  43b9fc:	cmn	w0, #0x1
  43ba00:	b.ne	43b9c4 <nftw@plt+0x38cd4>  // b.any
  43ba04:	b	43b9d8 <nftw@plt+0x38ce8>
  43ba08:	add	x21, x21, #0x1
  43ba0c:	ldrb	w22, [x21]
  43ba10:	cbnz	w22, 43b9a4 <nftw@plt+0x38cb4>
  43ba14:	mov	x1, x19
  43ba18:	mov	w0, #0xa                   	// #10
  43ba1c:	bl	402710 <fputc@plt>
  43ba20:	cmn	w0, #0x1
  43ba24:	b.eq	43b9d8 <nftw@plt+0x38ce8>  // b.none
  43ba28:	add	x20, x20, #0x8
  43ba2c:	b	43b994 <nftw@plt+0x38ca4>
  43ba30:	mov	w0, #0x1                   	// #1
  43ba34:	ret
  43ba38:	stp	x29, x30, [sp, #-256]!
  43ba3c:	mov	x29, sp
  43ba40:	stp	x27, x28, [sp, #80]
  43ba44:	ldr	x28, [x1]
  43ba48:	stp	x19, x20, [sp, #16]
  43ba4c:	mov	x19, x1
  43ba50:	stp	x21, x22, [sp, #32]
  43ba54:	mov	x21, x0
  43ba58:	mov	w0, #0x7d0                 	// #2000
  43ba5c:	stp	x23, x24, [sp, #48]
  43ba60:	stp	x25, x26, [sp, #64]
  43ba64:	mov	w26, #0x0                   	// #0
  43ba68:	str	w0, [sp, #100]
  43ba6c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43ba70:	add	x0, x0, #0xae
  43ba74:	str	x0, [sp, #112]
  43ba78:	ldr	w0, [x21]
  43ba7c:	add	w22, w26, #0x1
  43ba80:	cmp	w0, w22
  43ba84:	b.gt	43baa4 <nftw@plt+0x38db4>
  43ba88:	ldp	x19, x20, [sp, #16]
  43ba8c:	ldp	x21, x22, [sp, #32]
  43ba90:	ldp	x23, x24, [sp, #48]
  43ba94:	ldp	x25, x26, [sp, #64]
  43ba98:	ldp	x27, x28, [sp, #80]
  43ba9c:	ldp	x29, x30, [sp], #256
  43baa0:	ret
  43baa4:	ldr	x0, [x19]
  43baa8:	sbfiz	x25, x22, #3, #32
  43baac:	sxtw	x1, w22
  43bab0:	str	x1, [sp, #104]
  43bab4:	ldr	x20, [x0, x25]
  43bab8:	ldrb	w1, [x20]
  43babc:	cmp	w1, #0x40
  43bac0:	b.ne	43bca0 <nftw@plt+0x38fb0>  // b.any
  43bac4:	ldr	w1, [sp, #100]
  43bac8:	subs	w1, w1, #0x1
  43bacc:	str	w1, [sp, #100]
  43bad0:	b.ne	43baf4 <nftw@plt+0x38e04>  // b.any
  43bad4:	ldr	x2, [x0]
  43bad8:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43badc:	add	x1, x1, #0xb3b
  43bae0:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43bae4:	ldr	x0, [x0, #1416]
  43bae8:	bl	402cb0 <fprintf@plt>
  43baec:	mov	w0, #0x1                   	// #1
  43baf0:	bl	43d07c <_obstack_memory_used@@Base+0x24>
  43baf4:	add	x20, x20, #0x1
  43baf8:	add	x1, sp, #0x80
  43bafc:	mov	x0, x20
  43bb00:	bl	44da08 <_obstack_memory_used@@Base+0x109b0>
  43bb04:	tbnz	w0, #31, 43bca0 <nftw@plt+0x38fb0>
  43bb08:	ldr	w0, [sp, #144]
  43bb0c:	and	w0, w0, #0xf000
  43bb10:	cmp	w0, #0x4, lsl #12
  43bb14:	b.ne	43bb2c <nftw@plt+0x38e3c>  // b.any
  43bb18:	ldr	x0, [x19]
  43bb1c:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43bb20:	add	x1, x1, #0xb64
  43bb24:	ldr	x2, [x0]
  43bb28:	b	43bae0 <nftw@plt+0x38df0>
  43bb2c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x19fa8>
  43bb30:	add	x1, x0, #0xf69
  43bb34:	mov	x0, x20
  43bb38:	bl	4027a0 <fopen@plt>
  43bb3c:	mov	x20, x0
  43bb40:	cbz	x0, 43bca0 <nftw@plt+0x38fb0>
  43bb44:	mov	w2, #0x2                   	// #2
  43bb48:	mov	x1, #0x0                   	// #0
  43bb4c:	bl	402960 <fseek@plt>
  43bb50:	cmn	w0, #0x1
  43bb54:	b.eq	43bc98 <nftw@plt+0x38fa8>  // b.none
  43bb58:	mov	x0, x20
  43bb5c:	bl	4026d0 <ftell@plt>
  43bb60:	mov	x24, x0
  43bb64:	cmn	x0, #0x1
  43bb68:	b.eq	43bc98 <nftw@plt+0x38fa8>  // b.none
  43bb6c:	mov	x0, x20
  43bb70:	mov	w2, #0x0                   	// #0
  43bb74:	mov	x1, #0x0                   	// #0
  43bb78:	bl	402960 <fseek@plt>
  43bb7c:	cmn	w0, #0x1
  43bb80:	b.eq	43bc98 <nftw@plt+0x38fa8>  // b.none
  43bb84:	add	x0, x24, #0x1
  43bb88:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43bb8c:	mov	x3, x20
  43bb90:	mov	x23, x0
  43bb94:	mov	x2, x24
  43bb98:	mov	x1, #0x1                   	// #1
  43bb9c:	bl	402a40 <fread@plt>
  43bba0:	mov	x27, x0
  43bba4:	cmp	x24, x0
  43bba8:	b.ne	43bc8c <nftw@plt+0x38f9c>  // b.any
  43bbac:	mov	x0, x23
  43bbb0:	strb	wzr, [x23, x27]
  43bbb4:	ldrb	w1, [x0]
  43bbb8:	cbz	w1, 43bcb8 <nftw@plt+0x38fc8>
  43bbbc:	ldr	x2, [sp, #112]
  43bbc0:	ldrh	w1, [x2, w1, sxtw #1]
  43bbc4:	tbnz	w1, #6, 43bca8 <nftw@plt+0x38fb8>
  43bbc8:	mov	x0, x23
  43bbcc:	bl	43b78c <nftw@plt+0x38a9c>
  43bbd0:	mov	x24, x0
  43bbd4:	ldr	x0, [x19]
  43bbd8:	cmp	x0, x28
  43bbdc:	b.ne	43bbec <nftw@plt+0x38efc>  // b.any
  43bbe0:	mov	x0, x28
  43bbe4:	bl	43b6d8 <nftw@plt+0x389e8>
  43bbe8:	str	x0, [x19]
  43bbec:	mov	x27, #0x0                   	// #0
  43bbf0:	ldr	x0, [x24, x27, lsl #3]
  43bbf4:	lsl	x4, x27, #3
  43bbf8:	cbnz	x0, 43bcb0 <nftw@plt+0x38fc0>
  43bbfc:	ldr	x0, [x19]
  43bc00:	str	x4, [sp, #120]
  43bc04:	ldr	x0, [x0, x25]
  43bc08:	bl	402a80 <free@plt>
  43bc0c:	ldrsw	x1, [x21]
  43bc10:	ldr	x0, [x19]
  43bc14:	add	x1, x1, #0x1
  43bc18:	add	x1, x1, x27
  43bc1c:	lsl	x1, x1, #3
  43bc20:	bl	43d1dc <_obstack_memory_used@@Base+0x184>
  43bc24:	ldr	x3, [sp, #104]
  43bc28:	add	x1, x25, #0x8
  43bc2c:	ldr	w2, [x21]
  43bc30:	add	x1, x0, x1
  43bc34:	add	x5, x3, x27
  43bc38:	str	x0, [x19]
  43bc3c:	sub	w2, w2, w22
  43bc40:	mov	w22, w26
  43bc44:	add	x0, x0, x5, lsl #3
  43bc48:	sbfiz	x2, x2, #3, #32
  43bc4c:	bl	4025e0 <memmove@plt>
  43bc50:	ldr	x4, [sp, #120]
  43bc54:	mov	x1, x24
  43bc58:	ldr	x0, [x19]
  43bc5c:	mov	x2, x4
  43bc60:	add	x0, x0, x25
  43bc64:	bl	4025d0 <memcpy@plt>
  43bc68:	ldr	w0, [x21]
  43bc6c:	sub	w0, w0, #0x1
  43bc70:	add	w3, w0, w27
  43bc74:	str	w3, [x21]
  43bc78:	mov	x0, x24
  43bc7c:	bl	402a80 <free@plt>
  43bc80:	mov	x0, x23
  43bc84:	bl	402a80 <free@plt>
  43bc88:	b	43bc98 <nftw@plt+0x38fa8>
  43bc8c:	mov	x0, x20
  43bc90:	bl	402ce0 <ferror@plt>
  43bc94:	cbz	w0, 43bbac <nftw@plt+0x38ebc>
  43bc98:	mov	x0, x20
  43bc9c:	bl	402760 <fclose@plt>
  43bca0:	mov	w26, w22
  43bca4:	b	43ba78 <nftw@plt+0x38d88>
  43bca8:	add	x0, x0, #0x1
  43bcac:	b	43bbb4 <nftw@plt+0x38ec4>
  43bcb0:	add	x27, x27, #0x1
  43bcb4:	b	43bbf0 <nftw@plt+0x38f00>
  43bcb8:	mov	x0, #0x8                   	// #8
  43bcbc:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43bcc0:	mov	x24, x0
  43bcc4:	str	xzr, [x0]
  43bcc8:	b	43bbd4 <nftw@plt+0x38ee4>
  43bccc:	cbz	x0, 43bcec <nftw@plt+0x38ffc>
  43bcd0:	sub	x1, x0, #0x8
  43bcd4:	mov	x2, #0x0                   	// #0
  43bcd8:	mov	w0, w2
  43bcdc:	add	x2, x2, #0x1
  43bce0:	ldr	x3, [x1, x2, lsl #3]
  43bce4:	cbnz	x3, 43bcd8 <nftw@plt+0x38fe8>
  43bce8:	ret
  43bcec:	mov	w0, #0x0                   	// #0
  43bcf0:	b	43bce8 <nftw@plt+0x38ff8>
  43bcf4:	b	402a00 <strcmp@plt>
  43bcf8:	b	4027f0 <strncmp@plt>
  43bcfc:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43bd00:	add	x4, x4, #0xfae
  43bd04:	mov	x3, x0
  43bd08:	mov	w5, #0x2f                  	// #47
  43bd0c:	mov	w0, #0x0                   	// #0
  43bd10:	mov	w6, #0x43                  	// #67
  43bd14:	ldrb	w2, [x3], #1
  43bd18:	cbnz	w2, 43bd20 <nftw@plt+0x39030>
  43bd1c:	ret
  43bd20:	cmp	w2, #0x5c
  43bd24:	mul	w1, w0, w6
  43bd28:	csel	w2, w2, w5, ne  // ne = any
  43bd2c:	sub	w1, w1, #0x71
  43bd30:	ldrb	w0, [x4, w2, sxtw]
  43bd34:	add	w0, w0, w1
  43bd38:	b	43bd14 <nftw@plt+0x39024>
  43bd3c:	stp	x29, x30, [sp, #-16]!
  43bd40:	mov	x29, sp
  43bd44:	bl	402a00 <strcmp@plt>
  43bd48:	cmp	w0, #0x0
  43bd4c:	cset	w0, eq  // eq = none
  43bd50:	ldp	x29, x30, [sp], #16
  43bd54:	ret
  43bd58:	stp	x29, x30, [sp, #-48]!
  43bd5c:	mov	x29, sp
  43bd60:	stp	x19, x20, [sp, #16]
  43bd64:	mov	x19, x1
  43bd68:	str	x21, [sp, #32]
  43bd6c:	bl	43cd0c <nftw@plt+0x3a01c>
  43bd70:	mov	x20, x0
  43bd74:	mov	x0, x19
  43bd78:	bl	43cd0c <nftw@plt+0x3a01c>
  43bd7c:	mov	x1, x0
  43bd80:	mov	x19, x0
  43bd84:	mov	x0, x20
  43bd88:	bl	43bd3c <nftw@plt+0x3904c>
  43bd8c:	mov	w21, w0
  43bd90:	mov	x0, x20
  43bd94:	bl	402a80 <free@plt>
  43bd98:	mov	x0, x19
  43bd9c:	bl	402a80 <free@plt>
  43bda0:	mov	w0, w21
  43bda4:	ldp	x19, x20, [sp, #16]
  43bda8:	ldr	x21, [sp, #32]
  43bdac:	ldp	x29, x30, [sp], #48
  43bdb0:	ret
  43bdb4:	cbz	x0, 43bdc0 <nftw@plt+0x390d0>
  43bdb8:	mov	w1, #0x2                   	// #2
  43bdbc:	b	402be0 <__fsetlocking@plt>
  43bdc0:	ret
  43bdc4:	b	43bdb4 <nftw@plt+0x390c4>
  43bdc8:	stp	x29, x30, [sp, #-16]!
  43bdcc:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43bdd0:	mov	x29, sp
  43bdd4:	ldr	x0, [x0, #1448]
  43bdd8:	bl	43bdb4 <nftw@plt+0x390c4>
  43bddc:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43bde0:	ldr	x0, [x0, #1440]
  43bde4:	bl	43bdb4 <nftw@plt+0x390c4>
  43bde8:	ldp	x29, x30, [sp], #16
  43bdec:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43bdf0:	ldr	x0, [x0, #1416]
  43bdf4:	b	43bdb4 <nftw@plt+0x390c4>
  43bdf8:	stp	x29, x30, [sp, #-32]!
  43bdfc:	mov	x29, sp
  43be00:	str	x19, [sp, #16]
  43be04:	bl	4027a0 <fopen@plt>
  43be08:	mov	x19, x0
  43be0c:	bl	43bdb4 <nftw@plt+0x390c4>
  43be10:	mov	x0, x19
  43be14:	ldr	x19, [sp, #16]
  43be18:	ldp	x29, x30, [sp], #32
  43be1c:	ret
  43be20:	stp	x29, x30, [sp, #-32]!
  43be24:	mov	x29, sp
  43be28:	str	x19, [sp, #16]
  43be2c:	bl	402850 <fdopen@plt>
  43be30:	mov	x19, x0
  43be34:	bl	43bdb4 <nftw@plt+0x390c4>
  43be38:	mov	x0, x19
  43be3c:	ldr	x19, [sp, #16]
  43be40:	ldp	x29, x30, [sp], #32
  43be44:	ret
  43be48:	stp	x29, x30, [sp, #-32]!
  43be4c:	mov	x29, sp
  43be50:	str	x19, [sp, #16]
  43be54:	bl	402aa0 <freopen@plt>
  43be58:	mov	x19, x0
  43be5c:	bl	43bdb4 <nftw@plt+0x390c4>
  43be60:	mov	x0, x19
  43be64:	ldr	x19, [sp, #16]
  43be68:	ldp	x29, x30, [sp], #32
  43be6c:	ret
  43be70:	cmp	x1, x0
  43be74:	cset	w0, eq  // eq = none
  43be78:	ret
  43be7c:	asr	x1, x0, #32
  43be80:	mov	w2, #0xadcc                	// #44492
  43be84:	sub	w1, w1, w0
  43be88:	movk	w2, #0xbdec, lsl #16
  43be8c:	add	w1, w1, w2
  43be90:	mov	w2, #0x109a                	// #4250
  43be94:	movk	w2, #0x2, lsl #16
  43be98:	eor	w1, w1, w2
  43be9c:	mov	w2, #0x2785                	// #10117
  43bea0:	mov	w3, #0x5234                	// #21044
  43bea4:	movk	w2, #0x5c24, lsl #16
  43bea8:	add	w0, w2, w0
  43beac:	sub	w0, w0, w1
  43beb0:	movk	w3, #0x4213, lsl #16
  43beb4:	eor	w0, w0, w1, lsl #8
  43beb8:	sub	w3, w3, w1
  43bebc:	sub	w3, w3, w0
  43bec0:	sub	w1, w1, w0
  43bec4:	eor	w3, w3, w0, lsr #13
  43bec8:	sub	w1, w1, w3
  43becc:	sub	w0, w0, w3
  43bed0:	eor	w1, w1, w3, lsr #12
  43bed4:	sub	w0, w0, w1
  43bed8:	sub	w3, w3, w1
  43bedc:	eor	w0, w0, w1, lsl #16
  43bee0:	sub	w3, w3, w0
  43bee4:	sub	w1, w1, w0
  43bee8:	eor	w3, w3, w0, lsr #5
  43beec:	sub	w1, w1, w3
  43bef0:	sub	w2, w0, w3
  43bef4:	eor	w1, w1, w3, lsr #3
  43bef8:	sub	w2, w2, w1
  43befc:	eor	w2, w2, w1, lsl #10
  43bf00:	sub	w1, w3, w1
  43bf04:	sub	w0, w1, w2
  43bf08:	eor	w0, w0, w2, lsr #15
  43bf0c:	ret
  43bf10:	ubfiz	x1, x1, #4, #32
  43bf14:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43bf18:	add	x4, x4, #0xbbc
  43bf1c:	add	w6, w0, #0x1
  43bf20:	add	x5, x4, x1
  43bf24:	ldr	w2, [x5, #8]
  43bf28:	umull	x2, w0, w2
  43bf2c:	lsr	x3, x2, #32
  43bf30:	sub	w2, w0, w3
  43bf34:	ldr	w0, [x5, #12]
  43bf38:	add	w2, w3, w2, lsr #1
  43bf3c:	lsr	w2, w2, w0
  43bf40:	ldr	w0, [x4, x1]
  43bf44:	sub	w0, w0, #0x2
  43bf48:	msub	w0, w2, w0, w6
  43bf4c:	ret
  43bf50:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43bf54:	add	x4, x4, #0xbbc
  43bf58:	mov	x2, x0
  43bf5c:	mov	w3, #0x0                   	// #0
  43bf60:	mov	w0, #0x1e                  	// #30
  43bf64:	cmp	w0, w3
  43bf68:	b.ne	43bf9c <nftw@plt+0x392ac>  // b.any
  43bf6c:	ubfiz	x1, x0, #4, #32
  43bf70:	ldr	w1, [x4, x1]
  43bf74:	cmp	x1, x2
  43bf78:	b.cs	43bfc8 <nftw@plt+0x392d8>  // b.hs, b.nlast
  43bf7c:	stp	x29, x30, [sp, #-16]!
  43bf80:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43bf84:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43bf88:	mov	x29, sp
  43bf8c:	ldr	x0, [x0, #1416]
  43bf90:	add	x1, x1, #0xb8d
  43bf94:	bl	402cb0 <fprintf@plt>
  43bf98:	bl	402970 <abort@plt>
  43bf9c:	sub	w1, w0, w3
  43bfa0:	add	w5, w3, w1, lsr #1
  43bfa4:	add	w1, w3, w1, lsr #1
  43bfa8:	lsl	x1, x1, #4
  43bfac:	ldr	w1, [x4, x1]
  43bfb0:	cmp	x1, x2
  43bfb4:	b.cs	43bfc0 <nftw@plt+0x392d0>  // b.hs, b.nlast
  43bfb8:	add	w3, w5, #0x1
  43bfbc:	b	43bf64 <nftw@plt+0x39274>
  43bfc0:	mov	w0, w5
  43bfc4:	b	43bf64 <nftw@plt+0x39274>
  43bfc8:	ret
  43bfcc:	ubfiz	x1, x1, #4, #32
  43bfd0:	adrp	x4, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43bfd4:	add	x4, x4, #0xbbc
  43bfd8:	add	x5, x4, x1
  43bfdc:	ldr	w1, [x4, x1]
  43bfe0:	ldr	w2, [x5, #4]
  43bfe4:	umull	x2, w0, w2
  43bfe8:	lsr	x2, x2, #32
  43bfec:	sub	w3, w0, w2
  43bff0:	add	w2, w2, w3, lsr #1
  43bff4:	ldr	w3, [x5, #12]
  43bff8:	lsr	w2, w2, w3
  43bffc:	msub	w0, w2, w1, w0
  43c000:	ret
  43c004:	stp	x29, x30, [sp, #-64]!
  43c008:	mov	x29, sp
  43c00c:	stp	x19, x20, [sp, #16]
  43c010:	mov	x19, x0
  43c014:	stp	x21, x22, [sp, #32]
  43c018:	ldr	w21, [x0, #104]
  43c01c:	ldp	x22, x20, [x0, #24]
  43c020:	ldp	x1, x0, [x0, #40]
  43c024:	str	x23, [sp, #48]
  43c028:	add	x23, x22, x20, lsl #3
  43c02c:	sub	x1, x1, x0
  43c030:	lsl	x0, x1, #1
  43c034:	cmp	x20, x1, lsl #1
  43c038:	b.cc	43c04c <nftw@plt+0x3935c>  // b.lo, b.ul, b.last
  43c03c:	cmp	x20, x1, lsl #3
  43c040:	b.ls	43c064 <nftw@plt+0x39374>  // b.plast
  43c044:	cmp	x20, #0x20
  43c048:	b.ls	43c064 <nftw@plt+0x39374>  // b.plast
  43c04c:	bl	43bf50 <nftw@plt+0x39260>
  43c050:	mov	w21, w0
  43c054:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43c058:	add	x0, x0, #0xbbc
  43c05c:	ubfiz	x1, x21, #4, #32
  43c060:	ldr	w20, [x0, x1]
  43c064:	ldr	x3, [x19, #88]
  43c068:	cbz	x3, 43c0ec <nftw@plt+0x393fc>
  43c06c:	ldr	x0, [x19, #80]
  43c070:	mov	x1, x20
  43c074:	mov	x2, #0x8                   	// #8
  43c078:	blr	x3
  43c07c:	cbz	x0, 43c17c <nftw@plt+0x3948c>
  43c080:	stp	x0, x20, [x19, #24]
  43c084:	mov	x20, x22
  43c088:	ldr	x0, [x19, #40]
  43c08c:	str	w21, [x19, #104]
  43c090:	ldr	x1, [x19, #48]
  43c094:	str	xzr, [x19, #48]
  43c098:	sub	x0, x0, x1
  43c09c:	str	x0, [x19, #40]
  43c0a0:	ldr	x21, [x20]
  43c0a4:	cmp	x21, #0x1
  43c0a8:	b.ls	43c140 <nftw@plt+0x39450>  // b.plast
  43c0ac:	ldr	x1, [x19]
  43c0b0:	mov	x0, x21
  43c0b4:	blr	x1
  43c0b8:	mov	w6, w0
  43c0bc:	ldr	w10, [x19, #104]
  43c0c0:	mov	w1, w10
  43c0c4:	bl	43bfcc <nftw@plt+0x392dc>
  43c0c8:	mov	w7, w0
  43c0cc:	ldr	x8, [x19, #24]
  43c0d0:	ubfiz	x0, x7, #3, #32
  43c0d4:	add	x2, x8, x0
  43c0d8:	ldr	x0, [x8, x0]
  43c0dc:	cbz	x0, 43c13c <nftw@plt+0x3944c>
  43c0e0:	cmp	x0, #0x1
  43c0e4:	b.ne	43c100 <nftw@plt+0x39410>  // b.any
  43c0e8:	bl	402970 <abort@plt>
  43c0ec:	ldr	x2, [x19, #64]
  43c0f0:	mov	x0, x20
  43c0f4:	mov	x1, #0x8                   	// #8
  43c0f8:	blr	x2
  43c0fc:	b	43c07c <nftw@plt+0x3938c>
  43c100:	ldr	x9, [x19, #32]
  43c104:	mov	w1, w10
  43c108:	mov	w0, w6
  43c10c:	bl	43bf10 <nftw@plt+0x39220>
  43c110:	add	w7, w7, w0
  43c114:	cmp	x9, w7, uxtw
  43c118:	b.hi	43c120 <nftw@plt+0x39430>  // b.pmore
  43c11c:	sub	w7, w7, w9
  43c120:	ubfiz	x1, x7, #3, #32
  43c124:	add	x2, x8, x1
  43c128:	ldr	x1, [x8, x1]
  43c12c:	cbz	x1, 43c13c <nftw@plt+0x3944c>
  43c130:	cmp	x1, #0x1
  43c134:	b.ne	43c110 <nftw@plt+0x39420>  // b.any
  43c138:	b	43c0e8 <nftw@plt+0x393f8>
  43c13c:	str	x21, [x2]
  43c140:	add	x20, x20, #0x8
  43c144:	cmp	x23, x20
  43c148:	b.hi	43c0a0 <nftw@plt+0x393b0>  // b.pmore
  43c14c:	ldr	x1, [x19, #72]
  43c150:	cbz	x1, 43c164 <nftw@plt+0x39474>
  43c154:	mov	x0, x22
  43c158:	blr	x1
  43c15c:	mov	w0, #0x1                   	// #1
  43c160:	b	43c180 <nftw@plt+0x39490>
  43c164:	ldr	x2, [x19, #96]
  43c168:	cbz	x2, 43c15c <nftw@plt+0x3946c>
  43c16c:	ldr	x0, [x19, #80]
  43c170:	mov	x1, x22
  43c174:	blr	x2
  43c178:	b	43c15c <nftw@plt+0x3946c>
  43c17c:	mov	w0, #0x0                   	// #0
  43c180:	ldp	x19, x20, [sp, #16]
  43c184:	ldp	x21, x22, [sp, #32]
  43c188:	ldr	x23, [sp, #48]
  43c18c:	ldp	x29, x30, [sp], #64
  43c190:	ret
  43c194:	ldr	x0, [x0, #32]
  43c198:	ret
  43c19c:	ldp	x1, x0, [x0, #40]
  43c1a0:	sub	x0, x1, x0
  43c1a4:	ret
  43c1a8:	stp	x29, x30, [sp, #-96]!
  43c1ac:	mov	x29, sp
  43c1b0:	stp	x19, x20, [sp, #16]
  43c1b4:	stp	x21, x22, [sp, #32]
  43c1b8:	mov	x21, x5
  43c1bc:	stp	x23, x24, [sp, #48]
  43c1c0:	mov	x24, x2
  43c1c4:	mov	x23, x3
  43c1c8:	stp	x25, x26, [sp, #64]
  43c1cc:	mov	x25, x1
  43c1d0:	stp	x27, x28, [sp, #80]
  43c1d4:	mov	x27, x4
  43c1d8:	mov	x28, x6
  43c1dc:	bl	43bf50 <nftw@plt+0x39260>
  43c1e0:	mov	w22, w0
  43c1e4:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43c1e8:	add	x0, x0, #0xbbc
  43c1ec:	ubfiz	x1, x22, #4, #32
  43c1f0:	mov	x2, #0x70                  	// #112
  43c1f4:	ldr	w26, [x0, x1]
  43c1f8:	mov	x0, x27
  43c1fc:	mov	x1, #0x1                   	// #1
  43c200:	blr	x21
  43c204:	cbnz	x0, 43c22c <nftw@plt+0x3953c>
  43c208:	mov	x20, #0x0                   	// #0
  43c20c:	mov	x0, x20
  43c210:	ldp	x19, x20, [sp, #16]
  43c214:	ldp	x21, x22, [sp, #32]
  43c218:	ldp	x23, x24, [sp, #48]
  43c21c:	ldp	x25, x26, [sp, #64]
  43c220:	ldp	x27, x28, [sp, #80]
  43c224:	ldp	x29, x30, [sp], #96
  43c228:	ret
  43c22c:	mov	x19, x0
  43c230:	mov	x1, x26
  43c234:	mov	x0, x27
  43c238:	mov	x2, #0x8                   	// #8
  43c23c:	blr	x21
  43c240:	mov	x20, x0
  43c244:	str	x0, [x19, #24]
  43c248:	cbnz	x0, 43c260 <nftw@plt+0x39570>
  43c24c:	cbz	x28, 43c208 <nftw@plt+0x39518>
  43c250:	mov	x1, x19
  43c254:	mov	x0, x27
  43c258:	blr	x28
  43c25c:	b	43c20c <nftw@plt+0x3951c>
  43c260:	mov	x20, x19
  43c264:	stp	x25, x24, [x19]
  43c268:	str	x23, [x19, #16]
  43c26c:	str	x26, [x19, #32]
  43c270:	stp	x27, x21, [x19, #80]
  43c274:	str	x28, [x19, #96]
  43c278:	str	w22, [x19, #104]
  43c27c:	b	43c20c <nftw@plt+0x3951c>
  43c280:	stp	x29, x30, [sp, #-96]!
  43c284:	mov	x29, sp
  43c288:	stp	x19, x20, [sp, #16]
  43c28c:	mov	x19, x4
  43c290:	stp	x21, x22, [sp, #32]
  43c294:	mov	x21, x5
  43c298:	stp	x23, x24, [sp, #48]
  43c29c:	mov	x24, x2
  43c2a0:	mov	x23, x3
  43c2a4:	stp	x25, x26, [sp, #64]
  43c2a8:	mov	x25, x1
  43c2ac:	str	x27, [sp, #80]
  43c2b0:	mov	x27, x6
  43c2b4:	bl	43bf50 <nftw@plt+0x39260>
  43c2b8:	mov	w22, w0
  43c2bc:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43c2c0:	add	x0, x0, #0xbbc
  43c2c4:	ubfiz	x1, x22, #4, #32
  43c2c8:	ldr	w26, [x0, x1]
  43c2cc:	mov	x1, #0x70                  	// #112
  43c2d0:	mov	x0, #0x1                   	// #1
  43c2d4:	blr	x19
  43c2d8:	cbnz	x0, 43c300 <nftw@plt+0x39610>
  43c2dc:	mov	x20, #0x0                   	// #0
  43c2e0:	mov	x0, x20
  43c2e4:	ldp	x19, x20, [sp, #16]
  43c2e8:	ldp	x21, x22, [sp, #32]
  43c2ec:	ldp	x23, x24, [sp, #48]
  43c2f0:	ldp	x25, x26, [sp, #64]
  43c2f4:	ldr	x27, [sp, #80]
  43c2f8:	ldp	x29, x30, [sp], #96
  43c2fc:	ret
  43c300:	mov	x19, x0
  43c304:	mov	x1, #0x8                   	// #8
  43c308:	mov	x0, x26
  43c30c:	blr	x21
  43c310:	mov	x20, x0
  43c314:	str	x0, [x19, #24]
  43c318:	cbnz	x0, 43c32c <nftw@plt+0x3963c>
  43c31c:	cbz	x27, 43c2dc <nftw@plt+0x395ec>
  43c320:	mov	x0, x19
  43c324:	blr	x27
  43c328:	b	43c2e0 <nftw@plt+0x395f0>
  43c32c:	mov	x20, x19
  43c330:	stp	x25, x24, [x19]
  43c334:	str	x23, [x19, #16]
  43c338:	str	x26, [x19, #32]
  43c33c:	stp	x21, x27, [x19, #64]
  43c340:	str	w22, [x19, #104]
  43c344:	b	43c2e0 <nftw@plt+0x395f0>
  43c348:	mov	x6, x5
  43c34c:	mov	x5, x4
  43c350:	b	43c280 <nftw@plt+0x39590>
  43c354:	stp	x1, x2, [x0]
  43c358:	str	x3, [x0, #16]
  43c35c:	stp	x4, x5, [x0, #80]
  43c360:	str	x6, [x0, #96]
  43c364:	ret
  43c368:	adrp	x5, 402000 <memcpy@plt-0x5d0>
  43c36c:	adrp	x4, 43d000 <_obstack_free@@Base+0x1c>
  43c370:	add	x5, x5, #0xa80
  43c374:	add	x4, x4, #0x18c
  43c378:	b	43c348 <nftw@plt+0x39658>
  43c37c:	adrp	x5, 402000 <memcpy@plt-0x5d0>
  43c380:	adrp	x4, 402000 <memcpy@plt-0x5d0>
  43c384:	add	x5, x5, #0xa80
  43c388:	add	x4, x4, #0x870
  43c38c:	b	43c348 <nftw@plt+0x39658>
  43c390:	stp	x29, x30, [sp, #-48]!
  43c394:	mov	x29, sp
  43c398:	stp	x19, x20, [sp, #16]
  43c39c:	mov	x19, x0
  43c3a0:	str	x21, [sp, #32]
  43c3a4:	ldr	x21, [x0, #24]
  43c3a8:	ldr	x0, [x0, #16]
  43c3ac:	cbnz	x0, 43c3ec <nftw@plt+0x396fc>
  43c3b0:	ldr	x1, [x19, #72]
  43c3b4:	cbnz	x1, 43c418 <nftw@plt+0x39728>
  43c3b8:	ldr	x2, [x19, #96]
  43c3bc:	cbz	x2, 43c43c <nftw@plt+0x3974c>
  43c3c0:	ldr	x0, [x19, #80]
  43c3c4:	mov	x1, x21
  43c3c8:	blr	x2
  43c3cc:	mov	x1, x19
  43c3d0:	ldr	x21, [sp, #32]
  43c3d4:	ldr	x0, [x19, #80]
  43c3d8:	ldr	x2, [x19, #96]
  43c3dc:	ldp	x19, x20, [sp, #16]
  43c3e0:	mov	x16, x2
  43c3e4:	ldp	x29, x30, [sp], #48
  43c3e8:	br	x16
  43c3ec:	ldr	x20, [x19, #32]
  43c3f0:	sub	w20, w20, #0x1
  43c3f4:	sxtw	x20, w20
  43c3f8:	tbnz	w20, #31, 43c3b0 <nftw@plt+0x396c0>
  43c3fc:	ldr	x0, [x21, x20, lsl #3]
  43c400:	cmp	x0, #0x1
  43c404:	b.ls	43c410 <nftw@plt+0x39720>  // b.plast
  43c408:	ldr	x1, [x19, #16]
  43c40c:	blr	x1
  43c410:	sub	x20, x20, #0x1
  43c414:	b	43c3f8 <nftw@plt+0x39708>
  43c418:	mov	x0, x21
  43c41c:	blr	x1
  43c420:	mov	x0, x19
  43c424:	ldr	x21, [sp, #32]
  43c428:	ldr	x1, [x19, #72]
  43c42c:	ldp	x19, x20, [sp, #16]
  43c430:	mov	x16, x1
  43c434:	ldp	x29, x30, [sp], #48
  43c438:	br	x16
  43c43c:	ldp	x19, x20, [sp, #16]
  43c440:	ldr	x21, [sp, #32]
  43c444:	ldp	x29, x30, [sp], #48
  43c448:	ret
  43c44c:	stp	x29, x30, [sp, #-48]!
  43c450:	mov	x29, sp
  43c454:	stp	x19, x20, [sp, #16]
  43c458:	mov	x19, x0
  43c45c:	stp	x21, x22, [sp, #32]
  43c460:	ldp	x22, x21, [x0, #24]
  43c464:	ldr	x0, [x0, #16]
  43c468:	cbnz	x0, 43c488 <nftw@plt+0x39798>
  43c46c:	cmp	x21, #0x20, lsl #12
  43c470:	b.hi	43c4b0 <nftw@plt+0x397c0>  // b.pmore
  43c474:	lsl	x2, x21, #3
  43c478:	mov	x0, x22
  43c47c:	mov	w1, #0x0                   	// #0
  43c480:	bl	402840 <memset@plt>
  43c484:	b	43c500 <nftw@plt+0x39810>
  43c488:	sub	w20, w21, #0x1
  43c48c:	sxtw	x20, w20
  43c490:	tbnz	w20, #31, 43c46c <nftw@plt+0x3977c>
  43c494:	ldr	x0, [x22, x20, lsl #3]
  43c498:	cmp	x0, #0x1
  43c49c:	b.ls	43c4a8 <nftw@plt+0x397b8>  // b.plast
  43c4a0:	ldr	x1, [x19, #16]
  43c4a4:	blr	x1
  43c4a8:	sub	x20, x20, #0x1
  43c4ac:	b	43c490 <nftw@plt+0x397a0>
  43c4b0:	mov	x0, #0x80                  	// #128
  43c4b4:	bl	43bf50 <nftw@plt+0x39260>
  43c4b8:	sbfiz	x1, x0, #4, #32
  43c4bc:	mov	w21, w0
  43c4c0:	adrp	x0, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43c4c4:	add	x0, x0, #0xbbc
  43c4c8:	ldr	w20, [x0, x1]
  43c4cc:	ldr	x1, [x19, #72]
  43c4d0:	cbz	x1, 43c514 <nftw@plt+0x39824>
  43c4d4:	ldr	x0, [x19, #24]
  43c4d8:	blr	x1
  43c4dc:	ldr	x3, [x19, #88]
  43c4e0:	sxtw	x20, w20
  43c4e4:	cbz	x3, 43c52c <nftw@plt+0x3983c>
  43c4e8:	ldr	x0, [x19, #80]
  43c4ec:	mov	x1, x20
  43c4f0:	mov	x2, #0x8                   	// #8
  43c4f4:	blr	x3
  43c4f8:	stp	x0, x20, [x19, #24]
  43c4fc:	str	w21, [x19, #104]
  43c500:	ldp	x21, x22, [sp, #32]
  43c504:	stp	xzr, xzr, [x19, #40]
  43c508:	ldp	x19, x20, [sp, #16]
  43c50c:	ldp	x29, x30, [sp], #48
  43c510:	ret
  43c514:	ldr	x2, [x19, #96]
  43c518:	cbz	x2, 43c4dc <nftw@plt+0x397ec>
  43c51c:	ldr	x1, [x19, #24]
  43c520:	ldr	x0, [x19, #80]
  43c524:	blr	x2
  43c528:	b	43c4dc <nftw@plt+0x397ec>
  43c52c:	ldr	x2, [x19, #64]
  43c530:	mov	x0, x20
  43c534:	mov	x1, #0x8                   	// #8
  43c538:	blr	x2
  43c53c:	b	43c4f8 <nftw@plt+0x39808>
  43c540:	stp	x29, x30, [sp, #-64]!
  43c544:	mov	x29, sp
  43c548:	stp	x19, x20, [sp, #16]
  43c54c:	mov	x19, x0
  43c550:	ldr	w0, [x0, #56]
  43c554:	stp	x21, x22, [sp, #32]
  43c558:	mov	x22, x1
  43c55c:	ldr	w1, [x19, #104]
  43c560:	stp	x23, x24, [sp, #48]
  43c564:	add	w0, w0, #0x1
  43c568:	mov	w23, w2
  43c56c:	str	w0, [x19, #56]
  43c570:	mov	w0, w2
  43c574:	bl	43bfcc <nftw@plt+0x392dc>
  43c578:	mov	w21, w0
  43c57c:	ldr	x0, [x19, #24]
  43c580:	ldr	x20, [x0, w21, uxtw #3]
  43c584:	cbnz	x20, 43c5a4 <nftw@plt+0x398b4>
  43c588:	mov	x20, #0x0                   	// #0
  43c58c:	mov	x0, x20
  43c590:	ldp	x19, x20, [sp, #16]
  43c594:	ldp	x21, x22, [sp, #32]
  43c598:	ldp	x23, x24, [sp, #48]
  43c59c:	ldp	x29, x30, [sp], #64
  43c5a0:	ret
  43c5a4:	cmp	x20, #0x1
  43c5a8:	ldr	x24, [x19, #32]
  43c5ac:	b.ne	43c608 <nftw@plt+0x39918>  // b.any
  43c5b0:	ldr	w1, [x19, #104]
  43c5b4:	mov	w0, w23
  43c5b8:	bl	43bf10 <nftw@plt+0x39220>
  43c5bc:	mov	w23, w0
  43c5c0:	ldr	w0, [x19, #60]
  43c5c4:	add	w21, w21, w23
  43c5c8:	add	w0, w0, #0x1
  43c5cc:	str	w0, [x19, #60]
  43c5d0:	cmp	x24, w21, uxtw
  43c5d4:	b.hi	43c5dc <nftw@plt+0x398ec>  // b.pmore
  43c5d8:	sub	w21, w21, w24
  43c5dc:	ldr	x0, [x19, #24]
  43c5e0:	ldr	x20, [x0, w21, uxtw #3]
  43c5e4:	cbz	x20, 43c588 <nftw@plt+0x39898>
  43c5e8:	cmp	x20, #0x1
  43c5ec:	b.eq	43c5c0 <nftw@plt+0x398d0>  // b.none
  43c5f0:	ldr	x2, [x19, #8]
  43c5f4:	mov	x1, x22
  43c5f8:	mov	x0, x20
  43c5fc:	blr	x2
  43c600:	cbz	w0, 43c5c0 <nftw@plt+0x398d0>
  43c604:	b	43c58c <nftw@plt+0x3989c>
  43c608:	ldr	x2, [x19, #8]
  43c60c:	mov	x1, x22
  43c610:	mov	x0, x20
  43c614:	blr	x2
  43c618:	cbnz	w0, 43c58c <nftw@plt+0x3989c>
  43c61c:	b	43c5b0 <nftw@plt+0x398c0>
  43c620:	stp	x29, x30, [sp, #-32]!
  43c624:	mov	x29, sp
  43c628:	stp	x19, x20, [sp, #16]
  43c62c:	mov	x19, x0
  43c630:	mov	x20, x1
  43c634:	mov	x0, x1
  43c638:	ldr	x1, [x19]
  43c63c:	blr	x1
  43c640:	mov	w2, w0
  43c644:	mov	x1, x20
  43c648:	mov	x0, x19
  43c64c:	ldp	x19, x20, [sp, #16]
  43c650:	ldp	x29, x30, [sp], #32
  43c654:	b	43c540 <nftw@plt+0x39850>
  43c658:	stp	x29, x30, [sp, #-80]!
  43c65c:	cmp	w3, #0x1
  43c660:	mov	x29, sp
  43c664:	stp	x19, x20, [sp, #16]
  43c668:	mov	x19, x0
  43c66c:	stp	x21, x22, [sp, #32]
  43c670:	mov	w22, w3
  43c674:	stp	x23, x24, [sp, #48]
  43c678:	mov	x24, x1
  43c67c:	stp	x25, x26, [sp, #64]
  43c680:	mov	w25, w2
  43c684:	ldr	x23, [x0, #32]
  43c688:	b.ne	43c6c8 <nftw@plt+0x399d8>  // b.any
  43c68c:	ldr	x2, [x0, #40]
  43c690:	add	x1, x23, x23, lsl #1
  43c694:	cmp	x1, x2, lsl #2
  43c698:	b.hi	43c6c8 <nftw@plt+0x399d8>  // b.pmore
  43c69c:	bl	43c004 <nftw@plt+0x39314>
  43c6a0:	cbnz	w0, 43c6c4 <nftw@plt+0x399d4>
  43c6a4:	mov	x20, #0x0                   	// #0
  43c6a8:	mov	x0, x20
  43c6ac:	ldp	x19, x20, [sp, #16]
  43c6b0:	ldp	x21, x22, [sp, #32]
  43c6b4:	ldp	x23, x24, [sp, #48]
  43c6b8:	ldp	x25, x26, [sp, #64]
  43c6bc:	ldp	x29, x30, [sp], #80
  43c6c0:	ret
  43c6c4:	ldr	x23, [x19, #32]
  43c6c8:	mov	w0, w25
  43c6cc:	ldr	w1, [x19, #104]
  43c6d0:	bl	43bfcc <nftw@plt+0x392dc>
  43c6d4:	mov	w21, w0
  43c6d8:	ldr	w0, [x19, #56]
  43c6dc:	ubfiz	x26, x21, #3, #32
  43c6e0:	add	w0, w0, #0x1
  43c6e4:	str	w0, [x19, #56]
  43c6e8:	ldr	x0, [x19, #24]
  43c6ec:	add	x20, x0, x26
  43c6f0:	ldr	x0, [x0, x26]
  43c6f4:	cbz	x0, 43c7ac <nftw@plt+0x39abc>
  43c6f8:	cmp	x0, #0x1
  43c6fc:	b.eq	43c720 <nftw@plt+0x39a30>  // b.none
  43c700:	ldr	x2, [x19, #8]
  43c704:	mov	x1, x24
  43c708:	blr	x2
  43c70c:	cbz	w0, 43c71c <nftw@plt+0x39a2c>
  43c710:	ldr	x20, [x19, #24]
  43c714:	add	x20, x20, x26
  43c718:	b	43c6a8 <nftw@plt+0x399b8>
  43c71c:	mov	x20, #0x0                   	// #0
  43c720:	ldr	w1, [x19, #104]
  43c724:	mov	w0, w25
  43c728:	bl	43bf10 <nftw@plt+0x39220>
  43c72c:	mov	w26, w0
  43c730:	ldr	w0, [x19, #60]
  43c734:	add	w21, w21, w26
  43c738:	add	w0, w0, #0x1
  43c73c:	str	w0, [x19, #60]
  43c740:	cmp	x23, w21, uxtw
  43c744:	b.hi	43c74c <nftw@plt+0x39a5c>  // b.pmore
  43c748:	sub	w21, w21, w23
  43c74c:	ldr	x0, [x19, #24]
  43c750:	ubfiz	x25, x21, #3, #32
  43c754:	add	x1, x0, x25
  43c758:	ldr	x0, [x0, x25]
  43c75c:	cbz	x0, 43c790 <nftw@plt+0x39aa0>
  43c760:	cmp	x0, #0x1
  43c764:	b.ne	43c774 <nftw@plt+0x39a84>  // b.any
  43c768:	cmp	x20, #0x0
  43c76c:	csel	x20, x20, x1, ne  // ne = any
  43c770:	b	43c730 <nftw@plt+0x39a40>
  43c774:	ldr	x2, [x19, #8]
  43c778:	mov	x1, x24
  43c77c:	blr	x2
  43c780:	cbz	w0, 43c730 <nftw@plt+0x39a40>
  43c784:	ldr	x20, [x19, #24]
  43c788:	add	x20, x20, x25
  43c78c:	b	43c6a8 <nftw@plt+0x399b8>
  43c790:	cbz	w22, 43c6a4 <nftw@plt+0x399b4>
  43c794:	cbz	x20, 43c7b0 <nftw@plt+0x39ac0>
  43c798:	ldr	x0, [x19, #48]
  43c79c:	sub	x0, x0, #0x1
  43c7a0:	str	x0, [x19, #48]
  43c7a4:	str	xzr, [x20]
  43c7a8:	b	43c6a8 <nftw@plt+0x399b8>
  43c7ac:	cbz	w22, 43c6a4 <nftw@plt+0x399b4>
  43c7b0:	ldr	x20, [x19, #24]
  43c7b4:	ldr	x0, [x19, #40]
  43c7b8:	add	x20, x20, w21, uxtw #3
  43c7bc:	add	x0, x0, #0x1
  43c7c0:	str	x0, [x19, #40]
  43c7c4:	b	43c6a8 <nftw@plt+0x399b8>
  43c7c8:	stp	x29, x30, [sp, #-48]!
  43c7cc:	mov	x29, sp
  43c7d0:	stp	x19, x20, [sp, #16]
  43c7d4:	mov	x19, x0
  43c7d8:	mov	x20, x1
  43c7dc:	mov	x0, x1
  43c7e0:	ldr	x1, [x19]
  43c7e4:	str	x21, [sp, #32]
  43c7e8:	mov	w21, w2
  43c7ec:	blr	x1
  43c7f0:	mov	w2, w0
  43c7f4:	mov	w3, w21
  43c7f8:	mov	x1, x20
  43c7fc:	mov	x0, x19
  43c800:	ldp	x19, x20, [sp, #16]
  43c804:	ldr	x21, [sp, #32]
  43c808:	ldp	x29, x30, [sp], #48
  43c80c:	b	43c658 <nftw@plt+0x39968>
  43c810:	stp	x29, x30, [sp, #-32]!
  43c814:	mov	w3, #0x0                   	// #0
  43c818:	mov	x29, sp
  43c81c:	stp	x19, x20, [sp, #16]
  43c820:	mov	x19, x0
  43c824:	bl	43c658 <nftw@plt+0x39968>
  43c828:	cbz	x0, 43c854 <nftw@plt+0x39b64>
  43c82c:	ldr	x1, [x19, #16]
  43c830:	mov	x20, x0
  43c834:	cbz	x1, 43c840 <nftw@plt+0x39b50>
  43c838:	ldr	x0, [x0]
  43c83c:	blr	x1
  43c840:	mov	x0, #0x1                   	// #1
  43c844:	str	x0, [x20]
  43c848:	ldr	x0, [x19, #48]
  43c84c:	add	x0, x0, #0x1
  43c850:	str	x0, [x19, #48]
  43c854:	ldp	x19, x20, [sp, #16]
  43c858:	ldp	x29, x30, [sp], #32
  43c85c:	ret
  43c860:	stp	x29, x30, [sp, #-32]!
  43c864:	mov	x29, sp
  43c868:	stp	x19, x20, [sp, #16]
  43c86c:	mov	x19, x0
  43c870:	mov	x20, x1
  43c874:	mov	x0, x1
  43c878:	ldr	x1, [x19]
  43c87c:	blr	x1
  43c880:	mov	w2, w0
  43c884:	mov	x1, x20
  43c888:	mov	x0, x19
  43c88c:	ldp	x19, x20, [sp, #16]
  43c890:	ldp	x29, x30, [sp], #32
  43c894:	b	43c810 <nftw@plt+0x39b20>
  43c898:	stp	x29, x30, [sp, #-32]!
  43c89c:	mov	x29, sp
  43c8a0:	stp	x19, x20, [sp, #16]
  43c8a4:	mov	x20, x1
  43c8a8:	ldr	x1, [x0, #24]
  43c8ac:	cmp	x1, x20
  43c8b0:	b.hi	43c8d8 <nftw@plt+0x39be8>  // b.pmore
  43c8b4:	mov	x19, x0
  43c8b8:	ldr	x0, [x0, #32]
  43c8bc:	add	x0, x1, x0, lsl #3
  43c8c0:	cmp	x20, x0
  43c8c4:	b.cs	43c8d8 <nftw@plt+0x39be8>  // b.hs, b.nlast
  43c8c8:	ldr	x0, [x20]
  43c8cc:	cbz	x0, 43c8d8 <nftw@plt+0x39be8>
  43c8d0:	cmp	x0, #0x1
  43c8d4:	b.ne	43c8dc <nftw@plt+0x39bec>  // b.any
  43c8d8:	bl	402970 <abort@plt>
  43c8dc:	ldr	x1, [x19, #16]
  43c8e0:	cbz	x1, 43c8e8 <nftw@plt+0x39bf8>
  43c8e4:	blr	x1
  43c8e8:	mov	x0, #0x1                   	// #1
  43c8ec:	str	x0, [x20]
  43c8f0:	ldr	x0, [x19, #48]
  43c8f4:	add	x0, x0, #0x1
  43c8f8:	str	x0, [x19, #48]
  43c8fc:	ldp	x19, x20, [sp, #16]
  43c900:	ldp	x29, x30, [sp], #32
  43c904:	ret
  43c908:	stp	x29, x30, [sp, #-48]!
  43c90c:	mov	x29, sp
  43c910:	stp	x19, x20, [sp, #16]
  43c914:	mov	x20, x1
  43c918:	stp	x21, x22, [sp, #32]
  43c91c:	mov	x21, x2
  43c920:	ldp	x19, x22, [x0, #24]
  43c924:	add	x22, x19, x22, lsl #3
  43c928:	ldr	x0, [x19]
  43c92c:	cmp	x0, #0x1
  43c930:	b.hi	43c950 <nftw@plt+0x39c60>  // b.pmore
  43c934:	add	x19, x19, #0x8
  43c938:	cmp	x22, x19
  43c93c:	b.hi	43c928 <nftw@plt+0x39c38>  // b.pmore
  43c940:	ldp	x19, x20, [sp, #16]
  43c944:	ldp	x21, x22, [sp, #32]
  43c948:	ldp	x29, x30, [sp], #48
  43c94c:	ret
  43c950:	mov	x1, x21
  43c954:	mov	x0, x19
  43c958:	blr	x20
  43c95c:	cbnz	w0, 43c934 <nftw@plt+0x39c44>
  43c960:	b	43c940 <nftw@plt+0x39c50>
  43c964:	stp	x29, x30, [sp, #-48]!
  43c968:	mov	x29, sp
  43c96c:	stp	x19, x20, [sp, #16]
  43c970:	mov	x20, x1
  43c974:	mov	x19, x0
  43c978:	ldp	x1, x3, [x0, #40]
  43c97c:	str	x21, [sp, #32]
  43c980:	mov	x21, x2
  43c984:	ldr	x2, [x0, #32]
  43c988:	sub	x1, x1, x3
  43c98c:	cmp	x2, x1, lsl #3
  43c990:	b.ls	43c9a0 <nftw@plt+0x39cb0>  // b.plast
  43c994:	cmp	x2, #0x20
  43c998:	b.ls	43c9a0 <nftw@plt+0x39cb0>  // b.plast
  43c99c:	bl	43c004 <nftw@plt+0x39314>
  43c9a0:	mov	x2, x21
  43c9a4:	mov	x1, x20
  43c9a8:	mov	x0, x19
  43c9ac:	ldp	x19, x20, [sp, #16]
  43c9b0:	ldr	x21, [sp, #32]
  43c9b4:	ldp	x29, x30, [sp], #48
  43c9b8:	b	43c908 <nftw@plt+0x39c18>
  43c9bc:	ldr	w1, [x0, #56]
  43c9c0:	cbz	w1, 43c9d8 <nftw@plt+0x39ce8>
  43c9c4:	ldr	w0, [x0, #60]
  43c9c8:	ucvtf	d1, w1
  43c9cc:	ucvtf	d0, w0
  43c9d0:	fdiv	d0, d0, d1
  43c9d4:	ret
  43c9d8:	movi	d0, #0x0
  43c9dc:	b	43c9d4 <nftw@plt+0x39ce4>
  43c9e0:	mov	x2, x0
  43c9e4:	mov	w3, #0x43                  	// #67
  43c9e8:	mov	w0, #0x0                   	// #0
  43c9ec:	ldrb	w1, [x2], #1
  43c9f0:	cbnz	w1, 43c9f8 <nftw@plt+0x39d08>
  43c9f4:	ret
  43c9f8:	sub	w1, w1, #0x71
  43c9fc:	madd	w0, w0, w3, w1
  43ca00:	b	43c9ec <nftw@plt+0x39cfc>
  43ca04:	mov	w3, #0x79b9                	// #31161
  43ca08:	mov	w4, w1
  43ca0c:	movk	w3, #0x9e37, lsl #16
  43ca10:	tst	x0, #0x3
  43ca14:	mov	w5, w3
  43ca18:	b.eq	43cb94 <nftw@plt+0x39ea4>  // b.none
  43ca1c:	cmp	w4, #0xb
  43ca20:	b.ls	43cb9c <nftw@plt+0x39eac>  // b.plast
  43ca24:	ldrb	w7, [x0, #6]
  43ca28:	sub	w4, w4, #0xc
  43ca2c:	ldrb	w6, [x0, #5]
  43ca30:	add	x0, x0, #0xc
  43ca34:	lsl	w7, w7, #16
  43ca38:	add	w6, w7, w6, lsl #8
  43ca3c:	ldurb	w7, [x0, #-8]
  43ca40:	add	w3, w7, w3
  43ca44:	ldurb	w7, [x0, #-2]
  43ca48:	add	w6, w6, w3
  43ca4c:	ldurb	w3, [x0, #-5]
  43ca50:	lsl	w7, w7, #16
  43ca54:	add	w3, w6, w3, lsl #24
  43ca58:	ldurb	w6, [x0, #-3]
  43ca5c:	add	w6, w7, w6, lsl #8
  43ca60:	ldurb	w7, [x0, #-4]
  43ca64:	add	w2, w7, w2
  43ca68:	ldurb	w7, [x0, #-10]
  43ca6c:	add	w6, w6, w2
  43ca70:	ldurb	w2, [x0, #-1]
  43ca74:	lsl	w7, w7, #16
  43ca78:	add	w2, w6, w2, lsl #24
  43ca7c:	ldurb	w6, [x0, #-11]
  43ca80:	add	w6, w7, w6, lsl #8
  43ca84:	ldurb	w7, [x0, #-12]
  43ca88:	add	w5, w7, w5
  43ca8c:	add	w5, w6, w5
  43ca90:	add	w6, w3, w2
  43ca94:	sub	w6, w5, w6
  43ca98:	ldurb	w5, [x0, #-9]
  43ca9c:	sub	w3, w3, w2
  43caa0:	add	w5, w6, w5, lsl #24
  43caa4:	eor	w5, w5, w2, lsr #13
  43caa8:	sub	w3, w3, w5
  43caac:	sub	w2, w2, w5
  43cab0:	eor	w3, w3, w5, lsl #8
  43cab4:	sub	w2, w2, w3
  43cab8:	sub	w5, w5, w3
  43cabc:	eor	w2, w2, w3, lsr #13
  43cac0:	sub	w5, w5, w2
  43cac4:	sub	w3, w3, w2
  43cac8:	eor	w5, w5, w2, lsr #12
  43cacc:	sub	w3, w3, w5
  43cad0:	sub	w2, w2, w5
  43cad4:	eor	w3, w3, w5, lsl #16
  43cad8:	sub	w2, w2, w3
  43cadc:	sub	w5, w5, w3
  43cae0:	eor	w2, w2, w3, lsr #5
  43cae4:	sub	w5, w5, w2
  43cae8:	sub	w3, w3, w2
  43caec:	eor	w5, w5, w2, lsr #3
  43caf0:	sub	w3, w3, w5
  43caf4:	sub	w2, w2, w5
  43caf8:	eor	w3, w3, w5, lsl #10
  43cafc:	sub	w2, w2, w3
  43cb00:	eor	w2, w2, w3, lsr #15
  43cb04:	b	43ca1c <nftw@plt+0x39d2c>
  43cb08:	ldr	w6, [x0]
  43cb0c:	sub	w4, w4, #0xc
  43cb10:	add	x0, x0, #0xc
  43cb14:	add	w5, w5, w6
  43cb18:	ldur	w6, [x0, #-8]
  43cb1c:	add	w3, w3, w6
  43cb20:	ldur	w6, [x0, #-4]
  43cb24:	add	w2, w2, w6
  43cb28:	add	w6, w3, w2
  43cb2c:	sub	w3, w3, w2
  43cb30:	sub	w5, w5, w6
  43cb34:	eor	w5, w5, w2, lsr #13
  43cb38:	sub	w3, w3, w5
  43cb3c:	sub	w2, w2, w5
  43cb40:	eor	w3, w3, w5, lsl #8
  43cb44:	sub	w2, w2, w3
  43cb48:	sub	w5, w5, w3
  43cb4c:	eor	w2, w2, w3, lsr #13
  43cb50:	sub	w5, w5, w2
  43cb54:	sub	w3, w3, w2
  43cb58:	eor	w5, w5, w2, lsr #12
  43cb5c:	sub	w3, w3, w5
  43cb60:	sub	w2, w2, w5
  43cb64:	eor	w3, w3, w5, lsl #16
  43cb68:	sub	w2, w2, w3
  43cb6c:	sub	w5, w5, w3
  43cb70:	eor	w2, w2, w3, lsr #5
  43cb74:	sub	w5, w5, w2
  43cb78:	sub	w3, w3, w2
  43cb7c:	eor	w5, w5, w2, lsr #3
  43cb80:	sub	w3, w3, w5
  43cb84:	sub	w2, w2, w5
  43cb88:	eor	w3, w3, w5, lsl #10
  43cb8c:	sub	w2, w2, w3
  43cb90:	eor	w2, w2, w3, lsr #15
  43cb94:	cmp	w4, #0xb
  43cb98:	b.hi	43cb08 <nftw@plt+0x39e18>  // b.pmore
  43cb9c:	sub	w4, w4, #0x1
  43cba0:	add	w1, w2, w1
  43cba4:	cmp	w4, #0xa
  43cba8:	b.hi	43cc1c <nftw@plt+0x39f2c>  // b.pmore
  43cbac:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43cbb0:	add	x2, x2, #0xbb0
  43cbb4:	ldrb	w2, [x2, w4, uxtw]
  43cbb8:	adr	x4, 43cbc4 <nftw@plt+0x39ed4>
  43cbbc:	add	x2, x4, w2, sxtb #2
  43cbc0:	br	x2
  43cbc4:	ldrb	w2, [x0, #10]
  43cbc8:	add	w1, w1, w2, lsl #24
  43cbcc:	ldrb	w2, [x0, #9]
  43cbd0:	add	w1, w1, w2, lsl #16
  43cbd4:	ldrb	w2, [x0, #8]
  43cbd8:	add	w1, w1, w2, lsl #8
  43cbdc:	ldrb	w2, [x0, #7]
  43cbe0:	add	w3, w3, w2, lsl #24
  43cbe4:	ldrb	w2, [x0, #6]
  43cbe8:	add	w3, w3, w2, lsl #16
  43cbec:	ldrb	w2, [x0, #5]
  43cbf0:	add	w3, w3, w2, lsl #8
  43cbf4:	ldrb	w2, [x0, #4]
  43cbf8:	add	w3, w3, w2
  43cbfc:	ldrb	w2, [x0, #3]
  43cc00:	add	w5, w5, w2, lsl #24
  43cc04:	ldrb	w2, [x0, #2]
  43cc08:	add	w5, w5, w2, lsl #16
  43cc0c:	ldrb	w2, [x0, #1]
  43cc10:	add	w5, w5, w2, lsl #8
  43cc14:	ldrb	w0, [x0]
  43cc18:	add	w5, w5, w0
  43cc1c:	add	w0, w3, w1
  43cc20:	sub	w2, w3, w1
  43cc24:	sub	w0, w5, w0
  43cc28:	eor	w0, w0, w1, lsr #13
  43cc2c:	sub	w2, w2, w0
  43cc30:	sub	w1, w1, w0
  43cc34:	eor	w2, w2, w0, lsl #8
  43cc38:	sub	w1, w1, w2
  43cc3c:	sub	w0, w0, w2
  43cc40:	eor	w1, w1, w2, lsr #13
  43cc44:	sub	w0, w0, w1
  43cc48:	sub	w2, w2, w1
  43cc4c:	eor	w0, w0, w1, lsr #12
  43cc50:	sub	w2, w2, w0
  43cc54:	sub	w1, w1, w0
  43cc58:	eor	w2, w2, w0, lsl #16
  43cc5c:	sub	w1, w1, w2
  43cc60:	sub	w3, w0, w2
  43cc64:	eor	w1, w1, w2, lsr #5
  43cc68:	sub	w3, w3, w1
  43cc6c:	sub	w0, w2, w1
  43cc70:	eor	w3, w3, w1, lsr #3
  43cc74:	sub	w0, w0, w3
  43cc78:	sub	w1, w1, w3
  43cc7c:	eor	w0, w0, w3, lsl #10
  43cc80:	sub	w1, w1, w0
  43cc84:	eor	w0, w1, w0, lsr #15
  43cc88:	ret
  43cc8c:	ret
  43cc90:	mov	x1, x0
  43cc94:	ldrb	w2, [x1]
  43cc98:	cbnz	w2, 43cca0 <nftw@plt+0x39fb0>
  43cc9c:	ret
  43cca0:	add	x1, x1, #0x1
  43cca4:	cmp	w2, #0x2f
  43cca8:	csel	x0, x0, x1, ne  // ne = any
  43ccac:	b	43cc94 <nftw@plt+0x39fa4>
  43ccb0:	ldrb	w2, [x0]
  43ccb4:	mov	x1, x0
  43ccb8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43ccbc:	add	x0, x0, #0xae
  43ccc0:	ldrh	w0, [x0, x2, lsl #1]
  43ccc4:	mov	w2, #0x88                  	// #136
  43ccc8:	tst	w2, w0
  43cccc:	b.eq	43cce0 <nftw@plt+0x39ff0>  // b.none
  43ccd0:	ldrb	w0, [x1, #1]
  43ccd4:	cmp	w0, #0x3a
  43ccd8:	b.ne	43cce0 <nftw@plt+0x39ff0>  // b.any
  43ccdc:	add	x1, x1, #0x2
  43cce0:	mov	x0, x1
  43cce4:	mov	w3, #0x5c                  	// #92
  43cce8:	ldrb	w2, [x1]
  43ccec:	cbnz	w2, 43ccf4 <nftw@plt+0x3a004>
  43ccf0:	ret
  43ccf4:	cmp	w2, #0x2f
  43ccf8:	add	x1, x1, #0x1
  43ccfc:	ccmp	w2, w3, #0x4, ne  // ne = any
  43cd00:	csel	x0, x0, x1, ne  // ne = any
  43cd04:	b	43cce8 <nftw@plt+0x39ff8>
  43cd08:	b	43cc90 <nftw@plt+0x39fa0>
  43cd0c:	mov	x12, #0x1020                	// #4128
  43cd10:	sub	sp, sp, x12
  43cd14:	add	x1, sp, #0x20
  43cd18:	stp	x29, x30, [sp]
  43cd1c:	mov	x29, sp
  43cd20:	str	x19, [sp, #16]
  43cd24:	mov	x19, x0
  43cd28:	bl	402bb0 <realpath@plt>
  43cd2c:	cmp	x0, #0x0
  43cd30:	csel	x0, x0, x19, ne  // ne = any
  43cd34:	bl	4028e0 <strdup@plt>
  43cd38:	mov	x12, #0x1020                	// #4128
  43cd3c:	ldp	x29, x30, [sp]
  43cd40:	ldr	x19, [sp, #16]
  43cd44:	add	sp, sp, x12
  43cd48:	ret
  43cd4c:	stp	x29, x30, [sp, #-16]!
  43cd50:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43cd54:	adrp	x2, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43cd58:	mov	x29, sp
  43cd5c:	ldr	x0, [x0, #1416]
  43cd60:	add	x2, x2, #0xe9c
  43cd64:	adrp	x1, 44f000 <_obstack_memory_used@@Base+0x11fa8>
  43cd68:	add	x1, x1, #0x700
  43cd6c:	bl	402cb0 <fprintf@plt>
  43cd70:	mov	w0, #0x1                   	// #1
  43cd74:	bl	402660 <exit@plt>
  43cd78:	mov	x2, x0
  43cd7c:	mov	x0, x1
  43cd80:	ldrb	w4, [x2, #80]
  43cd84:	ldr	x3, [x2, #56]
  43cd88:	tbz	w4, #0, 43cd98 <nftw@plt+0x3a0a8>
  43cd8c:	ldr	x0, [x2, #72]
  43cd90:	mov	x16, x3
  43cd94:	br	x16
  43cd98:	mov	x16, x3
  43cd9c:	br	x16
  43cda0:	stp	x29, x30, [sp, #-48]!
  43cda4:	cmp	x2, #0x0
  43cda8:	mov	x29, sp
  43cdac:	stp	x19, x20, [sp, #16]
  43cdb0:	mov	x20, x2
  43cdb4:	mov	x2, #0x10                  	// #16
  43cdb8:	csel	x20, x20, x2, ne  // ne = any
  43cdbc:	cmp	x1, #0x0
  43cdc0:	stp	x21, x22, [sp, #32]
  43cdc4:	mov	x2, #0xfe0                 	// #4064
  43cdc8:	sub	x22, x20, #0x1
  43cdcc:	csel	x1, x1, x2, ne  // ne = any
  43cdd0:	str	x1, [x0]
  43cdd4:	str	x22, [x0, #48]
  43cdd8:	mov	x19, x0
  43cddc:	bl	43cd78 <nftw@plt+0x3a088>
  43cde0:	mov	x21, x0
  43cde4:	cbnz	x0, 43cdf4 <nftw@plt+0x3a104>
  43cde8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43cdec:	ldr	x0, [x0, #1360]
  43cdf0:	blr	x0
  43cdf4:	add	x2, x21, #0x10
  43cdf8:	neg	x20, x20
  43cdfc:	ldr	x0, [x19]
  43ce00:	add	x2, x2, x22
  43ce04:	and	x20, x2, x20
  43ce08:	stp	x21, x20, [x19, #8]
  43ce0c:	add	x0, x21, x0
  43ce10:	str	x20, [x19, #24]
  43ce14:	str	x0, [x21]
  43ce18:	str	x0, [x19, #32]
  43ce1c:	ldrb	w0, [x19, #80]
  43ce20:	str	xzr, [x21, #8]
  43ce24:	and	w0, w0, #0xfffffff9
  43ce28:	strb	w0, [x19, #80]
  43ce2c:	mov	w0, #0x1                   	// #1
  43ce30:	ldp	x19, x20, [sp, #16]
  43ce34:	ldp	x21, x22, [sp, #32]
  43ce38:	ldp	x29, x30, [sp], #48
  43ce3c:	ret
  43ce40:	mov	x2, x0
  43ce44:	mov	x0, x1
  43ce48:	ldrb	w4, [x2, #80]
  43ce4c:	ldr	x3, [x2, #64]
  43ce50:	tbz	w4, #0, 43ce60 <nftw@plt+0x3a170>
  43ce54:	ldr	x0, [x2, #72]
  43ce58:	mov	x16, x3
  43ce5c:	br	x16
  43ce60:	mov	x16, x3
  43ce64:	br	x16

000000000043ce68 <_obstack_begin@@Base>:
  43ce68:	stp	x3, x4, [x0, #56]
  43ce6c:	ldrb	w3, [x0, #80]
  43ce70:	and	w3, w3, #0xfffffffe
  43ce74:	strb	w3, [x0, #80]
  43ce78:	b	43cda0 <nftw@plt+0x3a0b0>

000000000043ce7c <_obstack_begin_1@@Base>:
  43ce7c:	stp	x3, x4, [x0, #56]
  43ce80:	ldrb	w3, [x0, #80]
  43ce84:	str	x5, [x0, #72]
  43ce88:	orr	w3, w3, #0x1
  43ce8c:	strb	w3, [x0, #80]
  43ce90:	b	43cda0 <nftw@plt+0x3a0b0>

000000000043ce94 <_obstack_newchunk@@Base>:
  43ce94:	stp	x29, x30, [sp, #-64]!
  43ce98:	mov	x29, sp
  43ce9c:	stp	x19, x20, [sp, #16]
  43cea0:	mov	x19, x0
  43cea4:	ldp	x2, x20, [x0, #16]
  43cea8:	stp	x21, x22, [sp, #32]
  43ceac:	sub	x21, x20, x2
  43ceb0:	ldr	x20, [x0, #48]
  43ceb4:	adds	x1, x21, x1
  43ceb8:	cset	x3, cs  // cs = hs, nlast
  43cebc:	str	x23, [sp, #48]
  43cec0:	adds	x1, x20, x1
  43cec4:	cset	x2, cs  // cs = hs, nlast
  43cec8:	cmp	x3, #0x0
  43cecc:	ccmp	x2, #0x0, #0x0, eq  // eq = none
  43ced0:	ldr	x23, [x0, #8]
  43ced4:	b.eq	43cef4 <_obstack_newchunk@@Base+0x60>  // b.none
  43ced8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43cedc:	ldr	x0, [x0, #1360]
  43cee0:	blr	x0
  43cee4:	str	xzr, [x19, #8]
  43cee8:	mov	x0, #0x0                   	// #0
  43ceec:	str	x23, [x0, #8]
  43cef0:	brk	#0x3e8
  43cef4:	lsr	x20, x21, #3
  43cef8:	add	x20, x20, #0x64
  43cefc:	add	x2, x20, x1
  43cf00:	ldr	x20, [x0]
  43cf04:	cmp	x20, x1
  43cf08:	csel	x20, x20, x1, cs  // cs = hs, nlast
  43cf0c:	cmp	x20, x2
  43cf10:	csel	x20, x20, x2, cs  // cs = hs, nlast
  43cf14:	mov	x1, x20
  43cf18:	bl	43cd78 <nftw@plt+0x3a088>
  43cf1c:	mov	x22, x0
  43cf20:	cbz	x0, 43ced8 <_obstack_newchunk@@Base+0x44>
  43cf24:	mov	x2, x0
  43cf28:	str	x0, [x19, #8]
  43cf2c:	ldr	x1, [x19, #16]
  43cf30:	str	x23, [x0, #8]
  43cf34:	add	x20, x0, x20
  43cf38:	str	x20, [x19, #32]
  43cf3c:	str	x20, [x2], #16
  43cf40:	ldr	x20, [x19, #48]
  43cf44:	add	x2, x2, x20
  43cf48:	bic	x20, x2, x20
  43cf4c:	mov	x2, x21
  43cf50:	mov	x0, x20
  43cf54:	bl	4025d0 <memcpy@plt>
  43cf58:	ldrb	w0, [x19, #80]
  43cf5c:	tbnz	w0, #1, 43cf90 <_obstack_newchunk@@Base+0xfc>
  43cf60:	ldr	x0, [x19, #48]
  43cf64:	add	x1, x23, #0x10
  43cf68:	add	x1, x1, x0
  43cf6c:	bic	x0, x1, x0
  43cf70:	ldr	x1, [x19, #16]
  43cf74:	cmp	x1, x0
  43cf78:	b.ne	43cf90 <_obstack_newchunk@@Base+0xfc>  // b.any
  43cf7c:	ldr	x0, [x23, #8]
  43cf80:	str	x0, [x22, #8]
  43cf84:	mov	x1, x23
  43cf88:	mov	x0, x19
  43cf8c:	bl	43ce40 <nftw@plt+0x3a150>
  43cf90:	ldrb	w0, [x19, #80]
  43cf94:	ldr	x23, [sp, #48]
  43cf98:	and	w0, w0, #0xfffffffd
  43cf9c:	str	x20, [x19, #16]
  43cfa0:	add	x20, x20, x21
  43cfa4:	strb	w0, [x19, #80]
  43cfa8:	ldp	x21, x22, [sp, #32]
  43cfac:	str	x20, [x19, #24]
  43cfb0:	ldp	x19, x20, [sp, #16]
  43cfb4:	ldp	x29, x30, [sp], #64
  43cfb8:	ret

000000000043cfbc <_obstack_allocated_p@@Base>:
  43cfbc:	ldr	x0, [x0, #8]
  43cfc0:	cbz	x0, 43cfd8 <_obstack_allocated_p@@Base+0x1c>
  43cfc4:	cmp	x0, x1
  43cfc8:	b.cs	43cfbc <_obstack_allocated_p@@Base>  // b.hs, b.nlast
  43cfcc:	ldr	x2, [x0]
  43cfd0:	cmp	x2, x1
  43cfd4:	b.cc	43cfbc <_obstack_allocated_p@@Base>  // b.lo, b.ul, b.last
  43cfd8:	cmp	x0, #0x0
  43cfdc:	cset	w0, ne  // ne = any
  43cfe0:	ret

000000000043cfe4 <_obstack_free@@Base>:
  43cfe4:	stp	x29, x30, [sp, #-48]!
  43cfe8:	mov	x29, sp
  43cfec:	stp	x19, x20, [sp, #16]
  43cff0:	mov	x19, x0
  43cff4:	mov	x20, x1
  43cff8:	ldr	x1, [x0, #8]
  43cffc:	str	x21, [sp, #32]
  43d000:	cbz	x1, 43d050 <_obstack_free@@Base+0x6c>
  43d004:	cmp	x1, x20
  43d008:	b.cs	43d030 <_obstack_free@@Base+0x4c>  // b.hs, b.nlast
  43d00c:	ldr	x0, [x1]
  43d010:	cmp	x0, x20
  43d014:	b.cc	43d030 <_obstack_free@@Base+0x4c>  // b.lo, b.ul, b.last
  43d018:	stp	x1, x20, [x19, #8]
  43d01c:	stp	x20, x0, [x19, #24]
  43d020:	ldp	x19, x20, [sp, #16]
  43d024:	ldr	x21, [sp, #32]
  43d028:	ldp	x29, x30, [sp], #48
  43d02c:	ret
  43d030:	mov	x0, x19
  43d034:	ldr	x21, [x1, #8]
  43d038:	bl	43ce40 <nftw@plt+0x3a150>
  43d03c:	ldrb	w0, [x19, #80]
  43d040:	mov	x1, x21
  43d044:	orr	w0, w0, #0x2
  43d048:	strb	w0, [x19, #80]
  43d04c:	b	43d000 <_obstack_free@@Base+0x1c>
  43d050:	cbz	x20, 43d020 <_obstack_free@@Base+0x3c>
  43d054:	bl	402970 <abort@plt>

000000000043d058 <_obstack_memory_used@@Base>:
  43d058:	ldr	x1, [x0, #8]
  43d05c:	mov	x0, #0x0                   	// #0
  43d060:	cbnz	x1, 43d068 <_obstack_memory_used@@Base+0x10>
  43d064:	ret
  43d068:	ldr	x2, [x1]
  43d06c:	sub	x2, x2, x1
  43d070:	add	x0, x0, x2
  43d074:	ldr	x1, [x1, #8]
  43d078:	b	43d060 <_obstack_memory_used@@Base+0x8>
  43d07c:	stp	x29, x30, [sp, #-32]!
  43d080:	mov	x29, sp
  43d084:	str	x19, [sp, #16]
  43d088:	mov	w19, w0
  43d08c:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43d090:	ldr	x0, [x0, #3432]
  43d094:	cbz	x0, 43d09c <_obstack_memory_used@@Base+0x44>
  43d098:	blr	x0
  43d09c:	mov	w0, w19
  43d0a0:	bl	402660 <exit@plt>
  43d0a4:	stp	x29, x30, [sp, #-32]!
  43d0a8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43d0ac:	mov	x29, sp
  43d0b0:	str	x19, [sp, #16]
  43d0b4:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43d0b8:	str	x0, [x1, #1368]
  43d0bc:	ldr	x0, [x19, #2704]
  43d0c0:	cbnz	x0, 43d0cc <_obstack_memory_used@@Base+0x74>
  43d0c4:	bl	402670 <sbrk@plt>
  43d0c8:	str	x0, [x19, #2704]
  43d0cc:	ldr	x19, [sp, #16]
  43d0d0:	ldp	x29, x30, [sp], #32
  43d0d4:	ret
  43d0d8:	stp	x29, x30, [sp, #-32]!
  43d0dc:	mov	x29, sp
  43d0e0:	stp	x19, x20, [sp, #16]
  43d0e4:	mov	x19, x0
  43d0e8:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43d0ec:	ldr	x20, [x0, #2704]
  43d0f0:	mov	x0, #0x0                   	// #0
  43d0f4:	cbz	x20, 43d144 <_obstack_memory_used@@Base+0xec>
  43d0f8:	bl	402670 <sbrk@plt>
  43d0fc:	sub	x5, x0, x20
  43d100:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43d104:	adrp	x3, 44d000 <_obstack_memory_used@@Base+0xffa8>
  43d108:	adrp	x1, 45a000 <_obstack_memory_used@@Base+0x1cfa8>
  43d10c:	add	x3, x3, #0xe54
  43d110:	ldr	x2, [x0, #1368]
  43d114:	add	x1, x1, #0x68a
  43d118:	mov	x4, x19
  43d11c:	ldrb	w0, [x2]
  43d120:	cmp	w0, #0x0
  43d124:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43d128:	csel	x3, x1, x3, ne  // ne = any
  43d12c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43d130:	ldr	x0, [x0, #1416]
  43d134:	add	x1, x1, #0x2ae
  43d138:	bl	402cb0 <fprintf@plt>
  43d13c:	mov	w0, #0x1                   	// #1
  43d140:	bl	43d07c <_obstack_memory_used@@Base+0x24>
  43d144:	bl	402670 <sbrk@plt>
  43d148:	adrp	x5, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  43d14c:	add	x5, x5, #0x5b0
  43d150:	sub	x5, x0, x5
  43d154:	b	43d100 <_obstack_memory_used@@Base+0xa8>
  43d158:	stp	x29, x30, [sp, #-32]!
  43d15c:	cmp	x0, #0x0
  43d160:	mov	x29, sp
  43d164:	str	x19, [sp, #16]
  43d168:	csinc	x19, x0, xzr, ne  // ne = any
  43d16c:	mov	x0, x19
  43d170:	bl	4027c0 <malloc@plt>
  43d174:	cbnz	x0, 43d180 <_obstack_memory_used@@Base+0x128>
  43d178:	mov	x0, x19
  43d17c:	bl	43d0d8 <_obstack_memory_used@@Base+0x80>
  43d180:	ldr	x19, [sp, #16]
  43d184:	ldp	x29, x30, [sp], #32
  43d188:	ret
  43d18c:	stp	x29, x30, [sp, #-32]!
  43d190:	cmp	x0, #0x0
  43d194:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  43d198:	mov	x29, sp
  43d19c:	stp	x19, x20, [sp, #16]
  43d1a0:	b.ne	43d1c4 <_obstack_memory_used@@Base+0x16c>  // b.any
  43d1a4:	mov	x19, #0x1                   	// #1
  43d1a8:	mov	x20, x19
  43d1ac:	mov	x1, x19
  43d1b0:	mov	x0, x20
  43d1b4:	bl	402870 <calloc@plt>
  43d1b8:	cbnz	x0, 43d1d0 <_obstack_memory_used@@Base+0x178>
  43d1bc:	mul	x0, x20, x19
  43d1c0:	bl	43d0d8 <_obstack_memory_used@@Base+0x80>
  43d1c4:	mov	x20, x0
  43d1c8:	mov	x19, x1
  43d1cc:	b	43d1ac <_obstack_memory_used@@Base+0x154>
  43d1d0:	ldp	x19, x20, [sp, #16]
  43d1d4:	ldp	x29, x30, [sp], #32
  43d1d8:	ret
  43d1dc:	stp	x29, x30, [sp, #-32]!
  43d1e0:	cmp	x1, #0x0
  43d1e4:	mov	x29, sp
  43d1e8:	str	x19, [sp, #16]
  43d1ec:	csinc	x19, x1, xzr, ne  // ne = any
  43d1f0:	cbnz	x0, 43d208 <_obstack_memory_used@@Base+0x1b0>
  43d1f4:	mov	x0, x19
  43d1f8:	bl	4027c0 <malloc@plt>
  43d1fc:	cbnz	x0, 43d214 <_obstack_memory_used@@Base+0x1bc>
  43d200:	mov	x0, x19
  43d204:	bl	43d0d8 <_obstack_memory_used@@Base+0x80>
  43d208:	mov	x1, x19
  43d20c:	bl	4028c0 <realloc@plt>
  43d210:	b	43d1fc <_obstack_memory_used@@Base+0x1a4>
  43d214:	ldr	x19, [sp, #16]
  43d218:	ldp	x29, x30, [sp], #32
  43d21c:	ret
  43d220:	stp	x29, x30, [sp, #-48]!
  43d224:	mov	x29, sp
  43d228:	stp	x19, x20, [sp, #16]
  43d22c:	mov	x19, x1
  43d230:	mov	x20, x2
  43d234:	stp	x21, x22, [sp, #32]
  43d238:	mov	x22, x0
  43d23c:	mov	x0, x2
  43d240:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43d244:	mov	x21, x0
  43d248:	cmp	x20, x19
  43d24c:	b.ls	43d260 <_obstack_memory_used@@Base+0x208>  // b.plast
  43d250:	sub	x2, x20, x19
  43d254:	add	x0, x0, x19
  43d258:	mov	w1, #0x0                   	// #0
  43d25c:	bl	402840 <memset@plt>
  43d260:	mov	x2, x19
  43d264:	mov	x1, x22
  43d268:	mov	x0, x21
  43d26c:	ldp	x19, x20, [sp, #16]
  43d270:	ldp	x21, x22, [sp, #32]
  43d274:	ldp	x29, x30, [sp], #48
  43d278:	b	4025d0 <memcpy@plt>
  43d27c:	stp	x29, x30, [sp, #-32]!
  43d280:	mov	x29, sp
  43d284:	stp	x19, x20, [sp, #16]
  43d288:	mov	x20, x0
  43d28c:	bl	402630 <strlen@plt>
  43d290:	add	x19, x0, #0x1
  43d294:	mov	x0, x19
  43d298:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43d29c:	mov	x2, x19
  43d2a0:	mov	x1, x20
  43d2a4:	ldp	x19, x20, [sp, #16]
  43d2a8:	ldp	x29, x30, [sp], #32
  43d2ac:	b	4025d0 <memcpy@plt>
  43d2b0:	stp	x29, x30, [sp, #-32]!
  43d2b4:	mov	x29, sp
  43d2b8:	stp	x19, x20, [sp, #16]
  43d2bc:	mov	w20, w0
  43d2c0:	bl	402910 <strerror@plt>
  43d2c4:	cbnz	x0, 43d2e8 <_obstack_memory_used@@Base+0x290>
  43d2c8:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43d2cc:	add	x19, x19, #0xa98
  43d2d0:	mov	w2, w20
  43d2d4:	mov	x0, x19
  43d2d8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43d2dc:	add	x1, x1, #0x2f2
  43d2e0:	bl	4026e0 <sprintf@plt>
  43d2e4:	mov	x0, x19
  43d2e8:	ldp	x19, x20, [sp, #16]
  43d2ec:	ldp	x29, x30, [sp], #32
  43d2f0:	ret
  43d2f4:	stp	x29, x30, [sp, #-32]!
  43d2f8:	mov	x29, sp
  43d2fc:	stp	x19, x20, [sp, #16]
  43d300:	mov	x20, x0
  43d304:	bl	402680 <strnlen@plt>
  43d308:	mov	x19, x0
  43d30c:	add	x0, x0, #0x1
  43d310:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43d314:	mov	x2, x19
  43d318:	mov	x1, x20
  43d31c:	strb	wzr, [x0, x19]
  43d320:	ldp	x19, x20, [sp, #16]
  43d324:	ldp	x29, x30, [sp], #32
  43d328:	b	4025d0 <memcpy@plt>
  43d32c:	stp	x29, x30, [sp, #-80]!
  43d330:	mov	x29, sp
  43d334:	ldp	x2, x3, [x1]
  43d338:	stp	x2, x3, [sp, #48]
  43d33c:	ldp	x2, x3, [x1, #16]
  43d340:	stp	x19, x20, [sp, #16]
  43d344:	mov	x19, x1
  43d348:	add	x1, sp, #0x30
  43d34c:	str	x21, [sp, #32]
  43d350:	mov	x21, x0
  43d354:	stp	x2, x3, [sp, #64]
  43d358:	bl	43d398 <_obstack_memory_used@@Base+0x340>
  43d35c:	sxtw	x0, w0
  43d360:	bl	43d158 <_obstack_memory_used@@Base+0x100>
  43d364:	mov	x20, x0
  43d368:	ldp	x2, x3, [x19]
  43d36c:	stp	x2, x3, [sp, #48]
  43d370:	mov	x1, x21
  43d374:	ldp	x2, x3, [x19, #16]
  43d378:	stp	x2, x3, [sp, #64]
  43d37c:	add	x2, sp, #0x30
  43d380:	bl	402b20 <vsprintf@plt>
  43d384:	mov	x0, x20
  43d388:	ldp	x19, x20, [sp, #16]
  43d38c:	ldr	x21, [sp, #32]
  43d390:	ldp	x29, x30, [sp], #80
  43d394:	ret
  43d398:	stp	x29, x30, [sp, #-112]!
  43d39c:	mov	x29, sp
  43d3a0:	stp	x19, x20, [sp, #16]
  43d3a4:	mov	x19, x1
  43d3a8:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43d3ac:	stp	x21, x22, [sp, #32]
  43d3b0:	add	x20, x20, #0x309
  43d3b4:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43d3b8:	stp	x23, x24, [sp, #48]
  43d3bc:	add	x21, x21, #0x30f
  43d3c0:	str	x0, [sp, #72]
  43d3c4:	bl	402630 <strlen@plt>
  43d3c8:	add	w23, w0, #0x1
  43d3cc:	ldp	x0, x1, [x19]
  43d3d0:	stp	x0, x1, [sp, #80]
  43d3d4:	ldp	x0, x1, [x19, #16]
  43d3d8:	stp	x0, x1, [sp, #96]
  43d3dc:	ldr	x0, [sp, #72]
  43d3e0:	ldrb	w1, [x0]
  43d3e4:	cbnz	w1, 43d400 <_obstack_memory_used@@Base+0x3a8>
  43d3e8:	mov	w0, w23
  43d3ec:	ldp	x19, x20, [sp, #16]
  43d3f0:	ldp	x21, x22, [sp, #32]
  43d3f4:	ldp	x23, x24, [sp, #48]
  43d3f8:	ldp	x29, x30, [sp], #112
  43d3fc:	ret
  43d400:	add	x1, x0, #0x1
  43d404:	str	x1, [sp, #72]
  43d408:	ldrb	w0, [x0]
  43d40c:	cmp	w0, #0x25
  43d410:	b.ne	43d3dc <_obstack_memory_used@@Base+0x384>  // b.any
  43d414:	ldr	x19, [sp, #72]
  43d418:	mov	x0, x20
  43d41c:	ldrb	w22, [x19]
  43d420:	mov	w1, w22
  43d424:	bl	402ab0 <strchr@plt>
  43d428:	cbnz	x0, 43d50c <_obstack_memory_used@@Base+0x4b4>
  43d42c:	cmp	w22, #0x2a
  43d430:	b.ne	43d534 <_obstack_memory_used@@Base+0x4dc>  // b.any
  43d434:	ldr	w1, [sp, #104]
  43d438:	add	x19, x19, #0x1
  43d43c:	str	x19, [sp, #72]
  43d440:	ldr	x0, [sp, #80]
  43d444:	tbnz	w1, #31, 43d518 <_obstack_memory_used@@Base+0x4c0>
  43d448:	add	x1, x0, #0xb
  43d44c:	and	x1, x1, #0xfffffffffffffff8
  43d450:	str	x1, [sp, #80]
  43d454:	ldr	w19, [x0]
  43d458:	cmp	w19, #0x0
  43d45c:	cneg	w19, w19, lt  // lt = tstop
  43d460:	add	w19, w19, w23
  43d464:	ldr	x1, [sp, #72]
  43d468:	ldrb	w0, [x1]
  43d46c:	cmp	w0, #0x2e
  43d470:	b.ne	43d4b8 <_obstack_memory_used@@Base+0x460>  // b.any
  43d474:	add	x0, x1, #0x1
  43d478:	str	x0, [sp, #72]
  43d47c:	ldrb	w2, [x1, #1]
  43d480:	cmp	w2, #0x2a
  43d484:	b.ne	43d568 <_obstack_memory_used@@Base+0x510>  // b.any
  43d488:	add	x1, x1, #0x2
  43d48c:	str	x1, [sp, #72]
  43d490:	ldr	w1, [sp, #104]
  43d494:	ldr	x0, [sp, #80]
  43d498:	tbnz	w1, #31, 43d54c <_obstack_memory_used@@Base+0x4f4>
  43d49c:	add	x1, x0, #0xb
  43d4a0:	and	x1, x1, #0xfffffffffffffff8
  43d4a4:	str	x1, [sp, #80]
  43d4a8:	ldr	w0, [x0]
  43d4ac:	cmp	w0, #0x0
  43d4b0:	cneg	w0, w0, lt  // lt = tstop
  43d4b4:	add	w19, w19, w0
  43d4b8:	ldr	x24, [sp, #72]
  43d4bc:	mov	x0, x21
  43d4c0:	ldrb	w22, [x24], #1
  43d4c4:	mov	w1, w22
  43d4c8:	bl	402ab0 <strchr@plt>
  43d4cc:	cbnz	x0, 43d578 <_obstack_memory_used@@Base+0x520>
  43d4d0:	add	w23, w19, #0x1e
  43d4d4:	cmp	w22, #0x78
  43d4d8:	b.hi	43d5d0 <_obstack_memory_used@@Base+0x578>  // b.pmore
  43d4dc:	cmp	w22, #0x57
  43d4e0:	b.hi	43d580 <_obstack_memory_used@@Base+0x528>  // b.pmore
  43d4e4:	and	w22, w22, #0xfffffffd
  43d4e8:	cmp	w22, #0x45
  43d4ec:	b.ne	43d5d0 <_obstack_memory_used@@Base+0x578>  // b.any
  43d4f0:	ldr	w1, [sp, #108]
  43d4f4:	ldr	x0, [sp, #80]
  43d4f8:	tbnz	w1, #31, 43d5d8 <_obstack_memory_used@@Base+0x580>
  43d4fc:	add	x0, x0, #0xf
  43d500:	and	x0, x0, #0xfffffffffffffff8
  43d504:	str	x0, [sp, #80]
  43d508:	b	43d5e8 <_obstack_memory_used@@Base+0x590>
  43d50c:	add	x19, x19, #0x1
  43d510:	str	x19, [sp, #72]
  43d514:	b	43d414 <_obstack_memory_used@@Base+0x3bc>
  43d518:	add	w2, w1, #0x8
  43d51c:	str	w2, [sp, #104]
  43d520:	cmp	w2, #0x0
  43d524:	b.gt	43d448 <_obstack_memory_used@@Base+0x3f0>
  43d528:	ldr	x0, [sp, #88]
  43d52c:	add	x0, x0, w1, sxtw
  43d530:	b	43d454 <_obstack_memory_used@@Base+0x3fc>
  43d534:	mov	x0, x19
  43d538:	add	x1, sp, #0x48
  43d53c:	mov	w2, #0xa                   	// #10
  43d540:	bl	402620 <strtoul@plt>
  43d544:	add	w19, w23, w0
  43d548:	b	43d464 <_obstack_memory_used@@Base+0x40c>
  43d54c:	add	w2, w1, #0x8
  43d550:	str	w2, [sp, #104]
  43d554:	cmp	w2, #0x0
  43d558:	b.gt	43d49c <_obstack_memory_used@@Base+0x444>
  43d55c:	ldr	x0, [sp, #88]
  43d560:	add	x0, x0, w1, sxtw
  43d564:	b	43d4a8 <_obstack_memory_used@@Base+0x450>
  43d568:	add	x1, sp, #0x48
  43d56c:	mov	w2, #0xa                   	// #10
  43d570:	bl	402620 <strtoul@plt>
  43d574:	b	43d4b4 <_obstack_memory_used@@Base+0x45c>
  43d578:	str	x24, [sp, #72]
  43d57c:	b	43d4b8 <_obstack_memory_used@@Base+0x460>
  43d580:	sub	w22, w22, #0x58
  43d584:	cmp	w22, #0x20
  43d588:	b.hi	43d5d0 <_obstack_memory_used@@Base+0x578>  // b.pmore
  43d58c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43d590:	add	x0, x0, #0x314
  43d594:	ldrb	w0, [x0, w22, uxtw]
  43d598:	adr	x1, 43d5a4 <_obstack_memory_used@@Base+0x54c>
  43d59c:	add	x0, x1, w0, sxtb #2
  43d5a0:	br	x0
  43d5a4:	ldr	w0, [sp, #104]
  43d5a8:	ldr	x1, [sp, #80]
  43d5ac:	tbnz	w0, #31, 43d5c0 <_obstack_memory_used@@Base+0x568>
  43d5b0:	add	x1, x1, #0xb
  43d5b4:	and	x1, x1, #0xfffffffffffffff8
  43d5b8:	str	x1, [sp, #80]
  43d5bc:	b	43d5d0 <_obstack_memory_used@@Base+0x578>
  43d5c0:	add	w0, w0, #0x8
  43d5c4:	str	w0, [sp, #104]
  43d5c8:	cmp	w0, #0x0
  43d5cc:	b.gt	43d5b0 <_obstack_memory_used@@Base+0x558>
  43d5d0:	str	x24, [sp, #72]
  43d5d4:	b	43d3dc <_obstack_memory_used@@Base+0x384>
  43d5d8:	add	w1, w1, #0x10
  43d5dc:	str	w1, [sp, #108]
  43d5e0:	cmp	w1, #0x0
  43d5e4:	b.gt	43d4fc <_obstack_memory_used@@Base+0x4a4>
  43d5e8:	add	w23, w19, #0x151
  43d5ec:	b	43d5d0 <_obstack_memory_used@@Base+0x578>
  43d5f0:	ldr	w1, [sp, #104]
  43d5f4:	ldr	x0, [sp, #80]
  43d5f8:	tbnz	w1, #31, 43d618 <_obstack_memory_used@@Base+0x5c0>
  43d5fc:	add	x1, x0, #0xf
  43d600:	and	x1, x1, #0xfffffffffffffff8
  43d604:	str	x1, [sp, #80]
  43d608:	ldr	x0, [x0]
  43d60c:	bl	402630 <strlen@plt>
  43d610:	add	w23, w23, w0
  43d614:	b	43d5d0 <_obstack_memory_used@@Base+0x578>
  43d618:	add	w2, w1, #0x8
  43d61c:	str	w2, [sp, #104]
  43d620:	cmp	w2, #0x0
  43d624:	b.gt	43d5fc <_obstack_memory_used@@Base+0x5a4>
  43d628:	ldr	x0, [sp, #88]
  43d62c:	add	x0, x0, w1, sxtw
  43d630:	b	43d608 <_obstack_memory_used@@Base+0x5b0>
  43d634:	ldr	w0, [sp, #104]
  43d638:	ldr	x1, [sp, #80]
  43d63c:	tbnz	w0, #31, 43d648 <_obstack_memory_used@@Base+0x5f0>
  43d640:	add	x1, x1, #0xf
  43d644:	b	43d5b4 <_obstack_memory_used@@Base+0x55c>
  43d648:	add	w0, w0, #0x8
  43d64c:	str	w0, [sp, #104]
  43d650:	cmp	w0, #0x0
  43d654:	b.gt	43d640 <_obstack_memory_used@@Base+0x5e8>
  43d658:	b	43d5d0 <_obstack_memory_used@@Base+0x578>
  43d65c:	nop
  43d660:	b	43df18 <_obstack_memory_used@@Base+0xec0>
  43d664:	nop
  43d668:	b	43df20 <_obstack_memory_used@@Base+0xec8>
  43d66c:	nop
  43d670:	stp	x29, x30, [sp, #-64]!
  43d674:	mov	x29, sp
  43d678:	str	x23, [sp, #48]
  43d67c:	mov	x23, x0
  43d680:	ldarb	w0, [x0]
  43d684:	tst	w0, #0xff
  43d688:	b.ne	43d6e4 <_obstack_memory_used@@Base+0x68c>  // b.any
  43d68c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d690:	ldr	x0, [x0, #3880]
  43d694:	cbz	x0, 43d6f4 <_obstack_memory_used@@Base+0x69c>
  43d698:	stp	x19, x20, [sp, #16]
  43d69c:	mov	w19, #0x100                 	// #256
  43d6a0:	mov	w20, #0x1                   	// #1
  43d6a4:	stp	x21, x22, [sp, #32]
  43d6a8:	mov	w21, w19
  43d6ac:	ldaxr	w0, [x23]
  43d6b0:	cbnz	w0, 43d6bc <_obstack_memory_used@@Base+0x664>
  43d6b4:	stlxr	w1, w19, [x23]
  43d6b8:	cbnz	w1, 43d6ac <_obstack_memory_used@@Base+0x654>
  43d6bc:	cmp	w0, #0x0
  43d6c0:	b.ne	43d71c <_obstack_memory_used@@Base+0x6c4>  // b.any
  43d6c4:	mov	w0, #0x1                   	// #1
  43d6c8:	ldp	x19, x20, [sp, #16]
  43d6cc:	ldp	x21, x22, [sp, #32]
  43d6d0:	ldr	x23, [sp, #48]
  43d6d4:	ldp	x29, x30, [sp], #64
  43d6d8:	ret
  43d6dc:	ldp	x19, x20, [sp, #16]
  43d6e0:	ldp	x21, x22, [sp, #32]
  43d6e4:	mov	w0, #0x0                   	// #0
  43d6e8:	ldr	x23, [sp, #48]
  43d6ec:	ldp	x29, x30, [sp], #64
  43d6f0:	ret
  43d6f4:	ldrb	w0, [x23]
  43d6f8:	cbnz	w0, 43d6e4 <_obstack_memory_used@@Base+0x68c>
  43d6fc:	ldrb	w0, [x23, #1]
  43d700:	cbnz	w0, 43d794 <_obstack_memory_used@@Base+0x73c>
  43d704:	mov	w2, #0x1                   	// #1
  43d708:	strb	w2, [x23, #1]
  43d70c:	mov	w0, #0x1                   	// #1
  43d710:	ldr	x23, [sp, #48]
  43d714:	ldp	x29, x30, [sp], #64
  43d718:	ret
  43d71c:	orr	w22, w19, #0x10000
  43d720:	mov	w3, w0
  43d724:	cmp	w20, w3
  43d728:	b.eq	43d6dc <_obstack_memory_used@@Base+0x684>  // b.none
  43d72c:	cmp	w19, w3
  43d730:	b.ne	43d750 <_obstack_memory_used@@Base+0x6f8>  // b.any
  43d734:	mov	w3, w22
  43d738:	ldaxr	w2, [x23]
  43d73c:	cmp	w2, w0
  43d740:	b.ne	43d74c <_obstack_memory_used@@Base+0x6f4>  // b.any
  43d744:	stlxr	w1, w22, [x23]
  43d748:	cbnz	w1, 43d738 <_obstack_memory_used@@Base+0x6e0>
  43d74c:	b.ne	43d784 <_obstack_memory_used@@Base+0x72c>  // b.any
  43d750:	mov	x1, x23
  43d754:	mov	w4, #0x0                   	// #0
  43d758:	mov	w2, #0x0                   	// #0
  43d75c:	mov	x0, #0x62                  	// #98
  43d760:	bl	402c70 <syscall@plt>
  43d764:	ldaxr	w0, [x23]
  43d768:	cbnz	w0, 43d774 <_obstack_memory_used@@Base+0x71c>
  43d76c:	stlxr	w1, w21, [x23]
  43d770:	cbnz	w1, 43d764 <_obstack_memory_used@@Base+0x70c>
  43d774:	cmp	w0, #0x0
  43d778:	mov	w3, w0
  43d77c:	b.eq	43d6c4 <_obstack_memory_used@@Base+0x66c>  // b.none
  43d780:	b	43d724 <_obstack_memory_used@@Base+0x6cc>
  43d784:	cmp	w20, w2
  43d788:	b.eq	43d6dc <_obstack_memory_used@@Base+0x684>  // b.none
  43d78c:	cbnz	w2, 43d750 <_obstack_memory_used@@Base+0x6f8>
  43d790:	b	43d764 <_obstack_memory_used@@Base+0x70c>
  43d794:	mov	x0, #0x8                   	// #8
  43d798:	stp	x19, x20, [sp, #16]
  43d79c:	stp	x21, x22, [sp, #32]
  43d7a0:	bl	43e290 <_obstack_memory_used@@Base+0x1238>
  43d7a4:	mov	x19, x0
  43d7a8:	bl	43d888 <_obstack_memory_used@@Base+0x830>
  43d7ac:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d7b0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d7b4:	mov	x0, x19
  43d7b8:	ldr	x2, [x2, #4016]
  43d7bc:	ldr	x1, [x1, #3896]
  43d7c0:	bl	43f0a8 <_obstack_memory_used@@Base+0x2050>
  43d7c4:	nop
  43d7c8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d7cc:	ldr	x1, [x1, #3880]
  43d7d0:	cbnz	x1, 43d7dc <_obstack_memory_used@@Base+0x784>
  43d7d4:	strb	wzr, [x0, #1]
  43d7d8:	ret
  43d7dc:	ldaxr	w1, [x0]
  43d7e0:	stlxr	w2, wzr, [x0]
  43d7e4:	cbnz	w2, 43d7dc <_obstack_memory_used@@Base+0x784>
  43d7e8:	tbz	w1, #16, 43d7d8 <_obstack_memory_used@@Base+0x780>
  43d7ec:	mov	x1, x0
  43d7f0:	mov	w3, #0x7fffffff            	// #2147483647
  43d7f4:	mov	w2, #0x1                   	// #1
  43d7f8:	mov	x0, #0x62                  	// #98
  43d7fc:	b	402c70 <syscall@plt>
  43d800:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d804:	ldr	x1, [x1, #3880]
  43d808:	cbz	x1, 43d824 <_obstack_memory_used@@Base+0x7cc>
  43d80c:	mov	w2, #0x1                   	// #1
  43d810:	ldaxr	w1, [x0]
  43d814:	stlxr	w3, w2, [x0]
  43d818:	cbnz	w3, 43d810 <_obstack_memory_used@@Base+0x7b8>
  43d81c:	tbnz	w1, #16, 43d834 <_obstack_memory_used@@Base+0x7dc>
  43d820:	ret
  43d824:	strb	wzr, [x0, #1]
  43d828:	mov	w1, #0x1                   	// #1
  43d82c:	stlrb	w1, [x0]
  43d830:	ret
  43d834:	mov	x1, x0
  43d838:	mov	w3, #0x7fffffff            	// #2147483647
  43d83c:	mov	x0, #0x62                  	// #98
  43d840:	b	402c70 <syscall@plt>
  43d844:	nop
  43d848:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d84c:	ldr	x1, [x1, #4056]
  43d850:	add	x1, x1, #0x10
  43d854:	str	x1, [x0]
  43d858:	b	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43d85c:	nop
  43d860:	stp	x29, x30, [sp, #-32]!
  43d864:	mov	x29, sp
  43d868:	str	x19, [sp, #16]
  43d86c:	mov	x19, x0
  43d870:	bl	43d848 <_obstack_memory_used@@Base+0x7f0>
  43d874:	mov	x0, x19
  43d878:	mov	x1, #0x8                   	// #8
  43d87c:	ldr	x19, [sp, #16]
  43d880:	ldp	x29, x30, [sp], #32
  43d884:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43d888:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d88c:	ldr	x1, [x1, #4056]
  43d890:	add	x1, x1, #0x10
  43d894:	str	x1, [x0]
  43d898:	ret
  43d89c:	nop
  43d8a0:	stp	x29, x30, [sp, #-32]!
  43d8a4:	cmp	x0, #0x0
  43d8a8:	mov	x29, sp
  43d8ac:	str	x19, [sp, #16]
  43d8b0:	csinc	x19, x0, xzr, ne  // ne = any
  43d8b4:	mov	x0, x19
  43d8b8:	bl	4027c0 <malloc@plt>
  43d8bc:	cbz	x0, 43d8cc <_obstack_memory_used@@Base+0x874>
  43d8c0:	ldr	x19, [sp, #16]
  43d8c4:	ldp	x29, x30, [sp], #32
  43d8c8:	ret
  43d8cc:	bl	43f198 <_obstack_memory_used@@Base+0x2140>
  43d8d0:	cbz	x0, 43d8dc <_obstack_memory_used@@Base+0x884>
  43d8d4:	blr	x0
  43d8d8:	b	43d8b4 <_obstack_memory_used@@Base+0x85c>
  43d8dc:	mov	x0, #0x8                   	// #8
  43d8e0:	bl	43e290 <_obstack_memory_used@@Base+0x1238>
  43d8e4:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d8e8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d8ec:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d8f0:	ldr	x3, [x3, #3992]
  43d8f4:	ldr	x2, [x2, #3920]
  43d8f8:	add	x3, x3, #0x10
  43d8fc:	ldr	x1, [x1, #3904]
  43d900:	str	x3, [x0]
  43d904:	bl	43f0a8 <_obstack_memory_used@@Base+0x2050>
  43d908:	b	43d8a0 <_obstack_memory_used@@Base+0x848>
  43d90c:	nop
  43d910:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43d914:	ldr	x1, [x1, #4008]
  43d918:	add	x1, x1, #0x10
  43d91c:	str	x1, [x0]
  43d920:	b	43dcd8 <_obstack_memory_used@@Base+0xc80>
  43d924:	nop
  43d928:	stp	x29, x30, [sp, #-32]!
  43d92c:	mov	x29, sp
  43d930:	str	x19, [sp, #16]
  43d934:	mov	x19, x0
  43d938:	bl	43d910 <_obstack_memory_used@@Base+0x8b8>
  43d93c:	mov	x0, x19
  43d940:	mov	x1, #0x18                  	// #24
  43d944:	ldr	x19, [sp, #16]
  43d948:	ldp	x29, x30, [sp], #32
  43d94c:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43d950:	stp	x29, x30, [sp, #-64]!
  43d954:	cmp	x4, x2
  43d958:	mov	x29, sp
  43d95c:	stp	x19, x20, [sp, #16]
  43d960:	mov	x19, x0
  43d964:	mov	x20, x1
  43d968:	b.eq	43d98c <_obstack_memory_used@@Base+0x934>  // b.none
  43d96c:	ldr	x0, [x19, #16]
  43d970:	mov	x1, x20
  43d974:	ldp	x19, x20, [sp, #16]
  43d978:	ldr	x5, [x0]
  43d97c:	ldr	x5, [x5, #64]
  43d980:	ldp	x29, x30, [sp], #64
  43d984:	mov	x16, x5
  43d988:	br	x16
  43d98c:	ldr	x1, [x3, #8]
  43d990:	ldr	x0, [x0, #8]
  43d994:	cmp	x0, x1
  43d998:	b.eq	43d9c0 <_obstack_memory_used@@Base+0x968>  // b.none
  43d99c:	ldrb	w5, [x0]
  43d9a0:	cmp	w5, #0x2a
  43d9a4:	b.eq	43d96c <_obstack_memory_used@@Base+0x914>  // b.none
  43d9a8:	stp	x2, x3, [sp, #40]
  43d9ac:	str	x4, [sp, #56]
  43d9b0:	bl	402a00 <strcmp@plt>
  43d9b4:	ldp	x2, x3, [sp, #40]
  43d9b8:	ldr	x4, [sp, #56]
  43d9bc:	cbnz	w0, 43d96c <_obstack_memory_used@@Base+0x914>
  43d9c0:	mov	w0, #0x6                   	// #6
  43d9c4:	ldp	x19, x20, [sp, #16]
  43d9c8:	ldp	x29, x30, [sp], #64
  43d9cc:	ret
  43d9d0:	stp	x29, x30, [sp, #-96]!
  43d9d4:	mov	x29, sp
  43d9d8:	stp	x21, x22, [sp, #32]
  43d9dc:	mov	x22, x3
  43d9e0:	mov	x21, x1
  43d9e4:	stp	x25, x26, [sp, #64]
  43d9e8:	mov	w26, w2
  43d9ec:	ldr	x25, [x0, #8]
  43d9f0:	stp	x19, x20, [sp, #16]
  43d9f4:	mov	x19, x4
  43d9f8:	ldr	x3, [x3, #8]
  43d9fc:	stp	x23, x24, [sp, #48]
  43da00:	mov	x20, x7
  43da04:	mov	x23, x6
  43da08:	cmp	x25, x3
  43da0c:	b.eq	43da3c <_obstack_memory_used@@Base+0x9e4>  // b.none
  43da10:	stp	x27, x28, [sp, #80]
  43da14:	mov	x24, x5
  43da18:	mov	x27, x0
  43da1c:	ldrb	w28, [x25]
  43da20:	cmp	w28, #0x2a
  43da24:	b.eq	43da78 <_obstack_memory_used@@Base+0xa20>  // b.none
  43da28:	mov	x1, x3
  43da2c:	mov	x0, x25
  43da30:	bl	402a00 <strcmp@plt>
  43da34:	cbnz	w0, 43da78 <_obstack_memory_used@@Base+0xa20>
  43da38:	ldp	x27, x28, [sp, #80]
  43da3c:	str	x19, [x20]
  43da40:	str	w26, [x20, #8]
  43da44:	tbnz	x21, #63, 43dac8 <_obstack_memory_used@@Base+0xa70>
  43da48:	add	x1, x19, x21
  43da4c:	mov	w2, #0x6                   	// #6
  43da50:	cmp	x23, x1
  43da54:	mov	w0, #0x0                   	// #0
  43da58:	csinc	w2, w2, wzr, eq  // eq = none
  43da5c:	str	w2, [x20, #16]
  43da60:	ldp	x19, x20, [sp, #16]
  43da64:	ldp	x21, x22, [sp, #32]
  43da68:	ldp	x23, x24, [sp, #48]
  43da6c:	ldp	x25, x26, [sp, #64]
  43da70:	ldp	x29, x30, [sp], #96
  43da74:	ret
  43da78:	cmp	x19, x23
  43da7c:	b.eq	43dae0 <_obstack_memory_used@@Base+0xa88>  // b.none
  43da80:	ldr	x0, [x27, #16]
  43da84:	mov	x7, x20
  43da88:	mov	x6, x23
  43da8c:	mov	x5, x24
  43da90:	mov	x4, x19
  43da94:	mov	x3, x22
  43da98:	ldr	x8, [x0]
  43da9c:	mov	w2, w26
  43daa0:	mov	x1, x21
  43daa4:	ldp	x19, x20, [sp, #16]
  43daa8:	ldp	x21, x22, [sp, #32]
  43daac:	ldp	x23, x24, [sp, #48]
  43dab0:	ldp	x25, x26, [sp, #64]
  43dab4:	ldp	x27, x28, [sp, #80]
  43dab8:	ldp	x29, x30, [sp], #96
  43dabc:	ldr	x8, [x8, #56]
  43dac0:	mov	x16, x8
  43dac4:	br	x16
  43dac8:	cmn	x21, #0x2
  43dacc:	mov	w0, #0x0                   	// #0
  43dad0:	b.ne	43da60 <_obstack_memory_used@@Base+0xa08>  // b.any
  43dad4:	mov	w1, #0x1                   	// #1
  43dad8:	str	w1, [x20, #16]
  43dadc:	b	43da60 <_obstack_memory_used@@Base+0xa08>
  43dae0:	ldr	x1, [x24, #8]
  43dae4:	cmp	x25, x1
  43dae8:	b.eq	43db00 <_obstack_memory_used@@Base+0xaa8>  // b.none
  43daec:	cmp	w28, #0x2a
  43daf0:	b.eq	43da80 <_obstack_memory_used@@Base+0xa28>  // b.none
  43daf4:	mov	x0, x25
  43daf8:	bl	402a00 <strcmp@plt>
  43dafc:	cbnz	w0, 43da80 <_obstack_memory_used@@Base+0xa28>
  43db00:	mov	w0, #0x0                   	// #0
  43db04:	ldp	x27, x28, [sp, #80]
  43db08:	str	w26, [x20, #12]
  43db0c:	b	43da60 <_obstack_memory_used@@Base+0xa08>
  43db10:	stp	x29, x30, [sp, #-48]!
  43db14:	mov	x29, sp
  43db18:	stp	x19, x20, [sp, #16]
  43db1c:	mov	x19, x1
  43db20:	mov	x20, x2
  43db24:	stp	x21, x22, [sp, #32]
  43db28:	mov	x22, x0
  43db2c:	mov	x21, x3
  43db30:	bl	43ddf8 <_obstack_memory_used@@Base+0xda0>
  43db34:	tst	w0, #0xff
  43db38:	b.ne	43db68 <_obstack_memory_used@@Base+0xb10>  // b.any
  43db3c:	ldr	x0, [x22, #16]
  43db40:	mov	x3, x21
  43db44:	mov	x2, x20
  43db48:	mov	x1, x19
  43db4c:	ldp	x19, x20, [sp, #16]
  43db50:	ldr	x4, [x0]
  43db54:	ldp	x21, x22, [sp, #32]
  43db58:	ldp	x29, x30, [sp], #48
  43db5c:	ldr	x4, [x4, #48]
  43db60:	mov	x16, x4
  43db64:	br	x16
  43db68:	ldp	x19, x20, [sp, #16]
  43db6c:	ldp	x21, x22, [sp, #32]
  43db70:	ldp	x29, x30, [sp], #48
  43db74:	ret
  43db78:	ret
  43db7c:	nop
  43db80:	mov	w0, #0x0                   	// #0
  43db84:	ret
  43db88:	mov	w0, #0x0                   	// #0
  43db8c:	ret
  43db90:	stp	x29, x30, [sp, #-32]!
  43db94:	mov	x29, sp
  43db98:	str	x19, [sp, #16]
  43db9c:	mov	x19, x0
  43dba0:	bl	43db78 <_obstack_memory_used@@Base+0xb20>
  43dba4:	mov	x0, x19
  43dba8:	mov	x1, #0x10                  	// #16
  43dbac:	ldr	x19, [sp, #16]
  43dbb0:	ldp	x29, x30, [sp], #32
  43dbb4:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43dbb8:	ldr	x2, [x0, #8]
  43dbbc:	ldr	x1, [x1, #8]
  43dbc0:	cmp	x2, x1
  43dbc4:	b.eq	43dbfc <_obstack_memory_used@@Base+0xba4>  // b.none
  43dbc8:	ldrb	w3, [x2]
  43dbcc:	mov	w0, #0x0                   	// #0
  43dbd0:	cmp	w3, #0x2a
  43dbd4:	b.eq	43dbf8 <_obstack_memory_used@@Base+0xba0>  // b.none
  43dbd8:	stp	x29, x30, [sp, #-16]!
  43dbdc:	mov	x0, x2
  43dbe0:	mov	x29, sp
  43dbe4:	bl	402a00 <strcmp@plt>
  43dbe8:	cmp	w0, #0x0
  43dbec:	cset	w0, eq  // eq = none
  43dbf0:	ldp	x29, x30, [sp], #16
  43dbf4:	ret
  43dbf8:	ret
  43dbfc:	mov	w0, #0x1                   	// #1
  43dc00:	ret
  43dc04:	nop
  43dc08:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43dc0c:	add	x0, x0, #0x398
  43dc10:	ret
  43dc14:	nop
  43dc18:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43dc1c:	ldr	x1, [x1, #3992]
  43dc20:	add	x1, x1, #0x10
  43dc24:	str	x1, [x0]
  43dc28:	b	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43dc2c:	nop
  43dc30:	stp	x29, x30, [sp, #-32]!
  43dc34:	mov	x29, sp
  43dc38:	str	x19, [sp, #16]
  43dc3c:	mov	x19, x0
  43dc40:	bl	43dc18 <_obstack_memory_used@@Base+0xbc0>
  43dc44:	mov	x0, x19
  43dc48:	mov	x1, #0x8                   	// #8
  43dc4c:	ldr	x19, [sp, #16]
  43dc50:	ldp	x29, x30, [sp], #32
  43dc54:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43dc58:	stp	x29, x30, [sp, #-64]!
  43dc5c:	mov	x29, sp
  43dc60:	ldr	x4, [x0]
  43dc64:	str	xzr, [sp, #40]
  43dc68:	str	xzr, [sp, #56]
  43dc6c:	add	x3, sp, #0x28
  43dc70:	ldr	x4, [x4, #48]
  43dc74:	str	x19, [sp, #16]
  43dc78:	mov	x19, x2
  43dc7c:	mov	x2, #0x1000000000          	// #68719476736
  43dc80:	str	x2, [sp, #48]
  43dc84:	ldr	x2, [x19]
  43dc88:	blr	x4
  43dc8c:	ldr	w0, [sp, #48]
  43dc90:	and	w0, w0, #0x6
  43dc94:	cmp	w0, #0x6
  43dc98:	b.ne	43dcb4 <_obstack_memory_used@@Base+0xc5c>  // b.any
  43dc9c:	ldr	x1, [sp, #40]
  43dca0:	str	x1, [x19]
  43dca4:	mov	w0, #0x1                   	// #1
  43dca8:	ldr	x19, [sp, #16]
  43dcac:	ldp	x29, x30, [sp], #64
  43dcb0:	ret
  43dcb4:	mov	w0, #0x0                   	// #0
  43dcb8:	ldr	x19, [sp, #16]
  43dcbc:	ldp	x29, x30, [sp], #64
  43dcc0:	ret
  43dcc4:	nop
  43dcc8:	cmp	x4, x2
  43dccc:	mov	w0, #0x6                   	// #6
  43dcd0:	csinc	w0, w0, wzr, eq  // eq = none
  43dcd4:	ret
  43dcd8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43dcdc:	ldr	x1, [x1, #4048]
  43dce0:	add	x1, x1, #0x10
  43dce4:	str	x1, [x0]
  43dce8:	b	43db78 <_obstack_memory_used@@Base+0xb20>
  43dcec:	nop
  43dcf0:	stp	x29, x30, [sp, #-32]!
  43dcf4:	mov	x29, sp
  43dcf8:	str	x19, [sp, #16]
  43dcfc:	mov	x19, x0
  43dd00:	bl	43dcd8 <_obstack_memory_used@@Base+0xc80>
  43dd04:	mov	x0, x19
  43dd08:	mov	x1, #0x10                  	// #16
  43dd0c:	ldr	x19, [sp, #16]
  43dd10:	ldp	x29, x30, [sp], #32
  43dd14:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43dd18:	stp	x29, x30, [sp, #-64]!
  43dd1c:	cmp	x4, x6
  43dd20:	mov	x29, sp
  43dd24:	stp	x19, x20, [sp, #16]
  43dd28:	mov	x20, x4
  43dd2c:	mov	x19, x7
  43dd30:	stp	x21, x22, [sp, #32]
  43dd34:	mov	w21, w2
  43dd38:	ldr	x22, [x0, #8]
  43dd3c:	str	x23, [sp, #48]
  43dd40:	mov	x23, x3
  43dd44:	b.eq	43dd94 <_obstack_memory_used@@Base+0xd3c>  // b.none
  43dd48:	ldr	x1, [x3, #8]
  43dd4c:	cmp	x1, x22
  43dd50:	b.eq	43dd6c <_obstack_memory_used@@Base+0xd14>  // b.none
  43dd54:	ldrb	w0, [x22]
  43dd58:	cmp	w0, #0x2a
  43dd5c:	b.eq	43dd7c <_obstack_memory_used@@Base+0xd24>  // b.none
  43dd60:	mov	x0, x22
  43dd64:	bl	402a00 <strcmp@plt>
  43dd68:	cbnz	w0, 43dd7c <_obstack_memory_used@@Base+0xd24>
  43dd6c:	mov	w0, #0x1                   	// #1
  43dd70:	str	x20, [x19]
  43dd74:	str	w21, [x19, #8]
  43dd78:	str	w0, [x19, #16]
  43dd7c:	mov	w0, #0x0                   	// #0
  43dd80:	ldp	x19, x20, [sp, #16]
  43dd84:	ldp	x21, x22, [sp, #32]
  43dd88:	ldr	x23, [sp, #48]
  43dd8c:	ldp	x29, x30, [sp], #64
  43dd90:	ret
  43dd94:	ldr	x1, [x5, #8]
  43dd98:	cmp	x1, x22
  43dd9c:	b.eq	43ddd8 <_obstack_memory_used@@Base+0xd80>  // b.none
  43dda0:	ldrb	w0, [x22]
  43dda4:	cmp	w0, #0x2a
  43dda8:	b.eq	43ddc8 <_obstack_memory_used@@Base+0xd70>  // b.none
  43ddac:	mov	x0, x22
  43ddb0:	bl	402a00 <strcmp@plt>
  43ddb4:	cbz	w0, 43ddd8 <_obstack_memory_used@@Base+0xd80>
  43ddb8:	ldr	x1, [x23, #8]
  43ddbc:	cmp	x22, x1
  43ddc0:	b.ne	43dd60 <_obstack_memory_used@@Base+0xd08>  // b.any
  43ddc4:	b	43dd6c <_obstack_memory_used@@Base+0xd14>
  43ddc8:	ldr	x0, [x3, #8]
  43ddcc:	cmp	x0, x22
  43ddd0:	b.ne	43dd7c <_obstack_memory_used@@Base+0xd24>  // b.any
  43ddd4:	b	43dd6c <_obstack_memory_used@@Base+0xd14>
  43ddd8:	str	w21, [x19, #12]
  43dddc:	mov	w0, #0x0                   	// #0
  43dde0:	ldp	x19, x20, [sp, #16]
  43dde4:	ldp	x21, x22, [sp, #32]
  43dde8:	ldr	x23, [sp, #48]
  43ddec:	ldp	x29, x30, [sp], #64
  43ddf0:	ret
  43ddf4:	nop
  43ddf8:	stp	x29, x30, [sp, #-48]!
  43ddfc:	mov	x29, sp
  43de00:	ldr	x0, [x0, #8]
  43de04:	stp	x19, x20, [sp, #16]
  43de08:	mov	x20, x2
  43de0c:	ldr	x1, [x1, #8]
  43de10:	str	x21, [sp, #32]
  43de14:	mov	x19, x3
  43de18:	cmp	x0, x1
  43de1c:	b.eq	43de38 <_obstack_memory_used@@Base+0xde0>  // b.none
  43de20:	ldrb	w2, [x0]
  43de24:	mov	w21, #0x0                   	// #0
  43de28:	cmp	w2, #0x2a
  43de2c:	b.eq	43de50 <_obstack_memory_used@@Base+0xdf8>  // b.none
  43de30:	bl	402a00 <strcmp@plt>
  43de34:	cbnz	w0, 43de50 <_obstack_memory_used@@Base+0xdf8>
  43de38:	mov	x0, #0x10                  	// #16
  43de3c:	mov	w1, #0x6                   	// #6
  43de40:	mov	w21, #0x1                   	// #1
  43de44:	str	x20, [x19]
  43de48:	str	w1, [x19, #8]
  43de4c:	str	x0, [x19, #16]
  43de50:	mov	w0, w21
  43de54:	ldp	x19, x20, [sp, #16]
  43de58:	ldr	x21, [sp, #32]
  43de5c:	ldp	x29, x30, [sp], #48
  43de60:	ret
  43de64:	nop
  43de68:	stp	x29, x30, [sp, #-48]!
  43de6c:	mov	x29, sp
  43de70:	stp	x19, x20, [sp, #16]
  43de74:	mov	x20, x0
  43de78:	mov	x19, x1
  43de7c:	ldr	x0, [x0, #8]
  43de80:	ldr	x1, [x1, #8]
  43de84:	cmp	x0, x1
  43de88:	b.eq	43def0 <_obstack_memory_used@@Base+0xe98>  // b.none
  43de8c:	stp	x21, x22, [sp, #32]
  43de90:	mov	x22, x2
  43de94:	mov	w21, w3
  43de98:	ldrb	w2, [x0]
  43de9c:	cmp	w2, #0x2a
  43dea0:	b.eq	43dec0 <_obstack_memory_used@@Base+0xe68>  // b.none
  43dea4:	bl	402a00 <strcmp@plt>
  43dea8:	cbnz	w0, 43dec0 <_obstack_memory_used@@Base+0xe68>
  43deac:	mov	w0, #0x1                   	// #1
  43deb0:	ldp	x19, x20, [sp, #16]
  43deb4:	ldp	x21, x22, [sp, #32]
  43deb8:	ldp	x29, x30, [sp], #48
  43debc:	ret
  43dec0:	cmp	w21, #0x3
  43dec4:	b.hi	43df00 <_obstack_memory_used@@Base+0xea8>  // b.pmore
  43dec8:	ldr	x3, [x19]
  43decc:	mov	x2, x22
  43ded0:	mov	x1, x20
  43ded4:	mov	x0, x19
  43ded8:	ldp	x19, x20, [sp, #16]
  43dedc:	ldp	x21, x22, [sp, #32]
  43dee0:	ldp	x29, x30, [sp], #48
  43dee4:	ldr	x3, [x3, #40]
  43dee8:	mov	x16, x3
  43deec:	br	x16
  43def0:	mov	w0, #0x1                   	// #1
  43def4:	ldp	x19, x20, [sp, #16]
  43def8:	ldp	x29, x30, [sp], #48
  43defc:	ret
  43df00:	mov	w0, #0x0                   	// #0
  43df04:	ldp	x19, x20, [sp, #16]
  43df08:	ldp	x21, x22, [sp, #32]
  43df0c:	ldp	x29, x30, [sp], #48
  43df10:	ret
  43df14:	nop
  43df18:	b	402a80 <free@plt>
  43df1c:	nop
  43df20:	b	43df18 <_obstack_memory_used@@Base+0xec0>
  43df24:	nop
  43df28:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43df2c:	add	x0, x0, #0x3e0
  43df30:	ret
  43df34:	nop
  43df38:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43df3c:	add	x0, x0, #0x408
  43df40:	ret
  43df44:	nop
  43df48:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43df4c:	ldr	x1, [x1, #4000]
  43df50:	add	x1, x1, #0x10
  43df54:	str	x1, [x0]
  43df58:	b	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43df5c:	nop
  43df60:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43df64:	ldr	x1, [x1, #3984]
  43df68:	add	x1, x1, #0x10
  43df6c:	str	x1, [x0]
  43df70:	b	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43df74:	nop
  43df78:	stp	x29, x30, [sp, #-32]!
  43df7c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43df80:	mov	x29, sp
  43df84:	ldr	x1, [x1, #4000]
  43df88:	str	x19, [sp, #16]
  43df8c:	mov	x19, x0
  43df90:	add	x1, x1, #0x10
  43df94:	str	x1, [x0]
  43df98:	bl	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43df9c:	mov	x0, x19
  43dfa0:	mov	x1, #0x8                   	// #8
  43dfa4:	ldr	x19, [sp, #16]
  43dfa8:	ldp	x29, x30, [sp], #32
  43dfac:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43dfb0:	stp	x29, x30, [sp, #-32]!
  43dfb4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43dfb8:	mov	x29, sp
  43dfbc:	ldr	x1, [x1, #3984]
  43dfc0:	str	x19, [sp, #16]
  43dfc4:	mov	x19, x0
  43dfc8:	add	x1, x1, #0x10
  43dfcc:	str	x1, [x0]
  43dfd0:	bl	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43dfd4:	mov	x0, x19
  43dfd8:	mov	x1, #0x8                   	// #8
  43dfdc:	ldr	x19, [sp, #16]
  43dfe0:	ldp	x29, x30, [sp], #32
  43dfe4:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43dfe8:	stp	x29, x30, [sp, #-48]!
  43dfec:	mov	x29, sp
  43dff0:	stp	x19, x20, [sp, #16]
  43dff4:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43dff8:	mov	x19, x0
  43dffc:	ldr	x0, [x20, #3880]
  43e000:	str	x21, [sp, #32]
  43e004:	adrp	x21, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43e008:	cbz	x0, 43e018 <_obstack_memory_used@@Base+0xfc0>
  43e00c:	add	x0, x21, #0xac8
  43e010:	bl	402c50 <pthread_mutex_lock@plt>
  43e014:	cbnz	w0, 43e110 <_obstack_memory_used@@Base+0x10b8>
  43e018:	add	x0, x21, #0xac8
  43e01c:	sub	x5, x19, #0x10
  43e020:	ldr	x1, [x0, #48]
  43e024:	cbz	x1, 43e0a0 <_obstack_memory_used@@Base+0x1048>
  43e028:	ldur	x6, [x19, #-16]
  43e02c:	add	x4, x5, x6
  43e030:	cmp	x1, x4
  43e034:	b.hi	43e0a0 <_obstack_memory_used@@Base+0x1048>  // b.pmore
  43e038:	ldr	x2, [x1, #8]
  43e03c:	b.eq	43e0f4 <_obstack_memory_used@@Base+0x109c>  // b.none
  43e040:	add	x0, x0, #0x30
  43e044:	cbnz	x2, 43e060 <_obstack_memory_used@@Base+0x1008>
  43e048:	b	43e07c <_obstack_memory_used@@Base+0x1024>
  43e04c:	ldr	x3, [x2, #8]
  43e050:	add	x0, x1, #0x8
  43e054:	cbz	x3, 43e0dc <_obstack_memory_used@@Base+0x1084>
  43e058:	mov	x1, x2
  43e05c:	mov	x2, x3
  43e060:	cmp	x4, x2
  43e064:	b.cc	43e04c <_obstack_memory_used@@Base+0xff4>  // b.lo, b.ul, b.last
  43e068:	b.ne	43e108 <_obstack_memory_used@@Base+0x10b0>  // b.any
  43e06c:	ldp	x2, x3, [x4]
  43e070:	str	x3, [x1, #8]
  43e074:	ldr	x1, [x0]
  43e078:	add	x6, x6, x2
  43e07c:	ldr	x2, [x1]
  43e080:	add	x3, x1, x2
  43e084:	cmp	x5, x3
  43e088:	b.eq	43e0d0 <_obstack_memory_used@@Base+0x1078>  // b.none
  43e08c:	ldr	x1, [x1, #8]
  43e090:	stp	x6, x1, [x19, #-16]
  43e094:	ldr	x0, [x0]
  43e098:	str	x5, [x0, #8]
  43e09c:	b	43e0ac <_obstack_memory_used@@Base+0x1054>
  43e0a0:	add	x0, x21, #0xac8
  43e0a4:	stur	x1, [x19, #-8]
  43e0a8:	str	x5, [x0, #48]
  43e0ac:	ldr	x20, [x20, #3880]
  43e0b0:	cbz	x20, 43e0c0 <_obstack_memory_used@@Base+0x1068>
  43e0b4:	add	x0, x21, #0xac8
  43e0b8:	bl	402c80 <pthread_mutex_unlock@plt>
  43e0bc:	cbnz	w0, 43e114 <_obstack_memory_used@@Base+0x10bc>
  43e0c0:	ldp	x19, x20, [sp, #16]
  43e0c4:	ldr	x21, [sp, #32]
  43e0c8:	ldp	x29, x30, [sp], #48
  43e0cc:	ret
  43e0d0:	add	x6, x2, x6
  43e0d4:	str	x6, [x1]
  43e0d8:	b	43e0ac <_obstack_memory_used@@Base+0x1054>
  43e0dc:	ldr	x1, [x1, #8]
  43e0e0:	ldr	x2, [x1]
  43e0e4:	add	x3, x1, x2
  43e0e8:	cmp	x5, x3
  43e0ec:	b.ne	43e08c <_obstack_memory_used@@Base+0x1034>  // b.any
  43e0f0:	b	43e0d0 <_obstack_memory_used@@Base+0x1078>
  43e0f4:	ldr	x1, [x1]
  43e0f8:	add	x6, x1, x6
  43e0fc:	stp	x6, x2, [x19, #-16]
  43e100:	str	x5, [x0, #48]
  43e104:	b	43e0ac <_obstack_memory_used@@Base+0x1054>
  43e108:	ldr	x1, [x0]
  43e10c:	b	43e07c <_obstack_memory_used@@Base+0x1024>
  43e110:	bl	402d8c <nftw@plt+0x9c>
  43e114:	mov	x0, #0x8                   	// #8
  43e118:	bl	43e290 <_obstack_memory_used@@Base+0x1238>
  43e11c:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e120:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e124:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e128:	ldr	x3, [x3, #3984]
  43e12c:	ldr	x2, [x2, #4064]
  43e130:	add	x3, x3, #0x10
  43e134:	ldr	x1, [x1, #4040]
  43e138:	str	x3, [x0]
  43e13c:	bl	43f0a8 <_obstack_memory_used@@Base+0x2050>
  43e140:	cmn	x1, #0x1
  43e144:	b.ne	43e14c <_obstack_memory_used@@Base+0x10f4>  // b.any
  43e148:	bl	43ee48 <_obstack_memory_used@@Base+0x1df0>
  43e14c:	bl	44bba8 <_obstack_memory_used@@Base+0xeb50>
  43e150:	stp	x29, x30, [sp, #-48]!
  43e154:	mov	x29, sp
  43e158:	stp	x19, x20, [sp, #16]
  43e15c:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e160:	mov	x19, x0
  43e164:	ldr	x0, [x20, #3880]
  43e168:	str	x21, [sp, #32]
  43e16c:	adrp	x21, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43e170:	cbz	x0, 43e180 <_obstack_memory_used@@Base+0x1128>
  43e174:	add	x0, x21, #0xac8
  43e178:	bl	402c50 <pthread_mutex_lock@plt>
  43e17c:	cbnz	w0, 43e21c <_obstack_memory_used@@Base+0x11c4>
  43e180:	add	x3, x21, #0xac8
  43e184:	adds	x0, x19, #0x10
  43e188:	mov	x19, #0x10                  	// #16
  43e18c:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  43e190:	add	x0, x0, #0xf
  43e194:	ldr	x19, [x3, #48]
  43e198:	and	x0, x0, #0xfffffffffffffff0
  43e19c:	cbz	x19, 43e1e8 <_obstack_memory_used@@Base+0x1190>
  43e1a0:	add	x3, x3, #0x30
  43e1a4:	b	43e1b0 <_obstack_memory_used@@Base+0x1158>
  43e1a8:	add	x3, x2, #0x8
  43e1ac:	cbz	x19, 43e1e8 <_obstack_memory_used@@Base+0x1190>
  43e1b0:	mov	x2, x19
  43e1b4:	ldp	x1, x19, [x19]
  43e1b8:	cmp	x0, x1
  43e1bc:	b.hi	43e1a8 <_obstack_memory_used@@Base+0x1150>  // b.pmore
  43e1c0:	sub	x1, x1, x0
  43e1c4:	cmp	x1, #0xf
  43e1c8:	b.ls	43e210 <_obstack_memory_used@@Base+0x11b8>  // b.plast
  43e1cc:	add	x4, x2, x0
  43e1d0:	str	x19, [x4, #8]
  43e1d4:	str	x1, [x2, x0]
  43e1d8:	ldr	x2, [x3]
  43e1dc:	add	x19, x2, #0x10
  43e1e0:	str	x0, [x2]
  43e1e4:	str	x4, [x3]
  43e1e8:	ldr	x20, [x20, #3880]
  43e1ec:	cbz	x20, 43e1fc <_obstack_memory_used@@Base+0x11a4>
  43e1f0:	add	x0, x21, #0xac8
  43e1f4:	bl	402c80 <pthread_mutex_unlock@plt>
  43e1f8:	cbnz	w0, 43e220 <_obstack_memory_used@@Base+0x11c8>
  43e1fc:	mov	x0, x19
  43e200:	ldp	x19, x20, [sp, #16]
  43e204:	ldr	x21, [sp, #32]
  43e208:	ldp	x29, x30, [sp], #48
  43e20c:	ret
  43e210:	str	x19, [x3]
  43e214:	add	x19, x2, #0x10
  43e218:	b	43e1e8 <_obstack_memory_used@@Base+0x1190>
  43e21c:	bl	402d8c <nftw@plt+0x9c>
  43e220:	mov	x0, #0x8                   	// #8
  43e224:	bl	43e290 <_obstack_memory_used@@Base+0x1238>
  43e228:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e22c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e230:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e234:	ldr	x3, [x3, #3984]
  43e238:	ldr	x2, [x2, #4064]
  43e23c:	add	x3, x3, #0x10
  43e240:	ldr	x1, [x1, #4040]
  43e244:	str	x3, [x0]
  43e248:	bl	43f0a8 <_obstack_memory_used@@Base+0x2050>
  43e24c:	cmn	x1, #0x1
  43e250:	b.ne	43e258 <_obstack_memory_used@@Base+0x1200>  // b.any
  43e254:	bl	43ee48 <_obstack_memory_used@@Base+0x1df0>
  43e258:	bl	44bba8 <_obstack_memory_used@@Base+0xeb50>
  43e25c:	nop
  43e260:	stp	x29, x30, [sp, #-32]!
  43e264:	mov	x29, sp
  43e268:	str	x19, [sp, #16]
  43e26c:	adrp	x19, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43e270:	add	x19, x19, #0xac8
  43e274:	ldr	x0, [x19, #56]
  43e278:	cbz	x0, 43e284 <_obstack_memory_used@@Base+0x122c>
  43e27c:	bl	402a80 <free@plt>
  43e280:	str	xzr, [x19, #56]
  43e284:	ldr	x19, [sp, #16]
  43e288:	ldp	x29, x30, [sp], #32
  43e28c:	ret
  43e290:	stp	x29, x30, [sp, #-32]!
  43e294:	mov	x29, sp
  43e298:	str	x19, [sp, #16]
  43e29c:	add	x19, x0, #0x80
  43e2a0:	mov	x0, x19
  43e2a4:	bl	4027c0 <malloc@plt>
  43e2a8:	mov	x1, x0
  43e2ac:	cbz	x0, 43e2e0 <_obstack_memory_used@@Base+0x1288>
  43e2b0:	stp	xzr, xzr, [x1]
  43e2b4:	add	x0, x1, #0x80
  43e2b8:	stp	xzr, xzr, [x1, #16]
  43e2bc:	stp	xzr, xzr, [x1, #32]
  43e2c0:	stp	xzr, xzr, [x1, #48]
  43e2c4:	stp	xzr, xzr, [x1, #64]
  43e2c8:	stp	xzr, xzr, [x1, #80]
  43e2cc:	stp	xzr, xzr, [x1, #96]
  43e2d0:	stp	xzr, xzr, [x1, #112]
  43e2d4:	ldr	x19, [sp, #16]
  43e2d8:	ldp	x29, x30, [sp], #32
  43e2dc:	ret
  43e2e0:	mov	x0, x19
  43e2e4:	bl	43e150 <_obstack_memory_used@@Base+0x10f8>
  43e2e8:	mov	x1, x0
  43e2ec:	cbnz	x0, 43e2b0 <_obstack_memory_used@@Base+0x1258>
  43e2f0:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43e2f4:	nop
  43e2f8:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43e2fc:	add	x1, x1, #0xac8
  43e300:	sub	x0, x0, #0x80
  43e304:	ldr	x2, [x1, #56]
  43e308:	cmp	x0, x2
  43e30c:	b.ls	43e334 <_obstack_memory_used@@Base+0x12dc>  // b.plast
  43e310:	ldr	x1, [x1, #64]
  43e314:	add	x2, x2, x1
  43e318:	cmp	x0, x2
  43e31c:	b.cs	43e334 <_obstack_memory_used@@Base+0x12dc>  // b.hs, b.nlast
  43e320:	stp	x29, x30, [sp, #-16]!
  43e324:	mov	x29, sp
  43e328:	bl	43dfe8 <_obstack_memory_used@@Base+0xf90>
  43e32c:	ldp	x29, x30, [sp], #16
  43e330:	ret
  43e334:	b	402a80 <free@plt>
  43e338:	stp	x29, x30, [sp, #-16]!
  43e33c:	mov	x0, #0x70                  	// #112
  43e340:	mov	x29, sp
  43e344:	bl	4027c0 <malloc@plt>
  43e348:	cbz	x0, 43e370 <_obstack_memory_used@@Base+0x1318>
  43e34c:	stp	xzr, xzr, [x0]
  43e350:	stp	xzr, xzr, [x0, #16]
  43e354:	stp	xzr, xzr, [x0, #32]
  43e358:	stp	xzr, xzr, [x0, #48]
  43e35c:	stp	xzr, xzr, [x0, #64]
  43e360:	stp	xzr, xzr, [x0, #80]
  43e364:	stp	xzr, xzr, [x0, #96]
  43e368:	ldp	x29, x30, [sp], #16
  43e36c:	ret
  43e370:	mov	x0, #0x70                  	// #112
  43e374:	bl	43e150 <_obstack_memory_used@@Base+0x10f8>
  43e378:	cbnz	x0, 43e34c <_obstack_memory_used@@Base+0x12f4>
  43e37c:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43e380:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43e384:	add	x2, x2, #0xac8
  43e388:	mov	x1, x0
  43e38c:	ldr	x3, [x2, #56]
  43e390:	cmp	x0, x3
  43e394:	b.ls	43e3bc <_obstack_memory_used@@Base+0x1364>  // b.plast
  43e398:	ldr	x2, [x2, #64]
  43e39c:	add	x3, x3, x2
  43e3a0:	cmp	x0, x3
  43e3a4:	b.cs	43e3bc <_obstack_memory_used@@Base+0x1364>  // b.hs, b.nlast
  43e3a8:	stp	x29, x30, [sp, #-16]!
  43e3ac:	mov	x29, sp
  43e3b0:	bl	43dfe8 <_obstack_memory_used@@Base+0xf90>
  43e3b4:	ldp	x29, x30, [sp], #16
  43e3b8:	ret
  43e3bc:	mov	x0, x1
  43e3c0:	b	402a80 <free@plt>
  43e3c4:	nop
  43e3c8:	ret
  43e3cc:	nop
  43e3d0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43e3d4:	ldr	x1, [x1, #3944]
  43e3d8:	add	x1, x1, #0x10
  43e3dc:	str	x1, [x0]
  43e3e0:	b	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43e3e4:	nop
  43e3e8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43e3ec:	add	x0, x0, #0x488
  43e3f0:	ret
  43e3f4:	nop
  43e3f8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43e3fc:	add	x0, x0, #0x498
  43e400:	ret
  43e404:	nop
  43e408:	stp	x29, x30, [sp, #-32]!
  43e40c:	mov	x29, sp
  43e410:	str	x19, [sp, #16]
  43e414:	mov	x19, x0
  43e418:	bl	43e3c8 <_obstack_memory_used@@Base+0x1370>
  43e41c:	mov	x0, x19
  43e420:	mov	x1, #0x8                   	// #8
  43e424:	ldr	x19, [sp, #16]
  43e428:	ldp	x29, x30, [sp], #32
  43e42c:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43e430:	stp	x29, x30, [sp, #-32]!
  43e434:	mov	x29, sp
  43e438:	str	x19, [sp, #16]
  43e43c:	mov	x19, x0
  43e440:	bl	43e3d0 <_obstack_memory_used@@Base+0x1378>
  43e444:	mov	x0, x19
  43e448:	mov	x1, #0x8                   	// #8
  43e44c:	ldr	x19, [sp, #16]
  43e450:	ldp	x29, x30, [sp], #32
  43e454:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43e458:	ret
  43e45c:	nop
  43e460:	stp	x29, x30, [sp, #-32]!
  43e464:	mov	x29, sp
  43e468:	str	x19, [sp, #16]
  43e46c:	mov	x19, x0
  43e470:	bl	43e458 <_obstack_memory_used@@Base+0x1400>
  43e474:	mov	x0, x19
  43e478:	mov	x1, #0x8                   	// #8
  43e47c:	ldr	x19, [sp, #16]
  43e480:	ldp	x29, x30, [sp], #32
  43e484:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43e488:	ret
  43e48c:	nop
  43e490:	stp	x29, x30, [sp, #-32]!
  43e494:	mov	x29, sp
  43e498:	str	x19, [sp, #16]
  43e49c:	mov	x19, x0
  43e4a0:	bl	43e488 <_obstack_memory_used@@Base+0x1430>
  43e4a4:	mov	x0, x19
  43e4a8:	mov	x1, #0x8                   	// #8
  43e4ac:	ldr	x19, [sp, #16]
  43e4b0:	ldp	x29, x30, [sp], #32
  43e4b4:	b	43d660 <_obstack_memory_used@@Base+0x608>
  43e4b8:	ret
  43e4bc:	nop
  43e4c0:	b	43e3e8 <_obstack_memory_used@@Base+0x1390>
  43e4c4:	nop
  43e4c8:	ret
  43e4cc:	nop
  43e4d0:	b	43e3f8 <_obstack_memory_used@@Base+0x13a0>
  43e4d4:	nop
  43e4d8:	stp	x29, x30, [sp, #-64]!
  43e4dc:	mov	x29, sp
  43e4e0:	stp	x19, x20, [sp, #16]
  43e4e4:	mov	x19, x1
  43e4e8:	mov	x20, x0
  43e4ec:	mov	x0, x1
  43e4f0:	ldr	x1, [x1]
  43e4f4:	ldr	x1, [x1, #16]
  43e4f8:	str	x21, [sp, #32]
  43e4fc:	mov	x21, x2
  43e500:	ldr	x2, [x2]
  43e504:	str	x2, [sp, #56]
  43e508:	blr	x1
  43e50c:	tst	w0, #0xff
  43e510:	b.eq	43e520 <_obstack_memory_used@@Base+0x14c8>  // b.none
  43e514:	ldr	x0, [sp, #56]
  43e518:	ldr	x0, [x0]
  43e51c:	str	x0, [sp, #56]
  43e520:	ldr	x4, [x20]
  43e524:	mov	x1, x19
  43e528:	mov	x0, x20
  43e52c:	add	x2, sp, #0x38
  43e530:	mov	w3, #0x1                   	// #1
  43e534:	ldr	x4, [x4, #32]
  43e538:	blr	x4
  43e53c:	tst	w0, #0xff
  43e540:	b.eq	43e54c <_obstack_memory_used@@Base+0x14f4>  // b.none
  43e544:	ldr	x1, [sp, #56]
  43e548:	str	x1, [x21]
  43e54c:	ldp	x19, x20, [sp, #16]
  43e550:	ldr	x21, [sp, #32]
  43e554:	ldp	x29, x30, [sp], #64
  43e558:	ret
  43e55c:	nop
  43e560:	and	w5, w0, #0xff
  43e564:	cmp	w5, #0x50
  43e568:	b.eq	43e680 <_obstack_memory_used@@Base+0x1628>  // b.none
  43e56c:	and	w4, w5, #0xf
  43e570:	cmp	w4, #0x4
  43e574:	b.eq	43e590 <_obstack_memory_used@@Base+0x1538>  // b.none
  43e578:	b.ls	43e5a4 <_obstack_memory_used@@Base+0x154c>  // b.plast
  43e57c:	cmp	w4, #0xb
  43e580:	b.eq	43e6a4 <_obstack_memory_used@@Base+0x164c>  // b.none
  43e584:	b.ls	43e600 <_obstack_memory_used@@Base+0x15a8>  // b.plast
  43e588:	cmp	w4, #0xc
  43e58c:	b.ne	43e6b4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43e590:	mov	x0, x2
  43e594:	ldr	x4, [x0], #8
  43e598:	cbnz	x4, 43e660 <_obstack_memory_used@@Base+0x1608>
  43e59c:	str	x4, [x3]
  43e5a0:	ret
  43e5a4:	cmp	w4, #0x2
  43e5a8:	b.eq	43e694 <_obstack_memory_used@@Base+0x163c>  // b.none
  43e5ac:	b.ls	43e5c8 <_obstack_memory_used@@Base+0x1570>  // b.plast
  43e5b0:	cmp	w4, #0x3
  43e5b4:	b.ne	43e6b4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43e5b8:	mov	x0, x2
  43e5bc:	ldr	w4, [x0], #4
  43e5c0:	cbz	x4, 43e59c <_obstack_memory_used@@Base+0x1544>
  43e5c4:	b	43e660 <_obstack_memory_used@@Base+0x1608>
  43e5c8:	cbz	w4, 43e590 <_obstack_memory_used@@Base+0x1538>
  43e5cc:	cmp	w4, #0x1
  43e5d0:	b.ne	43e6b4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43e5d4:	mov	x0, x2
  43e5d8:	mov	x4, #0x0                   	// #0
  43e5dc:	mov	w7, #0x0                   	// #0
  43e5e0:	ldrb	w8, [x0], #1
  43e5e4:	and	x6, x8, #0x7f
  43e5e8:	lsl	x6, x6, x7
  43e5ec:	add	w7, w7, #0x7
  43e5f0:	orr	x4, x4, x6
  43e5f4:	tbnz	w8, #7, 43e5e0 <_obstack_memory_used@@Base+0x1588>
  43e5f8:	cbz	x4, 43e59c <_obstack_memory_used@@Base+0x1544>
  43e5fc:	b	43e660 <_obstack_memory_used@@Base+0x1608>
  43e600:	cmp	w4, #0x9
  43e604:	b.eq	43e620 <_obstack_memory_used@@Base+0x15c8>  // b.none
  43e608:	cmp	w4, #0xa
  43e60c:	b.ne	43e6b4 <_obstack_memory_used@@Base+0x165c>  // b.any
  43e610:	mov	x0, x2
  43e614:	ldrsh	x4, [x0], #2
  43e618:	cbz	x4, 43e59c <_obstack_memory_used@@Base+0x1544>
  43e61c:	b	43e660 <_obstack_memory_used@@Base+0x1608>
  43e620:	mov	x0, x2
  43e624:	mov	x4, #0x0                   	// #0
  43e628:	mov	w7, #0x0                   	// #0
  43e62c:	ldrb	w8, [x0], #1
  43e630:	and	x6, x8, #0x7f
  43e634:	lsl	x6, x6, x7
  43e638:	add	w7, w7, #0x7
  43e63c:	orr	x4, x4, x6
  43e640:	tbnz	w8, #7, 43e62c <_obstack_memory_used@@Base+0x15d4>
  43e644:	cmp	w7, #0x3f
  43e648:	b.hi	43e598 <_obstack_memory_used@@Base+0x1540>  // b.pmore
  43e64c:	tbz	w8, #6, 43e598 <_obstack_memory_used@@Base+0x1540>
  43e650:	mov	x6, #0xffffffffffffffff    	// #-1
  43e654:	lsl	x7, x6, x7
  43e658:	orr	x4, x4, x7
  43e65c:	nop
  43e660:	and	w6, w5, #0x70
  43e664:	cmp	w6, #0x10
  43e668:	csel	x1, x2, x1, eq  // eq = none
  43e66c:	add	x4, x4, x1
  43e670:	tbz	w5, #7, 43e59c <_obstack_memory_used@@Base+0x1544>
  43e674:	ldr	x4, [x4]
  43e678:	str	x4, [x3]
  43e67c:	ret
  43e680:	add	x0, x2, #0x7
  43e684:	and	x0, x0, #0xfffffffffffffff8
  43e688:	ldr	x4, [x0], #8
  43e68c:	str	x4, [x3]
  43e690:	ret
  43e694:	mov	x0, x2
  43e698:	ldrh	w4, [x0], #2
  43e69c:	cbz	x4, 43e59c <_obstack_memory_used@@Base+0x1544>
  43e6a0:	b	43e660 <_obstack_memory_used@@Base+0x1608>
  43e6a4:	mov	x0, x2
  43e6a8:	ldrsw	x4, [x0], #4
  43e6ac:	cbz	x4, 43e59c <_obstack_memory_used@@Base+0x1544>
  43e6b0:	b	43e660 <_obstack_memory_used@@Base+0x1608>
  43e6b4:	stp	x29, x30, [sp, #-16]!
  43e6b8:	mov	x29, sp
  43e6bc:	bl	402970 <abort@plt>
  43e6c0:	stp	x29, x30, [sp, #-32]!
  43e6c4:	mov	x3, x0
  43e6c8:	mov	x29, sp
  43e6cc:	ldrb	w0, [x0, #40]
  43e6d0:	cmp	w0, #0xff
  43e6d4:	b.eq	43e760 <_obstack_memory_used@@Base+0x1708>  // b.none
  43e6d8:	and	w4, w0, #0x7
  43e6dc:	cmp	w4, #0x2
  43e6e0:	b.eq	43e740 <_obstack_memory_used@@Base+0x16e8>  // b.none
  43e6e4:	b.ls	43e710 <_obstack_memory_used@@Base+0x16b8>  // b.plast
  43e6e8:	cmp	w4, #0x3
  43e6ec:	neg	x2, x1, lsl #2
  43e6f0:	b.ne	43e734 <_obstack_memory_used@@Base+0x16dc>  // b.any
  43e6f4:	ldp	x1, x4, [x3, #16]
  43e6f8:	add	x3, sp, #0x18
  43e6fc:	add	x2, x4, x2
  43e700:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43e704:	ldr	x0, [sp, #24]
  43e708:	ldp	x29, x30, [sp], #32
  43e70c:	ret
  43e710:	cbnz	w4, 43e73c <_obstack_memory_used@@Base+0x16e4>
  43e714:	neg	x2, x1, lsl #3
  43e718:	ldp	x1, x4, [x3, #16]
  43e71c:	add	x3, sp, #0x18
  43e720:	add	x2, x4, x2
  43e724:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43e728:	ldr	x0, [sp, #24]
  43e72c:	ldp	x29, x30, [sp], #32
  43e730:	ret
  43e734:	cmp	w4, #0x4
  43e738:	b.eq	43e714 <_obstack_memory_used@@Base+0x16bc>  // b.none
  43e73c:	bl	402970 <abort@plt>
  43e740:	neg	x2, x1, lsl #1
  43e744:	ldp	x1, x4, [x3, #16]
  43e748:	add	x3, sp, #0x18
  43e74c:	add	x2, x4, x2
  43e750:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43e754:	ldr	x0, [sp, #24]
  43e758:	ldp	x29, x30, [sp], #32
  43e75c:	ret
  43e760:	ldp	x1, x4, [x3, #16]
  43e764:	mov	x2, #0x0                   	// #0
  43e768:	add	x3, sp, #0x18
  43e76c:	add	x2, x4, x2
  43e770:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43e774:	ldr	x0, [sp, #24]
  43e778:	ldp	x29, x30, [sp], #32
  43e77c:	ret
  43e780:	stp	x29, x30, [sp, #-64]!
  43e784:	mov	x29, sp
  43e788:	stp	x21, x22, [sp, #32]
  43e78c:	mov	x22, x0
  43e790:	mvn	x0, x3
  43e794:	stp	x19, x20, [sp, #16]
  43e798:	add	x21, sp, #0x38
  43e79c:	mov	x20, x1
  43e7a0:	ldr	x19, [x22, #24]
  43e7a4:	str	x2, [sp, #56]
  43e7a8:	add	x19, x19, x0
  43e7ac:	nop
  43e7b0:	mov	x1, #0x0                   	// #0
  43e7b4:	mov	w3, #0x0                   	// #0
  43e7b8:	ldrb	w4, [x19], #1
  43e7bc:	and	x2, x4, #0x7f
  43e7c0:	lsl	x2, x2, x3
  43e7c4:	add	w3, w3, #0x7
  43e7c8:	orr	x1, x1, x2
  43e7cc:	tbnz	w4, #7, 43e7b8 <_obstack_memory_used@@Base+0x1760>
  43e7d0:	cbz	x1, 43e800 <_obstack_memory_used@@Base+0x17a8>
  43e7d4:	mov	x0, x22
  43e7d8:	bl	43e6c0 <_obstack_memory_used@@Base+0x1668>
  43e7dc:	mov	x2, x21
  43e7e0:	mov	x1, x20
  43e7e4:	bl	43e4d8 <_obstack_memory_used@@Base+0x1480>
  43e7e8:	ands	w0, w0, #0xff
  43e7ec:	b.eq	43e7b0 <_obstack_memory_used@@Base+0x1758>  // b.none
  43e7f0:	ldp	x19, x20, [sp, #16]
  43e7f4:	ldp	x21, x22, [sp, #32]
  43e7f8:	ldp	x29, x30, [sp], #64
  43e7fc:	ret
  43e800:	mov	w0, #0x0                   	// #0
  43e804:	ldp	x19, x20, [sp, #16]
  43e808:	ldp	x21, x22, [sp, #32]
  43e80c:	ldp	x29, x30, [sp], #64
  43e810:	ret
  43e814:	nop
  43e818:	and	w3, w0, #0xff
  43e81c:	cmp	w3, #0xff
  43e820:	b.eq	43e870 <_obstack_memory_used@@Base+0x1818>  // b.none
  43e824:	and	w2, w3, #0x70
  43e828:	mov	x0, x1
  43e82c:	cmp	w2, #0x30
  43e830:	b.eq	43e878 <_obstack_memory_used@@Base+0x1820>  // b.none
  43e834:	b.hi	43e844 <_obstack_memory_used@@Base+0x17ec>  // b.pmore
  43e838:	cmp	w2, #0x20
  43e83c:	b.ne	43e850 <_obstack_memory_used@@Base+0x17f8>  // b.any
  43e840:	b	44b7f8 <_obstack_memory_used@@Base+0xe7a0>
  43e844:	cmp	w2, #0x40
  43e848:	b.ne	43e868 <_obstack_memory_used@@Base+0x1810>  // b.any
  43e84c:	b	44b7c0 <_obstack_memory_used@@Base+0xe768>
  43e850:	b.hi	43e85c <_obstack_memory_used@@Base+0x1804>  // b.pmore
  43e854:	tst	w3, #0x60
  43e858:	b.eq	43e870 <_obstack_memory_used@@Base+0x1818>  // b.none
  43e85c:	stp	x29, x30, [sp, #-16]!
  43e860:	mov	x29, sp
  43e864:	bl	402970 <abort@plt>
  43e868:	cmp	w2, #0x50
  43e86c:	b.ne	43e85c <_obstack_memory_used@@Base+0x1804>  // b.any
  43e870:	mov	x0, #0x0                   	// #0
  43e874:	ret
  43e878:	b	44b7f0 <_obstack_memory_used@@Base+0xe798>
  43e87c:	nop
  43e880:	stp	x29, x30, [sp, #-48]!
  43e884:	mov	x29, sp
  43e888:	stp	x19, x20, [sp, #16]
  43e88c:	mov	x19, x1
  43e890:	mov	x20, x2
  43e894:	stp	x21, x22, [sp, #32]
  43e898:	mov	x1, #0x0                   	// #0
  43e89c:	mov	x21, x0
  43e8a0:	cbz	x0, 43e8ac <_obstack_memory_used@@Base+0x1854>
  43e8a4:	bl	44b7c0 <_obstack_memory_used@@Base+0xe768>
  43e8a8:	mov	x1, x0
  43e8ac:	str	x1, [x20]
  43e8b0:	ldrb	w22, [x19], #1
  43e8b4:	cmp	w22, #0xff
  43e8b8:	b.ne	43e940 <_obstack_memory_used@@Base+0x18e8>  // b.any
  43e8bc:	mov	x0, x19
  43e8c0:	str	x1, [x20, #8]
  43e8c4:	ldrb	w1, [x0], #1
  43e8c8:	strb	w1, [x20, #40]
  43e8cc:	cmp	w1, #0xff
  43e8d0:	b.eq	43e978 <_obstack_memory_used@@Base+0x1920>  // b.none
  43e8d4:	mov	x5, #0x0                   	// #0
  43e8d8:	mov	w3, #0x0                   	// #0
  43e8dc:	nop
  43e8e0:	ldrb	w4, [x0], #1
  43e8e4:	and	x1, x4, #0x7f
  43e8e8:	lsl	x1, x1, x3
  43e8ec:	add	w3, w3, #0x7
  43e8f0:	orr	x5, x5, x1
  43e8f4:	tbnz	w4, #7, 43e8e0 <_obstack_memory_used@@Base+0x1888>
  43e8f8:	add	x5, x0, x5
  43e8fc:	str	x5, [x20, #24]
  43e900:	ldrb	w1, [x0], #1
  43e904:	mov	x5, #0x0                   	// #0
  43e908:	mov	w3, #0x0                   	// #0
  43e90c:	strb	w1, [x20, #41]
  43e910:	ldrb	w4, [x0], #1
  43e914:	and	x1, x4, #0x7f
  43e918:	lsl	x1, x1, x3
  43e91c:	add	w3, w3, #0x7
  43e920:	orr	x5, x5, x1
  43e924:	tbnz	w4, #7, 43e910 <_obstack_memory_used@@Base+0x18b8>
  43e928:	add	x5, x0, x5
  43e92c:	ldp	x21, x22, [sp, #32]
  43e930:	str	x5, [x20, #32]
  43e934:	ldp	x19, x20, [sp, #16]
  43e938:	ldp	x29, x30, [sp], #48
  43e93c:	ret
  43e940:	mov	x1, x21
  43e944:	mov	w0, w22
  43e948:	bl	43e818 <_obstack_memory_used@@Base+0x17c0>
  43e94c:	mov	x1, x0
  43e950:	mov	x2, x19
  43e954:	mov	w0, w22
  43e958:	add	x3, x20, #0x8
  43e95c:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43e960:	mov	x19, x0
  43e964:	mov	x0, x19
  43e968:	ldrb	w1, [x0], #1
  43e96c:	strb	w1, [x20, #40]
  43e970:	cmp	w1, #0xff
  43e974:	b.ne	43e8d4 <_obstack_memory_used@@Base+0x187c>  // b.any
  43e978:	str	xzr, [x20, #24]
  43e97c:	b	43e900 <_obstack_memory_used@@Base+0x18a8>
  43e980:	stp	x29, x30, [sp, #-240]!
  43e984:	cmp	w0, #0x1
  43e988:	mov	x29, sp
  43e98c:	str	wzr, [sp, #156]
  43e990:	str	xzr, [sp, #160]
  43e994:	b.ne	43e9f8 <_obstack_memory_used@@Base+0x19a0>  // b.any
  43e998:	stp	x19, x20, [sp, #16]
  43e99c:	mov	x20, #0xd500                	// #54528
  43e9a0:	movk	x20, #0xbcd4, lsl #16
  43e9a4:	movk	x20, #0xaabc, lsl #32
  43e9a8:	stp	x21, x22, [sp, #32]
  43e9ac:	movk	x20, #0xb8b1, lsl #48
  43e9b0:	add	x0, x2, x20
  43e9b4:	stp	x23, x24, [sp, #48]
  43e9b8:	cmp	x0, #0x1
  43e9bc:	stp	x25, x26, [sp, #64]
  43e9c0:	mov	w22, w1
  43e9c4:	mov	x21, x3
  43e9c8:	stp	x27, x28, [sp, #80]
  43e9cc:	mov	x19, x4
  43e9d0:	str	x0, [sp, #104]
  43e9d4:	cset	w0, ls  // ls = plast
  43e9d8:	str	w0, [sp, #128]
  43e9dc:	cmp	w1, #0x6
  43e9e0:	csel	w27, w0, wzr, eq  // eq = none
  43e9e4:	cbz	w27, 43ea04 <_obstack_memory_used@@Base+0x19ac>
  43e9e8:	ldur	x26, [x3, #-16]
  43e9ec:	cbnz	x26, 43eb78 <_obstack_memory_used@@Base+0x1b20>
  43e9f0:	mov	x0, x21
  43e9f4:	bl	43f1e8 <_obstack_memory_used@@Base+0x2190>
  43e9f8:	mov	w0, #0x3                   	// #3
  43e9fc:	ldp	x29, x30, [sp], #240
  43ea00:	ret
  43ea04:	mov	x0, x4
  43ea08:	bl	44b7b8 <_obstack_memory_used@@Base+0xe760>
  43ea0c:	str	x0, [sp, #112]
  43ea10:	cbz	x0, 43ebdc <_obstack_memory_used@@Base+0x1b84>
  43ea14:	ldr	x1, [sp, #112]
  43ea18:	add	x0, sp, #0xc0
  43ea1c:	mov	x2, x0
  43ea20:	str	x0, [sp, #120]
  43ea24:	mov	x0, x19
  43ea28:	bl	43e880 <_obstack_memory_used@@Base+0x1828>
  43ea2c:	mov	x20, x0
  43ea30:	ldrb	w0, [sp, #232]
  43ea34:	mov	x1, x19
  43ea38:	bl	43e818 <_obstack_memory_used@@Base+0x17c0>
  43ea3c:	mov	x3, x0
  43ea40:	add	x1, sp, #0x9c
  43ea44:	mov	x0, x19
  43ea48:	str	x3, [sp, #208]
  43ea4c:	bl	44b798 <_obstack_memory_used@@Base+0xe740>
  43ea50:	ldr	w3, [sp, #156]
  43ea54:	ldr	x1, [sp, #224]
  43ea58:	cmp	w3, #0x0
  43ea5c:	cset	x3, eq  // eq = none
  43ea60:	sub	x23, x0, x3
  43ea64:	cmp	x20, x1
  43ea68:	b.cs	43eb40 <_obstack_memory_used@@Base+0x1ae8>  // b.hs, b.nlast
  43ea6c:	add	x26, sp, #0xa8
  43ea70:	add	x25, sp, #0xb0
  43ea74:	add	x24, sp, #0xb8
  43ea78:	ldrb	w28, [sp, #233]
  43ea7c:	mov	x1, #0x0                   	// #0
  43ea80:	mov	w0, w28
  43ea84:	bl	43e818 <_obstack_memory_used@@Base+0x17c0>
  43ea88:	mov	x2, x20
  43ea8c:	mov	x3, x26
  43ea90:	mov	x1, x0
  43ea94:	mov	w0, w28
  43ea98:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43ea9c:	ldrb	w20, [sp, #233]
  43eaa0:	mov	x28, x0
  43eaa4:	mov	x1, #0x0                   	// #0
  43eaa8:	mov	w0, w20
  43eaac:	bl	43e818 <_obstack_memory_used@@Base+0x17c0>
  43eab0:	mov	x2, x28
  43eab4:	mov	x3, x25
  43eab8:	mov	x1, x0
  43eabc:	mov	w0, w20
  43eac0:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43eac4:	ldrb	w20, [sp, #233]
  43eac8:	mov	x28, x0
  43eacc:	mov	x1, #0x0                   	// #0
  43ead0:	mov	w0, w20
  43ead4:	bl	43e818 <_obstack_memory_used@@Base+0x17c0>
  43ead8:	mov	x3, x24
  43eadc:	mov	x1, x0
  43eae0:	mov	x2, x28
  43eae4:	mov	w0, w20
  43eae8:	bl	43e560 <_obstack_memory_used@@Base+0x1508>
  43eaec:	mov	x20, x0
  43eaf0:	mov	w3, #0x0                   	// #0
  43eaf4:	mov	x0, #0x0                   	// #0
  43eaf8:	ldrb	w4, [x20], #1
  43eafc:	and	x1, x4, #0x7f
  43eb00:	lsl	x1, x1, x3
  43eb04:	add	w3, w3, #0x7
  43eb08:	orr	x0, x0, x1
  43eb0c:	tbnz	w4, #7, 43eaf8 <_obstack_memory_used@@Base+0x1aa0>
  43eb10:	ldr	x3, [sp, #168]
  43eb14:	ldr	x1, [sp, #192]
  43eb18:	add	x1, x1, x3
  43eb1c:	cmp	x1, x23
  43eb20:	b.hi	43eb40 <_obstack_memory_used@@Base+0x1ae8>  // b.pmore
  43eb24:	ldr	x3, [sp, #176]
  43eb28:	add	x1, x1, x3
  43eb2c:	cmp	x1, x23
  43eb30:	b.hi	43ebbc <_obstack_memory_used@@Base+0x1b64>  // b.pmore
  43eb34:	ldr	x0, [sp, #224]
  43eb38:	cmp	x0, x20
  43eb3c:	b.hi	43ea78 <_obstack_memory_used@@Base+0x1a20>  // b.pmore
  43eb40:	tbz	w22, #0, 43ebfc <_obstack_memory_used@@Base+0x1ba4>
  43eb44:	mov	w24, #0x0                   	// #0
  43eb48:	mov	x26, #0x0                   	// #0
  43eb4c:	mov	x23, #0x0                   	// #0
  43eb50:	ldr	x0, [sp, #104]
  43eb54:	cmp	x0, #0x1
  43eb58:	mov	w0, #0x6                   	// #6
  43eb5c:	b.hi	43ebe0 <_obstack_memory_used@@Base+0x1b88>  // b.pmore
  43eb60:	ldr	x2, [sp, #112]
  43eb64:	stur	w24, [x21, #-36]
  43eb68:	ldr	x1, [sp, #160]
  43eb6c:	stp	x23, x2, [x21, #-32]
  43eb70:	stp	x26, x1, [x21, #-16]
  43eb74:	b	43ebe0 <_obstack_memory_used@@Base+0x1b88>
  43eb78:	ldur	w24, [x3, #-36]
  43eb7c:	ldur	x0, [x3, #-24]
  43eb80:	str	x0, [sp, #112]
  43eb84:	tbnz	w24, #31, 43ec10 <_obstack_memory_used@@Base+0x1bb8>
  43eb88:	mov	x2, x21
  43eb8c:	mov	x0, x19
  43eb90:	mov	w1, #0x0                   	// #0
  43eb94:	bl	44b738 <_obstack_memory_used@@Base+0xe6e0>
  43eb98:	sxtw	x2, w24
  43eb9c:	mov	x0, x19
  43eba0:	mov	w1, #0x1                   	// #1
  43eba4:	bl	44b738 <_obstack_memory_used@@Base+0xe6e0>
  43eba8:	mov	x0, x19
  43ebac:	mov	x1, x26
  43ebb0:	bl	44b7b0 <_obstack_memory_used@@Base+0xe758>
  43ebb4:	mov	w0, #0x7                   	// #7
  43ebb8:	b	43ebe0 <_obstack_memory_used@@Base+0x1b88>
  43ebbc:	ldr	x26, [sp, #184]
  43ebc0:	cbz	x26, 43ebdc <_obstack_memory_used@@Base+0x1b84>
  43ebc4:	ldr	x1, [sp, #200]
  43ebc8:	add	x26, x26, x1
  43ebcc:	cbnz	x0, 43ec48 <_obstack_memory_used@@Base+0x1bf0>
  43ebd0:	cbz	x26, 43ebdc <_obstack_memory_used@@Base+0x1b84>
  43ebd4:	and	w24, w22, #0x1
  43ebd8:	tbz	w22, #0, 43eb88 <_obstack_memory_used@@Base+0x1b30>
  43ebdc:	mov	w0, #0x8                   	// #8
  43ebe0:	ldp	x19, x20, [sp, #16]
  43ebe4:	ldp	x21, x22, [sp, #32]
  43ebe8:	ldp	x23, x24, [sp, #48]
  43ebec:	ldp	x25, x26, [sp, #64]
  43ebf0:	ldp	x27, x28, [sp, #80]
  43ebf4:	ldp	x29, x30, [sp], #240
  43ebf8:	ret
  43ebfc:	tbnz	w22, #3, 43ec0c <_obstack_memory_used@@Base+0x1bb4>
  43ec00:	ldr	x0, [sp, #104]
  43ec04:	cmp	x0, #0x1
  43ec08:	b.ls	43e9f0 <_obstack_memory_used@@Base+0x1998>  // b.plast
  43ec0c:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43ec10:	ldr	x1, [sp, #112]
  43ec14:	add	x2, sp, #0xc0
  43ec18:	mov	x0, x19
  43ec1c:	bl	43e880 <_obstack_memory_used@@Base+0x1828>
  43ec20:	ldrb	w0, [sp, #232]
  43ec24:	mov	x1, x19
  43ec28:	bl	43e818 <_obstack_memory_used@@Base+0x17c0>
  43ec2c:	mov	x2, x0
  43ec30:	ldrb	w0, [sp, #232]
  43ec34:	mov	x1, x19
  43ec38:	str	x2, [sp, #208]
  43ec3c:	bl	43e818 <_obstack_memory_used@@Base+0x17c0>
  43ec40:	stur	x0, [x21, #-16]
  43ec44:	b	43eb88 <_obstack_memory_used@@Base+0x1b30>
  43ec48:	ldr	x4, [sp, #224]
  43ec4c:	sub	x0, x0, #0x1
  43ec50:	add	x23, x4, x0
  43ec54:	cbz	x26, 43ebdc <_obstack_memory_used@@Base+0x1b84>
  43ec58:	cbz	x23, 43ebd4 <_obstack_memory_used@@Base+0x1b7c>
  43ec5c:	and	w0, w22, #0x8
  43ec60:	str	w0, [sp, #132]
  43ec64:	tbnz	w22, #3, 43ee14 <_obstack_memory_used@@Base+0x1dbc>
  43ec68:	ldr	x0, [sp, #104]
  43ec6c:	adrp	x6, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43ec70:	cmp	x0, #0x1
  43ec74:	ldr	x6, [x6, #3976]
  43ec78:	b.ls	43ee20 <_obstack_memory_used@@Base+0x1dc8>  // b.plast
  43ec7c:	add	x28, sp, #0xa0
  43ec80:	mov	x5, #0x1                   	// #1
  43ec84:	nop
  43ec88:	mov	x25, x23
  43ec8c:	mov	x24, #0x0                   	// #0
  43ec90:	mov	w1, #0x0                   	// #0
  43ec94:	nop
  43ec98:	ldrb	w2, [x25], #1
  43ec9c:	and	x0, x2, #0x7f
  43eca0:	lsl	x0, x0, x1
  43eca4:	add	w1, w1, #0x7
  43eca8:	orr	x24, x24, x0
  43ecac:	tbnz	w2, #7, 43ec98 <_obstack_memory_used@@Base+0x1c40>
  43ecb0:	cmp	w1, #0x3f
  43ecb4:	b.hi	43eccc <_obstack_memory_used@@Base+0x1c74>  // b.pmore
  43ecb8:	lsl	x0, x5, x1
  43ecbc:	neg	x0, x0
  43ecc0:	orr	x0, x24, x0
  43ecc4:	tst	x2, #0x40
  43ecc8:	csel	x24, x0, x24, ne  // ne = any
  43eccc:	mov	x8, x25
  43ecd0:	mov	x20, #0x0                   	// #0
  43ecd4:	mov	w1, #0x0                   	// #0
  43ecd8:	ldrb	w2, [x8], #1
  43ecdc:	and	x0, x2, #0x7f
  43ece0:	lsl	x0, x0, x1
  43ece4:	add	w1, w1, #0x7
  43ece8:	orr	x20, x20, x0
  43ecec:	tbnz	w2, #7, 43ecd8 <_obstack_memory_used@@Base+0x1c80>
  43ecf0:	cmp	w1, #0x3f
  43ecf4:	b.hi	43ed0c <_obstack_memory_used@@Base+0x1cb4>  // b.pmore
  43ecf8:	lsl	x0, x5, x1
  43ecfc:	neg	x0, x0
  43ed00:	orr	x0, x20, x0
  43ed04:	tst	x2, #0x40
  43ed08:	csel	x20, x0, x20, ne  // ne = any
  43ed0c:	cmp	x24, #0x0
  43ed10:	cbz	x24, 43edd4 <_obstack_memory_used@@Base+0x1d7c>
  43ed14:	b.gt	43ed78 <_obstack_memory_used@@Base+0x1d20>
  43ed18:	ldr	w0, [sp, #132]
  43ed1c:	cmp	w0, #0x0
  43ed20:	ldr	w0, [sp, #128]
  43ed24:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  43ed28:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  43ed2c:	b.ne	43eddc <_obstack_memory_used@@Base+0x1d84>  // b.any
  43ed30:	ldr	x0, [sp, #216]
  43ed34:	mvn	x8, x24
  43ed38:	mov	x9, #0x0                   	// #0
  43ed3c:	mov	w1, #0x0                   	// #0
  43ed40:	add	x8, x0, x8
  43ed44:	nop
  43ed48:	ldrb	w2, [x8], #1
  43ed4c:	and	x0, x2, #0x7f
  43ed50:	lsl	x0, x0, x1
  43ed54:	add	w1, w1, #0x7
  43ed58:	orr	x9, x9, x0
  43ed5c:	tbnz	w2, #7, 43ed48 <_obstack_memory_used@@Base+0x1cf0>
  43ed60:	cmp	x9, #0x0
  43ed64:	cset	w0, eq  // eq = none
  43ed68:	cbnz	w0, 43edb4 <_obstack_memory_used@@Base+0x1d5c>
  43ed6c:	cbz	x20, 43ee0c <_obstack_memory_used@@Base+0x1db4>
  43ed70:	add	x23, x25, x20
  43ed74:	b	43ec88 <_obstack_memory_used@@Base+0x1c30>
  43ed78:	ldr	x0, [sp, #120]
  43ed7c:	mov	x1, x24
  43ed80:	str	x6, [sp, #136]
  43ed84:	bl	43e6c0 <_obstack_memory_used@@Base+0x1668>
  43ed88:	cbz	x0, 43edb4 <_obstack_memory_used@@Base+0x1d5c>
  43ed8c:	ldr	x6, [sp, #136]
  43ed90:	mov	x5, #0x1                   	// #1
  43ed94:	cbz	x6, 43ed6c <_obstack_memory_used@@Base+0x1d14>
  43ed98:	mov	x1, x6
  43ed9c:	mov	x2, x28
  43eda0:	bl	43e4d8 <_obstack_memory_used@@Base+0x1480>
  43eda4:	tst	w0, #0xff
  43eda8:	mov	x5, #0x1                   	// #1
  43edac:	ldr	x6, [sp, #136]
  43edb0:	b.eq	43ed6c <_obstack_memory_used@@Base+0x1d14>  // b.none
  43edb4:	tbnz	w22, #0, 43eb50 <_obstack_memory_used@@Base+0x1af8>
  43edb8:	ldr	w0, [sp, #132]
  43edbc:	cbnz	w0, 43edcc <_obstack_memory_used@@Base+0x1d74>
  43edc0:	ldr	x0, [sp, #104]
  43edc4:	cmp	x0, #0x1
  43edc8:	b.ls	43eb84 <_obstack_memory_used@@Base+0x1b2c>  // b.plast
  43edcc:	tbz	w24, #31, 43eb88 <_obstack_memory_used@@Base+0x1b30>
  43edd0:	bl	43efd0 <_obstack_memory_used@@Base+0x1f78>
  43edd4:	mov	w27, #0x1                   	// #1
  43edd8:	b	43ed6c <_obstack_memory_used@@Base+0x1d14>
  43eddc:	ldr	x0, [sp, #120]
  43ede0:	mov	x1, x6
  43ede4:	ldr	x2, [sp, #160]
  43ede8:	mov	x3, x24
  43edec:	str	x6, [sp, #136]
  43edf0:	bl	43e780 <_obstack_memory_used@@Base+0x1728>
  43edf4:	and	w0, w0, #0xff
  43edf8:	eor	w0, w0, #0x1
  43edfc:	mov	x5, #0x1                   	// #1
  43ee00:	ldr	x6, [sp, #136]
  43ee04:	cbz	w0, 43ed6c <_obstack_memory_used@@Base+0x1d14>
  43ee08:	b	43edb4 <_obstack_memory_used@@Base+0x1d5c>
  43ee0c:	cbnz	w27, 43ebd4 <_obstack_memory_used@@Base+0x1b7c>
  43ee10:	b	43ebdc <_obstack_memory_used@@Base+0x1b84>
  43ee14:	adrp	x6, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43ee18:	ldr	x6, [x6, #3952]
  43ee1c:	b	43ec7c <_obstack_memory_used@@Base+0x1c24>
  43ee20:	mov	x0, x21
  43ee24:	ldr	x1, [x0], #32
  43ee28:	tbz	w1, #0, 43ee30 <_obstack_memory_used@@Base+0x1dd8>
  43ee2c:	ldur	x0, [x21, #-80]
  43ee30:	ldur	x6, [x0, #-112]
  43ee34:	str	x0, [sp, #160]
  43ee38:	b	43ec7c <_obstack_memory_used@@Base+0x1c24>
  43ee3c:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43ee40:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43ee44:	nop
  43ee48:	stp	x29, x30, [sp, #-112]!
  43ee4c:	mov	x29, sp
  43ee50:	stp	x19, x20, [sp, #16]
  43ee54:	mov	x19, x0
  43ee58:	stp	x21, x22, [sp, #32]
  43ee5c:	str	x23, [sp, #48]
  43ee60:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43ee64:	ldp	x0, x21, [x19, #-64]
  43ee68:	ldur	x1, [x19, #-16]
  43ee6c:	str	x1, [sp, #80]
  43ee70:	ldur	w20, [x19, #-36]
  43ee74:	ldur	x19, [x19, #-24]
  43ee78:	bl	43ef90 <_obstack_memory_used@@Base+0x1f38>
  43ee7c:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43ee80:	bl	43f3a8 <_obstack_memory_used@@Base+0x2350>
  43ee84:	ldr	x22, [x0]
  43ee88:	ldr	x0, [x22, #80]
  43ee8c:	tbz	w0, #0, 43ef10 <_obstack_memory_used@@Base+0x1eb8>
  43ee90:	ldr	x22, [x22]
  43ee94:	add	x23, sp, #0x40
  43ee98:	mov	x1, x19
  43ee9c:	mov	x2, x23
  43eea0:	mov	x0, #0x0                   	// #0
  43eea4:	bl	43e880 <_obstack_memory_used@@Base+0x1828>
  43eea8:	ldur	x1, [x22, #-112]
  43eeac:	sxtw	x20, w20
  43eeb0:	mov	x3, x20
  43eeb4:	mov	x2, x22
  43eeb8:	mov	x0, x23
  43eebc:	bl	43e780 <_obstack_memory_used@@Base+0x1728>
  43eec0:	tst	w0, #0xff
  43eec4:	b.ne	43ef2c <_obstack_memory_used@@Base+0x1ed4>  // b.any
  43eec8:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43eecc:	mov	x3, x20
  43eed0:	mov	x0, x23
  43eed4:	mov	x2, #0x0                   	// #0
  43eed8:	ldr	x1, [x19, #4024]
  43eedc:	bl	43e780 <_obstack_memory_used@@Base+0x1728>
  43eee0:	tst	w0, #0xff
  43eee4:	b.eq	43ef30 <_obstack_memory_used@@Base+0x1ed8>  // b.none
  43eee8:	mov	x0, #0x8                   	// #8
  43eeec:	bl	43e290 <_obstack_memory_used@@Base+0x1238>
  43eef0:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43eef4:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43eef8:	ldr	x1, [x19, #4024]
  43eefc:	ldr	x3, [x3, #3944]
  43ef00:	ldr	x2, [x2, #3936]
  43ef04:	add	x3, x3, #0x10
  43ef08:	str	x3, [x0]
  43ef0c:	bl	43f0a8 <_obstack_memory_used@@Base+0x2050>
  43ef10:	add	x22, x22, #0x70
  43ef14:	b	43ee94 <_obstack_memory_used@@Base+0x1e3c>
  43ef18:	mov	x19, x0
  43ef1c:	bl	43f2d8 <_obstack_memory_used@@Base+0x2280>
  43ef20:	bl	43f2d8 <_obstack_memory_used@@Base+0x2280>
  43ef24:	mov	x0, x19
  43ef28:	bl	44bba8 <_obstack_memory_used@@Base+0xeb50>
  43ef2c:	bl	43f108 <_obstack_memory_used@@Base+0x20b0>
  43ef30:	mov	x0, x21
  43ef34:	bl	43ef38 <_obstack_memory_used@@Base+0x1ee0>
  43ef38:	stp	x29, x30, [sp, #-16]!
  43ef3c:	mov	x29, sp
  43ef40:	blr	x0
  43ef44:	bl	402970 <abort@plt>
  43ef48:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43ef4c:	bl	402970 <abort@plt>
  43ef50:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43ef54:	mov	x2, x0
  43ef58:	ldr	x1, [x1, #3888]
  43ef5c:	ldaxr	x0, [x1]
  43ef60:	stlxr	w3, x2, [x1]
  43ef64:	cbnz	w3, 43ef5c <_obstack_memory_used@@Base+0x1f04>
  43ef68:	ret
  43ef6c:	nop
  43ef70:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43ef74:	ldr	x0, [x0, #3888]
  43ef78:	ldar	x0, [x0]
  43ef7c:	ret
  43ef80:	stp	x29, x30, [sp, #-16]!
  43ef84:	mov	x29, sp
  43ef88:	bl	43ef70 <_obstack_memory_used@@Base+0x1f18>
  43ef8c:	bl	43ef38 <_obstack_memory_used@@Base+0x1ee0>
  43ef90:	stp	x29, x30, [sp, #-16]!
  43ef94:	mov	x29, sp
  43ef98:	blr	x0
  43ef9c:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43efa0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43efa4:	mov	x2, x0
  43efa8:	ldr	x1, [x1, #3968]
  43efac:	ldaxr	x0, [x1]
  43efb0:	stlxr	w3, x2, [x1]
  43efb4:	cbnz	w3, 43efac <_obstack_memory_used@@Base+0x1f54>
  43efb8:	ret
  43efbc:	nop
  43efc0:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43efc4:	ldr	x0, [x0, #3968]
  43efc8:	ldar	x0, [x0]
  43efcc:	ret
  43efd0:	stp	x29, x30, [sp, #-16]!
  43efd4:	mov	x29, sp
  43efd8:	bl	43efc0 <_obstack_memory_used@@Base+0x1f68>
  43efdc:	bl	43ef90 <_obstack_memory_used@@Base+0x1f38>
  43efe0:	stp	x29, x30, [sp, #-32]!
  43efe4:	cmp	w0, #0x1
  43efe8:	mov	x29, sp
  43efec:	b.hi	43f038 <_obstack_memory_used@@Base+0x1fe0>  // b.pmore
  43eff0:	sub	x0, x1, #0x60
  43eff4:	ldaxr	w2, [x0]
  43eff8:	sub	w2, w2, #0x1
  43effc:	stlxr	w3, w2, [x0]
  43f000:	cbnz	w3, 43eff4 <_obstack_memory_used@@Base+0x1f9c>
  43f004:	cbnz	w2, 43f030 <_obstack_memory_used@@Base+0x1fd8>
  43f008:	ldur	x2, [x1, #-72]
  43f00c:	str	x19, [sp, #16]
  43f010:	add	x19, x1, #0x20
  43f014:	cbz	x2, 43f020 <_obstack_memory_used@@Base+0x1fc8>
  43f018:	mov	x0, x19
  43f01c:	blr	x2
  43f020:	mov	x0, x19
  43f024:	ldr	x19, [sp, #16]
  43f028:	ldp	x29, x30, [sp], #32
  43f02c:	b	43e2f8 <_obstack_memory_used@@Base+0x12a0>
  43f030:	ldp	x29, x30, [sp], #32
  43f034:	ret
  43f038:	ldur	x0, [x1, #-56]
  43f03c:	str	x19, [sp, #16]
  43f040:	bl	43ef38 <_obstack_memory_used@@Base+0x1ee0>
  43f044:	nop
  43f048:	stp	x29, x30, [sp, #-32]!
  43f04c:	mov	x29, sp
  43f050:	stp	x19, x20, [sp, #16]
  43f054:	mov	x19, x0
  43f058:	sub	x20, x0, #0x80
  43f05c:	stur	wzr, [x0, #-128]
  43f060:	stp	x1, x2, [x0, #-112]
  43f064:	bl	43efc0 <_obstack_memory_used@@Base+0x1f68>
  43f068:	stur	x0, [x19, #-96]
  43f06c:	bl	43ef70 <_obstack_memory_used@@Base+0x1f18>
  43f070:	mov	x3, x0
  43f074:	mov	x2, #0x2b00                	// #11008
  43f078:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0xfa8>
  43f07c:	movk	x2, #0x432b, lsl #16
  43f080:	add	x1, x1, #0xfe0
  43f084:	movk	x2, #0x5543, lsl #32
  43f088:	stur	x3, [x19, #-88]
  43f08c:	movk	x2, #0x474e, lsl #48
  43f090:	stp	x2, x1, [x19, #-32]
  43f094:	mov	x0, x20
  43f098:	ldp	x19, x20, [sp, #16]
  43f09c:	ldp	x29, x30, [sp], #32
  43f0a0:	ret
  43f0a4:	nop
  43f0a8:	stp	x29, x30, [sp, #-48]!
  43f0ac:	mov	x29, sp
  43f0b0:	stp	x19, x20, [sp, #16]
  43f0b4:	mov	x19, x0
  43f0b8:	mov	x20, x1
  43f0bc:	str	x21, [sp, #32]
  43f0c0:	mov	x21, x2
  43f0c4:	bl	43f3d0 <_obstack_memory_used@@Base+0x2378>
  43f0c8:	mov	x3, x0
  43f0cc:	mov	x2, x21
  43f0d0:	mov	x1, x20
  43f0d4:	mov	x0, x19
  43f0d8:	ldr	w4, [x3, #8]
  43f0dc:	add	w4, w4, #0x1
  43f0e0:	str	w4, [x3, #8]
  43f0e4:	bl	43f048 <_obstack_memory_used@@Base+0x1ff0>
  43f0e8:	mov	x19, x0
  43f0ec:	mov	w0, #0x1                   	// #1
  43f0f0:	str	w0, [x19], #96
  43f0f4:	mov	x0, x19
  43f0f8:	bl	44b918 <_obstack_memory_used@@Base+0xe8c0>
  43f0fc:	mov	x0, x19
  43f100:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43f104:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43f108:	stp	x29, x30, [sp, #-32]!
  43f10c:	mov	x29, sp
  43f110:	str	x19, [sp, #16]
  43f114:	bl	43f3d0 <_obstack_memory_used@@Base+0x2378>
  43f118:	ldr	w2, [x0, #8]
  43f11c:	ldr	x1, [x0]
  43f120:	add	w2, w2, #0x1
  43f124:	str	w2, [x0, #8]
  43f128:	cbz	x1, 43f164 <_obstack_memory_used@@Base+0x210c>
  43f12c:	mov	x3, #0xd500                	// #54528
  43f130:	ldr	x2, [x1, #80]
  43f134:	movk	x3, #0xbcd4, lsl #16
  43f138:	movk	x3, #0xaabc, lsl #32
  43f13c:	movk	x3, #0xb8b1, lsl #48
  43f140:	add	x2, x2, x3
  43f144:	cmp	x2, #0x1
  43f148:	b.ls	43f168 <_obstack_memory_used@@Base+0x2110>  // b.plast
  43f14c:	str	xzr, [x0]
  43f150:	add	x19, x1, #0x50
  43f154:	mov	x0, x19
  43f158:	bl	44bcb8 <_obstack_memory_used@@Base+0xec60>
  43f15c:	mov	x0, x19
  43f160:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43f164:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43f168:	ldr	w0, [x1, #40]
  43f16c:	neg	w0, w0
  43f170:	str	w0, [x1, #40]
  43f174:	b	43f150 <_obstack_memory_used@@Base+0x20f8>
  43f178:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43f17c:	mov	x2, x0
  43f180:	add	x1, x1, #0xb10
  43f184:	ldaxr	x0, [x1]
  43f188:	stlxr	w3, x2, [x1]
  43f18c:	cbnz	w3, 43f184 <_obstack_memory_used@@Base+0x212c>
  43f190:	ret
  43f194:	nop
  43f198:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43f19c:	add	x0, x0, #0xb10
  43f1a0:	ldar	x0, [x0]
  43f1a4:	ret
  43f1a8:	stp	x29, x30, [sp, #-16]!
  43f1ac:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f1b0:	add	x1, x1, #0x528
  43f1b4:	mov	x2, #0x1b                  	// #27
  43f1b8:	mov	x29, sp
  43f1bc:	mov	w0, #0x2                   	// #2
  43f1c0:	bl	402950 <write@plt>
  43f1c4:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43f1c8:	stp	x29, x30, [sp, #-16]!
  43f1cc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f1d0:	add	x1, x1, #0x548
  43f1d4:	mov	x2, #0x1e                  	// #30
  43f1d8:	mov	x29, sp
  43f1dc:	mov	w0, #0x2                   	// #2
  43f1e0:	bl	402950 <write@plt>
  43f1e4:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43f1e8:	stp	x29, x30, [sp, #-32]!
  43f1ec:	mov	x29, sp
  43f1f0:	str	x19, [sp, #16]
  43f1f4:	cbz	x0, 43f220 <_obstack_memory_used@@Base+0x21c8>
  43f1f8:	mov	x19, x0
  43f1fc:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43f200:	mov	x1, #0xd500                	// #54528
  43f204:	movk	x1, #0xbcd4, lsl #16
  43f208:	ldr	x0, [x19]
  43f20c:	movk	x1, #0xaabc, lsl #32
  43f210:	movk	x1, #0xb8b1, lsl #48
  43f214:	add	x0, x0, x1
  43f218:	cmp	x0, #0x1
  43f21c:	b.ls	43f224 <_obstack_memory_used@@Base+0x21cc>  // b.plast
  43f220:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43f224:	ldur	x0, [x19, #-56]
  43f228:	bl	43ef38 <_obstack_memory_used@@Base+0x1ee0>
  43f22c:	nop
  43f230:	ldur	x0, [x0, #-8]
  43f234:	ret
  43f238:	stp	x29, x30, [sp, #-32]!
  43f23c:	mov	x29, sp
  43f240:	str	x19, [sp, #16]
  43f244:	mov	x19, x0
  43f248:	bl	43f3d0 <_obstack_memory_used@@Base+0x2378>
  43f24c:	mov	x1, x0
  43f250:	mov	x2, x19
  43f254:	mov	x4, #0xd500                	// #54528
  43f258:	movk	x4, #0xbcd4, lsl #16
  43f25c:	movk	x4, #0xaabc, lsl #32
  43f260:	ldr	x3, [x2], #-80
  43f264:	movk	x4, #0xb8b1, lsl #48
  43f268:	ldr	x0, [x0]
  43f26c:	add	x3, x3, x4
  43f270:	cmp	x3, #0x1
  43f274:	b.ls	43f28c <_obstack_memory_used@@Base+0x2234>  // b.plast
  43f278:	cbnz	x0, 43f2d0 <_obstack_memory_used@@Base+0x2278>
  43f27c:	str	x2, [x1]
  43f280:	ldr	x19, [sp, #16]
  43f284:	ldp	x29, x30, [sp], #32
  43f288:	ret
  43f28c:	ldur	w3, [x19, #-40]
  43f290:	mov	w5, #0x1                   	// #1
  43f294:	ldr	w4, [x1, #8]
  43f298:	cmp	w3, #0x0
  43f29c:	sub	w5, w5, w3
  43f2a0:	csinc	w3, w5, w3, lt  // lt = tstop
  43f2a4:	stur	w3, [x19, #-40]
  43f2a8:	sub	w3, w4, #0x1
  43f2ac:	str	w3, [x1, #8]
  43f2b0:	cmp	x0, x2
  43f2b4:	b.eq	43f2c0 <_obstack_memory_used@@Base+0x2268>  // b.none
  43f2b8:	stur	x0, [x19, #-48]
  43f2bc:	str	x2, [x1]
  43f2c0:	ldur	x0, [x19, #-8]
  43f2c4:	ldr	x19, [sp, #16]
  43f2c8:	ldp	x29, x30, [sp], #32
  43f2cc:	ret
  43f2d0:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43f2d4:	nop
  43f2d8:	stp	x29, x30, [sp, #-16]!
  43f2dc:	mov	x29, sp
  43f2e0:	bl	43f3a8 <_obstack_memory_used@@Base+0x2350>
  43f2e4:	ldr	x1, [x0]
  43f2e8:	cbz	x1, 43f328 <_obstack_memory_used@@Base+0x22d0>
  43f2ec:	mov	x3, #0xd500                	// #54528
  43f2f0:	ldr	x2, [x1, #80]
  43f2f4:	movk	x3, #0xbcd4, lsl #16
  43f2f8:	movk	x3, #0xaabc, lsl #32
  43f2fc:	movk	x3, #0xb8b1, lsl #48
  43f300:	add	x2, x2, x3
  43f304:	cmp	x2, #0x1
  43f308:	b.hi	43f348 <_obstack_memory_used@@Base+0x22f0>  // b.pmore
  43f30c:	ldr	w2, [x1, #40]
  43f310:	tbnz	w2, #31, 43f330 <_obstack_memory_used@@Base+0x22d8>
  43f314:	subs	w2, w2, #0x1
  43f318:	b.eq	43f358 <_obstack_memory_used@@Base+0x2300>  // b.none
  43f31c:	cmn	w2, #0x1
  43f320:	b.eq	43f36c <_obstack_memory_used@@Base+0x2314>  // b.none
  43f324:	str	w2, [x1, #40]
  43f328:	ldp	x29, x30, [sp], #16
  43f32c:	ret
  43f330:	adds	w2, w2, #0x1
  43f334:	b.ne	43f324 <_obstack_memory_used@@Base+0x22cc>  // b.any
  43f338:	ldr	x3, [x1, #32]
  43f33c:	str	x3, [x0]
  43f340:	str	w2, [x1, #40]
  43f344:	b	43f328 <_obstack_memory_used@@Base+0x22d0>
  43f348:	str	xzr, [x0]
  43f34c:	add	x0, x1, #0x50
  43f350:	ldp	x29, x30, [sp], #16
  43f354:	b	44bdc0 <_obstack_memory_used@@Base+0xed68>
  43f358:	ldr	x2, [x1, #32]
  43f35c:	str	x2, [x0]
  43f360:	add	x0, x1, #0x50
  43f364:	ldp	x29, x30, [sp], #16
  43f368:	b	44bdc0 <_obstack_memory_used@@Base+0xed68>
  43f36c:	bl	43ef80 <_obstack_memory_used@@Base+0x1f28>
  43f370:	stp	x29, x30, [sp, #-16]!
  43f374:	mov	x29, sp
  43f378:	bl	43f3d0 <_obstack_memory_used@@Base+0x2378>
  43f37c:	ldr	w0, [x0, #8]
  43f380:	ldp	x29, x30, [sp], #16
  43f384:	cmp	w0, #0x0
  43f388:	cset	w0, ne  // ne = any
  43f38c:	ret
  43f390:	stp	x29, x30, [sp, #-16]!
  43f394:	mov	x29, sp
  43f398:	bl	43f3d0 <_obstack_memory_used@@Base+0x2378>
  43f39c:	ldr	w0, [x0, #8]
  43f3a0:	ldp	x29, x30, [sp], #16
  43f3a4:	ret
  43f3a8:	stp	x29, x30, [sp, #-16]!
  43f3ac:	mrs	x1, tpidr_el0
  43f3b0:	movz	x0, #0x0, lsl #16
  43f3b4:	movk	x0, #0x10
  43f3b8:	nop
  43f3bc:	nop
  43f3c0:	mov	x29, sp
  43f3c4:	add	x0, x1, x0
  43f3c8:	ldp	x29, x30, [sp], #16
  43f3cc:	ret
  43f3d0:	stp	x29, x30, [sp, #-16]!
  43f3d4:	mrs	x1, tpidr_el0
  43f3d8:	movz	x0, #0x0, lsl #16
  43f3dc:	movk	x0, #0x10
  43f3e0:	nop
  43f3e4:	nop
  43f3e8:	mov	x29, sp
  43f3ec:	add	x0, x1, x0
  43f3f0:	ldp	x29, x30, [sp], #16
  43f3f4:	ret
  43f3f8:	stp	x29, x30, [sp, #-64]!
  43f3fc:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  43f400:	mov	x29, sp
  43f404:	ldrb	w1, [x0, #2840]
  43f408:	cbnz	w1, 43f4f0 <_obstack_memory_used@@Base+0x2498>
  43f40c:	mov	w1, #0x1                   	// #1
  43f410:	strb	w1, [x0, #2840]
  43f414:	bl	449530 <_obstack_memory_used@@Base+0xc4d8>
  43f418:	cbz	x0, 43f4c4 <_obstack_memory_used@@Base+0x246c>
  43f41c:	stp	x19, x20, [sp, #16]
  43f420:	mov	w4, #0xffffffff            	// #-1
  43f424:	add	x3, sp, #0x3c
  43f428:	ldr	x19, [x0, #8]
  43f42c:	stp	x21, x22, [sp, #32]
  43f430:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43f434:	mov	x2, #0x0                   	// #0
  43f438:	mov	x1, #0x0                   	// #0
  43f43c:	ldrb	w0, [x19]
  43f440:	str	w4, [sp, #60]
  43f444:	cmp	w0, #0x2a
  43f448:	cinc	x19, x19, eq  // eq = none
  43f44c:	mov	x0, x19
  43f450:	bl	449368 <_obstack_memory_used@@Base+0xc310>
  43f454:	mov	x20, x0
  43f458:	ldr	x22, [x21, #3912]
  43f45c:	mov	x1, #0x1                   	// #1
  43f460:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f464:	mov	x2, #0x30                  	// #48
  43f468:	add	x0, x0, #0x588
  43f46c:	ldr	x3, [x22]
  43f470:	bl	402ac0 <fwrite@plt>
  43f474:	ldr	w0, [sp, #60]
  43f478:	ldr	x1, [x22]
  43f47c:	cbz	w0, 43f4b8 <_obstack_memory_used@@Base+0x2460>
  43f480:	mov	x0, x19
  43f484:	bl	402640 <fputs@plt>
  43f488:	ldr	x3, [x21, #3912]
  43f48c:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f490:	mov	x2, #0x2                   	// #2
  43f494:	add	x0, x0, #0x5c0
  43f498:	mov	x1, #0x1                   	// #1
  43f49c:	ldr	x3, [x3]
  43f4a0:	bl	402ac0 <fwrite@plt>
  43f4a4:	ldr	w0, [sp, #60]
  43f4a8:	cbnz	w0, 43f4b4 <_obstack_memory_used@@Base+0x245c>
  43f4ac:	mov	x0, x20
  43f4b0:	bl	402a80 <free@plt>
  43f4b4:	bl	43f108 <_obstack_memory_used@@Base+0x20b0>
  43f4b8:	mov	x0, x20
  43f4bc:	bl	402640 <fputs@plt>
  43f4c0:	b	43f488 <_obstack_memory_used@@Base+0x2430>
  43f4c4:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43f4c8:	mov	x2, #0x2d                  	// #45
  43f4cc:	mov	x1, #0x1                   	// #1
  43f4d0:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f4d4:	ldr	x3, [x3, #3912]
  43f4d8:	add	x0, x0, #0x5c8
  43f4dc:	ldr	x3, [x3]
  43f4e0:	bl	402ac0 <fwrite@plt>
  43f4e4:	stp	x19, x20, [sp, #16]
  43f4e8:	stp	x21, x22, [sp, #32]
  43f4ec:	bl	402970 <abort@plt>
  43f4f0:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  43f4f4:	mov	x2, #0x1d                  	// #29
  43f4f8:	mov	x1, #0x1                   	// #1
  43f4fc:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f500:	ldr	x3, [x3, #3912]
  43f504:	add	x0, x0, #0x568
  43f508:	stp	x19, x20, [sp, #16]
  43f50c:	ldr	x3, [x3]
  43f510:	stp	x21, x22, [sp, #32]
  43f514:	bl	402ac0 <fwrite@plt>
  43f518:	bl	402970 <abort@plt>
  43f51c:	mov	x19, x1
  43f520:	cmp	x1, #0x1
  43f524:	b.ne	43f580 <_obstack_memory_used@@Base+0x2528>  // b.any
  43f528:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43f52c:	ldr	x1, [x0]
  43f530:	ldr	x1, [x1, #16]
  43f534:	blr	x1
  43f538:	mov	x20, x0
  43f53c:	ldr	x3, [x21, #3912]
  43f540:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f544:	mov	x1, x19
  43f548:	add	x0, x0, #0x5f8
  43f54c:	mov	x2, #0xb                   	// #11
  43f550:	ldr	x3, [x3]
  43f554:	bl	402ac0 <fwrite@plt>
  43f558:	ldr	x1, [x21, #3912]
  43f55c:	mov	x0, x20
  43f560:	ldr	x1, [x1]
  43f564:	bl	402640 <fputs@plt>
  43f568:	ldr	x21, [x21, #3912]
  43f56c:	mov	w0, #0xa                   	// #10
  43f570:	ldr	x1, [x21]
  43f574:	bl	402710 <fputc@plt>
  43f578:	bl	43f2d8 <_obstack_memory_used@@Base+0x2280>
  43f57c:	bl	402970 <abort@plt>
  43f580:	bl	43f238 <_obstack_memory_used@@Base+0x21e0>
  43f584:	bl	43f2d8 <_obstack_memory_used@@Base+0x2280>
  43f588:	bl	402970 <abort@plt>
  43f58c:	mov	x19, x0
  43f590:	bl	43f2d8 <_obstack_memory_used@@Base+0x2280>
  43f594:	mov	x0, x19
  43f598:	bl	44bba8 <_obstack_memory_used@@Base+0xeb50>
  43f59c:	nop
  43f5a0:	sub	w5, w1, #0x1
  43f5a4:	mov	x4, x0
  43f5a8:	cmp	w5, #0x4f
  43f5ac:	b.ls	43f5b8 <_obstack_memory_used@@Base+0x2560>  // b.plast
  43f5b0:	mov	x0, #0x0                   	// #0
  43f5b4:	ret
  43f5b8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f5bc:	add	x0, x0, #0x604
  43f5c0:	ldrb	w0, [x0, w5, uxtw]
  43f5c4:	adr	x5, 43f5d0 <_obstack_memory_used@@Base+0x2578>
  43f5c8:	add	x0, x5, w0, sxtb #2
  43f5cc:	br	x0
  43f5d0:	cbz	x3, 43f5b0 <_obstack_memory_used@@Base+0x2558>
  43f5d4:	ldp	w0, w5, [x4, #40]
  43f5d8:	cmp	w0, w5
  43f5dc:	b.ge	43f5b0 <_obstack_memory_used@@Base+0x2558>  // b.tcont
  43f5e0:	mov	w5, #0x18                  	// #24
  43f5e4:	add	w7, w0, #0x1
  43f5e8:	ldr	x6, [x4, #32]
  43f5ec:	smull	x5, w0, w5
  43f5f0:	add	x0, x6, x5
  43f5f4:	str	wzr, [x0, #4]
  43f5f8:	str	w7, [x4, #40]
  43f5fc:	str	w1, [x6, x5]
  43f600:	stp	x2, x3, [x0, #8]
  43f604:	ret
  43f608:	cbnz	x2, 43f5d4 <_obstack_memory_used@@Base+0x257c>
  43f60c:	mov	x0, #0x0                   	// #0
  43f610:	b	43f5b4 <_obstack_memory_used@@Base+0x255c>
  43f614:	cmp	x2, #0x0
  43f618:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  43f61c:	b.ne	43f5d4 <_obstack_memory_used@@Base+0x257c>  // b.any
  43f620:	mov	x0, #0x0                   	// #0
  43f624:	b	43f5b4 <_obstack_memory_used@@Base+0x255c>
  43f628:	ldr	x3, [x0, #24]
  43f62c:	mov	x2, x1
  43f630:	mov	w4, #0x4f                  	// #79
  43f634:	ldrb	w1, [x3]
  43f638:	cmp	w1, #0x52
  43f63c:	ccmp	w1, w4, #0x4, ne  // ne = any
  43f640:	b.ne	43f66c <_obstack_memory_used@@Base+0x2614>  // b.any
  43f644:	ldr	w5, [x0, #72]
  43f648:	cmp	w1, #0x52
  43f64c:	mov	w1, #0x20                  	// #32
  43f650:	add	w4, w5, #0x3
  43f654:	b.eq	43f674 <_obstack_memory_used@@Base+0x261c>  // b.none
  43f658:	add	x3, x3, #0x1
  43f65c:	str	x3, [x0, #24]
  43f660:	str	w4, [x0, #72]
  43f664:	mov	x3, #0x0                   	// #0
  43f668:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  43f66c:	mov	x0, x2
  43f670:	ret
  43f674:	add	w4, w5, #0x2
  43f678:	add	x3, x3, #0x1
  43f67c:	str	x3, [x0, #24]
  43f680:	mov	w1, #0x1f                  	// #31
  43f684:	str	w4, [x0, #72]
  43f688:	mov	x3, #0x0                   	// #0
  43f68c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  43f690:	cbz	x1, 43f770 <_obstack_memory_used@@Base+0x2718>
  43f694:	stp	x29, x30, [sp, #-32]!
  43f698:	mov	x29, sp
  43f69c:	stp	x19, x20, [sp, #16]
  43f6a0:	mov	x20, x0
  43f6a4:	mov	x19, x1
  43f6a8:	adrp	x0, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43f6ac:	add	x0, x0, #0x654
  43f6b0:	ldr	w1, [x19]
  43f6b4:	sub	w1, w1, #0x1
  43f6b8:	cmp	w1, #0x4f
  43f6bc:	b.ls	43f6cc <_obstack_memory_used@@Base+0x2674>  // b.plast
  43f6c0:	ldp	x19, x20, [sp, #16]
  43f6c4:	ldp	x29, x30, [sp], #32
  43f6c8:	ret
  43f6cc:	ldrb	w1, [x0, w1, uxtw]
  43f6d0:	adr	x2, 43f6dc <_obstack_memory_used@@Base+0x2684>
  43f6d4:	add	x1, x2, w1, sxtb #2
  43f6d8:	br	x1
  43f6dc:	ldr	x0, [x19, #8]
  43f6e0:	ldr	w0, [x0]
  43f6e4:	cmp	w0, #0x5
  43f6e8:	b.ne	43f6f8 <_obstack_memory_used@@Base+0x26a0>  // b.any
  43f6ec:	ldr	w0, [x20, #348]
  43f6f0:	add	w0, w0, #0x1
  43f6f4:	str	w0, [x20, #348]
  43f6f8:	ldr	w0, [x20, #308]
  43f6fc:	cmp	w0, #0x800
  43f700:	b.gt	43f6c0 <_obstack_memory_used@@Base+0x2668>
  43f704:	ldr	x1, [x19, #8]
  43f708:	add	w0, w0, #0x1
  43f70c:	str	w0, [x20, #308]
  43f710:	mov	x0, x20
  43f714:	bl	43f690 <_obstack_memory_used@@Base+0x2638>
  43f718:	ldr	x1, [x19, #16]
  43f71c:	mov	x0, x20
  43f720:	bl	43f690 <_obstack_memory_used@@Base+0x2638>
  43f724:	ldr	w0, [x20, #308]
  43f728:	sub	w0, w0, #0x1
  43f72c:	str	w0, [x20, #308]
  43f730:	ldp	x19, x20, [sp, #16]
  43f734:	ldp	x29, x30, [sp], #32
  43f738:	ret
  43f73c:	ldr	x19, [x19, #8]
  43f740:	cbnz	x19, 43f6b0 <_obstack_memory_used@@Base+0x2658>
  43f744:	b	43f6c0 <_obstack_memory_used@@Base+0x2668>
  43f748:	ldr	x19, [x19, #16]
  43f74c:	cbnz	x19, 43f6b0 <_obstack_memory_used@@Base+0x2658>
  43f750:	b	43f6c0 <_obstack_memory_used@@Base+0x2668>
  43f754:	ldr	w0, [x20, #364]
  43f758:	add	w0, w0, #0x1
  43f75c:	str	w0, [x20, #364]
  43f760:	ldr	w0, [x20, #308]
  43f764:	cmp	w0, #0x800
  43f768:	b.gt	43f6c0 <_obstack_memory_used@@Base+0x2668>
  43f76c:	b	43f704 <_obstack_memory_used@@Base+0x26ac>
  43f770:	ret
  43f774:	nop
  43f778:	cbz	x2, 43f818 <_obstack_memory_used@@Base+0x27c0>
  43f77c:	stp	x29, x30, [sp, #-48]!
  43f780:	mov	x29, sp
  43f784:	stp	x19, x20, [sp, #16]
  43f788:	mov	x20, x1
  43f78c:	mov	x19, x0
  43f790:	stp	x21, x22, [sp, #32]
  43f794:	add	x22, x1, x2
  43f798:	ldr	x1, [x0, #256]
  43f79c:	b	43f7c0 <_obstack_memory_used@@Base+0x2768>
  43f7a0:	mov	x0, x1
  43f7a4:	add	x1, x1, #0x1
  43f7a8:	str	x1, [x19, #256]
  43f7ac:	add	x20, x20, #0x1
  43f7b0:	cmp	x20, x22
  43f7b4:	strb	w21, [x19, x0]
  43f7b8:	strb	w21, [x19, #264]
  43f7bc:	b.eq	43f808 <_obstack_memory_used@@Base+0x27b0>  // b.none
  43f7c0:	ldrb	w21, [x20]
  43f7c4:	cmp	x1, #0xff
  43f7c8:	b.ne	43f7a0 <_obstack_memory_used@@Base+0x2748>  // b.any
  43f7cc:	ldp	x3, x2, [x19, #272]
  43f7d0:	strb	wzr, [x19, #255]
  43f7d4:	mov	x0, x19
  43f7d8:	add	x20, x20, #0x1
  43f7dc:	blr	x3
  43f7e0:	ldr	x2, [x19, #320]
  43f7e4:	mov	x0, #0x0                   	// #0
  43f7e8:	mov	x1, #0x1                   	// #1
  43f7ec:	str	x1, [x19, #256]
  43f7f0:	add	x2, x2, x1
  43f7f4:	str	x2, [x19, #320]
  43f7f8:	strb	w21, [x19, x0]
  43f7fc:	cmp	x20, x22
  43f800:	strb	w21, [x19, #264]
  43f804:	b.ne	43f7c0 <_obstack_memory_used@@Base+0x2768>  // b.any
  43f808:	ldp	x19, x20, [sp, #16]
  43f80c:	ldp	x21, x22, [sp, #32]
  43f810:	ldp	x29, x30, [sp], #48
  43f814:	ret
  43f818:	ret
  43f81c:	nop
  43f820:	ldr	x3, [x0]
  43f824:	mov	x6, x0
  43f828:	ldrb	w4, [x3]
  43f82c:	cmp	w4, #0x6e
  43f830:	b.eq	43f8bc <_obstack_memory_used@@Base+0x2864>  // b.none
  43f834:	sub	w0, w4, #0x30
  43f838:	and	w0, w0, #0xff
  43f83c:	cmp	w0, #0x9
  43f840:	b.hi	43f8e4 <_obstack_memory_used@@Base+0x288c>  // b.pmore
  43f844:	mov	w9, #0x0                   	// #0
  43f848:	mov	w8, #0xcccd                	// #52429
  43f84c:	add	x3, x3, #0x1
  43f850:	mov	w0, #0x0                   	// #0
  43f854:	mov	w7, #0x7fffffff            	// #2147483647
  43f858:	movk	w8, #0xcccc, lsl #16
  43f85c:	b	43f870 <_obstack_memory_used@@Base+0x2818>
  43f860:	umull	x1, w1, w8
  43f864:	lsr	x1, x1, #35
  43f868:	cmp	w1, w0
  43f86c:	b.lt	43f8b4 <_obstack_memory_used@@Base+0x285c>  // b.tstop
  43f870:	str	x3, [x6]
  43f874:	add	w0, w0, w0, lsl #2
  43f878:	add	x3, x3, #0x1
  43f87c:	ldurb	w1, [x3, #-1]
  43f880:	add	w5, w4, w0, lsl #1
  43f884:	sub	w0, w5, #0x30
  43f888:	sub	w2, w1, #0x30
  43f88c:	mov	w4, w1
  43f890:	sub	w1, w7, w2
  43f894:	and	w2, w2, #0xff
  43f898:	cmp	w2, #0x9
  43f89c:	b.ls	43f860 <_obstack_memory_used@@Base+0x2808>  // b.plast
  43f8a0:	cmp	w9, #0x0
  43f8a4:	mov	w1, #0x30                  	// #48
  43f8a8:	sub	w5, w1, w5
  43f8ac:	csel	w0, w5, w0, ne  // ne = any
  43f8b0:	ret
  43f8b4:	mov	w0, #0xffffffff            	// #-1
  43f8b8:	ret
  43f8bc:	add	x1, x3, #0x1
  43f8c0:	str	x1, [x0]
  43f8c4:	ldrb	w4, [x3, #1]
  43f8c8:	sub	w0, w4, #0x30
  43f8cc:	and	w0, w0, #0xff
  43f8d0:	cmp	w0, #0x9
  43f8d4:	b.hi	43f8e4 <_obstack_memory_used@@Base+0x288c>  // b.pmore
  43f8d8:	mov	x3, x1
  43f8dc:	mov	w9, #0x1                   	// #1
  43f8e0:	b	43f848 <_obstack_memory_used@@Base+0x27f0>
  43f8e4:	mov	w0, #0x0                   	// #0
  43f8e8:	ret
  43f8ec:	nop
  43f8f0:	mov	x1, x0
  43f8f4:	ldr	w0, [x0, #40]
  43f8f8:	ldr	w2, [x1, #44]
  43f8fc:	cmp	w0, w2
  43f900:	b.ge	43f94c <_obstack_memory_used@@Base+0x28f4>  // b.tcont
  43f904:	stp	x29, x30, [sp, #-16]!
  43f908:	mov	w2, #0x18                  	// #24
  43f90c:	add	w5, w0, #0x1
  43f910:	mov	x29, sp
  43f914:	ldr	x3, [x1, #32]
  43f918:	smull	x2, w0, w2
  43f91c:	mov	w4, #0x42                  	// #66
  43f920:	add	x0, x1, #0x18
  43f924:	add	x10, x3, x2
  43f928:	str	wzr, [x10, #4]
  43f92c:	str	w5, [x1, #40]
  43f930:	str	w4, [x3, x2]
  43f934:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  43f938:	sxtw	x0, w0
  43f93c:	str	x0, [x10, #8]
  43f940:	mov	x0, x10
  43f944:	ldp	x29, x30, [sp], #16
  43f948:	ret
  43f94c:	mov	x10, #0x0                   	// #0
  43f950:	mov	x0, x10
  43f954:	ret
  43f958:	ldr	x1, [x0, #24]
  43f95c:	mov	x10, x0
  43f960:	ldrb	w0, [x1]
  43f964:	cmp	w0, #0x5f
  43f968:	b.eq	43f9ac <_obstack_memory_used@@Base+0x2954>  // b.none
  43f96c:	cmp	w0, #0x6e
  43f970:	b.eq	43f9c4 <_obstack_memory_used@@Base+0x296c>  // b.none
  43f974:	stp	x29, x30, [sp, #-16]!
  43f978:	add	x0, x10, #0x18
  43f97c:	mov	x29, sp
  43f980:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  43f984:	adds	w0, w0, #0x1
  43f988:	b.mi	43f9bc <_obstack_memory_used@@Base+0x2964>  // b.first
  43f98c:	ldr	x1, [x10, #24]
  43f990:	ldrb	w2, [x1]
  43f994:	cmp	w2, #0x5f
  43f998:	b.ne	43f9bc <_obstack_memory_used@@Base+0x2964>  // b.any
  43f99c:	add	x1, x1, #0x1
  43f9a0:	str	x1, [x10, #24]
  43f9a4:	ldp	x29, x30, [sp], #16
  43f9a8:	ret
  43f9ac:	add	x1, x1, #0x1
  43f9b0:	mov	w0, #0x0                   	// #0
  43f9b4:	str	x1, [x10, #24]
  43f9b8:	ret
  43f9bc:	mov	w0, #0xffffffff            	// #-1
  43f9c0:	b	43f9a4 <_obstack_memory_used@@Base+0x294c>
  43f9c4:	mov	w0, #0xffffffff            	// #-1
  43f9c8:	ret
  43f9cc:	nop
  43f9d0:	ldr	x1, [x0, #24]
  43f9d4:	ldrb	w2, [x1]
  43f9d8:	cmp	w2, #0x54
  43f9dc:	b.ne	43fa48 <_obstack_memory_used@@Base+0x29f0>  // b.any
  43f9e0:	stp	x29, x30, [sp, #-16]!
  43f9e4:	add	x1, x1, #0x1
  43f9e8:	mov	x11, x0
  43f9ec:	mov	x29, sp
  43f9f0:	str	x1, [x0, #24]
  43f9f4:	bl	43f958 <_obstack_memory_used@@Base+0x2900>
  43f9f8:	tbnz	w0, #31, 43fa3c <_obstack_memory_used@@Base+0x29e4>
  43f9fc:	ldp	w1, w2, [x11, #40]
  43fa00:	cmp	w1, w2
  43fa04:	b.ge	43fa3c <_obstack_memory_used@@Base+0x29e4>  // b.tcont
  43fa08:	mov	w2, #0x18                  	// #24
  43fa0c:	add	w5, w1, #0x1
  43fa10:	ldr	x3, [x11, #32]
  43fa14:	smull	x2, w1, w2
  43fa18:	sxtw	x1, w0
  43fa1c:	mov	w4, #0x5                   	// #5
  43fa20:	add	x0, x3, x2
  43fa24:	str	wzr, [x0, #4]
  43fa28:	str	w5, [x11, #40]
  43fa2c:	str	w4, [x3, x2]
  43fa30:	str	x1, [x0, #8]
  43fa34:	ldp	x29, x30, [sp], #16
  43fa38:	ret
  43fa3c:	mov	x0, #0x0                   	// #0
  43fa40:	ldp	x29, x30, [sp], #16
  43fa44:	ret
  43fa48:	mov	x0, #0x0                   	// #0
  43fa4c:	ret
  43fa50:	mov	x10, x0
  43fa54:	stp	x29, x30, [sp, #-16]!
  43fa58:	add	x0, x0, #0x18
  43fa5c:	mov	x29, sp
  43fa60:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  43fa64:	cmp	w0, #0x0
  43fa68:	b.le	43fb60 <_obstack_memory_used@@Base+0x2b08>
  43fa6c:	mov	w1, w0
  43fa70:	sxtw	x3, w0
  43fa74:	ldr	x0, [x10, #8]
  43fa78:	ldr	x2, [x10, #24]
  43fa7c:	sub	x0, x0, x2
  43fa80:	cmp	x0, w1, sxtw
  43fa84:	b.lt	43fb58 <_obstack_memory_used@@Base+0x2b00>  // b.tstop
  43fa88:	ldr	w0, [x10, #16]
  43fa8c:	add	x3, x2, x3
  43fa90:	str	x3, [x10, #24]
  43fa94:	tbz	w0, #2, 43faa4 <_obstack_memory_used@@Base+0x2a4c>
  43fa98:	ldrb	w0, [x2, w1, sxtw]
  43fa9c:	cmp	w0, #0x24
  43faa0:	b.eq	43fb6c <_obstack_memory_used@@Base+0x2b14>  // b.none
  43faa4:	ldp	w0, w3, [x10, #40]
  43faa8:	cmp	w1, #0x9
  43faac:	b.gt	43fae8 <_obstack_memory_used@@Base+0x2a90>
  43fab0:	cmp	w3, w0
  43fab4:	b.le	43fb58 <_obstack_memory_used@@Base+0x2b00>
  43fab8:	ldr	x4, [x10, #32]
  43fabc:	mov	w5, #0x18                  	// #24
  43fac0:	add	w3, w0, #0x1
  43fac4:	smaddl	x0, w0, w5, x4
  43fac8:	str	wzr, [x0, #4]
  43facc:	str	w3, [x10, #40]
  43fad0:	cbz	x2, 43fb58 <_obstack_memory_used@@Base+0x2b00>
  43fad4:	stp	xzr, x2, [x0]
  43fad8:	str	w1, [x0, #16]
  43fadc:	str	x0, [x10, #64]
  43fae0:	ldp	x29, x30, [sp], #16
  43fae4:	ret
  43fae8:	mov	x4, #0x475f                	// #18271
  43faec:	ldr	x5, [x2]
  43faf0:	movk	x4, #0x4f4c, lsl #16
  43faf4:	movk	x4, #0x4142, lsl #32
  43faf8:	movk	x4, #0x5f4c, lsl #48
  43fafc:	cmp	x5, x4
  43fb00:	b.ne	43fb2c <_obstack_memory_used@@Base+0x2ad4>  // b.any
  43fb04:	ldrb	w4, [x2, #8]
  43fb08:	mov	w6, #0x5f                  	// #95
  43fb0c:	mov	w5, #0x24                  	// #36
  43fb10:	cmp	w4, #0x2e
  43fb14:	ccmp	w4, w6, #0x4, ne  // ne = any
  43fb18:	ccmp	w4, w5, #0x4, ne  // ne = any
  43fb1c:	b.ne	43fb2c <_obstack_memory_used@@Base+0x2ad4>  // b.any
  43fb20:	ldrb	w4, [x2, #9]
  43fb24:	cmp	w4, #0x4e
  43fb28:	b.eq	43fb84 <_obstack_memory_used@@Base+0x2b2c>  // b.none
  43fb2c:	cmp	w3, w0
  43fb30:	b.le	43fb58 <_obstack_memory_used@@Base+0x2b00>
  43fb34:	ldr	x4, [x10, #32]
  43fb38:	mov	w5, #0x18                  	// #24
  43fb3c:	add	w3, w0, #0x1
  43fb40:	smaddl	x0, w0, w5, x4
  43fb44:	str	wzr, [x0, #4]
  43fb48:	str	w3, [x10, #40]
  43fb4c:	stp	xzr, x2, [x0]
  43fb50:	str	w1, [x0, #16]
  43fb54:	b	43fadc <_obstack_memory_used@@Base+0x2a84>
  43fb58:	mov	x0, #0x0                   	// #0
  43fb5c:	b	43fadc <_obstack_memory_used@@Base+0x2a84>
  43fb60:	mov	x0, #0x0                   	// #0
  43fb64:	ldp	x29, x30, [sp], #16
  43fb68:	ret
  43fb6c:	add	x3, x3, #0x1
  43fb70:	str	x3, [x10, #24]
  43fb74:	cmp	w1, #0x9
  43fb78:	ldp	w0, w3, [x10, #40]
  43fb7c:	b.le	43fab0 <_obstack_memory_used@@Base+0x2a58>
  43fb80:	b	43fae8 <_obstack_memory_used@@Base+0x2a90>
  43fb84:	ldr	w2, [x10, #72]
  43fb88:	cmp	w3, w0
  43fb8c:	add	w2, w2, #0x16
  43fb90:	sub	w1, w2, w1
  43fb94:	str	w1, [x10, #72]
  43fb98:	b.le	43fb58 <_obstack_memory_used@@Base+0x2b00>
  43fb9c:	mov	w1, #0x18                  	// #24
  43fba0:	add	w2, w0, #0x1
  43fba4:	ldr	x3, [x10, #32]
  43fba8:	smull	x1, w0, w1
  43fbac:	str	w2, [x10, #40]
  43fbb0:	mov	w4, #0x15                  	// #21
  43fbb4:	add	x0, x3, x1
  43fbb8:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  43fbbc:	add	x2, x2, #0x880
  43fbc0:	str	xzr, [x3, x1]
  43fbc4:	str	x2, [x0, #8]
  43fbc8:	str	w4, [x0, #16]
  43fbcc:	b	43fadc <_obstack_memory_used@@Base+0x2a84>
  43fbd0:	ldr	x3, [x0, #24]
  43fbd4:	mov	x11, x0
  43fbd8:	ldr	x13, [x0, #64]
  43fbdc:	mov	x12, x1
  43fbe0:	ldrb	w0, [x3]
  43fbe4:	cmp	w0, #0x42
  43fbe8:	b.ne	43fc40 <_obstack_memory_used@@Base+0x2be8>  // b.any
  43fbec:	stp	x29, x30, [sp, #-16]!
  43fbf0:	mov	x29, sp
  43fbf4:	nop
  43fbf8:	add	x3, x3, #0x1
  43fbfc:	str	x3, [x11, #24]
  43fc00:	mov	x0, x11
  43fc04:	bl	43fa50 <_obstack_memory_used@@Base+0x29f8>
  43fc08:	mov	x3, x0
  43fc0c:	mov	x2, x12
  43fc10:	mov	x0, x11
  43fc14:	mov	w1, #0x4c                  	// #76
  43fc18:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  43fc1c:	ldr	x3, [x11, #24]
  43fc20:	mov	x12, x0
  43fc24:	ldrb	w0, [x3]
  43fc28:	cmp	w0, #0x42
  43fc2c:	b.eq	43fbf8 <_obstack_memory_used@@Base+0x2ba0>  // b.none
  43fc30:	str	x13, [x11, #64]
  43fc34:	mov	x0, x12
  43fc38:	ldp	x29, x30, [sp], #16
  43fc3c:	ret
  43fc40:	mov	x0, x1
  43fc44:	str	x13, [x11, #64]
  43fc48:	ret
  43fc4c:	nop
  43fc50:	mov	x14, x0
  43fc54:	ldr	x0, [x0, #24]
  43fc58:	ldrb	w2, [x0]
  43fc5c:	cmp	w2, #0x53
  43fc60:	b.ne	43fcd0 <_obstack_memory_used@@Base+0x2c78>  // b.any
  43fc64:	add	x2, x0, #0x1
  43fc68:	str	x2, [x14, #24]
  43fc6c:	ldrb	w2, [x0, #1]
  43fc70:	cbnz	w2, 43fcd8 <_obstack_memory_used@@Base+0x2c80>
  43fc74:	ldr	w0, [x14, #16]
  43fc78:	and	w1, w1, #0x1
  43fc7c:	ands	w3, w0, #0x8
  43fc80:	ubfx	x4, x0, #3, #1
  43fc84:	csel	w1, w1, wzr, eq  // eq = none
  43fc88:	cbz	w1, 43fca4 <_obstack_memory_used@@Base+0x2c4c>
  43fc8c:	ldr	x0, [x14, #24]
  43fc90:	ldrb	w0, [x0]
  43fc94:	sub	w0, w0, #0x43
  43fc98:	and	w0, w0, #0xff
  43fc9c:	cmp	w0, #0x1
  43fca0:	csinc	w4, w4, wzr, hi  // hi = pmore
  43fca4:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  43fca8:	add	x0, x0, #0xdf0
  43fcac:	add	x3, x0, #0x188
  43fcb0:	mov	w1, #0x74                  	// #116
  43fcb4:	b	43fcbc <_obstack_memory_used@@Base+0x2c64>
  43fcb8:	ldrb	w1, [x0]
  43fcbc:	cmp	w1, w2
  43fcc0:	b.eq	43fdac <_obstack_memory_used@@Base+0x2d54>  // b.none
  43fcc4:	add	x0, x0, #0x38
  43fcc8:	cmp	x0, x3
  43fccc:	b.ne	43fcb8 <_obstack_memory_used@@Base+0x2c60>  // b.any
  43fcd0:	mov	x0, #0x0                   	// #0
  43fcd4:	ret
  43fcd8:	add	x2, x0, #0x2
  43fcdc:	str	x2, [x14, #24]
  43fce0:	ldrb	w2, [x0, #1]
  43fce4:	sub	w5, w2, #0x30
  43fce8:	cmp	w2, #0x5f
  43fcec:	and	w0, w5, #0xff
  43fcf0:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  43fcf4:	b.hi	43fd1c <_obstack_memory_used@@Base+0x2cc4>  // b.pmore
  43fcf8:	cmp	w2, #0x5f
  43fcfc:	mov	w1, #0x0                   	// #0
  43fd00:	b.ne	43fd30 <_obstack_memory_used@@Base+0x2cd8>  // b.any
  43fd04:	ldr	w0, [x14, #56]
  43fd08:	cmp	w0, w1
  43fd0c:	b.ls	43fcd0 <_obstack_memory_used@@Base+0x2c78>  // b.plast
  43fd10:	ldr	x0, [x14, #48]
  43fd14:	ldr	x0, [x0, w1, uxtw #3]
  43fd18:	ret
  43fd1c:	sub	w0, w2, #0x41
  43fd20:	and	w0, w0, #0xff
  43fd24:	cmp	w0, #0x19
  43fd28:	b.hi	43fc74 <_obstack_memory_used@@Base+0x2c1c>  // b.pmore
  43fd2c:	nop
  43fd30:	mov	w3, #0x0                   	// #0
  43fd34:	nop
  43fd38:	add	w1, w3, w3, lsl #3
  43fd3c:	sub	w6, w2, #0x41
  43fd40:	mov	w4, w1
  43fd44:	and	w5, w5, #0xff
  43fd48:	add	w1, w2, w1, lsl #2
  43fd4c:	and	w6, w6, #0xff
  43fd50:	sub	w1, w1, #0x37
  43fd54:	add	w2, w2, w4, lsl #2
  43fd58:	cmp	w5, #0x9
  43fd5c:	b.hi	43fda0 <_obstack_memory_used@@Base+0x2d48>  // b.pmore
  43fd60:	sub	w1, w2, #0x30
  43fd64:	cmp	w3, w1
  43fd68:	b.hi	43fcd0 <_obstack_memory_used@@Base+0x2c78>  // b.pmore
  43fd6c:	ldr	x4, [x14, #24]
  43fd70:	mov	w3, w1
  43fd74:	add	x0, x4, #0x1
  43fd78:	ldrb	w2, [x4]
  43fd7c:	cbz	w2, 43fd90 <_obstack_memory_used@@Base+0x2d38>
  43fd80:	str	x0, [x14, #24]
  43fd84:	ldrb	w2, [x4]
  43fd88:	cmp	w2, #0x5f
  43fd8c:	b.eq	43fd98 <_obstack_memory_used@@Base+0x2d40>  // b.none
  43fd90:	sub	w5, w2, #0x30
  43fd94:	b	43fd38 <_obstack_memory_used@@Base+0x2ce0>
  43fd98:	add	w1, w1, #0x1
  43fd9c:	b	43fd04 <_obstack_memory_used@@Base+0x2cac>
  43fda0:	cmp	w6, #0x19
  43fda4:	b.ls	43fd64 <_obstack_memory_used@@Base+0x2d0c>  // b.plast
  43fda8:	b	43fcd0 <_obstack_memory_used@@Base+0x2c78>
  43fdac:	ldr	x5, [x0, #40]
  43fdb0:	ldp	w1, w3, [x14, #40]
  43fdb4:	cbz	x5, 43fdf0 <_obstack_memory_used@@Base+0x2d98>
  43fdb8:	ldr	w9, [x0, #48]
  43fdbc:	cmp	w3, w1
  43fdc0:	b.le	43fea8 <_obstack_memory_used@@Base+0x2e50>
  43fdc4:	mov	w8, #0x18                  	// #24
  43fdc8:	ldr	x7, [x14, #32]
  43fdcc:	smull	x6, w1, w8
  43fdd0:	add	w1, w1, #0x1
  43fdd4:	add	x2, x7, x6
  43fdd8:	str	wzr, [x2, #4]
  43fddc:	str	w1, [x14, #40]
  43fde0:	str	w8, [x7, x6]
  43fde4:	str	x5, [x2, #8]
  43fde8:	str	w9, [x2, #16]
  43fdec:	str	x2, [x14, #64]
  43fdf0:	cbz	w4, 43fe4c <_obstack_memory_used@@Base+0x2df4>
  43fdf4:	ldr	w2, [x0, #32]
  43fdf8:	ldr	x5, [x0, #24]
  43fdfc:	cmp	w1, w3
  43fe00:	ldr	w0, [x14, #72]
  43fe04:	add	w0, w0, w2
  43fe08:	str	w0, [x14, #72]
  43fe0c:	b.ge	43fea0 <_obstack_memory_used@@Base+0x2e48>  // b.tcont
  43fe10:	mov	w4, #0x18                  	// #24
  43fe14:	add	w6, w1, #0x1
  43fe18:	ldr	x3, [x14, #32]
  43fe1c:	smull	x1, w1, w4
  43fe20:	add	x0, x3, x1
  43fe24:	str	wzr, [x0, #4]
  43fe28:	str	w6, [x14, #40]
  43fe2c:	str	w4, [x3, x1]
  43fe30:	str	x5, [x0, #8]
  43fe34:	str	w2, [x0, #16]
  43fe38:	ldr	x1, [x14, #24]
  43fe3c:	ldrb	w1, [x1]
  43fe40:	cmp	w1, #0x42
  43fe44:	b.eq	43fe58 <_obstack_memory_used@@Base+0x2e00>  // b.none
  43fe48:	ret
  43fe4c:	ldr	w2, [x0, #16]
  43fe50:	ldr	x5, [x0, #8]
  43fe54:	b	43fdfc <_obstack_memory_used@@Base+0x2da4>
  43fe58:	stp	x29, x30, [sp, #-16]!
  43fe5c:	mov	x1, x0
  43fe60:	mov	x0, x14
  43fe64:	mov	x29, sp
  43fe68:	bl	43fbd0 <_obstack_memory_used@@Base+0x2b78>
  43fe6c:	cbz	x0, 43fe94 <_obstack_memory_used@@Base+0x2e3c>
  43fe70:	ldp	w1, w2, [x14, #56]
  43fe74:	cmp	w1, w2
  43fe78:	b.ge	43fe94 <_obstack_memory_used@@Base+0x2e3c>  // b.tcont
  43fe7c:	ldr	x3, [x14, #48]
  43fe80:	add	w2, w1, #0x1
  43fe84:	str	x0, [x3, w1, sxtw #3]
  43fe88:	str	w2, [x14, #56]
  43fe8c:	ldp	x29, x30, [sp], #16
  43fe90:	ret
  43fe94:	mov	x0, #0x0                   	// #0
  43fe98:	ldp	x29, x30, [sp], #16
  43fe9c:	ret
  43fea0:	mov	x0, #0x0                   	// #0
  43fea4:	b	43fe38 <_obstack_memory_used@@Base+0x2de0>
  43fea8:	mov	x2, #0x0                   	// #0
  43feac:	str	x2, [x14, #64]
  43feb0:	b	43fdf0 <_obstack_memory_used@@Base+0x2d98>
  43feb4:	nop
  43feb8:	mov	x10, x0
  43febc:	cbnz	w1, 43fed8 <_obstack_memory_used@@Base+0x2e80>
  43fec0:	ldr	x0, [x0, #24]
  43fec4:	ldrb	w1, [x0]
  43fec8:	cbz	w1, 43ff18 <_obstack_memory_used@@Base+0x2ec0>
  43fecc:	add	x1, x0, #0x1
  43fed0:	str	x1, [x10, #24]
  43fed4:	ldrb	w1, [x0]
  43fed8:	stp	x29, x30, [sp, #-16]!
  43fedc:	cmp	w1, #0x68
  43fee0:	mov	x29, sp
  43fee4:	b.eq	43ff54 <_obstack_memory_used@@Base+0x2efc>  // b.none
  43fee8:	cmp	w1, #0x76
  43feec:	b.ne	43ff0c <_obstack_memory_used@@Base+0x2eb4>  // b.any
  43fef0:	add	x11, x10, #0x18
  43fef4:	mov	x0, x11
  43fef8:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  43fefc:	ldr	x0, [x10, #24]
  43ff00:	ldrb	w1, [x0]
  43ff04:	cmp	w1, #0x5f
  43ff08:	b.eq	43ff20 <_obstack_memory_used@@Base+0x2ec8>  // b.none
  43ff0c:	mov	w0, #0x0                   	// #0
  43ff10:	ldp	x29, x30, [sp], #16
  43ff14:	ret
  43ff18:	mov	w0, #0x0                   	// #0
  43ff1c:	ret
  43ff20:	add	x0, x0, #0x1
  43ff24:	str	x0, [x10, #24]
  43ff28:	mov	x0, x11
  43ff2c:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  43ff30:	ldr	x0, [x10, #24]
  43ff34:	ldrb	w1, [x0]
  43ff38:	cmp	w1, #0x5f
  43ff3c:	b.ne	43ff0c <_obstack_memory_used@@Base+0x2eb4>  // b.any
  43ff40:	add	x1, x0, #0x1
  43ff44:	str	x1, [x10, #24]
  43ff48:	mov	w0, #0x1                   	// #1
  43ff4c:	ldp	x29, x30, [sp], #16
  43ff50:	ret
  43ff54:	add	x0, x10, #0x18
  43ff58:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  43ff5c:	b	43ff30 <_obstack_memory_used@@Base+0x2ed8>
  43ff60:	mov	x2, x0
  43ff64:	mov	w3, #0x56                  	// #86
  43ff68:	mov	w0, #0x4b                  	// #75
  43ff6c:	ldrb	w1, [x2]
  43ff70:	cmp	w1, #0x72
  43ff74:	ccmp	w1, w3, #0x4, ne  // ne = any
  43ff78:	ccmp	w1, w0, #0x4, ne  // ne = any
  43ff7c:	mov	w0, #0x1                   	// #1
  43ff80:	b.eq	43ff90 <_obstack_memory_used@@Base+0x2f38>  // b.none
  43ff84:	cmp	w1, #0x44
  43ff88:	mov	w0, #0x0                   	// #0
  43ff8c:	b.eq	43ff94 <_obstack_memory_used@@Base+0x2f3c>  // b.none
  43ff90:	ret
  43ff94:	ldrb	w0, [x2, #1]
  43ff98:	and	w1, w0, #0xffffffdf
  43ff9c:	sub	w0, w0, #0x77
  43ffa0:	cmp	w1, #0x4f
  43ffa4:	and	w0, w0, #0xff
  43ffa8:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  43ffac:	cset	w0, ls  // ls = plast
  43ffb0:	ret
  43ffb4:	nop
  43ffb8:	ldr	x1, [x0, #24]
  43ffbc:	mov	x10, x0
  43ffc0:	ldrb	w0, [x1]
  43ffc4:	cmp	w0, #0x5f
  43ffc8:	b.eq	43ffd4 <_obstack_memory_used@@Base+0x2f7c>  // b.none
  43ffcc:	mov	w0, #0x1                   	// #1
  43ffd0:	ret
  43ffd4:	stp	x29, x30, [sp, #-16]!
  43ffd8:	add	x0, x1, #0x1
  43ffdc:	mov	x29, sp
  43ffe0:	str	x0, [x10, #24]
  43ffe4:	ldrb	w0, [x1, #1]
  43ffe8:	cmp	w0, #0x5f
  43ffec:	b.eq	440010 <_obstack_memory_used@@Base+0x2fb8>  // b.none
  43fff0:	add	x0, x10, #0x18
  43fff4:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  43fff8:	mov	w1, w0
  43fffc:	mov	w0, #0x0                   	// #0
  440000:	tbnz	w1, #31, 440008 <_obstack_memory_used@@Base+0x2fb0>
  440004:	mov	w0, #0x1                   	// #1
  440008:	ldp	x29, x30, [sp], #16
  44000c:	ret
  440010:	mov	x0, x10
  440014:	add	x1, x1, #0x2
  440018:	str	x1, [x0, #24]!
  44001c:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  440020:	tbnz	w0, #31, 440050 <_obstack_memory_used@@Base+0x2ff8>
  440024:	cmp	w0, #0x9
  440028:	b.le	440004 <_obstack_memory_used@@Base+0x2fac>
  44002c:	ldr	x1, [x10, #24]
  440030:	mov	w0, #0x0                   	// #0
  440034:	ldrb	w2, [x1]
  440038:	cmp	w2, #0x5f
  44003c:	b.ne	440008 <_obstack_memory_used@@Base+0x2fb0>  // b.any
  440040:	add	x1, x1, #0x1
  440044:	mov	w0, #0x1                   	// #1
  440048:	str	x1, [x10, #24]
  44004c:	b	440008 <_obstack_memory_used@@Base+0x2fb0>
  440050:	mov	w0, #0x0                   	// #0
  440054:	b	440008 <_obstack_memory_used@@Base+0x2fb0>
  440058:	cbnz	x0, 440074 <_obstack_memory_used@@Base+0x301c>
  44005c:	b	440080 <_obstack_memory_used@@Base+0x3028>
  440060:	cmp	w1, #0x0
  440064:	b.le	440088 <_obstack_memory_used@@Base+0x3030>
  440068:	ldr	x0, [x0, #16]
  44006c:	sub	w1, w1, #0x1
  440070:	cbz	x0, 440084 <_obstack_memory_used@@Base+0x302c>
  440074:	ldr	w2, [x0]
  440078:	cmp	w2, #0x2f
  44007c:	b.eq	440060 <_obstack_memory_used@@Base+0x3008>  // b.none
  440080:	mov	x0, #0x0                   	// #0
  440084:	ret
  440088:	b.ne	440080 <_obstack_memory_used@@Base+0x3028>  // b.any
  44008c:	ldr	x0, [x0, #8]
  440090:	ret
  440094:	nop
  440098:	mov	x2, x0
  44009c:	ldr	x0, [x0, #288]
  4400a0:	cbz	x0, 4400b8 <_obstack_memory_used@@Base+0x3060>
  4400a4:	ldr	x1, [x1]
  4400a8:	ldr	x0, [x0, #8]
  4400ac:	ldr	x0, [x0, #16]
  4400b0:	tbnz	w1, #31, 4400c0 <_obstack_memory_used@@Base+0x3068>
  4400b4:	b	440058 <_obstack_memory_used@@Base+0x3000>
  4400b8:	mov	w1, #0x1                   	// #1
  4400bc:	str	w1, [x2, #304]
  4400c0:	ret
  4400c4:	nop
  4400c8:	cbz	x1, 44019c <_obstack_memory_used@@Base+0x3144>
  4400cc:	stp	x29, x30, [sp, #-48]!
  4400d0:	mov	x29, sp
  4400d4:	stp	x21, x22, [sp, #32]
  4400d8:	mov	x21, #0x8001                	// #32769
  4400dc:	movk	x21, #0x410, lsl #16
  4400e0:	movk	x21, #0xc600, lsl #32
  4400e4:	stp	x19, x20, [sp, #16]
  4400e8:	mov	x20, x0
  4400ec:	mov	x19, x1
  4400f0:	mov	x22, #0x1                   	// #1
  4400f4:	movk	x21, #0x19, lsl #48
  4400f8:	ldr	w2, [x19]
  4400fc:	cmp	w2, #0x8
  440100:	b.eq	440118 <_obstack_memory_used@@Base+0x30c0>  // b.none
  440104:	b.hi	44016c <_obstack_memory_used@@Base+0x3114>  // b.pmore
  440108:	cmp	w2, #0x6
  44010c:	b.eq	440120 <_obstack_memory_used@@Base+0x30c8>  // b.none
  440110:	cmp	w2, #0x7
  440114:	b.ne	440134 <_obstack_memory_used@@Base+0x30dc>  // b.any
  440118:	ldr	x19, [x19, #16]
  44011c:	cbnz	x19, 4400f8 <_obstack_memory_used@@Base+0x30a0>
  440120:	mov	x0, #0x0                   	// #0
  440124:	ldp	x19, x20, [sp, #16]
  440128:	ldp	x21, x22, [sp, #32]
  44012c:	ldp	x29, x30, [sp], #48
  440130:	ret
  440134:	cbz	w2, 440120 <_obstack_memory_used@@Base+0x30c8>
  440138:	cmp	w2, #0x5
  44013c:	b.ne	440188 <_obstack_memory_used@@Base+0x3130>  // b.any
  440140:	add	x1, x19, #0x8
  440144:	mov	x0, x20
  440148:	bl	440098 <_obstack_memory_used@@Base+0x3040>
  44014c:	cbz	x0, 440120 <_obstack_memory_used@@Base+0x30c8>
  440150:	ldr	w1, [x0]
  440154:	cmp	w1, #0x2f
  440158:	b.ne	440120 <_obstack_memory_used@@Base+0x30c8>  // b.any
  44015c:	ldp	x19, x20, [sp, #16]
  440160:	ldp	x21, x22, [sp, #32]
  440164:	ldp	x29, x30, [sp], #48
  440168:	ret
  44016c:	sub	w2, w2, #0x18
  440170:	cmp	w2, #0x34
  440174:	b.hi	440188 <_obstack_memory_used@@Base+0x3130>  // b.pmore
  440178:	lsl	x2, x22, x2
  44017c:	tst	x2, x21
  440180:	b.ne	440120 <_obstack_memory_used@@Base+0x30c8>  // b.any
  440184:	tbnz	w2, #27, 440118 <_obstack_memory_used@@Base+0x30c0>
  440188:	ldr	x1, [x19, #8]
  44018c:	mov	x0, x20
  440190:	bl	4400c8 <_obstack_memory_used@@Base+0x3070>
  440194:	cbz	x0, 440118 <_obstack_memory_used@@Base+0x30c0>
  440198:	b	440124 <_obstack_memory_used@@Base+0x30cc>
  44019c:	mov	x0, #0x0                   	// #0
  4401a0:	ret
  4401a4:	nop
  4401a8:	stp	x29, x30, [sp, #-48]!
  4401ac:	mov	x29, sp
  4401b0:	stp	x19, x20, [sp, #16]
  4401b4:	mov	x19, x2
  4401b8:	add	x2, x1, #0x1
  4401bc:	stp	x21, x22, [sp, #32]
  4401c0:	mov	x21, x1
  4401c4:	mov	x22, x0
  4401c8:	ldp	x1, x20, [x19, #8]
  4401cc:	add	x1, x2, x1
  4401d0:	ldr	w2, [x19, #24]
  4401d4:	cmp	x1, x20
  4401d8:	b.hi	44021c <_obstack_memory_used@@Base+0x31c4>  // b.pmore
  4401dc:	cbnz	w2, 44020c <_obstack_memory_used@@Base+0x31b4>
  4401e0:	ldp	x3, x0, [x19]
  4401e4:	mov	x1, x22
  4401e8:	mov	x2, x21
  4401ec:	add	x0, x3, x0
  4401f0:	bl	4025d0 <memcpy@plt>
  4401f4:	ldp	x0, x1, [x19]
  4401f8:	add	x0, x0, x21
  4401fc:	strb	wzr, [x0, x1]
  440200:	ldr	x1, [x19, #8]
  440204:	add	x1, x1, x21
  440208:	str	x1, [x19, #8]
  44020c:	ldp	x19, x20, [sp, #16]
  440210:	ldp	x21, x22, [sp, #32]
  440214:	ldp	x29, x30, [sp], #48
  440218:	ret
  44021c:	cbnz	w2, 44020c <_obstack_memory_used@@Base+0x31b4>
  440220:	cbz	x20, 440258 <_obstack_memory_used@@Base+0x3200>
  440224:	nop
  440228:	lsl	x20, x20, #1
  44022c:	cmp	x1, x20
  440230:	b.hi	440228 <_obstack_memory_used@@Base+0x31d0>  // b.pmore
  440234:	ldr	x0, [x19]
  440238:	mov	x1, x20
  44023c:	bl	4028c0 <realloc@plt>
  440240:	cbz	x0, 440268 <_obstack_memory_used@@Base+0x3210>
  440244:	ldr	w2, [x19, #24]
  440248:	str	x0, [x19]
  44024c:	str	x20, [x19, #16]
  440250:	cbz	w2, 4401e0 <_obstack_memory_used@@Base+0x3188>
  440254:	b	44020c <_obstack_memory_used@@Base+0x31b4>
  440258:	cmp	x1, #0x2
  44025c:	mov	x20, #0x2                   	// #2
  440260:	b.hi	440228 <_obstack_memory_used@@Base+0x31d0>  // b.pmore
  440264:	b	440234 <_obstack_memory_used@@Base+0x31dc>
  440268:	ldr	x0, [x19]
  44026c:	bl	402a80 <free@plt>
  440270:	stp	xzr, xzr, [x19]
  440274:	mov	w0, #0x1                   	// #1
  440278:	str	xzr, [x19, #16]
  44027c:	str	w0, [x19, #24]
  440280:	b	44020c <_obstack_memory_used@@Base+0x31b4>
  440284:	nop
  440288:	stp	x29, x30, [sp, #-112]!
  44028c:	mov	x29, sp
  440290:	ldr	x2, [x0, #24]
  440294:	stp	x19, x20, [sp, #16]
  440298:	mov	x19, x0
  44029c:	str	xzr, [sp, #104]
  4402a0:	ldrb	w3, [x2]
  4402a4:	cmp	w3, w1, uxtb
  4402a8:	b.eq	4409a8 <_obstack_memory_used@@Base+0x3950>  // b.none
  4402ac:	stp	x21, x22, [sp, #32]
  4402b0:	add	x21, sp, #0x68
  4402b4:	mov	w22, #0x1                   	// #1
  4402b8:	stp	x23, x24, [sp, #48]
  4402bc:	and	w23, w1, #0xff
  4402c0:	mov	w24, #0x6d                  	// #109
  4402c4:	stp	x25, x26, [sp, #64]
  4402c8:	ldr	w25, [x19, #76]
  4402cc:	str	w22, [x19, #76]
  4402d0:	ldrb	w0, [x2]
  4402d4:	cmp	w0, #0x4c
  4402d8:	b.eq	4404a8 <_obstack_memory_used@@Base+0x3450>  // b.none
  4402dc:	cmp	w0, #0x54
  4402e0:	b.eq	440538 <_obstack_memory_used@@Base+0x34e0>  // b.none
  4402e4:	cmp	w0, #0x73
  4402e8:	b.eq	440468 <_obstack_memory_used@@Base+0x3410>  // b.none
  4402ec:	cmp	w0, #0x66
  4402f0:	b.ne	44038c <_obstack_memory_used@@Base+0x3334>  // b.any
  4402f4:	ldrb	w0, [x2, #1]
  4402f8:	cmp	w0, #0x70
  4402fc:	b.eq	440548 <_obstack_memory_used@@Base+0x34f0>  // b.none
  440300:	mov	x0, x19
  440304:	bl	442ca8 <_obstack_memory_used@@Base+0x5c50>
  440308:	mov	x20, x0
  44030c:	cbz	x0, 44036c <_obstack_memory_used@@Base+0x3314>
  440310:	ldr	w0, [x0]
  440314:	cmp	w0, #0x32
  440318:	b.eq	4405b0 <_obstack_memory_used@@Base+0x3558>  // b.none
  44031c:	cmp	w0, #0x34
  440320:	b.eq	4409c8 <_obstack_memory_used@@Base+0x3970>  // b.none
  440324:	b.hi	440368 <_obstack_memory_used@@Base+0x3310>  // b.pmore
  440328:	cmp	w0, #0x33
  44032c:	b.ne	440368 <_obstack_memory_used@@Base+0x3310>  // b.any
  440330:	ldr	w0, [x20, #8]
  440334:	cmp	w0, #0x2
  440338:	b.eq	440368 <_obstack_memory_used@@Base+0x3310>  // b.none
  44033c:	b.gt	440368 <_obstack_memory_used@@Base+0x3310>
  440340:	cbnz	w0, 440778 <_obstack_memory_used@@Base+0x3720>
  440344:	mov	x2, x20
  440348:	mov	x0, x19
  44034c:	mov	x3, #0x0                   	// #0
  440350:	mov	w1, #0x36                  	// #54
  440354:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440358:	mov	x20, x0
  44035c:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  440360:	ldr	x27, [sp, #80]
  440364:	nop
  440368:	mov	x20, #0x0                   	// #0
  44036c:	str	w25, [x19, #76]
  440370:	mov	x0, x20
  440374:	ldp	x19, x20, [sp, #16]
  440378:	ldp	x21, x22, [sp, #32]
  44037c:	ldp	x23, x24, [sp, #48]
  440380:	ldp	x25, x26, [sp, #64]
  440384:	ldp	x29, x30, [sp], #112
  440388:	ret
  44038c:	sub	w1, w0, #0x30
  440390:	and	w1, w1, #0xff
  440394:	cmp	w1, #0x9
  440398:	b.hi	4404b8 <_obstack_memory_used@@Base+0x3460>  // b.pmore
  44039c:	mov	x0, x19
  4403a0:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  4403a4:	mov	x20, x0
  4403a8:	cbz	x0, 44036c <_obstack_memory_used@@Base+0x3314>
  4403ac:	ldr	x0, [x19, #24]
  4403b0:	ldrb	w1, [x0]
  4403b4:	cmp	w1, #0x49
  4403b8:	b.eq	440418 <_obstack_memory_used@@Base+0x33c0>  // b.none
  4403bc:	str	w25, [x19, #76]
  4403c0:	mov	x2, x20
  4403c4:	mov	x0, x19
  4403c8:	mov	x3, #0x0                   	// #0
  4403cc:	mov	w1, #0x2e                  	// #46
  4403d0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4403d4:	str	x0, [x21]
  4403d8:	cbz	x0, 440448 <_obstack_memory_used@@Base+0x33f0>
  4403dc:	ldr	x2, [x19, #24]
  4403e0:	add	x21, x0, #0x10
  4403e4:	ldrb	w0, [x2]
  4403e8:	cmp	w0, w23
  4403ec:	b.ne	4402c8 <_obstack_memory_used@@Base+0x3270>  // b.any
  4403f0:	ldr	x20, [sp, #104]
  4403f4:	add	x2, x2, #0x1
  4403f8:	str	x2, [x19, #24]
  4403fc:	mov	x0, x20
  440400:	ldp	x19, x20, [sp, #16]
  440404:	ldp	x21, x22, [sp, #32]
  440408:	ldp	x23, x24, [sp, #48]
  44040c:	ldp	x25, x26, [sp, #64]
  440410:	ldp	x29, x30, [sp], #112
  440414:	ret
  440418:	add	x0, x0, #0x1
  44041c:	str	x0, [x19, #24]
  440420:	mov	x0, x19
  440424:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  440428:	mov	x3, x0
  44042c:	mov	x2, x20
  440430:	mov	x0, x19
  440434:	mov	w1, #0x4                   	// #4
  440438:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  44043c:	mov	x20, x0
  440440:	str	w25, [x19, #76]
  440444:	cbnz	x20, 4403c0 <_obstack_memory_used@@Base+0x3368>
  440448:	mov	x20, #0x0                   	// #0
  44044c:	mov	x0, x20
  440450:	ldp	x19, x20, [sp, #16]
  440454:	ldp	x21, x22, [sp, #32]
  440458:	ldp	x23, x24, [sp, #48]
  44045c:	ldp	x25, x26, [sp, #64]
  440460:	ldp	x29, x30, [sp], #112
  440464:	ret
  440468:	ldrb	w0, [x2, #1]
  44046c:	cmp	w0, #0x72
  440470:	b.eq	4406f8 <_obstack_memory_used@@Base+0x36a0>  // b.none
  440474:	cmp	w0, #0x70
  440478:	b.ne	440300 <_obstack_memory_used@@Base+0x32a8>  // b.any
  44047c:	add	x2, x2, #0x2
  440480:	str	x2, [x19, #24]
  440484:	mov	x0, x19
  440488:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  44048c:	mov	x2, x0
  440490:	mov	x3, #0x0                   	// #0
  440494:	mov	x0, x19
  440498:	mov	w1, #0x4b                  	// #75
  44049c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4404a0:	mov	x20, x0
  4404a4:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  4404a8:	mov	x0, x19
  4404ac:	bl	443850 <_obstack_memory_used@@Base+0x67f8>
  4404b0:	mov	x20, x0
  4404b4:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  4404b8:	cmp	w0, #0x6f
  4404bc:	b.ne	4404d8 <_obstack_memory_used@@Base+0x3480>  // b.any
  4404c0:	ldrb	w0, [x2, #1]
  4404c4:	cmp	w0, #0x6e
  4404c8:	b.ne	440300 <_obstack_memory_used@@Base+0x32a8>  // b.any
  4404cc:	add	x2, x2, #0x2
  4404d0:	str	x2, [x19, #24]
  4404d4:	b	44039c <_obstack_memory_used@@Base+0x3344>
  4404d8:	cmp	w0, #0x69
  4404dc:	mov	w1, #0x74                  	// #116
  4404e0:	ccmp	w0, w1, #0x4, ne  // ne = any
  4404e4:	b.ne	440300 <_obstack_memory_used@@Base+0x32a8>  // b.any
  4404e8:	ldrb	w1, [x2, #1]
  4404ec:	cmp	w1, #0x6c
  4404f0:	b.ne	440300 <_obstack_memory_used@@Base+0x32a8>  // b.any
  4404f4:	add	x1, x2, #0x2
  4404f8:	str	x1, [x19, #24]
  4404fc:	cmp	w0, #0x74
  440500:	mov	x20, #0x0                   	// #0
  440504:	b.eq	440848 <_obstack_memory_used@@Base+0x37f0>  // b.none
  440508:	ldrb	w0, [x1, #1]
  44050c:	cbz	w0, 440368 <_obstack_memory_used@@Base+0x3310>
  440510:	mov	w1, #0x45                  	// #69
  440514:	mov	x0, x19
  440518:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  44051c:	mov	x3, x0
  440520:	mov	x2, x20
  440524:	mov	x0, x19
  440528:	mov	w1, #0x31                  	// #49
  44052c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440530:	mov	x20, x0
  440534:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  440538:	mov	x0, x19
  44053c:	bl	43f9d0 <_obstack_memory_used@@Base+0x2978>
  440540:	mov	x20, x0
  440544:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  440548:	add	x0, x2, #0x2
  44054c:	str	x0, [x19, #24]
  440550:	ldrb	w0, [x2, #2]
  440554:	cmp	w0, #0x54
  440558:	b.eq	4406e8 <_obstack_memory_used@@Base+0x3690>  // b.none
  44055c:	mov	x0, x19
  440560:	bl	43f958 <_obstack_memory_used@@Base+0x2900>
  440564:	mvn	x1, x0
  440568:	tst	x1, #0x7fffffff
  44056c:	b.eq	440368 <_obstack_memory_used@@Base+0x3310>  // b.none
  440570:	add	w0, w0, #0x1
  440574:	ldp	w1, w2, [x19, #40]
  440578:	cmp	w1, w2
  44057c:	b.ge	440368 <_obstack_memory_used@@Base+0x3310>  // b.tcont
  440580:	mov	w3, #0x18                  	// #24
  440584:	add	w4, w1, #0x1
  440588:	ldr	x2, [x19, #32]
  44058c:	smull	x1, w1, w3
  440590:	mov	w3, #0x6                   	// #6
  440594:	sxtw	x0, w0
  440598:	add	x20, x2, x1
  44059c:	str	wzr, [x20, #4]
  4405a0:	str	w4, [x19, #40]
  4405a4:	str	w3, [x2, x1]
  4405a8:	str	x0, [x20, #8]
  4405ac:	b	4403bc <_obstack_memory_used@@Base+0x3364>
  4405b0:	ldr	x2, [x20, #8]
  4405b4:	ldr	w0, [x19, #72]
  4405b8:	ldr	w1, [x2, #16]
  4405bc:	ldr	x26, [x2]
  4405c0:	sub	w1, w1, #0x2
  4405c4:	add	w0, w0, w1
  4405c8:	str	w0, [x19, #72]
  4405cc:	ldrb	w1, [x26]
  4405d0:	cmp	w1, #0x73
  4405d4:	b.eq	4406c4 <_obstack_memory_used@@Base+0x366c>  // b.none
  4405d8:	str	x27, [sp, #80]
  4405dc:	ldr	w27, [x2, #20]
  4405e0:	cmp	w27, #0x1
  4405e4:	b.eq	440790 <_obstack_memory_used@@Base+0x3738>  // b.none
  4405e8:	b.le	44076c <_obstack_memory_used@@Base+0x3714>
  4405ec:	cmp	w27, #0x2
  4405f0:	b.eq	4408b0 <_obstack_memory_used@@Base+0x3858>  // b.none
  4405f4:	cmp	w27, #0x3
  4405f8:	b.ne	440360 <_obstack_memory_used@@Base+0x3308>  // b.any
  4405fc:	cmp	w1, #0x71
  440600:	b.eq	440864 <_obstack_memory_used@@Base+0x380c>  // b.none
  440604:	ldrb	w0, [x26]
  440608:	cmp	w0, #0x66
  44060c:	b.eq	440a34 <_obstack_memory_used@@Base+0x39dc>  // b.none
  440610:	cmp	w0, #0x6e
  440614:	b.ne	4408a0 <_obstack_memory_used@@Base+0x3848>  // b.any
  440618:	ldrb	w0, [x26, #1]
  44061c:	mov	w1, #0x61                  	// #97
  440620:	cmp	w0, #0x77
  440624:	ccmp	w0, w1, #0x4, ne  // ne = any
  440628:	b.ne	4408a0 <_obstack_memory_used@@Base+0x3848>  // b.any
  44062c:	mov	w1, #0x5f                  	// #95
  440630:	mov	x0, x19
  440634:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  440638:	mov	x26, x0
  44063c:	mov	x0, x19
  440640:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  440644:	ldr	x1, [x19, #24]
  440648:	mov	x27, x0
  44064c:	ldrb	w0, [x1]
  440650:	cmp	w0, #0x45
  440654:	b.eq	440a94 <_obstack_memory_used@@Base+0x3a3c>  // b.none
  440658:	cmp	w0, #0x70
  44065c:	b.eq	440a6c <_obstack_memory_used@@Base+0x3a14>  // b.none
  440660:	cmp	w0, #0x69
  440664:	b.ne	4408a0 <_obstack_memory_used@@Base+0x3848>  // b.any
  440668:	ldrb	w0, [x1, #1]
  44066c:	cmp	w0, #0x6c
  440670:	b.ne	4408a0 <_obstack_memory_used@@Base+0x3848>  // b.any
  440674:	mov	x0, x19
  440678:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  44067c:	mov	x3, x0
  440680:	mov	x2, x27
  440684:	mov	w1, #0x3c                  	// #60
  440688:	mov	x0, x19
  44068c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440690:	mov	x2, x26
  440694:	mov	x3, x0
  440698:	mov	w1, #0x3b                  	// #59
  44069c:	mov	x0, x19
  4406a0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4406a4:	mov	x3, x0
  4406a8:	mov	x2, x20
  4406ac:	mov	x0, x19
  4406b0:	mov	w1, #0x3a                  	// #58
  4406b4:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4406b8:	mov	x20, x0
  4406bc:	ldr	x27, [sp, #80]
  4406c0:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  4406c4:	ldrb	w0, [x26, #1]
  4406c8:	cmp	w0, #0x74
  4406cc:	b.ne	4405d8 <_obstack_memory_used@@Base+0x3580>  // b.any
  4406d0:	ldrb	w0, [x26, #2]
  4406d4:	cbnz	w0, 4405d8 <_obstack_memory_used@@Base+0x3580>
  4406d8:	mov	x0, x19
  4406dc:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4406e0:	mov	x3, x0
  4406e4:	b	4407d4 <_obstack_memory_used@@Base+0x377c>
  4406e8:	add	x2, x2, #0x3
  4406ec:	mov	w0, #0x0                   	// #0
  4406f0:	str	x2, [x19, #24]
  4406f4:	b	440574 <_obstack_memory_used@@Base+0x351c>
  4406f8:	add	x2, x2, #0x2
  4406fc:	str	x2, [x19, #24]
  440700:	mov	x0, x19
  440704:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  440708:	mov	x20, x0
  44070c:	mov	x0, x19
  440710:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  440714:	ldr	x1, [x19, #24]
  440718:	mov	x26, x0
  44071c:	mov	x3, x26
  440720:	ldrb	w0, [x1]
  440724:	cmp	w0, #0x49
  440728:	b.ne	440754 <_obstack_memory_used@@Base+0x36fc>  // b.any
  44072c:	add	x1, x1, #0x1
  440730:	str	x1, [x19, #24]
  440734:	mov	x0, x19
  440738:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  44073c:	mov	x3, x0
  440740:	mov	x2, x26
  440744:	mov	x0, x19
  440748:	mov	w1, #0x4                   	// #4
  44074c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440750:	mov	x3, x0
  440754:	mov	x2, x20
  440758:	mov	x0, x19
  44075c:	mov	w1, #0x1                   	// #1
  440760:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440764:	mov	x20, x0
  440768:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  44076c:	cbnz	w27, 440360 <_obstack_memory_used@@Base+0x3308>
  440770:	ldr	x27, [sp, #80]
  440774:	b	440344 <_obstack_memory_used@@Base+0x32ec>
  440778:	cmp	w0, #0x1
  44077c:	b.ne	440368 <_obstack_memory_used@@Base+0x3310>  // b.any
  440780:	mov	x0, x19
  440784:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440788:	mov	x3, x0
  44078c:	b	4407d4 <_obstack_memory_used@@Base+0x377c>
  440790:	ldrb	w0, [x26]
  440794:	cmp	w0, #0x70
  440798:	ccmp	w0, w24, #0x4, ne  // ne = any
  44079c:	b.eq	440818 <_obstack_memory_used@@Base+0x37c0>  // b.none
  4407a0:	mov	w27, #0x0                   	// #0
  4407a4:	cmp	w1, #0x73
  4407a8:	b.ne	4407ec <_obstack_memory_used@@Base+0x3794>  // b.any
  4407ac:	ldrb	w0, [x26, #1]
  4407b0:	cmp	w0, #0x50
  4407b4:	b.ne	4407ec <_obstack_memory_used@@Base+0x3794>  // b.any
  4407b8:	ldrb	w0, [x26, #2]
  4407bc:	cbnz	w0, 4407ec <_obstack_memory_used@@Base+0x3794>
  4407c0:	mov	x0, x19
  4407c4:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  4407c8:	mov	x3, x0
  4407cc:	cbnz	w27, 4407fc <_obstack_memory_used@@Base+0x37a4>
  4407d0:	ldr	x27, [sp, #80]
  4407d4:	mov	x2, x20
  4407d8:	mov	x0, x19
  4407dc:	mov	w1, #0x37                  	// #55
  4407e0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4407e4:	mov	x20, x0
  4407e8:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  4407ec:	mov	x0, x19
  4407f0:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  4407f4:	mov	x3, x0
  4407f8:	cbz	w27, 4407d0 <_obstack_memory_used@@Base+0x3778>
  4407fc:	mov	x2, x3
  440800:	mov	x0, x19
  440804:	mov	w1, #0x39                  	// #57
  440808:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  44080c:	mov	x3, x0
  440810:	ldr	x27, [sp, #80]
  440814:	b	4407d4 <_obstack_memory_used@@Base+0x377c>
  440818:	ldrb	w2, [x26, #1]
  44081c:	cmp	w2, w0
  440820:	b.ne	4407a0 <_obstack_memory_used@@Base+0x3748>  // b.any
  440824:	ldr	x0, [x19, #24]
  440828:	ldrb	w2, [x0]
  44082c:	cmp	w2, #0x5f
  440830:	b.ne	4407a4 <_obstack_memory_used@@Base+0x374c>  // b.any
  440834:	add	x0, x0, #0x1
  440838:	str	x0, [x19, #24]
  44083c:	mov	w27, #0x0                   	// #0
  440840:	ldrb	w1, [x26]
  440844:	b	4407a4 <_obstack_memory_used@@Base+0x374c>
  440848:	mov	x0, x19
  44084c:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  440850:	ldr	x1, [x19, #24]
  440854:	mov	x20, x0
  440858:	ldrb	w0, [x1, #1]
  44085c:	cbnz	w0, 440510 <_obstack_memory_used@@Base+0x34b8>
  440860:	b	440368 <_obstack_memory_used@@Base+0x3310>
  440864:	ldrb	w0, [x26, #1]
  440868:	cmp	w0, #0x75
  44086c:	b.ne	440604 <_obstack_memory_used@@Base+0x35ac>  // b.any
  440870:	ldrb	w0, [x26, #2]
  440874:	cbnz	w0, 440604 <_obstack_memory_used@@Base+0x35ac>
  440878:	mov	x0, x19
  44087c:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440880:	mov	x26, x0
  440884:	mov	x0, x19
  440888:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  44088c:	mov	x27, x0
  440890:	mov	x0, x19
  440894:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440898:	mov	x3, x0
  44089c:	cbnz	x0, 440680 <_obstack_memory_used@@Base+0x3628>
  4408a0:	mov	x20, #0x0                   	// #0
  4408a4:	ldr	x27, [sp, #80]
  4408a8:	str	w25, [x19, #76]
  4408ac:	b	440370 <_obstack_memory_used@@Base+0x3318>
  4408b0:	ldr	x0, [x20, #8]
  4408b4:	ldr	x0, [x0]
  4408b8:	ldrb	w1, [x0, #1]
  4408bc:	cmp	w1, #0x63
  4408c0:	b.eq	4409f4 <_obstack_memory_used@@Base+0x399c>  // b.none
  4408c4:	ldrb	w0, [x26]
  4408c8:	cmp	w0, #0x66
  4408cc:	b.eq	440a24 <_obstack_memory_used@@Base+0x39cc>  // b.none
  4408d0:	mov	x0, x19
  4408d4:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  4408d8:	mov	x27, x0
  4408dc:	ldrb	w1, [x26]
  4408e0:	cmp	w1, #0x63
  4408e4:	b.ne	440910 <_obstack_memory_used@@Base+0x38b8>  // b.any
  4408e8:	ldrb	w0, [x26, #1]
  4408ec:	cmp	w0, #0x6c
  4408f0:	b.ne	440910 <_obstack_memory_used@@Base+0x38b8>  // b.any
  4408f4:	ldrb	w0, [x26, #2]
  4408f8:	cbnz	w0, 440910 <_obstack_memory_used@@Base+0x38b8>
  4408fc:	mov	x0, x19
  440900:	mov	w1, #0x45                  	// #69
  440904:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  440908:	mov	x26, x0
  44090c:	b	440948 <_obstack_memory_used@@Base+0x38f0>
  440910:	cmp	w1, #0x64
  440914:	b.ne	44097c <_obstack_memory_used@@Base+0x3924>  // b.any
  440918:	ldrb	w0, [x26, #1]
  44091c:	cmp	w0, #0x74
  440920:	b.ne	44097c <_obstack_memory_used@@Base+0x3924>  // b.any
  440924:	ldrb	w0, [x26, #2]
  440928:	cbnz	w0, 44097c <_obstack_memory_used@@Base+0x3924>
  44092c:	mov	x0, x19
  440930:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  440934:	ldr	x1, [x19, #24]
  440938:	mov	x26, x0
  44093c:	ldrb	w0, [x1]
  440940:	cmp	w0, #0x49
  440944:	b.eq	440a40 <_obstack_memory_used@@Base+0x39e8>  // b.none
  440948:	mov	x2, x27
  44094c:	mov	x3, x26
  440950:	mov	w1, #0x39                  	// #57
  440954:	mov	x0, x19
  440958:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  44095c:	mov	x3, x0
  440960:	mov	x2, x20
  440964:	mov	x0, x19
  440968:	mov	w1, #0x38                  	// #56
  44096c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440970:	mov	x20, x0
  440974:	ldr	x27, [sp, #80]
  440978:	b	440440 <_obstack_memory_used@@Base+0x33e8>
  44097c:	cmp	w1, #0x70
  440980:	b.ne	440998 <_obstack_memory_used@@Base+0x3940>  // b.any
  440984:	ldrb	w0, [x26, #1]
  440988:	cmp	w0, #0x74
  44098c:	b.ne	440998 <_obstack_memory_used@@Base+0x3940>  // b.any
  440990:	ldrb	w0, [x26, #2]
  440994:	cbz	w0, 44092c <_obstack_memory_used@@Base+0x38d4>
  440998:	mov	x0, x19
  44099c:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  4409a0:	mov	x26, x0
  4409a4:	b	440948 <_obstack_memory_used@@Base+0x38f0>
  4409a8:	add	x2, x2, #0x1
  4409ac:	str	x2, [x0, #24]
  4409b0:	ldp	x19, x20, [sp, #16]
  4409b4:	mov	x3, #0x0                   	// #0
  4409b8:	ldp	x29, x30, [sp], #112
  4409bc:	mov	w1, #0x2e                  	// #46
  4409c0:	mov	x2, #0x0                   	// #0
  4409c4:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4409c8:	ldr	x0, [x19, #24]
  4409cc:	ldrb	w1, [x0]
  4409d0:	cmp	w1, #0x5f
  4409d4:	b.ne	440780 <_obstack_memory_used@@Base+0x3728>  // b.any
  4409d8:	add	x0, x0, #0x1
  4409dc:	str	x0, [x19, #24]
  4409e0:	mov	w1, #0x45                  	// #69
  4409e4:	mov	x0, x19
  4409e8:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  4409ec:	mov	x3, x0
  4409f0:	b	4407d4 <_obstack_memory_used@@Base+0x377c>
  4409f4:	ldrb	w0, [x0]
  4409f8:	sub	w1, w0, #0x72
  4409fc:	sub	w0, w0, #0x63
  440a00:	and	w1, w1, #0xff
  440a04:	and	w0, w0, #0xff
  440a08:	cmp	w1, #0x1
  440a0c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  440a10:	b.hi	4408c4 <_obstack_memory_used@@Base+0x386c>  // b.pmore
  440a14:	mov	x0, x19
  440a18:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  440a1c:	mov	x27, x0
  440a20:	b	4408dc <_obstack_memory_used@@Base+0x3884>
  440a24:	mov	x0, x19
  440a28:	bl	442ca8 <_obstack_memory_used@@Base+0x5c50>
  440a2c:	mov	x27, x0
  440a30:	b	4408dc <_obstack_memory_used@@Base+0x3884>
  440a34:	mov	x0, x19
  440a38:	bl	442ca8 <_obstack_memory_used@@Base+0x5c50>
  440a3c:	b	440880 <_obstack_memory_used@@Base+0x3828>
  440a40:	add	x1, x1, #0x1
  440a44:	str	x1, [x19, #24]
  440a48:	mov	x0, x19
  440a4c:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  440a50:	mov	x3, x0
  440a54:	mov	x2, x26
  440a58:	mov	x0, x19
  440a5c:	mov	w1, #0x4                   	// #4
  440a60:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440a64:	mov	x26, x0
  440a68:	b	440948 <_obstack_memory_used@@Base+0x38f0>
  440a6c:	ldrb	w0, [x1, #1]
  440a70:	cmp	w0, #0x69
  440a74:	b.ne	4408a0 <_obstack_memory_used@@Base+0x3848>  // b.any
  440a78:	add	x1, x1, #0x2
  440a7c:	str	x1, [x19, #24]
  440a80:	mov	x0, x19
  440a84:	mov	w1, #0x45                  	// #69
  440a88:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  440a8c:	mov	x3, x0
  440a90:	b	440680 <_obstack_memory_used@@Base+0x3628>
  440a94:	add	x1, x1, #0x1
  440a98:	mov	x3, #0x0                   	// #0
  440a9c:	str	x1, [x19, #24]
  440aa0:	b	440680 <_obstack_memory_used@@Base+0x3628>
  440aa4:	nop
  440aa8:	ldr	x2, [x0, #24]
  440aac:	ldrb	w1, [x2]
  440ab0:	cmp	w1, #0x4c
  440ab4:	b.eq	440c44 <_obstack_memory_used@@Base+0x3bec>  // b.none
  440ab8:	cmp	w1, #0x54
  440abc:	b.eq	440cc8 <_obstack_memory_used@@Base+0x3c70>  // b.none
  440ac0:	stp	x29, x30, [sp, #-48]!
  440ac4:	cmp	w1, #0x73
  440ac8:	mov	x29, sp
  440acc:	stp	x19, x20, [sp, #16]
  440ad0:	mov	x19, x0
  440ad4:	b.eq	440b8c <_obstack_memory_used@@Base+0x3b34>  // b.none
  440ad8:	cmp	w1, #0x66
  440adc:	b.eq	440b20 <_obstack_memory_used@@Base+0x3ac8>  // b.none
  440ae0:	sub	w3, w1, #0x30
  440ae4:	and	w3, w3, #0xff
  440ae8:	cmp	w3, #0x9
  440aec:	b.hi	440c48 <_obstack_memory_used@@Base+0x3bf0>  // b.pmore
  440af0:	mov	x0, x19
  440af4:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  440af8:	mov	x20, x0
  440afc:	cbz	x0, 440c30 <_obstack_memory_used@@Base+0x3bd8>
  440b00:	ldr	x0, [x19, #24]
  440b04:	ldrb	w1, [x0]
  440b08:	cmp	w1, #0x49
  440b0c:	b.eq	440da0 <_obstack_memory_used@@Base+0x3d48>  // b.none
  440b10:	mov	x0, x20
  440b14:	ldp	x19, x20, [sp, #16]
  440b18:	ldp	x29, x30, [sp], #48
  440b1c:	ret
  440b20:	ldrb	w1, [x2, #1]
  440b24:	cmp	w1, #0x70
  440b28:	b.eq	440bc8 <_obstack_memory_used@@Base+0x3b70>  // b.none
  440b2c:	mov	x0, x19
  440b30:	bl	442ca8 <_obstack_memory_used@@Base+0x5c50>
  440b34:	mov	x20, x0
  440b38:	cbz	x0, 440c30 <_obstack_memory_used@@Base+0x3bd8>
  440b3c:	ldr	w0, [x0]
  440b40:	cmp	w0, #0x32
  440b44:	b.eq	440ccc <_obstack_memory_used@@Base+0x3c74>  // b.none
  440b48:	cmp	w0, #0x34
  440b4c:	b.eq	4410f8 <_obstack_memory_used@@Base+0x40a0>  // b.none
  440b50:	b.hi	440c30 <_obstack_memory_used@@Base+0x3bd8>  // b.pmore
  440b54:	cmp	w0, #0x33
  440b58:	b.ne	440c30 <_obstack_memory_used@@Base+0x3bd8>  // b.any
  440b5c:	ldr	w0, [x20, #8]
  440b60:	cmp	w0, #0x2
  440b64:	b.eq	440c30 <_obstack_memory_used@@Base+0x3bd8>  // b.none
  440b68:	b.gt	440c30 <_obstack_memory_used@@Base+0x3bd8>
  440b6c:	cbnz	w0, 440e94 <_obstack_memory_used@@Base+0x3e3c>
  440b70:	mov	x2, x20
  440b74:	mov	x0, x19
  440b78:	ldp	x19, x20, [sp, #16]
  440b7c:	mov	x3, #0x0                   	// #0
  440b80:	ldp	x29, x30, [sp], #48
  440b84:	mov	w1, #0x36                  	// #54
  440b88:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440b8c:	ldrb	w1, [x2, #1]
  440b90:	cmp	w1, #0x72
  440b94:	b.eq	440dcc <_obstack_memory_used@@Base+0x3d74>  // b.none
  440b98:	cmp	w1, #0x70
  440b9c:	b.ne	440b2c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  440ba0:	add	x2, x2, #0x2
  440ba4:	str	x2, [x0, #24]
  440ba8:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440bac:	mov	x2, x0
  440bb0:	mov	x0, x19
  440bb4:	mov	x3, #0x0                   	// #0
  440bb8:	ldp	x19, x20, [sp, #16]
  440bbc:	mov	w1, #0x4b                  	// #75
  440bc0:	ldp	x29, x30, [sp], #48
  440bc4:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440bc8:	add	x1, x2, #0x2
  440bcc:	str	x1, [x0, #24]
  440bd0:	ldrb	w1, [x2, #2]
  440bd4:	cmp	w1, #0x54
  440bd8:	b.eq	440f58 <_obstack_memory_used@@Base+0x3f00>  // b.none
  440bdc:	bl	43f958 <_obstack_memory_used@@Base+0x2900>
  440be0:	mvn	x1, x0
  440be4:	add	w0, w0, #0x1
  440be8:	tst	x1, #0x7fffffff
  440bec:	b.eq	440c30 <_obstack_memory_used@@Base+0x3bd8>  // b.none
  440bf0:	ldp	w1, w2, [x19, #40]
  440bf4:	cmp	w1, w2
  440bf8:	b.ge	440c30 <_obstack_memory_used@@Base+0x3bd8>  // b.tcont
  440bfc:	mov	w3, #0x18                  	// #24
  440c00:	add	w4, w1, #0x1
  440c04:	ldr	x2, [x19, #32]
  440c08:	smull	x1, w1, w3
  440c0c:	mov	w3, #0x6                   	// #6
  440c10:	sxtw	x0, w0
  440c14:	add	x20, x2, x1
  440c18:	str	wzr, [x20, #4]
  440c1c:	str	w4, [x19, #40]
  440c20:	str	w3, [x2, x1]
  440c24:	str	x0, [x20, #8]
  440c28:	b	440b10 <_obstack_memory_used@@Base+0x3ab8>
  440c2c:	ldp	x21, x22, [sp, #32]
  440c30:	mov	x20, #0x0                   	// #0
  440c34:	mov	x0, x20
  440c38:	ldp	x19, x20, [sp, #16]
  440c3c:	ldp	x29, x30, [sp], #48
  440c40:	ret
  440c44:	b	443850 <_obstack_memory_used@@Base+0x67f8>
  440c48:	cmp	w1, #0x6f
  440c4c:	b.ne	440c68 <_obstack_memory_used@@Base+0x3c10>  // b.any
  440c50:	ldrb	w0, [x2, #1]
  440c54:	cmp	w0, #0x6e
  440c58:	b.ne	440b2c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  440c5c:	add	x2, x2, #0x2
  440c60:	str	x2, [x19, #24]
  440c64:	b	440af0 <_obstack_memory_used@@Base+0x3a98>
  440c68:	cmp	w1, #0x69
  440c6c:	mov	w3, #0x74                  	// #116
  440c70:	ccmp	w1, w3, #0x4, ne  // ne = any
  440c74:	b.ne	440b2c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  440c78:	ldrb	w3, [x2, #1]
  440c7c:	cmp	w3, #0x6c
  440c80:	b.ne	440b2c <_obstack_memory_used@@Base+0x3ad4>  // b.any
  440c84:	add	x3, x2, #0x2
  440c88:	str	x3, [x0, #24]
  440c8c:	cmp	w1, #0x74
  440c90:	mov	x20, #0x0                   	// #0
  440c94:	b.eq	440e84 <_obstack_memory_used@@Base+0x3e2c>  // b.none
  440c98:	ldrb	w0, [x3, #1]
  440c9c:	cbz	w0, 440c30 <_obstack_memory_used@@Base+0x3bd8>
  440ca0:	mov	x0, x19
  440ca4:	mov	w1, #0x45                  	// #69
  440ca8:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  440cac:	mov	x3, x0
  440cb0:	mov	x2, x20
  440cb4:	mov	x0, x19
  440cb8:	ldp	x19, x20, [sp, #16]
  440cbc:	mov	w1, #0x31                  	// #49
  440cc0:	ldp	x29, x30, [sp], #48
  440cc4:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440cc8:	b	43f9d0 <_obstack_memory_used@@Base+0x2978>
  440ccc:	ldr	x2, [x20, #8]
  440cd0:	stp	x21, x22, [sp, #32]
  440cd4:	ldr	w0, [x19, #72]
  440cd8:	ldr	w1, [x2, #16]
  440cdc:	ldr	x21, [x2]
  440ce0:	sub	w1, w1, #0x2
  440ce4:	add	w0, w0, w1
  440ce8:	str	w0, [x19, #72]
  440cec:	ldrb	w1, [x21]
  440cf0:	cmp	w1, #0x73
  440cf4:	b.eq	440e1c <_obstack_memory_used@@Base+0x3dc4>  // b.none
  440cf8:	ldr	w22, [x2, #20]
  440cfc:	cmp	w22, #0x1
  440d00:	b.eq	440ecc <_obstack_memory_used@@Base+0x3e74>  // b.none
  440d04:	b.le	440ec0 <_obstack_memory_used@@Base+0x3e68>
  440d08:	cmp	w22, #0x2
  440d0c:	b.eq	440f84 <_obstack_memory_used@@Base+0x3f2c>  // b.none
  440d10:	cmp	w22, #0x3
  440d14:	b.ne	440c2c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  440d18:	cmp	w1, #0x71
  440d1c:	b.ne	441014 <_obstack_memory_used@@Base+0x3fbc>  // b.any
  440d20:	ldrb	w0, [x21, #1]
  440d24:	cmp	w0, #0x75
  440d28:	b.ne	441014 <_obstack_memory_used@@Base+0x3fbc>  // b.any
  440d2c:	ldrb	w0, [x21, #2]
  440d30:	cbnz	w0, 441014 <_obstack_memory_used@@Base+0x3fbc>
  440d34:	mov	x0, x19
  440d38:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440d3c:	mov	x21, x0
  440d40:	mov	x0, x19
  440d44:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440d48:	mov	x22, x0
  440d4c:	mov	x0, x19
  440d50:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440d54:	mov	x3, x0
  440d58:	cbz	x0, 440c2c <_obstack_memory_used@@Base+0x3bd4>
  440d5c:	mov	x2, x22
  440d60:	mov	x0, x19
  440d64:	mov	w1, #0x3c                  	// #60
  440d68:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440d6c:	mov	x2, x21
  440d70:	mov	x3, x0
  440d74:	mov	w1, #0x3b                  	// #59
  440d78:	mov	x0, x19
  440d7c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440d80:	mov	x3, x0
  440d84:	mov	x2, x20
  440d88:	mov	x0, x19
  440d8c:	ldp	x19, x20, [sp, #16]
  440d90:	mov	w1, #0x3a                  	// #58
  440d94:	ldp	x21, x22, [sp, #32]
  440d98:	ldp	x29, x30, [sp], #48
  440d9c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440da0:	add	x0, x0, #0x1
  440da4:	str	x0, [x19, #24]
  440da8:	mov	x0, x19
  440dac:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  440db0:	mov	x3, x0
  440db4:	mov	x2, x20
  440db8:	mov	x0, x19
  440dbc:	ldp	x19, x20, [sp, #16]
  440dc0:	mov	w1, #0x4                   	// #4
  440dc4:	ldp	x29, x30, [sp], #48
  440dc8:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440dcc:	add	x2, x2, #0x2
  440dd0:	stp	x21, x22, [sp, #32]
  440dd4:	str	x2, [x0, #24]
  440dd8:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  440ddc:	mov	x20, x0
  440de0:	mov	x0, x19
  440de4:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  440de8:	ldr	x1, [x19, #24]
  440dec:	mov	x21, x0
  440df0:	mov	x3, x21
  440df4:	ldrb	w0, [x1]
  440df8:	cmp	w0, #0x49
  440dfc:	b.eq	440e58 <_obstack_memory_used@@Base+0x3e00>  // b.none
  440e00:	mov	x2, x20
  440e04:	mov	x0, x19
  440e08:	ldp	x19, x20, [sp, #16]
  440e0c:	mov	w1, #0x1                   	// #1
  440e10:	ldp	x21, x22, [sp, #32]
  440e14:	ldp	x29, x30, [sp], #48
  440e18:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440e1c:	ldrb	w0, [x21, #1]
  440e20:	cmp	w0, #0x74
  440e24:	b.ne	440cf8 <_obstack_memory_used@@Base+0x3ca0>  // b.any
  440e28:	ldrb	w0, [x21, #2]
  440e2c:	cbnz	w0, 440cf8 <_obstack_memory_used@@Base+0x3ca0>
  440e30:	mov	x0, x19
  440e34:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  440e38:	mov	x2, x20
  440e3c:	mov	x3, x0
  440e40:	mov	x0, x19
  440e44:	mov	w1, #0x37                  	// #55
  440e48:	ldp	x19, x20, [sp, #16]
  440e4c:	ldp	x21, x22, [sp, #32]
  440e50:	ldp	x29, x30, [sp], #48
  440e54:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440e58:	add	x1, x1, #0x1
  440e5c:	str	x1, [x19, #24]
  440e60:	mov	x0, x19
  440e64:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  440e68:	mov	x3, x0
  440e6c:	mov	x2, x21
  440e70:	mov	x0, x19
  440e74:	mov	w1, #0x4                   	// #4
  440e78:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440e7c:	mov	x3, x0
  440e80:	b	440e00 <_obstack_memory_used@@Base+0x3da8>
  440e84:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  440e88:	mov	x20, x0
  440e8c:	ldr	x3, [x19, #24]
  440e90:	b	440c98 <_obstack_memory_used@@Base+0x3c40>
  440e94:	cmp	w0, #0x1
  440e98:	b.ne	440c30 <_obstack_memory_used@@Base+0x3bd8>  // b.any
  440e9c:	mov	x0, x19
  440ea0:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440ea4:	mov	x3, x0
  440ea8:	mov	x2, x20
  440eac:	mov	x0, x19
  440eb0:	ldp	x19, x20, [sp, #16]
  440eb4:	mov	w1, #0x37                  	// #55
  440eb8:	ldp	x29, x30, [sp], #48
  440ebc:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440ec0:	cbnz	w22, 440c2c <_obstack_memory_used@@Base+0x3bd4>
  440ec4:	ldp	x21, x22, [sp, #32]
  440ec8:	b	440b70 <_obstack_memory_used@@Base+0x3b18>
  440ecc:	ldrb	w0, [x21]
  440ed0:	mov	w2, #0x6d                  	// #109
  440ed4:	cmp	w0, #0x70
  440ed8:	ccmp	w0, w2, #0x4, ne  // ne = any
  440edc:	b.ne	440eec <_obstack_memory_used@@Base+0x3e94>  // b.any
  440ee0:	ldrb	w2, [x21, #1]
  440ee4:	cmp	w2, w0
  440ee8:	b.eq	440f24 <_obstack_memory_used@@Base+0x3ecc>  // b.none
  440eec:	mov	w22, #0x0                   	// #0
  440ef0:	cmp	w1, #0x73
  440ef4:	b.ne	440f48 <_obstack_memory_used@@Base+0x3ef0>  // b.any
  440ef8:	ldrb	w0, [x21, #1]
  440efc:	cmp	w0, #0x50
  440f00:	b.ne	440f48 <_obstack_memory_used@@Base+0x3ef0>  // b.any
  440f04:	ldrb	w0, [x21, #2]
  440f08:	cbnz	w0, 440f48 <_obstack_memory_used@@Base+0x3ef0>
  440f0c:	mov	x0, x19
  440f10:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  440f14:	mov	x3, x0
  440f18:	cbnz	w22, 440f68 <_obstack_memory_used@@Base+0x3f10>
  440f1c:	ldp	x21, x22, [sp, #32]
  440f20:	b	440ea8 <_obstack_memory_used@@Base+0x3e50>
  440f24:	ldr	x0, [x19, #24]
  440f28:	ldrb	w2, [x0]
  440f2c:	cmp	w2, #0x5f
  440f30:	b.ne	440ef0 <_obstack_memory_used@@Base+0x3e98>  // b.any
  440f34:	add	x0, x0, #0x1
  440f38:	str	x0, [x19, #24]
  440f3c:	mov	w22, #0x0                   	// #0
  440f40:	ldrb	w1, [x21]
  440f44:	b	440ef0 <_obstack_memory_used@@Base+0x3e98>
  440f48:	mov	x0, x19
  440f4c:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440f50:	mov	x3, x0
  440f54:	b	440f18 <_obstack_memory_used@@Base+0x3ec0>
  440f58:	add	x2, x2, #0x3
  440f5c:	mov	w0, #0x0                   	// #0
  440f60:	str	x2, [x19, #24]
  440f64:	b	440bf0 <_obstack_memory_used@@Base+0x3b98>
  440f68:	mov	x2, x3
  440f6c:	mov	x0, x19
  440f70:	mov	w1, #0x39                  	// #57
  440f74:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440f78:	mov	x3, x0
  440f7c:	ldp	x21, x22, [sp, #32]
  440f80:	b	440ea8 <_obstack_memory_used@@Base+0x3e50>
  440f84:	ldr	x0, [x20, #8]
  440f88:	ldr	x0, [x0]
  440f8c:	ldrb	w1, [x0, #1]
  440f90:	cmp	w1, #0x63
  440f94:	b.eq	44113c <_obstack_memory_used@@Base+0x40e4>  // b.none
  440f98:	ldrb	w0, [x21]
  440f9c:	cmp	w0, #0x66
  440fa0:	b.eq	44116c <_obstack_memory_used@@Base+0x4114>  // b.none
  440fa4:	mov	x0, x19
  440fa8:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  440fac:	mov	x22, x0
  440fb0:	ldrb	w1, [x21]
  440fb4:	cmp	w1, #0x63
  440fb8:	b.ne	441094 <_obstack_memory_used@@Base+0x403c>  // b.any
  440fbc:	ldrb	w0, [x21, #1]
  440fc0:	cmp	w0, #0x6c
  440fc4:	b.ne	441094 <_obstack_memory_used@@Base+0x403c>  // b.any
  440fc8:	ldrb	w0, [x21, #2]
  440fcc:	cbnz	w0, 441094 <_obstack_memory_used@@Base+0x403c>
  440fd0:	mov	x0, x19
  440fd4:	mov	w1, #0x45                  	// #69
  440fd8:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  440fdc:	mov	x21, x0
  440fe0:	mov	x3, x21
  440fe4:	mov	x2, x22
  440fe8:	mov	x0, x19
  440fec:	mov	w1, #0x39                  	// #57
  440ff0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  440ff4:	mov	x3, x0
  440ff8:	mov	x2, x20
  440ffc:	mov	x0, x19
  441000:	ldp	x19, x20, [sp, #16]
  441004:	mov	w1, #0x38                  	// #56
  441008:	ldp	x21, x22, [sp, #32]
  44100c:	ldp	x29, x30, [sp], #48
  441010:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441014:	ldrb	w0, [x21]
  441018:	cmp	w0, #0x66
  44101c:	b.eq	441194 <_obstack_memory_used@@Base+0x413c>  // b.none
  441020:	cmp	w0, #0x6e
  441024:	b.ne	440c2c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  441028:	ldrb	w0, [x21, #1]
  44102c:	mov	w1, #0x61                  	// #97
  441030:	cmp	w0, #0x77
  441034:	ccmp	w0, w1, #0x4, ne  // ne = any
  441038:	b.ne	440c2c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  44103c:	mov	w1, #0x5f                  	// #95
  441040:	mov	x0, x19
  441044:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  441048:	mov	x21, x0
  44104c:	mov	x0, x19
  441050:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441054:	ldr	x1, [x19, #24]
  441058:	mov	x22, x0
  44105c:	ldrb	w0, [x1]
  441060:	cmp	w0, #0x45
  441064:	b.eq	4411c8 <_obstack_memory_used@@Base+0x4170>  // b.none
  441068:	cmp	w0, #0x70
  44106c:	b.eq	4411a0 <_obstack_memory_used@@Base+0x4148>  // b.none
  441070:	cmp	w0, #0x69
  441074:	b.ne	440c2c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  441078:	ldrb	w0, [x1, #1]
  44107c:	cmp	w0, #0x6c
  441080:	b.ne	440c2c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  441084:	mov	x0, x19
  441088:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  44108c:	mov	x3, x0
  441090:	b	440d5c <_obstack_memory_used@@Base+0x3d04>
  441094:	cmp	w1, #0x64
  441098:	b.ne	441124 <_obstack_memory_used@@Base+0x40cc>  // b.any
  44109c:	ldrb	w0, [x21, #1]
  4410a0:	cmp	w0, #0x74
  4410a4:	b.ne	441124 <_obstack_memory_used@@Base+0x40cc>  // b.any
  4410a8:	ldrb	w0, [x21, #2]
  4410ac:	cbnz	w0, 441124 <_obstack_memory_used@@Base+0x40cc>
  4410b0:	mov	x0, x19
  4410b4:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  4410b8:	ldr	x1, [x19, #24]
  4410bc:	mov	x21, x0
  4410c0:	ldrb	w0, [x1]
  4410c4:	cmp	w0, #0x49
  4410c8:	b.ne	440fe0 <_obstack_memory_used@@Base+0x3f88>  // b.any
  4410cc:	add	x1, x1, #0x1
  4410d0:	str	x1, [x19, #24]
  4410d4:	mov	x0, x19
  4410d8:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  4410dc:	mov	x3, x0
  4410e0:	mov	x2, x21
  4410e4:	mov	x0, x19
  4410e8:	mov	w1, #0x4                   	// #4
  4410ec:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4410f0:	mov	x21, x0
  4410f4:	b	440fe0 <_obstack_memory_used@@Base+0x3f88>
  4410f8:	ldr	x0, [x19, #24]
  4410fc:	ldrb	w1, [x0]
  441100:	cmp	w1, #0x5f
  441104:	b.ne	440e9c <_obstack_memory_used@@Base+0x3e44>  // b.any
  441108:	add	x0, x0, #0x1
  44110c:	str	x0, [x19, #24]
  441110:	mov	w1, #0x45                  	// #69
  441114:	mov	x0, x19
  441118:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  44111c:	mov	x3, x0
  441120:	b	440ea8 <_obstack_memory_used@@Base+0x3e50>
  441124:	cmp	w1, #0x70
  441128:	b.eq	44117c <_obstack_memory_used@@Base+0x4124>  // b.none
  44112c:	mov	x0, x19
  441130:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  441134:	mov	x21, x0
  441138:	b	440fe0 <_obstack_memory_used@@Base+0x3f88>
  44113c:	ldrb	w0, [x0]
  441140:	sub	w1, w0, #0x63
  441144:	sub	w0, w0, #0x72
  441148:	and	w1, w1, #0xff
  44114c:	and	w0, w0, #0xff
  441150:	cmp	w1, #0x1
  441154:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  441158:	b.hi	440f98 <_obstack_memory_used@@Base+0x3f40>  // b.pmore
  44115c:	mov	x0, x19
  441160:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441164:	mov	x22, x0
  441168:	b	440fb0 <_obstack_memory_used@@Base+0x3f58>
  44116c:	mov	x0, x19
  441170:	bl	442ca8 <_obstack_memory_used@@Base+0x5c50>
  441174:	mov	x22, x0
  441178:	b	440fb0 <_obstack_memory_used@@Base+0x3f58>
  44117c:	ldrb	w0, [x21, #1]
  441180:	cmp	w0, #0x74
  441184:	b.ne	44112c <_obstack_memory_used@@Base+0x40d4>  // b.any
  441188:	ldrb	w0, [x21, #2]
  44118c:	cbz	w0, 4410b0 <_obstack_memory_used@@Base+0x4058>
  441190:	b	44112c <_obstack_memory_used@@Base+0x40d4>
  441194:	mov	x0, x19
  441198:	bl	442ca8 <_obstack_memory_used@@Base+0x5c50>
  44119c:	b	440d3c <_obstack_memory_used@@Base+0x3ce4>
  4411a0:	ldrb	w0, [x1, #1]
  4411a4:	cmp	w0, #0x69
  4411a8:	b.ne	440c2c <_obstack_memory_used@@Base+0x3bd4>  // b.any
  4411ac:	add	x1, x1, #0x2
  4411b0:	str	x1, [x19, #24]
  4411b4:	mov	x0, x19
  4411b8:	mov	w1, #0x45                  	// #69
  4411bc:	bl	440288 <_obstack_memory_used@@Base+0x3230>
  4411c0:	mov	x3, x0
  4411c4:	b	440d5c <_obstack_memory_used@@Base+0x3d04>
  4411c8:	add	x1, x1, #0x1
  4411cc:	mov	x3, #0x0                   	// #0
  4411d0:	str	x1, [x19, #24]
  4411d4:	b	440d5c <_obstack_memory_used@@Base+0x3d04>
  4411d8:	ldr	x2, [x0, #24]
  4411dc:	ldrb	w1, [x2]
  4411e0:	cmp	w1, #0x4c
  4411e4:	b.eq	441270 <_obstack_memory_used@@Base+0x4218>  // b.none
  4411e8:	stp	x29, x30, [sp, #-32]!
  4411ec:	mov	x29, sp
  4411f0:	stp	x19, x20, [sp, #16]
  4411f4:	mov	x19, x0
  4411f8:	b.hi	441218 <_obstack_memory_used@@Base+0x41c0>  // b.pmore
  4411fc:	sub	w1, w1, #0x49
  441200:	and	w1, w1, #0xff
  441204:	cmp	w1, #0x1
  441208:	b.hi	441260 <_obstack_memory_used@@Base+0x4208>  // b.pmore
  44120c:	ldp	x19, x20, [sp, #16]
  441210:	ldp	x29, x30, [sp], #32
  441214:	b	441348 <_obstack_memory_used@@Base+0x42f0>
  441218:	cmp	w1, #0x58
  44121c:	b.ne	441260 <_obstack_memory_used@@Base+0x4208>  // b.any
  441220:	add	x2, x2, #0x1
  441224:	ldr	w20, [x0, #76]
  441228:	mov	w1, #0x1                   	// #1
  44122c:	str	x2, [x0, #24]
  441230:	str	w1, [x0, #76]
  441234:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  441238:	str	w20, [x19, #76]
  44123c:	ldr	x1, [x19, #24]
  441240:	ldrb	w2, [x1]
  441244:	cmp	w2, #0x45
  441248:	b.ne	441274 <_obstack_memory_used@@Base+0x421c>  // b.any
  44124c:	add	x1, x1, #0x1
  441250:	str	x1, [x19, #24]
  441254:	ldp	x19, x20, [sp, #16]
  441258:	ldp	x29, x30, [sp], #32
  44125c:	ret
  441260:	mov	x0, x19
  441264:	ldp	x19, x20, [sp, #16]
  441268:	ldp	x29, x30, [sp], #32
  44126c:	b	4420c0 <_obstack_memory_used@@Base+0x5068>
  441270:	b	443850 <_obstack_memory_used@@Base+0x67f8>
  441274:	mov	x0, #0x0                   	// #0
  441278:	b	441254 <_obstack_memory_used@@Base+0x41fc>
  44127c:	nop
  441280:	stp	x29, x30, [sp, #-64]!
  441284:	mov	x29, sp
  441288:	ldr	x1, [x0, #24]
  44128c:	stp	x19, x20, [sp, #16]
  441290:	mov	x19, x0
  441294:	str	x21, [sp, #32]
  441298:	ldr	x21, [x0, #64]
  44129c:	ldrb	w2, [x1]
  4412a0:	cmp	w2, #0x45
  4412a4:	b.eq	441324 <_obstack_memory_used@@Base+0x42cc>  // b.none
  4412a8:	add	x20, sp, #0x38
  4412ac:	str	xzr, [sp, #56]
  4412b0:	b	4412d4 <_obstack_memory_used@@Base+0x427c>
  4412b4:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4412b8:	str	x0, [x20]
  4412bc:	add	x20, x0, #0x10
  4412c0:	cbz	x0, 4412f0 <_obstack_memory_used@@Base+0x4298>
  4412c4:	ldr	x1, [x19, #24]
  4412c8:	ldrb	w0, [x1]
  4412cc:	cmp	w0, #0x45
  4412d0:	b.eq	441304 <_obstack_memory_used@@Base+0x42ac>  // b.none
  4412d4:	mov	x0, x19
  4412d8:	bl	4411d8 <_obstack_memory_used@@Base+0x4180>
  4412dc:	mov	x3, #0x0                   	// #0
  4412e0:	mov	x2, x0
  4412e4:	mov	w1, #0x2f                  	// #47
  4412e8:	mov	x0, x19
  4412ec:	cbnz	x2, 4412b4 <_obstack_memory_used@@Base+0x425c>
  4412f0:	mov	x0, #0x0                   	// #0
  4412f4:	ldp	x19, x20, [sp, #16]
  4412f8:	ldr	x21, [sp, #32]
  4412fc:	ldp	x29, x30, [sp], #64
  441300:	ret
  441304:	add	x1, x1, #0x1
  441308:	str	x1, [x19, #24]
  44130c:	str	x21, [x19, #64]
  441310:	ldp	x19, x20, [sp, #16]
  441314:	ldr	x21, [sp, #32]
  441318:	ldr	x0, [sp, #56]
  44131c:	ldp	x29, x30, [sp], #64
  441320:	ret
  441324:	add	x1, x1, #0x1
  441328:	mov	x3, #0x0                   	// #0
  44132c:	ldr	x21, [sp, #32]
  441330:	str	x1, [x0, #24]
  441334:	ldp	x19, x20, [sp, #16]
  441338:	mov	x2, #0x0                   	// #0
  44133c:	ldp	x29, x30, [sp], #64
  441340:	mov	w1, #0x2f                  	// #47
  441344:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441348:	ldr	x3, [x0, #24]
  44134c:	ldrb	w1, [x3]
  441350:	sub	w1, w1, #0x49
  441354:	and	w1, w1, #0xff
  441358:	cmp	w1, #0x1
  44135c:	b.hi	44136c <_obstack_memory_used@@Base+0x4314>  // b.pmore
  441360:	add	x3, x3, #0x1
  441364:	str	x3, [x0, #24]
  441368:	b	441280 <_obstack_memory_used@@Base+0x4228>
  44136c:	mov	x0, #0x0                   	// #0
  441370:	ret
  441374:	nop
  441378:	stp	x29, x30, [sp, #-48]!
  44137c:	mov	w3, #0x54                  	// #84
  441380:	mov	x29, sp
  441384:	ldr	x2, [x0, #24]
  441388:	stp	x19, x20, [sp, #16]
  44138c:	mov	x19, x0
  441390:	str	x21, [sp, #32]
  441394:	mov	w21, w1
  441398:	ldrb	w1, [x2]
  44139c:	cmp	w1, #0x47
  4413a0:	ccmp	w1, w3, #0x4, ne  // ne = any
  4413a4:	b.ne	441430 <_obstack_memory_used@@Base+0x43d8>  // b.any
  4413a8:	ldr	w3, [x0, #72]
  4413ac:	add	w1, w3, #0x14
  4413b0:	str	w1, [x0, #72]
  4413b4:	ldrb	w1, [x2]
  4413b8:	cmp	w1, #0x54
  4413bc:	b.eq	441554 <_obstack_memory_used@@Base+0x44fc>  // b.none
  4413c0:	cmp	w1, #0x47
  4413c4:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  4413c8:	add	x1, x2, #0x1
  4413cc:	str	x1, [x0, #24]
  4413d0:	ldrb	w1, [x2, #1]
  4413d4:	cbz	w1, 44153c <_obstack_memory_used@@Base+0x44e4>
  4413d8:	add	x1, x2, #0x2
  4413dc:	str	x1, [x0, #24]
  4413e0:	ldrb	w1, [x2, #1]
  4413e4:	cmp	w1, #0x54
  4413e8:	b.eq	4418f0 <_obstack_memory_used@@Base+0x4898>  // b.none
  4413ec:	b.hi	4415bc <_obstack_memory_used@@Base+0x4564>  // b.pmore
  4413f0:	cmp	w1, #0x41
  4413f4:	b.eq	441938 <_obstack_memory_used@@Base+0x48e0>  // b.none
  4413f8:	cmp	w1, #0x52
  4413fc:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  441400:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  441404:	mov	x11, x0
  441408:	mov	x0, x19
  44140c:	bl	43f8f0 <_obstack_memory_used@@Base+0x2898>
  441410:	mov	x3, x0
  441414:	mov	x0, x19
  441418:	mov	x2, x11
  44141c:	ldp	x19, x20, [sp, #16]
  441420:	mov	w1, #0x16                  	// #22
  441424:	ldr	x21, [sp, #32]
  441428:	ldp	x29, x30, [sp], #48
  44142c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441430:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  441434:	mov	x20, x0
  441438:	cbz	x0, 44153c <_obstack_memory_used@@Base+0x44e4>
  44143c:	cbz	w21, 44148c <_obstack_memory_used@@Base+0x4434>
  441440:	ldr	w0, [x19, #16]
  441444:	tbnz	w0, #0, 44148c <_obstack_memory_used@@Base+0x4434>
  441448:	mov	x1, #0x1f                  	// #31
  44144c:	mov	x2, #0x1                   	// #1
  441450:	movk	x1, #0x1a, lsl #48
  441454:	ldr	w3, [x20]
  441458:	sub	w0, w3, #0x1c
  44145c:	cmp	w0, #0x34
  441460:	b.hi	441470 <_obstack_memory_used@@Base+0x4418>  // b.pmore
  441464:	lsl	x0, x2, x0
  441468:	tst	x0, x1
  44146c:	b.ne	4417a4 <_obstack_memory_used@@Base+0x474c>  // b.any
  441470:	cmp	w3, #0x2
  441474:	b.eq	4417ac <_obstack_memory_used@@Base+0x4754>  // b.none
  441478:	mov	x0, x20
  44147c:	ldp	x19, x20, [sp, #16]
  441480:	ldr	x21, [sp, #32]
  441484:	ldp	x29, x30, [sp], #48
  441488:	ret
  44148c:	ldr	x0, [x19, #24]
  441490:	ldrb	w0, [x0]
  441494:	cmp	w0, #0x45
  441498:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  44149c:	b.eq	441478 <_obstack_memory_used@@Base+0x4420>  // b.none
  4414a0:	mov	x1, #0x1f                  	// #31
  4414a4:	mov	x4, x20
  4414a8:	mov	x2, #0x1                   	// #1
  4414ac:	movk	x1, #0x1a, lsl #48
  4414b0:	ldr	w3, [x4]
  4414b4:	cmp	w3, #0x4
  4414b8:	b.eq	441820 <_obstack_memory_used@@Base+0x47c8>  // b.none
  4414bc:	sub	w0, w3, #0x1c
  4414c0:	b.hi	4416b0 <_obstack_memory_used@@Base+0x4658>  // b.pmore
  4414c4:	cmp	w3, #0x2
  4414c8:	b.ne	4414d4 <_obstack_memory_used@@Base+0x447c>  // b.any
  4414cc:	ldr	x4, [x4, #16]
  4414d0:	cbnz	x4, 4414b0 <_obstack_memory_used@@Base+0x4458>
  4414d4:	mov	w1, #0x0                   	// #0
  4414d8:	mov	x0, x19
  4414dc:	bl	443200 <_obstack_memory_used@@Base+0x61a8>
  4414e0:	mov	x3, x0
  4414e4:	cbz	x0, 44153c <_obstack_memory_used@@Base+0x44e4>
  4414e8:	cbnz	w21, 441508 <_obstack_memory_used@@Base+0x44b0>
  4414ec:	ldr	w0, [x20]
  4414f0:	cmp	w0, #0x2
  4414f4:	b.ne	441508 <_obstack_memory_used@@Base+0x44b0>  // b.any
  4414f8:	ldr	w0, [x3]
  4414fc:	cmp	w0, #0x29
  441500:	b.ne	441508 <_obstack_memory_used@@Base+0x44b0>  // b.any
  441504:	str	xzr, [x3, #8]
  441508:	mov	x2, x20
  44150c:	mov	x0, x19
  441510:	ldp	x19, x20, [sp, #16]
  441514:	mov	w1, #0x3                   	// #3
  441518:	ldr	x21, [sp, #32]
  44151c:	ldp	x29, x30, [sp], #48
  441520:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441524:	cmp	w1, #0x68
  441528:	b.eq	441acc <_obstack_memory_used@@Base+0x4a74>  // b.none
  44152c:	cmp	w1, #0x76
  441530:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  441534:	bl	43feb8 <_obstack_memory_used@@Base+0x2e60>
  441538:	cbnz	w0, 4417f4 <_obstack_memory_used@@Base+0x479c>
  44153c:	mov	x20, #0x0                   	// #0
  441540:	mov	x0, x20
  441544:	ldp	x19, x20, [sp, #16]
  441548:	ldr	x21, [sp, #32]
  44154c:	ldp	x29, x30, [sp], #48
  441550:	ret
  441554:	add	x1, x2, #0x1
  441558:	str	x1, [x0, #24]
  44155c:	ldrb	w1, [x2, #1]
  441560:	cbz	w1, 44153c <_obstack_memory_used@@Base+0x44e4>
  441564:	add	x1, x2, #0x2
  441568:	str	x1, [x0, #24]
  44156c:	ldrb	w1, [x2, #1]
  441570:	cmp	w1, #0x53
  441574:	b.eq	441a3c <_obstack_memory_used@@Base+0x49e4>  // b.none
  441578:	b.hi	441730 <_obstack_memory_used@@Base+0x46d8>  // b.pmore
  44157c:	cmp	w1, #0x48
  441580:	b.eq	441a18 <_obstack_memory_used@@Base+0x49c0>  // b.none
  441584:	b.hi	4416fc <_obstack_memory_used@@Base+0x46a4>  // b.pmore
  441588:	cmp	w1, #0x43
  44158c:	b.eq	4419b8 <_obstack_memory_used@@Base+0x4960>  // b.none
  441590:	cmp	w1, #0x46
  441594:	b.ne	4416d0 <_obstack_memory_used@@Base+0x4678>  // b.any
  441598:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  44159c:	mov	x2, x0
  4415a0:	mov	x0, x19
  4415a4:	mov	x3, #0x0                   	// #0
  4415a8:	ldp	x19, x20, [sp, #16]
  4415ac:	mov	w1, #0xe                   	// #14
  4415b0:	ldr	x21, [sp, #32]
  4415b4:	ldp	x29, x30, [sp], #48
  4415b8:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4415bc:	cmp	w1, #0x56
  4415c0:	b.eq	4418cc <_obstack_memory_used@@Base+0x4874>  // b.none
  4415c4:	cmp	w1, #0x72
  4415c8:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  4415cc:	add	x0, x0, #0x18
  4415d0:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  4415d4:	cmp	w0, #0x1
  4415d8:	b.le	44153c <_obstack_memory_used@@Base+0x44e4>
  4415dc:	ldr	x1, [x19, #24]
  4415e0:	ldrb	w2, [x1]
  4415e4:	cbz	w2, 44153c <_obstack_memory_used@@Base+0x44e4>
  4415e8:	add	x8, x1, #0x1
  4415ec:	str	x8, [x19, #24]
  4415f0:	ldrb	w1, [x1]
  4415f4:	cmp	w1, #0x5f
  4415f8:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  4415fc:	sub	w9, w0, #0x1
  441600:	mov	x2, #0x0                   	// #0
  441604:	mov	w11, #0x18                  	// #24
  441608:	mov	w10, #0x41                  	// #65
  44160c:	ldrb	w0, [x8]
  441610:	cbz	w0, 44153c <_obstack_memory_used@@Base+0x44e4>
  441614:	cmp	w0, #0x24
  441618:	b.ne	441864 <_obstack_memory_used@@Base+0x480c>  // b.any
  44161c:	ldrb	w0, [x8, #1]
  441620:	cmp	w0, #0x53
  441624:	b.eq	441970 <_obstack_memory_used@@Base+0x4918>  // b.none
  441628:	cmp	w0, #0x5f
  44162c:	b.eq	441968 <_obstack_memory_used@@Base+0x4910>  // b.none
  441630:	cmp	w0, #0x24
  441634:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  441638:	ldp	w1, w3, [x19, #40]
  44163c:	ldr	x8, [x19, #24]
  441640:	cmp	w1, w3
  441644:	add	x8, x8, #0x2
  441648:	b.ge	441b00 <_obstack_memory_used@@Base+0x4aa8>  // b.tcont
  44164c:	ldr	x5, [x19, #32]
  441650:	smull	x4, w1, w11
  441654:	add	w1, w1, #0x1
  441658:	sub	w9, w9, #0x2
  44165c:	add	x3, x5, x4
  441660:	str	wzr, [x3, #4]
  441664:	str	w1, [x19, #40]
  441668:	str	w10, [x5, x4]
  44166c:	str	w0, [x3, #8]
  441670:	str	x8, [x19, #24]
  441674:	cbz	x2, 441960 <_obstack_memory_used@@Base+0x4908>
  441678:	mov	x0, x19
  44167c:	mov	w1, #0x40                  	// #64
  441680:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441684:	mov	x2, x0
  441688:	cbz	x0, 44153c <_obstack_memory_used@@Base+0x44e4>
  44168c:	cmp	w9, #0x0
  441690:	b.gt	44160c <_obstack_memory_used@@Base+0x45b4>
  441694:	mov	x0, x19
  441698:	mov	x3, #0x0                   	// #0
  44169c:	ldp	x19, x20, [sp, #16]
  4416a0:	mov	w1, #0x3f                  	// #63
  4416a4:	ldr	x21, [sp, #32]
  4416a8:	ldp	x29, x30, [sp], #48
  4416ac:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4416b0:	cmp	w0, #0x34
  4416b4:	b.hi	4414d4 <_obstack_memory_used@@Base+0x447c>  // b.pmore
  4416b8:	lsl	x0, x2, x0
  4416bc:	tst	x0, x1
  4416c0:	b.eq	4414d4 <_obstack_memory_used@@Base+0x447c>  // b.none
  4416c4:	ldr	x4, [x4, #8]
  4416c8:	cbnz	x4, 4414b0 <_obstack_memory_used@@Base+0x4458>
  4416cc:	b	4414d4 <_obstack_memory_used@@Base+0x447c>
  4416d0:	cmp	w1, #0x41
  4416d4:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  4416d8:	bl	4411d8 <_obstack_memory_used@@Base+0x4180>
  4416dc:	mov	x2, x0
  4416e0:	mov	x0, x19
  4416e4:	mov	x3, #0x0                   	// #0
  4416e8:	ldp	x19, x20, [sp, #16]
  4416ec:	mov	w1, #0x30                  	// #48
  4416f0:	ldr	x21, [sp, #32]
  4416f4:	ldp	x29, x30, [sp], #48
  4416f8:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4416fc:	cmp	w1, #0x49
  441700:	b.eq	441aa8 <_obstack_memory_used@@Base+0x4a50>  // b.none
  441704:	cmp	w1, #0x4a
  441708:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  44170c:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441710:	mov	x2, x0
  441714:	mov	x0, x19
  441718:	mov	x3, #0x0                   	// #0
  44171c:	ldp	x19, x20, [sp, #16]
  441720:	mov	w1, #0x12                  	// #18
  441724:	ldr	x21, [sp, #32]
  441728:	ldp	x29, x30, [sp], #48
  44172c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441730:	cmp	w1, #0x63
  441734:	b.eq	441a60 <_obstack_memory_used@@Base+0x4a08>  // b.none
  441738:	b.hi	441524 <_obstack_memory_used@@Base+0x44cc>  // b.pmore
  44173c:	cmp	w1, #0x56
  441740:	b.eq	44198c <_obstack_memory_used@@Base+0x4934>  // b.none
  441744:	cmp	w1, #0x57
  441748:	b.ne	441770 <_obstack_memory_used@@Base+0x4718>  // b.any
  44174c:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  441750:	mov	x2, x0
  441754:	mov	x0, x19
  441758:	mov	x3, #0x0                   	// #0
  44175c:	ldp	x19, x20, [sp, #16]
  441760:	mov	w1, #0x15                  	// #21
  441764:	ldr	x21, [sp, #32]
  441768:	ldp	x29, x30, [sp], #48
  44176c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441770:	cmp	w1, #0x54
  441774:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  441778:	add	w3, w3, #0xa
  44177c:	str	w3, [x0, #72]
  441780:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441784:	mov	x2, x0
  441788:	mov	x0, x19
  44178c:	mov	x3, #0x0                   	// #0
  441790:	ldp	x19, x20, [sp, #16]
  441794:	mov	w1, #0xa                   	// #10
  441798:	ldr	x21, [sp, #32]
  44179c:	ldp	x29, x30, [sp], #48
  4417a0:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4417a4:	ldr	x20, [x20, #8]
  4417a8:	b	441454 <_obstack_memory_used@@Base+0x43fc>
  4417ac:	ldr	x3, [x20, #16]
  4417b0:	mov	x1, #0x1f                  	// #31
  4417b4:	mov	x2, #0x1                   	// #1
  4417b8:	movk	x1, #0x1a, lsl #48
  4417bc:	ldr	w0, [x3]
  4417c0:	sub	w0, w0, #0x1c
  4417c4:	cmp	w0, #0x34
  4417c8:	b.hi	441478 <_obstack_memory_used@@Base+0x4420>  // b.pmore
  4417cc:	lsl	x0, x2, x0
  4417d0:	tst	x0, x1
  4417d4:	b.eq	441478 <_obstack_memory_used@@Base+0x4420>  // b.none
  4417d8:	ldr	x3, [x3, #8]
  4417dc:	str	x3, [x20, #16]
  4417e0:	ldr	w0, [x3]
  4417e4:	sub	w0, w0, #0x1c
  4417e8:	cmp	w0, #0x34
  4417ec:	b.ls	4417cc <_obstack_memory_used@@Base+0x4774>  // b.plast
  4417f0:	b	441478 <_obstack_memory_used@@Base+0x4420>
  4417f4:	mov	x0, x19
  4417f8:	mov	w1, #0x0                   	// #0
  4417fc:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  441800:	mov	x2, x0
  441804:	mov	x0, x19
  441808:	mov	x3, #0x0                   	// #0
  44180c:	ldp	x19, x20, [sp, #16]
  441810:	mov	w1, #0x10                  	// #16
  441814:	ldr	x21, [sp, #32]
  441818:	ldp	x29, x30, [sp], #48
  44181c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441820:	ldr	x1, [x4, #8]
  441824:	cbz	x1, 441850 <_obstack_memory_used@@Base+0x47f8>
  441828:	ldr	w0, [x1]
  44182c:	sub	w2, w0, #0x1
  441830:	cmp	w0, #0x8
  441834:	b.hi	441858 <_obstack_memory_used@@Base+0x4800>  // b.pmore
  441838:	cmp	w0, #0x6
  44183c:	b.hi	4414d4 <_obstack_memory_used@@Base+0x447c>  // b.pmore
  441840:	cmp	w2, #0x1
  441844:	b.hi	441850 <_obstack_memory_used@@Base+0x47f8>  // b.pmore
  441848:	ldr	x1, [x1, #16]
  44184c:	cbnz	x1, 441828 <_obstack_memory_used@@Base+0x47d0>
  441850:	mov	w1, #0x1                   	// #1
  441854:	b	4414d8 <_obstack_memory_used@@Base+0x4480>
  441858:	cmp	w0, #0x35
  44185c:	cset	w1, ne  // ne = any
  441860:	b	4414d8 <_obstack_memory_used@@Base+0x4480>
  441864:	mov	x1, #0x1                   	// #1
  441868:	b	441870 <_obstack_memory_used@@Base+0x4818>
  44186c:	mov	x1, x4
  441870:	cmp	w9, w1
  441874:	mov	w5, w1
  441878:	b.le	441890 <_obstack_memory_used@@Base+0x4838>
  44187c:	ldrb	w3, [x8, x1]
  441880:	add	x4, x1, #0x1
  441884:	cmp	w3, #0x24
  441888:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  44188c:	b.ne	44186c <_obstack_memory_used@@Base+0x4814>  // b.any
  441890:	ldp	w3, w0, [x19, #40]
  441894:	cmp	w3, w0
  441898:	b.ge	441978 <_obstack_memory_used@@Base+0x4920>  // b.tcont
  44189c:	ldr	x4, [x19, #32]
  4418a0:	add	w0, w3, #0x1
  4418a4:	sub	w9, w9, w5
  4418a8:	smaddl	x3, w3, w11, x4
  4418ac:	str	wzr, [x3, #4]
  4418b0:	str	w0, [x19, #40]
  4418b4:	stp	xzr, x8, [x3]
  4418b8:	ldr	x8, [x19, #24]
  4418bc:	str	w5, [x3, #16]
  4418c0:	add	x8, x8, x1
  4418c4:	str	x8, [x19, #24]
  4418c8:	b	441674 <_obstack_memory_used@@Base+0x461c>
  4418cc:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  4418d0:	mov	x2, x0
  4418d4:	mov	x0, x19
  4418d8:	mov	x3, #0x0                   	// #0
  4418dc:	ldp	x19, x20, [sp, #16]
  4418e0:	mov	w1, #0x13                  	// #19
  4418e4:	ldr	x21, [sp, #32]
  4418e8:	ldp	x29, x30, [sp], #48
  4418ec:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4418f0:	ldrb	w1, [x2, #2]
  4418f4:	cbz	w1, 44190c <_obstack_memory_used@@Base+0x48b4>
  4418f8:	add	x1, x2, #0x3
  4418fc:	str	x1, [x0, #24]
  441900:	ldrb	w1, [x2, #2]
  441904:	cmp	w1, #0x6e
  441908:	b.eq	441b0c <_obstack_memory_used@@Base+0x4ab4>  // b.none
  44190c:	mov	x0, x19
  441910:	mov	w1, #0x0                   	// #0
  441914:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  441918:	mov	x2, x0
  44191c:	mov	x0, x19
  441920:	mov	x3, #0x0                   	// #0
  441924:	ldp	x19, x20, [sp, #16]
  441928:	mov	w1, #0x49                  	// #73
  44192c:	ldr	x21, [sp, #32]
  441930:	ldp	x29, x30, [sp], #48
  441934:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441938:	mov	w1, #0x0                   	// #0
  44193c:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  441940:	mov	x2, x0
  441944:	mov	x0, x19
  441948:	ldp	x19, x20, [sp, #16]
  44194c:	mov	x3, #0x0                   	// #0
  441950:	ldr	x21, [sp, #32]
  441954:	mov	w1, #0x17                  	// #23
  441958:	ldp	x29, x30, [sp], #48
  44195c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441960:	mov	x2, x3
  441964:	b	44168c <_obstack_memory_used@@Base+0x4634>
  441968:	mov	w0, #0x2e                  	// #46
  44196c:	b	441638 <_obstack_memory_used@@Base+0x45e0>
  441970:	mov	w0, #0x2f                  	// #47
  441974:	b	441638 <_obstack_memory_used@@Base+0x45e0>
  441978:	ldr	x0, [x19, #24]
  44197c:	mov	x20, #0x0                   	// #0
  441980:	add	x1, x0, x1
  441984:	str	x1, [x19, #24]
  441988:	b	441478 <_obstack_memory_used@@Base+0x4420>
  44198c:	add	w3, w3, #0xf
  441990:	str	w3, [x0, #72]
  441994:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441998:	mov	x2, x0
  44199c:	mov	x0, x19
  4419a0:	mov	x3, #0x0                   	// #0
  4419a4:	ldp	x19, x20, [sp, #16]
  4419a8:	mov	w1, #0x9                   	// #9
  4419ac:	ldr	x21, [sp, #32]
  4419b0:	ldp	x29, x30, [sp], #48
  4419b4:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4419b8:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4419bc:	mov	x20, x0
  4419c0:	add	x0, x19, #0x18
  4419c4:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  4419c8:	tbnz	w0, #31, 44153c <_obstack_memory_used@@Base+0x44e4>
  4419cc:	ldr	x0, [x19, #24]
  4419d0:	ldrb	w1, [x0]
  4419d4:	cmp	w1, #0x5f
  4419d8:	b.ne	44153c <_obstack_memory_used@@Base+0x44e4>  // b.any
  4419dc:	add	x0, x0, #0x1
  4419e0:	str	x0, [x19, #24]
  4419e4:	mov	x0, x19
  4419e8:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4419ec:	mov	x2, x0
  4419f0:	ldr	w1, [x19, #72]
  4419f4:	mov	x3, x20
  4419f8:	ldr	x21, [sp, #32]
  4419fc:	add	w1, w1, #0x5
  441a00:	str	w1, [x19, #72]
  441a04:	mov	x0, x19
  441a08:	ldp	x19, x20, [sp, #16]
  441a0c:	mov	w1, #0xb                   	// #11
  441a10:	ldp	x29, x30, [sp], #48
  441a14:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441a18:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  441a1c:	mov	x2, x0
  441a20:	mov	x0, x19
  441a24:	mov	x3, #0x0                   	// #0
  441a28:	ldp	x19, x20, [sp, #16]
  441a2c:	mov	w1, #0x14                  	// #20
  441a30:	ldr	x21, [sp, #32]
  441a34:	ldp	x29, x30, [sp], #48
  441a38:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441a3c:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441a40:	mov	x2, x0
  441a44:	mov	x0, x19
  441a48:	mov	x3, #0x0                   	// #0
  441a4c:	ldp	x19, x20, [sp, #16]
  441a50:	mov	w1, #0xd                   	// #13
  441a54:	ldr	x21, [sp, #32]
  441a58:	ldp	x29, x30, [sp], #48
  441a5c:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441a60:	mov	w1, #0x0                   	// #0
  441a64:	bl	43feb8 <_obstack_memory_used@@Base+0x2e60>
  441a68:	cbz	w0, 44153c <_obstack_memory_used@@Base+0x44e4>
  441a6c:	mov	x0, x19
  441a70:	mov	w1, #0x0                   	// #0
  441a74:	bl	43feb8 <_obstack_memory_used@@Base+0x2e60>
  441a78:	cbz	w0, 44153c <_obstack_memory_used@@Base+0x44e4>
  441a7c:	mov	x0, x19
  441a80:	mov	w1, #0x0                   	// #0
  441a84:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  441a88:	mov	x2, x0
  441a8c:	mov	x0, x19
  441a90:	mov	x3, #0x0                   	// #0
  441a94:	ldp	x19, x20, [sp, #16]
  441a98:	mov	w1, #0x11                  	// #17
  441a9c:	ldr	x21, [sp, #32]
  441aa0:	ldp	x29, x30, [sp], #48
  441aa4:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441aa8:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441aac:	mov	x2, x0
  441ab0:	mov	x0, x19
  441ab4:	mov	x3, #0x0                   	// #0
  441ab8:	ldp	x19, x20, [sp, #16]
  441abc:	mov	w1, #0xc                   	// #12
  441ac0:	ldr	x21, [sp, #32]
  441ac4:	ldp	x29, x30, [sp], #48
  441ac8:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441acc:	bl	43feb8 <_obstack_memory_used@@Base+0x2e60>
  441ad0:	cbz	w0, 44153c <_obstack_memory_used@@Base+0x44e4>
  441ad4:	mov	x0, x19
  441ad8:	mov	w1, #0x0                   	// #0
  441adc:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  441ae0:	mov	x2, x0
  441ae4:	mov	x0, x19
  441ae8:	mov	x3, #0x0                   	// #0
  441aec:	ldp	x19, x20, [sp, #16]
  441af0:	mov	w1, #0xf                   	// #15
  441af4:	ldr	x21, [sp, #32]
  441af8:	ldp	x29, x30, [sp], #48
  441afc:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441b00:	mov	x20, #0x0                   	// #0
  441b04:	str	x8, [x19, #24]
  441b08:	b	441478 <_obstack_memory_used@@Base+0x4420>
  441b0c:	mov	w1, #0x0                   	// #0
  441b10:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  441b14:	mov	x2, x0
  441b18:	mov	x0, x19
  441b1c:	ldp	x19, x20, [sp, #16]
  441b20:	mov	x3, #0x0                   	// #0
  441b24:	ldr	x21, [sp, #32]
  441b28:	mov	w1, #0x4a                  	// #74
  441b2c:	ldp	x29, x30, [sp], #48
  441b30:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441b34:	nop
  441b38:	stp	x29, x30, [sp, #-112]!
  441b3c:	mov	x29, sp
  441b40:	ldr	x2, [x0, #24]
  441b44:	stp	x19, x20, [sp, #16]
  441b48:	ldrb	w1, [x2]
  441b4c:	cmp	w1, #0x55
  441b50:	b.eq	441d38 <_obstack_memory_used@@Base+0x4ce0>  // b.none
  441b54:	mov	x19, x0
  441b58:	b.hi	441c08 <_obstack_memory_used@@Base+0x4bb0>  // b.pmore
  441b5c:	cmp	w1, #0x4e
  441b60:	b.eq	441d50 <_obstack_memory_used@@Base+0x4cf8>  // b.none
  441b64:	cmp	w1, #0x53
  441b68:	b.ne	441cd8 <_obstack_memory_used@@Base+0x4c80>  // b.any
  441b6c:	ldrb	w1, [x2, #1]
  441b70:	cmp	w1, #0x74
  441b74:	b.ne	441c98 <_obstack_memory_used@@Base+0x4c40>  // b.any
  441b78:	ldp	w0, w1, [x0, #40]
  441b7c:	add	x2, x2, #0x2
  441b80:	str	x2, [x19, #24]
  441b84:	cmp	w0, w1
  441b88:	b.ge	44200c <_obstack_memory_used@@Base+0x4fb4>  // b.tcont
  441b8c:	mov	w3, #0x18                  	// #24
  441b90:	add	w1, w0, #0x1
  441b94:	ldr	x2, [x19, #32]
  441b98:	smull	x0, w0, w3
  441b9c:	str	w1, [x19, #40]
  441ba0:	mov	w3, #0x3                   	// #3
  441ba4:	add	x20, x2, x0
  441ba8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  441bac:	add	x1, x1, #0x8a8
  441bb0:	str	xzr, [x2, x0]
  441bb4:	str	x1, [x20, #8]
  441bb8:	str	w3, [x20, #16]
  441bbc:	mov	x0, x19
  441bc0:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  441bc4:	mov	x2, x20
  441bc8:	mov	x3, x0
  441bcc:	mov	w1, #0x1                   	// #1
  441bd0:	mov	x0, x19
  441bd4:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441bd8:	mov	x20, x0
  441bdc:	ldr	w1, [x19, #72]
  441be0:	ldr	x2, [x19, #24]
  441be4:	add	w1, w1, #0x3
  441be8:	str	w1, [x19, #72]
  441bec:	ldrb	w0, [x2]
  441bf0:	cmp	w0, #0x49
  441bf4:	b.eq	441fb8 <_obstack_memory_used@@Base+0x4f60>  // b.none
  441bf8:	mov	x0, x20
  441bfc:	ldp	x19, x20, [sp, #16]
  441c00:	ldp	x29, x30, [sp], #112
  441c04:	ret
  441c08:	cmp	w1, #0x5a
  441c0c:	b.ne	441cd8 <_obstack_memory_used@@Base+0x4c80>  // b.any
  441c10:	add	x2, x2, #0x1
  441c14:	str	x2, [x0, #24]
  441c18:	mov	w1, #0x0                   	// #0
  441c1c:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  441c20:	mov	x20, x0
  441c24:	cbz	x0, 441cd0 <_obstack_memory_used@@Base+0x4c78>
  441c28:	ldr	x0, [x19, #24]
  441c2c:	ldrb	w1, [x0]
  441c30:	cmp	w1, #0x45
  441c34:	b.ne	441cd0 <_obstack_memory_used@@Base+0x4c78>  // b.any
  441c38:	add	x1, x0, #0x1
  441c3c:	str	x1, [x19, #24]
  441c40:	ldrb	w1, [x0, #1]
  441c44:	cmp	w1, #0x73
  441c48:	b.eq	442034 <_obstack_memory_used@@Base+0x4fdc>  // b.none
  441c4c:	cmp	w1, #0x64
  441c50:	b.eq	441edc <_obstack_memory_used@@Base+0x4e84>  // b.none
  441c54:	mov	x0, x19
  441c58:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  441c5c:	mov	x3, x0
  441c60:	cbz	x0, 441c74 <_obstack_memory_used@@Base+0x4c1c>
  441c64:	ldr	w0, [x0]
  441c68:	sub	w0, w0, #0x46
  441c6c:	tst	w0, #0xfffffffd
  441c70:	b.ne	442088 <_obstack_memory_used@@Base+0x5030>  // b.any
  441c74:	ldr	w0, [x20]
  441c78:	cmp	w0, #0x3
  441c7c:	b.eq	441ff4 <_obstack_memory_used@@Base+0x4f9c>  // b.none
  441c80:	mov	x2, x20
  441c84:	mov	x0, x19
  441c88:	mov	w1, #0x2                   	// #2
  441c8c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441c90:	mov	x20, x0
  441c94:	b	441bf8 <_obstack_memory_used@@Base+0x4ba0>
  441c98:	mov	w1, #0x0                   	// #0
  441c9c:	bl	43fc50 <_obstack_memory_used@@Base+0x2bf8>
  441ca0:	ldr	x1, [x19, #24]
  441ca4:	mov	x20, x0
  441ca8:	ldrb	w0, [x1]
  441cac:	cmp	w0, #0x49
  441cb0:	b.ne	441bf8 <_obstack_memory_used@@Base+0x4ba0>  // b.any
  441cb4:	mov	x0, x19
  441cb8:	b	441d18 <_obstack_memory_used@@Base+0x4cc0>
  441cbc:	mov	x0, x19
  441cc0:	bl	43ffb8 <_obstack_memory_used@@Base+0x2f60>
  441cc4:	cbnz	w0, 441f18 <_obstack_memory_used@@Base+0x4ec0>
  441cc8:	ldp	x21, x22, [sp, #32]
  441ccc:	nop
  441cd0:	mov	x20, #0x0                   	// #0
  441cd4:	b	441bf8 <_obstack_memory_used@@Base+0x4ba0>
  441cd8:	mov	x0, x19
  441cdc:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  441ce0:	ldr	x1, [x19, #24]
  441ce4:	mov	x20, x0
  441ce8:	ldrb	w0, [x1]
  441cec:	cmp	w0, #0x49
  441cf0:	b.ne	441bf8 <_obstack_memory_used@@Base+0x4ba0>  // b.any
  441cf4:	cbz	x20, 441cd0 <_obstack_memory_used@@Base+0x4c78>
  441cf8:	ldp	w1, w0, [x19, #56]
  441cfc:	cmp	w1, w0
  441d00:	b.ge	441cd0 <_obstack_memory_used@@Base+0x4c78>  // b.tcont
  441d04:	ldr	x3, [x19, #48]
  441d08:	mov	x0, x19
  441d0c:	add	w2, w1, #0x1
  441d10:	str	x20, [x3, w1, sxtw #3]
  441d14:	str	w2, [x19, #56]
  441d18:	bl	441348 <_obstack_memory_used@@Base+0x42f0>
  441d1c:	mov	x3, x0
  441d20:	mov	x2, x20
  441d24:	mov	x0, x19
  441d28:	mov	w1, #0x4                   	// #4
  441d2c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441d30:	mov	x20, x0
  441d34:	b	441bf8 <_obstack_memory_used@@Base+0x4ba0>
  441d38:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  441d3c:	mov	x20, x0
  441d40:	mov	x0, x20
  441d44:	ldp	x19, x20, [sp, #16]
  441d48:	ldp	x29, x30, [sp], #112
  441d4c:	ret
  441d50:	stp	x21, x22, [sp, #32]
  441d54:	add	x2, x2, #0x1
  441d58:	add	x1, sp, #0x68
  441d5c:	str	x2, [x0, #24]
  441d60:	mov	w2, #0x1                   	// #1
  441d64:	bl	442f70 <_obstack_memory_used@@Base+0x5f18>
  441d68:	mov	x22, x0
  441d6c:	cbz	x0, 441fe8 <_obstack_memory_used@@Base+0x4f90>
  441d70:	mov	x1, #0x0                   	// #0
  441d74:	mov	x0, x19
  441d78:	stp	x23, x24, [sp, #48]
  441d7c:	bl	43f628 <_obstack_memory_used@@Base+0x25d0>
  441d80:	mov	x23, x0
  441d84:	ldr	x1, [x19, #24]
  441d88:	ldrb	w20, [x1]
  441d8c:	cbz	w20, 441e44 <_obstack_memory_used@@Base+0x4dec>
  441d90:	mov	x21, #0x0                   	// #0
  441d94:	mov	w24, #0x4c                  	// #76
  441d98:	stp	x25, x26, [sp, #64]
  441d9c:	mov	w25, #0x55                  	// #85
  441da0:	cmp	w20, #0x44
  441da4:	b.eq	441e58 <_obstack_memory_used@@Base+0x4e00>  // b.none
  441da8:	sub	w2, w20, #0x30
  441dac:	sub	w0, w20, #0x61
  441db0:	and	w2, w2, #0xff
  441db4:	and	w0, w0, #0xff
  441db8:	cmp	w2, #0x9
  441dbc:	mov	x26, x21
  441dc0:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  441dc4:	b.ls	441dd8 <_obstack_memory_used@@Base+0x4d80>  // b.plast
  441dc8:	cmp	w20, #0x43
  441dcc:	ccmp	w20, w25, #0x4, ne  // ne = any
  441dd0:	ccmp	w20, w24, #0x4, ne  // ne = any
  441dd4:	b.ne	441ea4 <_obstack_memory_used@@Base+0x4e4c>  // b.any
  441dd8:	mov	x0, x19
  441ddc:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  441de0:	mov	x21, x0
  441de4:	cbz	x26, 441e00 <_obstack_memory_used@@Base+0x4da8>
  441de8:	mov	w1, #0x1                   	// #1
  441dec:	mov	x3, x21
  441df0:	mov	x2, x26
  441df4:	mov	x0, x19
  441df8:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  441dfc:	mov	x21, x0
  441e00:	cmp	w20, #0x53
  441e04:	ldr	x1, [x19, #24]
  441e08:	b.eq	441e38 <_obstack_memory_used@@Base+0x4de0>  // b.none
  441e0c:	ldrb	w20, [x1]
  441e10:	cmp	w20, #0x45
  441e14:	b.eq	441e8c <_obstack_memory_used@@Base+0x4e34>  // b.none
  441e18:	cbz	x21, 441e40 <_obstack_memory_used@@Base+0x4de8>
  441e1c:	ldp	w0, w2, [x19, #56]
  441e20:	cmp	w0, w2
  441e24:	b.ge	441e40 <_obstack_memory_used@@Base+0x4de8>  // b.tcont
  441e28:	ldr	x3, [x19, #48]
  441e2c:	add	w2, w0, #0x1
  441e30:	str	x21, [x3, w0, sxtw #3]
  441e34:	str	w2, [x19, #56]
  441e38:	ldrb	w20, [x1]
  441e3c:	cbnz	w20, 441da0 <_obstack_memory_used@@Base+0x4d48>
  441e40:	ldp	x25, x26, [sp, #64]
  441e44:	mov	x20, #0x0                   	// #0
  441e48:	ldp	x23, x24, [sp, #48]
  441e4c:	str	xzr, [x22]
  441e50:	ldp	x21, x22, [sp, #32]
  441e54:	b	441bf8 <_obstack_memory_used@@Base+0x4ba0>
  441e58:	ldrb	w0, [x1, #1]
  441e5c:	and	w0, w0, #0xffffffdf
  441e60:	and	w0, w0, #0xff
  441e64:	cmp	w0, #0x54
  441e68:	mov	x0, x19
  441e6c:	b.ne	441e94 <_obstack_memory_used@@Base+0x4e3c>  // b.any
  441e70:	mov	x26, x21
  441e74:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  441e78:	mov	x21, x0
  441e7c:	mov	w1, #0x1                   	// #1
  441e80:	cbnz	x26, 441dec <_obstack_memory_used@@Base+0x4d94>
  441e84:	ldr	x1, [x19, #24]
  441e88:	b	441e0c <_obstack_memory_used@@Base+0x4db4>
  441e8c:	mov	x26, x21
  441e90:	b	441dc8 <_obstack_memory_used@@Base+0x4d70>
  441e94:	mov	x26, x21
  441e98:	bl	443370 <_obstack_memory_used@@Base+0x6318>
  441e9c:	mov	x21, x0
  441ea0:	b	441e7c <_obstack_memory_used@@Base+0x4e24>
  441ea4:	cmp	w20, #0x53
  441ea8:	b.eq	441f58 <_obstack_memory_used@@Base+0x4f00>  // b.none
  441eac:	cmp	w20, #0x49
  441eb0:	b.eq	442014 <_obstack_memory_used@@Base+0x4fbc>  // b.none
  441eb4:	cmp	w20, #0x54
  441eb8:	b.eq	4420b0 <_obstack_memory_used@@Base+0x5058>  // b.none
  441ebc:	cmp	w20, #0x45
  441ec0:	b.eq	441f74 <_obstack_memory_used@@Base+0x4f1c>  // b.none
  441ec4:	cmp	w20, #0x4d
  441ec8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  441ecc:	b.eq	441e40 <_obstack_memory_used@@Base+0x4de8>  // b.none
  441ed0:	add	x1, x1, #0x1
  441ed4:	str	x1, [x19, #24]
  441ed8:	b	441e38 <_obstack_memory_used@@Base+0x4de0>
  441edc:	stp	x21, x22, [sp, #32]
  441ee0:	add	x0, x0, #0x2
  441ee4:	str	x0, [x19, #24]
  441ee8:	mov	x0, x19
  441eec:	bl	43f958 <_obstack_memory_used@@Base+0x2900>
  441ef0:	mov	w21, w0
  441ef4:	tbnz	w0, #31, 441cc8 <_obstack_memory_used@@Base+0x4c70>
  441ef8:	mov	x0, x19
  441efc:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  441f00:	mov	x11, x0
  441f04:	cbz	x0, 441f18 <_obstack_memory_used@@Base+0x4ec0>
  441f08:	ldr	w0, [x0]
  441f0c:	sub	w0, w0, #0x46
  441f10:	tst	w0, #0xfffffffd
  441f14:	b.ne	441cbc <_obstack_memory_used@@Base+0x4c64>  // b.any
  441f18:	ldp	w1, w0, [x19, #40]
  441f1c:	cmp	w1, w0
  441f20:	b.ge	4420a4 <_obstack_memory_used@@Base+0x504c>  // b.tcont
  441f24:	mov	w2, #0x18                  	// #24
  441f28:	add	w4, w1, #0x1
  441f2c:	ldr	x0, [x19, #32]
  441f30:	smull	x1, w1, w2
  441f34:	mov	w2, #0x47                  	// #71
  441f38:	add	x3, x0, x1
  441f3c:	str	wzr, [x3, #4]
  441f40:	str	w4, [x19, #40]
  441f44:	str	w2, [x0, x1]
  441f48:	str	x11, [x3, #8]
  441f4c:	str	w21, [x3, #16]
  441f50:	ldp	x21, x22, [sp, #32]
  441f54:	b	441c74 <_obstack_memory_used@@Base+0x4c1c>
  441f58:	mov	x0, x19
  441f5c:	mov	w1, #0x1                   	// #1
  441f60:	bl	43fc50 <_obstack_memory_used@@Base+0x2bf8>
  441f64:	mov	x21, x0
  441f68:	cbnz	x26, 441de8 <_obstack_memory_used@@Base+0x4d90>
  441f6c:	ldr	x1, [x19, #24]
  441f70:	b	441e38 <_obstack_memory_used@@Base+0x4de0>
  441f74:	str	x21, [x22]
  441f78:	cbz	x21, 441fe0 <_obstack_memory_used@@Base+0x4f88>
  441f7c:	cbz	x23, 441f8c <_obstack_memory_used@@Base+0x4f34>
  441f80:	ldr	x0, [sp, #104]
  441f84:	str	x0, [x23, #8]
  441f88:	str	x23, [sp, #104]
  441f8c:	ldr	x0, [x19, #24]
  441f90:	ldrb	w1, [x0]
  441f94:	cmp	w1, #0x45
  441f98:	b.ne	441fe0 <_obstack_memory_used@@Base+0x4f88>  // b.any
  441f9c:	add	x0, x0, #0x1
  441fa0:	ldp	x21, x22, [sp, #32]
  441fa4:	ldp	x23, x24, [sp, #48]
  441fa8:	ldp	x25, x26, [sp, #64]
  441fac:	str	x0, [x19, #24]
  441fb0:	ldr	x20, [sp, #104]
  441fb4:	b	441bf8 <_obstack_memory_used@@Base+0x4ba0>
  441fb8:	cbz	x20, 441cd0 <_obstack_memory_used@@Base+0x4c78>
  441fbc:	ldp	w0, w1, [x19, #56]
  441fc0:	cmp	w0, w1
  441fc4:	b.ge	441cd0 <_obstack_memory_used@@Base+0x4c78>  // b.tcont
  441fc8:	ldr	x2, [x19, #48]
  441fcc:	add	w1, w0, #0x1
  441fd0:	str	x20, [x2, w0, sxtw #3]
  441fd4:	mov	x0, x19
  441fd8:	str	w1, [x19, #56]
  441fdc:	b	441d18 <_obstack_memory_used@@Base+0x4cc0>
  441fe0:	ldp	x23, x24, [sp, #48]
  441fe4:	ldp	x25, x26, [sp, #64]
  441fe8:	mov	x20, #0x0                   	// #0
  441fec:	ldp	x21, x22, [sp, #32]
  441ff0:	b	441bf8 <_obstack_memory_used@@Base+0x4ba0>
  441ff4:	ldr	x0, [x20, #16]
  441ff8:	ldr	w1, [x0]
  441ffc:	cmp	w1, #0x29
  442000:	b.ne	441c80 <_obstack_memory_used@@Base+0x4c28>  // b.any
  442004:	str	xzr, [x0, #8]
  442008:	b	441c80 <_obstack_memory_used@@Base+0x4c28>
  44200c:	mov	x20, #0x0                   	// #0
  442010:	b	441bbc <_obstack_memory_used@@Base+0x4b64>
  442014:	cbz	x21, 441e40 <_obstack_memory_used@@Base+0x4de8>
  442018:	add	x1, x1, #0x1
  44201c:	str	x1, [x19, #24]
  442020:	mov	x0, x19
  442024:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  442028:	mov	x21, x0
  44202c:	mov	w1, #0x4                   	// #4
  442030:	b	441dec <_obstack_memory_used@@Base+0x4d94>
  442034:	add	x0, x0, #0x2
  442038:	str	x0, [x19, #24]
  44203c:	mov	x0, x19
  442040:	bl	43ffb8 <_obstack_memory_used@@Base+0x2f60>
  442044:	cbz	w0, 441cd0 <_obstack_memory_used@@Base+0x4c78>
  442048:	ldp	w0, w1, [x19, #40]
  44204c:	cmp	w0, w1
  442050:	b.ge	4420a8 <_obstack_memory_used@@Base+0x5050>  // b.tcont
  442054:	mov	w3, #0x18                  	// #24
  442058:	add	w1, w0, #0x1
  44205c:	ldr	x2, [x19, #32]
  442060:	smull	x0, w0, w3
  442064:	str	w1, [x19, #40]
  442068:	mov	w4, #0xe                   	// #14
  44206c:	add	x3, x2, x0
  442070:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  442074:	add	x1, x1, #0x898
  442078:	str	xzr, [x2, x0]
  44207c:	str	x1, [x3, #8]
  442080:	str	w4, [x3, #16]
  442084:	b	441c74 <_obstack_memory_used@@Base+0x4c1c>
  442088:	mov	x0, x19
  44208c:	str	x3, [sp, #88]
  442090:	bl	43ffb8 <_obstack_memory_used@@Base+0x2f60>
  442094:	ldr	x3, [sp, #88]
  442098:	cbnz	w0, 441c74 <_obstack_memory_used@@Base+0x4c1c>
  44209c:	mov	x20, #0x0                   	// #0
  4420a0:	b	441bf8 <_obstack_memory_used@@Base+0x4ba0>
  4420a4:	ldp	x21, x22, [sp, #32]
  4420a8:	mov	x3, #0x0                   	// #0
  4420ac:	b	441c74 <_obstack_memory_used@@Base+0x4c1c>
  4420b0:	mov	x0, x19
  4420b4:	bl	43f9d0 <_obstack_memory_used@@Base+0x2978>
  4420b8:	mov	x21, x0
  4420bc:	b	441e7c <_obstack_memory_used@@Base+0x4e24>
  4420c0:	stp	x29, x30, [sp, #-80]!
  4420c4:	mov	x29, sp
  4420c8:	ldr	x4, [x0, #24]
  4420cc:	stp	x19, x20, [sp, #16]
  4420d0:	mov	x19, x0
  4420d4:	mov	x0, x4
  4420d8:	bl	43ff60 <_obstack_memory_used@@Base+0x2f08>
  4420dc:	cbnz	w0, 44211c <_obstack_memory_used@@Base+0x50c4>
  4420e0:	ldrb	w1, [x4]
  4420e4:	sub	w0, w1, #0x30
  4420e8:	cmp	w0, #0x4a
  4420ec:	b.ls	442104 <_obstack_memory_used@@Base+0x50ac>  // b.plast
  4420f0:	mov	x20, #0x0                   	// #0
  4420f4:	mov	x0, x20
  4420f8:	ldp	x19, x20, [sp, #16]
  4420fc:	ldp	x29, x30, [sp], #80
  442100:	ret
  442104:	adrp	x2, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  442108:	add	x2, x2, #0x6a4
  44210c:	ldrh	w0, [x2, w0, uxtw #1]
  442110:	adr	x2, 44211c <_obstack_memory_used@@Base+0x50c4>
  442114:	add	x0, x2, w0, sxth #2
  442118:	br	x0
  44211c:	add	x1, sp, #0x48
  442120:	mov	x0, x19
  442124:	mov	w2, #0x0                   	// #0
  442128:	stp	x21, x22, [sp, #32]
  44212c:	bl	442f70 <_obstack_memory_used@@Base+0x5f18>
  442130:	mov	x21, x0
  442134:	cbz	x0, 4421c8 <_obstack_memory_used@@Base+0x5170>
  442138:	ldr	x0, [x19, #24]
  44213c:	ldrb	w0, [x0]
  442140:	cmp	w0, #0x46
  442144:	mov	x0, x19
  442148:	b.eq	4421bc <_obstack_memory_used@@Base+0x5164>  // b.none
  44214c:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442150:	str	x0, [x21]
  442154:	cbz	x0, 4421c8 <_obstack_memory_used@@Base+0x5170>
  442158:	ldr	w1, [x0]
  44215c:	ldr	x20, [sp, #72]
  442160:	sub	w1, w1, #0x1f
  442164:	cmp	w1, #0x1
  442168:	b.ls	4421a0 <_obstack_memory_used@@Base+0x5148>  // b.plast
  44216c:	cbz	x20, 4421c8 <_obstack_memory_used@@Base+0x5170>
  442170:	ldp	w0, w1, [x19, #56]
  442174:	cmp	w0, w1
  442178:	b.ge	4421c8 <_obstack_memory_used@@Base+0x5170>  // b.tcont
  44217c:	ldr	x2, [x19, #48]
  442180:	add	w1, w0, #0x1
  442184:	ldp	x21, x22, [sp, #32]
  442188:	str	x20, [x2, w0, sxtw #3]
  44218c:	mov	x0, x20
  442190:	str	w1, [x19, #56]
  442194:	ldp	x19, x20, [sp, #16]
  442198:	ldp	x29, x30, [sp], #80
  44219c:	ret
  4421a0:	ldr	x1, [x0, #8]
  4421a4:	str	x20, [x0, #8]
  4421a8:	ldr	x0, [x21]
  4421ac:	str	x0, [sp, #72]
  4421b0:	str	x1, [x21]
  4421b4:	ldr	x20, [sp, #72]
  4421b8:	b	44216c <_obstack_memory_used@@Base+0x5114>
  4421bc:	bl	443290 <_obstack_memory_used@@Base+0x6238>
  4421c0:	str	x0, [x21]
  4421c4:	b	442154 <_obstack_memory_used@@Base+0x50fc>
  4421c8:	ldp	x21, x22, [sp, #32]
  4421cc:	b	4420f0 <_obstack_memory_used@@Base+0x5098>
  4421d0:	ldp	w2, w3, [x19, #40]
  4421d4:	sub	w1, w1, #0x61
  4421d8:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  4421dc:	add	x0, x0, #0xdf0
  4421e0:	sbfiz	x1, x1, #5, #32
  4421e4:	add	x0, x0, #0x188
  4421e8:	add	x1, x0, x1
  4421ec:	cmp	w2, w3
  4421f0:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  4421f4:	mov	w0, #0x18                  	// #24
  4421f8:	add	w6, w2, #0x1
  4421fc:	ldr	x3, [x19, #32]
  442200:	smull	x2, w2, w0
  442204:	ldr	w7, [x1, #8]
  442208:	mov	w5, #0x27                  	// #39
  44220c:	add	x20, x3, x2
  442210:	ldr	w0, [x19, #72]
  442214:	add	x4, x4, #0x1
  442218:	add	w0, w0, w7
  44221c:	str	wzr, [x20, #4]
  442220:	str	w6, [x19, #40]
  442224:	str	w5, [x3, x2]
  442228:	str	x1, [x20, #8]
  44222c:	str	x4, [x19, #24]
  442230:	str	w0, [x19, #72]
  442234:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442238:	mov	x0, x19
  44223c:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  442240:	mov	x20, x0
  442244:	str	x0, [sp, #72]
  442248:	cbz	x20, 4420f0 <_obstack_memory_used@@Base+0x5098>
  44224c:	ldp	w0, w1, [x19, #56]
  442250:	cmp	w0, w1
  442254:	b.ge	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  442258:	ldr	x2, [x19, #48]
  44225c:	add	w1, w0, #0x1
  442260:	str	x20, [x2, w0, sxtw #3]
  442264:	str	w1, [x19, #56]
  442268:	ldr	x20, [sp, #72]
  44226c:	mov	x0, x20
  442270:	ldp	x19, x20, [sp, #16]
  442274:	ldp	x29, x30, [sp], #80
  442278:	ret
  44227c:	mov	x0, x19
  442280:	bl	443290 <_obstack_memory_used@@Base+0x6238>
  442284:	mov	x20, x0
  442288:	str	x0, [sp, #72]
  44228c:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442290:	add	x4, x4, #0x1
  442294:	str	x4, [x19, #24]
  442298:	mov	x0, x19
  44229c:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4422a0:	mov	x2, x0
  4422a4:	mov	x3, #0x0                   	// #0
  4422a8:	mov	x0, x19
  4422ac:	mov	w1, #0x26                  	// #38
  4422b0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4422b4:	mov	x20, x0
  4422b8:	str	x0, [sp, #72]
  4422bc:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  4422c0:	add	x4, x4, #0x1
  4422c4:	str	x4, [x19, #24]
  4422c8:	mov	x0, x19
  4422cc:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4422d0:	mov	x2, x0
  4422d4:	mov	x3, #0x0                   	// #0
  4422d8:	mov	x0, x19
  4422dc:	mov	w1, #0x24                  	// #36
  4422e0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4422e4:	mov	x20, x0
  4422e8:	str	x0, [sp, #72]
  4422ec:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  4422f0:	add	x4, x4, #0x1
  4422f4:	str	x4, [x19, #24]
  4422f8:	mov	x0, x19
  4422fc:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442300:	mov	x2, x0
  442304:	mov	x3, #0x0                   	// #0
  442308:	mov	x0, x19
  44230c:	mov	w1, #0x25                  	// #37
  442310:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442314:	mov	x20, x0
  442318:	str	x0, [sp, #72]
  44231c:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442320:	add	x0, x4, #0x1
  442324:	str	x0, [x19, #24]
  442328:	ldrb	w0, [x4, #1]
  44232c:	cbz	w0, 4420f0 <_obstack_memory_used@@Base+0x5098>
  442330:	add	x0, x4, #0x2
  442334:	str	x0, [x19, #24]
  442338:	ldrb	w0, [x4, #1]
  44233c:	cmp	w0, #0x68
  442340:	b.eq	442ab8 <_obstack_memory_used@@Base+0x5a60>  // b.none
  442344:	b.hi	44269c <_obstack_memory_used@@Base+0x5644>  // b.pmore
  442348:	cmp	w0, #0x63
  44234c:	b.eq	442a78 <_obstack_memory_used@@Base+0x5a20>  // b.none
  442350:	b.ls	44264c <_obstack_memory_used@@Base+0x55f4>  // b.plast
  442354:	cmp	w0, #0x65
  442358:	b.eq	442b58 <_obstack_memory_used@@Base+0x5b00>  // b.none
  44235c:	cmp	w0, #0x66
  442360:	b.ne	4428b8 <_obstack_memory_used@@Base+0x5860>  // b.any
  442364:	ldp	w0, w1, [x19, #40]
  442368:	cmp	w0, w1
  44236c:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  442370:	mov	w1, #0x18                  	// #24
  442374:	add	w5, w0, #0x1
  442378:	ldr	x3, [x19, #32]
  44237c:	smull	x0, w0, w1
  442380:	ldr	w2, [x19, #72]
  442384:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  442388:	add	x1, x1, #0xdf0
  44238c:	add	x20, x3, x0
  442390:	add	x1, x1, #0x4c8
  442394:	mov	w4, #0x27                  	// #39
  442398:	str	wzr, [x20, #4]
  44239c:	add	w2, w2, #0x9
  4423a0:	str	w5, [x19, #40]
  4423a4:	str	w4, [x3, x0]
  4423a8:	str	x1, [x20, #8]
  4423ac:	str	w2, [x19, #72]
  4423b0:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  4423b4:	add	x4, x4, #0x1
  4423b8:	str	x4, [x19, #24]
  4423bc:	mov	x0, x19
  4423c0:	bl	43fa50 <_obstack_memory_used@@Base+0x29f8>
  4423c4:	str	x0, [sp, #72]
  4423c8:	ldr	x1, [x19, #24]
  4423cc:	mov	x20, x0
  4423d0:	ldrb	w0, [x1]
  4423d4:	cmp	w0, #0x49
  4423d8:	b.eq	442998 <_obstack_memory_used@@Base+0x5940>  // b.none
  4423dc:	mov	x0, x19
  4423e0:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4423e4:	ldr	x3, [sp, #72]
  4423e8:	mov	x2, x0
  4423ec:	mov	w1, #0x21                  	// #33
  4423f0:	mov	x0, x19
  4423f4:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4423f8:	mov	x20, x0
  4423fc:	str	x0, [sp, #72]
  442400:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442404:	add	x4, x4, #0x1
  442408:	str	x4, [x19, #24]
  44240c:	mov	x0, x19
  442410:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442414:	mov	x2, x0
  442418:	mov	x3, #0x0                   	// #0
  44241c:	mov	x0, x19
  442420:	mov	w1, #0x22                  	// #34
  442424:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442428:	mov	x20, x0
  44242c:	str	x0, [sp, #72]
  442430:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442434:	ldrb	w0, [x4, #1]
  442438:	sub	w1, w0, #0x30
  44243c:	cmp	w0, #0x5f
  442440:	and	w1, w1, #0xff
  442444:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  442448:	b.ls	44245c <_obstack_memory_used@@Base+0x5404>  // b.plast
  44244c:	sub	w0, w0, #0x41
  442450:	and	w0, w0, #0xff
  442454:	cmp	w0, #0x19
  442458:	b.hi	442974 <_obstack_memory_used@@Base+0x591c>  // b.pmore
  44245c:	mov	w1, #0x0                   	// #0
  442460:	mov	x0, x19
  442464:	bl	43fc50 <_obstack_memory_used@@Base+0x2bf8>
  442468:	str	x0, [sp, #72]
  44246c:	ldr	x1, [x19, #24]
  442470:	mov	x20, x0
  442474:	ldrb	w0, [x1]
  442478:	cmp	w0, #0x49
  44247c:	b.ne	4420f4 <_obstack_memory_used@@Base+0x509c>  // b.any
  442480:	add	x1, x1, #0x1
  442484:	str	x1, [x19, #24]
  442488:	mov	x0, x19
  44248c:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  442490:	mov	x3, x0
  442494:	mov	x2, x20
  442498:	mov	x0, x19
  44249c:	mov	w1, #0x4                   	// #4
  4424a0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4424a4:	mov	x20, x0
  4424a8:	str	x0, [sp, #72]
  4424ac:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  4424b0:	mov	x0, x19
  4424b4:	stp	x21, x22, [sp, #32]
  4424b8:	bl	43f9d0 <_obstack_memory_used@@Base+0x2978>
  4424bc:	ldr	x21, [x19, #24]
  4424c0:	str	x0, [sp, #72]
  4424c4:	mov	x20, x0
  4424c8:	ldrb	w0, [x21]
  4424cc:	cmp	w0, #0x49
  4424d0:	b.eq	4428f8 <_obstack_memory_used@@Base+0x58a0>  // b.none
  4424d4:	ldp	x21, x22, [sp, #32]
  4424d8:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  4424dc:	add	x4, x4, #0x1
  4424e0:	str	x4, [x19, #24]
  4424e4:	mov	x0, x19
  4424e8:	bl	43fa50 <_obstack_memory_used@@Base+0x29f8>
  4424ec:	mov	x2, x0
  4424f0:	mov	x3, #0x0                   	// #0
  4424f4:	mov	x0, x19
  4424f8:	mov	w1, #0x28                  	// #40
  4424fc:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442500:	mov	x20, x0
  442504:	str	x0, [sp, #72]
  442508:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  44250c:	add	x4, x4, #0x1
  442510:	str	x4, [x19, #24]
  442514:	mov	x0, x19
  442518:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  44251c:	mov	x2, x0
  442520:	mov	x3, #0x0                   	// #0
  442524:	mov	x0, x19
  442528:	mov	w1, #0x23                  	// #35
  44252c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442530:	mov	x20, x0
  442534:	str	x0, [sp, #72]
  442538:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  44253c:	add	x3, x4, #0x1
  442540:	str	x3, [x19, #24]
  442544:	ldrb	w0, [x4, #1]
  442548:	cmp	w0, #0x5f
  44254c:	b.eq	44296c <_obstack_memory_used@@Base+0x5914>  // b.none
  442550:	sub	w0, w0, #0x30
  442554:	and	w0, w0, #0xff
  442558:	cmp	w0, #0x9
  44255c:	b.hi	4429c4 <_obstack_memory_used@@Base+0x596c>  // b.pmore
  442560:	mov	x1, x3
  442564:	nop
  442568:	mov	x4, x1
  44256c:	add	x1, x1, #0x1
  442570:	str	x1, [x19, #24]
  442574:	ldrb	w0, [x1]
  442578:	sub	w0, w0, #0x30
  44257c:	and	w0, w0, #0xff
  442580:	cmp	w0, #0x9
  442584:	b.ls	442568 <_obstack_memory_used@@Base+0x5510>  // b.plast
  442588:	ldp	w0, w5, [x19, #40]
  44258c:	sub	x2, x1, x3
  442590:	cmp	w0, w5
  442594:	b.ge	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  442598:	mov	w7, #0x18                  	// #24
  44259c:	add	w6, w0, #0x1
  4425a0:	ldr	x5, [x19, #32]
  4425a4:	smull	x0, w0, w7
  4425a8:	cmp	w2, #0x0
  4425ac:	add	x20, x5, x0
  4425b0:	str	wzr, [x20, #4]
  4425b4:	str	w6, [x19, #40]
  4425b8:	b.le	4420f0 <_obstack_memory_used@@Base+0x5098>
  4425bc:	str	xzr, [x5, x0]
  4425c0:	str	x3, [x20, #8]
  4425c4:	str	w2, [x20, #16]
  4425c8:	ldrb	w0, [x4, #1]
  4425cc:	mov	x3, x1
  4425d0:	cmp	w0, #0x5f
  4425d4:	b.ne	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.any
  4425d8:	add	x3, x3, #0x1
  4425dc:	str	x3, [x19, #24]
  4425e0:	mov	x0, x19
  4425e4:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4425e8:	mov	x3, x0
  4425ec:	mov	x2, x20
  4425f0:	mov	x0, x19
  4425f4:	mov	w1, #0x2a                  	// #42
  4425f8:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4425fc:	mov	x20, x0
  442600:	str	x0, [sp, #72]
  442604:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442608:	add	x4, x4, #0x1
  44260c:	str	x4, [x19, #24]
  442610:	mov	x0, x19
  442614:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442618:	mov	x20, x0
  44261c:	cbz	x0, 4420f0 <_obstack_memory_used@@Base+0x5098>
  442620:	mov	x0, x19
  442624:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442628:	mov	x3, x0
  44262c:	cbz	x0, 4420f0 <_obstack_memory_used@@Base+0x5098>
  442630:	mov	x2, x20
  442634:	mov	x0, x19
  442638:	mov	w1, #0x2b                  	// #43
  44263c:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442640:	mov	x20, x0
  442644:	str	x0, [sp, #72]
  442648:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  44264c:	cmp	w0, #0x54
  442650:	b.eq	44271c <_obstack_memory_used@@Base+0x56c4>  // b.none
  442654:	cmp	w0, #0x61
  442658:	b.ne	4427b0 <_obstack_memory_used@@Base+0x5758>  // b.any
  44265c:	ldp	w0, w1, [x19, #40]
  442660:	cmp	w0, w1
  442664:	b.ge	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  442668:	mov	w3, #0x18                  	// #24
  44266c:	add	w1, w0, #0x1
  442670:	ldr	x2, [x19, #32]
  442674:	smull	x0, w0, w3
  442678:	str	w1, [x19, #40]
  44267c:	mov	w3, #0x4                   	// #4
  442680:	add	x20, x2, x0
  442684:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  442688:	add	x1, x1, #0x8b0
  44268c:	str	xzr, [x2, x0]
  442690:	str	x1, [x20, #8]
  442694:	str	w3, [x20, #16]
  442698:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  44269c:	cmp	w0, #0x73
  4426a0:	b.eq	442a40 <_obstack_memory_used@@Base+0x59e8>  // b.none
  4426a4:	b.ls	442778 <_obstack_memory_used@@Base+0x5720>  // b.plast
  4426a8:	cmp	w0, #0x75
  4426ac:	b.eq	442ba8 <_obstack_memory_used@@Base+0x5b50>  // b.none
  4426b0:	cmp	w0, #0x76
  4426b4:	b.ne	442714 <_obstack_memory_used@@Base+0x56bc>  // b.any
  4426b8:	ldrb	w0, [x4, #2]
  4426bc:	cmp	w0, #0x5f
  4426c0:	b.eq	442c40 <_obstack_memory_used@@Base+0x5be8>  // b.none
  4426c4:	mov	x0, x19
  4426c8:	bl	43f8f0 <_obstack_memory_used@@Base+0x2898>
  4426cc:	mov	x20, x0
  4426d0:	cbz	x20, 4420f0 <_obstack_memory_used@@Base+0x5098>
  4426d4:	ldr	x0, [x19, #24]
  4426d8:	ldrb	w1, [x0]
  4426dc:	cmp	w1, #0x5f
  4426e0:	b.ne	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.any
  4426e4:	add	x0, x0, #0x1
  4426e8:	str	x0, [x19, #24]
  4426ec:	mov	x0, x19
  4426f0:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4426f4:	mov	x3, x0
  4426f8:	mov	x2, x20
  4426fc:	mov	x0, x19
  442700:	mov	w1, #0x2d                  	// #45
  442704:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442708:	mov	x20, x0
  44270c:	str	x0, [sp, #72]
  442710:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442714:	cmp	w0, #0x74
  442718:	b.ne	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.any
  44271c:	ldr	w20, [x19, #76]
  442720:	mov	w0, #0x1                   	// #1
  442724:	str	w0, [x19, #76]
  442728:	mov	x0, x19
  44272c:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  442730:	str	w20, [x19, #76]
  442734:	mov	x2, x0
  442738:	mov	x3, #0x0                   	// #0
  44273c:	mov	x0, x19
  442740:	mov	w1, #0x43                  	// #67
  442744:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442748:	str	x0, [sp, #72]
  44274c:	mov	x20, x0
  442750:	cbz	x0, 4420f0 <_obstack_memory_used@@Base+0x5098>
  442754:	ldr	x0, [x19, #24]
  442758:	ldrb	w1, [x0]
  44275c:	cbz	w1, 4420f0 <_obstack_memory_used@@Base+0x5098>
  442760:	add	x1, x0, #0x1
  442764:	str	x1, [x19, #24]
  442768:	ldrb	w0, [x0]
  44276c:	cmp	w0, #0x45
  442770:	b.ne	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.any
  442774:	b	44224c <_obstack_memory_used@@Base+0x51f4>
  442778:	cmp	w0, #0x6e
  44277c:	b.eq	442b08 <_obstack_memory_used@@Base+0x5ab0>  // b.none
  442780:	cmp	w0, #0x70
  442784:	b.ne	442860 <_obstack_memory_used@@Base+0x5808>  // b.any
  442788:	mov	x0, x19
  44278c:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442790:	mov	x3, #0x0                   	// #0
  442794:	mov	x2, x0
  442798:	mov	w1, #0x4b                  	// #75
  44279c:	mov	x0, x19
  4427a0:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4427a4:	mov	x20, x0
  4427a8:	str	x0, [sp, #72]
  4427ac:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  4427b0:	cmp	w0, #0x46
  4427b4:	b.ne	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.any
  4427b8:	ldp	w0, w1, [x19, #40]
  4427bc:	cmp	w0, w1
  4427c0:	b.ge	442c7c <_obstack_memory_used@@Base+0x5c24>  // b.tcont
  4427c4:	mov	w2, #0x18                  	// #24
  4427c8:	add	w3, w0, #0x1
  4427cc:	ldr	x1, [x19, #32]
  4427d0:	smull	x0, w0, w2
  4427d4:	mov	w2, #0x2c                  	// #44
  4427d8:	add	x20, x1, x0
  4427dc:	str	wzr, [x20, #4]
  4427e0:	str	w3, [x19, #40]
  4427e4:	str	x20, [sp, #72]
  4427e8:	str	w2, [x1, x0]
  4427ec:	ldrb	w0, [x4, #2]
  4427f0:	sub	w0, w0, #0x30
  4427f4:	and	w0, w0, #0xff
  4427f8:	cmp	w0, #0x9
  4427fc:	cset	w1, ls  // ls = plast
  442800:	strh	w1, [x20, #16]
  442804:	b.hi	442814 <_obstack_memory_used@@Base+0x57bc>  // b.pmore
  442808:	add	x0, x19, #0x18
  44280c:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  442810:	ldr	x20, [sp, #72]
  442814:	mov	x0, x19
  442818:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  44281c:	str	x0, [x20, #8]
  442820:	ldr	x1, [sp, #72]
  442824:	ldr	x0, [x1, #8]
  442828:	cbz	x0, 4420f0 <_obstack_memory_used@@Base+0x5098>
  44282c:	add	x0, x19, #0x18
  442830:	bl	43f820 <_obstack_memory_used@@Base+0x27c8>
  442834:	ldr	x1, [x19, #24]
  442838:	ldrb	w0, [x1]
  44283c:	cbz	w0, 44284c <_obstack_memory_used@@Base+0x57f4>
  442840:	add	x0, x1, #0x1
  442844:	str	x0, [x19, #24]
  442848:	ldrb	w0, [x1]
  44284c:	ldr	x20, [sp, #72]
  442850:	cmp	w0, #0x73
  442854:	cset	w0, eq  // eq = none
  442858:	strh	w0, [x20, #18]
  44285c:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442860:	cmp	w0, #0x69
  442864:	b.ne	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.any
  442868:	ldp	w0, w1, [x19, #40]
  44286c:	cmp	w0, w1
  442870:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  442874:	mov	w1, #0x18                  	// #24
  442878:	add	w5, w0, #0x1
  44287c:	ldr	x3, [x19, #32]
  442880:	smull	x0, w0, w1
  442884:	ldr	w2, [x19, #72]
  442888:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  44288c:	add	x1, x1, #0xdf0
  442890:	add	x20, x3, x0
  442894:	add	x1, x1, #0x588
  442898:	mov	w4, #0x27                  	// #39
  44289c:	str	wzr, [x20, #4]
  4428a0:	add	w2, w2, #0x8
  4428a4:	str	w5, [x19, #40]
  4428a8:	str	w4, [x3, x0]
  4428ac:	str	x1, [x20, #8]
  4428b0:	str	w2, [x19, #72]
  4428b4:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  4428b8:	cmp	w0, #0x64
  4428bc:	b.ne	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.any
  4428c0:	ldp	w0, w1, [x19, #40]
  4428c4:	cmp	w0, w1
  4428c8:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  4428cc:	mov	w1, #0x18                  	// #24
  4428d0:	add	w5, w0, #0x1
  4428d4:	ldr	x3, [x19, #32]
  4428d8:	smull	x0, w0, w1
  4428dc:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  4428e0:	add	x1, x1, #0xdf0
  4428e4:	ldr	w2, [x19, #72]
  4428e8:	add	x1, x1, #0x4e8
  4428ec:	add	x20, x3, x0
  4428f0:	mov	w4, #0x27                  	// #39
  4428f4:	b	442398 <_obstack_memory_used@@Base+0x5340>
  4428f8:	ldr	w0, [x19, #80]
  4428fc:	cbnz	w0, 4429f0 <_obstack_memory_used@@Base+0x5998>
  442900:	cbz	x20, 4421c8 <_obstack_memory_used@@Base+0x5170>
  442904:	ldp	w0, w1, [x19, #56]
  442908:	cmp	w0, w1
  44290c:	b.ge	4421c8 <_obstack_memory_used@@Base+0x5170>  // b.tcont
  442910:	ldr	x2, [x19, #48]
  442914:	add	w1, w0, #0x1
  442918:	mov	x3, #0x0                   	// #0
  44291c:	str	x20, [x2, w0, sxtw #3]
  442920:	str	w1, [x19, #56]
  442924:	ldrb	w0, [x21]
  442928:	sub	w0, w0, #0x49
  44292c:	and	w0, w0, #0xff
  442930:	cmp	w0, #0x1
  442934:	b.hi	44294c <_obstack_memory_used@@Base+0x58f4>  // b.pmore
  442938:	add	x21, x21, #0x1
  44293c:	str	x21, [x19, #24]
  442940:	mov	x0, x19
  442944:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  442948:	mov	x3, x0
  44294c:	mov	x2, x20
  442950:	mov	x0, x19
  442954:	mov	w1, #0x4                   	// #4
  442958:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  44295c:	mov	x20, x0
  442960:	str	x0, [sp, #72]
  442964:	ldp	x21, x22, [sp, #32]
  442968:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  44296c:	mov	x20, #0x0                   	// #0
  442970:	b	4425d8 <_obstack_memory_used@@Base+0x5580>
  442974:	mov	x0, x19
  442978:	bl	441b38 <_obstack_memory_used@@Base+0x4ae0>
  44297c:	str	x0, [sp, #72]
  442980:	mov	x20, x0
  442984:	cbz	x0, 4420f0 <_obstack_memory_used@@Base+0x5098>
  442988:	ldr	w0, [x0]
  44298c:	cmp	w0, #0x18
  442990:	b.ne	44224c <_obstack_memory_used@@Base+0x51f4>  // b.any
  442994:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442998:	add	x1, x1, #0x1
  44299c:	str	x1, [x19, #24]
  4429a0:	mov	x0, x19
  4429a4:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  4429a8:	mov	x3, x0
  4429ac:	mov	x2, x20
  4429b0:	mov	x0, x19
  4429b4:	mov	w1, #0x4                   	// #4
  4429b8:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4429bc:	str	x0, [sp, #72]
  4429c0:	b	4423dc <_obstack_memory_used@@Base+0x5384>
  4429c4:	ldr	w20, [x19, #76]
  4429c8:	mov	w0, #0x1                   	// #1
  4429cc:	str	w0, [x19, #76]
  4429d0:	mov	x0, x19
  4429d4:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  4429d8:	str	w20, [x19, #76]
  4429dc:	mov	x20, x0
  4429e0:	cbz	x0, 4420f0 <_obstack_memory_used@@Base+0x5098>
  4429e4:	ldr	x1, [x19, #24]
  4429e8:	ldrb	w0, [x1]
  4429ec:	b	4425cc <_obstack_memory_used@@Base+0x5574>
  4429f0:	ldr	w22, [x19, #56]
  4429f4:	add	x0, x21, #0x1
  4429f8:	ldr	w20, [x19, #72]
  4429fc:	str	x23, [sp, #48]
  442a00:	str	x0, [x19, #24]
  442a04:	mov	x0, x19
  442a08:	ldr	w23, [x19, #40]
  442a0c:	bl	441280 <_obstack_memory_used@@Base+0x4228>
  442a10:	ldr	x1, [x19, #24]
  442a14:	ldrb	w1, [x1]
  442a18:	cmp	w1, #0x49
  442a1c:	b.eq	442bf8 <_obstack_memory_used@@Base+0x5ba0>  // b.none
  442a20:	str	x21, [x19, #24]
  442a24:	str	w23, [x19, #40]
  442a28:	str	w22, [x19, #56]
  442a2c:	str	w20, [x19, #72]
  442a30:	ldp	x21, x22, [sp, #32]
  442a34:	ldr	x23, [sp, #48]
  442a38:	ldr	x20, [sp, #72]
  442a3c:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442a40:	ldp	w0, w1, [x19, #40]
  442a44:	cmp	w0, w1
  442a48:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  442a4c:	mov	w1, #0x18                  	// #24
  442a50:	add	w5, w0, #0x1
  442a54:	ldr	x3, [x19, #32]
  442a58:	smull	x0, w0, w1
  442a5c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  442a60:	add	x1, x1, #0xdf0
  442a64:	ldr	w2, [x19, #72]
  442a68:	add	x1, x1, #0x568
  442a6c:	add	x20, x3, x0
  442a70:	mov	w4, #0x27                  	// #39
  442a74:	b	44289c <_obstack_memory_used@@Base+0x5844>
  442a78:	ldp	w0, w1, [x19, #40]
  442a7c:	cmp	w0, w1
  442a80:	b.ge	4420f0 <_obstack_memory_used@@Base+0x5098>  // b.tcont
  442a84:	mov	w3, #0x18                  	// #24
  442a88:	add	w1, w0, #0x1
  442a8c:	ldr	x2, [x19, #32]
  442a90:	smull	x0, w0, w3
  442a94:	str	w1, [x19, #40]
  442a98:	mov	w3, #0xe                   	// #14
  442a9c:	add	x20, x2, x0
  442aa0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  442aa4:	add	x1, x1, #0x8b8
  442aa8:	str	xzr, [x2, x0]
  442aac:	str	x1, [x20, #8]
  442ab0:	str	w3, [x20, #16]
  442ab4:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442ab8:	ldp	w0, w1, [x19, #40]
  442abc:	cmp	w0, w1
  442ac0:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  442ac4:	mov	w1, #0x18                  	// #24
  442ac8:	add	w5, w0, #0x1
  442acc:	ldr	x3, [x19, #32]
  442ad0:	smull	x0, w0, w1
  442ad4:	ldr	w2, [x19, #72]
  442ad8:	mov	w4, #0x27                  	// #39
  442adc:	add	x20, x3, x0
  442ae0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  442ae4:	add	x1, x1, #0xdf0
  442ae8:	add	w2, w2, #0x4
  442aec:	add	x1, x1, #0x528
  442af0:	str	wzr, [x20, #4]
  442af4:	str	w5, [x19, #40]
  442af8:	str	w4, [x3, x0]
  442afc:	str	x1, [x20, #8]
  442b00:	str	w2, [x19, #72]
  442b04:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442b08:	ldp	w0, w1, [x19, #40]
  442b0c:	cmp	w0, w1
  442b10:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  442b14:	mov	w1, #0x18                  	// #24
  442b18:	add	w5, w0, #0x1
  442b1c:	ldr	x3, [x19, #32]
  442b20:	smull	x0, w0, w1
  442b24:	ldr	w2, [x19, #72]
  442b28:	mov	w4, #0x27                  	// #39
  442b2c:	add	x20, x3, x0
  442b30:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  442b34:	add	x1, x1, #0xdf0
  442b38:	add	w2, w2, #0x11
  442b3c:	add	x1, x1, #0x5a8
  442b40:	str	wzr, [x20, #4]
  442b44:	str	w5, [x19, #40]
  442b48:	str	w4, [x3, x0]
  442b4c:	str	x1, [x20, #8]
  442b50:	str	w2, [x19, #72]
  442b54:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442b58:	ldp	w0, w1, [x19, #40]
  442b5c:	cmp	w0, w1
  442b60:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  442b64:	mov	w1, #0x18                  	// #24
  442b68:	add	w5, w0, #0x1
  442b6c:	ldr	x3, [x19, #32]
  442b70:	smull	x0, w0, w1
  442b74:	ldr	w2, [x19, #72]
  442b78:	mov	w4, #0x27                  	// #39
  442b7c:	add	x20, x3, x0
  442b80:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  442b84:	add	x1, x1, #0xdf0
  442b88:	add	w2, w2, #0xa
  442b8c:	add	x1, x1, #0x508
  442b90:	str	wzr, [x20, #4]
  442b94:	str	w5, [x19, #40]
  442b98:	str	w4, [x3, x0]
  442b9c:	str	x1, [x20, #8]
  442ba0:	str	w2, [x19, #72]
  442ba4:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442ba8:	ldp	w0, w1, [x19, #40]
  442bac:	cmp	w0, w1
  442bb0:	b.ge	442c90 <_obstack_memory_used@@Base+0x5c38>  // b.tcont
  442bb4:	mov	w1, #0x18                  	// #24
  442bb8:	add	w5, w0, #0x1
  442bbc:	ldr	x3, [x19, #32]
  442bc0:	smull	x0, w0, w1
  442bc4:	ldr	w2, [x19, #72]
  442bc8:	mov	w4, #0x27                  	// #39
  442bcc:	add	x20, x3, x0
  442bd0:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  442bd4:	add	x1, x1, #0xdf0
  442bd8:	add	w2, w2, #0x7
  442bdc:	add	x1, x1, #0x548
  442be0:	str	wzr, [x20, #4]
  442be4:	str	w5, [x19, #40]
  442be8:	str	w4, [x3, x0]
  442bec:	str	x1, [x20, #8]
  442bf0:	str	w2, [x19, #72]
  442bf4:	b	4420f4 <_obstack_memory_used@@Base+0x509c>
  442bf8:	ldr	x2, [sp, #72]
  442bfc:	cbz	x2, 442c70 <_obstack_memory_used@@Base+0x5c18>
  442c00:	ldp	w4, w1, [x19, #56]
  442c04:	cmp	w4, w1
  442c08:	b.ge	442c70 <_obstack_memory_used@@Base+0x5c18>  // b.tcont
  442c0c:	ldr	x6, [x19, #48]
  442c10:	add	w5, w4, #0x1
  442c14:	mov	x3, x0
  442c18:	mov	w1, #0x4                   	// #4
  442c1c:	mov	x0, x19
  442c20:	str	x2, [x6, w4, sxtw #3]
  442c24:	str	w5, [x19, #56]
  442c28:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442c2c:	mov	x20, x0
  442c30:	str	x0, [sp, #72]
  442c34:	ldp	x21, x22, [sp, #32]
  442c38:	ldr	x23, [sp, #48]
  442c3c:	b	442248 <_obstack_memory_used@@Base+0x51f0>
  442c40:	add	x4, x4, #0x3
  442c44:	stp	x21, x22, [sp, #32]
  442c48:	mov	w1, #0x1                   	// #1
  442c4c:	ldr	w21, [x19, #76]
  442c50:	mov	x0, x19
  442c54:	str	x4, [x19, #24]
  442c58:	str	w1, [x19, #76]
  442c5c:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  442c60:	mov	x20, x0
  442c64:	str	w21, [x19, #76]
  442c68:	ldp	x21, x22, [sp, #32]
  442c6c:	b	4426d0 <_obstack_memory_used@@Base+0x5678>
  442c70:	ldp	x21, x22, [sp, #32]
  442c74:	ldr	x23, [sp, #48]
  442c78:	b	4420f0 <_obstack_memory_used@@Base+0x5098>
  442c7c:	mov	x0, #0x0                   	// #0
  442c80:	stp	x21, x22, [sp, #32]
  442c84:	str	x23, [sp, #48]
  442c88:	str	wzr, [x0]
  442c8c:	brk	#0x3e8
  442c90:	mov	x0, #0x0                   	// #0
  442c94:	str	xzr, [sp, #72]
  442c98:	stp	x21, x22, [sp, #32]
  442c9c:	str	x23, [sp, #48]
  442ca0:	ldr	x0, [x0, #8]
  442ca4:	brk	#0x3e8
  442ca8:	stp	x29, x30, [sp, #-32]!
  442cac:	mov	x29, sp
  442cb0:	ldr	x1, [x0, #24]
  442cb4:	stp	x19, x20, [sp, #16]
  442cb8:	mov	x19, x0
  442cbc:	ldrb	w10, [x1]
  442cc0:	cbz	w10, 442d84 <_obstack_memory_used@@Base+0x5d2c>
  442cc4:	add	x2, x1, #0x1
  442cc8:	str	x2, [x0, #24]
  442ccc:	ldrb	w10, [x1, #1]
  442cd0:	ldrb	w8, [x1]
  442cd4:	cbnz	w10, 442d8c <_obstack_memory_used@@Base+0x5d34>
  442cd8:	adrp	x5, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  442cdc:	add	x5, x5, #0xdf0
  442ce0:	add	x5, x5, #0x5c8
  442ce4:	mov	w4, #0x43                  	// #67
  442ce8:	mov	w2, #0x0                   	// #0
  442cec:	mov	w7, #0x18                  	// #24
  442cf0:	sub	w1, w4, w2
  442cf4:	add	w1, w1, w1, lsr #31
  442cf8:	add	w1, w2, w1, asr #1
  442cfc:	smull	x3, w1, w7
  442d00:	add	x9, x5, x3
  442d04:	ldr	x3, [x5, x3]
  442d08:	ldrb	w6, [x3]
  442d0c:	cmp	w6, w8
  442d10:	b.eq	442d34 <_obstack_memory_used@@Base+0x5cdc>  // b.none
  442d14:	b.ls	442d7c <_obstack_memory_used@@Base+0x5d24>  // b.plast
  442d18:	mov	w4, w1
  442d1c:	cmp	w2, w4
  442d20:	b.ne	442cf0 <_obstack_memory_used@@Base+0x5c98>  // b.any
  442d24:	mov	x0, #0x0                   	// #0
  442d28:	ldp	x19, x20, [sp, #16]
  442d2c:	ldp	x29, x30, [sp], #32
  442d30:	ret
  442d34:	ldrb	w3, [x3, #1]
  442d38:	cmp	w3, w10
  442d3c:	b.ne	442d14 <_obstack_memory_used@@Base+0x5cbc>  // b.any
  442d40:	ldp	w0, w1, [x19, #40]
  442d44:	cmp	w0, w1
  442d48:	b.ge	442d24 <_obstack_memory_used@@Base+0x5ccc>  // b.tcont
  442d4c:	ldr	x2, [x19, #32]
  442d50:	smull	x7, w0, w7
  442d54:	add	w1, w0, #0x1
  442d58:	mov	w3, #0x32                  	// #50
  442d5c:	add	x0, x2, x7
  442d60:	str	wzr, [x0, #4]
  442d64:	str	w1, [x19, #40]
  442d68:	str	w3, [x2, x7]
  442d6c:	str	x9, [x0, #8]
  442d70:	ldp	x19, x20, [sp, #16]
  442d74:	ldp	x29, x30, [sp], #32
  442d78:	ret
  442d7c:	add	w2, w1, #0x1
  442d80:	b	442d1c <_obstack_memory_used@@Base+0x5cc4>
  442d84:	mov	w8, #0x0                   	// #0
  442d88:	b	442cd8 <_obstack_memory_used@@Base+0x5c80>
  442d8c:	add	x2, x1, #0x2
  442d90:	str	x2, [x0, #24]
  442d94:	cmp	w8, #0x76
  442d98:	ldrb	w10, [x1, #1]
  442d9c:	b.ne	442df8 <_obstack_memory_used@@Base+0x5da0>  // b.any
  442da0:	sub	w11, w10, #0x30
  442da4:	and	w1, w11, #0xff
  442da8:	cmp	w1, #0x9
  442dac:	b.hi	442cd8 <_obstack_memory_used@@Base+0x5c80>  // b.pmore
  442db0:	bl	43fa50 <_obstack_memory_used@@Base+0x29f8>
  442db4:	mov	x2, x0
  442db8:	ldp	w1, w0, [x19, #40]
  442dbc:	cmp	w1, w0
  442dc0:	b.ge	442d24 <_obstack_memory_used@@Base+0x5ccc>  // b.tcont
  442dc4:	mov	w0, #0x18                  	// #24
  442dc8:	add	w4, w1, #0x1
  442dcc:	ldr	x3, [x19, #32]
  442dd0:	smull	x1, w1, w0
  442dd4:	add	x0, x3, x1
  442dd8:	str	wzr, [x0, #4]
  442ddc:	str	w4, [x19, #40]
  442de0:	cbz	x2, 442d24 <_obstack_memory_used@@Base+0x5ccc>
  442de4:	mov	x4, #0x33                  	// #51
  442de8:	str	x4, [x3, x1]
  442dec:	str	w11, [x0, #8]
  442df0:	str	x2, [x0, #16]
  442df4:	b	442d28 <_obstack_memory_used@@Base+0x5cd0>
  442df8:	cmp	w10, #0x76
  442dfc:	mov	w1, #0x63                  	// #99
  442e00:	ccmp	w8, w1, #0x0, eq  // eq = none
  442e04:	b.ne	442cd8 <_obstack_memory_used@@Base+0x5c80>  // b.any
  442e08:	ldp	w1, w20, [x0, #76]
  442e0c:	cmp	w1, #0x0
  442e10:	cset	w1, eq  // eq = none
  442e14:	str	w1, [x0, #80]
  442e18:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442e1c:	mov	x2, x0
  442e20:	ldr	w1, [x19, #80]
  442e24:	mov	x3, #0x0                   	// #0
  442e28:	cbz	w1, 442e48 <_obstack_memory_used@@Base+0x5df0>
  442e2c:	mov	x0, x19
  442e30:	mov	w1, #0x35                  	// #53
  442e34:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442e38:	str	w20, [x19, #80]
  442e3c:	ldp	x19, x20, [sp, #16]
  442e40:	ldp	x29, x30, [sp], #32
  442e44:	ret
  442e48:	mov	x0, x19
  442e4c:	mov	w1, #0x34                  	// #52
  442e50:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442e54:	str	w20, [x19, #80]
  442e58:	b	442e3c <_obstack_memory_used@@Base+0x5de4>
  442e5c:	nop
  442e60:	stp	x29, x30, [sp, #-64]!
  442e64:	mov	x29, sp
  442e68:	stp	x19, x20, [sp, #16]
  442e6c:	mov	x19, x0
  442e70:	mov	w0, #0x2e                  	// #46
  442e74:	str	xzr, [sp, #56]
  442e78:	ldr	x2, [x19, #24]
  442e7c:	ldrb	w1, [x2]
  442e80:	cmp	w1, #0x45
  442e84:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  442e88:	ccmp	w1, w0, #0x4, ne  // ne = any
  442e8c:	b.eq	442f20 <_obstack_memory_used@@Base+0x5ec8>  // b.none
  442e90:	add	x20, sp, #0x38
  442e94:	stp	x21, x22, [sp, #32]
  442e98:	mov	w22, w0
  442e9c:	mov	w21, #0x4f                  	// #79
  442ea0:	cmp	w1, #0x52
  442ea4:	mov	x0, x19
  442ea8:	ccmp	w1, w21, #0x4, ne  // ne = any
  442eac:	b.ne	442ebc <_obstack_memory_used@@Base+0x5e64>  // b.any
  442eb0:	ldrb	w1, [x2, #1]
  442eb4:	cmp	w1, #0x45
  442eb8:	b.eq	442efc <_obstack_memory_used@@Base+0x5ea4>  // b.none
  442ebc:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  442ec0:	mov	x2, x0
  442ec4:	mov	x3, #0x0                   	// #0
  442ec8:	mov	x0, x19
  442ecc:	mov	w1, #0x2e                  	// #46
  442ed0:	cbz	x2, 442f1c <_obstack_memory_used@@Base+0x5ec4>
  442ed4:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  442ed8:	str	x0, [x20]
  442edc:	add	x20, x0, #0x10
  442ee0:	cbz	x0, 442f1c <_obstack_memory_used@@Base+0x5ec4>
  442ee4:	ldr	x2, [x19, #24]
  442ee8:	ldrb	w1, [x2]
  442eec:	cmp	w1, #0x45
  442ef0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  442ef4:	ccmp	w1, w22, #0x4, ne  // ne = any
  442ef8:	b.ne	442ea0 <_obstack_memory_used@@Base+0x5e48>  // b.any
  442efc:	ldr	x0, [sp, #56]
  442f00:	cbz	x0, 442f1c <_obstack_memory_used@@Base+0x5ec4>
  442f04:	ldr	x1, [x0, #16]
  442f08:	cbz	x1, 442f30 <_obstack_memory_used@@Base+0x5ed8>
  442f0c:	ldp	x21, x22, [sp, #32]
  442f10:	ldp	x19, x20, [sp, #16]
  442f14:	ldp	x29, x30, [sp], #64
  442f18:	ret
  442f1c:	ldp	x21, x22, [sp, #32]
  442f20:	mov	x0, #0x0                   	// #0
  442f24:	ldp	x19, x20, [sp, #16]
  442f28:	ldp	x29, x30, [sp], #64
  442f2c:	ret
  442f30:	ldr	x1, [x0, #8]
  442f34:	ldr	w2, [x1]
  442f38:	cmp	w2, #0x27
  442f3c:	b.ne	442f0c <_obstack_memory_used@@Base+0x5eb4>  // b.any
  442f40:	ldr	x1, [x1, #8]
  442f44:	ldr	w2, [x1, #28]
  442f48:	cmp	w2, #0x9
  442f4c:	b.ne	442f0c <_obstack_memory_used@@Base+0x5eb4>  // b.any
  442f50:	ldr	w2, [x1, #8]
  442f54:	ldr	w1, [x19, #72]
  442f58:	ldp	x21, x22, [sp, #32]
  442f5c:	sub	w1, w1, w2
  442f60:	str	w1, [x19, #72]
  442f64:	str	xzr, [x0, #8]
  442f68:	b	442f10 <_obstack_memory_used@@Base+0x5eb8>
  442f6c:	nop
  442f70:	stp	x29, x30, [sp, #-96]!
  442f74:	cmp	w2, #0x0
  442f78:	mov	x29, sp
  442f7c:	stp	x19, x20, [sp, #16]
  442f80:	mov	x19, x0
  442f84:	mov	w0, #0x1b                  	// #27
  442f88:	stp	x21, x22, [sp, #32]
  442f8c:	mov	x20, x1
  442f90:	mov	w22, #0x1c                  	// #28
  442f94:	ldr	x4, [x19, #24]
  442f98:	stp	x23, x24, [sp, #48]
  442f9c:	mov	w23, #0x1d                  	// #29
  442fa0:	stp	x25, x26, [sp, #64]
  442fa4:	mov	w25, #0x1e                  	// #30
  442fa8:	csel	w25, w25, w0, ne  // ne = any
  442fac:	ldrb	w5, [x4]
  442fb0:	mov	w0, #0x1a                  	// #26
  442fb4:	csel	w23, w23, w0, ne  // ne = any
  442fb8:	mov	w0, #0x19                  	// #25
  442fbc:	mov	w24, w2
  442fc0:	csel	w22, w22, w0, ne  // ne = any
  442fc4:	mov	x21, x1
  442fc8:	mov	x0, x4
  442fcc:	mov	w26, #0x1                   	// #1
  442fd0:	bl	43ff60 <_obstack_memory_used@@Base+0x2f08>
  442fd4:	cbz	w0, 4430f0 <_obstack_memory_used@@Base+0x6098>
  442fd8:	add	x0, x4, #0x1
  442fdc:	str	x0, [x19, #24]
  442fe0:	cmp	w5, #0x72
  442fe4:	b.eq	4430b0 <_obstack_memory_used@@Base+0x6058>  // b.none
  442fe8:	cmp	w5, #0x56
  442fec:	b.eq	443150 <_obstack_memory_used@@Base+0x60f8>  // b.none
  442ff0:	cmp	w5, #0x4b
  442ff4:	b.eq	443168 <_obstack_memory_used@@Base+0x6110>  // b.none
  442ff8:	ldrb	w0, [x4, #1]
  442ffc:	cbz	w0, 443090 <_obstack_memory_used@@Base+0x6038>
  443000:	add	x0, x4, #0x2
  443004:	str	x0, [x19, #24]
  443008:	ldrb	w0, [x4, #1]
  44300c:	cmp	w0, #0x78
  443010:	b.eq	443180 <_obstack_memory_used@@Base+0x6128>  // b.none
  443014:	and	w1, w0, #0xffffffdf
  443018:	cmp	w1, #0x4f
  44301c:	and	w1, w1, #0xff
  443020:	b.ne	443198 <_obstack_memory_used@@Base+0x6140>  // b.any
  443024:	ldr	w2, [x19, #72]
  443028:	cmp	w0, #0x4f
  44302c:	add	w0, w2, #0x9
  443030:	str	w0, [x19, #72]
  443034:	b.ne	4431dc <_obstack_memory_used@@Base+0x6184>  // b.any
  443038:	str	x27, [sp, #80]
  44303c:	mov	x0, x19
  443040:	ldr	w27, [x19, #76]
  443044:	str	w26, [x19, #76]
  443048:	bl	440aa8 <_obstack_memory_used@@Base+0x3a50>
  44304c:	str	w27, [x19, #76]
  443050:	mov	x3, x0
  443054:	cbz	x0, 4431f4 <_obstack_memory_used@@Base+0x619c>
  443058:	ldr	x0, [x19, #24]
  44305c:	ldrb	w1, [x0]
  443060:	cmp	w1, #0x45
  443064:	b.ne	4431f4 <_obstack_memory_used@@Base+0x619c>  // b.any
  443068:	add	x0, x0, #0x1
  44306c:	mov	w1, #0x4f                  	// #79
  443070:	ldr	x27, [sp, #80]
  443074:	str	x0, [x19, #24]
  443078:	mov	x2, #0x0                   	// #0
  44307c:	mov	x0, x19
  443080:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  443084:	str	x0, [x20]
  443088:	cbnz	x0, 4430d8 <_obstack_memory_used@@Base+0x6080>
  44308c:	nop
  443090:	mov	x20, #0x0                   	// #0
  443094:	mov	x0, x20
  443098:	ldp	x19, x20, [sp, #16]
  44309c:	ldp	x21, x22, [sp, #32]
  4430a0:	ldp	x23, x24, [sp, #48]
  4430a4:	ldp	x25, x26, [sp, #64]
  4430a8:	ldp	x29, x30, [sp], #96
  4430ac:	ret
  4430b0:	ldr	w0, [x19, #72]
  4430b4:	mov	w1, w22
  4430b8:	mov	x3, #0x0                   	// #0
  4430bc:	add	w0, w0, #0x9
  4430c0:	str	w0, [x19, #72]
  4430c4:	mov	x0, x19
  4430c8:	mov	x2, #0x0                   	// #0
  4430cc:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4430d0:	str	x0, [x20]
  4430d4:	cbz	x0, 443090 <_obstack_memory_used@@Base+0x6038>
  4430d8:	ldr	x4, [x19, #24]
  4430dc:	add	x20, x0, #0x8
  4430e0:	mov	x0, x4
  4430e4:	ldrb	w5, [x4]
  4430e8:	bl	43ff60 <_obstack_memory_used@@Base+0x2f08>
  4430ec:	cbnz	w0, 442fd8 <_obstack_memory_used@@Base+0x5f80>
  4430f0:	cmp	w5, #0x46
  4430f4:	eor	w24, w24, #0x1
  4430f8:	cset	w0, eq  // eq = none
  4430fc:	tst	w24, w0
  443100:	b.eq	443094 <_obstack_memory_used@@Base+0x603c>  // b.none
  443104:	cmp	x20, x21
  443108:	b.eq	443094 <_obstack_memory_used@@Base+0x603c>  // b.none
  44310c:	mov	w3, #0x1d                  	// #29
  443110:	mov	w2, #0x1e                  	// #30
  443114:	mov	w1, #0x1c                  	// #28
  443118:	b	443130 <_obstack_memory_used@@Base+0x60d8>
  44311c:	cmp	w0, #0x19
  443120:	b.eq	4431ec <_obstack_memory_used@@Base+0x6194>  // b.none
  443124:	add	x21, x21, #0x8
  443128:	cmp	x20, x21
  44312c:	b.eq	443094 <_obstack_memory_used@@Base+0x603c>  // b.none
  443130:	ldr	x21, [x21]
  443134:	ldr	w0, [x21]
  443138:	cmp	w0, #0x1a
  44313c:	b.eq	4431e4 <_obstack_memory_used@@Base+0x618c>  // b.none
  443140:	cmp	w0, #0x1b
  443144:	b.ne	44311c <_obstack_memory_used@@Base+0x60c4>  // b.any
  443148:	str	w2, [x21]
  44314c:	b	443124 <_obstack_memory_used@@Base+0x60cc>
  443150:	ldr	w0, [x19, #72]
  443154:	mov	w1, w23
  443158:	mov	x3, #0x0                   	// #0
  44315c:	add	w0, w0, #0x9
  443160:	str	w0, [x19, #72]
  443164:	b	4430c4 <_obstack_memory_used@@Base+0x606c>
  443168:	ldr	w0, [x19, #72]
  44316c:	mov	w1, w25
  443170:	mov	x3, #0x0                   	// #0
  443174:	add	w0, w0, #0x6
  443178:	str	w0, [x19, #72]
  44317c:	b	4430c4 <_obstack_memory_used@@Base+0x606c>
  443180:	ldr	w0, [x19, #72]
  443184:	mov	x3, #0x0                   	// #0
  443188:	mov	w1, #0x4d                  	// #77
  44318c:	add	w0, w0, #0x11
  443190:	str	w0, [x19, #72]
  443194:	b	4430c4 <_obstack_memory_used@@Base+0x606c>
  443198:	cmp	w0, #0x77
  44319c:	b.ne	443090 <_obstack_memory_used@@Base+0x6038>  // b.any
  4431a0:	ldr	w1, [x19, #72]
  4431a4:	mov	x0, x19
  4431a8:	add	w1, w1, #0x6
  4431ac:	str	w1, [x19, #72]
  4431b0:	bl	442e60 <_obstack_memory_used@@Base+0x5e08>
  4431b4:	mov	x3, x0
  4431b8:	cbz	x0, 443090 <_obstack_memory_used@@Base+0x6038>
  4431bc:	ldr	x0, [x19, #24]
  4431c0:	ldrb	w1, [x0]
  4431c4:	cmp	w1, #0x45
  4431c8:	b.ne	443090 <_obstack_memory_used@@Base+0x6038>  // b.any
  4431cc:	add	x0, x0, #0x1
  4431d0:	mov	w1, #0x50                  	// #80
  4431d4:	str	x0, [x19, #24]
  4431d8:	b	4430c4 <_obstack_memory_used@@Base+0x606c>
  4431dc:	mov	x3, #0x0                   	// #0
  4431e0:	b	4430c4 <_obstack_memory_used@@Base+0x606c>
  4431e4:	str	w3, [x21]
  4431e8:	b	443124 <_obstack_memory_used@@Base+0x60cc>
  4431ec:	str	w1, [x21]
  4431f0:	b	443124 <_obstack_memory_used@@Base+0x60cc>
  4431f4:	ldr	x27, [sp, #80]
  4431f8:	b	443090 <_obstack_memory_used@@Base+0x6038>
  4431fc:	nop
  443200:	stp	x29, x30, [sp, #-32]!
  443204:	mov	x29, sp
  443208:	stp	x19, x20, [sp, #16]
  44320c:	mov	x19, x0
  443210:	ldr	x0, [x0, #24]
  443214:	ldrb	w2, [x0]
  443218:	cmp	w2, #0x4a
  44321c:	b.eq	443280 <_obstack_memory_used@@Base+0x6228>  // b.none
  443220:	cbz	w1, 44325c <_obstack_memory_used@@Base+0x6204>
  443224:	mov	x0, x19
  443228:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  44322c:	mov	x20, x0
  443230:	cbz	x0, 443270 <_obstack_memory_used@@Base+0x6218>
  443234:	mov	x0, x19
  443238:	bl	442e60 <_obstack_memory_used@@Base+0x5e08>
  44323c:	mov	x3, x0
  443240:	cbz	x0, 443270 <_obstack_memory_used@@Base+0x6218>
  443244:	mov	x2, x20
  443248:	mov	x0, x19
  44324c:	ldp	x19, x20, [sp, #16]
  443250:	mov	w1, #0x29                  	// #41
  443254:	ldp	x29, x30, [sp], #32
  443258:	b	43f5a0 <_obstack_memory_used@@Base+0x2548>
  44325c:	mov	x0, x19
  443260:	mov	x20, #0x0                   	// #0
  443264:	bl	442e60 <_obstack_memory_used@@Base+0x5e08>
  443268:	mov	x3, x0
  44326c:	cbnz	x0, 443244 <_obstack_memory_used@@Base+0x61ec>
  443270:	mov	x0, #0x0                   	// #0
  443274:	ldp	x19, x20, [sp, #16]
  443278:	ldp	x29, x30, [sp], #32
  44327c:	ret
  443280:	add	x0, x0, #0x1
  443284:	str	x0, [x19, #24]
  443288:	b	443224 <_obstack_memory_used@@Base+0x61cc>
  44328c:	nop
  443290:	stp	x29, x30, [sp, #-32]!
  443294:	mov	x29, sp
  443298:	str	x19, [sp, #16]
  44329c:	mov	x19, x0
  4432a0:	ldr	w0, [x0, #16]
  4432a4:	tbnz	w0, #18, 4432e0 <_obstack_memory_used@@Base+0x6288>
  4432a8:	ldr	w1, [x19, #84]
  4432ac:	cmp	w1, #0x800
  4432b0:	b.hi	4432f0 <_obstack_memory_used@@Base+0x6298>  // b.pmore
  4432b4:	ldr	x2, [x19, #24]
  4432b8:	add	w0, w1, #0x1
  4432bc:	str	w0, [x19, #84]
  4432c0:	mov	x0, #0x0                   	// #0
  4432c4:	ldrb	w3, [x2]
  4432c8:	cmp	w3, #0x46
  4432cc:	b.eq	443300 <_obstack_memory_used@@Base+0x62a8>  // b.none
  4432d0:	str	w1, [x19, #84]
  4432d4:	ldr	x19, [sp, #16]
  4432d8:	ldp	x29, x30, [sp], #32
  4432dc:	ret
  4432e0:	ldr	x2, [x19, #24]
  4432e4:	ldrb	w0, [x2]
  4432e8:	cmp	w0, #0x46
  4432ec:	b.eq	443300 <_obstack_memory_used@@Base+0x62a8>  // b.none
  4432f0:	mov	x0, #0x0                   	// #0
  4432f4:	ldr	x19, [sp, #16]
  4432f8:	ldp	x29, x30, [sp], #32
  4432fc:	ret
  443300:	add	x4, x2, #0x1
  443304:	str	x4, [x19, #24]
  443308:	add	x3, x2, #0x2
  44330c:	mov	w1, #0x1                   	// #1
  443310:	ldrb	w2, [x2, #1]
  443314:	mov	x0, x19
  443318:	cmp	w2, #0x59
  44331c:	csel	x2, x3, x4, eq  // eq = none
  443320:	str	x2, [x19, #24]
  443324:	bl	443200 <_obstack_memory_used@@Base+0x61a8>
  443328:	mov	x1, x0
  44332c:	mov	x0, x19
  443330:	bl	43f628 <_obstack_memory_used@@Base+0x25d0>
  443334:	ldr	x1, [x19, #24]
  443338:	ldrb	w2, [x1]
  44333c:	cmp	w2, #0x45
  443340:	b.eq	443360 <_obstack_memory_used@@Base+0x6308>  // b.none
  443344:	mov	x0, #0x0                   	// #0
  443348:	ldr	w1, [x19, #16]
  44334c:	tbnz	w1, #18, 4432f4 <_obstack_memory_used@@Base+0x629c>
  443350:	ldr	w1, [x19, #84]
  443354:	sub	w1, w1, #0x1
  443358:	str	w1, [x19, #84]
  44335c:	b	4432d4 <_obstack_memory_used@@Base+0x627c>
  443360:	add	x1, x1, #0x1
  443364:	str	x1, [x19, #24]
  443368:	b	443348 <_obstack_memory_used@@Base+0x62f0>
  44336c:	nop
  443370:	stp	x29, x30, [sp, #-48]!
  443374:	mov	x29, sp
  443378:	ldr	x3, [x0, #24]
  44337c:	stp	x19, x20, [sp, #16]
  443380:	mov	x19, x0
  443384:	ldrb	w2, [x3]
  443388:	sub	w1, w2, #0x30
  44338c:	and	w1, w1, #0xff
  443390:	cmp	w1, #0x9
  443394:	b.ls	4434a4 <_obstack_memory_used@@Base+0x644c>  // b.plast
  443398:	sub	w1, w2, #0x61
  44339c:	and	w1, w1, #0xff
  4433a0:	cmp	w1, #0x19
  4433a4:	b.hi	4433ec <_obstack_memory_used@@Base+0x6394>  // b.pmore
  4433a8:	cmp	w2, #0x6f
  4433ac:	b.eq	44356c <_obstack_memory_used@@Base+0x6514>  // b.none
  4433b0:	mov	x0, x19
  4433b4:	bl	442ca8 <_obstack_memory_used@@Base+0x5c50>
  4433b8:	mov	x20, x0
  4433bc:	cbz	x0, 4433cc <_obstack_memory_used@@Base+0x6374>
  4433c0:	ldr	w0, [x0]
  4433c4:	cmp	w0, #0x32
  4433c8:	b.eq	4434d0 <_obstack_memory_used@@Base+0x6478>  // b.none
  4433cc:	ldr	x0, [x19, #24]
  4433d0:	ldrb	w1, [x0]
  4433d4:	cmp	w1, #0x42
  4433d8:	b.eq	4434bc <_obstack_memory_used@@Base+0x6464>  // b.none
  4433dc:	mov	x0, x20
  4433e0:	ldp	x19, x20, [sp, #16]
  4433e4:	ldp	x29, x30, [sp], #48
  4433e8:	ret
  4433ec:	sub	w1, w2, #0x43
  4433f0:	and	w1, w1, #0xff
  4433f4:	cmp	w1, #0x1
  4433f8:	b.ls	443584 <_obstack_memory_used@@Base+0x652c>  // b.plast
  4433fc:	cmp	w2, #0x4c
  443400:	b.eq	443538 <_obstack_memory_used@@Base+0x64e0>  // b.none
  443404:	cmp	w2, #0x55
  443408:	b.ne	443558 <_obstack_memory_used@@Base+0x6500>  // b.any
  44340c:	ldrb	w1, [x3, #1]
  443410:	cmp	w1, #0x6c
  443414:	b.eq	443648 <_obstack_memory_used@@Base+0x65f0>  // b.none
  443418:	cmp	w1, #0x74
  44341c:	b.ne	443558 <_obstack_memory_used@@Base+0x6500>  // b.any
  443420:	add	x1, x3, #0x1
  443424:	str	x1, [x0, #24]
  443428:	mov	x20, #0x0                   	// #0
  44342c:	ldrb	w1, [x3, #1]
  443430:	cmp	w1, #0x74
  443434:	b.ne	4433d4 <_obstack_memory_used@@Base+0x637c>  // b.any
  443438:	add	x3, x3, #0x2
  44343c:	str	x3, [x0, #24]
  443440:	bl	43f958 <_obstack_memory_used@@Base+0x2900>
  443444:	tbnz	w0, #31, 4433cc <_obstack_memory_used@@Base+0x6374>
  443448:	ldp	w1, w2, [x19, #40]
  44344c:	cmp	w1, w2
  443450:	b.ge	443810 <_obstack_memory_used@@Base+0x67b8>  // b.tcont
  443454:	ldp	x7, x3, [x19, #24]
  443458:	mov	w2, #0x18                  	// #24
  44345c:	add	w6, w1, #0x1
  443460:	mov	w4, #0x48                  	// #72
  443464:	smull	x1, w1, w2
  443468:	sxtw	x0, w0
  44346c:	ldp	w2, w5, [x19, #56]
  443470:	add	x20, x3, x1
  443474:	cmp	w2, w5
  443478:	str	wzr, [x20, #4]
  44347c:	str	w6, [x19, #40]
  443480:	str	w4, [x3, x1]
  443484:	str	x0, [x20, #8]
  443488:	b.ge	443804 <_obstack_memory_used@@Base+0x67ac>  // b.tcont
  44348c:	ldr	x1, [x19, #48]
  443490:	add	w0, w2, #0x1
  443494:	str	x20, [x1, w2, sxtw #3]
  443498:	str	w0, [x19, #56]
  44349c:	ldrb	w1, [x7]
  4434a0:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  4434a4:	bl	43fa50 <_obstack_memory_used@@Base+0x29f8>
  4434a8:	mov	x20, x0
  4434ac:	ldr	x3, [x19, #24]
  4434b0:	ldrb	w1, [x3]
  4434b4:	cmp	w1, #0x42
  4434b8:	b.ne	4433dc <_obstack_memory_used@@Base+0x6384>  // b.any
  4434bc:	mov	x1, x20
  4434c0:	mov	x0, x19
  4434c4:	ldp	x19, x20, [sp, #16]
  4434c8:	ldp	x29, x30, [sp], #48
  4434cc:	b	43fbd0 <_obstack_memory_used@@Base+0x2b78>
  4434d0:	ldr	x1, [x20, #8]
  4434d4:	ldr	w0, [x19, #72]
  4434d8:	ldr	x2, [x1]
  4434dc:	add	w0, w0, #0x7
  4434e0:	ldr	w1, [x1, #16]
  4434e4:	add	w0, w0, w1
  4434e8:	str	w0, [x19, #72]
  4434ec:	ldrb	w0, [x2]
  4434f0:	cmp	w0, #0x6c
  4434f4:	b.ne	4433cc <_obstack_memory_used@@Base+0x6374>  // b.any
  4434f8:	ldrb	w0, [x2, #1]
  4434fc:	cmp	w0, #0x69
  443500:	b.ne	4433cc <_obstack_memory_used@@Base+0x6374>  // b.any
  443504:	ldrb	w0, [x2, #2]
  443508:	cbnz	w0, 4433cc <_obstack_memory_used@@Base+0x6374>
  44350c:	mov	x0, x19
  443510:	bl	43fa50 <_obstack_memory_used@@Base+0x29f8>
  443514:	mov	x2, x20
  443518:	mov	x3, x0
  44351c:	mov	w1, #0x37                  	// #55
  443520:	mov	x0, x19
  443524:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  443528:	mov	x20, x0
  44352c:	ldr	x3, [x19, #24]
  443530:	ldrb	w1, [x3]
  443534:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443538:	add	x3, x3, #0x1
  44353c:	str	x3, [x0, #24]
  443540:	bl	43fa50 <_obstack_memory_used@@Base+0x29f8>
  443544:	mov	x20, x0
  443548:	cbz	x0, 443558 <_obstack_memory_used@@Base+0x6500>
  44354c:	mov	x0, x19
  443550:	bl	43ffb8 <_obstack_memory_used@@Base+0x2f60>
  443554:	cbnz	w0, 4433cc <_obstack_memory_used@@Base+0x6374>
  443558:	mov	x20, #0x0                   	// #0
  44355c:	mov	x0, x20
  443560:	ldp	x19, x20, [sp, #16]
  443564:	ldp	x29, x30, [sp], #48
  443568:	ret
  44356c:	ldrb	w0, [x3, #1]
  443570:	cmp	w0, #0x6e
  443574:	b.ne	4433b0 <_obstack_memory_used@@Base+0x6358>  // b.any
  443578:	add	x3, x3, #0x2
  44357c:	str	x3, [x19, #24]
  443580:	b	4433b0 <_obstack_memory_used@@Base+0x6358>
  443584:	ldr	x0, [x0, #64]
  443588:	cbz	x0, 44359c <_obstack_memory_used@@Base+0x6544>
  44358c:	ldr	w1, [x0]
  443590:	cbz	w1, 443618 <_obstack_memory_used@@Base+0x65c0>
  443594:	cmp	w1, #0x18
  443598:	b.eq	443618 <_obstack_memory_used@@Base+0x65c0>  // b.none
  44359c:	cmp	w2, #0x43
  4435a0:	b.eq	4436f8 <_obstack_memory_used@@Base+0x66a0>  // b.none
  4435a4:	ldrb	w1, [x3, #1]
  4435a8:	cmp	w1, #0x32
  4435ac:	b.eq	4437fc <_obstack_memory_used@@Base+0x67a4>  // b.none
  4435b0:	b.hi	44376c <_obstack_memory_used@@Base+0x6714>  // b.pmore
  4435b4:	cmp	w1, #0x30
  4435b8:	b.eq	443798 <_obstack_memory_used@@Base+0x6740>  // b.none
  4435bc:	cmp	w1, #0x31
  4435c0:	mov	w4, #0x2                   	// #2
  4435c4:	b.ne	443780 <_obstack_memory_used@@Base+0x6728>  // b.any
  4435c8:	add	x1, x3, #0x2
  4435cc:	ldr	w2, [x19, #44]
  4435d0:	str	x1, [x19, #24]
  4435d4:	ldr	w1, [x19, #40]
  4435d8:	cmp	w1, w2
  4435dc:	b.ge	44378c <_obstack_memory_used@@Base+0x6734>  // b.tcont
  4435e0:	mov	w6, #0x18                  	// #24
  4435e4:	add	w5, w1, #0x1
  4435e8:	ldr	x2, [x19, #32]
  4435ec:	smull	x1, w1, w6
  4435f0:	add	x20, x2, x1
  4435f4:	str	wzr, [x20, #4]
  4435f8:	str	w5, [x19, #40]
  4435fc:	cbz	x0, 44378c <_obstack_memory_used@@Base+0x6734>
  443600:	mov	x5, #0x8                   	// #8
  443604:	str	x5, [x2, x1]
  443608:	str	w4, [x20, #8]
  44360c:	str	x0, [x20, #16]
  443610:	ldrb	w1, [x3, #2]
  443614:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443618:	ldr	w2, [x0, #16]
  44361c:	ldr	w1, [x19, #72]
  443620:	add	w1, w1, w2
  443624:	str	w1, [x19, #72]
  443628:	ldrb	w1, [x3]
  44362c:	cmp	w1, #0x43
  443630:	mov	w2, w1
  443634:	b.eq	4436f8 <_obstack_memory_used@@Base+0x66a0>  // b.none
  443638:	cmp	w1, #0x44
  44363c:	b.eq	4435a4 <_obstack_memory_used@@Base+0x654c>  // b.none
  443640:	mov	x20, #0x0                   	// #0
  443644:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443648:	add	x1, x3, #0x1
  44364c:	str	x1, [x0, #24]
  443650:	mov	x20, #0x0                   	// #0
  443654:	ldrb	w1, [x3, #1]
  443658:	cmp	w1, #0x6c
  44365c:	b.ne	4433d4 <_obstack_memory_used@@Base+0x637c>  // b.any
  443660:	add	x3, x3, #0x2
  443664:	str	x3, [x0, #24]
  443668:	bl	442e60 <_obstack_memory_used@@Base+0x5e08>
  44366c:	mov	x11, x0
  443670:	ldr	x0, [x19, #24]
  443674:	ldrb	w1, [x0]
  443678:	cbz	x11, 4433d4 <_obstack_memory_used@@Base+0x637c>
  44367c:	cmp	w1, #0x45
  443680:	b.ne	4433d4 <_obstack_memory_used@@Base+0x637c>  // b.any
  443684:	add	x0, x0, #0x1
  443688:	str	x0, [x19, #24]
  44368c:	mov	x0, x19
  443690:	bl	43f958 <_obstack_memory_used@@Base+0x2900>
  443694:	tbnz	w0, #31, 443810 <_obstack_memory_used@@Base+0x67b8>
  443698:	ldp	w1, w2, [x19, #40]
  44369c:	ldr	x4, [x19, #24]
  4436a0:	cmp	w1, w2
  4436a4:	b.ge	443820 <_obstack_memory_used@@Base+0x67c8>  // b.tcont
  4436a8:	mov	w2, #0x18                  	// #24
  4436ac:	add	w6, w1, #0x1
  4436b0:	ldr	x3, [x19, #32]
  4436b4:	smull	x1, w1, w2
  4436b8:	ldp	w2, w7, [x19, #56]
  4436bc:	add	x20, x3, x1
  4436c0:	mov	w5, #0x46                  	// #70
  4436c4:	cmp	w2, w7
  4436c8:	str	wzr, [x20, #4]
  4436cc:	str	w6, [x19, #40]
  4436d0:	str	w5, [x3, x1]
  4436d4:	str	x11, [x20, #8]
  4436d8:	str	w0, [x20, #16]
  4436dc:	b.ge	443820 <_obstack_memory_used@@Base+0x67c8>  // b.tcont
  4436e0:	ldr	x1, [x19, #48]
  4436e4:	add	w0, w2, #0x1
  4436e8:	str	x20, [x1, w2, sxtw #3]
  4436ec:	str	w0, [x19, #56]
  4436f0:	ldrb	w1, [x4]
  4436f4:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  4436f8:	str	x21, [sp, #32]
  4436fc:	ldrb	w1, [x3, #1]
  443700:	cmp	w1, #0x49
  443704:	b.eq	4437a8 <_obstack_memory_used@@Base+0x6750>  // b.none
  443708:	sub	w2, w1, #0x31
  44370c:	and	w2, w2, #0xff
  443710:	cmp	w2, #0x4
  443714:	b.hi	4437f0 <_obstack_memory_used@@Base+0x6798>  // b.pmore
  443718:	sub	w21, w1, #0x30
  44371c:	add	x3, x3, #0x2
  443720:	str	x3, [x19, #24]
  443724:	ldp	w1, w2, [x19, #40]
  443728:	cmp	w1, w2
  44372c:	b.ge	44382c <_obstack_memory_used@@Base+0x67d4>  // b.tcont
  443730:	mov	w4, #0x18                  	// #24
  443734:	add	w3, w1, #0x1
  443738:	smull	x1, w1, w4
  44373c:	ldp	x4, x2, [x19, #24]
  443740:	add	x20, x2, x1
  443744:	str	wzr, [x20, #4]
  443748:	str	w3, [x19, #40]
  44374c:	cbz	x0, 4437e0 <_obstack_memory_used@@Base+0x6788>
  443750:	mov	x3, #0x7                   	// #7
  443754:	str	x3, [x2, x1]
  443758:	str	w21, [x20, #8]
  44375c:	str	x0, [x20, #16]
  443760:	ldr	x21, [sp, #32]
  443764:	ldrb	w1, [x4]
  443768:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  44376c:	cmp	w1, #0x34
  443770:	b.eq	4437a0 <_obstack_memory_used@@Base+0x6748>  // b.none
  443774:	cmp	w1, #0x35
  443778:	mov	w4, #0x5                   	// #5
  44377c:	b.eq	4435c8 <_obstack_memory_used@@Base+0x6570>  // b.none
  443780:	mov	w1, w2
  443784:	mov	x20, #0x0                   	// #0
  443788:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  44378c:	ldrb	w1, [x3, #2]
  443790:	mov	x20, #0x0                   	// #0
  443794:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443798:	mov	w4, #0x1                   	// #1
  44379c:	b	4435c8 <_obstack_memory_used@@Base+0x6570>
  4437a0:	mov	w4, #0x4                   	// #4
  4437a4:	b	4435c8 <_obstack_memory_used@@Base+0x6570>
  4437a8:	add	x0, x3, #0x1
  4437ac:	str	x0, [x19, #24]
  4437b0:	ldrb	w1, [x3, #2]
  4437b4:	sub	w0, w1, #0x31
  4437b8:	and	w0, w0, #0xff
  4437bc:	cmp	w0, #0x4
  4437c0:	b.hi	443840 <_obstack_memory_used@@Base+0x67e8>  // b.pmore
  4437c4:	add	x3, x3, #0x3
  4437c8:	str	x3, [x19, #24]
  4437cc:	sub	w21, w1, #0x30
  4437d0:	mov	x0, x19
  4437d4:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  4437d8:	ldr	x0, [x19, #64]
  4437dc:	b	443724 <_obstack_memory_used@@Base+0x66cc>
  4437e0:	ldrb	w1, [x4]
  4437e4:	mov	x20, #0x0                   	// #0
  4437e8:	ldr	x21, [sp, #32]
  4437ec:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  4437f0:	mov	x20, #0x0                   	// #0
  4437f4:	ldr	x21, [sp, #32]
  4437f8:	b	44355c <_obstack_memory_used@@Base+0x6504>
  4437fc:	mov	w4, #0x3                   	// #3
  443800:	b	4435c8 <_obstack_memory_used@@Base+0x6570>
  443804:	ldrb	w1, [x7]
  443808:	mov	x20, #0x0                   	// #0
  44380c:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443810:	ldr	x0, [x19, #24]
  443814:	mov	x20, #0x0                   	// #0
  443818:	ldrb	w1, [x0]
  44381c:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443820:	ldrb	w1, [x4]
  443824:	mov	x20, #0x0                   	// #0
  443828:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  44382c:	ldr	x0, [x19, #24]
  443830:	mov	x20, #0x0                   	// #0
  443834:	ldr	x21, [sp, #32]
  443838:	ldrb	w1, [x0]
  44383c:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443840:	ldrb	w1, [x3, #1]
  443844:	mov	x20, #0x0                   	// #0
  443848:	ldr	x21, [sp, #32]
  44384c:	b	4433d4 <_obstack_memory_used@@Base+0x637c>
  443850:	ldr	x2, [x0, #24]
  443854:	ldrb	w1, [x2]
  443858:	cmp	w1, #0x4c
  44385c:	b.ne	443944 <_obstack_memory_used@@Base+0x68ec>  // b.any
  443860:	stp	x29, x30, [sp, #-32]!
  443864:	add	x1, x2, #0x1
  443868:	mov	w4, #0x5a                  	// #90
  44386c:	mov	x29, sp
  443870:	str	x19, [sp, #16]
  443874:	mov	x19, x0
  443878:	str	x1, [x0, #24]
  44387c:	ldrb	w3, [x2, #1]
  443880:	cmp	w3, #0x5f
  443884:	ccmp	w3, w4, #0x4, ne  // ne = any
  443888:	b.eq	443904 <_obstack_memory_used@@Base+0x68ac>  // b.none
  44388c:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  443890:	mov	x2, x0
  443894:	cbz	x0, 4438f4 <_obstack_memory_used@@Base+0x689c>
  443898:	ldr	w0, [x0]
  44389c:	cmp	w0, #0x27
  4438a0:	b.eq	4439bc <_obstack_memory_used@@Base+0x6964>  // b.none
  4438a4:	ldr	x0, [x19, #24]
  4438a8:	mov	w1, #0x3d                  	// #61
  4438ac:	ldrb	w4, [x0]
  4438b0:	cmp	w4, #0x6e
  4438b4:	b.ne	4438cc <_obstack_memory_used@@Base+0x6874>  // b.any
  4438b8:	add	x3, x0, #0x1
  4438bc:	str	x3, [x19, #24]
  4438c0:	mov	w1, #0x3e                  	// #62
  4438c4:	ldrb	w4, [x0, #1]
  4438c8:	mov	x0, x3
  4438cc:	cmp	w4, #0x45
  4438d0:	b.eq	4439e4 <_obstack_memory_used@@Base+0x698c>  // b.none
  4438d4:	add	x3, x0, #0x1
  4438d8:	b	4438ec <_obstack_memory_used@@Base+0x6894>
  4438dc:	str	x3, [x19, #24]
  4438e0:	ldrb	w4, [x3], #1
  4438e4:	cmp	w4, #0x45
  4438e8:	b.eq	443968 <_obstack_memory_used@@Base+0x6910>  // b.none
  4438ec:	mov	x5, x3
  4438f0:	cbnz	w4, 4438dc <_obstack_memory_used@@Base+0x6884>
  4438f4:	mov	x0, #0x0                   	// #0
  4438f8:	ldr	x19, [sp, #16]
  4438fc:	ldp	x29, x30, [sp], #32
  443900:	ret
  443904:	cmp	w3, #0x5f
  443908:	b.eq	44394c <_obstack_memory_used@@Base+0x68f4>  // b.none
  44390c:	add	x1, x1, #0x1
  443910:	str	x1, [x19, #24]
  443914:	mov	x0, x19
  443918:	mov	w1, #0x0                   	// #0
  44391c:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  443920:	ldr	x1, [x19, #24]
  443924:	ldrb	w2, [x1]
  443928:	cmp	w2, #0x45
  44392c:	b.ne	4438f4 <_obstack_memory_used@@Base+0x689c>  // b.any
  443930:	add	x1, x1, #0x1
  443934:	str	x1, [x19, #24]
  443938:	ldr	x19, [sp, #16]
  44393c:	ldp	x29, x30, [sp], #32
  443940:	ret
  443944:	mov	x0, #0x0                   	// #0
  443948:	ret
  44394c:	add	x1, x2, #0x2
  443950:	str	x1, [x19, #24]
  443954:	mov	x0, #0x0                   	// #0
  443958:	ldrb	w2, [x2, #2]
  44395c:	cmp	w2, w4
  443960:	b.ne	443928 <_obstack_memory_used@@Base+0x68d0>  // b.any
  443964:	b	44390c <_obstack_memory_used@@Base+0x68b4>
  443968:	sub	w5, w5, w0
  44396c:	ldp	w3, w4, [x19, #40]
  443970:	cmp	w3, w4
  443974:	b.ge	4439dc <_obstack_memory_used@@Base+0x6984>  // b.tcont
  443978:	mov	w4, #0x18                  	// #24
  44397c:	add	w7, w3, #0x1
  443980:	ldr	x6, [x19, #32]
  443984:	smull	x4, w3, w4
  443988:	cmp	w5, #0x0
  44398c:	add	x3, x6, x4
  443990:	str	wzr, [x3, #4]
  443994:	str	w7, [x19, #40]
  443998:	b.le	4439dc <_obstack_memory_used@@Base+0x6984>
  44399c:	str	xzr, [x6, x4]
  4439a0:	str	x0, [x3, #8]
  4439a4:	str	w5, [x3, #16]
  4439a8:	mov	x0, x19
  4439ac:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  4439b0:	ldr	x1, [x19, #24]
  4439b4:	ldrb	w2, [x1]
  4439b8:	b	443928 <_obstack_memory_used@@Base+0x68d0>
  4439bc:	ldr	x0, [x2, #8]
  4439c0:	ldr	w1, [x0, #28]
  4439c4:	cbz	w1, 4438a4 <_obstack_memory_used@@Base+0x684c>
  4439c8:	ldr	w1, [x0, #8]
  4439cc:	ldr	w0, [x19, #72]
  4439d0:	sub	w0, w0, w1
  4439d4:	str	w0, [x19, #72]
  4439d8:	b	4438a4 <_obstack_memory_used@@Base+0x684c>
  4439dc:	mov	x3, #0x0                   	// #0
  4439e0:	b	4439a8 <_obstack_memory_used@@Base+0x6950>
  4439e4:	mov	w5, #0x0                   	// #0
  4439e8:	b	44396c <_obstack_memory_used@@Base+0x6914>
  4439ec:	nop
  4439f0:	stp	x29, x30, [sp, #-224]!
  4439f4:	mov	x29, sp
  4439f8:	stp	x19, x20, [sp, #16]
  4439fc:	mov	x19, x0
  443a00:	cbz	x2, 443a88 <_obstack_memory_used@@Base+0x6a30>
  443a04:	stp	x21, x22, [sp, #32]
  443a08:	ldr	w22, [x0, #304]
  443a0c:	cbnz	w22, 443a50 <_obstack_memory_used@@Base+0x69f8>
  443a10:	ldr	w0, [x2]
  443a14:	mov	x20, x2
  443a18:	cmp	w0, #0x50
  443a1c:	b.ls	443a30 <_obstack_memory_used@@Base+0x69d8>  // b.plast
  443a20:	mov	w0, #0x1                   	// #1
  443a24:	ldp	x21, x22, [sp, #32]
  443a28:	str	w0, [x19, #304]
  443a2c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  443a30:	mov	w21, w1
  443a34:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443a38:	add	x1, x1, #0x73c
  443a3c:	stp	x23, x24, [sp, #48]
  443a40:	ldrh	w1, [x1, w0, uxtw #1]
  443a44:	adr	x2, 443a50 <_obstack_memory_used@@Base+0x69f8>
  443a48:	add	x1, x2, w1, sxth #2
  443a4c:	br	x1
  443a50:	ldp	x21, x22, [sp, #32]
  443a54:	ldp	x19, x20, [sp, #16]
  443a58:	ldp	x29, x30, [sp], #224
  443a5c:	ret
  443a60:	ldr	x0, [x20, #16]
  443a64:	ldr	w1, [x0]
  443a68:	cmp	w1, #0x3b
  443a6c:	b.ne	443a80 <_obstack_memory_used@@Base+0x6a28>  // b.any
  443a70:	ldr	x0, [x0, #16]
  443a74:	ldr	w0, [x0]
  443a78:	cmp	w0, #0x3c
  443a7c:	b.eq	446f68 <_obstack_memory_used@@Base+0x9f10>  // b.none
  443a80:	ldp	x21, x22, [sp, #32]
  443a84:	ldp	x23, x24, [sp, #48]
  443a88:	mov	w0, #0x1                   	// #1
  443a8c:	str	w0, [x19, #304]
  443a90:	ldp	x19, x20, [sp, #16]
  443a94:	ldp	x29, x30, [sp], #224
  443a98:	ret
  443a9c:	ldp	x1, x2, [x19, #288]
  443aa0:	add	x0, sp, #0x60
  443aa4:	stp	x2, x20, [sp, #96]
  443aa8:	str	wzr, [sp, #112]
  443aac:	str	x1, [sp, #120]
  443ab0:	str	x0, [x19, #296]
  443ab4:	ldr	x2, [x20, #8]
  443ab8:	mov	x0, x19
  443abc:	mov	w1, w21
  443ac0:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443ac4:	ldr	w0, [sp, #112]
  443ac8:	cbz	w0, 445e74 <_obstack_memory_used@@Base+0x8e1c>
  443acc:	ldr	x0, [sp, #96]
  443ad0:	str	x0, [x19, #296]
  443ad4:	cbz	w22, 4456a8 <_obstack_memory_used@@Base+0x8650>
  443ad8:	ldp	x21, x22, [sp, #32]
  443adc:	str	x23, [x19, #288]
  443ae0:	ldp	x23, x24, [sp, #48]
  443ae4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  443ae8:	ldr	x4, [x19, #296]
  443aec:	cbz	x4, 443c28 <_obstack_memory_used@@Base+0x6bd0>
  443af0:	mov	x1, x4
  443af4:	nop
  443af8:	ldr	w2, [x1, #16]
  443afc:	cbnz	w2, 443b1c <_obstack_memory_used@@Base+0x6ac4>
  443b00:	ldr	x2, [x1, #8]
  443b04:	ldr	w2, [x2]
  443b08:	sub	w3, w2, #0x19
  443b0c:	cmp	w3, #0x2
  443b10:	b.hi	446ac8 <_obstack_memory_used@@Base+0x9a70>  // b.pmore
  443b14:	cmp	w0, w2
  443b18:	b.eq	446ae8 <_obstack_memory_used@@Base+0x9a90>  // b.none
  443b1c:	ldr	x1, [x1]
  443b20:	cbnz	x1, 443af8 <_obstack_memory_used@@Base+0x6aa0>
  443b24:	b	443c28 <_obstack_memory_used@@Base+0x6bd0>
  443b28:	ldp	x23, x24, [sp, #48]
  443b2c:	b	443a20 <_obstack_memory_used@@Base+0x69c8>
  443b30:	ldr	x2, [x20, #8]
  443b34:	mov	w22, #0x0                   	// #0
  443b38:	ldr	w1, [x2]
  443b3c:	cmp	w1, #0x27
  443b40:	b.eq	446350 <_obstack_memory_used@@Base+0x92f8>  // b.none
  443b44:	ldr	x1, [x19, #256]
  443b48:	add	x0, x1, #0x1
  443b4c:	cmp	x1, #0xff
  443b50:	b.ne	443b7c <_obstack_memory_used@@Base+0x6b24>  // b.any
  443b54:	ldp	x3, x2, [x19, #272]
  443b58:	strb	wzr, [x19, #255]
  443b5c:	mov	x0, x19
  443b60:	blr	x3
  443b64:	ldr	x3, [x19, #320]
  443b68:	mov	x0, #0x1                   	// #1
  443b6c:	mov	x1, #0x0                   	// #0
  443b70:	add	x3, x3, x0
  443b74:	ldr	x2, [x20, #8]
  443b78:	str	x3, [x19, #320]
  443b7c:	str	x0, [x19, #256]
  443b80:	mov	w0, #0x28                  	// #40
  443b84:	strb	w0, [x19, x1]
  443b88:	mov	w1, w21
  443b8c:	strb	w0, [x19, #264]
  443b90:	mov	x0, x19
  443b94:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443b98:	ldr	x1, [x19, #256]
  443b9c:	cmp	x1, #0xff
  443ba0:	b.eq	446a40 <_obstack_memory_used@@Base+0x99e8>  // b.none
  443ba4:	add	x3, x1, #0x1
  443ba8:	str	x3, [x19, #256]
  443bac:	mov	w0, #0x29                  	// #41
  443bb0:	strb	w0, [x19, x1]
  443bb4:	strb	w0, [x19, #264]
  443bb8:	ldr	w0, [x20]
  443bbc:	cmp	w0, #0x3e
  443bc0:	b.eq	446b04 <_obstack_memory_used@@Base+0x9aac>  // b.none
  443bc4:	cmp	w22, #0x8
  443bc8:	b.eq	4468e4 <_obstack_memory_used@@Base+0x988c>  // b.none
  443bcc:	ldr	x2, [x20, #16]
  443bd0:	mov	w1, w21
  443bd4:	mov	x0, x19
  443bd8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443bdc:	ldp	x21, x22, [sp, #32]
  443be0:	ldp	x23, x24, [sp, #48]
  443be4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  443be8:	ldr	w2, [x19, #312]
  443bec:	ldr	x0, [x20, #8]
  443bf0:	ldr	w1, [x0]
  443bf4:	cbnz	w2, 443c04 <_obstack_memory_used@@Base+0x6bac>
  443bf8:	cmp	w1, #0x5
  443bfc:	mov	w22, #0x0                   	// #0
  443c00:	b.eq	446ec4 <_obstack_memory_used@@Base+0x9e6c>  // b.none
  443c04:	cmp	w1, #0x23
  443c08:	ldr	x4, [x19, #296]
  443c0c:	b.eq	445f1c <_obstack_memory_used@@Base+0x8ec4>  // b.none
  443c10:	ldr	w2, [x20]
  443c14:	cmp	w2, w1
  443c18:	b.eq	445f1c <_obstack_memory_used@@Base+0x8ec4>  // b.none
  443c1c:	cmp	w1, #0x24
  443c20:	b.eq	445684 <_obstack_memory_used@@Base+0x862c>  // b.none
  443c24:	nop
  443c28:	ldr	x1, [x19, #288]
  443c2c:	add	x0, sp, #0x60
  443c30:	stp	x4, x20, [sp, #96]
  443c34:	str	wzr, [sp, #112]
  443c38:	str	x1, [sp, #120]
  443c3c:	str	x0, [x19, #296]
  443c40:	b	443ab4 <_obstack_memory_used@@Base+0x6a5c>
  443c44:	ldr	x2, [x20, #8]
  443c48:	mov	w1, w21
  443c4c:	mov	x0, x19
  443c50:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443c54:	tbz	w21, #2, 446888 <_obstack_memory_used@@Base+0x9830>
  443c58:	ldr	x1, [x19, #256]
  443c5c:	add	x0, x1, #0x1
  443c60:	cmp	x1, #0xff
  443c64:	b.ne	443c8c <_obstack_memory_used@@Base+0x6c34>  // b.any
  443c68:	ldp	x3, x2, [x19, #272]
  443c6c:	strb	wzr, [x19, #255]
  443c70:	mov	x0, x19
  443c74:	blr	x3
  443c78:	ldr	x2, [x19, #320]
  443c7c:	mov	x0, #0x1                   	// #1
  443c80:	mov	x1, #0x0                   	// #0
  443c84:	add	x2, x2, x0
  443c88:	str	x2, [x19, #320]
  443c8c:	str	x0, [x19, #256]
  443c90:	mov	w0, #0x2e                  	// #46
  443c94:	strb	w0, [x19, x1]
  443c98:	strb	w0, [x19, #264]
  443c9c:	ldr	x23, [x20, #16]
  443ca0:	ldr	w0, [x23]
  443ca4:	cmp	w0, #0x47
  443ca8:	b.eq	446b40 <_obstack_memory_used@@Base+0x9ae8>  // b.none
  443cac:	mov	x2, x23
  443cb0:	mov	w1, w21
  443cb4:	mov	x0, x19
  443cb8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443cbc:	ldp	x21, x22, [sp, #32]
  443cc0:	ldp	x23, x24, [sp, #48]
  443cc4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  443cc8:	ldp	x3, x4, [x19, #288]
  443ccc:	add	x0, sp, #0x60
  443cd0:	ldr	x2, [x20, #16]
  443cd4:	str	x0, [x19, #296]
  443cd8:	mov	w1, w21
  443cdc:	mov	x0, x19
  443ce0:	stp	x4, x20, [sp, #96]
  443ce4:	str	wzr, [sp, #112]
  443ce8:	str	x3, [sp, #120]
  443cec:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443cf0:	ldr	w0, [sp, #112]
  443cf4:	cbz	w0, 446804 <_obstack_memory_used@@Base+0x97ac>
  443cf8:	ldr	x0, [sp, #96]
  443cfc:	ldp	x21, x22, [sp, #32]
  443d00:	ldp	x23, x24, [sp, #48]
  443d04:	str	x0, [x19, #296]
  443d08:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  443d0c:	ldr	x2, [x20, #8]
  443d10:	cbz	x2, 443d20 <_obstack_memory_used@@Base+0x6cc8>
  443d14:	mov	w1, w21
  443d18:	mov	x0, x19
  443d1c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443d20:	ldr	x0, [x20, #16]
  443d24:	cbz	x0, 446ab0 <_obstack_memory_used@@Base+0x9a58>
  443d28:	ldr	x22, [x19, #256]
  443d2c:	cmp	x22, #0xfd
  443d30:	b.ls	443d5c <_obstack_memory_used@@Base+0x6d04>  // b.plast
  443d34:	strb	wzr, [x19, x22]
  443d38:	mov	x1, x22
  443d3c:	mov	x0, x19
  443d40:	mov	x22, #0x0                   	// #0
  443d44:	ldp	x3, x2, [x19, #272]
  443d48:	blr	x3
  443d4c:	str	xzr, [x19, #256]
  443d50:	ldr	x0, [x19, #320]
  443d54:	add	x0, x0, #0x1
  443d58:	str	x0, [x19, #320]
  443d5c:	mov	w23, #0x2c                  	// #44
  443d60:	mov	x24, #0x0                   	// #0
  443d64:	b	443d88 <_obstack_memory_used@@Base+0x6d30>
  443d68:	mov	x0, x22
  443d6c:	add	x22, x22, #0x1
  443d70:	str	x22, [x19, #256]
  443d74:	strb	w23, [x19, x0]
  443d78:	strb	w23, [x19, #264]
  443d7c:	mov	w23, #0x20                  	// #32
  443d80:	cbnz	x24, 445ebc <_obstack_memory_used@@Base+0x8e64>
  443d84:	mov	x24, #0x1                   	// #1
  443d88:	cmp	x22, #0xff
  443d8c:	b.ne	443d68 <_obstack_memory_used@@Base+0x6d10>  // b.any
  443d90:	ldp	x3, x2, [x19, #272]
  443d94:	strb	wzr, [x19, #255]
  443d98:	mov	x1, x22
  443d9c:	mov	x0, x19
  443da0:	mov	x22, #0x1                   	// #1
  443da4:	blr	x3
  443da8:	ldr	x1, [x19, #320]
  443dac:	mov	x0, #0x0                   	// #0
  443db0:	add	x1, x1, x22
  443db4:	str	x1, [x19, #320]
  443db8:	b	443d70 <_obstack_memory_used@@Base+0x6d18>
  443dbc:	ldr	x2, [x20, #16]
  443dc0:	mov	w1, w21
  443dc4:	mov	x0, x19
  443dc8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  443dcc:	ldp	x21, x22, [sp, #32]
  443dd0:	ldp	x23, x24, [sp, #48]
  443dd4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  443dd8:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443ddc:	add	x24, x24, #0xb98
  443de0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443de4:	add	x24, x24, #0x1c
  443de8:	add	x22, x22, #0xb99
  443dec:	mov	w23, #0x67                  	// #103
  443df0:	ldr	x1, [x19, #256]
  443df4:	b	443e18 <_obstack_memory_used@@Base+0x6dc0>
  443df8:	mov	x0, x1
  443dfc:	add	x1, x1, #0x1
  443e00:	str	x1, [x19, #256]
  443e04:	cmp	x22, x24
  443e08:	strb	w23, [x19, x0]
  443e0c:	strb	w23, [x19, #264]
  443e10:	b.eq	445abc <_obstack_memory_used@@Base+0x8a64>  // b.none
  443e14:	ldrb	w23, [x22], #1
  443e18:	cmp	x1, #0xff
  443e1c:	b.ne	443df8 <_obstack_memory_used@@Base+0x6da0>  // b.any
  443e20:	ldp	x3, x2, [x19, #272]
  443e24:	strb	wzr, [x19, #255]
  443e28:	mov	x0, x19
  443e2c:	blr	x3
  443e30:	ldr	x2, [x19, #320]
  443e34:	mov	x1, #0x1                   	// #1
  443e38:	mov	x0, #0x0                   	// #0
  443e3c:	add	x2, x2, x1
  443e40:	str	x2, [x19, #320]
  443e44:	b	443e00 <_obstack_memory_used@@Base+0x6da8>
  443e48:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443e4c:	add	x22, x22, #0xbb8
  443e50:	add	x24, x22, #0x8
  443e54:	mov	w23, #0x7b                  	// #123
  443e58:	ldr	x1, [x19, #256]
  443e5c:	b	443e84 <_obstack_memory_used@@Base+0x6e2c>
  443e60:	mov	x0, x1
  443e64:	add	x1, x1, #0x1
  443e68:	str	x1, [x19, #256]
  443e6c:	add	x22, x22, #0x1
  443e70:	strb	w23, [x19, x0]
  443e74:	cmp	x24, x22
  443e78:	strb	w23, [x19, #264]
  443e7c:	b.eq	445ad8 <_obstack_memory_used@@Base+0x8a80>  // b.none
  443e80:	ldrb	w23, [x22]
  443e84:	cmp	x1, #0xff
  443e88:	b.ne	443e60 <_obstack_memory_used@@Base+0x6e08>  // b.any
  443e8c:	ldp	x3, x2, [x19, #272]
  443e90:	strb	wzr, [x19, #255]
  443e94:	mov	x0, x19
  443e98:	blr	x3
  443e9c:	ldr	x2, [x19, #320]
  443ea0:	mov	x1, #0x1                   	// #1
  443ea4:	mov	x0, #0x0                   	// #0
  443ea8:	add	x2, x2, x1
  443eac:	str	x2, [x19, #320]
  443eb0:	b	443e68 <_obstack_memory_used@@Base+0x6e10>
  443eb4:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443eb8:	add	x23, x23, #0xbc8
  443ebc:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443ec0:	add	x23, x23, #0xe
  443ec4:	add	x21, x21, #0xbc9
  443ec8:	mov	w22, #0x7b                  	// #123
  443ecc:	ldr	x1, [x19, #256]
  443ed0:	b	443ef4 <_obstack_memory_used@@Base+0x6e9c>
  443ed4:	mov	x0, x1
  443ed8:	add	x1, x1, #0x1
  443edc:	str	x1, [x19, #256]
  443ee0:	cmp	x23, x21
  443ee4:	strb	w22, [x19, x0]
  443ee8:	strb	w22, [x19, #264]
  443eec:	b.eq	4459cc <_obstack_memory_used@@Base+0x8974>  // b.none
  443ef0:	ldrb	w22, [x21], #1
  443ef4:	cmp	x1, #0xff
  443ef8:	b.ne	443ed4 <_obstack_memory_used@@Base+0x6e7c>  // b.any
  443efc:	ldp	x3, x2, [x19, #272]
  443f00:	strb	wzr, [x19, #255]
  443f04:	mov	x0, x19
  443f08:	blr	x3
  443f0c:	ldr	x2, [x19, #320]
  443f10:	mov	x1, #0x1                   	// #1
  443f14:	mov	x0, #0x0                   	// #0
  443f18:	add	x2, x2, x1
  443f1c:	str	x2, [x19, #320]
  443f20:	b	443edc <_obstack_memory_used@@Base+0x6e84>
  443f24:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443f28:	add	x24, x24, #0xa90
  443f2c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443f30:	add	x24, x24, #0x16
  443f34:	add	x22, x22, #0xa91
  443f38:	mov	w23, #0x74                  	// #116
  443f3c:	ldr	x1, [x19, #256]
  443f40:	b	443f64 <_obstack_memory_used@@Base+0x6f0c>
  443f44:	mov	x0, x1
  443f48:	add	x1, x1, #0x1
  443f4c:	str	x1, [x19, #256]
  443f50:	cmp	x24, x22
  443f54:	strb	w23, [x19, x0]
  443f58:	strb	w23, [x19, #264]
  443f5c:	b.eq	445aa0 <_obstack_memory_used@@Base+0x8a48>  // b.none
  443f60:	ldrb	w23, [x22], #1
  443f64:	cmp	x1, #0xff
  443f68:	b.ne	443f44 <_obstack_memory_used@@Base+0x6eec>  // b.any
  443f6c:	ldp	x3, x2, [x19, #272]
  443f70:	strb	wzr, [x19, #255]
  443f74:	mov	x0, x19
  443f78:	blr	x3
  443f7c:	ldr	x2, [x19, #320]
  443f80:	mov	x1, #0x1                   	// #1
  443f84:	mov	x0, #0x0                   	// #0
  443f88:	add	x2, x2, x1
  443f8c:	str	x2, [x19, #320]
  443f90:	b	443f4c <_obstack_memory_used@@Base+0x6ef4>
  443f94:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443f98:	add	x24, x24, #0x908
  443f9c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  443fa0:	add	x24, x24, #0x1e
  443fa4:	add	x22, x22, #0x909
  443fa8:	mov	w23, #0x74                  	// #116
  443fac:	ldr	x1, [x19, #256]
  443fb0:	b	443fd4 <_obstack_memory_used@@Base+0x6f7c>
  443fb4:	mov	x0, x1
  443fb8:	add	x1, x1, #0x1
  443fbc:	str	x1, [x19, #256]
  443fc0:	cmp	x24, x22
  443fc4:	strb	w23, [x19, x0]
  443fc8:	strb	w23, [x19, #264]
  443fcc:	b.eq	4459b0 <_obstack_memory_used@@Base+0x8958>  // b.none
  443fd0:	ldrb	w23, [x22], #1
  443fd4:	cmp	x1, #0xff
  443fd8:	b.ne	443fb4 <_obstack_memory_used@@Base+0x6f5c>  // b.any
  443fdc:	ldp	x3, x2, [x19, #272]
  443fe0:	strb	wzr, [x19, #255]
  443fe4:	mov	x0, x19
  443fe8:	blr	x3
  443fec:	ldr	x2, [x19, #320]
  443ff0:	mov	x1, #0x1                   	// #1
  443ff4:	mov	x0, #0x0                   	// #0
  443ff8:	add	x2, x2, x1
  443ffc:	str	x2, [x19, #320]
  444000:	b	443fbc <_obstack_memory_used@@Base+0x6f64>
  444004:	ldp	x2, x20, [x20, #8]
  444008:	cbz	x2, 444018 <_obstack_memory_used@@Base+0x6fc0>
  44400c:	mov	w1, w21
  444010:	mov	x0, x19
  444014:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  444018:	ldr	x1, [x19, #256]
  44401c:	add	x0, x1, #0x1
  444020:	cmp	x1, #0xff
  444024:	b.ne	44404c <_obstack_memory_used@@Base+0x6ff4>  // b.any
  444028:	ldp	x3, x2, [x19, #272]
  44402c:	strb	wzr, [x19, #255]
  444030:	mov	x0, x19
  444034:	blr	x3
  444038:	ldr	x2, [x19, #320]
  44403c:	mov	x0, #0x1                   	// #1
  444040:	mov	x1, #0x0                   	// #0
  444044:	add	x2, x2, x0
  444048:	str	x2, [x19, #320]
  44404c:	str	x0, [x19, #256]
  444050:	mov	w0, #0x7b                  	// #123
  444054:	strb	w0, [x19, x1]
  444058:	mov	x2, x20
  44405c:	strb	w0, [x19, #264]
  444060:	mov	w1, w21
  444064:	mov	x0, x19
  444068:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44406c:	ldr	x1, [x19, #256]
  444070:	add	x0, x1, #0x1
  444074:	cmp	x1, #0xff
  444078:	b.ne	4440a0 <_obstack_memory_used@@Base+0x7048>  // b.any
  44407c:	ldp	x3, x2, [x19, #272]
  444080:	strb	wzr, [x19, #255]
  444084:	mov	x0, x19
  444088:	blr	x3
  44408c:	ldr	x2, [x19, #320]
  444090:	mov	x0, #0x1                   	// #1
  444094:	mov	x1, #0x0                   	// #0
  444098:	add	x2, x2, x0
  44409c:	str	x2, [x19, #320]
  4440a0:	str	x0, [x19, #256]
  4440a4:	mov	w0, #0x7d                  	// #125
  4440a8:	strb	w0, [x19, x1]
  4440ac:	strb	w0, [x19, #264]
  4440b0:	ldp	x21, x22, [sp, #32]
  4440b4:	ldp	x23, x24, [sp, #48]
  4440b8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4440bc:	ldr	x22, [x20, #8]
  4440c0:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4440c4:	add	x20, x20, #0xae0
  4440c8:	mov	w21, #0x6f                  	// #111
  4440cc:	add	x24, x20, #0x8
  4440d0:	ldr	w23, [x22, #16]
  4440d4:	ldr	x1, [x19, #256]
  4440d8:	b	444100 <_obstack_memory_used@@Base+0x70a8>
  4440dc:	mov	x0, x1
  4440e0:	add	x1, x1, #0x1
  4440e4:	str	x1, [x19, #256]
  4440e8:	add	x20, x20, #0x1
  4440ec:	strb	w21, [x19, x0]
  4440f0:	cmp	x24, x20
  4440f4:	strb	w21, [x19, #264]
  4440f8:	b.eq	4458d4 <_obstack_memory_used@@Base+0x887c>  // b.none
  4440fc:	ldrb	w21, [x20]
  444100:	cmp	x1, #0xff
  444104:	b.ne	4440dc <_obstack_memory_used@@Base+0x7084>  // b.any
  444108:	ldp	x3, x2, [x19, #272]
  44410c:	strb	wzr, [x19, #255]
  444110:	mov	x0, x19
  444114:	blr	x3
  444118:	ldr	x2, [x19, #320]
  44411c:	mov	x1, #0x1                   	// #1
  444120:	mov	x0, #0x0                   	// #0
  444124:	add	x2, x2, x1
  444128:	str	x2, [x19, #320]
  44412c:	b	4440e4 <_obstack_memory_used@@Base+0x708c>
  444130:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444134:	add	x22, x22, #0xaf0
  444138:	add	x24, x22, #0x9
  44413c:	mov	w23, #0x6f                  	// #111
  444140:	ldr	x1, [x19, #256]
  444144:	b	44416c <_obstack_memory_used@@Base+0x7114>
  444148:	mov	x0, x1
  44414c:	add	x1, x1, #0x1
  444150:	str	x1, [x19, #256]
  444154:	add	x22, x22, #0x1
  444158:	strb	w23, [x19, x0]
  44415c:	cmp	x22, x24
  444160:	strb	w23, [x19, #264]
  444164:	b.eq	445714 <_obstack_memory_used@@Base+0x86bc>  // b.none
  444168:	ldrb	w23, [x22]
  44416c:	cmp	x1, #0xff
  444170:	b.ne	444148 <_obstack_memory_used@@Base+0x70f0>  // b.any
  444174:	ldp	x3, x2, [x19, #272]
  444178:	strb	wzr, [x19, #255]
  44417c:	mov	x0, x19
  444180:	blr	x3
  444184:	ldr	x2, [x19, #320]
  444188:	mov	x1, #0x1                   	// #1
  44418c:	mov	x0, #0x0                   	// #0
  444190:	add	x2, x2, x1
  444194:	str	x2, [x19, #320]
  444198:	b	444150 <_obstack_memory_used@@Base+0x70f8>
  44419c:	ldr	x2, [x20, #8]
  4441a0:	mov	w1, w21
  4441a4:	mov	x0, x19
  4441a8:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4441ac:	add	x22, x22, #0xbd8
  4441b0:	mov	w23, #0x20                  	// #32
  4441b4:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4441b8:	add	x24, x22, #0x8
  4441bc:	ldr	x1, [x19, #256]
  4441c0:	b	4441e8 <_obstack_memory_used@@Base+0x7190>
  4441c4:	mov	x0, x1
  4441c8:	add	x1, x1, #0x1
  4441cc:	str	x1, [x19, #256]
  4441d0:	add	x22, x22, #0x1
  4441d4:	strb	w23, [x19, x0]
  4441d8:	cmp	x24, x22
  4441dc:	strb	w23, [x19, #264]
  4441e0:	b.eq	4456b4 <_obstack_memory_used@@Base+0x865c>  // b.none
  4441e4:	ldrb	w23, [x22]
  4441e8:	cmp	x1, #0xff
  4441ec:	b.ne	4441c4 <_obstack_memory_used@@Base+0x716c>  // b.any
  4441f0:	ldp	x3, x2, [x19, #272]
  4441f4:	strb	wzr, [x19, #255]
  4441f8:	mov	x0, x19
  4441fc:	blr	x3
  444200:	ldr	x2, [x19, #320]
  444204:	mov	x1, #0x1                   	// #1
  444208:	mov	x0, #0x0                   	// #0
  44420c:	add	x2, x2, x1
  444210:	str	x2, [x19, #320]
  444214:	b	4441cc <_obstack_memory_used@@Base+0x7174>
  444218:	ldr	x2, [x20, #8]
  44421c:	mov	w1, w21
  444220:	mov	x0, x19
  444224:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  444228:	ldp	x21, x22, [sp, #32]
  44422c:	ldp	x23, x24, [sp, #48]
  444230:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  444234:	and	w22, w21, #0xffffff9f
  444238:	ldr	x3, [x19, #296]
  44423c:	tbnz	w21, #5, 446a10 <_obstack_memory_used@@Base+0x99b8>
  444240:	ldr	x2, [x20, #8]
  444244:	cbz	x2, 44424c <_obstack_memory_used@@Base+0x71f4>
  444248:	tbz	w21, #6, 446d44 <_obstack_memory_used@@Base+0x9cec>
  44424c:	mov	w1, w22
  444250:	add	x2, x20, #0x10
  444254:	mov	x0, x19
  444258:	bl	448098 <_obstack_memory_used@@Base+0xb040>
  44425c:	ldp	x21, x22, [sp, #32]
  444260:	ldp	x23, x24, [sp, #48]
  444264:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  444268:	ldr	x23, [x20, #8]
  44426c:	ldr	x1, [x19, #256]
  444270:	cbz	x23, 4460dc <_obstack_memory_used@@Base+0x9084>
  444274:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444278:	add	x20, x20, #0xb68
  44427c:	add	x22, x20, #0x6
  444280:	mov	w21, #0x7b                  	// #123
  444284:	b	4442ac <_obstack_memory_used@@Base+0x7254>
  444288:	mov	x0, x1
  44428c:	add	x1, x1, #0x1
  444290:	str	x1, [x19, #256]
  444294:	add	x20, x20, #0x1
  444298:	strb	w21, [x19, x0]
  44429c:	cmp	x22, x20
  4442a0:	strb	w21, [x19, #264]
  4442a4:	b.eq	446150 <_obstack_memory_used@@Base+0x90f8>  // b.none
  4442a8:	ldrb	w21, [x20]
  4442ac:	cmp	x1, #0xff
  4442b0:	b.ne	444288 <_obstack_memory_used@@Base+0x7230>  // b.any
  4442b4:	ldp	x3, x2, [x19, #272]
  4442b8:	strb	wzr, [x19, #255]
  4442bc:	mov	x0, x19
  4442c0:	blr	x3
  4442c4:	ldr	x2, [x19, #320]
  4442c8:	mov	x1, #0x1                   	// #1
  4442cc:	mov	x0, #0x0                   	// #0
  4442d0:	add	x2, x2, x1
  4442d4:	str	x2, [x19, #320]
  4442d8:	b	444290 <_obstack_memory_used@@Base+0x7238>
  4442dc:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4442e0:	add	x24, x24, #0xa78
  4442e4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4442e8:	add	x24, x24, #0x11
  4442ec:	add	x22, x22, #0xa79
  4442f0:	mov	w23, #0x68                  	// #104
  4442f4:	ldr	x1, [x19, #256]
  4442f8:	b	44431c <_obstack_memory_used@@Base+0x72c4>
  4442fc:	mov	x0, x1
  444300:	add	x1, x1, #0x1
  444304:	str	x1, [x19, #256]
  444308:	cmp	x22, x24
  44430c:	strb	w23, [x19, x0]
  444310:	strb	w23, [x19, #264]
  444314:	b.eq	445d7c <_obstack_memory_used@@Base+0x8d24>  // b.none
  444318:	ldrb	w23, [x22], #1
  44431c:	cmp	x1, #0xff
  444320:	b.ne	4442fc <_obstack_memory_used@@Base+0x72a4>  // b.any
  444324:	ldp	x3, x2, [x19, #272]
  444328:	strb	wzr, [x19, #255]
  44432c:	mov	x0, x19
  444330:	blr	x3
  444334:	ldr	x2, [x19, #320]
  444338:	mov	x1, #0x1                   	// #1
  44433c:	mov	x0, #0x0                   	// #0
  444340:	add	x2, x2, x1
  444344:	str	x2, [x19, #320]
  444348:	b	444304 <_obstack_memory_used@@Base+0x72ac>
  44434c:	ldrsw	x22, [x20, #16]
  444350:	ldr	x20, [x20, #8]
  444354:	cbz	x22, 447244 <_obstack_memory_used@@Base+0xa1ec>
  444358:	add	x22, x20, x22
  44435c:	ldr	x1, [x19, #256]
  444360:	b	444384 <_obstack_memory_used@@Base+0x732c>
  444364:	mov	x0, x1
  444368:	add	x1, x1, #0x1
  44436c:	str	x1, [x19, #256]
  444370:	add	x20, x20, #0x1
  444374:	strb	w21, [x19, x0]
  444378:	cmp	x22, x20
  44437c:	strb	w21, [x19, #264]
  444380:	b.eq	445e88 <_obstack_memory_used@@Base+0x8e30>  // b.none
  444384:	ldrb	w21, [x20]
  444388:	cmp	x1, #0xff
  44438c:	b.ne	444364 <_obstack_memory_used@@Base+0x730c>  // b.any
  444390:	ldp	x3, x2, [x19, #272]
  444394:	strb	wzr, [x19, #255]
  444398:	mov	x0, x19
  44439c:	blr	x3
  4443a0:	ldr	x2, [x19, #320]
  4443a4:	mov	x1, #0x1                   	// #1
  4443a8:	mov	x0, #0x0                   	// #0
  4443ac:	add	x2, x2, x1
  4443b0:	str	x2, [x19, #320]
  4443b4:	b	44436c <_obstack_memory_used@@Base+0x7314>
  4443b8:	ldp	x1, x5, [x19, #288]
  4443bc:	add	x23, sp, #0x60
  4443c0:	stp	x5, x20, [sp, #96]
  4443c4:	mov	w22, #0x1                   	// #1
  4443c8:	mov	w6, w22
  4443cc:	str	wzr, [sp, #112]
  4443d0:	str	x1, [sp, #120]
  4443d4:	str	x23, [x19, #296]
  4443d8:	mov	x24, x5
  4443dc:	mov	x0, x5
  4443e0:	mov	x5, x23
  4443e4:	cbnz	x24, 444430 <_obstack_memory_used@@Base+0x73d8>
  4443e8:	b	447574 <_obstack_memory_used@@Base+0xa51c>
  4443ec:	ldr	w1, [x0, #16]
  4443f0:	cbnz	w1, 444428 <_obstack_memory_used@@Base+0x73d0>
  4443f4:	cmp	w22, #0x3
  4443f8:	b.hi	446d30 <_obstack_memory_used@@Base+0x9cd8>  // b.pmore
  4443fc:	ubfiz	x1, x22, #5, #32
  444400:	add	w22, w22, #0x1
  444404:	add	x4, x23, x1
  444408:	ldp	x2, x3, [x0]
  44440c:	stp	x2, x3, [x4]
  444410:	ldp	x2, x3, [x0, #16]
  444414:	stp	x2, x3, [x4, #16]
  444418:	str	x5, [x23, x1]
  44441c:	mov	x5, x4
  444420:	str	x4, [x19, #296]
  444424:	str	w6, [x0, #16]
  444428:	ldr	x0, [x0]
  44442c:	cbz	x0, 444444 <_obstack_memory_used@@Base+0x73ec>
  444430:	ldr	x1, [x0, #8]
  444434:	ldr	w1, [x1]
  444438:	sub	w1, w1, #0x19
  44443c:	cmp	w1, #0x2
  444440:	b.ls	4443ec <_obstack_memory_used@@Base+0x7394>  // b.plast
  444444:	ldr	x2, [x20, #16]
  444448:	mov	x0, x19
  44444c:	mov	w1, w21
  444450:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  444454:	str	x24, [x19, #296]
  444458:	ldr	w0, [sp, #112]
  44445c:	cbnz	w0, 446abc <_obstack_memory_used@@Base+0x9a64>
  444460:	ubfiz	x0, x22, #5, #32
  444464:	cmp	w22, #0x1
  444468:	add	x23, x23, x0
  44446c:	b.eq	444490 <_obstack_memory_used@@Base+0x7438>  // b.none
  444470:	ldur	x2, [x23, #-24]
  444474:	sub	w22, w22, #0x1
  444478:	mov	w1, w21
  44447c:	mov	x0, x19
  444480:	sub	x23, x23, #0x20
  444484:	bl	447898 <_obstack_memory_used@@Base+0xa840>
  444488:	cmp	w22, #0x1
  44448c:	b.ne	444470 <_obstack_memory_used@@Base+0x7418>  // b.any
  444490:	ldr	x3, [x19, #296]
  444494:	mov	w1, w21
  444498:	add	x2, x20, #0x8
  44449c:	mov	x0, x19
  4444a0:	bl	448718 <_obstack_memory_used@@Base+0xb6c0>
  4444a4:	ldp	x21, x22, [sp, #32]
  4444a8:	ldp	x23, x24, [sp, #48]
  4444ac:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4444b0:	ldrsh	w0, [x20, #18]
  4444b4:	cbnz	w0, 446818 <_obstack_memory_used@@Base+0x97c0>
  4444b8:	ldr	x2, [x20, #8]
  4444bc:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  4444c0:	add	x0, x0, #0xdf0
  4444c4:	add	x0, x0, #0x288
  4444c8:	ldr	x1, [x2, #8]
  4444cc:	cmp	x1, x0
  4444d0:	b.eq	44630c <_obstack_memory_used@@Base+0x92b4>  // b.none
  4444d4:	mov	w1, w21
  4444d8:	mov	x0, x19
  4444dc:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4444e0:	ldr	x0, [x19, #256]
  4444e4:	add	x1, x0, #0x1
  4444e8:	cmp	x0, #0xff
  4444ec:	b.ne	444518 <_obstack_memory_used@@Base+0x74c0>  // b.any
  4444f0:	ldp	x3, x2, [x19, #272]
  4444f4:	strb	wzr, [x19, #255]
  4444f8:	mov	x1, x0
  4444fc:	mov	x0, x19
  444500:	blr	x3
  444504:	ldr	x2, [x19, #320]
  444508:	mov	x1, #0x1                   	// #1
  44450c:	mov	x0, #0x0                   	// #0
  444510:	add	x2, x2, x1
  444514:	str	x2, [x19, #320]
  444518:	str	x1, [x19, #256]
  44451c:	mov	w2, #0x20                  	// #32
  444520:	strb	w2, [x19, x0]
  444524:	strb	w2, [x19, #264]
  444528:	ldrsh	w0, [x20, #16]
  44452c:	cbnz	w0, 446220 <_obstack_memory_used@@Base+0x91c8>
  444530:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444534:	add	x20, x20, #0xad0
  444538:	add	x22, x20, #0x6
  44453c:	mov	w21, #0x5f                  	// #95
  444540:	b	444568 <_obstack_memory_used@@Base+0x7510>
  444544:	mov	x0, x1
  444548:	add	x1, x1, #0x1
  44454c:	str	x1, [x19, #256]
  444550:	add	x20, x20, #0x1
  444554:	strb	w21, [x19, x0]
  444558:	cmp	x20, x22
  44455c:	strb	w21, [x19, #264]
  444560:	b.eq	446294 <_obstack_memory_used@@Base+0x923c>  // b.none
  444564:	ldrb	w21, [x20]
  444568:	cmp	x1, #0xff
  44456c:	b.ne	444544 <_obstack_memory_used@@Base+0x74ec>  // b.any
  444570:	ldp	x3, x2, [x19, #272]
  444574:	strb	wzr, [x19, #255]
  444578:	mov	x0, x19
  44457c:	blr	x3
  444580:	ldr	x2, [x19, #320]
  444584:	mov	x1, #0x1                   	// #1
  444588:	mov	x0, #0x0                   	// #0
  44458c:	add	x2, x2, x1
  444590:	str	x2, [x19, #320]
  444594:	b	44454c <_obstack_memory_used@@Base+0x74f4>
  444598:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  44459c:	add	x24, x24, #0x9b0
  4445a0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4445a4:	add	x24, x24, #0x15
  4445a8:	add	x22, x22, #0x9b1
  4445ac:	mov	w23, #0x6e                  	// #110
  4445b0:	ldr	x1, [x19, #256]
  4445b4:	b	4445d8 <_obstack_memory_used@@Base+0x7580>
  4445b8:	mov	x0, x1
  4445bc:	add	x1, x1, #0x1
  4445c0:	str	x1, [x19, #256]
  4445c4:	cmp	x24, x22
  4445c8:	strb	w23, [x19, x0]
  4445cc:	strb	w23, [x19, #264]
  4445d0:	b.eq	445d98 <_obstack_memory_used@@Base+0x8d40>  // b.none
  4445d4:	ldrb	w23, [x22], #1
  4445d8:	cmp	x1, #0xff
  4445dc:	b.ne	4445b8 <_obstack_memory_used@@Base+0x7560>  // b.any
  4445e0:	ldp	x3, x2, [x19, #272]
  4445e4:	strb	wzr, [x19, #255]
  4445e8:	mov	x0, x19
  4445ec:	blr	x3
  4445f0:	ldr	x2, [x19, #320]
  4445f4:	mov	x1, #0x1                   	// #1
  4445f8:	mov	x0, #0x0                   	// #0
  4445fc:	add	x2, x2, x1
  444600:	str	x2, [x19, #320]
  444604:	b	4445c0 <_obstack_memory_used@@Base+0x7568>
  444608:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  44460c:	add	x24, x24, #0x9c8
  444610:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444614:	add	x24, x24, #0x11
  444618:	add	x22, x22, #0x9c9
  44461c:	mov	w23, #0x76                  	// #118
  444620:	ldr	x1, [x19, #256]
  444624:	b	444648 <_obstack_memory_used@@Base+0x75f0>
  444628:	mov	x0, x1
  44462c:	add	x1, x1, #0x1
  444630:	str	x1, [x19, #256]
  444634:	cmp	x24, x22
  444638:	strb	w23, [x19, x0]
  44463c:	strb	w23, [x19, #264]
  444640:	b.eq	445db4 <_obstack_memory_used@@Base+0x8d5c>  // b.none
  444644:	ldrb	w23, [x22], #1
  444648:	cmp	x1, #0xff
  44464c:	b.ne	444628 <_obstack_memory_used@@Base+0x75d0>  // b.any
  444650:	ldp	x3, x2, [x19, #272]
  444654:	strb	wzr, [x19, #255]
  444658:	mov	x0, x19
  44465c:	blr	x3
  444660:	ldr	x2, [x19, #320]
  444664:	mov	x1, #0x1                   	// #1
  444668:	mov	x0, #0x0                   	// #0
  44466c:	add	x2, x2, x1
  444670:	str	x2, [x19, #320]
  444674:	b	444630 <_obstack_memory_used@@Base+0x75d8>
  444678:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  44467c:	add	x24, x24, #0x9e0
  444680:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444684:	add	x24, x24, #0x1a
  444688:	add	x22, x22, #0x9e1
  44468c:	mov	w23, #0x63                  	// #99
  444690:	ldr	x1, [x19, #256]
  444694:	b	4446b8 <_obstack_memory_used@@Base+0x7660>
  444698:	mov	x0, x1
  44469c:	add	x1, x1, #0x1
  4446a0:	str	x1, [x19, #256]
  4446a4:	cmp	x24, x22
  4446a8:	strb	w23, [x19, x0]
  4446ac:	strb	w23, [x19, #264]
  4446b0:	b.eq	445dd0 <_obstack_memory_used@@Base+0x8d78>  // b.none
  4446b4:	ldrb	w23, [x22], #1
  4446b8:	cmp	x1, #0xff
  4446bc:	b.ne	444698 <_obstack_memory_used@@Base+0x7640>  // b.any
  4446c0:	ldp	x3, x2, [x19, #272]
  4446c4:	strb	wzr, [x19, #255]
  4446c8:	mov	x0, x19
  4446cc:	blr	x3
  4446d0:	ldr	x2, [x19, #320]
  4446d4:	mov	x1, #0x1                   	// #1
  4446d8:	mov	x0, #0x0                   	// #0
  4446dc:	add	x2, x2, x1
  4446e0:	str	x2, [x19, #320]
  4446e4:	b	4446a0 <_obstack_memory_used@@Base+0x7648>
  4446e8:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4446ec:	add	x24, x24, #0xa00
  4446f0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4446f4:	add	x24, x24, #0xf
  4446f8:	add	x22, x22, #0xa01
  4446fc:	mov	w23, #0x6a                  	// #106
  444700:	ldr	x1, [x19, #256]
  444704:	b	444728 <_obstack_memory_used@@Base+0x76d0>
  444708:	mov	x0, x1
  44470c:	add	x1, x1, #0x1
  444710:	str	x1, [x19, #256]
  444714:	cmp	x22, x24
  444718:	strb	w23, [x19, x0]
  44471c:	strb	w23, [x19, #264]
  444720:	b.eq	445730 <_obstack_memory_used@@Base+0x86d8>  // b.none
  444724:	ldrb	w23, [x22], #1
  444728:	cmp	x1, #0xff
  44472c:	b.ne	444708 <_obstack_memory_used@@Base+0x76b0>  // b.any
  444730:	ldp	x3, x2, [x19, #272]
  444734:	strb	wzr, [x19, #255]
  444738:	mov	x0, x19
  44473c:	blr	x3
  444740:	ldr	x2, [x19, #320]
  444744:	mov	x1, #0x1                   	// #1
  444748:	mov	x0, #0x0                   	// #0
  44474c:	add	x2, x2, x1
  444750:	str	x2, [x19, #320]
  444754:	b	444710 <_obstack_memory_used@@Base+0x76b8>
  444758:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  44475c:	add	x24, x24, #0xa60
  444760:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444764:	add	x24, x24, #0x15
  444768:	add	x22, x22, #0xa61
  44476c:	mov	w23, #0x72                  	// #114
  444770:	ldr	x1, [x19, #256]
  444774:	b	444798 <_obstack_memory_used@@Base+0x7740>
  444778:	mov	x0, x1
  44477c:	add	x1, x1, #0x1
  444780:	str	x1, [x19, #256]
  444784:	cmp	x24, x22
  444788:	strb	w23, [x19, x0]
  44478c:	strb	w23, [x19, #264]
  444790:	b.eq	445768 <_obstack_memory_used@@Base+0x8710>  // b.none
  444794:	ldrb	w23, [x22], #1
  444798:	cmp	x1, #0xff
  44479c:	b.ne	444778 <_obstack_memory_used@@Base+0x7720>  // b.any
  4447a0:	ldp	x3, x2, [x19, #272]
  4447a4:	strb	wzr, [x19, #255]
  4447a8:	mov	x0, x19
  4447ac:	blr	x3
  4447b0:	ldr	x2, [x19, #320]
  4447b4:	mov	x1, #0x1                   	// #1
  4447b8:	mov	x0, #0x0                   	// #0
  4447bc:	add	x2, x2, x1
  4447c0:	str	x2, [x19, #320]
  4447c4:	b	444780 <_obstack_memory_used@@Base+0x7728>
  4447c8:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4447cc:	add	x24, x24, #0xa28
  4447d0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4447d4:	add	x24, x24, #0x16
  4447d8:	add	x22, x22, #0xa29
  4447dc:	mov	w23, #0x54                  	// #84
  4447e0:	ldr	x1, [x19, #256]
  4447e4:	b	444808 <_obstack_memory_used@@Base+0x77b0>
  4447e8:	mov	x0, x1
  4447ec:	add	x1, x1, #0x1
  4447f0:	str	x1, [x19, #256]
  4447f4:	cmp	x22, x24
  4447f8:	strb	w23, [x19, x0]
  4447fc:	strb	w23, [x19, #264]
  444800:	b.eq	445d28 <_obstack_memory_used@@Base+0x8cd0>  // b.none
  444804:	ldrb	w23, [x22], #1
  444808:	cmp	x1, #0xff
  44480c:	b.ne	4447e8 <_obstack_memory_used@@Base+0x7790>  // b.any
  444810:	ldp	x3, x2, [x19, #272]
  444814:	strb	wzr, [x19, #255]
  444818:	mov	x0, x19
  44481c:	blr	x3
  444820:	ldr	x2, [x19, #320]
  444824:	mov	x1, #0x1                   	// #1
  444828:	mov	x0, #0x0                   	// #0
  44482c:	add	x2, x2, x1
  444830:	str	x2, [x19, #320]
  444834:	b	4447f0 <_obstack_memory_used@@Base+0x7798>
  444838:	ldr	x1, [x20, #8]
  44483c:	mov	x0, x19
  444840:	mov	w24, #0x0                   	// #0
  444844:	bl	4400c8 <_obstack_memory_used@@Base+0x3070>
  444848:	cbz	x0, 44725c <_obstack_memory_used@@Base+0xa204>
  44484c:	stp	x25, x26, [sp, #64]
  444850:	ldr	w1, [x0]
  444854:	cmp	w1, #0x2f
  444858:	b.ne	445f04 <_obstack_memory_used@@Base+0x8eac>  // b.any
  44485c:	ldr	x1, [x0, #8]
  444860:	cbz	x1, 445f04 <_obstack_memory_used@@Base+0x8eac>
  444864:	ldr	x0, [x0, #16]
  444868:	add	w24, w24, #0x1
  44486c:	cbnz	x0, 444850 <_obstack_memory_used@@Base+0x77f8>
  444870:	ldr	x25, [x20, #8]
  444874:	sub	w26, w24, #0x1
  444878:	b	444888 <_obstack_memory_used@@Base+0x7830>
  44487c:	add	w22, w22, #0x1
  444880:	cmp	w22, w24
  444884:	b.ge	445eac <_obstack_memory_used@@Base+0x8e54>  // b.tcont
  444888:	str	w22, [x19, #316]
  44488c:	mov	x2, x25
  444890:	mov	w1, w21
  444894:	mov	x0, x19
  444898:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44489c:	cmp	w26, w22
  4448a0:	b.le	44487c <_obstack_memory_used@@Base+0x7824>
  4448a4:	mov	w20, #0x2c                  	// #44
  4448a8:	mov	x23, #0x0                   	// #0
  4448ac:	ldr	x1, [x19, #256]
  4448b0:	b	4448d4 <_obstack_memory_used@@Base+0x787c>
  4448b4:	mov	x0, x1
  4448b8:	add	x1, x1, #0x1
  4448bc:	str	x1, [x19, #256]
  4448c0:	strb	w20, [x19, x0]
  4448c4:	strb	w20, [x19, #264]
  4448c8:	mov	w20, #0x20                  	// #32
  4448cc:	cbnz	x23, 44487c <_obstack_memory_used@@Base+0x7824>
  4448d0:	mov	x23, #0x1                   	// #1
  4448d4:	cmp	x1, #0xff
  4448d8:	b.ne	4448b4 <_obstack_memory_used@@Base+0x785c>  // b.any
  4448dc:	ldp	x3, x2, [x19, #272]
  4448e0:	strb	wzr, [x19, #255]
  4448e4:	mov	x0, x19
  4448e8:	blr	x3
  4448ec:	ldr	x2, [x19, #320]
  4448f0:	mov	x1, #0x1                   	// #1
  4448f4:	mov	x0, #0x0                   	// #0
  4448f8:	add	x2, x2, x1
  4448fc:	str	x2, [x19, #320]
  444900:	b	4448bc <_obstack_memory_used@@Base+0x7864>
  444904:	ldr	x2, [x20, #8]
  444908:	mov	w1, w21
  44490c:	mov	x0, x19
  444910:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444914:	add	x24, x24, #0x8c8
  444918:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  44491c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  444920:	add	x24, x24, #0x5
  444924:	add	x22, x22, #0x8c9
  444928:	mov	w23, #0x5b                  	// #91
  44492c:	ldr	x1, [x19, #256]
  444930:	b	444954 <_obstack_memory_used@@Base+0x78fc>
  444934:	mov	x0, x1
  444938:	add	x1, x1, #0x1
  44493c:	str	x1, [x19, #256]
  444940:	cmp	x24, x22
  444944:	strb	w23, [x19, x0]
  444948:	strb	w23, [x19, #264]
  44494c:	b.eq	445874 <_obstack_memory_used@@Base+0x881c>  // b.none
  444950:	ldrb	w23, [x22], #1
  444954:	cmp	x1, #0xff
  444958:	b.ne	444934 <_obstack_memory_used@@Base+0x78dc>  // b.any
  44495c:	ldp	x3, x2, [x19, #272]
  444960:	strb	wzr, [x19, #255]
  444964:	mov	x0, x19
  444968:	blr	x3
  44496c:	ldr	x2, [x19, #320]
  444970:	mov	x1, #0x1                   	// #1
  444974:	mov	x0, #0x0                   	// #0
  444978:	add	x2, x2, x1
  44497c:	str	x2, [x19, #320]
  444980:	b	44493c <_obstack_memory_used@@Base+0x78e4>
  444984:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444988:	add	x24, x24, #0xaa8
  44498c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444990:	add	x24, x24, #0x1a
  444994:	add	x22, x22, #0xaa9
  444998:	mov	w23, #0x6e                  	// #110
  44499c:	ldr	x1, [x19, #256]
  4449a0:	b	4449c4 <_obstack_memory_used@@Base+0x796c>
  4449a4:	mov	x0, x1
  4449a8:	add	x1, x1, #0x1
  4449ac:	str	x1, [x19, #256]
  4449b0:	cmp	x24, x22
  4449b4:	strb	w23, [x19, x0]
  4449b8:	strb	w23, [x19, #264]
  4449bc:	b.eq	44583c <_obstack_memory_used@@Base+0x87e4>  // b.none
  4449c0:	ldrb	w23, [x22], #1
  4449c4:	cmp	x1, #0xff
  4449c8:	b.ne	4449a4 <_obstack_memory_used@@Base+0x794c>  // b.any
  4449cc:	ldp	x3, x2, [x19, #272]
  4449d0:	strb	wzr, [x19, #255]
  4449d4:	mov	x0, x19
  4449d8:	blr	x3
  4449dc:	ldr	x2, [x19, #320]
  4449e0:	mov	x1, #0x1                   	// #1
  4449e4:	mov	x0, #0x0                   	// #0
  4449e8:	add	x2, x2, x1
  4449ec:	str	x2, [x19, #320]
  4449f0:	b	4449ac <_obstack_memory_used@@Base+0x7954>
  4449f4:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4449f8:	add	x24, x24, #0xa10
  4449fc:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444a00:	add	x24, x24, #0x13
  444a04:	add	x22, x22, #0xa11
  444a08:	mov	w23, #0x67                  	// #103
  444a0c:	ldr	x1, [x19, #256]
  444a10:	b	444a34 <_obstack_memory_used@@Base+0x79dc>
  444a14:	mov	x0, x1
  444a18:	add	x1, x1, #0x1
  444a1c:	str	x1, [x19, #256]
  444a20:	cmp	x24, x22
  444a24:	strb	w23, [x19, x0]
  444a28:	strb	w23, [x19, #264]
  444a2c:	b.eq	44574c <_obstack_memory_used@@Base+0x86f4>  // b.none
  444a30:	ldrb	w23, [x22], #1
  444a34:	cmp	x1, #0xff
  444a38:	b.ne	444a14 <_obstack_memory_used@@Base+0x79bc>  // b.any
  444a3c:	ldp	x3, x2, [x19, #272]
  444a40:	strb	wzr, [x19, #255]
  444a44:	mov	x0, x19
  444a48:	blr	x3
  444a4c:	ldr	x2, [x19, #320]
  444a50:	mov	x1, #0x1                   	// #1
  444a54:	mov	x0, #0x0                   	// #0
  444a58:	add	x2, x2, x1
  444a5c:	str	x2, [x19, #320]
  444a60:	b	444a1c <_obstack_memory_used@@Base+0x79c4>
  444a64:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444a68:	add	x24, x24, #0xa40
  444a6c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444a70:	add	x24, x24, #0x19
  444a74:	add	x22, x22, #0xa41
  444a78:	mov	w23, #0x54                  	// #84
  444a7c:	ldr	x1, [x19, #256]
  444a80:	b	444aa4 <_obstack_memory_used@@Base+0x7a4c>
  444a84:	mov	x0, x1
  444a88:	add	x1, x1, #0x1
  444a8c:	str	x1, [x19, #256]
  444a90:	cmp	x24, x22
  444a94:	strb	w23, [x19, x0]
  444a98:	strb	w23, [x19, #264]
  444a9c:	b.eq	445d44 <_obstack_memory_used@@Base+0x8cec>  // b.none
  444aa0:	ldrb	w23, [x22], #1
  444aa4:	cmp	x1, #0xff
  444aa8:	b.ne	444a84 <_obstack_memory_used@@Base+0x7a2c>  // b.any
  444aac:	ldp	x3, x2, [x19, #272]
  444ab0:	strb	wzr, [x19, #255]
  444ab4:	mov	x0, x19
  444ab8:	blr	x3
  444abc:	ldr	x2, [x19, #320]
  444ac0:	mov	x1, #0x1                   	// #1
  444ac4:	mov	x0, #0x0                   	// #0
  444ac8:	add	x2, x2, x1
  444acc:	str	x2, [x19, #320]
  444ad0:	b	444a8c <_obstack_memory_used@@Base+0x7a34>
  444ad4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444ad8:	add	x22, x22, #0x938
  444adc:	add	x24, x22, #0x8
  444ae0:	mov	w23, #0x56                  	// #86
  444ae4:	ldr	x1, [x19, #256]
  444ae8:	b	444b10 <_obstack_memory_used@@Base+0x7ab8>
  444aec:	mov	x0, x1
  444af0:	add	x1, x1, #0x1
  444af4:	str	x1, [x19, #256]
  444af8:	add	x22, x22, #0x1
  444afc:	strb	w23, [x19, x0]
  444b00:	cmp	x24, x22
  444b04:	strb	w23, [x19, #264]
  444b08:	b.eq	445c90 <_obstack_memory_used@@Base+0x8c38>  // b.none
  444b0c:	ldrb	w23, [x22]
  444b10:	cmp	x1, #0xff
  444b14:	b.ne	444aec <_obstack_memory_used@@Base+0x7a94>  // b.any
  444b18:	ldp	x3, x2, [x19, #272]
  444b1c:	strb	wzr, [x19, #255]
  444b20:	mov	x0, x19
  444b24:	blr	x3
  444b28:	ldr	x2, [x19, #320]
  444b2c:	mov	x1, #0x1                   	// #1
  444b30:	mov	x0, #0x0                   	// #0
  444b34:	add	x2, x2, x1
  444b38:	str	x2, [x19, #320]
  444b3c:	b	444af4 <_obstack_memory_used@@Base+0x7a9c>
  444b40:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444b44:	add	x24, x24, #0x948
  444b48:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444b4c:	add	x24, x24, #0x18
  444b50:	add	x22, x22, #0x949
  444b54:	mov	w23, #0x63                  	// #99
  444b58:	ldr	x1, [x19, #256]
  444b5c:	b	444b80 <_obstack_memory_used@@Base+0x7b28>
  444b60:	mov	x0, x1
  444b64:	add	x1, x1, #0x1
  444b68:	str	x1, [x19, #256]
  444b6c:	cmp	x24, x22
  444b70:	strb	w23, [x19, x0]
  444b74:	strb	w23, [x19, #264]
  444b78:	b.eq	445cac <_obstack_memory_used@@Base+0x8c54>  // b.none
  444b7c:	ldrb	w23, [x22], #1
  444b80:	cmp	x1, #0xff
  444b84:	b.ne	444b60 <_obstack_memory_used@@Base+0x7b08>  // b.any
  444b88:	ldp	x3, x2, [x19, #272]
  444b8c:	strb	wzr, [x19, #255]
  444b90:	mov	x0, x19
  444b94:	blr	x3
  444b98:	ldr	x2, [x19, #320]
  444b9c:	mov	x1, #0x1                   	// #1
  444ba0:	mov	x0, #0x0                   	// #0
  444ba4:	add	x2, x2, x1
  444ba8:	str	x2, [x19, #320]
  444bac:	b	444b68 <_obstack_memory_used@@Base+0x7b10>
  444bb0:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444bb4:	add	x24, x24, #0x970
  444bb8:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444bbc:	add	x24, x24, #0xd
  444bc0:	add	x22, x22, #0x971
  444bc4:	mov	w23, #0x74                  	// #116
  444bc8:	ldr	x1, [x19, #256]
  444bcc:	b	444bf0 <_obstack_memory_used@@Base+0x7b98>
  444bd0:	mov	x0, x1
  444bd4:	add	x1, x1, #0x1
  444bd8:	str	x1, [x19, #256]
  444bdc:	cmp	x24, x22
  444be0:	strb	w23, [x19, x0]
  444be4:	strb	w23, [x19, #264]
  444be8:	b.eq	445804 <_obstack_memory_used@@Base+0x87ac>  // b.none
  444bec:	ldrb	w23, [x22], #1
  444bf0:	cmp	x1, #0xff
  444bf4:	b.ne	444bd0 <_obstack_memory_used@@Base+0x7b78>  // b.any
  444bf8:	ldp	x3, x2, [x19, #272]
  444bfc:	strb	wzr, [x19, #255]
  444c00:	mov	x0, x19
  444c04:	blr	x3
  444c08:	ldr	x2, [x19, #320]
  444c0c:	mov	x1, #0x1                   	// #1
  444c10:	mov	x0, #0x0                   	// #0
  444c14:	add	x2, x2, x1
  444c18:	str	x2, [x19, #320]
  444c1c:	b	444bd8 <_obstack_memory_used@@Base+0x7b80>
  444c20:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444c24:	add	x24, x24, #0x980
  444c28:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444c2c:	add	x24, x24, #0x12
  444c30:	add	x22, x22, #0x981
  444c34:	mov	w23, #0x74                  	// #116
  444c38:	ldr	x1, [x19, #256]
  444c3c:	b	444c60 <_obstack_memory_used@@Base+0x7c08>
  444c40:	mov	x0, x1
  444c44:	add	x1, x1, #0x1
  444c48:	str	x1, [x19, #256]
  444c4c:	cmp	x24, x22
  444c50:	strb	w23, [x19, x0]
  444c54:	strb	w23, [x19, #264]
  444c58:	b.eq	445820 <_obstack_memory_used@@Base+0x87c8>  // b.none
  444c5c:	ldrb	w23, [x22], #1
  444c60:	cmp	x1, #0xff
  444c64:	b.ne	444c40 <_obstack_memory_used@@Base+0x7be8>  // b.any
  444c68:	ldp	x3, x2, [x19, #272]
  444c6c:	strb	wzr, [x19, #255]
  444c70:	mov	x0, x19
  444c74:	blr	x3
  444c78:	ldr	x2, [x19, #320]
  444c7c:	mov	x1, #0x1                   	// #1
  444c80:	mov	x0, #0x0                   	// #0
  444c84:	add	x2, x2, x1
  444c88:	str	x2, [x19, #320]
  444c8c:	b	444c48 <_obstack_memory_used@@Base+0x7bf0>
  444c90:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444c94:	add	x24, x24, #0x998
  444c98:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444c9c:	add	x24, x24, #0x10
  444ca0:	add	x22, x22, #0x999
  444ca4:	mov	w23, #0x74                  	// #116
  444ca8:	ldr	x1, [x19, #256]
  444cac:	b	444cd0 <_obstack_memory_used@@Base+0x7c78>
  444cb0:	mov	x0, x1
  444cb4:	add	x1, x1, #0x1
  444cb8:	str	x1, [x19, #256]
  444cbc:	cmp	x24, x22
  444cc0:	strb	w23, [x19, x0]
  444cc4:	strb	w23, [x19, #264]
  444cc8:	b.eq	445c74 <_obstack_memory_used@@Base+0x8c1c>  // b.none
  444ccc:	ldrb	w23, [x22], #1
  444cd0:	cmp	x1, #0xff
  444cd4:	b.ne	444cb0 <_obstack_memory_used@@Base+0x7c58>  // b.any
  444cd8:	ldp	x3, x2, [x19, #272]
  444cdc:	strb	wzr, [x19, #255]
  444ce0:	mov	x0, x19
  444ce4:	blr	x3
  444ce8:	ldr	x2, [x19, #320]
  444cec:	mov	x1, #0x1                   	// #1
  444cf0:	mov	x0, #0x0                   	// #0
  444cf4:	add	x2, x2, x1
  444cf8:	str	x2, [x19, #320]
  444cfc:	b	444cb8 <_obstack_memory_used@@Base+0x7c60>
  444d00:	stp	x25, x26, [sp, #64]
  444d04:	ldr	x25, [x20, #8]
  444d08:	ldr	x22, [x19, #296]
  444d0c:	str	xzr, [x19, #296]
  444d10:	cbz	x25, 446dc8 <_obstack_memory_used@@Base+0x9d70>
  444d14:	add	x23, sp, #0x60
  444d18:	mov	x2, #0x1f                  	// #31
  444d1c:	ldr	x6, [x19, #288]
  444d20:	mov	x3, x23
  444d24:	mov	x0, #0x0                   	// #0
  444d28:	mov	w24, #0x0                   	// #0
  444d2c:	mov	x1, #0x1                   	// #1
  444d30:	movk	x2, #0x1a, lsl #48
  444d34:	str	wzr, [x3, #16]
  444d38:	add	w24, w24, #0x1
  444d3c:	str	x0, [x3]
  444d40:	mov	x4, x3
  444d44:	ldr	w5, [x25]
  444d48:	str	x25, [x3, #8]
  444d4c:	str	x6, [x3, #24]
  444d50:	sub	w0, w5, #0x1c
  444d54:	cmp	w0, #0x34
  444d58:	b.hi	444d68 <_obstack_memory_used@@Base+0x7d10>  // b.pmore
  444d5c:	lsl	x0, x1, x0
  444d60:	tst	x0, x2
  444d64:	b.ne	445ee8 <_obstack_memory_used@@Base+0x8e90>  // b.any
  444d68:	str	x3, [x19, #296]
  444d6c:	cmp	w5, #0x2
  444d70:	b.eq	446ca8 <_obstack_memory_used@@Base+0x9c50>  // b.none
  444d74:	cmp	w5, #0x4
  444d78:	b.ne	444d88 <_obstack_memory_used@@Base+0x7d30>  // b.any
  444d7c:	add	x0, sp, #0x50
  444d80:	stp	x6, x25, [sp, #80]
  444d84:	str	x0, [x19, #288]
  444d88:	ldr	x2, [x20, #16]
  444d8c:	mov	x0, x19
  444d90:	mov	w1, w21
  444d94:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  444d98:	ldr	w0, [x25]
  444d9c:	cmp	w0, #0x4
  444da0:	b.ne	444dac <_obstack_memory_used@@Base+0x7d54>  // b.any
  444da4:	ldr	x0, [sp, #80]
  444da8:	str	x0, [x19, #288]
  444dac:	sub	w20, w24, #0x1
  444db0:	mov	w24, #0x20                  	// #32
  444db4:	ubfiz	x0, x20, #5, #32
  444db8:	add	x23, x23, x0
  444dbc:	b	444dc4 <_obstack_memory_used@@Base+0x7d6c>
  444dc0:	sub	w20, w20, #0x1
  444dc4:	ldr	w0, [x23, #16]
  444dc8:	cbnz	w0, 444e20 <_obstack_memory_used@@Base+0x7dc8>
  444dcc:	ldr	x0, [x19, #256]
  444dd0:	add	x1, x0, #0x1
  444dd4:	cmp	x0, #0xff
  444dd8:	b.ne	444e04 <_obstack_memory_used@@Base+0x7dac>  // b.any
  444ddc:	ldp	x3, x2, [x19, #272]
  444de0:	strb	wzr, [x19, #255]
  444de4:	mov	x1, x0
  444de8:	mov	x0, x19
  444dec:	blr	x3
  444df0:	ldr	x2, [x19, #320]
  444df4:	mov	x1, #0x1                   	// #1
  444df8:	mov	x0, #0x0                   	// #0
  444dfc:	add	x2, x2, x1
  444e00:	str	x2, [x19, #320]
  444e04:	str	x1, [x19, #256]
  444e08:	mov	w1, w21
  444e0c:	ldr	x2, [x23, #8]
  444e10:	strb	w24, [x19, x0]
  444e14:	strb	w24, [x19, #264]
  444e18:	mov	x0, x19
  444e1c:	bl	447898 <_obstack_memory_used@@Base+0xa840>
  444e20:	sub	x23, x23, #0x20
  444e24:	cbnz	w20, 444dc0 <_obstack_memory_used@@Base+0x7d68>
  444e28:	ldp	x23, x24, [sp, #48]
  444e2c:	ldp	x25, x26, [sp, #64]
  444e30:	str	x22, [x19, #296]
  444e34:	ldp	x21, x22, [sp, #32]
  444e38:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  444e3c:	ldr	x22, [x20, #8]
  444e40:	ldr	x24, [x19, #296]
  444e44:	str	xzr, [x19, #296]
  444e48:	ldr	x23, [x19, #368]
  444e4c:	str	x20, [x19, #368]
  444e50:	tbz	w21, #2, 444e68 <_obstack_memory_used@@Base+0x7e10>
  444e54:	ldr	w0, [x22]
  444e58:	cbnz	w0, 444e68 <_obstack_memory_used@@Base+0x7e10>
  444e5c:	ldr	w0, [x22, #16]
  444e60:	cmp	w0, #0x6
  444e64:	b.eq	447160 <_obstack_memory_used@@Base+0xa108>  // b.none
  444e68:	mov	x0, x19
  444e6c:	mov	x2, x22
  444e70:	mov	w1, w21
  444e74:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  444e78:	ldrb	w0, [x19, #264]
  444e7c:	cmp	w0, #0x3c
  444e80:	b.eq	4469c8 <_obstack_memory_used@@Base+0x9970>  // b.none
  444e84:	ldr	x1, [x19, #256]
  444e88:	add	x0, x1, #0x1
  444e8c:	cmp	x1, #0xff
  444e90:	b.ne	444eb8 <_obstack_memory_used@@Base+0x7e60>  // b.any
  444e94:	ldp	x3, x2, [x19, #272]
  444e98:	strb	wzr, [x19, #255]
  444e9c:	mov	x0, x19
  444ea0:	blr	x3
  444ea4:	ldr	x2, [x19, #320]
  444ea8:	mov	x0, #0x1                   	// #1
  444eac:	mov	x1, #0x0                   	// #0
  444eb0:	add	x2, x2, x0
  444eb4:	str	x2, [x19, #320]
  444eb8:	str	x0, [x19, #256]
  444ebc:	mov	w0, #0x3c                  	// #60
  444ec0:	strb	w0, [x19, x1]
  444ec4:	mov	w1, w21
  444ec8:	strb	w0, [x19, #264]
  444ecc:	mov	x0, x19
  444ed0:	ldr	x2, [x20, #16]
  444ed4:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  444ed8:	ldrb	w0, [x19, #264]
  444edc:	cmp	w0, #0x3e
  444ee0:	b.eq	446980 <_obstack_memory_used@@Base+0x9928>  // b.none
  444ee4:	ldr	x1, [x19, #256]
  444ee8:	add	x0, x1, #0x1
  444eec:	cmp	x1, #0xff
  444ef0:	b.ne	444f18 <_obstack_memory_used@@Base+0x7ec0>  // b.any
  444ef4:	ldp	x3, x2, [x19, #272]
  444ef8:	strb	wzr, [x19, #255]
  444efc:	mov	x0, x19
  444f00:	blr	x3
  444f04:	ldr	x2, [x19, #320]
  444f08:	mov	x0, #0x1                   	// #1
  444f0c:	mov	x1, #0x0                   	// #0
  444f10:	add	x2, x2, x0
  444f14:	str	x2, [x19, #320]
  444f18:	str	x0, [x19, #256]
  444f1c:	mov	w0, #0x3e                  	// #62
  444f20:	strb	w0, [x19, x1]
  444f24:	strb	w0, [x19, #264]
  444f28:	ldp	x21, x22, [sp, #32]
  444f2c:	str	x24, [x19, #296]
  444f30:	str	x23, [x19, #368]
  444f34:	ldp	x23, x24, [sp, #48]
  444f38:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  444f3c:	ldr	w0, [x19, #312]
  444f40:	cbz	w0, 44600c <_obstack_memory_used@@Base+0x8fb4>
  444f44:	adrp	x23, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444f48:	add	x23, x23, #0x900
  444f4c:	adrp	x21, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  444f50:	add	x23, x23, #0x5
  444f54:	add	x21, x21, #0x901
  444f58:	mov	w22, #0x61                  	// #97
  444f5c:	ldr	x1, [x19, #256]
  444f60:	b	444f84 <_obstack_memory_used@@Base+0x7f2c>
  444f64:	mov	x0, x1
  444f68:	add	x1, x1, #0x1
  444f6c:	str	x1, [x19, #256]
  444f70:	cmp	x23, x21
  444f74:	strb	w22, [x19, x0]
  444f78:	strb	w22, [x19, #264]
  444f7c:	b.eq	446054 <_obstack_memory_used@@Base+0x8ffc>  // b.none
  444f80:	ldrb	w22, [x21], #1
  444f84:	cmp	x1, #0xff
  444f88:	b.ne	444f64 <_obstack_memory_used@@Base+0x7f0c>  // b.any
  444f8c:	ldp	x3, x2, [x19, #272]
  444f90:	strb	wzr, [x19, #255]
  444f94:	mov	x0, x19
  444f98:	blr	x3
  444f9c:	ldr	x2, [x19, #320]
  444fa0:	mov	x1, #0x1                   	// #1
  444fa4:	mov	x0, #0x0                   	// #0
  444fa8:	add	x2, x2, x1
  444fac:	str	x2, [x19, #320]
  444fb0:	b	444f6c <_obstack_memory_used@@Base+0x7f14>
  444fb4:	ldr	x1, [x19, #256]
  444fb8:	add	x0, x1, #0x1
  444fbc:	cmp	x1, #0xff
  444fc0:	b.ne	444fe8 <_obstack_memory_used@@Base+0x7f90>  // b.any
  444fc4:	ldp	x3, x2, [x19, #272]
  444fc8:	strb	wzr, [x19, #255]
  444fcc:	mov	x0, x19
  444fd0:	blr	x3
  444fd4:	ldr	x2, [x19, #320]
  444fd8:	mov	x0, #0x1                   	// #1
  444fdc:	mov	x1, #0x0                   	// #0
  444fe0:	add	x2, x2, x0
  444fe4:	str	x2, [x19, #320]
  444fe8:	str	x0, [x19, #256]
  444fec:	mov	w0, #0x7e                  	// #126
  444ff0:	strb	w0, [x19, x1]
  444ff4:	mov	w1, w21
  444ff8:	strb	w0, [x19, #264]
  444ffc:	mov	x0, x19
  445000:	ldr	x2, [x20, #16]
  445004:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445008:	ldp	x21, x22, [sp, #32]
  44500c:	ldp	x23, x24, [sp, #48]
  445010:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445014:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445018:	add	x24, x24, #0x928
  44501c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445020:	add	x24, x24, #0xb
  445024:	add	x22, x22, #0x929
  445028:	mov	w23, #0x76                  	// #118
  44502c:	ldr	x1, [x19, #256]
  445030:	b	445054 <_obstack_memory_used@@Base+0x7ffc>
  445034:	mov	x0, x1
  445038:	add	x1, x1, #0x1
  44503c:	str	x1, [x19, #256]
  445040:	cmp	x24, x22
  445044:	strb	w23, [x19, x0]
  445048:	strb	w23, [x19, #264]
  44504c:	b.eq	4457e8 <_obstack_memory_used@@Base+0x8790>  // b.none
  445050:	ldrb	w23, [x22], #1
  445054:	cmp	x1, #0xff
  445058:	b.ne	445034 <_obstack_memory_used@@Base+0x7fdc>  // b.any
  44505c:	ldp	x3, x2, [x19, #272]
  445060:	strb	wzr, [x19, #255]
  445064:	mov	x0, x19
  445068:	blr	x3
  44506c:	ldr	x2, [x19, #320]
  445070:	mov	x1, #0x1                   	// #1
  445074:	mov	x0, #0x0                   	// #0
  445078:	add	x2, x2, x1
  44507c:	str	x2, [x19, #320]
  445080:	b	44503c <_obstack_memory_used@@Base+0x7fe4>
  445084:	ldr	x0, [x20, #16]
  445088:	ldr	w0, [x0]
  44508c:	cmp	w0, #0x39
  445090:	b.ne	443a80 <_obstack_memory_used@@Base+0x6a28>  // b.any
  445094:	ldr	x2, [x20, #8]
  445098:	ldr	x0, [x2, #8]
  44509c:	ldr	x0, [x0]
  4450a0:	ldrb	w1, [x0, #1]
  4450a4:	cmp	w1, #0x63
  4450a8:	b.eq	446de0 <_obstack_memory_used@@Base+0x9d88>  // b.none
  4450ac:	add	x3, x20, #0x10
  4450b0:	mov	w1, w21
  4450b4:	mov	x0, x19
  4450b8:	bl	448b50 <_obstack_memory_used@@Base+0xbaf8>
  4450bc:	cbnz	w0, 447148 <_obstack_memory_used@@Base+0xa0f0>
  4450c0:	ldr	x0, [x20, #8]
  4450c4:	ldr	w1, [x0]
  4450c8:	cmp	w1, #0x32
  4450cc:	b.eq	4472bc <_obstack_memory_used@@Base+0xa264>  // b.none
  4450d0:	ldr	x0, [x0, #8]
  4450d4:	ldr	x1, [x0]
  4450d8:	ldrb	w0, [x1]
  4450dc:	subs	w0, w0, #0x63
  4450e0:	b.ne	4450f4 <_obstack_memory_used@@Base+0x809c>  // b.any
  4450e4:	ldrb	w0, [x1, #1]
  4450e8:	subs	w0, w0, #0x6c
  4450ec:	b.ne	4450f4 <_obstack_memory_used@@Base+0x809c>  // b.any
  4450f0:	ldrb	w0, [x1, #2]
  4450f4:	ldr	x1, [x20, #16]
  4450f8:	ldr	x2, [x1, #8]
  4450fc:	cbnz	w0, 44510c <_obstack_memory_used@@Base+0x80b4>
  445100:	ldr	w0, [x2]
  445104:	cmp	w0, #0x3
  445108:	b.eq	447380 <_obstack_memory_used@@Base+0xa328>  // b.none
  44510c:	mov	w1, w21
  445110:	mov	x0, x19
  445114:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  445118:	ldr	x2, [x20, #8]
  44511c:	ldr	x0, [x2, #8]
  445120:	ldr	x0, [x0]
  445124:	ldrb	w1, [x0]
  445128:	cmp	w1, #0x69
  44512c:	b.ne	447098 <_obstack_memory_used@@Base+0xa040>  // b.any
  445130:	ldrb	w3, [x0, #1]
  445134:	cmp	w3, #0x78
  445138:	b.ne	447098 <_obstack_memory_used@@Base+0xa040>  // b.any
  44513c:	ldrb	w3, [x0, #2]
  445140:	cbnz	w3, 447098 <_obstack_memory_used@@Base+0xa040>
  445144:	ldr	x1, [x19, #256]
  445148:	cmp	x1, #0xff
  44514c:	b.ne	445174 <_obstack_memory_used@@Base+0x811c>  // b.any
  445150:	ldp	x3, x2, [x19, #272]
  445154:	strb	wzr, [x19, #255]
  445158:	mov	x0, x19
  44515c:	blr	x3
  445160:	str	xzr, [x19, #256]
  445164:	ldr	x0, [x19, #320]
  445168:	mov	x1, #0x0                   	// #0
  44516c:	add	x0, x0, #0x1
  445170:	str	x0, [x19, #320]
  445174:	add	x0, x1, #0x1
  445178:	str	x0, [x19, #256]
  44517c:	mov	w0, #0x5b                  	// #91
  445180:	strb	w0, [x19, x1]
  445184:	strb	w0, [x19, #264]
  445188:	mov	w1, w21
  44518c:	mov	x0, x19
  445190:	ldr	x2, [x20, #16]
  445194:	ldr	x2, [x2, #16]
  445198:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44519c:	ldr	x1, [x19, #256]
  4451a0:	cmp	x1, #0xff
  4451a4:	b.ne	4451cc <_obstack_memory_used@@Base+0x8174>  // b.any
  4451a8:	ldp	x3, x2, [x19, #272]
  4451ac:	strb	wzr, [x19, #255]
  4451b0:	mov	x0, x19
  4451b4:	blr	x3
  4451b8:	str	xzr, [x19, #256]
  4451bc:	ldr	x0, [x19, #320]
  4451c0:	mov	x1, #0x0                   	// #0
  4451c4:	add	x0, x0, #0x1
  4451c8:	str	x0, [x19, #320]
  4451cc:	add	x0, x1, #0x1
  4451d0:	str	x0, [x19, #256]
  4451d4:	mov	w0, #0x5d                  	// #93
  4451d8:	strb	w0, [x19, x1]
  4451dc:	strb	w0, [x19, #264]
  4451e0:	ldr	x0, [x20, #8]
  4451e4:	ldr	w1, [x0]
  4451e8:	cmp	w1, #0x32
  4451ec:	b.eq	4472a0 <_obstack_memory_used@@Base+0xa248>  // b.none
  4451f0:	ldp	x21, x22, [sp, #32]
  4451f4:	ldp	x23, x24, [sp, #48]
  4451f8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4451fc:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445200:	add	x24, x24, #0xb40
  445204:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445208:	add	x24, x24, #0xe
  44520c:	add	x22, x22, #0xb41
  445210:	mov	w23, #0x6a                  	// #106
  445214:	ldr	x1, [x19, #256]
  445218:	b	44523c <_obstack_memory_used@@Base+0x81e4>
  44521c:	mov	x0, x1
  445220:	add	x1, x1, #0x1
  445224:	str	x1, [x19, #256]
  445228:	cmp	x24, x22
  44522c:	strb	w23, [x19, x0]
  445230:	strb	w23, [x19, #264]
  445234:	b.eq	445dec <_obstack_memory_used@@Base+0x8d94>  // b.none
  445238:	ldrb	w23, [x22], #1
  44523c:	cmp	x1, #0xff
  445240:	b.ne	44521c <_obstack_memory_used@@Base+0x81c4>  // b.any
  445244:	ldp	x3, x2, [x19, #272]
  445248:	strb	wzr, [x19, #255]
  44524c:	mov	x0, x19
  445250:	blr	x3
  445254:	ldr	x2, [x19, #320]
  445258:	mov	x1, #0x1                   	// #1
  44525c:	mov	x0, #0x0                   	// #0
  445260:	add	x2, x2, x1
  445264:	str	x2, [x19, #320]
  445268:	b	445224 <_obstack_memory_used@@Base+0x81cc>
  44526c:	ldr	x2, [x20, #8]
  445270:	mov	w1, w21
  445274:	mov	x0, x19
  445278:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44527c:	ldr	x2, [x20, #16]
  445280:	mov	w1, w21
  445284:	mov	x0, x19
  445288:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44528c:	ldp	x21, x22, [sp, #32]
  445290:	ldp	x23, x24, [sp, #48]
  445294:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445298:	ldr	x1, [x19, #256]
  44529c:	ldrb	w20, [x20, #8]
  4452a0:	add	x0, x1, #0x1
  4452a4:	cmp	x1, #0xff
  4452a8:	b.ne	4452d0 <_obstack_memory_used@@Base+0x8278>  // b.any
  4452ac:	ldp	x3, x2, [x19, #272]
  4452b0:	strb	wzr, [x19, #255]
  4452b4:	mov	x0, x19
  4452b8:	blr	x3
  4452bc:	ldr	x2, [x19, #320]
  4452c0:	mov	x0, #0x1                   	// #1
  4452c4:	mov	x1, #0x0                   	// #0
  4452c8:	add	x2, x2, x0
  4452cc:	str	x2, [x19, #320]
  4452d0:	str	x0, [x19, #256]
  4452d4:	strb	w20, [x19, x1]
  4452d8:	strb	w20, [x19, #264]
  4452dc:	ldp	x21, x22, [sp, #32]
  4452e0:	ldp	x23, x24, [sp, #48]
  4452e4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4452e8:	ldr	w2, [x20, #8]
  4452ec:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4452f0:	add	x1, x1, #0x8e0
  4452f4:	add	x20, sp, #0x60
  4452f8:	mov	x0, x20
  4452fc:	bl	4026e0 <sprintf@plt>
  445300:	mov	x0, x20
  445304:	bl	402630 <strlen@plt>
  445308:	cbz	x0, 447238 <_obstack_memory_used@@Base+0xa1e0>
  44530c:	add	x22, x20, x0
  445310:	ldr	x1, [x19, #256]
  445314:	b	445338 <_obstack_memory_used@@Base+0x82e0>
  445318:	mov	x0, x1
  44531c:	add	x1, x1, #0x1
  445320:	str	x1, [x19, #256]
  445324:	add	x20, x20, #0x1
  445328:	strb	w21, [x19, x0]
  44532c:	cmp	x20, x22
  445330:	strb	w21, [x19, #264]
  445334:	b.eq	445ea0 <_obstack_memory_used@@Base+0x8e48>  // b.none
  445338:	ldrb	w21, [x20]
  44533c:	cmp	x1, #0xff
  445340:	b.ne	445318 <_obstack_memory_used@@Base+0x82c0>  // b.any
  445344:	ldp	x3, x2, [x19, #272]
  445348:	strb	wzr, [x19, #255]
  44534c:	mov	x0, x19
  445350:	blr	x3
  445354:	ldr	x2, [x19, #320]
  445358:	mov	x1, #0x1                   	// #1
  44535c:	mov	x0, #0x0                   	// #0
  445360:	add	x2, x2, x1
  445364:	str	x2, [x19, #320]
  445368:	b	445320 <_obstack_memory_used@@Base+0x82c8>
  44536c:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445370:	add	x24, x24, #0xb50
  445374:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445378:	add	x24, x24, #0xa
  44537c:	add	x22, x22, #0xb51
  445380:	mov	w23, #0x64                  	// #100
  445384:	ldr	x1, [x19, #256]
  445388:	b	4453ac <_obstack_memory_used@@Base+0x8354>
  44538c:	mov	x0, x1
  445390:	add	x1, x1, #0x1
  445394:	str	x1, [x19, #256]
  445398:	cmp	x22, x24
  44539c:	strb	w23, [x19, x0]
  4453a0:	strb	w23, [x19, #264]
  4453a4:	b.eq	445c14 <_obstack_memory_used@@Base+0x8bbc>  // b.none
  4453a8:	ldrb	w23, [x22], #1
  4453ac:	cmp	x1, #0xff
  4453b0:	b.ne	44538c <_obstack_memory_used@@Base+0x8334>  // b.any
  4453b4:	ldp	x3, x2, [x19, #272]
  4453b8:	strb	wzr, [x19, #255]
  4453bc:	mov	x0, x19
  4453c0:	blr	x3
  4453c4:	ldr	x2, [x19, #320]
  4453c8:	mov	x1, #0x1                   	// #1
  4453cc:	mov	x0, #0x0                   	// #0
  4453d0:	add	x2, x2, x1
  4453d4:	str	x2, [x19, #320]
  4453d8:	b	445394 <_obstack_memory_used@@Base+0x833c>
  4453dc:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4453e0:	add	x24, x24, #0xb78
  4453e4:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4453e8:	add	x24, x24, #0x1d
  4453ec:	add	x22, x22, #0xb79
  4453f0:	mov	w23, #0x67                  	// #103
  4453f4:	ldr	x1, [x19, #256]
  4453f8:	b	44541c <_obstack_memory_used@@Base+0x83c4>
  4453fc:	mov	x0, x1
  445400:	add	x1, x1, #0x1
  445404:	str	x1, [x19, #256]
  445408:	cmp	x22, x24
  44540c:	strb	w23, [x19, x0]
  445410:	strb	w23, [x19, #264]
  445414:	b.eq	445e58 <_obstack_memory_used@@Base+0x8e00>  // b.none
  445418:	ldrb	w23, [x22], #1
  44541c:	cmp	x1, #0xff
  445420:	b.ne	4453fc <_obstack_memory_used@@Base+0x83a4>  // b.any
  445424:	ldp	x3, x2, [x19, #272]
  445428:	strb	wzr, [x19, #255]
  44542c:	mov	x0, x19
  445430:	blr	x3
  445434:	ldr	x2, [x19, #320]
  445438:	mov	x1, #0x1                   	// #1
  44543c:	mov	x0, #0x0                   	// #0
  445440:	add	x2, x2, x1
  445444:	str	x2, [x19, #320]
  445448:	b	445404 <_obstack_memory_used@@Base+0x83ac>
  44544c:	ldrsw	x22, [x20, #16]
  445450:	ldr	x20, [x20, #8]
  445454:	tbnz	w21, #2, 445f24 <_obstack_memory_used@@Base+0x8ecc>
  445458:	cbz	x22, 447368 <_obstack_memory_used@@Base+0xa310>
  44545c:	add	x22, x20, x22
  445460:	ldr	x1, [x19, #256]
  445464:	b	445488 <_obstack_memory_used@@Base+0x8430>
  445468:	mov	x0, x1
  44546c:	add	x1, x1, #0x1
  445470:	str	x1, [x19, #256]
  445474:	add	x20, x20, #0x1
  445478:	strb	w21, [x19, x0]
  44547c:	cmp	x22, x20
  445480:	strb	w21, [x19, #264]
  445484:	b.eq	44632c <_obstack_memory_used@@Base+0x92d4>  // b.none
  445488:	ldrb	w21, [x20]
  44548c:	cmp	x1, #0xff
  445490:	b.ne	445468 <_obstack_memory_used@@Base+0x8410>  // b.any
  445494:	ldp	x3, x2, [x19, #272]
  445498:	strb	wzr, [x19, #255]
  44549c:	mov	x0, x19
  4454a0:	blr	x3
  4454a4:	ldr	x2, [x19, #320]
  4454a8:	mov	x1, #0x1                   	// #1
  4454ac:	mov	x0, #0x0                   	// #0
  4454b0:	add	x2, x2, x1
  4454b4:	str	x2, [x19, #320]
  4454b8:	b	445470 <_obstack_memory_used@@Base+0x8418>
  4454bc:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4454c0:	add	x22, x22, #0xaf0
  4454c4:	add	x24, x22, #0x9
  4454c8:	mov	w23, #0x6f                  	// #111
  4454cc:	ldr	x1, [x19, #256]
  4454d0:	b	4454f8 <_obstack_memory_used@@Base+0x84a0>
  4454d4:	mov	x0, x1
  4454d8:	add	x1, x1, #0x1
  4454dc:	str	x1, [x19, #256]
  4454e0:	add	x22, x22, #0x1
  4454e4:	strb	w23, [x19, x0]
  4454e8:	cmp	x22, x24
  4454ec:	strb	w23, [x19, #264]
  4454f0:	b.eq	445e08 <_obstack_memory_used@@Base+0x8db0>  // b.none
  4454f4:	ldrb	w23, [x22]
  4454f8:	cmp	x1, #0xff
  4454fc:	b.ne	4454d4 <_obstack_memory_used@@Base+0x847c>  // b.any
  445500:	ldp	x3, x2, [x19, #272]
  445504:	strb	wzr, [x19, #255]
  445508:	mov	x0, x19
  44550c:	blr	x3
  445510:	ldr	x2, [x19, #320]
  445514:	mov	x1, #0x1                   	// #1
  445518:	mov	x0, #0x0                   	// #0
  44551c:	add	x2, x2, x1
  445520:	str	x2, [x19, #320]
  445524:	b	4454dc <_obstack_memory_used@@Base+0x8484>
  445528:	ldr	x2, [x20, #8]
  44552c:	mov	w1, w21
  445530:	mov	x0, x19
  445534:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  445538:	ldp	x21, x22, [sp, #32]
  44553c:	ldp	x23, x24, [sp, #48]
  445540:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445544:	ldp	x22, x20, [x20, #8]
  445548:	ldr	w0, [x22]
  44554c:	cmp	w0, #0x32
  445550:	b.eq	446474 <_obstack_memory_used@@Base+0x941c>  // b.none
  445554:	cmp	w0, #0x34
  445558:	b.ne	4477bc <_obstack_memory_used@@Base+0xa764>  // b.any
  44555c:	ldr	x1, [x19, #256]
  445560:	add	x0, x1, #0x1
  445564:	cmp	x1, #0xff
  445568:	b.ne	445590 <_obstack_memory_used@@Base+0x8538>  // b.any
  44556c:	ldp	x3, x2, [x19, #272]
  445570:	strb	wzr, [x19, #255]
  445574:	mov	x0, x19
  445578:	blr	x3
  44557c:	ldr	x2, [x19, #320]
  445580:	mov	x0, #0x1                   	// #1
  445584:	mov	x1, #0x0                   	// #0
  445588:	add	x2, x2, x0
  44558c:	str	x2, [x19, #320]
  445590:	str	x0, [x19, #256]
  445594:	mov	w0, #0x28                  	// #40
  445598:	strb	w0, [x19, x1]
  44559c:	mov	w1, w21
  4455a0:	strb	w0, [x19, #264]
  4455a4:	mov	x0, x19
  4455a8:	ldr	x2, [x22, #8]
  4455ac:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4455b0:	ldr	x1, [x19, #256]
  4455b4:	add	x0, x1, #0x1
  4455b8:	cmp	x1, #0xff
  4455bc:	b.ne	4455e4 <_obstack_memory_used@@Base+0x858c>  // b.any
  4455c0:	ldp	x3, x2, [x19, #272]
  4455c4:	strb	wzr, [x19, #255]
  4455c8:	mov	x0, x19
  4455cc:	blr	x3
  4455d0:	ldr	x2, [x19, #320]
  4455d4:	mov	x0, #0x1                   	// #1
  4455d8:	mov	x1, #0x0                   	// #0
  4455dc:	add	x2, x2, x0
  4455e0:	str	x2, [x19, #320]
  4455e4:	str	x0, [x19, #256]
  4455e8:	mov	w0, #0x29                  	// #41
  4455ec:	strb	w0, [x19, x1]
  4455f0:	strb	w0, [x19, #264]
  4455f4:	mov	w1, w21
  4455f8:	mov	x2, x20
  4455fc:	mov	x0, x19
  445600:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  445604:	ldp	x21, x22, [sp, #32]
  445608:	ldp	x23, x24, [sp, #48]
  44560c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445610:	ldr	x0, [x20, #8]
  445614:	tbnz	w21, #2, 4462a0 <_obstack_memory_used@@Base+0x9248>
  445618:	ldrsw	x22, [x0, #8]
  44561c:	ldr	x20, [x0]
  445620:	cbz	x22, 447488 <_obstack_memory_used@@Base+0xa430>
  445624:	add	x22, x20, x22
  445628:	ldr	x1, [x19, #256]
  44562c:	b	445650 <_obstack_memory_used@@Base+0x85f8>
  445630:	mov	x0, x1
  445634:	add	x1, x1, #0x1
  445638:	str	x1, [x19, #256]
  44563c:	add	x20, x20, #0x1
  445640:	strb	w21, [x19, x0]
  445644:	cmp	x22, x20
  445648:	strb	w21, [x19, #264]
  44564c:	b.eq	446314 <_obstack_memory_used@@Base+0x92bc>  // b.none
  445650:	ldrb	w21, [x20]
  445654:	cmp	x1, #0xff
  445658:	b.ne	445630 <_obstack_memory_used@@Base+0x85d8>  // b.any
  44565c:	ldp	x3, x2, [x19, #272]
  445660:	strb	wzr, [x19, #255]
  445664:	mov	x0, x19
  445668:	blr	x3
  44566c:	ldr	x2, [x19, #320]
  445670:	mov	x1, #0x1                   	// #1
  445674:	mov	x0, #0x0                   	// #0
  445678:	add	x2, x2, x1
  44567c:	str	x2, [x19, #320]
  445680:	b	445638 <_obstack_memory_used@@Base+0x85e0>
  445684:	ldr	x2, [x0, #8]
  445688:	add	x0, sp, #0x60
  44568c:	ldr	x1, [x19, #288]
  445690:	stp	x4, x20, [sp, #96]
  445694:	str	wzr, [sp, #112]
  445698:	str	x1, [sp, #120]
  44569c:	str	x0, [x19, #296]
  4456a0:	cbnz	x2, 443ab8 <_obstack_memory_used@@Base+0x6a60>
  4456a4:	b	443ab4 <_obstack_memory_used@@Base+0x6a5c>
  4456a8:	ldp	x21, x22, [sp, #32]
  4456ac:	ldp	x23, x24, [sp, #48]
  4456b0:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4456b4:	ldr	x2, [x20, #16]
  4456b8:	mov	w1, w21
  4456bc:	mov	x0, x19
  4456c0:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4456c4:	ldr	x1, [x19, #256]
  4456c8:	add	x0, x1, #0x1
  4456cc:	cmp	x1, #0xff
  4456d0:	b.ne	4456f8 <_obstack_memory_used@@Base+0x86a0>  // b.any
  4456d4:	ldp	x3, x2, [x19, #272]
  4456d8:	strb	wzr, [x19, #255]
  4456dc:	mov	x0, x19
  4456e0:	blr	x3
  4456e4:	ldr	x2, [x19, #320]
  4456e8:	mov	x0, #0x1                   	// #1
  4456ec:	mov	x1, #0x0                   	// #0
  4456f0:	add	x2, x2, x0
  4456f4:	str	x2, [x19, #320]
  4456f8:	str	x0, [x19, #256]
  4456fc:	mov	w0, #0x5d                  	// #93
  445700:	strb	w0, [x19, x1]
  445704:	strb	w0, [x19, #264]
  445708:	ldp	x21, x22, [sp, #32]
  44570c:	ldp	x23, x24, [sp, #48]
  445710:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445714:	ldr	x2, [x20, #16]
  445718:	mov	w1, w21
  44571c:	mov	x0, x19
  445720:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445724:	ldp	x21, x22, [sp, #32]
  445728:	ldp	x23, x24, [sp, #48]
  44572c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445730:	ldr	x2, [x20, #8]
  445734:	mov	w1, w21
  445738:	mov	x0, x19
  44573c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445740:	ldp	x21, x22, [sp, #32]
  445744:	ldp	x23, x24, [sp, #48]
  445748:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44574c:	ldr	x2, [x20, #8]
  445750:	mov	w1, w21
  445754:	mov	x0, x19
  445758:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44575c:	ldp	x21, x22, [sp, #32]
  445760:	ldp	x23, x24, [sp, #48]
  445764:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445768:	ldr	x2, [x20, #16]
  44576c:	mov	w1, w21
  445770:	mov	x0, x19
  445774:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445778:	add	x24, x24, #0x978
  44577c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445780:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445784:	add	x24, x24, #0x5
  445788:	add	x22, x22, #0x979
  44578c:	mov	w23, #0x20                  	// #32
  445790:	ldr	x1, [x19, #256]
  445794:	b	4457b8 <_obstack_memory_used@@Base+0x8760>
  445798:	mov	x0, x1
  44579c:	add	x1, x1, #0x1
  4457a0:	str	x1, [x19, #256]
  4457a4:	cmp	x22, x24
  4457a8:	strb	w23, [x19, x0]
  4457ac:	strb	w23, [x19, #264]
  4457b0:	b.eq	445858 <_obstack_memory_used@@Base+0x8800>  // b.none
  4457b4:	ldrb	w23, [x22], #1
  4457b8:	cmp	x1, #0xff
  4457bc:	b.ne	445798 <_obstack_memory_used@@Base+0x8740>  // b.any
  4457c0:	ldp	x3, x2, [x19, #272]
  4457c4:	strb	wzr, [x19, #255]
  4457c8:	mov	x0, x19
  4457cc:	blr	x3
  4457d0:	ldr	x2, [x19, #320]
  4457d4:	mov	x1, #0x1                   	// #1
  4457d8:	mov	x0, #0x0                   	// #0
  4457dc:	add	x2, x2, x1
  4457e0:	str	x2, [x19, #320]
  4457e4:	b	4457a0 <_obstack_memory_used@@Base+0x8748>
  4457e8:	ldr	x2, [x20, #8]
  4457ec:	mov	w1, w21
  4457f0:	mov	x0, x19
  4457f4:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4457f8:	ldp	x21, x22, [sp, #32]
  4457fc:	ldp	x23, x24, [sp, #48]
  445800:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445804:	ldr	x2, [x20, #8]
  445808:	mov	w1, w21
  44580c:	mov	x0, x19
  445810:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445814:	ldp	x21, x22, [sp, #32]
  445818:	ldp	x23, x24, [sp, #48]
  44581c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445820:	ldr	x2, [x20, #8]
  445824:	mov	w1, w21
  445828:	mov	x0, x19
  44582c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445830:	ldp	x21, x22, [sp, #32]
  445834:	ldp	x23, x24, [sp, #48]
  445838:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44583c:	ldr	x2, [x20, #8]
  445840:	mov	w1, w21
  445844:	mov	x0, x19
  445848:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44584c:	ldp	x21, x22, [sp, #32]
  445850:	ldp	x23, x24, [sp, #48]
  445854:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445858:	ldr	x2, [x20, #8]
  44585c:	mov	w1, w21
  445860:	mov	x0, x19
  445864:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445868:	ldp	x21, x22, [sp, #32]
  44586c:	ldp	x23, x24, [sp, #48]
  445870:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445874:	ldr	x2, [x20, #16]
  445878:	mov	w1, w21
  44587c:	mov	x0, x19
  445880:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445884:	ldr	x1, [x19, #256]
  445888:	add	x0, x1, #0x1
  44588c:	cmp	x1, #0xff
  445890:	b.ne	4458b8 <_obstack_memory_used@@Base+0x8860>  // b.any
  445894:	ldp	x3, x2, [x19, #272]
  445898:	strb	wzr, [x19, #255]
  44589c:	mov	x0, x19
  4458a0:	blr	x3
  4458a4:	ldr	x2, [x19, #320]
  4458a8:	mov	x0, #0x1                   	// #1
  4458ac:	mov	x1, #0x0                   	// #0
  4458b0:	add	x2, x2, x0
  4458b4:	str	x2, [x19, #320]
  4458b8:	str	x0, [x19, #256]
  4458bc:	mov	w0, #0x5d                  	// #93
  4458c0:	strb	w0, [x19, x1]
  4458c4:	strb	w0, [x19, #264]
  4458c8:	ldp	x21, x22, [sp, #32]
  4458cc:	ldp	x23, x24, [sp, #48]
  4458d0:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4458d4:	ldr	x20, [x22, #8]
  4458d8:	ldrb	w0, [x20]
  4458dc:	sub	w0, w0, #0x61
  4458e0:	and	w0, w0, #0xff
  4458e4:	cmp	w0, #0x19
  4458e8:	b.hi	445930 <_obstack_memory_used@@Base+0x88d8>  // b.pmore
  4458ec:	add	x0, x1, #0x1
  4458f0:	cmp	x1, #0xff
  4458f4:	b.ne	445920 <_obstack_memory_used@@Base+0x88c8>  // b.any
  4458f8:	ldp	x3, x2, [x19, #272]
  4458fc:	strb	wzr, [x19, #255]
  445900:	mov	x0, x19
  445904:	blr	x3
  445908:	ldr	x2, [x19, #320]
  44590c:	mov	x0, #0x1                   	// #1
  445910:	mov	x1, #0x0                   	// #0
  445914:	add	x2, x2, x0
  445918:	ldr	x20, [x22, #8]
  44591c:	str	x2, [x19, #320]
  445920:	str	x0, [x19, #256]
  445924:	mov	w0, #0x20                  	// #32
  445928:	strb	w0, [x19, x1]
  44592c:	strb	w0, [x19, #264]
  445930:	sxtw	x22, w23
  445934:	sub	w0, w23, #0x1
  445938:	add	x1, x20, x22
  44593c:	sxtw	x0, w0
  445940:	ldurb	w1, [x1, #-1]
  445944:	cmp	w1, #0x20
  445948:	csel	x22, x22, x0, ne  // ne = any
  44594c:	cbz	x22, 44722c <_obstack_memory_used@@Base+0xa1d4>
  445950:	add	x22, x20, x22
  445954:	ldr	x1, [x19, #256]
  445958:	b	44597c <_obstack_memory_used@@Base+0x8924>
  44595c:	mov	x0, x1
  445960:	add	x1, x1, #0x1
  445964:	str	x1, [x19, #256]
  445968:	add	x20, x20, #0x1
  44596c:	strb	w21, [x19, x0]
  445970:	cmp	x22, x20
  445974:	strb	w21, [x19, #264]
  445978:	b.eq	445e94 <_obstack_memory_used@@Base+0x8e3c>  // b.none
  44597c:	ldrb	w21, [x20]
  445980:	cmp	x1, #0xff
  445984:	b.ne	44595c <_obstack_memory_used@@Base+0x8904>  // b.any
  445988:	ldp	x3, x2, [x19, #272]
  44598c:	strb	wzr, [x19, #255]
  445990:	mov	x0, x19
  445994:	blr	x3
  445998:	ldr	x2, [x19, #320]
  44599c:	mov	x1, #0x1                   	// #1
  4459a0:	mov	x0, #0x0                   	// #0
  4459a4:	add	x2, x2, x1
  4459a8:	str	x2, [x19, #320]
  4459ac:	b	445964 <_obstack_memory_used@@Base+0x890c>
  4459b0:	ldr	x2, [x20, #8]
  4459b4:	mov	w1, w21
  4459b8:	mov	x0, x19
  4459bc:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4459c0:	ldp	x21, x22, [sp, #32]
  4459c4:	ldp	x23, x24, [sp, #48]
  4459c8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4459cc:	ldr	x2, [x20, #8]
  4459d0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4459d4:	add	x1, x1, #0x8e0
  4459d8:	add	x20, sp, #0x60
  4459dc:	add	w2, w2, #0x1
  4459e0:	mov	x0, x20
  4459e4:	bl	4026e0 <sprintf@plt>
  4459e8:	mov	x0, x20
  4459ec:	bl	402630 <strlen@plt>
  4459f0:	ldr	x1, [x19, #256]
  4459f4:	cbz	x0, 445a54 <_obstack_memory_used@@Base+0x89fc>
  4459f8:	add	x22, x20, x0
  4459fc:	b	445a20 <_obstack_memory_used@@Base+0x89c8>
  445a00:	mov	x0, x1
  445a04:	add	x1, x1, #0x1
  445a08:	str	x1, [x19, #256]
  445a0c:	add	x20, x20, #0x1
  445a10:	strb	w21, [x19, x0]
  445a14:	cmp	x22, x20
  445a18:	strb	w21, [x19, #264]
  445a1c:	b.eq	445a54 <_obstack_memory_used@@Base+0x89fc>  // b.none
  445a20:	ldrb	w21, [x20]
  445a24:	cmp	x1, #0xff
  445a28:	b.ne	445a00 <_obstack_memory_used@@Base+0x89a8>  // b.any
  445a2c:	ldp	x3, x2, [x19, #272]
  445a30:	strb	wzr, [x19, #255]
  445a34:	mov	x0, x19
  445a38:	blr	x3
  445a3c:	ldr	x2, [x19, #320]
  445a40:	mov	x1, #0x1                   	// #1
  445a44:	mov	x0, #0x0                   	// #0
  445a48:	add	x2, x2, x1
  445a4c:	str	x2, [x19, #320]
  445a50:	b	445a08 <_obstack_memory_used@@Base+0x89b0>
  445a54:	add	x0, x1, #0x1
  445a58:	cmp	x1, #0xff
  445a5c:	b.ne	445a84 <_obstack_memory_used@@Base+0x8a2c>  // b.any
  445a60:	ldp	x3, x2, [x19, #272]
  445a64:	strb	wzr, [x19, #255]
  445a68:	mov	x0, x19
  445a6c:	blr	x3
  445a70:	ldr	x2, [x19, #320]
  445a74:	mov	x0, #0x1                   	// #1
  445a78:	mov	x1, #0x0                   	// #0
  445a7c:	add	x2, x2, x0
  445a80:	str	x2, [x19, #320]
  445a84:	str	x0, [x19, #256]
  445a88:	mov	w0, #0x7d                  	// #125
  445a8c:	strb	w0, [x19, x1]
  445a90:	strb	w0, [x19, #264]
  445a94:	ldp	x21, x22, [sp, #32]
  445a98:	ldp	x23, x24, [sp, #48]
  445a9c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445aa0:	ldr	x2, [x20, #8]
  445aa4:	mov	w1, w21
  445aa8:	mov	x0, x19
  445aac:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445ab0:	ldp	x21, x22, [sp, #32]
  445ab4:	ldp	x23, x24, [sp, #48]
  445ab8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445abc:	ldr	x2, [x20, #8]
  445ac0:	mov	w1, w21
  445ac4:	mov	x0, x19
  445ac8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445acc:	ldp	x21, x22, [sp, #32]
  445ad0:	ldp	x23, x24, [sp, #48]
  445ad4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445ad8:	ldr	w3, [x19, #312]
  445adc:	mov	w1, w21
  445ae0:	ldr	x2, [x20, #8]
  445ae4:	add	w3, w3, #0x1
  445ae8:	str	w3, [x19, #312]
  445aec:	mov	x0, x19
  445af0:	mov	w21, #0x29                  	// #41
  445af4:	mov	x22, #0x0                   	// #0
  445af8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445afc:	ldr	w0, [x19, #312]
  445b00:	ldr	x1, [x19, #256]
  445b04:	sub	w0, w0, #0x1
  445b08:	str	w0, [x19, #312]
  445b0c:	b	445b34 <_obstack_memory_used@@Base+0x8adc>
  445b10:	mov	x0, x1
  445b14:	add	x1, x1, #0x1
  445b18:	str	x1, [x19, #256]
  445b1c:	cmp	x22, #0x1
  445b20:	strb	w21, [x19, x0]
  445b24:	strb	w21, [x19, #264]
  445b28:	mov	w21, #0x23                  	// #35
  445b2c:	b.eq	445b64 <_obstack_memory_used@@Base+0x8b0c>  // b.none
  445b30:	mov	x22, #0x1                   	// #1
  445b34:	cmp	x1, #0xff
  445b38:	b.ne	445b10 <_obstack_memory_used@@Base+0x8ab8>  // b.any
  445b3c:	ldp	x3, x2, [x19, #272]
  445b40:	strb	wzr, [x19, #255]
  445b44:	mov	x0, x19
  445b48:	blr	x3
  445b4c:	ldr	x2, [x19, #320]
  445b50:	mov	x1, #0x1                   	// #1
  445b54:	mov	x0, #0x0                   	// #0
  445b58:	add	x2, x2, x1
  445b5c:	str	x2, [x19, #320]
  445b60:	b	445b18 <_obstack_memory_used@@Base+0x8ac0>
  445b64:	ldr	w2, [x20, #16]
  445b68:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445b6c:	add	x1, x1, #0x8e0
  445b70:	add	x20, sp, #0x60
  445b74:	add	w2, w2, #0x1
  445b78:	mov	x0, x20
  445b7c:	bl	4026e0 <sprintf@plt>
  445b80:	mov	x0, x20
  445b84:	bl	402630 <strlen@plt>
  445b88:	ldr	x1, [x19, #256]
  445b8c:	cbz	x0, 445bec <_obstack_memory_used@@Base+0x8b94>
  445b90:	add	x23, x20, x0
  445b94:	b	445bb8 <_obstack_memory_used@@Base+0x8b60>
  445b98:	mov	x0, x1
  445b9c:	add	x1, x1, #0x1
  445ba0:	str	x1, [x19, #256]
  445ba4:	add	x20, x20, #0x1
  445ba8:	strb	w21, [x19, x0]
  445bac:	cmp	x23, x20
  445bb0:	strb	w21, [x19, #264]
  445bb4:	b.eq	445bec <_obstack_memory_used@@Base+0x8b94>  // b.none
  445bb8:	ldrb	w21, [x20]
  445bbc:	cmp	x1, #0xff
  445bc0:	b.ne	445b98 <_obstack_memory_used@@Base+0x8b40>  // b.any
  445bc4:	ldp	x3, x2, [x19, #272]
  445bc8:	strb	wzr, [x19, #255]
  445bcc:	mov	x0, x19
  445bd0:	blr	x3
  445bd4:	ldr	x2, [x19, #320]
  445bd8:	mov	x1, #0x1                   	// #1
  445bdc:	mov	x0, #0x0                   	// #0
  445be0:	add	x2, x2, x1
  445be4:	str	x2, [x19, #320]
  445be8:	b	445ba0 <_obstack_memory_used@@Base+0x8b48>
  445bec:	cmp	x1, #0xff
  445bf0:	b.eq	446450 <_obstack_memory_used@@Base+0x93f8>  // b.none
  445bf4:	add	x22, x1, #0x1
  445bf8:	str	x22, [x19, #256]
  445bfc:	mov	w0, #0x7d                  	// #125
  445c00:	strb	w0, [x19, x1]
  445c04:	strb	w0, [x19, #264]
  445c08:	ldp	x21, x22, [sp, #32]
  445c0c:	ldp	x23, x24, [sp, #48]
  445c10:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445c14:	ldr	x2, [x20, #8]
  445c18:	mov	w1, w21
  445c1c:	mov	x0, x19
  445c20:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445c24:	ldr	x1, [x19, #256]
  445c28:	add	x0, x1, #0x1
  445c2c:	cmp	x1, #0xff
  445c30:	b.ne	445c58 <_obstack_memory_used@@Base+0x8c00>  // b.any
  445c34:	ldp	x3, x2, [x19, #272]
  445c38:	strb	wzr, [x19, #255]
  445c3c:	mov	x0, x19
  445c40:	blr	x3
  445c44:	ldr	x2, [x19, #320]
  445c48:	mov	x0, #0x1                   	// #1
  445c4c:	mov	x1, #0x0                   	// #0
  445c50:	add	x2, x2, x0
  445c54:	str	x2, [x19, #320]
  445c58:	str	x0, [x19, #256]
  445c5c:	mov	w0, #0x29                  	// #41
  445c60:	strb	w0, [x19, x1]
  445c64:	strb	w0, [x19, #264]
  445c68:	ldp	x21, x22, [sp, #32]
  445c6c:	ldp	x23, x24, [sp, #48]
  445c70:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445c74:	ldr	x2, [x20, #8]
  445c78:	mov	w1, w21
  445c7c:	mov	x0, x19
  445c80:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445c84:	ldp	x21, x22, [sp, #32]
  445c88:	ldp	x23, x24, [sp, #48]
  445c8c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445c90:	ldr	x2, [x20, #8]
  445c94:	mov	w1, w21
  445c98:	mov	x0, x19
  445c9c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445ca0:	ldp	x21, x22, [sp, #32]
  445ca4:	ldp	x23, x24, [sp, #48]
  445ca8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445cac:	ldr	x2, [x20, #8]
  445cb0:	mov	w1, w21
  445cb4:	mov	x0, x19
  445cb8:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  445cbc:	add	x22, x22, #0x968
  445cc0:	mov	w23, #0x2d                  	// #45
  445cc4:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445cc8:	add	x24, x22, #0x4
  445ccc:	ldr	x1, [x19, #256]
  445cd0:	b	445cf8 <_obstack_memory_used@@Base+0x8ca0>
  445cd4:	mov	x0, x1
  445cd8:	add	x1, x1, #0x1
  445cdc:	str	x1, [x19, #256]
  445ce0:	add	x22, x22, #0x1
  445ce4:	strb	w23, [x19, x0]
  445ce8:	cmp	x24, x22
  445cec:	strb	w23, [x19, #264]
  445cf0:	b.eq	445d60 <_obstack_memory_used@@Base+0x8d08>  // b.none
  445cf4:	ldrb	w23, [x22]
  445cf8:	cmp	x1, #0xff
  445cfc:	b.ne	445cd4 <_obstack_memory_used@@Base+0x8c7c>  // b.any
  445d00:	ldp	x3, x2, [x19, #272]
  445d04:	strb	wzr, [x19, #255]
  445d08:	mov	x0, x19
  445d0c:	blr	x3
  445d10:	ldr	x2, [x19, #320]
  445d14:	mov	x1, #0x1                   	// #1
  445d18:	mov	x0, #0x0                   	// #0
  445d1c:	add	x2, x2, x1
  445d20:	str	x2, [x19, #320]
  445d24:	b	445cdc <_obstack_memory_used@@Base+0x8c84>
  445d28:	ldr	x2, [x20, #8]
  445d2c:	mov	w1, w21
  445d30:	mov	x0, x19
  445d34:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445d38:	ldp	x21, x22, [sp, #32]
  445d3c:	ldp	x23, x24, [sp, #48]
  445d40:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445d44:	ldr	x2, [x20, #8]
  445d48:	mov	w1, w21
  445d4c:	mov	x0, x19
  445d50:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445d54:	ldp	x21, x22, [sp, #32]
  445d58:	ldp	x23, x24, [sp, #48]
  445d5c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445d60:	ldr	x2, [x20, #16]
  445d64:	mov	w1, w21
  445d68:	mov	x0, x19
  445d6c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445d70:	ldp	x21, x22, [sp, #32]
  445d74:	ldp	x23, x24, [sp, #48]
  445d78:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445d7c:	ldr	x2, [x20, #8]
  445d80:	mov	w1, w21
  445d84:	mov	x0, x19
  445d88:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445d8c:	ldp	x21, x22, [sp, #32]
  445d90:	ldp	x23, x24, [sp, #48]
  445d94:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445d98:	ldr	x2, [x20, #8]
  445d9c:	mov	w1, w21
  445da0:	mov	x0, x19
  445da4:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445da8:	ldp	x21, x22, [sp, #32]
  445dac:	ldp	x23, x24, [sp, #48]
  445db0:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445db4:	ldr	x2, [x20, #8]
  445db8:	mov	w1, w21
  445dbc:	mov	x0, x19
  445dc0:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445dc4:	ldp	x21, x22, [sp, #32]
  445dc8:	ldp	x23, x24, [sp, #48]
  445dcc:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445dd0:	ldr	x2, [x20, #8]
  445dd4:	mov	w1, w21
  445dd8:	mov	x0, x19
  445ddc:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445de0:	ldp	x21, x22, [sp, #32]
  445de4:	ldp	x23, x24, [sp, #48]
  445de8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445dec:	ldr	x2, [x20, #8]
  445df0:	mov	w1, w21
  445df4:	mov	x0, x19
  445df8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445dfc:	ldp	x21, x22, [sp, #32]
  445e00:	ldp	x23, x24, [sp, #48]
  445e04:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445e08:	ldr	x1, [x19, #368]
  445e0c:	cbz	x1, 445e20 <_obstack_memory_used@@Base+0x8dc8>
  445e10:	ldr	x2, [x19, #288]
  445e14:	add	x0, sp, #0x60
  445e18:	stp	x2, x1, [sp, #96]
  445e1c:	str	x0, [x19, #288]
  445e20:	ldr	x2, [x20, #8]
  445e24:	ldr	w0, [x2]
  445e28:	cmp	w0, #0x4
  445e2c:	b.eq	446718 <_obstack_memory_used@@Base+0x96c0>  // b.none
  445e30:	mov	x0, x19
  445e34:	mov	w1, w21
  445e38:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445e3c:	ldr	x0, [x19, #368]
  445e40:	cbz	x0, 446b34 <_obstack_memory_used@@Base+0x9adc>
  445e44:	ldr	x0, [sp, #96]
  445e48:	ldp	x21, x22, [sp, #32]
  445e4c:	ldp	x23, x24, [sp, #48]
  445e50:	str	x0, [x19, #288]
  445e54:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445e58:	ldr	x2, [x20, #8]
  445e5c:	mov	w1, w21
  445e60:	mov	x0, x19
  445e64:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445e68:	ldp	x21, x22, [sp, #32]
  445e6c:	ldp	x23, x24, [sp, #48]
  445e70:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445e74:	mov	x2, x20
  445e78:	mov	w1, w21
  445e7c:	mov	x0, x19
  445e80:	bl	447898 <_obstack_memory_used@@Base+0xa840>
  445e84:	b	443acc <_obstack_memory_used@@Base+0x6a74>
  445e88:	ldp	x21, x22, [sp, #32]
  445e8c:	ldp	x23, x24, [sp, #48]
  445e90:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445e94:	ldp	x21, x22, [sp, #32]
  445e98:	ldp	x23, x24, [sp, #48]
  445e9c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445ea0:	ldp	x21, x22, [sp, #32]
  445ea4:	ldp	x23, x24, [sp, #48]
  445ea8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445eac:	ldp	x21, x22, [sp, #32]
  445eb0:	ldp	x23, x24, [sp, #48]
  445eb4:	ldp	x25, x26, [sp, #64]
  445eb8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445ebc:	ldr	x2, [x20, #16]
  445ec0:	mov	x0, x19
  445ec4:	mov	w1, w21
  445ec8:	ldr	x20, [x19, #320]
  445ecc:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  445ed0:	ldr	x0, [x19, #320]
  445ed4:	cmp	x0, x20
  445ed8:	b.eq	446ad0 <_obstack_memory_used@@Base+0x9a78>  // b.none
  445edc:	ldp	x21, x22, [sp, #32]
  445ee0:	ldp	x23, x24, [sp, #48]
  445ee4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445ee8:	ldr	x25, [x25, #8]
  445eec:	cbz	x25, 446dc4 <_obstack_memory_used@@Base+0x9d6c>
  445ef0:	add	x3, x3, #0x20
  445ef4:	cmp	w24, #0x4
  445ef8:	b.eq	446a98 <_obstack_memory_used@@Base+0x9a40>  // b.none
  445efc:	mov	x0, x4
  445f00:	b	444d34 <_obstack_memory_used@@Base+0x7cdc>
  445f04:	ldr	x25, [x20, #8]
  445f08:	cbnz	w24, 444874 <_obstack_memory_used@@Base+0x781c>
  445f0c:	ldp	x21, x22, [sp, #32]
  445f10:	ldp	x23, x24, [sp, #48]
  445f14:	ldp	x25, x26, [sp, #64]
  445f18:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  445f1c:	mov	x20, x0
  445f20:	b	443c28 <_obstack_memory_used@@Base+0x6bd0>
  445f24:	add	x21, x20, x22
  445f28:	cmp	x21, x20
  445f2c:	b.ls	447374 <_obstack_memory_used@@Base+0xa31c>  // b.plast
  445f30:	mov	w23, #0x5f                  	// #95
  445f34:	b	445f84 <_obstack_memory_used@@Base+0x8f2c>
  445f38:	ldr	x1, [x19, #256]
  445f3c:	add	x0, x1, #0x1
  445f40:	cmp	x1, #0xff
  445f44:	b.ne	445f6c <_obstack_memory_used@@Base+0x8f14>  // b.any
  445f48:	ldp	x3, x2, [x19, #272]
  445f4c:	strb	wzr, [x19, #255]
  445f50:	mov	x0, x19
  445f54:	blr	x3
  445f58:	ldr	x2, [x19, #320]
  445f5c:	mov	x0, #0x1                   	// #1
  445f60:	mov	x1, #0x0                   	// #0
  445f64:	add	x2, x2, x0
  445f68:	str	x2, [x19, #320]
  445f6c:	str	x0, [x19, #256]
  445f70:	strb	w22, [x19, x1]
  445f74:	strb	w22, [x19, #264]
  445f78:	add	x20, x20, #0x1
  445f7c:	cmp	x21, x20
  445f80:	b.ls	446338 <_obstack_memory_used@@Base+0x92e0>  // b.plast
  445f84:	sub	x0, x21, x20
  445f88:	ldrb	w22, [x20]
  445f8c:	cmp	x0, #0x3
  445f90:	b.le	445f38 <_obstack_memory_used@@Base+0x8ee0>
  445f94:	cmp	w22, #0x5f
  445f98:	b.ne	445f38 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  445f9c:	ldrb	w0, [x20, #1]
  445fa0:	cmp	w0, #0x5f
  445fa4:	b.ne	445f38 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  445fa8:	ldrb	w0, [x20, #2]
  445fac:	cmp	w0, #0x55
  445fb0:	b.ne	445f38 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  445fb4:	add	x24, x20, #0x3
  445fb8:	cmp	x21, x24
  445fbc:	b.ls	445f38 <_obstack_memory_used@@Base+0x8ee0>  // b.plast
  445fc0:	mov	x2, #0x0                   	// #0
  445fc4:	b	445fe0 <_obstack_memory_used@@Base+0x8f88>
  445fc8:	mov	w0, w1
  445fcc:	sxtw	x0, w0
  445fd0:	add	x24, x24, #0x1
  445fd4:	add	x2, x0, x2, lsl #4
  445fd8:	cmp	x21, x24
  445fdc:	b.eq	445f38 <_obstack_memory_used@@Base+0x8ee0>  // b.none
  445fe0:	ldrb	w0, [x24]
  445fe4:	sub	w1, w0, #0x30
  445fe8:	and	w3, w1, #0xff
  445fec:	cmp	w3, #0x9
  445ff0:	b.ls	445fc8 <_obstack_memory_used@@Base+0x8f70>  // b.plast
  445ff4:	sub	w1, w0, #0x41
  445ff8:	and	w1, w1, #0xff
  445ffc:	cmp	w1, #0x5
  446000:	b.hi	447004 <_obstack_memory_used@@Base+0x9fac>  // b.pmore
  446004:	sub	w0, w0, #0x37
  446008:	b	445fcc <_obstack_memory_used@@Base+0x8f74>
  44600c:	add	x1, x20, #0x8
  446010:	mov	x0, x19
  446014:	bl	440098 <_obstack_memory_used@@Base+0x3040>
  446018:	mov	x2, x0
  44601c:	cbz	x0, 443a80 <_obstack_memory_used@@Base+0x6a28>
  446020:	ldr	w1, [x0]
  446024:	cmp	w1, #0x2f
  446028:	b.eq	447080 <_obstack_memory_used@@Base+0xa028>  // b.none
  44602c:	ldr	x20, [x19, #288]
  446030:	mov	w1, w21
  446034:	mov	x0, x19
  446038:	ldr	x3, [x20]
  44603c:	str	x3, [x19, #288]
  446040:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446044:	ldp	x21, x22, [sp, #32]
  446048:	ldp	x23, x24, [sp, #48]
  44604c:	str	x20, [x19, #288]
  446050:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446054:	ldr	x2, [x20, #8]
  446058:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  44605c:	add	x1, x1, #0x8e0
  446060:	add	x20, sp, #0x60
  446064:	add	w2, w2, #0x1
  446068:	mov	x0, x20
  44606c:	bl	4026e0 <sprintf@plt>
  446070:	mov	x0, x20
  446074:	bl	402630 <strlen@plt>
  446078:	cbz	x0, 44747c <_obstack_memory_used@@Base+0xa424>
  44607c:	add	x22, x20, x0
  446080:	ldr	x1, [x19, #256]
  446084:	b	4460a8 <_obstack_memory_used@@Base+0x9050>
  446088:	mov	x0, x1
  44608c:	add	x1, x1, #0x1
  446090:	str	x1, [x19, #256]
  446094:	add	x20, x20, #0x1
  446098:	strb	w21, [x19, x0]
  44609c:	cmp	x22, x20
  4460a0:	strb	w21, [x19, #264]
  4460a4:	b.eq	446344 <_obstack_memory_used@@Base+0x92ec>  // b.none
  4460a8:	ldrb	w21, [x20]
  4460ac:	cmp	x1, #0xff
  4460b0:	b.ne	446088 <_obstack_memory_used@@Base+0x9030>  // b.any
  4460b4:	ldp	x3, x2, [x19, #272]
  4460b8:	strb	wzr, [x19, #255]
  4460bc:	mov	x0, x19
  4460c0:	blr	x3
  4460c4:	ldr	x2, [x19, #320]
  4460c8:	mov	x1, #0x1                   	// #1
  4460cc:	mov	x0, #0x0                   	// #0
  4460d0:	add	x2, x2, x1
  4460d4:	str	x2, [x19, #320]
  4460d8:	b	446090 <_obstack_memory_used@@Base+0x9038>
  4460dc:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4460e0:	add	x20, x20, #0xb70
  4460e4:	add	x22, x20, #0x4
  4460e8:	mov	w21, #0x74                  	// #116
  4460ec:	b	446114 <_obstack_memory_used@@Base+0x90bc>
  4460f0:	mov	x0, x1
  4460f4:	add	x1, x1, #0x1
  4460f8:	str	x1, [x19, #256]
  4460fc:	add	x20, x20, #0x1
  446100:	strb	w21, [x19, x0]
  446104:	cmp	x20, x22
  446108:	strb	w21, [x19, #264]
  44610c:	b.eq	446144 <_obstack_memory_used@@Base+0x90ec>  // b.none
  446110:	ldrb	w21, [x20]
  446114:	cmp	x1, #0xff
  446118:	b.ne	4460f0 <_obstack_memory_used@@Base+0x9098>  // b.any
  44611c:	ldp	x3, x2, [x19, #272]
  446120:	strb	wzr, [x19, #255]
  446124:	mov	x0, x19
  446128:	blr	x3
  44612c:	ldr	x2, [x19, #320]
  446130:	mov	x1, #0x1                   	// #1
  446134:	mov	x0, #0x0                   	// #0
  446138:	add	x2, x2, x1
  44613c:	str	x2, [x19, #320]
  446140:	b	4460f8 <_obstack_memory_used@@Base+0x90a0>
  446144:	ldp	x21, x22, [sp, #32]
  446148:	ldp	x23, x24, [sp, #48]
  44614c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446150:	mov	w2, w23
  446154:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446158:	add	x1, x1, #0x8e0
  44615c:	add	x20, sp, #0x60
  446160:	mov	x0, x20
  446164:	bl	4026e0 <sprintf@plt>
  446168:	mov	x0, x20
  44616c:	bl	402630 <strlen@plt>
  446170:	ldr	x1, [x19, #256]
  446174:	cbz	x0, 4461d4 <_obstack_memory_used@@Base+0x917c>
  446178:	add	x22, x20, x0
  44617c:	b	4461a0 <_obstack_memory_used@@Base+0x9148>
  446180:	mov	x0, x1
  446184:	add	x1, x1, #0x1
  446188:	str	x1, [x19, #256]
  44618c:	add	x20, x20, #0x1
  446190:	strb	w21, [x19, x0]
  446194:	cmp	x20, x22
  446198:	strb	w21, [x19, #264]
  44619c:	b.eq	4461d4 <_obstack_memory_used@@Base+0x917c>  // b.none
  4461a0:	ldrb	w21, [x20]
  4461a4:	cmp	x1, #0xff
  4461a8:	b.ne	446180 <_obstack_memory_used@@Base+0x9128>  // b.any
  4461ac:	ldp	x3, x2, [x19, #272]
  4461b0:	strb	wzr, [x19, #255]
  4461b4:	mov	x0, x19
  4461b8:	blr	x3
  4461bc:	ldr	x2, [x19, #320]
  4461c0:	mov	x1, #0x1                   	// #1
  4461c4:	mov	x0, #0x0                   	// #0
  4461c8:	add	x2, x2, x1
  4461cc:	str	x2, [x19, #320]
  4461d0:	b	446188 <_obstack_memory_used@@Base+0x9130>
  4461d4:	add	x0, x1, #0x1
  4461d8:	cmp	x1, #0xff
  4461dc:	b.ne	446204 <_obstack_memory_used@@Base+0x91ac>  // b.any
  4461e0:	ldp	x3, x2, [x19, #272]
  4461e4:	strb	wzr, [x19, #255]
  4461e8:	mov	x0, x19
  4461ec:	blr	x3
  4461f0:	ldr	x2, [x19, #320]
  4461f4:	mov	x0, #0x1                   	// #1
  4461f8:	mov	x1, #0x0                   	// #0
  4461fc:	add	x2, x2, x0
  446200:	str	x2, [x19, #320]
  446204:	str	x0, [x19, #256]
  446208:	mov	w0, #0x7d                  	// #125
  44620c:	strb	w0, [x19, x1]
  446210:	strb	w0, [x19, #264]
  446214:	ldp	x21, x22, [sp, #32]
  446218:	ldp	x23, x24, [sp, #48]
  44621c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446220:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446224:	add	x20, x20, #0xad8
  446228:	add	x22, x20, #0x6
  44622c:	mov	w21, #0x5f                  	// #95
  446230:	b	446258 <_obstack_memory_used@@Base+0x9200>
  446234:	mov	x0, x1
  446238:	add	x1, x1, #0x1
  44623c:	str	x1, [x19, #256]
  446240:	add	x20, x20, #0x1
  446244:	strb	w21, [x19, x0]
  446248:	cmp	x20, x22
  44624c:	strb	w21, [x19, #264]
  446250:	b.eq	446288 <_obstack_memory_used@@Base+0x9230>  // b.none
  446254:	ldrb	w21, [x20]
  446258:	cmp	x1, #0xff
  44625c:	b.ne	446234 <_obstack_memory_used@@Base+0x91dc>  // b.any
  446260:	ldp	x3, x2, [x19, #272]
  446264:	strb	wzr, [x19, #255]
  446268:	mov	x0, x19
  44626c:	blr	x3
  446270:	ldr	x2, [x19, #320]
  446274:	mov	x1, #0x1                   	// #1
  446278:	mov	x0, #0x0                   	// #0
  44627c:	add	x2, x2, x1
  446280:	str	x2, [x19, #320]
  446284:	b	44623c <_obstack_memory_used@@Base+0x91e4>
  446288:	ldp	x21, x22, [sp, #32]
  44628c:	ldp	x23, x24, [sp, #48]
  446290:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446294:	ldp	x21, x22, [sp, #32]
  446298:	ldp	x23, x24, [sp, #48]
  44629c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4462a0:	ldrsw	x22, [x0, #24]
  4462a4:	ldr	x20, [x0, #16]
  4462a8:	cbz	x22, 44735c <_obstack_memory_used@@Base+0xa304>
  4462ac:	add	x22, x20, x22
  4462b0:	ldr	x1, [x19, #256]
  4462b4:	b	4462d8 <_obstack_memory_used@@Base+0x9280>
  4462b8:	mov	x0, x1
  4462bc:	add	x1, x1, #0x1
  4462c0:	str	x1, [x19, #256]
  4462c4:	add	x20, x20, #0x1
  4462c8:	strb	w21, [x19, x0]
  4462cc:	cmp	x20, x22
  4462d0:	strb	w21, [x19, #264]
  4462d4:	b.eq	446320 <_obstack_memory_used@@Base+0x92c8>  // b.none
  4462d8:	ldrb	w21, [x20]
  4462dc:	cmp	x1, #0xff
  4462e0:	b.ne	4462b8 <_obstack_memory_used@@Base+0x9260>  // b.any
  4462e4:	ldp	x3, x2, [x19, #272]
  4462e8:	strb	wzr, [x19, #255]
  4462ec:	mov	x0, x19
  4462f0:	blr	x3
  4462f4:	ldr	x2, [x19, #320]
  4462f8:	mov	x1, #0x1                   	// #1
  4462fc:	mov	x0, #0x0                   	// #0
  446300:	add	x2, x2, x1
  446304:	str	x2, [x19, #320]
  446308:	b	4462c0 <_obstack_memory_used@@Base+0x9268>
  44630c:	ldr	x1, [x19, #256]
  446310:	b	444528 <_obstack_memory_used@@Base+0x74d0>
  446314:	ldp	x21, x22, [sp, #32]
  446318:	ldp	x23, x24, [sp, #48]
  44631c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446320:	ldp	x21, x22, [sp, #32]
  446324:	ldp	x23, x24, [sp, #48]
  446328:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44632c:	ldp	x21, x22, [sp, #32]
  446330:	ldp	x23, x24, [sp, #48]
  446334:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446338:	ldp	x21, x22, [sp, #32]
  44633c:	ldp	x23, x24, [sp, #48]
  446340:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446344:	ldp	x21, x22, [sp, #32]
  446348:	ldp	x23, x24, [sp, #48]
  44634c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446350:	ldr	x1, [x2, #8]
  446354:	ldr	w22, [x1, #28]
  446358:	cmp	w22, #0x6
  44635c:	b.hi	4463f4 <_obstack_memory_used@@Base+0x939c>  // b.pmore
  446360:	cbz	w22, 443b44 <_obstack_memory_used@@Base+0x6aec>
  446364:	ldr	x1, [x20, #16]
  446368:	ldr	w1, [x1]
  44636c:	cbnz	w1, 443b44 <_obstack_memory_used@@Base+0x6aec>
  446370:	cmp	w0, #0x3e
  446374:	b.eq	4476f8 <_obstack_memory_used@@Base+0xa6a0>  // b.none
  446378:	ldr	x2, [x20, #16]
  44637c:	mov	w1, w21
  446380:	mov	x0, x19
  446384:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446388:	cmp	w22, #0x4
  44638c:	b.eq	4476d8 <_obstack_memory_used@@Base+0xa680>  // b.none
  446390:	b.hi	44759c <_obstack_memory_used@@Base+0xa544>  // b.pmore
  446394:	cmp	w22, #0x2
  446398:	b.eq	447688 <_obstack_memory_used@@Base+0xa630>  // b.none
  44639c:	cmp	w22, #0x3
  4463a0:	b.ne	4477d0 <_obstack_memory_used@@Base+0xa778>  // b.any
  4463a4:	ldr	x1, [x19, #256]
  4463a8:	cmp	x1, #0xff
  4463ac:	b.ne	4463d4 <_obstack_memory_used@@Base+0x937c>  // b.any
  4463b0:	ldp	x3, x2, [x19, #272]
  4463b4:	strb	wzr, [x19, #255]
  4463b8:	mov	x0, x19
  4463bc:	blr	x3
  4463c0:	str	xzr, [x19, #256]
  4463c4:	ldr	x0, [x19, #320]
  4463c8:	mov	x1, #0x0                   	// #0
  4463cc:	add	x0, x0, #0x1
  4463d0:	str	x0, [x19, #320]
  4463d4:	add	x0, x1, #0x1
  4463d8:	str	x0, [x19, #256]
  4463dc:	mov	w0, #0x6c                  	// #108
  4463e0:	strb	w0, [x19, x1]
  4463e4:	strb	w0, [x19, #264]
  4463e8:	ldp	x21, x22, [sp, #32]
  4463ec:	ldp	x23, x24, [sp, #48]
  4463f0:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4463f4:	cmp	w22, #0x7
  4463f8:	b.ne	443b44 <_obstack_memory_used@@Base+0x6aec>  // b.any
  4463fc:	ldr	x1, [x20, #16]
  446400:	ldr	w3, [x1]
  446404:	cbnz	w3, 443b44 <_obstack_memory_used@@Base+0x6aec>
  446408:	ldr	w3, [x1, #16]
  44640c:	cmp	w0, #0x3d
  446410:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  446414:	b.ne	443b44 <_obstack_memory_used@@Base+0x6aec>  // b.any
  446418:	ldr	x0, [x1, #8]
  44641c:	ldrb	w0, [x0]
  446420:	cmp	w0, #0x30
  446424:	b.eq	4477dc <_obstack_memory_used@@Base+0xa784>  // b.none
  446428:	cmp	w0, #0x31
  44642c:	b.ne	443b44 <_obstack_memory_used@@Base+0x6aec>  // b.any
  446430:	mov	x0, x19
  446434:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446438:	mov	x2, #0x4                   	// #4
  44643c:	add	x1, x1, #0xb38
  446440:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  446444:	ldp	x21, x22, [sp, #32]
  446448:	ldp	x23, x24, [sp, #48]
  44644c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446450:	ldp	x3, x2, [x19, #272]
  446454:	strb	wzr, [x19, #255]
  446458:	mov	x0, x19
  44645c:	blr	x3
  446460:	ldr	x0, [x19, #320]
  446464:	mov	x1, #0x0                   	// #0
  446468:	add	x0, x0, #0x1
  44646c:	str	x0, [x19, #320]
  446470:	b	445bf8 <_obstack_memory_used@@Base+0x8ba0>
  446474:	ldr	x0, [x22, #8]
  446478:	ldr	x23, [x0]
  44647c:	ldrb	w0, [x23]
  446480:	subs	w1, w0, #0x61
  446484:	b.ne	446498 <_obstack_memory_used@@Base+0x9440>  // b.any
  446488:	ldrb	w1, [x23, #1]
  44648c:	subs	w1, w1, #0x64
  446490:	b.ne	446498 <_obstack_memory_used@@Base+0x9440>  // b.any
  446494:	ldrb	w1, [x23, #2]
  446498:	ldr	w2, [x20]
  44649c:	cbnz	w1, 4464a8 <_obstack_memory_used@@Base+0x9450>
  4464a0:	cmp	w2, #0x3
  4464a4:	b.eq	4474a0 <_obstack_memory_used@@Base+0xa448>  // b.none
  4464a8:	cmp	w2, #0x39
  4464ac:	b.eq	447548 <_obstack_memory_used@@Base+0xa4f0>  // b.none
  4464b0:	cmp	w0, #0x73
  4464b4:	b.ne	446584 <_obstack_memory_used@@Base+0x952c>  // b.any
  4464b8:	ldrb	w1, [x23, #1]
  4464bc:	cmp	w1, #0x5a
  4464c0:	b.ne	4465d0 <_obstack_memory_used@@Base+0x9578>  // b.any
  4464c4:	ldrb	w3, [x23, #2]
  4464c8:	cbnz	w3, 4465d0 <_obstack_memory_used@@Base+0x9578>
  4464cc:	mov	x1, x20
  4464d0:	mov	x0, x19
  4464d4:	bl	4400c8 <_obstack_memory_used@@Base+0x3070>
  4464d8:	cbnz	x0, 4464f4 <_obstack_memory_used@@Base+0x949c>
  4464dc:	b	446500 <_obstack_memory_used@@Base+0x94a8>
  4464e0:	ldr	x1, [x0, #8]
  4464e4:	cbz	x1, 446500 <_obstack_memory_used@@Base+0x94a8>
  4464e8:	ldr	x0, [x0, #16]
  4464ec:	add	w3, w3, #0x1
  4464f0:	cbz	x0, 446500 <_obstack_memory_used@@Base+0x94a8>
  4464f4:	ldr	w1, [x0]
  4464f8:	cmp	w1, #0x2f
  4464fc:	b.eq	4464e0 <_obstack_memory_used@@Base+0x9488>  // b.none
  446500:	mov	w2, w3
  446504:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446508:	add	x1, x1, #0x8e0
  44650c:	add	x20, sp, #0x60
  446510:	mov	x0, x20
  446514:	bl	4026e0 <sprintf@plt>
  446518:	mov	x0, x20
  44651c:	bl	402630 <strlen@plt>
  446520:	cbz	x0, 447654 <_obstack_memory_used@@Base+0xa5fc>
  446524:	add	x22, x20, x0
  446528:	ldr	x1, [x19, #256]
  44652c:	b	446550 <_obstack_memory_used@@Base+0x94f8>
  446530:	mov	x0, x1
  446534:	add	x1, x1, #0x1
  446538:	str	x1, [x19, #256]
  44653c:	add	x20, x20, #0x1
  446540:	strb	w21, [x19, x0]
  446544:	cmp	x20, x22
  446548:	strb	w21, [x19, #264]
  44654c:	b.eq	447458 <_obstack_memory_used@@Base+0xa400>  // b.none
  446550:	ldrb	w21, [x20]
  446554:	cmp	x1, #0xff
  446558:	b.ne	446530 <_obstack_memory_used@@Base+0x94d8>  // b.any
  44655c:	ldp	x3, x2, [x19, #272]
  446560:	strb	wzr, [x19, #255]
  446564:	mov	x0, x19
  446568:	blr	x3
  44656c:	ldr	x2, [x19, #320]
  446570:	mov	x1, #0x1                   	// #1
  446574:	mov	x0, #0x0                   	// #0
  446578:	add	x2, x2, x1
  44657c:	str	x2, [x19, #320]
  446580:	b	446538 <_obstack_memory_used@@Base+0x94e0>
  446584:	mov	x0, x19
  446588:	mov	x2, x22
  44658c:	mov	w1, w21
  446590:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  446594:	ldrb	w0, [x23]
  446598:	cmp	w0, #0x67
  44659c:	b.ne	446660 <_obstack_memory_used@@Base+0x9608>  // b.any
  4465a0:	ldrb	w1, [x23, #1]
  4465a4:	cmp	w1, #0x73
  4465a8:	b.ne	446660 <_obstack_memory_used@@Base+0x9608>  // b.any
  4465ac:	ldrb	w1, [x23, #2]
  4465b0:	cbnz	w1, 446660 <_obstack_memory_used@@Base+0x9608>
  4465b4:	mov	w1, w21
  4465b8:	mov	x2, x20
  4465bc:	mov	x0, x19
  4465c0:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4465c4:	ldp	x21, x22, [sp, #32]
  4465c8:	ldp	x23, x24, [sp, #48]
  4465cc:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4465d0:	cmp	w0, #0x73
  4465d4:	b.ne	446584 <_obstack_memory_used@@Base+0x952c>  // b.any
  4465d8:	ldrb	w0, [x23, #1]
  4465dc:	cmp	w0, #0x50
  4465e0:	b.ne	446584 <_obstack_memory_used@@Base+0x952c>  // b.any
  4465e4:	ldrb	w0, [x23, #2]
  4465e8:	mov	w3, #0x0                   	// #0
  4465ec:	cbz	w0, 446600 <_obstack_memory_used@@Base+0x95a8>
  4465f0:	b	446584 <_obstack_memory_used@@Base+0x952c>
  4465f4:	add	w3, w3, #0x1
  4465f8:	ldr	x20, [x20, #16]
  4465fc:	cbz	x20, 4470c4 <_obstack_memory_used@@Base+0xa06c>
  446600:	ldr	w0, [x20]
  446604:	cmp	w0, #0x2f
  446608:	b.ne	4470c4 <_obstack_memory_used@@Base+0xa06c>  // b.any
  44660c:	ldr	x0, [x20, #8]
  446610:	cbz	x0, 4470c4 <_obstack_memory_used@@Base+0xa06c>
  446614:	ldr	w1, [x0]
  446618:	cmp	w1, #0x4b
  44661c:	b.ne	4465f4 <_obstack_memory_used@@Base+0x959c>  // b.any
  446620:	ldr	x1, [x0, #8]
  446624:	mov	x0, x19
  446628:	bl	4400c8 <_obstack_memory_used@@Base+0x3070>
  44662c:	mov	w1, #0x0                   	// #0
  446630:	cbnz	x0, 44664c <_obstack_memory_used@@Base+0x95f4>
  446634:	b	446658 <_obstack_memory_used@@Base+0x9600>
  446638:	ldr	x2, [x0, #8]
  44663c:	cbz	x2, 446658 <_obstack_memory_used@@Base+0x9600>
  446640:	ldr	x0, [x0, #16]
  446644:	add	w1, w1, #0x1
  446648:	cbz	x0, 446658 <_obstack_memory_used@@Base+0x9600>
  44664c:	ldr	w2, [x0]
  446650:	cmp	w2, #0x2f
  446654:	b.eq	446638 <_obstack_memory_used@@Base+0x95e0>  // b.none
  446658:	add	w3, w3, w1
  44665c:	b	4465f8 <_obstack_memory_used@@Base+0x95a0>
  446660:	cmp	w0, #0x73
  446664:	b.ne	4455f4 <_obstack_memory_used@@Base+0x859c>  // b.any
  446668:	ldrb	w0, [x23, #1]
  44666c:	cmp	w0, #0x74
  446670:	b.ne	4455f4 <_obstack_memory_used@@Base+0x859c>  // b.any
  446674:	ldrb	w0, [x23, #2]
  446678:	cbnz	w0, 4455f4 <_obstack_memory_used@@Base+0x859c>
  44667c:	ldr	x1, [x19, #256]
  446680:	cmp	x1, #0xff
  446684:	b.ne	4466a8 <_obstack_memory_used@@Base+0x9650>  // b.any
  446688:	ldp	x3, x2, [x19, #272]
  44668c:	strb	wzr, [x19, #255]
  446690:	mov	x0, x19
  446694:	blr	x3
  446698:	ldr	x0, [x19, #320]
  44669c:	mov	x1, #0x0                   	// #0
  4466a0:	add	x0, x0, #0x1
  4466a4:	str	x0, [x19, #320]
  4466a8:	add	x0, x1, #0x1
  4466ac:	str	x0, [x19, #256]
  4466b0:	mov	w0, #0x28                  	// #40
  4466b4:	strb	w0, [x19, x1]
  4466b8:	strb	w0, [x19, #264]
  4466bc:	mov	w1, w21
  4466c0:	mov	x2, x20
  4466c4:	mov	x0, x19
  4466c8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4466cc:	ldr	x1, [x19, #256]
  4466d0:	cmp	x1, #0xff
  4466d4:	b.ne	4466f8 <_obstack_memory_used@@Base+0x96a0>  // b.any
  4466d8:	ldp	x3, x2, [x19, #272]
  4466dc:	strb	wzr, [x19, #255]
  4466e0:	mov	x0, x19
  4466e4:	blr	x3
  4466e8:	ldr	x0, [x19, #320]
  4466ec:	mov	x1, #0x0                   	// #0
  4466f0:	add	x0, x0, #0x1
  4466f4:	str	x0, [x19, #320]
  4466f8:	add	x0, x1, #0x1
  4466fc:	str	x0, [x19, #256]
  446700:	mov	w0, #0x29                  	// #41
  446704:	strb	w0, [x19, x1]
  446708:	strb	w0, [x19, #264]
  44670c:	ldp	x21, x22, [sp, #32]
  446710:	ldp	x23, x24, [sp, #48]
  446714:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446718:	ldr	x2, [x2, #8]
  44671c:	mov	x0, x19
  446720:	mov	w1, w21
  446724:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446728:	ldr	x0, [x19, #368]
  44672c:	cbz	x0, 446738 <_obstack_memory_used@@Base+0x96e0>
  446730:	ldr	x0, [sp, #96]
  446734:	str	x0, [x19, #288]
  446738:	ldr	x1, [x19, #256]
  44673c:	ldrb	w2, [x19, #264]
  446740:	mov	x0, x1
  446744:	cmp	w2, #0x3c
  446748:	b.eq	4471a0 <_obstack_memory_used@@Base+0xa148>  // b.none
  44674c:	add	x1, x0, #0x1
  446750:	cmp	x0, #0xff
  446754:	b.ne	446780 <_obstack_memory_used@@Base+0x9728>  // b.any
  446758:	ldp	x3, x2, [x19, #272]
  44675c:	strb	wzr, [x19, #255]
  446760:	mov	x1, x0
  446764:	mov	x0, x19
  446768:	blr	x3
  44676c:	ldr	x2, [x19, #320]
  446770:	mov	x1, #0x1                   	// #1
  446774:	mov	x0, #0x0                   	// #0
  446778:	add	x2, x2, x1
  44677c:	str	x2, [x19, #320]
  446780:	str	x1, [x19, #256]
  446784:	mov	w2, #0x3c                  	// #60
  446788:	strb	w2, [x19, x0]
  44678c:	mov	w1, w21
  446790:	strb	w2, [x19, #264]
  446794:	mov	x0, x19
  446798:	ldr	x2, [x20, #8]
  44679c:	ldr	x2, [x2, #16]
  4467a0:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4467a4:	ldrb	w0, [x19, #264]
  4467a8:	cmp	w0, #0x3e
  4467ac:	b.eq	4471e4 <_obstack_memory_used@@Base+0xa18c>  // b.none
  4467b0:	ldr	x0, [x19, #256]
  4467b4:	add	x1, x0, #0x1
  4467b8:	cmp	x0, #0xff
  4467bc:	b.ne	4467e8 <_obstack_memory_used@@Base+0x9790>  // b.any
  4467c0:	ldp	x3, x2, [x19, #272]
  4467c4:	strb	wzr, [x19, #255]
  4467c8:	mov	x1, x0
  4467cc:	mov	x0, x19
  4467d0:	blr	x3
  4467d4:	ldr	x2, [x19, #320]
  4467d8:	mov	x1, #0x1                   	// #1
  4467dc:	mov	x0, #0x0                   	// #0
  4467e0:	add	x2, x2, x1
  4467e4:	str	x2, [x19, #320]
  4467e8:	str	x1, [x19, #256]
  4467ec:	mov	w1, #0x3e                  	// #62
  4467f0:	strb	w1, [x19, x0]
  4467f4:	strb	w1, [x19, #264]
  4467f8:	ldp	x21, x22, [sp, #32]
  4467fc:	ldp	x23, x24, [sp, #48]
  446800:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446804:	mov	x2, x20
  446808:	mov	w1, w21
  44680c:	mov	x0, x19
  446810:	bl	447898 <_obstack_memory_used@@Base+0xa840>
  446814:	b	443cf8 <_obstack_memory_used@@Base+0x6ca0>
  446818:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  44681c:	add	x24, x24, #0xac8
  446820:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446824:	add	x24, x24, #0x5
  446828:	add	x22, x22, #0xac9
  44682c:	mov	w23, #0x5f                  	// #95
  446830:	ldr	x1, [x19, #256]
  446834:	b	446858 <_obstack_memory_used@@Base+0x9800>
  446838:	mov	x0, x1
  44683c:	add	x1, x1, #0x1
  446840:	str	x1, [x19, #256]
  446844:	cmp	x24, x22
  446848:	strb	w23, [x19, x0]
  44684c:	strb	w23, [x19, #264]
  446850:	b.eq	4444b8 <_obstack_memory_used@@Base+0x7460>  // b.none
  446854:	ldrb	w23, [x22], #1
  446858:	cmp	x1, #0xff
  44685c:	b.ne	446838 <_obstack_memory_used@@Base+0x97e0>  // b.any
  446860:	ldp	x3, x2, [x19, #272]
  446864:	strb	wzr, [x19, #255]
  446868:	mov	x0, x19
  44686c:	blr	x3
  446870:	ldr	x2, [x19, #320]
  446874:	mov	x1, #0x1                   	// #1
  446878:	mov	x0, #0x0                   	// #0
  44687c:	add	x2, x2, x1
  446880:	str	x2, [x19, #320]
  446884:	b	446840 <_obstack_memory_used@@Base+0x97e8>
  446888:	mov	x23, #0x0                   	// #0
  44688c:	mov	w22, #0x3a                  	// #58
  446890:	ldr	x1, [x19, #256]
  446894:	b	4468b4 <_obstack_memory_used@@Base+0x985c>
  446898:	mov	x0, x1
  44689c:	add	x1, x1, #0x1
  4468a0:	str	x1, [x19, #256]
  4468a4:	strb	w22, [x19, x0]
  4468a8:	strb	w22, [x19, #264]
  4468ac:	cbnz	x23, 443c9c <_obstack_memory_used@@Base+0x6c44>
  4468b0:	mov	x23, #0x1                   	// #1
  4468b4:	cmp	x1, #0xff
  4468b8:	b.ne	446898 <_obstack_memory_used@@Base+0x9840>  // b.any
  4468bc:	ldp	x3, x2, [x19, #272]
  4468c0:	strb	wzr, [x19, #255]
  4468c4:	mov	x0, x19
  4468c8:	blr	x3
  4468cc:	ldr	x2, [x19, #320]
  4468d0:	mov	x1, #0x1                   	// #1
  4468d4:	mov	x0, #0x0                   	// #0
  4468d8:	add	x2, x2, x1
  4468dc:	str	x2, [x19, #320]
  4468e0:	b	4468a0 <_obstack_memory_used@@Base+0x9848>
  4468e4:	ldr	x1, [x19, #256]
  4468e8:	cmp	x1, #0xff
  4468ec:	b.ne	446910 <_obstack_memory_used@@Base+0x98b8>  // b.any
  4468f0:	ldp	x3, x2, [x19, #272]
  4468f4:	strb	wzr, [x19, #255]
  4468f8:	mov	x0, x19
  4468fc:	blr	x3
  446900:	ldr	x0, [x19, #320]
  446904:	mov	x1, #0x0                   	// #0
  446908:	add	x0, x0, #0x1
  44690c:	str	x0, [x19, #320]
  446910:	add	x0, x1, #0x1
  446914:	str	x0, [x19, #256]
  446918:	mov	w0, #0x5b                  	// #91
  44691c:	strb	w0, [x19, x1]
  446920:	strb	w0, [x19, #264]
  446924:	mov	w1, w21
  446928:	mov	x0, x19
  44692c:	ldr	x2, [x20, #16]
  446930:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446934:	ldr	x1, [x19, #256]
  446938:	cmp	x1, #0xff
  44693c:	b.ne	446960 <_obstack_memory_used@@Base+0x9908>  // b.any
  446940:	ldp	x3, x2, [x19, #272]
  446944:	strb	wzr, [x19, #255]
  446948:	mov	x0, x19
  44694c:	blr	x3
  446950:	ldr	x0, [x19, #320]
  446954:	mov	x1, #0x0                   	// #0
  446958:	add	x0, x0, #0x1
  44695c:	str	x0, [x19, #320]
  446960:	add	x0, x1, #0x1
  446964:	str	x0, [x19, #256]
  446968:	mov	w0, #0x5d                  	// #93
  44696c:	strb	w0, [x19, x1]
  446970:	strb	w0, [x19, #264]
  446974:	ldp	x21, x22, [sp, #32]
  446978:	ldp	x23, x24, [sp, #48]
  44697c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446980:	ldr	x0, [x19, #256]
  446984:	cmp	x0, #0xff
  446988:	b.ne	4469b0 <_obstack_memory_used@@Base+0x9958>  // b.any
  44698c:	ldp	x3, x2, [x19, #272]
  446990:	strb	wzr, [x19, #255]
  446994:	mov	x1, x0
  446998:	mov	x0, x19
  44699c:	blr	x3
  4469a0:	ldr	x1, [x19, #320]
  4469a4:	mov	x0, #0x0                   	// #0
  4469a8:	add	x1, x1, #0x1
  4469ac:	str	x1, [x19, #320]
  4469b0:	add	x1, x0, #0x1
  4469b4:	str	x1, [x19, #256]
  4469b8:	mov	w2, #0x20                  	// #32
  4469bc:	strb	w2, [x19, x0]
  4469c0:	strb	w2, [x19, #264]
  4469c4:	b	444ee8 <_obstack_memory_used@@Base+0x7e90>
  4469c8:	ldr	x0, [x19, #256]
  4469cc:	cmp	x0, #0xff
  4469d0:	b.ne	4469f8 <_obstack_memory_used@@Base+0x99a0>  // b.any
  4469d4:	ldp	x3, x2, [x19, #272]
  4469d8:	strb	wzr, [x19, #255]
  4469dc:	mov	x1, x0
  4469e0:	mov	x0, x19
  4469e4:	blr	x3
  4469e8:	ldr	x1, [x19, #320]
  4469ec:	mov	x0, #0x0                   	// #0
  4469f0:	add	x1, x1, #0x1
  4469f4:	str	x1, [x19, #320]
  4469f8:	add	x1, x0, #0x1
  4469fc:	str	x1, [x19, #256]
  446a00:	mov	w2, #0x20                  	// #32
  446a04:	strb	w2, [x19, x0]
  446a08:	strb	w2, [x19, #264]
  446a0c:	b	444e88 <_obstack_memory_used@@Base+0x7e30>
  446a10:	add	x2, x20, #0x10
  446a14:	mov	w1, w22
  446a18:	mov	x0, x19
  446a1c:	bl	448098 <_obstack_memory_used@@Base+0xb040>
  446a20:	ldr	x2, [x20, #8]
  446a24:	cbz	x2, 447250 <_obstack_memory_used@@Base+0xa1f8>
  446a28:	mov	w1, w22
  446a2c:	mov	x0, x19
  446a30:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446a34:	ldp	x21, x22, [sp, #32]
  446a38:	ldp	x23, x24, [sp, #48]
  446a3c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446a40:	ldp	x3, x2, [x19, #272]
  446a44:	strb	wzr, [x19, #255]
  446a48:	mov	x0, x19
  446a4c:	blr	x3
  446a50:	ldr	x0, [x19, #320]
  446a54:	mov	w1, #0x29                  	// #41
  446a58:	strb	w1, [x19]
  446a5c:	strb	w1, [x19, #264]
  446a60:	mov	x1, #0x1                   	// #1
  446a64:	add	x0, x0, x1
  446a68:	str	x1, [x19, #256]
  446a6c:	str	x0, [x19, #320]
  446a70:	ldr	w0, [x20]
  446a74:	cmp	w0, #0x3e
  446a78:	b.ne	443bc4 <_obstack_memory_used@@Base+0x6b6c>  // b.any
  446a7c:	ldr	x1, [x19, #256]
  446a80:	mov	w0, #0x2d                  	// #45
  446a84:	add	x2, x1, #0x1
  446a88:	str	x2, [x19, #256]
  446a8c:	strb	w0, [x19, x1]
  446a90:	strb	w0, [x19, #264]
  446a94:	b	443bc4 <_obstack_memory_used@@Base+0x6b6c>
  446a98:	ldp	x21, x22, [sp, #32]
  446a9c:	ldp	x23, x24, [sp, #48]
  446aa0:	ldp	x25, x26, [sp, #64]
  446aa4:	str	x4, [x19, #296]
  446aa8:	str	w1, [x19, #304]
  446aac:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446ab0:	ldp	x21, x22, [sp, #32]
  446ab4:	ldp	x23, x24, [sp, #48]
  446ab8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446abc:	ldp	x21, x22, [sp, #32]
  446ac0:	ldp	x23, x24, [sp, #48]
  446ac4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446ac8:	mov	w22, #0x0                   	// #0
  446acc:	b	443c28 <_obstack_memory_used@@Base+0x6bd0>
  446ad0:	ldr	x0, [x19, #256]
  446ad4:	cmp	x0, x22
  446ad8:	b.eq	44728c <_obstack_memory_used@@Base+0xa234>  // b.none
  446adc:	ldp	x21, x22, [sp, #32]
  446ae0:	ldp	x23, x24, [sp, #48]
  446ae4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446ae8:	ldr	x2, [x20, #8]
  446aec:	mov	w1, w21
  446af0:	mov	x0, x19
  446af4:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446af8:	ldp	x21, x22, [sp, #32]
  446afc:	ldp	x23, x24, [sp, #48]
  446b00:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446b04:	cmp	x3, #0xff
  446b08:	b.ne	446a7c <_obstack_memory_used@@Base+0x9a24>  // b.any
  446b0c:	ldp	x4, x2, [x19, #272]
  446b10:	strb	wzr, [x19, #255]
  446b14:	mov	x0, x19
  446b18:	mov	x1, x3
  446b1c:	blr	x4
  446b20:	str	xzr, [x19, #256]
  446b24:	ldr	x0, [x19, #320]
  446b28:	add	x0, x0, #0x1
  446b2c:	str	x0, [x19, #320]
  446b30:	b	446a7c <_obstack_memory_used@@Base+0x9a24>
  446b34:	ldp	x21, x22, [sp, #32]
  446b38:	ldp	x23, x24, [sp, #48]
  446b3c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446b40:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446b44:	add	x24, x24, #0x8d0
  446b48:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446b4c:	add	x24, x24, #0xd
  446b50:	add	x22, x22, #0x8d1
  446b54:	mov	w20, #0x7b                  	// #123
  446b58:	ldr	x1, [x19, #256]
  446b5c:	b	446b80 <_obstack_memory_used@@Base+0x9b28>
  446b60:	mov	x0, x1
  446b64:	add	x1, x1, #0x1
  446b68:	str	x1, [x19, #256]
  446b6c:	cmp	x24, x22
  446b70:	strb	w20, [x19, x0]
  446b74:	strb	w20, [x19, #264]
  446b78:	b.eq	446bb0 <_obstack_memory_used@@Base+0x9b58>  // b.none
  446b7c:	ldrb	w20, [x22], #1
  446b80:	cmp	x1, #0xff
  446b84:	b.ne	446b60 <_obstack_memory_used@@Base+0x9b08>  // b.any
  446b88:	ldp	x3, x2, [x19, #272]
  446b8c:	strb	wzr, [x19, #255]
  446b90:	mov	x0, x19
  446b94:	blr	x3
  446b98:	ldr	x2, [x19, #320]
  446b9c:	mov	x1, #0x1                   	// #1
  446ba0:	mov	x0, #0x0                   	// #0
  446ba4:	add	x2, x2, x1
  446ba8:	str	x2, [x19, #320]
  446bac:	b	446b68 <_obstack_memory_used@@Base+0x9b10>
  446bb0:	ldr	w2, [x23, #16]
  446bb4:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446bb8:	add	x1, x1, #0x8e0
  446bbc:	add	x20, sp, #0x60
  446bc0:	add	w2, w2, #0x1
  446bc4:	mov	x0, x20
  446bc8:	bl	4026e0 <sprintf@plt>
  446bcc:	mov	x0, x20
  446bd0:	bl	402630 <strlen@plt>
  446bd4:	ldr	x1, [x19, #256]
  446bd8:	cbz	x0, 446c38 <_obstack_memory_used@@Base+0x9be0>
  446bdc:	add	x24, x20, x0
  446be0:	b	446c04 <_obstack_memory_used@@Base+0x9bac>
  446be4:	mov	x0, x1
  446be8:	add	x1, x1, #0x1
  446bec:	str	x1, [x19, #256]
  446bf0:	add	x20, x20, #0x1
  446bf4:	strb	w22, [x19, x0]
  446bf8:	cmp	x24, x20
  446bfc:	strb	w22, [x19, #264]
  446c00:	b.eq	446c38 <_obstack_memory_used@@Base+0x9be0>  // b.none
  446c04:	ldrb	w22, [x20]
  446c08:	cmp	x1, #0xff
  446c0c:	b.ne	446be4 <_obstack_memory_used@@Base+0x9b8c>  // b.any
  446c10:	ldp	x3, x2, [x19, #272]
  446c14:	strb	wzr, [x19, #255]
  446c18:	mov	x0, x19
  446c1c:	blr	x3
  446c20:	ldr	x2, [x19, #320]
  446c24:	mov	x1, #0x1                   	// #1
  446c28:	mov	x0, #0x0                   	// #0
  446c2c:	add	x2, x2, x1
  446c30:	str	x2, [x19, #320]
  446c34:	b	446bec <_obstack_memory_used@@Base+0x9b94>
  446c38:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446c3c:	add	x20, x20, #0x8e8
  446c40:	add	x24, x20, #0x3
  446c44:	mov	w22, #0x7d                  	// #125
  446c48:	b	446c70 <_obstack_memory_used@@Base+0x9c18>
  446c4c:	mov	x0, x1
  446c50:	add	x1, x1, #0x1
  446c54:	str	x1, [x19, #256]
  446c58:	add	x20, x20, #0x1
  446c5c:	strb	w22, [x19, x0]
  446c60:	cmp	x24, x20
  446c64:	strb	w22, [x19, #264]
  446c68:	b.eq	446ca0 <_obstack_memory_used@@Base+0x9c48>  // b.none
  446c6c:	ldrb	w22, [x20]
  446c70:	cmp	x1, #0xff
  446c74:	b.ne	446c4c <_obstack_memory_used@@Base+0x9bf4>  // b.any
  446c78:	ldp	x3, x2, [x19, #272]
  446c7c:	strb	wzr, [x19, #255]
  446c80:	mov	x0, x19
  446c84:	blr	x3
  446c88:	ldr	x2, [x19, #320]
  446c8c:	mov	x1, #0x1                   	// #1
  446c90:	mov	x0, #0x0                   	// #0
  446c94:	add	x2, x2, x1
  446c98:	str	x2, [x19, #320]
  446c9c:	b	446c54 <_obstack_memory_used@@Base+0x9bfc>
  446ca0:	ldr	x23, [x23, #8]
  446ca4:	b	443cac <_obstack_memory_used@@Base+0x6c54>
  446ca8:	ldr	x25, [x25, #16]
  446cac:	ldr	w5, [x25]
  446cb0:	cmp	w5, #0x47
  446cb4:	b.eq	44734c <_obstack_memory_used@@Base+0xa2f4>  // b.none
  446cb8:	ubfiz	x3, x24, #5, #32
  446cbc:	sub	w0, w5, #0x1c
  446cc0:	mov	x1, #0x1f                  	// #31
  446cc4:	add	x3, x23, x3
  446cc8:	cmp	w0, #0x34
  446ccc:	mov	x2, #0x1                   	// #1
  446cd0:	movk	x1, #0x1a, lsl #48
  446cd4:	b.hi	444d74 <_obstack_memory_used@@Base+0x7d1c>  // b.pmore
  446cd8:	lsl	x0, x2, x0
  446cdc:	tst	x0, x1
  446ce0:	b.eq	444d74 <_obstack_memory_used@@Base+0x7d1c>  // b.none
  446ce4:	cmp	w24, #0x4
  446ce8:	b.eq	446dc8 <_obstack_memory_used@@Base+0x9d70>  // b.none
  446cec:	ldp	x8, x9, [x3, #-32]
  446cf0:	stur	x25, [x3, #-24]
  446cf4:	ldp	x4, x5, [x3, #-16]
  446cf8:	stur	wzr, [x3, #-16]
  446cfc:	stp	x8, x9, [x3]
  446d00:	sub	x0, x3, #0x20
  446d04:	add	w24, w24, #0x1
  446d08:	ldr	x25, [x25, #8]
  446d0c:	stp	x4, x5, [x3, #16]
  446d10:	ldr	w5, [x25]
  446d14:	stp	x6, x0, [x3, #-8]
  446d18:	sub	w0, w5, #0x1c
  446d1c:	str	x3, [x19, #296]
  446d20:	cmp	w0, #0x34
  446d24:	add	x3, x3, #0x20
  446d28:	b.ls	446cd8 <_obstack_memory_used@@Base+0x9c80>  // b.plast
  446d2c:	b	444d74 <_obstack_memory_used@@Base+0x7d1c>
  446d30:	mov	w0, #0x1                   	// #1
  446d34:	ldp	x21, x22, [sp, #32]
  446d38:	ldp	x23, x24, [sp, #48]
  446d3c:	str	w0, [x19, #304]
  446d40:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446d44:	ldr	x4, [x19, #288]
  446d48:	add	x0, sp, #0x60
  446d4c:	str	x0, [x19, #296]
  446d50:	mov	w1, w22
  446d54:	mov	x0, x19
  446d58:	stp	x3, x20, [sp, #96]
  446d5c:	str	wzr, [sp, #112]
  446d60:	str	x4, [sp, #120]
  446d64:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446d68:	ldr	w0, [sp, #112]
  446d6c:	ldr	x1, [sp, #96]
  446d70:	str	x1, [x19, #296]
  446d74:	cbnz	w0, 447494 <_obstack_memory_used@@Base+0xa43c>
  446d78:	ldr	x1, [x19, #256]
  446d7c:	cmp	x1, #0xff
  446d80:	b.ne	446da8 <_obstack_memory_used@@Base+0x9d50>  // b.any
  446d84:	ldp	x3, x2, [x19, #272]
  446d88:	strb	wzr, [x19, #255]
  446d8c:	mov	x0, x19
  446d90:	blr	x3
  446d94:	str	xzr, [x19, #256]
  446d98:	ldr	x0, [x19, #320]
  446d9c:	mov	x1, #0x0                   	// #0
  446da0:	add	x0, x0, #0x1
  446da4:	str	x0, [x19, #320]
  446da8:	add	x0, x1, #0x1
  446dac:	str	x0, [x19, #256]
  446db0:	mov	w0, #0x20                  	// #32
  446db4:	strb	w0, [x19, x1]
  446db8:	strb	w0, [x19, #264]
  446dbc:	ldr	x3, [x19, #296]
  446dc0:	b	44424c <_obstack_memory_used@@Base+0x71f4>
  446dc4:	str	x3, [x19, #296]
  446dc8:	mov	w0, #0x1                   	// #1
  446dcc:	ldp	x21, x22, [sp, #32]
  446dd0:	ldp	x23, x24, [sp, #48]
  446dd4:	ldp	x25, x26, [sp, #64]
  446dd8:	str	w0, [x19, #304]
  446ddc:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  446de0:	ldrb	w0, [x0]
  446de4:	sub	w1, w0, #0x63
  446de8:	sub	w0, w0, #0x72
  446dec:	and	w1, w1, #0xff
  446df0:	and	w0, w0, #0xff
  446df4:	cmp	w1, #0x1
  446df8:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  446dfc:	b.hi	4450ac <_obstack_memory_used@@Base+0x8054>  // b.pmore
  446e00:	mov	w1, w21
  446e04:	mov	x0, x19
  446e08:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  446e0c:	ldr	x1, [x19, #256]
  446e10:	cmp	x1, #0xff
  446e14:	b.ne	446e3c <_obstack_memory_used@@Base+0x9de4>  // b.any
  446e18:	ldp	x3, x2, [x19, #272]
  446e1c:	strb	wzr, [x19, #255]
  446e20:	mov	x0, x19
  446e24:	blr	x3
  446e28:	str	xzr, [x19, #256]
  446e2c:	ldr	x0, [x19, #320]
  446e30:	mov	x1, #0x0                   	// #0
  446e34:	add	x0, x0, #0x1
  446e38:	str	x0, [x19, #320]
  446e3c:	add	x0, x1, #0x1
  446e40:	str	x0, [x19, #256]
  446e44:	mov	w0, #0x3c                  	// #60
  446e48:	strb	w0, [x19, x1]
  446e4c:	strb	w0, [x19, #264]
  446e50:	mov	w1, w21
  446e54:	mov	x0, x19
  446e58:	mov	w22, #0x3e                  	// #62
  446e5c:	ldr	x2, [x20, #16]
  446e60:	mov	x23, #0x0                   	// #0
  446e64:	ldr	x2, [x2, #8]
  446e68:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  446e6c:	ldr	x1, [x19, #256]
  446e70:	b	446e94 <_obstack_memory_used@@Base+0x9e3c>
  446e74:	mov	x0, x1
  446e78:	add	x1, x1, #0x1
  446e7c:	str	x1, [x19, #256]
  446e80:	strb	w22, [x19, x0]
  446e84:	strb	w22, [x19, #264]
  446e88:	mov	w22, #0x28                  	// #40
  446e8c:	cbnz	x23, 44701c <_obstack_memory_used@@Base+0x9fc4>
  446e90:	mov	x23, #0x1                   	// #1
  446e94:	cmp	x1, #0xff
  446e98:	b.ne	446e74 <_obstack_memory_used@@Base+0x9e1c>  // b.any
  446e9c:	ldp	x3, x2, [x19, #272]
  446ea0:	strb	wzr, [x19, #255]
  446ea4:	mov	x0, x19
  446ea8:	blr	x3
  446eac:	ldr	x2, [x19, #320]
  446eb0:	mov	x1, #0x1                   	// #1
  446eb4:	mov	x0, #0x0                   	// #0
  446eb8:	add	x2, x2, x1
  446ebc:	str	x2, [x19, #320]
  446ec0:	b	446e7c <_obstack_memory_used@@Base+0x9e24>
  446ec4:	ldr	w4, [x19, #344]
  446ec8:	ldr	x5, [x19, #336]
  446ecc:	cmp	w4, #0x0
  446ed0:	b.le	4474c4 <_obstack_memory_used@@Base+0xa46c>
  446ed4:	sub	w3, w4, #0x1
  446ed8:	add	x1, x5, #0x10
  446edc:	mov	x2, x5
  446ee0:	add	x3, x1, w3, uxtw #4
  446ee4:	b	446ef4 <_obstack_memory_used@@Base+0x9e9c>
  446ee8:	add	x2, x2, #0x10
  446eec:	cmp	x3, x2
  446ef0:	b.eq	4474c4 <_obstack_memory_used@@Base+0xa46c>  // b.none
  446ef4:	ldr	x1, [x2]
  446ef8:	cmp	x0, x1
  446efc:	b.ne	446ee8 <_obstack_memory_used@@Base+0x9e90>  // b.any
  446f00:	ldr	x4, [x19, #328]
  446f04:	mov	x1, x4
  446f08:	cbnz	x4, 446f24 <_obstack_memory_used@@Base+0x9ecc>
  446f0c:	b	447328 <_obstack_memory_used@@Base+0xa2d0>
  446f10:	cmp	x3, x20
  446f14:	ccmp	x4, x1, #0x4, eq  // eq = none
  446f18:	b.ne	446f30 <_obstack_memory_used@@Base+0x9ed8>  // b.any
  446f1c:	ldr	x1, [x1, #8]
  446f20:	cbz	x1, 447328 <_obstack_memory_used@@Base+0xa2d0>
  446f24:	ldr	x3, [x1]
  446f28:	cmp	x3, x0
  446f2c:	b.ne	446f10 <_obstack_memory_used@@Base+0x9eb8>  // b.any
  446f30:	add	x1, x0, #0x8
  446f34:	mov	x0, x19
  446f38:	bl	440098 <_obstack_memory_used@@Base+0x3040>
  446f3c:	cbz	x0, 443a80 <_obstack_memory_used@@Base+0x6a28>
  446f40:	mov	w22, #0x0                   	// #0
  446f44:	ldr	w1, [x0]
  446f48:	cmp	w1, #0x2f
  446f4c:	b.ne	443c04 <_obstack_memory_used@@Base+0x6bac>  // b.any
  446f50:	ldr	w1, [x19, #316]
  446f54:	tbnz	w1, #31, 447660 <_obstack_memory_used@@Base+0xa608>
  446f58:	bl	440058 <_obstack_memory_used@@Base+0x3000>
  446f5c:	cbz	x0, 447674 <_obstack_memory_used@@Base+0xa61c>
  446f60:	ldr	w1, [x0]
  446f64:	b	443c04 <_obstack_memory_used@@Base+0x6bac>
  446f68:	ldr	x2, [x20, #8]
  446f6c:	add	x3, x20, #0x10
  446f70:	mov	w1, w21
  446f74:	mov	x0, x19
  446f78:	bl	448b50 <_obstack_memory_used@@Base+0xbaf8>
  446f7c:	cbnz	w0, 44744c <_obstack_memory_used@@Base+0xa3f4>
  446f80:	ldp	x24, x3, [x20, #8]
  446f84:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446f88:	add	x1, x1, #0xb00
  446f8c:	ldr	x0, [x24, #8]
  446f90:	ldp	x22, x2, [x3, #8]
  446f94:	ldr	x0, [x0]
  446f98:	ldp	x23, x20, [x2, #8]
  446f9c:	bl	402a00 <strcmp@plt>
  446fa0:	cbnz	w0, 4473ac <_obstack_memory_used@@Base+0xa354>
  446fa4:	mov	x2, x22
  446fa8:	mov	w1, w21
  446fac:	mov	x0, x19
  446fb0:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  446fb4:	mov	x2, x24
  446fb8:	mov	w1, w21
  446fbc:	mov	x0, x19
  446fc0:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  446fc4:	mov	x2, x23
  446fc8:	mov	w1, w21
  446fcc:	mov	x0, x19
  446fd0:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  446fd4:	mov	x0, x19
  446fd8:	mov	x2, #0x3                   	// #3
  446fdc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  446fe0:	add	x1, x1, #0xb08
  446fe4:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  446fe8:	mov	w1, w21
  446fec:	mov	x2, x20
  446ff0:	mov	x0, x19
  446ff4:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  446ff8:	ldp	x21, x22, [sp, #32]
  446ffc:	ldp	x23, x24, [sp, #48]
  447000:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447004:	sub	w1, w0, #0x61
  447008:	and	w1, w1, #0xff
  44700c:	cmp	w1, #0x5
  447010:	b.hi	4475d0 <_obstack_memory_used@@Base+0xa578>  // b.pmore
  447014:	sub	w0, w0, #0x57
  447018:	b	445fcc <_obstack_memory_used@@Base+0x8f74>
  44701c:	ldr	x2, [x20, #16]
  447020:	mov	w1, w21
  447024:	mov	x0, x19
  447028:	ldr	x2, [x2, #16]
  44702c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  447030:	ldr	x1, [x19, #256]
  447034:	cmp	x1, #0xff
  447038:	b.ne	447060 <_obstack_memory_used@@Base+0xa008>  // b.any
  44703c:	ldp	x3, x2, [x19, #272]
  447040:	strb	wzr, [x19, #255]
  447044:	mov	x0, x19
  447048:	blr	x3
  44704c:	str	xzr, [x19, #256]
  447050:	ldr	x0, [x19, #320]
  447054:	mov	x1, #0x0                   	// #0
  447058:	add	x0, x0, #0x1
  44705c:	str	x0, [x19, #320]
  447060:	add	x0, x1, #0x1
  447064:	str	x0, [x19, #256]
  447068:	mov	w0, #0x29                  	// #41
  44706c:	strb	w0, [x19, x1]
  447070:	strb	w0, [x19, #264]
  447074:	ldp	x21, x22, [sp, #32]
  447078:	ldp	x23, x24, [sp, #48]
  44707c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447080:	ldr	w1, [x19, #316]
  447084:	tbnz	w1, #31, 44602c <_obstack_memory_used@@Base+0x8fd4>
  447088:	bl	440058 <_obstack_memory_used@@Base+0x3000>
  44708c:	mov	x2, x0
  447090:	cbnz	x0, 44602c <_obstack_memory_used@@Base+0x8fd4>
  447094:	b	443a80 <_obstack_memory_used@@Base+0x6a28>
  447098:	cmp	w1, #0x63
  44709c:	b.eq	447464 <_obstack_memory_used@@Base+0xa40c>  // b.none
  4470a0:	mov	w1, w21
  4470a4:	mov	x0, x19
  4470a8:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  4470ac:	ldr	x2, [x20, #16]
  4470b0:	mov	w1, w21
  4470b4:	mov	x0, x19
  4470b8:	ldr	x2, [x2, #16]
  4470bc:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  4470c0:	b	4451e0 <_obstack_memory_used@@Base+0x8188>
  4470c4:	mov	w2, w3
  4470c8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4470cc:	add	x1, x1, #0x8e0
  4470d0:	add	x20, sp, #0x60
  4470d4:	mov	x0, x20
  4470d8:	bl	4026e0 <sprintf@plt>
  4470dc:	mov	x0, x20
  4470e0:	bl	402630 <strlen@plt>
  4470e4:	cbz	x0, 447740 <_obstack_memory_used@@Base+0xa6e8>
  4470e8:	add	x22, x20, x0
  4470ec:	ldr	x1, [x19, #256]
  4470f0:	b	447114 <_obstack_memory_used@@Base+0xa0bc>
  4470f4:	mov	x0, x1
  4470f8:	add	x1, x1, #0x1
  4470fc:	str	x1, [x19, #256]
  447100:	add	x20, x20, #0x1
  447104:	strb	w21, [x19, x0]
  447108:	cmp	x22, x20
  44710c:	strb	w21, [x19, #264]
  447110:	b.eq	447154 <_obstack_memory_used@@Base+0xa0fc>  // b.none
  447114:	ldrb	w21, [x20]
  447118:	cmp	x1, #0xff
  44711c:	b.ne	4470f4 <_obstack_memory_used@@Base+0xa09c>  // b.any
  447120:	ldp	x3, x2, [x19, #272]
  447124:	strb	wzr, [x19, #255]
  447128:	mov	x0, x19
  44712c:	blr	x3
  447130:	ldr	x2, [x19, #320]
  447134:	mov	x1, #0x1                   	// #1
  447138:	mov	x0, #0x0                   	// #0
  44713c:	add	x2, x2, x1
  447140:	str	x2, [x19, #320]
  447144:	b	4470fc <_obstack_memory_used@@Base+0xa0a4>
  447148:	ldp	x21, x22, [sp, #32]
  44714c:	ldp	x23, x24, [sp, #48]
  447150:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447154:	ldp	x21, x22, [sp, #32]
  447158:	ldp	x23, x24, [sp, #48]
  44715c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447160:	ldr	x0, [x22, #8]
  447164:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447168:	mov	x2, #0x6                   	// #6
  44716c:	add	x1, x1, #0x8f0
  447170:	bl	4027f0 <strncmp@plt>
  447174:	cbnz	w0, 444e68 <_obstack_memory_used@@Base+0x7e10>
  447178:	ldr	x2, [x20, #16]
  44717c:	mov	w1, w21
  447180:	mov	x0, x19
  447184:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  447188:	mov	x0, x19
  44718c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447190:	mov	x2, #0x2                   	// #2
  447194:	add	x1, x1, #0x8f8
  447198:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  44719c:	b	444f28 <_obstack_memory_used@@Base+0x7ed0>
  4471a0:	cmp	x1, #0xff
  4471a4:	b.ne	4471cc <_obstack_memory_used@@Base+0xa174>  // b.any
  4471a8:	ldp	x3, x2, [x19, #272]
  4471ac:	strb	wzr, [x19, #255]
  4471b0:	mov	x0, x19
  4471b4:	blr	x3
  4471b8:	str	xzr, [x19, #256]
  4471bc:	ldr	x0, [x19, #320]
  4471c0:	mov	x1, #0x0                   	// #0
  4471c4:	add	x0, x0, #0x1
  4471c8:	str	x0, [x19, #320]
  4471cc:	add	x0, x1, #0x1
  4471d0:	str	x0, [x19, #256]
  4471d4:	mov	w2, #0x20                  	// #32
  4471d8:	strb	w2, [x19, x1]
  4471dc:	strb	w2, [x19, #264]
  4471e0:	b	44674c <_obstack_memory_used@@Base+0x96f4>
  4471e4:	ldr	x1, [x19, #256]
  4471e8:	cmp	x1, #0xff
  4471ec:	b.ne	447214 <_obstack_memory_used@@Base+0xa1bc>  // b.any
  4471f0:	ldp	x3, x2, [x19, #272]
  4471f4:	strb	wzr, [x19, #255]
  4471f8:	mov	x0, x19
  4471fc:	blr	x3
  447200:	str	xzr, [x19, #256]
  447204:	ldr	x0, [x19, #320]
  447208:	mov	x1, #0x0                   	// #0
  44720c:	add	x0, x0, #0x1
  447210:	str	x0, [x19, #320]
  447214:	add	x0, x1, #0x1
  447218:	str	x0, [x19, #256]
  44721c:	mov	w2, #0x20                  	// #32
  447220:	strb	w2, [x19, x1]
  447224:	strb	w2, [x19, #264]
  447228:	b	4467b4 <_obstack_memory_used@@Base+0x975c>
  44722c:	ldp	x21, x22, [sp, #32]
  447230:	ldp	x23, x24, [sp, #48]
  447234:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447238:	ldp	x21, x22, [sp, #32]
  44723c:	ldp	x23, x24, [sp, #48]
  447240:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447244:	ldp	x21, x22, [sp, #32]
  447248:	ldp	x23, x24, [sp, #48]
  44724c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447250:	ldp	x21, x22, [sp, #32]
  447254:	ldp	x23, x24, [sp, #48]
  447258:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44725c:	ldr	x2, [x20, #8]
  447260:	mov	w1, w21
  447264:	mov	x0, x19
  447268:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  44726c:	mov	x0, x19
  447270:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447274:	mov	x2, #0x3                   	// #3
  447278:	add	x1, x1, #0xb60
  44727c:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  447280:	ldp	x21, x22, [sp, #32]
  447284:	ldp	x23, x24, [sp, #48]
  447288:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44728c:	sub	x22, x22, #0x2
  447290:	ldp	x23, x24, [sp, #48]
  447294:	str	x22, [x19, #256]
  447298:	ldp	x21, x22, [sp, #32]
  44729c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4472a0:	ldr	x0, [x0, #8]
  4472a4:	ldr	w1, [x0, #16]
  4472a8:	cmp	w1, #0x1
  4472ac:	b.eq	447630 <_obstack_memory_used@@Base+0xa5d8>  // b.none
  4472b0:	ldp	x21, x22, [sp, #32]
  4472b4:	ldp	x23, x24, [sp, #48]
  4472b8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4472bc:	ldr	x1, [x0, #8]
  4472c0:	ldr	w2, [x1, #16]
  4472c4:	cmp	w2, #0x1
  4472c8:	b.ne	4450d0 <_obstack_memory_used@@Base+0x8078>  // b.any
  4472cc:	ldr	x1, [x1, #8]
  4472d0:	ldrb	w1, [x1]
  4472d4:	cmp	w1, #0x3e
  4472d8:	b.ne	4450d0 <_obstack_memory_used@@Base+0x8078>  // b.any
  4472dc:	ldr	x1, [x19, #256]
  4472e0:	cmp	x1, #0xff
  4472e4:	b.ne	44730c <_obstack_memory_used@@Base+0xa2b4>  // b.any
  4472e8:	ldp	x3, x2, [x19, #272]
  4472ec:	strb	wzr, [x19, #255]
  4472f0:	mov	x0, x19
  4472f4:	blr	x3
  4472f8:	str	xzr, [x19, #256]
  4472fc:	ldr	x0, [x19, #320]
  447300:	mov	x1, #0x0                   	// #0
  447304:	add	x0, x0, #0x1
  447308:	str	x0, [x19, #320]
  44730c:	add	x0, x1, #0x1
  447310:	str	x0, [x19, #256]
  447314:	mov	w0, #0x28                  	// #40
  447318:	strb	w0, [x19, x1]
  44731c:	strb	w0, [x19, #264]
  447320:	ldr	x0, [x20, #8]
  447324:	b	4450d0 <_obstack_memory_used@@Base+0x8078>
  447328:	ldr	x2, [x2, #8]
  44732c:	add	x1, x0, #0x8
  447330:	ldr	x23, [x19, #288]
  447334:	str	x2, [x19, #288]
  447338:	mov	x0, x19
  44733c:	bl	440098 <_obstack_memory_used@@Base+0x3040>
  447340:	cbz	x0, 447678 <_obstack_memory_used@@Base+0xa620>
  447344:	mov	w22, #0x1                   	// #1
  447348:	b	446f44 <_obstack_memory_used@@Base+0x9eec>
  44734c:	ldr	x25, [x25, #8]
  447350:	cbz	x25, 446dc8 <_obstack_memory_used@@Base+0x9d70>
  447354:	ldr	w5, [x25]
  447358:	b	446cb8 <_obstack_memory_used@@Base+0x9c60>
  44735c:	ldp	x21, x22, [sp, #32]
  447360:	ldp	x23, x24, [sp, #48]
  447364:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447368:	ldp	x21, x22, [sp, #32]
  44736c:	ldp	x23, x24, [sp, #48]
  447370:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447374:	ldp	x21, x22, [sp, #32]
  447378:	ldp	x23, x24, [sp, #48]
  44737c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447380:	ldr	x0, [x2, #16]
  447384:	ldr	w0, [x0]
  447388:	cmp	w0, #0x29
  44738c:	b.eq	447398 <_obstack_memory_used@@Base+0xa340>  // b.none
  447390:	mov	w0, #0x1                   	// #1
  447394:	str	w0, [x19, #304]
  447398:	ldr	x2, [x2, #8]
  44739c:	mov	w1, w21
  4473a0:	mov	x0, x19
  4473a4:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  4473a8:	b	445118 <_obstack_memory_used@@Base+0x80c0>
  4473ac:	mov	x0, x19
  4473b0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4473b4:	mov	x2, #0x4                   	// #4
  4473b8:	add	x1, x1, #0xb10
  4473bc:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  4473c0:	ldr	x0, [x22, #8]
  4473c4:	cbz	x0, 44741c <_obstack_memory_used@@Base+0xa3c4>
  4473c8:	mov	w1, w21
  4473cc:	mov	x2, x22
  4473d0:	mov	x0, x19
  4473d4:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  4473d8:	ldr	x1, [x19, #256]
  4473dc:	cmp	x1, #0xff
  4473e0:	b.ne	447408 <_obstack_memory_used@@Base+0xa3b0>  // b.any
  4473e4:	ldp	x3, x2, [x19, #272]
  4473e8:	strb	wzr, [x19, #255]
  4473ec:	mov	x0, x19
  4473f0:	blr	x3
  4473f4:	str	xzr, [x19, #256]
  4473f8:	ldr	x0, [x19, #320]
  4473fc:	mov	x1, #0x0                   	// #0
  447400:	add	x0, x0, #0x1
  447404:	str	x0, [x19, #320]
  447408:	add	x0, x1, #0x1
  44740c:	str	x0, [x19, #256]
  447410:	mov	w0, #0x20                  	// #32
  447414:	strb	w0, [x19, x1]
  447418:	strb	w0, [x19, #264]
  44741c:	mov	x2, x23
  447420:	mov	w1, w21
  447424:	mov	x0, x19
  447428:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44742c:	cbz	x20, 4475c4 <_obstack_memory_used@@Base+0xa56c>
  447430:	mov	w1, w21
  447434:	mov	x2, x20
  447438:	mov	x0, x19
  44743c:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  447440:	ldp	x21, x22, [sp, #32]
  447444:	ldp	x23, x24, [sp, #48]
  447448:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44744c:	ldp	x21, x22, [sp, #32]
  447450:	ldp	x23, x24, [sp, #48]
  447454:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447458:	ldp	x21, x22, [sp, #32]
  44745c:	ldp	x23, x24, [sp, #48]
  447460:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447464:	ldrb	w1, [x0, #1]
  447468:	cmp	w1, #0x6c
  44746c:	b.ne	4470a0 <_obstack_memory_used@@Base+0xa048>  // b.any
  447470:	ldrb	w0, [x0, #2]
  447474:	cbz	w0, 4470ac <_obstack_memory_used@@Base+0xa054>
  447478:	b	4470a0 <_obstack_memory_used@@Base+0xa048>
  44747c:	ldp	x21, x22, [sp, #32]
  447480:	ldp	x23, x24, [sp, #48]
  447484:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447488:	ldp	x21, x22, [sp, #32]
  44748c:	ldp	x23, x24, [sp, #48]
  447490:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447494:	ldp	x21, x22, [sp, #32]
  447498:	ldp	x23, x24, [sp, #48]
  44749c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4474a0:	ldr	x1, [x20, #8]
  4474a4:	ldr	w2, [x1]
  4474a8:	cmp	w2, #0x1
  4474ac:	b.ne	4464b0 <_obstack_memory_used@@Base+0x9458>  // b.any
  4474b0:	ldr	x2, [x20, #16]
  4474b4:	ldr	w2, [x2]
  4474b8:	cmp	w2, #0x29
  4474bc:	csel	x20, x20, x1, ne  // ne = any
  4474c0:	b	4464b0 <_obstack_memory_used@@Base+0x9458>
  4474c4:	ldr	w1, [x19, #348]
  4474c8:	cmp	w4, w1
  4474cc:	b.ge	447534 <_obstack_memory_used@@Base+0xa4dc>  // b.tcont
  4474d0:	sbfiz	x1, x4, #4, #32
  4474d4:	add	w2, w4, #0x1
  4474d8:	ldr	x3, [x19, #288]
  4474dc:	str	w2, [x19, #344]
  4474e0:	str	x0, [x5, x1]
  4474e4:	add	x1, x5, w4, sxtw #4
  4474e8:	add	x1, x1, #0x8
  4474ec:	cbz	x3, 44764c <_obstack_memory_used@@Base+0xa5f4>
  4474f0:	ldr	w2, [x19, #360]
  4474f4:	ldr	w6, [x19, #364]
  4474f8:	sbfiz	x5, x2, #4, #32
  4474fc:	b	44752c <_obstack_memory_used@@Base+0xa4d4>
  447500:	ldr	x4, [x19, #352]
  447504:	add	w2, w2, #0x1
  447508:	ldr	x7, [x3, #8]
  44750c:	add	x4, x4, x5
  447510:	str	w2, [x19, #360]
  447514:	add	x5, x5, #0x10
  447518:	str	x7, [x4, #8]
  44751c:	str	x4, [x1]
  447520:	mov	x1, x4
  447524:	ldr	x3, [x3]
  447528:	cbz	x3, 44764c <_obstack_memory_used@@Base+0xa5f4>
  44752c:	cmp	w6, w2
  447530:	b.gt	447500 <_obstack_memory_used@@Base+0xa4a8>
  447534:	mov	w0, #0x1                   	// #1
  447538:	ldp	x21, x22, [sp, #32]
  44753c:	ldp	x23, x24, [sp, #48]
  447540:	str	w0, [x19, #304]
  447544:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447548:	ldr	x2, [x20, #8]
  44754c:	mov	w1, w21
  447550:	mov	x0, x19
  447554:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  447558:	mov	x2, x22
  44755c:	mov	w1, w21
  447560:	mov	x0, x19
  447564:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  447568:	ldp	x21, x22, [sp, #32]
  44756c:	ldp	x23, x24, [sp, #48]
  447570:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447574:	ldr	x2, [x20, #16]
  447578:	mov	x0, x19
  44757c:	mov	w1, w21
  447580:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  447584:	str	xzr, [x19, #296]
  447588:	ldr	w0, [sp, #112]
  44758c:	cbz	w0, 444490 <_obstack_memory_used@@Base+0x7438>
  447590:	ldp	x21, x22, [sp, #32]
  447594:	ldp	x23, x24, [sp, #48]
  447598:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44759c:	cmp	w22, #0x5
  4475a0:	b.eq	44774c <_obstack_memory_used@@Base+0xa6f4>  // b.none
  4475a4:	mov	x0, x19
  4475a8:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4475ac:	mov	x2, #0x3                   	// #3
  4475b0:	add	x1, x1, #0xb28
  4475b4:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  4475b8:	ldp	x21, x22, [sp, #32]
  4475bc:	ldp	x23, x24, [sp, #48]
  4475c0:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4475c4:	ldp	x21, x22, [sp, #32]
  4475c8:	ldp	x23, x24, [sp, #48]
  4475cc:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4475d0:	cmp	x21, x24
  4475d4:	b.ls	445f38 <_obstack_memory_used@@Base+0x8ee0>  // b.plast
  4475d8:	cmp	x2, #0xff
  4475dc:	ccmp	w0, w23, #0x0, ls  // ls = plast
  4475e0:	b.ne	445f38 <_obstack_memory_used@@Base+0x8ee0>  // b.any
  4475e4:	ldr	x1, [x19, #256]
  4475e8:	and	w22, w2, #0xff
  4475ec:	cmp	x1, #0xff
  4475f0:	b.ne	447618 <_obstack_memory_used@@Base+0xa5c0>  // b.any
  4475f4:	ldp	x3, x2, [x19, #272]
  4475f8:	strb	wzr, [x19, #255]
  4475fc:	mov	x0, x19
  447600:	blr	x3
  447604:	str	xzr, [x19, #256]
  447608:	ldr	x0, [x19, #320]
  44760c:	mov	x1, #0x0                   	// #0
  447610:	add	x0, x0, #0x1
  447614:	str	x0, [x19, #320]
  447618:	add	x0, x1, #0x1
  44761c:	str	x0, [x19, #256]
  447620:	strb	w22, [x19, x1]
  447624:	mov	x20, x24
  447628:	strb	w22, [x19, #264]
  44762c:	b	445f78 <_obstack_memory_used@@Base+0x8f20>
  447630:	ldr	x0, [x0, #8]
  447634:	ldrb	w0, [x0]
  447638:	cmp	w0, #0x3e
  44763c:	b.eq	44776c <_obstack_memory_used@@Base+0xa714>  // b.none
  447640:	ldp	x21, x22, [sp, #32]
  447644:	ldp	x23, x24, [sp, #48]
  447648:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44764c:	str	xzr, [x1]
  447650:	b	446f30 <_obstack_memory_used@@Base+0x9ed8>
  447654:	ldp	x21, x22, [sp, #32]
  447658:	ldp	x23, x24, [sp, #48]
  44765c:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  447660:	ldr	w1, [x20]
  447664:	ldr	x4, [x19, #296]
  447668:	cmp	w1, #0x2f
  44766c:	csel	x20, x20, x0, ne  // ne = any
  447670:	b	443c28 <_obstack_memory_used@@Base+0x6bd0>
  447674:	cbz	w22, 443a80 <_obstack_memory_used@@Base+0x6a28>
  447678:	ldp	x21, x22, [sp, #32]
  44767c:	str	x23, [x19, #288]
  447680:	ldp	x23, x24, [sp, #48]
  447684:	b	443a88 <_obstack_memory_used@@Base+0x6a30>
  447688:	ldr	x1, [x19, #256]
  44768c:	cmp	x1, #0xff
  447690:	b.ne	4476b8 <_obstack_memory_used@@Base+0xa660>  // b.any
  447694:	ldp	x3, x2, [x19, #272]
  447698:	strb	wzr, [x19, #255]
  44769c:	mov	x0, x19
  4476a0:	blr	x3
  4476a4:	str	xzr, [x19, #256]
  4476a8:	ldr	x0, [x19, #320]
  4476ac:	mov	x1, #0x0                   	// #0
  4476b0:	add	x0, x0, #0x1
  4476b4:	str	x0, [x19, #320]
  4476b8:	add	x0, x1, #0x1
  4476bc:	str	x0, [x19, #256]
  4476c0:	mov	w0, #0x75                  	// #117
  4476c4:	strb	w0, [x19, x1]
  4476c8:	strb	w0, [x19, #264]
  4476cc:	ldp	x21, x22, [sp, #32]
  4476d0:	ldp	x23, x24, [sp, #48]
  4476d4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4476d8:	mov	x0, x19
  4476dc:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4476e0:	mov	x2, #0x2                   	// #2
  4476e4:	add	x1, x1, #0xb18
  4476e8:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  4476ec:	ldp	x21, x22, [sp, #32]
  4476f0:	ldp	x23, x24, [sp, #48]
  4476f4:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4476f8:	ldr	x1, [x19, #256]
  4476fc:	cmp	x1, #0xff
  447700:	b.ne	447728 <_obstack_memory_used@@Base+0xa6d0>  // b.any
  447704:	ldp	x3, x2, [x19, #272]
  447708:	strb	wzr, [x19, #255]
  44770c:	mov	x0, x19
  447710:	blr	x3
  447714:	str	xzr, [x19, #256]
  447718:	ldr	x0, [x19, #320]
  44771c:	mov	x1, #0x0                   	// #0
  447720:	add	x0, x0, #0x1
  447724:	str	x0, [x19, #320]
  447728:	add	x0, x1, #0x1
  44772c:	str	x0, [x19, #256]
  447730:	mov	w0, #0x2d                  	// #45
  447734:	strb	w0, [x19, x1]
  447738:	strb	w0, [x19, #264]
  44773c:	b	446378 <_obstack_memory_used@@Base+0x9320>
  447740:	ldp	x21, x22, [sp, #32]
  447744:	ldp	x23, x24, [sp, #48]
  447748:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44774c:	mov	x0, x19
  447750:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447754:	mov	x2, #0x2                   	// #2
  447758:	add	x1, x1, #0xb20
  44775c:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  447760:	ldp	x21, x22, [sp, #32]
  447764:	ldp	x23, x24, [sp, #48]
  447768:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  44776c:	ldr	x1, [x19, #256]
  447770:	cmp	x1, #0xff
  447774:	b.ne	44779c <_obstack_memory_used@@Base+0xa744>  // b.any
  447778:	ldp	x3, x2, [x19, #272]
  44777c:	strb	wzr, [x19, #255]
  447780:	mov	x0, x19
  447784:	blr	x3
  447788:	str	xzr, [x19, #256]
  44778c:	ldr	x0, [x19, #320]
  447790:	mov	x1, #0x0                   	// #0
  447794:	add	x0, x0, #0x1
  447798:	str	x0, [x19, #320]
  44779c:	add	x0, x1, #0x1
  4477a0:	str	x0, [x19, #256]
  4477a4:	mov	w0, #0x29                  	// #41
  4477a8:	strb	w0, [x19, x1]
  4477ac:	strb	w0, [x19, #264]
  4477b0:	ldp	x21, x22, [sp, #32]
  4477b4:	ldp	x23, x24, [sp, #48]
  4477b8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4477bc:	mov	x2, x22
  4477c0:	mov	w1, w21
  4477c4:	mov	x0, x19
  4477c8:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  4477cc:	b	4455f4 <_obstack_memory_used@@Base+0x859c>
  4477d0:	ldp	x21, x22, [sp, #32]
  4477d4:	ldp	x23, x24, [sp, #48]
  4477d8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4477dc:	mov	x0, x19
  4477e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4477e4:	mov	x2, #0x5                   	// #5
  4477e8:	add	x1, x1, #0xb30
  4477ec:	bl	43f778 <_obstack_memory_used@@Base+0x2720>
  4477f0:	ldp	x21, x22, [sp, #32]
  4477f4:	ldp	x23, x24, [sp, #48]
  4477f8:	b	443a54 <_obstack_memory_used@@Base+0x69fc>
  4477fc:	nop
  447800:	stp	x29, x30, [sp, #-48]!
  447804:	mov	x29, sp
  447808:	stp	x19, x20, [sp, #16]
  44780c:	mov	x20, x0
  447810:	cbz	x2, 447880 <_obstack_memory_used@@Base+0xa828>
  447814:	ldr	w3, [x2, #4]
  447818:	mov	x19, x2
  44781c:	cmp	w3, #0x1
  447820:	b.gt	447880 <_obstack_memory_used@@Base+0xa828>
  447824:	ldr	w4, [x0, #308]
  447828:	cmp	w4, #0x400
  44782c:	b.gt	447880 <_obstack_memory_used@@Base+0xa828>
  447830:	add	w3, w3, #0x1
  447834:	add	w4, w4, #0x1
  447838:	str	w3, [x2, #4]
  44783c:	add	x3, sp, #0x20
  447840:	str	w4, [x0, #308]
  447844:	ldr	x4, [x0, #328]
  447848:	str	x3, [x0, #328]
  44784c:	stp	x2, x4, [sp, #32]
  447850:	bl	4439f0 <_obstack_memory_used@@Base+0x6998>
  447854:	ldr	w1, [x19, #4]
  447858:	ldr	x0, [sp, #40]
  44785c:	str	x0, [x20, #328]
  447860:	ldr	w0, [x20, #308]
  447864:	sub	w1, w1, #0x1
  447868:	str	w1, [x19, #4]
  44786c:	sub	w0, w0, #0x1
  447870:	str	w0, [x20, #308]
  447874:	ldp	x19, x20, [sp, #16]
  447878:	ldp	x29, x30, [sp], #48
  44787c:	ret
  447880:	mov	w0, #0x1                   	// #1
  447884:	str	w0, [x20, #304]
  447888:	ldp	x19, x20, [sp, #16]
  44788c:	ldp	x29, x30, [sp], #48
  447890:	ret
  447894:	nop
  447898:	stp	x29, x30, [sp, #-64]!
  44789c:	mov	x29, sp
  4478a0:	stp	x19, x20, [sp, #16]
  4478a4:	mov	x19, x0
  4478a8:	ldr	w0, [x2]
  4478ac:	stp	x21, x22, [sp, #32]
  4478b0:	mov	x20, x2
  4478b4:	sub	w0, w0, #0x3
  4478b8:	mov	w21, w1
  4478bc:	cmp	w0, #0x4d
  4478c0:	b.ls	4478e0 <_obstack_memory_used@@Base+0xa888>  // b.plast
  4478c4:	mov	x2, x20
  4478c8:	mov	w1, w21
  4478cc:	mov	x0, x19
  4478d0:	ldp	x19, x20, [sp, #16]
  4478d4:	ldp	x21, x22, [sp, #32]
  4478d8:	ldp	x29, x30, [sp], #64
  4478dc:	b	447800 <_obstack_memory_used@@Base+0xa7a8>
  4478e0:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4478e4:	add	x1, x1, #0x7e0
  4478e8:	ldrh	w0, [x1, w0, uxtw #1]
  4478ec:	adr	x1, 4478f8 <_obstack_memory_used@@Base+0xa8a0>
  4478f0:	add	x0, x1, w0, sxth #2
  4478f4:	br	x0
  4478f8:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4478fc:	add	x20, x20, #0xbe8
  447900:	add	x22, x20, #0x9
  447904:	mov	w21, #0x20                  	// #32
  447908:	ldr	x1, [x19, #256]
  44790c:	b	447934 <_obstack_memory_used@@Base+0xa8dc>
  447910:	mov	x0, x1
  447914:	add	x1, x1, #0x1
  447918:	str	x1, [x19, #256]
  44791c:	add	x20, x20, #0x1
  447920:	strb	w21, [x19, x0]
  447924:	cmp	x22, x20
  447928:	strb	w21, [x19, #264]
  44792c:	b.eq	447aec <_obstack_memory_used@@Base+0xaa94>  // b.none
  447930:	ldrb	w21, [x20]
  447934:	cmp	x1, #0xff
  447938:	b.ne	447910 <_obstack_memory_used@@Base+0xa8b8>  // b.any
  44793c:	ldp	x3, x2, [x19, #272]
  447940:	strb	wzr, [x19, #255]
  447944:	mov	x0, x19
  447948:	blr	x3
  44794c:	ldr	x2, [x19, #320]
  447950:	mov	x1, #0x1                   	// #1
  447954:	mov	x0, #0x0                   	// #0
  447958:	add	x2, x2, x1
  44795c:	str	x2, [x19, #320]
  447960:	b	447918 <_obstack_memory_used@@Base+0xa8c0>
  447964:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447968:	add	x20, x20, #0xbf8
  44796c:	add	x22, x20, #0x9
  447970:	mov	w21, #0x20                  	// #32
  447974:	ldr	x1, [x19, #256]
  447978:	b	4479a0 <_obstack_memory_used@@Base+0xa948>
  44797c:	mov	x0, x1
  447980:	add	x1, x1, #0x1
  447984:	str	x1, [x19, #256]
  447988:	add	x20, x20, #0x1
  44798c:	strb	w21, [x19, x0]
  447990:	cmp	x20, x22
  447994:	strb	w21, [x19, #264]
  447998:	b.eq	447aec <_obstack_memory_used@@Base+0xaa94>  // b.none
  44799c:	ldrb	w21, [x20]
  4479a0:	cmp	x1, #0xff
  4479a4:	b.ne	44797c <_obstack_memory_used@@Base+0xa924>  // b.any
  4479a8:	ldp	x3, x2, [x19, #272]
  4479ac:	strb	wzr, [x19, #255]
  4479b0:	mov	x0, x19
  4479b4:	blr	x3
  4479b8:	ldr	x2, [x19, #320]
  4479bc:	mov	x1, #0x1                   	// #1
  4479c0:	mov	x0, #0x0                   	// #0
  4479c4:	add	x2, x2, x1
  4479c8:	str	x2, [x19, #320]
  4479cc:	b	447984 <_obstack_memory_used@@Base+0xa92c>
  4479d0:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4479d4:	add	x20, x20, #0xc08
  4479d8:	add	x22, x20, #0x6
  4479dc:	mov	w21, #0x20                  	// #32
  4479e0:	ldr	x1, [x19, #256]
  4479e4:	b	447a0c <_obstack_memory_used@@Base+0xa9b4>
  4479e8:	mov	x0, x1
  4479ec:	add	x1, x1, #0x1
  4479f0:	str	x1, [x19, #256]
  4479f4:	add	x20, x20, #0x1
  4479f8:	strb	w21, [x19, x0]
  4479fc:	cmp	x22, x20
  447a00:	strb	w21, [x19, #264]
  447a04:	b.eq	447aec <_obstack_memory_used@@Base+0xaa94>  // b.none
  447a08:	ldrb	w21, [x20]
  447a0c:	cmp	x1, #0xff
  447a10:	b.ne	4479e8 <_obstack_memory_used@@Base+0xa990>  // b.any
  447a14:	ldp	x3, x2, [x19, #272]
  447a18:	strb	wzr, [x19, #255]
  447a1c:	mov	x0, x19
  447a20:	blr	x3
  447a24:	ldr	x2, [x19, #320]
  447a28:	mov	x1, #0x1                   	// #1
  447a2c:	mov	x0, #0x0                   	// #0
  447a30:	add	x2, x2, x1
  447a34:	str	x2, [x19, #320]
  447a38:	b	4479f0 <_obstack_memory_used@@Base+0xa998>
  447a3c:	ldr	x2, [x2, #8]
  447a40:	b	4478c8 <_obstack_memory_used@@Base+0xa870>
  447a44:	ldr	x0, [x19, #256]
  447a48:	cmp	x0, #0xff
  447a4c:	b.eq	448008 <_obstack_memory_used@@Base+0xafb0>  // b.none
  447a50:	add	x1, x0, #0x1
  447a54:	str	x1, [x19, #256]
  447a58:	mov	w2, #0x20                  	// #32
  447a5c:	strb	w2, [x19, x0]
  447a60:	strb	w2, [x19, #264]
  447a64:	b	447c54 <_obstack_memory_used@@Base+0xabfc>
  447a68:	ldr	x0, [x19, #256]
  447a6c:	add	x1, x0, #0x1
  447a70:	cmp	x0, #0xff
  447a74:	b.eq	448060 <_obstack_memory_used@@Base+0xb008>  // b.none
  447a78:	str	x1, [x19, #256]
  447a7c:	mov	w2, #0x20                  	// #32
  447a80:	strb	w2, [x19, x0]
  447a84:	strb	w2, [x19, #264]
  447a88:	mov	x21, #0x0                   	// #0
  447a8c:	mov	w20, #0x26                  	// #38
  447a90:	b	447ab0 <_obstack_memory_used@@Base+0xaa58>
  447a94:	mov	x0, x1
  447a98:	add	x1, x1, #0x1
  447a9c:	str	x1, [x19, #256]
  447aa0:	strb	w20, [x19, x0]
  447aa4:	strb	w20, [x19, #264]
  447aa8:	cbnz	x21, 447aec <_obstack_memory_used@@Base+0xaa94>
  447aac:	mov	x21, #0x1                   	// #1
  447ab0:	cmp	x1, #0xff
  447ab4:	b.ne	447a94 <_obstack_memory_used@@Base+0xaa3c>  // b.any
  447ab8:	ldp	x3, x2, [x19, #272]
  447abc:	strb	wzr, [x19, #255]
  447ac0:	mov	x0, x19
  447ac4:	blr	x3
  447ac8:	ldr	x2, [x19, #320]
  447acc:	mov	x0, #0x0                   	// #0
  447ad0:	mov	x1, #0x1                   	// #1
  447ad4:	str	x1, [x19, #256]
  447ad8:	add	x2, x2, x1
  447adc:	str	x2, [x19, #320]
  447ae0:	strb	w20, [x19, x0]
  447ae4:	strb	w20, [x19, #264]
  447ae8:	cbz	x21, 447aac <_obstack_memory_used@@Base+0xaa54>
  447aec:	ldp	x19, x20, [sp, #16]
  447af0:	ldp	x21, x22, [sp, #32]
  447af4:	ldp	x29, x30, [sp], #64
  447af8:	ret
  447afc:	ldr	x1, [x19, #256]
  447b00:	add	x0, x1, #0x1
  447b04:	cmp	x1, #0xff
  447b08:	b.eq	448038 <_obstack_memory_used@@Base+0xafe0>  // b.none
  447b0c:	str	x0, [x19, #256]
  447b10:	mov	w0, #0x20                  	// #32
  447b14:	strb	w0, [x19, x1]
  447b18:	mov	w1, w21
  447b1c:	strb	w0, [x19, #264]
  447b20:	mov	x0, x19
  447b24:	ldr	x2, [x20, #16]
  447b28:	ldp	x19, x20, [sp, #16]
  447b2c:	ldp	x21, x22, [sp, #32]
  447b30:	ldp	x29, x30, [sp], #64
  447b34:	b	447800 <_obstack_memory_used@@Base+0xa7a8>
  447b38:	tbnz	w21, #2, 447aec <_obstack_memory_used@@Base+0xaa94>
  447b3c:	ldr	x1, [x19, #256]
  447b40:	add	x0, x1, #0x1
  447b44:	cmp	x1, #0xff
  447b48:	b.ne	447b70 <_obstack_memory_used@@Base+0xab18>  // b.any
  447b4c:	ldp	x3, x2, [x19, #272]
  447b50:	strb	wzr, [x19, #255]
  447b54:	mov	x0, x19
  447b58:	blr	x3
  447b5c:	ldr	x2, [x19, #320]
  447b60:	mov	x0, #0x1                   	// #1
  447b64:	mov	x1, #0x0                   	// #0
  447b68:	add	x2, x2, x0
  447b6c:	str	x2, [x19, #320]
  447b70:	str	x0, [x19, #256]
  447b74:	mov	w0, #0x2a                  	// #42
  447b78:	strb	w0, [x19, x1]
  447b7c:	strb	w0, [x19, #264]
  447b80:	b	447aec <_obstack_memory_used@@Base+0xaa94>
  447b84:	ldrb	w0, [x19, #264]
  447b88:	cmp	w0, #0x28
  447b8c:	b.eq	447bd4 <_obstack_memory_used@@Base+0xab7c>  // b.none
  447b90:	ldr	x1, [x19, #256]
  447b94:	add	x0, x1, #0x1
  447b98:	cmp	x1, #0xff
  447b9c:	b.ne	447bc4 <_obstack_memory_used@@Base+0xab6c>  // b.any
  447ba0:	ldp	x3, x2, [x19, #272]
  447ba4:	strb	wzr, [x19, #255]
  447ba8:	mov	x0, x19
  447bac:	blr	x3
  447bb0:	ldr	x2, [x19, #320]
  447bb4:	mov	x0, #0x1                   	// #1
  447bb8:	mov	x1, #0x0                   	// #0
  447bbc:	add	x2, x2, x0
  447bc0:	str	x2, [x19, #320]
  447bc4:	str	x0, [x19, #256]
  447bc8:	mov	w0, #0x20                  	// #32
  447bcc:	strb	w0, [x19, x1]
  447bd0:	strb	w0, [x19, #264]
  447bd4:	ldr	x2, [x20, #8]
  447bd8:	mov	w1, w21
  447bdc:	mov	x0, x19
  447be0:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447be4:	add	x20, x20, #0xc60
  447be8:	mov	w21, #0x3a                  	// #58
  447bec:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  447bf0:	add	x22, x20, #0x3
  447bf4:	ldr	x1, [x19, #256]
  447bf8:	b	447c20 <_obstack_memory_used@@Base+0xabc8>
  447bfc:	mov	x0, x1
  447c00:	add	x1, x1, #0x1
  447c04:	str	x1, [x19, #256]
  447c08:	add	x20, x20, #0x1
  447c0c:	strb	w21, [x19, x0]
  447c10:	cmp	x22, x20
  447c14:	strb	w21, [x19, #264]
  447c18:	b.eq	447aec <_obstack_memory_used@@Base+0xaa94>  // b.none
  447c1c:	ldrb	w21, [x20]
  447c20:	cmp	x1, #0xff
  447c24:	b.ne	447bfc <_obstack_memory_used@@Base+0xaba4>  // b.any
  447c28:	ldp	x3, x2, [x19, #272]
  447c2c:	strb	wzr, [x19, #255]
  447c30:	mov	x0, x19
  447c34:	blr	x3
  447c38:	ldr	x2, [x19, #320]
  447c3c:	mov	x1, #0x1                   	// #1
  447c40:	mov	x0, #0x0                   	// #0
  447c44:	add	x2, x2, x1
  447c48:	str	x2, [x19, #320]
  447c4c:	b	447c04 <_obstack_memory_used@@Base+0xabac>
  447c50:	ldr	x1, [x19, #256]
  447c54:	cmp	x1, #0xff
  447c58:	b.eq	447fe0 <_obstack_memory_used@@Base+0xaf88>  // b.none
  447c5c:	add	x0, x1, #0x1
  447c60:	str	x0, [x19, #256]
  447c64:	mov	w0, #0x26                  	// #38
  447c68:	strb	w0, [x19, x1]
  447c6c:	strb	w0, [x19, #264]
  447c70:	ldp	x19, x20, [sp, #16]
  447c74:	ldp	x21, x22, [sp, #32]
  447c78:	ldp	x29, x30, [sp], #64
  447c7c:	ret
  447c80:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447c84:	add	x22, x22, #0xc38
  447c88:	stp	x23, x24, [sp, #48]
  447c8c:	add	x24, x22, #0x6
  447c90:	mov	w23, #0x20                  	// #32
  447c94:	ldr	x1, [x19, #256]
  447c98:	b	447cc0 <_obstack_memory_used@@Base+0xac68>
  447c9c:	mov	x0, x1
  447ca0:	add	x1, x1, #0x1
  447ca4:	str	x1, [x19, #256]
  447ca8:	add	x22, x22, #0x1
  447cac:	strb	w23, [x19, x0]
  447cb0:	cmp	x24, x22
  447cb4:	strb	w23, [x19, #264]
  447cb8:	b.eq	447f28 <_obstack_memory_used@@Base+0xaed0>  // b.none
  447cbc:	ldrb	w23, [x22]
  447cc0:	cmp	x1, #0xff
  447cc4:	b.ne	447c9c <_obstack_memory_used@@Base+0xac44>  // b.any
  447cc8:	ldp	x3, x2, [x19, #272]
  447ccc:	strb	wzr, [x19, #255]
  447cd0:	mov	x0, x19
  447cd4:	blr	x3
  447cd8:	ldr	x2, [x19, #320]
  447cdc:	mov	x1, #0x1                   	// #1
  447ce0:	mov	x0, #0x0                   	// #0
  447ce4:	add	x2, x2, x1
  447ce8:	str	x2, [x19, #320]
  447cec:	b	447ca4 <_obstack_memory_used@@Base+0xac4c>
  447cf0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447cf4:	add	x22, x22, #0xc28
  447cf8:	stp	x23, x24, [sp, #48]
  447cfc:	add	x24, x22, #0x9
  447d00:	mov	w23, #0x20                  	// #32
  447d04:	ldr	x1, [x19, #256]
  447d08:	b	447d30 <_obstack_memory_used@@Base+0xacd8>
  447d0c:	mov	x0, x1
  447d10:	add	x1, x1, #0x1
  447d14:	str	x1, [x19, #256]
  447d18:	add	x22, x22, #0x1
  447d1c:	strb	w23, [x19, x0]
  447d20:	cmp	x22, x24
  447d24:	strb	w23, [x19, #264]
  447d28:	b.eq	447f28 <_obstack_memory_used@@Base+0xaed0>  // b.none
  447d2c:	ldrb	w23, [x22]
  447d30:	cmp	x1, #0xff
  447d34:	b.ne	447d0c <_obstack_memory_used@@Base+0xacb4>  // b.any
  447d38:	ldp	x3, x2, [x19, #272]
  447d3c:	strb	wzr, [x19, #255]
  447d40:	mov	x0, x19
  447d44:	blr	x3
  447d48:	ldr	x2, [x19, #320]
  447d4c:	mov	x1, #0x1                   	// #1
  447d50:	mov	x0, #0x0                   	// #0
  447d54:	add	x2, x2, x1
  447d58:	str	x2, [x19, #320]
  447d5c:	b	447d14 <_obstack_memory_used@@Base+0xacbc>
  447d60:	stp	x23, x24, [sp, #48]
  447d64:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447d68:	add	x24, x24, #0xc68
  447d6c:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447d70:	add	x24, x24, #0xa
  447d74:	add	x22, x22, #0xc69
  447d78:	mov	w23, #0x20                  	// #32
  447d7c:	ldr	x1, [x19, #256]
  447d80:	b	447da4 <_obstack_memory_used@@Base+0xad4c>
  447d84:	mov	x0, x1
  447d88:	add	x1, x1, #0x1
  447d8c:	str	x1, [x19, #256]
  447d90:	cmp	x22, x24
  447d94:	strb	w23, [x19, x0]
  447d98:	strb	w23, [x19, #264]
  447d9c:	b.eq	447fd8 <_obstack_memory_used@@Base+0xaf80>  // b.none
  447da0:	ldrb	w23, [x22], #1
  447da4:	cmp	x1, #0xff
  447da8:	b.ne	447d84 <_obstack_memory_used@@Base+0xad2c>  // b.any
  447dac:	ldp	x3, x2, [x19, #272]
  447db0:	strb	wzr, [x19, #255]
  447db4:	mov	x0, x19
  447db8:	blr	x3
  447dbc:	ldr	x2, [x19, #320]
  447dc0:	mov	x1, #0x1                   	// #1
  447dc4:	mov	x0, #0x0                   	// #0
  447dc8:	add	x2, x2, x1
  447dcc:	str	x2, [x19, #320]
  447dd0:	b	447d8c <_obstack_memory_used@@Base+0xad34>
  447dd4:	ldr	x1, [x19, #256]
  447dd8:	b	447a88 <_obstack_memory_used@@Base+0xaa30>
  447ddc:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447de0:	add	x20, x20, #0xc40
  447de4:	add	x22, x20, #0x8
  447de8:	mov	w21, #0x63                  	// #99
  447dec:	ldr	x1, [x19, #256]
  447df0:	b	447e18 <_obstack_memory_used@@Base+0xadc0>
  447df4:	mov	x0, x1
  447df8:	add	x1, x1, #0x1
  447dfc:	str	x1, [x19, #256]
  447e00:	add	x20, x20, #0x1
  447e04:	strb	w21, [x19, x0]
  447e08:	cmp	x22, x20
  447e0c:	strb	w21, [x19, #264]
  447e10:	b.eq	447aec <_obstack_memory_used@@Base+0xaa94>  // b.none
  447e14:	ldrb	w21, [x20]
  447e18:	cmp	x1, #0xff
  447e1c:	b.ne	447df4 <_obstack_memory_used@@Base+0xad9c>  // b.any
  447e20:	ldp	x3, x2, [x19, #272]
  447e24:	strb	wzr, [x19, #255]
  447e28:	mov	x0, x19
  447e2c:	blr	x3
  447e30:	ldr	x2, [x19, #320]
  447e34:	mov	x1, #0x1                   	// #1
  447e38:	mov	x0, #0x0                   	// #0
  447e3c:	add	x2, x2, x1
  447e40:	str	x2, [x19, #320]
  447e44:	b	447dfc <_obstack_memory_used@@Base+0xada4>
  447e48:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447e4c:	add	x22, x22, #0xc50
  447e50:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447e54:	add	x22, x22, #0xa
  447e58:	add	x20, x20, #0xc51
  447e5c:	mov	w21, #0x69                  	// #105
  447e60:	ldr	x1, [x19, #256]
  447e64:	b	447e88 <_obstack_memory_used@@Base+0xae30>
  447e68:	mov	x0, x1
  447e6c:	add	x1, x1, #0x1
  447e70:	str	x1, [x19, #256]
  447e74:	cmp	x20, x22
  447e78:	strb	w21, [x19, x0]
  447e7c:	strb	w21, [x19, #264]
  447e80:	b.eq	447aec <_obstack_memory_used@@Base+0xaa94>  // b.none
  447e84:	ldrb	w21, [x20], #1
  447e88:	cmp	x1, #0xff
  447e8c:	b.ne	447e68 <_obstack_memory_used@@Base+0xae10>  // b.any
  447e90:	ldp	x3, x2, [x19, #272]
  447e94:	strb	wzr, [x19, #255]
  447e98:	mov	x0, x19
  447e9c:	blr	x3
  447ea0:	ldr	x2, [x19, #320]
  447ea4:	mov	x1, #0x1                   	// #1
  447ea8:	mov	x0, #0x0                   	// #0
  447eac:	add	x2, x2, x1
  447eb0:	str	x2, [x19, #320]
  447eb4:	b	447e70 <_obstack_memory_used@@Base+0xae18>
  447eb8:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447ebc:	add	x22, x22, #0xc10
  447ec0:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  447ec4:	add	x22, x22, #0x11
  447ec8:	add	x20, x20, #0xc11
  447ecc:	mov	w21, #0x20                  	// #32
  447ed0:	ldr	x1, [x19, #256]
  447ed4:	b	447ef8 <_obstack_memory_used@@Base+0xaea0>
  447ed8:	mov	x0, x1
  447edc:	add	x1, x1, #0x1
  447ee0:	str	x1, [x19, #256]
  447ee4:	cmp	x22, x20
  447ee8:	strb	w21, [x19, x0]
  447eec:	strb	w21, [x19, #264]
  447ef0:	b.eq	447aec <_obstack_memory_used@@Base+0xaa94>  // b.none
  447ef4:	ldrb	w21, [x20], #1
  447ef8:	cmp	x1, #0xff
  447efc:	b.ne	447ed8 <_obstack_memory_used@@Base+0xae80>  // b.any
  447f00:	ldp	x3, x2, [x19, #272]
  447f04:	strb	wzr, [x19, #255]
  447f08:	mov	x0, x19
  447f0c:	blr	x3
  447f10:	ldr	x2, [x19, #320]
  447f14:	mov	x1, #0x1                   	// #1
  447f18:	mov	x0, #0x0                   	// #0
  447f1c:	add	x2, x2, x1
  447f20:	str	x2, [x19, #320]
  447f24:	b	447ee0 <_obstack_memory_used@@Base+0xae88>
  447f28:	ldr	x2, [x20, #16]
  447f2c:	cbz	x2, 44808c <_obstack_memory_used@@Base+0xb034>
  447f30:	add	x0, x1, #0x1
  447f34:	cmp	x1, #0xff
  447f38:	b.ne	447f64 <_obstack_memory_used@@Base+0xaf0c>  // b.any
  447f3c:	ldp	x3, x2, [x19, #272]
  447f40:	strb	wzr, [x19, #255]
  447f44:	mov	x0, x19
  447f48:	blr	x3
  447f4c:	ldr	x3, [x19, #320]
  447f50:	mov	x0, #0x1                   	// #1
  447f54:	mov	x1, #0x0                   	// #0
  447f58:	add	x3, x3, x0
  447f5c:	ldr	x2, [x20, #16]
  447f60:	str	x3, [x19, #320]
  447f64:	str	x0, [x19, #256]
  447f68:	mov	w0, #0x28                  	// #40
  447f6c:	strb	w0, [x19, x1]
  447f70:	strb	w0, [x19, #264]
  447f74:	mov	w1, w21
  447f78:	mov	x0, x19
  447f7c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  447f80:	ldr	x1, [x19, #256]
  447f84:	add	x0, x1, #0x1
  447f88:	cmp	x1, #0xff
  447f8c:	b.ne	447fb4 <_obstack_memory_used@@Base+0xaf5c>  // b.any
  447f90:	ldp	x3, x2, [x19, #272]
  447f94:	strb	wzr, [x19, #255]
  447f98:	mov	x0, x19
  447f9c:	blr	x3
  447fa0:	ldr	x2, [x19, #320]
  447fa4:	mov	x0, #0x1                   	// #1
  447fa8:	mov	x1, #0x0                   	// #0
  447fac:	add	x2, x2, x0
  447fb0:	str	x2, [x19, #320]
  447fb4:	str	x0, [x19, #256]
  447fb8:	mov	w0, #0x29                  	// #41
  447fbc:	strb	w0, [x19, x1]
  447fc0:	strb	w0, [x19, #264]
  447fc4:	ldp	x19, x20, [sp, #16]
  447fc8:	ldp	x21, x22, [sp, #32]
  447fcc:	ldp	x23, x24, [sp, #48]
  447fd0:	ldp	x29, x30, [sp], #64
  447fd4:	ret
  447fd8:	ldr	x2, [x20, #8]
  447fdc:	b	447f74 <_obstack_memory_used@@Base+0xaf1c>
  447fe0:	ldp	x3, x2, [x19, #272]
  447fe4:	strb	wzr, [x19, #255]
  447fe8:	mov	x0, x19
  447fec:	blr	x3
  447ff0:	ldr	x2, [x19, #320]
  447ff4:	mov	x0, #0x1                   	// #1
  447ff8:	mov	x1, #0x0                   	// #0
  447ffc:	add	x2, x2, x0
  448000:	str	x2, [x19, #320]
  448004:	b	447c60 <_obstack_memory_used@@Base+0xac08>
  448008:	ldp	x3, x2, [x19, #272]
  44800c:	strb	wzr, [x19, #255]
  448010:	mov	x1, x0
  448014:	mov	x0, x19
  448018:	blr	x3
  44801c:	ldr	x0, [x19, #320]
  448020:	mov	w2, #0x20                  	// #32
  448024:	mov	x1, #0x1                   	// #1
  448028:	strb	w2, [x19]
  44802c:	add	x0, x0, x1
  448030:	str	x0, [x19, #320]
  448034:	b	447c5c <_obstack_memory_used@@Base+0xac04>
  448038:	ldp	x3, x2, [x19, #272]
  44803c:	strb	wzr, [x19, #255]
  448040:	mov	x0, x19
  448044:	blr	x3
  448048:	ldr	x2, [x19, #320]
  44804c:	mov	x0, #0x1                   	// #1
  448050:	mov	x1, #0x0                   	// #0
  448054:	add	x2, x2, x0
  448058:	str	x2, [x19, #320]
  44805c:	b	447b0c <_obstack_memory_used@@Base+0xaab4>
  448060:	ldp	x3, x2, [x19, #272]
  448064:	strb	wzr, [x19, #255]
  448068:	mov	x1, x0
  44806c:	mov	x0, x19
  448070:	blr	x3
  448074:	ldr	x2, [x19, #320]
  448078:	mov	x1, #0x1                   	// #1
  44807c:	mov	x0, #0x0                   	// #0
  448080:	add	x2, x2, x1
  448084:	str	x2, [x19, #320]
  448088:	b	447a78 <_obstack_memory_used@@Base+0xaa20>
  44808c:	ldp	x23, x24, [sp, #48]
  448090:	b	447aec <_obstack_memory_used@@Base+0xaa94>
  448094:	nop
  448098:	stp	x29, x30, [sp, #-64]!
  44809c:	mov	x29, sp
  4480a0:	stp	x19, x20, [sp, #16]
  4480a4:	mov	x19, x0
  4480a8:	mov	x20, x3
  4480ac:	stp	x21, x22, [sp, #32]
  4480b0:	mov	x21, x2
  4480b4:	stp	x23, x24, [sp, #48]
  4480b8:	mov	w23, w1
  4480bc:	cbz	x3, 448100 <_obstack_memory_used@@Base+0xb0a8>
  4480c0:	mov	x2, #0xe000000             	// #234881024
  4480c4:	mov	x4, #0x1                   	// #1
  4480c8:	movk	x2, #0x862, lsl #32
  4480cc:	ldr	w0, [x3, #16]
  4480d0:	cbnz	w0, 448100 <_obstack_memory_used@@Base+0xb0a8>
  4480d4:	ldr	x0, [x3, #8]
  4480d8:	ldr	w0, [x0]
  4480dc:	cmp	w0, #0x2b
  4480e0:	b.hi	4480f8 <_obstack_memory_used@@Base+0xb0a0>  // b.pmore
  4480e4:	lsl	x0, x4, x0
  4480e8:	tst	x0, x2
  4480ec:	b.ne	4481c8 <_obstack_memory_used@@Base+0xb170>  // b.any
  4480f0:	tst	x0, #0x1c00000000
  4480f4:	b.ne	448294 <_obstack_memory_used@@Base+0xb23c>  // b.any
  4480f8:	ldr	x3, [x3]
  4480fc:	cbnz	x3, 4480cc <_obstack_memory_used@@Base+0xb074>
  448100:	ldr	x22, [x19, #296]
  448104:	str	xzr, [x19, #296]
  448108:	mov	w1, w23
  44810c:	mov	x2, x20
  448110:	mov	x0, x19
  448114:	mov	w3, #0x0                   	// #0
  448118:	bl	448348 <_obstack_memory_used@@Base+0xb2f0>
  44811c:	ldr	x1, [x19, #256]
  448120:	cmp	x1, #0xff
  448124:	b.eq	448258 <_obstack_memory_used@@Base+0xb200>  // b.none
  448128:	add	x0, x1, #0x1
  44812c:	str	x0, [x19, #256]
  448130:	mov	w2, #0x28                  	// #40
  448134:	strb	w2, [x19, x1]
  448138:	strb	w2, [x19, #264]
  44813c:	ldr	x2, [x21]
  448140:	cbz	x2, 448154 <_obstack_memory_used@@Base+0xb0fc>
  448144:	mov	x0, x19
  448148:	mov	w1, w23
  44814c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  448150:	ldr	x0, [x19, #256]
  448154:	cmp	x0, #0xff
  448158:	b.eq	44819c <_obstack_memory_used@@Base+0xb144>  // b.none
  44815c:	add	x1, x0, #0x1
  448160:	str	x1, [x19, #256]
  448164:	mov	w3, #0x29                  	// #41
  448168:	strb	w3, [x19, x0]
  44816c:	mov	x2, x20
  448170:	strb	w3, [x19, #264]
  448174:	mov	w1, w23
  448178:	mov	x0, x19
  44817c:	mov	w3, #0x1                   	// #1
  448180:	bl	448348 <_obstack_memory_used@@Base+0xb2f0>
  448184:	ldp	x23, x24, [sp, #48]
  448188:	str	x22, [x19, #296]
  44818c:	ldp	x19, x20, [sp, #16]
  448190:	ldp	x21, x22, [sp, #32]
  448194:	ldp	x29, x30, [sp], #64
  448198:	ret
  44819c:	ldp	x3, x2, [x19, #272]
  4481a0:	strb	wzr, [x19, #255]
  4481a4:	mov	x1, x0
  4481a8:	mov	x0, x19
  4481ac:	blr	x3
  4481b0:	ldr	x2, [x19, #320]
  4481b4:	mov	x1, #0x1                   	// #1
  4481b8:	mov	x0, #0x0                   	// #0
  4481bc:	add	x2, x2, x1
  4481c0:	str	x2, [x19, #320]
  4481c4:	b	448160 <_obstack_memory_used@@Base+0xb108>
  4481c8:	ldrb	w0, [x19, #264]
  4481cc:	ldr	x1, [x19, #256]
  4481d0:	cmp	w0, #0x20
  4481d4:	b.eq	4481f8 <_obstack_memory_used@@Base+0xb1a0>  // b.none
  4481d8:	cmp	x1, #0xff
  4481dc:	b.eq	4482d8 <_obstack_memory_used@@Base+0xb280>  // b.none
  4481e0:	add	x2, x1, #0x1
  4481e4:	str	x2, [x19, #256]
  4481e8:	mov	w0, #0x20                  	// #32
  4481ec:	strb	w0, [x19, x1]
  4481f0:	mov	x1, x2
  4481f4:	strb	w0, [x19, #264]
  4481f8:	cmp	x1, #0xff
  4481fc:	b.eq	4482b0 <_obstack_memory_used@@Base+0xb258>  // b.none
  448200:	add	x0, x1, #0x1
  448204:	str	x0, [x19, #256]
  448208:	mov	w24, #0x28                  	// #40
  44820c:	strb	w24, [x19, x1]
  448210:	mov	x0, x19
  448214:	strb	w24, [x19, #264]
  448218:	mov	x2, x20
  44821c:	ldr	x22, [x19, #296]
  448220:	str	xzr, [x19, #296]
  448224:	mov	w1, w23
  448228:	mov	w3, #0x0                   	// #0
  44822c:	bl	448348 <_obstack_memory_used@@Base+0xb2f0>
  448230:	ldr	x0, [x19, #256]
  448234:	cmp	x0, #0xff
  448238:	b.eq	448304 <_obstack_memory_used@@Base+0xb2ac>  // b.none
  44823c:	add	x1, x0, #0x1
  448240:	str	x1, [x19, #256]
  448244:	mov	w2, #0x29                  	// #41
  448248:	strb	w2, [x19, x0]
  44824c:	strb	w2, [x19, #264]
  448250:	cmp	x1, #0xff
  448254:	b.ne	448128 <_obstack_memory_used@@Base+0xb0d0>  // b.any
  448258:	ldp	x3, x2, [x19, #272]
  44825c:	strb	wzr, [x19, #255]
  448260:	mov	x0, x19
  448264:	blr	x3
  448268:	mov	w1, #0x28                  	// #40
  44826c:	strb	w1, [x19]
  448270:	strb	w1, [x19, #264]
  448274:	mov	x0, #0x1                   	// #1
  448278:	ldr	x1, [x19, #320]
  44827c:	ldr	x2, [x21]
  448280:	add	x1, x1, x0
  448284:	str	x0, [x19, #256]
  448288:	str	x1, [x19, #320]
  44828c:	cbnz	x2, 448144 <_obstack_memory_used@@Base+0xb0ec>
  448290:	b	44815c <_obstack_memory_used@@Base+0xb104>
  448294:	ldrb	w0, [x19, #264]
  448298:	ldr	x1, [x19, #256]
  44829c:	and	w2, w0, #0xfffffffd
  4482a0:	cmp	w2, #0x28
  4482a4:	b.ne	4481d0 <_obstack_memory_used@@Base+0xb178>  // b.any
  4482a8:	cmp	x1, #0xff
  4482ac:	b.ne	448200 <_obstack_memory_used@@Base+0xb1a8>  // b.any
  4482b0:	ldp	x3, x2, [x19, #272]
  4482b4:	strb	wzr, [x19, #255]
  4482b8:	mov	x0, x19
  4482bc:	blr	x3
  4482c0:	ldr	x2, [x19, #320]
  4482c4:	mov	x0, #0x1                   	// #1
  4482c8:	mov	x1, #0x0                   	// #0
  4482cc:	add	x2, x2, x0
  4482d0:	str	x2, [x19, #320]
  4482d4:	b	448204 <_obstack_memory_used@@Base+0xb1ac>
  4482d8:	ldp	x3, x2, [x19, #272]
  4482dc:	strb	wzr, [x19, #255]
  4482e0:	mov	x0, x19
  4482e4:	blr	x3
  4482e8:	ldr	x0, [x19, #320]
  4482ec:	mov	w2, #0x20                  	// #32
  4482f0:	mov	x1, #0x1                   	// #1
  4482f4:	strb	w2, [x19]
  4482f8:	add	x0, x0, x1
  4482fc:	str	x0, [x19, #320]
  448300:	b	448200 <_obstack_memory_used@@Base+0xb1a8>
  448304:	ldp	x3, x2, [x19, #272]
  448308:	strb	wzr, [x19, #255]
  44830c:	mov	x1, x0
  448310:	mov	x0, x19
  448314:	blr	x3
  448318:	strb	w24, [x19, #264]
  44831c:	mov	w0, #0x2829                	// #10281
  448320:	strh	w0, [x19]
  448324:	ldr	x1, [x19, #320]
  448328:	mov	x0, #0x2                   	// #2
  44832c:	ldr	x2, [x21]
  448330:	add	x1, x1, #0x1
  448334:	str	x0, [x19, #256]
  448338:	str	x1, [x19, #320]
  44833c:	cbnz	x2, 448144 <_obstack_memory_used@@Base+0xb0ec>
  448340:	b	44815c <_obstack_memory_used@@Base+0xb104>
  448344:	nop
  448348:	cbz	x2, 4485a4 <_obstack_memory_used@@Base+0xb54c>
  44834c:	stp	x29, x30, [sp, #-112]!
  448350:	mov	x29, sp
  448354:	stp	x23, x24, [sp, #48]
  448358:	mov	x24, #0x1f                  	// #31
  44835c:	movk	x24, #0x1a, lsl #48
  448360:	stp	x19, x20, [sp, #16]
  448364:	mov	w20, w1
  448368:	mov	x19, x2
  44836c:	stp	x21, x22, [sp, #32]
  448370:	mov	w21, w3
  448374:	mov	w22, #0x1                   	// #1
  448378:	stp	x25, x26, [sp, #64]
  44837c:	mov	x26, x0
  448380:	mov	x25, #0x1                   	// #1
  448384:	b	4483c8 <_obstack_memory_used@@Base+0xb370>
  448388:	ldr	x1, [x19, #24]
  44838c:	cmp	w5, #0x29
  448390:	ldr	x23, [x26, #288]
  448394:	str	w22, [x19, #16]
  448398:	str	x1, [x26, #288]
  44839c:	b.eq	448414 <_obstack_memory_used@@Base+0xb3bc>  // b.none
  4483a0:	cmp	w5, #0x2a
  4483a4:	b.eq	448444 <_obstack_memory_used@@Base+0xb3ec>  // b.none
  4483a8:	cmp	w5, #0x2
  4483ac:	b.eq	448474 <_obstack_memory_used@@Base+0xb41c>  // b.none
  4483b0:	mov	w1, w20
  4483b4:	mov	x0, x26
  4483b8:	bl	447898 <_obstack_memory_used@@Base+0xa840>
  4483bc:	str	x23, [x26, #288]
  4483c0:	ldr	x19, [x19]
  4483c4:	cbz	x19, 44842c <_obstack_memory_used@@Base+0xb3d4>
  4483c8:	ldr	w2, [x26, #304]
  4483cc:	cbnz	w2, 44842c <_obstack_memory_used@@Base+0xb3d4>
  4483d0:	ldr	w2, [x19, #16]
  4483d4:	cbnz	w2, 4483c0 <_obstack_memory_used@@Base+0xb368>
  4483d8:	ldr	x2, [x19, #8]
  4483dc:	ldr	w5, [x2]
  4483e0:	cbnz	w21, 448388 <_obstack_memory_used@@Base+0xb330>
  4483e4:	sub	w4, w5, #0x1c
  4483e8:	cmp	w4, #0x34
  4483ec:	b.hi	448388 <_obstack_memory_used@@Base+0xb330>  // b.pmore
  4483f0:	lsl	x4, x25, x4
  4483f4:	tst	x4, x24
  4483f8:	b.ne	4483c0 <_obstack_memory_used@@Base+0xb368>  // b.any
  4483fc:	ldr	x1, [x19, #24]
  448400:	cmp	w5, #0x29
  448404:	ldr	x23, [x26, #288]
  448408:	str	w22, [x19, #16]
  44840c:	str	x1, [x26, #288]
  448410:	b.ne	4483a0 <_obstack_memory_used@@Base+0xb348>  // b.any
  448414:	ldr	x3, [x19]
  448418:	add	x2, x2, #0x10
  44841c:	mov	w1, w20
  448420:	mov	x0, x26
  448424:	bl	448098 <_obstack_memory_used@@Base+0xb040>
  448428:	str	x23, [x26, #288]
  44842c:	ldp	x19, x20, [sp, #16]
  448430:	ldp	x21, x22, [sp, #32]
  448434:	ldp	x23, x24, [sp, #48]
  448438:	ldp	x25, x26, [sp, #64]
  44843c:	ldp	x29, x30, [sp], #112
  448440:	ret
  448444:	ldr	x3, [x19]
  448448:	mov	w1, w20
  44844c:	mov	x0, x26
  448450:	add	x2, x2, #0x8
  448454:	bl	448718 <_obstack_memory_used@@Base+0xb6c0>
  448458:	str	x23, [x26, #288]
  44845c:	ldp	x19, x20, [sp, #16]
  448460:	ldp	x21, x22, [sp, #32]
  448464:	ldp	x23, x24, [sp, #48]
  448468:	ldp	x25, x26, [sp, #64]
  44846c:	ldp	x29, x30, [sp], #112
  448470:	ret
  448474:	ldr	x2, [x2, #8]
  448478:	mov	w1, w20
  44847c:	ldr	x21, [x26, #296]
  448480:	str	xzr, [x26, #296]
  448484:	mov	x0, x26
  448488:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  44848c:	str	x21, [x26, #296]
  448490:	tbz	w20, #2, 448548 <_obstack_memory_used@@Base+0xb4f0>
  448494:	ldr	x1, [x26, #256]
  448498:	add	x0, x1, #0x1
  44849c:	cmp	x1, #0xff
  4484a0:	b.ne	4484c8 <_obstack_memory_used@@Base+0xb470>  // b.any
  4484a4:	ldp	x3, x2, [x26, #272]
  4484a8:	strb	wzr, [x26, #255]
  4484ac:	mov	x0, x26
  4484b0:	blr	x3
  4484b4:	ldr	x2, [x26, #320]
  4484b8:	mov	x0, #0x1                   	// #1
  4484bc:	mov	x1, #0x0                   	// #0
  4484c0:	add	x2, x2, x0
  4484c4:	str	x2, [x26, #320]
  4484c8:	str	x0, [x26, #256]
  4484cc:	mov	w0, #0x2e                  	// #46
  4484d0:	strb	w0, [x26, x1]
  4484d4:	strb	w0, [x26, #264]
  4484d8:	ldr	x0, [x19, #8]
  4484dc:	ldr	x21, [x0, #16]
  4484e0:	ldr	w2, [x21]
  4484e4:	cmp	w2, #0x47
  4484e8:	b.eq	4485a8 <_obstack_memory_used@@Base+0xb550>  // b.none
  4484ec:	mov	x1, #0x1f                  	// #31
  4484f0:	mov	x3, #0x1                   	// #1
  4484f4:	movk	x1, #0x1a, lsl #48
  4484f8:	sub	w2, w2, #0x1c
  4484fc:	cmp	w2, #0x34
  448500:	b.hi	448510 <_obstack_memory_used@@Base+0xb4b8>  // b.pmore
  448504:	lsl	x2, x3, x2
  448508:	tst	x2, x1
  44850c:	b.ne	44853c <_obstack_memory_used@@Base+0xb4e4>  // b.any
  448510:	mov	x2, x21
  448514:	mov	w1, w20
  448518:	mov	x0, x26
  44851c:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  448520:	str	x23, [x26, #288]
  448524:	ldp	x19, x20, [sp, #16]
  448528:	ldp	x21, x22, [sp, #32]
  44852c:	ldp	x23, x24, [sp, #48]
  448530:	ldp	x25, x26, [sp, #64]
  448534:	ldp	x29, x30, [sp], #112
  448538:	ret
  44853c:	ldr	x21, [x21, #8]
  448540:	ldr	w2, [x21]
  448544:	b	4484f8 <_obstack_memory_used@@Base+0xb4a0>
  448548:	mov	x22, #0x0                   	// #0
  44854c:	mov	w21, #0x3a                  	// #58
  448550:	ldr	x1, [x26, #256]
  448554:	b	448574 <_obstack_memory_used@@Base+0xb51c>
  448558:	mov	x0, x1
  44855c:	add	x1, x1, #0x1
  448560:	str	x1, [x26, #256]
  448564:	strb	w21, [x26, x0]
  448568:	strb	w21, [x26, #264]
  44856c:	cbnz	x22, 4484d8 <_obstack_memory_used@@Base+0xb480>
  448570:	mov	x22, #0x1                   	// #1
  448574:	cmp	x1, #0xff
  448578:	b.ne	448558 <_obstack_memory_used@@Base+0xb500>  // b.any
  44857c:	ldp	x3, x2, [x26, #272]
  448580:	strb	wzr, [x26, #255]
  448584:	mov	x0, x26
  448588:	blr	x3
  44858c:	ldr	x2, [x26, #320]
  448590:	mov	x1, #0x1                   	// #1
  448594:	mov	x0, #0x0                   	// #0
  448598:	add	x2, x2, x1
  44859c:	str	x2, [x26, #320]
  4485a0:	b	448560 <_obstack_memory_used@@Base+0xb508>
  4485a4:	ret
  4485a8:	adrp	x24, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4485ac:	add	x24, x24, #0x8d0
  4485b0:	adrp	x22, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4485b4:	add	x24, x24, #0xd
  4485b8:	add	x22, x22, #0x8d1
  4485bc:	mov	w19, #0x7b                  	// #123
  4485c0:	ldr	x1, [x26, #256]
  4485c4:	b	4485e8 <_obstack_memory_used@@Base+0xb590>
  4485c8:	mov	x0, x1
  4485cc:	add	x1, x1, #0x1
  4485d0:	str	x1, [x26, #256]
  4485d4:	cmp	x22, x24
  4485d8:	strb	w19, [x26, x0]
  4485dc:	strb	w19, [x26, #264]
  4485e0:	b.eq	448618 <_obstack_memory_used@@Base+0xb5c0>  // b.none
  4485e4:	ldrb	w19, [x22], #1
  4485e8:	cmp	x1, #0xff
  4485ec:	b.ne	4485c8 <_obstack_memory_used@@Base+0xb570>  // b.any
  4485f0:	ldp	x3, x2, [x26, #272]
  4485f4:	strb	wzr, [x26, #255]
  4485f8:	mov	x0, x26
  4485fc:	blr	x3
  448600:	ldr	x2, [x26, #320]
  448604:	mov	x1, #0x1                   	// #1
  448608:	mov	x0, #0x0                   	// #0
  44860c:	add	x2, x2, x1
  448610:	str	x2, [x26, #320]
  448614:	b	4485d0 <_obstack_memory_used@@Base+0xb578>
  448618:	ldr	w2, [x21, #16]
  44861c:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  448620:	add	x1, x1, #0x8e0
  448624:	add	x19, sp, #0x50
  448628:	add	w2, w2, #0x1
  44862c:	mov	x0, x19
  448630:	bl	4026e0 <sprintf@plt>
  448634:	mov	x0, x19
  448638:	bl	402630 <strlen@plt>
  44863c:	ldr	x1, [x26, #256]
  448640:	cbz	x0, 4486a0 <_obstack_memory_used@@Base+0xb648>
  448644:	add	x24, x19, x0
  448648:	b	44866c <_obstack_memory_used@@Base+0xb614>
  44864c:	mov	x0, x1
  448650:	add	x1, x1, #0x1
  448654:	str	x1, [x26, #256]
  448658:	add	x19, x19, #0x1
  44865c:	strb	w22, [x26, x0]
  448660:	cmp	x24, x19
  448664:	strb	w22, [x26, #264]
  448668:	b.eq	4486a0 <_obstack_memory_used@@Base+0xb648>  // b.none
  44866c:	ldrb	w22, [x19]
  448670:	cmp	x1, #0xff
  448674:	b.ne	44864c <_obstack_memory_used@@Base+0xb5f4>  // b.any
  448678:	ldp	x3, x2, [x26, #272]
  44867c:	strb	wzr, [x26, #255]
  448680:	mov	x0, x26
  448684:	blr	x3
  448688:	ldr	x2, [x26, #320]
  44868c:	mov	x1, #0x1                   	// #1
  448690:	mov	x0, #0x0                   	// #0
  448694:	add	x2, x2, x1
  448698:	str	x2, [x26, #320]
  44869c:	b	448654 <_obstack_memory_used@@Base+0xb5fc>
  4486a0:	adrp	x19, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  4486a4:	add	x19, x19, #0x8e8
  4486a8:	add	x24, x19, #0x3
  4486ac:	mov	w22, #0x7d                  	// #125
  4486b0:	b	4486d8 <_obstack_memory_used@@Base+0xb680>
  4486b4:	mov	x0, x1
  4486b8:	add	x1, x1, #0x1
  4486bc:	str	x1, [x26, #256]
  4486c0:	add	x19, x19, #0x1
  4486c4:	strb	w22, [x26, x0]
  4486c8:	cmp	x24, x19
  4486cc:	strb	w22, [x26, #264]
  4486d0:	b.eq	448708 <_obstack_memory_used@@Base+0xb6b0>  // b.none
  4486d4:	ldrb	w22, [x19]
  4486d8:	cmp	x1, #0xff
  4486dc:	b.ne	4486b4 <_obstack_memory_used@@Base+0xb65c>  // b.any
  4486e0:	ldp	x3, x2, [x26, #272]
  4486e4:	strb	wzr, [x26, #255]
  4486e8:	mov	x0, x26
  4486ec:	blr	x3
  4486f0:	ldr	x2, [x26, #320]
  4486f4:	mov	x1, #0x1                   	// #1
  4486f8:	mov	x0, #0x0                   	// #0
  4486fc:	add	x2, x2, x1
  448700:	str	x2, [x26, #320]
  448704:	b	4486bc <_obstack_memory_used@@Base+0xb664>
  448708:	ldr	x21, [x21, #8]
  44870c:	ldr	w2, [x21]
  448710:	b	4484ec <_obstack_memory_used@@Base+0xb494>
  448714:	nop
  448718:	stp	x29, x30, [sp, #-64]!
  44871c:	mov	x29, sp
  448720:	stp	x19, x20, [sp, #16]
  448724:	mov	x19, x0
  448728:	mov	x20, x3
  44872c:	stp	x21, x22, [sp, #32]
  448730:	mov	x0, x3
  448734:	mov	w21, w1
  448738:	stp	x23, x24, [sp, #48]
  44873c:	mov	x22, x2
  448740:	cbz	x3, 44876c <_obstack_memory_used@@Base+0xb714>
  448744:	nop
  448748:	ldr	w4, [x0, #16]
  44874c:	cbz	w4, 448858 <_obstack_memory_used@@Base+0xb800>
  448750:	ldr	x0, [x0]
  448754:	cbnz	x0, 448748 <_obstack_memory_used@@Base+0xb6f0>
  448758:	mov	x2, x20
  44875c:	mov	w1, w21
  448760:	mov	x0, x19
  448764:	mov	w3, #0x0                   	// #0
  448768:	bl	448348 <_obstack_memory_used@@Base+0xb2f0>
  44876c:	ldr	x23, [x19, #256]
  448770:	cmp	x23, #0xff
  448774:	b.eq	448884 <_obstack_memory_used@@Base+0xb82c>  // b.none
  448778:	add	x1, x23, #0x1
  44877c:	str	x1, [x19, #256]
  448780:	mov	w0, #0x20                  	// #32
  448784:	strb	w0, [x19, x23]
  448788:	strb	w0, [x19, #264]
  44878c:	cmp	x1, #0xff
  448790:	b.eq	44881c <_obstack_memory_used@@Base+0xb7c4>  // b.none
  448794:	add	x0, x1, #0x1
  448798:	str	x0, [x19, #256]
  44879c:	mov	w2, #0x5b                  	// #91
  4487a0:	strb	w2, [x19, x1]
  4487a4:	strb	w2, [x19, #264]
  4487a8:	ldr	x2, [x22]
  4487ac:	cbz	x2, 4487c0 <_obstack_memory_used@@Base+0xb768>
  4487b0:	mov	x0, x19
  4487b4:	mov	w1, w21
  4487b8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4487bc:	ldr	x0, [x19, #256]
  4487c0:	cmp	x0, #0xff
  4487c4:	b.eq	4487f0 <_obstack_memory_used@@Base+0xb798>  // b.none
  4487c8:	add	x1, x0, #0x1
  4487cc:	str	x1, [x19, #256]
  4487d0:	mov	w1, #0x5d                  	// #93
  4487d4:	strb	w1, [x19, x0]
  4487d8:	strb	w1, [x19, #264]
  4487dc:	ldp	x19, x20, [sp, #16]
  4487e0:	ldp	x21, x22, [sp, #32]
  4487e4:	ldp	x23, x24, [sp, #48]
  4487e8:	ldp	x29, x30, [sp], #64
  4487ec:	ret
  4487f0:	ldp	x3, x2, [x19, #272]
  4487f4:	strb	wzr, [x19, #255]
  4487f8:	mov	x1, x0
  4487fc:	mov	x0, x19
  448800:	blr	x3
  448804:	ldr	x2, [x19, #320]
  448808:	mov	x1, #0x1                   	// #1
  44880c:	mov	x0, #0x0                   	// #0
  448810:	add	x2, x2, x1
  448814:	str	x2, [x19, #320]
  448818:	b	4487cc <_obstack_memory_used@@Base+0xb774>
  44881c:	ldp	x3, x2, [x19, #272]
  448820:	strb	wzr, [x19, #255]
  448824:	mov	x0, x19
  448828:	blr	x3
  44882c:	mov	w1, #0x5b                  	// #91
  448830:	strb	w1, [x19]
  448834:	strb	w1, [x19, #264]
  448838:	mov	x0, #0x1                   	// #1
  44883c:	ldr	x1, [x19, #320]
  448840:	ldr	x2, [x22]
  448844:	add	x1, x1, x0
  448848:	str	x0, [x19, #256]
  44884c:	str	x1, [x19, #320]
  448850:	cbnz	x2, 4487b0 <_obstack_memory_used@@Base+0xb758>
  448854:	b	4487c8 <_obstack_memory_used@@Base+0xb770>
  448858:	ldr	x0, [x0, #8]
  44885c:	ldr	w0, [x0]
  448860:	cmp	w0, #0x2a
  448864:	b.ne	4488c8 <_obstack_memory_used@@Base+0xb870>  // b.any
  448868:	mov	w1, w21
  44886c:	mov	x2, x20
  448870:	mov	x0, x19
  448874:	mov	w3, #0x0                   	// #0
  448878:	bl	448348 <_obstack_memory_used@@Base+0xb2f0>
  44887c:	ldr	x1, [x19, #256]
  448880:	b	44878c <_obstack_memory_used@@Base+0xb734>
  448884:	ldp	x3, x2, [x19, #272]
  448888:	strb	wzr, [x19, #255]
  44888c:	mov	x1, x23
  448890:	mov	x0, x19
  448894:	blr	x3
  448898:	mov	w1, #0x5b20                	// #23328
  44889c:	mov	w0, #0x5b                  	// #91
  4488a0:	strh	w1, [x19]
  4488a4:	strb	w0, [x19, #264]
  4488a8:	mov	x0, #0x2                   	// #2
  4488ac:	ldr	x1, [x19, #320]
  4488b0:	ldr	x2, [x22]
  4488b4:	add	x1, x1, #0x1
  4488b8:	str	x0, [x19, #256]
  4488bc:	str	x1, [x19, #320]
  4488c0:	cbnz	x2, 4487b0 <_obstack_memory_used@@Base+0xb758>
  4488c4:	b	4487c8 <_obstack_memory_used@@Base+0xb770>
  4488c8:	mov	w24, #0x20                  	// #32
  4488cc:	mov	x23, #0x0                   	// #0
  4488d0:	ldr	x1, [x19, #256]
  4488d4:	b	4488fc <_obstack_memory_used@@Base+0xb8a4>
  4488d8:	mov	x0, x1
  4488dc:	add	x1, x1, #0x1
  4488e0:	str	x1, [x19, #256]
  4488e4:	cmp	x23, #0x1
  4488e8:	strb	w24, [x19, x0]
  4488ec:	strb	w24, [x19, #264]
  4488f0:	mov	w24, #0x28                  	// #40
  4488f4:	b.eq	448940 <_obstack_memory_used@@Base+0xb8e8>  // b.none
  4488f8:	mov	x23, #0x1                   	// #1
  4488fc:	cmp	x1, #0xff
  448900:	b.ne	4488d8 <_obstack_memory_used@@Base+0xb880>  // b.any
  448904:	ldp	x3, x2, [x19, #272]
  448908:	strb	wzr, [x19, #255]
  44890c:	mov	x0, x19
  448910:	blr	x3
  448914:	ldr	x2, [x19, #320]
  448918:	mov	x0, #0x0                   	// #0
  44891c:	mov	x1, #0x1                   	// #1
  448920:	str	x1, [x19, #256]
  448924:	add	x2, x2, x1
  448928:	str	x2, [x19, #320]
  44892c:	strb	w24, [x19, x0]
  448930:	cmp	x23, #0x1
  448934:	strb	w24, [x19, #264]
  448938:	mov	w24, #0x28                  	// #40
  44893c:	b.ne	4488f8 <_obstack_memory_used@@Base+0xb8a0>  // b.any
  448940:	mov	w1, w21
  448944:	mov	x2, x20
  448948:	mov	x0, x19
  44894c:	mov	w3, #0x0                   	// #0
  448950:	bl	448348 <_obstack_memory_used@@Base+0xb2f0>
  448954:	ldr	x1, [x19, #256]
  448958:	cmp	x1, #0xff
  44895c:	b.eq	448978 <_obstack_memory_used@@Base+0xb920>  // b.none
  448960:	add	x23, x1, #0x1
  448964:	str	x23, [x19, #256]
  448968:	mov	w0, #0x29                  	// #41
  44896c:	strb	w0, [x19, x1]
  448970:	strb	w0, [x19, #264]
  448974:	b	448770 <_obstack_memory_used@@Base+0xb718>
  448978:	ldp	x3, x2, [x19, #272]
  44897c:	strb	wzr, [x19, #255]
  448980:	mov	x0, x19
  448984:	blr	x3
  448988:	ldr	x0, [x19, #320]
  44898c:	mov	w1, #0x29                  	// #41
  448990:	strb	w1, [x19]
  448994:	add	x0, x0, #0x1
  448998:	str	x0, [x19, #320]
  44899c:	b	448778 <_obstack_memory_used@@Base+0xb720>
  4489a0:	ldr	w4, [x2]
  4489a4:	cmp	w4, #0x32
  4489a8:	b.eq	4489b0 <_obstack_memory_used@@Base+0xb958>  // b.none
  4489ac:	b	447800 <_obstack_memory_used@@Base+0xa7a8>
  4489b0:	stp	x29, x30, [sp, #-48]!
  4489b4:	mov	x29, sp
  4489b8:	stp	x19, x20, [sp, #16]
  4489bc:	mov	x19, x0
  4489c0:	ldr	x0, [x2, #8]
  4489c4:	stp	x21, x22, [sp, #32]
  4489c8:	ldrsw	x22, [x0, #16]
  4489cc:	ldr	x20, [x0, #8]
  4489d0:	cbz	x22, 448a48 <_obstack_memory_used@@Base+0xb9f0>
  4489d4:	add	x22, x20, x22
  4489d8:	ldr	x1, [x19, #256]
  4489dc:	b	448a00 <_obstack_memory_used@@Base+0xb9a8>
  4489e0:	mov	x2, x1
  4489e4:	add	x1, x1, #0x1
  4489e8:	str	x1, [x19, #256]
  4489ec:	add	x20, x20, #0x1
  4489f0:	cmp	x20, x22
  4489f4:	strb	w21, [x19, x2]
  4489f8:	strb	w21, [x19, #264]
  4489fc:	b.eq	448a48 <_obstack_memory_used@@Base+0xb9f0>  // b.none
  448a00:	ldrb	w21, [x20]
  448a04:	cmp	x1, #0xff
  448a08:	b.ne	4489e0 <_obstack_memory_used@@Base+0xb988>  // b.any
  448a0c:	ldp	x3, x2, [x19, #272]
  448a10:	strb	wzr, [x19, #255]
  448a14:	mov	x0, x19
  448a18:	add	x20, x20, #0x1
  448a1c:	blr	x3
  448a20:	ldr	x0, [x19, #320]
  448a24:	mov	x2, #0x0                   	// #0
  448a28:	mov	x1, #0x1                   	// #1
  448a2c:	str	x1, [x19, #256]
  448a30:	add	x0, x0, x1
  448a34:	str	x0, [x19, #320]
  448a38:	strb	w21, [x19, x2]
  448a3c:	cmp	x20, x22
  448a40:	strb	w21, [x19, #264]
  448a44:	b.ne	448a00 <_obstack_memory_used@@Base+0xb9a8>  // b.any
  448a48:	ldp	x19, x20, [sp, #16]
  448a4c:	ldp	x21, x22, [sp, #32]
  448a50:	ldp	x29, x30, [sp], #48
  448a54:	ret
  448a58:	stp	x29, x30, [sp, #-48]!
  448a5c:	mov	x29, sp
  448a60:	str	x21, [sp, #32]
  448a64:	mov	w21, w1
  448a68:	ldr	w1, [x2]
  448a6c:	stp	x19, x20, [sp, #16]
  448a70:	mov	x20, x2
  448a74:	cmp	w1, #0x31
  448a78:	mov	x19, x0
  448a7c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  448a80:	b.ls	448b10 <_obstack_memory_used@@Base+0xbab8>  // b.plast
  448a84:	cmp	w1, #0x6
  448a88:	b.eq	448b10 <_obstack_memory_used@@Base+0xbab8>  // b.none
  448a8c:	ldr	x1, [x0, #256]
  448a90:	cmp	x1, #0xff
  448a94:	b.eq	448b2c <_obstack_memory_used@@Base+0xbad4>  // b.none
  448a98:	add	x0, x1, #0x1
  448a9c:	str	x0, [x19, #256]
  448aa0:	mov	w0, #0x28                  	// #40
  448aa4:	strb	w0, [x19, x1]
  448aa8:	mov	x2, x20
  448aac:	strb	w0, [x19, #264]
  448ab0:	mov	w1, w21
  448ab4:	mov	x0, x19
  448ab8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  448abc:	ldr	x1, [x19, #256]
  448ac0:	add	x0, x1, #0x1
  448ac4:	cmp	x1, #0xff
  448ac8:	b.ne	448af0 <_obstack_memory_used@@Base+0xba98>  // b.any
  448acc:	ldp	x3, x2, [x19, #272]
  448ad0:	strb	wzr, [x19, #255]
  448ad4:	mov	x0, x19
  448ad8:	blr	x3
  448adc:	ldr	x2, [x19, #320]
  448ae0:	mov	x0, #0x1                   	// #1
  448ae4:	mov	x1, #0x0                   	// #0
  448ae8:	add	x2, x2, x0
  448aec:	str	x2, [x19, #320]
  448af0:	str	x0, [x19, #256]
  448af4:	mov	w0, #0x29                  	// #41
  448af8:	strb	w0, [x19, x1]
  448afc:	strb	w0, [x19, #264]
  448b00:	ldp	x19, x20, [sp, #16]
  448b04:	ldr	x21, [sp, #32]
  448b08:	ldp	x29, x30, [sp], #48
  448b0c:	ret
  448b10:	mov	x2, x20
  448b14:	mov	w1, w21
  448b18:	mov	x0, x19
  448b1c:	ldp	x19, x20, [sp, #16]
  448b20:	ldr	x21, [sp, #32]
  448b24:	ldp	x29, x30, [sp], #48
  448b28:	b	447800 <_obstack_memory_used@@Base+0xa7a8>
  448b2c:	ldp	x3, x2, [x0, #272]
  448b30:	strb	wzr, [x0, #255]
  448b34:	blr	x3
  448b38:	ldr	x2, [x19, #320]
  448b3c:	mov	x0, #0x1                   	// #1
  448b40:	mov	x1, #0x0                   	// #0
  448b44:	add	x2, x2, x0
  448b48:	str	x2, [x19, #320]
  448b4c:	b	448a9c <_obstack_memory_used@@Base+0xba44>
  448b50:	stp	x29, x30, [sp, #-80]!
  448b54:	mov	x29, sp
  448b58:	stp	x19, x20, [sp, #16]
  448b5c:	mov	x19, x0
  448b60:	ldr	x0, [x2, #8]
  448b64:	stp	x21, x22, [sp, #32]
  448b68:	mov	w22, w1
  448b6c:	ldr	x0, [x0]
  448b70:	ldrb	w1, [x0]
  448b74:	cmp	w1, #0x66
  448b78:	b.ne	448d0c <_obstack_memory_used@@Base+0xbcb4>  // b.any
  448b7c:	ldr	x1, [x3]
  448b80:	stp	x23, x24, [sp, #48]
  448b84:	stp	x25, x26, [sp, #64]
  448b88:	mov	x25, #0x0                   	// #0
  448b8c:	ldp	x23, x26, [x1, #8]
  448b90:	ldr	w1, [x26]
  448b94:	cmp	w1, #0x3c
  448b98:	b.eq	448dd4 <_obstack_memory_used@@Base+0xbd7c>  // b.none
  448b9c:	ldr	w21, [x19, #316]
  448ba0:	mov	w1, #0xffffffff            	// #-1
  448ba4:	str	w1, [x19, #316]
  448ba8:	ldrb	w0, [x0, #1]
  448bac:	cmp	w0, #0x6c
  448bb0:	b.eq	448df4 <_obstack_memory_used@@Base+0xbd9c>  // b.none
  448bb4:	b.hi	448d20 <_obstack_memory_used@@Base+0xbcc8>  // b.pmore
  448bb8:	cmp	w0, #0x4c
  448bbc:	b.eq	448bc8 <_obstack_memory_used@@Base+0xbb70>  // b.none
  448bc0:	cmp	w0, #0x52
  448bc4:	b.ne	448cec <_obstack_memory_used@@Base+0xbc94>  // b.any
  448bc8:	ldr	x1, [x19, #256]
  448bcc:	add	x0, x1, #0x1
  448bd0:	cmp	x1, #0xff
  448bd4:	b.eq	448eb4 <_obstack_memory_used@@Base+0xbe5c>  // b.none
  448bd8:	str	x0, [x19, #256]
  448bdc:	mov	w0, #0x28                  	// #40
  448be0:	strb	w0, [x19, x1]
  448be4:	mov	x2, x26
  448be8:	strb	w0, [x19, #264]
  448bec:	mov	w1, w22
  448bf0:	mov	x0, x19
  448bf4:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  448bf8:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  448bfc:	add	x20, x20, #0xb60
  448c00:	mov	w1, w22
  448c04:	mov	x2, x23
  448c08:	mov	x0, x19
  448c0c:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  448c10:	add	x26, x20, #0x3
  448c14:	mov	w24, #0x2e                  	// #46
  448c18:	ldr	x1, [x19, #256]
  448c1c:	b	448c44 <_obstack_memory_used@@Base+0xbbec>
  448c20:	mov	x0, x1
  448c24:	add	x1, x1, #0x1
  448c28:	str	x1, [x19, #256]
  448c2c:	add	x20, x20, #0x1
  448c30:	cmp	x26, x20
  448c34:	strb	w24, [x19, x0]
  448c38:	strb	w24, [x19, #264]
  448c3c:	b.eq	448c88 <_obstack_memory_used@@Base+0xbc30>  // b.none
  448c40:	ldrb	w24, [x20]
  448c44:	cmp	x1, #0xff
  448c48:	b.ne	448c20 <_obstack_memory_used@@Base+0xbbc8>  // b.any
  448c4c:	ldp	x3, x2, [x19, #272]
  448c50:	strb	wzr, [x19, #255]
  448c54:	mov	x0, x19
  448c58:	add	x20, x20, #0x1
  448c5c:	blr	x3
  448c60:	ldr	x2, [x19, #320]
  448c64:	mov	x0, #0x0                   	// #0
  448c68:	mov	x1, #0x1                   	// #1
  448c6c:	str	x1, [x19, #256]
  448c70:	add	x2, x2, x1
  448c74:	str	x2, [x19, #320]
  448c78:	strb	w24, [x19, x0]
  448c7c:	cmp	x26, x20
  448c80:	strb	w24, [x19, #264]
  448c84:	b.ne	448c40 <_obstack_memory_used@@Base+0xbbe8>  // b.any
  448c88:	mov	x2, x23
  448c8c:	mov	w1, w22
  448c90:	mov	x0, x19
  448c94:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  448c98:	mov	x2, x25
  448c9c:	mov	w1, w22
  448ca0:	mov	x0, x19
  448ca4:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  448ca8:	ldr	x1, [x19, #256]
  448cac:	add	x0, x1, #0x1
  448cb0:	cmp	x1, #0xff
  448cb4:	b.ne	448cdc <_obstack_memory_used@@Base+0xbc84>  // b.any
  448cb8:	ldp	x3, x2, [x19, #272]
  448cbc:	strb	wzr, [x19, #255]
  448cc0:	mov	x0, x19
  448cc4:	blr	x3
  448cc8:	ldr	x2, [x19, #320]
  448ccc:	mov	x0, #0x1                   	// #1
  448cd0:	mov	x1, #0x0                   	// #0
  448cd4:	add	x2, x2, x0
  448cd8:	str	x2, [x19, #320]
  448cdc:	str	x0, [x19, #256]
  448ce0:	mov	w0, #0x29                  	// #41
  448ce4:	strb	w0, [x19, x1]
  448ce8:	strb	w0, [x19, #264]
  448cec:	ldp	x23, x24, [sp, #48]
  448cf0:	mov	w0, #0x1                   	// #1
  448cf4:	ldp	x25, x26, [sp, #64]
  448cf8:	str	w21, [x19, #316]
  448cfc:	ldp	x19, x20, [sp, #16]
  448d00:	ldp	x21, x22, [sp, #32]
  448d04:	ldp	x29, x30, [sp], #80
  448d08:	ret
  448d0c:	mov	w0, #0x0                   	// #0
  448d10:	ldp	x19, x20, [sp, #16]
  448d14:	ldp	x21, x22, [sp, #32]
  448d18:	ldp	x29, x30, [sp], #80
  448d1c:	ret
  448d20:	cmp	w0, #0x72
  448d24:	b.ne	448cec <_obstack_memory_used@@Base+0xbc94>  // b.any
  448d28:	ldr	x1, [x19, #256]
  448d2c:	add	x0, x1, #0x1
  448d30:	cmp	x1, #0xff
  448d34:	b.eq	448e8c <_obstack_memory_used@@Base+0xbe34>  // b.none
  448d38:	str	x0, [x19, #256]
  448d3c:	mov	w0, #0x28                  	// #40
  448d40:	strb	w0, [x19, x1]
  448d44:	mov	x2, x26
  448d48:	strb	w0, [x19, #264]
  448d4c:	mov	w1, w22
  448d50:	mov	x0, x19
  448d54:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  448d58:	bl	448a58 <_obstack_memory_used@@Base+0xba00>
  448d5c:	add	x20, x20, #0xc80
  448d60:	mov	w1, w22
  448d64:	mov	x2, x23
  448d68:	mov	x0, x19
  448d6c:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  448d70:	add	x22, x20, #0x4
  448d74:	mov	w24, #0x2e                  	// #46
  448d78:	ldr	x1, [x19, #256]
  448d7c:	b	448da4 <_obstack_memory_used@@Base+0xbd4c>
  448d80:	mov	x0, x1
  448d84:	add	x1, x1, #0x1
  448d88:	str	x1, [x19, #256]
  448d8c:	add	x20, x20, #0x1
  448d90:	strb	w24, [x19, x0]
  448d94:	cmp	x20, x22
  448d98:	strb	w24, [x19, #264]
  448d9c:	b.eq	448cec <_obstack_memory_used@@Base+0xbc94>  // b.none
  448da0:	ldrb	w24, [x20]
  448da4:	cmp	x1, #0xff
  448da8:	b.ne	448d80 <_obstack_memory_used@@Base+0xbd28>  // b.any
  448dac:	ldp	x3, x2, [x19, #272]
  448db0:	strb	wzr, [x19, #255]
  448db4:	mov	x0, x19
  448db8:	blr	x3
  448dbc:	ldr	x2, [x19, #320]
  448dc0:	mov	x1, #0x1                   	// #1
  448dc4:	mov	x0, #0x0                   	// #0
  448dc8:	add	x2, x2, x1
  448dcc:	str	x2, [x19, #320]
  448dd0:	b	448d88 <_obstack_memory_used@@Base+0xbd30>
  448dd4:	ldr	w21, [x19, #316]
  448dd8:	mov	w1, #0xffffffff            	// #-1
  448ddc:	ldr	x25, [x26, #16]
  448de0:	ldr	x26, [x26, #8]
  448de4:	str	w1, [x19, #316]
  448de8:	ldrb	w0, [x0, #1]
  448dec:	cmp	w0, #0x6c
  448df0:	b.ne	448bb4 <_obstack_memory_used@@Base+0xbb5c>  // b.any
  448df4:	adrp	x20, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  448df8:	add	x20, x20, #0xc78
  448dfc:	add	x25, x20, #0x4
  448e00:	mov	w24, #0x28                  	// #40
  448e04:	ldr	x1, [x19, #256]
  448e08:	b	448e30 <_obstack_memory_used@@Base+0xbdd8>
  448e0c:	mov	x0, x1
  448e10:	add	x1, x1, #0x1
  448e14:	str	x1, [x19, #256]
  448e18:	add	x20, x20, #0x1
  448e1c:	cmp	x25, x20
  448e20:	strb	w24, [x19, x0]
  448e24:	strb	w24, [x19, #264]
  448e28:	b.eq	448e74 <_obstack_memory_used@@Base+0xbe1c>  // b.none
  448e2c:	ldrb	w24, [x20]
  448e30:	cmp	x1, #0xff
  448e34:	b.ne	448e0c <_obstack_memory_used@@Base+0xbdb4>  // b.any
  448e38:	ldp	x3, x2, [x19, #272]
  448e3c:	strb	wzr, [x19, #255]
  448e40:	mov	x0, x19
  448e44:	add	x20, x20, #0x1
  448e48:	blr	x3
  448e4c:	ldr	x2, [x19, #320]
  448e50:	mov	x0, #0x0                   	// #0
  448e54:	mov	x1, #0x1                   	// #1
  448e58:	str	x1, [x19, #256]
  448e5c:	add	x2, x2, x1
  448e60:	str	x2, [x19, #320]
  448e64:	strb	w24, [x19, x0]
  448e68:	cmp	x25, x20
  448e6c:	strb	w24, [x19, #264]
  448e70:	b.ne	448e2c <_obstack_memory_used@@Base+0xbdd4>  // b.any
  448e74:	mov	x2, x23
  448e78:	mov	w1, w22
  448e7c:	mov	x0, x19
  448e80:	bl	4489a0 <_obstack_memory_used@@Base+0xb948>
  448e84:	mov	x2, x26
  448e88:	b	448c9c <_obstack_memory_used@@Base+0xbc44>
  448e8c:	ldp	x3, x2, [x19, #272]
  448e90:	strb	wzr, [x19, #255]
  448e94:	mov	x0, x19
  448e98:	blr	x3
  448e9c:	ldr	x2, [x19, #320]
  448ea0:	mov	x0, #0x1                   	// #1
  448ea4:	mov	x1, #0x0                   	// #0
  448ea8:	add	x2, x2, x0
  448eac:	str	x2, [x19, #320]
  448eb0:	b	448d38 <_obstack_memory_used@@Base+0xbce0>
  448eb4:	ldp	x3, x2, [x19, #272]
  448eb8:	strb	wzr, [x19, #255]
  448ebc:	mov	x0, x19
  448ec0:	blr	x3
  448ec4:	ldr	x2, [x19, #320]
  448ec8:	mov	x0, #0x1                   	// #1
  448ecc:	mov	x1, #0x0                   	// #0
  448ed0:	add	x2, x2, x0
  448ed4:	str	x2, [x19, #320]
  448ed8:	b	448bd8 <_obstack_memory_used@@Base+0xbb80>
  448edc:	nop
  448ee0:	sub	sp, sp, #0x230
  448ee4:	stp	x29, x30, [sp]
  448ee8:	mov	x29, sp
  448eec:	stp	x19, x20, [sp, #16]
  448ef0:	mov	x19, x0
  448ef4:	mov	x20, x1
  448ef8:	stp	x21, x22, [sp, #32]
  448efc:	mov	x21, x2
  448f00:	stp	x23, x24, [sp, #48]
  448f04:	stp	x25, x26, [sp, #64]
  448f08:	str	x27, [sp, #80]
  448f0c:	ldrb	w24, [x0]
  448f10:	cmp	w24, #0x5f
  448f14:	b.eq	4490c0 <_obstack_memory_used@@Base+0xc068>  // b.none
  448f18:	adrp	x1, 45b000 <_obstack_memory_used@@Base+0x1dfa8>
  448f1c:	mov	x0, x19
  448f20:	add	x1, x1, #0xc88
  448f24:	mov	x2, #0x8                   	// #8
  448f28:	mov	w23, #0x0                   	// #0
  448f2c:	bl	4027f0 <strncmp@plt>
  448f30:	cbnz	w0, 448f80 <_obstack_memory_used@@Base+0xbf28>
  448f34:	ldrb	w0, [x19, #8]
  448f38:	mov	w2, #0x5f                  	// #95
  448f3c:	mov	w1, #0x24                  	// #36
  448f40:	cmp	w0, #0x2e
  448f44:	ccmp	w0, w2, #0x4, ne  // ne = any
  448f48:	ccmp	w0, w1, #0x4, ne  // ne = any
  448f4c:	b.ne	448f80 <_obstack_memory_used@@Base+0xbf28>  // b.any
  448f50:	ldrb	w0, [x19, #9]
  448f54:	mov	w1, #0x49                  	// #73
  448f58:	cmp	w0, #0x44
  448f5c:	ccmp	w0, w1, #0x4, ne  // ne = any
  448f60:	b.ne	448f80 <_obstack_memory_used@@Base+0xbf28>  // b.any
  448f64:	ldrb	w1, [x19, #10]
  448f68:	cmp	w1, w2
  448f6c:	b.ne	448f80 <_obstack_memory_used@@Base+0xbf28>  // b.any
  448f70:	cmp	w0, #0x49
  448f74:	cset	w23, ne  // ne = any
  448f78:	add	w23, w23, #0x2
  448f7c:	nop
  448f80:	mov	x0, x19
  448f84:	bl	402630 <strlen@plt>
  448f88:	mov	x3, x0
  448f8c:	mov	w1, #0x11                  	// #17
  448f90:	add	x0, x19, x0
  448f94:	stp	x19, x0, [x29, #96]
  448f98:	lsl	w4, w3, #1
  448f9c:	str	w1, [x29, #112]
  448fa0:	cmp	w4, #0x800
  448fa4:	str	x19, [x29, #120]
  448fa8:	mov	w0, #0x0                   	// #0
  448fac:	stp	wzr, w4, [x29, #136]
  448fb0:	stp	wzr, w3, [x29, #152]
  448fb4:	stp	xzr, xzr, [x29, #160]
  448fb8:	str	xzr, [x29, #176]
  448fbc:	b.hi	44909c <_obstack_memory_used@@Base+0xc044>  // b.pmore
  448fc0:	mov	x22, sp
  448fc4:	mov	w27, #0x18                  	// #24
  448fc8:	sbfiz	x3, x3, #3, #32
  448fcc:	cmp	w23, #0x1
  448fd0:	add	x3, x3, #0xf
  448fd4:	smsubl	x0, w4, w27, x22
  448fd8:	and	x3, x3, #0xfffffffffffffff0
  448fdc:	mov	sp, x0
  448fe0:	mov	x25, sp
  448fe4:	sub	sp, sp, x3
  448fe8:	mov	x0, sp
  448fec:	str	x25, [x29, #128]
  448ff0:	str	x0, [x29, #144]
  448ff4:	b.eq	449100 <_obstack_memory_used@@Base+0xc0a8>  // b.none
  448ff8:	sub	w0, w23, #0x2
  448ffc:	cmp	w0, #0x1
  449000:	b.hi	449144 <_obstack_memory_used@@Base+0xc0ec>  // b.pmore
  449004:	cmp	w23, #0x2
  449008:	ldrb	w0, [x19, #11]
  44900c:	add	x24, x19, #0xb
  449010:	str	x24, [x29, #120]
  449014:	cset	w1, ne  // ne = any
  449018:	cmp	w0, #0x5f
  44901c:	add	w23, w1, #0x44
  449020:	b.eq	4490d4 <_obstack_memory_used@@Base+0xc07c>  // b.none
  449024:	cmp	w4, #0x0
  449028:	b.le	449228 <_obstack_memory_used@@Base+0xc1d0>
  44902c:	mov	x0, x24
  449030:	bl	402630 <strlen@plt>
  449034:	mov	w1, #0x1                   	// #1
  449038:	str	wzr, [x25, #4]
  44903c:	str	w1, [x29, #136]
  449040:	cmp	w0, #0x0
  449044:	b.le	449228 <_obstack_memory_used@@Base+0xc1d0>
  449048:	add	x26, x29, #0x60
  44904c:	str	wzr, [x25]
  449050:	str	x24, [x25, #8]
  449054:	str	w0, [x25, #16]
  449058:	mov	w1, w23
  44905c:	mov	x2, x25
  449060:	mov	x3, #0x0                   	// #0
  449064:	mov	x0, x26
  449068:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  44906c:	mov	x19, x0
  449070:	ldr	x23, [x29, #120]
  449074:	mov	x0, x23
  449078:	bl	402630 <strlen@plt>
  44907c:	add	x1, x23, x0
  449080:	str	x1, [x29, #120]
  449084:	ldrb	w0, [x23, x0]
  449088:	cmp	w0, #0x0
  44908c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  449090:	b.ne	449164 <_obstack_memory_used@@Base+0xc10c>  // b.any
  449094:	mov	sp, x22
  449098:	mov	w0, #0x0                   	// #0
  44909c:	mov	sp, x29
  4490a0:	ldp	x29, x30, [sp]
  4490a4:	ldp	x19, x20, [sp, #16]
  4490a8:	ldp	x21, x22, [sp, #32]
  4490ac:	ldp	x23, x24, [sp, #48]
  4490b0:	ldp	x25, x26, [sp, #64]
  4490b4:	ldr	x27, [sp, #80]
  4490b8:	add	sp, sp, #0x230
  4490bc:	ret
  4490c0:	ldrb	w0, [x0, #1]
  4490c4:	mov	w23, #0x1                   	// #1
  4490c8:	cmp	w0, #0x5a
  4490cc:	b.ne	448f18 <_obstack_memory_used@@Base+0xbec0>  // b.any
  4490d0:	b	448f80 <_obstack_memory_used@@Base+0xbf28>
  4490d4:	ldrb	w0, [x19, #12]
  4490d8:	cmp	w0, #0x5a
  4490dc:	b.ne	449024 <_obstack_memory_used@@Base+0xbfcc>  // b.any
  4490e0:	add	x26, x29, #0x60
  4490e4:	add	x19, x19, #0xd
  4490e8:	mov	x0, x26
  4490ec:	mov	w1, #0x0                   	// #0
  4490f0:	str	x19, [x29, #120]
  4490f4:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  4490f8:	mov	x25, x0
  4490fc:	b	449058 <_obstack_memory_used@@Base+0xc000>
  449100:	cmp	w24, #0x5f
  449104:	b.ne	449094 <_obstack_memory_used@@Base+0xc03c>  // b.any
  449108:	ldrb	w0, [x19, #1]
  44910c:	cmp	w0, #0x5a
  449110:	b.ne	449094 <_obstack_memory_used@@Base+0xc03c>  // b.any
  449114:	add	x26, x29, #0x60
  449118:	add	x19, x19, #0x2
  44911c:	mov	w1, w23
  449120:	mov	x0, x26
  449124:	str	x19, [x29, #120]
  449128:	bl	441378 <_obstack_memory_used@@Base+0x4320>
  44912c:	ldr	w3, [x29, #112]
  449130:	mov	x19, x0
  449134:	tbnz	w3, #0, 449234 <_obstack_memory_used@@Base+0xc1dc>
  449138:	ldr	x0, [x29, #120]
  44913c:	ldrb	w0, [x0]
  449140:	b	449088 <_obstack_memory_used@@Base+0xc030>
  449144:	add	x0, x29, #0x60
  449148:	bl	4420c0 <_obstack_memory_used@@Base+0x5068>
  44914c:	ldr	x3, [x29, #120]
  449150:	mov	x19, x0
  449154:	ldrb	w0, [x3]
  449158:	cmp	w0, #0x0
  44915c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  449160:	b.eq	449094 <_obstack_memory_used@@Base+0xc03c>  // b.none
  449164:	add	x2, x29, #0x208
  449168:	add	x23, x29, #0xb8
  44916c:	mov	x0, x23
  449170:	mov	x1, x19
  449174:	str	xzr, [x29, #440]
  449178:	stp	xzr, xzr, [x2]
  44917c:	stp	xzr, xzr, [x2, #16]
  449180:	strb	wzr, [x29, #448]
  449184:	stp	x20, x21, [x29, #456]
  449188:	stp	xzr, xzr, [x29, #472]
  44918c:	stp	xzr, xzr, [x29, #488]
  449190:	stp	xzr, xzr, [x29, #504]
  449194:	bl	43f690 <_obstack_memory_used@@Base+0x2638>
  449198:	ldr	w0, [x29, #492]
  44919c:	cmp	w0, #0x7ff
  4491a0:	b.gt	4491a8 <_obstack_memory_used@@Base+0xc150>
  4491a4:	str	wzr, [x29, #492]
  4491a8:	ldr	w3, [x29, #532]
  4491ac:	mov	w4, #0x1                   	// #1
  4491b0:	ldr	w6, [x29, #548]
  4491b4:	mov	x20, sp
  4491b8:	cmp	w3, #0x0
  4491bc:	mov	x2, x19
  4491c0:	csel	w5, w3, w4, gt
  4491c4:	mov	x0, x23
  4491c8:	mov	w1, #0x11                  	// #17
  4491cc:	str	xzr, [x29, #552]
  4491d0:	mul	w3, w3, w6
  4491d4:	sub	sp, sp, w5, sxtw #4
  4491d8:	str	w3, [x29, #548]
  4491dc:	mov	x5, sp
  4491e0:	cmp	w3, #0x0
  4491e4:	str	x5, [x29, #520]
  4491e8:	csel	w3, w3, w4, gt
  4491ec:	sub	sp, sp, w3, sxtw #4
  4491f0:	mov	x3, sp
  4491f4:	str	x3, [x29, #536]
  4491f8:	bl	447800 <_obstack_memory_used@@Base+0xa7a8>
  4491fc:	mov	sp, x20
  449200:	ldr	x1, [x29, #440]
  449204:	mov	x0, x23
  449208:	ldp	x3, x2, [x29, #456]
  44920c:	strb	wzr, [x23, x1]
  449210:	blr	x3
  449214:	ldr	w0, [x29, #488]
  449218:	mov	sp, x22
  44921c:	cmp	w0, #0x0
  449220:	cset	w0, eq  // eq = none
  449224:	b	44909c <_obstack_memory_used@@Base+0xc044>
  449228:	add	x26, x29, #0x60
  44922c:	mov	x25, #0x0                   	// #0
  449230:	b	449058 <_obstack_memory_used@@Base+0xc000>
  449234:	ldr	x6, [x29, #120]
  449238:	ldrb	w0, [x6]
  44923c:	cmp	w0, #0x2e
  449240:	b.ne	449088 <_obstack_memory_used@@Base+0xc030>  // b.any
  449244:	nop
  449248:	ldrb	w0, [x6, #1]
  44924c:	sub	w1, w0, #0x61
  449250:	cmp	w0, #0x5f
  449254:	and	w1, w1, #0xff
  449258:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  44925c:	b.ls	44933c <_obstack_memory_used@@Base+0xc2e4>  // b.plast
  449260:	sub	w0, w0, #0x30
  449264:	and	w0, w0, #0xff
  449268:	cmp	w0, #0x9
  44926c:	ldrb	w0, [x6]
  449270:	b.hi	449088 <_obstack_memory_used@@Base+0xc030>  // b.pmore
  449274:	mov	x3, x6
  449278:	cmp	w0, #0x2e
  44927c:	b.ne	4492cc <_obstack_memory_used@@Base+0xc274>  // b.any
  449280:	ldrb	w4, [x3, #1]
  449284:	sub	w4, w4, #0x30
  449288:	and	w4, w4, #0xff
  44928c:	cmp	w4, #0x9
  449290:	b.hi	4492cc <_obstack_memory_used@@Base+0xc274>  // b.pmore
  449294:	ldrb	w4, [x3, #2]
  449298:	add	x3, x3, #0x2
  44929c:	sub	w5, w4, #0x30
  4492a0:	and	w5, w5, #0xff
  4492a4:	cmp	w5, #0x9
  4492a8:	b.hi	4492c4 <_obstack_memory_used@@Base+0xc26c>  // b.pmore
  4492ac:	nop
  4492b0:	ldrb	w4, [x3, #1]!
  4492b4:	sub	w5, w4, #0x30
  4492b8:	and	w5, w5, #0xff
  4492bc:	cmp	w5, #0x9
  4492c0:	b.ls	4492b0 <_obstack_memory_used@@Base+0xc258>  // b.plast
  4492c4:	cmp	w4, #0x2e
  4492c8:	b.eq	449280 <_obstack_memory_used@@Base+0xc228>  // b.none
  4492cc:	ldp	w0, w1, [x29, #136]
  4492d0:	str	x3, [x29, #120]
  4492d4:	sub	x4, x3, x6
  4492d8:	cmp	w0, w1
  4492dc:	b.ge	449334 <_obstack_memory_used@@Base+0xc2dc>  // b.tcont
  4492e0:	ldr	x2, [x29, #128]
  4492e4:	smull	x1, w0, w27
  4492e8:	add	w0, w0, #0x1
  4492ec:	cmp	w4, #0x0
  4492f0:	add	x3, x2, x1
  4492f4:	str	wzr, [x3, #4]
  4492f8:	str	w0, [x29, #136]
  4492fc:	b.le	449334 <_obstack_memory_used@@Base+0xc2dc>
  449300:	str	xzr, [x2, x1]
  449304:	str	x6, [x3, #8]
  449308:	str	w4, [x3, #16]
  44930c:	mov	x2, x19
  449310:	mov	x0, x26
  449314:	mov	w1, #0x4e                  	// #78
  449318:	bl	43f5a0 <_obstack_memory_used@@Base+0x2548>
  44931c:	ldr	x6, [x29, #120]
  449320:	mov	x19, x0
  449324:	ldrb	w0, [x6]
  449328:	cmp	w0, #0x2e
  44932c:	b.eq	449248 <_obstack_memory_used@@Base+0xc1f0>  // b.none
  449330:	b	449088 <_obstack_memory_used@@Base+0xc030>
  449334:	mov	x3, #0x0                   	// #0
  449338:	b	44930c <_obstack_memory_used@@Base+0xc2b4>
  44933c:	ldrb	w0, [x6, #2]
  449340:	add	x3, x6, #0x2
  449344:	b	44934c <_obstack_memory_used@@Base+0xc2f4>
  449348:	ldrb	w0, [x3, #1]!
  44934c:	sub	w1, w0, #0x61
  449350:	cmp	w0, #0x5f
  449354:	and	w1, w1, #0xff
  449358:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  44935c:	b.ls	449348 <_obstack_memory_used@@Base+0xc2f0>  // b.plast
  449360:	b	449278 <_obstack_memory_used@@Base+0xc220>
  449364:	nop
  449368:	stp	x29, x30, [sp, #-96]!
  44936c:	mov	x29, sp
  449370:	stp	x21, x22, [sp, #32]
  449374:	mov	x21, x3
  449378:	cbz	x0, 449448 <_obstack_memory_used@@Base+0xc3f0>
  44937c:	stp	x19, x20, [sp, #16]
  449380:	cmp	x1, #0x0
  449384:	mov	x19, x1
  449388:	mov	x20, x2
  44938c:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  449390:	b.eq	449444 <_obstack_memory_used@@Base+0xc3ec>  // b.none
  449394:	adrp	x1, 440000 <_obstack_memory_used@@Base+0x2fa8>
  449398:	add	x2, sp, #0x40
  44939c:	add	x1, x1, #0x1a8
  4493a0:	stp	xzr, xzr, [sp, #64]
  4493a4:	str	xzr, [sp, #80]
  4493a8:	str	wzr, [sp, #88]
  4493ac:	bl	448ee0 <_obstack_memory_used@@Base+0xbe88>
  4493b0:	cbz	w0, 44949c <_obstack_memory_used@@Base+0xc444>
  4493b4:	ldr	w0, [sp, #88]
  4493b8:	str	x23, [sp, #48]
  4493bc:	ldr	x22, [sp, #64]
  4493c0:	cbnz	w0, 449420 <_obstack_memory_used@@Base+0xc3c8>
  4493c4:	ldr	x23, [sp, #80]
  4493c8:	cbz	x22, 4494c0 <_obstack_memory_used@@Base+0xc468>
  4493cc:	cbz	x19, 449490 <_obstack_memory_used@@Base+0xc438>
  4493d0:	mov	x0, x22
  4493d4:	bl	402630 <strlen@plt>
  4493d8:	ldr	x1, [x20]
  4493dc:	cmp	x0, x1
  4493e0:	b.cs	449468 <_obstack_memory_used@@Base+0xc410>  // b.hs, b.nlast
  4493e4:	add	x2, x0, #0x1
  4493e8:	mov	x1, x22
  4493ec:	mov	x0, x19
  4493f0:	bl	4025d0 <memcpy@plt>
  4493f4:	mov	x0, x22
  4493f8:	mov	x22, x19
  4493fc:	bl	402a80 <free@plt>
  449400:	cbz	x21, 449478 <_obstack_memory_used@@Base+0xc420>
  449404:	ldp	x19, x20, [sp, #16]
  449408:	ldr	x23, [sp, #48]
  44940c:	str	wzr, [x21]
  449410:	mov	x0, x22
  449414:	ldp	x21, x22, [sp, #32]
  449418:	ldp	x29, x30, [sp], #96
  44941c:	ret
  449420:	mov	x23, #0x1                   	// #1
  449424:	cbnz	x22, 4493cc <_obstack_memory_used@@Base+0xc374>
  449428:	cbz	x21, 4494e4 <_obstack_memory_used@@Base+0xc48c>
  44942c:	mov	w0, #0xffffffff            	// #-1
  449430:	mov	x22, #0x0                   	// #0
  449434:	ldp	x19, x20, [sp, #16]
  449438:	ldr	x23, [sp, #48]
  44943c:	str	w0, [x21]
  449440:	b	449410 <_obstack_memory_used@@Base+0xc3b8>
  449444:	ldp	x19, x20, [sp, #16]
  449448:	cbz	x21, 4494ac <_obstack_memory_used@@Base+0xc454>
  44944c:	mov	w0, #0xfffffffd            	// #-3
  449450:	str	w0, [x21]
  449454:	mov	x22, #0x0                   	// #0
  449458:	mov	x0, x22
  44945c:	ldp	x21, x22, [sp, #32]
  449460:	ldp	x29, x30, [sp], #96
  449464:	ret
  449468:	mov	x0, x19
  44946c:	bl	402a80 <free@plt>
  449470:	str	x23, [x20]
  449474:	cbnz	x21, 449404 <_obstack_memory_used@@Base+0xc3ac>
  449478:	mov	x0, x22
  44947c:	ldp	x19, x20, [sp, #16]
  449480:	ldp	x21, x22, [sp, #32]
  449484:	ldr	x23, [sp, #48]
  449488:	ldp	x29, x30, [sp], #96
  44948c:	ret
  449490:	cbz	x20, 449400 <_obstack_memory_used@@Base+0xc3a8>
  449494:	str	x23, [x20]
  449498:	b	449474 <_obstack_memory_used@@Base+0xc41c>
  44949c:	ldr	x0, [sp, #64]
  4494a0:	bl	402a80 <free@plt>
  4494a4:	cbnz	x21, 4494d0 <_obstack_memory_used@@Base+0xc478>
  4494a8:	ldp	x19, x20, [sp, #16]
  4494ac:	mov	x22, #0x0                   	// #0
  4494b0:	mov	x0, x22
  4494b4:	ldp	x21, x22, [sp, #32]
  4494b8:	ldp	x29, x30, [sp], #96
  4494bc:	ret
  4494c0:	cbz	x21, 4494e4 <_obstack_memory_used@@Base+0xc48c>
  4494c4:	cmp	x23, #0x1
  4494c8:	b.eq	44942c <_obstack_memory_used@@Base+0xc3d4>  // b.none
  4494cc:	ldr	x23, [sp, #48]
  4494d0:	mov	w0, #0xfffffffe            	// #-2
  4494d4:	mov	x22, #0x0                   	// #0
  4494d8:	ldp	x19, x20, [sp, #16]
  4494dc:	str	w0, [x21]
  4494e0:	b	449410 <_obstack_memory_used@@Base+0xc3b8>
  4494e4:	mov	x22, #0x0                   	// #0
  4494e8:	ldp	x19, x20, [sp, #16]
  4494ec:	ldr	x23, [sp, #48]
  4494f0:	b	4494b0 <_obstack_memory_used@@Base+0xc458>
  4494f4:	nop
  4494f8:	cmp	x0, #0x0
  4494fc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  449500:	b.eq	449524 <_obstack_memory_used@@Base+0xc4cc>  // b.none
  449504:	stp	x29, x30, [sp, #-16]!
  449508:	mov	x29, sp
  44950c:	bl	448ee0 <_obstack_memory_used@@Base+0xbe88>
  449510:	cmp	w0, #0x0
  449514:	ldp	x29, x30, [sp], #16
  449518:	mov	w0, #0xfffffffe            	// #-2
  44951c:	csel	w0, wzr, w0, ne  // ne = any
  449520:	ret
  449524:	mov	w0, #0xfffffffd            	// #-3
  449528:	ret
  44952c:	nop
  449530:	stp	x29, x30, [sp, #-16]!
  449534:	mov	x29, sp
  449538:	bl	43f3d0 <_obstack_memory_used@@Base+0x2378>
  44953c:	ldr	x0, [x0]
  449540:	cbz	x0, 449554 <_obstack_memory_used@@Base+0xc4fc>
  449544:	ldr	x1, [x0, #80]
  449548:	ldr	x0, [x0]
  44954c:	tbz	w1, #0, 449554 <_obstack_memory_used@@Base+0xc4fc>
  449550:	ldur	x0, [x0, #-112]
  449554:	ldp	x29, x30, [sp], #16
  449558:	ret
  44955c:	nop
  449560:	and	w5, w0, #0xff
  449564:	cmp	w5, #0x50
  449568:	b.eq	449680 <_obstack_memory_used@@Base+0xc628>  // b.none
  44956c:	and	w4, w5, #0xf
  449570:	cmp	w4, #0x4
  449574:	b.eq	449590 <_obstack_memory_used@@Base+0xc538>  // b.none
  449578:	b.ls	4495a4 <_obstack_memory_used@@Base+0xc54c>  // b.plast
  44957c:	cmp	w4, #0xb
  449580:	b.eq	4496a4 <_obstack_memory_used@@Base+0xc64c>  // b.none
  449584:	b.ls	449600 <_obstack_memory_used@@Base+0xc5a8>  // b.plast
  449588:	cmp	w4, #0xc
  44958c:	b.ne	4496b4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  449590:	mov	x0, x2
  449594:	ldr	x4, [x0], #8
  449598:	cbnz	x4, 449660 <_obstack_memory_used@@Base+0xc608>
  44959c:	str	x4, [x3]
  4495a0:	ret
  4495a4:	cmp	w4, #0x2
  4495a8:	b.eq	449694 <_obstack_memory_used@@Base+0xc63c>  // b.none
  4495ac:	b.ls	4495c8 <_obstack_memory_used@@Base+0xc570>  // b.plast
  4495b0:	cmp	w4, #0x3
  4495b4:	b.ne	4496b4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  4495b8:	mov	x0, x2
  4495bc:	ldr	w4, [x0], #4
  4495c0:	cbz	x4, 44959c <_obstack_memory_used@@Base+0xc544>
  4495c4:	b	449660 <_obstack_memory_used@@Base+0xc608>
  4495c8:	cbz	w4, 449590 <_obstack_memory_used@@Base+0xc538>
  4495cc:	cmp	w4, #0x1
  4495d0:	b.ne	4496b4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  4495d4:	mov	x0, x2
  4495d8:	mov	x4, #0x0                   	// #0
  4495dc:	mov	w7, #0x0                   	// #0
  4495e0:	ldrb	w8, [x0], #1
  4495e4:	and	x6, x8, #0x7f
  4495e8:	lsl	x6, x6, x7
  4495ec:	add	w7, w7, #0x7
  4495f0:	orr	x4, x4, x6
  4495f4:	tbnz	w8, #7, 4495e0 <_obstack_memory_used@@Base+0xc588>
  4495f8:	cbz	x4, 44959c <_obstack_memory_used@@Base+0xc544>
  4495fc:	b	449660 <_obstack_memory_used@@Base+0xc608>
  449600:	cmp	w4, #0x9
  449604:	b.eq	449620 <_obstack_memory_used@@Base+0xc5c8>  // b.none
  449608:	cmp	w4, #0xa
  44960c:	b.ne	4496b4 <_obstack_memory_used@@Base+0xc65c>  // b.any
  449610:	mov	x0, x2
  449614:	ldrsh	x4, [x0], #2
  449618:	cbz	x4, 44959c <_obstack_memory_used@@Base+0xc544>
  44961c:	b	449660 <_obstack_memory_used@@Base+0xc608>
  449620:	mov	x0, x2
  449624:	mov	x4, #0x0                   	// #0
  449628:	mov	w7, #0x0                   	// #0
  44962c:	ldrb	w8, [x0], #1
  449630:	and	x6, x8, #0x7f
  449634:	lsl	x6, x6, x7
  449638:	add	w7, w7, #0x7
  44963c:	orr	x4, x4, x6
  449640:	tbnz	w8, #7, 44962c <_obstack_memory_used@@Base+0xc5d4>
  449644:	cmp	w7, #0x3f
  449648:	b.hi	449598 <_obstack_memory_used@@Base+0xc540>  // b.pmore
  44964c:	tbz	w8, #6, 449598 <_obstack_memory_used@@Base+0xc540>
  449650:	mov	x6, #0xffffffffffffffff    	// #-1
  449654:	lsl	x7, x6, x7
  449658:	orr	x4, x4, x7
  44965c:	nop
  449660:	and	w6, w5, #0x70
  449664:	cmp	w6, #0x10
  449668:	csel	x1, x2, x1, eq  // eq = none
  44966c:	add	x4, x4, x1
  449670:	tbz	w5, #7, 44959c <_obstack_memory_used@@Base+0xc544>
  449674:	ldr	x4, [x4]
  449678:	str	x4, [x3]
  44967c:	ret
  449680:	add	x0, x2, #0x7
  449684:	and	x0, x0, #0xfffffffffffffff8
  449688:	ldr	x4, [x0], #8
  44968c:	str	x4, [x3]
  449690:	ret
  449694:	mov	x0, x2
  449698:	ldrh	w4, [x0], #2
  44969c:	cbz	x4, 44959c <_obstack_memory_used@@Base+0xc544>
  4496a0:	b	449660 <_obstack_memory_used@@Base+0xc608>
  4496a4:	mov	x0, x2
  4496a8:	ldrsw	x4, [x0], #4
  4496ac:	cbz	x4, 44959c <_obstack_memory_used@@Base+0xc544>
  4496b0:	b	449660 <_obstack_memory_used@@Base+0xc608>
  4496b4:	stp	x29, x30, [sp, #-16]!
  4496b8:	mov	x29, sp
  4496bc:	bl	402970 <abort@plt>
  4496c0:	and	w0, w0, #0xff
  4496c4:	cmp	w0, #0xff
  4496c8:	b.eq	449714 <_obstack_memory_used@@Base+0xc6bc>  // b.none
  4496cc:	and	w2, w0, #0x70
  4496d0:	cmp	w2, #0x30
  4496d4:	b.eq	44972c <_obstack_memory_used@@Base+0xc6d4>  // b.none
  4496d8:	b.hi	4496ec <_obstack_memory_used@@Base+0xc694>  // b.pmore
  4496dc:	cmp	w2, #0x20
  4496e0:	b.ne	4496fc <_obstack_memory_used@@Base+0xc6a4>  // b.any
  4496e4:	ldr	x0, [x1, #808]
  4496e8:	ret
  4496ec:	cmp	w2, #0x40
  4496f0:	b.ne	44971c <_obstack_memory_used@@Base+0xc6c4>  // b.any
  4496f4:	ldr	x0, [x1, #824]
  4496f8:	ret
  4496fc:	b.hi	449708 <_obstack_memory_used@@Base+0xc6b0>  // b.pmore
  449700:	tst	w0, #0x60
  449704:	b.eq	449714 <_obstack_memory_used@@Base+0xc6bc>  // b.none
  449708:	stp	x29, x30, [sp, #-16]!
  44970c:	mov	x29, sp
  449710:	bl	402970 <abort@plt>
  449714:	mov	x0, #0x0                   	// #0
  449718:	ret
  44971c:	cmp	w2, #0x50
  449720:	mov	x0, #0x0                   	// #0
  449724:	b.ne	449708 <_obstack_memory_used@@Base+0xc6b0>  // b.any
  449728:	ret
  44972c:	ldr	x0, [x1, #816]
  449730:	ret
  449734:	nop
  449738:	str	xzr, [x3, #1568]
  44973c:	cmp	x0, x1
  449740:	b.cs	449ed0 <_obstack_memory_used@@Base+0xce78>  // b.hs, b.nlast
  449744:	stp	x29, x30, [sp, #-112]!
  449748:	mov	x29, sp
  44974c:	stp	x21, x22, [sp, #32]
  449750:	mov	x21, x2
  449754:	mov	x22, x1
  449758:	stp	x19, x20, [sp, #16]
  44975c:	mov	x20, x3
  449760:	ldr	x2, [x21, #792]
  449764:	stp	x23, x24, [sp, #48]
  449768:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x1efa8>
  44976c:	ldr	x5, [x21, #832]
  449770:	stp	x25, x26, [sp, #64]
  449774:	add	x23, x23, #0x3cc
  449778:	ldr	x1, [x20, #1608]
  44977c:	stp	x27, x28, [sp, #80]
  449780:	add	x5, x2, x5, lsr #63
  449784:	add	x27, x29, #0x68
  449788:	cmp	x1, x5
  44978c:	mov	x25, #0x0                   	// #0
  449790:	mov	w24, #0x1                   	// #1
  449794:	mov	w26, #0x5                   	// #5
  449798:	b.cs	449868 <_obstack_memory_used@@Base+0xc810>  // b.hs, b.nlast
  44979c:	nop
  4497a0:	mov	x19, x0
  4497a4:	ldrb	w4, [x19], #1
  4497a8:	and	w5, w4, #0xc0
  4497ac:	cmp	w5, #0x40
  4497b0:	b.eq	449d64 <_obstack_memory_used@@Base+0xcd0c>  // b.none
  4497b4:	cmp	w5, #0x80
  4497b8:	b.eq	449d88 <_obstack_memory_used@@Base+0xcd30>  // b.none
  4497bc:	cmp	w5, #0xc0
  4497c0:	b.eq	449d78 <_obstack_memory_used@@Base+0xcd20>  // b.none
  4497c4:	cmp	w4, #0x2f
  4497c8:	b.hi	449ee0 <_obstack_memory_used@@Base+0xce88>  // b.pmore
  4497cc:	ldrh	w2, [x23, w4, uxtw #1]
  4497d0:	adr	x3, 4497dc <_obstack_memory_used@@Base+0xc784>
  4497d4:	add	x2, x3, w2, sxth #2
  4497d8:	br	x2
  4497dc:	mov	x1, #0x0                   	// #0
  4497e0:	mov	w0, #0x0                   	// #0
  4497e4:	ldrb	w3, [x19], #1
  4497e8:	and	x2, x3, #0x7f
  4497ec:	lsl	x2, x2, x0
  4497f0:	add	w0, w0, #0x7
  4497f4:	orr	x1, x1, x2
  4497f8:	tbnz	w3, #7, 4497e4 <_obstack_memory_used@@Base+0xc78c>
  4497fc:	mov	x4, #0x0                   	// #0
  449800:	mov	w2, #0x0                   	// #0
  449804:	nop
  449808:	ldrb	w3, [x19], #1
  44980c:	and	x0, x3, #0x7f
  449810:	lsl	x0, x0, x2
  449814:	add	w2, w2, #0x7
  449818:	orr	x4, x4, x0
  44981c:	tbnz	w3, #7, 449808 <_obstack_memory_used@@Base+0xc7b0>
  449820:	ldr	x0, [x20, #1624]
  449824:	cmp	x1, #0x61
  449828:	mul	x4, x4, x0
  44982c:	b.hi	449844 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  449830:	lsl	x1, x1, #4
  449834:	neg	x4, x4
  449838:	add	x0, x20, x1
  44983c:	str	w24, [x0, #8]
  449840:	str	x4, [x20, x1]
  449844:	cmp	x22, x19
  449848:	b.ls	449868 <_obstack_memory_used@@Base+0xc810>  // b.plast
  44984c:	ldr	x2, [x21, #792]
  449850:	mov	x0, x19
  449854:	ldr	x5, [x21, #832]
  449858:	ldr	x1, [x20, #1608]
  44985c:	add	x5, x2, x5, lsr #63
  449860:	cmp	x1, x5
  449864:	b.cc	4497a0 <_obstack_memory_used@@Base+0xc748>  // b.lo, b.ul, b.last
  449868:	mov	sp, x29
  44986c:	ldp	x19, x20, [sp, #16]
  449870:	ldp	x21, x22, [sp, #32]
  449874:	ldp	x23, x24, [sp, #48]
  449878:	ldp	x25, x26, [sp, #64]
  44987c:	ldp	x27, x28, [sp, #80]
  449880:	ldp	x29, x30, [sp], #112
  449884:	ret
  449888:	mov	x1, #0x0                   	// #0
  44988c:	mov	w0, #0x0                   	// #0
  449890:	ldrb	w3, [x19], #1
  449894:	and	x2, x3, #0x7f
  449898:	lsl	x2, x2, x0
  44989c:	add	w0, w0, #0x7
  4498a0:	orr	x1, x1, x2
  4498a4:	tbnz	w3, #7, 449890 <_obstack_memory_used@@Base+0xc838>
  4498a8:	str	x1, [x21, #848]
  4498ac:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  4498b0:	mov	x1, #0x0                   	// #0
  4498b4:	mov	w0, #0x0                   	// #0
  4498b8:	ldrb	w3, [x19], #1
  4498bc:	and	x2, x3, #0x7f
  4498c0:	lsl	x2, x2, x0
  4498c4:	add	w0, w0, #0x7
  4498c8:	orr	x1, x1, x2
  4498cc:	tbnz	w3, #7, 4498b8 <_obstack_memory_used@@Base+0xc860>
  4498d0:	cmp	x1, #0x61
  4498d4:	b.hi	4498e8 <_obstack_memory_used@@Base+0xc890>  // b.pmore
  4498d8:	lsl	x1, x1, #4
  4498dc:	add	x0, x20, x1
  4498e0:	str	w26, [x0, #8]
  4498e4:	str	x19, [x20, x1]
  4498e8:	mov	x3, #0x0                   	// #0
  4498ec:	mov	w1, #0x0                   	// #0
  4498f0:	ldrb	w2, [x19], #1
  4498f4:	and	x0, x2, #0x7f
  4498f8:	lsl	x0, x0, x1
  4498fc:	add	w1, w1, #0x7
  449900:	orr	x3, x3, x0
  449904:	tbnz	w2, #7, 4498f0 <_obstack_memory_used@@Base+0xc898>
  449908:	add	x19, x19, x3
  44990c:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449910:	mov	x1, #0x0                   	// #0
  449914:	mov	w0, #0x0                   	// #0
  449918:	ldrb	w3, [x19], #1
  44991c:	and	x2, x3, #0x7f
  449920:	lsl	x2, x2, x0
  449924:	add	w0, w0, #0x7
  449928:	orr	x1, x1, x2
  44992c:	tbnz	w3, #7, 449918 <_obstack_memory_used@@Base+0xc8c0>
  449930:	mov	x4, #0x0                   	// #0
  449934:	mov	w2, #0x0                   	// #0
  449938:	ldrb	w3, [x19], #1
  44993c:	and	x0, x3, #0x7f
  449940:	lsl	x0, x0, x2
  449944:	add	w2, w2, #0x7
  449948:	orr	x4, x4, x0
  44994c:	tbnz	w3, #7, 449938 <_obstack_memory_used@@Base+0xc8e0>
  449950:	cmp	w2, #0x3f
  449954:	b.hi	44996c <_obstack_memory_used@@Base+0xc914>  // b.pmore
  449958:	mov	x0, #0xffffffffffffffff    	// #-1
  44995c:	tst	x3, #0x40
  449960:	lsl	x0, x0, x2
  449964:	orr	x0, x4, x0
  449968:	csel	x4, x0, x4, ne  // ne = any
  44996c:	ldr	x0, [x20, #1624]
  449970:	cmp	x1, #0x61
  449974:	mul	x4, x4, x0
  449978:	b.hi	449844 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  44997c:	lsl	x1, x1, #4
  449980:	mov	w2, #0x4                   	// #4
  449984:	add	x0, x20, x1
  449988:	str	w2, [x0, #8]
  44998c:	str	x4, [x20, x1]
  449990:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449994:	mov	x1, #0x0                   	// #0
  449998:	mov	w0, #0x0                   	// #0
  44999c:	ldrb	w3, [x19], #1
  4499a0:	and	x2, x3, #0x7f
  4499a4:	lsl	x2, x2, x0
  4499a8:	add	w0, w0, #0x7
  4499ac:	orr	x1, x1, x2
  4499b0:	tbnz	w3, #7, 44999c <_obstack_memory_used@@Base+0xc944>
  4499b4:	mov	x4, #0x0                   	// #0
  4499b8:	mov	w2, #0x0                   	// #0
  4499bc:	nop
  4499c0:	ldrb	w3, [x19], #1
  4499c4:	and	x0, x3, #0x7f
  4499c8:	lsl	x0, x0, x2
  4499cc:	add	w2, w2, #0x7
  4499d0:	orr	x4, x4, x0
  4499d4:	tbnz	w3, #7, 4499c0 <_obstack_memory_used@@Base+0xc968>
  4499d8:	b	44996c <_obstack_memory_used@@Base+0xc914>
  4499dc:	mov	x1, #0x0                   	// #0
  4499e0:	mov	w0, #0x0                   	// #0
  4499e4:	ldrb	w3, [x19], #1
  4499e8:	and	x2, x3, #0x7f
  4499ec:	lsl	x2, x2, x0
  4499f0:	add	w0, w0, #0x7
  4499f4:	orr	x1, x1, x2
  4499f8:	tbnz	w3, #7, 4499e4 <_obstack_memory_used@@Base+0xc98c>
  4499fc:	cmp	w0, #0x3f
  449a00:	b.hi	449a18 <_obstack_memory_used@@Base+0xc9c0>  // b.pmore
  449a04:	mov	x2, #0xffffffffffffffff    	// #-1
  449a08:	tst	x3, #0x40
  449a0c:	lsl	x0, x2, x0
  449a10:	orr	x0, x1, x0
  449a14:	csel	x1, x0, x1, ne  // ne = any
  449a18:	ldr	x0, [x20, #1624]
  449a1c:	mul	x1, x0, x1
  449a20:	str	x1, [x20, #1576]
  449a24:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449a28:	mov	x1, #0x0                   	// #0
  449a2c:	mov	w0, #0x0                   	// #0
  449a30:	ldrb	w3, [x19], #1
  449a34:	and	x2, x3, #0x7f
  449a38:	lsl	x2, x2, x0
  449a3c:	add	w0, w0, #0x7
  449a40:	orr	x1, x1, x2
  449a44:	tbnz	w3, #7, 449a30 <_obstack_memory_used@@Base+0xc9d8>
  449a48:	mov	x3, #0x0                   	// #0
  449a4c:	mov	w2, #0x0                   	// #0
  449a50:	str	x1, [x20, #1584]
  449a54:	nop
  449a58:	ldrb	w1, [x19], #1
  449a5c:	and	x0, x1, #0x7f
  449a60:	lsl	x0, x0, x2
  449a64:	add	w2, w2, #0x7
  449a68:	orr	x3, x3, x0
  449a6c:	tbnz	w1, #7, 449a58 <_obstack_memory_used@@Base+0xca00>
  449a70:	cmp	w2, #0x3f
  449a74:	b.hi	449a8c <_obstack_memory_used@@Base+0xca34>  // b.pmore
  449a78:	mov	x0, #0xffffffffffffffff    	// #-1
  449a7c:	tst	x1, #0x40
  449a80:	lsl	x0, x0, x2
  449a84:	orr	x0, x3, x0
  449a88:	csel	x3, x0, x3, ne  // ne = any
  449a8c:	ldr	x0, [x20, #1624]
  449a90:	str	w24, [x20, #1600]
  449a94:	mul	x3, x0, x3
  449a98:	str	x3, [x20, #1576]
  449a9c:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449aa0:	mov	x1, #0x0                   	// #0
  449aa4:	mov	w0, #0x0                   	// #0
  449aa8:	ldrb	w3, [x19], #1
  449aac:	and	x2, x3, #0x7f
  449ab0:	lsl	x2, x2, x0
  449ab4:	add	w0, w0, #0x7
  449ab8:	orr	x1, x1, x2
  449abc:	tbnz	w3, #7, 449aa8 <_obstack_memory_used@@Base+0xca50>
  449ac0:	mov	x4, #0x0                   	// #0
  449ac4:	mov	w2, #0x0                   	// #0
  449ac8:	ldrb	w3, [x19], #1
  449acc:	and	x0, x3, #0x7f
  449ad0:	lsl	x0, x0, x2
  449ad4:	add	w2, w2, #0x7
  449ad8:	orr	x4, x4, x0
  449adc:	tbnz	w3, #7, 449ac8 <_obstack_memory_used@@Base+0xca70>
  449ae0:	cmp	w2, #0x3f
  449ae4:	b.hi	449afc <_obstack_memory_used@@Base+0xcaa4>  // b.pmore
  449ae8:	mov	x0, #0xffffffffffffffff    	// #-1
  449aec:	tst	x3, #0x40
  449af0:	lsl	x0, x0, x2
  449af4:	orr	x0, x4, x0
  449af8:	csel	x4, x0, x4, ne  // ne = any
  449afc:	ldr	x0, [x20, #1624]
  449b00:	cmp	x1, #0x61
  449b04:	mul	x4, x4, x0
  449b08:	b.hi	449844 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  449b0c:	lsl	x1, x1, #4
  449b10:	add	x0, x20, x1
  449b14:	str	w24, [x0, #8]
  449b18:	str	x4, [x20, x1]
  449b1c:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449b20:	mov	x1, #0x0                   	// #0
  449b24:	mov	w0, #0x0                   	// #0
  449b28:	ldrb	w3, [x19], #1
  449b2c:	and	x2, x3, #0x7f
  449b30:	lsl	x2, x2, x0
  449b34:	add	w0, w0, #0x7
  449b38:	orr	x1, x1, x2
  449b3c:	tbnz	w3, #7, 449b28 <_obstack_memory_used@@Base+0xcad0>
  449b40:	cmp	x1, #0x61
  449b44:	b.hi	449b5c <_obstack_memory_used@@Base+0xcb04>  // b.pmore
  449b48:	lsl	x1, x1, #4
  449b4c:	mov	w2, #0x3                   	// #3
  449b50:	add	x0, x20, x1
  449b54:	str	w2, [x0, #8]
  449b58:	str	x19, [x20, x1]
  449b5c:	mov	x3, #0x0                   	// #0
  449b60:	mov	w1, #0x0                   	// #0
  449b64:	nop
  449b68:	ldrb	w2, [x19], #1
  449b6c:	and	x0, x2, #0x7f
  449b70:	lsl	x0, x0, x1
  449b74:	add	w1, w1, #0x7
  449b78:	orr	x3, x3, x0
  449b7c:	tbnz	w2, #7, 449b68 <_obstack_memory_used@@Base+0xcb10>
  449b80:	add	x19, x19, x3
  449b84:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449b88:	mov	x1, #0x0                   	// #0
  449b8c:	mov	w0, #0x0                   	// #0
  449b90:	ldrb	w3, [x19], #1
  449b94:	and	x2, x3, #0x7f
  449b98:	lsl	x2, x2, x0
  449b9c:	add	w0, w0, #0x7
  449ba0:	orr	x1, x1, x2
  449ba4:	tbnz	w3, #7, 449b90 <_obstack_memory_used@@Base+0xcb38>
  449ba8:	str	x1, [x20, #1576]
  449bac:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449bb0:	mov	x1, #0x0                   	// #0
  449bb4:	mov	w0, #0x0                   	// #0
  449bb8:	ldrb	w3, [x19], #1
  449bbc:	and	x2, x3, #0x7f
  449bc0:	lsl	x2, x2, x0
  449bc4:	add	w0, w0, #0x7
  449bc8:	orr	x1, x1, x2
  449bcc:	tbnz	w3, #7, 449bb8 <_obstack_memory_used@@Base+0xcb60>
  449bd0:	str	x1, [x20, #1584]
  449bd4:	str	w24, [x20, #1600]
  449bd8:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449bdc:	mov	x1, #0x0                   	// #0
  449be0:	mov	w0, #0x0                   	// #0
  449be4:	ldrb	w3, [x19], #1
  449be8:	and	x2, x3, #0x7f
  449bec:	lsl	x2, x2, x0
  449bf0:	add	w0, w0, #0x7
  449bf4:	orr	x1, x1, x2
  449bf8:	tbnz	w3, #7, 449be4 <_obstack_memory_used@@Base+0xcb8c>
  449bfc:	mov	x3, #0x0                   	// #0
  449c00:	mov	w2, #0x0                   	// #0
  449c04:	str	x1, [x20, #1584]
  449c08:	ldrb	w1, [x19], #1
  449c0c:	and	x0, x1, #0x7f
  449c10:	lsl	x0, x0, x2
  449c14:	add	w2, w2, #0x7
  449c18:	orr	x3, x3, x0
  449c1c:	tbnz	w1, #7, 449c08 <_obstack_memory_used@@Base+0xcbb0>
  449c20:	str	x3, [x20, #1576]
  449c24:	str	w24, [x20, #1600]
  449c28:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449c2c:	mov	x1, #0x0                   	// #0
  449c30:	mov	w0, #0x0                   	// #0
  449c34:	ldrb	w3, [x19], #1
  449c38:	and	x2, x3, #0x7f
  449c3c:	lsl	x2, x2, x0
  449c40:	add	w0, w0, #0x7
  449c44:	orr	x1, x1, x2
  449c48:	tbnz	w3, #7, 449c34 <_obstack_memory_used@@Base+0xcbdc>
  449c4c:	mov	x4, #0x0                   	// #0
  449c50:	mov	w2, #0x0                   	// #0
  449c54:	nop
  449c58:	ldrb	w3, [x19], #1
  449c5c:	and	x0, x3, #0x7f
  449c60:	lsl	x0, x0, x2
  449c64:	add	w2, w2, #0x7
  449c68:	orr	x4, x4, x0
  449c6c:	tbnz	w3, #7, 449c58 <_obstack_memory_used@@Base+0xcc00>
  449c70:	cmp	x1, #0x61
  449c74:	b.hi	449844 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  449c78:	lsl	x1, x1, #4
  449c7c:	mov	w2, #0x2                   	// #2
  449c80:	add	x0, x20, x1
  449c84:	str	w2, [x0, #8]
  449c88:	str	x4, [x20, x1]
  449c8c:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449c90:	mov	x1, #0x0                   	// #0
  449c94:	mov	w0, #0x0                   	// #0
  449c98:	ldrb	w3, [x19], #1
  449c9c:	and	x2, x3, #0x7f
  449ca0:	lsl	x2, x2, x0
  449ca4:	add	w0, w0, #0x7
  449ca8:	orr	x1, x1, x2
  449cac:	tbnz	w3, #7, 449c98 <_obstack_memory_used@@Base+0xcc40>
  449cb0:	cmp	x1, #0x61
  449cb4:	b.hi	449844 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  449cb8:	add	x1, x20, x1, lsl #4
  449cbc:	str	wzr, [x1, #8]
  449cc0:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449cc4:	mov	x1, #0x0                   	// #0
  449cc8:	mov	w0, #0x0                   	// #0
  449ccc:	ldrb	w3, [x19], #1
  449cd0:	and	x2, x3, #0x7f
  449cd4:	lsl	x2, x2, x0
  449cd8:	add	w0, w0, #0x7
  449cdc:	orr	x1, x1, x2
  449ce0:	tbnz	w3, #7, 449ccc <_obstack_memory_used@@Base+0xcc74>
  449ce4:	cmp	x1, #0x61
  449ce8:	b.hi	449844 <_obstack_memory_used@@Base+0xc7ec>  // b.pmore
  449cec:	add	x1, x20, x1, lsl #4
  449cf0:	mov	w0, #0x6                   	// #6
  449cf4:	str	w0, [x1, #8]
  449cf8:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449cfc:	mov	x1, #0x0                   	// #0
  449d00:	mov	w0, #0x0                   	// #0
  449d04:	ldrb	w3, [x19], #1
  449d08:	and	x2, x3, #0x7f
  449d0c:	lsl	x2, x2, x0
  449d10:	add	w0, w0, #0x7
  449d14:	orr	x1, x1, x2
  449d18:	tbnz	w3, #7, 449d04 <_obstack_memory_used@@Base+0xccac>
  449d1c:	b	449cb0 <_obstack_memory_used@@Base+0xcc58>
  449d20:	mov	x1, #0x0                   	// #0
  449d24:	mov	w0, #0x0                   	// #0
  449d28:	ldrb	w3, [x19], #1
  449d2c:	and	x2, x3, #0x7f
  449d30:	lsl	x2, x2, x0
  449d34:	add	w0, w0, #0x7
  449d38:	orr	x1, x1, x2
  449d3c:	tbnz	w3, #7, 449d28 <_obstack_memory_used@@Base+0xccd0>
  449d40:	mov	x4, #0x0                   	// #0
  449d44:	mov	w2, #0x0                   	// #0
  449d48:	ldrb	w3, [x19], #1
  449d4c:	and	x0, x3, #0x7f
  449d50:	lsl	x0, x0, x2
  449d54:	add	w2, w2, #0x7
  449d58:	orr	x4, x4, x0
  449d5c:	tbnz	w3, #7, 449d48 <_obstack_memory_used@@Base+0xccf0>
  449d60:	b	449afc <_obstack_memory_used@@Base+0xcaa4>
  449d64:	ldr	x0, [x20, #1632]
  449d68:	and	x4, x4, #0x3f
  449d6c:	madd	x4, x4, x0, x1
  449d70:	str	x4, [x20, #1608]
  449d74:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449d78:	ubfiz	x4, x4, #4, #6
  449d7c:	add	x4, x20, x4
  449d80:	str	wzr, [x4, #8]
  449d84:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449d88:	and	w4, w4, #0x3f
  449d8c:	mov	x1, #0x0                   	// #0
  449d90:	mov	w5, #0x0                   	// #0
  449d94:	nop
  449d98:	ldrb	w6, [x19], #1
  449d9c:	and	x0, x6, #0x7f
  449da0:	lsl	x0, x0, x5
  449da4:	add	w5, w5, #0x7
  449da8:	orr	x1, x1, x0
  449dac:	tbnz	w6, #7, 449d98 <_obstack_memory_used@@Base+0xcd40>
  449db0:	ubfiz	x4, x4, #4, #6
  449db4:	ldr	x2, [x20, #1624]
  449db8:	add	x0, x20, x4
  449dbc:	mul	x1, x1, x2
  449dc0:	str	w24, [x0, #8]
  449dc4:	str	x1, [x20, x4]
  449dc8:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449dcc:	ldr	x0, [x20, #544]
  449dd0:	eor	x0, x0, #0x1
  449dd4:	str	x0, [x20, #544]
  449dd8:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449ddc:	ldrb	w28, [x20, #1648]
  449de0:	mov	x1, x21
  449de4:	mov	w0, w28
  449de8:	bl	4496c0 <_obstack_memory_used@@Base+0xc668>
  449dec:	mov	x2, x19
  449df0:	mov	x1, x0
  449df4:	mov	x3, x27
  449df8:	mov	w0, w28
  449dfc:	bl	449560 <_obstack_memory_used@@Base+0xc508>
  449e00:	mov	x19, x0
  449e04:	ldr	x1, [x29, #104]
  449e08:	str	x1, [x20, #1608]
  449e0c:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449e10:	ldrb	w2, [x0, #1]
  449e14:	add	x19, x0, #0x2
  449e18:	ldr	x0, [x20, #1632]
  449e1c:	madd	x1, x2, x0, x1
  449e20:	str	x1, [x20, #1608]
  449e24:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449e28:	ldurh	w2, [x0, #1]
  449e2c:	add	x19, x0, #0x3
  449e30:	ldr	x0, [x20, #1632]
  449e34:	madd	x1, x2, x0, x1
  449e38:	str	x1, [x20, #1608]
  449e3c:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449e40:	ldur	w2, [x0, #1]
  449e44:	add	x19, x0, #0x5
  449e48:	ldr	x0, [x20, #1632]
  449e4c:	madd	x1, x2, x0, x1
  449e50:	str	x1, [x20, #1608]
  449e54:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449e58:	cbz	x25, 449ed4 <_obstack_memory_used@@Base+0xce7c>
  449e5c:	mov	x3, x25
  449e60:	ldr	x25, [x25, #1568]
  449e64:	mov	x1, x20
  449e68:	mov	x0, x3
  449e6c:	mov	x2, #0x648                 	// #1608
  449e70:	bl	4025d0 <memcpy@plt>
  449e74:	str	x0, [x20, #1568]
  449e78:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449e7c:	ldr	x28, [x20, #1568]
  449e80:	mov	x0, x20
  449e84:	mov	x2, #0x648                 	// #1608
  449e88:	mov	x1, x28
  449e8c:	bl	4025d0 <memcpy@plt>
  449e90:	str	x25, [x28, #1568]
  449e94:	mov	x25, x28
  449e98:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449e9c:	mov	w0, #0x2                   	// #2
  449ea0:	mov	x3, #0x0                   	// #0
  449ea4:	mov	w1, #0x0                   	// #0
  449ea8:	str	x19, [x20, #1592]
  449eac:	str	w0, [x20, #1600]
  449eb0:	ldrb	w2, [x19], #1
  449eb4:	and	x0, x2, #0x7f
  449eb8:	lsl	x0, x0, x1
  449ebc:	add	w1, w1, #0x7
  449ec0:	orr	x3, x3, x0
  449ec4:	tbnz	w2, #7, 449eb0 <_obstack_memory_used@@Base+0xce58>
  449ec8:	add	x19, x19, x3
  449ecc:	b	449844 <_obstack_memory_used@@Base+0xc7ec>
  449ed0:	ret
  449ed4:	sub	sp, sp, #0x650
  449ed8:	mov	x3, sp
  449edc:	b	449e64 <_obstack_memory_used@@Base+0xce0c>
  449ee0:	bl	402970 <abort@plt>
  449ee4:	nop
  449ee8:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  449eec:	add	x1, x2, #0xb20
  449ef0:	mov	w0, #0x8                   	// #8
  449ef4:	strb	w0, [x2, #2848]
  449ef8:	strb	w0, [x1, #1]
  449efc:	strb	w0, [x1, #2]
  449f00:	strb	w0, [x1, #3]
  449f04:	strb	w0, [x1, #4]
  449f08:	strb	w0, [x1, #5]
  449f0c:	strb	w0, [x1, #6]
  449f10:	strb	w0, [x1, #7]
  449f14:	strb	w0, [x1, #8]
  449f18:	strb	w0, [x1, #9]
  449f1c:	strb	w0, [x1, #10]
  449f20:	strb	w0, [x1, #11]
  449f24:	strb	w0, [x1, #12]
  449f28:	strb	w0, [x1, #13]
  449f2c:	strb	w0, [x1, #14]
  449f30:	strb	w0, [x1, #15]
  449f34:	strb	w0, [x1, #16]
  449f38:	strb	w0, [x1, #17]
  449f3c:	strb	w0, [x1, #18]
  449f40:	strb	w0, [x1, #19]
  449f44:	strb	w0, [x1, #20]
  449f48:	strb	w0, [x1, #21]
  449f4c:	strb	w0, [x1, #22]
  449f50:	strb	w0, [x1, #23]
  449f54:	strb	w0, [x1, #24]
  449f58:	strb	w0, [x1, #25]
  449f5c:	strb	w0, [x1, #26]
  449f60:	strb	w0, [x1, #27]
  449f64:	strb	w0, [x1, #28]
  449f68:	strb	w0, [x1, #29]
  449f6c:	strb	w0, [x1, #30]
  449f70:	strb	w0, [x1, #31]
  449f74:	strb	w0, [x1, #64]
  449f78:	strb	w0, [x1, #46]
  449f7c:	strb	w0, [x1, #65]
  449f80:	strb	w0, [x1, #66]
  449f84:	strb	w0, [x1, #67]
  449f88:	strb	w0, [x1, #68]
  449f8c:	strb	w0, [x1, #69]
  449f90:	strb	w0, [x1, #70]
  449f94:	strb	w0, [x1, #71]
  449f98:	strb	w0, [x1, #72]
  449f9c:	strb	w0, [x1, #73]
  449fa0:	strb	w0, [x1, #74]
  449fa4:	strb	w0, [x1, #75]
  449fa8:	strb	w0, [x1, #76]
  449fac:	strb	w0, [x1, #77]
  449fb0:	strb	w0, [x1, #78]
  449fb4:	strb	w0, [x1, #79]
  449fb8:	strb	w0, [x1, #80]
  449fbc:	strb	w0, [x1, #81]
  449fc0:	strb	w0, [x1, #82]
  449fc4:	strb	w0, [x1, #83]
  449fc8:	strb	w0, [x1, #84]
  449fcc:	strb	w0, [x1, #85]
  449fd0:	strb	w0, [x1, #86]
  449fd4:	strb	w0, [x1, #87]
  449fd8:	strb	w0, [x1, #88]
  449fdc:	strb	w0, [x1, #89]
  449fe0:	strb	w0, [x1, #90]
  449fe4:	strb	w0, [x1, #91]
  449fe8:	strb	w0, [x1, #92]
  449fec:	strb	w0, [x1, #93]
  449ff0:	strb	w0, [x1, #94]
  449ff4:	strb	w0, [x1, #95]
  449ff8:	strb	w0, [x1, #48]
  449ffc:	strb	w0, [x1, #49]
  44a000:	strb	w0, [x1, #50]
  44a004:	strb	w0, [x1, #51]
  44a008:	strb	w0, [x1, #52]
  44a00c:	strb	w0, [x1, #53]
  44a010:	strb	w0, [x1, #54]
  44a014:	strb	w0, [x1, #55]
  44a018:	strb	w0, [x1, #56]
  44a01c:	strb	w0, [x1, #57]
  44a020:	strb	w0, [x1, #58]
  44a024:	strb	w0, [x1, #59]
  44a028:	strb	w0, [x1, #60]
  44a02c:	strb	w0, [x1, #61]
  44a030:	strb	w0, [x1, #62]
  44a034:	strb	w0, [x1, #63]
  44a038:	strb	w0, [x1, #96]
  44a03c:	ret
  44a040:	stp	x29, x30, [sp, #-112]!
  44a044:	mov	x2, #0x680                 	// #1664
  44a048:	mov	x29, sp
  44a04c:	stp	x19, x20, [sp, #16]
  44a050:	mov	x20, x0
  44a054:	mov	x19, x1
  44a058:	mov	x0, x1
  44a05c:	mov	w1, #0x0                   	// #0
  44a060:	bl	402840 <memset@plt>
  44a064:	str	xzr, [x20, #800]
  44a068:	ldr	x2, [x20, #792]
  44a06c:	str	xzr, [x20, #848]
  44a070:	cbz	x2, 44a3e4 <_obstack_memory_used@@Base+0xd38c>
  44a074:	ldr	d0, [x20, #832]
  44a078:	add	x1, x20, #0x328
  44a07c:	stp	x21, x22, [sp, #32]
  44a080:	cmge	d0, d0, #0
  44a084:	fmov	x0, d0
  44a088:	add	x0, x2, x0
  44a08c:	bl	44d780 <_obstack_memory_used@@Base+0x10728>
  44a090:	mov	x22, x0
  44a094:	cbz	x0, 44a448 <_obstack_memory_used@@Base+0xd3f0>
  44a098:	ldrsw	x1, [x0, #4]
  44a09c:	stp	x23, x24, [sp, #48]
  44a0a0:	add	x23, x0, #0x4
  44a0a4:	sub	x23, x23, x1
  44a0a8:	ldr	x0, [x20, #824]
  44a0ac:	str	x0, [x19, #1608]
  44a0b0:	add	x21, x23, #0x9
  44a0b4:	mov	x0, x21
  44a0b8:	bl	402630 <strlen@plt>
  44a0bc:	ldrb	w1, [x23, #9]
  44a0c0:	add	x2, x0, #0x1
  44a0c4:	add	x2, x21, x2
  44a0c8:	cmp	w1, #0x65
  44a0cc:	b.eq	44a2b8 <_obstack_memory_used@@Base+0xd260>  // b.none
  44a0d0:	ldrb	w6, [x23, #8]
  44a0d4:	ldrb	w3, [x2]
  44a0d8:	cmp	w6, #0x3
  44a0dc:	b.hi	44a528 <_obstack_memory_used@@Base+0xd4d0>  // b.pmore
  44a0e0:	stp	x25, x26, [sp, #64]
  44a0e4:	stp	x27, x28, [sp, #80]
  44a0e8:	mov	x5, #0x0                   	// #0
  44a0ec:	mov	w4, #0x0                   	// #0
  44a0f0:	b	44a0f8 <_obstack_memory_used@@Base+0xd0a0>
  44a0f4:	ldrb	w3, [x2]
  44a0f8:	and	x1, x3, #0x7f
  44a0fc:	add	x2, x2, #0x1
  44a100:	lsl	x1, x1, x4
  44a104:	add	w4, w4, #0x7
  44a108:	orr	x5, x5, x1
  44a10c:	tbnz	w3, #7, 44a0f4 <_obstack_memory_used@@Base+0xd09c>
  44a110:	mov	x0, #0x0                   	// #0
  44a114:	mov	w3, #0x0                   	// #0
  44a118:	str	x5, [x19, #1632]
  44a11c:	nop
  44a120:	mov	x5, x2
  44a124:	ldrb	w4, [x2], #1
  44a128:	and	x1, x4, #0x7f
  44a12c:	lsl	x1, x1, x3
  44a130:	add	w3, w3, #0x7
  44a134:	orr	x0, x0, x1
  44a138:	tbnz	w4, #7, 44a120 <_obstack_memory_used@@Base+0xd0c8>
  44a13c:	cmp	w3, #0x3f
  44a140:	b.hi	44a158 <_obstack_memory_used@@Base+0xd100>  // b.pmore
  44a144:	mov	x1, #0xffffffffffffffff    	// #-1
  44a148:	tst	x4, #0x40
  44a14c:	lsl	x3, x1, x3
  44a150:	orr	x3, x0, x3
  44a154:	csel	x0, x3, x0, ne  // ne = any
  44a158:	str	x0, [x19, #1624]
  44a15c:	cmp	w6, #0x1
  44a160:	mov	x4, #0x0                   	// #0
  44a164:	mov	w3, #0x0                   	// #0
  44a168:	b.eq	44a2d4 <_obstack_memory_used@@Base+0xd27c>  // b.none
  44a16c:	nop
  44a170:	ldrb	w0, [x2], #1
  44a174:	and	x1, x0, #0x7f
  44a178:	lsl	x1, x1, x3
  44a17c:	add	w3, w3, #0x7
  44a180:	orr	x4, x4, x1
  44a184:	tbnz	w0, #7, 44a170 <_obstack_memory_used@@Base+0xd118>
  44a188:	mov	w0, #0xffffffff            	// #-1
  44a18c:	str	x4, [x19, #1640]
  44a190:	strb	w0, [x19, #1649]
  44a194:	ldrb	w3, [x21]
  44a198:	cmp	w3, #0x7a
  44a19c:	b.eq	44a2f4 <_obstack_memory_used@@Base+0xd29c>  // b.none
  44a1a0:	mov	x24, #0x0                   	// #0
  44a1a4:	cbz	w3, 44a58c <_obstack_memory_used@@Base+0xd534>
  44a1a8:	add	x21, x21, #0x1
  44a1ac:	add	x25, sp, #0x68
  44a1b0:	mov	w26, #0x1                   	// #1
  44a1b4:	b	44a1dc <_obstack_memory_used@@Base+0xd184>
  44a1b8:	cmp	w3, #0x52
  44a1bc:	b.eq	44a338 <_obstack_memory_used@@Base+0xd2e0>  // b.none
  44a1c0:	cmp	w3, #0x50
  44a1c4:	b.eq	44a344 <_obstack_memory_used@@Base+0xd2ec>  // b.none
  44a1c8:	cmp	w3, #0x53
  44a1cc:	b.ne	44a3f8 <_obstack_memory_used@@Base+0xd3a0>  // b.any
  44a1d0:	strb	w26, [x19, #1651]
  44a1d4:	ldrb	w3, [x21], #1
  44a1d8:	cbz	w3, 44a1f4 <_obstack_memory_used@@Base+0xd19c>
  44a1dc:	cmp	w3, #0x4c
  44a1e0:	b.ne	44a1b8 <_obstack_memory_used@@Base+0xd160>  // b.any
  44a1e4:	ldrb	w0, [x2], #1
  44a1e8:	strb	w0, [x19, #1649]
  44a1ec:	ldrb	w3, [x21], #1
  44a1f0:	cbnz	w3, 44a1dc <_obstack_memory_used@@Base+0xd184>
  44a1f4:	cbz	x24, 44a3f4 <_obstack_memory_used@@Base+0xd39c>
  44a1f8:	ldr	w1, [x23]
  44a1fc:	mov	x0, x24
  44a200:	mov	x3, x19
  44a204:	mov	x2, x20
  44a208:	add	x1, x1, #0x4
  44a20c:	add	x1, x23, x1
  44a210:	bl	449738 <_obstack_memory_used@@Base+0xc6e0>
  44a214:	ldrb	w0, [x19, #1648]
  44a218:	cmp	w0, #0xff
  44a21c:	b.eq	44a520 <_obstack_memory_used@@Base+0xd4c8>  // b.none
  44a220:	and	w0, w0, #0x7
  44a224:	cmp	w0, #0x2
  44a228:	b.eq	44a518 <_obstack_memory_used@@Base+0xd4c0>  // b.none
  44a22c:	b.ls	44a38c <_obstack_memory_used@@Base+0xd334>  // b.plast
  44a230:	cmp	w0, #0x3
  44a234:	mov	x21, #0x10                  	// #16
  44a238:	b.ne	44a37c <_obstack_memory_used@@Base+0xd324>  // b.any
  44a23c:	ldrb	w0, [x19, #1650]
  44a240:	add	x21, x22, x21
  44a244:	ldrb	w24, [x19, #1649]
  44a248:	cbz	w0, 44a3a4 <_obstack_memory_used@@Base+0xd34c>
  44a24c:	mov	x0, #0x0                   	// #0
  44a250:	mov	w2, #0x0                   	// #0
  44a254:	nop
  44a258:	ldrb	w3, [x21], #1
  44a25c:	and	x1, x3, #0x7f
  44a260:	lsl	x1, x1, x2
  44a264:	add	w2, w2, #0x7
  44a268:	orr	x0, x0, x1
  44a26c:	tbnz	w3, #7, 44a258 <_obstack_memory_used@@Base+0xd200>
  44a270:	add	x23, x21, x0
  44a274:	cmp	w24, #0xff
  44a278:	b.ne	44a41c <_obstack_memory_used@@Base+0xd3c4>  // b.any
  44a27c:	ldr	w1, [x22]
  44a280:	mov	x0, x23
  44a284:	mov	x3, x19
  44a288:	mov	x2, x20
  44a28c:	add	x1, x1, #0x4
  44a290:	add	x1, x22, x1
  44a294:	bl	449738 <_obstack_memory_used@@Base+0xc6e0>
  44a298:	ldp	x21, x22, [sp, #32]
  44a29c:	mov	w0, #0x0                   	// #0
  44a2a0:	ldp	x23, x24, [sp, #48]
  44a2a4:	ldp	x25, x26, [sp, #64]
  44a2a8:	ldp	x27, x28, [sp, #80]
  44a2ac:	ldp	x19, x20, [sp, #16]
  44a2b0:	ldp	x29, x30, [sp], #112
  44a2b4:	ret
  44a2b8:	ldrb	w0, [x23, #10]
  44a2bc:	cmp	w0, #0x68
  44a2c0:	b.ne	44a0d0 <_obstack_memory_used@@Base+0xd078>  // b.any
  44a2c4:	ldr	x0, [x2], #8
  44a2c8:	add	x21, x23, #0xb
  44a2cc:	str	x0, [x19, #1656]
  44a2d0:	b	44a0d0 <_obstack_memory_used@@Base+0xd078>
  44a2d4:	ldrb	w0, [x2]
  44a2d8:	add	x2, x5, #0x2
  44a2dc:	str	x0, [x19, #1640]
  44a2e0:	mov	w0, #0xffffffff            	// #-1
  44a2e4:	strb	w0, [x19, #1649]
  44a2e8:	ldrb	w3, [x21]
  44a2ec:	cmp	w3, #0x7a
  44a2f0:	b.ne	44a1a0 <_obstack_memory_used@@Base+0xd148>  // b.any
  44a2f4:	mov	x0, #0x0                   	// #0
  44a2f8:	mov	w3, #0x0                   	// #0
  44a2fc:	nop
  44a300:	ldrb	w4, [x2], #1
  44a304:	and	x1, x4, #0x7f
  44a308:	lsl	x1, x1, x3
  44a30c:	add	w3, w3, #0x7
  44a310:	orr	x0, x0, x1
  44a314:	tbnz	w4, #7, 44a300 <_obstack_memory_used@@Base+0xd2a8>
  44a318:	mov	w1, #0x1                   	// #1
  44a31c:	strb	w1, [x19, #1650]
  44a320:	add	x24, x2, x0
  44a324:	add	x0, x21, #0x1
  44a328:	ldrb	w3, [x21, #1]
  44a32c:	cbz	w3, 44a1f8 <_obstack_memory_used@@Base+0xd1a0>
  44a330:	mov	x21, x0
  44a334:	b	44a1a8 <_obstack_memory_used@@Base+0xd150>
  44a338:	ldrb	w0, [x2], #1
  44a33c:	strb	w0, [x19, #1648]
  44a340:	b	44a1d4 <_obstack_memory_used@@Base+0xd17c>
  44a344:	mov	x27, x2
  44a348:	mov	x1, x20
  44a34c:	ldrb	w28, [x27], #1
  44a350:	mov	w0, w28
  44a354:	bl	4496c0 <_obstack_memory_used@@Base+0xc668>
  44a358:	mov	x2, x27
  44a35c:	mov	x1, x0
  44a360:	mov	x3, x25
  44a364:	mov	w0, w28
  44a368:	bl	449560 <_obstack_memory_used@@Base+0xc508>
  44a36c:	mov	x2, x0
  44a370:	ldr	x1, [sp, #104]
  44a374:	str	x1, [x19, #1616]
  44a378:	b	44a1d4 <_obstack_memory_used@@Base+0xd17c>
  44a37c:	cmp	w0, #0x4
  44a380:	mov	x21, #0x18                  	// #24
  44a384:	b.eq	44a23c <_obstack_memory_used@@Base+0xd1e4>  // b.none
  44a388:	bl	402970 <abort@plt>
  44a38c:	mov	x21, #0x18                  	// #24
  44a390:	cbnz	w0, 44a388 <_obstack_memory_used@@Base+0xd330>
  44a394:	ldrb	w0, [x19, #1650]
  44a398:	add	x21, x22, x21
  44a39c:	ldrb	w24, [x19, #1649]
  44a3a0:	cbnz	w0, 44a24c <_obstack_memory_used@@Base+0xd1f4>
  44a3a4:	mov	x23, x21
  44a3a8:	cmp	w24, #0xff
  44a3ac:	b.eq	44a27c <_obstack_memory_used@@Base+0xd224>  // b.none
  44a3b0:	mov	x1, x20
  44a3b4:	mov	w0, w24
  44a3b8:	bl	4496c0 <_obstack_memory_used@@Base+0xc668>
  44a3bc:	mov	x1, x0
  44a3c0:	mov	x2, x21
  44a3c4:	mov	w0, w24
  44a3c8:	add	x3, sp, #0x68
  44a3cc:	bl	449560 <_obstack_memory_used@@Base+0xc508>
  44a3d0:	ldr	x1, [sp, #104]
  44a3d4:	mov	x23, x0
  44a3d8:	str	x1, [x20, #800]
  44a3dc:	b	44a27c <_obstack_memory_used@@Base+0xd224>
  44a3e0:	ldp	x21, x22, [sp, #32]
  44a3e4:	mov	w0, #0x5                   	// #5
  44a3e8:	ldp	x19, x20, [sp, #16]
  44a3ec:	ldp	x29, x30, [sp], #112
  44a3f0:	ret
  44a3f4:	mov	x24, x2
  44a3f8:	cbnz	x24, 44a1f8 <_obstack_memory_used@@Base+0xd1a0>
  44a3fc:	ldp	x25, x26, [sp, #64]
  44a400:	ldp	x27, x28, [sp, #80]
  44a404:	mov	w0, #0x3                   	// #3
  44a408:	ldp	x19, x20, [sp, #16]
  44a40c:	ldp	x21, x22, [sp, #32]
  44a410:	ldp	x23, x24, [sp, #48]
  44a414:	ldp	x29, x30, [sp], #112
  44a418:	ret
  44a41c:	mov	x1, x20
  44a420:	mov	w0, w24
  44a424:	bl	4496c0 <_obstack_memory_used@@Base+0xc668>
  44a428:	mov	x1, x0
  44a42c:	mov	x2, x21
  44a430:	mov	w0, w24
  44a434:	add	x3, sp, #0x68
  44a438:	bl	449560 <_obstack_memory_used@@Base+0xc508>
  44a43c:	ldr	x0, [sp, #104]
  44a440:	str	x0, [x20, #800]
  44a444:	b	44a27c <_obstack_memory_used@@Base+0xd224>
  44a448:	ldr	x0, [x20, #792]
  44a44c:	mov	w1, #0x1168                	// #4456
  44a450:	movk	w1, #0xd280, lsl #16
  44a454:	ldr	w2, [x0]
  44a458:	cmp	w2, w1
  44a45c:	b.ne	44a3e0 <_obstack_memory_used@@Base+0xd388>  // b.any
  44a460:	ldr	w1, [x0, #4]
  44a464:	mov	w0, #0x1                   	// #1
  44a468:	movk	w0, #0xd400, lsl #16
  44a46c:	cmp	w1, w0
  44a470:	b.ne	44a3e0 <_obstack_memory_used@@Base+0xd388>  // b.any
  44a474:	ldr	x6, [x20, #784]
  44a478:	mov	w3, #0x1                   	// #1
  44a47c:	mov	x1, x19
  44a480:	mov	w2, w3
  44a484:	add	x8, x6, #0x130
  44a488:	mov	x4, #0x1f                  	// #31
  44a48c:	mov	x5, #0x130                 	// #304
  44a490:	mov	x0, #0x8                   	// #8
  44a494:	str	x5, [x19, #1576]
  44a498:	str	x4, [x19, #1584]
  44a49c:	str	w3, [x19, #1600]
  44a4a0:	str	w2, [x1, #8]
  44a4a4:	str	x0, [x1], #16
  44a4a8:	add	x0, x0, #0x8
  44a4ac:	cmp	x0, #0x100
  44a4b0:	b.ne	44a4a0 <_obstack_memory_used@@Base+0xd448>  // b.any
  44a4b4:	ldr	w0, [x6, #592]
  44a4b8:	add	x5, x6, #0x250
  44a4bc:	cbz	w0, 44a54c <_obstack_memory_used@@Base+0xd4f4>
  44a4c0:	mov	w7, #0x8001                	// #32769
  44a4c4:	add	x4, x19, #0x600
  44a4c8:	add	x9, x6, x19
  44a4cc:	movk	w7, #0x4650, lsl #16
  44a4d0:	mov	w3, #0x1                   	// #1
  44a4d4:	b	44a4e8 <_obstack_memory_used@@Base+0xd490>
  44a4d8:	ldr	w0, [x5, #4]
  44a4dc:	add	x5, x5, x0
  44a4e0:	ldr	w0, [x5]
  44a4e4:	cbz	w0, 44a54c <_obstack_memory_used@@Base+0xd4f4>
  44a4e8:	cmp	w0, w7
  44a4ec:	b.ne	44a4d8 <_obstack_memory_used@@Base+0xd480>  // b.any
  44a4f0:	sub	x2, x5, #0x520
  44a4f4:	add	x0, x19, #0x400
  44a4f8:	sub	x2, x2, x9
  44a4fc:	nop
  44a500:	str	w3, [x0, #8]
  44a504:	add	x1, x2, x0
  44a508:	str	x1, [x0], #16
  44a50c:	cmp	x4, x0
  44a510:	b.ne	44a500 <_obstack_memory_used@@Base+0xd4a8>  // b.any
  44a514:	b	44a4d8 <_obstack_memory_used@@Base+0xd480>
  44a518:	mov	x21, #0xc                   	// #12
  44a51c:	b	44a23c <_obstack_memory_used@@Base+0xd1e4>
  44a520:	mov	x21, #0x8                   	// #8
  44a524:	b	44a23c <_obstack_memory_used@@Base+0xd1e4>
  44a528:	cmp	w3, #0x8
  44a52c:	b.ne	44a404 <_obstack_memory_used@@Base+0xd3ac>  // b.any
  44a530:	ldrb	w0, [x2, #1]
  44a534:	cbnz	w0, 44a404 <_obstack_memory_used@@Base+0xd3ac>
  44a538:	stp	x25, x26, [sp, #64]
  44a53c:	add	x2, x2, #0x2
  44a540:	stp	x27, x28, [sp, #80]
  44a544:	ldrb	w3, [x2]
  44a548:	b	44a0e8 <_obstack_memory_used@@Base+0xd090>
  44a54c:	mov	w3, #0x1                   	// #1
  44a550:	strb	w3, [x19, #1651]
  44a554:	add	x1, x6, #0x230
  44a558:	mov	w5, #0x4                   	// #4
  44a55c:	ldr	x2, [x8, #264]
  44a560:	sub	x1, x1, x8
  44a564:	mov	x4, #0x60                  	// #96
  44a568:	mov	w0, #0x0                   	// #0
  44a56c:	sub	x8, x2, x8
  44a570:	ldp	x21, x22, [sp, #32]
  44a574:	str	x1, [x19, #496]
  44a578:	str	w3, [x19, #504]
  44a57c:	str	x8, [x19, #1536]
  44a580:	str	w5, [x19, #1544]
  44a584:	str	x4, [x19, #1640]
  44a588:	b	44a2ac <_obstack_memory_used@@Base+0xd254>
  44a58c:	mov	x24, x2
  44a590:	b	44a1f8 <_obstack_memory_used@@Base+0xd1a0>
  44a594:	nop
  44a598:	stp	x29, x30, [sp, #-80]!
  44a59c:	mov	x29, sp
  44a5a0:	stp	x21, x22, [sp, #32]
  44a5a4:	mov	x21, x0
  44a5a8:	ldr	x0, [x1, #832]
  44a5ac:	stp	x19, x20, [sp, #16]
  44a5b0:	mov	x20, x1
  44a5b4:	stp	x23, x24, [sp, #48]
  44a5b8:	tbz	x0, #62, 44a5c4 <_obstack_memory_used@@Base+0xd56c>
  44a5bc:	ldrb	w1, [x1, #887]
  44a5c0:	cbnz	w1, 44a5cc <_obstack_memory_used@@Base+0xd574>
  44a5c4:	ldr	x1, [x20, #248]
  44a5c8:	cbz	x1, 44a688 <_obstack_memory_used@@Base+0xd630>
  44a5cc:	adrp	x24, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44a5d0:	add	x23, x21, #0x358
  44a5d4:	add	x24, x24, #0xb20
  44a5d8:	add	x22, x20, #0x358
  44a5dc:	mov	x19, #0x0                   	// #0
  44a5e0:	b	44a604 <_obstack_memory_used@@Base+0xd5ac>
  44a5e4:	cbz	x0, 44a5f8 <_obstack_memory_used@@Base+0xd5a0>
  44a5e8:	ldrb	w2, [x19, x24]
  44a5ec:	cmp	w2, #0x8
  44a5f0:	b.ne	44a6f4 <_obstack_memory_used@@Base+0xd69c>  // b.any
  44a5f4:	str	x1, [x0]
  44a5f8:	add	x19, x19, #0x1
  44a5fc:	cmp	x19, #0x61
  44a600:	b.eq	44a640 <_obstack_memory_used@@Base+0xd5e8>  // b.none
  44a604:	ldrb	w2, [x23, x19]
  44a608:	ldr	x0, [x21, x19, lsl #3]
  44a60c:	ldr	x1, [x20, x19, lsl #3]
  44a610:	cbnz	w2, 44a6f4 <_obstack_memory_used@@Base+0xd69c>
  44a614:	ldrb	w2, [x22, x19]
  44a618:	cbnz	w2, 44a5e4 <_obstack_memory_used@@Base+0xd58c>
  44a61c:	cmp	x1, #0x0
  44a620:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  44a624:	ccmp	x0, x1, #0x4, ne  // ne = any
  44a628:	b.eq	44a5f8 <_obstack_memory_used@@Base+0xd5a0>  // b.none
  44a62c:	ldrb	w2, [x24, x19]
  44a630:	add	x19, x19, #0x1
  44a634:	bl	4025d0 <memcpy@plt>
  44a638:	cmp	x19, #0x61
  44a63c:	b.ne	44a604 <_obstack_memory_used@@Base+0xd5ac>  // b.any
  44a640:	ldr	x0, [x21, #832]
  44a644:	tbz	x0, #62, 44a650 <_obstack_memory_used@@Base+0xd5f8>
  44a648:	ldrb	w0, [x21, #887]
  44a64c:	cbnz	w0, 44a670 <_obstack_memory_used@@Base+0xd618>
  44a650:	ldr	x1, [x21, #248]
  44a654:	mov	x0, #0x0                   	// #0
  44a658:	cbz	x1, 44a6b4 <_obstack_memory_used@@Base+0xd65c>
  44a65c:	ldp	x19, x20, [sp, #16]
  44a660:	ldp	x21, x22, [sp, #32]
  44a664:	ldp	x23, x24, [sp, #48]
  44a668:	ldp	x29, x30, [sp], #80
  44a66c:	ret
  44a670:	mov	x0, #0x0                   	// #0
  44a674:	ldp	x19, x20, [sp, #16]
  44a678:	ldp	x21, x22, [sp, #32]
  44a67c:	ldp	x23, x24, [sp, #48]
  44a680:	ldp	x29, x30, [sp], #80
  44a684:	ret
  44a688:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44a68c:	ldr	x2, [x20, #784]
  44a690:	ldrb	w1, [x1, #2879]
  44a694:	cmp	w1, #0x8
  44a698:	b.ne	44a6f4 <_obstack_memory_used@@Base+0xd69c>  // b.any
  44a69c:	str	x2, [sp, #72]
  44a6a0:	tbz	x0, #62, 44a6a8 <_obstack_memory_used@@Base+0xd650>
  44a6a4:	strb	wzr, [x20, #887]
  44a6a8:	add	x0, sp, #0x48
  44a6ac:	str	x0, [x20, #248]
  44a6b0:	b	44a5cc <_obstack_memory_used@@Base+0xd574>
  44a6b4:	ldr	x1, [x20, #832]
  44a6b8:	ldr	x0, [x20, #248]
  44a6bc:	tbnz	x1, #62, 44a6e8 <_obstack_memory_used@@Base+0xd690>
  44a6c0:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44a6c4:	ldrb	w1, [x1, #2879]
  44a6c8:	cmp	w1, #0x8
  44a6cc:	b.ne	44a6f4 <_obstack_memory_used@@Base+0xd69c>  // b.any
  44a6d0:	ldr	x0, [x0]
  44a6d4:	ldr	x2, [x21, #784]
  44a6d8:	ldr	x1, [x20, #848]
  44a6dc:	sub	x0, x0, x2
  44a6e0:	add	x0, x0, x1
  44a6e4:	b	44a65c <_obstack_memory_used@@Base+0xd604>
  44a6e8:	ldrb	w1, [x20, #887]
  44a6ec:	cbz	w1, 44a6c0 <_obstack_memory_used@@Base+0xd668>
  44a6f0:	b	44a6d4 <_obstack_memory_used@@Base+0xd67c>
  44a6f4:	bl	402970 <abort@plt>
  44a6f8:	sub	sp, sp, #0x260
  44a6fc:	cmp	x0, x1
  44a700:	stp	x29, x30, [sp]
  44a704:	mov	x29, sp
  44a708:	str	x3, [sp, #96]
  44a70c:	b.cs	44ab64 <_obstack_memory_used@@Base+0xdb0c>  // b.hs, b.nlast
  44a710:	stp	x19, x20, [sp, #16]
  44a714:	mov	x19, x0
  44a718:	mov	w20, #0x1                   	// #1
  44a71c:	stp	x21, x22, [sp, #32]
  44a720:	mov	x21, x1
  44a724:	add	x22, sp, #0x60
  44a728:	stp	x23, x24, [sp, #48]
  44a72c:	adrp	x23, 45c000 <_obstack_memory_used@@Base+0x1efa8>
  44a730:	mov	x24, x2
  44a734:	add	x23, x23, #0x42c
  44a738:	stp	x25, x26, [sp, #64]
  44a73c:	adrp	x25, 45c000 <_obstack_memory_used@@Base+0x1efa8>
  44a740:	add	x25, x25, #0x60c
  44a744:	nop
  44a748:	mov	x4, x19
  44a74c:	ldrb	w5, [x4], #1
  44a750:	sub	w0, w5, #0x3
  44a754:	cmp	w0, #0xee
  44a758:	b.ls	44a760 <_obstack_memory_used@@Base+0xd708>  // b.plast
  44a75c:	bl	402970 <abort@plt>
  44a760:	ldrh	w0, [x23, w0, uxtw #1]
  44a764:	adr	x1, 44a770 <_obstack_memory_used@@Base+0xd718>
  44a768:	add	x0, x1, w0, sxth #2
  44a76c:	br	x0
  44a770:	mov	x3, #0x0                   	// #0
  44a774:	mov	w1, #0x0                   	// #0
  44a778:	ldrb	w2, [x4], #1
  44a77c:	and	x0, x2, #0x7f
  44a780:	lsl	x0, x0, x1
  44a784:	add	w1, w1, #0x7
  44a788:	orr	x3, x3, x0
  44a78c:	tbnz	w2, #7, 44a778 <_obstack_memory_used@@Base+0xd720>
  44a790:	cmp	w1, #0x3f
  44a794:	b.ls	44aaf8 <_obstack_memory_used@@Base+0xdaa0>  // b.plast
  44a798:	sub	w5, w5, #0x70
  44a79c:	cmp	w5, #0x61
  44a7a0:	b.gt	44a75c <_obstack_memory_used@@Base+0xd704>
  44a7a4:	ldr	x2, [x24, #832]
  44a7a8:	sxtw	x1, w5
  44a7ac:	ldr	x0, [x24, x1, lsl #3]
  44a7b0:	tbz	x2, #62, 44a7c0 <_obstack_memory_used@@Base+0xd768>
  44a7b4:	add	x1, x24, x1
  44a7b8:	ldrb	w1, [x1, #856]
  44a7bc:	cbnz	w1, 44a7e0 <_obstack_memory_used@@Base+0xd788>
  44a7c0:	cmp	w5, #0x2e
  44a7c4:	b.eq	44ab58 <_obstack_memory_used@@Base+0xdb00>  // b.none
  44a7c8:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44a7cc:	add	x1, x1, #0xb20
  44a7d0:	ldrb	w1, [x1, w5, sxtw]
  44a7d4:	cmp	w1, #0x8
  44a7d8:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44a7dc:	ldr	x0, [x0]
  44a7e0:	add	x0, x3, x0
  44a7e4:	mov	w3, w20
  44a7e8:	mov	x19, x4
  44a7ec:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44a7f0:	mov	w3, w20
  44a7f4:	add	x19, x19, #0x9
  44a7f8:	ldur	x0, [x19, #-8]
  44a7fc:	nop
  44a800:	cmp	w3, #0x3f
  44a804:	b.gt	44a75c <_obstack_memory_used@@Base+0xd704>
  44a808:	add	w20, w3, #0x1
  44a80c:	str	x0, [x22, w3, sxtw #3]
  44a810:	cmp	x21, x19
  44a814:	b.hi	44a748 <_obstack_memory_used@@Base+0xd6f0>  // b.pmore
  44a818:	cbz	w20, 44a75c <_obstack_memory_used@@Base+0xd704>
  44a81c:	sub	w20, w20, #0x1
  44a820:	add	x0, sp, #0x60
  44a824:	ldp	x29, x30, [sp]
  44a828:	ldr	x0, [x0, w20, sxtw #3]
  44a82c:	ldp	x19, x20, [sp, #16]
  44a830:	ldp	x21, x22, [sp, #32]
  44a834:	ldp	x23, x24, [sp, #48]
  44a838:	ldp	x25, x26, [sp, #64]
  44a83c:	add	sp, sp, #0x260
  44a840:	ret
  44a844:	sub	w5, w5, #0x50
  44a848:	cmp	w5, #0x61
  44a84c:	b.gt	44a75c <_obstack_memory_used@@Base+0xd704>
  44a850:	ldr	x2, [x24, #832]
  44a854:	sxtw	x1, w5
  44a858:	ldr	x0, [x24, x1, lsl #3]
  44a85c:	tbz	x2, #62, 44a86c <_obstack_memory_used@@Base+0xd814>
  44a860:	add	x1, x24, x1
  44a864:	ldrb	w1, [x1, #856]
  44a868:	cbnz	w1, 44a7e4 <_obstack_memory_used@@Base+0xd78c>
  44a86c:	cmp	w5, #0x2e
  44a870:	b.eq	44ab44 <_obstack_memory_used@@Base+0xdaec>  // b.none
  44a874:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44a878:	add	x1, x1, #0xb20
  44a87c:	ldrb	w1, [x1, w5, sxtw]
  44a880:	cmp	w1, #0x8
  44a884:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44a888:	mov	w3, w20
  44a88c:	mov	x19, x4
  44a890:	ldr	x0, [x0]
  44a894:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44a898:	sub	w0, w5, #0x30
  44a89c:	mov	w3, w20
  44a8a0:	mov	x19, x4
  44a8a4:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44a8a8:	cmp	w20, #0x1
  44a8ac:	b.le	44a75c <_obstack_memory_used@@Base+0xd704>
  44a8b0:	sub	w3, w20, #0x2
  44a8b4:	sub	w20, w20, #0x1
  44a8b8:	sub	w5, w5, #0x1a
  44a8bc:	cmp	w5, #0x14
  44a8c0:	ldr	x1, [x22, w20, sxtw #3]
  44a8c4:	ldr	x0, [x22, w3, sxtw #3]
  44a8c8:	b.hi	44a75c <_obstack_memory_used@@Base+0xd704>  // b.pmore
  44a8cc:	ldrh	w2, [x25, w5, uxtw #1]
  44a8d0:	adr	x5, 44a8dc <_obstack_memory_used@@Base+0xd884>
  44a8d4:	add	x2, x5, w2, sxth #2
  44a8d8:	br	x2
  44a8dc:	cbz	w20, 44a75c <_obstack_memory_used@@Base+0xd704>
  44a8e0:	sub	w3, w20, #0x1
  44a8e4:	cmp	w5, #0x20
  44a8e8:	ldr	x0, [x22, w3, sxtw #3]
  44a8ec:	b.eq	44ae40 <_obstack_memory_used@@Base+0xdde8>  // b.none
  44a8f0:	b.hi	44a910 <_obstack_memory_used@@Base+0xd8b8>  // b.pmore
  44a8f4:	cmp	w5, #0x19
  44a8f8:	b.eq	44ab74 <_obstack_memory_used@@Base+0xdb1c>  // b.none
  44a8fc:	cmp	w5, #0x1f
  44a900:	b.ne	44aae4 <_obstack_memory_used@@Base+0xda8c>  // b.any
  44a904:	neg	x0, x0
  44a908:	mov	x19, x4
  44a90c:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44a910:	cmp	w5, #0x23
  44a914:	b.eq	44ab18 <_obstack_memory_used@@Base+0xdac0>  // b.none
  44a918:	cmp	w5, #0x94
  44a91c:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44a920:	ldrb	w1, [x19, #1]
  44a924:	add	x19, x19, #0x2
  44a928:	cmp	w1, #0x4
  44a92c:	b.eq	44ad30 <_obstack_memory_used@@Base+0xdcd8>  // b.none
  44a930:	b.hi	44ae5c <_obstack_memory_used@@Base+0xde04>  // b.pmore
  44a934:	cmp	w1, #0x1
  44a938:	b.ne	44ae4c <_obstack_memory_used@@Base+0xddf4>  // b.any
  44a93c:	ldrb	w0, [x0]
  44a940:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44a944:	cmp	w20, #0x2
  44a948:	b.le	44a75c <_obstack_memory_used@@Base+0xd704>
  44a94c:	sub	w1, w20, #0x2
  44a950:	sub	w2, w20, #0x1
  44a954:	sub	w0, w20, #0x3
  44a958:	mov	x19, x4
  44a95c:	sxtw	x1, w1
  44a960:	sxtw	x2, w2
  44a964:	sxtw	x0, w0
  44a968:	ldr	x5, [x22, x1, lsl #3]
  44a96c:	ldr	x3, [x22, x2, lsl #3]
  44a970:	ldr	x4, [x22, x0, lsl #3]
  44a974:	str	x5, [x22, x2, lsl #3]
  44a978:	str	x4, [x22, x1, lsl #3]
  44a97c:	str	x3, [x22, x0, lsl #3]
  44a980:	b	44a810 <_obstack_memory_used@@Base+0xd7b8>
  44a984:	cmp	w20, #0x1
  44a988:	b.le	44a75c <_obstack_memory_used@@Base+0xd704>
  44a98c:	sub	w0, w20, #0x2
  44a990:	sub	w1, w20, #0x1
  44a994:	mov	x19, x4
  44a998:	sxtw	x0, w0
  44a99c:	sxtw	x1, w1
  44a9a0:	ldr	x3, [x22, x0, lsl #3]
  44a9a4:	ldr	x2, [x22, x1, lsl #3]
  44a9a8:	str	x3, [x22, x1, lsl #3]
  44a9ac:	str	x2, [x22, x0, lsl #3]
  44a9b0:	b	44a810 <_obstack_memory_used@@Base+0xd7b8>
  44a9b4:	ldrb	w3, [x19, #1]
  44a9b8:	sub	w1, w20, #0x1
  44a9bc:	add	x19, x19, #0x2
  44a9c0:	sxtw	x2, w1
  44a9c4:	cmp	x3, w1, sxtw
  44a9c8:	b.ge	44a75c <_obstack_memory_used@@Base+0xd704>  // b.tcont
  44a9cc:	sub	x1, x2, x3
  44a9d0:	mov	w3, w20
  44a9d4:	ldr	x0, [x22, x1, lsl #3]
  44a9d8:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44a9dc:	cmp	w20, #0x1
  44a9e0:	b.le	44a75c <_obstack_memory_used@@Base+0xd704>
  44a9e4:	sub	w0, w20, #0x2
  44a9e8:	mov	x19, x4
  44a9ec:	mov	w3, w20
  44a9f0:	ldr	x0, [x22, w0, sxtw #3]
  44a9f4:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44a9f8:	cbz	w20, 44a75c <_obstack_memory_used@@Base+0xd704>
  44a9fc:	sub	w20, w20, #0x1
  44aa00:	mov	x19, x4
  44aa04:	b	44a810 <_obstack_memory_used@@Base+0xd7b8>
  44aa08:	cbz	w20, 44a75c <_obstack_memory_used@@Base+0xd704>
  44aa0c:	sub	w0, w20, #0x1
  44aa10:	mov	x19, x4
  44aa14:	mov	w3, w20
  44aa18:	ldr	x0, [x22, w0, sxtw #3]
  44aa1c:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aa20:	ldursh	x1, [x19, #1]
  44aa24:	add	x19, x19, #0x3
  44aa28:	add	x19, x19, x1
  44aa2c:	b	44a810 <_obstack_memory_used@@Base+0xd7b8>
  44aa30:	ldrb	w0, [x19, #1]
  44aa34:	mov	w3, w20
  44aa38:	add	x19, x19, #0x2
  44aa3c:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aa40:	ldrb	w26, [x19, #1]
  44aa44:	mov	x1, x24
  44aa48:	mov	w0, w26
  44aa4c:	bl	4496c0 <_obstack_memory_used@@Base+0xc668>
  44aa50:	add	x2, x19, #0x2
  44aa54:	mov	x1, x0
  44aa58:	add	x3, sp, #0x58
  44aa5c:	mov	w0, w26
  44aa60:	bl	449560 <_obstack_memory_used@@Base+0xc508>
  44aa64:	mov	x19, x0
  44aa68:	mov	w3, w20
  44aa6c:	ldr	x0, [sp, #88]
  44aa70:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aa74:	cbz	w20, 44a75c <_obstack_memory_used@@Base+0xd704>
  44aa78:	sub	w20, w20, #0x1
  44aa7c:	add	x1, x19, #0x3
  44aa80:	ldr	x0, [x22, w20, sxtw #3]
  44aa84:	cbz	x0, 44ab10 <_obstack_memory_used@@Base+0xdab8>
  44aa88:	ldursh	x19, [x19, #1]
  44aa8c:	add	x19, x1, x19
  44aa90:	b	44a810 <_obstack_memory_used@@Base+0xd7b8>
  44aa94:	ldursw	x0, [x19, #1]
  44aa98:	mov	w3, w20
  44aa9c:	add	x19, x19, #0x5
  44aaa0:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aaa4:	ldur	w0, [x19, #1]
  44aaa8:	mov	w3, w20
  44aaac:	add	x19, x19, #0x5
  44aab0:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aab4:	ldursh	x0, [x19, #1]
  44aab8:	mov	w3, w20
  44aabc:	add	x19, x19, #0x3
  44aac0:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aac4:	ldurh	w0, [x19, #1]
  44aac8:	mov	w3, w20
  44aacc:	add	x19, x19, #0x3
  44aad0:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aad4:	ldrsb	x0, [x19, #1]
  44aad8:	mov	w3, w20
  44aadc:	add	x19, x19, #0x2
  44aae0:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aae4:	cmp	w5, #0x6
  44aae8:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44aaec:	mov	x19, x4
  44aaf0:	ldr	x0, [x0]
  44aaf4:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44aaf8:	mov	x0, #0xffffffffffffffff    	// #-1
  44aafc:	tst	x2, #0x40
  44ab00:	lsl	x0, x0, x1
  44ab04:	orr	x0, x3, x0
  44ab08:	csel	x3, x0, x3, ne  // ne = any
  44ab0c:	b	44a798 <_obstack_memory_used@@Base+0xd740>
  44ab10:	mov	x19, x1
  44ab14:	b	44a810 <_obstack_memory_used@@Base+0xd7b8>
  44ab18:	mov	x6, #0x0                   	// #0
  44ab1c:	mov	w2, #0x0                   	// #0
  44ab20:	ldrb	w5, [x4], #1
  44ab24:	and	x1, x5, #0x7f
  44ab28:	lsl	x1, x1, x2
  44ab2c:	add	w2, w2, #0x7
  44ab30:	orr	x6, x6, x1
  44ab34:	tbnz	w5, #7, 44ab20 <_obstack_memory_used@@Base+0xdac8>
  44ab38:	add	x0, x0, x6
  44ab3c:	mov	x19, x4
  44ab40:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ab44:	cntd	x0
  44ab48:	mov	w3, w20
  44ab4c:	mov	x19, x4
  44ab50:	sxtw	x0, w0
  44ab54:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ab58:	cntd	x0
  44ab5c:	sxtw	x0, w0
  44ab60:	b	44a7e0 <_obstack_memory_used@@Base+0xd788>
  44ab64:	mov	x0, x3
  44ab68:	ldp	x29, x30, [sp]
  44ab6c:	add	sp, sp, #0x260
  44ab70:	ret
  44ab74:	cmp	x0, #0x0
  44ab78:	mov	x19, x4
  44ab7c:	cneg	x0, x0, lt  // lt = tstop
  44ab80:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ab84:	mov	x19, x4
  44ab88:	mov	w1, #0x0                   	// #0
  44ab8c:	mov	x4, #0x0                   	// #0
  44ab90:	ldrb	w2, [x19], #1
  44ab94:	and	x0, x2, #0x7f
  44ab98:	lsl	x0, x0, x1
  44ab9c:	add	w1, w1, #0x7
  44aba0:	orr	x4, x4, x0
  44aba4:	tbnz	w2, #7, 44ab90 <_obstack_memory_used@@Base+0xdb38>
  44aba8:	mov	x3, #0x0                   	// #0
  44abac:	mov	w1, #0x0                   	// #0
  44abb0:	ldrb	w2, [x19], #1
  44abb4:	and	x0, x2, #0x7f
  44abb8:	lsl	x0, x0, x1
  44abbc:	add	w1, w1, #0x7
  44abc0:	orr	x3, x3, x0
  44abc4:	tbnz	w2, #7, 44abb0 <_obstack_memory_used@@Base+0xdb58>
  44abc8:	cmp	w1, #0x3f
  44abcc:	b.hi	44abe4 <_obstack_memory_used@@Base+0xdb8c>  // b.pmore
  44abd0:	mov	x0, #0xffffffffffffffff    	// #-1
  44abd4:	tst	x2, #0x40
  44abd8:	lsl	x0, x0, x1
  44abdc:	orr	x0, x3, x0
  44abe0:	csel	x3, x0, x3, ne  // ne = any
  44abe4:	cmp	w4, #0x61
  44abe8:	mov	w1, w4
  44abec:	b.gt	44a75c <_obstack_memory_used@@Base+0xd704>
  44abf0:	ldr	x2, [x24, #832]
  44abf4:	sxtw	x4, w4
  44abf8:	ldr	x0, [x24, x4, lsl #3]
  44abfc:	tbz	x2, #62, 44ac0c <_obstack_memory_used@@Base+0xdbb4>
  44ac00:	add	x4, x24, x4
  44ac04:	ldrb	w2, [x4, #856]
  44ac08:	cbnz	w2, 44ac2c <_obstack_memory_used@@Base+0xdbd4>
  44ac0c:	cmp	w1, #0x2e
  44ac10:	b.eq	44ae20 <_obstack_memory_used@@Base+0xddc8>  // b.none
  44ac14:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44ac18:	add	x2, x2, #0xb20
  44ac1c:	ldrb	w1, [x2, w1, sxtw]
  44ac20:	cmp	w1, #0x8
  44ac24:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44ac28:	ldr	x0, [x0]
  44ac2c:	add	x0, x3, x0
  44ac30:	mov	w3, w20
  44ac34:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ac38:	mov	x19, x4
  44ac3c:	mov	x0, #0x0                   	// #0
  44ac40:	mov	w2, #0x0                   	// #0
  44ac44:	nop
  44ac48:	ldrb	w4, [x19], #1
  44ac4c:	and	x1, x4, #0x7f
  44ac50:	lsl	x1, x1, x2
  44ac54:	add	w2, w2, #0x7
  44ac58:	orr	x0, x0, x1
  44ac5c:	tbnz	w4, #7, 44ac48 <_obstack_memory_used@@Base+0xdbf0>
  44ac60:	mov	w3, w20
  44ac64:	cmp	w2, #0x3f
  44ac68:	b.hi	44a800 <_obstack_memory_used@@Base+0xd7a8>  // b.pmore
  44ac6c:	tbz	w4, #6, 44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ac70:	mov	x1, #0xffffffffffffffff    	// #-1
  44ac74:	lsl	x2, x1, x2
  44ac78:	orr	x0, x0, x2
  44ac7c:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ac80:	mov	x19, x4
  44ac84:	mov	x0, #0x0                   	// #0
  44ac88:	mov	w2, #0x0                   	// #0
  44ac8c:	nop
  44ac90:	ldrb	w3, [x19], #1
  44ac94:	and	x1, x3, #0x7f
  44ac98:	lsl	x1, x1, x2
  44ac9c:	add	w2, w2, #0x7
  44aca0:	orr	x0, x0, x1
  44aca4:	tbnz	w3, #7, 44ac90 <_obstack_memory_used@@Base+0xdc38>
  44aca8:	mov	w3, w20
  44acac:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44acb0:	mov	x19, x4
  44acb4:	mov	x3, #0x0                   	// #0
  44acb8:	mov	w1, #0x0                   	// #0
  44acbc:	nop
  44acc0:	ldrb	w2, [x19], #1
  44acc4:	and	x0, x2, #0x7f
  44acc8:	lsl	x0, x0, x1
  44accc:	add	w1, w1, #0x7
  44acd0:	orr	x3, x3, x0
  44acd4:	tbnz	w2, #7, 44acc0 <_obstack_memory_used@@Base+0xdc68>
  44acd8:	cmp	w3, #0x61
  44acdc:	mov	w1, w3
  44ace0:	b.gt	44a75c <_obstack_memory_used@@Base+0xd704>
  44ace4:	ldr	x2, [x24, #832]
  44ace8:	sxtw	x3, w3
  44acec:	ldr	x0, [x24, x3, lsl #3]
  44acf0:	tbz	x2, #62, 44ad00 <_obstack_memory_used@@Base+0xdca8>
  44acf4:	add	x3, x24, x3
  44acf8:	ldrb	w2, [x3, #856]
  44acfc:	cbnz	w2, 44ac30 <_obstack_memory_used@@Base+0xdbd8>
  44ad00:	cmp	w1, #0x2e
  44ad04:	b.eq	44ae30 <_obstack_memory_used@@Base+0xddd8>  // b.none
  44ad08:	adrp	x2, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44ad0c:	add	x2, x2, #0xb20
  44ad10:	ldrb	w1, [x2, w1, sxtw]
  44ad14:	cmp	w1, #0x8
  44ad18:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44ad1c:	mov	w3, w20
  44ad20:	ldr	x0, [x0]
  44ad24:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad28:	mov	x19, x4
  44ad2c:	b	44a810 <_obstack_memory_used@@Base+0xd7b8>
  44ad30:	ldr	w0, [x0]
  44ad34:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad38:	cmp	x0, x1
  44ad3c:	mov	x19, x4
  44ad40:	cset	x0, ne  // ne = any
  44ad44:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad48:	cmp	x0, x1
  44ad4c:	mov	x19, x4
  44ad50:	cset	x0, lt  // lt = tstop
  44ad54:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad58:	cmp	x0, x1
  44ad5c:	mov	x19, x4
  44ad60:	cset	x0, le
  44ad64:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad68:	cmp	x0, x1
  44ad6c:	mov	x19, x4
  44ad70:	cset	x0, gt
  44ad74:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad78:	cmp	x0, x1
  44ad7c:	mov	x19, x4
  44ad80:	cset	x0, ge  // ge = tcont
  44ad84:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad88:	cmp	x0, x1
  44ad8c:	mov	x19, x4
  44ad90:	cset	x0, eq  // eq = none
  44ad94:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ad98:	eor	x0, x0, x1
  44ad9c:	mov	x19, x4
  44ada0:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ada4:	mov	x19, x4
  44ada8:	asr	x0, x0, x1
  44adac:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44adb0:	mov	x19, x4
  44adb4:	lsr	x0, x0, x1
  44adb8:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44adbc:	mov	x19, x4
  44adc0:	lsl	x0, x0, x1
  44adc4:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44adc8:	add	x0, x0, x1
  44adcc:	mov	x19, x4
  44add0:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44add4:	orr	x0, x0, x1
  44add8:	mov	x19, x4
  44addc:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ade0:	mul	x0, x0, x1
  44ade4:	mov	x19, x4
  44ade8:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44adec:	udiv	x2, x0, x1
  44adf0:	mov	x19, x4
  44adf4:	msub	x0, x2, x1, x0
  44adf8:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44adfc:	sub	x0, x0, x1
  44ae00:	mov	x19, x4
  44ae04:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ae08:	sdiv	x0, x0, x1
  44ae0c:	mov	x19, x4
  44ae10:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ae14:	and	x0, x0, x1
  44ae18:	mov	x19, x4
  44ae1c:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ae20:	cntd	x0
  44ae24:	sxtw	x0, w0
  44ae28:	add	x0, x3, x0
  44ae2c:	b	44ac30 <_obstack_memory_used@@Base+0xdbd8>
  44ae30:	cntd	x0
  44ae34:	mov	w3, w20
  44ae38:	sxtw	x0, w0
  44ae3c:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ae40:	mvn	x0, x0
  44ae44:	mov	x19, x4
  44ae48:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ae4c:	cmp	w1, #0x2
  44ae50:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44ae54:	ldrh	w0, [x0]
  44ae58:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ae5c:	cmp	w1, #0x8
  44ae60:	b.ne	44a75c <_obstack_memory_used@@Base+0xd704>  // b.any
  44ae64:	ldr	x0, [x0]
  44ae68:	b	44a800 <_obstack_memory_used@@Base+0xd7a8>
  44ae6c:	nop
  44ae70:	sub	sp, sp, #0x440
  44ae74:	mov	x2, #0x3c0                 	// #960
  44ae78:	stp	x29, x30, [sp]
  44ae7c:	mov	x29, sp
  44ae80:	stp	x27, x28, [sp, #80]
  44ae84:	add	x28, sp, #0x80
  44ae88:	mov	x27, x0
  44ae8c:	stp	x19, x20, [sp, #16]
  44ae90:	stp	x21, x22, [sp, #32]
  44ae94:	stp	x23, x24, [sp, #48]
  44ae98:	stp	x25, x26, [sp, #64]
  44ae9c:	str	x1, [sp, #104]
  44aea0:	mov	x1, x0
  44aea4:	mov	x0, x28
  44aea8:	bl	4025d0 <memcpy@plt>
  44aeac:	ldr	x1, [sp, #960]
  44aeb0:	tbz	x1, #62, 44aebc <_obstack_memory_used@@Base+0xde64>
  44aeb4:	ldrb	w0, [sp, #1015]
  44aeb8:	cbnz	w0, 44aec4 <_obstack_memory_used@@Base+0xde6c>
  44aebc:	ldr	x0, [x28, #248]
  44aec0:	cbz	x0, 44b190 <_obstack_memory_used@@Base+0xe138>
  44aec4:	ldr	x0, [x27, #832]
  44aec8:	tbz	x0, #62, 44aed0 <_obstack_memory_used@@Base+0xde78>
  44aecc:	strb	wzr, [x27, #887]
  44aed0:	ldr	x0, [sp, #104]
  44aed4:	ldr	w0, [x0, #1600]
  44aed8:	str	xzr, [x27, #248]
  44aedc:	cmp	w0, #0x1
  44aee0:	b.ne	44af30 <_obstack_memory_used@@Base+0xded8>  // b.any
  44aee4:	ldr	x0, [sp, #104]
  44aee8:	ldr	x0, [x0, #1584]
  44aeec:	cmp	w0, #0x61
  44aef0:	b.gt	44b0f8 <_obstack_memory_used@@Base+0xe0a0>
  44aef4:	sxtw	x2, w0
  44aef8:	ldr	x3, [x28, x2, lsl #3]
  44aefc:	tbnz	x1, #62, 44b170 <_obstack_memory_used@@Base+0xe118>
  44af00:	cmp	w0, #0x2e
  44af04:	b.eq	44b184 <_obstack_memory_used@@Base+0xe12c>  // b.none
  44af08:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44af0c:	add	x0, x0, #0xb20
  44af10:	ldrb	w0, [x0, x2]
  44af14:	cmp	w0, #0x8
  44af18:	b.ne	44b0f8 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  44af1c:	ldr	x3, [x3]
  44af20:	ldr	x0, [sp, #104]
  44af24:	ldr	x0, [x0, #1576]
  44af28:	add	x22, x3, x0
  44af2c:	b	44af74 <_obstack_memory_used@@Base+0xdf1c>
  44af30:	cmp	w0, #0x2
  44af34:	b.ne	44b0f8 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  44af38:	ldr	x0, [sp, #104]
  44af3c:	mov	x1, #0x0                   	// #0
  44af40:	mov	w3, #0x0                   	// #0
  44af44:	ldr	x0, [x0, #1592]
  44af48:	ldrb	w4, [x0], #1
  44af4c:	and	x2, x4, #0x7f
  44af50:	lsl	x2, x2, x3
  44af54:	add	w3, w3, #0x7
  44af58:	orr	x1, x1, x2
  44af5c:	tbnz	w4, #7, 44af48 <_obstack_memory_used@@Base+0xdef0>
  44af60:	add	x1, x0, x1
  44af64:	mov	x2, x28
  44af68:	mov	x3, #0x0                   	// #0
  44af6c:	bl	44a6f8 <_obstack_memory_used@@Base+0xd6a0>
  44af70:	mov	x22, x0
  44af74:	ldr	x25, [sp, #104]
  44af78:	adrp	x23, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44af7c:	add	x26, x27, #0x358
  44af80:	add	x20, x23, #0xb20
  44af84:	add	x21, sp, #0x3d8
  44af88:	mov	x24, #0x0                   	// #0
  44af8c:	mov	w19, #0x1                   	// #1
  44af90:	str	x22, [x27, #784]
  44af94:	nop
  44af98:	ldr	w2, [x25, #8]
  44af9c:	cmp	w2, #0x3
  44afa0:	b.eq	44b044 <_obstack_memory_used@@Base+0xdfec>  // b.none
  44afa4:	b.hi	44b088 <_obstack_memory_used@@Base+0xe030>  // b.pmore
  44afa8:	cmp	w2, #0x1
  44afac:	b.eq	44b0fc <_obstack_memory_used@@Base+0xe0a4>  // b.none
  44afb0:	cmp	w2, #0x2
  44afb4:	b.ne	44afdc <_obstack_memory_used@@Base+0xdf84>  // b.any
  44afb8:	ldr	x0, [x25]
  44afbc:	ldrb	w2, [x21, w0, sxtw]
  44afc0:	sxtw	x1, w0
  44afc4:	cbnz	w2, 44b114 <_obstack_memory_used@@Base+0xe0bc>
  44afc8:	ldr	x2, [x27, #832]
  44afcc:	ldr	x0, [x28, x1, lsl #3]
  44afd0:	tbnz	x2, #62, 44b080 <_obstack_memory_used@@Base+0xe028>
  44afd4:	nop
  44afd8:	str	x0, [x27, x24, lsl #3]
  44afdc:	add	x24, x24, #0x1
  44afe0:	add	x25, x25, #0x10
  44afe4:	cmp	x24, #0x62
  44afe8:	add	x26, x26, #0x1
  44afec:	b.ne	44af98 <_obstack_memory_used@@Base+0xdf40>  // b.any
  44aff0:	ldr	x3, [sp, #104]
  44aff4:	ldr	x0, [x27, #832]
  44aff8:	ldrb	w2, [x3, #1651]
  44affc:	orr	x1, x0, #0x8000000000000000
  44b000:	and	x0, x0, #0x7fffffffffffffff
  44b004:	cmp	w2, #0x0
  44b008:	csel	x0, x0, x1, eq  // eq = none
  44b00c:	ldp	x29, x30, [sp]
  44b010:	orr	x1, x0, #0x2000000000000000
  44b014:	ldp	x19, x20, [sp, #16]
  44b018:	ldp	x21, x22, [sp, #32]
  44b01c:	ldp	x23, x24, [sp, #48]
  44b020:	ldp	x25, x26, [sp, #64]
  44b024:	str	x0, [x27, #832]
  44b028:	ldr	x2, [x3, #544]
  44b02c:	tst	x2, #0x1
  44b030:	csel	x0, x1, x0, ne  // ne = any
  44b034:	str	x0, [x27, #832]
  44b038:	ldp	x27, x28, [sp, #80]
  44b03c:	add	sp, sp, #0x440
  44b040:	ret
  44b044:	ldr	x0, [x25]
  44b048:	mov	x1, #0x0                   	// #0
  44b04c:	mov	w4, #0x0                   	// #0
  44b050:	ldrb	w5, [x0], #1
  44b054:	and	x2, x5, #0x7f
  44b058:	lsl	x2, x2, x4
  44b05c:	add	w4, w4, #0x7
  44b060:	orr	x1, x1, x2
  44b064:	tbnz	w5, #7, 44b050 <_obstack_memory_used@@Base+0xdff8>
  44b068:	add	x1, x0, x1
  44b06c:	mov	x3, x22
  44b070:	mov	x2, x28
  44b074:	bl	44a6f8 <_obstack_memory_used@@Base+0xd6a0>
  44b078:	ldr	x1, [x27, #832]
  44b07c:	tbz	x1, #62, 44afd8 <_obstack_memory_used@@Base+0xdf80>
  44b080:	strb	wzr, [x26]
  44b084:	b	44afd8 <_obstack_memory_used@@Base+0xdf80>
  44b088:	cmp	w2, #0x4
  44b08c:	b.eq	44b0e4 <_obstack_memory_used@@Base+0xe08c>  // b.none
  44b090:	cmp	w2, #0x5
  44b094:	b.ne	44afdc <_obstack_memory_used@@Base+0xdf84>  // b.any
  44b098:	ldr	x0, [x25]
  44b09c:	mov	x1, #0x0                   	// #0
  44b0a0:	mov	w4, #0x0                   	// #0
  44b0a4:	nop
  44b0a8:	ldrb	w5, [x0], #1
  44b0ac:	and	x2, x5, #0x7f
  44b0b0:	lsl	x2, x2, x4
  44b0b4:	add	w4, w4, #0x7
  44b0b8:	orr	x1, x1, x2
  44b0bc:	tbnz	w5, #7, 44b0a8 <_obstack_memory_used@@Base+0xe050>
  44b0c0:	add	x1, x0, x1
  44b0c4:	mov	x3, x22
  44b0c8:	mov	x2, x28
  44b0cc:	bl	44a6f8 <_obstack_memory_used@@Base+0xd6a0>
  44b0d0:	ldrb	w1, [x24, x20]
  44b0d4:	cmp	w1, #0x8
  44b0d8:	b.hi	44b0f8 <_obstack_memory_used@@Base+0xe0a0>  // b.pmore
  44b0dc:	strb	w19, [x26]
  44b0e0:	b	44afd8 <_obstack_memory_used@@Base+0xdf80>
  44b0e4:	ldr	x0, [x25]
  44b0e8:	ldrb	w1, [x24, x20]
  44b0ec:	add	x0, x22, x0
  44b0f0:	cmp	w1, #0x8
  44b0f4:	b.ls	44b0dc <_obstack_memory_used@@Base+0xe084>  // b.plast
  44b0f8:	bl	402970 <abort@plt>
  44b0fc:	ldr	x1, [x27, #832]
  44b100:	ldr	x0, [x25]
  44b104:	add	x0, x22, x0
  44b108:	tbz	x1, #62, 44afd8 <_obstack_memory_used@@Base+0xdf80>
  44b10c:	strb	wzr, [x26]
  44b110:	b	44afd8 <_obstack_memory_used@@Base+0xdf80>
  44b114:	cmp	w0, #0x61
  44b118:	b.gt	44b0f8 <_obstack_memory_used@@Base+0xe0a0>
  44b11c:	ldr	x4, [sp, #960]
  44b120:	ldr	x2, [x28, x1, lsl #3]
  44b124:	tbz	x4, #62, 44b148 <_obstack_memory_used@@Base+0xe0f0>
  44b128:	mov	x0, x2
  44b12c:	nop
  44b130:	add	x1, x23, #0xb20
  44b134:	ldrb	w1, [x24, x1]
  44b138:	cmp	w1, #0x8
  44b13c:	b.hi	44b0f8 <_obstack_memory_used@@Base+0xe0a0>  // b.pmore
  44b140:	strb	w19, [x26]
  44b144:	b	44afd8 <_obstack_memory_used@@Base+0xdf80>
  44b148:	cmp	w0, #0x2e
  44b14c:	b.eq	44b164 <_obstack_memory_used@@Base+0xe10c>  // b.none
  44b150:	ldrb	w0, [x20, x1]
  44b154:	cmp	w0, #0x8
  44b158:	b.ne	44b0f8 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  44b15c:	ldr	x0, [x2]
  44b160:	b	44b130 <_obstack_memory_used@@Base+0xe0d8>
  44b164:	cntd	x0
  44b168:	sxtw	x0, w0
  44b16c:	b	44b130 <_obstack_memory_used@@Base+0xe0d8>
  44b170:	add	x1, sp, #0x3d8
  44b174:	ldrb	w1, [x1, x2]
  44b178:	cbnz	w1, 44af20 <_obstack_memory_used@@Base+0xdec8>
  44b17c:	cmp	w0, #0x2e
  44b180:	b.ne	44af08 <_obstack_memory_used@@Base+0xdeb0>  // b.any
  44b184:	cntd	x0
  44b188:	sxtw	x3, w0
  44b18c:	b	44af20 <_obstack_memory_used@@Base+0xdec8>
  44b190:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44b194:	ldr	x2, [x27, #784]
  44b198:	ldrb	w0, [x0, #2879]
  44b19c:	cmp	w0, #0x8
  44b1a0:	b.ne	44b0f8 <_obstack_memory_used@@Base+0xe0a0>  // b.any
  44b1a4:	str	x2, [sp, #120]
  44b1a8:	tbz	x1, #62, 44b1b0 <_obstack_memory_used@@Base+0xe158>
  44b1ac:	strb	wzr, [sp, #1015]
  44b1b0:	add	x0, sp, #0x78
  44b1b4:	str	x0, [x28, #248]
  44b1b8:	b	44aec4 <_obstack_memory_used@@Base+0xde6c>
  44b1bc:	nop
  44b1c0:	sub	sp, sp, #0x6d0
  44b1c4:	stp	x29, x30, [sp]
  44b1c8:	mov	x29, sp
  44b1cc:	xpaclri
  44b1d0:	stp	x19, x20, [sp, #16]
  44b1d4:	mov	x19, x0
  44b1d8:	mov	x20, x30
  44b1dc:	stp	x21, x22, [sp, #32]
  44b1e0:	mov	x22, x1
  44b1e4:	mov	x21, x2
  44b1e8:	mov	w1, #0x0                   	// #0
  44b1ec:	mov	x2, #0x3c0                 	// #960
  44b1f0:	str	x23, [sp, #48]
  44b1f4:	bl	402840 <memset@plt>
  44b1f8:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  44b1fc:	str	x20, [x19, #792]
  44b200:	str	x0, [x19, #832]
  44b204:	add	x23, sp, #0x50
  44b208:	mov	x1, x23
  44b20c:	mov	x0, x19
  44b210:	bl	44a040 <_obstack_memory_used@@Base+0xcfe8>
  44b214:	cbnz	w0, 44b408 <_obstack_memory_used@@Base+0xe3b0>
  44b218:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  44b21c:	adrp	x20, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44b220:	ldr	x0, [x0, #3880]
  44b224:	cbz	x0, 44b2ac <_obstack_memory_used@@Base+0xe254>
  44b228:	add	x0, x20, #0xb20
  44b22c:	adrp	x1, 449000 <_obstack_memory_used@@Base+0xbfa8>
  44b230:	add	x0, x0, #0x64
  44b234:	add	x1, x1, #0xee8
  44b238:	bl	4029d0 <pthread_once@plt>
  44b23c:	cbnz	w0, 44b2ac <_obstack_memory_used@@Base+0xe254>
  44b240:	add	x20, x20, #0xb20
  44b244:	ldrb	w0, [x20, #31]
  44b248:	cmp	w0, #0x8
  44b24c:	b.ne	44b408 <_obstack_memory_used@@Base+0xe3b0>  // b.any
  44b250:	ldr	x0, [x19, #832]
  44b254:	str	x22, [sp, #72]
  44b258:	tbz	x0, #62, 44b260 <_obstack_memory_used@@Base+0xe208>
  44b25c:	strb	wzr, [x19, #887]
  44b260:	add	x0, sp, #0x48
  44b264:	mov	x3, #0x1f                  	// #31
  44b268:	mov	w2, #0x1                   	// #1
  44b26c:	str	x0, [x19, #248]
  44b270:	mov	x1, x23
  44b274:	mov	x0, x19
  44b278:	str	xzr, [sp, #1656]
  44b27c:	str	x3, [sp, #1664]
  44b280:	str	w2, [sp, #1680]
  44b284:	bl	44ae70 <_obstack_memory_used@@Base+0xde18>
  44b288:	mov	x30, x21
  44b28c:	xpaclri
  44b290:	ldp	x21, x22, [sp, #32]
  44b294:	ldr	x23, [sp, #48]
  44b298:	str	x30, [x19, #792]
  44b29c:	ldp	x29, x30, [sp]
  44b2a0:	ldp	x19, x20, [sp, #16]
  44b2a4:	add	sp, sp, #0x6d0
  44b2a8:	ret
  44b2ac:	ldrb	w0, [x20, #2848]
  44b2b0:	add	x3, x20, #0xb20
  44b2b4:	cbnz	w0, 44b240 <_obstack_memory_used@@Base+0xe1e8>
  44b2b8:	mov	w4, #0x8                   	// #8
  44b2bc:	strb	w4, [x20, #2848]
  44b2c0:	strb	w4, [x3, #1]
  44b2c4:	strb	w4, [x3, #2]
  44b2c8:	strb	w4, [x3, #3]
  44b2cc:	strb	w4, [x3, #4]
  44b2d0:	strb	w4, [x3, #5]
  44b2d4:	strb	w4, [x3, #6]
  44b2d8:	strb	w4, [x3, #7]
  44b2dc:	strb	w4, [x3, #8]
  44b2e0:	strb	w4, [x3, #9]
  44b2e4:	strb	w4, [x3, #10]
  44b2e8:	strb	w4, [x3, #11]
  44b2ec:	strb	w4, [x3, #12]
  44b2f0:	strb	w4, [x3, #13]
  44b2f4:	strb	w4, [x3, #14]
  44b2f8:	strb	w4, [x3, #15]
  44b2fc:	strb	w4, [x3, #16]
  44b300:	strb	w4, [x3, #17]
  44b304:	strb	w4, [x3, #18]
  44b308:	strb	w4, [x3, #19]
  44b30c:	strb	w4, [x3, #20]
  44b310:	strb	w4, [x3, #21]
  44b314:	strb	w4, [x3, #22]
  44b318:	strb	w4, [x3, #23]
  44b31c:	strb	w4, [x3, #24]
  44b320:	strb	w4, [x3, #25]
  44b324:	strb	w4, [x3, #26]
  44b328:	strb	w4, [x3, #27]
  44b32c:	strb	w4, [x3, #28]
  44b330:	strb	w4, [x3, #29]
  44b334:	strb	w4, [x3, #30]
  44b338:	strb	w4, [x3, #31]
  44b33c:	strb	w4, [x3, #64]
  44b340:	strb	w4, [x3, #46]
  44b344:	strb	w4, [x3, #65]
  44b348:	strb	w4, [x3, #66]
  44b34c:	strb	w4, [x3, #67]
  44b350:	strb	w4, [x3, #68]
  44b354:	strb	w4, [x3, #69]
  44b358:	strb	w4, [x3, #70]
  44b35c:	strb	w4, [x3, #71]
  44b360:	strb	w4, [x3, #72]
  44b364:	strb	w4, [x3, #73]
  44b368:	strb	w4, [x3, #74]
  44b36c:	strb	w4, [x3, #75]
  44b370:	strb	w4, [x3, #76]
  44b374:	strb	w4, [x3, #77]
  44b378:	strb	w4, [x3, #78]
  44b37c:	strb	w4, [x3, #79]
  44b380:	strb	w4, [x3, #80]
  44b384:	strb	w4, [x3, #81]
  44b388:	strb	w4, [x3, #82]
  44b38c:	strb	w4, [x3, #83]
  44b390:	strb	w4, [x3, #84]
  44b394:	strb	w4, [x3, #85]
  44b398:	strb	w4, [x3, #86]
  44b39c:	strb	w4, [x3, #87]
  44b3a0:	strb	w4, [x3, #88]
  44b3a4:	strb	w4, [x3, #89]
  44b3a8:	strb	w4, [x3, #90]
  44b3ac:	strb	w4, [x3, #91]
  44b3b0:	strb	w4, [x3, #92]
  44b3b4:	strb	w4, [x3, #93]
  44b3b8:	strb	w4, [x3, #94]
  44b3bc:	strb	w4, [x3, #95]
  44b3c0:	strb	w4, [x3, #48]
  44b3c4:	strb	w4, [x3, #49]
  44b3c8:	strb	w4, [x3, #50]
  44b3cc:	strb	w4, [x3, #51]
  44b3d0:	strb	w4, [x3, #52]
  44b3d4:	strb	w4, [x3, #53]
  44b3d8:	strb	w4, [x3, #54]
  44b3dc:	strb	w4, [x3, #55]
  44b3e0:	strb	w4, [x3, #56]
  44b3e4:	strb	w4, [x3, #57]
  44b3e8:	strb	w4, [x3, #58]
  44b3ec:	strb	w4, [x3, #59]
  44b3f0:	strb	w4, [x3, #60]
  44b3f4:	strb	w4, [x3, #61]
  44b3f8:	strb	w4, [x3, #62]
  44b3fc:	strb	w4, [x3, #63]
  44b400:	strb	w4, [x3, #96]
  44b404:	b	44b240 <_obstack_memory_used@@Base+0xe1e8>
  44b408:	bl	402970 <abort@plt>
  44b40c:	nop
  44b410:	stp	x29, x30, [sp, #-32]!
  44b414:	mov	x29, sp
  44b418:	stp	x19, x20, [sp, #16]
  44b41c:	mov	x20, x1
  44b420:	mov	x19, x0
  44b424:	bl	44ae70 <_obstack_memory_used@@Base+0xde18>
  44b428:	ldr	x0, [x20, #1640]
  44b42c:	add	x1, x20, x0, lsl #4
  44b430:	ldr	w1, [x1, #8]
  44b434:	cmp	w1, #0x6
  44b438:	b.ne	44b44c <_obstack_memory_used@@Base+0xe3f4>  // b.any
  44b43c:	str	xzr, [x19, #792]
  44b440:	ldp	x19, x20, [sp, #16]
  44b444:	ldp	x29, x30, [sp], #32
  44b448:	ret
  44b44c:	cmp	w0, #0x61
  44b450:	b.gt	44b4c0 <_obstack_memory_used@@Base+0xe468>
  44b454:	ldr	x2, [x19, #832]
  44b458:	sxtw	x1, w0
  44b45c:	ldr	x17, [x19, x1, lsl #3]
  44b460:	tbz	x2, #62, 44b470 <_obstack_memory_used@@Base+0xe418>
  44b464:	add	x2, x19, x1
  44b468:	ldrb	w2, [x2, #856]
  44b46c:	cbnz	w2, 44b490 <_obstack_memory_used@@Base+0xe438>
  44b470:	cmp	w0, #0x2e
  44b474:	b.eq	44b4b4 <_obstack_memory_used@@Base+0xe45c>  // b.none
  44b478:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44b47c:	add	x0, x0, #0xb20
  44b480:	ldrb	w0, [x0, x1]
  44b484:	cmp	w0, #0x8
  44b488:	b.ne	44b4c0 <_obstack_memory_used@@Base+0xe468>  // b.any
  44b48c:	ldr	x17, [x17]
  44b490:	ldr	x0, [x20, #544]
  44b494:	str	x17, [x19, #792]
  44b498:	tbz	w0, #0, 44b4a4 <_obstack_memory_used@@Base+0xe44c>
  44b49c:	ldr	x16, [x19, #784]
  44b4a0:	autia1716
  44b4a4:	str	x17, [x19, #792]
  44b4a8:	ldp	x19, x20, [sp, #16]
  44b4ac:	ldp	x29, x30, [sp], #32
  44b4b0:	ret
  44b4b4:	cntd	x0
  44b4b8:	sxtw	x17, w0
  44b4bc:	b	44b490 <_obstack_memory_used@@Base+0xe438>
  44b4c0:	bl	402970 <abort@plt>
  44b4c4:	nop
  44b4c8:	sub	sp, sp, #0x6c0
  44b4cc:	stp	x29, x30, [sp]
  44b4d0:	mov	x29, sp
  44b4d4:	stp	x19, x20, [sp, #16]
  44b4d8:	mov	x19, x1
  44b4dc:	stp	x21, x22, [sp, #32]
  44b4e0:	mov	x21, x0
  44b4e4:	add	x22, sp, #0x40
  44b4e8:	stp	x23, x24, [sp, #48]
  44b4ec:	mov	x24, x2
  44b4f0:	mov	x23, #0x1                   	// #1
  44b4f4:	nop
  44b4f8:	mov	x1, x22
  44b4fc:	mov	x0, x19
  44b500:	bl	44a040 <_obstack_memory_used@@Base+0xcfe8>
  44b504:	ldr	x3, [x19, #784]
  44b508:	ldr	x1, [x19, #832]
  44b50c:	ldr	x2, [x21, #24]
  44b510:	sub	x1, x3, x1, lsr #63
  44b514:	cmp	x2, x1
  44b518:	cset	w20, eq  // eq = none
  44b51c:	lsl	w20, w20, #2
  44b520:	cbnz	w0, 44b56c <_obstack_memory_used@@Base+0xe514>
  44b524:	ldr	x5, [sp, #1680]
  44b528:	cbz	x5, 44b554 <_obstack_memory_used@@Base+0xe4fc>
  44b52c:	ldr	x2, [x21]
  44b530:	mov	x4, x19
  44b534:	mov	x3, x21
  44b538:	orr	w1, w20, #0x2
  44b53c:	mov	w0, #0x1                   	// #1
  44b540:	blr	x5
  44b544:	cmp	w0, #0x7
  44b548:	b.eq	44b588 <_obstack_memory_used@@Base+0xe530>  // b.none
  44b54c:	cmp	w0, #0x8
  44b550:	b.ne	44b56c <_obstack_memory_used@@Base+0xe514>  // b.any
  44b554:	cbnz	w20, 44b5a4 <_obstack_memory_used@@Base+0xe54c>
  44b558:	add	x23, x23, #0x1
  44b55c:	mov	x1, x22
  44b560:	mov	x0, x19
  44b564:	bl	44b410 <_obstack_memory_used@@Base+0xe3b8>
  44b568:	b	44b4f8 <_obstack_memory_used@@Base+0xe4a0>
  44b56c:	mov	w0, #0x2                   	// #2
  44b570:	ldp	x29, x30, [sp]
  44b574:	ldp	x19, x20, [sp, #16]
  44b578:	ldp	x21, x22, [sp, #32]
  44b57c:	ldp	x23, x24, [sp, #48]
  44b580:	add	sp, sp, #0x6c0
  44b584:	ret
  44b588:	str	x23, [x24]
  44b58c:	ldp	x29, x30, [sp]
  44b590:	ldp	x19, x20, [sp, #16]
  44b594:	ldp	x21, x22, [sp, #32]
  44b598:	ldp	x23, x24, [sp, #48]
  44b59c:	add	sp, sp, #0x6c0
  44b5a0:	ret
  44b5a4:	bl	402970 <abort@plt>
  44b5a8:	sub	sp, sp, #0x6d0
  44b5ac:	stp	x29, x30, [sp]
  44b5b0:	mov	x29, sp
  44b5b4:	stp	x19, x20, [sp, #16]
  44b5b8:	mov	x20, x0
  44b5bc:	stp	x21, x22, [sp, #32]
  44b5c0:	mov	x21, x1
  44b5c4:	add	x22, sp, #0x50
  44b5c8:	stp	x23, x24, [sp, #48]
  44b5cc:	mov	x23, #0x1                   	// #1
  44b5d0:	stp	x25, x26, [sp, #64]
  44b5d4:	mov	x26, x2
  44b5d8:	ldp	x25, x24, [x0, #16]
  44b5dc:	b	44b630 <_obstack_memory_used@@Base+0xe5d8>
  44b5e0:	blr	x25
  44b5e4:	mov	w2, w0
  44b5e8:	mov	x4, x21
  44b5ec:	mov	x3, x20
  44b5f0:	mov	w1, #0xa                   	// #10
  44b5f4:	mov	w0, #0x1                   	// #1
  44b5f8:	cbnz	w2, 44b67c <_obstack_memory_used@@Base+0xe624>
  44b5fc:	ldr	x5, [sp, #1696]
  44b600:	cbz	x5, 44b620 <_obstack_memory_used@@Base+0xe5c8>
  44b604:	ldr	x2, [x20]
  44b608:	blr	x5
  44b60c:	mov	w19, w0
  44b610:	cmp	w0, #0x7
  44b614:	b.eq	44b6a0 <_obstack_memory_used@@Base+0xe648>  // b.none
  44b618:	cmp	w0, #0x8
  44b61c:	b.ne	44b67c <_obstack_memory_used@@Base+0xe624>  // b.any
  44b620:	add	x23, x23, #0x1
  44b624:	mov	x1, x22
  44b628:	mov	x0, x21
  44b62c:	bl	44b410 <_obstack_memory_used@@Base+0xe3b8>
  44b630:	mov	x1, x22
  44b634:	mov	x0, x21
  44b638:	bl	44a040 <_obstack_memory_used@@Base+0xcfe8>
  44b63c:	cmp	w0, #0x0
  44b640:	mov	w19, w0
  44b644:	mov	x5, x24
  44b648:	mov	x4, x21
  44b64c:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  44b650:	b.ne	44b67c <_obstack_memory_used@@Base+0xe624>  // b.any
  44b654:	cmp	w0, #0x5
  44b658:	mov	x3, x20
  44b65c:	mov	w1, #0xa                   	// #10
  44b660:	mov	w0, #0x1                   	// #1
  44b664:	ldr	x2, [x20]
  44b668:	b.ne	44b5e0 <_obstack_memory_used@@Base+0xe588>  // b.any
  44b66c:	mov	w1, #0x1a                  	// #26
  44b670:	mov	w0, #0x1                   	// #1
  44b674:	blr	x25
  44b678:	cbz	w0, 44b6a0 <_obstack_memory_used@@Base+0xe648>
  44b67c:	mov	w19, #0x2                   	// #2
  44b680:	mov	w0, w19
  44b684:	ldp	x29, x30, [sp]
  44b688:	ldp	x19, x20, [sp, #16]
  44b68c:	ldp	x21, x22, [sp, #32]
  44b690:	ldp	x23, x24, [sp, #48]
  44b694:	ldp	x25, x26, [sp, #64]
  44b698:	add	sp, sp, #0x6d0
  44b69c:	ret
  44b6a0:	str	x23, [x26]
  44b6a4:	mov	w0, w19
  44b6a8:	ldp	x29, x30, [sp]
  44b6ac:	ldp	x19, x20, [sp, #16]
  44b6b0:	ldp	x21, x22, [sp, #32]
  44b6b4:	ldp	x23, x24, [sp, #48]
  44b6b8:	ldp	x25, x26, [sp, #64]
  44b6bc:	add	sp, sp, #0x6d0
  44b6c0:	ret
  44b6c4:	nop
  44b6c8:	cmp	w1, #0x61
  44b6cc:	b.gt	44b724 <_obstack_memory_used@@Base+0xe6cc>
  44b6d0:	ldr	x4, [x0, #832]
  44b6d4:	sxtw	x3, w1
  44b6d8:	ldr	x2, [x0, x3, lsl #3]
  44b6dc:	tbz	x4, #62, 44b6ec <_obstack_memory_used@@Base+0xe694>
  44b6e0:	add	x0, x0, x3
  44b6e4:	ldrb	w0, [x0, #856]
  44b6e8:	cbnz	w0, 44b71c <_obstack_memory_used@@Base+0xe6c4>
  44b6ec:	cmp	w1, #0x2e
  44b6f0:	b.eq	44b710 <_obstack_memory_used@@Base+0xe6b8>  // b.none
  44b6f4:	adrp	x0, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44b6f8:	add	x0, x0, #0xb20
  44b6fc:	ldrb	w0, [x0, w1, sxtw]
  44b700:	cmp	w0, #0x8
  44b704:	b.ne	44b724 <_obstack_memory_used@@Base+0xe6cc>  // b.any
  44b708:	ldr	x0, [x2]
  44b70c:	ret
  44b710:	cntd	x0
  44b714:	sxtw	x0, w0
  44b718:	ret
  44b71c:	mov	x0, x2
  44b720:	ret
  44b724:	stp	x29, x30, [sp, #-16]!
  44b728:	mov	x29, sp
  44b72c:	bl	402970 <abort@plt>
  44b730:	ldr	x0, [x0, #784]
  44b734:	ret
  44b738:	cmp	w1, #0x61
  44b73c:	b.gt	44b780 <_obstack_memory_used@@Base+0xe728>
  44b740:	ldr	x5, [x0, #832]
  44b744:	adrp	x3, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44b748:	add	x3, x3, #0xb20
  44b74c:	sxtw	x4, w1
  44b750:	ldrb	w1, [x3, w1, sxtw]
  44b754:	tbz	x5, #62, 44b764 <_obstack_memory_used@@Base+0xe70c>
  44b758:	add	x3, x0, x4
  44b75c:	ldrb	w3, [x3, #856]
  44b760:	cbnz	w3, 44b778 <_obstack_memory_used@@Base+0xe720>
  44b764:	cmp	w1, #0x8
  44b768:	ldr	x0, [x0, x4, lsl #3]
  44b76c:	b.ne	44b780 <_obstack_memory_used@@Base+0xe728>  // b.any
  44b770:	str	x2, [x0]
  44b774:	ret
  44b778:	str	x2, [x0, x4, lsl #3]
  44b77c:	ret
  44b780:	stp	x29, x30, [sp, #-16]!
  44b784:	mov	x29, sp
  44b788:	bl	402970 <abort@plt>
  44b78c:	nop
  44b790:	ldr	x0, [x0, #792]
  44b794:	ret
  44b798:	ldr	x2, [x0, #832]
  44b79c:	ldr	x0, [x0, #792]
  44b7a0:	lsr	x2, x2, #63
  44b7a4:	str	w2, [x1]
  44b7a8:	ret
  44b7ac:	nop
  44b7b0:	str	x1, [x0, #792]
  44b7b4:	ret
  44b7b8:	ldr	x0, [x0, #800]
  44b7bc:	ret
  44b7c0:	ldr	x0, [x0, #824]
  44b7c4:	ret
  44b7c8:	stp	x29, x30, [sp, #-48]!
  44b7cc:	sub	x0, x0, #0x1
  44b7d0:	mov	x29, sp
  44b7d4:	add	x1, sp, #0x18
  44b7d8:	bl	44d780 <_obstack_memory_used@@Base+0x10728>
  44b7dc:	ldr	x1, [sp, #40]
  44b7e0:	cmp	x0, #0x0
  44b7e4:	ldp	x29, x30, [sp], #48
  44b7e8:	csel	x0, x1, x0, ne  // ne = any
  44b7ec:	ret
  44b7f0:	ldr	x0, [x0, #816]
  44b7f4:	ret
  44b7f8:	ldr	x0, [x0, #808]
  44b7fc:	ret
  44b800:	sub	sp, sp, #0xa70
  44b804:	mov	x2, #0x3c0                 	// #960
  44b808:	add	x3, sp, #0x30
  44b80c:	stp	x29, x30, [sp]
  44b810:	mov	x29, sp
  44b814:	stp	x19, x20, [sp, #16]
  44b818:	mov	x20, x1
  44b81c:	mov	w1, #0x0                   	// #0
  44b820:	str	x21, [sp, #32]
  44b824:	mov	x21, x0
  44b828:	mov	x0, x3
  44b82c:	bl	402840 <memset@plt>
  44b830:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  44b834:	add	x19, sp, #0x3f0
  44b838:	add	x21, x21, #0x1
  44b83c:	mov	x1, x19
  44b840:	str	x21, [sp, #840]
  44b844:	str	x2, [sp, #880]
  44b848:	bl	44a040 <_obstack_memory_used@@Base+0xcfe8>
  44b84c:	cbnz	w0, 44b8f8 <_obstack_memory_used@@Base+0xe8a0>
  44b850:	ldr	w0, [sp, #2608]
  44b854:	cmp	w0, #0x2
  44b858:	b.eq	44b8f8 <_obstack_memory_used@@Base+0xe8a0>  // b.none
  44b85c:	sub	x4, x20, x20, lsl #3
  44b860:	mov	x1, #0xffffffffffffe680    	// #-6528
  44b864:	mov	x0, x19
  44b868:	add	x5, x19, #0x620
  44b86c:	add	x4, x4, x1
  44b870:	add	x2, x20, #0x334
  44b874:	b	44b88c <_obstack_memory_used@@Base+0xe834>
  44b878:	str	xzr, [x4, x2, lsl #3]
  44b87c:	add	x0, x0, #0x10
  44b880:	add	x2, x2, #0x1
  44b884:	cmp	x0, x5
  44b888:	b.eq	44b8bc <_obstack_memory_used@@Base+0xe864>  // b.none
  44b88c:	ldrb	w3, [x0, #8]
  44b890:	strb	w3, [x2]
  44b894:	cmp	w3, #0x1
  44b898:	b.eq	44b8a4 <_obstack_memory_used@@Base+0xe84c>  // b.none
  44b89c:	cmp	w3, #0x2
  44b8a0:	b.ne	44b878 <_obstack_memory_used@@Base+0xe820>  // b.any
  44b8a4:	ldr	x3, [x0]
  44b8a8:	str	x3, [x4, x2, lsl #3]
  44b8ac:	add	x0, x0, #0x10
  44b8b0:	add	x2, x2, #0x1
  44b8b4:	cmp	x0, x5
  44b8b8:	b.ne	44b88c <_obstack_memory_used@@Base+0xe834>  // b.any
  44b8bc:	ldr	x1, [sp, #896]
  44b8c0:	mov	x0, x20
  44b8c4:	ldr	x2, [sp, #2584]
  44b8c8:	stp	x2, x1, [x20, #16]
  44b8cc:	ldr	x2, [sp, #2592]
  44b8d0:	strh	w2, [x20, #816]
  44b8d4:	ldr	x1, [sp, #2648]
  44b8d8:	strh	w1, [x20, #818]
  44b8dc:	ldr	x2, [sp, #2664]
  44b8e0:	str	x2, [x20, #8]
  44b8e4:	ldp	x29, x30, [sp]
  44b8e8:	ldp	x19, x20, [sp, #16]
  44b8ec:	ldr	x21, [sp, #32]
  44b8f0:	add	sp, sp, #0xa70
  44b8f4:	ret
  44b8f8:	mov	x0, #0x0                   	// #0
  44b8fc:	ldp	x29, x30, [sp]
  44b900:	ldp	x19, x20, [sp, #16]
  44b904:	ldr	x21, [sp, #32]
  44b908:	add	sp, sp, #0xa70
  44b90c:	ret
  44b910:	ret
  44b914:	nop
  44b918:	sub	sp, sp, #0xec0
  44b91c:	stp	x29, x30, [sp]
  44b920:	mov	x29, sp
  44b924:	stp	x21, x22, [sp, #64]
  44b928:	add	x21, sp, #0xc0
  44b92c:	add	x22, sp, #0x840
  44b930:	stp	x0, x1, [sp, #16]
  44b934:	add	x1, sp, #0xec0
  44b938:	stp	x2, x3, [sp, #32]
  44b93c:	mov	x2, x30
  44b940:	stp	x19, x20, [sp, #48]
  44b944:	mov	x20, x0
  44b948:	add	x19, sp, #0x480
  44b94c:	mov	x0, x21
  44b950:	stp	x23, x24, [sp, #80]
  44b954:	stp	x25, x26, [sp, #96]
  44b958:	stp	x27, x28, [sp, #112]
  44b95c:	stp	d8, d9, [sp, #128]
  44b960:	stp	d10, d11, [sp, #144]
  44b964:	stp	d12, d13, [sp, #160]
  44b968:	stp	d14, d15, [sp, #176]
  44b96c:	bl	44b1c0 <_obstack_memory_used@@Base+0xe168>
  44b970:	mov	x1, x21
  44b974:	mov	x0, x19
  44b978:	mov	x2, #0x3c0                 	// #960
  44b97c:	bl	4025d0 <memcpy@plt>
  44b980:	b	44b9b4 <_obstack_memory_used@@Base+0xe95c>
  44b984:	cbnz	w2, 44ba20 <_obstack_memory_used@@Base+0xe9c8>
  44b988:	ldr	x5, [sp, #3728]
  44b98c:	cbz	x5, 44b9a8 <_obstack_memory_used@@Base+0xe950>
  44b990:	ldr	x2, [x20]
  44b994:	blr	x5
  44b998:	cmp	w0, #0x6
  44b99c:	b.eq	44ba28 <_obstack_memory_used@@Base+0xe9d0>  // b.none
  44b9a0:	cmp	w0, #0x8
  44b9a4:	b.ne	44ba20 <_obstack_memory_used@@Base+0xe9c8>  // b.any
  44b9a8:	mov	x1, x22
  44b9ac:	mov	x0, x19
  44b9b0:	bl	44b410 <_obstack_memory_used@@Base+0xe3b8>
  44b9b4:	mov	x1, x22
  44b9b8:	mov	x0, x19
  44b9bc:	bl	44a040 <_obstack_memory_used@@Base+0xcfe8>
  44b9c0:	mov	w2, w0
  44b9c4:	mov	w1, #0x1                   	// #1
  44b9c8:	mov	x4, x19
  44b9cc:	mov	x3, x20
  44b9d0:	mov	w0, w1
  44b9d4:	cmp	w2, #0x5
  44b9d8:	b.ne	44b984 <_obstack_memory_used@@Base+0xe92c>  // b.any
  44b9dc:	mov	x4, #0x0                   	// #0
  44b9e0:	mov	w0, w2
  44b9e4:	ldp	x29, x30, [sp]
  44b9e8:	ldp	x0, x1, [sp, #16]
  44b9ec:	ldp	x2, x3, [sp, #32]
  44b9f0:	ldp	x19, x20, [sp, #48]
  44b9f4:	ldp	x21, x22, [sp, #64]
  44b9f8:	ldp	x23, x24, [sp, #80]
  44b9fc:	ldp	x25, x26, [sp, #96]
  44ba00:	ldp	x27, x28, [sp, #112]
  44ba04:	ldp	d8, d9, [sp, #128]
  44ba08:	ldp	d10, d11, [sp, #144]
  44ba0c:	ldp	d12, d13, [sp, #160]
  44ba10:	ldp	d14, d15, [sp, #176]
  44ba14:	add	sp, sp, #0xec0
  44ba18:	add	sp, sp, x4
  44ba1c:	ret
  44ba20:	mov	w2, #0x3                   	// #3
  44ba24:	b	44b9dc <_obstack_memory_used@@Base+0xe984>
  44ba28:	ldr	x4, [sp, #1936]
  44ba2c:	mov	x1, x21
  44ba30:	ldr	x3, [sp, #1984]
  44ba34:	mov	x2, #0x3c0                 	// #960
  44ba38:	mov	x0, x19
  44ba3c:	sub	x3, x4, x3, lsr #63
  44ba40:	stp	xzr, x3, [x20, #16]
  44ba44:	bl	4025d0 <memcpy@plt>
  44ba48:	mov	x2, x22
  44ba4c:	mov	x1, x19
  44ba50:	mov	x0, x20
  44ba54:	bl	44b4c8 <_obstack_memory_used@@Base+0xe470>
  44ba58:	mov	w2, w0
  44ba5c:	cmp	w0, #0x7
  44ba60:	b.ne	44b9dc <_obstack_memory_used@@Base+0xe984>  // b.any
  44ba64:	mov	x1, x19
  44ba68:	mov	x0, x21
  44ba6c:	bl	44a598 <_obstack_memory_used@@Base+0xd540>
  44ba70:	mov	x4, x0
  44ba74:	ldr	x2, [sp, #1024]
  44ba78:	ldr	x1, [sp, #1944]
  44ba7c:	tbz	x2, #61, 44ba90 <_obstack_memory_used@@Base+0xea38>
  44ba80:	mov	x17, x1
  44ba84:	ldr	x16, [sp, #976]
  44ba88:	pacia1716
  44ba8c:	mov	x1, x17
  44ba90:	ldr	x0, [sp, #1936]
  44ba94:	bl	44b910 <_obstack_memory_used@@Base+0xe8b8>
  44ba98:	str	x1, [x29, #8]
  44ba9c:	b	44b9e0 <_obstack_memory_used@@Base+0xe988>
  44baa0:	sub	sp, sp, #0x850
  44baa4:	stp	x29, x30, [sp]
  44baa8:	mov	x29, sp
  44baac:	stp	x19, x20, [sp, #48]
  44bab0:	mov	x19, x0
  44bab4:	mov	x20, x2
  44bab8:	stp	x21, x22, [sp, #64]
  44babc:	add	x22, sp, #0xd0
  44bac0:	mov	x21, x1
  44bac4:	stp	x0, x1, [sp, #16]
  44bac8:	mov	x0, x22
  44bacc:	add	x1, sp, #0x850
  44bad0:	stp	x2, x3, [sp, #32]
  44bad4:	mov	x2, x30
  44bad8:	stp	x23, x24, [sp, #80]
  44badc:	add	x23, sp, #0x490
  44bae0:	stp	x25, x26, [sp, #96]
  44bae4:	stp	x27, x28, [sp, #112]
  44bae8:	stp	d8, d9, [sp, #128]
  44baec:	stp	d10, d11, [sp, #144]
  44baf0:	stp	d12, d13, [sp, #160]
  44baf4:	stp	d14, d15, [sp, #176]
  44baf8:	bl	44b1c0 <_obstack_memory_used@@Base+0xe168>
  44bafc:	mov	x1, x22
  44bb00:	mov	x2, #0x3c0                 	// #960
  44bb04:	mov	x0, x23
  44bb08:	bl	4025d0 <memcpy@plt>
  44bb0c:	stp	x21, x20, [x19, #16]
  44bb10:	mov	x0, x19
  44bb14:	mov	x1, x23
  44bb18:	add	x2, sp, #0xc8
  44bb1c:	bl	44b5a8 <_obstack_memory_used@@Base+0xe550>
  44bb20:	cmp	w0, #0x7
  44bb24:	mov	x4, #0x0                   	// #0
  44bb28:	b.eq	44bb68 <_obstack_memory_used@@Base+0xeb10>  // b.none
  44bb2c:	ldp	x29, x30, [sp]
  44bb30:	ldp	x0, x1, [sp, #16]
  44bb34:	ldp	x2, x3, [sp, #32]
  44bb38:	ldp	x19, x20, [sp, #48]
  44bb3c:	ldp	x21, x22, [sp, #64]
  44bb40:	ldp	x23, x24, [sp, #80]
  44bb44:	ldp	x25, x26, [sp, #96]
  44bb48:	ldp	x27, x28, [sp, #112]
  44bb4c:	ldp	d8, d9, [sp, #128]
  44bb50:	ldp	d10, d11, [sp, #144]
  44bb54:	ldp	d12, d13, [sp, #160]
  44bb58:	ldp	d14, d15, [sp, #176]
  44bb5c:	add	sp, sp, #0x850
  44bb60:	add	sp, sp, x4
  44bb64:	ret
  44bb68:	mov	x1, x23
  44bb6c:	mov	x0, x22
  44bb70:	bl	44a598 <_obstack_memory_used@@Base+0xd540>
  44bb74:	mov	x4, x0
  44bb78:	ldr	x2, [sp, #1040]
  44bb7c:	ldr	x1, [sp, #1960]
  44bb80:	tbz	x2, #61, 44bb94 <_obstack_memory_used@@Base+0xeb3c>
  44bb84:	mov	x17, x1
  44bb88:	ldr	x16, [sp, #992]
  44bb8c:	pacia1716
  44bb90:	mov	x1, x17
  44bb94:	ldr	x0, [sp, #1952]
  44bb98:	bl	44b910 <_obstack_memory_used@@Base+0xe8b8>
  44bb9c:	str	x1, [x29, #8]
  44bba0:	b	44bb2c <_obstack_memory_used@@Base+0xead4>
  44bba4:	nop
  44bba8:	sub	sp, sp, #0x850
  44bbac:	stp	x29, x30, [sp]
  44bbb0:	mov	x29, sp
  44bbb4:	stp	x19, x20, [sp, #48]
  44bbb8:	mov	x19, x0
  44bbbc:	add	x20, sp, #0xd0
  44bbc0:	stp	x0, x1, [sp, #16]
  44bbc4:	mov	x0, x20
  44bbc8:	add	x1, sp, #0x850
  44bbcc:	stp	x2, x3, [sp, #32]
  44bbd0:	mov	x2, x30
  44bbd4:	stp	x21, x22, [sp, #64]
  44bbd8:	add	x21, sp, #0x490
  44bbdc:	stp	x23, x24, [sp, #80]
  44bbe0:	stp	x25, x26, [sp, #96]
  44bbe4:	stp	x27, x28, [sp, #112]
  44bbe8:	stp	d8, d9, [sp, #128]
  44bbec:	stp	d10, d11, [sp, #144]
  44bbf0:	stp	d12, d13, [sp, #160]
  44bbf4:	stp	d14, d15, [sp, #176]
  44bbf8:	bl	44b1c0 <_obstack_memory_used@@Base+0xe168>
  44bbfc:	mov	x1, x20
  44bc00:	mov	x0, x21
  44bc04:	mov	x2, #0x3c0                 	// #960
  44bc08:	bl	4025d0 <memcpy@plt>
  44bc0c:	ldr	x0, [x19, #16]
  44bc10:	cbnz	x0, 44bca0 <_obstack_memory_used@@Base+0xec48>
  44bc14:	mov	x0, x19
  44bc18:	add	x2, sp, #0xc8
  44bc1c:	mov	x1, x21
  44bc20:	bl	44b4c8 <_obstack_memory_used@@Base+0xe470>
  44bc24:	cmp	w0, #0x7
  44bc28:	b.ne	44bcb4 <_obstack_memory_used@@Base+0xec5c>  // b.any
  44bc2c:	mov	x1, x21
  44bc30:	mov	x0, x20
  44bc34:	bl	44a598 <_obstack_memory_used@@Base+0xd540>
  44bc38:	mov	x4, x0
  44bc3c:	ldr	x2, [sp, #1040]
  44bc40:	ldr	x1, [sp, #1960]
  44bc44:	tbz	x2, #61, 44bc58 <_obstack_memory_used@@Base+0xec00>
  44bc48:	mov	x17, x1
  44bc4c:	ldr	x16, [sp, #992]
  44bc50:	pacia1716
  44bc54:	mov	x1, x17
  44bc58:	ldr	x0, [sp, #1952]
  44bc5c:	bl	44b910 <_obstack_memory_used@@Base+0xe8b8>
  44bc60:	str	x1, [x29, #8]
  44bc64:	ldp	x29, x30, [sp]
  44bc68:	ldp	x0, x1, [sp, #16]
  44bc6c:	ldp	x2, x3, [sp, #32]
  44bc70:	ldp	x19, x20, [sp, #48]
  44bc74:	ldp	x21, x22, [sp, #64]
  44bc78:	ldp	x23, x24, [sp, #80]
  44bc7c:	ldp	x25, x26, [sp, #96]
  44bc80:	ldp	x27, x28, [sp, #112]
  44bc84:	ldp	d8, d9, [sp, #128]
  44bc88:	ldp	d10, d11, [sp, #144]
  44bc8c:	ldp	d12, d13, [sp, #160]
  44bc90:	ldp	d14, d15, [sp, #176]
  44bc94:	add	sp, sp, #0x850
  44bc98:	add	sp, sp, x4
  44bc9c:	ret
  44bca0:	mov	x0, x19
  44bca4:	add	x2, sp, #0xc8
  44bca8:	mov	x1, x21
  44bcac:	bl	44b5a8 <_obstack_memory_used@@Base+0xe550>
  44bcb0:	b	44bc24 <_obstack_memory_used@@Base+0xebcc>
  44bcb4:	bl	402970 <abort@plt>
  44bcb8:	sub	sp, sp, #0x850
  44bcbc:	stp	x29, x30, [sp]
  44bcc0:	mov	x29, sp
  44bcc4:	stp	x0, x1, [sp, #16]
  44bcc8:	ldr	x1, [x0, #16]
  44bccc:	stp	x2, x3, [sp, #32]
  44bcd0:	stp	x19, x20, [sp, #48]
  44bcd4:	mov	x19, x0
  44bcd8:	stp	x21, x22, [sp, #64]
  44bcdc:	stp	x23, x24, [sp, #80]
  44bce0:	stp	x25, x26, [sp, #96]
  44bce4:	stp	x27, x28, [sp, #112]
  44bce8:	stp	d8, d9, [sp, #128]
  44bcec:	stp	d10, d11, [sp, #144]
  44bcf0:	stp	d12, d13, [sp, #160]
  44bcf4:	stp	d14, d15, [sp, #176]
  44bcf8:	cbnz	x1, 44bd40 <_obstack_memory_used@@Base+0xece8>
  44bcfc:	bl	44b918 <_obstack_memory_used@@Base+0xe8c0>
  44bd00:	mov	x4, #0x0                   	// #0
  44bd04:	ldp	x29, x30, [sp]
  44bd08:	ldp	x0, x1, [sp, #16]
  44bd0c:	ldp	x2, x3, [sp, #32]
  44bd10:	ldp	x19, x20, [sp, #48]
  44bd14:	ldp	x21, x22, [sp, #64]
  44bd18:	ldp	x23, x24, [sp, #80]
  44bd1c:	ldp	x25, x26, [sp, #96]
  44bd20:	ldp	x27, x28, [sp, #112]
  44bd24:	ldp	d8, d9, [sp, #128]
  44bd28:	ldp	d10, d11, [sp, #144]
  44bd2c:	ldp	d12, d13, [sp, #160]
  44bd30:	ldp	d14, d15, [sp, #176]
  44bd34:	add	sp, sp, #0x850
  44bd38:	add	sp, sp, x4
  44bd3c:	ret
  44bd40:	add	x20, sp, #0xd0
  44bd44:	mov	x2, x30
  44bd48:	mov	x0, x20
  44bd4c:	add	x1, sp, #0x850
  44bd50:	add	x21, sp, #0x490
  44bd54:	bl	44b1c0 <_obstack_memory_used@@Base+0xe168>
  44bd58:	mov	x1, x20
  44bd5c:	mov	x2, #0x3c0                 	// #960
  44bd60:	mov	x0, x21
  44bd64:	bl	4025d0 <memcpy@plt>
  44bd68:	mov	x0, x19
  44bd6c:	mov	x1, x21
  44bd70:	add	x2, sp, #0xc8
  44bd74:	bl	44b5a8 <_obstack_memory_used@@Base+0xe550>
  44bd78:	cmp	w0, #0x7
  44bd7c:	b.ne	44bdbc <_obstack_memory_used@@Base+0xed64>  // b.any
  44bd80:	mov	x1, x21
  44bd84:	mov	x0, x20
  44bd88:	bl	44a598 <_obstack_memory_used@@Base+0xd540>
  44bd8c:	mov	x4, x0
  44bd90:	ldr	x2, [sp, #1040]
  44bd94:	ldr	x1, [sp, #1960]
  44bd98:	tbz	x2, #61, 44bdac <_obstack_memory_used@@Base+0xed54>
  44bd9c:	mov	x17, x1
  44bda0:	ldr	x16, [sp, #992]
  44bda4:	pacia1716
  44bda8:	mov	x1, x17
  44bdac:	ldr	x0, [sp, #1952]
  44bdb0:	bl	44b910 <_obstack_memory_used@@Base+0xe8b8>
  44bdb4:	str	x1, [x29, #8]
  44bdb8:	b	44bd04 <_obstack_memory_used@@Base+0xecac>
  44bdbc:	bl	402970 <abort@plt>
  44bdc0:	ldr	x2, [x0, #8]
  44bdc4:	mov	x1, x0
  44bdc8:	cbz	x2, 44bdd8 <_obstack_memory_used@@Base+0xed80>
  44bdcc:	mov	x16, x2
  44bdd0:	mov	w0, #0x1                   	// #1
  44bdd4:	br	x16
  44bdd8:	ret
  44bddc:	nop
  44bde0:	sub	sp, sp, #0xae0
  44bde4:	mov	x2, x30
  44bde8:	stp	x29, x30, [sp]
  44bdec:	mov	x29, sp
  44bdf0:	stp	x19, x20, [sp, #16]
  44bdf4:	add	x20, sp, #0xa0
  44bdf8:	stp	x21, x22, [sp, #32]
  44bdfc:	mov	x22, x1
  44be00:	add	x21, sp, #0x460
  44be04:	add	x1, sp, #0xae0
  44be08:	stp	x23, x24, [sp, #48]
  44be0c:	mov	x23, x0
  44be10:	mov	x0, x20
  44be14:	stp	x25, x26, [sp, #64]
  44be18:	stp	x27, x28, [sp, #80]
  44be1c:	stp	d8, d9, [sp, #96]
  44be20:	stp	d10, d11, [sp, #112]
  44be24:	stp	d12, d13, [sp, #128]
  44be28:	stp	d14, d15, [sp, #144]
  44be2c:	bl	44b1c0 <_obstack_memory_used@@Base+0xe168>
  44be30:	b	44be50 <_obstack_memory_used@@Base+0xedf8>
  44be34:	blr	x23
  44be38:	cbnz	w0, 44be74 <_obstack_memory_used@@Base+0xee1c>
  44be3c:	cmp	w19, #0x5
  44be40:	b.eq	44be78 <_obstack_memory_used@@Base+0xee20>  // b.none
  44be44:	mov	x1, x21
  44be48:	mov	x0, x20
  44be4c:	bl	44b410 <_obstack_memory_used@@Base+0xe3b8>
  44be50:	mov	x1, x21
  44be54:	mov	x0, x20
  44be58:	bl	44a040 <_obstack_memory_used@@Base+0xcfe8>
  44be5c:	mov	w19, w0
  44be60:	cmp	w0, #0x0
  44be64:	mov	x1, x22
  44be68:	mov	x0, x20
  44be6c:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  44be70:	b.eq	44be34 <_obstack_memory_used@@Base+0xeddc>  // b.none
  44be74:	mov	w19, #0x3                   	// #3
  44be78:	mov	w0, w19
  44be7c:	ldp	x29, x30, [sp]
  44be80:	ldp	x19, x20, [sp, #16]
  44be84:	ldp	x21, x22, [sp, #32]
  44be88:	ldp	x23, x24, [sp, #48]
  44be8c:	ldp	x25, x26, [sp, #64]
  44be90:	ldp	x27, x28, [sp, #80]
  44be94:	ldp	d8, d9, [sp, #96]
  44be98:	ldp	d10, d11, [sp, #112]
  44be9c:	ldp	d12, d13, [sp, #128]
  44bea0:	ldp	d14, d15, [sp, #144]
  44bea4:	add	sp, sp, #0xae0
  44bea8:	ret
  44beac:	nop
  44beb0:	ldr	x3, [x1, #8]
  44beb4:	mov	w4, #0x1                   	// #1
  44beb8:	ldr	x1, [x2, #8]
  44bebc:	cmp	x3, x1
  44bec0:	csetm	w0, cc  // cc = lo, ul, last
  44bec4:	csel	w0, w0, w4, ls  // ls = plast
  44bec8:	ret
  44becc:	nop
  44bed0:	stp	x29, x30, [sp, #-112]!
  44bed4:	mov	x29, sp
  44bed8:	stp	x21, x22, [sp, #32]
  44bedc:	lsl	w21, w3, #1
  44bee0:	stp	x25, x26, [sp, #64]
  44bee4:	add	w25, w21, #0x1
  44bee8:	cmp	w25, w4
  44beec:	b.ge	44bfc4 <_obstack_memory_used@@Base+0xef6c>  // b.tcont
  44bef0:	mov	w22, w3
  44bef4:	stp	x19, x20, [sp, #16]
  44bef8:	mov	x20, x2
  44befc:	stp	x23, x24, [sp, #48]
  44bf00:	mov	w23, w4
  44bf04:	mov	x24, x1
  44bf08:	stp	x27, x28, [sp, #80]
  44bf0c:	mov	x27, x0
  44bf10:	b	44bf68 <_obstack_memory_used@@Base+0xef10>
  44bf14:	ldr	x2, [x20, x26]
  44bf18:	blr	x24
  44bf1c:	ldr	x3, [sp, #104]
  44bf20:	tbnz	w0, #31, 44bfd4 <_obstack_memory_used@@Base+0xef7c>
  44bf24:	ldr	x1, [x20, x28, lsl #3]
  44bf28:	mov	w21, w25
  44bf2c:	sxtw	x26, w22
  44bf30:	mov	x2, x1
  44bf34:	mov	w22, w21
  44bf38:	mov	x0, x27
  44bf3c:	lsl	w21, w21, #1
  44bf40:	ldr	x1, [x20, x26, lsl #3]
  44bf44:	blr	x24
  44bf48:	tbz	w0, #31, 44bfb8 <_obstack_memory_used@@Base+0xef60>
  44bf4c:	ldr	x1, [x19]
  44bf50:	add	w25, w21, #0x1
  44bf54:	ldr	x0, [x20, x26, lsl #3]
  44bf58:	str	x1, [x20, x26, lsl #3]
  44bf5c:	str	x0, [x19]
  44bf60:	cmp	w23, w25
  44bf64:	b.le	44bfb8 <_obstack_memory_used@@Base+0xef60>
  44bf68:	sbfiz	x19, x25, #3, #32
  44bf6c:	sxtw	x28, w25
  44bf70:	add	x26, x19, #0x8
  44bf74:	add	w21, w25, #0x1
  44bf78:	add	x3, x20, x26
  44bf7c:	str	x3, [sp, #104]
  44bf80:	cmp	w21, w23
  44bf84:	add	x19, x20, x19
  44bf88:	mov	x0, x27
  44bf8c:	ldr	x1, [x20, x28, lsl #3]
  44bf90:	b.lt	44bf14 <_obstack_memory_used@@Base+0xeebc>  // b.tstop
  44bf94:	sxtw	x26, w22
  44bf98:	mov	x2, x1
  44bf9c:	mov	w21, w25
  44bfa0:	mov	x0, x27
  44bfa4:	mov	w22, w21
  44bfa8:	ldr	x1, [x20, x26, lsl #3]
  44bfac:	lsl	w21, w21, #1
  44bfb0:	blr	x24
  44bfb4:	tbnz	w0, #31, 44bf4c <_obstack_memory_used@@Base+0xeef4>
  44bfb8:	ldp	x19, x20, [sp, #16]
  44bfbc:	ldp	x23, x24, [sp, #48]
  44bfc0:	ldp	x27, x28, [sp, #80]
  44bfc4:	ldp	x21, x22, [sp, #32]
  44bfc8:	ldp	x25, x26, [sp, #64]
  44bfcc:	ldp	x29, x30, [sp], #112
  44bfd0:	ret
  44bfd4:	mov	x19, x3
  44bfd8:	ldr	x1, [x20, x26]
  44bfdc:	b	44bf2c <_obstack_memory_used@@Base+0xeed4>
  44bfe0:	stp	x29, x30, [sp, #-80]!
  44bfe4:	mov	x29, sp
  44bfe8:	stp	x19, x20, [sp, #16]
  44bfec:	ldr	x19, [x2, #8]
  44bff0:	stp	x21, x22, [sp, #32]
  44bff4:	mov	x22, x2
  44bff8:	stp	x23, x24, [sp, #48]
  44bffc:	add	x21, x2, #0x10
  44c000:	lsr	x20, x19, #1
  44c004:	mov	x23, x0
  44c008:	mov	x24, x1
  44c00c:	subs	w20, w20, #0x1
  44c010:	b.mi	44c048 <_obstack_memory_used@@Base+0xeff0>  // b.first
  44c014:	str	x25, [sp, #64]
  44c018:	mov	w25, w19
  44c01c:	nop
  44c020:	mov	w3, w20
  44c024:	mov	w4, w25
  44c028:	mov	x2, x21
  44c02c:	sub	w20, w20, #0x1
  44c030:	mov	x1, x24
  44c034:	mov	x0, x23
  44c038:	bl	44bed0 <_obstack_memory_used@@Base+0xee78>
  44c03c:	cmn	w20, #0x1
  44c040:	b.ne	44c020 <_obstack_memory_used@@Base+0xefc8>  // b.any
  44c044:	ldr	x25, [sp, #64]
  44c048:	sub	w19, w19, #0x1
  44c04c:	cmp	w19, #0x0
  44c050:	sxtw	x19, w19
  44c054:	b.le	44c08c <_obstack_memory_used@@Base+0xf034>
  44c058:	ldr	x1, [x21, x19, lsl #3]
  44c05c:	mov	w4, w19
  44c060:	ldr	x0, [x22, #16]
  44c064:	str	x1, [x22, #16]
  44c068:	str	x0, [x21, x19, lsl #3]
  44c06c:	mov	x2, x21
  44c070:	sub	x19, x19, #0x1
  44c074:	mov	x1, x24
  44c078:	mov	x0, x23
  44c07c:	mov	w3, #0x0                   	// #0
  44c080:	bl	44bed0 <_obstack_memory_used@@Base+0xee78>
  44c084:	cmp	w19, #0x0
  44c088:	b.gt	44c058 <_obstack_memory_used@@Base+0xf000>
  44c08c:	ldp	x19, x20, [sp, #16]
  44c090:	ldp	x21, x22, [sp, #32]
  44c094:	ldp	x23, x24, [sp, #48]
  44c098:	ldp	x29, x30, [sp], #80
  44c09c:	ret
  44c0a0:	and	w0, w0, #0xff
  44c0a4:	cmp	w0, #0xff
  44c0a8:	b.eq	44c0f8 <_obstack_memory_used@@Base+0xf0a0>  // b.none
  44c0ac:	and	w1, w0, #0x7
  44c0b0:	cmp	w1, #0x2
  44c0b4:	b.eq	44c0f0 <_obstack_memory_used@@Base+0xf098>  // b.none
  44c0b8:	b.ls	44c0e4 <_obstack_memory_used@@Base+0xf08c>  // b.plast
  44c0bc:	cmp	w1, #0x3
  44c0c0:	mov	w0, #0x4                   	// #4
  44c0c4:	b.ne	44c0cc <_obstack_memory_used@@Base+0xf074>  // b.any
  44c0c8:	ret
  44c0cc:	cmp	w1, w0
  44c0d0:	mov	w0, #0x8                   	// #8
  44c0d4:	b.eq	44c0c8 <_obstack_memory_used@@Base+0xf070>  // b.none
  44c0d8:	stp	x29, x30, [sp, #-16]!
  44c0dc:	mov	x29, sp
  44c0e0:	bl	402970 <abort@plt>
  44c0e4:	mov	w0, #0x8                   	// #8
  44c0e8:	cbnz	w1, 44c0d8 <_obstack_memory_used@@Base+0xf080>
  44c0ec:	ret
  44c0f0:	mov	w0, w1
  44c0f4:	ret
  44c0f8:	mov	w0, #0x0                   	// #0
  44c0fc:	ret
  44c100:	and	w5, w0, #0xff
  44c104:	cmp	w5, #0x50
  44c108:	b.eq	44c220 <_obstack_memory_used@@Base+0xf1c8>  // b.none
  44c10c:	and	w4, w5, #0xf
  44c110:	cmp	w4, #0x4
  44c114:	b.eq	44c130 <_obstack_memory_used@@Base+0xf0d8>  // b.none
  44c118:	b.ls	44c144 <_obstack_memory_used@@Base+0xf0ec>  // b.plast
  44c11c:	cmp	w4, #0xb
  44c120:	b.eq	44c244 <_obstack_memory_used@@Base+0xf1ec>  // b.none
  44c124:	b.ls	44c1a0 <_obstack_memory_used@@Base+0xf148>  // b.plast
  44c128:	cmp	w4, #0xc
  44c12c:	b.ne	44c254 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  44c130:	mov	x0, x2
  44c134:	ldr	x4, [x0], #8
  44c138:	cbnz	x4, 44c200 <_obstack_memory_used@@Base+0xf1a8>
  44c13c:	str	x4, [x3]
  44c140:	ret
  44c144:	cmp	w4, #0x2
  44c148:	b.eq	44c234 <_obstack_memory_used@@Base+0xf1dc>  // b.none
  44c14c:	b.ls	44c168 <_obstack_memory_used@@Base+0xf110>  // b.plast
  44c150:	cmp	w4, #0x3
  44c154:	b.ne	44c254 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  44c158:	mov	x0, x2
  44c15c:	ldr	w4, [x0], #4
  44c160:	cbz	x4, 44c13c <_obstack_memory_used@@Base+0xf0e4>
  44c164:	b	44c200 <_obstack_memory_used@@Base+0xf1a8>
  44c168:	cbz	w4, 44c130 <_obstack_memory_used@@Base+0xf0d8>
  44c16c:	cmp	w4, #0x1
  44c170:	b.ne	44c254 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  44c174:	mov	x0, x2
  44c178:	mov	x4, #0x0                   	// #0
  44c17c:	mov	w7, #0x0                   	// #0
  44c180:	ldrb	w8, [x0], #1
  44c184:	and	x6, x8, #0x7f
  44c188:	lsl	x6, x6, x7
  44c18c:	add	w7, w7, #0x7
  44c190:	orr	x4, x4, x6
  44c194:	tbnz	w8, #7, 44c180 <_obstack_memory_used@@Base+0xf128>
  44c198:	cbz	x4, 44c13c <_obstack_memory_used@@Base+0xf0e4>
  44c19c:	b	44c200 <_obstack_memory_used@@Base+0xf1a8>
  44c1a0:	cmp	w4, #0x9
  44c1a4:	b.eq	44c1c0 <_obstack_memory_used@@Base+0xf168>  // b.none
  44c1a8:	cmp	w4, #0xa
  44c1ac:	b.ne	44c254 <_obstack_memory_used@@Base+0xf1fc>  // b.any
  44c1b0:	mov	x0, x2
  44c1b4:	ldrsh	x4, [x0], #2
  44c1b8:	cbz	x4, 44c13c <_obstack_memory_used@@Base+0xf0e4>
  44c1bc:	b	44c200 <_obstack_memory_used@@Base+0xf1a8>
  44c1c0:	mov	x0, x2
  44c1c4:	mov	x4, #0x0                   	// #0
  44c1c8:	mov	w7, #0x0                   	// #0
  44c1cc:	ldrb	w8, [x0], #1
  44c1d0:	and	x6, x8, #0x7f
  44c1d4:	lsl	x6, x6, x7
  44c1d8:	add	w7, w7, #0x7
  44c1dc:	orr	x4, x4, x6
  44c1e0:	tbnz	w8, #7, 44c1cc <_obstack_memory_used@@Base+0xf174>
  44c1e4:	cmp	w7, #0x3f
  44c1e8:	b.hi	44c138 <_obstack_memory_used@@Base+0xf0e0>  // b.pmore
  44c1ec:	tbz	w8, #6, 44c138 <_obstack_memory_used@@Base+0xf0e0>
  44c1f0:	mov	x6, #0xffffffffffffffff    	// #-1
  44c1f4:	lsl	x7, x6, x7
  44c1f8:	orr	x4, x4, x7
  44c1fc:	nop
  44c200:	and	w6, w5, #0x70
  44c204:	cmp	w6, #0x10
  44c208:	csel	x1, x2, x1, eq  // eq = none
  44c20c:	add	x4, x4, x1
  44c210:	tbz	w5, #7, 44c13c <_obstack_memory_used@@Base+0xf0e4>
  44c214:	ldr	x4, [x4]
  44c218:	str	x4, [x3]
  44c21c:	ret
  44c220:	add	x0, x2, #0x7
  44c224:	and	x0, x0, #0xfffffffffffffff8
  44c228:	ldr	x4, [x0], #8
  44c22c:	str	x4, [x3]
  44c230:	ret
  44c234:	mov	x0, x2
  44c238:	ldrh	w4, [x0], #2
  44c23c:	cbz	x4, 44c13c <_obstack_memory_used@@Base+0xf0e4>
  44c240:	b	44c200 <_obstack_memory_used@@Base+0xf1a8>
  44c244:	mov	x0, x2
  44c248:	ldrsw	x4, [x0], #4
  44c24c:	cbz	x4, 44c13c <_obstack_memory_used@@Base+0xf0e4>
  44c250:	b	44c200 <_obstack_memory_used@@Base+0xf1a8>
  44c254:	stp	x29, x30, [sp, #-16]!
  44c258:	mov	x29, sp
  44c25c:	bl	402970 <abort@plt>
  44c260:	stp	x29, x30, [sp, #-48]!
  44c264:	mov	x29, sp
  44c268:	stp	x19, x20, [sp, #16]
  44c26c:	mov	x20, x0
  44c270:	add	x19, x0, #0x9
  44c274:	mov	x0, x19
  44c278:	bl	402630 <strlen@plt>
  44c27c:	ldrb	w3, [x20, #8]
  44c280:	add	x0, x0, #0x1
  44c284:	add	x2, x19, x0
  44c288:	cmp	w3, #0x3
  44c28c:	b.hi	44c358 <_obstack_memory_used@@Base+0xf300>  // b.pmore
  44c290:	ldrb	w0, [x20, #9]
  44c294:	cmp	w0, #0x7a
  44c298:	b.eq	44c2ac <_obstack_memory_used@@Base+0xf254>  // b.none
  44c29c:	mov	w0, #0x0                   	// #0
  44c2a0:	ldp	x19, x20, [sp, #16]
  44c2a4:	ldp	x29, x30, [sp], #48
  44c2a8:	ret
  44c2ac:	ldrsb	w1, [x2], #1
  44c2b0:	tbnz	w1, #31, 44c2ac <_obstack_memory_used@@Base+0xf254>
  44c2b4:	nop
  44c2b8:	mov	x0, x2
  44c2bc:	ldrsb	w1, [x2], #1
  44c2c0:	tbnz	w1, #31, 44c2b8 <_obstack_memory_used@@Base+0xf260>
  44c2c4:	cmp	w3, #0x1
  44c2c8:	b.eq	44c350 <_obstack_memory_used@@Base+0xf2f8>  // b.none
  44c2cc:	nop
  44c2d0:	ldrsb	w0, [x2], #1
  44c2d4:	tbnz	w0, #31, 44c2d0 <_obstack_memory_used@@Base+0xf278>
  44c2d8:	add	x19, x20, #0xa
  44c2dc:	nop
  44c2e0:	ldrsb	w1, [x2], #1
  44c2e4:	tbnz	w1, #31, 44c2e0 <_obstack_memory_used@@Base+0xf288>
  44c2e8:	ldrb	w0, [x20, #10]
  44c2ec:	add	x20, sp, #0x28
  44c2f0:	cmp	w0, #0x52
  44c2f4:	b.ne	44c314 <_obstack_memory_used@@Base+0xf2bc>  // b.any
  44c2f8:	b	44c340 <_obstack_memory_used@@Base+0xf2e8>
  44c2fc:	add	x2, x2, #0x1
  44c300:	cmp	w0, #0x4c
  44c304:	b.ne	44c29c <_obstack_memory_used@@Base+0xf244>  // b.any
  44c308:	ldrb	w0, [x19, #1]!
  44c30c:	cmp	w0, #0x52
  44c310:	b.eq	44c340 <_obstack_memory_used@@Base+0xf2e8>  // b.none
  44c314:	cmp	w0, #0x50
  44c318:	b.ne	44c2fc <_obstack_memory_used@@Base+0xf2a4>  // b.any
  44c31c:	ldrb	w0, [x2], #1
  44c320:	mov	x3, x20
  44c324:	mov	x1, #0x0                   	// #0
  44c328:	and	w0, w0, #0x7f
  44c32c:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c330:	mov	x2, x0
  44c334:	ldrb	w0, [x19, #1]!
  44c338:	cmp	w0, #0x52
  44c33c:	b.ne	44c314 <_obstack_memory_used@@Base+0xf2bc>  // b.any
  44c340:	ldrb	w0, [x2]
  44c344:	ldp	x19, x20, [sp, #16]
  44c348:	ldp	x29, x30, [sp], #48
  44c34c:	ret
  44c350:	add	x2, x0, #0x2
  44c354:	b	44c2d8 <_obstack_memory_used@@Base+0xf280>
  44c358:	ldrb	w1, [x19, x0]
  44c35c:	mov	w0, #0xff                  	// #255
  44c360:	cmp	w1, #0x8
  44c364:	b.ne	44c2a0 <_obstack_memory_used@@Base+0xf248>  // b.any
  44c368:	ldrb	w1, [x2, #1]
  44c36c:	cbnz	w1, 44c2a0 <_obstack_memory_used@@Base+0xf248>
  44c370:	add	x2, x2, #0x2
  44c374:	b	44c290 <_obstack_memory_used@@Base+0xf238>
  44c378:	and	w0, w0, #0xff
  44c37c:	cmp	w0, #0xff
  44c380:	b.eq	44c3b8 <_obstack_memory_used@@Base+0xf360>  // b.none
  44c384:	and	w3, w0, #0x70
  44c388:	cmp	w3, #0x20
  44c38c:	b.eq	44c3d0 <_obstack_memory_used@@Base+0xf378>  // b.none
  44c390:	b.ls	44c3a4 <_obstack_memory_used@@Base+0xf34c>  // b.plast
  44c394:	cmp	w3, #0x30
  44c398:	b.ne	44c3c0 <_obstack_memory_used@@Base+0xf368>  // b.any
  44c39c:	ldr	x0, [x2]
  44c3a0:	ret
  44c3a4:	tst	w0, #0x60
  44c3a8:	b.eq	44c3b8 <_obstack_memory_used@@Base+0xf360>  // b.none
  44c3ac:	stp	x29, x30, [sp, #-16]!
  44c3b0:	mov	x29, sp
  44c3b4:	bl	402970 <abort@plt>
  44c3b8:	mov	x0, #0x0                   	// #0
  44c3bc:	ret
  44c3c0:	cmp	w3, #0x50
  44c3c4:	mov	x0, #0x0                   	// #0
  44c3c8:	b.ne	44c3ac <_obstack_memory_used@@Base+0xf354>  // b.any
  44c3cc:	ret
  44c3d0:	ldr	x0, [x1]
  44c3d4:	ret
  44c3d8:	stp	x29, x30, [sp, #-64]!
  44c3dc:	mov	x29, sp
  44c3e0:	stp	x21, x22, [sp, #32]
  44c3e4:	mov	x22, x2
  44c3e8:	ldrh	w21, [x0, #32]
  44c3ec:	add	x2, x0, #0x10
  44c3f0:	stp	x19, x20, [sp, #16]
  44c3f4:	mov	x19, x0
  44c3f8:	ubfx	x21, x21, #3, #8
  44c3fc:	mov	x20, x1
  44c400:	add	x1, x0, #0x8
  44c404:	mov	w0, w21
  44c408:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c40c:	add	x2, x20, #0x8
  44c410:	mov	x20, x0
  44c414:	mov	x1, x20
  44c418:	add	x3, sp, #0x30
  44c41c:	mov	w0, w21
  44c420:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c424:	ldrh	w0, [x19, #32]
  44c428:	add	x2, x22, #0x8
  44c42c:	mov	x1, x20
  44c430:	add	x3, sp, #0x38
  44c434:	ubfx	x0, x0, #3, #8
  44c438:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c43c:	ldp	x2, x1, [sp, #48]
  44c440:	mov	w3, #0x1                   	// #1
  44c444:	ldp	x19, x20, [sp, #16]
  44c448:	ldp	x21, x22, [sp, #32]
  44c44c:	cmp	x2, x1
  44c450:	csetm	w0, cc  // cc = lo, ul, last
  44c454:	csel	w0, w0, w3, ls  // ls = plast
  44c458:	ldp	x29, x30, [sp], #64
  44c45c:	ret
  44c460:	stp	x29, x30, [sp, #-128]!
  44c464:	mov	x29, sp
  44c468:	stp	x21, x22, [sp, #32]
  44c46c:	add	x22, x0, #0x8
  44c470:	stp	x23, x24, [sp, #48]
  44c474:	add	x23, x0, #0x10
  44c478:	stp	x25, x26, [sp, #64]
  44c47c:	mov	x26, x0
  44c480:	ldrh	w0, [x0, #32]
  44c484:	stp	x19, x20, [sp, #16]
  44c488:	mov	x19, x1
  44c48c:	mov	x20, x2
  44c490:	ubfx	x24, x0, #3, #8
  44c494:	mov	x1, x22
  44c498:	mov	x2, x23
  44c49c:	mov	x0, x24
  44c4a0:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c4a4:	ldr	w1, [x19]
  44c4a8:	cbz	w1, 44c53c <_obstack_memory_used@@Base+0xf4e4>
  44c4ac:	stp	x27, x28, [sp, #80]
  44c4b0:	add	x27, sp, #0x70
  44c4b4:	mov	x25, x0
  44c4b8:	mov	x21, #0x0                   	// #0
  44c4bc:	add	x0, sp, #0x78
  44c4c0:	str	x0, [sp, #104]
  44c4c4:	nop
  44c4c8:	ldr	w1, [x19, #4]
  44c4cc:	cbz	w1, 44c524 <_obstack_memory_used@@Base+0xf4cc>
  44c4d0:	ldrb	w0, [x26, #32]
  44c4d4:	tbz	w0, #2, 44c508 <_obstack_memory_used@@Base+0xf4b0>
  44c4d8:	add	x28, x19, #0x4
  44c4dc:	sub	x28, x28, w1, sxtw
  44c4e0:	cmp	x28, x21
  44c4e4:	b.eq	44c508 <_obstack_memory_used@@Base+0xf4b0>  // b.none
  44c4e8:	mov	x0, x28
  44c4ec:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44c4f0:	mov	x2, x23
  44c4f4:	mov	w24, w0
  44c4f8:	mov	x1, x22
  44c4fc:	mov	x21, x28
  44c500:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c504:	mov	x25, x0
  44c508:	cbnz	w24, 44c558 <_obstack_memory_used@@Base+0xf500>
  44c50c:	ldp	x1, x0, [x19, #8]
  44c510:	stp	x1, x0, [sp, #112]
  44c514:	cbz	x1, 44c524 <_obstack_memory_used@@Base+0xf4cc>
  44c518:	sub	x1, x20, x1
  44c51c:	cmp	x1, x0
  44c520:	b.cc	44c5c0 <_obstack_memory_used@@Base+0xf568>  // b.lo, b.ul, b.last
  44c524:	ldr	w1, [x19]
  44c528:	add	x1, x1, #0x4
  44c52c:	add	x19, x19, x1
  44c530:	ldr	w1, [x19]
  44c534:	cbnz	w1, 44c4c8 <_obstack_memory_used@@Base+0xf470>
  44c538:	ldp	x27, x28, [sp, #80]
  44c53c:	mov	x0, #0x0                   	// #0
  44c540:	ldp	x19, x20, [sp, #16]
  44c544:	ldp	x21, x22, [sp, #32]
  44c548:	ldp	x23, x24, [sp, #48]
  44c54c:	ldp	x25, x26, [sp, #64]
  44c550:	ldp	x29, x30, [sp], #128
  44c554:	ret
  44c558:	and	w28, w24, #0xff
  44c55c:	mov	x3, x27
  44c560:	add	x2, x19, #0x8
  44c564:	mov	x1, x25
  44c568:	mov	w0, w28
  44c56c:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c570:	ldr	x3, [sp, #104]
  44c574:	mov	x2, x0
  44c578:	mov	x1, #0x0                   	// #0
  44c57c:	and	w0, w28, #0xf
  44c580:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c584:	mov	w0, w28
  44c588:	bl	44c0a0 <_obstack_memory_used@@Base+0xf048>
  44c58c:	lsl	w2, w0, #3
  44c590:	cmp	w0, #0x8
  44c594:	mov	x0, #0x1                   	// #1
  44c598:	ldr	x1, [sp, #112]
  44c59c:	lsl	x2, x0, x2
  44c5a0:	sub	x2, x2, #0x1
  44c5a4:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  44c5a8:	tst	x1, x2
  44c5ac:	b.eq	44c524 <_obstack_memory_used@@Base+0xf4cc>  // b.none
  44c5b0:	ldr	x0, [sp, #120]
  44c5b4:	sub	x1, x20, x1
  44c5b8:	cmp	x1, x0
  44c5bc:	b.cs	44c524 <_obstack_memory_used@@Base+0xf4cc>  // b.hs, b.nlast
  44c5c0:	mov	x0, x19
  44c5c4:	ldp	x19, x20, [sp, #16]
  44c5c8:	ldp	x21, x22, [sp, #32]
  44c5cc:	ldp	x23, x24, [sp, #48]
  44c5d0:	ldp	x25, x26, [sp, #64]
  44c5d4:	ldp	x27, x28, [sp, #80]
  44c5d8:	ldp	x29, x30, [sp], #128
  44c5dc:	ret
  44c5e0:	stp	x29, x30, [sp, #-80]!
  44c5e4:	add	x3, x1, #0x4
  44c5e8:	mov	x29, sp
  44c5ec:	stp	x21, x22, [sp, #32]
  44c5f0:	mov	x21, x1
  44c5f4:	ldrsw	x1, [x1, #4]
  44c5f8:	stp	x19, x20, [sp, #16]
  44c5fc:	mov	x20, x2
  44c600:	add	x19, x0, #0x10
  44c604:	str	x23, [sp, #48]
  44c608:	add	x23, x0, #0x8
  44c60c:	sub	x0, x3, x1
  44c610:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44c614:	and	w22, w0, #0xff
  44c618:	mov	x2, x19
  44c61c:	mov	x1, x23
  44c620:	mov	w0, w22
  44c624:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c628:	mov	x1, x0
  44c62c:	add	x3, sp, #0x40
  44c630:	add	x2, x21, #0x8
  44c634:	mov	w0, w22
  44c638:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c63c:	add	x1, x20, #0x4
  44c640:	ldrsw	x0, [x20, #4]
  44c644:	sub	x0, x1, x0
  44c648:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44c64c:	mov	x2, x19
  44c650:	and	w19, w0, #0xff
  44c654:	mov	x1, x23
  44c658:	mov	w0, w19
  44c65c:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c660:	mov	x1, x0
  44c664:	add	x2, x20, #0x8
  44c668:	add	x3, sp, #0x48
  44c66c:	mov	w0, w19
  44c670:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c674:	ldp	x2, x1, [sp, #64]
  44c678:	mov	w3, #0x1                   	// #1
  44c67c:	ldp	x19, x20, [sp, #16]
  44c680:	ldp	x21, x22, [sp, #32]
  44c684:	cmp	x2, x1
  44c688:	csetm	w0, cc  // cc = lo, ul, last
  44c68c:	csel	w0, w0, w3, ls  // ls = plast
  44c690:	ldr	x23, [sp, #48]
  44c694:	ldp	x29, x30, [sp], #80
  44c698:	ret
  44c69c:	nop
  44c6a0:	stp	x29, x30, [sp, #-112]!
  44c6a4:	mov	x29, sp
  44c6a8:	stp	x21, x22, [sp, #32]
  44c6ac:	mov	x21, x0
  44c6b0:	ldr	w0, [x1]
  44c6b4:	cbz	w0, 44c818 <_obstack_memory_used@@Base+0xf7c0>
  44c6b8:	stp	x19, x20, [sp, #16]
  44c6bc:	mov	x19, x1
  44c6c0:	mov	w20, #0x0                   	// #0
  44c6c4:	stp	x25, x26, [sp, #64]
  44c6c8:	add	x25, sp, #0x68
  44c6cc:	add	x26, x21, #0x8
  44c6d0:	stp	x27, x28, [sp, #80]
  44c6d4:	add	x27, x21, #0x10
  44c6d8:	mov	x22, #0x0                   	// #0
  44c6dc:	mov	x4, #0x0                   	// #0
  44c6e0:	stp	x23, x24, [sp, #48]
  44c6e4:	mov	x23, #0x0                   	// #0
  44c6e8:	ldr	w2, [x19, #4]
  44c6ec:	cbz	w2, 44c7b4 <_obstack_memory_used@@Base+0xf75c>
  44c6f0:	add	x28, x19, #0x4
  44c6f4:	and	w24, w20, #0xff
  44c6f8:	sub	x28, x28, w2, sxtw
  44c6fc:	cmp	x28, x4
  44c700:	b.eq	44c758 <_obstack_memory_used@@Base+0xf700>  // b.none
  44c704:	mov	x0, x28
  44c708:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44c70c:	mov	w20, w0
  44c710:	cmp	w0, #0xff
  44c714:	b.eq	44c7f4 <_obstack_memory_used@@Base+0xf79c>  // b.none
  44c718:	and	w24, w0, #0xff
  44c71c:	mov	x2, x27
  44c720:	mov	w0, w24
  44c724:	mov	x1, x26
  44c728:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c72c:	mov	x23, x0
  44c730:	ldrh	w2, [x21, #32]
  44c734:	and	w0, w2, #0x7f8
  44c738:	cmp	w0, #0x7f8
  44c73c:	b.eq	44c7e8 <_obstack_memory_used@@Base+0xf790>  // b.none
  44c740:	ubfx	x2, x2, #3, #8
  44c744:	cmp	w2, w20
  44c748:	b.eq	44c758 <_obstack_memory_used@@Base+0xf700>  // b.none
  44c74c:	ldrb	w0, [x21, #32]
  44c750:	orr	w0, w0, #0x4
  44c754:	strb	w0, [x21, #32]
  44c758:	mov	x3, x25
  44c75c:	add	x2, x19, #0x8
  44c760:	mov	x1, x23
  44c764:	mov	w0, w24
  44c768:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c76c:	mov	w0, w24
  44c770:	bl	44c0a0 <_obstack_memory_used@@Base+0xf048>
  44c774:	lsl	w2, w0, #3
  44c778:	cmp	w0, #0x8
  44c77c:	mov	x0, #0x1                   	// #1
  44c780:	ldr	x3, [sp, #104]
  44c784:	lsl	x2, x0, x2
  44c788:	sub	x2, x2, #0x1
  44c78c:	mov	x4, x28
  44c790:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  44c794:	tst	x3, x2
  44c798:	b.eq	44c7b4 <_obstack_memory_used@@Base+0xf75c>  // b.none
  44c79c:	ldr	x0, [x21]
  44c7a0:	add	x22, x22, #0x1
  44c7a4:	cmp	x0, x3
  44c7a8:	b.ls	44c7b0 <_obstack_memory_used@@Base+0xf758>  // b.plast
  44c7ac:	str	x3, [x21]
  44c7b0:	mov	x4, x28
  44c7b4:	ldr	w2, [x19]
  44c7b8:	add	x2, x2, #0x4
  44c7bc:	add	x19, x19, x2
  44c7c0:	ldr	w0, [x19]
  44c7c4:	cbnz	w0, 44c6e8 <_obstack_memory_used@@Base+0xf690>
  44c7c8:	ldp	x19, x20, [sp, #16]
  44c7cc:	ldp	x23, x24, [sp, #48]
  44c7d0:	ldp	x25, x26, [sp, #64]
  44c7d4:	ldp	x27, x28, [sp, #80]
  44c7d8:	mov	x0, x22
  44c7dc:	ldp	x21, x22, [sp, #32]
  44c7e0:	ldp	x29, x30, [sp], #112
  44c7e4:	ret
  44c7e8:	bfi	w2, w24, #3, #8
  44c7ec:	strh	w2, [x21, #32]
  44c7f0:	b	44c758 <_obstack_memory_used@@Base+0xf700>
  44c7f4:	mov	x22, #0xffffffffffffffff    	// #-1
  44c7f8:	mov	x0, x22
  44c7fc:	ldp	x19, x20, [sp, #16]
  44c800:	ldp	x21, x22, [sp, #32]
  44c804:	ldp	x23, x24, [sp, #48]
  44c808:	ldp	x25, x26, [sp, #64]
  44c80c:	ldp	x27, x28, [sp, #80]
  44c810:	ldp	x29, x30, [sp], #112
  44c814:	ret
  44c818:	mov	x22, #0x0                   	// #0
  44c81c:	b	44c7d8 <_obstack_memory_used@@Base+0xf780>
  44c820:	stp	x29, x30, [sp, #-112]!
  44c824:	mov	x29, sp
  44c828:	stp	x21, x22, [sp, #32]
  44c82c:	add	x21, x0, #0x8
  44c830:	add	x22, x0, #0x10
  44c834:	stp	x27, x28, [sp, #80]
  44c838:	mov	x28, x0
  44c83c:	ldrh	w0, [x0, #32]
  44c840:	stp	x19, x20, [sp, #16]
  44c844:	mov	x19, x2
  44c848:	mov	x20, x1
  44c84c:	stp	x25, x26, [sp, #64]
  44c850:	ubfx	x26, x0, #3, #8
  44c854:	mov	x2, x22
  44c858:	mov	x1, x21
  44c85c:	mov	x0, x26
  44c860:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c864:	ldr	w2, [x19]
  44c868:	cbz	w2, 44c900 <_obstack_memory_used@@Base+0xf8a8>
  44c86c:	add	x25, sp, #0x68
  44c870:	stp	x23, x24, [sp, #48]
  44c874:	mov	x24, x0
  44c878:	mov	x23, #0x0                   	// #0
  44c87c:	nop
  44c880:	ldr	w2, [x19, #4]
  44c884:	cbz	w2, 44c8e8 <_obstack_memory_used@@Base+0xf890>
  44c888:	ldrb	w0, [x28, #32]
  44c88c:	tbz	w0, #2, 44c8c0 <_obstack_memory_used@@Base+0xf868>
  44c890:	add	x27, x19, #0x4
  44c894:	sub	x27, x27, w2, sxtw
  44c898:	cmp	x27, x23
  44c89c:	b.eq	44c8c0 <_obstack_memory_used@@Base+0xf868>  // b.none
  44c8a0:	mov	x0, x27
  44c8a4:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44c8a8:	mov	x2, x22
  44c8ac:	mov	w26, w0
  44c8b0:	mov	x1, x21
  44c8b4:	mov	x23, x27
  44c8b8:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44c8bc:	mov	x24, x0
  44c8c0:	cbnz	w26, 44c918 <_obstack_memory_used@@Base+0xf8c0>
  44c8c4:	ldr	x0, [x19, #8]
  44c8c8:	cbz	x0, 44c8e8 <_obstack_memory_used@@Base+0xf890>
  44c8cc:	ldr	x2, [x20]
  44c8d0:	cbz	x2, 44c8e8 <_obstack_memory_used@@Base+0xf890>
  44c8d4:	ldr	x3, [x2, #8]
  44c8d8:	add	x0, x3, #0x2
  44c8dc:	add	x3, x3, #0x1
  44c8e0:	str	x3, [x2, #8]
  44c8e4:	str	x19, [x2, x0, lsl #3]
  44c8e8:	ldr	w2, [x19]
  44c8ec:	add	x2, x2, #0x4
  44c8f0:	add	x19, x19, x2
  44c8f4:	ldr	w2, [x19]
  44c8f8:	cbnz	w2, 44c880 <_obstack_memory_used@@Base+0xf828>
  44c8fc:	ldp	x23, x24, [sp, #48]
  44c900:	ldp	x19, x20, [sp, #16]
  44c904:	ldp	x21, x22, [sp, #32]
  44c908:	ldp	x25, x26, [sp, #64]
  44c90c:	ldp	x27, x28, [sp, #80]
  44c910:	ldp	x29, x30, [sp], #112
  44c914:	ret
  44c918:	mov	x3, x25
  44c91c:	add	x2, x19, #0x8
  44c920:	mov	x1, x24
  44c924:	and	w27, w26, #0xff
  44c928:	mov	w0, w27
  44c92c:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44c930:	mov	w0, w27
  44c934:	bl	44c0a0 <_obstack_memory_used@@Base+0xf048>
  44c938:	lsl	w2, w0, #3
  44c93c:	cmp	w0, #0x8
  44c940:	mov	x0, #0x1                   	// #1
  44c944:	ldr	x3, [sp, #104]
  44c948:	lsl	x2, x0, x2
  44c94c:	sub	x2, x2, #0x1
  44c950:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  44c954:	tst	x2, x3
  44c958:	b.ne	44c8cc <_obstack_memory_used@@Base+0xf874>  // b.any
  44c95c:	b	44c8e8 <_obstack_memory_used@@Base+0xf890>
  44c960:	stp	x29, x30, [sp, #-128]!
  44c964:	cmp	x1, #0x2f
  44c968:	mov	x29, sp
  44c96c:	stp	x19, x20, [sp, #16]
  44c970:	mov	x19, x2
  44c974:	ldr	w2, [x2, #40]
  44c978:	ldr	x13, [x0]
  44c97c:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  44c980:	ldr	x3, [x0, #16]
  44c984:	b.ne	44cac4 <_obstack_memory_used@@Base+0xfa6c>  // b.any
  44c988:	cmp	x1, #0x19
  44c98c:	b.ls	44ca9c <_obstack_memory_used@@Base+0xfa44>  // b.plast
  44c990:	mov	x10, #0x0                   	// #0
  44c994:	mov	x15, #0x0                   	// #0
  44c998:	ldrh	w4, [x0, #24]
  44c99c:	cbz	w4, 44cab4 <_obstack_memory_used@@Base+0xfa5c>
  44c9a0:	mov	w0, #0x38                  	// #56
  44c9a4:	mov	w7, #0xe550                	// #58704
  44c9a8:	mov	x11, #0x0                   	// #0
  44c9ac:	mov	x12, #0x0                   	// #0
  44c9b0:	umaddl	x4, w4, w0, x3
  44c9b4:	mov	x8, #0x0                   	// #0
  44c9b8:	mov	x6, #0x0                   	// #0
  44c9bc:	mov	x9, #0x0                   	// #0
  44c9c0:	movk	w7, #0x6474, lsl #16
  44c9c4:	mov	x14, #0x1                   	// #1
  44c9c8:	b	44c9e8 <_obstack_memory_used@@Base+0xf990>
  44c9cc:	cmp	w0, w7
  44c9d0:	b.eq	44caac <_obstack_memory_used@@Base+0xfa54>  // b.none
  44c9d4:	cmp	w0, #0x2
  44c9d8:	csel	x6, x6, x3, ne  // ne = any
  44c9dc:	add	x3, x3, #0x38
  44c9e0:	cmp	x4, x3
  44c9e4:	b.eq	44ca30 <_obstack_memory_used@@Base+0xf9d8>  // b.none
  44c9e8:	ldr	w0, [x3]
  44c9ec:	cmp	w0, #0x1
  44c9f0:	b.ne	44c9cc <_obstack_memory_used@@Base+0xf974>  // b.any
  44c9f4:	ldr	x0, [x3, #16]
  44c9f8:	ldr	x5, [x19]
  44c9fc:	add	x0, x13, x0
  44ca00:	cmp	x5, x0
  44ca04:	b.cc	44c9dc <_obstack_memory_used@@Base+0xf984>  // b.lo, b.ul, b.last
  44ca08:	ldr	x2, [x3, #40]
  44ca0c:	add	x3, x3, #0x38
  44ca10:	add	x2, x0, x2
  44ca14:	cmp	x5, x2
  44ca18:	csel	x11, x11, x2, cs  // cs = hs, nlast
  44ca1c:	csel	x12, x12, x0, cs  // cs = hs, nlast
  44ca20:	csel	x8, x8, x14, cs  // cs = hs, nlast
  44ca24:	cmp	x4, x3
  44ca28:	b.ne	44c9e8 <_obstack_memory_used@@Base+0xf990>  // b.any
  44ca2c:	nop
  44ca30:	cbz	x8, 44cab4 <_obstack_memory_used@@Base+0xfa5c>
  44ca34:	cmp	x1, #0x2f
  44ca38:	b.ls	44ca74 <_obstack_memory_used@@Base+0xfa1c>  // b.plast
  44ca3c:	adrp	x1, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44ca40:	add	x1, x1, #0xb88
  44ca44:	cmp	x10, #0x0
  44ca48:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  44ca4c:	ldr	x0, [x1, #8]
  44ca50:	b.eq	44ca68 <_obstack_memory_used@@Base+0xfa10>  // b.none
  44ca54:	ldr	x2, [x10, #40]
  44ca58:	str	x2, [x15, #40]
  44ca5c:	str	x0, [x10, #40]
  44ca60:	mov	x0, x10
  44ca64:	str	x10, [x1, #8]
  44ca68:	stp	x12, x11, [x0]
  44ca6c:	stp	x13, x9, [x0, #16]
  44ca70:	str	x6, [x0, #32]
  44ca74:	cbz	x9, 44cab4 <_obstack_memory_used@@Base+0xfa5c>
  44ca78:	ldr	x0, [x9, #16]
  44ca7c:	add	x20, x13, x0
  44ca80:	ldrb	w0, [x13, x0]
  44ca84:	cmp	w0, #0x1
  44ca88:	b.eq	44cb24 <_obstack_memory_used@@Base+0xfacc>  // b.none
  44ca8c:	mov	w0, #0x1                   	// #1
  44ca90:	ldp	x19, x20, [sp, #16]
  44ca94:	ldp	x29, x30, [sp], #128
  44ca98:	ret
  44ca9c:	mov	w0, #0xffffffff            	// #-1
  44caa0:	ldp	x19, x20, [sp, #16]
  44caa4:	ldp	x29, x30, [sp], #128
  44caa8:	ret
  44caac:	mov	x9, x3
  44cab0:	b	44c9dc <_obstack_memory_used@@Base+0xf984>
  44cab4:	mov	w0, #0x0                   	// #0
  44cab8:	ldp	x19, x20, [sp, #16]
  44cabc:	ldp	x29, x30, [sp], #128
  44cac0:	ret
  44cac4:	ldp	x6, x7, [x0, #32]
  44cac8:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x3ffa8>
  44cacc:	adrp	x5, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44cad0:	ldr	x2, [x4, #1408]
  44cad4:	cmp	x6, x2
  44cad8:	b.eq	44cbf8 <_obstack_memory_used@@Base+0xfba0>  // b.none
  44cadc:	add	x2, x5, #0xb88
  44cae0:	str	x6, [x4, #1408]
  44cae4:	add	x4, x2, #0x40
  44cae8:	add	x2, x2, #0x1c0
  44caec:	str	x7, [x5, #2952]
  44caf0:	stp	xzr, xzr, [x4, #-48]
  44caf4:	stur	x4, [x4, #-8]
  44caf8:	add	x4, x4, #0x30
  44cafc:	cmp	x2, x4
  44cb00:	b.ne	44caf0 <_obstack_memory_used@@Base+0xfa98>  // b.any
  44cb04:	add	x5, x5, #0xb88
  44cb08:	mov	x10, #0x0                   	// #0
  44cb0c:	add	x2, x5, #0x10
  44cb10:	mov	x15, #0x0                   	// #0
  44cb14:	str	xzr, [x5, #392]
  44cb18:	str	x2, [x5, #8]
  44cb1c:	str	wzr, [x19, #40]
  44cb20:	b	44c998 <_obstack_memory_used@@Base+0xf940>
  44cb24:	stp	x21, x22, [sp, #32]
  44cb28:	add	x22, x19, #0x8
  44cb2c:	mov	x1, x22
  44cb30:	stp	x23, x24, [sp, #48]
  44cb34:	add	x23, x19, #0x10
  44cb38:	mov	x2, x23
  44cb3c:	ldrb	w21, [x20, #1]
  44cb40:	mov	w0, w21
  44cb44:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44cb48:	add	x3, sp, #0x40
  44cb4c:	mov	x1, x0
  44cb50:	add	x2, x20, #0x4
  44cb54:	mov	w0, w21
  44cb58:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44cb5c:	ldrb	w24, [x20, #2]
  44cb60:	mov	x21, x0
  44cb64:	cmp	w24, #0xff
  44cb68:	b.eq	44cb78 <_obstack_memory_used@@Base+0xfb20>  // b.none
  44cb6c:	ldrb	w0, [x20, #3]
  44cb70:	cmp	w0, #0x3b
  44cb74:	b.eq	44cc58 <_obstack_memory_used@@Base+0xfc00>  // b.none
  44cb78:	ldr	x2, [x19]
  44cb7c:	mov	x3, #0x4                   	// #4
  44cb80:	ldp	x5, x4, [x19, #8]
  44cb84:	add	x0, sp, #0x50
  44cb88:	ldr	x1, [sp, #64]
  44cb8c:	stp	xzr, x5, [sp, #80]
  44cb90:	stp	x4, x1, [sp, #96]
  44cb94:	str	x3, [sp, #112]
  44cb98:	bl	44c460 <_obstack_memory_used@@Base+0xf408>
  44cb9c:	str	x0, [x19, #32]
  44cba0:	cbz	x0, 44cd70 <_obstack_memory_used@@Base+0xfd18>
  44cba4:	ldrsw	x1, [x0, #4]
  44cba8:	add	x0, x0, #0x4
  44cbac:	sub	x0, x0, x1
  44cbb0:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44cbb4:	and	w20, w0, #0xff
  44cbb8:	mov	x2, x23
  44cbbc:	mov	x1, x22
  44cbc0:	mov	w0, w20
  44cbc4:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44cbc8:	ldr	x2, [x19, #32]
  44cbcc:	mov	x1, x0
  44cbd0:	add	x3, sp, #0x48
  44cbd4:	mov	w0, w20
  44cbd8:	add	x2, x2, #0x8
  44cbdc:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44cbe0:	ldr	x1, [sp, #72]
  44cbe4:	mov	w0, #0x1                   	// #1
  44cbe8:	ldp	x21, x22, [sp, #32]
  44cbec:	ldp	x23, x24, [sp, #48]
  44cbf0:	str	x1, [x19, #24]
  44cbf4:	b	44caa0 <_obstack_memory_used@@Base+0xfa48>
  44cbf8:	ldr	x2, [x5, #2952]
  44cbfc:	add	x8, x5, #0xb88
  44cc00:	cmp	x2, x7
  44cc04:	b.ne	44cadc <_obstack_memory_used@@Base+0xfa84>  // b.any
  44cc08:	ldr	x7, [x8, #8]
  44cc0c:	cbz	x7, 44c990 <_obstack_memory_used@@Base+0xf938>
  44cc10:	mov	x10, x7
  44cc14:	mov	x15, #0x0                   	// #0
  44cc18:	ldr	x6, [x19]
  44cc1c:	ldp	x2, x4, [x10]
  44cc20:	cmp	x6, x2
  44cc24:	b.cc	44cc30 <_obstack_memory_used@@Base+0xfbd8>  // b.lo, b.ul, b.last
  44cc28:	cmp	x6, x4
  44cc2c:	b.cc	44cd88 <_obstack_memory_used@@Base+0xfd30>  // b.lo, b.ul, b.last
  44cc30:	orr	x2, x2, x4
  44cc34:	cbz	x2, 44c998 <_obstack_memory_used@@Base+0xf940>
  44cc38:	ldr	x2, [x10, #40]
  44cc3c:	cbz	x2, 44c998 <_obstack_memory_used@@Base+0xf940>
  44cc40:	mov	x15, x10
  44cc44:	mov	x10, x2
  44cc48:	ldp	x2, x4, [x10]
  44cc4c:	cmp	x6, x2
  44cc50:	b.cc	44cc30 <_obstack_memory_used@@Base+0xfbd8>  // b.lo, b.ul, b.last
  44cc54:	b	44cc28 <_obstack_memory_used@@Base+0xfbd0>
  44cc58:	mov	x2, x23
  44cc5c:	mov	x1, x22
  44cc60:	mov	w0, w24
  44cc64:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44cc68:	add	x3, sp, #0x48
  44cc6c:	mov	x1, x0
  44cc70:	mov	x2, x21
  44cc74:	mov	w0, w24
  44cc78:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44cc7c:	ldr	x3, [sp, #72]
  44cc80:	cbz	x3, 44cd60 <_obstack_memory_used@@Base+0xfd08>
  44cc84:	ands	x5, x0, #0x3
  44cc88:	ldr	x2, [x19]
  44cc8c:	b.ne	44cb7c <_obstack_memory_used@@Base+0xfb24>  // b.any
  44cc90:	ldrsw	x1, [x0]
  44cc94:	add	x1, x1, x20
  44cc98:	cmp	x1, x2
  44cc9c:	b.hi	44cd60 <_obstack_memory_used@@Base+0xfd08>  // b.pmore
  44cca0:	sub	x3, x3, #0x1
  44cca4:	lsl	x1, x3, #3
  44cca8:	add	x21, x0, x1
  44ccac:	ldrsw	x1, [x0, x1]
  44ccb0:	add	x1, x1, x20
  44ccb4:	cmp	x1, x2
  44ccb8:	b.ls	44ccfc <_obstack_memory_used@@Base+0xfca4>  // b.plast
  44ccbc:	cmp	x5, x3
  44ccc0:	b.cs	44cdac <_obstack_memory_used@@Base+0xfd54>  // b.hs, b.nlast
  44ccc4:	add	x1, x5, x3
  44ccc8:	lsr	x1, x1, #1
  44cccc:	lsl	x4, x1, #3
  44ccd0:	add	x21, x0, x4
  44ccd4:	ldrsw	x4, [x0, x4]
  44ccd8:	add	x4, x4, x20
  44ccdc:	cmp	x4, x2
  44cce0:	b.hi	44cd80 <_obstack_memory_used@@Base+0xfd28>  // b.pmore
  44cce4:	add	x5, x1, #0x1
  44cce8:	lsl	x1, x5, #3
  44ccec:	ldrsw	x1, [x0, x1]
  44ccf0:	add	x1, x1, x20
  44ccf4:	cmp	x1, x2
  44ccf8:	b.ls	44ccbc <_obstack_memory_used@@Base+0xfc64>  // b.plast
  44ccfc:	ldrsw	x22, [x21, #4]
  44cd00:	add	x22, x22, x20
  44cd04:	add	x1, x22, #0x4
  44cd08:	ldrsw	x0, [x22, #4]
  44cd0c:	sub	x0, x1, x0
  44cd10:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44cd14:	and	w23, w0, #0xff
  44cd18:	mov	w0, w23
  44cd1c:	bl	44c0a0 <_obstack_memory_used@@Base+0xf048>
  44cd20:	mov	w2, w0
  44cd24:	mov	x1, #0x0                   	// #0
  44cd28:	add	x2, x2, #0x8
  44cd2c:	add	x3, sp, #0x50
  44cd30:	add	x2, x22, x2
  44cd34:	and	w0, w23, #0xf
  44cd38:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44cd3c:	ldrsw	x0, [x21]
  44cd40:	ldr	x1, [sp, #80]
  44cd44:	add	x20, x0, x20
  44cd48:	ldr	x2, [x19]
  44cd4c:	add	x0, x20, x1
  44cd50:	cmp	x2, x0
  44cd54:	b.cs	44cd5c <_obstack_memory_used@@Base+0xfd04>  // b.hs, b.nlast
  44cd58:	str	x22, [x19, #32]
  44cd5c:	str	x20, [x19, #24]
  44cd60:	mov	w0, #0x1                   	// #1
  44cd64:	ldp	x21, x22, [sp, #32]
  44cd68:	ldp	x23, x24, [sp, #48]
  44cd6c:	b	44caa0 <_obstack_memory_used@@Base+0xfa48>
  44cd70:	mov	w0, #0x1                   	// #1
  44cd74:	ldp	x21, x22, [sp, #32]
  44cd78:	ldp	x23, x24, [sp, #48]
  44cd7c:	b	44ca90 <_obstack_memory_used@@Base+0xfa38>
  44cd80:	mov	x3, x1
  44cd84:	b	44ccbc <_obstack_memory_used@@Base+0xfc64>
  44cd88:	cmp	x10, x7
  44cd8c:	ldp	x13, x9, [x10, #16]
  44cd90:	b.eq	44ca74 <_obstack_memory_used@@Base+0xfa1c>  // b.none
  44cd94:	add	x5, x5, #0xb88
  44cd98:	ldr	x0, [x10, #40]
  44cd9c:	str	x0, [x15, #40]
  44cda0:	str	x10, [x5, #8]
  44cda4:	str	x7, [x10, #40]
  44cda8:	b	44ca74 <_obstack_memory_used@@Base+0xfa1c>
  44cdac:	bl	402970 <abort@plt>
  44cdb0:	stp	x29, x30, [sp, #-160]!
  44cdb4:	mov	x29, sp
  44cdb8:	stp	x19, x20, [sp, #16]
  44cdbc:	mov	x19, x1
  44cdc0:	ldrb	w1, [x0, #32]
  44cdc4:	stp	x23, x24, [sp, #48]
  44cdc8:	mov	x24, x0
  44cdcc:	tbz	w1, #0, 44ce38 <_obstack_memory_used@@Base+0xfde0>
  44cdd0:	stp	x27, x28, [sp, #80]
  44cdd4:	ldr	x27, [x24, #24]
  44cdd8:	tbnz	w1, #2, 44ceac <_obstack_memory_used@@Base+0xfe54>
  44cddc:	ldrh	w0, [x24, #32]
  44cde0:	tst	w0, #0x7f8
  44cde4:	b.ne	44d00c <_obstack_memory_used@@Base+0xffb4>  // b.any
  44cde8:	mov	x2, #0x0                   	// #0
  44cdec:	ldr	x1, [x27, #8]
  44cdf0:	b	44ce14 <_obstack_memory_used@@Base+0xfdbc>
  44cdf4:	add	x0, x1, x2
  44cdf8:	lsr	x0, x0, #1
  44cdfc:	add	x3, x0, #0x2
  44ce00:	ldr	x20, [x27, x3, lsl #3]
  44ce04:	ldr	x3, [x20, #8]
  44ce08:	cmp	x19, x3
  44ce0c:	b.cs	44ce94 <_obstack_memory_used@@Base+0xfe3c>  // b.hs, b.nlast
  44ce10:	mov	x1, x0
  44ce14:	cmp	x1, x2
  44ce18:	b.hi	44cdf4 <_obstack_memory_used@@Base+0xfd9c>  // b.pmore
  44ce1c:	ldp	x27, x28, [sp, #80]
  44ce20:	mov	x20, #0x0                   	// #0
  44ce24:	mov	x0, x20
  44ce28:	ldp	x19, x20, [sp, #16]
  44ce2c:	ldp	x23, x24, [sp, #48]
  44ce30:	ldp	x29, x30, [sp], #160
  44ce34:	ret
  44ce38:	stp	x25, x26, [sp, #64]
  44ce3c:	ldr	w25, [x0, #32]
  44ce40:	stp	x21, x22, [sp, #32]
  44ce44:	tst	x25, #0xfffff800
  44ce48:	lsr	w25, w25, #11
  44ce4c:	b.ne	44d0b4 <_obstack_memory_used@@Base+0x1005c>  // b.any
  44ce50:	ldr	x20, [x0, #24]
  44ce54:	tbz	w1, #1, 44cf64 <_obstack_memory_used@@Base+0xff0c>
  44ce58:	ldr	x1, [x20]
  44ce5c:	cbnz	x1, 44ce70 <_obstack_memory_used@@Base+0xfe18>
  44ce60:	b	44cf90 <_obstack_memory_used@@Base+0xff38>
  44ce64:	ldr	x1, [x20, #8]!
  44ce68:	add	x25, x25, x0
  44ce6c:	cbz	x1, 44cf78 <_obstack_memory_used@@Base+0xff20>
  44ce70:	mov	x0, x24
  44ce74:	bl	44c6a0 <_obstack_memory_used@@Base+0xf648>
  44ce78:	cmn	x0, #0x1
  44ce7c:	b.ne	44ce64 <_obstack_memory_used@@Base+0xfe0c>  // b.any
  44ce80:	adrp	x0, 45c000 <_obstack_memory_used@@Base+0x1efa8>
  44ce84:	mov	x1, #0x7f8                 	// #2040
  44ce88:	add	x0, x0, #0x638
  44ce8c:	stp	x0, x1, [x24, #24]
  44ce90:	b	44cf90 <_obstack_memory_used@@Base+0xff38>
  44ce94:	ldr	x2, [x20, #16]
  44ce98:	add	x3, x3, x2
  44ce9c:	cmp	x19, x3
  44cea0:	b.cc	44d388 <_obstack_memory_used@@Base+0x10330>  // b.lo, b.ul, b.last
  44cea4:	add	x2, x0, #0x1
  44cea8:	b	44ce14 <_obstack_memory_used@@Base+0xfdbc>
  44ceac:	ldr	x28, [x27, #8]
  44ceb0:	cbz	x28, 44ce1c <_obstack_memory_used@@Base+0xfdc4>
  44ceb4:	add	x0, x24, #0x8
  44ceb8:	add	x23, sp, #0x88
  44cebc:	stp	x21, x22, [sp, #32]
  44cec0:	add	x22, sp, #0x90
  44cec4:	stp	x25, x26, [sp, #64]
  44cec8:	add	x26, x24, #0x10
  44cecc:	mov	x25, #0x0                   	// #0
  44ced0:	str	x0, [sp, #96]
  44ced4:	b	44cef4 <_obstack_memory_used@@Base+0xfe9c>
  44ced8:	ldr	x1, [sp, #144]
  44cedc:	add	x0, x0, x1
  44cee0:	cmp	x0, x19
  44cee4:	b.hi	44d380 <_obstack_memory_used@@Base+0x10328>  // b.pmore
  44cee8:	add	x25, x24, #0x1
  44ceec:	cmp	x25, x28
  44cef0:	b.cs	44cffc <_obstack_memory_used@@Base+0xffa4>  // b.hs, b.nlast
  44cef4:	add	x24, x25, x28
  44cef8:	lsr	x24, x24, #1
  44cefc:	add	x0, x24, #0x2
  44cf00:	ldr	x20, [x27, x0, lsl #3]
  44cf04:	add	x1, x20, #0x4
  44cf08:	ldrsw	x0, [x20, #4]
  44cf0c:	sub	x0, x1, x0
  44cf10:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44cf14:	ldr	x1, [sp, #96]
  44cf18:	and	w21, w0, #0xff
  44cf1c:	mov	x2, x26
  44cf20:	mov	w0, w21
  44cf24:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44cf28:	mov	x1, x0
  44cf2c:	mov	x3, x23
  44cf30:	add	x2, x20, #0x8
  44cf34:	mov	w0, w21
  44cf38:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44cf3c:	mov	x3, x22
  44cf40:	mov	x2, x0
  44cf44:	mov	x1, #0x0                   	// #0
  44cf48:	and	w0, w21, #0xf
  44cf4c:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44cf50:	ldr	x0, [sp, #136]
  44cf54:	cmp	x0, x19
  44cf58:	b.ls	44ced8 <_obstack_memory_used@@Base+0xfe80>  // b.plast
  44cf5c:	mov	x28, x24
  44cf60:	b	44ceec <_obstack_memory_used@@Base+0xfe94>
  44cf64:	mov	x1, x20
  44cf68:	bl	44c6a0 <_obstack_memory_used@@Base+0xf648>
  44cf6c:	mov	x25, x0
  44cf70:	cmn	x0, #0x1
  44cf74:	b.eq	44ce80 <_obstack_memory_used@@Base+0xfe28>  // b.none
  44cf78:	ldr	w0, [x24, #32]
  44cf7c:	tst	x25, #0xffffffffffe00000
  44cf80:	b.eq	44d3c4 <_obstack_memory_used@@Base+0x1036c>  // b.none
  44cf84:	and	w0, w0, #0x7ff
  44cf88:	str	w0, [x24, #32]
  44cf8c:	cbnz	x25, 44d0b4 <_obstack_memory_used@@Base+0x1005c>
  44cf90:	ldr	x0, [x24]
  44cf94:	cmp	x0, x19
  44cf98:	b.hi	44cff0 <_obstack_memory_used@@Base+0xff98>  // b.pmore
  44cf9c:	ldrb	w1, [x24, #32]
  44cfa0:	ldr	x21, [x24, #24]
  44cfa4:	tbnz	w1, #0, 44d408 <_obstack_memory_used@@Base+0x103b0>
  44cfa8:	tbz	w1, #1, 44d360 <_obstack_memory_used@@Base+0x10308>
  44cfac:	ldr	x1, [x21]
  44cfb0:	cbnz	x1, 44cfc0 <_obstack_memory_used@@Base+0xff68>
  44cfb4:	b	44cff0 <_obstack_memory_used@@Base+0xff98>
  44cfb8:	ldr	x1, [x21, #8]!
  44cfbc:	cbz	x1, 44cff0 <_obstack_memory_used@@Base+0xff98>
  44cfc0:	mov	x2, x19
  44cfc4:	mov	x0, x24
  44cfc8:	bl	44c460 <_obstack_memory_used@@Base+0xf408>
  44cfcc:	mov	x20, x0
  44cfd0:	cbz	x0, 44cfb8 <_obstack_memory_used@@Base+0xff60>
  44cfd4:	mov	x0, x20
  44cfd8:	ldp	x19, x20, [sp, #16]
  44cfdc:	ldp	x21, x22, [sp, #32]
  44cfe0:	ldp	x23, x24, [sp, #48]
  44cfe4:	ldp	x25, x26, [sp, #64]
  44cfe8:	ldp	x29, x30, [sp], #160
  44cfec:	ret
  44cff0:	ldp	x21, x22, [sp, #32]
  44cff4:	ldp	x25, x26, [sp, #64]
  44cff8:	b	44ce20 <_obstack_memory_used@@Base+0xfdc8>
  44cffc:	ldp	x21, x22, [sp, #32]
  44d000:	ldp	x25, x26, [sp, #64]
  44d004:	ldp	x27, x28, [sp, #80]
  44d008:	b	44ce20 <_obstack_memory_used@@Base+0xfdc8>
  44d00c:	stp	x25, x26, [sp, #64]
  44d010:	ubfx	x25, x0, #3, #8
  44d014:	add	x2, x24, #0x10
  44d018:	add	x1, x24, #0x8
  44d01c:	mov	x0, x25
  44d020:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44d024:	mov	x24, x0
  44d028:	ldr	x28, [x27, #8]
  44d02c:	cbz	x28, 44d000 <_obstack_memory_used@@Base+0xffa8>
  44d030:	and	w0, w25, #0xf
  44d034:	add	x23, sp, #0x88
  44d038:	mov	x26, #0x0                   	// #0
  44d03c:	stp	x21, x22, [sp, #32]
  44d040:	add	x22, sp, #0x90
  44d044:	str	w0, [sp, #96]
  44d048:	b	44d068 <_obstack_memory_used@@Base+0x10010>
  44d04c:	ldr	x1, [sp, #144]
  44d050:	add	x0, x0, x1
  44d054:	cmp	x0, x19
  44d058:	b.hi	44d380 <_obstack_memory_used@@Base+0x10328>  // b.pmore
  44d05c:	add	x26, x21, #0x1
  44d060:	cmp	x26, x28
  44d064:	b.cs	44cffc <_obstack_memory_used@@Base+0xffa4>  // b.hs, b.nlast
  44d068:	add	x21, x28, x26
  44d06c:	mov	x3, x23
  44d070:	mov	x1, x24
  44d074:	mov	w0, w25
  44d078:	lsr	x21, x21, #1
  44d07c:	add	x2, x21, #0x2
  44d080:	ldr	x20, [x27, x2, lsl #3]
  44d084:	add	x2, x20, #0x8
  44d088:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44d08c:	mov	x2, x0
  44d090:	ldrb	w0, [sp, #96]
  44d094:	mov	x3, x22
  44d098:	mov	x1, #0x0                   	// #0
  44d09c:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44d0a0:	ldr	x0, [sp, #136]
  44d0a4:	cmp	x0, x19
  44d0a8:	b.ls	44d04c <_obstack_memory_used@@Base+0xfff4>  // b.plast
  44d0ac:	mov	x28, x21
  44d0b0:	b	44d060 <_obstack_memory_used@@Base+0x10008>
  44d0b4:	add	x20, x25, #0x2
  44d0b8:	lsl	x20, x20, #3
  44d0bc:	mov	x0, x20
  44d0c0:	bl	4027c0 <malloc@plt>
  44d0c4:	str	x0, [sp, #144]
  44d0c8:	mov	x1, x0
  44d0cc:	cbz	x0, 44cf90 <_obstack_memory_used@@Base+0xff38>
  44d0d0:	str	xzr, [x1, #8]
  44d0d4:	mov	x0, x20
  44d0d8:	bl	4027c0 <malloc@plt>
  44d0dc:	str	x0, [sp, #152]
  44d0e0:	cbz	x0, 44d0e8 <_obstack_memory_used@@Base+0x10090>
  44d0e4:	str	xzr, [x0, #8]
  44d0e8:	ldrb	w0, [x24, #32]
  44d0ec:	ldr	x20, [x24, #24]
  44d0f0:	tbz	w0, #1, 44d39c <_obstack_memory_used@@Base+0x10344>
  44d0f4:	ldr	x2, [x20]
  44d0f8:	cbz	x2, 44d400 <_obstack_memory_used@@Base+0x103a8>
  44d0fc:	add	x22, sp, #0x90
  44d100:	mov	x1, x22
  44d104:	mov	x0, x24
  44d108:	bl	44c820 <_obstack_memory_used@@Base+0xf7c8>
  44d10c:	ldr	x2, [x20, #8]!
  44d110:	cbnz	x2, 44d100 <_obstack_memory_used@@Base+0x100a8>
  44d114:	ldr	x0, [sp, #144]
  44d118:	str	x0, [sp, #96]
  44d11c:	str	x0, [sp, #120]
  44d120:	cbz	x0, 44d130 <_obstack_memory_used@@Base+0x100d8>
  44d124:	ldr	x0, [x0, #8]
  44d128:	cmp	x0, x25
  44d12c:	b.ne	44d400 <_obstack_memory_used@@Base+0x103a8>  // b.any
  44d130:	ldrb	w0, [x24, #32]
  44d134:	tbnz	w0, #2, 44d390 <_obstack_memory_used@@Base+0x10338>
  44d138:	ldrh	w1, [x24, #32]
  44d13c:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0xefa8>
  44d140:	adrp	x20, 44b000 <_obstack_memory_used@@Base+0xdfa8>
  44d144:	add	x0, x0, #0x3d8
  44d148:	tst	w1, #0x7f8
  44d14c:	add	x20, x20, #0xeb0
  44d150:	csel	x20, x20, x0, eq  // eq = none
  44d154:	ldr	x22, [sp, #152]
  44d158:	cbz	x22, 44d3b0 <_obstack_memory_used@@Base+0x10358>
  44d15c:	ldr	x1, [sp, #96]
  44d160:	stp	x27, x28, [sp, #80]
  44d164:	ldr	x0, [x1, #8]
  44d168:	str	x0, [sp, #104]
  44d16c:	cbz	x0, 44d3f0 <_obstack_memory_used@@Base+0x10398>
  44d170:	adrp	x3, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44d174:	add	x3, x3, #0xb88
  44d178:	add	x0, x0, #0x1
  44d17c:	add	x28, x1, #0x10
  44d180:	add	x27, x3, #0x190
  44d184:	mov	x21, x28
  44d188:	mov	x23, x27
  44d18c:	lsl	x0, x0, #3
  44d190:	mov	x26, #0x10                  	// #16
  44d194:	str	x0, [sp, #112]
  44d198:	ldr	x0, [sp, #112]
  44d19c:	str	x27, [x22, x26]
  44d1a0:	cmp	x0, x26
  44d1a4:	b.eq	44d200 <_obstack_memory_used@@Base+0x101a8>  // b.none
  44d1a8:	cmp	x21, x23
  44d1ac:	mov	x27, x21
  44d1b0:	b.ne	44d1d0 <_obstack_memory_used@@Base+0x10178>  // b.any
  44d1b4:	b	44d1f0 <_obstack_memory_used@@Base+0x10198>
  44d1b8:	sub	x3, x27, x28
  44d1bc:	add	x0, x22, x3
  44d1c0:	ldr	x27, [x0, #16]
  44d1c4:	str	xzr, [x0, #16]
  44d1c8:	cmp	x27, x23
  44d1cc:	b.eq	44d1f0 <_obstack_memory_used@@Base+0x10198>  // b.none
  44d1d0:	ldr	x2, [x27]
  44d1d4:	mov	x0, x24
  44d1d8:	ldr	x1, [x21, #8]
  44d1dc:	blr	x20
  44d1e0:	tbnz	w0, #31, 44d1b8 <_obstack_memory_used@@Base+0x10160>
  44d1e4:	add	x21, x21, #0x8
  44d1e8:	add	x26, x26, #0x8
  44d1ec:	b	44d198 <_obstack_memory_used@@Base+0x10140>
  44d1f0:	mov	x27, x23
  44d1f4:	add	x21, x21, #0x8
  44d1f8:	add	x26, x26, #0x8
  44d1fc:	b	44d198 <_obstack_memory_used@@Base+0x10140>
  44d200:	add	x6, x22, #0x10
  44d204:	mov	x5, #0x0                   	// #0
  44d208:	mov	x3, #0x0                   	// #0
  44d20c:	mov	x0, #0x0                   	// #0
  44d210:	b	44d234 <_obstack_memory_used@@Base+0x101dc>
  44d214:	ldr	x4, [sp, #96]
  44d218:	add	x1, x3, #0x2
  44d21c:	add	x3, x3, #0x1
  44d220:	str	x2, [x4, x1, lsl #3]
  44d224:	ldr	x1, [sp, #104]
  44d228:	add	x0, x0, #0x1
  44d22c:	cmp	x1, x0
  44d230:	b.eq	44d250 <_obstack_memory_used@@Base+0x101f8>  // b.none
  44d234:	ldr	x1, [x6, x0, lsl #3]
  44d238:	ldr	x2, [x28, x0, lsl #3]
  44d23c:	cbnz	x1, 44d214 <_obstack_memory_used@@Base+0x101bc>
  44d240:	add	x1, x5, #0x2
  44d244:	add	x5, x5, #0x1
  44d248:	str	x2, [x22, x1, lsl #3]
  44d24c:	b	44d224 <_obstack_memory_used@@Base+0x101cc>
  44d250:	ldp	x0, x2, [sp, #144]
  44d254:	str	x0, [sp, #96]
  44d258:	ldr	x0, [sp, #120]
  44d25c:	str	x3, [x0, #8]
  44d260:	ldr	x0, [sp, #96]
  44d264:	str	x5, [x22, #8]
  44d268:	ldr	x1, [x2, #8]
  44d26c:	ldr	x0, [x0, #8]
  44d270:	add	x0, x0, x1
  44d274:	cmp	x0, x25
  44d278:	b.ne	44d404 <_obstack_memory_used@@Base+0x103ac>  // b.any
  44d27c:	mov	x1, x20
  44d280:	mov	x0, x24
  44d284:	bl	44bfe0 <_obstack_memory_used@@Base+0xef88>
  44d288:	ldr	x25, [sp, #152]
  44d28c:	ldr	x22, [x25, #8]
  44d290:	cbz	x22, 44d334 <_obstack_memory_used@@Base+0x102dc>
  44d294:	ldr	x0, [sp, #144]
  44d298:	str	x0, [sp, #96]
  44d29c:	add	x27, x0, #0x10
  44d2a0:	ldr	x28, [x0, #8]
  44d2a4:	nop
  44d2a8:	add	x0, x25, x22, lsl #3
  44d2ac:	sub	x23, x22, #0x1
  44d2b0:	ldr	x26, [x0, #8]
  44d2b4:	cbz	x28, 44d3d0 <_obstack_memory_used@@Base+0x10378>
  44d2b8:	add	x22, x22, x28
  44d2bc:	mov	x21, x28
  44d2c0:	sub	x22, x22, #0x1
  44d2c4:	b	44d2d8 <_obstack_memory_used@@Base+0x10280>
  44d2c8:	ldr	x0, [x27, x21, lsl #3]
  44d2cc:	str	x0, [x27, x22, lsl #3]
  44d2d0:	sub	x22, x22, #0x1
  44d2d4:	cbz	x21, 44d310 <_obstack_memory_used@@Base+0x102b8>
  44d2d8:	mov	x28, x21
  44d2dc:	sub	x21, x21, #0x1
  44d2e0:	mov	x2, x26
  44d2e4:	mov	x0, x24
  44d2e8:	ldr	x1, [x27, x21, lsl #3]
  44d2ec:	blr	x20
  44d2f0:	cmp	w0, #0x0
  44d2f4:	b.gt	44d2c8 <_obstack_memory_used@@Base+0x10270>
  44d2f8:	ldr	x0, [sp, #96]
  44d2fc:	add	x22, x22, #0x2
  44d300:	str	x26, [x0, x22, lsl #3]
  44d304:	cbz	x23, 44d31c <_obstack_memory_used@@Base+0x102c4>
  44d308:	mov	x22, x23
  44d30c:	b	44d2a8 <_obstack_memory_used@@Base+0x10250>
  44d310:	mov	x22, x23
  44d314:	mov	x28, #0x0                   	// #0
  44d318:	b	44d2f8 <_obstack_memory_used@@Base+0x102a0>
  44d31c:	ldr	x2, [sp, #96]
  44d320:	ldr	x1, [x25, #8]
  44d324:	ldr	x0, [x2, #8]
  44d328:	ldr	x25, [sp, #152]
  44d32c:	add	x0, x0, x1
  44d330:	str	x0, [x2, #8]
  44d334:	mov	x0, x25
  44d338:	bl	402a80 <free@plt>
  44d33c:	ldp	x27, x28, [sp, #80]
  44d340:	ldr	x1, [sp, #144]
  44d344:	ldrb	w0, [x24, #32]
  44d348:	ldr	x2, [x24, #24]
  44d34c:	str	x2, [x1]
  44d350:	orr	w0, w0, #0x1
  44d354:	str	x1, [x24, #24]
  44d358:	strb	w0, [x24, #32]
  44d35c:	b	44cf90 <_obstack_memory_used@@Base+0xff38>
  44d360:	mov	x1, x21
  44d364:	mov	x2, x19
  44d368:	mov	x0, x24
  44d36c:	bl	44c460 <_obstack_memory_used@@Base+0xf408>
  44d370:	mov	x20, x0
  44d374:	ldp	x21, x22, [sp, #32]
  44d378:	ldp	x25, x26, [sp, #64]
  44d37c:	b	44ce24 <_obstack_memory_used@@Base+0xfdcc>
  44d380:	ldp	x21, x22, [sp, #32]
  44d384:	ldp	x25, x26, [sp, #64]
  44d388:	ldp	x27, x28, [sp, #80]
  44d38c:	b	44ce24 <_obstack_memory_used@@Base+0xfdcc>
  44d390:	adrp	x20, 44c000 <_obstack_memory_used@@Base+0xefa8>
  44d394:	add	x20, x20, #0x5e0
  44d398:	b	44d154 <_obstack_memory_used@@Base+0x100fc>
  44d39c:	mov	x2, x20
  44d3a0:	add	x1, sp, #0x90
  44d3a4:	mov	x0, x24
  44d3a8:	bl	44c820 <_obstack_memory_used@@Base+0xf7c8>
  44d3ac:	b	44d114 <_obstack_memory_used@@Base+0x100bc>
  44d3b0:	ldr	x2, [sp, #96]
  44d3b4:	mov	x1, x20
  44d3b8:	mov	x0, x24
  44d3bc:	bl	44bfe0 <_obstack_memory_used@@Base+0xef88>
  44d3c0:	b	44d340 <_obstack_memory_used@@Base+0x102e8>
  44d3c4:	bfi	w0, w25, #11, #21
  44d3c8:	str	w0, [x24, #32]
  44d3cc:	b	44cf8c <_obstack_memory_used@@Base+0xff34>
  44d3d0:	ldr	x2, [sp, #96]
  44d3d4:	add	x1, x22, #0x1
  44d3d8:	str	x26, [x2, x1, lsl #3]
  44d3dc:	cbz	x23, 44d31c <_obstack_memory_used@@Base+0x102c4>
  44d3e0:	sub	x23, x22, #0x2
  44d3e4:	mov	x22, x23
  44d3e8:	ldr	x26, [x0]
  44d3ec:	b	44d2f8 <_obstack_memory_used@@Base+0x102a0>
  44d3f0:	mov	x2, x22
  44d3f4:	mov	x5, #0x0                   	// #0
  44d3f8:	mov	x3, #0x0                   	// #0
  44d3fc:	b	44d258 <_obstack_memory_used@@Base+0x10200>
  44d400:	stp	x27, x28, [sp, #80]
  44d404:	bl	402970 <abort@plt>
  44d408:	ldp	x21, x22, [sp, #32]
  44d40c:	ldp	x25, x26, [sp, #64]
  44d410:	b	44cdd0 <_obstack_memory_used@@Base+0xfd78>
  44d414:	nop
  44d418:	stp	x29, x30, [sp, #-48]!
  44d41c:	mov	x5, #0xffffffffffffffff    	// #-1
  44d420:	mov	x4, #0x7f8                 	// #2040
  44d424:	mov	x29, sp
  44d428:	stp	x19, x20, [sp, #16]
  44d42c:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  44d430:	mov	x19, x1
  44d434:	ldr	x1, [x20, #3880]
  44d438:	str	x21, [sp, #32]
  44d43c:	stp	x5, x2, [x19]
  44d440:	adrp	x21, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44d444:	stp	x3, x0, [x19, #16]
  44d448:	str	x4, [x19, #32]
  44d44c:	cbz	x1, 44d45c <_obstack_memory_used@@Base+0x10404>
  44d450:	add	x0, x21, #0xb88
  44d454:	add	x0, x0, #0x198
  44d458:	bl	402c50 <pthread_mutex_lock@plt>
  44d45c:	add	x1, x21, #0xb88
  44d460:	ldr	w0, [x1, #464]
  44d464:	ldr	x2, [x1, #456]
  44d468:	str	x2, [x19, #40]
  44d46c:	str	x19, [x1, #456]
  44d470:	cbz	w0, 44d4a4 <_obstack_memory_used@@Base+0x1044c>
  44d474:	ldr	x20, [x20, #3880]
  44d478:	cbz	x20, 44d494 <_obstack_memory_used@@Base+0x1043c>
  44d47c:	add	x0, x21, #0xb88
  44d480:	ldp	x19, x20, [sp, #16]
  44d484:	add	x0, x0, #0x198
  44d488:	ldr	x21, [sp, #32]
  44d48c:	ldp	x29, x30, [sp], #48
  44d490:	b	402c80 <pthread_mutex_unlock@plt>
  44d494:	ldp	x19, x20, [sp, #16]
  44d498:	ldr	x21, [sp, #32]
  44d49c:	ldp	x29, x30, [sp], #48
  44d4a0:	ret
  44d4a4:	add	x1, x1, #0x1d0
  44d4a8:	mov	w0, #0x1                   	// #1
  44d4ac:	str	w0, [x1]
  44d4b0:	b	44d474 <_obstack_memory_used@@Base+0x1041c>
  44d4b4:	nop
  44d4b8:	cbz	x0, 44d4c8 <_obstack_memory_used@@Base+0x10470>
  44d4bc:	ldr	w4, [x0]
  44d4c0:	cbz	w4, 44d4c8 <_obstack_memory_used@@Base+0x10470>
  44d4c4:	b	44d418 <_obstack_memory_used@@Base+0x103c0>
  44d4c8:	ret
  44d4cc:	nop
  44d4d0:	cbz	x0, 44d4e8 <_obstack_memory_used@@Base+0x10490>
  44d4d4:	ldr	w2, [x0]
  44d4d8:	cbz	w2, 44d4e8 <_obstack_memory_used@@Base+0x10490>
  44d4dc:	mov	x3, #0x0                   	// #0
  44d4e0:	mov	x2, #0x0                   	// #0
  44d4e4:	b	44d418 <_obstack_memory_used@@Base+0x103c0>
  44d4e8:	ret
  44d4ec:	nop
  44d4f0:	stp	x29, x30, [sp, #-32]!
  44d4f4:	mov	x29, sp
  44d4f8:	str	x19, [sp, #16]
  44d4fc:	mov	x19, x0
  44d500:	ldr	w0, [x0]
  44d504:	cbnz	w0, 44d514 <_obstack_memory_used@@Base+0x104bc>
  44d508:	ldr	x19, [sp, #16]
  44d50c:	ldp	x29, x30, [sp], #32
  44d510:	ret
  44d514:	mov	x0, #0x30                  	// #48
  44d518:	bl	4027c0 <malloc@plt>
  44d51c:	mov	x1, x0
  44d520:	mov	x0, x19
  44d524:	ldr	x19, [sp, #16]
  44d528:	mov	x3, #0x0                   	// #0
  44d52c:	ldp	x29, x30, [sp], #32
  44d530:	mov	x2, #0x0                   	// #0
  44d534:	b	44d418 <_obstack_memory_used@@Base+0x103c0>
  44d538:	stp	x29, x30, [sp, #-48]!
  44d53c:	mov	x5, #0xffffffffffffffff    	// #-1
  44d540:	mov	x4, #0x7fa                 	// #2042
  44d544:	mov	x29, sp
  44d548:	stp	x19, x20, [sp, #16]
  44d54c:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  44d550:	mov	x19, x1
  44d554:	ldr	x1, [x20, #3880]
  44d558:	str	x21, [sp, #32]
  44d55c:	stp	x5, x2, [x19]
  44d560:	adrp	x21, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44d564:	stp	x3, x0, [x19, #16]
  44d568:	str	x4, [x19, #32]
  44d56c:	cbz	x1, 44d57c <_obstack_memory_used@@Base+0x10524>
  44d570:	add	x0, x21, #0xb88
  44d574:	add	x0, x0, #0x198
  44d578:	bl	402c50 <pthread_mutex_lock@plt>
  44d57c:	add	x1, x21, #0xb88
  44d580:	ldr	w0, [x1, #464]
  44d584:	ldr	x2, [x1, #456]
  44d588:	str	x2, [x19, #40]
  44d58c:	str	x19, [x1, #456]
  44d590:	cbz	w0, 44d5c4 <_obstack_memory_used@@Base+0x1056c>
  44d594:	ldr	x20, [x20, #3880]
  44d598:	cbz	x20, 44d5b4 <_obstack_memory_used@@Base+0x1055c>
  44d59c:	add	x0, x21, #0xb88
  44d5a0:	ldp	x19, x20, [sp, #16]
  44d5a4:	add	x0, x0, #0x198
  44d5a8:	ldr	x21, [sp, #32]
  44d5ac:	ldp	x29, x30, [sp], #48
  44d5b0:	b	402c80 <pthread_mutex_unlock@plt>
  44d5b4:	ldp	x19, x20, [sp, #16]
  44d5b8:	ldr	x21, [sp, #32]
  44d5bc:	ldp	x29, x30, [sp], #48
  44d5c0:	ret
  44d5c4:	add	x1, x1, #0x1d0
  44d5c8:	mov	w0, #0x1                   	// #1
  44d5cc:	str	w0, [x1]
  44d5d0:	b	44d594 <_obstack_memory_used@@Base+0x1053c>
  44d5d4:	nop
  44d5d8:	mov	x3, #0x0                   	// #0
  44d5dc:	mov	x2, #0x0                   	// #0
  44d5e0:	b	44d538 <_obstack_memory_used@@Base+0x104e0>
  44d5e4:	nop
  44d5e8:	stp	x29, x30, [sp, #-32]!
  44d5ec:	mov	x29, sp
  44d5f0:	str	x19, [sp, #16]
  44d5f4:	mov	x19, x0
  44d5f8:	mov	x0, #0x30                  	// #48
  44d5fc:	bl	4027c0 <malloc@plt>
  44d600:	mov	x1, x0
  44d604:	mov	x0, x19
  44d608:	ldr	x19, [sp, #16]
  44d60c:	mov	x3, #0x0                   	// #0
  44d610:	ldp	x29, x30, [sp], #32
  44d614:	mov	x2, #0x0                   	// #0
  44d618:	b	44d538 <_obstack_memory_used@@Base+0x104e0>
  44d61c:	nop
  44d620:	stp	x29, x30, [sp, #-48]!
  44d624:	mov	x29, sp
  44d628:	stp	x19, x20, [sp, #16]
  44d62c:	cbz	x0, 44d6f8 <_obstack_memory_used@@Base+0x106a0>
  44d630:	mov	x20, x0
  44d634:	ldr	w0, [x0]
  44d638:	cbz	w0, 44d6f8 <_obstack_memory_used@@Base+0x106a0>
  44d63c:	stp	x21, x22, [sp, #32]
  44d640:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  44d644:	adrp	x22, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44d648:	ldr	x0, [x21, #3880]
  44d64c:	cbz	x0, 44d65c <_obstack_memory_used@@Base+0x10604>
  44d650:	add	x0, x22, #0xb88
  44d654:	add	x0, x0, #0x198
  44d658:	bl	402c50 <pthread_mutex_lock@plt>
  44d65c:	add	x2, x22, #0xb88
  44d660:	ldr	x1, [x2, #456]
  44d664:	cbz	x1, 44d6ac <_obstack_memory_used@@Base+0x10654>
  44d668:	add	x2, x2, #0x1c8
  44d66c:	b	44d678 <_obstack_memory_used@@Base+0x10620>
  44d670:	add	x2, x19, #0x28
  44d674:	cbz	x1, 44d6ac <_obstack_memory_used@@Base+0x10654>
  44d678:	ldr	x0, [x1, #24]
  44d67c:	mov	x19, x1
  44d680:	ldr	x1, [x1, #40]
  44d684:	cmp	x20, x0
  44d688:	b.ne	44d670 <_obstack_memory_used@@Base+0x10618>  // b.any
  44d68c:	str	x1, [x2]
  44d690:	ldr	x21, [x21, #3880]
  44d694:	cbnz	x21, 44d70c <_obstack_memory_used@@Base+0x106b4>
  44d698:	mov	x0, x19
  44d69c:	ldp	x19, x20, [sp, #16]
  44d6a0:	ldp	x21, x22, [sp, #32]
  44d6a4:	ldp	x29, x30, [sp], #48
  44d6a8:	ret
  44d6ac:	add	x2, x22, #0xb88
  44d6b0:	ldr	x19, [x2, #472]
  44d6b4:	cbz	x19, 44d72c <_obstack_memory_used@@Base+0x106d4>
  44d6b8:	add	x2, x2, #0x1d8
  44d6bc:	b	44d6d8 <_obstack_memory_used@@Base+0x10680>
  44d6c0:	ldr	x1, [x0]
  44d6c4:	cmp	x20, x1
  44d6c8:	b.eq	44d744 <_obstack_memory_used@@Base+0x106ec>  // b.none
  44d6cc:	add	x2, x19, #0x28
  44d6d0:	ldr	x19, [x19, #40]
  44d6d4:	cbz	x19, 44d72c <_obstack_memory_used@@Base+0x106d4>
  44d6d8:	ldrb	w1, [x19, #32]
  44d6dc:	ldr	x0, [x19, #24]
  44d6e0:	tbnz	w1, #0, 44d6c0 <_obstack_memory_used@@Base+0x10668>
  44d6e4:	cmp	x20, x0
  44d6e8:	b.ne	44d6cc <_obstack_memory_used@@Base+0x10674>  // b.any
  44d6ec:	ldr	x0, [x19, #40]
  44d6f0:	str	x0, [x2]
  44d6f4:	b	44d690 <_obstack_memory_used@@Base+0x10638>
  44d6f8:	mov	x19, #0x0                   	// #0
  44d6fc:	mov	x0, x19
  44d700:	ldp	x19, x20, [sp, #16]
  44d704:	ldp	x29, x30, [sp], #48
  44d708:	ret
  44d70c:	add	x0, x22, #0xb88
  44d710:	add	x0, x0, #0x198
  44d714:	bl	402c80 <pthread_mutex_unlock@plt>
  44d718:	mov	x0, x19
  44d71c:	ldp	x19, x20, [sp, #16]
  44d720:	ldp	x21, x22, [sp, #32]
  44d724:	ldp	x29, x30, [sp], #48
  44d728:	ret
  44d72c:	ldr	x21, [x21, #3880]
  44d730:	cbz	x21, 44d740 <_obstack_memory_used@@Base+0x106e8>
  44d734:	add	x0, x22, #0xb88
  44d738:	add	x0, x0, #0x198
  44d73c:	bl	402c80 <pthread_mutex_unlock@plt>
  44d740:	bl	402970 <abort@plt>
  44d744:	ldr	x1, [x19, #40]
  44d748:	str	x1, [x2]
  44d74c:	bl	402a80 <free@plt>
  44d750:	b	44d690 <_obstack_memory_used@@Base+0x10638>
  44d754:	nop
  44d758:	b	44d620 <_obstack_memory_used@@Base+0x105c8>
  44d75c:	nop
  44d760:	ldr	w1, [x0]
  44d764:	cbnz	w1, 44d76c <_obstack_memory_used@@Base+0x10714>
  44d768:	ret
  44d76c:	stp	x29, x30, [sp, #-16]!
  44d770:	mov	x29, sp
  44d774:	bl	44d620 <_obstack_memory_used@@Base+0x105c8>
  44d778:	ldp	x29, x30, [sp], #16
  44d77c:	b	402a80 <free@plt>
  44d780:	stp	x29, x30, [sp, #-128]!
  44d784:	mov	x29, sp
  44d788:	stp	x23, x24, [sp, #48]
  44d78c:	adrp	x23, 47e000 <__environ@@GLIBC_2.17+0xa50>
  44d790:	add	x2, x23, #0xb88
  44d794:	stp	x19, x20, [sp, #16]
  44d798:	mov	x20, x0
  44d79c:	add	x0, x2, #0x1d0
  44d7a0:	stp	x21, x22, [sp, #32]
  44d7a4:	mov	x22, x1
  44d7a8:	ldr	w0, [x0]
  44d7ac:	cbnz	w0, 44d810 <_obstack_memory_used@@Base+0x107b8>
  44d7b0:	mov	w2, #0x1                   	// #1
  44d7b4:	adrp	x0, 44c000 <_obstack_memory_used@@Base+0xefa8>
  44d7b8:	add	x1, sp, #0x50
  44d7bc:	add	x0, x0, #0x960
  44d7c0:	stp	x20, xzr, [sp, #80]
  44d7c4:	stp	xzr, xzr, [sp, #96]
  44d7c8:	str	xzr, [sp, #112]
  44d7cc:	str	w2, [sp, #120]
  44d7d0:	bl	402a50 <dl_iterate_phdr@plt>
  44d7d4:	tbnz	w0, #31, 44d924 <_obstack_memory_used@@Base+0x108cc>
  44d7d8:	ldr	x21, [sp, #112]
  44d7dc:	cbz	x21, 44d7f8 <_obstack_memory_used@@Base+0x107a0>
  44d7e0:	ldr	x0, [sp, #88]
  44d7e4:	str	x0, [x22]
  44d7e8:	ldr	x0, [sp, #96]
  44d7ec:	str	x0, [x22, #8]
  44d7f0:	ldr	x0, [sp, #104]
  44d7f4:	str	x0, [x22, #16]
  44d7f8:	mov	x0, x21
  44d7fc:	ldp	x19, x20, [sp, #16]
  44d800:	ldp	x21, x22, [sp, #32]
  44d804:	ldp	x23, x24, [sp, #48]
  44d808:	ldp	x29, x30, [sp], #128
  44d80c:	ret
  44d810:	stp	x25, x26, [sp, #64]
  44d814:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x3efa8>
  44d818:	ldr	x0, [x25, #3880]
  44d81c:	cbz	x0, 44d828 <_obstack_memory_used@@Base+0x107d0>
  44d820:	add	x0, x2, #0x198
  44d824:	bl	402c50 <pthread_mutex_lock@plt>
  44d828:	add	x0, x23, #0xb88
  44d82c:	ldr	x19, [x0, #472]
  44d830:	cbnz	x19, 44d840 <_obstack_memory_used@@Base+0x107e8>
  44d834:	b	44d8bc <_obstack_memory_used@@Base+0x10864>
  44d838:	ldr	x19, [x19, #40]
  44d83c:	cbz	x19, 44d8bc <_obstack_memory_used@@Base+0x10864>
  44d840:	ldr	x0, [x19]
  44d844:	cmp	x20, x0
  44d848:	b.cc	44d838 <_obstack_memory_used@@Base+0x107e0>  // b.lo, b.ul, b.last
  44d84c:	mov	x1, x20
  44d850:	mov	x0, x19
  44d854:	bl	44cdb0 <_obstack_memory_used@@Base+0xfd58>
  44d858:	mov	x21, x0
  44d85c:	cbz	x0, 44d8bc <_obstack_memory_used@@Base+0x10864>
  44d860:	ldr	x25, [x25, #3880]
  44d864:	cbnz	x25, 44d92c <_obstack_memory_used@@Base+0x108d4>
  44d868:	ldrb	w0, [x19, #32]
  44d86c:	ldr	x1, [x19, #8]
  44d870:	str	x1, [x22]
  44d874:	ldr	x1, [x19, #16]
  44d878:	str	x1, [x22, #8]
  44d87c:	tbnz	w0, #2, 44d93c <_obstack_memory_used@@Base+0x108e4>
  44d880:	ldrh	w20, [x19, #32]
  44d884:	ubfx	x20, x20, #3, #8
  44d888:	add	x2, x19, #0x10
  44d88c:	add	x1, x19, #0x8
  44d890:	mov	w0, w20
  44d894:	bl	44c378 <_obstack_memory_used@@Base+0xf320>
  44d898:	add	x3, sp, #0x50
  44d89c:	mov	x1, x0
  44d8a0:	add	x2, x21, #0x8
  44d8a4:	mov	w0, w20
  44d8a8:	bl	44c100 <_obstack_memory_used@@Base+0xf0a8>
  44d8ac:	ldr	x0, [sp, #80]
  44d8b0:	ldp	x25, x26, [sp, #64]
  44d8b4:	str	x0, [x22, #16]
  44d8b8:	b	44d7f8 <_obstack_memory_used@@Base+0x107a0>
  44d8bc:	add	x24, x23, #0xb88
  44d8c0:	add	x26, x24, #0x1d8
  44d8c4:	nop
  44d8c8:	ldr	x19, [x24, #456]
  44d8cc:	cbz	x19, 44d954 <_obstack_memory_used@@Base+0x108fc>
  44d8d0:	ldr	x2, [x19, #40]
  44d8d4:	mov	x1, x20
  44d8d8:	mov	x0, x19
  44d8dc:	str	x2, [x24, #456]
  44d8e0:	bl	44cdb0 <_obstack_memory_used@@Base+0xfd58>
  44d8e4:	mov	x21, x0
  44d8e8:	ldr	x2, [x24, #472]
  44d8ec:	cbz	x2, 44d96c <_obstack_memory_used@@Base+0x10914>
  44d8f0:	mov	x0, x26
  44d8f4:	ldr	x3, [x19]
  44d8f8:	b	44d908 <_obstack_memory_used@@Base+0x108b0>
  44d8fc:	add	x0, x2, #0x28
  44d900:	ldr	x2, [x2, #40]
  44d904:	cbz	x2, 44d914 <_obstack_memory_used@@Base+0x108bc>
  44d908:	ldr	x1, [x2]
  44d90c:	cmp	x1, x3
  44d910:	b.cs	44d8fc <_obstack_memory_used@@Base+0x108a4>  // b.hs, b.nlast
  44d914:	str	x2, [x19, #40]
  44d918:	str	x19, [x0]
  44d91c:	cbz	x21, 44d8c8 <_obstack_memory_used@@Base+0x10870>
  44d920:	b	44d860 <_obstack_memory_used@@Base+0x10808>
  44d924:	mov	x21, #0x0                   	// #0
  44d928:	b	44d7f8 <_obstack_memory_used@@Base+0x107a0>
  44d92c:	add	x0, x23, #0xb88
  44d930:	add	x0, x0, #0x198
  44d934:	bl	402c80 <pthread_mutex_unlock@plt>
  44d938:	b	44d868 <_obstack_memory_used@@Base+0x10810>
  44d93c:	add	x1, x21, #0x4
  44d940:	ldrsw	x0, [x21, #4]
  44d944:	sub	x0, x1, x0
  44d948:	bl	44c260 <_obstack_memory_used@@Base+0xf208>
  44d94c:	and	w20, w0, #0xff
  44d950:	b	44d888 <_obstack_memory_used@@Base+0x10830>
  44d954:	ldr	x25, [x25, #3880]
  44d958:	cbz	x25, 44d974 <_obstack_memory_used@@Base+0x1091c>
  44d95c:	add	x0, x24, #0x198
  44d960:	bl	402c80 <pthread_mutex_unlock@plt>
  44d964:	ldp	x25, x26, [sp, #64]
  44d968:	b	44d7b0 <_obstack_memory_used@@Base+0x10758>
  44d96c:	mov	x0, x26
  44d970:	b	44d914 <_obstack_memory_used@@Base+0x108bc>
  44d974:	ldp	x25, x26, [sp, #64]
  44d978:	b	44d7b0 <_obstack_memory_used@@Base+0x10758>
  44d97c:	nop
  44d980:	stp	x29, x30, [sp, #-64]!
  44d984:	mov	x29, sp
  44d988:	stp	x19, x20, [sp, #16]
  44d98c:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  44d990:	add	x20, x20, #0xd98
  44d994:	stp	x21, x22, [sp, #32]
  44d998:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x3dfa8>
  44d99c:	add	x21, x21, #0xd78
  44d9a0:	sub	x20, x20, x21
  44d9a4:	mov	w22, w0
  44d9a8:	stp	x23, x24, [sp, #48]
  44d9ac:	mov	x23, x1
  44d9b0:	mov	x24, x2
  44d9b4:	bl	402590 <memcpy@plt-0x40>
  44d9b8:	cmp	xzr, x20, asr #3
  44d9bc:	b.eq	44d9e8 <_obstack_memory_used@@Base+0x10990>  // b.none
  44d9c0:	asr	x20, x20, #3
  44d9c4:	mov	x19, #0x0                   	// #0
  44d9c8:	ldr	x3, [x21, x19, lsl #3]
  44d9cc:	mov	x2, x24
  44d9d0:	add	x19, x19, #0x1
  44d9d4:	mov	x1, x23
  44d9d8:	mov	w0, w22
  44d9dc:	blr	x3
  44d9e0:	cmp	x20, x19
  44d9e4:	b.ne	44d9c8 <_obstack_memory_used@@Base+0x10970>  // b.any
  44d9e8:	ldp	x19, x20, [sp, #16]
  44d9ec:	ldp	x21, x22, [sp, #32]
  44d9f0:	ldp	x23, x24, [sp, #48]
  44d9f4:	ldp	x29, x30, [sp], #64
  44d9f8:	ret
  44d9fc:	nop
  44da00:	ret
  44da04:	nop
  44da08:	mov	x2, x1
  44da0c:	mov	x1, x0
  44da10:	mov	w0, #0x0                   	// #0
  44da14:	b	402c40 <__xstat@plt>
  44da18:	mov	x2, x1
  44da1c:	mov	w1, w0
  44da20:	mov	w0, #0x0                   	// #0
  44da24:	b	402b90 <__fxstat@plt>
  44da28:	mov	x2, x1
  44da2c:	mov	x1, x0
  44da30:	mov	w0, #0x0                   	// #0
  44da34:	b	402b30 <__lxstat@plt>

Disassembly of section .fini:

000000000044da38 <.fini>:
  44da38:	stp	x29, x30, [sp, #-16]!
  44da3c:	mov	x29, sp
  44da40:	ldp	x29, x30, [sp], #16
  44da44:	ret
