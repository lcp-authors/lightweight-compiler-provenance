
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-hibernate-resume_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400858 <_init>:
  400858:	stp	x29, x30, [sp, #-16]!
  40085c:	mov	x29, sp
  400860:	bl	4009c0 <call_weak_fn>
  400864:	ldp	x29, x30, [sp], #16
  400868:	ret

Disassembly of section .plt:

0000000000400870 <__libc_start_main@plt-0x20>:
  400870:	stp	x16, x30, [sp, #-16]!
  400874:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400878:	ldr	x17, [x16, #3976]
  40087c:	add	x16, x16, #0xf88
  400880:	br	x17
  400884:	nop
  400888:	nop
  40088c:	nop

0000000000400890 <__libc_start_main@plt>:
  400890:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400894:	ldr	x17, [x16, #3984]
  400898:	add	x16, x16, #0xf90
  40089c:	br	x17

00000000004008a0 <abort@plt>:
  4008a0:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  4008a4:	ldr	x17, [x16, #3992]
  4008a8:	add	x16, x16, #0xf98
  4008ac:	br	x17

00000000004008b0 <__gmon_start__@plt>:
  4008b0:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  4008b4:	ldr	x17, [x16, #4000]
  4008b8:	add	x16, x16, #0xfa0
  4008bc:	br	x17

00000000004008c0 <log_setup_service@plt>:
  4008c0:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  4008c4:	ldr	x17, [x16, #4008]
  4008c8:	add	x16, x16, #0xfa8
  4008cc:	br	x17

00000000004008d0 <umask@plt>:
  4008d0:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  4008d4:	ldr	x17, [x16, #4016]
  4008d8:	add	x16, x16, #0xfb0
  4008dc:	br	x17

00000000004008e0 <in_initrd@plt>:
  4008e0:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  4008e4:	ldr	x17, [x16, #4024]
  4008e8:	add	x16, x16, #0xfb8
  4008ec:	br	x17

00000000004008f0 <__xstat64@plt>:
  4008f0:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  4008f4:	ldr	x17, [x16, #4032]
  4008f8:	add	x16, x16, #0xfc0
  4008fc:	br	x17

0000000000400900 <asprintf@plt>:
  400900:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400904:	ldr	x17, [x16, #4040]
  400908:	add	x16, x16, #0xfc8
  40090c:	br	x17

0000000000400910 <write_string_file_ts@plt>:
  400910:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400914:	ldr	x17, [x16, #4048]
  400918:	add	x16, x16, #0xfd0
  40091c:	br	x17

0000000000400920 <log_get_max_level_realm@plt>:
  400920:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400924:	ldr	x17, [x16, #4056]
  400928:	add	x16, x16, #0xfd8
  40092c:	br	x17

0000000000400930 <log_internal_realm@plt>:
  400930:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400934:	ldr	x17, [x16, #4064]
  400938:	add	x16, x16, #0xfe0
  40093c:	br	x17

0000000000400940 <__errno_location@plt>:
  400940:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400944:	ldr	x17, [x16, #4072]
  400948:	add	x16, x16, #0xfe8
  40094c:	br	x17

0000000000400950 <log_oom_internal@plt>:
  400950:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400954:	ldr	x17, [x16, #4080]
  400958:	add	x16, x16, #0xff0
  40095c:	br	x17

0000000000400960 <free@plt>:
  400960:	adrp	x16, 41f000 <__FRAME_END__+0x1e0e8>
  400964:	ldr	x17, [x16, #4088]
  400968:	add	x16, x16, #0xff8
  40096c:	br	x17

Disassembly of section .text:

0000000000400970 <_start>:
  400970:	mov	x29, #0x0                   	// #0
  400974:	mov	x30, #0x0                   	// #0
  400978:	mov	x5, x0
  40097c:	ldr	x1, [sp]
  400980:	add	x2, sp, #0x8
  400984:	mov	x6, sp
  400988:	movz	x0, #0x0, lsl #48
  40098c:	movk	x0, #0x0, lsl #32
  400990:	movk	x0, #0x40, lsl #16
  400994:	movk	x0, #0xa7c
  400998:	movz	x3, #0x0, lsl #48
  40099c:	movk	x3, #0x0, lsl #32
  4009a0:	movk	x3, #0x40, lsl #16
  4009a4:	movk	x3, #0xc98
  4009a8:	movz	x4, #0x0, lsl #48
  4009ac:	movk	x4, #0x0, lsl #32
  4009b0:	movk	x4, #0x40, lsl #16
  4009b4:	movk	x4, #0xd18
  4009b8:	bl	400890 <__libc_start_main@plt>
  4009bc:	bl	4008a0 <abort@plt>

00000000004009c0 <call_weak_fn>:
  4009c0:	adrp	x0, 41f000 <__FRAME_END__+0x1e0e8>
  4009c4:	ldr	x0, [x0, #3952]
  4009c8:	cbz	x0, 4009d0 <call_weak_fn+0x10>
  4009cc:	b	4008b0 <__gmon_start__@plt>
  4009d0:	ret
  4009d4:	udf	#0

00000000004009d8 <deregister_tm_clones>:
  4009d8:	adrp	x0, 420000 <completed.8445>
  4009dc:	add	x0, x0, #0x0
  4009e0:	adrp	x1, 420000 <completed.8445>
  4009e4:	add	x1, x1, #0x0
  4009e8:	cmp	x1, x0
  4009ec:	b.eq	400a04 <deregister_tm_clones+0x2c>  // b.none
  4009f0:	adrp	x1, 400000 <_init-0x858>
  4009f4:	ldr	x1, [x1, #3376]
  4009f8:	cbz	x1, 400a04 <deregister_tm_clones+0x2c>
  4009fc:	mov	x16, x1
  400a00:	br	x16
  400a04:	ret

0000000000400a08 <register_tm_clones>:
  400a08:	adrp	x0, 420000 <completed.8445>
  400a0c:	add	x0, x0, #0x0
  400a10:	adrp	x1, 420000 <completed.8445>
  400a14:	add	x1, x1, #0x0
  400a18:	sub	x1, x1, x0
  400a1c:	lsr	x2, x1, #63
  400a20:	add	x1, x2, x1, asr #3
  400a24:	cmp	xzr, x1, asr #1
  400a28:	asr	x1, x1, #1
  400a2c:	b.eq	400a44 <register_tm_clones+0x3c>  // b.none
  400a30:	adrp	x2, 400000 <_init-0x858>
  400a34:	ldr	x2, [x2, #3384]
  400a38:	cbz	x2, 400a44 <register_tm_clones+0x3c>
  400a3c:	mov	x16, x2
  400a40:	br	x16
  400a44:	ret

0000000000400a48 <__do_global_dtors_aux>:
  400a48:	stp	x29, x30, [sp, #-32]!
  400a4c:	mov	x29, sp
  400a50:	str	x19, [sp, #16]
  400a54:	adrp	x19, 420000 <completed.8445>
  400a58:	ldrb	w0, [x19]
  400a5c:	cbnz	w0, 400a6c <__do_global_dtors_aux+0x24>
  400a60:	bl	4009d8 <deregister_tm_clones>
  400a64:	mov	w0, #0x1                   	// #1
  400a68:	strb	w0, [x19]
  400a6c:	ldr	x19, [sp, #16]
  400a70:	ldp	x29, x30, [sp], #32
  400a74:	ret

0000000000400a78 <frame_dummy>:
  400a78:	b	400a08 <register_tm_clones>

0000000000400a7c <main>:
  400a7c:	sub	sp, sp, #0xb0
  400a80:	cmp	w0, #0x2
  400a84:	stp	x29, x30, [sp, #144]
  400a88:	stp	x20, x19, [sp, #160]
  400a8c:	add	x29, sp, #0x90
  400a90:	str	xzr, [sp, #8]
  400a94:	b.ne	400b68 <main+0xec>  // b.any
  400a98:	mov	x19, x1
  400a9c:	bl	4008c0 <log_setup_service@plt>
  400aa0:	mov	w0, #0x12                  	// #18
  400aa4:	bl	4008d0 <umask@plt>
  400aa8:	bl	4008e0 <in_initrd@plt>
  400aac:	tbz	w0, #0, 400b60 <main+0xe4>
  400ab0:	ldr	x19, [x19, #8]
  400ab4:	add	x2, sp, #0x10
  400ab8:	mov	w0, wzr
  400abc:	mov	x1, x19
  400ac0:	bl	4008f0 <__xstat64@plt>
  400ac4:	tbnz	w0, #31, 400ba4 <main+0x128>
  400ac8:	ldr	w8, [sp, #32]
  400acc:	and	w8, w8, #0xf000
  400ad0:	cmp	w8, #0x6, lsl #12
  400ad4:	b.ne	400be0 <main+0x164>  // b.any
  400ad8:	ldr	x8, [sp, #48]
  400adc:	adrp	x1, 400000 <_init-0x858>
  400ae0:	add	x1, x1, #0xdd5
  400ae4:	add	x0, sp, #0x8
  400ae8:	lsr	x2, x8, #32
  400aec:	lsr	x3, x8, #12
  400af0:	bfxil	w2, w8, #8, #12
  400af4:	bfxil	w3, w8, #0, #8
  400af8:	bl	400900 <asprintf@plt>
  400afc:	tbnz	w0, #31, 400c20 <main+0x1a4>
  400b00:	ldr	x1, [sp, #8]
  400b04:	adrp	x0, 400000 <_init-0x858>
  400b08:	add	x0, x0, #0xddb
  400b0c:	mov	w2, #0x20                  	// #32
  400b10:	mov	x3, xzr
  400b14:	bl	400910 <write_string_file_ts@plt>
  400b18:	mov	w20, w0
  400b1c:	mov	w0, wzr
  400b20:	bl	400920 <log_get_max_level_realm@plt>
  400b24:	tbnz	w20, #31, 400c40 <main+0x1c4>
  400b28:	cmp	w0, #0x6
  400b2c:	b.lt	400b60 <main+0xe4>  // b.tstop
  400b30:	ldr	x7, [sp, #8]
  400b34:	adrp	x2, 400000 <_init-0x858>
  400b38:	adrp	x4, 400000 <_init-0x858>
  400b3c:	adrp	x5, 400000 <_init-0x858>
  400b40:	add	x2, x2, #0xd43
  400b44:	add	x4, x4, #0xd6b
  400b48:	add	x5, x5, #0xe1b
  400b4c:	mov	w0, #0x6                   	// #6
  400b50:	mov	w3, #0x3d                  	// #61
  400b54:	mov	w1, wzr
  400b58:	mov	x6, x19
  400b5c:	bl	400930 <log_internal_realm@plt>
  400b60:	mov	w19, wzr
  400b64:	b	400c78 <main+0x1fc>
  400b68:	mov	w0, wzr
  400b6c:	bl	400920 <log_get_max_level_realm@plt>
  400b70:	cmp	w0, #0x3
  400b74:	b.lt	400c74 <main+0x1f8>  // b.tstop
  400b78:	adrp	x2, 400000 <_init-0x858>
  400b7c:	adrp	x4, 400000 <_init-0x858>
  400b80:	adrp	x5, 400000 <_init-0x858>
  400b84:	add	x2, x2, #0xd43
  400b88:	add	x4, x4, #0xd6b
  400b8c:	add	x5, x5, #0xd70
  400b90:	mov	w0, #0x3                   	// #3
  400b94:	mov	w3, #0x13                  	// #19
  400b98:	mov	w1, wzr
  400b9c:	bl	400930 <log_internal_realm@plt>
  400ba0:	b	400c74 <main+0x1f8>
  400ba4:	mov	w0, wzr
  400ba8:	bl	400920 <log_get_max_level_realm@plt>
  400bac:	cmp	w0, #0x3
  400bb0:	b.lt	400c74 <main+0x1f8>  // b.tstop
  400bb4:	bl	400940 <__errno_location@plt>
  400bb8:	ldr	w1, [x0]
  400bbc:	adrp	x2, 400000 <_init-0x858>
  400bc0:	adrp	x4, 400000 <_init-0x858>
  400bc4:	adrp	x5, 400000 <_init-0x858>
  400bc8:	add	x2, x2, #0xd43
  400bcc:	add	x4, x4, #0xd6b
  400bd0:	add	x5, x5, #0xd93
  400bd4:	mov	w0, #0x3                   	// #3
  400bd8:	mov	w3, #0x22                  	// #34
  400bdc:	b	400c14 <main+0x198>
  400be0:	mov	w0, wzr
  400be4:	bl	400920 <log_get_max_level_realm@plt>
  400be8:	cmp	w0, #0x3
  400bec:	b.lt	400c74 <main+0x1f8>  // b.tstop
  400bf0:	adrp	x2, 400000 <_init-0x858>
  400bf4:	adrp	x4, 400000 <_init-0x858>
  400bf8:	adrp	x5, 400000 <_init-0x858>
  400bfc:	add	x2, x2, #0xd43
  400c00:	add	x4, x4, #0xd6b
  400c04:	add	x5, x5, #0xdab
  400c08:	mov	w0, #0x3                   	// #3
  400c0c:	mov	w3, #0x27                  	// #39
  400c10:	mov	w1, wzr
  400c14:	mov	x6, x19
  400c18:	bl	400930 <log_internal_realm@plt>
  400c1c:	b	400c74 <main+0x1f8>
  400c20:	adrp	x1, 400000 <_init-0x858>
  400c24:	adrp	x3, 400000 <_init-0x858>
  400c28:	add	x1, x1, #0xd43
  400c2c:	add	x3, x3, #0xd6b
  400c30:	mov	w2, #0x2c                  	// #44
  400c34:	mov	w0, wzr
  400c38:	bl	400950 <log_oom_internal@plt>
  400c3c:	b	400c74 <main+0x1f8>
  400c40:	cmp	w0, #0x3
  400c44:	b.lt	400c74 <main+0x1f8>  // b.tstop
  400c48:	ldr	x6, [sp, #8]
  400c4c:	adrp	x2, 400000 <_init-0x858>
  400c50:	adrp	x4, 400000 <_init-0x858>
  400c54:	adrp	x5, 400000 <_init-0x858>
  400c58:	add	x2, x2, #0xd43
  400c5c:	add	x4, x4, #0xd6b
  400c60:	add	x5, x5, #0xded
  400c64:	mov	w0, #0x3                   	// #3
  400c68:	mov	w3, #0x32                  	// #50
  400c6c:	mov	w1, w20
  400c70:	b	400c18 <main+0x19c>
  400c74:	mov	w19, #0x1                   	// #1
  400c78:	ldr	x0, [sp, #8]
  400c7c:	bl	400960 <free@plt>
  400c80:	mov	w0, w19
  400c84:	ldp	x20, x19, [sp, #160]
  400c88:	ldp	x29, x30, [sp, #144]
  400c8c:	add	sp, sp, #0xb0
  400c90:	ret
  400c94:	udf	#0

0000000000400c98 <__libc_csu_init>:
  400c98:	stp	x29, x30, [sp, #-64]!
  400c9c:	mov	x29, sp
  400ca0:	stp	x19, x20, [sp, #16]
  400ca4:	adrp	x20, 41f000 <__FRAME_END__+0x1e0e8>
  400ca8:	add	x20, x20, #0xd48
  400cac:	stp	x21, x22, [sp, #32]
  400cb0:	adrp	x21, 41f000 <__FRAME_END__+0x1e0e8>
  400cb4:	add	x21, x21, #0xd40
  400cb8:	sub	x20, x20, x21
  400cbc:	mov	w22, w0
  400cc0:	stp	x23, x24, [sp, #48]
  400cc4:	mov	x23, x1
  400cc8:	mov	x24, x2
  400ccc:	bl	400858 <_init>
  400cd0:	cmp	xzr, x20, asr #3
  400cd4:	b.eq	400d00 <__libc_csu_init+0x68>  // b.none
  400cd8:	asr	x20, x20, #3
  400cdc:	mov	x19, #0x0                   	// #0
  400ce0:	ldr	x3, [x21, x19, lsl #3]
  400ce4:	mov	x2, x24
  400ce8:	add	x19, x19, #0x1
  400cec:	mov	x1, x23
  400cf0:	mov	w0, w22
  400cf4:	blr	x3
  400cf8:	cmp	x20, x19
  400cfc:	b.ne	400ce0 <__libc_csu_init+0x48>  // b.any
  400d00:	ldp	x19, x20, [sp, #16]
  400d04:	ldp	x21, x22, [sp, #32]
  400d08:	ldp	x23, x24, [sp, #48]
  400d0c:	ldp	x29, x30, [sp], #64
  400d10:	ret
  400d14:	nop

0000000000400d18 <__libc_csu_fini>:
  400d18:	ret

Disassembly of section .fini:

0000000000400d1c <_fini>:
  400d1c:	stp	x29, x30, [sp, #-16]!
  400d20:	mov	x29, sp
  400d24:	ldp	x29, x30, [sp], #16
  400d28:	ret
