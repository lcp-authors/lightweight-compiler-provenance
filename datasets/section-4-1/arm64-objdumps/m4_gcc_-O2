
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//m4_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402300 <.init>:
  402300:	stp	x29, x30, [sp, #-16]!
  402304:	mov	x29, sp
  402308:	bl	403198 <ferror@plt+0x7f8>
  40230c:	ldp	x29, x30, [sp], #16
  402310:	ret

Disassembly of section .plt:

0000000000402320 <mbrtowc@plt-0x20>:
  402320:	stp	x16, x30, [sp, #-16]!
  402324:	adrp	x16, 430000 <_obstack_memory_used@@Base+0x18878>
  402328:	ldr	x17, [x16, #4088]
  40232c:	add	x16, x16, #0xff8
  402330:	br	x17
  402334:	nop
  402338:	nop
  40233c:	nop

0000000000402340 <mbrtowc@plt>:
  402340:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16]
  402348:	add	x16, x16, #0x0
  40234c:	br	x17

0000000000402350 <memcpy@plt>:
  402350:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #8]
  402358:	add	x16, x16, #0x8
  40235c:	br	x17

0000000000402360 <sigaltstack@plt>:
  402360:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #16]
  402368:	add	x16, x16, #0x10
  40236c:	br	x17

0000000000402370 <_exit@plt>:
  402370:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #24]
  402378:	add	x16, x16, #0x18
  40237c:	br	x17

0000000000402380 <fwrite_unlocked@plt>:
  402380:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #32]
  402388:	add	x16, x16, #0x20
  40238c:	br	x17

0000000000402390 <strlen@plt>:
  402390:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #40]
  402398:	add	x16, x16, #0x28
  40239c:	br	x17

00000000004023a0 <fputs@plt>:
  4023a0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #48]
  4023a8:	add	x16, x16, #0x30
  4023ac:	br	x17

00000000004023b0 <__sprintf_chk@plt>:
  4023b0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #56]
  4023b8:	add	x16, x16, #0x38
  4023bc:	br	x17

00000000004023c0 <exit@plt>:
  4023c0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #64]
  4023c8:	add	x16, x16, #0x40
  4023cc:	br	x17

00000000004023d0 <raise@plt>:
  4023d0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #72]
  4023d8:	add	x16, x16, #0x48
  4023dc:	br	x17

00000000004023e0 <error@plt>:
  4023e0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #80]
  4023e8:	add	x16, x16, #0x50
  4023ec:	br	x17

00000000004023f0 <sigprocmask@plt>:
  4023f0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #88]
  4023f8:	add	x16, x16, #0x58
  4023fc:	br	x17

0000000000402400 <strtod@plt>:
  402400:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #96]
  402408:	add	x16, x16, #0x60
  40240c:	br	x17

0000000000402410 <secure_getenv@plt>:
  402410:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #104]
  402418:	add	x16, x16, #0x68
  40241c:	br	x17

0000000000402420 <setbuf@plt>:
  402420:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #112]
  402428:	add	x16, x16, #0x70
  40242c:	br	x17

0000000000402430 <putc@plt>:
  402430:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #120]
  402438:	add	x16, x16, #0x78
  40243c:	br	x17

0000000000402440 <pipe@plt>:
  402440:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #128]
  402448:	add	x16, x16, #0x80
  40244c:	br	x17

0000000000402450 <__cxa_atexit@plt>:
  402450:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #136]
  402458:	add	x16, x16, #0x88
  40245c:	br	x17

0000000000402460 <fputc@plt>:
  402460:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #144]
  402468:	add	x16, x16, #0x90
  40246c:	br	x17

0000000000402470 <qsort@plt>:
  402470:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #152]
  402478:	add	x16, x16, #0x98
  40247c:	br	x17

0000000000402480 <posix_spawn_file_actions_addopen@plt>:
  402480:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #160]
  402488:	add	x16, x16, #0xa0
  40248c:	br	x17

0000000000402490 <kill@plt>:
  402490:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #168]
  402498:	add	x16, x16, #0xa8
  40249c:	br	x17

00000000004024a0 <lseek@plt>:
  4024a0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #176]
  4024a8:	add	x16, x16, #0xb0
  4024ac:	br	x17

00000000004024b0 <__fpending@plt>:
  4024b0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #184]
  4024b8:	add	x16, x16, #0xb8
  4024bc:	br	x17

00000000004024c0 <fileno@plt>:
  4024c0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #192]
  4024c8:	add	x16, x16, #0xc0
  4024cc:	br	x17

00000000004024d0 <posix_spawn_file_actions_adddup2@plt>:
  4024d0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #200]
  4024d8:	add	x16, x16, #0xc8
  4024dc:	br	x17

00000000004024e0 <signal@plt>:
  4024e0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #208]
  4024e8:	add	x16, x16, #0xd0
  4024ec:	br	x17

00000000004024f0 <fclose@plt>:
  4024f0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #216]
  4024f8:	add	x16, x16, #0xd8
  4024fc:	br	x17

0000000000402500 <getpid@plt>:
  402500:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #224]
  402508:	add	x16, x16, #0xe0
  40250c:	br	x17

0000000000402510 <nl_langinfo@plt>:
  402510:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #232]
  402518:	add	x16, x16, #0xe8
  40251c:	br	x17

0000000000402520 <fopen@plt>:
  402520:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #240]
  402528:	add	x16, x16, #0xf0
  40252c:	br	x17

0000000000402530 <malloc@plt>:
  402530:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #248]
  402538:	add	x16, x16, #0xf8
  40253c:	br	x17

0000000000402540 <open@plt>:
  402540:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #256]
  402548:	add	x16, x16, #0x100
  40254c:	br	x17

0000000000402550 <__vasprintf_chk@plt>:
  402550:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #264]
  402558:	add	x16, x16, #0x108
  40255c:	br	x17

0000000000402560 <__isoc99_fscanf@plt>:
  402560:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #272]
  402568:	add	x16, x16, #0x110
  40256c:	br	x17

0000000000402570 <sigemptyset@plt>:
  402570:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #280]
  402578:	add	x16, x16, #0x118
  40257c:	br	x17

0000000000402580 <posix_spawnattr_destroy@plt>:
  402580:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #288]
  402588:	add	x16, x16, #0x120
  40258c:	br	x17

0000000000402590 <strncmp@plt>:
  402590:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #296]
  402598:	add	x16, x16, #0x128
  40259c:	br	x17

00000000004025a0 <__libc_start_main@plt>:
  4025a0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #304]
  4025a8:	add	x16, x16, #0x130
  4025ac:	br	x17

00000000004025b0 <__printf_chk@plt>:
  4025b0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #312]
  4025b8:	add	x16, x16, #0x138
  4025bc:	br	x17

00000000004025c0 <memset@plt>:
  4025c0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #320]
  4025c8:	add	x16, x16, #0x140
  4025cc:	br	x17

00000000004025d0 <fdopen@plt>:
  4025d0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #328]
  4025d8:	add	x16, x16, #0x148
  4025dc:	br	x17

00000000004025e0 <re_set_registers@plt>:
  4025e0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #336]
  4025e8:	add	x16, x16, #0x150
  4025ec:	br	x17

00000000004025f0 <__vfprintf_chk@plt>:
  4025f0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #344]
  4025f8:	add	x16, x16, #0x158
  4025fc:	br	x17

0000000000402600 <calloc@plt>:
  402600:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #352]
  402608:	add	x16, x16, #0x160
  40260c:	br	x17

0000000000402610 <posix_spawn_file_actions_destroy@plt>:
  402610:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #360]
  402618:	add	x16, x16, #0x168
  40261c:	br	x17

0000000000402620 <realloc@plt>:
  402620:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #368]
  402628:	add	x16, x16, #0x170
  40262c:	br	x17

0000000000402630 <re_search@plt>:
  402630:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #376]
  402638:	add	x16, x16, #0x178
  40263c:	br	x17

0000000000402640 <getc@plt>:
  402640:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #384]
  402648:	add	x16, x16, #0x180
  40264c:	br	x17

0000000000402650 <posix_spawn_file_actions_addclose@plt>:
  402650:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #392]
  402658:	add	x16, x16, #0x188
  40265c:	br	x17

0000000000402660 <close@plt>:
  402660:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #400]
  402668:	add	x16, x16, #0x190
  40266c:	br	x17

0000000000402670 <sigaction@plt>:
  402670:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #408]
  402678:	add	x16, x16, #0x198
  40267c:	br	x17

0000000000402680 <strrchr@plt>:
  402680:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #416]
  402688:	add	x16, x16, #0x1a0
  40268c:	br	x17

0000000000402690 <__gmon_start__@plt>:
  402690:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #424]
  402698:	add	x16, x16, #0x1a8
  40269c:	br	x17

00000000004026a0 <write@plt>:
  4026a0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #432]
  4026a8:	add	x16, x16, #0x1b0
  4026ac:	br	x17

00000000004026b0 <mkdtemp@plt>:
  4026b0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #440]
  4026b8:	add	x16, x16, #0x1b8
  4026bc:	br	x17

00000000004026c0 <posix_spawnattr_setflags@plt>:
  4026c0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #448]
  4026c8:	add	x16, x16, #0x1c0
  4026cc:	br	x17

00000000004026d0 <abort@plt>:
  4026d0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #456]
  4026d8:	add	x16, x16, #0x1c8
  4026dc:	br	x17

00000000004026e0 <re_compile_pattern@plt>:
  4026e0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #464]
  4026e8:	add	x16, x16, #0x1d0
  4026ec:	br	x17

00000000004026f0 <mbsinit@plt>:
  4026f0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #472]
  4026f8:	add	x16, x16, #0x1d8
  4026fc:	br	x17

0000000000402700 <posix_spawnattr_setsigmask@plt>:
  402700:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #480]
  402708:	add	x16, x16, #0x1e0
  40270c:	br	x17

0000000000402710 <puts@plt>:
  402710:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #488]
  402718:	add	x16, x16, #0x1e8
  40271c:	br	x17

0000000000402720 <posix_spawn_file_actions_init@plt>:
  402720:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #496]
  402728:	add	x16, x16, #0x1f0
  40272c:	br	x17

0000000000402730 <memcmp@plt>:
  402730:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #504]
  402738:	add	x16, x16, #0x1f8
  40273c:	br	x17

0000000000402740 <getopt_long@plt>:
  402740:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #512]
  402748:	add	x16, x16, #0x200
  40274c:	br	x17

0000000000402750 <__fprintf_chk@plt>:
  402750:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #520]
  402758:	add	x16, x16, #0x208
  40275c:	br	x17

0000000000402760 <strcmp@plt>:
  402760:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #528]
  402768:	add	x16, x16, #0x210
  40276c:	br	x17

0000000000402770 <__ctype_b_loc@plt>:
  402770:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #536]
  402778:	add	x16, x16, #0x218
  40277c:	br	x17

0000000000402780 <rmdir@plt>:
  402780:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #544]
  402788:	add	x16, x16, #0x220
  40278c:	br	x17

0000000000402790 <strtol@plt>:
  402790:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #552]
  402798:	add	x16, x16, #0x228
  40279c:	br	x17

00000000004027a0 <fseeko@plt>:
  4027a0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #560]
  4027a8:	add	x16, x16, #0x230
  4027ac:	br	x17

00000000004027b0 <fread@plt>:
  4027b0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #568]
  4027b8:	add	x16, x16, #0x238
  4027bc:	br	x17

00000000004027c0 <free@plt>:
  4027c0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #576]
  4027c8:	add	x16, x16, #0x240
  4027cc:	br	x17

00000000004027d0 <ungetc@plt>:
  4027d0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #584]
  4027d8:	add	x16, x16, #0x248
  4027dc:	br	x17

00000000004027e0 <__ctype_get_mb_cur_max@plt>:
  4027e0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #592]
  4027e8:	add	x16, x16, #0x250
  4027ec:	br	x17

00000000004027f0 <mempcpy@plt>:
  4027f0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #600]
  4027f8:	add	x16, x16, #0x258
  4027fc:	br	x17

0000000000402800 <posix_spawnp@plt>:
  402800:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #608]
  402808:	add	x16, x16, #0x260
  40280c:	br	x17

0000000000402810 <strchr@plt>:
  402810:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #616]
  402818:	add	x16, x16, #0x268
  40281c:	br	x17

0000000000402820 <rename@plt>:
  402820:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #624]
  402828:	add	x16, x16, #0x270
  40282c:	br	x17

0000000000402830 <fwrite@plt>:
  402830:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #632]
  402838:	add	x16, x16, #0x278
  40283c:	br	x17

0000000000402840 <fcntl@plt>:
  402840:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #640]
  402848:	add	x16, x16, #0x280
  40284c:	br	x17

0000000000402850 <fflush@plt>:
  402850:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #648]
  402858:	add	x16, x16, #0x288
  40285c:	br	x17

0000000000402860 <strcpy@plt>:
  402860:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #656]
  402868:	add	x16, x16, #0x290
  40286c:	br	x17

0000000000402870 <posix_spawnattr_init@plt>:
  402870:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #664]
  402878:	add	x16, x16, #0x298
  40287c:	br	x17

0000000000402880 <memchr@plt>:
  402880:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #672]
  402888:	add	x16, x16, #0x2a0
  40288c:	br	x17

0000000000402890 <mkstemp@plt>:
  402890:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #680]
  402898:	add	x16, x16, #0x2a8
  40289c:	br	x17

00000000004028a0 <__fxstat@plt>:
  4028a0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #688]
  4028a8:	add	x16, x16, #0x2b0
  4028ac:	br	x17

00000000004028b0 <strstr@plt>:
  4028b0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #696]
  4028b8:	add	x16, x16, #0x2b8
  4028bc:	br	x17

00000000004028c0 <__freading@plt>:
  4028c0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #704]
  4028c8:	add	x16, x16, #0x2c0
  4028cc:	br	x17

00000000004028d0 <regfree@plt>:
  4028d0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #712]
  4028d8:	add	x16, x16, #0x2c8
  4028dc:	br	x17

00000000004028e0 <strsignal@plt>:
  4028e0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #720]
  4028e8:	add	x16, x16, #0x2d0
  4028ec:	br	x17

00000000004028f0 <sigaddset@plt>:
  4028f0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #728]
  4028f8:	add	x16, x16, #0x2d8
  4028fc:	br	x17

0000000000402900 <iswprint@plt>:
  402900:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #736]
  402908:	add	x16, x16, #0x2e0
  40290c:	br	x17

0000000000402910 <__assert_fail@plt>:
  402910:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #744]
  402918:	add	x16, x16, #0x2e8
  40291c:	br	x17

0000000000402920 <__errno_location@plt>:
  402920:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #752]
  402928:	add	x16, x16, #0x2f0
  40292c:	br	x17

0000000000402930 <getenv@plt>:
  402930:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #760]
  402938:	add	x16, x16, #0x2f8
  40293c:	br	x17

0000000000402940 <__xstat@plt>:
  402940:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #768]
  402948:	add	x16, x16, #0x300
  40294c:	br	x17

0000000000402950 <waitpid@plt>:
  402950:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #776]
  402958:	add	x16, x16, #0x308
  40295c:	br	x17

0000000000402960 <unlink@plt>:
  402960:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #784]
  402968:	add	x16, x16, #0x310
  40296c:	br	x17

0000000000402970 <error_at_line@plt>:
  402970:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #792]
  402978:	add	x16, x16, #0x318
  40297c:	br	x17

0000000000402980 <__uflow@plt>:
  402980:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #800]
  402988:	add	x16, x16, #0x320
  40298c:	br	x17

0000000000402990 <setlocale@plt>:
  402990:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #808]
  402998:	add	x16, x16, #0x328
  40299c:	br	x17

00000000004029a0 <ferror@plt>:
  4029a0:	adrp	x16, 431000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #816]
  4029a8:	add	x16, x16, #0x330
  4029ac:	br	x17

Disassembly of section .text:

00000000004029b0 <_obstack_begin@@Base-0x14bc8>:
  4029b0:	stp	x29, x30, [sp, #-320]!
  4029b4:	mov	x29, sp
  4029b8:	stp	x21, x22, [sp, #32]
  4029bc:	mov	w21, w0
  4029c0:	ldr	x0, [x1]
  4029c4:	stp	x27, x28, [sp, #80]
  4029c8:	adrp	x28, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4029cc:	stp	x19, x20, [sp, #16]
  4029d0:	mov	x20, x1
  4029d4:	adrp	x19, 403000 <ferror@plt+0x660>
  4029d8:	stp	x23, x24, [sp, #48]
  4029dc:	add	x19, x19, #0x258
  4029e0:	stp	x25, x26, [sp, #64]
  4029e4:	bl	413c30 <ferror@plt+0x11290>
  4029e8:	adrp	x0, 411000 <ferror@plt+0xe660>
  4029ec:	str	wzr, [x28, #3384]
  4029f0:	add	x0, x0, #0xaa8
  4029f4:	bl	417cc0 <_obstack_memory_used@@Base+0x538>
  4029f8:	bl	40f9c0 <ferror@plt+0xd020>
  4029fc:	bl	4088a0 <ferror@plt+0x5f00>
  402a00:	adrp	x1, 417000 <ferror@plt+0x14660>
  402a04:	adrp	x0, 417000 <ferror@plt+0x14660>
  402a08:	add	x1, x1, #0xd38
  402a0c:	add	x0, x0, #0xd48
  402a10:	bl	417058 <ferror@plt+0x146b8>
  402a14:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  402a18:	add	x26, x1, #0x448
  402a1c:	str	x0, [x1, #1096]
  402a20:	mov	w0, #0xb                   	// #11
  402a24:	bl	4028e0 <strsignal@plt>
  402a28:	bl	416b80 <ferror@plt+0x141e0>
  402a2c:	mov	x1, x0
  402a30:	mov	w0, #0x6                   	// #6
  402a34:	str	x1, [x26, #96]
  402a38:	bl	4028e0 <strsignal@plt>
  402a3c:	bl	416b80 <ferror@plt+0x141e0>
  402a40:	mov	x1, x0
  402a44:	mov	w0, #0x4                   	// #4
  402a48:	str	x1, [x26, #56]
  402a4c:	bl	4028e0 <strsignal@plt>
  402a50:	bl	416b80 <ferror@plt+0x141e0>
  402a54:	mov	x1, x0
  402a58:	mov	w0, #0x8                   	// #8
  402a5c:	str	x1, [x26, #40]
  402a60:	bl	4028e0 <strsignal@plt>
  402a64:	bl	416b80 <ferror@plt+0x141e0>
  402a68:	mov	x1, x0
  402a6c:	mov	w0, #0x7                   	// #7
  402a70:	str	x1, [x26, #72]
  402a74:	bl	4028e0 <strsignal@plt>
  402a78:	bl	416b80 <ferror@plt+0x141e0>
  402a7c:	mov	x1, x0
  402a80:	add	x0, sp, #0xb0
  402a84:	str	x1, [x26, #64]
  402a88:	bl	402570 <sigemptyset@plt>
  402a8c:	str	x19, [sp, #168]
  402a90:	mov	w3, #0xc0000000            	// #-1073741824
  402a94:	add	x1, sp, #0xa8
  402a98:	mov	x2, #0x0                   	// #0
  402a9c:	mov	w0, #0xb                   	// #11
  402aa0:	str	w3, [sp, #304]
  402aa4:	bl	402670 <sigaction@plt>
  402aa8:	add	x1, sp, #0xa8
  402aac:	mov	x2, #0x0                   	// #0
  402ab0:	mov	w0, #0x6                   	// #6
  402ab4:	bl	402670 <sigaction@plt>
  402ab8:	add	x1, sp, #0xa8
  402abc:	mov	x2, #0x0                   	// #0
  402ac0:	mov	w0, #0x4                   	// #4
  402ac4:	bl	402670 <sigaction@plt>
  402ac8:	add	x1, sp, #0xa8
  402acc:	mov	x2, #0x0                   	// #0
  402ad0:	mov	w0, #0x8                   	// #8
  402ad4:	bl	402670 <sigaction@plt>
  402ad8:	add	x1, sp, #0xa8
  402adc:	mov	x2, #0x0                   	// #0
  402ae0:	mov	w0, #0x7                   	// #7
  402ae4:	bl	402670 <sigaction@plt>
  402ae8:	mov	x0, x19
  402aec:	bl	410b90 <ferror@plt+0xe1f0>
  402af0:	cbnz	w0, 402afc <ferror@plt+0x15c>
  402af4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402af8:	str	wzr, [x0, #840]
  402afc:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x878>
  402b00:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x878>
  402b04:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x878>
  402b08:	add	x24, x24, #0xc68
  402b0c:	add	x23, x23, #0x910
  402b10:	add	x22, x22, #0xae0
  402b14:	adrp	x27, 417000 <ferror@plt+0x14660>
  402b18:	adrp	x0, 417000 <ferror@plt+0x14660>
  402b1c:	add	x27, x27, #0xe98
  402b20:	add	x0, x0, #0xe18
  402b24:	mov	w25, #0x0                   	// #0
  402b28:	mov	x19, #0x0                   	// #0
  402b2c:	stp	xzr, xzr, [sp, #104]
  402b30:	stp	x27, xzr, [sp, #120]
  402b34:	stp	xzr, x0, [sp, #136]
  402b38:	mov	x3, x24
  402b3c:	mov	x2, x23
  402b40:	mov	x1, x20
  402b44:	mov	w0, w21
  402b48:	mov	x4, #0x0                   	// #0
  402b4c:	bl	402740 <getopt_long@plt>
  402b50:	mov	w3, w0
  402b54:	cmn	w0, #0x1
  402b58:	b.eq	402ef0 <ferror@plt+0x550>  // b.none
  402b5c:	cmp	w3, #0x1
  402b60:	b.eq	402e94 <ferror@plt+0x4f4>  // b.none
  402b64:	sub	w0, w3, #0x42
  402b68:	cmp	w0, #0xc2
  402b6c:	b.hi	402e70 <ferror@plt+0x4d0>  // b.pmore
  402b70:	ldrh	w0, [x22, w0, uxtw #1]
  402b74:	adr	x1, 402b80 <ferror@plt+0x1e0>
  402b78:	add	x0, x1, w0, sxth #2
  402b7c:	br	x0
  402b80:	mov	w25, #0x1                   	// #1
  402b84:	b	402b38 <ferror@plt+0x198>
  402b88:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402b8c:	adrp	x4, 417000 <ferror@plt+0x14660>
  402b90:	adrp	x3, 417000 <ferror@plt+0x14660>
  402b94:	add	x4, x4, #0xe50
  402b98:	ldr	x0, [x0, #1056]
  402b9c:	add	x3, x3, #0xe60
  402ba0:	adrp	x2, 417000 <ferror@plt+0x14660>
  402ba4:	adrp	x1, 417000 <ferror@plt+0x14660>
  402ba8:	add	x2, x2, #0xe68
  402bac:	add	x1, x1, #0xe70
  402bb0:	mov	x5, #0x0                   	// #0
  402bb4:	bl	4164b8 <ferror@plt+0x13b18>
  402bb8:	mov	w0, #0x0                   	// #0
  402bbc:	bl	4023c0 <exit@plt>
  402bc0:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  402bc4:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  402bc8:	adrp	x0, 417000 <ferror@plt+0x14660>
  402bcc:	add	x0, x0, #0xe78
  402bd0:	ldr	x1, [x1, #2784]
  402bd4:	bl	416c88 <ferror@plt+0x142e8>
  402bd8:	ldr	x3, [x19, #1056]
  402bdc:	mov	x2, #0x50                  	// #80
  402be0:	mov	x1, #0x1                   	// #1
  402be4:	adrp	x0, 417000 <ferror@plt+0x14660>
  402be8:	add	x0, x0, #0xea0
  402bec:	bl	402830 <fwrite@plt>
  402bf0:	ldr	x3, [x19, #1056]
  402bf4:	mov	x2, #0xf1                  	// #241
  402bf8:	mov	x1, #0x1                   	// #1
  402bfc:	adrp	x0, 417000 <ferror@plt+0x14660>
  402c00:	add	x0, x0, #0xef8
  402c04:	bl	402830 <fwrite@plt>
  402c08:	adrp	x1, 417000 <ferror@plt+0x14660>
  402c0c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402c10:	add	x1, x1, #0xff0
  402c14:	add	x0, x0, #0x10
  402c18:	bl	416c88 <ferror@plt+0x142e8>
  402c1c:	ldr	x3, [x19, #1056]
  402c20:	mov	x2, #0x10b                 	// #267
  402c24:	mov	x1, #0x1                   	// #1
  402c28:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402c2c:	add	x0, x0, #0x1f8
  402c30:	bl	402830 <fwrite@plt>
  402c34:	mov	x0, x27
  402c38:	bl	402710 <puts@plt>
  402c3c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  402c40:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402c44:	add	x0, x0, #0x308
  402c48:	ldr	w1, [x1, #840]
  402c4c:	bl	416c88 <ferror@plt+0x142e8>
  402c50:	mov	x0, x27
  402c54:	bl	402710 <puts@plt>
  402c58:	ldr	x3, [x19, #1056]
  402c5c:	mov	x2, #0xa1                  	// #161
  402c60:	mov	x1, #0x1                   	// #1
  402c64:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402c68:	add	x0, x0, #0x430
  402c6c:	bl	402830 <fwrite@plt>
  402c70:	ldr	x3, [x19, #1056]
  402c74:	mov	x2, #0x15e                 	// #350
  402c78:	mov	x1, #0x1                   	// #1
  402c7c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402c80:	add	x0, x0, #0x4d8
  402c84:	bl	402830 <fwrite@plt>
  402c88:	ldr	x3, [x19, #1056]
  402c8c:	mov	x2, #0x1ce                 	// #462
  402c90:	mov	x1, #0x1                   	// #1
  402c94:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402c98:	add	x0, x0, #0x638
  402c9c:	bl	402830 <fwrite@plt>
  402ca0:	ldr	x3, [x19, #1056]
  402ca4:	mov	x2, #0x7e                  	// #126
  402ca8:	mov	x1, #0x1                   	// #1
  402cac:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402cb0:	add	x0, x0, #0x808
  402cb4:	bl	402830 <fwrite@plt>
  402cb8:	ldr	x3, [x19, #1056]
  402cbc:	mov	x2, #0x85                  	// #133
  402cc0:	mov	x1, #0x1                   	// #1
  402cc4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  402cc8:	add	x0, x0, #0x888
  402ccc:	bl	402830 <fwrite@plt>
  402cd0:	bl	416578 <ferror@plt+0x13bd8>
  402cd4:	mov	w0, #0x0                   	// #0
  402cd8:	bl	4023c0 <exit@plt>
  402cdc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402ce0:	ldr	x0, [x0, #1040]
  402ce4:	str	x0, [sp, #120]
  402ce8:	b	402b38 <ferror@plt+0x198>
  402cec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402cf0:	ldr	x0, [x0, #1040]
  402cf4:	str	x0, [sp, #104]
  402cf8:	b	402b38 <ferror@plt+0x198>
  402cfc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402d00:	mov	w2, #0xa                   	// #10
  402d04:	mov	x1, #0x0                   	// #0
  402d08:	ldr	x0, [x0, #1040]
  402d0c:	bl	402790 <strtol@plt>
  402d10:	cmp	w0, #0x0
  402d14:	csel	w0, w0, wzr, gt
  402d18:	str	w0, [x26, #552]
  402d1c:	b	402b38 <ferror@plt+0x198>
  402d20:	str	wzr, [x26, #536]
  402d24:	b	402b38 <ferror@plt+0x198>
  402d28:	ldr	x2, [sp, #144]
  402d2c:	mov	w1, #0x0                   	// #0
  402d30:	mov	w0, #0x0                   	// #0
  402d34:	mov	w25, #0x1                   	// #1
  402d38:	bl	4023e0 <error@plt>
  402d3c:	b	402b38 <ferror@plt+0x198>
  402d40:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  402d44:	ldr	x0, [x1, #1040]
  402d48:	bl	4088e0 <ferror@plt+0x5f40>
  402d4c:	str	w0, [x26, #548]
  402d50:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  402d54:	tbz	w0, #31, 402b38 <ferror@plt+0x198>
  402d58:	ldr	x3, [x1, #1040]
  402d5c:	adrp	x2, 417000 <ferror@plt+0x14660>
  402d60:	mov	w1, #0x0                   	// #0
  402d64:	add	x2, x2, #0xe00
  402d68:	mov	w0, #0x0                   	// #0
  402d6c:	bl	4023e0 <error@plt>
  402d70:	str	wzr, [x26, #548]
  402d74:	b	402b38 <ferror@plt+0x198>
  402d78:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402d7c:	ldr	x0, [x0, #1040]
  402d80:	str	x0, [sp, #128]
  402d84:	b	402b38 <ferror@plt+0x198>
  402d88:	mov	w0, #0x1                   	// #1
  402d8c:	str	w0, [x26, #544]
  402d90:	b	402b38 <ferror@plt+0x198>
  402d94:	mov	w0, #0x1                   	// #1
  402d98:	str	w0, [x26, #540]
  402d9c:	b	402b38 <ferror@plt+0x198>
  402da0:	cmp	w3, #0x4e
  402da4:	adrp	x0, 417000 <ferror@plt+0x14660>
  402da8:	adrp	x3, 417000 <ferror@plt+0x14660>
  402dac:	add	x0, x0, #0xd28
  402db0:	add	x3, x3, #0xd20
  402db4:	adrp	x2, 417000 <ferror@plt+0x14660>
  402db8:	csel	x3, x3, x0, eq  // eq = none
  402dbc:	add	x2, x2, #0xde0
  402dc0:	mov	w1, #0x0                   	// #0
  402dc4:	mov	w0, #0x0                   	// #0
  402dc8:	bl	4023e0 <error@plt>
  402dcc:	b	402b38 <ferror@plt+0x198>
  402dd0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402dd4:	mov	x1, #0x0                   	// #0
  402dd8:	mov	w2, #0xa                   	// #10
  402ddc:	ldr	x0, [x0, #1040]
  402de0:	bl	402790 <strtol@plt>
  402de4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  402de8:	str	w0, [x1, #840]
  402dec:	b	402b38 <ferror@plt+0x198>
  402df0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402df4:	ldr	x0, [x0, #1040]
  402df8:	bl	40fa90 <ferror@plt+0xd0f0>
  402dfc:	b	402b38 <ferror@plt+0x198>
  402e00:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402e04:	mov	w2, #0xa                   	// #10
  402e08:	mov	x1, #0x0                   	// #0
  402e0c:	ldr	x0, [x0, #1040]
  402e10:	bl	402790 <strtol@plt>
  402e14:	cbnz	x0, 402ed8 <ferror@plt+0x538>
  402e18:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402e1c:	mov	x1, #0x1fd                 	// #509
  402e20:	str	x1, [x0, #848]
  402e24:	b	402b38 <ferror@plt+0x198>
  402e28:	mov	w0, #0x1                   	// #1
  402e2c:	str	w0, [x26, #536]
  402e30:	b	402b38 <ferror@plt+0x198>
  402e34:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402e38:	ldr	x0, [x0, #1040]
  402e3c:	str	x0, [sp, #136]
  402e40:	b	402b38 <ferror@plt+0x198>
  402e44:	ldrb	w0, [x26, #528]
  402e48:	cbnz	w0, 402ecc <ferror@plt+0x52c>
  402e4c:	mov	w0, #0x1                   	// #1
  402e50:	strb	w0, [x26, #528]
  402e54:	b	402b38 <ferror@plt+0x198>
  402e58:	adrp	x2, 417000 <ferror@plt+0x14660>
  402e5c:	mov	w1, #0x0                   	// #0
  402e60:	add	x2, x2, #0xda8
  402e64:	mov	w0, #0x0                   	// #0
  402e68:	bl	4023e0 <error@plt>
  402e6c:	b	402b38 <ferror@plt+0x198>
  402e70:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  402e74:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402e78:	adrp	x1, 417000 <ferror@plt+0x14660>
  402e7c:	add	x1, x1, #0xd80
  402e80:	ldr	x2, [x2, #2784]
  402e84:	ldr	x0, [x0, #1032]
  402e88:	bl	416d88 <ferror@plt+0x143e8>
  402e8c:	mov	w0, #0x1                   	// #1
  402e90:	bl	4023c0 <exit@plt>
  402e94:	mov	x0, #0x18                  	// #24
  402e98:	str	w3, [sp, #156]
  402e9c:	bl	416968 <ferror@plt+0x13fc8>
  402ea0:	str	xzr, [x0]
  402ea4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  402ea8:	ldr	w3, [sp, #156]
  402eac:	str	w3, [x0, #8]
  402eb0:	ldr	x1, [x1, #1040]
  402eb4:	str	x1, [x0, #16]
  402eb8:	cbz	x19, 402ee4 <ferror@plt+0x544>
  402ebc:	ldr	x1, [sp, #112]
  402ec0:	str	x0, [sp, #112]
  402ec4:	str	x0, [x1]
  402ec8:	b	402b38 <ferror@plt+0x198>
  402ecc:	mov	w0, #0x1                   	// #1
  402ed0:	str	w0, [x26, #532]
  402ed4:	b	402b38 <ferror@plt+0x198>
  402ed8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  402edc:	str	x0, [x1, #848]
  402ee0:	b	402b38 <ferror@plt+0x198>
  402ee4:	mov	x19, x0
  402ee8:	str	x0, [sp, #112]
  402eec:	b	402b38 <ferror@plt+0x198>
  402ef0:	ldr	x0, [sp, #104]
  402ef4:	cbz	x0, 402f04 <ferror@plt+0x564>
  402ef8:	bl	408b08 <ferror@plt+0x6168>
  402efc:	tst	w0, #0xff
  402f00:	b.eq	403100 <ferror@plt+0x760>  // b.none
  402f04:	bl	40c5e8 <ferror@plt+0x9c48>
  402f08:	bl	40e5b8 <ferror@plt+0xbc18>
  402f0c:	bl	40fc78 <ferror@plt+0xd2d8>
  402f10:	ldr	x0, [sp, #120]
  402f14:	bl	407948 <ferror@plt+0x4fa8>
  402f18:	bl	40f9d8 <ferror@plt+0xd038>
  402f1c:	ldr	x0, [sp, #128]
  402f20:	cbz	x0, 4030e4 <ferror@plt+0x744>
  402f24:	bl	40af10 <ferror@plt+0x8570>
  402f28:	cbnz	w25, 402fc0 <ferror@plt+0x620>
  402f2c:	cbz	x19, 40306c <ferror@plt+0x6cc>
  402f30:	ldr	x0, [sp, #104]
  402f34:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x878>
  402f38:	add	x22, x22, #0x960
  402f3c:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x878>
  402f40:	cmp	x0, #0x0
  402f44:	add	x24, x24, #0x940
  402f48:	csel	x22, x0, x22, ne  // ne = any
  402f4c:	mov	w23, #0x0                   	// #0
  402f50:	mov	w25, #0x1                   	// #1
  402f54:	b	402f8c <ferror@plt+0x5ec>
  402f58:	cmp	w1, #0x44
  402f5c:	b.eq	40302c <ferror@plt+0x68c>  // b.none
  402f60:	cmp	w1, #0x55
  402f64:	b.ne	402fe0 <ferror@plt+0x640>  // b.any
  402f68:	ldr	x0, [x19, #16]
  402f6c:	mov	w1, #0x2                   	// #2
  402f70:	bl	40fd00 <ferror@plt+0xd360>
  402f74:	nop
  402f78:	ldr	x27, [x19]
  402f7c:	mov	x0, x19
  402f80:	bl	4027c0 <free@plt>
  402f84:	cbz	x27, 403070 <ferror@plt+0x6d0>
  402f88:	mov	x19, x27
  402f8c:	ldr	w1, [x19, #8]
  402f90:	cmp	w1, #0x73
  402f94:	b.eq	403064 <ferror@plt+0x6c4>  // b.none
  402f98:	b.le	402f58 <ferror@plt+0x5b8>
  402f9c:	cmp	w1, #0x74
  402fa0:	b.ne	402ff8 <ferror@plt+0x658>  // b.any
  402fa4:	ldr	x0, [x19, #16]
  402fa8:	mov	w1, #0x1                   	// #1
  402fac:	bl	40fd00 <ferror@plt+0xd360>
  402fb0:	ldrb	w1, [x0, #8]
  402fb4:	orr	w1, w1, #0x1
  402fb8:	strb	w1, [x0, #8]
  402fbc:	b	402f78 <ferror@plt+0x5d8>
  402fc0:	mov	x1, #0x1                   	// #1
  402fc4:	mov	w0, #0x2                   	// #2
  402fc8:	bl	4024e0 <signal@plt>
  402fcc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  402fd0:	mov	x1, #0x0                   	// #0
  402fd4:	ldr	x0, [x0, #1056]
  402fd8:	bl	402420 <setbuf@plt>
  402fdc:	b	402f2c <ferror@plt+0x58c>
  402fe0:	cmp	w1, #0x1
  402fe4:	b.ne	403130 <ferror@plt+0x790>  // b.any
  402fe8:	ldr	x0, [x19, #16]
  402fec:	mov	w23, w1
  402ff0:	bl	403328 <ferror@plt+0x988>
  402ff4:	b	402f78 <ferror@plt+0x5d8>
  402ff8:	cmp	w1, #0x100
  402ffc:	b.ne	403130 <ferror@plt+0x790>  // b.any
  403000:	ldr	x0, [x19, #16]
  403004:	bl	408b08 <ferror@plt+0x6168>
  403008:	tst	w0, #0xff
  40300c:	b.ne	402f78 <ferror@plt+0x5d8>  // b.any
  403010:	bl	402920 <__errno_location@plt>
  403014:	ldr	w1, [x0]
  403018:	ldr	w0, [x26, #532]
  40301c:	mov	x3, x22
  403020:	mov	x2, x24
  403024:	bl	4033d0 <ferror@plt+0xa30>
  403028:	b	402f78 <ferror@plt+0x5d8>
  40302c:	ldr	x0, [x19, #16]
  403030:	bl	416b80 <ferror@plt+0x141e0>
  403034:	mov	x27, x0
  403038:	mov	w1, #0x3d                  	// #61
  40303c:	bl	402810 <strchr@plt>
  403040:	mov	x1, x0
  403044:	cbz	x0, 40304c <ferror@plt+0x6ac>
  403048:	strb	wzr, [x1], #1
  40304c:	mov	w2, #0x1                   	// #1
  403050:	mov	x0, x27
  403054:	bl	407a28 <ferror@plt+0x5088>
  403058:	mov	x0, x27
  40305c:	bl	4027c0 <free@plt>
  403060:	b	402f78 <ferror@plt+0x5d8>
  403064:	str	w25, [x26, #556]
  403068:	b	402f78 <ferror@plt+0x5d8>
  40306c:	mov	w23, #0x0                   	// #0
  403070:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  403074:	cmp	w23, #0x0
  403078:	ldr	w0, [x19, #1048]
  40307c:	ccmp	w0, w21, #0x0, eq  // eq = none
  403080:	b.eq	403120 <ferror@plt+0x780>  // b.none
  403084:	add	x19, x19, #0x418
  403088:	cmp	w0, w21
  40308c:	b.ge	4030b4 <ferror@plt+0x714>  // b.tcont
  403090:	ldr	x0, [x20, w0, sxtw #3]
  403094:	bl	403328 <ferror@plt+0x988>
  403098:	ldr	w0, [x19]
  40309c:	add	w0, w0, #0x1
  4030a0:	str	w0, [x19]
  4030a4:	cmp	w0, w21
  4030a8:	b.lt	403090 <ferror@plt+0x6f0>  // b.tstop
  4030ac:	b	4030b4 <ferror@plt+0x714>
  4030b0:	bl	40dbb8 <ferror@plt+0xb218>
  4030b4:	bl	40c440 <ferror@plt+0x9aa0>
  4030b8:	tst	w0, #0xff
  4030bc:	b.ne	4030b0 <ferror@plt+0x710>  // b.any
  4030c0:	mov	x0, #0x0                   	// #0
  4030c4:	bl	408b08 <ferror@plt+0x6168>
  4030c8:	ldr	x0, [sp, #136]
  4030cc:	cbz	x0, 4030f0 <ferror@plt+0x750>
  4030d0:	bl	40ab48 <ferror@plt+0x81a8>
  4030d4:	bl	40e630 <ferror@plt+0xbc90>
  4030d8:	bl	4079f0 <ferror@plt+0x5050>
  4030dc:	ldr	w0, [x28, #3384]
  4030e0:	bl	4023c0 <exit@plt>
  4030e4:	bl	407e10 <ferror@plt+0x5470>
  4030e8:	cbz	w25, 402f2c <ferror@plt+0x58c>
  4030ec:	b	402fc0 <ferror@plt+0x620>
  4030f0:	mov	w0, #0x0                   	// #0
  4030f4:	bl	40f300 <ferror@plt+0xc960>
  4030f8:	bl	40f628 <ferror@plt+0xcc88>
  4030fc:	b	4030d4 <ferror@plt+0x734>
  403100:	bl	402920 <__errno_location@plt>
  403104:	ldr	w1, [x0]
  403108:	ldr	w0, [x26, #532]
  40310c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x878>
  403110:	ldr	x3, [sp, #104]
  403114:	add	x2, x2, #0x940
  403118:	bl	4033d0 <ferror@plt+0xa30>
  40311c:	b	402f04 <ferror@plt+0x564>
  403120:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x878>
  403124:	add	x0, x0, #0x998
  403128:	bl	403328 <ferror@plt+0x988>
  40312c:	b	4030b4 <ferror@plt+0x714>
  403130:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x878>
  403134:	add	x2, x2, #0x968
  403138:	mov	w1, #0x0                   	// #0
  40313c:	mov	w0, #0x0                   	// #0
  403140:	bl	4033d0 <ferror@plt+0xa30>
  403144:	bl	4026d0 <abort@plt>
  403148:	mov	x29, #0x0                   	// #0
  40314c:	mov	x30, #0x0                   	// #0
  403150:	mov	x5, x0
  403154:	ldr	x1, [sp]
  403158:	add	x2, sp, #0x8
  40315c:	mov	x6, sp
  403160:	movz	x0, #0x0, lsl #48
  403164:	movk	x0, #0x0, lsl #32
  403168:	movk	x0, #0x40, lsl #16
  40316c:	movk	x0, #0x29b0
  403170:	movz	x3, #0x0, lsl #48
  403174:	movk	x3, #0x0, lsl #32
  403178:	movk	x3, #0x41, lsl #16
  40317c:	movk	x3, #0x7c38
  403180:	movz	x4, #0x0, lsl #48
  403184:	movk	x4, #0x0, lsl #32
  403188:	movk	x4, #0x41, lsl #16
  40318c:	movk	x4, #0x7cb8
  403190:	bl	4025a0 <__libc_start_main@plt>
  403194:	bl	4026d0 <abort@plt>
  403198:	adrp	x0, 430000 <_obstack_memory_used@@Base+0x18878>
  40319c:	ldr	x0, [x0, #4064]
  4031a0:	cbz	x0, 4031a8 <ferror@plt+0x808>
  4031a4:	b	402690 <__gmon_start__@plt>
  4031a8:	ret
  4031ac:	nop
  4031b0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4031b4:	add	x0, x0, #0x400
  4031b8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  4031bc:	add	x1, x1, #0x400
  4031c0:	cmp	x1, x0
  4031c4:	b.eq	4031dc <ferror@plt+0x83c>  // b.none
  4031c8:	adrp	x1, 417000 <ferror@plt+0x14660>
  4031cc:	ldr	x1, [x1, #3304]
  4031d0:	cbz	x1, 4031dc <ferror@plt+0x83c>
  4031d4:	mov	x16, x1
  4031d8:	br	x16
  4031dc:	ret
  4031e0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4031e4:	add	x0, x0, #0x400
  4031e8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  4031ec:	add	x1, x1, #0x400
  4031f0:	sub	x1, x1, x0
  4031f4:	lsr	x2, x1, #63
  4031f8:	add	x1, x2, x1, asr #3
  4031fc:	cmp	xzr, x1, asr #1
  403200:	asr	x1, x1, #1
  403204:	b.eq	40321c <ferror@plt+0x87c>  // b.none
  403208:	adrp	x2, 417000 <ferror@plt+0x14660>
  40320c:	ldr	x2, [x2, #3312]
  403210:	cbz	x2, 40321c <ferror@plt+0x87c>
  403214:	mov	x16, x2
  403218:	br	x16
  40321c:	ret
  403220:	stp	x29, x30, [sp, #-32]!
  403224:	mov	x29, sp
  403228:	str	x19, [sp, #16]
  40322c:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  403230:	ldrb	w0, [x19, #1088]
  403234:	cbnz	w0, 403244 <ferror@plt+0x8a4>
  403238:	bl	4031b0 <ferror@plt+0x810>
  40323c:	mov	w0, #0x1                   	// #1
  403240:	strb	w0, [x19, #1088]
  403244:	ldr	x19, [sp, #16]
  403248:	ldp	x29, x30, [sp], #32
  40324c:	ret
  403250:	b	4031e0 <ferror@plt+0x840>
  403254:	nop
  403258:	cbnz	w0, 403260 <ferror@plt+0x8c0>
  40325c:	ret
  403260:	stp	x29, x30, [sp, #-48]!
  403264:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  403268:	mov	x29, sp
  40326c:	stp	x19, x20, [sp, #16]
  403270:	sxtw	x19, w0
  403274:	ldr	x20, [x1, #2784]
  403278:	stp	x21, x22, [sp, #32]
  40327c:	adrp	x21, 417000 <ferror@plt+0x14660>
  403280:	mov	x0, x20
  403284:	bl	402390 <strlen@plt>
  403288:	mov	x1, x20
  40328c:	mov	x2, x0
  403290:	add	x21, x21, #0xcf8
  403294:	mov	w0, #0x2                   	// #2
  403298:	bl	4026a0 <write@plt>
  40329c:	mov	x2, #0x2                   	// #2
  4032a0:	mov	x1, x21
  4032a4:	mov	w0, w2
  4032a8:	bl	4026a0 <write@plt>
  4032ac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4032b0:	add	x20, x0, #0x448
  4032b4:	add	x20, x20, #0x8
  4032b8:	ldr	x22, [x0, #1096]
  4032bc:	ldr	x0, [x0, #1096]
  4032c0:	bl	402390 <strlen@plt>
  4032c4:	mov	x2, x0
  4032c8:	mov	x1, x22
  4032cc:	mov	w0, #0x2                   	// #2
  4032d0:	bl	4026a0 <write@plt>
  4032d4:	ldr	x0, [x20, x19, lsl #3]
  4032d8:	cbz	x0, 403308 <ferror@plt+0x968>
  4032dc:	mov	x1, x21
  4032e0:	mov	x2, #0x2                   	// #2
  4032e4:	mov	w0, w2
  4032e8:	bl	4026a0 <write@plt>
  4032ec:	ldr	x21, [x20, x19, lsl #3]
  4032f0:	ldr	x0, [x20, x19, lsl #3]
  4032f4:	bl	402390 <strlen@plt>
  4032f8:	mov	x2, x0
  4032fc:	mov	x1, x21
  403300:	mov	w0, #0x2                   	// #2
  403304:	bl	4026a0 <write@plt>
  403308:	adrp	x1, 417000 <ferror@plt+0x14660>
  40330c:	add	x1, x1, #0xfe8
  403310:	mov	x2, #0x1                   	// #1
  403314:	mov	w0, #0x2                   	// #2
  403318:	bl	4026a0 <write@plt>
  40331c:	mov	w0, #0x2                   	// #2
  403320:	bl	402370 <_exit@plt>
  403324:	nop
  403328:	stp	x29, x30, [sp, #-48]!
  40332c:	mov	x29, sp
  403330:	str	x19, [sp, #16]
  403334:	mov	x19, x0
  403338:	ldrb	w0, [x0]
  40333c:	cmp	w0, #0x2d
  403340:	b.ne	403374 <ferror@plt+0x9d4>  // b.any
  403344:	ldrb	w0, [x19, #1]
  403348:	cbnz	w0, 403374 <ferror@plt+0x9d4>
  40334c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  403350:	adrp	x1, 417000 <ferror@plt+0x14660>
  403354:	mov	w2, #0x0                   	// #0
  403358:	add	x1, x1, #0xd00
  40335c:	ldr	x0, [x0, #1064]
  403360:	bl	40bb58 <ferror@plt+0x91b8>
  403364:	bl	40dbb8 <ferror@plt+0xb218>
  403368:	ldr	x19, [sp, #16]
  40336c:	ldp	x29, x30, [sp], #48
  403370:	ret
  403374:	add	x1, sp, #0x28
  403378:	mov	x0, x19
  40337c:	bl	40faa8 <ferror@plt+0xd108>
  403380:	cbz	x0, 40339c <ferror@plt+0x9fc>
  403384:	ldr	x1, [sp, #40]
  403388:	mov	w2, #0x1                   	// #1
  40338c:	bl	40bb58 <ferror@plt+0x91b8>
  403390:	ldr	x0, [sp, #40]
  403394:	bl	4027c0 <free@plt>
  403398:	b	403364 <ferror@plt+0x9c4>
  40339c:	bl	402920 <__errno_location@plt>
  4033a0:	mov	x1, x0
  4033a4:	mov	x3, x19
  4033a8:	mov	w0, #0x0                   	// #0
  4033ac:	adrp	x2, 417000 <ferror@plt+0x14660>
  4033b0:	add	x2, x2, #0xd08
  4033b4:	ldr	w1, [x1]
  4033b8:	bl	4023e0 <error@plt>
  4033bc:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4033c0:	mov	w1, #0x1                   	// #1
  4033c4:	str	w1, [x0, #3384]
  4033c8:	b	403368 <ferror@plt+0x9c8>
  4033cc:	nop
  4033d0:	stp	x29, x30, [sp, #-256]!
  4033d4:	adrp	x9, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4033d8:	adrp	x8, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4033dc:	mov	x29, sp
  4033e0:	ldr	x13, [x9, #3416]
  4033e4:	add	x9, sp, #0x100
  4033e8:	ldr	w8, [x8, #3392]
  4033ec:	add	x12, sp, #0xd0
  4033f0:	mov	w11, #0xffffffd8            	// #-40
  4033f4:	mov	w10, #0xffffff80            	// #-128
  4033f8:	str	x9, [sp, #48]
  4033fc:	mov	x9, x2
  403400:	add	x2, sp, #0x100
  403404:	str	x2, [sp, #56]
  403408:	str	x12, [sp, #64]
  40340c:	cmp	w8, #0x0
  403410:	stp	w11, w10, [sp, #72]
  403414:	csel	x2, x13, xzr, ne  // ne = any
  403418:	ldp	x12, x13, [sp, #48]
  40341c:	stp	x12, x13, [sp, #16]
  403420:	ldp	x10, x11, [sp, #64]
  403424:	stp	x10, x11, [sp, #32]
  403428:	str	q0, [sp, #80]
  40342c:	str	q1, [sp, #96]
  403430:	str	q2, [sp, #112]
  403434:	str	q3, [sp, #128]
  403438:	str	q4, [sp, #144]
  40343c:	str	q5, [sp, #160]
  403440:	str	q6, [sp, #176]
  403444:	str	q7, [sp, #192]
  403448:	stp	x3, x4, [sp, #216]
  40344c:	mov	w3, w8
  403450:	mov	x4, x9
  403454:	stp	x5, x6, [sp, #232]
  403458:	add	x5, sp, #0x10
  40345c:	str	x7, [sp, #248]
  403460:	bl	416008 <ferror@plt+0x13668>
  403464:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  403468:	ldrb	w0, [x0, #1624]
  40346c:	cbz	w0, 403484 <ferror@plt+0xae4>
  403470:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  403474:	ldr	w1, [x0, #3384]
  403478:	cbnz	w1, 403484 <ferror@plt+0xae4>
  40347c:	mov	w1, #0x1                   	// #1
  403480:	str	w1, [x0, #3384]
  403484:	ldp	x29, x30, [sp], #256
  403488:	ret
  40348c:	nop
  403490:	stp	x29, x30, [sp, #-240]!
  403494:	mov	w9, #0xffffffe8            	// #-24
  403498:	mov	w8, #0xffffff80            	// #-128
  40349c:	mov	x29, sp
  4034a0:	add	x10, sp, #0xd0
  4034a4:	add	x11, sp, #0xf0
  4034a8:	stp	x11, x11, [sp, #48]
  4034ac:	cmp	w3, #0x0
  4034b0:	csel	x2, x2, xzr, ne  // ne = any
  4034b4:	str	x10, [sp, #64]
  4034b8:	stp	w9, w8, [sp, #72]
  4034bc:	ldp	x10, x11, [sp, #48]
  4034c0:	stp	x10, x11, [sp, #16]
  4034c4:	ldp	x8, x9, [sp, #64]
  4034c8:	stp	x8, x9, [sp, #32]
  4034cc:	str	q0, [sp, #80]
  4034d0:	str	q1, [sp, #96]
  4034d4:	str	q2, [sp, #112]
  4034d8:	str	q3, [sp, #128]
  4034dc:	str	q4, [sp, #144]
  4034e0:	str	q5, [sp, #160]
  4034e4:	str	q6, [sp, #176]
  4034e8:	str	q7, [sp, #192]
  4034ec:	stp	x5, x6, [sp, #216]
  4034f0:	add	x5, sp, #0x10
  4034f4:	str	x7, [sp, #232]
  4034f8:	bl	416008 <ferror@plt+0x13668>
  4034fc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  403500:	ldrb	w0, [x0, #1624]
  403504:	cbz	w0, 40351c <ferror@plt+0xb7c>
  403508:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40350c:	ldr	w1, [x0, #3384]
  403510:	cbnz	w1, 40351c <ferror@plt+0xb7c>
  403514:	mov	w1, #0x1                   	// #1
  403518:	str	w1, [x0, #3384]
  40351c:	ldp	x29, x30, [sp], #240
  403520:	ret
  403524:	nop
  403528:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40352c:	cmp	w1, #0x0
  403530:	ldr	w0, [x0, #1628]
  403534:	b.le	403550 <ferror@plt+0xbb0>
  403538:	ldr	x1, [x2]
  40353c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x878>
  403540:	add	x2, x2, #0xf88
  403544:	ldr	x3, [x1, #8]
  403548:	mov	w1, #0x0                   	// #0
  40354c:	b	4033d0 <ferror@plt+0xa30>
  403550:	adrp	x3, 417000 <ferror@plt+0x14660>
  403554:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x878>
  403558:	add	x3, x3, #0xe98
  40355c:	add	x2, x2, #0xf88
  403560:	mov	w1, #0x0                   	// #0
  403564:	b	4033d0 <ferror@plt+0xa30>
  403568:	stp	x29, x30, [sp, #-80]!
  40356c:	mov	x29, sp
  403570:	stp	x19, x20, [sp, #16]
  403574:	mov	x19, x1
  403578:	stp	x21, x22, [sp, #32]
  40357c:	mov	x21, x0
  403580:	ldrb	w1, [x0]
  403584:	ldp	x2, x0, [x19, #24]
  403588:	cbz	w1, 403688 <ferror@plt+0xce8>
  40358c:	mov	w20, #0x0                   	// #0
  403590:	stp	x23, x24, [sp, #48]
  403594:	str	x25, [sp, #64]
  403598:	b	4035d0 <ferror@plt+0xc30>
  40359c:	cmp	x0, x2
  4035a0:	b.eq	4036ec <ferror@plt+0xd4c>  // b.none
  4035a4:	add	x0, x2, #0x1
  4035a8:	str	x0, [x19, #24]
  4035ac:	mov	x0, x22
  4035b0:	mov	x22, x21
  4035b4:	ldrb	w1, [x21]
  4035b8:	strb	w1, [x2]
  4035bc:	ldrb	w20, [x21]
  4035c0:	mov	x21, x0
  4035c4:	ldp	x2, x0, [x19, #24]
  4035c8:	ldrb	w1, [x22, #1]
  4035cc:	cbz	w1, 403680 <ferror@plt+0xce0>
  4035d0:	cmp	w1, #0x2d
  4035d4:	add	x22, x21, #0x1
  4035d8:	ccmp	w20, #0x0, #0x4, eq  // eq = none
  4035dc:	b.eq	40359c <ferror@plt+0xbfc>  // b.none
  4035e0:	ldrb	w25, [x21, #1]
  4035e4:	cbz	w25, 403780 <ferror@plt+0xde0>
  4035e8:	cmp	w25, w20
  4035ec:	add	x23, x21, #0x2
  4035f0:	b.cs	403700 <ferror@plt+0xd60>  // b.hs, b.nlast
  4035f4:	sub	w20, w20, #0x1
  4035f8:	and	w24, w20, #0xff
  4035fc:	cmp	w25, w20, uxtb
  403600:	b.ls	40362c <ferror@plt+0xc8c>  // b.plast
  403604:	b	403760 <ferror@plt+0xdc0>
  403608:	add	x1, x2, #0x1
  40360c:	str	x1, [x19, #24]
  403610:	sub	w0, w24, #0x1
  403614:	strb	w24, [x2]
  403618:	and	w0, w0, #0xff
  40361c:	cmp	w25, w24
  403620:	mov	w24, w0
  403624:	b.eq	403668 <ferror@plt+0xcc8>  // b.none
  403628:	ldp	x2, x0, [x19, #24]
  40362c:	cmp	x0, x2
  403630:	b.ne	403608 <ferror@plt+0xc68>  // b.any
  403634:	mov	x0, x19
  403638:	mov	x1, #0x1                   	// #1
  40363c:	bl	4175a8 <_obstack_newchunk@@Base>
  403640:	ldr	x2, [x19, #24]
  403644:	sub	w0, w24, #0x1
  403648:	and	w0, w0, #0xff
  40364c:	cmp	w25, w24
  403650:	add	x1, x2, #0x1
  403654:	str	x1, [x19, #24]
  403658:	strb	w24, [x2]
  40365c:	mov	w24, w0
  403660:	b.ne	403628 <ferror@plt+0xc88>  // b.any
  403664:	nop
  403668:	ldrb	w1, [x22, #1]
  40366c:	ldrb	w20, [x21, #1]
  403670:	mov	x21, x23
  403674:	ldp	x2, x0, [x19, #24]
  403678:	cbnz	w1, 4035d0 <ferror@plt+0xc30>
  40367c:	nop
  403680:	ldp	x23, x24, [sp, #48]
  403684:	ldr	x25, [sp, #64]
  403688:	cmp	x0, x2
  40368c:	b.eq	40376c <ferror@plt+0xdcc>  // b.none
  403690:	add	x0, x2, #0x1
  403694:	str	x0, [x19, #24]
  403698:	strb	wzr, [x2]
  40369c:	ldp	x0, x3, [x19, #16]
  4036a0:	cmp	x3, x0
  4036a4:	b.eq	403750 <ferror@plt+0xdb0>  // b.none
  4036a8:	ldr	x1, [x19, #48]
  4036ac:	ldr	x2, [x19, #8]
  4036b0:	add	x3, x3, x1
  4036b4:	ldr	x4, [x19, #32]
  4036b8:	bic	x1, x3, x1
  4036bc:	str	x1, [x19, #24]
  4036c0:	sub	x3, x1, x2
  4036c4:	sub	x2, x4, x2
  4036c8:	cmp	x3, x2
  4036cc:	b.ls	4036d8 <ferror@plt+0xd38>  // b.plast
  4036d0:	mov	x1, x4
  4036d4:	str	x4, [x19, #24]
  4036d8:	ldp	x21, x22, [sp, #32]
  4036dc:	str	x1, [x19, #16]
  4036e0:	ldp	x19, x20, [sp, #16]
  4036e4:	ldp	x29, x30, [sp], #80
  4036e8:	ret
  4036ec:	mov	x0, x19
  4036f0:	mov	x1, #0x1                   	// #1
  4036f4:	bl	4175a8 <_obstack_newchunk@@Base>
  4036f8:	ldr	x2, [x19, #24]
  4036fc:	b	4035a4 <ferror@plt+0xc04>
  403700:	add	w20, w20, #0x1
  403704:	and	w20, w20, #0xff
  403708:	b.hi	403734 <ferror@plt+0xd94>  // b.pmore
  40370c:	b	403760 <ferror@plt+0xdc0>
  403710:	add	x1, x2, #0x1
  403714:	str	x1, [x19, #24]
  403718:	add	w0, w20, #0x1
  40371c:	strb	w20, [x2]
  403720:	and	w0, w0, #0xff
  403724:	cmp	w25, w20
  403728:	mov	w20, w0
  40372c:	b.eq	403668 <ferror@plt+0xcc8>  // b.none
  403730:	ldp	x2, x0, [x19, #24]
  403734:	cmp	x0, x2
  403738:	b.ne	403710 <ferror@plt+0xd70>  // b.any
  40373c:	mov	x0, x19
  403740:	mov	x1, #0x1                   	// #1
  403744:	bl	4175a8 <_obstack_newchunk@@Base>
  403748:	ldr	x2, [x19, #24]
  40374c:	b	403710 <ferror@plt+0xd70>
  403750:	ldrb	w1, [x19, #80]
  403754:	orr	w1, w1, #0x2
  403758:	strb	w1, [x19, #80]
  40375c:	b	4036a8 <ferror@plt+0xd08>
  403760:	mov	x21, x23
  403764:	mov	w20, w25
  403768:	b	4035c8 <ferror@plt+0xc28>
  40376c:	mov	x0, x19
  403770:	mov	x1, #0x1                   	// #1
  403774:	bl	4175a8 <_obstack_newchunk@@Base>
  403778:	ldr	x2, [x19, #24]
  40377c:	b	403690 <ferror@plt+0xcf0>
  403780:	cmp	x0, x2
  403784:	b.eq	4037a8 <ferror@plt+0xe08>  // b.none
  403788:	add	x0, x2, #0x1
  40378c:	str	x0, [x19, #24]
  403790:	mov	w0, #0x2d                  	// #45
  403794:	strb	w0, [x2]
  403798:	ldp	x2, x0, [x19, #24]
  40379c:	ldp	x23, x24, [sp, #48]
  4037a0:	ldr	x25, [sp, #64]
  4037a4:	b	403688 <ferror@plt+0xce8>
  4037a8:	mov	x0, x19
  4037ac:	mov	x1, #0x1                   	// #1
  4037b0:	bl	4175a8 <_obstack_newchunk@@Base>
  4037b4:	ldr	x2, [x19, #24]
  4037b8:	b	403788 <ferror@plt+0xde8>
  4037bc:	nop
  4037c0:	stp	x29, x30, [sp, #-112]!
  4037c4:	mov	x29, sp
  4037c8:	stp	x19, x20, [sp, #16]
  4037cc:	mov	x20, x2
  4037d0:	stp	x21, x22, [sp, #32]
  4037d4:	and	w22, w4, #0xff
  4037d8:	stp	x23, x24, [sp, #48]
  4037dc:	mov	w23, w1
  4037e0:	mov	x24, x3
  4037e4:	stp	x27, x28, [sp, #80]
  4037e8:	mov	x27, x0
  4037ec:	mov	x0, x3
  4037f0:	bl	402390 <strlen@plt>
  4037f4:	cmp	w23, #0x1
  4037f8:	b.le	40396c <ferror@plt+0xfcc>
  4037fc:	sub	w23, w23, #0x2
  403800:	stp	x25, x26, [sp, #64]
  403804:	adrp	x26, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  403808:	ldr	x19, [x27, #24]
  40380c:	adrp	x25, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  403810:	add	x26, x26, #0xd48
  403814:	add	x25, x25, #0xd80
  403818:	mov	x21, x0
  40381c:	add	x0, x20, w23, uxtw #3
  403820:	str	x0, [sp, #104]
  403824:	nop
  403828:	cbz	w22, 40385c <ferror@plt+0xebc>
  40382c:	ldr	x1, [x27, #32]
  403830:	mov	x0, x19
  403834:	ldr	x28, [x26, #8]
  403838:	sub	x1, x1, x19
  40383c:	cmp	x28, x1
  403840:	b.hi	403954 <ferror@plt+0xfb4>  // b.pmore
  403844:	ldr	x1, [x26]
  403848:	mov	x2, x28
  40384c:	bl	402350 <memcpy@plt>
  403850:	ldr	x19, [x27, #24]
  403854:	add	x19, x19, x28
  403858:	str	x19, [x27, #24]
  40385c:	ldr	x0, [x20, #8]
  403860:	ldr	x23, [x0, #8]
  403864:	mov	x0, x23
  403868:	bl	402390 <strlen@plt>
  40386c:	ldr	x2, [x27, #32]
  403870:	mov	x28, x0
  403874:	sub	x2, x2, x19
  403878:	cmp	x0, x2
  40387c:	b.hi	403910 <ferror@plt+0xf70>  // b.pmore
  403880:	mov	x0, x19
  403884:	mov	x1, x23
  403888:	mov	x2, x28
  40388c:	bl	402350 <memcpy@plt>
  403890:	ldr	x19, [x27, #24]
  403894:	add	x0, x19, x28
  403898:	str	x0, [x27, #24]
  40389c:	mov	x19, x0
  4038a0:	cbz	w22, 4038d0 <ferror@plt+0xf30>
  4038a4:	ldr	x1, [x27, #32]
  4038a8:	ldr	x28, [x25, #8]
  4038ac:	sub	x1, x1, x0
  4038b0:	cmp	x28, x1
  4038b4:	b.hi	403940 <ferror@plt+0xfa0>  // b.pmore
  4038b8:	ldr	x1, [x25]
  4038bc:	mov	x2, x28
  4038c0:	bl	402350 <memcpy@plt>
  4038c4:	ldr	x19, [x27, #24]
  4038c8:	add	x19, x19, x28
  4038cc:	str	x19, [x27, #24]
  4038d0:	ldr	x0, [sp, #104]
  4038d4:	cmp	x0, x20
  4038d8:	b.eq	403968 <ferror@plt+0xfc8>  // b.none
  4038dc:	ldr	x1, [x27, #32]
  4038e0:	mov	x0, x19
  4038e4:	sub	x1, x1, x19
  4038e8:	cmp	x21, x1
  4038ec:	b.hi	40392c <ferror@plt+0xf8c>  // b.pmore
  4038f0:	mov	x2, x21
  4038f4:	mov	x1, x24
  4038f8:	bl	402350 <memcpy@plt>
  4038fc:	add	x20, x20, #0x8
  403900:	ldr	x19, [x27, #24]
  403904:	add	x19, x19, x21
  403908:	str	x19, [x27, #24]
  40390c:	b	403828 <ferror@plt+0xe88>
  403910:	mov	x1, x0
  403914:	mov	x0, x27
  403918:	bl	4175a8 <_obstack_newchunk@@Base>
  40391c:	ldr	x0, [x20, #8]
  403920:	ldr	x19, [x27, #24]
  403924:	ldr	x23, [x0, #8]
  403928:	b	403880 <ferror@plt+0xee0>
  40392c:	mov	x0, x27
  403930:	mov	x1, x21
  403934:	bl	4175a8 <_obstack_newchunk@@Base>
  403938:	ldr	x0, [x27, #24]
  40393c:	b	4038f0 <ferror@plt+0xf50>
  403940:	mov	x0, x27
  403944:	mov	x1, x28
  403948:	bl	4175a8 <_obstack_newchunk@@Base>
  40394c:	ldr	x0, [x27, #24]
  403950:	b	4038b8 <ferror@plt+0xf18>
  403954:	mov	x0, x27
  403958:	mov	x1, x28
  40395c:	bl	4175a8 <_obstack_newchunk@@Base>
  403960:	ldr	x0, [x27, #24]
  403964:	b	403844 <ferror@plt+0xea4>
  403968:	ldp	x25, x26, [sp, #64]
  40396c:	ldp	x19, x20, [sp, #16]
  403970:	ldp	x21, x22, [sp, #32]
  403974:	ldp	x23, x24, [sp, #48]
  403978:	ldp	x27, x28, [sp, #80]
  40397c:	ldp	x29, x30, [sp], #112
  403980:	ret
  403984:	nop
  403988:	stp	x29, x30, [sp, #-96]!
  40398c:	mov	x29, sp
  403990:	stp	x19, x20, [sp, #16]
  403994:	ldr	x19, [x0, #24]
  403998:	stp	x21, x22, [sp, #32]
  40399c:	mov	x21, x2
  4039a0:	mov	x22, x3
  4039a4:	stp	x23, x24, [sp, #48]
  4039a8:	adrp	x24, 431000 <_obstack_memory_used@@Base+0x19878>
  4039ac:	mov	x23, x1
  4039b0:	add	x24, x24, #0x678
  4039b4:	stp	x25, x26, [sp, #64]
  4039b8:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x878>
  4039bc:	add	x25, x25, #0xfc0
  4039c0:	stp	x27, x28, [sp, #80]
  4039c4:	mov	x27, x0
  4039c8:	mov	x0, x21
  4039cc:	mov	w1, #0x5c                  	// #92
  4039d0:	bl	402810 <strchr@plt>
  4039d4:	mov	x28, x0
  4039d8:	cbz	x0, 403a80 <ferror@plt+0x10e0>
  4039dc:	ldr	x1, [x27, #32]
  4039e0:	sub	x20, x28, x21
  4039e4:	mov	x0, x19
  4039e8:	sub	x1, x1, x19
  4039ec:	cmp	x20, x1
  4039f0:	b.hi	403b4c <ferror@plt+0x11ac>  // b.pmore
  4039f4:	mov	x2, x20
  4039f8:	mov	x1, x21
  4039fc:	bl	402350 <memcpy@plt>
  403a00:	ldr	x19, [x27, #24]
  403a04:	add	x0, x19, x20
  403a08:	str	x0, [x27, #24]
  403a0c:	mov	x19, x0
  403a10:	ldrb	w20, [x28, #1]
  403a14:	cmp	w20, #0x30
  403a18:	b.eq	403b60 <ferror@plt+0x11c0>  // b.none
  403a1c:	b.hi	403ad4 <ferror@plt+0x1134>  // b.pmore
  403a20:	cbz	w20, 403bac <ferror@plt+0x120c>
  403a24:	cmp	w20, #0x26
  403a28:	b.ne	403b88 <ferror@plt+0x11e8>  // b.any
  403a2c:	ldp	x1, x3, [x22, #8]
  403a30:	ldr	x2, [x27, #32]
  403a34:	sub	x2, x2, x0
  403a38:	ldr	w1, [x1]
  403a3c:	ldr	w26, [x3]
  403a40:	sub	w26, w26, w1
  403a44:	cmp	x2, w26, sxtw
  403a48:	sxtw	x26, w26
  403a4c:	b.cc	403bdc <ferror@plt+0x123c>  // b.lo, b.ul, b.last
  403a50:	add	x1, x23, w1, sxtw
  403a54:	mov	x2, x26
  403a58:	bl	402350 <memcpy@plt>
  403a5c:	add	x21, x28, #0x2
  403a60:	ldr	x19, [x27, #24]
  403a64:	mov	x0, x21
  403a68:	mov	w1, #0x5c                  	// #92
  403a6c:	add	x19, x19, x26
  403a70:	str	x19, [x27, #24]
  403a74:	bl	402810 <strchr@plt>
  403a78:	mov	x28, x0
  403a7c:	cbnz	x0, 4039dc <ferror@plt+0x103c>
  403a80:	mov	x0, x21
  403a84:	bl	402390 <strlen@plt>
  403a88:	ldr	x1, [x27, #32]
  403a8c:	mov	x20, x0
  403a90:	sub	x1, x1, x19
  403a94:	cmp	x0, x1
  403a98:	b.hi	403c1c <ferror@plt+0x127c>  // b.pmore
  403a9c:	mov	x1, x21
  403aa0:	mov	x2, x20
  403aa4:	mov	x0, x19
  403aa8:	bl	402350 <memcpy@plt>
  403aac:	ldr	x0, [x27, #24]
  403ab0:	ldp	x21, x22, [sp, #32]
  403ab4:	add	x0, x0, x20
  403ab8:	ldp	x19, x20, [sp, #16]
  403abc:	ldp	x23, x24, [sp, #48]
  403ac0:	ldp	x25, x26, [sp, #64]
  403ac4:	str	x0, [x27, #24]
  403ac8:	ldp	x27, x28, [sp, #80]
  403acc:	ldp	x29, x30, [sp], #96
  403ad0:	ret
  403ad4:	sub	w1, w20, #0x31
  403ad8:	and	w1, w1, #0xff
  403adc:	cmp	w1, #0x8
  403ae0:	b.hi	403b88 <ferror@plt+0x11e8>  // b.pmore
  403ae4:	ldr	w1, [x22]
  403ae8:	sub	w3, w20, #0x30
  403aec:	sub	w1, w1, #0x1
  403af0:	cmp	w1, w3
  403af4:	b.ls	403bf8 <ferror@plt+0x1258>  // b.plast
  403af8:	ldr	x1, [x22, #16]
  403afc:	sxtw	x20, w3
  403b00:	ldr	w2, [x1, x20, lsl #2]
  403b04:	cmp	w2, #0x0
  403b08:	b.le	403b44 <ferror@plt+0x11a4>
  403b0c:	ldr	x1, [x22, #8]
  403b10:	ldr	x3, [x27, #32]
  403b14:	ldr	w1, [x1, x20, lsl #2]
  403b18:	sub	x3, x3, x0
  403b1c:	sub	w2, w2, w1
  403b20:	sxtw	x21, w2
  403b24:	cmp	x3, w2, sxtw
  403b28:	b.cc	403c44 <ferror@plt+0x12a4>  // b.lo, b.ul, b.last
  403b2c:	add	x1, x23, w1, sxtw
  403b30:	mov	x2, x21
  403b34:	bl	402350 <memcpy@plt>
  403b38:	ldr	x19, [x27, #24]
  403b3c:	add	x19, x19, x21
  403b40:	str	x19, [x27, #24]
  403b44:	add	x21, x28, #0x2
  403b48:	b	4039c8 <ferror@plt+0x1028>
  403b4c:	mov	x0, x27
  403b50:	mov	x1, x20
  403b54:	bl	4175a8 <_obstack_newchunk@@Base>
  403b58:	ldr	x0, [x27, #24]
  403b5c:	b	4039f4 <ferror@plt+0x1054>
  403b60:	ldr	w1, [x24]
  403b64:	cbnz	w1, 403a2c <ferror@plt+0x108c>
  403b68:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  403b6c:	mov	x2, x25
  403b70:	ldr	w0, [x0, #1628]
  403b74:	bl	4033d0 <ferror@plt+0xa30>
  403b78:	mov	w1, #0x1                   	// #1
  403b7c:	str	w1, [x24]
  403b80:	ldr	x0, [x27, #24]
  403b84:	b	403a2c <ferror@plt+0x108c>
  403b88:	ldr	x1, [x27, #32]
  403b8c:	cmp	x0, x1
  403b90:	b.eq	403c30 <ferror@plt+0x1290>  // b.none
  403b94:	add	x1, x0, #0x1
  403b98:	str	x1, [x27, #24]
  403b9c:	strb	w20, [x0]
  403ba0:	add	x21, x28, #0x2
  403ba4:	ldr	x19, [x27, #24]
  403ba8:	b	4039c8 <ferror@plt+0x1028>
  403bac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  403bb0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  403bb4:	ldp	x19, x20, [sp, #16]
  403bb8:	add	x2, x2, #0x28
  403bbc:	ldp	x21, x22, [sp, #32]
  403bc0:	mov	w1, #0x0                   	// #0
  403bc4:	ldp	x23, x24, [sp, #48]
  403bc8:	ldp	x25, x26, [sp, #64]
  403bcc:	ldp	x27, x28, [sp, #80]
  403bd0:	ldp	x29, x30, [sp], #96
  403bd4:	ldr	w0, [x0, #1628]
  403bd8:	b	4033d0 <ferror@plt+0xa30>
  403bdc:	mov	x1, x26
  403be0:	mov	x0, x27
  403be4:	bl	4175a8 <_obstack_newchunk@@Base>
  403be8:	ldr	x1, [x22, #8]
  403bec:	ldr	x0, [x27, #24]
  403bf0:	ldr	w1, [x1]
  403bf4:	b	403a50 <ferror@plt+0x10b0>
  403bf8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  403bfc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  403c00:	mov	w1, #0x0                   	// #0
  403c04:	add	x2, x2, #0x0
  403c08:	ldr	w0, [x0, #1628]
  403c0c:	add	x21, x28, #0x2
  403c10:	bl	4033d0 <ferror@plt+0xa30>
  403c14:	ldr	x19, [x27, #24]
  403c18:	b	4039c8 <ferror@plt+0x1028>
  403c1c:	mov	x1, x0
  403c20:	mov	x0, x27
  403c24:	bl	4175a8 <_obstack_newchunk@@Base>
  403c28:	ldr	x19, [x27, #24]
  403c2c:	b	403a9c <ferror@plt+0x10fc>
  403c30:	mov	x0, x27
  403c34:	mov	x1, #0x1                   	// #1
  403c38:	bl	4175a8 <_obstack_newchunk@@Base>
  403c3c:	ldr	x0, [x27, #24]
  403c40:	b	403b94 <ferror@plt+0x11f4>
  403c44:	mov	x1, x21
  403c48:	mov	x0, x27
  403c4c:	bl	4175a8 <_obstack_newchunk@@Base>
  403c50:	ldr	x1, [x22, #8]
  403c54:	ldr	x0, [x27, #24]
  403c58:	ldr	w1, [x1, x20, lsl #2]
  403c5c:	b	403b2c <ferror@plt+0x118c>
  403c60:	stp	x29, x30, [sp, #-48]!
  403c64:	mov	x29, sp
  403c68:	stp	x19, x20, [sp, #16]
  403c6c:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  403c70:	add	x19, x19, #0x678
  403c74:	str	x21, [sp, #32]
  403c78:	mov	x20, x0
  403c7c:	mov	w0, #0x0                   	// #0
  403c80:	strb	wzr, [x19, #263]
  403c84:	tbz	w1, #31, 403c90 <ferror@plt+0x12f0>
  403c88:	neg	w1, w1
  403c8c:	mov	w0, #0x1                   	// #1
  403c90:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x1878>
  403c94:	mov	w5, #0xcccd                	// #52429
  403c98:	add	x19, x19, #0x107
  403c9c:	add	x4, x4, #0x7c8
  403ca0:	movk	w5, #0xcccc, lsl #16
  403ca4:	nop
  403ca8:	umull	x2, w1, w5
  403cac:	cmp	w1, #0x9
  403cb0:	mov	x6, x19
  403cb4:	lsr	x2, x2, #35
  403cb8:	add	w3, w2, w2, lsl #2
  403cbc:	sub	w3, w1, w3, lsl #1
  403cc0:	mov	w1, w2
  403cc4:	ldrb	w2, [x4, w3, uxtw]
  403cc8:	strb	w2, [x19, #-1]!
  403ccc:	b.hi	403ca8 <ferror@plt+0x1308>  // b.pmore
  403cd0:	cbz	w0, 403ce0 <ferror@plt+0x1340>
  403cd4:	mov	w0, #0x2d                  	// #45
  403cd8:	sturb	w0, [x19, #-1]
  403cdc:	sub	x19, x6, #0x2
  403ce0:	mov	x0, x19
  403ce4:	bl	402390 <strlen@plt>
  403ce8:	mov	x21, x0
  403cec:	ldp	x0, x1, [x20, #24]
  403cf0:	sub	x1, x1, x0
  403cf4:	cmp	x21, x1
  403cf8:	b.hi	403d24 <ferror@plt+0x1384>  // b.pmore
  403cfc:	mov	x1, x19
  403d00:	mov	x2, x21
  403d04:	bl	402350 <memcpy@plt>
  403d08:	ldr	x0, [x20, #24]
  403d0c:	add	x0, x0, x21
  403d10:	ldr	x21, [sp, #32]
  403d14:	str	x0, [x20, #24]
  403d18:	ldp	x19, x20, [sp, #16]
  403d1c:	ldp	x29, x30, [sp], #48
  403d20:	ret
  403d24:	mov	x0, x20
  403d28:	mov	x1, x21
  403d2c:	bl	4175a8 <_obstack_newchunk@@Base>
  403d30:	ldr	x0, [x20, #24]
  403d34:	b	403cfc <ferror@plt+0x135c>
  403d38:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  403d3c:	ldr	w1, [x1, #1920]
  403d40:	b	403c60 <ferror@plt+0x12c0>
  403d44:	nop
  403d48:	stp	x29, x30, [sp, #-80]!
  403d4c:	mov	x29, sp
  403d50:	stp	x21, x22, [sp, #32]
  403d54:	mov	x22, x1
  403d58:	mov	x21, x2
  403d5c:	ldp	x4, x1, [x0, #24]
  403d60:	stp	x23, x24, [sp, #48]
  403d64:	str	x25, [sp, #64]
  403d68:	adrp	x25, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  403d6c:	add	x23, x25, #0xd48
  403d70:	stp	x19, x20, [sp, #16]
  403d74:	mov	x19, x0
  403d78:	sub	x1, x1, x4
  403d7c:	mov	x20, x3
  403d80:	ldr	x24, [x23, #8]
  403d84:	cmp	x24, x1
  403d88:	b.hi	403f6c <ferror@plt+0x15cc>  // b.pmore
  403d8c:	ldr	x1, [x25, #3400]
  403d90:	mov	x0, x4
  403d94:	mov	x2, x24
  403d98:	bl	402350 <memcpy@plt>
  403d9c:	ldp	x0, x1, [x19, #24]
  403da0:	add	x0, x0, x24
  403da4:	str	x0, [x19, #24]
  403da8:	sub	x1, x1, x0
  403dac:	cmp	x20, x1
  403db0:	b.hi	403f7c <ferror@plt+0x15dc>  // b.pmore
  403db4:	mov	x2, x20
  403db8:	mov	x1, x21
  403dbc:	bl	402350 <memcpy@plt>
  403dc0:	ldr	x0, [x19, #24]
  403dc4:	add	x6, x0, x20
  403dc8:	str	x6, [x19, #24]
  403dcc:	mov	x0, x6
  403dd0:	cbz	x20, 403fec <ferror@plt+0x164c>
  403dd4:	sub	x4, x20, #0x1
  403dd8:	mov	x3, #0x0                   	// #0
  403ddc:	add	x4, x21, x4
  403de0:	b	403df0 <ferror@plt+0x1450>
  403de4:	add	x3, x3, #0x1
  403de8:	cmp	x3, #0x6
  403dec:	b.eq	403ec0 <ferror@plt+0x1520>  // b.none
  403df0:	neg	x1, x3
  403df4:	ldrb	w5, [x4, x1]
  403df8:	cmp	w5, #0x58
  403dfc:	b.eq	403de4 <ferror@plt+0x1444>  // b.none
  403e00:	mov	x1, #0x7                   	// #7
  403e04:	mov	x20, #0x6                   	// #6
  403e08:	sub	x1, x1, x3
  403e0c:	sub	x20, x20, x3
  403e10:	ldr	x2, [x19, #32]
  403e14:	sub	x2, x2, x6
  403e18:	cmp	x2, x1
  403e1c:	b.cc	403ed8 <ferror@plt+0x1538>  // b.lo, b.ul, b.last
  403e20:	mov	x2, x20
  403e24:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  403e28:	add	x1, x1, #0x58
  403e2c:	bl	402350 <memcpy@plt>
  403e30:	ldr	x1, [x19, #24]
  403e34:	add	x0, x1, x20
  403e38:	add	x0, x0, #0x1
  403e3c:	str	x0, [x19, #24]
  403e40:	strb	wzr, [x1, x20]
  403e44:	ldr	x0, [x23, #8]
  403e48:	ldr	x23, [x19, #16]
  403e4c:	add	x23, x23, x0
  403e50:	bl	402920 <__errno_location@plt>
  403e54:	mov	x20, x0
  403e58:	mov	x0, x23
  403e5c:	str	wzr, [x20]
  403e60:	bl	415d10 <ferror@plt+0x13370>
  403e64:	tbnz	w0, #31, 403ee8 <ferror@plt+0x1548>
  403e68:	bl	402660 <close@plt>
  403e6c:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  403e70:	ldp	x0, x1, [x19, #24]
  403e74:	add	x2, x21, #0xd80
  403e78:	ldr	x20, [x2, #8]
  403e7c:	sub	x0, x0, #0x1
  403e80:	str	x0, [x19, #24]
  403e84:	sub	x1, x1, x0
  403e88:	cmp	x20, x1
  403e8c:	b.hi	403fac <ferror@plt+0x160c>  // b.pmore
  403e90:	ldr	x1, [x21, #3456]
  403e94:	mov	x2, x20
  403e98:	bl	402350 <memcpy@plt>
  403e9c:	ldr	x0, [x19, #24]
  403ea0:	ldp	x21, x22, [sp, #32]
  403ea4:	add	x20, x0, x20
  403ea8:	str	x20, [x19, #24]
  403eac:	ldp	x19, x20, [sp, #16]
  403eb0:	ldp	x23, x24, [sp, #48]
  403eb4:	ldr	x25, [sp, #64]
  403eb8:	ldp	x29, x30, [sp], #80
  403ebc:	ret
  403ec0:	ldr	x2, [x19, #32]
  403ec4:	mov	x1, #0x1                   	// #1
  403ec8:	mov	x20, #0x0                   	// #0
  403ecc:	sub	x2, x2, x6
  403ed0:	cmp	x2, x1
  403ed4:	b.cs	403e20 <ferror@plt+0x1480>  // b.hs, b.nlast
  403ed8:	mov	x0, x19
  403edc:	bl	4175a8 <_obstack_newchunk@@Base>
  403ee0:	ldr	x0, [x19, #24]
  403ee4:	b	403e20 <ferror@plt+0x1480>
  403ee8:	ldr	w1, [x20]
  403eec:	mov	x4, x21
  403ef0:	mov	x3, x22
  403ef4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  403ef8:	mov	w0, #0x0                   	// #0
  403efc:	add	x2, x2, #0x60
  403f00:	bl	4033d0 <ferror@plt+0xa30>
  403f04:	ldp	x1, x2, [x19, #16]
  403f08:	cmp	x2, x1
  403f0c:	b.eq	403fdc <ferror@plt+0x163c>  // b.none
  403f10:	ldr	x0, [x19, #48]
  403f14:	ldr	x3, [x19, #8]
  403f18:	add	x2, x2, x0
  403f1c:	ldr	x4, [x19, #32]
  403f20:	bic	x0, x2, x0
  403f24:	str	x0, [x19, #24]
  403f28:	sub	x5, x0, x3
  403f2c:	sub	x2, x4, x3
  403f30:	cmp	x5, x2
  403f34:	b.ls	403f40 <ferror@plt+0x15a0>  // b.plast
  403f38:	mov	x0, x4
  403f3c:	str	x4, [x19, #24]
  403f40:	str	x0, [x19, #16]
  403f44:	cmp	x4, x1
  403f48:	ccmp	x3, x1, #0x2, hi  // hi = pmore
  403f4c:	b.cc	403fc0 <ferror@plt+0x1620>  // b.lo, b.ul, b.last
  403f50:	mov	x0, x19
  403f54:	ldp	x19, x20, [sp, #16]
  403f58:	ldp	x21, x22, [sp, #32]
  403f5c:	ldp	x23, x24, [sp, #48]
  403f60:	ldr	x25, [sp, #64]
  403f64:	ldp	x29, x30, [sp], #80
  403f68:	b	4176f8 <_obstack_free@@Base>
  403f6c:	mov	x1, x24
  403f70:	bl	4175a8 <_obstack_newchunk@@Base>
  403f74:	ldr	x4, [x19, #24]
  403f78:	b	403d8c <ferror@plt+0x13ec>
  403f7c:	mov	x1, x20
  403f80:	mov	x0, x19
  403f84:	bl	4175a8 <_obstack_newchunk@@Base>
  403f88:	ldr	x0, [x19, #24]
  403f8c:	mov	x2, x20
  403f90:	mov	x1, x21
  403f94:	bl	402350 <memcpy@plt>
  403f98:	ldr	x0, [x19, #24]
  403f9c:	add	x6, x0, x20
  403fa0:	str	x6, [x19, #24]
  403fa4:	mov	x0, x6
  403fa8:	b	403dd4 <ferror@plt+0x1434>
  403fac:	mov	x0, x19
  403fb0:	mov	x1, x20
  403fb4:	bl	4175a8 <_obstack_newchunk@@Base>
  403fb8:	ldr	x0, [x19, #24]
  403fbc:	b	403e90 <ferror@plt+0x14f0>
  403fc0:	stp	x1, x1, [x19, #16]
  403fc4:	ldp	x19, x20, [sp, #16]
  403fc8:	ldp	x21, x22, [sp, #32]
  403fcc:	ldp	x23, x24, [sp, #48]
  403fd0:	ldr	x25, [sp, #64]
  403fd4:	ldp	x29, x30, [sp], #80
  403fd8:	ret
  403fdc:	ldrb	w0, [x19, #80]
  403fe0:	orr	w0, w0, #0x2
  403fe4:	strb	w0, [x19, #80]
  403fe8:	b	403f10 <ferror@plt+0x1570>
  403fec:	mov	x20, #0x6                   	// #6
  403ff0:	mov	x1, #0x7                   	// #7
  403ff4:	b	403e10 <ferror@plt+0x1470>
  403ff8:	ldr	x0, [x0]
  403ffc:	ldr	x1, [x1]
  404000:	ldr	x0, [x0, #16]
  404004:	ldr	x1, [x1, #16]
  404008:	b	402760 <strcmp@plt>
  40400c:	nop
  404010:	stp	x29, x30, [sp, #-32]!
  404014:	cmp	w1, #0x0
  404018:	csel	w4, w1, wzr, ge  // ge = tcont
  40401c:	mov	x29, sp
  404020:	str	x19, [sp, #16]
  404024:	cmp	w4, w2
  404028:	b.ge	40404c <ferror@plt+0x16ac>  // b.tcont
  40402c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  404030:	mov	w19, #0x1                   	// #1
  404034:	ldr	w1, [x1, #1640]
  404038:	cbz	w1, 404094 <ferror@plt+0x16f4>
  40403c:	mov	w0, w19
  404040:	ldr	x19, [sp, #16]
  404044:	ldp	x29, x30, [sp], #32
  404048:	ret
  40404c:	cmp	w3, #0x0
  404050:	cset	w19, gt
  404054:	cmp	w1, w3
  404058:	cset	w1, gt
  40405c:	ands	w19, w19, w1
  404060:	b.eq	40403c <ferror@plt+0x169c>  // b.none
  404064:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  404068:	mov	w19, #0x0                   	// #0
  40406c:	ldr	w1, [x1, #1640]
  404070:	cbnz	w1, 40403c <ferror@plt+0x169c>
  404074:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  404078:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40407c:	ldr	x3, [x0]
  404080:	add	x2, x2, #0xb0
  404084:	ldr	w0, [x1, #1628]
  404088:	mov	w1, #0x0                   	// #0
  40408c:	bl	4033d0 <ferror@plt+0xa30>
  404090:	b	40403c <ferror@plt+0x169c>
  404094:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  404098:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40409c:	ldr	x3, [x0]
  4040a0:	add	x2, x2, #0x80
  4040a4:	ldr	w0, [x1, #1628]
  4040a8:	mov	w1, #0x0                   	// #0
  4040ac:	bl	4033d0 <ferror@plt+0xa30>
  4040b0:	mov	w0, w19
  4040b4:	ldr	x19, [sp, #16]
  4040b8:	ldp	x29, x30, [sp], #32
  4040bc:	ret
  4040c0:	sub	sp, sp, #0x70
  4040c4:	cmp	w1, #0x1
  4040c8:	stp	x29, x30, [sp, #16]
  4040cc:	add	x29, sp, #0x10
  4040d0:	ldr	x0, [x2]
  4040d4:	add	x0, x0, #0x8
  4040d8:	b.le	4041c0 <ferror@plt+0x1820>
  4040dc:	stp	x19, x20, [sp, #32]
  4040e0:	mov	x19, x2
  4040e4:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1878>
  4040e8:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x1878>
  4040ec:	add	x5, x5, #0xe8
  4040f0:	ldr	x6, [x19, #8]
  4040f4:	add	x4, x4, #0xf0
  4040f8:	mov	w3, #0x2                   	// #2
  4040fc:	mov	w2, w3
  404100:	str	x21, [sp, #48]
  404104:	ldr	x21, [x6, #8]
  404108:	stp	x5, x4, [sp, #80]
  40410c:	stp	xzr, xzr, [sp, #96]
  404110:	bl	404010 <ferror@plt+0x1670>
  404114:	tst	w0, #0xff
  404118:	b.ne	4041a4 <ferror@plt+0x1804>  // b.any
  40411c:	ldrb	w0, [x21]
  404120:	cbz	w0, 4041a4 <ferror@plt+0x1804>
  404124:	bl	408a70 <ferror@plt+0x60d0>
  404128:	str	x21, [sp, #96]
  40412c:	bl	402920 <__errno_location@plt>
  404130:	mov	x20, x0
  404134:	ldr	x4, [x19]
  404138:	add	x3, sp, #0x4c
  40413c:	add	x2, sp, #0x50
  404140:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  404144:	mov	w7, #0x1                   	// #1
  404148:	add	x1, x1, #0xf8
  40414c:	ldr	x0, [x4, #8]
  404150:	str	wzr, [x20]
  404154:	strb	wzr, [sp]
  404158:	mov	w6, #0x0                   	// #0
  40415c:	str	x3, [sp, #8]
  404160:	mov	w5, #0x0                   	// #0
  404164:	mov	w4, #0x0                   	// #0
  404168:	mov	w3, #0x0                   	// #0
  40416c:	bl	411c70 <ferror@plt+0xf2d0>
  404170:	mov	w19, w0
  404174:	ldr	w1, [sp, #76]
  404178:	cmp	w0, #0x7f
  40417c:	cbz	w1, 4041e8 <ferror@plt+0x1848>
  404180:	b.ne	40422c <ferror@plt+0x188c>  // b.any
  404184:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404188:	lsl	w1, w1, #8
  40418c:	ldp	x29, x30, [sp, #16]
  404190:	str	w1, [x0, #1920]
  404194:	ldp	x19, x20, [sp, #32]
  404198:	ldr	x21, [sp, #48]
  40419c:	add	sp, sp, #0x70
  4041a0:	ret
  4041a4:	ldp	x19, x20, [sp, #32]
  4041a8:	ldr	x21, [sp, #48]
  4041ac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4041b0:	ldp	x29, x30, [sp, #16]
  4041b4:	str	wzr, [x0, #1920]
  4041b8:	add	sp, sp, #0x70
  4041bc:	ret
  4041c0:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1878>
  4041c4:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x1878>
  4041c8:	add	x5, x5, #0xe8
  4041cc:	add	x4, x4, #0xf0
  4041d0:	mov	w3, #0x2                   	// #2
  4041d4:	mov	w2, w3
  4041d8:	stp	x5, x4, [sp, #80]
  4041dc:	stp	xzr, xzr, [sp, #96]
  4041e0:	bl	404010 <ferror@plt+0x1670>
  4041e4:	b	4041ac <ferror@plt+0x180c>
  4041e8:	b.eq	404208 <ferror@plt+0x1868>  // b.none
  4041ec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4041f0:	ldp	x29, x30, [sp, #16]
  4041f4:	str	w19, [x0, #1920]
  4041f8:	ldp	x19, x20, [sp, #32]
  4041fc:	ldr	x21, [sp, #48]
  404200:	add	sp, sp, #0x70
  404204:	ret
  404208:	ldr	w1, [x20]
  40420c:	cbz	w1, 4041ec <ferror@plt+0x184c>
  404210:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404214:	mov	x3, x21
  404218:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40421c:	add	x2, x2, #0x120
  404220:	ldr	w0, [x0, #1628]
  404224:	bl	4033d0 <ferror@plt+0xa30>
  404228:	b	4041ec <ferror@plt+0x184c>
  40422c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  404230:	add	x3, x3, #0x7c8
  404234:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  404238:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  40423c:	add	x3, x3, #0x28
  404240:	add	x1, x1, #0x100
  404244:	add	x0, x0, #0x110
  404248:	mov	w2, #0x3cf                 	// #975
  40424c:	bl	402910 <__assert_fail@plt>
  404250:	stp	x29, x30, [sp, #-64]!
  404254:	mov	w3, #0x2                   	// #2
  404258:	mov	x29, sp
  40425c:	stp	x19, x20, [sp, #16]
  404260:	mov	x20, x1
  404264:	mov	w19, w0
  404268:	mov	w1, w0
  40426c:	ldr	x0, [x20]
  404270:	str	x21, [sp, #32]
  404274:	and	w21, w2, #0xff
  404278:	mov	w2, w3
  40427c:	add	x0, x0, #0x8
  404280:	bl	404010 <ferror@plt+0x1670>
  404284:	tst	w0, #0xff
  404288:	b.ne	4042bc <ferror@plt+0x191c>  // b.any
  40428c:	cmp	w19, #0x1
  404290:	b.le	4042cc <ferror@plt+0x192c>
  404294:	ldr	x0, [x20, #8]
  404298:	add	x1, sp, #0x38
  40429c:	ldr	x0, [x0, #8]
  4042a0:	bl	40faa8 <ferror@plt+0xd108>
  4042a4:	cbz	x0, 4042e0 <ferror@plt+0x1940>
  4042a8:	ldr	x1, [sp, #56]
  4042ac:	mov	w2, #0x1                   	// #1
  4042b0:	bl	40bb58 <ferror@plt+0x91b8>
  4042b4:	ldr	x0, [sp, #56]
  4042b8:	bl	4027c0 <free@plt>
  4042bc:	ldp	x19, x20, [sp, #16]
  4042c0:	ldr	x21, [sp, #32]
  4042c4:	ldp	x29, x30, [sp], #64
  4042c8:	ret
  4042cc:	adrp	x0, 417000 <ferror@plt+0x14660>
  4042d0:	add	x1, sp, #0x38
  4042d4:	add	x0, x0, #0xe98
  4042d8:	bl	40faa8 <ferror@plt+0xd108>
  4042dc:	cbnz	x0, 4042a8 <ferror@plt+0x1908>
  4042e0:	cbnz	w21, 4042bc <ferror@plt+0x191c>
  4042e4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4042e8:	ldr	w21, [x0, #1628]
  4042ec:	bl	402920 <__errno_location@plt>
  4042f0:	cmp	w19, #0x1
  4042f4:	ldr	w1, [x0]
  4042f8:	b.le	404330 <ferror@plt+0x1990>
  4042fc:	ldr	x0, [x20, #8]
  404300:	ldr	x3, [x0, #8]
  404304:	mov	w0, w21
  404308:	adrp	x2, 417000 <ferror@plt+0x14660>
  40430c:	add	x2, x2, #0xd08
  404310:	bl	4033d0 <ferror@plt+0xa30>
  404314:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  404318:	mov	w1, #0x1                   	// #1
  40431c:	ldp	x19, x20, [sp, #16]
  404320:	str	w1, [x0, #3384]
  404324:	ldr	x21, [sp, #32]
  404328:	ldp	x29, x30, [sp], #64
  40432c:	ret
  404330:	adrp	x3, 417000 <ferror@plt+0x14660>
  404334:	add	x3, x3, #0xe98
  404338:	b	404304 <ferror@plt+0x1964>
  40433c:	nop
  404340:	mov	w0, w1
  404344:	mov	x1, x2
  404348:	mov	w2, #0x1                   	// #1
  40434c:	b	404250 <ferror@plt+0x18b0>
  404350:	mov	w0, w1
  404354:	mov	x1, x2
  404358:	mov	w2, #0x0                   	// #0
  40435c:	b	404250 <ferror@plt+0x18b0>
  404360:	cmp	w1, #0x2
  404364:	b.eq	404488 <ferror@plt+0x1ae8>  // b.none
  404368:	stp	x29, x30, [sp, #-64]!
  40436c:	mov	w3, #0xffffffff            	// #-1
  404370:	mov	x29, sp
  404374:	stp	x19, x20, [sp, #16]
  404378:	mov	x20, x2
  40437c:	mov	w19, w1
  404380:	stp	x21, x22, [sp, #32]
  404384:	mov	w2, #0x4                   	// #4
  404388:	mov	x21, x0
  40438c:	ldr	x22, [x20]
  404390:	add	x22, x22, #0x8
  404394:	mov	x0, x22
  404398:	bl	404010 <ferror@plt+0x1670>
  40439c:	tst	w0, #0xff
  4043a0:	b.eq	4043b4 <ferror@plt+0x1a14>  // b.none
  4043a4:	ldp	x19, x20, [sp, #16]
  4043a8:	ldp	x21, x22, [sp, #32]
  4043ac:	ldp	x29, x30, [sp], #64
  4043b0:	ret
  4043b4:	add	w1, w19, #0x2
  4043b8:	mov	w4, #0x5556                	// #21846
  4043bc:	movk	w4, #0x5555, lsl #16
  4043c0:	add	x20, x20, #0x8
  4043c4:	sub	w19, w19, #0x1
  4043c8:	str	x23, [sp, #48]
  4043cc:	smull	x4, w1, w4
  4043d0:	adrp	x23, 417000 <ferror@plt+0x14660>
  4043d4:	add	x23, x23, #0xe98
  4043d8:	mov	x0, x22
  4043dc:	mov	w3, #0x1                   	// #1
  4043e0:	mov	w2, #0xffffffff            	// #-1
  4043e4:	lsr	x4, x4, #32
  4043e8:	sub	w4, w4, w1, asr #31
  4043ec:	add	w4, w4, w4, lsl #1
  4043f0:	sub	w1, w1, w4
  4043f4:	bl	404010 <ferror@plt+0x1670>
  4043f8:	cmp	w19, #0x0
  4043fc:	b.le	4044a0 <ferror@plt+0x1b00>
  404400:	ldr	x0, [x20]
  404404:	cmp	w19, #0x1
  404408:	ldr	x0, [x0, #8]
  40440c:	b.eq	4044e4 <ferror@plt+0x1b44>  // b.none
  404410:	ldr	x1, [x20, #8]
  404414:	ldr	x1, [x1, #8]
  404418:	bl	402760 <strcmp@plt>
  40441c:	cbz	w0, 404470 <ferror@plt+0x1ad0>
  404420:	cmp	w19, #0x3
  404424:	b.eq	4044d0 <ferror@plt+0x1b30>  // b.none
  404428:	sub	w0, w19, #0x4
  40442c:	cmp	w0, #0x1
  404430:	b.hi	40448c <ferror@plt+0x1aec>  // b.pmore
  404434:	ldr	x0, [x20, #24]
  404438:	ldr	x22, [x0, #8]
  40443c:	cbz	x22, 4043f8 <ferror@plt+0x1a58>
  404440:	mov	x0, x22
  404444:	bl	402390 <strlen@plt>
  404448:	mov	x19, x0
  40444c:	ldp	x0, x1, [x21, #24]
  404450:	sub	x1, x1, x0
  404454:	cmp	x1, x19
  404458:	b.cs	4044b0 <ferror@plt+0x1b10>  // b.hs, b.nlast
  40445c:	mov	x0, x21
  404460:	mov	x1, x19
  404464:	bl	4175a8 <_obstack_newchunk@@Base>
  404468:	ldr	x0, [x21, #24]
  40446c:	b	4044b0 <ferror@plt+0x1b10>
  404470:	cmp	w19, #0x2
  404474:	b.le	4044a0 <ferror@plt+0x1b00>
  404478:	ldr	x0, [x20, #16]
  40447c:	ldr	x22, [x0, #8]
  404480:	cbz	x22, 4043f8 <ferror@plt+0x1a58>
  404484:	b	404440 <ferror@plt+0x1aa0>
  404488:	ret
  40448c:	sub	w19, w19, #0x3
  404490:	add	x20, x20, #0x18
  404494:	cmp	w19, #0x0
  404498:	b.gt	404400 <ferror@plt+0x1a60>
  40449c:	nop
  4044a0:	ldr	x0, [x21, #24]
  4044a4:	adrp	x22, 417000 <ferror@plt+0x14660>
  4044a8:	add	x22, x22, #0xe98
  4044ac:	mov	x19, #0x0                   	// #0
  4044b0:	mov	x1, x22
  4044b4:	mov	x2, x19
  4044b8:	bl	402350 <memcpy@plt>
  4044bc:	ldr	x0, [x21, #24]
  4044c0:	ldr	x23, [sp, #48]
  4044c4:	add	x0, x0, x19
  4044c8:	str	x0, [x21, #24]
  4044cc:	b	4043a4 <ferror@plt+0x1a04>
  4044d0:	ldp	x19, x20, [sp, #16]
  4044d4:	ldp	x21, x22, [sp, #32]
  4044d8:	ldr	x23, [sp, #48]
  4044dc:	ldp	x29, x30, [sp], #64
  4044e0:	ret
  4044e4:	mov	x1, x23
  4044e8:	b	404418 <ferror@plt+0x1a78>
  4044ec:	nop
  4044f0:	stp	x29, x30, [sp, #-128]!
  4044f4:	cmp	w1, #0x1
  4044f8:	mov	x29, sp
  4044fc:	stp	x19, x20, [sp, #16]
  404500:	mov	x19, x0
  404504:	ldr	x0, [x2]
  404508:	add	x0, x0, #0x8
  40450c:	b.le	4046a4 <ferror@plt+0x1d04>
  404510:	mov	x20, x2
  404514:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1878>
  404518:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x1878>
  40451c:	add	x5, x5, #0xe8
  404520:	add	x4, x4, #0xf0
  404524:	mov	w3, #0x2                   	// #2
  404528:	ldr	x6, [x20, #8]
  40452c:	mov	w2, w3
  404530:	stp	x23, x24, [sp, #48]
  404534:	ldr	x23, [x6, #8]
  404538:	stp	x5, x4, [sp, #96]
  40453c:	stp	xzr, xzr, [sp, #112]
  404540:	bl	404010 <ferror@plt+0x1670>
  404544:	tst	w0, #0xff
  404548:	b.ne	40468c <ferror@plt+0x1cec>  // b.any
  40454c:	ldrb	w0, [x23]
  404550:	cbz	w0, 40468c <ferror@plt+0x1cec>
  404554:	stp	x21, x22, [sp, #32]
  404558:	bl	408a70 <ferror@plt+0x60d0>
  40455c:	str	x23, [sp, #112]
  404560:	bl	402920 <__errno_location@plt>
  404564:	ldr	x3, [x20]
  404568:	mov	x21, x0
  40456c:	add	x2, sp, #0x60
  404570:	add	x7, sp, #0x58
  404574:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  404578:	mov	w6, #0x0                   	// #0
  40457c:	ldr	x0, [x3, #8]
  404580:	str	wzr, [x21]
  404584:	add	x1, x1, #0xf8
  404588:	mov	w5, #0x1                   	// #1
  40458c:	mov	w4, #0x0                   	// #0
  404590:	mov	x3, #0x0                   	// #0
  404594:	bl	415c50 <ferror@plt+0x132b0>
  404598:	mov	w22, w0
  40459c:	cmn	w0, #0x1
  4045a0:	b.eq	404720 <ferror@plt+0x1d80>  // b.none
  4045a4:	ldr	w0, [sp, #88]
  4045a8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  4045ac:	add	x1, x1, #0x138
  4045b0:	bl	4025d0 <fdopen@plt>
  4045b4:	mov	x24, x0
  4045b8:	cbz	x0, 40478c <ferror@plt+0x1dec>
  4045bc:	ldr	x0, [x19, #24]
  4045c0:	str	x25, [sp, #64]
  4045c4:	ldr	x1, [x19, #32]
  4045c8:	subs	x2, x1, x0
  4045cc:	b.eq	4045f8 <ferror@plt+0x1c58>  // b.none
  4045d0:	mov	x3, x24
  4045d4:	mov	x1, #0x1                   	// #1
  4045d8:	bl	4027b0 <fread@plt>
  4045dc:	cbz	x0, 40460c <ferror@plt+0x1c6c>
  4045e0:	ldr	x1, [x19, #24]
  4045e4:	add	x0, x1, x0
  4045e8:	str	x0, [x19, #24]
  4045ec:	ldr	x1, [x19, #32]
  4045f0:	subs	x2, x1, x0
  4045f4:	b.ne	4045d0 <ferror@plt+0x1c30>  // b.any
  4045f8:	mov	x0, x24
  4045fc:	bl	402640 <getc@plt>
  404600:	mov	w25, w0
  404604:	cmn	w0, #0x1
  404608:	b.ne	4046cc <ferror@plt+0x1d2c>  // b.any
  40460c:	mov	x0, x24
  404610:	bl	4029a0 <ferror@plt>
  404614:	cbz	w0, 4046ec <ferror@plt+0x1d4c>
  404618:	ldr	w1, [x21]
  40461c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404620:	mov	w0, #0x1                   	// #1
  404624:	add	x2, x2, #0x140
  404628:	bl	4033d0 <ferror@plt+0xa30>
  40462c:	ldr	x1, [x20]
  404630:	mov	w4, #0x1                   	// #1
  404634:	mov	w0, w22
  404638:	add	x6, sp, #0x5c
  40463c:	mov	w3, w4
  404640:	mov	w5, #0x0                   	// #0
  404644:	ldr	x1, [x1, #8]
  404648:	str	wzr, [x21]
  40464c:	mov	w2, #0x0                   	// #0
  404650:	bl	4167a8 <ferror@plt+0x13e08>
  404654:	mov	w19, w0
  404658:	ldr	w1, [sp, #92]
  40465c:	cmp	w0, #0x7f
  404660:	cbz	w1, 4046fc <ferror@plt+0x1d5c>
  404664:	b.ne	4047c8 <ferror@plt+0x1e28>  // b.any
  404668:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40466c:	lsl	w1, w1, #8
  404670:	ldp	x19, x20, [sp, #16]
  404674:	str	w1, [x0, #1920]
  404678:	ldp	x21, x22, [sp, #32]
  40467c:	ldp	x23, x24, [sp, #48]
  404680:	ldr	x25, [sp, #64]
  404684:	ldp	x29, x30, [sp], #128
  404688:	ret
  40468c:	ldp	x23, x24, [sp, #48]
  404690:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404694:	str	wzr, [x0, #1920]
  404698:	ldp	x19, x20, [sp, #16]
  40469c:	ldp	x29, x30, [sp], #128
  4046a0:	ret
  4046a4:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1878>
  4046a8:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x1878>
  4046ac:	add	x5, x5, #0xe8
  4046b0:	add	x4, x4, #0xf0
  4046b4:	mov	w3, #0x2                   	// #2
  4046b8:	mov	w2, w3
  4046bc:	stp	x5, x4, [sp, #96]
  4046c0:	stp	xzr, xzr, [sp, #112]
  4046c4:	bl	404010 <ferror@plt+0x1670>
  4046c8:	b	404690 <ferror@plt+0x1cf0>
  4046cc:	ldp	x0, x1, [x19, #24]
  4046d0:	cmp	x1, x0
  4046d4:	b.eq	404778 <ferror@plt+0x1dd8>  // b.none
  4046d8:	add	x1, x0, #0x1
  4046dc:	str	x1, [x19, #24]
  4046e0:	strb	w25, [x0]
  4046e4:	ldr	x0, [x19, #24]
  4046e8:	b	4045c4 <ferror@plt+0x1c24>
  4046ec:	mov	x0, x24
  4046f0:	bl	4170d0 <ferror@plt+0x14730>
  4046f4:	cbnz	w0, 404618 <ferror@plt+0x1c78>
  4046f8:	b	40462c <ferror@plt+0x1c8c>
  4046fc:	b.eq	404754 <ferror@plt+0x1db4>  // b.none
  404700:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404704:	ldp	x21, x22, [sp, #32]
  404708:	str	w19, [x0, #1920]
  40470c:	ldp	x19, x20, [sp, #16]
  404710:	ldp	x23, x24, [sp, #48]
  404714:	ldr	x25, [sp, #64]
  404718:	ldp	x29, x30, [sp], #128
  40471c:	ret
  404720:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404724:	ldr	w1, [x21]
  404728:	mov	x3, x23
  40472c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404730:	ldr	w0, [x0, #1628]
  404734:	add	x2, x2, #0x120
  404738:	bl	4033d0 <ferror@plt+0xa30>
  40473c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404740:	mov	w1, #0x7f                  	// #127
  404744:	ldp	x21, x22, [sp, #32]
  404748:	str	w1, [x0, #1920]
  40474c:	ldp	x23, x24, [sp, #48]
  404750:	b	404698 <ferror@plt+0x1cf8>
  404754:	ldr	w1, [x21]
  404758:	cbz	w1, 404700 <ferror@plt+0x1d60>
  40475c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404760:	mov	x3, x23
  404764:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404768:	add	x2, x2, #0x120
  40476c:	ldr	w0, [x0, #1628]
  404770:	bl	4033d0 <ferror@plt+0xa30>
  404774:	b	404700 <ferror@plt+0x1d60>
  404778:	mov	x0, x19
  40477c:	mov	x1, #0x1                   	// #1
  404780:	bl	4175a8 <_obstack_newchunk@@Base>
  404784:	ldr	x0, [x19, #24]
  404788:	b	4046d8 <ferror@plt+0x1d38>
  40478c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404790:	ldr	w1, [x21]
  404794:	mov	x3, x23
  404798:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40479c:	ldr	w0, [x0, #1628]
  4047a0:	add	x2, x2, #0x120
  4047a4:	bl	4033d0 <ferror@plt+0xa30>
  4047a8:	ldr	w0, [sp, #88]
  4047ac:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  4047b0:	mov	w2, #0x7f                  	// #127
  4047b4:	str	w2, [x1, #1920]
  4047b8:	bl	402660 <close@plt>
  4047bc:	ldp	x21, x22, [sp, #32]
  4047c0:	ldp	x23, x24, [sp, #48]
  4047c4:	b	404698 <ferror@plt+0x1cf8>
  4047c8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  4047cc:	add	x3, x3, #0x7c8
  4047d0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  4047d4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  4047d8:	add	x3, x3, #0x38
  4047dc:	add	x1, x1, #0x100
  4047e0:	add	x0, x0, #0x110
  4047e4:	mov	w2, #0x424                 	// #1060
  4047e8:	bl	402910 <__assert_fail@plt>
  4047ec:	nop
  4047f0:	mov	x0, x2
  4047f4:	stp	x29, x30, [sp, #-16]!
  4047f8:	mov	w3, #0x1                   	// #1
  4047fc:	mov	x29, sp
  404800:	ldr	x0, [x0]
  404804:	mov	w2, w3
  404808:	add	x0, x0, #0x8
  40480c:	bl	404010 <ferror@plt+0x1670>
  404810:	tst	w0, #0xff
  404814:	b.eq	404820 <ferror@plt+0x1e80>  // b.none
  404818:	ldp	x29, x30, [sp], #16
  40481c:	ret
  404820:	ldp	x29, x30, [sp], #16
  404824:	b	40c508 <ferror@plt+0x9b68>
  404828:	stp	x29, x30, [sp, #-160]!
  40482c:	mov	w3, #0x4                   	// #4
  404830:	mov	x29, sp
  404834:	stp	x19, x20, [sp, #16]
  404838:	mov	x19, x2
  40483c:	mov	w20, w1
  404840:	stp	x21, x22, [sp, #32]
  404844:	mov	x21, x0
  404848:	mov	w2, #0x3                   	// #3
  40484c:	ldr	x0, [x19]
  404850:	add	x0, x0, #0x8
  404854:	bl	404010 <ferror@plt+0x1670>
  404858:	tst	w0, #0xff
  40485c:	b.eq	404878 <ferror@plt+0x1ed8>  // b.none
  404860:	cmp	w20, #0x2
  404864:	b.eq	404934 <ferror@plt+0x1f94>  // b.none
  404868:	ldp	x19, x20, [sp, #16]
  40486c:	ldp	x21, x22, [sp, #32]
  404870:	ldp	x29, x30, [sp], #160
  404874:	ret
  404878:	ldp	x0, x1, [x19, #8]
  40487c:	str	xzr, [sp, #96]
  404880:	ldr	x22, [x1, #8]
  404884:	str	x23, [sp, #48]
  404888:	ldr	x23, [x0, #8]
  40488c:	mov	x0, x22
  404890:	stp	xzr, xzr, [sp, #80]
  404894:	str	xzr, [sp, #104]
  404898:	stp	xzr, xzr, [sp, #128]
  40489c:	bl	402390 <strlen@plt>
  4048a0:	add	x2, sp, #0x60
  4048a4:	mov	x1, x0
  4048a8:	mov	x0, x22
  4048ac:	bl	4026e0 <re_compile_pattern@plt>
  4048b0:	mov	x4, x0
  4048b4:	cbnz	x0, 404994 <ferror@plt+0x1ff4>
  4048b8:	mov	x0, x23
  4048bc:	bl	402390 <strlen@plt>
  4048c0:	cmp	w20, #0x3
  4048c4:	b.eq	404950 <ferror@plt+0x1fb0>  // b.none
  4048c8:	mov	w4, w0
  4048cc:	mov	w2, w0
  4048d0:	add	x5, sp, #0x48
  4048d4:	mov	x1, x23
  4048d8:	add	x0, sp, #0x60
  4048dc:	mov	w3, #0x0                   	// #0
  4048e0:	bl	402630 <re_search@plt>
  4048e4:	cmn	w0, #0x2
  4048e8:	b.eq	404974 <ferror@plt+0x1fd4>  // b.none
  4048ec:	tbnz	w0, #31, 404908 <ferror@plt+0x1f68>
  4048f0:	ldr	x2, [x19, #24]
  4048f4:	add	x3, sp, #0x48
  4048f8:	mov	x1, x23
  4048fc:	mov	x0, x21
  404900:	ldr	x2, [x2, #8]
  404904:	bl	403988 <ferror@plt+0xfe8>
  404908:	add	x0, sp, #0x60
  40490c:	bl	4028d0 <regfree@plt>
  404910:	ldr	x0, [sp, #80]
  404914:	bl	4027c0 <free@plt>
  404918:	ldr	x0, [sp, #88]
  40491c:	bl	4027c0 <free@plt>
  404920:	ldp	x19, x20, [sp, #16]
  404924:	ldp	x21, x22, [sp, #32]
  404928:	ldr	x23, [sp, #48]
  40492c:	ldp	x29, x30, [sp], #160
  404930:	ret
  404934:	mov	x0, x21
  404938:	mov	w1, #0x0                   	// #0
  40493c:	bl	403c60 <ferror@plt+0x12c0>
  404940:	ldp	x19, x20, [sp, #16]
  404944:	ldp	x21, x22, [sp, #32]
  404948:	ldp	x29, x30, [sp], #160
  40494c:	ret
  404950:	mov	w4, w0
  404954:	mov	w2, w0
  404958:	mov	x1, x23
  40495c:	add	x0, sp, #0x60
  404960:	mov	x5, #0x0                   	// #0
  404964:	mov	w3, #0x0                   	// #0
  404968:	bl	402630 <re_search@plt>
  40496c:	cmn	w0, #0x2
  404970:	b.ne	4049b4 <ferror@plt+0x2014>  // b.any
  404974:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404978:	mov	x3, x22
  40497c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404980:	mov	w1, #0x0                   	// #0
  404984:	ldr	w0, [x0, #1628]
  404988:	add	x2, x2, #0x180
  40498c:	bl	4033d0 <ferror@plt+0xa30>
  404990:	b	404908 <ferror@plt+0x1f68>
  404994:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404998:	mov	x3, x22
  40499c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  4049a0:	mov	w1, #0x0                   	// #0
  4049a4:	ldr	w0, [x0, #1628]
  4049a8:	add	x2, x2, #0x158
  4049ac:	bl	4033d0 <ferror@plt+0xa30>
  4049b0:	b	404908 <ferror@plt+0x1f68>
  4049b4:	mov	w1, w0
  4049b8:	mov	x0, x21
  4049bc:	bl	403c60 <ferror@plt+0x12c0>
  4049c0:	b	404908 <ferror@plt+0x1f68>
  4049c4:	nop
  4049c8:	stp	x29, x30, [sp, #-192]!
  4049cc:	mov	w3, #0x4                   	// #4
  4049d0:	mov	x29, sp
  4049d4:	stp	x23, x24, [sp, #48]
  4049d8:	mov	x24, x2
  4049dc:	mov	w23, w1
  4049e0:	stp	x19, x20, [sp, #16]
  4049e4:	mov	x20, x0
  4049e8:	mov	w2, #0x3                   	// #3
  4049ec:	ldr	x0, [x24]
  4049f0:	add	x0, x0, #0x8
  4049f4:	bl	404010 <ferror@plt+0x1670>
  4049f8:	tst	w0, #0xff
  4049fc:	b.eq	404a18 <ferror@plt+0x2078>  // b.none
  404a00:	cmp	w23, #0x2
  404a04:	b.eq	404b30 <ferror@plt+0x2190>  // b.none
  404a08:	ldp	x19, x20, [sp, #16]
  404a0c:	ldp	x23, x24, [sp, #48]
  404a10:	ldp	x29, x30, [sp], #192
  404a14:	ret
  404a18:	ldr	x0, [x24, #16]
  404a1c:	stp	x25, x26, [sp, #64]
  404a20:	ldr	x26, [x0, #8]
  404a24:	stp	xzr, xzr, [sp, #112]
  404a28:	mov	x0, x26
  404a2c:	stp	xzr, xzr, [sp, #128]
  404a30:	stp	xzr, xzr, [sp, #160]
  404a34:	bl	402390 <strlen@plt>
  404a38:	add	x2, sp, #0x80
  404a3c:	mov	x1, x0
  404a40:	mov	x0, x26
  404a44:	bl	4026e0 <re_compile_pattern@plt>
  404a48:	mov	x4, x0
  404a4c:	cbnz	x0, 404b84 <ferror@plt+0x21e4>
  404a50:	ldr	x0, [x24, #8]
  404a54:	stp	x21, x22, [sp, #32]
  404a58:	adrp	x25, 417000 <ferror@plt+0x14660>
  404a5c:	mov	w19, #0x0                   	// #0
  404a60:	add	x25, x25, #0xe98
  404a64:	ldr	x22, [x0, #8]
  404a68:	stp	x27, x28, [sp, #80]
  404a6c:	mov	x0, x22
  404a70:	bl	402390 <strlen@plt>
  404a74:	mov	x27, x0
  404a78:	mov	w21, w0
  404a7c:	b	404ad0 <ferror@plt+0x2130>
  404a80:	add	x1, x22, w19, sxtw
  404a84:	mov	x2, x28
  404a88:	bl	402350 <memcpy@plt>
  404a8c:	ldr	x0, [x20, #24]
  404a90:	add	x0, x0, x28
  404a94:	str	x0, [x20, #24]
  404a98:	cmp	w23, #0x3
  404a9c:	mov	x2, x25
  404aa0:	b.le	404aac <ferror@plt+0x210c>
  404aa4:	ldr	x0, [x24, #24]
  404aa8:	ldr	x2, [x0, #8]
  404aac:	mov	x1, x22
  404ab0:	mov	x0, x20
  404ab4:	add	x3, sp, #0x68
  404ab8:	bl	403988 <ferror@plt+0xfe8>
  404abc:	ldp	x0, x1, [sp, #112]
  404ac0:	ldr	w0, [x0]
  404ac4:	ldr	w19, [x1]
  404ac8:	cmp	w0, w19
  404acc:	b.eq	404c4c <ferror@plt+0x22ac>  // b.none
  404ad0:	cmp	w19, w21
  404ad4:	b.gt	404bbc <ferror@plt+0x221c>
  404ad8:	sub	w28, w21, w19
  404adc:	add	x5, sp, #0x68
  404ae0:	mov	w4, w28
  404ae4:	mov	w3, w19
  404ae8:	mov	w2, w21
  404aec:	mov	x1, x22
  404af0:	add	x0, sp, #0x80
  404af4:	bl	402630 <re_search@plt>
  404af8:	tbnz	w0, #31, 404c08 <ferror@plt+0x2268>
  404afc:	cmp	w19, w0
  404b00:	b.ge	404a98 <ferror@plt+0x20f8>  // b.tcont
  404b04:	sub	w3, w0, w19
  404b08:	ldp	x0, x1, [x20, #24]
  404b0c:	sxtw	x28, w3
  404b10:	sub	x1, x1, x0
  404b14:	cmp	x1, w3, sxtw
  404b18:	b.cs	404a80 <ferror@plt+0x20e0>  // b.hs, b.nlast
  404b1c:	mov	x0, x20
  404b20:	mov	x1, x28
  404b24:	bl	4175a8 <_obstack_newchunk@@Base>
  404b28:	ldr	x0, [x20, #24]
  404b2c:	b	404a80 <ferror@plt+0x20e0>
  404b30:	ldr	x0, [x24, #8]
  404b34:	stp	x21, x22, [sp, #32]
  404b38:	ldr	x21, [x0, #8]
  404b3c:	mov	x0, x21
  404b40:	bl	402390 <strlen@plt>
  404b44:	mov	x19, x0
  404b48:	ldp	x0, x2, [x20, #24]
  404b4c:	sub	x2, x2, x0
  404b50:	cmp	x19, x2
  404b54:	b.hi	404c70 <ferror@plt+0x22d0>  // b.pmore
  404b58:	mov	x1, x21
  404b5c:	mov	x2, x19
  404b60:	bl	402350 <memcpy@plt>
  404b64:	ldr	x0, [x20, #24]
  404b68:	ldp	x21, x22, [sp, #32]
  404b6c:	add	x0, x0, x19
  404b70:	str	x0, [x20, #24]
  404b74:	ldp	x19, x20, [sp, #16]
  404b78:	ldp	x23, x24, [sp, #48]
  404b7c:	ldp	x29, x30, [sp], #192
  404b80:	ret
  404b84:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404b88:	mov	x3, x26
  404b8c:	mov	w1, #0x0                   	// #0
  404b90:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404b94:	ldr	w0, [x0, #1628]
  404b98:	add	x2, x2, #0x1a8
  404b9c:	bl	4033d0 <ferror@plt+0xa30>
  404ba0:	ldr	x0, [sp, #128]
  404ba4:	bl	4027c0 <free@plt>
  404ba8:	ldp	x19, x20, [sp, #16]
  404bac:	ldp	x23, x24, [sp, #48]
  404bb0:	ldp	x25, x26, [sp, #64]
  404bb4:	ldp	x29, x30, [sp], #192
  404bb8:	ret
  404bbc:	ldp	x3, x0, [x20, #24]
  404bc0:	cmp	x3, x0
  404bc4:	b.eq	404c8c <ferror@plt+0x22ec>  // b.none
  404bc8:	add	x0, x3, #0x1
  404bcc:	str	x0, [x20, #24]
  404bd0:	strb	wzr, [x3]
  404bd4:	add	x0, sp, #0x80
  404bd8:	bl	4028d0 <regfree@plt>
  404bdc:	ldr	x0, [sp, #112]
  404be0:	bl	4027c0 <free@plt>
  404be4:	ldr	x0, [sp, #120]
  404be8:	bl	4027c0 <free@plt>
  404bec:	ldp	x19, x20, [sp, #16]
  404bf0:	ldp	x21, x22, [sp, #32]
  404bf4:	ldp	x23, x24, [sp, #48]
  404bf8:	ldp	x25, x26, [sp, #64]
  404bfc:	ldp	x27, x28, [sp, #80]
  404c00:	ldp	x29, x30, [sp], #192
  404c04:	ret
  404c08:	cmn	w0, #0x2
  404c0c:	b.eq	404cb4 <ferror@plt+0x2314>  // b.none
  404c10:	cmp	w19, w27
  404c14:	ldp	x3, x0, [x20, #24]
  404c18:	b.ge	404bc0 <ferror@plt+0x2220>  // b.tcont
  404c1c:	sub	x0, x0, x3
  404c20:	sxtw	x21, w28
  404c24:	cmp	x0, w28, sxtw
  404c28:	b.cc	404ca0 <ferror@plt+0x2300>  // b.lo, b.ul, b.last
  404c2c:	mov	x0, x3
  404c30:	add	x1, x22, w19, sxtw
  404c34:	mov	x2, x21
  404c38:	bl	402350 <memcpy@plt>
  404c3c:	ldp	x3, x0, [x20, #24]
  404c40:	add	x3, x3, x21
  404c44:	str	x3, [x20, #24]
  404c48:	b	404bc0 <ferror@plt+0x2220>
  404c4c:	ldp	x0, x1, [x20, #24]
  404c50:	cmp	x1, x0
  404c54:	b.eq	404cd8 <ferror@plt+0x2338>  // b.none
  404c58:	add	x1, x0, #0x1
  404c5c:	str	x1, [x20, #24]
  404c60:	ldrb	w1, [x22, w19, sxtw]
  404c64:	add	w19, w19, #0x1
  404c68:	strb	w1, [x0]
  404c6c:	b	404ad0 <ferror@plt+0x2130>
  404c70:	mov	x1, x19
  404c74:	mov	x0, x20
  404c78:	bl	4175a8 <_obstack_newchunk@@Base>
  404c7c:	ldr	x1, [x24, #8]
  404c80:	ldr	x0, [x20, #24]
  404c84:	ldr	x21, [x1, #8]
  404c88:	b	404b58 <ferror@plt+0x21b8>
  404c8c:	mov	x0, x20
  404c90:	mov	x1, #0x1                   	// #1
  404c94:	bl	4175a8 <_obstack_newchunk@@Base>
  404c98:	ldr	x3, [x20, #24]
  404c9c:	b	404bc8 <ferror@plt+0x2228>
  404ca0:	mov	x1, x21
  404ca4:	mov	x0, x20
  404ca8:	bl	4175a8 <_obstack_newchunk@@Base>
  404cac:	ldr	x3, [x20, #24]
  404cb0:	b	404c2c <ferror@plt+0x228c>
  404cb4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404cb8:	mov	x3, x26
  404cbc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404cc0:	mov	w1, #0x0                   	// #0
  404cc4:	ldr	w0, [x0, #1628]
  404cc8:	add	x2, x2, #0x180
  404ccc:	bl	4033d0 <ferror@plt+0xa30>
  404cd0:	ldp	x3, x0, [x20, #24]
  404cd4:	b	404bc0 <ferror@plt+0x2220>
  404cd8:	mov	x0, x20
  404cdc:	mov	x1, #0x1                   	// #1
  404ce0:	bl	4175a8 <_obstack_newchunk@@Base>
  404ce4:	ldr	x0, [x20, #24]
  404ce8:	b	404c58 <ferror@plt+0x22b8>
  404cec:	nop
  404cf0:	stp	x29, x30, [sp, #-80]!
  404cf4:	cmp	w1, #0x1
  404cf8:	mov	x29, sp
  404cfc:	b.eq	404e44 <ferror@plt+0x24a4>  // b.none
  404d00:	b.le	404e0c <ferror@plt+0x246c>
  404d04:	sub	w1, w1, #0x2
  404d08:	stp	x19, x20, [sp, #16]
  404d0c:	mov	x19, #0x1                   	// #1
  404d10:	stp	x21, x22, [sp, #32]
  404d14:	mov	x21, x2
  404d18:	add	x22, x1, #0x2
  404d1c:	stp	x23, x24, [sp, #48]
  404d20:	adrp	x23, 431000 <_obstack_memory_used@@Base+0x19878>
  404d24:	adrp	x24, 431000 <_obstack_memory_used@@Base+0x19878>
  404d28:	add	x23, x23, #0x660
  404d2c:	add	x24, x24, #0x65c
  404d30:	b	404d50 <ferror@plt+0x23b0>
  404d34:	ldr	x3, [x21]
  404d38:	ldr	w0, [x24]
  404d3c:	ldr	x3, [x3, #8]
  404d40:	bl	4033d0 <ferror@plt+0xa30>
  404d44:	add	x19, x19, #0x1
  404d48:	cmp	x22, x19
  404d4c:	b.eq	404e00 <ferror@plt+0x2460>  // b.none
  404d50:	ldr	x0, [x21, x19, lsl #3]
  404d54:	add	x1, sp, #0x48
  404d58:	mov	w2, #0xa                   	// #10
  404d5c:	ldr	x0, [x0, #8]
  404d60:	bl	402790 <strtol@plt>
  404d64:	mov	x20, x0
  404d68:	ldr	x1, [sp, #72]
  404d6c:	ldrb	w0, [x1]
  404d70:	cbnz	w0, 404d90 <ferror@plt+0x23f0>
  404d74:	bl	402770 <__ctype_b_loc@plt>
  404d78:	ldr	x1, [x21, x19, lsl #3]
  404d7c:	ldr	x0, [x0]
  404d80:	ldr	x1, [x1, #8]
  404d84:	ldrb	w1, [x1]
  404d88:	ldrh	w0, [x0, x1, lsl #1]
  404d8c:	tbz	w0, #13, 404e14 <ferror@plt+0x2474>
  404d90:	ldr	w0, [x23]
  404d94:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404d98:	mov	x1, #0x0                   	// #0
  404d9c:	add	x2, x2, #0x1c8
  404da0:	cbnz	w0, 404d34 <ferror@plt+0x2394>
  404da4:	ldr	x0, [x21, x19, lsl #3]
  404da8:	ldr	x0, [x0, #8]
  404dac:	bl	40faa8 <ferror@plt+0xd108>
  404db0:	mov	x20, x0
  404db4:	cbz	x0, 404e20 <ferror@plt+0x2480>
  404db8:	bl	40f598 <ferror@plt+0xcbf8>
  404dbc:	mov	x0, x20
  404dc0:	bl	4170d0 <ferror@plt+0x14730>
  404dc4:	cmn	w0, #0x1
  404dc8:	b.ne	404d44 <ferror@plt+0x23a4>  // b.any
  404dcc:	bl	402920 <__errno_location@plt>
  404dd0:	ldr	w1, [x0]
  404dd4:	ldr	x3, [x21, x19, lsl #3]
  404dd8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404ddc:	ldr	w20, [x24]
  404de0:	add	x2, x2, #0x1f0
  404de4:	add	x19, x19, #0x1
  404de8:	ldr	x3, [x3, #8]
  404dec:	mov	w0, w20
  404df0:	bl	4033d0 <ferror@plt+0xa30>
  404df4:	cmp	x22, x19
  404df8:	b.ne	404d50 <ferror@plt+0x23b0>  // b.any
  404dfc:	nop
  404e00:	ldp	x19, x20, [sp, #16]
  404e04:	ldp	x21, x22, [sp, #32]
  404e08:	ldp	x23, x24, [sp, #48]
  404e0c:	ldp	x29, x30, [sp], #80
  404e10:	ret
  404e14:	mov	w0, w20
  404e18:	bl	40f5b0 <ferror@plt+0xcc10>
  404e1c:	b	404d44 <ferror@plt+0x23a4>
  404e20:	bl	402920 <__errno_location@plt>
  404e24:	ldr	w1, [x0]
  404e28:	ldr	x3, [x21, x19, lsl #3]
  404e2c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404e30:	ldr	w0, [x24]
  404e34:	add	x2, x2, #0x208
  404e38:	ldr	x3, [x3, #8]
  404e3c:	bl	4033d0 <ferror@plt+0xa30>
  404e40:	b	404d44 <ferror@plt+0x23a4>
  404e44:	bl	40f628 <ferror@plt+0xcc88>
  404e48:	ldp	x29, x30, [sp], #80
  404e4c:	ret
  404e50:	stp	x29, x30, [sp, #-64]!
  404e54:	mov	x29, sp
  404e58:	stp	x19, x20, [sp, #16]
  404e5c:	mov	x19, x1
  404e60:	mov	x20, x2
  404e64:	stp	x21, x22, [sp, #32]
  404e68:	mov	x22, x0
  404e6c:	ldrb	w1, [x1]
  404e70:	cbnz	w1, 404ea8 <ferror@plt+0x2508>
  404e74:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404e78:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404e7c:	ldr	x3, [x22]
  404e80:	str	wzr, [x20]
  404e84:	add	x2, x2, #0x220
  404e88:	mov	w19, #0x1                   	// #1
  404e8c:	ldr	w0, [x0, #1628]
  404e90:	bl	4033d0 <ferror@plt+0xa30>
  404e94:	mov	w0, w19
  404e98:	ldp	x19, x20, [sp, #16]
  404e9c:	ldp	x21, x22, [sp, #32]
  404ea0:	ldp	x29, x30, [sp], #64
  404ea4:	ret
  404ea8:	bl	402920 <__errno_location@plt>
  404eac:	mov	x21, x0
  404eb0:	add	x1, sp, #0x38
  404eb4:	mov	x0, x19
  404eb8:	mov	w2, #0xa                   	// #10
  404ebc:	str	wzr, [x21]
  404ec0:	bl	402790 <strtol@plt>
  404ec4:	str	w0, [x20]
  404ec8:	ldr	x1, [sp, #56]
  404ecc:	ldrb	w0, [x1]
  404ed0:	cbnz	w0, 404f18 <ferror@plt+0x2578>
  404ed4:	bl	402770 <__ctype_b_loc@plt>
  404ed8:	ldrb	w1, [x19]
  404edc:	ldr	x0, [x0]
  404ee0:	ldrh	w0, [x0, x1, lsl #1]
  404ee4:	tbnz	w0, #13, 404f4c <ferror@plt+0x25ac>
  404ee8:	ldr	w0, [x21]
  404eec:	mov	w19, #0x1                   	// #1
  404ef0:	cmp	w0, #0x22
  404ef4:	b.ne	404e94 <ferror@plt+0x24f4>  // b.any
  404ef8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404efc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404f00:	ldr	x3, [x22]
  404f04:	add	x2, x2, #0x280
  404f08:	ldr	w0, [x0, #1628]
  404f0c:	mov	w1, #0x0                   	// #0
  404f10:	bl	4033d0 <ferror@plt+0xa30>
  404f14:	b	404e94 <ferror@plt+0x24f4>
  404f18:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404f1c:	mov	w1, #0x0                   	// #0
  404f20:	ldr	x3, [x22]
  404f24:	mov	w19, #0x0                   	// #0
  404f28:	ldr	w0, [x0, #1628]
  404f2c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404f30:	add	x2, x2, #0x1c8
  404f34:	bl	4033d0 <ferror@plt+0xa30>
  404f38:	mov	w0, w19
  404f3c:	ldp	x19, x20, [sp, #16]
  404f40:	ldp	x21, x22, [sp, #32]
  404f44:	ldp	x29, x30, [sp], #64
  404f48:	ret
  404f4c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  404f50:	mov	w1, #0x0                   	// #0
  404f54:	ldr	x3, [x22]
  404f58:	mov	w19, #0x1                   	// #1
  404f5c:	ldr	w0, [x0, #1628]
  404f60:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  404f64:	add	x2, x2, #0x250
  404f68:	bl	4033d0 <ferror@plt+0xa30>
  404f6c:	mov	w0, w19
  404f70:	ldp	x19, x20, [sp, #16]
  404f74:	ldp	x21, x22, [sp, #32]
  404f78:	ldp	x29, x30, [sp], #64
  404f7c:	ret
  404f80:	stp	x29, x30, [sp, #-64]!
  404f84:	mov	w3, #0x4                   	// #4
  404f88:	mov	x29, sp
  404f8c:	stp	x19, x20, [sp, #16]
  404f90:	mov	x19, x2
  404f94:	mov	w20, w1
  404f98:	stp	x21, x22, [sp, #32]
  404f9c:	mov	x21, x0
  404fa0:	mov	w2, #0x3                   	// #3
  404fa4:	ldr	x0, [x19]
  404fa8:	str	wzr, [sp, #56]
  404fac:	add	x0, x0, #0x8
  404fb0:	bl	404010 <ferror@plt+0x1670>
  404fb4:	tst	w0, #0xff
  404fb8:	b.ne	4050c4 <ferror@plt+0x2724>  // b.any
  404fbc:	cmp	w20, #0x1
  404fc0:	b.le	405098 <ferror@plt+0x26f8>
  404fc4:	ldr	x0, [x19, #8]
  404fc8:	ldr	x0, [x0, #8]
  404fcc:	bl	402390 <strlen@plt>
  404fd0:	mov	x22, x0
  404fd4:	str	w22, [sp, #60]
  404fd8:	cmp	w20, #0x2
  404fdc:	ldr	x0, [x19]
  404fe0:	b.eq	405118 <ferror@plt+0x2778>  // b.none
  404fe4:	ldr	x1, [x19, #16]
  404fe8:	ldr	x1, [x1, #8]
  404fec:	add	x0, x0, #0x8
  404ff0:	add	x2, sp, #0x38
  404ff4:	bl	404e50 <ferror@plt+0x24b0>
  404ff8:	tst	w0, #0xff
  404ffc:	b.eq	4050b4 <ferror@plt+0x2714>  // b.none
  405000:	cmp	w20, #0x3
  405004:	b.le	405028 <ferror@plt+0x2688>
  405008:	ldr	x1, [x19, #24]
  40500c:	add	x2, sp, #0x3c
  405010:	ldr	x0, [x19]
  405014:	ldr	x1, [x1, #8]
  405018:	add	x0, x0, #0x8
  40501c:	bl	404e50 <ferror@plt+0x24b0>
  405020:	tst	w0, #0xff
  405024:	b.eq	4050b4 <ferror@plt+0x2714>  // b.none
  405028:	ldr	w1, [sp, #56]
  40502c:	tbnz	w1, #31, 4050b4 <ferror@plt+0x2714>
  405030:	ldr	w3, [sp, #60]
  405034:	cmp	w3, #0x0
  405038:	ccmp	w1, w22, #0x0, gt
  40503c:	b.ge	4050b4 <ferror@plt+0x2714>  // b.tcont
  405040:	add	w0, w1, w3
  405044:	cmp	w0, w22
  405048:	b.le	405054 <ferror@plt+0x26b4>
  40504c:	sub	w3, w22, w1
  405050:	str	w3, [sp, #60]
  405054:	ldp	x0, x4, [x21, #24]
  405058:	sxtw	x20, w3
  40505c:	sub	x4, x4, x0
  405060:	cmp	x4, w3, sxtw
  405064:	b.cc	405124 <ferror@plt+0x2784>  // b.lo, b.ul, b.last
  405068:	ldr	x3, [x19, #8]
  40506c:	mov	x2, x20
  405070:	ldr	x3, [x3, #8]
  405074:	add	x1, x3, w1, sxtw
  405078:	bl	402350 <memcpy@plt>
  40507c:	ldr	x0, [x21, #24]
  405080:	add	x0, x0, x20
  405084:	str	x0, [x21, #24]
  405088:	ldp	x19, x20, [sp, #16]
  40508c:	ldp	x21, x22, [sp, #32]
  405090:	ldp	x29, x30, [sp], #64
  405094:	ret
  405098:	ldr	x0, [x19]
  40509c:	adrp	x1, 417000 <ferror@plt+0x14660>
  4050a0:	add	x2, sp, #0x38
  4050a4:	add	x1, x1, #0xe98
  4050a8:	add	x0, x0, #0x8
  4050ac:	str	wzr, [sp, #60]
  4050b0:	bl	404e50 <ferror@plt+0x24b0>
  4050b4:	ldp	x19, x20, [sp, #16]
  4050b8:	ldp	x21, x22, [sp, #32]
  4050bc:	ldp	x29, x30, [sp], #64
  4050c0:	ret
  4050c4:	cmp	w20, #0x2
  4050c8:	b.ne	4050b4 <ferror@plt+0x2714>  // b.any
  4050cc:	ldr	x0, [x19, #8]
  4050d0:	ldr	x22, [x0, #8]
  4050d4:	mov	x0, x22
  4050d8:	bl	402390 <strlen@plt>
  4050dc:	mov	x20, x0
  4050e0:	ldp	x0, x2, [x21, #24]
  4050e4:	sub	x2, x2, x0
  4050e8:	cmp	x20, x2
  4050ec:	b.hi	40513c <ferror@plt+0x279c>  // b.pmore
  4050f0:	mov	x1, x22
  4050f4:	mov	x2, x20
  4050f8:	bl	402350 <memcpy@plt>
  4050fc:	ldr	x0, [x21, #24]
  405100:	add	x0, x0, x20
  405104:	str	x0, [x21, #24]
  405108:	ldp	x19, x20, [sp, #16]
  40510c:	ldp	x21, x22, [sp, #32]
  405110:	ldp	x29, x30, [sp], #64
  405114:	ret
  405118:	adrp	x1, 417000 <ferror@plt+0x14660>
  40511c:	add	x1, x1, #0xe98
  405120:	b	404fec <ferror@plt+0x264c>
  405124:	mov	x1, x20
  405128:	mov	x0, x21
  40512c:	bl	4175a8 <_obstack_newchunk@@Base>
  405130:	ldr	w1, [sp, #56]
  405134:	ldr	x0, [x21, #24]
  405138:	b	405068 <ferror@plt+0x26c8>
  40513c:	mov	x1, x20
  405140:	mov	x0, x21
  405144:	bl	4175a8 <_obstack_newchunk@@Base>
  405148:	ldr	x1, [x19, #8]
  40514c:	ldr	x0, [x21, #24]
  405150:	ldr	x22, [x1, #8]
  405154:	b	4050f0 <ferror@plt+0x2750>
  405158:	stp	x29, x30, [sp, #-48]!
  40515c:	mov	w3, #0x2                   	// #2
  405160:	mov	x29, sp
  405164:	stp	x19, x20, [sp, #16]
  405168:	mov	x19, x2
  40516c:	mov	w20, w1
  405170:	mov	w2, #0x1                   	// #1
  405174:	str	wzr, [sp, #44]
  405178:	ldr	x0, [x19]
  40517c:	add	x0, x0, #0x8
  405180:	bl	404010 <ferror@plt+0x1670>
  405184:	cmp	w20, #0x1
  405188:	b.gt	4051f4 <ferror@plt+0x2854>
  40518c:	ldr	w3, [sp, #44]
  405190:	cmp	w3, #0xff
  405194:	b.hi	4051d0 <ferror@plt+0x2830>  // b.pmore
  405198:	mov	x0, #0x0                   	// #0
  40519c:	bl	408b08 <ferror@plt+0x6168>
  4051a0:	bl	408a70 <ferror@plt+0x60d0>
  4051a4:	ldr	w1, [sp, #44]
  4051a8:	cbnz	w1, 4051c0 <ferror@plt+0x2820>
  4051ac:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4051b0:	ldr	w0, [x0, #3384]
  4051b4:	cbz	w0, 4051cc <ferror@plt+0x282c>
  4051b8:	mov	w1, w0
  4051bc:	str	w0, [sp, #44]
  4051c0:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x19878>
  4051c4:	mov	w0, w1
  4051c8:	str	w1, [x2, #860]
  4051cc:	bl	4023c0 <exit@plt>
  4051d0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4051d4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  4051d8:	mov	w1, #0x0                   	// #0
  4051dc:	add	x2, x2, #0x2b0
  4051e0:	ldr	w0, [x0, #1628]
  4051e4:	bl	4033d0 <ferror@plt+0xa30>
  4051e8:	mov	w0, #0x1                   	// #1
  4051ec:	str	w0, [sp, #44]
  4051f0:	b	405198 <ferror@plt+0x27f8>
  4051f4:	ldp	x0, x1, [x19]
  4051f8:	add	x2, sp, #0x2c
  4051fc:	ldr	x1, [x1, #8]
  405200:	add	x0, x0, #0x8
  405204:	bl	404e50 <ferror@plt+0x24b0>
  405208:	tst	w0, #0xff
  40520c:	b.ne	40518c <ferror@plt+0x27ec>  // b.any
  405210:	b	4051e8 <ferror@plt+0x2848>
  405214:	nop
  405218:	stp	x29, x30, [sp, #-48]!
  40521c:	mov	w3, #0x2                   	// #2
  405220:	mov	x29, sp
  405224:	stp	x19, x20, [sp, #16]
  405228:	mov	x19, x2
  40522c:	mov	w20, w1
  405230:	mov	w2, #0x1                   	// #1
  405234:	str	wzr, [sp, #44]
  405238:	ldr	x0, [x19]
  40523c:	add	x0, x0, #0x8
  405240:	bl	404010 <ferror@plt+0x1670>
  405244:	tst	w0, #0xff
  405248:	b.ne	405278 <ferror@plt+0x28d8>  // b.any
  40524c:	cmp	w20, #0x1
  405250:	b.le	405270 <ferror@plt+0x28d0>
  405254:	ldp	x0, x1, [x19]
  405258:	add	x2, sp, #0x2c
  40525c:	ldr	x1, [x1, #8]
  405260:	add	x0, x0, #0x8
  405264:	bl	404e50 <ferror@plt+0x24b0>
  405268:	tst	w0, #0xff
  40526c:	b.eq	405278 <ferror@plt+0x28d8>  // b.none
  405270:	ldr	w0, [sp, #44]
  405274:	bl	40f300 <ferror@plt+0xc960>
  405278:	ldp	x19, x20, [sp, #16]
  40527c:	ldp	x29, x30, [sp], #48
  405280:	ret
  405284:	nop
  405288:	stp	x29, x30, [sp, #-64]!
  40528c:	mov	w3, #0x2                   	// #2
  405290:	mov	x29, sp
  405294:	stp	x19, x20, [sp, #16]
  405298:	mov	x19, x2
  40529c:	mov	w20, w1
  4052a0:	str	x21, [sp, #32]
  4052a4:	mov	x21, x0
  4052a8:	ldr	x0, [x19]
  4052ac:	mov	w2, w3
  4052b0:	add	x0, x0, #0x8
  4052b4:	bl	404010 <ferror@plt+0x1670>
  4052b8:	tst	w0, #0xff
  4052bc:	b.ne	4052f8 <ferror@plt+0x2958>  // b.any
  4052c0:	cmp	w20, #0x1
  4052c4:	ldr	x0, [x19]
  4052c8:	b.le	405308 <ferror@plt+0x2968>
  4052cc:	ldr	x1, [x19, #8]
  4052d0:	ldr	x1, [x1, #8]
  4052d4:	add	x0, x0, #0x8
  4052d8:	add	x2, sp, #0x3c
  4052dc:	bl	404e50 <ferror@plt+0x24b0>
  4052e0:	tst	w0, #0xff
  4052e4:	b.eq	4052f8 <ferror@plt+0x2958>  // b.none
  4052e8:	ldr	w1, [sp, #60]
  4052ec:	mov	x0, x21
  4052f0:	add	w1, w1, #0x1
  4052f4:	bl	403c60 <ferror@plt+0x12c0>
  4052f8:	ldp	x19, x20, [sp, #16]
  4052fc:	ldr	x21, [sp, #32]
  405300:	ldp	x29, x30, [sp], #64
  405304:	ret
  405308:	adrp	x1, 417000 <ferror@plt+0x14660>
  40530c:	add	x1, x1, #0xe98
  405310:	b	4052d4 <ferror@plt+0x2934>
  405314:	nop
  405318:	stp	x29, x30, [sp, #-64]!
  40531c:	mov	w3, #0x2                   	// #2
  405320:	mov	x29, sp
  405324:	stp	x19, x20, [sp, #16]
  405328:	mov	x19, x2
  40532c:	mov	w20, w1
  405330:	str	x21, [sp, #32]
  405334:	mov	x21, x0
  405338:	ldr	x0, [x19]
  40533c:	mov	w2, w3
  405340:	add	x0, x0, #0x8
  405344:	bl	404010 <ferror@plt+0x1670>
  405348:	tst	w0, #0xff
  40534c:	b.ne	405388 <ferror@plt+0x29e8>  // b.any
  405350:	cmp	w20, #0x1
  405354:	ldr	x0, [x19]
  405358:	b.le	405398 <ferror@plt+0x29f8>
  40535c:	ldr	x1, [x19, #8]
  405360:	ldr	x1, [x1, #8]
  405364:	add	x0, x0, #0x8
  405368:	add	x2, sp, #0x3c
  40536c:	bl	404e50 <ferror@plt+0x24b0>
  405370:	tst	w0, #0xff
  405374:	b.eq	405388 <ferror@plt+0x29e8>  // b.none
  405378:	ldr	w1, [sp, #60]
  40537c:	mov	x0, x21
  405380:	sub	w1, w1, #0x1
  405384:	bl	403c60 <ferror@plt+0x12c0>
  405388:	ldp	x19, x20, [sp, #16]
  40538c:	ldr	x21, [sp, #32]
  405390:	ldp	x29, x30, [sp], #64
  405394:	ret
  405398:	adrp	x1, 417000 <ferror@plt+0x14660>
  40539c:	add	x1, x1, #0xe98
  4053a0:	b	405364 <ferror@plt+0x29c4>
  4053a4:	nop
  4053a8:	stp	x29, x30, [sp, #-64]!
  4053ac:	mov	w5, #0xa                   	// #10
  4053b0:	mov	w4, #0x1                   	// #1
  4053b4:	mov	x29, sp
  4053b8:	stp	x19, x20, [sp, #16]
  4053bc:	mov	x19, x0
  4053c0:	mov	x20, x2
  4053c4:	ldr	x0, [x2]
  4053c8:	mov	w3, #0x4                   	// #4
  4053cc:	mov	w2, #0x2                   	// #2
  4053d0:	stp	x21, x22, [sp, #32]
  4053d4:	add	x0, x0, #0x8
  4053d8:	mov	w22, w1
  4053dc:	stp	wzr, w5, [sp, #52]
  4053e0:	str	w4, [sp, #60]
  4053e4:	bl	404010 <ferror@plt+0x1670>
  4053e8:	ands	w21, w0, #0xff
  4053ec:	b.ne	405480 <ferror@plt+0x2ae0>  // b.any
  4053f0:	cmp	w22, #0x2
  4053f4:	b.le	405490 <ferror@plt+0x2af0>
  4053f8:	ldr	x0, [x20, #16]
  4053fc:	ldr	x1, [x0, #8]
  405400:	ldrb	w0, [x1]
  405404:	cbz	w0, 405420 <ferror@plt+0x2a80>
  405408:	ldr	x0, [x20]
  40540c:	add	x2, sp, #0x38
  405410:	add	x0, x0, #0x8
  405414:	bl	404e50 <ferror@plt+0x24b0>
  405418:	tst	w0, #0xff
  40541c:	b.eq	405480 <ferror@plt+0x2ae0>  // b.none
  405420:	ldr	w3, [sp, #56]
  405424:	sub	w0, w3, #0x1
  405428:	cmp	w0, #0x23
  40542c:	b.hi	405614 <ferror@plt+0x2c74>  // b.pmore
  405430:	cmp	w22, #0x3
  405434:	b.eq	4054a0 <ferror@plt+0x2b00>  // b.none
  405438:	ldr	x1, [x20, #24]
  40543c:	add	x2, sp, #0x3c
  405440:	ldr	x0, [x20]
  405444:	ldr	x1, [x1, #8]
  405448:	add	x0, x0, #0x8
  40544c:	bl	404e50 <ferror@plt+0x24b0>
  405450:	tst	w0, #0xff
  405454:	b.eq	405480 <ferror@plt+0x2ae0>  // b.none
  405458:	ldr	w0, [sp, #60]
  40545c:	tbnz	w0, #31, 405670 <ferror@plt+0x2cd0>
  405460:	ldr	x0, [x20, #8]
  405464:	ldr	x0, [x0, #8]
  405468:	ldrb	w1, [x0]
  40546c:	cbz	w1, 4056a0 <ferror@plt+0x2d00>
  405470:	add	x1, sp, #0x34
  405474:	bl	409e68 <ferror@plt+0x74c8>
  405478:	tst	w0, #0xff
  40547c:	b.eq	4054d4 <ferror@plt+0x2b34>  // b.none
  405480:	ldp	x19, x20, [sp, #16]
  405484:	ldp	x21, x22, [sp, #32]
  405488:	ldp	x29, x30, [sp], #64
  40548c:	ret
  405490:	ldr	w3, [sp, #56]
  405494:	sub	w0, w3, #0x1
  405498:	cmp	w0, #0x23
  40549c:	b.hi	405684 <ferror@plt+0x2ce4>  // b.pmore
  4054a0:	ldr	w0, [sp, #60]
  4054a4:	tbnz	w0, #31, 405644 <ferror@plt+0x2ca4>
  4054a8:	cmp	w22, #0x1
  4054ac:	b.gt	405460 <ferror@plt+0x2ac0>
  4054b0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4054b4:	adrp	x3, 417000 <ferror@plt+0x14660>
  4054b8:	add	x3, x3, #0xe98
  4054bc:	ldr	w0, [x0, #1628]
  4054c0:	b.eq	4056a8 <ferror@plt+0x2d08>  // b.none
  4054c4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  4054c8:	mov	w1, #0x0                   	// #0
  4054cc:	add	x2, x2, #0x220
  4054d0:	bl	4033d0 <ferror@plt+0xa30>
  4054d4:	ldp	w1, w2, [sp, #52]
  4054d8:	cmp	w2, #0x1
  4054dc:	b.eq	4056ec <ferror@plt+0x2d4c>  // b.none
  4054e0:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  4054e4:	add	x20, x20, #0x678
  4054e8:	strb	wzr, [x20, #263]
  4054ec:	tbz	w1, #31, 4054f8 <ferror@plt+0x2b58>
  4054f0:	neg	w1, w1
  4054f4:	mov	w21, #0x1                   	// #1
  4054f8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  4054fc:	add	x20, x20, #0x107
  405500:	add	x0, x0, #0x7c8
  405504:	nop
  405508:	udiv	w3, w1, w2
  40550c:	cmp	w1, w2
  405510:	mov	x5, x20
  405514:	msub	w4, w3, w2, w1
  405518:	mov	w1, w3
  40551c:	ldrb	w3, [x0, w4, uxtw]
  405520:	strb	w3, [x20, #-1]!
  405524:	b.cs	405508 <ferror@plt+0x2b68>  // b.hs, b.nlast
  405528:	cbz	w21, 4056b4 <ferror@plt+0x2d14>
  40552c:	sub	x21, x5, #0x2
  405530:	mov	w0, #0x2d                  	// #45
  405534:	sturb	w0, [x20, #-1]
  405538:	ldp	x0, x1, [x19, #24]
  40553c:	cmp	x1, x0
  405540:	b.eq	4056d8 <ferror@plt+0x2d38>  // b.none
  405544:	add	x1, x0, #0x1
  405548:	add	x20, x21, #0x1
  40554c:	str	x1, [x19, #24]
  405550:	mov	w1, #0x2d                  	// #45
  405554:	strb	w1, [x0]
  405558:	mov	x0, x20
  40555c:	bl	402390 <strlen@plt>
  405560:	ldr	w1, [sp, #60]
  405564:	mov	w21, #0x30                  	// #48
  405568:	sub	w0, w1, w0
  40556c:	sub	w0, w0, #0x1
  405570:	str	w0, [sp, #60]
  405574:	tbz	w0, #31, 405598 <ferror@plt+0x2bf8>
  405578:	b	4055d0 <ferror@plt+0x2c30>
  40557c:	add	x1, x0, #0x1
  405580:	str	x1, [x19, #24]
  405584:	strb	w21, [x0]
  405588:	ldr	w0, [sp, #60]
  40558c:	sub	w0, w0, #0x1
  405590:	str	w0, [sp, #60]
  405594:	tbnz	w0, #31, 4055d0 <ferror@plt+0x2c30>
  405598:	ldp	x0, x1, [x19, #24]
  40559c:	cmp	x1, x0
  4055a0:	b.ne	40557c <ferror@plt+0x2bdc>  // b.any
  4055a4:	mov	x0, x19
  4055a8:	mov	x1, #0x1                   	// #1
  4055ac:	bl	4175a8 <_obstack_newchunk@@Base>
  4055b0:	ldr	x0, [x19, #24]
  4055b4:	add	x1, x0, #0x1
  4055b8:	str	x1, [x19, #24]
  4055bc:	strb	w21, [x0]
  4055c0:	ldr	w0, [sp, #60]
  4055c4:	sub	w0, w0, #0x1
  4055c8:	str	w0, [sp, #60]
  4055cc:	tbz	w0, #31, 405598 <ferror@plt+0x2bf8>
  4055d0:	mov	x0, x20
  4055d4:	bl	402390 <strlen@plt>
  4055d8:	mov	x21, x0
  4055dc:	ldp	x0, x1, [x19, #24]
  4055e0:	sub	x1, x1, x0
  4055e4:	cmp	x21, x1
  4055e8:	b.hi	4056c4 <ferror@plt+0x2d24>  // b.pmore
  4055ec:	mov	x1, x20
  4055f0:	mov	x2, x21
  4055f4:	bl	402350 <memcpy@plt>
  4055f8:	ldr	x0, [x19, #24]
  4055fc:	add	x0, x0, x21
  405600:	str	x0, [x19, #24]
  405604:	ldp	x19, x20, [sp, #16]
  405608:	ldp	x21, x22, [sp, #32]
  40560c:	ldp	x29, x30, [sp], #64
  405610:	ret
  405614:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  405618:	ldr	w0, [x0, #1628]
  40561c:	ldr	x1, [x20]
  405620:	ldr	x4, [x1, #8]
  405624:	mov	w1, #0x0                   	// #0
  405628:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40562c:	add	x2, x2, #0x2d0
  405630:	bl	4033d0 <ferror@plt+0xa30>
  405634:	ldp	x19, x20, [sp, #16]
  405638:	ldp	x21, x22, [sp, #32]
  40563c:	ldp	x29, x30, [sp], #64
  405640:	ret
  405644:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  405648:	adrp	x3, 417000 <ferror@plt+0x14660>
  40564c:	cmp	w22, #0x0
  405650:	add	x3, x3, #0xe98
  405654:	ldr	w0, [x0, #1628]
  405658:	b.gt	405678 <ferror@plt+0x2cd8>
  40565c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  405660:	mov	w1, #0x0                   	// #0
  405664:	add	x2, x2, #0x2f8
  405668:	bl	4033d0 <ferror@plt+0xa30>
  40566c:	b	405480 <ferror@plt+0x2ae0>
  405670:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  405674:	ldr	w0, [x0, #1628]
  405678:	ldr	x1, [x20]
  40567c:	ldr	x3, [x1, #8]
  405680:	b	40565c <ferror@plt+0x2cbc>
  405684:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  405688:	adrp	x4, 417000 <ferror@plt+0x14660>
  40568c:	cmp	w22, #0x0
  405690:	add	x4, x4, #0xe98
  405694:	ldr	w0, [x0, #1628]
  405698:	b.le	405624 <ferror@plt+0x2c84>
  40569c:	b	40561c <ferror@plt+0x2c7c>
  4056a0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4056a4:	ldr	w0, [x0, #1628]
  4056a8:	ldr	x1, [x20]
  4056ac:	ldr	x3, [x1, #8]
  4056b0:	b	4054c4 <ferror@plt+0x2b24>
  4056b4:	cmp	w3, #0x2d
  4056b8:	b.ne	405558 <ferror@plt+0x2bb8>  // b.any
  4056bc:	mov	x21, x20
  4056c0:	b	405538 <ferror@plt+0x2b98>
  4056c4:	mov	x0, x19
  4056c8:	mov	x1, x21
  4056cc:	bl	4175a8 <_obstack_newchunk@@Base>
  4056d0:	ldr	x0, [x19, #24]
  4056d4:	b	4055ec <ferror@plt+0x2c4c>
  4056d8:	mov	x0, x19
  4056dc:	mov	x1, #0x1                   	// #1
  4056e0:	bl	4175a8 <_obstack_newchunk@@Base>
  4056e4:	ldr	x0, [x19, #24]
  4056e8:	b	405544 <ferror@plt+0x2ba4>
  4056ec:	ldp	x0, x2, [x19, #24]
  4056f0:	tbnz	w1, #31, 4057cc <ferror@plt+0x2e2c>
  4056f4:	ldr	w3, [sp, #60]
  4056f8:	sub	w4, w3, #0x1
  4056fc:	str	w4, [sp, #60]
  405700:	sub	w3, w3, w1
  405704:	cmp	w3, #0x0
  405708:	b.le	405760 <ferror@plt+0x2dc0>
  40570c:	mov	w20, #0x30                  	// #48
  405710:	b	405744 <ferror@plt+0x2da4>
  405714:	add	x1, x0, #0x1
  405718:	str	x1, [x19, #24]
  40571c:	strb	w20, [x0]
  405720:	ldr	w0, [sp, #60]
  405724:	ldr	w1, [sp, #52]
  405728:	sub	w2, w0, #0x1
  40572c:	str	w2, [sp, #60]
  405730:	sub	w0, w0, w1
  405734:	cmp	w0, #0x0
  405738:	ldr	x0, [x19, #24]
  40573c:	ldr	x2, [x19, #32]
  405740:	b.le	405760 <ferror@plt+0x2dc0>
  405744:	cmp	x2, x0
  405748:	b.ne	405714 <ferror@plt+0x2d74>  // b.any
  40574c:	mov	x0, x19
  405750:	mov	x1, #0x1                   	// #1
  405754:	bl	4175a8 <_obstack_newchunk@@Base>
  405758:	ldr	x0, [x19, #24]
  40575c:	b	405714 <ferror@plt+0x2d74>
  405760:	sub	w3, w1, #0x1
  405764:	str	w3, [sp, #52]
  405768:	cbz	w1, 4057b4 <ferror@plt+0x2e14>
  40576c:	mov	w20, #0x31                  	// #49
  405770:	b	405794 <ferror@plt+0x2df4>
  405774:	add	x1, x0, #0x1
  405778:	str	x1, [x19, #24]
  40577c:	strb	w20, [x0]
  405780:	ldr	w0, [sp, #52]
  405784:	sub	w1, w0, #0x1
  405788:	str	w1, [sp, #52]
  40578c:	cbz	w0, 4057b0 <ferror@plt+0x2e10>
  405790:	ldp	x0, x2, [x19, #24]
  405794:	cmp	x2, x0
  405798:	b.ne	405774 <ferror@plt+0x2dd4>  // b.any
  40579c:	mov	x0, x19
  4057a0:	mov	x1, #0x1                   	// #1
  4057a4:	bl	4175a8 <_obstack_newchunk@@Base>
  4057a8:	ldr	x0, [x19, #24]
  4057ac:	b	405774 <ferror@plt+0x2dd4>
  4057b0:	ldp	x0, x2, [x19, #24]
  4057b4:	cmp	x2, x0
  4057b8:	b.eq	4057f8 <ferror@plt+0x2e58>  // b.none
  4057bc:	add	x1, x0, #0x1
  4057c0:	str	x1, [x19, #24]
  4057c4:	strb	wzr, [x0]
  4057c8:	b	405480 <ferror@plt+0x2ae0>
  4057cc:	cmp	x2, x0
  4057d0:	b.eq	40580c <ferror@plt+0x2e6c>  // b.none
  4057d4:	add	x1, x0, #0x1
  4057d8:	str	x1, [x19, #24]
  4057dc:	mov	w1, #0x2d                  	// #45
  4057e0:	strb	w1, [x0]
  4057e4:	ldr	w1, [sp, #52]
  4057e8:	ldp	x0, x2, [x19, #24]
  4057ec:	neg	w1, w1
  4057f0:	str	w1, [sp, #52]
  4057f4:	b	4056f4 <ferror@plt+0x2d54>
  4057f8:	mov	x0, x19
  4057fc:	mov	x1, #0x1                   	// #1
  405800:	bl	4175a8 <_obstack_newchunk@@Base>
  405804:	ldr	x0, [x19, #24]
  405808:	b	4057bc <ferror@plt+0x2e1c>
  40580c:	mov	x0, x19
  405810:	mov	x1, #0x1                   	// #1
  405814:	bl	4175a8 <_obstack_newchunk@@Base>
  405818:	ldr	x0, [x19, #24]
  40581c:	b	4057d4 <ferror@plt+0x2e34>
  405820:	stp	x29, x30, [sp, #-32]!
  405824:	mov	w3, #0xffffffff            	// #-1
  405828:	mov	x29, sp
  40582c:	stp	x19, x20, [sp, #16]
  405830:	mov	x19, x2
  405834:	mov	w20, w1
  405838:	mov	w2, #0x2                   	// #2
  40583c:	ldr	x0, [x19]
  405840:	add	x0, x0, #0x8
  405844:	bl	404010 <ferror@plt+0x1670>
  405848:	tst	w0, #0xff
  40584c:	b.ne	405880 <ferror@plt+0x2ee0>  // b.any
  405850:	cmp	w20, #0x1
  405854:	b.le	405880 <ferror@plt+0x2ee0>
  405858:	sub	w20, w20, #0x2
  40585c:	add	x0, x19, #0x10
  405860:	add	x19, x19, #0x8
  405864:	add	x20, x0, w20, uxtw #3
  405868:	ldr	x0, [x19], #8
  40586c:	mov	w1, #0x2                   	// #2
  405870:	ldr	x0, [x0, #8]
  405874:	bl	40fd00 <ferror@plt+0xd360>
  405878:	cmp	x19, x20
  40587c:	b.ne	405868 <ferror@plt+0x2ec8>  // b.any
  405880:	ldp	x19, x20, [sp, #16]
  405884:	ldp	x29, x30, [sp], #32
  405888:	ret
  40588c:	nop
  405890:	ldrb	w2, [x0, #8]
  405894:	cmp	x1, #0x0
  405898:	cset	w4, ne  // ne = any
  40589c:	ldr	w3, [x0, #24]
  4058a0:	bfxil	w2, w4, #0, #1
  4058a4:	strb	w2, [x0, #8]
  4058a8:	cmp	w3, #0x0
  4058ac:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  4058b0:	b.eq	4058b8 <ferror@plt+0x2f18>  // b.none
  4058b4:	ret
  4058b8:	ldr	x0, [x0, #16]
  4058bc:	mov	w1, #0x4                   	// #4
  4058c0:	b	40fd00 <ferror@plt+0xd360>
  4058c4:	nop
  4058c8:	stp	x29, x30, [sp, #-32]!
  4058cc:	mov	w3, #0xffffffff            	// #-1
  4058d0:	mov	x29, sp
  4058d4:	stp	x19, x20, [sp, #16]
  4058d8:	mov	x19, x2
  4058dc:	mov	w20, w1
  4058e0:	mov	w2, #0x2                   	// #2
  4058e4:	ldr	x0, [x19]
  4058e8:	add	x0, x0, #0x8
  4058ec:	bl	404010 <ferror@plt+0x1670>
  4058f0:	tst	w0, #0xff
  4058f4:	b.ne	405928 <ferror@plt+0x2f88>  // b.any
  4058f8:	cmp	w20, #0x1
  4058fc:	b.le	405928 <ferror@plt+0x2f88>
  405900:	sub	w20, w20, #0x2
  405904:	add	x0, x19, #0x10
  405908:	add	x19, x19, #0x8
  40590c:	add	x20, x0, w20, uxtw #3
  405910:	ldr	x0, [x19], #8
  405914:	mov	w1, #0x4                   	// #4
  405918:	ldr	x0, [x0, #8]
  40591c:	bl	40fd00 <ferror@plt+0xd360>
  405920:	cmp	x19, x20
  405924:	b.ne	405910 <ferror@plt+0x2f70>  // b.any
  405928:	ldp	x19, x20, [sp, #16]
  40592c:	ldp	x29, x30, [sp], #32
  405930:	ret
  405934:	nop
  405938:	stp	x29, x30, [sp, #-48]!
  40593c:	mov	w3, #0xffffffff            	// #-1
  405940:	mov	x29, sp
  405944:	stp	x19, x20, [sp, #16]
  405948:	mov	x19, x2
  40594c:	mov	x20, x0
  405950:	mov	w2, #0x2                   	// #2
  405954:	ldr	x0, [x19]
  405958:	str	x21, [sp, #32]
  40595c:	mov	w21, w1
  405960:	add	x0, x0, #0x8
  405964:	bl	404010 <ferror@plt+0x1670>
  405968:	tst	w0, #0xff
  40596c:	b.eq	405980 <ferror@plt+0x2fe0>  // b.none
  405970:	ldp	x19, x20, [sp, #16]
  405974:	ldr	x21, [sp, #32]
  405978:	ldp	x29, x30, [sp], #48
  40597c:	ret
  405980:	add	x2, x19, #0x8
  405984:	sub	w1, w21, #0x1
  405988:	mov	x0, x20
  40598c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  405990:	ldp	x19, x20, [sp, #16]
  405994:	add	x3, x3, #0x318
  405998:	ldr	x21, [sp, #32]
  40599c:	mov	w4, #0x1                   	// #1
  4059a0:	ldp	x29, x30, [sp], #48
  4059a4:	b	4037c0 <ferror@plt+0xe20>
  4059a8:	stp	x29, x30, [sp, #-48]!
  4059ac:	mov	w3, #0x4                   	// #4
  4059b0:	mov	x29, sp
  4059b4:	stp	x19, x20, [sp, #16]
  4059b8:	mov	x19, x2
  4059bc:	mov	x20, x0
  4059c0:	mov	w2, #0x3                   	// #3
  4059c4:	ldr	x0, [x19]
  4059c8:	str	x21, [sp, #32]
  4059cc:	mov	w21, w1
  4059d0:	add	x0, x0, #0x8
  4059d4:	bl	404010 <ferror@plt+0x1670>
  4059d8:	tst	w0, #0xff
  4059dc:	b.ne	405a5c <ferror@plt+0x30bc>  // b.any
  4059e0:	cmp	w21, #0x1
  4059e4:	b.le	405a6c <ferror@plt+0x30cc>
  4059e8:	ldr	x0, [x19, #8]
  4059ec:	mov	w1, #0x0                   	// #0
  4059f0:	ldr	x0, [x0, #8]
  4059f4:	bl	40fd00 <ferror@plt+0xd360>
  4059f8:	cbz	x0, 405a80 <ferror@plt+0x30e0>
  4059fc:	ldr	w0, [x0, #24]
  405a00:	cbz	w0, 405a80 <ferror@plt+0x30e0>
  405a04:	cmp	w21, #0x2
  405a08:	b.le	405a98 <ferror@plt+0x30f8>
  405a0c:	ldr	x0, [x19, #16]
  405a10:	ldr	x21, [x0, #8]
  405a14:	cbz	x21, 405a5c <ferror@plt+0x30bc>
  405a18:	mov	x0, x21
  405a1c:	bl	402390 <strlen@plt>
  405a20:	mov	x19, x0
  405a24:	ldp	x0, x1, [x20, #24]
  405a28:	sub	x1, x1, x0
  405a2c:	cmp	x19, x1
  405a30:	b.ls	405a44 <ferror@plt+0x30a4>  // b.plast
  405a34:	mov	x0, x20
  405a38:	mov	x1, x19
  405a3c:	bl	4175a8 <_obstack_newchunk@@Base>
  405a40:	ldr	x0, [x20, #24]
  405a44:	mov	x1, x21
  405a48:	mov	x2, x19
  405a4c:	bl	402350 <memcpy@plt>
  405a50:	ldr	x0, [x20, #24]
  405a54:	add	x0, x0, x19
  405a58:	str	x0, [x20, #24]
  405a5c:	ldp	x19, x20, [sp, #16]
  405a60:	ldr	x21, [sp, #32]
  405a64:	ldp	x29, x30, [sp], #48
  405a68:	ret
  405a6c:	adrp	x0, 417000 <ferror@plt+0x14660>
  405a70:	mov	w1, #0x0                   	// #0
  405a74:	add	x0, x0, #0xe98
  405a78:	bl	40fd00 <ferror@plt+0xd360>
  405a7c:	cbnz	x0, 4059fc <ferror@plt+0x305c>
  405a80:	cmp	w21, #0x3
  405a84:	b.le	405a5c <ferror@plt+0x30bc>
  405a88:	ldr	x0, [x19, #24]
  405a8c:	ldr	x21, [x0, #8]
  405a90:	cbnz	x21, 405a18 <ferror@plt+0x3078>
  405a94:	b	405a5c <ferror@plt+0x30bc>
  405a98:	adrp	x21, 417000 <ferror@plt+0x14660>
  405a9c:	mov	x19, #0x0                   	// #0
  405aa0:	add	x21, x21, #0xe98
  405aa4:	ldr	x0, [x20, #24]
  405aa8:	b	405a44 <ferror@plt+0x30a4>
  405aac:	nop
  405ab0:	stp	x29, x30, [sp, #-48]!
  405ab4:	mov	x29, sp
  405ab8:	stp	x19, x20, [sp, #16]
  405abc:	mov	x19, x1
  405ac0:	ldr	x20, [x1]
  405ac4:	mov	x2, x20
  405ac8:	ldr	x1, [x20, #24]
  405acc:	str	x21, [sp, #32]
  405ad0:	mov	x21, x0
  405ad4:	ldr	x0, [x20, #32]
  405ad8:	sub	x0, x0, x1
  405adc:	cmp	x0, #0x7
  405ae0:	b.ls	405b14 <ferror@plt+0x3174>  // b.plast
  405ae4:	add	x1, x1, #0x8
  405ae8:	ldr	x0, [x2, #16]
  405aec:	str	x1, [x20, #24]
  405af0:	ldr	w1, [x19, #16]
  405af4:	str	x0, [x19, #8]
  405af8:	add	w2, w1, #0x1
  405afc:	str	w2, [x19, #16]
  405b00:	ldp	x19, x20, [sp, #16]
  405b04:	str	x21, [x0, w1, sxtw #3]
  405b08:	ldr	x21, [sp, #32]
  405b0c:	ldp	x29, x30, [sp], #48
  405b10:	ret
  405b14:	mov	x1, #0x8                   	// #8
  405b18:	mov	x0, x20
  405b1c:	bl	4175a8 <_obstack_newchunk@@Base>
  405b20:	ldr	x2, [x19]
  405b24:	ldr	x1, [x20, #24]
  405b28:	b	405ae4 <ferror@plt+0x3144>
  405b2c:	nop
  405b30:	ldrb	w3, [x0, #8]
  405b34:	tbnz	w3, #1, 405b44 <ferror@plt+0x31a4>
  405b38:	ldr	w2, [x0, #24]
  405b3c:	cbz	w2, 405b44 <ferror@plt+0x31a4>
  405b40:	b	405ab0 <ferror@plt+0x3110>
  405b44:	ret
  405b48:	stp	x29, x30, [sp, #-96]!
  405b4c:	cmp	w1, #0x1
  405b50:	mov	x29, sp
  405b54:	stp	x21, x22, [sp, #32]
  405b58:	mov	x21, x0
  405b5c:	str	x0, [sp, #72]
  405b60:	ldr	x0, [x0, #16]
  405b64:	stp	x19, x20, [sp, #16]
  405b68:	str	x23, [sp, #48]
  405b6c:	str	x0, [sp, #80]
  405b70:	str	wzr, [sp, #88]
  405b74:	b.eq	405dec <ferror@plt+0x344c>  // b.none
  405b78:	b.le	405e0c <ferror@plt+0x346c>
  405b7c:	sub	w1, w1, #0x2
  405b80:	add	x20, x2, #0x10
  405b84:	adrp	x23, 419000 <_obstack_memory_used@@Base+0x1878>
  405b88:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  405b8c:	add	x19, x2, #0x8
  405b90:	add	x20, x20, w1, uxtw #3
  405b94:	add	x23, x23, #0x320
  405b98:	add	x22, x22, #0x65c
  405b9c:	b	405bbc <ferror@plt+0x321c>
  405ba0:	ldrb	w1, [x0, #8]
  405ba4:	tbnz	w1, #1, 405bb0 <ferror@plt+0x3210>
  405ba8:	add	x1, sp, #0x48
  405bac:	bl	405ab0 <ferror@plt+0x3110>
  405bb0:	add	x19, x19, #0x8
  405bb4:	cmp	x20, x19
  405bb8:	b.eq	405bfc <ferror@plt+0x325c>  // b.none
  405bbc:	ldr	x2, [x19]
  405bc0:	mov	w1, #0x0                   	// #0
  405bc4:	ldr	x0, [x2, #8]
  405bc8:	bl	40fd00 <ferror@plt+0xd360>
  405bcc:	cbz	x0, 405bd8 <ferror@plt+0x3238>
  405bd0:	ldr	w2, [x0, #24]
  405bd4:	cbnz	w2, 405ba0 <ferror@plt+0x3200>
  405bd8:	ldr	x3, [x19]
  405bdc:	mov	x2, x23
  405be0:	ldr	w0, [x22]
  405be4:	add	x19, x19, #0x8
  405be8:	mov	w1, #0x0                   	// #0
  405bec:	ldr	x3, [x3, #8]
  405bf0:	bl	4033d0 <ferror@plt+0xa30>
  405bf4:	cmp	x20, x19
  405bf8:	b.ne	405bbc <ferror@plt+0x321c>  // b.any
  405bfc:	ldrsw	x1, [sp, #88]
  405c00:	ldr	x2, [x21, #16]
  405c04:	ldr	x0, [sp, #80]
  405c08:	ldr	x4, [x21, #24]
  405c0c:	cmp	x4, x2
  405c10:	b.eq	405ddc <ferror@plt+0x343c>  // b.none
  405c14:	ldr	x2, [x21, #48]
  405c18:	ldr	x3, [x21, #8]
  405c1c:	add	x4, x4, x2
  405c20:	ldr	x5, [x21, #32]
  405c24:	bic	x2, x4, x2
  405c28:	str	x2, [x21, #24]
  405c2c:	sub	x4, x2, x3
  405c30:	sub	x3, x5, x3
  405c34:	cmp	x4, x3
  405c38:	b.ls	405c44 <ferror@plt+0x32a4>  // b.plast
  405c3c:	mov	x2, x5
  405c40:	str	x5, [x21, #24]
  405c44:	str	x2, [x21, #16]
  405c48:	adrp	x3, 403000 <ferror@plt+0x660>
  405c4c:	mov	x2, #0x8                   	// #8
  405c50:	add	x3, x3, #0xff8
  405c54:	bl	402470 <qsort@plt>
  405c58:	ldr	w0, [sp, #88]
  405c5c:	cmp	w0, #0x0
  405c60:	b.le	405d7c <ferror@plt+0x33dc>
  405c64:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  405c68:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x1878>
  405c6c:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  405c70:	add	x22, x22, #0x7e0
  405c74:	add	x19, x19, #0x338
  405c78:	add	x20, x20, #0x66c
  405c7c:	adrp	x21, 41b000 <_obstack_memory_used@@Base+0x3878>
  405c80:	ldr	x3, [sp, #80]
  405c84:	b	405cd8 <ferror@plt+0x3338>
  405c88:	ldr	w1, [x20]
  405c8c:	ldr	x0, [x22]
  405c90:	tbz	w1, #2, 405dbc <ferror@plt+0x341c>
  405c94:	cbz	x0, 405cbc <ferror@plt+0x331c>
  405c98:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  405c9c:	adrp	x5, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  405ca0:	ldr	x3, [x2, #32]
  405ca4:	ldr	x4, [x1, #3456]
  405ca8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  405cac:	ldr	x2, [x5, #3400]
  405cb0:	add	x1, x1, #0x340
  405cb4:	bl	416d88 <ferror@plt+0x143e8>
  405cb8:	ldr	x3, [sp, #80]
  405cbc:	add	x3, x3, #0x8
  405cc0:	ldr	w0, [sp, #88]
  405cc4:	str	x3, [sp, #80]
  405cc8:	sub	w0, w0, #0x1
  405ccc:	str	w0, [sp, #88]
  405cd0:	cmp	w0, #0x0
  405cd4:	b.le	405d7c <ferror@plt+0x33dc>
  405cd8:	ldr	x0, [x22]
  405cdc:	ldr	x2, [x3]
  405ce0:	cbz	x0, 405cf8 <ferror@plt+0x3358>
  405ce4:	ldr	x2, [x2, #16]
  405ce8:	mov	x1, x19
  405cec:	bl	416d88 <ferror@plt+0x143e8>
  405cf0:	ldr	x3, [sp, #80]
  405cf4:	ldr	x2, [x3]
  405cf8:	ldr	w0, [x2, #24]
  405cfc:	cmp	w0, #0x1
  405d00:	b.eq	405c88 <ferror@plt+0x32e8>  // b.none
  405d04:	cmp	w0, #0x2
  405d08:	b.ne	405e18 <ferror@plt+0x3478>  // b.any
  405d0c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  405d10:	add	x1, x1, #0x7c8
  405d14:	adrp	x0, 405000 <ferror@plt+0x2660>
  405d18:	add	x1, x1, #0x48
  405d1c:	add	x0, x0, #0xf68
  405d20:	ldr	x4, [x2, #32]
  405d24:	b	405d3c <ferror@plt+0x339c>
  405d28:	ldr	x2, [x1, #24]
  405d2c:	add	x0, x1, #0x18
  405d30:	cbz	x2, 405d90 <ferror@plt+0x33f0>
  405d34:	mov	x1, x0
  405d38:	ldr	x0, [x0, #16]
  405d3c:	cmp	x4, x0
  405d40:	b.ne	405d28 <ferror@plt+0x3388>  // b.any
  405d44:	ldr	x0, [x22]
  405d48:	cbz	x0, 405cbc <ferror@plt+0x331c>
  405d4c:	ldr	x2, [x1]
  405d50:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  405d54:	add	x1, x1, #0x380
  405d58:	bl	416d88 <ferror@plt+0x143e8>
  405d5c:	ldr	x3, [sp, #80]
  405d60:	ldr	w0, [sp, #88]
  405d64:	add	x3, x3, #0x8
  405d68:	str	x3, [sp, #80]
  405d6c:	sub	w0, w0, #0x1
  405d70:	str	w0, [sp, #88]
  405d74:	cmp	w0, #0x0
  405d78:	b.gt	405cd8 <ferror@plt+0x3338>
  405d7c:	ldp	x19, x20, [sp, #16]
  405d80:	ldp	x21, x22, [sp, #32]
  405d84:	ldr	x23, [sp, #48]
  405d88:	ldp	x29, x30, [sp], #96
  405d8c:	ret
  405d90:	adrp	x0, 403000 <ferror@plt+0x660>
  405d94:	add	x0, x0, #0x528
  405d98:	cmp	x4, x0
  405d9c:	b.eq	405dd4 <ferror@plt+0x3434>  // b.none
  405da0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  405da4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  405da8:	add	x2, x2, #0x348
  405dac:	mov	w1, #0x0                   	// #0
  405db0:	ldr	w0, [x0, #1628]
  405db4:	bl	4033d0 <ferror@plt+0xa30>
  405db8:	bl	4026d0 <abort@plt>
  405dbc:	cbz	x0, 405cbc <ferror@plt+0x331c>
  405dc0:	ldr	x2, [x2, #32]
  405dc4:	add	x1, x21, #0x828
  405dc8:	bl	416d88 <ferror@plt+0x143e8>
  405dcc:	ldr	x3, [sp, #80]
  405dd0:	b	405cbc <ferror@plt+0x331c>
  405dd4:	add	x1, x1, #0x30
  405dd8:	b	405d44 <ferror@plt+0x33a4>
  405ddc:	ldrb	w2, [x21, #80]
  405de0:	orr	w2, w2, #0x2
  405de4:	strb	w2, [x21, #80]
  405de8:	b	405c14 <ferror@plt+0x3274>
  405dec:	add	x1, sp, #0x48
  405df0:	adrp	x0, 405000 <ferror@plt+0x2660>
  405df4:	add	x0, x0, #0xb30
  405df8:	bl	4100d8 <ferror@plt+0xd738>
  405dfc:	ldrsw	x1, [sp, #88]
  405e00:	ldr	x2, [x21, #16]
  405e04:	ldr	x0, [sp, #80]
  405e08:	b	405c08 <ferror@plt+0x3268>
  405e0c:	mov	x2, x0
  405e10:	mov	x1, #0x0                   	// #0
  405e14:	b	405c08 <ferror@plt+0x3268>
  405e18:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  405e1c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  405e20:	add	x2, x2, #0x388
  405e24:	mov	w1, #0x0                   	// #0
  405e28:	ldr	w0, [x0, #1628]
  405e2c:	bl	4033d0 <ferror@plt+0xa30>
  405e30:	bl	4026d0 <abort@plt>
  405e34:	nop
  405e38:	stp	x29, x30, [sp, #-64]!
  405e3c:	mov	x4, x2
  405e40:	mov	w3, #0x1                   	// #1
  405e44:	mov	x29, sp
  405e48:	stp	x19, x20, [sp, #16]
  405e4c:	mov	x19, x0
  405e50:	mov	w2, w3
  405e54:	ldr	x0, [x4]
  405e58:	add	x0, x0, #0x8
  405e5c:	bl	404010 <ferror@plt+0x1670>
  405e60:	tst	w0, #0xff
  405e64:	b.ne	405f1c <ferror@plt+0x357c>  // b.any
  405e68:	ldp	x0, x1, [x19, #24]
  405e6c:	stp	x21, x22, [sp, #32]
  405e70:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  405e74:	add	x2, x21, #0xd48
  405e78:	ldr	x20, [x2, #8]
  405e7c:	str	x23, [sp, #48]
  405e80:	sub	x1, x1, x0
  405e84:	cmp	x20, x1
  405e88:	b.hi	405f54 <ferror@plt+0x35b4>  // b.pmore
  405e8c:	ldr	x1, [x21, #3400]
  405e90:	mov	x2, x20
  405e94:	adrp	x23, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  405e98:	bl	402350 <memcpy@plt>
  405e9c:	ldr	x21, [x19, #24]
  405ea0:	ldr	x22, [x23, #2784]
  405ea4:	add	x21, x21, x20
  405ea8:	str	x21, [x19, #24]
  405eac:	mov	x0, x22
  405eb0:	bl	402390 <strlen@plt>
  405eb4:	mov	x20, x0
  405eb8:	ldr	x2, [x19, #32]
  405ebc:	sub	x2, x2, x21
  405ec0:	cmp	x0, x2
  405ec4:	b.hi	405f3c <ferror@plt+0x359c>  // b.pmore
  405ec8:	mov	x2, x20
  405ecc:	mov	x1, x22
  405ed0:	mov	x0, x21
  405ed4:	bl	402350 <memcpy@plt>
  405ed8:	ldp	x1, x2, [x19, #24]
  405edc:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  405ee0:	add	x3, x21, #0xd80
  405ee4:	add	x0, x1, x20
  405ee8:	str	x0, [x19, #24]
  405eec:	ldr	x20, [x3, #8]
  405ef0:	sub	x2, x2, x0
  405ef4:	cmp	x20, x2
  405ef8:	b.hi	405f28 <ferror@plt+0x3588>  // b.pmore
  405efc:	ldr	x1, [x21, #3456]
  405f00:	mov	x2, x20
  405f04:	bl	402350 <memcpy@plt>
  405f08:	ldr	x2, [x19, #24]
  405f0c:	ldp	x21, x22, [sp, #32]
  405f10:	add	x2, x2, x20
  405f14:	ldr	x23, [sp, #48]
  405f18:	str	x2, [x19, #24]
  405f1c:	ldp	x19, x20, [sp, #16]
  405f20:	ldp	x29, x30, [sp], #64
  405f24:	ret
  405f28:	mov	x0, x19
  405f2c:	mov	x1, x20
  405f30:	bl	4175a8 <_obstack_newchunk@@Base>
  405f34:	ldr	x0, [x19, #24]
  405f38:	b	405efc <ferror@plt+0x355c>
  405f3c:	mov	x1, x0
  405f40:	mov	x0, x19
  405f44:	bl	4175a8 <_obstack_newchunk@@Base>
  405f48:	ldr	x22, [x23, #2784]
  405f4c:	ldr	x21, [x19, #24]
  405f50:	b	405ec8 <ferror@plt+0x3528>
  405f54:	mov	x0, x19
  405f58:	mov	x1, x20
  405f5c:	bl	4175a8 <_obstack_newchunk@@Base>
  405f60:	ldr	x0, [x19, #24]
  405f64:	b	405e8c <ferror@plt+0x34ec>
  405f68:	stp	x29, x30, [sp, #-64]!
  405f6c:	mov	x4, x2
  405f70:	mov	w3, #0x1                   	// #1
  405f74:	mov	x29, sp
  405f78:	stp	x19, x20, [sp, #16]
  405f7c:	mov	x19, x0
  405f80:	mov	w2, w3
  405f84:	ldr	x0, [x4]
  405f88:	add	x0, x0, #0x8
  405f8c:	bl	404010 <ferror@plt+0x1670>
  405f90:	tst	w0, #0xff
  405f94:	b.ne	40604c <ferror@plt+0x36ac>  // b.any
  405f98:	ldp	x0, x1, [x19, #24]
  405f9c:	stp	x21, x22, [sp, #32]
  405fa0:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  405fa4:	add	x2, x21, #0xd48
  405fa8:	ldr	x20, [x2, #8]
  405fac:	str	x23, [sp, #48]
  405fb0:	sub	x1, x1, x0
  405fb4:	cmp	x20, x1
  405fb8:	b.hi	406084 <ferror@plt+0x36e4>  // b.pmore
  405fbc:	ldr	x1, [x21, #3400]
  405fc0:	mov	x2, x20
  405fc4:	adrp	x23, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  405fc8:	bl	402350 <memcpy@plt>
  405fcc:	ldr	x21, [x19, #24]
  405fd0:	ldr	x22, [x23, #3416]
  405fd4:	add	x21, x21, x20
  405fd8:	str	x21, [x19, #24]
  405fdc:	mov	x0, x22
  405fe0:	bl	402390 <strlen@plt>
  405fe4:	mov	x20, x0
  405fe8:	ldr	x2, [x19, #32]
  405fec:	sub	x2, x2, x21
  405ff0:	cmp	x0, x2
  405ff4:	b.hi	40606c <ferror@plt+0x36cc>  // b.pmore
  405ff8:	mov	x2, x20
  405ffc:	mov	x1, x22
  406000:	mov	x0, x21
  406004:	bl	402350 <memcpy@plt>
  406008:	ldp	x1, x2, [x19, #24]
  40600c:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  406010:	add	x3, x21, #0xd80
  406014:	add	x0, x1, x20
  406018:	str	x0, [x19, #24]
  40601c:	ldr	x20, [x3, #8]
  406020:	sub	x2, x2, x0
  406024:	cmp	x20, x2
  406028:	b.hi	406058 <ferror@plt+0x36b8>  // b.pmore
  40602c:	ldr	x1, [x21, #3456]
  406030:	mov	x2, x20
  406034:	bl	402350 <memcpy@plt>
  406038:	ldr	x2, [x19, #24]
  40603c:	ldp	x21, x22, [sp, #32]
  406040:	add	x2, x2, x20
  406044:	ldr	x23, [sp, #48]
  406048:	str	x2, [x19, #24]
  40604c:	ldp	x19, x20, [sp, #16]
  406050:	ldp	x29, x30, [sp], #64
  406054:	ret
  406058:	mov	x0, x19
  40605c:	mov	x1, x20
  406060:	bl	4175a8 <_obstack_newchunk@@Base>
  406064:	ldr	x0, [x19, #24]
  406068:	b	40602c <ferror@plt+0x368c>
  40606c:	mov	x1, x0
  406070:	mov	x0, x19
  406074:	bl	4175a8 <_obstack_newchunk@@Base>
  406078:	ldr	x22, [x23, #3416]
  40607c:	ldr	x21, [x19, #24]
  406080:	b	405ff8 <ferror@plt+0x3658>
  406084:	mov	x0, x19
  406088:	mov	x1, x20
  40608c:	bl	4175a8 <_obstack_newchunk@@Base>
  406090:	ldr	x0, [x19, #24]
  406094:	b	405fbc <ferror@plt+0x361c>
  406098:	sub	sp, sp, #0x260
  40609c:	cmp	w1, #0x1
  4060a0:	stp	x29, x30, [sp]
  4060a4:	mov	x29, sp
  4060a8:	stp	x19, x20, [sp, #16]
  4060ac:	mov	x19, x0
  4060b0:	ldr	x0, [x2]
  4060b4:	add	x0, x0, #0x8
  4060b8:	b.le	406288 <ferror@plt+0x38e8>
  4060bc:	mov	w20, w1
  4060c0:	cmp	w1, #0x2
  4060c4:	ldr	x1, [x2, #8]
  4060c8:	stp	x21, x22, [sp, #32]
  4060cc:	mov	x22, x2
  4060d0:	stp	x25, x26, [sp, #64]
  4060d4:	ldr	x21, [x1, #8]
  4060d8:	b.eq	406438 <ferror@plt+0x3a98>  // b.none
  4060dc:	ldr	x1, [x2, #16]
  4060e0:	ldr	x25, [x1, #8]
  4060e4:	mov	w1, w20
  4060e8:	mov	w3, #0x4                   	// #4
  4060ec:	mov	w2, #0x3                   	// #3
  4060f0:	bl	404010 <ferror@plt+0x1670>
  4060f4:	tst	w0, #0xff
  4060f8:	b.ne	40623c <ferror@plt+0x389c>  // b.any
  4060fc:	ldrb	w0, [x21]
  406100:	cbz	w0, 40623c <ferror@plt+0x389c>
  406104:	ldrb	w0, [x25]
  406108:	cbz	w0, 40623c <ferror@plt+0x389c>
  40610c:	stp	x23, x24, [sp, #48]
  406110:	cmp	w20, #0x3
  406114:	b.le	4062a0 <ferror@plt+0x3900>
  406118:	ldr	x0, [x22, #24]
  40611c:	mov	w1, #0x2d                  	// #45
  406120:	ldr	x26, [x0, #8]
  406124:	mov	x0, x26
  406128:	bl	402810 <strchr@plt>
  40612c:	cbz	x0, 40614c <ferror@plt+0x37ac>
  406130:	mov	x0, x26
  406134:	mov	x1, x19
  406138:	bl	403568 <ferror@plt+0xbc8>
  40613c:	mov	x26, x0
  406140:	cbz	x0, 406480 <ferror@plt+0x3ae0>
  406144:	ldrb	w0, [x0]
  406148:	cbz	w0, 406480 <ferror@plt+0x3ae0>
  40614c:	ldrb	w2, [x25, #1]
  406150:	cbz	w2, 4062b0 <ferror@plt+0x3910>
  406154:	ldrb	w0, [x25, #2]
  406158:	cbz	w0, 4062b0 <ferror@plt+0x3910>
  40615c:	mov	x0, x25
  406160:	mov	w1, #0x2d                  	// #45
  406164:	bl	402810 <strchr@plt>
  406168:	cbz	x0, 406188 <ferror@plt+0x37e8>
  40616c:	mov	x0, x25
  406170:	mov	x1, x19
  406174:	bl	403568 <ferror@plt+0xbc8>
  406178:	mov	x25, x0
  40617c:	cbz	x0, 4064a4 <ferror@plt+0x3b04>
  406180:	ldrb	w0, [x0]
  406184:	cbz	w0, 4064a4 <ferror@plt+0x3b04>
  406188:	add	x23, sp, #0x60
  40618c:	mov	x2, #0x100                 	// #256
  406190:	mov	w1, #0x0                   	// #0
  406194:	mov	x0, x23
  406198:	add	x21, sp, #0x160
  40619c:	bl	4025c0 <memset@plt>
  4061a0:	mov	x0, x21
  4061a4:	mov	x2, #0x100                 	// #256
  4061a8:	mov	w1, #0x0                   	// #0
  4061ac:	bl	4025c0 <memset@plt>
  4061b0:	ldrb	w0, [x25]
  4061b4:	mov	w3, #0x1                   	// #1
  4061b8:	cbz	w0, 4061e4 <ferror@plt+0x3844>
  4061bc:	nop
  4061c0:	ldrb	w2, [x21, w0, sxtw]
  4061c4:	ldrb	w1, [x26]
  4061c8:	cbnz	w2, 4061d4 <ferror@plt+0x3834>
  4061cc:	strb	w3, [x21, w0, sxtw]
  4061d0:	strb	w1, [x23, w0, sxtw]
  4061d4:	ldrb	w0, [x25, #1]!
  4061d8:	cmp	w1, #0x0
  4061dc:	cinc	x26, x26, ne  // ne = any
  4061e0:	cbnz	w0, 4061c0 <ferror@plt+0x3820>
  4061e4:	ldr	x0, [x22, #8]
  4061e8:	ldr	x22, [x0, #8]
  4061ec:	ldrb	w20, [x22]
  4061f0:	cbnz	w20, 40620c <ferror@plt+0x386c>
  4061f4:	b	406408 <ferror@plt+0x3a68>
  4061f8:	add	x1, x0, #0x1
  4061fc:	str	x1, [x19, #24]
  406200:	strb	w20, [x0]
  406204:	ldrb	w20, [x22, #1]!
  406208:	cbz	w20, 406408 <ferror@plt+0x3a68>
  40620c:	ldrb	w0, [x21, w20, sxtw]
  406210:	cbz	w0, 40621c <ferror@plt+0x387c>
  406214:	ldrb	w20, [x23, w20, sxtw]
  406218:	cbz	w20, 406204 <ferror@plt+0x3864>
  40621c:	ldp	x0, x1, [x19, #24]
  406220:	cmp	x1, x0
  406224:	b.ne	4061f8 <ferror@plt+0x3858>  // b.any
  406228:	mov	x0, x19
  40622c:	mov	x1, #0x1                   	// #1
  406230:	bl	4175a8 <_obstack_newchunk@@Base>
  406234:	ldr	x0, [x19, #24]
  406238:	b	4061f8 <ferror@plt+0x3858>
  40623c:	mov	x0, x21
  406240:	bl	402390 <strlen@plt>
  406244:	mov	x20, x0
  406248:	ldp	x0, x1, [x19, #24]
  40624c:	sub	x1, x1, x0
  406250:	cmp	x20, x1
  406254:	b.hi	406424 <ferror@plt+0x3a84>  // b.pmore
  406258:	mov	x1, x21
  40625c:	mov	x2, x20
  406260:	bl	402350 <memcpy@plt>
  406264:	ldr	x0, [x19, #24]
  406268:	ldp	x29, x30, [sp]
  40626c:	add	x0, x0, x20
  406270:	str	x0, [x19, #24]
  406274:	ldp	x19, x20, [sp, #16]
  406278:	ldp	x21, x22, [sp, #32]
  40627c:	ldp	x25, x26, [sp, #64]
  406280:	add	sp, sp, #0x260
  406284:	ret
  406288:	ldp	x29, x30, [sp]
  40628c:	mov	w3, #0x4                   	// #4
  406290:	ldp	x19, x20, [sp, #16]
  406294:	mov	w2, #0x3                   	// #3
  406298:	add	sp, sp, #0x260
  40629c:	b	404010 <ferror@plt+0x1670>
  4062a0:	ldrb	w2, [x25, #1]
  4062a4:	adrp	x26, 417000 <ferror@plt+0x14660>
  4062a8:	add	x26, x26, #0xe98
  4062ac:	cbnz	w2, 406154 <ferror@plt+0x37b4>
  4062b0:	mov	x0, x21
  4062b4:	str	w2, [sp, #92]
  4062b8:	bl	402390 <strlen@plt>
  4062bc:	mov	x22, x0
  4062c0:	ldp	x20, x23, [x19, #24]
  4062c4:	ldrb	w1, [x25]
  4062c8:	ldr	w2, [sp, #92]
  4062cc:	nop
  4062d0:	mov	x3, x22
  4062d4:	mov	x0, x21
  4062d8:	bl	413b10 <ferror@plt+0x11170>
  4062dc:	mov	x24, x0
  4062e0:	sub	x1, x23, x20
  4062e4:	cbz	x0, 40638c <ferror@plt+0x39ec>
  4062e8:	sub	x23, x24, x21
  4062ec:	cmp	x23, x1
  4062f0:	b.hi	4063cc <ferror@plt+0x3a2c>  // b.pmore
  4062f4:	mov	x0, x20
  4062f8:	mov	x1, x21
  4062fc:	mov	x2, x23
  406300:	bl	402350 <memcpy@plt>
  406304:	ldr	x20, [x19, #24]
  406308:	subs	x22, x22, x23
  40630c:	add	x20, x20, x23
  406310:	str	x20, [x19, #24]
  406314:	b.eq	406408 <ferror@plt+0x3a68>  // b.none
  406318:	mov	x21, x24
  40631c:	ldrb	w1, [x25]
  406320:	sub	x22, x22, #0x1
  406324:	ldr	x23, [x19, #32]
  406328:	ldrb	w0, [x21], #1
  40632c:	cmp	w0, w1
  406330:	b.eq	4063e0 <ferror@plt+0x3a40>  // b.none
  406334:	ldrb	w2, [x25, #1]
  406338:	cmp	w0, w2
  40633c:	b.ne	4062d0 <ferror@plt+0x3930>  // b.any
  406340:	ldrb	w0, [x26]
  406344:	cbz	w0, 4062d0 <ferror@plt+0x3930>
  406348:	ldrb	w0, [x26, #1]
  40634c:	cbz	w0, 4062d0 <ferror@plt+0x3930>
  406350:	cmp	x20, x23
  406354:	b.eq	40646c <ferror@plt+0x3acc>  // b.none
  406358:	add	x0, x20, #0x1
  40635c:	str	x0, [x19, #24]
  406360:	ldrb	w0, [x26, #1]
  406364:	strb	w0, [x20]
  406368:	mov	x3, x22
  40636c:	mov	x0, x21
  406370:	ldp	x20, x23, [x19, #24]
  406374:	ldrb	w1, [x25]
  406378:	ldrb	w2, [x25, #1]
  40637c:	bl	413b10 <ferror@plt+0x11170>
  406380:	mov	x24, x0
  406384:	sub	x1, x23, x20
  406388:	cbnz	x0, 4062e8 <ferror@plt+0x3948>
  40638c:	cmp	x22, x1
  406390:	b.hi	406458 <ferror@plt+0x3ab8>  // b.pmore
  406394:	mov	x1, x21
  406398:	mov	x2, x22
  40639c:	mov	x0, x20
  4063a0:	bl	402350 <memcpy@plt>
  4063a4:	ldr	x0, [x19, #24]
  4063a8:	ldp	x23, x24, [sp, #48]
  4063ac:	add	x22, x0, x22
  4063b0:	str	x22, [x19, #24]
  4063b4:	ldp	x29, x30, [sp]
  4063b8:	ldp	x19, x20, [sp, #16]
  4063bc:	ldp	x21, x22, [sp, #32]
  4063c0:	ldp	x25, x26, [sp, #64]
  4063c4:	add	sp, sp, #0x260
  4063c8:	ret
  4063cc:	mov	x1, x23
  4063d0:	mov	x0, x19
  4063d4:	bl	4175a8 <_obstack_newchunk@@Base>
  4063d8:	ldr	x20, [x19, #24]
  4063dc:	b	4062f4 <ferror@plt+0x3954>
  4063e0:	ldrb	w0, [x26]
  4063e4:	cbz	w0, 406400 <ferror@plt+0x3a60>
  4063e8:	cmp	x20, x23
  4063ec:	b.eq	406444 <ferror@plt+0x3aa4>  // b.none
  4063f0:	add	x0, x20, #0x1
  4063f4:	str	x0, [x19, #24]
  4063f8:	ldrb	w0, [x26]
  4063fc:	b	406364 <ferror@plt+0x39c4>
  406400:	ldrb	w2, [x25, #1]
  406404:	b	4062d0 <ferror@plt+0x3930>
  406408:	ldp	x29, x30, [sp]
  40640c:	ldp	x19, x20, [sp, #16]
  406410:	ldp	x21, x22, [sp, #32]
  406414:	ldp	x23, x24, [sp, #48]
  406418:	ldp	x25, x26, [sp, #64]
  40641c:	add	sp, sp, #0x260
  406420:	ret
  406424:	mov	x0, x19
  406428:	mov	x1, x20
  40642c:	bl	4175a8 <_obstack_newchunk@@Base>
  406430:	ldr	x0, [x19, #24]
  406434:	b	406258 <ferror@plt+0x38b8>
  406438:	adrp	x25, 417000 <ferror@plt+0x14660>
  40643c:	add	x25, x25, #0xe98
  406440:	b	4060e4 <ferror@plt+0x3744>
  406444:	mov	x0, x19
  406448:	mov	x1, #0x1                   	// #1
  40644c:	bl	4175a8 <_obstack_newchunk@@Base>
  406450:	ldr	x20, [x19, #24]
  406454:	b	4063f0 <ferror@plt+0x3a50>
  406458:	mov	x1, x22
  40645c:	mov	x0, x19
  406460:	bl	4175a8 <_obstack_newchunk@@Base>
  406464:	ldr	x20, [x19, #24]
  406468:	b	406394 <ferror@plt+0x39f4>
  40646c:	mov	x0, x19
  406470:	mov	x1, #0x1                   	// #1
  406474:	bl	4175a8 <_obstack_newchunk@@Base>
  406478:	ldr	x20, [x19, #24]
  40647c:	b	406358 <ferror@plt+0x39b8>
  406480:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  406484:	add	x3, x3, #0x7c8
  406488:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  40648c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  406490:	add	x3, x3, #0x498
  406494:	add	x1, x1, #0x100
  406498:	add	x0, x0, #0x3c0
  40649c:	mov	w2, #0x752                 	// #1874
  4064a0:	bl	402910 <__assert_fail@plt>
  4064a4:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  4064a8:	add	x3, x3, #0x7c8
  4064ac:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  4064b0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  4064b4:	add	x3, x3, #0x498
  4064b8:	add	x1, x1, #0x100
  4064bc:	add	x0, x0, #0x3d0
  4064c0:	mov	w2, #0x770                 	// #1904
  4064c4:	bl	402910 <__assert_fail@plt>
  4064c8:	stp	x29, x30, [sp, #-48]!
  4064cc:	mov	w3, #0x2                   	// #2
  4064d0:	mov	x29, sp
  4064d4:	stp	x19, x20, [sp, #16]
  4064d8:	mov	x19, x2
  4064dc:	mov	w20, w1
  4064e0:	str	x21, [sp, #32]
  4064e4:	mov	x21, x0
  4064e8:	ldr	x0, [x19]
  4064ec:	mov	w2, w3
  4064f0:	add	x0, x0, #0x8
  4064f4:	bl	404010 <ferror@plt+0x1670>
  4064f8:	tst	w0, #0xff
  4064fc:	b.ne	406574 <ferror@plt+0x3bd4>  // b.any
  406500:	cmp	w20, #0x0
  406504:	b.le	406548 <ferror@plt+0x3ba8>
  406508:	ldr	x0, [x19]
  40650c:	cmp	w20, #0x1
  406510:	ldr	x20, [x0, #8]
  406514:	b.eq	406584 <ferror@plt+0x3be4>  // b.none
  406518:	ldr	x0, [x19, #8]
  40651c:	ldr	x19, [x0, #8]
  406520:	mov	x0, x19
  406524:	bl	402390 <strlen@plt>
  406528:	mov	x3, x0
  40652c:	mov	x2, x19
  406530:	mov	x1, x20
  406534:	mov	x0, x21
  406538:	ldp	x19, x20, [sp, #16]
  40653c:	ldr	x21, [sp, #32]
  406540:	ldp	x29, x30, [sp], #48
  406544:	b	403d48 <ferror@plt+0x13a8>
  406548:	adrp	x20, 417000 <ferror@plt+0x14660>
  40654c:	add	x20, x20, #0xe98
  406550:	mov	x19, x20
  406554:	mov	x1, x20
  406558:	mov	x2, x19
  40655c:	mov	x0, x21
  406560:	ldp	x19, x20, [sp, #16]
  406564:	mov	x3, #0x0                   	// #0
  406568:	ldr	x21, [sp, #32]
  40656c:	ldp	x29, x30, [sp], #48
  406570:	b	403d48 <ferror@plt+0x13a8>
  406574:	ldp	x19, x20, [sp, #16]
  406578:	ldr	x21, [sp, #32]
  40657c:	ldp	x29, x30, [sp], #48
  406580:	ret
  406584:	adrp	x19, 417000 <ferror@plt+0x14660>
  406588:	mov	x3, #0x0                   	// #0
  40658c:	add	x19, x19, #0xe98
  406590:	b	40652c <ferror@plt+0x3b8c>
  406594:	nop
  406598:	stp	x29, x30, [sp, #-48]!
  40659c:	mov	w3, #0xffffffff            	// #-1
  4065a0:	mov	x29, sp
  4065a4:	stp	x19, x20, [sp, #16]
  4065a8:	mov	x20, x2
  4065ac:	mov	x19, x0
  4065b0:	mov	w2, #0x2                   	// #2
  4065b4:	stp	x21, x22, [sp, #32]
  4065b8:	mov	w21, w1
  4065bc:	ldr	x0, [x20]
  4065c0:	add	x0, x0, #0x8
  4065c4:	bl	404010 <ferror@plt+0x1670>
  4065c8:	tst	w0, #0xff
  4065cc:	b.ne	406708 <ferror@plt+0x3d68>  // b.any
  4065d0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4065d4:	ldr	w0, [x0, #1632]
  4065d8:	cbz	w0, 406680 <ferror@plt+0x3ce0>
  4065dc:	cmp	w21, #0x1
  4065e0:	b.le	406718 <ferror@plt+0x3d78>
  4065e4:	ldr	x0, [x20, #8]
  4065e8:	ldr	x22, [x0, #8]
  4065ec:	mov	x0, x22
  4065f0:	bl	402390 <strlen@plt>
  4065f4:	mov	x21, x0
  4065f8:	ldp	x0, x1, [x19, #24]
  4065fc:	sub	x1, x1, x0
  406600:	cmp	x21, x1
  406604:	b.ls	406620 <ferror@plt+0x3c80>  // b.plast
  406608:	mov	x1, x21
  40660c:	mov	x0, x19
  406610:	bl	4175a8 <_obstack_newchunk@@Base>
  406614:	ldr	x1, [x20, #8]
  406618:	ldr	x0, [x19, #24]
  40661c:	ldr	x22, [x1, #8]
  406620:	mov	x1, x22
  406624:	mov	x2, x21
  406628:	bl	402350 <memcpy@plt>
  40662c:	ldr	x1, [x19, #24]
  406630:	add	x0, x1, x21
  406634:	str	x0, [x19, #24]
  406638:	ldr	x1, [x19, #32]
  40663c:	cmp	x1, x0
  406640:	b.ne	4066ac <ferror@plt+0x3d0c>  // b.any
  406644:	mov	x0, x19
  406648:	mov	x1, #0x1                   	// #1
  40664c:	bl	4175a8 <_obstack_newchunk@@Base>
  406650:	ldr	x0, [x19, #24]
  406654:	add	x1, x0, #0x1
  406658:	str	x1, [x19, #24]
  40665c:	strb	wzr, [x0]
  406660:	ldp	x0, x3, [x19, #16]
  406664:	cmp	x0, x3
  406668:	b.ne	4066c4 <ferror@plt+0x3d24>  // b.any
  40666c:	nop
  406670:	ldrb	w1, [x19, #80]
  406674:	orr	w1, w1, #0x2
  406678:	strb	w1, [x19, #80]
  40667c:	b	4066c4 <ferror@plt+0x3d24>
  406680:	mov	w1, w21
  406684:	mov	x0, x19
  406688:	mov	x2, x20
  40668c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  406690:	mov	w4, #0x0                   	// #0
  406694:	add	x3, x3, #0x3e0
  406698:	bl	4037c0 <ferror@plt+0xe20>
  40669c:	ldr	x0, [x19, #24]
  4066a0:	ldr	x1, [x19, #32]
  4066a4:	cmp	x1, x0
  4066a8:	b.eq	406644 <ferror@plt+0x3ca4>  // b.none
  4066ac:	add	x1, x0, #0x1
  4066b0:	str	x1, [x19, #24]
  4066b4:	strb	wzr, [x0]
  4066b8:	ldp	x0, x3, [x19, #16]
  4066bc:	cmp	x0, x3
  4066c0:	b.eq	406670 <ferror@plt+0x3cd0>  // b.none
  4066c4:	ldr	x1, [x19, #48]
  4066c8:	ldr	x2, [x19, #8]
  4066cc:	add	x3, x3, x1
  4066d0:	ldr	x4, [x19, #32]
  4066d4:	bic	x1, x3, x1
  4066d8:	str	x1, [x19, #24]
  4066dc:	sub	x3, x1, x2
  4066e0:	sub	x2, x4, x2
  4066e4:	cmp	x3, x2
  4066e8:	b.ls	4066f4 <ferror@plt+0x3d54>  // b.plast
  4066ec:	mov	x1, x4
  4066f0:	str	x4, [x19, #24]
  4066f4:	ldp	x21, x22, [sp, #32]
  4066f8:	str	x1, [x19, #16]
  4066fc:	ldp	x19, x20, [sp, #16]
  406700:	ldp	x29, x30, [sp], #48
  406704:	b	40c2a8 <ferror@plt+0x9908>
  406708:	ldp	x19, x20, [sp, #16]
  40670c:	ldp	x21, x22, [sp, #32]
  406710:	ldp	x29, x30, [sp], #48
  406714:	ret
  406718:	ldr	x0, [x19, #24]
  40671c:	adrp	x22, 417000 <ferror@plt+0x14660>
  406720:	add	x22, x22, #0xe98
  406724:	mov	x21, #0x0                   	// #0
  406728:	mov	x1, x22
  40672c:	mov	x2, x21
  406730:	bl	402350 <memcpy@plt>
  406734:	ldr	x1, [x19, #24]
  406738:	add	x0, x1, x21
  40673c:	str	x0, [x19, #24]
  406740:	b	406638 <ferror@plt+0x3c98>
  406744:	nop
  406748:	stp	x29, x30, [sp, #-32]!
  40674c:	mov	w3, #0x2                   	// #2
  406750:	mov	x29, sp
  406754:	stp	x19, x20, [sp, #16]
  406758:	mov	x19, x2
  40675c:	mov	w20, w1
  406760:	mov	w2, #0x1                   	// #1
  406764:	ldr	x0, [x19]
  406768:	add	x0, x0, #0x8
  40676c:	bl	404010 <ferror@plt+0x1670>
  406770:	tst	w0, #0xff
  406774:	b.ne	4067e0 <ferror@plt+0x3e40>  // b.any
  406778:	cmp	w20, #0x1
  40677c:	b.eq	406818 <ferror@plt+0x3e78>  // b.none
  406780:	b.le	4067c8 <ferror@plt+0x3e28>
  406784:	ldr	x0, [x19, #8]
  406788:	ldr	x0, [x0, #8]
  40678c:	bl	408b08 <ferror@plt+0x6168>
  406790:	tst	w0, #0xff
  406794:	b.ne	4067e0 <ferror@plt+0x3e40>  // b.any
  406798:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40679c:	ldr	w20, [x0, #1628]
  4067a0:	bl	402920 <__errno_location@plt>
  4067a4:	ldr	x2, [x19, #8]
  4067a8:	ldr	w1, [x0]
  4067ac:	mov	w0, w20
  4067b0:	ldp	x19, x20, [sp, #16]
  4067b4:	ldp	x29, x30, [sp], #32
  4067b8:	ldr	x3, [x2, #8]
  4067bc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x878>
  4067c0:	add	x2, x2, #0x940
  4067c4:	b	4033d0 <ferror@plt+0xa30>
  4067c8:	adrp	x19, 417000 <ferror@plt+0x14660>
  4067cc:	add	x19, x19, #0xe98
  4067d0:	mov	x0, x19
  4067d4:	bl	408b08 <ferror@plt+0x6168>
  4067d8:	tst	w0, #0xff
  4067dc:	b.eq	4067ec <ferror@plt+0x3e4c>  // b.none
  4067e0:	ldp	x19, x20, [sp, #16]
  4067e4:	ldp	x29, x30, [sp], #32
  4067e8:	ret
  4067ec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4067f0:	ldr	w20, [x0, #1628]
  4067f4:	bl	402920 <__errno_location@plt>
  4067f8:	mov	x3, x19
  4067fc:	ldr	w1, [x0]
  406800:	mov	w0, w20
  406804:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x878>
  406808:	ldp	x19, x20, [sp, #16]
  40680c:	add	x2, x2, #0x940
  406810:	ldp	x29, x30, [sp], #32
  406814:	b	4033d0 <ferror@plt+0xa30>
  406818:	ldp	x19, x20, [sp, #16]
  40681c:	mov	x0, #0x0                   	// #0
  406820:	ldp	x29, x30, [sp], #32
  406824:	b	408b08 <ferror@plt+0x6168>
  406828:	stp	x29, x30, [sp, #-48]!
  40682c:	mov	w3, #0xffffffff            	// #-1
  406830:	mov	x29, sp
  406834:	stp	x19, x20, [sp, #16]
  406838:	mov	x19, x2
  40683c:	mov	w20, w1
  406840:	stp	x21, x22, [sp, #32]
  406844:	mov	x21, x0
  406848:	mov	w2, #0x2                   	// #2
  40684c:	ldr	x0, [x19]
  406850:	add	x0, x0, #0x8
  406854:	bl	404010 <ferror@plt+0x1670>
  406858:	tst	w0, #0xff
  40685c:	b.ne	406928 <ferror@plt+0x3f88>  // b.any
  406860:	ldr	x0, [x19, #8]
  406864:	ldr	w1, [x0]
  406868:	cmp	w1, #0x1
  40686c:	b.eq	4068a4 <ferror@plt+0x3f04>  // b.none
  406870:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406874:	cmp	w20, #0x0
  406878:	ldr	w0, [x0, #1628]
  40687c:	b.le	406944 <ferror@plt+0x3fa4>
  406880:	ldr	x1, [x19]
  406884:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  406888:	ldp	x19, x20, [sp, #16]
  40688c:	add	x2, x2, #0x3e8
  406890:	ldp	x21, x22, [sp, #32]
  406894:	ldp	x29, x30, [sp], #48
  406898:	ldr	x3, [x1, #8]
  40689c:	mov	w1, #0x0                   	// #0
  4068a0:	b	4033d0 <ferror@plt+0xa30>
  4068a4:	cmp	w20, #0x1
  4068a8:	b.le	406938 <ferror@plt+0x3f98>
  4068ac:	ldr	x22, [x0, #8]
  4068b0:	mov	x0, x22
  4068b4:	mov	w1, #0x0                   	// #0
  4068b8:	bl	40fd00 <ferror@plt+0xd360>
  4068bc:	cbz	x0, 406968 <ferror@plt+0x3fc8>
  4068c0:	ldr	w1, [x0, #24]
  4068c4:	cbz	w1, 406968 <ferror@plt+0x3fc8>
  4068c8:	ldrb	w1, [x0, #8]
  4068cc:	tbnz	w1, #2, 40690c <ferror@plt+0x3f6c>
  4068d0:	cmp	w20, #0x2
  4068d4:	b.le	40690c <ferror@plt+0x3f6c>
  4068d8:	adrp	x4, 417000 <ferror@plt+0x14660>
  4068dc:	add	x4, x4, #0xe98
  4068e0:	mov	x1, #0x2                   	// #2
  4068e4:	mov	w5, #0x1                   	// #1
  4068e8:	ldr	x2, [x19, x1, lsl #3]
  4068ec:	add	x1, x1, #0x1
  4068f0:	ldr	w3, [x2]
  4068f4:	cmp	w3, #0x1
  4068f8:	b.eq	406904 <ferror@plt+0x3f64>  // b.none
  4068fc:	str	w5, [x2]
  406900:	str	x4, [x2, #8]
  406904:	cmp	w20, w1
  406908:	b.gt	4068e8 <ferror@plt+0x3f48>
  40690c:	mov	x3, x21
  406910:	add	x2, x19, #0x8
  406914:	sub	w1, w20, #0x1
  406918:	ldp	x19, x20, [sp, #16]
  40691c:	ldp	x21, x22, [sp, #32]
  406920:	ldp	x29, x30, [sp], #48
  406924:	b	40d3a8 <ferror@plt+0xaa08>
  406928:	ldp	x19, x20, [sp, #16]
  40692c:	ldp	x21, x22, [sp, #32]
  406930:	ldp	x29, x30, [sp], #48
  406934:	ret
  406938:	adrp	x22, 417000 <ferror@plt+0x14660>
  40693c:	add	x22, x22, #0xe98
  406940:	b	4068b0 <ferror@plt+0x3f10>
  406944:	ldp	x19, x20, [sp, #16]
  406948:	adrp	x3, 417000 <ferror@plt+0x14660>
  40694c:	ldp	x21, x22, [sp, #32]
  406950:	add	x3, x3, #0xe98
  406954:	ldp	x29, x30, [sp], #48
  406958:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40695c:	mov	w1, #0x0                   	// #0
  406960:	add	x2, x2, #0x3e8
  406964:	b	4033d0 <ferror@plt+0xa30>
  406968:	mov	x3, x22
  40696c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406970:	ldp	x19, x20, [sp, #16]
  406974:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  406978:	ldp	x21, x22, [sp, #32]
  40697c:	add	x2, x2, #0x320
  406980:	ldp	x29, x30, [sp], #48
  406984:	mov	w1, #0x0                   	// #0
  406988:	ldr	w0, [x0, #1628]
  40698c:	b	4033d0 <ferror@plt+0xa30>
  406990:	stp	x29, x30, [sp, #-48]!
  406994:	mov	w3, #0xffffffff            	// #-1
  406998:	mov	x29, sp
  40699c:	stp	x19, x20, [sp, #16]
  4069a0:	mov	x19, x2
  4069a4:	mov	x20, x0
  4069a8:	mov	w2, #0x2                   	// #2
  4069ac:	ldr	x0, [x19]
  4069b0:	str	x21, [sp, #32]
  4069b4:	mov	w21, w1
  4069b8:	add	x0, x0, #0x8
  4069bc:	bl	404010 <ferror@plt+0x1670>
  4069c0:	tst	w0, #0xff
  4069c4:	b.eq	4069d8 <ferror@plt+0x4038>  // b.none
  4069c8:	ldp	x19, x20, [sp, #16]
  4069cc:	ldr	x21, [sp, #32]
  4069d0:	ldp	x29, x30, [sp], #48
  4069d4:	ret
  4069d8:	add	x2, x19, #0x8
  4069dc:	sub	w1, w21, #0x1
  4069e0:	mov	x0, x20
  4069e4:	ldp	x19, x20, [sp, #16]
  4069e8:	ldr	x21, [sp, #32]
  4069ec:	ldp	x29, x30, [sp], #48
  4069f0:	b	40a1c8 <ferror@plt+0x7828>
  4069f4:	nop
  4069f8:	stp	x29, x30, [sp, #-48]!
  4069fc:	mov	w3, #0xffffffff            	// #-1
  406a00:	mov	x29, sp
  406a04:	stp	x19, x20, [sp, #16]
  406a08:	mov	x20, x2
  406a0c:	mov	x19, x0
  406a10:	mov	w2, #0x2                   	// #2
  406a14:	ldr	x0, [x20]
  406a18:	str	x21, [sp, #32]
  406a1c:	mov	w21, w1
  406a20:	add	x0, x0, #0x8
  406a24:	bl	404010 <ferror@plt+0x1670>
  406a28:	tst	w0, #0xff
  406a2c:	b.eq	406a40 <ferror@plt+0x40a0>  // b.none
  406a30:	ldp	x19, x20, [sp, #16]
  406a34:	ldr	x21, [sp, #32]
  406a38:	ldp	x29, x30, [sp], #48
  406a3c:	ret
  406a40:	mov	w1, w21
  406a44:	mov	x0, x19
  406a48:	mov	x2, x20
  406a4c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  406a50:	mov	w4, #0x0                   	// #0
  406a54:	add	x3, x3, #0x3e0
  406a58:	bl	4037c0 <ferror@plt+0xe20>
  406a5c:	ldp	x0, x1, [x19, #24]
  406a60:	cmp	x1, x0
  406a64:	b.eq	406af0 <ferror@plt+0x4150>  // b.none
  406a68:	add	x1, x0, #0x1
  406a6c:	str	x1, [x19, #24]
  406a70:	strb	wzr, [x0]
  406a74:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  406a78:	bl	408a70 <ferror@plt+0x60d0>
  406a7c:	ldp	x2, x4, [x19, #16]
  406a80:	ldr	x0, [x20, #1032]
  406a84:	cmp	x2, x4
  406a88:	b.eq	406ae0 <ferror@plt+0x4140>  // b.none
  406a8c:	ldr	x1, [x19, #48]
  406a90:	ldr	x3, [x19, #8]
  406a94:	add	x4, x4, x1
  406a98:	ldr	x5, [x19, #32]
  406a9c:	bic	x1, x4, x1
  406aa0:	str	x1, [x19, #24]
  406aa4:	sub	x4, x1, x3
  406aa8:	sub	x3, x5, x3
  406aac:	cmp	x4, x3
  406ab0:	b.ls	406abc <ferror@plt+0x411c>  // b.plast
  406ab4:	mov	x1, x5
  406ab8:	str	x5, [x19, #24]
  406abc:	str	x1, [x19, #16]
  406ac0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  406ac4:	add	x1, x1, #0xf20
  406ac8:	bl	416d88 <ferror@plt+0x143e8>
  406acc:	ldr	x0, [x20, #1032]
  406ad0:	ldp	x19, x20, [sp, #16]
  406ad4:	ldr	x21, [sp, #32]
  406ad8:	ldp	x29, x30, [sp], #48
  406adc:	b	4172a8 <ferror@plt+0x14908>
  406ae0:	ldrb	w1, [x19, #80]
  406ae4:	orr	w1, w1, #0x2
  406ae8:	strb	w1, [x19, #80]
  406aec:	b	406a8c <ferror@plt+0x40ec>
  406af0:	mov	x0, x19
  406af4:	mov	x1, #0x1                   	// #1
  406af8:	bl	4175a8 <_obstack_newchunk@@Base>
  406afc:	ldr	x0, [x19, #24]
  406b00:	b	406a68 <ferror@plt+0x40c8>
  406b04:	nop
  406b08:	stp	x29, x30, [sp, #-112]!
  406b0c:	mov	w3, #0xffffffff            	// #-1
  406b10:	mov	x29, sp
  406b14:	stp	x23, x24, [sp, #48]
  406b18:	mov	x24, x2
  406b1c:	mov	w2, #0x2                   	// #2
  406b20:	stp	x21, x22, [sp, #32]
  406b24:	mov	x21, x0
  406b28:	mov	w22, w1
  406b2c:	ldr	x0, [x24]
  406b30:	add	x0, x0, #0x8
  406b34:	bl	404010 <ferror@plt+0x1670>
  406b38:	tst	w0, #0xff
  406b3c:	b.ne	406d34 <ferror@plt+0x4394>  // b.any
  406b40:	stp	x19, x20, [sp, #16]
  406b44:	cmp	w22, #0x0
  406b48:	b.le	406d54 <ferror@plt+0x43b4>
  406b4c:	cmp	w22, #0x1
  406b50:	mov	w20, #0x1                   	// #1
  406b54:	b.eq	406d30 <ferror@plt+0x4390>  // b.none
  406b58:	adrp	x23, 417000 <ferror@plt+0x14660>
  406b5c:	add	x23, x23, #0xe98
  406b60:	stp	x25, x26, [sp, #64]
  406b64:	adrp	x25, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  406b68:	adrp	x26, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  406b6c:	add	x25, x25, #0xd48
  406b70:	stp	x27, x28, [sp, #80]
  406b74:	b	406bbc <ferror@plt+0x421c>
  406b78:	ldr	x0, [x19, #32]
  406b7c:	adrp	x1, 403000 <ferror@plt+0x660>
  406b80:	add	x1, x1, #0x528
  406b84:	cmp	x0, x1
  406b88:	b.eq	406d10 <ferror@plt+0x4370>  // b.none
  406b8c:	cmp	w22, #0x2
  406b90:	b.eq	406cf4 <ferror@plt+0x4354>  // b.none
  406b94:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406b98:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  406b9c:	mov	x3, x27
  406ba0:	add	x2, x2, #0x420
  406ba4:	ldr	w0, [x0, #1628]
  406ba8:	mov	w1, #0x0                   	// #0
  406bac:	bl	4033d0 <ferror@plt+0xa30>
  406bb0:	add	w20, w20, #0x1
  406bb4:	cmp	w22, w20
  406bb8:	b.eq	406d44 <ferror@plt+0x43a4>  // b.none
  406bbc:	cmp	w22, w20
  406bc0:	mov	x27, x23
  406bc4:	b.le	406bd0 <ferror@plt+0x4230>
  406bc8:	ldr	x0, [x24, w20, sxtw #3]
  406bcc:	ldr	x27, [x0, #8]
  406bd0:	mov	x0, x27
  406bd4:	mov	w1, #0x0                   	// #0
  406bd8:	bl	40fd00 <ferror@plt+0xd360>
  406bdc:	mov	x19, x0
  406be0:	cbz	x0, 406bb0 <ferror@plt+0x4210>
  406be4:	ldr	w0, [x0, #24]
  406be8:	cmp	w0, #0x1
  406bec:	b.eq	406c18 <ferror@plt+0x4278>  // b.none
  406bf0:	cmp	w0, #0x2
  406bf4:	b.eq	406b78 <ferror@plt+0x41d8>  // b.none
  406bf8:	cbz	w0, 406bb0 <ferror@plt+0x4210>
  406bfc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406c00:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  406c04:	add	x2, x2, #0x450
  406c08:	mov	w1, #0x0                   	// #0
  406c0c:	ldr	w0, [x0, #1628]
  406c10:	bl	4033d0 <ferror@plt+0xa30>
  406c14:	bl	4026d0 <abort@plt>
  406c18:	ldp	x0, x1, [x21, #24]
  406c1c:	ldr	x27, [x25, #8]
  406c20:	sub	x1, x1, x0
  406c24:	cmp	x27, x1
  406c28:	b.hi	406cb4 <ferror@plt+0x4314>  // b.pmore
  406c2c:	ldr	x1, [x25]
  406c30:	mov	x2, x27
  406c34:	bl	402350 <memcpy@plt>
  406c38:	ldr	x28, [x21, #24]
  406c3c:	ldr	x1, [x19, #32]
  406c40:	add	x28, x28, x27
  406c44:	str	x28, [x21, #24]
  406c48:	mov	x0, x1
  406c4c:	str	x1, [sp, #104]
  406c50:	bl	402390 <strlen@plt>
  406c54:	mov	x27, x0
  406c58:	ldr	x2, [x21, #32]
  406c5c:	ldr	x1, [sp, #104]
  406c60:	sub	x2, x2, x28
  406c64:	cmp	x0, x2
  406c68:	b.hi	406cdc <ferror@plt+0x433c>  // b.pmore
  406c6c:	mov	x2, x27
  406c70:	mov	x0, x28
  406c74:	bl	402350 <memcpy@plt>
  406c78:	ldp	x1, x2, [x21, #24]
  406c7c:	add	x3, x26, #0xd80
  406c80:	ldr	x19, [x3, #8]
  406c84:	add	x0, x1, x27
  406c88:	str	x0, [x21, #24]
  406c8c:	sub	x2, x2, x0
  406c90:	cmp	x19, x2
  406c94:	b.hi	406cc8 <ferror@plt+0x4328>  // b.pmore
  406c98:	ldr	x1, [x26, #3456]
  406c9c:	mov	x2, x19
  406ca0:	bl	402350 <memcpy@plt>
  406ca4:	ldr	x2, [x21, #24]
  406ca8:	add	x2, x2, x19
  406cac:	str	x2, [x21, #24]
  406cb0:	b	406bb0 <ferror@plt+0x4210>
  406cb4:	mov	x0, x21
  406cb8:	mov	x1, x27
  406cbc:	bl	4175a8 <_obstack_newchunk@@Base>
  406cc0:	ldr	x0, [x21, #24]
  406cc4:	b	406c2c <ferror@plt+0x428c>
  406cc8:	mov	x0, x21
  406ccc:	mov	x1, x19
  406cd0:	bl	4175a8 <_obstack_newchunk@@Base>
  406cd4:	ldr	x0, [x21, #24]
  406cd8:	b	406c98 <ferror@plt+0x42f8>
  406cdc:	mov	x1, x0
  406ce0:	mov	x0, x21
  406ce4:	bl	4175a8 <_obstack_newchunk@@Base>
  406ce8:	ldr	x28, [x21, #24]
  406cec:	ldr	x1, [x19, #32]
  406cf0:	b	406c6c <ferror@plt+0x42cc>
  406cf4:	ldp	x19, x20, [sp, #16]
  406cf8:	ldp	x21, x22, [sp, #32]
  406cfc:	ldp	x23, x24, [sp, #48]
  406d00:	ldp	x25, x26, [sp, #64]
  406d04:	ldp	x27, x28, [sp, #80]
  406d08:	ldp	x29, x30, [sp], #112
  406d0c:	b	40bd90 <ferror@plt+0x93f0>
  406d10:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406d14:	mov	x3, x27
  406d18:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x878>
  406d1c:	mov	w1, #0x0                   	// #0
  406d20:	ldr	w0, [x0, #1628]
  406d24:	add	x2, x2, #0xf88
  406d28:	bl	4033d0 <ferror@plt+0xa30>
  406d2c:	b	406bb0 <ferror@plt+0x4210>
  406d30:	ldp	x19, x20, [sp, #16]
  406d34:	ldp	x21, x22, [sp, #32]
  406d38:	ldp	x23, x24, [sp, #48]
  406d3c:	ldp	x29, x30, [sp], #112
  406d40:	ret
  406d44:	ldp	x19, x20, [sp, #16]
  406d48:	ldp	x25, x26, [sp, #64]
  406d4c:	ldp	x27, x28, [sp, #80]
  406d50:	b	406d34 <ferror@plt+0x4394>
  406d54:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x1878>
  406d58:	add	x3, x3, #0x7c8
  406d5c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  406d60:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  406d64:	add	x3, x3, #0x4a8
  406d68:	add	x1, x1, #0x100
  406d6c:	add	x0, x0, #0x410
  406d70:	mov	w2, #0x382                 	// #898
  406d74:	stp	x25, x26, [sp, #64]
  406d78:	stp	x27, x28, [sp, #80]
  406d7c:	bl	402910 <__assert_fail@plt>
  406d80:	stp	x29, x30, [sp, #-32]!
  406d84:	mov	w3, #0x2                   	// #2
  406d88:	mov	x29, sp
  406d8c:	stp	x19, x20, [sp, #16]
  406d90:	mov	x19, x2
  406d94:	mov	w20, w1
  406d98:	mov	w2, #0x1                   	// #1
  406d9c:	ldr	x0, [x19]
  406da0:	add	x0, x0, #0x8
  406da4:	bl	404010 <ferror@plt+0x1670>
  406da8:	tst	w0, #0xff
  406dac:	b.ne	406e04 <ferror@plt+0x4464>  // b.any
  406db0:	cmp	w20, #0x1
  406db4:	b.eq	406e10 <ferror@plt+0x4470>  // b.none
  406db8:	b.le	406e78 <ferror@plt+0x44d8>
  406dbc:	ldr	x0, [x19, #8]
  406dc0:	mov	w1, #0xfd                  	// #253
  406dc4:	ldr	x0, [x0, #8]
  406dc8:	ldrb	w20, [x0]
  406dcc:	sub	w2, w20, #0x2b
  406dd0:	tst	w2, w1
  406dd4:	b.ne	406e24 <ferror@plt+0x4484>  // b.any
  406dd8:	add	x0, x0, #0x1
  406ddc:	bl	4088e0 <ferror@plt+0x5f40>
  406de0:	tbnz	w0, #31, 406e30 <ferror@plt+0x4490>
  406de4:	cmp	w20, #0x2b
  406de8:	b.eq	406e98 <ferror@plt+0x44f8>  // b.none
  406dec:	cmp	w20, #0x2d
  406df0:	b.ne	406e58 <ferror@plt+0x44b8>  // b.any
  406df4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  406df8:	ldr	w2, [x1, #1644]
  406dfc:	bic	w0, w2, w0
  406e00:	str	w0, [x1, #1644]
  406e04:	ldp	x19, x20, [sp, #16]
  406e08:	ldp	x29, x30, [sp], #32
  406e0c:	ret
  406e10:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406e14:	ldp	x19, x20, [sp, #16]
  406e18:	str	wzr, [x0, #1644]
  406e1c:	ldp	x29, x30, [sp], #32
  406e20:	ret
  406e24:	bl	4088e0 <ferror@plt+0x5f40>
  406e28:	tbz	w0, #31, 406e8c <ferror@plt+0x44ec>
  406e2c:	nop
  406e30:	ldr	x1, [x19, #8]
  406e34:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406e38:	ldr	w0, [x0, #1628]
  406e3c:	ldr	x3, [x1, #8]
  406e40:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  406e44:	ldp	x19, x20, [sp, #16]
  406e48:	add	x2, x2, #0x480
  406e4c:	ldp	x29, x30, [sp], #32
  406e50:	mov	w1, #0x0                   	// #0
  406e54:	b	4033d0 <ferror@plt+0xa30>
  406e58:	cbz	w20, 406e8c <ferror@plt+0x44ec>
  406e5c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406e60:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  406e64:	add	x2, x2, #0x4a8
  406e68:	mov	w1, #0x0                   	// #0
  406e6c:	ldr	w0, [x0, #1628]
  406e70:	bl	4033d0 <ferror@plt+0xa30>
  406e74:	bl	4026d0 <abort@plt>
  406e78:	adrp	x19, 417000 <ferror@plt+0x14660>
  406e7c:	add	x19, x19, #0xe98
  406e80:	mov	x0, x19
  406e84:	bl	4088e0 <ferror@plt+0x5f40>
  406e88:	tbnz	w0, #31, 406eac <ferror@plt+0x450c>
  406e8c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  406e90:	str	w0, [x1, #1644]
  406e94:	b	406e04 <ferror@plt+0x4464>
  406e98:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x19878>
  406e9c:	ldr	w1, [x2, #1644]
  406ea0:	orr	w0, w1, w0
  406ea4:	str	w0, [x2, #1644]
  406ea8:	b	406e04 <ferror@plt+0x4464>
  406eac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  406eb0:	mov	x3, x19
  406eb4:	ldr	w0, [x0, #1628]
  406eb8:	b	406e40 <ferror@plt+0x44a0>
  406ebc:	nop
  406ec0:	stp	x29, x30, [sp, #-32]!
  406ec4:	mov	w3, #0x3                   	// #3
  406ec8:	mov	x29, sp
  406ecc:	stp	x19, x20, [sp, #16]
  406ed0:	mov	x19, x2
  406ed4:	mov	w20, w1
  406ed8:	mov	w2, #0x1                   	// #1
  406edc:	ldr	x0, [x19]
  406ee0:	add	x0, x0, #0x8
  406ee4:	bl	404010 <ferror@plt+0x1670>
  406ee8:	tst	w0, #0xff
  406eec:	b.ne	406f30 <ferror@plt+0x4590>  // b.any
  406ef0:	cmp	w20, #0x1
  406ef4:	b.le	406f1c <ferror@plt+0x457c>
  406ef8:	ldr	x0, [x19, #8]
  406efc:	cmp	w20, #0x2
  406f00:	ldr	x0, [x0, #8]
  406f04:	b.eq	406f3c <ferror@plt+0x459c>  // b.none
  406f08:	ldr	x1, [x19, #16]
  406f0c:	ldr	x1, [x1, #8]
  406f10:	ldp	x19, x20, [sp, #16]
  406f14:	ldp	x29, x30, [sp], #32
  406f18:	b	40c7c8 <ferror@plt+0x9e28>
  406f1c:	ldp	x19, x20, [sp, #16]
  406f20:	mov	x0, #0x0                   	// #0
  406f24:	ldp	x29, x30, [sp], #32
  406f28:	mov	x1, #0x0                   	// #0
  406f2c:	b	40c7c8 <ferror@plt+0x9e28>
  406f30:	ldp	x19, x20, [sp, #16]
  406f34:	ldp	x29, x30, [sp], #32
  406f38:	ret
  406f3c:	mov	x1, #0x0                   	// #0
  406f40:	b	406f10 <ferror@plt+0x4570>
  406f44:	nop
  406f48:	stp	x29, x30, [sp, #-32]!
  406f4c:	mov	w3, #0x3                   	// #3
  406f50:	mov	x29, sp
  406f54:	stp	x19, x20, [sp, #16]
  406f58:	mov	x19, x2
  406f5c:	mov	w20, w1
  406f60:	mov	w2, #0x1                   	// #1
  406f64:	ldr	x0, [x19]
  406f68:	add	x0, x0, #0x8
  406f6c:	bl	404010 <ferror@plt+0x1670>
  406f70:	tst	w0, #0xff
  406f74:	b.ne	406fb8 <ferror@plt+0x4618>  // b.any
  406f78:	cmp	w20, #0x1
  406f7c:	b.le	406fa4 <ferror@plt+0x4604>
  406f80:	ldr	x0, [x19, #8]
  406f84:	cmp	w20, #0x2
  406f88:	ldr	x0, [x0, #8]
  406f8c:	b.eq	406fc4 <ferror@plt+0x4624>  // b.none
  406f90:	ldr	x1, [x19, #16]
  406f94:	ldr	x1, [x1, #8]
  406f98:	ldp	x19, x20, [sp, #16]
  406f9c:	ldp	x29, x30, [sp], #32
  406fa0:	b	40c888 <ferror@plt+0x9ee8>
  406fa4:	ldp	x19, x20, [sp, #16]
  406fa8:	mov	x0, #0x0                   	// #0
  406fac:	ldp	x29, x30, [sp], #32
  406fb0:	mov	x1, #0x0                   	// #0
  406fb4:	b	40c888 <ferror@plt+0x9ee8>
  406fb8:	ldp	x19, x20, [sp, #16]
  406fbc:	ldp	x29, x30, [sp], #32
  406fc0:	ret
  406fc4:	mov	x1, #0x0                   	// #0
  406fc8:	b	406f98 <ferror@plt+0x45f8>
  406fcc:	nop
  406fd0:	stp	x29, x30, [sp, #-48]!
  406fd4:	mov	w3, #0x2                   	// #2
  406fd8:	mov	x29, sp
  406fdc:	stp	x19, x20, [sp, #16]
  406fe0:	mov	x19, x2
  406fe4:	mov	x20, x0
  406fe8:	mov	w2, w3
  406fec:	ldr	x0, [x19]
  406ff0:	str	x21, [sp, #32]
  406ff4:	mov	w21, w1
  406ff8:	add	x0, x0, #0x8
  406ffc:	bl	404010 <ferror@plt+0x1670>
  407000:	tst	w0, #0xff
  407004:	b.ne	407038 <ferror@plt+0x4698>  // b.any
  407008:	cmp	w21, #0x1
  40700c:	mov	w1, #0x0                   	// #0
  407010:	b.le	407024 <ferror@plt+0x4684>
  407014:	ldr	x0, [x19, #8]
  407018:	ldr	x0, [x0, #8]
  40701c:	bl	402390 <strlen@plt>
  407020:	mov	w1, w0
  407024:	mov	x0, x20
  407028:	ldp	x19, x20, [sp, #16]
  40702c:	ldr	x21, [sp, #32]
  407030:	ldp	x29, x30, [sp], #48
  407034:	b	403c60 <ferror@plt+0x12c0>
  407038:	ldp	x19, x20, [sp, #16]
  40703c:	ldr	x21, [sp, #32]
  407040:	ldp	x29, x30, [sp], #48
  407044:	ret
  407048:	stp	x29, x30, [sp, #-48]!
  40704c:	mov	w3, #0x3                   	// #3
  407050:	mov	x29, sp
  407054:	stp	x19, x20, [sp, #16]
  407058:	mov	x19, x2
  40705c:	mov	w20, w1
  407060:	str	x21, [sp, #32]
  407064:	mov	x21, x0
  407068:	ldr	x0, [x19]
  40706c:	mov	w2, w3
  407070:	add	x0, x0, #0x8
  407074:	bl	404010 <ferror@plt+0x1670>
  407078:	tst	w0, #0xff
  40707c:	b.ne	4070dc <ferror@plt+0x473c>  // b.any
  407080:	cmp	w20, #0x1
  407084:	b.le	4070cc <ferror@plt+0x472c>
  407088:	ldr	x0, [x19, #8]
  40708c:	cmp	w20, #0x2
  407090:	ldr	x20, [x0, #8]
  407094:	b.eq	40710c <ferror@plt+0x476c>  // b.none
  407098:	ldr	x0, [x19, #16]
  40709c:	ldr	x1, [x0, #8]
  4070a0:	mov	x0, x20
  4070a4:	bl	4028b0 <strstr@plt>
  4070a8:	mov	x2, x0
  4070ac:	sub	x1, x2, x20
  4070b0:	mov	x0, x21
  4070b4:	ldp	x19, x20, [sp, #16]
  4070b8:	cmp	x2, #0x0
  4070bc:	ldr	x21, [sp, #32]
  4070c0:	csinv	w1, w1, wzr, ne  // ne = any
  4070c4:	ldp	x29, x30, [sp], #48
  4070c8:	b	403c60 <ferror@plt+0x12c0>
  4070cc:	adrp	x20, 417000 <ferror@plt+0x14660>
  4070d0:	add	x20, x20, #0xe98
  4070d4:	mov	x1, x20
  4070d8:	b	4070a0 <ferror@plt+0x4700>
  4070dc:	cmp	w20, #0x2
  4070e0:	b.eq	4070f4 <ferror@plt+0x4754>  // b.none
  4070e4:	ldp	x19, x20, [sp, #16]
  4070e8:	ldr	x21, [sp, #32]
  4070ec:	ldp	x29, x30, [sp], #48
  4070f0:	ret
  4070f4:	mov	x0, x21
  4070f8:	mov	w1, #0x0                   	// #0
  4070fc:	ldp	x19, x20, [sp, #16]
  407100:	ldr	x21, [sp, #32]
  407104:	ldp	x29, x30, [sp], #48
  407108:	b	403c60 <ferror@plt+0x12c0>
  40710c:	adrp	x1, 417000 <ferror@plt+0x14660>
  407110:	add	x1, x1, #0xe98
  407114:	b	4070a0 <ferror@plt+0x4700>
  407118:	stp	x29, x30, [sp, #-32]!
  40711c:	mov	x4, x2
  407120:	mov	w3, #0x1                   	// #1
  407124:	mov	x29, sp
  407128:	str	x19, [sp, #16]
  40712c:	mov	x19, x0
  407130:	ldr	x0, [x4]
  407134:	mov	w2, w3
  407138:	add	x0, x0, #0x8
  40713c:	bl	404010 <ferror@plt+0x1670>
  407140:	tst	w0, #0xff
  407144:	b.eq	407154 <ferror@plt+0x47b4>  // b.none
  407148:	ldr	x19, [sp, #16]
  40714c:	ldp	x29, x30, [sp], #32
  407150:	ret
  407154:	mov	x0, x19
  407158:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40715c:	ldr	x19, [sp, #16]
  407160:	ldp	x29, x30, [sp], #32
  407164:	ldr	w1, [x1, #3476]
  407168:	b	403c60 <ferror@plt+0x12c0>
  40716c:	nop
  407170:	stp	x29, x30, [sp, #-32]!
  407174:	mov	x4, x2
  407178:	mov	w3, #0x1                   	// #1
  40717c:	mov	x29, sp
  407180:	str	x19, [sp, #16]
  407184:	mov	x19, x0
  407188:	ldr	x0, [x4]
  40718c:	mov	w2, w3
  407190:	add	x0, x0, #0x8
  407194:	bl	404010 <ferror@plt+0x1670>
  407198:	tst	w0, #0xff
  40719c:	b.eq	4071ac <ferror@plt+0x480c>  // b.none
  4071a0:	ldr	x19, [sp, #16]
  4071a4:	ldp	x29, x30, [sp], #32
  4071a8:	ret
  4071ac:	mov	x0, x19
  4071b0:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4071b4:	ldr	x19, [sp, #16]
  4071b8:	ldp	x29, x30, [sp], #32
  4071bc:	ldr	w1, [x1, #3392]
  4071c0:	b	403c60 <ferror@plt+0x12c0>
  4071c4:	nop
  4071c8:	stp	x29, x30, [sp, #-80]!
  4071cc:	mov	w3, #0x2                   	// #2
  4071d0:	mov	x29, sp
  4071d4:	stp	x19, x20, [sp, #16]
  4071d8:	mov	x19, x2
  4071dc:	mov	w2, w3
  4071e0:	stp	x23, x24, [sp, #48]
  4071e4:	mov	x23, x0
  4071e8:	ldr	x0, [x19]
  4071ec:	stp	x21, x22, [sp, #32]
  4071f0:	mov	w21, w1
  4071f4:	add	x0, x0, #0x8
  4071f8:	bl	404010 <ferror@plt+0x1670>
  4071fc:	ands	w20, w0, #0xff
  407200:	b.ne	4073e8 <ferror@plt+0x4a48>  // b.any
  407204:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  407208:	ldr	w0, [x0, #1632]
  40720c:	cbz	w0, 4073fc <ferror@plt+0x4a5c>
  407210:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  407214:	str	x25, [sp, #64]
  407218:	cmp	w21, #0x1
  40721c:	ldr	w22, [x0, #1628]
  407220:	b.le	4074f8 <ferror@plt+0x4b58>
  407224:	ldr	x0, [x19, #8]
  407228:	ldr	x25, [x0, #8]
  40722c:	mov	x0, x25
  407230:	bl	402390 <strlen@plt>
  407234:	mov	x21, x0
  407238:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40723c:	mov	w0, w22
  407240:	add	x2, x2, #0x4d8
  407244:	mov	w1, #0x0                   	// #0
  407248:	bl	4033d0 <ferror@plt+0xa30>
  40724c:	mov	w22, w21
  407250:	sxtw	x19, w21
  407254:	cmp	w21, #0x1
  407258:	b.le	40753c <ferror@plt+0x4b9c>
  40725c:	sub	x2, x25, #0x1
  407260:	b	407274 <ferror@plt+0x48d4>
  407264:	sub	w24, w19, #0x1
  407268:	sub	x19, x19, #0x1
  40726c:	cmp	w19, #0x1
  407270:	b.le	4074cc <ferror@plt+0x4b2c>
  407274:	ldrb	w1, [x2, x19]
  407278:	mov	w24, w19
  40727c:	cmp	w1, #0x58
  407280:	b.eq	407264 <ferror@plt+0x48c4>  // b.none
  407284:	sub	w21, w21, w19
  407288:	ldp	x0, x1, [x23, #24]
  40728c:	sub	x1, x1, x0
  407290:	cmp	x1, x19
  407294:	b.cs	4072a8 <ferror@plt+0x4908>  // b.hs, b.nlast
  407298:	mov	x0, x23
  40729c:	mov	x1, x19
  4072a0:	bl	4175a8 <_obstack_newchunk@@Base>
  4072a4:	ldr	x0, [x23, #24]
  4072a8:	mov	x2, x19
  4072ac:	mov	x1, x25
  4072b0:	bl	402350 <memcpy@plt>
  4072b4:	ldr	x0, [x23, #24]
  4072b8:	add	x19, x0, x19
  4072bc:	str	x19, [x23, #24]
  4072c0:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  4072c4:	add	x19, x19, #0x678
  4072c8:	bl	402500 <getpid@plt>
  4072cc:	mov	w2, w0
  4072d0:	strb	wzr, [x19, #263]
  4072d4:	tbz	w0, #31, 4072e0 <ferror@plt+0x4940>
  4072d8:	neg	w2, w0
  4072dc:	mov	w20, #0x1                   	// #1
  4072e0:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x1878>
  4072e4:	mov	w5, #0xcccd                	// #52429
  4072e8:	add	x19, x19, #0x107
  4072ec:	add	x4, x4, #0x7c8
  4072f0:	movk	w5, #0xcccc, lsl #16
  4072f4:	nop
  4072f8:	umull	x1, w2, w5
  4072fc:	mov	x6, x19
  407300:	cmp	w2, #0x9
  407304:	lsr	x1, x1, #35
  407308:	add	w3, w1, w1, lsl #2
  40730c:	sub	w3, w2, w3, lsl #1
  407310:	mov	w2, w1
  407314:	ldrb	w0, [x4, w3, uxtw]
  407318:	strb	w0, [x19, #-1]!
  40731c:	b.hi	4072f8 <ferror@plt+0x4958>  // b.pmore
  407320:	cbz	w20, 407330 <ferror@plt+0x4990>
  407324:	mov	w0, #0x2d                  	// #45
  407328:	sturb	w0, [x19, #-1]
  40732c:	sub	x19, x6, #0x2
  407330:	mov	x0, x19
  407334:	bl	402390 <strlen@plt>
  407338:	mov	x25, x0
  40733c:	cmp	w0, w21
  407340:	ldp	x0, x1, [x23, #24]
  407344:	b.gt	407478 <ferror@plt+0x4ad8>
  407348:	sub	w22, w22, w25
  40734c:	add	w20, w24, #0x1
  407350:	cmp	w22, w24
  407354:	b.le	4073b0 <ferror@plt+0x4a10>
  407358:	add	w22, w22, #0x1
  40735c:	mov	w21, #0x30                  	// #48
  407360:	b	40737c <ferror@plt+0x49dc>
  407364:	add	x1, x0, #0x1
  407368:	str	x1, [x23, #24]
  40736c:	strb	w21, [x0]
  407370:	cmp	w20, w22
  407374:	ldp	x0, x1, [x23, #24]
  407378:	b.eq	4073b0 <ferror@plt+0x4a10>  // b.none
  40737c:	add	w20, w20, #0x1
  407380:	cmp	x1, x0
  407384:	b.ne	407364 <ferror@plt+0x49c4>  // b.any
  407388:	mov	x0, x23
  40738c:	mov	x1, #0x1                   	// #1
  407390:	bl	4175a8 <_obstack_newchunk@@Base>
  407394:	ldr	x0, [x23, #24]
  407398:	cmp	w20, w22
  40739c:	add	x1, x0, #0x1
  4073a0:	str	x1, [x23, #24]
  4073a4:	strb	w21, [x0]
  4073a8:	ldp	x0, x1, [x23, #24]
  4073ac:	b.ne	40737c <ferror@plt+0x49dc>  // b.any
  4073b0:	sxtw	x25, w25
  4073b4:	sub	x3, x1, x0
  4073b8:	add	x1, x25, #0x1
  4073bc:	cmp	x3, x1
  4073c0:	b.cc	4074d8 <ferror@plt+0x4b38>  // b.lo, b.ul, b.last
  4073c4:	mov	x1, x19
  4073c8:	mov	x2, x25
  4073cc:	bl	402350 <memcpy@plt>
  4073d0:	ldr	x1, [x23, #24]
  4073d4:	add	x0, x1, x25
  4073d8:	add	x0, x0, #0x1
  4073dc:	str	x0, [x23, #24]
  4073e0:	strb	wzr, [x1, x25]
  4073e4:	ldr	x25, [sp, #64]
  4073e8:	ldp	x19, x20, [sp, #16]
  4073ec:	ldp	x21, x22, [sp, #32]
  4073f0:	ldp	x23, x24, [sp, #48]
  4073f4:	ldp	x29, x30, [sp], #80
  4073f8:	ret
  4073fc:	cmp	w21, #0x0
  407400:	b.le	407448 <ferror@plt+0x4aa8>
  407404:	ldr	x0, [x19]
  407408:	cmp	w21, #0x1
  40740c:	ldr	x20, [x0, #8]
  407410:	b.eq	40752c <ferror@plt+0x4b8c>  // b.none
  407414:	ldr	x0, [x19, #8]
  407418:	ldr	x19, [x0, #8]
  40741c:	mov	x0, x19
  407420:	bl	402390 <strlen@plt>
  407424:	mov	x3, x0
  407428:	mov	x2, x19
  40742c:	mov	x1, x20
  407430:	mov	x0, x23
  407434:	ldp	x19, x20, [sp, #16]
  407438:	ldp	x21, x22, [sp, #32]
  40743c:	ldp	x23, x24, [sp, #48]
  407440:	ldp	x29, x30, [sp], #80
  407444:	b	403d48 <ferror@plt+0x13a8>
  407448:	adrp	x20, 417000 <ferror@plt+0x14660>
  40744c:	add	x20, x20, #0xe98
  407450:	mov	x19, x20
  407454:	mov	x1, x20
  407458:	mov	x2, x19
  40745c:	mov	x0, x23
  407460:	ldp	x19, x20, [sp, #16]
  407464:	mov	x3, #0x0                   	// #0
  407468:	ldp	x21, x22, [sp, #32]
  40746c:	ldp	x23, x24, [sp, #48]
  407470:	ldp	x29, x30, [sp], #80
  407474:	b	403d48 <ferror@plt+0x13a8>
  407478:	sxtw	x21, w21
  40747c:	sub	x3, x1, x0
  407480:	add	x1, x21, #0x1
  407484:	cmp	x3, x1
  407488:	b.cc	4074e8 <ferror@plt+0x4b48>  // b.lo, b.ul, b.last
  40748c:	sxtw	x1, w25
  407490:	mov	x2, x21
  407494:	sub	x1, x1, x21
  407498:	add	x1, x19, x1
  40749c:	bl	402350 <memcpy@plt>
  4074a0:	ldr	x1, [x23, #24]
  4074a4:	add	x0, x1, x21
  4074a8:	add	x0, x0, #0x1
  4074ac:	str	x0, [x23, #24]
  4074b0:	strb	wzr, [x1, x21]
  4074b4:	ldp	x19, x20, [sp, #16]
  4074b8:	ldp	x21, x22, [sp, #32]
  4074bc:	ldp	x23, x24, [sp, #48]
  4074c0:	ldr	x25, [sp, #64]
  4074c4:	ldp	x29, x30, [sp], #80
  4074c8:	ret
  4074cc:	sub	w21, w21, w24
  4074d0:	sxtw	x19, w24
  4074d4:	b	407288 <ferror@plt+0x48e8>
  4074d8:	mov	x0, x23
  4074dc:	bl	4175a8 <_obstack_newchunk@@Base>
  4074e0:	ldr	x0, [x23, #24]
  4074e4:	b	4073c4 <ferror@plt+0x4a24>
  4074e8:	mov	x0, x23
  4074ec:	bl	4175a8 <_obstack_newchunk@@Base>
  4074f0:	ldr	x0, [x23, #24]
  4074f4:	b	40748c <ferror@plt+0x4aec>
  4074f8:	mov	w0, w22
  4074fc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  407500:	mov	w1, #0x0                   	// #0
  407504:	add	x2, x2, #0x4d8
  407508:	bl	4033d0 <ferror@plt+0xa30>
  40750c:	adrp	x25, 417000 <ferror@plt+0x14660>
  407510:	mov	w21, #0x0                   	// #0
  407514:	add	x25, x25, #0xe98
  407518:	mov	x19, #0x0                   	// #0
  40751c:	mov	w22, #0x0                   	// #0
  407520:	mov	w24, #0x0                   	// #0
  407524:	ldr	x0, [x23, #24]
  407528:	b	4072a8 <ferror@plt+0x4908>
  40752c:	adrp	x19, 417000 <ferror@plt+0x14660>
  407530:	mov	x3, #0x0                   	// #0
  407534:	add	x19, x19, #0xe98
  407538:	b	407428 <ferror@plt+0x4a88>
  40753c:	mov	w24, w21
  407540:	mov	w21, #0x0                   	// #0
  407544:	b	407288 <ferror@plt+0x48e8>
  407548:	cmp	w1, #0x1
  40754c:	b.eq	4075bc <ferror@plt+0x4c1c>  // b.none
  407550:	b.le	4075cc <ferror@plt+0x4c2c>
  407554:	stp	x29, x30, [sp, #-32]!
  407558:	sub	w1, w1, #0x2
  40755c:	mov	x29, sp
  407560:	stp	x19, x20, [sp, #16]
  407564:	add	x20, x2, #0x10
  407568:	add	x19, x2, #0x8
  40756c:	add	x20, x20, w1, uxtw #3
  407570:	ldr	x0, [x19]
  407574:	mov	w1, #0x0                   	// #0
  407578:	add	x19, x19, #0x8
  40757c:	ldr	x0, [x0, #8]
  407580:	bl	40fd00 <ferror@plt+0xd360>
  407584:	cbz	x0, 4075a8 <ferror@plt+0x4c08>
  407588:	ldrb	w2, [x0, #8]
  40758c:	mov	w1, #0x4                   	// #4
  407590:	ldr	w3, [x0, #24]
  407594:	and	w2, w2, #0xfffffffe
  407598:	strb	w2, [x0, #8]
  40759c:	cbnz	w3, 4075a8 <ferror@plt+0x4c08>
  4075a0:	ldr	x0, [x0, #16]
  4075a4:	bl	40fd00 <ferror@plt+0xd360>
  4075a8:	cmp	x19, x20
  4075ac:	b.ne	407570 <ferror@plt+0x4bd0>  // b.any
  4075b0:	ldp	x19, x20, [sp, #16]
  4075b4:	ldp	x29, x30, [sp], #32
  4075b8:	ret
  4075bc:	adrp	x0, 405000 <ferror@plt+0x2660>
  4075c0:	mov	x1, #0x0                   	// #0
  4075c4:	add	x0, x0, #0x890
  4075c8:	b	4100d8 <ferror@plt+0xd738>
  4075cc:	ret
  4075d0:	cmp	w1, #0x1
  4075d4:	b.eq	40769c <ferror@plt+0x4cfc>  // b.none
  4075d8:	b.le	4076ac <ferror@plt+0x4d0c>
  4075dc:	stp	x29, x30, [sp, #-48]!
  4075e0:	cmp	x0, #0x0
  4075e4:	mov	x29, sp
  4075e8:	stp	x19, x20, [sp, #16]
  4075ec:	sub	w20, w1, #0x2
  4075f0:	add	x1, x2, #0x10
  4075f4:	add	x20, x1, w20, uxtw #3
  4075f8:	add	x19, x2, #0x8
  4075fc:	stp	x21, x22, [sp, #32]
  407600:	cset	w21, eq  // eq = none
  407604:	cset	w22, ne  // ne = any
  407608:	b	407634 <ferror@plt+0x4c94>
  40760c:	ldrb	w1, [x0, #8]
  407610:	add	x19, x19, #0x8
  407614:	ldr	w2, [x0, #24]
  407618:	bfxil	w1, w22, #0, #1
  40761c:	strb	w1, [x0, #8]
  407620:	cmp	w2, #0x0
  407624:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  407628:	b.ne	407678 <ferror@plt+0x4cd8>  // b.any
  40762c:	cmp	x19, x20
  407630:	b.eq	40768c <ferror@plt+0x4cec>  // b.none
  407634:	ldr	x0, [x19]
  407638:	mov	w1, #0x0                   	// #0
  40763c:	ldr	x0, [x0, #8]
  407640:	bl	40fd00 <ferror@plt+0xd360>
  407644:	cbnz	x0, 40760c <ferror@plt+0x4c6c>
  407648:	ldr	x0, [x19]
  40764c:	mov	w1, #0x1                   	// #1
  407650:	add	x19, x19, #0x8
  407654:	ldr	x0, [x0, #8]
  407658:	bl	40fd00 <ferror@plt+0xd360>
  40765c:	ldrb	w1, [x0, #8]
  407660:	ldr	w2, [x0, #24]
  407664:	bfxil	w1, w22, #0, #1
  407668:	strb	w1, [x0, #8]
  40766c:	cmp	w2, #0x0
  407670:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  407674:	b.eq	40762c <ferror@plt+0x4c8c>  // b.none
  407678:	ldr	x0, [x0, #16]
  40767c:	mov	w1, #0x4                   	// #4
  407680:	bl	40fd00 <ferror@plt+0xd360>
  407684:	cmp	x19, x20
  407688:	b.ne	407634 <ferror@plt+0x4c94>  // b.any
  40768c:	ldp	x19, x20, [sp, #16]
  407690:	ldp	x21, x22, [sp, #32]
  407694:	ldp	x29, x30, [sp], #48
  407698:	ret
  40769c:	mov	x1, x0
  4076a0:	adrp	x0, 405000 <ferror@plt+0x2660>
  4076a4:	add	x0, x0, #0x890
  4076a8:	b	4100d8 <ferror@plt+0xd738>
  4076ac:	ret
  4076b0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  4076b4:	add	x1, x1, #0x7c8
  4076b8:	mov	x3, x0
  4076bc:	add	x0, x1, #0x48
  4076c0:	adrp	x1, 405000 <ferror@plt+0x2660>
  4076c4:	add	x1, x1, #0xf68
  4076c8:	b	4076e0 <ferror@plt+0x4d40>
  4076cc:	ldr	x2, [x0, #24]
  4076d0:	add	x1, x0, #0x18
  4076d4:	cbz	x2, 4076ec <ferror@plt+0x4d4c>
  4076d8:	mov	x0, x1
  4076dc:	ldr	x1, [x1, #16]
  4076e0:	cmp	x1, x3
  4076e4:	b.ne	4076cc <ferror@plt+0x4d2c>  // b.any
  4076e8:	ret
  4076ec:	adrp	x2, 403000 <ferror@plt+0x660>
  4076f0:	add	x2, x2, #0x528
  4076f4:	add	x1, x0, #0x30
  4076f8:	cmp	x3, x2
  4076fc:	csel	x0, x1, xzr, eq  // eq = none
  407700:	ret
  407704:	nop
  407708:	stp	x29, x30, [sp, #-32]!
  40770c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  407710:	mov	x29, sp
  407714:	stp	x19, x20, [sp, #16]
  407718:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x1878>
  40771c:	add	x19, x19, #0x7c8
  407720:	mov	x20, x0
  407724:	add	x19, x19, #0x48
  407728:	add	x0, x2, #0x4f8
  40772c:	b	407740 <ferror@plt+0x4da0>
  407730:	ldr	x0, [x19, #24]
  407734:	add	x2, x19, #0x18
  407738:	cbz	x0, 40775c <ferror@plt+0x4dbc>
  40773c:	mov	x19, x2
  407740:	mov	x1, x20
  407744:	bl	402760 <strcmp@plt>
  407748:	cbnz	w0, 407730 <ferror@plt+0x4d90>
  40774c:	mov	x0, x19
  407750:	ldp	x19, x20, [sp, #16]
  407754:	ldp	x29, x30, [sp], #32
  407758:	ret
  40775c:	add	x19, x19, #0x30
  407760:	mov	x0, x19
  407764:	ldp	x19, x20, [sp, #16]
  407768:	ldp	x29, x30, [sp], #32
  40776c:	ret
  407770:	stp	x29, x30, [sp, #-48]!
  407774:	mov	w3, #0xffffffff            	// #-1
  407778:	mov	x29, sp
  40777c:	stp	x19, x20, [sp, #16]
  407780:	mov	x19, x2
  407784:	mov	w20, w1
  407788:	stp	x21, x22, [sp, #32]
  40778c:	mov	x21, x0
  407790:	mov	w2, #0x2                   	// #2
  407794:	ldr	x0, [x19]
  407798:	add	x0, x0, #0x8
  40779c:	bl	404010 <ferror@plt+0x1670>
  4077a0:	tst	w0, #0xff
  4077a4:	b.ne	40787c <ferror@plt+0x4edc>  // b.any
  4077a8:	ldr	x0, [x19, #8]
  4077ac:	ldr	w1, [x0]
  4077b0:	cmp	w1, #0x1
  4077b4:	b.eq	4077ec <ferror@plt+0x4e4c>  // b.none
  4077b8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4077bc:	cmp	w20, #0x0
  4077c0:	ldr	w0, [x0, #1628]
  4077c4:	b.le	407898 <ferror@plt+0x4ef8>
  4077c8:	ldr	x1, [x19]
  4077cc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  4077d0:	ldp	x19, x20, [sp, #16]
  4077d4:	add	x2, x2, #0x3e8
  4077d8:	ldp	x21, x22, [sp, #32]
  4077dc:	ldp	x29, x30, [sp], #48
  4077e0:	ldr	x3, [x1, #8]
  4077e4:	mov	w1, #0x0                   	// #0
  4077e8:	b	4033d0 <ferror@plt+0xa30>
  4077ec:	cmp	w20, #0x1
  4077f0:	b.le	40788c <ferror@plt+0x4eec>
  4077f4:	ldr	x22, [x0, #8]
  4077f8:	mov	x0, x22
  4077fc:	bl	407708 <ferror@plt+0x4d68>
  407800:	ldr	x4, [x0, #16]
  407804:	adrp	x1, 403000 <ferror@plt+0x660>
  407808:	add	x1, x1, #0x528
  40780c:	cmp	x4, x1
  407810:	b.eq	4078bc <ferror@plt+0x4f1c>  // b.none
  407814:	ldrb	w0, [x0, #8]
  407818:	tbnz	w0, #1, 40785c <ferror@plt+0x4ebc>
  40781c:	cmp	w20, #0x2
  407820:	b.le	40785c <ferror@plt+0x4ebc>
  407824:	adrp	x0, 417000 <ferror@plt+0x14660>
  407828:	add	x0, x0, #0xe98
  40782c:	mov	x1, #0x2                   	// #2
  407830:	mov	w5, #0x1                   	// #1
  407834:	nop
  407838:	ldr	x2, [x19, x1, lsl #3]
  40783c:	add	x1, x1, #0x1
  407840:	ldr	w3, [x2]
  407844:	cmp	w3, #0x1
  407848:	b.eq	407854 <ferror@plt+0x4eb4>  // b.none
  40784c:	str	w5, [x2]
  407850:	str	x0, [x2, #8]
  407854:	cmp	w20, w1
  407858:	b.gt	407838 <ferror@plt+0x4e98>
  40785c:	add	x2, x19, #0x8
  407860:	sub	w1, w20, #0x1
  407864:	mov	x0, x21
  407868:	mov	x16, x4
  40786c:	ldp	x19, x20, [sp, #16]
  407870:	ldp	x21, x22, [sp, #32]
  407874:	ldp	x29, x30, [sp], #48
  407878:	br	x16
  40787c:	ldp	x19, x20, [sp, #16]
  407880:	ldp	x21, x22, [sp, #32]
  407884:	ldp	x29, x30, [sp], #48
  407888:	ret
  40788c:	adrp	x22, 417000 <ferror@plt+0x14660>
  407890:	add	x22, x22, #0xe98
  407894:	b	4077f8 <ferror@plt+0x4e58>
  407898:	ldp	x19, x20, [sp, #16]
  40789c:	adrp	x3, 417000 <ferror@plt+0x14660>
  4078a0:	ldp	x21, x22, [sp, #32]
  4078a4:	add	x3, x3, #0xe98
  4078a8:	ldp	x29, x30, [sp], #48
  4078ac:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  4078b0:	mov	w1, #0x0                   	// #0
  4078b4:	add	x2, x2, #0x3e8
  4078b8:	b	4033d0 <ferror@plt+0xa30>
  4078bc:	mov	x3, x22
  4078c0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4078c4:	ldp	x19, x20, [sp, #16]
  4078c8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  4078cc:	ldp	x21, x22, [sp, #32]
  4078d0:	add	x2, x2, #0x508
  4078d4:	ldp	x29, x30, [sp], #48
  4078d8:	mov	w1, #0x0                   	// #0
  4078dc:	ldr	w0, [x0, #1628]
  4078e0:	b	4033d0 <ferror@plt+0xa30>
  4078e4:	nop
  4078e8:	stp	x29, x30, [sp, #-32]!
  4078ec:	mov	x29, sp
  4078f0:	str	x19, [sp, #16]
  4078f4:	mov	x19, x1
  4078f8:	mov	w1, w2
  4078fc:	bl	40fd00 <ferror@plt+0xd360>
  407900:	mov	w1, #0x2                   	// #2
  407904:	ldrb	w3, [x0, #8]
  407908:	ldrb	w2, [x19, #8]
  40790c:	ldr	x4, [x19, #16]
  407910:	ldr	x19, [sp, #16]
  407914:	str	w1, [x0, #24]
  407918:	ubfx	x1, x2, #2, #1
  40791c:	ubfx	x2, x2, #1, #1
  407920:	str	x4, [x0, #32]
  407924:	ubfiz	w2, w2, #2, #6
  407928:	ubfiz	w1, w1, #3, #5
  40792c:	orr	w1, w1, w2
  407930:	and	w2, w3, #0xfffffff3
  407934:	orr	w1, w1, w2
  407938:	strb	w1, [x0, #8]
  40793c:	ldp	x29, x30, [sp], #32
  407940:	ret
  407944:	nop
  407948:	stp	x29, x30, [sp, #-32]!
  40794c:	mov	x29, sp
  407950:	stp	x19, x20, [sp, #16]
  407954:	cbz	x0, 4079dc <ferror@plt+0x503c>
  407958:	ldrb	w1, [x0]
  40795c:	mov	x19, x0
  407960:	cbz	w1, 4079c8 <ferror@plt+0x5028>
  407964:	bl	402390 <strlen@plt>
  407968:	mov	x1, x0
  40796c:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  407970:	add	x20, x20, #0x678
  407974:	add	x2, x20, #0x110
  407978:	mov	x0, x19
  40797c:	bl	4026e0 <re_compile_pattern@plt>
  407980:	mov	x4, x0
  407984:	cbz	x0, 4079a0 <ferror@plt+0x5000>
  407988:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40798c:	mov	x3, x19
  407990:	add	x2, x2, #0x520
  407994:	mov	w1, #0x0                   	// #0
  407998:	mov	w0, #0x1                   	// #1
  40799c:	bl	4033d0 <ferror@plt+0xa30>
  4079a0:	add	x1, x20, #0x150
  4079a4:	ldr	w2, [x20, #336]
  4079a8:	add	x0, x20, #0x110
  4079ac:	ldp	x3, x4, [x1, #8]
  4079b0:	bl	4025e0 <re_set_registers@plt>
  4079b4:	mov	w0, #0x1                   	// #1
  4079b8:	strb	w0, [x20, #268]
  4079bc:	ldp	x19, x20, [sp, #16]
  4079c0:	ldp	x29, x30, [sp], #32
  4079c4:	ret
  4079c8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4079cc:	ldp	x19, x20, [sp, #16]
  4079d0:	strb	wzr, [x0, #1924]
  4079d4:	ldp	x29, x30, [sp], #32
  4079d8:	ret
  4079dc:	adrp	x19, 417000 <ferror@plt+0x14660>
  4079e0:	mov	x1, #0x1a                  	// #26
  4079e4:	add	x19, x19, #0xff0
  4079e8:	b	40796c <ferror@plt+0x4fcc>
  4079ec:	nop
  4079f0:	stp	x29, x30, [sp, #-32]!
  4079f4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4079f8:	add	x0, x0, #0x678
  4079fc:	mov	x29, sp
  407a00:	str	x19, [sp, #16]
  407a04:	add	x19, x0, #0x150
  407a08:	add	x0, x0, #0x110
  407a0c:	bl	4028d0 <regfree@plt>
  407a10:	ldr	x0, [x19, #8]
  407a14:	bl	4027c0 <free@plt>
  407a18:	ldr	x0, [x19, #16]
  407a1c:	ldr	x19, [sp, #16]
  407a20:	ldp	x29, x30, [sp], #32
  407a24:	b	4027c0 <free@plt>
  407a28:	stp	x29, x30, [sp, #-96]!
  407a2c:	mov	x29, sp
  407a30:	stp	x19, x20, [sp, #16]
  407a34:	mov	w19, w2
  407a38:	stp	x21, x22, [sp, #32]
  407a3c:	mov	x21, x0
  407a40:	stp	x23, x24, [sp, #48]
  407a44:	mov	x23, x1
  407a48:	cbz	x1, 407b6c <ferror@plt+0x51cc>
  407a4c:	mov	x0, x1
  407a50:	bl	416b80 <ferror@plt+0x141e0>
  407a54:	mov	w1, w19
  407a58:	mov	x20, x0
  407a5c:	mov	x0, x21
  407a60:	bl	40fd00 <ferror@plt+0xd360>
  407a64:	mov	x19, x0
  407a68:	ldr	w0, [x0, #24]
  407a6c:	cmp	w0, #0x1
  407a70:	b.eq	407bbc <ferror@plt+0x521c>  // b.none
  407a74:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  407a78:	add	x22, x22, #0x678
  407a7c:	mov	w0, #0x1                   	// #1
  407a80:	cmp	x23, #0x0
  407a84:	str	w0, [x19, #24]
  407a88:	cset	w1, ne  // ne = any
  407a8c:	ldrb	w0, [x22, #268]
  407a90:	str	x20, [x19, #32]
  407a94:	tst	w1, w0
  407a98:	b.ne	407ab0 <ferror@plt+0x5110>  // b.any
  407a9c:	ldp	x19, x20, [sp, #16]
  407aa0:	ldp	x21, x22, [sp, #32]
  407aa4:	ldp	x23, x24, [sp, #48]
  407aa8:	ldp	x29, x30, [sp], #96
  407aac:	ret
  407ab0:	mov	x0, x20
  407ab4:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x1878>
  407ab8:	add	x24, x24, #0x558
  407abc:	stp	x25, x26, [sp, #64]
  407ac0:	adrp	x26, 431000 <_obstack_memory_used@@Base+0x19878>
  407ac4:	add	x26, x26, #0x65c
  407ac8:	stp	x27, x28, [sp, #80]
  407acc:	bl	402390 <strlen@plt>
  407ad0:	add	x27, x22, #0x150
  407ad4:	mov	x23, x0
  407ad8:	mov	w25, w0
  407adc:	mov	w19, #0x0                   	// #0
  407ae0:	mov	w3, w19
  407ae4:	mov	w2, w25
  407ae8:	mov	x1, x20
  407aec:	mov	x5, x27
  407af0:	sub	w4, w23, w19
  407af4:	add	x0, x22, #0x110
  407af8:	bl	402630 <re_search@plt>
  407afc:	mov	x3, x21
  407b00:	mov	x2, x24
  407b04:	mov	w1, #0x0                   	// #0
  407b08:	tbnz	w0, #31, 407b48 <ferror@plt+0x51a8>
  407b0c:	ldp	x4, x6, [x27, #8]
  407b10:	ldr	w5, [x4]
  407b14:	ldr	w19, [x6]
  407b18:	cmp	w5, w19
  407b1c:	b.ne	407b28 <ferror@plt+0x5188>  // b.any
  407b20:	add	w19, w0, #0x1
  407b24:	b	407ae0 <ferror@plt+0x5140>
  407b28:	ldrb	w28, [x20, w19, sxtw]
  407b2c:	ldr	w0, [x26]
  407b30:	strb	wzr, [x20, w19, sxtw]
  407b34:	ldrsw	x4, [x4]
  407b38:	add	x4, x20, x4
  407b3c:	bl	4033d0 <ferror@plt+0xa30>
  407b40:	strb	w28, [x20, w19, sxtw]
  407b44:	b	407ae0 <ferror@plt+0x5140>
  407b48:	cmn	w0, #0x2
  407b4c:	b.eq	407bc8 <ferror@plt+0x5228>  // b.none
  407b50:	ldp	x19, x20, [sp, #16]
  407b54:	ldp	x21, x22, [sp, #32]
  407b58:	ldp	x23, x24, [sp, #48]
  407b5c:	ldp	x25, x26, [sp, #64]
  407b60:	ldp	x27, x28, [sp, #80]
  407b64:	ldp	x29, x30, [sp], #96
  407b68:	ret
  407b6c:	adrp	x0, 417000 <ferror@plt+0x14660>
  407b70:	add	x0, x0, #0xe98
  407b74:	bl	416b80 <ferror@plt+0x141e0>
  407b78:	mov	x22, x0
  407b7c:	mov	w1, w19
  407b80:	mov	x0, x21
  407b84:	bl	40fd00 <ferror@plt+0xd360>
  407b88:	mov	x19, x0
  407b8c:	ldr	w0, [x0, #24]
  407b90:	mov	x20, x22
  407b94:	cmp	w0, #0x1
  407b98:	b.eq	407bbc <ferror@plt+0x521c>  // b.none
  407b9c:	mov	w0, #0x1                   	// #1
  407ba0:	str	w0, [x19, #24]
  407ba4:	str	x22, [x19, #32]
  407ba8:	ldp	x19, x20, [sp, #16]
  407bac:	ldp	x21, x22, [sp, #32]
  407bb0:	ldp	x23, x24, [sp, #48]
  407bb4:	ldp	x29, x30, [sp], #96
  407bb8:	ret
  407bbc:	ldr	x0, [x19, #32]
  407bc0:	bl	4027c0 <free@plt>
  407bc4:	b	407a74 <ferror@plt+0x50d4>
  407bc8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  407bcc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  407bd0:	ldp	x19, x20, [sp, #16]
  407bd4:	add	x2, x2, #0x590
  407bd8:	ldp	x21, x22, [sp, #32]
  407bdc:	ldp	x23, x24, [sp, #48]
  407be0:	ldp	x25, x26, [sp, #64]
  407be4:	ldp	x27, x28, [sp, #80]
  407be8:	ldp	x29, x30, [sp], #96
  407bec:	ldr	w0, [x0, #1628]
  407bf0:	b	4033d0 <ferror@plt+0xa30>
  407bf4:	nop
  407bf8:	stp	x29, x30, [sp, #-48]!
  407bfc:	mov	w3, #0x3                   	// #3
  407c00:	mov	x29, sp
  407c04:	stp	x19, x20, [sp, #16]
  407c08:	mov	x19, x1
  407c0c:	mov	w20, w0
  407c10:	mov	w1, w0
  407c14:	ldr	x0, [x19]
  407c18:	str	x21, [sp, #32]
  407c1c:	mov	w21, w2
  407c20:	mov	w2, #0x2                   	// #2
  407c24:	add	x0, x0, #0x8
  407c28:	bl	404010 <ferror@plt+0x1670>
  407c2c:	tst	w0, #0xff
  407c30:	b.ne	407cf0 <ferror@plt+0x5350>  // b.any
  407c34:	ldr	x3, [x19, #8]
  407c38:	ldr	w0, [x3]
  407c3c:	cmp	w0, #0x1
  407c40:	b.ne	407d00 <ferror@plt+0x5360>  // b.any
  407c44:	cmp	w20, #0x2
  407c48:	b.eq	407db0 <ferror@plt+0x5410>  // b.none
  407c4c:	ldr	x1, [x19, #16]
  407c50:	ldr	w0, [x1]
  407c54:	cmp	w0, #0x1
  407c58:	b.eq	407d34 <ferror@plt+0x5394>  // b.none
  407c5c:	cmp	w0, #0x2
  407c60:	b.ne	407dd0 <ferror@plt+0x5430>  // b.any
  407c64:	ldr	x2, [x1, #8]
  407c68:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x1878>
  407c6c:	adrp	x0, 405000 <ferror@plt+0x2660>
  407c70:	add	x19, x19, #0x7c8
  407c74:	add	x0, x0, #0xf68
  407c78:	add	x19, x19, #0x48
  407c7c:	cmp	x0, x2
  407c80:	b.eq	407ca4 <ferror@plt+0x5304>  // b.none
  407c84:	nop
  407c88:	ldr	x1, [x19, #24]
  407c8c:	add	x0, x19, #0x18
  407c90:	cbz	x1, 407d7c <ferror@plt+0x53dc>
  407c94:	mov	x19, x0
  407c98:	ldr	x0, [x0, #16]
  407c9c:	cmp	x0, x2
  407ca0:	b.ne	407c88 <ferror@plt+0x52e8>  // b.any
  407ca4:	cmp	w20, #0x1
  407ca8:	b.le	407da4 <ferror@plt+0x5404>
  407cac:	ldr	x0, [x3, #8]
  407cb0:	mov	w1, w21
  407cb4:	bl	40fd00 <ferror@plt+0xd360>
  407cb8:	ldrb	w3, [x0, #8]
  407cbc:	ldrb	w2, [x19, #8]
  407cc0:	mov	w5, #0x2                   	// #2
  407cc4:	and	w3, w3, #0xfffffff3
  407cc8:	ldr	x4, [x19, #16]
  407ccc:	ubfx	x1, x2, #2, #1
  407cd0:	ubfx	x2, x2, #1, #1
  407cd4:	str	w5, [x0, #24]
  407cd8:	ubfiz	w1, w1, #3, #5
  407cdc:	str	x4, [x0, #32]
  407ce0:	ubfiz	w2, w2, #2, #6
  407ce4:	orr	w1, w1, w2
  407ce8:	orr	w1, w1, w3
  407cec:	strb	w1, [x0, #8]
  407cf0:	ldp	x19, x20, [sp, #16]
  407cf4:	ldr	x21, [sp, #32]
  407cf8:	ldp	x29, x30, [sp], #48
  407cfc:	ret
  407d00:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  407d04:	cmp	w20, #0x0
  407d08:	ldr	w0, [x0, #1628]
  407d0c:	b.le	407d58 <ferror@plt+0x53b8>
  407d10:	ldr	x1, [x19]
  407d14:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  407d18:	ldp	x19, x20, [sp, #16]
  407d1c:	add	x2, x2, #0x3e8
  407d20:	ldr	x21, [sp, #32]
  407d24:	ldp	x29, x30, [sp], #48
  407d28:	ldr	x3, [x1, #8]
  407d2c:	mov	w1, #0x0                   	// #0
  407d30:	b	4033d0 <ferror@plt+0xa30>
  407d34:	cmp	w20, #0x1
  407d38:	b.le	407d94 <ferror@plt+0x53f4>
  407d3c:	ldr	x1, [x1, #8]
  407d40:	ldr	x0, [x3, #8]
  407d44:	mov	w2, w21
  407d48:	ldp	x19, x20, [sp, #16]
  407d4c:	ldr	x21, [sp, #32]
  407d50:	ldp	x29, x30, [sp], #48
  407d54:	b	407a28 <ferror@plt+0x5088>
  407d58:	ldp	x19, x20, [sp, #16]
  407d5c:	adrp	x3, 417000 <ferror@plt+0x14660>
  407d60:	ldr	x21, [sp, #32]
  407d64:	add	x3, x3, #0xe98
  407d68:	ldp	x29, x30, [sp], #48
  407d6c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  407d70:	mov	w1, #0x0                   	// #0
  407d74:	add	x2, x2, #0x3e8
  407d78:	b	4033d0 <ferror@plt+0xa30>
  407d7c:	adrp	x0, 403000 <ferror@plt+0x660>
  407d80:	add	x0, x0, #0x528
  407d84:	cmp	x2, x0
  407d88:	b.ne	407cf0 <ferror@plt+0x5350>  // b.any
  407d8c:	add	x19, x19, #0x30
  407d90:	b	407ca4 <ferror@plt+0x5304>
  407d94:	adrp	x0, 417000 <ferror@plt+0x14660>
  407d98:	add	x0, x0, #0xe98
  407d9c:	mov	x1, x0
  407da0:	b	407d44 <ferror@plt+0x53a4>
  407da4:	adrp	x0, 417000 <ferror@plt+0x14660>
  407da8:	add	x0, x0, #0xe98
  407dac:	b	407cb0 <ferror@plt+0x5310>
  407db0:	mov	w2, w21
  407db4:	adrp	x1, 417000 <ferror@plt+0x14660>
  407db8:	ldp	x19, x20, [sp, #16]
  407dbc:	add	x1, x1, #0xe98
  407dc0:	ldr	x21, [sp, #32]
  407dc4:	ldp	x29, x30, [sp], #48
  407dc8:	ldr	x0, [x3, #8]
  407dcc:	b	407a28 <ferror@plt+0x5088>
  407dd0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  407dd4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  407dd8:	add	x2, x2, #0x5c8
  407ddc:	mov	w1, #0x0                   	// #0
  407de0:	ldr	w0, [x0, #1628]
  407de4:	bl	4033d0 <ferror@plt+0xa30>
  407de8:	bl	4026d0 <abort@plt>
  407dec:	nop
  407df0:	mov	w0, w1
  407df4:	mov	x1, x2
  407df8:	mov	w2, #0x3                   	// #3
  407dfc:	b	407bf8 <ferror@plt+0x5258>
  407e00:	mov	w0, w1
  407e04:	mov	x1, x2
  407e08:	mov	w2, #0x1                   	// #1
  407e0c:	b	407bf8 <ferror@plt+0x5258>
  407e10:	stp	x29, x30, [sp, #-80]!
  407e14:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  407e18:	add	x0, x0, #0x4f8
  407e1c:	mov	x29, sp
  407e20:	stp	x21, x22, [sp, #32]
  407e24:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  407e28:	mov	w22, #0x2                   	// #2
  407e2c:	ldr	w2, [x21, #1632]
  407e30:	stp	x19, x20, [sp, #16]
  407e34:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x1878>
  407e38:	add	x20, x19, #0x7c8
  407e3c:	add	x19, x20, #0x48
  407e40:	stp	x23, x24, [sp, #48]
  407e44:	adrp	x24, 431000 <_obstack_memory_used@@Base+0x19878>
  407e48:	mov	w23, #0x346d                	// #13421
  407e4c:	add	x24, x24, #0x664
  407e50:	movk	w23, #0x5f, lsl #16
  407e54:	str	x25, [sp, #64]
  407e58:	cbz	w2, 407e64 <ferror@plt+0x54c4>
  407e5c:	ldrb	w1, [x19, #8]
  407e60:	tbnz	w1, #0, 407edc <ferror@plt+0x553c>
  407e64:	ldr	w2, [x24]
  407e68:	mov	w1, #0x1                   	// #1
  407e6c:	cbz	w2, 407f4c <ferror@plt+0x55ac>
  407e70:	bl	402390 <strlen@plt>
  407e74:	add	x0, x0, #0x4
  407e78:	bl	416968 <ferror@plt+0x13fc8>
  407e7c:	mov	x25, x0
  407e80:	ldr	x1, [x19]
  407e84:	str	w23, [x0], #3
  407e88:	bl	402860 <strcpy@plt>
  407e8c:	mov	w1, #0x1                   	// #1
  407e90:	mov	x0, x25
  407e94:	bl	40fd00 <ferror@plt+0xd360>
  407e98:	mov	x2, x0
  407e9c:	ldrb	w3, [x19, #8]
  407ea0:	mov	x0, x25
  407ea4:	ldrb	w4, [x2, #8]
  407ea8:	ubfx	x1, x3, #2, #1
  407eac:	ubfx	x3, x3, #1, #1
  407eb0:	and	w4, w4, #0xfffffff3
  407eb4:	ubfiz	w3, w3, #2, #6
  407eb8:	ubfiz	w1, w1, #3, #5
  407ebc:	orr	w1, w1, w3
  407ec0:	orr	w1, w1, w4
  407ec4:	strb	w1, [x2, #8]
  407ec8:	ldr	x1, [x19, #16]
  407ecc:	str	w22, [x2, #24]
  407ed0:	str	x1, [x2, #32]
  407ed4:	bl	4027c0 <free@plt>
  407ed8:	ldr	w2, [x21, #1632]
  407edc:	ldr	x0, [x19, #24]!
  407ee0:	cbnz	x0, 407e58 <ferror@plt+0x54b8>
  407ee4:	adrp	x1, 417000 <ferror@plt+0x14660>
  407ee8:	add	x20, x20, #0x4b0
  407eec:	add	x21, x21, #0x660
  407ef0:	add	x1, x1, #0xe98
  407ef4:	cbz	w2, 407f1c <ferror@plt+0x557c>
  407ef8:	ldr	x0, [x20]
  407efc:	mov	w2, #0x1                   	// #1
  407f00:	cbz	x0, 407f08 <ferror@plt+0x5568>
  407f04:	bl	407a28 <ferror@plt+0x5088>
  407f08:	ldr	x1, [x20, #40]
  407f0c:	add	x20, x20, #0x18
  407f10:	cbz	x1, 407f34 <ferror@plt+0x5594>
  407f14:	ldr	w2, [x21]
  407f18:	cbnz	w2, 407ef8 <ferror@plt+0x5558>
  407f1c:	ldr	x0, [x20, #8]
  407f20:	mov	w2, #0x1                   	// #1
  407f24:	cbnz	x0, 407f04 <ferror@plt+0x5564>
  407f28:	ldr	x1, [x20, #40]
  407f2c:	add	x20, x20, #0x18
  407f30:	cbnz	x1, 407f14 <ferror@plt+0x5574>
  407f34:	ldp	x19, x20, [sp, #16]
  407f38:	ldp	x21, x22, [sp, #32]
  407f3c:	ldp	x23, x24, [sp, #48]
  407f40:	ldr	x25, [sp, #64]
  407f44:	ldp	x29, x30, [sp], #80
  407f48:	ret
  407f4c:	bl	40fd00 <ferror@plt+0xd360>
  407f50:	ldrb	w4, [x0, #8]
  407f54:	ldrb	w3, [x19, #8]
  407f58:	and	w4, w4, #0xfffffff3
  407f5c:	ldr	w2, [x21, #1632]
  407f60:	ubfx	x1, x3, #2, #1
  407f64:	ubfx	x3, x3, #1, #1
  407f68:	ubfiz	w1, w1, #3, #5
  407f6c:	ubfiz	w3, w3, #2, #6
  407f70:	orr	w1, w1, w3
  407f74:	orr	w1, w1, w4
  407f78:	strb	w1, [x0, #8]
  407f7c:	ldr	x1, [x19, #16]
  407f80:	str	w22, [x0, #24]
  407f84:	str	x1, [x0, #32]
  407f88:	b	407edc <ferror@plt+0x553c>
  407f8c:	nop
  407f90:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x19878>
  407f94:	add	x3, x3, #0x678
  407f98:	mov	w2, w0
  407f9c:	mov	w7, #0x0                   	// #0
  407fa0:	strb	wzr, [x3, #263]
  407fa4:	tbz	w0, #31, 407fb0 <ferror@plt+0x5610>
  407fa8:	neg	w2, w0
  407fac:	mov	w7, #0x1                   	// #1
  407fb0:	adrp	x5, 419000 <_obstack_memory_used@@Base+0x1878>
  407fb4:	add	x0, x3, #0x107
  407fb8:	add	x5, x5, #0x7c8
  407fbc:	nop
  407fc0:	udiv	w3, w2, w1
  407fc4:	cmp	w2, w1
  407fc8:	mov	x6, x0
  407fcc:	msub	w4, w3, w1, w2
  407fd0:	mov	w2, w3
  407fd4:	ldrb	w3, [x5, w4, uxtw]
  407fd8:	strb	w3, [x0, #-1]!
  407fdc:	b.cs	407fc0 <ferror@plt+0x5620>  // b.hs, b.nlast
  407fe0:	cbz	w7, 407ff0 <ferror@plt+0x5650>
  407fe4:	mov	w1, #0x2d                  	// #45
  407fe8:	sturb	w1, [x0, #-1]
  407fec:	sub	x0, x6, #0x2
  407ff0:	ret
  407ff4:	nop
  407ff8:	stp	xzr, xzr, [x0]
  407ffc:	stp	xzr, xzr, [x0, #32]
  408000:	cbz	x1, 408008 <ferror@plt+0x5668>
  408004:	stp	xzr, xzr, [x1, #8]
  408008:	ret
  40800c:	nop
  408010:	stp	x29, x30, [sp, #-112]!
  408014:	mov	x29, sp
  408018:	stp	x27, x28, [sp, #80]
  40801c:	mov	x28, x0
  408020:	sub	w0, w2, #0x1
  408024:	stp	x19, x20, [sp, #16]
  408028:	stp	x25, x26, [sp, #64]
  40802c:	adrp	x25, 419000 <_obstack_memory_used@@Base+0x1878>
  408030:	add	x25, x25, #0x318
  408034:	ldr	x19, [x28, #24]
  408038:	stp	x21, x22, [sp, #32]
  40803c:	mov	w22, w2
  408040:	ldr	x26, [x1, #32]
  408044:	stp	x23, x24, [sp, #48]
  408048:	adrp	x24, 431000 <_obstack_memory_used@@Base+0x19878>
  40804c:	mov	x23, x3
  408050:	add	x24, x24, #0x660
  408054:	str	w0, [sp, #104]
  408058:	mov	x0, x26
  40805c:	mov	w1, #0x24                  	// #36
  408060:	bl	402810 <strchr@plt>
  408064:	mov	x21, x0
  408068:	cbz	x0, 4080e8 <ferror@plt+0x5748>
  40806c:	ldr	x1, [x28, #32]
  408070:	sub	x27, x21, x26
  408074:	mov	x0, x19
  408078:	sub	x1, x1, x19
  40807c:	cmp	x27, x1
  408080:	b.hi	408198 <ferror@plt+0x57f8>  // b.pmore
  408084:	mov	x1, x26
  408088:	mov	x2, x27
  40808c:	bl	402350 <memcpy@plt>
  408090:	add	x26, x21, #0x1
  408094:	ldr	x19, [x28, #24]
  408098:	add	x27, x19, x27
  40809c:	str	x27, [x28, #24]
  4080a0:	mov	x19, x27
  4080a4:	ldrb	w20, [x21, #1]
  4080a8:	cmp	w20, #0x39
  4080ac:	b.hi	40816c <ferror@plt+0x57cc>  // b.pmore
  4080b0:	cmp	w20, #0x2f
  4080b4:	b.hi	4081ac <ferror@plt+0x580c>  // b.pmore
  4080b8:	cmp	w20, #0x23
  4080bc:	b.ne	40813c <ferror@plt+0x579c>  // b.any
  4080c0:	ldr	w1, [sp, #104]
  4080c4:	add	x26, x21, #0x2
  4080c8:	mov	x0, x28
  4080cc:	bl	403c60 <ferror@plt+0x12c0>
  4080d0:	mov	x0, x26
  4080d4:	mov	w1, #0x24                  	// #36
  4080d8:	bl	402810 <strchr@plt>
  4080dc:	mov	x21, x0
  4080e0:	ldr	x19, [x28, #24]
  4080e4:	cbnz	x0, 40806c <ferror@plt+0x56cc>
  4080e8:	mov	x0, x26
  4080ec:	bl	402390 <strlen@plt>
  4080f0:	ldr	x1, [x28, #32]
  4080f4:	mov	x20, x0
  4080f8:	sub	x1, x1, x19
  4080fc:	cmp	x0, x1
  408100:	b.hi	408270 <ferror@plt+0x58d0>  // b.pmore
  408104:	mov	x1, x26
  408108:	mov	x2, x20
  40810c:	mov	x0, x19
  408110:	bl	402350 <memcpy@plt>
  408114:	ldr	x0, [x28, #24]
  408118:	ldp	x21, x22, [sp, #32]
  40811c:	add	x0, x0, x20
  408120:	ldp	x19, x20, [sp, #16]
  408124:	ldp	x23, x24, [sp, #48]
  408128:	ldp	x25, x26, [sp, #64]
  40812c:	str	x0, [x28, #24]
  408130:	ldp	x27, x28, [sp, #80]
  408134:	ldp	x29, x30, [sp], #112
  408138:	ret
  40813c:	cmp	w20, #0x2a
  408140:	b.ne	408174 <ferror@plt+0x57d4>  // b.any
  408144:	cmp	w20, #0x40
  408148:	mov	x3, x25
  40814c:	cset	w4, eq  // eq = none
  408150:	mov	x2, x23
  408154:	mov	w1, w22
  408158:	mov	x0, x28
  40815c:	add	x26, x21, #0x2
  408160:	bl	4037c0 <ferror@plt+0xe20>
  408164:	ldr	x19, [x28, #24]
  408168:	b	408058 <ferror@plt+0x56b8>
  40816c:	cmp	w20, #0x40
  408170:	b.eq	408144 <ferror@plt+0x57a4>  // b.none
  408174:	ldr	x0, [x28, #32]
  408178:	cmp	x27, x0
  40817c:	b.eq	408240 <ferror@plt+0x58a0>  // b.none
  408180:	add	x0, x27, #0x1
  408184:	str	x0, [x28, #24]
  408188:	mov	w0, #0x24                  	// #36
  40818c:	strb	w0, [x27]
  408190:	ldr	x19, [x28, #24]
  408194:	b	408058 <ferror@plt+0x56b8>
  408198:	mov	x0, x28
  40819c:	mov	x1, x27
  4081a0:	bl	4175a8 <_obstack_newchunk@@Base>
  4081a4:	ldr	x0, [x28, #24]
  4081a8:	b	408084 <ferror@plt+0x56e4>
  4081ac:	ldr	w1, [x24]
  4081b0:	cbz	w1, 40820c <ferror@plt+0x586c>
  4081b4:	add	x26, x21, #0x2
  4081b8:	sub	w1, w20, #0x30
  4081bc:	cmp	w1, w22
  4081c0:	b.ge	408058 <ferror@plt+0x56b8>  // b.tcont
  4081c4:	sxtw	x19, w1
  4081c8:	ldr	x0, [x23, x19, lsl #3]
  4081cc:	ldr	x21, [x0, #8]
  4081d0:	mov	x0, x21
  4081d4:	bl	402390 <strlen@plt>
  4081d8:	ldr	x2, [x28, #32]
  4081dc:	mov	x20, x0
  4081e0:	sub	x2, x2, x27
  4081e4:	cmp	x0, x2
  4081e8:	b.hi	408254 <ferror@plt+0x58b4>  // b.pmore
  4081ec:	mov	x1, x21
  4081f0:	mov	x0, x27
  4081f4:	mov	x2, x20
  4081f8:	bl	402350 <memcpy@plt>
  4081fc:	ldr	x19, [x28, #24]
  408200:	add	x19, x19, x20
  408204:	str	x19, [x28, #24]
  408208:	b	408058 <ferror@plt+0x56b8>
  40820c:	str	w1, [sp, #108]
  408210:	bl	402770 <__ctype_b_loc@plt>
  408214:	ldr	w1, [sp, #108]
  408218:	ldr	x4, [x0]
  40821c:	b	408228 <ferror@plt+0x5888>
  408220:	ldrb	w20, [x26, #1]!
  408224:	add	w1, w2, w3, lsl #1
  408228:	ubfiz	x0, x20, #1, #8
  40822c:	add	w3, w1, w1, lsl #2
  408230:	sub	w2, w20, #0x30
  408234:	ldrh	w0, [x4, x0]
  408238:	tbnz	w0, #11, 408220 <ferror@plt+0x5880>
  40823c:	b	4081bc <ferror@plt+0x581c>
  408240:	mov	x0, x28
  408244:	mov	x1, #0x1                   	// #1
  408248:	bl	4175a8 <_obstack_newchunk@@Base>
  40824c:	ldr	x27, [x28, #24]
  408250:	b	408180 <ferror@plt+0x57e0>
  408254:	mov	x1, x0
  408258:	mov	x0, x28
  40825c:	bl	4175a8 <_obstack_newchunk@@Base>
  408260:	ldr	x0, [x23, x19, lsl #3]
  408264:	ldr	x27, [x28, #24]
  408268:	ldr	x21, [x0, #8]
  40826c:	b	4081ec <ferror@plt+0x584c>
  408270:	mov	x1, x0
  408274:	mov	x0, x28
  408278:	bl	4175a8 <_obstack_newchunk@@Base>
  40827c:	ldr	x19, [x28, #24]
  408280:	b	408104 <ferror@plt+0x5764>
  408284:	nop
  408288:	stp	x29, x30, [sp, #-304]!
  40828c:	mov	x29, sp
  408290:	stp	x19, x20, [sp, #16]
  408294:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  408298:	mov	x19, x0
  40829c:	ldr	x0, [x20, #2016]
  4082a0:	cbz	x0, 4082d0 <ferror@plt+0x5930>
  4082a4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  4082a8:	ldr	x1, [x1, #1032]
  4082ac:	cmp	x0, x1
  4082b0:	b.eq	4082d0 <ferror@plt+0x5930>  // b.none
  4082b4:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  4082b8:	ldr	x1, [x1, #1056]
  4082bc:	cmp	x0, x1
  4082c0:	b.eq	4082d0 <ferror@plt+0x5930>  // b.none
  4082c4:	bl	411a28 <ferror@plt+0xf088>
  4082c8:	cbnz	w0, 408350 <ferror@plt+0x59b0>
  4082cc:	nop
  4082d0:	str	x19, [x20, #2016]
  4082d4:	cbz	x19, 408344 <ferror@plt+0x59a4>
  4082d8:	str	x21, [sp, #32]
  4082dc:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  4082e0:	ldr	x0, [x21, #1056]
  4082e4:	cmp	x0, x19
  4082e8:	b.eq	408340 <ferror@plt+0x59a0>  // b.none
  4082ec:	add	x2, sp, #0x30
  4082f0:	mov	w1, #0x1                   	// #1
  4082f4:	mov	w0, #0x0                   	// #0
  4082f8:	bl	4028a0 <__fxstat@plt>
  4082fc:	tbnz	w0, #31, 408340 <ferror@plt+0x59a0>
  408300:	ldr	x0, [x20, #2016]
  408304:	bl	4024c0 <fileno@plt>
  408308:	mov	w1, w0
  40830c:	add	x2, sp, #0xb0
  408310:	mov	w0, #0x0                   	// #0
  408314:	bl	4028a0 <__fxstat@plt>
  408318:	tbnz	w0, #31, 408340 <ferror@plt+0x59a0>
  40831c:	ldr	x0, [sp, #56]
  408320:	ldr	x1, [sp, #184]
  408324:	cmp	x0, x1
  408328:	b.ne	408340 <ferror@plt+0x59a0>  // b.any
  40832c:	cmp	x0, #0x0
  408330:	ldr	x1, [sp, #48]
  408334:	ldr	x0, [sp, #176]
  408338:	ccmp	x1, x0, #0x0, ne  // ne = any
  40833c:	b.eq	40838c <ferror@plt+0x59ec>  // b.none
  408340:	ldr	x21, [sp, #32]
  408344:	ldp	x19, x20, [sp, #16]
  408348:	ldp	x29, x30, [sp], #304
  40834c:	ret
  408350:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408354:	str	x21, [sp, #32]
  408358:	ldr	w21, [x0, #1628]
  40835c:	bl	402920 <__errno_location@plt>
  408360:	mov	x1, x0
  408364:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  408368:	mov	w0, w21
  40836c:	add	x2, x2, #0xcc0
  408370:	ldr	w1, [x1]
  408374:	bl	4033d0 <ferror@plt+0xa30>
  408378:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40837c:	mov	w1, #0x1                   	// #1
  408380:	ldr	x21, [sp, #32]
  408384:	str	w1, [x0, #3384]
  408388:	b	4082d0 <ferror@plt+0x5930>
  40838c:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  408390:	ldr	x0, [x20, #2016]
  408394:	ldr	x1, [x1, #1032]
  408398:	cmp	x0, x1
  40839c:	b.eq	4083a8 <ferror@plt+0x5a08>  // b.none
  4083a0:	bl	411a28 <ferror@plt+0xf088>
  4083a4:	cbnz	w0, 4083b8 <ferror@plt+0x5a18>
  4083a8:	ldr	x0, [x21, #1056]
  4083ac:	str	x0, [x20, #2016]
  4083b0:	ldr	x21, [sp, #32]
  4083b4:	b	408344 <ferror@plt+0x59a4>
  4083b8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4083bc:	ldr	w19, [x0, #1628]
  4083c0:	bl	402920 <__errno_location@plt>
  4083c4:	mov	x1, x0
  4083c8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  4083cc:	mov	w0, w19
  4083d0:	add	x2, x2, #0xcc0
  4083d4:	ldr	w1, [x1]
  4083d8:	bl	4033d0 <ferror@plt+0xa30>
  4083dc:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4083e0:	mov	w1, #0x1                   	// #1
  4083e4:	str	w1, [x0, #3384]
  4083e8:	b	4083a8 <ferror@plt+0x5a08>
  4083ec:	nop
  4083f0:	stp	x29, x30, [sp, #-48]!
  4083f4:	mov	x29, sp
  4083f8:	stp	x19, x20, [sp, #16]
  4083fc:	stp	x21, x22, [sp, #32]
  408400:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  408404:	add	x19, x21, #0x7e0
  408408:	ldp	x1, x0, [x19, #32]
  40840c:	cmp	x0, x1
  408410:	b.eq	4084cc <ferror@plt+0x5b2c>  // b.none
  408414:	add	x2, x1, #0x1
  408418:	str	x2, [x19, #32]
  40841c:	strb	wzr, [x1]
  408420:	ldp	x20, x2, [x19, #24]
  408424:	cmp	x2, x20
  408428:	b.eq	4084bc <ferror@plt+0x5b1c>  // b.none
  40842c:	ldr	x1, [x19, #56]
  408430:	ldr	x3, [x19, #16]
  408434:	add	x2, x2, x1
  408438:	ldr	x4, [x19, #40]
  40843c:	bic	x1, x2, x1
  408440:	str	x1, [x19, #32]
  408444:	sub	x5, x1, x3
  408448:	sub	x2, x4, x3
  40844c:	cmp	x5, x2
  408450:	b.ls	40845c <ferror@plt+0x5abc>  // b.plast
  408454:	mov	x1, x4
  408458:	str	x4, [x19, #32]
  40845c:	ldr	x0, [x21, #2016]
  408460:	str	x1, [x19, #24]
  408464:	cbz	x0, 40847c <ferror@plt+0x5adc>
  408468:	mov	x2, x20
  40846c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  408470:	add	x1, x1, #0x828
  408474:	bl	416d88 <ferror@plt+0x143e8>
  408478:	ldr	x3, [x19, #16]
  40847c:	cmp	x20, x3
  408480:	b.ls	4084a4 <ferror@plt+0x5b04>  // b.plast
  408484:	ldr	x1, [x19, #40]
  408488:	cmp	x1, x20
  40848c:	b.ls	4084a4 <ferror@plt+0x5b04>  // b.plast
  408490:	stp	x20, x20, [x19, #24]
  408494:	ldp	x19, x20, [sp, #16]
  408498:	ldp	x21, x22, [sp, #32]
  40849c:	ldp	x29, x30, [sp], #48
  4084a0:	ret
  4084a4:	mov	x1, x20
  4084a8:	add	x0, x19, #0x8
  4084ac:	ldp	x19, x20, [sp, #16]
  4084b0:	ldp	x21, x22, [sp, #32]
  4084b4:	ldp	x29, x30, [sp], #48
  4084b8:	b	4176f8 <_obstack_free@@Base>
  4084bc:	ldrb	w1, [x19, #88]
  4084c0:	orr	w1, w1, #0x2
  4084c4:	strb	w1, [x19, #88]
  4084c8:	b	40842c <ferror@plt+0x5a8c>
  4084cc:	add	x20, x19, #0x8
  4084d0:	mov	x1, #0x1                   	// #1
  4084d4:	mov	x0, x20
  4084d8:	bl	4175a8 <_obstack_newchunk@@Base>
  4084dc:	ldr	x1, [x19, #32]
  4084e0:	b	408414 <ferror@plt+0x5a74>
  4084e4:	nop
  4084e8:	stp	x29, x30, [sp, #-192]!
  4084ec:	mov	x29, sp
  4084f0:	stp	x19, x20, [sp, #16]
  4084f4:	mov	x19, x0
  4084f8:	mov	w0, #0xffffffc8            	// #-56
  4084fc:	stp	x23, x24, [sp, #48]
  408500:	stp	x1, x2, [sp, #136]
  408504:	add	x1, sp, #0x80
  408508:	add	x2, sp, #0xc0
  40850c:	stp	x3, x4, [sp, #152]
  408510:	stp	x5, x6, [sp, #168]
  408514:	str	x7, [sp, #184]
  408518:	stp	x2, x2, [sp, #96]
  40851c:	ldrb	w24, [x19]
  408520:	str	x1, [sp, #112]
  408524:	stp	w0, wzr, [sp, #120]
  408528:	cbz	w24, 408598 <ferror@plt+0x5bf8>
  40852c:	adrp	x23, 417000 <ferror@plt+0x14660>
  408530:	add	x20, x19, #0x1
  408534:	add	x23, x23, #0xe98
  408538:	stp	x21, x22, [sp, #32]
  40853c:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  408540:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  408544:	add	x21, x21, #0x7e0
  408548:	add	x22, x22, #0x66c
  40854c:	stp	x25, x26, [sp, #64]
  408550:	str	x27, [sp, #80]
  408554:	nop
  408558:	cmp	w24, #0x25
  40855c:	b.eq	4085a8 <ferror@plt+0x5c08>  // b.none
  408560:	ldp	x1, x0, [x21, #32]
  408564:	add	x19, x21, #0x8
  408568:	cmp	x0, x1
  40856c:	b.eq	4087a4 <ferror@plt+0x5e04>  // b.none
  408570:	add	x0, x1, #0x1
  408574:	mov	x19, x20
  408578:	str	x0, [x21, #32]
  40857c:	strb	w24, [x1]
  408580:	mov	x20, x19
  408584:	ldrb	w24, [x20], #1
  408588:	cbnz	w24, 408558 <ferror@plt+0x5bb8>
  40858c:	ldp	x21, x22, [sp, #32]
  408590:	ldp	x25, x26, [sp, #64]
  408594:	ldr	x27, [sp, #80]
  408598:	ldp	x19, x20, [sp, #16]
  40859c:	ldp	x23, x24, [sp, #48]
  4085a0:	ldp	x29, x30, [sp], #192
  4085a4:	ret
  4085a8:	ldrb	w1, [x19, #1]
  4085ac:	add	x19, x19, #0x2
  4085b0:	cmp	w1, #0x6c
  4085b4:	b.eq	40872c <ferror@plt+0x5d8c>  // b.none
  4085b8:	b.hi	40863c <ferror@plt+0x5c9c>  // b.pmore
  4085bc:	cmp	w1, #0x53
  4085c0:	b.eq	4086f0 <ferror@plt+0x5d50>  // b.none
  4085c4:	cmp	w1, #0x64
  4085c8:	b.ne	4087d4 <ferror@plt+0x5e34>  // b.any
  4085cc:	ldr	w1, [sp, #120]
  4085d0:	ldr	x0, [sp, #96]
  4085d4:	tbnz	w1, #31, 4087b8 <ferror@plt+0x5e18>
  4085d8:	add	x1, x0, #0xb
  4085dc:	and	x1, x1, #0xfffffffffffffff8
  4085e0:	str	x1, [sp, #96]
  4085e4:	ldr	w0, [x0]
  4085e8:	mov	w1, #0xa                   	// #10
  4085ec:	bl	407f90 <ferror@plt+0x55f0>
  4085f0:	mov	x25, x0
  4085f4:	bl	402390 <strlen@plt>
  4085f8:	sxtw	x20, w0
  4085fc:	ldp	x0, x1, [x21, #32]
  408600:	add	x24, x21, #0x8
  408604:	sub	x1, x1, x0
  408608:	cmp	x1, x20
  40860c:	b.cs	408620 <ferror@plt+0x5c80>  // b.hs, b.nlast
  408610:	mov	x0, x24
  408614:	mov	x1, x20
  408618:	bl	4175a8 <_obstack_newchunk@@Base>
  40861c:	ldr	x0, [x21, #32]
  408620:	mov	x1, x25
  408624:	mov	x2, x20
  408628:	bl	402350 <memcpy@plt>
  40862c:	ldr	x0, [x21, #32]
  408630:	add	x0, x0, x20
  408634:	str	x0, [x21, #32]
  408638:	b	408580 <ferror@plt+0x5be0>
  40863c:	cmp	w1, #0x72
  408640:	b.eq	40874c <ferror@plt+0x5dac>  // b.none
  408644:	cmp	w1, #0x73
  408648:	b.ne	4087d4 <ferror@plt+0x5e34>  // b.any
  40864c:	ldr	w1, [sp, #120]
  408650:	mov	w27, #0x1                   	// #1
  408654:	mov	w24, #0x0                   	// #0
  408658:	ldr	x0, [sp, #96]
  40865c:	tbnz	w1, #31, 408710 <ferror@plt+0x5d70>
  408660:	add	x1, x0, #0xf
  408664:	and	x1, x1, #0xfffffffffffffff8
  408668:	str	x1, [sp, #96]
  40866c:	ldr	x25, [x0]
  408670:	add	x26, x21, #0x8
  408674:	mov	x0, x25
  408678:	bl	402390 <strlen@plt>
  40867c:	cmp	w27, #0x0
  408680:	mov	x20, x0
  408684:	ccmp	w24, w0, #0x0, eq  // eq = none
  408688:	ldp	x0, x1, [x26, #24]
  40868c:	sub	x1, x1, x0
  408690:	b.gt	4087dc <ferror@plt+0x5e3c>
  408694:	cmp	x1, w24, sxtw
  408698:	sxtw	x24, w24
  40869c:	b.cc	408790 <ferror@plt+0x5df0>  // b.lo, b.ul, b.last
  4086a0:	mov	x2, x24
  4086a4:	mov	x1, x25
  4086a8:	bl	402350 <memcpy@plt>
  4086ac:	add	x20, x21, #0x8
  4086b0:	ldp	x2, x0, [x21, #32]
  4086b4:	add	x24, x2, x24
  4086b8:	str	x24, [x21, #32]
  4086bc:	sub	x0, x0, x24
  4086c0:	cmp	x0, #0x2
  4086c4:	b.ls	40877c <ferror@plt+0x5ddc>  // b.plast
  4086c8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  4086cc:	add	x0, x0, #0xce0
  4086d0:	ldrh	w2, [x0]
  4086d4:	ldrb	w0, [x0, #2]
  4086d8:	strh	w2, [x24]
  4086dc:	strb	w0, [x24, #2]
  4086e0:	ldr	x0, [x21, #32]
  4086e4:	add	x0, x0, #0x3
  4086e8:	str	x0, [x21, #32]
  4086ec:	b	408580 <ferror@plt+0x5be0>
  4086f0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4086f4:	ldr	w1, [sp, #120]
  4086f8:	ldr	w24, [x0, #1648]
  4086fc:	ldr	x0, [sp, #96]
  408700:	cmp	w24, #0x0
  408704:	cset	w27, eq  // eq = none
  408708:	tbz	w1, #31, 408660 <ferror@plt+0x5cc0>
  40870c:	nop
  408710:	add	w2, w1, #0x8
  408714:	str	w2, [sp, #120]
  408718:	cmp	w2, #0x0
  40871c:	b.gt	408660 <ferror@plt+0x5cc0>
  408720:	ldr	x0, [sp, #104]
  408724:	add	x0, x0, w1, sxtw
  408728:	b	40866c <ferror@plt+0x5ccc>
  40872c:	ldr	w0, [x22]
  408730:	tbz	w0, #2, 40876c <ferror@plt+0x5dcc>
  408734:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  408738:	ldr	x25, [x0, #3400]
  40873c:	mov	x0, x25
  408740:	bl	402390 <strlen@plt>
  408744:	sxtw	x20, w0
  408748:	b	4085fc <ferror@plt+0x5c5c>
  40874c:	ldr	w0, [x22]
  408750:	tbz	w0, #2, 40876c <ferror@plt+0x5dcc>
  408754:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  408758:	ldr	x25, [x0, #3456]
  40875c:	mov	x0, x25
  408760:	bl	402390 <strlen@plt>
  408764:	sxtw	x20, w0
  408768:	b	4085fc <ferror@plt+0x5c5c>
  40876c:	mov	x25, x23
  408770:	mov	x20, #0x0                   	// #0
  408774:	ldr	x0, [x21, #32]
  408778:	b	408620 <ferror@plt+0x5c80>
  40877c:	mov	x0, x20
  408780:	mov	x1, #0x3                   	// #3
  408784:	bl	4175a8 <_obstack_newchunk@@Base>
  408788:	ldr	x24, [x21, #32]
  40878c:	b	4086c8 <ferror@plt+0x5d28>
  408790:	mov	x0, x26
  408794:	mov	x1, x24
  408798:	bl	4175a8 <_obstack_newchunk@@Base>
  40879c:	ldr	x0, [x26, #24]
  4087a0:	b	4086a0 <ferror@plt+0x5d00>
  4087a4:	mov	x1, #0x1                   	// #1
  4087a8:	mov	x0, x19
  4087ac:	bl	4175a8 <_obstack_newchunk@@Base>
  4087b0:	ldr	x1, [x21, #32]
  4087b4:	b	408570 <ferror@plt+0x5bd0>
  4087b8:	add	w2, w1, #0x8
  4087bc:	str	w2, [sp, #120]
  4087c0:	cmp	w2, #0x0
  4087c4:	b.gt	4085d8 <ferror@plt+0x5c38>
  4087c8:	ldr	x0, [sp, #104]
  4087cc:	add	x0, x0, w1, sxtw
  4087d0:	b	4085e4 <ferror@plt+0x5c44>
  4087d4:	mov	x25, x23
  4087d8:	mov	w20, #0x0                   	// #0
  4087dc:	sxtw	x20, w20
  4087e0:	b	4085fc <ferror@plt+0x5c5c>
  4087e4:	nop
  4087e8:	stp	x29, x30, [sp, #-48]!
  4087ec:	mov	x29, sp
  4087f0:	stp	x19, x20, [sp, #16]
  4087f4:	adrp	x20, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4087f8:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  4087fc:	str	x21, [sp, #32]
  408800:	mov	w21, w0
  408804:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408808:	add	x0, x0, #0xce8
  40880c:	bl	4084e8 <ferror@plt+0x5b48>
  408810:	ldr	w1, [x20, #3392]
  408814:	cbz	w1, 408824 <ferror@plt+0x5e84>
  408818:	ldr	w0, [x19, #1644]
  40881c:	tbnz	w0, #5, 408880 <ferror@plt+0x5ee0>
  408820:	tbnz	w0, #4, 40886c <ferror@plt+0x5ecc>
  408824:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  408828:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  40882c:	add	x0, x0, #0xd08
  408830:	ldr	w1, [x1, #2456]
  408834:	bl	4084e8 <ferror@plt+0x5b48>
  408838:	ldr	w1, [x19, #1644]
  40883c:	tbnz	w1, #9, 408850 <ferror@plt+0x5eb0>
  408840:	ldp	x19, x20, [sp, #16]
  408844:	ldr	x21, [sp, #32]
  408848:	ldp	x29, x30, [sp], #48
  40884c:	ret
  408850:	mov	w1, w21
  408854:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408858:	ldp	x19, x20, [sp, #16]
  40885c:	add	x0, x0, #0xd10
  408860:	ldr	x21, [sp, #32]
  408864:	ldp	x29, x30, [sp], #48
  408868:	b	4084e8 <ferror@plt+0x5b48>
  40886c:	ldr	w1, [x20, #3392]
  408870:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408874:	add	x0, x0, #0xd00
  408878:	bl	4084e8 <ferror@plt+0x5b48>
  40887c:	b	408824 <ferror@plt+0x5e84>
  408880:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  408884:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408888:	add	x0, x0, #0xcf8
  40888c:	ldr	x1, [x1, #3416]
  408890:	bl	4084e8 <ferror@plt+0x5b48>
  408894:	ldr	w0, [x19, #1644]
  408898:	tbz	w0, #4, 408824 <ferror@plt+0x5e84>
  40889c:	b	40886c <ferror@plt+0x5ecc>
  4088a0:	stp	x29, x30, [sp, #-16]!
  4088a4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4088a8:	mov	x29, sp
  4088ac:	ldr	x0, [x0, #1032]
  4088b0:	bl	408288 <ferror@plt+0x58e8>
  4088b4:	ldp	x29, x30, [sp], #16
  4088b8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4088bc:	add	x0, x0, #0x7e0
  4088c0:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  4088c4:	add	x0, x0, #0x8
  4088c8:	add	x4, x4, #0x7c0
  4088cc:	adrp	x3, 416000 <ferror@plt+0x13660>
  4088d0:	mov	x2, #0x0                   	// #0
  4088d4:	add	x3, x3, #0x968
  4088d8:	mov	x1, #0x0                   	// #0
  4088dc:	b	417578 <_obstack_begin@@Base>
  4088e0:	stp	x29, x30, [sp, #-32]!
  4088e4:	mov	x29, sp
  4088e8:	str	x19, [sp, #16]
  4088ec:	cbz	x0, 408958 <ferror@plt+0x5fb8>
  4088f0:	ldrb	w1, [x0]
  4088f4:	cbz	w1, 408958 <ferror@plt+0x5fb8>
  4088f8:	mov	w19, #0x0                   	// #0
  4088fc:	b	408928 <ferror@plt+0x5f88>
  408900:	cmp	w1, #0x63
  408904:	b.eq	408a48 <ferror@plt+0x60a8>  // b.none
  408908:	b.ls	4089f0 <ferror@plt+0x6050>  // b.plast
  40890c:	cmp	w1, #0x65
  408910:	b.eq	408a40 <ferror@plt+0x60a0>  // b.none
  408914:	cmp	w1, #0x66
  408918:	b.ne	408a68 <ferror@plt+0x60c8>  // b.any
  40891c:	orr	w19, w19, #0x20
  408920:	ldrb	w1, [x0, #1]!
  408924:	cbz	w1, 40895c <ferror@plt+0x5fbc>
  408928:	cmp	w1, #0x69
  40892c:	b.eq	408a38 <ferror@plt+0x6098>  // b.none
  408930:	b.ls	408900 <ferror@plt+0x5f60>  // b.plast
  408934:	cmp	w1, #0x71
  408938:	b.eq	408a58 <ferror@plt+0x60b8>  // b.none
  40893c:	b.ls	408a08 <ferror@plt+0x6068>  // b.plast
  408940:	cmp	w1, #0x74
  408944:	b.eq	408a50 <ferror@plt+0x60b0>  // b.none
  408948:	cmp	w1, #0x78
  40894c:	b.ne	408a68 <ferror@plt+0x60c8>  // b.any
  408950:	orr	w19, w19, #0x200
  408954:	b	408920 <ferror@plt+0x5f80>
  408958:	mov	w19, #0x7                   	// #7
  40895c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408960:	add	x0, x0, #0x7e0
  408964:	ldp	x1, x4, [x0, #24]
  408968:	cmp	x4, x1
  40896c:	b.eq	408a28 <ferror@plt+0x6088>  // b.none
  408970:	ldr	x2, [x0, #56]
  408974:	ldr	x6, [x0, #16]
  408978:	add	x4, x4, x2
  40897c:	ldr	x5, [x0, #40]
  408980:	bic	x2, x4, x2
  408984:	str	x2, [x0, #32]
  408988:	sub	x7, x2, x6
  40898c:	sub	x4, x5, x6
  408990:	cmp	x7, x4
  408994:	b.hi	4089c0 <ferror@plt+0x6020>  // b.pmore
  408998:	str	x2, [x0, #24]
  40899c:	cmp	x6, x1
  4089a0:	add	x0, x0, #0x8
  4089a4:	ccmp	x5, x1, #0x0, cc  // cc = lo, ul, last
  4089a8:	b.hi	4089dc <ferror@plt+0x603c>  // b.pmore
  4089ac:	bl	4176f8 <_obstack_free@@Base>
  4089b0:	mov	w0, w19
  4089b4:	ldr	x19, [sp, #16]
  4089b8:	ldp	x29, x30, [sp], #32
  4089bc:	ret
  4089c0:	add	x0, x0, #0x8
  4089c4:	str	x5, [x0, #24]
  4089c8:	mov	x2, x5
  4089cc:	cmp	x6, x1
  4089d0:	ccmp	x5, x1, #0x0, cc  // cc = lo, ul, last
  4089d4:	str	x2, [x0, #16]
  4089d8:	b.ls	4089ac <ferror@plt+0x600c>  // b.plast
  4089dc:	stp	x1, x1, [x0, #16]
  4089e0:	mov	w0, w19
  4089e4:	ldr	x19, [sp, #16]
  4089e8:	ldp	x29, x30, [sp], #32
  4089ec:	ret
  4089f0:	cmp	w1, #0x56
  4089f4:	b.eq	408a20 <ferror@plt+0x6080>  // b.none
  4089f8:	cmp	w1, #0x61
  4089fc:	b.ne	408a68 <ferror@plt+0x60c8>  // b.any
  408a00:	orr	w19, w19, #0x1
  408a04:	b	408920 <ferror@plt+0x5f80>
  408a08:	cmp	w1, #0x6c
  408a0c:	b.eq	408a60 <ferror@plt+0x60c0>  // b.none
  408a10:	cmp	w1, #0x70
  408a14:	b.ne	408a68 <ferror@plt+0x60c8>  // b.any
  408a18:	orr	w19, w19, #0x40
  408a1c:	b	408920 <ferror@plt+0x5f80>
  408a20:	mov	w19, #0x3ff                 	// #1023
  408a24:	b	408920 <ferror@plt+0x5f80>
  408a28:	ldrb	w3, [x0, #88]
  408a2c:	orr	w3, w3, #0x2
  408a30:	strb	w3, [x0, #88]
  408a34:	b	408970 <ferror@plt+0x5fd0>
  408a38:	orr	w19, w19, #0x100
  408a3c:	b	408920 <ferror@plt+0x5f80>
  408a40:	orr	w19, w19, #0x2
  408a44:	b	408920 <ferror@plt+0x5f80>
  408a48:	orr	w19, w19, #0x80
  408a4c:	b	408920 <ferror@plt+0x5f80>
  408a50:	orr	w19, w19, #0x8
  408a54:	b	408920 <ferror@plt+0x5f80>
  408a58:	orr	w19, w19, #0x4
  408a5c:	b	408920 <ferror@plt+0x5f80>
  408a60:	orr	w19, w19, #0x10
  408a64:	b	408920 <ferror@plt+0x5f80>
  408a68:	mov	w19, #0xffffffff            	// #-1
  408a6c:	b	4089b0 <ferror@plt+0x6010>
  408a70:	stp	x29, x30, [sp, #-32]!
  408a74:	mov	x29, sp
  408a78:	stp	x19, x20, [sp, #16]
  408a7c:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  408a80:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  408a84:	ldr	x0, [x19, #1056]
  408a88:	bl	4172a8 <ferror@plt+0x14908>
  408a8c:	ldr	x0, [x20, #1032]
  408a90:	bl	4172a8 <ferror@plt+0x14908>
  408a94:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408a98:	ldr	x0, [x0, #2016]
  408a9c:	cbz	x0, 408abc <ferror@plt+0x611c>
  408aa0:	ldr	x1, [x19, #1056]
  408aa4:	cmp	x0, x1
  408aa8:	b.eq	408abc <ferror@plt+0x611c>  // b.none
  408aac:	ldr	x1, [x20, #1032]
  408ab0:	cmp	x0, x1
  408ab4:	b.eq	408abc <ferror@plt+0x611c>  // b.none
  408ab8:	bl	4172a8 <ferror@plt+0x14908>
  408abc:	mov	w2, #0x1                   	// #1
  408ac0:	mov	x1, #0x0                   	// #0
  408ac4:	mov	w0, #0x0                   	// #0
  408ac8:	bl	4024a0 <lseek@plt>
  408acc:	tbz	x0, #63, 408adc <ferror@plt+0x613c>
  408ad0:	ldp	x19, x20, [sp, #16]
  408ad4:	ldp	x29, x30, [sp], #32
  408ad8:	ret
  408adc:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  408ae0:	ldr	x0, [x19, #1064]
  408ae4:	bl	4172a8 <ferror@plt+0x14908>
  408ae8:	cbnz	w0, 408ad0 <ferror@plt+0x6130>
  408aec:	ldr	x0, [x19, #1064]
  408af0:	mov	w2, #0x1                   	// #1
  408af4:	ldp	x19, x20, [sp, #16]
  408af8:	mov	x1, #0x0                   	// #0
  408afc:	ldp	x29, x30, [sp], #32
  408b00:	b	417340 <ferror@plt+0x149a0>
  408b04:	nop
  408b08:	stp	x29, x30, [sp, #-32]!
  408b0c:	mov	x29, sp
  408b10:	cbz	x0, 408ba4 <ferror@plt+0x6204>
  408b14:	ldrb	w1, [x0]
  408b18:	cbnz	w1, 408b34 <ferror@plt+0x6194>
  408b1c:	mov	x0, #0x0                   	// #0
  408b20:	bl	408288 <ferror@plt+0x58e8>
  408b24:	mov	w1, #0x1                   	// #1
  408b28:	mov	w0, w1
  408b2c:	ldp	x29, x30, [sp], #32
  408b30:	ret
  408b34:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  408b38:	add	x1, x1, #0xd18
  408b3c:	stp	x19, x20, [sp, #16]
  408b40:	bl	412400 <ferror@plt+0xfa60>
  408b44:	mov	w1, #0x0                   	// #0
  408b48:	mov	x19, x0
  408b4c:	cbz	x0, 408bc0 <ferror@plt+0x6220>
  408b50:	bl	4024c0 <fileno@plt>
  408b54:	mov	w1, #0x1                   	// #1
  408b58:	bl	4119a8 <ferror@plt+0xf008>
  408b5c:	cbnz	w0, 408b7c <ferror@plt+0x61dc>
  408b60:	mov	x0, x19
  408b64:	bl	408288 <ferror@plt+0x58e8>
  408b68:	mov	w1, #0x1                   	// #1
  408b6c:	mov	w0, w1
  408b70:	ldp	x19, x20, [sp, #16]
  408b74:	ldp	x29, x30, [sp], #32
  408b78:	ret
  408b7c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408b80:	ldr	w20, [x0, #1628]
  408b84:	bl	402920 <__errno_location@plt>
  408b88:	mov	x1, x0
  408b8c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  408b90:	mov	w0, w20
  408b94:	add	x2, x2, #0xd20
  408b98:	ldr	w1, [x1]
  408b9c:	bl	4033d0 <ferror@plt+0xa30>
  408ba0:	b	408b60 <ferror@plt+0x61c0>
  408ba4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408ba8:	ldr	x0, [x0, #1032]
  408bac:	bl	408288 <ferror@plt+0x58e8>
  408bb0:	mov	w1, #0x1                   	// #1
  408bb4:	mov	w0, w1
  408bb8:	ldp	x29, x30, [sp], #32
  408bbc:	ret
  408bc0:	mov	w0, w1
  408bc4:	ldp	x19, x20, [sp, #16]
  408bc8:	ldp	x29, x30, [sp], #32
  408bcc:	ret
  408bd0:	stp	x29, x30, [sp, #-48]!
  408bd4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  408bd8:	add	x1, x1, #0xd50
  408bdc:	mov	x29, sp
  408be0:	stp	x19, x20, [sp, #16]
  408be4:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  408be8:	adrp	x20, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  408bec:	ldr	x0, [x19, #2016]
  408bf0:	bl	416d88 <ferror@plt+0x143e8>
  408bf4:	ldr	w0, [x20, #3392]
  408bf8:	cbnz	w0, 408c10 <ferror@plt+0x6270>
  408bfc:	ldr	x1, [x19, #2016]
  408c00:	mov	w0, #0x20                  	// #32
  408c04:	ldp	x19, x20, [sp, #16]
  408c08:	ldp	x29, x30, [sp], #48
  408c0c:	b	402430 <putc@plt>
  408c10:	str	x21, [sp, #32]
  408c14:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  408c18:	ldr	x1, [x19, #2016]
  408c1c:	ldr	w0, [x21, #1644]
  408c20:	tbnz	w0, #5, 408c68 <ferror@plt+0x62c8>
  408c24:	tbnz	w0, #4, 408c3c <ferror@plt+0x629c>
  408c28:	ldp	x19, x20, [sp, #16]
  408c2c:	mov	w0, #0x20                  	// #32
  408c30:	ldr	x21, [sp, #32]
  408c34:	ldp	x29, x30, [sp], #48
  408c38:	b	402430 <putc@plt>
  408c3c:	ldr	w2, [x20, #3392]
  408c40:	mov	x0, x1
  408c44:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  408c48:	add	x1, x1, #0xd00
  408c4c:	bl	416d88 <ferror@plt+0x143e8>
  408c50:	ldr	x1, [x19, #2016]
  408c54:	mov	w0, #0x20                  	// #32
  408c58:	ldp	x19, x20, [sp, #16]
  408c5c:	ldr	x21, [sp, #32]
  408c60:	ldp	x29, x30, [sp], #48
  408c64:	b	402430 <putc@plt>
  408c68:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  408c6c:	mov	x0, x1
  408c70:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  408c74:	add	x1, x1, #0xcf8
  408c78:	ldr	x2, [x2, #3416]
  408c7c:	bl	416d88 <ferror@plt+0x143e8>
  408c80:	ldr	w0, [x21, #1644]
  408c84:	ldr	x1, [x19, #2016]
  408c88:	tbz	w0, #4, 408c28 <ferror@plt+0x6288>
  408c8c:	b	408c3c <ferror@plt+0x629c>
  408c90:	stp	x29, x30, [sp, #-32]!
  408c94:	mov	x29, sp
  408c98:	str	x19, [sp, #16]
  408c9c:	mov	x19, x0
  408ca0:	mov	w0, w1
  408ca4:	bl	4087e8 <ferror@plt+0x5e48>
  408ca8:	mov	x1, x19
  408cac:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408cb0:	add	x0, x0, #0xd60
  408cb4:	bl	4084e8 <ferror@plt+0x5b48>
  408cb8:	ldr	x19, [sp, #16]
  408cbc:	ldp	x29, x30, [sp], #32
  408cc0:	b	4083f0 <ferror@plt+0x5a50>
  408cc4:	nop
  408cc8:	stp	x29, x30, [sp, #-64]!
  408ccc:	mov	x29, sp
  408cd0:	stp	x19, x20, [sp, #16]
  408cd4:	mov	w20, w2
  408cd8:	mov	x19, x3
  408cdc:	stp	x21, x22, [sp, #32]
  408ce0:	mov	x21, x0
  408ce4:	mov	w0, w1
  408ce8:	bl	4087e8 <ferror@plt+0x5e48>
  408cec:	mov	x1, x21
  408cf0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408cf4:	add	x0, x0, #0xf20
  408cf8:	bl	4084e8 <ferror@plt+0x5b48>
  408cfc:	cmp	w20, #0x1
  408d00:	b.le	408d24 <ferror@plt+0x6384>
  408d04:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  408d08:	ldr	w0, [x22, #1644]
  408d0c:	tbnz	w0, #0, 408d4c <ferror@plt+0x63ac>
  408d10:	tbnz	w0, #7, 408d30 <ferror@plt+0x6390>
  408d14:	ldp	x19, x20, [sp, #16]
  408d18:	ldp	x21, x22, [sp, #32]
  408d1c:	ldp	x29, x30, [sp], #64
  408d20:	ret
  408d24:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408d28:	ldr	w0, [x0, #1644]
  408d2c:	tbz	w0, #7, 408d14 <ferror@plt+0x6374>
  408d30:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408d34:	add	x0, x0, #0xe08
  408d38:	bl	4084e8 <ferror@plt+0x5b48>
  408d3c:	ldp	x19, x20, [sp, #16]
  408d40:	ldp	x21, x22, [sp, #32]
  408d44:	ldp	x29, x30, [sp], #64
  408d48:	b	4083f0 <ferror@plt+0x5a50>
  408d4c:	sub	w20, w20, #0x2
  408d50:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408d54:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x1878>
  408d58:	add	x0, x0, #0xd68
  408d5c:	add	x20, x19, w20, uxtw #3
  408d60:	stp	x23, x24, [sp, #48]
  408d64:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x1878>
  408d68:	adrp	x23, 419000 <_obstack_memory_used@@Base+0x1878>
  408d6c:	add	x24, x24, #0xd78
  408d70:	add	x23, x23, #0xdc8
  408d74:	bl	4084e8 <ferror@plt+0x5b48>
  408d78:	b	408d9c <ferror@plt+0x63fc>
  408d7c:	ldr	x1, [x1, #8]
  408d80:	mov	x0, x24
  408d84:	bl	4084e8 <ferror@plt+0x5b48>
  408d88:	cmp	x19, x20
  408d8c:	b.eq	408dd4 <ferror@plt+0x6434>  // b.none
  408d90:	add	x19, x19, #0x8
  408d94:	add	x0, x21, #0xd70
  408d98:	bl	4084e8 <ferror@plt+0x5b48>
  408d9c:	ldr	x1, [x19, #8]
  408da0:	ldr	w0, [x1]
  408da4:	cmp	w0, #0x1
  408da8:	b.eq	408d7c <ferror@plt+0x63dc>  // b.none
  408dac:	cmp	w0, #0x2
  408db0:	b.ne	408dec <ferror@plt+0x644c>  // b.any
  408db4:	ldr	x0, [x1, #8]
  408db8:	bl	4076b0 <ferror@plt+0x4d10>
  408dbc:	cbz	x0, 408e08 <ferror@plt+0x6468>
  408dc0:	ldr	x1, [x0]
  408dc4:	mov	x0, x23
  408dc8:	bl	4084e8 <ferror@plt+0x5b48>
  408dcc:	cmp	x19, x20
  408dd0:	b.ne	408d90 <ferror@plt+0x63f0>  // b.any
  408dd4:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  408dd8:	add	x0, x0, #0x678
  408ddc:	bl	4084e8 <ferror@plt+0x5b48>
  408de0:	ldr	w0, [x22, #1644]
  408de4:	ldp	x23, x24, [sp, #48]
  408de8:	b	408d10 <ferror@plt+0x6370>
  408dec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408df0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  408df4:	add	x2, x2, #0xdd0
  408df8:	mov	w1, #0x0                   	// #0
  408dfc:	ldr	w0, [x0, #1628]
  408e00:	bl	4033d0 <ferror@plt+0xa30>
  408e04:	bl	4026d0 <abort@plt>
  408e08:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  408e0c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  408e10:	add	x2, x2, #0xd80
  408e14:	mov	w1, #0x0                   	// #0
  408e18:	ldr	w0, [x0, #1628]
  408e1c:	bl	4033d0 <ferror@plt+0xa30>
  408e20:	bl	4026d0 <abort@plt>
  408e24:	nop
  408e28:	stp	x29, x30, [sp, #-48]!
  408e2c:	mov	x29, sp
  408e30:	stp	x21, x22, [sp, #32]
  408e34:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  408e38:	ldr	w4, [x22, #1644]
  408e3c:	stp	x19, x20, [sp, #16]
  408e40:	mov	x19, x3
  408e44:	tbnz	w4, #7, 408e64 <ferror@plt+0x64c4>
  408e48:	cbz	x19, 408e54 <ferror@plt+0x64b4>
  408e4c:	ldr	w0, [x22, #1644]
  408e50:	tbnz	w0, #1, 408ea0 <ferror@plt+0x6500>
  408e54:	ldp	x19, x20, [sp, #16]
  408e58:	ldp	x21, x22, [sp, #32]
  408e5c:	ldp	x29, x30, [sp], #48
  408e60:	b	4083f0 <ferror@plt+0x5a50>
  408e64:	mov	w21, w2
  408e68:	mov	x20, x0
  408e6c:	mov	w0, w1
  408e70:	bl	4087e8 <ferror@plt+0x5e48>
  408e74:	cmp	w21, #0x1
  408e78:	adrp	x0, 417000 <ferror@plt+0x14660>
  408e7c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  408e80:	add	x0, x0, #0xe98
  408e84:	add	x2, x2, #0xe10
  408e88:	mov	x1, x20
  408e8c:	csel	x2, x2, x0, gt
  408e90:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408e94:	add	x0, x0, #0xe18
  408e98:	bl	4084e8 <ferror@plt+0x5b48>
  408e9c:	b	408e48 <ferror@plt+0x64a8>
  408ea0:	mov	x1, x19
  408ea4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  408ea8:	add	x0, x0, #0xe20
  408eac:	bl	4084e8 <ferror@plt+0x5b48>
  408eb0:	ldp	x19, x20, [sp, #16]
  408eb4:	ldp	x21, x22, [sp, #32]
  408eb8:	ldp	x29, x30, [sp], #48
  408ebc:	b	4083f0 <ferror@plt+0x5a50>
  408ec0:	stp	x29, x30, [sp, #-32]!
  408ec4:	mov	x29, sp
  408ec8:	str	x19, [sp, #16]
  408ecc:	mov	x19, x0
  408ed0:	bl	402770 <__ctype_b_loc@plt>
  408ed4:	adrp	x7, 431000 <_obstack_memory_used@@Base+0x19878>
  408ed8:	mov	w6, #0x0                   	// #0
  408edc:	ldr	x5, [x0]
  408ee0:	ldr	x1, [x7, #2112]
  408ee4:	b	408eec <ferror@plt+0x654c>
  408ee8:	mov	w6, #0x1                   	// #1
  408eec:	ldrb	w2, [x1]
  408ef0:	mov	x3, x1
  408ef4:	add	x1, x1, #0x1
  408ef8:	ubfiz	x4, x2, #1, #8
  408efc:	ldrh	w4, [x5, x4]
  408f00:	tbnz	w4, #13, 408ee8 <ferror@plt+0x6548>
  408f04:	cbz	w6, 408f0c <ferror@plt+0x656c>
  408f08:	str	x3, [x7, #2112]
  408f0c:	add	x1, x7, #0x840
  408f10:	mov	w0, #0x1b                  	// #27
  408f14:	str	x3, [x1, #8]
  408f18:	cbz	w2, 408fe4 <ferror@plt+0x6644>
  408f1c:	tbz	w4, #11, 408ff0 <ferror@plt+0x6650>
  408f20:	cmp	w2, #0x30
  408f24:	b.ne	409150 <ferror@plt+0x67b0>  // b.any
  408f28:	ldrb	w1, [x3, #1]
  408f2c:	add	x0, x3, #0x1
  408f30:	str	x0, [x7, #2112]
  408f34:	sub	w1, w1, #0x42
  408f38:	and	w2, w1, #0xff
  408f3c:	cmp	w2, #0x36
  408f40:	b.hi	4091f8 <ferror@plt+0x6858>  // b.pmore
  408f44:	mov	x1, #0x1                   	// #1
  408f48:	lsl	x1, x1, x2
  408f4c:	tst	x1, #0x1000000010000
  408f50:	b.ne	40917c <ferror@plt+0x67dc>  // b.any
  408f54:	tst	x1, #0x100000001
  408f58:	b.ne	40916c <ferror@plt+0x67cc>  // b.any
  408f5c:	tst	x1, #0x40000000400000
  408f60:	mov	w1, #0x8                   	// #8
  408f64:	b.ne	40915c <ferror@plt+0x67bc>  // b.any
  408f68:	str	wzr, [x19]
  408f6c:	ldrb	w2, [x0]
  408f70:	cbz	w2, 408fe0 <ferror@plt+0x6640>
  408f74:	mov	w4, #0x0                   	// #0
  408f78:	b	408fa8 <ferror@plt+0x6608>
  408f7c:	sub	w2, w2, #0x30
  408f80:	cmp	w1, #0x1
  408f84:	b.eq	408fc4 <ferror@plt+0x6624>  // b.none
  408f88:	cmp	w1, w2
  408f8c:	b.le	408fd8 <ferror@plt+0x6638>
  408f90:	ldr	w3, [x19]
  408f94:	madd	w2, w1, w3, w2
  408f98:	str	w2, [x19]
  408f9c:	ldrb	w2, [x0, #1]!
  408fa0:	mov	w4, #0x1                   	// #1
  408fa4:	cbz	w2, 409210 <ferror@plt+0x6870>
  408fa8:	ubfiz	x3, x2, #1, #8
  408fac:	ldrh	w3, [x5, x3]
  408fb0:	tbnz	w3, #11, 408f7c <ferror@plt+0x65dc>
  408fb4:	tbz	w3, #9, 40907c <ferror@plt+0x66dc>
  408fb8:	sub	w2, w2, #0x57
  408fbc:	cmp	w1, #0x1
  408fc0:	b.ne	408f88 <ferror@plt+0x65e8>  // b.any
  408fc4:	cmp	w2, #0x1
  408fc8:	b.eq	409140 <ferror@plt+0x67a0>  // b.none
  408fcc:	cbnz	w2, 408fd8 <ferror@plt+0x6638>
  408fd0:	ldr	w2, [x19]
  408fd4:	cbz	w2, 408f9c <ferror@plt+0x65fc>
  408fd8:	cbz	w4, 408fe0 <ferror@plt+0x6640>
  408fdc:	str	x0, [x7, #2112]
  408fe0:	mov	w0, #0x1a                  	// #26
  408fe4:	ldr	x19, [sp, #16]
  408fe8:	ldp	x29, x30, [sp], #32
  408fec:	ret
  408ff0:	add	x0, x3, #0x1
  408ff4:	str	x0, [x7, #2112]
  408ff8:	cmp	w2, #0x2d
  408ffc:	b.eq	4092bc <ferror@plt+0x691c>  // b.none
  409000:	b.hi	409040 <ferror@plt+0x66a0>  // b.pmore
  409004:	cmp	w2, #0x28
  409008:	b.eq	4091f0 <ferror@plt+0x6850>  // b.none
  40900c:	b.ls	4090d0 <ferror@plt+0x6730>  // b.plast
  409010:	cmp	w2, #0x2a
  409014:	b.eq	409238 <ferror@plt+0x6898>  // b.none
  409018:	cmp	w2, #0x2b
  40901c:	b.ne	4090b8 <ferror@plt+0x6718>  // b.any
  409020:	ldrb	w0, [x3, #1]
  409024:	mov	w1, #0x3d                  	// #61
  409028:	cmp	w0, #0x2b
  40902c:	ccmp	w0, w1, #0x4, ne  // ne = any
  409030:	mov	w0, #0x2                   	// #2
  409034:	b.ne	408fe4 <ferror@plt+0x6644>  // b.any
  409038:	mov	w0, #0x1                   	// #1
  40903c:	b	408fe4 <ferror@plt+0x6644>
  409040:	cmp	w2, #0x3e
  409044:	b.eq	409254 <ferror@plt+0x68b4>  // b.none
  409048:	b.ls	409088 <ferror@plt+0x66e8>  // b.plast
  40904c:	cmp	w2, #0x7c
  409050:	b.eq	40921c <ferror@plt+0x687c>  // b.none
  409054:	cmp	w2, #0x7e
  409058:	mov	w0, #0x14                  	// #20
  40905c:	b.eq	408fe4 <ferror@plt+0x6644>  // b.none
  409060:	cmp	w2, #0x5e
  409064:	b.ne	4091e8 <ferror@plt+0x6848>  // b.any
  409068:	ldrb	w0, [x3, #1]
  40906c:	cmp	w0, #0x3d
  409070:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  409074:	mov	w0, #0x17                  	// #23
  409078:	b	408fe4 <ferror@plt+0x6644>
  40907c:	tbz	w3, #8, 408fd8 <ferror@plt+0x6638>
  409080:	sub	w2, w2, #0x37
  409084:	b	408f80 <ferror@plt+0x65e0>
  409088:	cmp	w2, #0x3c
  40908c:	b.eq	409288 <ferror@plt+0x68e8>  // b.none
  409090:	cmp	w2, #0x3d
  409094:	b.ne	4090fc <ferror@plt+0x675c>  // b.any
  409098:	ldrb	w1, [x3, #1]
  40909c:	mov	w0, #0x8                   	// #8
  4090a0:	cmp	w1, #0x3d
  4090a4:	b.ne	408fe4 <ferror@plt+0x6644>  // b.any
  4090a8:	add	x3, x3, #0x2
  4090ac:	mov	w0, #0x9                   	// #9
  4090b0:	str	x3, [x7, #2112]
  4090b4:	b	408fe4 <ferror@plt+0x6644>
  4090b8:	cmp	w2, #0x29
  4090bc:	mov	w0, #0x19                  	// #25
  4090c0:	csel	w0, wzr, w0, ne  // ne = any
  4090c4:	ldr	x19, [sp, #16]
  4090c8:	ldp	x29, x30, [sp], #32
  4090cc:	ret
  4090d0:	cmp	w2, #0x25
  4090d4:	b.eq	4092d8 <ferror@plt+0x6938>  // b.none
  4090d8:	cmp	w2, #0x26
  4090dc:	b.ne	409118 <ferror@plt+0x6778>  // b.any
  4090e0:	ldrb	w0, [x3, #1]
  4090e4:	cmp	w0, #0x26
  4090e8:	b.eq	409200 <ferror@plt+0x6860>  // b.none
  4090ec:	cmp	w0, #0x3d
  4090f0:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  4090f4:	mov	w0, #0x15                  	// #21
  4090f8:	b	408fe4 <ferror@plt+0x6644>
  4090fc:	cmp	w2, #0x2f
  409100:	b.ne	4091e8 <ferror@plt+0x6848>  // b.any
  409104:	ldrb	w0, [x3, #1]
  409108:	cmp	w0, #0x3d
  40910c:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  409110:	mov	w0, #0x6                   	// #6
  409114:	b	408fe4 <ferror@plt+0x6644>
  409118:	cmp	w2, #0x21
  40911c:	b.ne	4091e8 <ferror@plt+0x6848>  // b.any
  409120:	ldrb	w1, [x3, #1]
  409124:	mov	w0, #0x11                  	// #17
  409128:	cmp	w1, #0x3d
  40912c:	b.ne	408fe4 <ferror@plt+0x6644>  // b.any
  409130:	add	x3, x3, #0x2
  409134:	mov	w0, #0xa                   	// #10
  409138:	str	x3, [x7, #2112]
  40913c:	b	408fe4 <ferror@plt+0x6644>
  409140:	ldr	w2, [x19]
  409144:	add	w2, w2, #0x1
  409148:	str	w2, [x19]
  40914c:	b	408f9c <ferror@plt+0x65fc>
  409150:	ldr	x0, [x7, #2112]
  409154:	mov	w1, #0xa                   	// #10
  409158:	b	408f68 <ferror@plt+0x65c8>
  40915c:	add	x0, x3, #0x2
  409160:	mov	w1, #0x10                  	// #16
  409164:	str	x0, [x7, #2112]
  409168:	b	408f68 <ferror@plt+0x65c8>
  40916c:	add	x0, x3, #0x2
  409170:	mov	w1, #0x2                   	// #2
  409174:	str	x0, [x7, #2112]
  409178:	b	408f68 <ferror@plt+0x65c8>
  40917c:	ldrb	w2, [x3, #2]
  409180:	add	x3, x3, #0x2
  409184:	str	x3, [x7, #2112]
  409188:	mov	w1, #0x0                   	// #0
  40918c:	ubfiz	x0, x2, #1, #8
  409190:	ldrh	w0, [x5, x0]
  409194:	tbnz	w0, #11, 4091a4 <ferror@plt+0x6804>
  409198:	b	4091e8 <ferror@plt+0x6848>
  40919c:	cmp	w1, #0x24
  4091a0:	b.gt	4091e4 <ferror@plt+0x6844>
  4091a4:	add	w1, w1, w1, lsl #2
  4091a8:	mov	x0, x3
  4091ac:	add	w1, w2, w1, lsl #1
  4091b0:	ldrb	w2, [x3, #1]!
  4091b4:	sub	w1, w1, #0x30
  4091b8:	ubfiz	x4, x2, #1, #8
  4091bc:	ldrh	w4, [x5, x4]
  4091c0:	tbnz	w4, #11, 40919c <ferror@plt+0x67fc>
  4091c4:	cmp	w1, #0x24
  4091c8:	mov	w4, #0x3a                  	// #58
  4091cc:	ccmp	w1, #0x0, #0x4, le
  4091d0:	ccmp	w2, w4, #0x0, ne  // ne = any
  4091d4:	b.ne	4091e4 <ferror@plt+0x6844>  // b.any
  4091d8:	add	x0, x0, #0x2
  4091dc:	str	x0, [x7, #2112]
  4091e0:	b	408f68 <ferror@plt+0x65c8>
  4091e4:	str	x3, [x7, #2112]
  4091e8:	mov	w0, #0x0                   	// #0
  4091ec:	b	408fe4 <ferror@plt+0x6644>
  4091f0:	mov	w0, #0x18                  	// #24
  4091f4:	b	408fe4 <ferror@plt+0x6644>
  4091f8:	mov	w1, #0x8                   	// #8
  4091fc:	b	408f68 <ferror@plt+0x65c8>
  409200:	add	x3, x3, #0x2
  409204:	mov	w0, #0x12                  	// #18
  409208:	str	x3, [x7, #2112]
  40920c:	b	408fe4 <ferror@plt+0x6644>
  409210:	str	x0, [x7, #2112]
  409214:	mov	w0, #0x1a                  	// #26
  409218:	b	408fe4 <ferror@plt+0x6644>
  40921c:	ldrb	w0, [x3, #1]
  409220:	cmp	w0, #0x7c
  409224:	b.eq	4092ec <ferror@plt+0x694c>  // b.none
  409228:	cmp	w0, #0x3d
  40922c:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  409230:	mov	w0, #0x16                  	// #22
  409234:	b	408fe4 <ferror@plt+0x6644>
  409238:	ldrb	w0, [x3, #1]
  40923c:	cmp	w0, #0x2a
  409240:	b.eq	40930c <ferror@plt+0x696c>  // b.none
  409244:	cmp	w0, #0x3d
  409248:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  40924c:	mov	w0, #0x5                   	// #5
  409250:	b	408fe4 <ferror@plt+0x6644>
  409254:	ldrb	w0, [x3, #1]
  409258:	cmp	w0, #0x3d
  40925c:	b.eq	4092fc <ferror@plt+0x695c>  // b.none
  409260:	cmp	w0, #0x3e
  409264:	mov	w0, #0xb                   	// #11
  409268:	b.ne	408fe4 <ferror@plt+0x6644>  // b.any
  40926c:	add	x0, x3, #0x2
  409270:	ldrb	w1, [x3, #2]
  409274:	str	x0, [x7, #2112]
  409278:	mov	w0, #0x10                  	// #16
  40927c:	cmp	w1, #0x3d
  409280:	b.ne	408fe4 <ferror@plt+0x6644>  // b.any
  409284:	b	409038 <ferror@plt+0x6698>
  409288:	ldrb	w0, [x3, #1]
  40928c:	cmp	w0, #0x3d
  409290:	b.eq	40931c <ferror@plt+0x697c>  // b.none
  409294:	cmp	w0, #0x3c
  409298:	mov	w0, #0xd                   	// #13
  40929c:	b.ne	408fe4 <ferror@plt+0x6644>  // b.any
  4092a0:	ldrb	w0, [x3, #2]
  4092a4:	add	x1, x3, #0x2
  4092a8:	str	x1, [x7, #2112]
  4092ac:	cmp	w0, #0x3d
  4092b0:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  4092b4:	mov	w0, #0xf                   	// #15
  4092b8:	b	408fe4 <ferror@plt+0x6644>
  4092bc:	ldrb	w0, [x3, #1]
  4092c0:	and	w0, w0, #0xffffffef
  4092c4:	and	w0, w0, #0xff
  4092c8:	cmp	w0, #0x2d
  4092cc:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  4092d0:	mov	w0, #0x3                   	// #3
  4092d4:	b	408fe4 <ferror@plt+0x6644>
  4092d8:	ldrb	w0, [x3, #1]
  4092dc:	cmp	w0, #0x3d
  4092e0:	b.eq	409038 <ferror@plt+0x6698>  // b.none
  4092e4:	mov	w0, #0x7                   	// #7
  4092e8:	b	408fe4 <ferror@plt+0x6644>
  4092ec:	add	x3, x3, #0x2
  4092f0:	mov	w0, #0x13                  	// #19
  4092f4:	str	x3, [x7, #2112]
  4092f8:	b	408fe4 <ferror@plt+0x6644>
  4092fc:	add	x3, x3, #0x2
  409300:	mov	w0, #0xc                   	// #12
  409304:	str	x3, [x7, #2112]
  409308:	b	408fe4 <ferror@plt+0x6644>
  40930c:	add	x3, x3, #0x2
  409310:	mov	w0, #0x4                   	// #4
  409314:	str	x3, [x7, #2112]
  409318:	b	408fe4 <ferror@plt+0x6644>
  40931c:	add	x3, x3, #0x2
  409320:	mov	w0, #0xe                   	// #14
  409324:	str	x3, [x7, #2112]
  409328:	b	408fe4 <ferror@plt+0x6644>
  40932c:	nop
  409330:	stp	x29, x30, [sp, #-48]!
  409334:	mov	x29, sp
  409338:	stp	x19, x20, [sp, #16]
  40933c:	mov	x20, x1
  409340:	bl	409cb8 <ferror@plt+0x7318>
  409344:	cbnz	w0, 409388 <ferror@plt+0x69e8>
  409348:	mov	x0, x20
  40934c:	bl	409d98 <ferror@plt+0x73f8>
  409350:	cbnz	w0, 409388 <ferror@plt+0x69e8>
  409354:	nop
  409358:	add	x0, sp, #0x2c
  40935c:	bl	408ec0 <ferror@plt+0x6520>
  409360:	mov	w19, w0
  409364:	sub	w0, w0, #0xb
  409368:	cmp	w0, #0x3
  40936c:	b.ls	409394 <ferror@plt+0x69f4>  // b.plast
  409370:	cbz	w19, 409438 <ferror@plt+0x6a98>
  409374:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  409378:	add	x2, x1, #0x840
  40937c:	mov	w0, #0x0                   	// #0
  409380:	ldr	x2, [x2, #8]
  409384:	str	x2, [x1, #2112]
  409388:	ldp	x19, x20, [sp, #16]
  40938c:	ldp	x29, x30, [sp], #48
  409390:	ret
  409394:	add	x0, sp, #0x2c
  409398:	bl	408ec0 <ferror@plt+0x6520>
  40939c:	cbz	w0, 409438 <ferror@plt+0x6a98>
  4093a0:	add	x1, sp, #0x2c
  4093a4:	bl	409cb8 <ferror@plt+0x7318>
  4093a8:	cbnz	w0, 409388 <ferror@plt+0x69e8>
  4093ac:	add	x0, sp, #0x2c
  4093b0:	bl	409d98 <ferror@plt+0x73f8>
  4093b4:	cbnz	w0, 409388 <ferror@plt+0x69e8>
  4093b8:	cmp	w19, #0xd
  4093bc:	b.eq	409420 <ferror@plt+0x6a80>  // b.none
  4093c0:	cmp	w19, #0xe
  4093c4:	b.eq	409408 <ferror@plt+0x6a68>  // b.none
  4093c8:	cmp	w19, #0xb
  4093cc:	b.ne	4093e8 <ferror@plt+0x6a48>  // b.any
  4093d0:	ldr	w1, [x20]
  4093d4:	ldr	w0, [sp, #44]
  4093d8:	cmp	w1, w0
  4093dc:	cset	w0, gt
  4093e0:	str	w0, [x20]
  4093e4:	b	409358 <ferror@plt+0x69b8>
  4093e8:	cmp	w19, #0xc
  4093ec:	b.ne	409448 <ferror@plt+0x6aa8>  // b.any
  4093f0:	ldr	w1, [x20]
  4093f4:	ldr	w0, [sp, #44]
  4093f8:	cmp	w1, w0
  4093fc:	cset	w0, ge  // ge = tcont
  409400:	str	w0, [x20]
  409404:	b	409358 <ferror@plt+0x69b8>
  409408:	ldr	w1, [x20]
  40940c:	ldr	w0, [sp, #44]
  409410:	cmp	w1, w0
  409414:	cset	w0, le
  409418:	str	w0, [x20]
  40941c:	b	409358 <ferror@plt+0x69b8>
  409420:	ldr	w1, [x20]
  409424:	ldr	w0, [sp, #44]
  409428:	cmp	w1, w0
  40942c:	cset	w0, lt  // lt = tstop
  409430:	str	w0, [x20]
  409434:	b	409358 <ferror@plt+0x69b8>
  409438:	mov	w0, #0x6                   	// #6
  40943c:	ldp	x19, x20, [sp, #16]
  409440:	ldp	x29, x30, [sp], #48
  409444:	ret
  409448:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40944c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  409450:	add	x2, x2, #0xe30
  409454:	mov	w1, #0x0                   	// #0
  409458:	ldr	w0, [x0, #1628]
  40945c:	bl	4033d0 <ferror@plt+0xa30>
  409460:	bl	4026d0 <abort@plt>
  409464:	nop
  409468:	stp	x29, x30, [sp, #-64]!
  40946c:	mov	x29, sp
  409470:	stp	x19, x20, [sp, #16]
  409474:	mov	x20, x0
  409478:	stp	x21, x22, [sp, #32]
  40947c:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x1878>
  409480:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  409484:	add	x22, x22, #0xe68
  409488:	add	x21, x21, #0x65c
  40948c:	b	4094b0 <ferror@plt+0x6b10>
  409490:	cmp	w19, #0x9
  409494:	cset	w1, ne  // ne = any
  409498:	ldr	w2, [x20]
  40949c:	ldr	w0, [sp, #60]
  4094a0:	cmp	w2, w0
  4094a4:	cset	w0, eq  // eq = none
  4094a8:	eor	w1, w1, w0
  4094ac:	str	w1, [x20]
  4094b0:	add	x0, sp, #0x3c
  4094b4:	bl	408ec0 <ferror@plt+0x6520>
  4094b8:	mov	w19, w0
  4094bc:	add	x0, sp, #0x3c
  4094c0:	sub	w1, w19, #0x8
  4094c4:	cmp	w1, #0x2
  4094c8:	b.hi	409500 <ferror@plt+0x6b60>  // b.pmore
  4094cc:	bl	408ec0 <ferror@plt+0x6520>
  4094d0:	add	x1, sp, #0x3c
  4094d4:	cbz	w0, 409528 <ferror@plt+0x6b88>
  4094d8:	bl	409330 <ferror@plt+0x6990>
  4094dc:	cbnz	w0, 409518 <ferror@plt+0x6b78>
  4094e0:	cmp	w19, #0x8
  4094e4:	b.ne	409490 <ferror@plt+0x6af0>  // b.any
  4094e8:	ldr	w0, [x21]
  4094ec:	mov	w1, #0x0                   	// #0
  4094f0:	mov	x2, x22
  4094f4:	bl	4033d0 <ferror@plt+0xa30>
  4094f8:	mov	w1, #0x0                   	// #0
  4094fc:	b	409498 <ferror@plt+0x6af8>
  409500:	cbz	w19, 409528 <ferror@plt+0x6b88>
  409504:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  409508:	add	x2, x1, #0x840
  40950c:	mov	w0, #0x0                   	// #0
  409510:	ldr	x2, [x2, #8]
  409514:	str	x2, [x1, #2112]
  409518:	ldp	x19, x20, [sp, #16]
  40951c:	ldp	x21, x22, [sp, #32]
  409520:	ldp	x29, x30, [sp], #64
  409524:	ret
  409528:	mov	w0, #0x6                   	// #6
  40952c:	ldp	x19, x20, [sp, #16]
  409530:	ldp	x21, x22, [sp, #32]
  409534:	ldp	x29, x30, [sp], #64
  409538:	ret
  40953c:	nop
  409540:	stp	x29, x30, [sp, #-48]!
  409544:	mov	x29, sp
  409548:	str	x19, [sp, #16]
  40954c:	mov	x19, x0
  409550:	b	409570 <ferror@plt+0x6bd0>
  409554:	bl	409468 <ferror@plt+0x6ac8>
  409558:	mov	w1, w0
  40955c:	cbnz	w0, 4095a4 <ferror@plt+0x6c04>
  409560:	ldr	w1, [x19]
  409564:	ldr	w0, [sp, #44]
  409568:	and	w1, w1, w0
  40956c:	str	w1, [x19]
  409570:	add	x0, sp, #0x2c
  409574:	bl	408ec0 <ferror@plt+0x6520>
  409578:	mov	w1, w0
  40957c:	add	x0, sp, #0x2c
  409580:	cmp	w1, #0x15
  409584:	b.ne	4095c8 <ferror@plt+0x6c28>  // b.any
  409588:	bl	408ec0 <ferror@plt+0x6520>
  40958c:	add	x1, sp, #0x2c
  409590:	cbz	w0, 4095b4 <ferror@plt+0x6c14>
  409594:	bl	409330 <ferror@plt+0x6990>
  409598:	mov	w1, w0
  40959c:	add	x0, sp, #0x2c
  4095a0:	cbz	w1, 409554 <ferror@plt+0x6bb4>
  4095a4:	mov	w0, w1
  4095a8:	ldr	x19, [sp, #16]
  4095ac:	ldp	x29, x30, [sp], #48
  4095b0:	ret
  4095b4:	mov	w1, #0x6                   	// #6
  4095b8:	mov	w0, w1
  4095bc:	ldr	x19, [sp, #16]
  4095c0:	ldp	x29, x30, [sp], #48
  4095c4:	ret
  4095c8:	cbz	w1, 4095b4 <ferror@plt+0x6c14>
  4095cc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4095d0:	add	x2, x0, #0x840
  4095d4:	mov	w1, #0x0                   	// #0
  4095d8:	ldr	x19, [sp, #16]
  4095dc:	ldr	x2, [x2, #8]
  4095e0:	str	x2, [x0, #2112]
  4095e4:	mov	w0, w1
  4095e8:	ldp	x29, x30, [sp], #48
  4095ec:	ret
  4095f0:	stp	x29, x30, [sp, #-48]!
  4095f4:	mov	x29, sp
  4095f8:	str	x19, [sp, #16]
  4095fc:	mov	x19, x1
  409600:	bl	409330 <ferror@plt+0x6990>
  409604:	mov	w2, w0
  409608:	cbnz	w0, 40968c <ferror@plt+0x6cec>
  40960c:	mov	x0, x19
  409610:	bl	409468 <ferror@plt+0x6ac8>
  409614:	mov	w2, w0
  409618:	cbnz	w0, 40968c <ferror@plt+0x6cec>
  40961c:	mov	x0, x19
  409620:	bl	409540 <ferror@plt+0x6ba0>
  409624:	cbz	w0, 409658 <ferror@plt+0x6cb8>
  409628:	b	4096d8 <ferror@plt+0x6d38>
  40962c:	bl	409468 <ferror@plt+0x6ac8>
  409630:	mov	w2, w0
  409634:	add	x0, sp, #0x2c
  409638:	cbnz	w2, 40968c <ferror@plt+0x6cec>
  40963c:	bl	409540 <ferror@plt+0x6ba0>
  409640:	mov	w2, w0
  409644:	cbnz	w0, 40968c <ferror@plt+0x6cec>
  409648:	ldr	w0, [x19]
  40964c:	ldr	w1, [sp, #44]
  409650:	eor	w0, w0, w1
  409654:	str	w0, [x19]
  409658:	add	x0, sp, #0x2c
  40965c:	bl	408ec0 <ferror@plt+0x6520>
  409660:	mov	w2, w0
  409664:	add	x0, sp, #0x2c
  409668:	cmp	w2, #0x17
  40966c:	b.ne	40969c <ferror@plt+0x6cfc>  // b.any
  409670:	bl	408ec0 <ferror@plt+0x6520>
  409674:	add	x1, sp, #0x2c
  409678:	cbz	w0, 4096a0 <ferror@plt+0x6d00>
  40967c:	bl	409330 <ferror@plt+0x6990>
  409680:	mov	w2, w0
  409684:	add	x0, sp, #0x2c
  409688:	cbz	w2, 40962c <ferror@plt+0x6c8c>
  40968c:	mov	w0, w2
  409690:	ldr	x19, [sp, #16]
  409694:	ldp	x29, x30, [sp], #48
  409698:	ret
  40969c:	cbnz	w2, 4096b4 <ferror@plt+0x6d14>
  4096a0:	mov	w2, #0x6                   	// #6
  4096a4:	mov	w0, w2
  4096a8:	ldr	x19, [sp, #16]
  4096ac:	ldp	x29, x30, [sp], #48
  4096b0:	ret
  4096b4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4096b8:	add	x1, x0, #0x840
  4096bc:	mov	w2, #0x0                   	// #0
  4096c0:	ldr	x19, [sp, #16]
  4096c4:	ldr	x1, [x1, #8]
  4096c8:	str	x1, [x0, #2112]
  4096cc:	mov	w0, w2
  4096d0:	ldp	x29, x30, [sp], #48
  4096d4:	ret
  4096d8:	mov	w2, w0
  4096dc:	b	40968c <ferror@plt+0x6cec>
  4096e0:	stp	x29, x30, [sp, #-48]!
  4096e4:	mov	x29, sp
  4096e8:	str	x19, [sp, #16]
  4096ec:	mov	x19, x0
  4096f0:	b	409718 <ferror@plt+0x6d78>
  4096f4:	bl	408ec0 <ferror@plt+0x6520>
  4096f8:	add	x1, sp, #0x2c
  4096fc:	cbz	w0, 409754 <ferror@plt+0x6db4>
  409700:	bl	4095f0 <ferror@plt+0x6c50>
  409704:	cbnz	w0, 409748 <ferror@plt+0x6da8>
  409708:	ldr	w1, [x19]
  40970c:	ldr	w0, [sp, #44]
  409710:	orr	w1, w1, w0
  409714:	str	w1, [x19]
  409718:	add	x0, sp, #0x2c
  40971c:	bl	408ec0 <ferror@plt+0x6520>
  409720:	mov	w1, w0
  409724:	add	x0, sp, #0x2c
  409728:	cmp	w1, #0x16
  40972c:	b.eq	4096f4 <ferror@plt+0x6d54>  // b.none
  409730:	cbz	w1, 409754 <ferror@plt+0x6db4>
  409734:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  409738:	add	x2, x1, #0x840
  40973c:	mov	w0, #0x0                   	// #0
  409740:	ldr	x2, [x2, #8]
  409744:	str	x2, [x1, #2112]
  409748:	ldr	x19, [sp, #16]
  40974c:	ldp	x29, x30, [sp], #48
  409750:	ret
  409754:	mov	w0, #0x6                   	// #6
  409758:	ldr	x19, [sp, #16]
  40975c:	ldp	x29, x30, [sp], #48
  409760:	ret
  409764:	nop
  409768:	stp	x29, x30, [sp, #-48]!
  40976c:	mov	x29, sp
  409770:	str	x19, [sp, #16]
  409774:	mov	x19, x0
  409778:	add	x0, sp, #0x2c
  40977c:	bl	408ec0 <ferror@plt+0x6520>
  409780:	mov	w1, w0
  409784:	add	x0, sp, #0x2c
  409788:	cmp	w1, #0x12
  40978c:	b.ne	4097e8 <ferror@plt+0x6e48>  // b.any
  409790:	bl	408ec0 <ferror@plt+0x6520>
  409794:	add	x1, sp, #0x2c
  409798:	cbz	w0, 409830 <ferror@plt+0x6e90>
  40979c:	bl	4095f0 <ferror@plt+0x6c50>
  4097a0:	mov	w1, w0
  4097a4:	add	x0, sp, #0x2c
  4097a8:	cbnz	w1, 409810 <ferror@plt+0x6e70>
  4097ac:	bl	4096e0 <ferror@plt+0x6d40>
  4097b0:	mov	w1, w0
  4097b4:	cbnz	w0, 409810 <ferror@plt+0x6e70>
  4097b8:	ldr	w0, [x19]
  4097bc:	cbz	w0, 4097cc <ferror@plt+0x6e2c>
  4097c0:	ldr	w0, [sp, #44]
  4097c4:	cmp	w0, #0x0
  4097c8:	cset	w0, ne  // ne = any
  4097cc:	str	w0, [x19]
  4097d0:	add	x0, sp, #0x2c
  4097d4:	bl	408ec0 <ferror@plt+0x6520>
  4097d8:	mov	w1, w0
  4097dc:	cmp	w1, #0x12
  4097e0:	add	x0, sp, #0x2c
  4097e4:	b.eq	409790 <ferror@plt+0x6df0>  // b.none
  4097e8:	cbz	w1, 409830 <ferror@plt+0x6e90>
  4097ec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4097f0:	add	x2, x0, #0x840
  4097f4:	mov	w1, #0x0                   	// #0
  4097f8:	ldr	x19, [sp, #16]
  4097fc:	ldr	x2, [x2, #8]
  409800:	str	x2, [x0, #2112]
  409804:	mov	w0, w1
  409808:	ldp	x29, x30, [sp], #48
  40980c:	ret
  409810:	ldr	w0, [x19]
  409814:	cmp	w0, #0x0
  409818:	ccmp	w1, #0x3, #0x2, eq  // eq = none
  40981c:	b.ls	409778 <ferror@plt+0x6dd8>  // b.plast
  409820:	mov	w0, w1
  409824:	ldr	x19, [sp, #16]
  409828:	ldp	x29, x30, [sp], #48
  40982c:	ret
  409830:	mov	w1, #0x6                   	// #6
  409834:	mov	w0, w1
  409838:	ldr	x19, [sp, #16]
  40983c:	ldp	x29, x30, [sp], #48
  409840:	ret
  409844:	nop
  409848:	stp	x29, x30, [sp, #-48]!
  40984c:	mov	x29, sp
  409850:	stp	x19, x20, [sp, #16]
  409854:	mov	x19, x1
  409858:	bl	4095f0 <ferror@plt+0x6c50>
  40985c:	mov	w2, w0
  409860:	cbnz	w0, 409920 <ferror@plt+0x6f80>
  409864:	mov	x0, x19
  409868:	bl	4096e0 <ferror@plt+0x6d40>
  40986c:	mov	w2, w0
  409870:	cbnz	w0, 409920 <ferror@plt+0x6f80>
  409874:	mov	x0, x19
  409878:	bl	409768 <ferror@plt+0x6dc8>
  40987c:	cbnz	w0, 40995c <ferror@plt+0x6fbc>
  409880:	mov	w20, #0x1                   	// #1
  409884:	nop
  409888:	add	x0, sp, #0x2c
  40988c:	bl	408ec0 <ferror@plt+0x6520>
  409890:	mov	w2, w0
  409894:	add	x0, sp, #0x2c
  409898:	cmp	w2, #0x13
  40989c:	b.ne	409908 <ferror@plt+0x6f68>  // b.any
  4098a0:	bl	408ec0 <ferror@plt+0x6520>
  4098a4:	add	x1, sp, #0x2c
  4098a8:	cbz	w0, 409948 <ferror@plt+0x6fa8>
  4098ac:	bl	4095f0 <ferror@plt+0x6c50>
  4098b0:	mov	w2, w0
  4098b4:	add	x0, sp, #0x2c
  4098b8:	cbnz	w2, 409930 <ferror@plt+0x6f90>
  4098bc:	bl	4096e0 <ferror@plt+0x6d40>
  4098c0:	mov	w2, w0
  4098c4:	add	x0, sp, #0x2c
  4098c8:	cbnz	w2, 409930 <ferror@plt+0x6f90>
  4098cc:	bl	409768 <ferror@plt+0x6dc8>
  4098d0:	mov	w2, w0
  4098d4:	cbnz	w0, 409930 <ferror@plt+0x6f90>
  4098d8:	ldr	w0, [x19]
  4098dc:	ldr	w1, [sp, #44]
  4098e0:	orr	w0, w0, w1
  4098e4:	cmp	w0, #0x0
  4098e8:	cset	w0, ne  // ne = any
  4098ec:	str	w0, [x19]
  4098f0:	add	x0, sp, #0x2c
  4098f4:	bl	408ec0 <ferror@plt+0x6520>
  4098f8:	mov	w2, w0
  4098fc:	cmp	w2, #0x13
  409900:	add	x0, sp, #0x2c
  409904:	b.eq	4098a0 <ferror@plt+0x6f00>  // b.none
  409908:	cbz	w2, 409948 <ferror@plt+0x6fa8>
  40990c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409910:	add	x1, x0, #0x840
  409914:	mov	w2, #0x0                   	// #0
  409918:	ldr	x1, [x1, #8]
  40991c:	str	x1, [x0, #2112]
  409920:	mov	w0, w2
  409924:	ldp	x19, x20, [sp, #16]
  409928:	ldp	x29, x30, [sp], #48
  40992c:	ret
  409930:	ldr	w0, [x19]
  409934:	cmp	w0, #0x0
  409938:	ccmp	w2, #0x3, #0x2, ne  // ne = any
  40993c:	b.hi	409920 <ferror@plt+0x6f80>  // b.pmore
  409940:	str	w20, [x19]
  409944:	b	409888 <ferror@plt+0x6ee8>
  409948:	mov	w2, #0x6                   	// #6
  40994c:	mov	w0, w2
  409950:	ldp	x19, x20, [sp, #16]
  409954:	ldp	x29, x30, [sp], #48
  409958:	ret
  40995c:	mov	w2, w0
  409960:	b	409920 <ferror@plt+0x6f80>
  409964:	nop
  409968:	stp	x29, x30, [sp, #-48]!
  40996c:	cmp	w0, #0x14
  409970:	mov	x29, sp
  409974:	stp	x19, x20, [sp, #16]
  409978:	mov	w19, w0
  40997c:	ccmp	w19, #0x11, #0x4, ne  // ne = any
  409980:	sub	w0, w0, #0x2
  409984:	mov	x20, x1
  409988:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  40998c:	b.hi	4099d8 <ferror@plt+0x7038>  // b.pmore
  409990:	mov	x0, x1
  409994:	bl	408ec0 <ferror@plt+0x6520>
  409998:	mov	w2, #0x6                   	// #6
  40999c:	cbz	w0, 4099c8 <ferror@plt+0x7028>
  4099a0:	mov	x1, x20
  4099a4:	bl	409968 <ferror@plt+0x6fc8>
  4099a8:	mov	w2, w0
  4099ac:	cbnz	w0, 4099c8 <ferror@plt+0x7028>
  4099b0:	cmp	w19, #0x3
  4099b4:	b.eq	409a0c <ferror@plt+0x706c>  // b.none
  4099b8:	cmp	w19, #0x14
  4099bc:	b.eq	409a54 <ferror@plt+0x70b4>  // b.none
  4099c0:	cmp	w19, #0x11
  4099c4:	b.eq	409a64 <ferror@plt+0x70c4>  // b.none
  4099c8:	mov	w0, w2
  4099cc:	ldp	x19, x20, [sp, #16]
  4099d0:	ldp	x29, x30, [sp], #48
  4099d4:	ret
  4099d8:	cmp	w19, #0x18
  4099dc:	b.eq	409a1c <ferror@plt+0x707c>  // b.none
  4099e0:	cmp	w19, #0x1a
  4099e4:	mov	w2, #0x0                   	// #0
  4099e8:	b.eq	4099c8 <ferror@plt+0x7028>  // b.none
  4099ec:	cmp	w19, #0x1
  4099f0:	mov	w0, #0x8                   	// #8
  4099f4:	mov	w2, #0x4                   	// #4
  4099f8:	csel	w2, w2, w0, ne  // ne = any
  4099fc:	mov	w0, w2
  409a00:	ldp	x19, x20, [sp, #16]
  409a04:	ldp	x29, x30, [sp], #48
  409a08:	ret
  409a0c:	ldr	w0, [x20]
  409a10:	neg	w0, w0
  409a14:	str	w0, [x20]
  409a18:	b	4099c8 <ferror@plt+0x7028>
  409a1c:	mov	x0, x1
  409a20:	bl	408ec0 <ferror@plt+0x6520>
  409a24:	cbz	w0, 409a78 <ferror@plt+0x70d8>
  409a28:	mov	x1, x20
  409a2c:	bl	409848 <ferror@plt+0x6ea8>
  409a30:	mov	w2, w0
  409a34:	cbnz	w0, 4099c8 <ferror@plt+0x7028>
  409a38:	add	x0, sp, #0x2c
  409a3c:	bl	408ec0 <ferror@plt+0x6520>
  409a40:	cbz	w0, 409a78 <ferror@plt+0x70d8>
  409a44:	cmp	w0, #0x19
  409a48:	mov	w2, #0x5                   	// #5
  409a4c:	csel	w2, wzr, w2, eq  // eq = none
  409a50:	b	4099c8 <ferror@plt+0x7028>
  409a54:	ldr	w0, [x20]
  409a58:	mvn	w0, w0
  409a5c:	str	w0, [x20]
  409a60:	b	4099c8 <ferror@plt+0x7028>
  409a64:	ldr	w0, [x20]
  409a68:	cmp	w0, #0x0
  409a6c:	cset	w0, eq  // eq = none
  409a70:	str	w0, [x20]
  409a74:	b	4099c8 <ferror@plt+0x7028>
  409a78:	mov	w2, #0x6                   	// #6
  409a7c:	b	4099c8 <ferror@plt+0x7028>
  409a80:	stp	x29, x30, [sp, #-48]!
  409a84:	mov	x29, sp
  409a88:	stp	x19, x20, [sp, #16]
  409a8c:	mov	x19, x1
  409a90:	bl	409968 <ferror@plt+0x6fc8>
  409a94:	mov	w20, w0
  409a98:	cbnz	w0, 409b2c <ferror@plt+0x718c>
  409a9c:	add	x0, sp, #0x2c
  409aa0:	bl	408ec0 <ferror@plt+0x6520>
  409aa4:	cmp	w0, #0x4
  409aa8:	b.ne	409b18 <ferror@plt+0x7178>  // b.any
  409aac:	nop
  409ab0:	add	x0, sp, #0x2c
  409ab4:	bl	408ec0 <ferror@plt+0x6520>
  409ab8:	cbz	w0, 409b48 <ferror@plt+0x71a8>
  409abc:	add	x1, sp, #0x2c
  409ac0:	bl	409a80 <ferror@plt+0x70e0>
  409ac4:	cbnz	w0, 409b5c <ferror@plt+0x71bc>
  409ac8:	ldr	w3, [sp, #44]
  409acc:	tbnz	w3, #31, 409b70 <ferror@plt+0x71d0>
  409ad0:	ldr	w4, [x19]
  409ad4:	orr	w0, w3, w4
  409ad8:	cbz	w0, 409b84 <ferror@plt+0x71e4>
  409adc:	sub	w2, w3, #0x1
  409ae0:	str	w2, [sp, #44]
  409ae4:	cbz	w3, 409b3c <ferror@plt+0x719c>
  409ae8:	mov	w3, #0x1                   	// #1
  409aec:	nop
  409af0:	sub	w2, w2, #0x1
  409af4:	mul	w3, w3, w4
  409af8:	cmn	w2, #0x1
  409afc:	b.ne	409af0 <ferror@plt+0x7150>  // b.any
  409b00:	str	w3, [x19]
  409b04:	str	w2, [sp, #44]
  409b08:	add	x0, sp, #0x2c
  409b0c:	bl	408ec0 <ferror@plt+0x6520>
  409b10:	cmp	w0, #0x4
  409b14:	b.eq	409ab0 <ferror@plt+0x7110>  // b.none
  409b18:	cbz	w0, 409b48 <ferror@plt+0x71a8>
  409b1c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409b20:	add	x1, x0, #0x840
  409b24:	ldr	x1, [x1, #8]
  409b28:	str	x1, [x0, #2112]
  409b2c:	mov	w0, w20
  409b30:	ldp	x19, x20, [sp, #16]
  409b34:	ldp	x29, x30, [sp], #48
  409b38:	ret
  409b3c:	mov	w3, #0x1                   	// #1
  409b40:	str	w3, [x19]
  409b44:	b	409b08 <ferror@plt+0x7168>
  409b48:	mov	w20, #0x6                   	// #6
  409b4c:	mov	w0, w20
  409b50:	ldp	x19, x20, [sp, #16]
  409b54:	ldp	x29, x30, [sp], #48
  409b58:	ret
  409b5c:	mov	w20, w0
  409b60:	mov	w0, w20
  409b64:	ldp	x19, x20, [sp, #16]
  409b68:	ldp	x29, x30, [sp], #48
  409b6c:	ret
  409b70:	mov	w20, #0x3                   	// #3
  409b74:	mov	w0, w20
  409b78:	ldp	x19, x20, [sp, #16]
  409b7c:	ldp	x29, x30, [sp], #48
  409b80:	ret
  409b84:	mov	w20, #0x1                   	// #1
  409b88:	b	409b2c <ferror@plt+0x718c>
  409b8c:	nop
  409b90:	stp	x29, x30, [sp, #-48]!
  409b94:	mov	x29, sp
  409b98:	stp	x19, x20, [sp, #16]
  409b9c:	mov	x20, x0
  409ba0:	add	x0, sp, #0x2c
  409ba4:	bl	408ec0 <ferror@plt+0x6520>
  409ba8:	sub	w1, w0, #0x5
  409bac:	mov	w19, w0
  409bb0:	cmp	w1, #0x2
  409bb4:	b.ls	409bdc <ferror@plt+0x723c>  // b.plast
  409bb8:	cbz	w0, 409c80 <ferror@plt+0x72e0>
  409bbc:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  409bc0:	add	x2, x1, #0x840
  409bc4:	mov	w0, #0x0                   	// #0
  409bc8:	ldr	x2, [x2, #8]
  409bcc:	str	x2, [x1, #2112]
  409bd0:	ldp	x19, x20, [sp, #16]
  409bd4:	ldp	x29, x30, [sp], #48
  409bd8:	ret
  409bdc:	add	x0, sp, #0x2c
  409be0:	bl	408ec0 <ferror@plt+0x6520>
  409be4:	cbz	w0, 409c80 <ferror@plt+0x72e0>
  409be8:	add	x1, sp, #0x2c
  409bec:	bl	409a80 <ferror@plt+0x70e0>
  409bf0:	cbnz	w0, 409bd0 <ferror@plt+0x7230>
  409bf4:	cmp	w19, #0x6
  409bf8:	b.eq	409c4c <ferror@plt+0x72ac>  // b.none
  409bfc:	cmp	w19, #0x7
  409c00:	b.ne	409c28 <ferror@plt+0x7288>  // b.any
  409c04:	ldr	w0, [sp, #44]
  409c08:	cbz	w0, 409ca4 <ferror@plt+0x7304>
  409c0c:	cmn	w0, #0x1
  409c10:	b.eq	409c9c <ferror@plt+0x72fc>  // b.none
  409c14:	ldr	w2, [x20]
  409c18:	sdiv	w1, w2, w0
  409c1c:	msub	w0, w1, w0, w2
  409c20:	str	w0, [x20]
  409c24:	b	409ba0 <ferror@plt+0x7200>
  409c28:	cmp	w19, #0x5
  409c2c:	b.eq	409c6c <ferror@plt+0x72cc>  // b.none
  409c30:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409c34:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  409c38:	add	x2, x2, #0xea0
  409c3c:	mov	w1, #0x0                   	// #0
  409c40:	ldr	w0, [x0, #1628]
  409c44:	bl	4033d0 <ferror@plt+0xa30>
  409c48:	bl	4026d0 <abort@plt>
  409c4c:	ldr	w1, [sp, #44]
  409c50:	cbz	w1, 409cac <ferror@plt+0x730c>
  409c54:	ldr	w0, [x20]
  409c58:	cmn	w1, #0x1
  409c5c:	b.eq	409c90 <ferror@plt+0x72f0>  // b.none
  409c60:	sdiv	w0, w0, w1
  409c64:	str	w0, [x20]
  409c68:	b	409ba0 <ferror@plt+0x7200>
  409c6c:	ldr	w0, [x20]
  409c70:	ldr	w1, [sp, #44]
  409c74:	mul	w0, w0, w1
  409c78:	str	w0, [x20]
  409c7c:	b	409ba0 <ferror@plt+0x7200>
  409c80:	mov	w0, #0x6                   	// #6
  409c84:	ldp	x19, x20, [sp, #16]
  409c88:	ldp	x29, x30, [sp], #48
  409c8c:	ret
  409c90:	neg	w0, w0
  409c94:	str	w0, [x20]
  409c98:	b	409ba0 <ferror@plt+0x7200>
  409c9c:	str	wzr, [x20]
  409ca0:	b	409ba0 <ferror@plt+0x7200>
  409ca4:	mov	w0, #0x2                   	// #2
  409ca8:	b	409bd0 <ferror@plt+0x7230>
  409cac:	mov	w0, #0x1                   	// #1
  409cb0:	b	409bd0 <ferror@plt+0x7230>
  409cb4:	nop
  409cb8:	stp	x29, x30, [sp, #-48]!
  409cbc:	mov	x29, sp
  409cc0:	stp	x19, x20, [sp, #16]
  409cc4:	mov	x19, x1
  409cc8:	bl	409a80 <ferror@plt+0x70e0>
  409ccc:	mov	w2, w0
  409cd0:	cbnz	w0, 409d44 <ferror@plt+0x73a4>
  409cd4:	mov	x0, x19
  409cd8:	bl	409b90 <ferror@plt+0x71f0>
  409cdc:	cbz	w0, 409d0c <ferror@plt+0x736c>
  409ce0:	b	409d90 <ferror@plt+0x73f0>
  409ce4:	bl	409b90 <ferror@plt+0x71f0>
  409ce8:	mov	w2, w0
  409cec:	cmp	w20, #0x2
  409cf0:	cbnz	w0, 409d44 <ferror@plt+0x73a4>
  409cf4:	ldr	w0, [x19]
  409cf8:	ldr	w1, [sp, #44]
  409cfc:	add	w2, w0, w1
  409d00:	sub	w0, w0, w1
  409d04:	csel	w0, w0, w2, ne  // ne = any
  409d08:	str	w0, [x19]
  409d0c:	add	x0, sp, #0x2c
  409d10:	bl	408ec0 <ferror@plt+0x6520>
  409d14:	mov	w20, w0
  409d18:	add	x0, sp, #0x2c
  409d1c:	sub	w1, w20, #0x2
  409d20:	cmp	w1, #0x1
  409d24:	b.hi	409d68 <ferror@plt+0x73c8>  // b.pmore
  409d28:	bl	408ec0 <ferror@plt+0x6520>
  409d2c:	add	x1, sp, #0x2c
  409d30:	cbz	w0, 409d54 <ferror@plt+0x73b4>
  409d34:	bl	409a80 <ferror@plt+0x70e0>
  409d38:	mov	w2, w0
  409d3c:	add	x0, sp, #0x2c
  409d40:	cbz	w2, 409ce4 <ferror@plt+0x7344>
  409d44:	mov	w0, w2
  409d48:	ldp	x19, x20, [sp, #16]
  409d4c:	ldp	x29, x30, [sp], #48
  409d50:	ret
  409d54:	mov	w2, #0x6                   	// #6
  409d58:	mov	w0, w2
  409d5c:	ldp	x19, x20, [sp, #16]
  409d60:	ldp	x29, x30, [sp], #48
  409d64:	ret
  409d68:	cbz	w20, 409d54 <ferror@plt+0x73b4>
  409d6c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409d70:	add	x1, x0, #0x840
  409d74:	mov	w2, #0x0                   	// #0
  409d78:	ldp	x19, x20, [sp, #16]
  409d7c:	ldr	x1, [x1, #8]
  409d80:	str	x1, [x0, #2112]
  409d84:	mov	w0, w2
  409d88:	ldp	x29, x30, [sp], #48
  409d8c:	ret
  409d90:	mov	w2, w0
  409d94:	b	409d44 <ferror@plt+0x73a4>
  409d98:	stp	x29, x30, [sp, #-48]!
  409d9c:	mov	x29, sp
  409da0:	stp	x19, x20, [sp, #16]
  409da4:	mov	x20, x0
  409da8:	add	x0, sp, #0x2c
  409dac:	bl	408ec0 <ferror@plt+0x6520>
  409db0:	mov	w19, w0
  409db4:	sub	w1, w19, #0xf
  409db8:	add	x0, sp, #0x2c
  409dbc:	cmp	w1, #0x1
  409dc0:	b.hi	409e0c <ferror@plt+0x746c>  // b.pmore
  409dc4:	bl	408ec0 <ferror@plt+0x6520>
  409dc8:	add	x1, sp, #0x2c
  409dcc:	cbz	w0, 409e54 <ferror@plt+0x74b4>
  409dd0:	bl	409cb8 <ferror@plt+0x7318>
  409dd4:	cbnz	w0, 409e24 <ferror@plt+0x7484>
  409dd8:	ldr	w1, [sp, #44]
  409ddc:	cmp	w19, #0xf
  409de0:	b.ne	409e30 <ferror@plt+0x7490>  // b.any
  409de4:	ldr	w0, [x20]
  409de8:	lsl	w0, w0, w1
  409dec:	str	w0, [x20]
  409df0:	add	x0, sp, #0x2c
  409df4:	bl	408ec0 <ferror@plt+0x6520>
  409df8:	mov	w19, w0
  409dfc:	sub	w1, w19, #0xf
  409e00:	add	x0, sp, #0x2c
  409e04:	cmp	w1, #0x1
  409e08:	b.ls	409dc4 <ferror@plt+0x7424>  // b.plast
  409e0c:	cbz	w19, 409e54 <ferror@plt+0x74b4>
  409e10:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  409e14:	add	x2, x1, #0x840
  409e18:	mov	w0, #0x0                   	// #0
  409e1c:	ldr	x2, [x2, #8]
  409e20:	str	x2, [x1, #2112]
  409e24:	ldp	x19, x20, [sp, #16]
  409e28:	ldp	x29, x30, [sp], #48
  409e2c:	ret
  409e30:	ldr	w2, [x20]
  409e34:	and	w0, w1, #0x1f
  409e38:	mvn	w1, w2
  409e3c:	cmp	w2, #0x0
  409e40:	lsr	w2, w2, w0
  409e44:	lsr	w1, w1, w0
  409e48:	csinv	w1, w2, w1, ge  // ge = tcont
  409e4c:	str	w1, [x20]
  409e50:	b	409da8 <ferror@plt+0x7408>
  409e54:	mov	w0, #0x6                   	// #6
  409e58:	ldp	x19, x20, [sp, #16]
  409e5c:	ldp	x29, x30, [sp], #48
  409e60:	ret
  409e64:	nop
  409e68:	stp	x29, x30, [sp, #-48]!
  409e6c:	mov	x29, sp
  409e70:	stp	x21, x22, [sp, #32]
  409e74:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  409e78:	add	x2, x22, #0x840
  409e7c:	stp	x19, x20, [sp, #16]
  409e80:	mov	x21, x0
  409e84:	mov	x20, x1
  409e88:	mov	x0, x1
  409e8c:	str	x21, [x22, #2112]
  409e90:	str	xzr, [x2, #8]
  409e94:	bl	408ec0 <ferror@plt+0x6520>
  409e98:	mov	x1, x20
  409e9c:	bl	409848 <ferror@plt+0x6ea8>
  409ea0:	cbnz	w0, 409ec4 <ferror@plt+0x7524>
  409ea4:	ldr	x1, [x22, #2112]
  409ea8:	mov	w0, #0x0                   	// #0
  409eac:	ldrb	w1, [x1]
  409eb0:	cbnz	w1, 409fd8 <ferror@plt+0x7638>
  409eb4:	ldp	x19, x20, [sp, #16]
  409eb8:	ldp	x21, x22, [sp, #32]
  409ebc:	ldp	x29, x30, [sp], #48
  409ec0:	ret
  409ec4:	mov	w19, w0
  409ec8:	cmp	w0, #0x5
  409ecc:	b.eq	40a03c <ferror@plt+0x769c>  // b.none
  409ed0:	b.hi	409f60 <ferror@plt+0x75c0>  // b.pmore
  409ed4:	cmp	w0, #0x3
  409ed8:	b.eq	40a060 <ferror@plt+0x76c0>  // b.none
  409edc:	cmp	w0, #0x4
  409ee0:	b.ne	409f08 <ferror@plt+0x7568>  // b.any
  409ee4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409ee8:	mov	x3, x21
  409eec:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  409ef0:	mov	w1, #0x0                   	// #0
  409ef4:	ldr	w0, [x0, #1628]
  409ef8:	add	x2, x2, #0xf08
  409efc:	bl	4033d0 <ferror@plt+0xa30>
  409f00:	mov	w0, #0x1                   	// #1
  409f04:	b	409eb4 <ferror@plt+0x7514>
  409f08:	cmp	w0, #0x2
  409f0c:	b.eq	40a018 <ferror@plt+0x7678>  // b.none
  409f10:	cmp	w0, #0x3
  409f14:	b.ne	409f34 <ferror@plt+0x7594>  // b.any
  409f18:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409f1c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  409f20:	add	x2, x2, #0x0
  409f24:	mov	w1, #0x0                   	// #0
  409f28:	ldr	w0, [x0, #1628]
  409f2c:	bl	4033d0 <ferror@plt+0xa30>
  409f30:	bl	4026d0 <abort@plt>
  409f34:	cmp	w0, #0x1
  409f38:	b.ne	409f18 <ferror@plt+0x7578>  // b.any
  409f3c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409f40:	mov	x3, x21
  409f44:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  409f48:	mov	w1, #0x0                   	// #0
  409f4c:	ldr	w0, [x0, #1628]
  409f50:	add	x2, x2, #0xfa0
  409f54:	bl	4033d0 <ferror@plt+0xa30>
  409f58:	mov	w0, w19
  409f5c:	b	409eb4 <ferror@plt+0x7514>
  409f60:	cmp	w0, #0x7
  409f64:	b.eq	409fe8 <ferror@plt+0x7648>  // b.none
  409f68:	cmp	w0, #0x8
  409f6c:	b.ne	409fac <ferror@plt+0x760c>  // b.any
  409f70:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409f74:	mov	x3, x21
  409f78:	mov	w1, #0x0                   	// #0
  409f7c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  409f80:	ldr	w0, [x0, #1628]
  409f84:	add	x2, x2, #0xf80
  409f88:	bl	4033d0 <ferror@plt+0xa30>
  409f8c:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  409f90:	mov	w1, #0x1                   	// #1
  409f94:	mov	w0, w1
  409f98:	str	w1, [x2, #3384]
  409f9c:	ldp	x19, x20, [sp, #16]
  409fa0:	ldp	x21, x22, [sp, #32]
  409fa4:	ldp	x29, x30, [sp], #48
  409fa8:	ret
  409fac:	cmp	w0, #0x6
  409fb0:	b.ne	409f18 <ferror@plt+0x7578>  // b.any
  409fb4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409fb8:	mov	x3, x21
  409fbc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  409fc0:	mov	w1, #0x0                   	// #0
  409fc4:	ldr	w0, [x0, #1628]
  409fc8:	add	x2, x2, #0xf28
  409fcc:	bl	4033d0 <ferror@plt+0xa30>
  409fd0:	mov	w0, #0x1                   	// #1
  409fd4:	b	409eb4 <ferror@plt+0x7514>
  409fd8:	mov	x0, x20
  409fdc:	bl	408ec0 <ferror@plt+0x6520>
  409fe0:	cmp	w0, #0x1
  409fe4:	b.eq	409f70 <ferror@plt+0x75d0>  // b.none
  409fe8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  409fec:	mov	x3, x21
  409ff0:	mov	w1, #0x0                   	// #0
  409ff4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  409ff8:	ldr	w0, [x0, #1628]
  409ffc:	add	x2, x2, #0xf50
  40a000:	bl	4033d0 <ferror@plt+0xa30>
  40a004:	mov	w0, #0x1                   	// #1
  40a008:	ldp	x19, x20, [sp, #16]
  40a00c:	ldp	x21, x22, [sp, #32]
  40a010:	ldp	x29, x30, [sp], #48
  40a014:	ret
  40a018:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a01c:	mov	x3, x21
  40a020:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40a024:	mov	w1, #0x0                   	// #0
  40a028:	ldr	w0, [x0, #1628]
  40a02c:	add	x2, x2, #0xfc0
  40a030:	bl	4033d0 <ferror@plt+0xa30>
  40a034:	mov	w0, #0x1                   	// #1
  40a038:	b	409eb4 <ferror@plt+0x7514>
  40a03c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a040:	mov	x3, x21
  40a044:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40a048:	mov	w1, #0x0                   	// #0
  40a04c:	ldr	w0, [x0, #1628]
  40a050:	add	x2, x2, #0xed0
  40a054:	bl	4033d0 <ferror@plt+0xa30>
  40a058:	mov	w0, #0x1                   	// #1
  40a05c:	b	409eb4 <ferror@plt+0x7514>
  40a060:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a064:	mov	x3, x21
  40a068:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  40a06c:	mov	w1, #0x0                   	// #0
  40a070:	ldr	w0, [x0, #1628]
  40a074:	add	x2, x2, #0xfe0
  40a078:	bl	4033d0 <ferror@plt+0xa30>
  40a07c:	mov	w0, #0x1                   	// #1
  40a080:	b	409eb4 <ferror@plt+0x7514>
  40a084:	nop
  40a088:	stp	x29, x30, [sp, #-64]!
  40a08c:	mov	x29, sp
  40a090:	stp	x19, x20, [sp, #16]
  40a094:	mov	x19, x0
  40a098:	bl	402390 <strlen@plt>
  40a09c:	cbz	x0, 40a164 <ferror@plt+0x77c4>
  40a0a0:	mov	x20, x0
  40a0a4:	stp	x21, x22, [sp, #32]
  40a0a8:	bl	402920 <__errno_location@plt>
  40a0ac:	mov	x22, x0
  40a0b0:	add	x1, sp, #0x38
  40a0b4:	mov	x0, x19
  40a0b8:	mov	w2, #0xa                   	// #10
  40a0bc:	str	wzr, [x22]
  40a0c0:	bl	402790 <strtol@plt>
  40a0c4:	mov	x21, x0
  40a0c8:	ldr	x1, [sp, #56]
  40a0cc:	sub	x1, x1, x19
  40a0d0:	cmp	x1, x20
  40a0d4:	b.ne	40a130 <ferror@plt+0x7790>  // b.any
  40a0d8:	bl	402770 <__ctype_b_loc@plt>
  40a0dc:	ldrb	w1, [x19]
  40a0e0:	mov	w19, w21
  40a0e4:	ldr	x0, [x0]
  40a0e8:	ldrh	w0, [x0, x1, lsl #1]
  40a0ec:	tbnz	w0, #13, 40a190 <ferror@plt+0x77f0>
  40a0f0:	ldr	w0, [x22]
  40a0f4:	cmp	w0, #0x22
  40a0f8:	b.eq	40a104 <ferror@plt+0x7764>  // b.none
  40a0fc:	cmp	x21, w21, sxtw
  40a100:	b.eq	40a1bc <ferror@plt+0x781c>  // b.none
  40a104:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a108:	mov	w1, #0x0                   	// #0
  40a10c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a110:	add	x2, x2, #0x88
  40a114:	ldr	w0, [x0, #1628]
  40a118:	bl	4033d0 <ferror@plt+0xa30>
  40a11c:	mov	w0, w19
  40a120:	ldp	x19, x20, [sp, #16]
  40a124:	ldp	x21, x22, [sp, #32]
  40a128:	ldp	x29, x30, [sp], #64
  40a12c:	ret
  40a130:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a134:	mov	x3, x19
  40a138:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a13c:	mov	w19, w21
  40a140:	ldr	w0, [x0, #1628]
  40a144:	add	x2, x2, #0x50
  40a148:	mov	w1, #0x0                   	// #0
  40a14c:	bl	4033d0 <ferror@plt+0xa30>
  40a150:	ldp	x21, x22, [sp, #32]
  40a154:	mov	w0, w19
  40a158:	ldp	x19, x20, [sp, #16]
  40a15c:	ldp	x29, x30, [sp], #64
  40a160:	ret
  40a164:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a168:	mov	w1, #0x0                   	// #0
  40a16c:	mov	w19, #0x0                   	// #0
  40a170:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a174:	ldr	w0, [x0, #1628]
  40a178:	add	x2, x2, #0x30
  40a17c:	bl	4033d0 <ferror@plt+0xa30>
  40a180:	mov	w0, w19
  40a184:	ldp	x19, x20, [sp, #16]
  40a188:	ldp	x29, x30, [sp], #64
  40a18c:	ret
  40a190:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a194:	mov	w1, #0x0                   	// #0
  40a198:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a19c:	add	x2, x2, #0x68
  40a1a0:	ldr	w0, [x0, #1628]
  40a1a4:	bl	4033d0 <ferror@plt+0xa30>
  40a1a8:	mov	w0, w19
  40a1ac:	ldp	x19, x20, [sp, #16]
  40a1b0:	ldp	x21, x22, [sp, #32]
  40a1b4:	ldp	x29, x30, [sp], #64
  40a1b8:	ret
  40a1bc:	ldp	x21, x22, [sp, #32]
  40a1c0:	b	40a154 <ferror@plt+0x77b4>
  40a1c4:	nop
  40a1c8:	stp	x29, x30, [sp, #-272]!
  40a1cc:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a1d0:	add	x3, x3, #0xd0
  40a1d4:	mov	x29, sp
  40a1d8:	stp	x25, x26, [sp, #64]
  40a1dc:	mov	x26, x0
  40a1e0:	ldr	x0, [x3]
  40a1e4:	str	x0, [sp, #128]
  40a1e8:	ldur	x0, [x3, #6]
  40a1ec:	stp	x19, x20, [sp, #16]
  40a1f0:	mov	x20, x2
  40a1f4:	stp	x21, x22, [sp, #32]
  40a1f8:	mov	w21, w1
  40a1fc:	stp	x23, x24, [sp, #48]
  40a200:	stp	x27, x28, [sp, #80]
  40a204:	stur	x0, [sp, #134]
  40a208:	cbz	w1, 40a620 <ferror@plt+0x7c80>
  40a20c:	ldr	x0, [x20], #8
  40a210:	sub	w21, w1, #0x1
  40a214:	ldr	x0, [x0, #8]
  40a218:	str	x0, [sp, #96]
  40a21c:	ldr	x23, [sp, #96]
  40a220:	add	x22, sp, #0x81
  40a224:	stp	xzr, xzr, [sp, #144]
  40a228:	stp	xzr, xzr, [sp, #160]
  40a22c:	stp	xzr, xzr, [sp, #176]
  40a230:	stp	xzr, xzr, [sp, #192]
  40a234:	stp	xzr, xzr, [sp, #208]
  40a238:	stp	xzr, xzr, [sp, #224]
  40a23c:	stp	xzr, xzr, [sp, #240]
  40a240:	stp	xzr, xzr, [sp, #256]
  40a244:	nop
  40a248:	mov	x0, x23
  40a24c:	mov	w1, #0x25                  	// #37
  40a250:	bl	402810 <strchr@plt>
  40a254:	mov	x19, x0
  40a258:	cbz	x0, 40a568 <ferror@plt+0x7bc8>
  40a25c:	sub	x24, x0, x23
  40a260:	ldp	x0, x1, [x26, #24]
  40a264:	sub	x1, x1, x0
  40a268:	cmp	x24, x1
  40a26c:	b.hi	40a5e8 <ferror@plt+0x7c48>  // b.pmore
  40a270:	mov	x2, x24
  40a274:	mov	x1, x23
  40a278:	bl	402350 <memcpy@plt>
  40a27c:	ldr	x0, [x26, #24]
  40a280:	add	x2, x0, x24
  40a284:	str	x2, [x26, #24]
  40a288:	ldrb	w3, [x19, #1]
  40a28c:	cmp	w3, #0x25
  40a290:	b.eq	40a5c4 <ferror@plt+0x7c24>  // b.none
  40a294:	mov	w0, #0x1                   	// #1
  40a298:	mov	w8, #0x1                   	// #1
  40a29c:	mov	w14, #0x101                 	// #257
  40a2a0:	mov	w2, #0x1010101             	// #16843009
  40a2a4:	add	x19, x19, #0x1
  40a2a8:	mov	w11, w8
  40a2ac:	mov	w13, w8
  40a2b0:	mov	w6, w8
  40a2b4:	mov	w7, w8
  40a2b8:	mov	w12, #0x0                   	// #0
  40a2bc:	mov	w4, #0x0                   	// #0
  40a2c0:	mov	w10, #0x0                   	// #0
  40a2c4:	mov	w5, #0x0                   	// #0
  40a2c8:	mov	w9, #0x0                   	// #0
  40a2cc:	mov	w1, #0x0                   	// #0
  40a2d0:	strb	w0, [sp, #209]
  40a2d4:	strb	w0, [sp, #213]
  40a2d8:	strh	w14, [sp, #214]
  40a2dc:	strb	w0, [sp, #232]
  40a2e0:	strb	w0, [sp, #241]
  40a2e4:	strb	w0, [sp, #243]
  40a2e8:	str	w2, [sp, #244]
  40a2ec:	strb	w0, [sp, #249]
  40a2f0:	strb	w0, [sp, #255]
  40a2f4:	strb	w0, [sp, #259]
  40a2f8:	strb	w0, [sp, #261]
  40a2fc:	strb	w0, [sp, #264]
  40a300:	b	40a348 <ferror@plt+0x79a8>
  40a304:	cmp	w3, #0x23
  40a308:	b.eq	40a3a4 <ferror@plt+0x7a04>  // b.none
  40a30c:	cmp	w3, #0x27
  40a310:	b.ne	40a378 <ferror@plt+0x79d8>  // b.any
  40a314:	mov	w10, #0x1                   	// #1
  40a318:	and	w2, w1, #0x40
  40a31c:	mov	w5, w10
  40a320:	orr	w1, w1, w10
  40a324:	mov	w9, w10
  40a328:	mov	w13, #0x0                   	// #0
  40a32c:	mov	w6, #0x0                   	// #0
  40a330:	mov	w7, #0x0                   	// #0
  40a334:	nop
  40a338:	add	x24, x19, #0x1
  40a33c:	cbnz	w2, 40a3e0 <ferror@plt+0x7a40>
  40a340:	ldrb	w3, [x19, #1]
  40a344:	mov	x19, x24
  40a348:	cmp	w3, #0x2b
  40a34c:	b.eq	40a3c8 <ferror@plt+0x7a28>  // b.none
  40a350:	b.ls	40a304 <ferror@plt+0x7964>  // b.plast
  40a354:	cmp	w3, #0x2d
  40a358:	b.eq	40a5b8 <ferror@plt+0x7c18>  // b.none
  40a35c:	cmp	w3, #0x30
  40a360:	b.ne	40a3d8 <ferror@plt+0x7a38>  // b.any
  40a364:	and	w2, w1, #0x40
  40a368:	mov	w5, #0x1                   	// #1
  40a36c:	orr	w1, w1, #0x10
  40a370:	mov	w6, #0x0                   	// #0
  40a374:	b	40a338 <ferror@plt+0x7998>
  40a378:	cmp	w3, #0x20
  40a37c:	b.ne	40a3d8 <ferror@plt+0x7a38>  // b.any
  40a380:	and	w2, w1, #0x40
  40a384:	orr	w1, w1, #0x8
  40a388:	mov	w4, #0x1                   	// #1
  40a38c:	mov	w5, w4
  40a390:	mov	w9, w4
  40a394:	mov	w11, #0x0                   	// #0
  40a398:	mov	w6, #0x0                   	// #0
  40a39c:	mov	w7, #0x0                   	// #0
  40a3a0:	b	40a338 <ferror@plt+0x7998>
  40a3a4:	mov	w12, #0x1                   	// #1
  40a3a8:	and	w2, w1, #0x40
  40a3ac:	mov	w4, w12
  40a3b0:	orr	w1, w1, #0x20
  40a3b4:	mov	w5, w12
  40a3b8:	mov	w8, #0x0                   	// #0
  40a3bc:	mov	w11, #0x0                   	// #0
  40a3c0:	mov	w6, #0x0                   	// #0
  40a3c4:	b	40a338 <ferror@plt+0x7998>
  40a3c8:	and	w2, w1, #0x40
  40a3cc:	mov	w4, #0x1                   	// #1
  40a3d0:	orr	w1, w1, #0x2
  40a3d4:	b	40a38c <ferror@plt+0x79ec>
  40a3d8:	orr	w1, w1, #0x40
  40a3dc:	add	x24, x19, #0x1
  40a3e0:	cbz	w9, 40a5fc <ferror@plt+0x7c5c>
  40a3e4:	strb	w7, [sp, #232]
  40a3e8:	strb	w7, [sp, #264]
  40a3ec:	cbz	w5, 40a3f8 <ferror@plt+0x7a58>
  40a3f0:	strb	w6, [sp, #259]
  40a3f4:	cbz	w9, 40a3fc <ferror@plt+0x7a5c>
  40a3f8:	strb	w7, [sp, #255]
  40a3fc:	cbz	w10, 40a604 <ferror@plt+0x7c64>
  40a400:	strb	w13, [sp, #213]
  40a404:	strb	w13, [sp, #245]
  40a408:	cbz	w5, 40a414 <ferror@plt+0x7a74>
  40a40c:	strb	w6, [sp, #243]
  40a410:	cbz	w10, 40a41c <ferror@plt+0x7a7c>
  40a414:	strb	w13, [sp, #209]
  40a418:	strb	w13, [sp, #241]
  40a41c:	cbz	w4, 40a424 <ferror@plt+0x7a84>
  40a420:	strb	w11, [sp, #261]
  40a424:	cbz	w12, 40a430 <ferror@plt+0x7a90>
  40a428:	strb	w8, [sp, #244]
  40a42c:	strb	w8, [sp, #249]
  40a430:	mov	x27, x22
  40a434:	tbz	w1, #0, 40a444 <ferror@plt+0x7aa4>
  40a438:	add	x27, sp, #0x82
  40a43c:	mov	w0, #0x27                  	// #39
  40a440:	strb	w0, [sp, #129]
  40a444:	tbz	w1, #1, 40a450 <ferror@plt+0x7ab0>
  40a448:	mov	w0, #0x2b                  	// #43
  40a44c:	strb	w0, [x27], #1
  40a450:	tbz	w1, #2, 40a45c <ferror@plt+0x7abc>
  40a454:	mov	w0, #0x2d                  	// #45
  40a458:	strb	w0, [x27], #1
  40a45c:	tbz	w1, #3, 40a468 <ferror@plt+0x7ac8>
  40a460:	mov	w0, #0x20                  	// #32
  40a464:	strb	w0, [x27], #1
  40a468:	tbz	w1, #4, 40a474 <ferror@plt+0x7ad4>
  40a46c:	mov	w0, #0x30                  	// #48
  40a470:	strb	w0, [x27], #1
  40a474:	tbz	w1, #5, 40a480 <ferror@plt+0x7ae0>
  40a478:	mov	w0, #0x23                  	// #35
  40a47c:	strb	w0, [x27], #1
  40a480:	mov	w0, #0x2a                  	// #42
  40a484:	strb	w0, [x27]
  40a488:	ldrb	w28, [x19]
  40a48c:	cmp	w28, #0x2a
  40a490:	b.ne	40a784 <ferror@plt+0x7de4>  // b.any
  40a494:	mov	w25, #0x0                   	// #0
  40a498:	cbnz	w21, 40a644 <ferror@plt+0x7ca4>
  40a49c:	mov	w0, #0x2a2e                	// #10798
  40a4a0:	sturh	w0, [x27, #1]
  40a4a4:	add	x23, x24, #0x1
  40a4a8:	mov	w28, #0xffffffff            	// #-1
  40a4ac:	ldrb	w19, [x24]
  40a4b0:	cmp	w19, #0x2e
  40a4b4:	b.eq	40a7d4 <ferror@plt+0x7e34>  // b.none
  40a4b8:	cmp	w19, #0x6c
  40a4bc:	b.eq	40a800 <ferror@plt+0x7e60>  // b.none
  40a4c0:	cmp	w19, #0x68
  40a4c4:	b.eq	40a86c <ferror@plt+0x7ecc>  // b.none
  40a4c8:	add	x27, x27, #0x3
  40a4cc:	mov	w2, #0x0                   	// #0
  40a4d0:	tbnz	w19, #7, 40a824 <ferror@plt+0x7e84>
  40a4d4:	add	x0, sp, #0x90
  40a4d8:	ldrb	w0, [x0, w19, sxtw]
  40a4dc:	cbz	w0, 40a844 <ferror@plt+0x7ea4>
  40a4e0:	cmp	w19, #0x78
  40a4e4:	b.hi	40a684 <ferror@plt+0x7ce4>  // b.pmore
  40a4e8:	cmp	w19, #0x63
  40a4ec:	b.hi	40a65c <ferror@plt+0x7cbc>  // b.pmore
  40a4f0:	b.ne	40a6b8 <ferror@plt+0x7d18>  // b.any
  40a4f4:	sturb	w19, [x27, #-2]
  40a4f8:	mov	w2, #0x0                   	// #0
  40a4fc:	sturb	wzr, [x27, #-1]
  40a500:	cbnz	w21, 40aa00 <ferror@plt+0x8060>
  40a504:	mov	w1, w25
  40a508:	add	x0, sp, #0x80
  40a50c:	bl	417058 <ferror@plt+0x146b8>
  40a510:	mov	x19, x0
  40a514:	cbz	x19, 40a248 <ferror@plt+0x78a8>
  40a518:	mov	x0, x19
  40a51c:	bl	402390 <strlen@plt>
  40a520:	mov	x24, x0
  40a524:	ldp	x0, x1, [x26, #24]
  40a528:	sub	x1, x1, x0
  40a52c:	cmp	x24, x1
  40a530:	b.hi	40a8b0 <ferror@plt+0x7f10>  // b.pmore
  40a534:	mov	x2, x24
  40a538:	mov	x1, x19
  40a53c:	bl	402350 <memcpy@plt>
  40a540:	ldr	x1, [x26, #24]
  40a544:	mov	x0, x19
  40a548:	add	x24, x1, x24
  40a54c:	str	x24, [x26, #24]
  40a550:	bl	4027c0 <free@plt>
  40a554:	mov	x0, x23
  40a558:	mov	w1, #0x25                  	// #37
  40a55c:	bl	402810 <strchr@plt>
  40a560:	mov	x19, x0
  40a564:	cbnz	x0, 40a25c <ferror@plt+0x78bc>
  40a568:	mov	x0, x23
  40a56c:	bl	402390 <strlen@plt>
  40a570:	mov	x19, x0
  40a574:	ldp	x0, x1, [x26, #24]
  40a578:	sub	x1, x1, x0
  40a57c:	cmp	x19, x1
  40a580:	b.hi	40a630 <ferror@plt+0x7c90>  // b.pmore
  40a584:	mov	x1, x23
  40a588:	mov	x2, x19
  40a58c:	bl	402350 <memcpy@plt>
  40a590:	ldr	x0, [x26, #24]
  40a594:	ldp	x21, x22, [sp, #32]
  40a598:	add	x0, x0, x19
  40a59c:	ldp	x19, x20, [sp, #16]
  40a5a0:	ldp	x23, x24, [sp, #48]
  40a5a4:	ldp	x27, x28, [sp, #80]
  40a5a8:	str	x0, [x26, #24]
  40a5ac:	ldp	x25, x26, [sp, #64]
  40a5b0:	ldp	x29, x30, [sp], #272
  40a5b4:	ret
  40a5b8:	and	w2, w1, #0x40
  40a5bc:	orr	w1, w1, #0x4
  40a5c0:	b	40a338 <ferror@plt+0x7998>
  40a5c4:	ldr	x0, [x26, #32]
  40a5c8:	cmp	x2, x0
  40a5cc:	b.eq	40a60c <ferror@plt+0x7c6c>  // b.none
  40a5d0:	add	x0, x2, #0x1
  40a5d4:	str	x0, [x26, #24]
  40a5d8:	add	x23, x19, #0x2
  40a5dc:	mov	w0, #0x25                  	// #37
  40a5e0:	strb	w0, [x2]
  40a5e4:	b	40a248 <ferror@plt+0x78a8>
  40a5e8:	mov	x0, x26
  40a5ec:	mov	x1, x24
  40a5f0:	bl	4175a8 <_obstack_newchunk@@Base>
  40a5f4:	ldr	x0, [x26, #24]
  40a5f8:	b	40a270 <ferror@plt+0x78d0>
  40a5fc:	cbnz	w5, 40a3f0 <ferror@plt+0x7a50>
  40a600:	cbnz	w10, 40a400 <ferror@plt+0x7a60>
  40a604:	cbnz	w5, 40a40c <ferror@plt+0x7a6c>
  40a608:	b	40a41c <ferror@plt+0x7a7c>
  40a60c:	mov	x0, x26
  40a610:	mov	x1, #0x1                   	// #1
  40a614:	bl	4175a8 <_obstack_newchunk@@Base>
  40a618:	ldr	x2, [x26, #24]
  40a61c:	b	40a5d0 <ferror@plt+0x7c30>
  40a620:	adrp	x23, 417000 <ferror@plt+0x14660>
  40a624:	add	x0, x23, #0xe98
  40a628:	str	x0, [sp, #96]
  40a62c:	b	40a21c <ferror@plt+0x787c>
  40a630:	mov	x0, x26
  40a634:	mov	x1, x19
  40a638:	bl	4175a8 <_obstack_newchunk@@Base>
  40a63c:	ldr	x0, [x26, #24]
  40a640:	b	40a584 <ferror@plt+0x7be4>
  40a644:	ldr	x0, [x20], #8
  40a648:	sub	w21, w21, #0x1
  40a64c:	ldr	x0, [x0, #8]
  40a650:	bl	40a088 <ferror@plt+0x76e8>
  40a654:	mov	w25, w0
  40a658:	b	40a49c <ferror@plt+0x7afc>
  40a65c:	sub	w3, w19, #0x64
  40a660:	mov	x4, #0x1                   	// #1
  40a664:	mov	x1, #0x821                 	// #2081
  40a668:	movk	x1, #0x12, lsl #16
  40a66c:	lsl	x3, x4, x3
  40a670:	tst	x3, x1
  40a674:	b.ne	40a8c4 <ferror@plt+0x7f24>  // b.any
  40a678:	tst	x3, #0xe
  40a67c:	b.ne	40a6d0 <ferror@plt+0x7d30>  // b.any
  40a680:	tbnz	w3, #15, 40a688 <ferror@plt+0x7ce8>
  40a684:	bl	4026d0 <abort@plt>
  40a688:	mov	w0, #0x73                  	// #115
  40a68c:	strh	w0, [x27]
  40a690:	cbz	w21, 40a9c4 <ferror@plt+0x8024>
  40a694:	ldr	x0, [x20], #8
  40a698:	sub	w21, w21, #0x1
  40a69c:	ldr	x3, [x0, #8]
  40a6a0:	mov	w2, w28
  40a6a4:	mov	w1, w25
  40a6a8:	add	x0, sp, #0x80
  40a6ac:	bl	417058 <ferror@plt+0x146b8>
  40a6b0:	mov	x19, x0
  40a6b4:	b	40a514 <ferror@plt+0x7b74>
  40a6b8:	cmp	w19, #0x47
  40a6bc:	b.hi	40a6f8 <ferror@plt+0x7d58>  // b.pmore
  40a6c0:	cmp	w19, #0x44
  40a6c4:	b.hi	40a6d0 <ferror@plt+0x7d30>  // b.pmore
  40a6c8:	cmp	w19, #0x41
  40a6cc:	b.ne	40a684 <ferror@plt+0x7ce4>  // b.any
  40a6d0:	strb	w19, [x27]
  40a6d4:	movi	d0, #0x0
  40a6d8:	strb	wzr, [x27, #1]
  40a6dc:	cbnz	w21, 40a718 <ferror@plt+0x7d78>
  40a6e0:	mov	w2, w28
  40a6e4:	mov	w1, w25
  40a6e8:	add	x0, sp, #0x80
  40a6ec:	bl	417058 <ferror@plt+0x146b8>
  40a6f0:	mov	x19, x0
  40a6f4:	b	40a514 <ferror@plt+0x7b74>
  40a6f8:	cmp	w19, #0x58
  40a6fc:	b.eq	40a8c4 <ferror@plt+0x7f24>  // b.none
  40a700:	cmp	w19, #0x61
  40a704:	b.ne	40a684 <ferror@plt+0x7ce4>  // b.any
  40a708:	strb	w19, [x27]
  40a70c:	movi	d0, #0x0
  40a710:	strb	wzr, [x27, #1]
  40a714:	cbz	w21, 40a6e0 <ferror@plt+0x7d40>
  40a718:	ldr	x0, [x20], #8
  40a71c:	sub	w21, w21, #0x1
  40a720:	ldr	x27, [x0, #8]
  40a724:	mov	x0, x27
  40a728:	bl	402390 <strlen@plt>
  40a72c:	mov	x19, x0
  40a730:	cbz	x0, 40aa60 <ferror@plt+0x80c0>
  40a734:	bl	402920 <__errno_location@plt>
  40a738:	mov	x24, x0
  40a73c:	add	x1, sp, #0x78
  40a740:	mov	x0, x27
  40a744:	str	wzr, [x24]
  40a748:	bl	402400 <strtod@plt>
  40a74c:	str	d0, [sp, #104]
  40a750:	ldr	x0, [sp, #120]
  40a754:	sub	x0, x0, x27
  40a758:	cmp	x0, x19
  40a75c:	b.eq	40aa18 <ferror@plt+0x8078>  // b.none
  40a760:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a764:	mov	x3, x27
  40a768:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a76c:	mov	w1, #0x0                   	// #0
  40a770:	ldr	w0, [x0, #1628]
  40a774:	add	x2, x2, #0x50
  40a778:	bl	4033d0 <ferror@plt+0xa30>
  40a77c:	ldr	d0, [sp, #104]
  40a780:	b	40a6e0 <ferror@plt+0x7d40>
  40a784:	bl	402770 <__ctype_b_loc@plt>
  40a788:	mov	x24, x19
  40a78c:	mov	w25, #0x0                   	// #0
  40a790:	ldr	x2, [x0]
  40a794:	b	40a7ac <ferror@plt+0x7e0c>
  40a798:	add	w1, w25, w25, lsl #2
  40a79c:	add	w1, w28, w1, lsl #1
  40a7a0:	ldrb	w28, [x24, #1]
  40a7a4:	sub	w25, w1, #0x30
  40a7a8:	mov	x24, x23
  40a7ac:	ubfiz	x1, x28, #1, #8
  40a7b0:	add	x23, x24, #0x1
  40a7b4:	ldrh	w0, [x2, x1]
  40a7b8:	tbnz	w0, #11, 40a798 <ferror@plt+0x7df8>
  40a7bc:	mov	w0, #0x2a2e                	// #10798
  40a7c0:	sturh	w0, [x27, #1]
  40a7c4:	mov	w28, #0xffffffff            	// #-1
  40a7c8:	ldrb	w19, [x24]
  40a7cc:	cmp	w19, #0x2e
  40a7d0:	b.ne	40a4b8 <ferror@plt+0x7b18>  // b.any
  40a7d4:	ldrb	w19, [x24, #1]
  40a7d8:	strb	wzr, [sp, #243]
  40a7dc:	cmp	w19, #0x2a
  40a7e0:	b.ne	40a8f0 <ferror@plt+0x7f50>  // b.any
  40a7e4:	mov	w28, #0x0                   	// #0
  40a7e8:	cbnz	w21, 40a9d0 <ferror@plt+0x8030>
  40a7ec:	ldrb	w19, [x24, #2]
  40a7f0:	add	x23, x24, #0x3
  40a7f4:	add	x24, x24, #0x2
  40a7f8:	cmp	w19, #0x6c
  40a7fc:	b.ne	40a4c0 <ferror@plt+0x7b20>  // b.any
  40a800:	strb	w19, [x27, #3]
  40a804:	mov	w2, #0x1                   	// #1
  40a808:	strb	wzr, [sp, #243]
  40a80c:	add	x27, x27, #0x4
  40a810:	ldrb	w19, [x24, #1]
  40a814:	mov	x24, x23
  40a818:	strb	wzr, [sp, #259]
  40a81c:	add	x23, x23, #0x1
  40a820:	tbz	w19, #7, 40a4d4 <ferror@plt+0x7b34>
  40a824:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a828:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a82c:	ldr	x3, [sp, #96]
  40a830:	add	x2, x2, #0xa8
  40a834:	ldr	w0, [x0, #1628]
  40a838:	mov	w1, #0x0                   	// #0
  40a83c:	bl	4033d0 <ferror@plt+0xa30>
  40a840:	b	40a248 <ferror@plt+0x78a8>
  40a844:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a848:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a84c:	ldr	x3, [sp, #96]
  40a850:	add	x2, x2, #0xa8
  40a854:	ldr	w0, [x0, #1628]
  40a858:	mov	w1, #0x0                   	// #0
  40a85c:	bl	4033d0 <ferror@plt+0xa30>
  40a860:	cmp	w19, #0x0
  40a864:	csel	x23, x23, x24, ne  // ne = any
  40a868:	b	40a248 <ferror@plt+0x78a8>
  40a86c:	strb	w19, [x27, #3]
  40a870:	ldrb	w19, [x24, #1]
  40a874:	cmp	w19, #0x68
  40a878:	b.eq	40a9b0 <ferror@plt+0x8010>  // b.none
  40a87c:	add	x27, x27, #0x4
  40a880:	mov	x24, x23
  40a884:	add	x23, x24, #0x1
  40a888:	mov	w2, #0x0                   	// #0
  40a88c:	strb	wzr, [sp, #209]
  40a890:	strb	wzr, [sp, #213]
  40a894:	strh	wzr, [sp, #214]
  40a898:	strb	wzr, [sp, #241]
  40a89c:	strb	wzr, [sp, #243]
  40a8a0:	strb	wzr, [sp, #245]
  40a8a4:	strh	wzr, [sp, #246]
  40a8a8:	strb	wzr, [sp, #259]
  40a8ac:	b	40a4d0 <ferror@plt+0x7b30>
  40a8b0:	mov	x0, x26
  40a8b4:	mov	x1, x24
  40a8b8:	bl	4175a8 <_obstack_newchunk@@Base>
  40a8bc:	ldr	x0, [x26, #24]
  40a8c0:	b	40a534 <ferror@plt+0x7b94>
  40a8c4:	strb	w19, [x27]
  40a8c8:	strb	wzr, [x27, #1]
  40a8cc:	cbnz	w2, 40a92c <ferror@plt+0x7f8c>
  40a8d0:	mov	w3, #0x0                   	// #0
  40a8d4:	cbnz	w21, 40a9e8 <ferror@plt+0x8048>
  40a8d8:	mov	w2, w28
  40a8dc:	mov	w1, w25
  40a8e0:	add	x0, sp, #0x80
  40a8e4:	bl	417058 <ferror@plt+0x146b8>
  40a8e8:	mov	x19, x0
  40a8ec:	b	40a514 <ferror@plt+0x7b74>
  40a8f0:	bl	402770 <__ctype_b_loc@plt>
  40a8f4:	mov	x24, x23
  40a8f8:	mov	w28, #0x0                   	// #0
  40a8fc:	ldr	x1, [x0]
  40a900:	b	40a918 <ferror@plt+0x7f78>
  40a904:	add	w28, w28, w28, lsl #2
  40a908:	mov	x24, x23
  40a90c:	add	w28, w19, w28, lsl #1
  40a910:	ldrb	w19, [x23]
  40a914:	sub	w28, w28, #0x30
  40a918:	ubfiz	x0, x19, #1, #8
  40a91c:	add	x23, x23, #0x1
  40a920:	ldrh	w0, [x1, x0]
  40a924:	tbnz	w0, #11, 40a904 <ferror@plt+0x7f64>
  40a928:	b	40a4b8 <ferror@plt+0x7b18>
  40a92c:	mov	x19, #0x0                   	// #0
  40a930:	cbnz	w21, 40a93c <ferror@plt+0x7f9c>
  40a934:	mov	x3, x19
  40a938:	b	40a6a0 <ferror@plt+0x7d00>
  40a93c:	ldr	x0, [x20], #8
  40a940:	sub	w21, w21, #0x1
  40a944:	ldr	x24, [x0, #8]
  40a948:	mov	x0, x24
  40a94c:	bl	402390 <strlen@plt>
  40a950:	mov	x27, x0
  40a954:	cbz	x0, 40aacc <ferror@plt+0x812c>
  40a958:	bl	402920 <__errno_location@plt>
  40a95c:	mov	x3, x0
  40a960:	add	x1, sp, #0x78
  40a964:	mov	x0, x24
  40a968:	mov	w2, #0xa                   	// #10
  40a96c:	str	x3, [sp, #104]
  40a970:	str	wzr, [x3]
  40a974:	bl	402790 <strtol@plt>
  40a978:	mov	x19, x0
  40a97c:	ldr	x1, [sp, #120]
  40a980:	sub	x1, x1, x24
  40a984:	cmp	x1, x27
  40a988:	b.eq	40aa88 <ferror@plt+0x80e8>  // b.none
  40a98c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40a990:	mov	x3, x24
  40a994:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40a998:	mov	w1, #0x0                   	// #0
  40a99c:	ldr	w0, [x0, #1628]
  40a9a0:	add	x2, x2, #0x50
  40a9a4:	bl	4033d0 <ferror@plt+0xa30>
  40a9a8:	mov	x3, x19
  40a9ac:	b	40a6a0 <ferror@plt+0x7d00>
  40a9b0:	strb	w19, [x27, #4]
  40a9b4:	add	x24, x24, #0x2
  40a9b8:	add	x27, x27, #0x5
  40a9bc:	ldrb	w19, [x24]
  40a9c0:	b	40a884 <ferror@plt+0x7ee4>
  40a9c4:	adrp	x3, 417000 <ferror@plt+0x14660>
  40a9c8:	add	x3, x3, #0xe98
  40a9cc:	b	40a6a0 <ferror@plt+0x7d00>
  40a9d0:	ldr	x0, [x20], #8
  40a9d4:	sub	w21, w21, #0x1
  40a9d8:	ldr	x0, [x0, #8]
  40a9dc:	bl	40a088 <ferror@plt+0x76e8>
  40a9e0:	mov	w28, w0
  40a9e4:	b	40a7ec <ferror@plt+0x7e4c>
  40a9e8:	ldr	x0, [x20], #8
  40a9ec:	sub	w21, w21, #0x1
  40a9f0:	ldr	x0, [x0, #8]
  40a9f4:	bl	40a088 <ferror@plt+0x76e8>
  40a9f8:	mov	w3, w0
  40a9fc:	b	40a8d8 <ferror@plt+0x7f38>
  40aa00:	ldr	x0, [x20], #8
  40aa04:	sub	w21, w21, #0x1
  40aa08:	ldr	x0, [x0, #8]
  40aa0c:	bl	40a088 <ferror@plt+0x76e8>
  40aa10:	mov	w2, w0
  40aa14:	b	40a504 <ferror@plt+0x7b64>
  40aa18:	bl	402770 <__ctype_b_loc@plt>
  40aa1c:	ldrb	w1, [x27]
  40aa20:	ldr	x0, [x0]
  40aa24:	ldr	d0, [sp, #104]
  40aa28:	ldrh	w0, [x0, x1, lsl #1]
  40aa2c:	tbnz	w0, #13, 40ab0c <ferror@plt+0x816c>
  40aa30:	ldr	w0, [x24]
  40aa34:	cmp	w0, #0x22
  40aa38:	b.ne	40a6e0 <ferror@plt+0x7d40>  // b.any
  40aa3c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40aa40:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aa44:	mov	w1, #0x0                   	// #0
  40aa48:	add	x2, x2, #0x88
  40aa4c:	ldr	w0, [x0, #1628]
  40aa50:	str	d0, [sp, #104]
  40aa54:	bl	4033d0 <ferror@plt+0xa30>
  40aa58:	ldr	d0, [sp, #104]
  40aa5c:	b	40a6e0 <ferror@plt+0x7d40>
  40aa60:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40aa64:	movi	d0, #0x0
  40aa68:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aa6c:	mov	w1, #0x0                   	// #0
  40aa70:	ldr	w0, [x0, #1628]
  40aa74:	add	x2, x2, #0x30
  40aa78:	str	d0, [sp, #104]
  40aa7c:	bl	4033d0 <ferror@plt+0xa30>
  40aa80:	ldr	d0, [sp, #104]
  40aa84:	b	40a6e0 <ferror@plt+0x7d40>
  40aa88:	bl	402770 <__ctype_b_loc@plt>
  40aa8c:	ldrb	w1, [x24]
  40aa90:	ldr	x0, [x0]
  40aa94:	ldrh	w0, [x0, x1, lsl #1]
  40aa98:	tbnz	w0, #13, 40aaec <ferror@plt+0x814c>
  40aa9c:	ldr	x0, [sp, #104]
  40aaa0:	ldr	w0, [x0]
  40aaa4:	cmp	w0, #0x22
  40aaa8:	b.ne	40a934 <ferror@plt+0x7f94>  // b.any
  40aaac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40aab0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aab4:	mov	w1, #0x0                   	// #0
  40aab8:	add	x2, x2, #0x88
  40aabc:	ldr	w0, [x0, #1628]
  40aac0:	bl	4033d0 <ferror@plt+0xa30>
  40aac4:	mov	x3, x19
  40aac8:	b	40a6a0 <ferror@plt+0x7d00>
  40aacc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40aad0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aad4:	mov	w1, #0x0                   	// #0
  40aad8:	add	x2, x2, #0x30
  40aadc:	ldr	w0, [x0, #1628]
  40aae0:	bl	4033d0 <ferror@plt+0xa30>
  40aae4:	mov	x3, x19
  40aae8:	b	40a6a0 <ferror@plt+0x7d00>
  40aaec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40aaf0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aaf4:	mov	w1, #0x0                   	// #0
  40aaf8:	add	x2, x2, #0x68
  40aafc:	ldr	w0, [x0, #1628]
  40ab00:	bl	4033d0 <ferror@plt+0xa30>
  40ab04:	mov	x3, x19
  40ab08:	b	40a6a0 <ferror@plt+0x7d00>
  40ab0c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40ab10:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ab14:	mov	w1, #0x0                   	// #0
  40ab18:	add	x2, x2, #0x68
  40ab1c:	ldr	w0, [x0, #1628]
  40ab20:	bl	4033d0 <ferror@plt+0xa30>
  40ab24:	ldr	d0, [sp, #104]
  40ab28:	b	40a6e0 <ferror@plt+0x7d40>
  40ab2c:	nop
  40ab30:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ab34:	mov	w1, #0x0                   	// #0
  40ab38:	add	x2, x2, #0xe0
  40ab3c:	mov	w0, #0x1                   	// #1
  40ab40:	b	4033d0 <ferror@plt+0xa30>
  40ab44:	nop
  40ab48:	stp	x29, x30, [sp, #-96]!
  40ab4c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ab50:	add	x1, x1, #0x108
  40ab54:	mov	x29, sp
  40ab58:	stp	x19, x20, [sp, #16]
  40ab5c:	mov	x19, x0
  40ab60:	bl	412400 <ferror@plt+0xfa60>
  40ab64:	cbz	x0, 40aec8 <ferror@plt+0x8528>
  40ab68:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ab6c:	add	x2, x2, #0x110
  40ab70:	mov	x20, x0
  40ab74:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ab78:	add	x1, x1, #0x120
  40ab7c:	stp	x21, x22, [sp, #32]
  40ab80:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ab84:	stp	x23, x24, [sp, #48]
  40ab88:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ab8c:	stp	x25, x26, [sp, #64]
  40ab90:	stp	x27, x28, [sp, #80]
  40ab94:	bl	416d88 <ferror@plt+0x143e8>
  40ab98:	mov	x0, x20
  40ab9c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aba0:	add	x1, x1, #0x150
  40aba4:	bl	416d88 <ferror@plt+0x143e8>
  40aba8:	ldr	x0, [x21, #3400]
  40abac:	ldrb	w1, [x0]
  40abb0:	cmp	w1, #0x60
  40abb4:	b.ne	40abdc <ferror@plt+0x823c>  // b.any
  40abb8:	ldrb	w0, [x0, #1]
  40abbc:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40abc0:	cbnz	w0, 40abdc <ferror@plt+0x823c>
  40abc4:	ldr	x0, [x19, #3456]
  40abc8:	ldrb	w1, [x0]
  40abcc:	cmp	w1, #0x27
  40abd0:	b.ne	40abdc <ferror@plt+0x823c>  // b.any
  40abd4:	ldrb	w0, [x0, #1]
  40abd8:	cbz	w0, 40ac20 <ferror@plt+0x8280>
  40abdc:	add	x3, x19, #0xd80
  40abe0:	add	x2, x21, #0xd48
  40abe4:	mov	x0, x20
  40abe8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40abec:	add	x1, x1, #0x158
  40abf0:	ldr	w2, [x2, #8]
  40abf4:	ldr	w3, [x3, #8]
  40abf8:	bl	416d88 <ferror@plt+0x143e8>
  40abfc:	ldr	x0, [x21, #3400]
  40ac00:	mov	x1, x20
  40ac04:	bl	4023a0 <fputs@plt>
  40ac08:	ldr	x0, [x19, #3456]
  40ac0c:	mov	x1, x20
  40ac10:	bl	4023a0 <fputs@plt>
  40ac14:	mov	x1, x20
  40ac18:	mov	w0, #0xa                   	// #10
  40ac1c:	bl	402460 <fputc@plt>
  40ac20:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ac24:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ac28:	ldr	x0, [x21, #3424]
  40ac2c:	ldrb	w1, [x0]
  40ac30:	cmp	w1, #0x23
  40ac34:	b.eq	40ae6c <ferror@plt+0x84cc>  // b.none
  40ac38:	add	x3, x19, #0xd70
  40ac3c:	add	x2, x21, #0xd60
  40ac40:	mov	x0, x20
  40ac44:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ac48:	add	x1, x1, #0x160
  40ac4c:	ldr	w2, [x2, #8]
  40ac50:	ldr	w3, [x3, #8]
  40ac54:	bl	416d88 <ferror@plt+0x143e8>
  40ac58:	ldr	x0, [x21, #3424]
  40ac5c:	mov	x1, x20
  40ac60:	bl	4023a0 <fputs@plt>
  40ac64:	ldr	x0, [x19, #3440]
  40ac68:	mov	x1, x20
  40ac6c:	bl	4023a0 <fputs@plt>
  40ac70:	mov	x1, x20
  40ac74:	mov	w0, #0xa                   	// #10
  40ac78:	bl	402460 <fputc@plt>
  40ac7c:	adrp	x27, 431000 <_obstack_memory_used@@Base+0x19878>
  40ac80:	adrp	x26, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ac84:	mov	x24, #0x0                   	// #0
  40ac88:	add	x26, x26, #0xd98
  40ac8c:	ldr	x0, [x27, #848]
  40ac90:	cbz	x0, 40ae08 <ferror@plt+0x8468>
  40ac94:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ac98:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ac9c:	add	x22, x22, #0x188
  40aca0:	add	x23, x23, #0x1c8
  40aca4:	nop
  40aca8:	ldr	x2, [x26]
  40acac:	lsl	x25, x24, #3
  40acb0:	add	x3, x2, x25
  40acb4:	ldr	x19, [x2, x24, lsl #3]
  40acb8:	cbz	x19, 40ae50 <ferror@plt+0x84b0>
  40acbc:	mov	x1, #0x0                   	// #0
  40acc0:	b	40acc8 <ferror@plt+0x8328>
  40acc4:	mov	x19, x0
  40acc8:	ldr	x0, [x19]
  40accc:	str	x1, [x19]
  40acd0:	mov	x1, x19
  40acd4:	cbnz	x0, 40acc4 <ferror@plt+0x8324>
  40acd8:	str	x19, [x2, x25]
  40acdc:	b	40ad44 <ferror@plt+0x83a4>
  40ace0:	ldr	x0, [x19, #32]
  40ace4:	bl	4076b0 <ferror@plt+0x4d10>
  40ace8:	mov	x21, x0
  40acec:	cbz	x0, 40aef0 <ferror@plt+0x8550>
  40acf0:	ldr	x0, [x19, #16]
  40acf4:	bl	402390 <strlen@plt>
  40acf8:	mov	x28, x0
  40acfc:	ldr	x0, [x21]
  40ad00:	bl	402390 <strlen@plt>
  40ad04:	mov	w3, w0
  40ad08:	mov	w2, w28
  40ad0c:	mov	x1, x23
  40ad10:	mov	x0, x20
  40ad14:	bl	416d88 <ferror@plt+0x143e8>
  40ad18:	ldr	x0, [x19, #16]
  40ad1c:	mov	x1, x20
  40ad20:	bl	4023a0 <fputs@plt>
  40ad24:	ldr	x0, [x21]
  40ad28:	mov	x1, x20
  40ad2c:	bl	4023a0 <fputs@plt>
  40ad30:	mov	x1, x20
  40ad34:	mov	w0, #0xa                   	// #10
  40ad38:	bl	402460 <fputc@plt>
  40ad3c:	ldr	x19, [x19]
  40ad40:	cbz	x19, 40adcc <ferror@plt+0x842c>
  40ad44:	ldr	w0, [x19, #24]
  40ad48:	cmp	w0, #0x1
  40ad4c:	b.eq	40ad78 <ferror@plt+0x83d8>  // b.none
  40ad50:	cmp	w0, #0x2
  40ad54:	b.eq	40ace0 <ferror@plt+0x8340>  // b.none
  40ad58:	cbz	w0, 40ad3c <ferror@plt+0x839c>
  40ad5c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40ad60:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ad64:	add	x2, x2, #0x1d0
  40ad68:	mov	w1, #0x0                   	// #0
  40ad6c:	ldr	w0, [x0, #1628]
  40ad70:	bl	4033d0 <ferror@plt+0xa30>
  40ad74:	bl	4026d0 <abort@plt>
  40ad78:	ldr	x0, [x19, #16]
  40ad7c:	bl	402390 <strlen@plt>
  40ad80:	mov	x21, x0
  40ad84:	ldr	x0, [x19, #32]
  40ad88:	bl	402390 <strlen@plt>
  40ad8c:	mov	w3, w0
  40ad90:	mov	w2, w21
  40ad94:	mov	x1, x22
  40ad98:	mov	x0, x20
  40ad9c:	bl	416d88 <ferror@plt+0x143e8>
  40ada0:	ldr	x0, [x19, #16]
  40ada4:	mov	x1, x20
  40ada8:	bl	4023a0 <fputs@plt>
  40adac:	ldr	x0, [x19, #32]
  40adb0:	mov	x1, x20
  40adb4:	bl	4023a0 <fputs@plt>
  40adb8:	mov	x1, x20
  40adbc:	mov	w0, #0xa                   	// #10
  40adc0:	bl	402460 <fputc@plt>
  40adc4:	ldr	x19, [x19]
  40adc8:	cbnz	x19, 40ad44 <ferror@plt+0x83a4>
  40adcc:	ldr	x0, [x26]
  40add0:	add	x3, x0, x25
  40add4:	ldr	x0, [x0, x25]
  40add8:	cbnz	x0, 40ade4 <ferror@plt+0x8444>
  40addc:	b	40adf4 <ferror@plt+0x8454>
  40ade0:	mov	x0, x1
  40ade4:	ldr	x1, [x0]
  40ade8:	str	x19, [x0]
  40adec:	mov	x19, x0
  40adf0:	cbnz	x1, 40ade0 <ferror@plt+0x8440>
  40adf4:	ldr	x1, [x27, #848]
  40adf8:	str	x0, [x3]
  40adfc:	add	x24, x24, #0x1
  40ae00:	cmp	x1, x24
  40ae04:	b.hi	40aca8 <ferror@plt+0x8308>  // b.pmore
  40ae08:	mov	x0, x20
  40ae0c:	bl	40f6b0 <ferror@plt+0xcd10>
  40ae10:	mov	x3, x20
  40ae14:	mov	x2, #0x1b                  	// #27
  40ae18:	mov	x1, #0x1                   	// #1
  40ae1c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ae20:	add	x0, x0, #0x168
  40ae24:	bl	402830 <fwrite@plt>
  40ae28:	mov	x0, x20
  40ae2c:	bl	411a28 <ferror@plt+0xf088>
  40ae30:	cbnz	w0, 40ae94 <ferror@plt+0x84f4>
  40ae34:	ldp	x19, x20, [sp, #16]
  40ae38:	ldp	x21, x22, [sp, #32]
  40ae3c:	ldp	x23, x24, [sp, #48]
  40ae40:	ldp	x25, x26, [sp, #64]
  40ae44:	ldp	x27, x28, [sp, #80]
  40ae48:	ldp	x29, x30, [sp], #96
  40ae4c:	ret
  40ae50:	ldr	x1, [x27, #848]
  40ae54:	mov	x0, #0x0                   	// #0
  40ae58:	str	x0, [x3]
  40ae5c:	add	x24, x24, #0x1
  40ae60:	cmp	x1, x24
  40ae64:	b.hi	40aca8 <ferror@plt+0x8308>  // b.pmore
  40ae68:	b	40ae08 <ferror@plt+0x8468>
  40ae6c:	ldrb	w0, [x0, #1]
  40ae70:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ae74:	cbnz	w0, 40ac38 <ferror@plt+0x8298>
  40ae78:	ldr	x0, [x19, #3440]
  40ae7c:	ldrb	w1, [x0]
  40ae80:	cmp	w1, #0xa
  40ae84:	b.ne	40ac38 <ferror@plt+0x8298>  // b.any
  40ae88:	ldrb	w0, [x0, #1]
  40ae8c:	cbz	w0, 40ac7c <ferror@plt+0x82dc>
  40ae90:	b	40ac38 <ferror@plt+0x8298>
  40ae94:	bl	402920 <__errno_location@plt>
  40ae98:	mov	x1, x0
  40ae9c:	ldp	x19, x20, [sp, #16]
  40aea0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aea4:	ldp	x21, x22, [sp, #32]
  40aea8:	add	x2, x2, #0x210
  40aeac:	ldp	x23, x24, [sp, #48]
  40aeb0:	mov	w0, #0x1                   	// #1
  40aeb4:	ldp	x25, x26, [sp, #64]
  40aeb8:	ldp	x27, x28, [sp, #80]
  40aebc:	ldp	x29, x30, [sp], #96
  40aec0:	ldr	w1, [x1]
  40aec4:	b	4033d0 <ferror@plt+0xa30>
  40aec8:	bl	402920 <__errno_location@plt>
  40aecc:	mov	x1, x0
  40aed0:	mov	x3, x19
  40aed4:	adrp	x2, 417000 <ferror@plt+0x14660>
  40aed8:	ldp	x19, x20, [sp, #16]
  40aedc:	add	x2, x2, #0xd08
  40aee0:	ldp	x29, x30, [sp], #96
  40aee4:	mov	w0, #0x1                   	// #1
  40aee8:	ldr	w1, [x1]
  40aeec:	b	4033d0 <ferror@plt+0xa30>
  40aef0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40aef4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40aef8:	add	x2, x2, #0x190
  40aefc:	mov	w1, #0x0                   	// #0
  40af00:	ldr	w0, [x0, #1628]
  40af04:	bl	4033d0 <ferror@plt+0xa30>
  40af08:	bl	4026d0 <abort@plt>
  40af0c:	nop
  40af10:	stp	x29, x30, [sp, #-144]!
  40af14:	mov	x1, #0x0                   	// #0
  40af18:	mov	x29, sp
  40af1c:	stp	x19, x20, [sp, #16]
  40af20:	mov	x19, x0
  40af24:	stp	x21, x22, [sp, #32]
  40af28:	stp	x23, x24, [sp, #48]
  40af2c:	stp	x25, x26, [sp, #64]
  40af30:	stp	x27, x28, [sp, #80]
  40af34:	bl	40faa8 <ferror@plt+0xd108>
  40af38:	mov	x21, x0
  40af3c:	cbz	x0, 40b758 <ferror@plt+0x8db8>
  40af40:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40af44:	add	x20, x1, #0xd40
  40af48:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40af4c:	mov	x0, #0x64                  	// #100
  40af50:	str	x19, [x1, #3416]
  40af54:	bl	416968 <ferror@plt+0x13fc8>
  40af58:	mov	x28, x0
  40af5c:	mov	x0, #0x64                  	// #100
  40af60:	bl	416968 <ferror@plt+0x13fc8>
  40af64:	mov	x25, x0
  40af68:	ldr	w1, [x20]
  40af6c:	mov	x0, x21
  40af70:	add	w1, w1, #0x1
  40af74:	str	w1, [x20]
  40af78:	bl	402640 <getc@plt>
  40af7c:	cmp	w0, #0xa
  40af80:	b.eq	40af68 <ferror@plt+0x85c8>  // b.none
  40af84:	cmp	w0, #0x23
  40af88:	b.eq	40b2f0 <ferror@plt+0x8950>  // b.none
  40af8c:	cmp	w0, #0x56
  40af90:	b.ne	40b30c <ferror@plt+0x896c>  // b.any
  40af94:	mov	x0, x21
  40af98:	bl	402640 <getc@plt>
  40af9c:	cmp	w0, #0xa
  40afa0:	mov	w23, #0xcccc                	// #52428
  40afa4:	mov	w19, w0
  40afa8:	cset	w26, eq  // eq = none
  40afac:	mov	w24, #0x0                   	// #0
  40afb0:	movk	w23, #0xccc, lsl #16
  40afb4:	bl	402770 <__ctype_b_loc@plt>
  40afb8:	mov	x22, x0
  40afbc:	b	40afec <ferror@plt+0x864c>
  40afc0:	cmp	w24, w23
  40afc4:	b.hi	40b328 <ferror@plt+0x8988>  // b.pmore
  40afc8:	sub	w24, w1, #0x30
  40afcc:	cbz	w26, 40afdc <ferror@plt+0x863c>
  40afd0:	ldr	w1, [x20]
  40afd4:	add	w1, w1, #0x1
  40afd8:	str	w1, [x20]
  40afdc:	bl	402640 <getc@plt>
  40afe0:	cmp	w0, #0xa
  40afe4:	mov	w19, w0
  40afe8:	cset	w26, eq  // eq = none
  40afec:	ldr	x2, [x22]
  40aff0:	add	w1, w24, w24, lsl #2
  40aff4:	mov	x0, x21
  40aff8:	add	w1, w19, w1, lsl #1
  40affc:	ldrh	w2, [x2, w19, sxtw #1]
  40b000:	tbnz	w2, #11, 40afc0 <ferror@plt+0x8620>
  40b004:	tbnz	w24, #31, 40b328 <ferror@plt+0x8988>
  40b008:	cmp	w24, #0x1
  40b00c:	b.gt	40b344 <ferror@plt+0x89a4>
  40b010:	b.ne	40b414 <ferror@plt+0x8a74>  // b.any
  40b014:	cmp	w19, #0xa
  40b018:	b.eq	40b020 <ferror@plt+0x8680>  // b.none
  40b01c:	bl	40ab30 <ferror@plt+0x8190>
  40b020:	cbnz	w26, 40b3c4 <ferror@plt+0x8a24>
  40b024:	nop
  40b028:	mov	x0, x21
  40b02c:	bl	402640 <getc@plt>
  40b030:	mov	w19, w0
  40b034:	cmp	w0, #0xa
  40b038:	b.eq	40b3c4 <ferror@plt+0x8a24>  // b.none
  40b03c:	cmp	w0, #0x23
  40b040:	b.eq	40b360 <ferror@plt+0x89c0>  // b.none
  40b044:	cmn	w0, #0x1
  40b048:	b.eq	40b37c <ferror@plt+0x89dc>  // b.none
  40b04c:	mov	w0, #0x64                  	// #100
  40b050:	mov	x26, #0x400b                	// #16395
  40b054:	mov	w24, #0xcccc                	// #52428
  40b058:	mov	w1, w0
  40b05c:	movk	x26, #0x2, lsl #16
  40b060:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b064:	movk	w24, #0xccc, lsl #16
  40b068:	add	x0, x0, #0x2f8
  40b06c:	str	w1, [sp, #124]
  40b070:	str	w1, [sp, #132]
  40b074:	str	x0, [sp, #136]
  40b078:	sub	w1, w19, #0x43
  40b07c:	cmp	w1, #0x11
  40b080:	b.hi	40b094 <ferror@plt+0x86f4>  // b.pmore
  40b084:	mov	x0, #0x1                   	// #1
  40b088:	lsl	x0, x0, x1
  40b08c:	tst	x0, x26
  40b090:	b.ne	40b0a4 <ferror@plt+0x8704>  // b.any
  40b094:	ldr	x2, [sp, #136]
  40b098:	mov	w1, #0x0                   	// #0
  40b09c:	mov	w0, #0x1                   	// #1
  40b0a0:	bl	4033d0 <ferror@plt+0xa30>
  40b0a4:	mov	x0, x21
  40b0a8:	bl	402640 <getc@plt>
  40b0ac:	mov	w23, w0
  40b0b0:	cmp	w0, #0xa
  40b0b4:	b.eq	40b42c <ferror@plt+0x8a8c>  // b.none
  40b0b8:	cmp	w19, #0x44
  40b0bc:	cset	w4, eq  // eq = none
  40b0c0:	cmp	w0, #0x2d
  40b0c4:	csel	w4, w4, wzr, eq  // eq = none
  40b0c8:	sbfiz	x0, x0, #1, #32
  40b0cc:	cbz	w4, 40b434 <ferror@plt+0x8a94>
  40b0d0:	mov	x0, x21
  40b0d4:	bl	402640 <getc@plt>
  40b0d8:	ldr	x1, [x22]
  40b0dc:	mov	w23, w0
  40b0e0:	cmp	w0, #0xa
  40b0e4:	cset	w4, eq  // eq = none
  40b0e8:	ldrh	w0, [x1, w23, sxtw #1]
  40b0ec:	tbz	w0, #11, 40b6d8 <ferror@plt+0x8d38>
  40b0f0:	mov	w27, #0x0                   	// #0
  40b0f4:	b	40b100 <ferror@plt+0x8760>
  40b0f8:	cmp	w27, w24
  40b0fc:	b.hi	40b640 <ferror@plt+0x8ca0>  // b.pmore
  40b100:	add	w27, w27, w27, lsl #2
  40b104:	mov	x0, x21
  40b108:	add	w23, w23, w27, lsl #1
  40b10c:	sub	w27, w23, #0x30
  40b110:	cbz	w4, 40b120 <ferror@plt+0x8780>
  40b114:	ldr	w1, [x20]
  40b118:	add	w1, w1, #0x1
  40b11c:	str	w1, [x20]
  40b120:	bl	402640 <getc@plt>
  40b124:	mov	w23, w0
  40b128:	ldr	x1, [x22]
  40b12c:	cmp	w0, #0xa
  40b130:	cset	w4, eq  // eq = none
  40b134:	ldrh	w0, [x1, w23, sxtw #1]
  40b138:	tbnz	w0, #11, 40b0f8 <ferror@plt+0x8758>
  40b13c:	neg	w1, w27
  40b140:	str	w1, [sp, #128]
  40b144:	mov	w0, #0x80000000            	// #-2147483648
  40b148:	cmp	w27, w0
  40b14c:	b.hi	40b498 <ferror@plt+0x8af8>  // b.pmore
  40b150:	cmp	w23, #0x2c
  40b154:	b.eq	40b178 <ferror@plt+0x87d8>  // b.none
  40b158:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b15c:	mov	w3, #0x2c                  	// #44
  40b160:	add	x2, x2, #0x240
  40b164:	mov	w1, #0x0                   	// #0
  40b168:	mov	w0, #0x1                   	// #1
  40b16c:	str	w4, [sp, #104]
  40b170:	bl	4033d0 <ferror@plt+0xa30>
  40b174:	ldr	w4, [sp, #104]
  40b178:	cbz	w4, 40b188 <ferror@plt+0x87e8>
  40b17c:	ldr	w0, [x20]
  40b180:	add	w0, w0, #0x1
  40b184:	str	w0, [x20]
  40b188:	mov	x0, x21
  40b18c:	bl	402640 <getc@plt>
  40b190:	ldr	x1, [x22]
  40b194:	mov	w3, w0
  40b198:	cmp	w0, #0xa
  40b19c:	cset	w23, eq  // eq = none
  40b1a0:	ldrh	w0, [x1, w3, sxtw #1]
  40b1a4:	tbz	w0, #11, 40b708 <ferror@plt+0x8d68>
  40b1a8:	mov	w27, #0x0                   	// #0
  40b1ac:	b	40b1b8 <ferror@plt+0x8818>
  40b1b0:	cmp	w27, w24
  40b1b4:	b.hi	40b4b8 <ferror@plt+0x8b18>  // b.pmore
  40b1b8:	add	w27, w27, w27, lsl #2
  40b1bc:	mov	x0, x21
  40b1c0:	add	w27, w3, w27, lsl #1
  40b1c4:	sub	w27, w27, #0x30
  40b1c8:	cbz	w23, 40b1d8 <ferror@plt+0x8838>
  40b1cc:	ldr	w1, [x20]
  40b1d0:	add	w1, w1, #0x1
  40b1d4:	str	w1, [x20]
  40b1d8:	bl	402640 <getc@plt>
  40b1dc:	mov	w3, w0
  40b1e0:	ldr	x1, [x22]
  40b1e4:	cmp	w0, #0xa
  40b1e8:	cset	w23, eq  // eq = none
  40b1ec:	ldrh	w0, [x1, w3, sxtw #1]
  40b1f0:	tbnz	w0, #11, 40b1b0 <ferror@plt+0x8810>
  40b1f4:	sxtw	x1, w27
  40b1f8:	str	x1, [sp, #112]
  40b1fc:	str	w1, [sp, #120]
  40b200:	mov	x27, x1
  40b204:	tbnz	w1, #31, 40b4c8 <ferror@plt+0x8b28>
  40b208:	cmp	w3, #0xa
  40b20c:	b.eq	40b214 <ferror@plt+0x8874>  // b.none
  40b210:	bl	40ab30 <ferror@plt+0x8190>
  40b214:	cmp	w19, #0x44
  40b218:	b.ne	40b558 <ferror@plt+0x8bb8>  // b.any
  40b21c:	ldp	w1, w0, [sp, #120]
  40b220:	cmp	w0, w1
  40b224:	b.le	40b4e8 <ferror@plt+0x8b48>
  40b228:	ldr	w0, [sp, #120]
  40b22c:	cmp	w0, #0x0
  40b230:	b.gt	40b504 <ferror@plt+0x8b64>
  40b234:	ldr	x1, [sp, #112]
  40b238:	mov	x0, x25
  40b23c:	strb	wzr, [x25, x1]
  40b240:	b	40b254 <ferror@plt+0x88b4>
  40b244:	ldr	w1, [x20]
  40b248:	add	x0, x0, #0x1
  40b24c:	add	w1, w1, #0x1
  40b250:	str	w1, [x20]
  40b254:	sub	x2, x0, x25
  40b258:	mov	w1, #0xa                   	// #10
  40b25c:	sub	x2, x27, x2
  40b260:	bl	402880 <memchr@plt>
  40b264:	cbnz	x0, 40b244 <ferror@plt+0x88a4>
  40b268:	cbz	w23, 40b278 <ferror@plt+0x88d8>
  40b26c:	ldr	w0, [x20]
  40b270:	add	w0, w0, #0x1
  40b274:	str	w0, [x20]
  40b278:	mov	x0, x21
  40b27c:	bl	402640 <getc@plt>
  40b280:	cmp	w0, #0xa
  40b284:	b.eq	40b5cc <ferror@plt+0x8c2c>  // b.none
  40b288:	bl	40ab30 <ferror@plt+0x8190>
  40b28c:	cmp	w19, #0x46
  40b290:	b.eq	40b6bc <ferror@plt+0x8d1c>  // b.none
  40b294:	b.gt	40b534 <ferror@plt+0x8b94>
  40b298:	cmp	w19, #0x43
  40b29c:	b.eq	40b738 <ferror@plt+0x8d98>  // b.none
  40b2a0:	cmp	w19, #0x44
  40b2a4:	b.ne	40b2c8 <ferror@plt+0x8928>  // b.any
  40b2a8:	ldr	w0, [sp, #128]
  40b2ac:	bl	40f300 <ferror@plt+0xc960>
  40b2b0:	ldr	w0, [sp, #120]
  40b2b4:	cmp	w0, #0x0
  40b2b8:	b.le	40b2c8 <ferror@plt+0x8928>
  40b2bc:	mov	w1, w0
  40b2c0:	mov	x0, x25
  40b2c4:	bl	40e698 <ferror@plt+0xbcf8>
  40b2c8:	mov	x0, x21
  40b2cc:	bl	402640 <getc@plt>
  40b2d0:	mov	w19, w0
  40b2d4:	cmp	w0, #0xa
  40b2d8:	b.eq	40b404 <ferror@plt+0x8a64>  // b.none
  40b2dc:	cmp	w0, #0x23
  40b2e0:	b.eq	40b3dc <ferror@plt+0x8a3c>  // b.none
  40b2e4:	cmn	w0, #0x1
  40b2e8:	b.ne	40b078 <ferror@plt+0x86d8>  // b.any
  40b2ec:	b	40b37c <ferror@plt+0x89dc>
  40b2f0:	mov	x0, x21
  40b2f4:	bl	402640 <getc@plt>
  40b2f8:	cmp	w0, #0xa
  40b2fc:	b.eq	40af68 <ferror@plt+0x85c8>  // b.none
  40b300:	cmn	w0, #0x1
  40b304:	b.ne	40b2f0 <ferror@plt+0x8950>  // b.any
  40b308:	bl	40ab30 <ferror@plt+0x8190>
  40b30c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b310:	mov	w3, #0x56                  	// #86
  40b314:	add	x2, x2, #0x240
  40b318:	mov	w1, #0x0                   	// #0
  40b31c:	mov	w0, #0x1                   	// #1
  40b320:	bl	4033d0 <ferror@plt+0xa30>
  40b324:	b	40af94 <ferror@plt+0x85f4>
  40b328:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b32c:	mov	w1, #0x0                   	// #0
  40b330:	add	x2, x2, #0x268
  40b334:	mov	w0, #0x1                   	// #1
  40b338:	bl	4033d0 <ferror@plt+0xa30>
  40b33c:	cmp	w24, #0x1
  40b340:	b.le	40b414 <ferror@plt+0x8a74>
  40b344:	mov	w3, w24
  40b348:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b34c:	mov	w1, #0x0                   	// #0
  40b350:	add	x2, x2, #0x288
  40b354:	mov	w0, #0x3f                  	// #63
  40b358:	bl	4033d0 <ferror@plt+0xa30>
  40b35c:	b	40b014 <ferror@plt+0x8674>
  40b360:	mov	x0, x21
  40b364:	bl	402640 <getc@plt>
  40b368:	cmp	w0, #0xa
  40b36c:	b.eq	40b3c4 <ferror@plt+0x8a24>  // b.none
  40b370:	cmn	w0, #0x1
  40b374:	b.ne	40b360 <ferror@plt+0x89c0>  // b.any
  40b378:	bl	40ab30 <ferror@plt+0x8190>
  40b37c:	mov	x0, x28
  40b380:	bl	4027c0 <free@plt>
  40b384:	mov	x0, x25
  40b388:	bl	4027c0 <free@plt>
  40b38c:	mov	x0, x21
  40b390:	bl	411a28 <ferror@plt+0xf088>
  40b394:	cbnz	w0, 40b718 <ferror@plt+0x8d78>
  40b398:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b39c:	ldp	x19, x20, [sp, #16]
  40b3a0:	str	xzr, [x0, #3416]
  40b3a4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b3a8:	ldp	x21, x22, [sp, #32]
  40b3ac:	str	wzr, [x0, #3392]
  40b3b0:	ldp	x23, x24, [sp, #48]
  40b3b4:	ldp	x25, x26, [sp, #64]
  40b3b8:	ldp	x27, x28, [sp, #80]
  40b3bc:	ldp	x29, x30, [sp], #144
  40b3c0:	ret
  40b3c4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b3c8:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b3cc:	ldr	w0, [x0, #3392]
  40b3d0:	add	w0, w0, #0x1
  40b3d4:	str	w0, [x1, #3392]
  40b3d8:	b	40b028 <ferror@plt+0x8688>
  40b3dc:	mov	x0, x21
  40b3e0:	bl	402640 <getc@plt>
  40b3e4:	cmp	w0, #0xa
  40b3e8:	b.eq	40b404 <ferror@plt+0x8a64>  // b.none
  40b3ec:	cmn	w0, #0x1
  40b3f0:	b.eq	40b378 <ferror@plt+0x89d8>  // b.none
  40b3f4:	mov	x0, x21
  40b3f8:	bl	402640 <getc@plt>
  40b3fc:	cmp	w0, #0xa
  40b400:	b.ne	40b3ec <ferror@plt+0x8a4c>  // b.any
  40b404:	ldr	w0, [x20]
  40b408:	add	w0, w0, #0x1
  40b40c:	str	w0, [x20]
  40b410:	b	40b2c8 <ferror@plt+0x8928>
  40b414:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b418:	mov	w1, #0x0                   	// #0
  40b41c:	add	x2, x2, #0x2c0
  40b420:	mov	w0, #0x1                   	// #1
  40b424:	bl	4033d0 <ferror@plt+0xa30>
  40b428:	b	40b014 <ferror@plt+0x8674>
  40b42c:	mov	x0, #0x14                  	// #20
  40b430:	mov	w4, #0x1                   	// #1
  40b434:	ldr	x1, [x22]
  40b438:	mov	w27, #0x0                   	// #0
  40b43c:	ldrh	w0, [x1, x0]
  40b440:	tbnz	w0, #11, 40b450 <ferror@plt+0x8ab0>
  40b444:	b	40b6d8 <ferror@plt+0x8d38>
  40b448:	cmp	w27, w24
  40b44c:	b.hi	40b638 <ferror@plt+0x8c98>  // b.pmore
  40b450:	add	w27, w27, w27, lsl #2
  40b454:	mov	x0, x21
  40b458:	add	w23, w23, w27, lsl #1
  40b45c:	sub	w27, w23, #0x30
  40b460:	cbz	w4, 40b470 <ferror@plt+0x8ad0>
  40b464:	ldr	w1, [x20]
  40b468:	add	w1, w1, #0x1
  40b46c:	str	w1, [x20]
  40b470:	bl	402640 <getc@plt>
  40b474:	mov	w23, w0
  40b478:	ldr	x1, [x22]
  40b47c:	cmp	w0, #0xa
  40b480:	cset	w4, eq  // eq = none
  40b484:	ldrh	w0, [x1, w23, sxtw #1]
  40b488:	tbnz	w0, #11, 40b448 <ferror@plt+0x8aa8>
  40b48c:	str	w27, [sp, #128]
  40b490:	tbz	w27, #31, 40b150 <ferror@plt+0x87b0>
  40b494:	nop
  40b498:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b49c:	mov	w1, #0x0                   	// #0
  40b4a0:	add	x2, x2, #0x268
  40b4a4:	mov	w0, #0x1                   	// #1
  40b4a8:	str	w4, [sp, #104]
  40b4ac:	bl	4033d0 <ferror@plt+0xa30>
  40b4b0:	ldr	w4, [sp, #104]
  40b4b4:	b	40b150 <ferror@plt+0x87b0>
  40b4b8:	sxtw	x0, w27
  40b4bc:	str	w27, [sp, #120]
  40b4c0:	mov	x27, x0
  40b4c4:	str	x0, [sp, #112]
  40b4c8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b4cc:	mov	w1, #0x0                   	// #0
  40b4d0:	add	x2, x2, #0x268
  40b4d4:	mov	w0, #0x1                   	// #1
  40b4d8:	str	w3, [sp, #104]
  40b4dc:	bl	4033d0 <ferror@plt+0xa30>
  40b4e0:	ldr	w3, [sp, #104]
  40b4e4:	b	40b208 <ferror@plt+0x8868>
  40b4e8:	add	w0, w1, #0x1
  40b4ec:	str	w0, [sp, #124]
  40b4f0:	mov	x0, x25
  40b4f4:	bl	4027c0 <free@plt>
  40b4f8:	ldrsw	x0, [sp, #124]
  40b4fc:	bl	416968 <ferror@plt+0x13fc8>
  40b500:	mov	x25, x0
  40b504:	ldr	x1, [sp, #112]
  40b508:	mov	x3, x21
  40b50c:	mov	x0, x25
  40b510:	mov	x2, #0x1                   	// #1
  40b514:	bl	4027b0 <fread@plt>
  40b518:	cbnz	x0, 40b234 <ferror@plt+0x8894>
  40b51c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b520:	mov	w1, #0x0                   	// #0
  40b524:	add	x2, x2, #0x310
  40b528:	mov	w0, #0x1                   	// #1
  40b52c:	bl	4033d0 <ferror@plt+0xa30>
  40b530:	b	40b234 <ferror@plt+0x8894>
  40b534:	cmp	w19, #0x51
  40b538:	b.eq	40b748 <ferror@plt+0x8da8>  // b.none
  40b53c:	cmp	w19, #0x54
  40b540:	b.ne	40b2c8 <ferror@plt+0x8928>  // b.any
  40b544:	mov	x1, x25
  40b548:	mov	x0, x28
  40b54c:	mov	w2, #0x3                   	// #3
  40b550:	bl	407a28 <ferror@plt+0x5088>
  40b554:	b	40b2c8 <ferror@plt+0x8928>
  40b558:	ldp	w1, w0, [sp, #128]
  40b55c:	cmp	w0, w1
  40b560:	b.le	40b684 <ferror@plt+0x8ce4>
  40b564:	ldr	w0, [sp, #128]
  40b568:	cmp	w0, #0x0
  40b56c:	sxtw	x0, w0
  40b570:	str	x0, [sp, #104]
  40b574:	b.le	40b590 <ferror@plt+0x8bf0>
  40b578:	mov	x1, x0
  40b57c:	mov	x3, x21
  40b580:	mov	x0, x28
  40b584:	mov	x2, #0x1                   	// #1
  40b588:	bl	4027b0 <fread@plt>
  40b58c:	cbz	x0, 40b6a4 <ferror@plt+0x8d04>
  40b590:	ldr	x1, [sp, #104]
  40b594:	mov	x0, x28
  40b598:	strb	wzr, [x28, x1]
  40b59c:	b	40b5b0 <ferror@plt+0x8c10>
  40b5a0:	ldr	w1, [x20]
  40b5a4:	add	x0, x0, #0x1
  40b5a8:	add	w1, w1, #0x1
  40b5ac:	str	w1, [x20]
  40b5b0:	ldr	x1, [sp, #104]
  40b5b4:	sub	x2, x0, x28
  40b5b8:	sub	x2, x1, x2
  40b5bc:	mov	w1, #0xa                   	// #10
  40b5c0:	bl	402880 <memchr@plt>
  40b5c4:	cbnz	x0, 40b5a0 <ferror@plt+0x8c00>
  40b5c8:	b	40b21c <ferror@plt+0x887c>
  40b5cc:	cmp	w19, #0x46
  40b5d0:	b.eq	40b6e0 <ferror@plt+0x8d40>  // b.none
  40b5d4:	b.gt	40b608 <ferror@plt+0x8c68>
  40b5d8:	cmp	w19, #0x43
  40b5dc:	b.eq	40b64c <ferror@plt+0x8cac>  // b.none
  40b5e0:	cmp	w19, #0x44
  40b5e4:	b.ne	40b404 <ferror@plt+0x8a64>  // b.any
  40b5e8:	ldr	w0, [sp, #128]
  40b5ec:	bl	40f300 <ferror@plt+0xc960>
  40b5f0:	ldr	w1, [sp, #120]
  40b5f4:	cmp	w1, #0x0
  40b5f8:	b.le	40b404 <ferror@plt+0x8a64>
  40b5fc:	mov	x0, x25
  40b600:	bl	40e698 <ferror@plt+0xbcf8>
  40b604:	b	40b404 <ferror@plt+0x8a64>
  40b608:	cmp	w19, #0x51
  40b60c:	b.eq	40b668 <ferror@plt+0x8cc8>  // b.none
  40b610:	cmp	w19, #0x54
  40b614:	b.ne	40b404 <ferror@plt+0x8a64>  // b.any
  40b618:	mov	x0, x28
  40b61c:	mov	x1, x25
  40b620:	mov	w2, #0x3                   	// #3
  40b624:	bl	407a28 <ferror@plt+0x5088>
  40b628:	ldr	w0, [x20]
  40b62c:	add	w0, w0, #0x1
  40b630:	str	w0, [x20]
  40b634:	b	40b2c8 <ferror@plt+0x8928>
  40b638:	str	w27, [sp, #128]
  40b63c:	b	40b498 <ferror@plt+0x8af8>
  40b640:	neg	w0, w27
  40b644:	str	w0, [sp, #128]
  40b648:	b	40b498 <ferror@plt+0x8af8>
  40b64c:	mov	x0, x28
  40b650:	mov	x1, x25
  40b654:	bl	40c888 <ferror@plt+0x9ee8>
  40b658:	ldr	w0, [x20]
  40b65c:	add	w0, w0, #0x1
  40b660:	str	w0, [x20]
  40b664:	b	40b2c8 <ferror@plt+0x8928>
  40b668:	mov	x0, x28
  40b66c:	mov	x1, x25
  40b670:	bl	40c7c8 <ferror@plt+0x9e28>
  40b674:	ldr	w0, [x20]
  40b678:	add	w0, w0, #0x1
  40b67c:	str	w0, [x20]
  40b680:	b	40b2c8 <ferror@plt+0x8928>
  40b684:	add	w0, w1, #0x1
  40b688:	str	w0, [sp, #132]
  40b68c:	mov	x0, x28
  40b690:	bl	4027c0 <free@plt>
  40b694:	ldrsw	x0, [sp, #132]
  40b698:	bl	416968 <ferror@plt+0x13fc8>
  40b69c:	mov	x28, x0
  40b6a0:	b	40b564 <ferror@plt+0x8bc4>
  40b6a4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b6a8:	mov	w1, #0x0                   	// #0
  40b6ac:	add	x2, x2, #0x310
  40b6b0:	mov	w0, #0x1                   	// #1
  40b6b4:	bl	4033d0 <ferror@plt+0xa30>
  40b6b8:	b	40b590 <ferror@plt+0x8bf0>
  40b6bc:	mov	x0, x25
  40b6c0:	bl	407708 <ferror@plt+0x4d68>
  40b6c4:	mov	w2, #0x3                   	// #3
  40b6c8:	mov	x1, x0
  40b6cc:	mov	x0, x28
  40b6d0:	bl	4078e8 <ferror@plt+0x4f48>
  40b6d4:	b	40b2c8 <ferror@plt+0x8928>
  40b6d8:	str	wzr, [sp, #128]
  40b6dc:	b	40b150 <ferror@plt+0x87b0>
  40b6e0:	mov	x0, x25
  40b6e4:	bl	407708 <ferror@plt+0x4d68>
  40b6e8:	mov	w2, #0x3                   	// #3
  40b6ec:	mov	x1, x0
  40b6f0:	mov	x0, x28
  40b6f4:	bl	4078e8 <ferror@plt+0x4f48>
  40b6f8:	ldr	w0, [x20]
  40b6fc:	add	w0, w0, #0x1
  40b700:	str	w0, [x20]
  40b704:	b	40b2c8 <ferror@plt+0x8928>
  40b708:	mov	x27, #0x0                   	// #0
  40b70c:	str	xzr, [sp, #112]
  40b710:	str	wzr, [sp, #120]
  40b714:	b	40b208 <ferror@plt+0x8868>
  40b718:	bl	402920 <__errno_location@plt>
  40b71c:	mov	x1, x0
  40b720:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b724:	mov	w0, #0x1                   	// #1
  40b728:	add	x2, x2, #0x330
  40b72c:	ldr	w1, [x1]
  40b730:	bl	4033d0 <ferror@plt+0xa30>
  40b734:	b	40b398 <ferror@plt+0x89f8>
  40b738:	mov	x1, x25
  40b73c:	mov	x0, x28
  40b740:	bl	40c888 <ferror@plt+0x9ee8>
  40b744:	b	40b2c8 <ferror@plt+0x8928>
  40b748:	mov	x1, x25
  40b74c:	mov	x0, x28
  40b750:	bl	40c7c8 <ferror@plt+0x9e28>
  40b754:	b	40b2c8 <ferror@plt+0x8928>
  40b758:	bl	402920 <__errno_location@plt>
  40b75c:	mov	x1, x0
  40b760:	mov	x3, x19
  40b764:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b768:	mov	w0, #0x1                   	// #1
  40b76c:	add	x2, x2, #0x230
  40b770:	ldr	w1, [x1]
  40b774:	bl	4033d0 <ferror@plt+0xa30>
  40b778:	b	40af40 <ferror@plt+0x85a0>
  40b77c:	nop
  40b780:	stp	x29, x30, [sp, #-48]!
  40b784:	mov	x29, sp
  40b788:	stp	x21, x22, [sp, #32]
  40b78c:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  40b790:	stp	x19, x20, [sp, #16]
  40b794:	ldr	x19, [x21, #2128]
  40b798:	ldr	w0, [x19, #8]
  40b79c:	ldr	x22, [x19]
  40b7a0:	cmp	w0, #0x1
  40b7a4:	b.eq	40b7d0 <ferror@plt+0x8e30>  // b.none
  40b7a8:	add	x20, x21, #0x850
  40b7ac:	tst	w0, #0xfffffffd
  40b7b0:	b.eq	40b848 <ferror@plt+0x8ea8>  // b.none
  40b7b4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40b7b8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b7bc:	add	x2, x2, #0x3a8
  40b7c0:	mov	w1, #0x0                   	// #0
  40b7c4:	ldr	w0, [x0, #1628]
  40b7c8:	bl	4033d0 <ferror@plt+0xa30>
  40b7cc:	bl	4026d0 <abort@plt>
  40b7d0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40b7d4:	ldr	w0, [x0, #1644]
  40b7d8:	tbz	w0, #8, 40b818 <ferror@plt+0x8e78>
  40b7dc:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40b7e0:	ldr	x0, [x20, #2016]
  40b7e4:	cbz	x22, 40b8b0 <ferror@plt+0x8f10>
  40b7e8:	cbz	x0, 40b818 <ferror@plt+0x8e78>
  40b7ec:	bl	408bd0 <ferror@plt+0x6230>
  40b7f0:	ldr	w3, [x22, #24]
  40b7f4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b7f8:	ldr	x0, [x20, #2016]
  40b7fc:	add	x1, x1, #0x350
  40b800:	ldr	x2, [x22, #16]
  40b804:	bl	416d88 <ferror@plt+0x143e8>
  40b808:	ldr	x1, [x20, #2016]
  40b80c:	mov	w0, #0xa                   	// #10
  40b810:	bl	402430 <putc@plt>
  40b814:	ldr	x19, [x21, #2128]
  40b818:	ldr	x0, [x19, #32]
  40b81c:	bl	4029a0 <ferror@plt>
  40b820:	cbnz	w0, 40b8dc <ferror@plt+0x8f3c>
  40b824:	ldrb	w0, [x19, #40]
  40b828:	tbnz	w0, #1, 40b910 <ferror@plt+0x8f70>
  40b82c:	ldrb	w0, [x19, #40]
  40b830:	add	x20, x21, #0x850
  40b834:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b838:	mov	w2, #0xffffffff            	// #-1
  40b83c:	ubfx	x0, x0, #2, #1
  40b840:	str	w2, [x1, #3472]
  40b844:	strb	w0, [x20, #8]
  40b848:	ldr	x0, [x20, #16]
  40b84c:	ldr	x1, [x0, #8]
  40b850:	cmp	x1, x19
  40b854:	b.cs	40b864 <ferror@plt+0x8ec4>  // b.hs, b.nlast
  40b858:	ldr	x1, [x0, #32]
  40b85c:	cmp	x1, x19
  40b860:	b.hi	40b88c <ferror@plt+0x8eec>  // b.pmore
  40b864:	mov	x1, x19
  40b868:	bl	4176f8 <_obstack_free@@Base>
  40b86c:	mov	w0, #0x1                   	// #1
  40b870:	str	x22, [x21, #2128]
  40b874:	strb	w0, [x20, #32]
  40b878:	ldp	x21, x22, [sp, #32]
  40b87c:	str	xzr, [x20, #24]
  40b880:	ldp	x19, x20, [sp, #16]
  40b884:	ldp	x29, x30, [sp], #48
  40b888:	ret
  40b88c:	str	x22, [x21, #2128]
  40b890:	stp	x19, x19, [x0, #16]
  40b894:	mov	w0, #0x1                   	// #1
  40b898:	strb	w0, [x20, #32]
  40b89c:	ldp	x21, x22, [sp, #32]
  40b8a0:	str	xzr, [x20, #24]
  40b8a4:	ldp	x19, x20, [sp, #16]
  40b8a8:	ldp	x29, x30, [sp], #48
  40b8ac:	ret
  40b8b0:	cbz	x0, 40b818 <ferror@plt+0x8e78>
  40b8b4:	bl	408bd0 <ferror@plt+0x6230>
  40b8b8:	ldr	x0, [x20, #2016]
  40b8bc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b8c0:	add	x1, x1, #0x370
  40b8c4:	bl	416d88 <ferror@plt+0x143e8>
  40b8c8:	ldr	x1, [x20, #2016]
  40b8cc:	mov	w0, #0xa                   	// #10
  40b8d0:	bl	402430 <putc@plt>
  40b8d4:	ldr	x19, [x21, #2128]
  40b8d8:	b	40b818 <ferror@plt+0x8e78>
  40b8dc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40b8e0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b8e4:	mov	w1, #0x0                   	// #0
  40b8e8:	add	x2, x2, #0x380
  40b8ec:	ldr	w0, [x0, #1628]
  40b8f0:	bl	4033d0 <ferror@plt+0xa30>
  40b8f4:	ldr	x19, [x21, #2128]
  40b8f8:	ldrb	w0, [x19, #40]
  40b8fc:	tbnz	w0, #1, 40b928 <ferror@plt+0x8f88>
  40b900:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b904:	mov	w1, #0x1                   	// #1
  40b908:	str	w1, [x0, #3384]
  40b90c:	b	40b82c <ferror@plt+0x8e8c>
  40b910:	ldr	x0, [x19, #32]
  40b914:	bl	4170d0 <ferror@plt+0x14730>
  40b918:	cmn	w0, #0x1
  40b91c:	b.eq	40b938 <ferror@plt+0x8f98>  // b.none
  40b920:	ldr	x19, [x21, #2128]
  40b924:	b	40b82c <ferror@plt+0x8e8c>
  40b928:	ldr	x0, [x19, #32]
  40b92c:	bl	4170d0 <ferror@plt+0x14730>
  40b930:	ldr	x19, [x21, #2128]
  40b934:	b	40b900 <ferror@plt+0x8f60>
  40b938:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40b93c:	ldr	w19, [x0, #1628]
  40b940:	bl	402920 <__errno_location@plt>
  40b944:	mov	x1, x0
  40b948:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b94c:	mov	w0, w19
  40b950:	add	x2, x2, #0x390
  40b954:	ldr	w1, [x1]
  40b958:	bl	4033d0 <ferror@plt+0xa30>
  40b95c:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b960:	mov	w1, #0x1                   	// #1
  40b964:	ldr	x19, [x21, #2128]
  40b968:	str	w1, [x0, #3384]
  40b96c:	b	40b82c <ferror@plt+0x8e8c>
  40b970:	stp	x29, x30, [sp, #-48]!
  40b974:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40b978:	mov	x29, sp
  40b97c:	stp	x19, x20, [sp, #16]
  40b980:	add	x19, x0, #0x850
  40b984:	ldr	x0, [x0, #2128]
  40b988:	cbz	x0, 40ba28 <ferror@plt+0x9088>
  40b98c:	adrp	x20, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b990:	add	x20, x20, #0xd40
  40b994:	str	x21, [sp, #32]
  40b998:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40b99c:	ldrb	w1, [x19, #32]
  40b9a0:	cbz	w1, 40b9b8 <ferror@plt+0x9018>
  40b9a4:	ldr	x1, [x0, #16]
  40b9a8:	str	x1, [x21, #3416]
  40b9ac:	ldr	w1, [x0, #24]
  40b9b0:	str	w1, [x20]
  40b9b4:	strb	wzr, [x19, #32]
  40b9b8:	ldr	w1, [x0, #8]
  40b9bc:	cmp	w1, #0x1
  40b9c0:	b.eq	40ba04 <ferror@plt+0x9064>  // b.none
  40b9c4:	cmp	w1, #0x2
  40b9c8:	b.ne	40b9e4 <ferror@plt+0x9044>  // b.any
  40b9cc:	bl	40b780 <ferror@plt+0x8de0>
  40b9d0:	ldr	x21, [sp, #32]
  40b9d4:	mov	w0, #0x101                 	// #257
  40b9d8:	ldp	x19, x20, [sp, #16]
  40b9dc:	ldp	x29, x30, [sp], #48
  40b9e0:	ret
  40b9e4:	cbz	w1, 40ba48 <ferror@plt+0x90a8>
  40b9e8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40b9ec:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40b9f0:	add	x2, x2, #0x3e0
  40b9f4:	mov	w1, #0x0                   	// #0
  40b9f8:	ldr	w0, [x0, #1628]
  40b9fc:	bl	4033d0 <ferror@plt+0xa30>
  40ba00:	bl	4026d0 <abort@plt>
  40ba04:	ldrb	w1, [x19, #8]
  40ba08:	cbnz	w1, 40ba64 <ferror@plt+0x90c4>
  40ba0c:	ldrb	w1, [x0, #40]
  40ba10:	tbz	w1, #0, 40ba80 <ferror@plt+0x90e0>
  40ba14:	nop
  40ba18:	bl	40b780 <ferror@plt+0x8de0>
  40ba1c:	ldr	x0, [x19]
  40ba20:	cbnz	x0, 40b99c <ferror@plt+0x8ffc>
  40ba24:	ldr	x21, [sp, #32]
  40ba28:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ba2c:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ba30:	adrp	x1, 417000 <ferror@plt+0x14660>
  40ba34:	mov	w0, #0x100                 	// #256
  40ba38:	add	x1, x1, #0xe98
  40ba3c:	str	wzr, [x3, #3392]
  40ba40:	str	x1, [x2, #3416]
  40ba44:	b	40b9d8 <ferror@plt+0x9038>
  40ba48:	ldr	x1, [x0, #32]
  40ba4c:	add	x2, x1, #0x1
  40ba50:	str	x2, [x0, #32]
  40ba54:	ldrb	w0, [x1]
  40ba58:	cbz	w0, 40ba18 <ferror@plt+0x9078>
  40ba5c:	ldr	x21, [sp, #32]
  40ba60:	b	40b9d8 <ferror@plt+0x9038>
  40ba64:	ldr	w1, [x0, #24]
  40ba68:	strb	wzr, [x19, #8]
  40ba6c:	add	w1, w1, #0x1
  40ba70:	str	w1, [x20]
  40ba74:	str	w1, [x0, #24]
  40ba78:	ldrb	w1, [x0, #40]
  40ba7c:	tbnz	w1, #0, 40ba18 <ferror@plt+0x9078>
  40ba80:	ldr	x0, [x0, #32]
  40ba84:	bl	402640 <getc@plt>
  40ba88:	cmn	w0, #0x1
  40ba8c:	b.eq	40ba18 <ferror@plt+0x9078>  // b.none
  40ba90:	cmp	w0, #0xa
  40ba94:	b.ne	40ba5c <ferror@plt+0x90bc>  // b.any
  40ba98:	mov	w1, #0x1                   	// #1
  40ba9c:	strb	w1, [x19, #8]
  40baa0:	ldr	x21, [sp, #32]
  40baa4:	b	40b9d8 <ferror@plt+0x9038>
  40baa8:	stp	x29, x30, [sp, #-32]!
  40baac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40bab0:	mov	x29, sp
  40bab4:	stp	x19, x20, [sp, #16]
  40bab8:	ldr	x19, [x0, #2128]
  40babc:	cbz	x19, 40bb30 <ferror@plt+0x9190>
  40bac0:	ldr	w0, [x19, #8]
  40bac4:	cmp	w0, #0x1
  40bac8:	b.eq	40bb08 <ferror@plt+0x9168>  // b.none
  40bacc:	cmp	w0, #0x2
  40bad0:	b.ne	40bae8 <ferror@plt+0x9148>  // b.any
  40bad4:	mov	w20, #0x101                 	// #257
  40bad8:	mov	w0, w20
  40badc:	ldp	x19, x20, [sp, #16]
  40bae0:	ldp	x29, x30, [sp], #32
  40bae4:	ret
  40bae8:	cbz	w0, 40bb38 <ferror@plt+0x9198>
  40baec:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40baf0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40baf4:	add	x2, x2, #0x418
  40baf8:	mov	w1, #0x0                   	// #0
  40bafc:	ldr	w0, [x0, #1628]
  40bb00:	bl	4033d0 <ferror@plt+0xa30>
  40bb04:	bl	4026d0 <abort@plt>
  40bb08:	ldr	x0, [x19, #32]
  40bb0c:	bl	402640 <getc@plt>
  40bb10:	mov	w20, w0
  40bb14:	cmn	w0, #0x1
  40bb18:	b.ne	40bb48 <ferror@plt+0x91a8>  // b.any
  40bb1c:	ldrb	w0, [x19, #40]
  40bb20:	orr	w0, w0, #0x1
  40bb24:	strb	w0, [x19, #40]
  40bb28:	ldr	x19, [x19]
  40bb2c:	cbnz	x19, 40bac0 <ferror@plt+0x9120>
  40bb30:	mov	w20, #0x100                 	// #256
  40bb34:	b	40bad8 <ferror@plt+0x9138>
  40bb38:	ldr	x0, [x19, #32]
  40bb3c:	ldrb	w20, [x0]
  40bb40:	cbz	w20, 40bb28 <ferror@plt+0x9188>
  40bb44:	b	40bad8 <ferror@plt+0x9138>
  40bb48:	ldr	x1, [x19, #32]
  40bb4c:	bl	4027d0 <ungetc@plt>
  40bb50:	b	40bad8 <ferror@plt+0x9138>
  40bb54:	nop
  40bb58:	stp	x29, x30, [sp, #-80]!
  40bb5c:	mov	x29, sp
  40bb60:	stp	x19, x20, [sp, #16]
  40bb64:	stp	x23, x24, [sp, #48]
  40bb68:	adrp	x24, 431000 <_obstack_memory_used@@Base+0x19878>
  40bb6c:	add	x19, x24, #0x850
  40bb70:	stp	x25, x26, [sp, #64]
  40bb74:	mov	x25, x1
  40bb78:	mov	x23, x0
  40bb7c:	ldr	x1, [x19, #24]
  40bb80:	stp	x21, x22, [sp, #32]
  40bb84:	and	w22, w2, #0xff
  40bb88:	cbz	x1, 40bbb0 <ferror@plt+0x9210>
  40bb8c:	ldr	x0, [x19, #16]
  40bb90:	ldr	x2, [x0, #8]
  40bb94:	cmp	x1, x2
  40bb98:	b.ls	40bd34 <ferror@plt+0x9394>  // b.plast
  40bb9c:	ldr	x2, [x0, #32]
  40bba0:	cmp	x1, x2
  40bba4:	b.cs	40bd34 <ferror@plt+0x9394>  // b.hs, b.nlast
  40bba8:	stp	x1, x1, [x0, #16]
  40bbac:	str	xzr, [x19, #24]
  40bbb0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40bbb4:	ldr	w0, [x0, #1644]
  40bbb8:	tbz	w0, #8, 40bbec <ferror@plt+0x924c>
  40bbbc:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40bbc0:	ldr	x0, [x20, #2016]
  40bbc4:	cbz	x0, 40bbec <ferror@plt+0x924c>
  40bbc8:	bl	408bd0 <ferror@plt+0x6230>
  40bbcc:	ldr	x0, [x20, #2016]
  40bbd0:	mov	x2, x25
  40bbd4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40bbd8:	add	x1, x1, #0x450
  40bbdc:	bl	416d88 <ferror@plt+0x143e8>
  40bbe0:	ldr	x1, [x20, #2016]
  40bbe4:	mov	w0, #0xa                   	// #10
  40bbe8:	bl	402430 <putc@plt>
  40bbec:	ldr	x20, [x19, #16]
  40bbf0:	ldp	x2, x3, [x20, #24]
  40bbf4:	sub	x0, x3, x2
  40bbf8:	cmp	x0, #0x2f
  40bbfc:	b.ls	40bd4c <ferror@plt+0x93ac>  // b.plast
  40bc00:	ldr	x21, [x20, #16]
  40bc04:	add	x2, x2, #0x30
  40bc08:	cmp	x2, x21
  40bc0c:	b.eq	40bd6c <ferror@plt+0x93cc>  // b.none
  40bc10:	ldr	x0, [x20, #48]
  40bc14:	ldr	x1, [x20, #8]
  40bc18:	add	x2, x2, x0
  40bc1c:	bic	x2, x2, x0
  40bc20:	str	x2, [x20, #24]
  40bc24:	sub	x0, x2, x1
  40bc28:	sub	x1, x3, x1
  40bc2c:	cmp	x0, x1
  40bc30:	b.ls	40bc3c <ferror@plt+0x929c>  // b.plast
  40bc34:	mov	x2, x3
  40bc38:	str	x3, [x20, #24]
  40bc3c:	str	x2, [x20, #16]
  40bc40:	mov	w0, #0x1                   	// #1
  40bc44:	str	w0, [x21, #8]
  40bc48:	mov	x0, x25
  40bc4c:	bl	402390 <strlen@plt>
  40bc50:	add	x1, x0, #0x1
  40bc54:	mov	x20, x0
  40bc58:	add	x3, x19, #0x28
  40bc5c:	ldp	x0, x2, [x19, #64]
  40bc60:	sub	x2, x2, x0
  40bc64:	cmp	x1, x2
  40bc68:	b.hi	40bd40 <ferror@plt+0x93a0>  // b.pmore
  40bc6c:	ldr	x0, [x19, #64]
  40bc70:	mov	x1, x25
  40bc74:	mov	x2, x20
  40bc78:	bl	402350 <memcpy@plt>
  40bc7c:	ldr	x1, [x19, #64]
  40bc80:	add	x0, x1, x20
  40bc84:	add	x0, x0, #0x1
  40bc88:	str	x0, [x19, #64]
  40bc8c:	strb	wzr, [x1, x20]
  40bc90:	ldp	x4, x3, [x19, #56]
  40bc94:	cmp	x3, x4
  40bc98:	b.eq	40bd7c <ferror@plt+0x93dc>  // b.none
  40bc9c:	ldr	x0, [x19, #88]
  40bca0:	ldr	x2, [x19, #48]
  40bca4:	add	x3, x3, x0
  40bca8:	ldr	x5, [x19, #72]
  40bcac:	bic	x0, x3, x0
  40bcb0:	str	x0, [x19, #64]
  40bcb4:	sub	x3, x0, x2
  40bcb8:	sub	x2, x5, x2
  40bcbc:	cmp	x3, x2
  40bcc0:	b.ls	40bccc <ferror@plt+0x932c>  // b.plast
  40bcc4:	mov	x0, x5
  40bcc8:	str	x5, [x19, #64]
  40bccc:	ldrb	w2, [x19, #8]
  40bcd0:	adrp	x5, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40bcd4:	ldrb	w1, [x21, #40]
  40bcd8:	mov	w6, #0xffffffff            	// #-1
  40bcdc:	ldr	x3, [x24, #2128]
  40bce0:	ubfiz	w2, w2, #2, #6
  40bce4:	orr	w22, w2, w22, lsl #1
  40bce8:	and	w1, w1, #0xfffffff8
  40bcec:	str	w6, [x5, #3472]
  40bcf0:	and	w22, w22, #0x7
  40bcf4:	str	x0, [x19, #56]
  40bcf8:	orr	w22, w22, w1
  40bcfc:	mov	w0, #0x1                   	// #1
  40bd00:	strb	w0, [x19, #32]
  40bd04:	strb	w22, [x21, #40]
  40bd08:	ldp	x19, x20, [sp, #16]
  40bd0c:	str	x21, [x24, #2128]
  40bd10:	ldp	x25, x26, [sp, #64]
  40bd14:	str	x3, [x21]
  40bd18:	str	x4, [x21, #16]
  40bd1c:	str	w0, [x21, #24]
  40bd20:	str	x23, [x21, #32]
  40bd24:	ldp	x21, x22, [sp, #32]
  40bd28:	ldp	x23, x24, [sp, #48]
  40bd2c:	ldp	x29, x30, [sp], #80
  40bd30:	ret
  40bd34:	bl	4176f8 <_obstack_free@@Base>
  40bd38:	str	xzr, [x19, #24]
  40bd3c:	b	40bbb0 <ferror@plt+0x9210>
  40bd40:	mov	x0, x3
  40bd44:	bl	4175a8 <_obstack_newchunk@@Base>
  40bd48:	b	40bc6c <ferror@plt+0x92cc>
  40bd4c:	mov	x0, x20
  40bd50:	mov	x1, #0x30                  	// #48
  40bd54:	bl	4175a8 <_obstack_newchunk@@Base>
  40bd58:	ldp	x2, x3, [x20, #24]
  40bd5c:	ldr	x21, [x20, #16]
  40bd60:	add	x2, x2, #0x30
  40bd64:	cmp	x2, x21
  40bd68:	b.ne	40bc10 <ferror@plt+0x9270>  // b.any
  40bd6c:	ldrb	w0, [x20, #80]
  40bd70:	orr	w0, w0, #0x2
  40bd74:	strb	w0, [x20, #80]
  40bd78:	b	40bc10 <ferror@plt+0x9270>
  40bd7c:	ldrb	w0, [x19, #120]
  40bd80:	orr	w0, w0, #0x2
  40bd84:	strb	w0, [x19, #120]
  40bd88:	b	40bc9c <ferror@plt+0x92fc>
  40bd8c:	nop
  40bd90:	stp	x29, x30, [sp, #-48]!
  40bd94:	mov	x29, sp
  40bd98:	stp	x19, x20, [sp, #16]
  40bd9c:	stp	x21, x22, [sp, #32]
  40bda0:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  40bda4:	add	x20, x22, #0x850
  40bda8:	mov	x21, x0
  40bdac:	ldp	x19, x1, [x20, #16]
  40bdb0:	cbz	x1, 40beac <ferror@plt+0x950c>
  40bdb4:	ldr	x0, [x19, #8]
  40bdb8:	cmp	x1, x0
  40bdbc:	b.ls	40be68 <ferror@plt+0x94c8>  // b.plast
  40bdc0:	ldr	x4, [x19, #32]
  40bdc4:	cmp	x1, x4
  40bdc8:	b.cs	40be68 <ferror@plt+0x94c8>  // b.hs, b.nlast
  40bdcc:	stp	x1, x1, [x19, #16]
  40bdd0:	str	xzr, [x20, #24]
  40bdd4:	sub	x0, x4, x1
  40bdd8:	cmp	x0, #0x2f
  40bddc:	b.ls	40be7c <ferror@plt+0x94dc>  // b.plast
  40bde0:	ldr	x2, [x19, #16]
  40bde4:	add	x1, x1, #0x30
  40bde8:	cmp	x1, x2
  40bdec:	b.eq	40be9c <ferror@plt+0x94fc>  // b.none
  40bdf0:	ldr	x3, [x19, #48]
  40bdf4:	ldr	x5, [x19, #8]
  40bdf8:	add	x1, x1, x3
  40bdfc:	bic	x1, x1, x3
  40be00:	str	x1, [x19, #24]
  40be04:	sub	x0, x1, x5
  40be08:	sub	x5, x4, x5
  40be0c:	cmp	x0, x5
  40be10:	b.ls	40be1c <ferror@plt+0x947c>  // b.plast
  40be14:	mov	x1, x4
  40be18:	str	x4, [x19, #24]
  40be1c:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40be20:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40be24:	ldr	x5, [x22, #2128]
  40be28:	str	x1, [x19, #16]
  40be2c:	ldr	x3, [x3, #3416]
  40be30:	mov	w4, #0x2                   	// #2
  40be34:	ldr	w1, [x0, #3392]
  40be38:	mov	w0, #0x1                   	// #1
  40be3c:	strb	w0, [x20, #32]
  40be40:	ldp	x19, x20, [sp, #16]
  40be44:	str	x5, [x2]
  40be48:	str	w4, [x2, #8]
  40be4c:	str	x3, [x2, #16]
  40be50:	str	w1, [x2, #24]
  40be54:	str	x21, [x2, #32]
  40be58:	str	x2, [x22, #2128]
  40be5c:	ldp	x21, x22, [sp, #32]
  40be60:	ldp	x29, x30, [sp], #48
  40be64:	ret
  40be68:	mov	x0, x19
  40be6c:	bl	4176f8 <_obstack_free@@Base>
  40be70:	ldr	x19, [x20, #16]
  40be74:	ldp	x1, x4, [x19, #24]
  40be78:	b	40bdd0 <ferror@plt+0x9430>
  40be7c:	mov	x1, #0x30                  	// #48
  40be80:	mov	x0, x19
  40be84:	bl	4175a8 <_obstack_newchunk@@Base>
  40be88:	ldp	x1, x4, [x19, #24]
  40be8c:	ldr	x2, [x19, #16]
  40be90:	add	x1, x1, #0x30
  40be94:	cmp	x1, x2
  40be98:	b.ne	40bdf0 <ferror@plt+0x9450>  // b.any
  40be9c:	ldrb	w0, [x19, #80]
  40bea0:	orr	w0, w0, #0x2
  40bea4:	strb	w0, [x19, #80]
  40bea8:	b	40bdf0 <ferror@plt+0x9450>
  40beac:	ldp	x1, x4, [x19, #24]
  40beb0:	b	40bdd4 <ferror@plt+0x9434>
  40beb4:	nop
  40beb8:	stp	x29, x30, [sp, #-32]!
  40bebc:	mov	x29, sp
  40bec0:	stp	x19, x20, [sp, #16]
  40bec4:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40bec8:	add	x20, x20, #0x850
  40becc:	ldr	x0, [x20, #24]
  40bed0:	cbnz	x0, 40bf88 <ferror@plt+0x95e8>
  40bed4:	ldr	x19, [x20, #16]
  40bed8:	mov	x0, x19
  40bedc:	ldp	x1, x5, [x19, #24]
  40bee0:	sub	x2, x5, x1
  40bee4:	cmp	x2, #0x2f
  40bee8:	b.ls	40bf58 <ferror@plt+0x95b8>  // b.plast
  40beec:	ldr	x3, [x19, #16]
  40bef0:	add	x1, x1, #0x30
  40bef4:	cmp	x1, x3
  40bef8:	b.eq	40bf78 <ferror@plt+0x95d8>  // b.none
  40befc:	ldr	x2, [x19, #48]
  40bf00:	ldr	x4, [x19, #8]
  40bf04:	add	x1, x1, x2
  40bf08:	bic	x1, x1, x2
  40bf0c:	str	x1, [x19, #24]
  40bf10:	sub	x2, x1, x4
  40bf14:	sub	x4, x5, x4
  40bf18:	cmp	x2, x4
  40bf1c:	b.ls	40bf28 <ferror@plt+0x9588>  // b.plast
  40bf20:	mov	x1, x5
  40bf24:	str	x5, [x19, #24]
  40bf28:	adrp	x4, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40bf2c:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40bf30:	str	x1, [x19, #16]
  40bf34:	ldr	x2, [x2, #3416]
  40bf38:	str	wzr, [x3, #8]
  40bf3c:	ldr	w1, [x4, #3392]
  40bf40:	str	x2, [x3, #16]
  40bf44:	str	w1, [x3, #24]
  40bf48:	str	x3, [x20, #24]
  40bf4c:	ldp	x19, x20, [sp, #16]
  40bf50:	ldp	x29, x30, [sp], #32
  40bf54:	ret
  40bf58:	mov	x1, #0x30                  	// #48
  40bf5c:	bl	4175a8 <_obstack_newchunk@@Base>
  40bf60:	ldp	x1, x5, [x19, #24]
  40bf64:	ldr	x3, [x19, #16]
  40bf68:	ldr	x0, [x20, #16]
  40bf6c:	add	x1, x1, #0x30
  40bf70:	cmp	x1, x3
  40bf74:	b.ne	40befc <ferror@plt+0x955c>  // b.any
  40bf78:	ldrb	w2, [x19, #80]
  40bf7c:	orr	w2, w2, #0x2
  40bf80:	strb	w2, [x19, #80]
  40bf84:	b	40befc <ferror@plt+0x955c>
  40bf88:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40bf8c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40bf90:	add	x2, x2, #0x468
  40bf94:	mov	w1, #0x0                   	// #0
  40bf98:	ldr	w0, [x0, #1628]
  40bf9c:	bl	4033d0 <ferror@plt+0xa30>
  40bfa0:	bl	4026d0 <abort@plt>
  40bfa4:	nop
  40bfa8:	stp	x29, x30, [sp, #-64]!
  40bfac:	mov	x29, sp
  40bfb0:	stp	x21, x22, [sp, #32]
  40bfb4:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  40bfb8:	add	x21, x22, #0x850
  40bfbc:	ldr	x1, [x21, #24]
  40bfc0:	cbz	x1, 40c0d8 <ferror@plt+0x9738>
  40bfc4:	stp	x19, x20, [sp, #16]
  40bfc8:	ldr	x20, [x21, #16]
  40bfcc:	ldr	x19, [x20, #24]
  40bfd0:	str	x23, [sp, #48]
  40bfd4:	ldr	x23, [x20, #16]
  40bfd8:	cmp	x19, x23
  40bfdc:	b.eq	40c07c <ferror@plt+0x96dc>  // b.none
  40bfe0:	ldr	x3, [x20, #32]
  40bfe4:	mov	x2, x20
  40bfe8:	mov	x0, x19
  40bfec:	cmp	x19, x3
  40bff0:	b.eq	40c0c0 <ferror@plt+0x9720>  // b.none
  40bff4:	add	x3, x0, #0x1
  40bff8:	str	x3, [x20, #24]
  40bffc:	strb	wzr, [x0]
  40c000:	ldp	x0, x5, [x2, #16]
  40c004:	cmp	x5, x0
  40c008:	b.eq	40c0a0 <ferror@plt+0x9700>  // b.none
  40c00c:	ldr	x3, [x2, #48]
  40c010:	ldr	x4, [x2, #8]
  40c014:	add	x5, x5, x3
  40c018:	ldr	x6, [x2, #32]
  40c01c:	bic	x3, x5, x3
  40c020:	str	x3, [x2, #24]
  40c024:	sub	x5, x3, x4
  40c028:	sub	x4, x6, x4
  40c02c:	cmp	x5, x4
  40c030:	b.hi	40c070 <ferror@plt+0x96d0>  // b.pmore
  40c034:	sub	x19, x19, x23
  40c038:	str	x3, [x2, #16]
  40c03c:	ldr	x3, [x22, #2128]
  40c040:	add	x19, x0, x19
  40c044:	mov	w2, #0x1                   	// #1
  40c048:	str	x1, [x22, #2128]
  40c04c:	str	x3, [x1]
  40c050:	strb	w2, [x21, #32]
  40c054:	stp	x0, x19, [x1, #32]
  40c058:	ldp	x19, x20, [sp, #16]
  40c05c:	str	xzr, [x21, #24]
  40c060:	ldr	x23, [sp, #48]
  40c064:	ldp	x21, x22, [sp, #32]
  40c068:	ldp	x29, x30, [sp], #64
  40c06c:	ret
  40c070:	mov	x3, x6
  40c074:	str	x6, [x2, #24]
  40c078:	b	40c034 <ferror@plt+0x9694>
  40c07c:	ldr	x0, [x20, #8]
  40c080:	cmp	x1, x0
  40c084:	b.ls	40c0b0 <ferror@plt+0x9710>  // b.plast
  40c088:	ldr	x0, [x20, #32]
  40c08c:	cmp	x1, x0
  40c090:	b.cs	40c0b0 <ferror@plt+0x9710>  // b.hs, b.nlast
  40c094:	mov	x0, #0x0                   	// #0
  40c098:	stp	x1, x1, [x20, #16]
  40c09c:	b	40c058 <ferror@plt+0x96b8>
  40c0a0:	ldrb	w3, [x2, #80]
  40c0a4:	orr	w3, w3, #0x2
  40c0a8:	strb	w3, [x2, #80]
  40c0ac:	b	40c00c <ferror@plt+0x966c>
  40c0b0:	mov	x0, x20
  40c0b4:	bl	4176f8 <_obstack_free@@Base>
  40c0b8:	mov	x0, #0x0                   	// #0
  40c0bc:	b	40c058 <ferror@plt+0x96b8>
  40c0c0:	mov	x0, x20
  40c0c4:	mov	x1, #0x1                   	// #1
  40c0c8:	bl	4175a8 <_obstack_newchunk@@Base>
  40c0cc:	ldp	x2, x1, [x21, #16]
  40c0d0:	ldr	x0, [x20, #24]
  40c0d4:	b	40bff4 <ferror@plt+0x9654>
  40c0d8:	mov	x0, #0x0                   	// #0
  40c0dc:	b	40c064 <ferror@plt+0x96c4>
  40c0e0:	stp	x29, x30, [sp, #-64]!
  40c0e4:	mov	x29, sp
  40c0e8:	stp	x21, x22, [sp, #32]
  40c0ec:	mov	x21, x0
  40c0f0:	str	x23, [sp, #48]
  40c0f4:	and	w23, w1, #0xff
  40c0f8:	bl	40baa8 <ferror@plt+0x9108>
  40c0fc:	ldrb	w1, [x21]
  40c100:	cmp	w1, w0
  40c104:	b.ne	40c1a4 <ferror@plt+0x9804>  // b.any
  40c108:	ldrb	w0, [x21, #1]
  40c10c:	cbz	w0, 40c1bc <ferror@plt+0x981c>
  40c110:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40c114:	add	x22, x0, #0x850
  40c118:	stp	x19, x20, [sp, #16]
  40c11c:	ldr	x0, [x0, #2128]
  40c120:	cbz	x0, 40c12c <ferror@plt+0x978c>
  40c124:	ldr	w1, [x0, #8]
  40c128:	cbz	w1, 40c1f8 <ferror@plt+0x9858>
  40c12c:	bl	40b970 <ferror@plt+0x8fd0>
  40c130:	add	x19, x21, #0x1
  40c134:	mov	w20, #0x1                   	// #1
  40c138:	b	40c168 <ferror@plt+0x97c8>
  40c13c:	ldr	x0, [x1, #32]
  40c140:	ldrb	w2, [x0]
  40c144:	cbz	w2, 40c188 <ferror@plt+0x97e8>
  40c148:	ldrb	w2, [x22, #32]
  40c14c:	add	x0, x0, #0x1
  40c150:	cbnz	w2, 40c188 <ferror@plt+0x97e8>
  40c154:	str	x0, [x1, #32]
  40c158:	add	w20, w20, #0x1
  40c15c:	ldrb	w1, [x19]
  40c160:	cbz	w1, 40c198 <ferror@plt+0x97f8>
  40c164:	nop
  40c168:	bl	40baa8 <ferror@plt+0x9108>
  40c16c:	ldrb	w1, [x19], #1
  40c170:	cmp	w0, w1
  40c174:	b.ne	40c220 <ferror@plt+0x9880>  // b.any
  40c178:	ldr	x1, [x22]
  40c17c:	cbz	x1, 40c188 <ferror@plt+0x97e8>
  40c180:	ldr	w0, [x1, #8]
  40c184:	cbz	w0, 40c13c <ferror@plt+0x979c>
  40c188:	bl	40b970 <ferror@plt+0x8fd0>
  40c18c:	add	w20, w20, #0x1
  40c190:	ldrb	w1, [x19]
  40c194:	cbnz	w1, 40c168 <ferror@plt+0x97c8>
  40c198:	cbnz	w23, 40c278 <ferror@plt+0x98d8>
  40c19c:	mov	w23, #0x1                   	// #1
  40c1a0:	b	40c224 <ferror@plt+0x9884>
  40c1a4:	mov	w23, #0x0                   	// #0
  40c1a8:	mov	w0, w23
  40c1ac:	ldp	x21, x22, [sp, #32]
  40c1b0:	ldr	x23, [sp, #48]
  40c1b4:	ldp	x29, x30, [sp], #64
  40c1b8:	ret
  40c1bc:	cbz	w23, 40c27c <ferror@plt+0x98dc>
  40c1c0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40c1c4:	add	x2, x0, #0x850
  40c1c8:	ldr	x0, [x0, #2128]
  40c1cc:	cbz	x0, 40c218 <ferror@plt+0x9878>
  40c1d0:	ldr	w1, [x0, #8]
  40c1d4:	cbnz	w1, 40c218 <ferror@plt+0x9878>
  40c1d8:	ldr	x1, [x0, #32]
  40c1dc:	ldrb	w3, [x1]
  40c1e0:	cbz	w3, 40c218 <ferror@plt+0x9878>
  40c1e4:	ldrb	w2, [x2, #32]
  40c1e8:	cbnz	w2, 40c218 <ferror@plt+0x9878>
  40c1ec:	add	x1, x1, #0x1
  40c1f0:	str	x1, [x0, #32]
  40c1f4:	b	40c1a8 <ferror@plt+0x9808>
  40c1f8:	ldr	x1, [x0, #32]
  40c1fc:	ldrb	w2, [x1]
  40c200:	cbz	w2, 40c12c <ferror@plt+0x978c>
  40c204:	ldrb	w2, [x22, #32]
  40c208:	cbnz	w2, 40c12c <ferror@plt+0x978c>
  40c20c:	add	x1, x1, #0x1
  40c210:	str	x1, [x0, #32]
  40c214:	b	40c130 <ferror@plt+0x9790>
  40c218:	bl	40b970 <ferror@plt+0x8fd0>
  40c21c:	b	40c1a8 <ferror@plt+0x9808>
  40c220:	mov	w23, #0x0                   	// #0
  40c224:	bl	40beb8 <ferror@plt+0x9518>
  40c228:	sxtw	x22, w20
  40c22c:	ldp	x2, x1, [x0, #24]
  40c230:	mov	x19, x0
  40c234:	sub	x1, x1, x2
  40c238:	cmp	x1, w20, sxtw
  40c23c:	b.cc	40c294 <ferror@plt+0x98f4>  // b.lo, b.ul, b.last
  40c240:	mov	x1, x21
  40c244:	mov	x0, x2
  40c248:	mov	x2, x22
  40c24c:	bl	402350 <memcpy@plt>
  40c250:	ldr	x0, [x19, #24]
  40c254:	add	x0, x0, x22
  40c258:	str	x0, [x19, #24]
  40c25c:	bl	40bfa8 <ferror@plt+0x9608>
  40c260:	mov	w0, w23
  40c264:	ldp	x19, x20, [sp, #16]
  40c268:	ldp	x21, x22, [sp, #32]
  40c26c:	ldr	x23, [sp, #48]
  40c270:	ldp	x29, x30, [sp], #64
  40c274:	ret
  40c278:	ldp	x19, x20, [sp, #16]
  40c27c:	mov	w23, #0x1                   	// #1
  40c280:	mov	w0, w23
  40c284:	ldp	x21, x22, [sp, #32]
  40c288:	ldr	x23, [sp, #48]
  40c28c:	ldp	x29, x30, [sp], #64
  40c290:	ret
  40c294:	mov	x1, x22
  40c298:	bl	4175a8 <_obstack_newchunk@@Base>
  40c29c:	ldr	x2, [x19, #24]
  40c2a0:	b	40c240 <ferror@plt+0x98a0>
  40c2a4:	nop
  40c2a8:	stp	x29, x30, [sp, #-64]!
  40c2ac:	mov	x29, sp
  40c2b0:	stp	x23, x24, [sp, #48]
  40c2b4:	adrp	x24, 431000 <_obstack_memory_used@@Base+0x19878>
  40c2b8:	add	x24, x24, #0x850
  40c2bc:	mov	x23, x0
  40c2c0:	stp	x19, x20, [sp, #16]
  40c2c4:	stp	x21, x22, [sp, #32]
  40c2c8:	bl	402390 <strlen@plt>
  40c2cc:	mov	x21, x0
  40c2d0:	ldr	x20, [x24, #128]
  40c2d4:	mov	x19, x20
  40c2d8:	ldp	x1, x0, [x20, #24]
  40c2dc:	sub	x2, x0, x1
  40c2e0:	mov	x4, x0
  40c2e4:	cmp	x2, #0x2f
  40c2e8:	b.ls	40c3e4 <ferror@plt+0x9a44>  // b.plast
  40c2ec:	ldr	x22, [x20, #16]
  40c2f0:	add	x1, x1, #0x30
  40c2f4:	cmp	x1, x22
  40c2f8:	b.eq	40c40c <ferror@plt+0x9a6c>  // b.none
  40c2fc:	ldr	x2, [x20, #48]
  40c300:	ldr	x3, [x20, #8]
  40c304:	add	x1, x1, x2
  40c308:	bic	x1, x1, x2
  40c30c:	str	x1, [x20, #24]
  40c310:	sub	x2, x1, x3
  40c314:	sub	x3, x0, x3
  40c318:	cmp	x2, x3
  40c31c:	b.ls	40c328 <ferror@plt+0x9988>  // b.plast
  40c320:	mov	x1, x0
  40c324:	str	x0, [x20, #24]
  40c328:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c32c:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c330:	ldr	x0, [x19, #24]
  40c334:	str	x1, [x20, #16]
  40c338:	ldr	w2, [x2, #3392]
  40c33c:	ldr	x1, [x3, #3416]
  40c340:	str	wzr, [x22, #8]
  40c344:	ldr	x3, [x24, #136]
  40c348:	str	x3, [x22]
  40c34c:	str	x1, [x22, #16]
  40c350:	sub	x4, x4, x0
  40c354:	str	w2, [x22, #24]
  40c358:	add	x1, x21, #0x1
  40c35c:	cmp	x1, x4
  40c360:	b.hi	40c41c <ferror@plt+0x9a7c>  // b.pmore
  40c364:	mov	x1, x23
  40c368:	mov	x2, x21
  40c36c:	bl	402350 <memcpy@plt>
  40c370:	ldr	x1, [x19, #24]
  40c374:	add	x0, x1, x21
  40c378:	add	x0, x0, #0x1
  40c37c:	str	x0, [x19, #24]
  40c380:	strb	wzr, [x1, x21]
  40c384:	ldp	x3, x2, [x19, #16]
  40c388:	cmp	x2, x3
  40c38c:	b.eq	40c42c <ferror@plt+0x9a8c>  // b.none
  40c390:	ldr	x0, [x19, #48]
  40c394:	ldr	x1, [x19, #8]
  40c398:	add	x2, x2, x0
  40c39c:	ldr	x4, [x19, #32]
  40c3a0:	bic	x0, x2, x0
  40c3a4:	str	x0, [x19, #24]
  40c3a8:	sub	x2, x0, x1
  40c3ac:	sub	x1, x4, x1
  40c3b0:	cmp	x2, x1
  40c3b4:	b.ls	40c3c0 <ferror@plt+0x9a20>  // b.plast
  40c3b8:	mov	x0, x4
  40c3bc:	str	x4, [x19, #24]
  40c3c0:	str	x0, [x19, #16]
  40c3c4:	add	x21, x3, x21
  40c3c8:	ldp	x19, x20, [sp, #16]
  40c3cc:	stp	x3, x21, [x22, #32]
  40c3d0:	str	x22, [x24, #136]
  40c3d4:	ldp	x21, x22, [sp, #32]
  40c3d8:	ldp	x23, x24, [sp, #48]
  40c3dc:	ldp	x29, x30, [sp], #64
  40c3e0:	ret
  40c3e4:	mov	x0, x20
  40c3e8:	mov	x1, #0x30                  	// #48
  40c3ec:	bl	4175a8 <_obstack_newchunk@@Base>
  40c3f0:	ldp	x1, x0, [x20, #24]
  40c3f4:	ldr	x19, [x24, #128]
  40c3f8:	ldr	x22, [x20, #16]
  40c3fc:	add	x1, x1, #0x30
  40c400:	cmp	x1, x22
  40c404:	ldr	x4, [x19, #32]
  40c408:	b.ne	40c2fc <ferror@plt+0x995c>  // b.any
  40c40c:	ldrb	w2, [x20, #80]
  40c410:	orr	w2, w2, #0x2
  40c414:	strb	w2, [x20, #80]
  40c418:	b	40c2fc <ferror@plt+0x995c>
  40c41c:	mov	x0, x19
  40c420:	bl	4175a8 <_obstack_newchunk@@Base>
  40c424:	ldr	x0, [x19, #24]
  40c428:	b	40c364 <ferror@plt+0x99c4>
  40c42c:	ldrb	w0, [x19, #80]
  40c430:	orr	w0, w0, #0x2
  40c434:	strb	w0, [x19, #80]
  40c438:	b	40c390 <ferror@plt+0x99f0>
  40c43c:	nop
  40c440:	stp	x29, x30, [sp, #-32]!
  40c444:	mov	x1, #0x0                   	// #0
  40c448:	mov	x29, sp
  40c44c:	stp	x19, x20, [sp, #16]
  40c450:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40c454:	add	x19, x20, #0x850
  40c458:	ldr	x0, [x19, #16]
  40c45c:	str	xzr, [x19, #24]
  40c460:	bl	4176f8 <_obstack_free@@Base>
  40c464:	ldr	x0, [x19, #16]
  40c468:	bl	4027c0 <free@plt>
  40c46c:	ldr	x0, [x19, #136]
  40c470:	cbz	x0, 40c4c8 <ferror@plt+0x9b28>
  40c474:	ldr	x1, [x19, #128]
  40c478:	mov	x0, #0x58                  	// #88
  40c47c:	str	x1, [x19, #16]
  40c480:	bl	416968 <ferror@plt+0x13fc8>
  40c484:	str	x0, [x19, #128]
  40c488:	mov	x2, #0x0                   	// #0
  40c48c:	mov	x1, #0x0                   	// #0
  40c490:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40c494:	adrp	x3, 416000 <ferror@plt+0x13660>
  40c498:	add	x4, x4, #0x7c0
  40c49c:	add	x3, x3, #0x968
  40c4a0:	bl	417578 <_obstack_begin@@Base>
  40c4a4:	ldr	x0, [x19, #136]
  40c4a8:	str	x0, [x20, #2128]
  40c4ac:	mov	w1, #0x1                   	// #1
  40c4b0:	mov	w0, #0x1                   	// #1
  40c4b4:	strb	w1, [x19, #32]
  40c4b8:	str	xzr, [x19, #136]
  40c4bc:	ldp	x19, x20, [sp, #16]
  40c4c0:	ldp	x29, x30, [sp], #32
  40c4c4:	ret
  40c4c8:	add	x0, x19, #0x90
  40c4cc:	mov	x1, #0x0                   	// #0
  40c4d0:	bl	4176f8 <_obstack_free@@Base>
  40c4d4:	add	x0, x19, #0x28
  40c4d8:	mov	x1, #0x0                   	// #0
  40c4dc:	bl	4176f8 <_obstack_free@@Base>
  40c4e0:	ldr	x0, [x19, #128]
  40c4e4:	mov	x1, #0x0                   	// #0
  40c4e8:	bl	4176f8 <_obstack_free@@Base>
  40c4ec:	ldr	x0, [x19, #128]
  40c4f0:	bl	4027c0 <free@plt>
  40c4f4:	mov	w0, #0x0                   	// #0
  40c4f8:	ldp	x19, x20, [sp, #16]
  40c4fc:	ldp	x29, x30, [sp], #32
  40c500:	ret
  40c504:	nop
  40c508:	stp	x29, x30, [sp, #-64]!
  40c50c:	mov	x29, sp
  40c510:	stp	x19, x20, [sp, #16]
  40c514:	adrp	x20, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c518:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  40c51c:	stp	x21, x22, [sp, #32]
  40c520:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c524:	add	x19, x19, #0x850
  40c528:	ldr	x22, [x20, #3416]
  40c52c:	str	x23, [sp, #48]
  40c530:	ldr	w23, [x21, #3392]
  40c534:	b	40c560 <ferror@plt+0x9bc0>
  40c538:	ldr	x1, [x0, #32]
  40c53c:	ldrb	w2, [x1]
  40c540:	cbz	w2, 40c570 <ferror@plt+0x9bd0>
  40c544:	ldrb	w2, [x19, #32]
  40c548:	add	x3, x1, #0x1
  40c54c:	cbnz	w2, 40c570 <ferror@plt+0x9bd0>
  40c550:	str	x3, [x0, #32]
  40c554:	ldrb	w0, [x1]
  40c558:	cmp	w0, #0xa
  40c55c:	b.eq	40c59c <ferror@plt+0x9bfc>  // b.none
  40c560:	ldr	x0, [x19]
  40c564:	cbz	x0, 40c570 <ferror@plt+0x9bd0>
  40c568:	ldr	w1, [x0, #8]
  40c56c:	cbz	w1, 40c538 <ferror@plt+0x9b98>
  40c570:	bl	40b970 <ferror@plt+0x8fd0>
  40c574:	cmp	w0, #0x100
  40c578:	b.ne	40c558 <ferror@plt+0x9bb8>  // b.any
  40c57c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40c580:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x2878>
  40c584:	mov	w3, w23
  40c588:	add	x4, x4, #0x490
  40c58c:	ldr	w0, [x0, #1628]
  40c590:	mov	x2, x22
  40c594:	mov	w1, #0x0                   	// #0
  40c598:	bl	403490 <ferror@plt+0xaf0>
  40c59c:	ldr	x0, [x20, #3416]
  40c5a0:	cmp	x0, x22
  40c5a4:	b.eq	40c5c4 <ferror@plt+0x9c24>  // b.none
  40c5a8:	mov	w0, #0x1                   	// #1
  40c5ac:	strb	w0, [x19, #32]
  40c5b0:	ldp	x19, x20, [sp, #16]
  40c5b4:	ldp	x21, x22, [sp, #32]
  40c5b8:	ldr	x23, [sp, #48]
  40c5bc:	ldp	x29, x30, [sp], #64
  40c5c0:	ret
  40c5c4:	ldr	w0, [x21, #3392]
  40c5c8:	cmp	w0, w23
  40c5cc:	b.ne	40c5a8 <ferror@plt+0x9c08>  // b.any
  40c5d0:	ldp	x19, x20, [sp, #16]
  40c5d4:	ldp	x21, x22, [sp, #32]
  40c5d8:	ldr	x23, [sp, #48]
  40c5dc:	ldp	x29, x30, [sp], #64
  40c5e0:	ret
  40c5e4:	nop
  40c5e8:	stp	x29, x30, [sp, #-64]!
  40c5ec:	adrp	x1, 417000 <ferror@plt+0x14660>
  40c5f0:	add	x1, x1, #0xe98
  40c5f4:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c5f8:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c5fc:	mov	x29, sp
  40c600:	str	x1, [x2, #3416]
  40c604:	mov	x0, #0x58                  	// #88
  40c608:	str	wzr, [x3, #3392]
  40c60c:	stp	x19, x20, [sp, #16]
  40c610:	adrp	x20, 416000 <ferror@plt+0x13660>
  40c614:	add	x20, x20, #0x968
  40c618:	stp	x21, x22, [sp, #32]
  40c61c:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  40c620:	adrp	x21, 402000 <mbrtowc@plt-0x340>
  40c624:	add	x19, x22, #0x850
  40c628:	add	x21, x21, #0x7c0
  40c62c:	str	x23, [sp, #48]
  40c630:	bl	416968 <ferror@plt+0x13fc8>
  40c634:	mov	x4, x21
  40c638:	mov	x3, x20
  40c63c:	mov	x2, #0x0                   	// #0
  40c640:	mov	x1, #0x0                   	// #0
  40c644:	str	x0, [x19, #16]
  40c648:	bl	417578 <_obstack_begin@@Base>
  40c64c:	mov	x0, #0x58                  	// #88
  40c650:	bl	416968 <ferror@plt+0x13fc8>
  40c654:	mov	x4, x21
  40c658:	mov	x3, x20
  40c65c:	mov	x2, #0x0                   	// #0
  40c660:	mov	x1, #0x0                   	// #0
  40c664:	str	x0, [x19, #128]
  40c668:	bl	417578 <_obstack_begin@@Base>
  40c66c:	mov	x4, x21
  40c670:	mov	x3, x20
  40c674:	mov	x2, #0x0                   	// #0
  40c678:	mov	x1, #0x0                   	// #0
  40c67c:	add	x23, x19, #0x90
  40c680:	add	x0, x19, #0x28
  40c684:	bl	417578 <_obstack_begin@@Base>
  40c688:	mov	x4, x21
  40c68c:	mov	x1, #0x0                   	// #0
  40c690:	mov	x3, x20
  40c694:	mov	x0, x23
  40c698:	mov	x2, #0x0                   	// #0
  40c69c:	bl	417578 <_obstack_begin@@Base>
  40c6a0:	ldp	x1, x4, [x19, #168]
  40c6a4:	cmp	x4, x1
  40c6a8:	b.eq	40c7b0 <ferror@plt+0x9e10>  // b.none
  40c6ac:	add	x0, x1, #0x1
  40c6b0:	ldr	x1, [x19, #160]
  40c6b4:	cmp	x0, x1
  40c6b8:	b.eq	40c7a0 <ferror@plt+0x9e00>  // b.none
  40c6bc:	ldr	x1, [x19, #192]
  40c6c0:	ldr	x2, [x19, #152]
  40c6c4:	add	x0, x0, x1
  40c6c8:	bic	x1, x0, x1
  40c6cc:	str	x1, [x19, #168]
  40c6d0:	sub	x0, x1, x2
  40c6d4:	sub	x2, x4, x2
  40c6d8:	cmp	x0, x2
  40c6dc:	b.ls	40c6e8 <ferror@plt+0x9d48>  // b.plast
  40c6e0:	mov	x1, x4
  40c6e4:	str	x4, [x19, #168]
  40c6e8:	str	xzr, [x22, #2128]
  40c6ec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40c6f0:	add	x0, x0, #0x4b8
  40c6f4:	strb	wzr, [x19, #8]
  40c6f8:	str	xzr, [x19, #24]
  40c6fc:	str	xzr, [x19, #136]
  40c700:	str	x1, [x19, #160]
  40c704:	str	x1, [x19, #232]
  40c708:	bl	416b80 <ferror@plt+0x141e0>
  40c70c:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c710:	add	x19, x1, #0xd48
  40c714:	str	x0, [x1, #3400]
  40c718:	bl	402390 <strlen@plt>
  40c71c:	mov	x1, x0
  40c720:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  40c724:	add	x0, x0, #0x248
  40c728:	str	x1, [x19, #8]
  40c72c:	bl	416b80 <ferror@plt+0x141e0>
  40c730:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c734:	add	x19, x1, #0xd80
  40c738:	str	x0, [x1, #3456]
  40c73c:	bl	402390 <strlen@plt>
  40c740:	mov	x1, x0
  40c744:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40c748:	add	x0, x0, #0x4c0
  40c74c:	str	x1, [x19, #8]
  40c750:	bl	416b80 <ferror@plt+0x141e0>
  40c754:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c758:	add	x19, x1, #0xd60
  40c75c:	str	x0, [x1, #3424]
  40c760:	bl	402390 <strlen@plt>
  40c764:	mov	x1, x0
  40c768:	adrp	x0, 417000 <ferror@plt+0x14660>
  40c76c:	add	x0, x0, #0xfe8
  40c770:	str	x1, [x19, #8]
  40c774:	bl	416b80 <ferror@plt+0x141e0>
  40c778:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c77c:	add	x19, x1, #0xd70
  40c780:	str	x0, [x1, #3440]
  40c784:	bl	402390 <strlen@plt>
  40c788:	ldp	x21, x22, [sp, #32]
  40c78c:	ldr	x23, [sp, #48]
  40c790:	str	x0, [x19, #8]
  40c794:	ldp	x19, x20, [sp, #16]
  40c798:	ldp	x29, x30, [sp], #64
  40c79c:	ret
  40c7a0:	ldrb	w1, [x19, #224]
  40c7a4:	orr	w1, w1, #0x2
  40c7a8:	strb	w1, [x19, #224]
  40c7ac:	b	40c6bc <ferror@plt+0x9d1c>
  40c7b0:	mov	x1, #0x1                   	// #1
  40c7b4:	mov	x0, x23
  40c7b8:	bl	4175a8 <_obstack_newchunk@@Base>
  40c7bc:	ldp	x1, x4, [x19, #168]
  40c7c0:	b	40c6ac <ferror@plt+0x9d0c>
  40c7c4:	nop
  40c7c8:	stp	x29, x30, [sp, #-64]!
  40c7cc:	mov	x29, sp
  40c7d0:	stp	x21, x22, [sp, #32]
  40c7d4:	adrp	x22, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c7d8:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c7dc:	stp	x19, x20, [sp, #16]
  40c7e0:	mov	x20, x0
  40c7e4:	mov	x19, x1
  40c7e8:	ldr	x0, [x22, #3400]
  40c7ec:	stp	x23, x24, [sp, #48]
  40c7f0:	bl	4027c0 <free@plt>
  40c7f4:	ldr	x0, [x21, #3456]
  40c7f8:	bl	4027c0 <free@plt>
  40c7fc:	cbz	x20, 40c874 <ferror@plt+0x9ed4>
  40c800:	cbz	x19, 40c868 <ferror@plt+0x9ec8>
  40c804:	ldrb	w0, [x20]
  40c808:	cbz	w0, 40c820 <ferror@plt+0x9e80>
  40c80c:	ldrb	w1, [x19]
  40c810:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  40c814:	add	x0, x0, #0x248
  40c818:	cmp	w1, #0x0
  40c81c:	csel	x19, x0, x19, eq  // eq = none
  40c820:	mov	x0, x20
  40c824:	bl	416b80 <ferror@plt+0x141e0>
  40c828:	add	x24, x22, #0xd48
  40c82c:	str	x0, [x22, #3400]
  40c830:	bl	402390 <strlen@plt>
  40c834:	mov	x1, x0
  40c838:	add	x23, x21, #0xd80
  40c83c:	mov	x0, x19
  40c840:	str	x1, [x24, #8]
  40c844:	bl	416b80 <ferror@plt+0x141e0>
  40c848:	str	x0, [x21, #3456]
  40c84c:	bl	402390 <strlen@plt>
  40c850:	str	x0, [x23, #8]
  40c854:	ldp	x19, x20, [sp, #16]
  40c858:	ldp	x21, x22, [sp, #32]
  40c85c:	ldp	x23, x24, [sp, #48]
  40c860:	ldp	x29, x30, [sp], #64
  40c864:	ret
  40c868:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x1878>
  40c86c:	add	x19, x19, #0x248
  40c870:	b	40c820 <ferror@plt+0x9e80>
  40c874:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x1878>
  40c878:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x2878>
  40c87c:	add	x19, x19, #0x248
  40c880:	add	x20, x20, #0x4b8
  40c884:	b	40c820 <ferror@plt+0x9e80>
  40c888:	stp	x29, x30, [sp, #-64]!
  40c88c:	mov	x29, sp
  40c890:	stp	x21, x22, [sp, #32]
  40c894:	adrp	x22, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c898:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c89c:	stp	x19, x20, [sp, #16]
  40c8a0:	mov	x20, x0
  40c8a4:	mov	x19, x1
  40c8a8:	ldr	x0, [x22, #3424]
  40c8ac:	stp	x23, x24, [sp, #48]
  40c8b0:	bl	4027c0 <free@plt>
  40c8b4:	ldr	x0, [x21, #3440]
  40c8b8:	bl	4027c0 <free@plt>
  40c8bc:	cbz	x20, 40c934 <ferror@plt+0x9f94>
  40c8c0:	cbz	x19, 40c928 <ferror@plt+0x9f88>
  40c8c4:	ldrb	w0, [x20]
  40c8c8:	cbz	w0, 40c8e0 <ferror@plt+0x9f40>
  40c8cc:	ldrb	w1, [x19]
  40c8d0:	adrp	x0, 417000 <ferror@plt+0x14660>
  40c8d4:	add	x0, x0, #0xfe8
  40c8d8:	cmp	w1, #0x0
  40c8dc:	csel	x19, x0, x19, eq  // eq = none
  40c8e0:	mov	x0, x20
  40c8e4:	bl	416b80 <ferror@plt+0x141e0>
  40c8e8:	add	x24, x22, #0xd60
  40c8ec:	str	x0, [x22, #3424]
  40c8f0:	bl	402390 <strlen@plt>
  40c8f4:	mov	x1, x0
  40c8f8:	add	x23, x21, #0xd70
  40c8fc:	mov	x0, x19
  40c900:	str	x1, [x24, #8]
  40c904:	bl	416b80 <ferror@plt+0x141e0>
  40c908:	str	x0, [x21, #3440]
  40c90c:	bl	402390 <strlen@plt>
  40c910:	str	x0, [x23, #8]
  40c914:	ldp	x19, x20, [sp, #16]
  40c918:	ldp	x21, x22, [sp, #32]
  40c91c:	ldp	x23, x24, [sp, #48]
  40c920:	ldp	x29, x30, [sp], #64
  40c924:	ret
  40c928:	adrp	x19, 417000 <ferror@plt+0x14660>
  40c92c:	add	x19, x19, #0xfe8
  40c930:	b	40c8e0 <ferror@plt+0x9f40>
  40c934:	adrp	x19, 417000 <ferror@plt+0x14660>
  40c938:	add	x19, x19, #0xe98
  40c93c:	mov	x20, x19
  40c940:	b	40c8e0 <ferror@plt+0x9f40>
  40c944:	nop
  40c948:	stp	x29, x30, [sp, #-176]!
  40c94c:	mov	x29, sp
  40c950:	stp	x19, x20, [sp, #16]
  40c954:	stp	x25, x26, [sp, #64]
  40c958:	adrp	x25, 431000 <_obstack_memory_used@@Base+0x19878>
  40c95c:	add	x19, x25, #0x850
  40c960:	stp	x21, x22, [sp, #32]
  40c964:	mov	x21, x1
  40c968:	str	x0, [sp, #112]
  40c96c:	ldr	x1, [x19, #152]
  40c970:	ldr	x0, [x19, #232]
  40c974:	cmp	x1, x0
  40c978:	b.cs	40c988 <ferror@plt+0x9fe8>  // b.hs, b.nlast
  40c97c:	ldr	x1, [x19, #176]
  40c980:	cmp	x1, x0
  40c984:	b.hi	40cb54 <ferror@plt+0xa1b4>  // b.pmore
  40c988:	mov	x1, x0
  40c98c:	add	x0, x19, #0x90
  40c990:	bl	4176f8 <_obstack_free@@Base>
  40c994:	cmp	x21, #0x0
  40c998:	add	x0, sp, #0xac
  40c99c:	csel	x21, x0, x21, eq  // eq = none
  40c9a0:	bl	40baa8 <ferror@plt+0x9108>
  40c9a4:	mov	w20, w0
  40c9a8:	cmp	w0, #0x100
  40c9ac:	b.eq	40cb74 <ferror@plt+0xa1d4>  // b.none
  40c9b0:	cmp	w0, #0x101
  40c9b4:	ldr	x0, [x25, #2128]
  40c9b8:	b.eq	40cdfc <ferror@plt+0xa45c>  // b.none
  40c9bc:	stp	x23, x24, [sp, #48]
  40c9c0:	cbz	x0, 40c9cc <ferror@plt+0xa02c>
  40c9c4:	ldr	w1, [x0, #8]
  40c9c8:	cbz	w1, 40cba4 <ferror@plt+0xa204>
  40c9cc:	bl	40b970 <ferror@plt+0x8fd0>
  40c9d0:	adrp	x23, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c9d4:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c9d8:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40c9dc:	cmp	w20, #0x0
  40c9e0:	ldr	x0, [x23, #3424]
  40c9e4:	ldr	w1, [x1, #3392]
  40c9e8:	ldr	x2, [x2, #3416]
  40c9ec:	str	w1, [x21]
  40c9f0:	str	x2, [sp, #136]
  40c9f4:	ldrb	w1, [x0]
  40c9f8:	ccmp	w1, w20, #0x0, ne  // ne = any
  40c9fc:	b.eq	40cc9c <ferror@plt+0xa2fc>  // b.none
  40ca00:	bl	402770 <__ctype_b_loc@plt>
  40ca04:	mov	x23, x0
  40ca08:	ldr	x0, [x0]
  40ca0c:	cmp	w20, #0x5f
  40ca10:	ldrh	w0, [x0, w20, sxtw #1]
  40ca14:	and	w0, w0, #0x400
  40ca18:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40ca1c:	b.eq	40cbc4 <ferror@plt+0xa224>  // b.none
  40ca20:	ldp	x1, x0, [x19, #168]
  40ca24:	add	x21, x19, #0x90
  40ca28:	cmp	x0, x1
  40ca2c:	b.eq	40cde8 <ferror@plt+0xa448>  // b.none
  40ca30:	add	x0, x19, #0x90
  40ca34:	add	x2, x1, #0x1
  40ca38:	mov	x21, x0
  40ca3c:	str	x2, [x19, #168]
  40ca40:	strb	w20, [x1]
  40ca44:	nop
  40ca48:	bl	40baa8 <ferror@plt+0x9108>
  40ca4c:	mov	w20, w0
  40ca50:	cmp	w0, #0x100
  40ca54:	b.eq	40cac8 <ferror@plt+0xa128>  // b.none
  40ca58:	ldr	x1, [x23]
  40ca5c:	cmp	w0, #0x5f
  40ca60:	ldp	x0, x3, [x21, #24]
  40ca64:	ldrh	w1, [x1, w20, sxtw #1]
  40ca68:	and	w1, w1, #0x8
  40ca6c:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40ca70:	b.eq	40cc94 <ferror@plt+0xa2f4>  // b.none
  40ca74:	cmp	x3, x0
  40ca78:	b.eq	40cc50 <ferror@plt+0xa2b0>  // b.none
  40ca7c:	ldr	x1, [x19]
  40ca80:	add	x2, x0, #0x1
  40ca84:	str	x2, [x21, #24]
  40ca88:	strb	w20, [x0]
  40ca8c:	cbz	x1, 40cc48 <ferror@plt+0xa2a8>
  40ca90:	ldr	w0, [x1, #8]
  40ca94:	cbnz	w0, 40cc48 <ferror@plt+0xa2a8>
  40ca98:	ldr	x0, [x1, #32]
  40ca9c:	ldrb	w2, [x0]
  40caa0:	cbz	w2, 40cc48 <ferror@plt+0xa2a8>
  40caa4:	ldrb	w2, [x19, #32]
  40caa8:	cbnz	w2, 40cc48 <ferror@plt+0xa2a8>
  40caac:	add	x0, x0, #0x1
  40cab0:	str	x0, [x1, #32]
  40cab4:	bl	40baa8 <ferror@plt+0x9108>
  40cab8:	mov	w20, w0
  40cabc:	cmp	w0, #0x100
  40cac0:	b.ne	40ca58 <ferror@plt+0xa0b8>  // b.any
  40cac4:	nop
  40cac8:	ldp	x0, x3, [x19, #168]
  40cacc:	mov	w21, #0x2                   	// #2
  40cad0:	cmp	x0, x3
  40cad4:	b.eq	40cc30 <ferror@plt+0xa290>  // b.none
  40cad8:	add	x3, x0, #0x1
  40cadc:	str	x3, [x19, #168]
  40cae0:	strb	wzr, [x0]
  40cae4:	mov	w2, #0x1                   	// #1
  40cae8:	ldr	x0, [sp, #112]
  40caec:	ldp	x4, x3, [x19, #160]
  40caf0:	str	w2, [x0]
  40caf4:	cmp	x3, x4
  40caf8:	b.eq	40cc64 <ferror@plt+0xa2c4>  // b.none
  40cafc:	ldr	x0, [x19, #192]
  40cb00:	ldr	x2, [x19, #152]
  40cb04:	add	x3, x3, x0
  40cb08:	ldr	x5, [x19, #176]
  40cb0c:	bic	x0, x3, x0
  40cb10:	str	x0, [x19, #168]
  40cb14:	sub	x3, x0, x2
  40cb18:	sub	x2, x5, x2
  40cb1c:	cmp	x3, x2
  40cb20:	b.ls	40cb2c <ferror@plt+0xa18c>  // b.plast
  40cb24:	mov	x0, x5
  40cb28:	str	x5, [x19, #168]
  40cb2c:	str	x0, [x19, #160]
  40cb30:	ldr	x0, [sp, #112]
  40cb34:	ldp	x23, x24, [sp, #48]
  40cb38:	str	x4, [x0, #8]
  40cb3c:	mov	w0, w21
  40cb40:	ldp	x19, x20, [sp, #16]
  40cb44:	ldp	x21, x22, [sp, #32]
  40cb48:	ldp	x25, x26, [sp, #64]
  40cb4c:	ldp	x29, x30, [sp], #176
  40cb50:	ret
  40cb54:	cmp	x21, #0x0
  40cb58:	stp	x0, x0, [x19, #160]
  40cb5c:	add	x0, sp, #0xac
  40cb60:	csel	x21, x0, x21, eq  // eq = none
  40cb64:	bl	40baa8 <ferror@plt+0x9108>
  40cb68:	mov	w20, w0
  40cb6c:	cmp	w0, #0x100
  40cb70:	b.ne	40c9b0 <ferror@plt+0xa010>  // b.any
  40cb74:	ldr	x0, [x25, #2128]
  40cb78:	cbz	x0, 40cc74 <ferror@plt+0xa2d4>
  40cb7c:	ldr	w21, [x0, #8]
  40cb80:	cbnz	w21, 40cc74 <ferror@plt+0xa2d4>
  40cb84:	ldr	x1, [x0, #32]
  40cb88:	ldrb	w2, [x1]
  40cb8c:	cbz	w2, 40cc74 <ferror@plt+0xa2d4>
  40cb90:	ldrb	w2, [x19, #32]
  40cb94:	cbnz	w2, 40cc74 <ferror@plt+0xa2d4>
  40cb98:	add	x1, x1, #0x1
  40cb9c:	str	x1, [x0, #32]
  40cba0:	b	40cb3c <ferror@plt+0xa19c>
  40cba4:	ldr	x1, [x0, #32]
  40cba8:	ldrb	w2, [x1]
  40cbac:	cbz	w2, 40c9cc <ferror@plt+0xa02c>
  40cbb0:	ldrb	w2, [x19, #32]
  40cbb4:	cbnz	w2, 40c9cc <ferror@plt+0xa02c>
  40cbb8:	add	x1, x1, #0x1
  40cbbc:	str	x1, [x0, #32]
  40cbc0:	b	40c9d0 <ferror@plt+0xa030>
  40cbc4:	stp	x27, x28, [sp, #80]
  40cbc8:	adrp	x27, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40cbcc:	ldr	x0, [x27, #3400]
  40cbd0:	ldrb	w1, [x0]
  40cbd4:	cmp	w1, w20
  40cbd8:	cset	w23, ne  // ne = any
  40cbdc:	cmp	w20, #0x0
  40cbe0:	csinc	w23, w23, wzr, ne  // ne = any
  40cbe4:	cbz	w23, 40ce44 <ferror@plt+0xa4a4>
  40cbe8:	sub	w0, w20, #0x28
  40cbec:	mov	w21, #0x6                   	// #6
  40cbf0:	cmp	w0, #0x4
  40cbf4:	b.hi	40cc04 <ferror@plt+0xa264>  // b.pmore
  40cbf8:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40cbfc:	add	x1, x1, #0x550
  40cc00:	ldr	w21, [x1, w0, uxtw #2]
  40cc04:	ldp	x1, x0, [x19, #168]
  40cc08:	add	x23, x19, #0x90
  40cc0c:	cmp	x0, x1
  40cc10:	b.eq	40d170 <ferror@plt+0xa7d0>  // b.none
  40cc14:	add	x0, x1, #0x1
  40cc18:	str	x0, [x19, #168]
  40cc1c:	strb	w20, [x1]
  40cc20:	ldp	x0, x3, [x19, #168]
  40cc24:	ldp	x27, x28, [sp, #80]
  40cc28:	cmp	x0, x3
  40cc2c:	b.ne	40cad8 <ferror@plt+0xa138>  // b.any
  40cc30:	add	x20, x19, #0x90
  40cc34:	mov	x1, #0x1                   	// #1
  40cc38:	mov	x0, x20
  40cc3c:	bl	4175a8 <_obstack_newchunk@@Base>
  40cc40:	ldr	x0, [x19, #168]
  40cc44:	b	40cad8 <ferror@plt+0xa138>
  40cc48:	bl	40b970 <ferror@plt+0x8fd0>
  40cc4c:	b	40ca48 <ferror@plt+0xa0a8>
  40cc50:	mov	x0, x21
  40cc54:	mov	x1, #0x1                   	// #1
  40cc58:	bl	4175a8 <_obstack_newchunk@@Base>
  40cc5c:	ldr	x0, [x21, #24]
  40cc60:	b	40ca7c <ferror@plt+0xa0dc>
  40cc64:	ldrb	w0, [x19, #224]
  40cc68:	orr	w0, w0, #0x2
  40cc6c:	strb	w0, [x19, #224]
  40cc70:	b	40cafc <ferror@plt+0xa15c>
  40cc74:	bl	40b970 <ferror@plt+0x8fd0>
  40cc78:	mov	w21, #0x0                   	// #0
  40cc7c:	mov	w0, w21
  40cc80:	ldp	x19, x20, [sp, #16]
  40cc84:	ldp	x21, x22, [sp, #32]
  40cc88:	ldp	x25, x26, [sp, #64]
  40cc8c:	ldp	x29, x30, [sp], #176
  40cc90:	ret
  40cc94:	mov	w21, #0x2                   	// #2
  40cc98:	b	40cad0 <ferror@plt+0xa130>
  40cc9c:	ldrb	w1, [x0, #1]
  40cca0:	cbnz	w1, 40d144 <ferror@plt+0xa7a4>
  40cca4:	add	x24, x19, #0x90
  40cca8:	add	x2, x23, #0xd60
  40ccac:	ldp	x0, x1, [x24, #24]
  40ccb0:	ldr	x20, [x2, #8]
  40ccb4:	sub	x1, x1, x0
  40ccb8:	cmp	x20, x1
  40ccbc:	b.hi	40d15c <ferror@plt+0xa7bc>  // b.pmore
  40ccc0:	ldr	x1, [x23, #3424]
  40ccc4:	mov	x2, x20
  40ccc8:	adrp	x24, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40cccc:	bl	402350 <memcpy@plt>
  40ccd0:	ldr	x1, [x19, #168]
  40ccd4:	add	x0, x19, #0x90
  40ccd8:	mov	x23, x0
  40ccdc:	add	x1, x1, x20
  40cce0:	str	x1, [x19, #168]
  40cce4:	b	40cd38 <ferror@plt+0xa398>
  40cce8:	ldr	x1, [x0, #32]
  40ccec:	ldrb	w2, [x1]
  40ccf0:	cbz	w2, 40cd48 <ferror@plt+0xa3a8>
  40ccf4:	ldrb	w2, [x19, #32]
  40ccf8:	cbnz	w2, 40cd48 <ferror@plt+0xa3a8>
  40ccfc:	add	x2, x1, #0x1
  40cd00:	str	x2, [x0, #32]
  40cd04:	ldrb	w20, [x1]
  40cd08:	ldr	x0, [x24, #3440]
  40cd0c:	cmp	w20, #0x0
  40cd10:	add	x25, x24, #0xd70
  40cd14:	ldrb	w1, [x0]
  40cd18:	ccmp	w1, w20, #0x0, ne  // ne = any
  40cd1c:	b.eq	40cd94 <ferror@plt+0xa3f4>  // b.none
  40cd20:	ldp	x0, x1, [x23, #24]
  40cd24:	cmp	x1, x0
  40cd28:	b.eq	40cd80 <ferror@plt+0xa3e0>  // b.none
  40cd2c:	add	x1, x0, #0x1
  40cd30:	str	x1, [x23, #24]
  40cd34:	strb	w20, [x0]
  40cd38:	ldr	x0, [x19]
  40cd3c:	cbz	x0, 40cd48 <ferror@plt+0xa3a8>
  40cd40:	ldr	w1, [x0, #8]
  40cd44:	cbz	w1, 40cce8 <ferror@plt+0xa348>
  40cd48:	bl	40b970 <ferror@plt+0x8fd0>
  40cd4c:	mov	w20, w0
  40cd50:	cmp	w0, #0x100
  40cd54:	b.ne	40cd08 <ferror@plt+0xa368>  // b.any
  40cd58:	ldr	w3, [x21]
  40cd5c:	mov	w0, #0x1                   	// #1
  40cd60:	ldr	x2, [sp, #136]
  40cd64:	mov	w21, w0
  40cd68:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x2878>
  40cd6c:	mov	w1, #0x0                   	// #0
  40cd70:	add	x4, x4, #0x530
  40cd74:	bl	403490 <ferror@plt+0xaf0>
  40cd78:	ldp	x0, x3, [x19, #168]
  40cd7c:	b	40cad0 <ferror@plt+0xa130>
  40cd80:	mov	x0, x23
  40cd84:	mov	x1, #0x1                   	// #1
  40cd88:	bl	4175a8 <_obstack_newchunk@@Base>
  40cd8c:	ldr	x0, [x23, #24]
  40cd90:	b	40cd2c <ferror@plt+0xa38c>
  40cd94:	ldrb	w1, [x0, #1]
  40cd98:	cbz	w1, 40cdb0 <ferror@plt+0xa410>
  40cd9c:	add	x0, x0, #0x1
  40cda0:	mov	w1, #0x1                   	// #1
  40cda4:	bl	40c0e0 <ferror@plt+0x9740>
  40cda8:	tst	w0, #0xff
  40cdac:	b.eq	40cd20 <ferror@plt+0xa380>  // b.none
  40cdb0:	add	x21, x19, #0x90
  40cdb4:	ldr	x20, [x25, #8]
  40cdb8:	ldp	x0, x1, [x21, #24]
  40cdbc:	sub	x1, x1, x0
  40cdc0:	cmp	x20, x1
  40cdc4:	b.hi	40d184 <ferror@plt+0xa7e4>  // b.pmore
  40cdc8:	ldr	x1, [x24, #3440]
  40cdcc:	mov	x2, x20
  40cdd0:	mov	w21, #0x1                   	// #1
  40cdd4:	bl	402350 <memcpy@plt>
  40cdd8:	ldp	x0, x3, [x19, #168]
  40cddc:	add	x0, x0, x20
  40cde0:	str	x0, [x19, #168]
  40cde4:	b	40cad0 <ferror@plt+0xa130>
  40cde8:	mov	x1, #0x1                   	// #1
  40cdec:	mov	x0, x21
  40cdf0:	bl	4175a8 <_obstack_newchunk@@Base>
  40cdf4:	ldr	x1, [x19, #168]
  40cdf8:	b	40ca30 <ferror@plt+0xa090>
  40cdfc:	ldr	w1, [x0, #8]
  40ce00:	cmp	w1, #0x2
  40ce04:	b.ne	40d284 <ferror@plt+0xa8e4>  // b.any
  40ce08:	ldr	x2, [sp, #112]
  40ce0c:	str	w1, [x2]
  40ce10:	ldr	x1, [x0, #32]
  40ce14:	str	x1, [x2, #8]
  40ce18:	ldr	w1, [x0, #8]
  40ce1c:	cbnz	w1, 40cf00 <ferror@plt+0xa560>
  40ce20:	ldr	x1, [x0, #32]
  40ce24:	ldrb	w2, [x1]
  40ce28:	cbz	w2, 40cf00 <ferror@plt+0xa560>
  40ce2c:	ldrb	w2, [x19, #32]
  40ce30:	cbnz	w2, 40cf00 <ferror@plt+0xa560>
  40ce34:	add	x1, x1, #0x1
  40ce38:	mov	w21, #0x7                   	// #7
  40ce3c:	str	x1, [x0, #32]
  40ce40:	b	40cb3c <ferror@plt+0xa19c>
  40ce44:	ldrb	w1, [x0, #1]
  40ce48:	cbnz	w1, 40d1a4 <ferror@plt+0xa804>
  40ce4c:	add	x0, x27, #0xd48
  40ce50:	str	x0, [sp, #120]
  40ce54:	adrp	x24, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ce58:	add	x24, x24, #0xd80
  40ce5c:	ldr	x0, [x0, #8]
  40ce60:	cmp	x0, #0x1
  40ce64:	b.eq	40d1d4 <ferror@plt+0xa834>  // b.none
  40ce68:	str	wzr, [sp, #156]
  40ce6c:	ldr	x27, [x25, #2128]
  40ce70:	add	x22, x19, #0x90
  40ce74:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ce78:	mov	w20, #0x1                   	// #1
  40ce7c:	add	x0, x0, #0x510
  40ce80:	str	x0, [sp, #144]
  40ce84:	nop
  40ce88:	cbz	x27, 40cea4 <ferror@plt+0xa504>
  40ce8c:	ldr	w0, [x27, #8]
  40ce90:	cbnz	w0, 40cea4 <ferror@plt+0xa504>
  40ce94:	ldr	x0, [x27, #32]
  40ce98:	str	x0, [sp, #128]
  40ce9c:	ldrb	w0, [x0]
  40cea0:	cbnz	w0, 40cfd0 <ferror@plt+0xa630>
  40cea4:	bl	40b970 <ferror@plt+0x8fd0>
  40cea8:	mov	w26, w0
  40ceac:	cmp	w0, #0x100
  40ceb0:	b.eq	40cf68 <ferror@plt+0xa5c8>  // b.none
  40ceb4:	ldr	x0, [x24]
  40ceb8:	ldrb	w1, [x0]
  40cebc:	cmp	w1, w26
  40cec0:	b.eq	40cf0c <ferror@plt+0xa56c>  // b.none
  40cec4:	ldr	x0, [sp, #120]
  40cec8:	cmp	w26, #0x0
  40cecc:	and	w28, w26, #0xff
  40ced0:	ldr	x0, [x0]
  40ced4:	ldrb	w1, [x0]
  40ced8:	ccmp	w1, w26, #0x0, ne  // ne = any
  40cedc:	b.eq	40cfa0 <ferror@plt+0xa600>  // b.none
  40cee0:	ldp	x0, x1, [x22, #24]
  40cee4:	cmp	x1, x0
  40cee8:	b.eq	40cf8c <ferror@plt+0xa5ec>  // b.none
  40ceec:	add	x1, x0, #0x1
  40cef0:	str	x1, [x22, #24]
  40cef4:	strb	w28, [x0]
  40cef8:	ldr	x27, [x19]
  40cefc:	b	40ce88 <ferror@plt+0xa4e8>
  40cf00:	mov	w21, #0x7                   	// #7
  40cf04:	bl	40b970 <ferror@plt+0x8fd0>
  40cf08:	b	40cb3c <ferror@plt+0xa19c>
  40cf0c:	cbz	w26, 40cf7c <ferror@plt+0xa5dc>
  40cf10:	ldrb	w1, [x0, #1]
  40cf14:	cbnz	w1, 40d094 <ferror@plt+0xa6f4>
  40cf18:	subs	w20, w20, #0x1
  40cf1c:	ldp	x0, x3, [x22, #24]
  40cf20:	b.eq	40d198 <ferror@plt+0xa7f8>  // b.none
  40cf24:	ldr	x26, [x24, #8]
  40cf28:	sub	x3, x3, x0
  40cf2c:	cmp	x26, x3
  40cf30:	b.hi	40cf54 <ferror@plt+0xa5b4>  // b.pmore
  40cf34:	ldr	x1, [x24]
  40cf38:	mov	x2, x26
  40cf3c:	bl	402350 <memcpy@plt>
  40cf40:	ldr	x0, [x22, #24]
  40cf44:	ldr	x27, [x19]
  40cf48:	add	x26, x0, x26
  40cf4c:	str	x26, [x22, #24]
  40cf50:	b	40ce88 <ferror@plt+0xa4e8>
  40cf54:	mov	x0, x22
  40cf58:	mov	x1, x26
  40cf5c:	bl	4175a8 <_obstack_newchunk@@Base>
  40cf60:	ldr	x0, [x22, #24]
  40cf64:	b	40cf34 <ferror@plt+0xa594>
  40cf68:	ldp	x2, x4, [sp, #136]
  40cf6c:	mov	w1, #0x0                   	// #0
  40cf70:	ldr	w3, [x21]
  40cf74:	mov	w0, #0x1                   	// #1
  40cf78:	bl	403490 <ferror@plt+0xaf0>
  40cf7c:	ldp	x0, x1, [x22, #24]
  40cf80:	mov	w28, #0x0                   	// #0
  40cf84:	cmp	x1, x0
  40cf88:	b.ne	40ceec <ferror@plt+0xa54c>  // b.any
  40cf8c:	mov	x0, x22
  40cf90:	mov	x1, #0x1                   	// #1
  40cf94:	bl	4175a8 <_obstack_newchunk@@Base>
  40cf98:	ldr	x0, [x22, #24]
  40cf9c:	b	40ceec <ferror@plt+0xa54c>
  40cfa0:	ldrb	w1, [x0, #1]
  40cfa4:	cbnz	w1, 40d0ac <ferror@plt+0xa70c>
  40cfa8:	ldp	x0, x1, [x22, #24]
  40cfac:	add	w20, w20, #0x1
  40cfb0:	ldr	x2, [sp, #120]
  40cfb4:	ldr	x26, [x2, #8]
  40cfb8:	sub	x1, x1, x0
  40cfbc:	cmp	x26, x1
  40cfc0:	b.hi	40d0c4 <ferror@plt+0xa724>  // b.pmore
  40cfc4:	ldr	x1, [sp, #120]
  40cfc8:	ldr	x1, [x1]
  40cfcc:	b	40cf38 <ferror@plt+0xa598>
  40cfd0:	ldp	x0, x4, [sp, #120]
  40cfd4:	ldr	x1, [x0]
  40cfd8:	ldr	x0, [x24]
  40cfdc:	ldrb	w26, [x1]
  40cfe0:	ldr	x1, [x27, #40]
  40cfe4:	str	x1, [sp, #104]
  40cfe8:	ldrb	w28, [x0]
  40cfec:	nop
  40cff0:	ldr	x0, [sp, #104]
  40cff4:	mov	w2, w28
  40cff8:	mov	w1, w26
  40cffc:	sub	x3, x0, x4
  40d000:	mov	x0, x4
  40d004:	bl	413b10 <ferror@plt+0x11170>
  40d008:	cmp	x0, #0x0
  40d00c:	mov	x4, x0
  40d010:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  40d014:	b.eq	40d0d8 <ferror@plt+0xa738>  // b.none
  40d018:	ldrb	w0, [x4], #1
  40d01c:	cmp	w0, w28
  40d020:	b.eq	40d088 <ferror@plt+0xa6e8>  // b.none
  40d024:	adds	w20, w20, #0x1
  40d028:	b.ne	40cff0 <ferror@plt+0xa650>  // b.any
  40d02c:	ldr	w0, [sp, #156]
  40d030:	cbnz	w0, 40d1f0 <ferror@plt+0xa850>
  40d034:	ldr	x1, [sp, #128]
  40d038:	ldr	x0, [x22, #24]
  40d03c:	sub	x26, x4, x1
  40d040:	ldr	x1, [x22, #32]
  40d044:	sub	x1, x1, x0
  40d048:	cmp	x26, x1
  40d04c:	b.hi	40d124 <ferror@plt+0xa784>  // b.pmore
  40d050:	ldr	x1, [sp, #128]
  40d054:	mov	x2, x26
  40d058:	str	x4, [sp, #104]
  40d05c:	bl	402350 <memcpy@plt>
  40d060:	ldr	x1, [x22, #24]
  40d064:	add	x2, x26, #0x1
  40d068:	ldr	x4, [sp, #104]
  40d06c:	add	x1, x1, x26
  40d070:	ldr	x0, [x27, #32]
  40d074:	str	x1, [x22, #24]
  40d078:	add	x0, x0, x2
  40d07c:	ldrb	w26, [x4]
  40d080:	str	x0, [x27, #32]
  40d084:	b	40ceb4 <ferror@plt+0xa514>
  40d088:	subs	w20, w20, #0x1
  40d08c:	b.ne	40cff0 <ferror@plt+0xa650>  // b.any
  40d090:	b	40d02c <ferror@plt+0xa68c>
  40d094:	add	x0, x0, #0x1
  40d098:	mov	w1, #0x1                   	// #1
  40d09c:	bl	40c0e0 <ferror@plt+0x9740>
  40d0a0:	tst	w0, #0xff
  40d0a4:	b.ne	40cf18 <ferror@plt+0xa578>  // b.any
  40d0a8:	b	40cec4 <ferror@plt+0xa524>
  40d0ac:	add	x0, x0, #0x1
  40d0b0:	mov	w1, #0x1                   	// #1
  40d0b4:	bl	40c0e0 <ferror@plt+0x9740>
  40d0b8:	tst	w0, #0xff
  40d0bc:	b.eq	40cee0 <ferror@plt+0xa540>  // b.none
  40d0c0:	b	40cfa8 <ferror@plt+0xa608>
  40d0c4:	mov	x0, x22
  40d0c8:	mov	x1, x26
  40d0cc:	bl	4175a8 <_obstack_newchunk@@Base>
  40d0d0:	ldr	x0, [x22, #24]
  40d0d4:	b	40cfc4 <ferror@plt+0xa624>
  40d0d8:	cbnz	x0, 40d02c <ferror@plt+0xa68c>
  40d0dc:	ldr	x1, [sp, #104]
  40d0e0:	ldr	x2, [sp, #128]
  40d0e4:	ldr	x0, [x22, #24]
  40d0e8:	sub	x26, x1, x2
  40d0ec:	ldr	x1, [x22, #32]
  40d0f0:	sub	x1, x1, x0
  40d0f4:	cmp	x26, x1
  40d0f8:	b.hi	40d1bc <ferror@plt+0xa81c>  // b.pmore
  40d0fc:	ldr	x1, [sp, #128]
  40d100:	mov	x2, x26
  40d104:	bl	402350 <memcpy@plt>
  40d108:	ldr	x1, [x22, #24]
  40d10c:	ldr	x0, [x27, #32]
  40d110:	add	x1, x1, x26
  40d114:	str	x1, [x22, #24]
  40d118:	add	x26, x0, x26
  40d11c:	str	x26, [x27, #32]
  40d120:	b	40ce88 <ferror@plt+0xa4e8>
  40d124:	mov	x0, x22
  40d128:	mov	x1, x26
  40d12c:	str	x4, [sp, #104]
  40d130:	bl	4175a8 <_obstack_newchunk@@Base>
  40d134:	ldr	x27, [x19]
  40d138:	ldr	x0, [x22, #24]
  40d13c:	ldr	x4, [sp, #104]
  40d140:	b	40d050 <ferror@plt+0xa6b0>
  40d144:	add	x0, x0, #0x1
  40d148:	mov	w1, #0x1                   	// #1
  40d14c:	bl	40c0e0 <ferror@plt+0x9740>
  40d150:	tst	w0, #0xff
  40d154:	b.ne	40cca4 <ferror@plt+0xa304>  // b.any
  40d158:	b	40ca00 <ferror@plt+0xa060>
  40d15c:	mov	x0, x24
  40d160:	mov	x1, x20
  40d164:	bl	4175a8 <_obstack_newchunk@@Base>
  40d168:	ldr	x0, [x24, #24]
  40d16c:	b	40ccc0 <ferror@plt+0xa320>
  40d170:	mov	x1, #0x1                   	// #1
  40d174:	mov	x0, x23
  40d178:	bl	4175a8 <_obstack_newchunk@@Base>
  40d17c:	ldr	x1, [x19, #168]
  40d180:	b	40cc14 <ferror@plt+0xa274>
  40d184:	mov	x0, x21
  40d188:	mov	x1, x20
  40d18c:	bl	4175a8 <_obstack_newchunk@@Base>
  40d190:	ldr	x0, [x21, #24]
  40d194:	b	40cdc8 <ferror@plt+0xa428>
  40d198:	mov	w21, #0x1                   	// #1
  40d19c:	ldp	x27, x28, [sp, #80]
  40d1a0:	b	40cad0 <ferror@plt+0xa130>
  40d1a4:	add	x0, x0, #0x1
  40d1a8:	mov	w1, #0x1                   	// #1
  40d1ac:	bl	40c0e0 <ferror@plt+0x9740>
  40d1b0:	tst	w0, #0xff
  40d1b4:	b.ne	40ce4c <ferror@plt+0xa4ac>  // b.any
  40d1b8:	b	40cbe8 <ferror@plt+0xa248>
  40d1bc:	mov	x0, x22
  40d1c0:	mov	x1, x26
  40d1c4:	bl	4175a8 <_obstack_newchunk@@Base>
  40d1c8:	ldr	x27, [x19]
  40d1cc:	ldr	x0, [x22, #24]
  40d1d0:	b	40d0fc <ferror@plt+0xa75c>
  40d1d4:	ldr	x0, [x24, #8]
  40d1d8:	mov	w1, #0x0                   	// #0
  40d1dc:	cmp	x0, #0x1
  40d1e0:	csel	w23, w23, w0, ne  // ne = any
  40d1e4:	csel	w0, w1, w0, ne  // ne = any
  40d1e8:	str	w0, [sp, #156]
  40d1ec:	b	40ce6c <ferror@plt+0xa4cc>
  40d1f0:	cbnz	w20, 40d260 <ferror@plt+0xa8c0>
  40d1f4:	ldr	x0, [sp, #128]
  40d1f8:	add	x21, x19, #0x90
  40d1fc:	ldr	x1, [x19, #176]
  40d200:	sub	x23, x4, x0
  40d204:	ldr	x0, [x19, #168]
  40d208:	sub	x20, x23, #0x1
  40d20c:	sub	x1, x1, x0
  40d210:	cmp	x20, x1
  40d214:	b.hi	40d248 <ferror@plt+0xa8a8>  // b.pmore
  40d218:	ldr	x1, [sp, #128]
  40d21c:	mov	x2, x20
  40d220:	mov	w21, #0x1                   	// #1
  40d224:	bl	402350 <memcpy@plt>
  40d228:	ldp	x0, x3, [x19, #168]
  40d22c:	ldr	x4, [x27, #32]
  40d230:	add	x4, x4, x23
  40d234:	str	x4, [x27, #32]
  40d238:	add	x0, x0, x20
  40d23c:	str	x0, [x19, #168]
  40d240:	ldp	x27, x28, [sp, #80]
  40d244:	b	40cad0 <ferror@plt+0xa130>
  40d248:	mov	x0, x21
  40d24c:	mov	x1, x20
  40d250:	bl	4175a8 <_obstack_newchunk@@Base>
  40d254:	ldr	x27, [x25, #2128]
  40d258:	ldr	x0, [x19, #168]
  40d25c:	b	40d218 <ferror@plt+0xa878>
  40d260:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d264:	add	x3, x3, #0x550
  40d268:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d26c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d270:	add	x3, x3, #0x18
  40d274:	add	x1, x1, #0x4f8
  40d278:	add	x0, x0, #0x500
  40d27c:	mov	w2, #0x3cd                 	// #973
  40d280:	bl	402910 <__assert_fail@plt>
  40d284:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40d288:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d28c:	add	x2, x2, #0x4c8
  40d290:	mov	w1, #0x0                   	// #0
  40d294:	ldr	w0, [x0, #1628]
  40d298:	stp	x23, x24, [sp, #48]
  40d29c:	stp	x27, x28, [sp, #80]
  40d2a0:	bl	4033d0 <ferror@plt+0xa30>
  40d2a4:	bl	4026d0 <abort@plt>
  40d2a8:	stp	x29, x30, [sp, #-32]!
  40d2ac:	mov	x29, sp
  40d2b0:	stp	x19, x20, [sp, #16]
  40d2b4:	bl	40baa8 <ferror@plt+0x9108>
  40d2b8:	mov	w19, w0
  40d2bc:	cmp	w19, #0x100
  40d2c0:	mov	w0, #0x0                   	// #0
  40d2c4:	b.eq	40d34c <ferror@plt+0xa9ac>  // b.none
  40d2c8:	cmp	w19, #0x101
  40d2cc:	mov	w0, #0x7                   	// #7
  40d2d0:	b.eq	40d34c <ferror@plt+0xa9ac>  // b.none
  40d2d4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d2d8:	cmp	w19, #0x0
  40d2dc:	cset	w20, ne  // ne = any
  40d2e0:	ldr	x0, [x0, #3424]
  40d2e4:	cmp	w20, #0x0
  40d2e8:	ldrb	w1, [x0]
  40d2ec:	ccmp	w1, w19, #0x0, ne  // ne = any
  40d2f0:	b.eq	40d358 <ferror@plt+0xa9b8>  // b.none
  40d2f4:	bl	402770 <__ctype_b_loc@plt>
  40d2f8:	mov	x1, x0
  40d2fc:	cmp	w19, #0x5f
  40d300:	mov	w0, #0x2                   	// #2
  40d304:	ldr	x1, [x1]
  40d308:	ldrh	w1, [x1, w19, sxtw #1]
  40d30c:	and	w1, w1, #0x400
  40d310:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  40d314:	b.ne	40d34c <ferror@plt+0xa9ac>  // b.any
  40d318:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d31c:	cmp	w20, #0x0
  40d320:	ldr	x0, [x0, #3400]
  40d324:	ldrb	w1, [x0]
  40d328:	ccmp	w1, w19, #0x0, ne  // ne = any
  40d32c:	b.eq	40d370 <ferror@plt+0xa9d0>  // b.none
  40d330:	sub	w19, w19, #0x28
  40d334:	mov	w0, #0x6                   	// #6
  40d338:	cmp	w19, #0x4
  40d33c:	b.hi	40d34c <ferror@plt+0xa9ac>  // b.pmore
  40d340:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d344:	add	x0, x0, #0x550
  40d348:	ldr	w0, [x0, w19, uxtw #2]
  40d34c:	ldp	x19, x20, [sp, #16]
  40d350:	ldp	x29, x30, [sp], #32
  40d354:	ret
  40d358:	ldrb	w1, [x0, #1]
  40d35c:	cbnz	w1, 40d390 <ferror@plt+0xa9f0>
  40d360:	mov	w0, #0x1                   	// #1
  40d364:	ldp	x19, x20, [sp, #16]
  40d368:	ldp	x29, x30, [sp], #32
  40d36c:	ret
  40d370:	ldrb	w1, [x0, #1]
  40d374:	cbz	w1, 40d360 <ferror@plt+0xa9c0>
  40d378:	mov	w1, #0x0                   	// #0
  40d37c:	bl	40c0e0 <ferror@plt+0x9740>
  40d380:	tst	w0, #0xff
  40d384:	b.eq	40d330 <ferror@plt+0xa990>  // b.none
  40d388:	mov	w0, #0x1                   	// #1
  40d38c:	b	40d364 <ferror@plt+0xa9c4>
  40d390:	mov	w1, #0x0                   	// #0
  40d394:	bl	40c0e0 <ferror@plt+0x9740>
  40d398:	tst	w0, #0xff
  40d39c:	b.eq	40d2f4 <ferror@plt+0xa954>  // b.none
  40d3a0:	mov	w0, #0x1                   	// #1
  40d3a4:	b	40d364 <ferror@plt+0xa9c4>
  40d3a8:	mov	x4, x0
  40d3ac:	mov	x0, x3
  40d3b0:	ldr	w6, [x4, #24]
  40d3b4:	cmp	w6, #0x1
  40d3b8:	b.eq	40d3d0 <ferror@plt+0xaa30>  // b.none
  40d3bc:	cmp	w6, #0x2
  40d3c0:	b.ne	40d3e0 <ferror@plt+0xaa40>  // b.any
  40d3c4:	ldr	x3, [x4, #32]
  40d3c8:	mov	x16, x3
  40d3cc:	br	x16
  40d3d0:	mov	x3, x2
  40d3d4:	mov	w2, w1
  40d3d8:	mov	x1, x4
  40d3dc:	b	408010 <ferror@plt+0x5670>
  40d3e0:	stp	x29, x30, [sp, #-16]!
  40d3e4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40d3e8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d3ec:	mov	x29, sp
  40d3f0:	ldr	w0, [x0, #1628]
  40d3f4:	add	x2, x2, #0x578
  40d3f8:	mov	w1, #0x0                   	// #0
  40d3fc:	bl	4033d0 <ferror@plt+0xa30>
  40d400:	bl	4026d0 <abort@plt>
  40d404:	nop
  40d408:	stp	x29, x30, [sp, #-288]!
  40d40c:	cmp	w1, #0x2
  40d410:	mov	x29, sp
  40d414:	stp	x19, x20, [sp, #16]
  40d418:	mov	x20, x0
  40d41c:	mov	x19, x2
  40d420:	stp	x21, x22, [sp, #32]
  40d424:	mov	w21, w3
  40d428:	b.eq	40d49c <ferror@plt+0xaafc>  // b.none
  40d42c:	b.hi	40d464 <ferror@plt+0xaac4>  // b.pmore
  40d430:	cbz	w1, 40d454 <ferror@plt+0xaab4>
  40d434:	ldr	x19, [x19]
  40d438:	mov	x0, x19
  40d43c:	bl	402390 <strlen@plt>
  40d440:	mov	w3, w21
  40d444:	mov	w2, w0
  40d448:	mov	x1, x19
  40d44c:	mov	x0, x20
  40d450:	bl	40eb20 <ferror@plt+0xc180>
  40d454:	ldp	x19, x20, [sp, #16]
  40d458:	ldp	x21, x22, [sp, #32]
  40d45c:	ldp	x29, x30, [sp], #288
  40d460:	ret
  40d464:	cmp	w1, #0x6
  40d468:	b.ls	40d434 <ferror@plt+0xaa94>  // b.plast
  40d46c:	cmp	w1, #0x7
  40d470:	b.eq	40d454 <ferror@plt+0xaab4>  // b.none
  40d474:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40d478:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d47c:	add	x2, x2, #0x648
  40d480:	mov	w1, #0x0                   	// #0
  40d484:	ldr	w0, [x0, #1628]
  40d488:	stp	x23, x24, [sp, #48]
  40d48c:	stp	x25, x26, [sp, #64]
  40d490:	stp	x27, x28, [sp, #80]
  40d494:	bl	4033d0 <ferror@plt+0xa30>
  40d498:	bl	4026d0 <abort@plt>
  40d49c:	ldr	x0, [x2]
  40d4a0:	mov	w1, #0x0                   	// #0
  40d4a4:	bl	40fd00 <ferror@plt+0xd360>
  40d4a8:	mov	x22, x0
  40d4ac:	cbz	x0, 40d434 <ferror@plt+0xaa94>
  40d4b0:	ldr	w0, [x0, #24]
  40d4b4:	cbz	w0, 40d434 <ferror@plt+0xaa94>
  40d4b8:	cmp	w0, #0x2
  40d4bc:	b.ne	40d4c8 <ferror@plt+0xab28>  // b.any
  40d4c0:	ldrb	w0, [x22, #8]
  40d4c4:	tbnz	w0, #3, 40d7c8 <ferror@plt+0xae28>
  40d4c8:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  40d4cc:	add	x21, x21, #0x940
  40d4d0:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x19878>
  40d4d4:	stp	x23, x24, [sp, #48]
  40d4d8:	ldr	w1, [x22, #12]
  40d4dc:	ldr	w3, [x2, #840]
  40d4e0:	ldr	w0, [x21, #88]
  40d4e4:	add	w1, w1, #0x1
  40d4e8:	cmp	w3, #0x0
  40d4ec:	stp	x25, x26, [sp, #64]
  40d4f0:	add	w0, w0, #0x1
  40d4f4:	stp	x27, x28, [sp, #80]
  40d4f8:	ccmp	w0, w3, #0x4, gt
  40d4fc:	str	w0, [x21, #88]
  40d500:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d504:	str	w1, [x22, #12]
  40d508:	ldr	w0, [x0, #3392]
  40d50c:	str	w0, [sp, #152]
  40d510:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d514:	ldr	x0, [x0, #3416]
  40d518:	str	x0, [sp, #120]
  40d51c:	b.gt	40db60 <ferror@plt+0xb1c0>
  40d520:	ldp	x1, x0, [x21, #112]
  40d524:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  40d528:	ldr	w3, [x21, #92]
  40d52c:	ldr	w2, [x19, #1644]
  40d530:	add	w3, w3, #0x1
  40d534:	str	w3, [x21, #92]
  40d538:	str	w3, [sp, #156]
  40d53c:	and	w3, w2, #0x8
  40d540:	sub	x0, x0, x1
  40d544:	str	w3, [sp, #112]
  40d548:	str	x0, [sp, #128]
  40d54c:	ldr	x3, [x21, #16]
  40d550:	ldr	x1, [x21, #24]
  40d554:	tbnz	w2, #3, 40d5a0 <ferror@plt+0xac00>
  40d558:	ldrb	w0, [x22, #8]
  40d55c:	cmp	x1, x3
  40d560:	and	w23, w0, #0x1
  40d564:	b.eq	40d788 <ferror@plt+0xade8>  // b.none
  40d568:	add	x27, sp, #0xc8
  40d56c:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40d570:	adrp	x3, 416000 <ferror@plt+0x13660>
  40d574:	mov	x0, x27
  40d578:	add	x4, x4, #0x7c0
  40d57c:	add	x3, x3, #0x968
  40d580:	mov	x2, #0x0                   	// #0
  40d584:	mov	x1, #0x0                   	// #0
  40d588:	bl	417578 <_obstack_begin@@Base>
  40d58c:	cbnz	w23, 40d5cc <ferror@plt+0xac2c>
  40d590:	ldrb	w0, [x22, #8]
  40d594:	str	wzr, [sp, #116]
  40d598:	ldr	x1, [sp, #224]
  40d59c:	b	40d5e8 <ferror@plt+0xac48>
  40d5a0:	cmp	x1, x3
  40d5a4:	b.eq	40d7b0 <ferror@plt+0xae10>  // b.none
  40d5a8:	add	x27, sp, #0xc8
  40d5ac:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40d5b0:	adrp	x3, 416000 <ferror@plt+0x13660>
  40d5b4:	mov	x0, x27
  40d5b8:	add	x4, x4, #0x7c0
  40d5bc:	add	x3, x3, #0x968
  40d5c0:	mov	x2, #0x0                   	// #0
  40d5c4:	mov	x1, #0x0                   	// #0
  40d5c8:	bl	417578 <_obstack_begin@@Base>
  40d5cc:	ldr	w0, [x19, #1644]
  40d5d0:	tbnz	w0, #7, 40db8c <ferror@plt+0xb1ec>
  40d5d4:	mov	w0, #0x1                   	// #1
  40d5d8:	stp	w0, wzr, [sp, #112]
  40d5dc:	ldrb	w0, [x22, #8]
  40d5e0:	ldr	x1, [sp, #224]
  40d5e4:	nop
  40d5e8:	ubfx	x0, x0, #2, #1
  40d5ec:	ldr	x2, [x27, #32]
  40d5f0:	mov	w4, #0x1                   	// #1
  40d5f4:	ldr	x3, [x22, #16]
  40d5f8:	str	x0, [sp, #104]
  40d5fc:	str	w4, [sp, #168]
  40d600:	sub	x2, x2, x1
  40d604:	str	x3, [sp, #176]
  40d608:	cmp	x2, #0xf
  40d60c:	b.ls	40d7e4 <ferror@plt+0xae44>  // b.plast
  40d610:	ldp	x2, x3, [sp, #168]
  40d614:	stp	x2, x3, [x1]
  40d618:	ldp	x20, x0, [x27, #16]
  40d61c:	add	x0, x0, #0x10
  40d620:	cmp	x0, x20
  40d624:	b.eq	40d874 <ferror@plt+0xaed4>  // b.none
  40d628:	ldr	x1, [x27, #48]
  40d62c:	ldr	x2, [x27, #8]
  40d630:	add	x0, x0, x1
  40d634:	ldr	x3, [x27, #32]
  40d638:	bic	x1, x0, x1
  40d63c:	str	x1, [x27, #24]
  40d640:	sub	x0, x1, x2
  40d644:	sub	x2, x3, x2
  40d648:	cmp	x0, x2
  40d64c:	b.ls	40d658 <ferror@plt+0xacb8>  // b.plast
  40d650:	mov	x1, x3
  40d654:	str	x3, [x27, #24]
  40d658:	str	x1, [x27, #16]
  40d65c:	add	x19, x21, #0x60
  40d660:	ldr	x0, [x21, #120]
  40d664:	ldr	x1, [x21, #128]
  40d668:	sub	x1, x1, x0
  40d66c:	cmp	x1, #0x7
  40d670:	b.ls	40d7f8 <ferror@plt+0xae58>  // b.plast
  40d674:	add	x19, x21, #0x60
  40d678:	str	x20, [x0]
  40d67c:	ldr	x0, [x19, #24]
  40d680:	add	x0, x0, #0x8
  40d684:	str	x0, [x19, #24]
  40d688:	bl	40d2a8 <ferror@plt+0xa908>
  40d68c:	cmp	w0, #0x3
  40d690:	b.eq	40d884 <ferror@plt+0xaee4>  // b.none
  40d694:	ldr	x0, [x19, #24]
  40d698:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d69c:	ldr	x23, [x21, #112]
  40d6a0:	ldr	x1, [sp, #128]
  40d6a4:	sub	x20, x0, x23
  40d6a8:	ldr	x25, [x2, #3416]
  40d6ac:	mov	x0, x1
  40d6b0:	sub	x20, x20, w1, uxtw
  40d6b4:	and	x19, x1, #0xffffffff
  40d6b8:	mov	x1, x2
  40d6bc:	add	x24, x23, w0, uxtw
  40d6c0:	ldr	x2, [sp, #120]
  40d6c4:	lsr	x20, x20, #3
  40d6c8:	str	x2, [x1, #3416]
  40d6cc:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d6d0:	mov	x0, x1
  40d6d4:	ldr	w26, [x1, #3392]
  40d6d8:	ldr	w1, [sp, #152]
  40d6dc:	str	w1, [x0, #3392]
  40d6e0:	ldr	w0, [sp, #112]
  40d6e4:	cbnz	w0, 40d818 <ferror@plt+0xae78>
  40d6e8:	bl	40beb8 <ferror@plt+0x9518>
  40d6ec:	mov	x3, x0
  40d6f0:	mov	x2, x24
  40d6f4:	mov	w1, w20
  40d6f8:	mov	x0, x22
  40d6fc:	bl	40d3a8 <ferror@plt+0xaa08>
  40d700:	bl	40bfa8 <ferror@plt+0x9608>
  40d704:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d708:	ldr	w0, [x21, #88]
  40d70c:	ldr	w1, [x22, #12]
  40d710:	str	x25, [x3, #3416]
  40d714:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d718:	ldrb	w2, [x22, #8]
  40d71c:	sub	w0, w0, #0x1
  40d720:	sub	w1, w1, #0x1
  40d724:	str	w26, [x3, #3392]
  40d728:	str	w1, [x22, #12]
  40d72c:	str	w0, [x21, #88]
  40d730:	tbnz	w2, #4, 40d80c <ferror@plt+0xae6c>
  40d734:	ldr	w0, [sp, #116]
  40d738:	cbz	w0, 40d864 <ferror@plt+0xaec4>
  40d73c:	ldr	x1, [x23, x19]
  40d740:	ldr	x0, [x21, #8]
  40d744:	cmp	x1, x0
  40d748:	b.ls	40d7d8 <ferror@plt+0xae38>  // b.plast
  40d74c:	ldr	x0, [x21, #32]
  40d750:	cmp	x1, x0
  40d754:	b.cs	40d7d8 <ferror@plt+0xae38>  // b.hs, b.nlast
  40d758:	stp	x1, x1, [x21, #16]
  40d75c:	neg	w20, w20
  40d760:	ldr	x0, [x21, #120]
  40d764:	ldp	x23, x24, [sp, #48]
  40d768:	add	x20, x0, w20, sxtw #3
  40d76c:	ldp	x25, x26, [sp, #64]
  40d770:	ldp	x27, x28, [sp, #80]
  40d774:	str	x20, [x21, #120]
  40d778:	ldp	x19, x20, [sp, #16]
  40d77c:	ldp	x21, x22, [sp, #32]
  40d780:	ldp	x29, x30, [sp], #288
  40d784:	ret
  40d788:	mov	w3, #0x1                   	// #1
  40d78c:	str	w3, [sp, #116]
  40d790:	mov	x27, x21
  40d794:	cbz	w23, 40d5e8 <ferror@plt+0xac48>
  40d798:	tbnz	w2, #7, 40db78 <ferror@plt+0xb1d8>
  40d79c:	mov	w1, #0x1                   	// #1
  40d7a0:	mov	x27, x21
  40d7a4:	stp	w1, w1, [sp, #112]
  40d7a8:	ldr	x1, [x21, #24]
  40d7ac:	b	40d5e8 <ferror@plt+0xac48>
  40d7b0:	tbnz	w2, #7, 40db78 <ferror@plt+0xb1d8>
  40d7b4:	mov	w2, #0x1                   	// #1
  40d7b8:	ldrb	w0, [x22, #8]
  40d7bc:	mov	x27, x21
  40d7c0:	stp	w2, w2, [sp, #112]
  40d7c4:	b	40d5e8 <ferror@plt+0xac48>
  40d7c8:	bl	40d2a8 <ferror@plt+0xa908>
  40d7cc:	cmp	w0, #0x3
  40d7d0:	b.ne	40d434 <ferror@plt+0xaa94>  // b.any
  40d7d4:	b	40d4c8 <ferror@plt+0xab28>
  40d7d8:	mov	x0, x21
  40d7dc:	bl	4176f8 <_obstack_free@@Base>
  40d7e0:	b	40d75c <ferror@plt+0xadbc>
  40d7e4:	mov	x1, #0x10                  	// #16
  40d7e8:	mov	x0, x27
  40d7ec:	bl	4175a8 <_obstack_newchunk@@Base>
  40d7f0:	ldr	x1, [x27, #24]
  40d7f4:	b	40d610 <ferror@plt+0xac70>
  40d7f8:	mov	x0, x19
  40d7fc:	mov	x1, #0x8                   	// #8
  40d800:	bl	4175a8 <_obstack_newchunk@@Base>
  40d804:	ldr	x0, [x21, #120]
  40d808:	b	40d674 <ferror@plt+0xacd4>
  40d80c:	mov	x0, x22
  40d810:	bl	40fcd8 <ferror@plt+0xd338>
  40d814:	b	40d734 <ferror@plt+0xad94>
  40d818:	ldr	w27, [sp, #156]
  40d81c:	mov	x3, x24
  40d820:	ldr	x0, [x22, #16]
  40d824:	mov	w2, w20
  40d828:	mov	w1, w27
  40d82c:	bl	408cc8 <ferror@plt+0x6328>
  40d830:	bl	40beb8 <ferror@plt+0x9518>
  40d834:	mov	x3, x0
  40d838:	mov	x2, x24
  40d83c:	mov	w1, w20
  40d840:	mov	x0, x22
  40d844:	bl	40d3a8 <ferror@plt+0xaa08>
  40d848:	bl	40bfa8 <ferror@plt+0x9608>
  40d84c:	mov	x3, x0
  40d850:	ldr	x0, [x22, #16]
  40d854:	mov	w2, w20
  40d858:	mov	w1, w27
  40d85c:	bl	408e28 <ferror@plt+0x6488>
  40d860:	b	40d704 <ferror@plt+0xad64>
  40d864:	add	x0, sp, #0xc8
  40d868:	mov	x1, #0x0                   	// #0
  40d86c:	bl	4176f8 <_obstack_free@@Base>
  40d870:	b	40d75c <ferror@plt+0xadbc>
  40d874:	ldrb	w1, [x27, #80]
  40d878:	orr	w1, w1, #0x2
  40d87c:	strb	w1, [x27, #80]
  40d880:	b	40d628 <ferror@plt+0xac88>
  40d884:	mov	x1, #0x0                   	// #0
  40d888:	add	x0, sp, #0xa8
  40d88c:	adrp	x25, 41a000 <_obstack_memory_used@@Base+0x2878>
  40d890:	bl	40c948 <ferror@plt+0x9fa8>
  40d894:	add	x23, sp, #0xc0
  40d898:	add	x25, x25, #0x5e8
  40d89c:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d8a0:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40d8a4:	add	x1, x1, #0xd58
  40d8a8:	add	x0, x0, #0xd40
  40d8ac:	stp	x0, x1, [sp, #136]
  40d8b0:	ldr	x0, [sp, #144]
  40d8b4:	str	wzr, [sp, #168]
  40d8b8:	ldr	x24, [x0]
  40d8bc:	ldr	x0, [sp, #136]
  40d8c0:	ldr	w20, [x0]
  40d8c4:	b	40d8e0 <ferror@plt+0xaf40>
  40d8c8:	bl	402770 <__ctype_b_loc@plt>
  40d8cc:	ldr	x1, [sp, #192]
  40d8d0:	ldr	x0, [x0]
  40d8d4:	ldrb	w1, [x1]
  40d8d8:	ldrh	w0, [x0, x1, lsl #1]
  40d8dc:	tbz	w0, #13, 40d8f8 <ferror@plt+0xaf58>
  40d8e0:	add	x0, sp, #0xb8
  40d8e4:	mov	x1, #0x0                   	// #0
  40d8e8:	bl	40c948 <ferror@plt+0x9fa8>
  40d8ec:	mov	w28, w0
  40d8f0:	cmp	w0, #0x6
  40d8f4:	b.eq	40d8c8 <ferror@plt+0xaf28>  // b.none
  40d8f8:	mov	w19, #0x0                   	// #0
  40d8fc:	mov	w26, #0x2                   	// #2
  40d900:	b	40d92c <ferror@plt+0xaf8c>
  40d904:	mov	x4, x25
  40d908:	mov	w3, w20
  40d90c:	mov	x2, x24
  40d910:	mov	w1, #0x0                   	// #0
  40d914:	mov	w0, #0x1                   	// #1
  40d918:	bl	403490 <ferror@plt+0xaf0>
  40d91c:	add	x0, sp, #0xb8
  40d920:	mov	x1, #0x0                   	// #0
  40d924:	bl	40c948 <ferror@plt+0x9fa8>
  40d928:	mov	w28, w0
  40d92c:	cmp	w28, #0x5
  40d930:	b.hi	40dacc <ferror@plt+0xb12c>  // b.pmore
  40d934:	cmp	w28, #0x3
  40d938:	b.hi	40d990 <ferror@plt+0xaff0>  // b.pmore
  40d93c:	b.eq	40d95c <ferror@plt+0xafbc>  // b.none
  40d940:	cbz	w28, 40d904 <ferror@plt+0xaf64>
  40d944:	mov	w1, w28
  40d948:	mov	w3, w20
  40d94c:	mov	x2, x23
  40d950:	mov	x0, x27
  40d954:	bl	40d408 <ferror@plt+0xaa68>
  40d958:	b	40d91c <ferror@plt+0xaf7c>
  40d95c:	ldr	x0, [sp, #192]
  40d960:	ldrb	w1, [x0]
  40d964:	cmp	w1, #0x28
  40d968:	b.eq	40dab0 <ferror@plt+0xb110>  // b.none
  40d96c:	cmp	w1, #0x29
  40d970:	mov	w3, w20
  40d974:	cset	w0, eq  // eq = none
  40d978:	mov	w1, w28
  40d97c:	sub	w19, w19, w0
  40d980:	mov	x2, x23
  40d984:	mov	x0, x27
  40d988:	bl	40d408 <ferror@plt+0xaa68>
  40d98c:	b	40d91c <ferror@plt+0xaf7c>
  40d990:	cbnz	w19, 40d95c <ferror@plt+0xafbc>
  40d994:	ldp	x0, x1, [x27, #24]
  40d998:	cmp	x1, x0
  40d99c:	b.eq	40db4c <ferror@plt+0xb1ac>  // b.none
  40d9a0:	add	x1, x0, #0x1
  40d9a4:	str	x1, [x27, #24]
  40d9a8:	strb	wzr, [x0]
  40d9ac:	ldp	x6, x1, [x27, #16]
  40d9b0:	cmp	x6, x1
  40d9b4:	b.eq	40db2c <ferror@plt+0xb18c>  // b.none
  40d9b8:	ldr	x0, [x27, #48]
  40d9bc:	ldr	x3, [x27, #8]
  40d9c0:	add	x4, x1, x0
  40d9c4:	ldr	x1, [x27, #32]
  40d9c8:	bic	x0, x4, x0
  40d9cc:	str	x0, [x27, #24]
  40d9d0:	sub	x4, x0, x3
  40d9d4:	sub	x3, x1, x3
  40d9d8:	cmp	x4, x3
  40d9dc:	b.hi	40daf8 <ferror@plt+0xb158>  // b.pmore
  40d9e0:	sub	x3, x1, x0
  40d9e4:	mov	x1, x0
  40d9e8:	ldr	w0, [sp, #168]
  40d9ec:	str	x1, [x27, #16]
  40d9f0:	cbnz	w0, 40da00 <ferror@plt+0xb060>
  40d9f4:	mov	w0, #0x1                   	// #1
  40d9f8:	str	w0, [sp, #168]
  40d9fc:	str	x6, [sp, #176]
  40da00:	ldr	w0, [sp, #104]
  40da04:	cbnz	w0, 40da28 <ferror@plt+0xb088>
  40da08:	ldr	w0, [sp, #168]
  40da0c:	cmp	w0, #0x2
  40da10:	b.ne	40da28 <ferror@plt+0xb088>  // b.any
  40da14:	adrp	x0, 417000 <ferror@plt+0x14660>
  40da18:	add	x0, x0, #0xe98
  40da1c:	str	x0, [sp, #176]
  40da20:	mov	w0, #0x1                   	// #1
  40da24:	str	w0, [sp, #168]
  40da28:	cmp	x3, #0xf
  40da2c:	b.ls	40db04 <ferror@plt+0xb164>  // b.plast
  40da30:	ldp	x6, x7, [sp, #168]
  40da34:	stp	x6, x7, [x1]
  40da38:	ldp	x20, x0, [x27, #16]
  40da3c:	add	x0, x0, #0x10
  40da40:	cmp	x0, x20
  40da44:	b.eq	40db3c <ferror@plt+0xb19c>  // b.none
  40da48:	ldr	x1, [x27, #48]
  40da4c:	ldr	x3, [x27, #8]
  40da50:	add	x0, x0, x1
  40da54:	ldr	x4, [x27, #32]
  40da58:	bic	x1, x0, x1
  40da5c:	str	x1, [x27, #24]
  40da60:	sub	x0, x1, x3
  40da64:	sub	x3, x4, x3
  40da68:	cmp	x0, x3
  40da6c:	b.ls	40da78 <ferror@plt+0xb0d8>  // b.plast
  40da70:	mov	x1, x4
  40da74:	str	x4, [x27, #24]
  40da78:	str	x1, [x27, #16]
  40da7c:	add	x19, x21, #0x60
  40da80:	ldr	x0, [x21, #120]
  40da84:	ldr	x1, [x21, #128]
  40da88:	sub	x1, x1, x0
  40da8c:	cmp	x1, #0x7
  40da90:	b.ls	40db18 <ferror@plt+0xb178>  // b.plast
  40da94:	str	x20, [x0]
  40da98:	cmp	w28, #0x4
  40da9c:	ldr	x0, [x21, #120]
  40daa0:	add	x0, x0, #0x8
  40daa4:	str	x0, [x21, #120]
  40daa8:	b.eq	40d8b0 <ferror@plt+0xaf10>  // b.none
  40daac:	b	40d698 <ferror@plt+0xacf8>
  40dab0:	add	w19, w19, #0x1
  40dab4:	mov	w1, w28
  40dab8:	mov	w3, w20
  40dabc:	mov	x2, x23
  40dac0:	mov	x0, x27
  40dac4:	bl	40d408 <ferror@plt+0xaa68>
  40dac8:	b	40d91c <ferror@plt+0xaf7c>
  40dacc:	cmp	w28, #0x6
  40dad0:	b.eq	40d95c <ferror@plt+0xafbc>  // b.none
  40dad4:	cmp	w28, #0x7
  40dad8:	b.ne	40db9c <ferror@plt+0xb1fc>  // b.any
  40dadc:	ldp	x0, x1, [x27, #16]
  40dae0:	cmp	x1, x0
  40dae4:	b.ne	40d91c <ferror@plt+0xaf7c>  // b.any
  40dae8:	ldr	x0, [sp, #192]
  40daec:	str	w26, [sp, #168]
  40daf0:	str	x0, [sp, #176]
  40daf4:	b	40d91c <ferror@plt+0xaf7c>
  40daf8:	mov	x3, #0x0                   	// #0
  40dafc:	str	x1, [x27, #24]
  40db00:	b	40d9e8 <ferror@plt+0xb048>
  40db04:	mov	x1, #0x10                  	// #16
  40db08:	mov	x0, x27
  40db0c:	bl	4175a8 <_obstack_newchunk@@Base>
  40db10:	ldr	x1, [x27, #24]
  40db14:	b	40da30 <ferror@plt+0xb090>
  40db18:	mov	x0, x19
  40db1c:	mov	x1, #0x8                   	// #8
  40db20:	bl	4175a8 <_obstack_newchunk@@Base>
  40db24:	ldr	x0, [x21, #120]
  40db28:	b	40da94 <ferror@plt+0xb0f4>
  40db2c:	ldrb	w0, [x27, #80]
  40db30:	orr	w0, w0, #0x2
  40db34:	strb	w0, [x27, #80]
  40db38:	b	40d9b8 <ferror@plt+0xb018>
  40db3c:	ldrb	w1, [x27, #80]
  40db40:	orr	w1, w1, #0x2
  40db44:	strb	w1, [x27, #80]
  40db48:	b	40da48 <ferror@plt+0xb0a8>
  40db4c:	mov	x0, x27
  40db50:	mov	x1, #0x1                   	// #1
  40db54:	bl	4175a8 <_obstack_newchunk@@Base>
  40db58:	ldr	x0, [x27, #24]
  40db5c:	b	40d9a0 <ferror@plt+0xb000>
  40db60:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40db64:	mov	w1, #0x0                   	// #0
  40db68:	add	x2, x2, #0x5b0
  40db6c:	mov	w0, #0x1                   	// #1
  40db70:	bl	4033d0 <ferror@plt+0xa30>
  40db74:	b	40d520 <ferror@plt+0xab80>
  40db78:	ldr	w1, [sp, #156]
  40db7c:	ldr	x0, [x22, #16]
  40db80:	bl	408c90 <ferror@plt+0x62f0>
  40db84:	ldrb	w0, [x22, #8]
  40db88:	b	40d79c <ferror@plt+0xadfc>
  40db8c:	ldr	w1, [sp, #156]
  40db90:	ldr	x0, [x22, #16]
  40db94:	bl	408c90 <ferror@plt+0x62f0>
  40db98:	b	40d5d4 <ferror@plt+0xac34>
  40db9c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40dba0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40dba4:	add	x2, x2, #0x610
  40dba8:	mov	w1, #0x0                   	// #0
  40dbac:	ldr	w0, [x0, #1628]
  40dbb0:	bl	4033d0 <ferror@plt+0xa30>
  40dbb4:	bl	4026d0 <abort@plt>
  40dbb8:	stp	x29, x30, [sp, #-80]!
  40dbbc:	mov	x2, #0x0                   	// #0
  40dbc0:	mov	x1, #0x0                   	// #0
  40dbc4:	mov	x29, sp
  40dbc8:	stp	x19, x20, [sp, #16]
  40dbcc:	adrp	x19, 416000 <ferror@plt+0x13660>
  40dbd0:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40dbd4:	add	x19, x19, #0x968
  40dbd8:	add	x20, x20, #0x940
  40dbdc:	str	x21, [sp, #32]
  40dbe0:	adrp	x21, 402000 <mbrtowc@plt-0x340>
  40dbe4:	add	x21, x21, #0x7c0
  40dbe8:	mov	x3, x19
  40dbec:	mov	x4, x21
  40dbf0:	mov	x0, x20
  40dbf4:	bl	417578 <_obstack_begin@@Base>
  40dbf8:	mov	x3, x19
  40dbfc:	mov	x4, x21
  40dc00:	add	x0, x20, #0x60
  40dc04:	add	x19, sp, #0x48
  40dc08:	mov	x2, #0x0                   	// #0
  40dc0c:	mov	x1, #0x0                   	// #0
  40dc10:	bl	417578 <_obstack_begin@@Base>
  40dc14:	b	40dc28 <ferror@plt+0xb288>
  40dc18:	ldr	w3, [sp, #60]
  40dc1c:	mov	x2, x19
  40dc20:	mov	x0, #0x0                   	// #0
  40dc24:	bl	40d408 <ferror@plt+0xaa68>
  40dc28:	add	x1, sp, #0x3c
  40dc2c:	add	x0, sp, #0x40
  40dc30:	bl	40c948 <ferror@plt+0x9fa8>
  40dc34:	mov	w1, w0
  40dc38:	cbnz	w0, 40dc18 <ferror@plt+0xb278>
  40dc3c:	mov	x0, x20
  40dc40:	mov	x1, #0x0                   	// #0
  40dc44:	bl	4176f8 <_obstack_free@@Base>
  40dc48:	add	x0, x20, #0x60
  40dc4c:	mov	x1, #0x0                   	// #0
  40dc50:	bl	4176f8 <_obstack_free@@Base>
  40dc54:	ldp	x19, x20, [sp, #16]
  40dc58:	ldr	x21, [sp, #32]
  40dc5c:	ldp	x29, x30, [sp], #80
  40dc60:	ret
  40dc64:	nop
  40dc68:	ldr	w2, [x0, #8]
  40dc6c:	ldr	w0, [x1, #8]
  40dc70:	sub	w0, w2, w0
  40dc74:	ret
  40dc78:	ldr	w0, [x0, #8]
  40dc7c:	ldr	w1, [x1]
  40dc80:	cmp	w0, w1
  40dc84:	cset	w0, ge  // ge = tcont
  40dc88:	ret
  40dc8c:	nop
  40dc90:	stp	x29, x30, [sp, #-48]!
  40dc94:	mov	x29, sp
  40dc98:	stp	x21, x22, [sp, #32]
  40dc9c:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  40dca0:	stp	x19, x20, [sp, #16]
  40dca4:	mov	w19, w1
  40dca8:	ldr	w1, [x21, #2552]
  40dcac:	cmp	w1, w19
  40dcb0:	b.eq	40dcf0 <ferror@plt+0xb350>  // b.none
  40dcb4:	add	x22, x21, #0x9f8
  40dcb8:	mov	x20, x0
  40dcbc:	ldr	w0, [x22, #4]
  40dcc0:	cmp	w0, w19
  40dcc4:	b.eq	40dcf0 <ferror@plt+0xb350>  // b.none
  40dcc8:	ldrb	w2, [x22, #8]
  40dccc:	cbz	w2, 40dd04 <ferror@plt+0xb364>
  40dcd0:	cbnz	w1, 40dd2c <ferror@plt+0xb38c>
  40dcd4:	str	w19, [x21, #2552]
  40dcd8:	mov	w0, w1
  40dcdc:	str	x20, [x22, #16]
  40dce0:	ldp	x19, x20, [sp, #16]
  40dce4:	ldp	x21, x22, [sp, #32]
  40dce8:	ldp	x29, x30, [sp], #48
  40dcec:	ret
  40dcf0:	mov	w0, #0x0                   	// #0
  40dcf4:	ldp	x19, x20, [sp, #16]
  40dcf8:	ldp	x21, x22, [sp, #32]
  40dcfc:	ldp	x29, x30, [sp], #48
  40dd00:	ret
  40dd04:	cbnz	w0, 40dd20 <ferror@plt+0xb380>
  40dd08:	str	w19, [x22, #4]
  40dd0c:	str	x20, [x22, #24]
  40dd10:	ldp	x19, x20, [sp, #16]
  40dd14:	ldp	x21, x22, [sp, #32]
  40dd18:	ldp	x29, x30, [sp], #48
  40dd1c:	ret
  40dd20:	ldr	x0, [x22, #24]
  40dd24:	bl	411950 <ferror@plt+0xefb0>
  40dd28:	b	40dd08 <ferror@plt+0xb368>
  40dd2c:	ldr	x0, [x22, #16]
  40dd30:	bl	411950 <ferror@plt+0xefb0>
  40dd34:	mov	w1, w0
  40dd38:	b	40dcd4 <ferror@plt+0xb334>
  40dd3c:	nop
  40dd40:	stp	x29, x30, [sp, #-64]!
  40dd44:	mov	x29, sp
  40dd48:	stp	x19, x20, [sp, #16]
  40dd4c:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  40dd50:	add	x19, x19, #0x9f8
  40dd54:	mov	w20, w0
  40dd58:	ldr	x0, [x19, #32]
  40dd5c:	cbz	x0, 40dd94 <ferror@plt+0xb3f4>
  40dd60:	cmp	w20, #0x0
  40dd64:	b.le	40de8c <ferror@plt+0xb4ec>
  40dd68:	ldr	x0, [x19, #48]
  40dd6c:	mov	w4, w20
  40dd70:	mov	x2, #0xffffffffffffffff    	// #-1
  40dd74:	mov	w1, #0x1                   	// #1
  40dd78:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40dd7c:	add	x3, x3, #0x6b0
  40dd80:	bl	4023b0 <__sprintf_chk@plt>
  40dd84:	ldr	x0, [x19, #32]
  40dd88:	ldp	x19, x20, [sp, #16]
  40dd8c:	ldp	x29, x30, [sp], #64
  40dd90:	ret
  40dd94:	ldr	x1, [x19, #40]
  40dd98:	mov	w2, #0x7fffffff            	// #2147483647
  40dd9c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40dda0:	add	x0, x0, #0x680
  40dda4:	stp	x21, x22, [sp, #32]
  40dda8:	ldr	x1, [x1]
  40ddac:	str	x23, [sp, #48]
  40ddb0:	add	x23, x19, #0x38
  40ddb4:	bl	417058 <ferror@plt+0x146b8>
  40ddb8:	mov	x22, x0
  40ddbc:	str	x0, [x19, #48]
  40ddc0:	bl	402390 <strlen@plt>
  40ddc4:	add	x1, x0, #0x1
  40ddc8:	mov	x21, x0
  40ddcc:	ldp	x0, x2, [x19, #80]
  40ddd0:	sub	x2, x2, x0
  40ddd4:	cmp	x1, x2
  40ddd8:	b.hi	40de68 <ferror@plt+0xb4c8>  // b.pmore
  40dddc:	mov	x2, x21
  40dde0:	mov	x1, x22
  40dde4:	bl	402350 <memcpy@plt>
  40dde8:	ldr	x2, [x19, #80]
  40ddec:	add	x1, x2, x21
  40ddf0:	add	x1, x1, #0x1
  40ddf4:	str	x1, [x19, #80]
  40ddf8:	strb	wzr, [x2, x21]
  40ddfc:	ldp	x21, x3, [x19, #72]
  40de00:	cmp	x3, x21
  40de04:	b.eq	40de7c <ferror@plt+0xb4dc>  // b.none
  40de08:	ldr	x2, [x19, #104]
  40de0c:	ldr	x1, [x19, #64]
  40de10:	add	x3, x3, x2
  40de14:	ldr	x4, [x19, #88]
  40de18:	bic	x2, x3, x2
  40de1c:	str	x2, [x19, #80]
  40de20:	sub	x3, x2, x1
  40de24:	sub	x1, x4, x1
  40de28:	cmp	x3, x1
  40de2c:	b.ls	40de38 <ferror@plt+0xb498>  // b.plast
  40de30:	mov	x2, x4
  40de34:	str	x4, [x19, #80]
  40de38:	mov	x0, x22
  40de3c:	str	x21, [x19, #32]
  40de40:	str	x2, [x19, #72]
  40de44:	bl	4027c0 <free@plt>
  40de48:	mov	x0, x21
  40de4c:	mov	w1, #0x2d                  	// #45
  40de50:	bl	402680 <strrchr@plt>
  40de54:	add	x0, x0, #0x1
  40de58:	str	x0, [x19, #48]
  40de5c:	ldp	x21, x22, [sp, #32]
  40de60:	ldr	x23, [sp, #48]
  40de64:	b	40dd60 <ferror@plt+0xb3c0>
  40de68:	mov	x0, x23
  40de6c:	bl	4175a8 <_obstack_newchunk@@Base>
  40de70:	ldr	x22, [x19, #48]
  40de74:	ldr	x0, [x19, #80]
  40de78:	b	40dddc <ferror@plt+0xb43c>
  40de7c:	ldrb	w1, [x19, #136]
  40de80:	orr	w1, w1, #0x2
  40de84:	strb	w1, [x19, #136]
  40de88:	b	40de08 <ferror@plt+0xb468>
  40de8c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40de90:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40de94:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40de98:	add	x3, x3, #0x900
  40de9c:	add	x1, x1, #0x690
  40dea0:	add	x0, x0, #0x6a0
  40dea4:	mov	w2, #0xc8                  	// #200
  40dea8:	stp	x21, x22, [sp, #32]
  40deac:	str	x23, [sp, #48]
  40deb0:	bl	402910 <__assert_fail@plt>
  40deb4:	nop
  40deb8:	stp	x29, x30, [sp, #-48]!
  40debc:	mov	x29, sp
  40dec0:	str	x21, [sp, #32]
  40dec4:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  40dec8:	stp	x19, x20, [sp, #16]
  40decc:	mov	w19, w0
  40ded0:	ldr	w0, [x21, #2552]
  40ded4:	add	x20, x21, #0x9f8
  40ded8:	cmp	w0, w19
  40dedc:	b.eq	40df10 <ferror@plt+0xb570>  // b.none
  40dee0:	ldr	w0, [x20, #4]
  40dee4:	cmp	w0, w19
  40dee8:	b.eq	40df34 <ferror@plt+0xb594>  // b.none
  40deec:	ldr	x20, [x20, #40]
  40def0:	mov	w0, w19
  40def4:	bl	40dd40 <ferror@plt+0xb3a0>
  40def8:	mov	x1, x0
  40defc:	mov	x0, x20
  40df00:	ldp	x19, x20, [sp, #16]
  40df04:	ldr	x21, [sp, #32]
  40df08:	ldp	x29, x30, [sp], #48
  40df0c:	b	411488 <ferror@plt+0xeae8>
  40df10:	ldr	x0, [x20, #16]
  40df14:	bl	411950 <ferror@plt+0xefb0>
  40df18:	cbnz	w0, 40df24 <ferror@plt+0xb584>
  40df1c:	str	wzr, [x21, #2552]
  40df20:	b	40deec <ferror@plt+0xb54c>
  40df24:	ldp	x19, x20, [sp, #16]
  40df28:	ldr	x21, [sp, #32]
  40df2c:	ldp	x29, x30, [sp], #48
  40df30:	ret
  40df34:	ldr	x0, [x20, #24]
  40df38:	bl	411950 <ferror@plt+0xefb0>
  40df3c:	cbnz	w0, 40df24 <ferror@plt+0xb584>
  40df40:	str	wzr, [x20, #4]
  40df44:	b	40deec <ferror@plt+0xb54c>
  40df48:	stp	x29, x30, [sp, #-176]!
  40df4c:	mov	x29, sp
  40df50:	stp	x21, x22, [sp, #32]
  40df54:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  40df58:	add	x22, x22, #0x9f8
  40df5c:	stp	x19, x20, [sp, #16]
  40df60:	ldr	x21, [x22, #144]
  40df64:	stp	x23, x24, [sp, #48]
  40df68:	ldr	w19, [x22, #152]
  40df6c:	ldr	w1, [x21, #12]
  40df70:	sub	w19, w1, w19
  40df74:	str	w19, [x21, #16]
  40df78:	add	w19, w19, w0
  40df7c:	mov	w20, w1
  40df80:	cmp	w1, w19
  40df84:	b.ge	40dfac <ferror@plt+0xb60c>  // b.tcont
  40df88:	cbnz	w20, 40dfa0 <ferror@plt+0xb600>
  40df8c:	cmp	w19, #0x200
  40df90:	mov	w20, #0x400                 	// #1024
  40df94:	b.le	40e14c <ferror@plt+0xb7ac>
  40df98:	cmp	w19, w20
  40df9c:	b.le	40dfac <ferror@plt+0xb60c>
  40dfa0:	lsl	w20, w20, #1
  40dfa4:	cmp	w19, w20
  40dfa8:	b.gt	40df88 <ferror@plt+0xb5e8>
  40dfac:	ldr	w0, [x22, #156]
  40dfb0:	sub	w0, w0, w1
  40dfb4:	add	w0, w0, w20
  40dfb8:	cmp	w0, #0x80, lsl #12
  40dfbc:	b.le	40e0e4 <ferror@plt+0xb744>
  40dfc0:	ldr	x0, [x22, #160]
  40dfc4:	add	x8, sp, #0x78
  40dfc8:	ldr	x1, [x0]
  40dfcc:	ldr	x1, [x1, #56]
  40dfd0:	blr	x1
  40dfd4:	ldp	x0, x1, [sp, #120]
  40dfd8:	stp	x0, x1, [sp, #64]
  40dfdc:	ldp	x0, x1, [sp, #136]
  40dfe0:	stp	x0, x1, [sp, #80]
  40dfe4:	ldp	x0, x1, [sp, #152]
  40dfe8:	stp	x0, x1, [sp, #96]
  40dfec:	ldr	x0, [sp, #168]
  40dff0:	str	x0, [sp, #112]
  40dff4:	b	40e010 <ferror@plt+0xb670>
  40dff8:	ldr	x1, [sp, #120]
  40dffc:	ldr	w0, [x1, #16]
  40e000:	cmp	w0, w19
  40e004:	csel	w2, w19, w0, le
  40e008:	csel	x21, x21, x1, le
  40e00c:	mov	w19, w2
  40e010:	ldr	x2, [sp, #64]
  40e014:	add	x1, sp, #0x78
  40e018:	add	x0, sp, #0x40
  40e01c:	ldr	x2, [x2, #64]
  40e020:	blr	x2
  40e024:	tst	w0, #0xff
  40e028:	b.ne	40dff8 <ferror@plt+0xb658>  // b.any
  40e02c:	ldr	x1, [sp, #64]
  40e030:	add	x0, sp, #0x40
  40e034:	ldr	x1, [x1, #72]
  40e038:	blr	x1
  40e03c:	ldp	w19, w2, [x21, #8]
  40e040:	str	wzr, [x21, #12]
  40e044:	ldr	w0, [x22, #156]
  40e048:	ldr	x1, [x22, #40]
  40e04c:	sub	w0, w0, w2
  40e050:	str	w0, [x22, #156]
  40e054:	ldr	x24, [x21]
  40e058:	str	xzr, [x21]
  40e05c:	cbz	x1, 40e23c <ferror@plt+0xb89c>
  40e060:	mov	w0, w19
  40e064:	bl	40dd40 <ferror@plt+0xb3a0>
  40e068:	mov	x1, x0
  40e06c:	mov	x23, x0
  40e070:	ldr	x0, [x22, #40]
  40e074:	bl	411248 <ferror@plt+0xe8a8>
  40e078:	mov	x0, x23
  40e07c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e080:	add	x1, x1, #0x6f0
  40e084:	bl	411830 <ferror@plt+0xee90>
  40e088:	mov	x19, x0
  40e08c:	cbz	x0, 40e1e8 <ferror@plt+0xb848>
  40e090:	bl	4024c0 <fileno@plt>
  40e094:	mov	w1, #0x1                   	// #1
  40e098:	bl	4119a8 <ferror@plt+0xf008>
  40e09c:	cbnz	w0, 40e214 <ferror@plt+0xb874>
  40e0a0:	ldr	w1, [x21, #16]
  40e0a4:	str	x19, [x21]
  40e0a8:	cmp	w1, #0x0
  40e0ac:	b.gt	40e188 <ferror@plt+0xb7e8>
  40e0b0:	mov	x0, x24
  40e0b4:	bl	4027c0 <free@plt>
  40e0b8:	ldr	x0, [x22, #144]
  40e0bc:	mov	w1, #0x1                   	// #1
  40e0c0:	str	w1, [x21, #16]
  40e0c4:	cmp	x21, x0
  40e0c8:	b.eq	40e168 <ferror@plt+0xb7c8>  // b.none
  40e0cc:	ldr	w1, [x21, #8]
  40e0d0:	ldr	x0, [x21]
  40e0d4:	str	xzr, [x21]
  40e0d8:	bl	40dc90 <ferror@plt+0xb2f0>
  40e0dc:	cbnz	w0, 40e1c4 <ferror@plt+0xb824>
  40e0e0:	ldr	x21, [x22, #144]
  40e0e4:	sxtw	x0, w20
  40e0e8:	ldr	x23, [x21]
  40e0ec:	bl	416968 <ferror@plt+0x13fc8>
  40e0f0:	ldr	x19, [x22, #144]
  40e0f4:	mov	x1, x23
  40e0f8:	ldrsw	x2, [x19, #16]
  40e0fc:	str	x0, [x21]
  40e100:	ldr	x0, [x19]
  40e104:	bl	402350 <memcpy@plt>
  40e108:	mov	x0, x23
  40e10c:	bl	4027c0 <free@plt>
  40e110:	ldp	w0, w1, [x19, #12]
  40e114:	str	w20, [x19, #12]
  40e118:	ldr	x3, [x19]
  40e11c:	sub	w0, w20, w0
  40e120:	ldr	w4, [x22, #156]
  40e124:	sub	w2, w20, w1
  40e128:	ldp	x19, x20, [sp, #16]
  40e12c:	add	w0, w0, w4
  40e130:	add	x1, x3, w1, sxtw
  40e134:	stp	w2, w0, [x22, #152]
  40e138:	str	x1, [x22, #176]
  40e13c:	ldp	x21, x22, [sp, #32]
  40e140:	ldp	x23, x24, [sp, #48]
  40e144:	ldp	x29, x30, [sp], #176
  40e148:	ret
  40e14c:	ldr	w0, [x22, #156]
  40e150:	mov	w20, #0x200                 	// #512
  40e154:	sub	w0, w0, w1
  40e158:	add	w0, w0, w20
  40e15c:	cmp	w0, #0x80, lsl #12
  40e160:	b.le	40e0e4 <ferror@plt+0xb744>
  40e164:	b	40dfc0 <ferror@plt+0xb620>
  40e168:	ldr	x0, [x21]
  40e16c:	str	wzr, [x22, #152]
  40e170:	stp	x0, xzr, [x22, #168]
  40e174:	ldp	x19, x20, [sp, #16]
  40e178:	ldp	x21, x22, [sp, #32]
  40e17c:	ldp	x23, x24, [sp, #48]
  40e180:	ldp	x29, x30, [sp], #176
  40e184:	ret
  40e188:	mov	x3, x19
  40e18c:	sxtw	x1, w1
  40e190:	mov	x0, x24
  40e194:	mov	x2, #0x1                   	// #1
  40e198:	bl	402830 <fwrite@plt>
  40e19c:	cmp	w0, #0x1
  40e1a0:	b.eq	40e0b0 <ferror@plt+0xb710>  // b.none
  40e1a4:	bl	402920 <__errno_location@plt>
  40e1a8:	mov	x1, x0
  40e1ac:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e1b0:	mov	w0, #0x1                   	// #1
  40e1b4:	add	x2, x2, #0x728
  40e1b8:	ldr	w1, [x1]
  40e1bc:	bl	4033d0 <ferror@plt+0xa30>
  40e1c0:	b	40e0b0 <ferror@plt+0xb710>
  40e1c4:	bl	402920 <__errno_location@plt>
  40e1c8:	mov	x1, x0
  40e1cc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e1d0:	mov	w0, #0x0                   	// #0
  40e1d4:	add	x2, x2, #0x758
  40e1d8:	ldr	w1, [x1]
  40e1dc:	bl	4033d0 <ferror@plt+0xa30>
  40e1e0:	ldr	x21, [x22, #144]
  40e1e4:	b	40e0e4 <ferror@plt+0xb744>
  40e1e8:	ldr	x0, [x22, #40]
  40e1ec:	mov	x1, x23
  40e1f0:	bl	4112d0 <ferror@plt+0xe930>
  40e1f4:	bl	402920 <__errno_location@plt>
  40e1f8:	mov	x1, x0
  40e1fc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e200:	mov	w0, #0x1                   	// #1
  40e204:	add	x2, x2, #0x6c0
  40e208:	ldr	w1, [x1]
  40e20c:	bl	4033d0 <ferror@plt+0xa30>
  40e210:	b	40e0a0 <ferror@plt+0xb700>
  40e214:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40e218:	ldr	w23, [x0, #1628]
  40e21c:	bl	402920 <__errno_location@plt>
  40e220:	mov	x1, x0
  40e224:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e228:	mov	w0, w23
  40e22c:	add	x2, x2, #0x6f8
  40e230:	ldr	w1, [x1]
  40e234:	bl	4033d0 <ferror@plt+0xa30>
  40e238:	b	40e0a0 <ferror@plt+0xb700>
  40e23c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e240:	mov	w2, #0x1                   	// #1
  40e244:	add	x0, x0, #0x6b8
  40e248:	bl	410fe0 <ferror@plt+0xe640>
  40e24c:	str	x0, [x22, #40]
  40e250:	cbz	x0, 40e264 <ferror@plt+0xb8c4>
  40e254:	adrp	x0, 40e000 <ferror@plt+0xb660>
  40e258:	add	x0, x0, #0x288
  40e25c:	bl	417cc0 <_obstack_memory_used@@Base+0x538>
  40e260:	b	40e060 <ferror@plt+0xb6c0>
  40e264:	bl	402920 <__errno_location@plt>
  40e268:	mov	x1, x0
  40e26c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e270:	mov	w0, #0x1                   	// #1
  40e274:	add	x2, x2, #0x6c0
  40e278:	ldr	w1, [x1]
  40e27c:	bl	4033d0 <ferror@plt+0xa30>
  40e280:	b	40e254 <ferror@plt+0xb8b4>
  40e284:	nop
  40e288:	stp	x29, x30, [sp, #-112]!
  40e28c:	mov	x29, sp
  40e290:	stp	x19, x20, [sp, #16]
  40e294:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40e298:	add	x20, x20, #0x9f8
  40e29c:	ldr	x0, [x20, #160]
  40e2a0:	cbz	x0, 40e36c <ferror@plt+0xb9cc>
  40e2a4:	ldr	x1, [x0]
  40e2a8:	stp	x21, x22, [sp, #32]
  40e2ac:	add	x8, sp, #0x38
  40e2b0:	adrp	x21, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e2b4:	mov	w22, #0x0                   	// #0
  40e2b8:	ldr	x1, [x1, #56]
  40e2bc:	add	x21, x21, #0x788
  40e2c0:	blr	x1
  40e2c4:	nop
  40e2c8:	ldr	x2, [sp, #56]
  40e2cc:	add	x1, sp, #0x30
  40e2d0:	add	x0, sp, #0x38
  40e2d4:	ldr	x2, [x2, #64]
  40e2d8:	blr	x2
  40e2dc:	ands	w19, w0, #0xff
  40e2e0:	b.eq	40e338 <ferror@plt+0xb998>  // b.none
  40e2e4:	ldr	x0, [sp, #48]
  40e2e8:	ldr	w1, [x0, #12]
  40e2ec:	cbnz	w1, 40e2c8 <ferror@plt+0xb928>
  40e2f0:	ldr	x0, [x0]
  40e2f4:	cbz	x0, 40e2c8 <ferror@plt+0xb928>
  40e2f8:	bl	411950 <ferror@plt+0xefb0>
  40e2fc:	cbz	w0, 40e2c8 <ferror@plt+0xb928>
  40e300:	bl	402920 <__errno_location@plt>
  40e304:	mov	x1, x0
  40e308:	mov	x2, x21
  40e30c:	mov	w0, #0x0                   	// #0
  40e310:	mov	w22, w19
  40e314:	ldr	w1, [x1]
  40e318:	bl	4033d0 <ferror@plt+0xa30>
  40e31c:	ldr	x2, [sp, #56]
  40e320:	add	x1, sp, #0x30
  40e324:	add	x0, sp, #0x38
  40e328:	ldr	x2, [x2, #64]
  40e32c:	blr	x2
  40e330:	ands	w19, w0, #0xff
  40e334:	b.ne	40e2e4 <ferror@plt+0xb944>  // b.any
  40e338:	ldr	x1, [sp, #56]
  40e33c:	add	x0, sp, #0x38
  40e340:	ldr	x1, [x1, #72]
  40e344:	blr	x1
  40e348:	ldr	x0, [x20, #40]
  40e34c:	bl	4116d8 <ferror@plt+0xed38>
  40e350:	cmp	w0, #0x0
  40e354:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  40e358:	b.ne	40e37c <ferror@plt+0xb9dc>  // b.any
  40e35c:	ldp	x21, x22, [sp, #32]
  40e360:	ldp	x19, x20, [sp, #16]
  40e364:	ldp	x29, x30, [sp], #112
  40e368:	ret
  40e36c:	ldr	x0, [x20, #40]
  40e370:	bl	4116d8 <ferror@plt+0xed38>
  40e374:	cbz	w0, 40e360 <ferror@plt+0xb9c0>
  40e378:	stp	x21, x22, [sp, #32]
  40e37c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40e380:	ldr	w0, [x0, #860]
  40e384:	bl	402370 <_exit@plt>
  40e388:	stp	x29, x30, [sp, #-48]!
  40e38c:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x19878>
  40e390:	mov	x29, sp
  40e394:	stp	x19, x20, [sp, #16]
  40e398:	add	x19, x2, #0x9f8
  40e39c:	str	x21, [sp, #32]
  40e3a0:	and	w21, w1, #0xff
  40e3a4:	ldr	w1, [x2, #2552]
  40e3a8:	cmp	w1, w0
  40e3ac:	b.eq	40e420 <ferror@plt+0xba80>  // b.none
  40e3b0:	ldr	w1, [x19, #4]
  40e3b4:	cmp	w1, w0
  40e3b8:	b.eq	40e3fc <ferror@plt+0xba5c>  // b.none
  40e3bc:	bl	40dd40 <ferror@plt+0xb3a0>
  40e3c0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e3c4:	add	x1, x1, #0x7d8
  40e3c8:	bl	411830 <ferror@plt+0xee90>
  40e3cc:	mov	x20, x0
  40e3d0:	cbz	x0, 40e440 <ferror@plt+0xbaa0>
  40e3d4:	bl	4024c0 <fileno@plt>
  40e3d8:	mov	w1, #0x1                   	// #1
  40e3dc:	bl	4119a8 <ferror@plt+0xf008>
  40e3e0:	cbnz	w0, 40e4e0 <ferror@plt+0xbb40>
  40e3e4:	cbz	w21, 40e48c <ferror@plt+0xbaec>
  40e3e8:	mov	x0, x20
  40e3ec:	ldp	x19, x20, [sp, #16]
  40e3f0:	ldr	x21, [sp, #32]
  40e3f4:	ldp	x29, x30, [sp], #48
  40e3f8:	ret
  40e3fc:	ldr	x20, [x19, #24]
  40e400:	cbnz	w21, 40e470 <ferror@plt+0xbad0>
  40e404:	mov	w0, #0x1                   	// #1
  40e408:	strb	w0, [x19, #8]
  40e40c:	mov	x0, x20
  40e410:	ldp	x19, x20, [sp, #16]
  40e414:	ldr	x21, [sp, #32]
  40e418:	ldp	x29, x30, [sp], #48
  40e41c:	ret
  40e420:	ldr	x20, [x19, #16]
  40e424:	cbnz	w21, 40e4c0 <ferror@plt+0xbb20>
  40e428:	strb	wzr, [x19, #8]
  40e42c:	mov	x0, x20
  40e430:	ldp	x19, x20, [sp, #16]
  40e434:	ldr	x21, [sp, #32]
  40e438:	ldp	x29, x30, [sp], #48
  40e43c:	ret
  40e440:	bl	402920 <__errno_location@plt>
  40e444:	mov	x1, x0
  40e448:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e44c:	mov	w0, #0x1                   	// #1
  40e450:	add	x2, x2, #0x6c0
  40e454:	ldr	w1, [x1]
  40e458:	bl	4033d0 <ferror@plt+0xa30>
  40e45c:	mov	x0, x20
  40e460:	ldp	x19, x20, [sp, #16]
  40e464:	ldr	x21, [sp, #32]
  40e468:	ldp	x29, x30, [sp], #48
  40e46c:	ret
  40e470:	mov	x0, x20
  40e474:	mov	w2, #0x0                   	// #0
  40e478:	mov	x1, #0x0                   	// #0
  40e47c:	bl	417340 <ferror@plt+0x149a0>
  40e480:	cbnz	w0, 40e510 <ferror@plt+0xbb70>
  40e484:	ldr	x20, [x19, #24]
  40e488:	b	40e404 <ferror@plt+0xba64>
  40e48c:	mov	x0, x20
  40e490:	mov	w2, #0x2                   	// #2
  40e494:	mov	x1, #0x0                   	// #0
  40e498:	bl	417340 <ferror@plt+0x149a0>
  40e49c:	cbz	w0, 40e3e8 <ferror@plt+0xba48>
  40e4a0:	bl	402920 <__errno_location@plt>
  40e4a4:	mov	x1, x0
  40e4a8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e4ac:	mov	w0, #0x1                   	// #1
  40e4b0:	add	x2, x2, #0x7b8
  40e4b4:	ldr	w1, [x1]
  40e4b8:	bl	4033d0 <ferror@plt+0xa30>
  40e4bc:	b	40e3e8 <ferror@plt+0xba48>
  40e4c0:	mov	x0, x20
  40e4c4:	mov	w2, #0x0                   	// #0
  40e4c8:	mov	x1, #0x0                   	// #0
  40e4cc:	bl	417340 <ferror@plt+0x149a0>
  40e4d0:	cbnz	w0, 40e534 <ferror@plt+0xbb94>
  40e4d4:	ldr	x20, [x19, #16]
  40e4d8:	strb	wzr, [x19, #8]
  40e4dc:	b	40e42c <ferror@plt+0xba8c>
  40e4e0:	bl	402920 <__errno_location@plt>
  40e4e4:	mov	x1, x0
  40e4e8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e4ec:	mov	w0, #0x0                   	// #0
  40e4f0:	add	x2, x2, #0x7e0
  40e4f4:	ldr	w1, [x1]
  40e4f8:	bl	4033d0 <ferror@plt+0xa30>
  40e4fc:	mov	x0, x20
  40e500:	ldp	x19, x20, [sp, #16]
  40e504:	ldr	x21, [sp, #32]
  40e508:	ldp	x29, x30, [sp], #48
  40e50c:	ret
  40e510:	bl	402920 <__errno_location@plt>
  40e514:	mov	x1, x0
  40e518:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e51c:	mov	w0, #0x1                   	// #1
  40e520:	add	x2, x2, #0x7b8
  40e524:	ldr	w1, [x1]
  40e528:	bl	4033d0 <ferror@plt+0xa30>
  40e52c:	ldr	x20, [x19, #24]
  40e530:	b	40e404 <ferror@plt+0xba64>
  40e534:	bl	402920 <__errno_location@plt>
  40e538:	mov	x1, x0
  40e53c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e540:	mov	w0, #0x1                   	// #1
  40e544:	add	x2, x2, #0x7b8
  40e548:	ldr	w1, [x1]
  40e54c:	bl	4033d0 <ferror@plt+0xa30>
  40e550:	ldr	x20, [x19, #16]
  40e554:	b	40e4d8 <ferror@plt+0xbb38>
  40e558:	stp	x29, x30, [sp, #-32]!
  40e55c:	mov	x29, sp
  40e560:	str	x19, [sp, #16]
  40e564:	mov	w19, w0
  40e568:	mov	w0, #0x1                   	// #1
  40e56c:	bl	40df48 <ferror@plt+0xb5a8>
  40e570:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x19878>
  40e574:	add	x2, x2, #0x9f8
  40e578:	ldr	x1, [x2, #168]
  40e57c:	cbz	x1, 40e590 <ferror@plt+0xbbf0>
  40e580:	mov	w0, w19
  40e584:	ldr	x19, [sp, #16]
  40e588:	ldp	x29, x30, [sp], #32
  40e58c:	b	402430 <putc@plt>
  40e590:	ldr	x1, [x2, #176]
  40e594:	ldr	w0, [x2, #152]
  40e598:	add	x3, x1, #0x1
  40e59c:	strb	w19, [x1]
  40e5a0:	sub	w0, w0, #0x1
  40e5a4:	ldr	x19, [sp, #16]
  40e5a8:	str	w0, [x2, #152]
  40e5ac:	str	x3, [x2, #176]
  40e5b0:	ldp	x29, x30, [sp], #32
  40e5b4:	ret
  40e5b8:	stp	x29, x30, [sp, #-16]!
  40e5bc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e5c0:	adrp	x1, 40d000 <ferror@plt+0xa660>
  40e5c4:	mov	x29, sp
  40e5c8:	ldr	x3, [x2, #2512]
  40e5cc:	add	x0, x2, #0x9d0
  40e5d0:	add	x1, x1, #0xc68
  40e5d4:	mov	x2, #0x0                   	// #0
  40e5d8:	blr	x3
  40e5dc:	cbz	x0, 40e628 <ferror@plt+0xbc88>
  40e5e0:	mov	x6, x0
  40e5e4:	adrp	x5, 431000 <_obstack_memory_used@@Base+0x19878>
  40e5e8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40e5ec:	add	x5, x5, #0x9f8
  40e5f0:	add	x8, x5, #0xb8
  40e5f4:	adrp	x4, 402000 <mbrtowc@plt-0x340>
  40e5f8:	ldr	x7, [x0, #1056]
  40e5fc:	str	x8, [x5, #144]
  40e600:	stp	x6, x7, [x5, #160]
  40e604:	add	x0, x5, #0x38
  40e608:	add	x4, x4, #0x7c0
  40e60c:	str	x7, [x5, #184]
  40e610:	adrp	x3, 416000 <ferror@plt+0x13660>
  40e614:	mov	x2, #0x0                   	// #0
  40e618:	add	x3, x3, #0x968
  40e61c:	ldp	x29, x30, [sp], #16
  40e620:	mov	x1, #0x0                   	// #0
  40e624:	b	417578 <_obstack_begin@@Base>
  40e628:	bl	416bb0 <ferror@plt+0x14210>
  40e62c:	nop
  40e630:	stp	x29, x30, [sp, #-32]!
  40e634:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40e638:	mov	x29, sp
  40e63c:	stp	x19, x20, [sp, #16]
  40e640:	add	x19, x0, #0x9f8
  40e644:	ldr	w0, [x0, #2552]
  40e648:	ldr	x20, [x19, #160]
  40e64c:	cbnz	w0, 40e680 <ferror@plt+0xbce0>
  40e650:	ldr	w0, [x19, #4]
  40e654:	cbnz	w0, 40e68c <ferror@plt+0xbcec>
  40e658:	ldr	x1, [x20]
  40e65c:	mov	x0, x20
  40e660:	str	xzr, [x19, #160]
  40e664:	ldr	x1, [x1, #48]
  40e668:	blr	x1
  40e66c:	add	x0, x19, #0x38
  40e670:	mov	x1, #0x0                   	// #0
  40e674:	ldp	x19, x20, [sp, #16]
  40e678:	ldp	x29, x30, [sp], #32
  40e67c:	b	4176f8 <_obstack_free@@Base>
  40e680:	bl	40deb8 <ferror@plt+0xb518>
  40e684:	ldr	w0, [x19, #4]
  40e688:	cbz	w0, 40e658 <ferror@plt+0xbcb8>
  40e68c:	bl	40deb8 <ferror@plt+0xb518>
  40e690:	b	40e658 <ferror@plt+0xbcb8>
  40e694:	nop
  40e698:	stp	x29, x30, [sp, #-64]!
  40e69c:	mov	x29, sp
  40e6a0:	stp	x19, x20, [sp, #16]
  40e6a4:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  40e6a8:	add	x19, x19, #0x9f8
  40e6ac:	stp	x21, x22, [sp, #32]
  40e6b0:	mov	x21, x0
  40e6b4:	ldr	x0, [x19, #144]
  40e6b8:	cmp	x0, #0x0
  40e6bc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40e6c0:	b.eq	40e6e8 <ferror@plt+0xbd48>  // b.none
  40e6c4:	ldr	x3, [x19, #168]
  40e6c8:	mov	w20, w1
  40e6cc:	cbz	x3, 40e720 <ferror@plt+0xbd80>
  40e6d0:	sxtw	x1, w20
  40e6d4:	mov	x0, x21
  40e6d8:	mov	x2, #0x1                   	// #1
  40e6dc:	bl	402830 <fwrite@plt>
  40e6e0:	cmp	w0, #0x1
  40e6e4:	b.ne	40e6f8 <ferror@plt+0xbd58>  // b.any
  40e6e8:	ldp	x19, x20, [sp, #16]
  40e6ec:	ldp	x21, x22, [sp, #32]
  40e6f0:	ldp	x29, x30, [sp], #64
  40e6f4:	ret
  40e6f8:	bl	402920 <__errno_location@plt>
  40e6fc:	mov	x1, x0
  40e700:	ldp	x19, x20, [sp, #16]
  40e704:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e708:	ldp	x21, x22, [sp, #32]
  40e70c:	add	x2, x2, #0x808
  40e710:	ldp	x29, x30, [sp], #64
  40e714:	mov	w0, #0x1                   	// #1
  40e718:	ldr	w1, [x1]
  40e71c:	b	4033d0 <ferror@plt+0xa30>
  40e720:	ldr	w22, [x19, #152]
  40e724:	cmp	w22, w1
  40e728:	b.lt	40e76c <ferror@plt+0xbdcc>  // b.tstop
  40e72c:	str	x23, [sp, #48]
  40e730:	ldr	x3, [x19, #176]
  40e734:	sxtw	x23, w20
  40e738:	mov	x1, x21
  40e73c:	mov	x2, x23
  40e740:	sub	w20, w22, w20
  40e744:	mov	x0, x3
  40e748:	bl	402350 <memcpy@plt>
  40e74c:	add	x3, x0, x23
  40e750:	str	w20, [x19, #152]
  40e754:	str	x3, [x19, #176]
  40e758:	ldp	x19, x20, [sp, #16]
  40e75c:	ldp	x21, x22, [sp, #32]
  40e760:	ldr	x23, [sp, #48]
  40e764:	ldp	x29, x30, [sp], #64
  40e768:	ret
  40e76c:	mov	w0, w1
  40e770:	bl	40df48 <ferror@plt+0xb5a8>
  40e774:	ldr	x3, [x19, #168]
  40e778:	cbnz	x3, 40e6d0 <ferror@plt+0xbd30>
  40e77c:	ldr	w22, [x19, #152]
  40e780:	str	x23, [sp, #48]
  40e784:	b	40e730 <ferror@plt+0xbd90>
  40e788:	stp	x29, x30, [sp, #-48]!
  40e78c:	mov	x29, sp
  40e790:	stp	x19, x20, [sp, #16]
  40e794:	mov	x20, x0
  40e798:	stp	x21, x22, [sp, #32]
  40e79c:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  40e7a0:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e7a4:	add	x21, x21, #0xad0
  40e7a8:	add	x22, x22, #0x828
  40e7ac:	nop
  40e7b0:	mov	x3, x20
  40e7b4:	mov	x2, #0x4000                	// #16384
  40e7b8:	mov	x1, #0x1                   	// #1
  40e7bc:	mov	x0, x21
  40e7c0:	bl	4027b0 <fread@plt>
  40e7c4:	mov	x19, x0
  40e7c8:	mov	x0, x20
  40e7cc:	bl	4029a0 <ferror@plt>
  40e7d0:	cbnz	w0, 40e7e8 <ferror@plt+0xbe48>
  40e7d4:	cbz	x19, 40e804 <ferror@plt+0xbe64>
  40e7d8:	mov	w1, w19
  40e7dc:	mov	x0, x21
  40e7e0:	bl	40e698 <ferror@plt+0xbcf8>
  40e7e4:	b	40e7b0 <ferror@plt+0xbe10>
  40e7e8:	bl	402920 <__errno_location@plt>
  40e7ec:	mov	x1, x0
  40e7f0:	mov	x2, x22
  40e7f4:	mov	w0, #0x1                   	// #1
  40e7f8:	ldr	w1, [x1]
  40e7fc:	bl	4033d0 <ferror@plt+0xa30>
  40e800:	cbnz	x19, 40e7d8 <ferror@plt+0xbe38>
  40e804:	ldp	x19, x20, [sp, #16]
  40e808:	ldp	x21, x22, [sp, #32]
  40e80c:	ldp	x29, x30, [sp], #48
  40e810:	ret
  40e814:	nop
  40e818:	stp	x29, x30, [sp, #-80]!
  40e81c:	mov	x29, sp
  40e820:	stp	x21, x22, [sp, #32]
  40e824:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  40e828:	add	x22, x21, #0x9f8
  40e82c:	stp	x19, x20, [sp, #16]
  40e830:	mov	x19, x0
  40e834:	ldr	w2, [x0, #12]
  40e838:	ldr	x20, [x22, #144]
  40e83c:	cbz	x20, 40e910 <ferror@plt+0xbf70>
  40e840:	ldr	x0, [x20]
  40e844:	cbnz	w2, 40e8c8 <ferror@plt+0xbf28>
  40e848:	cbz	x0, 40e9ac <ferror@plt+0xc00c>
  40e84c:	ldr	x0, [x19]
  40e850:	cbz	x0, 40ea7c <ferror@plt+0xc0dc>
  40e854:	bl	40e788 <ferror@plt+0xbde8>
  40e858:	ldr	w2, [x19, #12]
  40e85c:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40e860:	mov	w1, #0xffffffff            	// #-1
  40e864:	str	w1, [x0, #3472]
  40e868:	cbnz	w2, 40e8f8 <ferror@plt+0xbf58>
  40e86c:	ldr	x0, [x19]
  40e870:	ldr	w1, [x19, #8]
  40e874:	cbz	x0, 40e888 <ferror@plt+0xbee8>
  40e878:	str	xzr, [x19]
  40e87c:	bl	40dc90 <ferror@plt+0xb2f0>
  40e880:	cbnz	w0, 40e96c <ferror@plt+0xbfcc>
  40e884:	ldr	w1, [x19, #8]
  40e888:	mov	w0, w1
  40e88c:	bl	40deb8 <ferror@plt+0xb518>
  40e890:	cbnz	w0, 40e98c <ferror@plt+0xbfec>
  40e894:	ldr	x0, [x22, #160]
  40e898:	mov	x1, x19
  40e89c:	ldr	x2, [x0]
  40e8a0:	ldr	x2, [x2, #40]
  40e8a4:	str	wzr, [x19, #16]
  40e8a8:	blr	x2
  40e8ac:	ldr	x0, [x22, #208]
  40e8b0:	str	x0, [x19]
  40e8b4:	str	x19, [x22, #208]
  40e8b8:	ldp	x19, x20, [sp, #16]
  40e8bc:	ldp	x21, x22, [sp, #32]
  40e8c0:	ldp	x29, x30, [sp], #80
  40e8c4:	ret
  40e8c8:	cbz	x0, 40e924 <ferror@plt+0xbf84>
  40e8cc:	ldr	w3, [x22, #156]
  40e8d0:	ldr	w1, [x19, #16]
  40e8d4:	ldr	x0, [x19]
  40e8d8:	sub	w2, w3, w2
  40e8dc:	str	w2, [x22, #156]
  40e8e0:	bl	40e698 <ferror@plt+0xbcf8>
  40e8e4:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40e8e8:	ldr	w2, [x19, #12]
  40e8ec:	mov	w1, #0xffffffff            	// #-1
  40e8f0:	str	w1, [x0, #3472]
  40e8f4:	cbz	w2, 40e86c <ferror@plt+0xbecc>
  40e8f8:	ldr	x0, [x22, #144]
  40e8fc:	cbz	x0, 40e914 <ferror@plt+0xbf74>
  40e900:	ldr	x0, [x19]
  40e904:	bl	4027c0 <free@plt>
  40e908:	str	wzr, [x19, #12]
  40e90c:	b	40e894 <ferror@plt+0xbef4>
  40e910:	cbz	w2, 40e86c <ferror@plt+0xbecc>
  40e914:	ldr	w0, [x22, #156]
  40e918:	sub	w2, w0, w2
  40e91c:	str	w2, [x22, #156]
  40e920:	b	40e900 <ferror@plt+0xbf60>
  40e924:	ldr	w1, [x20, #16]
  40e928:	add	x0, x22, #0xb8
  40e92c:	cmp	w1, #0x0
  40e930:	ccmp	x20, x0, #0x4, eq  // eq = none
  40e934:	b.eq	40eacc <ferror@plt+0xc12c>  // b.none
  40e938:	ldr	x0, [x22, #168]
  40e93c:	cbnz	x0, 40eacc <ferror@plt+0xc12c>
  40e940:	ldr	x0, [x19]
  40e944:	str	x0, [x20]
  40e948:	str	w2, [x20, #12]
  40e94c:	ldr	x1, [x19]
  40e950:	str	xzr, [x19]
  40e954:	ldp	w2, w0, [x19, #12]
  40e958:	add	x1, x1, w0, sxtw
  40e95c:	sub	w0, w2, w0
  40e960:	str	w0, [x22, #152]
  40e964:	str	x1, [x22, #176]
  40e968:	b	40e85c <ferror@plt+0xbebc>
  40e96c:	bl	402920 <__errno_location@plt>
  40e970:	mov	x1, x0
  40e974:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e978:	mov	w0, #0x0                   	// #0
  40e97c:	add	x2, x2, #0x788
  40e980:	ldr	w1, [x1]
  40e984:	bl	4033d0 <ferror@plt+0xa30>
  40e988:	b	40e884 <ferror@plt+0xbee4>
  40e98c:	bl	402920 <__errno_location@plt>
  40e990:	mov	x1, x0
  40e994:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40e998:	mov	w0, #0x0                   	// #0
  40e99c:	add	x2, x2, #0x788
  40e9a0:	ldr	w1, [x1]
  40e9a4:	bl	4033d0 <ferror@plt+0xa30>
  40e9a8:	b	40e894 <ferror@plt+0xbef4>
  40e9ac:	ldr	w1, [x20, #16]
  40e9b0:	add	x0, x22, #0xb8
  40e9b4:	stp	x23, x24, [sp, #48]
  40e9b8:	cmp	w1, #0x0
  40e9bc:	stp	x25, x26, [sp, #64]
  40e9c0:	ccmp	x20, x0, #0x4, eq  // eq = none
  40e9c4:	b.eq	40eaf8 <ferror@plt+0xc158>  // b.none
  40e9c8:	ldr	x0, [x22, #168]
  40e9cc:	cbnz	x0, 40eaf8 <ferror@plt+0xc158>
  40e9d0:	ldr	w25, [x19, #8]
  40e9d4:	ldr	w26, [x20, #8]
  40e9d8:	mov	w0, w25
  40e9dc:	bl	40dd40 <ferror@plt+0xb3a0>
  40e9e0:	bl	416b80 <ferror@plt+0x141e0>
  40e9e4:	mov	x23, x0
  40e9e8:	mov	w0, w26
  40e9ec:	bl	40dd40 <ferror@plt+0xb3a0>
  40e9f0:	mov	x1, x0
  40e9f4:	mov	x24, x0
  40e9f8:	ldr	x0, [x22, #40]
  40e9fc:	bl	411248 <ferror@plt+0xe8a8>
  40ea00:	ldr	w0, [x21, #2552]
  40ea04:	cmp	w25, w0
  40ea08:	b.eq	40eaa4 <ferror@plt+0xc104>  // b.none
  40ea0c:	ldr	w0, [x22, #4]
  40ea10:	cmp	w25, w0
  40ea14:	b.eq	40ea9c <ferror@plt+0xc0fc>  // b.none
  40ea18:	mov	x1, x24
  40ea1c:	mov	x0, x23
  40ea20:	bl	402820 <rename@plt>
  40ea24:	cbnz	w0, 40eaac <ferror@plt+0xc10c>
  40ea28:	ldr	x0, [x22, #40]
  40ea2c:	mov	x1, x23
  40ea30:	bl	4112d0 <ferror@plt+0xe930>
  40ea34:	mov	x0, x23
  40ea38:	bl	4027c0 <free@plt>
  40ea3c:	mov	w0, w26
  40ea40:	mov	w1, #0x0                   	// #0
  40ea44:	bl	40e388 <ferror@plt+0xb9e8>
  40ea48:	ldr	x1, [x22, #144]
  40ea4c:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ea50:	ldp	x23, x24, [sp, #48]
  40ea54:	mov	w3, #0xffffffff            	// #-1
  40ea58:	ldp	x25, x26, [sp, #64]
  40ea5c:	str	x0, [x20]
  40ea60:	mov	w0, #0x1                   	// #1
  40ea64:	str	w0, [x1, #16]
  40ea68:	ldr	x0, [x1]
  40ea6c:	str	xzr, [x19]
  40ea70:	str	w3, [x2, #3472]
  40ea74:	str	x0, [x22, #168]
  40ea78:	b	40e900 <ferror@plt+0xbf60>
  40ea7c:	ldr	w0, [x19, #8]
  40ea80:	mov	w1, #0x1                   	// #1
  40ea84:	bl	40e388 <ferror@plt+0xb9e8>
  40ea88:	str	x0, [x19]
  40ea8c:	ldr	x1, [x22, #144]
  40ea90:	cbz	x1, 40e858 <ferror@plt+0xbeb8>
  40ea94:	bl	40e788 <ferror@plt+0xbde8>
  40ea98:	b	40e858 <ferror@plt+0xbeb8>
  40ea9c:	str	w26, [x22, #4]
  40eaa0:	b	40ea18 <ferror@plt+0xc078>
  40eaa4:	str	w26, [x21, #2552]
  40eaa8:	b	40ea18 <ferror@plt+0xc078>
  40eaac:	bl	402920 <__errno_location@plt>
  40eab0:	mov	x1, x0
  40eab4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40eab8:	mov	w0, #0x1                   	// #1
  40eabc:	add	x2, x2, #0x6c0
  40eac0:	ldr	w1, [x1]
  40eac4:	bl	4033d0 <ferror@plt+0xa30>
  40eac8:	b	40ea28 <ferror@plt+0xc088>
  40eacc:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ead0:	add	x3, x3, #0x900
  40ead4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40ead8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40eadc:	add	x3, x3, #0x10
  40eae0:	add	x1, x1, #0x690
  40eae4:	add	x0, x0, #0x848
  40eae8:	mov	w2, #0x358                 	// #856
  40eaec:	stp	x23, x24, [sp, #48]
  40eaf0:	stp	x25, x26, [sp, #64]
  40eaf4:	bl	402910 <__assert_fail@plt>
  40eaf8:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40eafc:	add	x3, x3, #0x900
  40eb00:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40eb04:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40eb08:	add	x3, x3, #0x10
  40eb0c:	add	x1, x1, #0x690
  40eb10:	add	x0, x0, #0x848
  40eb14:	mov	w2, #0x36d                 	// #877
  40eb18:	bl	402910 <__assert_fail@plt>
  40eb1c:	nop
  40eb20:	stp	x29, x30, [sp, #-64]!
  40eb24:	mov	x29, sp
  40eb28:	stp	x19, x20, [sp, #16]
  40eb2c:	mov	x19, x1
  40eb30:	stp	x21, x22, [sp, #32]
  40eb34:	mov	w21, w2
  40eb38:	cbz	x0, 40eb80 <ferror@plt+0xc1e0>
  40eb3c:	sxtw	x22, w2
  40eb40:	mov	x20, x0
  40eb44:	ldp	x2, x1, [x0, #24]
  40eb48:	sub	x1, x1, x2
  40eb4c:	cmp	x1, w21, sxtw
  40eb50:	b.cc	40ed6c <ferror@plt+0xc3cc>  // b.lo, b.ul, b.last
  40eb54:	mov	x0, x2
  40eb58:	mov	x1, x19
  40eb5c:	mov	x2, x22
  40eb60:	bl	402350 <memcpy@plt>
  40eb64:	ldr	x0, [x20, #24]
  40eb68:	add	x0, x0, x22
  40eb6c:	str	x0, [x20, #24]
  40eb70:	ldp	x19, x20, [sp, #16]
  40eb74:	ldp	x21, x22, [sp, #32]
  40eb78:	ldp	x29, x30, [sp], #64
  40eb7c:	ret
  40eb80:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40eb84:	add	x20, x20, #0x9f8
  40eb88:	ldr	x0, [x20, #144]
  40eb8c:	cbz	x0, 40eb70 <ferror@plt+0xc1d0>
  40eb90:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40eb94:	ldr	w0, [x0, #1652]
  40eb98:	cbnz	w0, 40ebfc <ferror@plt+0xc25c>
  40eb9c:	cmp	w2, #0x4
  40eba0:	b.eq	40f150 <ferror@plt+0xc7b0>  // b.none
  40eba4:	b.gt	40edac <ferror@plt+0xc40c>
  40eba8:	cmp	w2, #0x2
  40ebac:	b.eq	40f17c <ferror@plt+0xc7dc>  // b.none
  40ebb0:	cmp	w2, #0x3
  40ebb4:	b.ne	40ed98 <ferror@plt+0xc3f8>  // b.any
  40ebb8:	ldr	x1, [x20, #168]
  40ebbc:	ldrb	w0, [x19]
  40ebc0:	cbz	x1, 40ef0c <ferror@plt+0xc56c>
  40ebc4:	bl	402430 <putc@plt>
  40ebc8:	ldr	x1, [x20, #168]
  40ebcc:	add	x21, x19, #0x1
  40ebd0:	ldrb	w0, [x21]
  40ebd4:	cbz	x1, 40ef34 <ferror@plt+0xc594>
  40ebd8:	bl	402430 <putc@plt>
  40ebdc:	ldr	x1, [x20, #168]
  40ebe0:	add	x19, x21, #0x1
  40ebe4:	ldrb	w0, [x19]
  40ebe8:	cbz	x1, 40ef58 <ferror@plt+0xc5b8>
  40ebec:	ldp	x19, x20, [sp, #16]
  40ebf0:	ldp	x21, x22, [sp, #32]
  40ebf4:	ldp	x29, x30, [sp], #64
  40ebf8:	b	402430 <putc@plt>
  40ebfc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40ec00:	stp	x23, x24, [sp, #48]
  40ec04:	ldrb	w1, [x0, #856]
  40ec08:	cbz	w1, 40ecd8 <ferror@plt+0xc338>
  40ec0c:	adrp	x24, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ec10:	strb	wzr, [x0, #856]
  40ec14:	mov	w22, w3
  40ec18:	ldr	w0, [x24, #3472]
  40ec1c:	add	w0, w0, #0x1
  40ec20:	str	w0, [x24, #3472]
  40ec24:	cmp	w0, w3
  40ec28:	b.eq	40ecd8 <ferror@plt+0xc338>  // b.none
  40ec2c:	ldr	x1, [x20, #168]
  40ec30:	cbz	x1, 40ef7c <ferror@plt+0xc5dc>
  40ec34:	mov	w0, #0x23                  	// #35
  40ec38:	bl	402430 <putc@plt>
  40ec3c:	ldr	x1, [x20, #168]
  40ec40:	cbz	x1, 40f1b8 <ferror@plt+0xc818>
  40ec44:	mov	w0, #0x6c                  	// #108
  40ec48:	bl	402430 <putc@plt>
  40ec4c:	ldr	x1, [x20, #168]
  40ec50:	cbz	x1, 40f1e4 <ferror@plt+0xc844>
  40ec54:	mov	w0, #0x69                  	// #105
  40ec58:	bl	402430 <putc@plt>
  40ec5c:	ldr	x1, [x20, #168]
  40ec60:	cbz	x1, 40f1dc <ferror@plt+0xc83c>
  40ec64:	mov	w0, #0x6e                  	// #110
  40ec68:	bl	402430 <putc@plt>
  40ec6c:	ldr	x1, [x20, #168]
  40ec70:	cbz	x1, 40f1d4 <ferror@plt+0xc834>
  40ec74:	mov	w0, #0x65                  	// #101
  40ec78:	bl	402430 <putc@plt>
  40ec7c:	ldr	x1, [x20, #168]
  40ec80:	cbz	x1, 40f1cc <ferror@plt+0xc82c>
  40ec84:	mov	w0, #0x20                  	// #32
  40ec88:	bl	402430 <putc@plt>
  40ec8c:	mov	w1, #0xa                   	// #10
  40ec90:	mov	w0, w22
  40ec94:	bl	407f90 <ferror@plt+0x55f0>
  40ec98:	mov	x23, x0
  40ec9c:	ldrb	w0, [x0]
  40eca0:	ldr	x1, [x20, #168]
  40eca4:	cbz	w0, 40ecbc <ferror@plt+0xc31c>
  40eca8:	cbz	x1, 40f0d0 <ferror@plt+0xc730>
  40ecac:	bl	402430 <putc@plt>
  40ecb0:	ldr	x1, [x20, #168]
  40ecb4:	ldrb	w0, [x23, #1]!
  40ecb8:	cbnz	w0, 40eca8 <ferror@plt+0xc308>
  40ecbc:	ldr	w0, [x24, #3472]
  40ecc0:	cmp	w0, #0x0
  40ecc4:	b.le	40f044 <ferror@plt+0xc6a4>
  40ecc8:	cbz	x1, 40f124 <ferror@plt+0xc784>
  40eccc:	mov	w0, #0xa                   	// #10
  40ecd0:	bl	402430 <putc@plt>
  40ecd4:	str	w22, [x24, #3472]
  40ecd8:	cmp	w21, #0x0
  40ecdc:	b.le	40ed84 <ferror@plt+0xc3e4>
  40ece0:	sub	w21, w21, #0x1
  40ece4:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  40ece8:	add	x21, x21, #0x1
  40ecec:	adrp	x24, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40ecf0:	add	x22, x22, #0x358
  40ecf4:	add	x21, x19, x21
  40ecf8:	add	x24, x24, #0xd90
  40ecfc:	mov	w23, #0x1                   	// #1
  40ed00:	b	40ed24 <ferror@plt+0xc384>
  40ed04:	bl	402430 <putc@plt>
  40ed08:	ldrb	w0, [x19]
  40ed0c:	add	x19, x19, #0x1
  40ed10:	cmp	w0, #0xa
  40ed14:	b.ne	40ed1c <ferror@plt+0xc37c>  // b.any
  40ed18:	strb	w23, [x22]
  40ed1c:	cmp	x19, x21
  40ed20:	b.eq	40ed84 <ferror@plt+0xc3e4>  // b.none
  40ed24:	ldrb	w0, [x22]
  40ed28:	cbz	w0, 40ed3c <ferror@plt+0xc39c>
  40ed2c:	ldr	w0, [x24]
  40ed30:	strb	wzr, [x22]
  40ed34:	add	w0, w0, #0x1
  40ed38:	str	w0, [x24]
  40ed3c:	ldr	x1, [x20, #168]
  40ed40:	ldrb	w0, [x19]
  40ed44:	cbnz	x1, 40ed04 <ferror@plt+0xc364>
  40ed48:	ldr	w1, [x20, #152]
  40ed4c:	sub	w2, w1, #0x1
  40ed50:	cbz	w1, 40ed7c <ferror@plt+0xc3dc>
  40ed54:	ldr	x1, [x20, #176]
  40ed58:	str	w2, [x20, #152]
  40ed5c:	add	x2, x1, #0x1
  40ed60:	str	x2, [x20, #176]
  40ed64:	strb	w0, [x1]
  40ed68:	b	40ed08 <ferror@plt+0xc368>
  40ed6c:	mov	x1, x22
  40ed70:	bl	4175a8 <_obstack_newchunk@@Base>
  40ed74:	ldr	x2, [x20, #24]
  40ed78:	b	40eb54 <ferror@plt+0xc1b4>
  40ed7c:	bl	40e558 <ferror@plt+0xbbb8>
  40ed80:	b	40ed08 <ferror@plt+0xc368>
  40ed84:	ldp	x19, x20, [sp, #16]
  40ed88:	ldp	x21, x22, [sp, #32]
  40ed8c:	ldp	x23, x24, [sp, #48]
  40ed90:	ldp	x29, x30, [sp], #64
  40ed94:	ret
  40ed98:	cbz	w2, 40eb70 <ferror@plt+0xc1d0>
  40ed9c:	cmp	w2, #0x1
  40eda0:	b.ne	40f164 <ferror@plt+0xc7c4>  // b.any
  40eda4:	ldr	x1, [x20, #168]
  40eda8:	b	40ebe4 <ferror@plt+0xc244>
  40edac:	cmp	w2, #0x7
  40edb0:	b.eq	40f188 <ferror@plt+0xc7e8>  // b.none
  40edb4:	b.le	40ee2c <ferror@plt+0xc48c>
  40edb8:	cmp	w2, #0x8
  40edbc:	b.ne	40f164 <ferror@plt+0xc7c4>  // b.any
  40edc0:	ldrb	w0, [x1]
  40edc4:	ldr	x1, [x20, #168]
  40edc8:	cbz	x1, 40ee44 <ferror@plt+0xc4a4>
  40edcc:	bl	402430 <putc@plt>
  40edd0:	ldr	x1, [x20, #168]
  40edd4:	add	x19, x19, #0x1
  40edd8:	ldrb	w0, [x19]
  40eddc:	cbz	x1, 40ee6c <ferror@plt+0xc4cc>
  40ede0:	bl	402430 <putc@plt>
  40ede4:	add	x19, x19, #0x1
  40ede8:	ldr	x1, [x20, #168]
  40edec:	ldrb	w0, [x19]
  40edf0:	cbz	x1, 40ee94 <ferror@plt+0xc4f4>
  40edf4:	bl	402430 <putc@plt>
  40edf8:	ldr	x1, [x20, #168]
  40edfc:	add	x19, x19, #0x1
  40ee00:	ldrb	w0, [x19]
  40ee04:	cbz	x1, 40eebc <ferror@plt+0xc51c>
  40ee08:	bl	402430 <putc@plt>
  40ee0c:	ldr	x1, [x20, #168]
  40ee10:	add	x21, x19, #0x1
  40ee14:	ldrb	w0, [x21]
  40ee18:	cbz	x1, 40eee4 <ferror@plt+0xc544>
  40ee1c:	bl	402430 <putc@plt>
  40ee20:	add	x19, x21, #0x1
  40ee24:	ldr	x1, [x20, #168]
  40ee28:	b	40ebbc <ferror@plt+0xc21c>
  40ee2c:	cmp	w2, #0x5
  40ee30:	b.eq	40f15c <ferror@plt+0xc7bc>  // b.none
  40ee34:	cmp	w2, #0x6
  40ee38:	b.ne	40f164 <ferror@plt+0xc7c4>  // b.any
  40ee3c:	ldr	x1, [x20, #168]
  40ee40:	b	40edec <ferror@plt+0xc44c>
  40ee44:	ldr	w1, [x20, #152]
  40ee48:	cbz	w1, 40f2c4 <ferror@plt+0xc924>
  40ee4c:	ldr	x2, [x20, #176]
  40ee50:	sub	w1, w1, #0x1
  40ee54:	add	x19, x19, #0x1
  40ee58:	str	w1, [x20, #152]
  40ee5c:	add	x1, x2, #0x1
  40ee60:	str	x1, [x20, #176]
  40ee64:	strb	w0, [x2]
  40ee68:	ldrb	w0, [x19]
  40ee6c:	ldr	w1, [x20, #152]
  40ee70:	cbz	w1, 40f2b4 <ferror@plt+0xc914>
  40ee74:	ldr	x2, [x20, #176]
  40ee78:	sub	w1, w1, #0x1
  40ee7c:	add	x19, x19, #0x1
  40ee80:	str	w1, [x20, #152]
  40ee84:	add	x1, x2, #0x1
  40ee88:	str	x1, [x20, #176]
  40ee8c:	strb	w0, [x2]
  40ee90:	ldrb	w0, [x19]
  40ee94:	ldr	w1, [x20, #152]
  40ee98:	cbz	w1, 40f238 <ferror@plt+0xc898>
  40ee9c:	ldr	x2, [x20, #176]
  40eea0:	sub	w1, w1, #0x1
  40eea4:	add	x19, x19, #0x1
  40eea8:	str	w1, [x20, #152]
  40eeac:	add	x1, x2, #0x1
  40eeb0:	str	x1, [x20, #176]
  40eeb4:	strb	w0, [x2]
  40eeb8:	ldrb	w0, [x19]
  40eebc:	ldr	w1, [x20, #152]
  40eec0:	cbz	w1, 40f1ac <ferror@plt+0xc80c>
  40eec4:	ldr	x2, [x20, #176]
  40eec8:	sub	w1, w1, #0x1
  40eecc:	add	x21, x19, #0x1
  40eed0:	str	w1, [x20, #152]
  40eed4:	add	x1, x2, #0x1
  40eed8:	str	x1, [x20, #176]
  40eedc:	strb	w0, [x2]
  40eee0:	ldrb	w0, [x19, #1]
  40eee4:	ldr	w1, [x20, #152]
  40eee8:	cbz	w1, 40f19c <ferror@plt+0xc7fc>
  40eeec:	ldr	x2, [x20, #176]
  40eef0:	sub	w1, w1, #0x1
  40eef4:	add	x19, x21, #0x1
  40eef8:	str	w1, [x20, #152]
  40eefc:	add	x1, x2, #0x1
  40ef00:	str	x1, [x20, #176]
  40ef04:	strb	w0, [x2]
  40ef08:	ldrb	w0, [x21, #1]
  40ef0c:	ldr	w1, [x20, #152]
  40ef10:	cbz	w1, 40f0c4 <ferror@plt+0xc724>
  40ef14:	ldr	x2, [x20, #176]
  40ef18:	sub	w1, w1, #0x1
  40ef1c:	add	x21, x19, #0x1
  40ef20:	str	w1, [x20, #152]
  40ef24:	add	x1, x2, #0x1
  40ef28:	str	x1, [x20, #176]
  40ef2c:	strb	w0, [x2]
  40ef30:	ldrb	w0, [x19, #1]
  40ef34:	ldr	w1, [x20, #152]
  40ef38:	cbz	w1, 40f0b8 <ferror@plt+0xc718>
  40ef3c:	ldr	x2, [x20, #176]
  40ef40:	sub	w1, w1, #0x1
  40ef44:	str	w1, [x20, #152]
  40ef48:	add	x1, x2, #0x1
  40ef4c:	str	x1, [x20, #176]
  40ef50:	strb	w0, [x2]
  40ef54:	ldrb	w0, [x21, #1]
  40ef58:	ldr	w1, [x20, #152]
  40ef5c:	cbz	w1, 40f0a8 <ferror@plt+0xc708>
  40ef60:	ldr	x2, [x20, #176]
  40ef64:	sub	w1, w1, #0x1
  40ef68:	str	w1, [x20, #152]
  40ef6c:	add	x1, x2, #0x1
  40ef70:	str	x1, [x20, #176]
  40ef74:	strb	w0, [x2]
  40ef78:	b	40eb70 <ferror@plt+0xc1d0>
  40ef7c:	ldr	w0, [x20, #152]
  40ef80:	cbz	w0, 40f22c <ferror@plt+0xc88c>
  40ef84:	ldr	x1, [x20, #176]
  40ef88:	sub	w0, w0, #0x1
  40ef8c:	mov	w2, #0x23                  	// #35
  40ef90:	str	w0, [x20, #152]
  40ef94:	add	x3, x1, #0x1
  40ef98:	str	x3, [x20, #176]
  40ef9c:	strb	w2, [x1]
  40efa0:	cbz	w0, 40f220 <ferror@plt+0xc880>
  40efa4:	ldr	x1, [x20, #176]
  40efa8:	sub	w0, w0, #0x1
  40efac:	mov	w2, #0x6c                  	// #108
  40efb0:	str	w0, [x20, #152]
  40efb4:	add	x3, x1, #0x1
  40efb8:	str	x3, [x20, #176]
  40efbc:	strb	w2, [x1]
  40efc0:	cbz	w0, 40f214 <ferror@plt+0xc874>
  40efc4:	ldr	x1, [x20, #176]
  40efc8:	sub	w0, w0, #0x1
  40efcc:	mov	w2, #0x69                  	// #105
  40efd0:	str	w0, [x20, #152]
  40efd4:	add	x3, x1, #0x1
  40efd8:	str	x3, [x20, #176]
  40efdc:	strb	w2, [x1]
  40efe0:	cbz	w0, 40f208 <ferror@plt+0xc868>
  40efe4:	ldr	x1, [x20, #176]
  40efe8:	sub	w0, w0, #0x1
  40efec:	mov	w2, #0x6e                  	// #110
  40eff0:	str	w0, [x20, #152]
  40eff4:	add	x3, x1, #0x1
  40eff8:	str	x3, [x20, #176]
  40effc:	strb	w2, [x1]
  40f000:	cbz	w0, 40f1c0 <ferror@plt+0xc820>
  40f004:	ldr	x1, [x20, #176]
  40f008:	sub	w0, w0, #0x1
  40f00c:	mov	w2, #0x65                  	// #101
  40f010:	str	w0, [x20, #152]
  40f014:	add	x3, x1, #0x1
  40f018:	str	x3, [x20, #176]
  40f01c:	strb	w2, [x1]
  40f020:	cbz	w0, 40f1fc <ferror@plt+0xc85c>
  40f024:	ldr	x1, [x20, #176]
  40f028:	sub	w0, w0, #0x1
  40f02c:	mov	w2, #0x20                  	// #32
  40f030:	str	w0, [x20, #152]
  40f034:	add	x0, x1, #0x1
  40f038:	str	x0, [x20, #176]
  40f03c:	strb	w2, [x1]
  40f040:	b	40ec8c <ferror@plt+0xc2ec>
  40f044:	adrp	x23, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40f048:	ldr	x0, [x23, #3416]
  40f04c:	ldrb	w0, [x0]
  40f050:	cbz	w0, 40ecc8 <ferror@plt+0xc328>
  40f054:	cbz	x1, 40f26c <ferror@plt+0xc8cc>
  40f058:	mov	w0, #0x20                  	// #32
  40f05c:	bl	402430 <putc@plt>
  40f060:	ldr	x1, [x20, #168]
  40f064:	cbz	x1, 40f2e8 <ferror@plt+0xc948>
  40f068:	mov	w0, #0x22                  	// #34
  40f06c:	bl	402430 <putc@plt>
  40f070:	ldr	x23, [x23, #3416]
  40f074:	ldr	x1, [x20, #168]
  40f078:	ldrb	w0, [x23]
  40f07c:	cbz	w0, 40f094 <ferror@plt+0xc6f4>
  40f080:	cbz	x1, 40f100 <ferror@plt+0xc760>
  40f084:	bl	402430 <putc@plt>
  40f088:	ldr	x1, [x20, #168]
  40f08c:	ldrb	w0, [x23, #1]!
  40f090:	cbnz	w0, 40f080 <ferror@plt+0xc6e0>
  40f094:	cbz	x1, 40f244 <ferror@plt+0xc8a4>
  40f098:	mov	w0, #0x22                  	// #34
  40f09c:	bl	402430 <putc@plt>
  40f0a0:	ldr	x1, [x20, #168]
  40f0a4:	b	40ecc8 <ferror@plt+0xc328>
  40f0a8:	ldp	x19, x20, [sp, #16]
  40f0ac:	ldp	x21, x22, [sp, #32]
  40f0b0:	ldp	x29, x30, [sp], #64
  40f0b4:	b	40e558 <ferror@plt+0xbbb8>
  40f0b8:	bl	40e558 <ferror@plt+0xbbb8>
  40f0bc:	ldr	x1, [x20, #168]
  40f0c0:	b	40ebe0 <ferror@plt+0xc240>
  40f0c4:	bl	40e558 <ferror@plt+0xbbb8>
  40f0c8:	ldr	x1, [x20, #168]
  40f0cc:	b	40ebcc <ferror@plt+0xc22c>
  40f0d0:	ldr	w2, [x20, #152]
  40f0d4:	sub	w3, w2, #0x1
  40f0d8:	cbz	w2, 40f0f4 <ferror@plt+0xc754>
  40f0dc:	ldr	x2, [x20, #176]
  40f0e0:	str	w3, [x20, #152]
  40f0e4:	add	x3, x2, #0x1
  40f0e8:	str	x3, [x20, #176]
  40f0ec:	strb	w0, [x2]
  40f0f0:	b	40ecb4 <ferror@plt+0xc314>
  40f0f4:	bl	40e558 <ferror@plt+0xbbb8>
  40f0f8:	ldr	x1, [x20, #168]
  40f0fc:	b	40ecb4 <ferror@plt+0xc314>
  40f100:	ldr	w2, [x20, #152]
  40f104:	sub	w3, w2, #0x1
  40f108:	cbz	w2, 40f190 <ferror@plt+0xc7f0>
  40f10c:	ldr	x2, [x20, #176]
  40f110:	str	w3, [x20, #152]
  40f114:	add	x3, x2, #0x1
  40f118:	str	x3, [x20, #176]
  40f11c:	strb	w0, [x2]
  40f120:	b	40f08c <ferror@plt+0xc6ec>
  40f124:	ldr	w0, [x20, #152]
  40f128:	cbz	w0, 40f1ec <ferror@plt+0xc84c>
  40f12c:	ldr	x1, [x20, #176]
  40f130:	sub	w0, w0, #0x1
  40f134:	mov	w2, #0xa                   	// #10
  40f138:	str	w0, [x20, #152]
  40f13c:	add	x0, x1, #0x1
  40f140:	str	x0, [x20, #176]
  40f144:	strb	w2, [x1]
  40f148:	str	w22, [x24, #3472]
  40f14c:	b	40ecd8 <ferror@plt+0xc338>
  40f150:	mov	x21, x1
  40f154:	ldr	x1, [x20, #168]
  40f158:	b	40ee14 <ferror@plt+0xc474>
  40f15c:	ldr	x1, [x20, #168]
  40f160:	b	40ee00 <ferror@plt+0xc460>
  40f164:	mov	w1, w21
  40f168:	mov	x0, x19
  40f16c:	ldp	x19, x20, [sp, #16]
  40f170:	ldp	x21, x22, [sp, #32]
  40f174:	ldp	x29, x30, [sp], #64
  40f178:	b	40e698 <ferror@plt+0xbcf8>
  40f17c:	mov	x21, x1
  40f180:	ldr	x1, [x20, #168]
  40f184:	b	40ebd0 <ferror@plt+0xc230>
  40f188:	ldr	x1, [x20, #168]
  40f18c:	b	40edd8 <ferror@plt+0xc438>
  40f190:	bl	40e558 <ferror@plt+0xbbb8>
  40f194:	ldr	x1, [x20, #168]
  40f198:	b	40f08c <ferror@plt+0xc6ec>
  40f19c:	bl	40e558 <ferror@plt+0xbbb8>
  40f1a0:	add	x19, x21, #0x1
  40f1a4:	ldr	x1, [x20, #168]
  40f1a8:	b	40ebbc <ferror@plt+0xc21c>
  40f1ac:	bl	40e558 <ferror@plt+0xbbb8>
  40f1b0:	ldr	x1, [x20, #168]
  40f1b4:	b	40ee10 <ferror@plt+0xc470>
  40f1b8:	ldr	w0, [x20, #152]
  40f1bc:	b	40efa0 <ferror@plt+0xc600>
  40f1c0:	mov	w0, #0x65                  	// #101
  40f1c4:	bl	40e558 <ferror@plt+0xbbb8>
  40f1c8:	b	40ec7c <ferror@plt+0xc2dc>
  40f1cc:	ldr	w0, [x20, #152]
  40f1d0:	b	40f020 <ferror@plt+0xc680>
  40f1d4:	ldr	w0, [x20, #152]
  40f1d8:	b	40f000 <ferror@plt+0xc660>
  40f1dc:	ldr	w0, [x20, #152]
  40f1e0:	b	40efe0 <ferror@plt+0xc640>
  40f1e4:	ldr	w0, [x20, #152]
  40f1e8:	b	40efc0 <ferror@plt+0xc620>
  40f1ec:	mov	w0, #0xa                   	// #10
  40f1f0:	bl	40e558 <ferror@plt+0xbbb8>
  40f1f4:	str	w22, [x24, #3472]
  40f1f8:	b	40ecd8 <ferror@plt+0xc338>
  40f1fc:	mov	w0, #0x20                  	// #32
  40f200:	bl	40e558 <ferror@plt+0xbbb8>
  40f204:	b	40ec8c <ferror@plt+0xc2ec>
  40f208:	mov	w0, #0x6e                  	// #110
  40f20c:	bl	40e558 <ferror@plt+0xbbb8>
  40f210:	b	40ec6c <ferror@plt+0xc2cc>
  40f214:	mov	w0, #0x69                  	// #105
  40f218:	bl	40e558 <ferror@plt+0xbbb8>
  40f21c:	b	40ec5c <ferror@plt+0xc2bc>
  40f220:	mov	w0, #0x6c                  	// #108
  40f224:	bl	40e558 <ferror@plt+0xbbb8>
  40f228:	b	40ec4c <ferror@plt+0xc2ac>
  40f22c:	mov	w0, #0x23                  	// #35
  40f230:	bl	40e558 <ferror@plt+0xbbb8>
  40f234:	b	40ec3c <ferror@plt+0xc29c>
  40f238:	bl	40e558 <ferror@plt+0xbbb8>
  40f23c:	ldr	x1, [x20, #168]
  40f240:	b	40edfc <ferror@plt+0xc45c>
  40f244:	ldr	w0, [x20, #152]
  40f248:	cbz	w0, 40f2f0 <ferror@plt+0xc950>
  40f24c:	ldr	x1, [x20, #176]
  40f250:	sub	w0, w0, #0x1
  40f254:	mov	w2, #0x22                  	// #34
  40f258:	str	w0, [x20, #152]
  40f25c:	add	x3, x1, #0x1
  40f260:	str	x3, [x20, #176]
  40f264:	strb	w2, [x1]
  40f268:	b	40f128 <ferror@plt+0xc788>
  40f26c:	ldr	w0, [x20, #152]
  40f270:	cbz	w0, 40f2d0 <ferror@plt+0xc930>
  40f274:	ldr	x1, [x20, #176]
  40f278:	sub	w0, w0, #0x1
  40f27c:	mov	w2, #0x20                  	// #32
  40f280:	str	w0, [x20, #152]
  40f284:	add	x3, x1, #0x1
  40f288:	str	x3, [x20, #176]
  40f28c:	strb	w2, [x1]
  40f290:	cbz	w0, 40f2dc <ferror@plt+0xc93c>
  40f294:	ldr	x1, [x20, #176]
  40f298:	sub	w0, w0, #0x1
  40f29c:	mov	w2, #0x22                  	// #34
  40f2a0:	str	w0, [x20, #152]
  40f2a4:	add	x0, x1, #0x1
  40f2a8:	str	x0, [x20, #176]
  40f2ac:	strb	w2, [x1]
  40f2b0:	b	40f070 <ferror@plt+0xc6d0>
  40f2b4:	bl	40e558 <ferror@plt+0xbbb8>
  40f2b8:	add	x19, x19, #0x1
  40f2bc:	ldr	x1, [x20, #168]
  40f2c0:	b	40edec <ferror@plt+0xc44c>
  40f2c4:	bl	40e558 <ferror@plt+0xbbb8>
  40f2c8:	ldr	x1, [x20, #168]
  40f2cc:	b	40edd4 <ferror@plt+0xc434>
  40f2d0:	mov	w0, #0x20                  	// #32
  40f2d4:	bl	40e558 <ferror@plt+0xbbb8>
  40f2d8:	b	40f060 <ferror@plt+0xc6c0>
  40f2dc:	mov	w0, #0x22                  	// #34
  40f2e0:	bl	40e558 <ferror@plt+0xbbb8>
  40f2e4:	b	40f070 <ferror@plt+0xc6d0>
  40f2e8:	ldr	w0, [x20, #152]
  40f2ec:	b	40f290 <ferror@plt+0xc8f0>
  40f2f0:	mov	w0, #0x22                  	// #34
  40f2f4:	bl	40e558 <ferror@plt+0xbbb8>
  40f2f8:	ldr	x1, [x20, #168]
  40f2fc:	b	40ecc8 <ferror@plt+0xc328>
  40f300:	stp	x29, x30, [sp, #-64]!
  40f304:	mov	x29, sp
  40f308:	stp	x19, x20, [sp, #16]
  40f30c:	adrp	x20, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40f310:	ldr	w1, [x20, #3476]
  40f314:	str	w0, [sp, #44]
  40f318:	cmp	w1, w0
  40f31c:	b.eq	40f394 <ferror@plt+0xc9f4>  // b.none
  40f320:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  40f324:	add	x19, x19, #0x9f8
  40f328:	ldr	x2, [x19, #144]
  40f32c:	cbz	x2, 40f350 <ferror@plt+0xc9b0>
  40f330:	ldr	w1, [x2, #12]
  40f334:	cbz	w1, 40f400 <ferror@plt+0xca60>
  40f338:	ldr	w3, [x19, #152]
  40f33c:	sub	w1, w1, w3
  40f340:	str	w1, [x2, #16]
  40f344:	str	xzr, [x19, #144]
  40f348:	str	wzr, [x19, #152]
  40f34c:	stp	xzr, xzr, [x19, #168]
  40f350:	cmp	w0, #0x0
  40f354:	str	w0, [x20, #3476]
  40f358:	b.lt	40f394 <ferror@plt+0xc9f4>  // b.tstop
  40f35c:	b.ne	40f3a0 <ferror@plt+0xca00>  // b.any
  40f360:	add	x20, x19, #0xb8
  40f364:	ldr	w0, [x20, #12]
  40f368:	str	x20, [x19, #144]
  40f36c:	ldr	x1, [x20]
  40f370:	cbz	w0, 40f42c <ferror@plt+0xca8c>
  40f374:	ldr	w2, [x20, #16]
  40f378:	sub	w0, w0, w2
  40f37c:	str	w0, [x19, #152]
  40f380:	add	x1, x1, w2, sxtw
  40f384:	str	x1, [x19, #176]
  40f388:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40f38c:	mov	w1, #0xffffffff            	// #-1
  40f390:	str	w1, [x0, #3472]
  40f394:	ldp	x19, x20, [sp, #16]
  40f398:	ldp	x29, x30, [sp], #64
  40f39c:	ret
  40f3a0:	ldr	x0, [x19, #160]
  40f3a4:	add	x3, sp, #0x38
  40f3a8:	add	x2, sp, #0x2c
  40f3ac:	adrp	x1, 40d000 <ferror@plt+0xa660>
  40f3b0:	add	x1, x1, #0xc78
  40f3b4:	ldr	x4, [x0]
  40f3b8:	ldr	x4, [x4, #24]
  40f3bc:	blr	x4
  40f3c0:	tst	w0, #0xff
  40f3c4:	b.ne	40f438 <ferror@plt+0xca98>  // b.any
  40f3c8:	ldr	x20, [x19, #208]
  40f3cc:	cbz	x20, 40f4ac <ferror@plt+0xcb0c>
  40f3d0:	ldr	x0, [x20]
  40f3d4:	str	x0, [x19, #208]
  40f3d8:	ldr	x0, [x19, #160]
  40f3dc:	mov	x1, x20
  40f3e0:	ldr	w2, [sp, #44]
  40f3e4:	str	w2, [x20, #8]
  40f3e8:	ldr	x2, [x0]
  40f3ec:	str	xzr, [x20]
  40f3f0:	ldr	x2, [x2, #32]
  40f3f4:	blr	x2
  40f3f8:	tbz	w0, #31, 40f364 <ferror@plt+0xc9c4>
  40f3fc:	bl	416bb0 <ferror@plt+0x14210>
  40f400:	ldr	x3, [x2]
  40f404:	ldr	w1, [x2, #16]
  40f408:	cbz	x3, 40f474 <ferror@plt+0xcad4>
  40f40c:	cbz	w1, 40f344 <ferror@plt+0xc9a4>
  40f410:	ldr	w1, [x2, #8]
  40f414:	mov	x0, x3
  40f418:	str	xzr, [x2]
  40f41c:	bl	40dc90 <ferror@plt+0xb2f0>
  40f420:	cbnz	w0, 40f508 <ferror@plt+0xcb68>
  40f424:	ldr	w0, [sp, #44]
  40f428:	b	40f344 <ferror@plt+0xc9a4>
  40f42c:	cbz	x1, 40f450 <ferror@plt+0xcab0>
  40f430:	str	x1, [x19, #168]
  40f434:	b	40f388 <ferror@plt+0xc9e8>
  40f438:	ldr	x20, [sp, #56]
  40f43c:	ldr	w0, [sp, #44]
  40f440:	ldr	w1, [x20, #8]
  40f444:	cmp	w1, w0
  40f448:	b.ne	40f3c8 <ferror@plt+0xca28>  // b.any
  40f44c:	b	40f364 <ferror@plt+0xc9c4>
  40f450:	ldr	w0, [x20, #16]
  40f454:	cbz	w0, 40f430 <ferror@plt+0xca90>
  40f458:	ldr	w0, [x20, #8]
  40f45c:	bl	40e388 <ferror@plt+0xb9e8>
  40f460:	str	x0, [x20]
  40f464:	ldr	x1, [x19, #144]
  40f468:	ldr	x1, [x1]
  40f46c:	str	x1, [x19, #168]
  40f470:	b	40f388 <ferror@plt+0xc9e8>
  40f474:	cbnz	w1, 40f574 <ferror@plt+0xcbd4>
  40f478:	ldr	x0, [x19, #160]
  40f47c:	mov	x1, x2
  40f480:	ldr	x2, [x0]
  40f484:	ldr	x2, [x2, #40]
  40f488:	blr	x2
  40f48c:	tst	w0, #0xff
  40f490:	b.eq	40f550 <ferror@plt+0xcbb0>  // b.none
  40f494:	ldr	x0, [x19, #144]
  40f498:	ldr	x1, [x19, #208]
  40f49c:	str	x0, [x19, #208]
  40f4a0:	str	x1, [x0]
  40f4a4:	ldr	w0, [sp, #44]
  40f4a8:	b	40f344 <ferror@plt+0xc9a4>
  40f4ac:	ldp	x1, x4, [x19, #80]
  40f4b0:	add	x20, x19, #0x38
  40f4b4:	sub	x0, x4, x1
  40f4b8:	cmp	x0, #0x17
  40f4bc:	b.ls	40f52c <ferror@plt+0xcb8c>  // b.plast
  40f4c0:	ldr	x20, [x19, #72]
  40f4c4:	add	x1, x1, #0x18
  40f4c8:	cmp	x1, x20
  40f4cc:	b.eq	40f540 <ferror@plt+0xcba0>  // b.none
  40f4d0:	ldr	x0, [x19, #104]
  40f4d4:	ldr	x2, [x19, #64]
  40f4d8:	add	x1, x1, x0
  40f4dc:	bic	x1, x1, x0
  40f4e0:	str	x1, [x19, #80]
  40f4e4:	sub	x0, x1, x2
  40f4e8:	sub	x2, x4, x2
  40f4ec:	cmp	x0, x2
  40f4f0:	b.ls	40f4fc <ferror@plt+0xcb5c>  // b.plast
  40f4f4:	mov	x1, x4
  40f4f8:	str	x4, [x19, #80]
  40f4fc:	str	x1, [x19, #72]
  40f500:	stur	xzr, [x20, #12]
  40f504:	b	40f3d8 <ferror@plt+0xca38>
  40f508:	bl	402920 <__errno_location@plt>
  40f50c:	mov	x1, x0
  40f510:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f514:	mov	w0, #0x0                   	// #0
  40f518:	add	x2, x2, #0x758
  40f51c:	ldr	w1, [x1]
  40f520:	bl	4033d0 <ferror@plt+0xa30>
  40f524:	ldr	w0, [sp, #44]
  40f528:	b	40f344 <ferror@plt+0xc9a4>
  40f52c:	mov	x1, #0x18                  	// #24
  40f530:	mov	x0, x20
  40f534:	bl	4175a8 <_obstack_newchunk@@Base>
  40f538:	ldp	x1, x4, [x19, #80]
  40f53c:	b	40f4c0 <ferror@plt+0xcb20>
  40f540:	ldrb	w2, [x19, #136]
  40f544:	orr	w2, w2, #0x2
  40f548:	strb	w2, [x19, #136]
  40f54c:	b	40f4d0 <ferror@plt+0xcb30>
  40f550:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f554:	add	x3, x3, #0x900
  40f558:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f55c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f560:	add	x3, x3, #0x28
  40f564:	add	x1, x1, #0x690
  40f568:	add	x0, x0, #0x8a8
  40f56c:	mov	w2, #0x2df                 	// #735
  40f570:	bl	402910 <__assert_fail@plt>
  40f574:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f578:	add	x3, x3, #0x900
  40f57c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f580:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f584:	add	x3, x3, #0x28
  40f588:	add	x1, x1, #0x690
  40f58c:	add	x0, x0, #0x890
  40f590:	mov	w2, #0x2dd                 	// #733
  40f594:	bl	402910 <__assert_fail@plt>
  40f598:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  40f59c:	ldr	x1, [x1, #2696]
  40f5a0:	cbz	x1, 40f5a8 <ferror@plt+0xcc08>
  40f5a4:	b	40e788 <ferror@plt+0xbde8>
  40f5a8:	ret
  40f5ac:	nop
  40f5b0:	stp	x29, x30, [sp, #-48]!
  40f5b4:	cmp	w0, #0x0
  40f5b8:	mov	x29, sp
  40f5bc:	str	w0, [sp, #28]
  40f5c0:	b.le	40f614 <ferror@plt+0xcc74>
  40f5c4:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40f5c8:	ldr	w1, [x1, #3476]
  40f5cc:	cmp	w0, w1
  40f5d0:	b.eq	40f614 <ferror@plt+0xcc74>  // b.none
  40f5d4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40f5d8:	add	x3, sp, #0x28
  40f5dc:	add	x2, sp, #0x1c
  40f5e0:	adrp	x1, 40d000 <ferror@plt+0xa660>
  40f5e4:	ldr	x0, [x0, #2712]
  40f5e8:	add	x1, x1, #0xc78
  40f5ec:	ldr	x4, [x0]
  40f5f0:	ldr	x4, [x4, #24]
  40f5f4:	blr	x4
  40f5f8:	tst	w0, #0xff
  40f5fc:	b.eq	40f614 <ferror@plt+0xcc74>  // b.none
  40f600:	ldr	x0, [sp, #40]
  40f604:	ldr	w1, [sp, #28]
  40f608:	ldr	w2, [x0, #8]
  40f60c:	cmp	w2, w1
  40f610:	b.eq	40f61c <ferror@plt+0xcc7c>  // b.none
  40f614:	ldp	x29, x30, [sp], #48
  40f618:	ret
  40f61c:	bl	40e818 <ferror@plt+0xbe78>
  40f620:	b	40f614 <ferror@plt+0xcc74>
  40f624:	nop
  40f628:	stp	x29, x30, [sp, #-96]!
  40f62c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40f630:	mov	x29, sp
  40f634:	ldr	x0, [x0, #2712]
  40f638:	add	x8, sp, #0x28
  40f63c:	ldr	x1, [x0]
  40f640:	ldr	x1, [x1, #56]
  40f644:	str	x19, [sp, #16]
  40f648:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40f64c:	add	x19, x19, #0xd94
  40f650:	blr	x1
  40f654:	b	40f66c <ferror@plt+0xcccc>
  40f658:	ldr	x0, [sp, #32]
  40f65c:	ldr	w1, [x19]
  40f660:	ldr	w2, [x0, #8]
  40f664:	cmp	w2, w1
  40f668:	b.ne	40f6a4 <ferror@plt+0xcd04>  // b.any
  40f66c:	ldr	x2, [sp, #40]
  40f670:	add	x1, sp, #0x20
  40f674:	add	x0, sp, #0x28
  40f678:	ldr	x2, [x2, #64]
  40f67c:	blr	x2
  40f680:	tst	w0, #0xff
  40f684:	b.ne	40f658 <ferror@plt+0xccb8>  // b.any
  40f688:	ldr	x1, [sp, #40]
  40f68c:	add	x0, sp, #0x28
  40f690:	ldr	x1, [x1, #72]
  40f694:	blr	x1
  40f698:	ldr	x19, [sp, #16]
  40f69c:	ldp	x29, x30, [sp], #96
  40f6a0:	ret
  40f6a4:	bl	40e818 <ferror@plt+0xbe78>
  40f6a8:	b	40f66c <ferror@plt+0xcccc>
  40f6ac:	nop
  40f6b0:	stp	x29, x30, [sp, #-256]!
  40f6b4:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40f6b8:	mov	x29, sp
  40f6bc:	stp	x19, x20, [sp, #16]
  40f6c0:	mov	x20, x0
  40f6c4:	mov	w0, #0x0                   	// #0
  40f6c8:	stp	x21, x22, [sp, #32]
  40f6cc:	adrp	x22, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f6d0:	add	x22, x22, #0x8e8
  40f6d4:	stp	x23, x24, [sp, #48]
  40f6d8:	adrp	x23, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f6dc:	ldr	w24, [x1, #3476]
  40f6e0:	bl	40f300 <ferror@plt+0xc960>
  40f6e4:	add	x23, x23, #0x8b0
  40f6e8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  40f6ec:	add	x1, x1, #0x9f8
  40f6f0:	add	x8, sp, #0x80
  40f6f4:	mov	w21, #0x0                   	// #0
  40f6f8:	ldr	x0, [x1, #160]
  40f6fc:	str	x20, [x1, #168]
  40f700:	ldr	x1, [x0]
  40f704:	ldr	x1, [x1, #56]
  40f708:	blr	x1
  40f70c:	ldp	x6, x7, [sp, #128]
  40f710:	stp	x6, x7, [sp, #72]
  40f714:	ldp	x4, x5, [sp, #144]
  40f718:	stp	x4, x5, [sp, #88]
  40f71c:	ldp	x2, x3, [sp, #160]
  40f720:	stp	x2, x3, [sp, #104]
  40f724:	ldr	x0, [sp, #176]
  40f728:	str	x0, [sp, #120]
  40f72c:	ldr	x2, [sp, #72]
  40f730:	add	x1, sp, #0x40
  40f734:	add	x0, sp, #0x48
  40f738:	ldr	x2, [x2, #64]
  40f73c:	blr	x2
  40f740:	tst	w0, #0xff
  40f744:	b.eq	40f798 <ferror@plt+0xcdf8>  // b.none
  40f748:	ldr	x19, [sp, #64]
  40f74c:	ldp	w0, w3, [x19, #12]
  40f750:	cbz	w0, 40f7d8 <ferror@plt+0xce38>
  40f754:	ldr	w2, [x19, #8]
  40f758:	mov	x1, x23
  40f75c:	mov	x0, x20
  40f760:	bl	416d88 <ferror@plt+0x143e8>
  40f764:	mov	x0, x19
  40f768:	bl	40e818 <ferror@plt+0xbe78>
  40f76c:	mov	x1, x20
  40f770:	mov	w0, #0xa                   	// #10
  40f774:	bl	402430 <putc@plt>
  40f778:	ldr	w21, [x19, #8]
  40f77c:	ldr	x2, [sp, #72]
  40f780:	add	x1, sp, #0x40
  40f784:	add	x0, sp, #0x48
  40f788:	ldr	x2, [x2, #64]
  40f78c:	blr	x2
  40f790:	tst	w0, #0xff
  40f794:	b.ne	40f748 <ferror@plt+0xcda8>  // b.any
  40f798:	ldr	x1, [sp, #72]
  40f79c:	add	x0, sp, #0x48
  40f7a0:	ldr	x1, [x1, #72]
  40f7a4:	blr	x1
  40f7a8:	cmp	w21, w24
  40f7ac:	b.eq	40f7c4 <ferror@plt+0xce24>  // b.none
  40f7b0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f7b4:	mov	w2, w24
  40f7b8:	mov	x0, x20
  40f7bc:	add	x1, x1, #0x8f8
  40f7c0:	bl	416d88 <ferror@plt+0x143e8>
  40f7c4:	ldp	x19, x20, [sp, #16]
  40f7c8:	ldp	x21, x22, [sp, #32]
  40f7cc:	ldp	x23, x24, [sp, #48]
  40f7d0:	ldp	x29, x30, [sp], #256
  40f7d4:	ret
  40f7d8:	cbz	w3, 40f72c <ferror@plt+0xcd8c>
  40f7dc:	ldr	w0, [x19, #8]
  40f7e0:	mov	w1, #0x1                   	// #1
  40f7e4:	bl	40e388 <ferror@plt+0xb9e8>
  40f7e8:	str	x0, [x19]
  40f7ec:	bl	4024c0 <fileno@plt>
  40f7f0:	mov	w1, w0
  40f7f4:	add	x2, sp, #0x80
  40f7f8:	mov	w0, #0x0                   	// #0
  40f7fc:	bl	4028a0 <__fxstat@plt>
  40f800:	tbnz	w0, #31, 40f820 <ferror@plt+0xce80>
  40f804:	ldr	x3, [sp, #176]
  40f808:	tbnz	x3, #63, 40f844 <ferror@plt+0xcea4>
  40f80c:	ldr	w2, [x19, #8]
  40f810:	mov	x1, x22
  40f814:	mov	x0, x20
  40f818:	bl	416d88 <ferror@plt+0x143e8>
  40f81c:	b	40f764 <ferror@plt+0xcdc4>
  40f820:	bl	402920 <__errno_location@plt>
  40f824:	mov	x1, x0
  40f828:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f82c:	mov	w0, #0x1                   	// #1
  40f830:	add	x2, x2, #0x8b8
  40f834:	ldr	w1, [x1]
  40f838:	bl	4033d0 <ferror@plt+0xa30>
  40f83c:	ldr	x3, [sp, #176]
  40f840:	tbz	x3, #63, 40f80c <ferror@plt+0xce6c>
  40f844:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f848:	mov	w1, #0x0                   	// #0
  40f84c:	add	x2, x2, #0x8d0
  40f850:	mov	w0, #0x1                   	// #1
  40f854:	bl	4033d0 <ferror@plt+0xa30>
  40f858:	ldr	x3, [sp, #176]
  40f85c:	b	40f80c <ferror@plt+0xce6c>
  40f860:	stp	x29, x30, [sp, #-160]!
  40f864:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  40f868:	add	x1, x1, #0x138
  40f86c:	mov	x29, sp
  40f870:	stp	x19, x20, [sp, #16]
  40f874:	bl	412400 <ferror@plt+0xfa60>
  40f878:	mov	x19, x0
  40f87c:	cbz	x0, 40f8bc <ferror@plt+0xcf1c>
  40f880:	bl	4024c0 <fileno@plt>
  40f884:	mov	w20, w0
  40f888:	mov	w1, w0
  40f88c:	add	x2, sp, #0x20
  40f890:	mov	w0, #0x0                   	// #0
  40f894:	bl	4028a0 <__fxstat@plt>
  40f898:	cbnz	w0, 40f8ac <ferror@plt+0xcf0c>
  40f89c:	ldr	w0, [sp, #48]
  40f8a0:	and	w0, w0, #0xf000
  40f8a4:	cmp	w0, #0x4, lsl #12
  40f8a8:	b.eq	40f900 <ferror@plt+0xcf60>  // b.none
  40f8ac:	mov	w0, w20
  40f8b0:	mov	w1, #0x1                   	// #1
  40f8b4:	bl	4119a8 <ferror@plt+0xf008>
  40f8b8:	cbnz	w0, 40f8cc <ferror@plt+0xcf2c>
  40f8bc:	mov	x0, x19
  40f8c0:	ldp	x19, x20, [sp, #16]
  40f8c4:	ldp	x29, x30, [sp], #160
  40f8c8:	ret
  40f8cc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40f8d0:	ldr	w20, [x0, #1628]
  40f8d4:	bl	402920 <__errno_location@plt>
  40f8d8:	mov	x1, x0
  40f8dc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f8e0:	mov	w0, w20
  40f8e4:	add	x2, x2, #0x938
  40f8e8:	ldr	w1, [x1]
  40f8ec:	bl	4033d0 <ferror@plt+0xa30>
  40f8f0:	mov	x0, x19
  40f8f4:	ldp	x19, x20, [sp, #16]
  40f8f8:	ldp	x29, x30, [sp], #160
  40f8fc:	ret
  40f900:	mov	x0, x19
  40f904:	bl	4170d0 <ferror@plt+0x14730>
  40f908:	bl	402920 <__errno_location@plt>
  40f90c:	mov	x19, #0x0                   	// #0
  40f910:	mov	w1, #0x15                  	// #21
  40f914:	str	w1, [x0]
  40f918:	b	40f8bc <ferror@plt+0xcf1c>
  40f91c:	nop
  40f920:	stp	x29, x30, [sp, #-32]!
  40f924:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40f928:	add	x1, x1, #0x968
  40f92c:	mov	x29, sp
  40f930:	stp	x19, x20, [sp, #16]
  40f934:	mov	x20, x0
  40f938:	mov	x0, #0x18                  	// #24
  40f93c:	ldrb	w2, [x20]
  40f940:	cmp	w2, #0x0
  40f944:	csel	x20, x1, x20, eq  // eq = none
  40f948:	bl	416968 <ferror@plt+0x13fc8>
  40f94c:	mov	x19, x0
  40f950:	mov	x0, x20
  40f954:	str	xzr, [x19]
  40f958:	bl	402390 <strlen@plt>
  40f95c:	mov	x1, x0
  40f960:	mov	x0, x20
  40f964:	str	w1, [x19, #16]
  40f968:	bl	416b80 <ferror@plt+0x141e0>
  40f96c:	str	x0, [x19, #8]
  40f970:	adrp	x1, 435000 <__progname@@GLIBC_2.17+0x3bc8>
  40f974:	ldr	w0, [x19, #16]
  40f978:	ldr	w2, [x1, #2768]
  40f97c:	cmp	w0, w2
  40f980:	b.le	40f988 <ferror@plt+0xcfe8>
  40f984:	str	w0, [x1, #2768]
  40f988:	add	x1, x1, #0xad0
  40f98c:	ldr	x0, [x1, #8]
  40f990:	cbz	x0, 40f9a8 <ferror@plt+0xd008>
  40f994:	str	x19, [x0]
  40f998:	str	x19, [x1, #8]
  40f99c:	ldp	x19, x20, [sp, #16]
  40f9a0:	ldp	x29, x30, [sp], #32
  40f9a4:	ret
  40f9a8:	str	x19, [x1, #8]
  40f9ac:	str	x19, [x1, #16]
  40f9b0:	ldp	x19, x20, [sp, #16]
  40f9b4:	ldp	x29, x30, [sp], #32
  40f9b8:	ret
  40f9bc:	nop
  40f9c0:	adrp	x1, 435000 <__progname@@GLIBC_2.17+0x3bc8>
  40f9c4:	add	x0, x1, #0xad0
  40f9c8:	str	wzr, [x1, #2768]
  40f9cc:	stp	xzr, xzr, [x0, #8]
  40f9d0:	ret
  40f9d4:	nop
  40f9d8:	stp	x29, x30, [sp, #-64]!
  40f9dc:	mov	x29, sp
  40f9e0:	stp	x21, x22, [sp, #32]
  40f9e4:	adrp	x22, 431000 <_obstack_memory_used@@Base+0x19878>
  40f9e8:	ldr	w0, [x22, #1632]
  40f9ec:	cbz	w0, 40f9fc <ferror@plt+0xd05c>
  40f9f0:	ldp	x21, x22, [sp, #32]
  40f9f4:	ldp	x29, x30, [sp], #64
  40f9f8:	ret
  40f9fc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  40fa00:	add	x0, x0, #0x970
  40fa04:	bl	402930 <getenv@plt>
  40fa08:	cbz	x0, 40f9f0 <ferror@plt+0xd050>
  40fa0c:	stp	x19, x20, [sp, #16]
  40fa10:	str	x23, [sp, #48]
  40fa14:	bl	416b80 <ferror@plt+0x141e0>
  40fa18:	mov	x20, x0
  40fa1c:	ldr	w21, [x22, #1632]
  40fa20:	mov	x23, x0
  40fa24:	mov	w1, #0x3a                  	// #58
  40fa28:	mov	x0, x20
  40fa2c:	add	x22, x22, #0x660
  40fa30:	bl	402810 <strchr@plt>
  40fa34:	mov	x19, x0
  40fa38:	cbz	x0, 40fa6c <ferror@plt+0xd0cc>
  40fa3c:	nop
  40fa40:	strb	wzr, [x19], #1
  40fa44:	mov	x0, x20
  40fa48:	cbnz	w21, 40fa54 <ferror@plt+0xd0b4>
  40fa4c:	bl	40f920 <ferror@plt+0xcf80>
  40fa50:	ldr	w21, [x22]
  40fa54:	mov	x20, x19
  40fa58:	mov	w1, #0x3a                  	// #58
  40fa5c:	mov	x0, x20
  40fa60:	bl	402810 <strchr@plt>
  40fa64:	mov	x19, x0
  40fa68:	cbnz	x0, 40fa40 <ferror@plt+0xd0a0>
  40fa6c:	cbnz	w21, 40fa78 <ferror@plt+0xd0d8>
  40fa70:	mov	x0, x20
  40fa74:	bl	40f920 <ferror@plt+0xcf80>
  40fa78:	mov	x0, x23
  40fa7c:	ldp	x19, x20, [sp, #16]
  40fa80:	ldp	x21, x22, [sp, #32]
  40fa84:	ldr	x23, [sp, #48]
  40fa88:	ldp	x29, x30, [sp], #64
  40fa8c:	b	4027c0 <free@plt>
  40fa90:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  40fa94:	ldr	w1, [x1, #1632]
  40fa98:	cbnz	w1, 40faa0 <ferror@plt+0xd100>
  40fa9c:	b	40f920 <ferror@plt+0xcf80>
  40faa0:	ret
  40faa4:	nop
  40faa8:	stp	x29, x30, [sp, #-80]!
  40faac:	mov	x29, sp
  40fab0:	stp	x21, x22, [sp, #32]
  40fab4:	mov	x22, x0
  40fab8:	stp	x23, x24, [sp, #48]
  40fabc:	mov	x23, x1
  40fac0:	cbz	x1, 40fac8 <ferror@plt+0xd128>
  40fac4:	str	xzr, [x1]
  40fac8:	ldrb	w0, [x22]
  40facc:	cbz	w0, 40fbc8 <ferror@plt+0xd228>
  40fad0:	mov	x0, x22
  40fad4:	bl	40f860 <ferror@plt+0xcec0>
  40fad8:	mov	x24, x0
  40fadc:	cbz	x0, 40fb04 <ferror@plt+0xd164>
  40fae0:	cbz	x23, 40faf0 <ferror@plt+0xd150>
  40fae4:	mov	x0, x22
  40fae8:	bl	416b80 <ferror@plt+0x141e0>
  40faec:	str	x0, [x23]
  40faf0:	mov	x0, x24
  40faf4:	ldp	x21, x22, [sp, #32]
  40faf8:	ldp	x23, x24, [sp, #48]
  40fafc:	ldp	x29, x30, [sp], #80
  40fb00:	ret
  40fb04:	ldrb	w0, [x22]
  40fb08:	cmp	w0, #0x2f
  40fb0c:	b.eq	40faf0 <ferror@plt+0xd150>  // b.none
  40fb10:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40fb14:	ldr	w0, [x0, #1632]
  40fb18:	cbnz	w0, 40faf0 <ferror@plt+0xd150>
  40fb1c:	stp	x19, x20, [sp, #16]
  40fb20:	stp	x25, x26, [sp, #64]
  40fb24:	bl	402920 <__errno_location@plt>
  40fb28:	adrp	x1, 435000 <__progname@@GLIBC_2.17+0x3bc8>
  40fb2c:	ldr	w26, [x0]
  40fb30:	mov	x25, x0
  40fb34:	ldr	x20, [x1, #2784]
  40fb38:	cbnz	x20, 40fb4c <ferror@plt+0xd1ac>
  40fb3c:	b	40fbec <ferror@plt+0xd24c>
  40fb40:	bl	4027c0 <free@plt>
  40fb44:	ldr	x20, [x20]
  40fb48:	cbz	x20, 40fbec <ferror@plt+0xd24c>
  40fb4c:	ldr	x0, [x20, #8]
  40fb50:	mov	x1, x22
  40fb54:	mov	x2, #0x0                   	// #0
  40fb58:	bl	4122e8 <ferror@plt+0xf948>
  40fb5c:	mov	x19, x0
  40fb60:	bl	40f860 <ferror@plt+0xcec0>
  40fb64:	mov	x21, x0
  40fb68:	mov	x0, x19
  40fb6c:	cbz	x21, 40fb40 <ferror@plt+0xd1a0>
  40fb70:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40fb74:	ldr	w0, [x0, #1644]
  40fb78:	tbz	w0, #6, 40fbb0 <ferror@plt+0xd210>
  40fb7c:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  40fb80:	ldr	x0, [x20, #2016]
  40fb84:	cbz	x0, 40fbb0 <ferror@plt+0xd210>
  40fb88:	bl	408bd0 <ferror@plt+0x6230>
  40fb8c:	ldr	x0, [x20, #2016]
  40fb90:	mov	x2, x22
  40fb94:	mov	x3, x19
  40fb98:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  40fb9c:	add	x1, x1, #0x978
  40fba0:	bl	416d88 <ferror@plt+0x143e8>
  40fba4:	ldr	x1, [x20, #2016]
  40fba8:	mov	w0, #0xa                   	// #10
  40fbac:	bl	402430 <putc@plt>
  40fbb0:	cbz	x23, 40fc0c <ferror@plt+0xd26c>
  40fbb4:	mov	x24, x21
  40fbb8:	ldp	x25, x26, [sp, #64]
  40fbbc:	str	x19, [x23]
  40fbc0:	ldp	x19, x20, [sp, #16]
  40fbc4:	b	40faf0 <ferror@plt+0xd150>
  40fbc8:	bl	402920 <__errno_location@plt>
  40fbcc:	mov	x24, #0x0                   	// #0
  40fbd0:	mov	w1, #0x2                   	// #2
  40fbd4:	str	w1, [x0]
  40fbd8:	mov	x0, x24
  40fbdc:	ldp	x21, x22, [sp, #32]
  40fbe0:	ldp	x23, x24, [sp, #48]
  40fbe4:	ldp	x29, x30, [sp], #80
  40fbe8:	ret
  40fbec:	ldp	x19, x20, [sp, #16]
  40fbf0:	str	w26, [x25]
  40fbf4:	mov	x0, x24
  40fbf8:	ldp	x21, x22, [sp, #32]
  40fbfc:	ldp	x23, x24, [sp, #48]
  40fc00:	ldp	x25, x26, [sp, #64]
  40fc04:	ldp	x29, x30, [sp], #80
  40fc08:	ret
  40fc0c:	mov	x0, x19
  40fc10:	mov	x24, x21
  40fc14:	bl	4027c0 <free@plt>
  40fc18:	ldp	x19, x20, [sp, #16]
  40fc1c:	ldp	x25, x26, [sp, #64]
  40fc20:	b	40faf0 <ferror@plt+0xd150>
  40fc24:	nop
  40fc28:	stp	x29, x30, [sp, #-32]!
  40fc2c:	mov	x29, sp
  40fc30:	str	x19, [sp, #16]
  40fc34:	mov	x19, x0
  40fc38:	ldr	x0, [x0, #16]
  40fc3c:	bl	4027c0 <free@plt>
  40fc40:	ldr	w0, [x19, #24]
  40fc44:	cmp	w0, #0x1
  40fc48:	b.eq	40fc5c <ferror@plt+0xd2bc>  // b.none
  40fc4c:	mov	x0, x19
  40fc50:	ldr	x19, [sp, #16]
  40fc54:	ldp	x29, x30, [sp], #32
  40fc58:	b	4027c0 <free@plt>
  40fc5c:	ldr	x0, [x19, #32]
  40fc60:	bl	4027c0 <free@plt>
  40fc64:	mov	x0, x19
  40fc68:	ldr	x19, [sp, #16]
  40fc6c:	ldp	x29, x30, [sp], #32
  40fc70:	b	4027c0 <free@plt>
  40fc74:	nop
  40fc78:	stp	x29, x30, [sp, #-32]!
  40fc7c:	mov	x29, sp
  40fc80:	str	x19, [sp, #16]
  40fc84:	adrp	x19, 431000 <_obstack_memory_used@@Base+0x19878>
  40fc88:	ldr	x1, [x19, #848]
  40fc8c:	cmp	xzr, x1, lsr #61
  40fc90:	cset	x2, ne  // ne = any
  40fc94:	tbnz	x1, #60, 40fcd0 <ferror@plt+0xd330>
  40fc98:	cbnz	x2, 40fcd0 <ferror@plt+0xd330>
  40fc9c:	lsl	x0, x1, #3
  40fca0:	bl	416968 <ferror@plt+0x13fc8>
  40fca4:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40fca8:	ldr	x1, [x19, #848]
  40fcac:	str	x0, [x2, #3480]
  40fcb0:	cbz	x1, 40fcc4 <ferror@plt+0xd324>
  40fcb4:	add	x1, x0, x1, lsl #3
  40fcb8:	str	xzr, [x0], #8
  40fcbc:	cmp	x0, x1
  40fcc0:	b.ne	40fcb8 <ferror@plt+0xd318>  // b.any
  40fcc4:	ldr	x19, [sp, #16]
  40fcc8:	ldp	x29, x30, [sp], #32
  40fccc:	ret
  40fcd0:	bl	416bb0 <ferror@plt+0x14210>
  40fcd4:	nop
  40fcd8:	ldr	w2, [x0, #12]
  40fcdc:	mov	x1, x0
  40fce0:	cmp	w2, #0x0
  40fce4:	b.le	40fcf8 <ferror@plt+0xd358>
  40fce8:	ldrb	w0, [x0, #8]
  40fcec:	orr	w0, w0, #0x10
  40fcf0:	strb	w0, [x1, #8]
  40fcf4:	ret
  40fcf8:	b	40fc28 <ferror@plt+0xd288>
  40fcfc:	nop
  40fd00:	stp	x29, x30, [sp, #-80]!
  40fd04:	mov	x4, x0
  40fd08:	mov	x2, #0x0                   	// #0
  40fd0c:	mov	x29, sp
  40fd10:	stp	x19, x20, [sp, #16]
  40fd14:	stp	x21, x22, [sp, #32]
  40fd18:	mov	x22, x0
  40fd1c:	stp	x23, x24, [sp, #48]
  40fd20:	mov	w23, w1
  40fd24:	str	x25, [sp, #64]
  40fd28:	ldrb	w3, [x4], #1
  40fd2c:	cbz	w3, 40fd40 <ferror@plt+0xd3a0>
  40fd30:	ror	x2, x2, #57
  40fd34:	add	x2, x2, w3, uxtb
  40fd38:	ldrb	w3, [x4], #1
  40fd3c:	cbnz	w3, 40fd30 <ferror@plt+0xd390>
  40fd40:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  40fd44:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  40fd48:	ldr	x0, [x0, #848]
  40fd4c:	ldr	x21, [x1, #3480]
  40fd50:	udiv	x20, x2, x0
  40fd54:	msub	x20, x20, x0, x2
  40fd58:	add	x25, x21, x20, lsl #3
  40fd5c:	ldr	x19, [x21, x20, lsl #3]
  40fd60:	cbz	x19, 410044 <ferror@plt+0xd6a4>
  40fd64:	mov	x24, #0x0                   	// #0
  40fd68:	b	40fd7c <ferror@plt+0xd3dc>
  40fd6c:	ldr	x20, [x19]
  40fd70:	mov	x24, x19
  40fd74:	cbz	x20, 40fec4 <ferror@plt+0xd524>
  40fd78:	mov	x19, x20
  40fd7c:	ldr	x0, [x19, #16]
  40fd80:	mov	x1, x22
  40fd84:	bl	402760 <strcmp@plt>
  40fd88:	mov	w21, w0
  40fd8c:	tbnz	w0, #31, 40fd6c <ferror@plt+0xd3cc>
  40fd90:	cbz	w23, 410024 <ferror@plt+0xd684>
  40fd94:	mov	x20, x19
  40fd98:	cbz	x24, 40fda4 <ferror@plt+0xd404>
  40fd9c:	mov	x19, x24
  40fda0:	mov	x25, x19
  40fda4:	cmp	w23, #0x3
  40fda8:	b.eq	40ff54 <ferror@plt+0xd5b4>  // b.none
  40fdac:	b.hi	40fe24 <ferror@plt+0xd484>  // b.pmore
  40fdb0:	cmp	w23, #0x1
  40fdb4:	b.ne	40feb8 <ferror@plt+0xd518>  // b.any
  40fdb8:	cmp	w21, #0x0
  40fdbc:	ccmp	x20, #0x0, #0x4, eq  // eq = none
  40fdc0:	b.ne	40fee8 <ferror@plt+0xd548>  // b.any
  40fdc4:	mov	x0, #0x28                  	// #40
  40fdc8:	bl	416968 <ferror@plt+0x13fc8>
  40fdcc:	mov	x19, x0
  40fdd0:	mov	x0, x22
  40fdd4:	ldrb	w1, [x19, #8]
  40fdd8:	str	wzr, [x19, #24]
  40fddc:	and	w1, w1, #0xfffffffe
  40fde0:	strb	w1, [x19, #8]
  40fde4:	bl	416b80 <ferror@plt+0x141e0>
  40fde8:	str	x0, [x19, #16]
  40fdec:	ldrb	w1, [x19, #8]
  40fdf0:	str	wzr, [x19, #12]
  40fdf4:	and	w1, w1, #0xffffffe1
  40fdf8:	strb	w1, [x19, #8]
  40fdfc:	ldp	x21, x22, [sp, #32]
  40fe00:	ldr	x0, [x25]
  40fe04:	str	x0, [x19]
  40fe08:	str	x19, [x25]
  40fe0c:	mov	x0, x19
  40fe10:	ldp	x19, x20, [sp, #16]
  40fe14:	ldp	x23, x24, [sp, #48]
  40fe18:	ldr	x25, [sp, #64]
  40fe1c:	ldp	x29, x30, [sp], #80
  40fe20:	ret
  40fe24:	cmp	w23, #0x4
  40fe28:	b.ne	4100ac <ferror@plt+0xd70c>  // b.any
  40fe2c:	cmp	w21, #0x0
  40fe30:	cset	w0, ne  // ne = any
  40fe34:	cmp	x20, #0x0
  40fe38:	csinc	w0, w0, wzr, ne  // ne = any
  40fe3c:	cbnz	w0, 40fec8 <ferror@plt+0xd528>
  40fe40:	ldr	x0, [x20]
  40fe44:	ldrb	w19, [x20, #8]
  40fe48:	and	w19, w19, #0x1
  40fe4c:	cbz	x0, 40fe9c <ferror@plt+0xd4fc>
  40fe50:	ldrb	w1, [x0, #8]
  40fe54:	tst	x1, #0x2
  40fe58:	ccmp	w23, #0x4, #0x0, ne  // ne = any
  40fe5c:	b.ne	40fe9c <ferror@plt+0xd4fc>  // b.any
  40fe60:	and	w1, w1, #0xfffffffd
  40fe64:	bfxil	w1, w19, #0, #1
  40fe68:	mov	w19, #0x0                   	// #0
  40fe6c:	strb	w1, [x0, #8]
  40fe70:	b	40fe9c <ferror@plt+0xd4fc>
  40fe74:	ldrb	w0, [x20, #8]
  40fe78:	orr	w0, w0, #0x10
  40fe7c:	strb	w0, [x20, #8]
  40fe80:	ldr	x20, [x25]
  40fe84:	cbz	x20, 40ffd4 <ferror@plt+0xd634>
  40fe88:	ldrb	w0, [x20, #8]
  40fe8c:	tst	x0, #0x2
  40fe90:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  40fe94:	b.ne	40ffd4 <ferror@plt+0xd634>  // b.any
  40fe98:	ldr	x0, [x20]
  40fe9c:	str	x0, [x25]
  40fea0:	ldr	w0, [x20, #12]
  40fea4:	cmp	w0, #0x0
  40fea8:	b.gt	40fe74 <ferror@plt+0xd4d4>
  40feac:	mov	x0, x20
  40feb0:	bl	40fc28 <ferror@plt+0xd288>
  40feb4:	b	40fe80 <ferror@plt+0xd4e0>
  40feb8:	cmp	w23, #0x2
  40febc:	b.eq	40fe2c <ferror@plt+0xd48c>  // b.none
  40fec0:	b	4100ac <ferror@plt+0xd70c>
  40fec4:	cbnz	w23, 40fda0 <ferror@plt+0xd400>
  40fec8:	mov	x19, #0x0                   	// #0
  40fecc:	mov	x0, x19
  40fed0:	ldp	x19, x20, [sp, #16]
  40fed4:	ldp	x21, x22, [sp, #32]
  40fed8:	ldp	x23, x24, [sp, #48]
  40fedc:	ldr	x25, [sp, #64]
  40fee0:	ldp	x29, x30, [sp], #80
  40fee4:	ret
  40fee8:	ldr	w0, [x20, #12]
  40feec:	mov	x19, x20
  40fef0:	cmp	w0, #0x0
  40fef4:	b.le	40fecc <ferror@plt+0xd52c>
  40fef8:	ldrb	w1, [x20, #8]
  40fefc:	mov	x0, #0x28                  	// #40
  40ff00:	orr	w1, w1, #0x10
  40ff04:	strb	w1, [x20, #8]
  40ff08:	bl	416968 <ferror@plt+0x13fc8>
  40ff0c:	mov	x19, x0
  40ff10:	mov	x0, x22
  40ff14:	str	wzr, [x19, #24]
  40ff18:	ldrb	w1, [x19, #8]
  40ff1c:	ldrb	w2, [x20, #8]
  40ff20:	bfxil	w1, w2, #0, #1
  40ff24:	strb	w1, [x19, #8]
  40ff28:	bl	416b80 <ferror@plt+0x141e0>
  40ff2c:	str	x0, [x19, #16]
  40ff30:	ldrb	w1, [x19, #8]
  40ff34:	str	wzr, [x19, #12]
  40ff38:	and	w1, w1, #0xffffffe1
  40ff3c:	strb	w1, [x19, #8]
  40ff40:	ldr	x0, [x20]
  40ff44:	str	x0, [x19]
  40ff48:	str	xzr, [x20]
  40ff4c:	str	x19, [x25]
  40ff50:	b	40fecc <ferror@plt+0xd52c>
  40ff54:	mov	x0, #0x28                  	// #40
  40ff58:	bl	416968 <ferror@plt+0x13fc8>
  40ff5c:	mov	x19, x0
  40ff60:	mov	x0, x22
  40ff64:	ldrb	w1, [x19, #8]
  40ff68:	str	wzr, [x19, #24]
  40ff6c:	and	w1, w1, #0xfffffffe
  40ff70:	strb	w1, [x19, #8]
  40ff74:	bl	416b80 <ferror@plt+0x141e0>
  40ff78:	str	x0, [x19, #16]
  40ff7c:	ldrb	w1, [x19, #8]
  40ff80:	str	wzr, [x19, #12]
  40ff84:	and	w1, w1, #0xffffffe1
  40ff88:	strb	w1, [x19, #8]
  40ff8c:	ldr	x0, [x25]
  40ff90:	str	x0, [x19]
  40ff94:	str	x19, [x25]
  40ff98:	cbnz	w21, 40fecc <ferror@plt+0xd52c>
  40ff9c:	ldr	x1, [x19]
  40ffa0:	ldp	x21, x22, [sp, #32]
  40ffa4:	ldrb	w0, [x1, #8]
  40ffa8:	ldp	x23, x24, [sp, #48]
  40ffac:	orr	w0, w0, #0x2
  40ffb0:	strb	w0, [x1, #8]
  40ffb4:	ldr	x25, [sp, #64]
  40ffb8:	ldrb	w1, [x19, #8]
  40ffbc:	bfxil	w1, w0, #0, #1
  40ffc0:	strb	w1, [x19, #8]
  40ffc4:	mov	x0, x19
  40ffc8:	ldp	x19, x20, [sp, #16]
  40ffcc:	ldp	x29, x30, [sp], #80
  40ffd0:	ret
  40ffd4:	cbz	w19, 40fec8 <ferror@plt+0xd528>
  40ffd8:	mov	x0, #0x28                  	// #40
  40ffdc:	bl	416968 <ferror@plt+0x13fc8>
  40ffe0:	mov	x20, x0
  40ffe4:	mov	x0, x22
  40ffe8:	mov	x19, #0x0                   	// #0
  40ffec:	ldrb	w1, [x20, #8]
  40fff0:	str	wzr, [x20, #24]
  40fff4:	orr	w1, w1, #0x1
  40fff8:	strb	w1, [x20, #8]
  40fffc:	bl	416b80 <ferror@plt+0x141e0>
  410000:	str	x0, [x20, #16]
  410004:	ldrb	w1, [x20, #8]
  410008:	str	wzr, [x20, #12]
  41000c:	and	w1, w1, #0xffffffe1
  410010:	strb	w1, [x20, #8]
  410014:	ldr	x0, [x25]
  410018:	str	x0, [x20]
  41001c:	str	x20, [x25]
  410020:	b	40fecc <ferror@plt+0xd52c>
  410024:	cbnz	w0, 40fec8 <ferror@plt+0xd528>
  410028:	mov	x0, x19
  41002c:	ldp	x19, x20, [sp, #16]
  410030:	ldp	x21, x22, [sp, #32]
  410034:	ldp	x23, x24, [sp, #48]
  410038:	ldr	x25, [sp, #64]
  41003c:	ldp	x29, x30, [sp], #80
  410040:	ret
  410044:	cbz	w23, 40fec8 <ferror@plt+0xd528>
  410048:	cmp	w23, #0x2
  41004c:	b.eq	40fec8 <ferror@plt+0xd528>  // b.none
  410050:	b.ls	4100c8 <ferror@plt+0xd728>  // b.plast
  410054:	cmp	w23, #0x3
  410058:	b.ne	4100a4 <ferror@plt+0xd704>  // b.any
  41005c:	mov	x0, #0x28                  	// #40
  410060:	bl	416968 <ferror@plt+0x13fc8>
  410064:	mov	x19, x0
  410068:	mov	x0, x22
  41006c:	ldrb	w1, [x19, #8]
  410070:	str	wzr, [x19, #24]
  410074:	and	w1, w1, #0xfffffffe
  410078:	strb	w1, [x19, #8]
  41007c:	bl	416b80 <ferror@plt+0x141e0>
  410080:	str	x0, [x19, #16]
  410084:	ldrb	w1, [x19, #8]
  410088:	str	wzr, [x19, #12]
  41008c:	and	w1, w1, #0xffffffe1
  410090:	strb	w1, [x19, #8]
  410094:	ldr	x0, [x21, x20, lsl #3]
  410098:	str	x0, [x19]
  41009c:	str	x19, [x21, x20, lsl #3]
  4100a0:	b	40fecc <ferror@plt+0xd52c>
  4100a4:	cmp	w23, #0x4
  4100a8:	b.eq	40fec8 <ferror@plt+0xd528>  // b.none
  4100ac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4100b0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  4100b4:	add	x2, x2, #0x998
  4100b8:	mov	w1, #0x0                   	// #0
  4100bc:	ldr	w0, [x0, #1628]
  4100c0:	bl	4033d0 <ferror@plt+0xa30>
  4100c4:	bl	4026d0 <abort@plt>
  4100c8:	cmp	w23, #0x1
  4100cc:	b.eq	40fdc4 <ferror@plt+0xd424>  // b.none
  4100d0:	b	4100ac <ferror@plt+0xd70c>
  4100d4:	nop
  4100d8:	stp	x29, x30, [sp, #-64]!
  4100dc:	mov	x29, sp
  4100e0:	stp	x23, x24, [sp, #48]
  4100e4:	adrp	x23, 431000 <_obstack_memory_used@@Base+0x19878>
  4100e8:	stp	x19, x20, [sp, #16]
  4100ec:	mov	x20, x0
  4100f0:	ldr	x0, [x23, #848]
  4100f4:	cbz	x0, 410148 <ferror@plt+0xd7a8>
  4100f8:	adrp	x24, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4100fc:	add	x23, x23, #0x350
  410100:	add	x24, x24, #0xd98
  410104:	stp	x21, x22, [sp, #32]
  410108:	mov	x21, x1
  41010c:	mov	x22, #0x0                   	// #0
  410110:	ldr	x0, [x24]
  410114:	ldr	x19, [x0, x22, lsl #3]
  410118:	cbz	x19, 410134 <ferror@plt+0xd794>
  41011c:	nop
  410120:	mov	x0, x19
  410124:	mov	x1, x21
  410128:	ldr	x19, [x19]
  41012c:	blr	x20
  410130:	cbnz	x19, 410120 <ferror@plt+0xd780>
  410134:	ldr	x0, [x23]
  410138:	add	x22, x22, #0x1
  41013c:	cmp	x0, x22
  410140:	b.hi	410110 <ferror@plt+0xd770>  // b.pmore
  410144:	ldp	x21, x22, [sp, #32]
  410148:	ldp	x19, x20, [sp, #16]
  41014c:	ldp	x23, x24, [sp, #48]
  410150:	ldp	x29, x30, [sp], #64
  410154:	ret
  410158:	ldr	x0, [x0, #32]
  41015c:	ret
  410160:	stp	x29, x30, [sp, #-48]!
  410164:	mov	x29, sp
  410168:	stp	x19, x20, [sp, #16]
  41016c:	ldr	x19, [x0, #24]
  410170:	ldr	x20, [x0, #8]
  410174:	cbz	x19, 4101a8 <ferror@plt+0xd808>
  410178:	str	x21, [sp, #32]
  41017c:	mov	x21, x1
  410180:	mov	x1, x21
  410184:	ldr	x0, [x19, #32]
  410188:	cbz	x20, 4101b8 <ferror@plt+0xd818>
  41018c:	blr	x20
  410190:	cmp	w0, #0x0
  410194:	b.lt	4101d8 <ferror@plt+0xd838>  // b.tstop
  410198:	b.eq	4101c4 <ferror@plt+0xd824>  // b.none
  41019c:	ldr	x19, [x19]
  4101a0:	cbnz	x19, 410180 <ferror@plt+0xd7e0>
  4101a4:	ldr	x21, [sp, #32]
  4101a8:	mov	w0, #0x0                   	// #0
  4101ac:	ldp	x19, x20, [sp, #16]
  4101b0:	ldp	x29, x30, [sp], #48
  4101b4:	ret
  4101b8:	cmp	x0, x21
  4101bc:	b.hi	41019c <ferror@plt+0xd7fc>  // b.pmore
  4101c0:	b.cc	4101d8 <ferror@plt+0xd838>  // b.lo, b.ul, b.last
  4101c4:	mov	w0, #0x1                   	// #1
  4101c8:	ldp	x19, x20, [sp, #16]
  4101cc:	ldr	x21, [sp, #32]
  4101d0:	ldp	x29, x30, [sp], #48
  4101d4:	ret
  4101d8:	ldr	x19, [x19, #8]
  4101dc:	cbnz	x19, 410180 <ferror@plt+0xd7e0>
  4101e0:	b	4101a4 <ferror@plt+0xd804>
  4101e4:	nop
  4101e8:	stp	x29, x30, [sp, #-64]!
  4101ec:	mov	x29, sp
  4101f0:	stp	x19, x20, [sp, #16]
  4101f4:	ldr	x19, [x0, #24]
  4101f8:	cbz	x19, 410284 <ferror@plt+0xd8e4>
  4101fc:	stp	x21, x22, [sp, #32]
  410200:	mov	x22, x1
  410204:	stp	x23, x24, [sp, #48]
  410208:	mov	x23, x2
  41020c:	mov	x24, x3
  410210:	b	41021c <ferror@plt+0xd87c>
  410214:	ldr	x19, [x19, #8]
  410218:	cbz	x19, 41027c <ferror@plt+0xd8dc>
  41021c:	ldr	x0, [x19, #32]
  410220:	mov	x1, x23
  410224:	blr	x22
  410228:	ands	w20, w0, #0xff
  41022c:	b.eq	410214 <ferror@plt+0xd874>  // b.none
  410230:	ldr	x21, [x19]
  410234:	nop
  410238:	cbz	x21, 41025c <ferror@plt+0xd8bc>
  41023c:	ldr	x0, [x21, #32]
  410240:	mov	x1, x23
  410244:	blr	x22
  410248:	tst	w0, #0xff
  41024c:	ldp	x0, x1, [x21]
  410250:	b.ne	410298 <ferror@plt+0xd8f8>  // b.any
  410254:	mov	x21, x1
  410258:	cbnz	x21, 41023c <ferror@plt+0xd89c>
  41025c:	ldr	x0, [x19, #32]
  410260:	ldp	x21, x22, [sp, #32]
  410264:	str	x0, [x24]
  410268:	mov	w0, w20
  41026c:	ldp	x19, x20, [sp, #16]
  410270:	ldp	x23, x24, [sp, #48]
  410274:	ldp	x29, x30, [sp], #64
  410278:	ret
  41027c:	ldp	x21, x22, [sp, #32]
  410280:	ldp	x23, x24, [sp, #48]
  410284:	mov	w20, #0x0                   	// #0
  410288:	mov	w0, w20
  41028c:	ldp	x19, x20, [sp, #16]
  410290:	ldp	x29, x30, [sp], #64
  410294:	ret
  410298:	mov	x19, x21
  41029c:	mov	x21, x0
  4102a0:	b	410238 <ferror@plt+0xd898>
  4102a4:	nop
  4102a8:	ldr	x1, [x0, #24]
  4102ac:	mov	x2, #0x0                   	// #0
  4102b0:	ldr	x3, [x0]
  4102b4:	cbz	x1, 4102c4 <ferror@plt+0xd924>
  4102b8:	mov	x2, x1
  4102bc:	ldr	x1, [x1]
  4102c0:	cbnz	x1, 4102b8 <ferror@plt+0xd918>
  4102c4:	stp	x3, x0, [x8]
  4102c8:	stp	x2, xzr, [x8, #24]
  4102cc:	ret
  4102d0:	mov	x3, x0
  4102d4:	ldp	x2, x0, [x0, #24]
  4102d8:	cmp	x2, x0
  4102dc:	b.eq	41032c <ferror@plt+0xd98c>  // b.none
  4102e0:	ldr	x0, [x2, #32]
  4102e4:	str	x0, [x1]
  4102e8:	ldr	x1, [x2, #8]
  4102ec:	cbz	x1, 410314 <ferror@plt+0xd974>
  4102f0:	mov	x2, x1
  4102f4:	ldr	x1, [x1]
  4102f8:	cbnz	x1, 4102f0 <ferror@plt+0xd950>
  4102fc:	mov	w0, #0x1                   	// #1
  410300:	str	x2, [x3, #24]
  410304:	ret
  410308:	ldr	x1, [x2, #8]
  41030c:	cmp	x1, x0
  410310:	b.ne	4102fc <ferror@plt+0xd95c>  // b.any
  410314:	mov	x0, x2
  410318:	ldr	x2, [x2, #16]
  41031c:	cbnz	x2, 410308 <ferror@plt+0xd968>
  410320:	mov	w0, #0x1                   	// #1
  410324:	str	x2, [x3, #24]
  410328:	b	410304 <ferror@plt+0xd964>
  41032c:	mov	w0, #0x0                   	// #0
  410330:	ret
  410334:	nop
  410338:	ret
  41033c:	nop
  410340:	stp	x29, x30, [sp, #-64]!
  410344:	mov	x29, sp
  410348:	stp	x19, x20, [sp, #16]
  41034c:	mov	x19, x0
  410350:	ldr	x0, [x0]
  410354:	stp	x21, x22, [sp, #32]
  410358:	mov	x22, x1
  41035c:	str	x23, [sp, #48]
  410360:	mov	x21, x2
  410364:	cbz	x0, 4103e4 <ferror@plt+0xda44>
  410368:	mov	x1, x19
  41036c:	bl	410340 <ferror@plt+0xd9a0>
  410370:	mov	w20, w0
  410374:	mov	w23, w0
  410378:	ldr	x0, [x19, #8]
  41037c:	cbz	x0, 4103f4 <ferror@plt+0xda54>
  410380:	mov	x2, x21
  410384:	mov	x1, x19
  410388:	bl	410340 <ferror@plt+0xd9a0>
  41038c:	mov	w2, w0
  410390:	ldr	x1, [x19, #16]
  410394:	sub	w2, w2, w23
  410398:	cmp	x1, x22
  41039c:	b.ne	410400 <ferror@plt+0xda60>  // b.any
  4103a0:	add	w1, w2, #0x1
  4103a4:	cmp	w1, #0x2
  4103a8:	b.hi	410400 <ferror@plt+0xda60>  // b.pmore
  4103ac:	ldr	w1, [x19, #24]
  4103b0:	cmp	w1, w2
  4103b4:	b.ne	410400 <ferror@plt+0xda60>  // b.any
  4103b8:	ldr	x1, [x21]
  4103bc:	cmp	w20, w0
  4103c0:	csel	w0, w20, w0, cs  // cs = hs, nlast
  4103c4:	add	x1, x1, #0x1
  4103c8:	add	w0, w0, #0x1
  4103cc:	ldp	x19, x20, [sp, #16]
  4103d0:	ldr	x23, [sp, #48]
  4103d4:	str	x1, [x21]
  4103d8:	ldp	x21, x22, [sp, #32]
  4103dc:	ldp	x29, x30, [sp], #64
  4103e0:	ret
  4103e4:	ldr	x0, [x19, #8]
  4103e8:	mov	w23, #0x0                   	// #0
  4103ec:	mov	w20, #0x0                   	// #0
  4103f0:	cbnz	x0, 410380 <ferror@plt+0xd9e0>
  4103f4:	mov	w2, #0x0                   	// #0
  4103f8:	mov	w0, #0x0                   	// #0
  4103fc:	b	410390 <ferror@plt+0xd9f0>
  410400:	bl	4026d0 <abort@plt>
  410404:	nop
  410408:	add	x0, x0, #0x18
  41040c:	mov	w9, #0x1                   	// #1
  410410:	ldp	x6, x5, [x3]
  410414:	ldr	w4, [x3, #24]
  410418:	cbz	x6, 4104d4 <ferror@plt+0xdb34>
  41041c:	cmp	x1, x5
  410420:	neg	w7, w2
  410424:	sub	w1, w4, w2
  410428:	b.eq	4104e4 <ferror@plt+0xdb44>  // b.none
  41042c:	str	w1, [x3, #24]
  410430:	cmp	w7, w4
  410434:	b.eq	410458 <ferror@plt+0xdab8>  // b.none
  410438:	tbnz	w2, #31, 4104f0 <ferror@plt+0xdb50>
  41043c:	cmp	w1, #0x0
  410440:	mov	x1, x3
  410444:	cset	w2, ne  // ne = any
  410448:	cbz	w2, 410624 <ferror@plt+0xdc84>
  41044c:	ldr	x3, [x1, #16]
  410450:	cbnz	x3, 410410 <ferror@plt+0xda70>
  410454:	ret
  410458:	ldr	x7, [x3, #16]
  41045c:	mov	x8, x0
  410460:	cbz	x7, 410484 <ferror@plt+0xdae4>
  410464:	ldr	x1, [x7]
  410468:	mov	x8, x7
  41046c:	cmp	x1, x3
  410470:	b.eq	410484 <ferror@plt+0xdae4>  // b.none
  410474:	ldr	x1, [x7, #8]
  410478:	cmp	x1, x3
  41047c:	b.ne	410628 <ferror@plt+0xdc88>  // b.any
  410480:	add	x8, x7, #0x8
  410484:	tbnz	w4, #31, 410500 <ferror@plt+0xdb60>
  410488:	ldr	w4, [x5, #24]
  41048c:	ldr	x1, [x5]
  410490:	tbnz	w4, #31, 410570 <ferror@plt+0xdbd0>
  410494:	str	x1, [x3, #8]
  410498:	str	x3, [x5]
  41049c:	str	x7, [x5, #16]
  4104a0:	str	x5, [x3, #16]
  4104a4:	cbz	x1, 4104ac <ferror@plt+0xdb0c>
  4104a8:	str	x3, [x1, #16]
  4104ac:	sub	w1, w4, #0x1
  4104b0:	str	w1, [x5, #24]
  4104b4:	sub	w4, w9, w4
  4104b8:	str	w4, [x3, #24]
  4104bc:	str	x5, [x8]
  4104c0:	tbnz	w2, #31, 410614 <ferror@plt+0xdc74>
  4104c4:	ldr	w2, [x5, #24]
  4104c8:	mov	x1, x5
  4104cc:	neg	w2, w2
  4104d0:	b	410448 <ferror@plt+0xdaa8>
  4104d4:	cbnz	x5, 41041c <ferror@plt+0xda7c>
  4104d8:	neg	w7, w4
  4104dc:	mov	w1, #0x0                   	// #0
  4104e0:	b	41042c <ferror@plt+0xda8c>
  4104e4:	add	w1, w2, w4
  4104e8:	mov	w7, w2
  4104ec:	b	41042c <ferror@plt+0xda8c>
  4104f0:	cbz	w4, 410454 <ferror@plt+0xdab4>
  4104f4:	mov	x1, x3
  4104f8:	mov	w2, #0xffffffff            	// #-1
  4104fc:	b	41044c <ferror@plt+0xdaac>
  410500:	ldr	w4, [x6, #24]
  410504:	ldr	x1, [x6, #8]
  410508:	cmp	w4, #0x0
  41050c:	b.le	4105cc <ferror@plt+0xdc2c>
  410510:	ldr	x5, [x1]
  410514:	str	x5, [x6, #8]
  410518:	ldr	x4, [x1, #8]
  41051c:	str	x4, [x3]
  410520:	stp	x6, x3, [x1]
  410524:	str	x7, [x1, #16]
  410528:	cbz	x5, 410530 <ferror@plt+0xdb90>
  41052c:	str	x6, [x5, #16]
  410530:	cbz	x4, 410538 <ferror@plt+0xdb98>
  410534:	str	x3, [x4, #16]
  410538:	ldr	w4, [x1, #24]
  41053c:	str	x1, [x6, #16]
  410540:	cmp	w4, #0x0
  410544:	str	x1, [x3, #16]
  410548:	csetm	w4, gt
  41054c:	str	w4, [x6, #24]
  410550:	ldr	w4, [x1, #24]
  410554:	lsr	w4, w4, #31
  410558:	str	w4, [x3, #24]
  41055c:	str	wzr, [x1, #24]
  410560:	str	x1, [x8]
  410564:	tbz	w2, #31, 410454 <ferror@plt+0xdab4>
  410568:	mov	w2, #0xffffffff            	// #-1
  41056c:	b	41044c <ferror@plt+0xdaac>
  410570:	ldr	x6, [x1]
  410574:	str	x6, [x3, #8]
  410578:	ldr	x4, [x1, #8]
  41057c:	str	x4, [x5]
  410580:	stp	x3, x5, [x1]
  410584:	str	x7, [x1, #16]
  410588:	cbz	x6, 410590 <ferror@plt+0xdbf0>
  41058c:	str	x3, [x6, #16]
  410590:	cbz	x4, 410598 <ferror@plt+0xdbf8>
  410594:	str	x5, [x4, #16]
  410598:	ldr	w4, [x1, #24]
  41059c:	str	x1, [x3, #16]
  4105a0:	cmp	w4, #0x0
  4105a4:	str	x1, [x5, #16]
  4105a8:	csetm	w4, gt
  4105ac:	str	w4, [x3, #24]
  4105b0:	ldr	w3, [x1, #24]
  4105b4:	lsr	w3, w3, #31
  4105b8:	str	w3, [x5, #24]
  4105bc:	str	wzr, [x1, #24]
  4105c0:	str	x1, [x8]
  4105c4:	tbnz	w2, #31, 410568 <ferror@plt+0xdbc8>
  4105c8:	ret
  4105cc:	str	x1, [x3]
  4105d0:	stp	x3, x7, [x6, #8]
  4105d4:	str	x6, [x3, #16]
  4105d8:	cbz	x1, 4105e0 <ferror@plt+0xdc40>
  4105dc:	str	x3, [x1, #16]
  4105e0:	add	w1, w4, #0x1
  4105e4:	str	w1, [x6, #24]
  4105e8:	mvn	w4, w4
  4105ec:	str	w4, [x3, #24]
  4105f0:	str	x6, [x8]
  4105f4:	tbnz	w2, #31, 410604 <ferror@plt+0xdc64>
  4105f8:	ldr	w2, [x6, #24]
  4105fc:	mov	x1, x6
  410600:	b	410448 <ferror@plt+0xdaa8>
  410604:	ldr	w2, [x6, #24]
  410608:	mov	x1, x6
  41060c:	sub	w2, w2, #0x1
  410610:	b	410448 <ferror@plt+0xdaa8>
  410614:	ldr	w2, [x5, #24]
  410618:	mov	x1, x5
  41061c:	mvn	w2, w2
  410620:	b	410448 <ferror@plt+0xdaa8>
  410624:	ret
  410628:	stp	x29, x30, [sp, #-16]!
  41062c:	mov	x29, sp
  410630:	bl	4026d0 <abort@plt>
  410634:	nop
  410638:	sub	sp, sp, #0x570
  41063c:	stp	x29, x30, [sp]
  410640:	mov	x29, sp
  410644:	ldr	x1, [x0, #24]
  410648:	stp	x21, x22, [sp, #32]
  41064c:	add	x22, sp, #0x40
  410650:	mov	x21, x0
  410654:	stp	x19, x20, [sp, #16]
  410658:	mov	x19, x22
  41065c:	str	x23, [sp, #48]
  410660:	mov	w23, #0x1                   	// #1
  410664:	cbz	x1, 41067c <ferror@plt+0xdcdc>
  410668:	str	x1, [x19]
  41066c:	add	x19, x19, #0x10
  410670:	ldr	x1, [x1]
  410674:	sturb	wzr, [x19, #-8]
  410678:	cbnz	x1, 410668 <ferror@plt+0xdcc8>
  41067c:	cmp	x19, x22
  410680:	b.ne	4106a8 <ferror@plt+0xdd08>  // b.any
  410684:	b	4106c8 <ferror@plt+0xdd28>
  410688:	ldr	x1, [x21, #16]
  41068c:	cbz	x1, 410698 <ferror@plt+0xdcf8>
  410690:	ldr	x0, [x20, #32]
  410694:	blr	x1
  410698:	mov	x0, x20
  41069c:	bl	4027c0 <free@plt>
  4106a0:	cmp	x19, x22
  4106a4:	b.eq	4106c8 <ferror@plt+0xdd28>  // b.none
  4106a8:	mov	x0, x19
  4106ac:	ldr	x20, [x19, #-16]!
  4106b0:	ldrb	w1, [x19, #8]
  4106b4:	cbnz	w1, 410688 <ferror@plt+0xdce8>
  4106b8:	strb	w23, [x19, #8]
  4106bc:	mov	x19, x0
  4106c0:	ldr	x1, [x20, #8]
  4106c4:	b	410664 <ferror@plt+0xdcc4>
  4106c8:	mov	x0, x21
  4106cc:	ldp	x29, x30, [sp]
  4106d0:	ldp	x19, x20, [sp, #16]
  4106d4:	ldp	x21, x22, [sp, #32]
  4106d8:	ldr	x23, [sp, #48]
  4106dc:	add	sp, sp, #0x570
  4106e0:	b	4027c0 <free@plt>
  4106e4:	nop
  4106e8:	stp	x29, x30, [sp, #-48]!
  4106ec:	mov	x29, sp
  4106f0:	stp	x19, x20, [sp, #16]
  4106f4:	ldr	x19, [x0, #24]
  4106f8:	stp	x21, x22, [sp, #32]
  4106fc:	mov	x22, x0
  410700:	mov	x21, x1
  410704:	cbz	x19, 41085c <ferror@plt+0xdebc>
  410708:	ldr	x20, [x0, #8]
  41070c:	mov	x1, x21
  410710:	ldr	x0, [x19, #32]
  410714:	cbz	x20, 410740 <ferror@plt+0xdda0>
  410718:	blr	x20
  41071c:	cmp	w0, #0x0
  410720:	b.lt	41074c <ferror@plt+0xddac>  // b.tstop
  410724:	b.eq	4107c8 <ferror@plt+0xde28>  // b.none
  410728:	ldr	x2, [x19]
  41072c:	cbz	x2, 4107dc <ferror@plt+0xde3c>
  410730:	mov	x19, x2
  410734:	mov	x1, x21
  410738:	ldr	x0, [x19, #32]
  41073c:	cbnz	x20, 410718 <ferror@plt+0xdd78>
  410740:	cmp	x21, x0
  410744:	b.cc	410728 <ferror@plt+0xdd88>  // b.lo, b.ul, b.last
  410748:	b.ls	4107c8 <ferror@plt+0xde28>  // b.plast
  41074c:	ldr	x2, [x19, #8]
  410750:	cbnz	x2, 410730 <ferror@plt+0xdd90>
  410754:	mov	x0, #0x28                  	// #40
  410758:	bl	402530 <malloc@plt>
  41075c:	cbz	x0, 41089c <ferror@plt+0xdefc>
  410760:	stp	xzr, xzr, [x0]
  410764:	ldr	x1, [x19, #8]
  410768:	str	wzr, [x0, #24]
  41076c:	str	x21, [x0, #32]
  410770:	cbz	x1, 41080c <ferror@plt+0xde6c>
  410774:	nop
  410778:	mov	x19, x1
  41077c:	ldr	x1, [x1]
  410780:	cbnz	x1, 410778 <ferror@plt+0xddd8>
  410784:	ldr	w1, [x19, #24]
  410788:	ldr	x2, [x19, #8]
  41078c:	sub	w1, w1, #0x1
  410790:	str	x0, [x19]
  410794:	str	w1, [x19, #24]
  410798:	cmp	x2, #0x0
  41079c:	str	x19, [x0, #16]
  4107a0:	cset	w2, eq  // eq = none
  4107a4:	cbnz	w2, 410830 <ferror@plt+0xde90>
  4107a8:	ldr	x1, [x22, #32]
  4107ac:	mov	w0, #0x1                   	// #1
  4107b0:	add	x1, x1, #0x1
  4107b4:	str	x1, [x22, #32]
  4107b8:	ldp	x19, x20, [sp, #16]
  4107bc:	ldp	x21, x22, [sp, #32]
  4107c0:	ldp	x29, x30, [sp], #48
  4107c4:	ret
  4107c8:	mov	w0, #0x0                   	// #0
  4107cc:	ldp	x19, x20, [sp, #16]
  4107d0:	ldp	x21, x22, [sp, #32]
  4107d4:	ldp	x29, x30, [sp], #48
  4107d8:	ret
  4107dc:	mov	x0, #0x28                  	// #40
  4107e0:	bl	402530 <malloc@plt>
  4107e4:	cbz	x0, 41089c <ferror@plt+0xdefc>
  4107e8:	stp	xzr, xzr, [x0]
  4107ec:	ldr	x1, [x19]
  4107f0:	str	wzr, [x0, #24]
  4107f4:	str	x21, [x0, #32]
  4107f8:	cbz	x1, 410784 <ferror@plt+0xdde4>
  4107fc:	nop
  410800:	mov	x19, x1
  410804:	ldr	x1, [x1, #8]
  410808:	cbnz	x1, 410800 <ferror@plt+0xde60>
  41080c:	ldr	w1, [x19, #24]
  410810:	ldr	x2, [x19]
  410814:	add	w1, w1, #0x1
  410818:	str	x0, [x19, #8]
  41081c:	str	w1, [x19, #24]
  410820:	cmp	x2, #0x0
  410824:	str	x19, [x0, #16]
  410828:	cset	w2, eq  // eq = none
  41082c:	cbz	w2, 4107a8 <ferror@plt+0xde08>
  410830:	ldr	x3, [x19, #16]
  410834:	cbz	x3, 4107a8 <ferror@plt+0xde08>
  410838:	mov	x1, x19
  41083c:	mov	x0, x22
  410840:	mov	w2, #0x1                   	// #1
  410844:	bl	410408 <ferror@plt+0xda68>
  410848:	ldr	x1, [x22, #32]
  41084c:	mov	w0, #0x1                   	// #1
  410850:	add	x1, x1, #0x1
  410854:	str	x1, [x22, #32]
  410858:	b	4107b8 <ferror@plt+0xde18>
  41085c:	mov	x0, #0x28                  	// #40
  410860:	bl	402530 <malloc@plt>
  410864:	mov	x1, x0
  410868:	cbz	x0, 41089c <ferror@plt+0xdefc>
  41086c:	ldr	x2, [x22, #32]
  410870:	stp	xzr, xzr, [x1]
  410874:	mov	w0, #0x1                   	// #1
  410878:	add	x2, x2, #0x1
  41087c:	str	xzr, [x1, #16]
  410880:	stp	x1, x2, [x22, #24]
  410884:	str	wzr, [x1, #24]
  410888:	str	x21, [x1, #32]
  41088c:	ldp	x19, x20, [sp, #16]
  410890:	ldp	x21, x22, [sp, #32]
  410894:	ldp	x29, x30, [sp], #48
  410898:	ret
  41089c:	mov	w0, #0xffffffff            	// #-1
  4108a0:	b	4107cc <ferror@plt+0xde2c>
  4108a4:	nop
  4108a8:	stp	x29, x30, [sp, #-48]!
  4108ac:	mov	x29, sp
  4108b0:	stp	x19, x20, [sp, #16]
  4108b4:	mov	x20, x1
  4108b8:	mov	x19, x2
  4108bc:	str	x21, [sp, #32]
  4108c0:	mov	x21, x0
  4108c4:	mov	x0, #0x28                  	// #40
  4108c8:	bl	402530 <malloc@plt>
  4108cc:	cbz	x0, 4108dc <ferror@plt+0xdf3c>
  4108d0:	stp	x21, x20, [x0]
  4108d4:	stp	x19, xzr, [x0, #16]
  4108d8:	str	xzr, [x0, #32]
  4108dc:	ldp	x19, x20, [sp, #16]
  4108e0:	ldr	x21, [sp, #32]
  4108e4:	ldp	x29, x30, [sp], #48
  4108e8:	ret
  4108ec:	nop
  4108f0:	stp	x29, x30, [sp, #-48]!
  4108f4:	mov	x29, sp
  4108f8:	stp	x19, x20, [sp, #16]
  4108fc:	mov	x20, x0
  410900:	ldr	x19, [x0, #24]
  410904:	stp	x21, x22, [sp, #32]
  410908:	mov	x21, x1
  41090c:	ldr	x22, [x0, #8]
  410910:	cbz	x19, 41093c <ferror@plt+0xdf9c>
  410914:	nop
  410918:	mov	x1, x21
  41091c:	ldr	x0, [x19, #32]
  410920:	cbz	x22, 410950 <ferror@plt+0xdfb0>
  410924:	blr	x22
  410928:	cmp	w0, #0x0
  41092c:	b.lt	410a20 <ferror@plt+0xe080>  // b.tstop
  410930:	b.eq	41095c <ferror@plt+0xdfbc>  // b.none
  410934:	ldr	x19, [x19]
  410938:	cbnz	x19, 410918 <ferror@plt+0xdf78>
  41093c:	mov	w0, #0x0                   	// #0
  410940:	ldp	x19, x20, [sp, #16]
  410944:	ldp	x21, x22, [sp, #32]
  410948:	ldp	x29, x30, [sp], #48
  41094c:	ret
  410950:	cmp	x21, x0
  410954:	b.cc	410934 <ferror@plt+0xdf94>  // b.lo, b.ul, b.last
  410958:	b.hi	410a20 <ferror@plt+0xe080>  // b.pmore
  41095c:	ldr	x4, [x19]
  410960:	ldr	x3, [x19, #16]
  410964:	cbz	x4, 410a2c <ferror@plt+0xe08c>
  410968:	ldr	x5, [x19, #8]
  41096c:	mov	x0, x4
  410970:	cbz	x5, 410a58 <ferror@plt+0xe0b8>
  410974:	nop
  410978:	mov	x2, x0
  41097c:	ldr	x0, [x0, #8]
  410980:	cbnz	x0, 410978 <ferror@plt+0xdfd8>
  410984:	ldr	x0, [x2, #16]
  410988:	ldr	x1, [x2]
  41098c:	cmp	x0, x19
  410990:	b.eq	4109ac <ferror@plt+0xe00c>  // b.none
  410994:	cbz	x1, 41099c <ferror@plt+0xdffc>
  410998:	str	x0, [x1, #16]
  41099c:	str	x1, [x0, #8]
  4109a0:	ldr	x5, [x19, #8]
  4109a4:	str	x4, [x2]
  4109a8:	str	x2, [x4, #16]
  4109ac:	ldr	w4, [x19, #24]
  4109b0:	str	x5, [x2, #8]
  4109b4:	str	x2, [x5, #16]
  4109b8:	str	x3, [x2, #16]
  4109bc:	str	w4, [x2, #24]
  4109c0:	cbz	x3, 410a50 <ferror@plt+0xe0b0>
  4109c4:	ldr	x4, [x3]
  4109c8:	cmp	x4, x19
  4109cc:	b.eq	410a84 <ferror@plt+0xe0e4>  // b.none
  4109d0:	str	x2, [x3, #8]
  4109d4:	cmp	x0, x19
  4109d8:	csel	x3, x0, x2, ne  // ne = any
  4109dc:	mov	x0, x20
  4109e0:	mov	w2, #0xffffffff            	// #-1
  4109e4:	bl	410408 <ferror@plt+0xda68>
  4109e8:	ldr	x0, [x20, #32]
  4109ec:	ldr	x1, [x20, #16]
  4109f0:	sub	x0, x0, #0x1
  4109f4:	str	x0, [x20, #32]
  4109f8:	cbz	x1, 410a04 <ferror@plt+0xe064>
  4109fc:	ldr	x0, [x19, #32]
  410a00:	blr	x1
  410a04:	mov	x0, x19
  410a08:	bl	4027c0 <free@plt>
  410a0c:	mov	w0, #0x1                   	// #1
  410a10:	ldp	x19, x20, [sp, #16]
  410a14:	ldp	x21, x22, [sp, #32]
  410a18:	ldp	x29, x30, [sp], #48
  410a1c:	ret
  410a20:	ldr	x19, [x19, #8]
  410a24:	cbnz	x19, 410918 <ferror@plt+0xdf78>
  410a28:	b	41093c <ferror@plt+0xdf9c>
  410a2c:	ldr	x1, [x19, #8]
  410a30:	cbz	x1, 410a38 <ferror@plt+0xe098>
  410a34:	str	x3, [x1, #16]
  410a38:	cbz	x3, 410a8c <ferror@plt+0xe0ec>
  410a3c:	ldr	x0, [x3]
  410a40:	cmp	x0, x19
  410a44:	b.eq	410a9c <ferror@plt+0xe0fc>  // b.none
  410a48:	str	x1, [x3, #8]
  410a4c:	b	4109dc <ferror@plt+0xe03c>
  410a50:	str	x2, [x20, #24]
  410a54:	b	4109d4 <ferror@plt+0xe034>
  410a58:	str	x3, [x4, #16]
  410a5c:	cbz	x3, 410a94 <ferror@plt+0xe0f4>
  410a60:	ldr	x0, [x3]
  410a64:	cmp	x0, x19
  410a68:	b.eq	410aa4 <ferror@plt+0xe104>  // b.none
  410a6c:	str	x4, [x3, #8]
  410a70:	mov	x1, x4
  410a74:	mov	x0, x20
  410a78:	mov	w2, #0xffffffff            	// #-1
  410a7c:	bl	410408 <ferror@plt+0xda68>
  410a80:	b	4109e8 <ferror@plt+0xe048>
  410a84:	str	x2, [x3]
  410a88:	b	4109d4 <ferror@plt+0xe034>
  410a8c:	str	x1, [x20, #24]
  410a90:	b	4109e8 <ferror@plt+0xe048>
  410a94:	str	x4, [x20, #24]
  410a98:	b	4109e8 <ferror@plt+0xe048>
  410a9c:	str	x1, [x3]
  410aa0:	b	4109dc <ferror@plt+0xe03c>
  410aa4:	str	x4, [x3]
  410aa8:	b	410a70 <ferror@plt+0xe0d0>
  410aac:	nop
  410ab0:	stp	x29, x30, [sp, #-48]!
  410ab4:	mov	x1, #0x0                   	// #0
  410ab8:	mov	x29, sp
  410abc:	str	x19, [sp, #16]
  410ac0:	mov	x19, x0
  410ac4:	ldr	x0, [x0, #24]
  410ac8:	str	xzr, [sp, #40]
  410acc:	cbz	x0, 410adc <ferror@plt+0xe13c>
  410ad0:	add	x2, sp, #0x28
  410ad4:	bl	410340 <ferror@plt+0xd9a0>
  410ad8:	ldr	x1, [sp, #40]
  410adc:	ldr	x0, [x19, #32]
  410ae0:	cmp	x0, x1
  410ae4:	b.ne	410af4 <ferror@plt+0xe154>  // b.any
  410ae8:	ldr	x19, [sp, #16]
  410aec:	ldp	x29, x30, [sp], #48
  410af0:	ret
  410af4:	bl	4026d0 <abort@plt>
  410af8:	ret
  410afc:	nop
  410b00:	stp	x29, x30, [sp, #-32]!
  410b04:	adrp	x1, 435000 <__progname@@GLIBC_2.17+0x3bc8>
  410b08:	mov	w0, #0x0                   	// #0
  410b0c:	mov	x29, sp
  410b10:	stp	x19, x20, [sp, #16]
  410b14:	add	x20, x1, #0xaf0
  410b18:	ldr	x1, [x1, #2800]
  410b1c:	blr	x1
  410b20:	bl	4124c8 <ferror@plt+0xfb28>
  410b24:	mov	x19, x0
  410b28:	bl	402390 <strlen@plt>
  410b2c:	mov	x2, x0
  410b30:	mov	x1, x19
  410b34:	mov	w0, #0x2                   	// #2
  410b38:	ldr	x19, [x20, #8]
  410b3c:	bl	4026a0 <write@plt>
  410b40:	adrp	x1, 417000 <ferror@plt+0x14660>
  410b44:	add	x1, x1, #0xcf8
  410b48:	mov	x2, #0x2                   	// #2
  410b4c:	mov	w0, w2
  410b50:	bl	4026a0 <write@plt>
  410b54:	mov	x0, x19
  410b58:	bl	402390 <strlen@plt>
  410b5c:	mov	x1, x19
  410b60:	mov	x2, x0
  410b64:	mov	w0, #0x2                   	// #2
  410b68:	bl	4026a0 <write@plt>
  410b6c:	mov	x2, #0x1                   	// #1
  410b70:	adrp	x1, 417000 <ferror@plt+0x14660>
  410b74:	mov	w0, #0x2                   	// #2
  410b78:	add	x1, x1, #0xfe8
  410b7c:	bl	4026a0 <write@plt>
  410b80:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  410b84:	ldr	w0, [x0, #860]
  410b88:	bl	402370 <_exit@plt>
  410b8c:	nop
  410b90:	stp	x29, x30, [sp, #-208]!
  410b94:	adrp	x2, 435000 <__progname@@GLIBC_2.17+0x3bc8>
  410b98:	add	x2, x2, #0xb10
  410b9c:	mov	x3, #0x4000                	// #16384
  410ba0:	mov	x29, sp
  410ba4:	mov	x1, #0x0                   	// #0
  410ba8:	str	x19, [sp, #16]
  410bac:	mov	x19, x0
  410bb0:	add	x0, sp, #0x20
  410bb4:	str	x2, [sp, #32]
  410bb8:	str	wzr, [sp, #40]
  410bbc:	str	x3, [sp, #48]
  410bc0:	bl	402360 <sigaltstack@plt>
  410bc4:	cbnz	w0, 410c2c <ferror@plt+0xe28c>
  410bc8:	adrp	x3, 435000 <__progname@@GLIBC_2.17+0x3bc8>
  410bcc:	cmp	x19, #0x0
  410bd0:	add	x2, x3, #0xaf0
  410bd4:	adrp	x1, 410000 <ferror@plt+0xd660>
  410bd8:	add	x1, x1, #0xaf8
  410bdc:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  410be0:	csel	x19, x1, x19, eq  // eq = none
  410be4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  410be8:	add	x1, x1, #0xa30
  410bec:	str	x19, [x3, #2800]
  410bf0:	add	x0, x0, #0xa20
  410bf4:	str	x0, [x2, #16]
  410bf8:	add	x0, sp, #0x40
  410bfc:	str	x1, [x2, #8]
  410c00:	bl	402570 <sigemptyset@plt>
  410c04:	adrp	x3, 410000 <ferror@plt+0xd660>
  410c08:	mov	w4, #0x4                   	// #4
  410c0c:	add	x3, x3, #0xb00
  410c10:	movk	w4, #0xc800, lsl #16
  410c14:	add	x1, sp, #0x38
  410c18:	mov	x2, #0x0                   	// #0
  410c1c:	mov	w0, #0xb                   	// #11
  410c20:	str	x3, [sp, #56]
  410c24:	str	w4, [sp, #192]
  410c28:	bl	402670 <sigaction@plt>
  410c2c:	ldr	x19, [sp, #16]
  410c30:	ldp	x29, x30, [sp], #208
  410c34:	ret
  410c38:	ldrb	w1, [x0]
  410c3c:	mov	x2, x0
  410c40:	mov	x0, #0x0                   	// #0
  410c44:	cbz	w1, 410c58 <ferror@plt+0xe2b8>
  410c48:	ror	x0, x0, #55
  410c4c:	add	x0, x0, w1, uxtb
  410c50:	ldrb	w1, [x2, #1]!
  410c54:	cbnz	w1, 410c48 <ferror@plt+0xe2a8>
  410c58:	ret
  410c5c:	nop
  410c60:	stp	x29, x30, [sp, #-16]!
  410c64:	mov	x29, sp
  410c68:	bl	402760 <strcmp@plt>
  410c6c:	cmp	w0, #0x0
  410c70:	cset	w0, eq  // eq = none
  410c74:	ldp	x29, x30, [sp], #16
  410c78:	ret
  410c7c:	nop
  410c80:	stp	x29, x30, [sp, #-176]!
  410c84:	mov	x29, sp
  410c88:	stp	x19, x20, [sp, #16]
  410c8c:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  410c90:	ldr	x0, [x20, #2832]
  410c94:	cbz	x0, 410d04 <ferror@plt+0xe364>
  410c98:	ldr	x1, [x0]
  410c9c:	add	x8, sp, #0x78
  410ca0:	ldr	x1, [x1, #160]
  410ca4:	blr	x1
  410ca8:	ldp	x0, x1, [sp, #120]
  410cac:	stp	x0, x1, [sp, #64]
  410cb0:	ldp	x0, x1, [sp, #136]
  410cb4:	stp	x0, x1, [sp, #80]
  410cb8:	ldp	x0, x1, [sp, #152]
  410cbc:	stp	x0, x1, [sp, #96]
  410cc0:	ldr	x0, [sp, #168]
  410cc4:	str	x0, [sp, #112]
  410cc8:	b	410cd4 <ferror@plt+0xe334>
  410ccc:	ldr	w0, [sp, #120]
  410cd0:	bl	402660 <close@plt>
  410cd4:	ldr	x3, [sp, #64]
  410cd8:	add	x1, sp, #0x78
  410cdc:	add	x0, sp, #0x40
  410ce0:	mov	x2, #0x0                   	// #0
  410ce4:	ldr	x3, [x3, #176]
  410ce8:	blr	x3
  410cec:	tst	w0, #0xff
  410cf0:	b.ne	410ccc <ferror@plt+0xe32c>  // b.any
  410cf4:	ldr	x1, [sp, #64]
  410cf8:	add	x0, sp, #0x40
  410cfc:	ldr	x1, [x1, #184]
  410d00:	blr	x1
  410d04:	add	x20, x20, #0xb10
  410d08:	ldr	x0, [x20, #16]
  410d0c:	cbz	x0, 410e34 <ferror@plt+0xe494>
  410d10:	mov	x19, #0x0                   	// #0
  410d14:	str	x21, [sp, #32]
  410d18:	b	410d2c <ferror@plt+0xe38c>
  410d1c:	ldr	x0, [x20, #16]
  410d20:	add	x19, x19, #0x1
  410d24:	cmp	x0, x19
  410d28:	b.ls	410e30 <ferror@plt+0xe490>  // b.plast
  410d2c:	ldr	x0, [x20, #8]
  410d30:	ldr	x21, [x0, x19, lsl #3]
  410d34:	cbz	x21, 410d1c <ferror@plt+0xe37c>
  410d38:	ldr	x0, [x21, #24]
  410d3c:	add	x8, sp, #0x78
  410d40:	ldr	x1, [x0]
  410d44:	ldr	x1, [x1, #160]
  410d48:	blr	x1
  410d4c:	ldp	x0, x1, [sp, #120]
  410d50:	stp	x0, x1, [sp, #64]
  410d54:	ldp	x0, x1, [sp, #136]
  410d58:	stp	x0, x1, [sp, #80]
  410d5c:	ldp	x0, x1, [sp, #152]
  410d60:	stp	x0, x1, [sp, #96]
  410d64:	ldr	x0, [sp, #168]
  410d68:	str	x0, [sp, #112]
  410d6c:	b	410d78 <ferror@plt+0xe3d8>
  410d70:	ldr	x0, [sp, #56]
  410d74:	bl	402960 <unlink@plt>
  410d78:	ldr	x3, [sp, #64]
  410d7c:	add	x1, sp, #0x38
  410d80:	add	x0, sp, #0x40
  410d84:	mov	x2, #0x0                   	// #0
  410d88:	ldr	x3, [x3, #176]
  410d8c:	blr	x3
  410d90:	tst	w0, #0xff
  410d94:	b.ne	410d70 <ferror@plt+0xe3d0>  // b.any
  410d98:	ldr	x1, [sp, #64]
  410d9c:	add	x0, sp, #0x40
  410da0:	ldr	x1, [x1, #184]
  410da4:	blr	x1
  410da8:	ldr	x0, [x21, #16]
  410dac:	add	x8, sp, #0x78
  410db0:	ldr	x1, [x0]
  410db4:	ldr	x1, [x1, #160]
  410db8:	blr	x1
  410dbc:	ldp	x0, x1, [sp, #120]
  410dc0:	stp	x0, x1, [sp, #64]
  410dc4:	ldp	x0, x1, [sp, #136]
  410dc8:	stp	x0, x1, [sp, #80]
  410dcc:	ldp	x0, x1, [sp, #152]
  410dd0:	stp	x0, x1, [sp, #96]
  410dd4:	ldr	x0, [sp, #168]
  410dd8:	str	x0, [sp, #112]
  410ddc:	b	410de8 <ferror@plt+0xe448>
  410de0:	ldr	x0, [sp, #56]
  410de4:	bl	402780 <rmdir@plt>
  410de8:	ldr	x3, [sp, #64]
  410dec:	add	x1, sp, #0x38
  410df0:	add	x0, sp, #0x40
  410df4:	mov	x2, #0x0                   	// #0
  410df8:	ldr	x3, [x3, #176]
  410dfc:	blr	x3
  410e00:	tst	w0, #0xff
  410e04:	b.ne	410de0 <ferror@plt+0xe440>  // b.any
  410e08:	ldr	x1, [sp, #64]
  410e0c:	add	x0, sp, #0x40
  410e10:	add	x19, x19, #0x1
  410e14:	ldr	x1, [x1, #184]
  410e18:	blr	x1
  410e1c:	ldr	x0, [x21]
  410e20:	bl	402780 <rmdir@plt>
  410e24:	ldr	x0, [x20, #16]
  410e28:	cmp	x0, x19
  410e2c:	b.hi	410d2c <ferror@plt+0xe38c>  // b.pmore
  410e30:	ldr	x21, [sp, #32]
  410e34:	ldp	x19, x20, [sp, #16]
  410e38:	ldp	x29, x30, [sp], #176
  410e3c:	ret
  410e40:	stp	x29, x30, [sp, #-32]!
  410e44:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  410e48:	mov	x29, sp
  410e4c:	stp	x19, x20, [sp, #16]
  410e50:	ldr	x19, [x1, #2832]
  410e54:	cbz	x19, 410eac <ferror@plt+0xe50c>
  410e58:	ldr	x1, [x19]
  410e5c:	mov	w20, w0
  410e60:	mov	x0, x19
  410e64:	ldr	x1, [x1, #16]
  410e68:	blr	x1
  410e6c:	mov	x2, x0
  410e70:	ldr	x4, [x19]
  410e74:	mov	x1, #0x0                   	// #0
  410e78:	sxtw	x3, w20
  410e7c:	mov	x0, x19
  410e80:	ldr	x4, [x4, #72]
  410e84:	blr	x4
  410e88:	mov	x1, x0
  410e8c:	cbz	x0, 410eac <ferror@plt+0xe50c>
  410e90:	ldr	x2, [x19]
  410e94:	mov	x0, x19
  410e98:	ldp	x19, x20, [sp, #16]
  410e9c:	ldp	x29, x30, [sp], #32
  410ea0:	ldr	x2, [x2, #128]
  410ea4:	mov	x16, x2
  410ea8:	br	x16
  410eac:	bl	4026d0 <abort@plt>
  410eb0:	stp	x29, x30, [sp, #-32]!
  410eb4:	mov	x29, sp
  410eb8:	str	x19, [sp, #16]
  410ebc:	mov	x19, x0
  410ec0:	bl	402920 <__errno_location@plt>
  410ec4:	ldr	w1, [x0]
  410ec8:	mov	w0, #0x0                   	// #0
  410ecc:	cmp	w1, #0x2
  410ed0:	b.ne	410ee0 <ferror@plt+0xe540>  // b.any
  410ed4:	ldr	x19, [sp, #16]
  410ed8:	ldp	x29, x30, [sp], #32
  410edc:	ret
  410ee0:	mov	w0, #0x0                   	// #0
  410ee4:	mov	x3, x19
  410ee8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  410eec:	add	x2, x2, #0xa40
  410ef0:	bl	4023e0 <error@plt>
  410ef4:	mov	w0, #0xffffffff            	// #-1
  410ef8:	b	410ed4 <ferror@plt+0xe534>
  410efc:	nop
  410f00:	stp	x29, x30, [sp, #-32]!
  410f04:	mov	x29, sp
  410f08:	stp	x19, x20, [sp, #16]
  410f0c:	mov	x20, x0
  410f10:	mov	x19, x1
  410f14:	mov	x0, x1
  410f18:	bl	402780 <rmdir@plt>
  410f1c:	tbnz	w0, #31, 410f34 <ferror@plt+0xe594>
  410f20:	mov	w20, #0x0                   	// #0
  410f24:	mov	w0, w20
  410f28:	ldp	x19, x20, [sp, #16]
  410f2c:	ldp	x29, x30, [sp], #32
  410f30:	ret
  410f34:	ldrb	w0, [x20]
  410f38:	mov	w20, #0x0                   	// #0
  410f3c:	cbz	w0, 410f24 <ferror@plt+0xe584>
  410f40:	bl	402920 <__errno_location@plt>
  410f44:	ldr	w1, [x0]
  410f48:	cmp	w1, #0x2
  410f4c:	b.eq	410f24 <ferror@plt+0xe584>  // b.none
  410f50:	mov	x3, x19
  410f54:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  410f58:	mov	w0, #0x0                   	// #0
  410f5c:	add	x2, x2, #0xa60
  410f60:	mov	w20, #0xffffffff            	// #-1
  410f64:	bl	4023e0 <error@plt>
  410f68:	b	410f24 <ferror@plt+0xe584>
  410f6c:	nop
  410f70:	stp	x29, x30, [sp, #-32]!
  410f74:	mov	x29, sp
  410f78:	stp	x19, x20, [sp, #16]
  410f7c:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  410f80:	mov	w19, w0
  410f84:	ldr	x0, [x20, #2832]
  410f88:	cbz	x0, 410fb0 <ferror@plt+0xe610>
  410f8c:	ldr	x0, [x20, #2832]
  410f90:	sxtw	x1, w19
  410f94:	ldr	x2, [x0]
  410f98:	ldr	x2, [x2, #88]
  410f9c:	blr	x2
  410fa0:	cbz	x0, 410fdc <ferror@plt+0xe63c>
  410fa4:	ldp	x19, x20, [sp, #16]
  410fa8:	ldp	x29, x30, [sp], #32
  410fac:	ret
  410fb0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  410fb4:	mov	w4, #0x0                   	// #0
  410fb8:	add	x0, x1, #0x290
  410fbc:	mov	x3, #0x0                   	// #0
  410fc0:	ldr	x5, [x1, #656]
  410fc4:	mov	x2, #0x0                   	// #0
  410fc8:	mov	x1, #0x0                   	// #0
  410fcc:	blr	x5
  410fd0:	cbz	x0, 410fdc <ferror@plt+0xe63c>
  410fd4:	str	x0, [x20, #2832]
  410fd8:	b	410f8c <ferror@plt+0xe5ec>
  410fdc:	bl	416bb0 <ferror@plt+0x14210>
  410fe0:	stp	x29, x30, [sp, #-80]!
  410fe4:	mov	x29, sp
  410fe8:	stp	x19, x20, [sp, #16]
  410fec:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  410ff0:	add	x19, x19, #0xb10
  410ff4:	stp	x21, x22, [sp, #32]
  410ff8:	mov	x21, x0
  410ffc:	mov	x20, x1
  411000:	ldr	x0, [x19, #16]
  411004:	stp	x23, x24, [sp, #48]
  411008:	and	w22, w2, #0xff
  41100c:	stp	x25, x26, [sp, #64]
  411010:	cbz	x0, 411134 <ferror@plt+0xe794>
  411014:	mov	x2, #0x0                   	// #0
  411018:	b	41102c <ferror@plt+0xe68c>
  41101c:	ldr	x3, [x3, #8]
  411020:	add	x2, x2, #0x1
  411024:	cmp	x3, x2
  411028:	b.ls	411134 <ferror@plt+0xe794>  // b.plast
  41102c:	ldr	x4, [x19, #8]
  411030:	add	x3, x19, #0x8
  411034:	lsl	x0, x2, #3
  411038:	ldr	x4, [x4, x2, lsl #3]
  41103c:	cbnz	x4, 41101c <ferror@plt+0xe67c>
  411040:	ldr	x24, [x3]
  411044:	adds	x24, x24, x0
  411048:	b.eq	411134 <ferror@plt+0xe794>  // b.none
  41104c:	mov	x0, #0x20                  	// #32
  411050:	bl	416968 <ferror@plt+0x13fc8>
  411054:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  411058:	mov	x19, x0
  41105c:	strb	w22, [x0, #8]
  411060:	add	x26, x1, #0x290
  411064:	ldr	x25, [x1, #656]
  411068:	str	xzr, [x19]
  41106c:	adrp	x23, 410000 <ferror@plt+0xd660>
  411070:	adrp	x22, 410000 <ferror@plt+0xd660>
  411074:	add	x23, x23, #0xc38
  411078:	add	x22, x22, #0xc60
  41107c:	mov	x0, x26
  411080:	mov	x2, x23
  411084:	mov	x1, x22
  411088:	mov	w4, #0x0                   	// #0
  41108c:	mov	x3, #0x0                   	// #0
  411090:	blr	x25
  411094:	cbz	x0, 411240 <ferror@plt+0xe8a0>
  411098:	str	x0, [x19, #16]
  41109c:	mov	x2, x23
  4110a0:	mov	x1, x22
  4110a4:	mov	x0, x26
  4110a8:	mov	w4, #0x0                   	// #0
  4110ac:	mov	x3, #0x0                   	// #0
  4110b0:	blr	x25
  4110b4:	cbz	x0, 411240 <ferror@plt+0xe8a0>
  4110b8:	str	x0, [x19, #24]
  4110bc:	mov	x0, #0x1000                	// #4096
  4110c0:	bl	416be0 <ferror@plt+0x14240>
  4110c4:	cmp	x20, #0x0
  4110c8:	mov	x2, x20
  4110cc:	mov	x3, x21
  4110d0:	cset	w4, eq  // eq = none
  4110d4:	mov	x20, x0
  4110d8:	mov	x1, #0x1000                	// #4096
  4110dc:	bl	415d68 <ferror@plt+0x133c8>
  4110e0:	cbnz	w0, 411164 <ferror@plt+0xe7c4>
  4110e4:	bl	412278 <ferror@plt+0xf8d8>
  4110e8:	mov	x0, x20
  4110ec:	bl	4026b0 <mkdtemp@plt>
  4110f0:	mov	x21, x0
  4110f4:	cbz	x0, 411208 <ferror@plt+0xe868>
  4110f8:	str	x0, [x19]
  4110fc:	str	x19, [x24]
  411100:	bl	4122b0 <ferror@plt+0xf910>
  411104:	mov	x0, x21
  411108:	bl	416b80 <ferror@plt+0x141e0>
  41110c:	str	x0, [x19]
  411110:	mov	x0, x20
  411114:	bl	413a88 <ferror@plt+0x110e8>
  411118:	mov	x0, x19
  41111c:	ldp	x19, x20, [sp, #16]
  411120:	ldp	x21, x22, [sp, #32]
  411124:	ldp	x23, x24, [sp, #48]
  411128:	ldp	x25, x26, [sp, #64]
  41112c:	ldp	x29, x30, [sp], #80
  411130:	ret
  411134:	ldr	x23, [x19, #16]
  411138:	ldr	x0, [x19, #24]
  41113c:	cmp	x23, x0
  411140:	b.eq	4111a8 <ferror@plt+0xe808>  // b.none
  411144:	ldr	x0, [x19, #8]
  411148:	ldr	x24, [x19, #16]
  41114c:	str	xzr, [x0, x24, lsl #3]
  411150:	add	x24, x0, x24, lsl #3
  411154:	ldr	x0, [x19, #16]
  411158:	add	x0, x0, #0x1
  41115c:	str	x0, [x19, #16]
  411160:	b	41104c <ferror@plt+0xe6ac>
  411164:	bl	402920 <__errno_location@plt>
  411168:	mov	x1, x0
  41116c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  411170:	mov	w0, #0x0                   	// #0
  411174:	add	x2, x2, #0xa88
  411178:	ldr	w1, [x1]
  41117c:	bl	4023e0 <error@plt>
  411180:	mov	x0, x20
  411184:	mov	x19, #0x0                   	// #0
  411188:	bl	413a88 <ferror@plt+0x110e8>
  41118c:	mov	x0, x19
  411190:	ldp	x19, x20, [sp, #16]
  411194:	ldp	x21, x22, [sp, #32]
  411198:	ldp	x23, x24, [sp, #48]
  41119c:	ldp	x25, x26, [sp, #64]
  4111a0:	ldp	x29, x30, [sp], #80
  4111a4:	ret
  4111a8:	lsl	x24, x23, #1
  4111ac:	add	x24, x24, #0x1
  4111b0:	ldr	x26, [x19, #8]
  4111b4:	cmp	xzr, x24, lsr #61
  4111b8:	cset	x1, ne  // ne = any
  4111bc:	lsl	x0, x24, #3
  4111c0:	tbnz	x24, #60, 411240 <ferror@plt+0xe8a0>
  4111c4:	cbnz	x1, 411240 <ferror@plt+0xe8a0>
  4111c8:	bl	416968 <ferror@plt+0x13fc8>
  4111cc:	mov	x25, x0
  4111d0:	cbz	x23, 411230 <ferror@plt+0xe890>
  4111d4:	add	x23, x26, x23, lsl #3
  4111d8:	mov	x1, x26
  4111dc:	mov	x2, x0
  4111e0:	ldr	x3, [x1], #8
  4111e4:	str	x3, [x2], #8
  4111e8:	cmp	x1, x23
  4111ec:	b.ne	4111e0 <ferror@plt+0xe840>  // b.any
  4111f0:	str	x25, [x19, #8]
  4111f4:	str	x24, [x19, #24]
  4111f8:	cbz	x26, 411144 <ferror@plt+0xe7a4>
  4111fc:	mov	x0, x26
  411200:	bl	4027c0 <free@plt>
  411204:	b	411144 <ferror@plt+0xe7a4>
  411208:	bl	4122b0 <ferror@plt+0xf910>
  41120c:	bl	402920 <__errno_location@plt>
  411210:	mov	x1, x0
  411214:	mov	x3, x20
  411218:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  41121c:	mov	w0, #0x0                   	// #0
  411220:	add	x2, x2, #0xac0
  411224:	ldr	w1, [x1]
  411228:	bl	4023e0 <error@plt>
  41122c:	b	411180 <ferror@plt+0xe7e0>
  411230:	adrp	x0, 410000 <ferror@plt+0xd660>
  411234:	add	x0, x0, #0xc80
  411238:	bl	4120f0 <ferror@plt+0xf750>
  41123c:	b	4111f0 <ferror@plt+0xe850>
  411240:	bl	416bb0 <ferror@plt+0x14210>
  411244:	nop
  411248:	stp	x29, x30, [sp, #-48]!
  41124c:	mov	x29, sp
  411250:	stp	x19, x20, [sp, #16]
  411254:	mov	x20, x1
  411258:	ldr	x19, [x0, #24]
  41125c:	ldr	x1, [x19]
  411260:	ldr	x1, [x1, #16]
  411264:	str	x21, [sp, #32]
  411268:	mov	x21, x0
  41126c:	mov	x0, x19
  411270:	blr	x1
  411274:	mov	x2, x0
  411278:	ldr	x4, [x19]
  41127c:	mov	x0, x19
  411280:	mov	x3, x20
  411284:	mov	x1, #0x0                   	// #0
  411288:	ldr	x4, [x4, #72]
  41128c:	blr	x4
  411290:	cbz	x0, 4112a4 <ferror@plt+0xe904>
  411294:	ldp	x19, x20, [sp, #16]
  411298:	ldr	x21, [sp, #32]
  41129c:	ldp	x29, x30, [sp], #48
  4112a0:	ret
  4112a4:	ldr	x19, [x21, #24]
  4112a8:	mov	x0, x20
  4112ac:	bl	416b80 <ferror@plt+0x141e0>
  4112b0:	mov	x1, x0
  4112b4:	mov	x0, x19
  4112b8:	ldr	x2, [x19]
  4112bc:	ldr	x2, [x2, #88]
  4112c0:	blr	x2
  4112c4:	cbnz	x0, 411294 <ferror@plt+0xe8f4>
  4112c8:	bl	416bb0 <ferror@plt+0x14210>
  4112cc:	nop
  4112d0:	stp	x29, x30, [sp, #-48]!
  4112d4:	mov	x29, sp
  4112d8:	stp	x19, x20, [sp, #16]
  4112dc:	mov	x20, x1
  4112e0:	ldr	x19, [x0, #24]
  4112e4:	mov	x0, x19
  4112e8:	ldr	x1, [x19]
  4112ec:	ldr	x1, [x1, #16]
  4112f0:	blr	x1
  4112f4:	mov	x2, x0
  4112f8:	ldr	x4, [x19]
  4112fc:	mov	x3, x20
  411300:	mov	x0, x19
  411304:	mov	x1, #0x0                   	// #0
  411308:	ldr	x4, [x4, #72]
  41130c:	blr	x4
  411310:	cbz	x0, 41135c <ferror@plt+0xe9bc>
  411314:	ldr	x2, [x19]
  411318:	mov	x20, x0
  41131c:	mov	x1, x0
  411320:	mov	x0, x19
  411324:	ldr	x2, [x2, #24]
  411328:	str	x21, [sp, #32]
  41132c:	blr	x2
  411330:	mov	x21, x0
  411334:	ldr	x2, [x19]
  411338:	mov	x1, x20
  41133c:	mov	x0, x19
  411340:	ldr	x2, [x2, #128]
  411344:	blr	x2
  411348:	mov	x0, x21
  41134c:	ldp	x19, x20, [sp, #16]
  411350:	ldr	x21, [sp, #32]
  411354:	ldp	x29, x30, [sp], #48
  411358:	b	4027c0 <free@plt>
  41135c:	ldp	x19, x20, [sp, #16]
  411360:	ldp	x29, x30, [sp], #48
  411364:	ret
  411368:	stp	x29, x30, [sp, #-48]!
  41136c:	mov	x29, sp
  411370:	stp	x19, x20, [sp, #16]
  411374:	mov	x20, x1
  411378:	ldr	x19, [x0, #16]
  41137c:	ldr	x1, [x19]
  411380:	ldr	x1, [x1, #16]
  411384:	str	x21, [sp, #32]
  411388:	mov	x21, x0
  41138c:	mov	x0, x19
  411390:	blr	x1
  411394:	mov	x2, x0
  411398:	ldr	x4, [x19]
  41139c:	mov	x0, x19
  4113a0:	mov	x3, x20
  4113a4:	mov	x1, #0x0                   	// #0
  4113a8:	ldr	x4, [x4, #72]
  4113ac:	blr	x4
  4113b0:	cbz	x0, 4113c4 <ferror@plt+0xea24>
  4113b4:	ldp	x19, x20, [sp, #16]
  4113b8:	ldr	x21, [sp, #32]
  4113bc:	ldp	x29, x30, [sp], #48
  4113c0:	ret
  4113c4:	ldr	x19, [x21, #16]
  4113c8:	mov	x0, x20
  4113cc:	bl	416b80 <ferror@plt+0x141e0>
  4113d0:	mov	x1, x0
  4113d4:	mov	x0, x19
  4113d8:	ldr	x2, [x19]
  4113dc:	ldr	x2, [x2, #88]
  4113e0:	blr	x2
  4113e4:	cbnz	x0, 4113b4 <ferror@plt+0xea14>
  4113e8:	bl	416bb0 <ferror@plt+0x14210>
  4113ec:	nop
  4113f0:	stp	x29, x30, [sp, #-48]!
  4113f4:	mov	x29, sp
  4113f8:	stp	x19, x20, [sp, #16]
  4113fc:	mov	x20, x1
  411400:	ldr	x19, [x0, #16]
  411404:	mov	x0, x19
  411408:	ldr	x1, [x19]
  41140c:	ldr	x1, [x1, #16]
  411410:	blr	x1
  411414:	mov	x2, x0
  411418:	ldr	x4, [x19]
  41141c:	mov	x3, x20
  411420:	mov	x0, x19
  411424:	mov	x1, #0x0                   	// #0
  411428:	ldr	x4, [x4, #72]
  41142c:	blr	x4
  411430:	cbz	x0, 41147c <ferror@plt+0xeadc>
  411434:	ldr	x2, [x19]
  411438:	mov	x20, x0
  41143c:	mov	x1, x0
  411440:	mov	x0, x19
  411444:	ldr	x2, [x2, #24]
  411448:	str	x21, [sp, #32]
  41144c:	blr	x2
  411450:	mov	x21, x0
  411454:	ldr	x2, [x19]
  411458:	mov	x1, x20
  41145c:	mov	x0, x19
  411460:	ldr	x2, [x2, #128]
  411464:	blr	x2
  411468:	mov	x0, x21
  41146c:	ldp	x19, x20, [sp, #16]
  411470:	ldr	x21, [sp, #32]
  411474:	ldp	x29, x30, [sp], #48
  411478:	b	4027c0 <free@plt>
  41147c:	ldp	x19, x20, [sp, #16]
  411480:	ldp	x29, x30, [sp], #48
  411484:	ret
  411488:	stp	x29, x30, [sp, #-48]!
  41148c:	mov	x29, sp
  411490:	stp	x19, x20, [sp, #16]
  411494:	mov	x19, x1
  411498:	mov	x20, x0
  41149c:	mov	x0, x1
  4114a0:	str	x21, [sp, #32]
  4114a4:	mov	w21, #0x0                   	// #0
  4114a8:	bl	402960 <unlink@plt>
  4114ac:	tbnz	w0, #31, 4114d0 <ferror@plt+0xeb30>
  4114b0:	mov	x1, x19
  4114b4:	mov	x0, x20
  4114b8:	bl	4112d0 <ferror@plt+0xe930>
  4114bc:	mov	w0, w21
  4114c0:	ldp	x19, x20, [sp, #16]
  4114c4:	ldr	x21, [sp, #32]
  4114c8:	ldp	x29, x30, [sp], #48
  4114cc:	ret
  4114d0:	ldrb	w0, [x20, #8]
  4114d4:	mov	w21, #0x0                   	// #0
  4114d8:	cbz	w0, 4114b0 <ferror@plt+0xeb10>
  4114dc:	mov	x0, x19
  4114e0:	bl	410eb0 <ferror@plt+0xe510>
  4114e4:	mov	x1, x19
  4114e8:	mov	w21, w0
  4114ec:	mov	x0, x20
  4114f0:	bl	4112d0 <ferror@plt+0xe930>
  4114f4:	mov	w0, w21
  4114f8:	ldp	x19, x20, [sp, #16]
  4114fc:	ldr	x21, [sp, #32]
  411500:	ldp	x29, x30, [sp], #48
  411504:	ret
  411508:	stp	x29, x30, [sp, #-32]!
  41150c:	mov	x29, sp
  411510:	stp	x19, x20, [sp, #16]
  411514:	mov	x19, x0
  411518:	mov	x20, x1
  41151c:	add	x0, x0, #0x8
  411520:	bl	410f00 <ferror@plt+0xe560>
  411524:	mov	w2, w0
  411528:	mov	x1, x20
  41152c:	mov	x0, x19
  411530:	mov	w19, w2
  411534:	bl	4113f0 <ferror@plt+0xea50>
  411538:	mov	w0, w19
  41153c:	ldp	x19, x20, [sp, #16]
  411540:	ldp	x29, x30, [sp], #32
  411544:	ret
  411548:	stp	x29, x30, [sp, #-192]!
  41154c:	mov	x29, sp
  411550:	stp	x21, x22, [sp, #32]
  411554:	add	x8, sp, #0x88
  411558:	ldr	x21, [x0, #24]
  41155c:	stp	x19, x20, [sp, #16]
  411560:	mov	w20, #0x0                   	// #0
  411564:	ldr	x1, [x21]
  411568:	ldr	x1, [x1, #160]
  41156c:	str	x23, [sp, #48]
  411570:	mov	x23, x0
  411574:	mov	x0, x21
  411578:	blr	x1
  41157c:	ldp	x0, x1, [sp, #136]
  411580:	stp	x0, x1, [sp, #80]
  411584:	ldp	x0, x1, [sp, #152]
  411588:	stp	x0, x1, [sp, #96]
  41158c:	ldp	x0, x1, [sp, #168]
  411590:	stp	x0, x1, [sp, #112]
  411594:	ldr	x0, [sp, #184]
  411598:	str	x0, [sp, #128]
  41159c:	b	4115bc <ferror@plt+0xec1c>
  4115a0:	ldr	x2, [x21]
  4115a4:	mov	x0, x21
  4115a8:	ldr	x1, [sp, #72]
  4115ac:	ldr	x2, [x2, #128]
  4115b0:	blr	x2
  4115b4:	mov	x0, x19
  4115b8:	bl	4027c0 <free@plt>
  4115bc:	ldr	x3, [sp, #80]
  4115c0:	add	x2, sp, #0x48
  4115c4:	add	x1, sp, #0x40
  4115c8:	add	x0, sp, #0x50
  4115cc:	ldr	x3, [x3, #176]
  4115d0:	blr	x3
  4115d4:	tst	w0, #0xff
  4115d8:	b.eq	411604 <ferror@plt+0xec64>  // b.none
  4115dc:	ldr	x19, [sp, #64]
  4115e0:	mov	x0, x19
  4115e4:	bl	402960 <unlink@plt>
  4115e8:	tbz	w0, #31, 4115a0 <ferror@plt+0xec00>
  4115ec:	ldrb	w1, [x23, #8]
  4115f0:	mov	x0, x19
  4115f4:	cbz	w1, 4115a0 <ferror@plt+0xec00>
  4115f8:	bl	410eb0 <ferror@plt+0xe510>
  4115fc:	orr	w20, w20, w0
  411600:	b	4115a0 <ferror@plt+0xec00>
  411604:	ldr	x1, [sp, #80]
  411608:	add	x0, sp, #0x50
  41160c:	add	x22, x23, #0x8
  411610:	ldr	x1, [x1, #184]
  411614:	blr	x1
  411618:	ldr	x21, [x23, #16]
  41161c:	add	x8, sp, #0x88
  411620:	mov	x0, x21
  411624:	ldr	x1, [x21]
  411628:	ldr	x1, [x1, #160]
  41162c:	blr	x1
  411630:	ldp	x0, x1, [sp, #136]
  411634:	stp	x0, x1, [sp, #80]
  411638:	ldp	x0, x1, [sp, #152]
  41163c:	stp	x0, x1, [sp, #96]
  411640:	ldp	x0, x1, [sp, #168]
  411644:	stp	x0, x1, [sp, #112]
  411648:	ldr	x0, [sp, #184]
  41164c:	str	x0, [sp, #128]
  411650:	b	411684 <ferror@plt+0xece4>
  411654:	ldr	x19, [sp, #64]
  411658:	mov	x1, x19
  41165c:	bl	410f00 <ferror@plt+0xe560>
  411660:	ldr	x2, [x21]
  411664:	mov	w1, w0
  411668:	orr	w20, w20, w1
  41166c:	mov	x0, x21
  411670:	ldr	x1, [sp, #72]
  411674:	ldr	x2, [x2, #128]
  411678:	blr	x2
  41167c:	mov	x0, x19
  411680:	bl	4027c0 <free@plt>
  411684:	ldr	x3, [sp, #80]
  411688:	add	x1, sp, #0x40
  41168c:	add	x2, sp, #0x48
  411690:	add	x0, sp, #0x50
  411694:	ldr	x3, [x3, #176]
  411698:	blr	x3
  41169c:	mov	w1, w0
  4116a0:	tst	w1, #0xff
  4116a4:	mov	x0, x22
  4116a8:	b.ne	411654 <ferror@plt+0xecb4>  // b.any
  4116ac:	ldr	x1, [sp, #80]
  4116b0:	add	x0, sp, #0x50
  4116b4:	ldr	x1, [x1, #184]
  4116b8:	blr	x1
  4116bc:	mov	w0, w20
  4116c0:	ldp	x19, x20, [sp, #16]
  4116c4:	ldp	x21, x22, [sp, #32]
  4116c8:	ldr	x23, [sp, #48]
  4116cc:	ldp	x29, x30, [sp], #192
  4116d0:	ret
  4116d4:	nop
  4116d8:	stp	x29, x30, [sp, #-32]!
  4116dc:	mov	x29, sp
  4116e0:	stp	x19, x20, [sp, #16]
  4116e4:	mov	x19, x0
  4116e8:	bl	411548 <ferror@plt+0xeba8>
  4116ec:	mov	w20, w0
  4116f0:	mov	x0, x19
  4116f4:	ldr	x1, [x0], #8
  4116f8:	bl	410f00 <ferror@plt+0xe560>
  4116fc:	orr	w20, w20, w0
  411700:	adrp	x3, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411704:	add	x3, x3, #0xb10
  411708:	ldr	x0, [x3, #16]
  41170c:	cbz	x0, 4117c4 <ferror@plt+0xee24>
  411710:	mov	x1, #0x0                   	// #0
  411714:	b	411724 <ferror@plt+0xed84>
  411718:	ldr	x2, [x5, #8]
  41171c:	cmp	x2, x1
  411720:	b.ls	4117c4 <ferror@plt+0xee24>  // b.plast
  411724:	ldr	x6, [x3, #8]
  411728:	mov	x2, x1
  41172c:	lsl	x4, x1, #3
  411730:	add	x5, x3, #0x8
  411734:	ldr	x6, [x6, x1, lsl #3]
  411738:	add	x1, x1, #0x1
  41173c:	cmp	x6, x19
  411740:	b.ne	411718 <ferror@plt+0xed78>  // b.any
  411744:	ldr	x0, [x5, #8]
  411748:	cmp	x0, x1
  41174c:	b.eq	411798 <ferror@plt+0xedf8>  // b.none
  411750:	ldr	x0, [x5]
  411754:	str	xzr, [x0, x4]
  411758:	ldr	x0, [x19, #24]
  41175c:	ldr	x1, [x0]
  411760:	ldr	x1, [x1, #152]
  411764:	blr	x1
  411768:	ldr	x0, [x19, #16]
  41176c:	ldr	x1, [x0]
  411770:	ldr	x1, [x1, #152]
  411774:	blr	x1
  411778:	ldr	x0, [x19]
  41177c:	bl	4027c0 <free@plt>
  411780:	mov	x0, x19
  411784:	bl	4027c0 <free@plt>
  411788:	mov	w0, w20
  41178c:	ldp	x19, x20, [sp, #16]
  411790:	ldp	x29, x30, [sp], #32
  411794:	ret
  411798:	cbz	x2, 4117bc <ferror@plt+0xee1c>
  41179c:	sub	x4, x4, #0x8
  4117a0:	b	4117b0 <ferror@plt+0xee10>
  4117a4:	sub	x4, x4, #0x8
  4117a8:	subs	x2, x2, #0x1
  4117ac:	b.eq	4117bc <ferror@plt+0xee1c>  // b.none
  4117b0:	ldr	x0, [x3, #8]
  4117b4:	ldr	x0, [x0, x4]
  4117b8:	cbz	x0, 4117a4 <ferror@plt+0xee04>
  4117bc:	str	x2, [x3, #16]
  4117c0:	b	411758 <ferror@plt+0xedb8>
  4117c4:	bl	4026d0 <abort@plt>
  4117c8:	stp	x29, x30, [sp, #-48]!
  4117cc:	mov	x29, sp
  4117d0:	stp	x19, x20, [sp, #16]
  4117d4:	mov	x19, x0
  4117d8:	mov	w20, w1
  4117dc:	str	x21, [sp, #32]
  4117e0:	mov	w21, w2
  4117e4:	bl	412278 <ferror@plt+0xf8d8>
  4117e8:	mov	w2, w21
  4117ec:	mov	w1, w20
  4117f0:	mov	x0, x19
  4117f4:	bl	402540 <open@plt>
  4117f8:	mov	w19, w0
  4117fc:	bl	402920 <__errno_location@plt>
  411800:	ldr	w21, [x0]
  411804:	mov	x20, x0
  411808:	tbnz	w19, #31, 411814 <ferror@plt+0xee74>
  41180c:	mov	w0, w19
  411810:	bl	410f70 <ferror@plt+0xe5d0>
  411814:	bl	4122b0 <ferror@plt+0xf910>
  411818:	str	w21, [x20]
  41181c:	mov	w0, w19
  411820:	ldp	x19, x20, [sp, #16]
  411824:	ldr	x21, [sp, #32]
  411828:	ldp	x29, x30, [sp], #48
  41182c:	ret
  411830:	stp	x29, x30, [sp, #-48]!
  411834:	mov	x29, sp
  411838:	stp	x19, x20, [sp, #16]
  41183c:	mov	x19, x0
  411840:	mov	x20, x1
  411844:	str	x21, [sp, #32]
  411848:	bl	412278 <ferror@plt+0xf8d8>
  41184c:	mov	x1, x20
  411850:	mov	x0, x19
  411854:	bl	412400 <ferror@plt+0xfa60>
  411858:	mov	x19, x0
  41185c:	bl	402920 <__errno_location@plt>
  411860:	ldr	w21, [x0]
  411864:	mov	x20, x0
  411868:	cbz	x19, 41187c <ferror@plt+0xeedc>
  41186c:	mov	x0, x19
  411870:	bl	4024c0 <fileno@plt>
  411874:	tbnz	w0, #31, 411898 <ferror@plt+0xeef8>
  411878:	bl	410f70 <ferror@plt+0xe5d0>
  41187c:	bl	4122b0 <ferror@plt+0xf910>
  411880:	str	w21, [x20]
  411884:	mov	x0, x19
  411888:	ldp	x19, x20, [sp, #16]
  41188c:	ldr	x21, [sp, #32]
  411890:	ldp	x29, x30, [sp], #48
  411894:	ret
  411898:	bl	4026d0 <abort@plt>
  41189c:	nop
  4118a0:	tbnz	w0, #31, 4118f0 <ferror@plt+0xef50>
  4118a4:	stp	x29, x30, [sp, #-48]!
  4118a8:	mov	x29, sp
  4118ac:	stp	x19, x20, [sp, #16]
  4118b0:	mov	w19, w0
  4118b4:	str	x21, [sp, #32]
  4118b8:	bl	402660 <close@plt>
  4118bc:	mov	w20, w0
  4118c0:	bl	402920 <__errno_location@plt>
  4118c4:	mov	x1, x0
  4118c8:	mov	w0, w19
  4118cc:	mov	x19, x1
  4118d0:	ldr	w21, [x1]
  4118d4:	bl	410e40 <ferror@plt+0xe4a0>
  4118d8:	str	w21, [x19]
  4118dc:	mov	w0, w20
  4118e0:	ldp	x19, x20, [sp, #16]
  4118e4:	ldr	x21, [sp, #32]
  4118e8:	ldp	x29, x30, [sp], #48
  4118ec:	ret
  4118f0:	b	402660 <close@plt>
  4118f4:	nop
  4118f8:	stp	x29, x30, [sp, #-48]!
  4118fc:	mov	x29, sp
  411900:	stp	x19, x20, [sp, #16]
  411904:	mov	x19, x0
  411908:	str	x21, [sp, #32]
  41190c:	bl	4024c0 <fileno@plt>
  411910:	mov	w21, w0
  411914:	mov	x0, x19
  411918:	bl	4170d0 <ferror@plt+0x14730>
  41191c:	mov	w20, w0
  411920:	bl	402920 <__errno_location@plt>
  411924:	mov	x19, x0
  411928:	mov	w0, w21
  41192c:	ldr	w21, [x19]
  411930:	bl	410e40 <ferror@plt+0xe4a0>
  411934:	str	w21, [x19]
  411938:	mov	w0, w20
  41193c:	ldp	x19, x20, [sp, #16]
  411940:	ldr	x21, [sp, #32]
  411944:	ldp	x29, x30, [sp], #48
  411948:	ret
  41194c:	nop
  411950:	stp	x29, x30, [sp, #-48]!
  411954:	mov	x29, sp
  411958:	stp	x19, x20, [sp, #16]
  41195c:	mov	x19, x0
  411960:	str	x21, [sp, #32]
  411964:	bl	4024c0 <fileno@plt>
  411968:	mov	w21, w0
  41196c:	mov	x0, x19
  411970:	bl	411a28 <ferror@plt+0xf088>
  411974:	mov	w20, w0
  411978:	bl	402920 <__errno_location@plt>
  41197c:	mov	x19, x0
  411980:	mov	w0, w21
  411984:	ldr	w21, [x19]
  411988:	bl	410e40 <ferror@plt+0xe4a0>
  41198c:	str	w21, [x19]
  411990:	mov	w0, w20
  411994:	ldp	x19, x20, [sp, #16]
  411998:	ldr	x21, [sp, #32]
  41199c:	ldp	x29, x30, [sp], #48
  4119a0:	ret
  4119a4:	nop
  4119a8:	stp	x29, x30, [sp, #-32]!
  4119ac:	mov	w2, #0x0                   	// #0
  4119b0:	mov	x29, sp
  4119b4:	stp	x19, x20, [sp, #16]
  4119b8:	and	w20, w1, #0xff
  4119bc:	mov	w19, w0
  4119c0:	mov	w1, #0x1                   	// #1
  4119c4:	bl	417160 <ferror@plt+0x147c0>
  4119c8:	tbnz	w0, #31, 411a0c <ferror@plt+0xf06c>
  4119cc:	cmp	w20, #0x0
  4119d0:	orr	w3, w0, #0x1
  4119d4:	and	w2, w0, #0xfffffffe
  4119d8:	mov	w1, w0
  4119dc:	csel	w2, w2, w3, eq  // eq = none
  4119e0:	mov	w0, #0x0                   	// #0
  4119e4:	cmp	w2, w1
  4119e8:	b.eq	411a00 <ferror@plt+0xf060>  // b.none
  4119ec:	mov	w0, w19
  4119f0:	mov	w1, #0x2                   	// #2
  4119f4:	bl	417160 <ferror@plt+0x147c0>
  4119f8:	cmn	w0, #0x1
  4119fc:	csetm	w0, eq  // eq = none
  411a00:	ldp	x19, x20, [sp, #16]
  411a04:	ldp	x29, x30, [sp], #32
  411a08:	ret
  411a0c:	mov	w0, #0xffffffff            	// #-1
  411a10:	b	411a00 <ferror@plt+0xf060>
  411a14:	nop
  411a18:	mov	w2, #0x0                   	// #0
  411a1c:	mov	w1, #0x406                 	// #1030
  411a20:	b	417160 <ferror@plt+0x147c0>
  411a24:	nop
  411a28:	stp	x29, x30, [sp, #-32]!
  411a2c:	mov	x29, sp
  411a30:	stp	x19, x20, [sp, #16]
  411a34:	mov	x19, x0
  411a38:	bl	4024b0 <__fpending@plt>
  411a3c:	mov	x20, x0
  411a40:	mov	x0, x19
  411a44:	ldr	w19, [x19]
  411a48:	and	w19, w19, #0x20
  411a4c:	bl	4170d0 <ferror@plt+0x14730>
  411a50:	cbnz	w19, 411a78 <ferror@plt+0xf0d8>
  411a54:	cbz	w0, 411a6c <ferror@plt+0xf0cc>
  411a58:	cbnz	x20, 411a90 <ferror@plt+0xf0f0>
  411a5c:	bl	402920 <__errno_location@plt>
  411a60:	ldr	w0, [x0]
  411a64:	cmp	w0, #0x9
  411a68:	csetm	w0, ne  // ne = any
  411a6c:	ldp	x19, x20, [sp, #16]
  411a70:	ldp	x29, x30, [sp], #32
  411a74:	ret
  411a78:	cbnz	w0, 411a90 <ferror@plt+0xf0f0>
  411a7c:	bl	402920 <__errno_location@plt>
  411a80:	mov	x1, x0
  411a84:	mov	w0, #0xffffffff            	// #-1
  411a88:	str	wzr, [x1]
  411a8c:	b	411a6c <ferror@plt+0xf0cc>
  411a90:	mov	w0, #0xffffffff            	// #-1
  411a94:	b	411a6c <ferror@plt+0xf0cc>
  411a98:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411a9c:	str	x0, [x1, #2864]
  411aa0:	ret
  411aa4:	nop
  411aa8:	stp	x29, x30, [sp, #-32]!
  411aac:	mov	x29, sp
  411ab0:	stp	x19, x20, [sp, #16]
  411ab4:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  411ab8:	ldr	x19, [x20, #1064]
  411abc:	mov	x0, x19
  411ac0:	bl	417300 <ferror@plt+0x14960>
  411ac4:	cbnz	x0, 411b20 <ferror@plt+0xf180>
  411ac8:	mov	x0, x19
  411acc:	bl	411a28 <ferror@plt+0xf088>
  411ad0:	cbz	w0, 411b40 <ferror@plt+0xf1a0>
  411ad4:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411ad8:	ldr	x19, [x0, #2864]
  411adc:	bl	402920 <__errno_location@plt>
  411ae0:	ldr	w20, [x0]
  411ae4:	cbz	x19, 411b4c <ferror@plt+0xf1ac>
  411ae8:	mov	x0, x19
  411aec:	bl	415580 <ferror@plt+0x12be0>
  411af0:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x2878>
  411af4:	mov	x3, x0
  411af8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  411afc:	mov	w1, w20
  411b00:	add	x4, x4, #0xaf8
  411b04:	add	x2, x2, #0xb10
  411b08:	mov	w0, #0x0                   	// #0
  411b0c:	bl	4023e0 <error@plt>
  411b10:	bl	411ba8 <ferror@plt+0xf208>
  411b14:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  411b18:	ldr	w0, [x0, #860]
  411b1c:	bl	402370 <_exit@plt>
  411b20:	mov	x0, x19
  411b24:	mov	w2, #0x1                   	// #1
  411b28:	mov	x1, #0x0                   	// #0
  411b2c:	bl	417340 <ferror@plt+0x149a0>
  411b30:	cbz	w0, 411b6c <ferror@plt+0xf1cc>
  411b34:	ldr	x0, [x20, #1064]
  411b38:	bl	411a28 <ferror@plt+0xf088>
  411b3c:	cbnz	w0, 411ad4 <ferror@plt+0xf134>
  411b40:	ldp	x19, x20, [sp, #16]
  411b44:	ldp	x29, x30, [sp], #32
  411b48:	b	411ba8 <ferror@plt+0xf208>
  411b4c:	mov	w1, w20
  411b50:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  411b54:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  411b58:	add	x3, x3, #0xaf8
  411b5c:	add	x2, x2, #0xf20
  411b60:	mov	w0, #0x0                   	// #0
  411b64:	bl	4023e0 <error@plt>
  411b68:	b	411b10 <ferror@plt+0xf170>
  411b6c:	ldr	x0, [x20, #1064]
  411b70:	bl	4172a8 <ferror@plt+0x14908>
  411b74:	cbz	w0, 411b34 <ferror@plt+0xf194>
  411b78:	ldr	x0, [x20, #1064]
  411b7c:	bl	411a28 <ferror@plt+0xf088>
  411b80:	b	411ad4 <ferror@plt+0xf134>
  411b84:	nop
  411b88:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411b8c:	str	x0, [x1, #2872]
  411b90:	ret
  411b94:	nop
  411b98:	adrp	x1, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411b9c:	strb	w0, [x1, #2880]
  411ba0:	ret
  411ba4:	nop
  411ba8:	stp	x29, x30, [sp, #-48]!
  411bac:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  411bb0:	mov	x29, sp
  411bb4:	ldr	x0, [x0, #1056]
  411bb8:	bl	411a28 <ferror@plt+0xf088>
  411bbc:	cbz	w0, 411bf0 <ferror@plt+0xf250>
  411bc0:	stp	x19, x20, [sp, #16]
  411bc4:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411bc8:	add	x0, x19, #0xb38
  411bcc:	ldrb	w20, [x0, #8]
  411bd0:	str	x21, [sp, #32]
  411bd4:	bl	402920 <__errno_location@plt>
  411bd8:	ldr	w21, [x0]
  411bdc:	cbz	w20, 411c08 <ferror@plt+0xf268>
  411be0:	cmp	w21, #0x20
  411be4:	b.ne	411c08 <ferror@plt+0xf268>  // b.any
  411be8:	ldp	x19, x20, [sp, #16]
  411bec:	ldr	x21, [sp, #32]
  411bf0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  411bf4:	ldr	x0, [x0, #1032]
  411bf8:	bl	411a28 <ferror@plt+0xf088>
  411bfc:	cbnz	w0, 411c40 <ferror@plt+0xf2a0>
  411c00:	ldp	x29, x30, [sp], #48
  411c04:	ret
  411c08:	ldr	x0, [x19, #2872]
  411c0c:	cbz	x0, 411c4c <ferror@plt+0xf2ac>
  411c10:	bl	415580 <ferror@plt+0x12be0>
  411c14:	mov	x3, x0
  411c18:	adrp	x4, 41a000 <_obstack_memory_used@@Base+0x2878>
  411c1c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  411c20:	mov	w1, w21
  411c24:	add	x4, x4, #0xb18
  411c28:	add	x2, x2, #0xb10
  411c2c:	mov	w0, #0x0                   	// #0
  411c30:	bl	4023e0 <error@plt>
  411c34:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  411c38:	ldr	w0, [x0, #860]
  411c3c:	bl	402370 <_exit@plt>
  411c40:	stp	x19, x20, [sp, #16]
  411c44:	str	x21, [sp, #32]
  411c48:	b	411c34 <ferror@plt+0xf294>
  411c4c:	mov	w1, w21
  411c50:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x2878>
  411c54:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  411c58:	add	x3, x3, #0xb18
  411c5c:	add	x2, x2, #0xf20
  411c60:	mov	w0, #0x0                   	// #0
  411c64:	bl	4023e0 <error@plt>
  411c68:	b	411c34 <ferror@plt+0xf294>
  411c6c:	nop
  411c70:	sub	sp, sp, #0x2a0
  411c74:	stp	x29, x30, [sp]
  411c78:	mov	x29, sp
  411c7c:	stp	x19, x20, [sp, #16]
  411c80:	mov	x20, x0
  411c84:	and	w19, w6, #0xff
  411c88:	stp	x21, x22, [sp, #32]
  411c8c:	mov	x22, x2
  411c90:	stp	x23, x24, [sp, #48]
  411c94:	ldrb	w24, [sp, #672]
  411c98:	stp	x25, x26, [sp, #64]
  411c9c:	and	w26, w4, #0xff
  411ca0:	ands	w25, w7, #0xff
  411ca4:	stp	x27, x28, [sp, #80]
  411ca8:	and	w28, w3, #0xff
  411cac:	and	w27, w5, #0xff
  411cb0:	str	x1, [sp, #104]
  411cb4:	b.ne	411d8c <ferror@plt+0xf3ec>  // b.any
  411cb8:	add	x21, sp, #0x80
  411cbc:	mov	x0, x21
  411cc0:	bl	402720 <posix_spawn_file_actions_init@plt>
  411cc4:	mov	w23, w0
  411cc8:	cbnz	w0, 411cf8 <ferror@plt+0xf358>
  411ccc:	cbnz	w26, 411d38 <ferror@plt+0xf398>
  411cd0:	cbnz	w27, 411d60 <ferror@plt+0xf3c0>
  411cd4:	cbnz	w19, 411e14 <ferror@plt+0xf474>
  411cd8:	cbz	w25, 411dbc <ferror@plt+0xf41c>
  411cdc:	add	x0, sp, #0x150
  411ce0:	bl	402870 <posix_spawnattr_init@plt>
  411ce4:	mov	w23, w0
  411ce8:	cbz	w0, 411e4c <ferror@plt+0xf4ac>
  411cec:	mov	x0, x21
  411cf0:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  411cf4:	bl	4122b0 <ferror@plt+0xf910>
  411cf8:	ldr	x0, [sp, #680]
  411cfc:	cbz	x0, 411d04 <ferror@plt+0xf364>
  411d00:	str	wzr, [x0]
  411d04:	eor	w19, w19, #0x1
  411d08:	mov	w21, #0x7f                  	// #127
  411d0c:	orr	w19, w24, w19
  411d10:	cbnz	w19, 411e78 <ferror@plt+0xf4d8>
  411d14:	mov	w0, w21
  411d18:	ldp	x29, x30, [sp]
  411d1c:	ldp	x19, x20, [sp, #16]
  411d20:	ldp	x21, x22, [sp, #32]
  411d24:	ldp	x23, x24, [sp, #48]
  411d28:	ldp	x25, x26, [sp, #64]
  411d2c:	ldp	x27, x28, [sp, #80]
  411d30:	add	sp, sp, #0x2a0
  411d34:	ret
  411d38:	mov	x0, x21
  411d3c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  411d40:	mov	w4, #0x0                   	// #0
  411d44:	add	x2, x2, #0xb28
  411d48:	mov	w3, #0x0                   	// #0
  411d4c:	mov	w1, #0x0                   	// #0
  411d50:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  411d54:	mov	w23, w0
  411d58:	cbnz	w0, 411e38 <ferror@plt+0xf498>
  411d5c:	cbz	w27, 411cd4 <ferror@plt+0xf334>
  411d60:	mov	x0, x21
  411d64:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  411d68:	mov	w4, #0x0                   	// #0
  411d6c:	add	x2, x2, #0xb28
  411d70:	mov	w3, #0x2                   	// #2
  411d74:	mov	w1, #0x1                   	// #1
  411d78:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  411d7c:	mov	w23, w0
  411d80:	cbnz	w0, 411e38 <ferror@plt+0xf498>
  411d84:	cbz	w19, 411cd8 <ferror@plt+0xf338>
  411d88:	b	411e14 <ferror@plt+0xf474>
  411d8c:	add	x2, sp, #0xd0
  411d90:	mov	x1, #0x0                   	// #0
  411d94:	mov	w0, #0x2                   	// #2
  411d98:	bl	4023f0 <sigprocmask@plt>
  411d9c:	add	x21, sp, #0x80
  411da0:	bl	412278 <ferror@plt+0xf8d8>
  411da4:	mov	x0, x21
  411da8:	bl	402720 <posix_spawn_file_actions_init@plt>
  411dac:	mov	w23, w0
  411db0:	cbnz	w0, 411cf4 <ferror@plt+0xf354>
  411db4:	cbz	w26, 411cd0 <ferror@plt+0xf330>
  411db8:	b	411d38 <ferror@plt+0xf398>
  411dbc:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  411dc0:	mov	x4, x22
  411dc4:	ldr	x1, [sp, #104]
  411dc8:	mov	x2, x21
  411dcc:	ldr	x5, [x0, #1072]
  411dd0:	mov	x3, #0x0                   	// #0
  411dd4:	add	x0, sp, #0x7c
  411dd8:	bl	402800 <posix_spawnp@plt>
  411ddc:	mov	w23, w0
  411de0:	cbnz	w0, 411f14 <ferror@plt+0xf574>
  411de4:	mov	x0, x21
  411de8:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  411dec:	ldr	w0, [sp, #124]
  411df0:	mov	w5, w24
  411df4:	ldr	x6, [sp, #680]
  411df8:	mov	w4, w25
  411dfc:	mov	w3, w19
  411e00:	mov	w2, w28
  411e04:	mov	x1, x20
  411e08:	bl	4167a8 <ferror@plt+0x13e08>
  411e0c:	mov	w21, w0
  411e10:	b	411d14 <ferror@plt+0xf374>
  411e14:	mov	w3, #0x2                   	// #2
  411e18:	mov	x0, x21
  411e1c:	mov	w1, w3
  411e20:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  411e24:	mov	w4, #0x0                   	// #0
  411e28:	add	x2, x2, #0xb28
  411e2c:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  411e30:	mov	w23, w0
  411e34:	cbz	w0, 411cd8 <ferror@plt+0xf338>
  411e38:	mov	x0, x21
  411e3c:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  411e40:	cbz	w25, 411cf8 <ferror@plt+0xf358>
  411e44:	bl	4122b0 <ferror@plt+0xf910>
  411e48:	b	411cf8 <ferror@plt+0xf358>
  411e4c:	add	x1, sp, #0xd0
  411e50:	add	x0, sp, #0x150
  411e54:	bl	402700 <posix_spawnattr_setsigmask@plt>
  411e58:	mov	w23, w0
  411e5c:	cbz	w0, 411e94 <ferror@plt+0xf4f4>
  411e60:	mov	x0, x21
  411e64:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  411e68:	add	x0, sp, #0x150
  411e6c:	bl	402580 <posix_spawnattr_destroy@plt>
  411e70:	bl	4122b0 <ferror@plt+0xf910>
  411e74:	b	411cf8 <ferror@plt+0xf358>
  411e78:	mov	x3, x20
  411e7c:	mov	w1, w23
  411e80:	mov	w0, w24
  411e84:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  411e88:	add	x2, x2, #0xb38
  411e8c:	bl	4023e0 <error@plt>
  411e90:	b	411d14 <ferror@plt+0xf374>
  411e94:	add	x0, sp, #0x150
  411e98:	mov	w1, #0x8                   	// #8
  411e9c:	bl	4026c0 <posix_spawnattr_setflags@plt>
  411ea0:	mov	w23, w0
  411ea4:	cbnz	w0, 411e60 <ferror@plt+0xf4c0>
  411ea8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  411eac:	mov	x4, x22
  411eb0:	ldr	x1, [sp, #104]
  411eb4:	add	x3, sp, #0x150
  411eb8:	ldr	x5, [x0, #1072]
  411ebc:	mov	x2, x21
  411ec0:	add	x0, sp, #0x7c
  411ec4:	bl	402800 <posix_spawnp@plt>
  411ec8:	mov	w23, w0
  411ecc:	cbnz	w0, 411e60 <ferror@plt+0xf4c0>
  411ed0:	mov	x0, x21
  411ed4:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  411ed8:	add	x0, sp, #0x150
  411edc:	bl	402580 <posix_spawnattr_destroy@plt>
  411ee0:	ldr	w0, [sp, #124]
  411ee4:	bl	416640 <ferror@plt+0x13ca0>
  411ee8:	bl	4122b0 <ferror@plt+0xf910>
  411eec:	ldr	w0, [sp, #124]
  411ef0:	mov	w5, w24
  411ef4:	ldr	x6, [sp, #680]
  411ef8:	mov	w4, w25
  411efc:	mov	w3, w19
  411f00:	mov	w2, w28
  411f04:	mov	x1, x20
  411f08:	bl	4167a8 <ferror@plt+0x13e08>
  411f0c:	mov	w21, w0
  411f10:	b	411d14 <ferror@plt+0xf374>
  411f14:	mov	x0, x21
  411f18:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  411f1c:	b	411cf8 <ferror@plt+0xf358>
  411f20:	stp	x29, x30, [sp, #-64]!
  411f24:	mov	x29, sp
  411f28:	stp	x19, x20, [sp, #16]
  411f2c:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411f30:	mov	w20, w0
  411f34:	ldr	w0, [x19, #2888]
  411f38:	stp	x21, x22, [sp, #32]
  411f3c:	str	x23, [sp, #48]
  411f40:	cbz	w0, 411fec <ferror@plt+0xf64c>
  411f44:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  411f48:	sxtw	x1, w0
  411f4c:	add	x19, x19, #0xb48
  411f50:	add	x21, x21, #0x360
  411f54:	nop
  411f58:	sub	x1, x1, #0x1
  411f5c:	str	w1, [x19]
  411f60:	ldr	x0, [x21]
  411f64:	ldr	x0, [x0, x1, lsl #3]
  411f68:	blr	x0
  411f6c:	ldr	w2, [x19]
  411f70:	sxtw	x1, w2
  411f74:	cbnz	w2, 411f58 <ferror@plt+0xf5b8>
  411f78:	add	x22, x21, #0x8
  411f7c:	adrp	x21, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  411f80:	add	x21, x21, #0xcd8
  411f84:	mov	x19, #0x0                   	// #0
  411f88:	mov	w23, #0x98                  	// #152
  411f8c:	nop
  411f90:	ldr	w0, [x22, x19, lsl #2]
  411f94:	mov	x2, #0x0                   	// #0
  411f98:	add	x19, x19, #0x1
  411f9c:	sxtw	x4, w0
  411fa0:	smaddl	x1, w0, w23, x21
  411fa4:	add	x3, x4, w0, sxtw #2
  411fa8:	tbnz	w0, #31, 411fc4 <ferror@plt+0xf624>
  411fac:	lsl	x3, x3, #2
  411fb0:	sub	x3, x3, x4
  411fb4:	ldr	x4, [x21, x3, lsl #3]
  411fb8:	cmp	x4, #0x1
  411fbc:	b.eq	411fe4 <ferror@plt+0xf644>  // b.none
  411fc0:	bl	402670 <sigaction@plt>
  411fc4:	cmp	x19, #0x6
  411fc8:	b.ne	411f90 <ferror@plt+0xf5f0>  // b.any
  411fcc:	mov	w0, w20
  411fd0:	ldp	x19, x20, [sp, #16]
  411fd4:	ldp	x21, x22, [sp, #32]
  411fd8:	ldr	x23, [sp, #48]
  411fdc:	ldp	x29, x30, [sp], #64
  411fe0:	b	4023d0 <raise@plt>
  411fe4:	str	xzr, [x21, x3, lsl #3]
  411fe8:	b	411fc0 <ferror@plt+0xf620>
  411fec:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  411ff0:	add	x21, x21, #0x360
  411ff4:	b	411f78 <ferror@plt+0xf5d8>
  411ff8:	stp	x29, x30, [sp, #-208]!
  411ffc:	mov	x29, sp
  412000:	stp	x19, x20, [sp, #16]
  412004:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  412008:	add	x20, x20, #0x360
  41200c:	add	x19, x20, #0x8
  412010:	add	x20, x20, #0x20
  412014:	str	x21, [sp, #32]
  412018:	mov	w21, #0xffffffff            	// #-1
  41201c:	b	41202c <ferror@plt+0xf68c>
  412020:	add	x19, x19, #0x4
  412024:	cmp	x19, x20
  412028:	b.eq	41205c <ferror@plt+0xf6bc>  // b.none
  41202c:	ldr	w0, [x19]
  412030:	add	x2, sp, #0x38
  412034:	mov	x1, #0x0                   	// #0
  412038:	bl	402670 <sigaction@plt>
  41203c:	tbnz	w0, #31, 412020 <ferror@plt+0xf680>
  412040:	ldr	x0, [sp, #56]
  412044:	cmp	x0, #0x1
  412048:	b.ne	412020 <ferror@plt+0xf680>  // b.any
  41204c:	str	w21, [x19]
  412050:	add	x19, x19, #0x4
  412054:	cmp	x19, x20
  412058:	b.ne	41202c <ferror@plt+0xf68c>  // b.any
  41205c:	adrp	x0, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  412060:	mov	w1, #0x1                   	// #1
  412064:	ldp	x19, x20, [sp, #16]
  412068:	strb	w1, [x0, #2892]
  41206c:	ldr	x21, [sp, #32]
  412070:	ldp	x29, x30, [sp], #208
  412074:	ret
  412078:	stp	x29, x30, [sp, #-48]!
  41207c:	mov	x29, sp
  412080:	stp	x21, x22, [sp, #32]
  412084:	adrp	x22, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  412088:	add	x22, x22, #0xb48
  41208c:	stp	x19, x20, [sp, #16]
  412090:	ldrb	w0, [x22, #4]
  412094:	cbnz	w0, 41209c <ferror@plt+0xf6fc>
  412098:	bl	411ff8 <ferror@plt+0xf658>
  41209c:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  4120a0:	add	x21, x21, #0x360
  4120a4:	add	x21, x21, #0x8
  4120a8:	mov	x19, #0x0                   	// #0
  4120ac:	add	x20, x22, #0x8
  4120b0:	mov	x0, x20
  4120b4:	bl	402570 <sigemptyset@plt>
  4120b8:	ldr	w1, [x21, x19, lsl #2]
  4120bc:	mov	x0, x20
  4120c0:	add	x19, x19, #0x1
  4120c4:	tbnz	w1, #31, 4120cc <ferror@plt+0xf72c>
  4120c8:	bl	4028f0 <sigaddset@plt>
  4120cc:	cmp	x19, #0x6
  4120d0:	b.ne	4120b8 <ferror@plt+0xf718>  // b.any
  4120d4:	mov	w0, #0x1                   	// #1
  4120d8:	strb	w0, [x22, #136]
  4120dc:	ldp	x19, x20, [sp, #16]
  4120e0:	ldp	x21, x22, [sp, #32]
  4120e4:	ldp	x29, x30, [sp], #48
  4120e8:	ret
  4120ec:	nop
  4120f0:	stp	x29, x30, [sp, #-256]!
  4120f4:	mov	x29, sp
  4120f8:	stp	x19, x20, [sp, #16]
  4120fc:	adrp	x20, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  412100:	stp	x21, x22, [sp, #32]
  412104:	add	x21, x20, #0xb48
  412108:	mov	x22, x0
  41210c:	stp	x23, x24, [sp, #48]
  412110:	ldrb	w0, [x21, #137]
  412114:	cbz	w0, 412160 <ferror@plt+0xf7c0>
  412118:	adrp	x23, 431000 <_obstack_memory_used@@Base+0x19878>
  41211c:	add	x24, x23, #0x360
  412120:	ldr	w0, [x20, #2888]
  412124:	ldr	x19, [x24, #40]
  412128:	cmp	x19, w0, sxtw
  41212c:	b.eq	4121f0 <ferror@plt+0xf850>  // b.none
  412130:	ldr	x1, [x23, #864]
  412134:	ldr	w0, [x20, #2888]
  412138:	ldp	x23, x24, [sp, #48]
  41213c:	sxtw	x0, w0
  412140:	str	x22, [x1, x0, lsl #3]
  412144:	ldp	x21, x22, [sp, #32]
  412148:	ldr	w0, [x20, #2888]
  41214c:	add	w0, w0, #0x1
  412150:	str	w0, [x20, #2888]
  412154:	ldp	x19, x20, [sp, #16]
  412158:	ldp	x29, x30, [sp], #256
  41215c:	ret
  412160:	ldrb	w0, [x21, #4]
  412164:	stp	x25, x26, [sp, #64]
  412168:	str	x27, [sp, #80]
  41216c:	cbz	w0, 412258 <ferror@plt+0xf8b8>
  412170:	adrp	x1, 411000 <ferror@plt+0xe660>
  412174:	add	x1, x1, #0xf20
  412178:	mov	w2, #0x40000000            	// #1073741824
  41217c:	adrp	x23, 431000 <_obstack_memory_used@@Base+0x19878>
  412180:	add	x24, x23, #0x360
  412184:	adrp	x26, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  412188:	add	x0, sp, #0x70
  41218c:	add	x25, x24, #0x8
  412190:	add	x26, x26, #0xcd8
  412194:	mov	x19, #0x0                   	// #0
  412198:	mov	w27, #0x98                  	// #152
  41219c:	str	x1, [sp, #104]
  4121a0:	str	w2, [sp, #240]
  4121a4:	bl	402570 <sigemptyset@plt>
  4121a8:	ldr	w0, [x25, x19, lsl #2]
  4121ac:	tbnz	w0, #31, 4121c4 <ferror@plt+0xf824>
  4121b0:	cmp	w0, #0x3f
  4121b4:	b.gt	412270 <ferror@plt+0xf8d0>
  4121b8:	smaddl	x2, w0, w27, x26
  4121bc:	add	x1, sp, #0x68
  4121c0:	bl	402670 <sigaction@plt>
  4121c4:	add	x19, x19, #0x1
  4121c8:	cmp	x19, #0x6
  4121cc:	b.ne	4121a8 <ferror@plt+0xf808>  // b.any
  4121d0:	mov	w0, #0x1                   	// #1
  4121d4:	strb	w0, [x21, #137]
  4121d8:	ldr	w0, [x20, #2888]
  4121dc:	ldr	x19, [x24, #40]
  4121e0:	ldp	x25, x26, [sp, #64]
  4121e4:	cmp	x19, w0, sxtw
  4121e8:	ldr	x27, [sp, #80]
  4121ec:	b.ne	412130 <ferror@plt+0xf790>  // b.any
  4121f0:	stp	x25, x26, [sp, #64]
  4121f4:	tst	x19, #0x7000000000000000
  4121f8:	cset	x1, ne  // ne = any
  4121fc:	ldr	x25, [x23, #864]
  412200:	lsl	x26, x19, #1
  412204:	lsl	x0, x19, #4
  412208:	tbnz	x19, #59, 412268 <ferror@plt+0xf8c8>
  41220c:	cbnz	x1, 412268 <ferror@plt+0xf8c8>
  412210:	bl	416968 <ferror@plt+0x13fc8>
  412214:	cbz	x19, 412234 <ferror@plt+0xf894>
  412218:	mov	x1, #0x0                   	// #0
  41221c:	nop
  412220:	ldr	x2, [x25, x1, lsl #3]
  412224:	str	x2, [x0, x1, lsl #3]
  412228:	add	x1, x1, #0x1
  41222c:	cmp	x19, x1
  412230:	b.ne	412220 <ferror@plt+0xf880>  // b.any
  412234:	str	x0, [x23, #864]
  412238:	add	x21, x21, #0x90
  41223c:	str	x26, [x24, #40]
  412240:	cmp	x25, x21
  412244:	b.eq	412260 <ferror@plt+0xf8c0>  // b.none
  412248:	mov	x0, x25
  41224c:	bl	4027c0 <free@plt>
  412250:	ldp	x25, x26, [sp, #64]
  412254:	b	412130 <ferror@plt+0xf790>
  412258:	bl	411ff8 <ferror@plt+0xf658>
  41225c:	b	412170 <ferror@plt+0xf7d0>
  412260:	ldp	x25, x26, [sp, #64]
  412264:	b	412130 <ferror@plt+0xf790>
  412268:	str	x27, [sp, #80]
  41226c:	bl	416bb0 <ferror@plt+0x14210>
  412270:	bl	4026d0 <abort@plt>
  412274:	nop
  412278:	stp	x29, x30, [sp, #-32]!
  41227c:	mov	x29, sp
  412280:	str	x19, [sp, #16]
  412284:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  412288:	add	x19, x19, #0xb48
  41228c:	ldrb	w0, [x19, #136]
  412290:	cbnz	w0, 412298 <ferror@plt+0xf8f8>
  412294:	bl	412078 <ferror@plt+0xf6d8>
  412298:	add	x1, x19, #0x8
  41229c:	mov	x2, #0x0                   	// #0
  4122a0:	ldr	x19, [sp, #16]
  4122a4:	mov	w0, #0x0                   	// #0
  4122a8:	ldp	x29, x30, [sp], #32
  4122ac:	b	4023f0 <sigprocmask@plt>
  4122b0:	stp	x29, x30, [sp, #-32]!
  4122b4:	mov	x29, sp
  4122b8:	str	x19, [sp, #16]
  4122bc:	adrp	x19, 439000 <__progname@@GLIBC_2.17+0x7bc8>
  4122c0:	add	x19, x19, #0xb48
  4122c4:	ldrb	w0, [x19, #136]
  4122c8:	cbnz	w0, 4122d0 <ferror@plt+0xf930>
  4122cc:	bl	412078 <ferror@plt+0xf6d8>
  4122d0:	add	x1, x19, #0x8
  4122d4:	mov	x2, #0x0                   	// #0
  4122d8:	ldr	x19, [sp, #16]
  4122dc:	mov	w0, #0x1                   	// #1
  4122e0:	ldp	x29, x30, [sp], #32
  4122e4:	b	4023f0 <sigprocmask@plt>
  4122e8:	stp	x29, x30, [sp, #-16]!
  4122ec:	mov	x29, sp
  4122f0:	bl	412308 <ferror@plt+0xf968>
  4122f4:	cbz	x0, 412300 <ferror@plt+0xf960>
  4122f8:	ldp	x29, x30, [sp], #16
  4122fc:	ret
  412300:	bl	416bb0 <ferror@plt+0x14210>
  412304:	nop
  412308:	stp	x29, x30, [sp, #-96]!
  41230c:	mov	x29, sp
  412310:	stp	x19, x20, [sp, #16]
  412314:	mov	x20, x1
  412318:	stp	x21, x22, [sp, #32]
  41231c:	stp	x23, x24, [sp, #48]
  412320:	mov	x23, x2
  412324:	mov	x24, x0
  412328:	stp	x25, x26, [sp, #64]
  41232c:	str	x27, [sp, #80]
  412330:	bl	4177b0 <_obstack_memory_used@@Base+0x28>
  412334:	mov	x21, x0
  412338:	bl	417808 <_obstack_memory_used@@Base+0x80>
  41233c:	sub	x26, x21, x24
  412340:	mov	x19, x0
  412344:	add	x26, x26, x0
  412348:	add	x27, x26, #0x1
  41234c:	cbz	x0, 412360 <ferror@plt+0xf9c0>
  412350:	add	x19, x21, x0
  412354:	ldurb	w0, [x19, #-1]
  412358:	cmp	w0, #0x2f
  41235c:	cset	x19, ne  // ne = any
  412360:	ldrb	w25, [x20]
  412364:	cmp	w25, #0x2f
  412368:	b.eq	4123ec <ferror@plt+0xfa4c>  // b.none
  41236c:	mov	x0, x20
  412370:	bl	402390 <strlen@plt>
  412374:	mov	x22, x0
  412378:	add	x0, x0, x19
  41237c:	add	x0, x0, x27
  412380:	bl	402530 <malloc@plt>
  412384:	mov	x21, x0
  412388:	cbz	x0, 4123cc <ferror@plt+0xfa2c>
  41238c:	mov	x1, x24
  412390:	mov	x2, x26
  412394:	bl	4027f0 <mempcpy@plt>
  412398:	mov	x1, x0
  41239c:	mov	w2, #0x2f                  	// #47
  4123a0:	add	x0, x0, x19
  4123a4:	strb	w2, [x1]
  4123a8:	cbz	x23, 4123bc <ferror@plt+0xfa1c>
  4123ac:	cmp	w25, #0x2f
  4123b0:	cset	x1, eq  // eq = none
  4123b4:	sub	x1, x0, x1
  4123b8:	str	x1, [x23]
  4123bc:	mov	x2, x22
  4123c0:	mov	x1, x20
  4123c4:	bl	4027f0 <mempcpy@plt>
  4123c8:	strb	wzr, [x0]
  4123cc:	mov	x0, x21
  4123d0:	ldp	x19, x20, [sp, #16]
  4123d4:	ldp	x21, x22, [sp, #32]
  4123d8:	ldp	x23, x24, [sp, #48]
  4123dc:	ldp	x25, x26, [sp, #64]
  4123e0:	ldr	x27, [sp, #80]
  4123e4:	ldp	x29, x30, [sp], #96
  4123e8:	ret
  4123ec:	ldrb	w0, [x20, #1]!
  4123f0:	cmp	w0, #0x2f
  4123f4:	b.ne	41236c <ferror@plt+0xf9cc>  // b.any
  4123f8:	b	4123ec <ferror@plt+0xfa4c>
  4123fc:	nop
  412400:	stp	x29, x30, [sp, #-48]!
  412404:	mov	x29, sp
  412408:	stp	x19, x20, [sp, #16]
  41240c:	mov	x20, x1
  412410:	bl	402520 <fopen@plt>
  412414:	mov	x19, x0
  412418:	cbz	x0, 412428 <ferror@plt+0xfa88>
  41241c:	bl	4024c0 <fileno@plt>
  412420:	cmp	w0, #0x2
  412424:	b.ls	412438 <ferror@plt+0xfa98>  // b.plast
  412428:	mov	x0, x19
  41242c:	ldp	x19, x20, [sp, #16]
  412430:	ldp	x29, x30, [sp], #48
  412434:	ret
  412438:	str	x21, [sp, #32]
  41243c:	bl	415f08 <ferror@plt+0x13568>
  412440:	mov	w21, w0
  412444:	tbnz	w0, #31, 4124a0 <ferror@plt+0xfb00>
  412448:	mov	x0, x19
  41244c:	bl	4170d0 <ferror@plt+0x14730>
  412450:	cbnz	w0, 41247c <ferror@plt+0xfadc>
  412454:	mov	x1, x20
  412458:	mov	w0, w21
  41245c:	bl	4025d0 <fdopen@plt>
  412460:	mov	x19, x0
  412464:	cbz	x0, 41247c <ferror@plt+0xfadc>
  412468:	mov	x0, x19
  41246c:	ldp	x19, x20, [sp, #16]
  412470:	ldr	x21, [sp, #32]
  412474:	ldp	x29, x30, [sp], #48
  412478:	ret
  41247c:	bl	402920 <__errno_location@plt>
  412480:	mov	x20, x0
  412484:	mov	w0, w21
  412488:	mov	x19, #0x0                   	// #0
  41248c:	ldr	w21, [x20]
  412490:	bl	402660 <close@plt>
  412494:	str	w21, [x20]
  412498:	ldr	x21, [sp, #32]
  41249c:	b	412428 <ferror@plt+0xfa88>
  4124a0:	bl	402920 <__errno_location@plt>
  4124a4:	mov	x20, x0
  4124a8:	mov	x0, x19
  4124ac:	mov	x19, #0x0                   	// #0
  4124b0:	ldr	w21, [x20]
  4124b4:	bl	4170d0 <ferror@plt+0x14730>
  4124b8:	str	w21, [x20]
  4124bc:	ldr	x21, [sp, #32]
  4124c0:	b	412428 <ferror@plt+0xfa88>
  4124c4:	nop
  4124c8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4124cc:	ldr	x0, [x0, #1080]
  4124d0:	ret
  4124d4:	nop
  4124d8:	ldr	x0, [x0, #96]
  4124dc:	ret
  4124e0:	ldr	x0, [x1, #32]
  4124e4:	ret
  4124e8:	add	x2, x0, #0x38
  4124ec:	ldr	x0, [x1, #16]
  4124f0:	cmp	x0, x2
  4124f4:	csel	x0, x0, xzr, ne  // ne = any
  4124f8:	ret
  4124fc:	nop
  412500:	add	x2, x0, #0x38
  412504:	ldr	x0, [x1, #24]
  412508:	cmp	x0, x2
  41250c:	csel	x0, x0, xzr, ne  // ne = any
  412510:	ret
  412514:	nop
  412518:	ldr	x2, [x0]
  41251c:	stp	x2, x0, [x8]
  412520:	add	x1, x0, #0x38
  412524:	ldr	x2, [x0, #72]
  412528:	str	x2, [x8, #24]
  41252c:	str	x1, [x8, #32]
  412530:	ret
  412534:	nop
  412538:	mov	x3, x0
  41253c:	ldp	x0, x4, [x0, #24]
  412540:	cmp	x0, x4
  412544:	b.eq	412568 <ferror@plt+0xfbc8>  // b.none
  412548:	ldr	x4, [x0, #32]
  41254c:	str	x4, [x1]
  412550:	cbz	x2, 412558 <ferror@plt+0xfbb8>
  412554:	str	x0, [x2]
  412558:	ldr	x1, [x0, #16]
  41255c:	mov	w0, #0x1                   	// #1
  412560:	str	x1, [x3, #24]
  412564:	ret
  412568:	mov	w0, #0x0                   	// #0
  41256c:	ret
  412570:	ret
  412574:	nop
  412578:	stp	x29, x30, [sp, #-48]!
  41257c:	mov	x29, sp
  412580:	stp	x19, x20, [sp, #16]
  412584:	ldr	x19, [x0, #72]
  412588:	stp	x21, x22, [sp, #32]
  41258c:	add	x22, x0, #0x38
  412590:	cmp	x19, x22
  412594:	b.eq	4125c8 <ferror@plt+0xfc28>  // b.none
  412598:	mov	x21, x1
  41259c:	mov	x20, x2
  4125a0:	b	4125b4 <ferror@plt+0xfc14>
  4125a4:	b.eq	4125cc <ferror@plt+0xfc2c>  // b.none
  4125a8:	ldr	x19, [x19, #16]
  4125ac:	cmp	x19, x22
  4125b0:	b.eq	4125c8 <ferror@plt+0xfc28>  // b.none
  4125b4:	ldr	x0, [x19, #32]
  4125b8:	mov	x1, x20
  4125bc:	blr	x21
  4125c0:	cmp	w0, #0x0
  4125c4:	b.le	4125a4 <ferror@plt+0xfc04>
  4125c8:	mov	x19, #0x0                   	// #0
  4125cc:	mov	x0, x19
  4125d0:	ldp	x19, x20, [sp, #16]
  4125d4:	ldp	x21, x22, [sp, #32]
  4125d8:	ldp	x29, x30, [sp], #48
  4125dc:	ret
  4125e0:	stp	x29, x30, [sp, #-64]!
  4125e4:	mov	x29, sp
  4125e8:	stp	x19, x20, [sp, #16]
  4125ec:	ldr	x19, [x0, #72]
  4125f0:	str	x23, [sp, #48]
  4125f4:	add	x23, x0, #0x38
  4125f8:	cmp	x19, x23
  4125fc:	b.eq	412640 <ferror@plt+0xfca0>  // b.none
  412600:	mov	x20, #0x0                   	// #0
  412604:	stp	x21, x22, [sp, #32]
  412608:	mov	x21, x1
  41260c:	mov	x22, x2
  412610:	b	412628 <ferror@plt+0xfc88>
  412614:	b.eq	412658 <ferror@plt+0xfcb8>  // b.none
  412618:	ldr	x19, [x19, #16]
  41261c:	add	x20, x20, #0x1
  412620:	cmp	x19, x23
  412624:	b.eq	41263c <ferror@plt+0xfc9c>  // b.none
  412628:	ldr	x0, [x19, #32]
  41262c:	mov	x1, x22
  412630:	blr	x21
  412634:	cmp	w0, #0x0
  412638:	b.le	412614 <ferror@plt+0xfc74>
  41263c:	ldp	x21, x22, [sp, #32]
  412640:	mov	x20, #0xffffffffffffffff    	// #-1
  412644:	mov	x0, x20
  412648:	ldp	x19, x20, [sp, #16]
  41264c:	ldr	x23, [sp, #48]
  412650:	ldp	x29, x30, [sp], #64
  412654:	ret
  412658:	mov	x0, x20
  41265c:	ldp	x19, x20, [sp, #16]
  412660:	ldp	x21, x22, [sp, #32]
  412664:	ldr	x23, [sp, #48]
  412668:	ldp	x29, x30, [sp], #64
  41266c:	ret
  412670:	stp	x29, x30, [sp, #-64]!
  412674:	cmp	x2, x3
  412678:	mov	x29, sp
  41267c:	ldr	x5, [x0, #96]
  412680:	stp	x19, x20, [sp, #16]
  412684:	ccmp	x5, x3, #0x0, ls  // ls = plast
  412688:	b.cc	412750 <ferror@plt+0xfdb0>  // b.lo, b.ul, b.last
  41268c:	mov	x20, x2
  412690:	subs	x3, x3, x2
  412694:	b.eq	412704 <ferror@plt+0xfd64>  // b.none
  412698:	stp	x21, x22, [sp, #32]
  41269c:	mov	x22, x1
  4126a0:	sub	x1, x5, #0x1
  4126a4:	str	x23, [sp, #48]
  4126a8:	mov	x23, x4
  4126ac:	cmp	x2, x1, lsr #1
  4126b0:	b.hi	412714 <ferror@plt+0xfd74>  // b.pmore
  4126b4:	ldr	x19, [x0, #72]
  4126b8:	cbz	x2, 4126cc <ferror@plt+0xfd2c>
  4126bc:	mov	x0, x2
  4126c0:	subs	x0, x0, #0x1
  4126c4:	ldr	x19, [x19, #16]
  4126c8:	b.ne	4126c0 <ferror@plt+0xfd20>  // b.any
  4126cc:	add	x21, x3, x20
  4126d0:	b	4126e8 <ferror@plt+0xfd48>
  4126d4:	b.eq	412738 <ferror@plt+0xfd98>  // b.none
  4126d8:	add	x20, x20, #0x1
  4126dc:	cmp	x21, x20
  4126e0:	ldr	x19, [x19, #16]
  4126e4:	b.eq	4126fc <ferror@plt+0xfd5c>  // b.none
  4126e8:	ldr	x0, [x19, #32]
  4126ec:	mov	x1, x23
  4126f0:	blr	x22
  4126f4:	cmp	w0, #0x0
  4126f8:	b.le	4126d4 <ferror@plt+0xfd34>
  4126fc:	ldp	x21, x22, [sp, #32]
  412700:	ldr	x23, [sp, #48]
  412704:	mov	x0, #0xffffffffffffffff    	// #-1
  412708:	ldp	x19, x20, [sp, #16]
  41270c:	ldp	x29, x30, [sp], #64
  412710:	ret
  412714:	mvn	x2, x2
  412718:	adds	x2, x2, x5
  41271c:	ldr	x19, [x0, #80]
  412720:	b.eq	4126cc <ferror@plt+0xfd2c>  // b.none
  412724:	nop
  412728:	subs	x2, x2, #0x1
  41272c:	ldr	x19, [x19, #24]
  412730:	b.ne	412728 <ferror@plt+0xfd88>  // b.any
  412734:	b	4126cc <ferror@plt+0xfd2c>
  412738:	mov	x0, x20
  41273c:	ldp	x19, x20, [sp, #16]
  412740:	ldp	x21, x22, [sp, #32]
  412744:	ldr	x23, [sp, #48]
  412748:	ldp	x29, x30, [sp], #64
  41274c:	ret
  412750:	stp	x21, x22, [sp, #32]
  412754:	str	x23, [sp, #48]
  412758:	bl	4026d0 <abort@plt>
  41275c:	nop
  412760:	stp	x29, x30, [sp, #-48]!
  412764:	mov	x29, sp
  412768:	ldr	x5, [x0, #96]
  41276c:	stp	x19, x20, [sp, #16]
  412770:	cmp	x5, x3
  412774:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
  412778:	b.hi	41283c <ferror@plt+0xfe9c>  // b.pmore
  41277c:	subs	x20, x3, x2
  412780:	b.eq	4127f0 <ferror@plt+0xfe50>  // b.none
  412784:	stp	x21, x22, [sp, #32]
  412788:	mov	x21, x1
  41278c:	sub	x1, x5, #0x1
  412790:	mov	x22, x4
  412794:	cmp	x2, x1, lsr #1
  412798:	b.hi	412804 <ferror@plt+0xfe64>  // b.pmore
  41279c:	ldr	x19, [x0, #72]
  4127a0:	cbz	x2, 4127d8 <ferror@plt+0xfe38>
  4127a4:	nop
  4127a8:	subs	x2, x2, #0x1
  4127ac:	ldr	x19, [x19, #16]
  4127b0:	b.ne	4127a8 <ferror@plt+0xfe08>  // b.any
  4127b4:	ldr	x0, [x19, #32]
  4127b8:	mov	x1, x22
  4127bc:	blr	x21
  4127c0:	cmp	w0, #0x0
  4127c4:	b.gt	4127ec <ferror@plt+0xfe4c>
  4127c8:	b.eq	412828 <ferror@plt+0xfe88>  // b.none
  4127cc:	subs	x20, x20, #0x1
  4127d0:	ldr	x19, [x19, #16]
  4127d4:	b.eq	4127ec <ferror@plt+0xfe4c>  // b.none
  4127d8:	ldr	x0, [x19, #32]
  4127dc:	mov	x1, x22
  4127e0:	blr	x21
  4127e4:	cmp	w0, #0x0
  4127e8:	b.le	4127c8 <ferror@plt+0xfe28>
  4127ec:	ldp	x21, x22, [sp, #32]
  4127f0:	mov	x19, #0x0                   	// #0
  4127f4:	mov	x0, x19
  4127f8:	ldp	x19, x20, [sp, #16]
  4127fc:	ldp	x29, x30, [sp], #48
  412800:	ret
  412804:	mvn	x2, x2
  412808:	adds	x2, x2, x5
  41280c:	ldr	x19, [x0, #80]
  412810:	b.eq	4127d8 <ferror@plt+0xfe38>  // b.none
  412814:	nop
  412818:	subs	x2, x2, #0x1
  41281c:	ldr	x19, [x19, #24]
  412820:	b.ne	412818 <ferror@plt+0xfe78>  // b.any
  412824:	b	4127d8 <ferror@plt+0xfe38>
  412828:	mov	x0, x19
  41282c:	ldp	x19, x20, [sp, #16]
  412830:	ldp	x21, x22, [sp, #32]
  412834:	ldp	x29, x30, [sp], #48
  412838:	ret
  41283c:	stp	x21, x22, [sp, #32]
  412840:	bl	4026d0 <abort@plt>
  412844:	nop
  412848:	cmp	x1, x2
  41284c:	b.hi	412928 <ferror@plt+0xff88>  // b.pmore
  412850:	ldr	x3, [x0, #96]
  412854:	cmp	x3, x2
  412858:	b.cc	412928 <ferror@plt+0xff88>  // b.lo, b.ul, b.last
  41285c:	sub	x3, x3, x2
  412860:	sub	x2, x2, x1
  412864:	cmp	x2, x3
  412868:	csel	x4, x2, x3, cs  // cs = hs, nlast
  41286c:	cmp	x1, x4
  412870:	ldr	x5, [x0]
  412874:	b.ls	4128b0 <ferror@plt+0xff10>  // b.plast
  412878:	add	x1, x0, #0x38
  41287c:	cbz	x3, 41288c <ferror@plt+0xfeec>
  412880:	subs	x3, x3, #0x1
  412884:	ldr	x1, [x1, #24]
  412888:	b.ne	412880 <ferror@plt+0xfee0>  // b.any
  41288c:	mov	x4, x1
  412890:	cbz	x2, 4128a4 <ferror@plt+0xff04>
  412894:	nop
  412898:	subs	x2, x2, #0x1
  41289c:	ldr	x4, [x4, #24]
  4128a0:	b.ne	412898 <ferror@plt+0xfef8>  // b.any
  4128a4:	stp	x5, x0, [x8]
  4128a8:	stp	x4, x1, [x8, #24]
  4128ac:	ret
  4128b0:	cmp	x2, x3
  4128b4:	ldr	x4, [x0, #72]
  4128b8:	b.ls	4128f0 <ferror@plt+0xff50>  // b.plast
  4128bc:	cbz	x1, 4128cc <ferror@plt+0xff2c>
  4128c0:	subs	x1, x1, #0x1
  4128c4:	ldr	x4, [x4, #16]
  4128c8:	b.ne	4128c0 <ferror@plt+0xff20>  // b.any
  4128cc:	add	x1, x0, #0x38
  4128d0:	cbz	x3, 4128a4 <ferror@plt+0xff04>
  4128d4:	nop
  4128d8:	subs	x3, x3, #0x1
  4128dc:	ldr	x1, [x1, #24]
  4128e0:	b.ne	4128d8 <ferror@plt+0xff38>  // b.any
  4128e4:	stp	x5, x0, [x8]
  4128e8:	stp	x4, x1, [x8, #24]
  4128ec:	ret
  4128f0:	cbz	x1, 412904 <ferror@plt+0xff64>
  4128f4:	nop
  4128f8:	subs	x1, x1, #0x1
  4128fc:	ldr	x4, [x4, #16]
  412900:	b.ne	4128f8 <ferror@plt+0xff58>  // b.any
  412904:	mov	x1, x4
  412908:	cbz	x2, 4128a4 <ferror@plt+0xff04>
  41290c:	nop
  412910:	subs	x2, x2, #0x1
  412914:	ldr	x1, [x1, #16]
  412918:	b.ne	412910 <ferror@plt+0xff70>  // b.any
  41291c:	stp	x5, x0, [x8]
  412920:	stp	x4, x1, [x8, #24]
  412924:	ret
  412928:	stp	x29, x30, [sp, #-16]!
  41292c:	mov	x29, sp
  412930:	bl	4026d0 <abort@plt>
  412934:	nop
  412938:	stp	x29, x30, [sp, #-48]!
  41293c:	mov	x29, sp
  412940:	str	x21, [sp, #32]
  412944:	mov	x21, x0
  412948:	ldr	x0, [x1, #32]
  41294c:	cmp	x0, x2
  412950:	b.eq	4129b8 <ferror@plt+0x10018>  // b.none
  412954:	stp	x19, x20, [sp, #16]
  412958:	mov	x19, x1
  41295c:	mov	x20, x2
  412960:	ldr	x1, [x21, #16]
  412964:	mov	x0, x2
  412968:	cbz	x1, 412970 <ferror@plt+0xffd0>
  41296c:	blr	x1
  412970:	ldr	x1, [x19, #8]
  412974:	cmp	x1, x0
  412978:	b.eq	4129b0 <ferror@plt+0x10010>  // b.none
  41297c:	ldp	x3, x4, [x21, #40]
  412980:	udiv	x2, x1, x4
  412984:	msub	x1, x2, x4, x1
  412988:	add	x2, x3, x1, lsl #3
  41298c:	ldr	x3, [x3, x1, lsl #3]
  412990:	cmp	x3, x19
  412994:	b.eq	4129cc <ferror@plt+0x1002c>  // b.none
  412998:	cbz	x3, 412a08 <ferror@plt+0x10068>
  41299c:	ldr	x1, [x3]
  4129a0:	cmp	x1, x19
  4129a4:	b.eq	4129c8 <ferror@plt+0x10028>  // b.none
  4129a8:	mov	x3, x1
  4129ac:	b	412998 <ferror@plt+0xfff8>
  4129b0:	str	x20, [x19, #32]
  4129b4:	ldp	x19, x20, [sp, #16]
  4129b8:	mov	w0, #0x0                   	// #0
  4129bc:	ldr	x21, [sp, #32]
  4129c0:	ldp	x29, x30, [sp], #48
  4129c4:	ret
  4129c8:	mov	x2, x3
  4129cc:	ldr	x1, [x19]
  4129d0:	str	x1, [x2]
  4129d4:	str	x0, [x19, #8]
  4129d8:	str	x20, [x19, #32]
  4129dc:	ldp	x2, x3, [x21, #40]
  4129e0:	ldr	x21, [sp, #32]
  4129e4:	udiv	x1, x0, x3
  4129e8:	msub	x0, x1, x3, x0
  4129ec:	ldr	x1, [x2, x0, lsl #3]
  4129f0:	str	x1, [x19]
  4129f4:	str	x19, [x2, x0, lsl #3]
  4129f8:	mov	w0, #0x0                   	// #0
  4129fc:	ldp	x19, x20, [sp, #16]
  412a00:	ldp	x29, x30, [sp], #48
  412a04:	ret
  412a08:	bl	4026d0 <abort@plt>
  412a0c:	nop
  412a10:	stp	x29, x30, [sp, #-80]!
  412a14:	mov	x29, sp
  412a18:	stp	x21, x22, [sp, #32]
  412a1c:	mov	x21, x0
  412a20:	ldr	x0, [x0, #96]
  412a24:	stp	x19, x20, [sp, #16]
  412a28:	stp	x23, x24, [sp, #48]
  412a2c:	cmp	x0, x2
  412a30:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
  412a34:	stp	x25, x26, [sp, #64]
  412a38:	b.hi	412bfc <ferror@plt+0x1025c>  // b.pmore
  412a3c:	mov	x23, x1
  412a40:	mov	x22, x2
  412a44:	ldr	x1, [x21, #16]
  412a48:	mov	x25, x3
  412a4c:	mov	x20, x3
  412a50:	cbz	x1, 412a60 <ferror@plt+0x100c0>
  412a54:	mov	x0, x3
  412a58:	blr	x1
  412a5c:	mov	x20, x0
  412a60:	ldp	x3, x1, [x21, #40]
  412a64:	ldrb	w2, [x21, #32]
  412a68:	ldr	x24, [x21, #8]
  412a6c:	udiv	x0, x20, x1
  412a70:	msub	x0, x0, x1, x20
  412a74:	ldr	x19, [x3, x0, lsl #3]
  412a78:	cbnz	w2, 412adc <ferror@plt+0x1013c>
  412a7c:	cbnz	x19, 412abc <ferror@plt+0x1011c>
  412a80:	mov	x0, #0xffffffffffffffff    	// #-1
  412a84:	ldp	x19, x20, [sp, #16]
  412a88:	ldp	x21, x22, [sp, #32]
  412a8c:	ldp	x23, x24, [sp, #48]
  412a90:	ldp	x25, x26, [sp, #64]
  412a94:	ldp	x29, x30, [sp], #80
  412a98:	ret
  412a9c:	ldr	x1, [x19, #32]
  412aa0:	cbz	x24, 412acc <ferror@plt+0x1012c>
  412aa4:	mov	x0, x25
  412aa8:	blr	x24
  412aac:	and	w0, w0, #0xff
  412ab0:	cbnz	w0, 412bf4 <ferror@plt+0x10254>
  412ab4:	ldr	x19, [x19]
  412ab8:	cbz	x19, 412a80 <ferror@plt+0x100e0>
  412abc:	ldr	x0, [x19, #8]
  412ac0:	cmp	x0, x20
  412ac4:	b.ne	412ab4 <ferror@plt+0x10114>  // b.any
  412ac8:	b	412a9c <ferror@plt+0x100fc>
  412acc:	cmp	x25, x1
  412ad0:	cset	w0, eq  // eq = none
  412ad4:	cbz	w0, 412ab4 <ferror@plt+0x10114>
  412ad8:	b	412bf4 <ferror@plt+0x10254>
  412adc:	cbz	x19, 412a80 <ferror@plt+0x100e0>
  412ae0:	mov	x26, #0x0                   	// #0
  412ae4:	b	412af0 <ferror@plt+0x10150>
  412ae8:	ldr	x19, [x19]
  412aec:	cbz	x19, 412b28 <ferror@plt+0x10188>
  412af0:	ldr	x0, [x19, #8]
  412af4:	cmp	x0, x20
  412af8:	b.ne	412ae8 <ferror@plt+0x10148>  // b.any
  412afc:	ldr	x1, [x19, #32]
  412b00:	cbz	x24, 412b74 <ferror@plt+0x101d4>
  412b04:	mov	x0, x25
  412b08:	blr	x24
  412b0c:	and	w0, w0, #0xff
  412b10:	cbz	w0, 412ae8 <ferror@plt+0x10148>
  412b14:	cbnz	x26, 412b80 <ferror@plt+0x101e0>
  412b18:	mov	x26, x19
  412b1c:	ldr	x19, [x19]
  412b20:	cbnz	x19, 412af0 <ferror@plt+0x10150>
  412b24:	nop
  412b28:	cbz	x26, 412a80 <ferror@plt+0x100e0>
  412b2c:	ldr	x3, [x26, #24]
  412b30:	add	x21, x21, #0x38
  412b34:	mov	x0, #0x0                   	// #0
  412b38:	cmp	x21, x3
  412b3c:	b.eq	412b50 <ferror@plt+0x101b0>  // b.none
  412b40:	ldr	x3, [x3, #24]
  412b44:	add	x0, x0, #0x1
  412b48:	cmp	x3, x21
  412b4c:	b.ne	412b40 <ferror@plt+0x101a0>  // b.any
  412b50:	cmp	x23, x0
  412b54:	ccmp	x22, x0, #0x0, ls  // ls = plast
  412b58:	b.ls	412a80 <ferror@plt+0x100e0>  // b.plast
  412b5c:	ldp	x19, x20, [sp, #16]
  412b60:	ldp	x21, x22, [sp, #32]
  412b64:	ldp	x23, x24, [sp, #48]
  412b68:	ldp	x25, x26, [sp, #64]
  412b6c:	ldp	x29, x30, [sp], #80
  412b70:	ret
  412b74:	cmp	x25, x1
  412b78:	cset	w0, eq  // eq = none
  412b7c:	b	412b10 <ferror@plt+0x10170>
  412b80:	mov	x0, x23
  412b84:	ldr	x19, [x21, #72]
  412b88:	cbz	x23, 412b9c <ferror@plt+0x101fc>
  412b8c:	nop
  412b90:	subs	x0, x0, #0x1
  412b94:	ldr	x19, [x19, #16]
  412b98:	b.ne	412b90 <ferror@plt+0x101f0>  // b.any
  412b9c:	cmp	x23, x22
  412ba0:	b.cc	412bb8 <ferror@plt+0x10218>  // b.lo, b.ul, b.last
  412ba4:	b	412a80 <ferror@plt+0x100e0>
  412ba8:	add	x23, x23, #0x1
  412bac:	cmp	x22, x23
  412bb0:	ldr	x19, [x19, #16]
  412bb4:	b.eq	412a80 <ferror@plt+0x100e0>  // b.none
  412bb8:	ldr	x0, [x19, #8]
  412bbc:	cmp	x0, x20
  412bc0:	b.ne	412ba8 <ferror@plt+0x10208>  // b.any
  412bc4:	ldr	x1, [x19, #32]
  412bc8:	cbz	x24, 412be4 <ferror@plt+0x10244>
  412bcc:	mov	x0, x25
  412bd0:	blr	x24
  412bd4:	and	w0, w0, #0xff
  412bd8:	cbz	w0, 412ba8 <ferror@plt+0x10208>
  412bdc:	mov	x0, x23
  412be0:	b	412a84 <ferror@plt+0x100e4>
  412be4:	cmp	x25, x1
  412be8:	cset	w0, eq  // eq = none
  412bec:	cbz	w0, 412ba8 <ferror@plt+0x10208>
  412bf0:	b	412bdc <ferror@plt+0x1023c>
  412bf4:	mov	x26, x19
  412bf8:	b	412b2c <ferror@plt+0x1018c>
  412bfc:	bl	4026d0 <abort@plt>
  412c00:	stp	x29, x30, [sp, #-96]!
  412c04:	cmp	x1, x2
  412c08:	mov	x29, sp
  412c0c:	str	x27, [sp, #80]
  412c10:	ldr	x27, [x0, #96]
  412c14:	stp	x19, x20, [sp, #16]
  412c18:	stp	x21, x22, [sp, #32]
  412c1c:	ccmp	x27, x2, #0x0, ls  // ls = plast
  412c20:	stp	x23, x24, [sp, #48]
  412c24:	stp	x25, x26, [sp, #64]
  412c28:	b.cc	412e80 <ferror@plt+0x104e0>  // b.lo, b.ul, b.last
  412c2c:	mov	x25, x1
  412c30:	mov	x24, x0
  412c34:	ldr	x1, [x0, #16]
  412c38:	mov	x26, x2
  412c3c:	mov	x23, x3
  412c40:	mov	x21, x3
  412c44:	cbz	x1, 412c54 <ferror@plt+0x102b4>
  412c48:	mov	x0, x3
  412c4c:	blr	x1
  412c50:	mov	x21, x0
  412c54:	ldp	x3, x1, [x24, #40]
  412c58:	ldrb	w2, [x24, #32]
  412c5c:	ldr	x22, [x24, #8]
  412c60:	udiv	x0, x21, x1
  412c64:	msub	x0, x0, x1, x21
  412c68:	ldr	x19, [x3, x0, lsl #3]
  412c6c:	cbz	w2, 412d2c <ferror@plt+0x1038c>
  412c70:	mov	x20, #0x0                   	// #0
  412c74:	cbnz	x19, 412d00 <ferror@plt+0x10360>
  412c78:	cbz	x25, 412d60 <ferror@plt+0x103c0>
  412c7c:	ldr	x0, [x24, #72]
  412c80:	add	x1, x24, #0x38
  412c84:	cmp	x0, x1
  412c88:	b.ne	412ca4 <ferror@plt+0x10304>  // b.any
  412c8c:	b	412d60 <ferror@plt+0x103c0>
  412c90:	subs	x25, x25, #0x1
  412c94:	b.eq	412d60 <ferror@plt+0x103c0>  // b.none
  412c98:	ldr	x0, [x0, #16]
  412c9c:	cmp	x0, x1
  412ca0:	b.eq	412d60 <ferror@plt+0x103c0>  // b.none
  412ca4:	cmp	x0, x20
  412ca8:	b.ne	412c90 <ferror@plt+0x102f0>  // b.any
  412cac:	nop
  412cb0:	mov	x20, #0x0                   	// #0
  412cb4:	mov	x0, x20
  412cb8:	ldp	x19, x20, [sp, #16]
  412cbc:	ldp	x21, x22, [sp, #32]
  412cc0:	ldp	x23, x24, [sp, #48]
  412cc4:	ldp	x25, x26, [sp, #64]
  412cc8:	ldr	x27, [sp, #80]
  412ccc:	ldp	x29, x30, [sp], #96
  412cd0:	ret
  412cd4:	ldr	x1, [x19, #32]
  412cd8:	cbz	x22, 412d54 <ferror@plt+0x103b4>
  412cdc:	mov	x0, x23
  412ce0:	blr	x22
  412ce4:	and	w0, w0, #0xff
  412ce8:	cbz	w0, 412cf8 <ferror@plt+0x10358>
  412cec:	cbnz	x20, 412e10 <ferror@plt+0x10470>
  412cf0:	mov	x20, x19
  412cf4:	nop
  412cf8:	ldr	x19, [x19]
  412cfc:	cbz	x19, 412c78 <ferror@plt+0x102d8>
  412d00:	ldr	x4, [x19, #8]
  412d04:	cmp	x4, x21
  412d08:	b.ne	412cf8 <ferror@plt+0x10358>  // b.any
  412d0c:	b	412cd4 <ferror@plt+0x10334>
  412d10:	ldr	x1, [x19, #32]
  412d14:	cbz	x22, 412d44 <ferror@plt+0x103a4>
  412d18:	mov	x0, x23
  412d1c:	blr	x22
  412d20:	and	w0, w0, #0xff
  412d24:	cbnz	w0, 412e78 <ferror@plt+0x104d8>
  412d28:	ldr	x19, [x19]
  412d2c:	cbz	x19, 412da4 <ferror@plt+0x10404>
  412d30:	ldr	x4, [x19, #8]
  412d34:	cmp	x4, x21
  412d38:	b.eq	412d10 <ferror@plt+0x10370>  // b.none
  412d3c:	ldr	x19, [x19]
  412d40:	b	412d2c <ferror@plt+0x1038c>
  412d44:	cmp	x1, x23
  412d48:	cset	w0, eq  // eq = none
  412d4c:	cbz	w0, 412d28 <ferror@plt+0x10388>
  412d50:	b	412e78 <ferror@plt+0x104d8>
  412d54:	cmp	x1, x23
  412d58:	cset	w0, eq  // eq = none
  412d5c:	b	412ce8 <ferror@plt+0x10348>
  412d60:	ldr	x2, [x24, #96]
  412d64:	cmp	x2, x26
  412d68:	b.ls	412cb4 <ferror@plt+0x10314>  // b.plast
  412d6c:	ldr	x1, [x24, #80]
  412d70:	mvn	x0, x26
  412d74:	cmp	x1, x20
  412d78:	b.eq	412cb0 <ferror@plt+0x10310>  // b.none
  412d7c:	adds	x0, x0, x2
  412d80:	b.ne	412d90 <ferror@plt+0x103f0>  // b.any
  412d84:	b	412cb4 <ferror@plt+0x10314>
  412d88:	subs	x0, x0, #0x1
  412d8c:	b.eq	412cb4 <ferror@plt+0x10314>  // b.none
  412d90:	ldr	x1, [x1, #24]
  412d94:	cmp	x1, x20
  412d98:	b.ne	412d88 <ferror@plt+0x103e8>  // b.any
  412d9c:	mov	x20, #0x0                   	// #0
  412da0:	b	412cb4 <ferror@plt+0x10314>
  412da4:	mov	x20, #0x0                   	// #0
  412da8:	cbz	x25, 412dd0 <ferror@plt+0x10430>
  412dac:	ldr	x0, [x24, #72]
  412db0:	cmp	x20, x0
  412db4:	b.ne	412dc8 <ferror@plt+0x10428>  // b.any
  412db8:	b	412cb0 <ferror@plt+0x10310>
  412dbc:	ldr	x0, [x0, #16]
  412dc0:	cmp	x20, x0
  412dc4:	b.eq	412cb0 <ferror@plt+0x10310>  // b.none
  412dc8:	subs	x25, x25, #0x1
  412dcc:	b.ne	412dbc <ferror@plt+0x1041c>  // b.any
  412dd0:	cmp	x27, x26
  412dd4:	b.ls	412cb4 <ferror@plt+0x10314>  // b.plast
  412dd8:	ldr	x0, [x24, #80]
  412ddc:	mvn	x19, x26
  412de0:	cmp	x20, x0
  412de4:	b.eq	412cb0 <ferror@plt+0x10310>  // b.none
  412de8:	adds	x27, x19, x27
  412dec:	b.ne	412dfc <ferror@plt+0x1045c>  // b.any
  412df0:	b	412cb4 <ferror@plt+0x10314>
  412df4:	subs	x27, x27, #0x1
  412df8:	b.eq	412cb4 <ferror@plt+0x10314>  // b.none
  412dfc:	ldr	x0, [x0, #24]
  412e00:	cmp	x20, x0
  412e04:	b.ne	412df4 <ferror@plt+0x10454>  // b.any
  412e08:	mov	x20, #0x0                   	// #0
  412e0c:	b	412cb4 <ferror@plt+0x10314>
  412e10:	sub	x26, x26, x25
  412e14:	ldr	x20, [x24, #72]
  412e18:	cbz	x25, 412e2c <ferror@plt+0x1048c>
  412e1c:	nop
  412e20:	subs	x25, x25, #0x1
  412e24:	ldr	x20, [x20, #16]
  412e28:	b.ne	412e20 <ferror@plt+0x10480>  // b.any
  412e2c:	cbnz	x26, 412e40 <ferror@plt+0x104a0>
  412e30:	b	412cb0 <ferror@plt+0x10310>
  412e34:	subs	x26, x26, #0x1
  412e38:	ldr	x20, [x20, #16]
  412e3c:	b.eq	412cb0 <ferror@plt+0x10310>  // b.none
  412e40:	ldr	x0, [x20, #8]
  412e44:	cmp	x0, x21
  412e48:	b.ne	412e34 <ferror@plt+0x10494>  // b.any
  412e4c:	ldr	x1, [x20, #32]
  412e50:	cbz	x22, 412e68 <ferror@plt+0x104c8>
  412e54:	mov	x0, x23
  412e58:	blr	x22
  412e5c:	and	w0, w0, #0xff
  412e60:	cbz	w0, 412e34 <ferror@plt+0x10494>
  412e64:	b	412cb4 <ferror@plt+0x10314>
  412e68:	cmp	x1, x23
  412e6c:	cset	w0, eq  // eq = none
  412e70:	cbz	w0, 412e34 <ferror@plt+0x10494>
  412e74:	b	412cb4 <ferror@plt+0x10314>
  412e78:	mov	x20, x19
  412e7c:	b	412da8 <ferror@plt+0x10408>
  412e80:	bl	4026d0 <abort@plt>
  412e84:	nop
  412e88:	stp	x29, x30, [sp, #-48]!
  412e8c:	mov	x29, sp
  412e90:	ldr	x3, [x0, #96]
  412e94:	stp	x19, x20, [sp, #16]
  412e98:	str	x21, [sp, #32]
  412e9c:	cmp	x3, x1
  412ea0:	b.ls	412fac <ferror@plt+0x1060c>  // b.plast
  412ea4:	mov	x20, x0
  412ea8:	sub	x0, x3, #0x1
  412eac:	mov	x21, x2
  412eb0:	cmp	x1, x0, lsr #1
  412eb4:	b.hi	412f40 <ferror@plt+0x105a0>  // b.pmore
  412eb8:	ldr	x19, [x20, #72]
  412ebc:	cbz	x1, 412ecc <ferror@plt+0x1052c>
  412ec0:	subs	x1, x1, #0x1
  412ec4:	ldr	x19, [x19, #16]
  412ec8:	b.ne	412ec0 <ferror@plt+0x10520>  // b.any
  412ecc:	ldr	x0, [x19, #32]
  412ed0:	cmp	x0, x21
  412ed4:	b.eq	412f2c <ferror@plt+0x1058c>  // b.none
  412ed8:	ldr	x1, [x20, #16]
  412edc:	mov	x0, x21
  412ee0:	cbz	x1, 412ee8 <ferror@plt+0x10548>
  412ee4:	blr	x1
  412ee8:	ldr	x1, [x19, #8]
  412eec:	cmp	x1, x0
  412ef0:	b.eq	412f28 <ferror@plt+0x10588>  // b.none
  412ef4:	ldp	x3, x4, [x20, #40]
  412ef8:	udiv	x2, x1, x4
  412efc:	msub	x1, x2, x4, x1
  412f00:	add	x2, x3, x1, lsl #3
  412f04:	ldr	x1, [x3, x1, lsl #3]
  412f08:	cmp	x1, x19
  412f0c:	b.eq	412f70 <ferror@plt+0x105d0>  // b.none
  412f10:	cbz	x1, 412fac <ferror@plt+0x1060c>
  412f14:	ldr	x3, [x1]
  412f18:	cmp	x3, x19
  412f1c:	b.eq	412f6c <ferror@plt+0x105cc>  // b.none
  412f20:	mov	x1, x3
  412f24:	b	412f10 <ferror@plt+0x10570>
  412f28:	str	x21, [x19, #32]
  412f2c:	mov	x0, x19
  412f30:	ldp	x19, x20, [sp, #16]
  412f34:	ldr	x21, [sp, #32]
  412f38:	ldp	x29, x30, [sp], #48
  412f3c:	ret
  412f40:	mvn	x1, x1
  412f44:	adds	x1, x3, x1
  412f48:	ldr	x19, [x20, #80]
  412f4c:	b.eq	412ecc <ferror@plt+0x1052c>  // b.none
  412f50:	subs	x1, x1, #0x1
  412f54:	ldr	x19, [x19, #24]
  412f58:	b.eq	412ecc <ferror@plt+0x1052c>  // b.none
  412f5c:	subs	x1, x1, #0x1
  412f60:	ldr	x19, [x19, #24]
  412f64:	b.ne	412f50 <ferror@plt+0x105b0>  // b.any
  412f68:	b	412ecc <ferror@plt+0x1052c>
  412f6c:	mov	x2, x1
  412f70:	ldr	x1, [x19]
  412f74:	str	x1, [x2]
  412f78:	str	x0, [x19, #8]
  412f7c:	str	x21, [x19, #32]
  412f80:	ldr	x21, [sp, #32]
  412f84:	ldp	x2, x3, [x20, #40]
  412f88:	udiv	x1, x0, x3
  412f8c:	msub	x0, x1, x3, x0
  412f90:	ldr	x1, [x2, x0, lsl #3]
  412f94:	str	x1, [x19]
  412f98:	str	x19, [x2, x0, lsl #3]
  412f9c:	mov	x0, x19
  412fa0:	ldp	x19, x20, [sp, #16]
  412fa4:	ldp	x29, x30, [sp], #48
  412fa8:	ret
  412fac:	bl	4026d0 <abort@plt>
  412fb0:	ldr	x2, [x0, #96]
  412fb4:	cmp	x2, x1
  412fb8:	b.ls	413014 <ferror@plt+0x10674>  // b.plast
  412fbc:	sub	x3, x2, #0x1
  412fc0:	cmp	x1, x3, lsr #1
  412fc4:	b.hi	412fe4 <ferror@plt+0x10644>  // b.pmore
  412fc8:	ldr	x0, [x0, #72]
  412fcc:	cbz	x1, 412fdc <ferror@plt+0x1063c>
  412fd0:	subs	x1, x1, #0x1
  412fd4:	ldr	x0, [x0, #16]
  412fd8:	b.ne	412fd0 <ferror@plt+0x10630>  // b.any
  412fdc:	ldr	x0, [x0, #32]
  412fe0:	ret
  412fe4:	mvn	x1, x1
  412fe8:	adds	x1, x1, x2
  412fec:	ldr	x0, [x0, #80]
  412ff0:	b.eq	412fdc <ferror@plt+0x1063c>  // b.none
  412ff4:	nop
  412ff8:	subs	x1, x1, #0x1
  412ffc:	ldr	x0, [x0, #24]
  413000:	b.eq	412fdc <ferror@plt+0x1063c>  // b.none
  413004:	subs	x1, x1, #0x1
  413008:	ldr	x0, [x0, #24]
  41300c:	b.ne	412ff8 <ferror@plt+0x10658>  // b.any
  413010:	b	412fdc <ferror@plt+0x1063c>
  413014:	stp	x29, x30, [sp, #-16]!
  413018:	mov	x29, sp
  41301c:	bl	4026d0 <abort@plt>
  413020:	stp	x29, x30, [sp, #-64]!
  413024:	mov	x29, sp
  413028:	stp	x19, x20, [sp, #16]
  41302c:	ldr	x19, [x0, #72]
  413030:	stp	x21, x22, [sp, #32]
  413034:	add	x22, x0, #0x38
  413038:	ldr	x21, [x0, #24]
  41303c:	str	x23, [sp, #48]
  413040:	cmp	x19, x22
  413044:	mov	x23, x0
  413048:	b.eq	413074 <ferror@plt+0x106d4>  // b.none
  41304c:	nop
  413050:	mov	x20, x19
  413054:	ldr	x19, [x19, #16]
  413058:	cbz	x21, 413064 <ferror@plt+0x106c4>
  41305c:	ldr	x0, [x20, #32]
  413060:	blr	x21
  413064:	mov	x0, x20
  413068:	bl	4027c0 <free@plt>
  41306c:	cmp	x19, x22
  413070:	b.ne	413050 <ferror@plt+0x106b0>  // b.any
  413074:	ldr	x0, [x23, #40]
  413078:	bl	4027c0 <free@plt>
  41307c:	mov	x0, x23
  413080:	ldp	x19, x20, [sp, #16]
  413084:	ldp	x21, x22, [sp, #32]
  413088:	ldr	x23, [sp, #48]
  41308c:	ldp	x29, x30, [sp], #64
  413090:	b	4027c0 <free@plt>
  413094:	nop
  413098:	stp	x29, x30, [sp, #-32]!
  41309c:	mov	x29, sp
  4130a0:	ldr	x3, [x0, #96]
  4130a4:	str	x19, [sp, #16]
  4130a8:	cmp	x3, x1
  4130ac:	b.ls	413188 <ferror@plt+0x107e8>  // b.plast
  4130b0:	sub	x4, x3, #0x1
  4130b4:	add	x2, x0, #0x38
  4130b8:	cmp	x1, x4, lsr #1
  4130bc:	b.hi	413158 <ferror@plt+0x107b8>  // b.pmore
  4130c0:	cbz	x1, 4130d4 <ferror@plt+0x10734>
  4130c4:	nop
  4130c8:	subs	x1, x1, #0x1
  4130cc:	ldr	x2, [x2, #16]
  4130d0:	b.ne	4130c8 <ferror@plt+0x10728>  // b.any
  4130d4:	ldr	x19, [x2, #16]
  4130d8:	ldr	x1, [x19, #16]
  4130dc:	str	x1, [x2, #16]
  4130e0:	str	x2, [x1, #24]
  4130e4:	ldp	x2, x3, [x0, #40]
  4130e8:	ldr	x5, [x19, #8]
  4130ec:	udiv	x1, x5, x3
  4130f0:	msub	x1, x1, x3, x5
  4130f4:	add	x3, x2, x1, lsl #3
  4130f8:	ldr	x1, [x2, x1, lsl #3]
  4130fc:	cmp	x1, x19
  413100:	b.eq	413124 <ferror@plt+0x10784>  // b.none
  413104:	nop
  413108:	cbz	x1, 413188 <ferror@plt+0x107e8>
  41310c:	ldr	x2, [x1]
  413110:	cmp	x2, x19
  413114:	b.eq	413120 <ferror@plt+0x10780>  // b.none
  413118:	mov	x1, x2
  41311c:	b	413108 <ferror@plt+0x10768>
  413120:	mov	x3, x1
  413124:	ldr	x1, [x19]
  413128:	str	x1, [x3]
  41312c:	ldr	x1, [x0, #24]
  413130:	str	x4, [x0, #96]
  413134:	cbz	x1, 413140 <ferror@plt+0x107a0>
  413138:	ldr	x0, [x19, #32]
  41313c:	blr	x1
  413140:	mov	x0, x19
  413144:	bl	4027c0 <free@plt>
  413148:	mov	w0, #0x1                   	// #1
  41314c:	ldr	x19, [sp, #16]
  413150:	ldp	x29, x30, [sp], #32
  413154:	ret
  413158:	mvn	x1, x1
  41315c:	adds	x1, x3, x1
  413160:	b.eq	413174 <ferror@plt+0x107d4>  // b.none
  413164:	nop
  413168:	subs	x1, x1, #0x1
  41316c:	ldr	x2, [x2, #24]
  413170:	b.ne	413168 <ferror@plt+0x107c8>  // b.any
  413174:	ldr	x19, [x2, #24]
  413178:	ldr	x1, [x19, #24]
  41317c:	str	x1, [x2, #24]
  413180:	str	x2, [x1, #16]
  413184:	b	4130e4 <ferror@plt+0x10744>
  413188:	bl	4026d0 <abort@plt>
  41318c:	nop
  413190:	stp	x29, x30, [sp, #-32]!
  413194:	mov	x29, sp
  413198:	ldp	x2, x3, [x0, #40]
  41319c:	ldr	x4, [x1, #8]
  4131a0:	str	x19, [sp, #16]
  4131a4:	mov	x19, x1
  4131a8:	udiv	x1, x4, x3
  4131ac:	msub	x1, x1, x3, x4
  4131b0:	add	x4, x2, x1, lsl #3
  4131b4:	ldr	x2, [x2, x1, lsl #3]
  4131b8:	cmp	x2, x19
  4131bc:	b.eq	4131dc <ferror@plt+0x1083c>  // b.none
  4131c0:	cbz	x2, 413224 <ferror@plt+0x10884>
  4131c4:	ldr	x3, [x2]
  4131c8:	cmp	x3, x19
  4131cc:	b.eq	4131d8 <ferror@plt+0x10838>  // b.none
  4131d0:	mov	x2, x3
  4131d4:	b	4131c0 <ferror@plt+0x10820>
  4131d8:	mov	x4, x2
  4131dc:	ldp	x2, x3, [x19, #16]
  4131e0:	ldr	x1, [x19]
  4131e4:	str	x1, [x4]
  4131e8:	ldr	x1, [x0, #96]
  4131ec:	ldr	x4, [x0, #24]
  4131f0:	str	x2, [x3, #16]
  4131f4:	str	x3, [x2, #24]
  4131f8:	sub	x1, x1, #0x1
  4131fc:	str	x1, [x0, #96]
  413200:	cbz	x4, 41320c <ferror@plt+0x1086c>
  413204:	ldr	x0, [x19, #32]
  413208:	blr	x4
  41320c:	mov	x0, x19
  413210:	bl	4027c0 <free@plt>
  413214:	mov	w0, #0x1                   	// #1
  413218:	ldr	x19, [sp, #16]
  41321c:	ldp	x29, x30, [sp], #32
  413220:	ret
  413224:	bl	4026d0 <abort@plt>
  413228:	stp	x29, x30, [sp, #-64]!
  41322c:	mov	x29, sp
  413230:	stp	x19, x20, [sp, #16]
  413234:	ldr	x19, [x0, #72]
  413238:	stp	x21, x22, [sp, #32]
  41323c:	add	x22, x0, #0x38
  413240:	cmp	x19, x22
  413244:	b.eq	413284 <ferror@plt+0x108e4>  // b.none
  413248:	mov	x21, x1
  41324c:	mov	x20, x2
  413250:	str	x23, [sp, #48]
  413254:	mov	x23, x0
  413258:	b	41326c <ferror@plt+0x108cc>
  41325c:	b.eq	413298 <ferror@plt+0x108f8>  // b.none
  413260:	ldr	x19, [x19, #16]
  413264:	cmp	x19, x22
  413268:	b.eq	413280 <ferror@plt+0x108e0>  // b.none
  41326c:	ldr	x0, [x19, #32]
  413270:	mov	x1, x20
  413274:	blr	x21
  413278:	cmp	w0, #0x0
  41327c:	b.le	41325c <ferror@plt+0x108bc>
  413280:	ldr	x23, [sp, #48]
  413284:	mov	w0, #0x0                   	// #0
  413288:	ldp	x19, x20, [sp, #16]
  41328c:	ldp	x21, x22, [sp, #32]
  413290:	ldp	x29, x30, [sp], #64
  413294:	ret
  413298:	mov	x1, x19
  41329c:	mov	x0, x23
  4132a0:	ldp	x19, x20, [sp, #16]
  4132a4:	ldp	x21, x22, [sp, #32]
  4132a8:	ldr	x23, [sp, #48]
  4132ac:	ldp	x29, x30, [sp], #64
  4132b0:	b	413190 <ferror@plt+0x107f0>
  4132b4:	nop
  4132b8:	stp	x29, x30, [sp, #-32]!
  4132bc:	mov	x3, x1
  4132c0:	mov	x1, #0x0                   	// #0
  4132c4:	mov	x29, sp
  4132c8:	ldr	x2, [x0, #96]
  4132cc:	str	x19, [sp, #16]
  4132d0:	mov	x19, x0
  4132d4:	bl	412c00 <ferror@plt+0x10260>
  4132d8:	cbz	x0, 4132f0 <ferror@plt+0x10950>
  4132dc:	mov	x1, x0
  4132e0:	mov	x0, x19
  4132e4:	ldr	x19, [sp, #16]
  4132e8:	ldp	x29, x30, [sp], #32
  4132ec:	b	413190 <ferror@plt+0x107f0>
  4132f0:	mov	w0, #0x0                   	// #0
  4132f4:	ldr	x19, [sp, #16]
  4132f8:	ldp	x29, x30, [sp], #32
  4132fc:	ret
  413300:	stp	x29, x30, [sp, #-80]!
  413304:	mov	x29, sp
  413308:	stp	x19, x20, [sp, #16]
  41330c:	mov	x19, x3
  413310:	mov	x20, x5
  413314:	stp	x21, x22, [sp, #32]
  413318:	mov	x21, x6
  41331c:	stp	x23, x24, [sp, #48]
  413320:	mov	x24, x1
  413324:	mov	x23, x2
  413328:	stp	x25, x26, [sp, #64]
  41332c:	mov	x25, x0
  413330:	and	w26, w4, #0xff
  413334:	mov	x0, #0x68                  	// #104
  413338:	bl	402530 <malloc@plt>
  41333c:	mov	x22, x0
  413340:	cbz	x0, 413428 <ferror@plt+0x10a88>
  413344:	stp	x25, x24, [x22]
  413348:	lsr	x0, x20, #1
  41334c:	adds	x0, x0, x20
  413350:	stp	x23, x19, [x22, #16]
  413354:	strb	w26, [x22, #32]
  413358:	b.cs	413488 <ferror@plt+0x10ae8>  // b.hs, b.nlast
  41335c:	cmp	x0, #0xa
  413360:	mov	x2, #0xa                   	// #10
  413364:	csel	x2, x0, x2, cs  // cs = hs, nlast
  413368:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x2878>
  41336c:	add	x1, x1, #0xb50
  413370:	add	x3, x1, #0x740
  413374:	mov	x0, #0xb                   	// #11
  413378:	b	413388 <ferror@plt+0x109e8>
  41337c:	cmp	x1, x3
  413380:	b.eq	413460 <ferror@plt+0x10ac0>  // b.none
  413384:	ldr	x0, [x1]
  413388:	add	x1, x1, #0x8
  41338c:	cmp	x2, x0
  413390:	b.hi	41337c <ferror@plt+0x109dc>  // b.pmore
  413394:	str	x0, [x22, #48]
  413398:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
  41339c:	cmp	x0, x1
  4133a0:	b.hi	413460 <ferror@plt+0x10ac0>  // b.pmore
  4133a4:	mov	x1, #0x8                   	// #8
  4133a8:	bl	402600 <calloc@plt>
  4133ac:	str	x0, [x22, #40]
  4133b0:	cbz	x0, 413460 <ferror@plt+0x10ac0>
  4133b4:	str	x20, [x22, #96]
  4133b8:	add	x23, x22, #0x38
  4133bc:	mov	x19, x23
  4133c0:	cbz	x20, 413420 <ferror@plt+0x10a80>
  4133c4:	mov	x24, #0x0                   	// #0
  4133c8:	mov	x25, x19
  4133cc:	mov	x0, #0x28                  	// #40
  4133d0:	bl	402530 <malloc@plt>
  4133d4:	mov	x19, x0
  4133d8:	cbz	x0, 413450 <ferror@plt+0x10ab0>
  4133dc:	ldr	x1, [x22, #16]
  4133e0:	ldr	x0, [x21, x24, lsl #3]
  4133e4:	str	x0, [x19, #32]
  4133e8:	add	x24, x24, #0x1
  4133ec:	cbz	x1, 4133f4 <ferror@plt+0x10a54>
  4133f0:	blr	x1
  4133f4:	ldp	x2, x3, [x22, #40]
  4133f8:	str	x0, [x19, #8]
  4133fc:	cmp	x24, x20
  413400:	udiv	x1, x0, x3
  413404:	msub	x0, x1, x3, x0
  413408:	ldr	x1, [x2, x0, lsl #3]
  41340c:	str	x1, [x19]
  413410:	str	x19, [x2, x0, lsl #3]
  413414:	str	x25, [x19, #24]
  413418:	str	x19, [x25, #16]
  41341c:	b.ne	4133c8 <ferror@plt+0x10a28>  // b.any
  413420:	str	x23, [x19, #16]
  413424:	str	x19, [x22, #80]
  413428:	mov	x0, x22
  41342c:	ldp	x19, x20, [sp, #16]
  413430:	ldp	x21, x22, [sp, #32]
  413434:	ldp	x23, x24, [sp, #48]
  413438:	ldp	x25, x26, [sp, #64]
  41343c:	ldp	x29, x30, [sp], #80
  413440:	ret
  413444:	mov	x0, x25
  413448:	ldr	x25, [x25, #24]
  41344c:	bl	4027c0 <free@plt>
  413450:	cmp	x23, x25
  413454:	b.ne	413444 <ferror@plt+0x10aa4>  // b.any
  413458:	ldr	x0, [x22, #40]
  41345c:	bl	4027c0 <free@plt>
  413460:	mov	x0, x22
  413464:	mov	x22, #0x0                   	// #0
  413468:	bl	4027c0 <free@plt>
  41346c:	mov	x0, x22
  413470:	ldp	x19, x20, [sp, #16]
  413474:	ldp	x21, x22, [sp, #32]
  413478:	ldp	x23, x24, [sp, #48]
  41347c:	ldp	x25, x26, [sp, #64]
  413480:	ldp	x29, x30, [sp], #80
  413484:	ret
  413488:	mov	x2, #0xffffffffffffffff    	// #-1
  41348c:	b	413368 <ferror@plt+0x109c8>
  413490:	stp	x29, x30, [sp, #-64]!
  413494:	mov	x29, sp
  413498:	stp	x19, x20, [sp, #16]
  41349c:	mov	x20, x3
  4134a0:	stp	x21, x22, [sp, #32]
  4134a4:	mov	x22, x1
  4134a8:	mov	x21, x2
  4134ac:	stp	x23, x24, [sp, #48]
  4134b0:	mov	x23, x0
  4134b4:	and	w24, w4, #0xff
  4134b8:	mov	x0, #0x68                  	// #104
  4134bc:	bl	402530 <malloc@plt>
  4134c0:	mov	x19, x0
  4134c4:	cbz	x0, 4134f8 <ferror@plt+0x10b58>
  4134c8:	mov	x0, #0xb                   	// #11
  4134cc:	stp	x23, x22, [x19]
  4134d0:	mov	x1, #0x8                   	// #8
  4134d4:	stp	x21, x20, [x19, #16]
  4134d8:	strb	w24, [x19, #32]
  4134dc:	str	x0, [x19, #48]
  4134e0:	bl	402600 <calloc@plt>
  4134e4:	str	x0, [x19, #40]
  4134e8:	cbz	x0, 413510 <ferror@plt+0x10b70>
  4134ec:	add	x0, x19, #0x38
  4134f0:	stp	x0, x0, [x19, #72]
  4134f4:	str	xzr, [x19, #96]
  4134f8:	mov	x0, x19
  4134fc:	ldp	x19, x20, [sp, #16]
  413500:	ldp	x21, x22, [sp, #32]
  413504:	ldp	x23, x24, [sp, #48]
  413508:	ldp	x29, x30, [sp], #64
  41350c:	ret
  413510:	mov	x0, x19
  413514:	mov	x19, #0x0                   	// #0
  413518:	bl	4027c0 <free@plt>
  41351c:	b	4134f8 <ferror@plt+0x10b58>
  413520:	stp	x29, x30, [sp, #-48]!
  413524:	mov	x29, sp
  413528:	stp	x19, x20, [sp, #16]
  41352c:	mov	x19, x0
  413530:	ldr	x0, [x0, #96]
  413534:	ldr	x20, [x19, #48]
  413538:	lsr	x1, x0, #1
  41353c:	adds	x1, x1, x0
  413540:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
  413544:	cmp	x20, x1
  413548:	b.cc	413558 <ferror@plt+0x10bb8>  // b.lo, b.ul, b.last
  41354c:	ldp	x19, x20, [sp, #16]
  413550:	ldp	x29, x30, [sp], #48
  413554:	ret
  413558:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  41355c:	add	x2, x2, #0xb50
  413560:	add	x0, x2, #0x740
  413564:	stp	x21, x22, [sp, #32]
  413568:	mov	x21, #0xb                   	// #11
  41356c:	b	41357c <ferror@plt+0x10bdc>
  413570:	cmp	x0, x2
  413574:	b.eq	4135e8 <ferror@plt+0x10c48>  // b.none
  413578:	ldr	x21, [x2]
  41357c:	add	x2, x2, #0x8
  413580:	cmp	x1, x21
  413584:	b.hi	413570 <ferror@plt+0x10bd0>  // b.pmore
  413588:	cmp	x20, x21
  41358c:	b.cs	4135e8 <ferror@plt+0x10c48>  // b.hs, b.nlast
  413590:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  413594:	cmp	x21, x0
  413598:	b.hi	4135e8 <ferror@plt+0x10c48>  // b.pmore
  41359c:	mov	x0, x21
  4135a0:	mov	x1, #0x8                   	// #8
  4135a4:	ldr	x22, [x19, #40]
  4135a8:	bl	402600 <calloc@plt>
  4135ac:	cbz	x0, 4135e8 <ferror@plt+0x10c48>
  4135b0:	cbz	x20, 4135f8 <ferror@plt+0x10c58>
  4135b4:	sub	x20, x20, #0x1
  4135b8:	ldr	x1, [x22, x20, lsl #3]
  4135bc:	cbz	x1, 4135b0 <ferror@plt+0x10c10>
  4135c0:	mov	x3, x1
  4135c4:	ldr	x1, [x1]
  4135c8:	ldr	x4, [x3, #8]
  4135cc:	udiv	x2, x4, x21
  4135d0:	msub	x2, x2, x21, x4
  4135d4:	ldr	x4, [x0, x2, lsl #3]
  4135d8:	str	x4, [x3]
  4135dc:	str	x3, [x0, x2, lsl #3]
  4135e0:	cbnz	x1, 4135c0 <ferror@plt+0x10c20>
  4135e4:	b	4135b0 <ferror@plt+0x10c10>
  4135e8:	ldp	x19, x20, [sp, #16]
  4135ec:	ldp	x21, x22, [sp, #32]
  4135f0:	ldp	x29, x30, [sp], #48
  4135f4:	ret
  4135f8:	stp	x0, x21, [x19, #40]
  4135fc:	mov	x0, x22
  413600:	ldp	x19, x20, [sp, #16]
  413604:	ldp	x21, x22, [sp, #32]
  413608:	ldp	x29, x30, [sp], #48
  41360c:	b	4027c0 <free@plt>
  413610:	stp	x29, x30, [sp, #-64]!
  413614:	mov	x29, sp
  413618:	stp	x19, x20, [sp, #16]
  41361c:	ldr	x20, [x0, #96]
  413620:	stp	x21, x22, [sp, #32]
  413624:	str	x23, [sp, #48]
  413628:	cmp	x20, x1
  41362c:	b.cc	413714 <ferror@plt+0x10d74>  // b.lo, b.ul, b.last
  413630:	mov	x22, x0
  413634:	mov	x19, x1
  413638:	mov	x23, x2
  41363c:	mov	x0, #0x28                  	// #40
  413640:	bl	402530 <malloc@plt>
  413644:	mov	x21, x0
  413648:	cbz	x0, 4136cc <ferror@plt+0x10d2c>
  41364c:	ldr	x1, [x22, #16]
  413650:	str	x23, [x21, #32]
  413654:	mov	x0, x23
  413658:	mov	x2, x20
  41365c:	cbz	x1, 413668 <ferror@plt+0x10cc8>
  413660:	blr	x1
  413664:	ldr	x2, [x22, #96]
  413668:	str	x0, [x21, #8]
  41366c:	ldp	x4, x5, [x22, #40]
  413670:	cmp	x19, x20, lsr #1
  413674:	add	x3, x22, #0x38
  413678:	udiv	x1, x0, x5
  41367c:	msub	x0, x1, x5, x0
  413680:	ldr	x1, [x4, x0, lsl #3]
  413684:	str	x1, [x21]
  413688:	str	x21, [x4, x0, lsl #3]
  41368c:	b.hi	4136e4 <ferror@plt+0x10d44>  // b.pmore
  413690:	cbz	x19, 4136a4 <ferror@plt+0x10d04>
  413694:	nop
  413698:	subs	x19, x19, #0x1
  41369c:	ldr	x3, [x3, #16]
  4136a0:	b.ne	413698 <ferror@plt+0x10cf8>  // b.any
  4136a4:	ldr	x0, [x3, #16]
  4136a8:	str	x0, [x21, #16]
  4136ac:	str	x3, [x21, #24]
  4136b0:	ldr	x0, [x21, #16]
  4136b4:	str	x21, [x0, #24]
  4136b8:	str	x21, [x3, #16]
  4136bc:	add	x0, x2, #0x1
  4136c0:	str	x0, [x22, #96]
  4136c4:	mov	x0, x22
  4136c8:	bl	413520 <ferror@plt+0x10b80>
  4136cc:	mov	x0, x21
  4136d0:	ldp	x19, x20, [sp, #16]
  4136d4:	ldp	x21, x22, [sp, #32]
  4136d8:	ldr	x23, [sp, #48]
  4136dc:	ldp	x29, x30, [sp], #64
  4136e0:	ret
  4136e4:	subs	x19, x20, x19
  4136e8:	b.eq	4136fc <ferror@plt+0x10d5c>  // b.none
  4136ec:	nop
  4136f0:	subs	x19, x19, #0x1
  4136f4:	ldr	x3, [x3, #24]
  4136f8:	b.ne	4136f0 <ferror@plt+0x10d50>  // b.any
  4136fc:	str	x3, [x21, #16]
  413700:	ldr	x0, [x3, #24]
  413704:	str	x0, [x21, #24]
  413708:	str	x21, [x0, #16]
  41370c:	str	x21, [x3, #24]
  413710:	b	4136bc <ferror@plt+0x10d1c>
  413714:	bl	4026d0 <abort@plt>
  413718:	stp	x29, x30, [sp, #-48]!
  41371c:	mov	x29, sp
  413720:	stp	x19, x20, [sp, #16]
  413724:	mov	x20, x2
  413728:	stp	x21, x22, [sp, #32]
  41372c:	mov	x21, x0
  413730:	mov	x22, x1
  413734:	mov	x0, #0x28                  	// #40
  413738:	bl	402530 <malloc@plt>
  41373c:	mov	x19, x0
  413740:	cbz	x0, 4137a0 <ferror@plt+0x10e00>
  413744:	ldr	x1, [x21, #16]
  413748:	str	x20, [x0, #32]
  41374c:	cbz	x1, 41375c <ferror@plt+0x10dbc>
  413750:	mov	x0, x20
  413754:	blr	x1
  413758:	mov	x20, x0
  41375c:	ldp	x4, x5, [x21, #40]
  413760:	mov	x0, x21
  413764:	ldr	x3, [x21, #96]
  413768:	ldr	x6, [x22, #16]
  41376c:	udiv	x1, x20, x5
  413770:	msub	x2, x1, x5, x20
  413774:	add	x1, x3, #0x1
  413778:	ldr	x3, [x4, x2, lsl #3]
  41377c:	stp	x3, x20, [x19]
  413780:	str	x19, [x4, x2, lsl #3]
  413784:	str	x6, [x19, #16]
  413788:	str	x22, [x19, #24]
  41378c:	ldr	x2, [x19, #16]
  413790:	str	x19, [x2, #24]
  413794:	str	x19, [x22, #16]
  413798:	str	x1, [x21, #96]
  41379c:	bl	413520 <ferror@plt+0x10b80>
  4137a0:	mov	x0, x19
  4137a4:	ldp	x19, x20, [sp, #16]
  4137a8:	ldp	x21, x22, [sp, #32]
  4137ac:	ldp	x29, x30, [sp], #48
  4137b0:	ret
  4137b4:	nop
  4137b8:	stp	x29, x30, [sp, #-48]!
  4137bc:	mov	x29, sp
  4137c0:	stp	x19, x20, [sp, #16]
  4137c4:	mov	x20, x2
  4137c8:	stp	x21, x22, [sp, #32]
  4137cc:	mov	x21, x0
  4137d0:	mov	x22, x1
  4137d4:	mov	x0, #0x28                  	// #40
  4137d8:	bl	402530 <malloc@plt>
  4137dc:	mov	x19, x0
  4137e0:	cbz	x0, 41383c <ferror@plt+0x10e9c>
  4137e4:	ldr	x1, [x21, #16]
  4137e8:	str	x20, [x0, #32]
  4137ec:	cbz	x1, 4137fc <ferror@plt+0x10e5c>
  4137f0:	mov	x0, x20
  4137f4:	blr	x1
  4137f8:	mov	x20, x0
  4137fc:	ldp	x5, x6, [x21, #40]
  413800:	mov	x0, x21
  413804:	ldr	x3, [x21, #96]
  413808:	ldr	x4, [x22, #24]
  41380c:	udiv	x1, x20, x6
  413810:	msub	x2, x1, x6, x20
  413814:	add	x1, x3, #0x1
  413818:	ldr	x3, [x5, x2, lsl #3]
  41381c:	stp	x3, x20, [x19]
  413820:	str	x19, [x5, x2, lsl #3]
  413824:	str	x22, [x19, #16]
  413828:	str	x4, [x19, #24]
  41382c:	str	x19, [x4, #16]
  413830:	str	x19, [x22, #24]
  413834:	str	x1, [x21, #96]
  413838:	bl	413520 <ferror@plt+0x10b80>
  41383c:	mov	x0, x19
  413840:	ldp	x19, x20, [sp, #16]
  413844:	ldp	x21, x22, [sp, #32]
  413848:	ldp	x29, x30, [sp], #48
  41384c:	ret
  413850:	stp	x29, x30, [sp, #-48]!
  413854:	mov	x29, sp
  413858:	stp	x19, x20, [sp, #16]
  41385c:	mov	x20, x0
  413860:	mov	x0, #0x28                  	// #40
  413864:	str	x21, [sp, #32]
  413868:	mov	x21, x1
  41386c:	bl	402530 <malloc@plt>
  413870:	mov	x19, x0
  413874:	cbz	x0, 4138d4 <ferror@plt+0x10f34>
  413878:	ldr	x2, [x20, #16]
  41387c:	str	x21, [x0, #32]
  413880:	cbz	x2, 413890 <ferror@plt+0x10ef0>
  413884:	mov	x0, x21
  413888:	blr	x2
  41388c:	mov	x21, x0
  413890:	ldp	x5, x6, [x20, #40]
  413894:	add	x7, x20, #0x38
  413898:	ldr	x3, [x20, #96]
  41389c:	mov	x0, x20
  4138a0:	ldr	x4, [x20, #80]
  4138a4:	udiv	x2, x21, x6
  4138a8:	msub	x1, x2, x6, x21
  4138ac:	add	x2, x3, #0x1
  4138b0:	ldr	x3, [x5, x1, lsl #3]
  4138b4:	stp	x3, x21, [x19]
  4138b8:	str	x19, [x5, x1, lsl #3]
  4138bc:	str	x7, [x19, #16]
  4138c0:	str	x4, [x19, #24]
  4138c4:	str	x19, [x4, #16]
  4138c8:	str	x19, [x20, #80]
  4138cc:	str	x2, [x20, #96]
  4138d0:	bl	413520 <ferror@plt+0x10b80>
  4138d4:	mov	x0, x19
  4138d8:	ldp	x19, x20, [sp, #16]
  4138dc:	ldr	x21, [sp, #32]
  4138e0:	ldp	x29, x30, [sp], #48
  4138e4:	ret
  4138e8:	stp	x29, x30, [sp, #-64]!
  4138ec:	mov	x29, sp
  4138f0:	stp	x19, x20, [sp, #16]
  4138f4:	mov	x20, x2
  4138f8:	ldr	x19, [x0, #72]
  4138fc:	stp	x21, x22, [sp, #32]
  413900:	add	x22, x0, #0x38
  413904:	str	x23, [sp, #48]
  413908:	cmp	x19, x22
  41390c:	mov	x23, x0
  413910:	b.eq	413958 <ferror@plt+0x10fb8>  // b.none
  413914:	mov	x21, x1
  413918:	b	413928 <ferror@plt+0x10f88>
  41391c:	ldr	x19, [x19, #16]
  413920:	cmp	x19, x22
  413924:	b.eq	413958 <ferror@plt+0x10fb8>  // b.none
  413928:	ldr	x0, [x19, #32]
  41392c:	mov	x1, x20
  413930:	blr	x21
  413934:	tbnz	w0, #31, 41391c <ferror@plt+0x10f7c>
  413938:	mov	x2, x20
  41393c:	mov	x1, x19
  413940:	mov	x0, x23
  413944:	ldp	x19, x20, [sp, #16]
  413948:	ldp	x21, x22, [sp, #32]
  41394c:	ldr	x23, [sp, #48]
  413950:	ldp	x29, x30, [sp], #64
  413954:	b	4137b8 <ferror@plt+0x10e18>
  413958:	mov	x1, x20
  41395c:	mov	x0, x23
  413960:	ldp	x19, x20, [sp, #16]
  413964:	ldp	x21, x22, [sp, #32]
  413968:	ldr	x23, [sp, #48]
  41396c:	ldp	x29, x30, [sp], #64
  413970:	b	413850 <ferror@plt+0x10eb0>
  413974:	nop
  413978:	stp	x29, x30, [sp, #-48]!
  41397c:	mov	x29, sp
  413980:	stp	x19, x20, [sp, #16]
  413984:	mov	x20, x0
  413988:	mov	x0, #0x28                  	// #40
  41398c:	str	x21, [sp, #32]
  413990:	mov	x21, x1
  413994:	bl	402530 <malloc@plt>
  413998:	mov	x19, x0
  41399c:	cbz	x0, 413a00 <ferror@plt+0x11060>
  4139a0:	ldr	x2, [x20, #16]
  4139a4:	str	x21, [x0, #32]
  4139a8:	cbz	x2, 4139b8 <ferror@plt+0x11018>
  4139ac:	mov	x0, x21
  4139b0:	blr	x2
  4139b4:	mov	x21, x0
  4139b8:	ldp	x4, x5, [x20, #40]
  4139bc:	add	x6, x20, #0x38
  4139c0:	ldr	x3, [x20, #96]
  4139c4:	mov	x0, x20
  4139c8:	ldr	x7, [x20, #72]
  4139cc:	udiv	x2, x21, x5
  4139d0:	msub	x1, x2, x5, x21
  4139d4:	add	x2, x3, #0x1
  4139d8:	ldr	x3, [x4, x1, lsl #3]
  4139dc:	stp	x3, x21, [x19]
  4139e0:	str	x19, [x4, x1, lsl #3]
  4139e4:	str	x7, [x19, #16]
  4139e8:	str	x6, [x19, #24]
  4139ec:	ldr	x1, [x19, #16]
  4139f0:	str	x19, [x1, #24]
  4139f4:	str	x19, [x20, #72]
  4139f8:	str	x2, [x20, #96]
  4139fc:	bl	413520 <ferror@plt+0x10b80>
  413a00:	mov	x0, x19
  413a04:	ldp	x19, x20, [sp, #16]
  413a08:	ldr	x21, [sp, #32]
  413a0c:	ldp	x29, x30, [sp], #48
  413a10:	ret
  413a14:	nop
  413a18:	adds	x0, x0, #0x10
  413a1c:	b.cs	413a7c <ferror@plt+0x110dc>  // b.hs, b.nlast
  413a20:	stp	x29, x30, [sp, #-16]!
  413a24:	mov	x29, sp
  413a28:	bl	402530 <malloc@plt>
  413a2c:	mov	x1, x0
  413a30:	mov	x0, #0x0                   	// #0
  413a34:	cbz	x1, 413a74 <ferror@plt+0x110d4>
  413a38:	add	x0, x1, #0x10
  413a3c:	mov	x2, #0xff00ff00ff00ff00    	// #-71777214294589696
  413a40:	movk	x2, #0xff01
  413a44:	mov	w4, #0xfb4a                	// #64330
  413a48:	movk	w4, #0x1415, lsl #16
  413a4c:	str	w4, [x1, #12]
  413a50:	umulh	x2, x0, x2
  413a54:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  413a58:	add	x3, x3, #0x2d8
  413a5c:	and	x4, x2, #0xffffffffffffff00
  413a60:	add	x2, x4, x2, lsr #8
  413a64:	sub	x2, x0, x2
  413a68:	ldr	x4, [x3, x2, lsl #3]
  413a6c:	str	x4, [x1]
  413a70:	str	x0, [x3, x2, lsl #3]
  413a74:	ldp	x29, x30, [sp], #16
  413a78:	ret
  413a7c:	mov	x0, #0x0                   	// #0
  413a80:	ret
  413a84:	nop
  413a88:	cbz	x0, 413aa0 <ferror@plt+0x11100>
  413a8c:	ldur	w2, [x0, #-4]
  413a90:	mov	w1, #0xfb4a                	// #64330
  413a94:	movk	w1, #0x1415, lsl #16
  413a98:	cmp	w2, w1
  413a9c:	b.eq	413aa4 <ferror@plt+0x11104>  // b.none
  413aa0:	ret
  413aa4:	mov	x1, #0xff00ff00ff00ff00    	// #-71777214294589696
  413aa8:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  413aac:	movk	x1, #0xff01
  413ab0:	add	x3, x2, #0x2d8
  413ab4:	umulh	x1, x0, x1
  413ab8:	and	x2, x1, #0xffffffffffffff00
  413abc:	add	x1, x2, x1, lsr #8
  413ac0:	sub	x2, x0, x1
  413ac4:	ldr	x1, [x3, x2, lsl #3]
  413ac8:	cbz	x1, 413aa0 <ferror@plt+0x11100>
  413acc:	cmp	x0, x1
  413ad0:	b.ne	413adc <ferror@plt+0x1113c>  // b.any
  413ad4:	b	413b04 <ferror@plt+0x11164>
  413ad8:	b.eq	413af0 <ferror@plt+0x11150>  // b.none
  413adc:	mov	x2, x1
  413ae0:	ldur	x1, [x1, #-16]
  413ae4:	cmp	x0, x1
  413ae8:	cbnz	x1, 413ad8 <ferror@plt+0x11138>
  413aec:	b	413aa0 <ferror@plt+0x11100>
  413af0:	sub	x2, x2, #0x10
  413af4:	ldur	x1, [x0, #-16]
  413af8:	str	x1, [x2]
  413afc:	sub	x0, x0, #0x10
  413b00:	b	4027c0 <free@plt>
  413b04:	add	x2, x3, x2, lsl #3
  413b08:	b	413af4 <ferror@plt+0x11154>
  413b0c:	nop
  413b10:	and	w5, w2, #0xff
  413b14:	and	w6, w1, #0xff
  413b18:	cmp	w5, w1, uxtb
  413b1c:	b.eq	413c10 <ferror@plt+0x11270>  // b.none
  413b20:	cbz	x3, 413c28 <ferror@plt+0x11288>
  413b24:	tst	x0, #0x7
  413b28:	add	x4, x0, x3
  413b2c:	b.ne	413b4c <ferror@plt+0x111ac>  // b.any
  413b30:	b	413b64 <ferror@plt+0x111c4>
  413b34:	add	x0, x0, #0x1
  413b38:	cmp	x0, x4
  413b3c:	sub	x3, x4, x0
  413b40:	b.eq	413b60 <ferror@plt+0x111c0>  // b.none
  413b44:	tst	x0, #0x7
  413b48:	b.eq	413b64 <ferror@plt+0x111c4>  // b.none
  413b4c:	ldrb	w3, [x0]
  413b50:	cmp	w3, w5
  413b54:	ccmp	w3, w6, #0x4, ne  // ne = any
  413b58:	b.ne	413b34 <ferror@plt+0x11194>  // b.any
  413b5c:	ret
  413b60:	mov	x3, #0x0                   	// #0
  413b64:	ubfiz	w4, w1, #8, #8
  413b68:	ubfiz	w7, w2, #8, #8
  413b6c:	and	w1, w1, #0xff
  413b70:	and	w2, w2, #0xff
  413b74:	orr	w1, w4, w1
  413b78:	orr	w2, w7, w2
  413b7c:	cmp	x3, #0x7
  413b80:	sxtw	x8, w1
  413b84:	sbfiz	x4, x1, #16, #32
  413b88:	sbfiz	x7, x2, #16, #32
  413b8c:	sxtw	x1, w2
  413b90:	orr	x4, x4, x8
  413b94:	orr	x7, x7, x1
  413b98:	orr	x4, x4, x4, lsl #32
  413b9c:	orr	x7, x7, x7, lsl #32
  413ba0:	b.ls	413c1c <ferror@plt+0x1127c>  // b.plast
  413ba4:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  413ba8:	movk	x8, #0xfeff
  413bac:	b	413bc0 <ferror@plt+0x11220>
  413bb0:	sub	x3, x3, #0x8
  413bb4:	add	x0, x0, #0x8
  413bb8:	cmp	x3, #0x7
  413bbc:	b.ls	413c1c <ferror@plt+0x1127c>  // b.plast
  413bc0:	ldr	x1, [x0]
  413bc4:	eor	x2, x1, x4
  413bc8:	eor	x1, x1, x7
  413bcc:	add	x10, x2, x8
  413bd0:	add	x9, x1, x8
  413bd4:	bic	x2, x10, x2
  413bd8:	bic	x1, x9, x1
  413bdc:	orr	x1, x2, x1
  413be0:	tst	x1, #0x8080808080808080
  413be4:	b.eq	413bb0 <ferror@plt+0x11210>  // b.none
  413be8:	add	x3, x0, x3
  413bec:	b	413bfc <ferror@plt+0x1125c>
  413bf0:	add	x0, x0, #0x1
  413bf4:	cmp	x0, x3
  413bf8:	b.eq	413c20 <ferror@plt+0x11280>  // b.none
  413bfc:	ldrb	w1, [x0]
  413c00:	cmp	w1, w6
  413c04:	ccmp	w1, w5, #0x4, ne  // ne = any
  413c08:	b.ne	413bf0 <ferror@plt+0x11250>  // b.any
  413c0c:	b	413b5c <ferror@plt+0x111bc>
  413c10:	mov	x2, x3
  413c14:	and	w1, w1, #0xff
  413c18:	b	402880 <memchr@plt>
  413c1c:	cbnz	x3, 413be8 <ferror@plt+0x11248>
  413c20:	mov	x0, #0x0                   	// #0
  413c24:	ret
  413c28:	mov	x3, #0x0                   	// #0
  413c2c:	b	413b64 <ferror@plt+0x111c4>
  413c30:	stp	x29, x30, [sp, #-48]!
  413c34:	mov	x29, sp
  413c38:	stp	x19, x20, [sp, #16]
  413c3c:	cbz	x0, 413d14 <ferror@plt+0x11374>
  413c40:	mov	x19, x0
  413c44:	mov	w1, #0x2f                  	// #47
  413c48:	bl	402680 <strrchr@plt>
  413c4c:	mov	x20, x0
  413c50:	cbz	x0, 413cb4 <ferror@plt+0x11314>
  413c54:	str	x21, [sp, #32]
  413c58:	add	x21, x0, #0x1
  413c5c:	sub	x0, x21, x19
  413c60:	cmp	x0, #0x6
  413c64:	b.le	413cd0 <ferror@plt+0x11330>
  413c68:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  413c6c:	sub	x0, x20, #0x6
  413c70:	add	x1, x1, #0x3b8
  413c74:	mov	x2, #0x7                   	// #7
  413c78:	bl	402590 <strncmp@plt>
  413c7c:	cbnz	w0, 413cd0 <ferror@plt+0x11330>
  413c80:	ldrb	w0, [x20, #1]
  413c84:	cmp	w0, #0x6c
  413c88:	b.ne	413cf0 <ferror@plt+0x11350>  // b.any
  413c8c:	ldrb	w0, [x21, #1]
  413c90:	cmp	w0, #0x74
  413c94:	b.ne	413cf0 <ferror@plt+0x11350>  // b.any
  413c98:	ldrb	w0, [x21, #2]
  413c9c:	cmp	w0, #0x2d
  413ca0:	b.ne	413cf0 <ferror@plt+0x11350>  // b.any
  413ca4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  413ca8:	add	x19, x20, #0x4
  413cac:	ldr	x21, [sp, #32]
  413cb0:	str	x19, [x0, #1080]
  413cb4:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  413cb8:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  413cbc:	str	x19, [x1, #2784]
  413cc0:	str	x19, [x0, #1024]
  413cc4:	ldp	x19, x20, [sp, #16]
  413cc8:	ldp	x29, x30, [sp], #48
  413ccc:	ret
  413cd0:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  413cd4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  413cd8:	ldr	x21, [sp, #32]
  413cdc:	str	x19, [x1, #2784]
  413ce0:	str	x19, [x0, #1024]
  413ce4:	ldp	x19, x20, [sp, #16]
  413ce8:	ldp	x29, x30, [sp], #48
  413cec:	ret
  413cf0:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  413cf4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  413cf8:	mov	x19, x21
  413cfc:	str	x19, [x1, #2784]
  413d00:	str	x19, [x0, #1024]
  413d04:	ldp	x19, x20, [sp, #16]
  413d08:	ldr	x21, [sp, #32]
  413d0c:	ldp	x29, x30, [sp], #48
  413d10:	ret
  413d14:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x19878>
  413d18:	mov	x2, #0x37                  	// #55
  413d1c:	mov	x1, #0x1                   	// #1
  413d20:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  413d24:	ldr	x3, [x3, #1032]
  413d28:	add	x0, x0, #0x380
  413d2c:	str	x21, [sp, #32]
  413d30:	bl	402830 <fwrite@plt>
  413d34:	bl	4026d0 <abort@plt>
  413d38:	stp	xzr, xzr, [x8]
  413d3c:	cmp	w0, #0xa
  413d40:	stp	xzr, xzr, [x8, #16]
  413d44:	stp	xzr, xzr, [x8, #32]
  413d48:	str	xzr, [x8, #48]
  413d4c:	b.eq	413d58 <ferror@plt+0x113b8>  // b.none
  413d50:	str	w0, [x8]
  413d54:	ret
  413d58:	stp	x29, x30, [sp, #-16]!
  413d5c:	mov	x29, sp
  413d60:	bl	4026d0 <abort@plt>
  413d64:	nop
  413d68:	stp	x29, x30, [sp, #-32]!
  413d6c:	mov	x29, sp
  413d70:	stp	x19, x20, [sp, #16]
  413d74:	mov	x19, x0
  413d78:	mov	w20, w1
  413d7c:	bl	4178a8 <_obstack_memory_used@@Base+0x120>
  413d80:	ldrb	w2, [x0]
  413d84:	and	w2, w2, #0xffffffdf
  413d88:	cmp	w2, #0x55
  413d8c:	b.ne	413df8 <ferror@plt+0x11458>  // b.any
  413d90:	ldrb	w2, [x0, #1]
  413d94:	and	w2, w2, #0xffffffdf
  413d98:	cmp	w2, #0x54
  413d9c:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413da0:	ldrb	w1, [x0, #2]
  413da4:	and	w1, w1, #0xffffffdf
  413da8:	cmp	w1, #0x46
  413dac:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413db0:	ldrb	w1, [x0, #3]
  413db4:	cmp	w1, #0x2d
  413db8:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413dbc:	ldrb	w1, [x0, #4]
  413dc0:	cmp	w1, #0x38
  413dc4:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413dc8:	ldrb	w0, [x0, #5]
  413dcc:	cbnz	w0, 413e4c <ferror@plt+0x114ac>
  413dd0:	ldrb	w2, [x19]
  413dd4:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  413dd8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  413ddc:	add	x1, x1, #0x3d0
  413de0:	cmp	w2, #0x60
  413de4:	add	x0, x0, #0x3e0
  413de8:	csel	x0, x0, x1, eq  // eq = none
  413dec:	ldp	x19, x20, [sp, #16]
  413df0:	ldp	x29, x30, [sp], #32
  413df4:	ret
  413df8:	cmp	w2, #0x47
  413dfc:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413e00:	ldrb	w2, [x0, #1]
  413e04:	and	w2, w2, #0xffffffdf
  413e08:	cmp	w2, #0x42
  413e0c:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413e10:	ldrb	w1, [x0, #2]
  413e14:	cmp	w1, #0x31
  413e18:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413e1c:	ldrb	w1, [x0, #3]
  413e20:	cmp	w1, #0x38
  413e24:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413e28:	ldrb	w1, [x0, #4]
  413e2c:	cmp	w1, #0x30
  413e30:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413e34:	ldrb	w1, [x0, #5]
  413e38:	cmp	w1, #0x33
  413e3c:	b.ne	413e4c <ferror@plt+0x114ac>  // b.any
  413e40:	ldrb	w1, [x0, #6]
  413e44:	cmp	w1, #0x30
  413e48:	b.eq	413e70 <ferror@plt+0x114d0>  // b.none
  413e4c:	cmp	w20, #0x9
  413e50:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  413e54:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  413e58:	add	x1, x1, #0x248
  413e5c:	add	x0, x0, #0x3c8
  413e60:	csel	x0, x0, x1, eq  // eq = none
  413e64:	ldp	x19, x20, [sp, #16]
  413e68:	ldp	x29, x30, [sp], #32
  413e6c:	ret
  413e70:	ldrb	w0, [x0, #7]
  413e74:	cbnz	w0, 413e4c <ferror@plt+0x114ac>
  413e78:	ldrb	w2, [x19]
  413e7c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  413e80:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  413e84:	add	x1, x1, #0x3c0
  413e88:	cmp	w2, #0x60
  413e8c:	add	x0, x0, #0x3d8
  413e90:	csel	x0, x0, x1, eq  // eq = none
  413e94:	ldp	x19, x20, [sp, #16]
  413e98:	ldp	x29, x30, [sp], #32
  413e9c:	ret
  413ea0:	sub	sp, sp, #0xf0
  413ea4:	stp	x29, x30, [sp, #16]
  413ea8:	add	x29, sp, #0x10
  413eac:	stp	x19, x20, [sp, #32]
  413eb0:	mov	w19, w5
  413eb4:	and	w20, w5, #0x2
  413eb8:	stp	x21, x22, [sp, #48]
  413ebc:	stp	x23, x24, [sp, #64]
  413ec0:	mov	x23, x1
  413ec4:	stp	x25, x26, [sp, #80]
  413ec8:	mov	w26, w4
  413ecc:	mov	x25, x3
  413ed0:	stp	x27, x28, [sp, #96]
  413ed4:	mov	x28, x0
  413ed8:	mov	x27, x2
  413edc:	str	x6, [sp, #112]
  413ee0:	str	w5, [sp, #200]
  413ee4:	str	x7, [sp, #208]
  413ee8:	bl	4027e0 <__ctype_get_mb_cur_max@plt>
  413eec:	mov	x1, x19
  413ef0:	str	x0, [sp, #192]
  413ef4:	cmp	w26, #0x4
  413ef8:	ubfx	x11, x1, #1, #1
  413efc:	ldr	x6, [sp, #112]
  413f00:	b.eq	414b98 <ferror@plt+0x121f8>  // b.none
  413f04:	b.ls	413f6c <ferror@plt+0x115cc>  // b.plast
  413f08:	cmp	w26, #0x7
  413f0c:	b.eq	414a28 <ferror@plt+0x12088>  // b.none
  413f10:	b.ls	414694 <ferror@plt+0x11cf4>  // b.plast
  413f14:	sub	w0, w26, #0x8
  413f18:	cmp	w0, #0x2
  413f1c:	b.hi	414eb4 <ferror@plt+0x12514>  // b.pmore
  413f20:	cmp	w26, #0xa
  413f24:	b.ne	414a9c <ferror@plt+0x120fc>  // b.any
  413f28:	mov	x19, #0x0                   	// #0
  413f2c:	cbz	w20, 414d14 <ferror@plt+0x12374>
  413f30:	ldr	x0, [sp, #240]
  413f34:	str	w11, [sp, #136]
  413f38:	str	x6, [sp, #144]
  413f3c:	bl	402390 <strlen@plt>
  413f40:	mov	x12, x0
  413f44:	ldr	x0, [sp, #240]
  413f48:	mov	w10, #0x1                   	// #1
  413f4c:	ldr	w11, [sp, #136]
  413f50:	mov	w5, w10
  413f54:	mov	w7, #0x0                   	// #0
  413f58:	str	x0, [sp, #112]
  413f5c:	str	wzr, [sp, #120]
  413f60:	str	xzr, [sp, #128]
  413f64:	ldr	x6, [sp, #144]
  413f68:	b	413fb0 <ferror@plt+0x11610>
  413f6c:	cmp	w26, #0x1
  413f70:	b.eq	4149f4 <ferror@plt+0x12054>  // b.none
  413f74:	b.ls	414668 <ferror@plt+0x11cc8>  // b.plast
  413f78:	cmp	w26, #0x2
  413f7c:	b.eq	414bbc <ferror@plt+0x1221c>  // b.none
  413f80:	mov	w10, #0x1                   	// #1
  413f84:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x1878>
  413f88:	mov	w11, w10
  413f8c:	mov	w5, w10
  413f90:	add	x0, x26, #0x248
  413f94:	mov	w7, #0x0                   	// #0
  413f98:	mov	x12, #0x1                   	// #1
  413f9c:	mov	x19, #0x0                   	// #0
  413fa0:	mov	w26, #0x2                   	// #2
  413fa4:	str	x0, [sp, #112]
  413fa8:	str	wzr, [sp, #120]
  413fac:	str	xzr, [sp, #128]
  413fb0:	mov	w22, w5
  413fb4:	mov	w24, w7
  413fb8:	mov	x20, #0x0                   	// #0
  413fbc:	nop
  413fc0:	cmp	x25, x20
  413fc4:	cset	w21, ne  // ne = any
  413fc8:	cmn	x25, #0x1
  413fcc:	b.eq	41409c <ferror@plt+0x116fc>  // b.none
  413fd0:	cbz	w21, 4140ac <ferror@plt+0x1170c>
  413fd4:	cmp	w26, #0x2
  413fd8:	add	x3, x27, x20
  413fdc:	cset	w5, ne  // ne = any
  413fe0:	ands	w5, w22, w5
  413fe4:	b.eq	4145b4 <ferror@plt+0x11c14>  // b.none
  413fe8:	cbz	x12, 4142a8 <ferror@plt+0x11908>
  413fec:	cmp	x12, #0x1
  413ff0:	add	x1, x20, x12
  413ff4:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  413ff8:	b.ne	414030 <ferror@plt+0x11690>  // b.any
  413ffc:	mov	x0, x27
  414000:	str	x1, [sp, #136]
  414004:	str	w5, [sp, #144]
  414008:	stp	x3, x12, [sp, #152]
  41400c:	stp	w11, w10, [sp, #172]
  414010:	str	x6, [sp, #184]
  414014:	bl	402390 <strlen@plt>
  414018:	ldp	x3, x12, [sp, #152]
  41401c:	mov	x25, x0
  414020:	ldr	w5, [sp, #144]
  414024:	ldp	w11, w10, [sp, #172]
  414028:	ldr	x1, [sp, #136]
  41402c:	ldr	x6, [sp, #184]
  414030:	cmp	x1, x25
  414034:	b.hi	4142a8 <ferror@plt+0x11908>  // b.pmore
  414038:	ldr	x1, [sp, #112]
  41403c:	mov	x2, x12
  414040:	mov	x0, x3
  414044:	stp	x3, x12, [sp, #136]
  414048:	str	w5, [sp, #152]
  41404c:	str	w11, [sp, #160]
  414050:	str	w10, [sp, #172]
  414054:	str	x6, [sp, #176]
  414058:	bl	402730 <memcmp@plt>
  41405c:	ldr	w5, [sp, #152]
  414060:	ldr	w11, [sp, #160]
  414064:	ldr	w10, [sp, #172]
  414068:	ldp	x3, x12, [sp, #136]
  41406c:	ldr	x6, [sp, #176]
  414070:	cbnz	w0, 4142a8 <ferror@plt+0x11908>
  414074:	cbnz	w11, 4143a0 <ferror@plt+0x11a00>
  414078:	ldrb	w4, [x3]
  41407c:	cmp	w4, #0x7e
  414080:	b.hi	4142b8 <ferror@plt+0x11918>  // b.pmore
  414084:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  414088:	add	x0, x0, #0x450
  41408c:	ldrh	w0, [x0, w4, uxtw #1]
  414090:	adr	x1, 41409c <ferror@plt+0x116fc>
  414094:	add	x0, x1, w0, sxth #2
  414098:	br	x0
  41409c:	ldrb	w0, [x27, x20]
  4140a0:	cmp	w0, #0x0
  4140a4:	cset	w21, ne  // ne = any
  4140a8:	cbnz	w21, 413fd4 <ferror@plt+0x11634>
  4140ac:	cmp	w26, #0x2
  4140b0:	mov	w5, w22
  4140b4:	cset	w0, eq  // eq = none
  4140b8:	mov	w7, w24
  4140bc:	cmp	w0, #0x0
  4140c0:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  4140c4:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  4140c8:	b.eq	414e5c <ferror@plt+0x124bc>  // b.none
  4140cc:	eor	w11, w11, #0x1
  4140d0:	ands	w0, w0, w11
  4140d4:	b.eq	414dbc <ferror@plt+0x1241c>  // b.none
  4140d8:	ldr	w1, [sp, #120]
  4140dc:	cbz	w1, 414dc0 <ferror@plt+0x12420>
  4140e0:	cbnz	w10, 414e18 <ferror@plt+0x12478>
  4140e4:	ldr	x2, [sp, #128]
  4140e8:	cmp	x23, #0x0
  4140ec:	cset	w0, eq  // eq = none
  4140f0:	cmp	x2, #0x0
  4140f4:	mov	x1, x2
  4140f8:	csel	w0, w0, wzr, ne  // ne = any
  4140fc:	cbz	w0, 414e48 <ferror@plt+0x124a8>
  414100:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x1878>
  414104:	mov	x12, #0x1                   	// #1
  414108:	mov	w11, #0x0                   	// #0
  41410c:	mov	x19, x12
  414110:	str	w0, [sp, #120]
  414114:	mov	w0, #0x27                  	// #39
  414118:	strb	w0, [x28]
  41411c:	ldr	x23, [sp, #128]
  414120:	str	x1, [sp, #128]
  414124:	add	x1, x26, #0x248
  414128:	mov	w26, #0x2                   	// #2
  41412c:	str	x1, [sp, #112]
  414130:	b	413fb0 <ferror@plt+0x11610>
  414134:	mov	w0, w5
  414138:	mov	w21, w5
  41413c:	mov	w5, w0
  414140:	mov	w1, #0x0                   	// #0
  414144:	nop
  414148:	cbz	x6, 414260 <ferror@plt+0x118c0>
  41414c:	ubfx	x0, x4, #5, #8
  414150:	ldr	w0, [x6, x0, lsl #2]
  414154:	lsr	w0, w0, w4
  414158:	tbz	w0, #0, 414260 <ferror@plt+0x118c0>
  41415c:	cmp	w26, #0x2
  414160:	cset	w0, eq  // eq = none
  414164:	cbnz	w11, 4144e0 <ferror@plt+0x11b40>
  414168:	eor	w1, w24, #0x1
  41416c:	ands	w0, w0, w1
  414170:	b.eq	4141b4 <ferror@plt+0x11814>  // b.none
  414174:	cmp	x23, x19
  414178:	b.ls	414184 <ferror@plt+0x117e4>  // b.plast
  41417c:	mov	w1, #0x27                  	// #39
  414180:	strb	w1, [x28, x19]
  414184:	add	x1, x19, #0x1
  414188:	cmp	x23, x1
  41418c:	b.ls	414198 <ferror@plt+0x117f8>  // b.plast
  414190:	mov	w2, #0x24                  	// #36
  414194:	strb	w2, [x28, x1]
  414198:	add	x1, x19, #0x2
  41419c:	cmp	x23, x1
  4141a0:	b.ls	4141ac <ferror@plt+0x1180c>  // b.plast
  4141a4:	mov	w2, #0x27                  	// #39
  4141a8:	strb	w2, [x28, x1]
  4141ac:	add	x19, x19, #0x3
  4141b0:	mov	w24, w0
  4141b4:	cmp	x19, x23
  4141b8:	b.cs	4141c4 <ferror@plt+0x11824>  // b.hs, b.nlast
  4141bc:	mov	w0, #0x5c                  	// #92
  4141c0:	strb	w0, [x28, x19]
  4141c4:	add	x19, x19, #0x1
  4141c8:	add	x20, x20, #0x1
  4141cc:	cmp	x19, x23
  4141d0:	b.cs	4141d8 <ferror@plt+0x11838>  // b.hs, b.nlast
  4141d4:	strb	w4, [x28, x19]
  4141d8:	cmp	w21, #0x0
  4141dc:	add	x19, x19, #0x1
  4141e0:	csel	w10, w10, wzr, ne  // ne = any
  4141e4:	b	413fc0 <ferror@plt+0x11620>
  4141e8:	cbnz	w11, 414e04 <ferror@plt+0x12464>
  4141ec:	ldr	x1, [sp, #128]
  4141f0:	cmp	x23, #0x0
  4141f4:	mov	x0, #0x0                   	// #0
  4141f8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  4141fc:	b.eq	414240 <ferror@plt+0x118a0>  // b.none
  414200:	cmp	x23, x19
  414204:	b.ls	414210 <ferror@plt+0x11870>  // b.plast
  414208:	mov	w0, #0x27                  	// #39
  41420c:	strb	w0, [x28, x19]
  414210:	add	x0, x19, #0x1
  414214:	cmp	x23, x0
  414218:	b.ls	414224 <ferror@plt+0x11884>  // b.plast
  41421c:	mov	w1, #0x5c                  	// #92
  414220:	strb	w1, [x28, x0]
  414224:	add	x1, x19, #0x2
  414228:	mov	x0, x23
  41422c:	cmp	x23, x1
  414230:	b.ls	414e94 <ferror@plt+0x124f4>  // b.plast
  414234:	ldr	x23, [sp, #128]
  414238:	mov	w2, #0x27                  	// #39
  41423c:	strb	w2, [x28, x1]
  414240:	add	x19, x19, #0x3
  414244:	str	x23, [sp, #128]
  414248:	mov	x23, x0
  41424c:	mov	w1, #0x0                   	// #0
  414250:	mov	w24, #0x0                   	// #0
  414254:	mov	w4, #0x27                  	// #39
  414258:	str	w21, [sp, #120]
  41425c:	nop
  414260:	cbnz	w5, 41415c <ferror@plt+0x117bc>
  414264:	eor	w1, w1, #0x1
  414268:	add	x20, x20, #0x1
  41426c:	and	w1, w24, w1
  414270:	and	w1, w1, #0xff
  414274:	cbz	w1, 4141cc <ferror@plt+0x1182c>
  414278:	cmp	x23, x19
  41427c:	b.ls	414288 <ferror@plt+0x118e8>  // b.plast
  414280:	mov	w0, #0x27                  	// #39
  414284:	strb	w0, [x28, x19]
  414288:	add	x0, x19, #0x1
  41428c:	cmp	x23, x0
  414290:	b.ls	41429c <ferror@plt+0x118fc>  // b.plast
  414294:	mov	w1, #0x27                  	// #39
  414298:	strb	w1, [x28, x0]
  41429c:	add	x19, x19, #0x2
  4142a0:	mov	w24, #0x0                   	// #0
  4142a4:	b	4141cc <ferror@plt+0x1182c>
  4142a8:	ldrb	w4, [x3]
  4142ac:	cmp	w4, #0x7e
  4142b0:	b.ls	41463c <ferror@plt+0x11c9c>  // b.plast
  4142b4:	mov	w5, #0x0                   	// #0
  4142b8:	ldr	x0, [sp, #192]
  4142bc:	cmp	x0, #0x1
  4142c0:	b.ne	414768 <ferror@plt+0x11dc8>  // b.any
  4142c4:	str	w4, [sp, #136]
  4142c8:	str	w5, [sp, #144]
  4142cc:	str	x12, [sp, #152]
  4142d0:	str	w11, [sp, #160]
  4142d4:	str	w10, [sp, #172]
  4142d8:	str	x6, [sp, #176]
  4142dc:	bl	402770 <__ctype_b_loc@plt>
  4142e0:	ldr	w4, [sp, #136]
  4142e4:	ldr	x0, [x0]
  4142e8:	ldr	w5, [sp, #144]
  4142ec:	ldr	w11, [sp, #160]
  4142f0:	ldrh	w21, [x0, w4, uxtw #1]
  4142f4:	ldr	w10, [sp, #172]
  4142f8:	ands	w0, w21, #0x4000
  4142fc:	cset	w2, eq  // eq = none
  414300:	ubfx	x21, x21, #14, #1
  414304:	ldr	x12, [sp, #152]
  414308:	and	w2, w22, w2
  41430c:	ldr	x6, [sp, #176]
  414310:	ldr	x8, [sp, #192]
  414314:	cbnz	w2, 414b7c <ferror@plt+0x121dc>
  414318:	cmp	w26, #0x2
  41431c:	cset	w1, eq  // eq = none
  414320:	eor	w0, w22, #0x1
  414324:	orr	w1, w1, w0
  414328:	cbz	w1, 414148 <ferror@plt+0x117a8>
  41432c:	mov	w1, #0x0                   	// #0
  414330:	cbnz	w11, 414148 <ferror@plt+0x117a8>
  414334:	nop
  414338:	cbnz	w5, 41415c <ferror@plt+0x117bc>
  41433c:	b	414264 <ferror@plt+0x118c4>
  414340:	mov	w5, #0x0                   	// #0
  414344:	cmp	x25, #0x1
  414348:	cset	w0, ne  // ne = any
  41434c:	cmn	x25, #0x1
  414350:	b.ne	414360 <ferror@plt+0x119c0>  // b.any
  414354:	ldrb	w0, [x27, #1]
  414358:	cmp	w0, #0x0
  41435c:	cset	w0, ne  // ne = any
  414360:	cmp	w26, #0x2
  414364:	cset	w1, eq  // eq = none
  414368:	cbz	w0, 41437c <ferror@plt+0x119dc>
  41436c:	mov	w21, #0x0                   	// #0
  414370:	b	414320 <ferror@plt+0x11980>
  414374:	cmp	w26, #0x2
  414378:	cset	w1, eq  // eq = none
  41437c:	cbnz	x20, 41436c <ferror@plt+0x119cc>
  414380:	cmp	w11, #0x0
  414384:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  414388:	b.eq	414320 <ferror@plt+0x11980>  // b.none
  41438c:	mov	w5, w22
  414390:	mov	w26, #0x2                   	// #2
  414394:	cmp	w5, #0x0
  414398:	mov	w0, #0x4                   	// #4
  41439c:	csel	w26, w26, w0, eq  // eq = none
  4143a0:	ldr	x7, [sp, #208]
  4143a4:	mov	w4, w26
  4143a8:	ldr	x0, [sp, #240]
  4143ac:	str	x0, [sp]
  4143b0:	ldr	w0, [sp, #200]
  4143b4:	mov	x3, x25
  4143b8:	mov	x2, x27
  4143bc:	mov	x1, x23
  4143c0:	and	w5, w0, #0xfffffffd
  4143c4:	mov	x6, #0x0                   	// #0
  4143c8:	mov	x0, x28
  4143cc:	bl	413ea0 <ferror@plt+0x11500>
  4143d0:	mov	x19, x0
  4143d4:	mov	x0, x19
  4143d8:	ldp	x29, x30, [sp, #16]
  4143dc:	ldp	x19, x20, [sp, #32]
  4143e0:	ldp	x21, x22, [sp, #48]
  4143e4:	ldp	x23, x24, [sp, #64]
  4143e8:	ldp	x25, x26, [sp, #80]
  4143ec:	ldp	x27, x28, [sp, #96]
  4143f0:	add	sp, sp, #0xf0
  4143f4:	ret
  4143f8:	mov	w5, #0x0                   	// #0
  4143fc:	cmp	w26, #0x2
  414400:	b.eq	414738 <ferror@plt+0x11d98>  // b.none
  414404:	cmp	w22, #0x0
  414408:	mov	w4, #0x5c                  	// #92
  41440c:	ccmp	w11, #0x0, #0x4, ne  // ne = any
  414410:	mov	w0, w4
  414414:	ccmp	x12, #0x0, #0x4, ne  // ne = any
  414418:	b.ne	414a68 <ferror@plt+0x120c8>  // b.any
  41441c:	cbnz	w22, 414ad8 <ferror@plt+0x12138>
  414420:	mov	w21, #0x0                   	// #0
  414424:	mov	w1, #0x0                   	// #0
  414428:	cbnz	w11, 414148 <ferror@plt+0x117a8>
  41442c:	b	414338 <ferror@plt+0x11998>
  414430:	mov	w5, #0x0                   	// #0
  414434:	cmp	w26, #0x2
  414438:	b.eq	414750 <ferror@plt+0x11db0>  // b.none
  41443c:	cmp	w26, #0x5
  414440:	b.ne	414468 <ferror@plt+0x11ac8>  // b.any
  414444:	ldr	x0, [sp, #200]
  414448:	tbz	w0, #2, 414468 <ferror@plt+0x11ac8>
  41444c:	add	x7, x20, #0x2
  414450:	cmp	x7, x25
  414454:	b.cs	414468 <ferror@plt+0x11ac8>  // b.hs, b.nlast
  414458:	ldrb	w4, [x3, #1]
  41445c:	cmp	w4, #0x3f
  414460:	b.eq	414c44 <ferror@plt+0x122a4>  // b.none
  414464:	nop
  414468:	mov	w1, #0x0                   	// #0
  41446c:	mov	w21, #0x0                   	// #0
  414470:	mov	w4, #0x3f                  	// #63
  414474:	b	414320 <ferror@plt+0x11980>
  414478:	mov	w5, #0x0                   	// #0
  41447c:	cmp	w26, #0x2
  414480:	b.eq	4141e8 <ferror@plt+0x11848>  // b.none
  414484:	mov	w1, #0x0                   	// #0
  414488:	mov	w4, #0x27                  	// #39
  41448c:	str	w21, [sp, #120]
  414490:	b	414320 <ferror@plt+0x11980>
  414494:	mov	w0, #0x74                  	// #116
  414498:	cmp	w11, #0x0
  41449c:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  4144a0:	b.eq	41438c <ferror@plt+0x119ec>  // b.none
  4144a4:	cbz	w22, 414420 <ferror@plt+0x11a80>
  4144a8:	b	414ad8 <ferror@plt+0x12138>
  4144ac:	mov	w4, #0x62                  	// #98
  4144b0:	cmp	w26, #0x2
  4144b4:	cset	w0, eq  // eq = none
  4144b8:	cbnz	w11, 4144e0 <ferror@plt+0x11b40>
  4144bc:	mov	w21, #0x0                   	// #0
  4144c0:	b	4141b4 <ferror@plt+0x11814>
  4144c4:	mov	w4, #0x66                  	// #102
  4144c8:	b	4144b0 <ferror@plt+0x11b10>
  4144cc:	mov	w4, #0x6e                  	// #110
  4144d0:	mov	w21, #0x0                   	// #0
  4144d4:	cmp	w26, #0x2
  4144d8:	cset	w0, eq  // eq = none
  4144dc:	cbz	w11, 414168 <ferror@plt+0x117c8>
  4144e0:	and	w5, w22, w0
  4144e4:	b	414394 <ferror@plt+0x119f4>
  4144e8:	mov	w4, #0x72                  	// #114
  4144ec:	mov	w21, #0x0                   	// #0
  4144f0:	b	4144d4 <ferror@plt+0x11b34>
  4144f4:	mov	w4, #0x61                  	// #97
  4144f8:	b	4144b0 <ferror@plt+0x11b10>
  4144fc:	cbnz	w11, 414e0c <ferror@plt+0x1246c>
  414500:	mov	w5, #0x0                   	// #0
  414504:	cmp	w26, #0x2
  414508:	eor	w1, w24, #0x1
  41450c:	cset	w0, eq  // eq = none
  414510:	ands	w1, w0, w1
  414514:	b.eq	414718 <ferror@plt+0x11d78>  // b.none
  414518:	cmp	x23, x19
  41451c:	b.ls	414528 <ferror@plt+0x11b88>  // b.plast
  414520:	mov	w2, #0x27                  	// #39
  414524:	strb	w2, [x28, x19]
  414528:	add	x2, x19, #0x1
  41452c:	cmp	x23, x2
  414530:	b.ls	41453c <ferror@plt+0x11b9c>  // b.plast
  414534:	mov	w3, #0x24                  	// #36
  414538:	strb	w3, [x28, x2]
  41453c:	add	x2, x19, #0x2
  414540:	cmp	x23, x2
  414544:	b.ls	414550 <ferror@plt+0x11bb0>  // b.plast
  414548:	mov	w3, #0x27                  	// #39
  41454c:	strb	w3, [x28, x2]
  414550:	add	x2, x19, #0x3
  414554:	cmp	x23, x2
  414558:	b.ls	414a50 <ferror@plt+0x120b0>  // b.plast
  41455c:	mov	w24, w1
  414560:	mov	w1, #0x5c                  	// #92
  414564:	strb	w1, [x28, x2]
  414568:	cmp	w26, #0x2
  41456c:	add	x19, x2, #0x1
  414570:	b.eq	414c30 <ferror@plt+0x12290>  // b.none
  414574:	add	x1, x20, #0x1
  414578:	mov	w4, #0x30                  	// #48
  41457c:	cmp	x1, x25
  414580:	b.cs	414598 <ferror@plt+0x11bf8>  // b.hs, b.nlast
  414584:	ldrb	w1, [x27, x1]
  414588:	sub	w1, w1, #0x30
  41458c:	and	w1, w1, #0xff
  414590:	cmp	w1, #0x9
  414594:	b.ls	414ae4 <ferror@plt+0x12144>  // b.plast
  414598:	eor	w1, w22, #0x1
  41459c:	orr	w0, w0, w1
  4145a0:	mov	w1, w21
  4145a4:	mov	w21, #0x0                   	// #0
  4145a8:	cbz	w0, 414148 <ferror@plt+0x117a8>
  4145ac:	cbnz	w5, 41415c <ferror@plt+0x117bc>
  4145b0:	b	414264 <ferror@plt+0x118c4>
  4145b4:	ldrb	w4, [x27, x20]
  4145b8:	cmp	w4, #0x7e
  4145bc:	b.hi	4142b8 <ferror@plt+0x11918>  // b.pmore
  4145c0:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  4145c4:	add	x0, x0, #0x550
  4145c8:	ldrh	w0, [x0, w4, uxtw #1]
  4145cc:	adr	x1, 4145d8 <ferror@plt+0x11c38>
  4145d0:	add	x0, x1, w0, sxth #2
  4145d4:	br	x0
  4145d8:	cmp	w26, #0x2
  4145dc:	mov	w21, #0x0                   	// #0
  4145e0:	cset	w1, eq  // eq = none
  4145e4:	cmp	w11, #0x0
  4145e8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4145ec:	b.eq	414320 <ferror@plt+0x11980>  // b.none
  4145f0:	b	41438c <ferror@plt+0x119ec>
  4145f4:	cmp	w26, #0x2
  4145f8:	cset	w1, eq  // eq = none
  4145fc:	cmp	w11, #0x0
  414600:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  414604:	b.eq	414320 <ferror@plt+0x11980>  // b.none
  414608:	b	41438c <ferror@plt+0x119ec>
  41460c:	cbnz	w22, 4144fc <ferror@plt+0x11b5c>
  414610:	ldr	x0, [sp, #200]
  414614:	mov	w5, #0x0                   	// #0
  414618:	tbz	w0, #0, 414420 <ferror@plt+0x11a80>
  41461c:	add	x20, x20, #0x1
  414620:	b	413fc0 <ferror@plt+0x11620>
  414624:	mov	w0, #0x66                  	// #102
  414628:	cbz	w22, 414420 <ferror@plt+0x11a80>
  41462c:	b	414ad8 <ferror@plt+0x12138>
  414630:	mov	w0, #0x62                  	// #98
  414634:	cbz	w22, 414420 <ferror@plt+0x11a80>
  414638:	b	414ad8 <ferror@plt+0x12138>
  41463c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  414640:	add	x0, x0, #0x650
  414644:	ldrh	w0, [x0, w4, uxtw #1]
  414648:	adr	x1, 414654 <ferror@plt+0x11cb4>
  41464c:	add	x0, x1, w0, sxth #2
  414650:	br	x0
  414654:	mov	w0, #0x0                   	// #0
  414658:	b	414138 <ferror@plt+0x11798>
  41465c:	mov	w0, #0x0                   	// #0
  414660:	mov	w5, #0x0                   	// #0
  414664:	b	414138 <ferror@plt+0x11798>
  414668:	cbnz	w26, 414eb4 <ferror@plt+0x12514>
  41466c:	mov	w10, #0x1                   	// #1
  414670:	mov	w7, #0x0                   	// #0
  414674:	mov	w11, #0x0                   	// #0
  414678:	mov	w5, #0x0                   	// #0
  41467c:	mov	x12, #0x0                   	// #0
  414680:	mov	x19, #0x0                   	// #0
  414684:	str	xzr, [sp, #112]
  414688:	str	wzr, [sp, #120]
  41468c:	str	xzr, [sp, #128]
  414690:	b	413fb0 <ferror@plt+0x11610>
  414694:	cmp	w26, #0x5
  414698:	b.ne	4146dc <ferror@plt+0x11d3c>  // b.any
  41469c:	cbnz	w20, 414cd4 <ferror@plt+0x12334>
  4146a0:	cbz	x23, 414c00 <ferror@plt+0x12260>
  4146a4:	mov	w0, #0x22                  	// #34
  4146a8:	mov	w10, #0x1                   	// #1
  4146ac:	mov	x12, #0x1                   	// #1
  4146b0:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  4146b4:	mov	w5, w10
  4146b8:	add	x1, x1, #0x3c8
  4146bc:	mov	x19, x12
  4146c0:	mov	w7, #0x0                   	// #0
  4146c4:	mov	w11, #0x0                   	// #0
  4146c8:	strb	w0, [x28]
  4146cc:	str	x1, [sp, #112]
  4146d0:	str	wzr, [sp, #120]
  4146d4:	str	xzr, [sp, #128]
  4146d8:	b	413fb0 <ferror@plt+0x11610>
  4146dc:	cmp	w26, #0x6
  4146e0:	b.ne	414eb4 <ferror@plt+0x12514>  // b.any
  4146e4:	adrp	x26, 41b000 <_obstack_memory_used@@Base+0x3878>
  4146e8:	mov	w10, #0x1                   	// #1
  4146ec:	add	x0, x26, #0x3c8
  4146f0:	mov	w11, w10
  4146f4:	mov	w5, w10
  4146f8:	mov	w7, #0x0                   	// #0
  4146fc:	mov	x12, #0x1                   	// #1
  414700:	mov	x19, #0x0                   	// #0
  414704:	mov	w26, #0x5                   	// #5
  414708:	str	x0, [sp, #112]
  41470c:	str	wzr, [sp, #120]
  414710:	str	xzr, [sp, #128]
  414714:	b	413fb0 <ferror@plt+0x11610>
  414718:	mov	x2, x19
  41471c:	cmp	x23, x19
  414720:	b.ls	414568 <ferror@plt+0x11bc8>  // b.plast
  414724:	mov	w1, w24
  414728:	mov	w24, w1
  41472c:	mov	w1, #0x5c                  	// #92
  414730:	strb	w1, [x28, x2]
  414734:	b	414568 <ferror@plt+0x11bc8>
  414738:	cbnz	w11, 414e04 <ferror@plt+0x12464>
  41473c:	add	x20, x20, #0x1
  414740:	mov	w1, w24
  414744:	mov	w21, #0x0                   	// #0
  414748:	mov	w4, #0x5c                  	// #92
  41474c:	b	414274 <ferror@plt+0x118d4>
  414750:	cbnz	w11, 414e04 <ferror@plt+0x12464>
  414754:	mov	w21, #0x0                   	// #0
  414758:	mov	w1, #0x0                   	// #0
  41475c:	mov	w4, #0x3f                  	// #63
  414760:	cbnz	w5, 41415c <ferror@plt+0x117bc>
  414764:	b	414264 <ferror@plt+0x118c4>
  414768:	str	xzr, [sp, #232]
  41476c:	cmn	x25, #0x1
  414770:	b.ne	4147b0 <ferror@plt+0x11e10>  // b.any
  414774:	mov	x0, x27
  414778:	str	w4, [sp, #136]
  41477c:	str	w5, [sp, #144]
  414780:	str	x12, [sp, #152]
  414784:	str	w11, [sp, #160]
  414788:	str	w10, [sp, #172]
  41478c:	str	x6, [sp, #176]
  414790:	bl	402390 <strlen@plt>
  414794:	ldr	w4, [sp, #136]
  414798:	mov	x25, x0
  41479c:	ldr	w5, [sp, #144]
  4147a0:	ldr	w11, [sp, #160]
  4147a4:	ldr	w10, [sp, #172]
  4147a8:	ldr	x12, [sp, #152]
  4147ac:	ldr	x6, [sp, #176]
  4147b0:	mov	x8, #0x0                   	// #0
  4147b4:	str	x19, [sp, #184]
  4147b8:	mov	w19, w21
  4147bc:	mov	x21, x8
  4147c0:	str	w11, [sp, #136]
  4147c4:	str	x12, [sp, #144]
  4147c8:	str	w24, [sp, #152]
  4147cc:	str	w10, [sp, #160]
  4147d0:	stp	w4, w5, [sp, #172]
  4147d4:	str	x6, [sp, #216]
  4147d8:	add	x24, x20, x21
  4147dc:	add	x3, sp, #0xe8
  4147e0:	sub	x2, x25, x24
  4147e4:	add	x1, x27, x24
  4147e8:	add	x0, sp, #0xe4
  4147ec:	bl	4173c8 <ferror@plt+0x14a28>
  4147f0:	mov	x13, #0x2b                  	// #43
  4147f4:	mov	x3, x0
  4147f8:	movk	x13, #0x2, lsl #32
  4147fc:	cbz	x0, 414844 <ferror@plt+0x11ea4>
  414800:	cmn	x0, #0x1
  414804:	b.eq	414d3c <ferror@plt+0x1239c>  // b.none
  414808:	cmn	x0, #0x2
  41480c:	mov	x7, #0x1                   	// #1
  414810:	b.eq	414d68 <ferror@plt+0x123c8>  // b.none
  414814:	ldr	w0, [sp, #136]
  414818:	cmp	w0, #0x0
  41481c:	ccmp	w26, #0x2, #0x0, ne  // ne = any
  414820:	b.eq	4149a8 <ferror@plt+0x12008>  // b.none
  414824:	ldr	w0, [sp, #228]
  414828:	add	x21, x21, x3
  41482c:	bl	402900 <iswprint@plt>
  414830:	cmp	w0, #0x0
  414834:	csel	w19, w19, wzr, ne  // ne = any
  414838:	add	x0, sp, #0xe8
  41483c:	bl	4026f0 <mbsinit@plt>
  414840:	cbz	w0, 4147d8 <ferror@plt+0x11e38>
  414844:	eor	w2, w19, #0x1
  414848:	mov	x8, x21
  41484c:	ldr	w11, [sp, #136]
  414850:	mov	w21, w19
  414854:	ldr	w24, [sp, #152]
  414858:	and	w2, w22, w2
  41485c:	ldr	w10, [sp, #160]
  414860:	ldp	w4, w5, [sp, #172]
  414864:	ldr	x12, [sp, #144]
  414868:	ldr	x19, [sp, #184]
  41486c:	ldr	x6, [sp, #216]
  414870:	cmp	x8, #0x1
  414874:	b.ls	414314 <ferror@plt+0x11974>  // b.plast
  414878:	add	x8, x8, x20
  41487c:	mov	w14, #0x0                   	// #0
  414880:	mov	w3, #0x27                  	// #39
  414884:	mov	w7, #0x5c                  	// #92
  414888:	mov	w9, #0x24                  	// #36
  41488c:	cbz	w2, 41494c <ferror@plt+0x11fac>
  414890:	cmp	w26, #0x2
  414894:	cset	w0, eq  // eq = none
  414898:	cbnz	w11, 414b90 <ferror@plt+0x121f0>
  41489c:	eor	w1, w24, #0x1
  4148a0:	ands	w0, w0, w1
  4148a4:	b.eq	4148dc <ferror@plt+0x11f3c>  // b.none
  4148a8:	cmp	x23, x19
  4148ac:	b.ls	4148b4 <ferror@plt+0x11f14>  // b.plast
  4148b0:	strb	w3, [x28, x19]
  4148b4:	add	x1, x19, #0x1
  4148b8:	cmp	x23, x1
  4148bc:	b.ls	4148c4 <ferror@plt+0x11f24>  // b.plast
  4148c0:	strb	w9, [x28, x1]
  4148c4:	add	x1, x19, #0x2
  4148c8:	cmp	x23, x1
  4148cc:	b.ls	4148d4 <ferror@plt+0x11f34>  // b.plast
  4148d0:	strb	w3, [x28, x1]
  4148d4:	add	x19, x19, #0x3
  4148d8:	mov	w24, w0
  4148dc:	cmp	x23, x19
  4148e0:	b.ls	4148e8 <ferror@plt+0x11f48>  // b.plast
  4148e4:	strb	w7, [x28, x19]
  4148e8:	add	x0, x19, #0x1
  4148ec:	cmp	x23, x0
  4148f0:	b.ls	414900 <ferror@plt+0x11f60>  // b.plast
  4148f4:	lsr	w1, w4, #6
  4148f8:	add	w1, w1, #0x30
  4148fc:	strb	w1, [x28, x0]
  414900:	add	x0, x19, #0x2
  414904:	cmp	x23, x0
  414908:	b.ls	414918 <ferror@plt+0x11f78>  // b.plast
  41490c:	ubfx	x1, x4, #3, #3
  414910:	add	w1, w1, #0x30
  414914:	strb	w1, [x28, x0]
  414918:	and	w4, w4, #0x7
  41491c:	add	x20, x20, #0x1
  414920:	add	w4, w4, #0x30
  414924:	cmp	x20, x8
  414928:	add	x19, x19, #0x3
  41492c:	b.cs	4141cc <ferror@plt+0x1182c>  // b.hs, b.nlast
  414930:	mov	w14, w2
  414934:	cmp	x23, x19
  414938:	b.ls	414940 <ferror@plt+0x11fa0>  // b.plast
  41493c:	strb	w4, [x28, x19]
  414940:	ldrb	w4, [x27, x20]
  414944:	add	x19, x19, #0x1
  414948:	cbnz	w2, 414890 <ferror@plt+0x11ef0>
  41494c:	eor	w0, w14, #0x1
  414950:	and	w0, w24, w0
  414954:	and	w0, w0, #0xff
  414958:	cbz	w5, 41496c <ferror@plt+0x11fcc>
  41495c:	cmp	x23, x19
  414960:	b.ls	414968 <ferror@plt+0x11fc8>  // b.plast
  414964:	strb	w7, [x28, x19]
  414968:	add	x19, x19, #0x1
  41496c:	add	x20, x20, #0x1
  414970:	cmp	x20, x8
  414974:	b.cs	414b88 <ferror@plt+0x121e8>  // b.hs, b.nlast
  414978:	cbz	w0, 414bf8 <ferror@plt+0x12258>
  41497c:	cmp	x23, x19
  414980:	b.ls	414988 <ferror@plt+0x11fe8>  // b.plast
  414984:	strb	w3, [x28, x19]
  414988:	add	x0, x19, #0x1
  41498c:	cmp	x23, x0
  414990:	b.ls	414998 <ferror@plt+0x11ff8>  // b.plast
  414994:	strb	w3, [x28, x0]
  414998:	add	x19, x19, #0x2
  41499c:	mov	w5, #0x0                   	// #0
  4149a0:	mov	w24, #0x0                   	// #0
  4149a4:	b	414934 <ferror@plt+0x11f94>
  4149a8:	cmp	x3, #0x1
  4149ac:	b.eq	414824 <ferror@plt+0x11e84>  // b.none
  4149b0:	add	x2, x24, #0x1
  4149b4:	add	x0, x27, x3
  4149b8:	add	x2, x27, x2
  4149bc:	add	x9, x0, x24
  4149c0:	b	4149d0 <ferror@plt+0x12030>
  4149c4:	add	x2, x2, #0x1
  4149c8:	cmp	x9, x2
  4149cc:	b.eq	414824 <ferror@plt+0x11e84>  // b.none
  4149d0:	ldrb	w0, [x2]
  4149d4:	sub	w0, w0, #0x5b
  4149d8:	and	w0, w0, #0xff
  4149dc:	cmp	w0, #0x21
  4149e0:	b.hi	4149c4 <ferror@plt+0x12024>  // b.pmore
  4149e4:	lsl	x0, x7, x0
  4149e8:	tst	x0, x13
  4149ec:	b.eq	4149c4 <ferror@plt+0x12024>  // b.none
  4149f0:	b	41438c <ferror@plt+0x119ec>
  4149f4:	mov	w10, w26
  4149f8:	mov	w11, w26
  4149fc:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x1878>
  414a00:	add	x0, x26, #0x248
  414a04:	str	x0, [sp, #112]
  414a08:	str	wzr, [sp, #120]
  414a0c:	mov	w7, #0x0                   	// #0
  414a10:	mov	w5, #0x0                   	// #0
  414a14:	mov	x12, #0x1                   	// #1
  414a18:	mov	x19, #0x0                   	// #0
  414a1c:	mov	w26, #0x2                   	// #2
  414a20:	str	xzr, [sp, #128]
  414a24:	b	413fb0 <ferror@plt+0x11610>
  414a28:	mov	w10, #0x1                   	// #1
  414a2c:	mov	w7, #0x0                   	// #0
  414a30:	mov	w5, w10
  414a34:	mov	w11, #0x0                   	// #0
  414a38:	mov	x12, #0x0                   	// #0
  414a3c:	mov	x19, #0x0                   	// #0
  414a40:	str	xzr, [sp, #112]
  414a44:	str	wzr, [sp, #120]
  414a48:	str	xzr, [sp, #128]
  414a4c:	b	413fb0 <ferror@plt+0x11610>
  414a50:	add	x19, x19, #0x4
  414a54:	mov	w24, w1
  414a58:	mov	w21, #0x0                   	// #0
  414a5c:	mov	w4, #0x30                  	// #48
  414a60:	cbnz	w5, 41415c <ferror@plt+0x117bc>
  414a64:	b	414264 <ferror@plt+0x118c4>
  414a68:	add	x20, x20, #0x1
  414a6c:	mov	w1, w24
  414a70:	mov	w21, #0x0                   	// #0
  414a74:	b	414274 <ferror@plt+0x118d4>
  414a78:	mov	w0, w5
  414a7c:	mov	w5, #0x0                   	// #0
  414a80:	b	414138 <ferror@plt+0x11798>
  414a84:	mov	w0, #0x0                   	// #0
  414a88:	cbnz	x20, 414b6c <ferror@plt+0x121cc>
  414a8c:	mov	w21, w5
  414a90:	mov	w1, #0x0                   	// #0
  414a94:	mov	w5, w0
  414a98:	b	414320 <ferror@plt+0x11980>
  414a9c:	mov	w1, w26
  414aa0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  414aa4:	add	x0, x0, #0x4b8
  414aa8:	str	w11, [sp, #112]
  414aac:	str	x6, [sp, #120]
  414ab0:	bl	413d68 <ferror@plt+0x113c8>
  414ab4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  414ab8:	str	x0, [sp, #208]
  414abc:	add	x0, x1, #0x248
  414ac0:	mov	w1, w26
  414ac4:	bl	413d68 <ferror@plt+0x113c8>
  414ac8:	str	x0, [sp, #240]
  414acc:	ldr	w11, [sp, #112]
  414ad0:	ldr	x6, [sp, #120]
  414ad4:	b	413f28 <ferror@plt+0x11588>
  414ad8:	mov	w4, w0
  414adc:	mov	w21, #0x0                   	// #0
  414ae0:	b	4144d4 <ferror@plt+0x11b34>
  414ae4:	cmp	x23, x19
  414ae8:	b.ls	414af0 <ferror@plt+0x12150>  // b.plast
  414aec:	strb	w4, [x28, x19]
  414af0:	add	x1, x2, #0x2
  414af4:	cmp	x23, x1
  414af8:	b.ls	414b04 <ferror@plt+0x12164>  // b.plast
  414afc:	mov	w3, #0x30                  	// #48
  414b00:	strb	w3, [x28, x1]
  414b04:	add	x19, x2, #0x3
  414b08:	mov	w4, #0x30                  	// #48
  414b0c:	b	414598 <ferror@plt+0x11bf8>
  414b10:	mov	w0, #0x76                  	// #118
  414b14:	cbz	w22, 414420 <ferror@plt+0x11a80>
  414b18:	b	414ad8 <ferror@plt+0x12138>
  414b1c:	mov	w0, #0x72                  	// #114
  414b20:	b	414498 <ferror@plt+0x11af8>
  414b24:	mov	w0, #0x61                  	// #97
  414b28:	cbz	w22, 414420 <ferror@plt+0x11a80>
  414b2c:	b	414ad8 <ferror@plt+0x12138>
  414b30:	mov	w0, #0x6e                  	// #110
  414b34:	b	414498 <ferror@plt+0x11af8>
  414b38:	mov	w0, #0x0                   	// #0
  414b3c:	mov	w21, w5
  414b40:	mov	w1, #0x0                   	// #0
  414b44:	mov	w5, w0
  414b48:	mov	w4, #0x20                  	// #32
  414b4c:	b	414320 <ferror@plt+0x11980>
  414b50:	mov	w5, #0x0                   	// #0
  414b54:	mov	w0, #0x74                  	// #116
  414b58:	b	414498 <ferror@plt+0x11af8>
  414b5c:	mov	w5, #0x0                   	// #0
  414b60:	mov	w0, #0x76                  	// #118
  414b64:	cbz	w22, 414420 <ferror@plt+0x11a80>
  414b68:	b	414ad8 <ferror@plt+0x12138>
  414b6c:	mov	w5, w0
  414b70:	mov	w21, #0x0                   	// #0
  414b74:	mov	w1, #0x0                   	// #0
  414b78:	b	414148 <ferror@plt+0x117a8>
  414b7c:	mov	w2, w22
  414b80:	mov	w21, #0x0                   	// #0
  414b84:	b	414878 <ferror@plt+0x11ed8>
  414b88:	mov	w1, w0
  414b8c:	b	414274 <ferror@plt+0x118d4>
  414b90:	mov	w5, w0
  414b94:	b	414394 <ferror@plt+0x119f4>
  414b98:	mov	w5, #0x1                   	// #1
  414b9c:	cbz	w20, 414bc4 <ferror@plt+0x12224>
  414ba0:	mov	w10, #0x1                   	// #1
  414ba4:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x1878>
  414ba8:	mov	w11, w10
  414bac:	add	x0, x26, #0x248
  414bb0:	str	x0, [sp, #112]
  414bb4:	str	wzr, [sp, #120]
  414bb8:	b	414a0c <ferror@plt+0x1206c>
  414bbc:	cbnz	w20, 414e64 <ferror@plt+0x124c4>
  414bc0:	mov	w5, #0x0                   	// #0
  414bc4:	cbnz	x23, 414e9c <ferror@plt+0x124fc>
  414bc8:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x1878>
  414bcc:	mov	x12, #0x1                   	// #1
  414bd0:	add	x0, x26, #0x248
  414bd4:	mov	x19, x12
  414bd8:	mov	w10, #0x1                   	// #1
  414bdc:	mov	w7, #0x0                   	// #0
  414be0:	mov	w11, #0x0                   	// #0
  414be4:	mov	w26, #0x2                   	// #2
  414be8:	str	x0, [sp, #112]
  414bec:	str	wzr, [sp, #120]
  414bf0:	str	xzr, [sp, #128]
  414bf4:	b	413fb0 <ferror@plt+0x11610>
  414bf8:	mov	w5, #0x0                   	// #0
  414bfc:	b	414934 <ferror@plt+0x11f94>
  414c00:	mov	w10, #0x1                   	// #1
  414c04:	mov	x12, #0x1                   	// #1
  414c08:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  414c0c:	mov	w5, w10
  414c10:	add	x0, x0, #0x3c8
  414c14:	mov	x19, x12
  414c18:	mov	w7, #0x0                   	// #0
  414c1c:	mov	w11, #0x0                   	// #0
  414c20:	str	x0, [sp, #112]
  414c24:	str	wzr, [sp, #120]
  414c28:	str	xzr, [sp, #128]
  414c2c:	b	413fb0 <ferror@plt+0x11610>
  414c30:	mov	w1, w21
  414c34:	mov	w4, #0x30                  	// #48
  414c38:	mov	w21, #0x0                   	// #0
  414c3c:	cbnz	w5, 41415c <ferror@plt+0x117bc>
  414c40:	b	414264 <ferror@plt+0x118c4>
  414c44:	ldrb	w3, [x27, x7]
  414c48:	cmp	w3, #0x3e
  414c4c:	b.hi	414e50 <ferror@plt+0x124b0>  // b.pmore
  414c50:	mov	x0, #0x1                   	// #1
  414c54:	mov	x2, #0xa38200000000        	// #179778741075968
  414c58:	movk	x2, #0x7000, lsl #48
  414c5c:	lsl	x0, x0, x3
  414c60:	mov	w1, #0x0                   	// #0
  414c64:	tst	x0, x2
  414c68:	mov	w21, #0x0                   	// #0
  414c6c:	b.eq	414320 <ferror@plt+0x11980>  // b.none
  414c70:	cbnz	w11, 4143a0 <ferror@plt+0x11a00>
  414c74:	cmp	x23, x19
  414c78:	b.ls	414c80 <ferror@plt+0x122e0>  // b.plast
  414c7c:	strb	w4, [x28, x19]
  414c80:	add	x0, x19, #0x1
  414c84:	cmp	x23, x0
  414c88:	b.ls	414c94 <ferror@plt+0x122f4>  // b.plast
  414c8c:	mov	w1, #0x22                  	// #34
  414c90:	strb	w1, [x28, x0]
  414c94:	add	x0, x19, #0x2
  414c98:	cmp	x23, x0
  414c9c:	b.ls	414ca8 <ferror@plt+0x12308>  // b.plast
  414ca0:	mov	w1, #0x22                  	// #34
  414ca4:	strb	w1, [x28, x0]
  414ca8:	add	x0, x19, #0x3
  414cac:	cmp	x23, x0
  414cb0:	b.ls	414cbc <ferror@plt+0x1231c>  // b.plast
  414cb4:	mov	w1, #0x3f                  	// #63
  414cb8:	strb	w1, [x28, x0]
  414cbc:	add	x19, x19, #0x4
  414cc0:	mov	w4, w3
  414cc4:	mov	x20, x7
  414cc8:	mov	w0, #0x0                   	// #0
  414ccc:	mov	w21, #0x0                   	// #0
  414cd0:	b	414598 <ferror@plt+0x11bf8>
  414cd4:	mov	w10, #0x1                   	// #1
  414cd8:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  414cdc:	mov	w11, w10
  414ce0:	add	x0, x0, #0x3c8
  414ce4:	mov	w5, w10
  414ce8:	mov	w7, #0x0                   	// #0
  414cec:	mov	x12, #0x1                   	// #1
  414cf0:	mov	x19, #0x0                   	// #0
  414cf4:	str	x0, [sp, #112]
  414cf8:	str	wzr, [sp, #120]
  414cfc:	str	xzr, [sp, #128]
  414d00:	b	413fb0 <ferror@plt+0x11610>
  414d04:	mov	w0, w5
  414d08:	b	414a88 <ferror@plt+0x120e8>
  414d0c:	mov	w0, w5
  414d10:	b	414b3c <ferror@plt+0x1219c>
  414d14:	ldr	x1, [sp, #208]
  414d18:	ldrb	w0, [x1]
  414d1c:	cbz	w0, 413f30 <ferror@plt+0x11590>
  414d20:	cmp	x23, x19
  414d24:	b.ls	414d2c <ferror@plt+0x1238c>  // b.plast
  414d28:	strb	w0, [x28, x19]
  414d2c:	add	x19, x19, #0x1
  414d30:	ldrb	w0, [x1, x19]
  414d34:	cbnz	w0, 414d20 <ferror@plt+0x12380>
  414d38:	b	413f30 <ferror@plt+0x11590>
  414d3c:	mov	x8, x21
  414d40:	ldr	w11, [sp, #136]
  414d44:	ldr	w24, [sp, #152]
  414d48:	mov	w2, w22
  414d4c:	ldr	w10, [sp, #160]
  414d50:	mov	w21, #0x0                   	// #0
  414d54:	ldp	w4, w5, [sp, #172]
  414d58:	ldr	x12, [sp, #144]
  414d5c:	ldr	x19, [sp, #184]
  414d60:	ldr	x6, [sp, #216]
  414d64:	b	414870 <ferror@plt+0x11ed0>
  414d68:	mov	x9, x24
  414d6c:	cmp	x24, x25
  414d70:	ldr	w11, [sp, #136]
  414d74:	mov	x8, x21
  414d78:	ldr	w24, [sp, #152]
  414d7c:	ldr	w10, [sp, #160]
  414d80:	ldp	w4, w5, [sp, #172]
  414d84:	ldr	x12, [sp, #144]
  414d88:	ldr	x19, [sp, #184]
  414d8c:	ldr	x6, [sp, #216]
  414d90:	b.cc	414da8 <ferror@plt+0x12408>  // b.lo, b.ul, b.last
  414d94:	b	414db0 <ferror@plt+0x12410>
  414d98:	add	x8, x8, #0x1
  414d9c:	add	x9, x20, x8
  414da0:	cmp	x25, x9
  414da4:	b.ls	414db0 <ferror@plt+0x12410>  // b.plast
  414da8:	ldrb	w0, [x27, x9]
  414dac:	cbnz	w0, 414d98 <ferror@plt+0x123f8>
  414db0:	mov	w2, w22
  414db4:	mov	w21, #0x0                   	// #0
  414db8:	b	414870 <ferror@plt+0x11ed0>
  414dbc:	mov	w0, w11
  414dc0:	ldr	x1, [sp, #112]
  414dc4:	cmp	x1, #0x0
  414dc8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  414dcc:	b.eq	414df4 <ferror@plt+0x12454>  // b.none
  414dd0:	ldrb	w0, [x1]
  414dd4:	cbz	w0, 414df4 <ferror@plt+0x12454>
  414dd8:	sub	x26, x1, x19
  414ddc:	cmp	x23, x19
  414de0:	b.ls	414de8 <ferror@plt+0x12448>  // b.plast
  414de4:	strb	w0, [x28, x19]
  414de8:	add	x19, x19, #0x1
  414dec:	ldrb	w0, [x26, x19]
  414df0:	cbnz	w0, 414ddc <ferror@plt+0x1243c>
  414df4:	cmp	x23, x19
  414df8:	b.ls	4143d4 <ferror@plt+0x11a34>  // b.plast
  414dfc:	strb	wzr, [x28, x19]
  414e00:	b	4143d4 <ferror@plt+0x11a34>
  414e04:	mov	w5, w22
  414e08:	b	414394 <ferror@plt+0x119f4>
  414e0c:	cmp	w26, #0x2
  414e10:	cset	w5, eq  // eq = none
  414e14:	b	414394 <ferror@plt+0x119f4>
  414e18:	ldr	w5, [sp, #200]
  414e1c:	mov	x3, x25
  414e20:	ldr	x1, [sp, #128]
  414e24:	mov	x2, x27
  414e28:	ldr	x7, [sp, #208]
  414e2c:	mov	w4, #0x5                   	// #5
  414e30:	ldr	x0, [sp, #240]
  414e34:	str	x0, [sp]
  414e38:	mov	x0, x28
  414e3c:	bl	413ea0 <ferror@plt+0x11500>
  414e40:	mov	x19, x0
  414e44:	b	4143d4 <ferror@plt+0x11a34>
  414e48:	ldr	w0, [sp, #120]
  414e4c:	b	414dc0 <ferror@plt+0x12420>
  414e50:	mov	w1, #0x0                   	// #0
  414e54:	mov	w21, #0x0                   	// #0
  414e58:	b	414320 <ferror@plt+0x11980>
  414e5c:	mov	w26, #0x2                   	// #2
  414e60:	b	414394 <ferror@plt+0x119f4>
  414e64:	mov	w10, #0x1                   	// #1
  414e68:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x1878>
  414e6c:	mov	w11, w10
  414e70:	add	x0, x0, #0x248
  414e74:	mov	w7, #0x0                   	// #0
  414e78:	mov	w5, #0x0                   	// #0
  414e7c:	mov	x12, #0x1                   	// #1
  414e80:	mov	x19, #0x0                   	// #0
  414e84:	str	x0, [sp, #112]
  414e88:	str	wzr, [sp, #120]
  414e8c:	str	xzr, [sp, #128]
  414e90:	b	413fb0 <ferror@plt+0x11610>
  414e94:	ldr	x23, [sp, #128]
  414e98:	b	414240 <ferror@plt+0x118a0>
  414e9c:	mov	w7, #0x0                   	// #0
  414ea0:	mov	w0, #0x0                   	// #0
  414ea4:	mov	w10, #0x1                   	// #1
  414ea8:	mov	x1, #0x0                   	// #0
  414eac:	str	x23, [sp, #128]
  414eb0:	b	414100 <ferror@plt+0x11760>
  414eb4:	bl	4026d0 <abort@plt>
  414eb8:	sub	sp, sp, #0x80
  414ebc:	stp	x29, x30, [sp, #16]
  414ec0:	add	x29, sp, #0x10
  414ec4:	stp	x19, x20, [sp, #32]
  414ec8:	mov	w19, w0
  414ecc:	mov	x20, x3
  414ed0:	stp	x21, x22, [sp, #48]
  414ed4:	stp	x23, x24, [sp, #64]
  414ed8:	mov	x23, x1
  414edc:	mov	x24, x2
  414ee0:	stp	x25, x26, [sp, #80]
  414ee4:	stp	x27, x28, [sp, #96]
  414ee8:	bl	402920 <__errno_location@plt>
  414eec:	mov	x22, x0
  414ef0:	ldr	w0, [x0]
  414ef4:	adrp	x27, 431000 <_obstack_memory_used@@Base+0x19878>
  414ef8:	str	w0, [sp, #116]
  414efc:	ldr	x21, [x27, #912]
  414f00:	tbnz	w19, #31, 415058 <ferror@plt+0x126b8>
  414f04:	add	x26, x27, #0x390
  414f08:	ldr	w0, [x26, #8]
  414f0c:	cmp	w0, w19
  414f10:	b.gt	414f60 <ferror@plt+0x125c0>
  414f14:	mov	w0, #0x7fffffff            	// #2147483647
  414f18:	cmp	w19, w0
  414f1c:	b.eq	415054 <ferror@plt+0x126b4>  // b.none
  414f20:	add	w28, w19, #0x1
  414f24:	add	x0, x26, #0x10
  414f28:	cmp	x21, x0
  414f2c:	sbfiz	x1, x28, #4, #32
  414f30:	b.eq	415038 <ferror@plt+0x12698>  // b.none
  414f34:	mov	x0, x21
  414f38:	bl	4169c8 <ferror@plt+0x14028>
  414f3c:	mov	x21, x0
  414f40:	str	x0, [x27, #912]
  414f44:	ldr	w0, [x26, #8]
  414f48:	mov	w1, #0x0                   	// #0
  414f4c:	sub	w2, w28, w0
  414f50:	add	x0, x21, w0, sxtw #4
  414f54:	sbfiz	x2, x2, #4, #32
  414f58:	bl	4025c0 <memset@plt>
  414f5c:	str	w28, [x26, #8]
  414f60:	sbfiz	x19, x19, #4, #32
  414f64:	add	x26, x20, #0x8
  414f68:	add	x0, x21, x19
  414f6c:	str	x0, [sp, #120]
  414f70:	ldp	w4, w5, [x20]
  414f74:	mov	x6, x26
  414f78:	ldr	x7, [x20, #40]
  414f7c:	orr	w25, w5, #0x1
  414f80:	ldr	x27, [x21, x19]
  414f84:	mov	x3, x24
  414f88:	ldr	x28, [x0, #8]
  414f8c:	mov	x1, x27
  414f90:	ldr	x0, [x20, #48]
  414f94:	str	x0, [sp]
  414f98:	mov	x2, x23
  414f9c:	mov	w5, w25
  414fa0:	mov	x0, x28
  414fa4:	bl	413ea0 <ferror@plt+0x11500>
  414fa8:	cmp	x27, x0
  414fac:	b.hi	41500c <ferror@plt+0x1266c>  // b.pmore
  414fb0:	add	x27, x0, #0x1
  414fb4:	str	x27, [x21, x19]
  414fb8:	adrp	x0, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  414fbc:	add	x0, x0, #0xae8
  414fc0:	cmp	x28, x0
  414fc4:	b.eq	414fd0 <ferror@plt+0x12630>  // b.none
  414fc8:	mov	x0, x28
  414fcc:	bl	4027c0 <free@plt>
  414fd0:	mov	x0, x27
  414fd4:	bl	416968 <ferror@plt+0x13fc8>
  414fd8:	ldr	x1, [sp, #120]
  414fdc:	mov	x28, x0
  414fe0:	ldr	w4, [x20]
  414fe4:	mov	x6, x26
  414fe8:	ldr	x7, [x20, #40]
  414fec:	str	x0, [x1, #8]
  414ff0:	ldr	x1, [x20, #48]
  414ff4:	str	x1, [sp]
  414ff8:	mov	w5, w25
  414ffc:	mov	x3, x24
  415000:	mov	x2, x23
  415004:	mov	x1, x27
  415008:	bl	413ea0 <ferror@plt+0x11500>
  41500c:	ldr	w0, [sp, #116]
  415010:	ldp	x29, x30, [sp, #16]
  415014:	ldp	x19, x20, [sp, #32]
  415018:	ldp	x23, x24, [sp, #64]
  41501c:	ldp	x25, x26, [sp, #80]
  415020:	str	w0, [x22]
  415024:	mov	x0, x28
  415028:	ldp	x21, x22, [sp, #48]
  41502c:	ldp	x27, x28, [sp, #96]
  415030:	add	sp, sp, #0x80
  415034:	ret
  415038:	mov	x0, #0x0                   	// #0
  41503c:	bl	4169c8 <ferror@plt+0x14028>
  415040:	mov	x21, x0
  415044:	str	x0, [x27, #912]
  415048:	ldp	x0, x1, [x26, #16]
  41504c:	stp	x0, x1, [x21]
  415050:	b	414f44 <ferror@plt+0x125a4>
  415054:	bl	416bb0 <ferror@plt+0x14210>
  415058:	bl	4026d0 <abort@plt>
  41505c:	nop
  415060:	stp	x29, x30, [sp, #-48]!
  415064:	mov	x29, sp
  415068:	stp	x19, x20, [sp, #16]
  41506c:	mov	x20, x0
  415070:	str	x21, [sp, #32]
  415074:	bl	402920 <__errno_location@plt>
  415078:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  41507c:	mov	x19, x0
  415080:	add	x2, x2, #0xae8
  415084:	cmp	x20, #0x0
  415088:	add	x2, x2, #0x100
  41508c:	mov	x1, #0x38                  	// #56
  415090:	ldr	w21, [x19]
  415094:	csel	x0, x2, x20, eq  // eq = none
  415098:	bl	416b50 <ferror@plt+0x141b0>
  41509c:	str	w21, [x19]
  4150a0:	ldp	x19, x20, [sp, #16]
  4150a4:	ldr	x21, [sp, #32]
  4150a8:	ldp	x29, x30, [sp], #48
  4150ac:	ret
  4150b0:	adrp	x1, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4150b4:	add	x1, x1, #0xae8
  4150b8:	cmp	x0, #0x0
  4150bc:	add	x1, x1, #0x100
  4150c0:	csel	x0, x1, x0, eq  // eq = none
  4150c4:	ldr	w0, [x0]
  4150c8:	ret
  4150cc:	nop
  4150d0:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4150d4:	add	x2, x2, #0xae8
  4150d8:	cmp	x0, #0x0
  4150dc:	add	x2, x2, #0x100
  4150e0:	csel	x0, x2, x0, eq  // eq = none
  4150e4:	str	w1, [x0]
  4150e8:	ret
  4150ec:	nop
  4150f0:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4150f4:	add	x3, x3, #0xae8
  4150f8:	cmp	x0, #0x0
  4150fc:	add	x3, x3, #0x100
  415100:	csel	x0, x3, x0, eq  // eq = none
  415104:	ubfx	x4, x1, #5, #3
  415108:	add	x3, x0, #0x8
  41510c:	and	w1, w1, #0x1f
  415110:	ldr	w5, [x3, x4, lsl #2]
  415114:	lsr	w0, w5, w1
  415118:	eor	w2, w0, w2
  41511c:	and	w2, w2, #0x1
  415120:	and	w0, w0, #0x1
  415124:	lsl	w2, w2, w1
  415128:	eor	w2, w2, w5
  41512c:	str	w2, [x3, x4, lsl #2]
  415130:	ret
  415134:	nop
  415138:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  41513c:	add	x3, x3, #0xae8
  415140:	cmp	x0, #0x0
  415144:	add	x3, x3, #0x100
  415148:	csel	x2, x3, x0, eq  // eq = none
  41514c:	ldr	w0, [x2, #4]
  415150:	str	w1, [x2, #4]
  415154:	ret
  415158:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  41515c:	add	x3, x3, #0xae8
  415160:	cmp	x0, #0x0
  415164:	add	x3, x3, #0x100
  415168:	csel	x0, x3, x0, eq  // eq = none
  41516c:	mov	w3, #0xa                   	// #10
  415170:	cmp	x1, #0x0
  415174:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  415178:	str	w3, [x0]
  41517c:	b.eq	415188 <ferror@plt+0x127e8>  // b.none
  415180:	stp	x1, x2, [x0, #40]
  415184:	ret
  415188:	stp	x29, x30, [sp, #-16]!
  41518c:	mov	x29, sp
  415190:	bl	4026d0 <abort@plt>
  415194:	nop
  415198:	sub	sp, sp, #0x50
  41519c:	adrp	x5, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4151a0:	stp	x29, x30, [sp, #16]
  4151a4:	add	x29, sp, #0x10
  4151a8:	stp	x19, x20, [sp, #32]
  4151ac:	mov	x19, x4
  4151b0:	add	x4, x5, #0xae8
  4151b4:	cmp	x19, #0x0
  4151b8:	add	x4, x4, #0x100
  4151bc:	csel	x19, x4, x19, eq  // eq = none
  4151c0:	mov	x20, x3
  4151c4:	stp	x21, x22, [sp, #48]
  4151c8:	mov	x21, x0
  4151cc:	mov	x22, x1
  4151d0:	str	x23, [sp, #64]
  4151d4:	mov	x23, x2
  4151d8:	bl	402920 <__errno_location@plt>
  4151dc:	ldp	x7, x8, [x19, #40]
  4151e0:	mov	x3, x20
  4151e4:	mov	x20, x0
  4151e8:	mov	x0, x21
  4151ec:	ldp	w4, w5, [x19]
  4151f0:	mov	x2, x23
  4151f4:	ldr	w21, [x20]
  4151f8:	mov	x1, x22
  4151fc:	str	x8, [sp]
  415200:	add	x6, x19, #0x8
  415204:	bl	413ea0 <ferror@plt+0x11500>
  415208:	ldp	x29, x30, [sp, #16]
  41520c:	ldr	x23, [sp, #64]
  415210:	str	w21, [x20]
  415214:	ldp	x19, x20, [sp, #32]
  415218:	ldp	x21, x22, [sp, #48]
  41521c:	add	sp, sp, #0x50
  415220:	ret
  415224:	nop
  415228:	sub	sp, sp, #0x70
  41522c:	adrp	x4, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  415230:	add	x4, x4, #0xae8
  415234:	cmp	x3, #0x0
  415238:	add	x4, x4, #0x100
  41523c:	stp	x29, x30, [sp, #16]
  415240:	add	x29, sp, #0x10
  415244:	stp	x19, x20, [sp, #32]
  415248:	csel	x19, x4, x3, eq  // eq = none
  41524c:	mov	x20, x2
  415250:	stp	x21, x22, [sp, #48]
  415254:	mov	x22, x0
  415258:	stp	x23, x24, [sp, #64]
  41525c:	mov	x23, x1
  415260:	stp	x25, x26, [sp, #80]
  415264:	stp	x27, x28, [sp, #96]
  415268:	bl	402920 <__errno_location@plt>
  41526c:	ldr	w28, [x0]
  415270:	ldp	w4, w5, [x19]
  415274:	mov	x21, x0
  415278:	ldp	x7, x0, [x19, #40]
  41527c:	cmp	x20, #0x0
  415280:	cset	w24, eq  // eq = none
  415284:	add	x27, x19, #0x8
  415288:	orr	w24, w24, w5
  41528c:	mov	x6, x27
  415290:	mov	x3, x23
  415294:	mov	x2, x22
  415298:	mov	w5, w24
  41529c:	str	x0, [sp]
  4152a0:	mov	x1, #0x0                   	// #0
  4152a4:	mov	x0, #0x0                   	// #0
  4152a8:	bl	413ea0 <ferror@plt+0x11500>
  4152ac:	add	x26, x0, #0x1
  4152b0:	mov	x25, x0
  4152b4:	mov	x0, x26
  4152b8:	bl	416968 <ferror@plt+0x13fc8>
  4152bc:	ldp	x7, x1, [x19, #40]
  4152c0:	mov	w5, w24
  4152c4:	ldr	w4, [x19]
  4152c8:	mov	x6, x27
  4152cc:	str	x1, [sp]
  4152d0:	mov	x3, x23
  4152d4:	mov	x2, x22
  4152d8:	mov	x19, x0
  4152dc:	mov	x1, x26
  4152e0:	bl	413ea0 <ferror@plt+0x11500>
  4152e4:	str	w28, [x21]
  4152e8:	cbz	x20, 4152f0 <ferror@plt+0x12950>
  4152ec:	str	x25, [x20]
  4152f0:	mov	x0, x19
  4152f4:	ldp	x29, x30, [sp, #16]
  4152f8:	ldp	x19, x20, [sp, #32]
  4152fc:	ldp	x21, x22, [sp, #48]
  415300:	ldp	x23, x24, [sp, #64]
  415304:	ldp	x25, x26, [sp, #80]
  415308:	ldp	x27, x28, [sp, #96]
  41530c:	add	sp, sp, #0x70
  415310:	ret
  415314:	nop
  415318:	mov	x3, x2
  41531c:	mov	x2, #0x0                   	// #0
  415320:	b	415228 <ferror@plt+0x12888>
  415324:	nop
  415328:	stp	x29, x30, [sp, #-64]!
  41532c:	mov	x29, sp
  415330:	stp	x21, x22, [sp, #32]
  415334:	str	x23, [sp, #48]
  415338:	adrp	x23, 431000 <_obstack_memory_used@@Base+0x19878>
  41533c:	add	x22, x23, #0x390
  415340:	stp	x19, x20, [sp, #16]
  415344:	ldr	x21, [x23, #912]
  415348:	ldr	w20, [x22, #8]
  41534c:	cmp	w20, #0x1
  415350:	b.le	415378 <ferror@plt+0x129d8>
  415354:	sub	w0, w20, #0x2
  415358:	add	x20, x21, #0x28
  41535c:	add	x19, x21, #0x18
  415360:	add	x20, x20, w0, uxtw #4
  415364:	nop
  415368:	ldr	x0, [x19], #16
  41536c:	bl	4027c0 <free@plt>
  415370:	cmp	x19, x20
  415374:	b.ne	415368 <ferror@plt+0x129c8>  // b.any
  415378:	ldr	x0, [x21, #8]
  41537c:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  415380:	add	x19, x19, #0xae8
  415384:	cmp	x0, x19
  415388:	b.eq	415398 <ferror@plt+0x129f8>  // b.none
  41538c:	bl	4027c0 <free@plt>
  415390:	mov	x0, #0x100                 	// #256
  415394:	stp	x0, x19, [x22, #16]
  415398:	add	x19, x22, #0x10
  41539c:	cmp	x21, x19
  4153a0:	b.eq	4153b0 <ferror@plt+0x12a10>  // b.none
  4153a4:	mov	x0, x21
  4153a8:	bl	4027c0 <free@plt>
  4153ac:	str	x19, [x23, #912]
  4153b0:	mov	w0, #0x1                   	// #1
  4153b4:	str	w0, [x22, #8]
  4153b8:	ldp	x19, x20, [sp, #16]
  4153bc:	ldp	x21, x22, [sp, #32]
  4153c0:	ldr	x23, [sp, #48]
  4153c4:	ldp	x29, x30, [sp], #64
  4153c8:	ret
  4153cc:	nop
  4153d0:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4153d4:	add	x3, x3, #0xae8
  4153d8:	add	x3, x3, #0x100
  4153dc:	mov	x2, #0xffffffffffffffff    	// #-1
  4153e0:	b	414eb8 <ferror@plt+0x12518>
  4153e4:	nop
  4153e8:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4153ec:	add	x3, x3, #0xae8
  4153f0:	add	x3, x3, #0x100
  4153f4:	b	414eb8 <ferror@plt+0x12518>
  4153f8:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4153fc:	add	x3, x3, #0xae8
  415400:	mov	x1, x0
  415404:	add	x3, x3, #0x100
  415408:	mov	x2, #0xffffffffffffffff    	// #-1
  41540c:	mov	w0, #0x0                   	// #0
  415410:	b	414eb8 <ferror@plt+0x12518>
  415414:	nop
  415418:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  41541c:	add	x3, x3, #0xae8
  415420:	mov	x2, x1
  415424:	add	x3, x3, #0x100
  415428:	mov	x1, x0
  41542c:	mov	w0, #0x0                   	// #0
  415430:	b	414eb8 <ferror@plt+0x12518>
  415434:	nop
  415438:	stp	x29, x30, [sp, #-96]!
  41543c:	add	x8, sp, #0x28
  415440:	mov	x29, sp
  415444:	stp	x19, x20, [sp, #16]
  415448:	mov	x20, x2
  41544c:	mov	w19, w0
  415450:	mov	w0, w1
  415454:	bl	413d38 <ferror@plt+0x11398>
  415458:	add	x3, sp, #0x28
  41545c:	mov	x1, x20
  415460:	mov	w0, w19
  415464:	mov	x2, #0xffffffffffffffff    	// #-1
  415468:	bl	414eb8 <ferror@plt+0x12518>
  41546c:	ldp	x19, x20, [sp, #16]
  415470:	ldp	x29, x30, [sp], #96
  415474:	ret
  415478:	stp	x29, x30, [sp, #-112]!
  41547c:	add	x8, sp, #0x38
  415480:	mov	x29, sp
  415484:	stp	x19, x20, [sp, #16]
  415488:	mov	x20, x2
  41548c:	mov	w19, w0
  415490:	mov	w0, w1
  415494:	str	x21, [sp, #32]
  415498:	mov	x21, x3
  41549c:	bl	413d38 <ferror@plt+0x11398>
  4154a0:	add	x3, sp, #0x38
  4154a4:	mov	x2, x21
  4154a8:	mov	x1, x20
  4154ac:	mov	w0, w19
  4154b0:	bl	414eb8 <ferror@plt+0x12518>
  4154b4:	ldp	x19, x20, [sp, #16]
  4154b8:	ldr	x21, [sp, #32]
  4154bc:	ldp	x29, x30, [sp], #112
  4154c0:	ret
  4154c4:	nop
  4154c8:	mov	x2, x1
  4154cc:	mov	w1, w0
  4154d0:	mov	w0, #0x0                   	// #0
  4154d4:	b	415438 <ferror@plt+0x12a98>
  4154d8:	mov	x4, x1
  4154dc:	mov	x3, x2
  4154e0:	mov	w1, w0
  4154e4:	mov	x2, x4
  4154e8:	mov	w0, #0x0                   	// #0
  4154ec:	b	415478 <ferror@plt+0x12ad8>
  4154f0:	adrp	x3, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4154f4:	add	x3, x3, #0xae8
  4154f8:	stp	x29, x30, [sp, #-80]!
  4154fc:	add	x5, x3, #0x100
  415500:	ubfx	x7, x2, #5, #3
  415504:	mov	x29, sp
  415508:	ldp	x8, x9, [x3, #256]
  41550c:	stp	x8, x9, [sp, #24]
  415510:	add	x6, sp, #0x20
  415514:	and	w8, w2, #0x1f
  415518:	add	x4, sp, #0x18
  41551c:	ldp	x2, x3, [x3, #272]
  415520:	stp	x2, x3, [sp, #40]
  415524:	ldp	x2, x3, [x5, #32]
  415528:	stp	x2, x3, [sp, #56]
  41552c:	mov	x2, x1
  415530:	mov	x3, x4
  415534:	ldr	x1, [x5, #48]
  415538:	str	x1, [sp, #72]
  41553c:	mov	x1, x0
  415540:	mov	w0, #0x0                   	// #0
  415544:	ldr	w5, [x6, x7, lsl #2]
  415548:	lsr	w4, w5, w8
  41554c:	mvn	w4, w4
  415550:	and	w4, w4, #0x1
  415554:	lsl	w4, w4, w8
  415558:	eor	w4, w4, w5
  41555c:	str	w4, [x6, x7, lsl #2]
  415560:	bl	414eb8 <ferror@plt+0x12518>
  415564:	ldp	x29, x30, [sp], #80
  415568:	ret
  41556c:	nop
  415570:	mov	w2, w1
  415574:	mov	x1, #0xffffffffffffffff    	// #-1
  415578:	b	4154f0 <ferror@plt+0x12b50>
  41557c:	nop
  415580:	mov	w2, #0x3a                  	// #58
  415584:	mov	x1, #0xffffffffffffffff    	// #-1
  415588:	b	4154f0 <ferror@plt+0x12b50>
  41558c:	nop
  415590:	mov	w2, #0x3a                  	// #58
  415594:	b	4154f0 <ferror@plt+0x12b50>
  415598:	stp	x29, x30, [sp, #-160]!
  41559c:	mov	x29, sp
  4155a0:	add	x8, sp, #0x20
  4155a4:	stp	x19, x20, [sp, #16]
  4155a8:	mov	x20, x2
  4155ac:	mov	w19, w0
  4155b0:	mov	w0, w1
  4155b4:	bl	413d38 <ferror@plt+0x11398>
  4155b8:	ldp	x0, x1, [sp, #32]
  4155bc:	stp	x0, x1, [sp, #104]
  4155c0:	add	x3, sp, #0x68
  4155c4:	ldr	w2, [sp, #116]
  4155c8:	mov	x1, x20
  4155cc:	ldp	x6, x7, [sp, #48]
  4155d0:	mvn	w4, w2
  4155d4:	ldp	x8, x9, [sp, #64]
  4155d8:	and	w4, w4, #0x4000000
  4155dc:	ldr	x5, [sp, #80]
  4155e0:	eor	w4, w4, w2
  4155e4:	mov	w0, w19
  4155e8:	mov	x2, #0xffffffffffffffff    	// #-1
  4155ec:	str	w4, [sp, #116]
  4155f0:	stp	x6, x7, [sp, #120]
  4155f4:	stp	x8, x9, [sp, #136]
  4155f8:	str	x5, [sp, #152]
  4155fc:	bl	414eb8 <ferror@plt+0x12518>
  415600:	ldp	x19, x20, [sp, #16]
  415604:	ldp	x29, x30, [sp], #160
  415608:	ret
  41560c:	nop
  415610:	adrp	x5, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  415614:	add	x5, x5, #0xae8
  415618:	stp	x29, x30, [sp, #-80]!
  41561c:	mov	x6, x1
  415620:	mov	w1, #0xa                   	// #10
  415624:	mov	x29, sp
  415628:	ldp	x8, x9, [x5, #256]
  41562c:	stp	x8, x9, [sp, #24]
  415630:	cmp	x6, #0x0
  415634:	str	w1, [sp, #24]
  415638:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  41563c:	ldp	x10, x11, [x5, #272]
  415640:	stp	x10, x11, [sp, #40]
  415644:	ldp	x8, x9, [x5, #288]
  415648:	stp	x8, x9, [sp, #56]
  41564c:	ldr	x1, [x5, #304]
  415650:	str	x1, [sp, #72]
  415654:	b.eq	415678 <ferror@plt+0x12cd8>  // b.none
  415658:	mov	x5, x2
  41565c:	mov	x1, x3
  415660:	mov	x2, x4
  415664:	add	x3, sp, #0x18
  415668:	stp	x6, x5, [sp, #64]
  41566c:	bl	414eb8 <ferror@plt+0x12518>
  415670:	ldp	x29, x30, [sp], #80
  415674:	ret
  415678:	bl	4026d0 <abort@plt>
  41567c:	nop
  415680:	mov	x4, #0xffffffffffffffff    	// #-1
  415684:	b	415610 <ferror@plt+0x12c70>
  415688:	mov	x4, x1
  41568c:	mov	x3, x2
  415690:	mov	x1, x0
  415694:	mov	x2, x4
  415698:	mov	w0, #0x0                   	// #0
  41569c:	mov	x4, #0xffffffffffffffff    	// #-1
  4156a0:	b	415610 <ferror@plt+0x12c70>
  4156a4:	nop
  4156a8:	mov	x4, x1
  4156ac:	mov	x5, x2
  4156b0:	mov	x1, x0
  4156b4:	mov	x2, x4
  4156b8:	mov	w0, #0x0                   	// #0
  4156bc:	mov	x4, x3
  4156c0:	mov	x3, x5
  4156c4:	b	415610 <ferror@plt+0x12c70>
  4156c8:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x19878>
  4156cc:	add	x3, x3, #0x390
  4156d0:	add	x3, x3, #0x20
  4156d4:	b	414eb8 <ferror@plt+0x12518>
  4156d8:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x19878>
  4156dc:	add	x3, x3, #0x390
  4156e0:	mov	x2, x1
  4156e4:	add	x3, x3, #0x20
  4156e8:	mov	x1, x0
  4156ec:	mov	w0, #0x0                   	// #0
  4156f0:	b	414eb8 <ferror@plt+0x12518>
  4156f4:	nop
  4156f8:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x19878>
  4156fc:	add	x3, x3, #0x390
  415700:	add	x3, x3, #0x20
  415704:	mov	x2, #0xffffffffffffffff    	// #-1
  415708:	b	414eb8 <ferror@plt+0x12518>
  41570c:	nop
  415710:	adrp	x3, 431000 <_obstack_memory_used@@Base+0x19878>
  415714:	add	x3, x3, #0x390
  415718:	mov	x1, x0
  41571c:	add	x3, x3, #0x20
  415720:	mov	x2, #0xffffffffffffffff    	// #-1
  415724:	mov	w0, #0x0                   	// #0
  415728:	b	414eb8 <ferror@plt+0x12518>
  41572c:	nop
  415730:	stp	x29, x30, [sp, #-32]!
  415734:	mov	x29, sp
  415738:	stp	x19, x20, [sp, #16]
  41573c:	mov	w20, w0
  415740:	b	415754 <ferror@plt+0x12db4>
  415744:	bl	402920 <__errno_location@plt>
  415748:	ldr	w1, [x0]
  41574c:	cmp	w1, #0x4
  415750:	b.ne	415764 <ferror@plt+0x12dc4>  // b.any
  415754:	mov	w0, w20
  415758:	bl	402660 <close@plt>
  41575c:	mov	w19, w0
  415760:	tbnz	w0, #31, 415744 <ferror@plt+0x12da4>
  415764:	mov	w0, w19
  415768:	ldp	x19, x20, [sp, #16]
  41576c:	ldp	x29, x30, [sp], #32
  415770:	ret
  415774:	nop
  415778:	sub	sp, sp, #0x2b0
  41577c:	stp	x29, x30, [sp]
  415780:	mov	x29, sp
  415784:	stp	x19, x20, [sp, #16]
  415788:	mov	x20, x5
  41578c:	and	w19, w3, #0xff
  415790:	stp	x21, x22, [sp, #32]
  415794:	mov	x21, x6
  415798:	ands	w22, w4, #0xff
  41579c:	stp	x23, x24, [sp, #48]
  4157a0:	mov	x23, x1
  4157a4:	mov	x24, x2
  4157a8:	stp	x25, x26, [sp, #64]
  4157ac:	ldrb	w26, [sp, #688]
  4157b0:	stp	x27, x28, [sp, #80]
  4157b4:	and	w27, w7, #0xff
  4157b8:	ldrb	w28, [sp, #696]
  4157bc:	str	x0, [sp, #96]
  4157c0:	b.ne	415914 <ferror@plt+0x12f74>  // b.any
  4157c4:	cbnz	w19, 415874 <ferror@plt+0x12ed4>
  4157c8:	cbnz	w26, 4158a0 <ferror@plt+0x12f00>
  4157cc:	add	x25, sp, #0x90
  4157d0:	mov	x0, x25
  4157d4:	bl	402720 <posix_spawn_file_actions_init@plt>
  4157d8:	mov	w1, w0
  4157dc:	cbnz	w0, 415844 <ferror@plt+0x12ea4>
  4157e0:	cbnz	w19, 4158cc <ferror@plt+0x12f2c>
  4157e4:	cbnz	w22, 415944 <ferror@plt+0x12fa4>
  4157e8:	cbnz	w27, 415988 <ferror@plt+0x12fe8>
  4157ec:	cmp	x20, #0x0
  4157f0:	eor	w0, w19, #0x1
  4157f4:	cset	w1, ne  // ne = any
  4157f8:	tst	w1, w0
  4157fc:	b.ne	4159b0 <ferror@plt+0x13010>  // b.any
  415800:	cmp	x21, #0x0
  415804:	eor	w0, w22, #0x1
  415808:	cset	w1, ne  // ne = any
  41580c:	tst	w1, w0
  415810:	b.ne	4159d4 <ferror@plt+0x13034>  // b.any
  415814:	cbz	w26, 415a48 <ferror@plt+0x130a8>
  415818:	add	x0, sp, #0x160
  41581c:	bl	402870 <posix_spawnattr_init@plt>
  415820:	mov	w1, w0
  415824:	cbz	w0, 415b30 <ferror@plt+0x13190>
  415828:	mov	x0, x25
  41582c:	str	w1, [sp, #108]
  415830:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415834:	ldr	w1, [sp, #108]
  415838:	str	w1, [sp, #108]
  41583c:	bl	4122b0 <ferror@plt+0xf910>
  415840:	ldr	w1, [sp, #108]
  415844:	eor	w0, w27, #0x1
  415848:	orr	w0, w28, w0
  41584c:	cbnz	w0, 415b0c <ferror@plt+0x1316c>
  415850:	cbnz	w22, 415af0 <ferror@plt+0x13150>
  415854:	cbnz	w19, 415bc4 <ferror@plt+0x13224>
  415858:	str	w1, [sp, #96]
  41585c:	bl	402920 <__errno_location@plt>
  415860:	mov	x2, x0
  415864:	ldr	w1, [sp, #96]
  415868:	mov	w0, #0xffffffff            	// #-1
  41586c:	str	w1, [x2]
  415870:	b	415a84 <ferror@plt+0x130e4>
  415874:	add	x0, sp, #0x88
  415878:	bl	415f80 <ferror@plt+0x135e0>
  41587c:	tbz	w0, #31, 4157c8 <ferror@plt+0x12e28>
  415880:	bl	402920 <__errno_location@plt>
  415884:	mov	x1, x0
  415888:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  41588c:	mov	w0, #0x1                   	// #1
  415890:	add	x2, x2, #0x7d0
  415894:	ldr	w1, [x1]
  415898:	bl	4023e0 <error@plt>
  41589c:	cbz	w26, 4157cc <ferror@plt+0x12e2c>
  4158a0:	add	x2, sp, #0xe0
  4158a4:	mov	x1, #0x0                   	// #0
  4158a8:	mov	w0, #0x2                   	// #2
  4158ac:	bl	4023f0 <sigprocmask@plt>
  4158b0:	add	x25, sp, #0x90
  4158b4:	bl	412278 <ferror@plt+0xf8d8>
  4158b8:	mov	x0, x25
  4158bc:	bl	402720 <posix_spawn_file_actions_init@plt>
  4158c0:	mov	w1, w0
  4158c4:	cbnz	w0, 415838 <ferror@plt+0x12e98>
  4158c8:	cbz	w19, 4157e4 <ferror@plt+0x12e44>
  4158cc:	ldr	w1, [sp, #136]
  4158d0:	mov	x0, x25
  4158d4:	mov	w2, #0x0                   	// #0
  4158d8:	bl	4024d0 <posix_spawn_file_actions_adddup2@plt>
  4158dc:	mov	w1, w0
  4158e0:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  4158e4:	cbnz	w22, 415be0 <ferror@plt+0x13240>
  4158e8:	ldr	w1, [sp, #136]
  4158ec:	mov	x0, x25
  4158f0:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  4158f4:	mov	w1, w0
  4158f8:	cbz	w0, 4159f8 <ferror@plt+0x13058>
  4158fc:	mov	x0, x25
  415900:	str	w1, [sp, #108]
  415904:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415908:	ldr	w1, [sp, #108]
  41590c:	cbz	w26, 415844 <ferror@plt+0x12ea4>
  415910:	b	415838 <ferror@plt+0x12e98>
  415914:	add	x0, sp, #0x80
  415918:	bl	415f80 <ferror@plt+0x135e0>
  41591c:	tbz	w0, #31, 4157c4 <ferror@plt+0x12e24>
  415920:	bl	402920 <__errno_location@plt>
  415924:	mov	x1, x0
  415928:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  41592c:	mov	w0, #0x1                   	// #1
  415930:	add	x2, x2, #0x7d0
  415934:	ldr	w1, [x1]
  415938:	bl	4023e0 <error@plt>
  41593c:	cbz	w19, 4157c8 <ferror@plt+0x12e28>
  415940:	b	415874 <ferror@plt+0x12ed4>
  415944:	ldr	w1, [sp, #132]
  415948:	mov	x0, x25
  41594c:	mov	w2, #0x1                   	// #1
  415950:	bl	4024d0 <posix_spawn_file_actions_adddup2@plt>
  415954:	mov	w1, w0
  415958:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  41595c:	ldr	w1, [sp, #132]
  415960:	mov	x0, x25
  415964:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  415968:	mov	w1, w0
  41596c:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  415970:	ldr	w1, [sp, #128]
  415974:	mov	x0, x25
  415978:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  41597c:	mov	w1, w0
  415980:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  415984:	cbz	w27, 4157ec <ferror@plt+0x12e4c>
  415988:	mov	w3, #0x2                   	// #2
  41598c:	mov	w1, w3
  415990:	mov	x0, x25
  415994:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  415998:	mov	w4, #0x0                   	// #0
  41599c:	add	x2, x2, #0xb28
  4159a0:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  4159a4:	mov	w1, w0
  4159a8:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  4159ac:	b	4157ec <ferror@plt+0x12e4c>
  4159b0:	mov	w1, #0x0                   	// #0
  4159b4:	mov	x2, x20
  4159b8:	mov	x0, x25
  4159bc:	mov	w4, #0x0                   	// #0
  4159c0:	mov	w3, #0x0                   	// #0
  4159c4:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  4159c8:	mov	w1, w0
  4159cc:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  4159d0:	b	415800 <ferror@plt+0x12e60>
  4159d4:	mov	w3, #0x1                   	// #1
  4159d8:	mov	w1, w3
  4159dc:	mov	x2, x21
  4159e0:	mov	x0, x25
  4159e4:	mov	w4, #0x0                   	// #0
  4159e8:	bl	402480 <posix_spawn_file_actions_addopen@plt>
  4159ec:	mov	w1, w0
  4159f0:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  4159f4:	b	415814 <ferror@plt+0x12e74>
  4159f8:	cbnz	w22, 415a18 <ferror@plt+0x13078>
  4159fc:	cbz	w19, 4157e8 <ferror@plt+0x12e48>
  415a00:	ldr	w1, [sp, #140]
  415a04:	mov	x0, x25
  415a08:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  415a0c:	mov	w1, w0
  415a10:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  415a14:	b	4157e8 <ferror@plt+0x12e48>
  415a18:	ldr	w1, [sp, #132]
  415a1c:	mov	x0, x25
  415a20:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  415a24:	mov	w1, w0
  415a28:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  415a2c:	cbz	w19, 415970 <ferror@plt+0x12fd0>
  415a30:	ldr	w1, [sp, #140]
  415a34:	mov	x0, x25
  415a38:	bl	402650 <posix_spawn_file_actions_addclose@plt>
  415a3c:	mov	w1, w0
  415a40:	cbz	w0, 415970 <ferror@plt+0x12fd0>
  415a44:	b	4158fc <ferror@plt+0x12f5c>
  415a48:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  415a4c:	mov	x1, x23
  415a50:	mov	x4, x24
  415a54:	mov	x2, x25
  415a58:	ldr	x5, [x0, #1072]
  415a5c:	mov	x3, #0x0                   	// #0
  415a60:	add	x0, sp, #0x7c
  415a64:	bl	402800 <posix_spawnp@plt>
  415a68:	mov	w1, w0
  415a6c:	cbnz	w0, 415bfc <ferror@plt+0x1325c>
  415a70:	mov	x0, x25
  415a74:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415a78:	cbnz	w19, 415abc <ferror@plt+0x1311c>
  415a7c:	cbnz	w22, 415aa4 <ferror@plt+0x13104>
  415a80:	ldr	w0, [sp, #124]
  415a84:	ldp	x29, x30, [sp]
  415a88:	ldp	x19, x20, [sp, #16]
  415a8c:	ldp	x21, x22, [sp, #32]
  415a90:	ldp	x23, x24, [sp, #48]
  415a94:	ldp	x25, x26, [sp, #64]
  415a98:	ldp	x27, x28, [sp, #80]
  415a9c:	add	sp, sp, #0x2b0
  415aa0:	ret
  415aa4:	ldr	w0, [sp, #132]
  415aa8:	bl	415730 <ferror@plt+0x12d90>
  415aac:	ldr	x1, [sp, #704]
  415ab0:	ldr	w0, [sp, #128]
  415ab4:	str	w0, [x1]
  415ab8:	b	415a80 <ferror@plt+0x130e0>
  415abc:	ldr	w0, [sp, #136]
  415ac0:	bl	415730 <ferror@plt+0x12d90>
  415ac4:	cbnz	w22, 415ad8 <ferror@plt+0x13138>
  415ac8:	ldr	x1, [sp, #704]
  415acc:	ldr	w0, [sp, #140]
  415ad0:	str	w0, [x1, #4]
  415ad4:	b	415a80 <ferror@plt+0x130e0>
  415ad8:	ldr	w0, [sp, #132]
  415adc:	bl	415730 <ferror@plt+0x12d90>
  415ae0:	ldr	x1, [sp, #704]
  415ae4:	ldr	w0, [sp, #128]
  415ae8:	str	w0, [x1]
  415aec:	b	415ac8 <ferror@plt+0x13128>
  415af0:	ldr	w0, [sp, #128]
  415af4:	str	w1, [sp, #96]
  415af8:	bl	415730 <ferror@plt+0x12d90>
  415afc:	ldr	w0, [sp, #132]
  415b00:	bl	415730 <ferror@plt+0x12d90>
  415b04:	ldr	w1, [sp, #96]
  415b08:	b	415854 <ferror@plt+0x12eb4>
  415b0c:	ldr	x3, [sp, #96]
  415b10:	mov	w0, w28
  415b14:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  415b18:	add	x2, x2, #0xb38
  415b1c:	str	w1, [sp, #96]
  415b20:	bl	4023e0 <error@plt>
  415b24:	ldr	w1, [sp, #96]
  415b28:	cbz	w22, 415854 <ferror@plt+0x12eb4>
  415b2c:	b	415af0 <ferror@plt+0x13150>
  415b30:	add	x1, sp, #0xe0
  415b34:	add	x0, sp, #0x160
  415b38:	bl	402700 <posix_spawnattr_setsigmask@plt>
  415b3c:	mov	w1, w0
  415b40:	cbz	w0, 415b68 <ferror@plt+0x131c8>
  415b44:	mov	x0, x25
  415b48:	str	w1, [sp, #108]
  415b4c:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415b50:	ldr	w1, [sp, #108]
  415b54:	add	x0, sp, #0x160
  415b58:	str	w1, [sp, #108]
  415b5c:	bl	402580 <posix_spawnattr_destroy@plt>
  415b60:	ldr	w1, [sp, #108]
  415b64:	b	415838 <ferror@plt+0x12e98>
  415b68:	mov	w1, #0x8                   	// #8
  415b6c:	add	x0, sp, #0x160
  415b70:	bl	4026c0 <posix_spawnattr_setflags@plt>
  415b74:	mov	w1, w0
  415b78:	cbnz	w0, 415b44 <ferror@plt+0x131a4>
  415b7c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  415b80:	mov	x1, x23
  415b84:	mov	x4, x24
  415b88:	add	x3, sp, #0x160
  415b8c:	ldr	x5, [x0, #1072]
  415b90:	mov	x2, x25
  415b94:	add	x0, sp, #0x7c
  415b98:	bl	402800 <posix_spawnp@plt>
  415b9c:	mov	w1, w0
  415ba0:	cbnz	w0, 415b44 <ferror@plt+0x131a4>
  415ba4:	mov	x0, x25
  415ba8:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415bac:	add	x0, sp, #0x160
  415bb0:	bl	402580 <posix_spawnattr_destroy@plt>
  415bb4:	ldr	w0, [sp, #124]
  415bb8:	bl	416640 <ferror@plt+0x13ca0>
  415bbc:	bl	4122b0 <ferror@plt+0xf910>
  415bc0:	b	415a78 <ferror@plt+0x130d8>
  415bc4:	ldr	w0, [sp, #136]
  415bc8:	str	w1, [sp, #96]
  415bcc:	bl	415730 <ferror@plt+0x12d90>
  415bd0:	ldr	w0, [sp, #140]
  415bd4:	bl	415730 <ferror@plt+0x12d90>
  415bd8:	ldr	w1, [sp, #96]
  415bdc:	b	415858 <ferror@plt+0x12eb8>
  415be0:	ldr	w1, [sp, #132]
  415be4:	mov	x0, x25
  415be8:	mov	w2, #0x1                   	// #1
  415bec:	bl	4024d0 <posix_spawn_file_actions_adddup2@plt>
  415bf0:	mov	w1, w0
  415bf4:	cbnz	w0, 4158fc <ferror@plt+0x12f5c>
  415bf8:	b	4158e8 <ferror@plt+0x12f48>
  415bfc:	mov	x0, x25
  415c00:	str	w1, [sp, #108]
  415c04:	bl	402610 <posix_spawn_file_actions_destroy@plt>
  415c08:	ldr	w1, [sp, #108]
  415c0c:	b	415844 <ferror@plt+0x12ea4>
  415c10:	sub	sp, sp, #0x30
  415c14:	mov	w7, w3
  415c18:	stp	x29, x30, [sp, #32]
  415c1c:	add	x29, sp, #0x20
  415c20:	strb	w4, [sp]
  415c24:	mov	w4, #0x1                   	// #1
  415c28:	strb	w5, [sp, #8]
  415c2c:	mov	w3, w4
  415c30:	str	x6, [sp, #16]
  415c34:	mov	x5, #0x0                   	// #0
  415c38:	mov	x6, #0x0                   	// #0
  415c3c:	bl	415778 <ferror@plt+0x12dd8>
  415c40:	ldp	x29, x30, [sp, #32]
  415c44:	add	sp, sp, #0x30
  415c48:	ret
  415c4c:	nop
  415c50:	sub	sp, sp, #0x50
  415c54:	add	x8, sp, #0x48
  415c58:	stp	x29, x30, [sp, #32]
  415c5c:	add	x29, sp, #0x20
  415c60:	strb	w5, [sp]
  415c64:	mov	x5, x3
  415c68:	strb	w6, [sp, #8]
  415c6c:	mov	w3, #0x0                   	// #0
  415c70:	str	x8, [sp, #16]
  415c74:	mov	x6, #0x0                   	// #0
  415c78:	str	x19, [sp, #48]
  415c7c:	mov	x19, x7
  415c80:	mov	w7, w4
  415c84:	mov	w4, #0x1                   	// #1
  415c88:	bl	415778 <ferror@plt+0x12dd8>
  415c8c:	cmn	w0, #0x1
  415c90:	b.eq	415c9c <ferror@plt+0x132fc>  // b.none
  415c94:	ldr	w1, [sp, #72]
  415c98:	str	w1, [x19]
  415c9c:	ldp	x29, x30, [sp, #32]
  415ca0:	ldr	x19, [sp, #48]
  415ca4:	add	sp, sp, #0x50
  415ca8:	ret
  415cac:	nop
  415cb0:	sub	sp, sp, #0x50
  415cb4:	add	x8, sp, #0x48
  415cb8:	stp	x29, x30, [sp, #32]
  415cbc:	add	x29, sp, #0x20
  415cc0:	strb	w5, [sp]
  415cc4:	mov	x5, #0x0                   	// #0
  415cc8:	strb	w6, [sp, #8]
  415ccc:	mov	x6, x3
  415cd0:	str	x8, [sp, #16]
  415cd4:	mov	w3, #0x1                   	// #1
  415cd8:	str	x19, [sp, #48]
  415cdc:	mov	x19, x7
  415ce0:	mov	w7, w4
  415ce4:	mov	w4, #0x0                   	// #0
  415ce8:	bl	415778 <ferror@plt+0x12dd8>
  415cec:	cmn	w0, #0x1
  415cf0:	b.eq	415cfc <ferror@plt+0x1335c>  // b.none
  415cf4:	ldr	w1, [sp, #76]
  415cf8:	str	w1, [x19]
  415cfc:	ldp	x29, x30, [sp, #32]
  415d00:	ldr	x19, [sp, #48]
  415d04:	add	sp, sp, #0x50
  415d08:	ret
  415d0c:	nop
  415d10:	stp	x29, x30, [sp, #-16]!
  415d14:	mov	x29, sp
  415d18:	bl	402890 <mkstemp@plt>
  415d1c:	ldp	x29, x30, [sp], #16
  415d20:	b	415f18 <ferror@plt+0x13578>
  415d24:	nop
  415d28:	stp	x29, x30, [sp, #-144]!
  415d2c:	mov	x1, x0
  415d30:	mov	w0, #0x0                   	// #0
  415d34:	mov	x29, sp
  415d38:	add	x2, sp, #0x10
  415d3c:	bl	402940 <__xstat@plt>
  415d40:	cbnz	w0, 415d5c <ferror@plt+0x133bc>
  415d44:	ldr	w0, [sp, #32]
  415d48:	ldp	x29, x30, [sp], #144
  415d4c:	and	w0, w0, #0xf000
  415d50:	cmp	w0, #0x4, lsl #12
  415d54:	cset	w0, eq  // eq = none
  415d58:	ret
  415d5c:	mov	w0, #0x0                   	// #0
  415d60:	ldp	x29, x30, [sp], #144
  415d64:	ret
  415d68:	stp	x29, x30, [sp, #-80]!
  415d6c:	mov	x29, sp
  415d70:	stp	x19, x20, [sp, #16]
  415d74:	mov	x19, x2
  415d78:	stp	x21, x22, [sp, #32]
  415d7c:	and	w21, w4, #0xff
  415d80:	stp	x23, x24, [sp, #48]
  415d84:	mov	x23, x0
  415d88:	stp	x25, x26, [sp, #64]
  415d8c:	mov	x25, x1
  415d90:	cbz	x3, 415ec0 <ferror@plt+0x13520>
  415d94:	ldrb	w0, [x3]
  415d98:	mov	x20, x3
  415d9c:	cbnz	w0, 415e30 <ferror@plt+0x13490>
  415da0:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x2878>
  415da4:	add	x20, x20, #0x820
  415da8:	mov	x26, #0xb                   	// #11
  415dac:	mov	x24, #0x4                   	// #4
  415db0:	cbnz	w21, 415e4c <ferror@plt+0x134ac>
  415db4:	cbz	x19, 415e88 <ferror@plt+0x134e8>
  415db8:	mov	x0, x19
  415dbc:	mov	w21, #0x0                   	// #0
  415dc0:	bl	402390 <strlen@plt>
  415dc4:	mov	x22, x0
  415dc8:	sub	x0, x0, #0x1
  415dcc:	cbnz	x22, 415ea8 <ferror@plt+0x13508>
  415dd0:	cmp	x25, x26
  415dd4:	b.cc	415ed4 <ferror@plt+0x13534>  // b.lo, b.ul, b.last
  415dd8:	mov	x1, x19
  415ddc:	mov	x2, x22
  415de0:	mov	x0, x23
  415de4:	eor	w21, w21, #0x1
  415de8:	bl	402350 <memcpy@plt>
  415dec:	and	x21, x21, #0xff
  415df0:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3878>
  415df4:	add	x3, x3, #0x7f0
  415df8:	mov	x5, x20
  415dfc:	mov	w4, w24
  415e00:	add	x0, x23, x22
  415e04:	add	x3, x3, x21
  415e08:	mov	x2, #0xffffffffffffffff    	// #-1
  415e0c:	mov	w1, #0x1                   	// #1
  415e10:	bl	4023b0 <__sprintf_chk@plt>
  415e14:	mov	w0, #0x0                   	// #0
  415e18:	ldp	x19, x20, [sp, #16]
  415e1c:	ldp	x21, x22, [sp, #32]
  415e20:	ldp	x23, x24, [sp, #48]
  415e24:	ldp	x25, x26, [sp, #64]
  415e28:	ldp	x29, x30, [sp], #80
  415e2c:	ret
  415e30:	mov	x24, #0x5                   	// #5
  415e34:	mov	x0, x3
  415e38:	bl	402390 <strlen@plt>
  415e3c:	cmp	x0, x24
  415e40:	csel	x24, x0, x24, ls  // ls = plast
  415e44:	add	x26, x24, #0x7
  415e48:	cbz	w21, 415db4 <ferror@plt+0x13414>
  415e4c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x2878>
  415e50:	add	x0, x0, #0xab8
  415e54:	bl	402410 <secure_getenv@plt>
  415e58:	mov	x21, x0
  415e5c:	cbz	x0, 415e74 <ferror@plt+0x134d4>
  415e60:	bl	415d28 <ferror@plt+0x13388>
  415e64:	tst	w0, #0xff
  415e68:	b.eq	415e74 <ferror@plt+0x134d4>  // b.none
  415e6c:	mov	x19, x21
  415e70:	b	415db8 <ferror@plt+0x13418>
  415e74:	cbz	x19, 415e88 <ferror@plt+0x134e8>
  415e78:	mov	x0, x19
  415e7c:	bl	415d28 <ferror@plt+0x13388>
  415e80:	tst	w0, #0xff
  415e84:	b.ne	415db8 <ferror@plt+0x13418>  // b.any
  415e88:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x3878>
  415e8c:	add	x19, x19, #0x7e8
  415e90:	mov	x0, x19
  415e94:	bl	415d28 <ferror@plt+0x13388>
  415e98:	tst	w0, #0xff
  415e9c:	b.eq	415eec <ferror@plt+0x1354c>  // b.none
  415ea0:	mov	x0, #0x3                   	// #3
  415ea4:	mov	x22, #0x4                   	// #4
  415ea8:	ldrb	w0, [x19, x0]
  415eac:	add	x26, x26, x22
  415eb0:	cmp	w0, #0x2f
  415eb4:	cinc	x26, x26, ne  // ne = any
  415eb8:	cset	w21, ne  // ne = any
  415ebc:	b	415dd0 <ferror@plt+0x13430>
  415ec0:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x2878>
  415ec4:	mov	x26, #0xb                   	// #11
  415ec8:	add	x20, x20, #0x820
  415ecc:	mov	x24, #0x4                   	// #4
  415ed0:	b	415db0 <ferror@plt+0x13410>
  415ed4:	bl	402920 <__errno_location@plt>
  415ed8:	mov	x1, x0
  415edc:	mov	w2, #0x16                  	// #22
  415ee0:	mov	w0, #0xffffffff            	// #-1
  415ee4:	str	w2, [x1]
  415ee8:	b	415e18 <ferror@plt+0x13478>
  415eec:	bl	402920 <__errno_location@plt>
  415ef0:	mov	x1, x0
  415ef4:	mov	w2, #0x2                   	// #2
  415ef8:	mov	w0, #0xffffffff            	// #-1
  415efc:	str	w2, [x1]
  415f00:	b	415e18 <ferror@plt+0x13478>
  415f04:	nop
  415f08:	mov	w2, #0x3                   	// #3
  415f0c:	mov	w1, #0x0                   	// #0
  415f10:	b	417160 <ferror@plt+0x147c0>
  415f14:	nop
  415f18:	stp	x29, x30, [sp, #-48]!
  415f1c:	cmp	w0, #0x2
  415f20:	mov	x29, sp
  415f24:	stp	x19, x20, [sp, #16]
  415f28:	mov	w19, w0
  415f2c:	b.ls	415f40 <ferror@plt+0x135a0>  // b.plast
  415f30:	mov	w0, w19
  415f34:	ldp	x19, x20, [sp, #16]
  415f38:	ldp	x29, x30, [sp], #48
  415f3c:	ret
  415f40:	str	x21, [sp, #32]
  415f44:	bl	415f08 <ferror@plt+0x13568>
  415f48:	mov	w21, w0
  415f4c:	bl	402920 <__errno_location@plt>
  415f50:	mov	x20, x0
  415f54:	mov	w0, w19
  415f58:	mov	w19, w21
  415f5c:	ldr	w21, [x20]
  415f60:	bl	402660 <close@plt>
  415f64:	str	w21, [x20]
  415f68:	mov	w0, w19
  415f6c:	ldp	x19, x20, [sp, #16]
  415f70:	ldr	x21, [sp, #32]
  415f74:	ldp	x29, x30, [sp], #48
  415f78:	ret
  415f7c:	nop
  415f80:	stp	x29, x30, [sp, #-48]!
  415f84:	mov	x29, sp
  415f88:	stp	x19, x20, [sp, #16]
  415f8c:	mov	x19, x0
  415f90:	bl	402440 <pipe@plt>
  415f94:	cbnz	w0, 416000 <ferror@plt+0x13660>
  415f98:	mov	w20, w0
  415f9c:	ldr	w0, [x19]
  415fa0:	bl	415f18 <ferror@plt+0x13578>
  415fa4:	str	w0, [x19]
  415fa8:	tbnz	w0, #31, 415fcc <ferror@plt+0x1362c>
  415fac:	ldr	w0, [x19, #4]
  415fb0:	bl	415f18 <ferror@plt+0x13578>
  415fb4:	str	w0, [x19, #4]
  415fb8:	tbnz	w0, #31, 415ff8 <ferror@plt+0x13658>
  415fbc:	mov	w0, w20
  415fc0:	ldp	x19, x20, [sp, #16]
  415fc4:	ldp	x29, x30, [sp], #48
  415fc8:	ret
  415fcc:	add	x19, x19, #0x4
  415fd0:	str	x21, [sp, #32]
  415fd4:	bl	402920 <__errno_location@plt>
  415fd8:	mov	x21, x0
  415fdc:	ldr	w0, [x19]
  415fe0:	mov	w20, #0xffffffff            	// #-1
  415fe4:	ldr	w19, [x21]
  415fe8:	bl	402660 <close@plt>
  415fec:	str	w19, [x21]
  415ff0:	ldr	x21, [sp, #32]
  415ff4:	b	415fbc <ferror@plt+0x1361c>
  415ff8:	str	x21, [sp, #32]
  415ffc:	b	415fd4 <ferror@plt+0x13634>
  416000:	mov	w20, #0xffffffff            	// #-1
  416004:	b	415fbc <ferror@plt+0x1361c>
  416008:	stp	x29, x30, [sp, #-96]!
  41600c:	mov	x29, sp
  416010:	ldp	x8, x9, [x5]
  416014:	stp	x19, x20, [sp, #16]
  416018:	mov	x20, x2
  41601c:	ldp	x6, x7, [x5, #16]
  416020:	stp	x21, x22, [sp, #32]
  416024:	mov	w21, w0
  416028:	mov	w22, w1
  41602c:	mov	x0, x4
  416030:	add	x1, sp, #0x40
  416034:	str	x23, [sp, #48]
  416038:	mov	w23, w3
  41603c:	stp	x8, x9, [sp, #64]
  416040:	stp	x6, x7, [sp, #80]
  416044:	bl	416fa0 <ferror@plt+0x14600>
  416048:	cbz	x0, 4160bc <ferror@plt+0x1371c>
  41604c:	mov	x19, x0
  416050:	cbz	x20, 41608c <ferror@plt+0x136ec>
  416054:	mov	w3, w23
  416058:	mov	x2, x20
  41605c:	mov	w1, w22
  416060:	mov	w0, w21
  416064:	mov	x5, x19
  416068:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x1878>
  41606c:	add	x4, x4, #0xf20
  416070:	bl	402970 <error_at_line@plt>
  416074:	mov	x0, x19
  416078:	ldp	x19, x20, [sp, #16]
  41607c:	ldp	x21, x22, [sp, #32]
  416080:	ldr	x23, [sp, #48]
  416084:	ldp	x29, x30, [sp], #96
  416088:	b	4027c0 <free@plt>
  41608c:	mov	w1, w22
  416090:	mov	w0, w21
  416094:	mov	x3, x19
  416098:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  41609c:	add	x2, x2, #0xf20
  4160a0:	bl	4023e0 <error@plt>
  4160a4:	mov	x0, x19
  4160a8:	ldp	x19, x20, [sp, #16]
  4160ac:	ldp	x21, x22, [sp, #32]
  4160b0:	ldr	x23, [sp, #48]
  4160b4:	ldp	x29, x30, [sp], #96
  4160b8:	b	4027c0 <free@plt>
  4160bc:	bl	402920 <__errno_location@plt>
  4160c0:	mov	x1, x0
  4160c4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4160c8:	add	x2, x2, #0x800
  4160cc:	mov	w0, #0x0                   	// #0
  4160d0:	ldr	w1, [x1]
  4160d4:	bl	4023e0 <error@plt>
  4160d8:	bl	4026d0 <abort@plt>
  4160dc:	nop
  4160e0:	mov	x6, x3
  4160e4:	stp	x29, x30, [sp, #-48]!
  4160e8:	mov	x4, x2
  4160ec:	mov	x29, sp
  4160f0:	ldp	x8, x9, [x6]
  4160f4:	stp	x8, x9, [sp, #16]
  4160f8:	add	x5, sp, #0x10
  4160fc:	ldp	x6, x7, [x6, #16]
  416100:	mov	w3, #0x0                   	// #0
  416104:	mov	x2, #0x0                   	// #0
  416108:	stp	x6, x7, [sp, #32]
  41610c:	bl	416008 <ferror@plt+0x13668>
  416110:	ldp	x29, x30, [sp], #48
  416114:	ret
  416118:	sub	sp, sp, #0x50
  41611c:	stp	x29, x30, [sp, #32]
  416120:	add	x29, sp, #0x20
  416124:	stp	x19, x20, [sp, #48]
  416128:	mov	x19, x5
  41612c:	mov	x20, x4
  416130:	str	x21, [sp, #64]
  416134:	mov	x5, x3
  416138:	mov	x21, x0
  41613c:	cbz	x1, 4162ec <ferror@plt+0x1394c>
  416140:	mov	x4, x2
  416144:	mov	x3, x1
  416148:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  41614c:	mov	w1, #0x1                   	// #1
  416150:	add	x2, x2, #0x820
  416154:	bl	402750 <__fprintf_chk@plt>
  416158:	mov	w4, #0x7e0                 	// #2016
  41615c:	mov	w1, #0x1                   	// #1
  416160:	mov	x0, x21
  416164:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3878>
  416168:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  41616c:	add	x3, x3, #0x838
  416170:	add	x2, x2, #0xb30
  416174:	bl	402750 <__fprintf_chk@plt>
  416178:	mov	x3, x21
  41617c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  416180:	mov	x2, #0xca                  	// #202
  416184:	add	x0, x0, #0x840
  416188:	mov	x1, #0x1                   	// #1
  41618c:	bl	402380 <fwrite_unlocked@plt>
  416190:	cmp	x19, #0x5
  416194:	b.eq	416394 <ferror@plt+0x139f4>  // b.none
  416198:	b.ls	416204 <ferror@plt+0x13864>  // b.plast
  41619c:	cmp	x19, #0x8
  4161a0:	b.eq	4163c4 <ferror@plt+0x13a24>  // b.none
  4161a4:	b.ls	416240 <ferror@plt+0x138a0>  // b.plast
  4161a8:	cmp	x19, #0x9
  4161ac:	b.ne	4162a0 <ferror@plt+0x13900>  // b.any
  4161b0:	ldp	x3, x4, [x20]
  4161b4:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4161b8:	ldr	x5, [x20, #16]
  4161bc:	mov	x0, x21
  4161c0:	add	x2, x2, #0xa28
  4161c4:	ldr	x8, [x20, #40]
  4161c8:	mov	w1, #0x1                   	// #1
  4161cc:	ldp	x6, x7, [x20, #24]
  4161d0:	str	x8, [sp]
  4161d4:	ldr	x8, [x20, #48]
  4161d8:	str	x8, [sp, #8]
  4161dc:	ldr	x8, [x20, #56]
  4161e0:	str	x8, [sp, #16]
  4161e4:	ldr	x8, [x20, #64]
  4161e8:	str	x8, [sp, #24]
  4161ec:	bl	402750 <__fprintf_chk@plt>
  4161f0:	ldp	x29, x30, [sp, #32]
  4161f4:	ldp	x19, x20, [sp, #48]
  4161f8:	ldr	x21, [sp, #64]
  4161fc:	add	sp, sp, #0x50
  416200:	ret
  416204:	cmp	x19, #0x3
  416208:	b.eq	416308 <ferror@plt+0x13968>  // b.none
  41620c:	cmp	x19, #0x4
  416210:	b.ne	416290 <ferror@plt+0x138f0>  // b.any
  416214:	ldp	x3, x4, [x20]
  416218:	mov	x0, x21
  41621c:	ldp	x5, x6, [x20, #16]
  416220:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  416224:	ldp	x29, x30, [sp, #32]
  416228:	add	x2, x2, #0x958
  41622c:	ldp	x19, x20, [sp, #48]
  416230:	mov	w1, #0x1                   	// #1
  416234:	ldr	x21, [sp, #64]
  416238:	add	sp, sp, #0x50
  41623c:	b	402750 <__fprintf_chk@plt>
  416240:	cmp	x19, #0x6
  416244:	b.eq	416334 <ferror@plt+0x13994>  // b.none
  416248:	cmp	x19, #0x7
  41624c:	b.ne	4162a0 <ferror@plt+0x13900>  // b.any
  416250:	ldp	x7, x8, [x20, #32]
  416254:	mov	x0, x21
  416258:	ldp	x3, x4, [x20]
  41625c:	mov	w1, #0x1                   	// #1
  416260:	ldp	x5, x6, [x20, #16]
  416264:	str	x8, [sp]
  416268:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  41626c:	add	x2, x2, #0x9c8
  416270:	ldr	x8, [x20, #48]
  416274:	str	x8, [sp, #8]
  416278:	bl	402750 <__fprintf_chk@plt>
  41627c:	ldp	x29, x30, [sp, #32]
  416280:	ldp	x19, x20, [sp, #48]
  416284:	ldr	x21, [sp, #64]
  416288:	add	sp, sp, #0x50
  41628c:	ret
  416290:	cmp	x19, #0x2
  416294:	b.eq	41636c <ferror@plt+0x139cc>  // b.none
  416298:	cmp	x19, #0x3
  41629c:	b.ne	4162b8 <ferror@plt+0x13918>  // b.any
  4162a0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4162a4:	mov	x0, x21
  4162a8:	add	x2, x2, #0xa60
  4162ac:	ldp	x3, x4, [x20]
  4162b0:	ldr	x5, [x20, #16]
  4162b4:	b	4161c4 <ferror@plt+0x13824>
  4162b8:	cbz	x19, 41640c <ferror@plt+0x13a6c>
  4162bc:	cmp	x19, #0x1
  4162c0:	b.ne	4162a0 <ferror@plt+0x13900>  // b.any
  4162c4:	mov	w1, w19
  4162c8:	mov	x0, x21
  4162cc:	ldr	x3, [x20]
  4162d0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4162d4:	ldp	x29, x30, [sp, #32]
  4162d8:	add	x2, x2, #0x910
  4162dc:	ldp	x19, x20, [sp, #48]
  4162e0:	ldr	x21, [sp, #64]
  4162e4:	add	sp, sp, #0x50
  4162e8:	b	402750 <__fprintf_chk@plt>
  4162ec:	mov	x4, x3
  4162f0:	mov	w1, #0x1                   	// #1
  4162f4:	mov	x3, x2
  4162f8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4162fc:	add	x2, x2, #0x830
  416300:	bl	402750 <__fprintf_chk@plt>
  416304:	b	416158 <ferror@plt+0x137b8>
  416308:	ldp	x3, x4, [x20]
  41630c:	mov	x0, x21
  416310:	ldr	x5, [x20, #16]
  416314:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  416318:	ldp	x29, x30, [sp, #32]
  41631c:	add	x2, x2, #0x938
  416320:	ldp	x19, x20, [sp, #48]
  416324:	mov	w1, #0x1                   	// #1
  416328:	ldr	x21, [sp, #64]
  41632c:	add	sp, sp, #0x50
  416330:	b	402750 <__fprintf_chk@plt>
  416334:	ldp	x3, x4, [x20]
  416338:	mov	x0, x21
  41633c:	ldp	x5, x6, [x20, #16]
  416340:	mov	w1, #0x1                   	// #1
  416344:	ldp	x7, x8, [x20, #32]
  416348:	str	x8, [sp]
  41634c:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  416350:	add	x2, x2, #0x9a0
  416354:	bl	402750 <__fprintf_chk@plt>
  416358:	ldp	x29, x30, [sp, #32]
  41635c:	ldp	x19, x20, [sp, #48]
  416360:	ldr	x21, [sp, #64]
  416364:	add	sp, sp, #0x50
  416368:	ret
  41636c:	ldp	x3, x4, [x20]
  416370:	mov	x0, x21
  416374:	ldp	x29, x30, [sp, #32]
  416378:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  41637c:	ldp	x19, x20, [sp, #48]
  416380:	add	x2, x2, #0x920
  416384:	ldr	x21, [sp, #64]
  416388:	mov	w1, #0x1                   	// #1
  41638c:	add	sp, sp, #0x50
  416390:	b	402750 <__fprintf_chk@plt>
  416394:	ldp	x3, x4, [x20]
  416398:	mov	x0, x21
  41639c:	ldp	x5, x6, [x20, #16]
  4163a0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4163a4:	ldp	x29, x30, [sp, #32]
  4163a8:	add	x2, x2, #0x978
  4163ac:	ldr	x7, [x20, #32]
  4163b0:	mov	w1, #0x1                   	// #1
  4163b4:	ldp	x19, x20, [sp, #48]
  4163b8:	ldr	x21, [sp, #64]
  4163bc:	add	sp, sp, #0x50
  4163c0:	b	402750 <__fprintf_chk@plt>
  4163c4:	ldp	x7, x8, [x20, #32]
  4163c8:	mov	x0, x21
  4163cc:	ldp	x3, x4, [x20]
  4163d0:	mov	w1, #0x1                   	// #1
  4163d4:	ldp	x5, x6, [x20, #16]
  4163d8:	str	x8, [sp]
  4163dc:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4163e0:	add	x2, x2, #0x9f8
  4163e4:	ldr	x8, [x20, #48]
  4163e8:	str	x8, [sp, #8]
  4163ec:	ldr	x8, [x20, #56]
  4163f0:	str	x8, [sp, #16]
  4163f4:	bl	402750 <__fprintf_chk@plt>
  4163f8:	ldp	x29, x30, [sp, #32]
  4163fc:	ldp	x19, x20, [sp, #48]
  416400:	ldr	x21, [sp, #64]
  416404:	add	sp, sp, #0x50
  416408:	ret
  41640c:	bl	4026d0 <abort@plt>
  416410:	ldr	x5, [x4]
  416414:	cbz	x5, 416430 <ferror@plt+0x13a90>
  416418:	mov	x5, #0x0                   	// #0
  41641c:	nop
  416420:	add	x5, x5, #0x1
  416424:	ldr	x6, [x4, x5, lsl #3]
  416428:	cbnz	x6, 416420 <ferror@plt+0x13a80>
  41642c:	b	416118 <ferror@plt+0x13778>
  416430:	mov	x5, #0x0                   	// #0
  416434:	b	416118 <ferror@plt+0x13778>
  416438:	stp	x29, x30, [sp, #-96]!
  41643c:	mov	x5, #0x0                   	// #0
  416440:	mov	x29, sp
  416444:	add	x8, sp, #0x10
  416448:	ldr	w7, [x4, #24]
  41644c:	ldp	x6, x11, [x4]
  416450:	b	416478 <ferror@plt+0x13ad8>
  416454:	mov	x4, x6
  416458:	add	x8, x8, #0x8
  41645c:	and	x6, x10, #0xfffffffffffffff8
  416460:	ldr	x4, [x4]
  416464:	stur	x4, [x8, #-8]
  416468:	cbz	x4, 4164a8 <ferror@plt+0x13b08>
  41646c:	add	x5, x5, #0x1
  416470:	cmp	x5, #0xa
  416474:	b.eq	4164a8 <ferror@plt+0x13b08>  // b.none
  416478:	add	x10, x6, #0xf
  41647c:	add	w9, w7, #0x8
  416480:	tbz	w7, #31, 416454 <ferror@plt+0x13ab4>
  416484:	add	x4, x11, w7, sxtw
  416488:	add	x10, x6, #0xf
  41648c:	mov	w7, w9
  416490:	cmp	w9, #0x0
  416494:	b.gt	416454 <ferror@plt+0x13ab4>
  416498:	ldr	x4, [x4]
  41649c:	str	x4, [x8]
  4164a0:	add	x8, x8, #0x8
  4164a4:	cbnz	x4, 41646c <ferror@plt+0x13acc>
  4164a8:	add	x4, sp, #0x10
  4164ac:	bl	416118 <ferror@plt+0x13778>
  4164b0:	ldp	x29, x30, [sp], #96
  4164b4:	ret
  4164b8:	stp	x29, x30, [sp, #-288]!
  4164bc:	mov	w12, #0xffffffe0            	// #-32
  4164c0:	mov	w13, #0xffffff80            	// #-128
  4164c4:	mov	x29, sp
  4164c8:	add	x14, sp, #0x100
  4164cc:	add	x11, sp, #0x120
  4164d0:	add	x9, sp, #0x30
  4164d4:	mov	w8, w12
  4164d8:	mov	x10, #0x0                   	// #0
  4164dc:	stp	x11, x11, [sp, #16]
  4164e0:	str	x14, [sp, #32]
  4164e4:	stp	w12, w13, [sp, #40]
  4164e8:	str	q0, [sp, #128]
  4164ec:	str	q1, [sp, #144]
  4164f0:	str	q2, [sp, #160]
  4164f4:	str	q3, [sp, #176]
  4164f8:	str	q4, [sp, #192]
  4164fc:	str	q5, [sp, #208]
  416500:	str	q6, [sp, #224]
  416504:	str	q7, [sp, #240]
  416508:	stp	x4, x5, [sp, #256]
  41650c:	stp	x6, x7, [sp, #272]
  416510:	b	416538 <ferror@plt+0x13b98>
  416514:	mov	x4, x11
  416518:	add	x9, x9, #0x8
  41651c:	add	x11, x11, #0x8
  416520:	ldr	x4, [x4]
  416524:	stur	x4, [x9, #-8]
  416528:	cbz	x4, 416564 <ferror@plt+0x13bc4>
  41652c:	add	x10, x10, #0x1
  416530:	cmp	x10, #0xa
  416534:	b.eq	416564 <ferror@plt+0x13bc4>  // b.none
  416538:	add	w5, w8, #0x8
  41653c:	tbz	w8, #31, 416514 <ferror@plt+0x13b74>
  416540:	add	x4, sp, #0x120
  416544:	cmp	w5, #0x0
  416548:	add	x4, x4, w8, sxtw
  41654c:	mov	w8, w5
  416550:	b.gt	416514 <ferror@plt+0x13b74>
  416554:	ldr	x4, [x4]
  416558:	str	x4, [x9]
  41655c:	add	x9, x9, #0x8
  416560:	cbnz	x4, 41652c <ferror@plt+0x13b8c>
  416564:	add	x4, sp, #0x30
  416568:	mov	x5, x10
  41656c:	bl	416118 <ferror@plt+0x13778>
  416570:	ldp	x29, x30, [sp], #288
  416574:	ret
  416578:	stp	x29, x30, [sp, #-16]!
  41657c:	adrp	x2, 417000 <ferror@plt+0x14660>
  416580:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  416584:	mov	x29, sp
  416588:	add	x2, x2, #0xd38
  41658c:	add	x1, x1, #0xaa0
  416590:	mov	w0, #0x1                   	// #1
  416594:	bl	4025b0 <__printf_chk@plt>
  416598:	mov	w0, #0x1                   	// #1
  41659c:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3878>
  4165a0:	adrp	x2, 417000 <ferror@plt+0x14660>
  4165a4:	add	x3, x3, #0xab8
  4165a8:	add	x2, x2, #0xe68
  4165ac:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  4165b0:	add	x1, x1, #0xad8
  4165b4:	bl	4025b0 <__printf_chk@plt>
  4165b8:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  4165bc:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  4165c0:	ldp	x29, x30, [sp], #16
  4165c4:	add	x0, x0, #0xaf0
  4165c8:	ldr	x3, [x1, #1056]
  4165cc:	mov	x2, #0x3f                  	// #63
  4165d0:	mov	x1, #0x1                   	// #1
  4165d4:	b	402380 <fwrite_unlocked@plt>
  4165d8:	stp	x29, x30, [sp, #-32]!
  4165dc:	mov	x29, sp
  4165e0:	stp	x19, x20, [sp, #16]
  4165e4:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4165e8:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  4165ec:	add	x19, x19, #0xc20
  4165f0:	b	416608 <ferror@plt+0x13c68>
  4165f4:	str	w0, [x19]
  4165f8:	lsl	x0, x0, #3
  4165fc:	ldr	x1, [x20, #1000]
  416600:	ldr	w1, [x1, x0]
  416604:	cbnz	w1, 416624 <ferror@plt+0x13c84>
  416608:	ldr	w1, [x19]
  41660c:	sxtw	x0, w1
  416610:	sub	x0, x0, #0x1
  416614:	cbnz	w1, 4165f4 <ferror@plt+0x13c54>
  416618:	ldp	x19, x20, [sp, #16]
  41661c:	ldp	x29, x30, [sp], #32
  416620:	ret
  416624:	ldr	x2, [x20, #1000]
  416628:	mov	w1, #0x1                   	// #1
  41662c:	add	x0, x2, x0
  416630:	ldr	w0, [x0, #4]
  416634:	bl	402490 <kill@plt>
  416638:	b	416608 <ferror@plt+0x13c68>
  41663c:	nop
  416640:	stp	x29, x30, [sp, #-96]!
  416644:	mov	x29, sp
  416648:	stp	x19, x20, [sp, #16]
  41664c:	adrp	x19, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  416650:	mov	w20, w0
  416654:	stp	x21, x22, [sp, #32]
  416658:	add	x22, x19, #0xc20
  41665c:	ldrb	w0, [x22, #4]
  416660:	cbz	w0, 416710 <ferror@plt+0x13d70>
  416664:	adrp	x21, 431000 <_obstack_memory_used@@Base+0x19878>
  416668:	ldr	x1, [x21, #1000]
  41666c:	ldr	w3, [x19, #3104]
  416670:	add	x3, x1, w3, sxtw #3
  416674:	cmp	x1, x3
  416678:	b.cc	41668c <ferror@plt+0x13cec>  // b.lo, b.ul, b.last
  41667c:	b	4166b0 <ferror@plt+0x13d10>
  416680:	add	x1, x1, #0x8
  416684:	cmp	x3, x1
  416688:	b.ls	4166b0 <ferror@plt+0x13d10>  // b.plast
  41668c:	ldr	w2, [x1]
  416690:	cbnz	w2, 416680 <ferror@plt+0x13ce0>
  416694:	str	w20, [x1, #4]
  416698:	mov	w0, #0x1                   	// #1
  41669c:	str	w0, [x1]
  4166a0:	ldp	x19, x20, [sp, #16]
  4166a4:	ldp	x21, x22, [sp, #32]
  4166a8:	ldp	x29, x30, [sp], #96
  4166ac:	ret
  4166b0:	stp	x23, x24, [sp, #48]
  4166b4:	add	x23, x21, #0x3e8
  4166b8:	ldr	w0, [x19, #3104]
  4166bc:	ldr	x1, [x23, #8]
  4166c0:	sxtw	x24, w0
  4166c4:	cmp	x1, w0, sxtw
  4166c8:	b.eq	416734 <ferror@plt+0x13d94>  // b.none
  4166cc:	ldr	x1, [x21, #1000]
  4166d0:	mov	w2, #0x1                   	// #1
  4166d4:	ldr	w0, [x19, #3104]
  4166d8:	ldp	x23, x24, [sp, #48]
  4166dc:	add	x0, x1, w0, sxtw #3
  4166e0:	str	w20, [x0, #4]
  4166e4:	ldr	x1, [x21, #1000]
  4166e8:	ldr	w0, [x19, #3104]
  4166ec:	ldp	x21, x22, [sp, #32]
  4166f0:	sbfiz	x0, x0, #3, #32
  4166f4:	str	w2, [x1, x0]
  4166f8:	ldr	w0, [x19, #3104]
  4166fc:	add	w0, w0, w2
  416700:	str	w0, [x19, #3104]
  416704:	ldp	x19, x20, [sp, #16]
  416708:	ldp	x29, x30, [sp], #96
  41670c:	ret
  416710:	adrp	x21, 416000 <ferror@plt+0x13660>
  416714:	add	x21, x21, #0x5d8
  416718:	mov	x0, x21
  41671c:	bl	417cc0 <_obstack_memory_used@@Base+0x538>
  416720:	mov	x0, x21
  416724:	bl	4120f0 <ferror@plt+0xf750>
  416728:	mov	w0, #0x1                   	// #1
  41672c:	strb	w0, [x22, #4]
  416730:	b	416664 <ferror@plt+0x13cc4>
  416734:	lsl	x0, x24, #4
  416738:	stp	x25, x26, [sp, #64]
  41673c:	ldr	x26, [x21, #1000]
  416740:	str	x27, [sp, #80]
  416744:	bl	402530 <malloc@plt>
  416748:	lsl	x27, x24, #1
  41674c:	mov	x25, x0
  416750:	cbz	x0, 416794 <ferror@plt+0x13df4>
  416754:	lsl	x2, x24, #3
  416758:	mov	x1, x26
  41675c:	bl	402350 <memcpy@plt>
  416760:	str	x25, [x21, #1000]
  416764:	str	x27, [x23, #8]
  416768:	add	x22, x22, #0x8
  41676c:	cmp	x26, x22
  416770:	b.eq	416788 <ferror@plt+0x13de8>  // b.none
  416774:	mov	x0, x26
  416778:	bl	4027c0 <free@plt>
  41677c:	ldp	x25, x26, [sp, #64]
  416780:	ldr	x27, [sp, #80]
  416784:	b	4166cc <ferror@plt+0x13d2c>
  416788:	ldp	x25, x26, [sp, #64]
  41678c:	ldr	x27, [sp, #80]
  416790:	b	4166cc <ferror@plt+0x13d2c>
  416794:	mov	w1, #0x1                   	// #1
  416798:	mov	w0, w20
  41679c:	bl	402490 <kill@plt>
  4167a0:	bl	416bb0 <ferror@plt+0x14210>
  4167a4:	nop
  4167a8:	stp	x29, x30, [sp, #-96]!
  4167ac:	mov	x29, sp
  4167b0:	stp	x19, x20, [sp, #16]
  4167b4:	mov	w19, w0
  4167b8:	and	w20, w3, #0xff
  4167bc:	stp	x21, x22, [sp, #32]
  4167c0:	mov	x21, x1
  4167c4:	and	w22, w5, #0xff
  4167c8:	stp	x23, x24, [sp, #48]
  4167cc:	mov	x23, x6
  4167d0:	and	w24, w4, #0xff
  4167d4:	str	x25, [sp, #64]
  4167d8:	and	w25, w2, #0xff
  4167dc:	cbz	x6, 4167e4 <ferror@plt+0x13e44>
  4167e0:	str	wzr, [x6]
  4167e4:	str	wzr, [sp, #92]
  4167e8:	add	x1, sp, #0x5c
  4167ec:	mov	w0, w19
  4167f0:	mov	w2, #0x0                   	// #0
  4167f4:	bl	402950 <waitpid@plt>
  4167f8:	cmp	w19, w0
  4167fc:	b.eq	41683c <ferror@plt+0x13e9c>  // b.none
  416800:	bl	402920 <__errno_location@plt>
  416804:	ldr	w1, [x0]
  416808:	cmp	w1, #0x4
  41680c:	b.eq	4167e8 <ferror@plt+0x13e48>  // b.none
  416810:	eor	w20, w20, #0x1
  416814:	orr	w20, w22, w20
  416818:	cbnz	w20, 4168f8 <ferror@plt+0x13f58>
  41681c:	mov	w19, #0x7f                  	// #127
  416820:	mov	w0, w19
  416824:	ldp	x19, x20, [sp, #16]
  416828:	ldp	x21, x22, [sp, #32]
  41682c:	ldp	x23, x24, [sp, #48]
  416830:	ldr	x25, [sp, #64]
  416834:	ldp	x29, x30, [sp], #96
  416838:	ret
  41683c:	ldr	w0, [sp, #92]
  416840:	and	w1, w0, #0xff
  416844:	cmp	w1, #0x7f
  416848:	b.eq	4167e8 <ferror@plt+0x13e48>  // b.none
  41684c:	cbz	w24, 416894 <ferror@plt+0x13ef4>
  416850:	adrp	x1, 431000 <_obstack_memory_used@@Base+0x19878>
  416854:	adrp	x2, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  416858:	ldr	x1, [x1, #1000]
  41685c:	ldr	w3, [x2, #3104]
  416860:	add	x3, x1, w3, sxtw #3
  416864:	cmp	x1, x3
  416868:	b.cs	416894 <ferror@plt+0x13ef4>  // b.hs, b.nlast
  41686c:	nop
  416870:	ldr	w2, [x1]
  416874:	cbz	w2, 416888 <ferror@plt+0x13ee8>
  416878:	ldr	w2, [x1, #4]
  41687c:	cmp	w19, w2
  416880:	b.ne	416888 <ferror@plt+0x13ee8>  // b.any
  416884:	str	wzr, [x1]
  416888:	add	x1, x1, #0x8
  41688c:	cmp	x3, x1
  416890:	b.hi	416870 <ferror@plt+0x13ed0>  // b.pmore
  416894:	and	w4, w0, #0x7f
  416898:	add	w1, w4, #0x1
  41689c:	sbfx	x1, x1, #1, #7
  4168a0:	cmp	w1, #0x0
  4168a4:	b.le	41692c <ferror@plt+0x13f8c>
  4168a8:	cbz	x23, 4168b0 <ferror@plt+0x13f10>
  4168ac:	str	w4, [x23]
  4168b0:	cmp	w25, #0x0
  4168b4:	mov	w19, #0x0                   	// #0
  4168b8:	ccmp	w4, #0xd, #0x0, ne  // ne = any
  4168bc:	b.eq	416820 <ferror@plt+0x13e80>  // b.none
  4168c0:	cbnz	w22, 4168d8 <ferror@plt+0x13f38>
  4168c4:	cmp	x23, #0x0
  4168c8:	eor	w20, w20, #0x1
  4168cc:	cset	w0, eq  // eq = none
  4168d0:	tst	w0, w20
  4168d4:	b.eq	41681c <ferror@plt+0x13e7c>  // b.none
  4168d8:	mov	x3, x21
  4168dc:	mov	w0, w22
  4168e0:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4168e4:	mov	w1, #0x0                   	// #0
  4168e8:	add	x2, x2, #0xb70
  4168ec:	mov	w19, #0x7f                  	// #127
  4168f0:	bl	4023e0 <error@plt>
  4168f4:	b	416820 <ferror@plt+0x13e80>
  4168f8:	mov	x3, x21
  4168fc:	mov	w0, w22
  416900:	mov	w19, #0x7f                  	// #127
  416904:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  416908:	add	x2, x2, #0xb60
  41690c:	bl	4023e0 <error@plt>
  416910:	mov	w0, w19
  416914:	ldp	x19, x20, [sp, #16]
  416918:	ldp	x21, x22, [sp, #32]
  41691c:	ldp	x23, x24, [sp, #48]
  416920:	ldr	x25, [sp, #64]
  416924:	ldp	x29, x30, [sp], #96
  416928:	ret
  41692c:	cbnz	w4, 416964 <ferror@plt+0x13fc4>
  416930:	ubfx	x19, x0, #8, #8
  416934:	cmp	w19, #0x7f
  416938:	b.ne	416820 <ferror@plt+0x13e80>  // b.any
  41693c:	eor	w0, w20, #0x1
  416940:	orr	w0, w22, w0
  416944:	cbz	w0, 41681c <ferror@plt+0x13e7c>
  416948:	mov	x3, x21
  41694c:	mov	w0, w22
  416950:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x2878>
  416954:	mov	w1, #0x0                   	// #0
  416958:	add	x2, x2, #0xb38
  41695c:	bl	4023e0 <error@plt>
  416960:	b	416820 <ferror@plt+0x13e80>
  416964:	bl	4026d0 <abort@plt>
  416968:	stp	x29, x30, [sp, #-32]!
  41696c:	mov	x29, sp
  416970:	str	x19, [sp, #16]
  416974:	mov	x19, x0
  416978:	bl	402530 <malloc@plt>
  41697c:	cmp	x0, #0x0
  416980:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  416984:	b.ne	416994 <ferror@plt+0x13ff4>  // b.any
  416988:	ldr	x19, [sp, #16]
  41698c:	ldp	x29, x30, [sp], #32
  416990:	ret
  416994:	bl	416bb0 <ferror@plt+0x14210>
  416998:	umulh	x2, x0, x1
  41699c:	mul	x0, x0, x1
  4169a0:	cmp	x2, #0x0
  4169a4:	cset	x1, ne  // ne = any
  4169a8:	tbnz	x0, #63, 4169b4 <ferror@plt+0x14014>
  4169ac:	cbnz	x1, 4169b4 <ferror@plt+0x14014>
  4169b0:	b	416968 <ferror@plt+0x13fc8>
  4169b4:	stp	x29, x30, [sp, #-16]!
  4169b8:	mov	x29, sp
  4169bc:	bl	416bb0 <ferror@plt+0x14210>
  4169c0:	b	416968 <ferror@plt+0x13fc8>
  4169c4:	nop
  4169c8:	stp	x29, x30, [sp, #-32]!
  4169cc:	cmp	x1, #0x0
  4169d0:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  4169d4:	mov	x29, sp
  4169d8:	b.ne	416a00 <ferror@plt+0x14060>  // b.any
  4169dc:	str	x19, [sp, #16]
  4169e0:	mov	x19, x1
  4169e4:	bl	402620 <realloc@plt>
  4169e8:	cmp	x0, #0x0
  4169ec:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4169f0:	b.ne	416a10 <ferror@plt+0x14070>  // b.any
  4169f4:	ldr	x19, [sp, #16]
  4169f8:	ldp	x29, x30, [sp], #32
  4169fc:	ret
  416a00:	bl	4027c0 <free@plt>
  416a04:	mov	x0, #0x0                   	// #0
  416a08:	ldp	x29, x30, [sp], #32
  416a0c:	ret
  416a10:	bl	416bb0 <ferror@plt+0x14210>
  416a14:	nop
  416a18:	umulh	x3, x1, x2
  416a1c:	mul	x1, x1, x2
  416a20:	cmp	x3, #0x0
  416a24:	cset	x2, ne  // ne = any
  416a28:	tbnz	x1, #63, 416a34 <ferror@plt+0x14094>
  416a2c:	cbnz	x2, 416a34 <ferror@plt+0x14094>
  416a30:	b	4169c8 <ferror@plt+0x14028>
  416a34:	stp	x29, x30, [sp, #-16]!
  416a38:	mov	x29, sp
  416a3c:	bl	416bb0 <ferror@plt+0x14210>
  416a40:	mov	x4, x1
  416a44:	ldr	x3, [x1]
  416a48:	cbz	x0, 416a74 <ferror@plt+0x140d4>
  416a4c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  416a50:	movk	x1, #0x5554
  416a54:	udiv	x1, x1, x2
  416a58:	cmp	x1, x3
  416a5c:	b.ls	416a94 <ferror@plt+0x140f4>  // b.plast
  416a60:	add	x1, x3, #0x1
  416a64:	add	x3, x1, x3, lsr #1
  416a68:	mul	x1, x3, x2
  416a6c:	str	x3, [x4]
  416a70:	b	4169c8 <ferror@plt+0x14028>
  416a74:	cbnz	x3, 416a68 <ferror@plt+0x140c8>
  416a78:	mov	x3, #0x80                  	// #128
  416a7c:	cmp	x2, x3
  416a80:	udiv	x3, x3, x2
  416a84:	cinc	x3, x3, hi  // hi = pmore
  416a88:	str	x3, [x4]
  416a8c:	mul	x1, x3, x2
  416a90:	b	4169c8 <ferror@plt+0x14028>
  416a94:	stp	x29, x30, [sp, #-16]!
  416a98:	mov	x29, sp
  416a9c:	bl	416bb0 <ferror@plt+0x14210>
  416aa0:	mov	x2, x1
  416aa4:	ldr	x1, [x1]
  416aa8:	cbz	x0, 416acc <ferror@plt+0x1412c>
  416aac:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  416ab0:	movk	x3, #0x5553
  416ab4:	cmp	x1, x3
  416ab8:	b.hi	416ae0 <ferror@plt+0x14140>  // b.pmore
  416abc:	add	x3, x1, #0x1
  416ac0:	add	x1, x3, x1, lsr #1
  416ac4:	str	x1, [x2]
  416ac8:	b	4169c8 <ferror@plt+0x14028>
  416acc:	cmp	x1, #0x0
  416ad0:	mov	x3, #0x80                  	// #128
  416ad4:	csel	x1, x1, x3, ne  // ne = any
  416ad8:	str	x1, [x2]
  416adc:	b	4169c8 <ferror@plt+0x14028>
  416ae0:	stp	x29, x30, [sp, #-16]!
  416ae4:	mov	x29, sp
  416ae8:	bl	416bb0 <ferror@plt+0x14210>
  416aec:	nop
  416af0:	stp	x29, x30, [sp, #-32]!
  416af4:	mov	x29, sp
  416af8:	str	x19, [sp, #16]
  416afc:	mov	x19, x0
  416b00:	bl	416968 <ferror@plt+0x13fc8>
  416b04:	mov	x2, x19
  416b08:	mov	w1, #0x0                   	// #0
  416b0c:	ldr	x19, [sp, #16]
  416b10:	ldp	x29, x30, [sp], #32
  416b14:	b	4025c0 <memset@plt>
  416b18:	umulh	x4, x0, x1
  416b1c:	stp	x29, x30, [sp, #-16]!
  416b20:	mul	x2, x0, x1
  416b24:	cmp	x4, #0x0
  416b28:	mov	x29, sp
  416b2c:	cset	x3, ne  // ne = any
  416b30:	tbnz	x2, #63, 416b48 <ferror@plt+0x141a8>
  416b34:	cbnz	x3, 416b48 <ferror@plt+0x141a8>
  416b38:	bl	402600 <calloc@plt>
  416b3c:	cbz	x0, 416b48 <ferror@plt+0x141a8>
  416b40:	ldp	x29, x30, [sp], #16
  416b44:	ret
  416b48:	bl	416bb0 <ferror@plt+0x14210>
  416b4c:	nop
  416b50:	stp	x29, x30, [sp, #-32]!
  416b54:	mov	x29, sp
  416b58:	stp	x19, x20, [sp, #16]
  416b5c:	mov	x19, x1
  416b60:	mov	x20, x0
  416b64:	mov	x0, x1
  416b68:	bl	416968 <ferror@plt+0x13fc8>
  416b6c:	mov	x2, x19
  416b70:	mov	x1, x20
  416b74:	ldp	x19, x20, [sp, #16]
  416b78:	ldp	x29, x30, [sp], #32
  416b7c:	b	402350 <memcpy@plt>
  416b80:	stp	x29, x30, [sp, #-32]!
  416b84:	mov	x29, sp
  416b88:	str	x19, [sp, #16]
  416b8c:	mov	x19, x0
  416b90:	bl	402390 <strlen@plt>
  416b94:	mov	x1, x0
  416b98:	mov	x0, x19
  416b9c:	add	x1, x1, #0x1
  416ba0:	ldr	x19, [sp, #16]
  416ba4:	ldp	x29, x30, [sp], #32
  416ba8:	b	416b50 <ferror@plt+0x141b0>
  416bac:	nop
  416bb0:	stp	x29, x30, [sp, #-16]!
  416bb4:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  416bb8:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3878>
  416bbc:	mov	x29, sp
  416bc0:	ldr	w0, [x0, #860]
  416bc4:	add	x3, x3, #0xb98
  416bc8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x1878>
  416bcc:	add	x2, x2, #0xf20
  416bd0:	mov	w1, #0x0                   	// #0
  416bd4:	bl	4023e0 <error@plt>
  416bd8:	bl	4026d0 <abort@plt>
  416bdc:	nop
  416be0:	stp	x29, x30, [sp, #-16]!
  416be4:	mov	x29, sp
  416be8:	bl	413a18 <ferror@plt+0x11078>
  416bec:	cbz	x0, 416bf8 <ferror@plt+0x14258>
  416bf0:	ldp	x29, x30, [sp], #16
  416bf4:	ret
  416bf8:	bl	416bb0 <ferror@plt+0x14210>
  416bfc:	nop
  416c00:	stp	x29, x30, [sp, #-96]!
  416c04:	mov	x2, x0
  416c08:	mov	x29, sp
  416c0c:	stp	x19, x20, [sp, #16]
  416c10:	adrp	x20, 431000 <_obstack_memory_used@@Base+0x19878>
  416c14:	add	x3, sp, #0x20
  416c18:	ldp	x6, x7, [x1]
  416c1c:	stp	x6, x7, [sp, #64]
  416c20:	ldp	x4, x5, [x1, #16]
  416c24:	mov	w1, #0x1                   	// #1
  416c28:	ldr	x0, [x20, #1056]
  416c2c:	stp	x6, x7, [sp, #32]
  416c30:	stp	x4, x5, [sp, #48]
  416c34:	stp	x4, x5, [sp, #80]
  416c38:	bl	4025f0 <__vfprintf_chk@plt>
  416c3c:	mov	w19, w0
  416c40:	tbnz	w0, #31, 416c54 <ferror@plt+0x142b4>
  416c44:	mov	w0, w19
  416c48:	ldp	x19, x20, [sp, #16]
  416c4c:	ldp	x29, x30, [sp], #96
  416c50:	ret
  416c54:	ldr	x0, [x20, #1056]
  416c58:	bl	4029a0 <ferror@plt>
  416c5c:	cbnz	w0, 416c44 <ferror@plt+0x142a4>
  416c60:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  416c64:	ldr	w20, [x0, #860]
  416c68:	bl	402920 <__errno_location@plt>
  416c6c:	mov	x1, x0
  416c70:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  416c74:	mov	w0, w20
  416c78:	add	x2, x2, #0xbb0
  416c7c:	ldr	w1, [x1]
  416c80:	bl	4023e0 <error@plt>
  416c84:	b	416c44 <ferror@plt+0x142a4>
  416c88:	stp	x29, x30, [sp, #-272]!
  416c8c:	mov	w9, #0xffffffc8            	// #-56
  416c90:	mov	w8, #0xffffff80            	// #-128
  416c94:	mov	x29, sp
  416c98:	add	x10, sp, #0xd0
  416c9c:	add	x11, sp, #0x110
  416ca0:	stp	x11, x11, [sp, #48]
  416ca4:	str	x10, [sp, #64]
  416ca8:	stp	w9, w8, [sp, #72]
  416cac:	ldp	x10, x11, [sp, #48]
  416cb0:	stp	x10, x11, [sp, #16]
  416cb4:	ldp	x8, x9, [sp, #64]
  416cb8:	stp	x8, x9, [sp, #32]
  416cbc:	str	q0, [sp, #80]
  416cc0:	str	q1, [sp, #96]
  416cc4:	str	q2, [sp, #112]
  416cc8:	str	q3, [sp, #128]
  416ccc:	str	q4, [sp, #144]
  416cd0:	str	q5, [sp, #160]
  416cd4:	str	q6, [sp, #176]
  416cd8:	str	q7, [sp, #192]
  416cdc:	stp	x1, x2, [sp, #216]
  416ce0:	add	x1, sp, #0x10
  416ce4:	stp	x3, x4, [sp, #232]
  416ce8:	stp	x5, x6, [sp, #248]
  416cec:	str	x7, [sp, #264]
  416cf0:	bl	416c00 <ferror@plt+0x14260>
  416cf4:	ldp	x29, x30, [sp], #272
  416cf8:	ret
  416cfc:	nop
  416d00:	mov	x4, x2
  416d04:	stp	x29, x30, [sp, #-96]!
  416d08:	mov	x2, x1
  416d0c:	mov	x29, sp
  416d10:	ldp	x6, x7, [x4]
  416d14:	stp	x6, x7, [sp, #32]
  416d18:	add	x3, sp, #0x20
  416d1c:	ldp	x4, x5, [x4, #16]
  416d20:	mov	w1, #0x1                   	// #1
  416d24:	stp	x19, x20, [sp, #16]
  416d28:	mov	x20, x0
  416d2c:	stp	x4, x5, [sp, #48]
  416d30:	stp	x6, x7, [sp, #64]
  416d34:	stp	x4, x5, [sp, #80]
  416d38:	bl	4025f0 <__vfprintf_chk@plt>
  416d3c:	mov	w19, w0
  416d40:	tbnz	w0, #31, 416d54 <ferror@plt+0x143b4>
  416d44:	mov	w0, w19
  416d48:	ldp	x19, x20, [sp, #16]
  416d4c:	ldp	x29, x30, [sp], #96
  416d50:	ret
  416d54:	mov	x0, x20
  416d58:	bl	4029a0 <ferror@plt>
  416d5c:	cbnz	w0, 416d44 <ferror@plt+0x143a4>
  416d60:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  416d64:	ldr	w20, [x0, #860]
  416d68:	bl	402920 <__errno_location@plt>
  416d6c:	mov	x1, x0
  416d70:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  416d74:	mov	w0, w20
  416d78:	add	x2, x2, #0xbb0
  416d7c:	ldr	w1, [x1]
  416d80:	bl	4023e0 <error@plt>
  416d84:	b	416d44 <ferror@plt+0x143a4>
  416d88:	stp	x29, x30, [sp, #-256]!
  416d8c:	mov	w9, #0xffffffd0            	// #-48
  416d90:	mov	w8, #0xffffff80            	// #-128
  416d94:	mov	x29, sp
  416d98:	add	x10, sp, #0xd0
  416d9c:	add	x11, sp, #0x100
  416da0:	stp	x11, x11, [sp, #48]
  416da4:	str	x10, [sp, #64]
  416da8:	stp	w9, w8, [sp, #72]
  416dac:	ldp	x10, x11, [sp, #48]
  416db0:	stp	x10, x11, [sp, #16]
  416db4:	ldp	x8, x9, [sp, #64]
  416db8:	stp	x8, x9, [sp, #32]
  416dbc:	str	q0, [sp, #80]
  416dc0:	str	q1, [sp, #96]
  416dc4:	str	q2, [sp, #112]
  416dc8:	str	q3, [sp, #128]
  416dcc:	str	q4, [sp, #144]
  416dd0:	str	q5, [sp, #160]
  416dd4:	str	q6, [sp, #176]
  416dd8:	str	q7, [sp, #192]
  416ddc:	stp	x2, x3, [sp, #208]
  416de0:	add	x2, sp, #0x10
  416de4:	stp	x4, x5, [sp, #224]
  416de8:	stp	x6, x7, [sp, #240]
  416dec:	bl	416d00 <ferror@plt+0x14360>
  416df0:	ldp	x29, x30, [sp], #256
  416df4:	ret
  416df8:	stp	x29, x30, [sp, #-112]!
  416dfc:	mov	x29, sp
  416e00:	stp	x23, x24, [sp, #48]
  416e04:	mov	x23, x1
  416e08:	stp	x19, x20, [sp, #16]
  416e0c:	mov	x20, x0
  416e10:	ldp	x0, x1, [x1]
  416e14:	stp	x0, x1, [sp, #80]
  416e18:	ldp	x0, x1, [x23, #16]
  416e1c:	stp	x21, x22, [sp, #32]
  416e20:	ldr	w22, [x23, #24]
  416e24:	stp	x25, x26, [sp, #64]
  416e28:	stp	x0, x1, [sp, #96]
  416e2c:	ldr	x21, [x23]
  416e30:	cbz	x20, 416f40 <ferror@plt+0x145a0>
  416e34:	mov	x26, x20
  416e38:	mov	x19, #0x0                   	// #0
  416e3c:	mov	x24, #0xffffffffffffffff    	// #-1
  416e40:	ldr	x25, [sp, #88]
  416e44:	b	416e68 <ferror@plt+0x144c8>
  416e48:	and	x1, x1, #0xfffffffffffffff8
  416e4c:	str	x1, [sp, #80]
  416e50:	ldr	x0, [x2]
  416e54:	bl	402390 <strlen@plt>
  416e58:	adds	x19, x0, x19
  416e5c:	csel	x19, x19, x24, cc  // cc = lo, ul, last
  416e60:	subs	x26, x26, #0x1
  416e64:	b.eq	416eac <ferror@plt+0x1450c>  // b.none
  416e68:	ldr	w0, [sp, #104]
  416e6c:	ldr	x2, [sp, #80]
  416e70:	add	w3, w0, #0x8
  416e74:	add	x1, x2, #0xf
  416e78:	tbz	w0, #31, 416e48 <ferror@plt+0x144a8>
  416e7c:	str	w3, [sp, #104]
  416e80:	add	x1, x2, #0xf
  416e84:	cmp	w3, #0x0
  416e88:	and	x1, x1, #0xfffffffffffffff8
  416e8c:	b.le	416f28 <ferror@plt+0x14588>
  416e90:	str	x1, [sp, #80]
  416e94:	ldr	x0, [x2]
  416e98:	bl	402390 <strlen@plt>
  416e9c:	adds	x19, x0, x19
  416ea0:	csel	x19, x19, x24, cc  // cc = lo, ul, last
  416ea4:	subs	x26, x26, #0x1
  416ea8:	b.ne	416e68 <ferror@plt+0x144c8>  // b.any
  416eac:	mov	x0, #0x7fffffff            	// #2147483647
  416eb0:	cmp	x19, x0
  416eb4:	b.hi	416f70 <ferror@plt+0x145d0>  // b.pmore
  416eb8:	add	x0, x19, #0x1
  416ebc:	bl	416968 <ferror@plt+0x13fc8>
  416ec0:	mov	x25, x0
  416ec4:	mov	x24, x0
  416ec8:	b	416f00 <ferror@plt+0x14560>
  416ecc:	mov	x1, x21
  416ed0:	and	x21, x2, #0xfffffffffffffff8
  416ed4:	ldr	x19, [x1]
  416ed8:	mov	x0, x19
  416edc:	bl	402390 <strlen@plt>
  416ee0:	mov	x1, x19
  416ee4:	mov	x19, x0
  416ee8:	mov	x2, x19
  416eec:	mov	x0, x24
  416ef0:	bl	402350 <memcpy@plt>
  416ef4:	add	x24, x24, x19
  416ef8:	subs	x20, x20, #0x1
  416efc:	b.eq	416f50 <ferror@plt+0x145b0>  // b.none
  416f00:	add	x2, x21, #0xf
  416f04:	add	w0, w22, #0x8
  416f08:	tbz	w22, #31, 416ecc <ferror@plt+0x1452c>
  416f0c:	add	x2, x21, #0xf
  416f10:	cmp	w0, #0x0
  416f14:	b.le	416f30 <ferror@plt+0x14590>
  416f18:	mov	x1, x21
  416f1c:	mov	w22, w0
  416f20:	and	x21, x2, #0xfffffffffffffff8
  416f24:	b	416ed4 <ferror@plt+0x14534>
  416f28:	add	x2, x25, w0, sxtw
  416f2c:	b	416e50 <ferror@plt+0x144b0>
  416f30:	ldr	x1, [x23, #8]
  416f34:	add	x1, x1, w22, sxtw
  416f38:	mov	w22, w0
  416f3c:	b	416ed4 <ferror@plt+0x14534>
  416f40:	mov	x0, #0x1                   	// #1
  416f44:	bl	416968 <ferror@plt+0x13fc8>
  416f48:	mov	x24, x0
  416f4c:	mov	x25, x0
  416f50:	strb	wzr, [x24]
  416f54:	mov	x0, x25
  416f58:	ldp	x19, x20, [sp, #16]
  416f5c:	ldp	x21, x22, [sp, #32]
  416f60:	ldp	x23, x24, [sp, #48]
  416f64:	ldp	x25, x26, [sp, #64]
  416f68:	ldp	x29, x30, [sp], #112
  416f6c:	ret
  416f70:	bl	402920 <__errno_location@plt>
  416f74:	mov	x25, #0x0                   	// #0
  416f78:	mov	w1, #0x4b                  	// #75
  416f7c:	str	w1, [x0]
  416f80:	mov	x0, x25
  416f84:	ldp	x19, x20, [sp, #16]
  416f88:	ldp	x21, x22, [sp, #32]
  416f8c:	ldp	x23, x24, [sp, #48]
  416f90:	ldp	x25, x26, [sp, #64]
  416f94:	ldp	x29, x30, [sp], #112
  416f98:	ret
  416f9c:	nop
  416fa0:	mov	x2, x0
  416fa4:	stp	x29, x30, [sp, #-96]!
  416fa8:	mov	x4, x0
  416fac:	mov	x29, sp
  416fb0:	ldrb	w3, [x2]
  416fb4:	mov	x0, #0x0                   	// #0
  416fb8:	cbnz	w3, 416fd8 <ferror@plt+0x14638>
  416fbc:	b	417034 <ferror@plt+0x14694>
  416fc0:	ldrb	w3, [x4, #1]
  416fc4:	cmp	w3, #0x73
  416fc8:	b.ne	416fe0 <ferror@plt+0x14640>  // b.any
  416fcc:	ldrb	w3, [x4, #2]!
  416fd0:	add	x0, x0, #0x1
  416fd4:	cbz	w3, 417034 <ferror@plt+0x14694>
  416fd8:	cmp	w3, #0x25
  416fdc:	b.eq	416fc0 <ferror@plt+0x14620>  // b.none
  416fe0:	ldp	x6, x7, [x1]
  416fe4:	add	x3, sp, #0x10
  416fe8:	ldp	x4, x5, [x1, #16]
  416fec:	add	x0, sp, #0x38
  416ff0:	mov	w1, #0x1                   	// #1
  416ff4:	stp	x6, x7, [sp, #16]
  416ff8:	stp	x4, x5, [sp, #32]
  416ffc:	stp	x6, x7, [sp, #64]
  417000:	stp	x4, x5, [sp, #80]
  417004:	bl	402550 <__vasprintf_chk@plt>
  417008:	tbnz	w0, #31, 417018 <ferror@plt+0x14678>
  41700c:	ldr	x0, [sp, #56]
  417010:	ldp	x29, x30, [sp], #96
  417014:	ret
  417018:	bl	402920 <__errno_location@plt>
  41701c:	mov	x1, x0
  417020:	mov	x0, #0x0                   	// #0
  417024:	ldr	w1, [x1]
  417028:	cmp	w1, #0xc
  41702c:	b.ne	417010 <ferror@plt+0x14670>  // b.any
  417030:	bl	416bb0 <ferror@plt+0x14210>
  417034:	ldp	x4, x5, [x1]
  417038:	ldp	x2, x3, [x1, #16]
  41703c:	add	x1, sp, #0x10
  417040:	stp	x4, x5, [sp, #16]
  417044:	stp	x2, x3, [sp, #32]
  417048:	bl	416df8 <ferror@plt+0x14458>
  41704c:	ldp	x29, x30, [sp], #96
  417050:	ret
  417054:	nop
  417058:	stp	x29, x30, [sp, #-272]!
  41705c:	mov	w9, #0xffffffc8            	// #-56
  417060:	mov	w8, #0xffffff80            	// #-128
  417064:	mov	x29, sp
  417068:	add	x10, sp, #0xd0
  41706c:	add	x11, sp, #0x110
  417070:	stp	x11, x11, [sp, #48]
  417074:	str	x10, [sp, #64]
  417078:	stp	w9, w8, [sp, #72]
  41707c:	ldp	x10, x11, [sp, #48]
  417080:	stp	x10, x11, [sp, #16]
  417084:	ldp	x8, x9, [sp, #64]
  417088:	stp	x8, x9, [sp, #32]
  41708c:	str	q0, [sp, #80]
  417090:	str	q1, [sp, #96]
  417094:	str	q2, [sp, #112]
  417098:	str	q3, [sp, #128]
  41709c:	str	q4, [sp, #144]
  4170a0:	str	q5, [sp, #160]
  4170a4:	str	q6, [sp, #176]
  4170a8:	str	q7, [sp, #192]
  4170ac:	stp	x1, x2, [sp, #216]
  4170b0:	add	x1, sp, #0x10
  4170b4:	stp	x3, x4, [sp, #232]
  4170b8:	stp	x5, x6, [sp, #248]
  4170bc:	str	x7, [sp, #264]
  4170c0:	bl	416fa0 <ferror@plt+0x14600>
  4170c4:	ldp	x29, x30, [sp], #272
  4170c8:	ret
  4170cc:	nop
  4170d0:	stp	x29, x30, [sp, #-32]!
  4170d4:	mov	x29, sp
  4170d8:	stp	x19, x20, [sp, #16]
  4170dc:	mov	x19, x0
  4170e0:	bl	4024c0 <fileno@plt>
  4170e4:	tbnz	w0, #31, 417140 <ferror@plt+0x147a0>
  4170e8:	mov	x0, x19
  4170ec:	bl	4028c0 <__freading@plt>
  4170f0:	cbnz	w0, 417124 <ferror@plt+0x14784>
  4170f4:	mov	x0, x19
  4170f8:	bl	4172a8 <ferror@plt+0x14908>
  4170fc:	cbz	w0, 417140 <ferror@plt+0x147a0>
  417100:	bl	402920 <__errno_location@plt>
  417104:	mov	x20, x0
  417108:	mov	x0, x19
  41710c:	ldr	w19, [x20]
  417110:	bl	4024f0 <fclose@plt>
  417114:	cbnz	w19, 417150 <ferror@plt+0x147b0>
  417118:	ldp	x19, x20, [sp, #16]
  41711c:	ldp	x29, x30, [sp], #32
  417120:	ret
  417124:	mov	x0, x19
  417128:	bl	4024c0 <fileno@plt>
  41712c:	mov	w2, #0x1                   	// #1
  417130:	mov	x1, #0x0                   	// #0
  417134:	bl	4024a0 <lseek@plt>
  417138:	cmn	x0, #0x1
  41713c:	b.ne	4170f4 <ferror@plt+0x14754>  // b.any
  417140:	mov	x0, x19
  417144:	ldp	x19, x20, [sp, #16]
  417148:	ldp	x29, x30, [sp], #32
  41714c:	b	4024f0 <fclose@plt>
  417150:	mov	w0, #0xffffffff            	// #-1
  417154:	str	w19, [x20]
  417158:	b	417118 <ferror@plt+0x14778>
  41715c:	nop
  417160:	stp	x29, x30, [sp, #-96]!
  417164:	mov	w4, #0xfffffff0            	// #-16
  417168:	cmp	w1, #0x406
  41716c:	mov	x29, sp
  417170:	add	x5, sp, #0x50
  417174:	add	x6, sp, #0x60
  417178:	stp	x19, x20, [sp, #16]
  41717c:	stp	x6, x6, [sp, #48]
  417180:	str	x5, [sp, #64]
  417184:	stp	w4, wzr, [sp, #72]
  417188:	stp	x2, x3, [sp, #80]
  41718c:	b.ne	417210 <ferror@plt+0x14870>  // b.any
  417190:	stp	x21, x22, [sp, #32]
  417194:	adrp	x21, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  417198:	mov	w2, #0xfffffff8            	// #-8
  41719c:	str	w2, [sp, #72]
  4171a0:	ldr	w2, [x21, #3368]
  4171a4:	ldr	w22, [sp, #80]
  4171a8:	tbnz	w2, #31, 4171dc <ferror@plt+0x1483c>
  4171ac:	mov	w20, w0
  4171b0:	mov	w2, w22
  4171b4:	bl	402840 <fcntl@plt>
  4171b8:	mov	w19, w0
  4171bc:	tbnz	w0, #31, 417228 <ferror@plt+0x14888>
  4171c0:	mov	w0, #0x1                   	// #1
  4171c4:	str	w0, [x21, #3368]
  4171c8:	ldp	x21, x22, [sp, #32]
  4171cc:	mov	w0, w19
  4171d0:	ldp	x19, x20, [sp, #16]
  4171d4:	ldp	x29, x30, [sp], #96
  4171d8:	ret
  4171dc:	mov	w2, w22
  4171e0:	mov	w1, #0x0                   	// #0
  4171e4:	bl	417160 <ferror@plt+0x147c0>
  4171e8:	mov	w19, w0
  4171ec:	tbnz	w0, #31, 4171fc <ferror@plt+0x1485c>
  4171f0:	ldr	w0, [x21, #3368]
  4171f4:	cmn	w0, #0x1
  4171f8:	b.eq	417258 <ferror@plt+0x148b8>  // b.none
  4171fc:	mov	w0, w19
  417200:	ldp	x19, x20, [sp, #16]
  417204:	ldp	x21, x22, [sp, #32]
  417208:	ldp	x29, x30, [sp], #96
  41720c:	ret
  417210:	bl	402840 <fcntl@plt>
  417214:	mov	w19, w0
  417218:	mov	w0, w19
  41721c:	ldp	x19, x20, [sp, #16]
  417220:	ldp	x29, x30, [sp], #96
  417224:	ret
  417228:	bl	402920 <__errno_location@plt>
  41722c:	ldr	w0, [x0]
  417230:	cmp	w0, #0x16
  417234:	b.ne	4171c0 <ferror@plt+0x14820>  // b.any
  417238:	mov	w2, w22
  41723c:	mov	w0, w20
  417240:	mov	w1, #0x0                   	// #0
  417244:	bl	417160 <ferror@plt+0x147c0>
  417248:	mov	w19, w0
  41724c:	tbnz	w0, #31, 4171fc <ferror@plt+0x1485c>
  417250:	mov	w0, #0xffffffff            	// #-1
  417254:	str	w0, [x21, #3368]
  417258:	mov	w0, w19
  41725c:	mov	w1, #0x1                   	// #1
  417260:	bl	402840 <fcntl@plt>
  417264:	tbnz	w0, #31, 417280 <ferror@plt+0x148e0>
  417268:	orr	w2, w0, #0x1
  41726c:	mov	w1, #0x2                   	// #2
  417270:	mov	w0, w19
  417274:	bl	402840 <fcntl@plt>
  417278:	cmn	w0, #0x1
  41727c:	b.ne	4171fc <ferror@plt+0x1485c>  // b.any
  417280:	bl	402920 <__errno_location@plt>
  417284:	mov	x20, x0
  417288:	mov	w0, w19
  41728c:	mov	w19, #0xffffffff            	// #-1
  417290:	ldr	w21, [x20]
  417294:	bl	402660 <close@plt>
  417298:	str	w21, [x20]
  41729c:	ldp	x21, x22, [sp, #32]
  4172a0:	b	4171cc <ferror@plt+0x1482c>
  4172a4:	nop
  4172a8:	stp	x29, x30, [sp, #-32]!
  4172ac:	mov	x29, sp
  4172b0:	str	x19, [sp, #16]
  4172b4:	mov	x19, x0
  4172b8:	cbz	x0, 4172cc <ferror@plt+0x1492c>
  4172bc:	bl	4028c0 <__freading@plt>
  4172c0:	cbz	w0, 4172cc <ferror@plt+0x1492c>
  4172c4:	ldr	w0, [x19]
  4172c8:	tbnz	w0, #8, 4172dc <ferror@plt+0x1493c>
  4172cc:	mov	x0, x19
  4172d0:	ldr	x19, [sp, #16]
  4172d4:	ldp	x29, x30, [sp], #32
  4172d8:	b	402850 <fflush@plt>
  4172dc:	mov	x0, x19
  4172e0:	mov	w2, #0x1                   	// #1
  4172e4:	mov	x1, #0x0                   	// #0
  4172e8:	bl	417340 <ferror@plt+0x149a0>
  4172ec:	mov	x0, x19
  4172f0:	ldr	x19, [sp, #16]
  4172f4:	ldp	x29, x30, [sp], #32
  4172f8:	b	402850 <fflush@plt>
  4172fc:	nop
  417300:	ldp	x1, x2, [x0, #32]
  417304:	cmp	x2, x1
  417308:	b.hi	417334 <ferror@plt+0x14994>  // b.pmore
  41730c:	ldp	x3, x1, [x0, #8]
  417310:	ldr	w2, [x0]
  417314:	sub	x1, x1, x3
  417318:	tbz	w2, #8, 41732c <ferror@plt+0x1498c>
  41731c:	ldr	x2, [x0, #72]
  417320:	ldr	x0, [x0, #88]
  417324:	sub	x0, x0, x2
  417328:	add	x1, x1, x0
  41732c:	mov	x0, x1
  417330:	ret
  417334:	mov	x0, #0x0                   	// #0
  417338:	ret
  41733c:	nop
  417340:	stp	x29, x30, [sp, #-48]!
  417344:	mov	x29, sp
  417348:	ldp	x3, x4, [x0, #8]
  41734c:	str	x19, [sp, #16]
  417350:	mov	x19, x0
  417354:	cmp	x4, x3
  417358:	b.eq	41736c <ferror@plt+0x149cc>  // b.none
  41735c:	mov	x0, x19
  417360:	ldr	x19, [sp, #16]
  417364:	ldp	x29, x30, [sp], #48
  417368:	b	4027a0 <fseeko@plt>
  41736c:	ldp	x3, x4, [x0, #32]
  417370:	cmp	x4, x3
  417374:	b.ne	41735c <ferror@plt+0x149bc>  // b.any
  417378:	ldr	x3, [x0, #72]
  41737c:	cbnz	x3, 41735c <ferror@plt+0x149bc>
  417380:	str	x1, [sp, #32]
  417384:	str	w2, [sp, #44]
  417388:	bl	4024c0 <fileno@plt>
  41738c:	ldr	w2, [sp, #44]
  417390:	ldr	x1, [sp, #32]
  417394:	bl	4024a0 <lseek@plt>
  417398:	mov	x1, x0
  41739c:	cmn	x0, #0x1
  4173a0:	b.eq	4173b8 <ferror@plt+0x14a18>  // b.none
  4173a4:	ldr	w2, [x19]
  4173a8:	mov	w0, #0x0                   	// #0
  4173ac:	str	x1, [x19, #144]
  4173b0:	and	w1, w2, #0xffffffef
  4173b4:	str	w1, [x19]
  4173b8:	ldr	x19, [sp, #16]
  4173bc:	ldp	x29, x30, [sp], #48
  4173c0:	ret
  4173c4:	nop
  4173c8:	stp	x29, x30, [sp, #-64]!
  4173cc:	cmp	x0, #0x0
  4173d0:	add	x4, sp, #0x3c
  4173d4:	mov	x29, sp
  4173d8:	stp	x19, x20, [sp, #16]
  4173dc:	csel	x19, x4, x0, eq  // eq = none
  4173e0:	mov	x20, x2
  4173e4:	mov	x0, x19
  4173e8:	str	x21, [sp, #32]
  4173ec:	mov	x21, x1
  4173f0:	bl	402340 <mbrtowc@plt>
  4173f4:	cmp	x20, #0x0
  4173f8:	mov	x20, x0
  4173fc:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  417400:	b.hi	417418 <ferror@plt+0x14a78>  // b.pmore
  417404:	mov	x0, x20
  417408:	ldp	x19, x20, [sp, #16]
  41740c:	ldr	x21, [sp, #32]
  417410:	ldp	x29, x30, [sp], #64
  417414:	ret
  417418:	mov	w0, #0x0                   	// #0
  41741c:	bl	417848 <_obstack_memory_used@@Base+0xc0>
  417420:	tst	w0, #0xff
  417424:	b.ne	417404 <ferror@plt+0x14a64>  // b.any
  417428:	ldrb	w0, [x21]
  41742c:	mov	x20, #0x1                   	// #1
  417430:	str	w0, [x19]
  417434:	mov	x0, x20
  417438:	ldp	x19, x20, [sp, #16]
  41743c:	ldr	x21, [sp, #32]
  417440:	ldp	x29, x30, [sp], #64
  417444:	ret
  417448:	stp	x29, x30, [sp, #-16]!
  41744c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  417450:	adrp	x3, 41b000 <_obstack_memory_used@@Base+0x3878>
  417454:	mov	x29, sp
  417458:	ldr	x0, [x0, #1032]
  41745c:	add	x3, x3, #0xb98
  417460:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  417464:	mov	w1, #0x1                   	// #1
  417468:	add	x2, x2, #0x828
  41746c:	bl	402750 <__fprintf_chk@plt>
  417470:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  417474:	ldr	w0, [x0, #860]
  417478:	bl	4023c0 <exit@plt>
  41747c:	nop
  417480:	mov	x2, x0
  417484:	mov	x0, x1
  417488:	ldrb	w4, [x2, #80]
  41748c:	ldr	x3, [x2, #56]
  417490:	tbz	w4, #0, 4174a0 <ferror@plt+0x14b00>
  417494:	ldr	x0, [x2, #72]
  417498:	mov	x16, x3
  41749c:	br	x16
  4174a0:	mov	x16, x3
  4174a4:	br	x16
  4174a8:	mov	x2, x0
  4174ac:	mov	x0, x1
  4174b0:	ldrb	w4, [x2, #80]
  4174b4:	ldr	x3, [x2, #64]
  4174b8:	tbz	w4, #0, 4174c8 <ferror@plt+0x14b28>
  4174bc:	ldr	x0, [x2, #72]
  4174c0:	mov	x16, x3
  4174c4:	br	x16
  4174c8:	mov	x16, x3
  4174cc:	br	x16
  4174d0:	stp	x29, x30, [sp, #-48]!
  4174d4:	mov	x29, sp
  4174d8:	stp	x19, x20, [sp, #16]
  4174dc:	mov	x19, x0
  4174e0:	str	x21, [sp, #32]
  4174e4:	cbz	x2, 417560 <ferror@plt+0x14bc0>
  4174e8:	mov	x20, x2
  4174ec:	sub	x21, x2, #0x1
  4174f0:	cmp	x1, #0x0
  4174f4:	mov	x0, #0xfe0                 	// #4064
  4174f8:	csel	x1, x1, x0, ne  // ne = any
  4174fc:	str	x1, [x19]
  417500:	str	x21, [x19, #48]
  417504:	mov	x0, x19
  417508:	bl	417480 <ferror@plt+0x14ae0>
  41750c:	str	x0, [x19, #8]
  417510:	mov	x1, x0
  417514:	cbz	x0, 41756c <ferror@plt+0x14bcc>
  417518:	add	x2, x0, #0x10
  41751c:	neg	x20, x20
  417520:	ldr	x0, [x19]
  417524:	add	x2, x2, x21
  417528:	and	x20, x2, x20
  41752c:	ldr	x21, [sp, #32]
  417530:	stp	x20, x20, [x19, #16]
  417534:	add	x2, x1, x0
  417538:	str	x2, [x1]
  41753c:	mov	w0, #0x1                   	// #1
  417540:	str	x2, [x19, #32]
  417544:	ldrb	w2, [x19, #80]
  417548:	str	xzr, [x1, #8]
  41754c:	and	w1, w2, #0xfffffff9
  417550:	strb	w1, [x19, #80]
  417554:	ldp	x19, x20, [sp, #16]
  417558:	ldp	x29, x30, [sp], #48
  41755c:	ret
  417560:	mov	x21, #0xf                   	// #15
  417564:	mov	x20, #0x10                  	// #16
  417568:	b	4174f0 <ferror@plt+0x14b50>
  41756c:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  417570:	ldr	x0, [x0, #1016]
  417574:	blr	x0

0000000000417578 <_obstack_begin@@Base>:
  417578:	ldrb	w6, [x0, #80]
  41757c:	stp	x3, x4, [x0, #56]
  417580:	and	w6, w6, #0xfffffffe
  417584:	strb	w6, [x0, #80]
  417588:	b	4174d0 <ferror@plt+0x14b30>
  41758c:	nop

0000000000417590 <_obstack_begin_1@@Base>:
  417590:	ldrb	w7, [x0, #80]
  417594:	stp	x3, x4, [x0, #56]
  417598:	orr	w7, w7, #0x1
  41759c:	str	x5, [x0, #72]
  4175a0:	strb	w7, [x0, #80]
  4175a4:	b	4174d0 <ferror@plt+0x14b30>

00000000004175a8 <_obstack_newchunk@@Base>:
  4175a8:	stp	x29, x30, [sp, #-64]!
  4175ac:	mov	x29, sp
  4175b0:	stp	x21, x22, [sp, #32]
  4175b4:	ldp	x2, x21, [x0, #16]
  4175b8:	stp	x19, x20, [sp, #16]
  4175bc:	ldr	x4, [x0, #48]
  4175c0:	ldr	x3, [x0]
  4175c4:	sub	x21, x21, x2
  4175c8:	adds	x1, x21, x1
  4175cc:	str	x23, [sp, #48]
  4175d0:	cset	x2, cs  // cs = hs, nlast
  4175d4:	lsr	x20, x21, #3
  4175d8:	adds	x4, x4, x1
  4175dc:	add	x20, x20, #0x64
  4175e0:	cset	x1, cs  // cs = hs, nlast
  4175e4:	cmp	x3, x4
  4175e8:	csel	x3, x3, x4, cs  // cs = hs, nlast
  4175ec:	add	x4, x20, x4
  4175f0:	cmp	x3, x4
  4175f4:	csel	x20, x3, x4, cs  // cs = hs, nlast
  4175f8:	cmp	x2, #0x0
  4175fc:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  417600:	ldr	x23, [x0, #8]
  417604:	b.ne	4176b0 <_obstack_newchunk@@Base+0x108>  // b.any
  417608:	mov	x19, x0
  41760c:	mov	x1, x20
  417610:	bl	417480 <ferror@plt+0x14ae0>
  417614:	mov	x22, x0
  417618:	cbz	x0, 4176b0 <_obstack_newchunk@@Base+0x108>
  41761c:	str	x0, [x19, #8]
  417620:	add	x3, x0, x20
  417624:	ldr	x1, [x19, #16]
  417628:	mov	x2, x21
  41762c:	ldr	x20, [x19, #48]
  417630:	str	x23, [x0, #8]
  417634:	str	x3, [x19, #32]
  417638:	str	x3, [x0], #16
  41763c:	add	x0, x0, x20
  417640:	bic	x20, x0, x20
  417644:	mov	x0, x20
  417648:	bl	402350 <memcpy@plt>
  41764c:	ldrb	w0, [x19, #80]
  417650:	tbnz	w0, #1, 417670 <_obstack_newchunk@@Base+0xc8>
  417654:	ldr	x1, [x19, #48]
  417658:	add	x0, x23, #0x10
  41765c:	ldr	x2, [x19, #16]
  417660:	add	x0, x0, x1
  417664:	bic	x0, x0, x1
  417668:	cmp	x2, x0
  41766c:	b.eq	417698 <_obstack_newchunk@@Base+0xf0>  // b.none
  417670:	ldrb	w0, [x19, #80]
  417674:	add	x21, x20, x21
  417678:	ldr	x23, [sp, #48]
  41767c:	and	w0, w0, #0xfffffffd
  417680:	stp	x20, x21, [x19, #16]
  417684:	strb	w0, [x19, #80]
  417688:	ldp	x19, x20, [sp, #16]
  41768c:	ldp	x21, x22, [sp, #32]
  417690:	ldp	x29, x30, [sp], #64
  417694:	ret
  417698:	ldr	x0, [x23, #8]
  41769c:	str	x0, [x22, #8]
  4176a0:	mov	x1, x23
  4176a4:	mov	x0, x19
  4176a8:	bl	4174a8 <ferror@plt+0x14b08>
  4176ac:	b	417670 <_obstack_newchunk@@Base+0xc8>
  4176b0:	adrp	x0, 431000 <_obstack_memory_used@@Base+0x19878>
  4176b4:	ldr	x0, [x0, #1016]
  4176b8:	blr	x0
  4176bc:	nop

00000000004176c0 <_obstack_allocated_p@@Base>:
  4176c0:	ldr	x0, [x0, #8]
  4176c4:	cbz	x0, 4176e8 <_obstack_allocated_p@@Base+0x28>
  4176c8:	cmp	x1, x0
  4176cc:	b.ls	4176dc <_obstack_allocated_p@@Base+0x1c>  // b.plast
  4176d0:	ldr	x2, [x0]
  4176d4:	cmp	x2, x1
  4176d8:	b.cs	4176ec <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  4176dc:	ldr	x0, [x0, #8]
  4176e0:	cbnz	x0, 4176c8 <_obstack_allocated_p@@Base+0x8>
  4176e4:	mov	w0, #0x0                   	// #0
  4176e8:	ret
  4176ec:	mov	w0, #0x1                   	// #1
  4176f0:	ret
  4176f4:	nop

00000000004176f8 <_obstack_free@@Base>:
  4176f8:	stp	x29, x30, [sp, #-48]!
  4176fc:	mov	x29, sp
  417700:	str	x21, [sp, #32]
  417704:	mov	x21, x1
  417708:	ldr	x1, [x0, #8]
  41770c:	cbz	x1, 417754 <_obstack_free@@Base+0x5c>
  417710:	stp	x19, x20, [sp, #16]
  417714:	mov	x20, x0
  417718:	b	417720 <_obstack_free@@Base+0x28>
  41771c:	mov	x1, x19
  417720:	cmp	x1, x21
  417724:	b.cs	417734 <_obstack_free@@Base+0x3c>  // b.hs, b.nlast
  417728:	ldr	x0, [x1]
  41772c:	cmp	x0, x21
  417730:	b.cs	417764 <_obstack_free@@Base+0x6c>  // b.hs, b.nlast
  417734:	mov	x0, x20
  417738:	ldr	x19, [x1, #8]
  41773c:	bl	4174a8 <ferror@plt+0x14b08>
  417740:	ldrb	w2, [x20, #80]
  417744:	orr	w2, w2, #0x2
  417748:	strb	w2, [x20, #80]
  41774c:	cbnz	x19, 41771c <_obstack_free@@Base+0x24>
  417750:	ldp	x19, x20, [sp, #16]
  417754:	cbnz	x21, 41777c <_obstack_free@@Base+0x84>
  417758:	ldr	x21, [sp, #32]
  41775c:	ldp	x29, x30, [sp], #48
  417760:	ret
  417764:	stp	x1, x21, [x20, #8]
  417768:	stp	x21, x0, [x20, #24]
  41776c:	ldp	x19, x20, [sp, #16]
  417770:	ldr	x21, [sp, #32]
  417774:	ldp	x29, x30, [sp], #48
  417778:	ret
  41777c:	stp	x19, x20, [sp, #16]
  417780:	bl	4026d0 <abort@plt>
  417784:	nop

0000000000417788 <_obstack_memory_used@@Base>:
  417788:	ldr	x1, [x0, #8]
  41778c:	mov	x0, #0x0                   	// #0
  417790:	cbz	x1, 4177ac <_obstack_memory_used@@Base+0x24>
  417794:	nop
  417798:	ldr	x2, [x1]
  41779c:	sub	x2, x2, x1
  4177a0:	ldr	x1, [x1, #8]
  4177a4:	add	x0, x0, x2
  4177a8:	cbnz	x1, 417798 <_obstack_memory_used@@Base+0x10>
  4177ac:	ret
  4177b0:	ldrb	w1, [x0]
  4177b4:	cmp	w1, #0x2f
  4177b8:	b.ne	4177cc <_obstack_memory_used@@Base+0x44>  // b.any
  4177bc:	nop
  4177c0:	ldrb	w1, [x0, #1]!
  4177c4:	cmp	w1, #0x2f
  4177c8:	b.eq	4177c0 <_obstack_memory_used@@Base+0x38>  // b.none
  4177cc:	cbz	w1, 417804 <_obstack_memory_used@@Base+0x7c>
  4177d0:	mov	x2, x0
  4177d4:	mov	w3, #0x0                   	// #0
  4177d8:	b	4177f0 <_obstack_memory_used@@Base+0x68>
  4177dc:	cbz	w3, 4177e8 <_obstack_memory_used@@Base+0x60>
  4177e0:	mov	x0, x2
  4177e4:	mov	w3, #0x0                   	// #0
  4177e8:	ldrb	w1, [x2, #1]!
  4177ec:	cbz	w1, 417804 <_obstack_memory_used@@Base+0x7c>
  4177f0:	cmp	w1, #0x2f
  4177f4:	b.ne	4177dc <_obstack_memory_used@@Base+0x54>  // b.any
  4177f8:	ldrb	w1, [x2, #1]!
  4177fc:	mov	w3, #0x1                   	// #1
  417800:	cbnz	w1, 4177f0 <_obstack_memory_used@@Base+0x68>
  417804:	ret
  417808:	stp	x29, x30, [sp, #-32]!
  41780c:	mov	x29, sp
  417810:	str	x19, [sp, #16]
  417814:	mov	x19, x0
  417818:	bl	402390 <strlen@plt>
  41781c:	subs	x1, x0, #0x1
  417820:	b.ls	417830 <_obstack_memory_used@@Base+0xa8>  // b.plast
  417824:	ldrb	w2, [x19, x1]
  417828:	cmp	w2, #0x2f
  41782c:	b.eq	41783c <_obstack_memory_used@@Base+0xb4>  // b.none
  417830:	ldr	x19, [sp, #16]
  417834:	ldp	x29, x30, [sp], #32
  417838:	ret
  41783c:	mov	x0, x1
  417840:	b	41781c <_obstack_memory_used@@Base+0x94>
  417844:	nop
  417848:	stp	x29, x30, [sp, #-16]!
  41784c:	mov	x1, #0x0                   	// #0
  417850:	mov	x29, sp
  417854:	bl	402990 <setlocale@plt>
  417858:	mov	w1, #0x1                   	// #1
  41785c:	cbz	x0, 417880 <_obstack_memory_used@@Base+0xf8>
  417860:	ldrb	w1, [x0]
  417864:	cmp	w1, #0x43
  417868:	b.eq	41788c <_obstack_memory_used@@Base+0x104>  // b.none
  41786c:	adrp	x1, 41b000 <_obstack_memory_used@@Base+0x3878>
  417870:	add	x1, x1, #0xbd0
  417874:	bl	402760 <strcmp@plt>
  417878:	cmp	w0, #0x0
  41787c:	cset	w1, ne  // ne = any
  417880:	mov	w0, w1
  417884:	ldp	x29, x30, [sp], #16
  417888:	ret
  41788c:	ldrb	w2, [x0, #1]
  417890:	mov	w1, #0x0                   	// #0
  417894:	cbnz	w2, 41786c <_obstack_memory_used@@Base+0xe4>
  417898:	mov	w0, w1
  41789c:	ldp	x29, x30, [sp], #16
  4178a0:	ret
  4178a4:	nop
  4178a8:	stp	x29, x30, [sp, #-208]!
  4178ac:	mov	w0, #0xe                   	// #14
  4178b0:	mov	x29, sp
  4178b4:	stp	x21, x22, [sp, #32]
  4178b8:	adrp	x22, 43c000 <__progname@@GLIBC_2.17+0xabc8>
  4178bc:	stp	x19, x20, [sp, #16]
  4178c0:	bl	402510 <nl_langinfo@plt>
  4178c4:	mov	x21, x0
  4178c8:	ldr	x20, [x22, #3376]
  4178cc:	cmp	x0, #0x0
  4178d0:	adrp	x0, 417000 <ferror@plt+0x14660>
  4178d4:	add	x0, x0, #0xe98
  4178d8:	csel	x21, x0, x21, eq  // eq = none
  4178dc:	cbz	x20, 417970 <_obstack_memory_used@@Base+0x1e8>
  4178e0:	ldrb	w19, [x20]
  4178e4:	cbnz	w19, 417910 <_obstack_memory_used@@Base+0x188>
  4178e8:	b	417948 <_obstack_memory_used@@Base+0x1c0>
  4178ec:	bl	402390 <strlen@plt>
  4178f0:	add	x19, x0, #0x1
  4178f4:	add	x19, x20, x19
  4178f8:	mov	x0, x19
  4178fc:	bl	402390 <strlen@plt>
  417900:	add	x0, x0, #0x1
  417904:	add	x20, x19, x0
  417908:	ldrb	w19, [x19, x0]
  41790c:	cbz	w19, 417948 <_obstack_memory_used@@Base+0x1c0>
  417910:	mov	x1, x20
  417914:	mov	x0, x21
  417918:	bl	402760 <strcmp@plt>
  41791c:	mov	w1, w0
  417920:	mov	x0, x20
  417924:	cbz	w1, 417938 <_obstack_memory_used@@Base+0x1b0>
  417928:	cmp	w19, #0x2a
  41792c:	b.ne	4178ec <_obstack_memory_used@@Base+0x164>  // b.any
  417930:	ldrb	w1, [x20, #1]
  417934:	cbnz	w1, 4178ec <_obstack_memory_used@@Base+0x164>
  417938:	mov	x0, x20
  41793c:	bl	402390 <strlen@plt>
  417940:	add	x21, x0, #0x1
  417944:	add	x21, x20, x21
  417948:	ldrb	w1, [x21]
  41794c:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  417950:	add	x0, x0, #0xbd8
  417954:	cmp	w1, #0x0
  417958:	csel	x21, x0, x21, eq  // eq = none
  41795c:	mov	x0, x21
  417960:	ldp	x19, x20, [sp, #16]
  417964:	ldp	x21, x22, [sp, #32]
  417968:	ldp	x29, x30, [sp], #208
  41796c:	ret
  417970:	adrp	x0, 41b000 <_obstack_memory_used@@Base+0x3878>
  417974:	add	x0, x0, #0xbf0
  417978:	stp	x23, x24, [sp, #48]
  41797c:	stp	x25, x26, [sp, #64]
  417980:	bl	402930 <getenv@plt>
  417984:	mov	x19, x0
  417988:	cbz	x0, 417bbc <_obstack_memory_used@@Base+0x434>
  41798c:	ldrb	w1, [x0]
  417990:	cbnz	w1, 417a18 <_obstack_memory_used@@Base+0x290>
  417994:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x3878>
  417998:	add	x19, x19, #0xbe0
  41799c:	mov	x0, #0x17                  	// #23
  4179a0:	mov	x24, #0x9                   	// #9
  4179a4:	mov	x25, #0x8                   	// #8
  4179a8:	bl	402530 <malloc@plt>
  4179ac:	mov	x23, x0
  4179b0:	cbz	x0, 417c00 <_obstack_memory_used@@Base+0x478>
  4179b4:	mov	x1, x19
  4179b8:	mov	x2, x25
  4179bc:	bl	402350 <memcpy@plt>
  4179c0:	mov	w0, #0x2f                  	// #47
  4179c4:	strb	w0, [x23, x25]
  4179c8:	adrp	x2, 41b000 <_obstack_memory_used@@Base+0x3878>
  4179cc:	add	x2, x2, #0xc00
  4179d0:	add	x3, x23, x24
  4179d4:	mov	x0, x23
  4179d8:	mov	w1, #0x8000                	// #32768
  4179dc:	ldr	x4, [x2]
  4179e0:	str	x4, [x23, x24]
  4179e4:	ldur	x2, [x2, #6]
  4179e8:	stur	x2, [x3, #6]
  4179ec:	bl	402540 <open@plt>
  4179f0:	mov	w25, w0
  4179f4:	tbz	w0, #31, 417a44 <_obstack_memory_used@@Base+0x2bc>
  4179f8:	adrp	x20, 417000 <ferror@plt+0x14660>
  4179fc:	add	x20, x20, #0xe98
  417a00:	mov	x0, x23
  417a04:	bl	4027c0 <free@plt>
  417a08:	str	x20, [x22, #3376]
  417a0c:	ldp	x23, x24, [sp, #48]
  417a10:	ldp	x25, x26, [sp, #64]
  417a14:	b	4178e0 <_obstack_memory_used@@Base+0x158>
  417a18:	bl	402390 <strlen@plt>
  417a1c:	mov	x24, x0
  417a20:	mov	x0, #0xe                   	// #14
  417a24:	cbnz	x24, 417bdc <_obstack_memory_used@@Base+0x454>
  417a28:	bl	402530 <malloc@plt>
  417a2c:	mov	x23, x0
  417a30:	cbz	x0, 417c00 <_obstack_memory_used@@Base+0x478>
  417a34:	mov	x1, x19
  417a38:	mov	x2, x24
  417a3c:	bl	402350 <memcpy@plt>
  417a40:	b	4179c8 <_obstack_memory_used@@Base+0x240>
  417a44:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x1878>
  417a48:	mov	x24, #0x0                   	// #0
  417a4c:	add	x1, x1, #0x138
  417a50:	bl	4025d0 <fdopen@plt>
  417a54:	mov	x19, x0
  417a58:	cbz	x0, 417c0c <_obstack_memory_used@@Base+0x484>
  417a5c:	adrp	x25, 41b000 <_obstack_memory_used@@Base+0x3878>
  417a60:	add	x25, x25, #0xc10
  417a64:	stp	x27, x28, [sp, #80]
  417a68:	ldp	x0, x1, [x19, #8]
  417a6c:	cmp	x0, x1
  417a70:	b.cs	417ba8 <_obstack_memory_used@@Base+0x420>  // b.hs, b.nlast
  417a74:	add	x1, x0, #0x1
  417a78:	str	x1, [x19, #8]
  417a7c:	ldrb	w0, [x0]
  417a80:	cmp	w0, #0x20
  417a84:	sub	w1, w0, #0x9
  417a88:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  417a8c:	b.ls	417a68 <_obstack_memory_used@@Base+0x2e0>  // b.plast
  417a90:	cmp	w0, #0x23
  417a94:	b.eq	417b2c <_obstack_memory_used@@Base+0x3a4>  // b.none
  417a98:	mov	x1, x19
  417a9c:	bl	4027d0 <ungetc@plt>
  417aa0:	add	x3, sp, #0x98
  417aa4:	add	x2, sp, #0x60
  417aa8:	mov	x1, x25
  417aac:	mov	x0, x19
  417ab0:	bl	402560 <__isoc99_fscanf@plt>
  417ab4:	cmp	w0, #0x1
  417ab8:	b.le	417b5c <_obstack_memory_used@@Base+0x3d4>
  417abc:	add	x0, sp, #0x60
  417ac0:	bl	402390 <strlen@plt>
  417ac4:	mov	x26, x0
  417ac8:	add	x0, sp, #0x98
  417acc:	bl	402390 <strlen@plt>
  417ad0:	mov	x28, x0
  417ad4:	cbnz	x24, 417b74 <_obstack_memory_used@@Base+0x3ec>
  417ad8:	add	x0, x26, x0
  417adc:	add	x24, x0, #0x2
  417ae0:	add	x0, x0, #0x3
  417ae4:	bl	402530 <malloc@plt>
  417ae8:	mov	x27, x0
  417aec:	cbz	x27, 417c18 <_obstack_memory_used@@Base+0x490>
  417af0:	sub	x20, x24, x28
  417af4:	mov	x0, #0xfffffffffffffffe    	// #-2
  417af8:	sub	x0, x0, x26
  417afc:	add	x2, x26, #0x1
  417b00:	add	x0, x0, x20
  417b04:	add	x1, sp, #0x60
  417b08:	add	x0, x27, x0
  417b0c:	bl	402350 <memcpy@plt>
  417b10:	sub	x0, x20, #0x1
  417b14:	add	x2, x28, #0x1
  417b18:	add	x0, x27, x0
  417b1c:	mov	x20, x27
  417b20:	add	x1, sp, #0x98
  417b24:	bl	402350 <memcpy@plt>
  417b28:	b	417a68 <_obstack_memory_used@@Base+0x2e0>
  417b2c:	ldp	x1, x0, [x19, #8]
  417b30:	mov	w2, #0x1                   	// #1
  417b34:	add	x3, x1, #0x1
  417b38:	cmp	x1, x0
  417b3c:	b.cs	417b94 <_obstack_memory_used@@Base+0x40c>  // b.hs, b.nlast
  417b40:	str	x3, [x19, #8]
  417b44:	ldrb	w0, [x1]
  417b48:	cmp	w2, #0x0
  417b4c:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  417b50:	b.ne	417b2c <_obstack_memory_used@@Base+0x3a4>  // b.any
  417b54:	cmn	w0, #0x1
  417b58:	b.ne	417a68 <_obstack_memory_used@@Base+0x2e0>  // b.any
  417b5c:	mov	x0, x19
  417b60:	bl	4170d0 <ferror@plt+0x14730>
  417b64:	cbz	x24, 417bd4 <_obstack_memory_used@@Base+0x44c>
  417b68:	strb	wzr, [x20, x24]
  417b6c:	ldp	x27, x28, [sp, #80]
  417b70:	b	417a00 <_obstack_memory_used@@Base+0x278>
  417b74:	add	x1, x26, x0
  417b78:	mov	x0, x20
  417b7c:	add	x1, x1, x24
  417b80:	add	x24, x1, #0x2
  417b84:	add	x1, x1, #0x3
  417b88:	bl	402620 <realloc@plt>
  417b8c:	mov	x27, x0
  417b90:	b	417aec <_obstack_memory_used@@Base+0x364>
  417b94:	mov	x0, x19
  417b98:	bl	402980 <__uflow@plt>
  417b9c:	cmn	w0, #0x1
  417ba0:	cset	w2, ne  // ne = any
  417ba4:	b	417b48 <_obstack_memory_used@@Base+0x3c0>
  417ba8:	mov	x0, x19
  417bac:	bl	402980 <__uflow@plt>
  417bb0:	cmn	w0, #0x1
  417bb4:	b.ne	417a80 <_obstack_memory_used@@Base+0x2f8>  // b.any
  417bb8:	b	417b5c <_obstack_memory_used@@Base+0x3d4>
  417bbc:	adrp	x19, 41b000 <_obstack_memory_used@@Base+0x3878>
  417bc0:	mov	x0, #0x17                  	// #23
  417bc4:	add	x19, x19, #0xbe0
  417bc8:	mov	x24, #0x9                   	// #9
  417bcc:	mov	x25, #0x8                   	// #8
  417bd0:	b	4179a8 <_obstack_memory_used@@Base+0x220>
  417bd4:	ldp	x27, x28, [sp, #80]
  417bd8:	b	4179f8 <_obstack_memory_used@@Base+0x270>
  417bdc:	add	x1, x19, x24
  417be0:	add	x0, x24, x0
  417be4:	ldurb	w1, [x1, #-1]
  417be8:	cmp	w1, #0x2f
  417bec:	b.eq	417a28 <_obstack_memory_used@@Base+0x2a0>  // b.none
  417bf0:	add	x0, x24, #0xf
  417bf4:	mov	x25, x24
  417bf8:	add	x24, x24, #0x1
  417bfc:	b	4179a8 <_obstack_memory_used@@Base+0x220>
  417c00:	adrp	x20, 417000 <ferror@plt+0x14660>
  417c04:	add	x20, x20, #0xe98
  417c08:	b	417a08 <_obstack_memory_used@@Base+0x280>
  417c0c:	mov	w0, w25
  417c10:	bl	402660 <close@plt>
  417c14:	b	4179f8 <_obstack_memory_used@@Base+0x270>
  417c18:	mov	x0, x20
  417c1c:	bl	4027c0 <free@plt>
  417c20:	mov	x0, x19
  417c24:	adrp	x20, 417000 <ferror@plt+0x14660>
  417c28:	bl	4170d0 <ferror@plt+0x14730>
  417c2c:	add	x20, x20, #0xe98
  417c30:	ldp	x27, x28, [sp, #80]
  417c34:	b	417a00 <_obstack_memory_used@@Base+0x278>
  417c38:	stp	x29, x30, [sp, #-64]!
  417c3c:	mov	x29, sp
  417c40:	stp	x19, x20, [sp, #16]
  417c44:	adrp	x20, 430000 <_obstack_memory_used@@Base+0x18878>
  417c48:	add	x20, x20, #0xdf0
  417c4c:	stp	x21, x22, [sp, #32]
  417c50:	adrp	x21, 430000 <_obstack_memory_used@@Base+0x18878>
  417c54:	add	x21, x21, #0xde8
  417c58:	sub	x20, x20, x21
  417c5c:	mov	w22, w0
  417c60:	stp	x23, x24, [sp, #48]
  417c64:	mov	x23, x1
  417c68:	mov	x24, x2
  417c6c:	bl	402300 <mbrtowc@plt-0x40>
  417c70:	cmp	xzr, x20, asr #3
  417c74:	b.eq	417ca0 <_obstack_memory_used@@Base+0x518>  // b.none
  417c78:	asr	x20, x20, #3
  417c7c:	mov	x19, #0x0                   	// #0
  417c80:	ldr	x3, [x21, x19, lsl #3]
  417c84:	mov	x2, x24
  417c88:	add	x19, x19, #0x1
  417c8c:	mov	x1, x23
  417c90:	mov	w0, w22
  417c94:	blr	x3
  417c98:	cmp	x20, x19
  417c9c:	b.ne	417c80 <_obstack_memory_used@@Base+0x4f8>  // b.any
  417ca0:	ldp	x19, x20, [sp, #16]
  417ca4:	ldp	x21, x22, [sp, #32]
  417ca8:	ldp	x23, x24, [sp, #48]
  417cac:	ldp	x29, x30, [sp], #64
  417cb0:	ret
  417cb4:	nop
  417cb8:	ret
  417cbc:	nop
  417cc0:	adrp	x2, 431000 <_obstack_memory_used@@Base+0x19878>
  417cc4:	mov	x1, #0x0                   	// #0
  417cc8:	ldr	x2, [x2, #832]
  417ccc:	b	402450 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000417cd0 <.fini>:
  417cd0:	stp	x29, x30, [sp, #-16]!
  417cd4:	mov	x29, sp
  417cd8:	ldp	x29, x30, [sp], #16
  417cdc:	ret
