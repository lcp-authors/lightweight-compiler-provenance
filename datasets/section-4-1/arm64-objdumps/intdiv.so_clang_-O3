
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//intdiv.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000818 <.init>:
 818:	stp	x29, x30, [sp, #-16]!
 81c:	mov	x29, sp
 820:	bl	920 <fprintf@plt+0x10>
 824:	ldp	x29, x30, [sp], #16
 828:	ret

Disassembly of section .plt:

0000000000000830 <exit@plt-0x20>:
 830:	stp	x16, x30, [sp, #-16]!
 834:	adrp	x16, 11000 <dl_load@@Base+0x1060c>
 838:	ldr	x17, [x16, #4088]
 83c:	add	x16, x16, #0xff8
 840:	br	x17
 844:	nop
 848:	nop
 84c:	nop

0000000000000850 <exit@plt>:
 850:	adrp	x16, 12000 <exit@GLIBC_2.17>
 854:	ldr	x17, [x16]
 858:	add	x16, x16, #0x0
 85c:	br	x17

0000000000000860 <__gmpz_tdiv_qr@plt>:
 860:	adrp	x16, 12000 <exit@GLIBC_2.17>
 864:	ldr	x17, [x16, #8]
 868:	add	x16, x16, #0x8
 86c:	br	x17

0000000000000870 <__cxa_finalize@plt>:
 870:	adrp	x16, 12000 <exit@GLIBC_2.17>
 874:	ldr	x17, [x16, #16]
 878:	add	x16, x16, #0x10
 87c:	br	x17

0000000000000880 <mpfr_get_z@plt>:
 880:	adrp	x16, 12000 <exit@GLIBC_2.17>
 884:	ldr	x17, [x16, #24]
 888:	add	x16, x16, #0x18
 88c:	br	x17

0000000000000890 <__gmpz_set_d@plt>:
 890:	adrp	x16, 12000 <exit@GLIBC_2.17>
 894:	ldr	x17, [x16, #32]
 898:	add	x16, x16, #0x20
 89c:	br	x17

00000000000008a0 <__gmon_start__@plt>:
 8a0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8a4:	ldr	x17, [x16, #40]
 8a8:	add	x16, x16, #0x28
 8ac:	br	x17

00000000000008b0 <__gmpz_clear@plt>:
 8b0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8b4:	ldr	x17, [x16, #48]
 8b8:	add	x16, x16, #0x30
 8bc:	br	x17

00000000000008c0 <fwrite@plt>:
 8c0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8c4:	ldr	x17, [x16, #56]
 8c8:	add	x16, x16, #0x38
 8cc:	br	x17

00000000000008d0 <dcgettext@plt>:
 8d0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8d4:	ldr	x17, [x16, #64]
 8d8:	add	x16, x16, #0x40
 8dc:	br	x17

00000000000008e0 <fmod@plt>:
 8e0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8e4:	ldr	x17, [x16, #72]
 8e8:	add	x16, x16, #0x48
 8ec:	br	x17

00000000000008f0 <__gmpz_init@plt>:
 8f0:	adrp	x16, 12000 <exit@GLIBC_2.17>
 8f4:	ldr	x17, [x16, #80]
 8f8:	add	x16, x16, #0x50
 8fc:	br	x17

0000000000000900 <mpfr_number_p@plt>:
 900:	adrp	x16, 12000 <exit@GLIBC_2.17>
 904:	ldr	x17, [x16, #88]
 908:	add	x16, x16, #0x58
 90c:	br	x17

0000000000000910 <fprintf@plt>:
 910:	adrp	x16, 12000 <exit@GLIBC_2.17>
 914:	ldr	x17, [x16, #96]
 918:	add	x16, x16, #0x60
 91c:	br	x17

Disassembly of section .text:

0000000000000920 <dl_load@@Base-0xd4>:
     920:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
     924:	ldr	x0, [x0, #4056]
     928:	cbz	x0, 930 <fprintf@plt+0x20>
     92c:	b	8a0 <__gmon_start__@plt>
     930:	ret
     934:	nop
     938:	adrp	x0, 12000 <dl_load@@Base+0x1160c>
     93c:	add	x0, x0, #0xa0
     940:	adrp	x1, 12000 <dl_load@@Base+0x1160c>
     944:	add	x1, x1, #0xa0
     948:	cmp	x1, x0
     94c:	b.eq	964 <fprintf@plt+0x54>  // b.none
     950:	adrp	x1, 11000 <dl_load@@Base+0x1060c>
     954:	ldr	x1, [x1, #4032]
     958:	cbz	x1, 964 <fprintf@plt+0x54>
     95c:	mov	x16, x1
     960:	br	x16
     964:	ret
     968:	adrp	x0, 12000 <dl_load@@Base+0x1160c>
     96c:	add	x0, x0, #0xa0
     970:	adrp	x1, 12000 <dl_load@@Base+0x1160c>
     974:	add	x1, x1, #0xa0
     978:	sub	x1, x1, x0
     97c:	lsr	x2, x1, #63
     980:	add	x1, x2, x1, asr #3
     984:	cmp	xzr, x1, asr #1
     988:	asr	x1, x1, #1
     98c:	b.eq	9a4 <fprintf@plt+0x94>  // b.none
     990:	adrp	x2, 11000 <dl_load@@Base+0x1060c>
     994:	ldr	x2, [x2, #4064]
     998:	cbz	x2, 9a4 <fprintf@plt+0x94>
     99c:	mov	x16, x2
     9a0:	br	x16
     9a4:	ret
     9a8:	stp	x29, x30, [sp, #-32]!
     9ac:	mov	x29, sp
     9b0:	str	x19, [sp, #16]
     9b4:	adrp	x19, 12000 <dl_load@@Base+0x1160c>
     9b8:	ldrb	w0, [x19, #160]
     9bc:	cbnz	w0, 9e4 <fprintf@plt+0xd4>
     9c0:	adrp	x0, 11000 <dl_load@@Base+0x1060c>
     9c4:	ldr	x0, [x0, #4040]
     9c8:	cbz	x0, 9d8 <fprintf@plt+0xc8>
     9cc:	adrp	x0, 12000 <dl_load@@Base+0x1160c>
     9d0:	ldr	x0, [x0, #104]
     9d4:	bl	870 <__cxa_finalize@plt>
     9d8:	bl	938 <fprintf@plt+0x28>
     9dc:	mov	w0, #0x1                   	// #1
     9e0:	strb	w0, [x19, #160]
     9e4:	ldr	x19, [sp, #16]
     9e8:	ldp	x29, x30, [sp], #32
     9ec:	ret
     9f0:	b	968 <fprintf@plt+0x58>

00000000000009f4 <dl_load@@Base>:
     9f4:	stp	x29, x30, [sp, #-32]!
     9f8:	stp	x20, x19, [sp, #16]
     9fc:	adrp	x20, 12000 <dl_load@@Base+0x1160c>
     a00:	add	x20, x20, #0xa8
     a04:	stp	x0, x1, [x20]
     a08:	ldr	w8, [x0]
     a0c:	mov	x29, sp
     a10:	cmp	w8, #0x2
     a14:	b.ne	a98 <dl_load@@Base+0xa4>  // b.any
     a18:	ldr	w8, [x0, #4]
     a1c:	tbnz	w8, #31, a98 <dl_load@@Base+0xa4>
     a20:	adrp	x19, 12000 <dl_load@@Base+0x1160c>
     a24:	ldr	x8, [x19, #112]
     a28:	cbz	x8, a50 <dl_load@@Base+0x5c>
     a2c:	ldr	x9, [x0, #48]
     a30:	adrp	x8, 1000 <dl_load@@Base+0x60c>
     a34:	add	x8, x8, #0x188
     a38:	adrp	x2, 12000 <dl_load@@Base+0x1160c>
     a3c:	add	x2, x2, #0x70
     a40:	mov	x0, x1
     a44:	mov	x1, x8
     a48:	blr	x9
     a4c:	cbz	w0, a58 <dl_load@@Base+0x64>
     a50:	mov	w19, #0x1                   	// #1
     a54:	b	a74 <dl_load@@Base+0x80>
     a58:	ldp	x8, x0, [x20]
     a5c:	ldr	x2, [x19, #112]
     a60:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     a64:	add	x1, x1, #0x1bc
     a68:	ldr	x8, [x8, #104]
     a6c:	blr	x8
     a70:	mov	w19, wzr
     a74:	ldp	x8, x0, [x20]
     a78:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     a7c:	add	x1, x1, #0x310
     a80:	ldr	x8, [x8, #88]
     a84:	blr	x8
     a88:	mov	w0, w19
     a8c:	ldp	x20, x19, [sp, #16]
     a90:	ldp	x29, x30, [sp], #32
     a94:	ret
     a98:	adrp	x19, 11000 <dl_load@@Base+0x1060c>
     a9c:	ldr	x19, [x19, #4048]
     aa0:	adrp	x0, 1000 <dl_load@@Base+0x60c>
     aa4:	add	x0, x0, #0x164
     aa8:	mov	w1, #0x24                  	// #36
     aac:	ldr	x3, [x19]
     ab0:	mov	w2, #0x1                   	// #1
     ab4:	bl	8c0 <fwrite@plt>
     ab8:	adrp	x8, 12000 <dl_load@@Base+0x1160c>
     abc:	ldr	x8, [x8, #168]
     ac0:	ldr	x0, [x19]
     ac4:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     ac8:	add	x1, x1, #0x189
     acc:	ldp	w4, w5, [x8]
     ad0:	mov	w2, #0x2                   	// #2
     ad4:	mov	w3, wzr
     ad8:	bl	910 <fprintf@plt>
     adc:	mov	w0, #0x1                   	// #1
     ae0:	bl	850 <exit@plt>
     ae4:	sub	sp, sp, #0x150
     ae8:	stp	x28, x27, [sp, #256]
     aec:	adrp	x27, 12000 <dl_load@@Base+0x1160c>
     af0:	add	x27, x27, #0xa8
     af4:	ldp	x8, x0, [x27]
     af8:	stp	d9, d8, [sp, #224]
     afc:	stp	x29, x30, [sp, #240]
     b00:	stp	x26, x25, [sp, #272]
     b04:	stp	x24, x23, [sp, #288]
     b08:	stp	x22, x21, [sp, #304]
     b0c:	stp	x20, x19, [sp, #320]
     b10:	ldr	x8, [x8, #152]
     b14:	mov	x19, x1
     b18:	add	x3, sp, #0x70
     b1c:	mov	w2, #0x1                   	// #1
     b20:	mov	x1, xzr
     b24:	add	x29, sp, #0xe0
     b28:	mov	w21, #0x1                   	// #1
     b2c:	blr	x8
     b30:	ldr	x8, [x27]
     b34:	cbz	w0, d70 <dl_load@@Base+0x37c>
     b38:	ldr	x8, [x8, #152]
     b3c:	ldr	x0, [x27, #8]
     b40:	add	x3, sp, #0x50
     b44:	mov	w1, #0x1                   	// #1
     b48:	mov	w2, #0x1                   	// #1
     b4c:	mov	w21, #0x1                   	// #1
     b50:	blr	x8
     b54:	ldr	x8, [x27]
     b58:	adrp	x23, 12000 <dl_load@@Base+0x1160c>
     b5c:	cbz	w0, da4 <dl_load@@Base+0x3b0>
     b60:	ldr	x8, [x8, #152]
     b64:	ldr	x0, [x23, #176]
     b68:	add	x3, sp, #0x30
     b6c:	mov	w1, #0x2                   	// #2
     b70:	mov	w2, #0x5                   	// #5
     b74:	blr	x8
     b78:	cbz	w0, ddc <dl_load@@Base+0x3e8>
     b7c:	ldp	x8, x0, [x27]
     b80:	ldr	x20, [sp, #56]
     b84:	ldr	x8, [x8, #256]
     b88:	mov	x1, x20
     b8c:	blr	x8
     b90:	ldr	w8, [sp, #128]
     b94:	cbnz	w8, ba0 <dl_load@@Base+0x1ac>
     b98:	ldr	w8, [sp, #96]
     b9c:	cbz	w8, e90 <dl_load@@Base+0x49c>
     ba0:	add	x0, sp, #0x70
     ba4:	add	x1, sp, #0x20
     ba8:	bl	1080 <dl_load@@Base+0x68c>
     bac:	cbz	x0, df8 <dl_load@@Base+0x404>
     bb0:	mov	x21, x0
     bb4:	add	x0, sp, #0x50
     bb8:	add	x1, sp, #0x10
     bbc:	bl	1080 <dl_load@@Base+0x68c>
     bc0:	cbz	x0, e58 <dl_load@@Base+0x464>
     bc4:	adrp	x8, 12000 <dl_load@@Base+0x1160c>
     bc8:	ldr	w9, [x0, #4]
     bcc:	ldr	x8, [x8, #168]
     bd0:	mov	x22, x0
     bd4:	cbz	w9, ed0 <dl_load@@Base+0x4dc>
     bd8:	ldr	x8, [x8, #320]
     bdc:	ldr	x0, [x27, #8]
     be0:	blr	x8
     be4:	ldp	x9, x8, [x27]
     be8:	mov	x24, x0
     bec:	ldr	x9, [x9, #320]
     bf0:	mov	x0, x8
     bf4:	blr	x9
     bf8:	mov	x1, x0
     bfc:	mov	x0, x24
     c00:	mov	x2, x21
     c04:	mov	x3, x22
     c08:	str	x1, [sp, #8]
     c0c:	bl	860 <__gmpz_tdiv_qr@plt>
     c10:	ldp	x28, x25, [x27]
     c14:	movi	v0.2d, #0x0
     c18:	mov	w9, #0x2                   	// #2
     c1c:	mov	w8, #0x8                   	// #8
     c20:	ldr	x23, [x28, #232]
     c24:	stp	q0, q0, [x29, #-48]
     c28:	stur	w9, [x29, #-48]
     c2c:	stur	x8, [x29, #-32]
     c30:	ldr	x8, [x28, #280]
     c34:	mov	w0, #0x9                   	// #9
     c38:	blr	x8
     c3c:	mov	x26, x0
     c40:	cbnz	x0, c64 <dl_load@@Base+0x270>
     c44:	ldr	x8, [x28, #96]
     c48:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     c4c:	adrp	x2, 1000 <dl_load@@Base+0x60c>
     c50:	add	x1, x1, #0x2c2
     c54:	add	x2, x2, #0x2e0
     c58:	mov	w3, #0x9                   	// #9
     c5c:	mov	x0, x25
     c60:	blr	x8
     c64:	mov	x8, #0x7571                	// #30065
     c68:	movk	x8, #0x746f, lsl #16
     c6c:	movk	x8, #0x6569, lsl #32
     c70:	movk	x8, #0x746e, lsl #48
     c74:	mov	w9, #0x1                   	// #1
     c78:	mov	w28, #0x2                   	// #2
     c7c:	sub	x2, x29, #0x30
     c80:	sub	x3, x29, #0x50
     c84:	mov	x0, x25
     c88:	mov	x1, x20
     c8c:	strb	wzr, [x26, #8]
     c90:	str	x8, [x26]
     c94:	stur	x26, [x29, #-40]
     c98:	stur	w9, [x29, #-80]
     c9c:	stur	w28, [x29, #-64]
     ca0:	stur	x24, [x29, #-56]
     ca4:	blr	x23
     ca8:	ldp	x23, x24, [x27]
     cac:	mov	w8, #0x9                   	// #9
     cb0:	movi	v0.2d, #0x0
     cb4:	mov	w0, #0xa                   	// #10
     cb8:	ldr	x26, [x23, #232]
     cbc:	stp	q0, q0, [x29, #-48]
     cc0:	stur	w28, [x29, #-48]
     cc4:	stur	x8, [x29, #-32]
     cc8:	ldr	x8, [x23, #280]
     ccc:	blr	x8
     cd0:	mov	x25, x0
     cd4:	cbnz	x0, cf8 <dl_load@@Base+0x304>
     cd8:	ldr	x8, [x23, #96]
     cdc:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     ce0:	adrp	x2, 1000 <dl_load@@Base+0x60c>
     ce4:	add	x1, x1, #0x2c2
     ce8:	add	x2, x2, #0x2e0
     cec:	mov	w3, #0xa                   	// #10
     cf0:	mov	x0, x24
     cf4:	blr	x8
     cf8:	adrp	x9, 1000 <dl_load@@Base+0x60c>
     cfc:	add	x9, x9, #0x276
     d00:	ldr	x9, [x9]
     d04:	mov	w8, #0x72                  	// #114
     d08:	strb	w8, [x25, #8]
     d0c:	mov	w8, #0x1                   	// #1
     d10:	strb	wzr, [x25, #9]
     d14:	str	x9, [x25]
     d18:	stur	w8, [x29, #-80]
     d1c:	ldr	x8, [sp, #8]
     d20:	mov	w10, #0x2                   	// #2
     d24:	sub	x2, x29, #0x30
     d28:	sub	x3, x29, #0x50
     d2c:	mov	x0, x24
     d30:	mov	x1, x20
     d34:	stur	x25, [x29, #-40]
     d38:	stur	w10, [x29, #-64]
     d3c:	stur	x8, [x29, #-56]
     d40:	blr	x26
     d44:	add	x8, sp, #0x20
     d48:	cmp	x21, x8
     d4c:	b.ne	d58 <dl_load@@Base+0x364>  // b.any
     d50:	add	x0, sp, #0x20
     d54:	bl	8b0 <__gmpz_clear@plt>
     d58:	add	x8, sp, #0x10
     d5c:	cmp	x22, x8
     d60:	b.ne	1070 <dl_load@@Base+0x67c>  // b.any
     d64:	add	x0, sp, #0x10
     d68:	bl	8b0 <__gmpz_clear@plt>
     d6c:	b	1070 <dl_load@@Base+0x67c>
     d70:	ldr	x22, [x8, #104]
     d74:	adrp	x8, 12000 <dl_load@@Base+0x1160c>
     d78:	ldr	x20, [x8, #176]
     d7c:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     d80:	add	x1, x1, #0x1dc
     d84:	mov	w2, #0x5                   	// #5
     d88:	mov	x0, xzr
     d8c:	bl	8d0 <dcgettext@plt>
     d90:	mov	x1, x0
     d94:	mov	x0, x20
     d98:	blr	x22
     d9c:	str	w21, [x19]
     da0:	b	dd0 <dl_load@@Base+0x3dc>
     da4:	ldr	x22, [x8, #104]
     da8:	ldr	x20, [x23, #176]
     dac:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     db0:	add	x1, x1, #0x203
     db4:	mov	w2, #0x5                   	// #5
     db8:	mov	x0, xzr
     dbc:	bl	8d0 <dcgettext@plt>
     dc0:	mov	x1, x0
     dc4:	mov	x0, x20
     dc8:	blr	x22
     dcc:	str	w21, [x19]
     dd0:	mov	x8, #0xbff0000000000000    	// #-4616189618054758400
     dd4:	str	x8, [x19, #8]
     dd8:	b	e2c <dl_load@@Base+0x438>
     ddc:	ldp	x8, x20, [x27]
     de0:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     de4:	add	x1, x1, #0x22b
     de8:	ldr	x21, [x8, #104]
     dec:	mov	w2, #0x5                   	// #5
     df0:	mov	x0, xzr
     df4:	b	e0c <dl_load@@Base+0x418>
     df8:	ldp	x8, x20, [x27]
     dfc:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     e00:	add	x1, x1, #0x280
     e04:	mov	w2, #0x5                   	// #5
     e08:	ldr	x21, [x8, #104]
     e0c:	bl	8d0 <dcgettext@plt>
     e10:	mov	x1, x0
     e14:	mov	x0, x20
     e18:	blr	x21
     e1c:	mov	w8, #0x1                   	// #1
     e20:	mov	x9, #0xbff0000000000000    	// #-4616189618054758400
     e24:	str	w8, [x19]
     e28:	str	x9, [x19, #8]
     e2c:	str	wzr, [x19, #16]
     e30:	mov	x0, x19
     e34:	ldp	x20, x19, [sp, #320]
     e38:	ldp	x22, x21, [sp, #304]
     e3c:	ldp	x24, x23, [sp, #288]
     e40:	ldp	x26, x25, [sp, #272]
     e44:	ldp	x28, x27, [sp, #256]
     e48:	ldp	x29, x30, [sp, #240]
     e4c:	ldp	d9, d8, [sp, #224]
     e50:	add	sp, sp, #0x150
     e54:	ret
     e58:	ldp	x8, x20, [x27]
     e5c:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     e60:	add	x1, x1, #0x2a0
     e64:	mov	w2, #0x5                   	// #5
     e68:	ldr	x22, [x8, #104]
     e6c:	bl	8d0 <dcgettext@plt>
     e70:	mov	x1, x0
     e74:	mov	x0, x20
     e78:	blr	x22
     e7c:	add	x8, sp, #0x20
     e80:	cmp	x21, x8
     e84:	b.ne	e1c <dl_load@@Base+0x428>  // b.any
     e88:	add	x0, sp, #0x20
     e8c:	b	f1c <dl_load@@Base+0x528>
     e90:	ldr	d0, [sp, #120]
     e94:	ldr	d1, [sp, #88]
     e98:	frintm	d2, d0
     e9c:	frintp	d3, d0
     ea0:	fcmp	d0, #0.0
     ea4:	frintm	d4, d1
     ea8:	frintp	d5, d1
     eac:	fcsel	d0, d3, d2, lt  // lt = tstop
     eb0:	fcmp	d1, #0.0
     eb4:	fcsel	d1, d5, d4, lt  // lt = tstop
     eb8:	fcmp	d1, #0.0
     ebc:	b.ne	f24 <dl_load@@Base+0x530>  // b.any
     ec0:	ldp	x8, x20, [x27]
     ec4:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     ec8:	add	x1, x1, #0x253
     ecc:	b	de8 <dl_load@@Base+0x3f4>
     ed0:	ldr	x24, [x8, #104]
     ed4:	ldr	x20, [x23, #176]
     ed8:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     edc:	add	x1, x1, #0x253
     ee0:	mov	w2, #0x5                   	// #5
     ee4:	mov	x0, xzr
     ee8:	bl	8d0 <dcgettext@plt>
     eec:	mov	x1, x0
     ef0:	mov	x0, x20
     ef4:	blr	x24
     ef8:	add	x8, sp, #0x20
     efc:	cmp	x21, x8
     f00:	b.ne	f0c <dl_load@@Base+0x518>  // b.any
     f04:	add	x0, sp, #0x20
     f08:	bl	8b0 <__gmpz_clear@plt>
     f0c:	add	x8, sp, #0x10
     f10:	cmp	x22, x8
     f14:	b.ne	e1c <dl_load@@Base+0x428>  // b.any
     f18:	add	x0, sp, #0x10
     f1c:	bl	8b0 <__gmpz_clear@plt>
     f20:	b	e1c <dl_load@@Base+0x428>
     f24:	fdiv	d2, d0, d1
     f28:	frintm	d3, d2
     f2c:	frintp	d4, d2
     f30:	fcmp	d2, #0.0
     f34:	fcsel	d9, d4, d3, lt  // lt = tstop
     f38:	bl	8e0 <fmod@plt>
     f3c:	ldp	x24, x21, [x27]
     f40:	movi	v2.2d, #0x0
     f44:	mov	w23, #0x2                   	// #2
     f48:	mov	w8, #0x8                   	// #8
     f4c:	ldr	x25, [x24, #232]
     f50:	stp	q2, q2, [x29, #-48]
     f54:	stur	w23, [x29, #-48]
     f58:	stur	x8, [x29, #-32]
     f5c:	ldr	x8, [x24, #280]
     f60:	frintm	d1, d0
     f64:	fcmp	d0, #0.0
     f68:	frintp	d0, d0
     f6c:	mov	w0, #0x9                   	// #9
     f70:	fcsel	d8, d0, d1, lt  // lt = tstop
     f74:	blr	x8
     f78:	mov	x22, x0
     f7c:	cbnz	x0, fa0 <dl_load@@Base+0x5ac>
     f80:	ldr	x8, [x24, #96]
     f84:	adrp	x1, 1000 <dl_load@@Base+0x60c>
     f88:	adrp	x2, 1000 <dl_load@@Base+0x60c>
     f8c:	add	x1, x1, #0x2c2
     f90:	add	x2, x2, #0x2e0
     f94:	mov	w3, #0x9                   	// #9
     f98:	mov	x0, x21
     f9c:	blr	x8
     fa0:	mov	x8, #0x7571                	// #30065
     fa4:	movk	x8, #0x746f, lsl #16
     fa8:	movk	x8, #0x6569, lsl #32
     fac:	movk	x8, #0x746e, lsl #48
     fb0:	mov	w24, #0x1                   	// #1
     fb4:	sub	x2, x29, #0x30
     fb8:	sub	x3, x29, #0x50
     fbc:	mov	x0, x21
     fc0:	mov	x1, x20
     fc4:	strb	wzr, [x22, #8]
     fc8:	str	x8, [x22]
     fcc:	stur	x22, [x29, #-40]
     fd0:	stur	w24, [x29, #-80]
     fd4:	stur	d9, [x29, #-72]
     fd8:	stur	wzr, [x29, #-64]
     fdc:	blr	x25
     fe0:	ldp	x26, x21, [x27]
     fe4:	mov	w8, #0x9                   	// #9
     fe8:	movi	v0.2d, #0x0
     fec:	mov	w0, #0xa                   	// #10
     ff0:	ldr	x25, [x26, #232]
     ff4:	stp	q0, q0, [x29, #-48]
     ff8:	stur	w23, [x29, #-48]
     ffc:	stur	x8, [x29, #-32]
    1000:	ldr	x8, [x26, #280]
    1004:	blr	x8
    1008:	mov	x22, x0
    100c:	cbnz	x0, 1030 <dl_load@@Base+0x63c>
    1010:	ldr	x8, [x26, #96]
    1014:	adrp	x1, 1000 <dl_load@@Base+0x60c>
    1018:	adrp	x2, 1000 <dl_load@@Base+0x60c>
    101c:	add	x1, x1, #0x2c2
    1020:	add	x2, x2, #0x2e0
    1024:	mov	w3, #0xa                   	// #10
    1028:	mov	x0, x21
    102c:	blr	x8
    1030:	adrp	x8, 1000 <dl_load@@Base+0x60c>
    1034:	add	x8, x8, #0x276
    1038:	ldr	x8, [x8]
    103c:	mov	w9, #0x72                  	// #114
    1040:	sub	x2, x29, #0x30
    1044:	sub	x3, x29, #0x50
    1048:	mov	x0, x21
    104c:	mov	x1, x20
    1050:	strb	wzr, [x22, #9]
    1054:	strb	w9, [x22, #8]
    1058:	str	x8, [x22]
    105c:	stur	x22, [x29, #-40]
    1060:	stur	w24, [x29, #-80]
    1064:	stur	d8, [x29, #-72]
    1068:	stur	wzr, [x29, #-64]
    106c:	blr	x25
    1070:	mov	w8, #0x1                   	// #1
    1074:	str	xzr, [x19, #8]
    1078:	str	w8, [x19]
    107c:	b	e2c <dl_load@@Base+0x438>
    1080:	stp	x29, x30, [sp, #-48]!
    1084:	stp	x20, x19, [sp, #32]
    1088:	ldr	w8, [x0, #16]
    108c:	mov	x20, x0
    1090:	mov	x19, x1
    1094:	str	x21, [sp, #16]
    1098:	mov	x29, sp
    109c:	cbz	w8, 10b8 <dl_load@@Base+0x6c4>
    10a0:	cmp	w8, #0x1
    10a4:	b.eq	10e0 <dl_load@@Base+0x6ec>  // b.none
    10a8:	cmp	w8, #0x2
    10ac:	b.ne	1108 <dl_load@@Base+0x714>  // b.any
    10b0:	ldr	x19, [x20, #24]
    10b4:	b	1140 <dl_load@@Base+0x74c>
    10b8:	mov	x0, x19
    10bc:	bl	8f0 <__gmpz_init@plt>
    10c0:	ldr	d0, [x20, #8]
    10c4:	mov	x0, x19
    10c8:	frintm	d1, d0
    10cc:	frintp	d2, d0
    10d0:	fcmp	d0, #0.0
    10d4:	fcsel	d0, d2, d1, lt  // lt = tstop
    10d8:	bl	890 <__gmpz_set_d@plt>
    10dc:	b	1140 <dl_load@@Base+0x74c>
    10e0:	ldr	x0, [x20, #24]
    10e4:	bl	900 <mpfr_number_p@plt>
    10e8:	cbz	w0, 113c <dl_load@@Base+0x748>
    10ec:	mov	x0, x19
    10f0:	bl	8f0 <__gmpz_init@plt>
    10f4:	ldr	x1, [x20, #24]
    10f8:	mov	w2, #0x1                   	// #1
    10fc:	mov	x0, x19
    1100:	bl	880 <mpfr_get_z@plt>
    1104:	b	1140 <dl_load@@Base+0x74c>
    1108:	adrp	x8, 12000 <dl_load@@Base+0x1160c>
    110c:	add	x8, x8, #0xa8
    1110:	ldp	x9, x19, [x8]
    1114:	adrp	x1, 1000 <dl_load@@Base+0x60c>
    1118:	add	x1, x1, #0x2ee
    111c:	mov	w2, #0x5                   	// #5
    1120:	ldr	x21, [x9, #96]
    1124:	mov	x0, xzr
    1128:	bl	8d0 <dcgettext@plt>
    112c:	ldr	w2, [x20, #16]
    1130:	mov	x1, x0
    1134:	mov	x0, x19
    1138:	blr	x21
    113c:	mov	x19, xzr
    1140:	mov	x0, x19
    1144:	ldp	x20, x19, [sp, #32]
    1148:	ldr	x21, [sp, #16]
    114c:	ldp	x29, x30, [sp], #48
    1150:	ret

Disassembly of section .fini:

0000000000001154 <.fini>:
    1154:	stp	x29, x30, [sp, #-16]!
    1158:	mov	x29, sp
    115c:	ldp	x29, x30, [sp], #16
    1160:	ret
