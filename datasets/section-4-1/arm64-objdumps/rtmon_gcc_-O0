
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404ca0 <.init>:
  404ca0:	stp	x29, x30, [sp, #-16]!
  404ca4:	mov	x29, sp
  404ca8:	bl	4052d0 <_start@@Base+0x50>
  404cac:	ldp	x29, x30, [sp], #16
  404cb0:	ret

Disassembly of section .plt:

0000000000404cc0 <memcpy@plt-0x20>:
  404cc0:	stp	x16, x30, [sp, #-16]!
  404cc4:	adrp	x16, 424000 <_IO_stdin_used@@Base+0x13470>
  404cc8:	ldr	x17, [x16, #4088]
  404ccc:	add	x16, x16, #0xff8
  404cd0:	br	x17
  404cd4:	nop
  404cd8:	nop
  404cdc:	nop

0000000000404ce0 <memcpy@plt>:
  404ce0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16]
  404ce8:	add	x16, x16, #0x0
  404cec:	br	x17

0000000000404cf0 <recvmsg@plt>:
  404cf0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #8]
  404cf8:	add	x16, x16, #0x8
  404cfc:	br	x17

0000000000404d00 <strtoul@plt>:
  404d00:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #16]
  404d08:	add	x16, x16, #0x10
  404d0c:	br	x17

0000000000404d10 <strlen@plt>:
  404d10:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #24]
  404d18:	add	x16, x16, #0x18
  404d1c:	br	x17

0000000000404d20 <exit@plt>:
  404d20:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #32]
  404d28:	add	x16, x16, #0x20
  404d2c:	br	x17

0000000000404d30 <perror@plt>:
  404d30:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #40]
  404d38:	add	x16, x16, #0x28
  404d3c:	br	x17

0000000000404d40 <__cmsg_nxthdr@plt>:
  404d40:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #48]
  404d48:	add	x16, x16, #0x30
  404d4c:	br	x17

0000000000404d50 <htonl@plt>:
  404d50:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #56]
  404d58:	add	x16, x16, #0x38
  404d5c:	br	x17

0000000000404d60 <strtoll@plt>:
  404d60:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #64]
  404d68:	add	x16, x16, #0x40
  404d6c:	br	x17

0000000000404d70 <strtod@plt>:
  404d70:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #72]
  404d78:	add	x16, x16, #0x48
  404d7c:	br	x17

0000000000404d80 <geteuid@plt>:
  404d80:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #80]
  404d88:	add	x16, x16, #0x50
  404d8c:	br	x17

0000000000404d90 <sethostent@plt>:
  404d90:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #88]
  404d98:	add	x16, x16, #0x58
  404d9c:	br	x17

0000000000404da0 <bind@plt>:
  404da0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #96]
  404da8:	add	x16, x16, #0x60
  404dac:	br	x17

0000000000404db0 <ntohl@plt>:
  404db0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #104]
  404db8:	add	x16, x16, #0x68
  404dbc:	br	x17

0000000000404dc0 <ftell@plt>:
  404dc0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #112]
  404dc8:	add	x16, x16, #0x70
  404dcc:	br	x17

0000000000404dd0 <sprintf@plt>:
  404dd0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #120]
  404dd8:	add	x16, x16, #0x78
  404ddc:	br	x17

0000000000404de0 <getuid@plt>:
  404de0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #128]
  404de8:	add	x16, x16, #0x80
  404dec:	br	x17

0000000000404df0 <putc@plt>:
  404df0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #136]
  404df8:	add	x16, x16, #0x88
  404dfc:	br	x17

0000000000404e00 <strftime@plt>:
  404e00:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #144]
  404e08:	add	x16, x16, #0x90
  404e0c:	br	x17

0000000000404e10 <fputc@plt>:
  404e10:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #152]
  404e18:	add	x16, x16, #0x98
  404e1c:	br	x17

0000000000404e20 <snprintf@plt>:
  404e20:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #160]
  404e28:	add	x16, x16, #0xa0
  404e2c:	br	x17

0000000000404e30 <fileno@plt>:
  404e30:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #168]
  404e38:	add	x16, x16, #0xa8
  404e3c:	br	x17

0000000000404e40 <localtime@plt>:
  404e40:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #176]
  404e48:	add	x16, x16, #0xb0
  404e4c:	br	x17

0000000000404e50 <fclose@plt>:
  404e50:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #184]
  404e58:	add	x16, x16, #0xb8
  404e5c:	br	x17

0000000000404e60 <atoi@plt>:
  404e60:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #192]
  404e68:	add	x16, x16, #0xc0
  404e6c:	br	x17

0000000000404e70 <time@plt>:
  404e70:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #200]
  404e78:	add	x16, x16, #0xc8
  404e7c:	br	x17

0000000000404e80 <ntohs@plt>:
  404e80:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #208]
  404e88:	add	x16, x16, #0xd0
  404e8c:	br	x17

0000000000404e90 <malloc@plt>:
  404e90:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #216]
  404e98:	add	x16, x16, #0xd8
  404e9c:	br	x17

0000000000404ea0 <setsockopt@plt>:
  404ea0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #224]
  404ea8:	add	x16, x16, #0xe0
  404eac:	br	x17

0000000000404eb0 <__isoc99_fscanf@plt>:
  404eb0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #232]
  404eb8:	add	x16, x16, #0xe8
  404ebc:	br	x17

0000000000404ec0 <__libc_start_main@plt>:
  404ec0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #240]
  404ec8:	add	x16, x16, #0xf0
  404ecc:	br	x17

0000000000404ed0 <strcat@plt>:
  404ed0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #248]
  404ed8:	add	x16, x16, #0xf8
  404edc:	br	x17

0000000000404ee0 <if_indextoname@plt>:
  404ee0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #256]
  404ee8:	add	x16, x16, #0x100
  404eec:	br	x17

0000000000404ef0 <memset@plt>:
  404ef0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #264]
  404ef8:	add	x16, x16, #0x108
  404efc:	br	x17

0000000000404f00 <gettimeofday@plt>:
  404f00:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #272]
  404f08:	add	x16, x16, #0x110
  404f0c:	br	x17

0000000000404f10 <sendmsg@plt>:
  404f10:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #280]
  404f18:	add	x16, x16, #0x118
  404f1c:	br	x17

0000000000404f20 <cap_get_flag@plt>:
  404f20:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #288]
  404f28:	add	x16, x16, #0x120
  404f2c:	br	x17

0000000000404f30 <strcasecmp@plt>:
  404f30:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #296]
  404f38:	add	x16, x16, #0x128
  404f3c:	br	x17

0000000000404f40 <realloc@plt>:
  404f40:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #304]
  404f48:	add	x16, x16, #0x130
  404f4c:	br	x17

0000000000404f50 <htons@plt>:
  404f50:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #312]
  404f58:	add	x16, x16, #0x138
  404f5c:	br	x17

0000000000404f60 <cap_set_proc@plt>:
  404f60:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #320]
  404f68:	add	x16, x16, #0x140
  404f6c:	br	x17

0000000000404f70 <strdup@plt>:
  404f70:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #328]
  404f78:	add	x16, x16, #0x148
  404f7c:	br	x17

0000000000404f80 <strerror@plt>:
  404f80:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #336]
  404f88:	add	x16, x16, #0x150
  404f8c:	br	x17

0000000000404f90 <close@plt>:
  404f90:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #344]
  404f98:	add	x16, x16, #0x158
  404f9c:	br	x17

0000000000404fa0 <strrchr@plt>:
  404fa0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #352]
  404fa8:	add	x16, x16, #0x160
  404fac:	br	x17

0000000000404fb0 <recv@plt>:
  404fb0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #360]
  404fb8:	add	x16, x16, #0x168
  404fbc:	br	x17

0000000000404fc0 <__gmon_start__@plt>:
  404fc0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #368]
  404fc8:	add	x16, x16, #0x170
  404fcc:	br	x17

0000000000404fd0 <abort@plt>:
  404fd0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #376]
  404fd8:	add	x16, x16, #0x178
  404fdc:	br	x17

0000000000404fe0 <feof@plt>:
  404fe0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #384]
  404fe8:	add	x16, x16, #0x180
  404fec:	br	x17

0000000000404ff0 <memcmp@plt>:
  404ff0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #392]
  404ff8:	add	x16, x16, #0x188
  404ffc:	br	x17

0000000000405000 <strcmp@plt>:
  405000:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #400]
  405008:	add	x16, x16, #0x190
  40500c:	br	x17

0000000000405010 <__ctype_b_loc@plt>:
  405010:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #408]
  405018:	add	x16, x16, #0x198
  40501c:	br	x17

0000000000405020 <strtol@plt>:
  405020:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #416]
  405028:	add	x16, x16, #0x1a0
  40502c:	br	x17

0000000000405030 <cap_get_proc@plt>:
  405030:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #424]
  405038:	add	x16, x16, #0x1a8
  40503c:	br	x17

0000000000405040 <fread@plt>:
  405040:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #432]
  405048:	add	x16, x16, #0x1b0
  40504c:	br	x17

0000000000405050 <getline@plt>:
  405050:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #440]
  405058:	add	x16, x16, #0x1b8
  40505c:	br	x17

0000000000405060 <gethostbyaddr@plt>:
  405060:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405064:	ldr	x17, [x16, #448]
  405068:	add	x16, x16, #0x1c0
  40506c:	br	x17

0000000000405070 <free@plt>:
  405070:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405074:	ldr	x17, [x16, #456]
  405078:	add	x16, x16, #0x1c8
  40507c:	br	x17

0000000000405080 <inet_pton@plt>:
  405080:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405084:	ldr	x17, [x16, #464]
  405088:	add	x16, x16, #0x1d0
  40508c:	br	x17

0000000000405090 <send@plt>:
  405090:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405094:	ldr	x17, [x16, #472]
  405098:	add	x16, x16, #0x1d8
  40509c:	br	x17

00000000004050a0 <strspn@plt>:
  4050a0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4050a4:	ldr	x17, [x16, #480]
  4050a8:	add	x16, x16, #0x1e0
  4050ac:	br	x17

00000000004050b0 <strchr@plt>:
  4050b0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4050b4:	ldr	x17, [x16, #488]
  4050b8:	add	x16, x16, #0x1e8
  4050bc:	br	x17

00000000004050c0 <strtoull@plt>:
  4050c0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4050c4:	ldr	x17, [x16, #496]
  4050c8:	add	x16, x16, #0x1f0
  4050cc:	br	x17

00000000004050d0 <fwrite@plt>:
  4050d0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4050d4:	ldr	x17, [x16, #504]
  4050d8:	add	x16, x16, #0x1f8
  4050dc:	br	x17

00000000004050e0 <socket@plt>:
  4050e0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4050e4:	ldr	x17, [x16, #512]
  4050e8:	add	x16, x16, #0x200
  4050ec:	br	x17

00000000004050f0 <fflush@plt>:
  4050f0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4050f4:	ldr	x17, [x16, #520]
  4050f8:	add	x16, x16, #0x208
  4050fc:	br	x17

0000000000405100 <strcpy@plt>:
  405100:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405104:	ldr	x17, [x16, #528]
  405108:	add	x16, x16, #0x210
  40510c:	br	x17

0000000000405110 <fopen64@plt>:
  405110:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405114:	ldr	x17, [x16, #536]
  405118:	add	x16, x16, #0x218
  40511c:	br	x17

0000000000405120 <cap_clear@plt>:
  405120:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405124:	ldr	x17, [x16, #544]
  405128:	add	x16, x16, #0x220
  40512c:	br	x17

0000000000405130 <isatty@plt>:
  405130:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405134:	ldr	x17, [x16, #552]
  405138:	add	x16, x16, #0x228
  40513c:	br	x17

0000000000405140 <sysconf@plt>:
  405140:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405144:	ldr	x17, [x16, #560]
  405148:	add	x16, x16, #0x230
  40514c:	br	x17

0000000000405150 <asctime@plt>:
  405150:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405154:	ldr	x17, [x16, #568]
  405158:	add	x16, x16, #0x238
  40515c:	br	x17

0000000000405160 <cap_free@plt>:
  405160:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405164:	ldr	x17, [x16, #576]
  405168:	add	x16, x16, #0x240
  40516c:	br	x17

0000000000405170 <if_nametoindex@plt>:
  405170:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405174:	ldr	x17, [x16, #584]
  405178:	add	x16, x16, #0x248
  40517c:	br	x17

0000000000405180 <strchrnul@plt>:
  405180:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405184:	ldr	x17, [x16, #592]
  405188:	add	x16, x16, #0x250
  40518c:	br	x17

0000000000405190 <strstr@plt>:
  405190:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405194:	ldr	x17, [x16, #600]
  405198:	add	x16, x16, #0x258
  40519c:	br	x17

00000000004051a0 <__isoc99_sscanf@plt>:
  4051a0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4051a4:	ldr	x17, [x16, #608]
  4051a8:	add	x16, x16, #0x260
  4051ac:	br	x17

00000000004051b0 <strncpy@plt>:
  4051b0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4051b4:	ldr	x17, [x16, #616]
  4051b8:	add	x16, x16, #0x268
  4051bc:	br	x17

00000000004051c0 <strcspn@plt>:
  4051c0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4051c4:	ldr	x17, [x16, #624]
  4051c8:	add	x16, x16, #0x270
  4051cc:	br	x17

00000000004051d0 <vfprintf@plt>:
  4051d0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4051d4:	ldr	x17, [x16, #632]
  4051d8:	add	x16, x16, #0x278
  4051dc:	br	x17

00000000004051e0 <printf@plt>:
  4051e0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4051e4:	ldr	x17, [x16, #640]
  4051e8:	add	x16, x16, #0x280
  4051ec:	br	x17

00000000004051f0 <__assert_fail@plt>:
  4051f0:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  4051f4:	ldr	x17, [x16, #648]
  4051f8:	add	x16, x16, #0x288
  4051fc:	br	x17

0000000000405200 <__errno_location@plt>:
  405200:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405204:	ldr	x17, [x16, #656]
  405208:	add	x16, x16, #0x290
  40520c:	br	x17

0000000000405210 <getenv@plt>:
  405210:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405214:	ldr	x17, [x16, #664]
  405218:	add	x16, x16, #0x298
  40521c:	br	x17

0000000000405220 <putchar@plt>:
  405220:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405224:	ldr	x17, [x16, #672]
  405228:	add	x16, x16, #0x2a0
  40522c:	br	x17

0000000000405230 <getsockname@plt>:
  405230:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405234:	ldr	x17, [x16, #680]
  405238:	add	x16, x16, #0x2a8
  40523c:	br	x17

0000000000405240 <fprintf@plt>:
  405240:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405244:	ldr	x17, [x16, #688]
  405248:	add	x16, x16, #0x2b0
  40524c:	br	x17

0000000000405250 <fgets@plt>:
  405250:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405254:	ldr	x17, [x16, #696]
  405258:	add	x16, x16, #0x2b8
  40525c:	br	x17

0000000000405260 <inet_ntop@plt>:
  405260:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405264:	ldr	x17, [x16, #704]
  405268:	add	x16, x16, #0x2c0
  40526c:	br	x17

0000000000405270 <ferror@plt>:
  405270:	adrp	x16, 425000 <memcpy@GLIBC_2.17>
  405274:	ldr	x17, [x16, #712]
  405278:	add	x16, x16, #0x2c8
  40527c:	br	x17

Disassembly of section .text:

0000000000405280 <_start@@Base>:
  405280:	mov	x29, #0x0                   	// #0
  405284:	mov	x30, #0x0                   	// #0
  405288:	mov	x5, x0
  40528c:	ldr	x1, [sp]
  405290:	add	x2, sp, #0x8
  405294:	mov	x6, sp
  405298:	movz	x0, #0x0, lsl #48
  40529c:	movk	x0, #0x0, lsl #32
  4052a0:	movk	x0, #0x40, lsl #16
  4052a4:	movk	x0, #0x5628
  4052a8:	movz	x3, #0x0, lsl #48
  4052ac:	movk	x3, #0x0, lsl #32
  4052b0:	movk	x3, #0x41, lsl #16
  4052b4:	movk	x3, #0xaf8
  4052b8:	movz	x4, #0x0, lsl #48
  4052bc:	movk	x4, #0x0, lsl #32
  4052c0:	movk	x4, #0x41, lsl #16
  4052c4:	movk	x4, #0xb78
  4052c8:	bl	404ec0 <__libc_start_main@plt>
  4052cc:	bl	404fd0 <abort@plt>
  4052d0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4052d4:	ldr	x0, [x0, #4040]
  4052d8:	cbz	x0, 4052e0 <_start@@Base+0x60>
  4052dc:	b	404fc0 <__gmon_start__@plt>
  4052e0:	ret
  4052e4:	stp	x29, x30, [sp, #-32]!
  4052e8:	mov	x29, sp
  4052ec:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  4052f0:	add	x0, x0, #0x330
  4052f4:	str	x0, [sp, #24]
  4052f8:	ldr	x0, [sp, #24]
  4052fc:	str	x0, [sp, #24]
  405300:	ldr	x1, [sp, #24]
  405304:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405308:	add	x0, x0, #0x330
  40530c:	cmp	x1, x0
  405310:	b.eq	40534c <_start@@Base+0xcc>  // b.none
  405314:	adrp	x0, 410000 <addattrstrz@@Base>
  405318:	add	x0, x0, #0xb98
  40531c:	ldr	x0, [x0]
  405320:	str	x0, [sp, #16]
  405324:	ldr	x0, [sp, #16]
  405328:	str	x0, [sp, #16]
  40532c:	ldr	x0, [sp, #16]
  405330:	cmp	x0, #0x0
  405334:	b.eq	405350 <_start@@Base+0xd0>  // b.none
  405338:	ldr	x1, [sp, #16]
  40533c:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405340:	add	x0, x0, #0x330
  405344:	blr	x1
  405348:	b	405350 <_start@@Base+0xd0>
  40534c:	nop
  405350:	ldp	x29, x30, [sp], #32
  405354:	ret
  405358:	stp	x29, x30, [sp, #-48]!
  40535c:	mov	x29, sp
  405360:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405364:	add	x0, x0, #0x330
  405368:	str	x0, [sp, #40]
  40536c:	ldr	x0, [sp, #40]
  405370:	str	x0, [sp, #40]
  405374:	ldr	x1, [sp, #40]
  405378:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  40537c:	add	x0, x0, #0x330
  405380:	sub	x0, x1, x0
  405384:	asr	x0, x0, #3
  405388:	lsr	x1, x0, #63
  40538c:	add	x0, x1, x0
  405390:	asr	x0, x0, #1
  405394:	str	x0, [sp, #32]
  405398:	ldr	x0, [sp, #32]
  40539c:	cmp	x0, #0x0
  4053a0:	b.eq	4053e0 <_start@@Base+0x160>  // b.none
  4053a4:	adrp	x0, 410000 <addattrstrz@@Base>
  4053a8:	add	x0, x0, #0xba0
  4053ac:	ldr	x0, [x0]
  4053b0:	str	x0, [sp, #24]
  4053b4:	ldr	x0, [sp, #24]
  4053b8:	str	x0, [sp, #24]
  4053bc:	ldr	x0, [sp, #24]
  4053c0:	cmp	x0, #0x0
  4053c4:	b.eq	4053e4 <_start@@Base+0x164>  // b.none
  4053c8:	ldr	x2, [sp, #24]
  4053cc:	ldr	x1, [sp, #32]
  4053d0:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  4053d4:	add	x0, x0, #0x330
  4053d8:	blr	x2
  4053dc:	b	4053e4 <_start@@Base+0x164>
  4053e0:	nop
  4053e4:	ldp	x29, x30, [sp], #48
  4053e8:	ret
  4053ec:	stp	x29, x30, [sp, #-16]!
  4053f0:	mov	x29, sp
  4053f4:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  4053f8:	add	x0, x0, #0x338
  4053fc:	ldrb	w0, [x0]
  405400:	and	x0, x0, #0xff
  405404:	cmp	x0, #0x0
  405408:	b.ne	405424 <_start@@Base+0x1a4>  // b.any
  40540c:	bl	4052e4 <_start@@Base+0x64>
  405410:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405414:	add	x0, x0, #0x338
  405418:	mov	w1, #0x1                   	// #1
  40541c:	strb	w1, [x0]
  405420:	b	405428 <_start@@Base+0x1a8>
  405424:	nop
  405428:	ldp	x29, x30, [sp], #16
  40542c:	ret
  405430:	stp	x29, x30, [sp, #-16]!
  405434:	mov	x29, sp
  405438:	bl	405358 <_start@@Base+0xd8>
  40543c:	nop
  405440:	ldp	x29, x30, [sp], #16
  405444:	ret
  405448:	stp	x29, x30, [sp, #-32]!
  40544c:	mov	x29, sp
  405450:	str	w0, [sp, #28]
  405454:	ldr	w0, [sp, #28]
  405458:	cmp	w0, #0x1f
  40545c:	b.ls	405488 <_start@@Base+0x208>  // b.plast
  405460:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405464:	add	x0, x0, #0x330
  405468:	ldr	x3, [x0]
  40546c:	ldr	w2, [sp, #28]
  405470:	adrp	x0, 410000 <addattrstrz@@Base>
  405474:	add	x1, x0, #0xbb0
  405478:	mov	x0, x3
  40547c:	bl	405240 <fprintf@plt>
  405480:	mov	w0, #0xffffffff            	// #-1
  405484:	bl	404d20 <exit@plt>
  405488:	ldr	w0, [sp, #28]
  40548c:	cmp	w0, #0x0
  405490:	b.eq	4054a8 <_start@@Base+0x228>  // b.none
  405494:	ldr	w0, [sp, #28]
  405498:	sub	w0, w0, #0x1
  40549c:	mov	w1, #0x1                   	// #1
  4054a0:	lsl	w0, w1, w0
  4054a4:	b	4054ac <_start@@Base+0x22c>
  4054a8:	mov	w0, #0x0                   	// #0
  4054ac:	ldp	x29, x30, [sp], #32
  4054b0:	ret
  4054b4:	stp	x29, x30, [sp, #-192]!
  4054b8:	mov	x29, sp
  4054bc:	str	x0, [sp, #24]
  4054c0:	add	x0, sp, #0x38
  4054c4:	str	x0, [sp, #184]
  4054c8:	ldr	x0, [sp, #184]
  4054cc:	mov	w1, #0xf                   	// #15
  4054d0:	strh	w1, [x0, #4]
  4054d4:	ldr	x0, [sp, #184]
  4054d8:	strh	wzr, [x0, #6]
  4054dc:	ldr	x0, [sp, #184]
  4054e0:	str	wzr, [x0, #8]
  4054e4:	ldr	x0, [sp, #184]
  4054e8:	str	wzr, [x0, #12]
  4054ec:	ldr	x0, [sp, #184]
  4054f0:	mov	w1, #0x18                  	// #24
  4054f4:	str	w1, [x0]
  4054f8:	add	x0, sp, #0x28
  4054fc:	mov	x1, #0x0                   	// #0
  405500:	bl	404f00 <gettimeofday@plt>
  405504:	ldr	x1, [sp, #40]
  405508:	ldr	x0, [sp, #184]
  40550c:	add	x0, x0, #0x10
  405510:	str	w1, [x0]
  405514:	ldr	x1, [sp, #48]
  405518:	ldr	x0, [sp, #184]
  40551c:	add	x0, x0, #0x14
  405520:	str	w1, [x0]
  405524:	ldr	x0, [sp, #184]
  405528:	ldr	w0, [x0]
  40552c:	add	w0, w0, #0x3
  405530:	mov	w0, w0
  405534:	and	x0, x0, #0xfffffffc
  405538:	ldr	x3, [sp, #24]
  40553c:	mov	x2, x0
  405540:	mov	x1, #0x1                   	// #1
  405544:	ldr	x0, [sp, #184]
  405548:	bl	4050d0 <fwrite@plt>
  40554c:	nop
  405550:	ldp	x29, x30, [sp], #192
  405554:	ret
  405558:	stp	x29, x30, [sp, #-64]!
  40555c:	mov	x29, sp
  405560:	str	x0, [sp, #40]
  405564:	str	x1, [sp, #32]
  405568:	str	x2, [sp, #24]
  40556c:	ldr	x0, [sp, #24]
  405570:	str	x0, [sp, #56]
  405574:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405578:	add	x0, x0, #0x2e0
  40557c:	ldr	w0, [x0]
  405580:	cmp	w0, #0x0
  405584:	b.ne	405590 <_start@@Base+0x310>  // b.any
  405588:	ldr	x0, [sp, #56]
  40558c:	bl	4054b4 <_start@@Base+0x234>
  405590:	ldr	x0, [sp, #32]
  405594:	ldr	w0, [x0]
  405598:	add	w0, w0, #0x3
  40559c:	mov	w0, w0
  4055a0:	and	x0, x0, #0xfffffffc
  4055a4:	ldr	x3, [sp, #56]
  4055a8:	mov	x2, x0
  4055ac:	mov	x1, #0x1                   	// #1
  4055b0:	ldr	x0, [sp, #32]
  4055b4:	bl	4050d0 <fwrite@plt>
  4055b8:	ldr	x0, [sp, #56]
  4055bc:	bl	4050f0 <fflush@plt>
  4055c0:	mov	w0, #0x0                   	// #0
  4055c4:	ldp	x29, x30, [sp], #64
  4055c8:	ret
  4055cc:	stp	x29, x30, [sp, #-32]!
  4055d0:	mov	x29, sp
  4055d4:	str	x0, [sp, #24]
  4055d8:	str	x1, [sp, #16]
  4055dc:	ldr	x2, [sp, #16]
  4055e0:	ldr	x1, [sp, #24]
  4055e4:	mov	x0, #0x0                   	// #0
  4055e8:	bl	405558 <_start@@Base+0x2d8>
  4055ec:	ldp	x29, x30, [sp], #32
  4055f0:	ret
  4055f4:	stp	x29, x30, [sp, #-16]!
  4055f8:	mov	x29, sp
  4055fc:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405600:	add	x0, x0, #0x330
  405604:	ldr	x0, [x0]
  405608:	mov	x3, x0
  40560c:	mov	x2, #0xc5                  	// #197
  405610:	mov	x1, #0x1                   	// #1
  405614:	adrp	x0, 410000 <addattrstrz@@Base>
  405618:	add	x0, x0, #0xbd8
  40561c:	bl	4050d0 <fwrite@plt>
  405620:	mov	w0, #0xffffffff            	// #-1
  405624:	bl	404d20 <exit@plt>

0000000000405628 <main@@Base>:
  405628:	stp	x29, x30, [sp, #-128]!
  40562c:	mov	x29, sp
  405630:	str	w0, [sp, #28]
  405634:	str	x1, [sp, #16]
  405638:	str	wzr, [sp, #124]
  40563c:	mov	w0, #0xffffffff            	// #-1
  405640:	str	w0, [sp, #120]
  405644:	str	wzr, [sp, #116]
  405648:	str	wzr, [sp, #112]
  40564c:	str	wzr, [sp, #108]
  405650:	str	xzr, [sp, #96]
  405654:	b	405a58 <main@@Base+0x430>
  405658:	ldr	x0, [sp, #16]
  40565c:	add	x0, x0, #0x8
  405660:	ldr	x2, [x0]
  405664:	adrp	x0, 410000 <addattrstrz@@Base>
  405668:	add	x1, x0, #0xca0
  40566c:	mov	x0, x2
  405670:	bl	407bb8 <matches@@Base>
  405674:	and	w0, w0, #0xff
  405678:	eor	w0, w0, #0x1
  40567c:	and	w0, w0, #0xff
  405680:	cmp	w0, #0x0
  405684:	b.eq	4057a0 <main@@Base+0x178>  // b.none
  405688:	ldr	w0, [sp, #28]
  40568c:	sub	w0, w0, #0x1
  405690:	str	w0, [sp, #28]
  405694:	ldr	x0, [sp, #16]
  405698:	add	x0, x0, #0x8
  40569c:	str	x0, [sp, #16]
  4056a0:	ldr	w0, [sp, #28]
  4056a4:	cmp	w0, #0x1
  4056a8:	b.gt	4056b0 <main@@Base+0x88>
  4056ac:	bl	4055f4 <_start@@Base+0x374>
  4056b0:	ldr	x0, [sp, #16]
  4056b4:	add	x0, x0, #0x8
  4056b8:	ldr	x2, [x0]
  4056bc:	adrp	x0, 410000 <addattrstrz@@Base>
  4056c0:	add	x1, x0, #0xca8
  4056c4:	mov	x0, x2
  4056c8:	bl	405000 <strcmp@plt>
  4056cc:	cmp	w0, #0x0
  4056d0:	b.ne	4056e0 <main@@Base+0xb8>  // b.any
  4056d4:	mov	w0, #0x2                   	// #2
  4056d8:	str	w0, [sp, #124]
  4056dc:	b	405a40 <main@@Base+0x418>
  4056e0:	ldr	x0, [sp, #16]
  4056e4:	add	x0, x0, #0x8
  4056e8:	ldr	x2, [x0]
  4056ec:	adrp	x0, 410000 <addattrstrz@@Base>
  4056f0:	add	x1, x0, #0xcb0
  4056f4:	mov	x0, x2
  4056f8:	bl	405000 <strcmp@plt>
  4056fc:	cmp	w0, #0x0
  405700:	b.ne	405710 <main@@Base+0xe8>  // b.any
  405704:	mov	w0, #0xa                   	// #10
  405708:	str	w0, [sp, #124]
  40570c:	b	405a40 <main@@Base+0x418>
  405710:	ldr	x0, [sp, #16]
  405714:	add	x0, x0, #0x8
  405718:	ldr	x2, [x0]
  40571c:	adrp	x0, 410000 <addattrstrz@@Base>
  405720:	add	x1, x0, #0xcb8
  405724:	mov	x0, x2
  405728:	bl	405000 <strcmp@plt>
  40572c:	cmp	w0, #0x0
  405730:	b.ne	405740 <main@@Base+0x118>  // b.any
  405734:	mov	w0, #0xa                   	// #10
  405738:	str	w0, [sp, #124]
  40573c:	b	405a40 <main@@Base+0x418>
  405740:	ldr	x0, [sp, #16]
  405744:	add	x0, x0, #0x8
  405748:	ldr	x2, [x0]
  40574c:	adrp	x0, 410000 <addattrstrz@@Base>
  405750:	add	x1, x0, #0xcc0
  405754:	mov	x0, x2
  405758:	bl	405000 <strcmp@plt>
  40575c:	cmp	w0, #0x0
  405760:	b.ne	40576c <main@@Base+0x144>  // b.any
  405764:	bl	4055f4 <_start@@Base+0x374>
  405768:	b	405a40 <main@@Base+0x418>
  40576c:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405770:	add	x0, x0, #0x330
  405774:	ldr	x3, [x0]
  405778:	ldr	x0, [sp, #16]
  40577c:	add	x0, x0, #0x8
  405780:	ldr	x0, [x0]
  405784:	mov	x2, x0
  405788:	adrp	x0, 410000 <addattrstrz@@Base>
  40578c:	add	x1, x0, #0xcc8
  405790:	mov	x0, x3
  405794:	bl	405240 <fprintf@plt>
  405798:	mov	w0, #0xffffffff            	// #-1
  40579c:	bl	404d20 <exit@plt>
  4057a0:	ldr	x0, [sp, #16]
  4057a4:	add	x0, x0, #0x8
  4057a8:	ldr	x2, [x0]
  4057ac:	adrp	x0, 410000 <addattrstrz@@Base>
  4057b0:	add	x1, x0, #0xcf8
  4057b4:	mov	x0, x2
  4057b8:	bl	405000 <strcmp@plt>
  4057bc:	cmp	w0, #0x0
  4057c0:	b.ne	4057d0 <main@@Base+0x1a8>  // b.any
  4057c4:	mov	w0, #0x2                   	// #2
  4057c8:	str	w0, [sp, #124]
  4057cc:	b	405a40 <main@@Base+0x418>
  4057d0:	ldr	x0, [sp, #16]
  4057d4:	add	x0, x0, #0x8
  4057d8:	ldr	x2, [x0]
  4057dc:	adrp	x0, 410000 <addattrstrz@@Base>
  4057e0:	add	x1, x0, #0xd00
  4057e4:	mov	x0, x2
  4057e8:	bl	405000 <strcmp@plt>
  4057ec:	cmp	w0, #0x0
  4057f0:	b.ne	405800 <main@@Base+0x1d8>  // b.any
  4057f4:	mov	w0, #0xa                   	// #10
  4057f8:	str	w0, [sp, #124]
  4057fc:	b	405a40 <main@@Base+0x418>
  405800:	ldr	x0, [sp, #16]
  405804:	add	x0, x0, #0x8
  405808:	ldr	x2, [x0]
  40580c:	adrp	x0, 410000 <addattrstrz@@Base>
  405810:	add	x1, x0, #0xd08
  405814:	mov	x0, x2
  405818:	bl	405000 <strcmp@plt>
  40581c:	cmp	w0, #0x0
  405820:	b.ne	405830 <main@@Base+0x208>  // b.any
  405824:	mov	w0, #0x11                  	// #17
  405828:	str	w0, [sp, #124]
  40582c:	b	405a40 <main@@Base+0x418>
  405830:	ldr	x0, [sp, #16]
  405834:	add	x0, x0, #0x8
  405838:	ldr	x2, [x0]
  40583c:	adrp	x0, 410000 <addattrstrz@@Base>
  405840:	add	x1, x0, #0xd10
  405844:	mov	x0, x2
  405848:	bl	407bb8 <matches@@Base>
  40584c:	and	w0, w0, #0xff
  405850:	eor	w0, w0, #0x1
  405854:	and	w0, w0, #0xff
  405858:	cmp	w0, #0x0
  40585c:	b.eq	40587c <main@@Base+0x254>  // b.none
  405860:	adrp	x0, 410000 <addattrstrz@@Base>
  405864:	add	x1, x0, #0xba8
  405868:	adrp	x0, 410000 <addattrstrz@@Base>
  40586c:	add	x0, x0, #0xd20
  405870:	bl	4051e0 <printf@plt>
  405874:	mov	w0, #0x0                   	// #0
  405878:	bl	404d20 <exit@plt>
  40587c:	ldr	x0, [sp, #16]
  405880:	add	x0, x0, #0x8
  405884:	ldr	x2, [x0]
  405888:	adrp	x0, 410000 <addattrstrz@@Base>
  40588c:	add	x1, x0, #0xd40
  405890:	mov	x0, x2
  405894:	bl	407bb8 <matches@@Base>
  405898:	and	w0, w0, #0xff
  40589c:	eor	w0, w0, #0x1
  4058a0:	and	w0, w0, #0xff
  4058a4:	cmp	w0, #0x0
  4058a8:	b.eq	4058e4 <main@@Base+0x2bc>  // b.none
  4058ac:	ldr	w0, [sp, #28]
  4058b0:	sub	w0, w0, #0x1
  4058b4:	str	w0, [sp, #28]
  4058b8:	ldr	x0, [sp, #16]
  4058bc:	add	x0, x0, #0x8
  4058c0:	str	x0, [sp, #16]
  4058c4:	ldr	w0, [sp, #28]
  4058c8:	cmp	w0, #0x1
  4058cc:	b.gt	4058d4 <main@@Base+0x2ac>
  4058d0:	bl	4055f4 <_start@@Base+0x374>
  4058d4:	ldr	x0, [sp, #16]
  4058d8:	ldr	x0, [x0, #8]
  4058dc:	str	x0, [sp, #96]
  4058e0:	b	405a40 <main@@Base+0x418>
  4058e4:	ldr	x0, [sp, #16]
  4058e8:	add	x0, x0, #0x8
  4058ec:	ldr	x2, [x0]
  4058f0:	adrp	x0, 410000 <addattrstrz@@Base>
  4058f4:	add	x1, x0, #0xcb8
  4058f8:	mov	x0, x2
  4058fc:	bl	407bb8 <matches@@Base>
  405900:	and	w0, w0, #0xff
  405904:	eor	w0, w0, #0x1
  405908:	and	w0, w0, #0xff
  40590c:	cmp	w0, #0x0
  405910:	b.eq	405924 <main@@Base+0x2fc>  // b.none
  405914:	mov	w0, #0x1                   	// #1
  405918:	str	w0, [sp, #116]
  40591c:	str	wzr, [sp, #120]
  405920:	b	405a40 <main@@Base+0x418>
  405924:	ldr	x0, [sp, #16]
  405928:	add	x0, x0, #0x8
  40592c:	ldr	x2, [x0]
  405930:	adrp	x0, 410000 <addattrstrz@@Base>
  405934:	add	x1, x0, #0xd48
  405938:	mov	x0, x2
  40593c:	bl	407bb8 <matches@@Base>
  405940:	and	w0, w0, #0xff
  405944:	eor	w0, w0, #0x1
  405948:	and	w0, w0, #0xff
  40594c:	cmp	w0, #0x0
  405950:	b.eq	405964 <main@@Base+0x33c>  // b.none
  405954:	mov	w0, #0x1                   	// #1
  405958:	str	w0, [sp, #112]
  40595c:	str	wzr, [sp, #120]
  405960:	b	405a40 <main@@Base+0x418>
  405964:	ldr	x0, [sp, #16]
  405968:	add	x0, x0, #0x8
  40596c:	ldr	x2, [x0]
  405970:	adrp	x0, 410000 <addattrstrz@@Base>
  405974:	add	x1, x0, #0xd50
  405978:	mov	x0, x2
  40597c:	bl	407bb8 <matches@@Base>
  405980:	and	w0, w0, #0xff
  405984:	eor	w0, w0, #0x1
  405988:	and	w0, w0, #0xff
  40598c:	cmp	w0, #0x0
  405990:	b.eq	4059a4 <main@@Base+0x37c>  // b.none
  405994:	mov	w0, #0x1                   	// #1
  405998:	str	w0, [sp, #108]
  40599c:	str	wzr, [sp, #120]
  4059a0:	b	405a40 <main@@Base+0x418>
  4059a4:	ldr	x0, [sp, #16]
  4059a8:	add	x0, x0, #0x8
  4059ac:	ldr	x2, [x0]
  4059b0:	adrp	x0, 410000 <addattrstrz@@Base>
  4059b4:	add	x1, x0, #0xd58
  4059b8:	mov	x0, x2
  4059bc:	bl	405000 <strcmp@plt>
  4059c0:	cmp	w0, #0x0
  4059c4:	b.ne	4059d4 <main@@Base+0x3ac>  // b.any
  4059c8:	mov	w0, #0xffffffff            	// #-1
  4059cc:	str	w0, [sp, #120]
  4059d0:	b	405a40 <main@@Base+0x418>
  4059d4:	ldr	x0, [sp, #16]
  4059d8:	add	x0, x0, #0x8
  4059dc:	ldr	x2, [x0]
  4059e0:	adrp	x0, 410000 <addattrstrz@@Base>
  4059e4:	add	x1, x0, #0xcc0
  4059e8:	mov	x0, x2
  4059ec:	bl	407bb8 <matches@@Base>
  4059f0:	and	w0, w0, #0xff
  4059f4:	eor	w0, w0, #0x1
  4059f8:	and	w0, w0, #0xff
  4059fc:	cmp	w0, #0x0
  405a00:	b.eq	405a0c <main@@Base+0x3e4>  // b.none
  405a04:	bl	4055f4 <_start@@Base+0x374>
  405a08:	b	405a40 <main@@Base+0x418>
  405a0c:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405a10:	add	x0, x0, #0x330
  405a14:	ldr	x3, [x0]
  405a18:	ldr	x0, [sp, #16]
  405a1c:	add	x0, x0, #0x8
  405a20:	ldr	x0, [x0]
  405a24:	mov	x2, x0
  405a28:	adrp	x0, 410000 <addattrstrz@@Base>
  405a2c:	add	x1, x0, #0xd60
  405a30:	mov	x0, x3
  405a34:	bl	405240 <fprintf@plt>
  405a38:	mov	w0, #0xffffffff            	// #-1
  405a3c:	bl	404d20 <exit@plt>
  405a40:	ldr	w0, [sp, #28]
  405a44:	sub	w0, w0, #0x1
  405a48:	str	w0, [sp, #28]
  405a4c:	ldr	x0, [sp, #16]
  405a50:	add	x0, x0, #0x8
  405a54:	str	x0, [sp, #16]
  405a58:	ldr	w0, [sp, #28]
  405a5c:	cmp	w0, #0x1
  405a60:	b.gt	405658 <main@@Base+0x30>
  405a64:	ldr	x0, [sp, #96]
  405a68:	cmp	x0, #0x0
  405a6c:	b.ne	405a9c <main@@Base+0x474>  // b.any
  405a70:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405a74:	add	x0, x0, #0x330
  405a78:	ldr	x0, [x0]
  405a7c:	mov	x3, x0
  405a80:	mov	x2, #0x34                  	// #52
  405a84:	mov	x1, #0x1                   	// #1
  405a88:	adrp	x0, 410000 <addattrstrz@@Base>
  405a8c:	add	x0, x0, #0xd90
  405a90:	bl	4050d0 <fwrite@plt>
  405a94:	mov	w0, #0xffffffff            	// #-1
  405a98:	bl	404d20 <exit@plt>
  405a9c:	ldr	w0, [sp, #116]
  405aa0:	cmp	w0, #0x0
  405aa4:	b.eq	405ac0 <main@@Base+0x498>  // b.none
  405aa8:	mov	w0, #0x1                   	// #1
  405aac:	bl	405448 <_start@@Base+0x1c8>
  405ab0:	mov	w1, w0
  405ab4:	ldr	w0, [sp, #120]
  405ab8:	orr	w0, w0, w1
  405abc:	str	w0, [sp, #120]
  405ac0:	ldr	w0, [sp, #112]
  405ac4:	cmp	w0, #0x0
  405ac8:	b.eq	405b2c <main@@Base+0x504>  // b.none
  405acc:	ldr	w0, [sp, #124]
  405ad0:	cmp	w0, #0x0
  405ad4:	b.eq	405ae4 <main@@Base+0x4bc>  // b.none
  405ad8:	ldr	w0, [sp, #124]
  405adc:	cmp	w0, #0x2
  405ae0:	b.ne	405afc <main@@Base+0x4d4>  // b.any
  405ae4:	mov	w0, #0x5                   	// #5
  405ae8:	bl	405448 <_start@@Base+0x1c8>
  405aec:	mov	w1, w0
  405af0:	ldr	w0, [sp, #120]
  405af4:	orr	w0, w0, w1
  405af8:	str	w0, [sp, #120]
  405afc:	ldr	w0, [sp, #124]
  405b00:	cmp	w0, #0x0
  405b04:	b.eq	405b14 <main@@Base+0x4ec>  // b.none
  405b08:	ldr	w0, [sp, #124]
  405b0c:	cmp	w0, #0xa
  405b10:	b.ne	405b2c <main@@Base+0x504>  // b.any
  405b14:	mov	w0, #0x9                   	// #9
  405b18:	bl	405448 <_start@@Base+0x1c8>
  405b1c:	mov	w1, w0
  405b20:	ldr	w0, [sp, #120]
  405b24:	orr	w0, w0, w1
  405b28:	str	w0, [sp, #120]
  405b2c:	ldr	w0, [sp, #108]
  405b30:	cmp	w0, #0x0
  405b34:	b.eq	405b98 <main@@Base+0x570>  // b.none
  405b38:	ldr	w0, [sp, #124]
  405b3c:	cmp	w0, #0x0
  405b40:	b.eq	405b50 <main@@Base+0x528>  // b.none
  405b44:	ldr	w0, [sp, #124]
  405b48:	cmp	w0, #0x2
  405b4c:	b.ne	405b68 <main@@Base+0x540>  // b.any
  405b50:	mov	w0, #0x7                   	// #7
  405b54:	bl	405448 <_start@@Base+0x1c8>
  405b58:	mov	w1, w0
  405b5c:	ldr	w0, [sp, #120]
  405b60:	orr	w0, w0, w1
  405b64:	str	w0, [sp, #120]
  405b68:	ldr	w0, [sp, #124]
  405b6c:	cmp	w0, #0x0
  405b70:	b.eq	405b80 <main@@Base+0x558>  // b.none
  405b74:	ldr	w0, [sp, #124]
  405b78:	cmp	w0, #0xa
  405b7c:	b.ne	405b98 <main@@Base+0x570>  // b.any
  405b80:	mov	w0, #0xb                   	// #11
  405b84:	bl	405448 <_start@@Base+0x1c8>
  405b88:	mov	w1, w0
  405b8c:	ldr	w0, [sp, #120]
  405b90:	orr	w0, w0, w1
  405b94:	str	w0, [sp, #120]
  405b98:	adrp	x0, 410000 <addattrstrz@@Base>
  405b9c:	add	x1, x0, #0xdc8
  405ba0:	ldr	x0, [sp, #96]
  405ba4:	bl	405110 <fopen64@plt>
  405ba8:	str	x0, [sp, #88]
  405bac:	ldr	x0, [sp, #88]
  405bb0:	cmp	x0, #0x0
  405bb4:	b.ne	405bcc <main@@Base+0x5a4>  // b.any
  405bb8:	adrp	x0, 410000 <addattrstrz@@Base>
  405bbc:	add	x0, x0, #0xdd0
  405bc0:	bl	404d30 <perror@plt>
  405bc4:	mov	w0, #0xffffffff            	// #-1
  405bc8:	bl	404d20 <exit@plt>
  405bcc:	add	x0, sp, #0x20
  405bd0:	ldr	w1, [sp, #120]
  405bd4:	bl	40da68 <rtnl_open@@Base>
  405bd8:	cmp	w0, #0x0
  405bdc:	b.ge	405be8 <main@@Base+0x5c0>  // b.tcont
  405be0:	mov	w0, #0x1                   	// #1
  405be4:	bl	404d20 <exit@plt>
  405be8:	add	x0, sp, #0x20
  405bec:	mov	w1, #0x0                   	// #0
  405bf0:	bl	40e244 <rtnl_linkdump_req@@Base>
  405bf4:	cmp	w0, #0x0
  405bf8:	b.ge	405c10 <main@@Base+0x5e8>  // b.tcont
  405bfc:	adrp	x0, 410000 <addattrstrz@@Base>
  405c00:	add	x0, x0, #0xde0
  405c04:	bl	404d30 <perror@plt>
  405c08:	mov	w0, #0x1                   	// #1
  405c0c:	bl	404d20 <exit@plt>
  405c10:	ldr	x0, [sp, #88]
  405c14:	bl	4054b4 <_start@@Base+0x234>
  405c18:	add	x4, sp, #0x20
  405c1c:	mov	w3, #0x0                   	// #0
  405c20:	ldr	x2, [sp, #88]
  405c24:	adrp	x0, 405000 <strcmp@plt>
  405c28:	add	x1, x0, #0x5cc
  405c2c:	mov	x0, x4
  405c30:	bl	40f0ec <rtnl_dump_filter_nc@@Base>
  405c34:	cmp	w0, #0x0
  405c38:	b.ge	405c68 <main@@Base+0x640>  // b.tcont
  405c3c:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405c40:	add	x0, x0, #0x330
  405c44:	ldr	x0, [x0]
  405c48:	mov	x3, x0
  405c4c:	mov	x2, #0x10                  	// #16
  405c50:	mov	x1, #0x1                   	// #1
  405c54:	adrp	x0, 410000 <addattrstrz@@Base>
  405c58:	add	x0, x0, #0xe00
  405c5c:	bl	4050d0 <fwrite@plt>
  405c60:	mov	w0, #0x1                   	// #1
  405c64:	b	405ca4 <main@@Base+0x67c>
  405c68:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  405c6c:	add	x0, x0, #0x2e0
  405c70:	str	wzr, [x0]
  405c74:	add	x3, sp, #0x20
  405c78:	ldr	x2, [sp, #88]
  405c7c:	adrp	x0, 405000 <strcmp@plt>
  405c80:	add	x1, x0, #0x558
  405c84:	mov	x0, x3
  405c88:	bl	40f828 <rtnl_listen@@Base>
  405c8c:	cmp	w0, #0x0
  405c90:	b.ge	405c9c <main@@Base+0x674>  // b.tcont
  405c94:	mov	w0, #0x2                   	// #2
  405c98:	bl	404d20 <exit@plt>
  405c9c:	mov	w0, #0x0                   	// #0
  405ca0:	bl	404d20 <exit@plt>
  405ca4:	ldp	x29, x30, [sp], #128
  405ca8:	ret
  405cac:	sub	sp, sp, #0x10
  405cb0:	str	x0, [sp, #8]
  405cb4:	ldr	x0, [sp, #8]
  405cb8:	ldr	w0, [x0, #4]
  405cbc:	add	sp, sp, #0x10
  405cc0:	ret
  405cc4:	sub	sp, sp, #0x10
  405cc8:	str	x0, [sp, #8]
  405ccc:	ldr	x0, [sp, #8]
  405cd0:	add	x0, x0, #0x4
  405cd4:	add	sp, sp, #0x10
  405cd8:	ret
  405cdc:	stp	x29, x30, [sp, #-48]!
  405ce0:	mov	x29, sp
  405ce4:	str	w0, [sp, #44]
  405ce8:	str	x1, [sp, #32]
  405cec:	str	x2, [sp, #24]
  405cf0:	str	w3, [sp, #40]
  405cf4:	ldr	w4, [sp, #40]
  405cf8:	ldr	x3, [sp, #24]
  405cfc:	ldr	x2, [sp, #32]
  405d00:	mov	w1, #0x6                   	// #6
  405d04:	ldr	w0, [sp, #44]
  405d08:	bl	40b40c <print_color_int@@Base>
  405d0c:	nop
  405d10:	ldp	x29, x30, [sp], #48
  405d14:	ret
  405d18:	stp	x29, x30, [sp, #-48]!
  405d1c:	mov	x29, sp
  405d20:	str	w0, [sp, #44]
  405d24:	str	x1, [sp, #32]
  405d28:	str	x2, [sp, #24]
  405d2c:	str	x3, [sp, #16]
  405d30:	ldr	x4, [sp, #16]
  405d34:	ldr	x3, [sp, #24]
  405d38:	ldr	x2, [sp, #32]
  405d3c:	mov	w1, #0x6                   	// #6
  405d40:	ldr	w0, [sp, #44]
  405d44:	bl	40c160 <print_color_null@@Base>
  405d48:	nop
  405d4c:	ldp	x29, x30, [sp], #48
  405d50:	ret
  405d54:	stp	x29, x30, [sp, #-48]!
  405d58:	mov	x29, sp
  405d5c:	str	w0, [sp, #44]
  405d60:	str	x1, [sp, #32]
  405d64:	str	x2, [sp, #24]
  405d68:	str	x3, [sp, #16]
  405d6c:	ldr	x4, [sp, #16]
  405d70:	ldr	x3, [sp, #24]
  405d74:	ldr	x2, [sp, #32]
  405d78:	mov	w1, #0x6                   	// #6
  405d7c:	ldr	w0, [sp, #44]
  405d80:	bl	40bd24 <print_color_string@@Base>
  405d84:	nop
  405d88:	ldp	x29, x30, [sp], #48
  405d8c:	ret

0000000000405d90 <read_prop@@Base>:
  405d90:	stp	x29, x30, [sp, #-320]!
  405d94:	mov	x29, sp
  405d98:	str	x19, [sp, #16]
  405d9c:	str	x0, [sp, #56]
  405da0:	str	x1, [sp, #48]
  405da4:	str	x2, [sp, #40]
  405da8:	add	x5, sp, #0xa0
  405dac:	ldr	x4, [sp, #48]
  405db0:	ldr	x3, [sp, #56]
  405db4:	adrp	x0, 410000 <addattrstrz@@Base>
  405db8:	add	x2, x0, #0xe20
  405dbc:	mov	x1, #0x80                  	// #128
  405dc0:	mov	x0, x5
  405dc4:	bl	404e20 <snprintf@plt>
  405dc8:	str	w0, [sp, #316]
  405dcc:	ldr	w0, [sp, #316]
  405dd0:	cmp	w0, #0x0
  405dd4:	b.le	405de4 <read_prop@@Base+0x54>
  405dd8:	ldr	w0, [sp, #316]
  405ddc:	cmp	w0, #0x7f
  405de0:	b.ls	405e10 <read_prop@@Base+0x80>  // b.plast
  405de4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  405de8:	ldr	x0, [x0, #3992]
  405dec:	ldr	x0, [x0]
  405df0:	mov	x3, x0
  405df4:	mov	x2, #0x26                  	// #38
  405df8:	mov	x1, #0x1                   	// #1
  405dfc:	adrp	x0, 410000 <addattrstrz@@Base>
  405e00:	add	x0, x0, #0xe38
  405e04:	bl	4050d0 <fwrite@plt>
  405e08:	mov	w0, #0xffffffff            	// #-1
  405e0c:	b	405ff8 <read_prop@@Base+0x268>
  405e10:	add	x2, sp, #0xa0
  405e14:	adrp	x0, 410000 <addattrstrz@@Base>
  405e18:	add	x1, x0, #0xe60
  405e1c:	mov	x0, x2
  405e20:	bl	405110 <fopen64@plt>
  405e24:	str	x0, [sp, #304]
  405e28:	ldr	x0, [sp, #304]
  405e2c:	cmp	x0, #0x0
  405e30:	b.ne	405e74 <read_prop@@Base+0xe4>  // b.any
  405e34:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  405e38:	ldr	x0, [x0, #3992]
  405e3c:	ldr	x19, [x0]
  405e40:	bl	405200 <__errno_location@plt>
  405e44:	ldr	w0, [x0]
  405e48:	bl	404f80 <strerror@plt>
  405e4c:	mov	x1, x0
  405e50:	add	x0, sp, #0xa0
  405e54:	mov	x3, x1
  405e58:	mov	x2, x0
  405e5c:	adrp	x0, 410000 <addattrstrz@@Base>
  405e60:	add	x1, x0, #0xe68
  405e64:	mov	x0, x19
  405e68:	bl	405240 <fprintf@plt>
  405e6c:	mov	w0, #0xffffffff            	// #-1
  405e70:	b	405ff8 <read_prop@@Base+0x268>
  405e74:	add	x0, sp, #0x50
  405e78:	ldr	x2, [sp, #304]
  405e7c:	mov	w1, #0x50                  	// #80
  405e80:	bl	405250 <fgets@plt>
  405e84:	cmp	x0, #0x0
  405e88:	b.ne	405ec0 <read_prop@@Base+0x130>  // b.any
  405e8c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  405e90:	ldr	x0, [x0, #3992]
  405e94:	ldr	x4, [x0]
  405e98:	add	x0, sp, #0xa0
  405e9c:	mov	x3, x0
  405ea0:	ldr	x2, [sp, #48]
  405ea4:	adrp	x0, 410000 <addattrstrz@@Base>
  405ea8:	add	x1, x0, #0xe78
  405eac:	mov	x0, x4
  405eb0:	bl	405240 <fprintf@plt>
  405eb4:	ldr	x0, [sp, #304]
  405eb8:	bl	404e50 <fclose@plt>
  405ebc:	b	405fd0 <read_prop@@Base+0x240>
  405ec0:	add	x0, sp, #0x50
  405ec4:	mov	w1, #0xa                   	// #10
  405ec8:	bl	4050b0 <strchr@plt>
  405ecc:	str	x0, [sp, #296]
  405ed0:	ldr	x0, [sp, #296]
  405ed4:	cmp	x0, #0x0
  405ed8:	b.eq	405ee4 <read_prop@@Base+0x154>  // b.none
  405edc:	ldr	x0, [sp, #296]
  405ee0:	strb	wzr, [x0]
  405ee4:	ldr	x0, [sp, #304]
  405ee8:	bl	404e50 <fclose@plt>
  405eec:	add	x1, sp, #0x48
  405ef0:	add	x0, sp, #0x50
  405ef4:	mov	w2, #0x0                   	// #0
  405ef8:	bl	405020 <strtol@plt>
  405efc:	str	x0, [sp, #288]
  405f00:	ldr	x0, [sp, #72]
  405f04:	ldrb	w0, [x0]
  405f08:	cmp	w0, #0x0
  405f0c:	b.ne	405f20 <read_prop@@Base+0x190>  // b.any
  405f10:	ldr	x1, [sp, #72]
  405f14:	add	x0, sp, #0x50
  405f18:	cmp	x1, x0
  405f1c:	b.ne	405f50 <read_prop@@Base+0x1c0>  // b.any
  405f20:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  405f24:	ldr	x0, [x0, #3992]
  405f28:	ldr	x4, [x0]
  405f2c:	add	x1, sp, #0xa0
  405f30:	add	x0, sp, #0x50
  405f34:	mov	x3, x1
  405f38:	mov	x2, x0
  405f3c:	adrp	x0, 410000 <addattrstrz@@Base>
  405f40:	add	x1, x0, #0xea8
  405f44:	mov	x0, x4
  405f48:	bl	405240 <fprintf@plt>
  405f4c:	b	405fd0 <read_prop@@Base+0x240>
  405f50:	ldr	x1, [sp, #288]
  405f54:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405f58:	cmp	x1, x0
  405f5c:	b.eq	405f70 <read_prop@@Base+0x1e0>  // b.none
  405f60:	ldr	x1, [sp, #288]
  405f64:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  405f68:	cmp	x1, x0
  405f6c:	b.ne	405fbc <read_prop@@Base+0x22c>  // b.any
  405f70:	bl	405200 <__errno_location@plt>
  405f74:	ldr	w0, [x0]
  405f78:	cmp	w0, #0x22
  405f7c:	b.ne	405fbc <read_prop@@Base+0x22c>  // b.any
  405f80:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  405f84:	ldr	x0, [x0, #3992]
  405f88:	ldr	x19, [x0]
  405f8c:	bl	405200 <__errno_location@plt>
  405f90:	ldr	w0, [x0]
  405f94:	bl	404f80 <strerror@plt>
  405f98:	mov	x1, x0
  405f9c:	add	x0, sp, #0xa0
  405fa0:	mov	x3, x1
  405fa4:	mov	x2, x0
  405fa8:	adrp	x0, 410000 <addattrstrz@@Base>
  405fac:	add	x1, x0, #0xed0
  405fb0:	mov	x0, x19
  405fb4:	bl	405240 <fprintf@plt>
  405fb8:	b	405fd0 <read_prop@@Base+0x240>
  405fbc:	ldr	x0, [sp, #40]
  405fc0:	ldr	x1, [sp, #288]
  405fc4:	str	x1, [x0]
  405fc8:	mov	w0, #0x0                   	// #0
  405fcc:	b	405ff8 <read_prop@@Base+0x268>
  405fd0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  405fd4:	ldr	x0, [x0, #3992]
  405fd8:	ldr	x3, [x0]
  405fdc:	add	x0, sp, #0xa0
  405fe0:	mov	x2, x0
  405fe4:	adrp	x0, 410000 <addattrstrz@@Base>
  405fe8:	add	x1, x0, #0xee0
  405fec:	mov	x0, x3
  405ff0:	bl	405240 <fprintf@plt>
  405ff4:	mov	w0, #0xffffffff            	// #-1
  405ff8:	ldr	x19, [sp, #16]
  405ffc:	ldp	x29, x30, [sp], #320
  406000:	ret

0000000000406004 <get_hex@@Base>:
  406004:	sub	sp, sp, #0x10
  406008:	strb	w0, [sp, #15]
  40600c:	ldrb	w0, [sp, #15]
  406010:	cmp	w0, #0x40
  406014:	b.ls	406030 <get_hex@@Base+0x2c>  // b.plast
  406018:	ldrb	w0, [sp, #15]
  40601c:	cmp	w0, #0x46
  406020:	b.hi	406030 <get_hex@@Base+0x2c>  // b.pmore
  406024:	ldrb	w0, [sp, #15]
  406028:	sub	w0, w0, #0x37
  40602c:	b	40607c <get_hex@@Base+0x78>
  406030:	ldrb	w0, [sp, #15]
  406034:	cmp	w0, #0x60
  406038:	b.ls	406054 <get_hex@@Base+0x50>  // b.plast
  40603c:	ldrb	w0, [sp, #15]
  406040:	cmp	w0, #0x66
  406044:	b.hi	406054 <get_hex@@Base+0x50>  // b.pmore
  406048:	ldrb	w0, [sp, #15]
  40604c:	sub	w0, w0, #0x57
  406050:	b	40607c <get_hex@@Base+0x78>
  406054:	ldrb	w0, [sp, #15]
  406058:	cmp	w0, #0x2f
  40605c:	b.ls	406078 <get_hex@@Base+0x74>  // b.plast
  406060:	ldrb	w0, [sp, #15]
  406064:	cmp	w0, #0x39
  406068:	b.hi	406078 <get_hex@@Base+0x74>  // b.pmore
  40606c:	ldrb	w0, [sp, #15]
  406070:	sub	w0, w0, #0x30
  406074:	b	40607c <get_hex@@Base+0x78>
  406078:	mov	w0, #0xffffffff            	// #-1
  40607c:	add	sp, sp, #0x10
  406080:	ret

0000000000406084 <get_integer@@Base>:
  406084:	stp	x29, x30, [sp, #-64]!
  406088:	mov	x29, sp
  40608c:	str	x0, [sp, #40]
  406090:	str	x1, [sp, #32]
  406094:	str	w2, [sp, #28]
  406098:	ldr	x0, [sp, #32]
  40609c:	cmp	x0, #0x0
  4060a0:	b.eq	4060b4 <get_integer@@Base+0x30>  // b.none
  4060a4:	ldr	x0, [sp, #32]
  4060a8:	ldrb	w0, [x0]
  4060ac:	cmp	w0, #0x0
  4060b0:	b.ne	4060bc <get_integer@@Base+0x38>  // b.any
  4060b4:	mov	w0, #0xffffffff            	// #-1
  4060b8:	b	40617c <get_integer@@Base+0xf8>
  4060bc:	add	x0, sp, #0x30
  4060c0:	ldr	w2, [sp, #28]
  4060c4:	mov	x1, x0
  4060c8:	ldr	x0, [sp, #32]
  4060cc:	bl	405020 <strtol@plt>
  4060d0:	str	x0, [sp, #56]
  4060d4:	ldr	x0, [sp, #48]
  4060d8:	cmp	x0, #0x0
  4060dc:	b.eq	406100 <get_integer@@Base+0x7c>  // b.none
  4060e0:	ldr	x0, [sp, #48]
  4060e4:	ldr	x1, [sp, #32]
  4060e8:	cmp	x1, x0
  4060ec:	b.eq	406100 <get_integer@@Base+0x7c>  // b.none
  4060f0:	ldr	x0, [sp, #48]
  4060f4:	ldrb	w0, [x0]
  4060f8:	cmp	w0, #0x0
  4060fc:	b.eq	406108 <get_integer@@Base+0x84>  // b.none
  406100:	mov	w0, #0xffffffff            	// #-1
  406104:	b	40617c <get_integer@@Base+0xf8>
  406108:	ldr	x1, [sp, #56]
  40610c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  406110:	cmp	x1, x0
  406114:	b.eq	406128 <get_integer@@Base+0xa4>  // b.none
  406118:	ldr	x1, [sp, #56]
  40611c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  406120:	cmp	x1, x0
  406124:	b.ne	406140 <get_integer@@Base+0xbc>  // b.any
  406128:	bl	405200 <__errno_location@plt>
  40612c:	ldr	w0, [x0]
  406130:	cmp	w0, #0x22
  406134:	b.ne	406140 <get_integer@@Base+0xbc>  // b.any
  406138:	mov	w0, #0xffffffff            	// #-1
  40613c:	b	40617c <get_integer@@Base+0xf8>
  406140:	ldr	x1, [sp, #56]
  406144:	mov	x0, #0xffffffff80000000    	// #-2147483648
  406148:	cmp	x1, x0
  40614c:	b.lt	406160 <get_integer@@Base+0xdc>  // b.tstop
  406150:	ldr	x1, [sp, #56]
  406154:	mov	x0, #0x7fffffff            	// #2147483647
  406158:	cmp	x1, x0
  40615c:	b.le	406168 <get_integer@@Base+0xe4>
  406160:	mov	w0, #0xffffffff            	// #-1
  406164:	b	40617c <get_integer@@Base+0xf8>
  406168:	ldr	x0, [sp, #56]
  40616c:	mov	w1, w0
  406170:	ldr	x0, [sp, #40]
  406174:	str	w1, [x0]
  406178:	mov	w0, #0x0                   	// #0
  40617c:	ldp	x29, x30, [sp], #64
  406180:	ret

0000000000406184 <mask2bits@@Base>:
  406184:	stp	x29, x30, [sp, #-48]!
  406188:	mov	x29, sp
  40618c:	str	w0, [sp, #28]
  406190:	str	wzr, [sp, #44]
  406194:	ldr	w0, [sp, #28]
  406198:	bl	404db0 <ntohl@plt>
  40619c:	str	w0, [sp, #40]
  4061a0:	ldr	w0, [sp, #40]
  4061a4:	mvn	w0, w0
  4061a8:	str	w0, [sp, #36]
  4061ac:	ldr	w0, [sp, #36]
  4061b0:	add	w1, w0, #0x1
  4061b4:	ldr	w0, [sp, #36]
  4061b8:	and	w0, w1, w0
  4061bc:	cmp	w0, #0x0
  4061c0:	b.eq	4061e4 <mask2bits@@Base+0x60>  // b.none
  4061c4:	mov	w0, #0xffffffff            	// #-1
  4061c8:	b	4061f4 <mask2bits@@Base+0x70>
  4061cc:	ldr	w0, [sp, #44]
  4061d0:	add	w0, w0, #0x1
  4061d4:	str	w0, [sp, #44]
  4061d8:	ldr	w0, [sp, #40]
  4061dc:	lsl	w0, w0, #1
  4061e0:	str	w0, [sp, #40]
  4061e4:	ldr	w0, [sp, #40]
  4061e8:	cmp	w0, #0x0
  4061ec:	b.ne	4061cc <mask2bits@@Base+0x48>  // b.any
  4061f0:	ldr	w0, [sp, #44]
  4061f4:	ldp	x29, x30, [sp], #48
  4061f8:	ret
  4061fc:	stp	x29, x30, [sp, #-320]!
  406200:	mov	x29, sp
  406204:	str	x0, [sp, #40]
  406208:	str	x1, [sp, #32]
  40620c:	str	w2, [sp, #28]
  406210:	ldr	w2, [sp, #28]
  406214:	ldr	x1, [sp, #32]
  406218:	ldr	x0, [sp, #40]
  40621c:	bl	40628c <get_unsigned@@Base>
  406220:	cmp	w0, #0x0
  406224:	b.ne	406230 <mask2bits@@Base+0xac>  // b.any
  406228:	mov	w0, #0x0                   	// #0
  40622c:	b	406284 <mask2bits@@Base+0x100>
  406230:	add	x0, sp, #0x30
  406234:	mov	w2, #0x2                   	// #2
  406238:	ldr	x1, [sp, #32]
  40623c:	bl	407310 <get_addr_1@@Base>
  406240:	cmp	w0, #0x0
  406244:	b.ne	406280 <mask2bits@@Base+0xfc>  // b.any
  406248:	ldrh	w0, [sp, #54]
  40624c:	cmp	w0, #0x2
  406250:	b.ne	406280 <mask2bits@@Base+0xfc>  // b.any
  406254:	ldr	w0, [sp, #56]
  406258:	bl	406184 <mask2bits@@Base>
  40625c:	str	w0, [sp, #316]
  406260:	ldr	w0, [sp, #316]
  406264:	cmp	w0, #0x0
  406268:	b.lt	406280 <mask2bits@@Base+0xfc>  // b.tstop
  40626c:	ldr	w1, [sp, #316]
  406270:	ldr	x0, [sp, #40]
  406274:	str	w1, [x0]
  406278:	mov	w0, #0x0                   	// #0
  40627c:	b	406284 <mask2bits@@Base+0x100>
  406280:	mov	w0, #0xffffffff            	// #-1
  406284:	ldp	x29, x30, [sp], #320
  406288:	ret

000000000040628c <get_unsigned@@Base>:
  40628c:	stp	x29, x30, [sp, #-64]!
  406290:	mov	x29, sp
  406294:	str	x0, [sp, #40]
  406298:	str	x1, [sp, #32]
  40629c:	str	w2, [sp, #28]
  4062a0:	ldr	x0, [sp, #32]
  4062a4:	cmp	x0, #0x0
  4062a8:	b.eq	4062bc <get_unsigned@@Base+0x30>  // b.none
  4062ac:	ldr	x0, [sp, #32]
  4062b0:	ldrb	w0, [x0]
  4062b4:	cmp	w0, #0x0
  4062b8:	b.ne	4062c4 <get_unsigned@@Base+0x38>  // b.any
  4062bc:	mov	w0, #0xffffffff            	// #-1
  4062c0:	b	406360 <get_unsigned@@Base+0xd4>
  4062c4:	add	x0, sp, #0x30
  4062c8:	ldr	w2, [sp, #28]
  4062cc:	mov	x1, x0
  4062d0:	ldr	x0, [sp, #32]
  4062d4:	bl	404d00 <strtoul@plt>
  4062d8:	str	x0, [sp, #56]
  4062dc:	ldr	x0, [sp, #48]
  4062e0:	cmp	x0, #0x0
  4062e4:	b.eq	406308 <get_unsigned@@Base+0x7c>  // b.none
  4062e8:	ldr	x0, [sp, #48]
  4062ec:	ldr	x1, [sp, #32]
  4062f0:	cmp	x1, x0
  4062f4:	b.eq	406308 <get_unsigned@@Base+0x7c>  // b.none
  4062f8:	ldr	x0, [sp, #48]
  4062fc:	ldrb	w0, [x0]
  406300:	cmp	w0, #0x0
  406304:	b.eq	406310 <get_unsigned@@Base+0x84>  // b.none
  406308:	mov	w0, #0xffffffff            	// #-1
  40630c:	b	406360 <get_unsigned@@Base+0xd4>
  406310:	ldr	x0, [sp, #56]
  406314:	cmn	x0, #0x1
  406318:	b.ne	406334 <get_unsigned@@Base+0xa8>  // b.any
  40631c:	bl	405200 <__errno_location@plt>
  406320:	ldr	w0, [x0]
  406324:	cmp	w0, #0x22
  406328:	b.ne	406334 <get_unsigned@@Base+0xa8>  // b.any
  40632c:	mov	w0, #0xffffffff            	// #-1
  406330:	b	406360 <get_unsigned@@Base+0xd4>
  406334:	ldr	x1, [sp, #56]
  406338:	mov	x0, #0xffffffff            	// #4294967295
  40633c:	cmp	x1, x0
  406340:	b.ls	40634c <get_unsigned@@Base+0xc0>  // b.plast
  406344:	mov	w0, #0xffffffff            	// #-1
  406348:	b	406360 <get_unsigned@@Base+0xd4>
  40634c:	ldr	x0, [sp, #56]
  406350:	mov	w1, w0
  406354:	ldr	x0, [sp, #40]
  406358:	str	w1, [x0]
  40635c:	mov	w0, #0x0                   	// #0
  406360:	ldp	x29, x30, [sp], #64
  406364:	ret

0000000000406368 <get_time_rtt@@Base>:
  406368:	stp	x29, x30, [sp, #-80]!
  40636c:	mov	x29, sp
  406370:	str	x0, [sp, #40]
  406374:	str	x1, [sp, #32]
  406378:	str	x2, [sp, #24]
  40637c:	mov	w1, #0x2e                  	// #46
  406380:	ldr	x0, [sp, #32]
  406384:	bl	4050b0 <strchr@plt>
  406388:	cmp	x0, #0x0
  40638c:	b.eq	40641c <get_time_rtt@@Base+0xb4>  // b.none
  406390:	add	x0, sp, #0x38
  406394:	mov	x1, x0
  406398:	ldr	x0, [sp, #32]
  40639c:	bl	404d70 <strtod@plt>
  4063a0:	str	d0, [sp, #72]
  4063a4:	ldr	d0, [sp, #72]
  4063a8:	fcmpe	d0, #0.0
  4063ac:	b.pl	4063b8 <get_time_rtt@@Base+0x50>  // b.nfrst
  4063b0:	mov	w0, #0xffffffff            	// #-1
  4063b4:	b	4065d4 <get_time_rtt@@Base+0x26c>
  4063b8:	ldr	x0, [sp, #56]
  4063bc:	cmp	x0, #0x0
  4063c0:	b.eq	4063d4 <get_time_rtt@@Base+0x6c>  // b.none
  4063c4:	ldr	x0, [sp, #56]
  4063c8:	ldr	x1, [sp, #32]
  4063cc:	cmp	x1, x0
  4063d0:	b.ne	4063dc <get_time_rtt@@Base+0x74>  // b.any
  4063d4:	mov	w0, #0xffffffff            	// #-1
  4063d8:	b	4065d4 <get_time_rtt@@Base+0x26c>
  4063dc:	ldr	d0, [sp, #72]
  4063e0:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  4063e4:	fmov	d1, x0
  4063e8:	fcmp	d0, d1
  4063ec:	b.eq	406404 <get_time_rtt@@Base+0x9c>  // b.none
  4063f0:	ldr	d0, [sp, #72]
  4063f4:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  4063f8:	fmov	d1, x0
  4063fc:	fcmp	d0, d1
  406400:	b.ne	406488 <get_time_rtt@@Base+0x120>  // b.any
  406404:	bl	405200 <__errno_location@plt>
  406408:	ldr	w0, [x0]
  40640c:	cmp	w0, #0x22
  406410:	b.ne	406488 <get_time_rtt@@Base+0x120>  // b.any
  406414:	mov	w0, #0xffffffff            	// #-1
  406418:	b	4065d4 <get_time_rtt@@Base+0x26c>
  40641c:	add	x0, sp, #0x38
  406420:	mov	w2, #0x0                   	// #0
  406424:	mov	x1, x0
  406428:	ldr	x0, [sp, #32]
  40642c:	bl	404d00 <strtoul@plt>
  406430:	str	x0, [sp, #64]
  406434:	ldr	x0, [sp, #56]
  406438:	cmp	x0, #0x0
  40643c:	b.eq	406450 <get_time_rtt@@Base+0xe8>  // b.none
  406440:	ldr	x0, [sp, #56]
  406444:	ldr	x1, [sp, #32]
  406448:	cmp	x1, x0
  40644c:	b.ne	406458 <get_time_rtt@@Base+0xf0>  // b.any
  406450:	mov	w0, #0xffffffff            	// #-1
  406454:	b	4065d4 <get_time_rtt@@Base+0x26c>
  406458:	ldr	x0, [sp, #64]
  40645c:	cmn	x0, #0x1
  406460:	b.ne	40647c <get_time_rtt@@Base+0x114>  // b.any
  406464:	bl	405200 <__errno_location@plt>
  406468:	ldr	w0, [x0]
  40646c:	cmp	w0, #0x22
  406470:	b.ne	40647c <get_time_rtt@@Base+0x114>  // b.any
  406474:	mov	w0, #0xffffffff            	// #-1
  406478:	b	4065d4 <get_time_rtt@@Base+0x26c>
  40647c:	ldr	d0, [sp, #64]
  406480:	ucvtf	d0, d0
  406484:	str	d0, [sp, #72]
  406488:	ldr	x0, [sp, #56]
  40648c:	ldr	x1, [sp, #32]
  406490:	cmp	x1, x0
  406494:	b.ne	4064a0 <get_time_rtt@@Base+0x138>  // b.any
  406498:	mov	w0, #0xffffffff            	// #-1
  40649c:	b	4065d4 <get_time_rtt@@Base+0x26c>
  4064a0:	ldr	x0, [sp, #24]
  4064a4:	mov	w1, #0x1                   	// #1
  4064a8:	str	w1, [x0]
  4064ac:	ldr	x0, [sp, #56]
  4064b0:	ldrb	w0, [x0]
  4064b4:	cmp	w0, #0x0
  4064b8:	b.eq	406594 <get_time_rtt@@Base+0x22c>  // b.none
  4064bc:	ldr	x0, [sp, #24]
  4064c0:	str	wzr, [x0]
  4064c4:	ldr	x2, [sp, #56]
  4064c8:	adrp	x0, 410000 <addattrstrz@@Base>
  4064cc:	add	x1, x0, #0xef8
  4064d0:	mov	x0, x2
  4064d4:	bl	404f30 <strcasecmp@plt>
  4064d8:	cmp	w0, #0x0
  4064dc:	b.eq	406518 <get_time_rtt@@Base+0x1b0>  // b.none
  4064e0:	ldr	x2, [sp, #56]
  4064e4:	adrp	x0, 410000 <addattrstrz@@Base>
  4064e8:	add	x1, x0, #0xf00
  4064ec:	mov	x0, x2
  4064f0:	bl	404f30 <strcasecmp@plt>
  4064f4:	cmp	w0, #0x0
  4064f8:	b.eq	406518 <get_time_rtt@@Base+0x1b0>  // b.none
  4064fc:	ldr	x2, [sp, #56]
  406500:	adrp	x0, 410000 <addattrstrz@@Base>
  406504:	add	x1, x0, #0xf08
  406508:	mov	x0, x2
  40650c:	bl	404f30 <strcasecmp@plt>
  406510:	cmp	w0, #0x0
  406514:	b.ne	406534 <get_time_rtt@@Base+0x1cc>  // b.any
  406518:	ldr	d0, [sp, #72]
  40651c:	mov	x0, #0x400000000000        	// #70368744177664
  406520:	movk	x0, #0x408f, lsl #48
  406524:	fmov	d1, x0
  406528:	fmul	d0, d0, d1
  40652c:	str	d0, [sp, #72]
  406530:	b	406594 <get_time_rtt@@Base+0x22c>
  406534:	ldr	x2, [sp, #56]
  406538:	adrp	x0, 410000 <addattrstrz@@Base>
  40653c:	add	x1, x0, #0xf10
  406540:	mov	x0, x2
  406544:	bl	404f30 <strcasecmp@plt>
  406548:	cmp	w0, #0x0
  40654c:	b.eq	406590 <get_time_rtt@@Base+0x228>  // b.none
  406550:	ldr	x2, [sp, #56]
  406554:	adrp	x0, 410000 <addattrstrz@@Base>
  406558:	add	x1, x0, #0xf18
  40655c:	mov	x0, x2
  406560:	bl	404f30 <strcasecmp@plt>
  406564:	cmp	w0, #0x0
  406568:	b.eq	406590 <get_time_rtt@@Base+0x228>  // b.none
  40656c:	ldr	x2, [sp, #56]
  406570:	adrp	x0, 410000 <addattrstrz@@Base>
  406574:	add	x1, x0, #0xf20
  406578:	mov	x0, x2
  40657c:	bl	404f30 <strcasecmp@plt>
  406580:	cmp	w0, #0x0
  406584:	b.eq	406590 <get_time_rtt@@Base+0x228>  // b.none
  406588:	mov	w0, #0xffffffff            	// #-1
  40658c:	b	4065d4 <get_time_rtt@@Base+0x26c>
  406590:	nop
  406594:	ldr	d0, [sp, #72]
  406598:	fcvtzu	w1, d0
  40659c:	ldr	x0, [sp, #40]
  4065a0:	str	w1, [x0]
  4065a4:	ldr	x0, [sp, #40]
  4065a8:	ldr	w0, [x0]
  4065ac:	ucvtf	d0, w0
  4065b0:	ldr	d1, [sp, #72]
  4065b4:	fcmpe	d1, d0
  4065b8:	b.le	4065d0 <get_time_rtt@@Base+0x268>
  4065bc:	ldr	x0, [sp, #40]
  4065c0:	ldr	w0, [x0]
  4065c4:	add	w1, w0, #0x1
  4065c8:	ldr	x0, [sp, #40]
  4065cc:	str	w1, [x0]
  4065d0:	mov	w0, #0x0                   	// #0
  4065d4:	ldp	x29, x30, [sp], #80
  4065d8:	ret

00000000004065dc <get_u64@@Base>:
  4065dc:	stp	x29, x30, [sp, #-64]!
  4065e0:	mov	x29, sp
  4065e4:	str	x0, [sp, #40]
  4065e8:	str	x1, [sp, #32]
  4065ec:	str	w2, [sp, #28]
  4065f0:	ldr	x0, [sp, #32]
  4065f4:	cmp	x0, #0x0
  4065f8:	b.eq	40660c <get_u64@@Base+0x30>  // b.none
  4065fc:	ldr	x0, [sp, #32]
  406600:	ldrb	w0, [x0]
  406604:	cmp	w0, #0x0
  406608:	b.ne	406614 <get_u64@@Base+0x38>  // b.any
  40660c:	mov	w0, #0xffffffff            	// #-1
  406610:	b	406694 <get_u64@@Base+0xb8>
  406614:	add	x0, sp, #0x30
  406618:	ldr	w2, [sp, #28]
  40661c:	mov	x1, x0
  406620:	ldr	x0, [sp, #32]
  406624:	bl	4050c0 <strtoull@plt>
  406628:	str	x0, [sp, #56]
  40662c:	ldr	x0, [sp, #48]
  406630:	cmp	x0, #0x0
  406634:	b.eq	406658 <get_u64@@Base+0x7c>  // b.none
  406638:	ldr	x0, [sp, #48]
  40663c:	ldr	x1, [sp, #32]
  406640:	cmp	x1, x0
  406644:	b.eq	406658 <get_u64@@Base+0x7c>  // b.none
  406648:	ldr	x0, [sp, #48]
  40664c:	ldrb	w0, [x0]
  406650:	cmp	w0, #0x0
  406654:	b.eq	406660 <get_u64@@Base+0x84>  // b.none
  406658:	mov	w0, #0xffffffff            	// #-1
  40665c:	b	406694 <get_u64@@Base+0xb8>
  406660:	ldr	x0, [sp, #56]
  406664:	cmn	x0, #0x1
  406668:	b.ne	406684 <get_u64@@Base+0xa8>  // b.any
  40666c:	bl	405200 <__errno_location@plt>
  406670:	ldr	w0, [x0]
  406674:	cmp	w0, #0x22
  406678:	b.ne	406684 <get_u64@@Base+0xa8>  // b.any
  40667c:	mov	w0, #0xffffffff            	// #-1
  406680:	b	406694 <get_u64@@Base+0xb8>
  406684:	ldr	x0, [sp, #40]
  406688:	ldr	x1, [sp, #56]
  40668c:	str	x1, [x0]
  406690:	mov	w0, #0x0                   	// #0
  406694:	ldp	x29, x30, [sp], #64
  406698:	ret

000000000040669c <get_u32@@Base>:
  40669c:	stp	x29, x30, [sp, #-64]!
  4066a0:	mov	x29, sp
  4066a4:	str	x0, [sp, #40]
  4066a8:	str	x1, [sp, #32]
  4066ac:	str	w2, [sp, #28]
  4066b0:	ldr	x0, [sp, #32]
  4066b4:	cmp	x0, #0x0
  4066b8:	b.eq	4066cc <get_u32@@Base+0x30>  // b.none
  4066bc:	ldr	x0, [sp, #32]
  4066c0:	ldrb	w0, [x0]
  4066c4:	cmp	w0, #0x0
  4066c8:	b.ne	4066d4 <get_u32@@Base+0x38>  // b.any
  4066cc:	mov	w0, #0xffffffff            	// #-1
  4066d0:	b	406770 <get_u32@@Base+0xd4>
  4066d4:	add	x0, sp, #0x30
  4066d8:	ldr	w2, [sp, #28]
  4066dc:	mov	x1, x0
  4066e0:	ldr	x0, [sp, #32]
  4066e4:	bl	404d00 <strtoul@plt>
  4066e8:	str	x0, [sp, #56]
  4066ec:	ldr	x0, [sp, #48]
  4066f0:	cmp	x0, #0x0
  4066f4:	b.eq	406718 <get_u32@@Base+0x7c>  // b.none
  4066f8:	ldr	x0, [sp, #48]
  4066fc:	ldr	x1, [sp, #32]
  406700:	cmp	x1, x0
  406704:	b.eq	406718 <get_u32@@Base+0x7c>  // b.none
  406708:	ldr	x0, [sp, #48]
  40670c:	ldrb	w0, [x0]
  406710:	cmp	w0, #0x0
  406714:	b.eq	406720 <get_u32@@Base+0x84>  // b.none
  406718:	mov	w0, #0xffffffff            	// #-1
  40671c:	b	406770 <get_u32@@Base+0xd4>
  406720:	ldr	x0, [sp, #56]
  406724:	cmn	x0, #0x1
  406728:	b.ne	406744 <get_u32@@Base+0xa8>  // b.any
  40672c:	bl	405200 <__errno_location@plt>
  406730:	ldr	w0, [x0]
  406734:	cmp	w0, #0x22
  406738:	b.ne	406744 <get_u32@@Base+0xa8>  // b.any
  40673c:	mov	w0, #0xffffffff            	// #-1
  406740:	b	406770 <get_u32@@Base+0xd4>
  406744:	ldr	x1, [sp, #56]
  406748:	mov	x0, #0xffffffff            	// #4294967295
  40674c:	cmp	x1, x0
  406750:	b.ls	40675c <get_u32@@Base+0xc0>  // b.plast
  406754:	mov	w0, #0xffffffff            	// #-1
  406758:	b	406770 <get_u32@@Base+0xd4>
  40675c:	ldr	x0, [sp, #56]
  406760:	mov	w1, w0
  406764:	ldr	x0, [sp, #40]
  406768:	str	w1, [x0]
  40676c:	mov	w0, #0x0                   	// #0
  406770:	ldp	x29, x30, [sp], #64
  406774:	ret

0000000000406778 <get_u16@@Base>:
  406778:	stp	x29, x30, [sp, #-64]!
  40677c:	mov	x29, sp
  406780:	str	x0, [sp, #40]
  406784:	str	x1, [sp, #32]
  406788:	str	w2, [sp, #28]
  40678c:	ldr	x0, [sp, #32]
  406790:	cmp	x0, #0x0
  406794:	b.eq	4067a8 <get_u16@@Base+0x30>  // b.none
  406798:	ldr	x0, [sp, #32]
  40679c:	ldrb	w0, [x0]
  4067a0:	cmp	w0, #0x0
  4067a4:	b.ne	4067b0 <get_u16@@Base+0x38>  // b.any
  4067a8:	mov	w0, #0xffffffff            	// #-1
  4067ac:	b	40684c <get_u16@@Base+0xd4>
  4067b0:	add	x0, sp, #0x30
  4067b4:	ldr	w2, [sp, #28]
  4067b8:	mov	x1, x0
  4067bc:	ldr	x0, [sp, #32]
  4067c0:	bl	404d00 <strtoul@plt>
  4067c4:	str	x0, [sp, #56]
  4067c8:	ldr	x0, [sp, #48]
  4067cc:	cmp	x0, #0x0
  4067d0:	b.eq	4067f4 <get_u16@@Base+0x7c>  // b.none
  4067d4:	ldr	x0, [sp, #48]
  4067d8:	ldr	x1, [sp, #32]
  4067dc:	cmp	x1, x0
  4067e0:	b.eq	4067f4 <get_u16@@Base+0x7c>  // b.none
  4067e4:	ldr	x0, [sp, #48]
  4067e8:	ldrb	w0, [x0]
  4067ec:	cmp	w0, #0x0
  4067f0:	b.eq	4067fc <get_u16@@Base+0x84>  // b.none
  4067f4:	mov	w0, #0xffffffff            	// #-1
  4067f8:	b	40684c <get_u16@@Base+0xd4>
  4067fc:	ldr	x0, [sp, #56]
  406800:	cmn	x0, #0x1
  406804:	b.ne	406820 <get_u16@@Base+0xa8>  // b.any
  406808:	bl	405200 <__errno_location@plt>
  40680c:	ldr	w0, [x0]
  406810:	cmp	w0, #0x22
  406814:	b.ne	406820 <get_u16@@Base+0xa8>  // b.any
  406818:	mov	w0, #0xffffffff            	// #-1
  40681c:	b	40684c <get_u16@@Base+0xd4>
  406820:	ldr	x1, [sp, #56]
  406824:	mov	x0, #0xffff                	// #65535
  406828:	cmp	x1, x0
  40682c:	b.ls	406838 <get_u16@@Base+0xc0>  // b.plast
  406830:	mov	w0, #0xffffffff            	// #-1
  406834:	b	40684c <get_u16@@Base+0xd4>
  406838:	ldr	x0, [sp, #56]
  40683c:	and	w1, w0, #0xffff
  406840:	ldr	x0, [sp, #40]
  406844:	strh	w1, [x0]
  406848:	mov	w0, #0x0                   	// #0
  40684c:	ldp	x29, x30, [sp], #64
  406850:	ret

0000000000406854 <get_u8@@Base>:
  406854:	stp	x29, x30, [sp, #-64]!
  406858:	mov	x29, sp
  40685c:	str	x0, [sp, #40]
  406860:	str	x1, [sp, #32]
  406864:	str	w2, [sp, #28]
  406868:	ldr	x0, [sp, #32]
  40686c:	cmp	x0, #0x0
  406870:	b.eq	406884 <get_u8@@Base+0x30>  // b.none
  406874:	ldr	x0, [sp, #32]
  406878:	ldrb	w0, [x0]
  40687c:	cmp	w0, #0x0
  406880:	b.ne	40688c <get_u8@@Base+0x38>  // b.any
  406884:	mov	w0, #0xffffffff            	// #-1
  406888:	b	406924 <get_u8@@Base+0xd0>
  40688c:	add	x0, sp, #0x30
  406890:	ldr	w2, [sp, #28]
  406894:	mov	x1, x0
  406898:	ldr	x0, [sp, #32]
  40689c:	bl	404d00 <strtoul@plt>
  4068a0:	str	x0, [sp, #56]
  4068a4:	ldr	x0, [sp, #48]
  4068a8:	cmp	x0, #0x0
  4068ac:	b.eq	4068d0 <get_u8@@Base+0x7c>  // b.none
  4068b0:	ldr	x0, [sp, #48]
  4068b4:	ldr	x1, [sp, #32]
  4068b8:	cmp	x1, x0
  4068bc:	b.eq	4068d0 <get_u8@@Base+0x7c>  // b.none
  4068c0:	ldr	x0, [sp, #48]
  4068c4:	ldrb	w0, [x0]
  4068c8:	cmp	w0, #0x0
  4068cc:	b.eq	4068d8 <get_u8@@Base+0x84>  // b.none
  4068d0:	mov	w0, #0xffffffff            	// #-1
  4068d4:	b	406924 <get_u8@@Base+0xd0>
  4068d8:	ldr	x0, [sp, #56]
  4068dc:	cmn	x0, #0x1
  4068e0:	b.ne	4068fc <get_u8@@Base+0xa8>  // b.any
  4068e4:	bl	405200 <__errno_location@plt>
  4068e8:	ldr	w0, [x0]
  4068ec:	cmp	w0, #0x22
  4068f0:	b.ne	4068fc <get_u8@@Base+0xa8>  // b.any
  4068f4:	mov	w0, #0xffffffff            	// #-1
  4068f8:	b	406924 <get_u8@@Base+0xd0>
  4068fc:	ldr	x0, [sp, #56]
  406900:	cmp	x0, #0xff
  406904:	b.ls	406910 <get_u8@@Base+0xbc>  // b.plast
  406908:	mov	w0, #0xffffffff            	// #-1
  40690c:	b	406924 <get_u8@@Base+0xd0>
  406910:	ldr	x0, [sp, #56]
  406914:	and	w1, w0, #0xff
  406918:	ldr	x0, [sp, #40]
  40691c:	strb	w1, [x0]
  406920:	mov	w0, #0x0                   	// #0
  406924:	ldp	x29, x30, [sp], #64
  406928:	ret

000000000040692c <get_s64@@Base>:
  40692c:	stp	x29, x30, [sp, #-64]!
  406930:	mov	x29, sp
  406934:	str	x0, [sp, #40]
  406938:	str	x1, [sp, #32]
  40693c:	str	w2, [sp, #28]
  406940:	bl	405200 <__errno_location@plt>
  406944:	str	wzr, [x0]
  406948:	ldr	x0, [sp, #32]
  40694c:	cmp	x0, #0x0
  406950:	b.eq	406964 <get_s64@@Base+0x38>  // b.none
  406954:	ldr	x0, [sp, #32]
  406958:	ldrb	w0, [x0]
  40695c:	cmp	w0, #0x0
  406960:	b.ne	40696c <get_s64@@Base+0x40>  // b.any
  406964:	mov	w0, #0xffffffff            	// #-1
  406968:	b	406a00 <get_s64@@Base+0xd4>
  40696c:	add	x0, sp, #0x30
  406970:	ldr	w2, [sp, #28]
  406974:	mov	x1, x0
  406978:	ldr	x0, [sp, #32]
  40697c:	bl	404d60 <strtoll@plt>
  406980:	str	x0, [sp, #56]
  406984:	ldr	x0, [sp, #48]
  406988:	cmp	x0, #0x0
  40698c:	b.eq	4069b0 <get_s64@@Base+0x84>  // b.none
  406990:	ldr	x0, [sp, #48]
  406994:	ldr	x1, [sp, #32]
  406998:	cmp	x1, x0
  40699c:	b.eq	4069b0 <get_s64@@Base+0x84>  // b.none
  4069a0:	ldr	x0, [sp, #48]
  4069a4:	ldrb	w0, [x0]
  4069a8:	cmp	w0, #0x0
  4069ac:	b.eq	4069b8 <get_s64@@Base+0x8c>  // b.none
  4069b0:	mov	w0, #0xffffffff            	// #-1
  4069b4:	b	406a00 <get_s64@@Base+0xd4>
  4069b8:	ldr	x1, [sp, #56]
  4069bc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4069c0:	cmp	x1, x0
  4069c4:	b.eq	4069d8 <get_s64@@Base+0xac>  // b.none
  4069c8:	ldr	x1, [sp, #56]
  4069cc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4069d0:	cmp	x1, x0
  4069d4:	b.ne	4069f0 <get_s64@@Base+0xc4>  // b.any
  4069d8:	bl	405200 <__errno_location@plt>
  4069dc:	ldr	w0, [x0]
  4069e0:	cmp	w0, #0x22
  4069e4:	b.ne	4069f0 <get_s64@@Base+0xc4>  // b.any
  4069e8:	mov	w0, #0xffffffff            	// #-1
  4069ec:	b	406a00 <get_s64@@Base+0xd4>
  4069f0:	ldr	x0, [sp, #40]
  4069f4:	ldr	x1, [sp, #56]
  4069f8:	str	x1, [x0]
  4069fc:	mov	w0, #0x0                   	// #0
  406a00:	ldp	x29, x30, [sp], #64
  406a04:	ret

0000000000406a08 <get_s32@@Base>:
  406a08:	stp	x29, x30, [sp, #-64]!
  406a0c:	mov	x29, sp
  406a10:	str	x0, [sp, #40]
  406a14:	str	x1, [sp, #32]
  406a18:	str	w2, [sp, #28]
  406a1c:	bl	405200 <__errno_location@plt>
  406a20:	str	wzr, [x0]
  406a24:	ldr	x0, [sp, #32]
  406a28:	cmp	x0, #0x0
  406a2c:	b.eq	406a40 <get_s32@@Base+0x38>  // b.none
  406a30:	ldr	x0, [sp, #32]
  406a34:	ldrb	w0, [x0]
  406a38:	cmp	w0, #0x0
  406a3c:	b.ne	406a48 <get_s32@@Base+0x40>  // b.any
  406a40:	mov	w0, #0xffffffff            	// #-1
  406a44:	b	406b08 <get_s32@@Base+0x100>
  406a48:	add	x0, sp, #0x30
  406a4c:	ldr	w2, [sp, #28]
  406a50:	mov	x1, x0
  406a54:	ldr	x0, [sp, #32]
  406a58:	bl	405020 <strtol@plt>
  406a5c:	str	x0, [sp, #56]
  406a60:	ldr	x0, [sp, #48]
  406a64:	cmp	x0, #0x0
  406a68:	b.eq	406a8c <get_s32@@Base+0x84>  // b.none
  406a6c:	ldr	x0, [sp, #48]
  406a70:	ldr	x1, [sp, #32]
  406a74:	cmp	x1, x0
  406a78:	b.eq	406a8c <get_s32@@Base+0x84>  // b.none
  406a7c:	ldr	x0, [sp, #48]
  406a80:	ldrb	w0, [x0]
  406a84:	cmp	w0, #0x0
  406a88:	b.eq	406a94 <get_s32@@Base+0x8c>  // b.none
  406a8c:	mov	w0, #0xffffffff            	// #-1
  406a90:	b	406b08 <get_s32@@Base+0x100>
  406a94:	ldr	x1, [sp, #56]
  406a98:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  406a9c:	cmp	x1, x0
  406aa0:	b.eq	406ab4 <get_s32@@Base+0xac>  // b.none
  406aa4:	ldr	x1, [sp, #56]
  406aa8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  406aac:	cmp	x1, x0
  406ab0:	b.ne	406acc <get_s32@@Base+0xc4>  // b.any
  406ab4:	bl	405200 <__errno_location@plt>
  406ab8:	ldr	w0, [x0]
  406abc:	cmp	w0, #0x22
  406ac0:	b.ne	406acc <get_s32@@Base+0xc4>  // b.any
  406ac4:	mov	w0, #0xffffffff            	// #-1
  406ac8:	b	406b08 <get_s32@@Base+0x100>
  406acc:	ldr	x1, [sp, #56]
  406ad0:	mov	x0, #0x7fffffff            	// #2147483647
  406ad4:	cmp	x1, x0
  406ad8:	b.gt	406aec <get_s32@@Base+0xe4>
  406adc:	ldr	x1, [sp, #56]
  406ae0:	mov	x0, #0xffffffff80000000    	// #-2147483648
  406ae4:	cmp	x1, x0
  406ae8:	b.ge	406af4 <get_s32@@Base+0xec>  // b.tcont
  406aec:	mov	w0, #0xffffffff            	// #-1
  406af0:	b	406b08 <get_s32@@Base+0x100>
  406af4:	ldr	x0, [sp, #56]
  406af8:	mov	w1, w0
  406afc:	ldr	x0, [sp, #40]
  406b00:	str	w1, [x0]
  406b04:	mov	w0, #0x0                   	// #0
  406b08:	ldp	x29, x30, [sp], #64
  406b0c:	ret

0000000000406b10 <get_be64@@Base>:
  406b10:	stp	x29, x30, [sp, #-80]!
  406b14:	mov	x29, sp
  406b18:	str	x19, [sp, #16]
  406b1c:	str	x0, [sp, #56]
  406b20:	str	x1, [sp, #48]
  406b24:	str	w2, [sp, #44]
  406b28:	add	x0, sp, #0x40
  406b2c:	ldr	w2, [sp, #44]
  406b30:	ldr	x1, [sp, #48]
  406b34:	bl	4065dc <get_u64@@Base>
  406b38:	str	w0, [sp, #76]
  406b3c:	ldr	w0, [sp, #76]
  406b40:	cmp	w0, #0x0
  406b44:	b.ne	406b8c <get_be64@@Base+0x7c>  // b.any
  406b48:	mov	w0, #0x1                   	// #1
  406b4c:	bl	404d50 <htonl@plt>
  406b50:	cmp	w0, #0x1
  406b54:	b.eq	406b80 <get_be64@@Base+0x70>  // b.none
  406b58:	ldr	x0, [sp, #64]
  406b5c:	bl	404d50 <htonl@plt>
  406b60:	mov	w0, w0
  406b64:	lsl	x19, x0, #32
  406b68:	ldr	x0, [sp, #64]
  406b6c:	lsr	x0, x0, #32
  406b70:	bl	404d50 <htonl@plt>
  406b74:	mov	w0, w0
  406b78:	orr	x0, x19, x0
  406b7c:	b	406b84 <get_be64@@Base+0x74>
  406b80:	ldr	x0, [sp, #64]
  406b84:	ldr	x1, [sp, #56]
  406b88:	str	x0, [x1]
  406b8c:	ldr	w0, [sp, #76]
  406b90:	ldr	x19, [sp, #16]
  406b94:	ldp	x29, x30, [sp], #80
  406b98:	ret

0000000000406b9c <get_be32@@Base>:
  406b9c:	stp	x29, x30, [sp, #-64]!
  406ba0:	mov	x29, sp
  406ba4:	str	x0, [sp, #40]
  406ba8:	str	x1, [sp, #32]
  406bac:	str	w2, [sp, #28]
  406bb0:	add	x0, sp, #0x38
  406bb4:	ldr	w2, [sp, #28]
  406bb8:	ldr	x1, [sp, #32]
  406bbc:	bl	40669c <get_u32@@Base>
  406bc0:	str	w0, [sp, #60]
  406bc4:	ldr	w0, [sp, #60]
  406bc8:	cmp	w0, #0x0
  406bcc:	b.ne	406be4 <get_be32@@Base+0x48>  // b.any
  406bd0:	ldr	w0, [sp, #56]
  406bd4:	bl	404d50 <htonl@plt>
  406bd8:	mov	w1, w0
  406bdc:	ldr	x0, [sp, #40]
  406be0:	str	w1, [x0]
  406be4:	ldr	w0, [sp, #60]
  406be8:	ldp	x29, x30, [sp], #64
  406bec:	ret

0000000000406bf0 <get_be16@@Base>:
  406bf0:	stp	x29, x30, [sp, #-64]!
  406bf4:	mov	x29, sp
  406bf8:	str	x0, [sp, #40]
  406bfc:	str	x1, [sp, #32]
  406c00:	str	w2, [sp, #28]
  406c04:	add	x0, sp, #0x3a
  406c08:	ldr	w2, [sp, #28]
  406c0c:	ldr	x1, [sp, #32]
  406c10:	bl	406778 <get_u16@@Base>
  406c14:	str	w0, [sp, #60]
  406c18:	ldr	w0, [sp, #60]
  406c1c:	cmp	w0, #0x0
  406c20:	b.ne	406c38 <get_be16@@Base+0x48>  // b.any
  406c24:	ldrh	w0, [sp, #58]
  406c28:	bl	404f50 <htons@plt>
  406c2c:	and	w1, w0, #0xffff
  406c30:	ldr	x0, [sp, #40]
  406c34:	strh	w1, [x0]
  406c38:	ldr	w0, [sp, #60]
  406c3c:	ldp	x29, x30, [sp], #64
  406c40:	ret
  406c44:	stp	x29, x30, [sp, #-64]!
  406c48:	mov	x29, sp
  406c4c:	str	x0, [sp, #24]
  406c50:	str	x1, [sp, #16]
  406c54:	str	wzr, [sp, #60]
  406c58:	b	406d04 <get_be16@@Base+0x114>
  406c5c:	add	x0, sp, #0x28
  406c60:	mov	w2, #0x0                   	// #0
  406c64:	mov	x1, x0
  406c68:	ldr	x0, [sp, #16]
  406c6c:	bl	404d00 <strtoul@plt>
  406c70:	str	x0, [sp, #48]
  406c74:	ldr	x0, [sp, #48]
  406c78:	cmp	x0, #0xff
  406c7c:	b.ls	406c88 <get_be16@@Base+0x98>  // b.plast
  406c80:	mov	w0, #0xffffffff            	// #-1
  406c84:	b	406d1c <get_be16@@Base+0x12c>
  406c88:	ldr	x0, [sp, #40]
  406c8c:	ldr	x1, [sp, #16]
  406c90:	cmp	x1, x0
  406c94:	b.ne	406ca0 <get_be16@@Base+0xb0>  // b.any
  406c98:	mov	w0, #0xffffffff            	// #-1
  406c9c:	b	406d1c <get_be16@@Base+0x12c>
  406ca0:	ldrsw	x0, [sp, #60]
  406ca4:	ldr	x1, [sp, #24]
  406ca8:	add	x0, x1, x0
  406cac:	ldr	x1, [sp, #48]
  406cb0:	and	w1, w1, #0xff
  406cb4:	strb	w1, [x0]
  406cb8:	ldr	x0, [sp, #40]
  406cbc:	ldrb	w0, [x0]
  406cc0:	cmp	w0, #0x0
  406cc4:	b.eq	406d14 <get_be16@@Base+0x124>  // b.none
  406cc8:	ldr	w0, [sp, #60]
  406ccc:	cmp	w0, #0x3
  406cd0:	b.eq	406ce4 <get_be16@@Base+0xf4>  // b.none
  406cd4:	ldr	x0, [sp, #40]
  406cd8:	ldrb	w0, [x0]
  406cdc:	cmp	w0, #0x2e
  406ce0:	b.eq	406cec <get_be16@@Base+0xfc>  // b.none
  406ce4:	mov	w0, #0xffffffff            	// #-1
  406ce8:	b	406d1c <get_be16@@Base+0x12c>
  406cec:	ldr	x0, [sp, #40]
  406cf0:	add	x0, x0, #0x1
  406cf4:	str	x0, [sp, #16]
  406cf8:	ldr	w0, [sp, #60]
  406cfc:	add	w0, w0, #0x1
  406d00:	str	w0, [sp, #60]
  406d04:	ldr	w0, [sp, #60]
  406d08:	cmp	w0, #0x3
  406d0c:	b.le	406c5c <get_be16@@Base+0x6c>
  406d10:	b	406d18 <get_be16@@Base+0x128>
  406d14:	nop
  406d18:	mov	w0, #0x1                   	// #1
  406d1c:	ldp	x29, x30, [sp], #64
  406d20:	ret

0000000000406d24 <get_addr64@@Base>:
  406d24:	stp	x29, x30, [sp, #-64]!
  406d28:	mov	x29, sp
  406d2c:	str	x0, [sp, #24]
  406d30:	str	x1, [sp, #16]
  406d34:	str	wzr, [sp, #60]
  406d38:	b	406df0 <get_addr64@@Base+0xcc>
  406d3c:	add	x0, sp, #0x20
  406d40:	mov	w2, #0x10                  	// #16
  406d44:	mov	x1, x0
  406d48:	ldr	x0, [sp, #16]
  406d4c:	bl	404d00 <strtoul@plt>
  406d50:	str	x0, [sp, #48]
  406d54:	ldr	x1, [sp, #48]
  406d58:	mov	x0, #0xffff                	// #65535
  406d5c:	cmp	x1, x0
  406d60:	b.ls	406d6c <get_addr64@@Base+0x48>  // b.plast
  406d64:	mov	w0, #0xffffffff            	// #-1
  406d68:	b	406e14 <get_addr64@@Base+0xf0>
  406d6c:	ldr	x0, [sp, #32]
  406d70:	ldr	x1, [sp, #16]
  406d74:	cmp	x1, x0
  406d78:	b.ne	406d84 <get_addr64@@Base+0x60>  // b.any
  406d7c:	mov	w0, #0xffffffff            	// #-1
  406d80:	b	406e14 <get_addr64@@Base+0xf0>
  406d84:	ldr	x0, [sp, #48]
  406d88:	and	w0, w0, #0xffff
  406d8c:	bl	404f50 <htons@plt>
  406d90:	and	w2, w0, #0xffff
  406d94:	ldrsw	x0, [sp, #60]
  406d98:	lsl	x0, x0, #1
  406d9c:	add	x1, sp, #0x28
  406da0:	strh	w2, [x1, x0]
  406da4:	ldr	x0, [sp, #32]
  406da8:	ldrb	w0, [x0]
  406dac:	cmp	w0, #0x0
  406db0:	b.eq	406e00 <get_addr64@@Base+0xdc>  // b.none
  406db4:	ldr	w0, [sp, #60]
  406db8:	cmp	w0, #0x3
  406dbc:	b.eq	406dd0 <get_addr64@@Base+0xac>  // b.none
  406dc0:	ldr	x0, [sp, #32]
  406dc4:	ldrb	w0, [x0]
  406dc8:	cmp	w0, #0x3a
  406dcc:	b.eq	406dd8 <get_addr64@@Base+0xb4>  // b.none
  406dd0:	mov	w0, #0xffffffff            	// #-1
  406dd4:	b	406e14 <get_addr64@@Base+0xf0>
  406dd8:	ldr	x0, [sp, #32]
  406ddc:	add	x0, x0, #0x1
  406de0:	str	x0, [sp, #16]
  406de4:	ldr	w0, [sp, #60]
  406de8:	add	w0, w0, #0x1
  406dec:	str	w0, [sp, #60]
  406df0:	ldr	w0, [sp, #60]
  406df4:	cmp	w0, #0x3
  406df8:	b.le	406d3c <get_addr64@@Base+0x18>
  406dfc:	b	406e04 <get_addr64@@Base+0xe0>
  406e00:	nop
  406e04:	ldr	x1, [sp, #40]
  406e08:	ldr	x0, [sp, #24]
  406e0c:	str	x1, [x0]
  406e10:	mov	w0, #0x1                   	// #1
  406e14:	ldp	x29, x30, [sp], #64
  406e18:	ret
  406e1c:	stp	x29, x30, [sp, #-48]!
  406e20:	mov	x29, sp
  406e24:	str	x0, [sp, #24]
  406e28:	ldr	x0, [sp, #24]
  406e2c:	ldrh	w0, [x0, #6]
  406e30:	cmp	w0, #0x2
  406e34:	b.eq	406e44 <get_addr64@@Base+0x120>  // b.none
  406e38:	cmp	w0, #0xa
  406e3c:	b.eq	406ec8 <get_addr64@@Base+0x1a4>  // b.none
  406e40:	b	406f94 <get_addr64@@Base+0x270>
  406e44:	ldr	x0, [sp, #24]
  406e48:	ldr	w0, [x0, #8]
  406e4c:	cmp	w0, #0x0
  406e50:	b.ne	406e70 <get_addr64@@Base+0x14c>  // b.any
  406e54:	ldr	x0, [sp, #24]
  406e58:	ldrh	w0, [x0]
  406e5c:	orr	w0, w0, #0x6
  406e60:	and	w1, w0, #0xffff
  406e64:	ldr	x0, [sp, #24]
  406e68:	strh	w1, [x0]
  406e6c:	b	406f94 <get_addr64@@Base+0x270>
  406e70:	ldr	x0, [sp, #24]
  406e74:	ldr	w0, [x0, #8]
  406e78:	bl	404db0 <ntohl@plt>
  406e7c:	and	w1, w0, #0xf0000000
  406e80:	mov	w0, #0xe0000000            	// #-536870912
  406e84:	cmp	w1, w0
  406e88:	b.ne	406eac <get_addr64@@Base+0x188>  // b.any
  406e8c:	ldr	x0, [sp, #24]
  406e90:	ldrh	w1, [x0]
  406e94:	mov	w0, #0xa                   	// #10
  406e98:	orr	w0, w1, w0
  406e9c:	and	w1, w0, #0xffff
  406ea0:	ldr	x0, [sp, #24]
  406ea4:	strh	w1, [x0]
  406ea8:	b	406f94 <get_addr64@@Base+0x270>
  406eac:	ldr	x0, [sp, #24]
  406eb0:	ldrh	w0, [x0]
  406eb4:	orr	w0, w0, #0x2
  406eb8:	and	w1, w0, #0xffff
  406ebc:	ldr	x0, [sp, #24]
  406ec0:	strh	w1, [x0]
  406ec4:	b	406f94 <get_addr64@@Base+0x270>
  406ec8:	ldr	x0, [sp, #24]
  406ecc:	add	x0, x0, #0x8
  406ed0:	str	x0, [sp, #40]
  406ed4:	ldr	x0, [sp, #40]
  406ed8:	ldr	w0, [x0]
  406edc:	cmp	w0, #0x0
  406ee0:	b.ne	406f1c <get_addr64@@Base+0x1f8>  // b.any
  406ee4:	ldr	x0, [sp, #40]
  406ee8:	ldr	w0, [x0, #4]
  406eec:	cmp	w0, #0x0
  406ef0:	b.ne	406f1c <get_addr64@@Base+0x1f8>  // b.any
  406ef4:	ldr	x0, [sp, #40]
  406ef8:	ldr	w0, [x0, #8]
  406efc:	cmp	w0, #0x0
  406f00:	b.ne	406f1c <get_addr64@@Base+0x1f8>  // b.any
  406f04:	ldr	x0, [sp, #40]
  406f08:	ldr	w0, [x0, #12]
  406f0c:	cmp	w0, #0x0
  406f10:	b.ne	406f1c <get_addr64@@Base+0x1f8>  // b.any
  406f14:	mov	w0, #0x1                   	// #1
  406f18:	b	406f20 <get_addr64@@Base+0x1fc>
  406f1c:	mov	w0, #0x0                   	// #0
  406f20:	cmp	w0, #0x0
  406f24:	b.eq	406f44 <get_addr64@@Base+0x220>  // b.none
  406f28:	ldr	x0, [sp, #24]
  406f2c:	ldrh	w0, [x0]
  406f30:	orr	w0, w0, #0x6
  406f34:	and	w1, w0, #0xffff
  406f38:	ldr	x0, [sp, #24]
  406f3c:	strh	w1, [x0]
  406f40:	b	406f90 <get_addr64@@Base+0x26c>
  406f44:	ldr	x0, [sp, #24]
  406f48:	add	x0, x0, #0x8
  406f4c:	ldrb	w0, [x0]
  406f50:	cmp	w0, #0xff
  406f54:	b.ne	406f78 <get_addr64@@Base+0x254>  // b.any
  406f58:	ldr	x0, [sp, #24]
  406f5c:	ldrh	w1, [x0]
  406f60:	mov	w0, #0xa                   	// #10
  406f64:	orr	w0, w1, w0
  406f68:	and	w1, w0, #0xffff
  406f6c:	ldr	x0, [sp, #24]
  406f70:	strh	w1, [x0]
  406f74:	b	406f90 <get_addr64@@Base+0x26c>
  406f78:	ldr	x0, [sp, #24]
  406f7c:	ldrh	w0, [x0]
  406f80:	orr	w0, w0, #0x2
  406f84:	and	w1, w0, #0xffff
  406f88:	ldr	x0, [sp, #24]
  406f8c:	strh	w1, [x0]
  406f90:	nop
  406f94:	nop
  406f98:	ldp	x29, x30, [sp], #48
  406f9c:	ret
  406fa0:	stp	x29, x30, [sp, #-64]!
  406fa4:	mov	x29, sp
  406fa8:	str	x0, [sp, #40]
  406fac:	str	x1, [sp, #32]
  406fb0:	str	w2, [sp, #28]
  406fb4:	mov	x2, #0x108                 	// #264
  406fb8:	mov	w1, #0x0                   	// #0
  406fbc:	ldr	x0, [sp, #40]
  406fc0:	bl	404ef0 <memset@plt>
  406fc4:	adrp	x0, 410000 <addattrstrz@@Base>
  406fc8:	add	x1, x0, #0xf28
  406fcc:	ldr	x0, [sp, #32]
  406fd0:	bl	405000 <strcmp@plt>
  406fd4:	cmp	w0, #0x0
  406fd8:	b.ne	407050 <get_addr64@@Base+0x32c>  // b.any
  406fdc:	ldr	w0, [sp, #28]
  406fe0:	cmp	w0, #0xc
  406fe4:	b.eq	406ff4 <get_addr64@@Base+0x2d0>  // b.none
  406fe8:	ldr	w0, [sp, #28]
  406fec:	cmp	w0, #0x1c
  406ff0:	b.ne	406ffc <get_addr64@@Base+0x2d8>  // b.any
  406ff4:	mov	w0, #0xffffffff            	// #-1
  406ff8:	b	407308 <get_addr64@@Base+0x5e4>
  406ffc:	ldr	w0, [sp, #28]
  407000:	and	w1, w0, #0xffff
  407004:	ldr	x0, [sp, #40]
  407008:	strh	w1, [x0, #6]
  40700c:	ldr	x0, [sp, #40]
  407010:	ldrh	w0, [x0, #6]
  407014:	bl	407400 <af_bit_len@@Base+0xa0>
  407018:	and	w1, w0, #0xffff
  40701c:	ldr	x0, [sp, #40]
  407020:	strh	w1, [x0, #2]
  407024:	ldr	x0, [sp, #40]
  407028:	mov	w1, #0xfffffffe            	// #-2
  40702c:	strh	w1, [x0, #4]
  407030:	ldr	x0, [sp, #40]
  407034:	ldrh	w0, [x0]
  407038:	orr	w0, w0, #0x1
  40703c:	and	w1, w0, #0xffff
  407040:	ldr	x0, [sp, #40]
  407044:	strh	w1, [x0]
  407048:	mov	w0, #0x0                   	// #0
  40704c:	b	407308 <get_addr64@@Base+0x5e4>
  407050:	adrp	x0, 410000 <addattrstrz@@Base>
  407054:	add	x1, x0, #0xf30
  407058:	ldr	x0, [sp, #32]
  40705c:	bl	405000 <strcmp@plt>
  407060:	cmp	w0, #0x0
  407064:	b.eq	407080 <get_addr64@@Base+0x35c>  // b.none
  407068:	adrp	x0, 410000 <addattrstrz@@Base>
  40706c:	add	x1, x0, #0xf38
  407070:	ldr	x0, [sp, #32]
  407074:	bl	405000 <strcmp@plt>
  407078:	cmp	w0, #0x0
  40707c:	b.ne	4070cc <get_addr64@@Base+0x3a8>  // b.any
  407080:	ldr	w0, [sp, #28]
  407084:	cmp	w0, #0xc
  407088:	b.eq	407098 <get_addr64@@Base+0x374>  // b.none
  40708c:	ldr	w0, [sp, #28]
  407090:	cmp	w0, #0x1c
  407094:	b.ne	4070a0 <get_addr64@@Base+0x37c>  // b.any
  407098:	mov	w0, #0xffffffff            	// #-1
  40709c:	b	407308 <get_addr64@@Base+0x5e4>
  4070a0:	ldr	w0, [sp, #28]
  4070a4:	and	w1, w0, #0xffff
  4070a8:	ldr	x0, [sp, #40]
  4070ac:	strh	w1, [x0, #6]
  4070b0:	ldr	x0, [sp, #40]
  4070b4:	strh	wzr, [x0, #2]
  4070b8:	ldr	x0, [sp, #40]
  4070bc:	mov	w1, #0xfffffffe            	// #-2
  4070c0:	strh	w1, [x0, #4]
  4070c4:	mov	w0, #0x0                   	// #0
  4070c8:	b	407308 <get_addr64@@Base+0x5e4>
  4070cc:	ldr	w0, [sp, #28]
  4070d0:	cmp	w0, #0x11
  4070d4:	b.ne	407144 <get_addr64@@Base+0x420>  // b.any
  4070d8:	ldr	x0, [sp, #40]
  4070dc:	add	x0, x0, #0x8
  4070e0:	ldr	x2, [sp, #32]
  4070e4:	mov	w1, #0x100                 	// #256
  4070e8:	bl	40ae2c <ll_addr_a2n@@Base>
  4070ec:	str	w0, [sp, #52]
  4070f0:	ldr	w0, [sp, #52]
  4070f4:	cmp	w0, #0x0
  4070f8:	b.ge	407104 <get_addr64@@Base+0x3e0>  // b.tcont
  4070fc:	mov	w0, #0xffffffff            	// #-1
  407100:	b	407308 <get_addr64@@Base+0x5e4>
  407104:	ldr	x0, [sp, #40]
  407108:	mov	w1, #0x11                  	// #17
  40710c:	strh	w1, [x0, #6]
  407110:	ldr	w0, [sp, #52]
  407114:	and	w1, w0, #0xffff
  407118:	ldr	x0, [sp, #40]
  40711c:	strh	w1, [x0, #2]
  407120:	ldr	w0, [sp, #52]
  407124:	and	w0, w0, #0xffff
  407128:	ubfiz	w0, w0, #3, #13
  40712c:	and	w0, w0, #0xffff
  407130:	sxth	w1, w0
  407134:	ldr	x0, [sp, #40]
  407138:	strh	w1, [x0, #4]
  40713c:	mov	w0, #0x0                   	// #0
  407140:	b	407308 <get_addr64@@Base+0x5e4>
  407144:	mov	w1, #0x3a                  	// #58
  407148:	ldr	x0, [sp, #32]
  40714c:	bl	4050b0 <strchr@plt>
  407150:	cmp	x0, #0x0
  407154:	b.eq	4071cc <get_addr64@@Base+0x4a8>  // b.none
  407158:	ldr	x0, [sp, #40]
  40715c:	mov	w1, #0xa                   	// #10
  407160:	strh	w1, [x0, #6]
  407164:	ldr	w0, [sp, #28]
  407168:	cmp	w0, #0x0
  40716c:	b.eq	407184 <get_addr64@@Base+0x460>  // b.none
  407170:	ldr	w0, [sp, #28]
  407174:	cmp	w0, #0xa
  407178:	b.eq	407184 <get_addr64@@Base+0x460>  // b.none
  40717c:	mov	w0, #0xffffffff            	// #-1
  407180:	b	407308 <get_addr64@@Base+0x5e4>
  407184:	ldr	x0, [sp, #40]
  407188:	add	x0, x0, #0x8
  40718c:	mov	x2, x0
  407190:	ldr	x1, [sp, #32]
  407194:	mov	w0, #0xa                   	// #10
  407198:	bl	405080 <inet_pton@plt>
  40719c:	cmp	w0, #0x0
  4071a0:	b.gt	4071ac <get_addr64@@Base+0x488>
  4071a4:	mov	w0, #0xffffffff            	// #-1
  4071a8:	b	407308 <get_addr64@@Base+0x5e4>
  4071ac:	ldr	x0, [sp, #40]
  4071b0:	mov	w1, #0x10                  	// #16
  4071b4:	strh	w1, [x0, #2]
  4071b8:	ldr	x0, [sp, #40]
  4071bc:	mov	w1, #0xffffffff            	// #-1
  4071c0:	strh	w1, [x0, #4]
  4071c4:	mov	w0, #0x0                   	// #0
  4071c8:	b	407308 <get_addr64@@Base+0x5e4>
  4071cc:	ldr	w0, [sp, #28]
  4071d0:	cmp	w0, #0x1c
  4071d4:	b.ne	4072a0 <get_addr64@@Base+0x57c>  // b.any
  4071d8:	ldr	x0, [sp, #40]
  4071dc:	mov	w1, #0x1c                  	// #28
  4071e0:	strh	w1, [x0, #6]
  4071e4:	ldr	x0, [sp, #40]
  4071e8:	add	x0, x0, #0x8
  4071ec:	mov	x3, #0x100                 	// #256
  4071f0:	mov	x2, x0
  4071f4:	ldr	x1, [sp, #32]
  4071f8:	mov	w0, #0x1c                  	// #28
  4071fc:	bl	40c9f8 <mpls_pton@@Base>
  407200:	cmp	w0, #0x0
  407204:	b.gt	407210 <get_addr64@@Base+0x4ec>
  407208:	mov	w0, #0xffffffff            	// #-1
  40720c:	b	407308 <get_addr64@@Base+0x5e4>
  407210:	ldr	x0, [sp, #40]
  407214:	mov	w1, #0x4                   	// #4
  407218:	strh	w1, [x0, #2]
  40721c:	ldr	x0, [sp, #40]
  407220:	mov	w1, #0x14                  	// #20
  407224:	strh	w1, [x0, #4]
  407228:	mov	w0, #0x40                  	// #64
  40722c:	str	w0, [sp, #56]
  407230:	str	wzr, [sp, #60]
  407234:	b	407288 <get_addr64@@Base+0x564>
  407238:	ldr	x1, [sp, #40]
  40723c:	ldrsw	x0, [sp, #60]
  407240:	lsl	x0, x0, #2
  407244:	add	x0, x1, x0
  407248:	ldr	w0, [x0, #8]
  40724c:	bl	404db0 <ntohl@plt>
  407250:	and	w0, w0, #0x100
  407254:	cmp	w0, #0x0
  407258:	b.eq	40727c <get_addr64@@Base+0x558>  // b.none
  40725c:	ldr	w0, [sp, #60]
  407260:	add	w0, w0, #0x1
  407264:	and	w0, w0, #0xffff
  407268:	ubfiz	w0, w0, #2, #14
  40726c:	and	w1, w0, #0xffff
  407270:	ldr	x0, [sp, #40]
  407274:	strh	w1, [x0, #2]
  407278:	b	407298 <get_addr64@@Base+0x574>
  40727c:	ldr	w0, [sp, #60]
  407280:	add	w0, w0, #0x1
  407284:	str	w0, [sp, #60]
  407288:	ldr	w0, [sp, #60]
  40728c:	ldr	w1, [sp, #56]
  407290:	cmp	w1, w0
  407294:	b.hi	407238 <get_addr64@@Base+0x514>  // b.pmore
  407298:	mov	w0, #0x0                   	// #0
  40729c:	b	407308 <get_addr64@@Base+0x5e4>
  4072a0:	ldr	x0, [sp, #40]
  4072a4:	mov	w1, #0x2                   	// #2
  4072a8:	strh	w1, [x0, #6]
  4072ac:	ldr	w0, [sp, #28]
  4072b0:	cmp	w0, #0x0
  4072b4:	b.eq	4072cc <get_addr64@@Base+0x5a8>  // b.none
  4072b8:	ldr	w0, [sp, #28]
  4072bc:	cmp	w0, #0x2
  4072c0:	b.eq	4072cc <get_addr64@@Base+0x5a8>  // b.none
  4072c4:	mov	w0, #0xffffffff            	// #-1
  4072c8:	b	407308 <get_addr64@@Base+0x5e4>
  4072cc:	ldr	x0, [sp, #40]
  4072d0:	add	x0, x0, #0x8
  4072d4:	ldr	x1, [sp, #32]
  4072d8:	bl	406c44 <get_be16@@Base+0x54>
  4072dc:	cmp	w0, #0x0
  4072e0:	b.gt	4072ec <get_addr64@@Base+0x5c8>
  4072e4:	mov	w0, #0xffffffff            	// #-1
  4072e8:	b	407308 <get_addr64@@Base+0x5e4>
  4072ec:	ldr	x0, [sp, #40]
  4072f0:	mov	w1, #0x4                   	// #4
  4072f4:	strh	w1, [x0, #2]
  4072f8:	ldr	x0, [sp, #40]
  4072fc:	mov	w1, #0xffffffff            	// #-1
  407300:	strh	w1, [x0, #4]
  407304:	mov	w0, #0x0                   	// #0
  407308:	ldp	x29, x30, [sp], #64
  40730c:	ret

0000000000407310 <get_addr_1@@Base>:
  407310:	stp	x29, x30, [sp, #-64]!
  407314:	mov	x29, sp
  407318:	str	x0, [sp, #40]
  40731c:	str	x1, [sp, #32]
  407320:	str	w2, [sp, #28]
  407324:	ldr	w2, [sp, #28]
  407328:	ldr	x1, [sp, #32]
  40732c:	ldr	x0, [sp, #40]
  407330:	bl	406fa0 <get_addr64@@Base+0x27c>
  407334:	str	w0, [sp, #60]
  407338:	ldr	w0, [sp, #60]
  40733c:	cmp	w0, #0x0
  407340:	b.eq	40734c <get_addr_1@@Base+0x3c>  // b.none
  407344:	ldr	w0, [sp, #60]
  407348:	b	407358 <get_addr_1@@Base+0x48>
  40734c:	ldr	x0, [sp, #40]
  407350:	bl	406e1c <get_addr64@@Base+0xf8>
  407354:	mov	w0, #0x0                   	// #0
  407358:	ldp	x29, x30, [sp], #64
  40735c:	ret

0000000000407360 <af_bit_len@@Base>:
  407360:	sub	sp, sp, #0x10
  407364:	str	w0, [sp, #12]
  407368:	ldr	w0, [sp, #12]
  40736c:	cmp	w0, #0x1c
  407370:	b.eq	4073ec <af_bit_len@@Base+0x8c>  // b.none
  407374:	ldr	w0, [sp, #12]
  407378:	cmp	w0, #0x1c
  40737c:	b.gt	4073f4 <af_bit_len@@Base+0x94>
  407380:	ldr	w0, [sp, #12]
  407384:	cmp	w0, #0xc
  407388:	b.eq	4073dc <af_bit_len@@Base+0x7c>  // b.none
  40738c:	ldr	w0, [sp, #12]
  407390:	cmp	w0, #0xc
  407394:	b.gt	4073f4 <af_bit_len@@Base+0x94>
  407398:	ldr	w0, [sp, #12]
  40739c:	cmp	w0, #0xa
  4073a0:	b.eq	4073cc <af_bit_len@@Base+0x6c>  // b.none
  4073a4:	ldr	w0, [sp, #12]
  4073a8:	cmp	w0, #0xa
  4073ac:	b.gt	4073f4 <af_bit_len@@Base+0x94>
  4073b0:	ldr	w0, [sp, #12]
  4073b4:	cmp	w0, #0x2
  4073b8:	b.eq	4073d4 <af_bit_len@@Base+0x74>  // b.none
  4073bc:	ldr	w0, [sp, #12]
  4073c0:	cmp	w0, #0x4
  4073c4:	b.eq	4073e4 <af_bit_len@@Base+0x84>  // b.none
  4073c8:	b	4073f4 <af_bit_len@@Base+0x94>
  4073cc:	mov	w0, #0x80                  	// #128
  4073d0:	b	4073f8 <af_bit_len@@Base+0x98>
  4073d4:	mov	w0, #0x20                  	// #32
  4073d8:	b	4073f8 <af_bit_len@@Base+0x98>
  4073dc:	mov	w0, #0x10                  	// #16
  4073e0:	b	4073f8 <af_bit_len@@Base+0x98>
  4073e4:	mov	w0, #0x50                  	// #80
  4073e8:	b	4073f8 <af_bit_len@@Base+0x98>
  4073ec:	mov	w0, #0x14                  	// #20
  4073f0:	b	4073f8 <af_bit_len@@Base+0x98>
  4073f4:	mov	w0, #0x0                   	// #0
  4073f8:	add	sp, sp, #0x10
  4073fc:	ret
  407400:	stp	x29, x30, [sp, #-32]!
  407404:	mov	x29, sp
  407408:	str	w0, [sp, #28]
  40740c:	ldr	w0, [sp, #28]
  407410:	bl	407360 <af_bit_len@@Base>
  407414:	add	w1, w0, #0x7
  407418:	cmp	w0, #0x0
  40741c:	csel	w0, w1, w0, lt  // lt = tstop
  407420:	asr	w0, w0, #3
  407424:	ldp	x29, x30, [sp], #32
  407428:	ret

000000000040742c <get_prefix_1@@Base>:
  40742c:	stp	x29, x30, [sp, #-80]!
  407430:	mov	x29, sp
  407434:	str	x0, [sp, #40]
  407438:	str	x1, [sp, #32]
  40743c:	str	w2, [sp, #28]
  407440:	mov	w1, #0x2f                  	// #47
  407444:	ldr	x0, [sp, #32]
  407448:	bl	4050b0 <strchr@plt>
  40744c:	str	x0, [sp, #64]
  407450:	ldr	x0, [sp, #64]
  407454:	cmp	x0, #0x0
  407458:	b.eq	407464 <get_prefix_1@@Base+0x38>  // b.none
  40745c:	ldr	x0, [sp, #64]
  407460:	strb	wzr, [x0]
  407464:	ldr	w2, [sp, #28]
  407468:	ldr	x1, [sp, #32]
  40746c:	ldr	x0, [sp, #40]
  407470:	bl	407310 <get_addr_1@@Base>
  407474:	str	w0, [sp, #60]
  407478:	ldr	x0, [sp, #64]
  40747c:	cmp	x0, #0x0
  407480:	b.eq	407490 <get_prefix_1@@Base+0x64>  // b.none
  407484:	ldr	x0, [sp, #64]
  407488:	mov	w1, #0x2f                  	// #47
  40748c:	strb	w1, [x0]
  407490:	ldr	w0, [sp, #60]
  407494:	cmp	w0, #0x0
  407498:	b.eq	4074a4 <get_prefix_1@@Base+0x78>  // b.none
  40749c:	ldr	w0, [sp, #60]
  4074a0:	b	407580 <get_prefix_1@@Base+0x154>
  4074a4:	ldr	x0, [sp, #40]
  4074a8:	ldrh	w0, [x0, #6]
  4074ac:	bl	407360 <af_bit_len@@Base>
  4074b0:	str	w0, [sp, #76]
  4074b4:	str	wzr, [sp, #72]
  4074b8:	ldr	x0, [sp, #64]
  4074bc:	cmp	x0, #0x0
  4074c0:	b.eq	407530 <get_prefix_1@@Base+0x104>  // b.none
  4074c4:	ldr	x0, [sp, #40]
  4074c8:	ldrsh	w0, [x0, #4]
  4074cc:	cmn	w0, #0x2
  4074d0:	b.ne	4074dc <get_prefix_1@@Base+0xb0>  // b.any
  4074d4:	mov	w0, #0xffffffff            	// #-1
  4074d8:	b	407580 <get_prefix_1@@Base+0x154>
  4074dc:	ldr	x0, [sp, #64]
  4074e0:	add	x1, x0, #0x1
  4074e4:	add	x0, sp, #0x38
  4074e8:	mov	w2, #0x0                   	// #0
  4074ec:	bl	4061fc <mask2bits@@Base+0x78>
  4074f0:	cmp	w0, #0x0
  4074f4:	b.eq	407500 <get_prefix_1@@Base+0xd4>  // b.none
  4074f8:	mov	w0, #0xffffffff            	// #-1
  4074fc:	b	407580 <get_prefix_1@@Base+0x154>
  407500:	ldr	w1, [sp, #56]
  407504:	ldr	w0, [sp, #76]
  407508:	cmp	w1, w0
  40750c:	b.ls	407518 <get_prefix_1@@Base+0xec>  // b.plast
  407510:	mov	w0, #0xffffffff            	// #-1
  407514:	b	407580 <get_prefix_1@@Base+0x154>
  407518:	ldr	w0, [sp, #72]
  40751c:	orr	w0, w0, #0x1
  407520:	str	w0, [sp, #72]
  407524:	ldr	w0, [sp, #56]
  407528:	str	w0, [sp, #76]
  40752c:	b	407544 <get_prefix_1@@Base+0x118>
  407530:	ldr	x0, [sp, #40]
  407534:	ldrsh	w0, [x0, #4]
  407538:	cmn	w0, #0x2
  40753c:	b.ne	407544 <get_prefix_1@@Base+0x118>  // b.any
  407540:	str	wzr, [sp, #76]
  407544:	ldr	x0, [sp, #40]
  407548:	ldrh	w0, [x0]
  40754c:	sxth	w1, w0
  407550:	ldr	w0, [sp, #72]
  407554:	sxth	w0, w0
  407558:	orr	w0, w1, w0
  40755c:	sxth	w0, w0
  407560:	and	w1, w0, #0xffff
  407564:	ldr	x0, [sp, #40]
  407568:	strh	w1, [x0]
  40756c:	ldr	w0, [sp, #76]
  407570:	sxth	w1, w0
  407574:	ldr	x0, [sp, #40]
  407578:	strh	w1, [x0, #4]
  40757c:	mov	w0, #0x0                   	// #0
  407580:	ldp	x29, x30, [sp], #80
  407584:	ret
  407588:	stp	x29, x30, [sp, #-32]!
  40758c:	mov	x29, sp
  407590:	str	w0, [sp, #28]
  407594:	ldr	w0, [sp, #28]
  407598:	cmp	w0, #0x0
  40759c:	b.ne	4075ac <get_prefix_1@@Base+0x180>  // b.any
  4075a0:	adrp	x0, 410000 <addattrstrz@@Base>
  4075a4:	add	x0, x0, #0xf40
  4075a8:	b	4075b4 <get_prefix_1@@Base+0x188>
  4075ac:	ldr	w0, [sp, #28]
  4075b0:	bl	4081dc <family_name@@Base>
  4075b4:	ldp	x29, x30, [sp], #32
  4075b8:	ret

00000000004075bc <get_addr@@Base>:
  4075bc:	stp	x29, x30, [sp, #-64]!
  4075c0:	mov	x29, sp
  4075c4:	str	x19, [sp, #16]
  4075c8:	str	x0, [sp, #56]
  4075cc:	str	x1, [sp, #48]
  4075d0:	str	w2, [sp, #44]
  4075d4:	ldr	w2, [sp, #44]
  4075d8:	ldr	x1, [sp, #48]
  4075dc:	ldr	x0, [sp, #56]
  4075e0:	bl	407310 <get_addr_1@@Base>
  4075e4:	cmp	w0, #0x0
  4075e8:	b.eq	407620 <get_addr@@Base+0x64>  // b.none
  4075ec:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4075f0:	ldr	x0, [x0, #3992]
  4075f4:	ldr	x19, [x0]
  4075f8:	ldr	w0, [sp, #44]
  4075fc:	bl	407588 <get_prefix_1@@Base+0x15c>
  407600:	ldr	x3, [sp, #48]
  407604:	mov	x2, x0
  407608:	adrp	x0, 410000 <addattrstrz@@Base>
  40760c:	add	x1, x0, #0xf50
  407610:	mov	x0, x19
  407614:	bl	405240 <fprintf@plt>
  407618:	mov	w0, #0x1                   	// #1
  40761c:	bl	404d20 <exit@plt>
  407620:	mov	w0, #0x0                   	// #0
  407624:	ldr	x19, [sp, #16]
  407628:	ldp	x29, x30, [sp], #64
  40762c:	ret

0000000000407630 <get_addr_rta@@Base>:
  407630:	stp	x29, x30, [sp, #-64]!
  407634:	mov	x29, sp
  407638:	str	x0, [sp, #40]
  40763c:	str	x1, [sp, #32]
  407640:	str	w2, [sp, #28]
  407644:	ldr	x0, [sp, #32]
  407648:	ldrh	w0, [x0]
  40764c:	sub	w0, w0, #0x4
  407650:	str	w0, [sp, #60]
  407654:	ldr	x0, [sp, #32]
  407658:	add	x0, x0, #0x4
  40765c:	str	x0, [sp, #48]
  407660:	ldr	w0, [sp, #60]
  407664:	cmp	w0, #0x10
  407668:	b.eq	4076d8 <get_addr_rta@@Base+0xa8>  // b.none
  40766c:	ldr	w0, [sp, #60]
  407670:	cmp	w0, #0x10
  407674:	b.gt	407768 <get_addr_rta@@Base+0x138>
  407678:	ldr	w0, [sp, #60]
  40767c:	cmp	w0, #0xa
  407680:	b.eq	407738 <get_addr_rta@@Base+0x108>  // b.none
  407684:	ldr	w0, [sp, #60]
  407688:	cmp	w0, #0xa
  40768c:	b.gt	407768 <get_addr_rta@@Base+0x138>
  407690:	ldr	w0, [sp, #60]
  407694:	cmp	w0, #0x2
  407698:	b.eq	407708 <get_addr_rta@@Base+0xd8>  // b.none
  40769c:	ldr	w0, [sp, #60]
  4076a0:	cmp	w0, #0x4
  4076a4:	b.ne	407768 <get_addr_rta@@Base+0x138>  // b.any
  4076a8:	ldr	x0, [sp, #40]
  4076ac:	mov	w1, #0x2                   	// #2
  4076b0:	strh	w1, [x0, #6]
  4076b4:	ldr	x0, [sp, #40]
  4076b8:	mov	w1, #0x4                   	// #4
  4076bc:	strh	w1, [x0, #2]
  4076c0:	ldr	x0, [sp, #40]
  4076c4:	add	x0, x0, #0x8
  4076c8:	ldr	x1, [sp, #48]
  4076cc:	ldr	w1, [x1]
  4076d0:	str	w1, [x0]
  4076d4:	b	407770 <get_addr_rta@@Base+0x140>
  4076d8:	ldr	x0, [sp, #40]
  4076dc:	mov	w1, #0xa                   	// #10
  4076e0:	strh	w1, [x0, #6]
  4076e4:	ldr	x0, [sp, #40]
  4076e8:	mov	w1, #0x10                  	// #16
  4076ec:	strh	w1, [x0, #2]
  4076f0:	ldr	x0, [sp, #40]
  4076f4:	add	x2, x0, #0x8
  4076f8:	ldr	x0, [sp, #48]
  4076fc:	ldp	x0, x1, [x0]
  407700:	stp	x0, x1, [x2]
  407704:	b	407770 <get_addr_rta@@Base+0x140>
  407708:	ldr	x0, [sp, #40]
  40770c:	mov	w1, #0xc                   	// #12
  407710:	strh	w1, [x0, #6]
  407714:	ldr	x0, [sp, #40]
  407718:	mov	w1, #0x2                   	// #2
  40771c:	strh	w1, [x0, #2]
  407720:	ldr	x0, [sp, #40]
  407724:	add	x0, x0, #0x8
  407728:	ldr	x1, [sp, #48]
  40772c:	ldrh	w1, [x1]
  407730:	strh	w1, [x0]
  407734:	b	407770 <get_addr_rta@@Base+0x140>
  407738:	ldr	x0, [sp, #40]
  40773c:	mov	w1, #0x4                   	// #4
  407740:	strh	w1, [x0, #6]
  407744:	ldr	x0, [sp, #40]
  407748:	mov	w1, #0xa                   	// #10
  40774c:	strh	w1, [x0, #2]
  407750:	ldr	x0, [sp, #40]
  407754:	add	x0, x0, #0x8
  407758:	mov	x2, #0xa                   	// #10
  40775c:	ldr	x1, [sp, #48]
  407760:	bl	404ce0 <memcpy@plt>
  407764:	b	407770 <get_addr_rta@@Base+0x140>
  407768:	mov	w0, #0xffffffff            	// #-1
  40776c:	b	4077bc <get_addr_rta@@Base+0x18c>
  407770:	ldr	w0, [sp, #28]
  407774:	cmp	w0, #0x0
  407778:	b.eq	40779c <get_addr_rta@@Base+0x16c>  // b.none
  40777c:	ldr	x0, [sp, #40]
  407780:	ldrh	w0, [x0, #6]
  407784:	mov	w1, w0
  407788:	ldr	w0, [sp, #28]
  40778c:	cmp	w0, w1
  407790:	b.eq	40779c <get_addr_rta@@Base+0x16c>  // b.none
  407794:	mov	w0, #0xfffffffe            	// #-2
  407798:	b	4077bc <get_addr_rta@@Base+0x18c>
  40779c:	ldr	x0, [sp, #40]
  4077a0:	mov	w1, #0xffffffff            	// #-1
  4077a4:	strh	w1, [x0, #4]
  4077a8:	ldr	x0, [sp, #40]
  4077ac:	strh	wzr, [x0]
  4077b0:	ldr	x0, [sp, #40]
  4077b4:	bl	406e1c <get_addr64@@Base+0xf8>
  4077b8:	mov	w0, #0x0                   	// #0
  4077bc:	ldp	x29, x30, [sp], #64
  4077c0:	ret

00000000004077c4 <get_prefix@@Base>:
  4077c4:	stp	x29, x30, [sp, #-64]!
  4077c8:	mov	x29, sp
  4077cc:	str	x19, [sp, #16]
  4077d0:	str	x0, [sp, #56]
  4077d4:	str	x1, [sp, #48]
  4077d8:	str	w2, [sp, #44]
  4077dc:	ldr	w0, [sp, #44]
  4077e0:	cmp	w0, #0x11
  4077e4:	b.ne	407810 <get_prefix@@Base+0x4c>  // b.any
  4077e8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4077ec:	ldr	x0, [x0, #3992]
  4077f0:	ldr	x3, [x0]
  4077f4:	ldr	x2, [sp, #48]
  4077f8:	adrp	x0, 410000 <addattrstrz@@Base>
  4077fc:	add	x1, x0, #0xf88
  407800:	mov	x0, x3
  407804:	bl	405240 <fprintf@plt>
  407808:	mov	w0, #0x1                   	// #1
  40780c:	bl	404d20 <exit@plt>
  407810:	ldr	w2, [sp, #44]
  407814:	ldr	x1, [sp, #48]
  407818:	ldr	x0, [sp, #56]
  40781c:	bl	40742c <get_prefix_1@@Base>
  407820:	cmp	w0, #0x0
  407824:	b.eq	40785c <get_prefix@@Base+0x98>  // b.none
  407828:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40782c:	ldr	x0, [x0, #3992]
  407830:	ldr	x19, [x0]
  407834:	ldr	w0, [sp, #44]
  407838:	bl	407588 <get_prefix_1@@Base+0x15c>
  40783c:	ldr	x3, [sp, #48]
  407840:	mov	x2, x0
  407844:	adrp	x0, 410000 <addattrstrz@@Base>
  407848:	add	x1, x0, #0xfd0
  40784c:	mov	x0, x19
  407850:	bl	405240 <fprintf@plt>
  407854:	mov	w0, #0x1                   	// #1
  407858:	bl	404d20 <exit@plt>
  40785c:	mov	w0, #0x0                   	// #0
  407860:	ldr	x19, [sp, #16]
  407864:	ldp	x29, x30, [sp], #64
  407868:	ret

000000000040786c <get_addr32@@Base>:
  40786c:	stp	x29, x30, [sp, #-304]!
  407870:	mov	x29, sp
  407874:	str	x0, [sp, #24]
  407878:	add	x0, sp, #0x28
  40787c:	mov	w2, #0x2                   	// #2
  407880:	ldr	x1, [sp, #24]
  407884:	bl	407310 <get_addr_1@@Base>
  407888:	cmp	w0, #0x0
  40788c:	b.eq	4078b8 <get_addr32@@Base+0x4c>  // b.none
  407890:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  407894:	ldr	x0, [x0, #3992]
  407898:	ldr	x3, [x0]
  40789c:	ldr	x2, [sp, #24]
  4078a0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4078a4:	add	x1, x0, #0x0
  4078a8:	mov	x0, x3
  4078ac:	bl	405240 <fprintf@plt>
  4078b0:	mov	w0, #0x1                   	// #1
  4078b4:	bl	404d20 <exit@plt>
  4078b8:	ldr	w0, [sp, #48]
  4078bc:	ldp	x29, x30, [sp], #304
  4078c0:	ret

00000000004078c4 <incomplete_command@@Base>:
  4078c4:	stp	x29, x30, [sp, #-16]!
  4078c8:	mov	x29, sp
  4078cc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4078d0:	ldr	x0, [x0, #3992]
  4078d4:	ldr	x0, [x0]
  4078d8:	mov	x3, x0
  4078dc:	mov	x2, #0x30                  	// #48
  4078e0:	mov	x1, #0x1                   	// #1
  4078e4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4078e8:	add	x0, x0, #0x38
  4078ec:	bl	4050d0 <fwrite@plt>
  4078f0:	mov	w0, #0xffffffff            	// #-1
  4078f4:	bl	404d20 <exit@plt>

00000000004078f8 <missarg@@Base>:
  4078f8:	stp	x29, x30, [sp, #-32]!
  4078fc:	mov	x29, sp
  407900:	str	x0, [sp, #24]
  407904:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  407908:	ldr	x0, [x0, #3992]
  40790c:	ldr	x3, [x0]
  407910:	ldr	x2, [sp, #24]
  407914:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407918:	add	x1, x0, #0x70
  40791c:	mov	x0, x3
  407920:	bl	405240 <fprintf@plt>
  407924:	mov	w0, #0xffffffff            	// #-1
  407928:	bl	404d20 <exit@plt>

000000000040792c <invarg@@Base>:
  40792c:	stp	x29, x30, [sp, #-32]!
  407930:	mov	x29, sp
  407934:	str	x0, [sp, #24]
  407938:	str	x1, [sp, #16]
  40793c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  407940:	ldr	x0, [x0, #3992]
  407944:	ldr	x4, [x0]
  407948:	ldr	x3, [sp, #24]
  40794c:	ldr	x2, [sp, #16]
  407950:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407954:	add	x1, x0, #0x98
  407958:	mov	x0, x4
  40795c:	bl	405240 <fprintf@plt>
  407960:	mov	w0, #0xffffffff            	// #-1
  407964:	bl	404d20 <exit@plt>

0000000000407968 <duparg@@Base>:
  407968:	stp	x29, x30, [sp, #-32]!
  40796c:	mov	x29, sp
  407970:	str	x0, [sp, #24]
  407974:	str	x1, [sp, #16]
  407978:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40797c:	ldr	x0, [x0, #3992]
  407980:	ldr	x4, [x0]
  407984:	ldr	x3, [sp, #16]
  407988:	ldr	x2, [sp, #24]
  40798c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407990:	add	x1, x0, #0xc0
  407994:	mov	x0, x4
  407998:	bl	405240 <fprintf@plt>
  40799c:	mov	w0, #0xffffffff            	// #-1
  4079a0:	bl	404d20 <exit@plt>

00000000004079a4 <duparg2@@Base>:
  4079a4:	stp	x29, x30, [sp, #-32]!
  4079a8:	mov	x29, sp
  4079ac:	str	x0, [sp, #24]
  4079b0:	str	x1, [sp, #16]
  4079b4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4079b8:	ldr	x0, [x0, #3992]
  4079bc:	ldr	x4, [x0]
  4079c0:	ldr	x3, [sp, #16]
  4079c4:	ldr	x2, [sp, #24]
  4079c8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4079cc:	add	x1, x0, #0xf8
  4079d0:	mov	x0, x4
  4079d4:	bl	405240 <fprintf@plt>
  4079d8:	mov	w0, #0xffffffff            	// #-1
  4079dc:	bl	404d20 <exit@plt>

00000000004079e0 <nodev@@Base>:
  4079e0:	stp	x29, x30, [sp, #-32]!
  4079e4:	mov	x29, sp
  4079e8:	str	x0, [sp, #24]
  4079ec:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4079f0:	ldr	x0, [x0, #3992]
  4079f4:	ldr	x3, [x0]
  4079f8:	ldr	x2, [sp, #24]
  4079fc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407a00:	add	x1, x0, #0x130
  407a04:	mov	x0, x3
  407a08:	bl	405240 <fprintf@plt>
  407a0c:	mov	w0, #0xffffffff            	// #-1
  407a10:	ldp	x29, x30, [sp], #32
  407a14:	ret
  407a18:	stp	x29, x30, [sp, #-32]!
  407a1c:	mov	x29, sp
  407a20:	str	x0, [sp, #24]
  407a24:	ldr	x0, [sp, #24]
  407a28:	ldrb	w0, [x0]
  407a2c:	cmp	w0, #0x0
  407a30:	b.ne	407a8c <nodev@@Base+0xac>  // b.any
  407a34:	mov	w0, #0xffffffff            	// #-1
  407a38:	b	407aa0 <nodev@@Base+0xc0>
  407a3c:	ldr	x0, [sp, #24]
  407a40:	ldrb	w0, [x0]
  407a44:	cmp	w0, #0x2f
  407a48:	b.eq	407a78 <nodev@@Base+0x98>  // b.none
  407a4c:	bl	405010 <__ctype_b_loc@plt>
  407a50:	ldr	x1, [x0]
  407a54:	ldr	x0, [sp, #24]
  407a58:	ldrb	w0, [x0]
  407a5c:	and	x0, x0, #0xff
  407a60:	lsl	x0, x0, #1
  407a64:	add	x0, x1, x0
  407a68:	ldrh	w0, [x0]
  407a6c:	and	w0, w0, #0x2000
  407a70:	cmp	w0, #0x0
  407a74:	b.eq	407a80 <nodev@@Base+0xa0>  // b.none
  407a78:	mov	w0, #0xffffffff            	// #-1
  407a7c:	b	407aa0 <nodev@@Base+0xc0>
  407a80:	ldr	x0, [sp, #24]
  407a84:	add	x0, x0, #0x1
  407a88:	str	x0, [sp, #24]
  407a8c:	ldr	x0, [sp, #24]
  407a90:	ldrb	w0, [x0]
  407a94:	cmp	w0, #0x0
  407a98:	b.ne	407a3c <nodev@@Base+0x5c>  // b.any
  407a9c:	mov	w0, #0x0                   	// #0
  407aa0:	ldp	x29, x30, [sp], #32
  407aa4:	ret

0000000000407aa8 <check_ifname@@Base>:
  407aa8:	stp	x29, x30, [sp, #-32]!
  407aac:	mov	x29, sp
  407ab0:	str	x0, [sp, #24]
  407ab4:	ldr	x0, [sp, #24]
  407ab8:	bl	404d10 <strlen@plt>
  407abc:	cmp	x0, #0xf
  407ac0:	b.ls	407acc <check_ifname@@Base+0x24>  // b.plast
  407ac4:	mov	w0, #0xffffffff            	// #-1
  407ac8:	b	407ad4 <check_ifname@@Base+0x2c>
  407acc:	ldr	x0, [sp, #24]
  407ad0:	bl	407a18 <nodev@@Base+0x38>
  407ad4:	ldp	x29, x30, [sp], #32
  407ad8:	ret

0000000000407adc <check_altifname@@Base>:
  407adc:	stp	x29, x30, [sp, #-32]!
  407ae0:	mov	x29, sp
  407ae4:	str	x0, [sp, #24]
  407ae8:	ldr	x0, [sp, #24]
  407aec:	bl	407a18 <nodev@@Base+0x38>
  407af0:	ldp	x29, x30, [sp], #32
  407af4:	ret

0000000000407af8 <get_ifname@@Base>:
  407af8:	stp	x29, x30, [sp, #-48]!
  407afc:	mov	x29, sp
  407b00:	str	x0, [sp, #24]
  407b04:	str	x1, [sp, #16]
  407b08:	ldr	x0, [sp, #16]
  407b0c:	bl	407aa8 <check_ifname@@Base>
  407b10:	str	w0, [sp, #44]
  407b14:	ldr	w0, [sp, #44]
  407b18:	cmp	w0, #0x0
  407b1c:	b.ne	407b30 <get_ifname@@Base+0x38>  // b.any
  407b20:	mov	x2, #0x10                  	// #16
  407b24:	ldr	x1, [sp, #16]
  407b28:	ldr	x0, [sp, #24]
  407b2c:	bl	4051b0 <strncpy@plt>
  407b30:	ldr	w0, [sp, #44]
  407b34:	ldp	x29, x30, [sp], #48
  407b38:	ret

0000000000407b3c <get_ifname_rta@@Base>:
  407b3c:	stp	x29, x30, [sp, #-48]!
  407b40:	mov	x29, sp
  407b44:	str	w0, [sp, #28]
  407b48:	str	x1, [sp, #16]
  407b4c:	ldr	x0, [sp, #16]
  407b50:	cmp	x0, #0x0
  407b54:	b.eq	407b68 <get_ifname_rta@@Base+0x2c>  // b.none
  407b58:	ldr	x0, [sp, #16]
  407b5c:	bl	405cc4 <main@@Base+0x69c>
  407b60:	str	x0, [sp, #40]
  407b64:	b	407b94 <get_ifname_rta@@Base+0x58>
  407b68:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  407b6c:	ldr	x0, [x0, #3992]
  407b70:	ldr	x3, [x0]
  407b74:	ldr	w2, [sp, #28]
  407b78:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407b7c:	add	x1, x0, #0x150
  407b80:	mov	x0, x3
  407b84:	bl	405240 <fprintf@plt>
  407b88:	ldr	w0, [sp, #28]
  407b8c:	bl	40a7ec <ll_idx_n2a@@Base>
  407b90:	str	x0, [sp, #40]
  407b94:	ldr	x0, [sp, #40]
  407b98:	bl	407aa8 <check_ifname@@Base>
  407b9c:	cmp	w0, #0x0
  407ba0:	b.eq	407bac <get_ifname_rta@@Base+0x70>  // b.none
  407ba4:	mov	x0, #0x0                   	// #0
  407ba8:	b	407bb0 <get_ifname_rta@@Base+0x74>
  407bac:	ldr	x0, [sp, #40]
  407bb0:	ldp	x29, x30, [sp], #48
  407bb4:	ret

0000000000407bb8 <matches@@Base>:
  407bb8:	sub	sp, sp, #0x10
  407bbc:	str	x0, [sp, #8]
  407bc0:	str	x1, [sp]
  407bc4:	ldr	x0, [sp, #8]
  407bc8:	ldrb	w0, [x0]
  407bcc:	cmp	w0, #0x0
  407bd0:	b.ne	407bf4 <matches@@Base+0x3c>  // b.any
  407bd4:	mov	w0, #0x1                   	// #1
  407bd8:	b	407c30 <matches@@Base+0x78>
  407bdc:	ldr	x0, [sp, #8]
  407be0:	add	x0, x0, #0x1
  407be4:	str	x0, [sp, #8]
  407be8:	ldr	x0, [sp]
  407bec:	add	x0, x0, #0x1
  407bf0:	str	x0, [sp]
  407bf4:	ldr	x0, [sp]
  407bf8:	ldrb	w0, [x0]
  407bfc:	cmp	w0, #0x0
  407c00:	b.eq	407c1c <matches@@Base+0x64>  // b.none
  407c04:	ldr	x0, [sp, #8]
  407c08:	ldrb	w1, [x0]
  407c0c:	ldr	x0, [sp]
  407c10:	ldrb	w0, [x0]
  407c14:	cmp	w1, w0
  407c18:	b.eq	407bdc <matches@@Base+0x24>  // b.none
  407c1c:	ldr	x0, [sp, #8]
  407c20:	ldrb	w0, [x0]
  407c24:	cmp	w0, #0x0
  407c28:	cset	w0, ne  // ne = any
  407c2c:	and	w0, w0, #0xff
  407c30:	add	sp, sp, #0x10
  407c34:	ret

0000000000407c38 <inet_addr_match@@Base>:
  407c38:	stp	x29, x30, [sp, #-80]!
  407c3c:	mov	x29, sp
  407c40:	str	x0, [sp, #40]
  407c44:	str	x1, [sp, #32]
  407c48:	str	w2, [sp, #28]
  407c4c:	ldr	x0, [sp, #40]
  407c50:	add	x0, x0, #0x8
  407c54:	str	x0, [sp, #72]
  407c58:	ldr	x0, [sp, #32]
  407c5c:	add	x0, x0, #0x8
  407c60:	str	x0, [sp, #64]
  407c64:	ldr	w0, [sp, #28]
  407c68:	asr	w0, w0, #5
  407c6c:	str	w0, [sp, #60]
  407c70:	ldr	w0, [sp, #28]
  407c74:	and	w0, w0, #0x1f
  407c78:	str	w0, [sp, #28]
  407c7c:	ldr	w0, [sp, #60]
  407c80:	cmp	w0, #0x0
  407c84:	b.eq	407cb4 <inet_addr_match@@Base+0x7c>  // b.none
  407c88:	ldr	w0, [sp, #60]
  407c8c:	lsl	w0, w0, #2
  407c90:	sxtw	x0, w0
  407c94:	mov	x2, x0
  407c98:	ldr	x1, [sp, #64]
  407c9c:	ldr	x0, [sp, #72]
  407ca0:	bl	404ff0 <memcmp@plt>
  407ca4:	cmp	w0, #0x0
  407ca8:	b.eq	407cb4 <inet_addr_match@@Base+0x7c>  // b.none
  407cac:	mov	w0, #0xffffffff            	// #-1
  407cb0:	b	407d34 <inet_addr_match@@Base+0xfc>
  407cb4:	ldr	w0, [sp, #28]
  407cb8:	cmp	w0, #0x0
  407cbc:	b.eq	407d30 <inet_addr_match@@Base+0xf8>  // b.none
  407cc0:	ldrsw	x0, [sp, #60]
  407cc4:	lsl	x0, x0, #2
  407cc8:	ldr	x1, [sp, #72]
  407ccc:	add	x0, x1, x0
  407cd0:	ldr	w0, [x0]
  407cd4:	str	w0, [sp, #56]
  407cd8:	ldrsw	x0, [sp, #60]
  407cdc:	lsl	x0, x0, #2
  407ce0:	ldr	x1, [sp, #64]
  407ce4:	add	x0, x1, x0
  407ce8:	ldr	w0, [x0]
  407cec:	str	w0, [sp, #52]
  407cf0:	mov	w1, #0x20                  	// #32
  407cf4:	ldr	w0, [sp, #28]
  407cf8:	sub	w0, w1, w0
  407cfc:	mov	w1, #0xffffffff            	// #-1
  407d00:	lsl	w0, w1, w0
  407d04:	bl	404d50 <htonl@plt>
  407d08:	str	w0, [sp, #48]
  407d0c:	ldr	w1, [sp, #56]
  407d10:	ldr	w0, [sp, #52]
  407d14:	eor	w1, w1, w0
  407d18:	ldr	w0, [sp, #48]
  407d1c:	and	w0, w1, w0
  407d20:	cmp	w0, #0x0
  407d24:	b.eq	407d30 <inet_addr_match@@Base+0xf8>  // b.none
  407d28:	mov	w0, #0x1                   	// #1
  407d2c:	b	407d34 <inet_addr_match@@Base+0xfc>
  407d30:	mov	w0, #0x0                   	// #0
  407d34:	ldp	x29, x30, [sp], #80
  407d38:	ret

0000000000407d3c <inet_addr_match_rta@@Base>:
  407d3c:	stp	x29, x30, [sp, #-304]!
  407d40:	mov	x29, sp
  407d44:	str	x0, [sp, #24]
  407d48:	str	x1, [sp, #16]
  407d4c:	ldr	x0, [sp, #16]
  407d50:	cmp	x0, #0x0
  407d54:	b.eq	407d78 <inet_addr_match_rta@@Base+0x3c>  // b.none
  407d58:	ldr	x0, [sp, #24]
  407d5c:	ldrh	w0, [x0, #6]
  407d60:	cmp	w0, #0x0
  407d64:	b.eq	407d78 <inet_addr_match_rta@@Base+0x3c>  // b.none
  407d68:	ldr	x0, [sp, #24]
  407d6c:	ldrsh	w0, [x0, #4]
  407d70:	cmp	w0, #0x0
  407d74:	b.gt	407d80 <inet_addr_match_rta@@Base+0x44>
  407d78:	mov	w0, #0x0                   	// #0
  407d7c:	b	407dc8 <inet_addr_match_rta@@Base+0x8c>
  407d80:	ldr	x0, [sp, #24]
  407d84:	ldrh	w0, [x0, #6]
  407d88:	mov	w1, w0
  407d8c:	add	x0, sp, #0x28
  407d90:	mov	w2, w1
  407d94:	ldr	x1, [sp, #16]
  407d98:	bl	407630 <get_addr_rta@@Base>
  407d9c:	cmp	w0, #0x0
  407da0:	b.eq	407dac <inet_addr_match_rta@@Base+0x70>  // b.none
  407da4:	mov	w0, #0xffffffff            	// #-1
  407da8:	b	407dc8 <inet_addr_match_rta@@Base+0x8c>
  407dac:	ldr	x0, [sp, #24]
  407db0:	ldrsh	w0, [x0, #4]
  407db4:	mov	w1, w0
  407db8:	add	x0, sp, #0x28
  407dbc:	mov	w2, w1
  407dc0:	ldr	x1, [sp, #24]
  407dc4:	bl	407c38 <inet_addr_match@@Base>
  407dc8:	ldp	x29, x30, [sp], #304
  407dcc:	ret

0000000000407dd0 <__get_hz@@Base>:
  407dd0:	sub	sp, sp, #0x430
  407dd4:	stp	x29, x30, [sp]
  407dd8:	mov	x29, sp
  407ddc:	str	wzr, [sp, #1068]
  407de0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407de4:	add	x0, x0, #0x180
  407de8:	bl	405210 <getenv@plt>
  407dec:	cmp	x0, #0x0
  407df0:	b.eq	407e14 <__get_hz@@Base+0x44>  // b.none
  407df4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407df8:	add	x0, x0, #0x180
  407dfc:	bl	405210 <getenv@plt>
  407e00:	bl	404e60 <atoi@plt>
  407e04:	cmp	w0, #0x0
  407e08:	b.ne	407f40 <__get_hz@@Base+0x170>  // b.any
  407e0c:	mov	w0, #0x64                  	// #100
  407e10:	b	407f40 <__get_hz@@Base+0x170>
  407e14:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407e18:	add	x0, x0, #0x188
  407e1c:	bl	405210 <getenv@plt>
  407e20:	cmp	x0, #0x0
  407e24:	b.eq	407e54 <__get_hz@@Base+0x84>  // b.none
  407e28:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407e2c:	add	x0, x0, #0x188
  407e30:	bl	405210 <getenv@plt>
  407e34:	add	x4, sp, #0x20
  407e38:	mov	x3, x0
  407e3c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407e40:	add	x2, x0, #0x198
  407e44:	mov	x1, #0x3ff                 	// #1023
  407e48:	mov	x0, x4
  407e4c:	bl	404e20 <snprintf@plt>
  407e50:	b	407eb8 <__get_hz@@Base+0xe8>
  407e54:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407e58:	add	x0, x0, #0x1a0
  407e5c:	bl	405210 <getenv@plt>
  407e60:	cmp	x0, #0x0
  407e64:	b.eq	407e94 <__get_hz@@Base+0xc4>  // b.none
  407e68:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407e6c:	add	x0, x0, #0x1a0
  407e70:	bl	405210 <getenv@plt>
  407e74:	add	x4, sp, #0x20
  407e78:	mov	x3, x0
  407e7c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407e80:	add	x2, x0, #0x1b0
  407e84:	mov	x1, #0x3ff                 	// #1023
  407e88:	mov	x0, x4
  407e8c:	bl	404e20 <snprintf@plt>
  407e90:	b	407eb8 <__get_hz@@Base+0xe8>
  407e94:	add	x1, sp, #0x20
  407e98:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407e9c:	add	x0, x0, #0x1c0
  407ea0:	mov	x2, x1
  407ea4:	mov	x3, x0
  407ea8:	ldp	x0, x1, [x3]
  407eac:	stp	x0, x1, [x2]
  407eb0:	ldrb	w0, [x3, #16]
  407eb4:	strb	w0, [x2, #16]
  407eb8:	add	x2, sp, #0x20
  407ebc:	adrp	x0, 410000 <addattrstrz@@Base>
  407ec0:	add	x1, x0, #0xe60
  407ec4:	mov	x0, x2
  407ec8:	bl	405110 <fopen64@plt>
  407ecc:	str	x0, [sp, #1056]
  407ed0:	ldr	x0, [sp, #1056]
  407ed4:	cmp	x0, #0x0
  407ed8:	b.eq	407f28 <__get_hz@@Base+0x158>  // b.none
  407edc:	add	x1, sp, #0x18
  407ee0:	add	x0, sp, #0x1c
  407ee4:	mov	x3, x1
  407ee8:	mov	x2, x0
  407eec:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  407ef0:	add	x1, x0, #0x1d8
  407ef4:	ldr	x0, [sp, #1056]
  407ef8:	bl	404eb0 <__isoc99_fscanf@plt>
  407efc:	cmp	w0, #0x2
  407f00:	b.ne	407f20 <__get_hz@@Base+0x150>  // b.any
  407f04:	ldr	w1, [sp, #28]
  407f08:	mov	w0, #0x4240                	// #16960
  407f0c:	movk	w0, #0xf, lsl #16
  407f10:	cmp	w1, w0
  407f14:	b.ne	407f20 <__get_hz@@Base+0x150>  // b.any
  407f18:	ldr	w0, [sp, #24]
  407f1c:	str	w0, [sp, #1068]
  407f20:	ldr	x0, [sp, #1056]
  407f24:	bl	404e50 <fclose@plt>
  407f28:	ldr	w0, [sp, #1068]
  407f2c:	cmp	w0, #0x0
  407f30:	b.eq	407f3c <__get_hz@@Base+0x16c>  // b.none
  407f34:	ldr	w0, [sp, #1068]
  407f38:	b	407f40 <__get_hz@@Base+0x170>
  407f3c:	mov	w0, #0x64                  	// #100
  407f40:	ldp	x29, x30, [sp]
  407f44:	add	sp, sp, #0x430
  407f48:	ret

0000000000407f4c <__get_user_hz@@Base>:
  407f4c:	stp	x29, x30, [sp, #-16]!
  407f50:	mov	x29, sp
  407f54:	mov	w0, #0x2                   	// #2
  407f58:	bl	405140 <sysconf@plt>
  407f5c:	ldp	x29, x30, [sp], #16
  407f60:	ret

0000000000407f64 <rt_addr_n2a_r@@Base>:
  407f64:	stp	x29, x30, [sp, #-64]!
  407f68:	mov	x29, sp
  407f6c:	str	w0, [sp, #44]
  407f70:	str	w1, [sp, #40]
  407f74:	str	x2, [sp, #32]
  407f78:	str	x3, [sp, #24]
  407f7c:	str	w4, [sp, #20]
  407f80:	ldr	w0, [sp, #44]
  407f84:	cmp	w0, #0x1c
  407f88:	b.eq	408000 <rt_addr_n2a_r@@Base+0x9c>  // b.none
  407f8c:	ldr	w0, [sp, #44]
  407f90:	cmp	w0, #0x1c
  407f94:	b.gt	4080a4 <rt_addr_n2a_r@@Base+0x140>
  407f98:	ldr	w0, [sp, #44]
  407f9c:	cmp	w0, #0x11
  407fa0:	b.eq	40801c <rt_addr_n2a_r@@Base+0xb8>  // b.none
  407fa4:	ldr	w0, [sp, #44]
  407fa8:	cmp	w0, #0x11
  407fac:	b.gt	4080a4 <rt_addr_n2a_r@@Base+0x140>
  407fb0:	ldr	w0, [sp, #44]
  407fb4:	cmp	w0, #0xa
  407fb8:	b.eq	407fe4 <rt_addr_n2a_r@@Base+0x80>  // b.none
  407fbc:	ldr	w0, [sp, #44]
  407fc0:	cmp	w0, #0xa
  407fc4:	b.gt	4080a4 <rt_addr_n2a_r@@Base+0x140>
  407fc8:	ldr	w0, [sp, #44]
  407fcc:	cmp	w0, #0x2
  407fd0:	b.eq	407fe4 <rt_addr_n2a_r@@Base+0x80>  // b.none
  407fd4:	ldr	w0, [sp, #44]
  407fd8:	cmp	w0, #0x7
  407fdc:	b.eq	408038 <rt_addr_n2a_r@@Base+0xd4>  // b.none
  407fe0:	b	4080a4 <rt_addr_n2a_r@@Base+0x140>
  407fe4:	ldr	w0, [sp, #20]
  407fe8:	mov	w3, w0
  407fec:	ldr	x2, [sp, #24]
  407ff0:	ldr	x1, [sp, #32]
  407ff4:	ldr	w0, [sp, #44]
  407ff8:	bl	405260 <inet_ntop@plt>
  407ffc:	b	4080ac <rt_addr_n2a_r@@Base+0x148>
  408000:	ldrsw	x0, [sp, #20]
  408004:	mov	x3, x0
  408008:	ldr	x2, [sp, #24]
  40800c:	ldr	x1, [sp, #32]
  408010:	ldr	w0, [sp, #44]
  408014:	bl	40c868 <mpls_ntop@@Base>
  408018:	b	4080ac <rt_addr_n2a_r@@Base+0x148>
  40801c:	ldr	w4, [sp, #20]
  408020:	ldr	x3, [sp, #24]
  408024:	mov	w2, #0xffff                	// #65535
  408028:	ldr	w1, [sp, #40]
  40802c:	ldr	x0, [sp, #32]
  408030:	bl	40acc8 <ll_addr_n2a@@Base>
  408034:	b	4080ac <rt_addr_n2a_r@@Base+0x148>
  408038:	ldr	x0, [sp, #32]
  40803c:	str	x0, [sp, #56]
  408040:	ldr	x0, [sp, #56]
  408044:	ldrh	w0, [x0]
  408048:	cmp	w0, #0x2
  40804c:	b.eq	40805c <rt_addr_n2a_r@@Base+0xf8>  // b.none
  408050:	cmp	w0, #0xa
  408054:	b.eq	408080 <rt_addr_n2a_r@@Base+0x11c>  // b.none
  408058:	b	4080a4 <rt_addr_n2a_r@@Base+0x140>
  40805c:	ldr	x0, [sp, #56]
  408060:	add	x0, x0, #0x4
  408064:	ldr	w1, [sp, #20]
  408068:	mov	w3, w1
  40806c:	ldr	x2, [sp, #24]
  408070:	mov	x1, x0
  408074:	mov	w0, #0x2                   	// #2
  408078:	bl	405260 <inet_ntop@plt>
  40807c:	b	4080ac <rt_addr_n2a_r@@Base+0x148>
  408080:	ldr	x0, [sp, #56]
  408084:	add	x0, x0, #0x8
  408088:	ldr	w1, [sp, #20]
  40808c:	mov	w3, w1
  408090:	ldr	x2, [sp, #24]
  408094:	mov	x1, x0
  408098:	mov	w0, #0xa                   	// #10
  40809c:	bl	405260 <inet_ntop@plt>
  4080a0:	b	4080ac <rt_addr_n2a_r@@Base+0x148>
  4080a4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4080a8:	add	x0, x0, #0x1f0
  4080ac:	ldp	x29, x30, [sp], #64
  4080b0:	ret

00000000004080b4 <rt_addr_n2a@@Base>:
  4080b4:	stp	x29, x30, [sp, #-32]!
  4080b8:	mov	x29, sp
  4080bc:	str	w0, [sp, #28]
  4080c0:	str	w1, [sp, #24]
  4080c4:	str	x2, [sp, #16]
  4080c8:	mov	w4, #0x100                 	// #256
  4080cc:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  4080d0:	add	x3, x0, #0xb48
  4080d4:	ldr	x2, [sp, #16]
  4080d8:	ldr	w1, [sp, #24]
  4080dc:	ldr	w0, [sp, #28]
  4080e0:	bl	407f64 <rt_addr_n2a_r@@Base>
  4080e4:	ldp	x29, x30, [sp], #32
  4080e8:	ret

00000000004080ec <read_family@@Base>:
  4080ec:	stp	x29, x30, [sp, #-48]!
  4080f0:	mov	x29, sp
  4080f4:	str	x0, [sp, #24]
  4080f8:	str	wzr, [sp, #44]
  4080fc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408100:	add	x1, x0, #0x1f8
  408104:	ldr	x0, [sp, #24]
  408108:	bl	405000 <strcmp@plt>
  40810c:	cmp	w0, #0x0
  408110:	b.ne	408120 <read_family@@Base+0x34>  // b.any
  408114:	mov	w0, #0x2                   	// #2
  408118:	str	w0, [sp, #44]
  40811c:	b	4081d0 <read_family@@Base+0xe4>
  408120:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408124:	add	x1, x0, #0x200
  408128:	ldr	x0, [sp, #24]
  40812c:	bl	405000 <strcmp@plt>
  408130:	cmp	w0, #0x0
  408134:	b.ne	408144 <read_family@@Base+0x58>  // b.any
  408138:	mov	w0, #0xa                   	// #10
  40813c:	str	w0, [sp, #44]
  408140:	b	4081d0 <read_family@@Base+0xe4>
  408144:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408148:	add	x1, x0, #0x208
  40814c:	ldr	x0, [sp, #24]
  408150:	bl	405000 <strcmp@plt>
  408154:	cmp	w0, #0x0
  408158:	b.ne	408168 <read_family@@Base+0x7c>  // b.any
  40815c:	mov	w0, #0x11                  	// #17
  408160:	str	w0, [sp, #44]
  408164:	b	4081d0 <read_family@@Base+0xe4>
  408168:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40816c:	add	x1, x0, #0x210
  408170:	ldr	x0, [sp, #24]
  408174:	bl	405000 <strcmp@plt>
  408178:	cmp	w0, #0x0
  40817c:	b.ne	40818c <read_family@@Base+0xa0>  // b.any
  408180:	mov	w0, #0x4                   	// #4
  408184:	str	w0, [sp, #44]
  408188:	b	4081d0 <read_family@@Base+0xe4>
  40818c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408190:	add	x1, x0, #0x218
  408194:	ldr	x0, [sp, #24]
  408198:	bl	405000 <strcmp@plt>
  40819c:	cmp	w0, #0x0
  4081a0:	b.ne	4081b0 <read_family@@Base+0xc4>  // b.any
  4081a4:	mov	w0, #0x1c                  	// #28
  4081a8:	str	w0, [sp, #44]
  4081ac:	b	4081d0 <read_family@@Base+0xe4>
  4081b0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4081b4:	add	x1, x0, #0x220
  4081b8:	ldr	x0, [sp, #24]
  4081bc:	bl	405000 <strcmp@plt>
  4081c0:	cmp	w0, #0x0
  4081c4:	b.ne	4081d0 <read_family@@Base+0xe4>  // b.any
  4081c8:	mov	w0, #0x7                   	// #7
  4081cc:	str	w0, [sp, #44]
  4081d0:	ldr	w0, [sp, #44]
  4081d4:	ldp	x29, x30, [sp], #48
  4081d8:	ret

00000000004081dc <family_name@@Base>:
  4081dc:	sub	sp, sp, #0x10
  4081e0:	str	w0, [sp, #12]
  4081e4:	ldr	w0, [sp, #12]
  4081e8:	cmp	w0, #0x2
  4081ec:	b.ne	4081fc <family_name@@Base+0x20>  // b.any
  4081f0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4081f4:	add	x0, x0, #0x1f8
  4081f8:	b	40827c <family_name@@Base+0xa0>
  4081fc:	ldr	w0, [sp, #12]
  408200:	cmp	w0, #0xa
  408204:	b.ne	408214 <family_name@@Base+0x38>  // b.any
  408208:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40820c:	add	x0, x0, #0x200
  408210:	b	40827c <family_name@@Base+0xa0>
  408214:	ldr	w0, [sp, #12]
  408218:	cmp	w0, #0x11
  40821c:	b.ne	40822c <family_name@@Base+0x50>  // b.any
  408220:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408224:	add	x0, x0, #0x208
  408228:	b	40827c <family_name@@Base+0xa0>
  40822c:	ldr	w0, [sp, #12]
  408230:	cmp	w0, #0x4
  408234:	b.ne	408244 <family_name@@Base+0x68>  // b.any
  408238:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40823c:	add	x0, x0, #0x210
  408240:	b	40827c <family_name@@Base+0xa0>
  408244:	ldr	w0, [sp, #12]
  408248:	cmp	w0, #0x1c
  40824c:	b.ne	40825c <family_name@@Base+0x80>  // b.any
  408250:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408254:	add	x0, x0, #0x218
  408258:	b	40827c <family_name@@Base+0xa0>
  40825c:	ldr	w0, [sp, #12]
  408260:	cmp	w0, #0x7
  408264:	b.ne	408274 <family_name@@Base+0x98>  // b.any
  408268:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40826c:	add	x0, x0, #0x220
  408270:	b	40827c <family_name@@Base+0xa0>
  408274:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408278:	add	x0, x0, #0x1f0
  40827c:	add	sp, sp, #0x10
  408280:	ret
  408284:	stp	x29, x30, [sp, #-80]!
  408288:	mov	x29, sp
  40828c:	str	x19, [sp, #16]
  408290:	str	x0, [sp, #40]
  408294:	str	w1, [sp, #36]
  408298:	str	w2, [sp, #32]
  40829c:	ldr	w0, [sp, #32]
  4082a0:	cmp	w0, #0xa
  4082a4:	b.ne	408304 <family_name@@Base+0x128>  // b.any
  4082a8:	ldr	x0, [sp, #40]
  4082ac:	ldr	w0, [x0]
  4082b0:	cmp	w0, #0x0
  4082b4:	b.ne	408304 <family_name@@Base+0x128>  // b.any
  4082b8:	ldr	x0, [sp, #40]
  4082bc:	add	x0, x0, #0x4
  4082c0:	ldr	w0, [x0]
  4082c4:	cmp	w0, #0x0
  4082c8:	b.ne	408304 <family_name@@Base+0x128>  // b.any
  4082cc:	ldr	x0, [sp, #40]
  4082d0:	add	x0, x0, #0x8
  4082d4:	ldr	w19, [x0]
  4082d8:	mov	w0, #0xffff                	// #65535
  4082dc:	bl	404d50 <htonl@plt>
  4082e0:	cmp	w19, w0
  4082e4:	b.ne	408304 <family_name@@Base+0x128>  // b.any
  4082e8:	mov	w0, #0x2                   	// #2
  4082ec:	str	w0, [sp, #32]
  4082f0:	ldr	x0, [sp, #40]
  4082f4:	add	x0, x0, #0xc
  4082f8:	str	x0, [sp, #40]
  4082fc:	mov	w0, #0x4                   	// #4
  408300:	str	w0, [sp, #36]
  408304:	ldrsw	x0, [sp, #36]
  408308:	sub	x0, x0, #0x4
  40830c:	ldr	x1, [sp, #40]
  408310:	add	x0, x1, x0
  408314:	ldr	w1, [x0]
  408318:	mov	w0, #0xff01                	// #65281
  40831c:	movk	w0, #0xff00, lsl #16
  408320:	umull	x0, w1, w0
  408324:	lsr	x0, x0, #32
  408328:	lsr	w2, w0, #8
  40832c:	mov	w0, w2
  408330:	lsl	w0, w0, #8
  408334:	add	w0, w0, w2
  408338:	sub	w0, w1, w0
  40833c:	str	w0, [sp, #68]
  408340:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  408344:	add	x0, x0, #0x340
  408348:	ldr	w1, [sp, #68]
  40834c:	ldr	x0, [x0, x1, lsl #3]
  408350:	str	x0, [sp, #72]
  408354:	b	4083c0 <family_name@@Base+0x1e4>
  408358:	ldr	x0, [sp, #72]
  40835c:	ldrh	w0, [x0, #22]
  408360:	mov	w1, w0
  408364:	ldr	w0, [sp, #32]
  408368:	cmp	w0, w1
  40836c:	b.ne	4083b4 <family_name@@Base+0x1d8>  // b.any
  408370:	ldr	x0, [sp, #72]
  408374:	ldrh	w0, [x0, #18]
  408378:	mov	w1, w0
  40837c:	ldr	w0, [sp, #36]
  408380:	cmp	w0, w1
  408384:	b.ne	4083b4 <family_name@@Base+0x1d8>  // b.any
  408388:	ldr	x0, [sp, #72]
  40838c:	add	x0, x0, #0x18
  408390:	ldrsw	x1, [sp, #36]
  408394:	mov	x2, x1
  408398:	ldr	x1, [sp, #40]
  40839c:	bl	404ff0 <memcmp@plt>
  4083a0:	cmp	w0, #0x0
  4083a4:	b.ne	4083b4 <family_name@@Base+0x1d8>  // b.any
  4083a8:	ldr	x0, [sp, #72]
  4083ac:	ldr	x0, [x0, #8]
  4083b0:	b	4084e4 <family_name@@Base+0x308>
  4083b4:	ldr	x0, [sp, #72]
  4083b8:	ldr	x0, [x0]
  4083bc:	str	x0, [sp, #72]
  4083c0:	ldr	x0, [sp, #72]
  4083c4:	cmp	x0, #0x0
  4083c8:	b.ne	408358 <family_name@@Base+0x17c>  // b.any
  4083cc:	mov	x0, #0x118                 	// #280
  4083d0:	bl	404e90 <malloc@plt>
  4083d4:	str	x0, [sp, #72]
  4083d8:	ldr	x0, [sp, #72]
  4083dc:	cmp	x0, #0x0
  4083e0:	b.ne	4083ec <family_name@@Base+0x210>  // b.any
  4083e4:	mov	x0, #0x0                   	// #0
  4083e8:	b	4084e4 <family_name@@Base+0x308>
  4083ec:	ldr	w0, [sp, #32]
  4083f0:	and	w1, w0, #0xffff
  4083f4:	ldr	x0, [sp, #72]
  4083f8:	strh	w1, [x0, #22]
  4083fc:	ldr	w0, [sp, #36]
  408400:	and	w1, w0, #0xffff
  408404:	ldr	x0, [sp, #72]
  408408:	strh	w1, [x0, #18]
  40840c:	ldr	x0, [sp, #72]
  408410:	str	xzr, [x0, #8]
  408414:	ldr	x0, [sp, #72]
  408418:	add	x0, x0, #0x18
  40841c:	ldrsw	x1, [sp, #36]
  408420:	mov	x2, x1
  408424:	ldr	x1, [sp, #40]
  408428:	bl	404ce0 <memcpy@plt>
  40842c:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  408430:	add	x0, x0, #0x340
  408434:	ldr	w1, [sp, #68]
  408438:	ldr	x1, [x0, x1, lsl #3]
  40843c:	ldr	x0, [sp, #72]
  408440:	str	x1, [x0]
  408444:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  408448:	add	x0, x0, #0x340
  40844c:	ldr	w1, [sp, #68]
  408450:	ldr	x2, [sp, #72]
  408454:	str	x2, [x0, x1, lsl #3]
  408458:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  40845c:	add	x0, x0, #0xc48
  408460:	ldr	w0, [x0]
  408464:	add	w1, w0, #0x1
  408468:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  40846c:	add	x0, x0, #0xc48
  408470:	str	w1, [x0]
  408474:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  408478:	add	x0, x0, #0xc48
  40847c:	ldr	w0, [x0]
  408480:	cmp	w0, #0x1
  408484:	b.ne	408490 <family_name@@Base+0x2b4>  // b.any
  408488:	mov	w0, #0x1                   	// #1
  40848c:	bl	404d90 <sethostent@plt>
  408490:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408494:	ldr	x0, [x0, #4016]
  408498:	ldr	x0, [x0]
  40849c:	bl	4050f0 <fflush@plt>
  4084a0:	ldr	w0, [sp, #36]
  4084a4:	ldr	w2, [sp, #32]
  4084a8:	mov	w1, w0
  4084ac:	ldr	x0, [sp, #40]
  4084b0:	bl	405060 <gethostbyaddr@plt>
  4084b4:	str	x0, [sp, #56]
  4084b8:	ldr	x0, [sp, #56]
  4084bc:	cmp	x0, #0x0
  4084c0:	b.eq	4084dc <family_name@@Base+0x300>  // b.none
  4084c4:	ldr	x0, [sp, #56]
  4084c8:	ldr	x0, [x0]
  4084cc:	bl	404f70 <strdup@plt>
  4084d0:	mov	x1, x0
  4084d4:	ldr	x0, [sp, #72]
  4084d8:	str	x1, [x0, #8]
  4084dc:	ldr	x0, [sp, #72]
  4084e0:	ldr	x0, [x0, #8]
  4084e4:	ldr	x19, [sp, #16]
  4084e8:	ldp	x29, x30, [sp], #80
  4084ec:	ret

00000000004084f0 <format_host_r@@Base>:
  4084f0:	stp	x29, x30, [sp, #-64]!
  4084f4:	mov	x29, sp
  4084f8:	str	w0, [sp, #44]
  4084fc:	str	w1, [sp, #40]
  408500:	str	x2, [sp, #32]
  408504:	str	x3, [sp, #24]
  408508:	str	w4, [sp, #20]
  40850c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408510:	ldr	x0, [x0, #4064]
  408514:	ldr	w0, [x0]
  408518:	cmp	w0, #0x0
  40851c:	b.eq	408574 <format_host_r@@Base+0x84>  // b.none
  408520:	ldr	w0, [sp, #40]
  408524:	cmp	w0, #0x0
  408528:	b.gt	408538 <format_host_r@@Base+0x48>
  40852c:	ldr	w0, [sp, #44]
  408530:	bl	407400 <af_bit_len@@Base+0xa0>
  408534:	b	40853c <format_host_r@@Base+0x4c>
  408538:	ldr	w0, [sp, #40]
  40853c:	str	w0, [sp, #40]
  408540:	ldr	w0, [sp, #40]
  408544:	cmp	w0, #0x0
  408548:	b.le	408574 <format_host_r@@Base+0x84>
  40854c:	ldr	w2, [sp, #44]
  408550:	ldr	w1, [sp, #40]
  408554:	ldr	x0, [sp, #32]
  408558:	bl	408284 <family_name@@Base+0xa8>
  40855c:	str	x0, [sp, #56]
  408560:	ldr	x0, [sp, #56]
  408564:	cmp	x0, #0x0
  408568:	b.eq	408574 <format_host_r@@Base+0x84>  // b.none
  40856c:	ldr	x0, [sp, #56]
  408570:	b	40858c <format_host_r@@Base+0x9c>
  408574:	ldr	w4, [sp, #20]
  408578:	ldr	x3, [sp, #24]
  40857c:	ldr	x2, [sp, #32]
  408580:	ldr	w1, [sp, #40]
  408584:	ldr	w0, [sp, #44]
  408588:	bl	407f64 <rt_addr_n2a_r@@Base>
  40858c:	ldp	x29, x30, [sp], #64
  408590:	ret

0000000000408594 <format_host@@Base>:
  408594:	stp	x29, x30, [sp, #-32]!
  408598:	mov	x29, sp
  40859c:	str	w0, [sp, #28]
  4085a0:	str	w1, [sp, #24]
  4085a4:	str	x2, [sp, #16]
  4085a8:	mov	w4, #0x100                 	// #256
  4085ac:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  4085b0:	add	x3, x0, #0xc50
  4085b4:	ldr	x2, [sp, #16]
  4085b8:	ldr	w1, [sp, #24]
  4085bc:	ldr	w0, [sp, #28]
  4085c0:	bl	4084f0 <format_host_r@@Base>
  4085c4:	ldp	x29, x30, [sp], #32
  4085c8:	ret

00000000004085cc <hexstring_n2a@@Base>:
  4085cc:	stp	x29, x30, [sp, #-64]!
  4085d0:	mov	x29, sp
  4085d4:	str	x0, [sp, #40]
  4085d8:	str	w1, [sp, #36]
  4085dc:	str	x2, [sp, #24]
  4085e0:	str	w3, [sp, #32]
  4085e4:	ldr	x0, [sp, #24]
  4085e8:	str	x0, [sp, #56]
  4085ec:	str	wzr, [sp, #52]
  4085f0:	b	408648 <hexstring_n2a@@Base+0x7c>
  4085f4:	ldr	w0, [sp, #32]
  4085f8:	cmp	w0, #0x2
  4085fc:	b.le	40865c <hexstring_n2a@@Base+0x90>
  408600:	ldrsw	x0, [sp, #52]
  408604:	ldr	x1, [sp, #40]
  408608:	add	x0, x1, x0
  40860c:	ldrb	w0, [x0]
  408610:	mov	w2, w0
  408614:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408618:	add	x1, x0, #0x228
  40861c:	ldr	x0, [sp, #56]
  408620:	bl	404dd0 <sprintf@plt>
  408624:	ldr	x0, [sp, #56]
  408628:	add	x0, x0, #0x2
  40862c:	str	x0, [sp, #56]
  408630:	ldr	w0, [sp, #32]
  408634:	sub	w0, w0, #0x2
  408638:	str	w0, [sp, #32]
  40863c:	ldr	w0, [sp, #52]
  408640:	add	w0, w0, #0x1
  408644:	str	w0, [sp, #52]
  408648:	ldr	w1, [sp, #52]
  40864c:	ldr	w0, [sp, #36]
  408650:	cmp	w1, w0
  408654:	b.lt	4085f4 <hexstring_n2a@@Base+0x28>  // b.tstop
  408658:	b	408660 <hexstring_n2a@@Base+0x94>
  40865c:	nop
  408660:	ldr	x0, [sp, #24]
  408664:	ldp	x29, x30, [sp], #64
  408668:	ret

000000000040866c <hexstring_a2n@@Base>:
  40866c:	stp	x29, x30, [sp, #-80]!
  408670:	mov	x29, sp
  408674:	str	x0, [sp, #40]
  408678:	str	x1, [sp, #32]
  40867c:	str	w2, [sp, #28]
  408680:	str	x3, [sp, #16]
  408684:	str	wzr, [sp, #76]
  408688:	ldr	x0, [sp, #40]
  40868c:	bl	404d10 <strlen@plt>
  408690:	and	x0, x0, #0x1
  408694:	cmp	x0, #0x0
  408698:	b.eq	408738 <hexstring_a2n@@Base+0xcc>  // b.none
  40869c:	mov	x0, #0x0                   	// #0
  4086a0:	b	408774 <hexstring_a2n@@Base+0x108>
  4086a4:	add	x0, sp, #0x38
  4086a8:	mov	x2, #0x2                   	// #2
  4086ac:	ldr	x1, [sp, #40]
  4086b0:	bl	4051b0 <strncpy@plt>
  4086b4:	strb	wzr, [sp, #58]
  4086b8:	bl	405200 <__errno_location@plt>
  4086bc:	str	wzr, [x0]
  4086c0:	add	x1, sp, #0x40
  4086c4:	add	x0, sp, #0x38
  4086c8:	mov	w2, #0x10                  	// #16
  4086cc:	bl	404d00 <strtoul@plt>
  4086d0:	str	w0, [sp, #72]
  4086d4:	bl	405200 <__errno_location@plt>
  4086d8:	ldr	w0, [x0]
  4086dc:	cmp	w0, #0x0
  4086e0:	b.ne	408700 <hexstring_a2n@@Base+0x94>  // b.any
  4086e4:	ldr	w0, [sp, #72]
  4086e8:	cmp	w0, #0xff
  4086ec:	b.hi	408700 <hexstring_a2n@@Base+0x94>  // b.pmore
  4086f0:	ldr	x0, [sp, #64]
  4086f4:	ldrb	w0, [x0]
  4086f8:	cmp	w0, #0x0
  4086fc:	b.eq	408708 <hexstring_a2n@@Base+0x9c>  // b.none
  408700:	mov	x0, #0x0                   	// #0
  408704:	b	408774 <hexstring_a2n@@Base+0x108>
  408708:	ldr	w0, [sp, #76]
  40870c:	add	w1, w0, #0x1
  408710:	str	w1, [sp, #76]
  408714:	mov	w0, w0
  408718:	ldr	x1, [sp, #32]
  40871c:	add	x0, x1, x0
  408720:	ldr	w1, [sp, #72]
  408724:	and	w1, w1, #0xff
  408728:	strb	w1, [x0]
  40872c:	ldr	x0, [sp, #40]
  408730:	add	x0, x0, #0x2
  408734:	str	x0, [sp, #40]
  408738:	ldr	w0, [sp, #28]
  40873c:	ldr	w1, [sp, #76]
  408740:	cmp	w1, w0
  408744:	b.cs	408758 <hexstring_a2n@@Base+0xec>  // b.hs, b.nlast
  408748:	ldr	x0, [sp, #40]
  40874c:	bl	404d10 <strlen@plt>
  408750:	cmp	x0, #0x1
  408754:	b.hi	4086a4 <hexstring_a2n@@Base+0x38>  // b.pmore
  408758:	ldr	x0, [sp, #16]
  40875c:	cmp	x0, #0x0
  408760:	b.eq	408770 <hexstring_a2n@@Base+0x104>  // b.none
  408764:	ldr	x0, [sp, #16]
  408768:	ldr	w1, [sp, #76]
  40876c:	str	w1, [x0]
  408770:	ldr	x0, [sp, #32]
  408774:	ldp	x29, x30, [sp], #80
  408778:	ret

000000000040877c <hex2mem@@Base>:
  40877c:	stp	x29, x30, [sp, #-64]!
  408780:	mov	x29, sp
  408784:	str	x0, [sp, #40]
  408788:	str	x1, [sp, #32]
  40878c:	str	w2, [sp, #28]
  408790:	str	wzr, [sp, #60]
  408794:	str	wzr, [sp, #56]
  408798:	b	408868 <hex2mem@@Base+0xec>
  40879c:	ldrsw	x0, [sp, #56]
  4087a0:	ldr	x1, [sp, #40]
  4087a4:	add	x0, x1, x0
  4087a8:	ldrb	w0, [x0]
  4087ac:	bl	406004 <get_hex@@Base>
  4087b0:	str	w0, [sp, #52]
  4087b4:	ldr	w0, [sp, #52]
  4087b8:	cmp	w0, #0x0
  4087bc:	b.ge	4087c8 <hex2mem@@Base+0x4c>  // b.tcont
  4087c0:	mov	w0, #0xffffffff            	// #-1
  4087c4:	b	40887c <hex2mem@@Base+0x100>
  4087c8:	ldr	w0, [sp, #52]
  4087cc:	and	w1, w0, #0xff
  4087d0:	ldrsw	x0, [sp, #60]
  4087d4:	ldr	x2, [sp, #32]
  4087d8:	add	x0, x2, x0
  4087dc:	ubfiz	w1, w1, #4, #4
  4087e0:	and	w1, w1, #0xff
  4087e4:	strb	w1, [x0]
  4087e8:	ldrsw	x0, [sp, #56]
  4087ec:	add	x0, x0, #0x1
  4087f0:	ldr	x1, [sp, #40]
  4087f4:	add	x0, x1, x0
  4087f8:	ldrb	w0, [x0]
  4087fc:	bl	406004 <get_hex@@Base>
  408800:	str	w0, [sp, #52]
  408804:	ldr	w0, [sp, #52]
  408808:	cmp	w0, #0x0
  40880c:	b.ge	408818 <hex2mem@@Base+0x9c>  // b.tcont
  408810:	mov	w0, #0xffffffff            	// #-1
  408814:	b	40887c <hex2mem@@Base+0x100>
  408818:	ldrsw	x0, [sp, #60]
  40881c:	ldr	x1, [sp, #32]
  408820:	add	x0, x1, x0
  408824:	ldrb	w0, [x0]
  408828:	sxtb	w1, w0
  40882c:	ldr	w0, [sp, #52]
  408830:	sxtb	w0, w0
  408834:	orr	w0, w1, w0
  408838:	sxtb	w2, w0
  40883c:	ldrsw	x0, [sp, #60]
  408840:	ldr	x1, [sp, #32]
  408844:	add	x0, x1, x0
  408848:	and	w1, w2, #0xff
  40884c:	strb	w1, [x0]
  408850:	ldr	w0, [sp, #60]
  408854:	add	w0, w0, #0x1
  408858:	str	w0, [sp, #60]
  40885c:	ldr	w0, [sp, #56]
  408860:	add	w0, w0, #0x2
  408864:	str	w0, [sp, #56]
  408868:	ldr	w1, [sp, #60]
  40886c:	ldr	w0, [sp, #28]
  408870:	cmp	w1, w0
  408874:	b.lt	40879c <hex2mem@@Base+0x20>  // b.tstop
  408878:	mov	w0, #0x0                   	// #0
  40887c:	ldp	x29, x30, [sp], #64
  408880:	ret

0000000000408884 <addr64_n2a@@Base>:
  408884:	stp	x29, x30, [sp, #-96]!
  408888:	mov	x29, sp
  40888c:	str	x0, [sp, #40]
  408890:	str	x1, [sp, #32]
  408894:	str	x2, [sp, #24]
  408898:	add	x0, sp, #0x28
  40889c:	str	x0, [sp, #64]
  4088a0:	str	xzr, [sp, #80]
  4088a4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4088a8:	add	x0, x0, #0x230
  4088ac:	str	x0, [sp, #72]
  4088b0:	str	wzr, [sp, #92]
  4088b4:	b	408954 <addr64_n2a@@Base+0xd0>
  4088b8:	ldrsw	x0, [sp, #92]
  4088bc:	lsl	x0, x0, #1
  4088c0:	ldr	x1, [sp, #64]
  4088c4:	add	x0, x1, x0
  4088c8:	ldrh	w0, [x0]
  4088cc:	bl	404e80 <ntohs@plt>
  4088d0:	strh	w0, [sp, #62]
  4088d4:	ldr	w0, [sp, #92]
  4088d8:	cmp	w0, #0x3
  4088dc:	b.ne	4088ec <addr64_n2a@@Base+0x68>  // b.any
  4088e0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4088e4:	add	x0, x0, #0x238
  4088e8:	str	x0, [sp, #72]
  4088ec:	ldr	x1, [sp, #32]
  4088f0:	ldr	x0, [sp, #80]
  4088f4:	add	x5, x1, x0
  4088f8:	ldr	x1, [sp, #24]
  4088fc:	ldr	x0, [sp, #80]
  408900:	sub	x1, x1, x0
  408904:	ldrh	w0, [sp, #62]
  408908:	ldr	x4, [sp, #72]
  40890c:	mov	w3, w0
  408910:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408914:	add	x2, x0, #0x240
  408918:	mov	x0, x5
  40891c:	bl	404e20 <snprintf@plt>
  408920:	str	w0, [sp, #56]
  408924:	ldr	w0, [sp, #56]
  408928:	cmp	w0, #0x0
  40892c:	b.ge	408938 <addr64_n2a@@Base+0xb4>  // b.tcont
  408930:	ldr	w0, [sp, #56]
  408934:	b	408964 <addr64_n2a@@Base+0xe0>
  408938:	ldrsw	x0, [sp, #56]
  40893c:	ldr	x1, [sp, #80]
  408940:	add	x0, x1, x0
  408944:	str	x0, [sp, #80]
  408948:	ldr	w0, [sp, #92]
  40894c:	add	w0, w0, #0x1
  408950:	str	w0, [sp, #92]
  408954:	ldr	w0, [sp, #92]
  408958:	cmp	w0, #0x3
  40895c:	b.le	4088b8 <addr64_n2a@@Base+0x34>
  408960:	ldr	x0, [sp, #80]
  408964:	ldp	x29, x30, [sp], #96
  408968:	ret

000000000040896c <print_escape_buf@@Base>:
  40896c:	stp	x29, x30, [sp, #-64]!
  408970:	mov	x29, sp
  408974:	str	x0, [sp, #40]
  408978:	str	x1, [sp, #32]
  40897c:	str	x2, [sp, #24]
  408980:	str	xzr, [sp, #56]
  408984:	b	408a3c <print_escape_buf@@Base+0xd0>
  408988:	bl	405010 <__ctype_b_loc@plt>
  40898c:	ldr	x1, [x0]
  408990:	ldr	x2, [sp, #40]
  408994:	ldr	x0, [sp, #56]
  408998:	add	x0, x2, x0
  40899c:	ldrb	w0, [x0]
  4089a0:	and	x0, x0, #0xff
  4089a4:	lsl	x0, x0, #1
  4089a8:	add	x0, x1, x0
  4089ac:	ldrh	w0, [x0]
  4089b0:	and	w0, w0, #0x4000
  4089b4:	cmp	w0, #0x0
  4089b8:	b.eq	408a10 <print_escape_buf@@Base+0xa4>  // b.none
  4089bc:	ldr	x1, [sp, #40]
  4089c0:	ldr	x0, [sp, #56]
  4089c4:	add	x0, x1, x0
  4089c8:	ldrb	w0, [x0]
  4089cc:	cmp	w0, #0x5c
  4089d0:	b.eq	408a10 <print_escape_buf@@Base+0xa4>  // b.none
  4089d4:	ldr	x1, [sp, #40]
  4089d8:	ldr	x0, [sp, #56]
  4089dc:	add	x0, x1, x0
  4089e0:	ldrb	w0, [x0]
  4089e4:	mov	w1, w0
  4089e8:	ldr	x0, [sp, #24]
  4089ec:	bl	4050b0 <strchr@plt>
  4089f0:	cmp	x0, #0x0
  4089f4:	b.ne	408a10 <print_escape_buf@@Base+0xa4>  // b.any
  4089f8:	ldr	x1, [sp, #40]
  4089fc:	ldr	x0, [sp, #56]
  408a00:	add	x0, x1, x0
  408a04:	ldrb	w0, [x0]
  408a08:	bl	405220 <putchar@plt>
  408a0c:	b	408a30 <print_escape_buf@@Base+0xc4>
  408a10:	ldr	x1, [sp, #40]
  408a14:	ldr	x0, [sp, #56]
  408a18:	add	x0, x1, x0
  408a1c:	ldrb	w0, [x0]
  408a20:	mov	w1, w0
  408a24:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408a28:	add	x0, x0, #0x248
  408a2c:	bl	4051e0 <printf@plt>
  408a30:	ldr	x0, [sp, #56]
  408a34:	add	x0, x0, #0x1
  408a38:	str	x0, [sp, #56]
  408a3c:	ldr	x1, [sp, #56]
  408a40:	ldr	x0, [sp, #32]
  408a44:	cmp	x1, x0
  408a48:	b.cc	408988 <print_escape_buf@@Base+0x1c>  // b.lo, b.ul, b.last
  408a4c:	nop
  408a50:	nop
  408a54:	ldp	x29, x30, [sp], #64
  408a58:	ret

0000000000408a5c <print_timestamp@@Base>:
  408a5c:	stp	x29, x30, [sp, #-112]!
  408a60:	mov	x29, sp
  408a64:	str	x0, [sp, #24]
  408a68:	add	x0, sp, #0x50
  408a6c:	mov	x1, #0x0                   	// #0
  408a70:	bl	404f00 <gettimeofday@plt>
  408a74:	add	x0, sp, #0x50
  408a78:	bl	404e40 <localtime@plt>
  408a7c:	str	x0, [sp, #104]
  408a80:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408a84:	ldr	x0, [x0, #4032]
  408a88:	ldr	w0, [x0]
  408a8c:	cmp	w0, #0x0
  408a90:	b.eq	408ad4 <print_timestamp@@Base+0x78>  // b.none
  408a94:	add	x4, sp, #0x28
  408a98:	ldr	x3, [sp, #104]
  408a9c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408aa0:	add	x2, x0, #0x250
  408aa4:	mov	x1, #0x28                  	// #40
  408aa8:	mov	x0, x4
  408aac:	bl	404e00 <strftime@plt>
  408ab0:	ldr	x1, [sp, #88]
  408ab4:	add	x0, sp, #0x28
  408ab8:	mov	x3, x1
  408abc:	mov	x2, x0
  408ac0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408ac4:	add	x1, x0, #0x268
  408ac8:	ldr	x0, [sp, #24]
  408acc:	bl	405240 <fprintf@plt>
  408ad0:	b	408b14 <print_timestamp@@Base+0xb8>
  408ad4:	ldr	x0, [sp, #104]
  408ad8:	bl	405150 <asctime@plt>
  408adc:	str	x0, [sp, #96]
  408ae0:	ldr	x0, [sp, #96]
  408ae4:	bl	404d10 <strlen@plt>
  408ae8:	sub	x0, x0, #0x1
  408aec:	ldr	x1, [sp, #96]
  408af0:	add	x0, x1, x0
  408af4:	strb	wzr, [x0]
  408af8:	ldr	x0, [sp, #88]
  408afc:	mov	x3, x0
  408b00:	ldr	x2, [sp, #96]
  408b04:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408b08:	add	x1, x0, #0x278
  408b0c:	ldr	x0, [sp, #24]
  408b10:	bl	405240 <fprintf@plt>
  408b14:	mov	w0, #0x0                   	// #0
  408b18:	ldp	x29, x30, [sp], #112
  408b1c:	ret

0000000000408b20 <print_name_and_link@@Base>:
  408b20:	stp	x29, x30, [sp, #-128]!
  408b24:	mov	x29, sp
  408b28:	str	x0, [sp, #40]
  408b2c:	str	x1, [sp, #32]
  408b30:	str	x2, [sp, #24]
  408b34:	str	xzr, [sp, #120]
  408b38:	str	wzr, [sp, #116]
  408b3c:	ldr	x0, [sp, #24]
  408b40:	add	x0, x0, #0x28
  408b44:	ldr	x0, [x0]
  408b48:	cmp	x0, #0x0
  408b4c:	b.eq	408c8c <print_name_and_link@@Base+0x16c>  // b.none
  408b50:	ldr	x0, [sp, #24]
  408b54:	add	x0, x0, #0x28
  408b58:	ldr	x0, [x0]
  408b5c:	bl	405cac <main@@Base+0x684>
  408b60:	str	w0, [sp, #112]
  408b64:	ldr	w0, [sp, #112]
  408b68:	cmp	w0, #0x0
  408b6c:	b.eq	408c20 <print_name_and_link@@Base+0x100>  // b.none
  408b70:	ldr	x0, [sp, #24]
  408b74:	add	x0, x0, #0x128
  408b78:	ldr	x0, [x0]
  408b7c:	cmp	x0, #0x0
  408b80:	b.eq	408bc0 <print_name_and_link@@Base+0xa0>  // b.none
  408b84:	bl	40b1dc <is_json_context@@Base>
  408b88:	and	w0, w0, #0xff
  408b8c:	cmp	w0, #0x0
  408b90:	b.eq	408bb0 <print_name_and_link@@Base+0x90>  // b.none
  408b94:	ldr	w3, [sp, #112]
  408b98:	mov	x2, #0x0                   	// #0
  408b9c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408ba0:	add	x1, x0, #0x290
  408ba4:	mov	w0, #0x2                   	// #2
  408ba8:	bl	405cdc <main@@Base+0x6b4>
  408bac:	b	408c58 <print_name_and_link@@Base+0x138>
  408bb0:	ldr	w0, [sp, #112]
  408bb4:	bl	40a7ec <ll_idx_n2a@@Base>
  408bb8:	str	x0, [sp, #120]
  408bbc:	b	408c58 <print_name_and_link@@Base+0x138>
  408bc0:	ldr	w0, [sp, #112]
  408bc4:	bl	40a9c4 <ll_index_to_name@@Base>
  408bc8:	str	x0, [sp, #120]
  408bcc:	bl	40b1dc <is_json_context@@Base>
  408bd0:	and	w0, w0, #0xff
  408bd4:	cmp	w0, #0x0
  408bd8:	b.eq	408bf8 <print_name_and_link@@Base+0xd8>  // b.none
  408bdc:	ldr	x3, [sp, #120]
  408be0:	mov	x2, #0x0                   	// #0
  408be4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408be8:	add	x1, x0, #0x208
  408bec:	mov	w0, #0x2                   	// #2
  408bf0:	bl	405d54 <main@@Base+0x72c>
  408bf4:	str	xzr, [sp, #120]
  408bf8:	ldr	w0, [sp, #112]
  408bfc:	bl	40aae4 <ll_index_to_flags@@Base>
  408c00:	str	w0, [sp, #116]
  408c04:	ldr	w0, [sp, #116]
  408c08:	and	w0, w0, #0x1
  408c0c:	cmp	w0, #0x0
  408c10:	cset	w0, eq  // eq = none
  408c14:	and	w0, w0, #0xff
  408c18:	str	w0, [sp, #116]
  408c1c:	b	408c58 <print_name_and_link@@Base+0x138>
  408c20:	bl	40b1dc <is_json_context@@Base>
  408c24:	and	w0, w0, #0xff
  408c28:	cmp	w0, #0x0
  408c2c:	b.eq	408c4c <print_name_and_link@@Base+0x12c>  // b.none
  408c30:	mov	x3, #0x0                   	// #0
  408c34:	mov	x2, #0x0                   	// #0
  408c38:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408c3c:	add	x1, x0, #0x208
  408c40:	mov	w0, #0x2                   	// #2
  408c44:	bl	405d18 <main@@Base+0x6f0>
  408c48:	b	408c58 <print_name_and_link@@Base+0x138>
  408c4c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408c50:	add	x0, x0, #0x2a0
  408c54:	str	x0, [sp, #120]
  408c58:	ldr	x0, [sp, #120]
  408c5c:	cmp	x0, #0x0
  408c60:	b.eq	408c8c <print_name_and_link@@Base+0x16c>  // b.none
  408c64:	add	x5, sp, #0x30
  408c68:	ldr	x4, [sp, #120]
  408c6c:	ldr	x3, [sp, #32]
  408c70:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408c74:	add	x2, x0, #0x2a8
  408c78:	mov	x1, #0x40                  	// #64
  408c7c:	mov	x0, x5
  408c80:	bl	404e20 <snprintf@plt>
  408c84:	add	x0, sp, #0x30
  408c88:	str	x0, [sp, #32]
  408c8c:	ldr	x4, [sp, #32]
  408c90:	ldr	x3, [sp, #40]
  408c94:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408c98:	add	x2, x0, #0x2b0
  408c9c:	mov	w1, #0x0                   	// #0
  408ca0:	mov	w0, #0x4                   	// #4
  408ca4:	bl	40bd24 <print_color_string@@Base>
  408ca8:	ldr	w0, [sp, #116]
  408cac:	ldp	x29, x30, [sp], #128
  408cb0:	ret

0000000000408cb4 <getcmdline@@Base>:
  408cb4:	stp	x29, x30, [sp, #-112]!
  408cb8:	mov	x29, sp
  408cbc:	str	x19, [sp, #16]
  408cc0:	str	x0, [sp, #56]
  408cc4:	str	x1, [sp, #48]
  408cc8:	str	x2, [sp, #40]
  408ccc:	ldr	x2, [sp, #40]
  408cd0:	ldr	x1, [sp, #48]
  408cd4:	ldr	x0, [sp, #56]
  408cd8:	bl	405050 <getline@plt>
  408cdc:	str	x0, [sp, #104]
  408ce0:	ldr	x0, [sp, #104]
  408ce4:	cmp	x0, #0x0
  408ce8:	b.ge	408cf4 <getcmdline@@Base+0x40>  // b.tcont
  408cec:	ldr	x0, [sp, #104]
  408cf0:	b	408ec4 <getcmdline@@Base+0x210>
  408cf4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408cf8:	ldr	x0, [x0, #4000]
  408cfc:	ldr	w0, [x0]
  408d00:	add	w1, w0, #0x1
  408d04:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408d08:	ldr	x0, [x0, #4000]
  408d0c:	str	w1, [x0]
  408d10:	ldr	x0, [sp, #56]
  408d14:	ldr	x0, [x0]
  408d18:	mov	w1, #0x23                  	// #35
  408d1c:	bl	4050b0 <strchr@plt>
  408d20:	str	x0, [sp, #96]
  408d24:	ldr	x0, [sp, #96]
  408d28:	cmp	x0, #0x0
  408d2c:	b.eq	408e98 <getcmdline@@Base+0x1e4>  // b.none
  408d30:	ldr	x0, [sp, #96]
  408d34:	strb	wzr, [x0]
  408d38:	b	408e98 <getcmdline@@Base+0x1e4>
  408d3c:	str	xzr, [sp, #80]
  408d40:	str	xzr, [sp, #72]
  408d44:	add	x1, sp, #0x48
  408d48:	add	x0, sp, #0x50
  408d4c:	ldr	x2, [sp, #40]
  408d50:	bl	405050 <getline@plt>
  408d54:	str	x0, [sp, #88]
  408d58:	ldr	x0, [sp, #88]
  408d5c:	cmp	x0, #0x0
  408d60:	b.ge	408d90 <getcmdline@@Base+0xdc>  // b.tcont
  408d64:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408d68:	ldr	x0, [x0, #3992]
  408d6c:	ldr	x0, [x0]
  408d70:	mov	x3, x0
  408d74:	mov	x2, #0x1a                  	// #26
  408d78:	mov	x1, #0x1                   	// #1
  408d7c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408d80:	add	x0, x0, #0x2b8
  408d84:	bl	4050d0 <fwrite@plt>
  408d88:	ldr	x0, [sp, #88]
  408d8c:	b	408ec4 <getcmdline@@Base+0x210>
  408d90:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408d94:	ldr	x0, [x0, #4000]
  408d98:	ldr	w0, [x0]
  408d9c:	add	w1, w0, #0x1
  408da0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408da4:	ldr	x0, [x0, #4000]
  408da8:	str	w1, [x0]
  408dac:	ldr	x0, [sp, #96]
  408db0:	strb	wzr, [x0]
  408db4:	ldr	x0, [sp, #80]
  408db8:	mov	w1, #0x23                  	// #35
  408dbc:	bl	4050b0 <strchr@plt>
  408dc0:	str	x0, [sp, #96]
  408dc4:	ldr	x0, [sp, #96]
  408dc8:	cmp	x0, #0x0
  408dcc:	b.eq	408dd8 <getcmdline@@Base+0x124>  // b.none
  408dd0:	ldr	x0, [sp, #96]
  408dd4:	strb	wzr, [x0]
  408dd8:	ldr	x0, [sp, #56]
  408ddc:	ldr	x0, [x0]
  408de0:	bl	404d10 <strlen@plt>
  408de4:	mov	x19, x0
  408de8:	ldr	x0, [sp, #80]
  408dec:	bl	404d10 <strlen@plt>
  408df0:	add	x0, x19, x0
  408df4:	add	x1, x0, #0x1
  408df8:	ldr	x0, [sp, #48]
  408dfc:	str	x1, [x0]
  408e00:	ldr	x0, [sp, #56]
  408e04:	ldr	x2, [x0]
  408e08:	ldr	x0, [sp, #48]
  408e0c:	ldr	x0, [x0]
  408e10:	mov	x1, x0
  408e14:	mov	x0, x2
  408e18:	bl	404f40 <realloc@plt>
  408e1c:	mov	x1, x0
  408e20:	ldr	x0, [sp, #56]
  408e24:	str	x1, [x0]
  408e28:	ldr	x0, [sp, #56]
  408e2c:	ldr	x0, [x0]
  408e30:	cmp	x0, #0x0
  408e34:	b.ne	408e6c <getcmdline@@Base+0x1b8>  // b.any
  408e38:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408e3c:	ldr	x0, [x0, #3992]
  408e40:	ldr	x0, [x0]
  408e44:	mov	x3, x0
  408e48:	mov	x2, #0xe                   	// #14
  408e4c:	mov	x1, #0x1                   	// #1
  408e50:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408e54:	add	x0, x0, #0x2d8
  408e58:	bl	4050d0 <fwrite@plt>
  408e5c:	ldr	x0, [sp, #48]
  408e60:	str	xzr, [x0]
  408e64:	mov	x0, #0xffffffffffffffff    	// #-1
  408e68:	b	408ec4 <getcmdline@@Base+0x210>
  408e6c:	ldr	x0, [sp, #88]
  408e70:	sub	x0, x0, #0x2
  408e74:	ldr	x1, [sp, #104]
  408e78:	add	x0, x1, x0
  408e7c:	str	x0, [sp, #104]
  408e80:	ldr	x0, [sp, #56]
  408e84:	ldr	x0, [x0]
  408e88:	ldr	x1, [sp, #80]
  408e8c:	bl	404ed0 <strcat@plt>
  408e90:	ldr	x0, [sp, #80]
  408e94:	bl	405070 <free@plt>
  408e98:	ldr	x0, [sp, #56]
  408e9c:	ldr	x2, [x0]
  408ea0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408ea4:	add	x1, x0, #0x2e8
  408ea8:	mov	x0, x2
  408eac:	bl	405190 <strstr@plt>
  408eb0:	str	x0, [sp, #96]
  408eb4:	ldr	x0, [sp, #96]
  408eb8:	cmp	x0, #0x0
  408ebc:	b.ne	408d3c <getcmdline@@Base+0x88>  // b.any
  408ec0:	ldr	x0, [sp, #104]
  408ec4:	ldr	x19, [sp, #16]
  408ec8:	ldp	x29, x30, [sp], #112
  408ecc:	ret

0000000000408ed0 <makeargs@@Base>:
  408ed0:	stp	x29, x30, [sp, #-64]!
  408ed4:	mov	x29, sp
  408ed8:	str	x0, [sp, #40]
  408edc:	str	x1, [sp, #32]
  408ee0:	str	w2, [sp, #28]
  408ee4:	ldr	x0, [sp, #40]
  408ee8:	str	x0, [sp, #56]
  408eec:	str	wzr, [sp, #52]
  408ef0:	b	409074 <makeargs@@Base+0x1a4>
  408ef4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408ef8:	add	x1, x0, #0x3b8
  408efc:	ldr	x0, [sp, #56]
  408f00:	bl	4050a0 <strspn@plt>
  408f04:	mov	x1, x0
  408f08:	ldr	x0, [sp, #56]
  408f0c:	add	x0, x0, x1
  408f10:	str	x0, [sp, #56]
  408f14:	ldr	x0, [sp, #56]
  408f18:	ldrb	w0, [x0]
  408f1c:	cmp	w0, #0x0
  408f20:	b.eq	409088 <makeargs@@Base+0x1b8>  // b.none
  408f24:	ldr	w0, [sp, #28]
  408f28:	sub	w0, w0, #0x1
  408f2c:	ldr	w1, [sp, #52]
  408f30:	cmp	w1, w0
  408f34:	b.lt	408f64 <makeargs@@Base+0x94>  // b.tstop
  408f38:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408f3c:	ldr	x0, [x0, #3992]
  408f40:	ldr	x0, [x0]
  408f44:	mov	x3, x0
  408f48:	mov	x2, #0x1e                  	// #30
  408f4c:	mov	x1, #0x1                   	// #1
  408f50:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408f54:	add	x0, x0, #0x2f0
  408f58:	bl	4050d0 <fwrite@plt>
  408f5c:	mov	w0, #0x1                   	// #1
  408f60:	bl	404d20 <exit@plt>
  408f64:	ldr	x0, [sp, #56]
  408f68:	ldrb	w0, [x0]
  408f6c:	cmp	w0, #0x27
  408f70:	b.eq	408f84 <makeargs@@Base+0xb4>  // b.none
  408f74:	ldr	x0, [sp, #56]
  408f78:	ldrb	w0, [x0]
  408f7c:	cmp	w0, #0x22
  408f80:	b.ne	409008 <makeargs@@Base+0x138>  // b.any
  408f84:	ldr	x0, [sp, #56]
  408f88:	add	x1, x0, #0x1
  408f8c:	str	x1, [sp, #56]
  408f90:	ldrb	w0, [x0]
  408f94:	strb	w0, [sp, #51]
  408f98:	ldr	w0, [sp, #52]
  408f9c:	add	w1, w0, #0x1
  408fa0:	str	w1, [sp, #52]
  408fa4:	sxtw	x0, w0
  408fa8:	lsl	x0, x0, #3
  408fac:	ldr	x1, [sp, #32]
  408fb0:	add	x0, x1, x0
  408fb4:	ldr	x1, [sp, #56]
  408fb8:	str	x1, [x0]
  408fbc:	ldrb	w0, [sp, #51]
  408fc0:	mov	w1, w0
  408fc4:	ldr	x0, [sp, #56]
  408fc8:	bl	4050b0 <strchr@plt>
  408fcc:	str	x0, [sp, #56]
  408fd0:	ldr	x0, [sp, #56]
  408fd4:	cmp	x0, #0x0
  408fd8:	b.ne	409060 <makeargs@@Base+0x190>  // b.any
  408fdc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  408fe0:	ldr	x0, [x0, #3992]
  408fe4:	ldr	x0, [x0]
  408fe8:	mov	x3, x0
  408fec:	mov	x2, #0x1b                  	// #27
  408ff0:	mov	x1, #0x1                   	// #1
  408ff4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  408ff8:	add	x0, x0, #0x310
  408ffc:	bl	4050d0 <fwrite@plt>
  409000:	mov	w0, #0x1                   	// #1
  409004:	bl	404d20 <exit@plt>
  409008:	ldr	w0, [sp, #52]
  40900c:	add	w1, w0, #0x1
  409010:	str	w1, [sp, #52]
  409014:	sxtw	x0, w0
  409018:	lsl	x0, x0, #3
  40901c:	ldr	x1, [sp, #32]
  409020:	add	x0, x1, x0
  409024:	ldr	x1, [sp, #56]
  409028:	str	x1, [x0]
  40902c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409030:	add	x1, x0, #0x3b8
  409034:	ldr	x0, [sp, #56]
  409038:	bl	4051c0 <strcspn@plt>
  40903c:	mov	x1, x0
  409040:	ldr	x0, [sp, #56]
  409044:	add	x0, x0, x1
  409048:	str	x0, [sp, #56]
  40904c:	ldr	x0, [sp, #56]
  409050:	ldrb	w0, [x0]
  409054:	cmp	w0, #0x0
  409058:	b.eq	409090 <makeargs@@Base+0x1c0>  // b.none
  40905c:	b	409064 <makeargs@@Base+0x194>
  409060:	nop
  409064:	ldr	x0, [sp, #56]
  409068:	add	x1, x0, #0x1
  40906c:	str	x1, [sp, #56]
  409070:	strb	wzr, [x0]
  409074:	ldr	x0, [sp, #56]
  409078:	ldrb	w0, [x0]
  40907c:	cmp	w0, #0x0
  409080:	b.ne	408ef4 <makeargs@@Base+0x24>  // b.any
  409084:	b	409094 <makeargs@@Base+0x1c4>
  409088:	nop
  40908c:	b	409094 <makeargs@@Base+0x1c4>
  409090:	nop
  409094:	ldrsw	x0, [sp, #52]
  409098:	lsl	x0, x0, #3
  40909c:	ldr	x1, [sp, #32]
  4090a0:	add	x0, x1, x0
  4090a4:	str	xzr, [x0]
  4090a8:	ldr	w0, [sp, #52]
  4090ac:	ldp	x29, x30, [sp], #64
  4090b0:	ret

00000000004090b4 <print_nlmsg_timestamp@@Base>:
  4090b4:	stp	x29, x30, [sp, #-64]!
  4090b8:	mov	x29, sp
  4090bc:	str	x0, [sp, #24]
  4090c0:	str	x1, [sp, #16]
  4090c4:	ldr	x0, [sp, #16]
  4090c8:	add	x0, x0, #0x10
  4090cc:	ldr	w0, [x0]
  4090d0:	mov	w0, w0
  4090d4:	str	x0, [sp, #40]
  4090d8:	ldr	x0, [sp, #16]
  4090dc:	add	x0, x0, #0x14
  4090e0:	ldr	w0, [x0]
  4090e4:	mov	w0, w0
  4090e8:	str	x0, [sp, #56]
  4090ec:	add	x0, sp, #0x28
  4090f0:	bl	404e40 <localtime@plt>
  4090f4:	bl	405150 <asctime@plt>
  4090f8:	str	x0, [sp, #48]
  4090fc:	ldr	x0, [sp, #48]
  409100:	bl	404d10 <strlen@plt>
  409104:	sub	x0, x0, #0x1
  409108:	ldr	x1, [sp, #48]
  40910c:	add	x0, x1, x0
  409110:	strb	wzr, [x0]
  409114:	ldr	x3, [sp, #56]
  409118:	ldr	x2, [sp, #48]
  40911c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409120:	add	x1, x0, #0x330
  409124:	ldr	x0, [sp, #24]
  409128:	bl	405240 <fprintf@plt>
  40912c:	nop
  409130:	ldp	x29, x30, [sp], #64
  409134:	ret

0000000000409138 <int_to_str@@Base>:
  409138:	stp	x29, x30, [sp, #-32]!
  40913c:	mov	x29, sp
  409140:	str	w0, [sp, #28]
  409144:	str	x1, [sp, #16]
  409148:	ldr	w2, [sp, #28]
  40914c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409150:	add	x1, x0, #0x348
  409154:	ldr	x0, [sp, #16]
  409158:	bl	404dd0 <sprintf@plt>
  40915c:	ldr	x0, [sp, #16]
  409160:	ldp	x29, x30, [sp], #32
  409164:	ret

0000000000409168 <get_guid@@Base>:
  409168:	stp	x29, x30, [sp, #-64]!
  40916c:	mov	x29, sp
  409170:	str	x0, [sp, #24]
  409174:	str	x1, [sp, #16]
  409178:	ldr	x0, [sp, #16]
  40917c:	bl	404d10 <strlen@plt>
  409180:	cmp	x0, #0x17
  409184:	b.eq	409190 <get_guid@@Base+0x28>  // b.none
  409188:	mov	w0, #0xffffffff            	// #-1
  40918c:	b	4092b0 <get_guid@@Base+0x148>
  409190:	str	wzr, [sp, #60]
  409194:	b	4091d8 <get_guid@@Base+0x70>
  409198:	ldr	w1, [sp, #60]
  40919c:	mov	w0, w1
  4091a0:	lsl	w0, w0, #1
  4091a4:	add	w0, w0, w1
  4091a8:	add	w0, w0, #0x2
  4091ac:	sxtw	x0, w0
  4091b0:	ldr	x1, [sp, #16]
  4091b4:	add	x0, x1, x0
  4091b8:	ldrb	w0, [x0]
  4091bc:	cmp	w0, #0x3a
  4091c0:	b.eq	4091cc <get_guid@@Base+0x64>  // b.none
  4091c4:	mov	w0, #0xffffffff            	// #-1
  4091c8:	b	4092b0 <get_guid@@Base+0x148>
  4091cc:	ldr	w0, [sp, #60]
  4091d0:	add	w0, w0, #0x1
  4091d4:	str	w0, [sp, #60]
  4091d8:	ldr	w0, [sp, #60]
  4091dc:	cmp	w0, #0x6
  4091e0:	b.le	409198 <get_guid@@Base+0x30>
  4091e4:	ldr	x0, [sp, #24]
  4091e8:	str	xzr, [x0]
  4091ec:	str	wzr, [sp, #60]
  4091f0:	b	4092a0 <get_guid@@Base+0x138>
  4091f4:	ldr	w1, [sp, #60]
  4091f8:	mov	w0, w1
  4091fc:	lsl	w0, w0, #1
  409200:	add	w0, w0, w1
  409204:	sxtw	x0, w0
  409208:	ldr	x1, [sp, #16]
  40920c:	add	x0, x1, x0
  409210:	add	x1, sp, #0x28
  409214:	mov	w2, #0x10                  	// #16
  409218:	bl	404d00 <strtoul@plt>
  40921c:	str	x0, [sp, #48]
  409220:	ldr	w1, [sp, #60]
  409224:	mov	w0, w1
  409228:	lsl	w0, w0, #1
  40922c:	add	w0, w0, w1
  409230:	sxtw	x0, w0
  409234:	add	x0, x0, #0x2
  409238:	ldr	x1, [sp, #16]
  40923c:	add	x1, x1, x0
  409240:	ldr	x0, [sp, #40]
  409244:	cmp	x1, x0
  409248:	b.eq	409254 <get_guid@@Base+0xec>  // b.none
  40924c:	mov	w0, #0xffffffff            	// #-1
  409250:	b	4092b0 <get_guid@@Base+0x148>
  409254:	ldr	x0, [sp, #48]
  409258:	cmp	x0, #0xff
  40925c:	b.ls	409268 <get_guid@@Base+0x100>  // b.plast
  409260:	mov	w0, #0xffffffff            	// #-1
  409264:	b	4092b0 <get_guid@@Base+0x148>
  409268:	ldr	x0, [sp, #24]
  40926c:	ldr	x1, [x0]
  409270:	mov	w2, #0x7                   	// #7
  409274:	ldr	w0, [sp, #60]
  409278:	sub	w0, w2, w0
  40927c:	lsl	w0, w0, #3
  409280:	ldr	x2, [sp, #48]
  409284:	lsl	x0, x2, x0
  409288:	orr	x1, x1, x0
  40928c:	ldr	x0, [sp, #24]
  409290:	str	x1, [x0]
  409294:	ldr	w0, [sp, #60]
  409298:	add	w0, w0, #0x1
  40929c:	str	w0, [sp, #60]
  4092a0:	ldr	w0, [sp, #60]
  4092a4:	cmp	w0, #0x7
  4092a8:	b.le	4091f4 <get_guid@@Base+0x8c>
  4092ac:	mov	w0, #0x0                   	// #0
  4092b0:	ldp	x29, x30, [sp], #64
  4092b4:	ret

00000000004092b8 <get_real_family@@Base>:
  4092b8:	sub	sp, sp, #0x10
  4092bc:	str	w0, [sp, #12]
  4092c0:	str	w1, [sp, #8]
  4092c4:	ldr	w0, [sp, #12]
  4092c8:	cmp	w0, #0x5
  4092cc:	b.eq	4092d8 <get_real_family@@Base+0x20>  // b.none
  4092d0:	ldr	w0, [sp, #8]
  4092d4:	b	409304 <get_real_family@@Base+0x4c>
  4092d8:	ldr	w0, [sp, #8]
  4092dc:	cmp	w0, #0x80
  4092e0:	b.ne	4092ec <get_real_family@@Base+0x34>  // b.any
  4092e4:	mov	w0, #0x2                   	// #2
  4092e8:	b	409304 <get_real_family@@Base+0x4c>
  4092ec:	ldr	w0, [sp, #8]
  4092f0:	cmp	w0, #0x81
  4092f4:	b.ne	409300 <get_real_family@@Base+0x48>  // b.any
  4092f8:	mov	w0, #0xa                   	// #10
  4092fc:	b	409304 <get_real_family@@Base+0x4c>
  409300:	ldr	w0, [sp, #8]
  409304:	add	sp, sp, #0x10
  409308:	ret
  40930c:	sub	sp, sp, #0x30
  409310:	str	x0, [sp, #8]
  409314:	str	x1, [sp]
  409318:	ldr	x0, [sp, #8]
  40931c:	str	x0, [sp, #40]
  409320:	ldr	x0, [sp]
  409324:	str	x0, [sp, #32]
  409328:	ldr	x0, [sp, #32]
  40932c:	add	x0, x0, #0x60
  409330:	str	x0, [sp, #24]
  409334:	b	40935c <get_real_family@@Base+0xa4>
  409338:	ldr	x0, [sp, #32]
  40933c:	add	x1, x0, #0x4
  409340:	str	x1, [sp, #32]
  409344:	ldr	w2, [x0]
  409348:	ldr	x0, [sp, #40]
  40934c:	add	x1, x0, #0x8
  409350:	str	x1, [sp, #40]
  409354:	mov	w1, w2
  409358:	str	x1, [x0]
  40935c:	ldr	x1, [sp, #32]
  409360:	ldr	x0, [sp, #24]
  409364:	cmp	x1, x0
  409368:	b.cc	409338 <get_real_family@@Base+0x80>  // b.lo, b.ul, b.last
  40936c:	nop
  409370:	nop
  409374:	add	sp, sp, #0x30
  409378:	ret
  40937c:	stp	x29, x30, [sp, #-48]!
  409380:	mov	x29, sp
  409384:	str	x0, [sp, #24]
  409388:	str	x1, [sp, #16]
  40938c:	ldr	x0, [sp, #16]
  409390:	add	x0, x0, #0x4
  409394:	str	x0, [sp, #40]
  409398:	mov	x2, #0xc0                  	// #192
  40939c:	mov	w1, #0x0                   	// #0
  4093a0:	ldr	x0, [sp, #24]
  4093a4:	bl	404ef0 <memset@plt>
  4093a8:	ldr	x0, [sp, #40]
  4093ac:	ldr	x1, [x0, #8]
  4093b0:	ldr	x0, [sp, #24]
  4093b4:	str	x1, [x0]
  4093b8:	ldr	x0, [sp, #40]
  4093bc:	ldr	x1, [x0, #16]
  4093c0:	ldr	x0, [sp, #24]
  4093c4:	str	x1, [x0, #16]
  4093c8:	ldr	x0, [sp, #40]
  4093cc:	ldr	x1, [x0, #40]
  4093d0:	ldr	x0, [sp, #24]
  4093d4:	str	x1, [x0, #8]
  4093d8:	ldr	x0, [sp, #40]
  4093dc:	ldr	x1, [x0, #48]
  4093e0:	ldr	x0, [sp, #24]
  4093e4:	str	x1, [x0, #24]
  4093e8:	ldr	x0, [sp, #40]
  4093ec:	ldr	x1, [x0, #104]
  4093f0:	ldr	x0, [sp, #24]
  4093f4:	str	x1, [x0, #32]
  4093f8:	ldr	x0, [sp, #40]
  4093fc:	ldr	x1, [x0, #112]
  409400:	ldr	x0, [sp, #24]
  409404:	str	x1, [x0, #40]
  409408:	ldr	x0, [sp, #40]
  40940c:	ldr	x1, [x0, #184]
  409410:	ldr	x0, [sp, #24]
  409414:	str	x1, [x0, #64]
  409418:	ldr	x0, [sp, #40]
  40941c:	ldr	x1, [x0, #248]
  409420:	ldr	x0, [sp, #24]
  409424:	str	x1, [x0, #104]
  409428:	nop
  40942c:	ldp	x29, x30, [sp], #48
  409430:	ret

0000000000409434 <get_rtnl_link_stats_rta@@Base>:
  409434:	sub	sp, sp, #0x9e0
  409438:	stp	x29, x30, [sp]
  40943c:	mov	x29, sp
  409440:	str	x0, [sp, #24]
  409444:	str	x1, [sp, #16]
  409448:	ldr	x0, [sp, #16]
  40944c:	add	x0, x0, #0xb8
  409450:	ldr	x0, [x0]
  409454:	cmp	x0, #0x0
  409458:	b.eq	40947c <get_rtnl_link_stats_rta@@Base+0x48>  // b.none
  40945c:	ldr	x0, [sp, #16]
  409460:	ldr	x0, [x0, #184]
  409464:	str	x0, [sp, #2512]
  409468:	mov	w0, #0xc0                  	// #192
  40946c:	str	w0, [sp, #2508]
  409470:	ldr	x0, [sp, #24]
  409474:	str	x0, [sp, #2520]
  409478:	b	40952c <get_rtnl_link_stats_rta@@Base+0xf8>
  40947c:	ldr	x0, [sp, #16]
  409480:	add	x0, x0, #0x38
  409484:	ldr	x0, [x0]
  409488:	cmp	x0, #0x0
  40948c:	b.eq	4094b0 <get_rtnl_link_stats_rta@@Base+0x7c>  // b.none
  409490:	ldr	x0, [sp, #16]
  409494:	ldr	x0, [x0, #56]
  409498:	str	x0, [sp, #2512]
  40949c:	mov	w0, #0x60                  	// #96
  4094a0:	str	w0, [sp, #2508]
  4094a4:	add	x0, sp, #0x968
  4094a8:	str	x0, [sp, #2520]
  4094ac:	b	40952c <get_rtnl_link_stats_rta@@Base+0xf8>
  4094b0:	ldr	x0, [sp, #16]
  4094b4:	add	x0, x0, #0x60
  4094b8:	ldr	x0, [x0]
  4094bc:	cmp	x0, #0x0
  4094c0:	b.eq	409524 <get_rtnl_link_stats_rta@@Base+0xf0>  // b.none
  4094c4:	ldr	x0, [sp, #16]
  4094c8:	add	x0, x0, #0x60
  4094cc:	ldr	x0, [x0]
  4094d0:	add	x1, x0, #0x4
  4094d4:	ldr	x0, [sp, #16]
  4094d8:	add	x0, x0, #0x60
  4094dc:	ldr	x0, [x0]
  4094e0:	ldrh	w0, [x0]
  4094e4:	sub	w0, w0, #0x4
  4094e8:	mov	w2, w0
  4094ec:	add	x0, sp, #0x20
  4094f0:	mov	w3, w2
  4094f4:	mov	x2, x1
  4094f8:	mov	w1, #0x128                 	// #296
  4094fc:	bl	410794 <parse_rtattr@@Base>
  409500:	ldr	x0, [sp, #56]
  409504:	cmp	x0, #0x0
  409508:	b.eq	40951c <get_rtnl_link_stats_rta@@Base+0xe8>  // b.none
  40950c:	ldr	x0, [sp, #56]
  409510:	mov	x1, x0
  409514:	ldr	x0, [sp, #24]
  409518:	bl	40937c <get_real_family@@Base+0xc4>
  40951c:	mov	w0, #0xc0                  	// #192
  409520:	b	4095c0 <get_rtnl_link_stats_rta@@Base+0x18c>
  409524:	mov	w0, #0xffffffff            	// #-1
  409528:	b	4095c0 <get_rtnl_link_stats_rta@@Base+0x18c>
  40952c:	ldr	x0, [sp, #2512]
  409530:	ldrh	w0, [x0]
  409534:	sub	w0, w0, #0x4
  409538:	str	w0, [sp, #2504]
  40953c:	ldr	w1, [sp, #2504]
  409540:	ldr	w0, [sp, #2508]
  409544:	cmp	w1, w0
  409548:	b.ge	40957c <get_rtnl_link_stats_rta@@Base+0x148>  // b.tcont
  40954c:	ldrsw	x0, [sp, #2504]
  409550:	ldr	x1, [sp, #2520]
  409554:	add	x3, x1, x0
  409558:	ldr	w1, [sp, #2508]
  40955c:	ldr	w0, [sp, #2504]
  409560:	sub	w0, w1, w0
  409564:	sxtw	x0, w0
  409568:	mov	x2, x0
  40956c:	mov	w1, #0x0                   	// #0
  409570:	mov	x0, x3
  409574:	bl	404ef0 <memset@plt>
  409578:	b	409584 <get_rtnl_link_stats_rta@@Base+0x150>
  40957c:	ldr	w0, [sp, #2508]
  409580:	str	w0, [sp, #2504]
  409584:	ldr	x0, [sp, #2512]
  409588:	add	x0, x0, #0x4
  40958c:	ldrsw	x1, [sp, #2504]
  409590:	mov	x2, x1
  409594:	mov	x1, x0
  409598:	ldr	x0, [sp, #2520]
  40959c:	bl	404ce0 <memcpy@plt>
  4095a0:	ldr	x1, [sp, #2520]
  4095a4:	ldr	x0, [sp, #24]
  4095a8:	cmp	x1, x0
  4095ac:	b.eq	4095bc <get_rtnl_link_stats_rta@@Base+0x188>  // b.none
  4095b0:	ldr	x1, [sp, #2520]
  4095b4:	ldr	x0, [sp, #24]
  4095b8:	bl	40930c <get_real_family@@Base+0x54>
  4095bc:	ldr	w0, [sp, #2508]
  4095c0:	ldp	x29, x30, [sp]
  4095c4:	add	sp, sp, #0x9e0
  4095c8:	ret

00000000004095cc <strlcpy@@Base>:
  4095cc:	stp	x29, x30, [sp, #-80]!
  4095d0:	mov	x29, sp
  4095d4:	str	x0, [sp, #40]
  4095d8:	str	x1, [sp, #32]
  4095dc:	str	x2, [sp, #24]
  4095e0:	ldr	x0, [sp, #32]
  4095e4:	bl	404d10 <strlen@plt>
  4095e8:	str	x0, [sp, #72]
  4095ec:	ldr	x0, [sp, #24]
  4095f0:	cmp	x0, #0x0
  4095f4:	b.eq	409640 <strlcpy@@Base+0x74>  // b.none
  4095f8:	ldr	x0, [sp, #72]
  4095fc:	str	x0, [sp, #56]
  409600:	ldr	x0, [sp, #24]
  409604:	sub	x0, x0, #0x1
  409608:	str	x0, [sp, #48]
  40960c:	ldr	x1, [sp, #48]
  409610:	ldr	x0, [sp, #56]
  409614:	cmp	x1, x0
  409618:	csel	x0, x1, x0, ls  // ls = plast
  40961c:	str	x0, [sp, #64]
  409620:	ldr	x2, [sp, #64]
  409624:	ldr	x1, [sp, #32]
  409628:	ldr	x0, [sp, #40]
  40962c:	bl	404ce0 <memcpy@plt>
  409630:	ldr	x1, [sp, #40]
  409634:	ldr	x0, [sp, #64]
  409638:	add	x0, x1, x0
  40963c:	strb	wzr, [x0]
  409640:	ldr	x0, [sp, #72]
  409644:	ldp	x29, x30, [sp], #80
  409648:	ret

000000000040964c <strlcat@@Base>:
  40964c:	stp	x29, x30, [sp, #-64]!
  409650:	mov	x29, sp
  409654:	str	x0, [sp, #40]
  409658:	str	x1, [sp, #32]
  40965c:	str	x2, [sp, #24]
  409660:	ldr	x0, [sp, #40]
  409664:	bl	404d10 <strlen@plt>
  409668:	str	x0, [sp, #56]
  40966c:	ldr	x1, [sp, #56]
  409670:	ldr	x0, [sp, #24]
  409674:	cmp	x1, x0
  409678:	b.cc	409694 <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  40967c:	ldr	x0, [sp, #32]
  409680:	bl	404d10 <strlen@plt>
  409684:	mov	x1, x0
  409688:	ldr	x0, [sp, #56]
  40968c:	add	x0, x1, x0
  409690:	b	4096c8 <strlcat@@Base+0x7c>
  409694:	ldr	x1, [sp, #40]
  409698:	ldr	x0, [sp, #56]
  40969c:	add	x3, x1, x0
  4096a0:	ldr	x1, [sp, #24]
  4096a4:	ldr	x0, [sp, #56]
  4096a8:	sub	x0, x1, x0
  4096ac:	mov	x2, x0
  4096b0:	ldr	x1, [sp, #32]
  4096b4:	mov	x0, x3
  4096b8:	bl	4095cc <strlcpy@@Base>
  4096bc:	mov	x1, x0
  4096c0:	ldr	x0, [sp, #56]
  4096c4:	add	x0, x1, x0
  4096c8:	ldp	x29, x30, [sp], #64
  4096cc:	ret

00000000004096d0 <drop_cap@@Base>:
  4096d0:	stp	x29, x30, [sp, #-48]!
  4096d4:	mov	x29, sp
  4096d8:	bl	404de0 <getuid@plt>
  4096dc:	cmp	w0, #0x0
  4096e0:	b.eq	409788 <drop_cap@@Base+0xb8>  // b.none
  4096e4:	bl	404d80 <geteuid@plt>
  4096e8:	cmp	w0, #0x0
  4096ec:	b.eq	409788 <drop_cap@@Base+0xb8>  // b.none
  4096f0:	mov	w0, #0xc                   	// #12
  4096f4:	str	w0, [sp, #44]
  4096f8:	mov	w0, #0x2                   	// #2
  4096fc:	str	w0, [sp, #40]
  409700:	bl	405030 <cap_get_proc@plt>
  409704:	str	x0, [sp, #32]
  409708:	ldr	x0, [sp, #32]
  40970c:	cmp	x0, #0x0
  409710:	b.ne	40971c <drop_cap@@Base+0x4c>  // b.any
  409714:	mov	w0, #0x1                   	// #1
  409718:	bl	404d20 <exit@plt>
  40971c:	add	x0, sp, #0x1c
  409720:	mov	x3, x0
  409724:	ldr	w2, [sp, #40]
  409728:	ldr	w1, [sp, #44]
  40972c:	ldr	x0, [sp, #32]
  409730:	bl	404f20 <cap_get_flag@plt>
  409734:	cmp	w0, #0x0
  409738:	b.eq	409744 <drop_cap@@Base+0x74>  // b.none
  40973c:	mov	w0, #0x1                   	// #1
  409740:	bl	404d20 <exit@plt>
  409744:	ldr	w0, [sp, #28]
  409748:	cmp	w0, #0x0
  40974c:	b.ne	409780 <drop_cap@@Base+0xb0>  // b.any
  409750:	ldr	x0, [sp, #32]
  409754:	bl	405120 <cap_clear@plt>
  409758:	cmp	w0, #0x0
  40975c:	b.eq	409768 <drop_cap@@Base+0x98>  // b.none
  409760:	mov	w0, #0x1                   	// #1
  409764:	bl	404d20 <exit@plt>
  409768:	ldr	x0, [sp, #32]
  40976c:	bl	404f60 <cap_set_proc@plt>
  409770:	cmp	w0, #0x0
  409774:	b.eq	409780 <drop_cap@@Base+0xb0>  // b.none
  409778:	mov	w0, #0x1                   	// #1
  40977c:	bl	404d20 <exit@plt>
  409780:	ldr	x0, [sp, #32]
  409784:	bl	405160 <cap_free@plt>
  409788:	nop
  40978c:	ldp	x29, x30, [sp], #48
  409790:	ret

0000000000409794 <get_time@@Base>:
  409794:	stp	x29, x30, [sp, #-48]!
  409798:	mov	x29, sp
  40979c:	str	x0, [sp, #24]
  4097a0:	str	x1, [sp, #16]
  4097a4:	add	x0, sp, #0x20
  4097a8:	mov	x1, x0
  4097ac:	ldr	x0, [sp, #16]
  4097b0:	bl	404d70 <strtod@plt>
  4097b4:	str	d0, [sp, #40]
  4097b8:	ldr	x0, [sp, #32]
  4097bc:	ldr	x1, [sp, #16]
  4097c0:	cmp	x1, x0
  4097c4:	b.ne	4097d0 <get_time@@Base+0x3c>  // b.any
  4097c8:	mov	w0, #0xffffffff            	// #-1
  4097cc:	b	409934 <get_time@@Base+0x1a0>
  4097d0:	ldr	x0, [sp, #32]
  4097d4:	ldrb	w0, [x0]
  4097d8:	cmp	w0, #0x0
  4097dc:	b.eq	409920 <get_time@@Base+0x18c>  // b.none
  4097e0:	ldr	x2, [sp, #32]
  4097e4:	adrp	x0, 410000 <addattrstrz@@Base>
  4097e8:	add	x1, x0, #0xef8
  4097ec:	mov	x0, x2
  4097f0:	bl	404f30 <strcasecmp@plt>
  4097f4:	cmp	w0, #0x0
  4097f8:	b.eq	409834 <get_time@@Base+0xa0>  // b.none
  4097fc:	ldr	x2, [sp, #32]
  409800:	adrp	x0, 410000 <addattrstrz@@Base>
  409804:	add	x1, x0, #0xf00
  409808:	mov	x0, x2
  40980c:	bl	404f30 <strcasecmp@plt>
  409810:	cmp	w0, #0x0
  409814:	b.eq	409834 <get_time@@Base+0xa0>  // b.none
  409818:	ldr	x2, [sp, #32]
  40981c:	adrp	x0, 410000 <addattrstrz@@Base>
  409820:	add	x1, x0, #0xf08
  409824:	mov	x0, x2
  409828:	bl	404f30 <strcasecmp@plt>
  40982c:	cmp	w0, #0x0
  409830:	b.ne	409850 <get_time@@Base+0xbc>  // b.any
  409834:	ldr	d0, [sp, #40]
  409838:	mov	x0, #0x848000000000        	// #145685290680320
  40983c:	movk	x0, #0x412e, lsl #48
  409840:	fmov	d1, x0
  409844:	fmul	d0, d0, d1
  409848:	str	d0, [sp, #40]
  40984c:	b	409920 <get_time@@Base+0x18c>
  409850:	ldr	x2, [sp, #32]
  409854:	adrp	x0, 410000 <addattrstrz@@Base>
  409858:	add	x1, x0, #0xf10
  40985c:	mov	x0, x2
  409860:	bl	404f30 <strcasecmp@plt>
  409864:	cmp	w0, #0x0
  409868:	b.eq	4098a4 <get_time@@Base+0x110>  // b.none
  40986c:	ldr	x2, [sp, #32]
  409870:	adrp	x0, 410000 <addattrstrz@@Base>
  409874:	add	x1, x0, #0xf18
  409878:	mov	x0, x2
  40987c:	bl	404f30 <strcasecmp@plt>
  409880:	cmp	w0, #0x0
  409884:	b.eq	4098a4 <get_time@@Base+0x110>  // b.none
  409888:	ldr	x2, [sp, #32]
  40988c:	adrp	x0, 410000 <addattrstrz@@Base>
  409890:	add	x1, x0, #0xf20
  409894:	mov	x0, x2
  409898:	bl	404f30 <strcasecmp@plt>
  40989c:	cmp	w0, #0x0
  4098a0:	b.ne	4098c0 <get_time@@Base+0x12c>  // b.any
  4098a4:	ldr	d0, [sp, #40]
  4098a8:	mov	x0, #0x400000000000        	// #70368744177664
  4098ac:	movk	x0, #0x408f, lsl #48
  4098b0:	fmov	d1, x0
  4098b4:	fmul	d0, d0, d1
  4098b8:	str	d0, [sp, #40]
  4098bc:	b	409920 <get_time@@Base+0x18c>
  4098c0:	ldr	x2, [sp, #32]
  4098c4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4098c8:	add	x1, x0, #0x350
  4098cc:	mov	x0, x2
  4098d0:	bl	404f30 <strcasecmp@plt>
  4098d4:	cmp	w0, #0x0
  4098d8:	b.eq	40991c <get_time@@Base+0x188>  // b.none
  4098dc:	ldr	x2, [sp, #32]
  4098e0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4098e4:	add	x1, x0, #0x358
  4098e8:	mov	x0, x2
  4098ec:	bl	404f30 <strcasecmp@plt>
  4098f0:	cmp	w0, #0x0
  4098f4:	b.eq	40991c <get_time@@Base+0x188>  // b.none
  4098f8:	ldr	x2, [sp, #32]
  4098fc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409900:	add	x1, x0, #0x360
  409904:	mov	x0, x2
  409908:	bl	404f30 <strcasecmp@plt>
  40990c:	cmp	w0, #0x0
  409910:	b.eq	40991c <get_time@@Base+0x188>  // b.none
  409914:	mov	w0, #0xffffffff            	// #-1
  409918:	b	409934 <get_time@@Base+0x1a0>
  40991c:	nop
  409920:	ldr	d0, [sp, #40]
  409924:	fcvtzu	w1, d0
  409928:	ldr	x0, [sp, #24]
  40992c:	str	w1, [x0]
  409930:	mov	w0, #0x0                   	// #0
  409934:	ldp	x29, x30, [sp], #48
  409938:	ret
  40993c:	stp	x29, x30, [sp, #-48]!
  409940:	mov	x29, sp
  409944:	str	x0, [sp, #24]
  409948:	str	w1, [sp, #20]
  40994c:	str	w2, [sp, #16]
  409950:	ldr	w0, [sp, #16]
  409954:	ucvtf	d0, w0
  409958:	str	d0, [sp, #40]
  40995c:	ldr	d0, [sp, #40]
  409960:	mov	x0, #0x848000000000        	// #145685290680320
  409964:	movk	x0, #0x412e, lsl #48
  409968:	fmov	d1, x0
  40996c:	fcmpe	d0, d1
  409970:	b.lt	4099a0 <get_time@@Base+0x20c>  // b.tstop
  409974:	ldrsw	x1, [sp, #20]
  409978:	mov	x0, #0x848000000000        	// #145685290680320
  40997c:	movk	x0, #0x412e, lsl #48
  409980:	fmov	d1, x0
  409984:	ldr	d0, [sp, #40]
  409988:	fdiv	d0, d0, d1
  40998c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409990:	add	x2, x0, #0x368
  409994:	ldr	x0, [sp, #24]
  409998:	bl	404e20 <snprintf@plt>
  40999c:	b	4099fc <get_time@@Base+0x268>
  4099a0:	ldr	d0, [sp, #40]
  4099a4:	mov	x0, #0x400000000000        	// #70368744177664
  4099a8:	movk	x0, #0x408f, lsl #48
  4099ac:	fmov	d1, x0
  4099b0:	fcmpe	d0, d1
  4099b4:	b.lt	4099e4 <get_time@@Base+0x250>  // b.tstop
  4099b8:	ldrsw	x1, [sp, #20]
  4099bc:	mov	x0, #0x400000000000        	// #70368744177664
  4099c0:	movk	x0, #0x408f, lsl #48
  4099c4:	fmov	d1, x0
  4099c8:	ldr	d0, [sp, #40]
  4099cc:	fdiv	d0, d0, d1
  4099d0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4099d4:	add	x2, x0, #0x370
  4099d8:	ldr	x0, [sp, #24]
  4099dc:	bl	404e20 <snprintf@plt>
  4099e0:	b	4099fc <get_time@@Base+0x268>
  4099e4:	ldrsw	x1, [sp, #20]
  4099e8:	ldr	w3, [sp, #16]
  4099ec:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4099f0:	add	x2, x0, #0x378
  4099f4:	ldr	x0, [sp, #24]
  4099f8:	bl	404e20 <snprintf@plt>
  4099fc:	nop
  409a00:	ldp	x29, x30, [sp], #48
  409a04:	ret

0000000000409a08 <sprint_time@@Base>:
  409a08:	stp	x29, x30, [sp, #-32]!
  409a0c:	mov	x29, sp
  409a10:	str	w0, [sp, #28]
  409a14:	str	x1, [sp, #16]
  409a18:	ldr	w2, [sp, #28]
  409a1c:	mov	w1, #0x3f                  	// #63
  409a20:	ldr	x0, [sp, #16]
  409a24:	bl	40993c <get_time@@Base+0x1a8>
  409a28:	ldr	x0, [sp, #16]
  409a2c:	ldp	x29, x30, [sp], #32
  409a30:	ret

0000000000409a34 <get_time64@@Base>:
  409a34:	stp	x29, x30, [sp, #-48]!
  409a38:	mov	x29, sp
  409a3c:	str	x0, [sp, #24]
  409a40:	str	x1, [sp, #16]
  409a44:	add	x0, sp, #0x20
  409a48:	mov	x1, x0
  409a4c:	ldr	x0, [sp, #16]
  409a50:	bl	404d70 <strtod@plt>
  409a54:	str	d0, [sp, #40]
  409a58:	ldr	x0, [sp, #32]
  409a5c:	ldr	x1, [sp, #16]
  409a60:	cmp	x1, x0
  409a64:	b.ne	409a70 <get_time64@@Base+0x3c>  // b.any
  409a68:	mov	w0, #0xffffffff            	// #-1
  409a6c:	b	409c44 <get_time64@@Base+0x210>
  409a70:	ldr	x0, [sp, #32]
  409a74:	ldrb	w0, [x0]
  409a78:	cmp	w0, #0x0
  409a7c:	b.eq	409c30 <get_time64@@Base+0x1fc>  // b.none
  409a80:	ldr	x2, [sp, #32]
  409a84:	adrp	x0, 410000 <addattrstrz@@Base>
  409a88:	add	x1, x0, #0xef8
  409a8c:	mov	x0, x2
  409a90:	bl	404f30 <strcasecmp@plt>
  409a94:	cmp	w0, #0x0
  409a98:	b.eq	409ad4 <get_time64@@Base+0xa0>  // b.none
  409a9c:	ldr	x2, [sp, #32]
  409aa0:	adrp	x0, 410000 <addattrstrz@@Base>
  409aa4:	add	x1, x0, #0xf00
  409aa8:	mov	x0, x2
  409aac:	bl	404f30 <strcasecmp@plt>
  409ab0:	cmp	w0, #0x0
  409ab4:	b.eq	409ad4 <get_time64@@Base+0xa0>  // b.none
  409ab8:	ldr	x2, [sp, #32]
  409abc:	adrp	x0, 410000 <addattrstrz@@Base>
  409ac0:	add	x1, x0, #0xf08
  409ac4:	mov	x0, x2
  409ac8:	bl	404f30 <strcasecmp@plt>
  409acc:	cmp	w0, #0x0
  409ad0:	b.ne	409af0 <get_time64@@Base+0xbc>  // b.any
  409ad4:	ldr	d0, [sp, #40]
  409ad8:	mov	x0, #0xcd6500000000        	// #225833675390976
  409adc:	movk	x0, #0x41cd, lsl #48
  409ae0:	fmov	d1, x0
  409ae4:	fmul	d0, d0, d1
  409ae8:	str	d0, [sp, #40]
  409aec:	b	409c30 <get_time64@@Base+0x1fc>
  409af0:	ldr	x2, [sp, #32]
  409af4:	adrp	x0, 410000 <addattrstrz@@Base>
  409af8:	add	x1, x0, #0xf10
  409afc:	mov	x0, x2
  409b00:	bl	404f30 <strcasecmp@plt>
  409b04:	cmp	w0, #0x0
  409b08:	b.eq	409b44 <get_time64@@Base+0x110>  // b.none
  409b0c:	ldr	x2, [sp, #32]
  409b10:	adrp	x0, 410000 <addattrstrz@@Base>
  409b14:	add	x1, x0, #0xf18
  409b18:	mov	x0, x2
  409b1c:	bl	404f30 <strcasecmp@plt>
  409b20:	cmp	w0, #0x0
  409b24:	b.eq	409b44 <get_time64@@Base+0x110>  // b.none
  409b28:	ldr	x2, [sp, #32]
  409b2c:	adrp	x0, 410000 <addattrstrz@@Base>
  409b30:	add	x1, x0, #0xf20
  409b34:	mov	x0, x2
  409b38:	bl	404f30 <strcasecmp@plt>
  409b3c:	cmp	w0, #0x0
  409b40:	b.ne	409b60 <get_time64@@Base+0x12c>  // b.any
  409b44:	ldr	d0, [sp, #40]
  409b48:	mov	x0, #0x848000000000        	// #145685290680320
  409b4c:	movk	x0, #0x412e, lsl #48
  409b50:	fmov	d1, x0
  409b54:	fmul	d0, d0, d1
  409b58:	str	d0, [sp, #40]
  409b5c:	b	409c30 <get_time64@@Base+0x1fc>
  409b60:	ldr	x2, [sp, #32]
  409b64:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409b68:	add	x1, x0, #0x350
  409b6c:	mov	x0, x2
  409b70:	bl	404f30 <strcasecmp@plt>
  409b74:	cmp	w0, #0x0
  409b78:	b.eq	409bb4 <get_time64@@Base+0x180>  // b.none
  409b7c:	ldr	x2, [sp, #32]
  409b80:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409b84:	add	x1, x0, #0x358
  409b88:	mov	x0, x2
  409b8c:	bl	404f30 <strcasecmp@plt>
  409b90:	cmp	w0, #0x0
  409b94:	b.eq	409bb4 <get_time64@@Base+0x180>  // b.none
  409b98:	ldr	x2, [sp, #32]
  409b9c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409ba0:	add	x1, x0, #0x360
  409ba4:	mov	x0, x2
  409ba8:	bl	404f30 <strcasecmp@plt>
  409bac:	cmp	w0, #0x0
  409bb0:	b.ne	409bd0 <get_time64@@Base+0x19c>  // b.any
  409bb4:	ldr	d0, [sp, #40]
  409bb8:	mov	x0, #0x400000000000        	// #70368744177664
  409bbc:	movk	x0, #0x408f, lsl #48
  409bc0:	fmov	d1, x0
  409bc4:	fmul	d0, d0, d1
  409bc8:	str	d0, [sp, #40]
  409bcc:	b	409c30 <get_time64@@Base+0x1fc>
  409bd0:	ldr	x2, [sp, #32]
  409bd4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409bd8:	add	x1, x0, #0x380
  409bdc:	mov	x0, x2
  409be0:	bl	404f30 <strcasecmp@plt>
  409be4:	cmp	w0, #0x0
  409be8:	b.eq	409c2c <get_time64@@Base+0x1f8>  // b.none
  409bec:	ldr	x2, [sp, #32]
  409bf0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409bf4:	add	x1, x0, #0x388
  409bf8:	mov	x0, x2
  409bfc:	bl	404f30 <strcasecmp@plt>
  409c00:	cmp	w0, #0x0
  409c04:	b.eq	409c2c <get_time64@@Base+0x1f8>  // b.none
  409c08:	ldr	x2, [sp, #32]
  409c0c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409c10:	add	x1, x0, #0x390
  409c14:	mov	x0, x2
  409c18:	bl	404f30 <strcasecmp@plt>
  409c1c:	cmp	w0, #0x0
  409c20:	b.eq	409c2c <get_time64@@Base+0x1f8>  // b.none
  409c24:	mov	w0, #0xffffffff            	// #-1
  409c28:	b	409c44 <get_time64@@Base+0x210>
  409c2c:	nop
  409c30:	ldr	d0, [sp, #40]
  409c34:	fcvtzs	d0, d0
  409c38:	ldr	x0, [sp, #24]
  409c3c:	str	d0, [x0]
  409c40:	mov	w0, #0x0                   	// #0
  409c44:	ldp	x29, x30, [sp], #48
  409c48:	ret
  409c4c:	stp	x29, x30, [sp, #-64]!
  409c50:	mov	x29, sp
  409c54:	str	x0, [sp, #40]
  409c58:	str	w1, [sp, #36]
  409c5c:	str	x2, [sp, #24]
  409c60:	ldr	d0, [sp, #24]
  409c64:	scvtf	d0, d0
  409c68:	str	d0, [sp, #56]
  409c6c:	ldr	x1, [sp, #24]
  409c70:	mov	x0, #0xc9ff                	// #51711
  409c74:	movk	x0, #0x3b9a, lsl #16
  409c78:	cmp	x1, x0
  409c7c:	b.le	409cac <get_time64@@Base+0x278>
  409c80:	ldrsw	x1, [sp, #36]
  409c84:	mov	x0, #0xcd6500000000        	// #225833675390976
  409c88:	movk	x0, #0x41cd, lsl #48
  409c8c:	fmov	d1, x0
  409c90:	ldr	d0, [sp, #56]
  409c94:	fdiv	d0, d0, d1
  409c98:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409c9c:	add	x2, x0, #0x398
  409ca0:	ldr	x0, [sp, #40]
  409ca4:	bl	404e20 <snprintf@plt>
  409ca8:	b	409d3c <get_time64@@Base+0x308>
  409cac:	ldr	x1, [sp, #24]
  409cb0:	mov	x0, #0x423f                	// #16959
  409cb4:	movk	x0, #0xf, lsl #16
  409cb8:	cmp	x1, x0
  409cbc:	b.le	409cec <get_time64@@Base+0x2b8>
  409cc0:	ldrsw	x1, [sp, #36]
  409cc4:	mov	x0, #0x848000000000        	// #145685290680320
  409cc8:	movk	x0, #0x412e, lsl #48
  409ccc:	fmov	d1, x0
  409cd0:	ldr	d0, [sp, #56]
  409cd4:	fdiv	d0, d0, d1
  409cd8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409cdc:	add	x2, x0, #0x3a0
  409ce0:	ldr	x0, [sp, #40]
  409ce4:	bl	404e20 <snprintf@plt>
  409ce8:	b	409d3c <get_time64@@Base+0x308>
  409cec:	ldr	x0, [sp, #24]
  409cf0:	cmp	x0, #0x3e7
  409cf4:	b.le	409d24 <get_time64@@Base+0x2f0>
  409cf8:	ldrsw	x1, [sp, #36]
  409cfc:	mov	x0, #0x400000000000        	// #70368744177664
  409d00:	movk	x0, #0x408f, lsl #48
  409d04:	fmov	d1, x0
  409d08:	ldr	d0, [sp, #56]
  409d0c:	fdiv	d0, d0, d1
  409d10:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409d14:	add	x2, x0, #0x3a8
  409d18:	ldr	x0, [sp, #40]
  409d1c:	bl	404e20 <snprintf@plt>
  409d20:	b	409d3c <get_time64@@Base+0x308>
  409d24:	ldrsw	x1, [sp, #36]
  409d28:	ldr	x3, [sp, #24]
  409d2c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  409d30:	add	x2, x0, #0x3b0
  409d34:	ldr	x0, [sp, #40]
  409d38:	bl	404e20 <snprintf@plt>
  409d3c:	nop
  409d40:	ldp	x29, x30, [sp], #64
  409d44:	ret

0000000000409d48 <sprint_time64@@Base>:
  409d48:	stp	x29, x30, [sp, #-32]!
  409d4c:	mov	x29, sp
  409d50:	str	x0, [sp, #24]
  409d54:	str	x1, [sp, #16]
  409d58:	ldr	x2, [sp, #24]
  409d5c:	mov	w1, #0x3f                  	// #63
  409d60:	ldr	x0, [sp, #16]
  409d64:	bl	409c4c <get_time64@@Base+0x218>
  409d68:	ldr	x0, [sp, #16]
  409d6c:	ldp	x29, x30, [sp], #32
  409d70:	ret
  409d74:	sub	sp, sp, #0x10
  409d78:	str	x0, [sp, #8]
  409d7c:	ldr	x0, [sp, #8]
  409d80:	add	x0, x0, #0x4
  409d84:	add	sp, sp, #0x10
  409d88:	ret
  409d8c:	sub	sp, sp, #0x10
  409d90:	str	x0, [sp, #8]
  409d94:	ldr	x0, [sp, #8]
  409d98:	ldr	x1, [sp, #8]
  409d9c:	str	x1, [x0]
  409da0:	ldr	x0, [sp, #8]
  409da4:	ldr	x1, [sp, #8]
  409da8:	str	x1, [x0, #8]
  409dac:	nop
  409db0:	add	sp, sp, #0x10
  409db4:	ret
  409db8:	sub	sp, sp, #0x20
  409dbc:	str	x0, [sp, #24]
  409dc0:	str	x1, [sp, #16]
  409dc4:	str	x2, [sp, #8]
  409dc8:	ldr	x0, [sp, #8]
  409dcc:	ldr	x1, [sp, #24]
  409dd0:	str	x1, [x0, #8]
  409dd4:	ldr	x0, [sp, #24]
  409dd8:	ldr	x1, [sp, #8]
  409ddc:	str	x1, [x0]
  409de0:	ldr	x0, [sp, #24]
  409de4:	ldr	x1, [sp, #16]
  409de8:	str	x1, [x0, #8]
  409dec:	ldr	x0, [sp, #16]
  409df0:	ldr	x1, [sp, #24]
  409df4:	str	x1, [x0]
  409df8:	nop
  409dfc:	add	sp, sp, #0x20
  409e00:	ret
  409e04:	stp	x29, x30, [sp, #-32]!
  409e08:	mov	x29, sp
  409e0c:	str	x0, [sp, #24]
  409e10:	str	x1, [sp, #16]
  409e14:	ldr	x0, [sp, #16]
  409e18:	ldr	x0, [x0, #8]
  409e1c:	ldr	x2, [sp, #16]
  409e20:	mov	x1, x0
  409e24:	ldr	x0, [sp, #24]
  409e28:	bl	409db8 <sprint_time64@@Base+0x70>
  409e2c:	nop
  409e30:	ldp	x29, x30, [sp], #32
  409e34:	ret
  409e38:	sub	sp, sp, #0x10
  409e3c:	str	x0, [sp, #8]
  409e40:	str	x1, [sp]
  409e44:	ldr	x0, [sp]
  409e48:	ldr	x1, [sp, #8]
  409e4c:	str	x1, [x0, #8]
  409e50:	ldr	x0, [sp, #8]
  409e54:	ldr	x1, [sp]
  409e58:	str	x1, [x0]
  409e5c:	nop
  409e60:	add	sp, sp, #0x10
  409e64:	ret
  409e68:	stp	x29, x30, [sp, #-32]!
  409e6c:	mov	x29, sp
  409e70:	str	x0, [sp, #24]
  409e74:	ldr	x0, [sp, #24]
  409e78:	ldr	x2, [x0, #8]
  409e7c:	ldr	x0, [sp, #24]
  409e80:	ldr	x0, [x0]
  409e84:	mov	x1, x0
  409e88:	mov	x0, x2
  409e8c:	bl	409e38 <sprint_time64@@Base+0xf0>
  409e90:	nop
  409e94:	ldp	x29, x30, [sp], #32
  409e98:	ret
  409e9c:	sub	sp, sp, #0x20
  409ea0:	str	x0, [sp, #8]
  409ea4:	ldr	x0, [sp, #8]
  409ea8:	ldr	x0, [x0]
  409eac:	str	x0, [sp, #24]
  409eb0:	ldr	x0, [sp, #8]
  409eb4:	ldr	x0, [x0, #8]
  409eb8:	str	x0, [sp, #16]
  409ebc:	ldr	x0, [sp, #16]
  409ec0:	ldr	x1, [sp, #24]
  409ec4:	str	x1, [x0]
  409ec8:	ldr	x0, [sp, #24]
  409ecc:	cmp	x0, #0x0
  409ed0:	b.eq	409ee0 <sprint_time64@@Base+0x198>  // b.none
  409ed4:	ldr	x0, [sp, #24]
  409ed8:	ldr	x1, [sp, #16]
  409edc:	str	x1, [x0, #8]
  409ee0:	nop
  409ee4:	add	sp, sp, #0x20
  409ee8:	ret
  409eec:	sub	sp, sp, #0x20
  409ef0:	str	x0, [sp, #8]
  409ef4:	str	x1, [sp]
  409ef8:	ldr	x0, [sp]
  409efc:	ldr	x0, [x0]
  409f00:	str	x0, [sp, #24]
  409f04:	ldr	x0, [sp, #8]
  409f08:	ldr	x1, [sp, #24]
  409f0c:	str	x1, [x0]
  409f10:	ldr	x0, [sp, #24]
  409f14:	cmp	x0, #0x0
  409f18:	b.eq	409f28 <sprint_time64@@Base+0x1e0>  // b.none
  409f1c:	ldr	x1, [sp, #8]
  409f20:	ldr	x0, [sp, #24]
  409f24:	str	x1, [x0, #8]
  409f28:	ldr	x0, [sp]
  409f2c:	ldr	x1, [sp, #8]
  409f30:	str	x1, [x0]
  409f34:	ldr	x1, [sp]
  409f38:	ldr	x0, [sp, #8]
  409f3c:	str	x1, [x0, #8]
  409f40:	nop
  409f44:	add	sp, sp, #0x20
  409f48:	ret
  409f4c:	sub	sp, sp, #0x30
  409f50:	str	w0, [sp, #12]
  409f54:	ldr	w0, [sp, #12]
  409f58:	and	w0, w0, #0x3ff
  409f5c:	str	w0, [sp, #36]
  409f60:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  409f64:	add	x0, x0, #0xd50
  409f68:	ldr	w1, [sp, #36]
  409f6c:	ldr	x0, [x0, x1, lsl #3]
  409f70:	str	x0, [sp, #40]
  409f74:	b	409fb0 <sprint_time64@@Base+0x268>
  409f78:	ldr	x0, [sp, #40]
  409f7c:	str	x0, [sp, #24]
  409f80:	ldr	x0, [sp, #24]
  409f84:	str	x0, [sp, #16]
  409f88:	ldr	x0, [sp, #16]
  409f8c:	ldr	w0, [x0, #36]
  409f90:	ldr	w1, [sp, #12]
  409f94:	cmp	w1, w0
  409f98:	b.ne	409fa4 <sprint_time64@@Base+0x25c>  // b.any
  409f9c:	ldr	x0, [sp, #16]
  409fa0:	b	409fc0 <sprint_time64@@Base+0x278>
  409fa4:	ldr	x0, [sp, #40]
  409fa8:	ldr	x0, [x0]
  409fac:	str	x0, [sp, #40]
  409fb0:	ldr	x0, [sp, #40]
  409fb4:	cmp	x0, #0x0
  409fb8:	b.ne	409f78 <sprint_time64@@Base+0x230>  // b.any
  409fbc:	mov	x0, #0x0                   	// #0
  409fc0:	add	sp, sp, #0x30
  409fc4:	ret

0000000000409fc8 <namehash@@Base>:
  409fc8:	sub	sp, sp, #0x20
  409fcc:	str	x0, [sp, #8]
  409fd0:	mov	w0, #0x1505                	// #5381
  409fd4:	str	w0, [sp, #28]
  409fd8:	b	40a004 <namehash@@Base+0x3c>
  409fdc:	ldr	w0, [sp, #28]
  409fe0:	lsl	w1, w0, #5
  409fe4:	ldr	w0, [sp, #28]
  409fe8:	add	w1, w1, w0
  409fec:	ldr	x0, [sp, #8]
  409ff0:	add	x2, x0, #0x1
  409ff4:	str	x2, [sp, #8]
  409ff8:	ldrb	w0, [x0]
  409ffc:	add	w0, w1, w0
  40a000:	str	w0, [sp, #28]
  40a004:	ldr	x0, [sp, #8]
  40a008:	ldrb	w0, [x0]
  40a00c:	cmp	w0, #0x0
  40a010:	b.ne	409fdc <namehash@@Base+0x14>  // b.any
  40a014:	ldr	w0, [sp, #28]
  40a018:	add	sp, sp, #0x20
  40a01c:	ret
  40a020:	stp	x29, x30, [sp, #-64]!
  40a024:	mov	x29, sp
  40a028:	str	x0, [sp, #24]
  40a02c:	ldr	x0, [sp, #24]
  40a030:	bl	409fc8 <namehash@@Base>
  40a034:	and	w0, w0, #0x3ff
  40a038:	str	w0, [sp, #52]
  40a03c:	adrp	x0, 427000 <stderr@@GLIBC_2.17+0x1cd0>
  40a040:	add	x0, x0, #0xd50
  40a044:	ldr	w1, [sp, #52]
  40a048:	ldr	x0, [x0, x1, lsl #3]
  40a04c:	str	x0, [sp, #56]
  40a050:	b	40a094 <namehash@@Base+0xcc>
  40a054:	ldr	x0, [sp, #56]
  40a058:	str	x0, [sp, #40]
  40a05c:	ldr	x0, [sp, #40]
  40a060:	sub	x0, x0, #0x10
  40a064:	str	x0, [sp, #32]
  40a068:	ldr	x0, [sp, #32]
  40a06c:	add	x0, x0, #0x40
  40a070:	ldr	x1, [sp, #24]
  40a074:	bl	405000 <strcmp@plt>
  40a078:	cmp	w0, #0x0
  40a07c:	b.ne	40a088 <namehash@@Base+0xc0>  // b.any
  40a080:	ldr	x0, [sp, #32]
  40a084:	b	40a0a4 <namehash@@Base+0xdc>
  40a088:	ldr	x0, [sp, #56]
  40a08c:	ldr	x0, [x0]
  40a090:	str	x0, [sp, #56]
  40a094:	ldr	x0, [sp, #56]
  40a098:	cmp	x0, #0x0
  40a09c:	b.ne	40a054 <namehash@@Base+0x8c>  // b.any
  40a0a0:	mov	x0, #0x0                   	// #0
  40a0a4:	ldp	x29, x30, [sp], #64
  40a0a8:	ret
  40a0ac:	stp	x29, x30, [sp, #-64]!
  40a0b0:	mov	x29, sp
  40a0b4:	str	x0, [sp, #40]
  40a0b8:	str	x1, [sp, #32]
  40a0bc:	str	x2, [sp, #24]
  40a0c0:	ldr	x0, [sp, #32]
  40a0c4:	bl	404d10 <strlen@plt>
  40a0c8:	add	x0, x0, #0x41
  40a0cc:	bl	404e90 <malloc@plt>
  40a0d0:	str	x0, [sp, #56]
  40a0d4:	ldr	x0, [sp, #56]
  40a0d8:	cmp	x0, #0x0
  40a0dc:	b.ne	40a0e8 <namehash@@Base+0x120>  // b.any
  40a0e0:	mov	x0, #0x0                   	// #0
  40a0e4:	b	40a1d4 <namehash@@Base+0x20c>
  40a0e8:	ldr	x0, [sp, #40]
  40a0ec:	ldr	w0, [x0, #4]
  40a0f0:	mov	w1, w0
  40a0f4:	ldr	x0, [sp, #56]
  40a0f8:	str	w1, [x0, #36]
  40a0fc:	ldr	x0, [sp, #56]
  40a100:	add	x0, x0, #0x40
  40a104:	ldr	x1, [sp, #32]
  40a108:	bl	405100 <strcpy@plt>
  40a10c:	ldr	x0, [sp, #40]
  40a110:	ldrh	w1, [x0, #2]
  40a114:	ldr	x0, [sp, #56]
  40a118:	strh	w1, [x0, #40]
  40a11c:	ldr	x0, [sp, #40]
  40a120:	ldr	w1, [x0, #8]
  40a124:	ldr	x0, [sp, #56]
  40a128:	str	w1, [x0, #32]
  40a12c:	ldr	x0, [sp, #24]
  40a130:	cmp	x0, #0x0
  40a134:	b.eq	40a158 <namehash@@Base+0x190>  // b.none
  40a138:	ldr	x0, [sp, #56]
  40a13c:	add	x2, x0, #0x30
  40a140:	ldr	x0, [sp, #24]
  40a144:	add	x0, x0, #0x30
  40a148:	mov	x1, x0
  40a14c:	mov	x0, x2
  40a150:	bl	409e04 <sprint_time64@@Base+0xbc>
  40a154:	b	40a198 <namehash@@Base+0x1d0>
  40a158:	ldr	x0, [sp, #40]
  40a15c:	ldr	w0, [x0, #4]
  40a160:	and	w0, w0, #0x3ff
  40a164:	str	w0, [sp, #52]
  40a168:	ldr	x2, [sp, #56]
  40a16c:	ldr	w0, [sp, #52]
  40a170:	lsl	x1, x0, #3
  40a174:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  40a178:	add	x0, x0, #0xd50
  40a17c:	add	x0, x1, x0
  40a180:	mov	x1, x0
  40a184:	mov	x0, x2
  40a188:	bl	409eec <sprint_time64@@Base+0x1a4>
  40a18c:	ldr	x0, [sp, #56]
  40a190:	add	x0, x0, #0x30
  40a194:	bl	409d8c <sprint_time64@@Base+0x44>
  40a198:	ldr	x0, [sp, #32]
  40a19c:	bl	409fc8 <namehash@@Base>
  40a1a0:	and	w0, w0, #0x3ff
  40a1a4:	str	w0, [sp, #52]
  40a1a8:	ldr	x0, [sp, #56]
  40a1ac:	add	x2, x0, #0x10
  40a1b0:	ldr	w0, [sp, #52]
  40a1b4:	lsl	x1, x0, #3
  40a1b8:	adrp	x0, 427000 <stderr@@GLIBC_2.17+0x1cd0>
  40a1bc:	add	x0, x0, #0xd50
  40a1c0:	add	x0, x1, x0
  40a1c4:	mov	x1, x0
  40a1c8:	mov	x0, x2
  40a1cc:	bl	409eec <sprint_time64@@Base+0x1a4>
  40a1d0:	ldr	x0, [sp, #56]
  40a1d4:	ldp	x29, x30, [sp], #64
  40a1d8:	ret
  40a1dc:	stp	x29, x30, [sp, #-32]!
  40a1e0:	mov	x29, sp
  40a1e4:	str	x0, [sp, #24]
  40a1e8:	strb	w1, [sp, #23]
  40a1ec:	ldr	x0, [sp, #24]
  40a1f0:	add	x0, x0, #0x10
  40a1f4:	bl	409e9c <sprint_time64@@Base+0x154>
  40a1f8:	ldrb	w0, [sp, #23]
  40a1fc:	cmp	w0, #0x0
  40a200:	b.eq	40a210 <namehash@@Base+0x248>  // b.none
  40a204:	ldr	x0, [sp, #24]
  40a208:	bl	409e9c <sprint_time64@@Base+0x154>
  40a20c:	b	40a21c <namehash@@Base+0x254>
  40a210:	ldr	x0, [sp, #24]
  40a214:	add	x0, x0, #0x30
  40a218:	bl	409e68 <sprint_time64@@Base+0x120>
  40a21c:	ldr	x0, [sp, #24]
  40a220:	bl	405070 <free@plt>
  40a224:	nop
  40a228:	ldp	x29, x30, [sp], #32
  40a22c:	ret
  40a230:	stp	x29, x30, [sp, #-64]!
  40a234:	mov	x29, sp
  40a238:	str	x0, [sp, #40]
  40a23c:	str	x1, [sp, #32]
  40a240:	str	x2, [sp, #24]
  40a244:	ldr	x0, [sp, #32]
  40a248:	ldr	w1, [x0, #8]
  40a24c:	ldr	x0, [sp, #40]
  40a250:	str	w1, [x0, #32]
  40a254:	ldr	x0, [sp, #40]
  40a258:	add	x0, x0, #0x40
  40a25c:	ldr	x1, [sp, #24]
  40a260:	bl	405000 <strcmp@plt>
  40a264:	cmp	w0, #0x0
  40a268:	b.eq	40a2b4 <namehash@@Base+0x2ec>  // b.none
  40a26c:	ldr	x0, [sp, #40]
  40a270:	add	x0, x0, #0x10
  40a274:	bl	409e9c <sprint_time64@@Base+0x154>
  40a278:	ldr	x0, [sp, #24]
  40a27c:	bl	409fc8 <namehash@@Base>
  40a280:	and	w0, w0, #0x3ff
  40a284:	str	w0, [sp, #60]
  40a288:	ldr	x0, [sp, #40]
  40a28c:	add	x2, x0, #0x10
  40a290:	ldr	w0, [sp, #60]
  40a294:	lsl	x1, x0, #3
  40a298:	adrp	x0, 427000 <stderr@@GLIBC_2.17+0x1cd0>
  40a29c:	add	x0, x0, #0xd50
  40a2a0:	add	x0, x1, x0
  40a2a4:	mov	x1, x0
  40a2a8:	mov	x0, x2
  40a2ac:	bl	409eec <sprint_time64@@Base+0x1a4>
  40a2b0:	b	40a2b8 <namehash@@Base+0x2f0>
  40a2b4:	nop
  40a2b8:	ldp	x29, x30, [sp], #64
  40a2bc:	ret
  40a2c0:	stp	x29, x30, [sp, #-80]!
  40a2c4:	mov	x29, sp
  40a2c8:	str	x0, [sp, #40]
  40a2cc:	str	x1, [sp, #32]
  40a2d0:	str	x2, [sp, #24]
  40a2d4:	ldr	x0, [sp, #24]
  40a2d8:	ldr	x0, [x0, #416]
  40a2dc:	str	x0, [sp, #56]
  40a2e0:	ldr	x0, [sp, #56]
  40a2e4:	cmp	x0, #0x0
  40a2e8:	b.eq	40a3b0 <namehash@@Base+0x3e8>  // b.none
  40a2ec:	ldr	x0, [sp, #56]
  40a2f0:	ldrh	w0, [x0]
  40a2f4:	sub	w0, w0, #0x4
  40a2f8:	str	w0, [sp, #68]
  40a2fc:	ldr	x0, [sp, #56]
  40a300:	add	x0, x0, #0x4
  40a304:	str	x0, [sp, #72]
  40a308:	b	40a378 <namehash@@Base+0x3b0>
  40a30c:	ldr	x0, [sp, #72]
  40a310:	ldrh	w0, [x0, #2]
  40a314:	cmp	w0, #0x35
  40a318:	b.ne	40a338 <namehash@@Base+0x370>  // b.any
  40a31c:	ldr	x0, [sp, #72]
  40a320:	bl	409d74 <sprint_time64@@Base+0x2c>
  40a324:	ldr	x2, [sp, #40]
  40a328:	mov	x1, x0
  40a32c:	ldr	x0, [sp, #32]
  40a330:	bl	40a0ac <namehash@@Base+0xe4>
  40a334:	b	40a33c <namehash@@Base+0x374>
  40a338:	nop
  40a33c:	ldr	w1, [sp, #68]
  40a340:	ldr	x0, [sp, #72]
  40a344:	ldrh	w0, [x0]
  40a348:	add	w0, w0, #0x3
  40a34c:	and	w0, w0, #0xfffffffc
  40a350:	sub	w0, w1, w0
  40a354:	str	w0, [sp, #68]
  40a358:	ldr	x0, [sp, #72]
  40a35c:	ldrh	w0, [x0]
  40a360:	add	w0, w0, #0x3
  40a364:	mov	w0, w0
  40a368:	and	x0, x0, #0xfffffffc
  40a36c:	ldr	x1, [sp, #72]
  40a370:	add	x0, x1, x0
  40a374:	str	x0, [sp, #72]
  40a378:	ldr	w0, [sp, #68]
  40a37c:	cmp	w0, #0x3
  40a380:	b.le	40a3b4 <namehash@@Base+0x3ec>
  40a384:	ldr	x0, [sp, #72]
  40a388:	ldrh	w0, [x0]
  40a38c:	cmp	w0, #0x3
  40a390:	b.ls	40a3b4 <namehash@@Base+0x3ec>  // b.plast
  40a394:	ldr	x0, [sp, #72]
  40a398:	ldrh	w0, [x0]
  40a39c:	mov	w1, w0
  40a3a0:	ldr	w0, [sp, #68]
  40a3a4:	cmp	w0, w1
  40a3a8:	b.ge	40a30c <namehash@@Base+0x344>  // b.tcont
  40a3ac:	b	40a3b4 <namehash@@Base+0x3ec>
  40a3b0:	nop
  40a3b4:	ldp	x29, x30, [sp], #80
  40a3b8:	ret
  40a3bc:	stp	x29, x30, [sp, #-80]!
  40a3c0:	mov	x29, sp
  40a3c4:	str	x0, [sp, #24]
  40a3c8:	ldr	x0, [sp, #24]
  40a3cc:	ldr	x0, [x0, #48]
  40a3d0:	str	x0, [sp, #56]
  40a3d4:	ldr	x0, [sp, #56]
  40a3d8:	sub	x0, x0, #0x30
  40a3dc:	str	x0, [sp, #72]
  40a3e0:	ldr	x0, [sp, #72]
  40a3e4:	ldr	x0, [x0, #48]
  40a3e8:	str	x0, [sp, #48]
  40a3ec:	ldr	x0, [sp, #48]
  40a3f0:	sub	x0, x0, #0x30
  40a3f4:	str	x0, [sp, #64]
  40a3f8:	b	40a428 <namehash@@Base+0x460>
  40a3fc:	mov	w1, #0x0                   	// #0
  40a400:	ldr	x0, [sp, #72]
  40a404:	bl	40a1dc <namehash@@Base+0x214>
  40a408:	ldr	x0, [sp, #64]
  40a40c:	str	x0, [sp, #72]
  40a410:	ldr	x0, [sp, #64]
  40a414:	ldr	x0, [x0, #48]
  40a418:	str	x0, [sp, #40]
  40a41c:	ldr	x0, [sp, #40]
  40a420:	sub	x0, x0, #0x30
  40a424:	str	x0, [sp, #64]
  40a428:	ldr	x1, [sp, #72]
  40a42c:	ldr	x0, [sp, #24]
  40a430:	cmp	x1, x0
  40a434:	b.ne	40a3fc <namehash@@Base+0x434>  // b.any
  40a438:	nop
  40a43c:	nop
  40a440:	ldp	x29, x30, [sp], #80
  40a444:	ret
  40a448:	stp	x29, x30, [sp, #-112]!
  40a44c:	mov	x29, sp
  40a450:	str	x0, [sp, #40]
  40a454:	str	x1, [sp, #32]
  40a458:	str	x2, [sp, #24]
  40a45c:	ldr	x0, [sp, #24]
  40a460:	ldr	x0, [x0, #416]
  40a464:	str	x0, [sp, #80]
  40a468:	ldr	x0, [sp, #80]
  40a46c:	cmp	x0, #0x0
  40a470:	b.ne	40a480 <namehash@@Base+0x4b8>  // b.any
  40a474:	ldr	x0, [sp, #40]
  40a478:	bl	40a3bc <namehash@@Base+0x3f4>
  40a47c:	b	40a5d0 <namehash@@Base+0x608>
  40a480:	ldr	x0, [sp, #40]
  40a484:	ldr	x0, [x0, #48]
  40a488:	str	x0, [sp, #72]
  40a48c:	ldr	x0, [sp, #72]
  40a490:	sub	x0, x0, #0x30
  40a494:	str	x0, [sp, #96]
  40a498:	ldr	x0, [sp, #80]
  40a49c:	ldrh	w0, [x0]
  40a4a0:	sub	w0, w0, #0x4
  40a4a4:	str	w0, [sp, #92]
  40a4a8:	ldr	x0, [sp, #80]
  40a4ac:	add	x0, x0, #0x4
  40a4b0:	str	x0, [sp, #104]
  40a4b4:	b	40a558 <namehash@@Base+0x590>
  40a4b8:	ldr	x0, [sp, #104]
  40a4bc:	ldrh	w0, [x0, #2]
  40a4c0:	cmp	w0, #0x35
  40a4c4:	b.ne	40a518 <namehash@@Base+0x550>  // b.any
  40a4c8:	ldr	x0, [sp, #96]
  40a4cc:	cmp	x0, #0x0
  40a4d0:	b.eq	40a5ac <namehash@@Base+0x5e4>  // b.none
  40a4d4:	ldr	x0, [sp, #104]
  40a4d8:	bl	409d74 <sprint_time64@@Base+0x2c>
  40a4dc:	mov	x2, x0
  40a4e0:	ldr	x0, [sp, #96]
  40a4e4:	add	x0, x0, #0x40
  40a4e8:	mov	x1, x0
  40a4ec:	mov	x0, x2
  40a4f0:	bl	405000 <strcmp@plt>
  40a4f4:	cmp	w0, #0x0
  40a4f8:	b.ne	40a5ac <namehash@@Base+0x5e4>  // b.any
  40a4fc:	ldr	x0, [sp, #96]
  40a500:	ldr	x0, [x0, #48]
  40a504:	str	x0, [sp, #64]
  40a508:	ldr	x0, [sp, #64]
  40a50c:	sub	x0, x0, #0x30
  40a510:	str	x0, [sp, #96]
  40a514:	b	40a51c <namehash@@Base+0x554>
  40a518:	nop
  40a51c:	ldr	w1, [sp, #92]
  40a520:	ldr	x0, [sp, #104]
  40a524:	ldrh	w0, [x0]
  40a528:	add	w0, w0, #0x3
  40a52c:	and	w0, w0, #0xfffffffc
  40a530:	sub	w0, w1, w0
  40a534:	str	w0, [sp, #92]
  40a538:	ldr	x0, [sp, #104]
  40a53c:	ldrh	w0, [x0]
  40a540:	add	w0, w0, #0x3
  40a544:	mov	w0, w0
  40a548:	and	x0, x0, #0xfffffffc
  40a54c:	ldr	x1, [sp, #104]
  40a550:	add	x0, x1, x0
  40a554:	str	x0, [sp, #104]
  40a558:	ldr	w0, [sp, #92]
  40a55c:	cmp	w0, #0x3
  40a560:	b.le	40a58c <namehash@@Base+0x5c4>
  40a564:	ldr	x0, [sp, #104]
  40a568:	ldrh	w0, [x0]
  40a56c:	cmp	w0, #0x3
  40a570:	b.ls	40a58c <namehash@@Base+0x5c4>  // b.plast
  40a574:	ldr	x0, [sp, #104]
  40a578:	ldrh	w0, [x0]
  40a57c:	mov	w1, w0
  40a580:	ldr	w0, [sp, #92]
  40a584:	cmp	w0, w1
  40a588:	b.ge	40a4b8 <namehash@@Base+0x4f0>  // b.tcont
  40a58c:	ldr	x0, [sp, #96]
  40a590:	ldr	x0, [x0, #48]
  40a594:	str	x0, [sp, #56]
  40a598:	ldr	x0, [sp, #56]
  40a59c:	sub	x0, x0, #0x30
  40a5a0:	cmp	x0, #0x0
  40a5a4:	b.eq	40a5cc <namehash@@Base+0x604>  // b.none
  40a5a8:	b	40a5b0 <namehash@@Base+0x5e8>
  40a5ac:	nop
  40a5b0:	ldr	x0, [sp, #40]
  40a5b4:	bl	40a3bc <namehash@@Base+0x3f4>
  40a5b8:	ldr	x2, [sp, #24]
  40a5bc:	ldr	x1, [sp, #32]
  40a5c0:	ldr	x0, [sp, #40]
  40a5c4:	bl	40a2c0 <namehash@@Base+0x2f8>
  40a5c8:	b	40a5d0 <namehash@@Base+0x608>
  40a5cc:	nop
  40a5d0:	ldp	x29, x30, [sp], #112
  40a5d4:	ret
  40a5d8:	stp	x29, x30, [sp, #-48]!
  40a5dc:	mov	x29, sp
  40a5e0:	str	x0, [sp, #24]
  40a5e4:	str	x1, [sp, #16]
  40a5e8:	ldr	x0, [sp, #16]
  40a5ec:	add	x0, x0, #0x18
  40a5f0:	ldr	x0, [x0]
  40a5f4:	cmp	x0, #0x0
  40a5f8:	b.eq	40a640 <namehash@@Base+0x678>  // b.none
  40a5fc:	ldr	x0, [sp, #16]
  40a600:	add	x0, x0, #0x18
  40a604:	ldr	x0, [x0]
  40a608:	bl	409d74 <sprint_time64@@Base+0x2c>
  40a60c:	mov	x2, #0x0                   	// #0
  40a610:	mov	x1, x0
  40a614:	ldr	x0, [sp, #24]
  40a618:	bl	40a0ac <namehash@@Base+0xe4>
  40a61c:	str	x0, [sp, #40]
  40a620:	ldr	x0, [sp, #40]
  40a624:	cmp	x0, #0x0
  40a628:	b.eq	40a648 <namehash@@Base+0x680>  // b.none
  40a62c:	ldr	x2, [sp, #16]
  40a630:	ldr	x1, [sp, #24]
  40a634:	ldr	x0, [sp, #40]
  40a638:	bl	40a2c0 <namehash@@Base+0x2f8>
  40a63c:	b	40a64c <namehash@@Base+0x684>
  40a640:	nop
  40a644:	b	40a64c <namehash@@Base+0x684>
  40a648:	nop
  40a64c:	ldp	x29, x30, [sp], #48
  40a650:	ret
  40a654:	stp	x29, x30, [sp, #-32]!
  40a658:	mov	x29, sp
  40a65c:	str	x0, [sp, #24]
  40a660:	ldr	x0, [sp, #24]
  40a664:	bl	40a3bc <namehash@@Base+0x3f4>
  40a668:	mov	w1, #0x1                   	// #1
  40a66c:	ldr	x0, [sp, #24]
  40a670:	bl	40a1dc <namehash@@Base+0x214>
  40a674:	nop
  40a678:	ldp	x29, x30, [sp], #32
  40a67c:	ret
  40a680:	stp	x29, x30, [sp, #-48]!
  40a684:	mov	x29, sp
  40a688:	str	x0, [sp, #40]
  40a68c:	str	x1, [sp, #32]
  40a690:	str	x2, [sp, #24]
  40a694:	ldr	x0, [sp, #24]
  40a698:	add	x0, x0, #0x18
  40a69c:	ldr	x0, [x0]
  40a6a0:	cmp	x0, #0x0
  40a6a4:	b.eq	40a6c8 <namehash@@Base+0x700>  // b.none
  40a6a8:	ldr	x0, [sp, #24]
  40a6ac:	add	x0, x0, #0x18
  40a6b0:	ldr	x0, [x0]
  40a6b4:	bl	409d74 <sprint_time64@@Base+0x2c>
  40a6b8:	mov	x2, x0
  40a6bc:	ldr	x1, [sp, #32]
  40a6c0:	ldr	x0, [sp, #40]
  40a6c4:	bl	40a230 <namehash@@Base+0x268>
  40a6c8:	ldr	x2, [sp, #24]
  40a6cc:	ldr	x1, [sp, #32]
  40a6d0:	ldr	x0, [sp, #40]
  40a6d4:	bl	40a448 <namehash@@Base+0x480>
  40a6d8:	nop
  40a6dc:	ldp	x29, x30, [sp], #48
  40a6e0:	ret

000000000040a6e4 <ll_remember_index@@Base>:
  40a6e4:	stp	x29, x30, [sp, #-480]!
  40a6e8:	mov	x29, sp
  40a6ec:	str	x0, [sp, #24]
  40a6f0:	str	x1, [sp, #16]
  40a6f4:	ldr	x0, [sp, #24]
  40a6f8:	add	x0, x0, #0x10
  40a6fc:	str	x0, [sp, #472]
  40a700:	ldr	x0, [sp, #24]
  40a704:	ldrh	w0, [x0, #4]
  40a708:	cmp	w0, #0x10
  40a70c:	b.eq	40a728 <ll_remember_index@@Base+0x44>  // b.none
  40a710:	ldr	x0, [sp, #24]
  40a714:	ldrh	w0, [x0, #4]
  40a718:	cmp	w0, #0x11
  40a71c:	b.eq	40a728 <ll_remember_index@@Base+0x44>  // b.none
  40a720:	mov	w0, #0x0                   	// #0
  40a724:	b	40a7e4 <ll_remember_index@@Base+0x100>
  40a728:	ldr	x0, [sp, #24]
  40a72c:	ldr	w0, [x0]
  40a730:	cmp	w0, #0x1f
  40a734:	b.hi	40a740 <ll_remember_index@@Base+0x5c>  // b.pmore
  40a738:	mov	w0, #0xffffffff            	// #-1
  40a73c:	b	40a7e4 <ll_remember_index@@Base+0x100>
  40a740:	ldr	x0, [sp, #472]
  40a744:	ldr	w0, [x0, #4]
  40a748:	bl	409f4c <sprint_time64@@Base+0x204>
  40a74c:	str	x0, [sp, #464]
  40a750:	ldr	x0, [sp, #24]
  40a754:	ldrh	w0, [x0, #4]
  40a758:	cmp	w0, #0x11
  40a75c:	b.ne	40a77c <ll_remember_index@@Base+0x98>  // b.any
  40a760:	ldr	x0, [sp, #464]
  40a764:	cmp	x0, #0x0
  40a768:	b.eq	40a774 <ll_remember_index@@Base+0x90>  // b.none
  40a76c:	ldr	x0, [sp, #464]
  40a770:	bl	40a654 <namehash@@Base+0x68c>
  40a774:	mov	w0, #0x0                   	// #0
  40a778:	b	40a7e4 <ll_remember_index@@Base+0x100>
  40a77c:	ldr	x0, [sp, #472]
  40a780:	add	x1, x0, #0x10
  40a784:	ldr	x0, [sp, #24]
  40a788:	ldr	w0, [x0]
  40a78c:	sub	w0, w0, #0x20
  40a790:	mov	w2, w0
  40a794:	add	x0, sp, #0x20
  40a798:	mov	w4, #0xffff8000            	// #-32768
  40a79c:	mov	w3, w2
  40a7a0:	mov	x2, x1
  40a7a4:	mov	w1, #0x35                  	// #53
  40a7a8:	bl	4107cc <parse_rtattr_flags@@Base>
  40a7ac:	ldr	x0, [sp, #464]
  40a7b0:	cmp	x0, #0x0
  40a7b4:	b.eq	40a7d0 <ll_remember_index@@Base+0xec>  // b.none
  40a7b8:	add	x0, sp, #0x20
  40a7bc:	mov	x2, x0
  40a7c0:	ldr	x1, [sp, #472]
  40a7c4:	ldr	x0, [sp, #464]
  40a7c8:	bl	40a680 <namehash@@Base+0x6b8>
  40a7cc:	b	40a7e0 <ll_remember_index@@Base+0xfc>
  40a7d0:	add	x0, sp, #0x20
  40a7d4:	mov	x1, x0
  40a7d8:	ldr	x0, [sp, #472]
  40a7dc:	bl	40a5d8 <namehash@@Base+0x610>
  40a7e0:	mov	w0, #0x0                   	// #0
  40a7e4:	ldp	x29, x30, [sp], #480
  40a7e8:	ret

000000000040a7ec <ll_idx_n2a@@Base>:
  40a7ec:	stp	x29, x30, [sp, #-32]!
  40a7f0:	mov	x29, sp
  40a7f4:	str	w0, [sp, #28]
  40a7f8:	ldr	w3, [sp, #28]
  40a7fc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40a800:	add	x2, x0, #0x3c0
  40a804:	mov	x1, #0x10                  	// #16
  40a808:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40a80c:	add	x0, x0, #0xd50
  40a810:	bl	404e20 <snprintf@plt>
  40a814:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40a818:	add	x0, x0, #0xd50
  40a81c:	ldp	x29, x30, [sp], #32
  40a820:	ret
  40a824:	stp	x29, x30, [sp, #-48]!
  40a828:	mov	x29, sp
  40a82c:	str	x0, [sp, #24]
  40a830:	add	x0, sp, #0x2c
  40a834:	mov	x2, x0
  40a838:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40a83c:	add	x1, x0, #0x3c0
  40a840:	ldr	x0, [sp, #24]
  40a844:	bl	4051a0 <__isoc99_sscanf@plt>
  40a848:	cmp	w0, #0x1
  40a84c:	b.eq	40a858 <ll_idx_n2a@@Base+0x6c>  // b.none
  40a850:	mov	w0, #0x0                   	// #0
  40a854:	b	40a85c <ll_idx_n2a@@Base+0x70>
  40a858:	ldr	w0, [sp, #44]
  40a85c:	ldp	x29, x30, [sp], #48
  40a860:	ret
  40a864:	sub	sp, sp, #0x4a0
  40a868:	stp	x29, x30, [sp]
  40a86c:	mov	x29, sp
  40a870:	str	x19, [sp, #16]
  40a874:	str	x0, [sp, #40]
  40a878:	str	w1, [sp, #36]
  40a87c:	add	x0, sp, #0x70
  40a880:	mov	x1, #0x420                 	// #1056
  40a884:	mov	x2, x1
  40a888:	mov	w1, #0x0                   	// #0
  40a88c:	bl	404ef0 <memset@plt>
  40a890:	mov	w0, #0x20                  	// #32
  40a894:	str	w0, [sp, #112]
  40a898:	mov	w0, #0x12                  	// #18
  40a89c:	strh	w0, [sp, #116]
  40a8a0:	mov	w0, #0x1                   	// #1
  40a8a4:	strh	w0, [sp, #118]
  40a8a8:	ldr	w0, [sp, #36]
  40a8ac:	str	w0, [sp, #132]
  40a8b0:	mov	w0, #0x9                   	// #9
  40a8b4:	str	w0, [sp, #1176]
  40a8b8:	stp	xzr, xzr, [sp, #56]
  40a8bc:	stp	xzr, xzr, [sp, #72]
  40a8c0:	stp	xzr, xzr, [sp, #88]
  40a8c4:	str	xzr, [sp, #104]
  40a8c8:	str	wzr, [sp, #1180]
  40a8cc:	add	x0, sp, #0x38
  40a8d0:	mov	w1, #0x0                   	// #0
  40a8d4:	bl	40da68 <rtnl_open@@Base>
  40a8d8:	cmp	w0, #0x0
  40a8dc:	b.ge	40a8e8 <ll_idx_n2a@@Base+0xfc>  // b.tcont
  40a8e0:	mov	w0, #0x0                   	// #0
  40a8e4:	b	40a9b4 <ll_idx_n2a@@Base+0x1c8>
  40a8e8:	add	x0, sp, #0x70
  40a8ec:	ldr	w3, [sp, #1176]
  40a8f0:	mov	w2, #0x1d                  	// #29
  40a8f4:	mov	w1, #0x420                 	// #1056
  40a8f8:	bl	40ff88 <addattr32@@Base>
  40a8fc:	ldr	x0, [sp, #40]
  40a900:	cmp	x0, #0x0
  40a904:	b.eq	40a94c <ll_idx_n2a@@Base+0x160>  // b.none
  40a908:	ldr	x0, [sp, #40]
  40a90c:	bl	407aa8 <check_ifname@@Base>
  40a910:	cmp	w0, #0x0
  40a914:	b.ne	40a920 <ll_idx_n2a@@Base+0x134>  // b.any
  40a918:	mov	w19, #0x3                   	// #3
  40a91c:	b	40a924 <ll_idx_n2a@@Base+0x138>
  40a920:	mov	w19, #0x35                  	// #53
  40a924:	ldr	x0, [sp, #40]
  40a928:	bl	404d10 <strlen@plt>
  40a92c:	add	w0, w0, #0x1
  40a930:	mov	w1, w0
  40a934:	add	x0, sp, #0x70
  40a938:	mov	w4, w1
  40a93c:	ldr	x3, [sp, #40]
  40a940:	mov	w2, w19
  40a944:	mov	w1, #0x420                 	// #1056
  40a948:	bl	410044 <addattr_l@@Base>
  40a94c:	add	x2, sp, #0x30
  40a950:	add	x1, sp, #0x70
  40a954:	add	x0, sp, #0x38
  40a958:	bl	40f784 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  40a95c:	cmp	w0, #0x0
  40a960:	b.lt	40a9a4 <ll_idx_n2a@@Base+0x1b8>  // b.tstop
  40a964:	ldr	x0, [sp, #48]
  40a968:	mov	x1, #0x0                   	// #0
  40a96c:	bl	40a6e4 <ll_remember_index@@Base>
  40a970:	str	w0, [sp, #1180]
  40a974:	ldr	w0, [sp, #1180]
  40a978:	cmp	w0, #0x0
  40a97c:	b.ne	40a998 <ll_idx_n2a@@Base+0x1ac>  // b.any
  40a980:	ldr	x0, [sp, #48]
  40a984:	add	x0, x0, #0x10
  40a988:	str	x0, [sp, #1168]
  40a98c:	ldr	x0, [sp, #1168]
  40a990:	ldr	w0, [x0, #4]
  40a994:	str	w0, [sp, #1180]
  40a998:	ldr	x0, [sp, #48]
  40a99c:	bl	405070 <free@plt>
  40a9a0:	b	40a9a8 <ll_idx_n2a@@Base+0x1bc>
  40a9a4:	nop
  40a9a8:	add	x0, sp, #0x38
  40a9ac:	bl	40d7c0 <rtnl_close@@Base>
  40a9b0:	ldr	w0, [sp, #1180]
  40a9b4:	ldr	x19, [sp, #16]
  40a9b8:	ldp	x29, x30, [sp]
  40a9bc:	add	sp, sp, #0x4a0
  40a9c0:	ret

000000000040a9c4 <ll_index_to_name@@Base>:
  40a9c4:	stp	x29, x30, [sp, #-48]!
  40a9c8:	mov	x29, sp
  40a9cc:	str	w0, [sp, #28]
  40a9d0:	ldr	w0, [sp, #28]
  40a9d4:	cmp	w0, #0x0
  40a9d8:	b.ne	40a9e8 <ll_index_to_name@@Base+0x24>  // b.any
  40a9dc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40a9e0:	add	x0, x0, #0x3c8
  40a9e4:	b	40aa8c <ll_index_to_name@@Base+0xc8>
  40a9e8:	ldr	w0, [sp, #28]
  40a9ec:	bl	409f4c <sprint_time64@@Base+0x204>
  40a9f0:	str	x0, [sp, #40]
  40a9f4:	ldr	x0, [sp, #40]
  40a9f8:	cmp	x0, #0x0
  40a9fc:	b.eq	40aa0c <ll_index_to_name@@Base+0x48>  // b.none
  40aa00:	ldr	x0, [sp, #40]
  40aa04:	add	x0, x0, #0x40
  40aa08:	b	40aa8c <ll_index_to_name@@Base+0xc8>
  40aa0c:	ldr	w0, [sp, #28]
  40aa10:	mov	w1, w0
  40aa14:	mov	x0, #0x0                   	// #0
  40aa18:	bl	40a864 <ll_idx_n2a@@Base+0x78>
  40aa1c:	mov	w1, w0
  40aa20:	ldr	w0, [sp, #28]
  40aa24:	cmp	w0, w1
  40aa28:	b.ne	40aa50 <ll_index_to_name@@Base+0x8c>  // b.any
  40aa2c:	ldr	w0, [sp, #28]
  40aa30:	bl	409f4c <sprint_time64@@Base+0x204>
  40aa34:	str	x0, [sp, #40]
  40aa38:	ldr	x0, [sp, #40]
  40aa3c:	cmp	x0, #0x0
  40aa40:	b.eq	40aa50 <ll_index_to_name@@Base+0x8c>  // b.none
  40aa44:	ldr	x0, [sp, #40]
  40aa48:	add	x0, x0, #0x40
  40aa4c:	b	40aa8c <ll_index_to_name@@Base+0xc8>
  40aa50:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40aa54:	add	x1, x0, #0xd60
  40aa58:	ldr	w0, [sp, #28]
  40aa5c:	bl	404ee0 <if_indextoname@plt>
  40aa60:	cmp	x0, #0x0
  40aa64:	b.ne	40aa84 <ll_index_to_name@@Base+0xc0>  // b.any
  40aa68:	ldr	w3, [sp, #28]
  40aa6c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40aa70:	add	x2, x0, #0x3c0
  40aa74:	mov	x1, #0x10                  	// #16
  40aa78:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40aa7c:	add	x0, x0, #0xd60
  40aa80:	bl	404e20 <snprintf@plt>
  40aa84:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40aa88:	add	x0, x0, #0xd60
  40aa8c:	ldp	x29, x30, [sp], #48
  40aa90:	ret

000000000040aa94 <ll_index_to_type@@Base>:
  40aa94:	stp	x29, x30, [sp, #-48]!
  40aa98:	mov	x29, sp
  40aa9c:	str	w0, [sp, #28]
  40aaa0:	ldr	w0, [sp, #28]
  40aaa4:	cmp	w0, #0x0
  40aaa8:	b.ne	40aab4 <ll_index_to_type@@Base+0x20>  // b.any
  40aaac:	mov	w0, #0xffffffff            	// #-1
  40aab0:	b	40aadc <ll_index_to_type@@Base+0x48>
  40aab4:	ldr	w0, [sp, #28]
  40aab8:	bl	409f4c <sprint_time64@@Base+0x204>
  40aabc:	str	x0, [sp, #40]
  40aac0:	ldr	x0, [sp, #40]
  40aac4:	cmp	x0, #0x0
  40aac8:	b.eq	40aad8 <ll_index_to_type@@Base+0x44>  // b.none
  40aacc:	ldr	x0, [sp, #40]
  40aad0:	ldrh	w0, [x0, #40]
  40aad4:	b	40aadc <ll_index_to_type@@Base+0x48>
  40aad8:	mov	w0, #0xffffffff            	// #-1
  40aadc:	ldp	x29, x30, [sp], #48
  40aae0:	ret

000000000040aae4 <ll_index_to_flags@@Base>:
  40aae4:	stp	x29, x30, [sp, #-48]!
  40aae8:	mov	x29, sp
  40aaec:	str	w0, [sp, #28]
  40aaf0:	ldr	w0, [sp, #28]
  40aaf4:	cmp	w0, #0x0
  40aaf8:	b.ne	40ab04 <ll_index_to_flags@@Base+0x20>  // b.any
  40aafc:	mov	w0, #0x0                   	// #0
  40ab00:	b	40ab2c <ll_index_to_flags@@Base+0x48>
  40ab04:	ldr	w0, [sp, #28]
  40ab08:	bl	409f4c <sprint_time64@@Base+0x204>
  40ab0c:	str	x0, [sp, #40]
  40ab10:	ldr	x0, [sp, #40]
  40ab14:	cmp	x0, #0x0
  40ab18:	b.eq	40ab28 <ll_index_to_flags@@Base+0x44>  // b.none
  40ab1c:	ldr	x0, [sp, #40]
  40ab20:	ldr	w0, [x0, #32]
  40ab24:	b	40ab2c <ll_index_to_flags@@Base+0x48>
  40ab28:	mov	w0, #0xffffffff            	// #-1
  40ab2c:	ldp	x29, x30, [sp], #48
  40ab30:	ret

000000000040ab34 <ll_name_to_index@@Base>:
  40ab34:	stp	x29, x30, [sp, #-48]!
  40ab38:	mov	x29, sp
  40ab3c:	str	x0, [sp, #24]
  40ab40:	ldr	x0, [sp, #24]
  40ab44:	cmp	x0, #0x0
  40ab48:	b.ne	40ab54 <ll_name_to_index@@Base+0x20>  // b.any
  40ab4c:	mov	w0, #0x0                   	// #0
  40ab50:	b	40abbc <ll_name_to_index@@Base+0x88>
  40ab54:	ldr	x0, [sp, #24]
  40ab58:	bl	40a020 <namehash@@Base+0x58>
  40ab5c:	str	x0, [sp, #32]
  40ab60:	ldr	x0, [sp, #32]
  40ab64:	cmp	x0, #0x0
  40ab68:	b.eq	40ab78 <ll_name_to_index@@Base+0x44>  // b.none
  40ab6c:	ldr	x0, [sp, #32]
  40ab70:	ldr	w0, [x0, #36]
  40ab74:	b	40abbc <ll_name_to_index@@Base+0x88>
  40ab78:	mov	w1, #0x0                   	// #0
  40ab7c:	ldr	x0, [sp, #24]
  40ab80:	bl	40a864 <ll_idx_n2a@@Base+0x78>
  40ab84:	str	w0, [sp, #44]
  40ab88:	ldr	w0, [sp, #44]
  40ab8c:	cmp	w0, #0x0
  40ab90:	b.ne	40aba0 <ll_name_to_index@@Base+0x6c>  // b.any
  40ab94:	ldr	x0, [sp, #24]
  40ab98:	bl	405170 <if_nametoindex@plt>
  40ab9c:	str	w0, [sp, #44]
  40aba0:	ldr	w0, [sp, #44]
  40aba4:	cmp	w0, #0x0
  40aba8:	b.ne	40abb8 <ll_name_to_index@@Base+0x84>  // b.any
  40abac:	ldr	x0, [sp, #24]
  40abb0:	bl	40a824 <ll_idx_n2a@@Base+0x38>
  40abb4:	str	w0, [sp, #44]
  40abb8:	ldr	w0, [sp, #44]
  40abbc:	ldp	x29, x30, [sp], #48
  40abc0:	ret

000000000040abc4 <ll_drop_by_index@@Base>:
  40abc4:	stp	x29, x30, [sp, #-48]!
  40abc8:	mov	x29, sp
  40abcc:	str	w0, [sp, #28]
  40abd0:	ldr	w0, [sp, #28]
  40abd4:	bl	409f4c <sprint_time64@@Base+0x204>
  40abd8:	str	x0, [sp, #40]
  40abdc:	ldr	x0, [sp, #40]
  40abe0:	cmp	x0, #0x0
  40abe4:	b.eq	40ac08 <ll_drop_by_index@@Base+0x44>  // b.none
  40abe8:	ldr	x0, [sp, #40]
  40abec:	bl	409e9c <sprint_time64@@Base+0x154>
  40abf0:	ldr	x0, [sp, #40]
  40abf4:	add	x0, x0, #0x10
  40abf8:	bl	409e9c <sprint_time64@@Base+0x154>
  40abfc:	ldr	x0, [sp, #40]
  40ac00:	bl	405070 <free@plt>
  40ac04:	b	40ac0c <ll_drop_by_index@@Base+0x48>
  40ac08:	nop
  40ac0c:	ldp	x29, x30, [sp], #48
  40ac10:	ret

000000000040ac14 <ll_init_map@@Base>:
  40ac14:	stp	x29, x30, [sp, #-32]!
  40ac18:	mov	x29, sp
  40ac1c:	str	x0, [sp, #24]
  40ac20:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40ac24:	add	x0, x0, #0xd70
  40ac28:	ldr	w0, [x0]
  40ac2c:	cmp	w0, #0x0
  40ac30:	b.ne	40acbc <ll_init_map@@Base+0xa8>  // b.any
  40ac34:	mov	w1, #0x0                   	// #0
  40ac38:	ldr	x0, [sp, #24]
  40ac3c:	bl	40e244 <rtnl_linkdump_req@@Base>
  40ac40:	cmp	w0, #0x0
  40ac44:	b.ge	40ac5c <ll_init_map@@Base+0x48>  // b.tcont
  40ac48:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ac4c:	add	x0, x0, #0x3d0
  40ac50:	bl	404d30 <perror@plt>
  40ac54:	mov	w0, #0x1                   	// #1
  40ac58:	bl	404d20 <exit@plt>
  40ac5c:	mov	w3, #0x0                   	// #0
  40ac60:	mov	x2, #0x0                   	// #0
  40ac64:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ac68:	ldr	x1, [x0, #4008]
  40ac6c:	ldr	x0, [sp, #24]
  40ac70:	bl	40f0ec <rtnl_dump_filter_nc@@Base>
  40ac74:	cmp	w0, #0x0
  40ac78:	b.ge	40aca8 <ll_init_map@@Base+0x94>  // b.tcont
  40ac7c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ac80:	ldr	x0, [x0, #3992]
  40ac84:	ldr	x0, [x0]
  40ac88:	mov	x3, x0
  40ac8c:	mov	x2, #0x10                  	// #16
  40ac90:	mov	x1, #0x1                   	// #1
  40ac94:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ac98:	add	x0, x0, #0x3f0
  40ac9c:	bl	4050d0 <fwrite@plt>
  40aca0:	mov	w0, #0x1                   	// #1
  40aca4:	bl	404d20 <exit@plt>
  40aca8:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40acac:	add	x0, x0, #0xd70
  40acb0:	mov	w1, #0x1                   	// #1
  40acb4:	str	w1, [x0]
  40acb8:	b	40acc0 <ll_init_map@@Base+0xac>
  40acbc:	nop
  40acc0:	ldp	x29, x30, [sp], #32
  40acc4:	ret

000000000040acc8 <ll_addr_n2a@@Base>:
  40acc8:	stp	x29, x30, [sp, #-64]!
  40accc:	mov	x29, sp
  40acd0:	str	x0, [sp, #40]
  40acd4:	str	w1, [sp, #36]
  40acd8:	str	w2, [sp, #32]
  40acdc:	str	x3, [sp, #24]
  40ace0:	str	w4, [sp, #20]
  40ace4:	ldr	w0, [sp, #36]
  40ace8:	cmp	w0, #0x4
  40acec:	b.ne	40ad30 <ll_addr_n2a@@Base+0x68>  // b.any
  40acf0:	ldr	w0, [sp, #32]
  40acf4:	cmp	w0, #0x300
  40acf8:	b.eq	40ad14 <ll_addr_n2a@@Base+0x4c>  // b.none
  40acfc:	ldr	w0, [sp, #32]
  40ad00:	cmp	w0, #0x308
  40ad04:	b.eq	40ad14 <ll_addr_n2a@@Base+0x4c>  // b.none
  40ad08:	ldr	w0, [sp, #32]
  40ad0c:	cmp	w0, #0x30a
  40ad10:	b.ne	40ad30 <ll_addr_n2a@@Base+0x68>  // b.any
  40ad14:	ldr	w0, [sp, #20]
  40ad18:	mov	w3, w0
  40ad1c:	ldr	x2, [sp, #24]
  40ad20:	ldr	x1, [sp, #40]
  40ad24:	mov	w0, #0x2                   	// #2
  40ad28:	bl	405260 <inet_ntop@plt>
  40ad2c:	b	40ae24 <ll_addr_n2a@@Base+0x15c>
  40ad30:	ldr	w0, [sp, #36]
  40ad34:	cmp	w0, #0x10
  40ad38:	b.ne	40ad70 <ll_addr_n2a@@Base+0xa8>  // b.any
  40ad3c:	ldr	w0, [sp, #32]
  40ad40:	cmp	w0, #0x301
  40ad44:	b.eq	40ad54 <ll_addr_n2a@@Base+0x8c>  // b.none
  40ad48:	ldr	w0, [sp, #32]
  40ad4c:	cmp	w0, #0x337
  40ad50:	b.ne	40ad70 <ll_addr_n2a@@Base+0xa8>  // b.any
  40ad54:	ldr	w0, [sp, #20]
  40ad58:	mov	w3, w0
  40ad5c:	ldr	x2, [sp, #24]
  40ad60:	ldr	x1, [sp, #40]
  40ad64:	mov	w0, #0xa                   	// #10
  40ad68:	bl	405260 <inet_ntop@plt>
  40ad6c:	b	40ae24 <ll_addr_n2a@@Base+0x15c>
  40ad70:	ldrsw	x1, [sp, #20]
  40ad74:	ldr	x0, [sp, #40]
  40ad78:	ldrb	w0, [x0]
  40ad7c:	mov	w3, w0
  40ad80:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ad84:	add	x2, x0, #0x408
  40ad88:	ldr	x0, [sp, #24]
  40ad8c:	bl	404e20 <snprintf@plt>
  40ad90:	mov	w0, #0x1                   	// #1
  40ad94:	str	w0, [sp, #60]
  40ad98:	mov	w0, #0x2                   	// #2
  40ad9c:	str	w0, [sp, #56]
  40ada0:	b	40ae00 <ll_addr_n2a@@Base+0x138>
  40ada4:	ldrsw	x0, [sp, #56]
  40ada8:	ldr	x1, [sp, #24]
  40adac:	add	x4, x1, x0
  40adb0:	ldr	w1, [sp, #20]
  40adb4:	ldr	w0, [sp, #56]
  40adb8:	sub	w0, w1, w0
  40adbc:	sxtw	x5, w0
  40adc0:	ldrsw	x0, [sp, #60]
  40adc4:	ldr	x1, [sp, #40]
  40adc8:	add	x0, x1, x0
  40adcc:	ldrb	w0, [x0]
  40add0:	mov	w3, w0
  40add4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40add8:	add	x2, x0, #0x410
  40addc:	mov	x1, x5
  40ade0:	mov	x0, x4
  40ade4:	bl	404e20 <snprintf@plt>
  40ade8:	ldr	w0, [sp, #60]
  40adec:	add	w0, w0, #0x1
  40adf0:	str	w0, [sp, #60]
  40adf4:	ldr	w0, [sp, #56]
  40adf8:	add	w0, w0, #0x3
  40adfc:	str	w0, [sp, #56]
  40ae00:	ldr	w1, [sp, #60]
  40ae04:	ldr	w0, [sp, #36]
  40ae08:	cmp	w1, w0
  40ae0c:	b.ge	40ae20 <ll_addr_n2a@@Base+0x158>  // b.tcont
  40ae10:	ldr	w1, [sp, #56]
  40ae14:	ldr	w0, [sp, #20]
  40ae18:	cmp	w1, w0
  40ae1c:	b.lt	40ada4 <ll_addr_n2a@@Base+0xdc>  // b.tstop
  40ae20:	ldr	x0, [sp, #24]
  40ae24:	ldp	x29, x30, [sp], #64
  40ae28:	ret

000000000040ae2c <ll_addr_a2n@@Base>:
  40ae2c:	stp	x29, x30, [sp, #-336]!
  40ae30:	mov	x29, sp
  40ae34:	str	x0, [sp, #40]
  40ae38:	str	w1, [sp, #36]
  40ae3c:	str	x2, [sp, #24]
  40ae40:	mov	w1, #0x2e                  	// #46
  40ae44:	ldr	x0, [sp, #24]
  40ae48:	bl	4050b0 <strchr@plt>
  40ae4c:	cmp	x0, #0x0
  40ae50:	b.eq	40aebc <ll_addr_a2n@@Base+0x90>  // b.none
  40ae54:	add	x0, sp, #0x30
  40ae58:	mov	w2, #0x2                   	// #2
  40ae5c:	ldr	x1, [sp, #24]
  40ae60:	bl	407310 <get_addr_1@@Base>
  40ae64:	cmp	w0, #0x0
  40ae68:	b.eq	40ae94 <ll_addr_a2n@@Base+0x68>  // b.none
  40ae6c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ae70:	ldr	x0, [x0, #3992]
  40ae74:	ldr	x3, [x0]
  40ae78:	ldr	x2, [sp, #24]
  40ae7c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ae80:	add	x1, x0, #0x418
  40ae84:	mov	x0, x3
  40ae88:	bl	405240 <fprintf@plt>
  40ae8c:	mov	w0, #0xffffffff            	// #-1
  40ae90:	b	40afd4 <ll_addr_a2n@@Base+0x1a8>
  40ae94:	ldr	w0, [sp, #36]
  40ae98:	cmp	w0, #0x3
  40ae9c:	b.gt	40aea8 <ll_addr_a2n@@Base+0x7c>
  40aea0:	mov	w0, #0xffffffff            	// #-1
  40aea4:	b	40afd4 <ll_addr_a2n@@Base+0x1a8>
  40aea8:	ldr	w1, [sp, #56]
  40aeac:	ldr	x0, [sp, #40]
  40aeb0:	str	w1, [x0]
  40aeb4:	mov	w0, #0x4                   	// #4
  40aeb8:	b	40afd4 <ll_addr_a2n@@Base+0x1a8>
  40aebc:	str	wzr, [sp, #332]
  40aec0:	b	40afb4 <ll_addr_a2n@@Base+0x188>
  40aec4:	mov	w1, #0x3a                  	// #58
  40aec8:	ldr	x0, [sp, #24]
  40aecc:	bl	4050b0 <strchr@plt>
  40aed0:	str	x0, [sp, #320]
  40aed4:	ldr	x0, [sp, #320]
  40aed8:	cmp	x0, #0x0
  40aedc:	b.eq	40aef4 <ll_addr_a2n@@Base+0xc8>  // b.none
  40aee0:	ldr	x0, [sp, #320]
  40aee4:	strb	wzr, [x0]
  40aee8:	ldr	x0, [sp, #320]
  40aeec:	add	x0, x0, #0x1
  40aef0:	str	x0, [sp, #320]
  40aef4:	add	x0, sp, #0x13c
  40aef8:	mov	x2, x0
  40aefc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40af00:	add	x1, x0, #0x438
  40af04:	ldr	x0, [sp, #24]
  40af08:	bl	4051a0 <__isoc99_sscanf@plt>
  40af0c:	cmp	w0, #0x1
  40af10:	b.eq	40af3c <ll_addr_a2n@@Base+0x110>  // b.none
  40af14:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40af18:	ldr	x0, [x0, #3992]
  40af1c:	ldr	x3, [x0]
  40af20:	ldr	x2, [sp, #24]
  40af24:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40af28:	add	x1, x0, #0x418
  40af2c:	mov	x0, x3
  40af30:	bl	405240 <fprintf@plt>
  40af34:	mov	w0, #0xffffffff            	// #-1
  40af38:	b	40afd4 <ll_addr_a2n@@Base+0x1a8>
  40af3c:	ldr	w0, [sp, #316]
  40af40:	cmp	w0, #0x0
  40af44:	b.lt	40af54 <ll_addr_a2n@@Base+0x128>  // b.tstop
  40af48:	ldr	w0, [sp, #316]
  40af4c:	cmp	w0, #0xff
  40af50:	b.le	40af7c <ll_addr_a2n@@Base+0x150>
  40af54:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40af58:	ldr	x0, [x0, #3992]
  40af5c:	ldr	x3, [x0]
  40af60:	ldr	x2, [sp, #24]
  40af64:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40af68:	add	x1, x0, #0x418
  40af6c:	mov	x0, x3
  40af70:	bl	405240 <fprintf@plt>
  40af74:	mov	w0, #0xffffffff            	// #-1
  40af78:	b	40afd4 <ll_addr_a2n@@Base+0x1a8>
  40af7c:	ldr	w2, [sp, #316]
  40af80:	ldrsw	x0, [sp, #332]
  40af84:	ldr	x1, [sp, #40]
  40af88:	add	x0, x1, x0
  40af8c:	and	w1, w2, #0xff
  40af90:	strb	w1, [x0]
  40af94:	ldr	x0, [sp, #320]
  40af98:	cmp	x0, #0x0
  40af9c:	b.eq	40afc8 <ll_addr_a2n@@Base+0x19c>  // b.none
  40afa0:	ldr	x0, [sp, #320]
  40afa4:	str	x0, [sp, #24]
  40afa8:	ldr	w0, [sp, #332]
  40afac:	add	w0, w0, #0x1
  40afb0:	str	w0, [sp, #332]
  40afb4:	ldr	w1, [sp, #332]
  40afb8:	ldr	w0, [sp, #36]
  40afbc:	cmp	w1, w0
  40afc0:	b.lt	40aec4 <ll_addr_a2n@@Base+0x98>  // b.tstop
  40afc4:	b	40afcc <ll_addr_a2n@@Base+0x1a0>
  40afc8:	nop
  40afcc:	ldr	w0, [sp, #332]
  40afd0:	add	w0, w0, #0x1
  40afd4:	ldp	x29, x30, [sp], #336
  40afd8:	ret
  40afdc:	stp	x29, x30, [sp, #-48]!
  40afe0:	mov	x29, sp
  40afe4:	str	w0, [sp, #44]
  40afe8:	str	x1, [sp, #32]
  40afec:	str	x2, [sp, #24]
  40aff0:	str	x3, [sp, #16]
  40aff4:	ldr	x4, [sp, #16]
  40aff8:	ldr	x3, [sp, #24]
  40affc:	ldr	x2, [sp, #32]
  40b000:	mov	w1, #0x6                   	// #6
  40b004:	ldr	w0, [sp, #44]
  40b008:	bl	40bd24 <print_color_string@@Base>
  40b00c:	nop
  40b010:	ldp	x29, x30, [sp], #48
  40b014:	ret
  40b018:	stp	x29, x30, [sp, #-48]!
  40b01c:	mov	x29, sp
  40b020:	str	w0, [sp, #44]
  40b024:	str	x1, [sp, #32]
  40b028:	str	x2, [sp, #24]
  40b02c:	str	w3, [sp, #40]
  40b030:	ldr	w4, [sp, #40]
  40b034:	ldr	x3, [sp, #24]
  40b038:	ldr	x2, [sp, #32]
  40b03c:	mov	w1, #0x6                   	// #6
  40b040:	ldr	w0, [sp, #44]
  40b044:	bl	40b7d4 <print_color_uint@@Base>
  40b048:	nop
  40b04c:	ldp	x29, x30, [sp], #48
  40b050:	ret
  40b054:	stp	x29, x30, [sp, #-32]!
  40b058:	mov	x29, sp
  40b05c:	str	w0, [sp, #28]
  40b060:	strb	w1, [sp, #27]
  40b064:	ldr	w0, [sp, #28]
  40b068:	cmp	w0, #0x0
  40b06c:	b.eq	40b0fc <ll_addr_a2n@@Base+0x2d0>  // b.none
  40b070:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b074:	ldr	x0, [x0, #4016]
  40b078:	ldr	x0, [x0]
  40b07c:	bl	40cd90 <jsonw_new@@Base>
  40b080:	mov	x1, x0
  40b084:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b088:	add	x0, x0, #0xd78
  40b08c:	str	x1, [x0]
  40b090:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b094:	add	x0, x0, #0xd78
  40b098:	ldr	x0, [x0]
  40b09c:	cmp	x0, #0x0
  40b0a0:	b.ne	40b0b8 <ll_addr_a2n@@Base+0x28c>  // b.any
  40b0a4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40b0a8:	add	x0, x0, #0x440
  40b0ac:	bl	404d30 <perror@plt>
  40b0b0:	mov	w0, #0x1                   	// #1
  40b0b4:	bl	404d20 <exit@plt>
  40b0b8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b0bc:	ldr	x0, [x0, #4056]
  40b0c0:	ldr	w0, [x0]
  40b0c4:	cmp	w0, #0x0
  40b0c8:	b.eq	40b0e0 <ll_addr_a2n@@Base+0x2b4>  // b.none
  40b0cc:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b0d0:	add	x0, x0, #0xd78
  40b0d4:	ldr	x0, [x0]
  40b0d8:	mov	w1, #0x1                   	// #1
  40b0dc:	bl	40ce68 <jsonw_pretty@@Base>
  40b0e0:	ldrb	w0, [sp, #27]
  40b0e4:	cmp	w0, #0x0
  40b0e8:	b.eq	40b0fc <ll_addr_a2n@@Base+0x2d0>  // b.none
  40b0ec:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b0f0:	add	x0, x0, #0xd78
  40b0f4:	ldr	x0, [x0]
  40b0f8:	bl	40d0f0 <jsonw_start_array@@Base>
  40b0fc:	nop
  40b100:	ldp	x29, x30, [sp], #32
  40b104:	ret
  40b108:	stp	x29, x30, [sp, #-32]!
  40b10c:	mov	x29, sp
  40b110:	strb	w0, [sp, #31]
  40b114:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b118:	add	x0, x0, #0xd78
  40b11c:	ldr	x0, [x0]
  40b120:	cmp	x0, #0x0
  40b124:	b.eq	40b150 <ll_addr_a2n@@Base+0x324>  // b.none
  40b128:	ldrb	w0, [sp, #31]
  40b12c:	cmp	w0, #0x0
  40b130:	b.eq	40b144 <ll_addr_a2n@@Base+0x318>  // b.none
  40b134:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b138:	add	x0, x0, #0xd78
  40b13c:	ldr	x0, [x0]
  40b140:	bl	40d138 <jsonw_end_array@@Base>
  40b144:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b148:	add	x0, x0, #0xd78
  40b14c:	bl	40cde4 <jsonw_destroy@@Base>
  40b150:	nop
  40b154:	ldp	x29, x30, [sp], #32
  40b158:	ret

000000000040b15c <new_json_obj@@Base>:
  40b15c:	stp	x29, x30, [sp, #-32]!
  40b160:	mov	x29, sp
  40b164:	str	w0, [sp, #28]
  40b168:	mov	w1, #0x1                   	// #1
  40b16c:	ldr	w0, [sp, #28]
  40b170:	bl	40b054 <ll_addr_a2n@@Base+0x228>
  40b174:	nop
  40b178:	ldp	x29, x30, [sp], #32
  40b17c:	ret

000000000040b180 <delete_json_obj@@Base>:
  40b180:	stp	x29, x30, [sp, #-16]!
  40b184:	mov	x29, sp
  40b188:	mov	w0, #0x1                   	// #1
  40b18c:	bl	40b108 <ll_addr_a2n@@Base+0x2dc>
  40b190:	nop
  40b194:	ldp	x29, x30, [sp], #16
  40b198:	ret

000000000040b19c <new_json_obj_plain@@Base>:
  40b19c:	stp	x29, x30, [sp, #-32]!
  40b1a0:	mov	x29, sp
  40b1a4:	str	w0, [sp, #28]
  40b1a8:	mov	w1, #0x0                   	// #0
  40b1ac:	ldr	w0, [sp, #28]
  40b1b0:	bl	40b054 <ll_addr_a2n@@Base+0x228>
  40b1b4:	nop
  40b1b8:	ldp	x29, x30, [sp], #32
  40b1bc:	ret

000000000040b1c0 <delete_json_obj_plain@@Base>:
  40b1c0:	stp	x29, x30, [sp, #-16]!
  40b1c4:	mov	x29, sp
  40b1c8:	mov	w0, #0x0                   	// #0
  40b1cc:	bl	40b108 <ll_addr_a2n@@Base+0x2dc>
  40b1d0:	nop
  40b1d4:	ldp	x29, x30, [sp], #16
  40b1d8:	ret

000000000040b1dc <is_json_context@@Base>:
  40b1dc:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b1e0:	add	x0, x0, #0xd78
  40b1e4:	ldr	x0, [x0]
  40b1e8:	cmp	x0, #0x0
  40b1ec:	cset	w0, ne  // ne = any
  40b1f0:	and	w0, w0, #0xff
  40b1f4:	ret

000000000040b1f8 <get_json_writer@@Base>:
  40b1f8:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b1fc:	add	x0, x0, #0xd78
  40b200:	ldr	x0, [x0]
  40b204:	ret

000000000040b208 <open_json_object@@Base>:
  40b208:	stp	x29, x30, [sp, #-32]!
  40b20c:	mov	x29, sp
  40b210:	str	x0, [sp, #24]
  40b214:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b218:	add	x0, x0, #0xd78
  40b21c:	ldr	x0, [x0]
  40b220:	cmp	x0, #0x0
  40b224:	b.eq	40b258 <open_json_object@@Base+0x50>  // b.none
  40b228:	ldr	x0, [sp, #24]
  40b22c:	cmp	x0, #0x0
  40b230:	b.eq	40b248 <open_json_object@@Base+0x40>  // b.none
  40b234:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b238:	add	x0, x0, #0xd78
  40b23c:	ldr	x0, [x0]
  40b240:	ldr	x1, [sp, #24]
  40b244:	bl	40cf78 <jsonw_name@@Base>
  40b248:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b24c:	add	x0, x0, #0xd78
  40b250:	ldr	x0, [x0]
  40b254:	bl	40d0a8 <jsonw_start_object@@Base>
  40b258:	nop
  40b25c:	ldp	x29, x30, [sp], #32
  40b260:	ret

000000000040b264 <close_json_object@@Base>:
  40b264:	stp	x29, x30, [sp, #-16]!
  40b268:	mov	x29, sp
  40b26c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b270:	add	x0, x0, #0xd78
  40b274:	ldr	x0, [x0]
  40b278:	cmp	x0, #0x0
  40b27c:	b.eq	40b290 <close_json_object@@Base+0x2c>  // b.none
  40b280:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b284:	add	x0, x0, #0xd78
  40b288:	ldr	x0, [x0]
  40b28c:	bl	40d0cc <jsonw_end_object@@Base>
  40b290:	nop
  40b294:	ldp	x29, x30, [sp], #16
  40b298:	ret

000000000040b29c <open_json_array@@Base>:
  40b29c:	stp	x29, x30, [sp, #-32]!
  40b2a0:	mov	x29, sp
  40b2a4:	str	w0, [sp, #28]
  40b2a8:	str	x1, [sp, #16]
  40b2ac:	ldr	w0, [sp, #28]
  40b2b0:	and	w0, w0, #0x2
  40b2b4:	cmp	w0, #0x0
  40b2b8:	b.ne	40b2cc <open_json_array@@Base+0x30>  // b.any
  40b2bc:	ldr	w0, [sp, #28]
  40b2c0:	and	w0, w0, #0x4
  40b2c4:	cmp	w0, #0x0
  40b2c8:	b.eq	40b314 <open_json_array@@Base+0x78>  // b.none
  40b2cc:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b2d0:	add	x0, x0, #0xd78
  40b2d4:	ldr	x0, [x0]
  40b2d8:	cmp	x0, #0x0
  40b2dc:	b.eq	40b314 <open_json_array@@Base+0x78>  // b.none
  40b2e0:	ldr	x0, [sp, #16]
  40b2e4:	cmp	x0, #0x0
  40b2e8:	b.eq	40b300 <open_json_array@@Base+0x64>  // b.none
  40b2ec:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b2f0:	add	x0, x0, #0xd78
  40b2f4:	ldr	x0, [x0]
  40b2f8:	ldr	x1, [sp, #16]
  40b2fc:	bl	40cf78 <jsonw_name@@Base>
  40b300:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b304:	add	x0, x0, #0xd78
  40b308:	ldr	x0, [x0]
  40b30c:	bl	40d0f0 <jsonw_start_array@@Base>
  40b310:	b	40b358 <open_json_array@@Base+0xbc>
  40b314:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b318:	add	x0, x0, #0xd78
  40b31c:	ldr	x0, [x0]
  40b320:	cmp	x0, #0x0
  40b324:	b.ne	40b358 <open_json_array@@Base+0xbc>  // b.any
  40b328:	ldr	w0, [sp, #28]
  40b32c:	and	w0, w0, #0x1
  40b330:	cmp	w0, #0x0
  40b334:	b.ne	40b348 <open_json_array@@Base+0xac>  // b.any
  40b338:	ldr	w0, [sp, #28]
  40b33c:	and	w0, w0, #0x4
  40b340:	cmp	w0, #0x0
  40b344:	b.eq	40b358 <open_json_array@@Base+0xbc>  // b.none
  40b348:	ldr	x1, [sp, #16]
  40b34c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40b350:	add	x0, x0, #0x450
  40b354:	bl	4051e0 <printf@plt>
  40b358:	nop
  40b35c:	ldp	x29, x30, [sp], #32
  40b360:	ret

000000000040b364 <close_json_array@@Base>:
  40b364:	stp	x29, x30, [sp, #-32]!
  40b368:	mov	x29, sp
  40b36c:	str	w0, [sp, #28]
  40b370:	str	x1, [sp, #16]
  40b374:	ldr	w0, [sp, #28]
  40b378:	and	w0, w0, #0x2
  40b37c:	cmp	w0, #0x0
  40b380:	b.ne	40b394 <close_json_array@@Base+0x30>  // b.any
  40b384:	ldr	w0, [sp, #28]
  40b388:	and	w0, w0, #0x4
  40b38c:	cmp	w0, #0x0
  40b390:	b.eq	40b3bc <close_json_array@@Base+0x58>  // b.none
  40b394:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b398:	add	x0, x0, #0xd78
  40b39c:	ldr	x0, [x0]
  40b3a0:	cmp	x0, #0x0
  40b3a4:	b.eq	40b3bc <close_json_array@@Base+0x58>  // b.none
  40b3a8:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b3ac:	add	x0, x0, #0xd78
  40b3b0:	ldr	x0, [x0]
  40b3b4:	bl	40d138 <jsonw_end_array@@Base>
  40b3b8:	b	40b400 <close_json_array@@Base+0x9c>
  40b3bc:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b3c0:	add	x0, x0, #0xd78
  40b3c4:	ldr	x0, [x0]
  40b3c8:	cmp	x0, #0x0
  40b3cc:	b.ne	40b400 <close_json_array@@Base+0x9c>  // b.any
  40b3d0:	ldr	w0, [sp, #28]
  40b3d4:	and	w0, w0, #0x1
  40b3d8:	cmp	w0, #0x0
  40b3dc:	b.ne	40b3f0 <close_json_array@@Base+0x8c>  // b.any
  40b3e0:	ldr	w0, [sp, #28]
  40b3e4:	and	w0, w0, #0x4
  40b3e8:	cmp	w0, #0x0
  40b3ec:	b.eq	40b400 <close_json_array@@Base+0x9c>  // b.none
  40b3f0:	ldr	x1, [sp, #16]
  40b3f4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40b3f8:	add	x0, x0, #0x450
  40b3fc:	bl	4051e0 <printf@plt>
  40b400:	nop
  40b404:	ldp	x29, x30, [sp], #32
  40b408:	ret

000000000040b40c <print_color_int@@Base>:
  40b40c:	stp	x29, x30, [sp, #-48]!
  40b410:	mov	x29, sp
  40b414:	str	w0, [sp, #44]
  40b418:	str	w1, [sp, #40]
  40b41c:	str	x2, [sp, #32]
  40b420:	str	x3, [sp, #24]
  40b424:	str	w4, [sp, #20]
  40b428:	ldr	w0, [sp, #44]
  40b42c:	and	w0, w0, #0x2
  40b430:	cmp	w0, #0x0
  40b434:	b.ne	40b448 <print_color_int@@Base+0x3c>  // b.any
  40b438:	ldr	w0, [sp, #44]
  40b43c:	and	w0, w0, #0x4
  40b440:	cmp	w0, #0x0
  40b444:	b.eq	40b49c <print_color_int@@Base+0x90>  // b.none
  40b448:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b44c:	add	x0, x0, #0xd78
  40b450:	ldr	x0, [x0]
  40b454:	cmp	x0, #0x0
  40b458:	b.eq	40b49c <print_color_int@@Base+0x90>  // b.none
  40b45c:	ldr	x0, [sp, #32]
  40b460:	cmp	x0, #0x0
  40b464:	b.ne	40b480 <print_color_int@@Base+0x74>  // b.any
  40b468:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b46c:	add	x0, x0, #0xd78
  40b470:	ldr	x0, [x0]
  40b474:	ldr	w1, [sp, #20]
  40b478:	bl	40d3c8 <jsonw_int@@Base>
  40b47c:	b	40b4f0 <print_color_int@@Base+0xe4>
  40b480:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b484:	add	x0, x0, #0xd78
  40b488:	ldr	x0, [x0]
  40b48c:	ldr	w2, [sp, #20]
  40b490:	ldr	x1, [sp, #32]
  40b494:	bl	40d658 <jsonw_int_field@@Base>
  40b498:	b	40b4f0 <print_color_int@@Base+0xe4>
  40b49c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b4a0:	add	x0, x0, #0xd78
  40b4a4:	ldr	x0, [x0]
  40b4a8:	cmp	x0, #0x0
  40b4ac:	b.ne	40b4f0 <print_color_int@@Base+0xe4>  // b.any
  40b4b0:	ldr	w0, [sp, #44]
  40b4b4:	and	w0, w0, #0x1
  40b4b8:	cmp	w0, #0x0
  40b4bc:	b.ne	40b4d0 <print_color_int@@Base+0xc4>  // b.any
  40b4c0:	ldr	w0, [sp, #44]
  40b4c4:	and	w0, w0, #0x4
  40b4c8:	cmp	w0, #0x0
  40b4cc:	b.eq	40b4f0 <print_color_int@@Base+0xe4>  // b.none
  40b4d0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b4d4:	ldr	x0, [x0, #4016]
  40b4d8:	ldr	x0, [x0]
  40b4dc:	ldr	w3, [sp, #20]
  40b4e0:	ldr	x2, [sp, #24]
  40b4e4:	ldr	w1, [sp, #40]
  40b4e8:	bl	40c538 <color_fprintf@@Base>
  40b4ec:	b	40b4f0 <print_color_int@@Base+0xe4>
  40b4f0:	nop
  40b4f4:	ldp	x29, x30, [sp], #48
  40b4f8:	ret

000000000040b4fc <print_color_s64@@Base>:
  40b4fc:	stp	x29, x30, [sp, #-48]!
  40b500:	mov	x29, sp
  40b504:	str	w0, [sp, #44]
  40b508:	str	w1, [sp, #40]
  40b50c:	str	x2, [sp, #32]
  40b510:	str	x3, [sp, #24]
  40b514:	str	x4, [sp, #16]
  40b518:	ldr	w0, [sp, #44]
  40b51c:	and	w0, w0, #0x2
  40b520:	cmp	w0, #0x0
  40b524:	b.ne	40b538 <print_color_s64@@Base+0x3c>  // b.any
  40b528:	ldr	w0, [sp, #44]
  40b52c:	and	w0, w0, #0x4
  40b530:	cmp	w0, #0x0
  40b534:	b.eq	40b58c <print_color_s64@@Base+0x90>  // b.none
  40b538:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b53c:	add	x0, x0, #0xd78
  40b540:	ldr	x0, [x0]
  40b544:	cmp	x0, #0x0
  40b548:	b.eq	40b58c <print_color_s64@@Base+0x90>  // b.none
  40b54c:	ldr	x0, [sp, #32]
  40b550:	cmp	x0, #0x0
  40b554:	b.ne	40b570 <print_color_s64@@Base+0x74>  // b.any
  40b558:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b55c:	add	x0, x0, #0xd78
  40b560:	ldr	x0, [x0]
  40b564:	ldr	x1, [sp, #16]
  40b568:	bl	40d3f8 <jsonw_s64@@Base>
  40b56c:	b	40b5e0 <print_color_s64@@Base+0xe4>
  40b570:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b574:	add	x0, x0, #0xd78
  40b578:	ldr	x0, [x0]
  40b57c:	ldr	x2, [sp, #16]
  40b580:	ldr	x1, [sp, #32]
  40b584:	bl	40d690 <jsonw_s64_field@@Base>
  40b588:	b	40b5e0 <print_color_s64@@Base+0xe4>
  40b58c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b590:	add	x0, x0, #0xd78
  40b594:	ldr	x0, [x0]
  40b598:	cmp	x0, #0x0
  40b59c:	b.ne	40b5e0 <print_color_s64@@Base+0xe4>  // b.any
  40b5a0:	ldr	w0, [sp, #44]
  40b5a4:	and	w0, w0, #0x1
  40b5a8:	cmp	w0, #0x0
  40b5ac:	b.ne	40b5c0 <print_color_s64@@Base+0xc4>  // b.any
  40b5b0:	ldr	w0, [sp, #44]
  40b5b4:	and	w0, w0, #0x4
  40b5b8:	cmp	w0, #0x0
  40b5bc:	b.eq	40b5e0 <print_color_s64@@Base+0xe4>  // b.none
  40b5c0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b5c4:	ldr	x0, [x0, #4016]
  40b5c8:	ldr	x0, [x0]
  40b5cc:	ldr	x3, [sp, #16]
  40b5d0:	ldr	x2, [sp, #24]
  40b5d4:	ldr	w1, [sp, #40]
  40b5d8:	bl	40c538 <color_fprintf@@Base>
  40b5dc:	b	40b5e0 <print_color_s64@@Base+0xe4>
  40b5e0:	nop
  40b5e4:	ldp	x29, x30, [sp], #48
  40b5e8:	ret

000000000040b5ec <print_color_hhu@@Base>:
  40b5ec:	stp	x29, x30, [sp, #-48]!
  40b5f0:	mov	x29, sp
  40b5f4:	str	w0, [sp, #44]
  40b5f8:	str	w1, [sp, #40]
  40b5fc:	str	x2, [sp, #32]
  40b600:	str	x3, [sp, #24]
  40b604:	strb	w4, [sp, #23]
  40b608:	ldr	w0, [sp, #44]
  40b60c:	and	w0, w0, #0x2
  40b610:	cmp	w0, #0x0
  40b614:	b.ne	40b628 <print_color_hhu@@Base+0x3c>  // b.any
  40b618:	ldr	w0, [sp, #44]
  40b61c:	and	w0, w0, #0x4
  40b620:	cmp	w0, #0x0
  40b624:	b.eq	40b67c <print_color_hhu@@Base+0x90>  // b.none
  40b628:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b62c:	add	x0, x0, #0xd78
  40b630:	ldr	x0, [x0]
  40b634:	cmp	x0, #0x0
  40b638:	b.eq	40b67c <print_color_hhu@@Base+0x90>  // b.none
  40b63c:	ldr	x0, [sp, #32]
  40b640:	cmp	x0, #0x0
  40b644:	b.ne	40b660 <print_color_hhu@@Base+0x74>  // b.any
  40b648:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b64c:	add	x0, x0, #0xd78
  40b650:	ldr	x0, [x0]
  40b654:	ldrb	w1, [sp, #23]
  40b658:	bl	40d270 <jsonw_hhu@@Base>
  40b65c:	b	40b6d4 <print_color_hhu@@Base+0xe8>
  40b660:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b664:	add	x0, x0, #0xd78
  40b668:	ldr	x0, [x0]
  40b66c:	ldrb	w2, [sp, #23]
  40b670:	ldr	x1, [sp, #32]
  40b674:	bl	40d578 <jsonw_hhu_field@@Base>
  40b678:	b	40b6d4 <print_color_hhu@@Base+0xe8>
  40b67c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b680:	add	x0, x0, #0xd78
  40b684:	ldr	x0, [x0]
  40b688:	cmp	x0, #0x0
  40b68c:	b.ne	40b6d4 <print_color_hhu@@Base+0xe8>  // b.any
  40b690:	ldr	w0, [sp, #44]
  40b694:	and	w0, w0, #0x1
  40b698:	cmp	w0, #0x0
  40b69c:	b.ne	40b6b0 <print_color_hhu@@Base+0xc4>  // b.any
  40b6a0:	ldr	w0, [sp, #44]
  40b6a4:	and	w0, w0, #0x4
  40b6a8:	cmp	w0, #0x0
  40b6ac:	b.eq	40b6d4 <print_color_hhu@@Base+0xe8>  // b.none
  40b6b0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b6b4:	ldr	x0, [x0, #4016]
  40b6b8:	ldr	x0, [x0]
  40b6bc:	ldrb	w1, [sp, #23]
  40b6c0:	mov	w3, w1
  40b6c4:	ldr	x2, [sp, #24]
  40b6c8:	ldr	w1, [sp, #40]
  40b6cc:	bl	40c538 <color_fprintf@@Base>
  40b6d0:	b	40b6d4 <print_color_hhu@@Base+0xe8>
  40b6d4:	nop
  40b6d8:	ldp	x29, x30, [sp], #48
  40b6dc:	ret

000000000040b6e0 <print_color_hu@@Base>:
  40b6e0:	stp	x29, x30, [sp, #-48]!
  40b6e4:	mov	x29, sp
  40b6e8:	str	w0, [sp, #44]
  40b6ec:	str	w1, [sp, #40]
  40b6f0:	str	x2, [sp, #32]
  40b6f4:	str	x3, [sp, #24]
  40b6f8:	strh	w4, [sp, #22]
  40b6fc:	ldr	w0, [sp, #44]
  40b700:	and	w0, w0, #0x2
  40b704:	cmp	w0, #0x0
  40b708:	b.ne	40b71c <print_color_hu@@Base+0x3c>  // b.any
  40b70c:	ldr	w0, [sp, #44]
  40b710:	and	w0, w0, #0x4
  40b714:	cmp	w0, #0x0
  40b718:	b.eq	40b770 <print_color_hu@@Base+0x90>  // b.none
  40b71c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b720:	add	x0, x0, #0xd78
  40b724:	ldr	x0, [x0]
  40b728:	cmp	x0, #0x0
  40b72c:	b.eq	40b770 <print_color_hu@@Base+0x90>  // b.none
  40b730:	ldr	x0, [sp, #32]
  40b734:	cmp	x0, #0x0
  40b738:	b.ne	40b754 <print_color_hu@@Base+0x74>  // b.any
  40b73c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b740:	add	x0, x0, #0xd78
  40b744:	ldr	x0, [x0]
  40b748:	ldrh	w1, [sp, #22]
  40b74c:	bl	40d2a4 <jsonw_hu@@Base>
  40b750:	b	40b7c8 <print_color_hu@@Base+0xe8>
  40b754:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b758:	add	x0, x0, #0xd78
  40b75c:	ldr	x0, [x0]
  40b760:	ldrh	w2, [sp, #22]
  40b764:	ldr	x1, [sp, #32]
  40b768:	bl	40d5b0 <jsonw_hu_field@@Base>
  40b76c:	b	40b7c8 <print_color_hu@@Base+0xe8>
  40b770:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b774:	add	x0, x0, #0xd78
  40b778:	ldr	x0, [x0]
  40b77c:	cmp	x0, #0x0
  40b780:	b.ne	40b7c8 <print_color_hu@@Base+0xe8>  // b.any
  40b784:	ldr	w0, [sp, #44]
  40b788:	and	w0, w0, #0x1
  40b78c:	cmp	w0, #0x0
  40b790:	b.ne	40b7a4 <print_color_hu@@Base+0xc4>  // b.any
  40b794:	ldr	w0, [sp, #44]
  40b798:	and	w0, w0, #0x4
  40b79c:	cmp	w0, #0x0
  40b7a0:	b.eq	40b7c8 <print_color_hu@@Base+0xe8>  // b.none
  40b7a4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b7a8:	ldr	x0, [x0, #4016]
  40b7ac:	ldr	x0, [x0]
  40b7b0:	ldrh	w1, [sp, #22]
  40b7b4:	mov	w3, w1
  40b7b8:	ldr	x2, [sp, #24]
  40b7bc:	ldr	w1, [sp, #40]
  40b7c0:	bl	40c538 <color_fprintf@@Base>
  40b7c4:	b	40b7c8 <print_color_hu@@Base+0xe8>
  40b7c8:	nop
  40b7cc:	ldp	x29, x30, [sp], #48
  40b7d0:	ret

000000000040b7d4 <print_color_uint@@Base>:
  40b7d4:	stp	x29, x30, [sp, #-48]!
  40b7d8:	mov	x29, sp
  40b7dc:	str	w0, [sp, #44]
  40b7e0:	str	w1, [sp, #40]
  40b7e4:	str	x2, [sp, #32]
  40b7e8:	str	x3, [sp, #24]
  40b7ec:	str	w4, [sp, #20]
  40b7f0:	ldr	w0, [sp, #44]
  40b7f4:	and	w0, w0, #0x2
  40b7f8:	cmp	w0, #0x0
  40b7fc:	b.ne	40b810 <print_color_uint@@Base+0x3c>  // b.any
  40b800:	ldr	w0, [sp, #44]
  40b804:	and	w0, w0, #0x4
  40b808:	cmp	w0, #0x0
  40b80c:	b.eq	40b864 <print_color_uint@@Base+0x90>  // b.none
  40b810:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b814:	add	x0, x0, #0xd78
  40b818:	ldr	x0, [x0]
  40b81c:	cmp	x0, #0x0
  40b820:	b.eq	40b864 <print_color_uint@@Base+0x90>  // b.none
  40b824:	ldr	x0, [sp, #32]
  40b828:	cmp	x0, #0x0
  40b82c:	b.ne	40b848 <print_color_uint@@Base+0x74>  // b.any
  40b830:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b834:	add	x0, x0, #0xd78
  40b838:	ldr	x0, [x0]
  40b83c:	ldr	w1, [sp, #20]
  40b840:	bl	40d2d8 <jsonw_uint@@Base>
  40b844:	b	40b8b8 <print_color_uint@@Base+0xe4>
  40b848:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b84c:	add	x0, x0, #0xd78
  40b850:	ldr	x0, [x0]
  40b854:	ldr	w2, [sp, #20]
  40b858:	ldr	x1, [sp, #32]
  40b85c:	bl	40d4d0 <jsonw_uint_field@@Base>
  40b860:	b	40b8b8 <print_color_uint@@Base+0xe4>
  40b864:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b868:	add	x0, x0, #0xd78
  40b86c:	ldr	x0, [x0]
  40b870:	cmp	x0, #0x0
  40b874:	b.ne	40b8b8 <print_color_uint@@Base+0xe4>  // b.any
  40b878:	ldr	w0, [sp, #44]
  40b87c:	and	w0, w0, #0x1
  40b880:	cmp	w0, #0x0
  40b884:	b.ne	40b898 <print_color_uint@@Base+0xc4>  // b.any
  40b888:	ldr	w0, [sp, #44]
  40b88c:	and	w0, w0, #0x4
  40b890:	cmp	w0, #0x0
  40b894:	b.eq	40b8b8 <print_color_uint@@Base+0xe4>  // b.none
  40b898:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b89c:	ldr	x0, [x0, #4016]
  40b8a0:	ldr	x0, [x0]
  40b8a4:	ldr	w3, [sp, #20]
  40b8a8:	ldr	x2, [sp, #24]
  40b8ac:	ldr	w1, [sp, #40]
  40b8b0:	bl	40c538 <color_fprintf@@Base>
  40b8b4:	b	40b8b8 <print_color_uint@@Base+0xe4>
  40b8b8:	nop
  40b8bc:	ldp	x29, x30, [sp], #48
  40b8c0:	ret

000000000040b8c4 <print_color_u64@@Base>:
  40b8c4:	stp	x29, x30, [sp, #-48]!
  40b8c8:	mov	x29, sp
  40b8cc:	str	w0, [sp, #44]
  40b8d0:	str	w1, [sp, #40]
  40b8d4:	str	x2, [sp, #32]
  40b8d8:	str	x3, [sp, #24]
  40b8dc:	str	x4, [sp, #16]
  40b8e0:	ldr	w0, [sp, #44]
  40b8e4:	and	w0, w0, #0x2
  40b8e8:	cmp	w0, #0x0
  40b8ec:	b.ne	40b900 <print_color_u64@@Base+0x3c>  // b.any
  40b8f0:	ldr	w0, [sp, #44]
  40b8f4:	and	w0, w0, #0x4
  40b8f8:	cmp	w0, #0x0
  40b8fc:	b.eq	40b954 <print_color_u64@@Base+0x90>  // b.none
  40b900:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b904:	add	x0, x0, #0xd78
  40b908:	ldr	x0, [x0]
  40b90c:	cmp	x0, #0x0
  40b910:	b.eq	40b954 <print_color_u64@@Base+0x90>  // b.none
  40b914:	ldr	x0, [sp, #32]
  40b918:	cmp	x0, #0x0
  40b91c:	b.ne	40b938 <print_color_u64@@Base+0x74>  // b.any
  40b920:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b924:	add	x0, x0, #0xd78
  40b928:	ldr	x0, [x0]
  40b92c:	ldr	x1, [sp, #16]
  40b930:	bl	40d308 <jsonw_u64@@Base>
  40b934:	b	40b9a8 <print_color_u64@@Base+0xe4>
  40b938:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b93c:	add	x0, x0, #0xd78
  40b940:	ldr	x0, [x0]
  40b944:	ldr	x2, [sp, #16]
  40b948:	ldr	x1, [sp, #32]
  40b94c:	bl	40d508 <jsonw_u64_field@@Base>
  40b950:	b	40b9a8 <print_color_u64@@Base+0xe4>
  40b954:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b958:	add	x0, x0, #0xd78
  40b95c:	ldr	x0, [x0]
  40b960:	cmp	x0, #0x0
  40b964:	b.ne	40b9a8 <print_color_u64@@Base+0xe4>  // b.any
  40b968:	ldr	w0, [sp, #44]
  40b96c:	and	w0, w0, #0x1
  40b970:	cmp	w0, #0x0
  40b974:	b.ne	40b988 <print_color_u64@@Base+0xc4>  // b.any
  40b978:	ldr	w0, [sp, #44]
  40b97c:	and	w0, w0, #0x4
  40b980:	cmp	w0, #0x0
  40b984:	b.eq	40b9a8 <print_color_u64@@Base+0xe4>  // b.none
  40b988:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40b98c:	ldr	x0, [x0, #4016]
  40b990:	ldr	x0, [x0]
  40b994:	ldr	x3, [sp, #16]
  40b998:	ldr	x2, [sp, #24]
  40b99c:	ldr	w1, [sp, #40]
  40b9a0:	bl	40c538 <color_fprintf@@Base>
  40b9a4:	b	40b9a8 <print_color_u64@@Base+0xe4>
  40b9a8:	nop
  40b9ac:	ldp	x29, x30, [sp], #48
  40b9b0:	ret

000000000040b9b4 <print_color_luint@@Base>:
  40b9b4:	stp	x29, x30, [sp, #-48]!
  40b9b8:	mov	x29, sp
  40b9bc:	str	w0, [sp, #44]
  40b9c0:	str	w1, [sp, #40]
  40b9c4:	str	x2, [sp, #32]
  40b9c8:	str	x3, [sp, #24]
  40b9cc:	str	x4, [sp, #16]
  40b9d0:	ldr	w0, [sp, #44]
  40b9d4:	and	w0, w0, #0x2
  40b9d8:	cmp	w0, #0x0
  40b9dc:	b.ne	40b9f0 <print_color_luint@@Base+0x3c>  // b.any
  40b9e0:	ldr	w0, [sp, #44]
  40b9e4:	and	w0, w0, #0x4
  40b9e8:	cmp	w0, #0x0
  40b9ec:	b.eq	40ba44 <print_color_luint@@Base+0x90>  // b.none
  40b9f0:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40b9f4:	add	x0, x0, #0xd78
  40b9f8:	ldr	x0, [x0]
  40b9fc:	cmp	x0, #0x0
  40ba00:	b.eq	40ba44 <print_color_luint@@Base+0x90>  // b.none
  40ba04:	ldr	x0, [sp, #32]
  40ba08:	cmp	x0, #0x0
  40ba0c:	b.ne	40ba28 <print_color_luint@@Base+0x74>  // b.any
  40ba10:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40ba14:	add	x0, x0, #0xd78
  40ba18:	ldr	x0, [x0]
  40ba1c:	ldr	x1, [sp, #16]
  40ba20:	bl	40d368 <jsonw_luint@@Base>
  40ba24:	b	40ba98 <print_color_luint@@Base+0xe4>
  40ba28:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40ba2c:	add	x0, x0, #0xd78
  40ba30:	ldr	x0, [x0]
  40ba34:	ldr	x2, [sp, #16]
  40ba38:	ldr	x1, [sp, #32]
  40ba3c:	bl	40d5e8 <jsonw_luint_field@@Base>
  40ba40:	b	40ba98 <print_color_luint@@Base+0xe4>
  40ba44:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40ba48:	add	x0, x0, #0xd78
  40ba4c:	ldr	x0, [x0]
  40ba50:	cmp	x0, #0x0
  40ba54:	b.ne	40ba98 <print_color_luint@@Base+0xe4>  // b.any
  40ba58:	ldr	w0, [sp, #44]
  40ba5c:	and	w0, w0, #0x1
  40ba60:	cmp	w0, #0x0
  40ba64:	b.ne	40ba78 <print_color_luint@@Base+0xc4>  // b.any
  40ba68:	ldr	w0, [sp, #44]
  40ba6c:	and	w0, w0, #0x4
  40ba70:	cmp	w0, #0x0
  40ba74:	b.eq	40ba98 <print_color_luint@@Base+0xe4>  // b.none
  40ba78:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ba7c:	ldr	x0, [x0, #4016]
  40ba80:	ldr	x0, [x0]
  40ba84:	ldr	x3, [sp, #16]
  40ba88:	ldr	x2, [sp, #24]
  40ba8c:	ldr	w1, [sp, #40]
  40ba90:	bl	40c538 <color_fprintf@@Base>
  40ba94:	b	40ba98 <print_color_luint@@Base+0xe4>
  40ba98:	nop
  40ba9c:	ldp	x29, x30, [sp], #48
  40baa0:	ret

000000000040baa4 <print_color_lluint@@Base>:
  40baa4:	stp	x29, x30, [sp, #-48]!
  40baa8:	mov	x29, sp
  40baac:	str	w0, [sp, #44]
  40bab0:	str	w1, [sp, #40]
  40bab4:	str	x2, [sp, #32]
  40bab8:	str	x3, [sp, #24]
  40babc:	str	x4, [sp, #16]
  40bac0:	ldr	w0, [sp, #44]
  40bac4:	and	w0, w0, #0x2
  40bac8:	cmp	w0, #0x0
  40bacc:	b.ne	40bae0 <print_color_lluint@@Base+0x3c>  // b.any
  40bad0:	ldr	w0, [sp, #44]
  40bad4:	and	w0, w0, #0x4
  40bad8:	cmp	w0, #0x0
  40badc:	b.eq	40bb34 <print_color_lluint@@Base+0x90>  // b.none
  40bae0:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bae4:	add	x0, x0, #0xd78
  40bae8:	ldr	x0, [x0]
  40baec:	cmp	x0, #0x0
  40baf0:	b.eq	40bb34 <print_color_lluint@@Base+0x90>  // b.none
  40baf4:	ldr	x0, [sp, #32]
  40baf8:	cmp	x0, #0x0
  40bafc:	b.ne	40bb18 <print_color_lluint@@Base+0x74>  // b.any
  40bb00:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bb04:	add	x0, x0, #0xd78
  40bb08:	ldr	x0, [x0]
  40bb0c:	ldr	x1, [sp, #16]
  40bb10:	bl	40d398 <jsonw_lluint@@Base>
  40bb14:	b	40bb88 <print_color_lluint@@Base+0xe4>
  40bb18:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bb1c:	add	x0, x0, #0xd78
  40bb20:	ldr	x0, [x0]
  40bb24:	ldr	x2, [sp, #16]
  40bb28:	ldr	x1, [sp, #32]
  40bb2c:	bl	40d620 <jsonw_lluint_field@@Base>
  40bb30:	b	40bb88 <print_color_lluint@@Base+0xe4>
  40bb34:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bb38:	add	x0, x0, #0xd78
  40bb3c:	ldr	x0, [x0]
  40bb40:	cmp	x0, #0x0
  40bb44:	b.ne	40bb88 <print_color_lluint@@Base+0xe4>  // b.any
  40bb48:	ldr	w0, [sp, #44]
  40bb4c:	and	w0, w0, #0x1
  40bb50:	cmp	w0, #0x0
  40bb54:	b.ne	40bb68 <print_color_lluint@@Base+0xc4>  // b.any
  40bb58:	ldr	w0, [sp, #44]
  40bb5c:	and	w0, w0, #0x4
  40bb60:	cmp	w0, #0x0
  40bb64:	b.eq	40bb88 <print_color_lluint@@Base+0xe4>  // b.none
  40bb68:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40bb6c:	ldr	x0, [x0, #4016]
  40bb70:	ldr	x0, [x0]
  40bb74:	ldr	x3, [sp, #16]
  40bb78:	ldr	x2, [sp, #24]
  40bb7c:	ldr	w1, [sp, #40]
  40bb80:	bl	40c538 <color_fprintf@@Base>
  40bb84:	b	40bb88 <print_color_lluint@@Base+0xe4>
  40bb88:	nop
  40bb8c:	ldp	x29, x30, [sp], #48
  40bb90:	ret

000000000040bb94 <print_color_float@@Base>:
  40bb94:	stp	x29, x30, [sp, #-48]!
  40bb98:	mov	x29, sp
  40bb9c:	str	w0, [sp, #44]
  40bba0:	str	w1, [sp, #40]
  40bba4:	str	x2, [sp, #32]
  40bba8:	str	x3, [sp, #24]
  40bbac:	str	d0, [sp, #16]
  40bbb0:	ldr	w0, [sp, #44]
  40bbb4:	and	w0, w0, #0x2
  40bbb8:	cmp	w0, #0x0
  40bbbc:	b.ne	40bbd0 <print_color_float@@Base+0x3c>  // b.any
  40bbc0:	ldr	w0, [sp, #44]
  40bbc4:	and	w0, w0, #0x4
  40bbc8:	cmp	w0, #0x0
  40bbcc:	b.eq	40bc24 <print_color_float@@Base+0x90>  // b.none
  40bbd0:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bbd4:	add	x0, x0, #0xd78
  40bbd8:	ldr	x0, [x0]
  40bbdc:	cmp	x0, #0x0
  40bbe0:	b.eq	40bc24 <print_color_float@@Base+0x90>  // b.none
  40bbe4:	ldr	x0, [sp, #32]
  40bbe8:	cmp	x0, #0x0
  40bbec:	b.ne	40bc08 <print_color_float@@Base+0x74>  // b.any
  40bbf0:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bbf4:	add	x0, x0, #0xd78
  40bbf8:	ldr	x0, [x0]
  40bbfc:	ldr	d0, [sp, #16]
  40bc00:	bl	40d240 <jsonw_float@@Base>
  40bc04:	b	40bc78 <print_color_float@@Base+0xe4>
  40bc08:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bc0c:	add	x0, x0, #0xd78
  40bc10:	ldr	x0, [x0]
  40bc14:	ldr	d0, [sp, #16]
  40bc18:	ldr	x1, [sp, #32]
  40bc1c:	bl	40d498 <jsonw_float_field@@Base>
  40bc20:	b	40bc78 <print_color_float@@Base+0xe4>
  40bc24:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bc28:	add	x0, x0, #0xd78
  40bc2c:	ldr	x0, [x0]
  40bc30:	cmp	x0, #0x0
  40bc34:	b.ne	40bc78 <print_color_float@@Base+0xe4>  // b.any
  40bc38:	ldr	w0, [sp, #44]
  40bc3c:	and	w0, w0, #0x1
  40bc40:	cmp	w0, #0x0
  40bc44:	b.ne	40bc58 <print_color_float@@Base+0xc4>  // b.any
  40bc48:	ldr	w0, [sp, #44]
  40bc4c:	and	w0, w0, #0x4
  40bc50:	cmp	w0, #0x0
  40bc54:	b.eq	40bc78 <print_color_float@@Base+0xe4>  // b.none
  40bc58:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40bc5c:	ldr	x0, [x0, #4016]
  40bc60:	ldr	x0, [x0]
  40bc64:	ldr	d0, [sp, #16]
  40bc68:	ldr	x2, [sp, #24]
  40bc6c:	ldr	w1, [sp, #40]
  40bc70:	bl	40c538 <color_fprintf@@Base>
  40bc74:	b	40bc78 <print_color_float@@Base+0xe4>
  40bc78:	nop
  40bc7c:	ldp	x29, x30, [sp], #48
  40bc80:	ret

000000000040bc84 <print_uint_name_value@@Base>:
  40bc84:	stp	x29, x30, [sp, #-96]!
  40bc88:	mov	x29, sp
  40bc8c:	str	x0, [sp, #24]
  40bc90:	str	w1, [sp, #20]
  40bc94:	add	x4, sp, #0x20
  40bc98:	ldr	x3, [sp, #24]
  40bc9c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40bca0:	add	x2, x0, #0x458
  40bca4:	mov	x1, #0x40                  	// #64
  40bca8:	mov	x0, x4
  40bcac:	bl	404e20 <snprintf@plt>
  40bcb0:	add	x0, sp, #0x20
  40bcb4:	ldr	w3, [sp, #20]
  40bcb8:	mov	x2, x0
  40bcbc:	ldr	x1, [sp, #24]
  40bcc0:	mov	w0, #0x4                   	// #4
  40bcc4:	bl	40b018 <ll_addr_a2n@@Base+0x1ec>
  40bcc8:	nop
  40bccc:	ldp	x29, x30, [sp], #96
  40bcd0:	ret

000000000040bcd4 <print_string_name_value@@Base>:
  40bcd4:	stp	x29, x30, [sp, #-96]!
  40bcd8:	mov	x29, sp
  40bcdc:	str	x0, [sp, #24]
  40bce0:	str	x1, [sp, #16]
  40bce4:	add	x4, sp, #0x20
  40bce8:	ldr	x3, [sp, #24]
  40bcec:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40bcf0:	add	x2, x0, #0x460
  40bcf4:	mov	x1, #0x40                  	// #64
  40bcf8:	mov	x0, x4
  40bcfc:	bl	404e20 <snprintf@plt>
  40bd00:	add	x0, sp, #0x20
  40bd04:	ldr	x3, [sp, #16]
  40bd08:	mov	x2, x0
  40bd0c:	ldr	x1, [sp, #24]
  40bd10:	mov	w0, #0x4                   	// #4
  40bd14:	bl	40afdc <ll_addr_a2n@@Base+0x1b0>
  40bd18:	nop
  40bd1c:	ldp	x29, x30, [sp], #96
  40bd20:	ret

000000000040bd24 <print_color_string@@Base>:
  40bd24:	stp	x29, x30, [sp, #-48]!
  40bd28:	mov	x29, sp
  40bd2c:	str	w0, [sp, #44]
  40bd30:	str	w1, [sp, #40]
  40bd34:	str	x2, [sp, #32]
  40bd38:	str	x3, [sp, #24]
  40bd3c:	str	x4, [sp, #16]
  40bd40:	ldr	w0, [sp, #44]
  40bd44:	and	w0, w0, #0x2
  40bd48:	cmp	w0, #0x0
  40bd4c:	b.ne	40bd60 <print_color_string@@Base+0x3c>  // b.any
  40bd50:	ldr	w0, [sp, #44]
  40bd54:	and	w0, w0, #0x4
  40bd58:	cmp	w0, #0x0
  40bd5c:	b.eq	40bdf4 <print_color_string@@Base+0xd0>  // b.none
  40bd60:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bd64:	add	x0, x0, #0xd78
  40bd68:	ldr	x0, [x0]
  40bd6c:	cmp	x0, #0x0
  40bd70:	b.eq	40bdf4 <print_color_string@@Base+0xd0>  // b.none
  40bd74:	ldr	x0, [sp, #32]
  40bd78:	cmp	x0, #0x0
  40bd7c:	b.eq	40bda4 <print_color_string@@Base+0x80>  // b.none
  40bd80:	ldr	x0, [sp, #16]
  40bd84:	cmp	x0, #0x0
  40bd88:	b.ne	40bda4 <print_color_string@@Base+0x80>  // b.any
  40bd8c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bd90:	add	x0, x0, #0xd78
  40bd94:	ldr	x0, [x0]
  40bd98:	ldr	x1, [sp, #32]
  40bd9c:	bl	40cf78 <jsonw_name@@Base>
  40bda0:	b	40bdf0 <print_color_string@@Base+0xcc>
  40bda4:	ldr	x0, [sp, #32]
  40bda8:	cmp	x0, #0x0
  40bdac:	b.ne	40bdd4 <print_color_string@@Base+0xb0>  // b.any
  40bdb0:	ldr	x0, [sp, #16]
  40bdb4:	cmp	x0, #0x0
  40bdb8:	b.eq	40bdd4 <print_color_string@@Base+0xb0>  // b.none
  40bdbc:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bdc0:	add	x0, x0, #0xd78
  40bdc4:	ldr	x0, [x0]
  40bdc8:	ldr	x1, [sp, #16]
  40bdcc:	bl	40d198 <jsonw_string@@Base>
  40bdd0:	b	40bdf0 <print_color_string@@Base+0xcc>
  40bdd4:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bdd8:	add	x0, x0, #0xd78
  40bddc:	ldr	x0, [x0]
  40bde0:	ldr	x2, [sp, #16]
  40bde4:	ldr	x1, [sp, #32]
  40bde8:	bl	40d428 <jsonw_string_field@@Base>
  40bdec:	b	40be48 <print_color_string@@Base+0x124>
  40bdf0:	b	40be48 <print_color_string@@Base+0x124>
  40bdf4:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bdf8:	add	x0, x0, #0xd78
  40bdfc:	ldr	x0, [x0]
  40be00:	cmp	x0, #0x0
  40be04:	b.ne	40be48 <print_color_string@@Base+0x124>  // b.any
  40be08:	ldr	w0, [sp, #44]
  40be0c:	and	w0, w0, #0x1
  40be10:	cmp	w0, #0x0
  40be14:	b.ne	40be28 <print_color_string@@Base+0x104>  // b.any
  40be18:	ldr	w0, [sp, #44]
  40be1c:	and	w0, w0, #0x4
  40be20:	cmp	w0, #0x0
  40be24:	b.eq	40be48 <print_color_string@@Base+0x124>  // b.none
  40be28:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40be2c:	ldr	x0, [x0, #4016]
  40be30:	ldr	x0, [x0]
  40be34:	ldr	x3, [sp, #16]
  40be38:	ldr	x2, [sp, #24]
  40be3c:	ldr	w1, [sp, #40]
  40be40:	bl	40c538 <color_fprintf@@Base>
  40be44:	b	40be48 <print_color_string@@Base+0x124>
  40be48:	nop
  40be4c:	ldp	x29, x30, [sp], #48
  40be50:	ret

000000000040be54 <print_color_bool@@Base>:
  40be54:	stp	x29, x30, [sp, #-48]!
  40be58:	mov	x29, sp
  40be5c:	str	w0, [sp, #44]
  40be60:	str	w1, [sp, #40]
  40be64:	str	x2, [sp, #32]
  40be68:	str	x3, [sp, #24]
  40be6c:	strb	w4, [sp, #23]
  40be70:	ldr	w0, [sp, #44]
  40be74:	and	w0, w0, #0x2
  40be78:	cmp	w0, #0x0
  40be7c:	b.ne	40be90 <print_color_bool@@Base+0x3c>  // b.any
  40be80:	ldr	w0, [sp, #44]
  40be84:	and	w0, w0, #0x4
  40be88:	cmp	w0, #0x0
  40be8c:	b.eq	40bee4 <print_color_bool@@Base+0x90>  // b.none
  40be90:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40be94:	add	x0, x0, #0xd78
  40be98:	ldr	x0, [x0]
  40be9c:	cmp	x0, #0x0
  40bea0:	b.eq	40bee4 <print_color_bool@@Base+0x90>  // b.none
  40bea4:	ldr	x0, [sp, #32]
  40bea8:	cmp	x0, #0x0
  40beac:	b.eq	40becc <print_color_bool@@Base+0x78>  // b.none
  40beb0:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40beb4:	add	x0, x0, #0xd78
  40beb8:	ldr	x0, [x0]
  40bebc:	ldrb	w2, [sp, #23]
  40bec0:	ldr	x1, [sp, #32]
  40bec4:	bl	40d460 <jsonw_bool_field@@Base>
  40bec8:	b	40bf5c <print_color_bool@@Base+0x108>
  40becc:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bed0:	add	x0, x0, #0xd78
  40bed4:	ldr	x0, [x0]
  40bed8:	ldrb	w1, [sp, #23]
  40bedc:	bl	40d1c8 <jsonw_bool@@Base>
  40bee0:	b	40bf5c <print_color_bool@@Base+0x108>
  40bee4:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bee8:	add	x0, x0, #0xd78
  40beec:	ldr	x0, [x0]
  40bef0:	cmp	x0, #0x0
  40bef4:	b.ne	40bf5c <print_color_bool@@Base+0x108>  // b.any
  40bef8:	ldr	w0, [sp, #44]
  40befc:	and	w0, w0, #0x1
  40bf00:	cmp	w0, #0x0
  40bf04:	b.ne	40bf18 <print_color_bool@@Base+0xc4>  // b.any
  40bf08:	ldr	w0, [sp, #44]
  40bf0c:	and	w0, w0, #0x4
  40bf10:	cmp	w0, #0x0
  40bf14:	b.eq	40bf5c <print_color_bool@@Base+0x108>  // b.none
  40bf18:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40bf1c:	ldr	x0, [x0, #4016]
  40bf20:	ldr	x4, [x0]
  40bf24:	ldrb	w0, [sp, #23]
  40bf28:	cmp	w0, #0x0
  40bf2c:	b.eq	40bf3c <print_color_bool@@Base+0xe8>  // b.none
  40bf30:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40bf34:	add	x0, x0, #0x468
  40bf38:	b	40bf44 <print_color_bool@@Base+0xf0>
  40bf3c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40bf40:	add	x0, x0, #0x470
  40bf44:	mov	x3, x0
  40bf48:	ldr	x2, [sp, #24]
  40bf4c:	ldr	w1, [sp, #40]
  40bf50:	mov	x0, x4
  40bf54:	bl	40c538 <color_fprintf@@Base>
  40bf58:	b	40bf5c <print_color_bool@@Base+0x108>
  40bf5c:	nop
  40bf60:	ldp	x29, x30, [sp], #48
  40bf64:	ret

000000000040bf68 <print_color_0xhex@@Base>:
  40bf68:	stp	x29, x30, [sp, #-112]!
  40bf6c:	mov	x29, sp
  40bf70:	str	w0, [sp, #44]
  40bf74:	str	w1, [sp, #40]
  40bf78:	str	x2, [sp, #32]
  40bf7c:	str	x3, [sp, #24]
  40bf80:	str	x4, [sp, #16]
  40bf84:	ldr	w0, [sp, #44]
  40bf88:	and	w0, w0, #0x2
  40bf8c:	cmp	w0, #0x0
  40bf90:	b.ne	40bfa4 <print_color_0xhex@@Base+0x3c>  // b.any
  40bf94:	ldr	w0, [sp, #44]
  40bf98:	and	w0, w0, #0x4
  40bf9c:	cmp	w0, #0x0
  40bfa0:	b.eq	40bff4 <print_color_0xhex@@Base+0x8c>  // b.none
  40bfa4:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bfa8:	add	x0, x0, #0xd78
  40bfac:	ldr	x0, [x0]
  40bfb0:	cmp	x0, #0x0
  40bfb4:	b.eq	40bff4 <print_color_0xhex@@Base+0x8c>  // b.none
  40bfb8:	add	x4, sp, #0x30
  40bfbc:	ldr	x3, [sp, #16]
  40bfc0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40bfc4:	add	x2, x0, #0x478
  40bfc8:	mov	x1, #0x40                  	// #64
  40bfcc:	mov	x0, x4
  40bfd0:	bl	404e20 <snprintf@plt>
  40bfd4:	add	x0, sp, #0x30
  40bfd8:	mov	x3, x0
  40bfdc:	mov	x2, #0x0                   	// #0
  40bfe0:	ldr	x1, [sp, #32]
  40bfe4:	mov	w0, #0x2                   	// #2
  40bfe8:	bl	40afdc <ll_addr_a2n@@Base+0x1b0>
  40bfec:	nop
  40bff0:	b	40c044 <print_color_0xhex@@Base+0xdc>
  40bff4:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40bff8:	add	x0, x0, #0xd78
  40bffc:	ldr	x0, [x0]
  40c000:	cmp	x0, #0x0
  40c004:	b.ne	40c044 <print_color_0xhex@@Base+0xdc>  // b.any
  40c008:	ldr	w0, [sp, #44]
  40c00c:	and	w0, w0, #0x1
  40c010:	cmp	w0, #0x0
  40c014:	b.ne	40c028 <print_color_0xhex@@Base+0xc0>  // b.any
  40c018:	ldr	w0, [sp, #44]
  40c01c:	and	w0, w0, #0x4
  40c020:	cmp	w0, #0x0
  40c024:	b.eq	40c044 <print_color_0xhex@@Base+0xdc>  // b.none
  40c028:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40c02c:	ldr	x0, [x0, #4016]
  40c030:	ldr	x0, [x0]
  40c034:	ldr	x3, [sp, #16]
  40c038:	ldr	x2, [sp, #24]
  40c03c:	ldr	w1, [sp, #40]
  40c040:	bl	40c538 <color_fprintf@@Base>
  40c044:	nop
  40c048:	ldp	x29, x30, [sp], #112
  40c04c:	ret

000000000040c050 <print_color_hex@@Base>:
  40c050:	stp	x29, x30, [sp, #-112]!
  40c054:	mov	x29, sp
  40c058:	str	w0, [sp, #44]
  40c05c:	str	w1, [sp, #40]
  40c060:	str	x2, [sp, #32]
  40c064:	str	x3, [sp, #24]
  40c068:	str	w4, [sp, #20]
  40c06c:	ldr	w0, [sp, #44]
  40c070:	and	w0, w0, #0x2
  40c074:	cmp	w0, #0x0
  40c078:	b.ne	40c08c <print_color_hex@@Base+0x3c>  // b.any
  40c07c:	ldr	w0, [sp, #44]
  40c080:	and	w0, w0, #0x4
  40c084:	cmp	w0, #0x0
  40c088:	b.eq	40c100 <print_color_hex@@Base+0xb0>  // b.none
  40c08c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c090:	add	x0, x0, #0xd78
  40c094:	ldr	x0, [x0]
  40c098:	cmp	x0, #0x0
  40c09c:	b.eq	40c100 <print_color_hex@@Base+0xb0>  // b.none
  40c0a0:	add	x4, sp, #0x30
  40c0a4:	ldr	w3, [sp, #20]
  40c0a8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c0ac:	add	x2, x0, #0x480
  40c0b0:	mov	x1, #0x40                  	// #64
  40c0b4:	mov	x0, x4
  40c0b8:	bl	404e20 <snprintf@plt>
  40c0bc:	ldr	x0, [sp, #32]
  40c0c0:	cmp	x0, #0x0
  40c0c4:	b.eq	40c0e8 <print_color_hex@@Base+0x98>  // b.none
  40c0c8:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c0cc:	add	x0, x0, #0xd78
  40c0d0:	ldr	x0, [x0]
  40c0d4:	add	x1, sp, #0x30
  40c0d8:	mov	x2, x1
  40c0dc:	ldr	x1, [sp, #32]
  40c0e0:	bl	40d428 <jsonw_string_field@@Base>
  40c0e4:	b	40c154 <print_color_hex@@Base+0x104>
  40c0e8:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c0ec:	add	x0, x0, #0xd78
  40c0f0:	ldr	x0, [x0]
  40c0f4:	add	x1, sp, #0x30
  40c0f8:	bl	40d198 <jsonw_string@@Base>
  40c0fc:	b	40c154 <print_color_hex@@Base+0x104>
  40c100:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c104:	add	x0, x0, #0xd78
  40c108:	ldr	x0, [x0]
  40c10c:	cmp	x0, #0x0
  40c110:	b.ne	40c154 <print_color_hex@@Base+0x104>  // b.any
  40c114:	ldr	w0, [sp, #44]
  40c118:	and	w0, w0, #0x1
  40c11c:	cmp	w0, #0x0
  40c120:	b.ne	40c134 <print_color_hex@@Base+0xe4>  // b.any
  40c124:	ldr	w0, [sp, #44]
  40c128:	and	w0, w0, #0x4
  40c12c:	cmp	w0, #0x0
  40c130:	b.eq	40c154 <print_color_hex@@Base+0x104>  // b.none
  40c134:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40c138:	ldr	x0, [x0, #4016]
  40c13c:	ldr	x0, [x0]
  40c140:	ldr	w3, [sp, #20]
  40c144:	ldr	x2, [sp, #24]
  40c148:	ldr	w1, [sp, #40]
  40c14c:	bl	40c538 <color_fprintf@@Base>
  40c150:	b	40c154 <print_color_hex@@Base+0x104>
  40c154:	nop
  40c158:	ldp	x29, x30, [sp], #112
  40c15c:	ret

000000000040c160 <print_color_null@@Base>:
  40c160:	stp	x29, x30, [sp, #-48]!
  40c164:	mov	x29, sp
  40c168:	str	w0, [sp, #44]
  40c16c:	str	w1, [sp, #40]
  40c170:	str	x2, [sp, #32]
  40c174:	str	x3, [sp, #24]
  40c178:	str	x4, [sp, #16]
  40c17c:	ldr	w0, [sp, #44]
  40c180:	and	w0, w0, #0x2
  40c184:	cmp	w0, #0x0
  40c188:	b.ne	40c19c <print_color_null@@Base+0x3c>  // b.any
  40c18c:	ldr	w0, [sp, #44]
  40c190:	and	w0, w0, #0x4
  40c194:	cmp	w0, #0x0
  40c198:	b.eq	40c1e8 <print_color_null@@Base+0x88>  // b.none
  40c19c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c1a0:	add	x0, x0, #0xd78
  40c1a4:	ldr	x0, [x0]
  40c1a8:	cmp	x0, #0x0
  40c1ac:	b.eq	40c1e8 <print_color_null@@Base+0x88>  // b.none
  40c1b0:	ldr	x0, [sp, #32]
  40c1b4:	cmp	x0, #0x0
  40c1b8:	b.eq	40c1d4 <print_color_null@@Base+0x74>  // b.none
  40c1bc:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c1c0:	add	x0, x0, #0xd78
  40c1c4:	ldr	x0, [x0]
  40c1c8:	ldr	x1, [sp, #32]
  40c1cc:	bl	40d6c8 <jsonw_null_field@@Base>
  40c1d0:	b	40c23c <print_color_null@@Base+0xdc>
  40c1d4:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c1d8:	add	x0, x0, #0xd78
  40c1dc:	ldr	x0, [x0]
  40c1e0:	bl	40d218 <jsonw_null@@Base>
  40c1e4:	b	40c23c <print_color_null@@Base+0xdc>
  40c1e8:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c1ec:	add	x0, x0, #0xd78
  40c1f0:	ldr	x0, [x0]
  40c1f4:	cmp	x0, #0x0
  40c1f8:	b.ne	40c23c <print_color_null@@Base+0xdc>  // b.any
  40c1fc:	ldr	w0, [sp, #44]
  40c200:	and	w0, w0, #0x1
  40c204:	cmp	w0, #0x0
  40c208:	b.ne	40c21c <print_color_null@@Base+0xbc>  // b.any
  40c20c:	ldr	w0, [sp, #44]
  40c210:	and	w0, w0, #0x4
  40c214:	cmp	w0, #0x0
  40c218:	b.eq	40c23c <print_color_null@@Base+0xdc>  // b.none
  40c21c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40c220:	ldr	x0, [x0, #4016]
  40c224:	ldr	x0, [x0]
  40c228:	ldr	x3, [sp, #16]
  40c22c:	ldr	x2, [sp, #24]
  40c230:	ldr	w1, [sp, #40]
  40c234:	bl	40c538 <color_fprintf@@Base>
  40c238:	b	40c23c <print_color_null@@Base+0xdc>
  40c23c:	nop
  40c240:	ldp	x29, x30, [sp], #48
  40c244:	ret

000000000040c248 <print_nl@@Base>:
  40c248:	stp	x29, x30, [sp, #-16]!
  40c24c:	mov	x29, sp
  40c250:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c254:	add	x0, x0, #0xd78
  40c258:	ldr	x0, [x0]
  40c25c:	cmp	x0, #0x0
  40c260:	b.ne	40c280 <print_nl@@Base+0x38>  // b.any
  40c264:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40c268:	ldr	x0, [x0, #4048]
  40c26c:	ldr	x0, [x0]
  40c270:	mov	x1, x0
  40c274:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c278:	add	x0, x0, #0x450
  40c27c:	bl	4051e0 <printf@plt>
  40c280:	nop
  40c284:	ldp	x29, x30, [sp], #16
  40c288:	ret
  40c28c:	stp	x29, x30, [sp, #-16]!
  40c290:	mov	x29, sp
  40c294:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c298:	add	x0, x0, #0xd84
  40c29c:	mov	w1, #0x1                   	// #1
  40c2a0:	str	w1, [x0]
  40c2a4:	bl	40c48c <matches_color@@Base+0x168>
  40c2a8:	nop
  40c2ac:	ldp	x29, x30, [sp], #16
  40c2b0:	ret

000000000040c2b4 <check_enable_color@@Base>:
  40c2b4:	stp	x29, x30, [sp, #-32]!
  40c2b8:	mov	x29, sp
  40c2bc:	str	w0, [sp, #28]
  40c2c0:	str	w1, [sp, #24]
  40c2c4:	ldr	w0, [sp, #24]
  40c2c8:	cmp	w0, #0x0
  40c2cc:	b.ne	40c2dc <check_enable_color@@Base+0x28>  // b.any
  40c2d0:	ldr	w0, [sp, #28]
  40c2d4:	cmp	w0, #0x0
  40c2d8:	b.ne	40c2e4 <check_enable_color@@Base+0x30>  // b.any
  40c2dc:	mov	w0, #0x0                   	// #0
  40c2e0:	b	40c31c <check_enable_color@@Base+0x68>
  40c2e4:	ldr	w0, [sp, #28]
  40c2e8:	cmp	w0, #0x2
  40c2ec:	b.eq	40c30c <check_enable_color@@Base+0x58>  // b.none
  40c2f0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40c2f4:	ldr	x0, [x0, #4016]
  40c2f8:	ldr	x0, [x0]
  40c2fc:	bl	404e30 <fileno@plt>
  40c300:	bl	405130 <isatty@plt>
  40c304:	cmp	w0, #0x0
  40c308:	b.eq	40c318 <check_enable_color@@Base+0x64>  // b.none
  40c30c:	bl	40c28c <print_nl@@Base+0x44>
  40c310:	mov	w0, #0x1                   	// #1
  40c314:	b	40c31c <check_enable_color@@Base+0x68>
  40c318:	mov	w0, #0x0                   	// #0
  40c31c:	ldp	x29, x30, [sp], #32
  40c320:	ret

000000000040c324 <matches_color@@Base>:
  40c324:	stp	x29, x30, [sp, #-80]!
  40c328:	mov	x29, sp
  40c32c:	str	x0, [x29, #24]
  40c330:	str	x1, [x29, #16]
  40c334:	ldr	x0, [x29, #16]
  40c338:	cmp	x0, #0x0
  40c33c:	b.ne	40c348 <matches_color@@Base+0x24>  // b.any
  40c340:	mov	w0, #0x0                   	// #0
  40c344:	b	40c480 <matches_color@@Base+0x15c>
  40c348:	ldr	x0, [x29, #24]
  40c34c:	str	x0, [x29, #64]
  40c350:	ldr	x0, [x29, #64]
  40c354:	bl	404d10 <strlen@plt>
  40c358:	add	x0, x0, #0x1
  40c35c:	str	x0, [x29, #56]
  40c360:	ldr	x0, [x29, #56]
  40c364:	add	x0, x0, #0xf
  40c368:	lsr	x0, x0, #4
  40c36c:	lsl	x0, x0, #4
  40c370:	sub	sp, sp, x0
  40c374:	mov	x0, sp
  40c378:	add	x0, x0, #0xf
  40c37c:	lsr	x0, x0, #4
  40c380:	lsl	x0, x0, #4
  40c384:	str	x0, [x29, #48]
  40c388:	ldr	x2, [x29, #56]
  40c38c:	ldr	x1, [x29, #64]
  40c390:	ldr	x0, [x29, #48]
  40c394:	bl	404ce0 <memcpy@plt>
  40c398:	str	x0, [x29, #40]
  40c39c:	mov	w1, #0x3d                  	// #61
  40c3a0:	ldr	x0, [x29, #40]
  40c3a4:	bl	405180 <strchrnul@plt>
  40c3a8:	str	x0, [x29, #72]
  40c3ac:	ldr	x0, [x29, #72]
  40c3b0:	ldrb	w0, [x0]
  40c3b4:	cmp	w0, #0x0
  40c3b8:	b.eq	40c3cc <matches_color@@Base+0xa8>  // b.none
  40c3bc:	ldr	x0, [x29, #72]
  40c3c0:	add	x1, x0, #0x1
  40c3c4:	str	x1, [x29, #72]
  40c3c8:	strb	wzr, [x0]
  40c3cc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c3d0:	add	x1, x0, #0x500
  40c3d4:	ldr	x0, [x29, #40]
  40c3d8:	bl	407bb8 <matches@@Base>
  40c3dc:	and	w0, w0, #0xff
  40c3e0:	cmp	w0, #0x0
  40c3e4:	b.eq	40c3f0 <matches_color@@Base+0xcc>  // b.none
  40c3e8:	mov	w0, #0x0                   	// #0
  40c3ec:	b	40c480 <matches_color@@Base+0x15c>
  40c3f0:	ldr	x0, [x29, #72]
  40c3f4:	ldrb	w0, [x0]
  40c3f8:	cmp	w0, #0x0
  40c3fc:	b.eq	40c418 <matches_color@@Base+0xf4>  // b.none
  40c400:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c404:	add	x1, x0, #0x508
  40c408:	ldr	x0, [x29, #72]
  40c40c:	bl	405000 <strcmp@plt>
  40c410:	cmp	w0, #0x0
  40c414:	b.ne	40c428 <matches_color@@Base+0x104>  // b.any
  40c418:	ldr	x0, [x29, #16]
  40c41c:	mov	w1, #0x2                   	// #2
  40c420:	str	w1, [x0]
  40c424:	b	40c47c <matches_color@@Base+0x158>
  40c428:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c42c:	add	x1, x0, #0x510
  40c430:	ldr	x0, [x29, #72]
  40c434:	bl	405000 <strcmp@plt>
  40c438:	cmp	w0, #0x0
  40c43c:	b.ne	40c450 <matches_color@@Base+0x12c>  // b.any
  40c440:	ldr	x0, [x29, #16]
  40c444:	mov	w1, #0x1                   	// #1
  40c448:	str	w1, [x0]
  40c44c:	b	40c47c <matches_color@@Base+0x158>
  40c450:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c454:	add	x1, x0, #0x518
  40c458:	ldr	x0, [x29, #72]
  40c45c:	bl	405000 <strcmp@plt>
  40c460:	cmp	w0, #0x0
  40c464:	b.ne	40c474 <matches_color@@Base+0x150>  // b.any
  40c468:	ldr	x0, [x29, #16]
  40c46c:	str	wzr, [x0]
  40c470:	b	40c47c <matches_color@@Base+0x158>
  40c474:	mov	w0, #0x0                   	// #0
  40c478:	b	40c480 <matches_color@@Base+0x15c>
  40c47c:	mov	w0, #0x1                   	// #1
  40c480:	mov	sp, x29
  40c484:	ldp	x29, x30, [sp], #80
  40c488:	ret
  40c48c:	stp	x29, x30, [sp, #-32]!
  40c490:	mov	x29, sp
  40c494:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c498:	add	x0, x0, #0x520
  40c49c:	bl	405210 <getenv@plt>
  40c4a0:	str	x0, [sp, #24]
  40c4a4:	ldr	x0, [sp, #24]
  40c4a8:	cmp	x0, #0x0
  40c4ac:	b.eq	40c52c <matches_color@@Base+0x208>  // b.none
  40c4b0:	mov	w1, #0x3b                  	// #59
  40c4b4:	ldr	x0, [sp, #24]
  40c4b8:	bl	404fa0 <strrchr@plt>
  40c4bc:	str	x0, [sp, #24]
  40c4c0:	ldr	x0, [sp, #24]
  40c4c4:	cmp	x0, #0x0
  40c4c8:	b.eq	40c52c <matches_color@@Base+0x208>  // b.none
  40c4cc:	ldr	x0, [sp, #24]
  40c4d0:	add	x0, x0, #0x1
  40c4d4:	ldrb	w0, [x0]
  40c4d8:	cmp	w0, #0x2f
  40c4dc:	b.ls	40c4f4 <matches_color@@Base+0x1d0>  // b.plast
  40c4e0:	ldr	x0, [sp, #24]
  40c4e4:	add	x0, x0, #0x1
  40c4e8:	ldrb	w0, [x0]
  40c4ec:	cmp	w0, #0x36
  40c4f0:	b.ls	40c508 <matches_color@@Base+0x1e4>  // b.plast
  40c4f4:	ldr	x0, [sp, #24]
  40c4f8:	add	x0, x0, #0x1
  40c4fc:	ldrb	w0, [x0]
  40c500:	cmp	w0, #0x38
  40c504:	b.ne	40c52c <matches_color@@Base+0x208>  // b.any
  40c508:	ldr	x0, [sp, #24]
  40c50c:	add	x0, x0, #0x2
  40c510:	ldrb	w0, [x0]
  40c514:	cmp	w0, #0x0
  40c518:	b.ne	40c52c <matches_color@@Base+0x208>  // b.any
  40c51c:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c520:	add	x0, x0, #0xd80
  40c524:	mov	w1, #0x1                   	// #1
  40c528:	str	w1, [x0]
  40c52c:	nop
  40c530:	ldp	x29, x30, [sp], #32
  40c534:	ret

000000000040c538 <color_fprintf@@Base>:
  40c538:	stp	x29, x30, [sp, #-304]!
  40c53c:	mov	x29, sp
  40c540:	str	x0, [sp, #72]
  40c544:	str	w1, [sp, #68]
  40c548:	str	x2, [sp, #56]
  40c54c:	str	x3, [sp, #264]
  40c550:	str	x4, [sp, #272]
  40c554:	str	x5, [sp, #280]
  40c558:	str	x6, [sp, #288]
  40c55c:	str	x7, [sp, #296]
  40c560:	str	q0, [sp, #128]
  40c564:	str	q1, [sp, #144]
  40c568:	str	q2, [sp, #160]
  40c56c:	str	q3, [sp, #176]
  40c570:	str	q4, [sp, #192]
  40c574:	str	q5, [sp, #208]
  40c578:	str	q6, [sp, #224]
  40c57c:	str	q7, [sp, #240]
  40c580:	str	wzr, [sp, #124]
  40c584:	add	x0, sp, #0x130
  40c588:	str	x0, [sp, #88]
  40c58c:	add	x0, sp, #0x130
  40c590:	str	x0, [sp, #96]
  40c594:	add	x0, sp, #0x100
  40c598:	str	x0, [sp, #104]
  40c59c:	mov	w0, #0xffffffd8            	// #-40
  40c5a0:	str	w0, [sp, #112]
  40c5a4:	mov	w0, #0xffffff80            	// #-128
  40c5a8:	str	w0, [sp, #116]
  40c5ac:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c5b0:	add	x0, x0, #0xd84
  40c5b4:	ldr	w0, [x0]
  40c5b8:	cmp	w0, #0x0
  40c5bc:	b.eq	40c5cc <color_fprintf@@Base+0x94>  // b.none
  40c5c0:	ldr	w0, [sp, #68]
  40c5c4:	cmp	w0, #0x6
  40c5c8:	b.ne	40c600 <color_fprintf@@Base+0xc8>  // b.any
  40c5cc:	add	x2, sp, #0x10
  40c5d0:	add	x3, sp, #0x58
  40c5d4:	ldp	x0, x1, [x3]
  40c5d8:	stp	x0, x1, [x2]
  40c5dc:	ldp	x0, x1, [x3, #16]
  40c5e0:	stp	x0, x1, [x2, #16]
  40c5e4:	add	x0, sp, #0x10
  40c5e8:	mov	x2, x0
  40c5ec:	ldr	x1, [sp, #56]
  40c5f0:	ldr	x0, [sp, #72]
  40c5f4:	bl	4051d0 <vfprintf@plt>
  40c5f8:	str	w0, [sp, #124]
  40c5fc:	b	40c6d4 <color_fprintf@@Base+0x19c>
  40c600:	adrp	x0, 429000 <stderr@@GLIBC_2.17+0x3cd0>
  40c604:	add	x0, x0, #0xd80
  40c608:	ldr	w0, [x0]
  40c60c:	cmp	w0, #0x0
  40c610:	b.eq	40c628 <color_fprintf@@Base+0xf0>  // b.none
  40c614:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  40c618:	add	x0, x0, #0x310
  40c61c:	ldr	w1, [sp, #68]
  40c620:	ldr	w0, [x0, x1, lsl #2]
  40c624:	b	40c638 <color_fprintf@@Base+0x100>
  40c628:	adrp	x0, 425000 <memcpy@GLIBC_2.17>
  40c62c:	add	x0, x0, #0x2f0
  40c630:	ldr	w1, [sp, #68]
  40c634:	ldr	w0, [x0, x1, lsl #2]
  40c638:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x13470>
  40c63c:	add	x1, x1, #0xd00
  40c640:	mov	w0, w0
  40c644:	ldr	x0, [x1, x0, lsl #3]
  40c648:	mov	x2, x0
  40c64c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c650:	add	x1, x0, #0x530
  40c654:	ldr	x0, [sp, #72]
  40c658:	bl	405240 <fprintf@plt>
  40c65c:	mov	w1, w0
  40c660:	ldr	w0, [sp, #124]
  40c664:	add	w0, w0, w1
  40c668:	str	w0, [sp, #124]
  40c66c:	add	x2, sp, #0x10
  40c670:	add	x3, sp, #0x58
  40c674:	ldp	x0, x1, [x3]
  40c678:	stp	x0, x1, [x2]
  40c67c:	ldp	x0, x1, [x3, #16]
  40c680:	stp	x0, x1, [x2, #16]
  40c684:	add	x0, sp, #0x10
  40c688:	mov	x2, x0
  40c68c:	ldr	x1, [sp, #56]
  40c690:	ldr	x0, [sp, #72]
  40c694:	bl	4051d0 <vfprintf@plt>
  40c698:	mov	w1, w0
  40c69c:	ldr	w0, [sp, #124]
  40c6a0:	add	w0, w0, w1
  40c6a4:	str	w0, [sp, #124]
  40c6a8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c6ac:	add	x0, x0, #0x4f8
  40c6b0:	mov	x2, x0
  40c6b4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c6b8:	add	x1, x0, #0x530
  40c6bc:	ldr	x0, [sp, #72]
  40c6c0:	bl	405240 <fprintf@plt>
  40c6c4:	mov	w1, w0
  40c6c8:	ldr	w0, [sp, #124]
  40c6cc:	add	w0, w0, w1
  40c6d0:	str	w0, [sp, #124]
  40c6d4:	ldr	w0, [sp, #124]
  40c6d8:	ldp	x29, x30, [sp], #304
  40c6dc:	ret

000000000040c6e0 <ifa_family_color@@Base>:
  40c6e0:	sub	sp, sp, #0x10
  40c6e4:	strb	w0, [sp, #15]
  40c6e8:	ldrb	w0, [sp, #15]
  40c6ec:	cmp	w0, #0x2
  40c6f0:	b.eq	40c700 <ifa_family_color@@Base+0x20>  // b.none
  40c6f4:	cmp	w0, #0xa
  40c6f8:	b.eq	40c708 <ifa_family_color@@Base+0x28>  // b.none
  40c6fc:	b	40c710 <ifa_family_color@@Base+0x30>
  40c700:	mov	w0, #0x2                   	// #2
  40c704:	b	40c714 <ifa_family_color@@Base+0x34>
  40c708:	mov	w0, #0x3                   	// #3
  40c70c:	b	40c714 <ifa_family_color@@Base+0x34>
  40c710:	mov	w0, #0x6                   	// #6
  40c714:	add	sp, sp, #0x10
  40c718:	ret

000000000040c71c <oper_state_color@@Base>:
  40c71c:	sub	sp, sp, #0x10
  40c720:	strb	w0, [sp, #15]
  40c724:	ldrb	w0, [sp, #15]
  40c728:	cmp	w0, #0x2
  40c72c:	b.eq	40c740 <oper_state_color@@Base+0x24>  // b.none
  40c730:	cmp	w0, #0x6
  40c734:	b.ne	40c748 <oper_state_color@@Base+0x2c>  // b.any
  40c738:	mov	w0, #0x4                   	// #4
  40c73c:	b	40c74c <oper_state_color@@Base+0x30>
  40c740:	mov	w0, #0x5                   	// #5
  40c744:	b	40c74c <oper_state_color@@Base+0x30>
  40c748:	mov	w0, #0x6                   	// #6
  40c74c:	add	sp, sp, #0x10
  40c750:	ret
  40c754:	stp	x29, x30, [sp, #-80]!
  40c758:	mov	x29, sp
  40c75c:	str	x0, [sp, #40]
  40c760:	str	x1, [sp, #32]
  40c764:	str	x2, [sp, #24]
  40c768:	ldr	x0, [sp, #24]
  40c76c:	str	x0, [sp, #72]
  40c770:	ldr	x0, [sp, #32]
  40c774:	str	x0, [sp, #64]
  40c778:	str	wzr, [sp, #60]
  40c77c:	ldr	w0, [sp, #60]
  40c780:	add	w1, w0, #0x1
  40c784:	str	w1, [sp, #60]
  40c788:	sxtw	x0, w0
  40c78c:	lsl	x0, x0, #2
  40c790:	ldr	x1, [sp, #40]
  40c794:	add	x0, x1, x0
  40c798:	ldr	w0, [x0]
  40c79c:	bl	404db0 <ntohl@plt>
  40c7a0:	str	w0, [sp, #56]
  40c7a4:	ldr	w0, [sp, #56]
  40c7a8:	lsr	w0, w0, #12
  40c7ac:	str	w0, [sp, #52]
  40c7b0:	ldr	w3, [sp, #52]
  40c7b4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c7b8:	add	x2, x0, #0x538
  40c7bc:	ldr	x1, [sp, #72]
  40c7c0:	ldr	x0, [sp, #64]
  40c7c4:	bl	404e20 <snprintf@plt>
  40c7c8:	str	w0, [sp, #48]
  40c7cc:	ldrsw	x0, [sp, #48]
  40c7d0:	ldr	x1, [sp, #72]
  40c7d4:	cmp	x1, x0
  40c7d8:	b.ls	40c848 <oper_state_color@@Base+0x12c>  // b.plast
  40c7dc:	ldr	w0, [sp, #56]
  40c7e0:	and	w0, w0, #0x100
  40c7e4:	cmp	w0, #0x0
  40c7e8:	b.eq	40c7f4 <oper_state_color@@Base+0xd8>  // b.none
  40c7ec:	ldr	x0, [sp, #32]
  40c7f0:	b	40c860 <oper_state_color@@Base+0x144>
  40c7f4:	ldrsw	x0, [sp, #48]
  40c7f8:	ldr	x1, [sp, #64]
  40c7fc:	add	x0, x1, x0
  40c800:	str	x0, [sp, #64]
  40c804:	ldrsw	x0, [sp, #48]
  40c808:	ldr	x1, [sp, #72]
  40c80c:	sub	x0, x1, x0
  40c810:	str	x0, [sp, #72]
  40c814:	ldr	x0, [sp, #72]
  40c818:	cmp	x0, #0x0
  40c81c:	b.eq	40c77c <oper_state_color@@Base+0x60>  // b.none
  40c820:	ldr	x0, [sp, #64]
  40c824:	mov	w1, #0x2f                  	// #47
  40c828:	strb	w1, [x0]
  40c82c:	ldr	x0, [sp, #64]
  40c830:	add	x0, x0, #0x1
  40c834:	str	x0, [sp, #64]
  40c838:	ldr	x0, [sp, #72]
  40c83c:	sub	x0, x0, #0x1
  40c840:	str	x0, [sp, #72]
  40c844:	b	40c77c <oper_state_color@@Base+0x60>
  40c848:	nop
  40c84c:	bl	405200 <__errno_location@plt>
  40c850:	mov	x1, x0
  40c854:	mov	w0, #0xfffffff9            	// #-7
  40c858:	str	w0, [x1]
  40c85c:	mov	x0, #0x0                   	// #0
  40c860:	ldp	x29, x30, [sp], #80
  40c864:	ret

000000000040c868 <mpls_ntop@@Base>:
  40c868:	stp	x29, x30, [sp, #-48]!
  40c86c:	mov	x29, sp
  40c870:	str	w0, [sp, #44]
  40c874:	str	x1, [sp, #32]
  40c878:	str	x2, [sp, #24]
  40c87c:	str	x3, [sp, #16]
  40c880:	ldr	w0, [sp, #44]
  40c884:	cmp	w0, #0x1c
  40c888:	b.ne	40c8a8 <mpls_ntop@@Base+0x40>  // b.any
  40c88c:	bl	405200 <__errno_location@plt>
  40c890:	str	wzr, [x0]
  40c894:	ldr	x2, [sp, #16]
  40c898:	ldr	x1, [sp, #24]
  40c89c:	ldr	x0, [sp, #32]
  40c8a0:	bl	40c754 <oper_state_color@@Base+0x38>
  40c8a4:	b	40c8bc <mpls_ntop@@Base+0x54>
  40c8a8:	bl	405200 <__errno_location@plt>
  40c8ac:	mov	x1, x0
  40c8b0:	mov	w0, #0x61                  	// #97
  40c8b4:	str	w0, [x1]
  40c8b8:	mov	x0, #0x0                   	// #0
  40c8bc:	ldp	x29, x30, [sp], #48
  40c8c0:	ret
  40c8c4:	stp	x29, x30, [sp, #-96]!
  40c8c8:	mov	x29, sp
  40c8cc:	str	x19, [sp, #16]
  40c8d0:	str	x0, [sp, #56]
  40c8d4:	str	x1, [sp, #48]
  40c8d8:	str	w2, [sp, #44]
  40c8dc:	str	wzr, [sp, #92]
  40c8e0:	b	40c9b4 <mpls_ntop@@Base+0x14c>
  40c8e4:	add	x0, sp, #0x48
  40c8e8:	mov	w2, #0x0                   	// #0
  40c8ec:	mov	x1, x0
  40c8f0:	ldr	x0, [sp, #56]
  40c8f4:	bl	404d00 <strtoul@plt>
  40c8f8:	str	x0, [sp, #80]
  40c8fc:	ldr	x1, [sp, #80]
  40c900:	mov	x0, #0xfffff               	// #1048575
  40c904:	cmp	x1, x0
  40c908:	b.ls	40c914 <mpls_ntop@@Base+0xac>  // b.plast
  40c90c:	mov	w0, #0x0                   	// #0
  40c910:	b	40c9ec <mpls_ntop@@Base+0x184>
  40c914:	ldr	x0, [sp, #72]
  40c918:	ldr	x1, [sp, #56]
  40c91c:	cmp	x1, x0
  40c920:	b.ne	40c92c <mpls_ntop@@Base+0xc4>  // b.any
  40c924:	mov	w0, #0x0                   	// #0
  40c928:	b	40c9ec <mpls_ntop@@Base+0x184>
  40c92c:	ldr	x0, [sp, #80]
  40c930:	lsl	w0, w0, #12
  40c934:	bl	404d50 <htonl@plt>
  40c938:	mov	w1, w0
  40c93c:	ldr	x0, [sp, #48]
  40c940:	str	w1, [x0]
  40c944:	ldr	x0, [sp, #72]
  40c948:	ldrb	w0, [x0]
  40c94c:	cmp	w0, #0x0
  40c950:	b.ne	40c978 <mpls_ntop@@Base+0x110>  // b.any
  40c954:	ldr	x0, [sp, #48]
  40c958:	ldr	w19, [x0]
  40c95c:	mov	w0, #0x100                 	// #256
  40c960:	bl	404d50 <htonl@plt>
  40c964:	orr	w1, w19, w0
  40c968:	ldr	x0, [sp, #48]
  40c96c:	str	w1, [x0]
  40c970:	mov	w0, #0x1                   	// #1
  40c974:	b	40c9ec <mpls_ntop@@Base+0x184>
  40c978:	ldr	x0, [sp, #72]
  40c97c:	ldrb	w0, [x0]
  40c980:	cmp	w0, #0x2f
  40c984:	b.eq	40c990 <mpls_ntop@@Base+0x128>  // b.none
  40c988:	mov	w0, #0x0                   	// #0
  40c98c:	b	40c9ec <mpls_ntop@@Base+0x184>
  40c990:	ldr	x0, [sp, #72]
  40c994:	add	x0, x0, #0x1
  40c998:	str	x0, [sp, #56]
  40c99c:	ldr	x0, [sp, #48]
  40c9a0:	add	x0, x0, #0x4
  40c9a4:	str	x0, [sp, #48]
  40c9a8:	ldr	w0, [sp, #92]
  40c9ac:	add	w0, w0, #0x1
  40c9b0:	str	w0, [sp, #92]
  40c9b4:	ldr	w1, [sp, #92]
  40c9b8:	ldr	w0, [sp, #44]
  40c9bc:	cmp	w1, w0
  40c9c0:	b.cc	40c8e4 <mpls_ntop@@Base+0x7c>  // b.lo, b.ul, b.last
  40c9c4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40c9c8:	ldr	x0, [x0, #3992]
  40c9cc:	ldr	x0, [x0]
  40c9d0:	mov	x3, x0
  40c9d4:	mov	x2, #0x18                  	// #24
  40c9d8:	mov	x1, #0x1                   	// #1
  40c9dc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40c9e0:	add	x0, x0, #0x540
  40c9e4:	bl	4050d0 <fwrite@plt>
  40c9e8:	mov	w0, #0x0                   	// #0
  40c9ec:	ldr	x19, [sp, #16]
  40c9f0:	ldp	x29, x30, [sp], #96
  40c9f4:	ret

000000000040c9f8 <mpls_pton@@Base>:
  40c9f8:	stp	x29, x30, [sp, #-64]!
  40c9fc:	mov	x29, sp
  40ca00:	str	w0, [sp, #44]
  40ca04:	str	x1, [sp, #32]
  40ca08:	str	x2, [sp, #24]
  40ca0c:	str	x3, [sp, #16]
  40ca10:	ldr	x0, [sp, #16]
  40ca14:	lsr	x0, x0, #2
  40ca18:	str	w0, [sp, #56]
  40ca1c:	ldr	w0, [sp, #44]
  40ca20:	cmp	w0, #0x1c
  40ca24:	b.ne	40ca48 <mpls_pton@@Base+0x50>  // b.any
  40ca28:	bl	405200 <__errno_location@plt>
  40ca2c:	str	wzr, [x0]
  40ca30:	ldr	w2, [sp, #56]
  40ca34:	ldr	x1, [sp, #24]
  40ca38:	ldr	x0, [sp, #32]
  40ca3c:	bl	40c8c4 <mpls_ntop@@Base+0x5c>
  40ca40:	str	w0, [sp, #60]
  40ca44:	b	40ca60 <mpls_pton@@Base+0x68>
  40ca48:	bl	405200 <__errno_location@plt>
  40ca4c:	mov	x1, x0
  40ca50:	mov	w0, #0x61                  	// #97
  40ca54:	str	w0, [x1]
  40ca58:	mov	w0, #0xffffffff            	// #-1
  40ca5c:	str	w0, [sp, #60]
  40ca60:	ldr	w0, [sp, #60]
  40ca64:	ldp	x29, x30, [sp], #64
  40ca68:	ret
  40ca6c:	stp	x29, x30, [sp, #-48]!
  40ca70:	mov	x29, sp
  40ca74:	str	x0, [sp, #24]
  40ca78:	str	wzr, [sp, #44]
  40ca7c:	b	40caac <mpls_pton@@Base+0xb4>
  40ca80:	ldr	x0, [sp, #24]
  40ca84:	ldr	x0, [x0]
  40ca88:	mov	x3, x0
  40ca8c:	mov	x2, #0x4                   	// #4
  40ca90:	mov	x1, #0x1                   	// #1
  40ca94:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ca98:	add	x0, x0, #0x560
  40ca9c:	bl	4050d0 <fwrite@plt>
  40caa0:	ldr	w0, [sp, #44]
  40caa4:	add	w0, w0, #0x1
  40caa8:	str	w0, [sp, #44]
  40caac:	ldr	x0, [sp, #24]
  40cab0:	ldr	w0, [x0, #8]
  40cab4:	ldr	w1, [sp, #44]
  40cab8:	cmp	w1, w0
  40cabc:	b.cc	40ca80 <mpls_pton@@Base+0x88>  // b.lo, b.ul, b.last
  40cac0:	nop
  40cac4:	nop
  40cac8:	ldp	x29, x30, [sp], #48
  40cacc:	ret
  40cad0:	stp	x29, x30, [sp, #-32]!
  40cad4:	mov	x29, sp
  40cad8:	str	x0, [sp, #24]
  40cadc:	ldr	x0, [sp, #24]
  40cae0:	ldrb	w0, [x0, #12]
  40cae4:	eor	w0, w0, #0x1
  40cae8:	and	w0, w0, #0xff
  40caec:	cmp	w0, #0x0
  40caf0:	b.ne	40cb14 <mpls_pton@@Base+0x11c>  // b.any
  40caf4:	ldr	x0, [sp, #24]
  40caf8:	ldr	x0, [x0]
  40cafc:	mov	x1, x0
  40cb00:	mov	w0, #0xa                   	// #10
  40cb04:	bl	404df0 <putc@plt>
  40cb08:	ldr	x0, [sp, #24]
  40cb0c:	bl	40ca6c <mpls_pton@@Base+0x74>
  40cb10:	b	40cb18 <mpls_pton@@Base+0x120>
  40cb14:	nop
  40cb18:	ldp	x29, x30, [sp], #32
  40cb1c:	ret
  40cb20:	stp	x29, x30, [sp, #-32]!
  40cb24:	mov	x29, sp
  40cb28:	str	x0, [sp, #24]
  40cb2c:	ldr	x0, [sp, #24]
  40cb30:	ldrb	w0, [x0, #13]
  40cb34:	cmp	w0, #0x0
  40cb38:	b.eq	40cb5c <mpls_pton@@Base+0x164>  // b.none
  40cb3c:	ldr	x0, [sp, #24]
  40cb40:	ldrb	w0, [x0, #13]
  40cb44:	mov	w2, w0
  40cb48:	ldr	x0, [sp, #24]
  40cb4c:	ldr	x0, [x0]
  40cb50:	mov	x1, x0
  40cb54:	mov	w0, w2
  40cb58:	bl	404df0 <putc@plt>
  40cb5c:	ldr	x0, [sp, #24]
  40cb60:	mov	w1, #0x2c                  	// #44
  40cb64:	strb	w1, [x0, #13]
  40cb68:	nop
  40cb6c:	ldp	x29, x30, [sp], #32
  40cb70:	ret
  40cb74:	stp	x29, x30, [sp, #-32]!
  40cb78:	mov	x29, sp
  40cb7c:	str	x0, [sp, #24]
  40cb80:	str	x1, [sp, #16]
  40cb84:	ldr	x0, [sp, #24]
  40cb88:	ldr	x0, [x0]
  40cb8c:	mov	x1, x0
  40cb90:	mov	w0, #0x22                  	// #34
  40cb94:	bl	404df0 <putc@plt>
  40cb98:	b	40cd60 <mpls_pton@@Base+0x368>
  40cb9c:	ldr	x0, [sp, #16]
  40cba0:	ldrb	w0, [x0]
  40cba4:	cmp	w0, #0x5c
  40cba8:	b.eq	40ccc8 <mpls_pton@@Base+0x2d0>  // b.none
  40cbac:	cmp	w0, #0x5c
  40cbb0:	b.gt	40cd34 <mpls_pton@@Base+0x33c>
  40cbb4:	cmp	w0, #0x27
  40cbb8:	b.eq	40cd10 <mpls_pton@@Base+0x318>  // b.none
  40cbbc:	cmp	w0, #0x27
  40cbc0:	b.gt	40cd34 <mpls_pton@@Base+0x33c>
  40cbc4:	cmp	w0, #0x22
  40cbc8:	b.eq	40ccec <mpls_pton@@Base+0x2f4>  // b.none
  40cbcc:	cmp	w0, #0x22
  40cbd0:	b.gt	40cd34 <mpls_pton@@Base+0x33c>
  40cbd4:	cmp	w0, #0xd
  40cbd8:	b.eq	40cc5c <mpls_pton@@Base+0x264>  // b.none
  40cbdc:	cmp	w0, #0xd
  40cbe0:	b.gt	40cd34 <mpls_pton@@Base+0x33c>
  40cbe4:	cmp	w0, #0xc
  40cbe8:	b.eq	40cc80 <mpls_pton@@Base+0x288>  // b.none
  40cbec:	cmp	w0, #0xc
  40cbf0:	b.gt	40cd34 <mpls_pton@@Base+0x33c>
  40cbf4:	cmp	w0, #0xa
  40cbf8:	b.eq	40cc38 <mpls_pton@@Base+0x240>  // b.none
  40cbfc:	cmp	w0, #0xa
  40cc00:	b.gt	40cd34 <mpls_pton@@Base+0x33c>
  40cc04:	cmp	w0, #0x8
  40cc08:	b.eq	40cca4 <mpls_pton@@Base+0x2ac>  // b.none
  40cc0c:	cmp	w0, #0x9
  40cc10:	b.ne	40cd34 <mpls_pton@@Base+0x33c>  // b.any
  40cc14:	ldr	x0, [sp, #24]
  40cc18:	ldr	x0, [x0]
  40cc1c:	mov	x3, x0
  40cc20:	mov	x2, #0x2                   	// #2
  40cc24:	mov	x1, #0x1                   	// #1
  40cc28:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cc2c:	add	x0, x0, #0x568
  40cc30:	bl	4050d0 <fwrite@plt>
  40cc34:	b	40cd54 <mpls_pton@@Base+0x35c>
  40cc38:	ldr	x0, [sp, #24]
  40cc3c:	ldr	x0, [x0]
  40cc40:	mov	x3, x0
  40cc44:	mov	x2, #0x2                   	// #2
  40cc48:	mov	x1, #0x1                   	// #1
  40cc4c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cc50:	add	x0, x0, #0x570
  40cc54:	bl	4050d0 <fwrite@plt>
  40cc58:	b	40cd54 <mpls_pton@@Base+0x35c>
  40cc5c:	ldr	x0, [sp, #24]
  40cc60:	ldr	x0, [x0]
  40cc64:	mov	x3, x0
  40cc68:	mov	x2, #0x2                   	// #2
  40cc6c:	mov	x1, #0x1                   	// #1
  40cc70:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cc74:	add	x0, x0, #0x578
  40cc78:	bl	4050d0 <fwrite@plt>
  40cc7c:	b	40cd54 <mpls_pton@@Base+0x35c>
  40cc80:	ldr	x0, [sp, #24]
  40cc84:	ldr	x0, [x0]
  40cc88:	mov	x3, x0
  40cc8c:	mov	x2, #0x2                   	// #2
  40cc90:	mov	x1, #0x1                   	// #1
  40cc94:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cc98:	add	x0, x0, #0x580
  40cc9c:	bl	4050d0 <fwrite@plt>
  40cca0:	b	40cd54 <mpls_pton@@Base+0x35c>
  40cca4:	ldr	x0, [sp, #24]
  40cca8:	ldr	x0, [x0]
  40ccac:	mov	x3, x0
  40ccb0:	mov	x2, #0x2                   	// #2
  40ccb4:	mov	x1, #0x1                   	// #1
  40ccb8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ccbc:	add	x0, x0, #0x588
  40ccc0:	bl	4050d0 <fwrite@plt>
  40ccc4:	b	40cd54 <mpls_pton@@Base+0x35c>
  40ccc8:	ldr	x0, [sp, #24]
  40cccc:	ldr	x0, [x0]
  40ccd0:	mov	x3, x0
  40ccd4:	mov	x2, #0x2                   	// #2
  40ccd8:	mov	x1, #0x1                   	// #1
  40ccdc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cce0:	add	x0, x0, #0x590
  40cce4:	bl	4050d0 <fwrite@plt>
  40cce8:	b	40cd54 <mpls_pton@@Base+0x35c>
  40ccec:	ldr	x0, [sp, #24]
  40ccf0:	ldr	x0, [x0]
  40ccf4:	mov	x3, x0
  40ccf8:	mov	x2, #0x2                   	// #2
  40ccfc:	mov	x1, #0x1                   	// #1
  40cd00:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cd04:	add	x0, x0, #0x598
  40cd08:	bl	4050d0 <fwrite@plt>
  40cd0c:	b	40cd54 <mpls_pton@@Base+0x35c>
  40cd10:	ldr	x0, [sp, #24]
  40cd14:	ldr	x0, [x0]
  40cd18:	mov	x3, x0
  40cd1c:	mov	x2, #0x2                   	// #2
  40cd20:	mov	x1, #0x1                   	// #1
  40cd24:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cd28:	add	x0, x0, #0x5a0
  40cd2c:	bl	4050d0 <fwrite@plt>
  40cd30:	b	40cd54 <mpls_pton@@Base+0x35c>
  40cd34:	ldr	x0, [sp, #16]
  40cd38:	ldrb	w0, [x0]
  40cd3c:	mov	w2, w0
  40cd40:	ldr	x0, [sp, #24]
  40cd44:	ldr	x0, [x0]
  40cd48:	mov	x1, x0
  40cd4c:	mov	w0, w2
  40cd50:	bl	404df0 <putc@plt>
  40cd54:	ldr	x0, [sp, #16]
  40cd58:	add	x0, x0, #0x1
  40cd5c:	str	x0, [sp, #16]
  40cd60:	ldr	x0, [sp, #16]
  40cd64:	ldrb	w0, [x0]
  40cd68:	cmp	w0, #0x0
  40cd6c:	b.ne	40cb9c <mpls_pton@@Base+0x1a4>  // b.any
  40cd70:	ldr	x0, [sp, #24]
  40cd74:	ldr	x0, [x0]
  40cd78:	mov	x1, x0
  40cd7c:	mov	w0, #0x22                  	// #34
  40cd80:	bl	404df0 <putc@plt>
  40cd84:	nop
  40cd88:	ldp	x29, x30, [sp], #32
  40cd8c:	ret

000000000040cd90 <jsonw_new@@Base>:
  40cd90:	stp	x29, x30, [sp, #-48]!
  40cd94:	mov	x29, sp
  40cd98:	str	x0, [sp, #24]
  40cd9c:	mov	x0, #0x10                  	// #16
  40cda0:	bl	404e90 <malloc@plt>
  40cda4:	str	x0, [sp, #40]
  40cda8:	ldr	x0, [sp, #40]
  40cdac:	cmp	x0, #0x0
  40cdb0:	b.eq	40cdd8 <jsonw_new@@Base+0x48>  // b.none
  40cdb4:	ldr	x0, [sp, #40]
  40cdb8:	ldr	x1, [sp, #24]
  40cdbc:	str	x1, [x0]
  40cdc0:	ldr	x0, [sp, #40]
  40cdc4:	str	wzr, [x0, #8]
  40cdc8:	ldr	x0, [sp, #40]
  40cdcc:	strb	wzr, [x0, #12]
  40cdd0:	ldr	x0, [sp, #40]
  40cdd4:	strb	wzr, [x0, #13]
  40cdd8:	ldr	x0, [sp, #40]
  40cddc:	ldp	x29, x30, [sp], #48
  40cde0:	ret

000000000040cde4 <jsonw_destroy@@Base>:
  40cde4:	stp	x29, x30, [sp, #-48]!
  40cde8:	mov	x29, sp
  40cdec:	str	x0, [sp, #24]
  40cdf0:	ldr	x0, [sp, #24]
  40cdf4:	ldr	x0, [x0]
  40cdf8:	str	x0, [sp, #40]
  40cdfc:	ldr	x0, [sp, #40]
  40ce00:	ldr	w0, [x0, #8]
  40ce04:	cmp	w0, #0x0
  40ce08:	b.eq	40ce2c <jsonw_destroy@@Base+0x48>  // b.none
  40ce0c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ce10:	add	x3, x0, #0x648
  40ce14:	mov	w2, #0x6e                  	// #110
  40ce18:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ce1c:	add	x1, x0, #0x5a8
  40ce20:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ce24:	add	x0, x0, #0x5b8
  40ce28:	bl	4051f0 <__assert_fail@plt>
  40ce2c:	ldr	x0, [sp, #40]
  40ce30:	ldr	x0, [x0]
  40ce34:	mov	x1, x0
  40ce38:	mov	w0, #0xa                   	// #10
  40ce3c:	bl	404e10 <fputc@plt>
  40ce40:	ldr	x0, [sp, #40]
  40ce44:	ldr	x0, [x0]
  40ce48:	bl	4050f0 <fflush@plt>
  40ce4c:	ldr	x0, [sp, #40]
  40ce50:	bl	405070 <free@plt>
  40ce54:	ldr	x0, [sp, #24]
  40ce58:	str	xzr, [x0]
  40ce5c:	nop
  40ce60:	ldp	x29, x30, [sp], #48
  40ce64:	ret

000000000040ce68 <jsonw_pretty@@Base>:
  40ce68:	sub	sp, sp, #0x10
  40ce6c:	str	x0, [sp, #8]
  40ce70:	strb	w1, [sp, #7]
  40ce74:	ldr	x0, [sp, #8]
  40ce78:	ldrb	w1, [sp, #7]
  40ce7c:	strb	w1, [x0, #12]
  40ce80:	nop
  40ce84:	add	sp, sp, #0x10
  40ce88:	ret
  40ce8c:	stp	x29, x30, [sp, #-32]!
  40ce90:	mov	x29, sp
  40ce94:	str	x0, [sp, #24]
  40ce98:	str	w1, [sp, #20]
  40ce9c:	ldr	x0, [sp, #24]
  40cea0:	bl	40cb20 <mpls_pton@@Base+0x128>
  40cea4:	ldr	x0, [sp, #24]
  40cea8:	ldr	x0, [x0]
  40ceac:	mov	x1, x0
  40ceb0:	ldr	w0, [sp, #20]
  40ceb4:	bl	404df0 <putc@plt>
  40ceb8:	ldr	x0, [sp, #24]
  40cebc:	ldr	w0, [x0, #8]
  40cec0:	add	w1, w0, #0x1
  40cec4:	ldr	x0, [sp, #24]
  40cec8:	str	w1, [x0, #8]
  40cecc:	ldr	x0, [sp, #24]
  40ced0:	strb	wzr, [x0, #13]
  40ced4:	nop
  40ced8:	ldp	x29, x30, [sp], #32
  40cedc:	ret
  40cee0:	stp	x29, x30, [sp, #-32]!
  40cee4:	mov	x29, sp
  40cee8:	str	x0, [sp, #24]
  40ceec:	str	w1, [sp, #20]
  40cef0:	ldr	x0, [sp, #24]
  40cef4:	ldr	w0, [x0, #8]
  40cef8:	cmp	w0, #0x0
  40cefc:	b.ne	40cf20 <jsonw_pretty@@Base+0xb8>  // b.any
  40cf00:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cf04:	add	x3, x0, #0x658
  40cf08:	mov	w2, #0x85                  	// #133
  40cf0c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cf10:	add	x1, x0, #0x5a8
  40cf14:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40cf18:	add	x0, x0, #0x5d0
  40cf1c:	bl	4051f0 <__assert_fail@plt>
  40cf20:	ldr	x0, [sp, #24]
  40cf24:	ldr	w0, [x0, #8]
  40cf28:	sub	w1, w0, #0x1
  40cf2c:	ldr	x0, [sp, #24]
  40cf30:	str	w1, [x0, #8]
  40cf34:	ldr	x0, [sp, #24]
  40cf38:	ldrb	w0, [x0, #13]
  40cf3c:	cmp	w0, #0x0
  40cf40:	b.eq	40cf4c <jsonw_pretty@@Base+0xe4>  // b.none
  40cf44:	ldr	x0, [sp, #24]
  40cf48:	bl	40cad0 <mpls_pton@@Base+0xd8>
  40cf4c:	ldr	x0, [sp, #24]
  40cf50:	ldr	x0, [x0]
  40cf54:	mov	x1, x0
  40cf58:	ldr	w0, [sp, #20]
  40cf5c:	bl	404df0 <putc@plt>
  40cf60:	ldr	x0, [sp, #24]
  40cf64:	mov	w1, #0x2c                  	// #44
  40cf68:	strb	w1, [x0, #13]
  40cf6c:	nop
  40cf70:	ldp	x29, x30, [sp], #32
  40cf74:	ret

000000000040cf78 <jsonw_name@@Base>:
  40cf78:	stp	x29, x30, [sp, #-32]!
  40cf7c:	mov	x29, sp
  40cf80:	str	x0, [sp, #24]
  40cf84:	str	x1, [sp, #16]
  40cf88:	ldr	x0, [sp, #24]
  40cf8c:	bl	40cb20 <mpls_pton@@Base+0x128>
  40cf90:	ldr	x0, [sp, #24]
  40cf94:	bl	40cad0 <mpls_pton@@Base+0xd8>
  40cf98:	ldr	x0, [sp, #24]
  40cf9c:	strb	wzr, [x0, #13]
  40cfa0:	ldr	x1, [sp, #16]
  40cfa4:	ldr	x0, [sp, #24]
  40cfa8:	bl	40cb74 <mpls_pton@@Base+0x17c>
  40cfac:	ldr	x0, [sp, #24]
  40cfb0:	ldr	x0, [x0]
  40cfb4:	mov	x1, x0
  40cfb8:	mov	w0, #0x3a                  	// #58
  40cfbc:	bl	404df0 <putc@plt>
  40cfc0:	ldr	x0, [sp, #24]
  40cfc4:	ldrb	w0, [x0, #12]
  40cfc8:	cmp	w0, #0x0
  40cfcc:	b.eq	40cfe4 <jsonw_name@@Base+0x6c>  // b.none
  40cfd0:	ldr	x0, [sp, #24]
  40cfd4:	ldr	x0, [x0]
  40cfd8:	mov	x1, x0
  40cfdc:	mov	w0, #0x20                  	// #32
  40cfe0:	bl	404df0 <putc@plt>
  40cfe4:	nop
  40cfe8:	ldp	x29, x30, [sp], #32
  40cfec:	ret

000000000040cff0 <jsonw_printf@@Base>:
  40cff0:	stp	x29, x30, [sp, #-272]!
  40cff4:	mov	x29, sp
  40cff8:	str	x0, [sp, #56]
  40cffc:	str	x1, [sp, #48]
  40d000:	str	x2, [sp, #224]
  40d004:	str	x3, [sp, #232]
  40d008:	str	x4, [sp, #240]
  40d00c:	str	x5, [sp, #248]
  40d010:	str	x6, [sp, #256]
  40d014:	str	x7, [sp, #264]
  40d018:	str	q0, [sp, #96]
  40d01c:	str	q1, [sp, #112]
  40d020:	str	q2, [sp, #128]
  40d024:	str	q3, [sp, #144]
  40d028:	str	q4, [sp, #160]
  40d02c:	str	q5, [sp, #176]
  40d030:	str	q6, [sp, #192]
  40d034:	str	q7, [sp, #208]
  40d038:	add	x0, sp, #0x110
  40d03c:	str	x0, [sp, #64]
  40d040:	add	x0, sp, #0x110
  40d044:	str	x0, [sp, #72]
  40d048:	add	x0, sp, #0xe0
  40d04c:	str	x0, [sp, #80]
  40d050:	mov	w0, #0xffffffd0            	// #-48
  40d054:	str	w0, [sp, #88]
  40d058:	mov	w0, #0xffffff80            	// #-128
  40d05c:	str	w0, [sp, #92]
  40d060:	ldr	x0, [sp, #56]
  40d064:	bl	40cb20 <mpls_pton@@Base+0x128>
  40d068:	ldr	x0, [sp, #56]
  40d06c:	ldr	x4, [x0]
  40d070:	add	x2, sp, #0x10
  40d074:	add	x3, sp, #0x40
  40d078:	ldp	x0, x1, [x3]
  40d07c:	stp	x0, x1, [x2]
  40d080:	ldp	x0, x1, [x3, #16]
  40d084:	stp	x0, x1, [x2, #16]
  40d088:	add	x0, sp, #0x10
  40d08c:	mov	x2, x0
  40d090:	ldr	x1, [sp, #48]
  40d094:	mov	x0, x4
  40d098:	bl	4051d0 <vfprintf@plt>
  40d09c:	nop
  40d0a0:	ldp	x29, x30, [sp], #272
  40d0a4:	ret

000000000040d0a8 <jsonw_start_object@@Base>:
  40d0a8:	stp	x29, x30, [sp, #-32]!
  40d0ac:	mov	x29, sp
  40d0b0:	str	x0, [sp, #24]
  40d0b4:	mov	w1, #0x7b                  	// #123
  40d0b8:	ldr	x0, [sp, #24]
  40d0bc:	bl	40ce8c <jsonw_pretty@@Base+0x24>
  40d0c0:	nop
  40d0c4:	ldp	x29, x30, [sp], #32
  40d0c8:	ret

000000000040d0cc <jsonw_end_object@@Base>:
  40d0cc:	stp	x29, x30, [sp, #-32]!
  40d0d0:	mov	x29, sp
  40d0d4:	str	x0, [sp, #24]
  40d0d8:	mov	w1, #0x7d                  	// #125
  40d0dc:	ldr	x0, [sp, #24]
  40d0e0:	bl	40cee0 <jsonw_pretty@@Base+0x78>
  40d0e4:	nop
  40d0e8:	ldp	x29, x30, [sp], #32
  40d0ec:	ret

000000000040d0f0 <jsonw_start_array@@Base>:
  40d0f0:	stp	x29, x30, [sp, #-32]!
  40d0f4:	mov	x29, sp
  40d0f8:	str	x0, [sp, #24]
  40d0fc:	mov	w1, #0x5b                  	// #91
  40d100:	ldr	x0, [sp, #24]
  40d104:	bl	40ce8c <jsonw_pretty@@Base+0x24>
  40d108:	ldr	x0, [sp, #24]
  40d10c:	ldrb	w0, [x0, #12]
  40d110:	cmp	w0, #0x0
  40d114:	b.eq	40d12c <jsonw_start_array@@Base+0x3c>  // b.none
  40d118:	ldr	x0, [sp, #24]
  40d11c:	ldr	x0, [x0]
  40d120:	mov	x1, x0
  40d124:	mov	w0, #0x20                  	// #32
  40d128:	bl	404df0 <putc@plt>
  40d12c:	nop
  40d130:	ldp	x29, x30, [sp], #32
  40d134:	ret

000000000040d138 <jsonw_end_array@@Base>:
  40d138:	stp	x29, x30, [sp, #-32]!
  40d13c:	mov	x29, sp
  40d140:	str	x0, [sp, #24]
  40d144:	ldr	x0, [sp, #24]
  40d148:	ldrb	w0, [x0, #12]
  40d14c:	cmp	w0, #0x0
  40d150:	b.eq	40d178 <jsonw_end_array@@Base+0x40>  // b.none
  40d154:	ldr	x0, [sp, #24]
  40d158:	ldrb	w0, [x0, #13]
  40d15c:	cmp	w0, #0x0
  40d160:	b.eq	40d178 <jsonw_end_array@@Base+0x40>  // b.none
  40d164:	ldr	x0, [sp, #24]
  40d168:	ldr	x0, [x0]
  40d16c:	mov	x1, x0
  40d170:	mov	w0, #0x20                  	// #32
  40d174:	bl	404df0 <putc@plt>
  40d178:	ldr	x0, [sp, #24]
  40d17c:	strb	wzr, [x0, #13]
  40d180:	mov	w1, #0x5d                  	// #93
  40d184:	ldr	x0, [sp, #24]
  40d188:	bl	40cee0 <jsonw_pretty@@Base+0x78>
  40d18c:	nop
  40d190:	ldp	x29, x30, [sp], #32
  40d194:	ret

000000000040d198 <jsonw_string@@Base>:
  40d198:	stp	x29, x30, [sp, #-32]!
  40d19c:	mov	x29, sp
  40d1a0:	str	x0, [sp, #24]
  40d1a4:	str	x1, [sp, #16]
  40d1a8:	ldr	x0, [sp, #24]
  40d1ac:	bl	40cb20 <mpls_pton@@Base+0x128>
  40d1b0:	ldr	x1, [sp, #16]
  40d1b4:	ldr	x0, [sp, #24]
  40d1b8:	bl	40cb74 <mpls_pton@@Base+0x17c>
  40d1bc:	nop
  40d1c0:	ldp	x29, x30, [sp], #32
  40d1c4:	ret

000000000040d1c8 <jsonw_bool@@Base>:
  40d1c8:	stp	x29, x30, [sp, #-32]!
  40d1cc:	mov	x29, sp
  40d1d0:	str	x0, [sp, #24]
  40d1d4:	strb	w1, [sp, #23]
  40d1d8:	ldrb	w0, [sp, #23]
  40d1dc:	cmp	w0, #0x0
  40d1e0:	b.eq	40d1f0 <jsonw_bool@@Base+0x28>  // b.none
  40d1e4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d1e8:	add	x0, x0, #0x5e0
  40d1ec:	b	40d1f8 <jsonw_bool@@Base+0x30>
  40d1f0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d1f4:	add	x0, x0, #0x5e8
  40d1f8:	mov	x2, x0
  40d1fc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d200:	add	x1, x0, #0x5f0
  40d204:	ldr	x0, [sp, #24]
  40d208:	bl	40cff0 <jsonw_printf@@Base>
  40d20c:	nop
  40d210:	ldp	x29, x30, [sp], #32
  40d214:	ret

000000000040d218 <jsonw_null@@Base>:
  40d218:	stp	x29, x30, [sp, #-32]!
  40d21c:	mov	x29, sp
  40d220:	str	x0, [sp, #24]
  40d224:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d228:	add	x1, x0, #0x5f8
  40d22c:	ldr	x0, [sp, #24]
  40d230:	bl	40cff0 <jsonw_printf@@Base>
  40d234:	nop
  40d238:	ldp	x29, x30, [sp], #32
  40d23c:	ret

000000000040d240 <jsonw_float@@Base>:
  40d240:	stp	x29, x30, [sp, #-32]!
  40d244:	mov	x29, sp
  40d248:	str	x0, [sp, #24]
  40d24c:	str	d0, [sp, #16]
  40d250:	ldr	d0, [sp, #16]
  40d254:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d258:	add	x1, x0, #0x600
  40d25c:	ldr	x0, [sp, #24]
  40d260:	bl	40cff0 <jsonw_printf@@Base>
  40d264:	nop
  40d268:	ldp	x29, x30, [sp], #32
  40d26c:	ret

000000000040d270 <jsonw_hhu@@Base>:
  40d270:	stp	x29, x30, [sp, #-32]!
  40d274:	mov	x29, sp
  40d278:	str	x0, [sp, #24]
  40d27c:	strb	w1, [sp, #23]
  40d280:	ldrb	w0, [sp, #23]
  40d284:	mov	w2, w0
  40d288:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d28c:	add	x1, x0, #0x608
  40d290:	ldr	x0, [sp, #24]
  40d294:	bl	40cff0 <jsonw_printf@@Base>
  40d298:	nop
  40d29c:	ldp	x29, x30, [sp], #32
  40d2a0:	ret

000000000040d2a4 <jsonw_hu@@Base>:
  40d2a4:	stp	x29, x30, [sp, #-32]!
  40d2a8:	mov	x29, sp
  40d2ac:	str	x0, [sp, #24]
  40d2b0:	strh	w1, [sp, #22]
  40d2b4:	ldrh	w0, [sp, #22]
  40d2b8:	mov	w2, w0
  40d2bc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d2c0:	add	x1, x0, #0x610
  40d2c4:	ldr	x0, [sp, #24]
  40d2c8:	bl	40cff0 <jsonw_printf@@Base>
  40d2cc:	nop
  40d2d0:	ldp	x29, x30, [sp], #32
  40d2d4:	ret

000000000040d2d8 <jsonw_uint@@Base>:
  40d2d8:	stp	x29, x30, [sp, #-32]!
  40d2dc:	mov	x29, sp
  40d2e0:	str	x0, [sp, #24]
  40d2e4:	str	w1, [sp, #20]
  40d2e8:	ldr	w2, [sp, #20]
  40d2ec:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d2f0:	add	x1, x0, #0x618
  40d2f4:	ldr	x0, [sp, #24]
  40d2f8:	bl	40cff0 <jsonw_printf@@Base>
  40d2fc:	nop
  40d300:	ldp	x29, x30, [sp], #32
  40d304:	ret

000000000040d308 <jsonw_u64@@Base>:
  40d308:	stp	x29, x30, [sp, #-32]!
  40d30c:	mov	x29, sp
  40d310:	str	x0, [sp, #24]
  40d314:	str	x1, [sp, #16]
  40d318:	ldr	x2, [sp, #16]
  40d31c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d320:	add	x1, x0, #0x620
  40d324:	ldr	x0, [sp, #24]
  40d328:	bl	40cff0 <jsonw_printf@@Base>
  40d32c:	nop
  40d330:	ldp	x29, x30, [sp], #32
  40d334:	ret

000000000040d338 <jsonw_xint@@Base>:
  40d338:	stp	x29, x30, [sp, #-32]!
  40d33c:	mov	x29, sp
  40d340:	str	x0, [sp, #24]
  40d344:	str	x1, [sp, #16]
  40d348:	ldr	x2, [sp, #16]
  40d34c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d350:	add	x1, x0, #0x628
  40d354:	ldr	x0, [sp, #24]
  40d358:	bl	40cff0 <jsonw_printf@@Base>
  40d35c:	nop
  40d360:	ldp	x29, x30, [sp], #32
  40d364:	ret

000000000040d368 <jsonw_luint@@Base>:
  40d368:	stp	x29, x30, [sp, #-32]!
  40d36c:	mov	x29, sp
  40d370:	str	x0, [sp, #24]
  40d374:	str	x1, [sp, #16]
  40d378:	ldr	x2, [sp, #16]
  40d37c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d380:	add	x1, x0, #0x620
  40d384:	ldr	x0, [sp, #24]
  40d388:	bl	40cff0 <jsonw_printf@@Base>
  40d38c:	nop
  40d390:	ldp	x29, x30, [sp], #32
  40d394:	ret

000000000040d398 <jsonw_lluint@@Base>:
  40d398:	stp	x29, x30, [sp, #-32]!
  40d39c:	mov	x29, sp
  40d3a0:	str	x0, [sp, #24]
  40d3a4:	str	x1, [sp, #16]
  40d3a8:	ldr	x2, [sp, #16]
  40d3ac:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d3b0:	add	x1, x0, #0x630
  40d3b4:	ldr	x0, [sp, #24]
  40d3b8:	bl	40cff0 <jsonw_printf@@Base>
  40d3bc:	nop
  40d3c0:	ldp	x29, x30, [sp], #32
  40d3c4:	ret

000000000040d3c8 <jsonw_int@@Base>:
  40d3c8:	stp	x29, x30, [sp, #-32]!
  40d3cc:	mov	x29, sp
  40d3d0:	str	x0, [sp, #24]
  40d3d4:	str	w1, [sp, #20]
  40d3d8:	ldr	w2, [sp, #20]
  40d3dc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d3e0:	add	x1, x0, #0x638
  40d3e4:	ldr	x0, [sp, #24]
  40d3e8:	bl	40cff0 <jsonw_printf@@Base>
  40d3ec:	nop
  40d3f0:	ldp	x29, x30, [sp], #32
  40d3f4:	ret

000000000040d3f8 <jsonw_s64@@Base>:
  40d3f8:	stp	x29, x30, [sp, #-32]!
  40d3fc:	mov	x29, sp
  40d400:	str	x0, [sp, #24]
  40d404:	str	x1, [sp, #16]
  40d408:	ldr	x2, [sp, #16]
  40d40c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d410:	add	x1, x0, #0x640
  40d414:	ldr	x0, [sp, #24]
  40d418:	bl	40cff0 <jsonw_printf@@Base>
  40d41c:	nop
  40d420:	ldp	x29, x30, [sp], #32
  40d424:	ret

000000000040d428 <jsonw_string_field@@Base>:
  40d428:	stp	x29, x30, [sp, #-48]!
  40d42c:	mov	x29, sp
  40d430:	str	x0, [sp, #40]
  40d434:	str	x1, [sp, #32]
  40d438:	str	x2, [sp, #24]
  40d43c:	ldr	x1, [sp, #32]
  40d440:	ldr	x0, [sp, #40]
  40d444:	bl	40cf78 <jsonw_name@@Base>
  40d448:	ldr	x1, [sp, #24]
  40d44c:	ldr	x0, [sp, #40]
  40d450:	bl	40d198 <jsonw_string@@Base>
  40d454:	nop
  40d458:	ldp	x29, x30, [sp], #48
  40d45c:	ret

000000000040d460 <jsonw_bool_field@@Base>:
  40d460:	stp	x29, x30, [sp, #-48]!
  40d464:	mov	x29, sp
  40d468:	str	x0, [sp, #40]
  40d46c:	str	x1, [sp, #32]
  40d470:	strb	w2, [sp, #31]
  40d474:	ldr	x1, [sp, #32]
  40d478:	ldr	x0, [sp, #40]
  40d47c:	bl	40cf78 <jsonw_name@@Base>
  40d480:	ldrb	w1, [sp, #31]
  40d484:	ldr	x0, [sp, #40]
  40d488:	bl	40d1c8 <jsonw_bool@@Base>
  40d48c:	nop
  40d490:	ldp	x29, x30, [sp], #48
  40d494:	ret

000000000040d498 <jsonw_float_field@@Base>:
  40d498:	stp	x29, x30, [sp, #-48]!
  40d49c:	mov	x29, sp
  40d4a0:	str	x0, [sp, #40]
  40d4a4:	str	x1, [sp, #32]
  40d4a8:	str	d0, [sp, #24]
  40d4ac:	ldr	x1, [sp, #32]
  40d4b0:	ldr	x0, [sp, #40]
  40d4b4:	bl	40cf78 <jsonw_name@@Base>
  40d4b8:	ldr	d0, [sp, #24]
  40d4bc:	ldr	x0, [sp, #40]
  40d4c0:	bl	40d240 <jsonw_float@@Base>
  40d4c4:	nop
  40d4c8:	ldp	x29, x30, [sp], #48
  40d4cc:	ret

000000000040d4d0 <jsonw_uint_field@@Base>:
  40d4d0:	stp	x29, x30, [sp, #-48]!
  40d4d4:	mov	x29, sp
  40d4d8:	str	x0, [sp, #40]
  40d4dc:	str	x1, [sp, #32]
  40d4e0:	str	w2, [sp, #28]
  40d4e4:	ldr	x1, [sp, #32]
  40d4e8:	ldr	x0, [sp, #40]
  40d4ec:	bl	40cf78 <jsonw_name@@Base>
  40d4f0:	ldr	w1, [sp, #28]
  40d4f4:	ldr	x0, [sp, #40]
  40d4f8:	bl	40d2d8 <jsonw_uint@@Base>
  40d4fc:	nop
  40d500:	ldp	x29, x30, [sp], #48
  40d504:	ret

000000000040d508 <jsonw_u64_field@@Base>:
  40d508:	stp	x29, x30, [sp, #-48]!
  40d50c:	mov	x29, sp
  40d510:	str	x0, [sp, #40]
  40d514:	str	x1, [sp, #32]
  40d518:	str	x2, [sp, #24]
  40d51c:	ldr	x1, [sp, #32]
  40d520:	ldr	x0, [sp, #40]
  40d524:	bl	40cf78 <jsonw_name@@Base>
  40d528:	ldr	x1, [sp, #24]
  40d52c:	ldr	x0, [sp, #40]
  40d530:	bl	40d308 <jsonw_u64@@Base>
  40d534:	nop
  40d538:	ldp	x29, x30, [sp], #48
  40d53c:	ret

000000000040d540 <jsonw_xint_field@@Base>:
  40d540:	stp	x29, x30, [sp, #-48]!
  40d544:	mov	x29, sp
  40d548:	str	x0, [sp, #40]
  40d54c:	str	x1, [sp, #32]
  40d550:	str	x2, [sp, #24]
  40d554:	ldr	x1, [sp, #32]
  40d558:	ldr	x0, [sp, #40]
  40d55c:	bl	40cf78 <jsonw_name@@Base>
  40d560:	ldr	x1, [sp, #24]
  40d564:	ldr	x0, [sp, #40]
  40d568:	bl	40d338 <jsonw_xint@@Base>
  40d56c:	nop
  40d570:	ldp	x29, x30, [sp], #48
  40d574:	ret

000000000040d578 <jsonw_hhu_field@@Base>:
  40d578:	stp	x29, x30, [sp, #-48]!
  40d57c:	mov	x29, sp
  40d580:	str	x0, [sp, #40]
  40d584:	str	x1, [sp, #32]
  40d588:	strb	w2, [sp, #31]
  40d58c:	ldr	x1, [sp, #32]
  40d590:	ldr	x0, [sp, #40]
  40d594:	bl	40cf78 <jsonw_name@@Base>
  40d598:	ldrb	w1, [sp, #31]
  40d59c:	ldr	x0, [sp, #40]
  40d5a0:	bl	40d270 <jsonw_hhu@@Base>
  40d5a4:	nop
  40d5a8:	ldp	x29, x30, [sp], #48
  40d5ac:	ret

000000000040d5b0 <jsonw_hu_field@@Base>:
  40d5b0:	stp	x29, x30, [sp, #-48]!
  40d5b4:	mov	x29, sp
  40d5b8:	str	x0, [sp, #40]
  40d5bc:	str	x1, [sp, #32]
  40d5c0:	strh	w2, [sp, #30]
  40d5c4:	ldr	x1, [sp, #32]
  40d5c8:	ldr	x0, [sp, #40]
  40d5cc:	bl	40cf78 <jsonw_name@@Base>
  40d5d0:	ldrh	w1, [sp, #30]
  40d5d4:	ldr	x0, [sp, #40]
  40d5d8:	bl	40d2a4 <jsonw_hu@@Base>
  40d5dc:	nop
  40d5e0:	ldp	x29, x30, [sp], #48
  40d5e4:	ret

000000000040d5e8 <jsonw_luint_field@@Base>:
  40d5e8:	stp	x29, x30, [sp, #-48]!
  40d5ec:	mov	x29, sp
  40d5f0:	str	x0, [sp, #40]
  40d5f4:	str	x1, [sp, #32]
  40d5f8:	str	x2, [sp, #24]
  40d5fc:	ldr	x1, [sp, #32]
  40d600:	ldr	x0, [sp, #40]
  40d604:	bl	40cf78 <jsonw_name@@Base>
  40d608:	ldr	x1, [sp, #24]
  40d60c:	ldr	x0, [sp, #40]
  40d610:	bl	40d368 <jsonw_luint@@Base>
  40d614:	nop
  40d618:	ldp	x29, x30, [sp], #48
  40d61c:	ret

000000000040d620 <jsonw_lluint_field@@Base>:
  40d620:	stp	x29, x30, [sp, #-48]!
  40d624:	mov	x29, sp
  40d628:	str	x0, [sp, #40]
  40d62c:	str	x1, [sp, #32]
  40d630:	str	x2, [sp, #24]
  40d634:	ldr	x1, [sp, #32]
  40d638:	ldr	x0, [sp, #40]
  40d63c:	bl	40cf78 <jsonw_name@@Base>
  40d640:	ldr	x1, [sp, #24]
  40d644:	ldr	x0, [sp, #40]
  40d648:	bl	40d398 <jsonw_lluint@@Base>
  40d64c:	nop
  40d650:	ldp	x29, x30, [sp], #48
  40d654:	ret

000000000040d658 <jsonw_int_field@@Base>:
  40d658:	stp	x29, x30, [sp, #-48]!
  40d65c:	mov	x29, sp
  40d660:	str	x0, [sp, #40]
  40d664:	str	x1, [sp, #32]
  40d668:	str	w2, [sp, #28]
  40d66c:	ldr	x1, [sp, #32]
  40d670:	ldr	x0, [sp, #40]
  40d674:	bl	40cf78 <jsonw_name@@Base>
  40d678:	ldr	w1, [sp, #28]
  40d67c:	ldr	x0, [sp, #40]
  40d680:	bl	40d3c8 <jsonw_int@@Base>
  40d684:	nop
  40d688:	ldp	x29, x30, [sp], #48
  40d68c:	ret

000000000040d690 <jsonw_s64_field@@Base>:
  40d690:	stp	x29, x30, [sp, #-48]!
  40d694:	mov	x29, sp
  40d698:	str	x0, [sp, #40]
  40d69c:	str	x1, [sp, #32]
  40d6a0:	str	x2, [sp, #24]
  40d6a4:	ldr	x1, [sp, #32]
  40d6a8:	ldr	x0, [sp, #40]
  40d6ac:	bl	40cf78 <jsonw_name@@Base>
  40d6b0:	ldr	x1, [sp, #24]
  40d6b4:	ldr	x0, [sp, #40]
  40d6b8:	bl	40d3f8 <jsonw_s64@@Base>
  40d6bc:	nop
  40d6c0:	ldp	x29, x30, [sp], #48
  40d6c4:	ret

000000000040d6c8 <jsonw_null_field@@Base>:
  40d6c8:	stp	x29, x30, [sp, #-32]!
  40d6cc:	mov	x29, sp
  40d6d0:	str	x0, [sp, #24]
  40d6d4:	str	x1, [sp, #16]
  40d6d8:	ldr	x1, [sp, #16]
  40d6dc:	ldr	x0, [sp, #24]
  40d6e0:	bl	40cf78 <jsonw_name@@Base>
  40d6e4:	ldr	x0, [sp, #24]
  40d6e8:	bl	40d218 <jsonw_null@@Base>
  40d6ec:	nop
  40d6f0:	ldp	x29, x30, [sp], #32
  40d6f4:	ret

000000000040d6f8 <nl_dump_ext_ack@@Base>:
  40d6f8:	sub	sp, sp, #0x10
  40d6fc:	str	x0, [sp, #8]
  40d700:	str	x1, [sp]
  40d704:	mov	w0, #0x0                   	// #0
  40d708:	add	sp, sp, #0x10
  40d70c:	ret

000000000040d710 <nl_dump_ext_ack_done@@Base>:
  40d710:	sub	sp, sp, #0x10
  40d714:	str	x0, [sp, #8]
  40d718:	str	w1, [sp, #4]
  40d71c:	mov	w0, #0x0                   	// #0
  40d720:	add	sp, sp, #0x10
  40d724:	ret

000000000040d728 <rtnl_set_strict_dump@@Base>:
  40d728:	stp	x29, x30, [sp, #-48]!
  40d72c:	mov	x29, sp
  40d730:	str	x0, [sp, #24]
  40d734:	mov	w0, #0x1                   	// #1
  40d738:	str	w0, [sp, #44]
  40d73c:	ldr	x0, [sp, #24]
  40d740:	ldr	w0, [x0]
  40d744:	add	x1, sp, #0x2c
  40d748:	mov	w4, #0x4                   	// #4
  40d74c:	mov	x3, x1
  40d750:	mov	w2, #0xc                   	// #12
  40d754:	mov	w1, #0x10e                 	// #270
  40d758:	bl	404ea0 <setsockopt@plt>
  40d75c:	cmp	w0, #0x0
  40d760:	b.lt	40d77c <rtnl_set_strict_dump@@Base+0x54>  // b.tstop
  40d764:	ldr	x0, [sp, #24]
  40d768:	ldr	w0, [x0, #48]
  40d76c:	orr	w1, w0, #0x4
  40d770:	ldr	x0, [sp, #24]
  40d774:	str	w1, [x0, #48]
  40d778:	b	40d780 <rtnl_set_strict_dump@@Base+0x58>
  40d77c:	nop
  40d780:	ldp	x29, x30, [sp], #48
  40d784:	ret

000000000040d788 <rtnl_add_nl_group@@Base>:
  40d788:	stp	x29, x30, [sp, #-32]!
  40d78c:	mov	x29, sp
  40d790:	str	x0, [sp, #24]
  40d794:	str	w1, [sp, #20]
  40d798:	ldr	x0, [sp, #24]
  40d79c:	ldr	w0, [x0]
  40d7a0:	add	x1, sp, #0x14
  40d7a4:	mov	w4, #0x4                   	// #4
  40d7a8:	mov	x3, x1
  40d7ac:	mov	w2, #0x1                   	// #1
  40d7b0:	mov	w1, #0x10e                 	// #270
  40d7b4:	bl	404ea0 <setsockopt@plt>
  40d7b8:	ldp	x29, x30, [sp], #32
  40d7bc:	ret

000000000040d7c0 <rtnl_close@@Base>:
  40d7c0:	stp	x29, x30, [sp, #-32]!
  40d7c4:	mov	x29, sp
  40d7c8:	str	x0, [sp, #24]
  40d7cc:	ldr	x0, [sp, #24]
  40d7d0:	ldr	w0, [x0]
  40d7d4:	cmp	w0, #0x0
  40d7d8:	b.lt	40d7f4 <rtnl_close@@Base+0x34>  // b.tstop
  40d7dc:	ldr	x0, [sp, #24]
  40d7e0:	ldr	w0, [x0]
  40d7e4:	bl	404f90 <close@plt>
  40d7e8:	ldr	x0, [sp, #24]
  40d7ec:	mov	w1, #0xffffffff            	// #-1
  40d7f0:	str	w1, [x0]
  40d7f4:	nop
  40d7f8:	ldp	x29, x30, [sp], #32
  40d7fc:	ret

000000000040d800 <rtnl_open_byproto@@Base>:
  40d800:	stp	x29, x30, [sp, #-48]!
  40d804:	mov	x29, sp
  40d808:	str	x0, [sp, #24]
  40d80c:	str	w1, [sp, #20]
  40d810:	str	w2, [sp, #16]
  40d814:	mov	w0, #0x8000                	// #32768
  40d818:	str	w0, [sp, #40]
  40d81c:	mov	w0, #0x1                   	// #1
  40d820:	str	w0, [sp, #36]
  40d824:	mov	x2, #0x38                  	// #56
  40d828:	mov	w1, #0x0                   	// #0
  40d82c:	ldr	x0, [sp, #24]
  40d830:	bl	404ef0 <memset@plt>
  40d834:	ldr	x0, [sp, #24]
  40d838:	ldr	w1, [sp, #16]
  40d83c:	str	w1, [x0, #36]
  40d840:	ldr	w2, [sp, #16]
  40d844:	mov	w1, #0x3                   	// #3
  40d848:	movk	w1, #0x8, lsl #16
  40d84c:	mov	w0, #0x10                  	// #16
  40d850:	bl	4050e0 <socket@plt>
  40d854:	mov	w1, w0
  40d858:	ldr	x0, [sp, #24]
  40d85c:	str	w1, [x0]
  40d860:	ldr	x0, [sp, #24]
  40d864:	ldr	w0, [x0]
  40d868:	cmp	w0, #0x0
  40d86c:	b.ge	40d884 <rtnl_open_byproto@@Base+0x84>  // b.tcont
  40d870:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d874:	add	x0, x0, #0x668
  40d878:	bl	404d30 <perror@plt>
  40d87c:	mov	w0, #0xffffffff            	// #-1
  40d880:	b	40da60 <rtnl_open_byproto@@Base+0x260>
  40d884:	ldr	x0, [sp, #24]
  40d888:	ldr	w0, [x0]
  40d88c:	add	x1, sp, #0x28
  40d890:	mov	w4, #0x4                   	// #4
  40d894:	mov	x3, x1
  40d898:	mov	w2, #0x7                   	// #7
  40d89c:	mov	w1, #0x1                   	// #1
  40d8a0:	bl	404ea0 <setsockopt@plt>
  40d8a4:	cmp	w0, #0x0
  40d8a8:	b.ge	40d8c0 <rtnl_open_byproto@@Base+0xc0>  // b.tcont
  40d8ac:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d8b0:	add	x0, x0, #0x688
  40d8b4:	bl	404d30 <perror@plt>
  40d8b8:	mov	w0, #0xffffffff            	// #-1
  40d8bc:	b	40da60 <rtnl_open_byproto@@Base+0x260>
  40d8c0:	ldr	x0, [sp, #24]
  40d8c4:	ldr	w5, [x0]
  40d8c8:	mov	w4, #0x4                   	// #4
  40d8cc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40d8d0:	ldr	x3, [x0, #4024]
  40d8d4:	mov	w2, #0x8                   	// #8
  40d8d8:	mov	w1, #0x1                   	// #1
  40d8dc:	mov	w0, w5
  40d8e0:	bl	404ea0 <setsockopt@plt>
  40d8e4:	cmp	w0, #0x0
  40d8e8:	b.ge	40d900 <rtnl_open_byproto@@Base+0x100>  // b.tcont
  40d8ec:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d8f0:	add	x0, x0, #0x698
  40d8f4:	bl	404d30 <perror@plt>
  40d8f8:	mov	w0, #0xffffffff            	// #-1
  40d8fc:	b	40da60 <rtnl_open_byproto@@Base+0x260>
  40d900:	ldr	x0, [sp, #24]
  40d904:	ldr	w0, [x0]
  40d908:	add	x1, sp, #0x24
  40d90c:	mov	w4, #0x4                   	// #4
  40d910:	mov	x3, x1
  40d914:	mov	w2, #0xb                   	// #11
  40d918:	mov	w1, #0x10e                 	// #270
  40d91c:	bl	404ea0 <setsockopt@plt>
  40d920:	ldr	x0, [sp, #24]
  40d924:	add	x0, x0, #0x4
  40d928:	mov	x2, #0xc                   	// #12
  40d92c:	mov	w1, #0x0                   	// #0
  40d930:	bl	404ef0 <memset@plt>
  40d934:	ldr	x0, [sp, #24]
  40d938:	mov	w1, #0x10                  	// #16
  40d93c:	strh	w1, [x0, #4]
  40d940:	ldr	x0, [sp, #24]
  40d944:	ldr	w1, [sp, #20]
  40d948:	str	w1, [x0, #12]
  40d94c:	ldr	x0, [sp, #24]
  40d950:	ldr	w3, [x0]
  40d954:	ldr	x0, [sp, #24]
  40d958:	add	x0, x0, #0x4
  40d95c:	mov	w2, #0xc                   	// #12
  40d960:	mov	x1, x0
  40d964:	mov	w0, w3
  40d968:	bl	404da0 <bind@plt>
  40d96c:	cmp	w0, #0x0
  40d970:	b.ge	40d988 <rtnl_open_byproto@@Base+0x188>  // b.tcont
  40d974:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d978:	add	x0, x0, #0x6a8
  40d97c:	bl	404d30 <perror@plt>
  40d980:	mov	w0, #0xffffffff            	// #-1
  40d984:	b	40da60 <rtnl_open_byproto@@Base+0x260>
  40d988:	mov	w0, #0xc                   	// #12
  40d98c:	str	w0, [sp, #44]
  40d990:	ldr	x0, [sp, #24]
  40d994:	ldr	w3, [x0]
  40d998:	ldr	x0, [sp, #24]
  40d99c:	add	x0, x0, #0x4
  40d9a0:	mov	x1, x0
  40d9a4:	add	x0, sp, #0x2c
  40d9a8:	mov	x2, x0
  40d9ac:	mov	w0, w3
  40d9b0:	bl	405230 <getsockname@plt>
  40d9b4:	cmp	w0, #0x0
  40d9b8:	b.ge	40d9d0 <rtnl_open_byproto@@Base+0x1d0>  // b.tcont
  40d9bc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d9c0:	add	x0, x0, #0x6c8
  40d9c4:	bl	404d30 <perror@plt>
  40d9c8:	mov	w0, #0xffffffff            	// #-1
  40d9cc:	b	40da60 <rtnl_open_byproto@@Base+0x260>
  40d9d0:	ldr	w0, [sp, #44]
  40d9d4:	cmp	w0, #0xc
  40d9d8:	b.eq	40da08 <rtnl_open_byproto@@Base+0x208>  // b.none
  40d9dc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40d9e0:	ldr	x0, [x0, #3992]
  40d9e4:	ldr	x3, [x0]
  40d9e8:	ldr	w0, [sp, #44]
  40d9ec:	mov	w2, w0
  40d9f0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40d9f4:	add	x1, x0, #0x6e0
  40d9f8:	mov	x0, x3
  40d9fc:	bl	405240 <fprintf@plt>
  40da00:	mov	w0, #0xffffffff            	// #-1
  40da04:	b	40da60 <rtnl_open_byproto@@Base+0x260>
  40da08:	ldr	x0, [sp, #24]
  40da0c:	ldrh	w0, [x0, #4]
  40da10:	cmp	w0, #0x10
  40da14:	b.eq	40da48 <rtnl_open_byproto@@Base+0x248>  // b.none
  40da18:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40da1c:	ldr	x0, [x0, #3992]
  40da20:	ldr	x3, [x0]
  40da24:	ldr	x0, [sp, #24]
  40da28:	ldrh	w0, [x0, #4]
  40da2c:	mov	w2, w0
  40da30:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40da34:	add	x1, x0, #0x700
  40da38:	mov	x0, x3
  40da3c:	bl	405240 <fprintf@plt>
  40da40:	mov	w0, #0xffffffff            	// #-1
  40da44:	b	40da60 <rtnl_open_byproto@@Base+0x260>
  40da48:	mov	x0, #0x0                   	// #0
  40da4c:	bl	404e70 <time@plt>
  40da50:	mov	w1, w0
  40da54:	ldr	x0, [sp, #24]
  40da58:	str	w1, [x0, #28]
  40da5c:	mov	w0, #0x0                   	// #0
  40da60:	ldp	x29, x30, [sp], #48
  40da64:	ret

000000000040da68 <rtnl_open@@Base>:
  40da68:	stp	x29, x30, [sp, #-32]!
  40da6c:	mov	x29, sp
  40da70:	str	x0, [sp, #24]
  40da74:	str	w1, [sp, #20]
  40da78:	mov	w2, #0x0                   	// #0
  40da7c:	ldr	w1, [sp, #20]
  40da80:	ldr	x0, [sp, #24]
  40da84:	bl	40d800 <rtnl_open_byproto@@Base>
  40da88:	ldp	x29, x30, [sp], #32
  40da8c:	ret

000000000040da90 <rtnl_nexthopdump_req@@Base>:
  40da90:	stp	x29, x30, [sp, #-208]!
  40da94:	mov	x29, sp
  40da98:	str	x0, [sp, #40]
  40da9c:	str	w1, [sp, #36]
  40daa0:	str	x2, [sp, #24]
  40daa4:	stp	xzr, xzr, [sp, #48]
  40daa8:	stp	xzr, xzr, [sp, #64]
  40daac:	stp	xzr, xzr, [sp, #80]
  40dab0:	stp	xzr, xzr, [sp, #96]
  40dab4:	stp	xzr, xzr, [sp, #112]
  40dab8:	stp	xzr, xzr, [sp, #128]
  40dabc:	stp	xzr, xzr, [sp, #144]
  40dac0:	stp	xzr, xzr, [sp, #160]
  40dac4:	stp	xzr, xzr, [sp, #176]
  40dac8:	str	xzr, [sp, #192]
  40dacc:	mov	w0, #0x18                  	// #24
  40dad0:	str	w0, [sp, #48]
  40dad4:	mov	w0, #0x6a                  	// #106
  40dad8:	strh	w0, [sp, #52]
  40dadc:	mov	w0, #0x301                 	// #769
  40dae0:	strh	w0, [sp, #54]
  40dae4:	ldr	x0, [sp, #40]
  40dae8:	ldr	w0, [x0, #28]
  40daec:	add	w1, w0, #0x1
  40daf0:	ldr	x0, [sp, #40]
  40daf4:	str	w1, [x0, #28]
  40daf8:	ldr	x0, [sp, #40]
  40dafc:	ldr	w1, [x0, #28]
  40db00:	ldr	x0, [sp, #40]
  40db04:	str	w1, [x0, #32]
  40db08:	ldr	x0, [sp, #40]
  40db0c:	ldr	w0, [x0, #32]
  40db10:	str	w0, [sp, #56]
  40db14:	ldr	w0, [sp, #36]
  40db18:	and	w0, w0, #0xff
  40db1c:	strb	w0, [sp, #64]
  40db20:	ldr	x0, [sp, #24]
  40db24:	cmp	x0, #0x0
  40db28:	b.eq	40db54 <rtnl_nexthopdump_req@@Base+0xc4>  // b.none
  40db2c:	add	x0, sp, #0x30
  40db30:	ldr	x2, [sp, #24]
  40db34:	mov	w1, #0x98                  	// #152
  40db38:	blr	x2
  40db3c:	str	w0, [sp, #204]
  40db40:	ldr	w0, [sp, #204]
  40db44:	cmp	w0, #0x0
  40db48:	b.eq	40db54 <rtnl_nexthopdump_req@@Base+0xc4>  // b.none
  40db4c:	ldr	w0, [sp, #204]
  40db50:	b	40db6c <rtnl_nexthopdump_req@@Base+0xdc>
  40db54:	ldr	x0, [sp, #40]
  40db58:	ldr	w0, [x0]
  40db5c:	add	x1, sp, #0x30
  40db60:	mov	w3, #0x0                   	// #0
  40db64:	mov	x2, #0x98                  	// #152
  40db68:	bl	405090 <send@plt>
  40db6c:	ldp	x29, x30, [sp], #208
  40db70:	ret

000000000040db74 <rtnl_addrdump_req@@Base>:
  40db74:	stp	x29, x30, [sp, #-208]!
  40db78:	mov	x29, sp
  40db7c:	str	x0, [sp, #40]
  40db80:	str	w1, [sp, #36]
  40db84:	str	x2, [sp, #24]
  40db88:	stp	xzr, xzr, [sp, #48]
  40db8c:	stp	xzr, xzr, [sp, #64]
  40db90:	stp	xzr, xzr, [sp, #80]
  40db94:	stp	xzr, xzr, [sp, #96]
  40db98:	stp	xzr, xzr, [sp, #112]
  40db9c:	stp	xzr, xzr, [sp, #128]
  40dba0:	stp	xzr, xzr, [sp, #144]
  40dba4:	stp	xzr, xzr, [sp, #160]
  40dba8:	stp	xzr, xzr, [sp, #176]
  40dbac:	str	xzr, [sp, #192]
  40dbb0:	mov	w0, #0x18                  	// #24
  40dbb4:	str	w0, [sp, #48]
  40dbb8:	mov	w0, #0x16                  	// #22
  40dbbc:	strh	w0, [sp, #52]
  40dbc0:	mov	w0, #0x301                 	// #769
  40dbc4:	strh	w0, [sp, #54]
  40dbc8:	ldr	x0, [sp, #40]
  40dbcc:	ldr	w0, [x0, #28]
  40dbd0:	add	w1, w0, #0x1
  40dbd4:	ldr	x0, [sp, #40]
  40dbd8:	str	w1, [x0, #28]
  40dbdc:	ldr	x0, [sp, #40]
  40dbe0:	ldr	w1, [x0, #28]
  40dbe4:	ldr	x0, [sp, #40]
  40dbe8:	str	w1, [x0, #32]
  40dbec:	ldr	x0, [sp, #40]
  40dbf0:	ldr	w0, [x0, #32]
  40dbf4:	str	w0, [sp, #56]
  40dbf8:	ldr	w0, [sp, #36]
  40dbfc:	and	w0, w0, #0xff
  40dc00:	strb	w0, [sp, #64]
  40dc04:	ldr	x0, [sp, #24]
  40dc08:	cmp	x0, #0x0
  40dc0c:	b.eq	40dc38 <rtnl_addrdump_req@@Base+0xc4>  // b.none
  40dc10:	add	x0, sp, #0x30
  40dc14:	ldr	x2, [sp, #24]
  40dc18:	mov	w1, #0x98                  	// #152
  40dc1c:	blr	x2
  40dc20:	str	w0, [sp, #204]
  40dc24:	ldr	w0, [sp, #204]
  40dc28:	cmp	w0, #0x0
  40dc2c:	b.eq	40dc38 <rtnl_addrdump_req@@Base+0xc4>  // b.none
  40dc30:	ldr	w0, [sp, #204]
  40dc34:	b	40dc50 <rtnl_addrdump_req@@Base+0xdc>
  40dc38:	ldr	x0, [sp, #40]
  40dc3c:	ldr	w0, [x0]
  40dc40:	add	x1, sp, #0x30
  40dc44:	mov	w3, #0x0                   	// #0
  40dc48:	mov	x2, #0x98                  	// #152
  40dc4c:	bl	405090 <send@plt>
  40dc50:	ldp	x29, x30, [sp], #208
  40dc54:	ret

000000000040dc58 <rtnl_addrlbldump_req@@Base>:
  40dc58:	stp	x29, x30, [sp, #-64]!
  40dc5c:	mov	x29, sp
  40dc60:	str	x0, [sp, #24]
  40dc64:	str	w1, [sp, #20]
  40dc68:	stp	xzr, xzr, [sp, #32]
  40dc6c:	str	xzr, [sp, #48]
  40dc70:	str	wzr, [sp, #56]
  40dc74:	mov	w0, #0x1c                  	// #28
  40dc78:	str	w0, [sp, #32]
  40dc7c:	mov	w0, #0x4a                  	// #74
  40dc80:	strh	w0, [sp, #36]
  40dc84:	mov	w0, #0x301                 	// #769
  40dc88:	strh	w0, [sp, #38]
  40dc8c:	ldr	x0, [sp, #24]
  40dc90:	ldr	w0, [x0, #28]
  40dc94:	add	w1, w0, #0x1
  40dc98:	ldr	x0, [sp, #24]
  40dc9c:	str	w1, [x0, #28]
  40dca0:	ldr	x0, [sp, #24]
  40dca4:	ldr	w1, [x0, #28]
  40dca8:	ldr	x0, [sp, #24]
  40dcac:	str	w1, [x0, #32]
  40dcb0:	ldr	x0, [sp, #24]
  40dcb4:	ldr	w0, [x0, #32]
  40dcb8:	str	w0, [sp, #40]
  40dcbc:	ldr	w0, [sp, #20]
  40dcc0:	and	w0, w0, #0xff
  40dcc4:	strb	w0, [sp, #48]
  40dcc8:	ldr	x0, [sp, #24]
  40dccc:	ldr	w0, [x0]
  40dcd0:	add	x1, sp, #0x20
  40dcd4:	mov	w3, #0x0                   	// #0
  40dcd8:	mov	x2, #0x1c                  	// #28
  40dcdc:	bl	405090 <send@plt>
  40dce0:	ldp	x29, x30, [sp], #64
  40dce4:	ret

000000000040dce8 <rtnl_routedump_req@@Base>:
  40dce8:	stp	x29, x30, [sp, #-208]!
  40dcec:	mov	x29, sp
  40dcf0:	str	x0, [sp, #40]
  40dcf4:	str	w1, [sp, #36]
  40dcf8:	str	x2, [sp, #24]
  40dcfc:	stp	xzr, xzr, [sp, #48]
  40dd00:	stp	xzr, xzr, [sp, #64]
  40dd04:	stp	xzr, xzr, [sp, #80]
  40dd08:	stp	xzr, xzr, [sp, #96]
  40dd0c:	stp	xzr, xzr, [sp, #112]
  40dd10:	stp	xzr, xzr, [sp, #128]
  40dd14:	stp	xzr, xzr, [sp, #144]
  40dd18:	stp	xzr, xzr, [sp, #160]
  40dd1c:	stp	xzr, xzr, [sp, #176]
  40dd20:	str	xzr, [sp, #192]
  40dd24:	str	wzr, [sp, #200]
  40dd28:	mov	w0, #0x1c                  	// #28
  40dd2c:	str	w0, [sp, #48]
  40dd30:	mov	w0, #0x1a                  	// #26
  40dd34:	strh	w0, [sp, #52]
  40dd38:	mov	w0, #0x301                 	// #769
  40dd3c:	strh	w0, [sp, #54]
  40dd40:	ldr	x0, [sp, #40]
  40dd44:	ldr	w0, [x0, #28]
  40dd48:	add	w1, w0, #0x1
  40dd4c:	ldr	x0, [sp, #40]
  40dd50:	str	w1, [x0, #28]
  40dd54:	ldr	x0, [sp, #40]
  40dd58:	ldr	w1, [x0, #28]
  40dd5c:	ldr	x0, [sp, #40]
  40dd60:	str	w1, [x0, #32]
  40dd64:	ldr	x0, [sp, #40]
  40dd68:	ldr	w0, [x0, #32]
  40dd6c:	str	w0, [sp, #56]
  40dd70:	ldr	w0, [sp, #36]
  40dd74:	and	w0, w0, #0xff
  40dd78:	strb	w0, [sp, #64]
  40dd7c:	ldr	x0, [sp, #24]
  40dd80:	cmp	x0, #0x0
  40dd84:	b.eq	40ddb0 <rtnl_routedump_req@@Base+0xc8>  // b.none
  40dd88:	add	x0, sp, #0x30
  40dd8c:	ldr	x2, [sp, #24]
  40dd90:	mov	w1, #0x9c                  	// #156
  40dd94:	blr	x2
  40dd98:	str	w0, [sp, #204]
  40dd9c:	ldr	w0, [sp, #204]
  40dda0:	cmp	w0, #0x0
  40dda4:	b.eq	40ddb0 <rtnl_routedump_req@@Base+0xc8>  // b.none
  40dda8:	ldr	w0, [sp, #204]
  40ddac:	b	40ddc8 <rtnl_routedump_req@@Base+0xe0>
  40ddb0:	ldr	x0, [sp, #40]
  40ddb4:	ldr	w0, [x0]
  40ddb8:	add	x1, sp, #0x30
  40ddbc:	mov	w3, #0x0                   	// #0
  40ddc0:	mov	x2, #0x9c                  	// #156
  40ddc4:	bl	405090 <send@plt>
  40ddc8:	ldp	x29, x30, [sp], #208
  40ddcc:	ret

000000000040ddd0 <rtnl_ruledump_req@@Base>:
  40ddd0:	stp	x29, x30, [sp, #-64]!
  40ddd4:	mov	x29, sp
  40ddd8:	str	x0, [sp, #24]
  40dddc:	str	w1, [sp, #20]
  40dde0:	stp	xzr, xzr, [sp, #32]
  40dde4:	str	xzr, [sp, #48]
  40dde8:	str	wzr, [sp, #56]
  40ddec:	mov	w0, #0x1c                  	// #28
  40ddf0:	str	w0, [sp, #32]
  40ddf4:	mov	w0, #0x22                  	// #34
  40ddf8:	strh	w0, [sp, #36]
  40ddfc:	mov	w0, #0x301                 	// #769
  40de00:	strh	w0, [sp, #38]
  40de04:	ldr	x0, [sp, #24]
  40de08:	ldr	w0, [x0, #28]
  40de0c:	add	w1, w0, #0x1
  40de10:	ldr	x0, [sp, #24]
  40de14:	str	w1, [x0, #28]
  40de18:	ldr	x0, [sp, #24]
  40de1c:	ldr	w1, [x0, #28]
  40de20:	ldr	x0, [sp, #24]
  40de24:	str	w1, [x0, #32]
  40de28:	ldr	x0, [sp, #24]
  40de2c:	ldr	w0, [x0, #32]
  40de30:	str	w0, [sp, #40]
  40de34:	ldr	w0, [sp, #20]
  40de38:	and	w0, w0, #0xff
  40de3c:	strb	w0, [sp, #48]
  40de40:	ldr	x0, [sp, #24]
  40de44:	ldr	w0, [x0]
  40de48:	add	x1, sp, #0x20
  40de4c:	mov	w3, #0x0                   	// #0
  40de50:	mov	x2, #0x1c                  	// #28
  40de54:	bl	405090 <send@plt>
  40de58:	ldp	x29, x30, [sp], #64
  40de5c:	ret

000000000040de60 <rtnl_neighdump_req@@Base>:
  40de60:	stp	x29, x30, [sp, #-336]!
  40de64:	mov	x29, sp
  40de68:	str	x0, [sp, #40]
  40de6c:	str	w1, [sp, #36]
  40de70:	str	x2, [sp, #24]
  40de74:	add	x0, sp, #0x30
  40de78:	mov	x1, #0x11c                 	// #284
  40de7c:	mov	x2, x1
  40de80:	mov	w1, #0x0                   	// #0
  40de84:	bl	404ef0 <memset@plt>
  40de88:	mov	w0, #0x1c                  	// #28
  40de8c:	str	w0, [sp, #48]
  40de90:	mov	w0, #0x1e                  	// #30
  40de94:	strh	w0, [sp, #52]
  40de98:	mov	w0, #0x301                 	// #769
  40de9c:	strh	w0, [sp, #54]
  40dea0:	ldr	x0, [sp, #40]
  40dea4:	ldr	w0, [x0, #28]
  40dea8:	add	w1, w0, #0x1
  40deac:	ldr	x0, [sp, #40]
  40deb0:	str	w1, [x0, #28]
  40deb4:	ldr	x0, [sp, #40]
  40deb8:	ldr	w1, [x0, #28]
  40debc:	ldr	x0, [sp, #40]
  40dec0:	str	w1, [x0, #32]
  40dec4:	ldr	x0, [sp, #40]
  40dec8:	ldr	w0, [x0, #32]
  40decc:	str	w0, [sp, #56]
  40ded0:	ldr	w0, [sp, #36]
  40ded4:	and	w0, w0, #0xff
  40ded8:	strb	w0, [sp, #64]
  40dedc:	ldr	x0, [sp, #24]
  40dee0:	cmp	x0, #0x0
  40dee4:	b.eq	40df10 <rtnl_neighdump_req@@Base+0xb0>  // b.none
  40dee8:	add	x0, sp, #0x30
  40deec:	ldr	x2, [sp, #24]
  40def0:	mov	w1, #0x11c                 	// #284
  40def4:	blr	x2
  40def8:	str	w0, [sp, #332]
  40defc:	ldr	w0, [sp, #332]
  40df00:	cmp	w0, #0x0
  40df04:	b.eq	40df10 <rtnl_neighdump_req@@Base+0xb0>  // b.none
  40df08:	ldr	w0, [sp, #332]
  40df0c:	b	40df28 <rtnl_neighdump_req@@Base+0xc8>
  40df10:	ldr	x0, [sp, #40]
  40df14:	ldr	w0, [x0]
  40df18:	add	x1, sp, #0x30
  40df1c:	mov	w3, #0x0                   	// #0
  40df20:	mov	x2, #0x11c                 	// #284
  40df24:	bl	405090 <send@plt>
  40df28:	ldp	x29, x30, [sp], #336
  40df2c:	ret

000000000040df30 <rtnl_neightbldump_req@@Base>:
  40df30:	stp	x29, x30, [sp, #-64]!
  40df34:	mov	x29, sp
  40df38:	str	x0, [sp, #24]
  40df3c:	str	w1, [sp, #20]
  40df40:	stp	xzr, xzr, [sp, #40]
  40df44:	str	wzr, [sp, #56]
  40df48:	mov	w0, #0x14                  	// #20
  40df4c:	str	w0, [sp, #40]
  40df50:	mov	w0, #0x42                  	// #66
  40df54:	strh	w0, [sp, #44]
  40df58:	mov	w0, #0x301                 	// #769
  40df5c:	strh	w0, [sp, #46]
  40df60:	ldr	x0, [sp, #24]
  40df64:	ldr	w0, [x0, #28]
  40df68:	add	w1, w0, #0x1
  40df6c:	ldr	x0, [sp, #24]
  40df70:	str	w1, [x0, #28]
  40df74:	ldr	x0, [sp, #24]
  40df78:	ldr	w1, [x0, #28]
  40df7c:	ldr	x0, [sp, #24]
  40df80:	str	w1, [x0, #32]
  40df84:	ldr	x0, [sp, #24]
  40df88:	ldr	w0, [x0, #32]
  40df8c:	str	w0, [sp, #48]
  40df90:	ldr	w0, [sp, #20]
  40df94:	and	w0, w0, #0xff
  40df98:	strb	w0, [sp, #56]
  40df9c:	ldr	x0, [sp, #24]
  40dfa0:	ldr	w0, [x0]
  40dfa4:	add	x1, sp, #0x28
  40dfa8:	mov	w3, #0x0                   	// #0
  40dfac:	mov	x2, #0x14                  	// #20
  40dfb0:	bl	405090 <send@plt>
  40dfb4:	ldp	x29, x30, [sp], #64
  40dfb8:	ret

000000000040dfbc <rtnl_mdbdump_req@@Base>:
  40dfbc:	stp	x29, x30, [sp, #-64]!
  40dfc0:	mov	x29, sp
  40dfc4:	str	x0, [sp, #24]
  40dfc8:	str	w1, [sp, #20]
  40dfcc:	stp	xzr, xzr, [sp, #40]
  40dfd0:	str	xzr, [sp, #56]
  40dfd4:	mov	w0, #0x18                  	// #24
  40dfd8:	str	w0, [sp, #40]
  40dfdc:	mov	w0, #0x56                  	// #86
  40dfe0:	strh	w0, [sp, #44]
  40dfe4:	mov	w0, #0x301                 	// #769
  40dfe8:	strh	w0, [sp, #46]
  40dfec:	ldr	x0, [sp, #24]
  40dff0:	ldr	w0, [x0, #28]
  40dff4:	add	w1, w0, #0x1
  40dff8:	ldr	x0, [sp, #24]
  40dffc:	str	w1, [x0, #28]
  40e000:	ldr	x0, [sp, #24]
  40e004:	ldr	w1, [x0, #28]
  40e008:	ldr	x0, [sp, #24]
  40e00c:	str	w1, [x0, #32]
  40e010:	ldr	x0, [sp, #24]
  40e014:	ldr	w0, [x0, #32]
  40e018:	str	w0, [sp, #48]
  40e01c:	ldr	w0, [sp, #20]
  40e020:	and	w0, w0, #0xff
  40e024:	strb	w0, [sp, #56]
  40e028:	ldr	x0, [sp, #24]
  40e02c:	ldr	w0, [x0]
  40e030:	add	x1, sp, #0x28
  40e034:	mov	w3, #0x0                   	// #0
  40e038:	mov	x2, #0x18                  	// #24
  40e03c:	bl	405090 <send@plt>
  40e040:	ldp	x29, x30, [sp], #64
  40e044:	ret

000000000040e048 <rtnl_netconfdump_req@@Base>:
  40e048:	stp	x29, x30, [sp, #-64]!
  40e04c:	mov	x29, sp
  40e050:	str	x0, [sp, #24]
  40e054:	str	w1, [sp, #20]
  40e058:	stp	xzr, xzr, [sp, #40]
  40e05c:	str	wzr, [sp, #56]
  40e060:	mov	w0, #0x14                  	// #20
  40e064:	str	w0, [sp, #40]
  40e068:	mov	w0, #0x52                  	// #82
  40e06c:	strh	w0, [sp, #44]
  40e070:	mov	w0, #0x301                 	// #769
  40e074:	strh	w0, [sp, #46]
  40e078:	ldr	x0, [sp, #24]
  40e07c:	ldr	w0, [x0, #28]
  40e080:	add	w1, w0, #0x1
  40e084:	ldr	x0, [sp, #24]
  40e088:	str	w1, [x0, #28]
  40e08c:	ldr	x0, [sp, #24]
  40e090:	ldr	w1, [x0, #28]
  40e094:	ldr	x0, [sp, #24]
  40e098:	str	w1, [x0, #32]
  40e09c:	ldr	x0, [sp, #24]
  40e0a0:	ldr	w0, [x0, #32]
  40e0a4:	str	w0, [sp, #48]
  40e0a8:	ldr	w0, [sp, #20]
  40e0ac:	and	w0, w0, #0xff
  40e0b0:	strb	w0, [sp, #56]
  40e0b4:	ldr	x0, [sp, #24]
  40e0b8:	ldr	w0, [x0]
  40e0bc:	add	x1, sp, #0x28
  40e0c0:	mov	w3, #0x0                   	// #0
  40e0c4:	mov	x2, #0x14                  	// #20
  40e0c8:	bl	405090 <send@plt>
  40e0cc:	ldp	x29, x30, [sp], #64
  40e0d0:	ret

000000000040e0d4 <rtnl_nsiddump_req_filter_fn@@Base>:
  40e0d4:	sub	sp, sp, #0x450
  40e0d8:	stp	x29, x30, [sp]
  40e0dc:	mov	x29, sp
  40e0e0:	str	x0, [sp, #40]
  40e0e4:	str	w1, [sp, #36]
  40e0e8:	str	x2, [sp, #24]
  40e0ec:	add	x0, sp, #0x38
  40e0f0:	mov	x1, #0x414                 	// #1044
  40e0f4:	mov	x2, x1
  40e0f8:	mov	w1, #0x0                   	// #0
  40e0fc:	bl	404ef0 <memset@plt>
  40e100:	mov	w0, #0x14                  	// #20
  40e104:	str	w0, [sp, #56]
  40e108:	mov	w0, #0x5a                  	// #90
  40e10c:	strh	w0, [sp, #60]
  40e110:	mov	w0, #0x301                 	// #769
  40e114:	strh	w0, [sp, #62]
  40e118:	ldr	x0, [sp, #40]
  40e11c:	ldr	w0, [x0, #28]
  40e120:	add	w1, w0, #0x1
  40e124:	ldr	x0, [sp, #40]
  40e128:	str	w1, [x0, #28]
  40e12c:	ldr	x0, [sp, #40]
  40e130:	ldr	w1, [x0, #28]
  40e134:	ldr	x0, [sp, #40]
  40e138:	str	w1, [x0, #32]
  40e13c:	ldr	x0, [sp, #40]
  40e140:	ldr	w0, [x0, #32]
  40e144:	str	w0, [sp, #64]
  40e148:	ldr	w0, [sp, #36]
  40e14c:	and	w0, w0, #0xff
  40e150:	strb	w0, [sp, #72]
  40e154:	ldr	x0, [sp, #24]
  40e158:	cmp	x0, #0x0
  40e15c:	b.ne	40e168 <rtnl_nsiddump_req_filter_fn@@Base+0x94>  // b.any
  40e160:	mov	w0, #0xffffffea            	// #-22
  40e164:	b	40e1ac <rtnl_nsiddump_req_filter_fn@@Base+0xd8>
  40e168:	add	x0, sp, #0x38
  40e16c:	ldr	x2, [sp, #24]
  40e170:	mov	w1, #0x414                 	// #1044
  40e174:	blr	x2
  40e178:	str	w0, [sp, #1100]
  40e17c:	ldr	w0, [sp, #1100]
  40e180:	cmp	w0, #0x0
  40e184:	b.eq	40e190 <rtnl_nsiddump_req_filter_fn@@Base+0xbc>  // b.none
  40e188:	ldr	w0, [sp, #1100]
  40e18c:	b	40e1ac <rtnl_nsiddump_req_filter_fn@@Base+0xd8>
  40e190:	ldr	x0, [sp, #40]
  40e194:	ldr	w0, [x0]
  40e198:	ldr	w1, [sp, #56]
  40e19c:	mov	w2, w1
  40e1a0:	add	x1, sp, #0x38
  40e1a4:	mov	w3, #0x0                   	// #0
  40e1a8:	bl	405090 <send@plt>
  40e1ac:	ldp	x29, x30, [sp]
  40e1b0:	add	sp, sp, #0x450
  40e1b4:	ret
  40e1b8:	stp	x29, x30, [sp, #-64]!
  40e1bc:	mov	x29, sp
  40e1c0:	str	x0, [sp, #24]
  40e1c4:	str	w1, [sp, #20]
  40e1c8:	stp	xzr, xzr, [sp, #32]
  40e1cc:	stp	xzr, xzr, [sp, #48]
  40e1d0:	mov	w0, #0x20                  	// #32
  40e1d4:	str	w0, [sp, #32]
  40e1d8:	mov	w0, #0x12                  	// #18
  40e1dc:	strh	w0, [sp, #36]
  40e1e0:	mov	w0, #0x301                 	// #769
  40e1e4:	strh	w0, [sp, #38]
  40e1e8:	ldr	x0, [sp, #24]
  40e1ec:	ldr	w0, [x0, #28]
  40e1f0:	add	w1, w0, #0x1
  40e1f4:	ldr	x0, [sp, #24]
  40e1f8:	str	w1, [x0, #28]
  40e1fc:	ldr	x0, [sp, #24]
  40e200:	ldr	w1, [x0, #28]
  40e204:	ldr	x0, [sp, #24]
  40e208:	str	w1, [x0, #32]
  40e20c:	ldr	x0, [sp, #24]
  40e210:	ldr	w0, [x0, #32]
  40e214:	str	w0, [sp, #40]
  40e218:	ldr	w0, [sp, #20]
  40e21c:	and	w0, w0, #0xff
  40e220:	strb	w0, [sp, #48]
  40e224:	ldr	x0, [sp, #24]
  40e228:	ldr	w0, [x0]
  40e22c:	add	x1, sp, #0x20
  40e230:	mov	w3, #0x0                   	// #0
  40e234:	mov	x2, #0x20                  	// #32
  40e238:	bl	405090 <send@plt>
  40e23c:	ldp	x29, x30, [sp], #64
  40e240:	ret

000000000040e244 <rtnl_linkdump_req@@Base>:
  40e244:	stp	x29, x30, [sp, #-32]!
  40e248:	mov	x29, sp
  40e24c:	str	x0, [sp, #24]
  40e250:	str	w1, [sp, #20]
  40e254:	ldr	w0, [sp, #20]
  40e258:	cmp	w0, #0x0
  40e25c:	b.ne	40e274 <rtnl_linkdump_req@@Base+0x30>  // b.any
  40e260:	mov	w2, #0x1                   	// #1
  40e264:	ldr	w1, [sp, #20]
  40e268:	ldr	x0, [sp, #24]
  40e26c:	bl	40e288 <rtnl_linkdump_req_filter@@Base>
  40e270:	b	40e280 <rtnl_linkdump_req@@Base+0x3c>
  40e274:	ldr	w1, [sp, #20]
  40e278:	ldr	x0, [sp, #24]
  40e27c:	bl	40e1b8 <rtnl_nsiddump_req_filter_fn@@Base+0xe4>
  40e280:	ldp	x29, x30, [sp], #32
  40e284:	ret

000000000040e288 <rtnl_linkdump_req_filter@@Base>:
  40e288:	stp	x29, x30, [sp, #-80]!
  40e28c:	mov	x29, sp
  40e290:	str	x0, [sp, #24]
  40e294:	str	w1, [sp, #20]
  40e298:	str	w2, [sp, #16]
  40e29c:	ldr	w0, [sp, #20]
  40e2a0:	cmp	w0, #0x0
  40e2a4:	b.eq	40e2b4 <rtnl_linkdump_req_filter@@Base+0x2c>  // b.none
  40e2a8:	ldr	w0, [sp, #20]
  40e2ac:	cmp	w0, #0x7
  40e2b0:	b.ne	40e348 <rtnl_linkdump_req_filter@@Base+0xc0>  // b.any
  40e2b4:	stp	xzr, xzr, [sp, #40]
  40e2b8:	stp	xzr, xzr, [sp, #56]
  40e2bc:	str	xzr, [sp, #72]
  40e2c0:	mov	w0, #0x28                  	// #40
  40e2c4:	str	w0, [sp, #40]
  40e2c8:	mov	w0, #0x12                  	// #18
  40e2cc:	strh	w0, [sp, #44]
  40e2d0:	mov	w0, #0x301                 	// #769
  40e2d4:	strh	w0, [sp, #46]
  40e2d8:	ldr	x0, [sp, #24]
  40e2dc:	ldr	w0, [x0, #28]
  40e2e0:	add	w1, w0, #0x1
  40e2e4:	ldr	x0, [sp, #24]
  40e2e8:	str	w1, [x0, #28]
  40e2ec:	ldr	x0, [sp, #24]
  40e2f0:	ldr	w1, [x0, #28]
  40e2f4:	ldr	x0, [sp, #24]
  40e2f8:	str	w1, [x0, #32]
  40e2fc:	ldr	x0, [sp, #24]
  40e300:	ldr	w0, [x0, #32]
  40e304:	str	w0, [sp, #48]
  40e308:	ldr	w0, [sp, #20]
  40e30c:	and	w0, w0, #0xff
  40e310:	strb	w0, [sp, #56]
  40e314:	mov	w0, #0x8                   	// #8
  40e318:	strh	w0, [sp, #72]
  40e31c:	mov	w0, #0x1d                  	// #29
  40e320:	strh	w0, [sp, #74]
  40e324:	ldr	w0, [sp, #16]
  40e328:	str	w0, [sp, #76]
  40e32c:	ldr	x0, [sp, #24]
  40e330:	ldr	w0, [x0]
  40e334:	add	x1, sp, #0x28
  40e338:	mov	w3, #0x0                   	// #0
  40e33c:	mov	x2, #0x28                  	// #40
  40e340:	bl	405090 <send@plt>
  40e344:	b	40e354 <rtnl_linkdump_req_filter@@Base+0xcc>
  40e348:	ldr	w1, [sp, #20]
  40e34c:	ldr	x0, [sp, #24]
  40e350:	bl	40e1b8 <rtnl_nsiddump_req_filter_fn@@Base+0xe4>
  40e354:	ldp	x29, x30, [sp], #80
  40e358:	ret

000000000040e35c <rtnl_linkdump_req_filter_fn@@Base>:
  40e35c:	sub	sp, sp, #0x460
  40e360:	stp	x29, x30, [sp]
  40e364:	mov	x29, sp
  40e368:	str	x0, [sp, #40]
  40e36c:	str	w1, [sp, #36]
  40e370:	str	x2, [sp, #24]
  40e374:	ldr	w0, [sp, #36]
  40e378:	cmp	w0, #0x0
  40e37c:	b.eq	40e38c <rtnl_linkdump_req_filter_fn@@Base+0x30>  // b.none
  40e380:	ldr	w0, [sp, #36]
  40e384:	cmp	w0, #0x11
  40e388:	b.ne	40e450 <rtnl_linkdump_req_filter_fn@@Base+0xf4>  // b.any
  40e38c:	add	x0, sp, #0x38
  40e390:	mov	x1, #0x420                 	// #1056
  40e394:	mov	x2, x1
  40e398:	mov	w1, #0x0                   	// #0
  40e39c:	bl	404ef0 <memset@plt>
  40e3a0:	mov	w0, #0x20                  	// #32
  40e3a4:	str	w0, [sp, #56]
  40e3a8:	mov	w0, #0x12                  	// #18
  40e3ac:	strh	w0, [sp, #60]
  40e3b0:	mov	w0, #0x301                 	// #769
  40e3b4:	strh	w0, [sp, #62]
  40e3b8:	ldr	x0, [sp, #40]
  40e3bc:	ldr	w0, [x0, #28]
  40e3c0:	add	w1, w0, #0x1
  40e3c4:	ldr	x0, [sp, #40]
  40e3c8:	str	w1, [x0, #28]
  40e3cc:	ldr	x0, [sp, #40]
  40e3d0:	ldr	w1, [x0, #28]
  40e3d4:	ldr	x0, [sp, #40]
  40e3d8:	str	w1, [x0, #32]
  40e3dc:	ldr	x0, [sp, #40]
  40e3e0:	ldr	w0, [x0, #32]
  40e3e4:	str	w0, [sp, #64]
  40e3e8:	ldr	w0, [sp, #36]
  40e3ec:	and	w0, w0, #0xff
  40e3f0:	strb	w0, [sp, #72]
  40e3f4:	ldr	x0, [sp, #24]
  40e3f8:	cmp	x0, #0x0
  40e3fc:	b.ne	40e408 <rtnl_linkdump_req_filter_fn@@Base+0xac>  // b.any
  40e400:	mov	w0, #0xffffffea            	// #-22
  40e404:	b	40e45c <rtnl_linkdump_req_filter_fn@@Base+0x100>
  40e408:	add	x0, sp, #0x38
  40e40c:	ldr	x2, [sp, #24]
  40e410:	mov	w1, #0x420                 	// #1056
  40e414:	blr	x2
  40e418:	str	w0, [sp, #1116]
  40e41c:	ldr	w0, [sp, #1116]
  40e420:	cmp	w0, #0x0
  40e424:	b.eq	40e430 <rtnl_linkdump_req_filter_fn@@Base+0xd4>  // b.none
  40e428:	ldr	w0, [sp, #1116]
  40e42c:	b	40e45c <rtnl_linkdump_req_filter_fn@@Base+0x100>
  40e430:	ldr	x0, [sp, #40]
  40e434:	ldr	w0, [x0]
  40e438:	ldr	w1, [sp, #56]
  40e43c:	mov	w2, w1
  40e440:	add	x1, sp, #0x38
  40e444:	mov	w3, #0x0                   	// #0
  40e448:	bl	405090 <send@plt>
  40e44c:	b	40e45c <rtnl_linkdump_req_filter_fn@@Base+0x100>
  40e450:	ldr	w1, [sp, #36]
  40e454:	ldr	x0, [sp, #40]
  40e458:	bl	40e1b8 <rtnl_nsiddump_req_filter_fn@@Base+0xe4>
  40e45c:	ldp	x29, x30, [sp]
  40e460:	add	sp, sp, #0x460
  40e464:	ret

000000000040e468 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40e468:	stp	x29, x30, [sp, #-208]!
  40e46c:	mov	x29, sp
  40e470:	str	x0, [sp, #24]
  40e474:	str	x1, [sp, #16]
  40e478:	stp	xzr, xzr, [sp, #40]
  40e47c:	stp	xzr, xzr, [sp, #56]
  40e480:	stp	xzr, xzr, [sp, #72]
  40e484:	stp	xzr, xzr, [sp, #88]
  40e488:	stp	xzr, xzr, [sp, #104]
  40e48c:	stp	xzr, xzr, [sp, #120]
  40e490:	stp	xzr, xzr, [sp, #136]
  40e494:	stp	xzr, xzr, [sp, #152]
  40e498:	stp	xzr, xzr, [sp, #168]
  40e49c:	stp	xzr, xzr, [sp, #184]
  40e4a0:	mov	w0, #0x20                  	// #32
  40e4a4:	str	w0, [sp, #40]
  40e4a8:	mov	w0, #0x1e                  	// #30
  40e4ac:	strh	w0, [sp, #44]
  40e4b0:	mov	w0, #0x301                 	// #769
  40e4b4:	strh	w0, [sp, #46]
  40e4b8:	ldr	x0, [sp, #24]
  40e4bc:	ldr	w0, [x0, #28]
  40e4c0:	add	w1, w0, #0x1
  40e4c4:	ldr	x0, [sp, #24]
  40e4c8:	str	w1, [x0, #28]
  40e4cc:	ldr	x0, [sp, #24]
  40e4d0:	ldr	w1, [x0, #28]
  40e4d4:	ldr	x0, [sp, #24]
  40e4d8:	str	w1, [x0, #32]
  40e4dc:	ldr	x0, [sp, #24]
  40e4e0:	ldr	w0, [x0, #32]
  40e4e4:	str	w0, [sp, #48]
  40e4e8:	mov	w0, #0x7                   	// #7
  40e4ec:	strb	w0, [sp, #56]
  40e4f0:	add	x0, sp, #0x28
  40e4f4:	ldr	x2, [sp, #16]
  40e4f8:	mov	w1, #0xa0                  	// #160
  40e4fc:	blr	x2
  40e500:	str	w0, [sp, #204]
  40e504:	ldr	w0, [sp, #204]
  40e508:	cmp	w0, #0x0
  40e50c:	b.eq	40e518 <rtnl_fdb_linkdump_req_filter_fn@@Base+0xb0>  // b.none
  40e510:	ldr	w0, [sp, #204]
  40e514:	b	40e530 <rtnl_fdb_linkdump_req_filter_fn@@Base+0xc8>
  40e518:	ldr	x0, [sp, #24]
  40e51c:	ldr	w0, [x0]
  40e520:	add	x1, sp, #0x28
  40e524:	mov	w3, #0x0                   	// #0
  40e528:	mov	x2, #0xa0                  	// #160
  40e52c:	bl	405090 <send@plt>
  40e530:	ldp	x29, x30, [sp], #208
  40e534:	ret

000000000040e538 <rtnl_statsdump_req_filter@@Base>:
  40e538:	stp	x29, x30, [sp, #-64]!
  40e53c:	mov	x29, sp
  40e540:	str	x0, [sp, #24]
  40e544:	str	w1, [sp, #20]
  40e548:	str	w2, [sp, #16]
  40e54c:	add	x0, sp, #0x20
  40e550:	mov	x2, #0x1c                  	// #28
  40e554:	mov	w1, #0x0                   	// #0
  40e558:	bl	404ef0 <memset@plt>
  40e55c:	mov	w0, #0x1c                  	// #28
  40e560:	str	w0, [sp, #32]
  40e564:	mov	w0, #0x5e                  	// #94
  40e568:	strh	w0, [sp, #36]
  40e56c:	mov	w0, #0x301                 	// #769
  40e570:	strh	w0, [sp, #38]
  40e574:	str	wzr, [sp, #44]
  40e578:	ldr	x0, [sp, #24]
  40e57c:	ldr	w0, [x0, #28]
  40e580:	add	w1, w0, #0x1
  40e584:	ldr	x0, [sp, #24]
  40e588:	str	w1, [x0, #28]
  40e58c:	ldr	x0, [sp, #24]
  40e590:	ldr	w1, [x0, #28]
  40e594:	ldr	x0, [sp, #24]
  40e598:	str	w1, [x0, #32]
  40e59c:	ldr	x0, [sp, #24]
  40e5a0:	ldr	w0, [x0, #32]
  40e5a4:	str	w0, [sp, #40]
  40e5a8:	ldr	w0, [sp, #20]
  40e5ac:	and	w0, w0, #0xff
  40e5b0:	strb	w0, [sp, #48]
  40e5b4:	ldr	w0, [sp, #16]
  40e5b8:	str	w0, [sp, #56]
  40e5bc:	ldr	x0, [sp, #24]
  40e5c0:	ldr	w0, [x0]
  40e5c4:	add	x1, sp, #0x20
  40e5c8:	mov	w3, #0x0                   	// #0
  40e5cc:	mov	x2, #0x1c                  	// #28
  40e5d0:	bl	405090 <send@plt>
  40e5d4:	ldp	x29, x30, [sp], #64
  40e5d8:	ret

000000000040e5dc <rtnl_send@@Base>:
  40e5dc:	stp	x29, x30, [sp, #-48]!
  40e5e0:	mov	x29, sp
  40e5e4:	str	x0, [sp, #40]
  40e5e8:	str	x1, [sp, #32]
  40e5ec:	str	w2, [sp, #28]
  40e5f0:	ldr	x0, [sp, #40]
  40e5f4:	ldr	w0, [x0]
  40e5f8:	ldrsw	x1, [sp, #28]
  40e5fc:	mov	w3, #0x0                   	// #0
  40e600:	mov	x2, x1
  40e604:	ldr	x1, [sp, #32]
  40e608:	bl	405090 <send@plt>
  40e60c:	ldp	x29, x30, [sp], #48
  40e610:	ret

000000000040e614 <rtnl_send_check@@Base>:
  40e614:	sub	sp, sp, #0x460
  40e618:	stp	x29, x30, [sp]
  40e61c:	mov	x29, sp
  40e620:	str	x19, [sp, #16]
  40e624:	str	x0, [sp, #56]
  40e628:	str	x1, [sp, #48]
  40e62c:	str	w2, [sp, #44]
  40e630:	ldr	x0, [sp, #56]
  40e634:	ldr	w0, [x0]
  40e638:	ldrsw	x1, [sp, #44]
  40e63c:	mov	w3, #0x0                   	// #0
  40e640:	mov	x2, x1
  40e644:	ldr	x1, [sp, #48]
  40e648:	bl	405090 <send@plt>
  40e64c:	str	w0, [sp, #1108]
  40e650:	ldr	w0, [sp, #1108]
  40e654:	cmp	w0, #0x0
  40e658:	b.ge	40e664 <rtnl_send_check@@Base+0x50>  // b.tcont
  40e65c:	ldr	w0, [sp, #1108]
  40e660:	b	40e79c <rtnl_send_check@@Base+0x188>
  40e664:	ldr	x0, [sp, #56]
  40e668:	ldr	w0, [x0]
  40e66c:	add	x1, sp, #0x48
  40e670:	mov	w3, #0x42                  	// #66
  40e674:	mov	x2, #0x400                 	// #1024
  40e678:	bl	404fb0 <recv@plt>
  40e67c:	str	w0, [sp, #1108]
  40e680:	ldr	w0, [sp, #1108]
  40e684:	cmp	w0, #0x0
  40e688:	b.ge	40e6ac <rtnl_send_check@@Base+0x98>  // b.tcont
  40e68c:	bl	405200 <__errno_location@plt>
  40e690:	ldr	w0, [x0]
  40e694:	cmp	w0, #0xb
  40e698:	b.ne	40e6a4 <rtnl_send_check@@Base+0x90>  // b.any
  40e69c:	mov	w0, #0x0                   	// #0
  40e6a0:	b	40e79c <rtnl_send_check@@Base+0x188>
  40e6a4:	mov	w0, #0xffffffff            	// #-1
  40e6a8:	b	40e79c <rtnl_send_check@@Base+0x188>
  40e6ac:	add	x0, sp, #0x48
  40e6b0:	str	x0, [sp, #1112]
  40e6b4:	b	40e768 <rtnl_send_check@@Base+0x154>
  40e6b8:	ldr	x0, [sp, #1112]
  40e6bc:	ldrh	w0, [x0, #4]
  40e6c0:	cmp	w0, #0x2
  40e6c4:	b.ne	40e72c <rtnl_send_check@@Base+0x118>  // b.any
  40e6c8:	ldr	x0, [sp, #1112]
  40e6cc:	add	x0, x0, #0x10
  40e6d0:	str	x0, [sp, #1096]
  40e6d4:	ldr	x0, [sp, #1112]
  40e6d8:	ldr	w0, [x0]
  40e6dc:	cmp	w0, #0x23
  40e6e0:	b.hi	40e70c <rtnl_send_check@@Base+0xf8>  // b.pmore
  40e6e4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40e6e8:	ldr	x0, [x0, #3992]
  40e6ec:	ldr	x0, [x0]
  40e6f0:	mov	x3, x0
  40e6f4:	mov	x2, #0x10                  	// #16
  40e6f8:	mov	x1, #0x1                   	// #1
  40e6fc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40e700:	add	x0, x0, #0x720
  40e704:	bl	4050d0 <fwrite@plt>
  40e708:	b	40e724 <rtnl_send_check@@Base+0x110>
  40e70c:	ldr	x0, [sp, #1096]
  40e710:	ldr	w19, [x0]
  40e714:	bl	405200 <__errno_location@plt>
  40e718:	mov	x1, x0
  40e71c:	neg	w0, w19
  40e720:	str	w0, [x1]
  40e724:	mov	w0, #0xffffffff            	// #-1
  40e728:	b	40e79c <rtnl_send_check@@Base+0x188>
  40e72c:	ldr	w1, [sp, #1108]
  40e730:	ldr	x0, [sp, #1112]
  40e734:	ldr	w0, [x0]
  40e738:	add	w0, w0, #0x3
  40e73c:	and	w0, w0, #0xfffffffc
  40e740:	sub	w0, w1, w0
  40e744:	str	w0, [sp, #1108]
  40e748:	ldr	x0, [sp, #1112]
  40e74c:	ldr	w0, [x0]
  40e750:	add	w0, w0, #0x3
  40e754:	mov	w0, w0
  40e758:	and	x0, x0, #0xfffffffc
  40e75c:	ldr	x1, [sp, #1112]
  40e760:	add	x0, x1, x0
  40e764:	str	x0, [sp, #1112]
  40e768:	ldr	w0, [sp, #1108]
  40e76c:	cmp	w0, #0xf
  40e770:	b.le	40e798 <rtnl_send_check@@Base+0x184>
  40e774:	ldr	x0, [sp, #1112]
  40e778:	ldr	w0, [x0]
  40e77c:	cmp	w0, #0xf
  40e780:	b.ls	40e798 <rtnl_send_check@@Base+0x184>  // b.plast
  40e784:	ldr	x0, [sp, #1112]
  40e788:	ldr	w1, [x0]
  40e78c:	ldr	w0, [sp, #1108]
  40e790:	cmp	w1, w0
  40e794:	b.ls	40e6b8 <rtnl_send_check@@Base+0xa4>  // b.plast
  40e798:	mov	w0, #0x0                   	// #0
  40e79c:	ldr	x19, [sp, #16]
  40e7a0:	ldp	x29, x30, [sp]
  40e7a4:	add	sp, sp, #0x460
  40e7a8:	ret

000000000040e7ac <rtnl_dump_request@@Base>:
  40e7ac:	stp	x29, x30, [sp, #-176]!
  40e7b0:	mov	x29, sp
  40e7b4:	str	x0, [sp, #40]
  40e7b8:	str	w1, [sp, #36]
  40e7bc:	str	x2, [sp, #24]
  40e7c0:	str	w3, [sp, #32]
  40e7c4:	stp	xzr, xzr, [sp, #160]
  40e7c8:	ldr	w0, [sp, #32]
  40e7cc:	add	w0, w0, #0x10
  40e7d0:	str	w0, [sp, #160]
  40e7d4:	ldr	w0, [sp, #36]
  40e7d8:	and	w0, w0, #0xffff
  40e7dc:	strh	w0, [sp, #164]
  40e7e0:	mov	w0, #0x301                 	// #769
  40e7e4:	strh	w0, [sp, #166]
  40e7e8:	ldr	x0, [sp, #40]
  40e7ec:	ldr	w0, [x0, #28]
  40e7f0:	add	w1, w0, #0x1
  40e7f4:	ldr	x0, [sp, #40]
  40e7f8:	str	w1, [x0, #28]
  40e7fc:	ldr	x0, [sp, #40]
  40e800:	ldr	w1, [x0, #28]
  40e804:	ldr	x0, [sp, #40]
  40e808:	str	w1, [x0, #32]
  40e80c:	ldr	x0, [sp, #40]
  40e810:	ldr	w0, [x0, #32]
  40e814:	str	w0, [sp, #168]
  40e818:	str	xzr, [sp, #144]
  40e81c:	str	wzr, [sp, #152]
  40e820:	mov	w0, #0x10                  	// #16
  40e824:	strh	w0, [sp, #144]
  40e828:	add	x0, sp, #0xa0
  40e82c:	str	x0, [sp, #112]
  40e830:	mov	x0, #0x10                  	// #16
  40e834:	str	x0, [sp, #120]
  40e838:	ldr	x0, [sp, #24]
  40e83c:	str	x0, [sp, #128]
  40e840:	ldrsw	x0, [sp, #32]
  40e844:	str	x0, [sp, #136]
  40e848:	stp	xzr, xzr, [sp, #56]
  40e84c:	stp	xzr, xzr, [sp, #72]
  40e850:	stp	xzr, xzr, [sp, #88]
  40e854:	str	xzr, [sp, #104]
  40e858:	add	x0, sp, #0x90
  40e85c:	str	x0, [sp, #56]
  40e860:	mov	w0, #0xc                   	// #12
  40e864:	str	w0, [sp, #64]
  40e868:	add	x0, sp, #0x70
  40e86c:	str	x0, [sp, #72]
  40e870:	mov	x0, #0x2                   	// #2
  40e874:	str	x0, [sp, #80]
  40e878:	ldr	x0, [sp, #40]
  40e87c:	ldr	w0, [x0]
  40e880:	add	x1, sp, #0x38
  40e884:	mov	w2, #0x0                   	// #0
  40e888:	bl	404f10 <sendmsg@plt>
  40e88c:	ldp	x29, x30, [sp], #176
  40e890:	ret

000000000040e894 <rtnl_dump_request_n@@Base>:
  40e894:	stp	x29, x30, [sp, #-128]!
  40e898:	mov	x29, sp
  40e89c:	str	x0, [sp, #24]
  40e8a0:	str	x1, [sp, #16]
  40e8a4:	str	xzr, [sp, #112]
  40e8a8:	str	wzr, [sp, #120]
  40e8ac:	mov	w0, #0x10                  	// #16
  40e8b0:	strh	w0, [sp, #112]
  40e8b4:	ldr	x0, [sp, #16]
  40e8b8:	str	x0, [sp, #96]
  40e8bc:	ldr	x0, [sp, #16]
  40e8c0:	ldr	w0, [x0]
  40e8c4:	mov	w0, w0
  40e8c8:	str	x0, [sp, #104]
  40e8cc:	stp	xzr, xzr, [sp, #40]
  40e8d0:	stp	xzr, xzr, [sp, #56]
  40e8d4:	stp	xzr, xzr, [sp, #72]
  40e8d8:	str	xzr, [sp, #88]
  40e8dc:	add	x0, sp, #0x70
  40e8e0:	str	x0, [sp, #40]
  40e8e4:	mov	w0, #0xc                   	// #12
  40e8e8:	str	w0, [sp, #48]
  40e8ec:	add	x0, sp, #0x60
  40e8f0:	str	x0, [sp, #56]
  40e8f4:	mov	x0, #0x1                   	// #1
  40e8f8:	str	x0, [sp, #64]
  40e8fc:	ldr	x0, [sp, #16]
  40e900:	mov	w1, #0x301                 	// #769
  40e904:	strh	w1, [x0, #6]
  40e908:	ldr	x0, [sp, #16]
  40e90c:	str	wzr, [x0, #12]
  40e910:	ldr	x0, [sp, #24]
  40e914:	ldr	w0, [x0, #28]
  40e918:	add	w1, w0, #0x1
  40e91c:	ldr	x0, [sp, #24]
  40e920:	str	w1, [x0, #28]
  40e924:	ldr	x0, [sp, #24]
  40e928:	ldr	w1, [x0, #28]
  40e92c:	ldr	x0, [sp, #24]
  40e930:	str	w1, [x0, #32]
  40e934:	ldr	x0, [sp, #24]
  40e938:	ldr	w1, [x0, #32]
  40e93c:	ldr	x0, [sp, #16]
  40e940:	str	w1, [x0, #8]
  40e944:	ldr	x0, [sp, #24]
  40e948:	ldr	w0, [x0]
  40e94c:	add	x1, sp, #0x28
  40e950:	mov	w2, #0x0                   	// #0
  40e954:	bl	404f10 <sendmsg@plt>
  40e958:	ldp	x29, x30, [sp], #128
  40e95c:	ret
  40e960:	stp	x29, x30, [sp, #-48]!
  40e964:	mov	x29, sp
  40e968:	str	x0, [sp, #24]
  40e96c:	ldr	x0, [sp, #24]
  40e970:	ldr	w0, [x0, #16]
  40e974:	str	w0, [sp, #44]
  40e978:	ldr	x0, [sp, #24]
  40e97c:	ldr	w0, [x0]
  40e980:	cmp	w0, #0x13
  40e984:	b.hi	40e9b4 <rtnl_dump_request_n@@Base+0x120>  // b.pmore
  40e988:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40e98c:	ldr	x0, [x0, #3992]
  40e990:	ldr	x0, [x0]
  40e994:	mov	x3, x0
  40e998:	mov	x2, #0xf                   	// #15
  40e99c:	mov	x1, #0x1                   	// #1
  40e9a0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40e9a4:	add	x0, x0, #0x738
  40e9a8:	bl	4050d0 <fwrite@plt>
  40e9ac:	mov	w0, #0xffffffff            	// #-1
  40e9b0:	b	40ea70 <rtnl_dump_request_n@@Base+0x1dc>
  40e9b4:	ldr	w0, [sp, #44]
  40e9b8:	cmp	w0, #0x0
  40e9bc:	b.ge	40ea60 <rtnl_dump_request_n@@Base+0x1cc>  // b.tcont
  40e9c0:	ldr	w1, [sp, #44]
  40e9c4:	ldr	x0, [sp, #24]
  40e9c8:	bl	40d710 <nl_dump_ext_ack_done@@Base>
  40e9cc:	cmp	w0, #0x0
  40e9d0:	b.eq	40e9dc <rtnl_dump_request_n@@Base+0x148>  // b.none
  40e9d4:	ldr	w0, [sp, #44]
  40e9d8:	b	40ea70 <rtnl_dump_request_n@@Base+0x1dc>
  40e9dc:	bl	405200 <__errno_location@plt>
  40e9e0:	mov	x1, x0
  40e9e4:	ldr	w0, [sp, #44]
  40e9e8:	neg	w0, w0
  40e9ec:	str	w0, [x1]
  40e9f0:	bl	405200 <__errno_location@plt>
  40e9f4:	ldr	w0, [x0]
  40e9f8:	cmp	w0, #0x5f
  40e9fc:	b.eq	40ea1c <rtnl_dump_request_n@@Base+0x188>  // b.none
  40ea00:	cmp	w0, #0x5f
  40ea04:	b.gt	40ea4c <rtnl_dump_request_n@@Base+0x1b8>
  40ea08:	cmp	w0, #0x2
  40ea0c:	b.eq	40ea1c <rtnl_dump_request_n@@Base+0x188>  // b.none
  40ea10:	cmp	w0, #0x5a
  40ea14:	b.eq	40ea24 <rtnl_dump_request_n@@Base+0x190>  // b.none
  40ea18:	b	40ea4c <rtnl_dump_request_n@@Base+0x1b8>
  40ea1c:	mov	w0, #0xffffffff            	// #-1
  40ea20:	b	40ea70 <rtnl_dump_request_n@@Base+0x1dc>
  40ea24:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ea28:	ldr	x0, [x0, #3992]
  40ea2c:	ldr	x0, [x0]
  40ea30:	mov	x3, x0
  40ea34:	mov	x2, #0x24                  	// #36
  40ea38:	mov	x1, #0x1                   	// #1
  40ea3c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ea40:	add	x0, x0, #0x748
  40ea44:	bl	4050d0 <fwrite@plt>
  40ea48:	b	40ea58 <rtnl_dump_request_n@@Base+0x1c4>
  40ea4c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ea50:	add	x0, x0, #0x770
  40ea54:	bl	404d30 <perror@plt>
  40ea58:	ldr	w0, [sp, #44]
  40ea5c:	b	40ea70 <rtnl_dump_request_n@@Base+0x1dc>
  40ea60:	mov	x1, #0x0                   	// #0
  40ea64:	ldr	x0, [sp, #24]
  40ea68:	bl	40d6f8 <nl_dump_ext_ack@@Base>
  40ea6c:	mov	w0, #0x0                   	// #0
  40ea70:	ldp	x29, x30, [sp], #48
  40ea74:	ret
  40ea78:	stp	x29, x30, [sp, #-64]!
  40ea7c:	mov	x29, sp
  40ea80:	str	x19, [sp, #16]
  40ea84:	str	x0, [sp, #40]
  40ea88:	str	x1, [sp, #32]
  40ea8c:	ldr	x0, [sp, #32]
  40ea90:	ldr	w0, [x0]
  40ea94:	cmp	w0, #0x23
  40ea98:	b.hi	40eac4 <rtnl_dump_request_n@@Base+0x230>  // b.pmore
  40ea9c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40eaa0:	ldr	x0, [x0, #3992]
  40eaa4:	ldr	x0, [x0]
  40eaa8:	mov	x3, x0
  40eaac:	mov	x2, #0x10                  	// #16
  40eab0:	mov	x1, #0x1                   	// #1
  40eab4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40eab8:	add	x0, x0, #0x720
  40eabc:	bl	4050d0 <fwrite@plt>
  40eac0:	b	40eb40 <rtnl_dump_request_n@@Base+0x2ac>
  40eac4:	ldr	x0, [sp, #32]
  40eac8:	add	x0, x0, #0x10
  40eacc:	str	x0, [sp, #56]
  40ead0:	ldr	x0, [sp, #56]
  40ead4:	ldr	w19, [x0]
  40ead8:	bl	405200 <__errno_location@plt>
  40eadc:	mov	x1, x0
  40eae0:	neg	w0, w19
  40eae4:	str	w0, [x1]
  40eae8:	ldr	x0, [sp, #40]
  40eaec:	ldr	w0, [x0, #36]
  40eaf0:	cmp	w0, #0x4
  40eaf4:	b.ne	40eb18 <rtnl_dump_request_n@@Base+0x284>  // b.any
  40eaf8:	bl	405200 <__errno_location@plt>
  40eafc:	ldr	w0, [x0]
  40eb00:	cmp	w0, #0x2
  40eb04:	b.eq	40eb3c <rtnl_dump_request_n@@Base+0x2a8>  // b.none
  40eb08:	bl	405200 <__errno_location@plt>
  40eb0c:	ldr	w0, [x0]
  40eb10:	cmp	w0, #0x5f
  40eb14:	b.eq	40eb3c <rtnl_dump_request_n@@Base+0x2a8>  // b.none
  40eb18:	ldr	x0, [sp, #40]
  40eb1c:	ldr	w0, [x0, #48]
  40eb20:	and	w0, w0, #0x2
  40eb24:	cmp	w0, #0x0
  40eb28:	b.ne	40eb40 <rtnl_dump_request_n@@Base+0x2ac>  // b.any
  40eb2c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40eb30:	add	x0, x0, #0x770
  40eb34:	bl	404d30 <perror@plt>
  40eb38:	b	40eb40 <rtnl_dump_request_n@@Base+0x2ac>
  40eb3c:	nop
  40eb40:	ldr	x19, [sp, #16]
  40eb44:	ldp	x29, x30, [sp], #64
  40eb48:	ret
  40eb4c:	stp	x29, x30, [sp, #-64]!
  40eb50:	mov	x29, sp
  40eb54:	stp	x19, x20, [sp, #16]
  40eb58:	str	w0, [sp, #44]
  40eb5c:	str	x1, [sp, #32]
  40eb60:	str	w2, [sp, #40]
  40eb64:	ldr	w2, [sp, #40]
  40eb68:	ldr	x1, [sp, #32]
  40eb6c:	ldr	w0, [sp, #44]
  40eb70:	bl	404cf0 <recvmsg@plt>
  40eb74:	str	w0, [sp, #60]
  40eb78:	ldr	w0, [sp, #60]
  40eb7c:	cmp	w0, #0x0
  40eb80:	b.ge	40eba4 <rtnl_dump_request_n@@Base+0x310>  // b.tcont
  40eb84:	bl	405200 <__errno_location@plt>
  40eb88:	ldr	w0, [x0]
  40eb8c:	cmp	w0, #0x4
  40eb90:	b.eq	40eb64 <rtnl_dump_request_n@@Base+0x2d0>  // b.none
  40eb94:	bl	405200 <__errno_location@plt>
  40eb98:	ldr	w0, [x0]
  40eb9c:	cmp	w0, #0xb
  40eba0:	b.eq	40eb64 <rtnl_dump_request_n@@Base+0x2d0>  // b.none
  40eba4:	ldr	w0, [sp, #60]
  40eba8:	cmp	w0, #0x0
  40ebac:	b.ge	40ebfc <rtnl_dump_request_n@@Base+0x368>  // b.tcont
  40ebb0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ebb4:	ldr	x0, [x0, #3992]
  40ebb8:	ldr	x19, [x0]
  40ebbc:	bl	405200 <__errno_location@plt>
  40ebc0:	ldr	w0, [x0]
  40ebc4:	bl	404f80 <strerror@plt>
  40ebc8:	mov	x20, x0
  40ebcc:	bl	405200 <__errno_location@plt>
  40ebd0:	ldr	w0, [x0]
  40ebd4:	mov	w3, w0
  40ebd8:	mov	x2, x20
  40ebdc:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ebe0:	add	x1, x0, #0x788
  40ebe4:	mov	x0, x19
  40ebe8:	bl	405240 <fprintf@plt>
  40ebec:	bl	405200 <__errno_location@plt>
  40ebf0:	ldr	w0, [x0]
  40ebf4:	neg	w0, w0
  40ebf8:	b	40ec38 <rtnl_dump_request_n@@Base+0x3a4>
  40ebfc:	ldr	w0, [sp, #60]
  40ec00:	cmp	w0, #0x0
  40ec04:	b.ne	40ec34 <rtnl_dump_request_n@@Base+0x3a0>  // b.any
  40ec08:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ec0c:	ldr	x0, [x0, #3992]
  40ec10:	ldr	x0, [x0]
  40ec14:	mov	x3, x0
  40ec18:	mov	x2, #0xf                   	// #15
  40ec1c:	mov	x1, #0x1                   	// #1
  40ec20:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ec24:	add	x0, x0, #0x7a8
  40ec28:	bl	4050d0 <fwrite@plt>
  40ec2c:	mov	w0, #0xffffffc3            	// #-61
  40ec30:	b	40ec38 <rtnl_dump_request_n@@Base+0x3a4>
  40ec34:	ldr	w0, [sp, #60]
  40ec38:	ldp	x19, x20, [sp, #16]
  40ec3c:	ldp	x29, x30, [sp], #64
  40ec40:	ret
  40ec44:	stp	x29, x30, [sp, #-80]!
  40ec48:	mov	x29, sp
  40ec4c:	str	w0, [sp, #44]
  40ec50:	str	x1, [sp, #32]
  40ec54:	str	x2, [sp, #24]
  40ec58:	ldr	x0, [sp, #32]
  40ec5c:	ldr	x0, [x0, #16]
  40ec60:	str	x0, [sp, #64]
  40ec64:	ldr	x0, [sp, #64]
  40ec68:	str	xzr, [x0]
  40ec6c:	ldr	x0, [sp, #64]
  40ec70:	str	xzr, [x0, #8]
  40ec74:	mov	w2, #0x22                  	// #34
  40ec78:	ldr	x1, [sp, #32]
  40ec7c:	ldr	w0, [sp, #44]
  40ec80:	bl	40eb4c <rtnl_dump_request_n@@Base+0x2b8>
  40ec84:	str	w0, [sp, #76]
  40ec88:	ldr	w0, [sp, #76]
  40ec8c:	cmp	w0, #0x0
  40ec90:	b.ge	40ec9c <rtnl_dump_request_n@@Base+0x408>  // b.tcont
  40ec94:	ldr	w0, [sp, #76]
  40ec98:	b	40ed68 <rtnl_dump_request_n@@Base+0x4d4>
  40ec9c:	ldr	w1, [sp, #76]
  40eca0:	mov	w0, #0x7fff                	// #32767
  40eca4:	cmp	w1, w0
  40eca8:	b.gt	40ecb4 <rtnl_dump_request_n@@Base+0x420>
  40ecac:	mov	w0, #0x8000                	// #32768
  40ecb0:	str	w0, [sp, #76]
  40ecb4:	ldrsw	x0, [sp, #76]
  40ecb8:	bl	404e90 <malloc@plt>
  40ecbc:	str	x0, [sp, #56]
  40ecc0:	ldr	x0, [sp, #56]
  40ecc4:	cmp	x0, #0x0
  40ecc8:	b.ne	40ecf8 <rtnl_dump_request_n@@Base+0x464>  // b.any
  40eccc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40ecd0:	ldr	x0, [x0, #3992]
  40ecd4:	ldr	x0, [x0]
  40ecd8:	mov	x3, x0
  40ecdc:	mov	x2, #0x20                  	// #32
  40ece0:	mov	x1, #0x1                   	// #1
  40ece4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40ece8:	add	x0, x0, #0x7b8
  40ecec:	bl	4050d0 <fwrite@plt>
  40ecf0:	mov	w0, #0xfffffff4            	// #-12
  40ecf4:	b	40ed68 <rtnl_dump_request_n@@Base+0x4d4>
  40ecf8:	ldr	x0, [sp, #64]
  40ecfc:	ldr	x1, [sp, #56]
  40ed00:	str	x1, [x0]
  40ed04:	ldrsw	x1, [sp, #76]
  40ed08:	ldr	x0, [sp, #64]
  40ed0c:	str	x1, [x0, #8]
  40ed10:	mov	w2, #0x0                   	// #0
  40ed14:	ldr	x1, [sp, #32]
  40ed18:	ldr	w0, [sp, #44]
  40ed1c:	bl	40eb4c <rtnl_dump_request_n@@Base+0x2b8>
  40ed20:	str	w0, [sp, #76]
  40ed24:	ldr	w0, [sp, #76]
  40ed28:	cmp	w0, #0x0
  40ed2c:	b.ge	40ed40 <rtnl_dump_request_n@@Base+0x4ac>  // b.tcont
  40ed30:	ldr	x0, [sp, #56]
  40ed34:	bl	405070 <free@plt>
  40ed38:	ldr	w0, [sp, #76]
  40ed3c:	b	40ed68 <rtnl_dump_request_n@@Base+0x4d4>
  40ed40:	ldr	x0, [sp, #24]
  40ed44:	cmp	x0, #0x0
  40ed48:	b.eq	40ed5c <rtnl_dump_request_n@@Base+0x4c8>  // b.none
  40ed4c:	ldr	x0, [sp, #24]
  40ed50:	ldr	x1, [sp, #56]
  40ed54:	str	x1, [x0]
  40ed58:	b	40ed64 <rtnl_dump_request_n@@Base+0x4d0>
  40ed5c:	ldr	x0, [sp, #56]
  40ed60:	bl	405070 <free@plt>
  40ed64:	ldr	w0, [sp, #76]
  40ed68:	ldp	x29, x30, [sp], #80
  40ed6c:	ret
  40ed70:	stp	x29, x30, [sp, #-176]!
  40ed74:	mov	x29, sp
  40ed78:	str	x0, [sp, #24]
  40ed7c:	str	x1, [sp, #16]
  40ed80:	stp	xzr, xzr, [sp, #48]
  40ed84:	stp	xzr, xzr, [sp, #64]
  40ed88:	stp	xzr, xzr, [sp, #80]
  40ed8c:	str	xzr, [sp, #96]
  40ed90:	add	x0, sp, #0x78
  40ed94:	str	x0, [sp, #48]
  40ed98:	mov	w0, #0xc                   	// #12
  40ed9c:	str	w0, [sp, #56]
  40eda0:	add	x0, sp, #0x68
  40eda4:	str	x0, [sp, #64]
  40eda8:	mov	x0, #0x1                   	// #1
  40edac:	str	x0, [sp, #72]
  40edb0:	str	wzr, [sp, #172]
  40edb4:	str	wzr, [sp, #156]
  40edb8:	str	wzr, [sp, #152]
  40edbc:	ldr	x0, [sp, #24]
  40edc0:	ldr	w0, [x0]
  40edc4:	add	x2, sp, #0x28
  40edc8:	add	x1, sp, #0x30
  40edcc:	bl	40ec44 <rtnl_dump_request_n@@Base+0x3b0>
  40edd0:	str	w0, [sp, #140]
  40edd4:	ldr	w0, [sp, #140]
  40edd8:	cmp	w0, #0x0
  40eddc:	b.ge	40ede8 <rtnl_dump_request_n@@Base+0x554>  // b.tcont
  40ede0:	ldr	w0, [sp, #140]
  40ede4:	b	40f0e4 <rtnl_dump_request_n@@Base+0x850>
  40ede8:	ldr	x0, [sp, #24]
  40edec:	ldr	x0, [x0, #40]
  40edf0:	cmp	x0, #0x0
  40edf4:	b.eq	40ee28 <rtnl_dump_request_n@@Base+0x594>  // b.none
  40edf8:	ldr	x4, [sp, #40]
  40edfc:	ldr	w0, [sp, #140]
  40ee00:	add	w0, w0, #0x3
  40ee04:	mov	w0, w0
  40ee08:	and	x1, x0, #0xfffffffc
  40ee0c:	ldr	x0, [sp, #24]
  40ee10:	ldr	x0, [x0, #40]
  40ee14:	mov	x3, x0
  40ee18:	mov	x2, x1
  40ee1c:	mov	x1, #0x1                   	// #1
  40ee20:	mov	x0, x4
  40ee24:	bl	4050d0 <fwrite@plt>
  40ee28:	ldr	x0, [sp, #16]
  40ee2c:	str	x0, [sp, #160]
  40ee30:	b	40f018 <rtnl_dump_request_n@@Base+0x784>
  40ee34:	ldr	x0, [sp, #40]
  40ee38:	str	x0, [sp, #144]
  40ee3c:	ldr	w0, [sp, #140]
  40ee40:	str	w0, [sp, #152]
  40ee44:	b	40efdc <rtnl_dump_request_n@@Base+0x748>
  40ee48:	str	wzr, [sp, #136]
  40ee4c:	ldr	x0, [sp, #144]
  40ee50:	ldrh	w0, [x0, #6]
  40ee54:	sxth	w1, w0
  40ee58:	ldr	x0, [sp, #160]
  40ee5c:	ldrh	w0, [x0, #16]
  40ee60:	sxth	w0, w0
  40ee64:	mvn	w0, w0
  40ee68:	sxth	w0, w0
  40ee6c:	and	w0, w1, w0
  40ee70:	sxth	w0, w0
  40ee74:	and	w1, w0, #0xffff
  40ee78:	ldr	x0, [sp, #144]
  40ee7c:	strh	w1, [x0, #6]
  40ee80:	ldr	w0, [sp, #124]
  40ee84:	cmp	w0, #0x0
  40ee88:	b.ne	40ef94 <rtnl_dump_request_n@@Base+0x700>  // b.any
  40ee8c:	ldr	x0, [sp, #144]
  40ee90:	ldr	w1, [x0, #12]
  40ee94:	ldr	x0, [sp, #24]
  40ee98:	ldr	w0, [x0, #8]
  40ee9c:	cmp	w1, w0
  40eea0:	b.ne	40ef94 <rtnl_dump_request_n@@Base+0x700>  // b.any
  40eea4:	ldr	x0, [sp, #144]
  40eea8:	ldr	w1, [x0, #8]
  40eeac:	ldr	x0, [sp, #24]
  40eeb0:	ldr	w0, [x0, #32]
  40eeb4:	cmp	w1, w0
  40eeb8:	b.ne	40ef94 <rtnl_dump_request_n@@Base+0x700>  // b.any
  40eebc:	ldr	x0, [sp, #144]
  40eec0:	ldrh	w0, [x0, #6]
  40eec4:	and	w0, w0, #0x10
  40eec8:	cmp	w0, #0x0
  40eecc:	b.eq	40eed8 <rtnl_dump_request_n@@Base+0x644>  // b.none
  40eed0:	mov	w0, #0x1                   	// #1
  40eed4:	str	w0, [sp, #172]
  40eed8:	ldr	x0, [sp, #144]
  40eedc:	ldrh	w0, [x0, #4]
  40eee0:	cmp	w0, #0x3
  40eee4:	b.ne	40ef1c <rtnl_dump_request_n@@Base+0x688>  // b.any
  40eee8:	ldr	x0, [sp, #144]
  40eeec:	bl	40e960 <rtnl_dump_request_n@@Base+0xcc>
  40eef0:	str	w0, [sp, #136]
  40eef4:	ldr	w0, [sp, #136]
  40eef8:	cmp	w0, #0x0
  40eefc:	b.ge	40ef10 <rtnl_dump_request_n@@Base+0x67c>  // b.tcont
  40ef00:	ldr	x0, [sp, #40]
  40ef04:	bl	405070 <free@plt>
  40ef08:	mov	w0, #0xffffffff            	// #-1
  40ef0c:	b	40f0e4 <rtnl_dump_request_n@@Base+0x850>
  40ef10:	mov	w0, #0x1                   	// #1
  40ef14:	str	w0, [sp, #156]
  40ef18:	b	40f00c <rtnl_dump_request_n@@Base+0x778>
  40ef1c:	ldr	x0, [sp, #144]
  40ef20:	ldrh	w0, [x0, #4]
  40ef24:	cmp	w0, #0x2
  40ef28:	b.ne	40ef48 <rtnl_dump_request_n@@Base+0x6b4>  // b.any
  40ef2c:	ldr	x1, [sp, #144]
  40ef30:	ldr	x0, [sp, #24]
  40ef34:	bl	40ea78 <rtnl_dump_request_n@@Base+0x1e4>
  40ef38:	ldr	x0, [sp, #40]
  40ef3c:	bl	405070 <free@plt>
  40ef40:	mov	w0, #0xffffffff            	// #-1
  40ef44:	b	40f0e4 <rtnl_dump_request_n@@Base+0x850>
  40ef48:	ldr	x0, [sp, #24]
  40ef4c:	ldr	x0, [x0, #40]
  40ef50:	cmp	x0, #0x0
  40ef54:	b.ne	40ef9c <rtnl_dump_request_n@@Base+0x708>  // b.any
  40ef58:	ldr	x0, [sp, #160]
  40ef5c:	ldr	x2, [x0]
  40ef60:	ldr	x0, [sp, #160]
  40ef64:	ldr	x0, [x0, #8]
  40ef68:	mov	x1, x0
  40ef6c:	ldr	x0, [sp, #144]
  40ef70:	blr	x2
  40ef74:	str	w0, [sp, #136]
  40ef78:	ldr	w0, [sp, #136]
  40ef7c:	cmp	w0, #0x0
  40ef80:	b.ge	40ef9c <rtnl_dump_request_n@@Base+0x708>  // b.tcont
  40ef84:	ldr	x0, [sp, #40]
  40ef88:	bl	405070 <free@plt>
  40ef8c:	ldr	w0, [sp, #136]
  40ef90:	b	40f0e4 <rtnl_dump_request_n@@Base+0x850>
  40ef94:	nop
  40ef98:	b	40efa0 <rtnl_dump_request_n@@Base+0x70c>
  40ef9c:	nop
  40efa0:	ldr	w1, [sp, #152]
  40efa4:	ldr	x0, [sp, #144]
  40efa8:	ldr	w0, [x0]
  40efac:	add	w0, w0, #0x3
  40efb0:	and	w0, w0, #0xfffffffc
  40efb4:	sub	w0, w1, w0
  40efb8:	str	w0, [sp, #152]
  40efbc:	ldr	x0, [sp, #144]
  40efc0:	ldr	w0, [x0]
  40efc4:	add	w0, w0, #0x3
  40efc8:	mov	w0, w0
  40efcc:	and	x0, x0, #0xfffffffc
  40efd0:	ldr	x1, [sp, #144]
  40efd4:	add	x0, x1, x0
  40efd8:	str	x0, [sp, #144]
  40efdc:	ldr	w0, [sp, #152]
  40efe0:	cmp	w0, #0xf
  40efe4:	b.le	40f00c <rtnl_dump_request_n@@Base+0x778>
  40efe8:	ldr	x0, [sp, #144]
  40efec:	ldr	w0, [x0]
  40eff0:	cmp	w0, #0xf
  40eff4:	b.ls	40f00c <rtnl_dump_request_n@@Base+0x778>  // b.plast
  40eff8:	ldr	x0, [sp, #144]
  40effc:	ldr	w1, [x0]
  40f000:	ldr	w0, [sp, #152]
  40f004:	cmp	w1, w0
  40f008:	b.ls	40ee48 <rtnl_dump_request_n@@Base+0x5b4>  // b.plast
  40f00c:	ldr	x0, [sp, #160]
  40f010:	add	x0, x0, #0x18
  40f014:	str	x0, [sp, #160]
  40f018:	ldr	x0, [sp, #160]
  40f01c:	ldr	x0, [x0]
  40f020:	cmp	x0, #0x0
  40f024:	b.ne	40ee34 <rtnl_dump_request_n@@Base+0x5a0>  // b.any
  40f028:	ldr	x0, [sp, #40]
  40f02c:	bl	405070 <free@plt>
  40f030:	ldr	w0, [sp, #156]
  40f034:	cmp	w0, #0x0
  40f038:	b.eq	40f074 <rtnl_dump_request_n@@Base+0x7e0>  // b.none
  40f03c:	ldr	w0, [sp, #172]
  40f040:	cmp	w0, #0x0
  40f044:	b.eq	40f06c <rtnl_dump_request_n@@Base+0x7d8>  // b.none
  40f048:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f04c:	ldr	x0, [x0, #3992]
  40f050:	ldr	x0, [x0]
  40f054:	mov	x3, x0
  40f058:	mov	x2, #0x2e                  	// #46
  40f05c:	mov	x1, #0x1                   	// #1
  40f060:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f064:	add	x0, x0, #0x7e0
  40f068:	bl	4050d0 <fwrite@plt>
  40f06c:	mov	w0, #0x0                   	// #0
  40f070:	b	40f0e4 <rtnl_dump_request_n@@Base+0x850>
  40f074:	ldr	w0, [sp, #96]
  40f078:	and	w0, w0, #0x20
  40f07c:	cmp	w0, #0x0
  40f080:	b.eq	40f0ac <rtnl_dump_request_n@@Base+0x818>  // b.none
  40f084:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f088:	ldr	x0, [x0, #3992]
  40f08c:	ldr	x0, [x0]
  40f090:	mov	x3, x0
  40f094:	mov	x2, #0x12                  	// #18
  40f098:	mov	x1, #0x1                   	// #1
  40f09c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f0a0:	add	x0, x0, #0x810
  40f0a4:	bl	4050d0 <fwrite@plt>
  40f0a8:	b	40f0e0 <rtnl_dump_request_n@@Base+0x84c>
  40f0ac:	ldr	w0, [sp, #152]
  40f0b0:	cmp	w0, #0x0
  40f0b4:	b.eq	40edb4 <rtnl_dump_request_n@@Base+0x520>  // b.none
  40f0b8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f0bc:	ldr	x0, [x0, #3992]
  40f0c0:	ldr	x3, [x0]
  40f0c4:	ldr	w2, [sp, #152]
  40f0c8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f0cc:	add	x1, x0, #0x828
  40f0d0:	mov	x0, x3
  40f0d4:	bl	405240 <fprintf@plt>
  40f0d8:	mov	w0, #0x1                   	// #1
  40f0dc:	bl	404d20 <exit@plt>
  40f0e0:	b	40edb4 <rtnl_dump_request_n@@Base+0x520>
  40f0e4:	ldp	x29, x30, [sp], #176
  40f0e8:	ret

000000000040f0ec <rtnl_dump_filter_nc@@Base>:
  40f0ec:	stp	x29, x30, [sp, #-96]!
  40f0f0:	mov	x29, sp
  40f0f4:	str	x0, [sp, #40]
  40f0f8:	str	x1, [sp, #32]
  40f0fc:	str	x2, [sp, #24]
  40f100:	strh	w3, [sp, #22]
  40f104:	ldr	x0, [sp, #32]
  40f108:	str	x0, [sp, #48]
  40f10c:	ldr	x0, [sp, #24]
  40f110:	str	x0, [sp, #56]
  40f114:	ldrh	w0, [sp, #22]
  40f118:	strh	w0, [sp, #64]
  40f11c:	str	xzr, [sp, #72]
  40f120:	str	xzr, [sp, #80]
  40f124:	strh	wzr, [sp, #88]
  40f128:	add	x0, sp, #0x30
  40f12c:	mov	x1, x0
  40f130:	ldr	x0, [sp, #40]
  40f134:	bl	40ed70 <rtnl_dump_request_n@@Base+0x4dc>
  40f138:	ldp	x29, x30, [sp], #96
  40f13c:	ret
  40f140:	stp	x29, x30, [sp, #-64]!
  40f144:	mov	x29, sp
  40f148:	str	x19, [sp, #16]
  40f14c:	str	x0, [sp, #56]
  40f150:	str	x1, [sp, #48]
  40f154:	str	x2, [sp, #40]
  40f158:	ldr	x1, [sp, #40]
  40f15c:	ldr	x0, [sp, #56]
  40f160:	bl	40d6f8 <nl_dump_ext_ack@@Base>
  40f164:	cmp	w0, #0x0
  40f168:	b.ne	40f1a0 <rtnl_dump_filter_nc@@Base+0xb4>  // b.any
  40f16c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f170:	ldr	x0, [x0, #3992]
  40f174:	ldr	x19, [x0]
  40f178:	ldr	x0, [sp, #48]
  40f17c:	ldr	w0, [x0]
  40f180:	neg	w0, w0
  40f184:	bl	404f80 <strerror@plt>
  40f188:	mov	x2, x0
  40f18c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f190:	add	x1, x0, #0x840
  40f194:	mov	x0, x19
  40f198:	bl	405240 <fprintf@plt>
  40f19c:	b	40f1a4 <rtnl_dump_filter_nc@@Base+0xb8>
  40f1a0:	nop
  40f1a4:	ldr	x19, [sp, #16]
  40f1a8:	ldp	x29, x30, [sp], #64
  40f1ac:	ret
  40f1b0:	stp	x29, x30, [sp, #-208]!
  40f1b4:	mov	x29, sp
  40f1b8:	str	x0, [sp, #56]
  40f1bc:	str	x1, [sp, #48]
  40f1c0:	str	x2, [sp, #40]
  40f1c4:	str	x3, [sp, #32]
  40f1c8:	strb	w4, [sp, #31]
  40f1cc:	str	x5, [sp, #16]
  40f1d0:	str	xzr, [sp, #152]
  40f1d4:	str	wzr, [sp, #160]
  40f1d8:	mov	w0, #0x10                  	// #16
  40f1dc:	strh	w0, [sp, #152]
  40f1e0:	stp	xzr, xzr, [sp, #80]
  40f1e4:	stp	xzr, xzr, [sp, #96]
  40f1e8:	stp	xzr, xzr, [sp, #112]
  40f1ec:	str	xzr, [sp, #128]
  40f1f0:	add	x0, sp, #0x98
  40f1f4:	str	x0, [sp, #80]
  40f1f8:	mov	w0, #0xc                   	// #12
  40f1fc:	str	w0, [sp, #88]
  40f200:	ldr	x0, [sp, #48]
  40f204:	str	x0, [sp, #96]
  40f208:	ldr	x0, [sp, #40]
  40f20c:	str	x0, [sp, #104]
  40f210:	str	wzr, [sp, #204]
  40f214:	str	wzr, [sp, #188]
  40f218:	b	40f290 <rtnl_dump_filter_nc@@Base+0x1a4>
  40f21c:	ldrsw	x0, [sp, #188]
  40f220:	lsl	x0, x0, #4
  40f224:	ldr	x1, [sp, #48]
  40f228:	add	x0, x1, x0
  40f22c:	ldr	x0, [x0]
  40f230:	str	x0, [sp, #192]
  40f234:	ldr	x0, [sp, #56]
  40f238:	ldr	w0, [x0, #28]
  40f23c:	add	w1, w0, #0x1
  40f240:	ldr	x0, [sp, #56]
  40f244:	str	w1, [x0, #28]
  40f248:	ldr	x0, [sp, #56]
  40f24c:	ldr	w0, [x0, #28]
  40f250:	str	w0, [sp, #204]
  40f254:	ldr	x0, [sp, #192]
  40f258:	ldr	w1, [sp, #204]
  40f25c:	str	w1, [x0, #8]
  40f260:	ldr	x0, [sp, #32]
  40f264:	cmp	x0, #0x0
  40f268:	b.ne	40f284 <rtnl_dump_filter_nc@@Base+0x198>  // b.any
  40f26c:	ldr	x0, [sp, #192]
  40f270:	ldrh	w0, [x0, #6]
  40f274:	orr	w0, w0, #0x4
  40f278:	and	w1, w0, #0xffff
  40f27c:	ldr	x0, [sp, #192]
  40f280:	strh	w1, [x0, #6]
  40f284:	ldr	w0, [sp, #188]
  40f288:	add	w0, w0, #0x1
  40f28c:	str	w0, [sp, #188]
  40f290:	ldrsw	x0, [sp, #188]
  40f294:	ldr	x1, [sp, #40]
  40f298:	cmp	x1, x0
  40f29c:	b.hi	40f21c <rtnl_dump_filter_nc@@Base+0x130>  // b.pmore
  40f2a0:	ldr	x0, [sp, #56]
  40f2a4:	ldr	w0, [x0]
  40f2a8:	add	x1, sp, #0x50
  40f2ac:	mov	w2, #0x0                   	// #0
  40f2b0:	bl	404f10 <sendmsg@plt>
  40f2b4:	str	w0, [sp, #184]
  40f2b8:	ldr	w0, [sp, #184]
  40f2bc:	cmp	w0, #0x0
  40f2c0:	b.ge	40f2d8 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.tcont
  40f2c4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f2c8:	add	x0, x0, #0x858
  40f2cc:	bl	404d30 <perror@plt>
  40f2d0:	mov	w0, #0xffffffff            	// #-1
  40f2d4:	b	40f6b0 <rtnl_dump_filter_nc@@Base+0x5c4>
  40f2d8:	add	x0, sp, #0x88
  40f2dc:	str	x0, [sp, #96]
  40f2e0:	mov	x0, #0x1                   	// #1
  40f2e4:	str	x0, [sp, #104]
  40f2e8:	str	wzr, [sp, #188]
  40f2ec:	ldr	x0, [sp, #56]
  40f2f0:	ldr	w0, [x0]
  40f2f4:	add	x2, sp, #0x48
  40f2f8:	add	x1, sp, #0x50
  40f2fc:	bl	40ec44 <rtnl_dump_request_n@@Base+0x3b0>
  40f300:	str	w0, [sp, #184]
  40f304:	ldr	w0, [sp, #188]
  40f308:	add	w0, w0, #0x1
  40f30c:	str	w0, [sp, #188]
  40f310:	ldr	w0, [sp, #184]
  40f314:	cmp	w0, #0x0
  40f318:	b.ge	40f324 <rtnl_dump_filter_nc@@Base+0x238>  // b.tcont
  40f31c:	ldr	w0, [sp, #184]
  40f320:	b	40f6b0 <rtnl_dump_filter_nc@@Base+0x5c4>
  40f324:	ldr	w0, [sp, #88]
  40f328:	cmp	w0, #0xc
  40f32c:	b.eq	40f35c <rtnl_dump_filter_nc@@Base+0x270>  // b.none
  40f330:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f334:	ldr	x0, [x0, #3992]
  40f338:	ldr	x3, [x0]
  40f33c:	ldr	w0, [sp, #88]
  40f340:	mov	w2, w0
  40f344:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f348:	add	x1, x0, #0x878
  40f34c:	mov	x0, x3
  40f350:	bl	405240 <fprintf@plt>
  40f354:	mov	w0, #0x1                   	// #1
  40f358:	bl	404d20 <exit@plt>
  40f35c:	ldr	x0, [sp, #72]
  40f360:	str	x0, [sp, #192]
  40f364:	b	40f62c <rtnl_dump_filter_nc@@Base+0x540>
  40f368:	ldr	x0, [sp, #192]
  40f36c:	ldr	w0, [x0]
  40f370:	str	w0, [sp, #180]
  40f374:	ldr	w0, [sp, #180]
  40f378:	sub	w0, w0, #0x10
  40f37c:	str	w0, [sp, #176]
  40f380:	ldr	w0, [sp, #176]
  40f384:	cmp	w0, #0x0
  40f388:	b.lt	40f39c <rtnl_dump_filter_nc@@Base+0x2b0>  // b.tstop
  40f38c:	ldr	w1, [sp, #180]
  40f390:	ldr	w0, [sp, #184]
  40f394:	cmp	w1, w0
  40f398:	b.le	40f408 <rtnl_dump_filter_nc@@Base+0x31c>
  40f39c:	ldr	w0, [sp, #128]
  40f3a0:	and	w0, w0, #0x20
  40f3a4:	cmp	w0, #0x0
  40f3a8:	b.eq	40f3e0 <rtnl_dump_filter_nc@@Base+0x2f4>  // b.none
  40f3ac:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f3b0:	ldr	x0, [x0, #3992]
  40f3b4:	ldr	x0, [x0]
  40f3b8:	mov	x3, x0
  40f3bc:	mov	x2, #0x12                  	// #18
  40f3c0:	mov	x1, #0x1                   	// #1
  40f3c4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f3c8:	add	x0, x0, #0x898
  40f3cc:	bl	4050d0 <fwrite@plt>
  40f3d0:	ldr	x0, [sp, #72]
  40f3d4:	bl	405070 <free@plt>
  40f3d8:	mov	w0, #0xffffffff            	// #-1
  40f3dc:	b	40f6b0 <rtnl_dump_filter_nc@@Base+0x5c4>
  40f3e0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f3e4:	ldr	x0, [x0, #3992]
  40f3e8:	ldr	x3, [x0]
  40f3ec:	ldr	w2, [sp, #180]
  40f3f0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f3f4:	add	x1, x0, #0x8b0
  40f3f8:	mov	x0, x3
  40f3fc:	bl	405240 <fprintf@plt>
  40f400:	mov	w0, #0x1                   	// #1
  40f404:	bl	404d20 <exit@plt>
  40f408:	ldr	w0, [sp, #156]
  40f40c:	cmp	w0, #0x0
  40f410:	b.ne	40f460 <rtnl_dump_filter_nc@@Base+0x374>  // b.any
  40f414:	ldr	x0, [sp, #192]
  40f418:	ldr	w1, [x0, #12]
  40f41c:	ldr	x0, [sp, #56]
  40f420:	ldr	w0, [x0, #8]
  40f424:	cmp	w1, w0
  40f428:	b.ne	40f460 <rtnl_dump_filter_nc@@Base+0x374>  // b.any
  40f42c:	ldr	x0, [sp, #192]
  40f430:	ldr	w0, [x0, #8]
  40f434:	ldr	w1, [sp, #204]
  40f438:	cmp	w1, w0
  40f43c:	b.cc	40f460 <rtnl_dump_filter_nc@@Base+0x374>  // b.lo, b.ul, b.last
  40f440:	ldr	x0, [sp, #192]
  40f444:	ldr	w0, [x0, #8]
  40f448:	mov	w1, w0
  40f44c:	ldr	w2, [sp, #204]
  40f450:	ldr	x0, [sp, #40]
  40f454:	sub	x0, x2, x0
  40f458:	cmp	x1, x0
  40f45c:	b.cs	40f498 <rtnl_dump_filter_nc@@Base+0x3ac>  // b.hs, b.nlast
  40f460:	ldr	w1, [sp, #184]
  40f464:	ldr	w0, [sp, #180]
  40f468:	add	w0, w0, #0x3
  40f46c:	and	w0, w0, #0xfffffffc
  40f470:	sub	w0, w1, w0
  40f474:	str	w0, [sp, #184]
  40f478:	ldr	w0, [sp, #180]
  40f47c:	add	w0, w0, #0x3
  40f480:	mov	w0, w0
  40f484:	and	x0, x0, #0xfffffffc
  40f488:	ldr	x1, [sp, #192]
  40f48c:	add	x0, x1, x0
  40f490:	str	x0, [sp, #192]
  40f494:	b	40f62c <rtnl_dump_filter_nc@@Base+0x540>
  40f498:	ldr	x0, [sp, #192]
  40f49c:	ldrh	w0, [x0, #4]
  40f4a0:	cmp	w0, #0x2
  40f4a4:	b.ne	40f5b4 <rtnl_dump_filter_nc@@Base+0x4c8>  // b.any
  40f4a8:	ldr	x0, [sp, #192]
  40f4ac:	add	x0, x0, #0x10
  40f4b0:	str	x0, [sp, #168]
  40f4b4:	ldr	x0, [sp, #168]
  40f4b8:	ldr	w0, [x0]
  40f4bc:	str	w0, [sp, #164]
  40f4c0:	ldr	w0, [sp, #176]
  40f4c4:	cmp	w0, #0x13
  40f4c8:	b.hi	40f500 <rtnl_dump_filter_nc@@Base+0x414>  // b.pmore
  40f4cc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f4d0:	ldr	x0, [x0, #3992]
  40f4d4:	ldr	x0, [x0]
  40f4d8:	mov	x3, x0
  40f4dc:	mov	x2, #0x10                  	// #16
  40f4e0:	mov	x1, #0x1                   	// #1
  40f4e4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f4e8:	add	x0, x0, #0x720
  40f4ec:	bl	4050d0 <fwrite@plt>
  40f4f0:	ldr	x0, [sp, #72]
  40f4f4:	bl	405070 <free@plt>
  40f4f8:	mov	w0, #0xffffffff            	// #-1
  40f4fc:	b	40f6b0 <rtnl_dump_filter_nc@@Base+0x5c4>
  40f500:	ldr	w0, [sp, #164]
  40f504:	cmp	w0, #0x0
  40f508:	b.ne	40f51c <rtnl_dump_filter_nc@@Base+0x430>  // b.any
  40f50c:	ldr	x1, [sp, #16]
  40f510:	ldr	x0, [sp, #192]
  40f514:	bl	40d6f8 <nl_dump_ext_ack@@Base>
  40f518:	b	40f55c <rtnl_dump_filter_nc@@Base+0x470>
  40f51c:	bl	405200 <__errno_location@plt>
  40f520:	mov	x1, x0
  40f524:	ldr	w0, [sp, #164]
  40f528:	neg	w0, w0
  40f52c:	str	w0, [x1]
  40f530:	ldr	x0, [sp, #56]
  40f534:	ldr	w0, [x0, #36]
  40f538:	cmp	w0, #0x4
  40f53c:	b.eq	40f55c <rtnl_dump_filter_nc@@Base+0x470>  // b.none
  40f540:	ldrb	w0, [sp, #31]
  40f544:	cmp	w0, #0x0
  40f548:	b.eq	40f55c <rtnl_dump_filter_nc@@Base+0x470>  // b.none
  40f54c:	ldr	x2, [sp, #16]
  40f550:	ldr	x1, [sp, #168]
  40f554:	ldr	x0, [sp, #192]
  40f558:	bl	40f140 <rtnl_dump_filter_nc@@Base+0x54>
  40f55c:	ldr	x0, [sp, #32]
  40f560:	cmp	x0, #0x0
  40f564:	b.eq	40f578 <rtnl_dump_filter_nc@@Base+0x48c>  // b.none
  40f568:	ldr	x1, [sp, #72]
  40f56c:	ldr	x0, [sp, #32]
  40f570:	str	x1, [x0]
  40f574:	b	40f580 <rtnl_dump_filter_nc@@Base+0x494>
  40f578:	ldr	x0, [sp, #72]
  40f57c:	bl	405070 <free@plt>
  40f580:	ldrsw	x0, [sp, #188]
  40f584:	ldr	x1, [sp, #40]
  40f588:	cmp	x1, x0
  40f58c:	b.ls	40f594 <rtnl_dump_filter_nc@@Base+0x4a8>  // b.plast
  40f590:	b	40f2ec <rtnl_dump_filter_nc@@Base+0x200>
  40f594:	ldr	w0, [sp, #164]
  40f598:	cmp	w0, #0x0
  40f59c:	b.eq	40f5ac <rtnl_dump_filter_nc@@Base+0x4c0>  // b.none
  40f5a0:	ldr	w0, [sp, #188]
  40f5a4:	neg	w0, w0
  40f5a8:	b	40f6b0 <rtnl_dump_filter_nc@@Base+0x5c4>
  40f5ac:	mov	w0, #0x0                   	// #0
  40f5b0:	b	40f6b0 <rtnl_dump_filter_nc@@Base+0x5c4>
  40f5b4:	ldr	x0, [sp, #32]
  40f5b8:	cmp	x0, #0x0
  40f5bc:	b.eq	40f5d4 <rtnl_dump_filter_nc@@Base+0x4e8>  // b.none
  40f5c0:	ldr	x1, [sp, #72]
  40f5c4:	ldr	x0, [sp, #32]
  40f5c8:	str	x1, [x0]
  40f5cc:	mov	w0, #0x0                   	// #0
  40f5d0:	b	40f6b0 <rtnl_dump_filter_nc@@Base+0x5c4>
  40f5d4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f5d8:	ldr	x0, [x0, #3992]
  40f5dc:	ldr	x0, [x0]
  40f5e0:	mov	x3, x0
  40f5e4:	mov	x2, #0x14                  	// #20
  40f5e8:	mov	x1, #0x1                   	// #1
  40f5ec:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f5f0:	add	x0, x0, #0x8d0
  40f5f4:	bl	4050d0 <fwrite@plt>
  40f5f8:	ldr	w1, [sp, #184]
  40f5fc:	ldr	w0, [sp, #180]
  40f600:	add	w0, w0, #0x3
  40f604:	and	w0, w0, #0xfffffffc
  40f608:	sub	w0, w1, w0
  40f60c:	str	w0, [sp, #184]
  40f610:	ldr	w0, [sp, #180]
  40f614:	add	w0, w0, #0x3
  40f618:	mov	w0, w0
  40f61c:	and	x0, x0, #0xfffffffc
  40f620:	ldr	x1, [sp, #192]
  40f624:	add	x0, x1, x0
  40f628:	str	x0, [sp, #192]
  40f62c:	ldr	w0, [sp, #184]
  40f630:	cmp	w0, #0xf
  40f634:	b.hi	40f368 <rtnl_dump_filter_nc@@Base+0x27c>  // b.pmore
  40f638:	ldr	x0, [sp, #72]
  40f63c:	bl	405070 <free@plt>
  40f640:	ldr	w0, [sp, #128]
  40f644:	and	w0, w0, #0x20
  40f648:	cmp	w0, #0x0
  40f64c:	b.eq	40f678 <rtnl_dump_filter_nc@@Base+0x58c>  // b.none
  40f650:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f654:	ldr	x0, [x0, #3992]
  40f658:	ldr	x0, [x0]
  40f65c:	mov	x3, x0
  40f660:	mov	x2, #0x12                  	// #18
  40f664:	mov	x1, #0x1                   	// #1
  40f668:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f66c:	add	x0, x0, #0x810
  40f670:	bl	4050d0 <fwrite@plt>
  40f674:	b	40f6ac <rtnl_dump_filter_nc@@Base+0x5c0>
  40f678:	ldr	w0, [sp, #184]
  40f67c:	cmp	w0, #0x0
  40f680:	b.eq	40f2ec <rtnl_dump_filter_nc@@Base+0x200>  // b.none
  40f684:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f688:	ldr	x0, [x0, #3992]
  40f68c:	ldr	x3, [x0]
  40f690:	ldr	w2, [sp, #184]
  40f694:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f698:	add	x1, x0, #0x828
  40f69c:	mov	x0, x3
  40f6a0:	bl	405240 <fprintf@plt>
  40f6a4:	mov	w0, #0x1                   	// #1
  40f6a8:	bl	404d20 <exit@plt>
  40f6ac:	b	40f2ec <rtnl_dump_filter_nc@@Base+0x200>
  40f6b0:	ldp	x29, x30, [sp], #208
  40f6b4:	ret
  40f6b8:	stp	x29, x30, [sp, #-80]!
  40f6bc:	mov	x29, sp
  40f6c0:	str	x0, [sp, #56]
  40f6c4:	str	x1, [sp, #48]
  40f6c8:	str	x2, [sp, #40]
  40f6cc:	strb	w3, [sp, #39]
  40f6d0:	str	x4, [sp, #24]
  40f6d4:	ldr	x0, [sp, #48]
  40f6d8:	str	x0, [sp, #64]
  40f6dc:	ldr	x0, [sp, #48]
  40f6e0:	ldr	w0, [x0]
  40f6e4:	mov	w0, w0
  40f6e8:	str	x0, [sp, #72]
  40f6ec:	add	x0, sp, #0x40
  40f6f0:	ldr	x5, [sp, #24]
  40f6f4:	ldrb	w4, [sp, #39]
  40f6f8:	ldr	x3, [sp, #40]
  40f6fc:	mov	x2, #0x1                   	// #1
  40f700:	mov	x1, x0
  40f704:	ldr	x0, [sp, #56]
  40f708:	bl	40f1b0 <rtnl_dump_filter_nc@@Base+0xc4>
  40f70c:	ldp	x29, x30, [sp], #80
  40f710:	ret

000000000040f714 <rtnl_talk@@Base>:
  40f714:	stp	x29, x30, [sp, #-48]!
  40f718:	mov	x29, sp
  40f71c:	str	x0, [sp, #40]
  40f720:	str	x1, [sp, #32]
  40f724:	str	x2, [sp, #24]
  40f728:	mov	x4, #0x0                   	// #0
  40f72c:	mov	w3, #0x1                   	// #1
  40f730:	ldr	x2, [sp, #24]
  40f734:	ldr	x1, [sp, #32]
  40f738:	ldr	x0, [sp, #40]
  40f73c:	bl	40f6b8 <rtnl_dump_filter_nc@@Base+0x5cc>
  40f740:	ldp	x29, x30, [sp], #48
  40f744:	ret

000000000040f748 <rtnl_talk_iov@@Base>:
  40f748:	stp	x29, x30, [sp, #-48]!
  40f74c:	mov	x29, sp
  40f750:	str	x0, [sp, #40]
  40f754:	str	x1, [sp, #32]
  40f758:	str	x2, [sp, #24]
  40f75c:	str	x3, [sp, #16]
  40f760:	mov	x5, #0x0                   	// #0
  40f764:	mov	w4, #0x1                   	// #1
  40f768:	ldr	x3, [sp, #16]
  40f76c:	ldr	x2, [sp, #24]
  40f770:	ldr	x1, [sp, #32]
  40f774:	ldr	x0, [sp, #40]
  40f778:	bl	40f1b0 <rtnl_dump_filter_nc@@Base+0xc4>
  40f77c:	ldp	x29, x30, [sp], #48
  40f780:	ret

000000000040f784 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40f784:	stp	x29, x30, [sp, #-48]!
  40f788:	mov	x29, sp
  40f78c:	str	x0, [sp, #40]
  40f790:	str	x1, [sp, #32]
  40f794:	str	x2, [sp, #24]
  40f798:	mov	x4, #0x0                   	// #0
  40f79c:	mov	w3, #0x0                   	// #0
  40f7a0:	ldr	x2, [sp, #24]
  40f7a4:	ldr	x1, [sp, #32]
  40f7a8:	ldr	x0, [sp, #40]
  40f7ac:	bl	40f6b8 <rtnl_dump_filter_nc@@Base+0x5cc>
  40f7b0:	ldp	x29, x30, [sp], #48
  40f7b4:	ret

000000000040f7b8 <rtnl_listen_all_nsid@@Base>:
  40f7b8:	stp	x29, x30, [sp, #-48]!
  40f7bc:	mov	x29, sp
  40f7c0:	str	x0, [sp, #24]
  40f7c4:	mov	w0, #0x1                   	// #1
  40f7c8:	str	w0, [sp, #44]
  40f7cc:	ldr	x0, [sp, #24]
  40f7d0:	ldr	w0, [x0]
  40f7d4:	add	x1, sp, #0x2c
  40f7d8:	mov	w4, #0x4                   	// #4
  40f7dc:	mov	x3, x1
  40f7e0:	mov	w2, #0x8                   	// #8
  40f7e4:	mov	w1, #0x10e                 	// #270
  40f7e8:	bl	404ea0 <setsockopt@plt>
  40f7ec:	cmp	w0, #0x0
  40f7f0:	b.ge	40f808 <rtnl_listen_all_nsid@@Base+0x50>  // b.tcont
  40f7f4:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f7f8:	add	x0, x0, #0x8e8
  40f7fc:	bl	404d30 <perror@plt>
  40f800:	mov	w0, #0xffffffff            	// #-1
  40f804:	b	40f820 <rtnl_listen_all_nsid@@Base+0x68>
  40f808:	ldr	x0, [sp, #24]
  40f80c:	ldr	w0, [x0, #48]
  40f810:	orr	w1, w0, #0x1
  40f814:	ldr	x0, [sp, #24]
  40f818:	str	w1, [x0, #48]
  40f81c:	mov	w0, #0x0                   	// #0
  40f820:	ldp	x29, x30, [sp], #48
  40f824:	ret

000000000040f828 <rtnl_listen@@Base>:
  40f828:	mov	x12, #0x60d0                	// #24784
  40f82c:	sub	sp, sp, x12
  40f830:	stp	x29, x30, [sp]
  40f834:	mov	x29, sp
  40f838:	stp	x19, x20, [sp, #16]
  40f83c:	str	x0, [sp, #56]
  40f840:	str	x1, [sp, #48]
  40f844:	str	x2, [sp, #40]
  40f848:	str	xzr, [sp, #24728]
  40f84c:	add	x0, sp, #0x4, lsl #12
  40f850:	str	wzr, [x0, #8352]
  40f854:	mov	w0, #0x10                  	// #16
  40f858:	add	x1, sp, #0x6, lsl #12
  40f85c:	strh	w0, [x1, #152]
  40f860:	add	x0, sp, #0x6, lsl #12
  40f864:	stp	xzr, xzr, [x0, #80]
  40f868:	add	x0, sp, #0x6, lsl #12
  40f86c:	stp	xzr, xzr, [x0, #96]
  40f870:	add	x0, sp, #0x6, lsl #12
  40f874:	stp	xzr, xzr, [x0, #112]
  40f878:	str	xzr, [sp, #24704]
  40f87c:	add	x0, sp, #0x6, lsl #12
  40f880:	add	x0, x0, #0x98
  40f884:	str	x0, [sp, #24656]
  40f888:	mov	w0, #0xc                   	// #12
  40f88c:	add	x1, sp, #0x4, lsl #12
  40f890:	str	w0, [x1, #8280]
  40f894:	add	x0, sp, #0x6, lsl #12
  40f898:	add	x0, x0, #0x88
  40f89c:	str	x0, [sp, #24672]
  40f8a0:	mov	x0, #0x1                   	// #1
  40f8a4:	str	x0, [sp, #24680]
  40f8a8:	ldr	x0, [sp, #56]
  40f8ac:	ldr	w0, [x0, #48]
  40f8b0:	and	w0, w0, #0x1
  40f8b4:	cmp	w0, #0x0
  40f8b8:	b.eq	40f8cc <rtnl_listen@@Base+0xa4>  // b.none
  40f8bc:	add	x0, sp, #0x50
  40f8c0:	str	x0, [sp, #24688]
  40f8c4:	mov	x0, #0x2000                	// #8192
  40f8c8:	str	x0, [sp, #24696]
  40f8cc:	add	x0, sp, #0x2, lsl #12
  40f8d0:	add	x0, x0, #0x50
  40f8d4:	str	x0, [sp, #24712]
  40f8d8:	mov	x0, #0x4000                	// #16384
  40f8dc:	str	x0, [sp, #24720]
  40f8e0:	ldr	x0, [sp, #56]
  40f8e4:	ldr	w0, [x0]
  40f8e8:	add	x1, sp, #0x6, lsl #12
  40f8ec:	add	x1, x1, #0x50
  40f8f0:	mov	w2, #0x0                   	// #0
  40f8f4:	bl	404cf0 <recvmsg@plt>
  40f8f8:	add	x1, sp, #0x4, lsl #12
  40f8fc:	str	w0, [x1, #8396]
  40f900:	add	x0, sp, #0x4, lsl #12
  40f904:	ldr	w0, [x0, #8396]
  40f908:	cmp	w0, #0x0
  40f90c:	b.ge	40f984 <rtnl_listen@@Base+0x15c>  // b.tcont
  40f910:	bl	405200 <__errno_location@plt>
  40f914:	ldr	w0, [x0]
  40f918:	cmp	w0, #0x4
  40f91c:	b.eq	40fc80 <rtnl_listen@@Base+0x458>  // b.none
  40f920:	bl	405200 <__errno_location@plt>
  40f924:	ldr	w0, [x0]
  40f928:	cmp	w0, #0xb
  40f92c:	b.eq	40fc80 <rtnl_listen@@Base+0x458>  // b.none
  40f930:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f934:	ldr	x0, [x0, #3992]
  40f938:	ldr	x19, [x0]
  40f93c:	bl	405200 <__errno_location@plt>
  40f940:	ldr	w0, [x0]
  40f944:	bl	404f80 <strerror@plt>
  40f948:	mov	x20, x0
  40f94c:	bl	405200 <__errno_location@plt>
  40f950:	ldr	w0, [x0]
  40f954:	mov	w3, w0
  40f958:	mov	x2, x20
  40f95c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f960:	add	x1, x0, #0x788
  40f964:	mov	x0, x19
  40f968:	bl	405240 <fprintf@plt>
  40f96c:	bl	405200 <__errno_location@plt>
  40f970:	ldr	w0, [x0]
  40f974:	cmp	w0, #0x69
  40f978:	b.eq	40fc88 <rtnl_listen@@Base+0x460>  // b.none
  40f97c:	mov	w0, #0xffffffff            	// #-1
  40f980:	b	40fc90 <rtnl_listen@@Base+0x468>
  40f984:	add	x0, sp, #0x4, lsl #12
  40f988:	ldr	w0, [x0, #8396]
  40f98c:	cmp	w0, #0x0
  40f990:	b.ne	40f9c0 <rtnl_listen@@Base+0x198>  // b.any
  40f994:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f998:	ldr	x0, [x0, #3992]
  40f99c:	ldr	x0, [x0]
  40f9a0:	mov	x3, x0
  40f9a4:	mov	x2, #0xf                   	// #15
  40f9a8:	mov	x1, #0x1                   	// #1
  40f9ac:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f9b0:	add	x0, x0, #0x7a8
  40f9b4:	bl	4050d0 <fwrite@plt>
  40f9b8:	mov	w0, #0xffffffff            	// #-1
  40f9bc:	b	40fc90 <rtnl_listen@@Base+0x468>
  40f9c0:	add	x0, sp, #0x4, lsl #12
  40f9c4:	ldr	w0, [x0, #8280]
  40f9c8:	cmp	w0, #0xc
  40f9cc:	b.eq	40fa00 <rtnl_listen@@Base+0x1d8>  // b.none
  40f9d0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40f9d4:	ldr	x0, [x0, #3992]
  40f9d8:	ldr	x3, [x0]
  40f9dc:	add	x0, sp, #0x4, lsl #12
  40f9e0:	ldr	w0, [x0, #8280]
  40f9e4:	mov	w2, w0
  40f9e8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40f9ec:	add	x1, x0, #0x900
  40f9f0:	mov	x0, x3
  40f9f4:	bl	405240 <fprintf@plt>
  40f9f8:	mov	w0, #0x1                   	// #1
  40f9fc:	bl	404d20 <exit@plt>
  40fa00:	ldr	x0, [sp, #56]
  40fa04:	ldr	w0, [x0, #48]
  40fa08:	and	w0, w0, #0x1
  40fa0c:	cmp	w0, #0x0
  40fa10:	b.eq	40fab4 <rtnl_listen@@Base+0x28c>  // b.none
  40fa14:	add	x0, sp, #0x48
  40fa18:	mov	x2, #0x4                   	// #4
  40fa1c:	mov	w1, #0x0                   	// #0
  40fa20:	bl	404ef0 <memset@plt>
  40fa24:	mov	w0, #0xffffffff            	// #-1
  40fa28:	str	w0, [sp, #72]
  40fa2c:	ldr	x0, [sp, #24696]
  40fa30:	cmp	x0, #0xf
  40fa34:	b.ls	40fa40 <rtnl_listen@@Base+0x218>  // b.plast
  40fa38:	ldr	x0, [sp, #24688]
  40fa3c:	b	40fa44 <rtnl_listen@@Base+0x21c>
  40fa40:	mov	x0, #0x0                   	// #0
  40fa44:	str	x0, [sp, #24760]
  40fa48:	b	40faa8 <rtnl_listen@@Base+0x280>
  40fa4c:	ldr	x0, [sp, #24760]
  40fa50:	ldr	w0, [x0, #8]
  40fa54:	cmp	w0, #0x10e
  40fa58:	b.ne	40fa94 <rtnl_listen@@Base+0x26c>  // b.any
  40fa5c:	ldr	x0, [sp, #24760]
  40fa60:	ldr	w0, [x0, #12]
  40fa64:	cmp	w0, #0x8
  40fa68:	b.ne	40fa94 <rtnl_listen@@Base+0x26c>  // b.any
  40fa6c:	ldr	x0, [sp, #24760]
  40fa70:	ldr	x0, [x0]
  40fa74:	cmp	x0, #0x14
  40fa78:	b.ne	40fa94 <rtnl_listen@@Base+0x26c>  // b.any
  40fa7c:	ldr	x0, [sp, #24760]
  40fa80:	add	x0, x0, #0x10
  40fa84:	str	x0, [sp, #24752]
  40fa88:	ldr	x0, [sp, #24752]
  40fa8c:	ldr	w0, [x0]
  40fa90:	str	w0, [sp, #72]
  40fa94:	add	x0, sp, #0x6, lsl #12
  40fa98:	add	x0, x0, #0x50
  40fa9c:	ldr	x1, [sp, #24760]
  40faa0:	bl	404d40 <__cmsg_nxthdr@plt>
  40faa4:	str	x0, [sp, #24760]
  40faa8:	ldr	x0, [sp, #24760]
  40faac:	cmp	x0, #0x0
  40fab0:	b.ne	40fa4c <rtnl_listen@@Base+0x224>  // b.any
  40fab4:	add	x0, sp, #0x2, lsl #12
  40fab8:	add	x0, x0, #0x50
  40fabc:	str	x0, [sp, #24768]
  40fac0:	b	40fbf8 <rtnl_listen@@Base+0x3d0>
  40fac4:	ldr	x0, [sp, #24768]
  40fac8:	ldr	w0, [x0]
  40facc:	add	x1, sp, #0x4, lsl #12
  40fad0:	str	w0, [x1, #8364]
  40fad4:	add	x0, sp, #0x4, lsl #12
  40fad8:	ldr	w0, [x0, #8364]
  40fadc:	sub	w0, w0, #0x10
  40fae0:	add	x1, sp, #0x4, lsl #12
  40fae4:	str	w0, [x1, #8360]
  40fae8:	add	x0, sp, #0x4, lsl #12
  40faec:	ldr	w0, [x0, #8360]
  40faf0:	cmp	w0, #0x0
  40faf4:	b.lt	40fb10 <rtnl_listen@@Base+0x2e8>  // b.tstop
  40faf8:	add	x0, sp, #0x4, lsl #12
  40fafc:	ldr	w1, [x0, #8364]
  40fb00:	add	x0, sp, #0x4, lsl #12
  40fb04:	ldr	w0, [x0, #8396]
  40fb08:	cmp	w1, w0
  40fb0c:	b.le	40fb7c <rtnl_listen@@Base+0x354>
  40fb10:	add	x0, sp, #0x4, lsl #12
  40fb14:	ldr	w0, [x0, #8320]
  40fb18:	and	w0, w0, #0x20
  40fb1c:	cmp	w0, #0x0
  40fb20:	b.eq	40fb50 <rtnl_listen@@Base+0x328>  // b.none
  40fb24:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40fb28:	ldr	x0, [x0, #3992]
  40fb2c:	ldr	x0, [x0]
  40fb30:	mov	x3, x0
  40fb34:	mov	x2, #0x12                  	// #18
  40fb38:	mov	x1, #0x1                   	// #1
  40fb3c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fb40:	add	x0, x0, #0x898
  40fb44:	bl	4050d0 <fwrite@plt>
  40fb48:	mov	w0, #0xffffffff            	// #-1
  40fb4c:	b	40fc90 <rtnl_listen@@Base+0x468>
  40fb50:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40fb54:	ldr	x0, [x0, #3992]
  40fb58:	ldr	x3, [x0]
  40fb5c:	add	x0, sp, #0x4, lsl #12
  40fb60:	ldr	w2, [x0, #8364]
  40fb64:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fb68:	add	x1, x0, #0x8b0
  40fb6c:	mov	x0, x3
  40fb70:	bl	405240 <fprintf@plt>
  40fb74:	mov	w0, #0x1                   	// #1
  40fb78:	bl	404d20 <exit@plt>
  40fb7c:	add	x0, sp, #0x48
  40fb80:	ldr	x3, [sp, #48]
  40fb84:	ldr	x2, [sp, #40]
  40fb88:	ldr	x1, [sp, #24768]
  40fb8c:	blr	x3
  40fb90:	add	x1, sp, #0x4, lsl #12
  40fb94:	str	w0, [x1, #8356]
  40fb98:	add	x0, sp, #0x4, lsl #12
  40fb9c:	ldr	w0, [x0, #8356]
  40fba0:	cmp	w0, #0x0
  40fba4:	b.ge	40fbb4 <rtnl_listen@@Base+0x38c>  // b.tcont
  40fba8:	add	x0, sp, #0x4, lsl #12
  40fbac:	ldr	w0, [x0, #8356]
  40fbb0:	b	40fc90 <rtnl_listen@@Base+0x468>
  40fbb4:	add	x0, sp, #0x4, lsl #12
  40fbb8:	ldr	w1, [x0, #8396]
  40fbbc:	add	x0, sp, #0x4, lsl #12
  40fbc0:	ldr	w0, [x0, #8364]
  40fbc4:	add	w0, w0, #0x3
  40fbc8:	and	w0, w0, #0xfffffffc
  40fbcc:	sub	w0, w1, w0
  40fbd0:	add	x1, sp, #0x4, lsl #12
  40fbd4:	str	w0, [x1, #8396]
  40fbd8:	add	x0, sp, #0x4, lsl #12
  40fbdc:	ldr	w0, [x0, #8364]
  40fbe0:	add	w0, w0, #0x3
  40fbe4:	mov	w0, w0
  40fbe8:	and	x0, x0, #0xfffffffc
  40fbec:	ldr	x1, [sp, #24768]
  40fbf0:	add	x0, x1, x0
  40fbf4:	str	x0, [sp, #24768]
  40fbf8:	add	x0, sp, #0x4, lsl #12
  40fbfc:	ldr	w0, [x0, #8396]
  40fc00:	cmp	w0, #0xf
  40fc04:	b.hi	40fac4 <rtnl_listen@@Base+0x29c>  // b.pmore
  40fc08:	add	x0, sp, #0x4, lsl #12
  40fc0c:	ldr	w0, [x0, #8320]
  40fc10:	and	w0, w0, #0x20
  40fc14:	cmp	w0, #0x0
  40fc18:	b.eq	40fc44 <rtnl_listen@@Base+0x41c>  // b.none
  40fc1c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40fc20:	ldr	x0, [x0, #3992]
  40fc24:	ldr	x0, [x0]
  40fc28:	mov	x3, x0
  40fc2c:	mov	x2, #0x12                  	// #18
  40fc30:	mov	x1, #0x1                   	// #1
  40fc34:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fc38:	add	x0, x0, #0x810
  40fc3c:	bl	4050d0 <fwrite@plt>
  40fc40:	b	40fc8c <rtnl_listen@@Base+0x464>
  40fc44:	add	x0, sp, #0x4, lsl #12
  40fc48:	ldr	w0, [x0, #8396]
  40fc4c:	cmp	w0, #0x0
  40fc50:	b.eq	40f8d8 <rtnl_listen@@Base+0xb0>  // b.none
  40fc54:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40fc58:	ldr	x0, [x0, #3992]
  40fc5c:	ldr	x3, [x0]
  40fc60:	add	x0, sp, #0x4, lsl #12
  40fc64:	ldr	w2, [x0, #8396]
  40fc68:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fc6c:	add	x1, x0, #0x828
  40fc70:	mov	x0, x3
  40fc74:	bl	405240 <fprintf@plt>
  40fc78:	mov	w0, #0x1                   	// #1
  40fc7c:	bl	404d20 <exit@plt>
  40fc80:	nop
  40fc84:	b	40f8d8 <rtnl_listen@@Base+0xb0>
  40fc88:	nop
  40fc8c:	b	40f8d8 <rtnl_listen@@Base+0xb0>
  40fc90:	ldp	x19, x20, [sp, #16]
  40fc94:	ldp	x29, x30, [sp]
  40fc98:	mov	x12, #0x60d0                	// #24784
  40fc9c:	add	sp, sp, x12
  40fca0:	ret

000000000040fca4 <rtnl_from_file@@Base>:
  40fca4:	mov	x12, #0x4060                	// #16480
  40fca8:	sub	sp, sp, x12
  40fcac:	stp	x29, x30, [sp]
  40fcb0:	mov	x29, sp
  40fcb4:	str	x19, [sp, #16]
  40fcb8:	str	x0, [sp, #56]
  40fcbc:	str	x1, [sp, #48]
  40fcc0:	str	x2, [sp, #40]
  40fcc4:	add	x0, sp, #0x40
  40fcc8:	str	x0, [sp, #16472]
  40fccc:	add	x0, sp, #0x40
  40fcd0:	ldr	x3, [sp, #56]
  40fcd4:	mov	x2, #0x10                  	// #16
  40fcd8:	mov	x1, #0x1                   	// #1
  40fcdc:	bl	405040 <fread@plt>
  40fce0:	str	x0, [sp, #16464]
  40fce4:	ldr	x0, [sp, #16464]
  40fce8:	cmp	x0, #0x0
  40fcec:	b.ne	40fd08 <rtnl_from_file@@Base+0x64>  // b.any
  40fcf0:	ldr	x0, [sp, #56]
  40fcf4:	bl	404fe0 <feof@plt>
  40fcf8:	cmp	w0, #0x0
  40fcfc:	b.eq	40fd08 <rtnl_from_file@@Base+0x64>  // b.none
  40fd00:	mov	w0, #0x0                   	// #0
  40fd04:	b	40fec8 <rtnl_from_file@@Base+0x224>
  40fd08:	ldr	x0, [sp, #16464]
  40fd0c:	cmp	x0, #0x10
  40fd10:	b.eq	40fd6c <rtnl_from_file@@Base+0xc8>  // b.none
  40fd14:	ldr	x0, [sp, #56]
  40fd18:	bl	405270 <ferror@plt>
  40fd1c:	cmp	w0, #0x0
  40fd20:	b.eq	40fd30 <rtnl_from_file@@Base+0x8c>  // b.none
  40fd24:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fd28:	add	x0, x0, #0x920
  40fd2c:	bl	404d30 <perror@plt>
  40fd30:	ldr	x0, [sp, #56]
  40fd34:	bl	404fe0 <feof@plt>
  40fd38:	cmp	w0, #0x0
  40fd3c:	b.eq	40fd64 <rtnl_from_file@@Base+0xc0>  // b.none
  40fd40:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40fd44:	ldr	x0, [x0, #3992]
  40fd48:	ldr	x0, [x0]
  40fd4c:	mov	x3, x0
  40fd50:	mov	x2, #0x22                  	// #34
  40fd54:	mov	x1, #0x1                   	// #1
  40fd58:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fd5c:	add	x0, x0, #0x938
  40fd60:	bl	4050d0 <fwrite@plt>
  40fd64:	mov	w0, #0xffffffff            	// #-1
  40fd68:	b	40fec8 <rtnl_from_file@@Base+0x224>
  40fd6c:	ldr	x0, [sp, #16472]
  40fd70:	ldr	w0, [x0]
  40fd74:	add	x1, sp, #0x4, lsl #12
  40fd78:	str	w0, [x1, #76]
  40fd7c:	add	x0, sp, #0x4, lsl #12
  40fd80:	ldr	w0, [x0, #76]
  40fd84:	sub	w0, w0, #0x10
  40fd88:	add	x1, sp, #0x4, lsl #12
  40fd8c:	str	w0, [x1, #72]
  40fd90:	add	x0, sp, #0x4, lsl #12
  40fd94:	ldr	w0, [x0, #72]
  40fd98:	cmp	w0, #0x0
  40fd9c:	b.lt	40fdb0 <rtnl_from_file@@Base+0x10c>  // b.tstop
  40fda0:	add	x0, sp, #0x4, lsl #12
  40fda4:	ldr	w0, [x0, #76]
  40fda8:	cmp	w0, #0x4, lsl #12
  40fdac:	b.ls	40fde8 <rtnl_from_file@@Base+0x144>  // b.plast
  40fdb0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40fdb4:	ldr	x0, [x0, #3992]
  40fdb8:	ldr	x19, [x0]
  40fdbc:	ldr	x0, [sp, #56]
  40fdc0:	bl	404dc0 <ftell@plt>
  40fdc4:	mov	x3, x0
  40fdc8:	add	x0, sp, #0x4, lsl #12
  40fdcc:	ldr	w2, [x0, #76]
  40fdd0:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fdd4:	add	x1, x0, #0x960
  40fdd8:	mov	x0, x19
  40fddc:	bl	405240 <fprintf@plt>
  40fde0:	mov	w0, #0xffffffff            	// #-1
  40fde4:	b	40fec8 <rtnl_from_file@@Base+0x224>
  40fde8:	ldr	x0, [sp, #16472]
  40fdec:	add	x4, x0, #0x10
  40fdf0:	add	x0, sp, #0x4, lsl #12
  40fdf4:	ldr	w0, [x0, #72]
  40fdf8:	add	w0, w0, #0x3
  40fdfc:	mov	w0, w0
  40fe00:	and	x0, x0, #0xfffffffc
  40fe04:	ldr	x3, [sp, #56]
  40fe08:	mov	x2, x0
  40fe0c:	mov	x1, #0x1                   	// #1
  40fe10:	mov	x0, x4
  40fe14:	bl	405040 <fread@plt>
  40fe18:	str	x0, [sp, #16464]
  40fe1c:	add	x0, sp, #0x4, lsl #12
  40fe20:	ldr	w0, [x0, #72]
  40fe24:	add	w0, w0, #0x3
  40fe28:	mov	w0, w0
  40fe2c:	and	x0, x0, #0xfffffffc
  40fe30:	ldr	x1, [sp, #16464]
  40fe34:	cmp	x1, x0
  40fe38:	b.eq	40fe94 <rtnl_from_file@@Base+0x1f0>  // b.none
  40fe3c:	ldr	x0, [sp, #56]
  40fe40:	bl	405270 <ferror@plt>
  40fe44:	cmp	w0, #0x0
  40fe48:	b.eq	40fe58 <rtnl_from_file@@Base+0x1b4>  // b.none
  40fe4c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fe50:	add	x0, x0, #0x920
  40fe54:	bl	404d30 <perror@plt>
  40fe58:	ldr	x0, [sp, #56]
  40fe5c:	bl	404fe0 <feof@plt>
  40fe60:	cmp	w0, #0x0
  40fe64:	b.eq	40fe8c <rtnl_from_file@@Base+0x1e8>  // b.none
  40fe68:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  40fe6c:	ldr	x0, [x0, #3992]
  40fe70:	ldr	x0, [x0]
  40fe74:	mov	x3, x0
  40fe78:	mov	x2, #0x22                  	// #34
  40fe7c:	mov	x1, #0x1                   	// #1
  40fe80:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  40fe84:	add	x0, x0, #0x938
  40fe88:	bl	4050d0 <fwrite@plt>
  40fe8c:	mov	w0, #0xffffffff            	// #-1
  40fe90:	b	40fec8 <rtnl_from_file@@Base+0x224>
  40fe94:	ldr	x3, [sp, #48]
  40fe98:	ldr	x2, [sp, #40]
  40fe9c:	ldr	x1, [sp, #16472]
  40fea0:	mov	x0, #0x0                   	// #0
  40fea4:	blr	x3
  40fea8:	add	x1, sp, #0x4, lsl #12
  40feac:	str	w0, [x1, #68]
  40feb0:	add	x0, sp, #0x4, lsl #12
  40feb4:	ldr	w0, [x0, #68]
  40feb8:	cmp	w0, #0x0
  40febc:	b.ge	40fccc <rtnl_from_file@@Base+0x28>  // b.tcont
  40fec0:	add	x0, sp, #0x4, lsl #12
  40fec4:	ldr	w0, [x0, #68]
  40fec8:	ldr	x19, [sp, #16]
  40fecc:	ldp	x29, x30, [sp]
  40fed0:	mov	x12, #0x4060                	// #16480
  40fed4:	add	sp, sp, x12
  40fed8:	ret

000000000040fedc <addattr@@Base>:
  40fedc:	stp	x29, x30, [sp, #-32]!
  40fee0:	mov	x29, sp
  40fee4:	str	x0, [sp, #24]
  40fee8:	str	w1, [sp, #20]
  40feec:	str	w2, [sp, #16]
  40fef0:	mov	w4, #0x0                   	// #0
  40fef4:	mov	x3, #0x0                   	// #0
  40fef8:	ldr	w2, [sp, #16]
  40fefc:	ldr	w1, [sp, #20]
  40ff00:	ldr	x0, [sp, #24]
  40ff04:	bl	410044 <addattr_l@@Base>
  40ff08:	ldp	x29, x30, [sp], #32
  40ff0c:	ret

000000000040ff10 <addattr8@@Base>:
  40ff10:	stp	x29, x30, [sp, #-48]!
  40ff14:	mov	x29, sp
  40ff18:	str	x0, [sp, #40]
  40ff1c:	str	w1, [sp, #36]
  40ff20:	str	w2, [sp, #32]
  40ff24:	strb	w3, [sp, #31]
  40ff28:	add	x0, sp, #0x1f
  40ff2c:	mov	w4, #0x1                   	// #1
  40ff30:	mov	x3, x0
  40ff34:	ldr	w2, [sp, #32]
  40ff38:	ldr	w1, [sp, #36]
  40ff3c:	ldr	x0, [sp, #40]
  40ff40:	bl	410044 <addattr_l@@Base>
  40ff44:	ldp	x29, x30, [sp], #48
  40ff48:	ret

000000000040ff4c <addattr16@@Base>:
  40ff4c:	stp	x29, x30, [sp, #-48]!
  40ff50:	mov	x29, sp
  40ff54:	str	x0, [sp, #40]
  40ff58:	str	w1, [sp, #36]
  40ff5c:	str	w2, [sp, #32]
  40ff60:	strh	w3, [sp, #30]
  40ff64:	add	x0, sp, #0x1e
  40ff68:	mov	w4, #0x2                   	// #2
  40ff6c:	mov	x3, x0
  40ff70:	ldr	w2, [sp, #32]
  40ff74:	ldr	w1, [sp, #36]
  40ff78:	ldr	x0, [sp, #40]
  40ff7c:	bl	410044 <addattr_l@@Base>
  40ff80:	ldp	x29, x30, [sp], #48
  40ff84:	ret

000000000040ff88 <addattr32@@Base>:
  40ff88:	stp	x29, x30, [sp, #-48]!
  40ff8c:	mov	x29, sp
  40ff90:	str	x0, [sp, #40]
  40ff94:	str	w1, [sp, #36]
  40ff98:	str	w2, [sp, #32]
  40ff9c:	str	w3, [sp, #28]
  40ffa0:	add	x0, sp, #0x1c
  40ffa4:	mov	w4, #0x4                   	// #4
  40ffa8:	mov	x3, x0
  40ffac:	ldr	w2, [sp, #32]
  40ffb0:	ldr	w1, [sp, #36]
  40ffb4:	ldr	x0, [sp, #40]
  40ffb8:	bl	410044 <addattr_l@@Base>
  40ffbc:	ldp	x29, x30, [sp], #48
  40ffc0:	ret

000000000040ffc4 <addattr64@@Base>:
  40ffc4:	stp	x29, x30, [sp, #-48]!
  40ffc8:	mov	x29, sp
  40ffcc:	str	x0, [sp, #40]
  40ffd0:	str	w1, [sp, #36]
  40ffd4:	str	w2, [sp, #32]
  40ffd8:	str	x3, [sp, #24]
  40ffdc:	add	x0, sp, #0x18
  40ffe0:	mov	w4, #0x8                   	// #8
  40ffe4:	mov	x3, x0
  40ffe8:	ldr	w2, [sp, #32]
  40ffec:	ldr	w1, [sp, #36]
  40fff0:	ldr	x0, [sp, #40]
  40fff4:	bl	410044 <addattr_l@@Base>
  40fff8:	ldp	x29, x30, [sp], #48
  40fffc:	ret

0000000000410000 <addattrstrz@@Base>:
  410000:	stp	x29, x30, [sp, #-48]!
  410004:	mov	x29, sp
  410008:	str	x0, [sp, #40]
  41000c:	str	w1, [sp, #36]
  410010:	str	w2, [sp, #32]
  410014:	str	x3, [sp, #24]
  410018:	ldr	x0, [sp, #24]
  41001c:	bl	404d10 <strlen@plt>
  410020:	add	w0, w0, #0x1
  410024:	mov	w4, w0
  410028:	ldr	x3, [sp, #24]
  41002c:	ldr	w2, [sp, #32]
  410030:	ldr	w1, [sp, #36]
  410034:	ldr	x0, [sp, #40]
  410038:	bl	410044 <addattr_l@@Base>
  41003c:	ldp	x29, x30, [sp], #48
  410040:	ret

0000000000410044 <addattr_l@@Base>:
  410044:	stp	x29, x30, [sp, #-64]!
  410048:	mov	x29, sp
  41004c:	str	x0, [sp, #40]
  410050:	str	w1, [sp, #36]
  410054:	str	w2, [sp, #32]
  410058:	str	x3, [sp, #24]
  41005c:	str	w4, [sp, #20]
  410060:	ldr	w0, [sp, #20]
  410064:	add	w0, w0, #0x4
  410068:	str	w0, [sp, #60]
  41006c:	ldr	x0, [sp, #40]
  410070:	ldr	w0, [x0]
  410074:	add	w0, w0, #0x3
  410078:	and	w1, w0, #0xfffffffc
  41007c:	ldr	w0, [sp, #60]
  410080:	add	w0, w0, #0x3
  410084:	and	w0, w0, #0xfffffffc
  410088:	add	w1, w1, w0
  41008c:	ldr	w0, [sp, #36]
  410090:	cmp	w1, w0
  410094:	b.ls	4100c0 <addattr_l@@Base+0x7c>  // b.plast
  410098:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  41009c:	ldr	x0, [x0, #3992]
  4100a0:	ldr	x3, [x0]
  4100a4:	ldr	w2, [sp, #36]
  4100a8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4100ac:	add	x1, x0, #0x988
  4100b0:	mov	x0, x3
  4100b4:	bl	405240 <fprintf@plt>
  4100b8:	mov	w0, #0xffffffff            	// #-1
  4100bc:	b	410150 <addattr_l@@Base+0x10c>
  4100c0:	ldr	x0, [sp, #40]
  4100c4:	ldr	w0, [x0]
  4100c8:	add	w0, w0, #0x3
  4100cc:	mov	w0, w0
  4100d0:	and	x0, x0, #0xfffffffc
  4100d4:	ldr	x1, [sp, #40]
  4100d8:	add	x0, x1, x0
  4100dc:	str	x0, [sp, #48]
  4100e0:	ldr	w0, [sp, #32]
  4100e4:	and	w1, w0, #0xffff
  4100e8:	ldr	x0, [sp, #48]
  4100ec:	strh	w1, [x0, #2]
  4100f0:	ldr	w0, [sp, #60]
  4100f4:	and	w1, w0, #0xffff
  4100f8:	ldr	x0, [sp, #48]
  4100fc:	strh	w1, [x0]
  410100:	ldr	w0, [sp, #20]
  410104:	cmp	w0, #0x0
  410108:	b.eq	410124 <addattr_l@@Base+0xe0>  // b.none
  41010c:	ldr	x0, [sp, #48]
  410110:	add	x0, x0, #0x4
  410114:	ldrsw	x1, [sp, #20]
  410118:	mov	x2, x1
  41011c:	ldr	x1, [sp, #24]
  410120:	bl	404ce0 <memcpy@plt>
  410124:	ldr	x0, [sp, #40]
  410128:	ldr	w0, [x0]
  41012c:	add	w0, w0, #0x3
  410130:	and	w1, w0, #0xfffffffc
  410134:	ldr	w0, [sp, #60]
  410138:	add	w0, w0, #0x3
  41013c:	and	w0, w0, #0xfffffffc
  410140:	add	w1, w1, w0
  410144:	ldr	x0, [sp, #40]
  410148:	str	w1, [x0]
  41014c:	mov	w0, #0x0                   	// #0
  410150:	ldp	x29, x30, [sp], #64
  410154:	ret

0000000000410158 <addraw_l@@Base>:
  410158:	stp	x29, x30, [sp, #-48]!
  41015c:	mov	x29, sp
  410160:	str	x0, [sp, #40]
  410164:	str	w1, [sp, #36]
  410168:	str	x2, [sp, #24]
  41016c:	str	w3, [sp, #32]
  410170:	ldr	x0, [sp, #40]
  410174:	ldr	w0, [x0]
  410178:	add	w0, w0, #0x3
  41017c:	and	w1, w0, #0xfffffffc
  410180:	ldr	w0, [sp, #32]
  410184:	add	w0, w0, #0x3
  410188:	and	w0, w0, #0xfffffffc
  41018c:	add	w1, w1, w0
  410190:	ldr	w0, [sp, #36]
  410194:	cmp	w1, w0
  410198:	b.ls	4101c4 <addraw_l@@Base+0x6c>  // b.plast
  41019c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4101a0:	ldr	x0, [x0, #3992]
  4101a4:	ldr	x3, [x0]
  4101a8:	ldr	w2, [sp, #36]
  4101ac:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4101b0:	add	x1, x0, #0x9b8
  4101b4:	mov	x0, x3
  4101b8:	bl	405240 <fprintf@plt>
  4101bc:	mov	w0, #0xffffffff            	// #-1
  4101c0:	b	410268 <addraw_l@@Base+0x110>
  4101c4:	ldr	x0, [sp, #40]
  4101c8:	ldr	w0, [x0]
  4101cc:	add	w0, w0, #0x3
  4101d0:	mov	w0, w0
  4101d4:	and	x0, x0, #0xfffffffc
  4101d8:	ldr	x1, [sp, #40]
  4101dc:	add	x0, x1, x0
  4101e0:	ldrsw	x1, [sp, #32]
  4101e4:	mov	x2, x1
  4101e8:	ldr	x1, [sp, #24]
  4101ec:	bl	404ce0 <memcpy@plt>
  4101f0:	ldr	x0, [sp, #40]
  4101f4:	ldr	w0, [x0]
  4101f8:	add	w0, w0, #0x3
  4101fc:	mov	w0, w0
  410200:	and	x1, x0, #0xfffffffc
  410204:	ldrsw	x0, [sp, #32]
  410208:	add	x0, x1, x0
  41020c:	ldr	x1, [sp, #40]
  410210:	add	x3, x1, x0
  410214:	ldr	w0, [sp, #32]
  410218:	add	w0, w0, #0x3
  41021c:	and	w1, w0, #0xfffffffc
  410220:	ldr	w0, [sp, #32]
  410224:	sub	w0, w1, w0
  410228:	mov	w0, w0
  41022c:	mov	x2, x0
  410230:	mov	w1, #0x0                   	// #0
  410234:	mov	x0, x3
  410238:	bl	404ef0 <memset@plt>
  41023c:	ldr	x0, [sp, #40]
  410240:	ldr	w0, [x0]
  410244:	add	w0, w0, #0x3
  410248:	and	w1, w0, #0xfffffffc
  41024c:	ldr	w0, [sp, #32]
  410250:	add	w0, w0, #0x3
  410254:	and	w0, w0, #0xfffffffc
  410258:	add	w1, w1, w0
  41025c:	ldr	x0, [sp, #40]
  410260:	str	w1, [x0]
  410264:	mov	w0, #0x0                   	// #0
  410268:	ldp	x29, x30, [sp], #48
  41026c:	ret

0000000000410270 <addattr_nest@@Base>:
  410270:	stp	x29, x30, [sp, #-48]!
  410274:	mov	x29, sp
  410278:	str	x0, [sp, #24]
  41027c:	str	w1, [sp, #20]
  410280:	str	w2, [sp, #16]
  410284:	ldr	x0, [sp, #24]
  410288:	ldr	w0, [x0]
  41028c:	add	w0, w0, #0x3
  410290:	mov	w0, w0
  410294:	and	x0, x0, #0xfffffffc
  410298:	ldr	x1, [sp, #24]
  41029c:	add	x0, x1, x0
  4102a0:	str	x0, [sp, #40]
  4102a4:	mov	w4, #0x0                   	// #0
  4102a8:	mov	x3, #0x0                   	// #0
  4102ac:	ldr	w2, [sp, #16]
  4102b0:	ldr	w1, [sp, #20]
  4102b4:	ldr	x0, [sp, #24]
  4102b8:	bl	410044 <addattr_l@@Base>
  4102bc:	ldr	x0, [sp, #40]
  4102c0:	ldp	x29, x30, [sp], #48
  4102c4:	ret

00000000004102c8 <addattr_nest_end@@Base>:
  4102c8:	sub	sp, sp, #0x10
  4102cc:	str	x0, [sp, #8]
  4102d0:	str	x1, [sp]
  4102d4:	ldr	x0, [sp, #8]
  4102d8:	ldr	w0, [x0]
  4102dc:	add	w0, w0, #0x3
  4102e0:	mov	w0, w0
  4102e4:	and	x0, x0, #0xfffffffc
  4102e8:	ldr	x1, [sp, #8]
  4102ec:	add	x1, x1, x0
  4102f0:	ldr	x0, [sp]
  4102f4:	sub	x0, x1, x0
  4102f8:	and	w1, w0, #0xffff
  4102fc:	ldr	x0, [sp]
  410300:	strh	w1, [x0]
  410304:	ldr	x0, [sp, #8]
  410308:	ldr	w0, [x0]
  41030c:	add	sp, sp, #0x10
  410310:	ret

0000000000410314 <addattr_nest_compat@@Base>:
  410314:	stp	x29, x30, [sp, #-64]!
  410318:	mov	x29, sp
  41031c:	str	x0, [sp, #40]
  410320:	str	w1, [sp, #36]
  410324:	str	w2, [sp, #32]
  410328:	str	x3, [sp, #24]
  41032c:	str	w4, [sp, #20]
  410330:	ldr	x0, [sp, #40]
  410334:	ldr	w0, [x0]
  410338:	add	w0, w0, #0x3
  41033c:	mov	w0, w0
  410340:	and	x0, x0, #0xfffffffc
  410344:	ldr	x1, [sp, #40]
  410348:	add	x0, x1, x0
  41034c:	str	x0, [sp, #56]
  410350:	ldr	w4, [sp, #20]
  410354:	ldr	x3, [sp, #24]
  410358:	ldr	w2, [sp, #32]
  41035c:	ldr	w1, [sp, #36]
  410360:	ldr	x0, [sp, #40]
  410364:	bl	410044 <addattr_l@@Base>
  410368:	ldr	w2, [sp, #32]
  41036c:	ldr	w1, [sp, #36]
  410370:	ldr	x0, [sp, #40]
  410374:	bl	410270 <addattr_nest@@Base>
  410378:	ldr	x0, [sp, #56]
  41037c:	ldp	x29, x30, [sp], #64
  410380:	ret

0000000000410384 <addattr_nest_compat_end@@Base>:
  410384:	stp	x29, x30, [sp, #-48]!
  410388:	mov	x29, sp
  41038c:	str	x0, [sp, #24]
  410390:	str	x1, [sp, #16]
  410394:	ldr	x0, [sp, #16]
  410398:	ldrh	w0, [x0]
  41039c:	add	w0, w0, #0x3
  4103a0:	mov	w0, w0
  4103a4:	and	x0, x0, #0xfffffffc
  4103a8:	ldr	x1, [sp, #16]
  4103ac:	add	x0, x1, x0
  4103b0:	str	x0, [sp, #40]
  4103b4:	ldr	x0, [sp, #24]
  4103b8:	ldr	w0, [x0]
  4103bc:	add	w0, w0, #0x3
  4103c0:	mov	w0, w0
  4103c4:	and	x0, x0, #0xfffffffc
  4103c8:	ldr	x1, [sp, #24]
  4103cc:	add	x1, x1, x0
  4103d0:	ldr	x0, [sp, #16]
  4103d4:	sub	x0, x1, x0
  4103d8:	and	w1, w0, #0xffff
  4103dc:	ldr	x0, [sp, #16]
  4103e0:	strh	w1, [x0]
  4103e4:	ldr	x1, [sp, #40]
  4103e8:	ldr	x0, [sp, #24]
  4103ec:	bl	4102c8 <addattr_nest_end@@Base>
  4103f0:	ldr	x0, [sp, #24]
  4103f4:	ldr	w0, [x0]
  4103f8:	ldp	x29, x30, [sp], #48
  4103fc:	ret

0000000000410400 <rta_addattr32@@Base>:
  410400:	stp	x29, x30, [sp, #-64]!
  410404:	mov	x29, sp
  410408:	str	x0, [sp, #40]
  41040c:	str	w1, [sp, #36]
  410410:	str	w2, [sp, #32]
  410414:	str	w3, [sp, #28]
  410418:	mov	w0, #0x8                   	// #8
  41041c:	str	w0, [sp, #60]
  410420:	ldr	x0, [sp, #40]
  410424:	ldrh	w0, [x0]
  410428:	add	w0, w0, #0x3
  41042c:	and	w1, w0, #0xfffffffc
  410430:	ldr	w0, [sp, #60]
  410434:	add	w1, w1, w0
  410438:	ldr	w0, [sp, #36]
  41043c:	cmp	w1, w0
  410440:	b.ls	41046c <rta_addattr32@@Base+0x6c>  // b.plast
  410444:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  410448:	ldr	x0, [x0, #3992]
  41044c:	ldr	x3, [x0]
  410450:	ldr	w2, [sp, #36]
  410454:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  410458:	add	x1, x0, #0x9e8
  41045c:	mov	x0, x3
  410460:	bl	405240 <fprintf@plt>
  410464:	mov	w0, #0xffffffff            	// #-1
  410468:	b	4104f0 <rta_addattr32@@Base+0xf0>
  41046c:	ldr	x0, [sp, #40]
  410470:	ldrh	w0, [x0]
  410474:	add	w0, w0, #0x3
  410478:	mov	w0, w0
  41047c:	and	x0, x0, #0xfffffffc
  410480:	ldr	x1, [sp, #40]
  410484:	add	x0, x1, x0
  410488:	str	x0, [sp, #48]
  41048c:	ldr	w0, [sp, #32]
  410490:	and	w1, w0, #0xffff
  410494:	ldr	x0, [sp, #48]
  410498:	strh	w1, [x0, #2]
  41049c:	ldr	w0, [sp, #60]
  4104a0:	and	w1, w0, #0xffff
  4104a4:	ldr	x0, [sp, #48]
  4104a8:	strh	w1, [x0]
  4104ac:	ldr	x0, [sp, #48]
  4104b0:	add	x0, x0, #0x4
  4104b4:	ldr	w1, [sp, #28]
  4104b8:	str	w1, [x0]
  4104bc:	ldr	x0, [sp, #40]
  4104c0:	ldrh	w0, [x0]
  4104c4:	add	w0, w0, #0x3
  4104c8:	and	w0, w0, #0xffff
  4104cc:	and	w0, w0, #0xfffffffc
  4104d0:	and	w1, w0, #0xffff
  4104d4:	ldr	w0, [sp, #60]
  4104d8:	and	w0, w0, #0xffff
  4104dc:	add	w0, w1, w0
  4104e0:	and	w1, w0, #0xffff
  4104e4:	ldr	x0, [sp, #40]
  4104e8:	strh	w1, [x0]
  4104ec:	mov	w0, #0x0                   	// #0
  4104f0:	ldp	x29, x30, [sp], #64
  4104f4:	ret

00000000004104f8 <rta_addattr_l@@Base>:
  4104f8:	stp	x29, x30, [sp, #-64]!
  4104fc:	mov	x29, sp
  410500:	str	x0, [sp, #40]
  410504:	str	w1, [sp, #36]
  410508:	str	w2, [sp, #32]
  41050c:	str	x3, [sp, #24]
  410510:	str	w4, [sp, #20]
  410514:	ldr	w0, [sp, #20]
  410518:	add	w0, w0, #0x4
  41051c:	str	w0, [sp, #60]
  410520:	ldr	x0, [sp, #40]
  410524:	ldrh	w0, [x0]
  410528:	add	w0, w0, #0x3
  41052c:	and	w1, w0, #0xfffffffc
  410530:	ldr	w0, [sp, #60]
  410534:	add	w0, w0, #0x3
  410538:	and	w0, w0, #0xfffffffc
  41053c:	add	w1, w1, w0
  410540:	ldr	w0, [sp, #36]
  410544:	cmp	w1, w0
  410548:	b.ls	410574 <rta_addattr_l@@Base+0x7c>  // b.plast
  41054c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  410550:	ldr	x0, [x0, #3992]
  410554:	ldr	x3, [x0]
  410558:	ldr	w2, [sp, #36]
  41055c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  410560:	add	x1, x0, #0xa20
  410564:	mov	x0, x3
  410568:	bl	405240 <fprintf@plt>
  41056c:	mov	w0, #0xffffffff            	// #-1
  410570:	b	41061c <rta_addattr_l@@Base+0x124>
  410574:	ldr	x0, [sp, #40]
  410578:	ldrh	w0, [x0]
  41057c:	add	w0, w0, #0x3
  410580:	mov	w0, w0
  410584:	and	x0, x0, #0xfffffffc
  410588:	ldr	x1, [sp, #40]
  41058c:	add	x0, x1, x0
  410590:	str	x0, [sp, #48]
  410594:	ldr	w0, [sp, #32]
  410598:	and	w1, w0, #0xffff
  41059c:	ldr	x0, [sp, #48]
  4105a0:	strh	w1, [x0, #2]
  4105a4:	ldr	w0, [sp, #60]
  4105a8:	and	w1, w0, #0xffff
  4105ac:	ldr	x0, [sp, #48]
  4105b0:	strh	w1, [x0]
  4105b4:	ldr	w0, [sp, #20]
  4105b8:	cmp	w0, #0x0
  4105bc:	b.eq	4105d8 <rta_addattr_l@@Base+0xe0>  // b.none
  4105c0:	ldr	x0, [sp, #48]
  4105c4:	add	x0, x0, #0x4
  4105c8:	ldrsw	x1, [sp, #20]
  4105cc:	mov	x2, x1
  4105d0:	ldr	x1, [sp, #24]
  4105d4:	bl	404ce0 <memcpy@plt>
  4105d8:	ldr	x0, [sp, #40]
  4105dc:	ldrh	w0, [x0]
  4105e0:	add	w0, w0, #0x3
  4105e4:	and	w0, w0, #0xffff
  4105e8:	and	w0, w0, #0xfffffffc
  4105ec:	and	w1, w0, #0xffff
  4105f0:	ldr	w0, [sp, #60]
  4105f4:	and	w0, w0, #0xffff
  4105f8:	add	w0, w0, #0x3
  4105fc:	and	w0, w0, #0xffff
  410600:	and	w0, w0, #0xfffffffc
  410604:	and	w0, w0, #0xffff
  410608:	add	w0, w1, w0
  41060c:	and	w1, w0, #0xffff
  410610:	ldr	x0, [sp, #40]
  410614:	strh	w1, [x0]
  410618:	mov	w0, #0x0                   	// #0
  41061c:	ldp	x29, x30, [sp], #64
  410620:	ret

0000000000410624 <rta_addattr8@@Base>:
  410624:	stp	x29, x30, [sp, #-48]!
  410628:	mov	x29, sp
  41062c:	str	x0, [sp, #40]
  410630:	str	w1, [sp, #36]
  410634:	str	w2, [sp, #32]
  410638:	strb	w3, [sp, #31]
  41063c:	add	x0, sp, #0x1f
  410640:	mov	w4, #0x1                   	// #1
  410644:	mov	x3, x0
  410648:	ldr	w2, [sp, #32]
  41064c:	ldr	w1, [sp, #36]
  410650:	ldr	x0, [sp, #40]
  410654:	bl	4104f8 <rta_addattr_l@@Base>
  410658:	ldp	x29, x30, [sp], #48
  41065c:	ret

0000000000410660 <rta_addattr16@@Base>:
  410660:	stp	x29, x30, [sp, #-48]!
  410664:	mov	x29, sp
  410668:	str	x0, [sp, #40]
  41066c:	str	w1, [sp, #36]
  410670:	str	w2, [sp, #32]
  410674:	strh	w3, [sp, #30]
  410678:	add	x0, sp, #0x1e
  41067c:	mov	w4, #0x2                   	// #2
  410680:	mov	x3, x0
  410684:	ldr	w2, [sp, #32]
  410688:	ldr	w1, [sp, #36]
  41068c:	ldr	x0, [sp, #40]
  410690:	bl	4104f8 <rta_addattr_l@@Base>
  410694:	ldp	x29, x30, [sp], #48
  410698:	ret

000000000041069c <rta_addattr64@@Base>:
  41069c:	stp	x29, x30, [sp, #-48]!
  4106a0:	mov	x29, sp
  4106a4:	str	x0, [sp, #40]
  4106a8:	str	w1, [sp, #36]
  4106ac:	str	w2, [sp, #32]
  4106b0:	str	x3, [sp, #24]
  4106b4:	add	x0, sp, #0x18
  4106b8:	mov	w4, #0x8                   	// #8
  4106bc:	mov	x3, x0
  4106c0:	ldr	w2, [sp, #32]
  4106c4:	ldr	w1, [sp, #36]
  4106c8:	ldr	x0, [sp, #40]
  4106cc:	bl	4104f8 <rta_addattr_l@@Base>
  4106d0:	ldp	x29, x30, [sp], #48
  4106d4:	ret

00000000004106d8 <rta_nest@@Base>:
  4106d8:	stp	x29, x30, [sp, #-48]!
  4106dc:	mov	x29, sp
  4106e0:	str	x0, [sp, #24]
  4106e4:	str	w1, [sp, #20]
  4106e8:	str	w2, [sp, #16]
  4106ec:	ldr	x0, [sp, #24]
  4106f0:	ldrh	w0, [x0]
  4106f4:	add	w0, w0, #0x3
  4106f8:	mov	w0, w0
  4106fc:	and	x0, x0, #0xfffffffc
  410700:	ldr	x1, [sp, #24]
  410704:	add	x0, x1, x0
  410708:	str	x0, [sp, #40]
  41070c:	mov	w4, #0x0                   	// #0
  410710:	mov	x3, #0x0                   	// #0
  410714:	ldr	w2, [sp, #16]
  410718:	ldr	w1, [sp, #20]
  41071c:	ldr	x0, [sp, #24]
  410720:	bl	4104f8 <rta_addattr_l@@Base>
  410724:	ldr	x0, [sp, #40]
  410728:	ldrh	w0, [x0, #2]
  41072c:	orr	w0, w0, #0xffff8000
  410730:	and	w1, w0, #0xffff
  410734:	ldr	x0, [sp, #40]
  410738:	strh	w1, [x0, #2]
  41073c:	ldr	x0, [sp, #40]
  410740:	ldp	x29, x30, [sp], #48
  410744:	ret

0000000000410748 <rta_nest_end@@Base>:
  410748:	sub	sp, sp, #0x10
  41074c:	str	x0, [sp, #8]
  410750:	str	x1, [sp]
  410754:	ldr	x0, [sp, #8]
  410758:	ldrh	w0, [x0]
  41075c:	add	w0, w0, #0x3
  410760:	mov	w0, w0
  410764:	and	x0, x0, #0xfffffffc
  410768:	ldr	x1, [sp, #8]
  41076c:	add	x1, x1, x0
  410770:	ldr	x0, [sp]
  410774:	sub	x0, x1, x0
  410778:	and	w1, w0, #0xffff
  41077c:	ldr	x0, [sp]
  410780:	strh	w1, [x0]
  410784:	ldr	x0, [sp, #8]
  410788:	ldrh	w0, [x0]
  41078c:	add	sp, sp, #0x10
  410790:	ret

0000000000410794 <parse_rtattr@@Base>:
  410794:	stp	x29, x30, [sp, #-48]!
  410798:	mov	x29, sp
  41079c:	str	x0, [sp, #40]
  4107a0:	str	w1, [sp, #36]
  4107a4:	str	x2, [sp, #24]
  4107a8:	str	w3, [sp, #32]
  4107ac:	mov	w4, #0x0                   	// #0
  4107b0:	ldr	w3, [sp, #32]
  4107b4:	ldr	x2, [sp, #24]
  4107b8:	ldr	w1, [sp, #36]
  4107bc:	ldr	x0, [sp, #40]
  4107c0:	bl	4107cc <parse_rtattr_flags@@Base>
  4107c4:	ldp	x29, x30, [sp], #48
  4107c8:	ret

00000000004107cc <parse_rtattr_flags@@Base>:
  4107cc:	stp	x29, x30, [sp, #-64]!
  4107d0:	mov	x29, sp
  4107d4:	str	x0, [sp, #40]
  4107d8:	str	w1, [sp, #36]
  4107dc:	str	x2, [sp, #24]
  4107e0:	str	w3, [sp, #32]
  4107e4:	strh	w4, [sp, #22]
  4107e8:	ldr	w0, [sp, #36]
  4107ec:	add	w0, w0, #0x1
  4107f0:	sxtw	x0, w0
  4107f4:	lsl	x0, x0, #3
  4107f8:	mov	x2, x0
  4107fc:	mov	w1, #0x0                   	// #0
  410800:	ldr	x0, [sp, #40]
  410804:	bl	404ef0 <memset@plt>
  410808:	b	4108b0 <parse_rtattr_flags@@Base+0xe4>
  41080c:	ldr	x0, [sp, #24]
  410810:	ldrh	w0, [x0, #2]
  410814:	sxth	w1, w0
  410818:	ldrsh	w0, [sp, #22]
  41081c:	mvn	w0, w0
  410820:	sxth	w0, w0
  410824:	and	w0, w1, w0
  410828:	sxth	w0, w0
  41082c:	strh	w0, [sp, #62]
  410830:	ldrh	w0, [sp, #62]
  410834:	ldr	w1, [sp, #36]
  410838:	cmp	w1, w0
  41083c:	b.lt	410874 <parse_rtattr_flags@@Base+0xa8>  // b.tstop
  410840:	ldrh	w0, [sp, #62]
  410844:	lsl	x0, x0, #3
  410848:	ldr	x1, [sp, #40]
  41084c:	add	x0, x1, x0
  410850:	ldr	x0, [x0]
  410854:	cmp	x0, #0x0
  410858:	b.ne	410874 <parse_rtattr_flags@@Base+0xa8>  // b.any
  41085c:	ldrh	w0, [sp, #62]
  410860:	lsl	x0, x0, #3
  410864:	ldr	x1, [sp, #40]
  410868:	add	x0, x1, x0
  41086c:	ldr	x1, [sp, #24]
  410870:	str	x1, [x0]
  410874:	ldr	w1, [sp, #32]
  410878:	ldr	x0, [sp, #24]
  41087c:	ldrh	w0, [x0]
  410880:	add	w0, w0, #0x3
  410884:	and	w0, w0, #0xfffffffc
  410888:	sub	w0, w1, w0
  41088c:	str	w0, [sp, #32]
  410890:	ldr	x0, [sp, #24]
  410894:	ldrh	w0, [x0]
  410898:	add	w0, w0, #0x3
  41089c:	mov	w0, w0
  4108a0:	and	x0, x0, #0xfffffffc
  4108a4:	ldr	x1, [sp, #24]
  4108a8:	add	x0, x1, x0
  4108ac:	str	x0, [sp, #24]
  4108b0:	ldr	w0, [sp, #32]
  4108b4:	cmp	w0, #0x3
  4108b8:	b.le	4108e4 <parse_rtattr_flags@@Base+0x118>
  4108bc:	ldr	x0, [sp, #24]
  4108c0:	ldrh	w0, [x0]
  4108c4:	cmp	w0, #0x3
  4108c8:	b.ls	4108e4 <parse_rtattr_flags@@Base+0x118>  // b.plast
  4108cc:	ldr	x0, [sp, #24]
  4108d0:	ldrh	w0, [x0]
  4108d4:	mov	w1, w0
  4108d8:	ldr	w0, [sp, #32]
  4108dc:	cmp	w0, w1
  4108e0:	b.ge	41080c <parse_rtattr_flags@@Base+0x40>  // b.tcont
  4108e4:	ldr	w0, [sp, #32]
  4108e8:	cmp	w0, #0x0
  4108ec:	b.eq	41091c <parse_rtattr_flags@@Base+0x150>  // b.none
  4108f0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4108f4:	ldr	x0, [x0, #3992]
  4108f8:	ldr	x4, [x0]
  4108fc:	ldr	x0, [sp, #24]
  410900:	ldrh	w0, [x0]
  410904:	mov	w3, w0
  410908:	ldr	w2, [sp, #32]
  41090c:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  410910:	add	x1, x0, #0xa58
  410914:	mov	x0, x4
  410918:	bl	405240 <fprintf@plt>
  41091c:	mov	w0, #0x0                   	// #0
  410920:	ldp	x29, x30, [sp], #64
  410924:	ret

0000000000410928 <parse_rtattr_one@@Base>:
  410928:	stp	x29, x30, [sp, #-32]!
  41092c:	mov	x29, sp
  410930:	str	w0, [sp, #28]
  410934:	str	x1, [sp, #16]
  410938:	str	w2, [sp, #24]
  41093c:	b	41099c <parse_rtattr_one@@Base+0x74>
  410940:	ldr	x0, [sp, #16]
  410944:	ldrh	w0, [x0, #2]
  410948:	mov	w1, w0
  41094c:	ldr	w0, [sp, #28]
  410950:	cmp	w0, w1
  410954:	b.ne	410960 <parse_rtattr_one@@Base+0x38>  // b.any
  410958:	ldr	x0, [sp, #16]
  41095c:	b	410a0c <parse_rtattr_one@@Base+0xe4>
  410960:	ldr	w1, [sp, #24]
  410964:	ldr	x0, [sp, #16]
  410968:	ldrh	w0, [x0]
  41096c:	add	w0, w0, #0x3
  410970:	and	w0, w0, #0xfffffffc
  410974:	sub	w0, w1, w0
  410978:	str	w0, [sp, #24]
  41097c:	ldr	x0, [sp, #16]
  410980:	ldrh	w0, [x0]
  410984:	add	w0, w0, #0x3
  410988:	mov	w0, w0
  41098c:	and	x0, x0, #0xfffffffc
  410990:	ldr	x1, [sp, #16]
  410994:	add	x0, x1, x0
  410998:	str	x0, [sp, #16]
  41099c:	ldr	w0, [sp, #24]
  4109a0:	cmp	w0, #0x3
  4109a4:	b.le	4109d0 <parse_rtattr_one@@Base+0xa8>
  4109a8:	ldr	x0, [sp, #16]
  4109ac:	ldrh	w0, [x0]
  4109b0:	cmp	w0, #0x3
  4109b4:	b.ls	4109d0 <parse_rtattr_one@@Base+0xa8>  // b.plast
  4109b8:	ldr	x0, [sp, #16]
  4109bc:	ldrh	w0, [x0]
  4109c0:	mov	w1, w0
  4109c4:	ldr	w0, [sp, #24]
  4109c8:	cmp	w0, w1
  4109cc:	b.ge	410940 <parse_rtattr_one@@Base+0x18>  // b.tcont
  4109d0:	ldr	w0, [sp, #24]
  4109d4:	cmp	w0, #0x0
  4109d8:	b.eq	410a08 <parse_rtattr_one@@Base+0xe0>  // b.none
  4109dc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x13470>
  4109e0:	ldr	x0, [x0, #3992]
  4109e4:	ldr	x4, [x0]
  4109e8:	ldr	x0, [sp, #16]
  4109ec:	ldrh	w0, [x0]
  4109f0:	mov	w3, w0
  4109f4:	ldr	w2, [sp, #24]
  4109f8:	adrp	x0, 411000 <_IO_stdin_used@@Base+0x470>
  4109fc:	add	x1, x0, #0xa58
  410a00:	mov	x0, x4
  410a04:	bl	405240 <fprintf@plt>
  410a08:	mov	x0, #0x0                   	// #0
  410a0c:	ldp	x29, x30, [sp], #32
  410a10:	ret

0000000000410a14 <__parse_rtattr_nested_compat@@Base>:
  410a14:	stp	x29, x30, [sp, #-48]!
  410a18:	mov	x29, sp
  410a1c:	str	x0, [sp, #40]
  410a20:	str	w1, [sp, #36]
  410a24:	str	x2, [sp, #24]
  410a28:	str	w3, [sp, #32]
  410a2c:	ldr	x0, [sp, #24]
  410a30:	ldrh	w0, [x0]
  410a34:	and	x0, x0, #0xffff
  410a38:	sub	x1, x0, #0x4
  410a3c:	ldrsw	x0, [sp, #32]
  410a40:	cmp	x1, x0
  410a44:	b.cs	410a50 <__parse_rtattr_nested_compat@@Base+0x3c>  // b.hs, b.nlast
  410a48:	mov	w0, #0xffffffff            	// #-1
  410a4c:	b	410aec <__parse_rtattr_nested_compat@@Base+0xd8>
  410a50:	ldr	x0, [sp, #24]
  410a54:	ldrh	w0, [x0]
  410a58:	and	x0, x0, #0xffff
  410a5c:	sub	x1, x0, #0x4
  410a60:	ldr	w0, [sp, #32]
  410a64:	add	w0, w0, #0x3
  410a68:	mov	w0, w0
  410a6c:	and	x0, x0, #0xfffffffc
  410a70:	add	x0, x0, #0x4
  410a74:	cmp	x1, x0
  410a78:	b.cc	410ac8 <__parse_rtattr_nested_compat@@Base+0xb4>  // b.lo, b.ul, b.last
  410a7c:	ldr	w0, [sp, #32]
  410a80:	add	w0, w0, #0x3
  410a84:	mov	w0, w0
  410a88:	and	x0, x0, #0xfffffffc
  410a8c:	add	x0, x0, #0x4
  410a90:	ldr	x1, [sp, #24]
  410a94:	add	x0, x1, x0
  410a98:	str	x0, [sp, #24]
  410a9c:	ldr	x0, [sp, #24]
  410aa0:	add	x1, x0, #0x4
  410aa4:	ldr	x0, [sp, #24]
  410aa8:	ldrh	w0, [x0]
  410aac:	sub	w0, w0, #0x4
  410ab0:	mov	w3, w0
  410ab4:	mov	x2, x1
  410ab8:	ldr	w1, [sp, #36]
  410abc:	ldr	x0, [sp, #40]
  410ac0:	bl	410794 <parse_rtattr@@Base>
  410ac4:	b	410aec <__parse_rtattr_nested_compat@@Base+0xd8>
  410ac8:	ldr	w0, [sp, #36]
  410acc:	add	w0, w0, #0x1
  410ad0:	sxtw	x0, w0
  410ad4:	lsl	x0, x0, #3
  410ad8:	mov	x2, x0
  410adc:	mov	w1, #0x0                   	// #0
  410ae0:	ldr	x0, [sp, #40]
  410ae4:	bl	404ef0 <memset@plt>
  410ae8:	mov	w0, #0x0                   	// #0
  410aec:	ldp	x29, x30, [sp], #48
  410af0:	ret
  410af4:	nop

0000000000410af8 <__libc_csu_init@@Base>:
  410af8:	stp	x29, x30, [sp, #-64]!
  410afc:	mov	x29, sp
  410b00:	stp	x19, x20, [sp, #16]
  410b04:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x13470>
  410b08:	add	x20, x20, #0xcf8
  410b0c:	stp	x21, x22, [sp, #32]
  410b10:	adrp	x21, 424000 <_IO_stdin_used@@Base+0x13470>
  410b14:	add	x21, x21, #0xcf0
  410b18:	sub	x20, x20, x21
  410b1c:	mov	w22, w0
  410b20:	stp	x23, x24, [sp, #48]
  410b24:	mov	x23, x1
  410b28:	mov	x24, x2
  410b2c:	bl	404ca0 <memcpy@plt-0x40>
  410b30:	cmp	xzr, x20, asr #3
  410b34:	b.eq	410b60 <__libc_csu_init@@Base+0x68>  // b.none
  410b38:	asr	x20, x20, #3
  410b3c:	mov	x19, #0x0                   	// #0
  410b40:	ldr	x3, [x21, x19, lsl #3]
  410b44:	mov	x2, x24
  410b48:	add	x19, x19, #0x1
  410b4c:	mov	x1, x23
  410b50:	mov	w0, w22
  410b54:	blr	x3
  410b58:	cmp	x20, x19
  410b5c:	b.ne	410b40 <__libc_csu_init@@Base+0x48>  // b.any
  410b60:	ldp	x19, x20, [sp, #16]
  410b64:	ldp	x21, x22, [sp, #32]
  410b68:	ldp	x23, x24, [sp, #48]
  410b6c:	ldp	x29, x30, [sp], #64
  410b70:	ret
  410b74:	nop

0000000000410b78 <__libc_csu_fini@@Base>:
  410b78:	ret

Disassembly of section .fini:

0000000000410b7c <.fini>:
  410b7c:	stp	x29, x30, [sp, #-16]!
  410b80:	mov	x29, sp
  410b84:	ldp	x29, x30, [sp], #16
  410b88:	ret
