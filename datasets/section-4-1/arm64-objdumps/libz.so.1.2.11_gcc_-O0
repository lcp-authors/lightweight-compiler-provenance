
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002368 <.init>:
    2368:	stp	x29, x30, [sp, #-16]!
    236c:	mov	x29, sp
    2370:	bl	2670 <adler32_z@plt+0x10>
    2374:	ldp	x29, x30, [sp], #16
    2378:	ret

Disassembly of section .plt:

0000000000002380 <memcpy@plt-0x20>:
    2380:	stp	x16, x30, [sp, #-16]!
    2384:	adrp	x16, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    2388:	ldr	x17, [x16, #4088]
    238c:	add	x16, x16, #0xff8
    2390:	br	x17
    2394:	nop
    2398:	nop
    239c:	nop

00000000000023a0 <memcpy@plt>:
    23a0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16]
    23a8:	add	x16, x16, #0x0
    23ac:	br	x17

00000000000023b0 <crc32_z@plt>:
    23b0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #8]
    23b8:	add	x16, x16, #0x8
    23bc:	br	x17

00000000000023c0 <gzvprintf@plt>:
    23c0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #16]
    23c8:	add	x16, x16, #0x10
    23cc:	br	x17

00000000000023d0 <gzseek64@plt>:
    23d0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #24]
    23d8:	add	x16, x16, #0x18
    23dc:	br	x17

00000000000023e0 <strlen@plt>:
    23e0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #32]
    23e8:	add	x16, x16, #0x20
    23ec:	br	x17

00000000000023f0 <inflate@plt>:
    23f0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #40]
    23f8:	add	x16, x16, #0x28
    23fc:	br	x17

0000000000002400 <gzclose_r@plt>:
    2400:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #48]
    2408:	add	x16, x16, #0x30
    240c:	br	x17

0000000000002410 <gzgetc@plt>:
    2410:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #56]
    2418:	add	x16, x16, #0x38
    241c:	br	x17

0000000000002420 <__cxa_finalize@plt>:
    2420:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #64]
    2428:	add	x16, x16, #0x40
    242c:	br	x17

0000000000002430 <crc32@plt>:
    2430:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #72]
    2438:	add	x16, x16, #0x48
    243c:	br	x17

0000000000002440 <inflateResetKeep@plt>:
    2440:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #80]
    2448:	add	x16, x16, #0x50
    244c:	br	x17

0000000000002450 <snprintf@plt>:
    2450:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #88]
    2458:	add	x16, x16, #0x58
    245c:	br	x17

0000000000002460 <malloc@plt>:
    2460:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #96]
    2468:	add	x16, x16, #0x60
    246c:	br	x17

0000000000002470 <open@plt>:
    2470:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #104]
    2478:	add	x16, x16, #0x68
    247c:	br	x17

0000000000002480 <deflateReset@plt>:
    2480:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #112]
    2488:	add	x16, x16, #0x70
    248c:	br	x17

0000000000002490 <deflate@plt>:
    2490:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #120]
    2498:	add	x16, x16, #0x78
    249c:	br	x17

00000000000024a0 <memset@plt>:
    24a0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #128]
    24a8:	add	x16, x16, #0x80
    24ac:	br	x17

00000000000024b0 <lseek64@plt>:
    24b0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #136]
    24b8:	add	x16, x16, #0x88
    24bc:	br	x17

00000000000024c0 <gztell64@plt>:
    24c0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #144]
    24c8:	add	x16, x16, #0x90
    24cc:	br	x17

00000000000024d0 <deflateInit2_@plt>:
    24d0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #152]
    24d8:	add	x16, x16, #0x98
    24dc:	br	x17

00000000000024e0 <deflateParams@plt>:
    24e0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #160]
    24e8:	add	x16, x16, #0xa0
    24ec:	br	x17

00000000000024f0 <deflateInit_@plt>:
    24f0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #168]
    24f8:	add	x16, x16, #0xa8
    24fc:	br	x17

0000000000002500 <strerror@plt>:
    2500:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #176]
    2508:	add	x16, x16, #0xb0
    250c:	br	x17

0000000000002510 <close@plt>:
    2510:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #184]
    2518:	add	x16, x16, #0xb8
    251c:	br	x17

0000000000002520 <__gmon_start__@plt>:
    2520:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #192]
    2528:	add	x16, x16, #0xc0
    252c:	br	x17

0000000000002530 <write@plt>:
    2530:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #200]
    2538:	add	x16, x16, #0xc8
    253c:	br	x17

0000000000002540 <uncompress2@plt>:
    2540:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #208]
    2548:	add	x16, x16, #0xd0
    254c:	br	x17

0000000000002550 <inflateEnd@plt>:
    2550:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #216]
    2558:	add	x16, x16, #0xd8
    255c:	br	x17

0000000000002560 <adler32@plt>:
    2560:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #224]
    2568:	add	x16, x16, #0xe0
    256c:	br	x17

0000000000002570 <free@plt>:
    2570:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #232]
    2578:	add	x16, x16, #0xe8
    257c:	br	x17

0000000000002580 <gzclose_w@plt>:
    2580:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #240]
    2588:	add	x16, x16, #0xf0
    258c:	br	x17

0000000000002590 <deflateEnd@plt>:
    2590:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #248]
    2598:	add	x16, x16, #0xf8
    259c:	br	x17

00000000000025a0 <gzrewind@plt>:
    25a0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #256]
    25a8:	add	x16, x16, #0x100
    25ac:	br	x17

00000000000025b0 <gzoffset64@plt>:
    25b0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #264]
    25b8:	add	x16, x16, #0x108
    25bc:	br	x17

00000000000025c0 <inflateInit_@plt>:
    25c0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #272]
    25c8:	add	x16, x16, #0x110
    25cc:	br	x17

00000000000025d0 <compress2@plt>:
    25d0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #280]
    25d8:	add	x16, x16, #0x118
    25dc:	br	x17

00000000000025e0 <read@plt>:
    25e0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #288]
    25e8:	add	x16, x16, #0x120
    25ec:	br	x17

00000000000025f0 <memchr@plt>:
    25f0:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #296]
    25f8:	add	x16, x16, #0x128
    25fc:	br	x17

0000000000002600 <inflateInit2_@plt>:
    2600:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #304]
    2608:	add	x16, x16, #0x130
    260c:	br	x17

0000000000002610 <inflateReset@plt>:
    2610:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #312]
    2618:	add	x16, x16, #0x138
    261c:	br	x17

0000000000002620 <vsnprintf@plt>:
    2620:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #320]
    2628:	add	x16, x16, #0x140
    262c:	br	x17

0000000000002630 <deflateResetKeep@plt>:
    2630:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #328]
    2638:	add	x16, x16, #0x148
    263c:	br	x17

0000000000002640 <inflateReset2@plt>:
    2640:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #336]
    2648:	add	x16, x16, #0x150
    264c:	br	x17

0000000000002650 <__errno_location@plt>:
    2650:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #344]
    2658:	add	x16, x16, #0x158
    265c:	br	x17

0000000000002660 <adler32_z@plt>:
    2660:	adrp	x16, 2f000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #352]
    2668:	add	x16, x16, #0x160
    266c:	br	x17

Disassembly of section .text:

0000000000002670 <adler32_z@@ZLIB_1.2.9-0xd4>:
    2670:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    2674:	ldr	x0, [x0, #4048]
    2678:	cbz	x0, 2680 <adler32_z@plt+0x20>
    267c:	b	2520 <__gmon_start__@plt>
    2680:	ret
    2684:	nop
    2688:	adrp	x0, 2f000 <gzclose_w@@ZLIB_1.2.3.5+0x16190>
    268c:	add	x0, x0, #0x170
    2690:	adrp	x1, 2f000 <gzclose_w@@ZLIB_1.2.3.5+0x16190>
    2694:	add	x1, x1, #0x170
    2698:	cmp	x1, x0
    269c:	b.eq	26b4 <adler32_z@plt+0x54>  // b.none
    26a0:	adrp	x1, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    26a4:	ldr	x1, [x1, #4032]
    26a8:	cbz	x1, 26b4 <adler32_z@plt+0x54>
    26ac:	mov	x16, x1
    26b0:	br	x16
    26b4:	ret
    26b8:	adrp	x0, 2f000 <gzclose_w@@ZLIB_1.2.3.5+0x16190>
    26bc:	add	x0, x0, #0x170
    26c0:	adrp	x1, 2f000 <gzclose_w@@ZLIB_1.2.3.5+0x16190>
    26c4:	add	x1, x1, #0x170
    26c8:	sub	x1, x1, x0
    26cc:	lsr	x2, x1, #63
    26d0:	add	x1, x2, x1, asr #3
    26d4:	cmp	xzr, x1, asr #1
    26d8:	asr	x1, x1, #1
    26dc:	b.eq	26f4 <adler32_z@plt+0x94>  // b.none
    26e0:	adrp	x2, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    26e4:	ldr	x2, [x2, #4064]
    26e8:	cbz	x2, 26f4 <adler32_z@plt+0x94>
    26ec:	mov	x16, x2
    26f0:	br	x16
    26f4:	ret
    26f8:	stp	x29, x30, [sp, #-32]!
    26fc:	mov	x29, sp
    2700:	str	x19, [sp, #16]
    2704:	adrp	x19, 2f000 <gzclose_w@@ZLIB_1.2.3.5+0x16190>
    2708:	ldrb	w0, [x19, #368]
    270c:	cbnz	w0, 2734 <adler32_z@plt+0xd4>
    2710:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    2714:	ldr	x0, [x0, #4040]
    2718:	cbz	x0, 2728 <adler32_z@plt+0xc8>
    271c:	adrp	x0, 2f000 <gzclose_w@@ZLIB_1.2.3.5+0x16190>
    2720:	ldr	x0, [x0, #360]
    2724:	bl	2420 <__cxa_finalize@plt>
    2728:	bl	2688 <adler32_z@plt+0x28>
    272c:	mov	w0, #0x1                   	// #1
    2730:	strb	w0, [x19, #368]
    2734:	ldr	x19, [sp, #16]
    2738:	ldp	x29, x30, [sp], #32
    273c:	ret
    2740:	b	26b8 <adler32_z@plt+0x58>

0000000000002744 <adler32_z@@ZLIB_1.2.9>:
    2744:	sub	sp, sp, #0x30
    2748:	str	x0, [sp, #24]
    274c:	str	x1, [sp, #16]
    2750:	str	x2, [sp, #8]
    2754:	ldr	x0, [sp, #24]
    2758:	lsr	x0, x0, #16
    275c:	and	x0, x0, #0xffff
    2760:	str	x0, [sp, #40]
    2764:	ldr	x0, [sp, #24]
    2768:	and	x0, x0, #0xffff
    276c:	str	x0, [sp, #24]
    2770:	ldr	x0, [sp, #8]
    2774:	cmp	x0, #0x1
    2778:	b.ne	27f8 <adler32_z@@ZLIB_1.2.9+0xb4>  // b.any
    277c:	ldr	x0, [sp, #16]
    2780:	ldrb	w0, [x0]
    2784:	and	x0, x0, #0xff
    2788:	ldr	x1, [sp, #24]
    278c:	add	x0, x1, x0
    2790:	str	x0, [sp, #24]
    2794:	ldr	x1, [sp, #24]
    2798:	mov	x0, #0xfff0                	// #65520
    279c:	cmp	x1, x0
    27a0:	b.ls	27b4 <adler32_z@@ZLIB_1.2.9+0x70>  // b.plast
    27a4:	ldr	x1, [sp, #24]
    27a8:	mov	x0, #0xffffffffffff000f    	// #-65521
    27ac:	add	x0, x1, x0
    27b0:	str	x0, [sp, #24]
    27b4:	ldr	x1, [sp, #40]
    27b8:	ldr	x0, [sp, #24]
    27bc:	add	x0, x1, x0
    27c0:	str	x0, [sp, #40]
    27c4:	ldr	x1, [sp, #40]
    27c8:	mov	x0, #0xfff0                	// #65520
    27cc:	cmp	x1, x0
    27d0:	b.ls	27e4 <adler32_z@@ZLIB_1.2.9+0xa0>  // b.plast
    27d4:	ldr	x1, [sp, #40]
    27d8:	mov	x0, #0xffffffffffff000f    	// #-65521
    27dc:	add	x0, x1, x0
    27e0:	str	x0, [sp, #40]
    27e4:	ldr	x0, [sp, #40]
    27e8:	lsl	x1, x0, #16
    27ec:	ldr	x0, [sp, #24]
    27f0:	orr	x0, x1, x0
    27f4:	b	3038 <adler32_z@@ZLIB_1.2.9+0x8f4>
    27f8:	ldr	x0, [sp, #16]
    27fc:	cmp	x0, #0x0
    2800:	b.ne	280c <adler32_z@@ZLIB_1.2.9+0xc8>  // b.any
    2804:	mov	x0, #0x1                   	// #1
    2808:	b	3038 <adler32_z@@ZLIB_1.2.9+0x8f4>
    280c:	ldr	x0, [sp, #8]
    2810:	cmp	x0, #0xf
    2814:	b.hi	2c58 <adler32_z@@ZLIB_1.2.9+0x514>  // b.pmore
    2818:	b	284c <adler32_z@@ZLIB_1.2.9+0x108>
    281c:	ldr	x0, [sp, #16]
    2820:	add	x1, x0, #0x1
    2824:	str	x1, [sp, #16]
    2828:	ldrb	w0, [x0]
    282c:	and	x0, x0, #0xff
    2830:	ldr	x1, [sp, #24]
    2834:	add	x0, x1, x0
    2838:	str	x0, [sp, #24]
    283c:	ldr	x1, [sp, #40]
    2840:	ldr	x0, [sp, #24]
    2844:	add	x0, x1, x0
    2848:	str	x0, [sp, #40]
    284c:	ldr	x0, [sp, #8]
    2850:	sub	x1, x0, #0x1
    2854:	str	x1, [sp, #8]
    2858:	cmp	x0, #0x0
    285c:	b.ne	281c <adler32_z@@ZLIB_1.2.9+0xd8>  // b.any
    2860:	ldr	x1, [sp, #24]
    2864:	mov	x0, #0xfff0                	// #65520
    2868:	cmp	x1, x0
    286c:	b.ls	2880 <adler32_z@@ZLIB_1.2.9+0x13c>  // b.plast
    2870:	ldr	x1, [sp, #24]
    2874:	mov	x0, #0xffffffffffff000f    	// #-65521
    2878:	add	x0, x1, x0
    287c:	str	x0, [sp, #24]
    2880:	ldr	x1, [sp, #40]
    2884:	mov	x0, #0xc5cd                	// #50637
    2888:	movk	x0, #0xd2f, lsl #16
    288c:	movk	x0, #0xe1, lsl #32
    2890:	movk	x0, #0xf, lsl #48
    2894:	umulh	x0, x1, x0
    2898:	sub	x2, x1, x0
    289c:	lsr	x2, x2, #1
    28a0:	add	x0, x0, x2
    28a4:	lsr	x2, x0, #15
    28a8:	mov	x0, x2
    28ac:	lsl	x0, x0, #12
    28b0:	sub	x0, x0, x2
    28b4:	lsl	x0, x0, #4
    28b8:	add	x0, x0, x2
    28bc:	sub	x0, x1, x0
    28c0:	str	x0, [sp, #40]
    28c4:	ldr	x0, [sp, #40]
    28c8:	lsl	x1, x0, #16
    28cc:	ldr	x0, [sp, #24]
    28d0:	orr	x0, x1, x0
    28d4:	b	3038 <adler32_z@@ZLIB_1.2.9+0x8f4>
    28d8:	ldr	x1, [sp, #8]
    28dc:	mov	x0, #0xffffffffffffea50    	// #-5552
    28e0:	add	x0, x1, x0
    28e4:	str	x0, [sp, #8]
    28e8:	mov	w0, #0x15b                 	// #347
    28ec:	str	w0, [sp, #36]
    28f0:	ldr	x0, [sp, #16]
    28f4:	ldrb	w0, [x0]
    28f8:	and	x0, x0, #0xff
    28fc:	ldr	x1, [sp, #24]
    2900:	add	x0, x1, x0
    2904:	str	x0, [sp, #24]
    2908:	ldr	x1, [sp, #40]
    290c:	ldr	x0, [sp, #24]
    2910:	add	x0, x1, x0
    2914:	str	x0, [sp, #40]
    2918:	ldr	x0, [sp, #16]
    291c:	add	x0, x0, #0x1
    2920:	ldrb	w0, [x0]
    2924:	and	x0, x0, #0xff
    2928:	ldr	x1, [sp, #24]
    292c:	add	x0, x1, x0
    2930:	str	x0, [sp, #24]
    2934:	ldr	x1, [sp, #40]
    2938:	ldr	x0, [sp, #24]
    293c:	add	x0, x1, x0
    2940:	str	x0, [sp, #40]
    2944:	ldr	x0, [sp, #16]
    2948:	add	x0, x0, #0x2
    294c:	ldrb	w0, [x0]
    2950:	and	x0, x0, #0xff
    2954:	ldr	x1, [sp, #24]
    2958:	add	x0, x1, x0
    295c:	str	x0, [sp, #24]
    2960:	ldr	x1, [sp, #40]
    2964:	ldr	x0, [sp, #24]
    2968:	add	x0, x1, x0
    296c:	str	x0, [sp, #40]
    2970:	ldr	x0, [sp, #16]
    2974:	add	x0, x0, #0x3
    2978:	ldrb	w0, [x0]
    297c:	and	x0, x0, #0xff
    2980:	ldr	x1, [sp, #24]
    2984:	add	x0, x1, x0
    2988:	str	x0, [sp, #24]
    298c:	ldr	x1, [sp, #40]
    2990:	ldr	x0, [sp, #24]
    2994:	add	x0, x1, x0
    2998:	str	x0, [sp, #40]
    299c:	ldr	x0, [sp, #16]
    29a0:	add	x0, x0, #0x4
    29a4:	ldrb	w0, [x0]
    29a8:	and	x0, x0, #0xff
    29ac:	ldr	x1, [sp, #24]
    29b0:	add	x0, x1, x0
    29b4:	str	x0, [sp, #24]
    29b8:	ldr	x1, [sp, #40]
    29bc:	ldr	x0, [sp, #24]
    29c0:	add	x0, x1, x0
    29c4:	str	x0, [sp, #40]
    29c8:	ldr	x0, [sp, #16]
    29cc:	add	x0, x0, #0x5
    29d0:	ldrb	w0, [x0]
    29d4:	and	x0, x0, #0xff
    29d8:	ldr	x1, [sp, #24]
    29dc:	add	x0, x1, x0
    29e0:	str	x0, [sp, #24]
    29e4:	ldr	x1, [sp, #40]
    29e8:	ldr	x0, [sp, #24]
    29ec:	add	x0, x1, x0
    29f0:	str	x0, [sp, #40]
    29f4:	ldr	x0, [sp, #16]
    29f8:	add	x0, x0, #0x6
    29fc:	ldrb	w0, [x0]
    2a00:	and	x0, x0, #0xff
    2a04:	ldr	x1, [sp, #24]
    2a08:	add	x0, x1, x0
    2a0c:	str	x0, [sp, #24]
    2a10:	ldr	x1, [sp, #40]
    2a14:	ldr	x0, [sp, #24]
    2a18:	add	x0, x1, x0
    2a1c:	str	x0, [sp, #40]
    2a20:	ldr	x0, [sp, #16]
    2a24:	add	x0, x0, #0x7
    2a28:	ldrb	w0, [x0]
    2a2c:	and	x0, x0, #0xff
    2a30:	ldr	x1, [sp, #24]
    2a34:	add	x0, x1, x0
    2a38:	str	x0, [sp, #24]
    2a3c:	ldr	x1, [sp, #40]
    2a40:	ldr	x0, [sp, #24]
    2a44:	add	x0, x1, x0
    2a48:	str	x0, [sp, #40]
    2a4c:	ldr	x0, [sp, #16]
    2a50:	add	x0, x0, #0x8
    2a54:	ldrb	w0, [x0]
    2a58:	and	x0, x0, #0xff
    2a5c:	ldr	x1, [sp, #24]
    2a60:	add	x0, x1, x0
    2a64:	str	x0, [sp, #24]
    2a68:	ldr	x1, [sp, #40]
    2a6c:	ldr	x0, [sp, #24]
    2a70:	add	x0, x1, x0
    2a74:	str	x0, [sp, #40]
    2a78:	ldr	x0, [sp, #16]
    2a7c:	add	x0, x0, #0x9
    2a80:	ldrb	w0, [x0]
    2a84:	and	x0, x0, #0xff
    2a88:	ldr	x1, [sp, #24]
    2a8c:	add	x0, x1, x0
    2a90:	str	x0, [sp, #24]
    2a94:	ldr	x1, [sp, #40]
    2a98:	ldr	x0, [sp, #24]
    2a9c:	add	x0, x1, x0
    2aa0:	str	x0, [sp, #40]
    2aa4:	ldr	x0, [sp, #16]
    2aa8:	add	x0, x0, #0xa
    2aac:	ldrb	w0, [x0]
    2ab0:	and	x0, x0, #0xff
    2ab4:	ldr	x1, [sp, #24]
    2ab8:	add	x0, x1, x0
    2abc:	str	x0, [sp, #24]
    2ac0:	ldr	x1, [sp, #40]
    2ac4:	ldr	x0, [sp, #24]
    2ac8:	add	x0, x1, x0
    2acc:	str	x0, [sp, #40]
    2ad0:	ldr	x0, [sp, #16]
    2ad4:	add	x0, x0, #0xb
    2ad8:	ldrb	w0, [x0]
    2adc:	and	x0, x0, #0xff
    2ae0:	ldr	x1, [sp, #24]
    2ae4:	add	x0, x1, x0
    2ae8:	str	x0, [sp, #24]
    2aec:	ldr	x1, [sp, #40]
    2af0:	ldr	x0, [sp, #24]
    2af4:	add	x0, x1, x0
    2af8:	str	x0, [sp, #40]
    2afc:	ldr	x0, [sp, #16]
    2b00:	add	x0, x0, #0xc
    2b04:	ldrb	w0, [x0]
    2b08:	and	x0, x0, #0xff
    2b0c:	ldr	x1, [sp, #24]
    2b10:	add	x0, x1, x0
    2b14:	str	x0, [sp, #24]
    2b18:	ldr	x1, [sp, #40]
    2b1c:	ldr	x0, [sp, #24]
    2b20:	add	x0, x1, x0
    2b24:	str	x0, [sp, #40]
    2b28:	ldr	x0, [sp, #16]
    2b2c:	add	x0, x0, #0xd
    2b30:	ldrb	w0, [x0]
    2b34:	and	x0, x0, #0xff
    2b38:	ldr	x1, [sp, #24]
    2b3c:	add	x0, x1, x0
    2b40:	str	x0, [sp, #24]
    2b44:	ldr	x1, [sp, #40]
    2b48:	ldr	x0, [sp, #24]
    2b4c:	add	x0, x1, x0
    2b50:	str	x0, [sp, #40]
    2b54:	ldr	x0, [sp, #16]
    2b58:	add	x0, x0, #0xe
    2b5c:	ldrb	w0, [x0]
    2b60:	and	x0, x0, #0xff
    2b64:	ldr	x1, [sp, #24]
    2b68:	add	x0, x1, x0
    2b6c:	str	x0, [sp, #24]
    2b70:	ldr	x1, [sp, #40]
    2b74:	ldr	x0, [sp, #24]
    2b78:	add	x0, x1, x0
    2b7c:	str	x0, [sp, #40]
    2b80:	ldr	x0, [sp, #16]
    2b84:	add	x0, x0, #0xf
    2b88:	ldrb	w0, [x0]
    2b8c:	and	x0, x0, #0xff
    2b90:	ldr	x1, [sp, #24]
    2b94:	add	x0, x1, x0
    2b98:	str	x0, [sp, #24]
    2b9c:	ldr	x1, [sp, #40]
    2ba0:	ldr	x0, [sp, #24]
    2ba4:	add	x0, x1, x0
    2ba8:	str	x0, [sp, #40]
    2bac:	ldr	x0, [sp, #16]
    2bb0:	add	x0, x0, #0x10
    2bb4:	str	x0, [sp, #16]
    2bb8:	ldr	w0, [sp, #36]
    2bbc:	sub	w0, w0, #0x1
    2bc0:	str	w0, [sp, #36]
    2bc4:	ldr	w0, [sp, #36]
    2bc8:	cmp	w0, #0x0
    2bcc:	b.ne	28f0 <adler32_z@@ZLIB_1.2.9+0x1ac>  // b.any
    2bd0:	ldr	x1, [sp, #24]
    2bd4:	mov	x0, #0xc5cd                	// #50637
    2bd8:	movk	x0, #0xd2f, lsl #16
    2bdc:	movk	x0, #0xe1, lsl #32
    2be0:	movk	x0, #0xf, lsl #48
    2be4:	umulh	x0, x1, x0
    2be8:	sub	x2, x1, x0
    2bec:	lsr	x2, x2, #1
    2bf0:	add	x0, x0, x2
    2bf4:	lsr	x2, x0, #15
    2bf8:	mov	x0, x2
    2bfc:	lsl	x0, x0, #12
    2c00:	sub	x0, x0, x2
    2c04:	lsl	x0, x0, #4
    2c08:	add	x0, x0, x2
    2c0c:	sub	x0, x1, x0
    2c10:	str	x0, [sp, #24]
    2c14:	ldr	x1, [sp, #40]
    2c18:	mov	x0, #0xc5cd                	// #50637
    2c1c:	movk	x0, #0xd2f, lsl #16
    2c20:	movk	x0, #0xe1, lsl #32
    2c24:	movk	x0, #0xf, lsl #48
    2c28:	umulh	x0, x1, x0
    2c2c:	sub	x2, x1, x0
    2c30:	lsr	x2, x2, #1
    2c34:	add	x0, x0, x2
    2c38:	lsr	x2, x0, #15
    2c3c:	mov	x0, x2
    2c40:	lsl	x0, x0, #12
    2c44:	sub	x0, x0, x2
    2c48:	lsl	x0, x0, #4
    2c4c:	add	x0, x0, x2
    2c50:	sub	x0, x1, x0
    2c54:	str	x0, [sp, #40]
    2c58:	ldr	x1, [sp, #8]
    2c5c:	mov	x0, #0x15af                	// #5551
    2c60:	cmp	x1, x0
    2c64:	b.hi	28d8 <adler32_z@@ZLIB_1.2.9+0x194>  // b.pmore
    2c68:	ldr	x0, [sp, #8]
    2c6c:	cmp	x0, #0x0
    2c70:	b.eq	3028 <adler32_z@@ZLIB_1.2.9+0x8e4>  // b.none
    2c74:	b	2f4c <adler32_z@@ZLIB_1.2.9+0x808>
    2c78:	ldr	x0, [sp, #8]
    2c7c:	sub	x0, x0, #0x10
    2c80:	str	x0, [sp, #8]
    2c84:	ldr	x0, [sp, #16]
    2c88:	ldrb	w0, [x0]
    2c8c:	and	x0, x0, #0xff
    2c90:	ldr	x1, [sp, #24]
    2c94:	add	x0, x1, x0
    2c98:	str	x0, [sp, #24]
    2c9c:	ldr	x1, [sp, #40]
    2ca0:	ldr	x0, [sp, #24]
    2ca4:	add	x0, x1, x0
    2ca8:	str	x0, [sp, #40]
    2cac:	ldr	x0, [sp, #16]
    2cb0:	add	x0, x0, #0x1
    2cb4:	ldrb	w0, [x0]
    2cb8:	and	x0, x0, #0xff
    2cbc:	ldr	x1, [sp, #24]
    2cc0:	add	x0, x1, x0
    2cc4:	str	x0, [sp, #24]
    2cc8:	ldr	x1, [sp, #40]
    2ccc:	ldr	x0, [sp, #24]
    2cd0:	add	x0, x1, x0
    2cd4:	str	x0, [sp, #40]
    2cd8:	ldr	x0, [sp, #16]
    2cdc:	add	x0, x0, #0x2
    2ce0:	ldrb	w0, [x0]
    2ce4:	and	x0, x0, #0xff
    2ce8:	ldr	x1, [sp, #24]
    2cec:	add	x0, x1, x0
    2cf0:	str	x0, [sp, #24]
    2cf4:	ldr	x1, [sp, #40]
    2cf8:	ldr	x0, [sp, #24]
    2cfc:	add	x0, x1, x0
    2d00:	str	x0, [sp, #40]
    2d04:	ldr	x0, [sp, #16]
    2d08:	add	x0, x0, #0x3
    2d0c:	ldrb	w0, [x0]
    2d10:	and	x0, x0, #0xff
    2d14:	ldr	x1, [sp, #24]
    2d18:	add	x0, x1, x0
    2d1c:	str	x0, [sp, #24]
    2d20:	ldr	x1, [sp, #40]
    2d24:	ldr	x0, [sp, #24]
    2d28:	add	x0, x1, x0
    2d2c:	str	x0, [sp, #40]
    2d30:	ldr	x0, [sp, #16]
    2d34:	add	x0, x0, #0x4
    2d38:	ldrb	w0, [x0]
    2d3c:	and	x0, x0, #0xff
    2d40:	ldr	x1, [sp, #24]
    2d44:	add	x0, x1, x0
    2d48:	str	x0, [sp, #24]
    2d4c:	ldr	x1, [sp, #40]
    2d50:	ldr	x0, [sp, #24]
    2d54:	add	x0, x1, x0
    2d58:	str	x0, [sp, #40]
    2d5c:	ldr	x0, [sp, #16]
    2d60:	add	x0, x0, #0x5
    2d64:	ldrb	w0, [x0]
    2d68:	and	x0, x0, #0xff
    2d6c:	ldr	x1, [sp, #24]
    2d70:	add	x0, x1, x0
    2d74:	str	x0, [sp, #24]
    2d78:	ldr	x1, [sp, #40]
    2d7c:	ldr	x0, [sp, #24]
    2d80:	add	x0, x1, x0
    2d84:	str	x0, [sp, #40]
    2d88:	ldr	x0, [sp, #16]
    2d8c:	add	x0, x0, #0x6
    2d90:	ldrb	w0, [x0]
    2d94:	and	x0, x0, #0xff
    2d98:	ldr	x1, [sp, #24]
    2d9c:	add	x0, x1, x0
    2da0:	str	x0, [sp, #24]
    2da4:	ldr	x1, [sp, #40]
    2da8:	ldr	x0, [sp, #24]
    2dac:	add	x0, x1, x0
    2db0:	str	x0, [sp, #40]
    2db4:	ldr	x0, [sp, #16]
    2db8:	add	x0, x0, #0x7
    2dbc:	ldrb	w0, [x0]
    2dc0:	and	x0, x0, #0xff
    2dc4:	ldr	x1, [sp, #24]
    2dc8:	add	x0, x1, x0
    2dcc:	str	x0, [sp, #24]
    2dd0:	ldr	x1, [sp, #40]
    2dd4:	ldr	x0, [sp, #24]
    2dd8:	add	x0, x1, x0
    2ddc:	str	x0, [sp, #40]
    2de0:	ldr	x0, [sp, #16]
    2de4:	add	x0, x0, #0x8
    2de8:	ldrb	w0, [x0]
    2dec:	and	x0, x0, #0xff
    2df0:	ldr	x1, [sp, #24]
    2df4:	add	x0, x1, x0
    2df8:	str	x0, [sp, #24]
    2dfc:	ldr	x1, [sp, #40]
    2e00:	ldr	x0, [sp, #24]
    2e04:	add	x0, x1, x0
    2e08:	str	x0, [sp, #40]
    2e0c:	ldr	x0, [sp, #16]
    2e10:	add	x0, x0, #0x9
    2e14:	ldrb	w0, [x0]
    2e18:	and	x0, x0, #0xff
    2e1c:	ldr	x1, [sp, #24]
    2e20:	add	x0, x1, x0
    2e24:	str	x0, [sp, #24]
    2e28:	ldr	x1, [sp, #40]
    2e2c:	ldr	x0, [sp, #24]
    2e30:	add	x0, x1, x0
    2e34:	str	x0, [sp, #40]
    2e38:	ldr	x0, [sp, #16]
    2e3c:	add	x0, x0, #0xa
    2e40:	ldrb	w0, [x0]
    2e44:	and	x0, x0, #0xff
    2e48:	ldr	x1, [sp, #24]
    2e4c:	add	x0, x1, x0
    2e50:	str	x0, [sp, #24]
    2e54:	ldr	x1, [sp, #40]
    2e58:	ldr	x0, [sp, #24]
    2e5c:	add	x0, x1, x0
    2e60:	str	x0, [sp, #40]
    2e64:	ldr	x0, [sp, #16]
    2e68:	add	x0, x0, #0xb
    2e6c:	ldrb	w0, [x0]
    2e70:	and	x0, x0, #0xff
    2e74:	ldr	x1, [sp, #24]
    2e78:	add	x0, x1, x0
    2e7c:	str	x0, [sp, #24]
    2e80:	ldr	x1, [sp, #40]
    2e84:	ldr	x0, [sp, #24]
    2e88:	add	x0, x1, x0
    2e8c:	str	x0, [sp, #40]
    2e90:	ldr	x0, [sp, #16]
    2e94:	add	x0, x0, #0xc
    2e98:	ldrb	w0, [x0]
    2e9c:	and	x0, x0, #0xff
    2ea0:	ldr	x1, [sp, #24]
    2ea4:	add	x0, x1, x0
    2ea8:	str	x0, [sp, #24]
    2eac:	ldr	x1, [sp, #40]
    2eb0:	ldr	x0, [sp, #24]
    2eb4:	add	x0, x1, x0
    2eb8:	str	x0, [sp, #40]
    2ebc:	ldr	x0, [sp, #16]
    2ec0:	add	x0, x0, #0xd
    2ec4:	ldrb	w0, [x0]
    2ec8:	and	x0, x0, #0xff
    2ecc:	ldr	x1, [sp, #24]
    2ed0:	add	x0, x1, x0
    2ed4:	str	x0, [sp, #24]
    2ed8:	ldr	x1, [sp, #40]
    2edc:	ldr	x0, [sp, #24]
    2ee0:	add	x0, x1, x0
    2ee4:	str	x0, [sp, #40]
    2ee8:	ldr	x0, [sp, #16]
    2eec:	add	x0, x0, #0xe
    2ef0:	ldrb	w0, [x0]
    2ef4:	and	x0, x0, #0xff
    2ef8:	ldr	x1, [sp, #24]
    2efc:	add	x0, x1, x0
    2f00:	str	x0, [sp, #24]
    2f04:	ldr	x1, [sp, #40]
    2f08:	ldr	x0, [sp, #24]
    2f0c:	add	x0, x1, x0
    2f10:	str	x0, [sp, #40]
    2f14:	ldr	x0, [sp, #16]
    2f18:	add	x0, x0, #0xf
    2f1c:	ldrb	w0, [x0]
    2f20:	and	x0, x0, #0xff
    2f24:	ldr	x1, [sp, #24]
    2f28:	add	x0, x1, x0
    2f2c:	str	x0, [sp, #24]
    2f30:	ldr	x1, [sp, #40]
    2f34:	ldr	x0, [sp, #24]
    2f38:	add	x0, x1, x0
    2f3c:	str	x0, [sp, #40]
    2f40:	ldr	x0, [sp, #16]
    2f44:	add	x0, x0, #0x10
    2f48:	str	x0, [sp, #16]
    2f4c:	ldr	x0, [sp, #8]
    2f50:	cmp	x0, #0xf
    2f54:	b.hi	2c78 <adler32_z@@ZLIB_1.2.9+0x534>  // b.pmore
    2f58:	b	2f8c <adler32_z@@ZLIB_1.2.9+0x848>
    2f5c:	ldr	x0, [sp, #16]
    2f60:	add	x1, x0, #0x1
    2f64:	str	x1, [sp, #16]
    2f68:	ldrb	w0, [x0]
    2f6c:	and	x0, x0, #0xff
    2f70:	ldr	x1, [sp, #24]
    2f74:	add	x0, x1, x0
    2f78:	str	x0, [sp, #24]
    2f7c:	ldr	x1, [sp, #40]
    2f80:	ldr	x0, [sp, #24]
    2f84:	add	x0, x1, x0
    2f88:	str	x0, [sp, #40]
    2f8c:	ldr	x0, [sp, #8]
    2f90:	sub	x1, x0, #0x1
    2f94:	str	x1, [sp, #8]
    2f98:	cmp	x0, #0x0
    2f9c:	b.ne	2f5c <adler32_z@@ZLIB_1.2.9+0x818>  // b.any
    2fa0:	ldr	x1, [sp, #24]
    2fa4:	mov	x0, #0xc5cd                	// #50637
    2fa8:	movk	x0, #0xd2f, lsl #16
    2fac:	movk	x0, #0xe1, lsl #32
    2fb0:	movk	x0, #0xf, lsl #48
    2fb4:	umulh	x0, x1, x0
    2fb8:	sub	x2, x1, x0
    2fbc:	lsr	x2, x2, #1
    2fc0:	add	x0, x0, x2
    2fc4:	lsr	x2, x0, #15
    2fc8:	mov	x0, x2
    2fcc:	lsl	x0, x0, #12
    2fd0:	sub	x0, x0, x2
    2fd4:	lsl	x0, x0, #4
    2fd8:	add	x0, x0, x2
    2fdc:	sub	x0, x1, x0
    2fe0:	str	x0, [sp, #24]
    2fe4:	ldr	x1, [sp, #40]
    2fe8:	mov	x0, #0xc5cd                	// #50637
    2fec:	movk	x0, #0xd2f, lsl #16
    2ff0:	movk	x0, #0xe1, lsl #32
    2ff4:	movk	x0, #0xf, lsl #48
    2ff8:	umulh	x0, x1, x0
    2ffc:	sub	x2, x1, x0
    3000:	lsr	x2, x2, #1
    3004:	add	x0, x0, x2
    3008:	lsr	x2, x0, #15
    300c:	mov	x0, x2
    3010:	lsl	x0, x0, #12
    3014:	sub	x0, x0, x2
    3018:	lsl	x0, x0, #4
    301c:	add	x0, x0, x2
    3020:	sub	x0, x1, x0
    3024:	str	x0, [sp, #40]
    3028:	ldr	x0, [sp, #40]
    302c:	lsl	x1, x0, #16
    3030:	ldr	x0, [sp, #24]
    3034:	orr	x0, x1, x0
    3038:	add	sp, sp, #0x30
    303c:	ret

0000000000003040 <adler32@@Base>:
    3040:	stp	x29, x30, [sp, #-48]!
    3044:	mov	x29, sp
    3048:	str	x0, [sp, #40]
    304c:	str	x1, [sp, #32]
    3050:	str	w2, [sp, #28]
    3054:	ldr	w0, [sp, #28]
    3058:	mov	x2, x0
    305c:	ldr	x1, [sp, #32]
    3060:	ldr	x0, [sp, #40]
    3064:	bl	2660 <adler32_z@plt>
    3068:	ldp	x29, x30, [sp], #48
    306c:	ret
    3070:	sub	sp, sp, #0x40
    3074:	str	x0, [sp, #24]
    3078:	str	x1, [sp, #16]
    307c:	str	x2, [sp, #8]
    3080:	ldr	x0, [sp, #8]
    3084:	cmp	x0, #0x0
    3088:	b.ge	3094 <adler32@@Base+0x54>  // b.tcont
    308c:	mov	x0, #0xffffffff            	// #4294967295
    3090:	b	322c <adler32@@Base+0x1ec>
    3094:	ldr	x1, [sp, #8]
    3098:	mov	x0, #0xe2e7                	// #58087
    309c:	movk	x0, #0x8697, lsl #16
    30a0:	movk	x0, #0x8070, lsl #32
    30a4:	movk	x0, #0x8007, lsl #48
    30a8:	smulh	x0, x1, x0
    30ac:	add	x0, x0, x1
    30b0:	asr	x2, x0, #15
    30b4:	asr	x0, x1, #63
    30b8:	sub	x2, x2, x0
    30bc:	mov	x0, x2
    30c0:	lsl	x0, x0, #12
    30c4:	sub	x0, x0, x2
    30c8:	lsl	x0, x0, #4
    30cc:	add	x0, x0, x2
    30d0:	sub	x0, x1, x0
    30d4:	str	x0, [sp, #8]
    30d8:	ldr	x0, [sp, #8]
    30dc:	str	w0, [sp, #44]
    30e0:	ldr	x0, [sp, #24]
    30e4:	and	x0, x0, #0xffff
    30e8:	str	x0, [sp, #56]
    30ec:	ldr	w0, [sp, #44]
    30f0:	ldr	x1, [sp, #56]
    30f4:	mul	x0, x1, x0
    30f8:	str	x0, [sp, #48]
    30fc:	ldr	x1, [sp, #48]
    3100:	mov	x0, #0xc5cd                	// #50637
    3104:	movk	x0, #0xd2f, lsl #16
    3108:	movk	x0, #0xe1, lsl #32
    310c:	movk	x0, #0xf, lsl #48
    3110:	umulh	x0, x1, x0
    3114:	sub	x2, x1, x0
    3118:	lsr	x2, x2, #1
    311c:	add	x0, x0, x2
    3120:	lsr	x2, x0, #15
    3124:	mov	x0, x2
    3128:	lsl	x0, x0, #12
    312c:	sub	x0, x0, x2
    3130:	lsl	x0, x0, #4
    3134:	add	x0, x0, x2
    3138:	sub	x0, x1, x0
    313c:	str	x0, [sp, #48]
    3140:	ldr	x0, [sp, #16]
    3144:	and	x1, x0, #0xffff
    3148:	ldr	x0, [sp, #56]
    314c:	add	x1, x1, x0
    3150:	mov	x0, #0xfff0                	// #65520
    3154:	add	x0, x1, x0
    3158:	str	x0, [sp, #56]
    315c:	ldr	x0, [sp, #24]
    3160:	lsr	x0, x0, #16
    3164:	and	x1, x0, #0xffff
    3168:	ldr	x0, [sp, #16]
    316c:	lsr	x0, x0, #16
    3170:	and	x0, x0, #0xffff
    3174:	add	x1, x1, x0
    3178:	ldr	w0, [sp, #44]
    317c:	sub	x1, x1, x0
    3180:	ldr	x0, [sp, #48]
    3184:	add	x1, x1, x0
    3188:	mov	x0, #0xfff1                	// #65521
    318c:	add	x0, x1, x0
    3190:	str	x0, [sp, #48]
    3194:	ldr	x1, [sp, #56]
    3198:	mov	x0, #0xfff0                	// #65520
    319c:	cmp	x1, x0
    31a0:	b.ls	31b4 <adler32@@Base+0x174>  // b.plast
    31a4:	ldr	x1, [sp, #56]
    31a8:	mov	x0, #0xffffffffffff000f    	// #-65521
    31ac:	add	x0, x1, x0
    31b0:	str	x0, [sp, #56]
    31b4:	ldr	x1, [sp, #56]
    31b8:	mov	x0, #0xfff0                	// #65520
    31bc:	cmp	x1, x0
    31c0:	b.ls	31d4 <adler32@@Base+0x194>  // b.plast
    31c4:	ldr	x1, [sp, #56]
    31c8:	mov	x0, #0xffffffffffff000f    	// #-65521
    31cc:	add	x0, x1, x0
    31d0:	str	x0, [sp, #56]
    31d4:	ldr	x1, [sp, #48]
    31d8:	mov	x0, #0xffe1                	// #65505
    31dc:	movk	x0, #0x1, lsl #16
    31e0:	cmp	x1, x0
    31e4:	b.ls	31fc <adler32@@Base+0x1bc>  // b.plast
    31e8:	ldr	x1, [sp, #48]
    31ec:	mov	x0, #0xffffffffffff001e    	// #-65506
    31f0:	movk	x0, #0xfffe, lsl #16
    31f4:	add	x0, x1, x0
    31f8:	str	x0, [sp, #48]
    31fc:	ldr	x1, [sp, #48]
    3200:	mov	x0, #0xfff0                	// #65520
    3204:	cmp	x1, x0
    3208:	b.ls	321c <adler32@@Base+0x1dc>  // b.plast
    320c:	ldr	x1, [sp, #48]
    3210:	mov	x0, #0xffffffffffff000f    	// #-65521
    3214:	add	x0, x1, x0
    3218:	str	x0, [sp, #48]
    321c:	ldr	x0, [sp, #48]
    3220:	lsl	x1, x0, #16
    3224:	ldr	x0, [sp, #56]
    3228:	orr	x0, x1, x0
    322c:	add	sp, sp, #0x40
    3230:	ret

0000000000003234 <adler32_combine@@ZLIB_1.2.2>:
    3234:	stp	x29, x30, [sp, #-48]!
    3238:	mov	x29, sp
    323c:	str	x0, [sp, #40]
    3240:	str	x1, [sp, #32]
    3244:	str	x2, [sp, #24]
    3248:	ldr	x2, [sp, #24]
    324c:	ldr	x1, [sp, #32]
    3250:	ldr	x0, [sp, #40]
    3254:	bl	3070 <adler32@@Base+0x30>
    3258:	ldp	x29, x30, [sp], #48
    325c:	ret

0000000000003260 <adler32_combine64@@ZLIB_1.2.3.3>:
    3260:	stp	x29, x30, [sp, #-48]!
    3264:	mov	x29, sp
    3268:	str	x0, [sp, #40]
    326c:	str	x1, [sp, #32]
    3270:	str	x2, [sp, #24]
    3274:	ldr	x2, [sp, #24]
    3278:	ldr	x1, [sp, #32]
    327c:	ldr	x0, [sp, #40]
    3280:	bl	3070 <adler32@@Base+0x30>
    3284:	ldp	x29, x30, [sp], #48
    3288:	ret

000000000000328c <get_crc_table@@Base>:
    328c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3290:	add	x0, x0, #0xfb8
    3294:	ret

0000000000003298 <crc32_z@@ZLIB_1.2.9>:
    3298:	stp	x29, x30, [sp, #-64]!
    329c:	mov	x29, sp
    32a0:	str	x0, [sp, #40]
    32a4:	str	x1, [sp, #32]
    32a8:	str	x2, [sp, #24]
    32ac:	ldr	x0, [sp, #32]
    32b0:	cmp	x0, #0x0
    32b4:	b.ne	32c0 <crc32_z@@ZLIB_1.2.9+0x28>  // b.any
    32b8:	mov	x0, #0x0                   	// #0
    32bc:	b	32fc <crc32_z@@ZLIB_1.2.9+0x64>
    32c0:	mov	w0, #0x1                   	// #1
    32c4:	str	w0, [sp, #60]
    32c8:	add	x0, sp, #0x3c
    32cc:	ldrb	w0, [x0]
    32d0:	cmp	w0, #0x0
    32d4:	b.eq	32ec <crc32_z@@ZLIB_1.2.9+0x54>  // b.none
    32d8:	ldr	x2, [sp, #24]
    32dc:	ldr	x1, [sp, #32]
    32e0:	ldr	x0, [sp, #40]
    32e4:	bl	3334 <crc32@@Base+0x30>
    32e8:	b	32fc <crc32_z@@ZLIB_1.2.9+0x64>
    32ec:	ldr	x2, [sp, #24]
    32f0:	ldr	x1, [sp, #32]
    32f4:	ldr	x0, [sp, #40]
    32f8:	bl	38d0 <crc32@@Base+0x5cc>
    32fc:	ldp	x29, x30, [sp], #64
    3300:	ret

0000000000003304 <crc32@@Base>:
    3304:	stp	x29, x30, [sp, #-48]!
    3308:	mov	x29, sp
    330c:	str	x0, [sp, #40]
    3310:	str	x1, [sp, #32]
    3314:	str	w2, [sp, #28]
    3318:	ldr	w0, [sp, #28]
    331c:	mov	x2, x0
    3320:	ldr	x1, [sp, #32]
    3324:	ldr	x0, [sp, #40]
    3328:	bl	23b0 <crc32_z@plt>
    332c:	ldp	x29, x30, [sp], #48
    3330:	ret
    3334:	stp	x19, x20, [sp, #-48]!
    3338:	str	x0, [sp, #40]
    333c:	str	x1, [sp, #32]
    3340:	str	x2, [sp, #24]
    3344:	ldr	x0, [sp, #40]
    3348:	mov	w19, w0
    334c:	mvn	w19, w19
    3350:	b	3390 <crc32@@Base+0x8c>
    3354:	ldr	x0, [sp, #32]
    3358:	add	x1, x0, #0x1
    335c:	str	x1, [sp, #32]
    3360:	ldrb	w0, [x0]
    3364:	eor	w0, w19, w0
    3368:	and	w1, w0, #0xff
    336c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3370:	add	x0, x0, #0xfb8
    3374:	mov	w1, w1
    3378:	ldr	w1, [x0, x1, lsl #2]
    337c:	lsr	w0, w19, #8
    3380:	eor	w19, w1, w0
    3384:	ldr	x0, [sp, #24]
    3388:	sub	x0, x0, #0x1
    338c:	str	x0, [sp, #24]
    3390:	ldr	x0, [sp, #24]
    3394:	cmp	x0, #0x0
    3398:	b.eq	33ac <crc32@@Base+0xa8>  // b.none
    339c:	ldr	x0, [sp, #32]
    33a0:	and	x0, x0, #0x3
    33a4:	cmp	x0, #0x0
    33a8:	b.ne	3354 <crc32@@Base+0x50>  // b.any
    33ac:	ldr	x20, [sp, #32]
    33b0:	b	37c0 <crc32@@Base+0x4bc>
    33b4:	mov	x0, x20
    33b8:	add	x20, x0, #0x4
    33bc:	ldr	w0, [x0]
    33c0:	eor	w19, w19, w0
    33c4:	and	w1, w19, #0xff
    33c8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    33cc:	add	x0, x0, #0xfb8
    33d0:	mov	w1, w1
    33d4:	add	x1, x1, #0x300
    33d8:	ldr	w1, [x0, x1, lsl #2]
    33dc:	lsr	w0, w19, #8
    33e0:	and	w2, w0, #0xff
    33e4:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    33e8:	add	x0, x0, #0xfb8
    33ec:	mov	w2, w2
    33f0:	add	x2, x2, #0x200
    33f4:	ldr	w0, [x0, x2, lsl #2]
    33f8:	eor	w1, w1, w0
    33fc:	lsr	w0, w19, #16
    3400:	and	w2, w0, #0xff
    3404:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3408:	add	x0, x0, #0xfb8
    340c:	mov	w2, w2
    3410:	add	x2, x2, #0x100
    3414:	ldr	w0, [x0, x2, lsl #2]
    3418:	eor	w1, w1, w0
    341c:	lsr	w2, w19, #24
    3420:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3424:	add	x0, x0, #0xfb8
    3428:	mov	w2, w2
    342c:	ldr	w0, [x0, x2, lsl #2]
    3430:	eor	w19, w1, w0
    3434:	mov	x0, x20
    3438:	add	x20, x0, #0x4
    343c:	ldr	w0, [x0]
    3440:	eor	w19, w19, w0
    3444:	and	w1, w19, #0xff
    3448:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    344c:	add	x0, x0, #0xfb8
    3450:	mov	w1, w1
    3454:	add	x1, x1, #0x300
    3458:	ldr	w1, [x0, x1, lsl #2]
    345c:	lsr	w0, w19, #8
    3460:	and	w2, w0, #0xff
    3464:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3468:	add	x0, x0, #0xfb8
    346c:	mov	w2, w2
    3470:	add	x2, x2, #0x200
    3474:	ldr	w0, [x0, x2, lsl #2]
    3478:	eor	w1, w1, w0
    347c:	lsr	w0, w19, #16
    3480:	and	w2, w0, #0xff
    3484:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3488:	add	x0, x0, #0xfb8
    348c:	mov	w2, w2
    3490:	add	x2, x2, #0x100
    3494:	ldr	w0, [x0, x2, lsl #2]
    3498:	eor	w1, w1, w0
    349c:	lsr	w2, w19, #24
    34a0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    34a4:	add	x0, x0, #0xfb8
    34a8:	mov	w2, w2
    34ac:	ldr	w0, [x0, x2, lsl #2]
    34b0:	eor	w19, w1, w0
    34b4:	mov	x0, x20
    34b8:	add	x20, x0, #0x4
    34bc:	ldr	w0, [x0]
    34c0:	eor	w19, w19, w0
    34c4:	and	w1, w19, #0xff
    34c8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    34cc:	add	x0, x0, #0xfb8
    34d0:	mov	w1, w1
    34d4:	add	x1, x1, #0x300
    34d8:	ldr	w1, [x0, x1, lsl #2]
    34dc:	lsr	w0, w19, #8
    34e0:	and	w2, w0, #0xff
    34e4:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    34e8:	add	x0, x0, #0xfb8
    34ec:	mov	w2, w2
    34f0:	add	x2, x2, #0x200
    34f4:	ldr	w0, [x0, x2, lsl #2]
    34f8:	eor	w1, w1, w0
    34fc:	lsr	w0, w19, #16
    3500:	and	w2, w0, #0xff
    3504:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3508:	add	x0, x0, #0xfb8
    350c:	mov	w2, w2
    3510:	add	x2, x2, #0x100
    3514:	ldr	w0, [x0, x2, lsl #2]
    3518:	eor	w1, w1, w0
    351c:	lsr	w2, w19, #24
    3520:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3524:	add	x0, x0, #0xfb8
    3528:	mov	w2, w2
    352c:	ldr	w0, [x0, x2, lsl #2]
    3530:	eor	w19, w1, w0
    3534:	mov	x0, x20
    3538:	add	x20, x0, #0x4
    353c:	ldr	w0, [x0]
    3540:	eor	w19, w19, w0
    3544:	and	w1, w19, #0xff
    3548:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    354c:	add	x0, x0, #0xfb8
    3550:	mov	w1, w1
    3554:	add	x1, x1, #0x300
    3558:	ldr	w1, [x0, x1, lsl #2]
    355c:	lsr	w0, w19, #8
    3560:	and	w2, w0, #0xff
    3564:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3568:	add	x0, x0, #0xfb8
    356c:	mov	w2, w2
    3570:	add	x2, x2, #0x200
    3574:	ldr	w0, [x0, x2, lsl #2]
    3578:	eor	w1, w1, w0
    357c:	lsr	w0, w19, #16
    3580:	and	w2, w0, #0xff
    3584:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3588:	add	x0, x0, #0xfb8
    358c:	mov	w2, w2
    3590:	add	x2, x2, #0x100
    3594:	ldr	w0, [x0, x2, lsl #2]
    3598:	eor	w1, w1, w0
    359c:	lsr	w2, w19, #24
    35a0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    35a4:	add	x0, x0, #0xfb8
    35a8:	mov	w2, w2
    35ac:	ldr	w0, [x0, x2, lsl #2]
    35b0:	eor	w19, w1, w0
    35b4:	mov	x0, x20
    35b8:	add	x20, x0, #0x4
    35bc:	ldr	w0, [x0]
    35c0:	eor	w19, w19, w0
    35c4:	and	w1, w19, #0xff
    35c8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    35cc:	add	x0, x0, #0xfb8
    35d0:	mov	w1, w1
    35d4:	add	x1, x1, #0x300
    35d8:	ldr	w1, [x0, x1, lsl #2]
    35dc:	lsr	w0, w19, #8
    35e0:	and	w2, w0, #0xff
    35e4:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    35e8:	add	x0, x0, #0xfb8
    35ec:	mov	w2, w2
    35f0:	add	x2, x2, #0x200
    35f4:	ldr	w0, [x0, x2, lsl #2]
    35f8:	eor	w1, w1, w0
    35fc:	lsr	w0, w19, #16
    3600:	and	w2, w0, #0xff
    3604:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3608:	add	x0, x0, #0xfb8
    360c:	mov	w2, w2
    3610:	add	x2, x2, #0x100
    3614:	ldr	w0, [x0, x2, lsl #2]
    3618:	eor	w1, w1, w0
    361c:	lsr	w2, w19, #24
    3620:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3624:	add	x0, x0, #0xfb8
    3628:	mov	w2, w2
    362c:	ldr	w0, [x0, x2, lsl #2]
    3630:	eor	w19, w1, w0
    3634:	mov	x0, x20
    3638:	add	x20, x0, #0x4
    363c:	ldr	w0, [x0]
    3640:	eor	w19, w19, w0
    3644:	and	w1, w19, #0xff
    3648:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    364c:	add	x0, x0, #0xfb8
    3650:	mov	w1, w1
    3654:	add	x1, x1, #0x300
    3658:	ldr	w1, [x0, x1, lsl #2]
    365c:	lsr	w0, w19, #8
    3660:	and	w2, w0, #0xff
    3664:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3668:	add	x0, x0, #0xfb8
    366c:	mov	w2, w2
    3670:	add	x2, x2, #0x200
    3674:	ldr	w0, [x0, x2, lsl #2]
    3678:	eor	w1, w1, w0
    367c:	lsr	w0, w19, #16
    3680:	and	w2, w0, #0xff
    3684:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3688:	add	x0, x0, #0xfb8
    368c:	mov	w2, w2
    3690:	add	x2, x2, #0x100
    3694:	ldr	w0, [x0, x2, lsl #2]
    3698:	eor	w1, w1, w0
    369c:	lsr	w2, w19, #24
    36a0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    36a4:	add	x0, x0, #0xfb8
    36a8:	mov	w2, w2
    36ac:	ldr	w0, [x0, x2, lsl #2]
    36b0:	eor	w19, w1, w0
    36b4:	mov	x0, x20
    36b8:	add	x20, x0, #0x4
    36bc:	ldr	w0, [x0]
    36c0:	eor	w19, w19, w0
    36c4:	and	w1, w19, #0xff
    36c8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    36cc:	add	x0, x0, #0xfb8
    36d0:	mov	w1, w1
    36d4:	add	x1, x1, #0x300
    36d8:	ldr	w1, [x0, x1, lsl #2]
    36dc:	lsr	w0, w19, #8
    36e0:	and	w2, w0, #0xff
    36e4:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    36e8:	add	x0, x0, #0xfb8
    36ec:	mov	w2, w2
    36f0:	add	x2, x2, #0x200
    36f4:	ldr	w0, [x0, x2, lsl #2]
    36f8:	eor	w1, w1, w0
    36fc:	lsr	w0, w19, #16
    3700:	and	w2, w0, #0xff
    3704:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3708:	add	x0, x0, #0xfb8
    370c:	mov	w2, w2
    3710:	add	x2, x2, #0x100
    3714:	ldr	w0, [x0, x2, lsl #2]
    3718:	eor	w1, w1, w0
    371c:	lsr	w2, w19, #24
    3720:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3724:	add	x0, x0, #0xfb8
    3728:	mov	w2, w2
    372c:	ldr	w0, [x0, x2, lsl #2]
    3730:	eor	w19, w1, w0
    3734:	mov	x0, x20
    3738:	add	x20, x0, #0x4
    373c:	ldr	w0, [x0]
    3740:	eor	w19, w19, w0
    3744:	and	w1, w19, #0xff
    3748:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    374c:	add	x0, x0, #0xfb8
    3750:	mov	w1, w1
    3754:	add	x1, x1, #0x300
    3758:	ldr	w1, [x0, x1, lsl #2]
    375c:	lsr	w0, w19, #8
    3760:	and	w2, w0, #0xff
    3764:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3768:	add	x0, x0, #0xfb8
    376c:	mov	w2, w2
    3770:	add	x2, x2, #0x200
    3774:	ldr	w0, [x0, x2, lsl #2]
    3778:	eor	w1, w1, w0
    377c:	lsr	w0, w19, #16
    3780:	and	w2, w0, #0xff
    3784:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3788:	add	x0, x0, #0xfb8
    378c:	mov	w2, w2
    3790:	add	x2, x2, #0x100
    3794:	ldr	w0, [x0, x2, lsl #2]
    3798:	eor	w1, w1, w0
    379c:	lsr	w2, w19, #24
    37a0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    37a4:	add	x0, x0, #0xfb8
    37a8:	mov	w2, w2
    37ac:	ldr	w0, [x0, x2, lsl #2]
    37b0:	eor	w19, w1, w0
    37b4:	ldr	x0, [sp, #24]
    37b8:	sub	x0, x0, #0x20
    37bc:	str	x0, [sp, #24]
    37c0:	ldr	x0, [sp, #24]
    37c4:	cmp	x0, #0x1f
    37c8:	b.hi	33b4 <crc32@@Base+0xb0>  // b.pmore
    37cc:	b	385c <crc32@@Base+0x558>
    37d0:	mov	x0, x20
    37d4:	add	x20, x0, #0x4
    37d8:	ldr	w0, [x0]
    37dc:	eor	w19, w19, w0
    37e0:	and	w1, w19, #0xff
    37e4:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    37e8:	add	x0, x0, #0xfb8
    37ec:	mov	w1, w1
    37f0:	add	x1, x1, #0x300
    37f4:	ldr	w1, [x0, x1, lsl #2]
    37f8:	lsr	w0, w19, #8
    37fc:	and	w2, w0, #0xff
    3800:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3804:	add	x0, x0, #0xfb8
    3808:	mov	w2, w2
    380c:	add	x2, x2, #0x200
    3810:	ldr	w0, [x0, x2, lsl #2]
    3814:	eor	w1, w1, w0
    3818:	lsr	w0, w19, #16
    381c:	and	w2, w0, #0xff
    3820:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3824:	add	x0, x0, #0xfb8
    3828:	mov	w2, w2
    382c:	add	x2, x2, #0x100
    3830:	ldr	w0, [x0, x2, lsl #2]
    3834:	eor	w1, w1, w0
    3838:	lsr	w2, w19, #24
    383c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3840:	add	x0, x0, #0xfb8
    3844:	mov	w2, w2
    3848:	ldr	w0, [x0, x2, lsl #2]
    384c:	eor	w19, w1, w0
    3850:	ldr	x0, [sp, #24]
    3854:	sub	x0, x0, #0x4
    3858:	str	x0, [sp, #24]
    385c:	ldr	x0, [sp, #24]
    3860:	cmp	x0, #0x3
    3864:	b.hi	37d0 <crc32@@Base+0x4cc>  // b.pmore
    3868:	str	x20, [sp, #32]
    386c:	ldr	x0, [sp, #24]
    3870:	cmp	x0, #0x0
    3874:	b.eq	38c0 <crc32@@Base+0x5bc>  // b.none
    3878:	ldr	x0, [sp, #32]
    387c:	add	x1, x0, #0x1
    3880:	str	x1, [sp, #32]
    3884:	ldrb	w0, [x0]
    3888:	eor	w0, w19, w0
    388c:	and	w1, w0, #0xff
    3890:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3894:	add	x0, x0, #0xfb8
    3898:	mov	w1, w1
    389c:	ldr	w1, [x0, x1, lsl #2]
    38a0:	lsr	w0, w19, #8
    38a4:	eor	w19, w1, w0
    38a8:	ldr	x0, [sp, #24]
    38ac:	sub	x0, x0, #0x1
    38b0:	str	x0, [sp, #24]
    38b4:	ldr	x0, [sp, #24]
    38b8:	cmp	x0, #0x0
    38bc:	b.ne	3878 <crc32@@Base+0x574>  // b.any
    38c0:	mvn	w19, w19
    38c4:	mov	w0, w19
    38c8:	ldp	x19, x20, [sp], #48
    38cc:	ret
    38d0:	stp	x19, x20, [sp, #-48]!
    38d4:	str	x0, [sp, #40]
    38d8:	str	x1, [sp, #32]
    38dc:	str	x2, [sp, #24]
    38e0:	ldr	x0, [sp, #40]
    38e4:	lsr	w1, w0, #24
    38e8:	ldr	x0, [sp, #40]
    38ec:	lsr	w0, w0, #8
    38f0:	and	w0, w0, #0xff00
    38f4:	add	w1, w1, w0
    38f8:	ldr	x0, [sp, #40]
    38fc:	lsl	w0, w0, #8
    3900:	and	w0, w0, #0xff0000
    3904:	add	w1, w1, w0
    3908:	ldr	x0, [sp, #40]
    390c:	lsl	w0, w0, #24
    3910:	add	w19, w1, w0
    3914:	mvn	w19, w19
    3918:	b	395c <crc32@@Base+0x658>
    391c:	lsr	w1, w19, #24
    3920:	ldr	x0, [sp, #32]
    3924:	add	x2, x0, #0x1
    3928:	str	x2, [sp, #32]
    392c:	ldrb	w0, [x0]
    3930:	eor	w1, w1, w0
    3934:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3938:	add	x0, x0, #0xfb8
    393c:	mov	w1, w1
    3940:	add	x1, x1, #0x400
    3944:	ldr	w1, [x0, x1, lsl #2]
    3948:	lsl	w0, w19, #8
    394c:	eor	w19, w1, w0
    3950:	ldr	x0, [sp, #24]
    3954:	sub	x0, x0, #0x1
    3958:	str	x0, [sp, #24]
    395c:	ldr	x0, [sp, #24]
    3960:	cmp	x0, #0x0
    3964:	b.eq	3978 <crc32@@Base+0x674>  // b.none
    3968:	ldr	x0, [sp, #32]
    396c:	and	x0, x0, #0x3
    3970:	cmp	x0, #0x0
    3974:	b.ne	391c <crc32@@Base+0x618>  // b.any
    3978:	ldr	x20, [sp, #32]
    397c:	b	3dac <crc32@@Base+0xaa8>
    3980:	mov	x0, x20
    3984:	add	x20, x0, #0x4
    3988:	ldr	w0, [x0]
    398c:	eor	w19, w19, w0
    3990:	and	w1, w19, #0xff
    3994:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3998:	add	x0, x0, #0xfb8
    399c:	mov	w1, w1
    39a0:	add	x1, x1, #0x400
    39a4:	ldr	w1, [x0, x1, lsl #2]
    39a8:	lsr	w0, w19, #8
    39ac:	and	w2, w0, #0xff
    39b0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    39b4:	add	x0, x0, #0xfb8
    39b8:	mov	w2, w2
    39bc:	add	x2, x2, #0x500
    39c0:	ldr	w0, [x0, x2, lsl #2]
    39c4:	eor	w1, w1, w0
    39c8:	lsr	w0, w19, #16
    39cc:	and	w2, w0, #0xff
    39d0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    39d4:	add	x0, x0, #0xfb8
    39d8:	mov	w2, w2
    39dc:	add	x2, x2, #0x600
    39e0:	ldr	w0, [x0, x2, lsl #2]
    39e4:	eor	w1, w1, w0
    39e8:	lsr	w2, w19, #24
    39ec:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    39f0:	add	x0, x0, #0xfb8
    39f4:	mov	w2, w2
    39f8:	add	x2, x2, #0x700
    39fc:	ldr	w0, [x0, x2, lsl #2]
    3a00:	eor	w19, w1, w0
    3a04:	mov	x0, x20
    3a08:	add	x20, x0, #0x4
    3a0c:	ldr	w0, [x0]
    3a10:	eor	w19, w19, w0
    3a14:	and	w1, w19, #0xff
    3a18:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3a1c:	add	x0, x0, #0xfb8
    3a20:	mov	w1, w1
    3a24:	add	x1, x1, #0x400
    3a28:	ldr	w1, [x0, x1, lsl #2]
    3a2c:	lsr	w0, w19, #8
    3a30:	and	w2, w0, #0xff
    3a34:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3a38:	add	x0, x0, #0xfb8
    3a3c:	mov	w2, w2
    3a40:	add	x2, x2, #0x500
    3a44:	ldr	w0, [x0, x2, lsl #2]
    3a48:	eor	w1, w1, w0
    3a4c:	lsr	w0, w19, #16
    3a50:	and	w2, w0, #0xff
    3a54:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3a58:	add	x0, x0, #0xfb8
    3a5c:	mov	w2, w2
    3a60:	add	x2, x2, #0x600
    3a64:	ldr	w0, [x0, x2, lsl #2]
    3a68:	eor	w1, w1, w0
    3a6c:	lsr	w2, w19, #24
    3a70:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3a74:	add	x0, x0, #0xfb8
    3a78:	mov	w2, w2
    3a7c:	add	x2, x2, #0x700
    3a80:	ldr	w0, [x0, x2, lsl #2]
    3a84:	eor	w19, w1, w0
    3a88:	mov	x0, x20
    3a8c:	add	x20, x0, #0x4
    3a90:	ldr	w0, [x0]
    3a94:	eor	w19, w19, w0
    3a98:	and	w1, w19, #0xff
    3a9c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3aa0:	add	x0, x0, #0xfb8
    3aa4:	mov	w1, w1
    3aa8:	add	x1, x1, #0x400
    3aac:	ldr	w1, [x0, x1, lsl #2]
    3ab0:	lsr	w0, w19, #8
    3ab4:	and	w2, w0, #0xff
    3ab8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3abc:	add	x0, x0, #0xfb8
    3ac0:	mov	w2, w2
    3ac4:	add	x2, x2, #0x500
    3ac8:	ldr	w0, [x0, x2, lsl #2]
    3acc:	eor	w1, w1, w0
    3ad0:	lsr	w0, w19, #16
    3ad4:	and	w2, w0, #0xff
    3ad8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3adc:	add	x0, x0, #0xfb8
    3ae0:	mov	w2, w2
    3ae4:	add	x2, x2, #0x600
    3ae8:	ldr	w0, [x0, x2, lsl #2]
    3aec:	eor	w1, w1, w0
    3af0:	lsr	w2, w19, #24
    3af4:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3af8:	add	x0, x0, #0xfb8
    3afc:	mov	w2, w2
    3b00:	add	x2, x2, #0x700
    3b04:	ldr	w0, [x0, x2, lsl #2]
    3b08:	eor	w19, w1, w0
    3b0c:	mov	x0, x20
    3b10:	add	x20, x0, #0x4
    3b14:	ldr	w0, [x0]
    3b18:	eor	w19, w19, w0
    3b1c:	and	w1, w19, #0xff
    3b20:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3b24:	add	x0, x0, #0xfb8
    3b28:	mov	w1, w1
    3b2c:	add	x1, x1, #0x400
    3b30:	ldr	w1, [x0, x1, lsl #2]
    3b34:	lsr	w0, w19, #8
    3b38:	and	w2, w0, #0xff
    3b3c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3b40:	add	x0, x0, #0xfb8
    3b44:	mov	w2, w2
    3b48:	add	x2, x2, #0x500
    3b4c:	ldr	w0, [x0, x2, lsl #2]
    3b50:	eor	w1, w1, w0
    3b54:	lsr	w0, w19, #16
    3b58:	and	w2, w0, #0xff
    3b5c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3b60:	add	x0, x0, #0xfb8
    3b64:	mov	w2, w2
    3b68:	add	x2, x2, #0x600
    3b6c:	ldr	w0, [x0, x2, lsl #2]
    3b70:	eor	w1, w1, w0
    3b74:	lsr	w2, w19, #24
    3b78:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3b7c:	add	x0, x0, #0xfb8
    3b80:	mov	w2, w2
    3b84:	add	x2, x2, #0x700
    3b88:	ldr	w0, [x0, x2, lsl #2]
    3b8c:	eor	w19, w1, w0
    3b90:	mov	x0, x20
    3b94:	add	x20, x0, #0x4
    3b98:	ldr	w0, [x0]
    3b9c:	eor	w19, w19, w0
    3ba0:	and	w1, w19, #0xff
    3ba4:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3ba8:	add	x0, x0, #0xfb8
    3bac:	mov	w1, w1
    3bb0:	add	x1, x1, #0x400
    3bb4:	ldr	w1, [x0, x1, lsl #2]
    3bb8:	lsr	w0, w19, #8
    3bbc:	and	w2, w0, #0xff
    3bc0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3bc4:	add	x0, x0, #0xfb8
    3bc8:	mov	w2, w2
    3bcc:	add	x2, x2, #0x500
    3bd0:	ldr	w0, [x0, x2, lsl #2]
    3bd4:	eor	w1, w1, w0
    3bd8:	lsr	w0, w19, #16
    3bdc:	and	w2, w0, #0xff
    3be0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3be4:	add	x0, x0, #0xfb8
    3be8:	mov	w2, w2
    3bec:	add	x2, x2, #0x600
    3bf0:	ldr	w0, [x0, x2, lsl #2]
    3bf4:	eor	w1, w1, w0
    3bf8:	lsr	w2, w19, #24
    3bfc:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3c00:	add	x0, x0, #0xfb8
    3c04:	mov	w2, w2
    3c08:	add	x2, x2, #0x700
    3c0c:	ldr	w0, [x0, x2, lsl #2]
    3c10:	eor	w19, w1, w0
    3c14:	mov	x0, x20
    3c18:	add	x20, x0, #0x4
    3c1c:	ldr	w0, [x0]
    3c20:	eor	w19, w19, w0
    3c24:	and	w1, w19, #0xff
    3c28:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3c2c:	add	x0, x0, #0xfb8
    3c30:	mov	w1, w1
    3c34:	add	x1, x1, #0x400
    3c38:	ldr	w1, [x0, x1, lsl #2]
    3c3c:	lsr	w0, w19, #8
    3c40:	and	w2, w0, #0xff
    3c44:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3c48:	add	x0, x0, #0xfb8
    3c4c:	mov	w2, w2
    3c50:	add	x2, x2, #0x500
    3c54:	ldr	w0, [x0, x2, lsl #2]
    3c58:	eor	w1, w1, w0
    3c5c:	lsr	w0, w19, #16
    3c60:	and	w2, w0, #0xff
    3c64:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3c68:	add	x0, x0, #0xfb8
    3c6c:	mov	w2, w2
    3c70:	add	x2, x2, #0x600
    3c74:	ldr	w0, [x0, x2, lsl #2]
    3c78:	eor	w1, w1, w0
    3c7c:	lsr	w2, w19, #24
    3c80:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3c84:	add	x0, x0, #0xfb8
    3c88:	mov	w2, w2
    3c8c:	add	x2, x2, #0x700
    3c90:	ldr	w0, [x0, x2, lsl #2]
    3c94:	eor	w19, w1, w0
    3c98:	mov	x0, x20
    3c9c:	add	x20, x0, #0x4
    3ca0:	ldr	w0, [x0]
    3ca4:	eor	w19, w19, w0
    3ca8:	and	w1, w19, #0xff
    3cac:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3cb0:	add	x0, x0, #0xfb8
    3cb4:	mov	w1, w1
    3cb8:	add	x1, x1, #0x400
    3cbc:	ldr	w1, [x0, x1, lsl #2]
    3cc0:	lsr	w0, w19, #8
    3cc4:	and	w2, w0, #0xff
    3cc8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3ccc:	add	x0, x0, #0xfb8
    3cd0:	mov	w2, w2
    3cd4:	add	x2, x2, #0x500
    3cd8:	ldr	w0, [x0, x2, lsl #2]
    3cdc:	eor	w1, w1, w0
    3ce0:	lsr	w0, w19, #16
    3ce4:	and	w2, w0, #0xff
    3ce8:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3cec:	add	x0, x0, #0xfb8
    3cf0:	mov	w2, w2
    3cf4:	add	x2, x2, #0x600
    3cf8:	ldr	w0, [x0, x2, lsl #2]
    3cfc:	eor	w1, w1, w0
    3d00:	lsr	w2, w19, #24
    3d04:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3d08:	add	x0, x0, #0xfb8
    3d0c:	mov	w2, w2
    3d10:	add	x2, x2, #0x700
    3d14:	ldr	w0, [x0, x2, lsl #2]
    3d18:	eor	w19, w1, w0
    3d1c:	mov	x0, x20
    3d20:	add	x20, x0, #0x4
    3d24:	ldr	w0, [x0]
    3d28:	eor	w19, w19, w0
    3d2c:	and	w1, w19, #0xff
    3d30:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3d34:	add	x0, x0, #0xfb8
    3d38:	mov	w1, w1
    3d3c:	add	x1, x1, #0x400
    3d40:	ldr	w1, [x0, x1, lsl #2]
    3d44:	lsr	w0, w19, #8
    3d48:	and	w2, w0, #0xff
    3d4c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3d50:	add	x0, x0, #0xfb8
    3d54:	mov	w2, w2
    3d58:	add	x2, x2, #0x500
    3d5c:	ldr	w0, [x0, x2, lsl #2]
    3d60:	eor	w1, w1, w0
    3d64:	lsr	w0, w19, #16
    3d68:	and	w2, w0, #0xff
    3d6c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3d70:	add	x0, x0, #0xfb8
    3d74:	mov	w2, w2
    3d78:	add	x2, x2, #0x600
    3d7c:	ldr	w0, [x0, x2, lsl #2]
    3d80:	eor	w1, w1, w0
    3d84:	lsr	w2, w19, #24
    3d88:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3d8c:	add	x0, x0, #0xfb8
    3d90:	mov	w2, w2
    3d94:	add	x2, x2, #0x700
    3d98:	ldr	w0, [x0, x2, lsl #2]
    3d9c:	eor	w19, w1, w0
    3da0:	ldr	x0, [sp, #24]
    3da4:	sub	x0, x0, #0x20
    3da8:	str	x0, [sp, #24]
    3dac:	ldr	x0, [sp, #24]
    3db0:	cmp	x0, #0x1f
    3db4:	b.hi	3980 <crc32@@Base+0x67c>  // b.pmore
    3db8:	b	3e4c <crc32@@Base+0xb48>
    3dbc:	mov	x0, x20
    3dc0:	add	x20, x0, #0x4
    3dc4:	ldr	w0, [x0]
    3dc8:	eor	w19, w19, w0
    3dcc:	and	w1, w19, #0xff
    3dd0:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3dd4:	add	x0, x0, #0xfb8
    3dd8:	mov	w1, w1
    3ddc:	add	x1, x1, #0x400
    3de0:	ldr	w1, [x0, x1, lsl #2]
    3de4:	lsr	w0, w19, #8
    3de8:	and	w2, w0, #0xff
    3dec:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3df0:	add	x0, x0, #0xfb8
    3df4:	mov	w2, w2
    3df8:	add	x2, x2, #0x500
    3dfc:	ldr	w0, [x0, x2, lsl #2]
    3e00:	eor	w1, w1, w0
    3e04:	lsr	w0, w19, #16
    3e08:	and	w2, w0, #0xff
    3e0c:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3e10:	add	x0, x0, #0xfb8
    3e14:	mov	w2, w2
    3e18:	add	x2, x2, #0x600
    3e1c:	ldr	w0, [x0, x2, lsl #2]
    3e20:	eor	w1, w1, w0
    3e24:	lsr	w2, w19, #24
    3e28:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3e2c:	add	x0, x0, #0xfb8
    3e30:	mov	w2, w2
    3e34:	add	x2, x2, #0x700
    3e38:	ldr	w0, [x0, x2, lsl #2]
    3e3c:	eor	w19, w1, w0
    3e40:	ldr	x0, [sp, #24]
    3e44:	sub	x0, x0, #0x4
    3e48:	str	x0, [sp, #24]
    3e4c:	ldr	x0, [sp, #24]
    3e50:	cmp	x0, #0x3
    3e54:	b.hi	3dbc <crc32@@Base+0xab8>  // b.pmore
    3e58:	str	x20, [sp, #32]
    3e5c:	ldr	x0, [sp, #24]
    3e60:	cmp	x0, #0x0
    3e64:	b.eq	3eb4 <crc32@@Base+0xbb0>  // b.none
    3e68:	lsr	w1, w19, #24
    3e6c:	ldr	x0, [sp, #32]
    3e70:	add	x2, x0, #0x1
    3e74:	str	x2, [sp, #32]
    3e78:	ldrb	w0, [x0]
    3e7c:	eor	w1, w1, w0
    3e80:	adrp	x0, 18000 <gzclose_r@@ZLIB_1.2.3.5+0x408>
    3e84:	add	x0, x0, #0xfb8
    3e88:	mov	w1, w1
    3e8c:	add	x1, x1, #0x400
    3e90:	ldr	w1, [x0, x1, lsl #2]
    3e94:	lsl	w0, w19, #8
    3e98:	eor	w19, w1, w0
    3e9c:	ldr	x0, [sp, #24]
    3ea0:	sub	x0, x0, #0x1
    3ea4:	str	x0, [sp, #24]
    3ea8:	ldr	x0, [sp, #24]
    3eac:	cmp	x0, #0x0
    3eb0:	b.ne	3e68 <crc32@@Base+0xb64>  // b.any
    3eb4:	mvn	w19, w19
    3eb8:	lsr	w1, w19, #24
    3ebc:	lsr	w0, w19, #8
    3ec0:	and	w0, w0, #0xff00
    3ec4:	add	w1, w1, w0
    3ec8:	lsl	w0, w19, #8
    3ecc:	and	w0, w0, #0xff0000
    3ed0:	add	w1, w1, w0
    3ed4:	lsl	w0, w19, #24
    3ed8:	add	w0, w1, w0
    3edc:	mov	w0, w0
    3ee0:	ldp	x19, x20, [sp], #48
    3ee4:	ret
    3ee8:	sub	sp, sp, #0x20
    3eec:	str	x0, [sp, #8]
    3ef0:	str	x1, [sp]
    3ef4:	str	xzr, [sp, #24]
    3ef8:	b	3f38 <crc32@@Base+0xc34>
    3efc:	ldr	x0, [sp]
    3f00:	and	x0, x0, #0x1
    3f04:	cmp	x0, #0x0
    3f08:	b.eq	3f20 <crc32@@Base+0xc1c>  // b.none
    3f0c:	ldr	x0, [sp, #8]
    3f10:	ldr	x0, [x0]
    3f14:	ldr	x1, [sp, #24]
    3f18:	eor	x0, x1, x0
    3f1c:	str	x0, [sp, #24]
    3f20:	ldr	x0, [sp]
    3f24:	lsr	x0, x0, #1
    3f28:	str	x0, [sp]
    3f2c:	ldr	x0, [sp, #8]
    3f30:	add	x0, x0, #0x8
    3f34:	str	x0, [sp, #8]
    3f38:	ldr	x0, [sp]
    3f3c:	cmp	x0, #0x0
    3f40:	b.ne	3efc <crc32@@Base+0xbf8>  // b.any
    3f44:	ldr	x0, [sp, #24]
    3f48:	add	sp, sp, #0x20
    3f4c:	ret
    3f50:	stp	x29, x30, [sp, #-64]!
    3f54:	mov	x29, sp
    3f58:	str	x19, [sp, #16]
    3f5c:	str	x0, [sp, #40]
    3f60:	str	x1, [sp, #32]
    3f64:	str	wzr, [sp, #60]
    3f68:	b	3fac <crc32@@Base+0xca8>
    3f6c:	ldrsw	x0, [sp, #60]
    3f70:	lsl	x0, x0, #3
    3f74:	ldr	x1, [sp, #32]
    3f78:	add	x0, x1, x0
    3f7c:	ldr	x2, [x0]
    3f80:	ldrsw	x0, [sp, #60]
    3f84:	lsl	x0, x0, #3
    3f88:	ldr	x1, [sp, #40]
    3f8c:	add	x19, x1, x0
    3f90:	mov	x1, x2
    3f94:	ldr	x0, [sp, #32]
    3f98:	bl	3ee8 <crc32@@Base+0xbe4>
    3f9c:	str	x0, [x19]
    3fa0:	ldr	w0, [sp, #60]
    3fa4:	add	w0, w0, #0x1
    3fa8:	str	w0, [sp, #60]
    3fac:	ldr	w0, [sp, #60]
    3fb0:	cmp	w0, #0x1f
    3fb4:	b.le	3f6c <crc32@@Base+0xc68>
    3fb8:	nop
    3fbc:	nop
    3fc0:	ldr	x19, [sp, #16]
    3fc4:	ldp	x29, x30, [sp], #64
    3fc8:	ret
    3fcc:	sub	sp, sp, #0x240
    3fd0:	stp	x29, x30, [sp]
    3fd4:	mov	x29, sp
    3fd8:	str	x0, [sp, #40]
    3fdc:	str	x1, [sp, #32]
    3fe0:	str	x2, [sp, #24]
    3fe4:	ldr	x0, [sp, #24]
    3fe8:	cmp	x0, #0x0
    3fec:	b.gt	3ff8 <crc32@@Base+0xcf4>
    3ff0:	ldr	x0, [sp, #40]
    3ff4:	b	410c <crc32@@Base+0xe08>
    3ff8:	mov	x0, #0x8320                	// #33568
    3ffc:	movk	x0, #0xedb8, lsl #16
    4000:	str	x0, [sp, #48]
    4004:	mov	x0, #0x1                   	// #1
    4008:	str	x0, [sp, #560]
    400c:	mov	w0, #0x1                   	// #1
    4010:	str	w0, [sp, #572]
    4014:	b	4044 <crc32@@Base+0xd40>
    4018:	ldrsw	x0, [sp, #572]
    401c:	lsl	x0, x0, #3
    4020:	add	x1, sp, #0x30
    4024:	ldr	x2, [sp, #560]
    4028:	str	x2, [x1, x0]
    402c:	ldr	x0, [sp, #560]
    4030:	lsl	x0, x0, #1
    4034:	str	x0, [sp, #560]
    4038:	ldr	w0, [sp, #572]
    403c:	add	w0, w0, #0x1
    4040:	str	w0, [sp, #572]
    4044:	ldr	w0, [sp, #572]
    4048:	cmp	w0, #0x1f
    404c:	b.le	4018 <crc32@@Base+0xd14>
    4050:	add	x1, sp, #0x30
    4054:	add	x0, sp, #0x130
    4058:	bl	3f50 <crc32@@Base+0xc4c>
    405c:	add	x1, sp, #0x130
    4060:	add	x0, sp, #0x30
    4064:	bl	3f50 <crc32@@Base+0xc4c>
    4068:	add	x1, sp, #0x30
    406c:	add	x0, sp, #0x130
    4070:	bl	3f50 <crc32@@Base+0xc4c>
    4074:	ldr	x0, [sp, #24]
    4078:	and	x0, x0, #0x1
    407c:	cmp	x0, #0x0
    4080:	b.eq	4094 <crc32@@Base+0xd90>  // b.none
    4084:	add	x0, sp, #0x130
    4088:	ldr	x1, [sp, #40]
    408c:	bl	3ee8 <crc32@@Base+0xbe4>
    4090:	str	x0, [sp, #40]
    4094:	ldr	x0, [sp, #24]
    4098:	asr	x0, x0, #1
    409c:	str	x0, [sp, #24]
    40a0:	ldr	x0, [sp, #24]
    40a4:	cmp	x0, #0x0
    40a8:	b.eq	40f4 <crc32@@Base+0xdf0>  // b.none
    40ac:	add	x1, sp, #0x130
    40b0:	add	x0, sp, #0x30
    40b4:	bl	3f50 <crc32@@Base+0xc4c>
    40b8:	ldr	x0, [sp, #24]
    40bc:	and	x0, x0, #0x1
    40c0:	cmp	x0, #0x0
    40c4:	b.eq	40d8 <crc32@@Base+0xdd4>  // b.none
    40c8:	add	x0, sp, #0x30
    40cc:	ldr	x1, [sp, #40]
    40d0:	bl	3ee8 <crc32@@Base+0xbe4>
    40d4:	str	x0, [sp, #40]
    40d8:	ldr	x0, [sp, #24]
    40dc:	asr	x0, x0, #1
    40e0:	str	x0, [sp, #24]
    40e4:	ldr	x0, [sp, #24]
    40e8:	cmp	x0, #0x0
    40ec:	b.ne	4068 <crc32@@Base+0xd64>  // b.any
    40f0:	b	40f8 <crc32@@Base+0xdf4>
    40f4:	nop
    40f8:	ldr	x1, [sp, #40]
    40fc:	ldr	x0, [sp, #32]
    4100:	eor	x0, x1, x0
    4104:	str	x0, [sp, #40]
    4108:	ldr	x0, [sp, #40]
    410c:	ldp	x29, x30, [sp]
    4110:	add	sp, sp, #0x240
    4114:	ret

0000000000004118 <crc32_combine@@ZLIB_1.2.2>:
    4118:	stp	x29, x30, [sp, #-48]!
    411c:	mov	x29, sp
    4120:	str	x0, [sp, #40]
    4124:	str	x1, [sp, #32]
    4128:	str	x2, [sp, #24]
    412c:	ldr	x2, [sp, #24]
    4130:	ldr	x1, [sp, #32]
    4134:	ldr	x0, [sp, #40]
    4138:	bl	3fcc <crc32@@Base+0xcc8>
    413c:	ldp	x29, x30, [sp], #48
    4140:	ret

0000000000004144 <crc32_combine64@@ZLIB_1.2.3.3>:
    4144:	stp	x29, x30, [sp, #-48]!
    4148:	mov	x29, sp
    414c:	str	x0, [sp, #40]
    4150:	str	x1, [sp, #32]
    4154:	str	x2, [sp, #24]
    4158:	ldr	x2, [sp, #24]
    415c:	ldr	x1, [sp, #32]
    4160:	ldr	x0, [sp, #40]
    4164:	bl	3fcc <crc32@@Base+0xcc8>
    4168:	ldp	x29, x30, [sp], #48
    416c:	ret
    4170:	sub	sp, sp, #0x30
    4174:	str	x0, [sp, #8]
    4178:	ldr	x0, [sp, #8]
    417c:	ldr	w0, [x0, #80]
    4180:	str	w0, [sp, #28]
    4184:	ldr	x0, [sp, #8]
    4188:	ldr	w0, [x0, #132]
    418c:	str	w0, [sp, #44]
    4190:	ldr	x0, [sp, #8]
    4194:	ldr	x1, [x0, #120]
    4198:	ldr	w0, [sp, #44]
    419c:	lsl	x0, x0, #1
    41a0:	add	x0, x1, x0
    41a4:	str	x0, [sp, #32]
    41a8:	ldr	x0, [sp, #32]
    41ac:	sub	x0, x0, #0x2
    41b0:	str	x0, [sp, #32]
    41b4:	ldr	x0, [sp, #32]
    41b8:	ldrh	w0, [x0]
    41bc:	str	w0, [sp, #24]
    41c0:	ldr	w1, [sp, #24]
    41c4:	ldr	w0, [sp, #28]
    41c8:	cmp	w1, w0
    41cc:	b.cc	41e4 <crc32_combine64@@ZLIB_1.2.3.3+0xa0>  // b.lo, b.ul, b.last
    41d0:	ldr	w1, [sp, #24]
    41d4:	ldr	w0, [sp, #28]
    41d8:	sub	w0, w1, w0
    41dc:	and	w1, w0, #0xffff
    41e0:	b	41e8 <crc32_combine64@@ZLIB_1.2.3.3+0xa4>
    41e4:	mov	w1, #0x0                   	// #0
    41e8:	ldr	x0, [sp, #32]
    41ec:	strh	w1, [x0]
    41f0:	ldr	w0, [sp, #44]
    41f4:	sub	w0, w0, #0x1
    41f8:	str	w0, [sp, #44]
    41fc:	ldr	w0, [sp, #44]
    4200:	cmp	w0, #0x0
    4204:	b.ne	41a8 <crc32_combine64@@ZLIB_1.2.3.3+0x64>  // b.any
    4208:	ldr	w0, [sp, #28]
    420c:	str	w0, [sp, #44]
    4210:	ldr	x0, [sp, #8]
    4214:	ldr	x1, [x0, #112]
    4218:	ldr	w0, [sp, #44]
    421c:	lsl	x0, x0, #1
    4220:	add	x0, x1, x0
    4224:	str	x0, [sp, #32]
    4228:	ldr	x0, [sp, #32]
    422c:	sub	x0, x0, #0x2
    4230:	str	x0, [sp, #32]
    4234:	ldr	x0, [sp, #32]
    4238:	ldrh	w0, [x0]
    423c:	str	w0, [sp, #24]
    4240:	ldr	w1, [sp, #24]
    4244:	ldr	w0, [sp, #28]
    4248:	cmp	w1, w0
    424c:	b.cc	4264 <crc32_combine64@@ZLIB_1.2.3.3+0x120>  // b.lo, b.ul, b.last
    4250:	ldr	w1, [sp, #24]
    4254:	ldr	w0, [sp, #28]
    4258:	sub	w0, w1, w0
    425c:	and	w1, w0, #0xffff
    4260:	b	4268 <crc32_combine64@@ZLIB_1.2.3.3+0x124>
    4264:	mov	w1, #0x0                   	// #0
    4268:	ldr	x0, [sp, #32]
    426c:	strh	w1, [x0]
    4270:	ldr	w0, [sp, #44]
    4274:	sub	w0, w0, #0x1
    4278:	str	w0, [sp, #44]
    427c:	ldr	w0, [sp, #44]
    4280:	cmp	w0, #0x0
    4284:	b.ne	4228 <crc32_combine64@@ZLIB_1.2.3.3+0xe4>  // b.any
    4288:	nop
    428c:	nop
    4290:	add	sp, sp, #0x30
    4294:	ret

0000000000004298 <deflateInit_@@Base>:
    4298:	stp	x29, x30, [sp, #-48]!
    429c:	mov	x29, sp
    42a0:	str	x0, [sp, #40]
    42a4:	str	w1, [sp, #36]
    42a8:	str	x2, [sp, #24]
    42ac:	str	w3, [sp, #32]
    42b0:	ldr	w7, [sp, #32]
    42b4:	ldr	x6, [sp, #24]
    42b8:	mov	w5, #0x0                   	// #0
    42bc:	mov	w4, #0x8                   	// #8
    42c0:	mov	w3, #0xf                   	// #15
    42c4:	mov	w2, #0x8                   	// #8
    42c8:	ldr	w1, [sp, #36]
    42cc:	ldr	x0, [sp, #40]
    42d0:	bl	24d0 <deflateInit2_@plt>
    42d4:	ldp	x29, x30, [sp], #48
    42d8:	ret

00000000000042dc <deflateInit2_@@Base>:
    42dc:	stp	x29, x30, [sp, #-96]!
    42e0:	mov	x29, sp
    42e4:	str	x0, [sp, #56]
    42e8:	str	w1, [sp, #52]
    42ec:	str	w2, [sp, #48]
    42f0:	str	w3, [sp, #44]
    42f4:	str	w4, [sp, #40]
    42f8:	str	w5, [sp, #36]
    42fc:	str	x6, [sp, #24]
    4300:	str	w7, [sp, #32]
    4304:	mov	w0, #0x1                   	// #1
    4308:	str	w0, [sp, #92]
    430c:	ldr	x0, [sp, #24]
    4310:	cmp	x0, #0x0
    4314:	b.eq	4340 <deflateInit2_@@Base+0x64>  // b.none
    4318:	ldr	x0, [sp, #24]
    431c:	ldrb	w1, [x0]
    4320:	adrp	x0, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    4324:	add	x0, x0, #0x0
    4328:	ldrb	w0, [x0]
    432c:	cmp	w1, w0
    4330:	b.ne	4340 <deflateInit2_@@Base+0x64>  // b.any
    4334:	ldr	w0, [sp, #32]
    4338:	cmp	w0, #0x70
    433c:	b.eq	4348 <deflateInit2_@@Base+0x6c>  // b.none
    4340:	mov	w0, #0xfffffffa            	// #-6
    4344:	b	47b0 <deflateInit2_@@Base+0x4d4>
    4348:	ldr	x0, [sp, #56]
    434c:	cmp	x0, #0x0
    4350:	b.ne	435c <deflateInit2_@@Base+0x80>  // b.any
    4354:	mov	w0, #0xfffffffe            	// #-2
    4358:	b	47b0 <deflateInit2_@@Base+0x4d4>
    435c:	ldr	x0, [sp, #56]
    4360:	str	xzr, [x0, #48]
    4364:	ldr	x0, [sp, #56]
    4368:	ldr	x0, [x0, #64]
    436c:	cmp	x0, #0x0
    4370:	b.ne	438c <deflateInit2_@@Base+0xb0>  // b.any
    4374:	ldr	x0, [sp, #56]
    4378:	adrp	x1, 15000 <inflateCodesUsed@@ZLIB_1.2.9+0x4610>
    437c:	add	x1, x1, #0x474
    4380:	str	x1, [x0, #64]
    4384:	ldr	x0, [sp, #56]
    4388:	str	xzr, [x0, #80]
    438c:	ldr	x0, [sp, #56]
    4390:	ldr	x0, [x0, #72]
    4394:	cmp	x0, #0x0
    4398:	b.ne	43ac <deflateInit2_@@Base+0xd0>  // b.any
    439c:	ldr	x0, [sp, #56]
    43a0:	adrp	x1, 15000 <inflateCodesUsed@@ZLIB_1.2.9+0x4610>
    43a4:	add	x1, x1, #0x4a4
    43a8:	str	x1, [x0, #72]
    43ac:	ldr	w0, [sp, #52]
    43b0:	cmn	w0, #0x1
    43b4:	b.ne	43c0 <deflateInit2_@@Base+0xe4>  // b.any
    43b8:	mov	w0, #0x6                   	// #6
    43bc:	str	w0, [sp, #52]
    43c0:	ldr	w0, [sp, #44]
    43c4:	cmp	w0, #0x0
    43c8:	b.ge	43e0 <deflateInit2_@@Base+0x104>  // b.tcont
    43cc:	str	wzr, [sp, #92]
    43d0:	ldr	w0, [sp, #44]
    43d4:	neg	w0, w0
    43d8:	str	w0, [sp, #44]
    43dc:	b	4400 <deflateInit2_@@Base+0x124>
    43e0:	ldr	w0, [sp, #44]
    43e4:	cmp	w0, #0xf
    43e8:	b.le	4400 <deflateInit2_@@Base+0x124>
    43ec:	mov	w0, #0x2                   	// #2
    43f0:	str	w0, [sp, #92]
    43f4:	ldr	w0, [sp, #44]
    43f8:	sub	w0, w0, #0x10
    43fc:	str	w0, [sp, #44]
    4400:	ldr	w0, [sp, #40]
    4404:	cmp	w0, #0x0
    4408:	b.le	4484 <deflateInit2_@@Base+0x1a8>
    440c:	ldr	w0, [sp, #40]
    4410:	cmp	w0, #0x9
    4414:	b.gt	4484 <deflateInit2_@@Base+0x1a8>
    4418:	ldr	w0, [sp, #48]
    441c:	cmp	w0, #0x8
    4420:	b.ne	4484 <deflateInit2_@@Base+0x1a8>  // b.any
    4424:	ldr	w0, [sp, #44]
    4428:	cmp	w0, #0x7
    442c:	b.le	4484 <deflateInit2_@@Base+0x1a8>
    4430:	ldr	w0, [sp, #44]
    4434:	cmp	w0, #0xf
    4438:	b.gt	4484 <deflateInit2_@@Base+0x1a8>
    443c:	ldr	w0, [sp, #52]
    4440:	cmp	w0, #0x0
    4444:	b.lt	4484 <deflateInit2_@@Base+0x1a8>  // b.tstop
    4448:	ldr	w0, [sp, #52]
    444c:	cmp	w0, #0x9
    4450:	b.gt	4484 <deflateInit2_@@Base+0x1a8>
    4454:	ldr	w0, [sp, #36]
    4458:	cmp	w0, #0x0
    445c:	b.lt	4484 <deflateInit2_@@Base+0x1a8>  // b.tstop
    4460:	ldr	w0, [sp, #36]
    4464:	cmp	w0, #0x4
    4468:	b.gt	4484 <deflateInit2_@@Base+0x1a8>
    446c:	ldr	w0, [sp, #44]
    4470:	cmp	w0, #0x8
    4474:	b.ne	448c <deflateInit2_@@Base+0x1b0>  // b.any
    4478:	ldr	w0, [sp, #92]
    447c:	cmp	w0, #0x1
    4480:	b.eq	448c <deflateInit2_@@Base+0x1b0>  // b.none
    4484:	mov	w0, #0xfffffffe            	// #-2
    4488:	b	47b0 <deflateInit2_@@Base+0x4d4>
    448c:	ldr	w0, [sp, #44]
    4490:	cmp	w0, #0x8
    4494:	b.ne	44a0 <deflateInit2_@@Base+0x1c4>  // b.any
    4498:	mov	w0, #0x9                   	// #9
    449c:	str	w0, [sp, #44]
    44a0:	ldr	x0, [sp, #56]
    44a4:	ldr	x3, [x0, #64]
    44a8:	ldr	x0, [sp, #56]
    44ac:	ldr	x0, [x0, #80]
    44b0:	mov	w2, #0x1740                	// #5952
    44b4:	mov	w1, #0x1                   	// #1
    44b8:	blr	x3
    44bc:	str	x0, [sp, #80]
    44c0:	ldr	x0, [sp, #80]
    44c4:	cmp	x0, #0x0
    44c8:	b.ne	44d4 <deflateInit2_@@Base+0x1f8>  // b.any
    44cc:	mov	w0, #0xfffffffc            	// #-4
    44d0:	b	47b0 <deflateInit2_@@Base+0x4d4>
    44d4:	ldr	x0, [sp, #56]
    44d8:	ldr	x1, [sp, #80]
    44dc:	str	x1, [x0, #56]
    44e0:	ldr	x0, [sp, #80]
    44e4:	ldr	x1, [sp, #56]
    44e8:	str	x1, [x0]
    44ec:	ldr	x0, [sp, #80]
    44f0:	mov	w1, #0x2a                  	// #42
    44f4:	str	w1, [x0, #8]
    44f8:	ldr	x0, [sp, #80]
    44fc:	ldr	w1, [sp, #92]
    4500:	str	w1, [x0, #48]
    4504:	ldr	x0, [sp, #80]
    4508:	str	xzr, [x0, #56]
    450c:	ldr	w1, [sp, #44]
    4510:	ldr	x0, [sp, #80]
    4514:	str	w1, [x0, #84]
    4518:	ldr	x0, [sp, #80]
    451c:	ldr	w0, [x0, #84]
    4520:	mov	w1, #0x1                   	// #1
    4524:	lsl	w0, w1, w0
    4528:	mov	w1, w0
    452c:	ldr	x0, [sp, #80]
    4530:	str	w1, [x0, #80]
    4534:	ldr	x0, [sp, #80]
    4538:	ldr	w0, [x0, #80]
    453c:	sub	w1, w0, #0x1
    4540:	ldr	x0, [sp, #80]
    4544:	str	w1, [x0, #88]
    4548:	ldr	w0, [sp, #40]
    454c:	add	w1, w0, #0x7
    4550:	ldr	x0, [sp, #80]
    4554:	str	w1, [x0, #136]
    4558:	ldr	x0, [sp, #80]
    455c:	ldr	w0, [x0, #136]
    4560:	mov	w1, #0x1                   	// #1
    4564:	lsl	w0, w1, w0
    4568:	mov	w1, w0
    456c:	ldr	x0, [sp, #80]
    4570:	str	w1, [x0, #132]
    4574:	ldr	x0, [sp, #80]
    4578:	ldr	w0, [x0, #132]
    457c:	sub	w1, w0, #0x1
    4580:	ldr	x0, [sp, #80]
    4584:	str	w1, [x0, #140]
    4588:	ldr	x0, [sp, #80]
    458c:	ldr	w0, [x0, #136]
    4590:	add	w1, w0, #0x2
    4594:	mov	w0, #0xaaab                	// #43691
    4598:	movk	w0, #0xaaaa, lsl #16
    459c:	umull	x0, w1, w0
    45a0:	lsr	x0, x0, #32
    45a4:	lsr	w1, w0, #1
    45a8:	ldr	x0, [sp, #80]
    45ac:	str	w1, [x0, #144]
    45b0:	ldr	x0, [sp, #56]
    45b4:	ldr	x3, [x0, #64]
    45b8:	ldr	x0, [sp, #56]
    45bc:	ldr	x4, [x0, #80]
    45c0:	ldr	x0, [sp, #80]
    45c4:	ldr	w0, [x0, #80]
    45c8:	mov	w2, #0x2                   	// #2
    45cc:	mov	w1, w0
    45d0:	mov	x0, x4
    45d4:	blr	x3
    45d8:	mov	x1, x0
    45dc:	ldr	x0, [sp, #80]
    45e0:	str	x1, [x0, #96]
    45e4:	ldr	x0, [sp, #56]
    45e8:	ldr	x3, [x0, #64]
    45ec:	ldr	x0, [sp, #56]
    45f0:	ldr	x4, [x0, #80]
    45f4:	ldr	x0, [sp, #80]
    45f8:	ldr	w0, [x0, #80]
    45fc:	mov	w2, #0x2                   	// #2
    4600:	mov	w1, w0
    4604:	mov	x0, x4
    4608:	blr	x3
    460c:	mov	x1, x0
    4610:	ldr	x0, [sp, #80]
    4614:	str	x1, [x0, #112]
    4618:	ldr	x0, [sp, #56]
    461c:	ldr	x3, [x0, #64]
    4620:	ldr	x0, [sp, #56]
    4624:	ldr	x4, [x0, #80]
    4628:	ldr	x0, [sp, #80]
    462c:	ldr	w0, [x0, #132]
    4630:	mov	w2, #0x2                   	// #2
    4634:	mov	w1, w0
    4638:	mov	x0, x4
    463c:	blr	x3
    4640:	mov	x1, x0
    4644:	ldr	x0, [sp, #80]
    4648:	str	x1, [x0, #120]
    464c:	ldr	x0, [sp, #80]
    4650:	str	xzr, [x0, #5944]
    4654:	ldr	w0, [sp, #40]
    4658:	add	w0, w0, #0x6
    465c:	mov	w1, #0x1                   	// #1
    4660:	lsl	w0, w1, w0
    4664:	mov	w1, w0
    4668:	ldr	x0, [sp, #80]
    466c:	str	w1, [x0, #5896]
    4670:	ldr	x0, [sp, #56]
    4674:	ldr	x3, [x0, #64]
    4678:	ldr	x0, [sp, #56]
    467c:	ldr	x4, [x0, #80]
    4680:	ldr	x0, [sp, #80]
    4684:	ldr	w0, [x0, #5896]
    4688:	mov	w2, #0x4                   	// #4
    468c:	mov	w1, w0
    4690:	mov	x0, x4
    4694:	blr	x3
    4698:	str	x0, [sp, #72]
    469c:	ldr	x0, [sp, #80]
    46a0:	ldr	x1, [sp, #72]
    46a4:	str	x1, [x0, #16]
    46a8:	ldr	x0, [sp, #80]
    46ac:	ldr	w0, [x0, #5896]
    46b0:	mov	w0, w0
    46b4:	lsl	x1, x0, #2
    46b8:	ldr	x0, [sp, #80]
    46bc:	str	x1, [x0, #24]
    46c0:	ldr	x0, [sp, #80]
    46c4:	ldr	x0, [x0, #96]
    46c8:	cmp	x0, #0x0
    46cc:	b.eq	4700 <deflateInit2_@@Base+0x424>  // b.none
    46d0:	ldr	x0, [sp, #80]
    46d4:	ldr	x0, [x0, #112]
    46d8:	cmp	x0, #0x0
    46dc:	b.eq	4700 <deflateInit2_@@Base+0x424>  // b.none
    46e0:	ldr	x0, [sp, #80]
    46e4:	ldr	x0, [x0, #120]
    46e8:	cmp	x0, #0x0
    46ec:	b.eq	4700 <deflateInit2_@@Base+0x424>  // b.none
    46f0:	ldr	x0, [sp, #80]
    46f4:	ldr	x0, [x0, #16]
    46f8:	cmp	x0, #0x0
    46fc:	b.ne	4730 <deflateInit2_@@Base+0x454>  // b.any
    4700:	ldr	x0, [sp, #80]
    4704:	mov	w1, #0x29a                 	// #666
    4708:	str	w1, [x0, #8]
    470c:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    4710:	ldr	x0, [x0, #4056]
    4714:	ldr	x1, [x0, #48]
    4718:	ldr	x0, [sp, #56]
    471c:	str	x1, [x0, #48]
    4720:	ldr	x0, [sp, #56]
    4724:	bl	2590 <deflateEnd@plt>
    4728:	mov	w0, #0xfffffffc            	// #-4
    472c:	b	47b0 <deflateInit2_@@Base+0x4d4>
    4730:	ldr	x0, [sp, #80]
    4734:	ldr	w0, [x0, #5896]
    4738:	lsr	w0, w0, #1
    473c:	mov	w0, w0
    4740:	lsl	x0, x0, #1
    4744:	ldr	x1, [sp, #72]
    4748:	add	x1, x1, x0
    474c:	ldr	x0, [sp, #80]
    4750:	str	x1, [x0, #5904]
    4754:	ldr	x0, [sp, #80]
    4758:	ldr	x2, [x0, #16]
    475c:	ldr	x0, [sp, #80]
    4760:	ldr	w0, [x0, #5896]
    4764:	mov	w1, w0
    4768:	mov	x0, x1
    476c:	lsl	x0, x0, #1
    4770:	add	x0, x0, x1
    4774:	add	x1, x2, x0
    4778:	ldr	x0, [sp, #80]
    477c:	str	x1, [x0, #5888]
    4780:	ldr	x0, [sp, #80]
    4784:	ldr	w1, [sp, #52]
    4788:	str	w1, [x0, #196]
    478c:	ldr	x0, [sp, #80]
    4790:	ldr	w1, [sp, #36]
    4794:	str	w1, [x0, #200]
    4798:	ldr	w0, [sp, #48]
    479c:	and	w1, w0, #0xff
    47a0:	ldr	x0, [sp, #80]
    47a4:	strb	w1, [x0, #72]
    47a8:	ldr	x0, [sp, #56]
    47ac:	bl	2480 <deflateReset@plt>
    47b0:	ldp	x29, x30, [sp], #96
    47b4:	ret
    47b8:	sub	sp, sp, #0x20
    47bc:	str	x0, [sp, #8]
    47c0:	ldr	x0, [sp, #8]
    47c4:	cmp	x0, #0x0
    47c8:	b.eq	47ec <deflateInit2_@@Base+0x510>  // b.none
    47cc:	ldr	x0, [sp, #8]
    47d0:	ldr	x0, [x0, #64]
    47d4:	cmp	x0, #0x0
    47d8:	b.eq	47ec <deflateInit2_@@Base+0x510>  // b.none
    47dc:	ldr	x0, [sp, #8]
    47e0:	ldr	x0, [x0, #72]
    47e4:	cmp	x0, #0x0
    47e8:	b.ne	47f4 <deflateInit2_@@Base+0x518>  // b.any
    47ec:	mov	w0, #0x1                   	// #1
    47f0:	b	48ac <deflateInit2_@@Base+0x5d0>
    47f4:	ldr	x0, [sp, #8]
    47f8:	ldr	x0, [x0, #56]
    47fc:	str	x0, [sp, #24]
    4800:	ldr	x0, [sp, #24]
    4804:	cmp	x0, #0x0
    4808:	b.eq	48a0 <deflateInit2_@@Base+0x5c4>  // b.none
    480c:	ldr	x0, [sp, #24]
    4810:	ldr	x0, [x0]
    4814:	ldr	x1, [sp, #8]
    4818:	cmp	x1, x0
    481c:	b.ne	48a0 <deflateInit2_@@Base+0x5c4>  // b.any
    4820:	ldr	x0, [sp, #24]
    4824:	ldr	w0, [x0, #8]
    4828:	cmp	w0, #0x2a
    482c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    4830:	ldr	x0, [sp, #24]
    4834:	ldr	w0, [x0, #8]
    4838:	cmp	w0, #0x39
    483c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    4840:	ldr	x0, [sp, #24]
    4844:	ldr	w0, [x0, #8]
    4848:	cmp	w0, #0x45
    484c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    4850:	ldr	x0, [sp, #24]
    4854:	ldr	w0, [x0, #8]
    4858:	cmp	w0, #0x49
    485c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    4860:	ldr	x0, [sp, #24]
    4864:	ldr	w0, [x0, #8]
    4868:	cmp	w0, #0x5b
    486c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    4870:	ldr	x0, [sp, #24]
    4874:	ldr	w0, [x0, #8]
    4878:	cmp	w0, #0x67
    487c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    4880:	ldr	x0, [sp, #24]
    4884:	ldr	w0, [x0, #8]
    4888:	cmp	w0, #0x71
    488c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    4890:	ldr	x0, [sp, #24]
    4894:	ldr	w0, [x0, #8]
    4898:	cmp	w0, #0x29a
    489c:	b.eq	48a8 <deflateInit2_@@Base+0x5cc>  // b.none
    48a0:	mov	w0, #0x1                   	// #1
    48a4:	b	48ac <deflateInit2_@@Base+0x5d0>
    48a8:	mov	w0, #0x0                   	// #0
    48ac:	add	sp, sp, #0x20
    48b0:	ret

00000000000048b4 <deflateSetDictionary@@Base>:
    48b4:	stp	x29, x30, [sp, #-80]!
    48b8:	mov	x29, sp
    48bc:	str	x0, [sp, #40]
    48c0:	str	x1, [sp, #32]
    48c4:	str	w2, [sp, #28]
    48c8:	ldr	x0, [sp, #40]
    48cc:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    48d0:	cmp	w0, #0x0
    48d4:	b.ne	48e4 <deflateSetDictionary@@Base+0x30>  // b.any
    48d8:	ldr	x0, [sp, #32]
    48dc:	cmp	x0, #0x0
    48e0:	b.ne	48ec <deflateSetDictionary@@Base+0x38>  // b.any
    48e4:	mov	w0, #0xfffffffe            	// #-2
    48e8:	b	4c24 <deflateSetDictionary@@Base+0x370>
    48ec:	ldr	x0, [sp, #40]
    48f0:	ldr	x0, [x0, #56]
    48f4:	str	x0, [sp, #64]
    48f8:	ldr	x0, [sp, #64]
    48fc:	ldr	w0, [x0, #48]
    4900:	str	w0, [sp, #60]
    4904:	ldr	w0, [sp, #60]
    4908:	cmp	w0, #0x2
    490c:	b.eq	493c <deflateSetDictionary@@Base+0x88>  // b.none
    4910:	ldr	w0, [sp, #60]
    4914:	cmp	w0, #0x1
    4918:	b.ne	492c <deflateSetDictionary@@Base+0x78>  // b.any
    491c:	ldr	x0, [sp, #64]
    4920:	ldr	w0, [x0, #8]
    4924:	cmp	w0, #0x2a
    4928:	b.ne	493c <deflateSetDictionary@@Base+0x88>  // b.any
    492c:	ldr	x0, [sp, #64]
    4930:	ldr	w0, [x0, #180]
    4934:	cmp	w0, #0x0
    4938:	b.eq	4944 <deflateSetDictionary@@Base+0x90>  // b.none
    493c:	mov	w0, #0xfffffffe            	// #-2
    4940:	b	4c24 <deflateSetDictionary@@Base+0x370>
    4944:	ldr	w0, [sp, #60]
    4948:	cmp	w0, #0x1
    494c:	b.ne	4970 <deflateSetDictionary@@Base+0xbc>  // b.any
    4950:	ldr	x0, [sp, #40]
    4954:	ldr	x0, [x0, #96]
    4958:	ldr	w2, [sp, #28]
    495c:	ldr	x1, [sp, #32]
    4960:	bl	2560 <adler32@plt>
    4964:	mov	x1, x0
    4968:	ldr	x0, [sp, #40]
    496c:	str	x1, [x0, #96]
    4970:	ldr	x0, [sp, #64]
    4974:	str	wzr, [x0, #48]
    4978:	ldr	x0, [sp, #64]
    497c:	ldr	w0, [x0, #80]
    4980:	ldr	w1, [sp, #28]
    4984:	cmp	w1, w0
    4988:	b.cc	4a2c <deflateSetDictionary@@Base+0x178>  // b.lo, b.ul, b.last
    498c:	ldr	w0, [sp, #60]
    4990:	cmp	w0, #0x0
    4994:	b.ne	4a00 <deflateSetDictionary@@Base+0x14c>  // b.any
    4998:	ldr	x0, [sp, #64]
    499c:	ldr	x1, [x0, #120]
    49a0:	ldr	x0, [sp, #64]
    49a4:	ldr	w0, [x0, #132]
    49a8:	sub	w0, w0, #0x1
    49ac:	mov	w0, w0
    49b0:	lsl	x0, x0, #1
    49b4:	add	x0, x1, x0
    49b8:	strh	wzr, [x0]
    49bc:	ldr	x0, [sp, #64]
    49c0:	ldr	x3, [x0, #120]
    49c4:	ldr	x0, [sp, #64]
    49c8:	ldr	w0, [x0, #132]
    49cc:	sub	w0, w0, #0x1
    49d0:	mov	w0, w0
    49d4:	lsl	x0, x0, #1
    49d8:	mov	x2, x0
    49dc:	mov	w1, #0x0                   	// #0
    49e0:	mov	x0, x3
    49e4:	bl	24a0 <memset@plt>
    49e8:	ldr	x0, [sp, #64]
    49ec:	str	wzr, [x0, #172]
    49f0:	ldr	x0, [sp, #64]
    49f4:	str	xzr, [x0, #152]
    49f8:	ldr	x0, [sp, #64]
    49fc:	str	wzr, [x0, #5932]
    4a00:	ldr	x0, [sp, #64]
    4a04:	ldr	w0, [x0, #80]
    4a08:	ldr	w1, [sp, #28]
    4a0c:	sub	w0, w1, w0
    4a10:	mov	w0, w0
    4a14:	ldr	x1, [sp, #32]
    4a18:	add	x0, x1, x0
    4a1c:	str	x0, [sp, #32]
    4a20:	ldr	x0, [sp, #64]
    4a24:	ldr	w0, [x0, #80]
    4a28:	str	w0, [sp, #28]
    4a2c:	ldr	x0, [sp, #40]
    4a30:	ldr	w0, [x0, #8]
    4a34:	str	w0, [sp, #56]
    4a38:	ldr	x0, [sp, #40]
    4a3c:	ldr	x0, [x0]
    4a40:	str	x0, [sp, #48]
    4a44:	ldr	x0, [sp, #40]
    4a48:	ldr	w1, [sp, #28]
    4a4c:	str	w1, [x0, #8]
    4a50:	ldr	x0, [sp, #40]
    4a54:	ldr	x1, [sp, #32]
    4a58:	str	x1, [x0]
    4a5c:	ldr	x0, [sp, #64]
    4a60:	bl	765c <deflateCopy@@Base+0x914>
    4a64:	b	4b80 <deflateSetDictionary@@Base+0x2cc>
    4a68:	ldr	x0, [sp, #64]
    4a6c:	ldr	w0, [x0, #172]
    4a70:	str	w0, [sp, #76]
    4a74:	ldr	x0, [sp, #64]
    4a78:	ldr	w0, [x0, #180]
    4a7c:	sub	w0, w0, #0x2
    4a80:	str	w0, [sp, #72]
    4a84:	ldr	x0, [sp, #64]
    4a88:	ldr	w1, [x0, #128]
    4a8c:	ldr	x0, [sp, #64]
    4a90:	ldr	w0, [x0, #144]
    4a94:	lsl	w0, w1, w0
    4a98:	ldr	x1, [sp, #64]
    4a9c:	ldr	x2, [x1, #96]
    4aa0:	ldr	w1, [sp, #76]
    4aa4:	add	w1, w1, #0x2
    4aa8:	mov	w1, w1
    4aac:	add	x1, x2, x1
    4ab0:	ldrb	w1, [x1]
    4ab4:	eor	w1, w0, w1
    4ab8:	ldr	x0, [sp, #64]
    4abc:	ldr	w0, [x0, #140]
    4ac0:	and	w1, w1, w0
    4ac4:	ldr	x0, [sp, #64]
    4ac8:	str	w1, [x0, #128]
    4acc:	ldr	x0, [sp, #64]
    4ad0:	ldr	x1, [x0, #120]
    4ad4:	ldr	x0, [sp, #64]
    4ad8:	ldr	w0, [x0, #128]
    4adc:	mov	w0, w0
    4ae0:	lsl	x0, x0, #1
    4ae4:	add	x1, x1, x0
    4ae8:	ldr	x0, [sp, #64]
    4aec:	ldr	x2, [x0, #112]
    4af0:	ldr	x0, [sp, #64]
    4af4:	ldr	w3, [x0, #88]
    4af8:	ldr	w0, [sp, #76]
    4afc:	and	w0, w3, w0
    4b00:	mov	w0, w0
    4b04:	lsl	x0, x0, #1
    4b08:	add	x0, x2, x0
    4b0c:	ldrh	w1, [x1]
    4b10:	strh	w1, [x0]
    4b14:	ldr	x0, [sp, #64]
    4b18:	ldr	x1, [x0, #120]
    4b1c:	ldr	x0, [sp, #64]
    4b20:	ldr	w0, [x0, #128]
    4b24:	mov	w0, w0
    4b28:	lsl	x0, x0, #1
    4b2c:	add	x0, x1, x0
    4b30:	ldr	w1, [sp, #76]
    4b34:	and	w1, w1, #0xffff
    4b38:	strh	w1, [x0]
    4b3c:	ldr	w0, [sp, #76]
    4b40:	add	w0, w0, #0x1
    4b44:	str	w0, [sp, #76]
    4b48:	ldr	w0, [sp, #72]
    4b4c:	sub	w0, w0, #0x1
    4b50:	str	w0, [sp, #72]
    4b54:	ldr	w0, [sp, #72]
    4b58:	cmp	w0, #0x0
    4b5c:	b.ne	4a84 <deflateSetDictionary@@Base+0x1d0>  // b.any
    4b60:	ldr	x0, [sp, #64]
    4b64:	ldr	w1, [sp, #76]
    4b68:	str	w1, [x0, #172]
    4b6c:	ldr	x0, [sp, #64]
    4b70:	mov	w1, #0x2                   	// #2
    4b74:	str	w1, [x0, #180]
    4b78:	ldr	x0, [sp, #64]
    4b7c:	bl	765c <deflateCopy@@Base+0x914>
    4b80:	ldr	x0, [sp, #64]
    4b84:	ldr	w0, [x0, #180]
    4b88:	cmp	w0, #0x2
    4b8c:	b.hi	4a68 <deflateSetDictionary@@Base+0x1b4>  // b.pmore
    4b90:	ldr	x0, [sp, #64]
    4b94:	ldr	w1, [x0, #172]
    4b98:	ldr	x0, [sp, #64]
    4b9c:	ldr	w0, [x0, #180]
    4ba0:	add	w1, w1, w0
    4ba4:	ldr	x0, [sp, #64]
    4ba8:	str	w1, [x0, #172]
    4bac:	ldr	x0, [sp, #64]
    4bb0:	ldr	w0, [x0, #172]
    4bb4:	mov	w1, w0
    4bb8:	ldr	x0, [sp, #64]
    4bbc:	str	x1, [x0, #152]
    4bc0:	ldr	x0, [sp, #64]
    4bc4:	ldr	w1, [x0, #180]
    4bc8:	ldr	x0, [sp, #64]
    4bcc:	str	w1, [x0, #5932]
    4bd0:	ldr	x0, [sp, #64]
    4bd4:	str	wzr, [x0, #180]
    4bd8:	ldr	x0, [sp, #64]
    4bdc:	mov	w1, #0x2                   	// #2
    4be0:	str	w1, [x0, #184]
    4be4:	ldr	x0, [sp, #64]
    4be8:	ldr	w1, [x0, #184]
    4bec:	ldr	x0, [sp, #64]
    4bf0:	str	w1, [x0, #160]
    4bf4:	ldr	x0, [sp, #64]
    4bf8:	str	wzr, [x0, #168]
    4bfc:	ldr	x0, [sp, #40]
    4c00:	ldr	x1, [sp, #48]
    4c04:	str	x1, [x0]
    4c08:	ldr	x0, [sp, #40]
    4c0c:	ldr	w1, [sp, #56]
    4c10:	str	w1, [x0, #8]
    4c14:	ldr	x0, [sp, #64]
    4c18:	ldr	w1, [sp, #60]
    4c1c:	str	w1, [x0, #48]
    4c20:	mov	w0, #0x0                   	// #0
    4c24:	ldp	x29, x30, [sp], #80
    4c28:	ret

0000000000004c2c <deflateGetDictionary@@ZLIB_1.2.9>:
    4c2c:	stp	x29, x30, [sp, #-64]!
    4c30:	mov	x29, sp
    4c34:	str	x0, [sp, #40]
    4c38:	str	x1, [sp, #32]
    4c3c:	str	x2, [sp, #24]
    4c40:	ldr	x0, [sp, #40]
    4c44:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    4c48:	cmp	w0, #0x0
    4c4c:	b.eq	4c58 <deflateGetDictionary@@ZLIB_1.2.9+0x2c>  // b.none
    4c50:	mov	w0, #0xfffffffe            	// #-2
    4c54:	b	4d14 <deflateGetDictionary@@ZLIB_1.2.9+0xe8>
    4c58:	ldr	x0, [sp, #40]
    4c5c:	ldr	x0, [x0, #56]
    4c60:	str	x0, [sp, #48]
    4c64:	ldr	x0, [sp, #48]
    4c68:	ldr	w1, [x0, #172]
    4c6c:	ldr	x0, [sp, #48]
    4c70:	ldr	w0, [x0, #180]
    4c74:	add	w0, w1, w0
    4c78:	str	w0, [sp, #60]
    4c7c:	ldr	x0, [sp, #48]
    4c80:	ldr	w0, [x0, #80]
    4c84:	ldr	w1, [sp, #60]
    4c88:	cmp	w1, w0
    4c8c:	b.ls	4c9c <deflateGetDictionary@@ZLIB_1.2.9+0x70>  // b.plast
    4c90:	ldr	x0, [sp, #48]
    4c94:	ldr	w0, [x0, #80]
    4c98:	str	w0, [sp, #60]
    4c9c:	ldr	x0, [sp, #32]
    4ca0:	cmp	x0, #0x0
    4ca4:	b.eq	4cf8 <deflateGetDictionary@@ZLIB_1.2.9+0xcc>  // b.none
    4ca8:	ldr	w0, [sp, #60]
    4cac:	cmp	w0, #0x0
    4cb0:	b.eq	4cf8 <deflateGetDictionary@@ZLIB_1.2.9+0xcc>  // b.none
    4cb4:	ldr	x0, [sp, #48]
    4cb8:	ldr	x1, [x0, #96]
    4cbc:	ldr	x0, [sp, #48]
    4cc0:	ldr	w0, [x0, #172]
    4cc4:	mov	w2, w0
    4cc8:	ldr	x0, [sp, #48]
    4ccc:	ldr	w0, [x0, #180]
    4cd0:	mov	w0, w0
    4cd4:	add	x2, x2, x0
    4cd8:	ldr	w0, [sp, #60]
    4cdc:	sub	x0, x2, x0
    4ce0:	add	x0, x1, x0
    4ce4:	ldr	w1, [sp, #60]
    4ce8:	mov	x2, x1
    4cec:	mov	x1, x0
    4cf0:	ldr	x0, [sp, #32]
    4cf4:	bl	23a0 <memcpy@plt>
    4cf8:	ldr	x0, [sp, #24]
    4cfc:	cmp	x0, #0x0
    4d00:	b.eq	4d10 <deflateGetDictionary@@ZLIB_1.2.9+0xe4>  // b.none
    4d04:	ldr	x0, [sp, #24]
    4d08:	ldr	w1, [sp, #60]
    4d0c:	str	w1, [x0]
    4d10:	mov	w0, #0x0                   	// #0
    4d14:	ldp	x29, x30, [sp], #64
    4d18:	ret

0000000000004d1c <deflateResetKeep@@ZLIB_1.2.5.2>:
    4d1c:	stp	x29, x30, [sp, #-48]!
    4d20:	mov	x29, sp
    4d24:	str	x0, [sp, #24]
    4d28:	ldr	x0, [sp, #24]
    4d2c:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    4d30:	cmp	w0, #0x0
    4d34:	b.eq	4d40 <deflateResetKeep@@ZLIB_1.2.5.2+0x24>  // b.none
    4d38:	mov	w0, #0xfffffffe            	// #-2
    4d3c:	b	4e40 <deflateResetKeep@@ZLIB_1.2.5.2+0x124>
    4d40:	ldr	x0, [sp, #24]
    4d44:	str	xzr, [x0, #40]
    4d48:	ldr	x0, [sp, #24]
    4d4c:	ldr	x1, [x0, #40]
    4d50:	ldr	x0, [sp, #24]
    4d54:	str	x1, [x0, #16]
    4d58:	ldr	x0, [sp, #24]
    4d5c:	str	xzr, [x0, #48]
    4d60:	ldr	x0, [sp, #24]
    4d64:	mov	w1, #0x2                   	// #2
    4d68:	str	w1, [x0, #88]
    4d6c:	ldr	x0, [sp, #24]
    4d70:	ldr	x0, [x0, #56]
    4d74:	str	x0, [sp, #40]
    4d78:	ldr	x0, [sp, #40]
    4d7c:	str	xzr, [x0, #40]
    4d80:	ldr	x0, [sp, #40]
    4d84:	ldr	x1, [x0, #16]
    4d88:	ldr	x0, [sp, #40]
    4d8c:	str	x1, [x0, #32]
    4d90:	ldr	x0, [sp, #40]
    4d94:	ldr	w0, [x0, #48]
    4d98:	cmp	w0, #0x0
    4d9c:	b.ge	4db4 <deflateResetKeep@@ZLIB_1.2.5.2+0x98>  // b.tcont
    4da0:	ldr	x0, [sp, #40]
    4da4:	ldr	w0, [x0, #48]
    4da8:	neg	w1, w0
    4dac:	ldr	x0, [sp, #40]
    4db0:	str	w1, [x0, #48]
    4db4:	ldr	x0, [sp, #40]
    4db8:	ldr	w0, [x0, #48]
    4dbc:	cmp	w0, #0x2
    4dc0:	b.eq	4de4 <deflateResetKeep@@ZLIB_1.2.5.2+0xc8>  // b.none
    4dc4:	ldr	x0, [sp, #40]
    4dc8:	ldr	w0, [x0, #48]
    4dcc:	cmp	w0, #0x0
    4dd0:	b.eq	4ddc <deflateResetKeep@@ZLIB_1.2.5.2+0xc0>  // b.none
    4dd4:	mov	w0, #0x2a                  	// #42
    4dd8:	b	4de8 <deflateResetKeep@@ZLIB_1.2.5.2+0xcc>
    4ddc:	mov	w0, #0x71                  	// #113
    4de0:	b	4de8 <deflateResetKeep@@ZLIB_1.2.5.2+0xcc>
    4de4:	mov	w0, #0x39                  	// #57
    4de8:	ldr	x1, [sp, #40]
    4dec:	str	w0, [x1, #8]
    4df0:	ldr	x0, [sp, #40]
    4df4:	ldr	w0, [x0, #48]
    4df8:	cmp	w0, #0x2
    4dfc:	b.ne	4e14 <deflateResetKeep@@ZLIB_1.2.5.2+0xf8>  // b.any
    4e00:	mov	w2, #0x0                   	// #0
    4e04:	mov	x1, #0x0                   	// #0
    4e08:	mov	x0, #0x0                   	// #0
    4e0c:	bl	2430 <crc32@plt>
    4e10:	b	4e24 <deflateResetKeep@@ZLIB_1.2.5.2+0x108>
    4e14:	mov	w2, #0x0                   	// #0
    4e18:	mov	x1, #0x0                   	// #0
    4e1c:	mov	x0, #0x0                   	// #0
    4e20:	bl	2560 <adler32@plt>
    4e24:	ldr	x1, [sp, #24]
    4e28:	str	x0, [x1, #96]
    4e2c:	ldr	x0, [sp, #40]
    4e30:	str	wzr, [x0, #76]
    4e34:	ldr	x0, [sp, #40]
    4e38:	bl	1137c <inflateCodesUsed@@ZLIB_1.2.9+0x98c>
    4e3c:	mov	w0, #0x0                   	// #0
    4e40:	ldp	x29, x30, [sp], #48
    4e44:	ret

0000000000004e48 <deflateReset@@Base>:
    4e48:	stp	x29, x30, [sp, #-48]!
    4e4c:	mov	x29, sp
    4e50:	str	x0, [sp, #24]
    4e54:	ldr	x0, [sp, #24]
    4e58:	bl	2630 <deflateResetKeep@plt>
    4e5c:	str	w0, [sp, #44]
    4e60:	ldr	w0, [sp, #44]
    4e64:	cmp	w0, #0x0
    4e68:	b.ne	4e78 <deflateReset@@Base+0x30>  // b.any
    4e6c:	ldr	x0, [sp, #24]
    4e70:	ldr	x0, [x0, #56]
    4e74:	bl	71a0 <deflateCopy@@Base+0x458>
    4e78:	ldr	w0, [sp, #44]
    4e7c:	ldp	x29, x30, [sp], #48
    4e80:	ret

0000000000004e84 <deflateSetHeader@@ZLIB_1.2.2>:
    4e84:	stp	x29, x30, [sp, #-32]!
    4e88:	mov	x29, sp
    4e8c:	str	x0, [sp, #24]
    4e90:	str	x1, [sp, #16]
    4e94:	ldr	x0, [sp, #24]
    4e98:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    4e9c:	cmp	w0, #0x0
    4ea0:	b.ne	4eb8 <deflateSetHeader@@ZLIB_1.2.2+0x34>  // b.any
    4ea4:	ldr	x0, [sp, #24]
    4ea8:	ldr	x0, [x0, #56]
    4eac:	ldr	w0, [x0, #48]
    4eb0:	cmp	w0, #0x2
    4eb4:	b.eq	4ec0 <deflateSetHeader@@ZLIB_1.2.2+0x3c>  // b.none
    4eb8:	mov	w0, #0xfffffffe            	// #-2
    4ebc:	b	4ed4 <deflateSetHeader@@ZLIB_1.2.2+0x50>
    4ec0:	ldr	x0, [sp, #24]
    4ec4:	ldr	x0, [x0, #56]
    4ec8:	ldr	x1, [sp, #16]
    4ecc:	str	x1, [x0, #56]
    4ed0:	mov	w0, #0x0                   	// #0
    4ed4:	ldp	x29, x30, [sp], #32
    4ed8:	ret

0000000000004edc <deflatePending@@ZLIB_1.2.5.1>:
    4edc:	stp	x29, x30, [sp, #-48]!
    4ee0:	mov	x29, sp
    4ee4:	str	x0, [sp, #40]
    4ee8:	str	x1, [sp, #32]
    4eec:	str	x2, [sp, #24]
    4ef0:	ldr	x0, [sp, #40]
    4ef4:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    4ef8:	cmp	w0, #0x0
    4efc:	b.eq	4f08 <deflatePending@@ZLIB_1.2.5.1+0x2c>  // b.none
    4f00:	mov	w0, #0xfffffffe            	// #-2
    4f04:	b	4f50 <deflatePending@@ZLIB_1.2.5.1+0x74>
    4f08:	ldr	x0, [sp, #32]
    4f0c:	cmp	x0, #0x0
    4f10:	b.eq	4f2c <deflatePending@@ZLIB_1.2.5.1+0x50>  // b.none
    4f14:	ldr	x0, [sp, #40]
    4f18:	ldr	x0, [x0, #56]
    4f1c:	ldr	x0, [x0, #40]
    4f20:	mov	w1, w0
    4f24:	ldr	x0, [sp, #32]
    4f28:	str	w1, [x0]
    4f2c:	ldr	x0, [sp, #24]
    4f30:	cmp	x0, #0x0
    4f34:	b.eq	4f4c <deflatePending@@ZLIB_1.2.5.1+0x70>  // b.none
    4f38:	ldr	x0, [sp, #40]
    4f3c:	ldr	x0, [x0, #56]
    4f40:	ldr	w1, [x0, #5940]
    4f44:	ldr	x0, [sp, #24]
    4f48:	str	w1, [x0]
    4f4c:	mov	w0, #0x0                   	// #0
    4f50:	ldp	x29, x30, [sp], #48
    4f54:	ret

0000000000004f58 <deflatePrime@@ZLIB_1.2.0.8>:
    4f58:	stp	x29, x30, [sp, #-48]!
    4f5c:	mov	x29, sp
    4f60:	str	x0, [sp, #24]
    4f64:	str	w1, [sp, #20]
    4f68:	str	w2, [sp, #16]
    4f6c:	ldr	x0, [sp, #24]
    4f70:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    4f74:	cmp	w0, #0x0
    4f78:	b.eq	4f84 <deflatePrime@@ZLIB_1.2.0.8+0x2c>  // b.none
    4f7c:	mov	w0, #0xfffffffe            	// #-2
    4f80:	b	5070 <deflatePrime@@ZLIB_1.2.0.8+0x118>
    4f84:	ldr	x0, [sp, #24]
    4f88:	ldr	x0, [x0, #56]
    4f8c:	str	x0, [sp, #32]
    4f90:	ldr	x0, [sp, #32]
    4f94:	ldr	x1, [x0, #5904]
    4f98:	ldr	x0, [sp, #32]
    4f9c:	ldr	x0, [x0, #32]
    4fa0:	add	x0, x0, #0x2
    4fa4:	cmp	x1, x0
    4fa8:	b.cs	4fb4 <deflatePrime@@ZLIB_1.2.0.8+0x5c>  // b.hs, b.nlast
    4fac:	mov	w0, #0xfffffffb            	// #-5
    4fb0:	b	5070 <deflatePrime@@ZLIB_1.2.0.8+0x118>
    4fb4:	ldr	x0, [sp, #32]
    4fb8:	ldr	w0, [x0, #5940]
    4fbc:	mov	w1, #0x10                  	// #16
    4fc0:	sub	w0, w1, w0
    4fc4:	str	w0, [sp, #44]
    4fc8:	ldr	w1, [sp, #44]
    4fcc:	ldr	w0, [sp, #20]
    4fd0:	cmp	w1, w0
    4fd4:	b.le	4fe0 <deflatePrime@@ZLIB_1.2.0.8+0x88>
    4fd8:	ldr	w0, [sp, #20]
    4fdc:	str	w0, [sp, #44]
    4fe0:	ldr	x0, [sp, #32]
    4fe4:	ldrh	w1, [x0, #5936]
    4fe8:	ldr	w0, [sp, #44]
    4fec:	mov	w2, #0x1                   	// #1
    4ff0:	lsl	w0, w2, w0
    4ff4:	sub	w2, w0, #0x1
    4ff8:	ldr	w0, [sp, #16]
    4ffc:	and	w2, w2, w0
    5000:	ldr	x0, [sp, #32]
    5004:	ldr	w0, [x0, #5940]
    5008:	lsl	w0, w2, w0
    500c:	and	w0, w0, #0xffff
    5010:	orr	w0, w1, w0
    5014:	and	w1, w0, #0xffff
    5018:	ldr	x0, [sp, #32]
    501c:	strh	w1, [x0, #5936]
    5020:	ldr	x0, [sp, #32]
    5024:	ldr	w1, [x0, #5940]
    5028:	ldr	w0, [sp, #44]
    502c:	add	w1, w1, w0
    5030:	ldr	x0, [sp, #32]
    5034:	str	w1, [x0, #5940]
    5038:	ldr	x0, [sp, #32]
    503c:	bl	13c40 <inflateCodesUsed@@ZLIB_1.2.9+0x3250>
    5040:	ldr	w0, [sp, #44]
    5044:	ldr	w1, [sp, #16]
    5048:	asr	w0, w1, w0
    504c:	str	w0, [sp, #16]
    5050:	ldr	w1, [sp, #20]
    5054:	ldr	w0, [sp, #44]
    5058:	sub	w0, w1, w0
    505c:	str	w0, [sp, #20]
    5060:	ldr	w0, [sp, #20]
    5064:	cmp	w0, #0x0
    5068:	b.ne	4fb4 <deflatePrime@@ZLIB_1.2.0.8+0x5c>  // b.any
    506c:	mov	w0, #0x0                   	// #0
    5070:	ldp	x29, x30, [sp], #48
    5074:	ret

0000000000005078 <deflateParams@@Base>:
    5078:	stp	x29, x30, [sp, #-64]!
    507c:	mov	x29, sp
    5080:	str	x0, [sp, #24]
    5084:	str	w1, [sp, #20]
    5088:	str	w2, [sp, #16]
    508c:	ldr	x0, [sp, #24]
    5090:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    5094:	cmp	w0, #0x0
    5098:	b.eq	50a4 <deflateParams@@Base+0x2c>  // b.none
    509c:	mov	w0, #0xfffffffe            	// #-2
    50a0:	b	52f8 <deflateParams@@Base+0x280>
    50a4:	ldr	x0, [sp, #24]
    50a8:	ldr	x0, [x0, #56]
    50ac:	str	x0, [sp, #56]
    50b0:	ldr	w0, [sp, #20]
    50b4:	cmn	w0, #0x1
    50b8:	b.ne	50c4 <deflateParams@@Base+0x4c>  // b.any
    50bc:	mov	w0, #0x6                   	// #6
    50c0:	str	w0, [sp, #20]
    50c4:	ldr	w0, [sp, #20]
    50c8:	cmp	w0, #0x0
    50cc:	b.lt	50f4 <deflateParams@@Base+0x7c>  // b.tstop
    50d0:	ldr	w0, [sp, #20]
    50d4:	cmp	w0, #0x9
    50d8:	b.gt	50f4 <deflateParams@@Base+0x7c>
    50dc:	ldr	w0, [sp, #16]
    50e0:	cmp	w0, #0x0
    50e4:	b.lt	50f4 <deflateParams@@Base+0x7c>  // b.tstop
    50e8:	ldr	w0, [sp, #16]
    50ec:	cmp	w0, #0x4
    50f0:	b.le	50fc <deflateParams@@Base+0x84>
    50f4:	mov	w0, #0xfffffffe            	// #-2
    50f8:	b	52f8 <deflateParams@@Base+0x280>
    50fc:	ldr	x0, [sp, #56]
    5100:	ldr	w2, [x0, #196]
    5104:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    5108:	add	x1, x0, #0xc68
    510c:	sxtw	x0, w2
    5110:	lsl	x0, x0, #4
    5114:	add	x0, x1, x0
    5118:	ldr	x0, [x0, #8]
    511c:	str	x0, [sp, #48]
    5120:	ldr	x0, [sp, #56]
    5124:	ldr	w0, [x0, #200]
    5128:	ldr	w1, [sp, #16]
    512c:	cmp	w1, w0
    5130:	b.ne	5158 <deflateParams@@Base+0xe0>  // b.any
    5134:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    5138:	add	x1, x0, #0xc68
    513c:	ldrsw	x0, [sp, #20]
    5140:	lsl	x0, x0, #4
    5144:	add	x0, x1, x0
    5148:	ldr	x0, [x0, #8]
    514c:	ldr	x1, [sp, #48]
    5150:	cmp	x1, x0
    5154:	b.eq	51a4 <deflateParams@@Base+0x12c>  // b.none
    5158:	ldr	x0, [sp, #56]
    515c:	ldr	x0, [x0, #5944]
    5160:	cmp	x0, #0x0
    5164:	b.eq	51a4 <deflateParams@@Base+0x12c>  // b.none
    5168:	mov	w1, #0x5                   	// #5
    516c:	ldr	x0, [sp, #24]
    5170:	bl	2490 <deflate@plt>
    5174:	str	w0, [sp, #44]
    5178:	ldr	w0, [sp, #44]
    517c:	cmn	w0, #0x2
    5180:	b.ne	518c <deflateParams@@Base+0x114>  // b.any
    5184:	ldr	w0, [sp, #44]
    5188:	b	52f8 <deflateParams@@Base+0x280>
    518c:	ldr	x0, [sp, #24]
    5190:	ldr	w0, [x0, #32]
    5194:	cmp	w0, #0x0
    5198:	b.ne	51a4 <deflateParams@@Base+0x12c>  // b.any
    519c:	mov	w0, #0xfffffffb            	// #-5
    51a0:	b	52f8 <deflateParams@@Base+0x280>
    51a4:	ldr	x0, [sp, #56]
    51a8:	ldr	w0, [x0, #196]
    51ac:	ldr	w1, [sp, #20]
    51b0:	cmp	w1, w0
    51b4:	b.eq	52e8 <deflateParams@@Base+0x270>  // b.none
    51b8:	ldr	x0, [sp, #56]
    51bc:	ldr	w0, [x0, #196]
    51c0:	cmp	w0, #0x0
    51c4:	b.ne	524c <deflateParams@@Base+0x1d4>  // b.any
    51c8:	ldr	x0, [sp, #56]
    51cc:	ldr	w0, [x0, #5928]
    51d0:	cmp	w0, #0x0
    51d4:	b.eq	524c <deflateParams@@Base+0x1d4>  // b.none
    51d8:	ldr	x0, [sp, #56]
    51dc:	ldr	w0, [x0, #5928]
    51e0:	cmp	w0, #0x1
    51e4:	b.ne	51f4 <deflateParams@@Base+0x17c>  // b.any
    51e8:	ldr	x0, [sp, #56]
    51ec:	bl	4170 <crc32_combine64@@ZLIB_1.2.3.3+0x2c>
    51f0:	b	5218 <deflateParams@@Base+0x1a0>
    51f4:	ldr	x0, [sp, #56]
    51f8:	ldr	x1, [x0, #120]
    51fc:	ldr	x0, [sp, #56]
    5200:	ldr	w0, [x0, #132]
    5204:	sub	w0, w0, #0x1
    5208:	mov	w0, w0
    520c:	lsl	x0, x0, #1
    5210:	add	x0, x1, x0
    5214:	strh	wzr, [x0]
    5218:	ldr	x0, [sp, #56]
    521c:	ldr	x3, [x0, #120]
    5220:	ldr	x0, [sp, #56]
    5224:	ldr	w0, [x0, #132]
    5228:	sub	w0, w0, #0x1
    522c:	mov	w0, w0
    5230:	lsl	x0, x0, #1
    5234:	mov	x2, x0
    5238:	mov	w1, #0x0                   	// #0
    523c:	mov	x0, x3
    5240:	bl	24a0 <memset@plt>
    5244:	ldr	x0, [sp, #56]
    5248:	str	wzr, [x0, #5928]
    524c:	ldr	x0, [sp, #56]
    5250:	ldr	w1, [sp, #20]
    5254:	str	w1, [x0, #196]
    5258:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    525c:	add	x1, x0, #0xc68
    5260:	ldrsw	x0, [sp, #20]
    5264:	lsl	x0, x0, #4
    5268:	add	x0, x1, x0
    526c:	ldrh	w0, [x0, #2]
    5270:	mov	w1, w0
    5274:	ldr	x0, [sp, #56]
    5278:	str	w1, [x0, #192]
    527c:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    5280:	add	x1, x0, #0xc68
    5284:	ldrsw	x0, [sp, #20]
    5288:	lsl	x0, x0, #4
    528c:	add	x0, x1, x0
    5290:	ldrh	w0, [x0]
    5294:	mov	w1, w0
    5298:	ldr	x0, [sp, #56]
    529c:	str	w1, [x0, #204]
    52a0:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    52a4:	add	x1, x0, #0xc68
    52a8:	ldrsw	x0, [sp, #20]
    52ac:	lsl	x0, x0, #4
    52b0:	add	x0, x1, x0
    52b4:	ldrh	w0, [x0, #4]
    52b8:	mov	w1, w0
    52bc:	ldr	x0, [sp, #56]
    52c0:	str	w1, [x0, #208]
    52c4:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    52c8:	add	x1, x0, #0xc68
    52cc:	ldrsw	x0, [sp, #20]
    52d0:	lsl	x0, x0, #4
    52d4:	add	x0, x1, x0
    52d8:	ldrh	w0, [x0, #6]
    52dc:	mov	w1, w0
    52e0:	ldr	x0, [sp, #56]
    52e4:	str	w1, [x0, #188]
    52e8:	ldr	x0, [sp, #56]
    52ec:	ldr	w1, [sp, #16]
    52f0:	str	w1, [x0, #200]
    52f4:	mov	w0, #0x0                   	// #0
    52f8:	ldp	x29, x30, [sp], #64
    52fc:	ret

0000000000005300 <deflateTune@@ZLIB_1.2.2.3>:
    5300:	stp	x29, x30, [sp, #-64]!
    5304:	mov	x29, sp
    5308:	str	x0, [sp, #40]
    530c:	str	w1, [sp, #36]
    5310:	str	w2, [sp, #32]
    5314:	str	w3, [sp, #28]
    5318:	str	w4, [sp, #24]
    531c:	ldr	x0, [sp, #40]
    5320:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    5324:	cmp	w0, #0x0
    5328:	b.eq	5334 <deflateTune@@ZLIB_1.2.2.3+0x34>  // b.none
    532c:	mov	w0, #0xfffffffe            	// #-2
    5330:	b	5374 <deflateTune@@ZLIB_1.2.2.3+0x74>
    5334:	ldr	x0, [sp, #40]
    5338:	ldr	x0, [x0, #56]
    533c:	str	x0, [sp, #56]
    5340:	ldr	w1, [sp, #36]
    5344:	ldr	x0, [sp, #56]
    5348:	str	w1, [x0, #204]
    534c:	ldr	w1, [sp, #32]
    5350:	ldr	x0, [sp, #56]
    5354:	str	w1, [x0, #192]
    5358:	ldr	x0, [sp, #56]
    535c:	ldr	w1, [sp, #28]
    5360:	str	w1, [x0, #208]
    5364:	ldr	w1, [sp, #24]
    5368:	ldr	x0, [sp, #56]
    536c:	str	w1, [x0, #188]
    5370:	mov	w0, #0x0                   	// #0
    5374:	ldp	x29, x30, [sp], #64
    5378:	ret

000000000000537c <deflateBound@@ZLIB_1.2.0>:
    537c:	stp	x29, x30, [sp, #-64]!
    5380:	mov	x29, sp
    5384:	str	x0, [sp, #24]
    5388:	str	x1, [sp, #16]
    538c:	ldr	x0, [sp, #16]
    5390:	add	x0, x0, #0x7
    5394:	lsr	x1, x0, #3
    5398:	ldr	x0, [sp, #16]
    539c:	add	x1, x1, x0
    53a0:	ldr	x0, [sp, #16]
    53a4:	add	x0, x0, #0x3f
    53a8:	lsr	x0, x0, #6
    53ac:	add	x0, x1, x0
    53b0:	add	x0, x0, #0x5
    53b4:	str	x0, [sp, #40]
    53b8:	ldr	x0, [sp, #24]
    53bc:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    53c0:	cmp	w0, #0x0
    53c4:	b.eq	53d4 <deflateBound@@ZLIB_1.2.0+0x58>  // b.none
    53c8:	ldr	x0, [sp, #40]
    53cc:	add	x0, x0, #0x6
    53d0:	b	559c <deflateBound@@ZLIB_1.2.0+0x220>
    53d4:	ldr	x0, [sp, #24]
    53d8:	ldr	x0, [x0, #56]
    53dc:	str	x0, [sp, #32]
    53e0:	ldr	x0, [sp, #32]
    53e4:	ldr	w0, [x0, #48]
    53e8:	cmp	w0, #0x2
    53ec:	b.eq	5438 <deflateBound@@ZLIB_1.2.0+0xbc>  // b.none
    53f0:	cmp	w0, #0x2
    53f4:	b.gt	5528 <deflateBound@@ZLIB_1.2.0+0x1ac>
    53f8:	cmp	w0, #0x0
    53fc:	b.eq	540c <deflateBound@@ZLIB_1.2.0+0x90>  // b.none
    5400:	cmp	w0, #0x1
    5404:	b.eq	5414 <deflateBound@@ZLIB_1.2.0+0x98>  // b.none
    5408:	b	5528 <deflateBound@@ZLIB_1.2.0+0x1ac>
    540c:	str	xzr, [sp, #56]
    5410:	b	5538 <deflateBound@@ZLIB_1.2.0+0x1bc>
    5414:	ldr	x0, [sp, #32]
    5418:	ldr	w0, [x0, #172]
    541c:	cmp	w0, #0x0
    5420:	b.eq	542c <deflateBound@@ZLIB_1.2.0+0xb0>  // b.none
    5424:	mov	x0, #0xa                   	// #10
    5428:	b	5430 <deflateBound@@ZLIB_1.2.0+0xb4>
    542c:	mov	x0, #0x6                   	// #6
    5430:	str	x0, [sp, #56]
    5434:	b	5538 <deflateBound@@ZLIB_1.2.0+0x1bc>
    5438:	mov	x0, #0x12                  	// #18
    543c:	str	x0, [sp, #56]
    5440:	ldr	x0, [sp, #32]
    5444:	ldr	x0, [x0, #56]
    5448:	cmp	x0, #0x0
    544c:	b.eq	5534 <deflateBound@@ZLIB_1.2.0+0x1b8>  // b.none
    5450:	ldr	x0, [sp, #32]
    5454:	ldr	x0, [x0, #56]
    5458:	ldr	x0, [x0, #24]
    545c:	cmp	x0, #0x0
    5460:	b.eq	5484 <deflateBound@@ZLIB_1.2.0+0x108>  // b.none
    5464:	ldr	x0, [sp, #32]
    5468:	ldr	x0, [x0, #56]
    546c:	ldr	w0, [x0, #32]
    5470:	add	w0, w0, #0x2
    5474:	mov	w0, w0
    5478:	ldr	x1, [sp, #56]
    547c:	add	x0, x1, x0
    5480:	str	x0, [sp, #56]
    5484:	ldr	x0, [sp, #32]
    5488:	ldr	x0, [x0, #56]
    548c:	ldr	x0, [x0, #40]
    5490:	str	x0, [sp, #48]
    5494:	ldr	x0, [sp, #48]
    5498:	cmp	x0, #0x0
    549c:	b.eq	54c4 <deflateBound@@ZLIB_1.2.0+0x148>  // b.none
    54a0:	ldr	x0, [sp, #56]
    54a4:	add	x0, x0, #0x1
    54a8:	str	x0, [sp, #56]
    54ac:	ldr	x0, [sp, #48]
    54b0:	add	x1, x0, #0x1
    54b4:	str	x1, [sp, #48]
    54b8:	ldrb	w0, [x0]
    54bc:	cmp	w0, #0x0
    54c0:	b.ne	54a0 <deflateBound@@ZLIB_1.2.0+0x124>  // b.any
    54c4:	ldr	x0, [sp, #32]
    54c8:	ldr	x0, [x0, #56]
    54cc:	ldr	x0, [x0, #56]
    54d0:	str	x0, [sp, #48]
    54d4:	ldr	x0, [sp, #48]
    54d8:	cmp	x0, #0x0
    54dc:	b.eq	5504 <deflateBound@@ZLIB_1.2.0+0x188>  // b.none
    54e0:	ldr	x0, [sp, #56]
    54e4:	add	x0, x0, #0x1
    54e8:	str	x0, [sp, #56]
    54ec:	ldr	x0, [sp, #48]
    54f0:	add	x1, x0, #0x1
    54f4:	str	x1, [sp, #48]
    54f8:	ldrb	w0, [x0]
    54fc:	cmp	w0, #0x0
    5500:	b.ne	54e0 <deflateBound@@ZLIB_1.2.0+0x164>  // b.any
    5504:	ldr	x0, [sp, #32]
    5508:	ldr	x0, [x0, #56]
    550c:	ldr	w0, [x0, #68]
    5510:	cmp	w0, #0x0
    5514:	b.eq	5534 <deflateBound@@ZLIB_1.2.0+0x1b8>  // b.none
    5518:	ldr	x0, [sp, #56]
    551c:	add	x0, x0, #0x2
    5520:	str	x0, [sp, #56]
    5524:	b	5534 <deflateBound@@ZLIB_1.2.0+0x1b8>
    5528:	mov	x0, #0x6                   	// #6
    552c:	str	x0, [sp, #56]
    5530:	b	5538 <deflateBound@@ZLIB_1.2.0+0x1bc>
    5534:	nop
    5538:	ldr	x0, [sp, #32]
    553c:	ldr	w0, [x0, #84]
    5540:	cmp	w0, #0xf
    5544:	b.ne	5558 <deflateBound@@ZLIB_1.2.0+0x1dc>  // b.any
    5548:	ldr	x0, [sp, #32]
    554c:	ldr	w0, [x0, #136]
    5550:	cmp	w0, #0xf
    5554:	b.eq	5568 <deflateBound@@ZLIB_1.2.0+0x1ec>  // b.none
    5558:	ldr	x1, [sp, #40]
    555c:	ldr	x0, [sp, #56]
    5560:	add	x0, x1, x0
    5564:	b	559c <deflateBound@@ZLIB_1.2.0+0x220>
    5568:	ldr	x0, [sp, #16]
    556c:	lsr	x1, x0, #12
    5570:	ldr	x0, [sp, #16]
    5574:	add	x1, x1, x0
    5578:	ldr	x0, [sp, #16]
    557c:	lsr	x0, x0, #14
    5580:	add	x1, x1, x0
    5584:	ldr	x0, [sp, #16]
    5588:	lsr	x0, x0, #25
    558c:	add	x1, x1, x0
    5590:	ldr	x0, [sp, #56]
    5594:	add	x0, x1, x0
    5598:	add	x0, x0, #0x7
    559c:	ldp	x29, x30, [sp], #64
    55a0:	ret
    55a4:	sub	sp, sp, #0x10
    55a8:	str	x0, [sp, #8]
    55ac:	str	w1, [sp, #4]
    55b0:	ldr	w0, [sp, #4]
    55b4:	lsr	w4, w0, #8
    55b8:	ldr	x0, [sp, #8]
    55bc:	ldr	x1, [x0, #16]
    55c0:	ldr	x0, [sp, #8]
    55c4:	ldr	x0, [x0, #40]
    55c8:	add	x3, x0, #0x1
    55cc:	ldr	x2, [sp, #8]
    55d0:	str	x3, [x2, #40]
    55d4:	add	x0, x1, x0
    55d8:	and	w1, w4, #0xff
    55dc:	strb	w1, [x0]
    55e0:	ldr	x0, [sp, #8]
    55e4:	ldr	x1, [x0, #16]
    55e8:	ldr	x0, [sp, #8]
    55ec:	ldr	x0, [x0, #40]
    55f0:	add	x3, x0, #0x1
    55f4:	ldr	x2, [sp, #8]
    55f8:	str	x3, [x2, #40]
    55fc:	add	x0, x1, x0
    5600:	ldr	w1, [sp, #4]
    5604:	and	w1, w1, #0xff
    5608:	strb	w1, [x0]
    560c:	nop
    5610:	add	sp, sp, #0x10
    5614:	ret
    5618:	stp	x29, x30, [sp, #-48]!
    561c:	mov	x29, sp
    5620:	str	x0, [sp, #24]
    5624:	ldr	x0, [sp, #24]
    5628:	ldr	x0, [x0, #56]
    562c:	str	x0, [sp, #32]
    5630:	ldr	x0, [sp, #32]
    5634:	bl	13c40 <inflateCodesUsed@@ZLIB_1.2.9+0x3250>
    5638:	ldr	x0, [sp, #32]
    563c:	ldr	x0, [x0, #40]
    5640:	str	w0, [sp, #44]
    5644:	ldr	x0, [sp, #24]
    5648:	ldr	w0, [x0, #32]
    564c:	ldr	w1, [sp, #44]
    5650:	cmp	w1, w0
    5654:	b.ls	5664 <deflateBound@@ZLIB_1.2.0+0x2e8>  // b.plast
    5658:	ldr	x0, [sp, #24]
    565c:	ldr	w0, [x0, #32]
    5660:	str	w0, [sp, #44]
    5664:	ldr	w0, [sp, #44]
    5668:	cmp	w0, #0x0
    566c:	b.eq	5730 <deflateBound@@ZLIB_1.2.0+0x3b4>  // b.none
    5670:	ldr	x0, [sp, #24]
    5674:	ldr	x3, [x0, #24]
    5678:	ldr	x0, [sp, #32]
    567c:	ldr	x0, [x0, #32]
    5680:	ldr	w1, [sp, #44]
    5684:	mov	x2, x1
    5688:	mov	x1, x0
    568c:	mov	x0, x3
    5690:	bl	23a0 <memcpy@plt>
    5694:	ldr	x0, [sp, #24]
    5698:	ldr	x1, [x0, #24]
    569c:	ldr	w0, [sp, #44]
    56a0:	add	x1, x1, x0
    56a4:	ldr	x0, [sp, #24]
    56a8:	str	x1, [x0, #24]
    56ac:	ldr	x0, [sp, #32]
    56b0:	ldr	x1, [x0, #32]
    56b4:	ldr	w0, [sp, #44]
    56b8:	add	x1, x1, x0
    56bc:	ldr	x0, [sp, #32]
    56c0:	str	x1, [x0, #32]
    56c4:	ldr	x0, [sp, #24]
    56c8:	ldr	x1, [x0, #40]
    56cc:	ldr	w0, [sp, #44]
    56d0:	add	x1, x1, x0
    56d4:	ldr	x0, [sp, #24]
    56d8:	str	x1, [x0, #40]
    56dc:	ldr	x0, [sp, #24]
    56e0:	ldr	w1, [x0, #32]
    56e4:	ldr	w0, [sp, #44]
    56e8:	sub	w1, w1, w0
    56ec:	ldr	x0, [sp, #24]
    56f0:	str	w1, [x0, #32]
    56f4:	ldr	x0, [sp, #32]
    56f8:	ldr	x1, [x0, #40]
    56fc:	ldr	w0, [sp, #44]
    5700:	sub	x1, x1, x0
    5704:	ldr	x0, [sp, #32]
    5708:	str	x1, [x0, #40]
    570c:	ldr	x0, [sp, #32]
    5710:	ldr	x0, [x0, #40]
    5714:	cmp	x0, #0x0
    5718:	b.ne	5734 <deflateBound@@ZLIB_1.2.0+0x3b8>  // b.any
    571c:	ldr	x0, [sp, #32]
    5720:	ldr	x1, [x0, #16]
    5724:	ldr	x0, [sp, #32]
    5728:	str	x1, [x0, #32]
    572c:	b	5734 <deflateBound@@ZLIB_1.2.0+0x3b8>
    5730:	nop
    5734:	ldp	x29, x30, [sp], #48
    5738:	ret

000000000000573c <deflate@@Base>:
    573c:	stp	x29, x30, [sp, #-112]!
    5740:	mov	x29, sp
    5744:	str	x0, [sp, #24]
    5748:	str	w1, [sp, #20]
    574c:	ldr	x0, [sp, #24]
    5750:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    5754:	cmp	w0, #0x0
    5758:	b.ne	5774 <deflate@@Base+0x38>  // b.any
    575c:	ldr	w0, [sp, #20]
    5760:	cmp	w0, #0x5
    5764:	b.gt	5774 <deflate@@Base+0x38>
    5768:	ldr	w0, [sp, #20]
    576c:	cmp	w0, #0x0
    5770:	b.ge	577c <deflate@@Base+0x40>  // b.tcont
    5774:	mov	w0, #0xfffffffe            	// #-2
    5778:	b	6bd0 <deflate@@Base+0x1494>
    577c:	ldr	x0, [sp, #24]
    5780:	ldr	x0, [x0, #56]
    5784:	str	x0, [sp, #64]
    5788:	ldr	x0, [sp, #24]
    578c:	ldr	x0, [x0, #24]
    5790:	cmp	x0, #0x0
    5794:	b.eq	57d4 <deflate@@Base+0x98>  // b.none
    5798:	ldr	x0, [sp, #24]
    579c:	ldr	w0, [x0, #8]
    57a0:	cmp	w0, #0x0
    57a4:	b.eq	57b8 <deflate@@Base+0x7c>  // b.none
    57a8:	ldr	x0, [sp, #24]
    57ac:	ldr	x0, [x0]
    57b0:	cmp	x0, #0x0
    57b4:	b.eq	57d4 <deflate@@Base+0x98>  // b.none
    57b8:	ldr	x0, [sp, #64]
    57bc:	ldr	w0, [x0, #8]
    57c0:	cmp	w0, #0x29a
    57c4:	b.ne	57f0 <deflate@@Base+0xb4>  // b.any
    57c8:	ldr	w0, [sp, #20]
    57cc:	cmp	w0, #0x4
    57d0:	b.eq	57f0 <deflate@@Base+0xb4>  // b.none
    57d4:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    57d8:	ldr	x0, [x0, #4056]
    57dc:	ldr	x1, [x0, #32]
    57e0:	ldr	x0, [sp, #24]
    57e4:	str	x1, [x0, #48]
    57e8:	mov	w0, #0xfffffffe            	// #-2
    57ec:	b	6bd0 <deflate@@Base+0x1494>
    57f0:	ldr	x0, [sp, #24]
    57f4:	ldr	w0, [x0, #32]
    57f8:	cmp	w0, #0x0
    57fc:	b.ne	581c <deflate@@Base+0xe0>  // b.any
    5800:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    5804:	ldr	x0, [x0, #4056]
    5808:	ldr	x1, [x0, #56]
    580c:	ldr	x0, [sp, #24]
    5810:	str	x1, [x0, #48]
    5814:	mov	w0, #0xfffffffb            	// #-5
    5818:	b	6bd0 <deflate@@Base+0x1494>
    581c:	ldr	x0, [sp, #64]
    5820:	ldr	w0, [x0, #76]
    5824:	str	w0, [sp, #60]
    5828:	ldr	x0, [sp, #64]
    582c:	ldr	w1, [sp, #20]
    5830:	str	w1, [x0, #76]
    5834:	ldr	x0, [sp, #64]
    5838:	ldr	x0, [x0, #40]
    583c:	cmp	x0, #0x0
    5840:	b.eq	5870 <deflate@@Base+0x134>  // b.none
    5844:	ldr	x0, [sp, #24]
    5848:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    584c:	ldr	x0, [sp, #24]
    5850:	ldr	w0, [x0, #32]
    5854:	cmp	w0, #0x0
    5858:	b.ne	58f8 <deflate@@Base+0x1bc>  // b.any
    585c:	ldr	x0, [sp, #64]
    5860:	mov	w1, #0xffffffff            	// #-1
    5864:	str	w1, [x0, #76]
    5868:	mov	w0, #0x0                   	// #0
    586c:	b	6bd0 <deflate@@Base+0x1494>
    5870:	ldr	x0, [sp, #24]
    5874:	ldr	w0, [x0, #8]
    5878:	cmp	w0, #0x0
    587c:	b.ne	58f8 <deflate@@Base+0x1bc>  // b.any
    5880:	ldr	w0, [sp, #20]
    5884:	lsl	w1, w0, #1
    5888:	ldr	w0, [sp, #20]
    588c:	cmp	w0, #0x4
    5890:	b.le	589c <deflate@@Base+0x160>
    5894:	mov	w0, #0x9                   	// #9
    5898:	b	58a0 <deflate@@Base+0x164>
    589c:	mov	w0, #0x0                   	// #0
    58a0:	sub	w1, w1, w0
    58a4:	ldr	w0, [sp, #60]
    58a8:	lsl	w2, w0, #1
    58ac:	ldr	w0, [sp, #60]
    58b0:	cmp	w0, #0x4
    58b4:	b.le	58c0 <deflate@@Base+0x184>
    58b8:	mov	w0, #0x9                   	// #9
    58bc:	b	58c4 <deflate@@Base+0x188>
    58c0:	mov	w0, #0x0                   	// #0
    58c4:	sub	w0, w2, w0
    58c8:	cmp	w1, w0
    58cc:	b.gt	58f8 <deflate@@Base+0x1bc>
    58d0:	ldr	w0, [sp, #20]
    58d4:	cmp	w0, #0x4
    58d8:	b.eq	58f8 <deflate@@Base+0x1bc>  // b.none
    58dc:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    58e0:	ldr	x0, [x0, #4056]
    58e4:	ldr	x1, [x0, #56]
    58e8:	ldr	x0, [sp, #24]
    58ec:	str	x1, [x0, #48]
    58f0:	mov	w0, #0xfffffffb            	// #-5
    58f4:	b	6bd0 <deflate@@Base+0x1494>
    58f8:	ldr	x0, [sp, #64]
    58fc:	ldr	w0, [x0, #8]
    5900:	cmp	w0, #0x29a
    5904:	b.ne	5934 <deflate@@Base+0x1f8>  // b.any
    5908:	ldr	x0, [sp, #24]
    590c:	ldr	w0, [x0, #8]
    5910:	cmp	w0, #0x0
    5914:	b.eq	5934 <deflate@@Base+0x1f8>  // b.none
    5918:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    591c:	ldr	x0, [x0, #4056]
    5920:	ldr	x1, [x0, #56]
    5924:	ldr	x0, [sp, #24]
    5928:	str	x1, [x0, #48]
    592c:	mov	w0, #0xfffffffb            	// #-5
    5930:	b	6bd0 <deflate@@Base+0x1494>
    5934:	ldr	x0, [sp, #64]
    5938:	ldr	w0, [x0, #8]
    593c:	cmp	w0, #0x2a
    5940:	b.ne	5adc <deflate@@Base+0x3a0>  // b.any
    5944:	ldr	x0, [sp, #64]
    5948:	ldr	w0, [x0, #84]
    594c:	sub	w0, w0, #0x8
    5950:	lsl	w0, w0, #4
    5954:	add	w0, w0, #0x8
    5958:	lsl	w0, w0, #8
    595c:	str	w0, [sp, #108]
    5960:	ldr	x0, [sp, #64]
    5964:	ldr	w0, [x0, #200]
    5968:	cmp	w0, #0x1
    596c:	b.gt	5980 <deflate@@Base+0x244>
    5970:	ldr	x0, [sp, #64]
    5974:	ldr	w0, [x0, #196]
    5978:	cmp	w0, #0x1
    597c:	b.gt	5988 <deflate@@Base+0x24c>
    5980:	str	wzr, [sp, #104]
    5984:	b	59c8 <deflate@@Base+0x28c>
    5988:	ldr	x0, [sp, #64]
    598c:	ldr	w0, [x0, #196]
    5990:	cmp	w0, #0x5
    5994:	b.gt	59a4 <deflate@@Base+0x268>
    5998:	mov	w0, #0x1                   	// #1
    599c:	str	w0, [sp, #104]
    59a0:	b	59c8 <deflate@@Base+0x28c>
    59a4:	ldr	x0, [sp, #64]
    59a8:	ldr	w0, [x0, #196]
    59ac:	cmp	w0, #0x6
    59b0:	b.ne	59c0 <deflate@@Base+0x284>  // b.any
    59b4:	mov	w0, #0x2                   	// #2
    59b8:	str	w0, [sp, #104]
    59bc:	b	59c8 <deflate@@Base+0x28c>
    59c0:	mov	w0, #0x3                   	// #3
    59c4:	str	w0, [sp, #104]
    59c8:	ldr	w0, [sp, #104]
    59cc:	lsl	w0, w0, #6
    59d0:	ldr	w1, [sp, #108]
    59d4:	orr	w0, w1, w0
    59d8:	str	w0, [sp, #108]
    59dc:	ldr	x0, [sp, #64]
    59e0:	ldr	w0, [x0, #172]
    59e4:	cmp	w0, #0x0
    59e8:	b.eq	59f8 <deflate@@Base+0x2bc>  // b.none
    59ec:	ldr	w0, [sp, #108]
    59f0:	orr	w0, w0, #0x20
    59f4:	str	w0, [sp, #108]
    59f8:	ldr	w2, [sp, #108]
    59fc:	mov	w0, #0x1085                	// #4229
    5a00:	movk	w0, #0x842, lsl #16
    5a04:	umull	x0, w2, w0
    5a08:	lsr	x0, x0, #32
    5a0c:	sub	w1, w2, w0
    5a10:	lsr	w1, w1, #1
    5a14:	add	w0, w1, w0
    5a18:	lsr	w1, w0, #4
    5a1c:	mov	w0, w1
    5a20:	lsl	w0, w0, #5
    5a24:	sub	w0, w0, w1
    5a28:	sub	w1, w2, w0
    5a2c:	ldr	w0, [sp, #108]
    5a30:	sub	w0, w0, w1
    5a34:	add	w0, w0, #0x1f
    5a38:	str	w0, [sp, #108]
    5a3c:	ldr	w1, [sp, #108]
    5a40:	ldr	x0, [sp, #64]
    5a44:	bl	55a4 <deflateBound@@ZLIB_1.2.0+0x228>
    5a48:	ldr	x0, [sp, #64]
    5a4c:	ldr	w0, [x0, #172]
    5a50:	cmp	w0, #0x0
    5a54:	b.eq	5a88 <deflate@@Base+0x34c>  // b.none
    5a58:	ldr	x0, [sp, #24]
    5a5c:	ldr	x0, [x0, #96]
    5a60:	lsr	x0, x0, #16
    5a64:	mov	w1, w0
    5a68:	ldr	x0, [sp, #64]
    5a6c:	bl	55a4 <deflateBound@@ZLIB_1.2.0+0x228>
    5a70:	ldr	x0, [sp, #24]
    5a74:	ldr	x0, [x0, #96]
    5a78:	and	w0, w0, #0xffff
    5a7c:	mov	w1, w0
    5a80:	ldr	x0, [sp, #64]
    5a84:	bl	55a4 <deflateBound@@ZLIB_1.2.0+0x228>
    5a88:	mov	w2, #0x0                   	// #0
    5a8c:	mov	x1, #0x0                   	// #0
    5a90:	mov	x0, #0x0                   	// #0
    5a94:	bl	2560 <adler32@plt>
    5a98:	mov	x1, x0
    5a9c:	ldr	x0, [sp, #24]
    5aa0:	str	x1, [x0, #96]
    5aa4:	ldr	x0, [sp, #64]
    5aa8:	mov	w1, #0x71                  	// #113
    5aac:	str	w1, [x0, #8]
    5ab0:	ldr	x0, [sp, #24]
    5ab4:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    5ab8:	ldr	x0, [sp, #64]
    5abc:	ldr	x0, [x0, #40]
    5ac0:	cmp	x0, #0x0
    5ac4:	b.eq	5adc <deflate@@Base+0x3a0>  // b.none
    5ac8:	ldr	x0, [sp, #64]
    5acc:	mov	w1, #0xffffffff            	// #-1
    5ad0:	str	w1, [x0, #76]
    5ad4:	mov	w0, #0x0                   	// #0
    5ad8:	b	6bd0 <deflate@@Base+0x1494>
    5adc:	ldr	x0, [sp, #64]
    5ae0:	ldr	w0, [x0, #8]
    5ae4:	cmp	w0, #0x39
    5ae8:	b.ne	6040 <deflate@@Base+0x904>  // b.any
    5aec:	mov	w2, #0x0                   	// #0
    5af0:	mov	x1, #0x0                   	// #0
    5af4:	mov	x0, #0x0                   	// #0
    5af8:	bl	2430 <crc32@plt>
    5afc:	mov	x1, x0
    5b00:	ldr	x0, [sp, #24]
    5b04:	str	x1, [x0, #96]
    5b08:	ldr	x0, [sp, #64]
    5b0c:	ldr	x1, [x0, #16]
    5b10:	ldr	x0, [sp, #64]
    5b14:	ldr	x0, [x0, #40]
    5b18:	add	x3, x0, #0x1
    5b1c:	ldr	x2, [sp, #64]
    5b20:	str	x3, [x2, #40]
    5b24:	add	x0, x1, x0
    5b28:	mov	w1, #0x1f                  	// #31
    5b2c:	strb	w1, [x0]
    5b30:	ldr	x0, [sp, #64]
    5b34:	ldr	x1, [x0, #16]
    5b38:	ldr	x0, [sp, #64]
    5b3c:	ldr	x0, [x0, #40]
    5b40:	add	x3, x0, #0x1
    5b44:	ldr	x2, [sp, #64]
    5b48:	str	x3, [x2, #40]
    5b4c:	add	x0, x1, x0
    5b50:	mov	w1, #0xffffff8b            	// #-117
    5b54:	strb	w1, [x0]
    5b58:	ldr	x0, [sp, #64]
    5b5c:	ldr	x1, [x0, #16]
    5b60:	ldr	x0, [sp, #64]
    5b64:	ldr	x0, [x0, #40]
    5b68:	add	x3, x0, #0x1
    5b6c:	ldr	x2, [sp, #64]
    5b70:	str	x3, [x2, #40]
    5b74:	add	x0, x1, x0
    5b78:	mov	w1, #0x8                   	// #8
    5b7c:	strb	w1, [x0]
    5b80:	ldr	x0, [sp, #64]
    5b84:	ldr	x0, [x0, #56]
    5b88:	cmp	x0, #0x0
    5b8c:	b.ne	5d0c <deflate@@Base+0x5d0>  // b.any
    5b90:	ldr	x0, [sp, #64]
    5b94:	ldr	x1, [x0, #16]
    5b98:	ldr	x0, [sp, #64]
    5b9c:	ldr	x0, [x0, #40]
    5ba0:	add	x3, x0, #0x1
    5ba4:	ldr	x2, [sp, #64]
    5ba8:	str	x3, [x2, #40]
    5bac:	add	x0, x1, x0
    5bb0:	strb	wzr, [x0]
    5bb4:	ldr	x0, [sp, #64]
    5bb8:	ldr	x1, [x0, #16]
    5bbc:	ldr	x0, [sp, #64]
    5bc0:	ldr	x0, [x0, #40]
    5bc4:	add	x3, x0, #0x1
    5bc8:	ldr	x2, [sp, #64]
    5bcc:	str	x3, [x2, #40]
    5bd0:	add	x0, x1, x0
    5bd4:	strb	wzr, [x0]
    5bd8:	ldr	x0, [sp, #64]
    5bdc:	ldr	x1, [x0, #16]
    5be0:	ldr	x0, [sp, #64]
    5be4:	ldr	x0, [x0, #40]
    5be8:	add	x3, x0, #0x1
    5bec:	ldr	x2, [sp, #64]
    5bf0:	str	x3, [x2, #40]
    5bf4:	add	x0, x1, x0
    5bf8:	strb	wzr, [x0]
    5bfc:	ldr	x0, [sp, #64]
    5c00:	ldr	x1, [x0, #16]
    5c04:	ldr	x0, [sp, #64]
    5c08:	ldr	x0, [x0, #40]
    5c0c:	add	x3, x0, #0x1
    5c10:	ldr	x2, [sp, #64]
    5c14:	str	x3, [x2, #40]
    5c18:	add	x0, x1, x0
    5c1c:	strb	wzr, [x0]
    5c20:	ldr	x0, [sp, #64]
    5c24:	ldr	x1, [x0, #16]
    5c28:	ldr	x0, [sp, #64]
    5c2c:	ldr	x0, [x0, #40]
    5c30:	add	x3, x0, #0x1
    5c34:	ldr	x2, [sp, #64]
    5c38:	str	x3, [x2, #40]
    5c3c:	add	x0, x1, x0
    5c40:	strb	wzr, [x0]
    5c44:	ldr	x0, [sp, #64]
    5c48:	ldr	w0, [x0, #196]
    5c4c:	cmp	w0, #0x9
    5c50:	b.eq	5c84 <deflate@@Base+0x548>  // b.none
    5c54:	ldr	x0, [sp, #64]
    5c58:	ldr	w0, [x0, #200]
    5c5c:	cmp	w0, #0x1
    5c60:	b.gt	5c74 <deflate@@Base+0x538>
    5c64:	ldr	x0, [sp, #64]
    5c68:	ldr	w0, [x0, #196]
    5c6c:	cmp	w0, #0x1
    5c70:	b.gt	5c7c <deflate@@Base+0x540>
    5c74:	mov	w0, #0x4                   	// #4
    5c78:	b	5c88 <deflate@@Base+0x54c>
    5c7c:	mov	w0, #0x0                   	// #0
    5c80:	b	5c88 <deflate@@Base+0x54c>
    5c84:	mov	w0, #0x2                   	// #2
    5c88:	ldr	x1, [sp, #64]
    5c8c:	ldr	x2, [x1, #16]
    5c90:	ldr	x1, [sp, #64]
    5c94:	ldr	x1, [x1, #40]
    5c98:	add	x4, x1, #0x1
    5c9c:	ldr	x3, [sp, #64]
    5ca0:	str	x4, [x3, #40]
    5ca4:	add	x1, x2, x1
    5ca8:	strb	w0, [x1]
    5cac:	ldr	x0, [sp, #64]
    5cb0:	ldr	x1, [x0, #16]
    5cb4:	ldr	x0, [sp, #64]
    5cb8:	ldr	x0, [x0, #40]
    5cbc:	add	x3, x0, #0x1
    5cc0:	ldr	x2, [sp, #64]
    5cc4:	str	x3, [x2, #40]
    5cc8:	add	x0, x1, x0
    5ccc:	mov	w1, #0x3                   	// #3
    5cd0:	strb	w1, [x0]
    5cd4:	ldr	x0, [sp, #64]
    5cd8:	mov	w1, #0x71                  	// #113
    5cdc:	str	w1, [x0, #8]
    5ce0:	ldr	x0, [sp, #24]
    5ce4:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    5ce8:	ldr	x0, [sp, #64]
    5cec:	ldr	x0, [x0, #40]
    5cf0:	cmp	x0, #0x0
    5cf4:	b.eq	6040 <deflate@@Base+0x904>  // b.none
    5cf8:	ldr	x0, [sp, #64]
    5cfc:	mov	w1, #0xffffffff            	// #-1
    5d00:	str	w1, [x0, #76]
    5d04:	mov	w0, #0x0                   	// #0
    5d08:	b	6bd0 <deflate@@Base+0x1494>
    5d0c:	ldr	x0, [sp, #64]
    5d10:	ldr	x0, [x0, #56]
    5d14:	ldr	w0, [x0]
    5d18:	cmp	w0, #0x0
    5d1c:	b.eq	5d28 <deflate@@Base+0x5ec>  // b.none
    5d20:	mov	w1, #0x1                   	// #1
    5d24:	b	5d2c <deflate@@Base+0x5f0>
    5d28:	mov	w1, #0x0                   	// #0
    5d2c:	ldr	x0, [sp, #64]
    5d30:	ldr	x0, [x0, #56]
    5d34:	ldr	w0, [x0, #68]
    5d38:	cmp	w0, #0x0
    5d3c:	b.eq	5d48 <deflate@@Base+0x60c>  // b.none
    5d40:	mov	w0, #0x2                   	// #2
    5d44:	b	5d4c <deflate@@Base+0x610>
    5d48:	mov	w0, #0x0                   	// #0
    5d4c:	add	w0, w1, w0
    5d50:	and	w1, w0, #0xff
    5d54:	ldr	x0, [sp, #64]
    5d58:	ldr	x0, [x0, #56]
    5d5c:	ldr	x0, [x0, #24]
    5d60:	cmp	x0, #0x0
    5d64:	b.ne	5d70 <deflate@@Base+0x634>  // b.any
    5d68:	mov	w0, #0x0                   	// #0
    5d6c:	b	5d74 <deflate@@Base+0x638>
    5d70:	mov	w0, #0x4                   	// #4
    5d74:	add	w0, w0, w1
    5d78:	and	w1, w0, #0xff
    5d7c:	ldr	x0, [sp, #64]
    5d80:	ldr	x0, [x0, #56]
    5d84:	ldr	x0, [x0, #40]
    5d88:	cmp	x0, #0x0
    5d8c:	b.ne	5d98 <deflate@@Base+0x65c>  // b.any
    5d90:	mov	w0, #0x0                   	// #0
    5d94:	b	5d9c <deflate@@Base+0x660>
    5d98:	mov	w0, #0x8                   	// #8
    5d9c:	add	w0, w0, w1
    5da0:	and	w2, w0, #0xff
    5da4:	ldr	x0, [sp, #64]
    5da8:	ldr	x0, [x0, #56]
    5dac:	ldr	x0, [x0, #56]
    5db0:	cmp	x0, #0x0
    5db4:	b.ne	5dc0 <deflate@@Base+0x684>  // b.any
    5db8:	mov	w1, #0x0                   	// #0
    5dbc:	b	5dc4 <deflate@@Base+0x688>
    5dc0:	mov	w1, #0x10                  	// #16
    5dc4:	ldr	x0, [sp, #64]
    5dc8:	ldr	x3, [x0, #16]
    5dcc:	ldr	x0, [sp, #64]
    5dd0:	ldr	x0, [x0, #40]
    5dd4:	add	x5, x0, #0x1
    5dd8:	ldr	x4, [sp, #64]
    5ddc:	str	x5, [x4, #40]
    5de0:	add	x0, x3, x0
    5de4:	add	w1, w1, w2
    5de8:	and	w1, w1, #0xff
    5dec:	strb	w1, [x0]
    5df0:	ldr	x0, [sp, #64]
    5df4:	ldr	x0, [x0, #56]
    5df8:	ldr	x4, [x0, #8]
    5dfc:	ldr	x0, [sp, #64]
    5e00:	ldr	x1, [x0, #16]
    5e04:	ldr	x0, [sp, #64]
    5e08:	ldr	x0, [x0, #40]
    5e0c:	add	x3, x0, #0x1
    5e10:	ldr	x2, [sp, #64]
    5e14:	str	x3, [x2, #40]
    5e18:	add	x0, x1, x0
    5e1c:	and	w1, w4, #0xff
    5e20:	strb	w1, [x0]
    5e24:	ldr	x0, [sp, #64]
    5e28:	ldr	x0, [x0, #56]
    5e2c:	ldr	x0, [x0, #8]
    5e30:	lsr	x4, x0, #8
    5e34:	ldr	x0, [sp, #64]
    5e38:	ldr	x1, [x0, #16]
    5e3c:	ldr	x0, [sp, #64]
    5e40:	ldr	x0, [x0, #40]
    5e44:	add	x3, x0, #0x1
    5e48:	ldr	x2, [sp, #64]
    5e4c:	str	x3, [x2, #40]
    5e50:	add	x0, x1, x0
    5e54:	and	w1, w4, #0xff
    5e58:	strb	w1, [x0]
    5e5c:	ldr	x0, [sp, #64]
    5e60:	ldr	x0, [x0, #56]
    5e64:	ldr	x0, [x0, #8]
    5e68:	lsr	x4, x0, #16
    5e6c:	ldr	x0, [sp, #64]
    5e70:	ldr	x1, [x0, #16]
    5e74:	ldr	x0, [sp, #64]
    5e78:	ldr	x0, [x0, #40]
    5e7c:	add	x3, x0, #0x1
    5e80:	ldr	x2, [sp, #64]
    5e84:	str	x3, [x2, #40]
    5e88:	add	x0, x1, x0
    5e8c:	and	w1, w4, #0xff
    5e90:	strb	w1, [x0]
    5e94:	ldr	x0, [sp, #64]
    5e98:	ldr	x0, [x0, #56]
    5e9c:	ldr	x0, [x0, #8]
    5ea0:	lsr	x4, x0, #24
    5ea4:	ldr	x0, [sp, #64]
    5ea8:	ldr	x1, [x0, #16]
    5eac:	ldr	x0, [sp, #64]
    5eb0:	ldr	x0, [x0, #40]
    5eb4:	add	x3, x0, #0x1
    5eb8:	ldr	x2, [sp, #64]
    5ebc:	str	x3, [x2, #40]
    5ec0:	add	x0, x1, x0
    5ec4:	and	w1, w4, #0xff
    5ec8:	strb	w1, [x0]
    5ecc:	ldr	x0, [sp, #64]
    5ed0:	ldr	w0, [x0, #196]
    5ed4:	cmp	w0, #0x9
    5ed8:	b.eq	5f0c <deflate@@Base+0x7d0>  // b.none
    5edc:	ldr	x0, [sp, #64]
    5ee0:	ldr	w0, [x0, #200]
    5ee4:	cmp	w0, #0x1
    5ee8:	b.gt	5efc <deflate@@Base+0x7c0>
    5eec:	ldr	x0, [sp, #64]
    5ef0:	ldr	w0, [x0, #196]
    5ef4:	cmp	w0, #0x1
    5ef8:	b.gt	5f04 <deflate@@Base+0x7c8>
    5efc:	mov	w0, #0x4                   	// #4
    5f00:	b	5f10 <deflate@@Base+0x7d4>
    5f04:	mov	w0, #0x0                   	// #0
    5f08:	b	5f10 <deflate@@Base+0x7d4>
    5f0c:	mov	w0, #0x2                   	// #2
    5f10:	ldr	x1, [sp, #64]
    5f14:	ldr	x2, [x1, #16]
    5f18:	ldr	x1, [sp, #64]
    5f1c:	ldr	x1, [x1, #40]
    5f20:	add	x4, x1, #0x1
    5f24:	ldr	x3, [sp, #64]
    5f28:	str	x4, [x3, #40]
    5f2c:	add	x1, x2, x1
    5f30:	strb	w0, [x1]
    5f34:	ldr	x0, [sp, #64]
    5f38:	ldr	x0, [x0, #56]
    5f3c:	ldr	w4, [x0, #20]
    5f40:	ldr	x0, [sp, #64]
    5f44:	ldr	x1, [x0, #16]
    5f48:	ldr	x0, [sp, #64]
    5f4c:	ldr	x0, [x0, #40]
    5f50:	add	x3, x0, #0x1
    5f54:	ldr	x2, [sp, #64]
    5f58:	str	x3, [x2, #40]
    5f5c:	add	x0, x1, x0
    5f60:	and	w1, w4, #0xff
    5f64:	strb	w1, [x0]
    5f68:	ldr	x0, [sp, #64]
    5f6c:	ldr	x0, [x0, #56]
    5f70:	ldr	x0, [x0, #24]
    5f74:	cmp	x0, #0x0
    5f78:	b.eq	5fe8 <deflate@@Base+0x8ac>  // b.none
    5f7c:	ldr	x0, [sp, #64]
    5f80:	ldr	x0, [x0, #56]
    5f84:	ldr	w4, [x0, #32]
    5f88:	ldr	x0, [sp, #64]
    5f8c:	ldr	x1, [x0, #16]
    5f90:	ldr	x0, [sp, #64]
    5f94:	ldr	x0, [x0, #40]
    5f98:	add	x3, x0, #0x1
    5f9c:	ldr	x2, [sp, #64]
    5fa0:	str	x3, [x2, #40]
    5fa4:	add	x0, x1, x0
    5fa8:	and	w1, w4, #0xff
    5fac:	strb	w1, [x0]
    5fb0:	ldr	x0, [sp, #64]
    5fb4:	ldr	x0, [x0, #56]
    5fb8:	ldr	w0, [x0, #32]
    5fbc:	lsr	w4, w0, #8
    5fc0:	ldr	x0, [sp, #64]
    5fc4:	ldr	x1, [x0, #16]
    5fc8:	ldr	x0, [sp, #64]
    5fcc:	ldr	x0, [x0, #40]
    5fd0:	add	x3, x0, #0x1
    5fd4:	ldr	x2, [sp, #64]
    5fd8:	str	x3, [x2, #40]
    5fdc:	add	x0, x1, x0
    5fe0:	and	w1, w4, #0xff
    5fe4:	strb	w1, [x0]
    5fe8:	ldr	x0, [sp, #64]
    5fec:	ldr	x0, [x0, #56]
    5ff0:	ldr	w0, [x0, #68]
    5ff4:	cmp	w0, #0x0
    5ff8:	b.eq	602c <deflate@@Base+0x8f0>  // b.none
    5ffc:	ldr	x0, [sp, #24]
    6000:	ldr	x3, [x0, #96]
    6004:	ldr	x0, [sp, #64]
    6008:	ldr	x1, [x0, #16]
    600c:	ldr	x0, [sp, #64]
    6010:	ldr	x0, [x0, #40]
    6014:	mov	w2, w0
    6018:	mov	x0, x3
    601c:	bl	2430 <crc32@plt>
    6020:	mov	x1, x0
    6024:	ldr	x0, [sp, #24]
    6028:	str	x1, [x0, #96]
    602c:	ldr	x0, [sp, #64]
    6030:	str	xzr, [x0, #64]
    6034:	ldr	x0, [sp, #64]
    6038:	mov	w1, #0x45                  	// #69
    603c:	str	w1, [x0, #8]
    6040:	ldr	x0, [sp, #64]
    6044:	ldr	w0, [x0, #8]
    6048:	cmp	w0, #0x45
    604c:	b.ne	62bc <deflate@@Base+0xb80>  // b.any
    6050:	ldr	x0, [sp, #64]
    6054:	ldr	x0, [x0, #56]
    6058:	ldr	x0, [x0, #24]
    605c:	cmp	x0, #0x0
    6060:	b.eq	62b0 <deflate@@Base+0xb74>  // b.none
    6064:	ldr	x0, [sp, #64]
    6068:	ldr	x0, [x0, #40]
    606c:	str	x0, [sp, #96]
    6070:	ldr	x0, [sp, #64]
    6074:	ldr	x0, [x0, #56]
    6078:	ldr	w0, [x0, #32]
    607c:	and	w0, w0, #0xffff
    6080:	ldr	x1, [sp, #64]
    6084:	ldr	x1, [x1, #64]
    6088:	sub	w0, w0, w1
    608c:	str	w0, [sp, #92]
    6090:	b	61c4 <deflate@@Base+0xa88>
    6094:	ldr	x0, [sp, #64]
    6098:	ldr	x0, [x0, #24]
    609c:	mov	w1, w0
    60a0:	ldr	x0, [sp, #64]
    60a4:	ldr	x0, [x0, #40]
    60a8:	sub	w0, w1, w0
    60ac:	str	w0, [sp, #56]
    60b0:	ldr	x0, [sp, #64]
    60b4:	ldr	x1, [x0, #16]
    60b8:	ldr	x0, [sp, #64]
    60bc:	ldr	x0, [x0, #40]
    60c0:	add	x3, x1, x0
    60c4:	ldr	x0, [sp, #64]
    60c8:	ldr	x0, [x0, #56]
    60cc:	ldr	x1, [x0, #24]
    60d0:	ldr	x0, [sp, #64]
    60d4:	ldr	x0, [x0, #64]
    60d8:	add	x0, x1, x0
    60dc:	ldr	w1, [sp, #56]
    60e0:	mov	x2, x1
    60e4:	mov	x1, x0
    60e8:	mov	x0, x3
    60ec:	bl	23a0 <memcpy@plt>
    60f0:	ldr	x0, [sp, #64]
    60f4:	ldr	x1, [x0, #24]
    60f8:	ldr	x0, [sp, #64]
    60fc:	str	x1, [x0, #40]
    6100:	ldr	x0, [sp, #64]
    6104:	ldr	x0, [x0, #56]
    6108:	ldr	w0, [x0, #68]
    610c:	cmp	w0, #0x0
    6110:	b.eq	616c <deflate@@Base+0xa30>  // b.none
    6114:	ldr	x0, [sp, #64]
    6118:	ldr	x0, [x0, #40]
    611c:	ldr	x1, [sp, #96]
    6120:	cmp	x1, x0
    6124:	b.cs	616c <deflate@@Base+0xa30>  // b.hs, b.nlast
    6128:	ldr	x0, [sp, #24]
    612c:	ldr	x3, [x0, #96]
    6130:	ldr	x0, [sp, #64]
    6134:	ldr	x1, [x0, #16]
    6138:	ldr	x0, [sp, #96]
    613c:	add	x1, x1, x0
    6140:	ldr	x0, [sp, #64]
    6144:	ldr	x0, [x0, #40]
    6148:	mov	w2, w0
    614c:	ldr	x0, [sp, #96]
    6150:	sub	w0, w2, w0
    6154:	mov	w2, w0
    6158:	mov	x0, x3
    615c:	bl	2430 <crc32@plt>
    6160:	mov	x1, x0
    6164:	ldr	x0, [sp, #24]
    6168:	str	x1, [x0, #96]
    616c:	ldr	x0, [sp, #64]
    6170:	ldr	x1, [x0, #64]
    6174:	ldr	w0, [sp, #56]
    6178:	add	x1, x1, x0
    617c:	ldr	x0, [sp, #64]
    6180:	str	x1, [x0, #64]
    6184:	ldr	x0, [sp, #24]
    6188:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    618c:	ldr	x0, [sp, #64]
    6190:	ldr	x0, [x0, #40]
    6194:	cmp	x0, #0x0
    6198:	b.eq	61b0 <deflate@@Base+0xa74>  // b.none
    619c:	ldr	x0, [sp, #64]
    61a0:	mov	w1, #0xffffffff            	// #-1
    61a4:	str	w1, [x0, #76]
    61a8:	mov	w0, #0x0                   	// #0
    61ac:	b	6bd0 <deflate@@Base+0x1494>
    61b0:	str	xzr, [sp, #96]
    61b4:	ldr	w1, [sp, #92]
    61b8:	ldr	w0, [sp, #56]
    61bc:	sub	w0, w1, w0
    61c0:	str	w0, [sp, #92]
    61c4:	ldr	x0, [sp, #64]
    61c8:	ldr	x1, [x0, #40]
    61cc:	ldr	w0, [sp, #92]
    61d0:	add	x1, x1, x0
    61d4:	ldr	x0, [sp, #64]
    61d8:	ldr	x0, [x0, #24]
    61dc:	cmp	x1, x0
    61e0:	b.hi	6094 <deflate@@Base+0x958>  // b.pmore
    61e4:	ldr	x0, [sp, #64]
    61e8:	ldr	x1, [x0, #16]
    61ec:	ldr	x0, [sp, #64]
    61f0:	ldr	x0, [x0, #40]
    61f4:	add	x3, x1, x0
    61f8:	ldr	x0, [sp, #64]
    61fc:	ldr	x0, [x0, #56]
    6200:	ldr	x1, [x0, #24]
    6204:	ldr	x0, [sp, #64]
    6208:	ldr	x0, [x0, #64]
    620c:	add	x0, x1, x0
    6210:	ldr	w1, [sp, #92]
    6214:	mov	x2, x1
    6218:	mov	x1, x0
    621c:	mov	x0, x3
    6220:	bl	23a0 <memcpy@plt>
    6224:	ldr	x0, [sp, #64]
    6228:	ldr	x1, [x0, #40]
    622c:	ldr	w0, [sp, #92]
    6230:	add	x1, x1, x0
    6234:	ldr	x0, [sp, #64]
    6238:	str	x1, [x0, #40]
    623c:	ldr	x0, [sp, #64]
    6240:	ldr	x0, [x0, #56]
    6244:	ldr	w0, [x0, #68]
    6248:	cmp	w0, #0x0
    624c:	b.eq	62a8 <deflate@@Base+0xb6c>  // b.none
    6250:	ldr	x0, [sp, #64]
    6254:	ldr	x0, [x0, #40]
    6258:	ldr	x1, [sp, #96]
    625c:	cmp	x1, x0
    6260:	b.cs	62a8 <deflate@@Base+0xb6c>  // b.hs, b.nlast
    6264:	ldr	x0, [sp, #24]
    6268:	ldr	x3, [x0, #96]
    626c:	ldr	x0, [sp, #64]
    6270:	ldr	x1, [x0, #16]
    6274:	ldr	x0, [sp, #96]
    6278:	add	x1, x1, x0
    627c:	ldr	x0, [sp, #64]
    6280:	ldr	x0, [x0, #40]
    6284:	mov	w2, w0
    6288:	ldr	x0, [sp, #96]
    628c:	sub	w0, w2, w0
    6290:	mov	w2, w0
    6294:	mov	x0, x3
    6298:	bl	2430 <crc32@plt>
    629c:	mov	x1, x0
    62a0:	ldr	x0, [sp, #24]
    62a4:	str	x1, [x0, #96]
    62a8:	ldr	x0, [sp, #64]
    62ac:	str	xzr, [x0, #64]
    62b0:	ldr	x0, [sp, #64]
    62b4:	mov	w1, #0x49                  	// #73
    62b8:	str	w1, [x0, #8]
    62bc:	ldr	x0, [sp, #64]
    62c0:	ldr	w0, [x0, #8]
    62c4:	cmp	w0, #0x49
    62c8:	b.ne	6484 <deflate@@Base+0xd48>  // b.any
    62cc:	ldr	x0, [sp, #64]
    62d0:	ldr	x0, [x0, #56]
    62d4:	ldr	x0, [x0, #40]
    62d8:	cmp	x0, #0x0
    62dc:	b.eq	6478 <deflate@@Base+0xd3c>  // b.none
    62e0:	ldr	x0, [sp, #64]
    62e4:	ldr	x0, [x0, #40]
    62e8:	str	x0, [sp, #80]
    62ec:	ldr	x0, [sp, #64]
    62f0:	ldr	x1, [x0, #40]
    62f4:	ldr	x0, [sp, #64]
    62f8:	ldr	x0, [x0, #24]
    62fc:	cmp	x1, x0
    6300:	b.ne	63a0 <deflate@@Base+0xc64>  // b.any
    6304:	ldr	x0, [sp, #64]
    6308:	ldr	x0, [x0, #56]
    630c:	ldr	w0, [x0, #68]
    6310:	cmp	w0, #0x0
    6314:	b.eq	6370 <deflate@@Base+0xc34>  // b.none
    6318:	ldr	x0, [sp, #64]
    631c:	ldr	x0, [x0, #40]
    6320:	ldr	x1, [sp, #80]
    6324:	cmp	x1, x0
    6328:	b.cs	6370 <deflate@@Base+0xc34>  // b.hs, b.nlast
    632c:	ldr	x0, [sp, #24]
    6330:	ldr	x3, [x0, #96]
    6334:	ldr	x0, [sp, #64]
    6338:	ldr	x1, [x0, #16]
    633c:	ldr	x0, [sp, #80]
    6340:	add	x1, x1, x0
    6344:	ldr	x0, [sp, #64]
    6348:	ldr	x0, [x0, #40]
    634c:	mov	w2, w0
    6350:	ldr	x0, [sp, #80]
    6354:	sub	w0, w2, w0
    6358:	mov	w2, w0
    635c:	mov	x0, x3
    6360:	bl	2430 <crc32@plt>
    6364:	mov	x1, x0
    6368:	ldr	x0, [sp, #24]
    636c:	str	x1, [x0, #96]
    6370:	ldr	x0, [sp, #24]
    6374:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    6378:	ldr	x0, [sp, #64]
    637c:	ldr	x0, [x0, #40]
    6380:	cmp	x0, #0x0
    6384:	b.eq	639c <deflate@@Base+0xc60>  // b.none
    6388:	ldr	x0, [sp, #64]
    638c:	mov	w1, #0xffffffff            	// #-1
    6390:	str	w1, [x0, #76]
    6394:	mov	w0, #0x0                   	// #0
    6398:	b	6bd0 <deflate@@Base+0x1494>
    639c:	str	xzr, [sp, #80]
    63a0:	ldr	x0, [sp, #64]
    63a4:	ldr	x0, [x0, #56]
    63a8:	ldr	x1, [x0, #40]
    63ac:	ldr	x0, [sp, #64]
    63b0:	ldr	x0, [x0, #64]
    63b4:	add	x3, x0, #0x1
    63b8:	ldr	x2, [sp, #64]
    63bc:	str	x3, [x2, #64]
    63c0:	add	x0, x1, x0
    63c4:	ldrb	w0, [x0]
    63c8:	str	w0, [sp, #52]
    63cc:	ldr	x0, [sp, #64]
    63d0:	ldr	x1, [x0, #16]
    63d4:	ldr	x0, [sp, #64]
    63d8:	ldr	x0, [x0, #40]
    63dc:	add	x3, x0, #0x1
    63e0:	ldr	x2, [sp, #64]
    63e4:	str	x3, [x2, #40]
    63e8:	add	x0, x1, x0
    63ec:	ldr	w1, [sp, #52]
    63f0:	and	w1, w1, #0xff
    63f4:	strb	w1, [x0]
    63f8:	ldr	w0, [sp, #52]
    63fc:	cmp	w0, #0x0
    6400:	b.ne	62ec <deflate@@Base+0xbb0>  // b.any
    6404:	ldr	x0, [sp, #64]
    6408:	ldr	x0, [x0, #56]
    640c:	ldr	w0, [x0, #68]
    6410:	cmp	w0, #0x0
    6414:	b.eq	6470 <deflate@@Base+0xd34>  // b.none
    6418:	ldr	x0, [sp, #64]
    641c:	ldr	x0, [x0, #40]
    6420:	ldr	x1, [sp, #80]
    6424:	cmp	x1, x0
    6428:	b.cs	6470 <deflate@@Base+0xd34>  // b.hs, b.nlast
    642c:	ldr	x0, [sp, #24]
    6430:	ldr	x3, [x0, #96]
    6434:	ldr	x0, [sp, #64]
    6438:	ldr	x1, [x0, #16]
    643c:	ldr	x0, [sp, #80]
    6440:	add	x1, x1, x0
    6444:	ldr	x0, [sp, #64]
    6448:	ldr	x0, [x0, #40]
    644c:	mov	w2, w0
    6450:	ldr	x0, [sp, #80]
    6454:	sub	w0, w2, w0
    6458:	mov	w2, w0
    645c:	mov	x0, x3
    6460:	bl	2430 <crc32@plt>
    6464:	mov	x1, x0
    6468:	ldr	x0, [sp, #24]
    646c:	str	x1, [x0, #96]
    6470:	ldr	x0, [sp, #64]
    6474:	str	xzr, [x0, #64]
    6478:	ldr	x0, [sp, #64]
    647c:	mov	w1, #0x5b                  	// #91
    6480:	str	w1, [x0, #8]
    6484:	ldr	x0, [sp, #64]
    6488:	ldr	w0, [x0, #8]
    648c:	cmp	w0, #0x5b
    6490:	b.ne	6644 <deflate@@Base+0xf08>  // b.any
    6494:	ldr	x0, [sp, #64]
    6498:	ldr	x0, [x0, #56]
    649c:	ldr	x0, [x0, #56]
    64a0:	cmp	x0, #0x0
    64a4:	b.eq	6638 <deflate@@Base+0xefc>  // b.none
    64a8:	ldr	x0, [sp, #64]
    64ac:	ldr	x0, [x0, #40]
    64b0:	str	x0, [sp, #72]
    64b4:	ldr	x0, [sp, #64]
    64b8:	ldr	x1, [x0, #40]
    64bc:	ldr	x0, [sp, #64]
    64c0:	ldr	x0, [x0, #24]
    64c4:	cmp	x1, x0
    64c8:	b.ne	6568 <deflate@@Base+0xe2c>  // b.any
    64cc:	ldr	x0, [sp, #64]
    64d0:	ldr	x0, [x0, #56]
    64d4:	ldr	w0, [x0, #68]
    64d8:	cmp	w0, #0x0
    64dc:	b.eq	6538 <deflate@@Base+0xdfc>  // b.none
    64e0:	ldr	x0, [sp, #64]
    64e4:	ldr	x0, [x0, #40]
    64e8:	ldr	x1, [sp, #72]
    64ec:	cmp	x1, x0
    64f0:	b.cs	6538 <deflate@@Base+0xdfc>  // b.hs, b.nlast
    64f4:	ldr	x0, [sp, #24]
    64f8:	ldr	x3, [x0, #96]
    64fc:	ldr	x0, [sp, #64]
    6500:	ldr	x1, [x0, #16]
    6504:	ldr	x0, [sp, #72]
    6508:	add	x1, x1, x0
    650c:	ldr	x0, [sp, #64]
    6510:	ldr	x0, [x0, #40]
    6514:	mov	w2, w0
    6518:	ldr	x0, [sp, #72]
    651c:	sub	w0, w2, w0
    6520:	mov	w2, w0
    6524:	mov	x0, x3
    6528:	bl	2430 <crc32@plt>
    652c:	mov	x1, x0
    6530:	ldr	x0, [sp, #24]
    6534:	str	x1, [x0, #96]
    6538:	ldr	x0, [sp, #24]
    653c:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    6540:	ldr	x0, [sp, #64]
    6544:	ldr	x0, [x0, #40]
    6548:	cmp	x0, #0x0
    654c:	b.eq	6564 <deflate@@Base+0xe28>  // b.none
    6550:	ldr	x0, [sp, #64]
    6554:	mov	w1, #0xffffffff            	// #-1
    6558:	str	w1, [x0, #76]
    655c:	mov	w0, #0x0                   	// #0
    6560:	b	6bd0 <deflate@@Base+0x1494>
    6564:	str	xzr, [sp, #72]
    6568:	ldr	x0, [sp, #64]
    656c:	ldr	x0, [x0, #56]
    6570:	ldr	x1, [x0, #56]
    6574:	ldr	x0, [sp, #64]
    6578:	ldr	x0, [x0, #64]
    657c:	add	x3, x0, #0x1
    6580:	ldr	x2, [sp, #64]
    6584:	str	x3, [x2, #64]
    6588:	add	x0, x1, x0
    658c:	ldrb	w0, [x0]
    6590:	str	w0, [sp, #48]
    6594:	ldr	x0, [sp, #64]
    6598:	ldr	x1, [x0, #16]
    659c:	ldr	x0, [sp, #64]
    65a0:	ldr	x0, [x0, #40]
    65a4:	add	x3, x0, #0x1
    65a8:	ldr	x2, [sp, #64]
    65ac:	str	x3, [x2, #40]
    65b0:	add	x0, x1, x0
    65b4:	ldr	w1, [sp, #48]
    65b8:	and	w1, w1, #0xff
    65bc:	strb	w1, [x0]
    65c0:	ldr	w0, [sp, #48]
    65c4:	cmp	w0, #0x0
    65c8:	b.ne	64b4 <deflate@@Base+0xd78>  // b.any
    65cc:	ldr	x0, [sp, #64]
    65d0:	ldr	x0, [x0, #56]
    65d4:	ldr	w0, [x0, #68]
    65d8:	cmp	w0, #0x0
    65dc:	b.eq	6638 <deflate@@Base+0xefc>  // b.none
    65e0:	ldr	x0, [sp, #64]
    65e4:	ldr	x0, [x0, #40]
    65e8:	ldr	x1, [sp, #72]
    65ec:	cmp	x1, x0
    65f0:	b.cs	6638 <deflate@@Base+0xefc>  // b.hs, b.nlast
    65f4:	ldr	x0, [sp, #24]
    65f8:	ldr	x3, [x0, #96]
    65fc:	ldr	x0, [sp, #64]
    6600:	ldr	x1, [x0, #16]
    6604:	ldr	x0, [sp, #72]
    6608:	add	x1, x1, x0
    660c:	ldr	x0, [sp, #64]
    6610:	ldr	x0, [x0, #40]
    6614:	mov	w2, w0
    6618:	ldr	x0, [sp, #72]
    661c:	sub	w0, w2, w0
    6620:	mov	w2, w0
    6624:	mov	x0, x3
    6628:	bl	2430 <crc32@plt>
    662c:	mov	x1, x0
    6630:	ldr	x0, [sp, #24]
    6634:	str	x1, [x0, #96]
    6638:	ldr	x0, [sp, #64]
    663c:	mov	w1, #0x67                  	// #103
    6640:	str	w1, [x0, #8]
    6644:	ldr	x0, [sp, #64]
    6648:	ldr	w0, [x0, #8]
    664c:	cmp	w0, #0x67
    6650:	b.ne	6768 <deflate@@Base+0x102c>  // b.any
    6654:	ldr	x0, [sp, #64]
    6658:	ldr	x0, [x0, #56]
    665c:	ldr	w0, [x0, #68]
    6660:	cmp	w0, #0x0
    6664:	b.eq	6730 <deflate@@Base+0xff4>  // b.none
    6668:	ldr	x0, [sp, #64]
    666c:	ldr	x0, [x0, #40]
    6670:	add	x1, x0, #0x2
    6674:	ldr	x0, [sp, #64]
    6678:	ldr	x0, [x0, #24]
    667c:	cmp	x1, x0
    6680:	b.ls	66b0 <deflate@@Base+0xf74>  // b.plast
    6684:	ldr	x0, [sp, #24]
    6688:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    668c:	ldr	x0, [sp, #64]
    6690:	ldr	x0, [x0, #40]
    6694:	cmp	x0, #0x0
    6698:	b.eq	66b0 <deflate@@Base+0xf74>  // b.none
    669c:	ldr	x0, [sp, #64]
    66a0:	mov	w1, #0xffffffff            	// #-1
    66a4:	str	w1, [x0, #76]
    66a8:	mov	w0, #0x0                   	// #0
    66ac:	b	6bd0 <deflate@@Base+0x1494>
    66b0:	ldr	x0, [sp, #24]
    66b4:	ldr	x4, [x0, #96]
    66b8:	ldr	x0, [sp, #64]
    66bc:	ldr	x1, [x0, #16]
    66c0:	ldr	x0, [sp, #64]
    66c4:	ldr	x0, [x0, #40]
    66c8:	add	x3, x0, #0x1
    66cc:	ldr	x2, [sp, #64]
    66d0:	str	x3, [x2, #40]
    66d4:	add	x0, x1, x0
    66d8:	and	w1, w4, #0xff
    66dc:	strb	w1, [x0]
    66e0:	ldr	x0, [sp, #24]
    66e4:	ldr	x0, [x0, #96]
    66e8:	lsr	x4, x0, #8
    66ec:	ldr	x0, [sp, #64]
    66f0:	ldr	x1, [x0, #16]
    66f4:	ldr	x0, [sp, #64]
    66f8:	ldr	x0, [x0, #40]
    66fc:	add	x3, x0, #0x1
    6700:	ldr	x2, [sp, #64]
    6704:	str	x3, [x2, #40]
    6708:	add	x0, x1, x0
    670c:	and	w1, w4, #0xff
    6710:	strb	w1, [x0]
    6714:	mov	w2, #0x0                   	// #0
    6718:	mov	x1, #0x0                   	// #0
    671c:	mov	x0, #0x0                   	// #0
    6720:	bl	2430 <crc32@plt>
    6724:	mov	x1, x0
    6728:	ldr	x0, [sp, #24]
    672c:	str	x1, [x0, #96]
    6730:	ldr	x0, [sp, #64]
    6734:	mov	w1, #0x71                  	// #113
    6738:	str	w1, [x0, #8]
    673c:	ldr	x0, [sp, #24]
    6740:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    6744:	ldr	x0, [sp, #64]
    6748:	ldr	x0, [x0, #40]
    674c:	cmp	x0, #0x0
    6750:	b.eq	6768 <deflate@@Base+0x102c>  // b.none
    6754:	ldr	x0, [sp, #64]
    6758:	mov	w1, #0xffffffff            	// #-1
    675c:	str	w1, [x0, #76]
    6760:	mov	w0, #0x0                   	// #0
    6764:	b	6bd0 <deflate@@Base+0x1494>
    6768:	ldr	x0, [sp, #24]
    676c:	ldr	w0, [x0, #8]
    6770:	cmp	w0, #0x0
    6774:	b.ne	67a4 <deflate@@Base+0x1068>  // b.any
    6778:	ldr	x0, [sp, #64]
    677c:	ldr	w0, [x0, #180]
    6780:	cmp	w0, #0x0
    6784:	b.ne	67a4 <deflate@@Base+0x1068>  // b.any
    6788:	ldr	w0, [sp, #20]
    678c:	cmp	w0, #0x0
    6790:	b.eq	6988 <deflate@@Base+0x124c>  // b.none
    6794:	ldr	x0, [sp, #64]
    6798:	ldr	w0, [x0, #8]
    679c:	cmp	w0, #0x29a
    67a0:	b.eq	6988 <deflate@@Base+0x124c>  // b.none
    67a4:	ldr	x0, [sp, #64]
    67a8:	ldr	w0, [x0, #196]
    67ac:	cmp	w0, #0x0
    67b0:	b.ne	67c4 <deflate@@Base+0x1088>  // b.any
    67b4:	ldr	w1, [sp, #20]
    67b8:	ldr	x0, [sp, #64]
    67bc:	bl	7b04 <deflateCopy@@Base+0xdbc>
    67c0:	b	6830 <deflate@@Base+0x10f4>
    67c4:	ldr	x0, [sp, #64]
    67c8:	ldr	w0, [x0, #200]
    67cc:	cmp	w0, #0x2
    67d0:	b.ne	67e4 <deflate@@Base+0x10a8>  // b.any
    67d4:	ldr	w1, [sp, #20]
    67d8:	ldr	x0, [sp, #64]
    67dc:	bl	9ed4 <deflateCopy@@Base+0x318c>
    67e0:	b	6830 <deflate@@Base+0x10f4>
    67e4:	ldr	x0, [sp, #64]
    67e8:	ldr	w0, [x0, #200]
    67ec:	cmp	w0, #0x3
    67f0:	b.ne	6804 <deflate@@Base+0x10c8>  // b.any
    67f4:	ldr	w1, [sp, #20]
    67f8:	ldr	x0, [sp, #64]
    67fc:	bl	974c <deflateCopy@@Base+0x2a04>
    6800:	b	6830 <deflate@@Base+0x10f4>
    6804:	ldr	x0, [sp, #64]
    6808:	ldr	w2, [x0, #196]
    680c:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    6810:	add	x1, x0, #0xc68
    6814:	sxtw	x0, w2
    6818:	lsl	x0, x0, #4
    681c:	add	x0, x1, x0
    6820:	ldr	x2, [x0, #8]
    6824:	ldr	w1, [sp, #20]
    6828:	ldr	x0, [sp, #64]
    682c:	blr	x2
    6830:	str	w0, [sp, #44]
    6834:	ldr	w0, [sp, #44]
    6838:	cmp	w0, #0x2
    683c:	b.eq	684c <deflate@@Base+0x1110>  // b.none
    6840:	ldr	w0, [sp, #44]
    6844:	cmp	w0, #0x3
    6848:	b.ne	6858 <deflate@@Base+0x111c>  // b.any
    684c:	ldr	x0, [sp, #64]
    6850:	mov	w1, #0x29a                 	// #666
    6854:	str	w1, [x0, #8]
    6858:	ldr	w0, [sp, #44]
    685c:	cmp	w0, #0x0
    6860:	b.eq	6870 <deflate@@Base+0x1134>  // b.none
    6864:	ldr	w0, [sp, #44]
    6868:	cmp	w0, #0x2
    686c:	b.ne	6894 <deflate@@Base+0x1158>  // b.any
    6870:	ldr	x0, [sp, #24]
    6874:	ldr	w0, [x0, #32]
    6878:	cmp	w0, #0x0
    687c:	b.ne	688c <deflate@@Base+0x1150>  // b.any
    6880:	ldr	x0, [sp, #64]
    6884:	mov	w1, #0xffffffff            	// #-1
    6888:	str	w1, [x0, #76]
    688c:	mov	w0, #0x0                   	// #0
    6890:	b	6bd0 <deflate@@Base+0x1494>
    6894:	ldr	w0, [sp, #44]
    6898:	cmp	w0, #0x1
    689c:	b.ne	6988 <deflate@@Base+0x124c>  // b.any
    68a0:	ldr	w0, [sp, #20]
    68a4:	cmp	w0, #0x1
    68a8:	b.ne	68b8 <deflate@@Base+0x117c>  // b.any
    68ac:	ldr	x0, [sp, #64]
    68b0:	bl	13c60 <inflateCodesUsed@@ZLIB_1.2.9+0x3270>
    68b4:	b	695c <deflate@@Base+0x1220>
    68b8:	ldr	w0, [sp, #20]
    68bc:	cmp	w0, #0x5
    68c0:	b.eq	695c <deflate@@Base+0x1220>  // b.none
    68c4:	mov	w3, #0x0                   	// #0
    68c8:	mov	x2, #0x0                   	// #0
    68cc:	mov	x1, #0x0                   	// #0
    68d0:	ldr	x0, [sp, #64]
    68d4:	bl	13994 <inflateCodesUsed@@ZLIB_1.2.9+0x2fa4>
    68d8:	ldr	w0, [sp, #20]
    68dc:	cmp	w0, #0x3
    68e0:	b.ne	695c <deflate@@Base+0x1220>  // b.any
    68e4:	ldr	x0, [sp, #64]
    68e8:	ldr	x1, [x0, #120]
    68ec:	ldr	x0, [sp, #64]
    68f0:	ldr	w0, [x0, #132]
    68f4:	sub	w0, w0, #0x1
    68f8:	mov	w0, w0
    68fc:	lsl	x0, x0, #1
    6900:	add	x0, x1, x0
    6904:	strh	wzr, [x0]
    6908:	ldr	x0, [sp, #64]
    690c:	ldr	x3, [x0, #120]
    6910:	ldr	x0, [sp, #64]
    6914:	ldr	w0, [x0, #132]
    6918:	sub	w0, w0, #0x1
    691c:	mov	w0, w0
    6920:	lsl	x0, x0, #1
    6924:	mov	x2, x0
    6928:	mov	w1, #0x0                   	// #0
    692c:	mov	x0, x3
    6930:	bl	24a0 <memset@plt>
    6934:	ldr	x0, [sp, #64]
    6938:	ldr	w0, [x0, #180]
    693c:	cmp	w0, #0x0
    6940:	b.ne	695c <deflate@@Base+0x1220>  // b.any
    6944:	ldr	x0, [sp, #64]
    6948:	str	wzr, [x0, #172]
    694c:	ldr	x0, [sp, #64]
    6950:	str	xzr, [x0, #152]
    6954:	ldr	x0, [sp, #64]
    6958:	str	wzr, [x0, #5932]
    695c:	ldr	x0, [sp, #24]
    6960:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    6964:	ldr	x0, [sp, #24]
    6968:	ldr	w0, [x0, #32]
    696c:	cmp	w0, #0x0
    6970:	b.ne	6988 <deflate@@Base+0x124c>  // b.any
    6974:	ldr	x0, [sp, #64]
    6978:	mov	w1, #0xffffffff            	// #-1
    697c:	str	w1, [x0, #76]
    6980:	mov	w0, #0x0                   	// #0
    6984:	b	6bd0 <deflate@@Base+0x1494>
    6988:	ldr	w0, [sp, #20]
    698c:	cmp	w0, #0x4
    6990:	b.eq	699c <deflate@@Base+0x1260>  // b.none
    6994:	mov	w0, #0x0                   	// #0
    6998:	b	6bd0 <deflate@@Base+0x1494>
    699c:	ldr	x0, [sp, #64]
    69a0:	ldr	w0, [x0, #48]
    69a4:	cmp	w0, #0x0
    69a8:	b.gt	69b4 <deflate@@Base+0x1278>
    69ac:	mov	w0, #0x1                   	// #1
    69b0:	b	6bd0 <deflate@@Base+0x1494>
    69b4:	ldr	x0, [sp, #64]
    69b8:	ldr	w0, [x0, #48]
    69bc:	cmp	w0, #0x2
    69c0:	b.ne	6b60 <deflate@@Base+0x1424>  // b.any
    69c4:	ldr	x0, [sp, #24]
    69c8:	ldr	x4, [x0, #96]
    69cc:	ldr	x0, [sp, #64]
    69d0:	ldr	x1, [x0, #16]
    69d4:	ldr	x0, [sp, #64]
    69d8:	ldr	x0, [x0, #40]
    69dc:	add	x3, x0, #0x1
    69e0:	ldr	x2, [sp, #64]
    69e4:	str	x3, [x2, #40]
    69e8:	add	x0, x1, x0
    69ec:	and	w1, w4, #0xff
    69f0:	strb	w1, [x0]
    69f4:	ldr	x0, [sp, #24]
    69f8:	ldr	x0, [x0, #96]
    69fc:	lsr	x4, x0, #8
    6a00:	ldr	x0, [sp, #64]
    6a04:	ldr	x1, [x0, #16]
    6a08:	ldr	x0, [sp, #64]
    6a0c:	ldr	x0, [x0, #40]
    6a10:	add	x3, x0, #0x1
    6a14:	ldr	x2, [sp, #64]
    6a18:	str	x3, [x2, #40]
    6a1c:	add	x0, x1, x0
    6a20:	and	w1, w4, #0xff
    6a24:	strb	w1, [x0]
    6a28:	ldr	x0, [sp, #24]
    6a2c:	ldr	x0, [x0, #96]
    6a30:	lsr	x4, x0, #16
    6a34:	ldr	x0, [sp, #64]
    6a38:	ldr	x1, [x0, #16]
    6a3c:	ldr	x0, [sp, #64]
    6a40:	ldr	x0, [x0, #40]
    6a44:	add	x3, x0, #0x1
    6a48:	ldr	x2, [sp, #64]
    6a4c:	str	x3, [x2, #40]
    6a50:	add	x0, x1, x0
    6a54:	and	w1, w4, #0xff
    6a58:	strb	w1, [x0]
    6a5c:	ldr	x0, [sp, #24]
    6a60:	ldr	x0, [x0, #96]
    6a64:	lsr	x4, x0, #24
    6a68:	ldr	x0, [sp, #64]
    6a6c:	ldr	x1, [x0, #16]
    6a70:	ldr	x0, [sp, #64]
    6a74:	ldr	x0, [x0, #40]
    6a78:	add	x3, x0, #0x1
    6a7c:	ldr	x2, [sp, #64]
    6a80:	str	x3, [x2, #40]
    6a84:	add	x0, x1, x0
    6a88:	and	w1, w4, #0xff
    6a8c:	strb	w1, [x0]
    6a90:	ldr	x0, [sp, #24]
    6a94:	ldr	x4, [x0, #16]
    6a98:	ldr	x0, [sp, #64]
    6a9c:	ldr	x1, [x0, #16]
    6aa0:	ldr	x0, [sp, #64]
    6aa4:	ldr	x0, [x0, #40]
    6aa8:	add	x3, x0, #0x1
    6aac:	ldr	x2, [sp, #64]
    6ab0:	str	x3, [x2, #40]
    6ab4:	add	x0, x1, x0
    6ab8:	and	w1, w4, #0xff
    6abc:	strb	w1, [x0]
    6ac0:	ldr	x0, [sp, #24]
    6ac4:	ldr	x0, [x0, #16]
    6ac8:	lsr	x4, x0, #8
    6acc:	ldr	x0, [sp, #64]
    6ad0:	ldr	x1, [x0, #16]
    6ad4:	ldr	x0, [sp, #64]
    6ad8:	ldr	x0, [x0, #40]
    6adc:	add	x3, x0, #0x1
    6ae0:	ldr	x2, [sp, #64]
    6ae4:	str	x3, [x2, #40]
    6ae8:	add	x0, x1, x0
    6aec:	and	w1, w4, #0xff
    6af0:	strb	w1, [x0]
    6af4:	ldr	x0, [sp, #24]
    6af8:	ldr	x0, [x0, #16]
    6afc:	lsr	x4, x0, #16
    6b00:	ldr	x0, [sp, #64]
    6b04:	ldr	x1, [x0, #16]
    6b08:	ldr	x0, [sp, #64]
    6b0c:	ldr	x0, [x0, #40]
    6b10:	add	x3, x0, #0x1
    6b14:	ldr	x2, [sp, #64]
    6b18:	str	x3, [x2, #40]
    6b1c:	add	x0, x1, x0
    6b20:	and	w1, w4, #0xff
    6b24:	strb	w1, [x0]
    6b28:	ldr	x0, [sp, #24]
    6b2c:	ldr	x0, [x0, #16]
    6b30:	lsr	x4, x0, #24
    6b34:	ldr	x0, [sp, #64]
    6b38:	ldr	x1, [x0, #16]
    6b3c:	ldr	x0, [sp, #64]
    6b40:	ldr	x0, [x0, #40]
    6b44:	add	x3, x0, #0x1
    6b48:	ldr	x2, [sp, #64]
    6b4c:	str	x3, [x2, #40]
    6b50:	add	x0, x1, x0
    6b54:	and	w1, w4, #0xff
    6b58:	strb	w1, [x0]
    6b5c:	b	6b90 <deflate@@Base+0x1454>
    6b60:	ldr	x0, [sp, #24]
    6b64:	ldr	x0, [x0, #96]
    6b68:	lsr	x0, x0, #16
    6b6c:	mov	w1, w0
    6b70:	ldr	x0, [sp, #64]
    6b74:	bl	55a4 <deflateBound@@ZLIB_1.2.0+0x228>
    6b78:	ldr	x0, [sp, #24]
    6b7c:	ldr	x0, [x0, #96]
    6b80:	and	w0, w0, #0xffff
    6b84:	mov	w1, w0
    6b88:	ldr	x0, [sp, #64]
    6b8c:	bl	55a4 <deflateBound@@ZLIB_1.2.0+0x228>
    6b90:	ldr	x0, [sp, #24]
    6b94:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    6b98:	ldr	x0, [sp, #64]
    6b9c:	ldr	w0, [x0, #48]
    6ba0:	cmp	w0, #0x0
    6ba4:	b.le	6bbc <deflate@@Base+0x1480>
    6ba8:	ldr	x0, [sp, #64]
    6bac:	ldr	w0, [x0, #48]
    6bb0:	neg	w1, w0
    6bb4:	ldr	x0, [sp, #64]
    6bb8:	str	w1, [x0, #48]
    6bbc:	ldr	x0, [sp, #64]
    6bc0:	ldr	x0, [x0, #40]
    6bc4:	cmp	x0, #0x0
    6bc8:	cset	w0, eq  // eq = none
    6bcc:	and	w0, w0, #0xff
    6bd0:	ldp	x29, x30, [sp], #112
    6bd4:	ret

0000000000006bd8 <deflateEnd@@Base>:
    6bd8:	stp	x29, x30, [sp, #-48]!
    6bdc:	mov	x29, sp
    6be0:	str	x0, [sp, #24]
    6be4:	ldr	x0, [sp, #24]
    6be8:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    6bec:	cmp	w0, #0x0
    6bf0:	b.eq	6bfc <deflateEnd@@Base+0x24>  // b.none
    6bf4:	mov	w0, #0xfffffffe            	// #-2
    6bf8:	b	6d40 <deflateEnd@@Base+0x168>
    6bfc:	ldr	x0, [sp, #24]
    6c00:	ldr	x0, [x0, #56]
    6c04:	ldr	w0, [x0, #8]
    6c08:	str	w0, [sp, #44]
    6c0c:	ldr	x0, [sp, #24]
    6c10:	ldr	x0, [x0, #56]
    6c14:	ldr	x0, [x0, #16]
    6c18:	cmp	x0, #0x0
    6c1c:	b.eq	6c48 <deflateEnd@@Base+0x70>  // b.none
    6c20:	ldr	x0, [sp, #24]
    6c24:	ldr	x2, [x0, #72]
    6c28:	ldr	x0, [sp, #24]
    6c2c:	ldr	x3, [x0, #80]
    6c30:	ldr	x0, [sp, #24]
    6c34:	ldr	x0, [x0, #56]
    6c38:	ldr	x0, [x0, #16]
    6c3c:	mov	x1, x0
    6c40:	mov	x0, x3
    6c44:	blr	x2
    6c48:	ldr	x0, [sp, #24]
    6c4c:	ldr	x0, [x0, #56]
    6c50:	ldr	x0, [x0, #120]
    6c54:	cmp	x0, #0x0
    6c58:	b.eq	6c84 <deflateEnd@@Base+0xac>  // b.none
    6c5c:	ldr	x0, [sp, #24]
    6c60:	ldr	x2, [x0, #72]
    6c64:	ldr	x0, [sp, #24]
    6c68:	ldr	x3, [x0, #80]
    6c6c:	ldr	x0, [sp, #24]
    6c70:	ldr	x0, [x0, #56]
    6c74:	ldr	x0, [x0, #120]
    6c78:	mov	x1, x0
    6c7c:	mov	x0, x3
    6c80:	blr	x2
    6c84:	ldr	x0, [sp, #24]
    6c88:	ldr	x0, [x0, #56]
    6c8c:	ldr	x0, [x0, #112]
    6c90:	cmp	x0, #0x0
    6c94:	b.eq	6cc0 <deflateEnd@@Base+0xe8>  // b.none
    6c98:	ldr	x0, [sp, #24]
    6c9c:	ldr	x2, [x0, #72]
    6ca0:	ldr	x0, [sp, #24]
    6ca4:	ldr	x3, [x0, #80]
    6ca8:	ldr	x0, [sp, #24]
    6cac:	ldr	x0, [x0, #56]
    6cb0:	ldr	x0, [x0, #112]
    6cb4:	mov	x1, x0
    6cb8:	mov	x0, x3
    6cbc:	blr	x2
    6cc0:	ldr	x0, [sp, #24]
    6cc4:	ldr	x0, [x0, #56]
    6cc8:	ldr	x0, [x0, #96]
    6ccc:	cmp	x0, #0x0
    6cd0:	b.eq	6cfc <deflateEnd@@Base+0x124>  // b.none
    6cd4:	ldr	x0, [sp, #24]
    6cd8:	ldr	x2, [x0, #72]
    6cdc:	ldr	x0, [sp, #24]
    6ce0:	ldr	x3, [x0, #80]
    6ce4:	ldr	x0, [sp, #24]
    6ce8:	ldr	x0, [x0, #56]
    6cec:	ldr	x0, [x0, #96]
    6cf0:	mov	x1, x0
    6cf4:	mov	x0, x3
    6cf8:	blr	x2
    6cfc:	ldr	x0, [sp, #24]
    6d00:	ldr	x2, [x0, #72]
    6d04:	ldr	x0, [sp, #24]
    6d08:	ldr	x3, [x0, #80]
    6d0c:	ldr	x0, [sp, #24]
    6d10:	ldr	x0, [x0, #56]
    6d14:	mov	x1, x0
    6d18:	mov	x0, x3
    6d1c:	blr	x2
    6d20:	ldr	x0, [sp, #24]
    6d24:	str	xzr, [x0, #56]
    6d28:	ldr	w0, [sp, #44]
    6d2c:	cmp	w0, #0x71
    6d30:	b.ne	6d3c <deflateEnd@@Base+0x164>  // b.any
    6d34:	mov	w0, #0xfffffffd            	// #-3
    6d38:	b	6d40 <deflateEnd@@Base+0x168>
    6d3c:	mov	w0, #0x0                   	// #0
    6d40:	ldp	x29, x30, [sp], #48
    6d44:	ret

0000000000006d48 <deflateCopy@@Base>:
    6d48:	stp	x29, x30, [sp, #-64]!
    6d4c:	mov	x29, sp
    6d50:	str	x0, [sp, #24]
    6d54:	str	x1, [sp, #16]
    6d58:	ldr	x0, [sp, #16]
    6d5c:	bl	47b8 <deflateInit2_@@Base+0x4dc>
    6d60:	cmp	w0, #0x0
    6d64:	b.ne	6d74 <deflateCopy@@Base+0x2c>  // b.any
    6d68:	ldr	x0, [sp, #24]
    6d6c:	cmp	x0, #0x0
    6d70:	b.ne	6d7c <deflateCopy@@Base+0x34>  // b.any
    6d74:	mov	w0, #0xfffffffe            	// #-2
    6d78:	b	7070 <deflateCopy@@Base+0x328>
    6d7c:	ldr	x0, [sp, #16]
    6d80:	ldr	x0, [x0, #56]
    6d84:	str	x0, [sp, #56]
    6d88:	mov	x2, #0x70                  	// #112
    6d8c:	ldr	x1, [sp, #16]
    6d90:	ldr	x0, [sp, #24]
    6d94:	bl	23a0 <memcpy@plt>
    6d98:	ldr	x0, [sp, #24]
    6d9c:	ldr	x3, [x0, #64]
    6da0:	ldr	x0, [sp, #24]
    6da4:	ldr	x0, [x0, #80]
    6da8:	mov	w2, #0x1740                	// #5952
    6dac:	mov	w1, #0x1                   	// #1
    6db0:	blr	x3
    6db4:	str	x0, [sp, #48]
    6db8:	ldr	x0, [sp, #48]
    6dbc:	cmp	x0, #0x0
    6dc0:	b.ne	6dcc <deflateCopy@@Base+0x84>  // b.any
    6dc4:	mov	w0, #0xfffffffc            	// #-4
    6dc8:	b	7070 <deflateCopy@@Base+0x328>
    6dcc:	ldr	x0, [sp, #24]
    6dd0:	ldr	x1, [sp, #48]
    6dd4:	str	x1, [x0, #56]
    6dd8:	mov	x2, #0x1740                	// #5952
    6ddc:	ldr	x1, [sp, #56]
    6de0:	ldr	x0, [sp, #48]
    6de4:	bl	23a0 <memcpy@plt>
    6de8:	ldr	x0, [sp, #48]
    6dec:	ldr	x1, [sp, #24]
    6df0:	str	x1, [x0]
    6df4:	ldr	x0, [sp, #24]
    6df8:	ldr	x3, [x0, #64]
    6dfc:	ldr	x0, [sp, #24]
    6e00:	ldr	x4, [x0, #80]
    6e04:	ldr	x0, [sp, #48]
    6e08:	ldr	w0, [x0, #80]
    6e0c:	mov	w2, #0x2                   	// #2
    6e10:	mov	w1, w0
    6e14:	mov	x0, x4
    6e18:	blr	x3
    6e1c:	mov	x1, x0
    6e20:	ldr	x0, [sp, #48]
    6e24:	str	x1, [x0, #96]
    6e28:	ldr	x0, [sp, #24]
    6e2c:	ldr	x3, [x0, #64]
    6e30:	ldr	x0, [sp, #24]
    6e34:	ldr	x4, [x0, #80]
    6e38:	ldr	x0, [sp, #48]
    6e3c:	ldr	w0, [x0, #80]
    6e40:	mov	w2, #0x2                   	// #2
    6e44:	mov	w1, w0
    6e48:	mov	x0, x4
    6e4c:	blr	x3
    6e50:	mov	x1, x0
    6e54:	ldr	x0, [sp, #48]
    6e58:	str	x1, [x0, #112]
    6e5c:	ldr	x0, [sp, #24]
    6e60:	ldr	x3, [x0, #64]
    6e64:	ldr	x0, [sp, #24]
    6e68:	ldr	x4, [x0, #80]
    6e6c:	ldr	x0, [sp, #48]
    6e70:	ldr	w0, [x0, #132]
    6e74:	mov	w2, #0x2                   	// #2
    6e78:	mov	w1, w0
    6e7c:	mov	x0, x4
    6e80:	blr	x3
    6e84:	mov	x1, x0
    6e88:	ldr	x0, [sp, #48]
    6e8c:	str	x1, [x0, #120]
    6e90:	ldr	x0, [sp, #24]
    6e94:	ldr	x3, [x0, #64]
    6e98:	ldr	x0, [sp, #24]
    6e9c:	ldr	x4, [x0, #80]
    6ea0:	ldr	x0, [sp, #48]
    6ea4:	ldr	w0, [x0, #5896]
    6ea8:	mov	w2, #0x4                   	// #4
    6eac:	mov	w1, w0
    6eb0:	mov	x0, x4
    6eb4:	blr	x3
    6eb8:	str	x0, [sp, #40]
    6ebc:	ldr	x0, [sp, #48]
    6ec0:	ldr	x1, [sp, #40]
    6ec4:	str	x1, [x0, #16]
    6ec8:	ldr	x0, [sp, #48]
    6ecc:	ldr	x0, [x0, #96]
    6ed0:	cmp	x0, #0x0
    6ed4:	b.eq	6f08 <deflateCopy@@Base+0x1c0>  // b.none
    6ed8:	ldr	x0, [sp, #48]
    6edc:	ldr	x0, [x0, #112]
    6ee0:	cmp	x0, #0x0
    6ee4:	b.eq	6f08 <deflateCopy@@Base+0x1c0>  // b.none
    6ee8:	ldr	x0, [sp, #48]
    6eec:	ldr	x0, [x0, #120]
    6ef0:	cmp	x0, #0x0
    6ef4:	b.eq	6f08 <deflateCopy@@Base+0x1c0>  // b.none
    6ef8:	ldr	x0, [sp, #48]
    6efc:	ldr	x0, [x0, #16]
    6f00:	cmp	x0, #0x0
    6f04:	b.ne	6f18 <deflateCopy@@Base+0x1d0>  // b.any
    6f08:	ldr	x0, [sp, #24]
    6f0c:	bl	2590 <deflateEnd@plt>
    6f10:	mov	w0, #0xfffffffc            	// #-4
    6f14:	b	7070 <deflateCopy@@Base+0x328>
    6f18:	ldr	x0, [sp, #48]
    6f1c:	ldr	x3, [x0, #96]
    6f20:	ldr	x0, [sp, #56]
    6f24:	ldr	x1, [x0, #96]
    6f28:	ldr	x0, [sp, #48]
    6f2c:	ldr	w0, [x0, #80]
    6f30:	lsl	w0, w0, #1
    6f34:	mov	w0, w0
    6f38:	mov	x2, x0
    6f3c:	mov	x0, x3
    6f40:	bl	23a0 <memcpy@plt>
    6f44:	ldr	x0, [sp, #48]
    6f48:	ldr	x3, [x0, #112]
    6f4c:	ldr	x0, [sp, #56]
    6f50:	ldr	x1, [x0, #112]
    6f54:	ldr	x0, [sp, #48]
    6f58:	ldr	w0, [x0, #80]
    6f5c:	mov	w0, w0
    6f60:	lsl	x0, x0, #1
    6f64:	mov	x2, x0
    6f68:	mov	x0, x3
    6f6c:	bl	23a0 <memcpy@plt>
    6f70:	ldr	x0, [sp, #48]
    6f74:	ldr	x3, [x0, #120]
    6f78:	ldr	x0, [sp, #56]
    6f7c:	ldr	x1, [x0, #120]
    6f80:	ldr	x0, [sp, #48]
    6f84:	ldr	w0, [x0, #132]
    6f88:	mov	w0, w0
    6f8c:	lsl	x0, x0, #1
    6f90:	mov	x2, x0
    6f94:	mov	x0, x3
    6f98:	bl	23a0 <memcpy@plt>
    6f9c:	ldr	x0, [sp, #48]
    6fa0:	ldr	x3, [x0, #16]
    6fa4:	ldr	x0, [sp, #56]
    6fa8:	ldr	x1, [x0, #16]
    6fac:	ldr	x0, [sp, #48]
    6fb0:	ldr	x0, [x0, #24]
    6fb4:	mov	w0, w0
    6fb8:	mov	x2, x0
    6fbc:	mov	x0, x3
    6fc0:	bl	23a0 <memcpy@plt>
    6fc4:	ldr	x0, [sp, #48]
    6fc8:	ldr	x0, [x0, #16]
    6fcc:	ldr	x1, [sp, #56]
    6fd0:	ldr	x2, [x1, #32]
    6fd4:	ldr	x1, [sp, #56]
    6fd8:	ldr	x1, [x1, #16]
    6fdc:	sub	x1, x2, x1
    6fe0:	add	x1, x0, x1
    6fe4:	ldr	x0, [sp, #48]
    6fe8:	str	x1, [x0, #32]
    6fec:	ldr	x0, [sp, #48]
    6ff0:	ldr	w0, [x0, #5896]
    6ff4:	lsr	w0, w0, #1
    6ff8:	mov	w0, w0
    6ffc:	lsl	x0, x0, #1
    7000:	ldr	x1, [sp, #40]
    7004:	add	x1, x1, x0
    7008:	ldr	x0, [sp, #48]
    700c:	str	x1, [x0, #5904]
    7010:	ldr	x0, [sp, #48]
    7014:	ldr	x2, [x0, #16]
    7018:	ldr	x0, [sp, #48]
    701c:	ldr	w0, [x0, #5896]
    7020:	mov	w1, w0
    7024:	mov	x0, x1
    7028:	lsl	x0, x0, #1
    702c:	add	x0, x0, x1
    7030:	add	x1, x2, x0
    7034:	ldr	x0, [sp, #48]
    7038:	str	x1, [x0, #5888]
    703c:	ldr	x0, [sp, #48]
    7040:	add	x1, x0, #0xd4
    7044:	ldr	x0, [sp, #48]
    7048:	str	x1, [x0, #2904]
    704c:	ldr	x0, [sp, #48]
    7050:	add	x1, x0, #0x9c8
    7054:	ldr	x0, [sp, #48]
    7058:	str	x1, [x0, #2928]
    705c:	ldr	x0, [sp, #48]
    7060:	add	x1, x0, #0xabc
    7064:	ldr	x0, [sp, #48]
    7068:	str	x1, [x0, #2952]
    706c:	mov	w0, #0x0                   	// #0
    7070:	ldp	x29, x30, [sp], #64
    7074:	ret
    7078:	stp	x29, x30, [sp, #-64]!
    707c:	mov	x29, sp
    7080:	str	x0, [sp, #40]
    7084:	str	x1, [sp, #32]
    7088:	str	w2, [sp, #28]
    708c:	ldr	x0, [sp, #40]
    7090:	ldr	w0, [x0, #8]
    7094:	str	w0, [sp, #60]
    7098:	ldr	w1, [sp, #60]
    709c:	ldr	w0, [sp, #28]
    70a0:	cmp	w1, w0
    70a4:	b.ls	70b0 <deflateCopy@@Base+0x368>  // b.plast
    70a8:	ldr	w0, [sp, #28]
    70ac:	str	w0, [sp, #60]
    70b0:	ldr	w0, [sp, #60]
    70b4:	cmp	w0, #0x0
    70b8:	b.ne	70c4 <deflateCopy@@Base+0x37c>  // b.any
    70bc:	mov	w0, #0x0                   	// #0
    70c0:	b	7198 <deflateCopy@@Base+0x450>
    70c4:	ldr	x0, [sp, #40]
    70c8:	ldr	w1, [x0, #8]
    70cc:	ldr	w0, [sp, #60]
    70d0:	sub	w1, w1, w0
    70d4:	ldr	x0, [sp, #40]
    70d8:	str	w1, [x0, #8]
    70dc:	ldr	x0, [sp, #40]
    70e0:	ldr	x0, [x0]
    70e4:	ldr	w1, [sp, #60]
    70e8:	mov	x2, x1
    70ec:	mov	x1, x0
    70f0:	ldr	x0, [sp, #32]
    70f4:	bl	23a0 <memcpy@plt>
    70f8:	ldr	x0, [sp, #40]
    70fc:	ldr	x0, [x0, #56]
    7100:	ldr	w0, [x0, #48]
    7104:	cmp	w0, #0x1
    7108:	b.ne	7130 <deflateCopy@@Base+0x3e8>  // b.any
    710c:	ldr	x0, [sp, #40]
    7110:	ldr	x0, [x0, #96]
    7114:	ldr	w2, [sp, #60]
    7118:	ldr	x1, [sp, #32]
    711c:	bl	2560 <adler32@plt>
    7120:	mov	x1, x0
    7124:	ldr	x0, [sp, #40]
    7128:	str	x1, [x0, #96]
    712c:	b	7164 <deflateCopy@@Base+0x41c>
    7130:	ldr	x0, [sp, #40]
    7134:	ldr	x0, [x0, #56]
    7138:	ldr	w0, [x0, #48]
    713c:	cmp	w0, #0x2
    7140:	b.ne	7164 <deflateCopy@@Base+0x41c>  // b.any
    7144:	ldr	x0, [sp, #40]
    7148:	ldr	x0, [x0, #96]
    714c:	ldr	w2, [sp, #60]
    7150:	ldr	x1, [sp, #32]
    7154:	bl	2430 <crc32@plt>
    7158:	mov	x1, x0
    715c:	ldr	x0, [sp, #40]
    7160:	str	x1, [x0, #96]
    7164:	ldr	x0, [sp, #40]
    7168:	ldr	x1, [x0]
    716c:	ldr	w0, [sp, #60]
    7170:	add	x1, x1, x0
    7174:	ldr	x0, [sp, #40]
    7178:	str	x1, [x0]
    717c:	ldr	x0, [sp, #40]
    7180:	ldr	x1, [x0, #16]
    7184:	ldr	w0, [sp, #60]
    7188:	add	x1, x1, x0
    718c:	ldr	x0, [sp, #40]
    7190:	str	x1, [x0, #16]
    7194:	ldr	w0, [sp, #60]
    7198:	ldp	x29, x30, [sp], #64
    719c:	ret
    71a0:	stp	x29, x30, [sp, #-32]!
    71a4:	mov	x29, sp
    71a8:	str	x0, [sp, #24]
    71ac:	ldr	x0, [sp, #24]
    71b0:	ldr	w0, [x0, #80]
    71b4:	mov	w0, w0
    71b8:	lsl	x1, x0, #1
    71bc:	ldr	x0, [sp, #24]
    71c0:	str	x1, [x0, #104]
    71c4:	ldr	x0, [sp, #24]
    71c8:	ldr	x1, [x0, #120]
    71cc:	ldr	x0, [sp, #24]
    71d0:	ldr	w0, [x0, #132]
    71d4:	sub	w0, w0, #0x1
    71d8:	mov	w0, w0
    71dc:	lsl	x0, x0, #1
    71e0:	add	x0, x1, x0
    71e4:	strh	wzr, [x0]
    71e8:	ldr	x0, [sp, #24]
    71ec:	ldr	x3, [x0, #120]
    71f0:	ldr	x0, [sp, #24]
    71f4:	ldr	w0, [x0, #132]
    71f8:	sub	w0, w0, #0x1
    71fc:	mov	w0, w0
    7200:	lsl	x0, x0, #1
    7204:	mov	x2, x0
    7208:	mov	w1, #0x0                   	// #0
    720c:	mov	x0, x3
    7210:	bl	24a0 <memset@plt>
    7214:	ldr	x0, [sp, #24]
    7218:	ldr	w2, [x0, #196]
    721c:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    7220:	add	x1, x0, #0xc68
    7224:	sxtw	x0, w2
    7228:	lsl	x0, x0, #4
    722c:	add	x0, x1, x0
    7230:	ldrh	w0, [x0, #2]
    7234:	mov	w1, w0
    7238:	ldr	x0, [sp, #24]
    723c:	str	w1, [x0, #192]
    7240:	ldr	x0, [sp, #24]
    7244:	ldr	w2, [x0, #196]
    7248:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    724c:	add	x1, x0, #0xc68
    7250:	sxtw	x0, w2
    7254:	lsl	x0, x0, #4
    7258:	add	x0, x1, x0
    725c:	ldrh	w0, [x0]
    7260:	mov	w1, w0
    7264:	ldr	x0, [sp, #24]
    7268:	str	w1, [x0, #204]
    726c:	ldr	x0, [sp, #24]
    7270:	ldr	w2, [x0, #196]
    7274:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    7278:	add	x1, x0, #0xc68
    727c:	sxtw	x0, w2
    7280:	lsl	x0, x0, #4
    7284:	add	x0, x1, x0
    7288:	ldrh	w0, [x0, #4]
    728c:	mov	w1, w0
    7290:	ldr	x0, [sp, #24]
    7294:	str	w1, [x0, #208]
    7298:	ldr	x0, [sp, #24]
    729c:	ldr	w2, [x0, #196]
    72a0:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
    72a4:	add	x1, x0, #0xc68
    72a8:	sxtw	x0, w2
    72ac:	lsl	x0, x0, #4
    72b0:	add	x0, x1, x0
    72b4:	ldrh	w0, [x0, #6]
    72b8:	mov	w1, w0
    72bc:	ldr	x0, [sp, #24]
    72c0:	str	w1, [x0, #188]
    72c4:	ldr	x0, [sp, #24]
    72c8:	str	wzr, [x0, #172]
    72cc:	ldr	x0, [sp, #24]
    72d0:	str	xzr, [x0, #152]
    72d4:	ldr	x0, [sp, #24]
    72d8:	str	wzr, [x0, #180]
    72dc:	ldr	x0, [sp, #24]
    72e0:	str	wzr, [x0, #5932]
    72e4:	ldr	x0, [sp, #24]
    72e8:	mov	w1, #0x2                   	// #2
    72ec:	str	w1, [x0, #184]
    72f0:	ldr	x0, [sp, #24]
    72f4:	ldr	w1, [x0, #184]
    72f8:	ldr	x0, [sp, #24]
    72fc:	str	w1, [x0, #160]
    7300:	ldr	x0, [sp, #24]
    7304:	str	wzr, [x0, #168]
    7308:	ldr	x0, [sp, #24]
    730c:	str	wzr, [x0, #128]
    7310:	nop
    7314:	ldp	x29, x30, [sp], #32
    7318:	ret
    731c:	stp	x19, x20, [sp, #-96]!
    7320:	stp	x21, x22, [sp, #16]
    7324:	str	x23, [sp, #32]
    7328:	str	x0, [sp, #56]
    732c:	str	w1, [sp, #52]
    7330:	ldr	x0, [sp, #56]
    7334:	ldr	w0, [x0, #188]
    7338:	str	w0, [sp, #92]
    733c:	ldr	x0, [sp, #56]
    7340:	ldr	x1, [x0, #96]
    7344:	ldr	x0, [sp, #56]
    7348:	ldr	w0, [x0, #172]
    734c:	mov	w0, w0
    7350:	add	x19, x1, x0
    7354:	ldr	x0, [sp, #56]
    7358:	ldr	w0, [x0, #184]
    735c:	str	w0, [sp, #88]
    7360:	ldr	x0, [sp, #56]
    7364:	ldr	w0, [x0, #208]
    7368:	str	w0, [sp, #84]
    736c:	ldr	x0, [sp, #56]
    7370:	ldr	w1, [x0, #172]
    7374:	ldr	x0, [sp, #56]
    7378:	ldr	w0, [x0, #80]
    737c:	sub	w0, w0, #0x106
    7380:	cmp	w1, w0
    7384:	b.ls	73a4 <deflateCopy@@Base+0x65c>  // b.plast
    7388:	ldr	x0, [sp, #56]
    738c:	ldr	w1, [x0, #172]
    7390:	ldr	x0, [sp, #56]
    7394:	ldr	w0, [x0, #80]
    7398:	sub	w0, w1, w0
    739c:	add	w0, w0, #0x106
    73a0:	b	73a8 <deflateCopy@@Base+0x660>
    73a4:	mov	w0, #0x0                   	// #0
    73a8:	str	w0, [sp, #80]
    73ac:	ldr	x0, [sp, #56]
    73b0:	ldr	x0, [x0, #112]
    73b4:	str	x0, [sp, #72]
    73b8:	ldr	x0, [sp, #56]
    73bc:	ldr	w0, [x0, #88]
    73c0:	str	w0, [sp, #68]
    73c4:	ldr	x0, [sp, #56]
    73c8:	ldr	x1, [x0, #96]
    73cc:	ldr	x0, [sp, #56]
    73d0:	ldr	w0, [x0, #172]
    73d4:	mov	w0, w0
    73d8:	add	x0, x0, #0x102
    73dc:	add	x21, x1, x0
    73e0:	ldrsw	x0, [sp, #88]
    73e4:	sub	x0, x0, #0x1
    73e8:	add	x0, x19, x0
    73ec:	ldrb	w22, [x0]
    73f0:	ldrsw	x0, [sp, #88]
    73f4:	add	x0, x19, x0
    73f8:	ldrb	w23, [x0]
    73fc:	ldr	x0, [sp, #56]
    7400:	ldr	w1, [x0, #184]
    7404:	ldr	x0, [sp, #56]
    7408:	ldr	w0, [x0, #204]
    740c:	cmp	w1, w0
    7410:	b.cc	7420 <deflateCopy@@Base+0x6d8>  // b.lo, b.ul, b.last
    7414:	ldr	w0, [sp, #92]
    7418:	lsr	w0, w0, #2
    741c:	str	w0, [sp, #92]
    7420:	ldr	x0, [sp, #56]
    7424:	ldr	w1, [x0, #180]
    7428:	ldr	w0, [sp, #84]
    742c:	cmp	w1, w0
    7430:	b.cs	7440 <deflateCopy@@Base+0x6f8>  // b.hs, b.nlast
    7434:	ldr	x0, [sp, #56]
    7438:	ldr	w0, [x0, #180]
    743c:	str	w0, [sp, #84]
    7440:	ldr	x0, [sp, #56]
    7444:	ldr	x1, [x0, #96]
    7448:	ldr	w0, [sp, #52]
    744c:	add	x20, x1, x0
    7450:	ldrsw	x0, [sp, #88]
    7454:	add	x0, x20, x0
    7458:	ldrb	w0, [x0]
    745c:	cmp	w23, w0
    7460:	b.ne	75d0 <deflateCopy@@Base+0x888>  // b.any
    7464:	ldrsw	x0, [sp, #88]
    7468:	sub	x0, x0, #0x1
    746c:	add	x0, x20, x0
    7470:	ldrb	w0, [x0]
    7474:	cmp	w22, w0
    7478:	b.ne	75d0 <deflateCopy@@Base+0x888>  // b.any
    747c:	ldrb	w1, [x20]
    7480:	ldrb	w0, [x19]
    7484:	cmp	w1, w0
    7488:	b.ne	75d0 <deflateCopy@@Base+0x888>  // b.any
    748c:	add	x20, x20, #0x1
    7490:	ldrb	w1, [x20]
    7494:	add	x0, x19, #0x1
    7498:	ldrb	w0, [x0]
    749c:	cmp	w1, w0
    74a0:	b.ne	75d0 <deflateCopy@@Base+0x888>  // b.any
    74a4:	add	x19, x19, #0x2
    74a8:	add	x20, x20, #0x1
    74ac:	add	x19, x19, #0x1
    74b0:	ldrb	w1, [x19]
    74b4:	add	x20, x20, #0x1
    74b8:	ldrb	w0, [x20]
    74bc:	cmp	w1, w0
    74c0:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    74c4:	add	x19, x19, #0x1
    74c8:	ldrb	w1, [x19]
    74cc:	add	x20, x20, #0x1
    74d0:	ldrb	w0, [x20]
    74d4:	cmp	w1, w0
    74d8:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    74dc:	add	x19, x19, #0x1
    74e0:	ldrb	w1, [x19]
    74e4:	add	x20, x20, #0x1
    74e8:	ldrb	w0, [x20]
    74ec:	cmp	w1, w0
    74f0:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    74f4:	add	x19, x19, #0x1
    74f8:	ldrb	w1, [x19]
    74fc:	add	x20, x20, #0x1
    7500:	ldrb	w0, [x20]
    7504:	cmp	w1, w0
    7508:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    750c:	add	x19, x19, #0x1
    7510:	ldrb	w1, [x19]
    7514:	add	x20, x20, #0x1
    7518:	ldrb	w0, [x20]
    751c:	cmp	w1, w0
    7520:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    7524:	add	x19, x19, #0x1
    7528:	ldrb	w1, [x19]
    752c:	add	x20, x20, #0x1
    7530:	ldrb	w0, [x20]
    7534:	cmp	w1, w0
    7538:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    753c:	add	x19, x19, #0x1
    7540:	ldrb	w1, [x19]
    7544:	add	x20, x20, #0x1
    7548:	ldrb	w0, [x20]
    754c:	cmp	w1, w0
    7550:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    7554:	add	x19, x19, #0x1
    7558:	ldrb	w1, [x19]
    755c:	add	x20, x20, #0x1
    7560:	ldrb	w0, [x20]
    7564:	cmp	w1, w0
    7568:	b.ne	7574 <deflateCopy@@Base+0x82c>  // b.any
    756c:	cmp	x19, x21
    7570:	b.cc	74ac <deflateCopy@@Base+0x764>  // b.lo, b.ul, b.last
    7574:	sub	x0, x21, x19
    7578:	mov	w1, w0
    757c:	mov	w0, #0x102                 	// #258
    7580:	sub	w20, w0, w1
    7584:	sub	x19, x21, #0x102
    7588:	ldr	w0, [sp, #88]
    758c:	cmp	w20, w0
    7590:	b.le	75d4 <deflateCopy@@Base+0x88c>
    7594:	ldr	x0, [sp, #56]
    7598:	ldr	w1, [sp, #52]
    759c:	str	w1, [x0, #176]
    75a0:	str	w20, [sp, #88]
    75a4:	ldr	w0, [sp, #84]
    75a8:	cmp	w20, w0
    75ac:	b.ge	7624 <deflateCopy@@Base+0x8dc>  // b.tcont
    75b0:	ldrsw	x0, [sp, #88]
    75b4:	sub	x0, x0, #0x1
    75b8:	add	x0, x19, x0
    75bc:	ldrb	w22, [x0]
    75c0:	ldrsw	x0, [sp, #88]
    75c4:	add	x0, x19, x0
    75c8:	ldrb	w23, [x0]
    75cc:	b	75d4 <deflateCopy@@Base+0x88c>
    75d0:	nop
    75d4:	ldr	w1, [sp, #52]
    75d8:	ldr	w0, [sp, #68]
    75dc:	and	w0, w1, w0
    75e0:	mov	w0, w0
    75e4:	lsl	x0, x0, #1
    75e8:	ldr	x1, [sp, #72]
    75ec:	add	x0, x1, x0
    75f0:	ldrh	w0, [x0]
    75f4:	str	w0, [sp, #52]
    75f8:	ldr	w1, [sp, #52]
    75fc:	ldr	w0, [sp, #80]
    7600:	cmp	w1, w0
    7604:	b.ls	7628 <deflateCopy@@Base+0x8e0>  // b.plast
    7608:	ldr	w0, [sp, #92]
    760c:	sub	w0, w0, #0x1
    7610:	str	w0, [sp, #92]
    7614:	ldr	w0, [sp, #92]
    7618:	cmp	w0, #0x0
    761c:	b.ne	7440 <deflateCopy@@Base+0x6f8>  // b.any
    7620:	b	7628 <deflateCopy@@Base+0x8e0>
    7624:	nop
    7628:	ldr	x0, [sp, #56]
    762c:	ldr	w1, [x0, #180]
    7630:	ldr	w0, [sp, #88]
    7634:	cmp	w1, w0
    7638:	b.cc	7644 <deflateCopy@@Base+0x8fc>  // b.lo, b.ul, b.last
    763c:	ldr	w0, [sp, #88]
    7640:	b	764c <deflateCopy@@Base+0x904>
    7644:	ldr	x0, [sp, #56]
    7648:	ldr	w0, [x0, #180]
    764c:	ldp	x21, x22, [sp, #16]
    7650:	ldr	x23, [sp, #32]
    7654:	ldp	x19, x20, [sp], #96
    7658:	ret
    765c:	stp	x29, x30, [sp, #-64]!
    7660:	mov	x29, sp
    7664:	str	x0, [sp, #24]
    7668:	ldr	x0, [sp, #24]
    766c:	ldr	w0, [x0, #80]
    7670:	str	w0, [sp, #44]
    7674:	ldr	x0, [sp, #24]
    7678:	ldr	x0, [x0, #104]
    767c:	mov	w1, w0
    7680:	ldr	x0, [sp, #24]
    7684:	ldr	w0, [x0, #180]
    7688:	sub	w1, w1, w0
    768c:	ldr	x0, [sp, #24]
    7690:	ldr	w0, [x0, #172]
    7694:	sub	w0, w1, w0
    7698:	str	w0, [sp, #56]
    769c:	ldr	x0, [sp, #24]
    76a0:	ldr	w1, [x0, #172]
    76a4:	ldr	x0, [sp, #24]
    76a8:	ldr	w2, [x0, #80]
    76ac:	ldr	w0, [sp, #44]
    76b0:	add	w0, w2, w0
    76b4:	sub	w0, w0, #0x106
    76b8:	cmp	w1, w0
    76bc:	b.cc	7758 <deflateCopy@@Base+0xa10>  // b.lo, b.ul, b.last
    76c0:	ldr	x0, [sp, #24]
    76c4:	ldr	x3, [x0, #96]
    76c8:	ldr	x0, [sp, #24]
    76cc:	ldr	x1, [x0, #96]
    76d0:	ldr	w0, [sp, #44]
    76d4:	add	x4, x1, x0
    76d8:	ldr	w1, [sp, #44]
    76dc:	ldr	w0, [sp, #56]
    76e0:	sub	w0, w1, w0
    76e4:	mov	w0, w0
    76e8:	mov	x2, x0
    76ec:	mov	x1, x4
    76f0:	mov	x0, x3
    76f4:	bl	23a0 <memcpy@plt>
    76f8:	ldr	x0, [sp, #24]
    76fc:	ldr	w1, [x0, #176]
    7700:	ldr	w0, [sp, #44]
    7704:	sub	w1, w1, w0
    7708:	ldr	x0, [sp, #24]
    770c:	str	w1, [x0, #176]
    7710:	ldr	x0, [sp, #24]
    7714:	ldr	w1, [x0, #172]
    7718:	ldr	w0, [sp, #44]
    771c:	sub	w1, w1, w0
    7720:	ldr	x0, [sp, #24]
    7724:	str	w1, [x0, #172]
    7728:	ldr	x0, [sp, #24]
    772c:	ldr	x1, [x0, #152]
    7730:	ldr	w0, [sp, #44]
    7734:	sub	x1, x1, x0
    7738:	ldr	x0, [sp, #24]
    773c:	str	x1, [x0, #152]
    7740:	ldr	x0, [sp, #24]
    7744:	bl	4170 <crc32_combine64@@ZLIB_1.2.3.3+0x2c>
    7748:	ldr	w1, [sp, #56]
    774c:	ldr	w0, [sp, #44]
    7750:	add	w0, w1, w0
    7754:	str	w0, [sp, #56]
    7758:	ldr	x0, [sp, #24]
    775c:	ldr	x0, [x0]
    7760:	ldr	w0, [x0, #8]
    7764:	cmp	w0, #0x0
    7768:	b.eq	799c <deflateCopy@@Base+0xc54>  // b.none
    776c:	ldr	x0, [sp, #24]
    7770:	ldr	x3, [x0]
    7774:	ldr	x0, [sp, #24]
    7778:	ldr	x1, [x0, #96]
    777c:	ldr	x0, [sp, #24]
    7780:	ldr	w0, [x0, #172]
    7784:	mov	w2, w0
    7788:	ldr	x0, [sp, #24]
    778c:	ldr	w0, [x0, #180]
    7790:	mov	w0, w0
    7794:	add	x0, x2, x0
    7798:	add	x0, x1, x0
    779c:	ldr	w2, [sp, #56]
    77a0:	mov	x1, x0
    77a4:	mov	x0, x3
    77a8:	bl	7078 <deflateCopy@@Base+0x330>
    77ac:	str	w0, [sp, #40]
    77b0:	ldr	x0, [sp, #24]
    77b4:	ldr	w1, [x0, #180]
    77b8:	ldr	w0, [sp, #40]
    77bc:	add	w1, w1, w0
    77c0:	ldr	x0, [sp, #24]
    77c4:	str	w1, [x0, #180]
    77c8:	ldr	x0, [sp, #24]
    77cc:	ldr	w1, [x0, #180]
    77d0:	ldr	x0, [sp, #24]
    77d4:	ldr	w0, [x0, #5932]
    77d8:	add	w0, w1, w0
    77dc:	cmp	w0, #0x2
    77e0:	b.ls	7974 <deflateCopy@@Base+0xc2c>  // b.plast
    77e4:	ldr	x0, [sp, #24]
    77e8:	ldr	w1, [x0, #172]
    77ec:	ldr	x0, [sp, #24]
    77f0:	ldr	w0, [x0, #5932]
    77f4:	sub	w0, w1, w0
    77f8:	str	w0, [sp, #60]
    77fc:	ldr	x0, [sp, #24]
    7800:	ldr	x1, [x0, #96]
    7804:	ldr	w0, [sp, #60]
    7808:	add	x0, x1, x0
    780c:	ldrb	w0, [x0]
    7810:	mov	w1, w0
    7814:	ldr	x0, [sp, #24]
    7818:	str	w1, [x0, #128]
    781c:	ldr	x0, [sp, #24]
    7820:	ldr	w1, [x0, #128]
    7824:	ldr	x0, [sp, #24]
    7828:	ldr	w0, [x0, #144]
    782c:	lsl	w0, w1, w0
    7830:	ldr	x1, [sp, #24]
    7834:	ldr	x2, [x1, #96]
    7838:	ldr	w1, [sp, #60]
    783c:	add	w1, w1, #0x1
    7840:	mov	w1, w1
    7844:	add	x1, x2, x1
    7848:	ldrb	w1, [x1]
    784c:	eor	w1, w0, w1
    7850:	ldr	x0, [sp, #24]
    7854:	ldr	w0, [x0, #140]
    7858:	and	w1, w1, w0
    785c:	ldr	x0, [sp, #24]
    7860:	str	w1, [x0, #128]
    7864:	b	795c <deflateCopy@@Base+0xc14>
    7868:	ldr	x0, [sp, #24]
    786c:	ldr	w1, [x0, #128]
    7870:	ldr	x0, [sp, #24]
    7874:	ldr	w0, [x0, #144]
    7878:	lsl	w0, w1, w0
    787c:	ldr	x1, [sp, #24]
    7880:	ldr	x2, [x1, #96]
    7884:	ldr	w1, [sp, #60]
    7888:	add	w1, w1, #0x2
    788c:	mov	w1, w1
    7890:	add	x1, x2, x1
    7894:	ldrb	w1, [x1]
    7898:	eor	w1, w0, w1
    789c:	ldr	x0, [sp, #24]
    78a0:	ldr	w0, [x0, #140]
    78a4:	and	w1, w1, w0
    78a8:	ldr	x0, [sp, #24]
    78ac:	str	w1, [x0, #128]
    78b0:	ldr	x0, [sp, #24]
    78b4:	ldr	x1, [x0, #120]
    78b8:	ldr	x0, [sp, #24]
    78bc:	ldr	w0, [x0, #128]
    78c0:	mov	w0, w0
    78c4:	lsl	x0, x0, #1
    78c8:	add	x1, x1, x0
    78cc:	ldr	x0, [sp, #24]
    78d0:	ldr	x2, [x0, #112]
    78d4:	ldr	x0, [sp, #24]
    78d8:	ldr	w3, [x0, #88]
    78dc:	ldr	w0, [sp, #60]
    78e0:	and	w0, w3, w0
    78e4:	mov	w0, w0
    78e8:	lsl	x0, x0, #1
    78ec:	add	x0, x2, x0
    78f0:	ldrh	w1, [x1]
    78f4:	strh	w1, [x0]
    78f8:	ldr	x0, [sp, #24]
    78fc:	ldr	x1, [x0, #120]
    7900:	ldr	x0, [sp, #24]
    7904:	ldr	w0, [x0, #128]
    7908:	mov	w0, w0
    790c:	lsl	x0, x0, #1
    7910:	add	x0, x1, x0
    7914:	ldr	w1, [sp, #60]
    7918:	and	w1, w1, #0xffff
    791c:	strh	w1, [x0]
    7920:	ldr	w0, [sp, #60]
    7924:	add	w0, w0, #0x1
    7928:	str	w0, [sp, #60]
    792c:	ldr	x0, [sp, #24]
    7930:	ldr	w0, [x0, #5932]
    7934:	sub	w1, w0, #0x1
    7938:	ldr	x0, [sp, #24]
    793c:	str	w1, [x0, #5932]
    7940:	ldr	x0, [sp, #24]
    7944:	ldr	w1, [x0, #180]
    7948:	ldr	x0, [sp, #24]
    794c:	ldr	w0, [x0, #5932]
    7950:	add	w0, w1, w0
    7954:	cmp	w0, #0x2
    7958:	b.ls	7970 <deflateCopy@@Base+0xc28>  // b.plast
    795c:	ldr	x0, [sp, #24]
    7960:	ldr	w0, [x0, #5932]
    7964:	cmp	w0, #0x0
    7968:	b.ne	7868 <deflateCopy@@Base+0xb20>  // b.any
    796c:	b	7974 <deflateCopy@@Base+0xc2c>
    7970:	nop
    7974:	ldr	x0, [sp, #24]
    7978:	ldr	w0, [x0, #180]
    797c:	cmp	w0, #0x105
    7980:	b.hi	79a0 <deflateCopy@@Base+0xc58>  // b.pmore
    7984:	ldr	x0, [sp, #24]
    7988:	ldr	x0, [x0]
    798c:	ldr	w0, [x0, #8]
    7990:	cmp	w0, #0x0
    7994:	b.ne	7674 <deflateCopy@@Base+0x92c>  // b.any
    7998:	b	79a0 <deflateCopy@@Base+0xc58>
    799c:	nop
    79a0:	ldr	x0, [sp, #24]
    79a4:	ldr	x1, [x0, #5944]
    79a8:	ldr	x0, [sp, #24]
    79ac:	ldr	x0, [x0, #104]
    79b0:	cmp	x1, x0
    79b4:	b.cs	7af8 <deflateCopy@@Base+0xdb0>  // b.hs, b.nlast
    79b8:	ldr	x0, [sp, #24]
    79bc:	ldr	w0, [x0, #172]
    79c0:	mov	w1, w0
    79c4:	ldr	x0, [sp, #24]
    79c8:	ldr	w0, [x0, #180]
    79cc:	mov	w0, w0
    79d0:	add	x0, x1, x0
    79d4:	str	x0, [sp, #32]
    79d8:	ldr	x0, [sp, #24]
    79dc:	ldr	x0, [x0, #5944]
    79e0:	ldr	x1, [sp, #32]
    79e4:	cmp	x1, x0
    79e8:	b.ls	7a50 <deflateCopy@@Base+0xd08>  // b.plast
    79ec:	ldr	x0, [sp, #24]
    79f0:	ldr	x1, [x0, #104]
    79f4:	ldr	x0, [sp, #32]
    79f8:	sub	x0, x1, x0
    79fc:	str	x0, [sp, #48]
    7a00:	ldr	x0, [sp, #48]
    7a04:	cmp	x0, #0x102
    7a08:	b.ls	7a14 <deflateCopy@@Base+0xccc>  // b.plast
    7a0c:	mov	x0, #0x102                 	// #258
    7a10:	str	x0, [sp, #48]
    7a14:	ldr	x0, [sp, #24]
    7a18:	ldr	x1, [x0, #96]
    7a1c:	ldr	x0, [sp, #32]
    7a20:	add	x0, x1, x0
    7a24:	ldr	x1, [sp, #48]
    7a28:	mov	w1, w1
    7a2c:	mov	x2, x1
    7a30:	mov	w1, #0x0                   	// #0
    7a34:	bl	24a0 <memset@plt>
    7a38:	ldr	x1, [sp, #32]
    7a3c:	ldr	x0, [sp, #48]
    7a40:	add	x1, x1, x0
    7a44:	ldr	x0, [sp, #24]
    7a48:	str	x1, [x0, #5944]
    7a4c:	b	7af8 <deflateCopy@@Base+0xdb0>
    7a50:	ldr	x0, [sp, #24]
    7a54:	ldr	x1, [x0, #5944]
    7a58:	ldr	x0, [sp, #32]
    7a5c:	add	x0, x0, #0x102
    7a60:	cmp	x1, x0
    7a64:	b.cs	7af8 <deflateCopy@@Base+0xdb0>  // b.hs, b.nlast
    7a68:	ldr	x0, [sp, #24]
    7a6c:	ldr	x0, [x0, #5944]
    7a70:	ldr	x1, [sp, #32]
    7a74:	sub	x0, x1, x0
    7a78:	add	x0, x0, #0x102
    7a7c:	str	x0, [sp, #48]
    7a80:	ldr	x0, [sp, #24]
    7a84:	ldr	x1, [x0, #104]
    7a88:	ldr	x0, [sp, #24]
    7a8c:	ldr	x0, [x0, #5944]
    7a90:	sub	x0, x1, x0
    7a94:	ldr	x1, [sp, #48]
    7a98:	cmp	x1, x0
    7a9c:	b.ls	7ab8 <deflateCopy@@Base+0xd70>  // b.plast
    7aa0:	ldr	x0, [sp, #24]
    7aa4:	ldr	x1, [x0, #104]
    7aa8:	ldr	x0, [sp, #24]
    7aac:	ldr	x0, [x0, #5944]
    7ab0:	sub	x0, x1, x0
    7ab4:	str	x0, [sp, #48]
    7ab8:	ldr	x0, [sp, #24]
    7abc:	ldr	x1, [x0, #96]
    7ac0:	ldr	x0, [sp, #24]
    7ac4:	ldr	x0, [x0, #5944]
    7ac8:	add	x0, x1, x0
    7acc:	ldr	x1, [sp, #48]
    7ad0:	mov	w1, w1
    7ad4:	mov	x2, x1
    7ad8:	mov	w1, #0x0                   	// #0
    7adc:	bl	24a0 <memset@plt>
    7ae0:	ldr	x0, [sp, #24]
    7ae4:	ldr	x1, [x0, #5944]
    7ae8:	ldr	x0, [sp, #48]
    7aec:	add	x1, x1, x0
    7af0:	ldr	x0, [sp, #24]
    7af4:	str	x1, [x0, #5944]
    7af8:	nop
    7afc:	ldp	x29, x30, [sp], #64
    7b00:	ret
    7b04:	stp	x29, x30, [sp, #-64]!
    7b08:	mov	x29, sp
    7b0c:	str	x0, [sp, #24]
    7b10:	str	w1, [sp, #20]
    7b14:	ldr	x0, [sp, #24]
    7b18:	ldr	x0, [x0, #24]
    7b1c:	sub	x1, x0, #0x5
    7b20:	ldr	x0, [sp, #24]
    7b24:	ldr	w0, [x0, #80]
    7b28:	mov	w0, w0
    7b2c:	cmp	x1, x0
    7b30:	csel	x0, x1, x0, ls  // ls = plast
    7b34:	str	w0, [sp, #44]
    7b38:	str	wzr, [sp, #48]
    7b3c:	ldr	x0, [sp, #24]
    7b40:	ldr	x0, [x0]
    7b44:	ldr	w0, [x0, #8]
    7b48:	str	w0, [sp, #40]
    7b4c:	mov	w0, #0xffff                	// #65535
    7b50:	str	w0, [sp, #60]
    7b54:	ldr	x0, [sp, #24]
    7b58:	ldr	w0, [x0, #5940]
    7b5c:	add	w0, w0, #0x2a
    7b60:	asr	w0, w0, #3
    7b64:	str	w0, [sp, #52]
    7b68:	ldr	x0, [sp, #24]
    7b6c:	ldr	x0, [x0]
    7b70:	ldr	w0, [x0, #32]
    7b74:	ldr	w1, [sp, #52]
    7b78:	cmp	w1, w0
    7b7c:	b.hi	7edc <deflateCopy@@Base+0x1194>  // b.pmore
    7b80:	ldr	x0, [sp, #24]
    7b84:	ldr	x0, [x0]
    7b88:	ldr	w1, [x0, #32]
    7b8c:	ldr	w0, [sp, #52]
    7b90:	sub	w0, w1, w0
    7b94:	str	w0, [sp, #52]
    7b98:	ldr	x0, [sp, #24]
    7b9c:	ldr	w0, [x0, #172]
    7ba0:	ldr	x1, [sp, #24]
    7ba4:	ldr	x1, [x1, #152]
    7ba8:	sub	w0, w0, w1
    7bac:	str	w0, [sp, #56]
    7bb0:	ldr	w1, [sp, #60]
    7bb4:	ldr	w2, [sp, #56]
    7bb8:	ldr	x0, [sp, #24]
    7bbc:	ldr	x0, [x0]
    7bc0:	ldr	w0, [x0, #8]
    7bc4:	mov	w0, w0
    7bc8:	add	x0, x2, x0
    7bcc:	cmp	x1, x0
    7bd0:	b.ls	7bec <deflateCopy@@Base+0xea4>  // b.plast
    7bd4:	ldr	x0, [sp, #24]
    7bd8:	ldr	x0, [x0]
    7bdc:	ldr	w0, [x0, #8]
    7be0:	ldr	w1, [sp, #56]
    7be4:	add	w0, w1, w0
    7be8:	str	w0, [sp, #60]
    7bec:	ldr	w1, [sp, #60]
    7bf0:	ldr	w0, [sp, #52]
    7bf4:	cmp	w1, w0
    7bf8:	b.ls	7c04 <deflateCopy@@Base+0xebc>  // b.plast
    7bfc:	ldr	w0, [sp, #52]
    7c00:	str	w0, [sp, #60]
    7c04:	ldr	w1, [sp, #60]
    7c08:	ldr	w0, [sp, #44]
    7c0c:	cmp	w1, w0
    7c10:	b.cs	7c58 <deflateCopy@@Base+0xf10>  // b.hs, b.nlast
    7c14:	ldr	w0, [sp, #60]
    7c18:	cmp	w0, #0x0
    7c1c:	b.ne	7c2c <deflateCopy@@Base+0xee4>  // b.any
    7c20:	ldr	w0, [sp, #20]
    7c24:	cmp	w0, #0x4
    7c28:	b.ne	7ee0 <deflateCopy@@Base+0x1198>  // b.any
    7c2c:	ldr	w0, [sp, #20]
    7c30:	cmp	w0, #0x0
    7c34:	b.eq	7ee0 <deflateCopy@@Base+0x1198>  // b.none
    7c38:	ldr	x0, [sp, #24]
    7c3c:	ldr	x0, [x0]
    7c40:	ldr	w1, [x0, #8]
    7c44:	ldr	w0, [sp, #56]
    7c48:	add	w0, w1, w0
    7c4c:	ldr	w1, [sp, #60]
    7c50:	cmp	w1, w0
    7c54:	b.ne	7ee0 <deflateCopy@@Base+0x1198>  // b.any
    7c58:	ldr	w0, [sp, #20]
    7c5c:	cmp	w0, #0x4
    7c60:	b.ne	7c8c <deflateCopy@@Base+0xf44>  // b.any
    7c64:	ldr	x0, [sp, #24]
    7c68:	ldr	x0, [x0]
    7c6c:	ldr	w1, [x0, #8]
    7c70:	ldr	w0, [sp, #56]
    7c74:	add	w0, w1, w0
    7c78:	ldr	w1, [sp, #60]
    7c7c:	cmp	w1, w0
    7c80:	b.ne	7c8c <deflateCopy@@Base+0xf44>  // b.any
    7c84:	mov	w0, #0x1                   	// #1
    7c88:	b	7c90 <deflateCopy@@Base+0xf48>
    7c8c:	mov	w0, #0x0                   	// #0
    7c90:	str	w0, [sp, #48]
    7c94:	ldr	w0, [sp, #48]
    7c98:	mov	w3, w0
    7c9c:	mov	x2, #0x0                   	// #0
    7ca0:	mov	x1, #0x0                   	// #0
    7ca4:	ldr	x0, [sp, #24]
    7ca8:	bl	13994 <inflateCodesUsed@@ZLIB_1.2.9+0x2fa4>
    7cac:	ldr	x0, [sp, #24]
    7cb0:	ldr	x1, [x0, #16]
    7cb4:	ldr	x0, [sp, #24]
    7cb8:	ldr	x0, [x0, #40]
    7cbc:	sub	x0, x0, #0x4
    7cc0:	add	x0, x1, x0
    7cc4:	ldr	w1, [sp, #60]
    7cc8:	and	w1, w1, #0xff
    7ccc:	strb	w1, [x0]
    7cd0:	ldr	w0, [sp, #60]
    7cd4:	lsr	w2, w0, #8
    7cd8:	ldr	x0, [sp, #24]
    7cdc:	ldr	x1, [x0, #16]
    7ce0:	ldr	x0, [sp, #24]
    7ce4:	ldr	x0, [x0, #40]
    7ce8:	sub	x0, x0, #0x3
    7cec:	add	x0, x1, x0
    7cf0:	and	w1, w2, #0xff
    7cf4:	strb	w1, [x0]
    7cf8:	ldr	w0, [sp, #60]
    7cfc:	and	w1, w0, #0xff
    7d00:	ldr	x0, [sp, #24]
    7d04:	ldr	x2, [x0, #16]
    7d08:	ldr	x0, [sp, #24]
    7d0c:	ldr	x0, [x0, #40]
    7d10:	sub	x0, x0, #0x2
    7d14:	add	x0, x2, x0
    7d18:	mvn	w1, w1
    7d1c:	and	w1, w1, #0xff
    7d20:	strb	w1, [x0]
    7d24:	ldr	w0, [sp, #60]
    7d28:	mvn	w0, w0
    7d2c:	lsr	w2, w0, #8
    7d30:	ldr	x0, [sp, #24]
    7d34:	ldr	x1, [x0, #16]
    7d38:	ldr	x0, [sp, #24]
    7d3c:	ldr	x0, [x0, #40]
    7d40:	sub	x0, x0, #0x1
    7d44:	add	x0, x1, x0
    7d48:	and	w1, w2, #0xff
    7d4c:	strb	w1, [x0]
    7d50:	ldr	x0, [sp, #24]
    7d54:	ldr	x0, [x0]
    7d58:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    7d5c:	ldr	w0, [sp, #56]
    7d60:	cmp	w0, #0x0
    7d64:	b.eq	7e3c <deflateCopy@@Base+0x10f4>  // b.none
    7d68:	ldr	w1, [sp, #56]
    7d6c:	ldr	w0, [sp, #60]
    7d70:	cmp	w1, w0
    7d74:	b.ls	7d80 <deflateCopy@@Base+0x1038>  // b.plast
    7d78:	ldr	w0, [sp, #60]
    7d7c:	str	w0, [sp, #56]
    7d80:	ldr	x0, [sp, #24]
    7d84:	ldr	x0, [x0]
    7d88:	ldr	x3, [x0, #24]
    7d8c:	ldr	x0, [sp, #24]
    7d90:	ldr	x0, [x0, #96]
    7d94:	ldr	x1, [sp, #24]
    7d98:	ldr	x1, [x1, #152]
    7d9c:	add	x0, x0, x1
    7da0:	ldr	w1, [sp, #56]
    7da4:	mov	x2, x1
    7da8:	mov	x1, x0
    7dac:	mov	x0, x3
    7db0:	bl	23a0 <memcpy@plt>
    7db4:	ldr	x0, [sp, #24]
    7db8:	ldr	x0, [x0]
    7dbc:	ldr	x2, [x0, #24]
    7dc0:	ldr	w1, [sp, #56]
    7dc4:	ldr	x0, [sp, #24]
    7dc8:	ldr	x0, [x0]
    7dcc:	add	x1, x2, x1
    7dd0:	str	x1, [x0, #24]
    7dd4:	ldr	x0, [sp, #24]
    7dd8:	ldr	x0, [x0]
    7ddc:	ldr	w2, [x0, #32]
    7de0:	ldr	x0, [sp, #24]
    7de4:	ldr	x0, [x0]
    7de8:	ldr	w1, [sp, #56]
    7dec:	sub	w1, w2, w1
    7df0:	str	w1, [x0, #32]
    7df4:	ldr	x0, [sp, #24]
    7df8:	ldr	x0, [x0]
    7dfc:	ldr	x2, [x0, #40]
    7e00:	ldr	w1, [sp, #56]
    7e04:	ldr	x0, [sp, #24]
    7e08:	ldr	x0, [x0]
    7e0c:	add	x1, x2, x1
    7e10:	str	x1, [x0, #40]
    7e14:	ldr	x0, [sp, #24]
    7e18:	ldr	x1, [x0, #152]
    7e1c:	ldr	w0, [sp, #56]
    7e20:	add	x1, x1, x0
    7e24:	ldr	x0, [sp, #24]
    7e28:	str	x1, [x0, #152]
    7e2c:	ldr	w1, [sp, #60]
    7e30:	ldr	w0, [sp, #56]
    7e34:	sub	w0, w1, w0
    7e38:	str	w0, [sp, #60]
    7e3c:	ldr	w0, [sp, #60]
    7e40:	cmp	w0, #0x0
    7e44:	b.eq	7ecc <deflateCopy@@Base+0x1184>  // b.none
    7e48:	ldr	x0, [sp, #24]
    7e4c:	ldr	x3, [x0]
    7e50:	ldr	x0, [sp, #24]
    7e54:	ldr	x0, [x0]
    7e58:	ldr	x0, [x0, #24]
    7e5c:	ldr	w2, [sp, #60]
    7e60:	mov	x1, x0
    7e64:	mov	x0, x3
    7e68:	bl	7078 <deflateCopy@@Base+0x330>
    7e6c:	ldr	x0, [sp, #24]
    7e70:	ldr	x0, [x0]
    7e74:	ldr	x2, [x0, #24]
    7e78:	ldr	w1, [sp, #60]
    7e7c:	ldr	x0, [sp, #24]
    7e80:	ldr	x0, [x0]
    7e84:	add	x1, x2, x1
    7e88:	str	x1, [x0, #24]
    7e8c:	ldr	x0, [sp, #24]
    7e90:	ldr	x0, [x0]
    7e94:	ldr	w2, [x0, #32]
    7e98:	ldr	x0, [sp, #24]
    7e9c:	ldr	x0, [x0]
    7ea0:	ldr	w1, [sp, #60]
    7ea4:	sub	w1, w2, w1
    7ea8:	str	w1, [x0, #32]
    7eac:	ldr	x0, [sp, #24]
    7eb0:	ldr	x0, [x0]
    7eb4:	ldr	x2, [x0, #40]
    7eb8:	ldr	w1, [sp, #60]
    7ebc:	ldr	x0, [sp, #24]
    7ec0:	ldr	x0, [x0]
    7ec4:	add	x1, x2, x1
    7ec8:	str	x1, [x0, #40]
    7ecc:	ldr	w0, [sp, #48]
    7ed0:	cmp	w0, #0x0
    7ed4:	b.eq	7b4c <deflateCopy@@Base+0xe04>  // b.none
    7ed8:	b	7ee0 <deflateCopy@@Base+0x1198>
    7edc:	nop
    7ee0:	ldr	x0, [sp, #24]
    7ee4:	ldr	x0, [x0]
    7ee8:	ldr	w0, [x0, #8]
    7eec:	ldr	w1, [sp, #40]
    7ef0:	sub	w0, w1, w0
    7ef4:	str	w0, [sp, #40]
    7ef8:	ldr	w0, [sp, #40]
    7efc:	cmp	w0, #0x0
    7f00:	b.eq	80bc <deflateCopy@@Base+0x1374>  // b.none
    7f04:	ldr	x0, [sp, #24]
    7f08:	ldr	w0, [x0, #80]
    7f0c:	ldr	w1, [sp, #40]
    7f10:	cmp	w1, w0
    7f14:	b.cc	7f78 <deflateCopy@@Base+0x1230>  // b.lo, b.ul, b.last
    7f18:	ldr	x0, [sp, #24]
    7f1c:	mov	w1, #0x2                   	// #2
    7f20:	str	w1, [x0, #5928]
    7f24:	ldr	x0, [sp, #24]
    7f28:	ldr	x3, [x0, #96]
    7f2c:	ldr	x0, [sp, #24]
    7f30:	ldr	x0, [x0]
    7f34:	ldr	x1, [x0]
    7f38:	ldr	x0, [sp, #24]
    7f3c:	ldr	w0, [x0, #80]
    7f40:	mov	w0, w0
    7f44:	neg	x0, x0
    7f48:	add	x1, x1, x0
    7f4c:	ldr	x0, [sp, #24]
    7f50:	ldr	w0, [x0, #80]
    7f54:	mov	w0, w0
    7f58:	mov	x2, x0
    7f5c:	mov	x0, x3
    7f60:	bl	23a0 <memcpy@plt>
    7f64:	ldr	x0, [sp, #24]
    7f68:	ldr	w1, [x0, #80]
    7f6c:	ldr	x0, [sp, #24]
    7f70:	str	w1, [x0, #172]
    7f74:	b	8070 <deflateCopy@@Base+0x1328>
    7f78:	ldr	x0, [sp, #24]
    7f7c:	ldr	x1, [x0, #104]
    7f80:	ldr	x0, [sp, #24]
    7f84:	ldr	w0, [x0, #172]
    7f88:	mov	w0, w0
    7f8c:	sub	x1, x1, x0
    7f90:	ldr	w0, [sp, #40]
    7f94:	cmp	x1, x0
    7f98:	b.hi	8014 <deflateCopy@@Base+0x12cc>  // b.pmore
    7f9c:	ldr	x0, [sp, #24]
    7fa0:	ldr	w1, [x0, #172]
    7fa4:	ldr	x0, [sp, #24]
    7fa8:	ldr	w0, [x0, #80]
    7fac:	sub	w1, w1, w0
    7fb0:	ldr	x0, [sp, #24]
    7fb4:	str	w1, [x0, #172]
    7fb8:	ldr	x0, [sp, #24]
    7fbc:	ldr	x3, [x0, #96]
    7fc0:	ldr	x0, [sp, #24]
    7fc4:	ldr	x1, [x0, #96]
    7fc8:	ldr	x0, [sp, #24]
    7fcc:	ldr	w0, [x0, #80]
    7fd0:	mov	w0, w0
    7fd4:	add	x1, x1, x0
    7fd8:	ldr	x0, [sp, #24]
    7fdc:	ldr	w0, [x0, #172]
    7fe0:	mov	w0, w0
    7fe4:	mov	x2, x0
    7fe8:	mov	x0, x3
    7fec:	bl	23a0 <memcpy@plt>
    7ff0:	ldr	x0, [sp, #24]
    7ff4:	ldr	w0, [x0, #5928]
    7ff8:	cmp	w0, #0x1
    7ffc:	b.hi	8014 <deflateCopy@@Base+0x12cc>  // b.pmore
    8000:	ldr	x0, [sp, #24]
    8004:	ldr	w0, [x0, #5928]
    8008:	add	w1, w0, #0x1
    800c:	ldr	x0, [sp, #24]
    8010:	str	w1, [x0, #5928]
    8014:	ldr	x0, [sp, #24]
    8018:	ldr	x1, [x0, #96]
    801c:	ldr	x0, [sp, #24]
    8020:	ldr	w0, [x0, #172]
    8024:	mov	w0, w0
    8028:	add	x3, x1, x0
    802c:	ldr	x0, [sp, #24]
    8030:	ldr	x0, [x0]
    8034:	ldr	x1, [x0]
    8038:	ldr	w0, [sp, #40]
    803c:	neg	x0, x0
    8040:	add	x0, x1, x0
    8044:	ldr	w1, [sp, #40]
    8048:	mov	x2, x1
    804c:	mov	x1, x0
    8050:	mov	x0, x3
    8054:	bl	23a0 <memcpy@plt>
    8058:	ldr	x0, [sp, #24]
    805c:	ldr	w1, [x0, #172]
    8060:	ldr	w0, [sp, #40]
    8064:	add	w1, w1, w0
    8068:	ldr	x0, [sp, #24]
    806c:	str	w1, [x0, #172]
    8070:	ldr	x0, [sp, #24]
    8074:	ldr	w0, [x0, #172]
    8078:	mov	w1, w0
    807c:	ldr	x0, [sp, #24]
    8080:	str	x1, [x0, #152]
    8084:	ldr	x0, [sp, #24]
    8088:	ldr	w1, [x0, #5932]
    808c:	ldr	x0, [sp, #24]
    8090:	ldr	w2, [x0, #80]
    8094:	ldr	x0, [sp, #24]
    8098:	ldr	w0, [x0, #5932]
    809c:	sub	w0, w2, w0
    80a0:	ldr	w3, [sp, #40]
    80a4:	ldr	w2, [sp, #40]
    80a8:	cmp	w3, w0
    80ac:	csel	w0, w2, w0, ls  // ls = plast
    80b0:	add	w1, w1, w0
    80b4:	ldr	x0, [sp, #24]
    80b8:	str	w1, [x0, #5932]
    80bc:	ldr	x0, [sp, #24]
    80c0:	ldr	x1, [x0, #5944]
    80c4:	ldr	x0, [sp, #24]
    80c8:	ldr	w0, [x0, #172]
    80cc:	mov	w0, w0
    80d0:	cmp	x1, x0
    80d4:	b.cs	80ec <deflateCopy@@Base+0x13a4>  // b.hs, b.nlast
    80d8:	ldr	x0, [sp, #24]
    80dc:	ldr	w0, [x0, #172]
    80e0:	mov	w1, w0
    80e4:	ldr	x0, [sp, #24]
    80e8:	str	x1, [x0, #5944]
    80ec:	ldr	w0, [sp, #48]
    80f0:	cmp	w0, #0x0
    80f4:	b.eq	8100 <deflateCopy@@Base+0x13b8>  // b.none
    80f8:	mov	w0, #0x3                   	// #3
    80fc:	b	8484 <deflateCopy@@Base+0x173c>
    8100:	ldr	w0, [sp, #20]
    8104:	cmp	w0, #0x0
    8108:	b.eq	8150 <deflateCopy@@Base+0x1408>  // b.none
    810c:	ldr	w0, [sp, #20]
    8110:	cmp	w0, #0x4
    8114:	b.eq	8150 <deflateCopy@@Base+0x1408>  // b.none
    8118:	ldr	x0, [sp, #24]
    811c:	ldr	x0, [x0]
    8120:	ldr	w0, [x0, #8]
    8124:	cmp	w0, #0x0
    8128:	b.ne	8150 <deflateCopy@@Base+0x1408>  // b.any
    812c:	ldr	x0, [sp, #24]
    8130:	ldr	w0, [x0, #172]
    8134:	mov	w1, w0
    8138:	ldr	x0, [sp, #24]
    813c:	ldr	x0, [x0, #152]
    8140:	cmp	x1, x0
    8144:	b.ne	8150 <deflateCopy@@Base+0x1408>  // b.any
    8148:	mov	w0, #0x1                   	// #1
    814c:	b	8484 <deflateCopy@@Base+0x173c>
    8150:	ldr	x0, [sp, #24]
    8154:	ldr	x0, [x0, #104]
    8158:	mov	w1, w0
    815c:	ldr	x0, [sp, #24]
    8160:	ldr	w0, [x0, #172]
    8164:	sub	w0, w1, w0
    8168:	sub	w0, w0, #0x1
    816c:	str	w0, [sp, #52]
    8170:	ldr	x0, [sp, #24]
    8174:	ldr	x0, [x0]
    8178:	ldr	w0, [x0, #8]
    817c:	ldr	w1, [sp, #52]
    8180:	cmp	w1, w0
    8184:	b.cs	8250 <deflateCopy@@Base+0x1508>  // b.hs, b.nlast
    8188:	ldr	x0, [sp, #24]
    818c:	ldr	x1, [x0, #152]
    8190:	ldr	x0, [sp, #24]
    8194:	ldr	w0, [x0, #80]
    8198:	mov	w0, w0
    819c:	cmp	x1, x0
    81a0:	b.lt	8250 <deflateCopy@@Base+0x1508>  // b.tstop
    81a4:	ldr	x0, [sp, #24]
    81a8:	ldr	x1, [x0, #152]
    81ac:	ldr	x0, [sp, #24]
    81b0:	ldr	w0, [x0, #80]
    81b4:	mov	w0, w0
    81b8:	sub	x1, x1, x0
    81bc:	ldr	x0, [sp, #24]
    81c0:	str	x1, [x0, #152]
    81c4:	ldr	x0, [sp, #24]
    81c8:	ldr	w1, [x0, #172]
    81cc:	ldr	x0, [sp, #24]
    81d0:	ldr	w0, [x0, #80]
    81d4:	sub	w1, w1, w0
    81d8:	ldr	x0, [sp, #24]
    81dc:	str	w1, [x0, #172]
    81e0:	ldr	x0, [sp, #24]
    81e4:	ldr	x3, [x0, #96]
    81e8:	ldr	x0, [sp, #24]
    81ec:	ldr	x1, [x0, #96]
    81f0:	ldr	x0, [sp, #24]
    81f4:	ldr	w0, [x0, #80]
    81f8:	mov	w0, w0
    81fc:	add	x1, x1, x0
    8200:	ldr	x0, [sp, #24]
    8204:	ldr	w0, [x0, #172]
    8208:	mov	w0, w0
    820c:	mov	x2, x0
    8210:	mov	x0, x3
    8214:	bl	23a0 <memcpy@plt>
    8218:	ldr	x0, [sp, #24]
    821c:	ldr	w0, [x0, #5928]
    8220:	cmp	w0, #0x1
    8224:	b.hi	823c <deflateCopy@@Base+0x14f4>  // b.pmore
    8228:	ldr	x0, [sp, #24]
    822c:	ldr	w0, [x0, #5928]
    8230:	add	w1, w0, #0x1
    8234:	ldr	x0, [sp, #24]
    8238:	str	w1, [x0, #5928]
    823c:	ldr	x0, [sp, #24]
    8240:	ldr	w0, [x0, #80]
    8244:	ldr	w1, [sp, #52]
    8248:	add	w0, w1, w0
    824c:	str	w0, [sp, #52]
    8250:	ldr	x0, [sp, #24]
    8254:	ldr	x0, [x0]
    8258:	ldr	w0, [x0, #8]
    825c:	ldr	w1, [sp, #52]
    8260:	cmp	w1, w0
    8264:	b.ls	8278 <deflateCopy@@Base+0x1530>  // b.plast
    8268:	ldr	x0, [sp, #24]
    826c:	ldr	x0, [x0]
    8270:	ldr	w0, [x0, #8]
    8274:	str	w0, [sp, #52]
    8278:	ldr	w0, [sp, #52]
    827c:	cmp	w0, #0x0
    8280:	b.eq	82cc <deflateCopy@@Base+0x1584>  // b.none
    8284:	ldr	x0, [sp, #24]
    8288:	ldr	x3, [x0]
    828c:	ldr	x0, [sp, #24]
    8290:	ldr	x1, [x0, #96]
    8294:	ldr	x0, [sp, #24]
    8298:	ldr	w0, [x0, #172]
    829c:	mov	w0, w0
    82a0:	add	x0, x1, x0
    82a4:	ldr	w2, [sp, #52]
    82a8:	mov	x1, x0
    82ac:	mov	x0, x3
    82b0:	bl	7078 <deflateCopy@@Base+0x330>
    82b4:	ldr	x0, [sp, #24]
    82b8:	ldr	w1, [x0, #172]
    82bc:	ldr	w0, [sp, #52]
    82c0:	add	w1, w1, w0
    82c4:	ldr	x0, [sp, #24]
    82c8:	str	w1, [x0, #172]
    82cc:	ldr	x0, [sp, #24]
    82d0:	ldr	x1, [x0, #5944]
    82d4:	ldr	x0, [sp, #24]
    82d8:	ldr	w0, [x0, #172]
    82dc:	mov	w0, w0
    82e0:	cmp	x1, x0
    82e4:	b.cs	82fc <deflateCopy@@Base+0x15b4>  // b.hs, b.nlast
    82e8:	ldr	x0, [sp, #24]
    82ec:	ldr	w0, [x0, #172]
    82f0:	mov	w1, w0
    82f4:	ldr	x0, [sp, #24]
    82f8:	str	x1, [x0, #5944]
    82fc:	ldr	x0, [sp, #24]
    8300:	ldr	w0, [x0, #5940]
    8304:	add	w0, w0, #0x2a
    8308:	asr	w0, w0, #3
    830c:	str	w0, [sp, #52]
    8310:	ldr	x0, [sp, #24]
    8314:	ldr	x1, [x0, #24]
    8318:	ldr	w0, [sp, #52]
    831c:	sub	x0, x1, x0
    8320:	mov	x2, #0xffff                	// #65535
    8324:	mov	x1, #0xffff                	// #65535
    8328:	cmp	x0, x2
    832c:	csel	x0, x0, x1, ls  // ls = plast
    8330:	str	w0, [sp, #52]
    8334:	ldr	x0, [sp, #24]
    8338:	ldr	w0, [x0, #80]
    833c:	ldr	w2, [sp, #52]
    8340:	ldr	w1, [sp, #52]
    8344:	cmp	w2, w0
    8348:	csel	w0, w1, w0, ls  // ls = plast
    834c:	str	w0, [sp, #44]
    8350:	ldr	x0, [sp, #24]
    8354:	ldr	w0, [x0, #172]
    8358:	ldr	x1, [sp, #24]
    835c:	ldr	x1, [x1, #152]
    8360:	sub	w0, w0, w1
    8364:	str	w0, [sp, #56]
    8368:	ldr	w1, [sp, #56]
    836c:	ldr	w0, [sp, #44]
    8370:	cmp	w1, w0
    8374:	b.cs	83c0 <deflateCopy@@Base+0x1678>  // b.hs, b.nlast
    8378:	ldr	w0, [sp, #56]
    837c:	cmp	w0, #0x0
    8380:	b.ne	8390 <deflateCopy@@Base+0x1648>  // b.any
    8384:	ldr	w0, [sp, #20]
    8388:	cmp	w0, #0x4
    838c:	b.ne	846c <deflateCopy@@Base+0x1724>  // b.any
    8390:	ldr	w0, [sp, #20]
    8394:	cmp	w0, #0x0
    8398:	b.eq	846c <deflateCopy@@Base+0x1724>  // b.none
    839c:	ldr	x0, [sp, #24]
    83a0:	ldr	x0, [x0]
    83a4:	ldr	w0, [x0, #8]
    83a8:	cmp	w0, #0x0
    83ac:	b.ne	846c <deflateCopy@@Base+0x1724>  // b.any
    83b0:	ldr	w1, [sp, #56]
    83b4:	ldr	w0, [sp, #52]
    83b8:	cmp	w1, w0
    83bc:	b.hi	846c <deflateCopy@@Base+0x1724>  // b.pmore
    83c0:	ldr	w0, [sp, #52]
    83c4:	ldr	w2, [sp, #56]
    83c8:	ldr	w1, [sp, #56]
    83cc:	cmp	w2, w0
    83d0:	csel	w0, w1, w0, ls  // ls = plast
    83d4:	str	w0, [sp, #60]
    83d8:	ldr	w0, [sp, #20]
    83dc:	cmp	w0, #0x4
    83e0:	b.ne	8410 <deflateCopy@@Base+0x16c8>  // b.any
    83e4:	ldr	x0, [sp, #24]
    83e8:	ldr	x0, [x0]
    83ec:	ldr	w0, [x0, #8]
    83f0:	cmp	w0, #0x0
    83f4:	b.ne	8410 <deflateCopy@@Base+0x16c8>  // b.any
    83f8:	ldr	w1, [sp, #60]
    83fc:	ldr	w0, [sp, #56]
    8400:	cmp	w1, w0
    8404:	b.ne	8410 <deflateCopy@@Base+0x16c8>  // b.any
    8408:	mov	w0, #0x1                   	// #1
    840c:	b	8414 <deflateCopy@@Base+0x16cc>
    8410:	mov	w0, #0x0                   	// #0
    8414:	str	w0, [sp, #48]
    8418:	ldr	x0, [sp, #24]
    841c:	ldr	x0, [x0, #96]
    8420:	ldr	x1, [sp, #24]
    8424:	ldr	x1, [x1, #152]
    8428:	add	x0, x0, x1
    842c:	ldr	w1, [sp, #60]
    8430:	ldr	w2, [sp, #48]
    8434:	mov	w3, w2
    8438:	mov	x2, x1
    843c:	mov	x1, x0
    8440:	ldr	x0, [sp, #24]
    8444:	bl	13994 <inflateCodesUsed@@ZLIB_1.2.9+0x2fa4>
    8448:	ldr	x0, [sp, #24]
    844c:	ldr	x1, [x0, #152]
    8450:	ldr	w0, [sp, #60]
    8454:	add	x1, x1, x0
    8458:	ldr	x0, [sp, #24]
    845c:	str	x1, [x0, #152]
    8460:	ldr	x0, [sp, #24]
    8464:	ldr	x0, [x0]
    8468:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    846c:	ldr	w0, [sp, #48]
    8470:	cmp	w0, #0x0
    8474:	b.eq	8480 <deflateCopy@@Base+0x1738>  // b.none
    8478:	mov	w0, #0x2                   	// #2
    847c:	b	8484 <deflateCopy@@Base+0x173c>
    8480:	mov	w0, #0x0                   	// #0
    8484:	ldp	x29, x30, [sp], #64
    8488:	ret
    848c:	stp	x29, x30, [sp, #-48]!
    8490:	mov	x29, sp
    8494:	str	x0, [sp, #24]
    8498:	str	w1, [sp, #20]
    849c:	ldr	x0, [sp, #24]
    84a0:	ldr	w0, [x0, #180]
    84a4:	cmp	w0, #0x105
    84a8:	b.hi	84e8 <deflateCopy@@Base+0x17a0>  // b.pmore
    84ac:	ldr	x0, [sp, #24]
    84b0:	bl	765c <deflateCopy@@Base+0x914>
    84b4:	ldr	x0, [sp, #24]
    84b8:	ldr	w0, [x0, #180]
    84bc:	cmp	w0, #0x105
    84c0:	b.hi	84d8 <deflateCopy@@Base+0x1790>  // b.pmore
    84c4:	ldr	w0, [sp, #20]
    84c8:	cmp	w0, #0x0
    84cc:	b.ne	84d8 <deflateCopy@@Base+0x1790>  // b.any
    84d0:	mov	w0, #0x0                   	// #0
    84d4:	b	8cd4 <deflateCopy@@Base+0x1f8c>
    84d8:	ldr	x0, [sp, #24]
    84dc:	ldr	w0, [x0, #180]
    84e0:	cmp	w0, #0x0
    84e4:	b.eq	8b5c <deflateCopy@@Base+0x1e14>  // b.none
    84e8:	str	wzr, [sp, #44]
    84ec:	ldr	x0, [sp, #24]
    84f0:	ldr	w0, [x0, #180]
    84f4:	cmp	w0, #0x2
    84f8:	b.ls	85c8 <deflateCopy@@Base+0x1880>  // b.plast
    84fc:	ldr	x0, [sp, #24]
    8500:	ldr	w1, [x0, #128]
    8504:	ldr	x0, [sp, #24]
    8508:	ldr	w0, [x0, #144]
    850c:	lsl	w0, w1, w0
    8510:	ldr	x1, [sp, #24]
    8514:	ldr	x2, [x1, #96]
    8518:	ldr	x1, [sp, #24]
    851c:	ldr	w1, [x1, #172]
    8520:	add	w1, w1, #0x2
    8524:	mov	w1, w1
    8528:	add	x1, x2, x1
    852c:	ldrb	w1, [x1]
    8530:	eor	w1, w0, w1
    8534:	ldr	x0, [sp, #24]
    8538:	ldr	w0, [x0, #140]
    853c:	and	w1, w1, w0
    8540:	ldr	x0, [sp, #24]
    8544:	str	w1, [x0, #128]
    8548:	ldr	x0, [sp, #24]
    854c:	ldr	x1, [x0, #120]
    8550:	ldr	x0, [sp, #24]
    8554:	ldr	w0, [x0, #128]
    8558:	mov	w0, w0
    855c:	lsl	x0, x0, #1
    8560:	add	x1, x1, x0
    8564:	ldr	x0, [sp, #24]
    8568:	ldr	x2, [x0, #112]
    856c:	ldr	x0, [sp, #24]
    8570:	ldr	w3, [x0, #172]
    8574:	ldr	x0, [sp, #24]
    8578:	ldr	w0, [x0, #88]
    857c:	and	w0, w3, w0
    8580:	mov	w0, w0
    8584:	lsl	x0, x0, #1
    8588:	add	x0, x2, x0
    858c:	ldrh	w1, [x1]
    8590:	strh	w1, [x0]
    8594:	ldrh	w0, [x0]
    8598:	str	w0, [sp, #44]
    859c:	ldr	x0, [sp, #24]
    85a0:	ldr	w2, [x0, #172]
    85a4:	ldr	x0, [sp, #24]
    85a8:	ldr	x1, [x0, #120]
    85ac:	ldr	x0, [sp, #24]
    85b0:	ldr	w0, [x0, #128]
    85b4:	mov	w0, w0
    85b8:	lsl	x0, x0, #1
    85bc:	add	x0, x1, x0
    85c0:	and	w1, w2, #0xffff
    85c4:	strh	w1, [x0]
    85c8:	ldr	w0, [sp, #44]
    85cc:	cmp	w0, #0x0
    85d0:	b.eq	8610 <deflateCopy@@Base+0x18c8>  // b.none
    85d4:	ldr	x0, [sp, #24]
    85d8:	ldr	w1, [x0, #172]
    85dc:	ldr	w0, [sp, #44]
    85e0:	sub	w1, w1, w0
    85e4:	ldr	x0, [sp, #24]
    85e8:	ldr	w0, [x0, #80]
    85ec:	sub	w0, w0, #0x106
    85f0:	cmp	w1, w0
    85f4:	b.hi	8610 <deflateCopy@@Base+0x18c8>  // b.pmore
    85f8:	ldr	w1, [sp, #44]
    85fc:	ldr	x0, [sp, #24]
    8600:	bl	731c <deflateCopy@@Base+0x5d4>
    8604:	mov	w1, w0
    8608:	ldr	x0, [sp, #24]
    860c:	str	w1, [x0, #160]
    8610:	ldr	x0, [sp, #24]
    8614:	ldr	w0, [x0, #160]
    8618:	cmp	w0, #0x2
    861c:	b.ls	89c0 <deflateCopy@@Base+0x1c78>  // b.plast
    8620:	ldr	x0, [sp, #24]
    8624:	ldr	w0, [x0, #160]
    8628:	and	w0, w0, #0xff
    862c:	sub	w0, w0, #0x3
    8630:	strb	w0, [sp, #38]
    8634:	ldr	x0, [sp, #24]
    8638:	ldr	w0, [x0, #172]
    863c:	and	w1, w0, #0xffff
    8640:	ldr	x0, [sp, #24]
    8644:	ldr	w0, [x0, #176]
    8648:	and	w0, w0, #0xffff
    864c:	sub	w0, w1, w0
    8650:	strh	w0, [sp, #36]
    8654:	ldr	x0, [sp, #24]
    8658:	ldr	x1, [x0, #5904]
    865c:	ldr	x0, [sp, #24]
    8660:	ldr	w0, [x0, #5900]
    8664:	mov	w0, w0
    8668:	lsl	x0, x0, #1
    866c:	add	x0, x1, x0
    8670:	ldrh	w1, [sp, #36]
    8674:	strh	w1, [x0]
    8678:	ldr	x0, [sp, #24]
    867c:	ldr	x1, [x0, #5888]
    8680:	ldr	x0, [sp, #24]
    8684:	ldr	w0, [x0, #5900]
    8688:	add	w3, w0, #0x1
    868c:	ldr	x2, [sp, #24]
    8690:	str	w3, [x2, #5900]
    8694:	mov	w0, w0
    8698:	add	x0, x1, x0
    869c:	ldrb	w1, [sp, #38]
    86a0:	strb	w1, [x0]
    86a4:	ldrh	w0, [sp, #36]
    86a8:	sub	w0, w0, #0x1
    86ac:	strh	w0, [sp, #36]
    86b0:	ldrb	w2, [sp, #38]
    86b4:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    86b8:	add	x1, x0, #0xf18
    86bc:	sxtw	x0, w2
    86c0:	ldrb	w0, [x1, x0]
    86c4:	add	w2, w0, #0x101
    86c8:	ldr	x1, [sp, #24]
    86cc:	sxtw	x0, w2
    86d0:	add	x0, x0, #0x34
    86d4:	lsl	x0, x0, #2
    86d8:	add	x0, x1, x0
    86dc:	ldrh	w0, [x0, #4]
    86e0:	add	w0, w0, #0x1
    86e4:	and	w3, w0, #0xffff
    86e8:	ldr	x1, [sp, #24]
    86ec:	sxtw	x0, w2
    86f0:	add	x0, x0, #0x34
    86f4:	lsl	x0, x0, #2
    86f8:	add	x0, x1, x0
    86fc:	mov	w1, w3
    8700:	strh	w1, [x0, #4]
    8704:	ldrh	w0, [sp, #36]
    8708:	cmp	w0, #0xff
    870c:	b.hi	872c <deflateCopy@@Base+0x19e4>  // b.pmore
    8710:	ldrh	w2, [sp, #36]
    8714:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    8718:	add	x1, x0, #0xd18
    871c:	sxtw	x0, w2
    8720:	ldrb	w0, [x1, x0]
    8724:	mov	w2, w0
    8728:	b	8750 <deflateCopy@@Base+0x1a08>
    872c:	ldrh	w0, [sp, #36]
    8730:	lsr	w0, w0, #7
    8734:	and	w0, w0, #0xffff
    8738:	add	w2, w0, #0x100
    873c:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    8740:	add	x1, x0, #0xd18
    8744:	sxtw	x0, w2
    8748:	ldrb	w0, [x1, x0]
    874c:	mov	w2, w0
    8750:	ldr	x1, [sp, #24]
    8754:	sxtw	x0, w2
    8758:	add	x0, x0, #0x270
    875c:	lsl	x0, x0, #2
    8760:	add	x0, x1, x0
    8764:	ldrh	w0, [x0, #8]
    8768:	add	w0, w0, #0x1
    876c:	and	w3, w0, #0xffff
    8770:	ldr	x1, [sp, #24]
    8774:	sxtw	x0, w2
    8778:	add	x0, x0, #0x270
    877c:	lsl	x0, x0, #2
    8780:	add	x0, x1, x0
    8784:	mov	w1, w3
    8788:	strh	w1, [x0, #8]
    878c:	ldr	x0, [sp, #24]
    8790:	ldr	w1, [x0, #5900]
    8794:	ldr	x0, [sp, #24]
    8798:	ldr	w0, [x0, #5896]
    879c:	sub	w0, w0, #0x1
    87a0:	cmp	w1, w0
    87a4:	cset	w0, eq  // eq = none
    87a8:	and	w0, w0, #0xff
    87ac:	str	w0, [sp, #40]
    87b0:	ldr	x0, [sp, #24]
    87b4:	ldr	w1, [x0, #180]
    87b8:	ldr	x0, [sp, #24]
    87bc:	ldr	w0, [x0, #160]
    87c0:	sub	w1, w1, w0
    87c4:	ldr	x0, [sp, #24]
    87c8:	str	w1, [x0, #180]
    87cc:	ldr	x0, [sp, #24]
    87d0:	ldr	w1, [x0, #160]
    87d4:	ldr	x0, [sp, #24]
    87d8:	ldr	w0, [x0, #192]
    87dc:	cmp	w1, w0
    87e0:	b.hi	8924 <deflateCopy@@Base+0x1bdc>  // b.pmore
    87e4:	ldr	x0, [sp, #24]
    87e8:	ldr	w0, [x0, #180]
    87ec:	cmp	w0, #0x2
    87f0:	b.ls	8924 <deflateCopy@@Base+0x1bdc>  // b.plast
    87f4:	ldr	x0, [sp, #24]
    87f8:	ldr	w0, [x0, #160]
    87fc:	sub	w1, w0, #0x1
    8800:	ldr	x0, [sp, #24]
    8804:	str	w1, [x0, #160]
    8808:	ldr	x0, [sp, #24]
    880c:	ldr	w0, [x0, #172]
    8810:	add	w1, w0, #0x1
    8814:	ldr	x0, [sp, #24]
    8818:	str	w1, [x0, #172]
    881c:	ldr	x0, [sp, #24]
    8820:	ldr	w1, [x0, #128]
    8824:	ldr	x0, [sp, #24]
    8828:	ldr	w0, [x0, #144]
    882c:	lsl	w0, w1, w0
    8830:	ldr	x1, [sp, #24]
    8834:	ldr	x2, [x1, #96]
    8838:	ldr	x1, [sp, #24]
    883c:	ldr	w1, [x1, #172]
    8840:	add	w1, w1, #0x2
    8844:	mov	w1, w1
    8848:	add	x1, x2, x1
    884c:	ldrb	w1, [x1]
    8850:	eor	w1, w0, w1
    8854:	ldr	x0, [sp, #24]
    8858:	ldr	w0, [x0, #140]
    885c:	and	w1, w1, w0
    8860:	ldr	x0, [sp, #24]
    8864:	str	w1, [x0, #128]
    8868:	ldr	x0, [sp, #24]
    886c:	ldr	x1, [x0, #120]
    8870:	ldr	x0, [sp, #24]
    8874:	ldr	w0, [x0, #128]
    8878:	mov	w0, w0
    887c:	lsl	x0, x0, #1
    8880:	add	x1, x1, x0
    8884:	ldr	x0, [sp, #24]
    8888:	ldr	x2, [x0, #112]
    888c:	ldr	x0, [sp, #24]
    8890:	ldr	w3, [x0, #172]
    8894:	ldr	x0, [sp, #24]
    8898:	ldr	w0, [x0, #88]
    889c:	and	w0, w3, w0
    88a0:	mov	w0, w0
    88a4:	lsl	x0, x0, #1
    88a8:	add	x0, x2, x0
    88ac:	ldrh	w1, [x1]
    88b0:	strh	w1, [x0]
    88b4:	ldrh	w0, [x0]
    88b8:	str	w0, [sp, #44]
    88bc:	ldr	x0, [sp, #24]
    88c0:	ldr	w2, [x0, #172]
    88c4:	ldr	x0, [sp, #24]
    88c8:	ldr	x1, [x0, #120]
    88cc:	ldr	x0, [sp, #24]
    88d0:	ldr	w0, [x0, #128]
    88d4:	mov	w0, w0
    88d8:	lsl	x0, x0, #1
    88dc:	add	x0, x1, x0
    88e0:	and	w1, w2, #0xffff
    88e4:	strh	w1, [x0]
    88e8:	ldr	x0, [sp, #24]
    88ec:	ldr	w0, [x0, #160]
    88f0:	sub	w1, w0, #0x1
    88f4:	ldr	x0, [sp, #24]
    88f8:	str	w1, [x0, #160]
    88fc:	ldr	x0, [sp, #24]
    8900:	ldr	w0, [x0, #160]
    8904:	cmp	w0, #0x0
    8908:	b.ne	8808 <deflateCopy@@Base+0x1ac0>  // b.any
    890c:	ldr	x0, [sp, #24]
    8910:	ldr	w0, [x0, #172]
    8914:	add	w1, w0, #0x1
    8918:	ldr	x0, [sp, #24]
    891c:	str	w1, [x0, #172]
    8920:	b	8ab8 <deflateCopy@@Base+0x1d70>
    8924:	ldr	x0, [sp, #24]
    8928:	ldr	w1, [x0, #172]
    892c:	ldr	x0, [sp, #24]
    8930:	ldr	w0, [x0, #160]
    8934:	add	w1, w1, w0
    8938:	ldr	x0, [sp, #24]
    893c:	str	w1, [x0, #172]
    8940:	ldr	x0, [sp, #24]
    8944:	str	wzr, [x0, #160]
    8948:	ldr	x0, [sp, #24]
    894c:	ldr	x1, [x0, #96]
    8950:	ldr	x0, [sp, #24]
    8954:	ldr	w0, [x0, #172]
    8958:	mov	w0, w0
    895c:	add	x0, x1, x0
    8960:	ldrb	w0, [x0]
    8964:	mov	w1, w0
    8968:	ldr	x0, [sp, #24]
    896c:	str	w1, [x0, #128]
    8970:	ldr	x0, [sp, #24]
    8974:	ldr	w1, [x0, #128]
    8978:	ldr	x0, [sp, #24]
    897c:	ldr	w0, [x0, #144]
    8980:	lsl	w0, w1, w0
    8984:	ldr	x1, [sp, #24]
    8988:	ldr	x2, [x1, #96]
    898c:	ldr	x1, [sp, #24]
    8990:	ldr	w1, [x1, #172]
    8994:	add	w1, w1, #0x1
    8998:	mov	w1, w1
    899c:	add	x1, x2, x1
    89a0:	ldrb	w1, [x1]
    89a4:	eor	w1, w0, w1
    89a8:	ldr	x0, [sp, #24]
    89ac:	ldr	w0, [x0, #140]
    89b0:	and	w1, w1, w0
    89b4:	ldr	x0, [sp, #24]
    89b8:	str	w1, [x0, #128]
    89bc:	b	8ab8 <deflateCopy@@Base+0x1d70>
    89c0:	ldr	x0, [sp, #24]
    89c4:	ldr	x1, [x0, #96]
    89c8:	ldr	x0, [sp, #24]
    89cc:	ldr	w0, [x0, #172]
    89d0:	mov	w0, w0
    89d4:	add	x0, x1, x0
    89d8:	ldrb	w0, [x0]
    89dc:	strb	w0, [sp, #39]
    89e0:	ldr	x0, [sp, #24]
    89e4:	ldr	x1, [x0, #5904]
    89e8:	ldr	x0, [sp, #24]
    89ec:	ldr	w0, [x0, #5900]
    89f0:	mov	w0, w0
    89f4:	lsl	x0, x0, #1
    89f8:	add	x0, x1, x0
    89fc:	strh	wzr, [x0]
    8a00:	ldr	x0, [sp, #24]
    8a04:	ldr	x1, [x0, #5888]
    8a08:	ldr	x0, [sp, #24]
    8a0c:	ldr	w0, [x0, #5900]
    8a10:	add	w3, w0, #0x1
    8a14:	ldr	x2, [sp, #24]
    8a18:	str	w3, [x2, #5900]
    8a1c:	mov	w0, w0
    8a20:	add	x0, x1, x0
    8a24:	ldrb	w1, [sp, #39]
    8a28:	strb	w1, [x0]
    8a2c:	ldrb	w2, [sp, #39]
    8a30:	ldr	x1, [sp, #24]
    8a34:	sxtw	x0, w2
    8a38:	add	x0, x0, #0x34
    8a3c:	lsl	x0, x0, #2
    8a40:	add	x0, x1, x0
    8a44:	ldrh	w0, [x0, #4]
    8a48:	add	w0, w0, #0x1
    8a4c:	and	w3, w0, #0xffff
    8a50:	ldr	x1, [sp, #24]
    8a54:	sxtw	x0, w2
    8a58:	add	x0, x0, #0x34
    8a5c:	lsl	x0, x0, #2
    8a60:	add	x0, x1, x0
    8a64:	mov	w1, w3
    8a68:	strh	w1, [x0, #4]
    8a6c:	ldr	x0, [sp, #24]
    8a70:	ldr	w1, [x0, #5900]
    8a74:	ldr	x0, [sp, #24]
    8a78:	ldr	w0, [x0, #5896]
    8a7c:	sub	w0, w0, #0x1
    8a80:	cmp	w1, w0
    8a84:	cset	w0, eq  // eq = none
    8a88:	and	w0, w0, #0xff
    8a8c:	str	w0, [sp, #40]
    8a90:	ldr	x0, [sp, #24]
    8a94:	ldr	w0, [x0, #180]
    8a98:	sub	w1, w0, #0x1
    8a9c:	ldr	x0, [sp, #24]
    8aa0:	str	w1, [x0, #180]
    8aa4:	ldr	x0, [sp, #24]
    8aa8:	ldr	w0, [x0, #172]
    8aac:	add	w1, w0, #0x1
    8ab0:	ldr	x0, [sp, #24]
    8ab4:	str	w1, [x0, #172]
    8ab8:	ldr	w0, [sp, #40]
    8abc:	cmp	w0, #0x0
    8ac0:	b.eq	849c <deflateCopy@@Base+0x1754>  // b.none
    8ac4:	ldr	x0, [sp, #24]
    8ac8:	ldr	x0, [x0, #152]
    8acc:	cmp	x0, #0x0
    8ad0:	b.lt	8af0 <deflateCopy@@Base+0x1da8>  // b.tstop
    8ad4:	ldr	x0, [sp, #24]
    8ad8:	ldr	x1, [x0, #96]
    8adc:	ldr	x0, [sp, #24]
    8ae0:	ldr	x0, [x0, #152]
    8ae4:	mov	w0, w0
    8ae8:	add	x0, x1, x0
    8aec:	b	8af4 <deflateCopy@@Base+0x1dac>
    8af0:	mov	x0, #0x0                   	// #0
    8af4:	ldr	x1, [sp, #24]
    8af8:	ldr	w1, [x1, #172]
    8afc:	mov	w2, w1
    8b00:	ldr	x1, [sp, #24]
    8b04:	ldr	x1, [x1, #152]
    8b08:	sub	x1, x2, x1
    8b0c:	mov	w3, #0x0                   	// #0
    8b10:	mov	x2, x1
    8b14:	mov	x1, x0
    8b18:	ldr	x0, [sp, #24]
    8b1c:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    8b20:	ldr	x0, [sp, #24]
    8b24:	ldr	w0, [x0, #172]
    8b28:	mov	w1, w0
    8b2c:	ldr	x0, [sp, #24]
    8b30:	str	x1, [x0, #152]
    8b34:	ldr	x0, [sp, #24]
    8b38:	ldr	x0, [x0]
    8b3c:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    8b40:	ldr	x0, [sp, #24]
    8b44:	ldr	x0, [x0]
    8b48:	ldr	w0, [x0, #32]
    8b4c:	cmp	w0, #0x0
    8b50:	b.ne	849c <deflateCopy@@Base+0x1754>  // b.any
    8b54:	mov	w0, #0x0                   	// #0
    8b58:	b	8cd4 <deflateCopy@@Base+0x1f8c>
    8b5c:	nop
    8b60:	ldr	x0, [sp, #24]
    8b64:	ldr	w0, [x0, #172]
    8b68:	mov	w1, #0x2                   	// #2
    8b6c:	cmp	w0, #0x2
    8b70:	csel	w1, w0, w1, ls  // ls = plast
    8b74:	ldr	x0, [sp, #24]
    8b78:	str	w1, [x0, #5932]
    8b7c:	ldr	w0, [sp, #20]
    8b80:	cmp	w0, #0x4
    8b84:	b.ne	8c28 <deflateCopy@@Base+0x1ee0>  // b.any
    8b88:	ldr	x0, [sp, #24]
    8b8c:	ldr	x0, [x0, #152]
    8b90:	cmp	x0, #0x0
    8b94:	b.lt	8bb4 <deflateCopy@@Base+0x1e6c>  // b.tstop
    8b98:	ldr	x0, [sp, #24]
    8b9c:	ldr	x1, [x0, #96]
    8ba0:	ldr	x0, [sp, #24]
    8ba4:	ldr	x0, [x0, #152]
    8ba8:	mov	w0, w0
    8bac:	add	x0, x1, x0
    8bb0:	b	8bb8 <deflateCopy@@Base+0x1e70>
    8bb4:	mov	x0, #0x0                   	// #0
    8bb8:	ldr	x1, [sp, #24]
    8bbc:	ldr	w1, [x1, #172]
    8bc0:	mov	w2, w1
    8bc4:	ldr	x1, [sp, #24]
    8bc8:	ldr	x1, [x1, #152]
    8bcc:	sub	x1, x2, x1
    8bd0:	mov	w3, #0x1                   	// #1
    8bd4:	mov	x2, x1
    8bd8:	mov	x1, x0
    8bdc:	ldr	x0, [sp, #24]
    8be0:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    8be4:	ldr	x0, [sp, #24]
    8be8:	ldr	w0, [x0, #172]
    8bec:	mov	w1, w0
    8bf0:	ldr	x0, [sp, #24]
    8bf4:	str	x1, [x0, #152]
    8bf8:	ldr	x0, [sp, #24]
    8bfc:	ldr	x0, [x0]
    8c00:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    8c04:	ldr	x0, [sp, #24]
    8c08:	ldr	x0, [x0]
    8c0c:	ldr	w0, [x0, #32]
    8c10:	cmp	w0, #0x0
    8c14:	b.ne	8c20 <deflateCopy@@Base+0x1ed8>  // b.any
    8c18:	mov	w0, #0x2                   	// #2
    8c1c:	b	8cd4 <deflateCopy@@Base+0x1f8c>
    8c20:	mov	w0, #0x3                   	// #3
    8c24:	b	8cd4 <deflateCopy@@Base+0x1f8c>
    8c28:	ldr	x0, [sp, #24]
    8c2c:	ldr	w0, [x0, #5900]
    8c30:	cmp	w0, #0x0
    8c34:	b.eq	8cd0 <deflateCopy@@Base+0x1f88>  // b.none
    8c38:	ldr	x0, [sp, #24]
    8c3c:	ldr	x0, [x0, #152]
    8c40:	cmp	x0, #0x0
    8c44:	b.lt	8c64 <deflateCopy@@Base+0x1f1c>  // b.tstop
    8c48:	ldr	x0, [sp, #24]
    8c4c:	ldr	x1, [x0, #96]
    8c50:	ldr	x0, [sp, #24]
    8c54:	ldr	x0, [x0, #152]
    8c58:	mov	w0, w0
    8c5c:	add	x0, x1, x0
    8c60:	b	8c68 <deflateCopy@@Base+0x1f20>
    8c64:	mov	x0, #0x0                   	// #0
    8c68:	ldr	x1, [sp, #24]
    8c6c:	ldr	w1, [x1, #172]
    8c70:	mov	w2, w1
    8c74:	ldr	x1, [sp, #24]
    8c78:	ldr	x1, [x1, #152]
    8c7c:	sub	x1, x2, x1
    8c80:	mov	w3, #0x0                   	// #0
    8c84:	mov	x2, x1
    8c88:	mov	x1, x0
    8c8c:	ldr	x0, [sp, #24]
    8c90:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    8c94:	ldr	x0, [sp, #24]
    8c98:	ldr	w0, [x0, #172]
    8c9c:	mov	w1, w0
    8ca0:	ldr	x0, [sp, #24]
    8ca4:	str	x1, [x0, #152]
    8ca8:	ldr	x0, [sp, #24]
    8cac:	ldr	x0, [x0]
    8cb0:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    8cb4:	ldr	x0, [sp, #24]
    8cb8:	ldr	x0, [x0]
    8cbc:	ldr	w0, [x0, #32]
    8cc0:	cmp	w0, #0x0
    8cc4:	b.ne	8cd0 <deflateCopy@@Base+0x1f88>  // b.any
    8cc8:	mov	w0, #0x0                   	// #0
    8ccc:	b	8cd4 <deflateCopy@@Base+0x1f8c>
    8cd0:	mov	w0, #0x1                   	// #1
    8cd4:	ldp	x29, x30, [sp], #48
    8cd8:	ret
    8cdc:	stp	x29, x30, [sp, #-64]!
    8ce0:	mov	x29, sp
    8ce4:	str	x0, [sp, #24]
    8ce8:	str	w1, [sp, #20]
    8cec:	ldr	x0, [sp, #24]
    8cf0:	ldr	w0, [x0, #180]
    8cf4:	cmp	w0, #0x105
    8cf8:	b.hi	8d38 <deflateCopy@@Base+0x1ff0>  // b.pmore
    8cfc:	ldr	x0, [sp, #24]
    8d00:	bl	765c <deflateCopy@@Base+0x914>
    8d04:	ldr	x0, [sp, #24]
    8d08:	ldr	w0, [x0, #180]
    8d0c:	cmp	w0, #0x105
    8d10:	b.hi	8d28 <deflateCopy@@Base+0x1fe0>  // b.pmore
    8d14:	ldr	w0, [sp, #20]
    8d18:	cmp	w0, #0x0
    8d1c:	b.ne	8d28 <deflateCopy@@Base+0x1fe0>  // b.any
    8d20:	mov	w0, #0x0                   	// #0
    8d24:	b	9744 <deflateCopy@@Base+0x29fc>
    8d28:	ldr	x0, [sp, #24]
    8d2c:	ldr	w0, [x0, #180]
    8d30:	cmp	w0, #0x0
    8d34:	b.eq	94e0 <deflateCopy@@Base+0x2798>  // b.none
    8d38:	str	wzr, [sp, #60]
    8d3c:	ldr	x0, [sp, #24]
    8d40:	ldr	w0, [x0, #180]
    8d44:	cmp	w0, #0x2
    8d48:	b.ls	8e18 <deflateCopy@@Base+0x20d0>  // b.plast
    8d4c:	ldr	x0, [sp, #24]
    8d50:	ldr	w1, [x0, #128]
    8d54:	ldr	x0, [sp, #24]
    8d58:	ldr	w0, [x0, #144]
    8d5c:	lsl	w0, w1, w0
    8d60:	ldr	x1, [sp, #24]
    8d64:	ldr	x2, [x1, #96]
    8d68:	ldr	x1, [sp, #24]
    8d6c:	ldr	w1, [x1, #172]
    8d70:	add	w1, w1, #0x2
    8d74:	mov	w1, w1
    8d78:	add	x1, x2, x1
    8d7c:	ldrb	w1, [x1]
    8d80:	eor	w1, w0, w1
    8d84:	ldr	x0, [sp, #24]
    8d88:	ldr	w0, [x0, #140]
    8d8c:	and	w1, w1, w0
    8d90:	ldr	x0, [sp, #24]
    8d94:	str	w1, [x0, #128]
    8d98:	ldr	x0, [sp, #24]
    8d9c:	ldr	x1, [x0, #120]
    8da0:	ldr	x0, [sp, #24]
    8da4:	ldr	w0, [x0, #128]
    8da8:	mov	w0, w0
    8dac:	lsl	x0, x0, #1
    8db0:	add	x1, x1, x0
    8db4:	ldr	x0, [sp, #24]
    8db8:	ldr	x2, [x0, #112]
    8dbc:	ldr	x0, [sp, #24]
    8dc0:	ldr	w3, [x0, #172]
    8dc4:	ldr	x0, [sp, #24]
    8dc8:	ldr	w0, [x0, #88]
    8dcc:	and	w0, w3, w0
    8dd0:	mov	w0, w0
    8dd4:	lsl	x0, x0, #1
    8dd8:	add	x0, x2, x0
    8ddc:	ldrh	w1, [x1]
    8de0:	strh	w1, [x0]
    8de4:	ldrh	w0, [x0]
    8de8:	str	w0, [sp, #60]
    8dec:	ldr	x0, [sp, #24]
    8df0:	ldr	w2, [x0, #172]
    8df4:	ldr	x0, [sp, #24]
    8df8:	ldr	x1, [x0, #120]
    8dfc:	ldr	x0, [sp, #24]
    8e00:	ldr	w0, [x0, #128]
    8e04:	mov	w0, w0
    8e08:	lsl	x0, x0, #1
    8e0c:	add	x0, x1, x0
    8e10:	and	w1, w2, #0xffff
    8e14:	strh	w1, [x0]
    8e18:	ldr	x0, [sp, #24]
    8e1c:	ldr	w1, [x0, #160]
    8e20:	ldr	x0, [sp, #24]
    8e24:	str	w1, [x0, #184]
    8e28:	ldr	x0, [sp, #24]
    8e2c:	ldr	w1, [x0, #176]
    8e30:	ldr	x0, [sp, #24]
    8e34:	str	w1, [x0, #164]
    8e38:	ldr	x0, [sp, #24]
    8e3c:	mov	w1, #0x2                   	// #2
    8e40:	str	w1, [x0, #160]
    8e44:	ldr	w0, [sp, #60]
    8e48:	cmp	w0, #0x0
    8e4c:	b.eq	8efc <deflateCopy@@Base+0x21b4>  // b.none
    8e50:	ldr	x0, [sp, #24]
    8e54:	ldr	w1, [x0, #184]
    8e58:	ldr	x0, [sp, #24]
    8e5c:	ldr	w0, [x0, #192]
    8e60:	cmp	w1, w0
    8e64:	b.cs	8efc <deflateCopy@@Base+0x21b4>  // b.hs, b.nlast
    8e68:	ldr	x0, [sp, #24]
    8e6c:	ldr	w1, [x0, #172]
    8e70:	ldr	w0, [sp, #60]
    8e74:	sub	w1, w1, w0
    8e78:	ldr	x0, [sp, #24]
    8e7c:	ldr	w0, [x0, #80]
    8e80:	sub	w0, w0, #0x106
    8e84:	cmp	w1, w0
    8e88:	b.hi	8efc <deflateCopy@@Base+0x21b4>  // b.pmore
    8e8c:	ldr	w1, [sp, #60]
    8e90:	ldr	x0, [sp, #24]
    8e94:	bl	731c <deflateCopy@@Base+0x5d4>
    8e98:	mov	w1, w0
    8e9c:	ldr	x0, [sp, #24]
    8ea0:	str	w1, [x0, #160]
    8ea4:	ldr	x0, [sp, #24]
    8ea8:	ldr	w0, [x0, #160]
    8eac:	cmp	w0, #0x5
    8eb0:	b.hi	8efc <deflateCopy@@Base+0x21b4>  // b.pmore
    8eb4:	ldr	x0, [sp, #24]
    8eb8:	ldr	w0, [x0, #200]
    8ebc:	cmp	w0, #0x1
    8ec0:	b.eq	8ef0 <deflateCopy@@Base+0x21a8>  // b.none
    8ec4:	ldr	x0, [sp, #24]
    8ec8:	ldr	w0, [x0, #160]
    8ecc:	cmp	w0, #0x3
    8ed0:	b.ne	8efc <deflateCopy@@Base+0x21b4>  // b.any
    8ed4:	ldr	x0, [sp, #24]
    8ed8:	ldr	w1, [x0, #172]
    8edc:	ldr	x0, [sp, #24]
    8ee0:	ldr	w0, [x0, #176]
    8ee4:	sub	w0, w1, w0
    8ee8:	cmp	w0, #0x1, lsl #12
    8eec:	b.ls	8efc <deflateCopy@@Base+0x21b4>  // b.plast
    8ef0:	ldr	x0, [sp, #24]
    8ef4:	mov	w1, #0x2                   	// #2
    8ef8:	str	w1, [x0, #160]
    8efc:	ldr	x0, [sp, #24]
    8f00:	ldr	w0, [x0, #184]
    8f04:	cmp	w0, #0x2
    8f08:	b.ls	92f0 <deflateCopy@@Base+0x25a8>  // b.plast
    8f0c:	ldr	x0, [sp, #24]
    8f10:	ldr	w1, [x0, #160]
    8f14:	ldr	x0, [sp, #24]
    8f18:	ldr	w0, [x0, #184]
    8f1c:	cmp	w1, w0
    8f20:	b.hi	92f0 <deflateCopy@@Base+0x25a8>  // b.pmore
    8f24:	ldr	x0, [sp, #24]
    8f28:	ldr	w1, [x0, #172]
    8f2c:	ldr	x0, [sp, #24]
    8f30:	ldr	w0, [x0, #180]
    8f34:	add	w0, w1, w0
    8f38:	sub	w0, w0, #0x3
    8f3c:	str	w0, [sp, #48]
    8f40:	ldr	x0, [sp, #24]
    8f44:	ldr	w0, [x0, #184]
    8f48:	and	w0, w0, #0xff
    8f4c:	sub	w0, w0, #0x3
    8f50:	strb	w0, [sp, #47]
    8f54:	ldr	x0, [sp, #24]
    8f58:	ldr	w0, [x0, #172]
    8f5c:	and	w1, w0, #0xffff
    8f60:	ldr	x0, [sp, #24]
    8f64:	ldr	w0, [x0, #164]
    8f68:	and	w0, w0, #0xffff
    8f6c:	sub	w0, w1, w0
    8f70:	and	w0, w0, #0xffff
    8f74:	sub	w0, w0, #0x1
    8f78:	strh	w0, [sp, #44]
    8f7c:	ldr	x0, [sp, #24]
    8f80:	ldr	x1, [x0, #5904]
    8f84:	ldr	x0, [sp, #24]
    8f88:	ldr	w0, [x0, #5900]
    8f8c:	mov	w0, w0
    8f90:	lsl	x0, x0, #1
    8f94:	add	x0, x1, x0
    8f98:	ldrh	w1, [sp, #44]
    8f9c:	strh	w1, [x0]
    8fa0:	ldr	x0, [sp, #24]
    8fa4:	ldr	x1, [x0, #5888]
    8fa8:	ldr	x0, [sp, #24]
    8fac:	ldr	w0, [x0, #5900]
    8fb0:	add	w3, w0, #0x1
    8fb4:	ldr	x2, [sp, #24]
    8fb8:	str	w3, [x2, #5900]
    8fbc:	mov	w0, w0
    8fc0:	add	x0, x1, x0
    8fc4:	ldrb	w1, [sp, #47]
    8fc8:	strb	w1, [x0]
    8fcc:	ldrh	w0, [sp, #44]
    8fd0:	sub	w0, w0, #0x1
    8fd4:	strh	w0, [sp, #44]
    8fd8:	ldrb	w2, [sp, #47]
    8fdc:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    8fe0:	add	x1, x0, #0xf18
    8fe4:	sxtw	x0, w2
    8fe8:	ldrb	w0, [x1, x0]
    8fec:	add	w2, w0, #0x101
    8ff0:	ldr	x1, [sp, #24]
    8ff4:	sxtw	x0, w2
    8ff8:	add	x0, x0, #0x34
    8ffc:	lsl	x0, x0, #2
    9000:	add	x0, x1, x0
    9004:	ldrh	w0, [x0, #4]
    9008:	add	w0, w0, #0x1
    900c:	and	w3, w0, #0xffff
    9010:	ldr	x1, [sp, #24]
    9014:	sxtw	x0, w2
    9018:	add	x0, x0, #0x34
    901c:	lsl	x0, x0, #2
    9020:	add	x0, x1, x0
    9024:	mov	w1, w3
    9028:	strh	w1, [x0, #4]
    902c:	ldrh	w0, [sp, #44]
    9030:	cmp	w0, #0xff
    9034:	b.hi	9054 <deflateCopy@@Base+0x230c>  // b.pmore
    9038:	ldrh	w2, [sp, #44]
    903c:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    9040:	add	x1, x0, #0xd18
    9044:	sxtw	x0, w2
    9048:	ldrb	w0, [x1, x0]
    904c:	mov	w2, w0
    9050:	b	9078 <deflateCopy@@Base+0x2330>
    9054:	ldrh	w0, [sp, #44]
    9058:	lsr	w0, w0, #7
    905c:	and	w0, w0, #0xffff
    9060:	add	w2, w0, #0x100
    9064:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    9068:	add	x1, x0, #0xd18
    906c:	sxtw	x0, w2
    9070:	ldrb	w0, [x1, x0]
    9074:	mov	w2, w0
    9078:	ldr	x1, [sp, #24]
    907c:	sxtw	x0, w2
    9080:	add	x0, x0, #0x270
    9084:	lsl	x0, x0, #2
    9088:	add	x0, x1, x0
    908c:	ldrh	w0, [x0, #8]
    9090:	add	w0, w0, #0x1
    9094:	and	w3, w0, #0xffff
    9098:	ldr	x1, [sp, #24]
    909c:	sxtw	x0, w2
    90a0:	add	x0, x0, #0x270
    90a4:	lsl	x0, x0, #2
    90a8:	add	x0, x1, x0
    90ac:	mov	w1, w3
    90b0:	strh	w1, [x0, #8]
    90b4:	ldr	x0, [sp, #24]
    90b8:	ldr	w1, [x0, #5900]
    90bc:	ldr	x0, [sp, #24]
    90c0:	ldr	w0, [x0, #5896]
    90c4:	sub	w0, w0, #0x1
    90c8:	cmp	w1, w0
    90cc:	cset	w0, eq  // eq = none
    90d0:	and	w0, w0, #0xff
    90d4:	str	w0, [sp, #52]
    90d8:	ldr	x0, [sp, #24]
    90dc:	ldr	w1, [x0, #180]
    90e0:	ldr	x0, [sp, #24]
    90e4:	ldr	w0, [x0, #184]
    90e8:	sub	w0, w1, w0
    90ec:	add	w1, w0, #0x1
    90f0:	ldr	x0, [sp, #24]
    90f4:	str	w1, [x0, #180]
    90f8:	ldr	x0, [sp, #24]
    90fc:	ldr	w0, [x0, #184]
    9100:	sub	w1, w0, #0x2
    9104:	ldr	x0, [sp, #24]
    9108:	str	w1, [x0, #184]
    910c:	ldr	x0, [sp, #24]
    9110:	ldr	w0, [x0, #172]
    9114:	add	w1, w0, #0x1
    9118:	ldr	x0, [sp, #24]
    911c:	str	w1, [x0, #172]
    9120:	ldr	x0, [sp, #24]
    9124:	ldr	w0, [x0, #172]
    9128:	ldr	w1, [sp, #48]
    912c:	cmp	w1, w0
    9130:	b.cc	9200 <deflateCopy@@Base+0x24b8>  // b.lo, b.ul, b.last
    9134:	ldr	x0, [sp, #24]
    9138:	ldr	w1, [x0, #128]
    913c:	ldr	x0, [sp, #24]
    9140:	ldr	w0, [x0, #144]
    9144:	lsl	w0, w1, w0
    9148:	ldr	x1, [sp, #24]
    914c:	ldr	x2, [x1, #96]
    9150:	ldr	x1, [sp, #24]
    9154:	ldr	w1, [x1, #172]
    9158:	add	w1, w1, #0x2
    915c:	mov	w1, w1
    9160:	add	x1, x2, x1
    9164:	ldrb	w1, [x1]
    9168:	eor	w1, w0, w1
    916c:	ldr	x0, [sp, #24]
    9170:	ldr	w0, [x0, #140]
    9174:	and	w1, w1, w0
    9178:	ldr	x0, [sp, #24]
    917c:	str	w1, [x0, #128]
    9180:	ldr	x0, [sp, #24]
    9184:	ldr	x1, [x0, #120]
    9188:	ldr	x0, [sp, #24]
    918c:	ldr	w0, [x0, #128]
    9190:	mov	w0, w0
    9194:	lsl	x0, x0, #1
    9198:	add	x1, x1, x0
    919c:	ldr	x0, [sp, #24]
    91a0:	ldr	x2, [x0, #112]
    91a4:	ldr	x0, [sp, #24]
    91a8:	ldr	w3, [x0, #172]
    91ac:	ldr	x0, [sp, #24]
    91b0:	ldr	w0, [x0, #88]
    91b4:	and	w0, w3, w0
    91b8:	mov	w0, w0
    91bc:	lsl	x0, x0, #1
    91c0:	add	x0, x2, x0
    91c4:	ldrh	w1, [x1]
    91c8:	strh	w1, [x0]
    91cc:	ldrh	w0, [x0]
    91d0:	str	w0, [sp, #60]
    91d4:	ldr	x0, [sp, #24]
    91d8:	ldr	w2, [x0, #172]
    91dc:	ldr	x0, [sp, #24]
    91e0:	ldr	x1, [x0, #120]
    91e4:	ldr	x0, [sp, #24]
    91e8:	ldr	w0, [x0, #128]
    91ec:	mov	w0, w0
    91f0:	lsl	x0, x0, #1
    91f4:	add	x0, x1, x0
    91f8:	and	w1, w2, #0xffff
    91fc:	strh	w1, [x0]
    9200:	ldr	x0, [sp, #24]
    9204:	ldr	w0, [x0, #184]
    9208:	sub	w1, w0, #0x1
    920c:	ldr	x0, [sp, #24]
    9210:	str	w1, [x0, #184]
    9214:	ldr	x0, [sp, #24]
    9218:	ldr	w0, [x0, #184]
    921c:	cmp	w0, #0x0
    9220:	b.ne	910c <deflateCopy@@Base+0x23c4>  // b.any
    9224:	ldr	x0, [sp, #24]
    9228:	str	wzr, [x0, #168]
    922c:	ldr	x0, [sp, #24]
    9230:	mov	w1, #0x2                   	// #2
    9234:	str	w1, [x0, #160]
    9238:	ldr	x0, [sp, #24]
    923c:	ldr	w0, [x0, #172]
    9240:	add	w1, w0, #0x1
    9244:	ldr	x0, [sp, #24]
    9248:	str	w1, [x0, #172]
    924c:	ldr	w0, [sp, #52]
    9250:	cmp	w0, #0x0
    9254:	b.eq	94d8 <deflateCopy@@Base+0x2790>  // b.none
    9258:	ldr	x0, [sp, #24]
    925c:	ldr	x0, [x0, #152]
    9260:	cmp	x0, #0x0
    9264:	b.lt	9284 <deflateCopy@@Base+0x253c>  // b.tstop
    9268:	ldr	x0, [sp, #24]
    926c:	ldr	x1, [x0, #96]
    9270:	ldr	x0, [sp, #24]
    9274:	ldr	x0, [x0, #152]
    9278:	mov	w0, w0
    927c:	add	x0, x1, x0
    9280:	b	9288 <deflateCopy@@Base+0x2540>
    9284:	mov	x0, #0x0                   	// #0
    9288:	ldr	x1, [sp, #24]
    928c:	ldr	w1, [x1, #172]
    9290:	mov	w2, w1
    9294:	ldr	x1, [sp, #24]
    9298:	ldr	x1, [x1, #152]
    929c:	sub	x1, x2, x1
    92a0:	mov	w3, #0x0                   	// #0
    92a4:	mov	x2, x1
    92a8:	mov	x1, x0
    92ac:	ldr	x0, [sp, #24]
    92b0:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    92b4:	ldr	x0, [sp, #24]
    92b8:	ldr	w0, [x0, #172]
    92bc:	mov	w1, w0
    92c0:	ldr	x0, [sp, #24]
    92c4:	str	x1, [x0, #152]
    92c8:	ldr	x0, [sp, #24]
    92cc:	ldr	x0, [x0]
    92d0:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    92d4:	ldr	x0, [sp, #24]
    92d8:	ldr	x0, [x0]
    92dc:	ldr	w0, [x0, #32]
    92e0:	cmp	w0, #0x0
    92e4:	b.ne	94d8 <deflateCopy@@Base+0x2790>  // b.any
    92e8:	mov	w0, #0x0                   	// #0
    92ec:	b	9744 <deflateCopy@@Base+0x29fc>
    92f0:	ldr	x0, [sp, #24]
    92f4:	ldr	w0, [x0, #168]
    92f8:	cmp	w0, #0x0
    92fc:	b.eq	94a0 <deflateCopy@@Base+0x2758>  // b.none
    9300:	ldr	x0, [sp, #24]
    9304:	ldr	x1, [x0, #96]
    9308:	ldr	x0, [sp, #24]
    930c:	ldr	w0, [x0, #172]
    9310:	sub	w0, w0, #0x1
    9314:	mov	w0, w0
    9318:	add	x0, x1, x0
    931c:	ldrb	w0, [x0]
    9320:	strb	w0, [sp, #43]
    9324:	ldr	x0, [sp, #24]
    9328:	ldr	x1, [x0, #5904]
    932c:	ldr	x0, [sp, #24]
    9330:	ldr	w0, [x0, #5900]
    9334:	mov	w0, w0
    9338:	lsl	x0, x0, #1
    933c:	add	x0, x1, x0
    9340:	strh	wzr, [x0]
    9344:	ldr	x0, [sp, #24]
    9348:	ldr	x1, [x0, #5888]
    934c:	ldr	x0, [sp, #24]
    9350:	ldr	w0, [x0, #5900]
    9354:	add	w3, w0, #0x1
    9358:	ldr	x2, [sp, #24]
    935c:	str	w3, [x2, #5900]
    9360:	mov	w0, w0
    9364:	add	x0, x1, x0
    9368:	ldrb	w1, [sp, #43]
    936c:	strb	w1, [x0]
    9370:	ldrb	w2, [sp, #43]
    9374:	ldr	x1, [sp, #24]
    9378:	sxtw	x0, w2
    937c:	add	x0, x0, #0x34
    9380:	lsl	x0, x0, #2
    9384:	add	x0, x1, x0
    9388:	ldrh	w0, [x0, #4]
    938c:	add	w0, w0, #0x1
    9390:	and	w3, w0, #0xffff
    9394:	ldr	x1, [sp, #24]
    9398:	sxtw	x0, w2
    939c:	add	x0, x0, #0x34
    93a0:	lsl	x0, x0, #2
    93a4:	add	x0, x1, x0
    93a8:	mov	w1, w3
    93ac:	strh	w1, [x0, #4]
    93b0:	ldr	x0, [sp, #24]
    93b4:	ldr	w1, [x0, #5900]
    93b8:	ldr	x0, [sp, #24]
    93bc:	ldr	w0, [x0, #5896]
    93c0:	sub	w0, w0, #0x1
    93c4:	cmp	w1, w0
    93c8:	cset	w0, eq  // eq = none
    93cc:	and	w0, w0, #0xff
    93d0:	str	w0, [sp, #52]
    93d4:	ldr	w0, [sp, #52]
    93d8:	cmp	w0, #0x0
    93dc:	b.eq	945c <deflateCopy@@Base+0x2714>  // b.none
    93e0:	ldr	x0, [sp, #24]
    93e4:	ldr	x0, [x0, #152]
    93e8:	cmp	x0, #0x0
    93ec:	b.lt	940c <deflateCopy@@Base+0x26c4>  // b.tstop
    93f0:	ldr	x0, [sp, #24]
    93f4:	ldr	x1, [x0, #96]
    93f8:	ldr	x0, [sp, #24]
    93fc:	ldr	x0, [x0, #152]
    9400:	mov	w0, w0
    9404:	add	x0, x1, x0
    9408:	b	9410 <deflateCopy@@Base+0x26c8>
    940c:	mov	x0, #0x0                   	// #0
    9410:	ldr	x1, [sp, #24]
    9414:	ldr	w1, [x1, #172]
    9418:	mov	w2, w1
    941c:	ldr	x1, [sp, #24]
    9420:	ldr	x1, [x1, #152]
    9424:	sub	x1, x2, x1
    9428:	mov	w3, #0x0                   	// #0
    942c:	mov	x2, x1
    9430:	mov	x1, x0
    9434:	ldr	x0, [sp, #24]
    9438:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    943c:	ldr	x0, [sp, #24]
    9440:	ldr	w0, [x0, #172]
    9444:	mov	w1, w0
    9448:	ldr	x0, [sp, #24]
    944c:	str	x1, [x0, #152]
    9450:	ldr	x0, [sp, #24]
    9454:	ldr	x0, [x0]
    9458:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    945c:	ldr	x0, [sp, #24]
    9460:	ldr	w0, [x0, #172]
    9464:	add	w1, w0, #0x1
    9468:	ldr	x0, [sp, #24]
    946c:	str	w1, [x0, #172]
    9470:	ldr	x0, [sp, #24]
    9474:	ldr	w0, [x0, #180]
    9478:	sub	w1, w0, #0x1
    947c:	ldr	x0, [sp, #24]
    9480:	str	w1, [x0, #180]
    9484:	ldr	x0, [sp, #24]
    9488:	ldr	x0, [x0]
    948c:	ldr	w0, [x0, #32]
    9490:	cmp	w0, #0x0
    9494:	b.ne	8cec <deflateCopy@@Base+0x1fa4>  // b.any
    9498:	mov	w0, #0x0                   	// #0
    949c:	b	9744 <deflateCopy@@Base+0x29fc>
    94a0:	ldr	x0, [sp, #24]
    94a4:	mov	w1, #0x1                   	// #1
    94a8:	str	w1, [x0, #168]
    94ac:	ldr	x0, [sp, #24]
    94b0:	ldr	w0, [x0, #172]
    94b4:	add	w1, w0, #0x1
    94b8:	ldr	x0, [sp, #24]
    94bc:	str	w1, [x0, #172]
    94c0:	ldr	x0, [sp, #24]
    94c4:	ldr	w0, [x0, #180]
    94c8:	sub	w1, w0, #0x1
    94cc:	ldr	x0, [sp, #24]
    94d0:	str	w1, [x0, #180]
    94d4:	b	8cec <deflateCopy@@Base+0x1fa4>
    94d8:	nop
    94dc:	b	8cec <deflateCopy@@Base+0x1fa4>
    94e0:	nop
    94e4:	ldr	x0, [sp, #24]
    94e8:	ldr	w0, [x0, #168]
    94ec:	cmp	w0, #0x0
    94f0:	b.eq	95d0 <deflateCopy@@Base+0x2888>  // b.none
    94f4:	ldr	x0, [sp, #24]
    94f8:	ldr	x1, [x0, #96]
    94fc:	ldr	x0, [sp, #24]
    9500:	ldr	w0, [x0, #172]
    9504:	sub	w0, w0, #0x1
    9508:	mov	w0, w0
    950c:	add	x0, x1, x0
    9510:	ldrb	w0, [x0]
    9514:	strb	w0, [sp, #59]
    9518:	ldr	x0, [sp, #24]
    951c:	ldr	x1, [x0, #5904]
    9520:	ldr	x0, [sp, #24]
    9524:	ldr	w0, [x0, #5900]
    9528:	mov	w0, w0
    952c:	lsl	x0, x0, #1
    9530:	add	x0, x1, x0
    9534:	strh	wzr, [x0]
    9538:	ldr	x0, [sp, #24]
    953c:	ldr	x1, [x0, #5888]
    9540:	ldr	x0, [sp, #24]
    9544:	ldr	w0, [x0, #5900]
    9548:	add	w3, w0, #0x1
    954c:	ldr	x2, [sp, #24]
    9550:	str	w3, [x2, #5900]
    9554:	mov	w0, w0
    9558:	add	x0, x1, x0
    955c:	ldrb	w1, [sp, #59]
    9560:	strb	w1, [x0]
    9564:	ldrb	w2, [sp, #59]
    9568:	ldr	x1, [sp, #24]
    956c:	sxtw	x0, w2
    9570:	add	x0, x0, #0x34
    9574:	lsl	x0, x0, #2
    9578:	add	x0, x1, x0
    957c:	ldrh	w0, [x0, #4]
    9580:	add	w0, w0, #0x1
    9584:	and	w3, w0, #0xffff
    9588:	ldr	x1, [sp, #24]
    958c:	sxtw	x0, w2
    9590:	add	x0, x0, #0x34
    9594:	lsl	x0, x0, #2
    9598:	add	x0, x1, x0
    959c:	mov	w1, w3
    95a0:	strh	w1, [x0, #4]
    95a4:	ldr	x0, [sp, #24]
    95a8:	ldr	w1, [x0, #5900]
    95ac:	ldr	x0, [sp, #24]
    95b0:	ldr	w0, [x0, #5896]
    95b4:	sub	w0, w0, #0x1
    95b8:	cmp	w1, w0
    95bc:	cset	w0, eq  // eq = none
    95c0:	and	w0, w0, #0xff
    95c4:	str	w0, [sp, #52]
    95c8:	ldr	x0, [sp, #24]
    95cc:	str	wzr, [x0, #168]
    95d0:	ldr	x0, [sp, #24]
    95d4:	ldr	w0, [x0, #172]
    95d8:	mov	w1, #0x2                   	// #2
    95dc:	cmp	w0, #0x2
    95e0:	csel	w1, w0, w1, ls  // ls = plast
    95e4:	ldr	x0, [sp, #24]
    95e8:	str	w1, [x0, #5932]
    95ec:	ldr	w0, [sp, #20]
    95f0:	cmp	w0, #0x4
    95f4:	b.ne	9698 <deflateCopy@@Base+0x2950>  // b.any
    95f8:	ldr	x0, [sp, #24]
    95fc:	ldr	x0, [x0, #152]
    9600:	cmp	x0, #0x0
    9604:	b.lt	9624 <deflateCopy@@Base+0x28dc>  // b.tstop
    9608:	ldr	x0, [sp, #24]
    960c:	ldr	x1, [x0, #96]
    9610:	ldr	x0, [sp, #24]
    9614:	ldr	x0, [x0, #152]
    9618:	mov	w0, w0
    961c:	add	x0, x1, x0
    9620:	b	9628 <deflateCopy@@Base+0x28e0>
    9624:	mov	x0, #0x0                   	// #0
    9628:	ldr	x1, [sp, #24]
    962c:	ldr	w1, [x1, #172]
    9630:	mov	w2, w1
    9634:	ldr	x1, [sp, #24]
    9638:	ldr	x1, [x1, #152]
    963c:	sub	x1, x2, x1
    9640:	mov	w3, #0x1                   	// #1
    9644:	mov	x2, x1
    9648:	mov	x1, x0
    964c:	ldr	x0, [sp, #24]
    9650:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    9654:	ldr	x0, [sp, #24]
    9658:	ldr	w0, [x0, #172]
    965c:	mov	w1, w0
    9660:	ldr	x0, [sp, #24]
    9664:	str	x1, [x0, #152]
    9668:	ldr	x0, [sp, #24]
    966c:	ldr	x0, [x0]
    9670:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    9674:	ldr	x0, [sp, #24]
    9678:	ldr	x0, [x0]
    967c:	ldr	w0, [x0, #32]
    9680:	cmp	w0, #0x0
    9684:	b.ne	9690 <deflateCopy@@Base+0x2948>  // b.any
    9688:	mov	w0, #0x2                   	// #2
    968c:	b	9744 <deflateCopy@@Base+0x29fc>
    9690:	mov	w0, #0x3                   	// #3
    9694:	b	9744 <deflateCopy@@Base+0x29fc>
    9698:	ldr	x0, [sp, #24]
    969c:	ldr	w0, [x0, #5900]
    96a0:	cmp	w0, #0x0
    96a4:	b.eq	9740 <deflateCopy@@Base+0x29f8>  // b.none
    96a8:	ldr	x0, [sp, #24]
    96ac:	ldr	x0, [x0, #152]
    96b0:	cmp	x0, #0x0
    96b4:	b.lt	96d4 <deflateCopy@@Base+0x298c>  // b.tstop
    96b8:	ldr	x0, [sp, #24]
    96bc:	ldr	x1, [x0, #96]
    96c0:	ldr	x0, [sp, #24]
    96c4:	ldr	x0, [x0, #152]
    96c8:	mov	w0, w0
    96cc:	add	x0, x1, x0
    96d0:	b	96d8 <deflateCopy@@Base+0x2990>
    96d4:	mov	x0, #0x0                   	// #0
    96d8:	ldr	x1, [sp, #24]
    96dc:	ldr	w1, [x1, #172]
    96e0:	mov	w2, w1
    96e4:	ldr	x1, [sp, #24]
    96e8:	ldr	x1, [x1, #152]
    96ec:	sub	x1, x2, x1
    96f0:	mov	w3, #0x0                   	// #0
    96f4:	mov	x2, x1
    96f8:	mov	x1, x0
    96fc:	ldr	x0, [sp, #24]
    9700:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    9704:	ldr	x0, [sp, #24]
    9708:	ldr	w0, [x0, #172]
    970c:	mov	w1, w0
    9710:	ldr	x0, [sp, #24]
    9714:	str	x1, [x0, #152]
    9718:	ldr	x0, [sp, #24]
    971c:	ldr	x0, [x0]
    9720:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    9724:	ldr	x0, [sp, #24]
    9728:	ldr	x0, [x0]
    972c:	ldr	w0, [x0, #32]
    9730:	cmp	w0, #0x0
    9734:	b.ne	9740 <deflateCopy@@Base+0x29f8>  // b.any
    9738:	mov	w0, #0x0                   	// #0
    973c:	b	9744 <deflateCopy@@Base+0x29fc>
    9740:	mov	w0, #0x1                   	// #1
    9744:	ldp	x29, x30, [sp], #64
    9748:	ret
    974c:	stp	x29, x30, [sp, #-80]!
    9750:	mov	x29, sp
    9754:	str	x0, [sp, #24]
    9758:	str	w1, [sp, #20]
    975c:	ldr	x0, [sp, #24]
    9760:	ldr	w0, [x0, #180]
    9764:	cmp	w0, #0x102
    9768:	b.hi	97a8 <deflateCopy@@Base+0x2a60>  // b.pmore
    976c:	ldr	x0, [sp, #24]
    9770:	bl	765c <deflateCopy@@Base+0x914>
    9774:	ldr	x0, [sp, #24]
    9778:	ldr	w0, [x0, #180]
    977c:	cmp	w0, #0x102
    9780:	b.hi	9798 <deflateCopy@@Base+0x2a50>  // b.pmore
    9784:	ldr	w0, [sp, #20]
    9788:	cmp	w0, #0x0
    978c:	b.ne	9798 <deflateCopy@@Base+0x2a50>  // b.any
    9790:	mov	w0, #0x0                   	// #0
    9794:	b	9ecc <deflateCopy@@Base+0x3184>
    9798:	ldr	x0, [sp, #24]
    979c:	ldr	w0, [x0, #180]
    97a0:	cmp	w0, #0x0
    97a4:	b.eq	9d68 <deflateCopy@@Base+0x3020>  // b.none
    97a8:	ldr	x0, [sp, #24]
    97ac:	str	wzr, [x0, #160]
    97b0:	ldr	x0, [sp, #24]
    97b4:	ldr	w0, [x0, #180]
    97b8:	cmp	w0, #0x2
    97bc:	b.ls	9a00 <deflateCopy@@Base+0x2cb8>  // b.plast
    97c0:	ldr	x0, [sp, #24]
    97c4:	ldr	w0, [x0, #172]
    97c8:	cmp	w0, #0x0
    97cc:	b.eq	9a00 <deflateCopy@@Base+0x2cb8>  // b.none
    97d0:	ldr	x0, [sp, #24]
    97d4:	ldr	x1, [x0, #96]
    97d8:	ldr	x0, [sp, #24]
    97dc:	ldr	w0, [x0, #172]
    97e0:	mov	w0, w0
    97e4:	sub	x0, x0, #0x1
    97e8:	add	x0, x1, x0
    97ec:	str	x0, [sp, #64]
    97f0:	ldr	x0, [sp, #64]
    97f4:	ldrb	w0, [x0]
    97f8:	str	w0, [sp, #60]
    97fc:	ldr	x0, [sp, #64]
    9800:	add	x0, x0, #0x1
    9804:	str	x0, [sp, #64]
    9808:	ldr	x0, [sp, #64]
    980c:	ldrb	w0, [x0]
    9810:	mov	w1, w0
    9814:	ldr	w0, [sp, #60]
    9818:	cmp	w0, w1
    981c:	b.ne	9a00 <deflateCopy@@Base+0x2cb8>  // b.any
    9820:	ldr	x0, [sp, #64]
    9824:	add	x0, x0, #0x1
    9828:	str	x0, [sp, #64]
    982c:	ldr	x0, [sp, #64]
    9830:	ldrb	w0, [x0]
    9834:	mov	w1, w0
    9838:	ldr	w0, [sp, #60]
    983c:	cmp	w0, w1
    9840:	b.ne	9a00 <deflateCopy@@Base+0x2cb8>  // b.any
    9844:	ldr	x0, [sp, #64]
    9848:	add	x0, x0, #0x1
    984c:	str	x0, [sp, #64]
    9850:	ldr	x0, [sp, #64]
    9854:	ldrb	w0, [x0]
    9858:	mov	w1, w0
    985c:	ldr	w0, [sp, #60]
    9860:	cmp	w0, w1
    9864:	b.ne	9a00 <deflateCopy@@Base+0x2cb8>  // b.any
    9868:	ldr	x0, [sp, #24]
    986c:	ldr	x1, [x0, #96]
    9870:	ldr	x0, [sp, #24]
    9874:	ldr	w0, [x0, #172]
    9878:	mov	w0, w0
    987c:	add	x0, x0, #0x102
    9880:	add	x0, x1, x0
    9884:	str	x0, [sp, #48]
    9888:	ldr	x0, [sp, #64]
    988c:	add	x0, x0, #0x1
    9890:	str	x0, [sp, #64]
    9894:	ldr	x0, [sp, #64]
    9898:	ldrb	w0, [x0]
    989c:	mov	w1, w0
    98a0:	ldr	w0, [sp, #60]
    98a4:	cmp	w0, w1
    98a8:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    98ac:	ldr	x0, [sp, #64]
    98b0:	add	x0, x0, #0x1
    98b4:	str	x0, [sp, #64]
    98b8:	ldr	x0, [sp, #64]
    98bc:	ldrb	w0, [x0]
    98c0:	mov	w1, w0
    98c4:	ldr	w0, [sp, #60]
    98c8:	cmp	w0, w1
    98cc:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    98d0:	ldr	x0, [sp, #64]
    98d4:	add	x0, x0, #0x1
    98d8:	str	x0, [sp, #64]
    98dc:	ldr	x0, [sp, #64]
    98e0:	ldrb	w0, [x0]
    98e4:	mov	w1, w0
    98e8:	ldr	w0, [sp, #60]
    98ec:	cmp	w0, w1
    98f0:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    98f4:	ldr	x0, [sp, #64]
    98f8:	add	x0, x0, #0x1
    98fc:	str	x0, [sp, #64]
    9900:	ldr	x0, [sp, #64]
    9904:	ldrb	w0, [x0]
    9908:	mov	w1, w0
    990c:	ldr	w0, [sp, #60]
    9910:	cmp	w0, w1
    9914:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    9918:	ldr	x0, [sp, #64]
    991c:	add	x0, x0, #0x1
    9920:	str	x0, [sp, #64]
    9924:	ldr	x0, [sp, #64]
    9928:	ldrb	w0, [x0]
    992c:	mov	w1, w0
    9930:	ldr	w0, [sp, #60]
    9934:	cmp	w0, w1
    9938:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    993c:	ldr	x0, [sp, #64]
    9940:	add	x0, x0, #0x1
    9944:	str	x0, [sp, #64]
    9948:	ldr	x0, [sp, #64]
    994c:	ldrb	w0, [x0]
    9950:	mov	w1, w0
    9954:	ldr	w0, [sp, #60]
    9958:	cmp	w0, w1
    995c:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    9960:	ldr	x0, [sp, #64]
    9964:	add	x0, x0, #0x1
    9968:	str	x0, [sp, #64]
    996c:	ldr	x0, [sp, #64]
    9970:	ldrb	w0, [x0]
    9974:	mov	w1, w0
    9978:	ldr	w0, [sp, #60]
    997c:	cmp	w0, w1
    9980:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    9984:	ldr	x0, [sp, #64]
    9988:	add	x0, x0, #0x1
    998c:	str	x0, [sp, #64]
    9990:	ldr	x0, [sp, #64]
    9994:	ldrb	w0, [x0]
    9998:	mov	w1, w0
    999c:	ldr	w0, [sp, #60]
    99a0:	cmp	w0, w1
    99a4:	b.ne	99b8 <deflateCopy@@Base+0x2c70>  // b.any
    99a8:	ldr	x1, [sp, #64]
    99ac:	ldr	x0, [sp, #48]
    99b0:	cmp	x1, x0
    99b4:	b.cc	9888 <deflateCopy@@Base+0x2b40>  // b.lo, b.ul, b.last
    99b8:	ldr	x1, [sp, #48]
    99bc:	ldr	x0, [sp, #64]
    99c0:	sub	x0, x1, x0
    99c4:	mov	w1, w0
    99c8:	mov	w0, #0x102                 	// #258
    99cc:	sub	w1, w0, w1
    99d0:	ldr	x0, [sp, #24]
    99d4:	str	w1, [x0, #160]
    99d8:	ldr	x0, [sp, #24]
    99dc:	ldr	w1, [x0, #160]
    99e0:	ldr	x0, [sp, #24]
    99e4:	ldr	w0, [x0, #180]
    99e8:	cmp	w1, w0
    99ec:	b.ls	9a00 <deflateCopy@@Base+0x2cb8>  // b.plast
    99f0:	ldr	x0, [sp, #24]
    99f4:	ldr	w1, [x0, #180]
    99f8:	ldr	x0, [sp, #24]
    99fc:	str	w1, [x0, #160]
    9a00:	ldr	x0, [sp, #24]
    9a04:	ldr	w0, [x0, #160]
    9a08:	cmp	w0, #0x2
    9a0c:	b.ls	9bcc <deflateCopy@@Base+0x2e84>  // b.plast
    9a10:	ldr	x0, [sp, #24]
    9a14:	ldr	w0, [x0, #160]
    9a18:	and	w0, w0, #0xff
    9a1c:	sub	w0, w0, #0x3
    9a20:	strb	w0, [sp, #46]
    9a24:	mov	w0, #0x1                   	// #1
    9a28:	strh	w0, [sp, #44]
    9a2c:	ldr	x0, [sp, #24]
    9a30:	ldr	x1, [x0, #5904]
    9a34:	ldr	x0, [sp, #24]
    9a38:	ldr	w0, [x0, #5900]
    9a3c:	mov	w0, w0
    9a40:	lsl	x0, x0, #1
    9a44:	add	x0, x1, x0
    9a48:	ldrh	w1, [sp, #44]
    9a4c:	strh	w1, [x0]
    9a50:	ldr	x0, [sp, #24]
    9a54:	ldr	x1, [x0, #5888]
    9a58:	ldr	x0, [sp, #24]
    9a5c:	ldr	w0, [x0, #5900]
    9a60:	add	w3, w0, #0x1
    9a64:	ldr	x2, [sp, #24]
    9a68:	str	w3, [x2, #5900]
    9a6c:	mov	w0, w0
    9a70:	add	x0, x1, x0
    9a74:	ldrb	w1, [sp, #46]
    9a78:	strb	w1, [x0]
    9a7c:	ldrh	w0, [sp, #44]
    9a80:	sub	w0, w0, #0x1
    9a84:	strh	w0, [sp, #44]
    9a88:	ldrb	w2, [sp, #46]
    9a8c:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    9a90:	add	x1, x0, #0xf18
    9a94:	sxtw	x0, w2
    9a98:	ldrb	w0, [x1, x0]
    9a9c:	add	w2, w0, #0x101
    9aa0:	ldr	x1, [sp, #24]
    9aa4:	sxtw	x0, w2
    9aa8:	add	x0, x0, #0x34
    9aac:	lsl	x0, x0, #2
    9ab0:	add	x0, x1, x0
    9ab4:	ldrh	w0, [x0, #4]
    9ab8:	add	w0, w0, #0x1
    9abc:	and	w3, w0, #0xffff
    9ac0:	ldr	x1, [sp, #24]
    9ac4:	sxtw	x0, w2
    9ac8:	add	x0, x0, #0x34
    9acc:	lsl	x0, x0, #2
    9ad0:	add	x0, x1, x0
    9ad4:	mov	w1, w3
    9ad8:	strh	w1, [x0, #4]
    9adc:	ldrh	w0, [sp, #44]
    9ae0:	cmp	w0, #0xff
    9ae4:	b.hi	9b04 <deflateCopy@@Base+0x2dbc>  // b.pmore
    9ae8:	ldrh	w2, [sp, #44]
    9aec:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    9af0:	add	x1, x0, #0xd18
    9af4:	sxtw	x0, w2
    9af8:	ldrb	w0, [x1, x0]
    9afc:	mov	w2, w0
    9b00:	b	9b28 <deflateCopy@@Base+0x2de0>
    9b04:	ldrh	w0, [sp, #44]
    9b08:	lsr	w0, w0, #7
    9b0c:	and	w0, w0, #0xffff
    9b10:	add	w2, w0, #0x100
    9b14:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    9b18:	add	x1, x0, #0xd18
    9b1c:	sxtw	x0, w2
    9b20:	ldrb	w0, [x1, x0]
    9b24:	mov	w2, w0
    9b28:	ldr	x1, [sp, #24]
    9b2c:	sxtw	x0, w2
    9b30:	add	x0, x0, #0x270
    9b34:	lsl	x0, x0, #2
    9b38:	add	x0, x1, x0
    9b3c:	ldrh	w0, [x0, #8]
    9b40:	add	w0, w0, #0x1
    9b44:	and	w3, w0, #0xffff
    9b48:	ldr	x1, [sp, #24]
    9b4c:	sxtw	x0, w2
    9b50:	add	x0, x0, #0x270
    9b54:	lsl	x0, x0, #2
    9b58:	add	x0, x1, x0
    9b5c:	mov	w1, w3
    9b60:	strh	w1, [x0, #8]
    9b64:	ldr	x0, [sp, #24]
    9b68:	ldr	w1, [x0, #5900]
    9b6c:	ldr	x0, [sp, #24]
    9b70:	ldr	w0, [x0, #5896]
    9b74:	sub	w0, w0, #0x1
    9b78:	cmp	w1, w0
    9b7c:	cset	w0, eq  // eq = none
    9b80:	and	w0, w0, #0xff
    9b84:	str	w0, [sp, #76]
    9b88:	ldr	x0, [sp, #24]
    9b8c:	ldr	w1, [x0, #180]
    9b90:	ldr	x0, [sp, #24]
    9b94:	ldr	w0, [x0, #160]
    9b98:	sub	w1, w1, w0
    9b9c:	ldr	x0, [sp, #24]
    9ba0:	str	w1, [x0, #180]
    9ba4:	ldr	x0, [sp, #24]
    9ba8:	ldr	w1, [x0, #172]
    9bac:	ldr	x0, [sp, #24]
    9bb0:	ldr	w0, [x0, #160]
    9bb4:	add	w1, w1, w0
    9bb8:	ldr	x0, [sp, #24]
    9bbc:	str	w1, [x0, #172]
    9bc0:	ldr	x0, [sp, #24]
    9bc4:	str	wzr, [x0, #160]
    9bc8:	b	9cc4 <deflateCopy@@Base+0x2f7c>
    9bcc:	ldr	x0, [sp, #24]
    9bd0:	ldr	x1, [x0, #96]
    9bd4:	ldr	x0, [sp, #24]
    9bd8:	ldr	w0, [x0, #172]
    9bdc:	mov	w0, w0
    9be0:	add	x0, x1, x0
    9be4:	ldrb	w0, [x0]
    9be8:	strb	w0, [sp, #47]
    9bec:	ldr	x0, [sp, #24]
    9bf0:	ldr	x1, [x0, #5904]
    9bf4:	ldr	x0, [sp, #24]
    9bf8:	ldr	w0, [x0, #5900]
    9bfc:	mov	w0, w0
    9c00:	lsl	x0, x0, #1
    9c04:	add	x0, x1, x0
    9c08:	strh	wzr, [x0]
    9c0c:	ldr	x0, [sp, #24]
    9c10:	ldr	x1, [x0, #5888]
    9c14:	ldr	x0, [sp, #24]
    9c18:	ldr	w0, [x0, #5900]
    9c1c:	add	w3, w0, #0x1
    9c20:	ldr	x2, [sp, #24]
    9c24:	str	w3, [x2, #5900]
    9c28:	mov	w0, w0
    9c2c:	add	x0, x1, x0
    9c30:	ldrb	w1, [sp, #47]
    9c34:	strb	w1, [x0]
    9c38:	ldrb	w2, [sp, #47]
    9c3c:	ldr	x1, [sp, #24]
    9c40:	sxtw	x0, w2
    9c44:	add	x0, x0, #0x34
    9c48:	lsl	x0, x0, #2
    9c4c:	add	x0, x1, x0
    9c50:	ldrh	w0, [x0, #4]
    9c54:	add	w0, w0, #0x1
    9c58:	and	w3, w0, #0xffff
    9c5c:	ldr	x1, [sp, #24]
    9c60:	sxtw	x0, w2
    9c64:	add	x0, x0, #0x34
    9c68:	lsl	x0, x0, #2
    9c6c:	add	x0, x1, x0
    9c70:	mov	w1, w3
    9c74:	strh	w1, [x0, #4]
    9c78:	ldr	x0, [sp, #24]
    9c7c:	ldr	w1, [x0, #5900]
    9c80:	ldr	x0, [sp, #24]
    9c84:	ldr	w0, [x0, #5896]
    9c88:	sub	w0, w0, #0x1
    9c8c:	cmp	w1, w0
    9c90:	cset	w0, eq  // eq = none
    9c94:	and	w0, w0, #0xff
    9c98:	str	w0, [sp, #76]
    9c9c:	ldr	x0, [sp, #24]
    9ca0:	ldr	w0, [x0, #180]
    9ca4:	sub	w1, w0, #0x1
    9ca8:	ldr	x0, [sp, #24]
    9cac:	str	w1, [x0, #180]
    9cb0:	ldr	x0, [sp, #24]
    9cb4:	ldr	w0, [x0, #172]
    9cb8:	add	w1, w0, #0x1
    9cbc:	ldr	x0, [sp, #24]
    9cc0:	str	w1, [x0, #172]
    9cc4:	ldr	w0, [sp, #76]
    9cc8:	cmp	w0, #0x0
    9ccc:	b.eq	975c <deflateCopy@@Base+0x2a14>  // b.none
    9cd0:	ldr	x0, [sp, #24]
    9cd4:	ldr	x0, [x0, #152]
    9cd8:	cmp	x0, #0x0
    9cdc:	b.lt	9cfc <deflateCopy@@Base+0x2fb4>  // b.tstop
    9ce0:	ldr	x0, [sp, #24]
    9ce4:	ldr	x1, [x0, #96]
    9ce8:	ldr	x0, [sp, #24]
    9cec:	ldr	x0, [x0, #152]
    9cf0:	mov	w0, w0
    9cf4:	add	x0, x1, x0
    9cf8:	b	9d00 <deflateCopy@@Base+0x2fb8>
    9cfc:	mov	x0, #0x0                   	// #0
    9d00:	ldr	x1, [sp, #24]
    9d04:	ldr	w1, [x1, #172]
    9d08:	mov	w2, w1
    9d0c:	ldr	x1, [sp, #24]
    9d10:	ldr	x1, [x1, #152]
    9d14:	sub	x1, x2, x1
    9d18:	mov	w3, #0x0                   	// #0
    9d1c:	mov	x2, x1
    9d20:	mov	x1, x0
    9d24:	ldr	x0, [sp, #24]
    9d28:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    9d2c:	ldr	x0, [sp, #24]
    9d30:	ldr	w0, [x0, #172]
    9d34:	mov	w1, w0
    9d38:	ldr	x0, [sp, #24]
    9d3c:	str	x1, [x0, #152]
    9d40:	ldr	x0, [sp, #24]
    9d44:	ldr	x0, [x0]
    9d48:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    9d4c:	ldr	x0, [sp, #24]
    9d50:	ldr	x0, [x0]
    9d54:	ldr	w0, [x0, #32]
    9d58:	cmp	w0, #0x0
    9d5c:	b.ne	975c <deflateCopy@@Base+0x2a14>  // b.any
    9d60:	mov	w0, #0x0                   	// #0
    9d64:	b	9ecc <deflateCopy@@Base+0x3184>
    9d68:	nop
    9d6c:	ldr	x0, [sp, #24]
    9d70:	str	wzr, [x0, #5932]
    9d74:	ldr	w0, [sp, #20]
    9d78:	cmp	w0, #0x4
    9d7c:	b.ne	9e20 <deflateCopy@@Base+0x30d8>  // b.any
    9d80:	ldr	x0, [sp, #24]
    9d84:	ldr	x0, [x0, #152]
    9d88:	cmp	x0, #0x0
    9d8c:	b.lt	9dac <deflateCopy@@Base+0x3064>  // b.tstop
    9d90:	ldr	x0, [sp, #24]
    9d94:	ldr	x1, [x0, #96]
    9d98:	ldr	x0, [sp, #24]
    9d9c:	ldr	x0, [x0, #152]
    9da0:	mov	w0, w0
    9da4:	add	x0, x1, x0
    9da8:	b	9db0 <deflateCopy@@Base+0x3068>
    9dac:	mov	x0, #0x0                   	// #0
    9db0:	ldr	x1, [sp, #24]
    9db4:	ldr	w1, [x1, #172]
    9db8:	mov	w2, w1
    9dbc:	ldr	x1, [sp, #24]
    9dc0:	ldr	x1, [x1, #152]
    9dc4:	sub	x1, x2, x1
    9dc8:	mov	w3, #0x1                   	// #1
    9dcc:	mov	x2, x1
    9dd0:	mov	x1, x0
    9dd4:	ldr	x0, [sp, #24]
    9dd8:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    9ddc:	ldr	x0, [sp, #24]
    9de0:	ldr	w0, [x0, #172]
    9de4:	mov	w1, w0
    9de8:	ldr	x0, [sp, #24]
    9dec:	str	x1, [x0, #152]
    9df0:	ldr	x0, [sp, #24]
    9df4:	ldr	x0, [x0]
    9df8:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    9dfc:	ldr	x0, [sp, #24]
    9e00:	ldr	x0, [x0]
    9e04:	ldr	w0, [x0, #32]
    9e08:	cmp	w0, #0x0
    9e0c:	b.ne	9e18 <deflateCopy@@Base+0x30d0>  // b.any
    9e10:	mov	w0, #0x2                   	// #2
    9e14:	b	9ecc <deflateCopy@@Base+0x3184>
    9e18:	mov	w0, #0x3                   	// #3
    9e1c:	b	9ecc <deflateCopy@@Base+0x3184>
    9e20:	ldr	x0, [sp, #24]
    9e24:	ldr	w0, [x0, #5900]
    9e28:	cmp	w0, #0x0
    9e2c:	b.eq	9ec8 <deflateCopy@@Base+0x3180>  // b.none
    9e30:	ldr	x0, [sp, #24]
    9e34:	ldr	x0, [x0, #152]
    9e38:	cmp	x0, #0x0
    9e3c:	b.lt	9e5c <deflateCopy@@Base+0x3114>  // b.tstop
    9e40:	ldr	x0, [sp, #24]
    9e44:	ldr	x1, [x0, #96]
    9e48:	ldr	x0, [sp, #24]
    9e4c:	ldr	x0, [x0, #152]
    9e50:	mov	w0, w0
    9e54:	add	x0, x1, x0
    9e58:	b	9e60 <deflateCopy@@Base+0x3118>
    9e5c:	mov	x0, #0x0                   	// #0
    9e60:	ldr	x1, [sp, #24]
    9e64:	ldr	w1, [x1, #172]
    9e68:	mov	w2, w1
    9e6c:	ldr	x1, [sp, #24]
    9e70:	ldr	x1, [x1, #152]
    9e74:	sub	x1, x2, x1
    9e78:	mov	w3, #0x0                   	// #0
    9e7c:	mov	x2, x1
    9e80:	mov	x1, x0
    9e84:	ldr	x0, [sp, #24]
    9e88:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    9e8c:	ldr	x0, [sp, #24]
    9e90:	ldr	w0, [x0, #172]
    9e94:	mov	w1, w0
    9e98:	ldr	x0, [sp, #24]
    9e9c:	str	x1, [x0, #152]
    9ea0:	ldr	x0, [sp, #24]
    9ea4:	ldr	x0, [x0]
    9ea8:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    9eac:	ldr	x0, [sp, #24]
    9eb0:	ldr	x0, [x0]
    9eb4:	ldr	w0, [x0, #32]
    9eb8:	cmp	w0, #0x0
    9ebc:	b.ne	9ec8 <deflateCopy@@Base+0x3180>  // b.any
    9ec0:	mov	w0, #0x0                   	// #0
    9ec4:	b	9ecc <deflateCopy@@Base+0x3184>
    9ec8:	mov	w0, #0x1                   	// #1
    9ecc:	ldp	x29, x30, [sp], #80
    9ed0:	ret
    9ed4:	stp	x29, x30, [sp, #-48]!
    9ed8:	mov	x29, sp
    9edc:	str	x0, [sp, #24]
    9ee0:	str	w1, [sp, #20]
    9ee4:	ldr	x0, [sp, #24]
    9ee8:	ldr	w0, [x0, #180]
    9eec:	cmp	w0, #0x0
    9ef0:	b.ne	9f20 <deflateCopy@@Base+0x31d8>  // b.any
    9ef4:	ldr	x0, [sp, #24]
    9ef8:	bl	765c <deflateCopy@@Base+0x914>
    9efc:	ldr	x0, [sp, #24]
    9f00:	ldr	w0, [x0, #180]
    9f04:	cmp	w0, #0x0
    9f08:	b.ne	9f20 <deflateCopy@@Base+0x31d8>  // b.any
    9f0c:	ldr	w0, [sp, #20]
    9f10:	cmp	w0, #0x0
    9f14:	b.ne	a0c4 <deflateCopy@@Base+0x337c>  // b.any
    9f18:	mov	w0, #0x0                   	// #0
    9f1c:	b	a228 <deflateCopy@@Base+0x34e0>
    9f20:	ldr	x0, [sp, #24]
    9f24:	str	wzr, [x0, #160]
    9f28:	ldr	x0, [sp, #24]
    9f2c:	ldr	x1, [x0, #96]
    9f30:	ldr	x0, [sp, #24]
    9f34:	ldr	w0, [x0, #172]
    9f38:	mov	w0, w0
    9f3c:	add	x0, x1, x0
    9f40:	ldrb	w0, [x0]
    9f44:	strb	w0, [sp, #47]
    9f48:	ldr	x0, [sp, #24]
    9f4c:	ldr	x1, [x0, #5904]
    9f50:	ldr	x0, [sp, #24]
    9f54:	ldr	w0, [x0, #5900]
    9f58:	mov	w0, w0
    9f5c:	lsl	x0, x0, #1
    9f60:	add	x0, x1, x0
    9f64:	strh	wzr, [x0]
    9f68:	ldr	x0, [sp, #24]
    9f6c:	ldr	x1, [x0, #5888]
    9f70:	ldr	x0, [sp, #24]
    9f74:	ldr	w0, [x0, #5900]
    9f78:	add	w3, w0, #0x1
    9f7c:	ldr	x2, [sp, #24]
    9f80:	str	w3, [x2, #5900]
    9f84:	mov	w0, w0
    9f88:	add	x0, x1, x0
    9f8c:	ldrb	w1, [sp, #47]
    9f90:	strb	w1, [x0]
    9f94:	ldrb	w2, [sp, #47]
    9f98:	ldr	x1, [sp, #24]
    9f9c:	sxtw	x0, w2
    9fa0:	add	x0, x0, #0x34
    9fa4:	lsl	x0, x0, #2
    9fa8:	add	x0, x1, x0
    9fac:	ldrh	w0, [x0, #4]
    9fb0:	add	w0, w0, #0x1
    9fb4:	and	w3, w0, #0xffff
    9fb8:	ldr	x1, [sp, #24]
    9fbc:	sxtw	x0, w2
    9fc0:	add	x0, x0, #0x34
    9fc4:	lsl	x0, x0, #2
    9fc8:	add	x0, x1, x0
    9fcc:	mov	w1, w3
    9fd0:	strh	w1, [x0, #4]
    9fd4:	ldr	x0, [sp, #24]
    9fd8:	ldr	w1, [x0, #5900]
    9fdc:	ldr	x0, [sp, #24]
    9fe0:	ldr	w0, [x0, #5896]
    9fe4:	sub	w0, w0, #0x1
    9fe8:	cmp	w1, w0
    9fec:	cset	w0, eq  // eq = none
    9ff0:	and	w0, w0, #0xff
    9ff4:	str	w0, [sp, #40]
    9ff8:	ldr	x0, [sp, #24]
    9ffc:	ldr	w0, [x0, #180]
    a000:	sub	w1, w0, #0x1
    a004:	ldr	x0, [sp, #24]
    a008:	str	w1, [x0, #180]
    a00c:	ldr	x0, [sp, #24]
    a010:	ldr	w0, [x0, #172]
    a014:	add	w1, w0, #0x1
    a018:	ldr	x0, [sp, #24]
    a01c:	str	w1, [x0, #172]
    a020:	ldr	w0, [sp, #40]
    a024:	cmp	w0, #0x0
    a028:	b.eq	9ee4 <deflateCopy@@Base+0x319c>  // b.none
    a02c:	ldr	x0, [sp, #24]
    a030:	ldr	x0, [x0, #152]
    a034:	cmp	x0, #0x0
    a038:	b.lt	a058 <deflateCopy@@Base+0x3310>  // b.tstop
    a03c:	ldr	x0, [sp, #24]
    a040:	ldr	x1, [x0, #96]
    a044:	ldr	x0, [sp, #24]
    a048:	ldr	x0, [x0, #152]
    a04c:	mov	w0, w0
    a050:	add	x0, x1, x0
    a054:	b	a05c <deflateCopy@@Base+0x3314>
    a058:	mov	x0, #0x0                   	// #0
    a05c:	ldr	x1, [sp, #24]
    a060:	ldr	w1, [x1, #172]
    a064:	mov	w2, w1
    a068:	ldr	x1, [sp, #24]
    a06c:	ldr	x1, [x1, #152]
    a070:	sub	x1, x2, x1
    a074:	mov	w3, #0x0                   	// #0
    a078:	mov	x2, x1
    a07c:	mov	x1, x0
    a080:	ldr	x0, [sp, #24]
    a084:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    a088:	ldr	x0, [sp, #24]
    a08c:	ldr	w0, [x0, #172]
    a090:	mov	w1, w0
    a094:	ldr	x0, [sp, #24]
    a098:	str	x1, [x0, #152]
    a09c:	ldr	x0, [sp, #24]
    a0a0:	ldr	x0, [x0]
    a0a4:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    a0a8:	ldr	x0, [sp, #24]
    a0ac:	ldr	x0, [x0]
    a0b0:	ldr	w0, [x0, #32]
    a0b4:	cmp	w0, #0x0
    a0b8:	b.ne	9ee4 <deflateCopy@@Base+0x319c>  // b.any
    a0bc:	mov	w0, #0x0                   	// #0
    a0c0:	b	a228 <deflateCopy@@Base+0x34e0>
    a0c4:	nop
    a0c8:	ldr	x0, [sp, #24]
    a0cc:	str	wzr, [x0, #5932]
    a0d0:	ldr	w0, [sp, #20]
    a0d4:	cmp	w0, #0x4
    a0d8:	b.ne	a17c <deflateCopy@@Base+0x3434>  // b.any
    a0dc:	ldr	x0, [sp, #24]
    a0e0:	ldr	x0, [x0, #152]
    a0e4:	cmp	x0, #0x0
    a0e8:	b.lt	a108 <deflateCopy@@Base+0x33c0>  // b.tstop
    a0ec:	ldr	x0, [sp, #24]
    a0f0:	ldr	x1, [x0, #96]
    a0f4:	ldr	x0, [sp, #24]
    a0f8:	ldr	x0, [x0, #152]
    a0fc:	mov	w0, w0
    a100:	add	x0, x1, x0
    a104:	b	a10c <deflateCopy@@Base+0x33c4>
    a108:	mov	x0, #0x0                   	// #0
    a10c:	ldr	x1, [sp, #24]
    a110:	ldr	w1, [x1, #172]
    a114:	mov	w2, w1
    a118:	ldr	x1, [sp, #24]
    a11c:	ldr	x1, [x1, #152]
    a120:	sub	x1, x2, x1
    a124:	mov	w3, #0x1                   	// #1
    a128:	mov	x2, x1
    a12c:	mov	x1, x0
    a130:	ldr	x0, [sp, #24]
    a134:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    a138:	ldr	x0, [sp, #24]
    a13c:	ldr	w0, [x0, #172]
    a140:	mov	w1, w0
    a144:	ldr	x0, [sp, #24]
    a148:	str	x1, [x0, #152]
    a14c:	ldr	x0, [sp, #24]
    a150:	ldr	x0, [x0]
    a154:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    a158:	ldr	x0, [sp, #24]
    a15c:	ldr	x0, [x0]
    a160:	ldr	w0, [x0, #32]
    a164:	cmp	w0, #0x0
    a168:	b.ne	a174 <deflateCopy@@Base+0x342c>  // b.any
    a16c:	mov	w0, #0x2                   	// #2
    a170:	b	a228 <deflateCopy@@Base+0x34e0>
    a174:	mov	w0, #0x3                   	// #3
    a178:	b	a228 <deflateCopy@@Base+0x34e0>
    a17c:	ldr	x0, [sp, #24]
    a180:	ldr	w0, [x0, #5900]
    a184:	cmp	w0, #0x0
    a188:	b.eq	a224 <deflateCopy@@Base+0x34dc>  // b.none
    a18c:	ldr	x0, [sp, #24]
    a190:	ldr	x0, [x0, #152]
    a194:	cmp	x0, #0x0
    a198:	b.lt	a1b8 <deflateCopy@@Base+0x3470>  // b.tstop
    a19c:	ldr	x0, [sp, #24]
    a1a0:	ldr	x1, [x0, #96]
    a1a4:	ldr	x0, [sp, #24]
    a1a8:	ldr	x0, [x0, #152]
    a1ac:	mov	w0, w0
    a1b0:	add	x0, x1, x0
    a1b4:	b	a1bc <deflateCopy@@Base+0x3474>
    a1b8:	mov	x0, #0x0                   	// #0
    a1bc:	ldr	x1, [sp, #24]
    a1c0:	ldr	w1, [x1, #172]
    a1c4:	mov	w2, w1
    a1c8:	ldr	x1, [sp, #24]
    a1cc:	ldr	x1, [x1, #152]
    a1d0:	sub	x1, x2, x1
    a1d4:	mov	w3, #0x0                   	// #0
    a1d8:	mov	x2, x1
    a1dc:	mov	x1, x0
    a1e0:	ldr	x0, [sp, #24]
    a1e4:	bl	13f54 <inflateCodesUsed@@ZLIB_1.2.9+0x3564>
    a1e8:	ldr	x0, [sp, #24]
    a1ec:	ldr	w0, [x0, #172]
    a1f0:	mov	w1, w0
    a1f4:	ldr	x0, [sp, #24]
    a1f8:	str	x1, [x0, #152]
    a1fc:	ldr	x0, [sp, #24]
    a200:	ldr	x0, [x0]
    a204:	bl	5618 <deflateBound@@ZLIB_1.2.0+0x29c>
    a208:	ldr	x0, [sp, #24]
    a20c:	ldr	x0, [x0]
    a210:	ldr	w0, [x0, #32]
    a214:	cmp	w0, #0x0
    a218:	b.ne	a224 <deflateCopy@@Base+0x34dc>  // b.any
    a21c:	mov	w0, #0x0                   	// #0
    a220:	b	a228 <deflateCopy@@Base+0x34e0>
    a224:	mov	w0, #0x1                   	// #1
    a228:	ldp	x29, x30, [sp], #48
    a22c:	ret

000000000000a230 <inflateBackInit_@@ZLIB_1.2.0>:
    a230:	stp	x29, x30, [sp, #-64]!
    a234:	mov	x29, sp
    a238:	str	x0, [sp, #40]
    a23c:	str	w1, [sp, #36]
    a240:	str	x2, [sp, #24]
    a244:	str	x3, [sp, #16]
    a248:	str	w4, [sp, #32]
    a24c:	ldr	x0, [sp, #16]
    a250:	cmp	x0, #0x0
    a254:	b.eq	a278 <inflateBackInit_@@ZLIB_1.2.0+0x48>  // b.none
    a258:	ldr	x0, [sp, #16]
    a25c:	ldrb	w1, [x0]
    a260:	mov	w0, #0x31                  	// #49
    a264:	cmp	w1, w0
    a268:	b.ne	a278 <inflateBackInit_@@ZLIB_1.2.0+0x48>  // b.any
    a26c:	ldr	w0, [sp, #32]
    a270:	cmp	w0, #0x70
    a274:	b.eq	a280 <inflateBackInit_@@ZLIB_1.2.0+0x50>  // b.none
    a278:	mov	w0, #0xfffffffa            	// #-6
    a27c:	b	a394 <inflateBackInit_@@ZLIB_1.2.0+0x164>
    a280:	ldr	x0, [sp, #40]
    a284:	cmp	x0, #0x0
    a288:	b.eq	a2b0 <inflateBackInit_@@ZLIB_1.2.0+0x80>  // b.none
    a28c:	ldr	x0, [sp, #24]
    a290:	cmp	x0, #0x0
    a294:	b.eq	a2b0 <inflateBackInit_@@ZLIB_1.2.0+0x80>  // b.none
    a298:	ldr	w0, [sp, #36]
    a29c:	cmp	w0, #0x7
    a2a0:	b.le	a2b0 <inflateBackInit_@@ZLIB_1.2.0+0x80>
    a2a4:	ldr	w0, [sp, #36]
    a2a8:	cmp	w0, #0xf
    a2ac:	b.le	a2b8 <inflateBackInit_@@ZLIB_1.2.0+0x88>
    a2b0:	mov	w0, #0xfffffffe            	// #-2
    a2b4:	b	a394 <inflateBackInit_@@ZLIB_1.2.0+0x164>
    a2b8:	ldr	x0, [sp, #40]
    a2bc:	str	xzr, [x0, #48]
    a2c0:	ldr	x0, [sp, #40]
    a2c4:	ldr	x0, [x0, #64]
    a2c8:	cmp	x0, #0x0
    a2cc:	b.ne	a2e8 <inflateBackInit_@@ZLIB_1.2.0+0xb8>  // b.any
    a2d0:	ldr	x0, [sp, #40]
    a2d4:	adrp	x1, 15000 <inflateCodesUsed@@ZLIB_1.2.9+0x4610>
    a2d8:	add	x1, x1, #0x474
    a2dc:	str	x1, [x0, #64]
    a2e0:	ldr	x0, [sp, #40]
    a2e4:	str	xzr, [x0, #80]
    a2e8:	ldr	x0, [sp, #40]
    a2ec:	ldr	x0, [x0, #72]
    a2f0:	cmp	x0, #0x0
    a2f4:	b.ne	a308 <inflateBackInit_@@ZLIB_1.2.0+0xd8>  // b.any
    a2f8:	ldr	x0, [sp, #40]
    a2fc:	adrp	x1, 15000 <inflateCodesUsed@@ZLIB_1.2.9+0x4610>
    a300:	add	x1, x1, #0x4a4
    a304:	str	x1, [x0, #72]
    a308:	ldr	x0, [sp, #40]
    a30c:	ldr	x3, [x0, #64]
    a310:	ldr	x0, [sp, #40]
    a314:	ldr	x0, [x0, #80]
    a318:	mov	w2, #0x1bf8                	// #7160
    a31c:	mov	w1, #0x1                   	// #1
    a320:	blr	x3
    a324:	str	x0, [sp, #56]
    a328:	ldr	x0, [sp, #56]
    a32c:	cmp	x0, #0x0
    a330:	b.ne	a33c <inflateBackInit_@@ZLIB_1.2.0+0x10c>  // b.any
    a334:	mov	w0, #0xfffffffc            	// #-4
    a338:	b	a394 <inflateBackInit_@@ZLIB_1.2.0+0x164>
    a33c:	ldr	x0, [sp, #40]
    a340:	ldr	x1, [sp, #56]
    a344:	str	x1, [x0, #56]
    a348:	ldr	x0, [sp, #56]
    a34c:	mov	w1, #0x8000                	// #32768
    a350:	str	w1, [x0, #28]
    a354:	ldr	w1, [sp, #36]
    a358:	ldr	x0, [sp, #56]
    a35c:	str	w1, [x0, #56]
    a360:	ldr	w0, [sp, #36]
    a364:	mov	w1, #0x1                   	// #1
    a368:	lsl	w1, w1, w0
    a36c:	ldr	x0, [sp, #56]
    a370:	str	w1, [x0, #60]
    a374:	ldr	x0, [sp, #56]
    a378:	ldr	x1, [sp, #24]
    a37c:	str	x1, [x0, #72]
    a380:	ldr	x0, [sp, #56]
    a384:	str	wzr, [x0, #68]
    a388:	ldr	x0, [sp, #56]
    a38c:	str	wzr, [x0, #64]
    a390:	mov	w0, #0x0                   	// #0
    a394:	ldp	x29, x30, [sp], #64
    a398:	ret
    a39c:	sub	sp, sp, #0x10
    a3a0:	str	x0, [sp, #8]
    a3a4:	ldr	x0, [sp, #8]
    a3a8:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    a3ac:	add	x1, x1, #0x160
    a3b0:	str	x1, [x0, #104]
    a3b4:	ldr	x0, [sp, #8]
    a3b8:	mov	w1, #0x9                   	// #9
    a3bc:	str	w1, [x0, #120]
    a3c0:	ldr	x0, [sp, #8]
    a3c4:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    a3c8:	add	x1, x1, #0x960
    a3cc:	str	x1, [x0, #112]
    a3d0:	ldr	x0, [sp, #8]
    a3d4:	mov	w1, #0x5                   	// #5
    a3d8:	str	w1, [x0, #124]
    a3dc:	nop
    a3e0:	add	sp, sp, #0x10
    a3e4:	ret

000000000000a3e8 <inflateBack@@ZLIB_1.2.0>:
    a3e8:	stp	x29, x30, [sp, #-144]!
    a3ec:	mov	x29, sp
    a3f0:	str	x0, [sp, #56]
    a3f4:	str	x1, [sp, #48]
    a3f8:	str	x2, [sp, #40]
    a3fc:	str	x3, [sp, #32]
    a400:	str	x4, [sp, #24]
    a404:	ldr	x0, [sp, #56]
    a408:	cmp	x0, #0x0
    a40c:	b.eq	a420 <inflateBack@@ZLIB_1.2.0+0x38>  // b.none
    a410:	ldr	x0, [sp, #56]
    a414:	ldr	x0, [x0, #56]
    a418:	cmp	x0, #0x0
    a41c:	b.ne	a428 <inflateBack@@ZLIB_1.2.0+0x40>  // b.any
    a420:	mov	w0, #0xfffffffe            	// #-2
    a424:	b	be7c <inflateBack@@ZLIB_1.2.0+0x1a94>
    a428:	ldr	x0, [sp, #56]
    a42c:	ldr	x0, [x0, #56]
    a430:	str	x0, [sp, #88]
    a434:	ldr	x0, [sp, #56]
    a438:	str	xzr, [x0, #48]
    a43c:	ldr	x0, [sp, #88]
    a440:	mov	w1, #0x3f3f                	// #16191
    a444:	str	w1, [x0, #8]
    a448:	ldr	x0, [sp, #88]
    a44c:	str	wzr, [x0, #12]
    a450:	ldr	x0, [sp, #88]
    a454:	str	wzr, [x0, #64]
    a458:	ldr	x0, [sp, #56]
    a45c:	ldr	x0, [x0]
    a460:	str	x0, [sp, #80]
    a464:	ldr	x0, [sp, #80]
    a468:	cmp	x0, #0x0
    a46c:	b.eq	a47c <inflateBack@@ZLIB_1.2.0+0x94>  // b.none
    a470:	ldr	x0, [sp, #56]
    a474:	ldr	w0, [x0, #8]
    a478:	b	a480 <inflateBack@@ZLIB_1.2.0+0x98>
    a47c:	mov	w0, #0x0                   	// #0
    a480:	str	w0, [sp, #132]
    a484:	str	xzr, [sp, #120]
    a488:	str	wzr, [sp, #116]
    a48c:	ldr	x0, [sp, #88]
    a490:	ldr	x0, [x0, #72]
    a494:	str	x0, [sp, #136]
    a498:	ldr	x0, [sp, #88]
    a49c:	ldr	w0, [x0, #60]
    a4a0:	str	w0, [sp, #128]
    a4a4:	ldr	x0, [sp, #88]
    a4a8:	ldr	w0, [x0, #8]
    a4ac:	mov	w1, #0x3f51                	// #16209
    a4b0:	cmp	w0, w1
    a4b4:	b.eq	be3c <inflateBack@@ZLIB_1.2.0+0x1a54>  // b.none
    a4b8:	mov	w1, #0x3f51                	// #16209
    a4bc:	cmp	w0, w1
    a4c0:	b.hi	be48 <inflateBack@@ZLIB_1.2.0+0x1a60>  // b.pmore
    a4c4:	mov	w1, #0x3f50                	// #16208
    a4c8:	cmp	w0, w1
    a4cc:	b.eq	bde0 <inflateBack@@ZLIB_1.2.0+0x19f8>  // b.none
    a4d0:	mov	w1, #0x3f50                	// #16208
    a4d4:	cmp	w0, w1
    a4d8:	b.hi	be48 <inflateBack@@ZLIB_1.2.0+0x1a60>  // b.pmore
    a4dc:	mov	w1, #0x3f48                	// #16200
    a4e0:	cmp	w0, w1
    a4e4:	b.eq	b344 <inflateBack@@ZLIB_1.2.0+0xf5c>  // b.none
    a4e8:	mov	w1, #0x3f48                	// #16200
    a4ec:	cmp	w0, w1
    a4f0:	b.hi	be48 <inflateBack@@ZLIB_1.2.0+0x1a60>  // b.pmore
    a4f4:	mov	w1, #0x3f44                	// #16196
    a4f8:	cmp	w0, w1
    a4fc:	b.eq	a9b4 <inflateBack@@ZLIB_1.2.0+0x5cc>  // b.none
    a500:	mov	w1, #0x3f44                	// #16196
    a504:	cmp	w0, w1
    a508:	b.hi	be48 <inflateBack@@ZLIB_1.2.0+0x1a60>  // b.pmore
    a50c:	mov	w1, #0x3f3f                	// #16191
    a510:	cmp	w0, w1
    a514:	b.eq	a528 <inflateBack@@ZLIB_1.2.0+0x140>  // b.none
    a518:	mov	w1, #0x3f41                	// #16193
    a51c:	cmp	w0, w1
    a520:	b.eq	a6c8 <inflateBack@@ZLIB_1.2.0+0x2e0>  // b.none
    a524:	b	be48 <inflateBack@@ZLIB_1.2.0+0x1a60>
    a528:	ldr	x0, [sp, #88]
    a52c:	ldr	w0, [x0, #12]
    a530:	cmp	w0, #0x0
    a534:	b.eq	a5e8 <inflateBack@@ZLIB_1.2.0+0x200>  // b.none
    a538:	ldr	w0, [sp, #116]
    a53c:	and	w0, w0, #0x7
    a540:	ldr	x1, [sp, #120]
    a544:	lsr	x0, x1, x0
    a548:	str	x0, [sp, #120]
    a54c:	ldr	w0, [sp, #116]
    a550:	and	w0, w0, #0xfffffff8
    a554:	str	w0, [sp, #116]
    a558:	ldr	x0, [sp, #88]
    a55c:	mov	w1, #0x3f50                	// #16208
    a560:	str	w1, [x0, #8]
    a564:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    a568:	ldr	w0, [sp, #132]
    a56c:	cmp	w0, #0x0
    a570:	b.ne	a5a8 <inflateBack@@ZLIB_1.2.0+0x1c0>  // b.any
    a574:	add	x0, sp, #0x50
    a578:	ldr	x2, [sp, #48]
    a57c:	mov	x1, x0
    a580:	ldr	x0, [sp, #40]
    a584:	blr	x2
    a588:	str	w0, [sp, #132]
    a58c:	ldr	w0, [sp, #132]
    a590:	cmp	w0, #0x0
    a594:	b.ne	a5a8 <inflateBack@@ZLIB_1.2.0+0x1c0>  // b.any
    a598:	str	xzr, [sp, #80]
    a59c:	mov	w0, #0xfffffffb            	// #-5
    a5a0:	str	w0, [sp, #96]
    a5a4:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    a5a8:	ldr	w0, [sp, #132]
    a5ac:	sub	w0, w0, #0x1
    a5b0:	str	w0, [sp, #132]
    a5b4:	ldr	x0, [sp, #80]
    a5b8:	add	x1, x0, #0x1
    a5bc:	str	x1, [sp, #80]
    a5c0:	ldrb	w0, [x0]
    a5c4:	and	x1, x0, #0xff
    a5c8:	ldr	w0, [sp, #116]
    a5cc:	lsl	x0, x1, x0
    a5d0:	ldr	x1, [sp, #120]
    a5d4:	add	x0, x1, x0
    a5d8:	str	x0, [sp, #120]
    a5dc:	ldr	w0, [sp, #116]
    a5e0:	add	w0, w0, #0x8
    a5e4:	str	w0, [sp, #116]
    a5e8:	ldr	w0, [sp, #116]
    a5ec:	cmp	w0, #0x2
    a5f0:	b.ls	a568 <inflateBack@@ZLIB_1.2.0+0x180>  // b.plast
    a5f4:	ldr	x0, [sp, #120]
    a5f8:	and	w1, w0, #0x1
    a5fc:	ldr	x0, [sp, #88]
    a600:	str	w1, [x0, #12]
    a604:	ldr	x0, [sp, #120]
    a608:	lsr	x0, x0, #1
    a60c:	str	x0, [sp, #120]
    a610:	ldr	w0, [sp, #116]
    a614:	sub	w0, w0, #0x1
    a618:	str	w0, [sp, #116]
    a61c:	ldr	x0, [sp, #120]
    a620:	and	w0, w0, #0x3
    a624:	cmp	w0, #0x3
    a628:	b.eq	a690 <inflateBack@@ZLIB_1.2.0+0x2a8>  // b.none
    a62c:	cmp	w0, #0x3
    a630:	b.hi	a6ac <inflateBack@@ZLIB_1.2.0+0x2c4>  // b.pmore
    a634:	cmp	w0, #0x2
    a638:	b.eq	a680 <inflateBack@@ZLIB_1.2.0+0x298>  // b.none
    a63c:	cmp	w0, #0x2
    a640:	b.hi	a6ac <inflateBack@@ZLIB_1.2.0+0x2c4>  // b.pmore
    a644:	cmp	w0, #0x0
    a648:	b.eq	a658 <inflateBack@@ZLIB_1.2.0+0x270>  // b.none
    a64c:	cmp	w0, #0x1
    a650:	b.eq	a668 <inflateBack@@ZLIB_1.2.0+0x280>  // b.none
    a654:	b	a6ac <inflateBack@@ZLIB_1.2.0+0x2c4>
    a658:	ldr	x0, [sp, #88]
    a65c:	mov	w1, #0x3f41                	// #16193
    a660:	str	w1, [x0, #8]
    a664:	b	a6ac <inflateBack@@ZLIB_1.2.0+0x2c4>
    a668:	ldr	x0, [sp, #88]
    a66c:	bl	a39c <inflateBackInit_@@ZLIB_1.2.0+0x16c>
    a670:	ldr	x0, [sp, #88]
    a674:	mov	w1, #0x3f48                	// #16200
    a678:	str	w1, [x0, #8]
    a67c:	b	a6ac <inflateBack@@ZLIB_1.2.0+0x2c4>
    a680:	ldr	x0, [sp, #88]
    a684:	mov	w1, #0x3f44                	// #16196
    a688:	str	w1, [x0, #8]
    a68c:	b	a6ac <inflateBack@@ZLIB_1.2.0+0x2c4>
    a690:	ldr	x0, [sp, #56]
    a694:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    a698:	add	x1, x1, #0x8
    a69c:	str	x1, [x0, #48]
    a6a0:	ldr	x0, [sp, #88]
    a6a4:	mov	w1, #0x3f51                	// #16209
    a6a8:	str	w1, [x0, #8]
    a6ac:	ldr	x0, [sp, #120]
    a6b0:	lsr	x0, x0, #2
    a6b4:	str	x0, [sp, #120]
    a6b8:	ldr	w0, [sp, #116]
    a6bc:	sub	w0, w0, #0x2
    a6c0:	str	w0, [sp, #116]
    a6c4:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    a6c8:	ldr	w0, [sp, #116]
    a6cc:	and	w0, w0, #0x7
    a6d0:	ldr	x1, [sp, #120]
    a6d4:	lsr	x0, x1, x0
    a6d8:	str	x0, [sp, #120]
    a6dc:	ldr	w0, [sp, #116]
    a6e0:	and	w0, w0, #0xfffffff8
    a6e4:	str	w0, [sp, #116]
    a6e8:	b	a76c <inflateBack@@ZLIB_1.2.0+0x384>
    a6ec:	ldr	w0, [sp, #132]
    a6f0:	cmp	w0, #0x0
    a6f4:	b.ne	a72c <inflateBack@@ZLIB_1.2.0+0x344>  // b.any
    a6f8:	add	x0, sp, #0x50
    a6fc:	ldr	x2, [sp, #48]
    a700:	mov	x1, x0
    a704:	ldr	x0, [sp, #40]
    a708:	blr	x2
    a70c:	str	w0, [sp, #132]
    a710:	ldr	w0, [sp, #132]
    a714:	cmp	w0, #0x0
    a718:	b.ne	a72c <inflateBack@@ZLIB_1.2.0+0x344>  // b.any
    a71c:	str	xzr, [sp, #80]
    a720:	mov	w0, #0xfffffffb            	// #-5
    a724:	str	w0, [sp, #96]
    a728:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    a72c:	ldr	w0, [sp, #132]
    a730:	sub	w0, w0, #0x1
    a734:	str	w0, [sp, #132]
    a738:	ldr	x0, [sp, #80]
    a73c:	add	x1, x0, #0x1
    a740:	str	x1, [sp, #80]
    a744:	ldrb	w0, [x0]
    a748:	and	x1, x0, #0xff
    a74c:	ldr	w0, [sp, #116]
    a750:	lsl	x0, x1, x0
    a754:	ldr	x1, [sp, #120]
    a758:	add	x0, x1, x0
    a75c:	str	x0, [sp, #120]
    a760:	ldr	w0, [sp, #116]
    a764:	add	w0, w0, #0x8
    a768:	str	w0, [sp, #116]
    a76c:	ldr	w0, [sp, #116]
    a770:	cmp	w0, #0x1f
    a774:	b.ls	a6ec <inflateBack@@ZLIB_1.2.0+0x304>  // b.plast
    a778:	ldr	x0, [sp, #120]
    a77c:	and	x1, x0, #0xffff
    a780:	ldr	x0, [sp, #120]
    a784:	lsr	x0, x0, #16
    a788:	eor	x0, x0, #0xffff
    a78c:	cmp	x1, x0
    a790:	b.eq	a7b4 <inflateBack@@ZLIB_1.2.0+0x3cc>  // b.none
    a794:	ldr	x0, [sp, #56]
    a798:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    a79c:	add	x1, x1, #0x20
    a7a0:	str	x1, [x0, #48]
    a7a4:	ldr	x0, [sp, #88]
    a7a8:	mov	w1, #0x3f51                	// #16209
    a7ac:	str	w1, [x0, #8]
    a7b0:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    a7b4:	ldr	x0, [sp, #120]
    a7b8:	and	w1, w0, #0xffff
    a7bc:	ldr	x0, [sp, #88]
    a7c0:	str	w1, [x0, #92]
    a7c4:	str	xzr, [sp, #120]
    a7c8:	str	wzr, [sp, #116]
    a7cc:	b	a914 <inflateBack@@ZLIB_1.2.0+0x52c>
    a7d0:	ldr	x0, [sp, #88]
    a7d4:	ldr	w0, [x0, #92]
    a7d8:	str	w0, [sp, #112]
    a7dc:	ldr	w0, [sp, #132]
    a7e0:	cmp	w0, #0x0
    a7e4:	b.ne	a81c <inflateBack@@ZLIB_1.2.0+0x434>  // b.any
    a7e8:	add	x0, sp, #0x50
    a7ec:	ldr	x2, [sp, #48]
    a7f0:	mov	x1, x0
    a7f4:	ldr	x0, [sp, #40]
    a7f8:	blr	x2
    a7fc:	str	w0, [sp, #132]
    a800:	ldr	w0, [sp, #132]
    a804:	cmp	w0, #0x0
    a808:	b.ne	a81c <inflateBack@@ZLIB_1.2.0+0x434>  // b.any
    a80c:	str	xzr, [sp, #80]
    a810:	mov	w0, #0xfffffffb            	// #-5
    a814:	str	w0, [sp, #96]
    a818:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    a81c:	ldr	w0, [sp, #128]
    a820:	cmp	w0, #0x0
    a824:	b.ne	a874 <inflateBack@@ZLIB_1.2.0+0x48c>  // b.any
    a828:	ldr	x0, [sp, #88]
    a82c:	ldr	x0, [x0, #72]
    a830:	str	x0, [sp, #136]
    a834:	ldr	x0, [sp, #88]
    a838:	ldr	w0, [x0, #60]
    a83c:	str	w0, [sp, #128]
    a840:	ldr	x0, [sp, #88]
    a844:	ldr	w1, [sp, #128]
    a848:	str	w1, [x0, #64]
    a84c:	ldr	x3, [sp, #32]
    a850:	ldr	w2, [sp, #128]
    a854:	ldr	x1, [sp, #136]
    a858:	ldr	x0, [sp, #24]
    a85c:	blr	x3
    a860:	cmp	w0, #0x0
    a864:	b.eq	a874 <inflateBack@@ZLIB_1.2.0+0x48c>  // b.none
    a868:	mov	w0, #0xfffffffb            	// #-5
    a86c:	str	w0, [sp, #96]
    a870:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    a874:	ldr	w1, [sp, #112]
    a878:	ldr	w0, [sp, #132]
    a87c:	cmp	w1, w0
    a880:	b.ls	a88c <inflateBack@@ZLIB_1.2.0+0x4a4>  // b.plast
    a884:	ldr	w0, [sp, #132]
    a888:	str	w0, [sp, #112]
    a88c:	ldr	w1, [sp, #112]
    a890:	ldr	w0, [sp, #128]
    a894:	cmp	w1, w0
    a898:	b.ls	a8a4 <inflateBack@@ZLIB_1.2.0+0x4bc>  // b.plast
    a89c:	ldr	w0, [sp, #128]
    a8a0:	str	w0, [sp, #112]
    a8a4:	ldr	x0, [sp, #80]
    a8a8:	ldr	w1, [sp, #112]
    a8ac:	mov	x2, x1
    a8b0:	mov	x1, x0
    a8b4:	ldr	x0, [sp, #136]
    a8b8:	bl	23a0 <memcpy@plt>
    a8bc:	ldr	w1, [sp, #132]
    a8c0:	ldr	w0, [sp, #112]
    a8c4:	sub	w0, w1, w0
    a8c8:	str	w0, [sp, #132]
    a8cc:	ldr	x1, [sp, #80]
    a8d0:	ldr	w0, [sp, #112]
    a8d4:	add	x0, x1, x0
    a8d8:	str	x0, [sp, #80]
    a8dc:	ldr	w1, [sp, #128]
    a8e0:	ldr	w0, [sp, #112]
    a8e4:	sub	w0, w1, w0
    a8e8:	str	w0, [sp, #128]
    a8ec:	ldr	w0, [sp, #112]
    a8f0:	ldr	x1, [sp, #136]
    a8f4:	add	x0, x1, x0
    a8f8:	str	x0, [sp, #136]
    a8fc:	ldr	x0, [sp, #88]
    a900:	ldr	w1, [x0, #92]
    a904:	ldr	w0, [sp, #112]
    a908:	sub	w1, w1, w0
    a90c:	ldr	x0, [sp, #88]
    a910:	str	w1, [x0, #92]
    a914:	ldr	x0, [sp, #88]
    a918:	ldr	w0, [x0, #92]
    a91c:	cmp	w0, #0x0
    a920:	b.ne	a7d0 <inflateBack@@ZLIB_1.2.0+0x3e8>  // b.any
    a924:	ldr	x0, [sp, #88]
    a928:	mov	w1, #0x3f3f                	// #16191
    a92c:	str	w1, [x0, #8]
    a930:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    a934:	ldr	w0, [sp, #132]
    a938:	cmp	w0, #0x0
    a93c:	b.ne	a974 <inflateBack@@ZLIB_1.2.0+0x58c>  // b.any
    a940:	add	x0, sp, #0x50
    a944:	ldr	x2, [sp, #48]
    a948:	mov	x1, x0
    a94c:	ldr	x0, [sp, #40]
    a950:	blr	x2
    a954:	str	w0, [sp, #132]
    a958:	ldr	w0, [sp, #132]
    a95c:	cmp	w0, #0x0
    a960:	b.ne	a974 <inflateBack@@ZLIB_1.2.0+0x58c>  // b.any
    a964:	str	xzr, [sp, #80]
    a968:	mov	w0, #0xfffffffb            	// #-5
    a96c:	str	w0, [sp, #96]
    a970:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    a974:	ldr	w0, [sp, #132]
    a978:	sub	w0, w0, #0x1
    a97c:	str	w0, [sp, #132]
    a980:	ldr	x0, [sp, #80]
    a984:	add	x1, x0, #0x1
    a988:	str	x1, [sp, #80]
    a98c:	ldrb	w0, [x0]
    a990:	and	x1, x0, #0xff
    a994:	ldr	w0, [sp, #116]
    a998:	lsl	x0, x1, x0
    a99c:	ldr	x1, [sp, #120]
    a9a0:	add	x0, x1, x0
    a9a4:	str	x0, [sp, #120]
    a9a8:	ldr	w0, [sp, #116]
    a9ac:	add	w0, w0, #0x8
    a9b0:	str	w0, [sp, #116]
    a9b4:	ldr	w0, [sp, #116]
    a9b8:	cmp	w0, #0xd
    a9bc:	b.ls	a934 <inflateBack@@ZLIB_1.2.0+0x54c>  // b.plast
    a9c0:	ldr	x0, [sp, #120]
    a9c4:	and	w0, w0, #0x1f
    a9c8:	add	w1, w0, #0x101
    a9cc:	ldr	x0, [sp, #88]
    a9d0:	str	w1, [x0, #132]
    a9d4:	ldr	x0, [sp, #120]
    a9d8:	lsr	x0, x0, #5
    a9dc:	str	x0, [sp, #120]
    a9e0:	ldr	w0, [sp, #116]
    a9e4:	sub	w0, w0, #0x5
    a9e8:	str	w0, [sp, #116]
    a9ec:	ldr	x0, [sp, #120]
    a9f0:	and	w0, w0, #0x1f
    a9f4:	add	w1, w0, #0x1
    a9f8:	ldr	x0, [sp, #88]
    a9fc:	str	w1, [x0, #136]
    aa00:	ldr	x0, [sp, #120]
    aa04:	lsr	x0, x0, #5
    aa08:	str	x0, [sp, #120]
    aa0c:	ldr	w0, [sp, #116]
    aa10:	sub	w0, w0, #0x5
    aa14:	str	w0, [sp, #116]
    aa18:	ldr	x0, [sp, #120]
    aa1c:	and	w0, w0, #0xf
    aa20:	add	w1, w0, #0x4
    aa24:	ldr	x0, [sp, #88]
    aa28:	str	w1, [x0, #128]
    aa2c:	ldr	x0, [sp, #120]
    aa30:	lsr	x0, x0, #4
    aa34:	str	x0, [sp, #120]
    aa38:	ldr	w0, [sp, #116]
    aa3c:	sub	w0, w0, #0x4
    aa40:	str	w0, [sp, #116]
    aa44:	ldr	x0, [sp, #88]
    aa48:	ldr	w0, [x0, #132]
    aa4c:	cmp	w0, #0x11e
    aa50:	b.hi	aa64 <inflateBack@@ZLIB_1.2.0+0x67c>  // b.pmore
    aa54:	ldr	x0, [sp, #88]
    aa58:	ldr	w0, [x0, #136]
    aa5c:	cmp	w0, #0x1e
    aa60:	b.ls	aa84 <inflateBack@@ZLIB_1.2.0+0x69c>  // b.plast
    aa64:	ldr	x0, [sp, #56]
    aa68:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    aa6c:	add	x1, x1, #0x40
    aa70:	str	x1, [x0, #48]
    aa74:	ldr	x0, [sp, #88]
    aa78:	mov	w1, #0x3f51                	// #16209
    aa7c:	str	w1, [x0, #8]
    aa80:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    aa84:	ldr	x0, [sp, #88]
    aa88:	str	wzr, [x0, #140]
    aa8c:	b	ab88 <inflateBack@@ZLIB_1.2.0+0x7a0>
    aa90:	ldr	w0, [sp, #132]
    aa94:	cmp	w0, #0x0
    aa98:	b.ne	aad0 <inflateBack@@ZLIB_1.2.0+0x6e8>  // b.any
    aa9c:	add	x0, sp, #0x50
    aaa0:	ldr	x2, [sp, #48]
    aaa4:	mov	x1, x0
    aaa8:	ldr	x0, [sp, #40]
    aaac:	blr	x2
    aab0:	str	w0, [sp, #132]
    aab4:	ldr	w0, [sp, #132]
    aab8:	cmp	w0, #0x0
    aabc:	b.ne	aad0 <inflateBack@@ZLIB_1.2.0+0x6e8>  // b.any
    aac0:	str	xzr, [sp, #80]
    aac4:	mov	w0, #0xfffffffb            	// #-5
    aac8:	str	w0, [sp, #96]
    aacc:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    aad0:	ldr	w0, [sp, #132]
    aad4:	sub	w0, w0, #0x1
    aad8:	str	w0, [sp, #132]
    aadc:	ldr	x0, [sp, #80]
    aae0:	add	x1, x0, #0x1
    aae4:	str	x1, [sp, #80]
    aae8:	ldrb	w0, [x0]
    aaec:	and	x1, x0, #0xff
    aaf0:	ldr	w0, [sp, #116]
    aaf4:	lsl	x0, x1, x0
    aaf8:	ldr	x1, [sp, #120]
    aafc:	add	x0, x1, x0
    ab00:	str	x0, [sp, #120]
    ab04:	ldr	w0, [sp, #116]
    ab08:	add	w0, w0, #0x8
    ab0c:	str	w0, [sp, #116]
    ab10:	ldr	w0, [sp, #116]
    ab14:	cmp	w0, #0x2
    ab18:	b.ls	aa90 <inflateBack@@ZLIB_1.2.0+0x6a8>  // b.plast
    ab1c:	ldr	x0, [sp, #120]
    ab20:	and	w1, w0, #0xffff
    ab24:	ldr	x0, [sp, #88]
    ab28:	ldr	w0, [x0, #140]
    ab2c:	add	w3, w0, #0x1
    ab30:	ldr	x2, [sp, #88]
    ab34:	str	w3, [x2, #140]
    ab38:	adrp	x2, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    ab3c:	add	x2, x2, #0x9e0
    ab40:	mov	w0, w0
    ab44:	ldrh	w0, [x2, x0, lsl #1]
    ab48:	mov	w3, w0
    ab4c:	and	w0, w1, #0x7
    ab50:	and	w2, w0, #0xffff
    ab54:	ldr	x1, [sp, #88]
    ab58:	sxtw	x0, w3
    ab5c:	add	x0, x0, #0x48
    ab60:	lsl	x0, x0, #1
    ab64:	add	x0, x1, x0
    ab68:	mov	w1, w2
    ab6c:	strh	w1, [x0, #8]
    ab70:	ldr	x0, [sp, #120]
    ab74:	lsr	x0, x0, #3
    ab78:	str	x0, [sp, #120]
    ab7c:	ldr	w0, [sp, #116]
    ab80:	sub	w0, w0, #0x3
    ab84:	str	w0, [sp, #116]
    ab88:	ldr	x0, [sp, #88]
    ab8c:	ldr	w1, [x0, #140]
    ab90:	ldr	x0, [sp, #88]
    ab94:	ldr	w0, [x0, #128]
    ab98:	cmp	w1, w0
    ab9c:	b.cc	ab10 <inflateBack@@ZLIB_1.2.0+0x728>  // b.lo, b.ul, b.last
    aba0:	b	abe0 <inflateBack@@ZLIB_1.2.0+0x7f8>
    aba4:	ldr	x0, [sp, #88]
    aba8:	ldr	w0, [x0, #140]
    abac:	add	w2, w0, #0x1
    abb0:	ldr	x1, [sp, #88]
    abb4:	str	w2, [x1, #140]
    abb8:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    abbc:	add	x1, x1, #0x9e0
    abc0:	mov	w0, w0
    abc4:	ldrh	w0, [x1, x0, lsl #1]
    abc8:	ldr	x1, [sp, #88]
    abcc:	sxtw	x0, w0
    abd0:	add	x0, x0, #0x48
    abd4:	lsl	x0, x0, #1
    abd8:	add	x0, x1, x0
    abdc:	strh	wzr, [x0, #8]
    abe0:	ldr	x0, [sp, #88]
    abe4:	ldr	w0, [x0, #140]
    abe8:	cmp	w0, #0x12
    abec:	b.ls	aba4 <inflateBack@@ZLIB_1.2.0+0x7bc>  // b.plast
    abf0:	ldr	x0, [sp, #88]
    abf4:	add	x1, x0, #0x558
    abf8:	ldr	x0, [sp, #88]
    abfc:	str	x1, [x0, #144]
    ac00:	ldr	x0, [sp, #88]
    ac04:	ldr	x1, [x0, #144]
    ac08:	ldr	x0, [sp, #88]
    ac0c:	str	x1, [x0, #104]
    ac10:	ldr	x0, [sp, #88]
    ac14:	mov	w1, #0x7                   	// #7
    ac18:	str	w1, [x0, #120]
    ac1c:	ldr	x0, [sp, #88]
    ac20:	add	x1, x0, #0x98
    ac24:	ldr	x0, [sp, #88]
    ac28:	add	x2, x0, #0x90
    ac2c:	ldr	x0, [sp, #88]
    ac30:	add	x3, x0, #0x78
    ac34:	ldr	x0, [sp, #88]
    ac38:	add	x0, x0, #0x318
    ac3c:	mov	x5, x0
    ac40:	mov	x4, x3
    ac44:	mov	x3, x2
    ac48:	mov	w2, #0x13                  	// #19
    ac4c:	mov	w0, #0x0                   	// #0
    ac50:	bl	10a40 <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    ac54:	str	w0, [sp, #96]
    ac58:	ldr	w0, [sp, #96]
    ac5c:	cmp	w0, #0x0
    ac60:	b.eq	ac84 <inflateBack@@ZLIB_1.2.0+0x89c>  // b.none
    ac64:	ldr	x0, [sp, #56]
    ac68:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    ac6c:	add	x1, x1, #0x68
    ac70:	str	x1, [x0, #48]
    ac74:	ldr	x0, [sp, #88]
    ac78:	mov	w1, #0x3f51                	// #16209
    ac7c:	str	w1, [x0, #8]
    ac80:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    ac84:	ldr	x0, [sp, #88]
    ac88:	str	wzr, [x0, #140]
    ac8c:	b	b1ac <inflateBack@@ZLIB_1.2.0+0xdc4>
    ac90:	ldr	x0, [sp, #88]
    ac94:	ldr	x1, [x0, #104]
    ac98:	ldr	x0, [sp, #120]
    ac9c:	mov	w3, w0
    aca0:	ldr	x0, [sp, #88]
    aca4:	ldr	w0, [x0, #120]
    aca8:	mov	w2, #0xffffffff            	// #-1
    acac:	lsl	w0, w2, w0
    acb0:	mvn	w0, w0
    acb4:	and	w0, w3, w0
    acb8:	mov	w0, w0
    acbc:	lsl	x0, x0, #2
    acc0:	add	x0, x1, x0
    acc4:	ldr	w0, [x0]
    acc8:	str	w0, [sp, #72]
    accc:	ldrb	w0, [sp, #73]
    acd0:	mov	w1, w0
    acd4:	ldr	w0, [sp, #116]
    acd8:	cmp	w0, w1
    acdc:	b.cs	ad64 <inflateBack@@ZLIB_1.2.0+0x97c>  // b.hs, b.nlast
    ace0:	ldr	w0, [sp, #132]
    ace4:	cmp	w0, #0x0
    ace8:	b.ne	ad20 <inflateBack@@ZLIB_1.2.0+0x938>  // b.any
    acec:	add	x0, sp, #0x50
    acf0:	ldr	x2, [sp, #48]
    acf4:	mov	x1, x0
    acf8:	ldr	x0, [sp, #40]
    acfc:	blr	x2
    ad00:	str	w0, [sp, #132]
    ad04:	ldr	w0, [sp, #132]
    ad08:	cmp	w0, #0x0
    ad0c:	b.ne	ad20 <inflateBack@@ZLIB_1.2.0+0x938>  // b.any
    ad10:	str	xzr, [sp, #80]
    ad14:	mov	w0, #0xfffffffb            	// #-5
    ad18:	str	w0, [sp, #96]
    ad1c:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    ad20:	ldr	w0, [sp, #132]
    ad24:	sub	w0, w0, #0x1
    ad28:	str	w0, [sp, #132]
    ad2c:	ldr	x0, [sp, #80]
    ad30:	add	x1, x0, #0x1
    ad34:	str	x1, [sp, #80]
    ad38:	ldrb	w0, [x0]
    ad3c:	and	x1, x0, #0xff
    ad40:	ldr	w0, [sp, #116]
    ad44:	lsl	x0, x1, x0
    ad48:	ldr	x1, [sp, #120]
    ad4c:	add	x0, x1, x0
    ad50:	str	x0, [sp, #120]
    ad54:	ldr	w0, [sp, #116]
    ad58:	add	w0, w0, #0x8
    ad5c:	str	w0, [sp, #116]
    ad60:	b	ac90 <inflateBack@@ZLIB_1.2.0+0x8a8>
    ad64:	nop
    ad68:	ldrh	w0, [sp, #74]
    ad6c:	cmp	w0, #0xf
    ad70:	b.hi	add4 <inflateBack@@ZLIB_1.2.0+0x9ec>  // b.pmore
    ad74:	ldrb	w0, [sp, #73]
    ad78:	mov	w1, w0
    ad7c:	ldr	x0, [sp, #120]
    ad80:	lsr	x0, x0, x1
    ad84:	str	x0, [sp, #120]
    ad88:	ldrb	w0, [sp, #73]
    ad8c:	mov	w1, w0
    ad90:	ldr	w0, [sp, #116]
    ad94:	sub	w0, w0, w1
    ad98:	str	w0, [sp, #116]
    ad9c:	ldr	x0, [sp, #88]
    ada0:	ldr	w0, [x0, #140]
    ada4:	add	w2, w0, #0x1
    ada8:	ldr	x1, [sp, #88]
    adac:	str	w2, [x1, #140]
    adb0:	ldrh	w2, [sp, #74]
    adb4:	ldr	x1, [sp, #88]
    adb8:	mov	w0, w0
    adbc:	add	x0, x0, #0x48
    adc0:	lsl	x0, x0, #1
    adc4:	add	x0, x1, x0
    adc8:	mov	w1, w2
    adcc:	strh	w1, [x0, #8]
    add0:	b	b1ac <inflateBack@@ZLIB_1.2.0+0xdc4>
    add4:	ldrh	w0, [sp, #74]
    add8:	cmp	w0, #0x10
    addc:	b.ne	af28 <inflateBack@@ZLIB_1.2.0+0xb40>  // b.any
    ade0:	b	ae64 <inflateBack@@ZLIB_1.2.0+0xa7c>
    ade4:	ldr	w0, [sp, #132]
    ade8:	cmp	w0, #0x0
    adec:	b.ne	ae24 <inflateBack@@ZLIB_1.2.0+0xa3c>  // b.any
    adf0:	add	x0, sp, #0x50
    adf4:	ldr	x2, [sp, #48]
    adf8:	mov	x1, x0
    adfc:	ldr	x0, [sp, #40]
    ae00:	blr	x2
    ae04:	str	w0, [sp, #132]
    ae08:	ldr	w0, [sp, #132]
    ae0c:	cmp	w0, #0x0
    ae10:	b.ne	ae24 <inflateBack@@ZLIB_1.2.0+0xa3c>  // b.any
    ae14:	str	xzr, [sp, #80]
    ae18:	mov	w0, #0xfffffffb            	// #-5
    ae1c:	str	w0, [sp, #96]
    ae20:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    ae24:	ldr	w0, [sp, #132]
    ae28:	sub	w0, w0, #0x1
    ae2c:	str	w0, [sp, #132]
    ae30:	ldr	x0, [sp, #80]
    ae34:	add	x1, x0, #0x1
    ae38:	str	x1, [sp, #80]
    ae3c:	ldrb	w0, [x0]
    ae40:	and	x1, x0, #0xff
    ae44:	ldr	w0, [sp, #116]
    ae48:	lsl	x0, x1, x0
    ae4c:	ldr	x1, [sp, #120]
    ae50:	add	x0, x1, x0
    ae54:	str	x0, [sp, #120]
    ae58:	ldr	w0, [sp, #116]
    ae5c:	add	w0, w0, #0x8
    ae60:	str	w0, [sp, #116]
    ae64:	ldrb	w0, [sp, #73]
    ae68:	add	w0, w0, #0x2
    ae6c:	mov	w1, w0
    ae70:	ldr	w0, [sp, #116]
    ae74:	cmp	w0, w1
    ae78:	b.cc	ade4 <inflateBack@@ZLIB_1.2.0+0x9fc>  // b.lo, b.ul, b.last
    ae7c:	ldrb	w0, [sp, #73]
    ae80:	mov	w1, w0
    ae84:	ldr	x0, [sp, #120]
    ae88:	lsr	x0, x0, x1
    ae8c:	str	x0, [sp, #120]
    ae90:	ldrb	w0, [sp, #73]
    ae94:	mov	w1, w0
    ae98:	ldr	w0, [sp, #116]
    ae9c:	sub	w0, w0, w1
    aea0:	str	w0, [sp, #116]
    aea4:	ldr	x0, [sp, #88]
    aea8:	ldr	w0, [x0, #140]
    aeac:	cmp	w0, #0x0
    aeb0:	b.ne	aed4 <inflateBack@@ZLIB_1.2.0+0xaec>  // b.any
    aeb4:	ldr	x0, [sp, #56]
    aeb8:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    aebc:	add	x1, x1, #0x88
    aec0:	str	x1, [x0, #48]
    aec4:	ldr	x0, [sp, #88]
    aec8:	mov	w1, #0x3f51                	// #16209
    aecc:	str	w1, [x0, #8]
    aed0:	b	b1d0 <inflateBack@@ZLIB_1.2.0+0xde8>
    aed4:	ldr	x0, [sp, #88]
    aed8:	ldr	w0, [x0, #140]
    aedc:	sub	w0, w0, #0x1
    aee0:	ldr	x1, [sp, #88]
    aee4:	mov	w0, w0
    aee8:	add	x0, x0, #0x48
    aeec:	lsl	x0, x0, #1
    aef0:	add	x0, x1, x0
    aef4:	ldrh	w0, [x0, #8]
    aef8:	str	w0, [sp, #100]
    aefc:	ldr	x0, [sp, #120]
    af00:	and	w0, w0, #0x3
    af04:	add	w0, w0, #0x3
    af08:	str	w0, [sp, #112]
    af0c:	ldr	x0, [sp, #120]
    af10:	lsr	x0, x0, #2
    af14:	str	x0, [sp, #120]
    af18:	ldr	w0, [sp, #116]
    af1c:	sub	w0, w0, #0x2
    af20:	str	w0, [sp, #116]
    af24:	b	b114 <inflateBack@@ZLIB_1.2.0+0xd2c>
    af28:	ldrh	w0, [sp, #74]
    af2c:	cmp	w0, #0x11
    af30:	b.ne	b0a8 <inflateBack@@ZLIB_1.2.0+0xcc0>  // b.any
    af34:	b	afb8 <inflateBack@@ZLIB_1.2.0+0xbd0>
    af38:	ldr	w0, [sp, #132]
    af3c:	cmp	w0, #0x0
    af40:	b.ne	af78 <inflateBack@@ZLIB_1.2.0+0xb90>  // b.any
    af44:	add	x0, sp, #0x50
    af48:	ldr	x2, [sp, #48]
    af4c:	mov	x1, x0
    af50:	ldr	x0, [sp, #40]
    af54:	blr	x2
    af58:	str	w0, [sp, #132]
    af5c:	ldr	w0, [sp, #132]
    af60:	cmp	w0, #0x0
    af64:	b.ne	af78 <inflateBack@@ZLIB_1.2.0+0xb90>  // b.any
    af68:	str	xzr, [sp, #80]
    af6c:	mov	w0, #0xfffffffb            	// #-5
    af70:	str	w0, [sp, #96]
    af74:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    af78:	ldr	w0, [sp, #132]
    af7c:	sub	w0, w0, #0x1
    af80:	str	w0, [sp, #132]
    af84:	ldr	x0, [sp, #80]
    af88:	add	x1, x0, #0x1
    af8c:	str	x1, [sp, #80]
    af90:	ldrb	w0, [x0]
    af94:	and	x1, x0, #0xff
    af98:	ldr	w0, [sp, #116]
    af9c:	lsl	x0, x1, x0
    afa0:	ldr	x1, [sp, #120]
    afa4:	add	x0, x1, x0
    afa8:	str	x0, [sp, #120]
    afac:	ldr	w0, [sp, #116]
    afb0:	add	w0, w0, #0x8
    afb4:	str	w0, [sp, #116]
    afb8:	ldrb	w0, [sp, #73]
    afbc:	add	w0, w0, #0x3
    afc0:	mov	w1, w0
    afc4:	ldr	w0, [sp, #116]
    afc8:	cmp	w0, w1
    afcc:	b.cc	af38 <inflateBack@@ZLIB_1.2.0+0xb50>  // b.lo, b.ul, b.last
    afd0:	ldrb	w0, [sp, #73]
    afd4:	mov	w1, w0
    afd8:	ldr	x0, [sp, #120]
    afdc:	lsr	x0, x0, x1
    afe0:	str	x0, [sp, #120]
    afe4:	ldrb	w0, [sp, #73]
    afe8:	mov	w1, w0
    afec:	ldr	w0, [sp, #116]
    aff0:	sub	w0, w0, w1
    aff4:	str	w0, [sp, #116]
    aff8:	str	wzr, [sp, #100]
    affc:	ldr	x0, [sp, #120]
    b000:	and	w0, w0, #0x7
    b004:	add	w0, w0, #0x3
    b008:	str	w0, [sp, #112]
    b00c:	ldr	x0, [sp, #120]
    b010:	lsr	x0, x0, #3
    b014:	str	x0, [sp, #120]
    b018:	ldr	w0, [sp, #116]
    b01c:	sub	w0, w0, #0x3
    b020:	str	w0, [sp, #116]
    b024:	b	b114 <inflateBack@@ZLIB_1.2.0+0xd2c>
    b028:	ldr	w0, [sp, #132]
    b02c:	cmp	w0, #0x0
    b030:	b.ne	b068 <inflateBack@@ZLIB_1.2.0+0xc80>  // b.any
    b034:	add	x0, sp, #0x50
    b038:	ldr	x2, [sp, #48]
    b03c:	mov	x1, x0
    b040:	ldr	x0, [sp, #40]
    b044:	blr	x2
    b048:	str	w0, [sp, #132]
    b04c:	ldr	w0, [sp, #132]
    b050:	cmp	w0, #0x0
    b054:	b.ne	b068 <inflateBack@@ZLIB_1.2.0+0xc80>  // b.any
    b058:	str	xzr, [sp, #80]
    b05c:	mov	w0, #0xfffffffb            	// #-5
    b060:	str	w0, [sp, #96]
    b064:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    b068:	ldr	w0, [sp, #132]
    b06c:	sub	w0, w0, #0x1
    b070:	str	w0, [sp, #132]
    b074:	ldr	x0, [sp, #80]
    b078:	add	x1, x0, #0x1
    b07c:	str	x1, [sp, #80]
    b080:	ldrb	w0, [x0]
    b084:	and	x1, x0, #0xff
    b088:	ldr	w0, [sp, #116]
    b08c:	lsl	x0, x1, x0
    b090:	ldr	x1, [sp, #120]
    b094:	add	x0, x1, x0
    b098:	str	x0, [sp, #120]
    b09c:	ldr	w0, [sp, #116]
    b0a0:	add	w0, w0, #0x8
    b0a4:	str	w0, [sp, #116]
    b0a8:	ldrb	w0, [sp, #73]
    b0ac:	add	w0, w0, #0x7
    b0b0:	mov	w1, w0
    b0b4:	ldr	w0, [sp, #116]
    b0b8:	cmp	w0, w1
    b0bc:	b.cc	b028 <inflateBack@@ZLIB_1.2.0+0xc40>  // b.lo, b.ul, b.last
    b0c0:	ldrb	w0, [sp, #73]
    b0c4:	mov	w1, w0
    b0c8:	ldr	x0, [sp, #120]
    b0cc:	lsr	x0, x0, x1
    b0d0:	str	x0, [sp, #120]
    b0d4:	ldrb	w0, [sp, #73]
    b0d8:	mov	w1, w0
    b0dc:	ldr	w0, [sp, #116]
    b0e0:	sub	w0, w0, w1
    b0e4:	str	w0, [sp, #116]
    b0e8:	str	wzr, [sp, #100]
    b0ec:	ldr	x0, [sp, #120]
    b0f0:	and	w0, w0, #0x7f
    b0f4:	add	w0, w0, #0xb
    b0f8:	str	w0, [sp, #112]
    b0fc:	ldr	x0, [sp, #120]
    b100:	lsr	x0, x0, #7
    b104:	str	x0, [sp, #120]
    b108:	ldr	w0, [sp, #116]
    b10c:	sub	w0, w0, #0x7
    b110:	str	w0, [sp, #116]
    b114:	ldr	x0, [sp, #88]
    b118:	ldr	w1, [x0, #140]
    b11c:	ldr	w0, [sp, #112]
    b120:	add	w1, w1, w0
    b124:	ldr	x0, [sp, #88]
    b128:	ldr	w2, [x0, #132]
    b12c:	ldr	x0, [sp, #88]
    b130:	ldr	w0, [x0, #136]
    b134:	add	w0, w2, w0
    b138:	cmp	w1, w0
    b13c:	b.ls	b198 <inflateBack@@ZLIB_1.2.0+0xdb0>  // b.plast
    b140:	ldr	x0, [sp, #56]
    b144:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    b148:	add	x1, x1, #0x88
    b14c:	str	x1, [x0, #48]
    b150:	ldr	x0, [sp, #88]
    b154:	mov	w1, #0x3f51                	// #16209
    b158:	str	w1, [x0, #8]
    b15c:	b	b1d0 <inflateBack@@ZLIB_1.2.0+0xde8>
    b160:	ldr	x0, [sp, #88]
    b164:	ldr	w0, [x0, #140]
    b168:	add	w2, w0, #0x1
    b16c:	ldr	x1, [sp, #88]
    b170:	str	w2, [x1, #140]
    b174:	ldr	w1, [sp, #100]
    b178:	and	w2, w1, #0xffff
    b17c:	ldr	x1, [sp, #88]
    b180:	mov	w0, w0
    b184:	add	x0, x0, #0x48
    b188:	lsl	x0, x0, #1
    b18c:	add	x0, x1, x0
    b190:	mov	w1, w2
    b194:	strh	w1, [x0, #8]
    b198:	ldr	w0, [sp, #112]
    b19c:	sub	w1, w0, #0x1
    b1a0:	str	w1, [sp, #112]
    b1a4:	cmp	w0, #0x0
    b1a8:	b.ne	b160 <inflateBack@@ZLIB_1.2.0+0xd78>  // b.any
    b1ac:	ldr	x0, [sp, #88]
    b1b0:	ldr	w1, [x0, #140]
    b1b4:	ldr	x0, [sp, #88]
    b1b8:	ldr	w2, [x0, #132]
    b1bc:	ldr	x0, [sp, #88]
    b1c0:	ldr	w0, [x0, #136]
    b1c4:	add	w0, w2, w0
    b1c8:	cmp	w1, w0
    b1cc:	b.cc	ac90 <inflateBack@@ZLIB_1.2.0+0x8a8>  // b.lo, b.ul, b.last
    b1d0:	ldr	x0, [sp, #88]
    b1d4:	ldr	w1, [x0, #8]
    b1d8:	mov	w0, #0x3f51                	// #16209
    b1dc:	cmp	w1, w0
    b1e0:	b.eq	be54 <inflateBack@@ZLIB_1.2.0+0x1a6c>  // b.none
    b1e4:	ldr	x0, [sp, #88]
    b1e8:	ldrh	w0, [x0, #664]
    b1ec:	cmp	w0, #0x0
    b1f0:	b.ne	b214 <inflateBack@@ZLIB_1.2.0+0xe2c>  // b.any
    b1f4:	ldr	x0, [sp, #56]
    b1f8:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    b1fc:	add	x1, x1, #0xa8
    b200:	str	x1, [x0, #48]
    b204:	ldr	x0, [sp, #88]
    b208:	mov	w1, #0x3f51                	// #16209
    b20c:	str	w1, [x0, #8]
    b210:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    b214:	ldr	x0, [sp, #88]
    b218:	add	x1, x0, #0x558
    b21c:	ldr	x0, [sp, #88]
    b220:	str	x1, [x0, #144]
    b224:	ldr	x0, [sp, #88]
    b228:	ldr	x1, [x0, #144]
    b22c:	ldr	x0, [sp, #88]
    b230:	str	x1, [x0, #104]
    b234:	ldr	x0, [sp, #88]
    b238:	mov	w1, #0x9                   	// #9
    b23c:	str	w1, [x0, #120]
    b240:	ldr	x0, [sp, #88]
    b244:	add	x1, x0, #0x98
    b248:	ldr	x0, [sp, #88]
    b24c:	ldr	w2, [x0, #132]
    b250:	ldr	x0, [sp, #88]
    b254:	add	x3, x0, #0x90
    b258:	ldr	x0, [sp, #88]
    b25c:	add	x4, x0, #0x78
    b260:	ldr	x0, [sp, #88]
    b264:	add	x0, x0, #0x318
    b268:	mov	x5, x0
    b26c:	mov	w0, #0x1                   	// #1
    b270:	bl	10a40 <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b274:	str	w0, [sp, #96]
    b278:	ldr	w0, [sp, #96]
    b27c:	cmp	w0, #0x0
    b280:	b.eq	b2a4 <inflateBack@@ZLIB_1.2.0+0xebc>  // b.none
    b284:	ldr	x0, [sp, #56]
    b288:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    b28c:	add	x1, x1, #0xd0
    b290:	str	x1, [x0, #48]
    b294:	ldr	x0, [sp, #88]
    b298:	mov	w1, #0x3f51                	// #16209
    b29c:	str	w1, [x0, #8]
    b2a0:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    b2a4:	ldr	x0, [sp, #88]
    b2a8:	ldr	x1, [x0, #144]
    b2ac:	ldr	x0, [sp, #88]
    b2b0:	str	x1, [x0, #112]
    b2b4:	ldr	x0, [sp, #88]
    b2b8:	mov	w1, #0x6                   	// #6
    b2bc:	str	w1, [x0, #124]
    b2c0:	ldr	x0, [sp, #88]
    b2c4:	add	x1, x0, #0x98
    b2c8:	ldr	x0, [sp, #88]
    b2cc:	ldr	w0, [x0, #132]
    b2d0:	mov	w0, w0
    b2d4:	lsl	x0, x0, #1
    b2d8:	add	x1, x1, x0
    b2dc:	ldr	x0, [sp, #88]
    b2e0:	ldr	w2, [x0, #136]
    b2e4:	ldr	x0, [sp, #88]
    b2e8:	add	x3, x0, #0x90
    b2ec:	ldr	x0, [sp, #88]
    b2f0:	add	x4, x0, #0x7c
    b2f4:	ldr	x0, [sp, #88]
    b2f8:	add	x0, x0, #0x318
    b2fc:	mov	x5, x0
    b300:	mov	w0, #0x2                   	// #2
    b304:	bl	10a40 <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    b308:	str	w0, [sp, #96]
    b30c:	ldr	w0, [sp, #96]
    b310:	cmp	w0, #0x0
    b314:	b.eq	b338 <inflateBack@@ZLIB_1.2.0+0xf50>  // b.none
    b318:	ldr	x0, [sp, #56]
    b31c:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    b320:	add	x1, x1, #0xf0
    b324:	str	x1, [x0, #48]
    b328:	ldr	x0, [sp, #88]
    b32c:	mov	w1, #0x3f51                	// #16209
    b330:	str	w1, [x0, #8]
    b334:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    b338:	ldr	x0, [sp, #88]
    b33c:	mov	w1, #0x3f48                	// #16200
    b340:	str	w1, [x0, #8]
    b344:	ldr	w0, [sp, #132]
    b348:	cmp	w0, #0x5
    b34c:	b.ls	b434 <inflateBack@@ZLIB_1.2.0+0x104c>  // b.plast
    b350:	ldr	w0, [sp, #128]
    b354:	cmp	w0, #0x101
    b358:	b.ls	b434 <inflateBack@@ZLIB_1.2.0+0x104c>  // b.plast
    b35c:	ldr	x0, [sp, #56]
    b360:	ldr	x1, [sp, #136]
    b364:	str	x1, [x0, #24]
    b368:	ldr	x0, [sp, #56]
    b36c:	ldr	w1, [sp, #128]
    b370:	str	w1, [x0, #32]
    b374:	ldr	x1, [sp, #80]
    b378:	ldr	x0, [sp, #56]
    b37c:	str	x1, [x0]
    b380:	ldr	x0, [sp, #56]
    b384:	ldr	w1, [sp, #132]
    b388:	str	w1, [x0, #8]
    b38c:	ldr	x0, [sp, #88]
    b390:	ldr	x1, [sp, #120]
    b394:	str	x1, [x0, #80]
    b398:	ldr	x0, [sp, #88]
    b39c:	ldr	w1, [sp, #116]
    b3a0:	str	w1, [x0, #88]
    b3a4:	ldr	x0, [sp, #88]
    b3a8:	ldr	w1, [x0, #64]
    b3ac:	ldr	x0, [sp, #88]
    b3b0:	ldr	w0, [x0, #60]
    b3b4:	cmp	w1, w0
    b3b8:	b.cs	b3d4 <inflateBack@@ZLIB_1.2.0+0xfec>  // b.hs, b.nlast
    b3bc:	ldr	x0, [sp, #88]
    b3c0:	ldr	w1, [x0, #60]
    b3c4:	ldr	w0, [sp, #128]
    b3c8:	sub	w1, w1, w0
    b3cc:	ldr	x0, [sp, #88]
    b3d0:	str	w1, [x0, #64]
    b3d4:	ldr	x0, [sp, #88]
    b3d8:	ldr	w0, [x0, #60]
    b3dc:	mov	w1, w0
    b3e0:	ldr	x0, [sp, #56]
    b3e4:	bl	befc <inflateBackEnd@@ZLIB_1.2.0+0x78>
    b3e8:	ldr	x0, [sp, #56]
    b3ec:	ldr	x0, [x0, #24]
    b3f0:	str	x0, [sp, #136]
    b3f4:	ldr	x0, [sp, #56]
    b3f8:	ldr	w0, [x0, #32]
    b3fc:	str	w0, [sp, #128]
    b400:	ldr	x0, [sp, #56]
    b404:	ldr	x0, [x0]
    b408:	str	x0, [sp, #80]
    b40c:	ldr	x0, [sp, #56]
    b410:	ldr	w0, [x0, #8]
    b414:	str	w0, [sp, #132]
    b418:	ldr	x0, [sp, #88]
    b41c:	ldr	x0, [x0, #80]
    b420:	str	x0, [sp, #120]
    b424:	ldr	x0, [sp, #88]
    b428:	ldr	w0, [x0, #88]
    b42c:	str	w0, [sp, #116]
    b430:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    b434:	ldr	x0, [sp, #88]
    b438:	ldr	x1, [x0, #104]
    b43c:	ldr	x0, [sp, #120]
    b440:	mov	w3, w0
    b444:	ldr	x0, [sp, #88]
    b448:	ldr	w0, [x0, #120]
    b44c:	mov	w2, #0xffffffff            	// #-1
    b450:	lsl	w0, w2, w0
    b454:	mvn	w0, w0
    b458:	and	w0, w3, w0
    b45c:	mov	w0, w0
    b460:	lsl	x0, x0, #2
    b464:	add	x0, x1, x0
    b468:	ldr	w0, [x0]
    b46c:	str	w0, [sp, #72]
    b470:	ldrb	w0, [sp, #73]
    b474:	mov	w1, w0
    b478:	ldr	w0, [sp, #116]
    b47c:	cmp	w0, w1
    b480:	b.cs	b508 <inflateBack@@ZLIB_1.2.0+0x1120>  // b.hs, b.nlast
    b484:	ldr	w0, [sp, #132]
    b488:	cmp	w0, #0x0
    b48c:	b.ne	b4c4 <inflateBack@@ZLIB_1.2.0+0x10dc>  // b.any
    b490:	add	x0, sp, #0x50
    b494:	ldr	x2, [sp, #48]
    b498:	mov	x1, x0
    b49c:	ldr	x0, [sp, #40]
    b4a0:	blr	x2
    b4a4:	str	w0, [sp, #132]
    b4a8:	ldr	w0, [sp, #132]
    b4ac:	cmp	w0, #0x0
    b4b0:	b.ne	b4c4 <inflateBack@@ZLIB_1.2.0+0x10dc>  // b.any
    b4b4:	str	xzr, [sp, #80]
    b4b8:	mov	w0, #0xfffffffb            	// #-5
    b4bc:	str	w0, [sp, #96]
    b4c0:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    b4c4:	ldr	w0, [sp, #132]
    b4c8:	sub	w0, w0, #0x1
    b4cc:	str	w0, [sp, #132]
    b4d0:	ldr	x0, [sp, #80]
    b4d4:	add	x1, x0, #0x1
    b4d8:	str	x1, [sp, #80]
    b4dc:	ldrb	w0, [x0]
    b4e0:	and	x1, x0, #0xff
    b4e4:	ldr	w0, [sp, #116]
    b4e8:	lsl	x0, x1, x0
    b4ec:	ldr	x1, [sp, #120]
    b4f0:	add	x0, x1, x0
    b4f4:	str	x0, [sp, #120]
    b4f8:	ldr	w0, [sp, #116]
    b4fc:	add	w0, w0, #0x8
    b500:	str	w0, [sp, #116]
    b504:	b	b434 <inflateBack@@ZLIB_1.2.0+0x104c>
    b508:	nop
    b50c:	ldrb	w0, [sp, #72]
    b510:	cmp	w0, #0x0
    b514:	b.eq	b658 <inflateBack@@ZLIB_1.2.0+0x1270>  // b.none
    b518:	ldrb	w0, [sp, #72]
    b51c:	and	w0, w0, #0xf0
    b520:	cmp	w0, #0x0
    b524:	b.ne	b658 <inflateBack@@ZLIB_1.2.0+0x1270>  // b.any
    b528:	ldr	w0, [sp, #72]
    b52c:	str	w0, [sp, #64]
    b530:	ldr	x0, [sp, #88]
    b534:	ldr	x1, [x0, #104]
    b538:	ldrh	w0, [sp, #66]
    b53c:	mov	w3, w0
    b540:	ldr	x0, [sp, #120]
    b544:	mov	w4, w0
    b548:	ldrb	w0, [sp, #65]
    b54c:	mov	w2, w0
    b550:	ldrb	w0, [sp, #64]
    b554:	add	w0, w2, w0
    b558:	mov	w2, #0xffffffff            	// #-1
    b55c:	lsl	w0, w2, w0
    b560:	mvn	w0, w0
    b564:	and	w0, w4, w0
    b568:	ldrb	w2, [sp, #65]
    b56c:	lsr	w0, w0, w2
    b570:	add	w0, w3, w0
    b574:	mov	w0, w0
    b578:	lsl	x0, x0, #2
    b57c:	add	x0, x1, x0
    b580:	ldr	w0, [x0]
    b584:	str	w0, [sp, #72]
    b588:	ldrb	w0, [sp, #65]
    b58c:	mov	w1, w0
    b590:	ldrb	w0, [sp, #73]
    b594:	add	w0, w1, w0
    b598:	mov	w1, w0
    b59c:	ldr	w0, [sp, #116]
    b5a0:	cmp	w0, w1
    b5a4:	b.cs	b62c <inflateBack@@ZLIB_1.2.0+0x1244>  // b.hs, b.nlast
    b5a8:	ldr	w0, [sp, #132]
    b5ac:	cmp	w0, #0x0
    b5b0:	b.ne	b5e8 <inflateBack@@ZLIB_1.2.0+0x1200>  // b.any
    b5b4:	add	x0, sp, #0x50
    b5b8:	ldr	x2, [sp, #48]
    b5bc:	mov	x1, x0
    b5c0:	ldr	x0, [sp, #40]
    b5c4:	blr	x2
    b5c8:	str	w0, [sp, #132]
    b5cc:	ldr	w0, [sp, #132]
    b5d0:	cmp	w0, #0x0
    b5d4:	b.ne	b5e8 <inflateBack@@ZLIB_1.2.0+0x1200>  // b.any
    b5d8:	str	xzr, [sp, #80]
    b5dc:	mov	w0, #0xfffffffb            	// #-5
    b5e0:	str	w0, [sp, #96]
    b5e4:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    b5e8:	ldr	w0, [sp, #132]
    b5ec:	sub	w0, w0, #0x1
    b5f0:	str	w0, [sp, #132]
    b5f4:	ldr	x0, [sp, #80]
    b5f8:	add	x1, x0, #0x1
    b5fc:	str	x1, [sp, #80]
    b600:	ldrb	w0, [x0]
    b604:	and	x1, x0, #0xff
    b608:	ldr	w0, [sp, #116]
    b60c:	lsl	x0, x1, x0
    b610:	ldr	x1, [sp, #120]
    b614:	add	x0, x1, x0
    b618:	str	x0, [sp, #120]
    b61c:	ldr	w0, [sp, #116]
    b620:	add	w0, w0, #0x8
    b624:	str	w0, [sp, #116]
    b628:	b	b530 <inflateBack@@ZLIB_1.2.0+0x1148>
    b62c:	nop
    b630:	ldrb	w0, [sp, #65]
    b634:	mov	w1, w0
    b638:	ldr	x0, [sp, #120]
    b63c:	lsr	x0, x0, x1
    b640:	str	x0, [sp, #120]
    b644:	ldrb	w0, [sp, #65]
    b648:	mov	w1, w0
    b64c:	ldr	w0, [sp, #116]
    b650:	sub	w0, w0, w1
    b654:	str	w0, [sp, #116]
    b658:	ldrb	w0, [sp, #73]
    b65c:	mov	w1, w0
    b660:	ldr	x0, [sp, #120]
    b664:	lsr	x0, x0, x1
    b668:	str	x0, [sp, #120]
    b66c:	ldrb	w0, [sp, #73]
    b670:	mov	w1, w0
    b674:	ldr	w0, [sp, #116]
    b678:	sub	w0, w0, w1
    b67c:	str	w0, [sp, #116]
    b680:	ldrh	w0, [sp, #74]
    b684:	mov	w1, w0
    b688:	ldr	x0, [sp, #88]
    b68c:	str	w1, [x0, #92]
    b690:	ldrb	w0, [sp, #72]
    b694:	cmp	w0, #0x0
    b698:	b.ne	b72c <inflateBack@@ZLIB_1.2.0+0x1344>  // b.any
    b69c:	ldr	w0, [sp, #128]
    b6a0:	cmp	w0, #0x0
    b6a4:	b.ne	b6f4 <inflateBack@@ZLIB_1.2.0+0x130c>  // b.any
    b6a8:	ldr	x0, [sp, #88]
    b6ac:	ldr	x0, [x0, #72]
    b6b0:	str	x0, [sp, #136]
    b6b4:	ldr	x0, [sp, #88]
    b6b8:	ldr	w0, [x0, #60]
    b6bc:	str	w0, [sp, #128]
    b6c0:	ldr	x0, [sp, #88]
    b6c4:	ldr	w1, [sp, #128]
    b6c8:	str	w1, [x0, #64]
    b6cc:	ldr	x3, [sp, #32]
    b6d0:	ldr	w2, [sp, #128]
    b6d4:	ldr	x1, [sp, #136]
    b6d8:	ldr	x0, [sp, #24]
    b6dc:	blr	x3
    b6e0:	cmp	w0, #0x0
    b6e4:	b.eq	b6f4 <inflateBack@@ZLIB_1.2.0+0x130c>  // b.none
    b6e8:	mov	w0, #0xfffffffb            	// #-5
    b6ec:	str	w0, [sp, #96]
    b6f0:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    b6f4:	ldr	x0, [sp, #88]
    b6f8:	ldr	w2, [x0, #92]
    b6fc:	ldr	x0, [sp, #136]
    b700:	add	x1, x0, #0x1
    b704:	str	x1, [sp, #136]
    b708:	and	w1, w2, #0xff
    b70c:	strb	w1, [x0]
    b710:	ldr	w0, [sp, #128]
    b714:	sub	w0, w0, #0x1
    b718:	str	w0, [sp, #128]
    b71c:	ldr	x0, [sp, #88]
    b720:	mov	w1, #0x3f48                	// #16200
    b724:	str	w1, [x0, #8]
    b728:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    b72c:	ldrb	w0, [sp, #72]
    b730:	and	w0, w0, #0x20
    b734:	cmp	w0, #0x0
    b738:	b.eq	b74c <inflateBack@@ZLIB_1.2.0+0x1364>  // b.none
    b73c:	ldr	x0, [sp, #88]
    b740:	mov	w1, #0x3f3f                	// #16191
    b744:	str	w1, [x0, #8]
    b748:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    b74c:	ldrb	w0, [sp, #72]
    b750:	and	w0, w0, #0x40
    b754:	cmp	w0, #0x0
    b758:	b.eq	b77c <inflateBack@@ZLIB_1.2.0+0x1394>  // b.none
    b75c:	ldr	x0, [sp, #56]
    b760:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    b764:	add	x1, x1, #0x108
    b768:	str	x1, [x0, #48]
    b76c:	ldr	x0, [sp, #88]
    b770:	mov	w1, #0x3f51                	// #16209
    b774:	str	w1, [x0, #8]
    b778:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    b77c:	ldrb	w0, [sp, #72]
    b780:	and	w1, w0, #0xf
    b784:	ldr	x0, [sp, #88]
    b788:	str	w1, [x0, #100]
    b78c:	ldr	x0, [sp, #88]
    b790:	ldr	w0, [x0, #100]
    b794:	cmp	w0, #0x0
    b798:	b.eq	b890 <inflateBack@@ZLIB_1.2.0+0x14a8>  // b.none
    b79c:	b	b820 <inflateBack@@ZLIB_1.2.0+0x1438>
    b7a0:	ldr	w0, [sp, #132]
    b7a4:	cmp	w0, #0x0
    b7a8:	b.ne	b7e0 <inflateBack@@ZLIB_1.2.0+0x13f8>  // b.any
    b7ac:	add	x0, sp, #0x50
    b7b0:	ldr	x2, [sp, #48]
    b7b4:	mov	x1, x0
    b7b8:	ldr	x0, [sp, #40]
    b7bc:	blr	x2
    b7c0:	str	w0, [sp, #132]
    b7c4:	ldr	w0, [sp, #132]
    b7c8:	cmp	w0, #0x0
    b7cc:	b.ne	b7e0 <inflateBack@@ZLIB_1.2.0+0x13f8>  // b.any
    b7d0:	str	xzr, [sp, #80]
    b7d4:	mov	w0, #0xfffffffb            	// #-5
    b7d8:	str	w0, [sp, #96]
    b7dc:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    b7e0:	ldr	w0, [sp, #132]
    b7e4:	sub	w0, w0, #0x1
    b7e8:	str	w0, [sp, #132]
    b7ec:	ldr	x0, [sp, #80]
    b7f0:	add	x1, x0, #0x1
    b7f4:	str	x1, [sp, #80]
    b7f8:	ldrb	w0, [x0]
    b7fc:	and	x1, x0, #0xff
    b800:	ldr	w0, [sp, #116]
    b804:	lsl	x0, x1, x0
    b808:	ldr	x1, [sp, #120]
    b80c:	add	x0, x1, x0
    b810:	str	x0, [sp, #120]
    b814:	ldr	w0, [sp, #116]
    b818:	add	w0, w0, #0x8
    b81c:	str	w0, [sp, #116]
    b820:	ldr	x0, [sp, #88]
    b824:	ldr	w0, [x0, #100]
    b828:	ldr	w1, [sp, #116]
    b82c:	cmp	w1, w0
    b830:	b.cc	b7a0 <inflateBack@@ZLIB_1.2.0+0x13b8>  // b.lo, b.ul, b.last
    b834:	ldr	x0, [sp, #88]
    b838:	ldr	w1, [x0, #92]
    b83c:	ldr	x0, [sp, #120]
    b840:	mov	w3, w0
    b844:	ldr	x0, [sp, #88]
    b848:	ldr	w0, [x0, #100]
    b84c:	mov	w2, #0xffffffff            	// #-1
    b850:	lsl	w0, w2, w0
    b854:	mvn	w0, w0
    b858:	and	w0, w3, w0
    b85c:	add	w1, w1, w0
    b860:	ldr	x0, [sp, #88]
    b864:	str	w1, [x0, #92]
    b868:	ldr	x0, [sp, #88]
    b86c:	ldr	w0, [x0, #100]
    b870:	ldr	x1, [sp, #120]
    b874:	lsr	x0, x1, x0
    b878:	str	x0, [sp, #120]
    b87c:	ldr	x0, [sp, #88]
    b880:	ldr	w0, [x0, #100]
    b884:	ldr	w1, [sp, #116]
    b888:	sub	w0, w1, w0
    b88c:	str	w0, [sp, #116]
    b890:	ldr	x0, [sp, #88]
    b894:	ldr	x1, [x0, #112]
    b898:	ldr	x0, [sp, #120]
    b89c:	mov	w3, w0
    b8a0:	ldr	x0, [sp, #88]
    b8a4:	ldr	w0, [x0, #124]
    b8a8:	mov	w2, #0xffffffff            	// #-1
    b8ac:	lsl	w0, w2, w0
    b8b0:	mvn	w0, w0
    b8b4:	and	w0, w3, w0
    b8b8:	mov	w0, w0
    b8bc:	lsl	x0, x0, #2
    b8c0:	add	x0, x1, x0
    b8c4:	ldr	w0, [x0]
    b8c8:	str	w0, [sp, #72]
    b8cc:	ldrb	w0, [sp, #73]
    b8d0:	mov	w1, w0
    b8d4:	ldr	w0, [sp, #116]
    b8d8:	cmp	w0, w1
    b8dc:	b.cs	b964 <inflateBack@@ZLIB_1.2.0+0x157c>  // b.hs, b.nlast
    b8e0:	ldr	w0, [sp, #132]
    b8e4:	cmp	w0, #0x0
    b8e8:	b.ne	b920 <inflateBack@@ZLIB_1.2.0+0x1538>  // b.any
    b8ec:	add	x0, sp, #0x50
    b8f0:	ldr	x2, [sp, #48]
    b8f4:	mov	x1, x0
    b8f8:	ldr	x0, [sp, #40]
    b8fc:	blr	x2
    b900:	str	w0, [sp, #132]
    b904:	ldr	w0, [sp, #132]
    b908:	cmp	w0, #0x0
    b90c:	b.ne	b920 <inflateBack@@ZLIB_1.2.0+0x1538>  // b.any
    b910:	str	xzr, [sp, #80]
    b914:	mov	w0, #0xfffffffb            	// #-5
    b918:	str	w0, [sp, #96]
    b91c:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    b920:	ldr	w0, [sp, #132]
    b924:	sub	w0, w0, #0x1
    b928:	str	w0, [sp, #132]
    b92c:	ldr	x0, [sp, #80]
    b930:	add	x1, x0, #0x1
    b934:	str	x1, [sp, #80]
    b938:	ldrb	w0, [x0]
    b93c:	and	x1, x0, #0xff
    b940:	ldr	w0, [sp, #116]
    b944:	lsl	x0, x1, x0
    b948:	ldr	x1, [sp, #120]
    b94c:	add	x0, x1, x0
    b950:	str	x0, [sp, #120]
    b954:	ldr	w0, [sp, #116]
    b958:	add	w0, w0, #0x8
    b95c:	str	w0, [sp, #116]
    b960:	b	b890 <inflateBack@@ZLIB_1.2.0+0x14a8>
    b964:	nop
    b968:	ldrb	w0, [sp, #72]
    b96c:	and	w0, w0, #0xf0
    b970:	cmp	w0, #0x0
    b974:	b.ne	baa8 <inflateBack@@ZLIB_1.2.0+0x16c0>  // b.any
    b978:	ldr	w0, [sp, #72]
    b97c:	str	w0, [sp, #64]
    b980:	ldr	x0, [sp, #88]
    b984:	ldr	x1, [x0, #112]
    b988:	ldrh	w0, [sp, #66]
    b98c:	mov	w3, w0
    b990:	ldr	x0, [sp, #120]
    b994:	mov	w4, w0
    b998:	ldrb	w0, [sp, #65]
    b99c:	mov	w2, w0
    b9a0:	ldrb	w0, [sp, #64]
    b9a4:	add	w0, w2, w0
    b9a8:	mov	w2, #0xffffffff            	// #-1
    b9ac:	lsl	w0, w2, w0
    b9b0:	mvn	w0, w0
    b9b4:	and	w0, w4, w0
    b9b8:	ldrb	w2, [sp, #65]
    b9bc:	lsr	w0, w0, w2
    b9c0:	add	w0, w3, w0
    b9c4:	mov	w0, w0
    b9c8:	lsl	x0, x0, #2
    b9cc:	add	x0, x1, x0
    b9d0:	ldr	w0, [x0]
    b9d4:	str	w0, [sp, #72]
    b9d8:	ldrb	w0, [sp, #65]
    b9dc:	mov	w1, w0
    b9e0:	ldrb	w0, [sp, #73]
    b9e4:	add	w0, w1, w0
    b9e8:	mov	w1, w0
    b9ec:	ldr	w0, [sp, #116]
    b9f0:	cmp	w0, w1
    b9f4:	b.cs	ba7c <inflateBack@@ZLIB_1.2.0+0x1694>  // b.hs, b.nlast
    b9f8:	ldr	w0, [sp, #132]
    b9fc:	cmp	w0, #0x0
    ba00:	b.ne	ba38 <inflateBack@@ZLIB_1.2.0+0x1650>  // b.any
    ba04:	add	x0, sp, #0x50
    ba08:	ldr	x2, [sp, #48]
    ba0c:	mov	x1, x0
    ba10:	ldr	x0, [sp, #40]
    ba14:	blr	x2
    ba18:	str	w0, [sp, #132]
    ba1c:	ldr	w0, [sp, #132]
    ba20:	cmp	w0, #0x0
    ba24:	b.ne	ba38 <inflateBack@@ZLIB_1.2.0+0x1650>  // b.any
    ba28:	str	xzr, [sp, #80]
    ba2c:	mov	w0, #0xfffffffb            	// #-5
    ba30:	str	w0, [sp, #96]
    ba34:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    ba38:	ldr	w0, [sp, #132]
    ba3c:	sub	w0, w0, #0x1
    ba40:	str	w0, [sp, #132]
    ba44:	ldr	x0, [sp, #80]
    ba48:	add	x1, x0, #0x1
    ba4c:	str	x1, [sp, #80]
    ba50:	ldrb	w0, [x0]
    ba54:	and	x1, x0, #0xff
    ba58:	ldr	w0, [sp, #116]
    ba5c:	lsl	x0, x1, x0
    ba60:	ldr	x1, [sp, #120]
    ba64:	add	x0, x1, x0
    ba68:	str	x0, [sp, #120]
    ba6c:	ldr	w0, [sp, #116]
    ba70:	add	w0, w0, #0x8
    ba74:	str	w0, [sp, #116]
    ba78:	b	b980 <inflateBack@@ZLIB_1.2.0+0x1598>
    ba7c:	nop
    ba80:	ldrb	w0, [sp, #65]
    ba84:	mov	w1, w0
    ba88:	ldr	x0, [sp, #120]
    ba8c:	lsr	x0, x0, x1
    ba90:	str	x0, [sp, #120]
    ba94:	ldrb	w0, [sp, #65]
    ba98:	mov	w1, w0
    ba9c:	ldr	w0, [sp, #116]
    baa0:	sub	w0, w0, w1
    baa4:	str	w0, [sp, #116]
    baa8:	ldrb	w0, [sp, #73]
    baac:	mov	w1, w0
    bab0:	ldr	x0, [sp, #120]
    bab4:	lsr	x0, x0, x1
    bab8:	str	x0, [sp, #120]
    babc:	ldrb	w0, [sp, #73]
    bac0:	mov	w1, w0
    bac4:	ldr	w0, [sp, #116]
    bac8:	sub	w0, w0, w1
    bacc:	str	w0, [sp, #116]
    bad0:	ldrb	w0, [sp, #72]
    bad4:	and	w0, w0, #0x40
    bad8:	cmp	w0, #0x0
    badc:	b.eq	bb00 <inflateBack@@ZLIB_1.2.0+0x1718>  // b.none
    bae0:	ldr	x0, [sp, #56]
    bae4:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    bae8:	add	x1, x1, #0x128
    baec:	str	x1, [x0, #48]
    baf0:	ldr	x0, [sp, #88]
    baf4:	mov	w1, #0x3f51                	// #16209
    baf8:	str	w1, [x0, #8]
    bafc:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    bb00:	ldrh	w0, [sp, #74]
    bb04:	mov	w1, w0
    bb08:	ldr	x0, [sp, #88]
    bb0c:	str	w1, [x0, #96]
    bb10:	ldrb	w0, [sp, #72]
    bb14:	and	w1, w0, #0xf
    bb18:	ldr	x0, [sp, #88]
    bb1c:	str	w1, [x0, #100]
    bb20:	ldr	x0, [sp, #88]
    bb24:	ldr	w0, [x0, #100]
    bb28:	cmp	w0, #0x0
    bb2c:	b.eq	bc24 <inflateBack@@ZLIB_1.2.0+0x183c>  // b.none
    bb30:	b	bbb4 <inflateBack@@ZLIB_1.2.0+0x17cc>
    bb34:	ldr	w0, [sp, #132]
    bb38:	cmp	w0, #0x0
    bb3c:	b.ne	bb74 <inflateBack@@ZLIB_1.2.0+0x178c>  // b.any
    bb40:	add	x0, sp, #0x50
    bb44:	ldr	x2, [sp, #48]
    bb48:	mov	x1, x0
    bb4c:	ldr	x0, [sp, #40]
    bb50:	blr	x2
    bb54:	str	w0, [sp, #132]
    bb58:	ldr	w0, [sp, #132]
    bb5c:	cmp	w0, #0x0
    bb60:	b.ne	bb74 <inflateBack@@ZLIB_1.2.0+0x178c>  // b.any
    bb64:	str	xzr, [sp, #80]
    bb68:	mov	w0, #0xfffffffb            	// #-5
    bb6c:	str	w0, [sp, #96]
    bb70:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    bb74:	ldr	w0, [sp, #132]
    bb78:	sub	w0, w0, #0x1
    bb7c:	str	w0, [sp, #132]
    bb80:	ldr	x0, [sp, #80]
    bb84:	add	x1, x0, #0x1
    bb88:	str	x1, [sp, #80]
    bb8c:	ldrb	w0, [x0]
    bb90:	and	x1, x0, #0xff
    bb94:	ldr	w0, [sp, #116]
    bb98:	lsl	x0, x1, x0
    bb9c:	ldr	x1, [sp, #120]
    bba0:	add	x0, x1, x0
    bba4:	str	x0, [sp, #120]
    bba8:	ldr	w0, [sp, #116]
    bbac:	add	w0, w0, #0x8
    bbb0:	str	w0, [sp, #116]
    bbb4:	ldr	x0, [sp, #88]
    bbb8:	ldr	w0, [x0, #100]
    bbbc:	ldr	w1, [sp, #116]
    bbc0:	cmp	w1, w0
    bbc4:	b.cc	bb34 <inflateBack@@ZLIB_1.2.0+0x174c>  // b.lo, b.ul, b.last
    bbc8:	ldr	x0, [sp, #88]
    bbcc:	ldr	w1, [x0, #96]
    bbd0:	ldr	x0, [sp, #120]
    bbd4:	mov	w3, w0
    bbd8:	ldr	x0, [sp, #88]
    bbdc:	ldr	w0, [x0, #100]
    bbe0:	mov	w2, #0xffffffff            	// #-1
    bbe4:	lsl	w0, w2, w0
    bbe8:	mvn	w0, w0
    bbec:	and	w0, w3, w0
    bbf0:	add	w1, w1, w0
    bbf4:	ldr	x0, [sp, #88]
    bbf8:	str	w1, [x0, #96]
    bbfc:	ldr	x0, [sp, #88]
    bc00:	ldr	w0, [x0, #100]
    bc04:	ldr	x1, [sp, #120]
    bc08:	lsr	x0, x1, x0
    bc0c:	str	x0, [sp, #120]
    bc10:	ldr	x0, [sp, #88]
    bc14:	ldr	w0, [x0, #100]
    bc18:	ldr	w1, [sp, #116]
    bc1c:	sub	w0, w1, w0
    bc20:	str	w0, [sp, #116]
    bc24:	ldr	x0, [sp, #88]
    bc28:	ldr	w1, [x0, #96]
    bc2c:	ldr	x0, [sp, #88]
    bc30:	ldr	w2, [x0, #60]
    bc34:	ldr	x0, [sp, #88]
    bc38:	ldr	w3, [x0, #64]
    bc3c:	ldr	x0, [sp, #88]
    bc40:	ldr	w0, [x0, #60]
    bc44:	cmp	w3, w0
    bc48:	b.cs	bc54 <inflateBack@@ZLIB_1.2.0+0x186c>  // b.hs, b.nlast
    bc4c:	ldr	w0, [sp, #128]
    bc50:	b	bc58 <inflateBack@@ZLIB_1.2.0+0x1870>
    bc54:	mov	w0, #0x0                   	// #0
    bc58:	sub	w0, w2, w0
    bc5c:	cmp	w1, w0
    bc60:	b.ls	bc84 <inflateBack@@ZLIB_1.2.0+0x189c>  // b.plast
    bc64:	ldr	x0, [sp, #56]
    bc68:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    bc6c:	add	x1, x1, #0x140
    bc70:	str	x1, [x0, #48]
    bc74:	ldr	x0, [sp, #88]
    bc78:	mov	w1, #0x3f51                	// #16209
    bc7c:	str	w1, [x0, #8]
    bc80:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    bc84:	ldr	w0, [sp, #128]
    bc88:	cmp	w0, #0x0
    bc8c:	b.ne	bcdc <inflateBack@@ZLIB_1.2.0+0x18f4>  // b.any
    bc90:	ldr	x0, [sp, #88]
    bc94:	ldr	x0, [x0, #72]
    bc98:	str	x0, [sp, #136]
    bc9c:	ldr	x0, [sp, #88]
    bca0:	ldr	w0, [x0, #60]
    bca4:	str	w0, [sp, #128]
    bca8:	ldr	x0, [sp, #88]
    bcac:	ldr	w1, [sp, #128]
    bcb0:	str	w1, [x0, #64]
    bcb4:	ldr	x3, [sp, #32]
    bcb8:	ldr	w2, [sp, #128]
    bcbc:	ldr	x1, [sp, #136]
    bcc0:	ldr	x0, [sp, #24]
    bcc4:	blr	x3
    bcc8:	cmp	w0, #0x0
    bccc:	b.eq	bcdc <inflateBack@@ZLIB_1.2.0+0x18f4>  // b.none
    bcd0:	mov	w0, #0xfffffffb            	// #-5
    bcd4:	str	w0, [sp, #96]
    bcd8:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    bcdc:	ldr	x0, [sp, #88]
    bce0:	ldr	w1, [x0, #60]
    bce4:	ldr	x0, [sp, #88]
    bce8:	ldr	w0, [x0, #96]
    bcec:	sub	w0, w1, w0
    bcf0:	str	w0, [sp, #112]
    bcf4:	ldr	w1, [sp, #112]
    bcf8:	ldr	w0, [sp, #128]
    bcfc:	cmp	w1, w0
    bd00:	b.cs	bd28 <inflateBack@@ZLIB_1.2.0+0x1940>  // b.hs, b.nlast
    bd04:	ldr	w0, [sp, #112]
    bd08:	ldr	x1, [sp, #136]
    bd0c:	add	x0, x1, x0
    bd10:	str	x0, [sp, #104]
    bd14:	ldr	w1, [sp, #128]
    bd18:	ldr	w0, [sp, #112]
    bd1c:	sub	w0, w1, w0
    bd20:	str	w0, [sp, #112]
    bd24:	b	bd4c <inflateBack@@ZLIB_1.2.0+0x1964>
    bd28:	ldr	x0, [sp, #88]
    bd2c:	ldr	w0, [x0, #96]
    bd30:	mov	w0, w0
    bd34:	neg	x0, x0
    bd38:	ldr	x1, [sp, #136]
    bd3c:	add	x0, x1, x0
    bd40:	str	x0, [sp, #104]
    bd44:	ldr	w0, [sp, #128]
    bd48:	str	w0, [sp, #112]
    bd4c:	ldr	x0, [sp, #88]
    bd50:	ldr	w0, [x0, #92]
    bd54:	ldr	w1, [sp, #112]
    bd58:	cmp	w1, w0
    bd5c:	b.ls	bd6c <inflateBack@@ZLIB_1.2.0+0x1984>  // b.plast
    bd60:	ldr	x0, [sp, #88]
    bd64:	ldr	w0, [x0, #92]
    bd68:	str	w0, [sp, #112]
    bd6c:	ldr	x0, [sp, #88]
    bd70:	ldr	w1, [x0, #92]
    bd74:	ldr	w0, [sp, #112]
    bd78:	sub	w1, w1, w0
    bd7c:	ldr	x0, [sp, #88]
    bd80:	str	w1, [x0, #92]
    bd84:	ldr	w1, [sp, #128]
    bd88:	ldr	w0, [sp, #112]
    bd8c:	sub	w0, w1, w0
    bd90:	str	w0, [sp, #128]
    bd94:	ldr	x1, [sp, #104]
    bd98:	add	x0, x1, #0x1
    bd9c:	str	x0, [sp, #104]
    bda0:	ldr	x0, [sp, #136]
    bda4:	add	x2, x0, #0x1
    bda8:	str	x2, [sp, #136]
    bdac:	ldrb	w1, [x1]
    bdb0:	strb	w1, [x0]
    bdb4:	ldr	w0, [sp, #112]
    bdb8:	sub	w0, w0, #0x1
    bdbc:	str	w0, [sp, #112]
    bdc0:	ldr	w0, [sp, #112]
    bdc4:	cmp	w0, #0x0
    bdc8:	b.ne	bd94 <inflateBack@@ZLIB_1.2.0+0x19ac>  // b.any
    bdcc:	ldr	x0, [sp, #88]
    bdd0:	ldr	w0, [x0, #92]
    bdd4:	cmp	w0, #0x0
    bdd8:	b.ne	bc84 <inflateBack@@ZLIB_1.2.0+0x189c>  // b.any
    bddc:	b	be58 <inflateBack@@ZLIB_1.2.0+0x1a70>
    bde0:	mov	w0, #0x1                   	// #1
    bde4:	str	w0, [sp, #96]
    bde8:	ldr	x0, [sp, #88]
    bdec:	ldr	w0, [x0, #60]
    bdf0:	ldr	w1, [sp, #128]
    bdf4:	cmp	w1, w0
    bdf8:	b.cs	be5c <inflateBack@@ZLIB_1.2.0+0x1a74>  // b.hs, b.nlast
    bdfc:	ldr	x0, [sp, #88]
    be00:	ldr	x4, [x0, #72]
    be04:	ldr	x0, [sp, #88]
    be08:	ldr	w1, [x0, #60]
    be0c:	ldr	w0, [sp, #128]
    be10:	sub	w0, w1, w0
    be14:	ldr	x3, [sp, #32]
    be18:	mov	w2, w0
    be1c:	mov	x1, x4
    be20:	ldr	x0, [sp, #24]
    be24:	blr	x3
    be28:	cmp	w0, #0x0
    be2c:	b.eq	be5c <inflateBack@@ZLIB_1.2.0+0x1a74>  // b.none
    be30:	mov	w0, #0xfffffffb            	// #-5
    be34:	str	w0, [sp, #96]
    be38:	b	be5c <inflateBack@@ZLIB_1.2.0+0x1a74>
    be3c:	mov	w0, #0xfffffffd            	// #-3
    be40:	str	w0, [sp, #96]
    be44:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    be48:	mov	w0, #0xfffffffe            	// #-2
    be4c:	str	w0, [sp, #96]
    be50:	b	be60 <inflateBack@@ZLIB_1.2.0+0x1a78>
    be54:	nop
    be58:	b	a4a4 <inflateBack@@ZLIB_1.2.0+0xbc>
    be5c:	nop
    be60:	ldr	x1, [sp, #80]
    be64:	ldr	x0, [sp, #56]
    be68:	str	x1, [x0]
    be6c:	ldr	x0, [sp, #56]
    be70:	ldr	w1, [sp, #132]
    be74:	str	w1, [x0, #8]
    be78:	ldr	w0, [sp, #96]
    be7c:	ldp	x29, x30, [sp], #144
    be80:	ret

000000000000be84 <inflateBackEnd@@ZLIB_1.2.0>:
    be84:	stp	x29, x30, [sp, #-32]!
    be88:	mov	x29, sp
    be8c:	str	x0, [sp, #24]
    be90:	ldr	x0, [sp, #24]
    be94:	cmp	x0, #0x0
    be98:	b.eq	bebc <inflateBackEnd@@ZLIB_1.2.0+0x38>  // b.none
    be9c:	ldr	x0, [sp, #24]
    bea0:	ldr	x0, [x0, #56]
    bea4:	cmp	x0, #0x0
    bea8:	b.eq	bebc <inflateBackEnd@@ZLIB_1.2.0+0x38>  // b.none
    beac:	ldr	x0, [sp, #24]
    beb0:	ldr	x0, [x0, #72]
    beb4:	cmp	x0, #0x0
    beb8:	b.ne	bec4 <inflateBackEnd@@ZLIB_1.2.0+0x40>  // b.any
    bebc:	mov	w0, #0xfffffffe            	// #-2
    bec0:	b	bef4 <inflateBackEnd@@ZLIB_1.2.0+0x70>
    bec4:	ldr	x0, [sp, #24]
    bec8:	ldr	x2, [x0, #72]
    becc:	ldr	x0, [sp, #24]
    bed0:	ldr	x3, [x0, #80]
    bed4:	ldr	x0, [sp, #24]
    bed8:	ldr	x0, [x0, #56]
    bedc:	mov	x1, x0
    bee0:	mov	x0, x3
    bee4:	blr	x2
    bee8:	ldr	x0, [sp, #24]
    beec:	str	xzr, [x0, #56]
    bef0:	mov	w0, #0x0                   	// #0
    bef4:	ldp	x29, x30, [sp], #32
    bef8:	ret
    befc:	sub	sp, sp, #0xa0
    bf00:	str	x0, [sp, #8]
    bf04:	str	w1, [sp, #4]
    bf08:	ldr	x0, [sp, #8]
    bf0c:	ldr	x0, [x0, #56]
    bf10:	str	x0, [sp, #104]
    bf14:	ldr	x0, [sp, #8]
    bf18:	ldr	x0, [x0]
    bf1c:	str	x0, [sp, #152]
    bf20:	ldr	x0, [sp, #8]
    bf24:	ldr	w0, [x0, #8]
    bf28:	sub	w0, w0, #0x5
    bf2c:	mov	w0, w0
    bf30:	ldr	x1, [sp, #152]
    bf34:	add	x0, x1, x0
    bf38:	str	x0, [sp, #96]
    bf3c:	ldr	x0, [sp, #8]
    bf40:	ldr	x0, [x0, #24]
    bf44:	str	x0, [sp, #144]
    bf48:	ldr	x0, [sp, #8]
    bf4c:	ldr	w0, [x0, #32]
    bf50:	ldr	w1, [sp, #4]
    bf54:	sub	w0, w1, w0
    bf58:	mov	w0, w0
    bf5c:	neg	x0, x0
    bf60:	ldr	x1, [sp, #144]
    bf64:	add	x0, x1, x0
    bf68:	str	x0, [sp, #88]
    bf6c:	ldr	x0, [sp, #8]
    bf70:	ldr	w0, [x0, #32]
    bf74:	sub	w0, w0, #0x101
    bf78:	mov	w0, w0
    bf7c:	ldr	x1, [sp, #144]
    bf80:	add	x0, x1, x0
    bf84:	str	x0, [sp, #80]
    bf88:	ldr	x0, [sp, #104]
    bf8c:	ldr	w0, [x0, #60]
    bf90:	str	w0, [sp, #76]
    bf94:	ldr	x0, [sp, #104]
    bf98:	ldr	w0, [x0, #64]
    bf9c:	str	w0, [sp, #72]
    bfa0:	ldr	x0, [sp, #104]
    bfa4:	ldr	w0, [x0, #68]
    bfa8:	str	w0, [sp, #68]
    bfac:	ldr	x0, [sp, #104]
    bfb0:	ldr	x0, [x0, #72]
    bfb4:	str	x0, [sp, #56]
    bfb8:	ldr	x0, [sp, #104]
    bfbc:	ldr	x0, [x0, #80]
    bfc0:	str	x0, [sp, #136]
    bfc4:	ldr	x0, [sp, #104]
    bfc8:	ldr	w0, [x0, #88]
    bfcc:	str	w0, [sp, #132]
    bfd0:	ldr	x0, [sp, #104]
    bfd4:	ldr	x0, [x0, #104]
    bfd8:	str	x0, [sp, #48]
    bfdc:	ldr	x0, [sp, #104]
    bfe0:	ldr	x0, [x0, #112]
    bfe4:	str	x0, [sp, #40]
    bfe8:	ldr	x0, [sp, #104]
    bfec:	ldr	w0, [x0, #120]
    bff0:	mov	w1, #0x1                   	// #1
    bff4:	lsl	w0, w1, w0
    bff8:	sub	w0, w0, #0x1
    bffc:	str	w0, [sp, #36]
    c000:	ldr	x0, [sp, #104]
    c004:	ldr	w0, [x0, #124]
    c008:	mov	w1, #0x1                   	// #1
    c00c:	lsl	w0, w1, w0
    c010:	sub	w0, w0, #0x1
    c014:	str	w0, [sp, #32]
    c018:	ldr	w0, [sp, #132]
    c01c:	cmp	w0, #0xe
    c020:	b.hi	c08c <inflateBackEnd@@ZLIB_1.2.0+0x208>  // b.pmore
    c024:	ldr	x0, [sp, #152]
    c028:	add	x1, x0, #0x1
    c02c:	str	x1, [sp, #152]
    c030:	ldrb	w0, [x0]
    c034:	and	x1, x0, #0xff
    c038:	ldr	w0, [sp, #132]
    c03c:	lsl	x0, x1, x0
    c040:	ldr	x1, [sp, #136]
    c044:	add	x0, x1, x0
    c048:	str	x0, [sp, #136]
    c04c:	ldr	w0, [sp, #132]
    c050:	add	w0, w0, #0x8
    c054:	str	w0, [sp, #132]
    c058:	ldr	x0, [sp, #152]
    c05c:	add	x1, x0, #0x1
    c060:	str	x1, [sp, #152]
    c064:	ldrb	w0, [x0]
    c068:	and	x1, x0, #0xff
    c06c:	ldr	w0, [sp, #132]
    c070:	lsl	x0, x1, x0
    c074:	ldr	x1, [sp, #136]
    c078:	add	x0, x1, x0
    c07c:	str	x0, [sp, #136]
    c080:	ldr	w0, [sp, #132]
    c084:	add	w0, w0, #0x8
    c088:	str	w0, [sp, #132]
    c08c:	ldr	w1, [sp, #36]
    c090:	ldr	x0, [sp, #136]
    c094:	and	x0, x1, x0
    c098:	lsl	x0, x0, #2
    c09c:	ldr	x1, [sp, #48]
    c0a0:	add	x0, x1, x0
    c0a4:	ldr	w0, [x0]
    c0a8:	str	w0, [sp, #24]
    c0ac:	ldrb	w0, [sp, #25]
    c0b0:	str	w0, [sp, #128]
    c0b4:	ldr	w0, [sp, #128]
    c0b8:	ldr	x1, [sp, #136]
    c0bc:	lsr	x0, x1, x0
    c0c0:	str	x0, [sp, #136]
    c0c4:	ldr	w1, [sp, #132]
    c0c8:	ldr	w0, [sp, #128]
    c0cc:	sub	w0, w1, w0
    c0d0:	str	w0, [sp, #132]
    c0d4:	ldrb	w0, [sp, #24]
    c0d8:	str	w0, [sp, #128]
    c0dc:	ldr	w0, [sp, #128]
    c0e0:	cmp	w0, #0x0
    c0e4:	b.ne	c104 <inflateBackEnd@@ZLIB_1.2.0+0x280>  // b.any
    c0e8:	ldrh	w2, [sp, #26]
    c0ec:	ldr	x0, [sp, #144]
    c0f0:	add	x1, x0, #0x1
    c0f4:	str	x1, [sp, #144]
    c0f8:	and	w1, w2, #0xff
    c0fc:	strb	w1, [x0]
    c100:	b	c8ec <inflateBackEnd@@ZLIB_1.2.0+0xa68>
    c104:	ldr	w0, [sp, #128]
    c108:	and	w0, w0, #0x10
    c10c:	cmp	w0, #0x0
    c110:	b.eq	c85c <inflateBackEnd@@ZLIB_1.2.0+0x9d8>  // b.none
    c114:	ldrh	w0, [sp, #26]
    c118:	str	w0, [sp, #124]
    c11c:	ldr	w0, [sp, #128]
    c120:	and	w0, w0, #0xf
    c124:	str	w0, [sp, #128]
    c128:	ldr	w0, [sp, #128]
    c12c:	cmp	w0, #0x0
    c130:	b.eq	c1c0 <inflateBackEnd@@ZLIB_1.2.0+0x33c>  // b.none
    c134:	ldr	w1, [sp, #132]
    c138:	ldr	w0, [sp, #128]
    c13c:	cmp	w1, w0
    c140:	b.cs	c178 <inflateBackEnd@@ZLIB_1.2.0+0x2f4>  // b.hs, b.nlast
    c144:	ldr	x0, [sp, #152]
    c148:	add	x1, x0, #0x1
    c14c:	str	x1, [sp, #152]
    c150:	ldrb	w0, [x0]
    c154:	and	x1, x0, #0xff
    c158:	ldr	w0, [sp, #132]
    c15c:	lsl	x0, x1, x0
    c160:	ldr	x1, [sp, #136]
    c164:	add	x0, x1, x0
    c168:	str	x0, [sp, #136]
    c16c:	ldr	w0, [sp, #132]
    c170:	add	w0, w0, #0x8
    c174:	str	w0, [sp, #132]
    c178:	ldr	x0, [sp, #136]
    c17c:	mov	w2, w0
    c180:	ldr	w0, [sp, #128]
    c184:	mov	w1, #0xffffffff            	// #-1
    c188:	lsl	w0, w1, w0
    c18c:	mvn	w0, w0
    c190:	and	w0, w2, w0
    c194:	ldr	w1, [sp, #124]
    c198:	add	w0, w1, w0
    c19c:	str	w0, [sp, #124]
    c1a0:	ldr	w0, [sp, #128]
    c1a4:	ldr	x1, [sp, #136]
    c1a8:	lsr	x0, x1, x0
    c1ac:	str	x0, [sp, #136]
    c1b0:	ldr	w1, [sp, #132]
    c1b4:	ldr	w0, [sp, #128]
    c1b8:	sub	w0, w1, w0
    c1bc:	str	w0, [sp, #132]
    c1c0:	ldr	w0, [sp, #132]
    c1c4:	cmp	w0, #0xe
    c1c8:	b.hi	c234 <inflateBackEnd@@ZLIB_1.2.0+0x3b0>  // b.pmore
    c1cc:	ldr	x0, [sp, #152]
    c1d0:	add	x1, x0, #0x1
    c1d4:	str	x1, [sp, #152]
    c1d8:	ldrb	w0, [x0]
    c1dc:	and	x1, x0, #0xff
    c1e0:	ldr	w0, [sp, #132]
    c1e4:	lsl	x0, x1, x0
    c1e8:	ldr	x1, [sp, #136]
    c1ec:	add	x0, x1, x0
    c1f0:	str	x0, [sp, #136]
    c1f4:	ldr	w0, [sp, #132]
    c1f8:	add	w0, w0, #0x8
    c1fc:	str	w0, [sp, #132]
    c200:	ldr	x0, [sp, #152]
    c204:	add	x1, x0, #0x1
    c208:	str	x1, [sp, #152]
    c20c:	ldrb	w0, [x0]
    c210:	and	x1, x0, #0xff
    c214:	ldr	w0, [sp, #132]
    c218:	lsl	x0, x1, x0
    c21c:	ldr	x1, [sp, #136]
    c220:	add	x0, x1, x0
    c224:	str	x0, [sp, #136]
    c228:	ldr	w0, [sp, #132]
    c22c:	add	w0, w0, #0x8
    c230:	str	w0, [sp, #132]
    c234:	ldr	w1, [sp, #32]
    c238:	ldr	x0, [sp, #136]
    c23c:	and	x0, x1, x0
    c240:	lsl	x0, x0, #2
    c244:	ldr	x1, [sp, #40]
    c248:	add	x0, x1, x0
    c24c:	ldr	w0, [x0]
    c250:	str	w0, [sp, #24]
    c254:	ldrb	w0, [sp, #25]
    c258:	str	w0, [sp, #128]
    c25c:	ldr	w0, [sp, #128]
    c260:	ldr	x1, [sp, #136]
    c264:	lsr	x0, x1, x0
    c268:	str	x0, [sp, #136]
    c26c:	ldr	w1, [sp, #132]
    c270:	ldr	w0, [sp, #128]
    c274:	sub	w0, w1, w0
    c278:	str	w0, [sp, #132]
    c27c:	ldrb	w0, [sp, #24]
    c280:	str	w0, [sp, #128]
    c284:	ldr	w0, [sp, #128]
    c288:	and	w0, w0, #0x10
    c28c:	cmp	w0, #0x0
    c290:	b.eq	c7ec <inflateBackEnd@@ZLIB_1.2.0+0x968>  // b.none
    c294:	ldrh	w0, [sp, #26]
    c298:	str	w0, [sp, #28]
    c29c:	ldr	w0, [sp, #128]
    c2a0:	and	w0, w0, #0xf
    c2a4:	str	w0, [sp, #128]
    c2a8:	ldr	w1, [sp, #132]
    c2ac:	ldr	w0, [sp, #128]
    c2b0:	cmp	w1, w0
    c2b4:	b.cs	c330 <inflateBackEnd@@ZLIB_1.2.0+0x4ac>  // b.hs, b.nlast
    c2b8:	ldr	x0, [sp, #152]
    c2bc:	add	x1, x0, #0x1
    c2c0:	str	x1, [sp, #152]
    c2c4:	ldrb	w0, [x0]
    c2c8:	and	x1, x0, #0xff
    c2cc:	ldr	w0, [sp, #132]
    c2d0:	lsl	x0, x1, x0
    c2d4:	ldr	x1, [sp, #136]
    c2d8:	add	x0, x1, x0
    c2dc:	str	x0, [sp, #136]
    c2e0:	ldr	w0, [sp, #132]
    c2e4:	add	w0, w0, #0x8
    c2e8:	str	w0, [sp, #132]
    c2ec:	ldr	w1, [sp, #132]
    c2f0:	ldr	w0, [sp, #128]
    c2f4:	cmp	w1, w0
    c2f8:	b.cs	c330 <inflateBackEnd@@ZLIB_1.2.0+0x4ac>  // b.hs, b.nlast
    c2fc:	ldr	x0, [sp, #152]
    c300:	add	x1, x0, #0x1
    c304:	str	x1, [sp, #152]
    c308:	ldrb	w0, [x0]
    c30c:	and	x1, x0, #0xff
    c310:	ldr	w0, [sp, #132]
    c314:	lsl	x0, x1, x0
    c318:	ldr	x1, [sp, #136]
    c31c:	add	x0, x1, x0
    c320:	str	x0, [sp, #136]
    c324:	ldr	w0, [sp, #132]
    c328:	add	w0, w0, #0x8
    c32c:	str	w0, [sp, #132]
    c330:	ldr	x0, [sp, #136]
    c334:	mov	w2, w0
    c338:	ldr	w0, [sp, #128]
    c33c:	mov	w1, #0xffffffff            	// #-1
    c340:	lsl	w0, w1, w0
    c344:	mvn	w0, w0
    c348:	and	w0, w2, w0
    c34c:	ldr	w1, [sp, #28]
    c350:	add	w0, w1, w0
    c354:	str	w0, [sp, #28]
    c358:	ldr	w0, [sp, #128]
    c35c:	ldr	x1, [sp, #136]
    c360:	lsr	x0, x1, x0
    c364:	str	x0, [sp, #136]
    c368:	ldr	w1, [sp, #132]
    c36c:	ldr	w0, [sp, #128]
    c370:	sub	w0, w1, w0
    c374:	str	w0, [sp, #132]
    c378:	ldr	x1, [sp, #144]
    c37c:	ldr	x0, [sp, #88]
    c380:	sub	x0, x1, x0
    c384:	str	w0, [sp, #128]
    c388:	ldr	w1, [sp, #28]
    c38c:	ldr	w0, [sp, #128]
    c390:	cmp	w1, w0
    c394:	b.ls	c704 <inflateBackEnd@@ZLIB_1.2.0+0x880>  // b.plast
    c398:	ldr	w1, [sp, #28]
    c39c:	ldr	w0, [sp, #128]
    c3a0:	sub	w0, w1, w0
    c3a4:	str	w0, [sp, #128]
    c3a8:	ldr	w1, [sp, #128]
    c3ac:	ldr	w0, [sp, #72]
    c3b0:	cmp	w1, w0
    c3b4:	b.ls	c3e8 <inflateBackEnd@@ZLIB_1.2.0+0x564>  // b.plast
    c3b8:	ldr	x0, [sp, #104]
    c3bc:	ldr	w0, [x0, #7144]
    c3c0:	cmp	w0, #0x0
    c3c4:	b.eq	c3e8 <inflateBackEnd@@ZLIB_1.2.0+0x564>  // b.none
    c3c8:	ldr	x0, [sp, #8]
    c3cc:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    c3d0:	add	x1, x1, #0xa08
    c3d4:	str	x1, [x0, #48]
    c3d8:	ldr	x0, [sp, #104]
    c3dc:	mov	w1, #0x3f51                	// #16209
    c3e0:	str	w1, [x0, #8]
    c3e4:	b	c90c <inflateBackEnd@@ZLIB_1.2.0+0xa88>
    c3e8:	ldr	x0, [sp, #56]
    c3ec:	str	x0, [sp, #112]
    c3f0:	ldr	w0, [sp, #68]
    c3f4:	cmp	w0, #0x0
    c3f8:	b.ne	c488 <inflateBackEnd@@ZLIB_1.2.0+0x604>  // b.any
    c3fc:	ldr	w1, [sp, #76]
    c400:	ldr	w0, [sp, #128]
    c404:	sub	w0, w1, w0
    c408:	mov	w0, w0
    c40c:	ldr	x1, [sp, #112]
    c410:	add	x0, x1, x0
    c414:	str	x0, [sp, #112]
    c418:	ldr	w1, [sp, #128]
    c41c:	ldr	w0, [sp, #124]
    c420:	cmp	w1, w0
    c424:	b.cs	c69c <inflateBackEnd@@ZLIB_1.2.0+0x818>  // b.hs, b.nlast
    c428:	ldr	w1, [sp, #124]
    c42c:	ldr	w0, [sp, #128]
    c430:	sub	w0, w1, w0
    c434:	str	w0, [sp, #124]
    c438:	ldr	x1, [sp, #112]
    c43c:	add	x0, x1, #0x1
    c440:	str	x0, [sp, #112]
    c444:	ldr	x0, [sp, #144]
    c448:	add	x2, x0, #0x1
    c44c:	str	x2, [sp, #144]
    c450:	ldrb	w1, [x1]
    c454:	strb	w1, [x0]
    c458:	ldr	w0, [sp, #128]
    c45c:	sub	w0, w0, #0x1
    c460:	str	w0, [sp, #128]
    c464:	ldr	w0, [sp, #128]
    c468:	cmp	w0, #0x0
    c46c:	b.ne	c438 <inflateBackEnd@@ZLIB_1.2.0+0x5b4>  // b.any
    c470:	ldr	w0, [sp, #28]
    c474:	neg	x0, x0
    c478:	ldr	x1, [sp, #144]
    c47c:	add	x0, x1, x0
    c480:	str	x0, [sp, #112]
    c484:	b	c69c <inflateBackEnd@@ZLIB_1.2.0+0x818>
    c488:	ldr	w1, [sp, #68]
    c48c:	ldr	w0, [sp, #128]
    c490:	cmp	w1, w0
    c494:	b.cs	c5a4 <inflateBackEnd@@ZLIB_1.2.0+0x720>  // b.hs, b.nlast
    c498:	ldr	w1, [sp, #76]
    c49c:	ldr	w0, [sp, #68]
    c4a0:	add	w1, w1, w0
    c4a4:	ldr	w0, [sp, #128]
    c4a8:	sub	w0, w1, w0
    c4ac:	mov	w0, w0
    c4b0:	ldr	x1, [sp, #112]
    c4b4:	add	x0, x1, x0
    c4b8:	str	x0, [sp, #112]
    c4bc:	ldr	w1, [sp, #128]
    c4c0:	ldr	w0, [sp, #68]
    c4c4:	sub	w0, w1, w0
    c4c8:	str	w0, [sp, #128]
    c4cc:	ldr	w1, [sp, #128]
    c4d0:	ldr	w0, [sp, #124]
    c4d4:	cmp	w1, w0
    c4d8:	b.cs	c69c <inflateBackEnd@@ZLIB_1.2.0+0x818>  // b.hs, b.nlast
    c4dc:	ldr	w1, [sp, #124]
    c4e0:	ldr	w0, [sp, #128]
    c4e4:	sub	w0, w1, w0
    c4e8:	str	w0, [sp, #124]
    c4ec:	ldr	x1, [sp, #112]
    c4f0:	add	x0, x1, #0x1
    c4f4:	str	x0, [sp, #112]
    c4f8:	ldr	x0, [sp, #144]
    c4fc:	add	x2, x0, #0x1
    c500:	str	x2, [sp, #144]
    c504:	ldrb	w1, [x1]
    c508:	strb	w1, [x0]
    c50c:	ldr	w0, [sp, #128]
    c510:	sub	w0, w0, #0x1
    c514:	str	w0, [sp, #128]
    c518:	ldr	w0, [sp, #128]
    c51c:	cmp	w0, #0x0
    c520:	b.ne	c4ec <inflateBackEnd@@ZLIB_1.2.0+0x668>  // b.any
    c524:	ldr	x0, [sp, #56]
    c528:	str	x0, [sp, #112]
    c52c:	ldr	w1, [sp, #68]
    c530:	ldr	w0, [sp, #124]
    c534:	cmp	w1, w0
    c538:	b.cs	c69c <inflateBackEnd@@ZLIB_1.2.0+0x818>  // b.hs, b.nlast
    c53c:	ldr	w0, [sp, #68]
    c540:	str	w0, [sp, #128]
    c544:	ldr	w1, [sp, #124]
    c548:	ldr	w0, [sp, #128]
    c54c:	sub	w0, w1, w0
    c550:	str	w0, [sp, #124]
    c554:	ldr	x1, [sp, #112]
    c558:	add	x0, x1, #0x1
    c55c:	str	x0, [sp, #112]
    c560:	ldr	x0, [sp, #144]
    c564:	add	x2, x0, #0x1
    c568:	str	x2, [sp, #144]
    c56c:	ldrb	w1, [x1]
    c570:	strb	w1, [x0]
    c574:	ldr	w0, [sp, #128]
    c578:	sub	w0, w0, #0x1
    c57c:	str	w0, [sp, #128]
    c580:	ldr	w0, [sp, #128]
    c584:	cmp	w0, #0x0
    c588:	b.ne	c554 <inflateBackEnd@@ZLIB_1.2.0+0x6d0>  // b.any
    c58c:	ldr	w0, [sp, #28]
    c590:	neg	x0, x0
    c594:	ldr	x1, [sp, #144]
    c598:	add	x0, x1, x0
    c59c:	str	x0, [sp, #112]
    c5a0:	b	c69c <inflateBackEnd@@ZLIB_1.2.0+0x818>
    c5a4:	ldr	w1, [sp, #68]
    c5a8:	ldr	w0, [sp, #128]
    c5ac:	sub	w0, w1, w0
    c5b0:	mov	w0, w0
    c5b4:	ldr	x1, [sp, #112]
    c5b8:	add	x0, x1, x0
    c5bc:	str	x0, [sp, #112]
    c5c0:	ldr	w1, [sp, #128]
    c5c4:	ldr	w0, [sp, #124]
    c5c8:	cmp	w1, w0
    c5cc:	b.cs	c69c <inflateBackEnd@@ZLIB_1.2.0+0x818>  // b.hs, b.nlast
    c5d0:	ldr	w1, [sp, #124]
    c5d4:	ldr	w0, [sp, #128]
    c5d8:	sub	w0, w1, w0
    c5dc:	str	w0, [sp, #124]
    c5e0:	ldr	x1, [sp, #112]
    c5e4:	add	x0, x1, #0x1
    c5e8:	str	x0, [sp, #112]
    c5ec:	ldr	x0, [sp, #144]
    c5f0:	add	x2, x0, #0x1
    c5f4:	str	x2, [sp, #144]
    c5f8:	ldrb	w1, [x1]
    c5fc:	strb	w1, [x0]
    c600:	ldr	w0, [sp, #128]
    c604:	sub	w0, w0, #0x1
    c608:	str	w0, [sp, #128]
    c60c:	ldr	w0, [sp, #128]
    c610:	cmp	w0, #0x0
    c614:	b.ne	c5e0 <inflateBackEnd@@ZLIB_1.2.0+0x75c>  // b.any
    c618:	ldr	w0, [sp, #28]
    c61c:	neg	x0, x0
    c620:	ldr	x1, [sp, #144]
    c624:	add	x0, x1, x0
    c628:	str	x0, [sp, #112]
    c62c:	b	c69c <inflateBackEnd@@ZLIB_1.2.0+0x818>
    c630:	ldr	x1, [sp, #112]
    c634:	add	x0, x1, #0x1
    c638:	str	x0, [sp, #112]
    c63c:	ldr	x0, [sp, #144]
    c640:	add	x2, x0, #0x1
    c644:	str	x2, [sp, #144]
    c648:	ldrb	w1, [x1]
    c64c:	strb	w1, [x0]
    c650:	ldr	x1, [sp, #112]
    c654:	add	x0, x1, #0x1
    c658:	str	x0, [sp, #112]
    c65c:	ldr	x0, [sp, #144]
    c660:	add	x2, x0, #0x1
    c664:	str	x2, [sp, #144]
    c668:	ldrb	w1, [x1]
    c66c:	strb	w1, [x0]
    c670:	ldr	x1, [sp, #112]
    c674:	add	x0, x1, #0x1
    c678:	str	x0, [sp, #112]
    c67c:	ldr	x0, [sp, #144]
    c680:	add	x2, x0, #0x1
    c684:	str	x2, [sp, #144]
    c688:	ldrb	w1, [x1]
    c68c:	strb	w1, [x0]
    c690:	ldr	w0, [sp, #124]
    c694:	sub	w0, w0, #0x3
    c698:	str	w0, [sp, #124]
    c69c:	ldr	w0, [sp, #124]
    c6a0:	cmp	w0, #0x2
    c6a4:	b.hi	c630 <inflateBackEnd@@ZLIB_1.2.0+0x7ac>  // b.pmore
    c6a8:	ldr	w0, [sp, #124]
    c6ac:	cmp	w0, #0x0
    c6b0:	b.eq	c8ec <inflateBackEnd@@ZLIB_1.2.0+0xa68>  // b.none
    c6b4:	ldr	x1, [sp, #112]
    c6b8:	add	x0, x1, #0x1
    c6bc:	str	x0, [sp, #112]
    c6c0:	ldr	x0, [sp, #144]
    c6c4:	add	x2, x0, #0x1
    c6c8:	str	x2, [sp, #144]
    c6cc:	ldrb	w1, [x1]
    c6d0:	strb	w1, [x0]
    c6d4:	ldr	w0, [sp, #124]
    c6d8:	cmp	w0, #0x1
    c6dc:	b.ls	c8ec <inflateBackEnd@@ZLIB_1.2.0+0xa68>  // b.plast
    c6e0:	ldr	x1, [sp, #112]
    c6e4:	add	x0, x1, #0x1
    c6e8:	str	x0, [sp, #112]
    c6ec:	ldr	x0, [sp, #144]
    c6f0:	add	x2, x0, #0x1
    c6f4:	str	x2, [sp, #144]
    c6f8:	ldrb	w1, [x1]
    c6fc:	strb	w1, [x0]
    c700:	b	c8ec <inflateBackEnd@@ZLIB_1.2.0+0xa68>
    c704:	ldr	w0, [sp, #28]
    c708:	neg	x0, x0
    c70c:	ldr	x1, [sp, #144]
    c710:	add	x0, x1, x0
    c714:	str	x0, [sp, #112]
    c718:	ldr	x1, [sp, #112]
    c71c:	add	x0, x1, #0x1
    c720:	str	x0, [sp, #112]
    c724:	ldr	x0, [sp, #144]
    c728:	add	x2, x0, #0x1
    c72c:	str	x2, [sp, #144]
    c730:	ldrb	w1, [x1]
    c734:	strb	w1, [x0]
    c738:	ldr	x1, [sp, #112]
    c73c:	add	x0, x1, #0x1
    c740:	str	x0, [sp, #112]
    c744:	ldr	x0, [sp, #144]
    c748:	add	x2, x0, #0x1
    c74c:	str	x2, [sp, #144]
    c750:	ldrb	w1, [x1]
    c754:	strb	w1, [x0]
    c758:	ldr	x1, [sp, #112]
    c75c:	add	x0, x1, #0x1
    c760:	str	x0, [sp, #112]
    c764:	ldr	x0, [sp, #144]
    c768:	add	x2, x0, #0x1
    c76c:	str	x2, [sp, #144]
    c770:	ldrb	w1, [x1]
    c774:	strb	w1, [x0]
    c778:	ldr	w0, [sp, #124]
    c77c:	sub	w0, w0, #0x3
    c780:	str	w0, [sp, #124]
    c784:	ldr	w0, [sp, #124]
    c788:	cmp	w0, #0x2
    c78c:	b.hi	c718 <inflateBackEnd@@ZLIB_1.2.0+0x894>  // b.pmore
    c790:	ldr	w0, [sp, #124]
    c794:	cmp	w0, #0x0
    c798:	b.eq	c8ec <inflateBackEnd@@ZLIB_1.2.0+0xa68>  // b.none
    c79c:	ldr	x1, [sp, #112]
    c7a0:	add	x0, x1, #0x1
    c7a4:	str	x0, [sp, #112]
    c7a8:	ldr	x0, [sp, #144]
    c7ac:	add	x2, x0, #0x1
    c7b0:	str	x2, [sp, #144]
    c7b4:	ldrb	w1, [x1]
    c7b8:	strb	w1, [x0]
    c7bc:	ldr	w0, [sp, #124]
    c7c0:	cmp	w0, #0x1
    c7c4:	b.ls	c8ec <inflateBackEnd@@ZLIB_1.2.0+0xa68>  // b.plast
    c7c8:	ldr	x1, [sp, #112]
    c7cc:	add	x0, x1, #0x1
    c7d0:	str	x0, [sp, #112]
    c7d4:	ldr	x0, [sp, #144]
    c7d8:	add	x2, x0, #0x1
    c7dc:	str	x2, [sp, #144]
    c7e0:	ldrb	w1, [x1]
    c7e4:	strb	w1, [x0]
    c7e8:	b	c8ec <inflateBackEnd@@ZLIB_1.2.0+0xa68>
    c7ec:	ldr	w0, [sp, #128]
    c7f0:	and	w0, w0, #0x40
    c7f4:	cmp	w0, #0x0
    c7f8:	b.ne	c83c <inflateBackEnd@@ZLIB_1.2.0+0x9b8>  // b.any
    c7fc:	ldrh	w0, [sp, #26]
    c800:	and	x1, x0, #0xffff
    c804:	ldr	w0, [sp, #128]
    c808:	mov	w2, #0x1                   	// #1
    c80c:	lsl	w0, w2, w0
    c810:	sub	w0, w0, #0x1
    c814:	mov	w2, w0
    c818:	ldr	x0, [sp, #136]
    c81c:	and	x0, x2, x0
    c820:	add	x0, x1, x0
    c824:	lsl	x0, x0, #2
    c828:	ldr	x1, [sp, #40]
    c82c:	add	x0, x1, x0
    c830:	ldr	w0, [x0]
    c834:	str	w0, [sp, #24]
    c838:	b	c254 <inflateBackEnd@@ZLIB_1.2.0+0x3d0>
    c83c:	ldr	x0, [sp, #8]
    c840:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    c844:	add	x1, x1, #0xa28
    c848:	str	x1, [x0, #48]
    c84c:	ldr	x0, [sp, #104]
    c850:	mov	w1, #0x3f51                	// #16209
    c854:	str	w1, [x0, #8]
    c858:	b	c90c <inflateBackEnd@@ZLIB_1.2.0+0xa88>
    c85c:	ldr	w0, [sp, #128]
    c860:	and	w0, w0, #0x40
    c864:	cmp	w0, #0x0
    c868:	b.ne	c8ac <inflateBackEnd@@ZLIB_1.2.0+0xa28>  // b.any
    c86c:	ldrh	w0, [sp, #26]
    c870:	and	x1, x0, #0xffff
    c874:	ldr	w0, [sp, #128]
    c878:	mov	w2, #0x1                   	// #1
    c87c:	lsl	w0, w2, w0
    c880:	sub	w0, w0, #0x1
    c884:	mov	w2, w0
    c888:	ldr	x0, [sp, #136]
    c88c:	and	x0, x2, x0
    c890:	add	x0, x1, x0
    c894:	lsl	x0, x0, #2
    c898:	ldr	x1, [sp, #48]
    c89c:	add	x0, x1, x0
    c8a0:	ldr	w0, [x0]
    c8a4:	str	w0, [sp, #24]
    c8a8:	b	c0ac <inflateBackEnd@@ZLIB_1.2.0+0x228>
    c8ac:	ldr	w0, [sp, #128]
    c8b0:	and	w0, w0, #0x20
    c8b4:	cmp	w0, #0x0
    c8b8:	b.eq	c8cc <inflateBackEnd@@ZLIB_1.2.0+0xa48>  // b.none
    c8bc:	ldr	x0, [sp, #104]
    c8c0:	mov	w1, #0x3f3f                	// #16191
    c8c4:	str	w1, [x0, #8]
    c8c8:	b	c90c <inflateBackEnd@@ZLIB_1.2.0+0xa88>
    c8cc:	ldr	x0, [sp, #8]
    c8d0:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    c8d4:	add	x1, x1, #0xa40
    c8d8:	str	x1, [x0, #48]
    c8dc:	ldr	x0, [sp, #104]
    c8e0:	mov	w1, #0x3f51                	// #16209
    c8e4:	str	w1, [x0, #8]
    c8e8:	b	c90c <inflateBackEnd@@ZLIB_1.2.0+0xa88>
    c8ec:	ldr	x1, [sp, #152]
    c8f0:	ldr	x0, [sp, #96]
    c8f4:	cmp	x1, x0
    c8f8:	b.cs	c90c <inflateBackEnd@@ZLIB_1.2.0+0xa88>  // b.hs, b.nlast
    c8fc:	ldr	x1, [sp, #144]
    c900:	ldr	x0, [sp, #80]
    c904:	cmp	x1, x0
    c908:	b.cc	c018 <inflateBackEnd@@ZLIB_1.2.0+0x194>  // b.lo, b.ul, b.last
    c90c:	ldr	w0, [sp, #132]
    c910:	lsr	w0, w0, #3
    c914:	str	w0, [sp, #124]
    c918:	ldr	w0, [sp, #124]
    c91c:	neg	x0, x0
    c920:	ldr	x1, [sp, #152]
    c924:	add	x0, x1, x0
    c928:	str	x0, [sp, #152]
    c92c:	ldr	w0, [sp, #124]
    c930:	lsl	w0, w0, #3
    c934:	ldr	w1, [sp, #132]
    c938:	sub	w0, w1, w0
    c93c:	str	w0, [sp, #132]
    c940:	ldr	w0, [sp, #132]
    c944:	mov	w1, #0x1                   	// #1
    c948:	lsl	w0, w1, w0
    c94c:	sub	w0, w0, #0x1
    c950:	mov	w0, w0
    c954:	ldr	x1, [sp, #136]
    c958:	and	x0, x1, x0
    c95c:	str	x0, [sp, #136]
    c960:	ldr	x0, [sp, #8]
    c964:	ldr	x1, [sp, #152]
    c968:	str	x1, [x0]
    c96c:	ldr	x0, [sp, #8]
    c970:	ldr	x1, [sp, #144]
    c974:	str	x1, [x0, #24]
    c978:	ldr	x1, [sp, #152]
    c97c:	ldr	x0, [sp, #96]
    c980:	cmp	x1, x0
    c984:	b.cs	c99c <inflateBackEnd@@ZLIB_1.2.0+0xb18>  // b.hs, b.nlast
    c988:	ldr	x1, [sp, #96]
    c98c:	ldr	x0, [sp, #152]
    c990:	sub	x0, x1, x0
    c994:	add	w0, w0, #0x5
    c998:	b	c9b4 <inflateBackEnd@@ZLIB_1.2.0+0xb30>
    c99c:	ldr	x1, [sp, #152]
    c9a0:	ldr	x0, [sp, #96]
    c9a4:	sub	x0, x1, x0
    c9a8:	mov	w1, w0
    c9ac:	mov	w0, #0x5                   	// #5
    c9b0:	sub	w0, w0, w1
    c9b4:	ldr	x1, [sp, #8]
    c9b8:	str	w0, [x1, #8]
    c9bc:	ldr	x1, [sp, #144]
    c9c0:	ldr	x0, [sp, #80]
    c9c4:	cmp	x1, x0
    c9c8:	b.cs	c9e0 <inflateBackEnd@@ZLIB_1.2.0+0xb5c>  // b.hs, b.nlast
    c9cc:	ldr	x1, [sp, #80]
    c9d0:	ldr	x0, [sp, #144]
    c9d4:	sub	x0, x1, x0
    c9d8:	add	w0, w0, #0x101
    c9dc:	b	c9f8 <inflateBackEnd@@ZLIB_1.2.0+0xb74>
    c9e0:	ldr	x1, [sp, #144]
    c9e4:	ldr	x0, [sp, #80]
    c9e8:	sub	x0, x1, x0
    c9ec:	mov	w1, w0
    c9f0:	mov	w0, #0x101                 	// #257
    c9f4:	sub	w0, w0, w1
    c9f8:	ldr	x1, [sp, #8]
    c9fc:	str	w0, [x1, #32]
    ca00:	ldr	x0, [sp, #104]
    ca04:	ldr	x1, [sp, #136]
    ca08:	str	x1, [x0, #80]
    ca0c:	ldr	x0, [sp, #104]
    ca10:	ldr	w1, [sp, #132]
    ca14:	str	w1, [x0, #88]
    ca18:	nop
    ca1c:	add	sp, sp, #0xa0
    ca20:	ret
    ca24:	sub	sp, sp, #0x20
    ca28:	str	x0, [sp, #8]
    ca2c:	ldr	x0, [sp, #8]
    ca30:	cmp	x0, #0x0
    ca34:	b.eq	ca58 <inflateBackEnd@@ZLIB_1.2.0+0xbd4>  // b.none
    ca38:	ldr	x0, [sp, #8]
    ca3c:	ldr	x0, [x0, #64]
    ca40:	cmp	x0, #0x0
    ca44:	b.eq	ca58 <inflateBackEnd@@ZLIB_1.2.0+0xbd4>  // b.none
    ca48:	ldr	x0, [sp, #8]
    ca4c:	ldr	x0, [x0, #72]
    ca50:	cmp	x0, #0x0
    ca54:	b.ne	ca60 <inflateBackEnd@@ZLIB_1.2.0+0xbdc>  // b.any
    ca58:	mov	w0, #0x1                   	// #1
    ca5c:	b	cac0 <inflateBackEnd@@ZLIB_1.2.0+0xc3c>
    ca60:	ldr	x0, [sp, #8]
    ca64:	ldr	x0, [x0, #56]
    ca68:	str	x0, [sp, #24]
    ca6c:	ldr	x0, [sp, #24]
    ca70:	cmp	x0, #0x0
    ca74:	b.eq	cab4 <inflateBackEnd@@ZLIB_1.2.0+0xc30>  // b.none
    ca78:	ldr	x0, [sp, #24]
    ca7c:	ldr	x0, [x0]
    ca80:	ldr	x1, [sp, #8]
    ca84:	cmp	x1, x0
    ca88:	b.ne	cab4 <inflateBackEnd@@ZLIB_1.2.0+0xc30>  // b.any
    ca8c:	ldr	x0, [sp, #24]
    ca90:	ldr	w1, [x0, #8]
    ca94:	mov	w0, #0x3f33                	// #16179
    ca98:	cmp	w1, w0
    ca9c:	b.ls	cab4 <inflateBackEnd@@ZLIB_1.2.0+0xc30>  // b.plast
    caa0:	ldr	x0, [sp, #24]
    caa4:	ldr	w1, [x0, #8]
    caa8:	mov	w0, #0x3f53                	// #16211
    caac:	cmp	w1, w0
    cab0:	b.ls	cabc <inflateBackEnd@@ZLIB_1.2.0+0xc38>  // b.plast
    cab4:	mov	w0, #0x1                   	// #1
    cab8:	b	cac0 <inflateBackEnd@@ZLIB_1.2.0+0xc3c>
    cabc:	mov	w0, #0x0                   	// #0
    cac0:	add	sp, sp, #0x20
    cac4:	ret

000000000000cac8 <inflateResetKeep@@ZLIB_1.2.5.2>:
    cac8:	stp	x29, x30, [sp, #-48]!
    cacc:	mov	x29, sp
    cad0:	str	x0, [sp, #24]
    cad4:	ldr	x0, [sp, #24]
    cad8:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
    cadc:	cmp	w0, #0x0
    cae0:	b.eq	caec <inflateResetKeep@@ZLIB_1.2.5.2+0x24>  // b.none
    cae4:	mov	w0, #0xfffffffe            	// #-2
    cae8:	b	cbdc <inflateResetKeep@@ZLIB_1.2.5.2+0x114>
    caec:	ldr	x0, [sp, #24]
    caf0:	ldr	x0, [x0, #56]
    caf4:	str	x0, [sp, #40]
    caf8:	ldr	x0, [sp, #40]
    cafc:	str	xzr, [x0, #40]
    cb00:	ldr	x0, [sp, #40]
    cb04:	ldr	x1, [x0, #40]
    cb08:	ldr	x0, [sp, #24]
    cb0c:	str	x1, [x0, #40]
    cb10:	ldr	x0, [sp, #24]
    cb14:	ldr	x1, [x0, #40]
    cb18:	ldr	x0, [sp, #24]
    cb1c:	str	x1, [x0, #16]
    cb20:	ldr	x0, [sp, #24]
    cb24:	str	xzr, [x0, #48]
    cb28:	ldr	x0, [sp, #40]
    cb2c:	ldr	w0, [x0, #16]
    cb30:	cmp	w0, #0x0
    cb34:	b.eq	cb50 <inflateResetKeep@@ZLIB_1.2.5.2+0x88>  // b.none
    cb38:	ldr	x0, [sp, #40]
    cb3c:	ldr	w0, [x0, #16]
    cb40:	mov	w0, w0
    cb44:	and	x1, x0, #0x1
    cb48:	ldr	x0, [sp, #24]
    cb4c:	str	x1, [x0, #96]
    cb50:	ldr	x0, [sp, #40]
    cb54:	mov	w1, #0x3f34                	// #16180
    cb58:	str	w1, [x0, #8]
    cb5c:	ldr	x0, [sp, #40]
    cb60:	str	wzr, [x0, #12]
    cb64:	ldr	x0, [sp, #40]
    cb68:	str	wzr, [x0, #20]
    cb6c:	ldr	x0, [sp, #40]
    cb70:	mov	w1, #0x8000                	// #32768
    cb74:	str	w1, [x0, #28]
    cb78:	ldr	x0, [sp, #40]
    cb7c:	str	xzr, [x0, #48]
    cb80:	ldr	x0, [sp, #40]
    cb84:	str	xzr, [x0, #80]
    cb88:	ldr	x0, [sp, #40]
    cb8c:	str	wzr, [x0, #88]
    cb90:	ldr	x0, [sp, #40]
    cb94:	add	x1, x0, #0x558
    cb98:	ldr	x0, [sp, #40]
    cb9c:	str	x1, [x0, #144]
    cba0:	ldr	x0, [sp, #40]
    cba4:	ldr	x1, [x0, #144]
    cba8:	ldr	x0, [sp, #40]
    cbac:	str	x1, [x0, #112]
    cbb0:	ldr	x0, [sp, #40]
    cbb4:	ldr	x1, [x0, #112]
    cbb8:	ldr	x0, [sp, #40]
    cbbc:	str	x1, [x0, #104]
    cbc0:	ldr	x0, [sp, #40]
    cbc4:	mov	w1, #0x1                   	// #1
    cbc8:	str	w1, [x0, #7144]
    cbcc:	ldr	x0, [sp, #40]
    cbd0:	mov	w1, #0xffffffff            	// #-1
    cbd4:	str	w1, [x0, #7148]
    cbd8:	mov	w0, #0x0                   	// #0
    cbdc:	ldp	x29, x30, [sp], #48
    cbe0:	ret

000000000000cbe4 <inflateReset@@Base>:
    cbe4:	stp	x29, x30, [sp, #-48]!
    cbe8:	mov	x29, sp
    cbec:	str	x0, [sp, #24]
    cbf0:	ldr	x0, [sp, #24]
    cbf4:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
    cbf8:	cmp	w0, #0x0
    cbfc:	b.eq	cc08 <inflateReset@@Base+0x24>  // b.none
    cc00:	mov	w0, #0xfffffffe            	// #-2
    cc04:	b	cc34 <inflateReset@@Base+0x50>
    cc08:	ldr	x0, [sp, #24]
    cc0c:	ldr	x0, [x0, #56]
    cc10:	str	x0, [sp, #40]
    cc14:	ldr	x0, [sp, #40]
    cc18:	str	wzr, [x0, #60]
    cc1c:	ldr	x0, [sp, #40]
    cc20:	str	wzr, [x0, #64]
    cc24:	ldr	x0, [sp, #40]
    cc28:	str	wzr, [x0, #68]
    cc2c:	ldr	x0, [sp, #24]
    cc30:	bl	2440 <inflateResetKeep@plt>
    cc34:	ldp	x29, x30, [sp], #48
    cc38:	ret

000000000000cc3c <inflateReset2@@ZLIB_1.2.3.4>:
    cc3c:	stp	x29, x30, [sp, #-48]!
    cc40:	mov	x29, sp
    cc44:	str	x0, [sp, #24]
    cc48:	str	w1, [sp, #20]
    cc4c:	ldr	x0, [sp, #24]
    cc50:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
    cc54:	cmp	w0, #0x0
    cc58:	b.eq	cc64 <inflateReset2@@ZLIB_1.2.3.4+0x28>  // b.none
    cc5c:	mov	w0, #0xfffffffe            	// #-2
    cc60:	b	cd54 <inflateReset2@@ZLIB_1.2.3.4+0x118>
    cc64:	ldr	x0, [sp, #24]
    cc68:	ldr	x0, [x0, #56]
    cc6c:	str	x0, [sp, #32]
    cc70:	ldr	w0, [sp, #20]
    cc74:	cmp	w0, #0x0
    cc78:	b.ge	cc90 <inflateReset2@@ZLIB_1.2.3.4+0x54>  // b.tcont
    cc7c:	str	wzr, [sp, #44]
    cc80:	ldr	w0, [sp, #20]
    cc84:	neg	w0, w0
    cc88:	str	w0, [sp, #20]
    cc8c:	b	ccb8 <inflateReset2@@ZLIB_1.2.3.4+0x7c>
    cc90:	ldr	w0, [sp, #20]
    cc94:	asr	w0, w0, #4
    cc98:	add	w0, w0, #0x5
    cc9c:	str	w0, [sp, #44]
    cca0:	ldr	w0, [sp, #20]
    cca4:	cmp	w0, #0x2f
    cca8:	b.gt	ccb8 <inflateReset2@@ZLIB_1.2.3.4+0x7c>
    ccac:	ldr	w0, [sp, #20]
    ccb0:	and	w0, w0, #0xf
    ccb4:	str	w0, [sp, #20]
    ccb8:	ldr	w0, [sp, #20]
    ccbc:	cmp	w0, #0x0
    ccc0:	b.eq	cce4 <inflateReset2@@ZLIB_1.2.3.4+0xa8>  // b.none
    ccc4:	ldr	w0, [sp, #20]
    ccc8:	cmp	w0, #0x7
    cccc:	b.le	ccdc <inflateReset2@@ZLIB_1.2.3.4+0xa0>
    ccd0:	ldr	w0, [sp, #20]
    ccd4:	cmp	w0, #0xf
    ccd8:	b.le	cce4 <inflateReset2@@ZLIB_1.2.3.4+0xa8>
    ccdc:	mov	w0, #0xfffffffe            	// #-2
    cce0:	b	cd54 <inflateReset2@@ZLIB_1.2.3.4+0x118>
    cce4:	ldr	x0, [sp, #32]
    cce8:	ldr	x0, [x0, #72]
    ccec:	cmp	x0, #0x0
    ccf0:	b.eq	cd34 <inflateReset2@@ZLIB_1.2.3.4+0xf8>  // b.none
    ccf4:	ldr	x0, [sp, #32]
    ccf8:	ldr	w1, [x0, #56]
    ccfc:	ldr	w0, [sp, #20]
    cd00:	cmp	w1, w0
    cd04:	b.eq	cd34 <inflateReset2@@ZLIB_1.2.3.4+0xf8>  // b.none
    cd08:	ldr	x0, [sp, #24]
    cd0c:	ldr	x2, [x0, #72]
    cd10:	ldr	x0, [sp, #24]
    cd14:	ldr	x3, [x0, #80]
    cd18:	ldr	x0, [sp, #32]
    cd1c:	ldr	x0, [x0, #72]
    cd20:	mov	x1, x0
    cd24:	mov	x0, x3
    cd28:	blr	x2
    cd2c:	ldr	x0, [sp, #32]
    cd30:	str	xzr, [x0, #72]
    cd34:	ldr	x0, [sp, #32]
    cd38:	ldr	w1, [sp, #44]
    cd3c:	str	w1, [x0, #16]
    cd40:	ldr	w1, [sp, #20]
    cd44:	ldr	x0, [sp, #32]
    cd48:	str	w1, [x0, #56]
    cd4c:	ldr	x0, [sp, #24]
    cd50:	bl	2610 <inflateReset@plt>
    cd54:	ldp	x29, x30, [sp], #48
    cd58:	ret

000000000000cd5c <inflateInit2_@@Base>:
    cd5c:	stp	x29, x30, [sp, #-64]!
    cd60:	mov	x29, sp
    cd64:	str	x0, [sp, #40]
    cd68:	str	w1, [sp, #36]
    cd6c:	str	x2, [sp, #24]
    cd70:	str	w3, [sp, #32]
    cd74:	ldr	x0, [sp, #24]
    cd78:	cmp	x0, #0x0
    cd7c:	b.eq	cda0 <inflateInit2_@@Base+0x44>  // b.none
    cd80:	ldr	x0, [sp, #24]
    cd84:	ldrb	w1, [x0]
    cd88:	mov	w0, #0x31                  	// #49
    cd8c:	cmp	w1, w0
    cd90:	b.ne	cda0 <inflateInit2_@@Base+0x44>  // b.any
    cd94:	ldr	w0, [sp, #32]
    cd98:	cmp	w0, #0x70
    cd9c:	b.eq	cda8 <inflateInit2_@@Base+0x4c>  // b.none
    cda0:	mov	w0, #0xfffffffa            	// #-6
    cda4:	b	ceac <inflateInit2_@@Base+0x150>
    cda8:	ldr	x0, [sp, #40]
    cdac:	cmp	x0, #0x0
    cdb0:	b.ne	cdbc <inflateInit2_@@Base+0x60>  // b.any
    cdb4:	mov	w0, #0xfffffffe            	// #-2
    cdb8:	b	ceac <inflateInit2_@@Base+0x150>
    cdbc:	ldr	x0, [sp, #40]
    cdc0:	str	xzr, [x0, #48]
    cdc4:	ldr	x0, [sp, #40]
    cdc8:	ldr	x0, [x0, #64]
    cdcc:	cmp	x0, #0x0
    cdd0:	b.ne	cdec <inflateInit2_@@Base+0x90>  // b.any
    cdd4:	ldr	x0, [sp, #40]
    cdd8:	adrp	x1, 15000 <inflateCodesUsed@@ZLIB_1.2.9+0x4610>
    cddc:	add	x1, x1, #0x474
    cde0:	str	x1, [x0, #64]
    cde4:	ldr	x0, [sp, #40]
    cde8:	str	xzr, [x0, #80]
    cdec:	ldr	x0, [sp, #40]
    cdf0:	ldr	x0, [x0, #72]
    cdf4:	cmp	x0, #0x0
    cdf8:	b.ne	ce0c <inflateInit2_@@Base+0xb0>  // b.any
    cdfc:	ldr	x0, [sp, #40]
    ce00:	adrp	x1, 15000 <inflateCodesUsed@@ZLIB_1.2.9+0x4610>
    ce04:	add	x1, x1, #0x4a4
    ce08:	str	x1, [x0, #72]
    ce0c:	ldr	x0, [sp, #40]
    ce10:	ldr	x3, [x0, #64]
    ce14:	ldr	x0, [sp, #40]
    ce18:	ldr	x0, [x0, #80]
    ce1c:	mov	w2, #0x1bf8                	// #7160
    ce20:	mov	w1, #0x1                   	// #1
    ce24:	blr	x3
    ce28:	str	x0, [sp, #56]
    ce2c:	ldr	x0, [sp, #56]
    ce30:	cmp	x0, #0x0
    ce34:	b.ne	ce40 <inflateInit2_@@Base+0xe4>  // b.any
    ce38:	mov	w0, #0xfffffffc            	// #-4
    ce3c:	b	ceac <inflateInit2_@@Base+0x150>
    ce40:	ldr	x0, [sp, #40]
    ce44:	ldr	x1, [sp, #56]
    ce48:	str	x1, [x0, #56]
    ce4c:	ldr	x0, [sp, #56]
    ce50:	ldr	x1, [sp, #40]
    ce54:	str	x1, [x0]
    ce58:	ldr	x0, [sp, #56]
    ce5c:	str	xzr, [x0, #72]
    ce60:	ldr	x0, [sp, #56]
    ce64:	mov	w1, #0x3f34                	// #16180
    ce68:	str	w1, [x0, #8]
    ce6c:	ldr	w1, [sp, #36]
    ce70:	ldr	x0, [sp, #40]
    ce74:	bl	2640 <inflateReset2@plt>
    ce78:	str	w0, [sp, #52]
    ce7c:	ldr	w0, [sp, #52]
    ce80:	cmp	w0, #0x0
    ce84:	b.eq	cea8 <inflateInit2_@@Base+0x14c>  // b.none
    ce88:	ldr	x0, [sp, #40]
    ce8c:	ldr	x2, [x0, #72]
    ce90:	ldr	x0, [sp, #40]
    ce94:	ldr	x0, [x0, #80]
    ce98:	ldr	x1, [sp, #56]
    ce9c:	blr	x2
    cea0:	ldr	x0, [sp, #40]
    cea4:	str	xzr, [x0, #56]
    cea8:	ldr	w0, [sp, #52]
    ceac:	ldp	x29, x30, [sp], #64
    ceb0:	ret

000000000000ceb4 <inflateInit_@@Base>:
    ceb4:	stp	x29, x30, [sp, #-48]!
    ceb8:	mov	x29, sp
    cebc:	str	x0, [sp, #40]
    cec0:	str	x1, [sp, #32]
    cec4:	str	w2, [sp, #28]
    cec8:	ldr	w3, [sp, #28]
    cecc:	ldr	x2, [sp, #32]
    ced0:	mov	w1, #0xf                   	// #15
    ced4:	ldr	x0, [sp, #40]
    ced8:	bl	2600 <inflateInit2_@plt>
    cedc:	ldp	x29, x30, [sp], #48
    cee0:	ret

000000000000cee4 <inflatePrime@@ZLIB_1.2.2.4>:
    cee4:	stp	x29, x30, [sp, #-48]!
    cee8:	mov	x29, sp
    ceec:	str	x0, [sp, #24]
    cef0:	str	w1, [sp, #20]
    cef4:	str	w2, [sp, #16]
    cef8:	ldr	x0, [sp, #24]
    cefc:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
    cf00:	cmp	w0, #0x0
    cf04:	b.eq	cf10 <inflatePrime@@ZLIB_1.2.2.4+0x2c>  // b.none
    cf08:	mov	w0, #0xfffffffe            	// #-2
    cf0c:	b	cfd0 <inflatePrime@@ZLIB_1.2.2.4+0xec>
    cf10:	ldr	x0, [sp, #24]
    cf14:	ldr	x0, [x0, #56]
    cf18:	str	x0, [sp, #40]
    cf1c:	ldr	w0, [sp, #20]
    cf20:	cmp	w0, #0x0
    cf24:	b.ge	cf40 <inflatePrime@@ZLIB_1.2.2.4+0x5c>  // b.tcont
    cf28:	ldr	x0, [sp, #40]
    cf2c:	str	xzr, [x0, #80]
    cf30:	ldr	x0, [sp, #40]
    cf34:	str	wzr, [x0, #88]
    cf38:	mov	w0, #0x0                   	// #0
    cf3c:	b	cfd0 <inflatePrime@@ZLIB_1.2.2.4+0xec>
    cf40:	ldr	w0, [sp, #20]
    cf44:	cmp	w0, #0x10
    cf48:	b.gt	cf64 <inflatePrime@@ZLIB_1.2.2.4+0x80>
    cf4c:	ldr	x0, [sp, #40]
    cf50:	ldr	w1, [x0, #88]
    cf54:	ldr	w0, [sp, #20]
    cf58:	add	w0, w1, w0
    cf5c:	cmp	w0, #0x20
    cf60:	b.ls	cf6c <inflatePrime@@ZLIB_1.2.2.4+0x88>  // b.plast
    cf64:	mov	w0, #0xfffffffe            	// #-2
    cf68:	b	cfd0 <inflatePrime@@ZLIB_1.2.2.4+0xec>
    cf6c:	ldr	w0, [sp, #20]
    cf70:	mov	x1, #0x1                   	// #1
    cf74:	lsl	x0, x1, x0
    cf78:	sub	w0, w0, #0x1
    cf7c:	mov	w1, w0
    cf80:	ldr	w0, [sp, #16]
    cf84:	and	w0, w0, w1
    cf88:	str	w0, [sp, #16]
    cf8c:	ldr	x0, [sp, #40]
    cf90:	ldr	x1, [x0, #80]
    cf94:	ldr	w2, [sp, #16]
    cf98:	ldr	x0, [sp, #40]
    cf9c:	ldr	w0, [x0, #88]
    cfa0:	lsl	w0, w2, w0
    cfa4:	mov	w0, w0
    cfa8:	add	x1, x1, x0
    cfac:	ldr	x0, [sp, #40]
    cfb0:	str	x1, [x0, #80]
    cfb4:	ldr	x0, [sp, #40]
    cfb8:	ldr	w1, [x0, #88]
    cfbc:	ldr	w0, [sp, #20]
    cfc0:	add	w1, w1, w0
    cfc4:	ldr	x0, [sp, #40]
    cfc8:	str	w1, [x0, #88]
    cfcc:	mov	w0, #0x0                   	// #0
    cfd0:	ldp	x29, x30, [sp], #48
    cfd4:	ret
    cfd8:	sub	sp, sp, #0x10
    cfdc:	str	x0, [sp, #8]
    cfe0:	ldr	x0, [sp, #8]
    cfe4:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    cfe8:	add	x1, x1, #0xcf0
    cfec:	str	x1, [x0, #104]
    cff0:	ldr	x0, [sp, #8]
    cff4:	mov	w1, #0x9                   	// #9
    cff8:	str	w1, [x0, #120]
    cffc:	ldr	x0, [sp, #8]
    d000:	adrp	x1, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    d004:	add	x1, x1, #0x4f0
    d008:	str	x1, [x0, #112]
    d00c:	ldr	x0, [sp, #8]
    d010:	mov	w1, #0x5                   	// #5
    d014:	str	w1, [x0, #124]
    d018:	nop
    d01c:	add	sp, sp, #0x10
    d020:	ret
    d024:	stp	x29, x30, [sp, #-64]!
    d028:	mov	x29, sp
    d02c:	str	x0, [sp, #40]
    d030:	str	x1, [sp, #32]
    d034:	str	w2, [sp, #28]
    d038:	ldr	x0, [sp, #40]
    d03c:	ldr	x0, [x0, #56]
    d040:	str	x0, [sp, #48]
    d044:	ldr	x0, [sp, #48]
    d048:	ldr	x0, [x0, #72]
    d04c:	cmp	x0, #0x0
    d050:	b.ne	d0a8 <inflatePrime@@ZLIB_1.2.2.4+0x1c4>  // b.any
    d054:	ldr	x0, [sp, #40]
    d058:	ldr	x3, [x0, #64]
    d05c:	ldr	x0, [sp, #40]
    d060:	ldr	x4, [x0, #80]
    d064:	ldr	x0, [sp, #48]
    d068:	ldr	w0, [x0, #56]
    d06c:	mov	w1, #0x1                   	// #1
    d070:	lsl	w0, w1, w0
    d074:	mov	w2, #0x1                   	// #1
    d078:	mov	w1, w0
    d07c:	mov	x0, x4
    d080:	blr	x3
    d084:	mov	x1, x0
    d088:	ldr	x0, [sp, #48]
    d08c:	str	x1, [x0, #72]
    d090:	ldr	x0, [sp, #48]
    d094:	ldr	x0, [x0, #72]
    d098:	cmp	x0, #0x0
    d09c:	b.ne	d0a8 <inflatePrime@@ZLIB_1.2.2.4+0x1c4>  // b.any
    d0a0:	mov	w0, #0x1                   	// #1
    d0a4:	b	d288 <inflatePrime@@ZLIB_1.2.2.4+0x3a4>
    d0a8:	ldr	x0, [sp, #48]
    d0ac:	ldr	w0, [x0, #60]
    d0b0:	cmp	w0, #0x0
    d0b4:	b.ne	d0e0 <inflatePrime@@ZLIB_1.2.2.4+0x1fc>  // b.any
    d0b8:	ldr	x0, [sp, #48]
    d0bc:	ldr	w0, [x0, #56]
    d0c0:	mov	w1, #0x1                   	// #1
    d0c4:	lsl	w1, w1, w0
    d0c8:	ldr	x0, [sp, #48]
    d0cc:	str	w1, [x0, #60]
    d0d0:	ldr	x0, [sp, #48]
    d0d4:	str	wzr, [x0, #68]
    d0d8:	ldr	x0, [sp, #48]
    d0dc:	str	wzr, [x0, #64]
    d0e0:	ldr	x0, [sp, #48]
    d0e4:	ldr	w0, [x0, #60]
    d0e8:	ldr	w1, [sp, #28]
    d0ec:	cmp	w1, w0
    d0f0:	b.cc	d148 <inflatePrime@@ZLIB_1.2.2.4+0x264>  // b.lo, b.ul, b.last
    d0f4:	ldr	x0, [sp, #48]
    d0f8:	ldr	x3, [x0, #72]
    d0fc:	ldr	x0, [sp, #48]
    d100:	ldr	w0, [x0, #60]
    d104:	mov	w0, w0
    d108:	neg	x0, x0
    d10c:	ldr	x1, [sp, #32]
    d110:	add	x1, x1, x0
    d114:	ldr	x0, [sp, #48]
    d118:	ldr	w0, [x0, #60]
    d11c:	mov	w0, w0
    d120:	mov	x2, x0
    d124:	mov	x0, x3
    d128:	bl	23a0 <memcpy@plt>
    d12c:	ldr	x0, [sp, #48]
    d130:	str	wzr, [x0, #68]
    d134:	ldr	x0, [sp, #48]
    d138:	ldr	w1, [x0, #60]
    d13c:	ldr	x0, [sp, #48]
    d140:	str	w1, [x0, #64]
    d144:	b	d284 <inflatePrime@@ZLIB_1.2.2.4+0x3a0>
    d148:	ldr	x0, [sp, #48]
    d14c:	ldr	w1, [x0, #60]
    d150:	ldr	x0, [sp, #48]
    d154:	ldr	w0, [x0, #68]
    d158:	sub	w0, w1, w0
    d15c:	str	w0, [sp, #60]
    d160:	ldr	w1, [sp, #60]
    d164:	ldr	w0, [sp, #28]
    d168:	cmp	w1, w0
    d16c:	b.ls	d178 <inflatePrime@@ZLIB_1.2.2.4+0x294>  // b.plast
    d170:	ldr	w0, [sp, #28]
    d174:	str	w0, [sp, #60]
    d178:	ldr	x0, [sp, #48]
    d17c:	ldr	x1, [x0, #72]
    d180:	ldr	x0, [sp, #48]
    d184:	ldr	w0, [x0, #68]
    d188:	mov	w0, w0
    d18c:	add	x3, x1, x0
    d190:	ldr	w0, [sp, #28]
    d194:	neg	x0, x0
    d198:	ldr	x1, [sp, #32]
    d19c:	add	x0, x1, x0
    d1a0:	ldr	w1, [sp, #60]
    d1a4:	mov	x2, x1
    d1a8:	mov	x1, x0
    d1ac:	mov	x0, x3
    d1b0:	bl	23a0 <memcpy@plt>
    d1b4:	ldr	w1, [sp, #28]
    d1b8:	ldr	w0, [sp, #60]
    d1bc:	sub	w0, w1, w0
    d1c0:	str	w0, [sp, #28]
    d1c4:	ldr	w0, [sp, #28]
    d1c8:	cmp	w0, #0x0
    d1cc:	b.eq	d21c <inflatePrime@@ZLIB_1.2.2.4+0x338>  // b.none
    d1d0:	ldr	x0, [sp, #48]
    d1d4:	ldr	x3, [x0, #72]
    d1d8:	ldr	w0, [sp, #28]
    d1dc:	neg	x0, x0
    d1e0:	ldr	x1, [sp, #32]
    d1e4:	add	x0, x1, x0
    d1e8:	ldr	w1, [sp, #28]
    d1ec:	mov	x2, x1
    d1f0:	mov	x1, x0
    d1f4:	mov	x0, x3
    d1f8:	bl	23a0 <memcpy@plt>
    d1fc:	ldr	x0, [sp, #48]
    d200:	ldr	w1, [sp, #28]
    d204:	str	w1, [x0, #68]
    d208:	ldr	x0, [sp, #48]
    d20c:	ldr	w1, [x0, #60]
    d210:	ldr	x0, [sp, #48]
    d214:	str	w1, [x0, #64]
    d218:	b	d284 <inflatePrime@@ZLIB_1.2.2.4+0x3a0>
    d21c:	ldr	x0, [sp, #48]
    d220:	ldr	w1, [x0, #68]
    d224:	ldr	w0, [sp, #60]
    d228:	add	w1, w1, w0
    d22c:	ldr	x0, [sp, #48]
    d230:	str	w1, [x0, #68]
    d234:	ldr	x0, [sp, #48]
    d238:	ldr	w1, [x0, #68]
    d23c:	ldr	x0, [sp, #48]
    d240:	ldr	w0, [x0, #60]
    d244:	cmp	w1, w0
    d248:	b.ne	d254 <inflatePrime@@ZLIB_1.2.2.4+0x370>  // b.any
    d24c:	ldr	x0, [sp, #48]
    d250:	str	wzr, [x0, #68]
    d254:	ldr	x0, [sp, #48]
    d258:	ldr	w1, [x0, #64]
    d25c:	ldr	x0, [sp, #48]
    d260:	ldr	w0, [x0, #60]
    d264:	cmp	w1, w0
    d268:	b.cs	d284 <inflatePrime@@ZLIB_1.2.2.4+0x3a0>  // b.hs, b.nlast
    d26c:	ldr	x0, [sp, #48]
    d270:	ldr	w1, [x0, #64]
    d274:	ldr	w0, [sp, #60]
    d278:	add	w1, w1, w0
    d27c:	ldr	x0, [sp, #48]
    d280:	str	w1, [x0, #64]
    d284:	mov	w0, #0x0                   	// #0
    d288:	ldp	x29, x30, [sp], #64
    d28c:	ret

000000000000d290 <inflate@@Base>:
    d290:	stp	x29, x30, [sp, #-128]!
    d294:	mov	x29, sp
    d298:	str	x0, [sp, #24]
    d29c:	str	w1, [sp, #20]
    d2a0:	ldr	x0, [sp, #24]
    d2a4:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
    d2a8:	cmp	w0, #0x0
    d2ac:	b.ne	d2e0 <inflate@@Base+0x50>  // b.any
    d2b0:	ldr	x0, [sp, #24]
    d2b4:	ldr	x0, [x0, #24]
    d2b8:	cmp	x0, #0x0
    d2bc:	b.eq	d2e0 <inflate@@Base+0x50>  // b.none
    d2c0:	ldr	x0, [sp, #24]
    d2c4:	ldr	x0, [x0]
    d2c8:	cmp	x0, #0x0
    d2cc:	b.ne	d2e8 <inflate@@Base+0x58>  // b.any
    d2d0:	ldr	x0, [sp, #24]
    d2d4:	ldr	w0, [x0, #8]
    d2d8:	cmp	w0, #0x0
    d2dc:	b.eq	d2e8 <inflate@@Base+0x58>  // b.none
    d2e0:	mov	w0, #0xfffffffe            	// #-2
    d2e4:	b	fff4 <inflate@@Base+0x2d64>
    d2e8:	ldr	x0, [sp, #24]
    d2ec:	ldr	x0, [x0, #56]
    d2f0:	str	x0, [sp, #56]
    d2f4:	ldr	x0, [sp, #56]
    d2f8:	ldr	w1, [x0, #8]
    d2fc:	mov	w0, #0x3f3f                	// #16191
    d300:	cmp	w1, w0
    d304:	b.ne	d314 <inflate@@Base+0x84>  // b.any
    d308:	ldr	x0, [sp, #56]
    d30c:	mov	w1, #0x3f40                	// #16192
    d310:	str	w1, [x0, #8]
    d314:	ldr	x0, [sp, #24]
    d318:	ldr	x0, [x0, #24]
    d31c:	str	x0, [sp, #112]
    d320:	ldr	x0, [sp, #24]
    d324:	ldr	w0, [x0, #32]
    d328:	str	w0, [sp, #104]
    d32c:	ldr	x0, [sp, #24]
    d330:	ldr	x0, [x0]
    d334:	str	x0, [sp, #120]
    d338:	ldr	x0, [sp, #24]
    d33c:	ldr	w0, [x0, #8]
    d340:	str	w0, [sp, #108]
    d344:	ldr	x0, [sp, #56]
    d348:	ldr	x0, [x0, #80]
    d34c:	str	x0, [sp, #96]
    d350:	ldr	x0, [sp, #56]
    d354:	ldr	w0, [x0, #88]
    d358:	str	w0, [sp, #92]
    d35c:	ldr	w0, [sp, #108]
    d360:	str	w0, [sp, #52]
    d364:	ldr	w0, [sp, #104]
    d368:	str	w0, [sp, #88]
    d36c:	str	wzr, [sp, #64]
    d370:	ldr	x0, [sp, #56]
    d374:	ldr	w1, [x0, #8]
    d378:	mov	w0, #0xffffc0cc            	// #-16180
    d37c:	add	w0, w1, w0
    d380:	cmp	w0, #0x1e
    d384:	b.hi	fc14 <inflate@@Base+0x2984>  // b.pmore
    d388:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    d38c:	add	x1, x1, #0xc70
    d390:	ldr	w0, [x1, w0, uxtw #2]
    d394:	adr	x1, d3a0 <inflate@@Base+0x110>
    d398:	add	x0, x1, w0, sxtw #2
    d39c:	br	x0
    d3a0:	ldr	x0, [sp, #56]
    d3a4:	ldr	w0, [x0, #16]
    d3a8:	cmp	w0, #0x0
    d3ac:	b.ne	d40c <inflate@@Base+0x17c>  // b.any
    d3b0:	ldr	x0, [sp, #56]
    d3b4:	mov	w1, #0x3f40                	// #16192
    d3b8:	str	w1, [x0, #8]
    d3bc:	b	fc30 <inflate@@Base+0x29a0>
    d3c0:	ldr	w0, [sp, #108]
    d3c4:	cmp	w0, #0x0
    d3c8:	b.eq	fc34 <inflate@@Base+0x29a4>  // b.none
    d3cc:	ldr	w0, [sp, #108]
    d3d0:	sub	w0, w0, #0x1
    d3d4:	str	w0, [sp, #108]
    d3d8:	ldr	x0, [sp, #120]
    d3dc:	add	x1, x0, #0x1
    d3e0:	str	x1, [sp, #120]
    d3e4:	ldrb	w0, [x0]
    d3e8:	and	x1, x0, #0xff
    d3ec:	ldr	w0, [sp, #92]
    d3f0:	lsl	x0, x1, x0
    d3f4:	ldr	x1, [sp, #96]
    d3f8:	add	x0, x1, x0
    d3fc:	str	x0, [sp, #96]
    d400:	ldr	w0, [sp, #92]
    d404:	add	w0, w0, #0x8
    d408:	str	w0, [sp, #92]
    d40c:	ldr	w0, [sp, #92]
    d410:	cmp	w0, #0xf
    d414:	b.ls	d3c0 <inflate@@Base+0x130>  // b.plast
    d418:	ldr	x0, [sp, #56]
    d41c:	ldr	w0, [x0, #16]
    d420:	and	w0, w0, #0x2
    d424:	cmp	w0, #0x0
    d428:	b.eq	d4c8 <inflate@@Base+0x238>  // b.none
    d42c:	ldr	x1, [sp, #96]
    d430:	mov	x0, #0x8b1f                	// #35615
    d434:	cmp	x1, x0
    d438:	b.ne	d4c8 <inflate@@Base+0x238>  // b.any
    d43c:	ldr	x0, [sp, #56]
    d440:	ldr	w0, [x0, #56]
    d444:	cmp	w0, #0x0
    d448:	b.ne	d458 <inflate@@Base+0x1c8>  // b.any
    d44c:	ldr	x0, [sp, #56]
    d450:	mov	w1, #0xf                   	// #15
    d454:	str	w1, [x0, #56]
    d458:	mov	w2, #0x0                   	// #0
    d45c:	mov	x1, #0x0                   	// #0
    d460:	mov	x0, #0x0                   	// #0
    d464:	bl	2430 <crc32@plt>
    d468:	mov	x1, x0
    d46c:	ldr	x0, [sp, #56]
    d470:	str	x1, [x0, #32]
    d474:	ldr	x0, [sp, #96]
    d478:	and	w0, w0, #0xff
    d47c:	strb	w0, [sp, #32]
    d480:	ldr	x0, [sp, #96]
    d484:	lsr	x0, x0, #8
    d488:	and	w0, w0, #0xff
    d48c:	strb	w0, [sp, #33]
    d490:	ldr	x0, [sp, #56]
    d494:	ldr	x0, [x0, #32]
    d498:	add	x1, sp, #0x20
    d49c:	mov	w2, #0x2                   	// #2
    d4a0:	bl	2430 <crc32@plt>
    d4a4:	mov	x1, x0
    d4a8:	ldr	x0, [sp, #56]
    d4ac:	str	x1, [x0, #32]
    d4b0:	str	xzr, [sp, #96]
    d4b4:	str	wzr, [sp, #92]
    d4b8:	ldr	x0, [sp, #56]
    d4bc:	mov	w1, #0x3f35                	// #16181
    d4c0:	str	w1, [x0, #8]
    d4c4:	b	fc30 <inflate@@Base+0x29a0>
    d4c8:	ldr	x0, [sp, #56]
    d4cc:	str	wzr, [x0, #24]
    d4d0:	ldr	x0, [sp, #56]
    d4d4:	ldr	x0, [x0, #48]
    d4d8:	cmp	x0, #0x0
    d4dc:	b.eq	d4f0 <inflate@@Base+0x260>  // b.none
    d4e0:	ldr	x0, [sp, #56]
    d4e4:	ldr	x0, [x0, #48]
    d4e8:	mov	w1, #0xffffffff            	// #-1
    d4ec:	str	w1, [x0, #72]
    d4f0:	ldr	x0, [sp, #56]
    d4f4:	ldr	w0, [x0, #16]
    d4f8:	and	w0, w0, #0x1
    d4fc:	cmp	w0, #0x0
    d500:	b.eq	d55c <inflate@@Base+0x2cc>  // b.none
    d504:	ldr	x0, [sp, #96]
    d508:	lsl	w0, w0, #8
    d50c:	mov	w0, w0
    d510:	and	x1, x0, #0xffff
    d514:	ldr	x0, [sp, #96]
    d518:	lsr	x0, x0, #8
    d51c:	add	x2, x1, x0
    d520:	mov	x0, #0x4211                	// #16913
    d524:	movk	x0, #0x2108, lsl #16
    d528:	movk	x0, #0x1084, lsl #32
    d52c:	movk	x0, #0x842, lsl #48
    d530:	umulh	x0, x2, x0
    d534:	sub	x1, x2, x0
    d538:	lsr	x1, x1, #1
    d53c:	add	x0, x0, x1
    d540:	lsr	x1, x0, #4
    d544:	mov	x0, x1
    d548:	lsl	x0, x0, #5
    d54c:	sub	x0, x0, x1
    d550:	sub	x1, x2, x0
    d554:	cmp	x1, #0x0
    d558:	b.eq	d57c <inflate@@Base+0x2ec>  // b.none
    d55c:	ldr	x0, [sp, #24]
    d560:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    d564:	add	x1, x1, #0xa60
    d568:	str	x1, [x0, #48]
    d56c:	ldr	x0, [sp, #56]
    d570:	mov	w1, #0x3f51                	// #16209
    d574:	str	w1, [x0, #8]
    d578:	b	fc30 <inflate@@Base+0x29a0>
    d57c:	ldr	x0, [sp, #96]
    d580:	and	w0, w0, #0xf
    d584:	cmp	w0, #0x8
    d588:	b.eq	d5ac <inflate@@Base+0x31c>  // b.none
    d58c:	ldr	x0, [sp, #24]
    d590:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    d594:	add	x1, x1, #0xa78
    d598:	str	x1, [x0, #48]
    d59c:	ldr	x0, [sp, #56]
    d5a0:	mov	w1, #0x3f51                	// #16209
    d5a4:	str	w1, [x0, #8]
    d5a8:	b	fc30 <inflate@@Base+0x29a0>
    d5ac:	ldr	x0, [sp, #96]
    d5b0:	lsr	x0, x0, #4
    d5b4:	str	x0, [sp, #96]
    d5b8:	ldr	w0, [sp, #92]
    d5bc:	sub	w0, w0, #0x4
    d5c0:	str	w0, [sp, #92]
    d5c4:	ldr	x0, [sp, #96]
    d5c8:	and	w0, w0, #0xf
    d5cc:	add	w0, w0, #0x8
    d5d0:	str	w0, [sp, #68]
    d5d4:	ldr	x0, [sp, #56]
    d5d8:	ldr	w0, [x0, #56]
    d5dc:	cmp	w0, #0x0
    d5e0:	b.ne	d5f0 <inflate@@Base+0x360>  // b.any
    d5e4:	ldr	x0, [sp, #56]
    d5e8:	ldr	w1, [sp, #68]
    d5ec:	str	w1, [x0, #56]
    d5f0:	ldr	w0, [sp, #68]
    d5f4:	cmp	w0, #0xf
    d5f8:	b.hi	d610 <inflate@@Base+0x380>  // b.pmore
    d5fc:	ldr	x0, [sp, #56]
    d600:	ldr	w0, [x0, #56]
    d604:	ldr	w1, [sp, #68]
    d608:	cmp	w1, w0
    d60c:	b.ls	d630 <inflate@@Base+0x3a0>  // b.plast
    d610:	ldr	x0, [sp, #24]
    d614:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    d618:	add	x1, x1, #0xa98
    d61c:	str	x1, [x0, #48]
    d620:	ldr	x0, [sp, #56]
    d624:	mov	w1, #0x3f51                	// #16209
    d628:	str	w1, [x0, #8]
    d62c:	b	fc30 <inflate@@Base+0x29a0>
    d630:	ldr	w0, [sp, #68]
    d634:	mov	w1, #0x1                   	// #1
    d638:	lsl	w1, w1, w0
    d63c:	ldr	x0, [sp, #56]
    d640:	str	w1, [x0, #28]
    d644:	mov	w2, #0x0                   	// #0
    d648:	mov	x1, #0x0                   	// #0
    d64c:	mov	x0, #0x0                   	// #0
    d650:	bl	2560 <adler32@plt>
    d654:	mov	x1, x0
    d658:	ldr	x0, [sp, #56]
    d65c:	str	x1, [x0, #32]
    d660:	ldr	x0, [sp, #56]
    d664:	ldr	x1, [x0, #32]
    d668:	ldr	x0, [sp, #24]
    d66c:	str	x1, [x0, #96]
    d670:	ldr	x0, [sp, #96]
    d674:	and	x0, x0, #0x200
    d678:	cmp	x0, #0x0
    d67c:	b.eq	d688 <inflate@@Base+0x3f8>  // b.none
    d680:	mov	w0, #0x3f3d                	// #16189
    d684:	b	d68c <inflate@@Base+0x3fc>
    d688:	mov	w0, #0x3f3f                	// #16191
    d68c:	ldr	x1, [sp, #56]
    d690:	str	w0, [x1, #8]
    d694:	str	xzr, [sp, #96]
    d698:	str	wzr, [sp, #92]
    d69c:	b	fc30 <inflate@@Base+0x29a0>
    d6a0:	ldr	w0, [sp, #108]
    d6a4:	cmp	w0, #0x0
    d6a8:	b.eq	fc3c <inflate@@Base+0x29ac>  // b.none
    d6ac:	ldr	w0, [sp, #108]
    d6b0:	sub	w0, w0, #0x1
    d6b4:	str	w0, [sp, #108]
    d6b8:	ldr	x0, [sp, #120]
    d6bc:	add	x1, x0, #0x1
    d6c0:	str	x1, [sp, #120]
    d6c4:	ldrb	w0, [x0]
    d6c8:	and	x1, x0, #0xff
    d6cc:	ldr	w0, [sp, #92]
    d6d0:	lsl	x0, x1, x0
    d6d4:	ldr	x1, [sp, #96]
    d6d8:	add	x0, x1, x0
    d6dc:	str	x0, [sp, #96]
    d6e0:	ldr	w0, [sp, #92]
    d6e4:	add	w0, w0, #0x8
    d6e8:	str	w0, [sp, #92]
    d6ec:	ldr	w0, [sp, #92]
    d6f0:	cmp	w0, #0xf
    d6f4:	b.ls	d6a0 <inflate@@Base+0x410>  // b.plast
    d6f8:	ldr	x0, [sp, #96]
    d6fc:	mov	w1, w0
    d700:	ldr	x0, [sp, #56]
    d704:	str	w1, [x0, #24]
    d708:	ldr	x0, [sp, #56]
    d70c:	ldr	w0, [x0, #24]
    d710:	and	w0, w0, #0xff
    d714:	cmp	w0, #0x8
    d718:	b.eq	d73c <inflate@@Base+0x4ac>  // b.none
    d71c:	ldr	x0, [sp, #24]
    d720:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    d724:	add	x1, x1, #0xa78
    d728:	str	x1, [x0, #48]
    d72c:	ldr	x0, [sp, #56]
    d730:	mov	w1, #0x3f51                	// #16209
    d734:	str	w1, [x0, #8]
    d738:	b	fc30 <inflate@@Base+0x29a0>
    d73c:	ldr	x0, [sp, #56]
    d740:	ldr	w0, [x0, #24]
    d744:	and	w0, w0, #0xe000
    d748:	cmp	w0, #0x0
    d74c:	b.eq	d770 <inflate@@Base+0x4e0>  // b.none
    d750:	ldr	x0, [sp, #24]
    d754:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    d758:	add	x1, x1, #0xab0
    d75c:	str	x1, [x0, #48]
    d760:	ldr	x0, [sp, #56]
    d764:	mov	w1, #0x3f51                	// #16209
    d768:	str	w1, [x0, #8]
    d76c:	b	fc30 <inflate@@Base+0x29a0>
    d770:	ldr	x0, [sp, #56]
    d774:	ldr	x0, [x0, #48]
    d778:	cmp	x0, #0x0
    d77c:	b.eq	d79c <inflate@@Base+0x50c>  // b.none
    d780:	ldr	x0, [sp, #96]
    d784:	lsr	x0, x0, #8
    d788:	mov	w1, w0
    d78c:	ldr	x0, [sp, #56]
    d790:	ldr	x0, [x0, #48]
    d794:	and	w1, w1, #0x1
    d798:	str	w1, [x0]
    d79c:	ldr	x0, [sp, #56]
    d7a0:	ldr	w0, [x0, #24]
    d7a4:	and	w0, w0, #0x200
    d7a8:	cmp	w0, #0x0
    d7ac:	b.eq	d800 <inflate@@Base+0x570>  // b.none
    d7b0:	ldr	x0, [sp, #56]
    d7b4:	ldr	w0, [x0, #16]
    d7b8:	and	w0, w0, #0x4
    d7bc:	cmp	w0, #0x0
    d7c0:	b.eq	d800 <inflate@@Base+0x570>  // b.none
    d7c4:	ldr	x0, [sp, #96]
    d7c8:	and	w0, w0, #0xff
    d7cc:	strb	w0, [sp, #32]
    d7d0:	ldr	x0, [sp, #96]
    d7d4:	lsr	x0, x0, #8
    d7d8:	and	w0, w0, #0xff
    d7dc:	strb	w0, [sp, #33]
    d7e0:	ldr	x0, [sp, #56]
    d7e4:	ldr	x0, [x0, #32]
    d7e8:	add	x1, sp, #0x20
    d7ec:	mov	w2, #0x2                   	// #2
    d7f0:	bl	2430 <crc32@plt>
    d7f4:	mov	x1, x0
    d7f8:	ldr	x0, [sp, #56]
    d7fc:	str	x1, [x0, #32]
    d800:	str	xzr, [sp, #96]
    d804:	str	wzr, [sp, #92]
    d808:	ldr	x0, [sp, #56]
    d80c:	mov	w1, #0x3f36                	// #16182
    d810:	str	w1, [x0, #8]
    d814:	b	d864 <inflate@@Base+0x5d4>
    d818:	ldr	w0, [sp, #108]
    d81c:	cmp	w0, #0x0
    d820:	b.eq	fc44 <inflate@@Base+0x29b4>  // b.none
    d824:	ldr	w0, [sp, #108]
    d828:	sub	w0, w0, #0x1
    d82c:	str	w0, [sp, #108]
    d830:	ldr	x0, [sp, #120]
    d834:	add	x1, x0, #0x1
    d838:	str	x1, [sp, #120]
    d83c:	ldrb	w0, [x0]
    d840:	and	x1, x0, #0xff
    d844:	ldr	w0, [sp, #92]
    d848:	lsl	x0, x1, x0
    d84c:	ldr	x1, [sp, #96]
    d850:	add	x0, x1, x0
    d854:	str	x0, [sp, #96]
    d858:	ldr	w0, [sp, #92]
    d85c:	add	w0, w0, #0x8
    d860:	str	w0, [sp, #92]
    d864:	ldr	w0, [sp, #92]
    d868:	cmp	w0, #0x1f
    d86c:	b.ls	d818 <inflate@@Base+0x588>  // b.plast
    d870:	ldr	x0, [sp, #56]
    d874:	ldr	x0, [x0, #48]
    d878:	cmp	x0, #0x0
    d87c:	b.eq	d890 <inflate@@Base+0x600>  // b.none
    d880:	ldr	x0, [sp, #56]
    d884:	ldr	x0, [x0, #48]
    d888:	ldr	x1, [sp, #96]
    d88c:	str	x1, [x0, #8]
    d890:	ldr	x0, [sp, #56]
    d894:	ldr	w0, [x0, #24]
    d898:	and	w0, w0, #0x200
    d89c:	cmp	w0, #0x0
    d8a0:	b.eq	d914 <inflate@@Base+0x684>  // b.none
    d8a4:	ldr	x0, [sp, #56]
    d8a8:	ldr	w0, [x0, #16]
    d8ac:	and	w0, w0, #0x4
    d8b0:	cmp	w0, #0x0
    d8b4:	b.eq	d914 <inflate@@Base+0x684>  // b.none
    d8b8:	ldr	x0, [sp, #96]
    d8bc:	and	w0, w0, #0xff
    d8c0:	strb	w0, [sp, #32]
    d8c4:	ldr	x0, [sp, #96]
    d8c8:	lsr	x0, x0, #8
    d8cc:	and	w0, w0, #0xff
    d8d0:	strb	w0, [sp, #33]
    d8d4:	ldr	x0, [sp, #96]
    d8d8:	lsr	x0, x0, #16
    d8dc:	and	w0, w0, #0xff
    d8e0:	strb	w0, [sp, #34]
    d8e4:	ldr	x0, [sp, #96]
    d8e8:	lsr	x0, x0, #24
    d8ec:	and	w0, w0, #0xff
    d8f0:	strb	w0, [sp, #35]
    d8f4:	ldr	x0, [sp, #56]
    d8f8:	ldr	x0, [x0, #32]
    d8fc:	add	x1, sp, #0x20
    d900:	mov	w2, #0x4                   	// #4
    d904:	bl	2430 <crc32@plt>
    d908:	mov	x1, x0
    d90c:	ldr	x0, [sp, #56]
    d910:	str	x1, [x0, #32]
    d914:	str	xzr, [sp, #96]
    d918:	str	wzr, [sp, #92]
    d91c:	ldr	x0, [sp, #56]
    d920:	mov	w1, #0x3f37                	// #16183
    d924:	str	w1, [x0, #8]
    d928:	b	d978 <inflate@@Base+0x6e8>
    d92c:	ldr	w0, [sp, #108]
    d930:	cmp	w0, #0x0
    d934:	b.eq	fc4c <inflate@@Base+0x29bc>  // b.none
    d938:	ldr	w0, [sp, #108]
    d93c:	sub	w0, w0, #0x1
    d940:	str	w0, [sp, #108]
    d944:	ldr	x0, [sp, #120]
    d948:	add	x1, x0, #0x1
    d94c:	str	x1, [sp, #120]
    d950:	ldrb	w0, [x0]
    d954:	and	x1, x0, #0xff
    d958:	ldr	w0, [sp, #92]
    d95c:	lsl	x0, x1, x0
    d960:	ldr	x1, [sp, #96]
    d964:	add	x0, x1, x0
    d968:	str	x0, [sp, #96]
    d96c:	ldr	w0, [sp, #92]
    d970:	add	w0, w0, #0x8
    d974:	str	w0, [sp, #92]
    d978:	ldr	w0, [sp, #92]
    d97c:	cmp	w0, #0xf
    d980:	b.ls	d92c <inflate@@Base+0x69c>  // b.plast
    d984:	ldr	x0, [sp, #56]
    d988:	ldr	x0, [x0, #48]
    d98c:	cmp	x0, #0x0
    d990:	b.eq	d9c0 <inflate@@Base+0x730>  // b.none
    d994:	ldr	x0, [sp, #96]
    d998:	mov	w1, w0
    d99c:	ldr	x0, [sp, #56]
    d9a0:	ldr	x0, [x0, #48]
    d9a4:	and	w1, w1, #0xff
    d9a8:	str	w1, [x0, #16]
    d9ac:	ldr	x0, [sp, #96]
    d9b0:	lsr	x1, x0, #8
    d9b4:	ldr	x0, [sp, #56]
    d9b8:	ldr	x0, [x0, #48]
    d9bc:	str	w1, [x0, #20]
    d9c0:	ldr	x0, [sp, #56]
    d9c4:	ldr	w0, [x0, #24]
    d9c8:	and	w0, w0, #0x200
    d9cc:	cmp	w0, #0x0
    d9d0:	b.eq	da24 <inflate@@Base+0x794>  // b.none
    d9d4:	ldr	x0, [sp, #56]
    d9d8:	ldr	w0, [x0, #16]
    d9dc:	and	w0, w0, #0x4
    d9e0:	cmp	w0, #0x0
    d9e4:	b.eq	da24 <inflate@@Base+0x794>  // b.none
    d9e8:	ldr	x0, [sp, #96]
    d9ec:	and	w0, w0, #0xff
    d9f0:	strb	w0, [sp, #32]
    d9f4:	ldr	x0, [sp, #96]
    d9f8:	lsr	x0, x0, #8
    d9fc:	and	w0, w0, #0xff
    da00:	strb	w0, [sp, #33]
    da04:	ldr	x0, [sp, #56]
    da08:	ldr	x0, [x0, #32]
    da0c:	add	x1, sp, #0x20
    da10:	mov	w2, #0x2                   	// #2
    da14:	bl	2430 <crc32@plt>
    da18:	mov	x1, x0
    da1c:	ldr	x0, [sp, #56]
    da20:	str	x1, [x0, #32]
    da24:	str	xzr, [sp, #96]
    da28:	str	wzr, [sp, #92]
    da2c:	ldr	x0, [sp, #56]
    da30:	mov	w1, #0x3f38                	// #16184
    da34:	str	w1, [x0, #8]
    da38:	ldr	x0, [sp, #56]
    da3c:	ldr	w0, [x0, #24]
    da40:	and	w0, w0, #0x400
    da44:	cmp	w0, #0x0
    da48:	b.eq	db48 <inflate@@Base+0x8b8>  // b.none
    da4c:	b	da9c <inflate@@Base+0x80c>
    da50:	ldr	w0, [sp, #108]
    da54:	cmp	w0, #0x0
    da58:	b.eq	fc54 <inflate@@Base+0x29c4>  // b.none
    da5c:	ldr	w0, [sp, #108]
    da60:	sub	w0, w0, #0x1
    da64:	str	w0, [sp, #108]
    da68:	ldr	x0, [sp, #120]
    da6c:	add	x1, x0, #0x1
    da70:	str	x1, [sp, #120]
    da74:	ldrb	w0, [x0]
    da78:	and	x1, x0, #0xff
    da7c:	ldr	w0, [sp, #92]
    da80:	lsl	x0, x1, x0
    da84:	ldr	x1, [sp, #96]
    da88:	add	x0, x1, x0
    da8c:	str	x0, [sp, #96]
    da90:	ldr	w0, [sp, #92]
    da94:	add	w0, w0, #0x8
    da98:	str	w0, [sp, #92]
    da9c:	ldr	w0, [sp, #92]
    daa0:	cmp	w0, #0xf
    daa4:	b.ls	da50 <inflate@@Base+0x7c0>  // b.plast
    daa8:	ldr	x0, [sp, #96]
    daac:	mov	w1, w0
    dab0:	ldr	x0, [sp, #56]
    dab4:	str	w1, [x0, #92]
    dab8:	ldr	x0, [sp, #56]
    dabc:	ldr	x0, [x0, #48]
    dac0:	cmp	x0, #0x0
    dac4:	b.eq	dad8 <inflate@@Base+0x848>  // b.none
    dac8:	ldr	x0, [sp, #56]
    dacc:	ldr	x0, [x0, #48]
    dad0:	ldr	x1, [sp, #96]
    dad4:	str	w1, [x0, #32]
    dad8:	ldr	x0, [sp, #56]
    dadc:	ldr	w0, [x0, #24]
    dae0:	and	w0, w0, #0x200
    dae4:	cmp	w0, #0x0
    dae8:	b.eq	db3c <inflate@@Base+0x8ac>  // b.none
    daec:	ldr	x0, [sp, #56]
    daf0:	ldr	w0, [x0, #16]
    daf4:	and	w0, w0, #0x4
    daf8:	cmp	w0, #0x0
    dafc:	b.eq	db3c <inflate@@Base+0x8ac>  // b.none
    db00:	ldr	x0, [sp, #96]
    db04:	and	w0, w0, #0xff
    db08:	strb	w0, [sp, #32]
    db0c:	ldr	x0, [sp, #96]
    db10:	lsr	x0, x0, #8
    db14:	and	w0, w0, #0xff
    db18:	strb	w0, [sp, #33]
    db1c:	ldr	x0, [sp, #56]
    db20:	ldr	x0, [x0, #32]
    db24:	add	x1, sp, #0x20
    db28:	mov	w2, #0x2                   	// #2
    db2c:	bl	2430 <crc32@plt>
    db30:	mov	x1, x0
    db34:	ldr	x0, [sp, #56]
    db38:	str	x1, [x0, #32]
    db3c:	str	xzr, [sp, #96]
    db40:	str	wzr, [sp, #92]
    db44:	b	db64 <inflate@@Base+0x8d4>
    db48:	ldr	x0, [sp, #56]
    db4c:	ldr	x0, [x0, #48]
    db50:	cmp	x0, #0x0
    db54:	b.eq	db64 <inflate@@Base+0x8d4>  // b.none
    db58:	ldr	x0, [sp, #56]
    db5c:	ldr	x0, [x0, #48]
    db60:	str	xzr, [x0, #24]
    db64:	ldr	x0, [sp, #56]
    db68:	mov	w1, #0x3f39                	// #16185
    db6c:	str	w1, [x0, #8]
    db70:	ldr	x0, [sp, #56]
    db74:	ldr	w0, [x0, #24]
    db78:	and	w0, w0, #0x400
    db7c:	cmp	w0, #0x0
    db80:	b.eq	dce8 <inflate@@Base+0xa58>  // b.none
    db84:	ldr	x0, [sp, #56]
    db88:	ldr	w0, [x0, #92]
    db8c:	str	w0, [sp, #84]
    db90:	ldr	w1, [sp, #84]
    db94:	ldr	w0, [sp, #108]
    db98:	cmp	w1, w0
    db9c:	b.ls	dba8 <inflate@@Base+0x918>  // b.plast
    dba0:	ldr	w0, [sp, #108]
    dba4:	str	w0, [sp, #84]
    dba8:	ldr	w0, [sp, #84]
    dbac:	cmp	w0, #0x0
    dbb0:	b.eq	dcd8 <inflate@@Base+0xa48>  // b.none
    dbb4:	ldr	x0, [sp, #56]
    dbb8:	ldr	x0, [x0, #48]
    dbbc:	cmp	x0, #0x0
    dbc0:	b.eq	dc58 <inflate@@Base+0x9c8>  // b.none
    dbc4:	ldr	x0, [sp, #56]
    dbc8:	ldr	x0, [x0, #48]
    dbcc:	ldr	x0, [x0, #24]
    dbd0:	cmp	x0, #0x0
    dbd4:	b.eq	dc58 <inflate@@Base+0x9c8>  // b.none
    dbd8:	ldr	x0, [sp, #56]
    dbdc:	ldr	x0, [x0, #48]
    dbe0:	ldr	w1, [x0, #32]
    dbe4:	ldr	x0, [sp, #56]
    dbe8:	ldr	w0, [x0, #92]
    dbec:	sub	w0, w1, w0
    dbf0:	str	w0, [sp, #68]
    dbf4:	ldr	x0, [sp, #56]
    dbf8:	ldr	x0, [x0, #48]
    dbfc:	ldr	x1, [x0, #24]
    dc00:	ldr	w0, [sp, #68]
    dc04:	add	x3, x1, x0
    dc08:	ldr	w1, [sp, #68]
    dc0c:	ldr	w0, [sp, #84]
    dc10:	add	w1, w1, w0
    dc14:	ldr	x0, [sp, #56]
    dc18:	ldr	x0, [x0, #48]
    dc1c:	ldr	w0, [x0, #36]
    dc20:	cmp	w1, w0
    dc24:	b.ls	dc44 <inflate@@Base+0x9b4>  // b.plast
    dc28:	ldr	x0, [sp, #56]
    dc2c:	ldr	x0, [x0, #48]
    dc30:	ldr	w1, [x0, #36]
    dc34:	ldr	w0, [sp, #68]
    dc38:	sub	w0, w1, w0
    dc3c:	mov	w0, w0
    dc40:	b	dc48 <inflate@@Base+0x9b8>
    dc44:	ldr	w0, [sp, #84]
    dc48:	mov	x2, x0
    dc4c:	ldr	x1, [sp, #120]
    dc50:	mov	x0, x3
    dc54:	bl	23a0 <memcpy@plt>
    dc58:	ldr	x0, [sp, #56]
    dc5c:	ldr	w0, [x0, #24]
    dc60:	and	w0, w0, #0x200
    dc64:	cmp	w0, #0x0
    dc68:	b.eq	dca0 <inflate@@Base+0xa10>  // b.none
    dc6c:	ldr	x0, [sp, #56]
    dc70:	ldr	w0, [x0, #16]
    dc74:	and	w0, w0, #0x4
    dc78:	cmp	w0, #0x0
    dc7c:	b.eq	dca0 <inflate@@Base+0xa10>  // b.none
    dc80:	ldr	x0, [sp, #56]
    dc84:	ldr	x0, [x0, #32]
    dc88:	ldr	w2, [sp, #84]
    dc8c:	ldr	x1, [sp, #120]
    dc90:	bl	2430 <crc32@plt>
    dc94:	mov	x1, x0
    dc98:	ldr	x0, [sp, #56]
    dc9c:	str	x1, [x0, #32]
    dca0:	ldr	w1, [sp, #108]
    dca4:	ldr	w0, [sp, #84]
    dca8:	sub	w0, w1, w0
    dcac:	str	w0, [sp, #108]
    dcb0:	ldr	w0, [sp, #84]
    dcb4:	ldr	x1, [sp, #120]
    dcb8:	add	x0, x1, x0
    dcbc:	str	x0, [sp, #120]
    dcc0:	ldr	x0, [sp, #56]
    dcc4:	ldr	w1, [x0, #92]
    dcc8:	ldr	w0, [sp, #84]
    dccc:	sub	w1, w1, w0
    dcd0:	ldr	x0, [sp, #56]
    dcd4:	str	w1, [x0, #92]
    dcd8:	ldr	x0, [sp, #56]
    dcdc:	ldr	w0, [x0, #92]
    dce0:	cmp	w0, #0x0
    dce4:	b.ne	fc5c <inflate@@Base+0x29cc>  // b.any
    dce8:	ldr	x0, [sp, #56]
    dcec:	str	wzr, [x0, #92]
    dcf0:	ldr	x0, [sp, #56]
    dcf4:	mov	w1, #0x3f3a                	// #16186
    dcf8:	str	w1, [x0, #8]
    dcfc:	ldr	x0, [sp, #56]
    dd00:	ldr	w0, [x0, #24]
    dd04:	and	w0, w0, #0x800
    dd08:	cmp	w0, #0x0
    dd0c:	b.eq	de48 <inflate@@Base+0xbb8>  // b.none
    dd10:	ldr	w0, [sp, #108]
    dd14:	cmp	w0, #0x0
    dd18:	b.eq	fc64 <inflate@@Base+0x29d4>  // b.none
    dd1c:	str	wzr, [sp, #84]
    dd20:	ldr	w0, [sp, #84]
    dd24:	add	w1, w0, #0x1
    dd28:	str	w1, [sp, #84]
    dd2c:	mov	w0, w0
    dd30:	ldr	x1, [sp, #120]
    dd34:	add	x0, x1, x0
    dd38:	ldrb	w0, [x0]
    dd3c:	str	w0, [sp, #68]
    dd40:	ldr	x0, [sp, #56]
    dd44:	ldr	x0, [x0, #48]
    dd48:	cmp	x0, #0x0
    dd4c:	b.eq	ddb4 <inflate@@Base+0xb24>  // b.none
    dd50:	ldr	x0, [sp, #56]
    dd54:	ldr	x0, [x0, #48]
    dd58:	ldr	x0, [x0, #40]
    dd5c:	cmp	x0, #0x0
    dd60:	b.eq	ddb4 <inflate@@Base+0xb24>  // b.none
    dd64:	ldr	x0, [sp, #56]
    dd68:	ldr	w1, [x0, #92]
    dd6c:	ldr	x0, [sp, #56]
    dd70:	ldr	x0, [x0, #48]
    dd74:	ldr	w0, [x0, #48]
    dd78:	cmp	w1, w0
    dd7c:	b.cs	ddb4 <inflate@@Base+0xb24>  // b.hs, b.nlast
    dd80:	ldr	x0, [sp, #56]
    dd84:	ldr	x0, [x0, #48]
    dd88:	ldr	x1, [x0, #40]
    dd8c:	ldr	x0, [sp, #56]
    dd90:	ldr	w0, [x0, #92]
    dd94:	add	w3, w0, #0x1
    dd98:	ldr	x2, [sp, #56]
    dd9c:	str	w3, [x2, #92]
    dda0:	mov	w0, w0
    dda4:	add	x0, x1, x0
    dda8:	ldr	w1, [sp, #68]
    ddac:	and	w1, w1, #0xff
    ddb0:	strb	w1, [x0]
    ddb4:	ldr	w0, [sp, #68]
    ddb8:	cmp	w0, #0x0
    ddbc:	b.eq	ddd0 <inflate@@Base+0xb40>  // b.none
    ddc0:	ldr	w1, [sp, #84]
    ddc4:	ldr	w0, [sp, #108]
    ddc8:	cmp	w1, w0
    ddcc:	b.cc	dd20 <inflate@@Base+0xa90>  // b.lo, b.ul, b.last
    ddd0:	ldr	x0, [sp, #56]
    ddd4:	ldr	w0, [x0, #24]
    ddd8:	and	w0, w0, #0x200
    dddc:	cmp	w0, #0x0
    dde0:	b.eq	de18 <inflate@@Base+0xb88>  // b.none
    dde4:	ldr	x0, [sp, #56]
    dde8:	ldr	w0, [x0, #16]
    ddec:	and	w0, w0, #0x4
    ddf0:	cmp	w0, #0x0
    ddf4:	b.eq	de18 <inflate@@Base+0xb88>  // b.none
    ddf8:	ldr	x0, [sp, #56]
    ddfc:	ldr	x0, [x0, #32]
    de00:	ldr	w2, [sp, #84]
    de04:	ldr	x1, [sp, #120]
    de08:	bl	2430 <crc32@plt>
    de0c:	mov	x1, x0
    de10:	ldr	x0, [sp, #56]
    de14:	str	x1, [x0, #32]
    de18:	ldr	w1, [sp, #108]
    de1c:	ldr	w0, [sp, #84]
    de20:	sub	w0, w1, w0
    de24:	str	w0, [sp, #108]
    de28:	ldr	w0, [sp, #84]
    de2c:	ldr	x1, [sp, #120]
    de30:	add	x0, x1, x0
    de34:	str	x0, [sp, #120]
    de38:	ldr	w0, [sp, #68]
    de3c:	cmp	w0, #0x0
    de40:	b.eq	de64 <inflate@@Base+0xbd4>  // b.none
    de44:	b	fd30 <inflate@@Base+0x2aa0>
    de48:	ldr	x0, [sp, #56]
    de4c:	ldr	x0, [x0, #48]
    de50:	cmp	x0, #0x0
    de54:	b.eq	de64 <inflate@@Base+0xbd4>  // b.none
    de58:	ldr	x0, [sp, #56]
    de5c:	ldr	x0, [x0, #48]
    de60:	str	xzr, [x0, #40]
    de64:	ldr	x0, [sp, #56]
    de68:	str	wzr, [x0, #92]
    de6c:	ldr	x0, [sp, #56]
    de70:	mov	w1, #0x3f3b                	// #16187
    de74:	str	w1, [x0, #8]
    de78:	ldr	x0, [sp, #56]
    de7c:	ldr	w0, [x0, #24]
    de80:	and	w0, w0, #0x1000
    de84:	cmp	w0, #0x0
    de88:	b.eq	dfc4 <inflate@@Base+0xd34>  // b.none
    de8c:	ldr	w0, [sp, #108]
    de90:	cmp	w0, #0x0
    de94:	b.eq	fc6c <inflate@@Base+0x29dc>  // b.none
    de98:	str	wzr, [sp, #84]
    de9c:	ldr	w0, [sp, #84]
    dea0:	add	w1, w0, #0x1
    dea4:	str	w1, [sp, #84]
    dea8:	mov	w0, w0
    deac:	ldr	x1, [sp, #120]
    deb0:	add	x0, x1, x0
    deb4:	ldrb	w0, [x0]
    deb8:	str	w0, [sp, #68]
    debc:	ldr	x0, [sp, #56]
    dec0:	ldr	x0, [x0, #48]
    dec4:	cmp	x0, #0x0
    dec8:	b.eq	df30 <inflate@@Base+0xca0>  // b.none
    decc:	ldr	x0, [sp, #56]
    ded0:	ldr	x0, [x0, #48]
    ded4:	ldr	x0, [x0, #56]
    ded8:	cmp	x0, #0x0
    dedc:	b.eq	df30 <inflate@@Base+0xca0>  // b.none
    dee0:	ldr	x0, [sp, #56]
    dee4:	ldr	w1, [x0, #92]
    dee8:	ldr	x0, [sp, #56]
    deec:	ldr	x0, [x0, #48]
    def0:	ldr	w0, [x0, #64]
    def4:	cmp	w1, w0
    def8:	b.cs	df30 <inflate@@Base+0xca0>  // b.hs, b.nlast
    defc:	ldr	x0, [sp, #56]
    df00:	ldr	x0, [x0, #48]
    df04:	ldr	x1, [x0, #56]
    df08:	ldr	x0, [sp, #56]
    df0c:	ldr	w0, [x0, #92]
    df10:	add	w3, w0, #0x1
    df14:	ldr	x2, [sp, #56]
    df18:	str	w3, [x2, #92]
    df1c:	mov	w0, w0
    df20:	add	x0, x1, x0
    df24:	ldr	w1, [sp, #68]
    df28:	and	w1, w1, #0xff
    df2c:	strb	w1, [x0]
    df30:	ldr	w0, [sp, #68]
    df34:	cmp	w0, #0x0
    df38:	b.eq	df4c <inflate@@Base+0xcbc>  // b.none
    df3c:	ldr	w1, [sp, #84]
    df40:	ldr	w0, [sp, #108]
    df44:	cmp	w1, w0
    df48:	b.cc	de9c <inflate@@Base+0xc0c>  // b.lo, b.ul, b.last
    df4c:	ldr	x0, [sp, #56]
    df50:	ldr	w0, [x0, #24]
    df54:	and	w0, w0, #0x200
    df58:	cmp	w0, #0x0
    df5c:	b.eq	df94 <inflate@@Base+0xd04>  // b.none
    df60:	ldr	x0, [sp, #56]
    df64:	ldr	w0, [x0, #16]
    df68:	and	w0, w0, #0x4
    df6c:	cmp	w0, #0x0
    df70:	b.eq	df94 <inflate@@Base+0xd04>  // b.none
    df74:	ldr	x0, [sp, #56]
    df78:	ldr	x0, [x0, #32]
    df7c:	ldr	w2, [sp, #84]
    df80:	ldr	x1, [sp, #120]
    df84:	bl	2430 <crc32@plt>
    df88:	mov	x1, x0
    df8c:	ldr	x0, [sp, #56]
    df90:	str	x1, [x0, #32]
    df94:	ldr	w1, [sp, #108]
    df98:	ldr	w0, [sp, #84]
    df9c:	sub	w0, w1, w0
    dfa0:	str	w0, [sp, #108]
    dfa4:	ldr	w0, [sp, #84]
    dfa8:	ldr	x1, [sp, #120]
    dfac:	add	x0, x1, x0
    dfb0:	str	x0, [sp, #120]
    dfb4:	ldr	w0, [sp, #68]
    dfb8:	cmp	w0, #0x0
    dfbc:	b.eq	dfe0 <inflate@@Base+0xd50>  // b.none
    dfc0:	b	fd30 <inflate@@Base+0x2aa0>
    dfc4:	ldr	x0, [sp, #56]
    dfc8:	ldr	x0, [x0, #48]
    dfcc:	cmp	x0, #0x0
    dfd0:	b.eq	dfe0 <inflate@@Base+0xd50>  // b.none
    dfd4:	ldr	x0, [sp, #56]
    dfd8:	ldr	x0, [x0, #48]
    dfdc:	str	xzr, [x0, #56]
    dfe0:	ldr	x0, [sp, #56]
    dfe4:	mov	w1, #0x3f3c                	// #16188
    dfe8:	str	w1, [x0, #8]
    dfec:	ldr	x0, [sp, #56]
    dff0:	ldr	w0, [x0, #24]
    dff4:	and	w0, w0, #0x200
    dff8:	cmp	w0, #0x0
    dffc:	b.eq	e0b0 <inflate@@Base+0xe20>  // b.none
    e000:	b	e050 <inflate@@Base+0xdc0>
    e004:	ldr	w0, [sp, #108]
    e008:	cmp	w0, #0x0
    e00c:	b.eq	fc74 <inflate@@Base+0x29e4>  // b.none
    e010:	ldr	w0, [sp, #108]
    e014:	sub	w0, w0, #0x1
    e018:	str	w0, [sp, #108]
    e01c:	ldr	x0, [sp, #120]
    e020:	add	x1, x0, #0x1
    e024:	str	x1, [sp, #120]
    e028:	ldrb	w0, [x0]
    e02c:	and	x1, x0, #0xff
    e030:	ldr	w0, [sp, #92]
    e034:	lsl	x0, x1, x0
    e038:	ldr	x1, [sp, #96]
    e03c:	add	x0, x1, x0
    e040:	str	x0, [sp, #96]
    e044:	ldr	w0, [sp, #92]
    e048:	add	w0, w0, #0x8
    e04c:	str	w0, [sp, #92]
    e050:	ldr	w0, [sp, #92]
    e054:	cmp	w0, #0xf
    e058:	b.ls	e004 <inflate@@Base+0xd74>  // b.plast
    e05c:	ldr	x0, [sp, #56]
    e060:	ldr	w0, [x0, #16]
    e064:	and	w0, w0, #0x4
    e068:	cmp	w0, #0x0
    e06c:	b.eq	e0a8 <inflate@@Base+0xe18>  // b.none
    e070:	ldr	x0, [sp, #56]
    e074:	ldr	x0, [x0, #32]
    e078:	and	x0, x0, #0xffff
    e07c:	ldr	x1, [sp, #96]
    e080:	cmp	x1, x0
    e084:	b.eq	e0a8 <inflate@@Base+0xe18>  // b.none
    e088:	ldr	x0, [sp, #24]
    e08c:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    e090:	add	x1, x1, #0xad0
    e094:	str	x1, [x0, #48]
    e098:	ldr	x0, [sp, #56]
    e09c:	mov	w1, #0x3f51                	// #16209
    e0a0:	str	w1, [x0, #8]
    e0a4:	b	fc30 <inflate@@Base+0x29a0>
    e0a8:	str	xzr, [sp, #96]
    e0ac:	str	wzr, [sp, #92]
    e0b0:	ldr	x0, [sp, #56]
    e0b4:	ldr	x0, [x0, #48]
    e0b8:	cmp	x0, #0x0
    e0bc:	b.eq	e0ec <inflate@@Base+0xe5c>  // b.none
    e0c0:	ldr	x0, [sp, #56]
    e0c4:	ldr	w0, [x0, #24]
    e0c8:	asr	w1, w0, #9
    e0cc:	ldr	x0, [sp, #56]
    e0d0:	ldr	x0, [x0, #48]
    e0d4:	and	w1, w1, #0x1
    e0d8:	str	w1, [x0, #68]
    e0dc:	ldr	x0, [sp, #56]
    e0e0:	ldr	x0, [x0, #48]
    e0e4:	mov	w1, #0x1                   	// #1
    e0e8:	str	w1, [x0, #72]
    e0ec:	mov	w2, #0x0                   	// #0
    e0f0:	mov	x1, #0x0                   	// #0
    e0f4:	mov	x0, #0x0                   	// #0
    e0f8:	bl	2430 <crc32@plt>
    e0fc:	mov	x1, x0
    e100:	ldr	x0, [sp, #56]
    e104:	str	x1, [x0, #32]
    e108:	ldr	x0, [sp, #56]
    e10c:	ldr	x1, [x0, #32]
    e110:	ldr	x0, [sp, #24]
    e114:	str	x1, [x0, #96]
    e118:	ldr	x0, [sp, #56]
    e11c:	mov	w1, #0x3f3f                	// #16191
    e120:	str	w1, [x0, #8]
    e124:	b	fc30 <inflate@@Base+0x29a0>
    e128:	ldr	w0, [sp, #108]
    e12c:	cmp	w0, #0x0
    e130:	b.eq	fc7c <inflate@@Base+0x29ec>  // b.none
    e134:	ldr	w0, [sp, #108]
    e138:	sub	w0, w0, #0x1
    e13c:	str	w0, [sp, #108]
    e140:	ldr	x0, [sp, #120]
    e144:	add	x1, x0, #0x1
    e148:	str	x1, [sp, #120]
    e14c:	ldrb	w0, [x0]
    e150:	and	x1, x0, #0xff
    e154:	ldr	w0, [sp, #92]
    e158:	lsl	x0, x1, x0
    e15c:	ldr	x1, [sp, #96]
    e160:	add	x0, x1, x0
    e164:	str	x0, [sp, #96]
    e168:	ldr	w0, [sp, #92]
    e16c:	add	w0, w0, #0x8
    e170:	str	w0, [sp, #92]
    e174:	ldr	w0, [sp, #92]
    e178:	cmp	w0, #0x1f
    e17c:	b.ls	e128 <inflate@@Base+0xe98>  // b.plast
    e180:	ldr	x0, [sp, #96]
    e184:	lsr	x0, x0, #24
    e188:	and	x1, x0, #0xff
    e18c:	ldr	x0, [sp, #96]
    e190:	lsr	x0, x0, #8
    e194:	and	x0, x0, #0xff00
    e198:	orr	x1, x1, x0
    e19c:	ldr	x0, [sp, #96]
    e1a0:	lsl	x0, x0, #8
    e1a4:	and	x0, x0, #0xff0000
    e1a8:	add	x1, x1, x0
    e1ac:	ldr	x0, [sp, #96]
    e1b0:	lsl	x0, x0, #24
    e1b4:	and	x0, x0, #0xffffffff
    e1b8:	add	x1, x1, x0
    e1bc:	ldr	x0, [sp, #56]
    e1c0:	str	x1, [x0, #32]
    e1c4:	ldr	x0, [sp, #56]
    e1c8:	ldr	x1, [x0, #32]
    e1cc:	ldr	x0, [sp, #24]
    e1d0:	str	x1, [x0, #96]
    e1d4:	str	xzr, [sp, #96]
    e1d8:	str	wzr, [sp, #92]
    e1dc:	ldr	x0, [sp, #56]
    e1e0:	mov	w1, #0x3f3e                	// #16190
    e1e4:	str	w1, [x0, #8]
    e1e8:	ldr	x0, [sp, #56]
    e1ec:	ldr	w0, [x0, #20]
    e1f0:	cmp	w0, #0x0
    e1f4:	b.ne	e248 <inflate@@Base+0xfb8>  // b.any
    e1f8:	ldr	x0, [sp, #24]
    e1fc:	ldr	x1, [sp, #112]
    e200:	str	x1, [x0, #24]
    e204:	ldr	x0, [sp, #24]
    e208:	ldr	w1, [sp, #104]
    e20c:	str	w1, [x0, #32]
    e210:	ldr	x0, [sp, #24]
    e214:	ldr	x1, [sp, #120]
    e218:	str	x1, [x0]
    e21c:	ldr	x0, [sp, #24]
    e220:	ldr	w1, [sp, #108]
    e224:	str	w1, [x0, #8]
    e228:	ldr	x0, [sp, #56]
    e22c:	ldr	x1, [sp, #96]
    e230:	str	x1, [x0, #80]
    e234:	ldr	x0, [sp, #56]
    e238:	ldr	w1, [sp, #92]
    e23c:	str	w1, [x0, #88]
    e240:	mov	w0, #0x2                   	// #2
    e244:	b	fff4 <inflate@@Base+0x2d64>
    e248:	mov	w2, #0x0                   	// #0
    e24c:	mov	x1, #0x0                   	// #0
    e250:	mov	x0, #0x0                   	// #0
    e254:	bl	2560 <adler32@plt>
    e258:	mov	x1, x0
    e25c:	ldr	x0, [sp, #56]
    e260:	str	x1, [x0, #32]
    e264:	ldr	x0, [sp, #56]
    e268:	ldr	x1, [x0, #32]
    e26c:	ldr	x0, [sp, #24]
    e270:	str	x1, [x0, #96]
    e274:	ldr	x0, [sp, #56]
    e278:	mov	w1, #0x3f3f                	// #16191
    e27c:	str	w1, [x0, #8]
    e280:	ldr	w0, [sp, #20]
    e284:	cmp	w0, #0x5
    e288:	b.eq	fc84 <inflate@@Base+0x29f4>  // b.none
    e28c:	ldr	w0, [sp, #20]
    e290:	cmp	w0, #0x6
    e294:	b.eq	fc84 <inflate@@Base+0x29f4>  // b.none
    e298:	ldr	x0, [sp, #56]
    e29c:	ldr	w0, [x0, #12]
    e2a0:	cmp	w0, #0x0
    e2a4:	b.eq	e324 <inflate@@Base+0x1094>  // b.none
    e2a8:	ldr	w0, [sp, #92]
    e2ac:	and	w0, w0, #0x7
    e2b0:	ldr	x1, [sp, #96]
    e2b4:	lsr	x0, x1, x0
    e2b8:	str	x0, [sp, #96]
    e2bc:	ldr	w0, [sp, #92]
    e2c0:	and	w0, w0, #0xfffffff8
    e2c4:	str	w0, [sp, #92]
    e2c8:	ldr	x0, [sp, #56]
    e2cc:	mov	w1, #0x3f4e                	// #16206
    e2d0:	str	w1, [x0, #8]
    e2d4:	b	fc30 <inflate@@Base+0x29a0>
    e2d8:	ldr	w0, [sp, #108]
    e2dc:	cmp	w0, #0x0
    e2e0:	b.eq	fc8c <inflate@@Base+0x29fc>  // b.none
    e2e4:	ldr	w0, [sp, #108]
    e2e8:	sub	w0, w0, #0x1
    e2ec:	str	w0, [sp, #108]
    e2f0:	ldr	x0, [sp, #120]
    e2f4:	add	x1, x0, #0x1
    e2f8:	str	x1, [sp, #120]
    e2fc:	ldrb	w0, [x0]
    e300:	and	x1, x0, #0xff
    e304:	ldr	w0, [sp, #92]
    e308:	lsl	x0, x1, x0
    e30c:	ldr	x1, [sp, #96]
    e310:	add	x0, x1, x0
    e314:	str	x0, [sp, #96]
    e318:	ldr	w0, [sp, #92]
    e31c:	add	w0, w0, #0x8
    e320:	str	w0, [sp, #92]
    e324:	ldr	w0, [sp, #92]
    e328:	cmp	w0, #0x2
    e32c:	b.ls	e2d8 <inflate@@Base+0x1048>  // b.plast
    e330:	ldr	x0, [sp, #96]
    e334:	and	w1, w0, #0x1
    e338:	ldr	x0, [sp, #56]
    e33c:	str	w1, [x0, #12]
    e340:	ldr	x0, [sp, #96]
    e344:	lsr	x0, x0, #1
    e348:	str	x0, [sp, #96]
    e34c:	ldr	w0, [sp, #92]
    e350:	sub	w0, w0, #0x1
    e354:	str	w0, [sp, #92]
    e358:	ldr	x0, [sp, #96]
    e35c:	and	w0, w0, #0x3
    e360:	cmp	w0, #0x3
    e364:	b.eq	e3f0 <inflate@@Base+0x1160>  // b.none
    e368:	cmp	w0, #0x3
    e36c:	b.hi	e414 <inflate@@Base+0x1184>  // b.pmore
    e370:	cmp	w0, #0x2
    e374:	b.eq	e3e0 <inflate@@Base+0x1150>  // b.none
    e378:	cmp	w0, #0x2
    e37c:	b.hi	e414 <inflate@@Base+0x1184>  // b.pmore
    e380:	cmp	w0, #0x0
    e384:	b.eq	e394 <inflate@@Base+0x1104>  // b.none
    e388:	cmp	w0, #0x1
    e38c:	b.eq	e3a4 <inflate@@Base+0x1114>  // b.none
    e390:	b	e414 <inflate@@Base+0x1184>
    e394:	ldr	x0, [sp, #56]
    e398:	mov	w1, #0x3f41                	// #16193
    e39c:	str	w1, [x0, #8]
    e3a0:	b	e414 <inflate@@Base+0x1184>
    e3a4:	ldr	x0, [sp, #56]
    e3a8:	bl	cfd8 <inflatePrime@@ZLIB_1.2.2.4+0xf4>
    e3ac:	ldr	x0, [sp, #56]
    e3b0:	mov	w1, #0x3f47                	// #16199
    e3b4:	str	w1, [x0, #8]
    e3b8:	ldr	w0, [sp, #20]
    e3bc:	cmp	w0, #0x6
    e3c0:	b.ne	e410 <inflate@@Base+0x1180>  // b.any
    e3c4:	ldr	x0, [sp, #96]
    e3c8:	lsr	x0, x0, #2
    e3cc:	str	x0, [sp, #96]
    e3d0:	ldr	w0, [sp, #92]
    e3d4:	sub	w0, w0, #0x2
    e3d8:	str	w0, [sp, #92]
    e3dc:	b	fd30 <inflate@@Base+0x2aa0>
    e3e0:	ldr	x0, [sp, #56]
    e3e4:	mov	w1, #0x3f44                	// #16196
    e3e8:	str	w1, [x0, #8]
    e3ec:	b	e414 <inflate@@Base+0x1184>
    e3f0:	ldr	x0, [sp, #24]
    e3f4:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    e3f8:	add	x1, x1, #0xae8
    e3fc:	str	x1, [x0, #48]
    e400:	ldr	x0, [sp, #56]
    e404:	mov	w1, #0x3f51                	// #16209
    e408:	str	w1, [x0, #8]
    e40c:	b	e414 <inflate@@Base+0x1184>
    e410:	nop
    e414:	ldr	x0, [sp, #96]
    e418:	lsr	x0, x0, #2
    e41c:	str	x0, [sp, #96]
    e420:	ldr	w0, [sp, #92]
    e424:	sub	w0, w0, #0x2
    e428:	str	w0, [sp, #92]
    e42c:	b	fc30 <inflate@@Base+0x29a0>
    e430:	ldr	w0, [sp, #92]
    e434:	and	w0, w0, #0x7
    e438:	ldr	x1, [sp, #96]
    e43c:	lsr	x0, x1, x0
    e440:	str	x0, [sp, #96]
    e444:	ldr	w0, [sp, #92]
    e448:	and	w0, w0, #0xfffffff8
    e44c:	str	w0, [sp, #92]
    e450:	b	e4a0 <inflate@@Base+0x1210>
    e454:	ldr	w0, [sp, #108]
    e458:	cmp	w0, #0x0
    e45c:	b.eq	fc94 <inflate@@Base+0x2a04>  // b.none
    e460:	ldr	w0, [sp, #108]
    e464:	sub	w0, w0, #0x1
    e468:	str	w0, [sp, #108]
    e46c:	ldr	x0, [sp, #120]
    e470:	add	x1, x0, #0x1
    e474:	str	x1, [sp, #120]
    e478:	ldrb	w0, [x0]
    e47c:	and	x1, x0, #0xff
    e480:	ldr	w0, [sp, #92]
    e484:	lsl	x0, x1, x0
    e488:	ldr	x1, [sp, #96]
    e48c:	add	x0, x1, x0
    e490:	str	x0, [sp, #96]
    e494:	ldr	w0, [sp, #92]
    e498:	add	w0, w0, #0x8
    e49c:	str	w0, [sp, #92]
    e4a0:	ldr	w0, [sp, #92]
    e4a4:	cmp	w0, #0x1f
    e4a8:	b.ls	e454 <inflate@@Base+0x11c4>  // b.plast
    e4ac:	ldr	x0, [sp, #96]
    e4b0:	and	x1, x0, #0xffff
    e4b4:	ldr	x0, [sp, #96]
    e4b8:	lsr	x0, x0, #16
    e4bc:	eor	x0, x0, #0xffff
    e4c0:	cmp	x1, x0
    e4c4:	b.eq	e4e8 <inflate@@Base+0x1258>  // b.none
    e4c8:	ldr	x0, [sp, #24]
    e4cc:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    e4d0:	add	x1, x1, #0xb00
    e4d4:	str	x1, [x0, #48]
    e4d8:	ldr	x0, [sp, #56]
    e4dc:	mov	w1, #0x3f51                	// #16209
    e4e0:	str	w1, [x0, #8]
    e4e4:	b	fc30 <inflate@@Base+0x29a0>
    e4e8:	ldr	x0, [sp, #96]
    e4ec:	and	w1, w0, #0xffff
    e4f0:	ldr	x0, [sp, #56]
    e4f4:	str	w1, [x0, #92]
    e4f8:	str	xzr, [sp, #96]
    e4fc:	str	wzr, [sp, #92]
    e500:	ldr	x0, [sp, #56]
    e504:	mov	w1, #0x3f42                	// #16194
    e508:	str	w1, [x0, #8]
    e50c:	ldr	w0, [sp, #20]
    e510:	cmp	w0, #0x6
    e514:	b.eq	fc9c <inflate@@Base+0x2a0c>  // b.none
    e518:	ldr	x0, [sp, #56]
    e51c:	mov	w1, #0x3f43                	// #16195
    e520:	str	w1, [x0, #8]
    e524:	ldr	x0, [sp, #56]
    e528:	ldr	w0, [x0, #92]
    e52c:	str	w0, [sp, #84]
    e530:	ldr	w0, [sp, #84]
    e534:	cmp	w0, #0x0
    e538:	b.eq	e5e8 <inflate@@Base+0x1358>  // b.none
    e53c:	ldr	w1, [sp, #84]
    e540:	ldr	w0, [sp, #108]
    e544:	cmp	w1, w0
    e548:	b.ls	e554 <inflate@@Base+0x12c4>  // b.plast
    e54c:	ldr	w0, [sp, #108]
    e550:	str	w0, [sp, #84]
    e554:	ldr	w1, [sp, #84]
    e558:	ldr	w0, [sp, #104]
    e55c:	cmp	w1, w0
    e560:	b.ls	e56c <inflate@@Base+0x12dc>  // b.plast
    e564:	ldr	w0, [sp, #104]
    e568:	str	w0, [sp, #84]
    e56c:	ldr	w0, [sp, #84]
    e570:	cmp	w0, #0x0
    e574:	b.eq	fca4 <inflate@@Base+0x2a14>  // b.none
    e578:	ldr	w0, [sp, #84]
    e57c:	mov	x2, x0
    e580:	ldr	x1, [sp, #120]
    e584:	ldr	x0, [sp, #112]
    e588:	bl	23a0 <memcpy@plt>
    e58c:	ldr	w1, [sp, #108]
    e590:	ldr	w0, [sp, #84]
    e594:	sub	w0, w1, w0
    e598:	str	w0, [sp, #108]
    e59c:	ldr	w0, [sp, #84]
    e5a0:	ldr	x1, [sp, #120]
    e5a4:	add	x0, x1, x0
    e5a8:	str	x0, [sp, #120]
    e5ac:	ldr	w1, [sp, #104]
    e5b0:	ldr	w0, [sp, #84]
    e5b4:	sub	w0, w1, w0
    e5b8:	str	w0, [sp, #104]
    e5bc:	ldr	w0, [sp, #84]
    e5c0:	ldr	x1, [sp, #112]
    e5c4:	add	x0, x1, x0
    e5c8:	str	x0, [sp, #112]
    e5cc:	ldr	x0, [sp, #56]
    e5d0:	ldr	w1, [x0, #92]
    e5d4:	ldr	w0, [sp, #84]
    e5d8:	sub	w1, w1, w0
    e5dc:	ldr	x0, [sp, #56]
    e5e0:	str	w1, [x0, #92]
    e5e4:	b	fc30 <inflate@@Base+0x29a0>
    e5e8:	ldr	x0, [sp, #56]
    e5ec:	mov	w1, #0x3f3f                	// #16191
    e5f0:	str	w1, [x0, #8]
    e5f4:	b	fc30 <inflate@@Base+0x29a0>
    e5f8:	ldr	w0, [sp, #108]
    e5fc:	cmp	w0, #0x0
    e600:	b.eq	fcac <inflate@@Base+0x2a1c>  // b.none
    e604:	ldr	w0, [sp, #108]
    e608:	sub	w0, w0, #0x1
    e60c:	str	w0, [sp, #108]
    e610:	ldr	x0, [sp, #120]
    e614:	add	x1, x0, #0x1
    e618:	str	x1, [sp, #120]
    e61c:	ldrb	w0, [x0]
    e620:	and	x1, x0, #0xff
    e624:	ldr	w0, [sp, #92]
    e628:	lsl	x0, x1, x0
    e62c:	ldr	x1, [sp, #96]
    e630:	add	x0, x1, x0
    e634:	str	x0, [sp, #96]
    e638:	ldr	w0, [sp, #92]
    e63c:	add	w0, w0, #0x8
    e640:	str	w0, [sp, #92]
    e644:	ldr	w0, [sp, #92]
    e648:	cmp	w0, #0xd
    e64c:	b.ls	e5f8 <inflate@@Base+0x1368>  // b.plast
    e650:	ldr	x0, [sp, #96]
    e654:	and	w0, w0, #0x1f
    e658:	add	w1, w0, #0x101
    e65c:	ldr	x0, [sp, #56]
    e660:	str	w1, [x0, #132]
    e664:	ldr	x0, [sp, #96]
    e668:	lsr	x0, x0, #5
    e66c:	str	x0, [sp, #96]
    e670:	ldr	w0, [sp, #92]
    e674:	sub	w0, w0, #0x5
    e678:	str	w0, [sp, #92]
    e67c:	ldr	x0, [sp, #96]
    e680:	and	w0, w0, #0x1f
    e684:	add	w1, w0, #0x1
    e688:	ldr	x0, [sp, #56]
    e68c:	str	w1, [x0, #136]
    e690:	ldr	x0, [sp, #96]
    e694:	lsr	x0, x0, #5
    e698:	str	x0, [sp, #96]
    e69c:	ldr	w0, [sp, #92]
    e6a0:	sub	w0, w0, #0x5
    e6a4:	str	w0, [sp, #92]
    e6a8:	ldr	x0, [sp, #96]
    e6ac:	and	w0, w0, #0xf
    e6b0:	add	w1, w0, #0x4
    e6b4:	ldr	x0, [sp, #56]
    e6b8:	str	w1, [x0, #128]
    e6bc:	ldr	x0, [sp, #96]
    e6c0:	lsr	x0, x0, #4
    e6c4:	str	x0, [sp, #96]
    e6c8:	ldr	w0, [sp, #92]
    e6cc:	sub	w0, w0, #0x4
    e6d0:	str	w0, [sp, #92]
    e6d4:	ldr	x0, [sp, #56]
    e6d8:	ldr	w0, [x0, #132]
    e6dc:	cmp	w0, #0x11e
    e6e0:	b.hi	e6f4 <inflate@@Base+0x1464>  // b.pmore
    e6e4:	ldr	x0, [sp, #56]
    e6e8:	ldr	w0, [x0, #136]
    e6ec:	cmp	w0, #0x1e
    e6f0:	b.ls	e714 <inflate@@Base+0x1484>  // b.plast
    e6f4:	ldr	x0, [sp, #24]
    e6f8:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    e6fc:	add	x1, x1, #0xb20
    e700:	str	x1, [x0, #48]
    e704:	ldr	x0, [sp, #56]
    e708:	mov	w1, #0x3f51                	// #16209
    e70c:	str	w1, [x0, #8]
    e710:	b	fc30 <inflate@@Base+0x29a0>
    e714:	ldr	x0, [sp, #56]
    e718:	str	wzr, [x0, #140]
    e71c:	ldr	x0, [sp, #56]
    e720:	mov	w1, #0x3f45                	// #16197
    e724:	str	w1, [x0, #8]
    e728:	b	e7f0 <inflate@@Base+0x1560>
    e72c:	ldr	w0, [sp, #108]
    e730:	cmp	w0, #0x0
    e734:	b.eq	fcb4 <inflate@@Base+0x2a24>  // b.none
    e738:	ldr	w0, [sp, #108]
    e73c:	sub	w0, w0, #0x1
    e740:	str	w0, [sp, #108]
    e744:	ldr	x0, [sp, #120]
    e748:	add	x1, x0, #0x1
    e74c:	str	x1, [sp, #120]
    e750:	ldrb	w0, [x0]
    e754:	and	x1, x0, #0xff
    e758:	ldr	w0, [sp, #92]
    e75c:	lsl	x0, x1, x0
    e760:	ldr	x1, [sp, #96]
    e764:	add	x0, x1, x0
    e768:	str	x0, [sp, #96]
    e76c:	ldr	w0, [sp, #92]
    e770:	add	w0, w0, #0x8
    e774:	str	w0, [sp, #92]
    e778:	ldr	w0, [sp, #92]
    e77c:	cmp	w0, #0x2
    e780:	b.ls	e72c <inflate@@Base+0x149c>  // b.plast
    e784:	ldr	x0, [sp, #96]
    e788:	and	w1, w0, #0xffff
    e78c:	ldr	x0, [sp, #56]
    e790:	ldr	w0, [x0, #140]
    e794:	add	w3, w0, #0x1
    e798:	ldr	x2, [sp, #56]
    e79c:	str	w3, [x2, #140]
    e7a0:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    e7a4:	add	x2, x2, #0x570
    e7a8:	mov	w0, w0
    e7ac:	ldrh	w0, [x2, x0, lsl #1]
    e7b0:	mov	w3, w0
    e7b4:	and	w0, w1, #0x7
    e7b8:	and	w2, w0, #0xffff
    e7bc:	ldr	x1, [sp, #56]
    e7c0:	sxtw	x0, w3
    e7c4:	add	x0, x0, #0x48
    e7c8:	lsl	x0, x0, #1
    e7cc:	add	x0, x1, x0
    e7d0:	mov	w1, w2
    e7d4:	strh	w1, [x0, #8]
    e7d8:	ldr	x0, [sp, #96]
    e7dc:	lsr	x0, x0, #3
    e7e0:	str	x0, [sp, #96]
    e7e4:	ldr	w0, [sp, #92]
    e7e8:	sub	w0, w0, #0x3
    e7ec:	str	w0, [sp, #92]
    e7f0:	ldr	x0, [sp, #56]
    e7f4:	ldr	w1, [x0, #140]
    e7f8:	ldr	x0, [sp, #56]
    e7fc:	ldr	w0, [x0, #128]
    e800:	cmp	w1, w0
    e804:	b.cc	e778 <inflate@@Base+0x14e8>  // b.lo, b.ul, b.last
    e808:	b	e848 <inflate@@Base+0x15b8>
    e80c:	ldr	x0, [sp, #56]
    e810:	ldr	w0, [x0, #140]
    e814:	add	w2, w0, #0x1
    e818:	ldr	x1, [sp, #56]
    e81c:	str	w2, [x1, #140]
    e820:	adrp	x1, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
    e824:	add	x1, x1, #0x570
    e828:	mov	w0, w0
    e82c:	ldrh	w0, [x1, x0, lsl #1]
    e830:	ldr	x1, [sp, #56]
    e834:	sxtw	x0, w0
    e838:	add	x0, x0, #0x48
    e83c:	lsl	x0, x0, #1
    e840:	add	x0, x1, x0
    e844:	strh	wzr, [x0, #8]
    e848:	ldr	x0, [sp, #56]
    e84c:	ldr	w0, [x0, #140]
    e850:	cmp	w0, #0x12
    e854:	b.ls	e80c <inflate@@Base+0x157c>  // b.plast
    e858:	ldr	x0, [sp, #56]
    e85c:	add	x1, x0, #0x558
    e860:	ldr	x0, [sp, #56]
    e864:	str	x1, [x0, #144]
    e868:	ldr	x0, [sp, #56]
    e86c:	ldr	x1, [x0, #144]
    e870:	ldr	x0, [sp, #56]
    e874:	str	x1, [x0, #104]
    e878:	ldr	x0, [sp, #56]
    e87c:	mov	w1, #0x7                   	// #7
    e880:	str	w1, [x0, #120]
    e884:	ldr	x0, [sp, #56]
    e888:	add	x1, x0, #0x98
    e88c:	ldr	x0, [sp, #56]
    e890:	add	x2, x0, #0x90
    e894:	ldr	x0, [sp, #56]
    e898:	add	x3, x0, #0x78
    e89c:	ldr	x0, [sp, #56]
    e8a0:	add	x0, x0, #0x318
    e8a4:	mov	x5, x0
    e8a8:	mov	x4, x3
    e8ac:	mov	x3, x2
    e8b0:	mov	w2, #0x13                  	// #19
    e8b4:	mov	w0, #0x0                   	// #0
    e8b8:	bl	10a40 <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    e8bc:	str	w0, [sp, #64]
    e8c0:	ldr	w0, [sp, #64]
    e8c4:	cmp	w0, #0x0
    e8c8:	b.eq	e8ec <inflate@@Base+0x165c>  // b.none
    e8cc:	ldr	x0, [sp, #24]
    e8d0:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    e8d4:	add	x1, x1, #0xb48
    e8d8:	str	x1, [x0, #48]
    e8dc:	ldr	x0, [sp, #56]
    e8e0:	mov	w1, #0x3f51                	// #16209
    e8e4:	str	w1, [x0, #8]
    e8e8:	b	fc30 <inflate@@Base+0x29a0>
    e8ec:	ldr	x0, [sp, #56]
    e8f0:	str	wzr, [x0, #140]
    e8f4:	ldr	x0, [sp, #56]
    e8f8:	mov	w1, #0x3f46                	// #16198
    e8fc:	str	w1, [x0, #8]
    e900:	b	ed50 <inflate@@Base+0x1ac0>
    e904:	ldr	x0, [sp, #56]
    e908:	ldr	x1, [x0, #104]
    e90c:	ldr	x0, [sp, #96]
    e910:	mov	w3, w0
    e914:	ldr	x0, [sp, #56]
    e918:	ldr	w0, [x0, #120]
    e91c:	mov	w2, #0xffffffff            	// #-1
    e920:	lsl	w0, w2, w0
    e924:	mvn	w0, w0
    e928:	and	w0, w3, w0
    e92c:	mov	w0, w0
    e930:	lsl	x0, x0, #2
    e934:	add	x0, x1, x0
    e938:	ldr	w0, [x0]
    e93c:	str	w0, [sp, #48]
    e940:	ldrb	w0, [sp, #49]
    e944:	mov	w1, w0
    e948:	ldr	w0, [sp, #92]
    e94c:	cmp	w0, w1
    e950:	b.cs	e9a4 <inflate@@Base+0x1714>  // b.hs, b.nlast
    e954:	ldr	w0, [sp, #108]
    e958:	cmp	w0, #0x0
    e95c:	b.eq	fcbc <inflate@@Base+0x2a2c>  // b.none
    e960:	ldr	w0, [sp, #108]
    e964:	sub	w0, w0, #0x1
    e968:	str	w0, [sp, #108]
    e96c:	ldr	x0, [sp, #120]
    e970:	add	x1, x0, #0x1
    e974:	str	x1, [sp, #120]
    e978:	ldrb	w0, [x0]
    e97c:	and	x1, x0, #0xff
    e980:	ldr	w0, [sp, #92]
    e984:	lsl	x0, x1, x0
    e988:	ldr	x1, [sp, #96]
    e98c:	add	x0, x1, x0
    e990:	str	x0, [sp, #96]
    e994:	ldr	w0, [sp, #92]
    e998:	add	w0, w0, #0x8
    e99c:	str	w0, [sp, #92]
    e9a0:	b	e904 <inflate@@Base+0x1674>
    e9a4:	nop
    e9a8:	ldrh	w0, [sp, #50]
    e9ac:	cmp	w0, #0xf
    e9b0:	b.hi	ea14 <inflate@@Base+0x1784>  // b.pmore
    e9b4:	ldrb	w0, [sp, #49]
    e9b8:	mov	w1, w0
    e9bc:	ldr	x0, [sp, #96]
    e9c0:	lsr	x0, x0, x1
    e9c4:	str	x0, [sp, #96]
    e9c8:	ldrb	w0, [sp, #49]
    e9cc:	mov	w1, w0
    e9d0:	ldr	w0, [sp, #92]
    e9d4:	sub	w0, w0, w1
    e9d8:	str	w0, [sp, #92]
    e9dc:	ldr	x0, [sp, #56]
    e9e0:	ldr	w0, [x0, #140]
    e9e4:	add	w2, w0, #0x1
    e9e8:	ldr	x1, [sp, #56]
    e9ec:	str	w2, [x1, #140]
    e9f0:	ldrh	w2, [sp, #50]
    e9f4:	ldr	x1, [sp, #56]
    e9f8:	mov	w0, w0
    e9fc:	add	x0, x0, #0x48
    ea00:	lsl	x0, x0, #1
    ea04:	add	x0, x1, x0
    ea08:	mov	w1, w2
    ea0c:	strh	w1, [x0, #8]
    ea10:	b	ed50 <inflate@@Base+0x1ac0>
    ea14:	ldrh	w0, [sp, #50]
    ea18:	cmp	w0, #0x10
    ea1c:	b.ne	eb34 <inflate@@Base+0x18a4>  // b.any
    ea20:	b	ea70 <inflate@@Base+0x17e0>
    ea24:	ldr	w0, [sp, #108]
    ea28:	cmp	w0, #0x0
    ea2c:	b.eq	fcc4 <inflate@@Base+0x2a34>  // b.none
    ea30:	ldr	w0, [sp, #108]
    ea34:	sub	w0, w0, #0x1
    ea38:	str	w0, [sp, #108]
    ea3c:	ldr	x0, [sp, #120]
    ea40:	add	x1, x0, #0x1
    ea44:	str	x1, [sp, #120]
    ea48:	ldrb	w0, [x0]
    ea4c:	and	x1, x0, #0xff
    ea50:	ldr	w0, [sp, #92]
    ea54:	lsl	x0, x1, x0
    ea58:	ldr	x1, [sp, #96]
    ea5c:	add	x0, x1, x0
    ea60:	str	x0, [sp, #96]
    ea64:	ldr	w0, [sp, #92]
    ea68:	add	w0, w0, #0x8
    ea6c:	str	w0, [sp, #92]
    ea70:	ldrb	w0, [sp, #49]
    ea74:	add	w0, w0, #0x2
    ea78:	mov	w1, w0
    ea7c:	ldr	w0, [sp, #92]
    ea80:	cmp	w0, w1
    ea84:	b.cc	ea24 <inflate@@Base+0x1794>  // b.lo, b.ul, b.last
    ea88:	ldrb	w0, [sp, #49]
    ea8c:	mov	w1, w0
    ea90:	ldr	x0, [sp, #96]
    ea94:	lsr	x0, x0, x1
    ea98:	str	x0, [sp, #96]
    ea9c:	ldrb	w0, [sp, #49]
    eaa0:	mov	w1, w0
    eaa4:	ldr	w0, [sp, #92]
    eaa8:	sub	w0, w0, w1
    eaac:	str	w0, [sp, #92]
    eab0:	ldr	x0, [sp, #56]
    eab4:	ldr	w0, [x0, #140]
    eab8:	cmp	w0, #0x0
    eabc:	b.ne	eae0 <inflate@@Base+0x1850>  // b.any
    eac0:	ldr	x0, [sp, #24]
    eac4:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    eac8:	add	x1, x1, #0xb68
    eacc:	str	x1, [x0, #48]
    ead0:	ldr	x0, [sp, #56]
    ead4:	mov	w1, #0x3f51                	// #16209
    ead8:	str	w1, [x0, #8]
    eadc:	b	ed74 <inflate@@Base+0x1ae4>
    eae0:	ldr	x0, [sp, #56]
    eae4:	ldr	w0, [x0, #140]
    eae8:	sub	w0, w0, #0x1
    eaec:	ldr	x1, [sp, #56]
    eaf0:	mov	w0, w0
    eaf4:	add	x0, x0, #0x48
    eaf8:	lsl	x0, x0, #1
    eafc:	add	x0, x1, x0
    eb00:	ldrh	w0, [x0, #8]
    eb04:	str	w0, [sp, #68]
    eb08:	ldr	x0, [sp, #96]
    eb0c:	and	w0, w0, #0x3
    eb10:	add	w0, w0, #0x3
    eb14:	str	w0, [sp, #84]
    eb18:	ldr	x0, [sp, #96]
    eb1c:	lsr	x0, x0, #2
    eb20:	str	x0, [sp, #96]
    eb24:	ldr	w0, [sp, #92]
    eb28:	sub	w0, w0, #0x2
    eb2c:	str	w0, [sp, #92]
    eb30:	b	ecb8 <inflate@@Base+0x1a28>
    eb34:	ldrh	w0, [sp, #50]
    eb38:	cmp	w0, #0x11
    eb3c:	b.ne	ec4c <inflate@@Base+0x19bc>  // b.any
    eb40:	b	eb90 <inflate@@Base+0x1900>
    eb44:	ldr	w0, [sp, #108]
    eb48:	cmp	w0, #0x0
    eb4c:	b.eq	fccc <inflate@@Base+0x2a3c>  // b.none
    eb50:	ldr	w0, [sp, #108]
    eb54:	sub	w0, w0, #0x1
    eb58:	str	w0, [sp, #108]
    eb5c:	ldr	x0, [sp, #120]
    eb60:	add	x1, x0, #0x1
    eb64:	str	x1, [sp, #120]
    eb68:	ldrb	w0, [x0]
    eb6c:	and	x1, x0, #0xff
    eb70:	ldr	w0, [sp, #92]
    eb74:	lsl	x0, x1, x0
    eb78:	ldr	x1, [sp, #96]
    eb7c:	add	x0, x1, x0
    eb80:	str	x0, [sp, #96]
    eb84:	ldr	w0, [sp, #92]
    eb88:	add	w0, w0, #0x8
    eb8c:	str	w0, [sp, #92]
    eb90:	ldrb	w0, [sp, #49]
    eb94:	add	w0, w0, #0x3
    eb98:	mov	w1, w0
    eb9c:	ldr	w0, [sp, #92]
    eba0:	cmp	w0, w1
    eba4:	b.cc	eb44 <inflate@@Base+0x18b4>  // b.lo, b.ul, b.last
    eba8:	ldrb	w0, [sp, #49]
    ebac:	mov	w1, w0
    ebb0:	ldr	x0, [sp, #96]
    ebb4:	lsr	x0, x0, x1
    ebb8:	str	x0, [sp, #96]
    ebbc:	ldrb	w0, [sp, #49]
    ebc0:	mov	w1, w0
    ebc4:	ldr	w0, [sp, #92]
    ebc8:	sub	w0, w0, w1
    ebcc:	str	w0, [sp, #92]
    ebd0:	str	wzr, [sp, #68]
    ebd4:	ldr	x0, [sp, #96]
    ebd8:	and	w0, w0, #0x7
    ebdc:	add	w0, w0, #0x3
    ebe0:	str	w0, [sp, #84]
    ebe4:	ldr	x0, [sp, #96]
    ebe8:	lsr	x0, x0, #3
    ebec:	str	x0, [sp, #96]
    ebf0:	ldr	w0, [sp, #92]
    ebf4:	sub	w0, w0, #0x3
    ebf8:	str	w0, [sp, #92]
    ebfc:	b	ecb8 <inflate@@Base+0x1a28>
    ec00:	ldr	w0, [sp, #108]
    ec04:	cmp	w0, #0x0
    ec08:	b.eq	fcd4 <inflate@@Base+0x2a44>  // b.none
    ec0c:	ldr	w0, [sp, #108]
    ec10:	sub	w0, w0, #0x1
    ec14:	str	w0, [sp, #108]
    ec18:	ldr	x0, [sp, #120]
    ec1c:	add	x1, x0, #0x1
    ec20:	str	x1, [sp, #120]
    ec24:	ldrb	w0, [x0]
    ec28:	and	x1, x0, #0xff
    ec2c:	ldr	w0, [sp, #92]
    ec30:	lsl	x0, x1, x0
    ec34:	ldr	x1, [sp, #96]
    ec38:	add	x0, x1, x0
    ec3c:	str	x0, [sp, #96]
    ec40:	ldr	w0, [sp, #92]
    ec44:	add	w0, w0, #0x8
    ec48:	str	w0, [sp, #92]
    ec4c:	ldrb	w0, [sp, #49]
    ec50:	add	w0, w0, #0x7
    ec54:	mov	w1, w0
    ec58:	ldr	w0, [sp, #92]
    ec5c:	cmp	w0, w1
    ec60:	b.cc	ec00 <inflate@@Base+0x1970>  // b.lo, b.ul, b.last
    ec64:	ldrb	w0, [sp, #49]
    ec68:	mov	w1, w0
    ec6c:	ldr	x0, [sp, #96]
    ec70:	lsr	x0, x0, x1
    ec74:	str	x0, [sp, #96]
    ec78:	ldrb	w0, [sp, #49]
    ec7c:	mov	w1, w0
    ec80:	ldr	w0, [sp, #92]
    ec84:	sub	w0, w0, w1
    ec88:	str	w0, [sp, #92]
    ec8c:	str	wzr, [sp, #68]
    ec90:	ldr	x0, [sp, #96]
    ec94:	and	w0, w0, #0x7f
    ec98:	add	w0, w0, #0xb
    ec9c:	str	w0, [sp, #84]
    eca0:	ldr	x0, [sp, #96]
    eca4:	lsr	x0, x0, #7
    eca8:	str	x0, [sp, #96]
    ecac:	ldr	w0, [sp, #92]
    ecb0:	sub	w0, w0, #0x7
    ecb4:	str	w0, [sp, #92]
    ecb8:	ldr	x0, [sp, #56]
    ecbc:	ldr	w1, [x0, #140]
    ecc0:	ldr	w0, [sp, #84]
    ecc4:	add	w1, w1, w0
    ecc8:	ldr	x0, [sp, #56]
    eccc:	ldr	w2, [x0, #132]
    ecd0:	ldr	x0, [sp, #56]
    ecd4:	ldr	w0, [x0, #136]
    ecd8:	add	w0, w2, w0
    ecdc:	cmp	w1, w0
    ece0:	b.ls	ed3c <inflate@@Base+0x1aac>  // b.plast
    ece4:	ldr	x0, [sp, #24]
    ece8:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    ecec:	add	x1, x1, #0xb68
    ecf0:	str	x1, [x0, #48]
    ecf4:	ldr	x0, [sp, #56]
    ecf8:	mov	w1, #0x3f51                	// #16209
    ecfc:	str	w1, [x0, #8]
    ed00:	b	ed74 <inflate@@Base+0x1ae4>
    ed04:	ldr	x0, [sp, #56]
    ed08:	ldr	w0, [x0, #140]
    ed0c:	add	w2, w0, #0x1
    ed10:	ldr	x1, [sp, #56]
    ed14:	str	w2, [x1, #140]
    ed18:	ldr	w1, [sp, #68]
    ed1c:	and	w2, w1, #0xffff
    ed20:	ldr	x1, [sp, #56]
    ed24:	mov	w0, w0
    ed28:	add	x0, x0, #0x48
    ed2c:	lsl	x0, x0, #1
    ed30:	add	x0, x1, x0
    ed34:	mov	w1, w2
    ed38:	strh	w1, [x0, #8]
    ed3c:	ldr	w0, [sp, #84]
    ed40:	sub	w1, w0, #0x1
    ed44:	str	w1, [sp, #84]
    ed48:	cmp	w0, #0x0
    ed4c:	b.ne	ed04 <inflate@@Base+0x1a74>  // b.any
    ed50:	ldr	x0, [sp, #56]
    ed54:	ldr	w1, [x0, #140]
    ed58:	ldr	x0, [sp, #56]
    ed5c:	ldr	w2, [x0, #132]
    ed60:	ldr	x0, [sp, #56]
    ed64:	ldr	w0, [x0, #136]
    ed68:	add	w0, w2, w0
    ed6c:	cmp	w1, w0
    ed70:	b.cc	e904 <inflate@@Base+0x1674>  // b.lo, b.ul, b.last
    ed74:	ldr	x0, [sp, #56]
    ed78:	ldr	w1, [x0, #8]
    ed7c:	mov	w0, #0x3f51                	// #16209
    ed80:	cmp	w1, w0
    ed84:	b.eq	fc1c <inflate@@Base+0x298c>  // b.none
    ed88:	ldr	x0, [sp, #56]
    ed8c:	ldrh	w0, [x0, #664]
    ed90:	cmp	w0, #0x0
    ed94:	b.ne	edb8 <inflate@@Base+0x1b28>  // b.any
    ed98:	ldr	x0, [sp, #24]
    ed9c:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    eda0:	add	x1, x1, #0xb88
    eda4:	str	x1, [x0, #48]
    eda8:	ldr	x0, [sp, #56]
    edac:	mov	w1, #0x3f51                	// #16209
    edb0:	str	w1, [x0, #8]
    edb4:	b	fc30 <inflate@@Base+0x29a0>
    edb8:	ldr	x0, [sp, #56]
    edbc:	add	x1, x0, #0x558
    edc0:	ldr	x0, [sp, #56]
    edc4:	str	x1, [x0, #144]
    edc8:	ldr	x0, [sp, #56]
    edcc:	ldr	x1, [x0, #144]
    edd0:	ldr	x0, [sp, #56]
    edd4:	str	x1, [x0, #104]
    edd8:	ldr	x0, [sp, #56]
    eddc:	mov	w1, #0x9                   	// #9
    ede0:	str	w1, [x0, #120]
    ede4:	ldr	x0, [sp, #56]
    ede8:	add	x1, x0, #0x98
    edec:	ldr	x0, [sp, #56]
    edf0:	ldr	w2, [x0, #132]
    edf4:	ldr	x0, [sp, #56]
    edf8:	add	x3, x0, #0x90
    edfc:	ldr	x0, [sp, #56]
    ee00:	add	x4, x0, #0x78
    ee04:	ldr	x0, [sp, #56]
    ee08:	add	x0, x0, #0x318
    ee0c:	mov	x5, x0
    ee10:	mov	w0, #0x1                   	// #1
    ee14:	bl	10a40 <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    ee18:	str	w0, [sp, #64]
    ee1c:	ldr	w0, [sp, #64]
    ee20:	cmp	w0, #0x0
    ee24:	b.eq	ee48 <inflate@@Base+0x1bb8>  // b.none
    ee28:	ldr	x0, [sp, #24]
    ee2c:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    ee30:	add	x1, x1, #0xbb0
    ee34:	str	x1, [x0, #48]
    ee38:	ldr	x0, [sp, #56]
    ee3c:	mov	w1, #0x3f51                	// #16209
    ee40:	str	w1, [x0, #8]
    ee44:	b	fc30 <inflate@@Base+0x29a0>
    ee48:	ldr	x0, [sp, #56]
    ee4c:	ldr	x1, [x0, #144]
    ee50:	ldr	x0, [sp, #56]
    ee54:	str	x1, [x0, #112]
    ee58:	ldr	x0, [sp, #56]
    ee5c:	mov	w1, #0x6                   	// #6
    ee60:	str	w1, [x0, #124]
    ee64:	ldr	x0, [sp, #56]
    ee68:	add	x1, x0, #0x98
    ee6c:	ldr	x0, [sp, #56]
    ee70:	ldr	w0, [x0, #132]
    ee74:	mov	w0, w0
    ee78:	lsl	x0, x0, #1
    ee7c:	add	x1, x1, x0
    ee80:	ldr	x0, [sp, #56]
    ee84:	ldr	w2, [x0, #136]
    ee88:	ldr	x0, [sp, #56]
    ee8c:	add	x3, x0, #0x90
    ee90:	ldr	x0, [sp, #56]
    ee94:	add	x4, x0, #0x7c
    ee98:	ldr	x0, [sp, #56]
    ee9c:	add	x0, x0, #0x318
    eea0:	mov	x5, x0
    eea4:	mov	w0, #0x2                   	// #2
    eea8:	bl	10a40 <inflateCodesUsed@@ZLIB_1.2.9+0x50>
    eeac:	str	w0, [sp, #64]
    eeb0:	ldr	w0, [sp, #64]
    eeb4:	cmp	w0, #0x0
    eeb8:	b.eq	eedc <inflate@@Base+0x1c4c>  // b.none
    eebc:	ldr	x0, [sp, #24]
    eec0:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    eec4:	add	x1, x1, #0xbd0
    eec8:	str	x1, [x0, #48]
    eecc:	ldr	x0, [sp, #56]
    eed0:	mov	w1, #0x3f51                	// #16209
    eed4:	str	w1, [x0, #8]
    eed8:	b	fc30 <inflate@@Base+0x29a0>
    eedc:	ldr	x0, [sp, #56]
    eee0:	mov	w1, #0x3f47                	// #16199
    eee4:	str	w1, [x0, #8]
    eee8:	ldr	w0, [sp, #20]
    eeec:	cmp	w0, #0x6
    eef0:	b.eq	fcdc <inflate@@Base+0x2a4c>  // b.none
    eef4:	ldr	x0, [sp, #56]
    eef8:	mov	w1, #0x3f48                	// #16200
    eefc:	str	w1, [x0, #8]
    ef00:	ldr	w0, [sp, #108]
    ef04:	cmp	w0, #0x5
    ef08:	b.ls	efd8 <inflate@@Base+0x1d48>  // b.plast
    ef0c:	ldr	w0, [sp, #104]
    ef10:	cmp	w0, #0x101
    ef14:	b.ls	efd8 <inflate@@Base+0x1d48>  // b.plast
    ef18:	ldr	x0, [sp, #24]
    ef1c:	ldr	x1, [sp, #112]
    ef20:	str	x1, [x0, #24]
    ef24:	ldr	x0, [sp, #24]
    ef28:	ldr	w1, [sp, #104]
    ef2c:	str	w1, [x0, #32]
    ef30:	ldr	x0, [sp, #24]
    ef34:	ldr	x1, [sp, #120]
    ef38:	str	x1, [x0]
    ef3c:	ldr	x0, [sp, #24]
    ef40:	ldr	w1, [sp, #108]
    ef44:	str	w1, [x0, #8]
    ef48:	ldr	x0, [sp, #56]
    ef4c:	ldr	x1, [sp, #96]
    ef50:	str	x1, [x0, #80]
    ef54:	ldr	x0, [sp, #56]
    ef58:	ldr	w1, [sp, #92]
    ef5c:	str	w1, [x0, #88]
    ef60:	ldr	w1, [sp, #88]
    ef64:	ldr	x0, [sp, #24]
    ef68:	bl	befc <inflateBackEnd@@ZLIB_1.2.0+0x78>
    ef6c:	ldr	x0, [sp, #24]
    ef70:	ldr	x0, [x0, #24]
    ef74:	str	x0, [sp, #112]
    ef78:	ldr	x0, [sp, #24]
    ef7c:	ldr	w0, [x0, #32]
    ef80:	str	w0, [sp, #104]
    ef84:	ldr	x0, [sp, #24]
    ef88:	ldr	x0, [x0]
    ef8c:	str	x0, [sp, #120]
    ef90:	ldr	x0, [sp, #24]
    ef94:	ldr	w0, [x0, #8]
    ef98:	str	w0, [sp, #108]
    ef9c:	ldr	x0, [sp, #56]
    efa0:	ldr	x0, [x0, #80]
    efa4:	str	x0, [sp, #96]
    efa8:	ldr	x0, [sp, #56]
    efac:	ldr	w0, [x0, #88]
    efb0:	str	w0, [sp, #92]
    efb4:	ldr	x0, [sp, #56]
    efb8:	ldr	w1, [x0, #8]
    efbc:	mov	w0, #0x3f3f                	// #16191
    efc0:	cmp	w1, w0
    efc4:	b.ne	fc24 <inflate@@Base+0x2994>  // b.any
    efc8:	ldr	x0, [sp, #56]
    efcc:	mov	w1, #0xffffffff            	// #-1
    efd0:	str	w1, [x0, #7148]
    efd4:	b	fc24 <inflate@@Base+0x2994>
    efd8:	ldr	x0, [sp, #56]
    efdc:	str	wzr, [x0, #7148]
    efe0:	ldr	x0, [sp, #56]
    efe4:	ldr	x1, [x0, #104]
    efe8:	ldr	x0, [sp, #96]
    efec:	mov	w3, w0
    eff0:	ldr	x0, [sp, #56]
    eff4:	ldr	w0, [x0, #120]
    eff8:	mov	w2, #0xffffffff            	// #-1
    effc:	lsl	w0, w2, w0
    f000:	mvn	w0, w0
    f004:	and	w0, w3, w0
    f008:	mov	w0, w0
    f00c:	lsl	x0, x0, #2
    f010:	add	x0, x1, x0
    f014:	ldr	w0, [x0]
    f018:	str	w0, [sp, #48]
    f01c:	ldrb	w0, [sp, #49]
    f020:	mov	w1, w0
    f024:	ldr	w0, [sp, #92]
    f028:	cmp	w0, w1
    f02c:	b.cs	f080 <inflate@@Base+0x1df0>  // b.hs, b.nlast
    f030:	ldr	w0, [sp, #108]
    f034:	cmp	w0, #0x0
    f038:	b.eq	fce4 <inflate@@Base+0x2a54>  // b.none
    f03c:	ldr	w0, [sp, #108]
    f040:	sub	w0, w0, #0x1
    f044:	str	w0, [sp, #108]
    f048:	ldr	x0, [sp, #120]
    f04c:	add	x1, x0, #0x1
    f050:	str	x1, [sp, #120]
    f054:	ldrb	w0, [x0]
    f058:	and	x1, x0, #0xff
    f05c:	ldr	w0, [sp, #92]
    f060:	lsl	x0, x1, x0
    f064:	ldr	x1, [sp, #96]
    f068:	add	x0, x1, x0
    f06c:	str	x0, [sp, #96]
    f070:	ldr	w0, [sp, #92]
    f074:	add	w0, w0, #0x8
    f078:	str	w0, [sp, #92]
    f07c:	b	efe0 <inflate@@Base+0x1d50>
    f080:	nop
    f084:	ldrb	w0, [sp, #48]
    f088:	cmp	w0, #0x0
    f08c:	b.eq	f1b4 <inflate@@Base+0x1f24>  // b.none
    f090:	ldrb	w0, [sp, #48]
    f094:	and	w0, w0, #0xf0
    f098:	cmp	w0, #0x0
    f09c:	b.ne	f1b4 <inflate@@Base+0x1f24>  // b.any
    f0a0:	ldr	w0, [sp, #48]
    f0a4:	str	w0, [sp, #40]
    f0a8:	ldr	x0, [sp, #56]
    f0ac:	ldr	x1, [x0, #104]
    f0b0:	ldrh	w0, [sp, #42]
    f0b4:	mov	w3, w0
    f0b8:	ldr	x0, [sp, #96]
    f0bc:	mov	w4, w0
    f0c0:	ldrb	w0, [sp, #41]
    f0c4:	mov	w2, w0
    f0c8:	ldrb	w0, [sp, #40]
    f0cc:	add	w0, w2, w0
    f0d0:	mov	w2, #0xffffffff            	// #-1
    f0d4:	lsl	w0, w2, w0
    f0d8:	mvn	w0, w0
    f0dc:	and	w0, w4, w0
    f0e0:	ldrb	w2, [sp, #41]
    f0e4:	lsr	w0, w0, w2
    f0e8:	add	w0, w3, w0
    f0ec:	mov	w0, w0
    f0f0:	lsl	x0, x0, #2
    f0f4:	add	x0, x1, x0
    f0f8:	ldr	w0, [x0]
    f0fc:	str	w0, [sp, #48]
    f100:	ldrb	w0, [sp, #41]
    f104:	mov	w1, w0
    f108:	ldrb	w0, [sp, #49]
    f10c:	add	w0, w1, w0
    f110:	mov	w1, w0
    f114:	ldr	w0, [sp, #92]
    f118:	cmp	w0, w1
    f11c:	b.cs	f170 <inflate@@Base+0x1ee0>  // b.hs, b.nlast
    f120:	ldr	w0, [sp, #108]
    f124:	cmp	w0, #0x0
    f128:	b.eq	fcec <inflate@@Base+0x2a5c>  // b.none
    f12c:	ldr	w0, [sp, #108]
    f130:	sub	w0, w0, #0x1
    f134:	str	w0, [sp, #108]
    f138:	ldr	x0, [sp, #120]
    f13c:	add	x1, x0, #0x1
    f140:	str	x1, [sp, #120]
    f144:	ldrb	w0, [x0]
    f148:	and	x1, x0, #0xff
    f14c:	ldr	w0, [sp, #92]
    f150:	lsl	x0, x1, x0
    f154:	ldr	x1, [sp, #96]
    f158:	add	x0, x1, x0
    f15c:	str	x0, [sp, #96]
    f160:	ldr	w0, [sp, #92]
    f164:	add	w0, w0, #0x8
    f168:	str	w0, [sp, #92]
    f16c:	b	f0a8 <inflate@@Base+0x1e18>
    f170:	nop
    f174:	ldrb	w0, [sp, #41]
    f178:	mov	w1, w0
    f17c:	ldr	x0, [sp, #96]
    f180:	lsr	x0, x0, x1
    f184:	str	x0, [sp, #96]
    f188:	ldrb	w0, [sp, #41]
    f18c:	mov	w1, w0
    f190:	ldr	w0, [sp, #92]
    f194:	sub	w0, w0, w1
    f198:	str	w0, [sp, #92]
    f19c:	ldr	x0, [sp, #56]
    f1a0:	ldr	w0, [x0, #7148]
    f1a4:	ldrb	w1, [sp, #41]
    f1a8:	add	w1, w0, w1
    f1ac:	ldr	x0, [sp, #56]
    f1b0:	str	w1, [x0, #7148]
    f1b4:	ldrb	w0, [sp, #49]
    f1b8:	mov	w1, w0
    f1bc:	ldr	x0, [sp, #96]
    f1c0:	lsr	x0, x0, x1
    f1c4:	str	x0, [sp, #96]
    f1c8:	ldrb	w0, [sp, #49]
    f1cc:	mov	w1, w0
    f1d0:	ldr	w0, [sp, #92]
    f1d4:	sub	w0, w0, w1
    f1d8:	str	w0, [sp, #92]
    f1dc:	ldr	x0, [sp, #56]
    f1e0:	ldr	w0, [x0, #7148]
    f1e4:	ldrb	w1, [sp, #49]
    f1e8:	add	w1, w0, w1
    f1ec:	ldr	x0, [sp, #56]
    f1f0:	str	w1, [x0, #7148]
    f1f4:	ldrh	w0, [sp, #50]
    f1f8:	mov	w1, w0
    f1fc:	ldr	x0, [sp, #56]
    f200:	str	w1, [x0, #92]
    f204:	ldrb	w0, [sp, #48]
    f208:	cmp	w0, #0x0
    f20c:	b.ne	f220 <inflate@@Base+0x1f90>  // b.any
    f210:	ldr	x0, [sp, #56]
    f214:	mov	w1, #0x3f4d                	// #16205
    f218:	str	w1, [x0, #8]
    f21c:	b	fc30 <inflate@@Base+0x29a0>
    f220:	ldrb	w0, [sp, #48]
    f224:	and	w0, w0, #0x20
    f228:	cmp	w0, #0x0
    f22c:	b.eq	f24c <inflate@@Base+0x1fbc>  // b.none
    f230:	ldr	x0, [sp, #56]
    f234:	mov	w1, #0xffffffff            	// #-1
    f238:	str	w1, [x0, #7148]
    f23c:	ldr	x0, [sp, #56]
    f240:	mov	w1, #0x3f3f                	// #16191
    f244:	str	w1, [x0, #8]
    f248:	b	fc30 <inflate@@Base+0x29a0>
    f24c:	ldrb	w0, [sp, #48]
    f250:	and	w0, w0, #0x40
    f254:	cmp	w0, #0x0
    f258:	b.eq	f27c <inflate@@Base+0x1fec>  // b.none
    f25c:	ldr	x0, [sp, #24]
    f260:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    f264:	add	x1, x1, #0xbe8
    f268:	str	x1, [x0, #48]
    f26c:	ldr	x0, [sp, #56]
    f270:	mov	w1, #0x3f51                	// #16209
    f274:	str	w1, [x0, #8]
    f278:	b	fc30 <inflate@@Base+0x29a0>
    f27c:	ldrb	w0, [sp, #48]
    f280:	and	w1, w0, #0xf
    f284:	ldr	x0, [sp, #56]
    f288:	str	w1, [x0, #100]
    f28c:	ldr	x0, [sp, #56]
    f290:	mov	w1, #0x3f49                	// #16201
    f294:	str	w1, [x0, #8]
    f298:	ldr	x0, [sp, #56]
    f29c:	ldr	w0, [x0, #100]
    f2a0:	cmp	w0, #0x0
    f2a4:	b.eq	f38c <inflate@@Base+0x20fc>  // b.none
    f2a8:	b	f2f8 <inflate@@Base+0x2068>
    f2ac:	ldr	w0, [sp, #108]
    f2b0:	cmp	w0, #0x0
    f2b4:	b.eq	fcf4 <inflate@@Base+0x2a64>  // b.none
    f2b8:	ldr	w0, [sp, #108]
    f2bc:	sub	w0, w0, #0x1
    f2c0:	str	w0, [sp, #108]
    f2c4:	ldr	x0, [sp, #120]
    f2c8:	add	x1, x0, #0x1
    f2cc:	str	x1, [sp, #120]
    f2d0:	ldrb	w0, [x0]
    f2d4:	and	x1, x0, #0xff
    f2d8:	ldr	w0, [sp, #92]
    f2dc:	lsl	x0, x1, x0
    f2e0:	ldr	x1, [sp, #96]
    f2e4:	add	x0, x1, x0
    f2e8:	str	x0, [sp, #96]
    f2ec:	ldr	w0, [sp, #92]
    f2f0:	add	w0, w0, #0x8
    f2f4:	str	w0, [sp, #92]
    f2f8:	ldr	x0, [sp, #56]
    f2fc:	ldr	w0, [x0, #100]
    f300:	ldr	w1, [sp, #92]
    f304:	cmp	w1, w0
    f308:	b.cc	f2ac <inflate@@Base+0x201c>  // b.lo, b.ul, b.last
    f30c:	ldr	x0, [sp, #56]
    f310:	ldr	w1, [x0, #92]
    f314:	ldr	x0, [sp, #96]
    f318:	mov	w3, w0
    f31c:	ldr	x0, [sp, #56]
    f320:	ldr	w0, [x0, #100]
    f324:	mov	w2, #0xffffffff            	// #-1
    f328:	lsl	w0, w2, w0
    f32c:	mvn	w0, w0
    f330:	and	w0, w3, w0
    f334:	add	w1, w1, w0
    f338:	ldr	x0, [sp, #56]
    f33c:	str	w1, [x0, #92]
    f340:	ldr	x0, [sp, #56]
    f344:	ldr	w0, [x0, #100]
    f348:	ldr	x1, [sp, #96]
    f34c:	lsr	x0, x1, x0
    f350:	str	x0, [sp, #96]
    f354:	ldr	x0, [sp, #56]
    f358:	ldr	w0, [x0, #100]
    f35c:	ldr	w1, [sp, #92]
    f360:	sub	w0, w1, w0
    f364:	str	w0, [sp, #92]
    f368:	ldr	x0, [sp, #56]
    f36c:	ldr	w0, [x0, #7148]
    f370:	mov	w1, w0
    f374:	ldr	x0, [sp, #56]
    f378:	ldr	w0, [x0, #100]
    f37c:	add	w0, w1, w0
    f380:	mov	w1, w0
    f384:	ldr	x0, [sp, #56]
    f388:	str	w1, [x0, #7148]
    f38c:	ldr	x0, [sp, #56]
    f390:	ldr	w1, [x0, #92]
    f394:	ldr	x0, [sp, #56]
    f398:	str	w1, [x0, #7152]
    f39c:	ldr	x0, [sp, #56]
    f3a0:	mov	w1, #0x3f4a                	// #16202
    f3a4:	str	w1, [x0, #8]
    f3a8:	ldr	x0, [sp, #56]
    f3ac:	ldr	x1, [x0, #112]
    f3b0:	ldr	x0, [sp, #96]
    f3b4:	mov	w3, w0
    f3b8:	ldr	x0, [sp, #56]
    f3bc:	ldr	w0, [x0, #124]
    f3c0:	mov	w2, #0xffffffff            	// #-1
    f3c4:	lsl	w0, w2, w0
    f3c8:	mvn	w0, w0
    f3cc:	and	w0, w3, w0
    f3d0:	mov	w0, w0
    f3d4:	lsl	x0, x0, #2
    f3d8:	add	x0, x1, x0
    f3dc:	ldr	w0, [x0]
    f3e0:	str	w0, [sp, #48]
    f3e4:	ldrb	w0, [sp, #49]
    f3e8:	mov	w1, w0
    f3ec:	ldr	w0, [sp, #92]
    f3f0:	cmp	w0, w1
    f3f4:	b.cs	f448 <inflate@@Base+0x21b8>  // b.hs, b.nlast
    f3f8:	ldr	w0, [sp, #108]
    f3fc:	cmp	w0, #0x0
    f400:	b.eq	fcfc <inflate@@Base+0x2a6c>  // b.none
    f404:	ldr	w0, [sp, #108]
    f408:	sub	w0, w0, #0x1
    f40c:	str	w0, [sp, #108]
    f410:	ldr	x0, [sp, #120]
    f414:	add	x1, x0, #0x1
    f418:	str	x1, [sp, #120]
    f41c:	ldrb	w0, [x0]
    f420:	and	x1, x0, #0xff
    f424:	ldr	w0, [sp, #92]
    f428:	lsl	x0, x1, x0
    f42c:	ldr	x1, [sp, #96]
    f430:	add	x0, x1, x0
    f434:	str	x0, [sp, #96]
    f438:	ldr	w0, [sp, #92]
    f43c:	add	w0, w0, #0x8
    f440:	str	w0, [sp, #92]
    f444:	b	f3a8 <inflate@@Base+0x2118>
    f448:	nop
    f44c:	ldrb	w0, [sp, #48]
    f450:	and	w0, w0, #0xf0
    f454:	cmp	w0, #0x0
    f458:	b.ne	f570 <inflate@@Base+0x22e0>  // b.any
    f45c:	ldr	w0, [sp, #48]
    f460:	str	w0, [sp, #40]
    f464:	ldr	x0, [sp, #56]
    f468:	ldr	x1, [x0, #112]
    f46c:	ldrh	w0, [sp, #42]
    f470:	mov	w3, w0
    f474:	ldr	x0, [sp, #96]
    f478:	mov	w4, w0
    f47c:	ldrb	w0, [sp, #41]
    f480:	mov	w2, w0
    f484:	ldrb	w0, [sp, #40]
    f488:	add	w0, w2, w0
    f48c:	mov	w2, #0xffffffff            	// #-1
    f490:	lsl	w0, w2, w0
    f494:	mvn	w0, w0
    f498:	and	w0, w4, w0
    f49c:	ldrb	w2, [sp, #41]
    f4a0:	lsr	w0, w0, w2
    f4a4:	add	w0, w3, w0
    f4a8:	mov	w0, w0
    f4ac:	lsl	x0, x0, #2
    f4b0:	add	x0, x1, x0
    f4b4:	ldr	w0, [x0]
    f4b8:	str	w0, [sp, #48]
    f4bc:	ldrb	w0, [sp, #41]
    f4c0:	mov	w1, w0
    f4c4:	ldrb	w0, [sp, #49]
    f4c8:	add	w0, w1, w0
    f4cc:	mov	w1, w0
    f4d0:	ldr	w0, [sp, #92]
    f4d4:	cmp	w0, w1
    f4d8:	b.cs	f52c <inflate@@Base+0x229c>  // b.hs, b.nlast
    f4dc:	ldr	w0, [sp, #108]
    f4e0:	cmp	w0, #0x0
    f4e4:	b.eq	fd04 <inflate@@Base+0x2a74>  // b.none
    f4e8:	ldr	w0, [sp, #108]
    f4ec:	sub	w0, w0, #0x1
    f4f0:	str	w0, [sp, #108]
    f4f4:	ldr	x0, [sp, #120]
    f4f8:	add	x1, x0, #0x1
    f4fc:	str	x1, [sp, #120]
    f500:	ldrb	w0, [x0]
    f504:	and	x1, x0, #0xff
    f508:	ldr	w0, [sp, #92]
    f50c:	lsl	x0, x1, x0
    f510:	ldr	x1, [sp, #96]
    f514:	add	x0, x1, x0
    f518:	str	x0, [sp, #96]
    f51c:	ldr	w0, [sp, #92]
    f520:	add	w0, w0, #0x8
    f524:	str	w0, [sp, #92]
    f528:	b	f464 <inflate@@Base+0x21d4>
    f52c:	nop
    f530:	ldrb	w0, [sp, #41]
    f534:	mov	w1, w0
    f538:	ldr	x0, [sp, #96]
    f53c:	lsr	x0, x0, x1
    f540:	str	x0, [sp, #96]
    f544:	ldrb	w0, [sp, #41]
    f548:	mov	w1, w0
    f54c:	ldr	w0, [sp, #92]
    f550:	sub	w0, w0, w1
    f554:	str	w0, [sp, #92]
    f558:	ldr	x0, [sp, #56]
    f55c:	ldr	w0, [x0, #7148]
    f560:	ldrb	w1, [sp, #41]
    f564:	add	w1, w0, w1
    f568:	ldr	x0, [sp, #56]
    f56c:	str	w1, [x0, #7148]
    f570:	ldrb	w0, [sp, #49]
    f574:	mov	w1, w0
    f578:	ldr	x0, [sp, #96]
    f57c:	lsr	x0, x0, x1
    f580:	str	x0, [sp, #96]
    f584:	ldrb	w0, [sp, #49]
    f588:	mov	w1, w0
    f58c:	ldr	w0, [sp, #92]
    f590:	sub	w0, w0, w1
    f594:	str	w0, [sp, #92]
    f598:	ldr	x0, [sp, #56]
    f59c:	ldr	w0, [x0, #7148]
    f5a0:	ldrb	w1, [sp, #49]
    f5a4:	add	w1, w0, w1
    f5a8:	ldr	x0, [sp, #56]
    f5ac:	str	w1, [x0, #7148]
    f5b0:	ldrb	w0, [sp, #48]
    f5b4:	and	w0, w0, #0x40
    f5b8:	cmp	w0, #0x0
    f5bc:	b.eq	f5e0 <inflate@@Base+0x2350>  // b.none
    f5c0:	ldr	x0, [sp, #24]
    f5c4:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    f5c8:	add	x1, x1, #0xc08
    f5cc:	str	x1, [x0, #48]
    f5d0:	ldr	x0, [sp, #56]
    f5d4:	mov	w1, #0x3f51                	// #16209
    f5d8:	str	w1, [x0, #8]
    f5dc:	b	fc30 <inflate@@Base+0x29a0>
    f5e0:	ldrh	w0, [sp, #50]
    f5e4:	mov	w1, w0
    f5e8:	ldr	x0, [sp, #56]
    f5ec:	str	w1, [x0, #96]
    f5f0:	ldrb	w0, [sp, #48]
    f5f4:	and	w1, w0, #0xf
    f5f8:	ldr	x0, [sp, #56]
    f5fc:	str	w1, [x0, #100]
    f600:	ldr	x0, [sp, #56]
    f604:	mov	w1, #0x3f4b                	// #16203
    f608:	str	w1, [x0, #8]
    f60c:	ldr	x0, [sp, #56]
    f610:	ldr	w0, [x0, #100]
    f614:	cmp	w0, #0x0
    f618:	b.eq	f700 <inflate@@Base+0x2470>  // b.none
    f61c:	b	f66c <inflate@@Base+0x23dc>
    f620:	ldr	w0, [sp, #108]
    f624:	cmp	w0, #0x0
    f628:	b.eq	fd0c <inflate@@Base+0x2a7c>  // b.none
    f62c:	ldr	w0, [sp, #108]
    f630:	sub	w0, w0, #0x1
    f634:	str	w0, [sp, #108]
    f638:	ldr	x0, [sp, #120]
    f63c:	add	x1, x0, #0x1
    f640:	str	x1, [sp, #120]
    f644:	ldrb	w0, [x0]
    f648:	and	x1, x0, #0xff
    f64c:	ldr	w0, [sp, #92]
    f650:	lsl	x0, x1, x0
    f654:	ldr	x1, [sp, #96]
    f658:	add	x0, x1, x0
    f65c:	str	x0, [sp, #96]
    f660:	ldr	w0, [sp, #92]
    f664:	add	w0, w0, #0x8
    f668:	str	w0, [sp, #92]
    f66c:	ldr	x0, [sp, #56]
    f670:	ldr	w0, [x0, #100]
    f674:	ldr	w1, [sp, #92]
    f678:	cmp	w1, w0
    f67c:	b.cc	f620 <inflate@@Base+0x2390>  // b.lo, b.ul, b.last
    f680:	ldr	x0, [sp, #56]
    f684:	ldr	w1, [x0, #96]
    f688:	ldr	x0, [sp, #96]
    f68c:	mov	w3, w0
    f690:	ldr	x0, [sp, #56]
    f694:	ldr	w0, [x0, #100]
    f698:	mov	w2, #0xffffffff            	// #-1
    f69c:	lsl	w0, w2, w0
    f6a0:	mvn	w0, w0
    f6a4:	and	w0, w3, w0
    f6a8:	add	w1, w1, w0
    f6ac:	ldr	x0, [sp, #56]
    f6b0:	str	w1, [x0, #96]
    f6b4:	ldr	x0, [sp, #56]
    f6b8:	ldr	w0, [x0, #100]
    f6bc:	ldr	x1, [sp, #96]
    f6c0:	lsr	x0, x1, x0
    f6c4:	str	x0, [sp, #96]
    f6c8:	ldr	x0, [sp, #56]
    f6cc:	ldr	w0, [x0, #100]
    f6d0:	ldr	w1, [sp, #92]
    f6d4:	sub	w0, w1, w0
    f6d8:	str	w0, [sp, #92]
    f6dc:	ldr	x0, [sp, #56]
    f6e0:	ldr	w0, [x0, #7148]
    f6e4:	mov	w1, w0
    f6e8:	ldr	x0, [sp, #56]
    f6ec:	ldr	w0, [x0, #100]
    f6f0:	add	w0, w1, w0
    f6f4:	mov	w1, w0
    f6f8:	ldr	x0, [sp, #56]
    f6fc:	str	w1, [x0, #7148]
    f700:	ldr	x0, [sp, #56]
    f704:	mov	w1, #0x3f4c                	// #16204
    f708:	str	w1, [x0, #8]
    f70c:	ldr	w0, [sp, #104]
    f710:	cmp	w0, #0x0
    f714:	b.eq	fd14 <inflate@@Base+0x2a84>  // b.none
    f718:	ldr	w1, [sp, #88]
    f71c:	ldr	w0, [sp, #104]
    f720:	sub	w0, w1, w0
    f724:	str	w0, [sp, #84]
    f728:	ldr	x0, [sp, #56]
    f72c:	ldr	w0, [x0, #96]
    f730:	ldr	w1, [sp, #84]
    f734:	cmp	w1, w0
    f738:	b.cs	f82c <inflate@@Base+0x259c>  // b.hs, b.nlast
    f73c:	ldr	x0, [sp, #56]
    f740:	ldr	w1, [x0, #96]
    f744:	ldr	w0, [sp, #84]
    f748:	sub	w0, w1, w0
    f74c:	str	w0, [sp, #84]
    f750:	ldr	x0, [sp, #56]
    f754:	ldr	w0, [x0, #64]
    f758:	ldr	w1, [sp, #84]
    f75c:	cmp	w1, w0
    f760:	b.ls	f794 <inflate@@Base+0x2504>  // b.plast
    f764:	ldr	x0, [sp, #56]
    f768:	ldr	w0, [x0, #7144]
    f76c:	cmp	w0, #0x0
    f770:	b.eq	f794 <inflate@@Base+0x2504>  // b.none
    f774:	ldr	x0, [sp, #24]
    f778:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    f77c:	add	x1, x1, #0xc20
    f780:	str	x1, [x0, #48]
    f784:	ldr	x0, [sp, #56]
    f788:	mov	w1, #0x3f51                	// #16209
    f78c:	str	w1, [x0, #8]
    f790:	b	fc30 <inflate@@Base+0x29a0>
    f794:	ldr	x0, [sp, #56]
    f798:	ldr	w0, [x0, #68]
    f79c:	ldr	w1, [sp, #84]
    f7a0:	cmp	w1, w0
    f7a4:	b.ls	f7e4 <inflate@@Base+0x2554>  // b.plast
    f7a8:	ldr	x0, [sp, #56]
    f7ac:	ldr	w0, [x0, #68]
    f7b0:	ldr	w1, [sp, #84]
    f7b4:	sub	w0, w1, w0
    f7b8:	str	w0, [sp, #84]
    f7bc:	ldr	x0, [sp, #56]
    f7c0:	ldr	x1, [x0, #72]
    f7c4:	ldr	x0, [sp, #56]
    f7c8:	ldr	w2, [x0, #60]
    f7cc:	ldr	w0, [sp, #84]
    f7d0:	sub	w0, w2, w0
    f7d4:	mov	w0, w0
    f7d8:	add	x0, x1, x0
    f7dc:	str	x0, [sp, #72]
    f7e0:	b	f808 <inflate@@Base+0x2578>
    f7e4:	ldr	x0, [sp, #56]
    f7e8:	ldr	x1, [x0, #72]
    f7ec:	ldr	x0, [sp, #56]
    f7f0:	ldr	w2, [x0, #68]
    f7f4:	ldr	w0, [sp, #84]
    f7f8:	sub	w0, w2, w0
    f7fc:	mov	w0, w0
    f800:	add	x0, x1, x0
    f804:	str	x0, [sp, #72]
    f808:	ldr	x0, [sp, #56]
    f80c:	ldr	w0, [x0, #92]
    f810:	ldr	w1, [sp, #84]
    f814:	cmp	w1, w0
    f818:	b.ls	f854 <inflate@@Base+0x25c4>  // b.plast
    f81c:	ldr	x0, [sp, #56]
    f820:	ldr	w0, [x0, #92]
    f824:	str	w0, [sp, #84]
    f828:	b	f854 <inflate@@Base+0x25c4>
    f82c:	ldr	x0, [sp, #56]
    f830:	ldr	w0, [x0, #96]
    f834:	mov	w0, w0
    f838:	neg	x0, x0
    f83c:	ldr	x1, [sp, #112]
    f840:	add	x0, x1, x0
    f844:	str	x0, [sp, #72]
    f848:	ldr	x0, [sp, #56]
    f84c:	ldr	w0, [x0, #92]
    f850:	str	w0, [sp, #84]
    f854:	ldr	w1, [sp, #84]
    f858:	ldr	w0, [sp, #104]
    f85c:	cmp	w1, w0
    f860:	b.ls	f86c <inflate@@Base+0x25dc>  // b.plast
    f864:	ldr	w0, [sp, #104]
    f868:	str	w0, [sp, #84]
    f86c:	ldr	w1, [sp, #104]
    f870:	ldr	w0, [sp, #84]
    f874:	sub	w0, w1, w0
    f878:	str	w0, [sp, #104]
    f87c:	ldr	x0, [sp, #56]
    f880:	ldr	w1, [x0, #92]
    f884:	ldr	w0, [sp, #84]
    f888:	sub	w1, w1, w0
    f88c:	ldr	x0, [sp, #56]
    f890:	str	w1, [x0, #92]
    f894:	ldr	x1, [sp, #72]
    f898:	add	x0, x1, #0x1
    f89c:	str	x0, [sp, #72]
    f8a0:	ldr	x0, [sp, #112]
    f8a4:	add	x2, x0, #0x1
    f8a8:	str	x2, [sp, #112]
    f8ac:	ldrb	w1, [x1]
    f8b0:	strb	w1, [x0]
    f8b4:	ldr	w0, [sp, #84]
    f8b8:	sub	w0, w0, #0x1
    f8bc:	str	w0, [sp, #84]
    f8c0:	ldr	w0, [sp, #84]
    f8c4:	cmp	w0, #0x0
    f8c8:	b.ne	f894 <inflate@@Base+0x2604>  // b.any
    f8cc:	ldr	x0, [sp, #56]
    f8d0:	ldr	w0, [x0, #92]
    f8d4:	cmp	w0, #0x0
    f8d8:	b.ne	fc2c <inflate@@Base+0x299c>  // b.any
    f8dc:	ldr	x0, [sp, #56]
    f8e0:	mov	w1, #0x3f48                	// #16200
    f8e4:	str	w1, [x0, #8]
    f8e8:	b	fc2c <inflate@@Base+0x299c>
    f8ec:	ldr	w0, [sp, #104]
    f8f0:	cmp	w0, #0x0
    f8f4:	b.eq	fd1c <inflate@@Base+0x2a8c>  // b.none
    f8f8:	ldr	x0, [sp, #56]
    f8fc:	ldr	w2, [x0, #92]
    f900:	ldr	x0, [sp, #112]
    f904:	add	x1, x0, #0x1
    f908:	str	x1, [sp, #112]
    f90c:	and	w1, w2, #0xff
    f910:	strb	w1, [x0]
    f914:	ldr	w0, [sp, #104]
    f918:	sub	w0, w0, #0x1
    f91c:	str	w0, [sp, #104]
    f920:	ldr	x0, [sp, #56]
    f924:	mov	w1, #0x3f48                	// #16200
    f928:	str	w1, [x0, #8]
    f92c:	b	fc30 <inflate@@Base+0x29a0>
    f930:	ldr	x0, [sp, #56]
    f934:	ldr	w0, [x0, #16]
    f938:	cmp	w0, #0x0
    f93c:	b.eq	fb20 <inflate@@Base+0x2890>  // b.none
    f940:	b	f990 <inflate@@Base+0x2700>
    f944:	ldr	w0, [sp, #108]
    f948:	cmp	w0, #0x0
    f94c:	b.eq	fd24 <inflate@@Base+0x2a94>  // b.none
    f950:	ldr	w0, [sp, #108]
    f954:	sub	w0, w0, #0x1
    f958:	str	w0, [sp, #108]
    f95c:	ldr	x0, [sp, #120]
    f960:	add	x1, x0, #0x1
    f964:	str	x1, [sp, #120]
    f968:	ldrb	w0, [x0]
    f96c:	and	x1, x0, #0xff
    f970:	ldr	w0, [sp, #92]
    f974:	lsl	x0, x1, x0
    f978:	ldr	x1, [sp, #96]
    f97c:	add	x0, x1, x0
    f980:	str	x0, [sp, #96]
    f984:	ldr	w0, [sp, #92]
    f988:	add	w0, w0, #0x8
    f98c:	str	w0, [sp, #92]
    f990:	ldr	w0, [sp, #92]
    f994:	cmp	w0, #0x1f
    f998:	b.ls	f944 <inflate@@Base+0x26b4>  // b.plast
    f99c:	ldr	w1, [sp, #88]
    f9a0:	ldr	w0, [sp, #104]
    f9a4:	sub	w0, w1, w0
    f9a8:	str	w0, [sp, #88]
    f9ac:	ldr	x0, [sp, #24]
    f9b0:	ldr	x1, [x0, #40]
    f9b4:	ldr	w0, [sp, #88]
    f9b8:	add	x1, x1, x0
    f9bc:	ldr	x0, [sp, #24]
    f9c0:	str	x1, [x0, #40]
    f9c4:	ldr	x0, [sp, #56]
    f9c8:	ldr	x1, [x0, #40]
    f9cc:	ldr	w0, [sp, #88]
    f9d0:	add	x1, x1, x0
    f9d4:	ldr	x0, [sp, #56]
    f9d8:	str	x1, [x0, #40]
    f9dc:	ldr	x0, [sp, #56]
    f9e0:	ldr	w0, [x0, #16]
    f9e4:	and	w0, w0, #0x4
    f9e8:	cmp	w0, #0x0
    f9ec:	b.eq	fa78 <inflate@@Base+0x27e8>  // b.none
    f9f0:	ldr	w0, [sp, #88]
    f9f4:	cmp	w0, #0x0
    f9f8:	b.eq	fa78 <inflate@@Base+0x27e8>  // b.none
    f9fc:	ldr	x0, [sp, #56]
    fa00:	ldr	w0, [x0, #24]
    fa04:	cmp	w0, #0x0
    fa08:	b.eq	fa38 <inflate@@Base+0x27a8>  // b.none
    fa0c:	ldr	x0, [sp, #56]
    fa10:	ldr	x3, [x0, #32]
    fa14:	ldr	w0, [sp, #88]
    fa18:	neg	x0, x0
    fa1c:	ldr	x1, [sp, #112]
    fa20:	add	x0, x1, x0
    fa24:	ldr	w2, [sp, #88]
    fa28:	mov	x1, x0
    fa2c:	mov	x0, x3
    fa30:	bl	2430 <crc32@plt>
    fa34:	b	fa60 <inflate@@Base+0x27d0>
    fa38:	ldr	x0, [sp, #56]
    fa3c:	ldr	x3, [x0, #32]
    fa40:	ldr	w0, [sp, #88]
    fa44:	neg	x0, x0
    fa48:	ldr	x1, [sp, #112]
    fa4c:	add	x0, x1, x0
    fa50:	ldr	w2, [sp, #88]
    fa54:	mov	x1, x0
    fa58:	mov	x0, x3
    fa5c:	bl	2560 <adler32@plt>
    fa60:	ldr	x1, [sp, #56]
    fa64:	str	x0, [x1, #32]
    fa68:	ldr	x0, [sp, #56]
    fa6c:	ldr	x1, [x0, #32]
    fa70:	ldr	x0, [sp, #24]
    fa74:	str	x1, [x0, #96]
    fa78:	ldr	w0, [sp, #104]
    fa7c:	str	w0, [sp, #88]
    fa80:	ldr	x0, [sp, #56]
    fa84:	ldr	w0, [x0, #16]
    fa88:	and	w0, w0, #0x4
    fa8c:	cmp	w0, #0x0
    fa90:	b.eq	fb18 <inflate@@Base+0x2888>  // b.none
    fa94:	ldr	x0, [sp, #56]
    fa98:	ldr	w0, [x0, #24]
    fa9c:	cmp	w0, #0x0
    faa0:	b.ne	fae4 <inflate@@Base+0x2854>  // b.any
    faa4:	ldr	x0, [sp, #96]
    faa8:	lsr	x0, x0, #24
    faac:	and	x1, x0, #0xff
    fab0:	ldr	x0, [sp, #96]
    fab4:	lsr	x0, x0, #8
    fab8:	and	x0, x0, #0xff00
    fabc:	orr	x1, x1, x0
    fac0:	ldr	x0, [sp, #96]
    fac4:	lsl	x0, x0, #8
    fac8:	and	x0, x0, #0xff0000
    facc:	add	x1, x1, x0
    fad0:	ldr	x0, [sp, #96]
    fad4:	lsl	x0, x0, #24
    fad8:	and	x0, x0, #0xffffffff
    fadc:	add	x0, x1, x0
    fae0:	b	fae8 <inflate@@Base+0x2858>
    fae4:	ldr	x0, [sp, #96]
    fae8:	ldr	x1, [sp, #56]
    faec:	ldr	x1, [x1, #32]
    faf0:	cmp	x0, x1
    faf4:	b.eq	fb18 <inflate@@Base+0x2888>  // b.none
    faf8:	ldr	x0, [sp, #24]
    fafc:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    fb00:	add	x1, x1, #0xc40
    fb04:	str	x1, [x0, #48]
    fb08:	ldr	x0, [sp, #56]
    fb0c:	mov	w1, #0x3f51                	// #16209
    fb10:	str	w1, [x0, #8]
    fb14:	b	fc30 <inflate@@Base+0x29a0>
    fb18:	str	xzr, [sp, #96]
    fb1c:	str	wzr, [sp, #92]
    fb20:	ldr	x0, [sp, #56]
    fb24:	mov	w1, #0x3f4f                	// #16207
    fb28:	str	w1, [x0, #8]
    fb2c:	ldr	x0, [sp, #56]
    fb30:	ldr	w0, [x0, #16]
    fb34:	cmp	w0, #0x0
    fb38:	b.eq	fbe8 <inflate@@Base+0x2958>  // b.none
    fb3c:	ldr	x0, [sp, #56]
    fb40:	ldr	w0, [x0, #24]
    fb44:	cmp	w0, #0x0
    fb48:	b.eq	fbe8 <inflate@@Base+0x2958>  // b.none
    fb4c:	b	fb9c <inflate@@Base+0x290c>
    fb50:	ldr	w0, [sp, #108]
    fb54:	cmp	w0, #0x0
    fb58:	b.eq	fd2c <inflate@@Base+0x2a9c>  // b.none
    fb5c:	ldr	w0, [sp, #108]
    fb60:	sub	w0, w0, #0x1
    fb64:	str	w0, [sp, #108]
    fb68:	ldr	x0, [sp, #120]
    fb6c:	add	x1, x0, #0x1
    fb70:	str	x1, [sp, #120]
    fb74:	ldrb	w0, [x0]
    fb78:	and	x1, x0, #0xff
    fb7c:	ldr	w0, [sp, #92]
    fb80:	lsl	x0, x1, x0
    fb84:	ldr	x1, [sp, #96]
    fb88:	add	x0, x1, x0
    fb8c:	str	x0, [sp, #96]
    fb90:	ldr	w0, [sp, #92]
    fb94:	add	w0, w0, #0x8
    fb98:	str	w0, [sp, #92]
    fb9c:	ldr	w0, [sp, #92]
    fba0:	cmp	w0, #0x1f
    fba4:	b.ls	fb50 <inflate@@Base+0x28c0>  // b.plast
    fba8:	ldr	x0, [sp, #56]
    fbac:	ldr	x0, [x0, #40]
    fbb0:	and	x0, x0, #0xffffffff
    fbb4:	ldr	x1, [sp, #96]
    fbb8:	cmp	x1, x0
    fbbc:	b.eq	fbe0 <inflate@@Base+0x2950>  // b.none
    fbc0:	ldr	x0, [sp, #24]
    fbc4:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2190>
    fbc8:	add	x1, x1, #0xc58
    fbcc:	str	x1, [x0, #48]
    fbd0:	ldr	x0, [sp, #56]
    fbd4:	mov	w1, #0x3f51                	// #16209
    fbd8:	str	w1, [x0, #8]
    fbdc:	b	fc30 <inflate@@Base+0x29a0>
    fbe0:	str	xzr, [sp, #96]
    fbe4:	str	wzr, [sp, #92]
    fbe8:	ldr	x0, [sp, #56]
    fbec:	mov	w1, #0x3f50                	// #16208
    fbf0:	str	w1, [x0, #8]
    fbf4:	mov	w0, #0x1                   	// #1
    fbf8:	str	w0, [sp, #64]
    fbfc:	b	fd30 <inflate@@Base+0x2aa0>
    fc00:	mov	w0, #0xfffffffd            	// #-3
    fc04:	str	w0, [sp, #64]
    fc08:	b	fd30 <inflate@@Base+0x2aa0>
    fc0c:	mov	w0, #0xfffffffc            	// #-4
    fc10:	b	fff4 <inflate@@Base+0x2d64>
    fc14:	mov	w0, #0xfffffffe            	// #-2
    fc18:	b	fff4 <inflate@@Base+0x2d64>
    fc1c:	nop
    fc20:	b	d370 <inflate@@Base+0xe0>
    fc24:	nop
    fc28:	b	d370 <inflate@@Base+0xe0>
    fc2c:	nop
    fc30:	b	d370 <inflate@@Base+0xe0>
    fc34:	nop
    fc38:	b	fd30 <inflate@@Base+0x2aa0>
    fc3c:	nop
    fc40:	b	fd30 <inflate@@Base+0x2aa0>
    fc44:	nop
    fc48:	b	fd30 <inflate@@Base+0x2aa0>
    fc4c:	nop
    fc50:	b	fd30 <inflate@@Base+0x2aa0>
    fc54:	nop
    fc58:	b	fd30 <inflate@@Base+0x2aa0>
    fc5c:	nop
    fc60:	b	fd30 <inflate@@Base+0x2aa0>
    fc64:	nop
    fc68:	b	fd30 <inflate@@Base+0x2aa0>
    fc6c:	nop
    fc70:	b	fd30 <inflate@@Base+0x2aa0>
    fc74:	nop
    fc78:	b	fd30 <inflate@@Base+0x2aa0>
    fc7c:	nop
    fc80:	b	fd30 <inflate@@Base+0x2aa0>
    fc84:	nop
    fc88:	b	fd30 <inflate@@Base+0x2aa0>
    fc8c:	nop
    fc90:	b	fd30 <inflate@@Base+0x2aa0>
    fc94:	nop
    fc98:	b	fd30 <inflate@@Base+0x2aa0>
    fc9c:	nop
    fca0:	b	fd30 <inflate@@Base+0x2aa0>
    fca4:	nop
    fca8:	b	fd30 <inflate@@Base+0x2aa0>
    fcac:	nop
    fcb0:	b	fd30 <inflate@@Base+0x2aa0>
    fcb4:	nop
    fcb8:	b	fd30 <inflate@@Base+0x2aa0>
    fcbc:	nop
    fcc0:	b	fd30 <inflate@@Base+0x2aa0>
    fcc4:	nop
    fcc8:	b	fd30 <inflate@@Base+0x2aa0>
    fccc:	nop
    fcd0:	b	fd30 <inflate@@Base+0x2aa0>
    fcd4:	nop
    fcd8:	b	fd30 <inflate@@Base+0x2aa0>
    fcdc:	nop
    fce0:	b	fd30 <inflate@@Base+0x2aa0>
    fce4:	nop
    fce8:	b	fd30 <inflate@@Base+0x2aa0>
    fcec:	nop
    fcf0:	b	fd30 <inflate@@Base+0x2aa0>
    fcf4:	nop
    fcf8:	b	fd30 <inflate@@Base+0x2aa0>
    fcfc:	nop
    fd00:	b	fd30 <inflate@@Base+0x2aa0>
    fd04:	nop
    fd08:	b	fd30 <inflate@@Base+0x2aa0>
    fd0c:	nop
    fd10:	b	fd30 <inflate@@Base+0x2aa0>
    fd14:	nop
    fd18:	b	fd30 <inflate@@Base+0x2aa0>
    fd1c:	nop
    fd20:	b	fd30 <inflate@@Base+0x2aa0>
    fd24:	nop
    fd28:	b	fd30 <inflate@@Base+0x2aa0>
    fd2c:	nop
    fd30:	ldr	x0, [sp, #24]
    fd34:	ldr	x1, [sp, #112]
    fd38:	str	x1, [x0, #24]
    fd3c:	ldr	x0, [sp, #24]
    fd40:	ldr	w1, [sp, #104]
    fd44:	str	w1, [x0, #32]
    fd48:	ldr	x0, [sp, #24]
    fd4c:	ldr	x1, [sp, #120]
    fd50:	str	x1, [x0]
    fd54:	ldr	x0, [sp, #24]
    fd58:	ldr	w1, [sp, #108]
    fd5c:	str	w1, [x0, #8]
    fd60:	ldr	x0, [sp, #56]
    fd64:	ldr	x1, [sp, #96]
    fd68:	str	x1, [x0, #80]
    fd6c:	ldr	x0, [sp, #56]
    fd70:	ldr	w1, [sp, #92]
    fd74:	str	w1, [x0, #88]
    fd78:	ldr	x0, [sp, #56]
    fd7c:	ldr	w0, [x0, #60]
    fd80:	cmp	w0, #0x0
    fd84:	b.ne	fdd0 <inflate@@Base+0x2b40>  // b.any
    fd88:	ldr	x0, [sp, #24]
    fd8c:	ldr	w0, [x0, #32]
    fd90:	ldr	w1, [sp, #88]
    fd94:	cmp	w1, w0
    fd98:	b.eq	fe14 <inflate@@Base+0x2b84>  // b.none
    fd9c:	ldr	x0, [sp, #56]
    fda0:	ldr	w1, [x0, #8]
    fda4:	mov	w0, #0x3f50                	// #16208
    fda8:	cmp	w1, w0
    fdac:	b.hi	fe14 <inflate@@Base+0x2b84>  // b.pmore
    fdb0:	ldr	x0, [sp, #56]
    fdb4:	ldr	w1, [x0, #8]
    fdb8:	mov	w0, #0x3f4d                	// #16205
    fdbc:	cmp	w1, w0
    fdc0:	b.ls	fdd0 <inflate@@Base+0x2b40>  // b.plast
    fdc4:	ldr	w0, [sp, #20]
    fdc8:	cmp	w0, #0x4
    fdcc:	b.eq	fe14 <inflate@@Base+0x2b84>  // b.none
    fdd0:	ldr	x0, [sp, #24]
    fdd4:	ldr	x3, [x0, #24]
    fdd8:	ldr	x0, [sp, #24]
    fddc:	ldr	w0, [x0, #32]
    fde0:	ldr	w1, [sp, #88]
    fde4:	sub	w0, w1, w0
    fde8:	mov	w2, w0
    fdec:	mov	x1, x3
    fdf0:	ldr	x0, [sp, #24]
    fdf4:	bl	d024 <inflatePrime@@ZLIB_1.2.2.4+0x140>
    fdf8:	cmp	w0, #0x0
    fdfc:	b.eq	fe14 <inflate@@Base+0x2b84>  // b.none
    fe00:	ldr	x0, [sp, #56]
    fe04:	mov	w1, #0x3f52                	// #16210
    fe08:	str	w1, [x0, #8]
    fe0c:	mov	w0, #0xfffffffc            	// #-4
    fe10:	b	fff4 <inflate@@Base+0x2d64>
    fe14:	ldr	x0, [sp, #24]
    fe18:	ldr	w0, [x0, #8]
    fe1c:	ldr	w1, [sp, #52]
    fe20:	sub	w0, w1, w0
    fe24:	str	w0, [sp, #52]
    fe28:	ldr	x0, [sp, #24]
    fe2c:	ldr	w0, [x0, #32]
    fe30:	ldr	w1, [sp, #88]
    fe34:	sub	w0, w1, w0
    fe38:	str	w0, [sp, #88]
    fe3c:	ldr	x0, [sp, #24]
    fe40:	ldr	x1, [x0, #16]
    fe44:	ldr	w0, [sp, #52]
    fe48:	add	x1, x1, x0
    fe4c:	ldr	x0, [sp, #24]
    fe50:	str	x1, [x0, #16]
    fe54:	ldr	x0, [sp, #24]
    fe58:	ldr	x1, [x0, #40]
    fe5c:	ldr	w0, [sp, #88]
    fe60:	add	x1, x1, x0
    fe64:	ldr	x0, [sp, #24]
    fe68:	str	x1, [x0, #40]
    fe6c:	ldr	x0, [sp, #56]
    fe70:	ldr	x1, [x0, #40]
    fe74:	ldr	w0, [sp, #88]
    fe78:	add	x1, x1, x0
    fe7c:	ldr	x0, [sp, #56]
    fe80:	str	x1, [x0, #40]
    fe84:	ldr	x0, [sp, #56]
    fe88:	ldr	w0, [x0, #16]
    fe8c:	and	w0, w0, #0x4
    fe90:	cmp	w0, #0x0
    fe94:	b.eq	ff28 <inflate@@Base+0x2c98>  // b.none
    fe98:	ldr	w0, [sp, #88]
    fe9c:	cmp	w0, #0x0
    fea0:	b.eq	ff28 <inflate@@Base+0x2c98>  // b.none
    fea4:	ldr	x0, [sp, #56]
    fea8:	ldr	w0, [x0, #24]
    feac:	cmp	w0, #0x0
    feb0:	b.eq	fee4 <inflate@@Base+0x2c54>  // b.none
    feb4:	ldr	x0, [sp, #56]
    feb8:	ldr	x3, [x0, #32]
    febc:	ldr	x0, [sp, #24]
    fec0:	ldr	x1, [x0, #24]
    fec4:	ldr	w0, [sp, #88]
    fec8:	neg	x0, x0
    fecc:	add	x0, x1, x0
    fed0:	ldr	w2, [sp, #88]
    fed4:	mov	x1, x0
    fed8:	mov	x0, x3
    fedc:	bl	2430 <crc32@plt>
    fee0:	b	ff10 <inflate@@Base+0x2c80>
    fee4:	ldr	x0, [sp, #56]
    fee8:	ldr	x3, [x0, #32]
    feec:	ldr	x0, [sp, #24]
    fef0:	ldr	x1, [x0, #24]
    fef4:	ldr	w0, [sp, #88]
    fef8:	neg	x0, x0
    fefc:	add	x0, x1, x0
    ff00:	ldr	w2, [sp, #88]
    ff04:	mov	x1, x0
    ff08:	mov	x0, x3
    ff0c:	bl	2560 <adler32@plt>
    ff10:	ldr	x1, [sp, #56]
    ff14:	str	x0, [x1, #32]
    ff18:	ldr	x0, [sp, #56]
    ff1c:	ldr	x1, [x0, #32]
    ff20:	ldr	x0, [sp, #24]
    ff24:	str	x1, [x0, #96]
    ff28:	ldr	x0, [sp, #56]
    ff2c:	ldr	w0, [x0, #88]
    ff30:	mov	w1, w0
    ff34:	ldr	x0, [sp, #56]
    ff38:	ldr	w0, [x0, #12]
    ff3c:	cmp	w0, #0x0
    ff40:	b.eq	ff4c <inflate@@Base+0x2cbc>  // b.none
    ff44:	mov	w0, #0x40                  	// #64
    ff48:	b	ff50 <inflate@@Base+0x2cc0>
    ff4c:	mov	w0, #0x0                   	// #0
    ff50:	add	w1, w0, w1
    ff54:	ldr	x0, [sp, #56]
    ff58:	ldr	w2, [x0, #8]
    ff5c:	mov	w0, #0x3f3f                	// #16191
    ff60:	cmp	w2, w0
    ff64:	b.ne	ff70 <inflate@@Base+0x2ce0>  // b.any
    ff68:	mov	w0, #0x80                  	// #128
    ff6c:	b	ff74 <inflate@@Base+0x2ce4>
    ff70:	mov	w0, #0x0                   	// #0
    ff74:	add	w1, w0, w1
    ff78:	ldr	x0, [sp, #56]
    ff7c:	ldr	w2, [x0, #8]
    ff80:	mov	w0, #0x3f47                	// #16199
    ff84:	cmp	w2, w0
    ff88:	b.eq	ffa0 <inflate@@Base+0x2d10>  // b.none
    ff8c:	ldr	x0, [sp, #56]
    ff90:	ldr	w2, [x0, #8]
    ff94:	mov	w0, #0x3f42                	// #16194
    ff98:	cmp	w2, w0
    ff9c:	b.ne	ffa8 <inflate@@Base+0x2d18>  // b.any
    ffa0:	mov	w0, #0x100                 	// #256
    ffa4:	b	ffac <inflate@@Base+0x2d1c>
    ffa8:	mov	w0, #0x0                   	// #0
    ffac:	add	w1, w0, w1
    ffb0:	ldr	x0, [sp, #24]
    ffb4:	str	w1, [x0, #88]
    ffb8:	ldr	w0, [sp, #52]
    ffbc:	cmp	w0, #0x0
    ffc0:	b.ne	ffd0 <inflate@@Base+0x2d40>  // b.any
    ffc4:	ldr	w0, [sp, #88]
    ffc8:	cmp	w0, #0x0
    ffcc:	b.eq	ffdc <inflate@@Base+0x2d4c>  // b.none
    ffd0:	ldr	w0, [sp, #20]
    ffd4:	cmp	w0, #0x4
    ffd8:	b.ne	fff0 <inflate@@Base+0x2d60>  // b.any
    ffdc:	ldr	w0, [sp, #64]
    ffe0:	cmp	w0, #0x0
    ffe4:	b.ne	fff0 <inflate@@Base+0x2d60>  // b.any
    ffe8:	mov	w0, #0xfffffffb            	// #-5
    ffec:	str	w0, [sp, #64]
    fff0:	ldr	w0, [sp, #64]
    fff4:	ldp	x29, x30, [sp], #128
    fff8:	ret

000000000000fffc <inflateEnd@@Base>:
    fffc:	stp	x29, x30, [sp, #-48]!
   10000:	mov	x29, sp
   10004:	str	x0, [sp, #24]
   10008:	ldr	x0, [sp, #24]
   1000c:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   10010:	cmp	w0, #0x0
   10014:	b.eq	10020 <inflateEnd@@Base+0x24>  // b.none
   10018:	mov	w0, #0xfffffffe            	// #-2
   1001c:	b	10090 <inflateEnd@@Base+0x94>
   10020:	ldr	x0, [sp, #24]
   10024:	ldr	x0, [x0, #56]
   10028:	str	x0, [sp, #40]
   1002c:	ldr	x0, [sp, #40]
   10030:	ldr	x0, [x0, #72]
   10034:	cmp	x0, #0x0
   10038:	b.eq	10060 <inflateEnd@@Base+0x64>  // b.none
   1003c:	ldr	x0, [sp, #24]
   10040:	ldr	x2, [x0, #72]
   10044:	ldr	x0, [sp, #24]
   10048:	ldr	x3, [x0, #80]
   1004c:	ldr	x0, [sp, #40]
   10050:	ldr	x0, [x0, #72]
   10054:	mov	x1, x0
   10058:	mov	x0, x3
   1005c:	blr	x2
   10060:	ldr	x0, [sp, #24]
   10064:	ldr	x2, [x0, #72]
   10068:	ldr	x0, [sp, #24]
   1006c:	ldr	x3, [x0, #80]
   10070:	ldr	x0, [sp, #24]
   10074:	ldr	x0, [x0, #56]
   10078:	mov	x1, x0
   1007c:	mov	x0, x3
   10080:	blr	x2
   10084:	ldr	x0, [sp, #24]
   10088:	str	xzr, [x0, #56]
   1008c:	mov	w0, #0x0                   	// #0
   10090:	ldp	x29, x30, [sp], #48
   10094:	ret

0000000000010098 <inflateGetDictionary@@ZLIB_1.2.7.1>:
   10098:	stp	x29, x30, [sp, #-64]!
   1009c:	mov	x29, sp
   100a0:	str	x0, [sp, #40]
   100a4:	str	x1, [sp, #32]
   100a8:	str	x2, [sp, #24]
   100ac:	ldr	x0, [sp, #40]
   100b0:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   100b4:	cmp	w0, #0x0
   100b8:	b.eq	100c4 <inflateGetDictionary@@ZLIB_1.2.7.1+0x2c>  // b.none
   100bc:	mov	w0, #0xfffffffe            	// #-2
   100c0:	b	10190 <inflateGetDictionary@@ZLIB_1.2.7.1+0xf8>
   100c4:	ldr	x0, [sp, #40]
   100c8:	ldr	x0, [x0, #56]
   100cc:	str	x0, [sp, #56]
   100d0:	ldr	x0, [sp, #56]
   100d4:	ldr	w0, [x0, #64]
   100d8:	cmp	w0, #0x0
   100dc:	b.eq	10170 <inflateGetDictionary@@ZLIB_1.2.7.1+0xd8>  // b.none
   100e0:	ldr	x0, [sp, #32]
   100e4:	cmp	x0, #0x0
   100e8:	b.eq	10170 <inflateGetDictionary@@ZLIB_1.2.7.1+0xd8>  // b.none
   100ec:	ldr	x0, [sp, #56]
   100f0:	ldr	x1, [x0, #72]
   100f4:	ldr	x0, [sp, #56]
   100f8:	ldr	w0, [x0, #68]
   100fc:	mov	w0, w0
   10100:	add	x3, x1, x0
   10104:	ldr	x0, [sp, #56]
   10108:	ldr	w1, [x0, #64]
   1010c:	ldr	x0, [sp, #56]
   10110:	ldr	w0, [x0, #68]
   10114:	sub	w0, w1, w0
   10118:	mov	w0, w0
   1011c:	mov	x2, x0
   10120:	mov	x1, x3
   10124:	ldr	x0, [sp, #32]
   10128:	bl	23a0 <memcpy@plt>
   1012c:	ldr	x0, [sp, #56]
   10130:	ldr	w0, [x0, #64]
   10134:	mov	w1, w0
   10138:	ldr	x0, [sp, #56]
   1013c:	ldr	w0, [x0, #68]
   10140:	mov	w0, w0
   10144:	sub	x0, x1, x0
   10148:	ldr	x1, [sp, #32]
   1014c:	add	x3, x1, x0
   10150:	ldr	x0, [sp, #56]
   10154:	ldr	x1, [x0, #72]
   10158:	ldr	x0, [sp, #56]
   1015c:	ldr	w0, [x0, #68]
   10160:	mov	w0, w0
   10164:	mov	x2, x0
   10168:	mov	x0, x3
   1016c:	bl	23a0 <memcpy@plt>
   10170:	ldr	x0, [sp, #24]
   10174:	cmp	x0, #0x0
   10178:	b.eq	1018c <inflateGetDictionary@@ZLIB_1.2.7.1+0xf4>  // b.none
   1017c:	ldr	x0, [sp, #56]
   10180:	ldr	w1, [x0, #64]
   10184:	ldr	x0, [sp, #24]
   10188:	str	w1, [x0]
   1018c:	mov	w0, #0x0                   	// #0
   10190:	ldp	x29, x30, [sp], #64
   10194:	ret

0000000000010198 <inflateSetDictionary@@Base>:
   10198:	stp	x29, x30, [sp, #-80]!
   1019c:	mov	x29, sp
   101a0:	str	x0, [sp, #40]
   101a4:	str	x1, [sp, #32]
   101a8:	str	w2, [sp, #28]
   101ac:	ldr	x0, [sp, #40]
   101b0:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   101b4:	cmp	w0, #0x0
   101b8:	b.eq	101c4 <inflateSetDictionary@@Base+0x2c>  // b.none
   101bc:	mov	w0, #0xfffffffe            	// #-2
   101c0:	b	102a4 <inflateSetDictionary@@Base+0x10c>
   101c4:	ldr	x0, [sp, #40]
   101c8:	ldr	x0, [x0, #56]
   101cc:	str	x0, [sp, #72]
   101d0:	ldr	x0, [sp, #72]
   101d4:	ldr	w0, [x0, #16]
   101d8:	cmp	w0, #0x0
   101dc:	b.eq	101fc <inflateSetDictionary@@Base+0x64>  // b.none
   101e0:	ldr	x0, [sp, #72]
   101e4:	ldr	w1, [x0, #8]
   101e8:	mov	w0, #0x3f3e                	// #16190
   101ec:	cmp	w1, w0
   101f0:	b.eq	101fc <inflateSetDictionary@@Base+0x64>  // b.none
   101f4:	mov	w0, #0xfffffffe            	// #-2
   101f8:	b	102a4 <inflateSetDictionary@@Base+0x10c>
   101fc:	ldr	x0, [sp, #72]
   10200:	ldr	w1, [x0, #8]
   10204:	mov	w0, #0x3f3e                	// #16190
   10208:	cmp	w1, w0
   1020c:	b.ne	10254 <inflateSetDictionary@@Base+0xbc>  // b.any
   10210:	mov	w2, #0x0                   	// #0
   10214:	mov	x1, #0x0                   	// #0
   10218:	mov	x0, #0x0                   	// #0
   1021c:	bl	2560 <adler32@plt>
   10220:	str	x0, [sp, #64]
   10224:	ldr	w2, [sp, #28]
   10228:	ldr	x1, [sp, #32]
   1022c:	ldr	x0, [sp, #64]
   10230:	bl	2560 <adler32@plt>
   10234:	str	x0, [sp, #64]
   10238:	ldr	x0, [sp, #72]
   1023c:	ldr	x0, [x0, #32]
   10240:	ldr	x1, [sp, #64]
   10244:	cmp	x1, x0
   10248:	b.eq	10254 <inflateSetDictionary@@Base+0xbc>  // b.none
   1024c:	mov	w0, #0xfffffffd            	// #-3
   10250:	b	102a4 <inflateSetDictionary@@Base+0x10c>
   10254:	ldr	w0, [sp, #28]
   10258:	ldr	x1, [sp, #32]
   1025c:	add	x0, x1, x0
   10260:	ldr	w2, [sp, #28]
   10264:	mov	x1, x0
   10268:	ldr	x0, [sp, #40]
   1026c:	bl	d024 <inflatePrime@@ZLIB_1.2.2.4+0x140>
   10270:	str	w0, [sp, #60]
   10274:	ldr	w0, [sp, #60]
   10278:	cmp	w0, #0x0
   1027c:	b.eq	10294 <inflateSetDictionary@@Base+0xfc>  // b.none
   10280:	ldr	x0, [sp, #72]
   10284:	mov	w1, #0x3f52                	// #16210
   10288:	str	w1, [x0, #8]
   1028c:	mov	w0, #0xfffffffc            	// #-4
   10290:	b	102a4 <inflateSetDictionary@@Base+0x10c>
   10294:	ldr	x0, [sp, #72]
   10298:	mov	w1, #0x1                   	// #1
   1029c:	str	w1, [x0, #20]
   102a0:	mov	w0, #0x0                   	// #0
   102a4:	ldp	x29, x30, [sp], #80
   102a8:	ret

00000000000102ac <inflateGetHeader@@ZLIB_1.2.2>:
   102ac:	stp	x29, x30, [sp, #-48]!
   102b0:	mov	x29, sp
   102b4:	str	x0, [sp, #24]
   102b8:	str	x1, [sp, #16]
   102bc:	ldr	x0, [sp, #24]
   102c0:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   102c4:	cmp	w0, #0x0
   102c8:	b.eq	102d4 <inflateGetHeader@@ZLIB_1.2.2+0x28>  // b.none
   102cc:	mov	w0, #0xfffffffe            	// #-2
   102d0:	b	10314 <inflateGetHeader@@ZLIB_1.2.2+0x68>
   102d4:	ldr	x0, [sp, #24]
   102d8:	ldr	x0, [x0, #56]
   102dc:	str	x0, [sp, #40]
   102e0:	ldr	x0, [sp, #40]
   102e4:	ldr	w0, [x0, #16]
   102e8:	and	w0, w0, #0x2
   102ec:	cmp	w0, #0x0
   102f0:	b.ne	102fc <inflateGetHeader@@ZLIB_1.2.2+0x50>  // b.any
   102f4:	mov	w0, #0xfffffffe            	// #-2
   102f8:	b	10314 <inflateGetHeader@@ZLIB_1.2.2+0x68>
   102fc:	ldr	x0, [sp, #40]
   10300:	ldr	x1, [sp, #16]
   10304:	str	x1, [x0, #48]
   10308:	ldr	x0, [sp, #16]
   1030c:	str	wzr, [x0, #72]
   10310:	mov	w0, #0x0                   	// #0
   10314:	ldp	x29, x30, [sp], #48
   10318:	ret
   1031c:	sub	sp, sp, #0x30
   10320:	str	x0, [sp, #24]
   10324:	str	x1, [sp, #16]
   10328:	str	w2, [sp, #12]
   1032c:	ldr	x0, [sp, #24]
   10330:	ldr	w0, [x0]
   10334:	str	w0, [sp, #44]
   10338:	str	wzr, [sp, #40]
   1033c:	b	103c0 <inflateGetHeader@@ZLIB_1.2.2+0x114>
   10340:	ldr	w0, [sp, #40]
   10344:	ldr	x1, [sp, #16]
   10348:	add	x0, x1, x0
   1034c:	ldrb	w0, [x0]
   10350:	mov	w1, w0
   10354:	ldr	w0, [sp, #44]
   10358:	cmp	w0, #0x1
   1035c:	b.hi	10368 <inflateGetHeader@@ZLIB_1.2.2+0xbc>  // b.pmore
   10360:	mov	w0, #0x0                   	// #0
   10364:	b	1036c <inflateGetHeader@@ZLIB_1.2.2+0xc0>
   10368:	mov	w0, #0xff                  	// #255
   1036c:	cmp	w0, w1
   10370:	b.ne	10384 <inflateGetHeader@@ZLIB_1.2.2+0xd8>  // b.any
   10374:	ldr	w0, [sp, #44]
   10378:	add	w0, w0, #0x1
   1037c:	str	w0, [sp, #44]
   10380:	b	103b4 <inflateGetHeader@@ZLIB_1.2.2+0x108>
   10384:	ldr	w0, [sp, #40]
   10388:	ldr	x1, [sp, #16]
   1038c:	add	x0, x1, x0
   10390:	ldrb	w0, [x0]
   10394:	cmp	w0, #0x0
   10398:	b.eq	103a4 <inflateGetHeader@@ZLIB_1.2.2+0xf8>  // b.none
   1039c:	str	wzr, [sp, #44]
   103a0:	b	103b4 <inflateGetHeader@@ZLIB_1.2.2+0x108>
   103a4:	mov	w1, #0x4                   	// #4
   103a8:	ldr	w0, [sp, #44]
   103ac:	sub	w0, w1, w0
   103b0:	str	w0, [sp, #44]
   103b4:	ldr	w0, [sp, #40]
   103b8:	add	w0, w0, #0x1
   103bc:	str	w0, [sp, #40]
   103c0:	ldr	w1, [sp, #40]
   103c4:	ldr	w0, [sp, #12]
   103c8:	cmp	w1, w0
   103cc:	b.cs	103dc <inflateGetHeader@@ZLIB_1.2.2+0x130>  // b.hs, b.nlast
   103d0:	ldr	w0, [sp, #44]
   103d4:	cmp	w0, #0x3
   103d8:	b.ls	10340 <inflateGetHeader@@ZLIB_1.2.2+0x94>  // b.plast
   103dc:	ldr	x0, [sp, #24]
   103e0:	ldr	w1, [sp, #44]
   103e4:	str	w1, [x0]
   103e8:	ldr	w0, [sp, #40]
   103ec:	add	sp, sp, #0x30
   103f0:	ret

00000000000103f4 <inflateSync@@Base>:
   103f4:	stp	x29, x30, [sp, #-80]!
   103f8:	mov	x29, sp
   103fc:	str	x0, [sp, #24]
   10400:	ldr	x0, [sp, #24]
   10404:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   10408:	cmp	w0, #0x0
   1040c:	b.eq	10418 <inflateSync@@Base+0x24>  // b.none
   10410:	mov	w0, #0xfffffffe            	// #-2
   10414:	b	105f0 <inflateSync@@Base+0x1fc>
   10418:	ldr	x0, [sp, #24]
   1041c:	ldr	x0, [x0, #56]
   10420:	str	x0, [sp, #64]
   10424:	ldr	x0, [sp, #24]
   10428:	ldr	w0, [x0, #8]
   1042c:	cmp	w0, #0x0
   10430:	b.ne	1044c <inflateSync@@Base+0x58>  // b.any
   10434:	ldr	x0, [sp, #64]
   10438:	ldr	w0, [x0, #88]
   1043c:	cmp	w0, #0x7
   10440:	b.hi	1044c <inflateSync@@Base+0x58>  // b.pmore
   10444:	mov	w0, #0xfffffffb            	// #-5
   10448:	b	105f0 <inflateSync@@Base+0x1fc>
   1044c:	ldr	x0, [sp, #64]
   10450:	ldr	w1, [x0, #8]
   10454:	mov	w0, #0x3f53                	// #16211
   10458:	cmp	w1, w0
   1045c:	b.eq	10520 <inflateSync@@Base+0x12c>  // b.none
   10460:	ldr	x0, [sp, #64]
   10464:	mov	w1, #0x3f53                	// #16211
   10468:	str	w1, [x0, #8]
   1046c:	ldr	x0, [sp, #64]
   10470:	ldr	x1, [x0, #80]
   10474:	ldr	x0, [sp, #64]
   10478:	ldr	w0, [x0, #88]
   1047c:	and	w0, w0, #0x7
   10480:	lsl	x1, x1, x0
   10484:	ldr	x0, [sp, #64]
   10488:	str	x1, [x0, #80]
   1048c:	ldr	x0, [sp, #64]
   10490:	ldr	w0, [x0, #88]
   10494:	and	w1, w0, #0xfffffff8
   10498:	ldr	x0, [sp, #64]
   1049c:	str	w1, [x0, #88]
   104a0:	str	wzr, [sp, #76]
   104a4:	b	104f4 <inflateSync@@Base+0x100>
   104a8:	ldr	x0, [sp, #64]
   104ac:	ldr	x2, [x0, #80]
   104b0:	ldr	w0, [sp, #76]
   104b4:	add	w1, w0, #0x1
   104b8:	str	w1, [sp, #76]
   104bc:	and	w2, w2, #0xff
   104c0:	mov	w0, w0
   104c4:	add	x1, sp, #0x28
   104c8:	strb	w2, [x1, x0]
   104cc:	ldr	x0, [sp, #64]
   104d0:	ldr	x0, [x0, #80]
   104d4:	lsr	x1, x0, #8
   104d8:	ldr	x0, [sp, #64]
   104dc:	str	x1, [x0, #80]
   104e0:	ldr	x0, [sp, #64]
   104e4:	ldr	w0, [x0, #88]
   104e8:	sub	w1, w0, #0x8
   104ec:	ldr	x0, [sp, #64]
   104f0:	str	w1, [x0, #88]
   104f4:	ldr	x0, [sp, #64]
   104f8:	ldr	w0, [x0, #88]
   104fc:	cmp	w0, #0x7
   10500:	b.hi	104a8 <inflateSync@@Base+0xb4>  // b.pmore
   10504:	ldr	x0, [sp, #64]
   10508:	str	wzr, [x0, #140]
   1050c:	ldr	x0, [sp, #64]
   10510:	add	x0, x0, #0x8c
   10514:	add	x1, sp, #0x28
   10518:	ldr	w2, [sp, #76]
   1051c:	bl	1031c <inflateGetHeader@@ZLIB_1.2.2+0x70>
   10520:	ldr	x0, [sp, #64]
   10524:	add	x3, x0, #0x8c
   10528:	ldr	x0, [sp, #24]
   1052c:	ldr	x1, [x0]
   10530:	ldr	x0, [sp, #24]
   10534:	ldr	w0, [x0, #8]
   10538:	mov	w2, w0
   1053c:	mov	x0, x3
   10540:	bl	1031c <inflateGetHeader@@ZLIB_1.2.2+0x70>
   10544:	str	w0, [sp, #76]
   10548:	ldr	x0, [sp, #24]
   1054c:	ldr	w1, [x0, #8]
   10550:	ldr	w0, [sp, #76]
   10554:	sub	w1, w1, w0
   10558:	ldr	x0, [sp, #24]
   1055c:	str	w1, [x0, #8]
   10560:	ldr	x0, [sp, #24]
   10564:	ldr	x1, [x0]
   10568:	ldr	w0, [sp, #76]
   1056c:	add	x1, x1, x0
   10570:	ldr	x0, [sp, #24]
   10574:	str	x1, [x0]
   10578:	ldr	x0, [sp, #24]
   1057c:	ldr	x1, [x0, #16]
   10580:	ldr	w0, [sp, #76]
   10584:	add	x1, x1, x0
   10588:	ldr	x0, [sp, #24]
   1058c:	str	x1, [x0, #16]
   10590:	ldr	x0, [sp, #64]
   10594:	ldr	w0, [x0, #140]
   10598:	cmp	w0, #0x4
   1059c:	b.eq	105a8 <inflateSync@@Base+0x1b4>  // b.none
   105a0:	mov	w0, #0xfffffffd            	// #-3
   105a4:	b	105f0 <inflateSync@@Base+0x1fc>
   105a8:	ldr	x0, [sp, #24]
   105ac:	ldr	x0, [x0, #16]
   105b0:	str	x0, [sp, #56]
   105b4:	ldr	x0, [sp, #24]
   105b8:	ldr	x0, [x0, #40]
   105bc:	str	x0, [sp, #48]
   105c0:	ldr	x0, [sp, #24]
   105c4:	bl	2610 <inflateReset@plt>
   105c8:	ldr	x0, [sp, #24]
   105cc:	ldr	x1, [sp, #56]
   105d0:	str	x1, [x0, #16]
   105d4:	ldr	x0, [sp, #24]
   105d8:	ldr	x1, [sp, #48]
   105dc:	str	x1, [x0, #40]
   105e0:	ldr	x0, [sp, #64]
   105e4:	mov	w1, #0x3f3f                	// #16191
   105e8:	str	w1, [x0, #8]
   105ec:	mov	w0, #0x0                   	// #0
   105f0:	ldp	x29, x30, [sp], #80
   105f4:	ret

00000000000105f8 <inflateSyncPoint@@Base>:
   105f8:	stp	x29, x30, [sp, #-48]!
   105fc:	mov	x29, sp
   10600:	str	x0, [sp, #24]
   10604:	ldr	x0, [sp, #24]
   10608:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   1060c:	cmp	w0, #0x0
   10610:	b.eq	1061c <inflateSyncPoint@@Base+0x24>  // b.none
   10614:	mov	w0, #0xfffffffe            	// #-2
   10618:	b	10658 <inflateSyncPoint@@Base+0x60>
   1061c:	ldr	x0, [sp, #24]
   10620:	ldr	x0, [x0, #56]
   10624:	str	x0, [sp, #40]
   10628:	ldr	x0, [sp, #40]
   1062c:	ldr	w1, [x0, #8]
   10630:	mov	w0, #0x3f41                	// #16193
   10634:	cmp	w1, w0
   10638:	b.ne	10654 <inflateSyncPoint@@Base+0x5c>  // b.any
   1063c:	ldr	x0, [sp, #40]
   10640:	ldr	w0, [x0, #88]
   10644:	cmp	w0, #0x0
   10648:	b.ne	10654 <inflateSyncPoint@@Base+0x5c>  // b.any
   1064c:	mov	w0, #0x1                   	// #1
   10650:	b	10658 <inflateSyncPoint@@Base+0x60>
   10654:	mov	w0, #0x0                   	// #0
   10658:	ldp	x29, x30, [sp], #48
   1065c:	ret

0000000000010660 <inflateCopy@@ZLIB_1.2.0>:
   10660:	stp	x29, x30, [sp, #-64]!
   10664:	mov	x29, sp
   10668:	str	x0, [sp, #24]
   1066c:	str	x1, [sp, #16]
   10670:	ldr	x0, [sp, #16]
   10674:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   10678:	cmp	w0, #0x0
   1067c:	b.ne	1068c <inflateCopy@@ZLIB_1.2.0+0x2c>  // b.any
   10680:	ldr	x0, [sp, #24]
   10684:	cmp	x0, #0x0
   10688:	b.ne	10694 <inflateCopy@@ZLIB_1.2.0+0x34>  // b.any
   1068c:	mov	w0, #0xfffffffe            	// #-2
   10690:	b	1087c <inflateCopy@@ZLIB_1.2.0+0x21c>
   10694:	ldr	x0, [sp, #16]
   10698:	ldr	x0, [x0, #56]
   1069c:	str	x0, [sp, #48]
   106a0:	ldr	x0, [sp, #16]
   106a4:	ldr	x3, [x0, #64]
   106a8:	ldr	x0, [sp, #16]
   106ac:	ldr	x0, [x0, #80]
   106b0:	mov	w2, #0x1bf8                	// #7160
   106b4:	mov	w1, #0x1                   	// #1
   106b8:	blr	x3
   106bc:	str	x0, [sp, #40]
   106c0:	ldr	x0, [sp, #40]
   106c4:	cmp	x0, #0x0
   106c8:	b.ne	106d4 <inflateCopy@@ZLIB_1.2.0+0x74>  // b.any
   106cc:	mov	w0, #0xfffffffc            	// #-4
   106d0:	b	1087c <inflateCopy@@ZLIB_1.2.0+0x21c>
   106d4:	str	xzr, [sp, #56]
   106d8:	ldr	x0, [sp, #48]
   106dc:	ldr	x0, [x0, #72]
   106e0:	cmp	x0, #0x0
   106e4:	b.eq	10748 <inflateCopy@@ZLIB_1.2.0+0xe8>  // b.none
   106e8:	ldr	x0, [sp, #16]
   106ec:	ldr	x3, [x0, #64]
   106f0:	ldr	x0, [sp, #16]
   106f4:	ldr	x4, [x0, #80]
   106f8:	ldr	x0, [sp, #48]
   106fc:	ldr	w0, [x0, #56]
   10700:	mov	w1, #0x1                   	// #1
   10704:	lsl	w0, w1, w0
   10708:	mov	w2, #0x1                   	// #1
   1070c:	mov	w1, w0
   10710:	mov	x0, x4
   10714:	blr	x3
   10718:	str	x0, [sp, #56]
   1071c:	ldr	x0, [sp, #56]
   10720:	cmp	x0, #0x0
   10724:	b.ne	10748 <inflateCopy@@ZLIB_1.2.0+0xe8>  // b.any
   10728:	ldr	x0, [sp, #16]
   1072c:	ldr	x2, [x0, #72]
   10730:	ldr	x0, [sp, #16]
   10734:	ldr	x0, [x0, #80]
   10738:	ldr	x1, [sp, #40]
   1073c:	blr	x2
   10740:	mov	w0, #0xfffffffc            	// #-4
   10744:	b	1087c <inflateCopy@@ZLIB_1.2.0+0x21c>
   10748:	mov	x2, #0x70                  	// #112
   1074c:	ldr	x1, [sp, #16]
   10750:	ldr	x0, [sp, #24]
   10754:	bl	23a0 <memcpy@plt>
   10758:	mov	x2, #0x1bf8                	// #7160
   1075c:	ldr	x1, [sp, #48]
   10760:	ldr	x0, [sp, #40]
   10764:	bl	23a0 <memcpy@plt>
   10768:	ldr	x0, [sp, #40]
   1076c:	ldr	x1, [sp, #24]
   10770:	str	x1, [x0]
   10774:	ldr	x0, [sp, #48]
   10778:	ldr	x1, [x0, #104]
   1077c:	ldr	x0, [sp, #48]
   10780:	add	x0, x0, #0x558
   10784:	cmp	x1, x0
   10788:	b.cc	107fc <inflateCopy@@ZLIB_1.2.0+0x19c>  // b.lo, b.ul, b.last
   1078c:	ldr	x0, [sp, #48]
   10790:	ldr	x1, [x0, #104]
   10794:	ldr	x0, [sp, #48]
   10798:	add	x2, x0, #0x558
   1079c:	mov	x0, #0x168c                	// #5772
   107a0:	add	x0, x2, x0
   107a4:	cmp	x1, x0
   107a8:	b.hi	107fc <inflateCopy@@ZLIB_1.2.0+0x19c>  // b.pmore
   107ac:	ldr	x0, [sp, #40]
   107b0:	add	x0, x0, #0x558
   107b4:	ldr	x1, [sp, #48]
   107b8:	ldr	x2, [x1, #104]
   107bc:	ldr	x1, [sp, #48]
   107c0:	add	x1, x1, #0x558
   107c4:	sub	x1, x2, x1
   107c8:	add	x1, x0, x1
   107cc:	ldr	x0, [sp, #40]
   107d0:	str	x1, [x0, #104]
   107d4:	ldr	x0, [sp, #40]
   107d8:	add	x0, x0, #0x558
   107dc:	ldr	x1, [sp, #48]
   107e0:	ldr	x2, [x1, #112]
   107e4:	ldr	x1, [sp, #48]
   107e8:	add	x1, x1, #0x558
   107ec:	sub	x1, x2, x1
   107f0:	add	x1, x0, x1
   107f4:	ldr	x0, [sp, #40]
   107f8:	str	x1, [x0, #112]
   107fc:	ldr	x0, [sp, #40]
   10800:	add	x0, x0, #0x558
   10804:	ldr	x1, [sp, #48]
   10808:	ldr	x2, [x1, #144]
   1080c:	ldr	x1, [sp, #48]
   10810:	add	x1, x1, #0x558
   10814:	sub	x1, x2, x1
   10818:	add	x1, x0, x1
   1081c:	ldr	x0, [sp, #40]
   10820:	str	x1, [x0, #144]
   10824:	ldr	x0, [sp, #56]
   10828:	cmp	x0, #0x0
   1082c:	b.eq	10860 <inflateCopy@@ZLIB_1.2.0+0x200>  // b.none
   10830:	ldr	x0, [sp, #48]
   10834:	ldr	w0, [x0, #56]
   10838:	mov	w1, #0x1                   	// #1
   1083c:	lsl	w0, w1, w0
   10840:	str	w0, [sp, #36]
   10844:	ldr	x0, [sp, #48]
   10848:	ldr	x0, [x0, #72]
   1084c:	ldr	w1, [sp, #36]
   10850:	mov	x2, x1
   10854:	mov	x1, x0
   10858:	ldr	x0, [sp, #56]
   1085c:	bl	23a0 <memcpy@plt>
   10860:	ldr	x0, [sp, #40]
   10864:	ldr	x1, [sp, #56]
   10868:	str	x1, [x0, #72]
   1086c:	ldr	x0, [sp, #24]
   10870:	ldr	x1, [sp, #40]
   10874:	str	x1, [x0, #56]
   10878:	mov	w0, #0x0                   	// #0
   1087c:	ldp	x29, x30, [sp], #64
   10880:	ret

0000000000010884 <inflateUndermine@@ZLIB_1.2.3.3>:
   10884:	stp	x29, x30, [sp, #-48]!
   10888:	mov	x29, sp
   1088c:	str	x0, [sp, #24]
   10890:	str	w1, [sp, #20]
   10894:	ldr	x0, [sp, #24]
   10898:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   1089c:	cmp	w0, #0x0
   108a0:	b.eq	108ac <inflateUndermine@@ZLIB_1.2.3.3+0x28>  // b.none
   108a4:	mov	w0, #0xfffffffe            	// #-2
   108a8:	b	108c8 <inflateUndermine@@ZLIB_1.2.3.3+0x44>
   108ac:	ldr	x0, [sp, #24]
   108b0:	ldr	x0, [x0, #56]
   108b4:	str	x0, [sp, #40]
   108b8:	ldr	x0, [sp, #40]
   108bc:	mov	w1, #0x1                   	// #1
   108c0:	str	w1, [x0, #7144]
   108c4:	mov	w0, #0xfffffffd            	// #-3
   108c8:	ldp	x29, x30, [sp], #48
   108cc:	ret

00000000000108d0 <inflateValidate@@ZLIB_1.2.9>:
   108d0:	stp	x29, x30, [sp, #-48]!
   108d4:	mov	x29, sp
   108d8:	str	x0, [sp, #24]
   108dc:	str	w1, [sp, #20]
   108e0:	ldr	x0, [sp, #24]
   108e4:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   108e8:	cmp	w0, #0x0
   108ec:	b.eq	108f8 <inflateValidate@@ZLIB_1.2.9+0x28>  // b.none
   108f0:	mov	w0, #0xfffffffe            	// #-2
   108f4:	b	10940 <inflateValidate@@ZLIB_1.2.9+0x70>
   108f8:	ldr	x0, [sp, #24]
   108fc:	ldr	x0, [x0, #56]
   10900:	str	x0, [sp, #40]
   10904:	ldr	w0, [sp, #20]
   10908:	cmp	w0, #0x0
   1090c:	b.eq	10928 <inflateValidate@@ZLIB_1.2.9+0x58>  // b.none
   10910:	ldr	x0, [sp, #40]
   10914:	ldr	w0, [x0, #16]
   10918:	orr	w1, w0, #0x4
   1091c:	ldr	x0, [sp, #40]
   10920:	str	w1, [x0, #16]
   10924:	b	1093c <inflateValidate@@ZLIB_1.2.9+0x6c>
   10928:	ldr	x0, [sp, #40]
   1092c:	ldr	w0, [x0, #16]
   10930:	and	w1, w0, #0xfffffffb
   10934:	ldr	x0, [sp, #40]
   10938:	str	w1, [x0, #16]
   1093c:	mov	w0, #0x0                   	// #0
   10940:	ldp	x29, x30, [sp], #48
   10944:	ret

0000000000010948 <inflateMark@@ZLIB_1.2.3.4>:
   10948:	stp	x29, x30, [sp, #-48]!
   1094c:	mov	x29, sp
   10950:	str	x0, [sp, #24]
   10954:	ldr	x0, [sp, #24]
   10958:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   1095c:	cmp	w0, #0x0
   10960:	b.eq	1096c <inflateMark@@ZLIB_1.2.3.4+0x24>  // b.none
   10964:	mov	x0, #0xffffffffffff0000    	// #-65536
   10968:	b	109e8 <inflateMark@@ZLIB_1.2.3.4+0xa0>
   1096c:	ldr	x0, [sp, #24]
   10970:	ldr	x0, [x0, #56]
   10974:	str	x0, [sp, #40]
   10978:	ldr	x0, [sp, #40]
   1097c:	ldr	w0, [x0, #7148]
   10980:	sxtw	x0, w0
   10984:	lsl	x0, x0, #16
   10988:	mov	x2, x0
   1098c:	ldr	x0, [sp, #40]
   10990:	ldr	w1, [x0, #8]
   10994:	mov	w0, #0x3f43                	// #16195
   10998:	cmp	w1, w0
   1099c:	b.ne	109b0 <inflateMark@@ZLIB_1.2.3.4+0x68>  // b.any
   109a0:	ldr	x0, [sp, #40]
   109a4:	ldr	w0, [x0, #92]
   109a8:	mov	w0, w0
   109ac:	b	109e4 <inflateMark@@ZLIB_1.2.3.4+0x9c>
   109b0:	ldr	x0, [sp, #40]
   109b4:	ldr	w1, [x0, #8]
   109b8:	mov	w0, #0x3f4c                	// #16204
   109bc:	cmp	w1, w0
   109c0:	b.ne	109e0 <inflateMark@@ZLIB_1.2.3.4+0x98>  // b.any
   109c4:	ldr	x0, [sp, #40]
   109c8:	ldr	w1, [x0, #7152]
   109cc:	ldr	x0, [sp, #40]
   109d0:	ldr	w0, [x0, #92]
   109d4:	sub	w0, w1, w0
   109d8:	mov	w0, w0
   109dc:	b	109e4 <inflateMark@@ZLIB_1.2.3.4+0x9c>
   109e0:	mov	x0, #0x0                   	// #0
   109e4:	add	x0, x0, x2
   109e8:	ldp	x29, x30, [sp], #48
   109ec:	ret

00000000000109f0 <inflateCodesUsed@@ZLIB_1.2.9>:
   109f0:	stp	x29, x30, [sp, #-48]!
   109f4:	mov	x29, sp
   109f8:	str	x0, [sp, #24]
   109fc:	ldr	x0, [sp, #24]
   10a00:	bl	ca24 <inflateBackEnd@@ZLIB_1.2.0+0xba0>
   10a04:	cmp	w0, #0x0
   10a08:	b.eq	10a14 <inflateCodesUsed@@ZLIB_1.2.9+0x24>  // b.none
   10a0c:	mov	x0, #0xffffffffffffffff    	// #-1
   10a10:	b	10a38 <inflateCodesUsed@@ZLIB_1.2.9+0x48>
   10a14:	ldr	x0, [sp, #24]
   10a18:	ldr	x0, [x0, #56]
   10a1c:	str	x0, [sp, #40]
   10a20:	ldr	x0, [sp, #40]
   10a24:	ldr	x1, [x0, #144]
   10a28:	ldr	x0, [sp, #40]
   10a2c:	add	x0, x0, #0x558
   10a30:	sub	x0, x1, x0
   10a34:	asr	x0, x0, #2
   10a38:	ldp	x29, x30, [sp], #48
   10a3c:	ret
   10a40:	sub	sp, sp, #0xd0
   10a44:	str	w0, [sp, #44]
   10a48:	str	x1, [sp, #32]
   10a4c:	str	w2, [sp, #40]
   10a50:	str	x3, [sp, #24]
   10a54:	str	x4, [sp, #16]
   10a58:	str	x5, [sp, #8]
   10a5c:	str	wzr, [sp, #204]
   10a60:	b	10a80 <inflateCodesUsed@@ZLIB_1.2.9+0x90>
   10a64:	ldr	w0, [sp, #204]
   10a68:	lsl	x0, x0, #1
   10a6c:	add	x1, sp, #0x50
   10a70:	strh	wzr, [x1, x0]
   10a74:	ldr	w0, [sp, #204]
   10a78:	add	w0, w0, #0x1
   10a7c:	str	w0, [sp, #204]
   10a80:	ldr	w0, [sp, #204]
   10a84:	cmp	w0, #0xf
   10a88:	b.ls	10a64 <inflateCodesUsed@@ZLIB_1.2.9+0x74>  // b.plast
   10a8c:	str	wzr, [sp, #200]
   10a90:	b	10ae0 <inflateCodesUsed@@ZLIB_1.2.9+0xf0>
   10a94:	ldr	w0, [sp, #200]
   10a98:	lsl	x0, x0, #1
   10a9c:	ldr	x1, [sp, #32]
   10aa0:	add	x0, x1, x0
   10aa4:	ldrh	w0, [x0]
   10aa8:	mov	w3, w0
   10aac:	sxtw	x0, w3
   10ab0:	lsl	x0, x0, #1
   10ab4:	add	x1, sp, #0x50
   10ab8:	ldrh	w0, [x1, x0]
   10abc:	add	w0, w0, #0x1
   10ac0:	and	w2, w0, #0xffff
   10ac4:	sxtw	x0, w3
   10ac8:	lsl	x0, x0, #1
   10acc:	add	x1, sp, #0x50
   10ad0:	strh	w2, [x1, x0]
   10ad4:	ldr	w0, [sp, #200]
   10ad8:	add	w0, w0, #0x1
   10adc:	str	w0, [sp, #200]
   10ae0:	ldr	w1, [sp, #200]
   10ae4:	ldr	w0, [sp, #40]
   10ae8:	cmp	w1, w0
   10aec:	b.cc	10a94 <inflateCodesUsed@@ZLIB_1.2.9+0xa4>  // b.lo, b.ul, b.last
   10af0:	ldr	x0, [sp, #16]
   10af4:	ldr	w0, [x0]
   10af8:	str	w0, [sp, #188]
   10afc:	mov	w0, #0xf                   	// #15
   10b00:	str	w0, [sp, #192]
   10b04:	b	10b2c <inflateCodesUsed@@ZLIB_1.2.9+0x13c>
   10b08:	ldr	w0, [sp, #192]
   10b0c:	lsl	x0, x0, #1
   10b10:	add	x1, sp, #0x50
   10b14:	ldrh	w0, [x1, x0]
   10b18:	cmp	w0, #0x0
   10b1c:	b.ne	10b3c <inflateCodesUsed@@ZLIB_1.2.9+0x14c>  // b.any
   10b20:	ldr	w0, [sp, #192]
   10b24:	sub	w0, w0, #0x1
   10b28:	str	w0, [sp, #192]
   10b2c:	ldr	w0, [sp, #192]
   10b30:	cmp	w0, #0x0
   10b34:	b.ne	10b08 <inflateCodesUsed@@ZLIB_1.2.9+0x118>  // b.any
   10b38:	b	10b40 <inflateCodesUsed@@ZLIB_1.2.9+0x150>
   10b3c:	nop
   10b40:	ldr	w1, [sp, #188]
   10b44:	ldr	w0, [sp, #192]
   10b48:	cmp	w1, w0
   10b4c:	b.ls	10b58 <inflateCodesUsed@@ZLIB_1.2.9+0x168>  // b.plast
   10b50:	ldr	w0, [sp, #192]
   10b54:	str	w0, [sp, #188]
   10b58:	ldr	w0, [sp, #192]
   10b5c:	cmp	w0, #0x0
   10b60:	b.ne	10bc4 <inflateCodesUsed@@ZLIB_1.2.9+0x1d4>  // b.any
   10b64:	mov	w0, #0x40                  	// #64
   10b68:	strb	w0, [sp, #112]
   10b6c:	mov	w0, #0x1                   	// #1
   10b70:	strb	w0, [sp, #113]
   10b74:	strh	wzr, [sp, #114]
   10b78:	ldr	x0, [sp, #24]
   10b7c:	ldr	x0, [x0]
   10b80:	add	x2, x0, #0x4
   10b84:	ldr	x1, [sp, #24]
   10b88:	str	x2, [x1]
   10b8c:	ldr	w1, [sp, #112]
   10b90:	str	w1, [x0]
   10b94:	ldr	x0, [sp, #24]
   10b98:	ldr	x0, [x0]
   10b9c:	add	x2, x0, #0x4
   10ba0:	ldr	x1, [sp, #24]
   10ba4:	str	x2, [x1]
   10ba8:	ldr	w1, [sp, #112]
   10bac:	str	w1, [x0]
   10bb0:	ldr	x0, [sp, #16]
   10bb4:	mov	w1, #0x1                   	// #1
   10bb8:	str	w1, [x0]
   10bbc:	mov	w0, #0x0                   	// #0
   10bc0:	b	1136c <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10bc4:	mov	w0, #0x1                   	// #1
   10bc8:	str	w0, [sp, #196]
   10bcc:	b	10bf4 <inflateCodesUsed@@ZLIB_1.2.9+0x204>
   10bd0:	ldr	w0, [sp, #196]
   10bd4:	lsl	x0, x0, #1
   10bd8:	add	x1, sp, #0x50
   10bdc:	ldrh	w0, [x1, x0]
   10be0:	cmp	w0, #0x0
   10be4:	b.ne	10c08 <inflateCodesUsed@@ZLIB_1.2.9+0x218>  // b.any
   10be8:	ldr	w0, [sp, #196]
   10bec:	add	w0, w0, #0x1
   10bf0:	str	w0, [sp, #196]
   10bf4:	ldr	w1, [sp, #196]
   10bf8:	ldr	w0, [sp, #192]
   10bfc:	cmp	w1, w0
   10c00:	b.cc	10bd0 <inflateCodesUsed@@ZLIB_1.2.9+0x1e0>  // b.lo, b.ul, b.last
   10c04:	b	10c0c <inflateCodesUsed@@ZLIB_1.2.9+0x21c>
   10c08:	nop
   10c0c:	ldr	w1, [sp, #188]
   10c10:	ldr	w0, [sp, #196]
   10c14:	cmp	w1, w0
   10c18:	b.cs	10c24 <inflateCodesUsed@@ZLIB_1.2.9+0x234>  // b.hs, b.nlast
   10c1c:	ldr	w0, [sp, #196]
   10c20:	str	w0, [sp, #188]
   10c24:	mov	w0, #0x1                   	// #1
   10c28:	str	w0, [sp, #176]
   10c2c:	mov	w0, #0x1                   	// #1
   10c30:	str	w0, [sp, #204]
   10c34:	b	10c84 <inflateCodesUsed@@ZLIB_1.2.9+0x294>
   10c38:	ldr	w0, [sp, #176]
   10c3c:	lsl	w0, w0, #1
   10c40:	str	w0, [sp, #176]
   10c44:	ldr	w0, [sp, #204]
   10c48:	lsl	x0, x0, #1
   10c4c:	add	x1, sp, #0x50
   10c50:	ldrh	w0, [x1, x0]
   10c54:	mov	w1, w0
   10c58:	ldr	w0, [sp, #176]
   10c5c:	sub	w0, w0, w1
   10c60:	str	w0, [sp, #176]
   10c64:	ldr	w0, [sp, #176]
   10c68:	cmp	w0, #0x0
   10c6c:	b.ge	10c78 <inflateCodesUsed@@ZLIB_1.2.9+0x288>  // b.tcont
   10c70:	mov	w0, #0xffffffff            	// #-1
   10c74:	b	1136c <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10c78:	ldr	w0, [sp, #204]
   10c7c:	add	w0, w0, #0x1
   10c80:	str	w0, [sp, #204]
   10c84:	ldr	w0, [sp, #204]
   10c88:	cmp	w0, #0xf
   10c8c:	b.ls	10c38 <inflateCodesUsed@@ZLIB_1.2.9+0x248>  // b.plast
   10c90:	ldr	w0, [sp, #176]
   10c94:	cmp	w0, #0x0
   10c98:	b.le	10cbc <inflateCodesUsed@@ZLIB_1.2.9+0x2cc>
   10c9c:	ldr	w0, [sp, #44]
   10ca0:	cmp	w0, #0x0
   10ca4:	b.eq	10cb4 <inflateCodesUsed@@ZLIB_1.2.9+0x2c4>  // b.none
   10ca8:	ldr	w0, [sp, #192]
   10cac:	cmp	w0, #0x1
   10cb0:	b.eq	10cbc <inflateCodesUsed@@ZLIB_1.2.9+0x2cc>  // b.none
   10cb4:	mov	w0, #0xffffffff            	// #-1
   10cb8:	b	1136c <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10cbc:	strh	wzr, [sp, #50]
   10cc0:	mov	w0, #0x1                   	// #1
   10cc4:	str	w0, [sp, #204]
   10cc8:	b	10d18 <inflateCodesUsed@@ZLIB_1.2.9+0x328>
   10ccc:	ldr	w0, [sp, #204]
   10cd0:	lsl	x0, x0, #1
   10cd4:	add	x1, sp, #0x30
   10cd8:	ldrh	w1, [x1, x0]
   10cdc:	ldr	w0, [sp, #204]
   10ce0:	lsl	x0, x0, #1
   10ce4:	add	x2, sp, #0x50
   10ce8:	ldrh	w0, [x2, x0]
   10cec:	ldr	w2, [sp, #204]
   10cf0:	add	w3, w2, #0x1
   10cf4:	add	w0, w1, w0
   10cf8:	and	w2, w0, #0xffff
   10cfc:	mov	w0, w3
   10d00:	lsl	x0, x0, #1
   10d04:	add	x1, sp, #0x30
   10d08:	strh	w2, [x1, x0]
   10d0c:	ldr	w0, [sp, #204]
   10d10:	add	w0, w0, #0x1
   10d14:	str	w0, [sp, #204]
   10d18:	ldr	w0, [sp, #204]
   10d1c:	cmp	w0, #0xe
   10d20:	b.ls	10ccc <inflateCodesUsed@@ZLIB_1.2.9+0x2dc>  // b.plast
   10d24:	str	wzr, [sp, #200]
   10d28:	b	10db0 <inflateCodesUsed@@ZLIB_1.2.9+0x3c0>
   10d2c:	ldr	w0, [sp, #200]
   10d30:	lsl	x0, x0, #1
   10d34:	ldr	x1, [sp, #32]
   10d38:	add	x0, x1, x0
   10d3c:	ldrh	w0, [x0]
   10d40:	cmp	w0, #0x0
   10d44:	b.eq	10da4 <inflateCodesUsed@@ZLIB_1.2.9+0x3b4>  // b.none
   10d48:	ldr	w0, [sp, #200]
   10d4c:	lsl	x0, x0, #1
   10d50:	ldr	x1, [sp, #32]
   10d54:	add	x0, x1, x0
   10d58:	ldrh	w0, [x0]
   10d5c:	mov	w2, w0
   10d60:	sxtw	x0, w2
   10d64:	lsl	x0, x0, #1
   10d68:	add	x1, sp, #0x30
   10d6c:	ldrh	w0, [x1, x0]
   10d70:	add	w1, w0, #0x1
   10d74:	and	w3, w1, #0xffff
   10d78:	sxtw	x1, w2
   10d7c:	lsl	x1, x1, #1
   10d80:	add	x2, sp, #0x30
   10d84:	strh	w3, [x2, x1]
   10d88:	and	x0, x0, #0xffff
   10d8c:	lsl	x0, x0, #1
   10d90:	ldr	x1, [sp, #8]
   10d94:	add	x0, x1, x0
   10d98:	ldr	w1, [sp, #200]
   10d9c:	and	w1, w1, #0xffff
   10da0:	strh	w1, [x0]
   10da4:	ldr	w0, [sp, #200]
   10da8:	add	w0, w0, #0x1
   10dac:	str	w0, [sp, #200]
   10db0:	ldr	w1, [sp, #200]
   10db4:	ldr	w0, [sp, #40]
   10db8:	cmp	w1, w0
   10dbc:	b.cc	10d2c <inflateCodesUsed@@ZLIB_1.2.9+0x33c>  // b.lo, b.ul, b.last
   10dc0:	ldr	w0, [sp, #44]
   10dc4:	cmp	w0, #0x0
   10dc8:	b.eq	10ddc <inflateCodesUsed@@ZLIB_1.2.9+0x3ec>  // b.none
   10dcc:	ldr	w0, [sp, #44]
   10dd0:	cmp	w0, #0x1
   10dd4:	b.eq	10df8 <inflateCodesUsed@@ZLIB_1.2.9+0x408>  // b.none
   10dd8:	b	10e1c <inflateCodesUsed@@ZLIB_1.2.9+0x42c>
   10ddc:	ldr	x0, [sp, #8]
   10de0:	str	x0, [sp, #128]
   10de4:	ldr	x0, [sp, #128]
   10de8:	str	x0, [sp, #136]
   10dec:	mov	w0, #0x14                  	// #20
   10df0:	str	w0, [sp, #124]
   10df4:	b	10e38 <inflateCodesUsed@@ZLIB_1.2.9+0x448>
   10df8:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   10dfc:	add	x0, x0, #0x5c8
   10e00:	str	x0, [sp, #136]
   10e04:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   10e08:	add	x0, x0, #0x608
   10e0c:	str	x0, [sp, #128]
   10e10:	mov	w0, #0x101                 	// #257
   10e14:	str	w0, [sp, #124]
   10e18:	b	10e38 <inflateCodesUsed@@ZLIB_1.2.9+0x448>
   10e1c:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   10e20:	add	x0, x0, #0x648
   10e24:	str	x0, [sp, #136]
   10e28:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   10e2c:	add	x0, x0, #0x688
   10e30:	str	x0, [sp, #128]
   10e34:	str	wzr, [sp, #124]
   10e38:	str	wzr, [sp, #168]
   10e3c:	str	wzr, [sp, #200]
   10e40:	ldr	w0, [sp, #196]
   10e44:	str	w0, [sp, #204]
   10e48:	ldr	x0, [sp, #24]
   10e4c:	ldr	x0, [x0]
   10e50:	str	x0, [sp, #144]
   10e54:	ldr	w0, [sp, #188]
   10e58:	str	w0, [sp, #184]
   10e5c:	str	wzr, [sp, #180]
   10e60:	mov	w0, #0xffffffff            	// #-1
   10e64:	str	w0, [sp, #156]
   10e68:	ldr	w0, [sp, #188]
   10e6c:	mov	w1, #0x1                   	// #1
   10e70:	lsl	w0, w1, w0
   10e74:	str	w0, [sp, #172]
   10e78:	ldr	w0, [sp, #172]
   10e7c:	sub	w0, w0, #0x1
   10e80:	str	w0, [sp, #120]
   10e84:	ldr	w0, [sp, #44]
   10e88:	cmp	w0, #0x1
   10e8c:	b.ne	10e9c <inflateCodesUsed@@ZLIB_1.2.9+0x4ac>  // b.any
   10e90:	ldr	w0, [sp, #172]
   10e94:	cmp	w0, #0x354
   10e98:	b.hi	10eb4 <inflateCodesUsed@@ZLIB_1.2.9+0x4c4>  // b.pmore
   10e9c:	ldr	w0, [sp, #44]
   10ea0:	cmp	w0, #0x2
   10ea4:	b.ne	10ebc <inflateCodesUsed@@ZLIB_1.2.9+0x4cc>  // b.any
   10ea8:	ldr	w0, [sp, #172]
   10eac:	cmp	w0, #0x250
   10eb0:	b.ls	10ebc <inflateCodesUsed@@ZLIB_1.2.9+0x4cc>  // b.plast
   10eb4:	mov	w0, #0x1                   	// #1
   10eb8:	b	1136c <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10ebc:	ldr	w0, [sp, #204]
   10ec0:	and	w1, w0, #0xff
   10ec4:	ldr	w0, [sp, #180]
   10ec8:	and	w0, w0, #0xff
   10ecc:	sub	w0, w1, w0
   10ed0:	and	w0, w0, #0xff
   10ed4:	strb	w0, [sp, #113]
   10ed8:	ldr	w0, [sp, #200]
   10edc:	lsl	x0, x0, #1
   10ee0:	ldr	x1, [sp, #8]
   10ee4:	add	x0, x1, x0
   10ee8:	ldrh	w0, [x0]
   10eec:	add	w0, w0, #0x1
   10ef0:	ldr	w1, [sp, #124]
   10ef4:	cmp	w1, w0
   10ef8:	b.ls	10f1c <inflateCodesUsed@@ZLIB_1.2.9+0x52c>  // b.plast
   10efc:	strb	wzr, [sp, #112]
   10f00:	ldr	w0, [sp, #200]
   10f04:	lsl	x0, x0, #1
   10f08:	ldr	x1, [sp, #8]
   10f0c:	add	x0, x1, x0
   10f10:	ldrh	w0, [x0]
   10f14:	strh	w0, [sp, #114]
   10f18:	b	10fc4 <inflateCodesUsed@@ZLIB_1.2.9+0x5d4>
   10f1c:	ldr	w0, [sp, #200]
   10f20:	lsl	x0, x0, #1
   10f24:	ldr	x1, [sp, #8]
   10f28:	add	x0, x1, x0
   10f2c:	ldrh	w0, [x0]
   10f30:	mov	w1, w0
   10f34:	ldr	w0, [sp, #124]
   10f38:	cmp	w0, w1
   10f3c:	b.hi	10fb8 <inflateCodesUsed@@ZLIB_1.2.9+0x5c8>  // b.pmore
   10f40:	ldr	w0, [sp, #200]
   10f44:	lsl	x0, x0, #1
   10f48:	ldr	x1, [sp, #8]
   10f4c:	add	x0, x1, x0
   10f50:	ldrh	w0, [x0]
   10f54:	mov	w1, w0
   10f58:	ldr	w0, [sp, #124]
   10f5c:	sub	w0, w1, w0
   10f60:	mov	w0, w0
   10f64:	lsl	x0, x0, #1
   10f68:	ldr	x1, [sp, #128]
   10f6c:	add	x0, x1, x0
   10f70:	ldrh	w0, [x0]
   10f74:	and	w0, w0, #0xff
   10f78:	strb	w0, [sp, #112]
   10f7c:	ldr	w0, [sp, #200]
   10f80:	lsl	x0, x0, #1
   10f84:	ldr	x1, [sp, #8]
   10f88:	add	x0, x1, x0
   10f8c:	ldrh	w0, [x0]
   10f90:	mov	w1, w0
   10f94:	ldr	w0, [sp, #124]
   10f98:	sub	w0, w1, w0
   10f9c:	mov	w0, w0
   10fa0:	lsl	x0, x0, #1
   10fa4:	ldr	x1, [sp, #136]
   10fa8:	add	x0, x1, x0
   10fac:	ldrh	w0, [x0]
   10fb0:	strh	w0, [sp, #114]
   10fb4:	b	10fc4 <inflateCodesUsed@@ZLIB_1.2.9+0x5d4>
   10fb8:	mov	w0, #0x60                  	// #96
   10fbc:	strb	w0, [sp, #112]
   10fc0:	strh	wzr, [sp, #114]
   10fc4:	ldr	w1, [sp, #204]
   10fc8:	ldr	w0, [sp, #180]
   10fcc:	sub	w0, w1, w0
   10fd0:	mov	w1, #0x1                   	// #1
   10fd4:	lsl	w0, w1, w0
   10fd8:	str	w0, [sp, #164]
   10fdc:	ldr	w0, [sp, #184]
   10fe0:	mov	w1, #0x1                   	// #1
   10fe4:	lsl	w0, w1, w0
   10fe8:	str	w0, [sp, #160]
   10fec:	ldr	w0, [sp, #160]
   10ff0:	str	w0, [sp, #196]
   10ff4:	ldr	w1, [sp, #160]
   10ff8:	ldr	w0, [sp, #164]
   10ffc:	sub	w0, w1, w0
   11000:	str	w0, [sp, #160]
   11004:	ldr	w0, [sp, #180]
   11008:	ldr	w1, [sp, #168]
   1100c:	lsr	w1, w1, w0
   11010:	ldr	w0, [sp, #160]
   11014:	add	w0, w1, w0
   11018:	mov	w0, w0
   1101c:	lsl	x0, x0, #2
   11020:	ldr	x1, [sp, #144]
   11024:	add	x0, x1, x0
   11028:	ldr	w1, [sp, #112]
   1102c:	str	w1, [x0]
   11030:	ldr	w0, [sp, #160]
   11034:	cmp	w0, #0x0
   11038:	b.ne	10ff4 <inflateCodesUsed@@ZLIB_1.2.9+0x604>  // b.any
   1103c:	ldr	w0, [sp, #204]
   11040:	sub	w0, w0, #0x1
   11044:	mov	w1, #0x1                   	// #1
   11048:	lsl	w0, w1, w0
   1104c:	str	w0, [sp, #164]
   11050:	b	11060 <inflateCodesUsed@@ZLIB_1.2.9+0x670>
   11054:	ldr	w0, [sp, #164]
   11058:	lsr	w0, w0, #1
   1105c:	str	w0, [sp, #164]
   11060:	ldr	w1, [sp, #168]
   11064:	ldr	w0, [sp, #164]
   11068:	and	w0, w1, w0
   1106c:	cmp	w0, #0x0
   11070:	b.ne	11054 <inflateCodesUsed@@ZLIB_1.2.9+0x664>  // b.any
   11074:	ldr	w0, [sp, #164]
   11078:	cmp	w0, #0x0
   1107c:	b.eq	110a8 <inflateCodesUsed@@ZLIB_1.2.9+0x6b8>  // b.none
   11080:	ldr	w0, [sp, #164]
   11084:	sub	w0, w0, #0x1
   11088:	ldr	w1, [sp, #168]
   1108c:	and	w0, w1, w0
   11090:	str	w0, [sp, #168]
   11094:	ldr	w1, [sp, #168]
   11098:	ldr	w0, [sp, #164]
   1109c:	add	w0, w1, w0
   110a0:	str	w0, [sp, #168]
   110a4:	b	110ac <inflateCodesUsed@@ZLIB_1.2.9+0x6bc>
   110a8:	str	wzr, [sp, #168]
   110ac:	ldr	w0, [sp, #200]
   110b0:	add	w0, w0, #0x1
   110b4:	str	w0, [sp, #200]
   110b8:	ldr	w0, [sp, #204]
   110bc:	lsl	x0, x0, #1
   110c0:	add	x1, sp, #0x50
   110c4:	ldrh	w0, [x1, x0]
   110c8:	sub	w0, w0, #0x1
   110cc:	and	w2, w0, #0xffff
   110d0:	ldr	w0, [sp, #204]
   110d4:	lsl	x0, x0, #1
   110d8:	add	x1, sp, #0x50
   110dc:	strh	w2, [x1, x0]
   110e0:	ldr	w0, [sp, #204]
   110e4:	lsl	x0, x0, #1
   110e8:	add	x1, sp, #0x50
   110ec:	ldrh	w0, [x1, x0]
   110f0:	cmp	w0, #0x0
   110f4:	b.ne	11134 <inflateCodesUsed@@ZLIB_1.2.9+0x744>  // b.any
   110f8:	ldr	w1, [sp, #204]
   110fc:	ldr	w0, [sp, #192]
   11100:	cmp	w1, w0
   11104:	b.eq	112f0 <inflateCodesUsed@@ZLIB_1.2.9+0x900>  // b.none
   11108:	ldr	w0, [sp, #200]
   1110c:	lsl	x0, x0, #1
   11110:	ldr	x1, [sp, #8]
   11114:	add	x0, x1, x0
   11118:	ldrh	w0, [x0]
   1111c:	and	x0, x0, #0xffff
   11120:	lsl	x0, x0, #1
   11124:	ldr	x1, [sp, #32]
   11128:	add	x0, x1, x0
   1112c:	ldrh	w0, [x0]
   11130:	str	w0, [sp, #204]
   11134:	ldr	w1, [sp, #204]
   11138:	ldr	w0, [sp, #188]
   1113c:	cmp	w1, w0
   11140:	b.ls	10ebc <inflateCodesUsed@@ZLIB_1.2.9+0x4cc>  // b.plast
   11144:	ldr	w1, [sp, #168]
   11148:	ldr	w0, [sp, #120]
   1114c:	and	w0, w1, w0
   11150:	ldr	w1, [sp, #156]
   11154:	cmp	w1, w0
   11158:	b.eq	10ebc <inflateCodesUsed@@ZLIB_1.2.9+0x4cc>  // b.none
   1115c:	ldr	w0, [sp, #180]
   11160:	cmp	w0, #0x0
   11164:	b.ne	11170 <inflateCodesUsed@@ZLIB_1.2.9+0x780>  // b.any
   11168:	ldr	w0, [sp, #188]
   1116c:	str	w0, [sp, #180]
   11170:	ldr	w0, [sp, #196]
   11174:	lsl	x0, x0, #2
   11178:	ldr	x1, [sp, #144]
   1117c:	add	x0, x1, x0
   11180:	str	x0, [sp, #144]
   11184:	ldr	w1, [sp, #204]
   11188:	ldr	w0, [sp, #180]
   1118c:	sub	w0, w1, w0
   11190:	str	w0, [sp, #184]
   11194:	ldr	w0, [sp, #184]
   11198:	mov	w1, #0x1                   	// #1
   1119c:	lsl	w0, w1, w0
   111a0:	str	w0, [sp, #176]
   111a4:	b	111f8 <inflateCodesUsed@@ZLIB_1.2.9+0x808>
   111a8:	ldr	w1, [sp, #184]
   111ac:	ldr	w0, [sp, #180]
   111b0:	add	w0, w1, w0
   111b4:	mov	w0, w0
   111b8:	lsl	x0, x0, #1
   111bc:	add	x1, sp, #0x50
   111c0:	ldrh	w0, [x1, x0]
   111c4:	mov	w1, w0
   111c8:	ldr	w0, [sp, #176]
   111cc:	sub	w0, w0, w1
   111d0:	str	w0, [sp, #176]
   111d4:	ldr	w0, [sp, #176]
   111d8:	cmp	w0, #0x0
   111dc:	b.le	11214 <inflateCodesUsed@@ZLIB_1.2.9+0x824>
   111e0:	ldr	w0, [sp, #184]
   111e4:	add	w0, w0, #0x1
   111e8:	str	w0, [sp, #184]
   111ec:	ldr	w0, [sp, #176]
   111f0:	lsl	w0, w0, #1
   111f4:	str	w0, [sp, #176]
   111f8:	ldr	w1, [sp, #184]
   111fc:	ldr	w0, [sp, #180]
   11200:	add	w0, w1, w0
   11204:	ldr	w1, [sp, #192]
   11208:	cmp	w1, w0
   1120c:	b.hi	111a8 <inflateCodesUsed@@ZLIB_1.2.9+0x7b8>  // b.pmore
   11210:	b	11218 <inflateCodesUsed@@ZLIB_1.2.9+0x828>
   11214:	nop
   11218:	ldr	w0, [sp, #184]
   1121c:	mov	w1, #0x1                   	// #1
   11220:	lsl	w0, w1, w0
   11224:	ldr	w1, [sp, #172]
   11228:	add	w0, w1, w0
   1122c:	str	w0, [sp, #172]
   11230:	ldr	w0, [sp, #44]
   11234:	cmp	w0, #0x1
   11238:	b.ne	11248 <inflateCodesUsed@@ZLIB_1.2.9+0x858>  // b.any
   1123c:	ldr	w0, [sp, #172]
   11240:	cmp	w0, #0x354
   11244:	b.hi	11260 <inflateCodesUsed@@ZLIB_1.2.9+0x870>  // b.pmore
   11248:	ldr	w0, [sp, #44]
   1124c:	cmp	w0, #0x2
   11250:	b.ne	11268 <inflateCodesUsed@@ZLIB_1.2.9+0x878>  // b.any
   11254:	ldr	w0, [sp, #172]
   11258:	cmp	w0, #0x250
   1125c:	b.ls	11268 <inflateCodesUsed@@ZLIB_1.2.9+0x878>  // b.plast
   11260:	mov	w0, #0x1                   	// #1
   11264:	b	1136c <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   11268:	ldr	w1, [sp, #168]
   1126c:	ldr	w0, [sp, #120]
   11270:	and	w0, w1, w0
   11274:	str	w0, [sp, #156]
   11278:	ldr	x0, [sp, #24]
   1127c:	ldr	x1, [x0]
   11280:	ldr	w0, [sp, #156]
   11284:	lsl	x0, x0, #2
   11288:	add	x0, x1, x0
   1128c:	ldr	w1, [sp, #184]
   11290:	and	w1, w1, #0xff
   11294:	strb	w1, [x0]
   11298:	ldr	x0, [sp, #24]
   1129c:	ldr	x1, [x0]
   112a0:	ldr	w0, [sp, #156]
   112a4:	lsl	x0, x0, #2
   112a8:	add	x0, x1, x0
   112ac:	ldr	w1, [sp, #188]
   112b0:	and	w1, w1, #0xff
   112b4:	strb	w1, [x0, #1]
   112b8:	ldr	x0, [sp, #24]
   112bc:	ldr	x0, [x0]
   112c0:	ldr	x1, [sp, #144]
   112c4:	sub	x0, x1, x0
   112c8:	asr	x0, x0, #2
   112cc:	mov	x2, x0
   112d0:	ldr	x0, [sp, #24]
   112d4:	ldr	x1, [x0]
   112d8:	ldr	w0, [sp, #156]
   112dc:	lsl	x0, x0, #2
   112e0:	add	x0, x1, x0
   112e4:	and	w1, w2, #0xffff
   112e8:	strh	w1, [x0, #2]
   112ec:	b	10ebc <inflateCodesUsed@@ZLIB_1.2.9+0x4cc>
   112f0:	nop
   112f4:	ldr	w0, [sp, #168]
   112f8:	cmp	w0, #0x0
   112fc:	b.eq	11340 <inflateCodesUsed@@ZLIB_1.2.9+0x950>  // b.none
   11300:	mov	w0, #0x40                  	// #64
   11304:	strb	w0, [sp, #112]
   11308:	ldr	w0, [sp, #204]
   1130c:	and	w1, w0, #0xff
   11310:	ldr	w0, [sp, #180]
   11314:	and	w0, w0, #0xff
   11318:	sub	w0, w1, w0
   1131c:	and	w0, w0, #0xff
   11320:	strb	w0, [sp, #113]
   11324:	strh	wzr, [sp, #114]
   11328:	ldr	w0, [sp, #168]
   1132c:	lsl	x0, x0, #2
   11330:	ldr	x1, [sp, #144]
   11334:	add	x0, x1, x0
   11338:	ldr	w1, [sp, #112]
   1133c:	str	w1, [x0]
   11340:	ldr	x0, [sp, #24]
   11344:	ldr	x1, [x0]
   11348:	ldr	w0, [sp, #172]
   1134c:	lsl	x0, x0, #2
   11350:	add	x1, x1, x0
   11354:	ldr	x0, [sp, #24]
   11358:	str	x1, [x0]
   1135c:	ldr	x0, [sp, #16]
   11360:	ldr	w1, [sp, #188]
   11364:	str	w1, [x0]
   11368:	mov	w0, #0x0                   	// #0
   1136c:	add	sp, sp, #0xd0
   11370:	ret
   11374:	nop
   11378:	ret
   1137c:	stp	x29, x30, [sp, #-32]!
   11380:	mov	x29, sp
   11384:	str	x0, [sp, #24]
   11388:	bl	11374 <inflateCodesUsed@@ZLIB_1.2.9+0x984>
   1138c:	ldr	x0, [sp, #24]
   11390:	add	x1, x0, #0xd4
   11394:	ldr	x0, [sp, #24]
   11398:	str	x1, [x0, #2904]
   1139c:	ldr	x0, [sp, #24]
   113a0:	adrp	x1, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
   113a4:	add	x1, x1, #0xd08
   113a8:	str	x1, [x0, #2920]
   113ac:	ldr	x0, [sp, #24]
   113b0:	add	x1, x0, #0x9c8
   113b4:	ldr	x0, [sp, #24]
   113b8:	str	x1, [x0, #2928]
   113bc:	ldr	x0, [sp, #24]
   113c0:	adrp	x1, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
   113c4:	add	x1, x1, #0xd28
   113c8:	str	x1, [x0, #2944]
   113cc:	ldr	x0, [sp, #24]
   113d0:	add	x1, x0, #0xabc
   113d4:	ldr	x0, [sp, #24]
   113d8:	str	x1, [x0, #2952]
   113dc:	ldr	x0, [sp, #24]
   113e0:	adrp	x1, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
   113e4:	add	x1, x1, #0xd48
   113e8:	str	x1, [x0, #2968]
   113ec:	ldr	x0, [sp, #24]
   113f0:	strh	wzr, [x0, #5936]
   113f4:	ldr	x0, [sp, #24]
   113f8:	str	wzr, [x0, #5940]
   113fc:	ldr	x0, [sp, #24]
   11400:	bl	11410 <inflateCodesUsed@@ZLIB_1.2.9+0xa20>
   11404:	nop
   11408:	ldp	x29, x30, [sp], #32
   1140c:	ret
   11410:	sub	sp, sp, #0x20
   11414:	str	x0, [sp, #8]
   11418:	str	wzr, [sp, #28]
   1141c:	b	11444 <inflateCodesUsed@@ZLIB_1.2.9+0xa54>
   11420:	ldr	x1, [sp, #8]
   11424:	ldrsw	x0, [sp, #28]
   11428:	add	x0, x0, #0x34
   1142c:	lsl	x0, x0, #2
   11430:	add	x0, x1, x0
   11434:	strh	wzr, [x0, #4]
   11438:	ldr	w0, [sp, #28]
   1143c:	add	w0, w0, #0x1
   11440:	str	w0, [sp, #28]
   11444:	ldr	w0, [sp, #28]
   11448:	cmp	w0, #0x11d
   1144c:	b.le	11420 <inflateCodesUsed@@ZLIB_1.2.9+0xa30>
   11450:	str	wzr, [sp, #28]
   11454:	b	1147c <inflateCodesUsed@@ZLIB_1.2.9+0xa8c>
   11458:	ldr	x1, [sp, #8]
   1145c:	ldrsw	x0, [sp, #28]
   11460:	add	x0, x0, #0x270
   11464:	lsl	x0, x0, #2
   11468:	add	x0, x1, x0
   1146c:	strh	wzr, [x0, #8]
   11470:	ldr	w0, [sp, #28]
   11474:	add	w0, w0, #0x1
   11478:	str	w0, [sp, #28]
   1147c:	ldr	w0, [sp, #28]
   11480:	cmp	w0, #0x1d
   11484:	b.le	11458 <inflateCodesUsed@@ZLIB_1.2.9+0xa68>
   11488:	str	wzr, [sp, #28]
   1148c:	b	114b4 <inflateCodesUsed@@ZLIB_1.2.9+0xac4>
   11490:	ldr	x1, [sp, #8]
   11494:	ldrsw	x0, [sp, #28]
   11498:	add	x0, x0, #0x2ac
   1149c:	lsl	x0, x0, #2
   114a0:	add	x0, x1, x0
   114a4:	strh	wzr, [x0, #12]
   114a8:	ldr	w0, [sp, #28]
   114ac:	add	w0, w0, #0x1
   114b0:	str	w0, [sp, #28]
   114b4:	ldr	w0, [sp, #28]
   114b8:	cmp	w0, #0x12
   114bc:	b.le	11490 <inflateCodesUsed@@ZLIB_1.2.9+0xaa0>
   114c0:	ldr	x0, [sp, #8]
   114c4:	mov	w1, #0x1                   	// #1
   114c8:	strh	w1, [x0, #1236]
   114cc:	ldr	x0, [sp, #8]
   114d0:	str	xzr, [x0, #5920]
   114d4:	ldr	x0, [sp, #8]
   114d8:	ldr	x1, [x0, #5920]
   114dc:	ldr	x0, [sp, #8]
   114e0:	str	x1, [x0, #5912]
   114e4:	ldr	x0, [sp, #8]
   114e8:	str	wzr, [x0, #5928]
   114ec:	ldr	x0, [sp, #8]
   114f0:	ldr	w1, [x0, #5928]
   114f4:	ldr	x0, [sp, #8]
   114f8:	str	w1, [x0, #5900]
   114fc:	nop
   11500:	add	sp, sp, #0x20
   11504:	ret
   11508:	sub	sp, sp, #0x30
   1150c:	str	x0, [sp, #24]
   11510:	str	x1, [sp, #16]
   11514:	str	w2, [sp, #12]
   11518:	ldr	x0, [sp, #24]
   1151c:	ldrsw	x1, [sp, #12]
   11520:	add	x1, x1, #0x2f0
   11524:	ldr	w0, [x0, x1, lsl #2]
   11528:	str	w0, [sp, #40]
   1152c:	ldr	w0, [sp, #12]
   11530:	lsl	w0, w0, #1
   11534:	str	w0, [sp, #44]
   11538:	b	11758 <inflateCodesUsed@@ZLIB_1.2.9+0xd68>
   1153c:	ldr	x0, [sp, #24]
   11540:	ldr	w0, [x0, #5300]
   11544:	ldr	w1, [sp, #44]
   11548:	cmp	w1, w0
   1154c:	b.ge	11664 <inflateCodesUsed@@ZLIB_1.2.9+0xc74>  // b.tcont
   11550:	ldr	w0, [sp, #44]
   11554:	add	w1, w0, #0x1
   11558:	ldr	x0, [sp, #24]
   1155c:	sxtw	x1, w1
   11560:	add	x1, x1, #0x2f0
   11564:	ldr	w0, [x0, x1, lsl #2]
   11568:	sxtw	x0, w0
   1156c:	lsl	x0, x0, #2
   11570:	ldr	x1, [sp, #16]
   11574:	add	x0, x1, x0
   11578:	ldrh	w1, [x0]
   1157c:	ldr	x0, [sp, #24]
   11580:	ldrsw	x2, [sp, #44]
   11584:	add	x2, x2, #0x2f0
   11588:	ldr	w0, [x0, x2, lsl #2]
   1158c:	sxtw	x0, w0
   11590:	lsl	x0, x0, #2
   11594:	ldr	x2, [sp, #16]
   11598:	add	x0, x2, x0
   1159c:	ldrh	w0, [x0]
   115a0:	cmp	w1, w0
   115a4:	b.cc	11658 <inflateCodesUsed@@ZLIB_1.2.9+0xc68>  // b.lo, b.ul, b.last
   115a8:	ldr	w0, [sp, #44]
   115ac:	add	w1, w0, #0x1
   115b0:	ldr	x0, [sp, #24]
   115b4:	sxtw	x1, w1
   115b8:	add	x1, x1, #0x2f0
   115bc:	ldr	w0, [x0, x1, lsl #2]
   115c0:	sxtw	x0, w0
   115c4:	lsl	x0, x0, #2
   115c8:	ldr	x1, [sp, #16]
   115cc:	add	x0, x1, x0
   115d0:	ldrh	w1, [x0]
   115d4:	ldr	x0, [sp, #24]
   115d8:	ldrsw	x2, [sp, #44]
   115dc:	add	x2, x2, #0x2f0
   115e0:	ldr	w0, [x0, x2, lsl #2]
   115e4:	sxtw	x0, w0
   115e8:	lsl	x0, x0, #2
   115ec:	ldr	x2, [sp, #16]
   115f0:	add	x0, x2, x0
   115f4:	ldrh	w0, [x0]
   115f8:	cmp	w1, w0
   115fc:	b.ne	11664 <inflateCodesUsed@@ZLIB_1.2.9+0xc74>  // b.any
   11600:	ldr	w0, [sp, #44]
   11604:	add	w1, w0, #0x1
   11608:	ldr	x0, [sp, #24]
   1160c:	sxtw	x1, w1
   11610:	add	x1, x1, #0x2f0
   11614:	ldr	w0, [x0, x1, lsl #2]
   11618:	ldr	x1, [sp, #24]
   1161c:	sxtw	x0, w0
   11620:	add	x0, x1, x0
   11624:	add	x0, x0, #0x1, lsl #12
   11628:	ldrb	w1, [x0, #1212]
   1162c:	ldr	x0, [sp, #24]
   11630:	ldrsw	x2, [sp, #44]
   11634:	add	x2, x2, #0x2f0
   11638:	ldr	w0, [x0, x2, lsl #2]
   1163c:	ldr	x2, [sp, #24]
   11640:	sxtw	x0, w0
   11644:	add	x0, x2, x0
   11648:	add	x0, x0, #0x1, lsl #12
   1164c:	ldrb	w0, [x0, #1212]
   11650:	cmp	w1, w0
   11654:	b.hi	11664 <inflateCodesUsed@@ZLIB_1.2.9+0xc74>  // b.pmore
   11658:	ldr	w0, [sp, #44]
   1165c:	add	w0, w0, #0x1
   11660:	str	w0, [sp, #44]
   11664:	ldrsw	x0, [sp, #40]
   11668:	lsl	x0, x0, #2
   1166c:	ldr	x1, [sp, #16]
   11670:	add	x0, x1, x0
   11674:	ldrh	w1, [x0]
   11678:	ldr	x0, [sp, #24]
   1167c:	ldrsw	x2, [sp, #44]
   11680:	add	x2, x2, #0x2f0
   11684:	ldr	w0, [x0, x2, lsl #2]
   11688:	sxtw	x0, w0
   1168c:	lsl	x0, x0, #2
   11690:	ldr	x2, [sp, #16]
   11694:	add	x0, x2, x0
   11698:	ldrh	w0, [x0]
   1169c:	cmp	w1, w0
   116a0:	b.cc	1176c <inflateCodesUsed@@ZLIB_1.2.9+0xd7c>  // b.lo, b.ul, b.last
   116a4:	ldrsw	x0, [sp, #40]
   116a8:	lsl	x0, x0, #2
   116ac:	ldr	x1, [sp, #16]
   116b0:	add	x0, x1, x0
   116b4:	ldrh	w1, [x0]
   116b8:	ldr	x0, [sp, #24]
   116bc:	ldrsw	x2, [sp, #44]
   116c0:	add	x2, x2, #0x2f0
   116c4:	ldr	w0, [x0, x2, lsl #2]
   116c8:	sxtw	x0, w0
   116cc:	lsl	x0, x0, #2
   116d0:	ldr	x2, [sp, #16]
   116d4:	add	x0, x2, x0
   116d8:	ldrh	w0, [x0]
   116dc:	cmp	w1, w0
   116e0:	b.ne	11724 <inflateCodesUsed@@ZLIB_1.2.9+0xd34>  // b.any
   116e4:	ldr	x1, [sp, #24]
   116e8:	ldrsw	x0, [sp, #40]
   116ec:	add	x0, x1, x0
   116f0:	add	x0, x0, #0x1, lsl #12
   116f4:	ldrb	w1, [x0, #1212]
   116f8:	ldr	x0, [sp, #24]
   116fc:	ldrsw	x2, [sp, #44]
   11700:	add	x2, x2, #0x2f0
   11704:	ldr	w0, [x0, x2, lsl #2]
   11708:	ldr	x2, [sp, #24]
   1170c:	sxtw	x0, w0
   11710:	add	x0, x2, x0
   11714:	add	x0, x0, #0x1, lsl #12
   11718:	ldrb	w0, [x0, #1212]
   1171c:	cmp	w1, w0
   11720:	b.ls	1176c <inflateCodesUsed@@ZLIB_1.2.9+0xd7c>  // b.plast
   11724:	ldr	x0, [sp, #24]
   11728:	ldrsw	x1, [sp, #44]
   1172c:	add	x1, x1, #0x2f0
   11730:	ldr	w2, [x0, x1, lsl #2]
   11734:	ldr	x0, [sp, #24]
   11738:	ldrsw	x1, [sp, #12]
   1173c:	add	x1, x1, #0x2f0
   11740:	str	w2, [x0, x1, lsl #2]
   11744:	ldr	w0, [sp, #44]
   11748:	str	w0, [sp, #12]
   1174c:	ldr	w0, [sp, #44]
   11750:	lsl	w0, w0, #1
   11754:	str	w0, [sp, #44]
   11758:	ldr	x0, [sp, #24]
   1175c:	ldr	w0, [x0, #5300]
   11760:	ldr	w1, [sp, #44]
   11764:	cmp	w1, w0
   11768:	b.le	1153c <inflateCodesUsed@@ZLIB_1.2.9+0xb4c>
   1176c:	ldr	x0, [sp, #24]
   11770:	ldrsw	x1, [sp, #12]
   11774:	add	x1, x1, #0x2f0
   11778:	ldr	w2, [sp, #40]
   1177c:	str	w2, [x0, x1, lsl #2]
   11780:	nop
   11784:	add	sp, sp, #0x30
   11788:	ret
   1178c:	sub	sp, sp, #0x60
   11790:	str	x0, [sp, #8]
   11794:	str	x1, [sp]
   11798:	ldr	x0, [sp]
   1179c:	ldr	x0, [x0]
   117a0:	str	x0, [sp, #64]
   117a4:	ldr	x0, [sp]
   117a8:	ldr	w0, [x0, #8]
   117ac:	str	w0, [sp, #60]
   117b0:	ldr	x0, [sp]
   117b4:	ldr	x0, [x0, #16]
   117b8:	ldr	x0, [x0]
   117bc:	str	x0, [sp, #48]
   117c0:	ldr	x0, [sp]
   117c4:	ldr	x0, [x0, #16]
   117c8:	ldr	x0, [x0, #8]
   117cc:	str	x0, [sp, #40]
   117d0:	ldr	x0, [sp]
   117d4:	ldr	x0, [x0, #16]
   117d8:	ldr	w0, [x0, #16]
   117dc:	str	w0, [sp, #36]
   117e0:	ldr	x0, [sp]
   117e4:	ldr	x0, [x0, #16]
   117e8:	ldr	w0, [x0, #24]
   117ec:	str	w0, [sp, #32]
   117f0:	str	wzr, [sp, #76]
   117f4:	str	wzr, [sp, #84]
   117f8:	b	11818 <inflateCodesUsed@@ZLIB_1.2.9+0xe28>
   117fc:	ldr	x0, [sp, #8]
   11800:	ldrsw	x1, [sp, #84]
   11804:	add	x1, x1, #0x5d0
   11808:	strh	wzr, [x0, x1, lsl #1]
   1180c:	ldr	w0, [sp, #84]
   11810:	add	w0, w0, #0x1
   11814:	str	w0, [sp, #84]
   11818:	ldr	w0, [sp, #84]
   1181c:	cmp	w0, #0xf
   11820:	b.le	117fc <inflateCodesUsed@@ZLIB_1.2.9+0xe0c>
   11824:	ldr	x0, [sp, #8]
   11828:	ldr	w1, [x0, #5304]
   1182c:	ldr	x0, [sp, #8]
   11830:	sxtw	x1, w1
   11834:	add	x1, x1, #0x2f0
   11838:	ldr	w0, [x0, x1, lsl #2]
   1183c:	sxtw	x0, w0
   11840:	lsl	x0, x0, #2
   11844:	ldr	x1, [sp, #64]
   11848:	add	x0, x1, x0
   1184c:	strh	wzr, [x0, #2]
   11850:	ldr	x0, [sp, #8]
   11854:	ldr	w0, [x0, #5304]
   11858:	add	w0, w0, #0x1
   1185c:	str	w0, [sp, #92]
   11860:	b	119fc <inflateCodesUsed@@ZLIB_1.2.9+0x100c>
   11864:	ldr	x0, [sp, #8]
   11868:	ldrsw	x1, [sp, #92]
   1186c:	add	x1, x1, #0x2f0
   11870:	ldr	w0, [x0, x1, lsl #2]
   11874:	str	w0, [sp, #88]
   11878:	ldrsw	x0, [sp, #88]
   1187c:	lsl	x0, x0, #2
   11880:	ldr	x1, [sp, #64]
   11884:	add	x0, x1, x0
   11888:	ldrh	w0, [x0, #2]
   1188c:	and	x0, x0, #0xffff
   11890:	lsl	x0, x0, #2
   11894:	ldr	x1, [sp, #64]
   11898:	add	x0, x1, x0
   1189c:	ldrh	w0, [x0, #2]
   118a0:	add	w0, w0, #0x1
   118a4:	str	w0, [sp, #84]
   118a8:	ldr	w1, [sp, #84]
   118ac:	ldr	w0, [sp, #32]
   118b0:	cmp	w1, w0
   118b4:	b.le	118cc <inflateCodesUsed@@ZLIB_1.2.9+0xedc>
   118b8:	ldr	w0, [sp, #32]
   118bc:	str	w0, [sp, #84]
   118c0:	ldr	w0, [sp, #76]
   118c4:	add	w0, w0, #0x1
   118c8:	str	w0, [sp, #76]
   118cc:	ldrsw	x0, [sp, #88]
   118d0:	lsl	x0, x0, #2
   118d4:	ldr	x1, [sp, #64]
   118d8:	add	x0, x1, x0
   118dc:	ldr	w1, [sp, #84]
   118e0:	and	w1, w1, #0xffff
   118e4:	strh	w1, [x0, #2]
   118e8:	ldr	w1, [sp, #88]
   118ec:	ldr	w0, [sp, #60]
   118f0:	cmp	w1, w0
   118f4:	b.gt	119ec <inflateCodesUsed@@ZLIB_1.2.9+0xffc>
   118f8:	ldr	x0, [sp, #8]
   118fc:	ldrsw	x1, [sp, #84]
   11900:	add	x1, x1, #0x5d0
   11904:	ldrh	w0, [x0, x1, lsl #1]
   11908:	add	w0, w0, #0x1
   1190c:	and	w2, w0, #0xffff
   11910:	ldr	x0, [sp, #8]
   11914:	ldrsw	x1, [sp, #84]
   11918:	add	x1, x1, #0x5d0
   1191c:	strh	w2, [x0, x1, lsl #1]
   11920:	str	wzr, [sp, #80]
   11924:	ldr	w1, [sp, #88]
   11928:	ldr	w0, [sp, #36]
   1192c:	cmp	w1, w0
   11930:	b.lt	11958 <inflateCodesUsed@@ZLIB_1.2.9+0xf68>  // b.tstop
   11934:	ldr	w1, [sp, #88]
   11938:	ldr	w0, [sp, #36]
   1193c:	sub	w0, w1, w0
   11940:	sxtw	x0, w0
   11944:	lsl	x0, x0, #2
   11948:	ldr	x1, [sp, #40]
   1194c:	add	x0, x1, x0
   11950:	ldr	w0, [x0]
   11954:	str	w0, [sp, #80]
   11958:	ldrsw	x0, [sp, #88]
   1195c:	lsl	x0, x0, #2
   11960:	ldr	x1, [sp, #64]
   11964:	add	x0, x1, x0
   11968:	ldrh	w0, [x0]
   1196c:	strh	w0, [sp, #26]
   11970:	ldr	x0, [sp, #8]
   11974:	ldr	x1, [x0, #5912]
   11978:	ldrh	w2, [sp, #26]
   1197c:	ldr	w3, [sp, #84]
   11980:	ldr	w0, [sp, #80]
   11984:	add	w0, w3, w0
   11988:	mov	w0, w0
   1198c:	mul	x0, x2, x0
   11990:	add	x1, x1, x0
   11994:	ldr	x0, [sp, #8]
   11998:	str	x1, [x0, #5912]
   1199c:	ldr	x0, [sp, #48]
   119a0:	cmp	x0, #0x0
   119a4:	b.eq	119f0 <inflateCodesUsed@@ZLIB_1.2.9+0x1000>  // b.none
   119a8:	ldr	x0, [sp, #8]
   119ac:	ldr	x1, [x0, #5920]
   119b0:	ldrh	w2, [sp, #26]
   119b4:	ldrsw	x0, [sp, #88]
   119b8:	lsl	x0, x0, #2
   119bc:	ldr	x3, [sp, #48]
   119c0:	add	x0, x3, x0
   119c4:	ldrh	w0, [x0, #2]
   119c8:	mov	w3, w0
   119cc:	ldr	w0, [sp, #80]
   119d0:	add	w0, w3, w0
   119d4:	mov	w0, w0
   119d8:	mul	x0, x2, x0
   119dc:	add	x1, x1, x0
   119e0:	ldr	x0, [sp, #8]
   119e4:	str	x1, [x0, #5920]
   119e8:	b	119f0 <inflateCodesUsed@@ZLIB_1.2.9+0x1000>
   119ec:	nop
   119f0:	ldr	w0, [sp, #92]
   119f4:	add	w0, w0, #0x1
   119f8:	str	w0, [sp, #92]
   119fc:	ldr	w0, [sp, #92]
   11a00:	cmp	w0, #0x23c
   11a04:	b.le	11864 <inflateCodesUsed@@ZLIB_1.2.9+0xe74>
   11a08:	ldr	w0, [sp, #76]
   11a0c:	cmp	w0, #0x0
   11a10:	b.eq	11c04 <inflateCodesUsed@@ZLIB_1.2.9+0x1214>  // b.none
   11a14:	ldr	w0, [sp, #32]
   11a18:	sub	w0, w0, #0x1
   11a1c:	str	w0, [sp, #84]
   11a20:	b	11a30 <inflateCodesUsed@@ZLIB_1.2.9+0x1040>
   11a24:	ldr	w0, [sp, #84]
   11a28:	sub	w0, w0, #0x1
   11a2c:	str	w0, [sp, #84]
   11a30:	ldr	x0, [sp, #8]
   11a34:	ldrsw	x1, [sp, #84]
   11a38:	add	x1, x1, #0x5d0
   11a3c:	ldrh	w0, [x0, x1, lsl #1]
   11a40:	cmp	w0, #0x0
   11a44:	b.eq	11a24 <inflateCodesUsed@@ZLIB_1.2.9+0x1034>  // b.none
   11a48:	ldr	x0, [sp, #8]
   11a4c:	ldrsw	x1, [sp, #84]
   11a50:	add	x1, x1, #0x5d0
   11a54:	ldrh	w0, [x0, x1, lsl #1]
   11a58:	sub	w0, w0, #0x1
   11a5c:	and	w2, w0, #0xffff
   11a60:	ldr	x0, [sp, #8]
   11a64:	ldrsw	x1, [sp, #84]
   11a68:	add	x1, x1, #0x5d0
   11a6c:	strh	w2, [x0, x1, lsl #1]
   11a70:	ldr	w0, [sp, #84]
   11a74:	add	w1, w0, #0x1
   11a78:	ldr	x0, [sp, #8]
   11a7c:	sxtw	x1, w1
   11a80:	add	x1, x1, #0x5d0
   11a84:	ldrh	w0, [x0, x1, lsl #1]
   11a88:	ldr	w1, [sp, #84]
   11a8c:	add	w1, w1, #0x1
   11a90:	add	w0, w0, #0x2
   11a94:	and	w2, w0, #0xffff
   11a98:	ldr	x0, [sp, #8]
   11a9c:	sxtw	x1, w1
   11aa0:	add	x1, x1, #0x5d0
   11aa4:	strh	w2, [x0, x1, lsl #1]
   11aa8:	ldr	x0, [sp, #8]
   11aac:	ldrsw	x1, [sp, #32]
   11ab0:	add	x1, x1, #0x5d0
   11ab4:	ldrh	w0, [x0, x1, lsl #1]
   11ab8:	sub	w0, w0, #0x1
   11abc:	and	w2, w0, #0xffff
   11ac0:	ldr	x0, [sp, #8]
   11ac4:	ldrsw	x1, [sp, #32]
   11ac8:	add	x1, x1, #0x5d0
   11acc:	strh	w2, [x0, x1, lsl #1]
   11ad0:	ldr	w0, [sp, #76]
   11ad4:	sub	w0, w0, #0x2
   11ad8:	str	w0, [sp, #76]
   11adc:	ldr	w0, [sp, #76]
   11ae0:	cmp	w0, #0x0
   11ae4:	b.gt	11a14 <inflateCodesUsed@@ZLIB_1.2.9+0x1024>
   11ae8:	ldr	w0, [sp, #32]
   11aec:	str	w0, [sp, #84]
   11af0:	b	11bf4 <inflateCodesUsed@@ZLIB_1.2.9+0x1204>
   11af4:	ldr	x0, [sp, #8]
   11af8:	ldrsw	x1, [sp, #84]
   11afc:	add	x1, x1, #0x5d0
   11b00:	ldrh	w0, [x0, x1, lsl #1]
   11b04:	str	w0, [sp, #88]
   11b08:	b	11bdc <inflateCodesUsed@@ZLIB_1.2.9+0x11ec>
   11b0c:	ldr	w0, [sp, #92]
   11b10:	sub	w0, w0, #0x1
   11b14:	str	w0, [sp, #92]
   11b18:	ldr	x0, [sp, #8]
   11b1c:	ldrsw	x1, [sp, #92]
   11b20:	add	x1, x1, #0x2f0
   11b24:	ldr	w0, [x0, x1, lsl #2]
   11b28:	str	w0, [sp, #28]
   11b2c:	ldr	w1, [sp, #28]
   11b30:	ldr	w0, [sp, #60]
   11b34:	cmp	w1, w0
   11b38:	b.le	11b40 <inflateCodesUsed@@ZLIB_1.2.9+0x1150>
   11b3c:	b	11bdc <inflateCodesUsed@@ZLIB_1.2.9+0x11ec>
   11b40:	ldrsw	x0, [sp, #28]
   11b44:	lsl	x0, x0, #2
   11b48:	ldr	x1, [sp, #64]
   11b4c:	add	x0, x1, x0
   11b50:	ldrh	w0, [x0, #2]
   11b54:	mov	w1, w0
   11b58:	ldr	w0, [sp, #84]
   11b5c:	cmp	w1, w0
   11b60:	b.eq	11bd0 <inflateCodesUsed@@ZLIB_1.2.9+0x11e0>  // b.none
   11b64:	ldr	x0, [sp, #8]
   11b68:	ldr	x1, [x0, #5912]
   11b6c:	ldrsw	x2, [sp, #84]
   11b70:	ldrsw	x0, [sp, #28]
   11b74:	lsl	x0, x0, #2
   11b78:	ldr	x3, [sp, #64]
   11b7c:	add	x0, x3, x0
   11b80:	ldrh	w0, [x0, #2]
   11b84:	and	x0, x0, #0xffff
   11b88:	sub	x2, x2, x0
   11b8c:	ldrsw	x0, [sp, #28]
   11b90:	lsl	x0, x0, #2
   11b94:	ldr	x3, [sp, #64]
   11b98:	add	x0, x3, x0
   11b9c:	ldrh	w0, [x0]
   11ba0:	and	x0, x0, #0xffff
   11ba4:	mul	x0, x2, x0
   11ba8:	add	x1, x1, x0
   11bac:	ldr	x0, [sp, #8]
   11bb0:	str	x1, [x0, #5912]
   11bb4:	ldrsw	x0, [sp, #28]
   11bb8:	lsl	x0, x0, #2
   11bbc:	ldr	x1, [sp, #64]
   11bc0:	add	x0, x1, x0
   11bc4:	ldr	w1, [sp, #84]
   11bc8:	and	w1, w1, #0xffff
   11bcc:	strh	w1, [x0, #2]
   11bd0:	ldr	w0, [sp, #88]
   11bd4:	sub	w0, w0, #0x1
   11bd8:	str	w0, [sp, #88]
   11bdc:	ldr	w0, [sp, #88]
   11be0:	cmp	w0, #0x0
   11be4:	b.ne	11b0c <inflateCodesUsed@@ZLIB_1.2.9+0x111c>  // b.any
   11be8:	ldr	w0, [sp, #84]
   11bec:	sub	w0, w0, #0x1
   11bf0:	str	w0, [sp, #84]
   11bf4:	ldr	w0, [sp, #84]
   11bf8:	cmp	w0, #0x0
   11bfc:	b.ne	11af4 <inflateCodesUsed@@ZLIB_1.2.9+0x1104>  // b.any
   11c00:	b	11c08 <inflateCodesUsed@@ZLIB_1.2.9+0x1218>
   11c04:	nop
   11c08:	add	sp, sp, #0x60
   11c0c:	ret
   11c10:	stp	x29, x30, [sp, #-96]!
   11c14:	mov	x29, sp
   11c18:	str	x0, [sp, #40]
   11c1c:	str	w1, [sp, #36]
   11c20:	str	x2, [sp, #24]
   11c24:	str	wzr, [sp, #92]
   11c28:	mov	w0, #0x1                   	// #1
   11c2c:	str	w0, [sp, #88]
   11c30:	b	11c84 <inflateCodesUsed@@ZLIB_1.2.9+0x1294>
   11c34:	ldrsw	x0, [sp, #88]
   11c38:	lsl	x0, x0, #1
   11c3c:	sub	x0, x0, #0x2
   11c40:	ldr	x1, [sp, #24]
   11c44:	add	x0, x1, x0
   11c48:	ldrh	w0, [x0]
   11c4c:	mov	w1, w0
   11c50:	ldr	w0, [sp, #92]
   11c54:	add	w0, w1, w0
   11c58:	lsl	w0, w0, #1
   11c5c:	str	w0, [sp, #92]
   11c60:	ldr	w0, [sp, #92]
   11c64:	and	w2, w0, #0xffff
   11c68:	ldrsw	x0, [sp, #88]
   11c6c:	lsl	x0, x0, #1
   11c70:	add	x1, sp, #0x30
   11c74:	strh	w2, [x1, x0]
   11c78:	ldr	w0, [sp, #88]
   11c7c:	add	w0, w0, #0x1
   11c80:	str	w0, [sp, #88]
   11c84:	ldr	w0, [sp, #88]
   11c88:	cmp	w0, #0xf
   11c8c:	b.le	11c34 <inflateCodesUsed@@ZLIB_1.2.9+0x1244>
   11c90:	str	wzr, [sp, #84]
   11c94:	b	11d1c <inflateCodesUsed@@ZLIB_1.2.9+0x132c>
   11c98:	ldrsw	x0, [sp, #84]
   11c9c:	lsl	x0, x0, #2
   11ca0:	ldr	x1, [sp, #40]
   11ca4:	add	x0, x1, x0
   11ca8:	ldrh	w0, [x0, #2]
   11cac:	str	w0, [sp, #80]
   11cb0:	ldr	w0, [sp, #80]
   11cb4:	cmp	w0, #0x0
   11cb8:	b.eq	11d0c <inflateCodesUsed@@ZLIB_1.2.9+0x131c>  // b.none
   11cbc:	ldrsw	x0, [sp, #80]
   11cc0:	lsl	x0, x0, #1
   11cc4:	add	x1, sp, #0x30
   11cc8:	ldrh	w0, [x1, x0]
   11ccc:	add	w1, w0, #0x1
   11cd0:	and	w3, w1, #0xffff
   11cd4:	ldrsw	x1, [sp, #80]
   11cd8:	lsl	x1, x1, #1
   11cdc:	add	x2, sp, #0x30
   11ce0:	strh	w3, [x2, x1]
   11ce4:	ldr	w1, [sp, #80]
   11ce8:	bl	151ac <inflateCodesUsed@@ZLIB_1.2.9+0x47bc>
   11cec:	mov	w2, w0
   11cf0:	ldrsw	x0, [sp, #84]
   11cf4:	lsl	x0, x0, #2
   11cf8:	ldr	x1, [sp, #40]
   11cfc:	add	x0, x1, x0
   11d00:	and	w1, w2, #0xffff
   11d04:	strh	w1, [x0]
   11d08:	b	11d10 <inflateCodesUsed@@ZLIB_1.2.9+0x1320>
   11d0c:	nop
   11d10:	ldr	w0, [sp, #84]
   11d14:	add	w0, w0, #0x1
   11d18:	str	w0, [sp, #84]
   11d1c:	ldr	w1, [sp, #84]
   11d20:	ldr	w0, [sp, #36]
   11d24:	cmp	w1, w0
   11d28:	b.le	11c98 <inflateCodesUsed@@ZLIB_1.2.9+0x12a8>
   11d2c:	nop
   11d30:	nop
   11d34:	ldp	x29, x30, [sp], #96
   11d38:	ret
   11d3c:	stp	x29, x30, [sp, #-80]!
   11d40:	mov	x29, sp
   11d44:	str	x0, [sp, #24]
   11d48:	str	x1, [sp, #16]
   11d4c:	ldr	x0, [sp, #16]
   11d50:	ldr	x0, [x0]
   11d54:	str	x0, [sp, #56]
   11d58:	ldr	x0, [sp, #16]
   11d5c:	ldr	x0, [x0, #16]
   11d60:	ldr	x0, [x0]
   11d64:	str	x0, [sp, #48]
   11d68:	ldr	x0, [sp, #16]
   11d6c:	ldr	x0, [x0, #16]
   11d70:	ldr	w0, [x0, #20]
   11d74:	str	w0, [sp, #44]
   11d78:	mov	w0, #0xffffffff            	// #-1
   11d7c:	str	w0, [sp, #72]
   11d80:	ldr	x0, [sp, #24]
   11d84:	str	wzr, [x0, #5300]
   11d88:	ldr	x0, [sp, #24]
   11d8c:	mov	w1, #0x23d                 	// #573
   11d90:	str	w1, [x0, #5304]
   11d94:	str	wzr, [sp, #76]
   11d98:	b	11e28 <inflateCodesUsed@@ZLIB_1.2.9+0x1438>
   11d9c:	ldrsw	x0, [sp, #76]
   11da0:	lsl	x0, x0, #2
   11da4:	ldr	x1, [sp, #56]
   11da8:	add	x0, x1, x0
   11dac:	ldrh	w0, [x0]
   11db0:	cmp	w0, #0x0
   11db4:	b.eq	11e08 <inflateCodesUsed@@ZLIB_1.2.9+0x1418>  // b.none
   11db8:	ldr	w0, [sp, #76]
   11dbc:	str	w0, [sp, #72]
   11dc0:	ldr	x0, [sp, #24]
   11dc4:	ldr	w0, [x0, #5300]
   11dc8:	add	w1, w0, #0x1
   11dcc:	ldr	x0, [sp, #24]
   11dd0:	str	w1, [x0, #5300]
   11dd4:	ldr	x0, [sp, #24]
   11dd8:	ldr	w1, [x0, #5300]
   11ddc:	ldr	x0, [sp, #24]
   11de0:	sxtw	x1, w1
   11de4:	add	x1, x1, #0x2f0
   11de8:	ldr	w2, [sp, #72]
   11dec:	str	w2, [x0, x1, lsl #2]
   11df0:	ldr	x1, [sp, #24]
   11df4:	ldrsw	x0, [sp, #76]
   11df8:	add	x0, x1, x0
   11dfc:	add	x0, x0, #0x1, lsl #12
   11e00:	strb	wzr, [x0, #1212]
   11e04:	b	11e1c <inflateCodesUsed@@ZLIB_1.2.9+0x142c>
   11e08:	ldrsw	x0, [sp, #76]
   11e0c:	lsl	x0, x0, #2
   11e10:	ldr	x1, [sp, #56]
   11e14:	add	x0, x1, x0
   11e18:	strh	wzr, [x0, #2]
   11e1c:	ldr	w0, [sp, #76]
   11e20:	add	w0, w0, #0x1
   11e24:	str	w0, [sp, #76]
   11e28:	ldr	w1, [sp, #76]
   11e2c:	ldr	w0, [sp, #44]
   11e30:	cmp	w1, w0
   11e34:	b.lt	11d9c <inflateCodesUsed@@ZLIB_1.2.9+0x13ac>  // b.tstop
   11e38:	b	11f18 <inflateCodesUsed@@ZLIB_1.2.9+0x1528>
   11e3c:	ldr	w0, [sp, #72]
   11e40:	cmp	w0, #0x1
   11e44:	b.gt	11e5c <inflateCodesUsed@@ZLIB_1.2.9+0x146c>
   11e48:	ldr	w0, [sp, #72]
   11e4c:	add	w0, w0, #0x1
   11e50:	str	w0, [sp, #72]
   11e54:	ldr	w0, [sp, #72]
   11e58:	b	11e60 <inflateCodesUsed@@ZLIB_1.2.9+0x1470>
   11e5c:	mov	w0, #0x0                   	// #0
   11e60:	ldr	x1, [sp, #24]
   11e64:	ldr	w1, [x1, #5300]
   11e68:	add	w2, w1, #0x1
   11e6c:	ldr	x1, [sp, #24]
   11e70:	str	w2, [x1, #5300]
   11e74:	ldr	x1, [sp, #24]
   11e78:	ldr	w3, [x1, #5300]
   11e7c:	ldr	x1, [sp, #24]
   11e80:	sxtw	x2, w3
   11e84:	add	x2, x2, #0x2f0
   11e88:	str	w0, [x1, x2, lsl #2]
   11e8c:	ldr	x0, [sp, #24]
   11e90:	sxtw	x1, w3
   11e94:	add	x1, x1, #0x2f0
   11e98:	ldr	w0, [x0, x1, lsl #2]
   11e9c:	str	w0, [sp, #68]
   11ea0:	ldrsw	x0, [sp, #68]
   11ea4:	lsl	x0, x0, #2
   11ea8:	ldr	x1, [sp, #56]
   11eac:	add	x0, x1, x0
   11eb0:	mov	w1, #0x1                   	// #1
   11eb4:	strh	w1, [x0]
   11eb8:	ldr	x1, [sp, #24]
   11ebc:	ldrsw	x0, [sp, #68]
   11ec0:	add	x0, x1, x0
   11ec4:	add	x0, x0, #0x1, lsl #12
   11ec8:	strb	wzr, [x0, #1212]
   11ecc:	ldr	x0, [sp, #24]
   11ed0:	ldr	x0, [x0, #5912]
   11ed4:	sub	x1, x0, #0x1
   11ed8:	ldr	x0, [sp, #24]
   11edc:	str	x1, [x0, #5912]
   11ee0:	ldr	x0, [sp, #48]
   11ee4:	cmp	x0, #0x0
   11ee8:	b.eq	11f18 <inflateCodesUsed@@ZLIB_1.2.9+0x1528>  // b.none
   11eec:	ldr	x0, [sp, #24]
   11ef0:	ldr	x1, [x0, #5920]
   11ef4:	ldrsw	x0, [sp, #68]
   11ef8:	lsl	x0, x0, #2
   11efc:	ldr	x2, [sp, #48]
   11f00:	add	x0, x2, x0
   11f04:	ldrh	w0, [x0, #2]
   11f08:	and	x0, x0, #0xffff
   11f0c:	sub	x1, x1, x0
   11f10:	ldr	x0, [sp, #24]
   11f14:	str	x1, [x0, #5920]
   11f18:	ldr	x0, [sp, #24]
   11f1c:	ldr	w0, [x0, #5300]
   11f20:	cmp	w0, #0x1
   11f24:	b.le	11e3c <inflateCodesUsed@@ZLIB_1.2.9+0x144c>
   11f28:	ldr	x0, [sp, #16]
   11f2c:	ldr	w1, [sp, #72]
   11f30:	str	w1, [x0, #8]
   11f34:	ldr	x0, [sp, #24]
   11f38:	ldr	w0, [x0, #5300]
   11f3c:	lsr	w1, w0, #31
   11f40:	add	w0, w1, w0
   11f44:	asr	w0, w0, #1
   11f48:	str	w0, [sp, #76]
   11f4c:	b	11f6c <inflateCodesUsed@@ZLIB_1.2.9+0x157c>
   11f50:	ldr	w2, [sp, #76]
   11f54:	ldr	x1, [sp, #56]
   11f58:	ldr	x0, [sp, #24]
   11f5c:	bl	11508 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
   11f60:	ldr	w0, [sp, #76]
   11f64:	sub	w0, w0, #0x1
   11f68:	str	w0, [sp, #76]
   11f6c:	ldr	w0, [sp, #76]
   11f70:	cmp	w0, #0x0
   11f74:	b.gt	11f50 <inflateCodesUsed@@ZLIB_1.2.9+0x1560>
   11f78:	ldr	w0, [sp, #44]
   11f7c:	str	w0, [sp, #68]
   11f80:	ldr	x0, [sp, #24]
   11f84:	ldr	w0, [x0, #3012]
   11f88:	str	w0, [sp, #76]
   11f8c:	ldr	x0, [sp, #24]
   11f90:	ldr	w0, [x0, #5300]
   11f94:	sub	w2, w0, #0x1
   11f98:	ldr	x1, [sp, #24]
   11f9c:	str	w2, [x1, #5300]
   11fa0:	ldr	x1, [sp, #24]
   11fa4:	sxtw	x0, w0
   11fa8:	add	x0, x0, #0x2f0
   11fac:	ldr	w1, [x1, x0, lsl #2]
   11fb0:	ldr	x0, [sp, #24]
   11fb4:	str	w1, [x0, #3012]
   11fb8:	mov	w2, #0x1                   	// #1
   11fbc:	ldr	x1, [sp, #56]
   11fc0:	ldr	x0, [sp, #24]
   11fc4:	bl	11508 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
   11fc8:	ldr	x0, [sp, #24]
   11fcc:	ldr	w0, [x0, #3012]
   11fd0:	str	w0, [sp, #40]
   11fd4:	ldr	x0, [sp, #24]
   11fd8:	ldr	w0, [x0, #5304]
   11fdc:	sub	w1, w0, #0x1
   11fe0:	ldr	x0, [sp, #24]
   11fe4:	str	w1, [x0, #5304]
   11fe8:	ldr	x0, [sp, #24]
   11fec:	ldr	w1, [x0, #5304]
   11ff0:	ldr	x0, [sp, #24]
   11ff4:	sxtw	x1, w1
   11ff8:	add	x1, x1, #0x2f0
   11ffc:	ldr	w2, [sp, #76]
   12000:	str	w2, [x0, x1, lsl #2]
   12004:	ldr	x0, [sp, #24]
   12008:	ldr	w0, [x0, #5304]
   1200c:	sub	w1, w0, #0x1
   12010:	ldr	x0, [sp, #24]
   12014:	str	w1, [x0, #5304]
   12018:	ldr	x0, [sp, #24]
   1201c:	ldr	w1, [x0, #5304]
   12020:	ldr	x0, [sp, #24]
   12024:	sxtw	x1, w1
   12028:	add	x1, x1, #0x2f0
   1202c:	ldr	w2, [sp, #40]
   12030:	str	w2, [x0, x1, lsl #2]
   12034:	ldrsw	x0, [sp, #76]
   12038:	lsl	x0, x0, #2
   1203c:	ldr	x1, [sp, #56]
   12040:	add	x0, x1, x0
   12044:	ldrh	w2, [x0]
   12048:	ldrsw	x0, [sp, #40]
   1204c:	lsl	x0, x0, #2
   12050:	ldr	x1, [sp, #56]
   12054:	add	x0, x1, x0
   12058:	ldrh	w1, [x0]
   1205c:	ldrsw	x0, [sp, #68]
   12060:	lsl	x0, x0, #2
   12064:	ldr	x3, [sp, #56]
   12068:	add	x0, x3, x0
   1206c:	add	w1, w2, w1
   12070:	and	w1, w1, #0xffff
   12074:	strh	w1, [x0]
   12078:	ldr	x1, [sp, #24]
   1207c:	ldrsw	x0, [sp, #76]
   12080:	add	x0, x1, x0
   12084:	add	x0, x0, #0x1, lsl #12
   12088:	ldrb	w1, [x0, #1212]
   1208c:	ldr	x2, [sp, #24]
   12090:	ldrsw	x0, [sp, #40]
   12094:	add	x0, x2, x0
   12098:	add	x0, x0, #0x1, lsl #12
   1209c:	ldrb	w0, [x0, #1212]
   120a0:	cmp	w1, w0
   120a4:	b.cc	120c8 <inflateCodesUsed@@ZLIB_1.2.9+0x16d8>  // b.lo, b.ul, b.last
   120a8:	ldr	x1, [sp, #24]
   120ac:	ldrsw	x0, [sp, #76]
   120b0:	add	x0, x1, x0
   120b4:	add	x0, x0, #0x1, lsl #12
   120b8:	ldrb	w0, [x0, #1212]
   120bc:	add	w0, w0, #0x1
   120c0:	and	w0, w0, #0xff
   120c4:	b	120e4 <inflateCodesUsed@@ZLIB_1.2.9+0x16f4>
   120c8:	ldr	x1, [sp, #24]
   120cc:	ldrsw	x0, [sp, #40]
   120d0:	add	x0, x1, x0
   120d4:	add	x0, x0, #0x1, lsl #12
   120d8:	ldrb	w0, [x0, #1212]
   120dc:	add	w0, w0, #0x1
   120e0:	and	w0, w0, #0xff
   120e4:	ldr	x2, [sp, #24]
   120e8:	ldrsw	x1, [sp, #68]
   120ec:	add	x1, x2, x1
   120f0:	add	x1, x1, #0x1, lsl #12
   120f4:	strb	w0, [x1, #1212]
   120f8:	ldrsw	x0, [sp, #40]
   120fc:	lsl	x0, x0, #2
   12100:	ldr	x1, [sp, #56]
   12104:	add	x0, x1, x0
   12108:	ldr	w1, [sp, #68]
   1210c:	and	w1, w1, #0xffff
   12110:	strh	w1, [x0, #2]
   12114:	ldrsw	x1, [sp, #76]
   12118:	lsl	x1, x1, #2
   1211c:	ldr	x2, [sp, #56]
   12120:	add	x1, x2, x1
   12124:	ldrh	w0, [x0, #2]
   12128:	strh	w0, [x1, #2]
   1212c:	ldr	w0, [sp, #68]
   12130:	add	w1, w0, #0x1
   12134:	str	w1, [sp, #68]
   12138:	ldr	x1, [sp, #24]
   1213c:	str	w0, [x1, #3012]
   12140:	mov	w2, #0x1                   	// #1
   12144:	ldr	x1, [sp, #56]
   12148:	ldr	x0, [sp, #24]
   1214c:	bl	11508 <inflateCodesUsed@@ZLIB_1.2.9+0xb18>
   12150:	ldr	x0, [sp, #24]
   12154:	ldr	w0, [x0, #5300]
   12158:	cmp	w0, #0x1
   1215c:	b.gt	11f80 <inflateCodesUsed@@ZLIB_1.2.9+0x1590>
   12160:	ldr	x0, [sp, #24]
   12164:	ldr	w0, [x0, #5304]
   12168:	sub	w1, w0, #0x1
   1216c:	ldr	x0, [sp, #24]
   12170:	str	w1, [x0, #5304]
   12174:	ldr	x0, [sp, #24]
   12178:	ldr	w1, [x0, #5304]
   1217c:	ldr	x0, [sp, #24]
   12180:	ldr	w2, [x0, #3012]
   12184:	ldr	x0, [sp, #24]
   12188:	sxtw	x1, w1
   1218c:	add	x1, x1, #0x2f0
   12190:	str	w2, [x0, x1, lsl #2]
   12194:	ldr	x1, [sp, #16]
   12198:	ldr	x0, [sp, #24]
   1219c:	bl	1178c <inflateCodesUsed@@ZLIB_1.2.9+0xd9c>
   121a0:	ldr	x0, [sp, #24]
   121a4:	add	x0, x0, #0xba0
   121a8:	mov	x2, x0
   121ac:	ldr	w1, [sp, #72]
   121b0:	ldr	x0, [sp, #56]
   121b4:	bl	11c10 <inflateCodesUsed@@ZLIB_1.2.9+0x1220>
   121b8:	nop
   121bc:	ldp	x29, x30, [sp], #80
   121c0:	ret
   121c4:	sub	sp, sp, #0x40
   121c8:	str	x0, [sp, #24]
   121cc:	str	x1, [sp, #16]
   121d0:	str	w2, [sp, #12]
   121d4:	mov	w0, #0xffffffff            	// #-1
   121d8:	str	w0, [sp, #56]
   121dc:	ldr	x0, [sp, #16]
   121e0:	ldrh	w0, [x0, #2]
   121e4:	str	w0, [sp, #52]
   121e8:	str	wzr, [sp, #48]
   121ec:	mov	w0, #0x7                   	// #7
   121f0:	str	w0, [sp, #44]
   121f4:	mov	w0, #0x4                   	// #4
   121f8:	str	w0, [sp, #40]
   121fc:	ldr	w0, [sp, #52]
   12200:	cmp	w0, #0x0
   12204:	b.ne	12218 <inflateCodesUsed@@ZLIB_1.2.9+0x1828>  // b.any
   12208:	mov	w0, #0x8a                  	// #138
   1220c:	str	w0, [sp, #44]
   12210:	mov	w0, #0x3                   	// #3
   12214:	str	w0, [sp, #40]
   12218:	ldrsw	x0, [sp, #12]
   1221c:	add	x0, x0, #0x1
   12220:	lsl	x0, x0, #2
   12224:	ldr	x1, [sp, #16]
   12228:	add	x0, x1, x0
   1222c:	mov	w1, #0xffffffff            	// #-1
   12230:	strh	w1, [x0, #2]
   12234:	str	wzr, [sp, #60]
   12238:	b	1240c <inflateCodesUsed@@ZLIB_1.2.9+0x1a1c>
   1223c:	ldr	w0, [sp, #52]
   12240:	str	w0, [sp, #36]
   12244:	ldrsw	x0, [sp, #60]
   12248:	add	x0, x0, #0x1
   1224c:	lsl	x0, x0, #2
   12250:	ldr	x1, [sp, #16]
   12254:	add	x0, x1, x0
   12258:	ldrh	w0, [x0, #2]
   1225c:	str	w0, [sp, #52]
   12260:	ldr	w0, [sp, #48]
   12264:	add	w0, w0, #0x1
   12268:	str	w0, [sp, #48]
   1226c:	ldr	w1, [sp, #48]
   12270:	ldr	w0, [sp, #44]
   12274:	cmp	w1, w0
   12278:	b.ge	1228c <inflateCodesUsed@@ZLIB_1.2.9+0x189c>  // b.tcont
   1227c:	ldr	w1, [sp, #36]
   12280:	ldr	w0, [sp, #52]
   12284:	cmp	w1, w0
   12288:	b.eq	123fc <inflateCodesUsed@@ZLIB_1.2.9+0x1a0c>  // b.none
   1228c:	ldr	w1, [sp, #48]
   12290:	ldr	w0, [sp, #40]
   12294:	cmp	w1, w0
   12298:	b.ge	122e4 <inflateCodesUsed@@ZLIB_1.2.9+0x18f4>  // b.tcont
   1229c:	ldr	x1, [sp, #24]
   122a0:	ldrsw	x0, [sp, #36]
   122a4:	add	x0, x0, #0x2ac
   122a8:	lsl	x0, x0, #2
   122ac:	add	x0, x1, x0
   122b0:	ldrh	w1, [x0, #12]
   122b4:	ldr	w0, [sp, #48]
   122b8:	and	w0, w0, #0xffff
   122bc:	add	w0, w1, w0
   122c0:	and	w2, w0, #0xffff
   122c4:	ldr	x1, [sp, #24]
   122c8:	ldrsw	x0, [sp, #36]
   122cc:	add	x0, x0, #0x2ac
   122d0:	lsl	x0, x0, #2
   122d4:	add	x0, x1, x0
   122d8:	mov	w1, w2
   122dc:	strh	w1, [x0, #12]
   122e0:	b	12398 <inflateCodesUsed@@ZLIB_1.2.9+0x19a8>
   122e4:	ldr	w0, [sp, #36]
   122e8:	cmp	w0, #0x0
   122ec:	b.eq	12358 <inflateCodesUsed@@ZLIB_1.2.9+0x1968>  // b.none
   122f0:	ldr	w1, [sp, #36]
   122f4:	ldr	w0, [sp, #56]
   122f8:	cmp	w1, w0
   122fc:	b.eq	1233c <inflateCodesUsed@@ZLIB_1.2.9+0x194c>  // b.none
   12300:	ldr	x1, [sp, #24]
   12304:	ldrsw	x0, [sp, #36]
   12308:	add	x0, x0, #0x2ac
   1230c:	lsl	x0, x0, #2
   12310:	add	x0, x1, x0
   12314:	ldrh	w0, [x0, #12]
   12318:	add	w0, w0, #0x1
   1231c:	and	w2, w0, #0xffff
   12320:	ldr	x1, [sp, #24]
   12324:	ldrsw	x0, [sp, #36]
   12328:	add	x0, x0, #0x2ac
   1232c:	lsl	x0, x0, #2
   12330:	add	x0, x1, x0
   12334:	mov	w1, w2
   12338:	strh	w1, [x0, #12]
   1233c:	ldr	x0, [sp, #24]
   12340:	ldrh	w0, [x0, #2812]
   12344:	add	w0, w0, #0x1
   12348:	and	w1, w0, #0xffff
   1234c:	ldr	x0, [sp, #24]
   12350:	strh	w1, [x0, #2812]
   12354:	b	12398 <inflateCodesUsed@@ZLIB_1.2.9+0x19a8>
   12358:	ldr	w0, [sp, #48]
   1235c:	cmp	w0, #0xa
   12360:	b.gt	12380 <inflateCodesUsed@@ZLIB_1.2.9+0x1990>
   12364:	ldr	x0, [sp, #24]
   12368:	ldrh	w0, [x0, #2816]
   1236c:	add	w0, w0, #0x1
   12370:	and	w1, w0, #0xffff
   12374:	ldr	x0, [sp, #24]
   12378:	strh	w1, [x0, #2816]
   1237c:	b	12398 <inflateCodesUsed@@ZLIB_1.2.9+0x19a8>
   12380:	ldr	x0, [sp, #24]
   12384:	ldrh	w0, [x0, #2820]
   12388:	add	w0, w0, #0x1
   1238c:	and	w1, w0, #0xffff
   12390:	ldr	x0, [sp, #24]
   12394:	strh	w1, [x0, #2820]
   12398:	str	wzr, [sp, #48]
   1239c:	ldr	w0, [sp, #36]
   123a0:	str	w0, [sp, #56]
   123a4:	ldr	w0, [sp, #52]
   123a8:	cmp	w0, #0x0
   123ac:	b.ne	123c4 <inflateCodesUsed@@ZLIB_1.2.9+0x19d4>  // b.any
   123b0:	mov	w0, #0x8a                  	// #138
   123b4:	str	w0, [sp, #44]
   123b8:	mov	w0, #0x3                   	// #3
   123bc:	str	w0, [sp, #40]
   123c0:	b	12400 <inflateCodesUsed@@ZLIB_1.2.9+0x1a10>
   123c4:	ldr	w1, [sp, #36]
   123c8:	ldr	w0, [sp, #52]
   123cc:	cmp	w1, w0
   123d0:	b.ne	123e8 <inflateCodesUsed@@ZLIB_1.2.9+0x19f8>  // b.any
   123d4:	mov	w0, #0x6                   	// #6
   123d8:	str	w0, [sp, #44]
   123dc:	mov	w0, #0x3                   	// #3
   123e0:	str	w0, [sp, #40]
   123e4:	b	12400 <inflateCodesUsed@@ZLIB_1.2.9+0x1a10>
   123e8:	mov	w0, #0x7                   	// #7
   123ec:	str	w0, [sp, #44]
   123f0:	mov	w0, #0x4                   	// #4
   123f4:	str	w0, [sp, #40]
   123f8:	b	12400 <inflateCodesUsed@@ZLIB_1.2.9+0x1a10>
   123fc:	nop
   12400:	ldr	w0, [sp, #60]
   12404:	add	w0, w0, #0x1
   12408:	str	w0, [sp, #60]
   1240c:	ldr	w1, [sp, #60]
   12410:	ldr	w0, [sp, #12]
   12414:	cmp	w1, w0
   12418:	b.le	1223c <inflateCodesUsed@@ZLIB_1.2.9+0x184c>
   1241c:	nop
   12420:	nop
   12424:	add	sp, sp, #0x40
   12428:	ret
   1242c:	sub	sp, sp, #0x80
   12430:	str	x0, [sp, #24]
   12434:	str	x1, [sp, #16]
   12438:	str	w2, [sp, #12]
   1243c:	mov	w0, #0xffffffff            	// #-1
   12440:	str	w0, [sp, #120]
   12444:	ldr	x0, [sp, #16]
   12448:	ldrh	w0, [x0, #2]
   1244c:	str	w0, [sp, #116]
   12450:	str	wzr, [sp, #112]
   12454:	mov	w0, #0x7                   	// #7
   12458:	str	w0, [sp, #108]
   1245c:	mov	w0, #0x4                   	// #4
   12460:	str	w0, [sp, #104]
   12464:	ldr	w0, [sp, #116]
   12468:	cmp	w0, #0x0
   1246c:	b.ne	12480 <inflateCodesUsed@@ZLIB_1.2.9+0x1a90>  // b.any
   12470:	mov	w0, #0x8a                  	// #138
   12474:	str	w0, [sp, #108]
   12478:	mov	w0, #0x3                   	// #3
   1247c:	str	w0, [sp, #104]
   12480:	str	wzr, [sp, #124]
   12484:	b	131e0 <inflateCodesUsed@@ZLIB_1.2.9+0x27f0>
   12488:	ldr	w0, [sp, #116]
   1248c:	str	w0, [sp, #100]
   12490:	ldrsw	x0, [sp, #124]
   12494:	add	x0, x0, #0x1
   12498:	lsl	x0, x0, #2
   1249c:	ldr	x1, [sp, #16]
   124a0:	add	x0, x1, x0
   124a4:	ldrh	w0, [x0, #2]
   124a8:	str	w0, [sp, #116]
   124ac:	ldr	w0, [sp, #112]
   124b0:	add	w0, w0, #0x1
   124b4:	str	w0, [sp, #112]
   124b8:	ldr	w1, [sp, #112]
   124bc:	ldr	w0, [sp, #108]
   124c0:	cmp	w1, w0
   124c4:	b.ge	124d8 <inflateCodesUsed@@ZLIB_1.2.9+0x1ae8>  // b.tcont
   124c8:	ldr	w1, [sp, #100]
   124cc:	ldr	w0, [sp, #116]
   124d0:	cmp	w1, w0
   124d4:	b.eq	131d0 <inflateCodesUsed@@ZLIB_1.2.9+0x27e0>  // b.none
   124d8:	ldr	w1, [sp, #112]
   124dc:	ldr	w0, [sp, #104]
   124e0:	cmp	w1, w0
   124e4:	b.ge	126ac <inflateCodesUsed@@ZLIB_1.2.9+0x1cbc>  // b.tcont
   124e8:	ldr	x1, [sp, #24]
   124ec:	ldrsw	x0, [sp, #100]
   124f0:	add	x0, x0, #0x2ac
   124f4:	lsl	x0, x0, #2
   124f8:	add	x0, x1, x0
   124fc:	ldrh	w0, [x0, #14]
   12500:	str	w0, [sp, #40]
   12504:	ldr	x0, [sp, #24]
   12508:	ldr	w1, [x0, #5940]
   1250c:	mov	w2, #0x10                  	// #16
   12510:	ldr	w0, [sp, #40]
   12514:	sub	w0, w2, w0
   12518:	cmp	w1, w0
   1251c:	b.le	1262c <inflateCodesUsed@@ZLIB_1.2.9+0x1c3c>
   12520:	ldr	x1, [sp, #24]
   12524:	ldrsw	x0, [sp, #100]
   12528:	add	x0, x0, #0x2ac
   1252c:	lsl	x0, x0, #2
   12530:	add	x0, x1, x0
   12534:	ldrh	w0, [x0, #12]
   12538:	str	w0, [sp, #36]
   1253c:	ldr	x0, [sp, #24]
   12540:	ldrh	w0, [x0, #5936]
   12544:	sxth	w1, w0
   12548:	ldr	w0, [sp, #36]
   1254c:	and	w0, w0, #0xffff
   12550:	mov	w2, w0
   12554:	ldr	x0, [sp, #24]
   12558:	ldr	w0, [x0, #5940]
   1255c:	lsl	w0, w2, w0
   12560:	sxth	w0, w0
   12564:	orr	w0, w1, w0
   12568:	sxth	w0, w0
   1256c:	and	w1, w0, #0xffff
   12570:	ldr	x0, [sp, #24]
   12574:	strh	w1, [x0, #5936]
   12578:	ldr	x0, [sp, #24]
   1257c:	ldrh	w4, [x0, #5936]
   12580:	ldr	x0, [sp, #24]
   12584:	ldr	x1, [x0, #16]
   12588:	ldr	x0, [sp, #24]
   1258c:	ldr	x0, [x0, #40]
   12590:	add	x3, x0, #0x1
   12594:	ldr	x2, [sp, #24]
   12598:	str	x3, [x2, #40]
   1259c:	add	x0, x1, x0
   125a0:	and	w1, w4, #0xff
   125a4:	strb	w1, [x0]
   125a8:	ldr	x0, [sp, #24]
   125ac:	ldrh	w0, [x0, #5936]
   125b0:	lsr	w0, w0, #8
   125b4:	and	w4, w0, #0xffff
   125b8:	ldr	x0, [sp, #24]
   125bc:	ldr	x1, [x0, #16]
   125c0:	ldr	x0, [sp, #24]
   125c4:	ldr	x0, [x0, #40]
   125c8:	add	x3, x0, #0x1
   125cc:	ldr	x2, [sp, #24]
   125d0:	str	x3, [x2, #40]
   125d4:	add	x0, x1, x0
   125d8:	and	w1, w4, #0xff
   125dc:	strb	w1, [x0]
   125e0:	ldr	w0, [sp, #36]
   125e4:	and	w0, w0, #0xffff
   125e8:	mov	w2, w0
   125ec:	ldr	x0, [sp, #24]
   125f0:	ldr	w0, [x0, #5940]
   125f4:	mov	w1, #0x10                  	// #16
   125f8:	sub	w0, w1, w0
   125fc:	asr	w0, w2, w0
   12600:	and	w1, w0, #0xffff
   12604:	ldr	x0, [sp, #24]
   12608:	strh	w1, [x0, #5936]
   1260c:	ldr	x0, [sp, #24]
   12610:	ldr	w1, [x0, #5940]
   12614:	ldr	w0, [sp, #40]
   12618:	sub	w0, w0, #0x10
   1261c:	add	w1, w1, w0
   12620:	ldr	x0, [sp, #24]
   12624:	str	w1, [x0, #5940]
   12628:	b	12690 <inflateCodesUsed@@ZLIB_1.2.9+0x1ca0>
   1262c:	ldr	x0, [sp, #24]
   12630:	ldrh	w0, [x0, #5936]
   12634:	sxth	w1, w0
   12638:	ldr	x2, [sp, #24]
   1263c:	ldrsw	x0, [sp, #100]
   12640:	add	x0, x0, #0x2ac
   12644:	lsl	x0, x0, #2
   12648:	add	x0, x2, x0
   1264c:	ldrh	w0, [x0, #12]
   12650:	mov	w2, w0
   12654:	ldr	x0, [sp, #24]
   12658:	ldr	w0, [x0, #5940]
   1265c:	lsl	w0, w2, w0
   12660:	sxth	w0, w0
   12664:	orr	w0, w1, w0
   12668:	sxth	w0, w0
   1266c:	and	w1, w0, #0xffff
   12670:	ldr	x0, [sp, #24]
   12674:	strh	w1, [x0, #5936]
   12678:	ldr	x0, [sp, #24]
   1267c:	ldr	w1, [x0, #5940]
   12680:	ldr	w0, [sp, #40]
   12684:	add	w1, w1, w0
   12688:	ldr	x0, [sp, #24]
   1268c:	str	w1, [x0, #5940]
   12690:	ldr	w0, [sp, #112]
   12694:	sub	w0, w0, #0x1
   12698:	str	w0, [sp, #112]
   1269c:	ldr	w0, [sp, #112]
   126a0:	cmp	w0, #0x0
   126a4:	b.ne	124e8 <inflateCodesUsed@@ZLIB_1.2.9+0x1af8>  // b.any
   126a8:	b	1316c <inflateCodesUsed@@ZLIB_1.2.9+0x277c>
   126ac:	ldr	w0, [sp, #100]
   126b0:	cmp	w0, #0x0
   126b4:	b.eq	12b74 <inflateCodesUsed@@ZLIB_1.2.9+0x2184>  // b.none
   126b8:	ldr	w1, [sp, #100]
   126bc:	ldr	w0, [sp, #120]
   126c0:	cmp	w1, w0
   126c4:	b.eq	1287c <inflateCodesUsed@@ZLIB_1.2.9+0x1e8c>  // b.none
   126c8:	ldr	x1, [sp, #24]
   126cc:	ldrsw	x0, [sp, #100]
   126d0:	add	x0, x0, #0x2ac
   126d4:	lsl	x0, x0, #2
   126d8:	add	x0, x1, x0
   126dc:	ldrh	w0, [x0, #14]
   126e0:	str	w0, [sp, #64]
   126e4:	ldr	x0, [sp, #24]
   126e8:	ldr	w1, [x0, #5940]
   126ec:	mov	w2, #0x10                  	// #16
   126f0:	ldr	w0, [sp, #64]
   126f4:	sub	w0, w2, w0
   126f8:	cmp	w1, w0
   126fc:	b.le	1280c <inflateCodesUsed@@ZLIB_1.2.9+0x1e1c>
   12700:	ldr	x1, [sp, #24]
   12704:	ldrsw	x0, [sp, #100]
   12708:	add	x0, x0, #0x2ac
   1270c:	lsl	x0, x0, #2
   12710:	add	x0, x1, x0
   12714:	ldrh	w0, [x0, #12]
   12718:	str	w0, [sp, #60]
   1271c:	ldr	x0, [sp, #24]
   12720:	ldrh	w0, [x0, #5936]
   12724:	sxth	w1, w0
   12728:	ldr	w0, [sp, #60]
   1272c:	and	w0, w0, #0xffff
   12730:	mov	w2, w0
   12734:	ldr	x0, [sp, #24]
   12738:	ldr	w0, [x0, #5940]
   1273c:	lsl	w0, w2, w0
   12740:	sxth	w0, w0
   12744:	orr	w0, w1, w0
   12748:	sxth	w0, w0
   1274c:	and	w1, w0, #0xffff
   12750:	ldr	x0, [sp, #24]
   12754:	strh	w1, [x0, #5936]
   12758:	ldr	x0, [sp, #24]
   1275c:	ldrh	w4, [x0, #5936]
   12760:	ldr	x0, [sp, #24]
   12764:	ldr	x1, [x0, #16]
   12768:	ldr	x0, [sp, #24]
   1276c:	ldr	x0, [x0, #40]
   12770:	add	x3, x0, #0x1
   12774:	ldr	x2, [sp, #24]
   12778:	str	x3, [x2, #40]
   1277c:	add	x0, x1, x0
   12780:	and	w1, w4, #0xff
   12784:	strb	w1, [x0]
   12788:	ldr	x0, [sp, #24]
   1278c:	ldrh	w0, [x0, #5936]
   12790:	lsr	w0, w0, #8
   12794:	and	w4, w0, #0xffff
   12798:	ldr	x0, [sp, #24]
   1279c:	ldr	x1, [x0, #16]
   127a0:	ldr	x0, [sp, #24]
   127a4:	ldr	x0, [x0, #40]
   127a8:	add	x3, x0, #0x1
   127ac:	ldr	x2, [sp, #24]
   127b0:	str	x3, [x2, #40]
   127b4:	add	x0, x1, x0
   127b8:	and	w1, w4, #0xff
   127bc:	strb	w1, [x0]
   127c0:	ldr	w0, [sp, #60]
   127c4:	and	w0, w0, #0xffff
   127c8:	mov	w2, w0
   127cc:	ldr	x0, [sp, #24]
   127d0:	ldr	w0, [x0, #5940]
   127d4:	mov	w1, #0x10                  	// #16
   127d8:	sub	w0, w1, w0
   127dc:	asr	w0, w2, w0
   127e0:	and	w1, w0, #0xffff
   127e4:	ldr	x0, [sp, #24]
   127e8:	strh	w1, [x0, #5936]
   127ec:	ldr	x0, [sp, #24]
   127f0:	ldr	w1, [x0, #5940]
   127f4:	ldr	w0, [sp, #64]
   127f8:	sub	w0, w0, #0x10
   127fc:	add	w1, w1, w0
   12800:	ldr	x0, [sp, #24]
   12804:	str	w1, [x0, #5940]
   12808:	b	12870 <inflateCodesUsed@@ZLIB_1.2.9+0x1e80>
   1280c:	ldr	x0, [sp, #24]
   12810:	ldrh	w0, [x0, #5936]
   12814:	sxth	w1, w0
   12818:	ldr	x2, [sp, #24]
   1281c:	ldrsw	x0, [sp, #100]
   12820:	add	x0, x0, #0x2ac
   12824:	lsl	x0, x0, #2
   12828:	add	x0, x2, x0
   1282c:	ldrh	w0, [x0, #12]
   12830:	mov	w2, w0
   12834:	ldr	x0, [sp, #24]
   12838:	ldr	w0, [x0, #5940]
   1283c:	lsl	w0, w2, w0
   12840:	sxth	w0, w0
   12844:	orr	w0, w1, w0
   12848:	sxth	w0, w0
   1284c:	and	w1, w0, #0xffff
   12850:	ldr	x0, [sp, #24]
   12854:	strh	w1, [x0, #5936]
   12858:	ldr	x0, [sp, #24]
   1285c:	ldr	w1, [x0, #5940]
   12860:	ldr	w0, [sp, #64]
   12864:	add	w1, w1, w0
   12868:	ldr	x0, [sp, #24]
   1286c:	str	w1, [x0, #5940]
   12870:	ldr	w0, [sp, #112]
   12874:	sub	w0, w0, #0x1
   12878:	str	w0, [sp, #112]
   1287c:	ldr	x0, [sp, #24]
   12880:	ldrh	w0, [x0, #2814]
   12884:	str	w0, [sp, #56]
   12888:	ldr	x0, [sp, #24]
   1288c:	ldr	w1, [x0, #5940]
   12890:	mov	w2, #0x10                  	// #16
   12894:	ldr	w0, [sp, #56]
   12898:	sub	w0, w2, w0
   1289c:	cmp	w1, w0
   128a0:	b.le	129a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1fb0>
   128a4:	ldr	x0, [sp, #24]
   128a8:	ldrh	w0, [x0, #2812]
   128ac:	str	w0, [sp, #52]
   128b0:	ldr	x0, [sp, #24]
   128b4:	ldrh	w0, [x0, #5936]
   128b8:	sxth	w1, w0
   128bc:	ldr	w0, [sp, #52]
   128c0:	and	w0, w0, #0xffff
   128c4:	mov	w2, w0
   128c8:	ldr	x0, [sp, #24]
   128cc:	ldr	w0, [x0, #5940]
   128d0:	lsl	w0, w2, w0
   128d4:	sxth	w0, w0
   128d8:	orr	w0, w1, w0
   128dc:	sxth	w0, w0
   128e0:	and	w1, w0, #0xffff
   128e4:	ldr	x0, [sp, #24]
   128e8:	strh	w1, [x0, #5936]
   128ec:	ldr	x0, [sp, #24]
   128f0:	ldrh	w4, [x0, #5936]
   128f4:	ldr	x0, [sp, #24]
   128f8:	ldr	x1, [x0, #16]
   128fc:	ldr	x0, [sp, #24]
   12900:	ldr	x0, [x0, #40]
   12904:	add	x3, x0, #0x1
   12908:	ldr	x2, [sp, #24]
   1290c:	str	x3, [x2, #40]
   12910:	add	x0, x1, x0
   12914:	and	w1, w4, #0xff
   12918:	strb	w1, [x0]
   1291c:	ldr	x0, [sp, #24]
   12920:	ldrh	w0, [x0, #5936]
   12924:	lsr	w0, w0, #8
   12928:	and	w4, w0, #0xffff
   1292c:	ldr	x0, [sp, #24]
   12930:	ldr	x1, [x0, #16]
   12934:	ldr	x0, [sp, #24]
   12938:	ldr	x0, [x0, #40]
   1293c:	add	x3, x0, #0x1
   12940:	ldr	x2, [sp, #24]
   12944:	str	x3, [x2, #40]
   12948:	add	x0, x1, x0
   1294c:	and	w1, w4, #0xff
   12950:	strb	w1, [x0]
   12954:	ldr	w0, [sp, #52]
   12958:	and	w0, w0, #0xffff
   1295c:	mov	w2, w0
   12960:	ldr	x0, [sp, #24]
   12964:	ldr	w0, [x0, #5940]
   12968:	mov	w1, #0x10                  	// #16
   1296c:	sub	w0, w1, w0
   12970:	asr	w0, w2, w0
   12974:	and	w1, w0, #0xffff
   12978:	ldr	x0, [sp, #24]
   1297c:	strh	w1, [x0, #5936]
   12980:	ldr	x0, [sp, #24]
   12984:	ldr	w1, [x0, #5940]
   12988:	ldr	w0, [sp, #56]
   1298c:	sub	w0, w0, #0x10
   12990:	add	w1, w1, w0
   12994:	ldr	x0, [sp, #24]
   12998:	str	w1, [x0, #5940]
   1299c:	b	129f4 <inflateCodesUsed@@ZLIB_1.2.9+0x2004>
   129a0:	ldr	x0, [sp, #24]
   129a4:	ldrh	w0, [x0, #5936]
   129a8:	sxth	w1, w0
   129ac:	ldr	x0, [sp, #24]
   129b0:	ldrh	w0, [x0, #2812]
   129b4:	mov	w2, w0
   129b8:	ldr	x0, [sp, #24]
   129bc:	ldr	w0, [x0, #5940]
   129c0:	lsl	w0, w2, w0
   129c4:	sxth	w0, w0
   129c8:	orr	w0, w1, w0
   129cc:	sxth	w0, w0
   129d0:	and	w1, w0, #0xffff
   129d4:	ldr	x0, [sp, #24]
   129d8:	strh	w1, [x0, #5936]
   129dc:	ldr	x0, [sp, #24]
   129e0:	ldr	w1, [x0, #5940]
   129e4:	ldr	w0, [sp, #56]
   129e8:	add	w1, w1, w0
   129ec:	ldr	x0, [sp, #24]
   129f0:	str	w1, [x0, #5940]
   129f4:	mov	w0, #0x2                   	// #2
   129f8:	str	w0, [sp, #48]
   129fc:	ldr	x0, [sp, #24]
   12a00:	ldr	w1, [x0, #5940]
   12a04:	mov	w2, #0x10                  	// #16
   12a08:	ldr	w0, [sp, #48]
   12a0c:	sub	w0, w2, w0
   12a10:	cmp	w1, w0
   12a14:	b.le	12b14 <inflateCodesUsed@@ZLIB_1.2.9+0x2124>
   12a18:	ldr	w0, [sp, #112]
   12a1c:	sub	w0, w0, #0x3
   12a20:	str	w0, [sp, #44]
   12a24:	ldr	x0, [sp, #24]
   12a28:	ldrh	w0, [x0, #5936]
   12a2c:	sxth	w1, w0
   12a30:	ldr	w0, [sp, #44]
   12a34:	and	w0, w0, #0xffff
   12a38:	mov	w2, w0
   12a3c:	ldr	x0, [sp, #24]
   12a40:	ldr	w0, [x0, #5940]
   12a44:	lsl	w0, w2, w0
   12a48:	sxth	w0, w0
   12a4c:	orr	w0, w1, w0
   12a50:	sxth	w0, w0
   12a54:	and	w1, w0, #0xffff
   12a58:	ldr	x0, [sp, #24]
   12a5c:	strh	w1, [x0, #5936]
   12a60:	ldr	x0, [sp, #24]
   12a64:	ldrh	w4, [x0, #5936]
   12a68:	ldr	x0, [sp, #24]
   12a6c:	ldr	x1, [x0, #16]
   12a70:	ldr	x0, [sp, #24]
   12a74:	ldr	x0, [x0, #40]
   12a78:	add	x3, x0, #0x1
   12a7c:	ldr	x2, [sp, #24]
   12a80:	str	x3, [x2, #40]
   12a84:	add	x0, x1, x0
   12a88:	and	w1, w4, #0xff
   12a8c:	strb	w1, [x0]
   12a90:	ldr	x0, [sp, #24]
   12a94:	ldrh	w0, [x0, #5936]
   12a98:	lsr	w0, w0, #8
   12a9c:	and	w4, w0, #0xffff
   12aa0:	ldr	x0, [sp, #24]
   12aa4:	ldr	x1, [x0, #16]
   12aa8:	ldr	x0, [sp, #24]
   12aac:	ldr	x0, [x0, #40]
   12ab0:	add	x3, x0, #0x1
   12ab4:	ldr	x2, [sp, #24]
   12ab8:	str	x3, [x2, #40]
   12abc:	add	x0, x1, x0
   12ac0:	and	w1, w4, #0xff
   12ac4:	strb	w1, [x0]
   12ac8:	ldr	w0, [sp, #44]
   12acc:	and	w0, w0, #0xffff
   12ad0:	mov	w2, w0
   12ad4:	ldr	x0, [sp, #24]
   12ad8:	ldr	w0, [x0, #5940]
   12adc:	mov	w1, #0x10                  	// #16
   12ae0:	sub	w0, w1, w0
   12ae4:	asr	w0, w2, w0
   12ae8:	and	w1, w0, #0xffff
   12aec:	ldr	x0, [sp, #24]
   12af0:	strh	w1, [x0, #5936]
   12af4:	ldr	x0, [sp, #24]
   12af8:	ldr	w1, [x0, #5940]
   12afc:	ldr	w0, [sp, #48]
   12b00:	sub	w0, w0, #0x10
   12b04:	add	w1, w1, w0
   12b08:	ldr	x0, [sp, #24]
   12b0c:	str	w1, [x0, #5940]
   12b10:	b	1316c <inflateCodesUsed@@ZLIB_1.2.9+0x277c>
   12b14:	ldr	x0, [sp, #24]
   12b18:	ldrh	w0, [x0, #5936]
   12b1c:	sxth	w1, w0
   12b20:	ldr	w0, [sp, #112]
   12b24:	and	w0, w0, #0xffff
   12b28:	sub	w0, w0, #0x3
   12b2c:	and	w0, w0, #0xffff
   12b30:	mov	w2, w0
   12b34:	ldr	x0, [sp, #24]
   12b38:	ldr	w0, [x0, #5940]
   12b3c:	lsl	w0, w2, w0
   12b40:	sxth	w0, w0
   12b44:	orr	w0, w1, w0
   12b48:	sxth	w0, w0
   12b4c:	and	w1, w0, #0xffff
   12b50:	ldr	x0, [sp, #24]
   12b54:	strh	w1, [x0, #5936]
   12b58:	ldr	x0, [sp, #24]
   12b5c:	ldr	w1, [x0, #5940]
   12b60:	ldr	w0, [sp, #48]
   12b64:	add	w1, w1, w0
   12b68:	ldr	x0, [sp, #24]
   12b6c:	str	w1, [x0, #5940]
   12b70:	b	1316c <inflateCodesUsed@@ZLIB_1.2.9+0x277c>
   12b74:	ldr	w0, [sp, #112]
   12b78:	cmp	w0, #0xa
   12b7c:	b.gt	12e78 <inflateCodesUsed@@ZLIB_1.2.9+0x2488>
   12b80:	ldr	x0, [sp, #24]
   12b84:	ldrh	w0, [x0, #2818]
   12b88:	str	w0, [sp, #80]
   12b8c:	ldr	x0, [sp, #24]
   12b90:	ldr	w1, [x0, #5940]
   12b94:	mov	w2, #0x10                  	// #16
   12b98:	ldr	w0, [sp, #80]
   12b9c:	sub	w0, w2, w0
   12ba0:	cmp	w1, w0
   12ba4:	b.le	12ca4 <inflateCodesUsed@@ZLIB_1.2.9+0x22b4>
   12ba8:	ldr	x0, [sp, #24]
   12bac:	ldrh	w0, [x0, #2816]
   12bb0:	str	w0, [sp, #76]
   12bb4:	ldr	x0, [sp, #24]
   12bb8:	ldrh	w0, [x0, #5936]
   12bbc:	sxth	w1, w0
   12bc0:	ldr	w0, [sp, #76]
   12bc4:	and	w0, w0, #0xffff
   12bc8:	mov	w2, w0
   12bcc:	ldr	x0, [sp, #24]
   12bd0:	ldr	w0, [x0, #5940]
   12bd4:	lsl	w0, w2, w0
   12bd8:	sxth	w0, w0
   12bdc:	orr	w0, w1, w0
   12be0:	sxth	w0, w0
   12be4:	and	w1, w0, #0xffff
   12be8:	ldr	x0, [sp, #24]
   12bec:	strh	w1, [x0, #5936]
   12bf0:	ldr	x0, [sp, #24]
   12bf4:	ldrh	w4, [x0, #5936]
   12bf8:	ldr	x0, [sp, #24]
   12bfc:	ldr	x1, [x0, #16]
   12c00:	ldr	x0, [sp, #24]
   12c04:	ldr	x0, [x0, #40]
   12c08:	add	x3, x0, #0x1
   12c0c:	ldr	x2, [sp, #24]
   12c10:	str	x3, [x2, #40]
   12c14:	add	x0, x1, x0
   12c18:	and	w1, w4, #0xff
   12c1c:	strb	w1, [x0]
   12c20:	ldr	x0, [sp, #24]
   12c24:	ldrh	w0, [x0, #5936]
   12c28:	lsr	w0, w0, #8
   12c2c:	and	w4, w0, #0xffff
   12c30:	ldr	x0, [sp, #24]
   12c34:	ldr	x1, [x0, #16]
   12c38:	ldr	x0, [sp, #24]
   12c3c:	ldr	x0, [x0, #40]
   12c40:	add	x3, x0, #0x1
   12c44:	ldr	x2, [sp, #24]
   12c48:	str	x3, [x2, #40]
   12c4c:	add	x0, x1, x0
   12c50:	and	w1, w4, #0xff
   12c54:	strb	w1, [x0]
   12c58:	ldr	w0, [sp, #76]
   12c5c:	and	w0, w0, #0xffff
   12c60:	mov	w2, w0
   12c64:	ldr	x0, [sp, #24]
   12c68:	ldr	w0, [x0, #5940]
   12c6c:	mov	w1, #0x10                  	// #16
   12c70:	sub	w0, w1, w0
   12c74:	asr	w0, w2, w0
   12c78:	and	w1, w0, #0xffff
   12c7c:	ldr	x0, [sp, #24]
   12c80:	strh	w1, [x0, #5936]
   12c84:	ldr	x0, [sp, #24]
   12c88:	ldr	w1, [x0, #5940]
   12c8c:	ldr	w0, [sp, #80]
   12c90:	sub	w0, w0, #0x10
   12c94:	add	w1, w1, w0
   12c98:	ldr	x0, [sp, #24]
   12c9c:	str	w1, [x0, #5940]
   12ca0:	b	12cf8 <inflateCodesUsed@@ZLIB_1.2.9+0x2308>
   12ca4:	ldr	x0, [sp, #24]
   12ca8:	ldrh	w0, [x0, #5936]
   12cac:	sxth	w1, w0
   12cb0:	ldr	x0, [sp, #24]
   12cb4:	ldrh	w0, [x0, #2816]
   12cb8:	mov	w2, w0
   12cbc:	ldr	x0, [sp, #24]
   12cc0:	ldr	w0, [x0, #5940]
   12cc4:	lsl	w0, w2, w0
   12cc8:	sxth	w0, w0
   12ccc:	orr	w0, w1, w0
   12cd0:	sxth	w0, w0
   12cd4:	and	w1, w0, #0xffff
   12cd8:	ldr	x0, [sp, #24]
   12cdc:	strh	w1, [x0, #5936]
   12ce0:	ldr	x0, [sp, #24]
   12ce4:	ldr	w1, [x0, #5940]
   12ce8:	ldr	w0, [sp, #80]
   12cec:	add	w1, w1, w0
   12cf0:	ldr	x0, [sp, #24]
   12cf4:	str	w1, [x0, #5940]
   12cf8:	mov	w0, #0x3                   	// #3
   12cfc:	str	w0, [sp, #72]
   12d00:	ldr	x0, [sp, #24]
   12d04:	ldr	w1, [x0, #5940]
   12d08:	mov	w2, #0x10                  	// #16
   12d0c:	ldr	w0, [sp, #72]
   12d10:	sub	w0, w2, w0
   12d14:	cmp	w1, w0
   12d18:	b.le	12e18 <inflateCodesUsed@@ZLIB_1.2.9+0x2428>
   12d1c:	ldr	w0, [sp, #112]
   12d20:	sub	w0, w0, #0x3
   12d24:	str	w0, [sp, #68]
   12d28:	ldr	x0, [sp, #24]
   12d2c:	ldrh	w0, [x0, #5936]
   12d30:	sxth	w1, w0
   12d34:	ldr	w0, [sp, #68]
   12d38:	and	w0, w0, #0xffff
   12d3c:	mov	w2, w0
   12d40:	ldr	x0, [sp, #24]
   12d44:	ldr	w0, [x0, #5940]
   12d48:	lsl	w0, w2, w0
   12d4c:	sxth	w0, w0
   12d50:	orr	w0, w1, w0
   12d54:	sxth	w0, w0
   12d58:	and	w1, w0, #0xffff
   12d5c:	ldr	x0, [sp, #24]
   12d60:	strh	w1, [x0, #5936]
   12d64:	ldr	x0, [sp, #24]
   12d68:	ldrh	w4, [x0, #5936]
   12d6c:	ldr	x0, [sp, #24]
   12d70:	ldr	x1, [x0, #16]
   12d74:	ldr	x0, [sp, #24]
   12d78:	ldr	x0, [x0, #40]
   12d7c:	add	x3, x0, #0x1
   12d80:	ldr	x2, [sp, #24]
   12d84:	str	x3, [x2, #40]
   12d88:	add	x0, x1, x0
   12d8c:	and	w1, w4, #0xff
   12d90:	strb	w1, [x0]
   12d94:	ldr	x0, [sp, #24]
   12d98:	ldrh	w0, [x0, #5936]
   12d9c:	lsr	w0, w0, #8
   12da0:	and	w4, w0, #0xffff
   12da4:	ldr	x0, [sp, #24]
   12da8:	ldr	x1, [x0, #16]
   12dac:	ldr	x0, [sp, #24]
   12db0:	ldr	x0, [x0, #40]
   12db4:	add	x3, x0, #0x1
   12db8:	ldr	x2, [sp, #24]
   12dbc:	str	x3, [x2, #40]
   12dc0:	add	x0, x1, x0
   12dc4:	and	w1, w4, #0xff
   12dc8:	strb	w1, [x0]
   12dcc:	ldr	w0, [sp, #68]
   12dd0:	and	w0, w0, #0xffff
   12dd4:	mov	w2, w0
   12dd8:	ldr	x0, [sp, #24]
   12ddc:	ldr	w0, [x0, #5940]
   12de0:	mov	w1, #0x10                  	// #16
   12de4:	sub	w0, w1, w0
   12de8:	asr	w0, w2, w0
   12dec:	and	w1, w0, #0xffff
   12df0:	ldr	x0, [sp, #24]
   12df4:	strh	w1, [x0, #5936]
   12df8:	ldr	x0, [sp, #24]
   12dfc:	ldr	w1, [x0, #5940]
   12e00:	ldr	w0, [sp, #72]
   12e04:	sub	w0, w0, #0x10
   12e08:	add	w1, w1, w0
   12e0c:	ldr	x0, [sp, #24]
   12e10:	str	w1, [x0, #5940]
   12e14:	b	1316c <inflateCodesUsed@@ZLIB_1.2.9+0x277c>
   12e18:	ldr	x0, [sp, #24]
   12e1c:	ldrh	w0, [x0, #5936]
   12e20:	sxth	w1, w0
   12e24:	ldr	w0, [sp, #112]
   12e28:	and	w0, w0, #0xffff
   12e2c:	sub	w0, w0, #0x3
   12e30:	and	w0, w0, #0xffff
   12e34:	mov	w2, w0
   12e38:	ldr	x0, [sp, #24]
   12e3c:	ldr	w0, [x0, #5940]
   12e40:	lsl	w0, w2, w0
   12e44:	sxth	w0, w0
   12e48:	orr	w0, w1, w0
   12e4c:	sxth	w0, w0
   12e50:	and	w1, w0, #0xffff
   12e54:	ldr	x0, [sp, #24]
   12e58:	strh	w1, [x0, #5936]
   12e5c:	ldr	x0, [sp, #24]
   12e60:	ldr	w1, [x0, #5940]
   12e64:	ldr	w0, [sp, #72]
   12e68:	add	w1, w1, w0
   12e6c:	ldr	x0, [sp, #24]
   12e70:	str	w1, [x0, #5940]
   12e74:	b	1316c <inflateCodesUsed@@ZLIB_1.2.9+0x277c>
   12e78:	ldr	x0, [sp, #24]
   12e7c:	ldrh	w0, [x0, #2822]
   12e80:	str	w0, [sp, #96]
   12e84:	ldr	x0, [sp, #24]
   12e88:	ldr	w1, [x0, #5940]
   12e8c:	mov	w2, #0x10                  	// #16
   12e90:	ldr	w0, [sp, #96]
   12e94:	sub	w0, w2, w0
   12e98:	cmp	w1, w0
   12e9c:	b.le	12f9c <inflateCodesUsed@@ZLIB_1.2.9+0x25ac>
   12ea0:	ldr	x0, [sp, #24]
   12ea4:	ldrh	w0, [x0, #2820]
   12ea8:	str	w0, [sp, #92]
   12eac:	ldr	x0, [sp, #24]
   12eb0:	ldrh	w0, [x0, #5936]
   12eb4:	sxth	w1, w0
   12eb8:	ldr	w0, [sp, #92]
   12ebc:	and	w0, w0, #0xffff
   12ec0:	mov	w2, w0
   12ec4:	ldr	x0, [sp, #24]
   12ec8:	ldr	w0, [x0, #5940]
   12ecc:	lsl	w0, w2, w0
   12ed0:	sxth	w0, w0
   12ed4:	orr	w0, w1, w0
   12ed8:	sxth	w0, w0
   12edc:	and	w1, w0, #0xffff
   12ee0:	ldr	x0, [sp, #24]
   12ee4:	strh	w1, [x0, #5936]
   12ee8:	ldr	x0, [sp, #24]
   12eec:	ldrh	w4, [x0, #5936]
   12ef0:	ldr	x0, [sp, #24]
   12ef4:	ldr	x1, [x0, #16]
   12ef8:	ldr	x0, [sp, #24]
   12efc:	ldr	x0, [x0, #40]
   12f00:	add	x3, x0, #0x1
   12f04:	ldr	x2, [sp, #24]
   12f08:	str	x3, [x2, #40]
   12f0c:	add	x0, x1, x0
   12f10:	and	w1, w4, #0xff
   12f14:	strb	w1, [x0]
   12f18:	ldr	x0, [sp, #24]
   12f1c:	ldrh	w0, [x0, #5936]
   12f20:	lsr	w0, w0, #8
   12f24:	and	w4, w0, #0xffff
   12f28:	ldr	x0, [sp, #24]
   12f2c:	ldr	x1, [x0, #16]
   12f30:	ldr	x0, [sp, #24]
   12f34:	ldr	x0, [x0, #40]
   12f38:	add	x3, x0, #0x1
   12f3c:	ldr	x2, [sp, #24]
   12f40:	str	x3, [x2, #40]
   12f44:	add	x0, x1, x0
   12f48:	and	w1, w4, #0xff
   12f4c:	strb	w1, [x0]
   12f50:	ldr	w0, [sp, #92]
   12f54:	and	w0, w0, #0xffff
   12f58:	mov	w2, w0
   12f5c:	ldr	x0, [sp, #24]
   12f60:	ldr	w0, [x0, #5940]
   12f64:	mov	w1, #0x10                  	// #16
   12f68:	sub	w0, w1, w0
   12f6c:	asr	w0, w2, w0
   12f70:	and	w1, w0, #0xffff
   12f74:	ldr	x0, [sp, #24]
   12f78:	strh	w1, [x0, #5936]
   12f7c:	ldr	x0, [sp, #24]
   12f80:	ldr	w1, [x0, #5940]
   12f84:	ldr	w0, [sp, #96]
   12f88:	sub	w0, w0, #0x10
   12f8c:	add	w1, w1, w0
   12f90:	ldr	x0, [sp, #24]
   12f94:	str	w1, [x0, #5940]
   12f98:	b	12ff0 <inflateCodesUsed@@ZLIB_1.2.9+0x2600>
   12f9c:	ldr	x0, [sp, #24]
   12fa0:	ldrh	w0, [x0, #5936]
   12fa4:	sxth	w1, w0
   12fa8:	ldr	x0, [sp, #24]
   12fac:	ldrh	w0, [x0, #2820]
   12fb0:	mov	w2, w0
   12fb4:	ldr	x0, [sp, #24]
   12fb8:	ldr	w0, [x0, #5940]
   12fbc:	lsl	w0, w2, w0
   12fc0:	sxth	w0, w0
   12fc4:	orr	w0, w1, w0
   12fc8:	sxth	w0, w0
   12fcc:	and	w1, w0, #0xffff
   12fd0:	ldr	x0, [sp, #24]
   12fd4:	strh	w1, [x0, #5936]
   12fd8:	ldr	x0, [sp, #24]
   12fdc:	ldr	w1, [x0, #5940]
   12fe0:	ldr	w0, [sp, #96]
   12fe4:	add	w1, w1, w0
   12fe8:	ldr	x0, [sp, #24]
   12fec:	str	w1, [x0, #5940]
   12ff0:	mov	w0, #0x7                   	// #7
   12ff4:	str	w0, [sp, #88]
   12ff8:	ldr	x0, [sp, #24]
   12ffc:	ldr	w1, [x0, #5940]
   13000:	mov	w2, #0x10                  	// #16
   13004:	ldr	w0, [sp, #88]
   13008:	sub	w0, w2, w0
   1300c:	cmp	w1, w0
   13010:	b.le	13110 <inflateCodesUsed@@ZLIB_1.2.9+0x2720>
   13014:	ldr	w0, [sp, #112]
   13018:	sub	w0, w0, #0xb
   1301c:	str	w0, [sp, #84]
   13020:	ldr	x0, [sp, #24]
   13024:	ldrh	w0, [x0, #5936]
   13028:	sxth	w1, w0
   1302c:	ldr	w0, [sp, #84]
   13030:	and	w0, w0, #0xffff
   13034:	mov	w2, w0
   13038:	ldr	x0, [sp, #24]
   1303c:	ldr	w0, [x0, #5940]
   13040:	lsl	w0, w2, w0
   13044:	sxth	w0, w0
   13048:	orr	w0, w1, w0
   1304c:	sxth	w0, w0
   13050:	and	w1, w0, #0xffff
   13054:	ldr	x0, [sp, #24]
   13058:	strh	w1, [x0, #5936]
   1305c:	ldr	x0, [sp, #24]
   13060:	ldrh	w4, [x0, #5936]
   13064:	ldr	x0, [sp, #24]
   13068:	ldr	x1, [x0, #16]
   1306c:	ldr	x0, [sp, #24]
   13070:	ldr	x0, [x0, #40]
   13074:	add	x3, x0, #0x1
   13078:	ldr	x2, [sp, #24]
   1307c:	str	x3, [x2, #40]
   13080:	add	x0, x1, x0
   13084:	and	w1, w4, #0xff
   13088:	strb	w1, [x0]
   1308c:	ldr	x0, [sp, #24]
   13090:	ldrh	w0, [x0, #5936]
   13094:	lsr	w0, w0, #8
   13098:	and	w4, w0, #0xffff
   1309c:	ldr	x0, [sp, #24]
   130a0:	ldr	x1, [x0, #16]
   130a4:	ldr	x0, [sp, #24]
   130a8:	ldr	x0, [x0, #40]
   130ac:	add	x3, x0, #0x1
   130b0:	ldr	x2, [sp, #24]
   130b4:	str	x3, [x2, #40]
   130b8:	add	x0, x1, x0
   130bc:	and	w1, w4, #0xff
   130c0:	strb	w1, [x0]
   130c4:	ldr	w0, [sp, #84]
   130c8:	and	w0, w0, #0xffff
   130cc:	mov	w2, w0
   130d0:	ldr	x0, [sp, #24]
   130d4:	ldr	w0, [x0, #5940]
   130d8:	mov	w1, #0x10                  	// #16
   130dc:	sub	w0, w1, w0
   130e0:	asr	w0, w2, w0
   130e4:	and	w1, w0, #0xffff
   130e8:	ldr	x0, [sp, #24]
   130ec:	strh	w1, [x0, #5936]
   130f0:	ldr	x0, [sp, #24]
   130f4:	ldr	w1, [x0, #5940]
   130f8:	ldr	w0, [sp, #88]
   130fc:	sub	w0, w0, #0x10
   13100:	add	w1, w1, w0
   13104:	ldr	x0, [sp, #24]
   13108:	str	w1, [x0, #5940]
   1310c:	b	1316c <inflateCodesUsed@@ZLIB_1.2.9+0x277c>
   13110:	ldr	x0, [sp, #24]
   13114:	ldrh	w0, [x0, #5936]
   13118:	sxth	w1, w0
   1311c:	ldr	w0, [sp, #112]
   13120:	and	w0, w0, #0xffff
   13124:	sub	w0, w0, #0xb
   13128:	and	w0, w0, #0xffff
   1312c:	mov	w2, w0
   13130:	ldr	x0, [sp, #24]
   13134:	ldr	w0, [x0, #5940]
   13138:	lsl	w0, w2, w0
   1313c:	sxth	w0, w0
   13140:	orr	w0, w1, w0
   13144:	sxth	w0, w0
   13148:	and	w1, w0, #0xffff
   1314c:	ldr	x0, [sp, #24]
   13150:	strh	w1, [x0, #5936]
   13154:	ldr	x0, [sp, #24]
   13158:	ldr	w1, [x0, #5940]
   1315c:	ldr	w0, [sp, #88]
   13160:	add	w1, w1, w0
   13164:	ldr	x0, [sp, #24]
   13168:	str	w1, [x0, #5940]
   1316c:	str	wzr, [sp, #112]
   13170:	ldr	w0, [sp, #100]
   13174:	str	w0, [sp, #120]
   13178:	ldr	w0, [sp, #116]
   1317c:	cmp	w0, #0x0
   13180:	b.ne	13198 <inflateCodesUsed@@ZLIB_1.2.9+0x27a8>  // b.any
   13184:	mov	w0, #0x8a                  	// #138
   13188:	str	w0, [sp, #108]
   1318c:	mov	w0, #0x3                   	// #3
   13190:	str	w0, [sp, #104]
   13194:	b	131d4 <inflateCodesUsed@@ZLIB_1.2.9+0x27e4>
   13198:	ldr	w1, [sp, #100]
   1319c:	ldr	w0, [sp, #116]
   131a0:	cmp	w1, w0
   131a4:	b.ne	131bc <inflateCodesUsed@@ZLIB_1.2.9+0x27cc>  // b.any
   131a8:	mov	w0, #0x6                   	// #6
   131ac:	str	w0, [sp, #108]
   131b0:	mov	w0, #0x3                   	// #3
   131b4:	str	w0, [sp, #104]
   131b8:	b	131d4 <inflateCodesUsed@@ZLIB_1.2.9+0x27e4>
   131bc:	mov	w0, #0x7                   	// #7
   131c0:	str	w0, [sp, #108]
   131c4:	mov	w0, #0x4                   	// #4
   131c8:	str	w0, [sp, #104]
   131cc:	b	131d4 <inflateCodesUsed@@ZLIB_1.2.9+0x27e4>
   131d0:	nop
   131d4:	ldr	w0, [sp, #124]
   131d8:	add	w0, w0, #0x1
   131dc:	str	w0, [sp, #124]
   131e0:	ldr	w1, [sp, #124]
   131e4:	ldr	w0, [sp, #12]
   131e8:	cmp	w1, w0
   131ec:	b.le	12488 <inflateCodesUsed@@ZLIB_1.2.9+0x1a98>
   131f0:	nop
   131f4:	nop
   131f8:	add	sp, sp, #0x80
   131fc:	ret
   13200:	stp	x29, x30, [sp, #-48]!
   13204:	mov	x29, sp
   13208:	str	x0, [sp, #24]
   1320c:	ldr	x0, [sp, #24]
   13210:	add	x1, x0, #0xd4
   13214:	ldr	x0, [sp, #24]
   13218:	ldr	w0, [x0, #2912]
   1321c:	mov	w2, w0
   13220:	ldr	x0, [sp, #24]
   13224:	bl	121c4 <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>
   13228:	ldr	x0, [sp, #24]
   1322c:	add	x1, x0, #0x9c8
   13230:	ldr	x0, [sp, #24]
   13234:	ldr	w0, [x0, #2936]
   13238:	mov	w2, w0
   1323c:	ldr	x0, [sp, #24]
   13240:	bl	121c4 <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>
   13244:	ldr	x0, [sp, #24]
   13248:	add	x0, x0, #0xb88
   1324c:	mov	x1, x0
   13250:	ldr	x0, [sp, #24]
   13254:	bl	11d3c <inflateCodesUsed@@ZLIB_1.2.9+0x134c>
   13258:	mov	w0, #0x12                  	// #18
   1325c:	str	w0, [sp, #44]
   13260:	b	132a0 <inflateCodesUsed@@ZLIB_1.2.9+0x28b0>
   13264:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   13268:	add	x1, x0, #0x808
   1326c:	ldrsw	x0, [sp, #44]
   13270:	ldrb	w0, [x1, x0]
   13274:	ldr	x1, [sp, #24]
   13278:	sxtw	x0, w0
   1327c:	add	x0, x0, #0x2ac
   13280:	lsl	x0, x0, #2
   13284:	add	x0, x1, x0
   13288:	ldrh	w0, [x0, #14]
   1328c:	cmp	w0, #0x0
   13290:	b.ne	132b0 <inflateCodesUsed@@ZLIB_1.2.9+0x28c0>  // b.any
   13294:	ldr	w0, [sp, #44]
   13298:	sub	w0, w0, #0x1
   1329c:	str	w0, [sp, #44]
   132a0:	ldr	w0, [sp, #44]
   132a4:	cmp	w0, #0x2
   132a8:	b.gt	13264 <inflateCodesUsed@@ZLIB_1.2.9+0x2874>
   132ac:	b	132b4 <inflateCodesUsed@@ZLIB_1.2.9+0x28c4>
   132b0:	nop
   132b4:	ldr	x0, [sp, #24]
   132b8:	ldr	x2, [x0, #5912]
   132bc:	ldrsw	x0, [sp, #44]
   132c0:	add	x1, x0, #0x1
   132c4:	mov	x0, x1
   132c8:	lsl	x0, x0, #1
   132cc:	add	x0, x0, x1
   132d0:	add	x0, x2, x0
   132d4:	add	x1, x0, #0xe
   132d8:	ldr	x0, [sp, #24]
   132dc:	str	x1, [x0, #5912]
   132e0:	ldr	w0, [sp, #44]
   132e4:	ldp	x29, x30, [sp], #48
   132e8:	ret
   132ec:	stp	x29, x30, [sp, #-96]!
   132f0:	mov	x29, sp
   132f4:	str	x0, [sp, #40]
   132f8:	str	w1, [sp, #36]
   132fc:	str	w2, [sp, #32]
   13300:	str	w3, [sp, #28]
   13304:	mov	w0, #0x5                   	// #5
   13308:	str	w0, [sp, #88]
   1330c:	ldr	x0, [sp, #40]
   13310:	ldr	w1, [x0, #5940]
   13314:	mov	w2, #0x10                  	// #16
   13318:	ldr	w0, [sp, #88]
   1331c:	sub	w0, w2, w0
   13320:	cmp	w1, w0
   13324:	b.le	13424 <inflateCodesUsed@@ZLIB_1.2.9+0x2a34>
   13328:	ldr	w0, [sp, #36]
   1332c:	sub	w0, w0, #0x101
   13330:	str	w0, [sp, #84]
   13334:	ldr	x0, [sp, #40]
   13338:	ldrh	w0, [x0, #5936]
   1333c:	sxth	w1, w0
   13340:	ldr	w0, [sp, #84]
   13344:	and	w0, w0, #0xffff
   13348:	mov	w2, w0
   1334c:	ldr	x0, [sp, #40]
   13350:	ldr	w0, [x0, #5940]
   13354:	lsl	w0, w2, w0
   13358:	sxth	w0, w0
   1335c:	orr	w0, w1, w0
   13360:	sxth	w0, w0
   13364:	and	w1, w0, #0xffff
   13368:	ldr	x0, [sp, #40]
   1336c:	strh	w1, [x0, #5936]
   13370:	ldr	x0, [sp, #40]
   13374:	ldrh	w4, [x0, #5936]
   13378:	ldr	x0, [sp, #40]
   1337c:	ldr	x1, [x0, #16]
   13380:	ldr	x0, [sp, #40]
   13384:	ldr	x0, [x0, #40]
   13388:	add	x3, x0, #0x1
   1338c:	ldr	x2, [sp, #40]
   13390:	str	x3, [x2, #40]
   13394:	add	x0, x1, x0
   13398:	and	w1, w4, #0xff
   1339c:	strb	w1, [x0]
   133a0:	ldr	x0, [sp, #40]
   133a4:	ldrh	w0, [x0, #5936]
   133a8:	lsr	w0, w0, #8
   133ac:	and	w4, w0, #0xffff
   133b0:	ldr	x0, [sp, #40]
   133b4:	ldr	x1, [x0, #16]
   133b8:	ldr	x0, [sp, #40]
   133bc:	ldr	x0, [x0, #40]
   133c0:	add	x3, x0, #0x1
   133c4:	ldr	x2, [sp, #40]
   133c8:	str	x3, [x2, #40]
   133cc:	add	x0, x1, x0
   133d0:	and	w1, w4, #0xff
   133d4:	strb	w1, [x0]
   133d8:	ldr	w0, [sp, #84]
   133dc:	and	w0, w0, #0xffff
   133e0:	mov	w2, w0
   133e4:	ldr	x0, [sp, #40]
   133e8:	ldr	w0, [x0, #5940]
   133ec:	mov	w1, #0x10                  	// #16
   133f0:	sub	w0, w1, w0
   133f4:	asr	w0, w2, w0
   133f8:	and	w1, w0, #0xffff
   133fc:	ldr	x0, [sp, #40]
   13400:	strh	w1, [x0, #5936]
   13404:	ldr	x0, [sp, #40]
   13408:	ldr	w1, [x0, #5940]
   1340c:	ldr	w0, [sp, #88]
   13410:	sub	w0, w0, #0x10
   13414:	add	w1, w1, w0
   13418:	ldr	x0, [sp, #40]
   1341c:	str	w1, [x0, #5940]
   13420:	b	13480 <inflateCodesUsed@@ZLIB_1.2.9+0x2a90>
   13424:	ldr	x0, [sp, #40]
   13428:	ldrh	w0, [x0, #5936]
   1342c:	sxth	w1, w0
   13430:	ldr	w0, [sp, #36]
   13434:	and	w0, w0, #0xffff
   13438:	sub	w0, w0, #0x101
   1343c:	and	w0, w0, #0xffff
   13440:	mov	w2, w0
   13444:	ldr	x0, [sp, #40]
   13448:	ldr	w0, [x0, #5940]
   1344c:	lsl	w0, w2, w0
   13450:	sxth	w0, w0
   13454:	orr	w0, w1, w0
   13458:	sxth	w0, w0
   1345c:	and	w1, w0, #0xffff
   13460:	ldr	x0, [sp, #40]
   13464:	strh	w1, [x0, #5936]
   13468:	ldr	x0, [sp, #40]
   1346c:	ldr	w1, [x0, #5940]
   13470:	ldr	w0, [sp, #88]
   13474:	add	w1, w1, w0
   13478:	ldr	x0, [sp, #40]
   1347c:	str	w1, [x0, #5940]
   13480:	mov	w0, #0x5                   	// #5
   13484:	str	w0, [sp, #80]
   13488:	ldr	x0, [sp, #40]
   1348c:	ldr	w1, [x0, #5940]
   13490:	mov	w2, #0x10                  	// #16
   13494:	ldr	w0, [sp, #80]
   13498:	sub	w0, w2, w0
   1349c:	cmp	w1, w0
   134a0:	b.le	135a0 <inflateCodesUsed@@ZLIB_1.2.9+0x2bb0>
   134a4:	ldr	w0, [sp, #32]
   134a8:	sub	w0, w0, #0x1
   134ac:	str	w0, [sp, #76]
   134b0:	ldr	x0, [sp, #40]
   134b4:	ldrh	w0, [x0, #5936]
   134b8:	sxth	w1, w0
   134bc:	ldr	w0, [sp, #76]
   134c0:	and	w0, w0, #0xffff
   134c4:	mov	w2, w0
   134c8:	ldr	x0, [sp, #40]
   134cc:	ldr	w0, [x0, #5940]
   134d0:	lsl	w0, w2, w0
   134d4:	sxth	w0, w0
   134d8:	orr	w0, w1, w0
   134dc:	sxth	w0, w0
   134e0:	and	w1, w0, #0xffff
   134e4:	ldr	x0, [sp, #40]
   134e8:	strh	w1, [x0, #5936]
   134ec:	ldr	x0, [sp, #40]
   134f0:	ldrh	w4, [x0, #5936]
   134f4:	ldr	x0, [sp, #40]
   134f8:	ldr	x1, [x0, #16]
   134fc:	ldr	x0, [sp, #40]
   13500:	ldr	x0, [x0, #40]
   13504:	add	x3, x0, #0x1
   13508:	ldr	x2, [sp, #40]
   1350c:	str	x3, [x2, #40]
   13510:	add	x0, x1, x0
   13514:	and	w1, w4, #0xff
   13518:	strb	w1, [x0]
   1351c:	ldr	x0, [sp, #40]
   13520:	ldrh	w0, [x0, #5936]
   13524:	lsr	w0, w0, #8
   13528:	and	w4, w0, #0xffff
   1352c:	ldr	x0, [sp, #40]
   13530:	ldr	x1, [x0, #16]
   13534:	ldr	x0, [sp, #40]
   13538:	ldr	x0, [x0, #40]
   1353c:	add	x3, x0, #0x1
   13540:	ldr	x2, [sp, #40]
   13544:	str	x3, [x2, #40]
   13548:	add	x0, x1, x0
   1354c:	and	w1, w4, #0xff
   13550:	strb	w1, [x0]
   13554:	ldr	w0, [sp, #76]
   13558:	and	w0, w0, #0xffff
   1355c:	mov	w2, w0
   13560:	ldr	x0, [sp, #40]
   13564:	ldr	w0, [x0, #5940]
   13568:	mov	w1, #0x10                  	// #16
   1356c:	sub	w0, w1, w0
   13570:	asr	w0, w2, w0
   13574:	and	w1, w0, #0xffff
   13578:	ldr	x0, [sp, #40]
   1357c:	strh	w1, [x0, #5936]
   13580:	ldr	x0, [sp, #40]
   13584:	ldr	w1, [x0, #5940]
   13588:	ldr	w0, [sp, #80]
   1358c:	sub	w0, w0, #0x10
   13590:	add	w1, w1, w0
   13594:	ldr	x0, [sp, #40]
   13598:	str	w1, [x0, #5940]
   1359c:	b	135fc <inflateCodesUsed@@ZLIB_1.2.9+0x2c0c>
   135a0:	ldr	x0, [sp, #40]
   135a4:	ldrh	w0, [x0, #5936]
   135a8:	sxth	w1, w0
   135ac:	ldr	w0, [sp, #32]
   135b0:	and	w0, w0, #0xffff
   135b4:	sub	w0, w0, #0x1
   135b8:	and	w0, w0, #0xffff
   135bc:	mov	w2, w0
   135c0:	ldr	x0, [sp, #40]
   135c4:	ldr	w0, [x0, #5940]
   135c8:	lsl	w0, w2, w0
   135cc:	sxth	w0, w0
   135d0:	orr	w0, w1, w0
   135d4:	sxth	w0, w0
   135d8:	and	w1, w0, #0xffff
   135dc:	ldr	x0, [sp, #40]
   135e0:	strh	w1, [x0, #5936]
   135e4:	ldr	x0, [sp, #40]
   135e8:	ldr	w1, [x0, #5940]
   135ec:	ldr	w0, [sp, #80]
   135f0:	add	w1, w1, w0
   135f4:	ldr	x0, [sp, #40]
   135f8:	str	w1, [x0, #5940]
   135fc:	mov	w0, #0x4                   	// #4
   13600:	str	w0, [sp, #72]
   13604:	ldr	x0, [sp, #40]
   13608:	ldr	w1, [x0, #5940]
   1360c:	mov	w2, #0x10                  	// #16
   13610:	ldr	w0, [sp, #72]
   13614:	sub	w0, w2, w0
   13618:	cmp	w1, w0
   1361c:	b.le	1371c <inflateCodesUsed@@ZLIB_1.2.9+0x2d2c>
   13620:	ldr	w0, [sp, #28]
   13624:	sub	w0, w0, #0x4
   13628:	str	w0, [sp, #68]
   1362c:	ldr	x0, [sp, #40]
   13630:	ldrh	w0, [x0, #5936]
   13634:	sxth	w1, w0
   13638:	ldr	w0, [sp, #68]
   1363c:	and	w0, w0, #0xffff
   13640:	mov	w2, w0
   13644:	ldr	x0, [sp, #40]
   13648:	ldr	w0, [x0, #5940]
   1364c:	lsl	w0, w2, w0
   13650:	sxth	w0, w0
   13654:	orr	w0, w1, w0
   13658:	sxth	w0, w0
   1365c:	and	w1, w0, #0xffff
   13660:	ldr	x0, [sp, #40]
   13664:	strh	w1, [x0, #5936]
   13668:	ldr	x0, [sp, #40]
   1366c:	ldrh	w4, [x0, #5936]
   13670:	ldr	x0, [sp, #40]
   13674:	ldr	x1, [x0, #16]
   13678:	ldr	x0, [sp, #40]
   1367c:	ldr	x0, [x0, #40]
   13680:	add	x3, x0, #0x1
   13684:	ldr	x2, [sp, #40]
   13688:	str	x3, [x2, #40]
   1368c:	add	x0, x1, x0
   13690:	and	w1, w4, #0xff
   13694:	strb	w1, [x0]
   13698:	ldr	x0, [sp, #40]
   1369c:	ldrh	w0, [x0, #5936]
   136a0:	lsr	w0, w0, #8
   136a4:	and	w4, w0, #0xffff
   136a8:	ldr	x0, [sp, #40]
   136ac:	ldr	x1, [x0, #16]
   136b0:	ldr	x0, [sp, #40]
   136b4:	ldr	x0, [x0, #40]
   136b8:	add	x3, x0, #0x1
   136bc:	ldr	x2, [sp, #40]
   136c0:	str	x3, [x2, #40]
   136c4:	add	x0, x1, x0
   136c8:	and	w1, w4, #0xff
   136cc:	strb	w1, [x0]
   136d0:	ldr	w0, [sp, #68]
   136d4:	and	w0, w0, #0xffff
   136d8:	mov	w2, w0
   136dc:	ldr	x0, [sp, #40]
   136e0:	ldr	w0, [x0, #5940]
   136e4:	mov	w1, #0x10                  	// #16
   136e8:	sub	w0, w1, w0
   136ec:	asr	w0, w2, w0
   136f0:	and	w1, w0, #0xffff
   136f4:	ldr	x0, [sp, #40]
   136f8:	strh	w1, [x0, #5936]
   136fc:	ldr	x0, [sp, #40]
   13700:	ldr	w1, [x0, #5940]
   13704:	ldr	w0, [sp, #72]
   13708:	sub	w0, w0, #0x10
   1370c:	add	w1, w1, w0
   13710:	ldr	x0, [sp, #40]
   13714:	str	w1, [x0, #5940]
   13718:	b	13778 <inflateCodesUsed@@ZLIB_1.2.9+0x2d88>
   1371c:	ldr	x0, [sp, #40]
   13720:	ldrh	w0, [x0, #5936]
   13724:	sxth	w1, w0
   13728:	ldr	w0, [sp, #28]
   1372c:	and	w0, w0, #0xffff
   13730:	sub	w0, w0, #0x4
   13734:	and	w0, w0, #0xffff
   13738:	mov	w2, w0
   1373c:	ldr	x0, [sp, #40]
   13740:	ldr	w0, [x0, #5940]
   13744:	lsl	w0, w2, w0
   13748:	sxth	w0, w0
   1374c:	orr	w0, w1, w0
   13750:	sxth	w0, w0
   13754:	and	w1, w0, #0xffff
   13758:	ldr	x0, [sp, #40]
   1375c:	strh	w1, [x0, #5936]
   13760:	ldr	x0, [sp, #40]
   13764:	ldr	w1, [x0, #5940]
   13768:	ldr	w0, [sp, #72]
   1376c:	add	w1, w1, w0
   13770:	ldr	x0, [sp, #40]
   13774:	str	w1, [x0, #5940]
   13778:	str	wzr, [sp, #92]
   1377c:	b	13940 <inflateCodesUsed@@ZLIB_1.2.9+0x2f50>
   13780:	mov	w0, #0x3                   	// #3
   13784:	str	w0, [sp, #64]
   13788:	ldr	x0, [sp, #40]
   1378c:	ldr	w1, [x0, #5940]
   13790:	mov	w2, #0x10                  	// #16
   13794:	ldr	w0, [sp, #64]
   13798:	sub	w0, w2, w0
   1379c:	cmp	w1, w0
   137a0:	b.le	138c0 <inflateCodesUsed@@ZLIB_1.2.9+0x2ed0>
   137a4:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   137a8:	add	x1, x0, #0x808
   137ac:	ldrsw	x0, [sp, #92]
   137b0:	ldrb	w0, [x1, x0]
   137b4:	ldr	x1, [sp, #40]
   137b8:	sxtw	x0, w0
   137bc:	add	x0, x0, #0x2ac
   137c0:	lsl	x0, x0, #2
   137c4:	add	x0, x1, x0
   137c8:	ldrh	w0, [x0, #14]
   137cc:	str	w0, [sp, #60]
   137d0:	ldr	x0, [sp, #40]
   137d4:	ldrh	w0, [x0, #5936]
   137d8:	sxth	w1, w0
   137dc:	ldr	w0, [sp, #60]
   137e0:	and	w0, w0, #0xffff
   137e4:	mov	w2, w0
   137e8:	ldr	x0, [sp, #40]
   137ec:	ldr	w0, [x0, #5940]
   137f0:	lsl	w0, w2, w0
   137f4:	sxth	w0, w0
   137f8:	orr	w0, w1, w0
   137fc:	sxth	w0, w0
   13800:	and	w1, w0, #0xffff
   13804:	ldr	x0, [sp, #40]
   13808:	strh	w1, [x0, #5936]
   1380c:	ldr	x0, [sp, #40]
   13810:	ldrh	w4, [x0, #5936]
   13814:	ldr	x0, [sp, #40]
   13818:	ldr	x1, [x0, #16]
   1381c:	ldr	x0, [sp, #40]
   13820:	ldr	x0, [x0, #40]
   13824:	add	x3, x0, #0x1
   13828:	ldr	x2, [sp, #40]
   1382c:	str	x3, [x2, #40]
   13830:	add	x0, x1, x0
   13834:	and	w1, w4, #0xff
   13838:	strb	w1, [x0]
   1383c:	ldr	x0, [sp, #40]
   13840:	ldrh	w0, [x0, #5936]
   13844:	lsr	w0, w0, #8
   13848:	and	w4, w0, #0xffff
   1384c:	ldr	x0, [sp, #40]
   13850:	ldr	x1, [x0, #16]
   13854:	ldr	x0, [sp, #40]
   13858:	ldr	x0, [x0, #40]
   1385c:	add	x3, x0, #0x1
   13860:	ldr	x2, [sp, #40]
   13864:	str	x3, [x2, #40]
   13868:	add	x0, x1, x0
   1386c:	and	w1, w4, #0xff
   13870:	strb	w1, [x0]
   13874:	ldr	w0, [sp, #60]
   13878:	and	w0, w0, #0xffff
   1387c:	mov	w2, w0
   13880:	ldr	x0, [sp, #40]
   13884:	ldr	w0, [x0, #5940]
   13888:	mov	w1, #0x10                  	// #16
   1388c:	sub	w0, w1, w0
   13890:	asr	w0, w2, w0
   13894:	and	w1, w0, #0xffff
   13898:	ldr	x0, [sp, #40]
   1389c:	strh	w1, [x0, #5936]
   138a0:	ldr	x0, [sp, #40]
   138a4:	ldr	w1, [x0, #5940]
   138a8:	ldr	w0, [sp, #64]
   138ac:	sub	w0, w0, #0x10
   138b0:	add	w1, w1, w0
   138b4:	ldr	x0, [sp, #40]
   138b8:	str	w1, [x0, #5940]
   138bc:	b	13934 <inflateCodesUsed@@ZLIB_1.2.9+0x2f44>
   138c0:	ldr	x0, [sp, #40]
   138c4:	ldrh	w0, [x0, #5936]
   138c8:	sxth	w1, w0
   138cc:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   138d0:	add	x2, x0, #0x808
   138d4:	ldrsw	x0, [sp, #92]
   138d8:	ldrb	w0, [x2, x0]
   138dc:	ldr	x2, [sp, #40]
   138e0:	sxtw	x0, w0
   138e4:	add	x0, x0, #0x2ac
   138e8:	lsl	x0, x0, #2
   138ec:	add	x0, x2, x0
   138f0:	ldrh	w0, [x0, #14]
   138f4:	mov	w2, w0
   138f8:	ldr	x0, [sp, #40]
   138fc:	ldr	w0, [x0, #5940]
   13900:	lsl	w0, w2, w0
   13904:	sxth	w0, w0
   13908:	orr	w0, w1, w0
   1390c:	sxth	w0, w0
   13910:	and	w1, w0, #0xffff
   13914:	ldr	x0, [sp, #40]
   13918:	strh	w1, [x0, #5936]
   1391c:	ldr	x0, [sp, #40]
   13920:	ldr	w1, [x0, #5940]
   13924:	ldr	w0, [sp, #64]
   13928:	add	w1, w1, w0
   1392c:	ldr	x0, [sp, #40]
   13930:	str	w1, [x0, #5940]
   13934:	ldr	w0, [sp, #92]
   13938:	add	w0, w0, #0x1
   1393c:	str	w0, [sp, #92]
   13940:	ldr	w1, [sp, #92]
   13944:	ldr	w0, [sp, #28]
   13948:	cmp	w1, w0
   1394c:	b.lt	13780 <inflateCodesUsed@@ZLIB_1.2.9+0x2d90>  // b.tstop
   13950:	ldr	x0, [sp, #40]
   13954:	add	x1, x0, #0xd4
   13958:	ldr	w0, [sp, #36]
   1395c:	sub	w0, w0, #0x1
   13960:	mov	w2, w0
   13964:	ldr	x0, [sp, #40]
   13968:	bl	1242c <inflateCodesUsed@@ZLIB_1.2.9+0x1a3c>
   1396c:	ldr	x0, [sp, #40]
   13970:	add	x1, x0, #0x9c8
   13974:	ldr	w0, [sp, #32]
   13978:	sub	w0, w0, #0x1
   1397c:	mov	w2, w0
   13980:	ldr	x0, [sp, #40]
   13984:	bl	1242c <inflateCodesUsed@@ZLIB_1.2.9+0x1a3c>
   13988:	nop
   1398c:	ldp	x29, x30, [sp], #96
   13990:	ret
   13994:	stp	x29, x30, [sp, #-64]!
   13998:	mov	x29, sp
   1399c:	str	x0, [sp, #40]
   139a0:	str	x1, [sp, #32]
   139a4:	str	x2, [sp, #24]
   139a8:	str	w3, [sp, #20]
   139ac:	mov	w0, #0x3                   	// #3
   139b0:	str	w0, [sp, #60]
   139b4:	ldr	x0, [sp, #40]
   139b8:	ldr	w1, [x0, #5940]
   139bc:	mov	w2, #0x10                  	// #16
   139c0:	ldr	w0, [sp, #60]
   139c4:	sub	w0, w2, w0
   139c8:	cmp	w1, w0
   139cc:	b.le	13ac8 <inflateCodesUsed@@ZLIB_1.2.9+0x30d8>
   139d0:	ldr	w0, [sp, #20]
   139d4:	str	w0, [sp, #56]
   139d8:	ldr	x0, [sp, #40]
   139dc:	ldrh	w0, [x0, #5936]
   139e0:	sxth	w1, w0
   139e4:	ldr	w0, [sp, #56]
   139e8:	and	w0, w0, #0xffff
   139ec:	mov	w2, w0
   139f0:	ldr	x0, [sp, #40]
   139f4:	ldr	w0, [x0, #5940]
   139f8:	lsl	w0, w2, w0
   139fc:	sxth	w0, w0
   13a00:	orr	w0, w1, w0
   13a04:	sxth	w0, w0
   13a08:	and	w1, w0, #0xffff
   13a0c:	ldr	x0, [sp, #40]
   13a10:	strh	w1, [x0, #5936]
   13a14:	ldr	x0, [sp, #40]
   13a18:	ldrh	w4, [x0, #5936]
   13a1c:	ldr	x0, [sp, #40]
   13a20:	ldr	x1, [x0, #16]
   13a24:	ldr	x0, [sp, #40]
   13a28:	ldr	x0, [x0, #40]
   13a2c:	add	x3, x0, #0x1
   13a30:	ldr	x2, [sp, #40]
   13a34:	str	x3, [x2, #40]
   13a38:	add	x0, x1, x0
   13a3c:	and	w1, w4, #0xff
   13a40:	strb	w1, [x0]
   13a44:	ldr	x0, [sp, #40]
   13a48:	ldrh	w0, [x0, #5936]
   13a4c:	lsr	w0, w0, #8
   13a50:	and	w4, w0, #0xffff
   13a54:	ldr	x0, [sp, #40]
   13a58:	ldr	x1, [x0, #16]
   13a5c:	ldr	x0, [sp, #40]
   13a60:	ldr	x0, [x0, #40]
   13a64:	add	x3, x0, #0x1
   13a68:	ldr	x2, [sp, #40]
   13a6c:	str	x3, [x2, #40]
   13a70:	add	x0, x1, x0
   13a74:	and	w1, w4, #0xff
   13a78:	strb	w1, [x0]
   13a7c:	ldr	w0, [sp, #56]
   13a80:	and	w0, w0, #0xffff
   13a84:	mov	w2, w0
   13a88:	ldr	x0, [sp, #40]
   13a8c:	ldr	w0, [x0, #5940]
   13a90:	mov	w1, #0x10                  	// #16
   13a94:	sub	w0, w1, w0
   13a98:	asr	w0, w2, w0
   13a9c:	and	w1, w0, #0xffff
   13aa0:	ldr	x0, [sp, #40]
   13aa4:	strh	w1, [x0, #5936]
   13aa8:	ldr	x0, [sp, #40]
   13aac:	ldr	w1, [x0, #5940]
   13ab0:	ldr	w0, [sp, #60]
   13ab4:	sub	w0, w0, #0x10
   13ab8:	add	w1, w1, w0
   13abc:	ldr	x0, [sp, #40]
   13ac0:	str	w1, [x0, #5940]
   13ac4:	b	13b1c <inflateCodesUsed@@ZLIB_1.2.9+0x312c>
   13ac8:	ldr	x0, [sp, #40]
   13acc:	ldrh	w0, [x0, #5936]
   13ad0:	sxth	w1, w0
   13ad4:	ldr	w0, [sp, #20]
   13ad8:	and	w0, w0, #0xffff
   13adc:	mov	w2, w0
   13ae0:	ldr	x0, [sp, #40]
   13ae4:	ldr	w0, [x0, #5940]
   13ae8:	lsl	w0, w2, w0
   13aec:	sxth	w0, w0
   13af0:	orr	w0, w1, w0
   13af4:	sxth	w0, w0
   13af8:	and	w1, w0, #0xffff
   13afc:	ldr	x0, [sp, #40]
   13b00:	strh	w1, [x0, #5936]
   13b04:	ldr	x0, [sp, #40]
   13b08:	ldr	w1, [x0, #5940]
   13b0c:	ldr	w0, [sp, #60]
   13b10:	add	w1, w1, w0
   13b14:	ldr	x0, [sp, #40]
   13b18:	str	w1, [x0, #5940]
   13b1c:	ldr	x0, [sp, #40]
   13b20:	bl	15308 <inflateCodesUsed@@ZLIB_1.2.9+0x4918>
   13b24:	ldr	x0, [sp, #40]
   13b28:	ldr	x1, [x0, #16]
   13b2c:	ldr	x0, [sp, #40]
   13b30:	ldr	x0, [x0, #40]
   13b34:	add	x3, x0, #0x1
   13b38:	ldr	x2, [sp, #40]
   13b3c:	str	x3, [x2, #40]
   13b40:	add	x0, x1, x0
   13b44:	ldr	x1, [sp, #24]
   13b48:	and	w1, w1, #0xff
   13b4c:	strb	w1, [x0]
   13b50:	ldr	x0, [sp, #24]
   13b54:	and	w0, w0, #0xffff
   13b58:	lsr	w0, w0, #8
   13b5c:	and	w4, w0, #0xffff
   13b60:	ldr	x0, [sp, #40]
   13b64:	ldr	x1, [x0, #16]
   13b68:	ldr	x0, [sp, #40]
   13b6c:	ldr	x0, [x0, #40]
   13b70:	add	x3, x0, #0x1
   13b74:	ldr	x2, [sp, #40]
   13b78:	str	x3, [x2, #40]
   13b7c:	add	x0, x1, x0
   13b80:	and	w1, w4, #0xff
   13b84:	strb	w1, [x0]
   13b88:	ldr	x0, [sp, #24]
   13b8c:	and	w1, w0, #0xff
   13b90:	ldr	x0, [sp, #40]
   13b94:	ldr	x2, [x0, #16]
   13b98:	ldr	x0, [sp, #40]
   13b9c:	ldr	x0, [x0, #40]
   13ba0:	add	x4, x0, #0x1
   13ba4:	ldr	x3, [sp, #40]
   13ba8:	str	x4, [x3, #40]
   13bac:	add	x0, x2, x0
   13bb0:	mvn	w1, w1
   13bb4:	and	w1, w1, #0xff
   13bb8:	strb	w1, [x0]
   13bbc:	ldr	x0, [sp, #24]
   13bc0:	and	w0, w0, #0xffff
   13bc4:	mvn	w0, w0
   13bc8:	and	w0, w0, #0xffff
   13bcc:	lsr	w0, w0, #8
   13bd0:	and	w4, w0, #0xffff
   13bd4:	ldr	x0, [sp, #40]
   13bd8:	ldr	x1, [x0, #16]
   13bdc:	ldr	x0, [sp, #40]
   13be0:	ldr	x0, [x0, #40]
   13be4:	add	x3, x0, #0x1
   13be8:	ldr	x2, [sp, #40]
   13bec:	str	x3, [x2, #40]
   13bf0:	add	x0, x1, x0
   13bf4:	and	w1, w4, #0xff
   13bf8:	strb	w1, [x0]
   13bfc:	ldr	x0, [sp, #40]
   13c00:	ldr	x1, [x0, #16]
   13c04:	ldr	x0, [sp, #40]
   13c08:	ldr	x0, [x0, #40]
   13c0c:	add	x0, x1, x0
   13c10:	ldr	x2, [sp, #24]
   13c14:	ldr	x1, [sp, #32]
   13c18:	bl	23a0 <memcpy@plt>
   13c1c:	ldr	x0, [sp, #40]
   13c20:	ldr	x1, [x0, #40]
   13c24:	ldr	x0, [sp, #24]
   13c28:	add	x1, x1, x0
   13c2c:	ldr	x0, [sp, #40]
   13c30:	str	x1, [x0, #40]
   13c34:	nop
   13c38:	ldp	x29, x30, [sp], #64
   13c3c:	ret
   13c40:	stp	x29, x30, [sp, #-32]!
   13c44:	mov	x29, sp
   13c48:	str	x0, [sp, #24]
   13c4c:	ldr	x0, [sp, #24]
   13c50:	bl	151fc <inflateCodesUsed@@ZLIB_1.2.9+0x480c>
   13c54:	nop
   13c58:	ldp	x29, x30, [sp], #32
   13c5c:	ret
   13c60:	stp	x29, x30, [sp, #-48]!
   13c64:	mov	x29, sp
   13c68:	str	x0, [sp, #24]
   13c6c:	mov	w0, #0x3                   	// #3
   13c70:	str	w0, [sp, #44]
   13c74:	ldr	x0, [sp, #24]
   13c78:	ldr	w1, [x0, #5940]
   13c7c:	mov	w2, #0x10                  	// #16
   13c80:	ldr	w0, [sp, #44]
   13c84:	sub	w0, w2, w0
   13c88:	cmp	w1, w0
   13c8c:	b.le	13d88 <inflateCodesUsed@@ZLIB_1.2.9+0x3398>
   13c90:	mov	w0, #0x2                   	// #2
   13c94:	str	w0, [sp, #40]
   13c98:	ldr	x0, [sp, #24]
   13c9c:	ldrh	w0, [x0, #5936]
   13ca0:	sxth	w1, w0
   13ca4:	ldr	w0, [sp, #40]
   13ca8:	and	w0, w0, #0xffff
   13cac:	mov	w2, w0
   13cb0:	ldr	x0, [sp, #24]
   13cb4:	ldr	w0, [x0, #5940]
   13cb8:	lsl	w0, w2, w0
   13cbc:	sxth	w0, w0
   13cc0:	orr	w0, w1, w0
   13cc4:	sxth	w0, w0
   13cc8:	and	w1, w0, #0xffff
   13ccc:	ldr	x0, [sp, #24]
   13cd0:	strh	w1, [x0, #5936]
   13cd4:	ldr	x0, [sp, #24]
   13cd8:	ldrh	w4, [x0, #5936]
   13cdc:	ldr	x0, [sp, #24]
   13ce0:	ldr	x1, [x0, #16]
   13ce4:	ldr	x0, [sp, #24]
   13ce8:	ldr	x0, [x0, #40]
   13cec:	add	x3, x0, #0x1
   13cf0:	ldr	x2, [sp, #24]
   13cf4:	str	x3, [x2, #40]
   13cf8:	add	x0, x1, x0
   13cfc:	and	w1, w4, #0xff
   13d00:	strb	w1, [x0]
   13d04:	ldr	x0, [sp, #24]
   13d08:	ldrh	w0, [x0, #5936]
   13d0c:	lsr	w0, w0, #8
   13d10:	and	w4, w0, #0xffff
   13d14:	ldr	x0, [sp, #24]
   13d18:	ldr	x1, [x0, #16]
   13d1c:	ldr	x0, [sp, #24]
   13d20:	ldr	x0, [x0, #40]
   13d24:	add	x3, x0, #0x1
   13d28:	ldr	x2, [sp, #24]
   13d2c:	str	x3, [x2, #40]
   13d30:	add	x0, x1, x0
   13d34:	and	w1, w4, #0xff
   13d38:	strb	w1, [x0]
   13d3c:	ldr	w0, [sp, #40]
   13d40:	and	w0, w0, #0xffff
   13d44:	mov	w2, w0
   13d48:	ldr	x0, [sp, #24]
   13d4c:	ldr	w0, [x0, #5940]
   13d50:	mov	w1, #0x10                  	// #16
   13d54:	sub	w0, w1, w0
   13d58:	asr	w0, w2, w0
   13d5c:	and	w1, w0, #0xffff
   13d60:	ldr	x0, [sp, #24]
   13d64:	strh	w1, [x0, #5936]
   13d68:	ldr	x0, [sp, #24]
   13d6c:	ldr	w1, [x0, #5940]
   13d70:	ldr	w0, [sp, #44]
   13d74:	sub	w0, w0, #0x10
   13d78:	add	w1, w1, w0
   13d7c:	ldr	x0, [sp, #24]
   13d80:	str	w1, [x0, #5940]
   13d84:	b	13dd4 <inflateCodesUsed@@ZLIB_1.2.9+0x33e4>
   13d88:	ldr	x0, [sp, #24]
   13d8c:	ldrh	w0, [x0, #5936]
   13d90:	sxth	w1, w0
   13d94:	ldr	x0, [sp, #24]
   13d98:	ldr	w0, [x0, #5940]
   13d9c:	mov	w2, #0x2                   	// #2
   13da0:	lsl	w0, w2, w0
   13da4:	sxth	w0, w0
   13da8:	orr	w0, w1, w0
   13dac:	sxth	w0, w0
   13db0:	and	w1, w0, #0xffff
   13db4:	ldr	x0, [sp, #24]
   13db8:	strh	w1, [x0, #5936]
   13dbc:	ldr	x0, [sp, #24]
   13dc0:	ldr	w1, [x0, #5940]
   13dc4:	ldr	w0, [sp, #44]
   13dc8:	add	w1, w1, w0
   13dcc:	ldr	x0, [sp, #24]
   13dd0:	str	w1, [x0, #5940]
   13dd4:	mov	w0, #0x7                   	// #7
   13dd8:	str	w0, [sp, #36]
   13ddc:	ldr	x0, [sp, #24]
   13de0:	ldr	w1, [x0, #5940]
   13de4:	mov	w2, #0x10                  	// #16
   13de8:	ldr	w0, [sp, #36]
   13dec:	sub	w0, w2, w0
   13df0:	cmp	w1, w0
   13df4:	b.le	13ef0 <inflateCodesUsed@@ZLIB_1.2.9+0x3500>
   13df8:	mov	w0, #0x0                   	// #0
   13dfc:	str	w0, [sp, #32]
   13e00:	ldr	x0, [sp, #24]
   13e04:	ldrh	w0, [x0, #5936]
   13e08:	sxth	w1, w0
   13e0c:	ldr	w0, [sp, #32]
   13e10:	and	w0, w0, #0xffff
   13e14:	mov	w2, w0
   13e18:	ldr	x0, [sp, #24]
   13e1c:	ldr	w0, [x0, #5940]
   13e20:	lsl	w0, w2, w0
   13e24:	sxth	w0, w0
   13e28:	orr	w0, w1, w0
   13e2c:	sxth	w0, w0
   13e30:	and	w1, w0, #0xffff
   13e34:	ldr	x0, [sp, #24]
   13e38:	strh	w1, [x0, #5936]
   13e3c:	ldr	x0, [sp, #24]
   13e40:	ldrh	w4, [x0, #5936]
   13e44:	ldr	x0, [sp, #24]
   13e48:	ldr	x1, [x0, #16]
   13e4c:	ldr	x0, [sp, #24]
   13e50:	ldr	x0, [x0, #40]
   13e54:	add	x3, x0, #0x1
   13e58:	ldr	x2, [sp, #24]
   13e5c:	str	x3, [x2, #40]
   13e60:	add	x0, x1, x0
   13e64:	and	w1, w4, #0xff
   13e68:	strb	w1, [x0]
   13e6c:	ldr	x0, [sp, #24]
   13e70:	ldrh	w0, [x0, #5936]
   13e74:	lsr	w0, w0, #8
   13e78:	and	w4, w0, #0xffff
   13e7c:	ldr	x0, [sp, #24]
   13e80:	ldr	x1, [x0, #16]
   13e84:	ldr	x0, [sp, #24]
   13e88:	ldr	x0, [x0, #40]
   13e8c:	add	x3, x0, #0x1
   13e90:	ldr	x2, [sp, #24]
   13e94:	str	x3, [x2, #40]
   13e98:	add	x0, x1, x0
   13e9c:	and	w1, w4, #0xff
   13ea0:	strb	w1, [x0]
   13ea4:	ldr	w0, [sp, #32]
   13ea8:	and	w0, w0, #0xffff
   13eac:	mov	w2, w0
   13eb0:	ldr	x0, [sp, #24]
   13eb4:	ldr	w0, [x0, #5940]
   13eb8:	mov	w1, #0x10                  	// #16
   13ebc:	sub	w0, w1, w0
   13ec0:	asr	w0, w2, w0
   13ec4:	and	w1, w0, #0xffff
   13ec8:	ldr	x0, [sp, #24]
   13ecc:	strh	w1, [x0, #5936]
   13ed0:	ldr	x0, [sp, #24]
   13ed4:	ldr	w1, [x0, #5940]
   13ed8:	ldr	w0, [sp, #36]
   13edc:	sub	w0, w0, #0x10
   13ee0:	add	w1, w1, w0
   13ee4:	ldr	x0, [sp, #24]
   13ee8:	str	w1, [x0, #5940]
   13eec:	b	13f40 <inflateCodesUsed@@ZLIB_1.2.9+0x3550>
   13ef0:	ldr	x0, [sp, #24]
   13ef4:	ldrh	w0, [x0, #5936]
   13ef8:	sxth	w1, w0
   13efc:	mov	w0, #0x0                   	// #0
   13f00:	mov	w2, w0
   13f04:	ldr	x0, [sp, #24]
   13f08:	ldr	w0, [x0, #5940]
   13f0c:	lsl	w0, w2, w0
   13f10:	sxth	w0, w0
   13f14:	orr	w0, w1, w0
   13f18:	sxth	w0, w0
   13f1c:	and	w1, w0, #0xffff
   13f20:	ldr	x0, [sp, #24]
   13f24:	strh	w1, [x0, #5936]
   13f28:	ldr	x0, [sp, #24]
   13f2c:	ldr	w1, [x0, #5940]
   13f30:	ldr	w0, [sp, #36]
   13f34:	add	w1, w1, w0
   13f38:	ldr	x0, [sp, #24]
   13f3c:	str	w1, [x0, #5940]
   13f40:	ldr	x0, [sp, #24]
   13f44:	bl	151fc <inflateCodesUsed@@ZLIB_1.2.9+0x480c>
   13f48:	nop
   13f4c:	ldp	x29, x30, [sp], #48
   13f50:	ret
   13f54:	stp	x29, x30, [sp, #-112]!
   13f58:	mov	x29, sp
   13f5c:	str	x19, [sp, #16]
   13f60:	str	x0, [sp, #56]
   13f64:	str	x1, [sp, #48]
   13f68:	str	x2, [sp, #40]
   13f6c:	str	w3, [sp, #36]
   13f70:	str	wzr, [sp, #92]
   13f74:	ldr	x0, [sp, #56]
   13f78:	ldr	w0, [x0, #196]
   13f7c:	cmp	w0, #0x0
   13f80:	b.le	14024 <inflateCodesUsed@@ZLIB_1.2.9+0x3634>
   13f84:	ldr	x0, [sp, #56]
   13f88:	ldr	x0, [x0]
   13f8c:	ldr	w0, [x0, #88]
   13f90:	cmp	w0, #0x2
   13f94:	b.ne	13fac <inflateCodesUsed@@ZLIB_1.2.9+0x35bc>  // b.any
   13f98:	ldr	x0, [sp, #56]
   13f9c:	ldr	x19, [x0]
   13fa0:	ldr	x0, [sp, #56]
   13fa4:	bl	150a4 <inflateCodesUsed@@ZLIB_1.2.9+0x46b4>
   13fa8:	str	w0, [x19, #88]
   13fac:	ldr	x0, [sp, #56]
   13fb0:	add	x0, x0, #0xb58
   13fb4:	mov	x1, x0
   13fb8:	ldr	x0, [sp, #56]
   13fbc:	bl	11d3c <inflateCodesUsed@@ZLIB_1.2.9+0x134c>
   13fc0:	ldr	x0, [sp, #56]
   13fc4:	add	x0, x0, #0xb70
   13fc8:	mov	x1, x0
   13fcc:	ldr	x0, [sp, #56]
   13fd0:	bl	11d3c <inflateCodesUsed@@ZLIB_1.2.9+0x134c>
   13fd4:	ldr	x0, [sp, #56]
   13fd8:	bl	13200 <inflateCodesUsed@@ZLIB_1.2.9+0x2810>
   13fdc:	str	w0, [sp, #92]
   13fe0:	ldr	x0, [sp, #56]
   13fe4:	ldr	x0, [x0, #5912]
   13fe8:	add	x0, x0, #0xa
   13fec:	lsr	x0, x0, #3
   13ff0:	str	x0, [sp, #104]
   13ff4:	ldr	x0, [sp, #56]
   13ff8:	ldr	x0, [x0, #5920]
   13ffc:	add	x0, x0, #0xa
   14000:	lsr	x0, x0, #3
   14004:	str	x0, [sp, #96]
   14008:	ldr	x1, [sp, #96]
   1400c:	ldr	x0, [sp, #104]
   14010:	cmp	x1, x0
   14014:	b.hi	14038 <inflateCodesUsed@@ZLIB_1.2.9+0x3648>  // b.pmore
   14018:	ldr	x0, [sp, #96]
   1401c:	str	x0, [sp, #104]
   14020:	b	14038 <inflateCodesUsed@@ZLIB_1.2.9+0x3648>
   14024:	ldr	x0, [sp, #40]
   14028:	add	x0, x0, #0x5
   1402c:	str	x0, [sp, #96]
   14030:	ldr	x0, [sp, #96]
   14034:	str	x0, [sp, #104]
   14038:	ldr	x0, [sp, #40]
   1403c:	add	x0, x0, #0x4
   14040:	ldr	x1, [sp, #104]
   14044:	cmp	x1, x0
   14048:	b.cc	14070 <inflateCodesUsed@@ZLIB_1.2.9+0x3680>  // b.lo, b.ul, b.last
   1404c:	ldr	x0, [sp, #48]
   14050:	cmp	x0, #0x0
   14054:	b.eq	14070 <inflateCodesUsed@@ZLIB_1.2.9+0x3680>  // b.none
   14058:	ldr	w3, [sp, #36]
   1405c:	ldr	x2, [sp, #40]
   14060:	ldr	x1, [sp, #48]
   14064:	ldr	x0, [sp, #56]
   14068:	bl	13994 <inflateCodesUsed@@ZLIB_1.2.9+0x2fa4>
   1406c:	b	143ec <inflateCodesUsed@@ZLIB_1.2.9+0x39fc>
   14070:	ldr	x0, [sp, #56]
   14074:	ldr	w0, [x0, #200]
   14078:	cmp	w0, #0x4
   1407c:	b.eq	14090 <inflateCodesUsed@@ZLIB_1.2.9+0x36a0>  // b.none
   14080:	ldr	x1, [sp, #96]
   14084:	ldr	x0, [sp, #104]
   14088:	cmp	x1, x0
   1408c:	b.ne	14228 <inflateCodesUsed@@ZLIB_1.2.9+0x3838>  // b.any
   14090:	mov	w0, #0x3                   	// #3
   14094:	str	w0, [sp, #80]
   14098:	ldr	x0, [sp, #56]
   1409c:	ldr	w1, [x0, #5940]
   140a0:	mov	w2, #0x10                  	// #16
   140a4:	ldr	w0, [sp, #80]
   140a8:	sub	w0, w2, w0
   140ac:	cmp	w1, w0
   140b0:	b.le	141b0 <inflateCodesUsed@@ZLIB_1.2.9+0x37c0>
   140b4:	ldr	w0, [sp, #36]
   140b8:	add	w0, w0, #0x2
   140bc:	str	w0, [sp, #76]
   140c0:	ldr	x0, [sp, #56]
   140c4:	ldrh	w0, [x0, #5936]
   140c8:	sxth	w1, w0
   140cc:	ldr	w0, [sp, #76]
   140d0:	and	w0, w0, #0xffff
   140d4:	mov	w2, w0
   140d8:	ldr	x0, [sp, #56]
   140dc:	ldr	w0, [x0, #5940]
   140e0:	lsl	w0, w2, w0
   140e4:	sxth	w0, w0
   140e8:	orr	w0, w1, w0
   140ec:	sxth	w0, w0
   140f0:	and	w1, w0, #0xffff
   140f4:	ldr	x0, [sp, #56]
   140f8:	strh	w1, [x0, #5936]
   140fc:	ldr	x0, [sp, #56]
   14100:	ldrh	w4, [x0, #5936]
   14104:	ldr	x0, [sp, #56]
   14108:	ldr	x1, [x0, #16]
   1410c:	ldr	x0, [sp, #56]
   14110:	ldr	x0, [x0, #40]
   14114:	add	x3, x0, #0x1
   14118:	ldr	x2, [sp, #56]
   1411c:	str	x3, [x2, #40]
   14120:	add	x0, x1, x0
   14124:	and	w1, w4, #0xff
   14128:	strb	w1, [x0]
   1412c:	ldr	x0, [sp, #56]
   14130:	ldrh	w0, [x0, #5936]
   14134:	lsr	w0, w0, #8
   14138:	and	w4, w0, #0xffff
   1413c:	ldr	x0, [sp, #56]
   14140:	ldr	x1, [x0, #16]
   14144:	ldr	x0, [sp, #56]
   14148:	ldr	x0, [x0, #40]
   1414c:	add	x3, x0, #0x1
   14150:	ldr	x2, [sp, #56]
   14154:	str	x3, [x2, #40]
   14158:	add	x0, x1, x0
   1415c:	and	w1, w4, #0xff
   14160:	strb	w1, [x0]
   14164:	ldr	w0, [sp, #76]
   14168:	and	w0, w0, #0xffff
   1416c:	mov	w2, w0
   14170:	ldr	x0, [sp, #56]
   14174:	ldr	w0, [x0, #5940]
   14178:	mov	w1, #0x10                  	// #16
   1417c:	sub	w0, w1, w0
   14180:	asr	w0, w2, w0
   14184:	and	w1, w0, #0xffff
   14188:	ldr	x0, [sp, #56]
   1418c:	strh	w1, [x0, #5936]
   14190:	ldr	x0, [sp, #56]
   14194:	ldr	w1, [x0, #5940]
   14198:	ldr	w0, [sp, #80]
   1419c:	sub	w0, w0, #0x10
   141a0:	add	w1, w1, w0
   141a4:	ldr	x0, [sp, #56]
   141a8:	str	w1, [x0, #5940]
   141ac:	b	1420c <inflateCodesUsed@@ZLIB_1.2.9+0x381c>
   141b0:	ldr	x0, [sp, #56]
   141b4:	ldrh	w0, [x0, #5936]
   141b8:	sxth	w1, w0
   141bc:	ldr	w0, [sp, #36]
   141c0:	and	w0, w0, #0xffff
   141c4:	add	w0, w0, #0x2
   141c8:	and	w0, w0, #0xffff
   141cc:	mov	w2, w0
   141d0:	ldr	x0, [sp, #56]
   141d4:	ldr	w0, [x0, #5940]
   141d8:	lsl	w0, w2, w0
   141dc:	sxth	w0, w0
   141e0:	orr	w0, w1, w0
   141e4:	sxth	w0, w0
   141e8:	and	w1, w0, #0xffff
   141ec:	ldr	x0, [sp, #56]
   141f0:	strh	w1, [x0, #5936]
   141f4:	ldr	x0, [sp, #56]
   141f8:	ldr	w1, [x0, #5940]
   141fc:	ldr	w0, [sp, #80]
   14200:	add	w1, w1, w0
   14204:	ldr	x0, [sp, #56]
   14208:	str	w1, [x0, #5940]
   1420c:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   14210:	add	x2, x0, #0xca0
   14214:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   14218:	add	x1, x0, #0x820
   1421c:	ldr	x0, [sp, #56]
   14220:	bl	145e4 <inflateCodesUsed@@ZLIB_1.2.9+0x3bf4>
   14224:	b	143ec <inflateCodesUsed@@ZLIB_1.2.9+0x39fc>
   14228:	mov	w0, #0x3                   	// #3
   1422c:	str	w0, [sp, #88]
   14230:	ldr	x0, [sp, #56]
   14234:	ldr	w1, [x0, #5940]
   14238:	mov	w2, #0x10                  	// #16
   1423c:	ldr	w0, [sp, #88]
   14240:	sub	w0, w2, w0
   14244:	cmp	w1, w0
   14248:	b.le	14348 <inflateCodesUsed@@ZLIB_1.2.9+0x3958>
   1424c:	ldr	w0, [sp, #36]
   14250:	add	w0, w0, #0x4
   14254:	str	w0, [sp, #84]
   14258:	ldr	x0, [sp, #56]
   1425c:	ldrh	w0, [x0, #5936]
   14260:	sxth	w1, w0
   14264:	ldr	w0, [sp, #84]
   14268:	and	w0, w0, #0xffff
   1426c:	mov	w2, w0
   14270:	ldr	x0, [sp, #56]
   14274:	ldr	w0, [x0, #5940]
   14278:	lsl	w0, w2, w0
   1427c:	sxth	w0, w0
   14280:	orr	w0, w1, w0
   14284:	sxth	w0, w0
   14288:	and	w1, w0, #0xffff
   1428c:	ldr	x0, [sp, #56]
   14290:	strh	w1, [x0, #5936]
   14294:	ldr	x0, [sp, #56]
   14298:	ldrh	w4, [x0, #5936]
   1429c:	ldr	x0, [sp, #56]
   142a0:	ldr	x1, [x0, #16]
   142a4:	ldr	x0, [sp, #56]
   142a8:	ldr	x0, [x0, #40]
   142ac:	add	x3, x0, #0x1
   142b0:	ldr	x2, [sp, #56]
   142b4:	str	x3, [x2, #40]
   142b8:	add	x0, x1, x0
   142bc:	and	w1, w4, #0xff
   142c0:	strb	w1, [x0]
   142c4:	ldr	x0, [sp, #56]
   142c8:	ldrh	w0, [x0, #5936]
   142cc:	lsr	w0, w0, #8
   142d0:	and	w4, w0, #0xffff
   142d4:	ldr	x0, [sp, #56]
   142d8:	ldr	x1, [x0, #16]
   142dc:	ldr	x0, [sp, #56]
   142e0:	ldr	x0, [x0, #40]
   142e4:	add	x3, x0, #0x1
   142e8:	ldr	x2, [sp, #56]
   142ec:	str	x3, [x2, #40]
   142f0:	add	x0, x1, x0
   142f4:	and	w1, w4, #0xff
   142f8:	strb	w1, [x0]
   142fc:	ldr	w0, [sp, #84]
   14300:	and	w0, w0, #0xffff
   14304:	mov	w2, w0
   14308:	ldr	x0, [sp, #56]
   1430c:	ldr	w0, [x0, #5940]
   14310:	mov	w1, #0x10                  	// #16
   14314:	sub	w0, w1, w0
   14318:	asr	w0, w2, w0
   1431c:	and	w1, w0, #0xffff
   14320:	ldr	x0, [sp, #56]
   14324:	strh	w1, [x0, #5936]
   14328:	ldr	x0, [sp, #56]
   1432c:	ldr	w1, [x0, #5940]
   14330:	ldr	w0, [sp, #88]
   14334:	sub	w0, w0, #0x10
   14338:	add	w1, w1, w0
   1433c:	ldr	x0, [sp, #56]
   14340:	str	w1, [x0, #5940]
   14344:	b	143a4 <inflateCodesUsed@@ZLIB_1.2.9+0x39b4>
   14348:	ldr	x0, [sp, #56]
   1434c:	ldrh	w0, [x0, #5936]
   14350:	sxth	w1, w0
   14354:	ldr	w0, [sp, #36]
   14358:	and	w0, w0, #0xffff
   1435c:	add	w0, w0, #0x4
   14360:	and	w0, w0, #0xffff
   14364:	mov	w2, w0
   14368:	ldr	x0, [sp, #56]
   1436c:	ldr	w0, [x0, #5940]
   14370:	lsl	w0, w2, w0
   14374:	sxth	w0, w0
   14378:	orr	w0, w1, w0
   1437c:	sxth	w0, w0
   14380:	and	w1, w0, #0xffff
   14384:	ldr	x0, [sp, #56]
   14388:	strh	w1, [x0, #5936]
   1438c:	ldr	x0, [sp, #56]
   14390:	ldr	w1, [x0, #5940]
   14394:	ldr	w0, [sp, #88]
   14398:	add	w1, w1, w0
   1439c:	ldr	x0, [sp, #56]
   143a0:	str	w1, [x0, #5940]
   143a4:	ldr	x0, [sp, #56]
   143a8:	ldr	w0, [x0, #2912]
   143ac:	add	w1, w0, #0x1
   143b0:	ldr	x0, [sp, #56]
   143b4:	ldr	w0, [x0, #2936]
   143b8:	add	w2, w0, #0x1
   143bc:	ldr	w0, [sp, #92]
   143c0:	add	w0, w0, #0x1
   143c4:	mov	w3, w0
   143c8:	ldr	x0, [sp, #56]
   143cc:	bl	132ec <inflateCodesUsed@@ZLIB_1.2.9+0x28fc>
   143d0:	ldr	x0, [sp, #56]
   143d4:	add	x1, x0, #0xd4
   143d8:	ldr	x0, [sp, #56]
   143dc:	add	x0, x0, #0x9c8
   143e0:	mov	x2, x0
   143e4:	ldr	x0, [sp, #56]
   143e8:	bl	145e4 <inflateCodesUsed@@ZLIB_1.2.9+0x3bf4>
   143ec:	ldr	x0, [sp, #56]
   143f0:	bl	11410 <inflateCodesUsed@@ZLIB_1.2.9+0xa20>
   143f4:	ldr	w0, [sp, #36]
   143f8:	cmp	w0, #0x0
   143fc:	b.eq	14408 <inflateCodesUsed@@ZLIB_1.2.9+0x3a18>  // b.none
   14400:	ldr	x0, [sp, #56]
   14404:	bl	15308 <inflateCodesUsed@@ZLIB_1.2.9+0x4918>
   14408:	nop
   1440c:	ldr	x19, [sp, #16]
   14410:	ldp	x29, x30, [sp], #112
   14414:	ret
   14418:	sub	sp, sp, #0x10
   1441c:	str	x0, [sp, #8]
   14420:	str	w1, [sp, #4]
   14424:	str	w2, [sp]
   14428:	ldr	x0, [sp, #8]
   1442c:	ldr	x1, [x0, #5904]
   14430:	ldr	x0, [sp, #8]
   14434:	ldr	w0, [x0, #5900]
   14438:	mov	w0, w0
   1443c:	lsl	x0, x0, #1
   14440:	add	x0, x1, x0
   14444:	ldr	w1, [sp, #4]
   14448:	and	w1, w1, #0xffff
   1444c:	strh	w1, [x0]
   14450:	ldr	x0, [sp, #8]
   14454:	ldr	x1, [x0, #5888]
   14458:	ldr	x0, [sp, #8]
   1445c:	ldr	w0, [x0, #5900]
   14460:	add	w3, w0, #0x1
   14464:	ldr	x2, [sp, #8]
   14468:	str	w3, [x2, #5900]
   1446c:	mov	w0, w0
   14470:	add	x0, x1, x0
   14474:	ldr	w1, [sp]
   14478:	and	w1, w1, #0xff
   1447c:	strb	w1, [x0]
   14480:	ldr	w0, [sp, #4]
   14484:	cmp	w0, #0x0
   14488:	b.ne	144cc <inflateCodesUsed@@ZLIB_1.2.9+0x3adc>  // b.any
   1448c:	ldr	x1, [sp, #8]
   14490:	ldr	w0, [sp]
   14494:	add	x0, x0, #0x34
   14498:	lsl	x0, x0, #2
   1449c:	add	x0, x1, x0
   144a0:	ldrh	w0, [x0, #4]
   144a4:	add	w0, w0, #0x1
   144a8:	and	w2, w0, #0xffff
   144ac:	ldr	x1, [sp, #8]
   144b0:	ldr	w0, [sp]
   144b4:	add	x0, x0, #0x34
   144b8:	lsl	x0, x0, #2
   144bc:	add	x0, x1, x0
   144c0:	mov	w1, w2
   144c4:	strh	w1, [x0, #4]
   144c8:	b	145bc <inflateCodesUsed@@ZLIB_1.2.9+0x3bcc>
   144cc:	ldr	x0, [sp, #8]
   144d0:	ldr	w0, [x0, #5928]
   144d4:	add	w1, w0, #0x1
   144d8:	ldr	x0, [sp, #8]
   144dc:	str	w1, [x0, #5928]
   144e0:	ldr	w0, [sp, #4]
   144e4:	sub	w0, w0, #0x1
   144e8:	str	w0, [sp, #4]
   144ec:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   144f0:	add	x1, x0, #0xf18
   144f4:	ldr	w0, [sp]
   144f8:	ldrb	w0, [x1, x0]
   144fc:	add	w2, w0, #0x101
   14500:	ldr	x1, [sp, #8]
   14504:	sxtw	x0, w2
   14508:	add	x0, x0, #0x34
   1450c:	lsl	x0, x0, #2
   14510:	add	x0, x1, x0
   14514:	ldrh	w0, [x0, #4]
   14518:	add	w0, w0, #0x1
   1451c:	and	w3, w0, #0xffff
   14520:	ldr	x1, [sp, #8]
   14524:	sxtw	x0, w2
   14528:	add	x0, x0, #0x34
   1452c:	lsl	x0, x0, #2
   14530:	add	x0, x1, x0
   14534:	mov	w1, w3
   14538:	strh	w1, [x0, #4]
   1453c:	ldr	w0, [sp, #4]
   14540:	cmp	w0, #0xff
   14544:	b.hi	14560 <inflateCodesUsed@@ZLIB_1.2.9+0x3b70>  // b.pmore
   14548:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   1454c:	add	x1, x0, #0xd18
   14550:	ldr	w0, [sp, #4]
   14554:	ldrb	w0, [x1, x0]
   14558:	mov	w2, w0
   1455c:	b	14580 <inflateCodesUsed@@ZLIB_1.2.9+0x3b90>
   14560:	ldr	w0, [sp, #4]
   14564:	lsr	w0, w0, #7
   14568:	add	w2, w0, #0x100
   1456c:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   14570:	add	x1, x0, #0xd18
   14574:	mov	w0, w2
   14578:	ldrb	w0, [x1, x0]
   1457c:	mov	w2, w0
   14580:	ldr	x1, [sp, #8]
   14584:	sxtw	x0, w2
   14588:	add	x0, x0, #0x270
   1458c:	lsl	x0, x0, #2
   14590:	add	x0, x1, x0
   14594:	ldrh	w0, [x0, #8]
   14598:	add	w0, w0, #0x1
   1459c:	and	w3, w0, #0xffff
   145a0:	ldr	x1, [sp, #8]
   145a4:	sxtw	x0, w2
   145a8:	add	x0, x0, #0x270
   145ac:	lsl	x0, x0, #2
   145b0:	add	x0, x1, x0
   145b4:	mov	w1, w3
   145b8:	strh	w1, [x0, #8]
   145bc:	ldr	x0, [sp, #8]
   145c0:	ldr	w1, [x0, #5900]
   145c4:	ldr	x0, [sp, #8]
   145c8:	ldr	w0, [x0, #5896]
   145cc:	sub	w0, w0, #0x1
   145d0:	cmp	w1, w0
   145d4:	cset	w0, eq  // eq = none
   145d8:	and	w0, w0, #0xff
   145dc:	add	sp, sp, #0x10
   145e0:	ret
   145e4:	sub	sp, sp, #0x70
   145e8:	str	x0, [sp, #24]
   145ec:	str	x1, [sp, #16]
   145f0:	str	x2, [sp, #8]
   145f4:	str	wzr, [sp, #108]
   145f8:	ldr	x0, [sp, #24]
   145fc:	ldr	w0, [x0, #5900]
   14600:	cmp	w0, #0x0
   14604:	b.eq	14f14 <inflateCodesUsed@@ZLIB_1.2.9+0x4524>  // b.none
   14608:	ldr	x0, [sp, #24]
   1460c:	ldr	x1, [x0, #5904]
   14610:	ldr	w0, [sp, #108]
   14614:	lsl	x0, x0, #1
   14618:	add	x0, x1, x0
   1461c:	ldrh	w0, [x0]
   14620:	str	w0, [sp, #104]
   14624:	ldr	x0, [sp, #24]
   14628:	ldr	x1, [x0, #5888]
   1462c:	ldr	w0, [sp, #108]
   14630:	add	w2, w0, #0x1
   14634:	str	w2, [sp, #108]
   14638:	mov	w0, w0
   1463c:	add	x0, x1, x0
   14640:	ldrb	w0, [x0]
   14644:	str	w0, [sp, #100]
   14648:	ldr	w0, [sp, #104]
   1464c:	cmp	w0, #0x0
   14650:	b.ne	147f4 <inflateCodesUsed@@ZLIB_1.2.9+0x3e04>  // b.any
   14654:	ldrsw	x0, [sp, #100]
   14658:	lsl	x0, x0, #2
   1465c:	ldr	x1, [sp, #16]
   14660:	add	x0, x1, x0
   14664:	ldrh	w0, [x0, #2]
   14668:	str	w0, [sp, #56]
   1466c:	ldr	x0, [sp, #24]
   14670:	ldr	w1, [x0, #5940]
   14674:	mov	w2, #0x10                  	// #16
   14678:	ldr	w0, [sp, #56]
   1467c:	sub	w0, w2, w0
   14680:	cmp	w1, w0
   14684:	b.le	14790 <inflateCodesUsed@@ZLIB_1.2.9+0x3da0>
   14688:	ldrsw	x0, [sp, #100]
   1468c:	lsl	x0, x0, #2
   14690:	ldr	x1, [sp, #16]
   14694:	add	x0, x1, x0
   14698:	ldrh	w0, [x0]
   1469c:	str	w0, [sp, #52]
   146a0:	ldr	x0, [sp, #24]
   146a4:	ldrh	w0, [x0, #5936]
   146a8:	sxth	w1, w0
   146ac:	ldr	w0, [sp, #52]
   146b0:	and	w0, w0, #0xffff
   146b4:	mov	w2, w0
   146b8:	ldr	x0, [sp, #24]
   146bc:	ldr	w0, [x0, #5940]
   146c0:	lsl	w0, w2, w0
   146c4:	sxth	w0, w0
   146c8:	orr	w0, w1, w0
   146cc:	sxth	w0, w0
   146d0:	and	w1, w0, #0xffff
   146d4:	ldr	x0, [sp, #24]
   146d8:	strh	w1, [x0, #5936]
   146dc:	ldr	x0, [sp, #24]
   146e0:	ldrh	w4, [x0, #5936]
   146e4:	ldr	x0, [sp, #24]
   146e8:	ldr	x1, [x0, #16]
   146ec:	ldr	x0, [sp, #24]
   146f0:	ldr	x0, [x0, #40]
   146f4:	add	x3, x0, #0x1
   146f8:	ldr	x2, [sp, #24]
   146fc:	str	x3, [x2, #40]
   14700:	add	x0, x1, x0
   14704:	and	w1, w4, #0xff
   14708:	strb	w1, [x0]
   1470c:	ldr	x0, [sp, #24]
   14710:	ldrh	w0, [x0, #5936]
   14714:	lsr	w0, w0, #8
   14718:	and	w4, w0, #0xffff
   1471c:	ldr	x0, [sp, #24]
   14720:	ldr	x1, [x0, #16]
   14724:	ldr	x0, [sp, #24]
   14728:	ldr	x0, [x0, #40]
   1472c:	add	x3, x0, #0x1
   14730:	ldr	x2, [sp, #24]
   14734:	str	x3, [x2, #40]
   14738:	add	x0, x1, x0
   1473c:	and	w1, w4, #0xff
   14740:	strb	w1, [x0]
   14744:	ldr	w0, [sp, #52]
   14748:	and	w0, w0, #0xffff
   1474c:	mov	w2, w0
   14750:	ldr	x0, [sp, #24]
   14754:	ldr	w0, [x0, #5940]
   14758:	mov	w1, #0x10                  	// #16
   1475c:	sub	w0, w1, w0
   14760:	asr	w0, w2, w0
   14764:	and	w1, w0, #0xffff
   14768:	ldr	x0, [sp, #24]
   1476c:	strh	w1, [x0, #5936]
   14770:	ldr	x0, [sp, #24]
   14774:	ldr	w1, [x0, #5940]
   14778:	ldr	w0, [sp, #56]
   1477c:	sub	w0, w0, #0x10
   14780:	add	w1, w1, w0
   14784:	ldr	x0, [sp, #24]
   14788:	str	w1, [x0, #5940]
   1478c:	b	14f00 <inflateCodesUsed@@ZLIB_1.2.9+0x4510>
   14790:	ldr	x0, [sp, #24]
   14794:	ldrh	w0, [x0, #5936]
   14798:	sxth	w1, w0
   1479c:	ldrsw	x0, [sp, #100]
   147a0:	lsl	x0, x0, #2
   147a4:	ldr	x2, [sp, #16]
   147a8:	add	x0, x2, x0
   147ac:	ldrh	w0, [x0]
   147b0:	mov	w2, w0
   147b4:	ldr	x0, [sp, #24]
   147b8:	ldr	w0, [x0, #5940]
   147bc:	lsl	w0, w2, w0
   147c0:	sxth	w0, w0
   147c4:	orr	w0, w1, w0
   147c8:	sxth	w0, w0
   147cc:	and	w1, w0, #0xffff
   147d0:	ldr	x0, [sp, #24]
   147d4:	strh	w1, [x0, #5936]
   147d8:	ldr	x0, [sp, #24]
   147dc:	ldr	w1, [x0, #5940]
   147e0:	ldr	w0, [sp, #56]
   147e4:	add	w1, w1, w0
   147e8:	ldr	x0, [sp, #24]
   147ec:	str	w1, [x0, #5940]
   147f0:	b	14f00 <inflateCodesUsed@@ZLIB_1.2.9+0x4510>
   147f4:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   147f8:	add	x1, x0, #0xf18
   147fc:	ldrsw	x0, [sp, #100]
   14800:	ldrb	w0, [x1, x0]
   14804:	str	w0, [sp, #96]
   14808:	ldr	w0, [sp, #96]
   1480c:	add	w0, w0, #0x101
   14810:	mov	w0, w0
   14814:	lsl	x0, x0, #2
   14818:	ldr	x1, [sp, #16]
   1481c:	add	x0, x1, x0
   14820:	ldrh	w0, [x0, #2]
   14824:	str	w0, [sp, #92]
   14828:	ldr	x0, [sp, #24]
   1482c:	ldr	w1, [x0, #5940]
   14830:	mov	w2, #0x10                  	// #16
   14834:	ldr	w0, [sp, #92]
   14838:	sub	w0, w2, w0
   1483c:	cmp	w1, w0
   14840:	b.le	14954 <inflateCodesUsed@@ZLIB_1.2.9+0x3f64>
   14844:	ldr	w0, [sp, #96]
   14848:	add	w0, w0, #0x101
   1484c:	mov	w0, w0
   14850:	lsl	x0, x0, #2
   14854:	ldr	x1, [sp, #16]
   14858:	add	x0, x1, x0
   1485c:	ldrh	w0, [x0]
   14860:	str	w0, [sp, #88]
   14864:	ldr	x0, [sp, #24]
   14868:	ldrh	w0, [x0, #5936]
   1486c:	sxth	w1, w0
   14870:	ldr	w0, [sp, #88]
   14874:	and	w0, w0, #0xffff
   14878:	mov	w2, w0
   1487c:	ldr	x0, [sp, #24]
   14880:	ldr	w0, [x0, #5940]
   14884:	lsl	w0, w2, w0
   14888:	sxth	w0, w0
   1488c:	orr	w0, w1, w0
   14890:	sxth	w0, w0
   14894:	and	w1, w0, #0xffff
   14898:	ldr	x0, [sp, #24]
   1489c:	strh	w1, [x0, #5936]
   148a0:	ldr	x0, [sp, #24]
   148a4:	ldrh	w4, [x0, #5936]
   148a8:	ldr	x0, [sp, #24]
   148ac:	ldr	x1, [x0, #16]
   148b0:	ldr	x0, [sp, #24]
   148b4:	ldr	x0, [x0, #40]
   148b8:	add	x3, x0, #0x1
   148bc:	ldr	x2, [sp, #24]
   148c0:	str	x3, [x2, #40]
   148c4:	add	x0, x1, x0
   148c8:	and	w1, w4, #0xff
   148cc:	strb	w1, [x0]
   148d0:	ldr	x0, [sp, #24]
   148d4:	ldrh	w0, [x0, #5936]
   148d8:	lsr	w0, w0, #8
   148dc:	and	w4, w0, #0xffff
   148e0:	ldr	x0, [sp, #24]
   148e4:	ldr	x1, [x0, #16]
   148e8:	ldr	x0, [sp, #24]
   148ec:	ldr	x0, [x0, #40]
   148f0:	add	x3, x0, #0x1
   148f4:	ldr	x2, [sp, #24]
   148f8:	str	x3, [x2, #40]
   148fc:	add	x0, x1, x0
   14900:	and	w1, w4, #0xff
   14904:	strb	w1, [x0]
   14908:	ldr	w0, [sp, #88]
   1490c:	and	w0, w0, #0xffff
   14910:	mov	w2, w0
   14914:	ldr	x0, [sp, #24]
   14918:	ldr	w0, [x0, #5940]
   1491c:	mov	w1, #0x10                  	// #16
   14920:	sub	w0, w1, w0
   14924:	asr	w0, w2, w0
   14928:	and	w1, w0, #0xffff
   1492c:	ldr	x0, [sp, #24]
   14930:	strh	w1, [x0, #5936]
   14934:	ldr	x0, [sp, #24]
   14938:	ldr	w1, [x0, #5940]
   1493c:	ldr	w0, [sp, #92]
   14940:	sub	w0, w0, #0x10
   14944:	add	w1, w1, w0
   14948:	ldr	x0, [sp, #24]
   1494c:	str	w1, [x0, #5940]
   14950:	b	149bc <inflateCodesUsed@@ZLIB_1.2.9+0x3fcc>
   14954:	ldr	x0, [sp, #24]
   14958:	ldrh	w0, [x0, #5936]
   1495c:	sxth	w1, w0
   14960:	ldr	w0, [sp, #96]
   14964:	add	w0, w0, #0x101
   14968:	mov	w0, w0
   1496c:	lsl	x0, x0, #2
   14970:	ldr	x2, [sp, #16]
   14974:	add	x0, x2, x0
   14978:	ldrh	w0, [x0]
   1497c:	mov	w2, w0
   14980:	ldr	x0, [sp, #24]
   14984:	ldr	w0, [x0, #5940]
   14988:	lsl	w0, w2, w0
   1498c:	sxth	w0, w0
   14990:	orr	w0, w1, w0
   14994:	sxth	w0, w0
   14998:	and	w1, w0, #0xffff
   1499c:	ldr	x0, [sp, #24]
   149a0:	strh	w1, [x0, #5936]
   149a4:	ldr	x0, [sp, #24]
   149a8:	ldr	w1, [x0, #5940]
   149ac:	ldr	w0, [sp, #92]
   149b0:	add	w1, w1, w0
   149b4:	ldr	x0, [sp, #24]
   149b8:	str	w1, [x0, #5940]
   149bc:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   149c0:	add	x0, x0, #0x6c8
   149c4:	ldr	w1, [sp, #96]
   149c8:	ldr	w0, [x0, x1, lsl #2]
   149cc:	str	w0, [sp, #84]
   149d0:	ldr	w0, [sp, #84]
   149d4:	cmp	w0, #0x0
   149d8:	b.eq	14b68 <inflateCodesUsed@@ZLIB_1.2.9+0x4178>  // b.none
   149dc:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   149e0:	add	x0, x0, #0x18
   149e4:	ldr	w1, [sp, #96]
   149e8:	ldr	w0, [x0, x1, lsl #2]
   149ec:	ldr	w1, [sp, #100]
   149f0:	sub	w0, w1, w0
   149f4:	str	w0, [sp, #100]
   149f8:	ldr	w0, [sp, #84]
   149fc:	str	w0, [sp, #80]
   14a00:	ldr	x0, [sp, #24]
   14a04:	ldr	w1, [x0, #5940]
   14a08:	mov	w2, #0x10                  	// #16
   14a0c:	ldr	w0, [sp, #80]
   14a10:	sub	w0, w2, w0
   14a14:	cmp	w1, w0
   14a18:	b.le	14b14 <inflateCodesUsed@@ZLIB_1.2.9+0x4124>
   14a1c:	ldr	w0, [sp, #100]
   14a20:	str	w0, [sp, #76]
   14a24:	ldr	x0, [sp, #24]
   14a28:	ldrh	w0, [x0, #5936]
   14a2c:	sxth	w1, w0
   14a30:	ldr	w0, [sp, #76]
   14a34:	and	w0, w0, #0xffff
   14a38:	mov	w2, w0
   14a3c:	ldr	x0, [sp, #24]
   14a40:	ldr	w0, [x0, #5940]
   14a44:	lsl	w0, w2, w0
   14a48:	sxth	w0, w0
   14a4c:	orr	w0, w1, w0
   14a50:	sxth	w0, w0
   14a54:	and	w1, w0, #0xffff
   14a58:	ldr	x0, [sp, #24]
   14a5c:	strh	w1, [x0, #5936]
   14a60:	ldr	x0, [sp, #24]
   14a64:	ldrh	w4, [x0, #5936]
   14a68:	ldr	x0, [sp, #24]
   14a6c:	ldr	x1, [x0, #16]
   14a70:	ldr	x0, [sp, #24]
   14a74:	ldr	x0, [x0, #40]
   14a78:	add	x3, x0, #0x1
   14a7c:	ldr	x2, [sp, #24]
   14a80:	str	x3, [x2, #40]
   14a84:	add	x0, x1, x0
   14a88:	and	w1, w4, #0xff
   14a8c:	strb	w1, [x0]
   14a90:	ldr	x0, [sp, #24]
   14a94:	ldrh	w0, [x0, #5936]
   14a98:	lsr	w0, w0, #8
   14a9c:	and	w4, w0, #0xffff
   14aa0:	ldr	x0, [sp, #24]
   14aa4:	ldr	x1, [x0, #16]
   14aa8:	ldr	x0, [sp, #24]
   14aac:	ldr	x0, [x0, #40]
   14ab0:	add	x3, x0, #0x1
   14ab4:	ldr	x2, [sp, #24]
   14ab8:	str	x3, [x2, #40]
   14abc:	add	x0, x1, x0
   14ac0:	and	w1, w4, #0xff
   14ac4:	strb	w1, [x0]
   14ac8:	ldr	w0, [sp, #76]
   14acc:	and	w0, w0, #0xffff
   14ad0:	mov	w2, w0
   14ad4:	ldr	x0, [sp, #24]
   14ad8:	ldr	w0, [x0, #5940]
   14adc:	mov	w1, #0x10                  	// #16
   14ae0:	sub	w0, w1, w0
   14ae4:	asr	w0, w2, w0
   14ae8:	and	w1, w0, #0xffff
   14aec:	ldr	x0, [sp, #24]
   14af0:	strh	w1, [x0, #5936]
   14af4:	ldr	x0, [sp, #24]
   14af8:	ldr	w1, [x0, #5940]
   14afc:	ldr	w0, [sp, #80]
   14b00:	sub	w0, w0, #0x10
   14b04:	add	w1, w1, w0
   14b08:	ldr	x0, [sp, #24]
   14b0c:	str	w1, [x0, #5940]
   14b10:	b	14b68 <inflateCodesUsed@@ZLIB_1.2.9+0x4178>
   14b14:	ldr	x0, [sp, #24]
   14b18:	ldrh	w0, [x0, #5936]
   14b1c:	sxth	w1, w0
   14b20:	ldr	w0, [sp, #100]
   14b24:	and	w0, w0, #0xffff
   14b28:	mov	w2, w0
   14b2c:	ldr	x0, [sp, #24]
   14b30:	ldr	w0, [x0, #5940]
   14b34:	lsl	w0, w2, w0
   14b38:	sxth	w0, w0
   14b3c:	orr	w0, w1, w0
   14b40:	sxth	w0, w0
   14b44:	and	w1, w0, #0xffff
   14b48:	ldr	x0, [sp, #24]
   14b4c:	strh	w1, [x0, #5936]
   14b50:	ldr	x0, [sp, #24]
   14b54:	ldr	w1, [x0, #5940]
   14b58:	ldr	w0, [sp, #80]
   14b5c:	add	w1, w1, w0
   14b60:	ldr	x0, [sp, #24]
   14b64:	str	w1, [x0, #5940]
   14b68:	ldr	w0, [sp, #104]
   14b6c:	sub	w0, w0, #0x1
   14b70:	str	w0, [sp, #104]
   14b74:	ldr	w0, [sp, #104]
   14b78:	cmp	w0, #0xff
   14b7c:	b.hi	14b94 <inflateCodesUsed@@ZLIB_1.2.9+0x41a4>  // b.pmore
   14b80:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   14b84:	add	x1, x0, #0xd18
   14b88:	ldr	w0, [sp, #104]
   14b8c:	ldrb	w0, [x1, x0]
   14b90:	b	14bb0 <inflateCodesUsed@@ZLIB_1.2.9+0x41c0>
   14b94:	ldr	w0, [sp, #104]
   14b98:	lsr	w0, w0, #7
   14b9c:	add	w2, w0, #0x100
   14ba0:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   14ba4:	add	x1, x0, #0xd18
   14ba8:	mov	w0, w2
   14bac:	ldrb	w0, [x1, x0]
   14bb0:	str	w0, [sp, #96]
   14bb4:	ldr	w0, [sp, #96]
   14bb8:	lsl	x0, x0, #2
   14bbc:	ldr	x1, [sp, #8]
   14bc0:	add	x0, x1, x0
   14bc4:	ldrh	w0, [x0, #2]
   14bc8:	str	w0, [sp, #72]
   14bcc:	ldr	x0, [sp, #24]
   14bd0:	ldr	w1, [x0, #5940]
   14bd4:	mov	w2, #0x10                  	// #16
   14bd8:	ldr	w0, [sp, #72]
   14bdc:	sub	w0, w2, w0
   14be0:	cmp	w1, w0
   14be4:	b.le	14cf0 <inflateCodesUsed@@ZLIB_1.2.9+0x4300>
   14be8:	ldr	w0, [sp, #96]
   14bec:	lsl	x0, x0, #2
   14bf0:	ldr	x1, [sp, #8]
   14bf4:	add	x0, x1, x0
   14bf8:	ldrh	w0, [x0]
   14bfc:	str	w0, [sp, #68]
   14c00:	ldr	x0, [sp, #24]
   14c04:	ldrh	w0, [x0, #5936]
   14c08:	sxth	w1, w0
   14c0c:	ldr	w0, [sp, #68]
   14c10:	and	w0, w0, #0xffff
   14c14:	mov	w2, w0
   14c18:	ldr	x0, [sp, #24]
   14c1c:	ldr	w0, [x0, #5940]
   14c20:	lsl	w0, w2, w0
   14c24:	sxth	w0, w0
   14c28:	orr	w0, w1, w0
   14c2c:	sxth	w0, w0
   14c30:	and	w1, w0, #0xffff
   14c34:	ldr	x0, [sp, #24]
   14c38:	strh	w1, [x0, #5936]
   14c3c:	ldr	x0, [sp, #24]
   14c40:	ldrh	w4, [x0, #5936]
   14c44:	ldr	x0, [sp, #24]
   14c48:	ldr	x1, [x0, #16]
   14c4c:	ldr	x0, [sp, #24]
   14c50:	ldr	x0, [x0, #40]
   14c54:	add	x3, x0, #0x1
   14c58:	ldr	x2, [sp, #24]
   14c5c:	str	x3, [x2, #40]
   14c60:	add	x0, x1, x0
   14c64:	and	w1, w4, #0xff
   14c68:	strb	w1, [x0]
   14c6c:	ldr	x0, [sp, #24]
   14c70:	ldrh	w0, [x0, #5936]
   14c74:	lsr	w0, w0, #8
   14c78:	and	w4, w0, #0xffff
   14c7c:	ldr	x0, [sp, #24]
   14c80:	ldr	x1, [x0, #16]
   14c84:	ldr	x0, [sp, #24]
   14c88:	ldr	x0, [x0, #40]
   14c8c:	add	x3, x0, #0x1
   14c90:	ldr	x2, [sp, #24]
   14c94:	str	x3, [x2, #40]
   14c98:	add	x0, x1, x0
   14c9c:	and	w1, w4, #0xff
   14ca0:	strb	w1, [x0]
   14ca4:	ldr	w0, [sp, #68]
   14ca8:	and	w0, w0, #0xffff
   14cac:	mov	w2, w0
   14cb0:	ldr	x0, [sp, #24]
   14cb4:	ldr	w0, [x0, #5940]
   14cb8:	mov	w1, #0x10                  	// #16
   14cbc:	sub	w0, w1, w0
   14cc0:	asr	w0, w2, w0
   14cc4:	and	w1, w0, #0xffff
   14cc8:	ldr	x0, [sp, #24]
   14ccc:	strh	w1, [x0, #5936]
   14cd0:	ldr	x0, [sp, #24]
   14cd4:	ldr	w1, [x0, #5940]
   14cd8:	ldr	w0, [sp, #72]
   14cdc:	sub	w0, w0, #0x10
   14ce0:	add	w1, w1, w0
   14ce4:	ldr	x0, [sp, #24]
   14ce8:	str	w1, [x0, #5940]
   14cec:	b	14d50 <inflateCodesUsed@@ZLIB_1.2.9+0x4360>
   14cf0:	ldr	x0, [sp, #24]
   14cf4:	ldrh	w0, [x0, #5936]
   14cf8:	sxth	w1, w0
   14cfc:	ldr	w0, [sp, #96]
   14d00:	lsl	x0, x0, #2
   14d04:	ldr	x2, [sp, #8]
   14d08:	add	x0, x2, x0
   14d0c:	ldrh	w0, [x0]
   14d10:	mov	w2, w0
   14d14:	ldr	x0, [sp, #24]
   14d18:	ldr	w0, [x0, #5940]
   14d1c:	lsl	w0, w2, w0
   14d20:	sxth	w0, w0
   14d24:	orr	w0, w1, w0
   14d28:	sxth	w0, w0
   14d2c:	and	w1, w0, #0xffff
   14d30:	ldr	x0, [sp, #24]
   14d34:	strh	w1, [x0, #5936]
   14d38:	ldr	x0, [sp, #24]
   14d3c:	ldr	w1, [x0, #5940]
   14d40:	ldr	w0, [sp, #72]
   14d44:	add	w1, w1, w0
   14d48:	ldr	x0, [sp, #24]
   14d4c:	str	w1, [x0, #5940]
   14d50:	adrp	x0, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3190>
   14d54:	add	x0, x0, #0x740
   14d58:	ldr	w1, [sp, #96]
   14d5c:	ldr	w0, [x0, x1, lsl #2]
   14d60:	str	w0, [sp, #84]
   14d64:	ldr	w0, [sp, #84]
   14d68:	cmp	w0, #0x0
   14d6c:	b.eq	14f00 <inflateCodesUsed@@ZLIB_1.2.9+0x4510>  // b.none
   14d70:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   14d74:	add	x0, x0, #0x90
   14d78:	ldr	w1, [sp, #96]
   14d7c:	ldr	w0, [x0, x1, lsl #2]
   14d80:	mov	w1, w0
   14d84:	ldr	w0, [sp, #104]
   14d88:	sub	w0, w0, w1
   14d8c:	str	w0, [sp, #104]
   14d90:	ldr	w0, [sp, #84]
   14d94:	str	w0, [sp, #64]
   14d98:	ldr	x0, [sp, #24]
   14d9c:	ldr	w1, [x0, #5940]
   14da0:	mov	w2, #0x10                  	// #16
   14da4:	ldr	w0, [sp, #64]
   14da8:	sub	w0, w2, w0
   14dac:	cmp	w1, w0
   14db0:	b.le	14eac <inflateCodesUsed@@ZLIB_1.2.9+0x44bc>
   14db4:	ldr	w0, [sp, #104]
   14db8:	str	w0, [sp, #60]
   14dbc:	ldr	x0, [sp, #24]
   14dc0:	ldrh	w0, [x0, #5936]
   14dc4:	sxth	w1, w0
   14dc8:	ldr	w0, [sp, #60]
   14dcc:	and	w0, w0, #0xffff
   14dd0:	mov	w2, w0
   14dd4:	ldr	x0, [sp, #24]
   14dd8:	ldr	w0, [x0, #5940]
   14ddc:	lsl	w0, w2, w0
   14de0:	sxth	w0, w0
   14de4:	orr	w0, w1, w0
   14de8:	sxth	w0, w0
   14dec:	and	w1, w0, #0xffff
   14df0:	ldr	x0, [sp, #24]
   14df4:	strh	w1, [x0, #5936]
   14df8:	ldr	x0, [sp, #24]
   14dfc:	ldrh	w4, [x0, #5936]
   14e00:	ldr	x0, [sp, #24]
   14e04:	ldr	x1, [x0, #16]
   14e08:	ldr	x0, [sp, #24]
   14e0c:	ldr	x0, [x0, #40]
   14e10:	add	x3, x0, #0x1
   14e14:	ldr	x2, [sp, #24]
   14e18:	str	x3, [x2, #40]
   14e1c:	add	x0, x1, x0
   14e20:	and	w1, w4, #0xff
   14e24:	strb	w1, [x0]
   14e28:	ldr	x0, [sp, #24]
   14e2c:	ldrh	w0, [x0, #5936]
   14e30:	lsr	w0, w0, #8
   14e34:	and	w4, w0, #0xffff
   14e38:	ldr	x0, [sp, #24]
   14e3c:	ldr	x1, [x0, #16]
   14e40:	ldr	x0, [sp, #24]
   14e44:	ldr	x0, [x0, #40]
   14e48:	add	x3, x0, #0x1
   14e4c:	ldr	x2, [sp, #24]
   14e50:	str	x3, [x2, #40]
   14e54:	add	x0, x1, x0
   14e58:	and	w1, w4, #0xff
   14e5c:	strb	w1, [x0]
   14e60:	ldr	w0, [sp, #60]
   14e64:	and	w0, w0, #0xffff
   14e68:	mov	w2, w0
   14e6c:	ldr	x0, [sp, #24]
   14e70:	ldr	w0, [x0, #5940]
   14e74:	mov	w1, #0x10                  	// #16
   14e78:	sub	w0, w1, w0
   14e7c:	asr	w0, w2, w0
   14e80:	and	w1, w0, #0xffff
   14e84:	ldr	x0, [sp, #24]
   14e88:	strh	w1, [x0, #5936]
   14e8c:	ldr	x0, [sp, #24]
   14e90:	ldr	w1, [x0, #5940]
   14e94:	ldr	w0, [sp, #64]
   14e98:	sub	w0, w0, #0x10
   14e9c:	add	w1, w1, w0
   14ea0:	ldr	x0, [sp, #24]
   14ea4:	str	w1, [x0, #5940]
   14ea8:	b	14f00 <inflateCodesUsed@@ZLIB_1.2.9+0x4510>
   14eac:	ldr	x0, [sp, #24]
   14eb0:	ldrh	w0, [x0, #5936]
   14eb4:	sxth	w1, w0
   14eb8:	ldr	w0, [sp, #104]
   14ebc:	and	w0, w0, #0xffff
   14ec0:	mov	w2, w0
   14ec4:	ldr	x0, [sp, #24]
   14ec8:	ldr	w0, [x0, #5940]
   14ecc:	lsl	w0, w2, w0
   14ed0:	sxth	w0, w0
   14ed4:	orr	w0, w1, w0
   14ed8:	sxth	w0, w0
   14edc:	and	w1, w0, #0xffff
   14ee0:	ldr	x0, [sp, #24]
   14ee4:	strh	w1, [x0, #5936]
   14ee8:	ldr	x0, [sp, #24]
   14eec:	ldr	w1, [x0, #5940]
   14ef0:	ldr	w0, [sp, #64]
   14ef4:	add	w1, w1, w0
   14ef8:	ldr	x0, [sp, #24]
   14efc:	str	w1, [x0, #5940]
   14f00:	ldr	x0, [sp, #24]
   14f04:	ldr	w0, [x0, #5900]
   14f08:	ldr	w1, [sp, #108]
   14f0c:	cmp	w1, w0
   14f10:	b.cc	14608 <inflateCodesUsed@@ZLIB_1.2.9+0x3c18>  // b.lo, b.ul, b.last
   14f14:	ldr	x0, [sp, #16]
   14f18:	add	x0, x0, #0x400
   14f1c:	ldrh	w0, [x0, #2]
   14f20:	str	w0, [sp, #48]
   14f24:	ldr	x0, [sp, #24]
   14f28:	ldr	w1, [x0, #5940]
   14f2c:	mov	w2, #0x10                  	// #16
   14f30:	ldr	w0, [sp, #48]
   14f34:	sub	w0, w2, w0
   14f38:	cmp	w1, w0
   14f3c:	b.le	15040 <inflateCodesUsed@@ZLIB_1.2.9+0x4650>
   14f40:	ldr	x0, [sp, #16]
   14f44:	add	x0, x0, #0x400
   14f48:	ldrh	w0, [x0]
   14f4c:	str	w0, [sp, #44]
   14f50:	ldr	x0, [sp, #24]
   14f54:	ldrh	w0, [x0, #5936]
   14f58:	sxth	w1, w0
   14f5c:	ldr	w0, [sp, #44]
   14f60:	and	w0, w0, #0xffff
   14f64:	mov	w2, w0
   14f68:	ldr	x0, [sp, #24]
   14f6c:	ldr	w0, [x0, #5940]
   14f70:	lsl	w0, w2, w0
   14f74:	sxth	w0, w0
   14f78:	orr	w0, w1, w0
   14f7c:	sxth	w0, w0
   14f80:	and	w1, w0, #0xffff
   14f84:	ldr	x0, [sp, #24]
   14f88:	strh	w1, [x0, #5936]
   14f8c:	ldr	x0, [sp, #24]
   14f90:	ldrh	w4, [x0, #5936]
   14f94:	ldr	x0, [sp, #24]
   14f98:	ldr	x1, [x0, #16]
   14f9c:	ldr	x0, [sp, #24]
   14fa0:	ldr	x0, [x0, #40]
   14fa4:	add	x3, x0, #0x1
   14fa8:	ldr	x2, [sp, #24]
   14fac:	str	x3, [x2, #40]
   14fb0:	add	x0, x1, x0
   14fb4:	and	w1, w4, #0xff
   14fb8:	strb	w1, [x0]
   14fbc:	ldr	x0, [sp, #24]
   14fc0:	ldrh	w0, [x0, #5936]
   14fc4:	lsr	w0, w0, #8
   14fc8:	and	w4, w0, #0xffff
   14fcc:	ldr	x0, [sp, #24]
   14fd0:	ldr	x1, [x0, #16]
   14fd4:	ldr	x0, [sp, #24]
   14fd8:	ldr	x0, [x0, #40]
   14fdc:	add	x3, x0, #0x1
   14fe0:	ldr	x2, [sp, #24]
   14fe4:	str	x3, [x2, #40]
   14fe8:	add	x0, x1, x0
   14fec:	and	w1, w4, #0xff
   14ff0:	strb	w1, [x0]
   14ff4:	ldr	w0, [sp, #44]
   14ff8:	and	w0, w0, #0xffff
   14ffc:	mov	w2, w0
   15000:	ldr	x0, [sp, #24]
   15004:	ldr	w0, [x0, #5940]
   15008:	mov	w1, #0x10                  	// #16
   1500c:	sub	w0, w1, w0
   15010:	asr	w0, w2, w0
   15014:	and	w1, w0, #0xffff
   15018:	ldr	x0, [sp, #24]
   1501c:	strh	w1, [x0, #5936]
   15020:	ldr	x0, [sp, #24]
   15024:	ldr	w1, [x0, #5940]
   15028:	ldr	w0, [sp, #48]
   1502c:	sub	w0, w0, #0x10
   15030:	add	w1, w1, w0
   15034:	ldr	x0, [sp, #24]
   15038:	str	w1, [x0, #5940]
   1503c:	b	15098 <inflateCodesUsed@@ZLIB_1.2.9+0x46a8>
   15040:	ldr	x0, [sp, #24]
   15044:	ldrh	w0, [x0, #5936]
   15048:	sxth	w1, w0
   1504c:	ldr	x0, [sp, #16]
   15050:	add	x0, x0, #0x400
   15054:	ldrh	w0, [x0]
   15058:	mov	w2, w0
   1505c:	ldr	x0, [sp, #24]
   15060:	ldr	w0, [x0, #5940]
   15064:	lsl	w0, w2, w0
   15068:	sxth	w0, w0
   1506c:	orr	w0, w1, w0
   15070:	sxth	w0, w0
   15074:	and	w1, w0, #0xffff
   15078:	ldr	x0, [sp, #24]
   1507c:	strh	w1, [x0, #5936]
   15080:	ldr	x0, [sp, #24]
   15084:	ldr	w1, [x0, #5940]
   15088:	ldr	w0, [sp, #48]
   1508c:	add	w1, w1, w0
   15090:	ldr	x0, [sp, #24]
   15094:	str	w1, [x0, #5940]
   15098:	nop
   1509c:	add	sp, sp, #0x70
   150a0:	ret
   150a4:	sub	sp, sp, #0x20
   150a8:	str	x0, [sp, #8]
   150ac:	mov	x0, #0xc07f                	// #49279
   150b0:	movk	x0, #0xf3ff, lsl #16
   150b4:	str	x0, [sp, #24]
   150b8:	str	wzr, [sp, #20]
   150bc:	b	15110 <inflateCodesUsed@@ZLIB_1.2.9+0x4720>
   150c0:	ldr	x0, [sp, #24]
   150c4:	and	x0, x0, #0x1
   150c8:	cmp	x0, #0x0
   150cc:	b.eq	150f8 <inflateCodesUsed@@ZLIB_1.2.9+0x4708>  // b.none
   150d0:	ldr	x1, [sp, #8]
   150d4:	ldrsw	x0, [sp, #20]
   150d8:	add	x0, x0, #0x34
   150dc:	lsl	x0, x0, #2
   150e0:	add	x0, x1, x0
   150e4:	ldrh	w0, [x0, #4]
   150e8:	cmp	w0, #0x0
   150ec:	b.eq	150f8 <inflateCodesUsed@@ZLIB_1.2.9+0x4708>  // b.none
   150f0:	mov	w0, #0x0                   	// #0
   150f4:	b	151a4 <inflateCodesUsed@@ZLIB_1.2.9+0x47b4>
   150f8:	ldr	w0, [sp, #20]
   150fc:	add	w0, w0, #0x1
   15100:	str	w0, [sp, #20]
   15104:	ldr	x0, [sp, #24]
   15108:	lsr	x0, x0, #1
   1510c:	str	x0, [sp, #24]
   15110:	ldr	w0, [sp, #20]
   15114:	cmp	w0, #0x1f
   15118:	b.le	150c0 <inflateCodesUsed@@ZLIB_1.2.9+0x46d0>
   1511c:	ldr	x0, [sp, #8]
   15120:	ldrh	w0, [x0, #248]
   15124:	cmp	w0, #0x0
   15128:	b.ne	1514c <inflateCodesUsed@@ZLIB_1.2.9+0x475c>  // b.any
   1512c:	ldr	x0, [sp, #8]
   15130:	ldrh	w0, [x0, #252]
   15134:	cmp	w0, #0x0
   15138:	b.ne	1514c <inflateCodesUsed@@ZLIB_1.2.9+0x475c>  // b.any
   1513c:	ldr	x0, [sp, #8]
   15140:	ldrh	w0, [x0, #264]
   15144:	cmp	w0, #0x0
   15148:	b.eq	15154 <inflateCodesUsed@@ZLIB_1.2.9+0x4764>  // b.none
   1514c:	mov	w0, #0x1                   	// #1
   15150:	b	151a4 <inflateCodesUsed@@ZLIB_1.2.9+0x47b4>
   15154:	mov	w0, #0x20                  	// #32
   15158:	str	w0, [sp, #20]
   1515c:	b	15194 <inflateCodesUsed@@ZLIB_1.2.9+0x47a4>
   15160:	ldr	x1, [sp, #8]
   15164:	ldrsw	x0, [sp, #20]
   15168:	add	x0, x0, #0x34
   1516c:	lsl	x0, x0, #2
   15170:	add	x0, x1, x0
   15174:	ldrh	w0, [x0, #4]
   15178:	cmp	w0, #0x0
   1517c:	b.eq	15188 <inflateCodesUsed@@ZLIB_1.2.9+0x4798>  // b.none
   15180:	mov	w0, #0x1                   	// #1
   15184:	b	151a4 <inflateCodesUsed@@ZLIB_1.2.9+0x47b4>
   15188:	ldr	w0, [sp, #20]
   1518c:	add	w0, w0, #0x1
   15190:	str	w0, [sp, #20]
   15194:	ldr	w0, [sp, #20]
   15198:	cmp	w0, #0xff
   1519c:	b.le	15160 <inflateCodesUsed@@ZLIB_1.2.9+0x4770>
   151a0:	mov	w0, #0x0                   	// #0
   151a4:	add	sp, sp, #0x20
   151a8:	ret
   151ac:	str	x19, [sp, #-32]!
   151b0:	str	w0, [sp, #28]
   151b4:	str	w1, [sp, #24]
   151b8:	mov	w19, #0x0                   	// #0
   151bc:	ldr	w0, [sp, #28]
   151c0:	and	w0, w0, #0x1
   151c4:	orr	w19, w19, w0
   151c8:	ldr	w0, [sp, #28]
   151cc:	lsr	w0, w0, #1
   151d0:	str	w0, [sp, #28]
   151d4:	lsl	w19, w19, #1
   151d8:	ldr	w0, [sp, #24]
   151dc:	sub	w0, w0, #0x1
   151e0:	str	w0, [sp, #24]
   151e4:	ldr	w0, [sp, #24]
   151e8:	cmp	w0, #0x0
   151ec:	b.gt	151bc <inflateCodesUsed@@ZLIB_1.2.9+0x47cc>
   151f0:	lsr	w0, w19, #1
   151f4:	ldr	x19, [sp], #32
   151f8:	ret
   151fc:	sub	sp, sp, #0x10
   15200:	str	x0, [sp, #8]
   15204:	ldr	x0, [sp, #8]
   15208:	ldr	w0, [x0, #5940]
   1520c:	cmp	w0, #0x10
   15210:	b.ne	15290 <inflateCodesUsed@@ZLIB_1.2.9+0x48a0>  // b.any
   15214:	ldr	x0, [sp, #8]
   15218:	ldrh	w4, [x0, #5936]
   1521c:	ldr	x0, [sp, #8]
   15220:	ldr	x1, [x0, #16]
   15224:	ldr	x0, [sp, #8]
   15228:	ldr	x0, [x0, #40]
   1522c:	add	x3, x0, #0x1
   15230:	ldr	x2, [sp, #8]
   15234:	str	x3, [x2, #40]
   15238:	add	x0, x1, x0
   1523c:	and	w1, w4, #0xff
   15240:	strb	w1, [x0]
   15244:	ldr	x0, [sp, #8]
   15248:	ldrh	w0, [x0, #5936]
   1524c:	lsr	w0, w0, #8
   15250:	and	w4, w0, #0xffff
   15254:	ldr	x0, [sp, #8]
   15258:	ldr	x1, [x0, #16]
   1525c:	ldr	x0, [sp, #8]
   15260:	ldr	x0, [x0, #40]
   15264:	add	x3, x0, #0x1
   15268:	ldr	x2, [sp, #8]
   1526c:	str	x3, [x2, #40]
   15270:	add	x0, x1, x0
   15274:	and	w1, w4, #0xff
   15278:	strb	w1, [x0]
   1527c:	ldr	x0, [sp, #8]
   15280:	strh	wzr, [x0, #5936]
   15284:	ldr	x0, [sp, #8]
   15288:	str	wzr, [x0, #5940]
   1528c:	b	152fc <inflateCodesUsed@@ZLIB_1.2.9+0x490c>
   15290:	ldr	x0, [sp, #8]
   15294:	ldr	w0, [x0, #5940]
   15298:	cmp	w0, #0x7
   1529c:	b.le	152fc <inflateCodesUsed@@ZLIB_1.2.9+0x490c>
   152a0:	ldr	x0, [sp, #8]
   152a4:	ldrh	w4, [x0, #5936]
   152a8:	ldr	x0, [sp, #8]
   152ac:	ldr	x1, [x0, #16]
   152b0:	ldr	x0, [sp, #8]
   152b4:	ldr	x0, [x0, #40]
   152b8:	add	x3, x0, #0x1
   152bc:	ldr	x2, [sp, #8]
   152c0:	str	x3, [x2, #40]
   152c4:	add	x0, x1, x0
   152c8:	and	w1, w4, #0xff
   152cc:	strb	w1, [x0]
   152d0:	ldr	x0, [sp, #8]
   152d4:	ldrh	w0, [x0, #5936]
   152d8:	lsr	w0, w0, #8
   152dc:	and	w1, w0, #0xffff
   152e0:	ldr	x0, [sp, #8]
   152e4:	strh	w1, [x0, #5936]
   152e8:	ldr	x0, [sp, #8]
   152ec:	ldr	w0, [x0, #5940]
   152f0:	sub	w1, w0, #0x8
   152f4:	ldr	x0, [sp, #8]
   152f8:	str	w1, [x0, #5940]
   152fc:	nop
   15300:	add	sp, sp, #0x10
   15304:	ret
   15308:	sub	sp, sp, #0x10
   1530c:	str	x0, [sp, #8]
   15310:	ldr	x0, [sp, #8]
   15314:	ldr	w0, [x0, #5940]
   15318:	cmp	w0, #0x8
   1531c:	b.le	1538c <inflateCodesUsed@@ZLIB_1.2.9+0x499c>
   15320:	ldr	x0, [sp, #8]
   15324:	ldrh	w4, [x0, #5936]
   15328:	ldr	x0, [sp, #8]
   1532c:	ldr	x1, [x0, #16]
   15330:	ldr	x0, [sp, #8]
   15334:	ldr	x0, [x0, #40]
   15338:	add	x3, x0, #0x1
   1533c:	ldr	x2, [sp, #8]
   15340:	str	x3, [x2, #40]
   15344:	add	x0, x1, x0
   15348:	and	w1, w4, #0xff
   1534c:	strb	w1, [x0]
   15350:	ldr	x0, [sp, #8]
   15354:	ldrh	w0, [x0, #5936]
   15358:	lsr	w0, w0, #8
   1535c:	and	w4, w0, #0xffff
   15360:	ldr	x0, [sp, #8]
   15364:	ldr	x1, [x0, #16]
   15368:	ldr	x0, [sp, #8]
   1536c:	ldr	x0, [x0, #40]
   15370:	add	x3, x0, #0x1
   15374:	ldr	x2, [sp, #8]
   15378:	str	x3, [x2, #40]
   1537c:	add	x0, x1, x0
   15380:	and	w1, w4, #0xff
   15384:	strb	w1, [x0]
   15388:	b	153cc <inflateCodesUsed@@ZLIB_1.2.9+0x49dc>
   1538c:	ldr	x0, [sp, #8]
   15390:	ldr	w0, [x0, #5940]
   15394:	cmp	w0, #0x0
   15398:	b.le	153cc <inflateCodesUsed@@ZLIB_1.2.9+0x49dc>
   1539c:	ldr	x0, [sp, #8]
   153a0:	ldrh	w4, [x0, #5936]
   153a4:	ldr	x0, [sp, #8]
   153a8:	ldr	x1, [x0, #16]
   153ac:	ldr	x0, [sp, #8]
   153b0:	ldr	x0, [x0, #40]
   153b4:	add	x3, x0, #0x1
   153b8:	ldr	x2, [sp, #8]
   153bc:	str	x3, [x2, #40]
   153c0:	add	x0, x1, x0
   153c4:	and	w1, w4, #0xff
   153c8:	strb	w1, [x0]
   153cc:	ldr	x0, [sp, #8]
   153d0:	strh	wzr, [x0, #5936]
   153d4:	ldr	x0, [sp, #8]
   153d8:	str	wzr, [x0, #5940]
   153dc:	nop
   153e0:	add	sp, sp, #0x10
   153e4:	ret

00000000000153e8 <zlibVersion@@Base>:
   153e8:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   153ec:	add	x0, x0, #0x1a0
   153f0:	ret

00000000000153f4 <zlibCompileFlags@@ZLIB_1.2.0.2>:
   153f4:	sub	sp, sp, #0x10
   153f8:	str	xzr, [sp, #8]
   153fc:	ldr	x0, [sp, #8]
   15400:	add	x0, x0, #0x1
   15404:	str	x0, [sp, #8]
   15408:	nop
   1540c:	ldr	x0, [sp, #8]
   15410:	add	x0, x0, #0x8
   15414:	str	x0, [sp, #8]
   15418:	nop
   1541c:	ldr	x0, [sp, #8]
   15420:	add	x0, x0, #0x20
   15424:	str	x0, [sp, #8]
   15428:	nop
   1542c:	ldr	x0, [sp, #8]
   15430:	add	x0, x0, #0x80
   15434:	str	x0, [sp, #8]
   15438:	nop
   1543c:	ldr	x0, [sp, #8]
   15440:	add	sp, sp, #0x10
   15444:	ret

0000000000015448 <zError@@Base>:
   15448:	sub	sp, sp, #0x10
   1544c:	str	w0, [sp, #12]
   15450:	mov	w1, #0x2                   	// #2
   15454:	ldr	w0, [sp, #12]
   15458:	sub	w1, w1, w0
   1545c:	adrp	x0, 2e000 <gzclose_w@@ZLIB_1.2.3.5+0x15190>
   15460:	ldr	x0, [x0, #4056]
   15464:	sxtw	x1, w1
   15468:	ldr	x0, [x0, x1, lsl #3]
   1546c:	add	sp, sp, #0x10
   15470:	ret
   15474:	stp	x29, x30, [sp, #-32]!
   15478:	mov	x29, sp
   1547c:	str	x0, [sp, #24]
   15480:	str	w1, [sp, #20]
   15484:	str	w2, [sp, #16]
   15488:	ldr	w1, [sp, #20]
   1548c:	ldr	w0, [sp, #16]
   15490:	mul	w0, w1, w0
   15494:	mov	w0, w0
   15498:	bl	2460 <malloc@plt>
   1549c:	ldp	x29, x30, [sp], #32
   154a0:	ret
   154a4:	stp	x29, x30, [sp, #-32]!
   154a8:	mov	x29, sp
   154ac:	str	x0, [sp, #24]
   154b0:	str	x1, [sp, #16]
   154b4:	ldr	x0, [sp, #16]
   154b8:	bl	2570 <free@plt>
   154bc:	nop
   154c0:	ldp	x29, x30, [sp], #32
   154c4:	ret

00000000000154c8 <compress2@@Base>:
   154c8:	stp	x29, x30, [sp, #-192]!
   154cc:	mov	x29, sp
   154d0:	str	x0, [sp, #56]
   154d4:	str	x1, [sp, #48]
   154d8:	str	x2, [sp, #40]
   154dc:	str	x3, [sp, #32]
   154e0:	str	w4, [sp, #28]
   154e4:	mov	w0, #0xffffffff            	// #-1
   154e8:	str	w0, [sp, #180]
   154ec:	ldr	x0, [sp, #48]
   154f0:	ldr	x0, [x0]
   154f4:	str	x0, [sp, #184]
   154f8:	ldr	x0, [sp, #48]
   154fc:	str	xzr, [x0]
   15500:	str	xzr, [sp, #128]
   15504:	str	xzr, [sp, #136]
   15508:	str	xzr, [sp, #144]
   1550c:	add	x4, sp, #0x40
   15510:	mov	w3, #0x70                  	// #112
   15514:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   15518:	add	x2, x0, #0x1a8
   1551c:	ldr	w1, [sp, #28]
   15520:	mov	x0, x4
   15524:	bl	24f0 <deflateInit_@plt>
   15528:	str	w0, [sp, #176]
   1552c:	ldr	w0, [sp, #176]
   15530:	cmp	w0, #0x0
   15534:	b.eq	15540 <compress2@@Base+0x78>  // b.none
   15538:	ldr	w0, [sp, #176]
   1553c:	b	1563c <compress2@@Base+0x174>
   15540:	ldr	x0, [sp, #56]
   15544:	str	x0, [sp, #88]
   15548:	str	wzr, [sp, #96]
   1554c:	ldr	x0, [sp, #40]
   15550:	str	x0, [sp, #64]
   15554:	str	wzr, [sp, #72]
   15558:	ldr	w0, [sp, #96]
   1555c:	cmp	w0, #0x0
   15560:	b.ne	15598 <compress2@@Base+0xd0>  // b.any
   15564:	ldr	w0, [sp, #180]
   15568:	ldr	x1, [sp, #184]
   1556c:	cmp	x1, x0
   15570:	b.hi	1557c <compress2@@Base+0xb4>  // b.pmore
   15574:	ldr	x0, [sp, #184]
   15578:	b	15580 <compress2@@Base+0xb8>
   1557c:	ldr	w0, [sp, #180]
   15580:	str	w0, [sp, #96]
   15584:	ldr	w0, [sp, #96]
   15588:	mov	w0, w0
   1558c:	ldr	x1, [sp, #184]
   15590:	sub	x0, x1, x0
   15594:	str	x0, [sp, #184]
   15598:	ldr	w0, [sp, #72]
   1559c:	cmp	w0, #0x0
   155a0:	b.ne	155d8 <compress2@@Base+0x110>  // b.any
   155a4:	ldr	w0, [sp, #180]
   155a8:	ldr	x1, [sp, #32]
   155ac:	cmp	x1, x0
   155b0:	b.hi	155bc <compress2@@Base+0xf4>  // b.pmore
   155b4:	ldr	x0, [sp, #32]
   155b8:	b	155c0 <compress2@@Base+0xf8>
   155bc:	ldr	w0, [sp, #180]
   155c0:	str	w0, [sp, #72]
   155c4:	ldr	w0, [sp, #72]
   155c8:	mov	w0, w0
   155cc:	ldr	x1, [sp, #32]
   155d0:	sub	x0, x1, x0
   155d4:	str	x0, [sp, #32]
   155d8:	ldr	x0, [sp, #32]
   155dc:	cmp	x0, #0x0
   155e0:	b.eq	155ec <compress2@@Base+0x124>  // b.none
   155e4:	mov	w0, #0x0                   	// #0
   155e8:	b	155f0 <compress2@@Base+0x128>
   155ec:	mov	w0, #0x4                   	// #4
   155f0:	add	x2, sp, #0x40
   155f4:	mov	w1, w0
   155f8:	mov	x0, x2
   155fc:	bl	2490 <deflate@plt>
   15600:	str	w0, [sp, #176]
   15604:	ldr	w0, [sp, #176]
   15608:	cmp	w0, #0x0
   1560c:	b.eq	15558 <compress2@@Base+0x90>  // b.none
   15610:	ldr	x1, [sp, #104]
   15614:	ldr	x0, [sp, #48]
   15618:	str	x1, [x0]
   1561c:	add	x0, sp, #0x40
   15620:	bl	2590 <deflateEnd@plt>
   15624:	ldr	w0, [sp, #176]
   15628:	cmp	w0, #0x1
   1562c:	b.eq	15638 <compress2@@Base+0x170>  // b.none
   15630:	ldr	w0, [sp, #176]
   15634:	b	1563c <compress2@@Base+0x174>
   15638:	mov	w0, #0x0                   	// #0
   1563c:	ldp	x29, x30, [sp], #192
   15640:	ret

0000000000015644 <compress@@Base>:
   15644:	stp	x29, x30, [sp, #-48]!
   15648:	mov	x29, sp
   1564c:	str	x0, [sp, #40]
   15650:	str	x1, [sp, #32]
   15654:	str	x2, [sp, #24]
   15658:	str	x3, [sp, #16]
   1565c:	mov	w4, #0xffffffff            	// #-1
   15660:	ldr	x3, [sp, #16]
   15664:	ldr	x2, [sp, #24]
   15668:	ldr	x1, [sp, #32]
   1566c:	ldr	x0, [sp, #40]
   15670:	bl	25d0 <compress2@plt>
   15674:	ldp	x29, x30, [sp], #48
   15678:	ret

000000000001567c <compressBound@@ZLIB_1.2.0>:
   1567c:	sub	sp, sp, #0x10
   15680:	str	x0, [sp, #8]
   15684:	ldr	x0, [sp, #8]
   15688:	lsr	x1, x0, #12
   1568c:	ldr	x0, [sp, #8]
   15690:	add	x1, x1, x0
   15694:	ldr	x0, [sp, #8]
   15698:	lsr	x0, x0, #14
   1569c:	add	x1, x1, x0
   156a0:	ldr	x0, [sp, #8]
   156a4:	lsr	x0, x0, #25
   156a8:	add	x0, x1, x0
   156ac:	add	x0, x0, #0xd
   156b0:	add	sp, sp, #0x10
   156b4:	ret

00000000000156b8 <uncompress2@@ZLIB_1.2.9>:
   156b8:	stp	x29, x30, [sp, #-192]!
   156bc:	mov	x29, sp
   156c0:	str	x0, [sp, #40]
   156c4:	str	x1, [sp, #32]
   156c8:	str	x2, [sp, #24]
   156cc:	str	x3, [sp, #16]
   156d0:	mov	w0, #0xffffffff            	// #-1
   156d4:	str	w0, [sp, #172]
   156d8:	ldr	x0, [sp, #16]
   156dc:	ldr	x0, [x0]
   156e0:	str	x0, [sp, #184]
   156e4:	ldr	x0, [sp, #32]
   156e8:	ldr	x0, [x0]
   156ec:	cmp	x0, #0x0
   156f0:	b.eq	1570c <uncompress2@@ZLIB_1.2.9+0x54>  // b.none
   156f4:	ldr	x0, [sp, #32]
   156f8:	ldr	x0, [x0]
   156fc:	str	x0, [sp, #176]
   15700:	ldr	x0, [sp, #32]
   15704:	str	xzr, [x0]
   15708:	b	1571c <uncompress2@@ZLIB_1.2.9+0x64>
   1570c:	mov	x0, #0x1                   	// #1
   15710:	str	x0, [sp, #176]
   15714:	add	x0, sp, #0x30
   15718:	str	x0, [sp, #40]
   1571c:	ldr	x0, [sp, #24]
   15720:	str	x0, [sp, #56]
   15724:	str	wzr, [sp, #64]
   15728:	str	xzr, [sp, #120]
   1572c:	str	xzr, [sp, #128]
   15730:	str	xzr, [sp, #136]
   15734:	add	x3, sp, #0x38
   15738:	mov	w2, #0x70                  	// #112
   1573c:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   15740:	add	x1, x0, #0x1b0
   15744:	mov	x0, x3
   15748:	bl	25c0 <inflateInit_@plt>
   1574c:	str	w0, [sp, #168]
   15750:	ldr	w0, [sp, #168]
   15754:	cmp	w0, #0x0
   15758:	b.eq	15764 <uncompress2@@ZLIB_1.2.9+0xac>  // b.none
   1575c:	ldr	w0, [sp, #168]
   15760:	b	158d0 <uncompress2@@ZLIB_1.2.9+0x218>
   15764:	ldr	x0, [sp, #40]
   15768:	str	x0, [sp, #80]
   1576c:	str	wzr, [sp, #88]
   15770:	ldr	w0, [sp, #88]
   15774:	cmp	w0, #0x0
   15778:	b.ne	157b0 <uncompress2@@ZLIB_1.2.9+0xf8>  // b.any
   1577c:	ldr	w0, [sp, #172]
   15780:	ldr	x1, [sp, #176]
   15784:	cmp	x1, x0
   15788:	b.hi	15794 <uncompress2@@ZLIB_1.2.9+0xdc>  // b.pmore
   1578c:	ldr	x0, [sp, #176]
   15790:	b	15798 <uncompress2@@ZLIB_1.2.9+0xe0>
   15794:	ldr	w0, [sp, #172]
   15798:	str	w0, [sp, #88]
   1579c:	ldr	w0, [sp, #88]
   157a0:	mov	w0, w0
   157a4:	ldr	x1, [sp, #176]
   157a8:	sub	x0, x1, x0
   157ac:	str	x0, [sp, #176]
   157b0:	ldr	w0, [sp, #64]
   157b4:	cmp	w0, #0x0
   157b8:	b.ne	157f0 <uncompress2@@ZLIB_1.2.9+0x138>  // b.any
   157bc:	ldr	w0, [sp, #172]
   157c0:	ldr	x1, [sp, #184]
   157c4:	cmp	x1, x0
   157c8:	b.hi	157d4 <uncompress2@@ZLIB_1.2.9+0x11c>  // b.pmore
   157cc:	ldr	x0, [sp, #184]
   157d0:	b	157d8 <uncompress2@@ZLIB_1.2.9+0x120>
   157d4:	ldr	w0, [sp, #172]
   157d8:	str	w0, [sp, #64]
   157dc:	ldr	w0, [sp, #64]
   157e0:	mov	w0, w0
   157e4:	ldr	x1, [sp, #184]
   157e8:	sub	x0, x1, x0
   157ec:	str	x0, [sp, #184]
   157f0:	add	x0, sp, #0x38
   157f4:	mov	w1, #0x0                   	// #0
   157f8:	bl	23f0 <inflate@plt>
   157fc:	str	w0, [sp, #168]
   15800:	ldr	w0, [sp, #168]
   15804:	cmp	w0, #0x0
   15808:	b.eq	15770 <uncompress2@@ZLIB_1.2.9+0xb8>  // b.none
   1580c:	ldr	x0, [sp, #16]
   15810:	ldr	x1, [x0]
   15814:	ldr	w0, [sp, #64]
   15818:	mov	w2, w0
   1581c:	ldr	x0, [sp, #184]
   15820:	add	x0, x2, x0
   15824:	sub	x1, x1, x0
   15828:	ldr	x0, [sp, #16]
   1582c:	str	x1, [x0]
   15830:	add	x0, sp, #0x30
   15834:	ldr	x1, [sp, #40]
   15838:	cmp	x1, x0
   1583c:	b.eq	15850 <uncompress2@@ZLIB_1.2.9+0x198>  // b.none
   15840:	ldr	x1, [sp, #96]
   15844:	ldr	x0, [sp, #32]
   15848:	str	x1, [x0]
   1584c:	b	15870 <uncompress2@@ZLIB_1.2.9+0x1b8>
   15850:	ldr	x0, [sp, #96]
   15854:	cmp	x0, #0x0
   15858:	b.eq	15870 <uncompress2@@ZLIB_1.2.9+0x1b8>  // b.none
   1585c:	ldr	w0, [sp, #168]
   15860:	cmn	w0, #0x5
   15864:	b.ne	15870 <uncompress2@@ZLIB_1.2.9+0x1b8>  // b.any
   15868:	mov	x0, #0x1                   	// #1
   1586c:	str	x0, [sp, #176]
   15870:	add	x0, sp, #0x38
   15874:	bl	2550 <inflateEnd@plt>
   15878:	ldr	w0, [sp, #168]
   1587c:	cmp	w0, #0x1
   15880:	b.eq	158cc <uncompress2@@ZLIB_1.2.9+0x214>  // b.none
   15884:	ldr	w0, [sp, #168]
   15888:	cmp	w0, #0x2
   1588c:	b.eq	158c4 <uncompress2@@ZLIB_1.2.9+0x20c>  // b.none
   15890:	ldr	w0, [sp, #168]
   15894:	cmn	w0, #0x5
   15898:	b.ne	158b4 <uncompress2@@ZLIB_1.2.9+0x1fc>  // b.any
   1589c:	ldr	w0, [sp, #88]
   158a0:	mov	w1, w0
   158a4:	ldr	x0, [sp, #176]
   158a8:	add	x0, x1, x0
   158ac:	cmp	x0, #0x0
   158b0:	b.ne	158bc <uncompress2@@ZLIB_1.2.9+0x204>  // b.any
   158b4:	ldr	w0, [sp, #168]
   158b8:	b	158d0 <uncompress2@@ZLIB_1.2.9+0x218>
   158bc:	mov	w0, #0xfffffffd            	// #-3
   158c0:	b	158d0 <uncompress2@@ZLIB_1.2.9+0x218>
   158c4:	mov	w0, #0xfffffffd            	// #-3
   158c8:	b	158d0 <uncompress2@@ZLIB_1.2.9+0x218>
   158cc:	mov	w0, #0x0                   	// #0
   158d0:	ldp	x29, x30, [sp], #192
   158d4:	ret

00000000000158d8 <uncompress@@Base>:
   158d8:	stp	x29, x30, [sp, #-48]!
   158dc:	mov	x29, sp
   158e0:	str	x0, [sp, #40]
   158e4:	str	x1, [sp, #32]
   158e8:	str	x2, [sp, #24]
   158ec:	str	x3, [sp, #16]
   158f0:	add	x0, sp, #0x10
   158f4:	mov	x3, x0
   158f8:	ldr	x2, [sp, #24]
   158fc:	ldr	x1, [sp, #32]
   15900:	ldr	x0, [sp, #40]
   15904:	bl	2540 <uncompress2@plt>
   15908:	ldp	x29, x30, [sp], #48
   1590c:	ret

0000000000015910 <gzclose@@Base>:
   15910:	stp	x29, x30, [sp, #-48]!
   15914:	mov	x29, sp
   15918:	str	x0, [sp, #24]
   1591c:	ldr	x0, [sp, #24]
   15920:	cmp	x0, #0x0
   15924:	b.ne	15930 <gzclose@@Base+0x20>  // b.any
   15928:	mov	w0, #0xfffffffe            	// #-2
   1592c:	b	15964 <gzclose@@Base+0x54>
   15930:	ldr	x0, [sp, #24]
   15934:	str	x0, [sp, #40]
   15938:	ldr	x0, [sp, #40]
   1593c:	ldr	w1, [x0, #24]
   15940:	mov	w0, #0x1c4f                	// #7247
   15944:	cmp	w1, w0
   15948:	b.ne	15958 <gzclose@@Base+0x48>  // b.any
   1594c:	ldr	x0, [sp, #24]
   15950:	bl	2400 <gzclose_r@plt>
   15954:	b	15960 <gzclose@@Base+0x50>
   15958:	ldr	x0, [sp, #24]
   1595c:	bl	2580 <gzclose_w@plt>
   15960:	nop
   15964:	ldp	x29, x30, [sp], #48
   15968:	ret
   1596c:	stp	x29, x30, [sp, #-32]!
   15970:	mov	x29, sp
   15974:	str	x0, [sp, #24]
   15978:	ldr	x0, [sp, #24]
   1597c:	str	wzr, [x0]
   15980:	ldr	x0, [sp, #24]
   15984:	ldr	w1, [x0, #24]
   15988:	mov	w0, #0x1c4f                	// #7247
   1598c:	cmp	w1, w0
   15990:	b.ne	159ac <gzclose@@Base+0x9c>  // b.any
   15994:	ldr	x0, [sp, #24]
   15998:	str	wzr, [x0, #80]
   1599c:	ldr	x0, [sp, #24]
   159a0:	str	wzr, [x0, #84]
   159a4:	ldr	x0, [sp, #24]
   159a8:	str	wzr, [x0, #68]
   159ac:	ldr	x0, [sp, #24]
   159b0:	str	wzr, [x0, #104]
   159b4:	mov	x2, #0x0                   	// #0
   159b8:	mov	w1, #0x0                   	// #0
   159bc:	ldr	x0, [sp, #24]
   159c0:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   159c4:	ldr	x0, [sp, #24]
   159c8:	str	xzr, [x0, #16]
   159cc:	ldr	x0, [sp, #24]
   159d0:	str	wzr, [x0, #128]
   159d4:	nop
   159d8:	ldp	x29, x30, [sp], #32
   159dc:	ret
   159e0:	stp	x29, x30, [sp, #-80]!
   159e4:	mov	x29, sp
   159e8:	str	x0, [sp, #40]
   159ec:	str	w1, [sp, #36]
   159f0:	str	x2, [sp, #24]
   159f4:	str	wzr, [sp, #76]
   159f8:	str	wzr, [sp, #72]
   159fc:	ldr	x0, [sp, #40]
   15a00:	cmp	x0, #0x0
   15a04:	b.ne	15a10 <gzclose@@Base+0x100>  // b.any
   15a08:	mov	x0, #0x0                   	// #0
   15a0c:	b	15e50 <gzclose@@Base+0x540>
   15a10:	mov	x0, #0xe8                  	// #232
   15a14:	bl	2460 <malloc@plt>
   15a18:	str	x0, [sp, #64]
   15a1c:	ldr	x0, [sp, #64]
   15a20:	cmp	x0, #0x0
   15a24:	b.ne	15a30 <gzclose@@Base+0x120>  // b.any
   15a28:	mov	x0, #0x0                   	// #0
   15a2c:	b	15e50 <gzclose@@Base+0x540>
   15a30:	ldr	x0, [sp, #64]
   15a34:	str	wzr, [x0, #40]
   15a38:	ldr	x0, [sp, #64]
   15a3c:	mov	w1, #0x2000                	// #8192
   15a40:	str	w1, [x0, #44]
   15a44:	ldr	x0, [sp, #64]
   15a48:	str	xzr, [x0, #112]
   15a4c:	ldr	x0, [sp, #64]
   15a50:	str	wzr, [x0, #24]
   15a54:	ldr	x0, [sp, #64]
   15a58:	mov	w1, #0xffffffff            	// #-1
   15a5c:	str	w1, [x0, #88]
   15a60:	ldr	x0, [sp, #64]
   15a64:	str	wzr, [x0, #92]
   15a68:	ldr	x0, [sp, #64]
   15a6c:	str	wzr, [x0, #64]
   15a70:	b	15c20 <gzclose@@Base+0x310>
   15a74:	ldr	x0, [sp, #24]
   15a78:	ldrb	w0, [x0]
   15a7c:	cmp	w0, #0x2f
   15a80:	b.ls	15aac <gzclose@@Base+0x19c>  // b.plast
   15a84:	ldr	x0, [sp, #24]
   15a88:	ldrb	w0, [x0]
   15a8c:	cmp	w0, #0x39
   15a90:	b.hi	15aac <gzclose@@Base+0x19c>  // b.pmore
   15a94:	ldr	x0, [sp, #24]
   15a98:	ldrb	w0, [x0]
   15a9c:	sub	w1, w0, #0x30
   15aa0:	ldr	x0, [sp, #64]
   15aa4:	str	w1, [x0, #88]
   15aa8:	b	15c14 <gzclose@@Base+0x304>
   15aac:	ldr	x0, [sp, #24]
   15ab0:	ldrb	w0, [x0]
   15ab4:	cmp	w0, #0x78
   15ab8:	b.eq	15bb4 <gzclose@@Base+0x2a4>  // b.none
   15abc:	cmp	w0, #0x78
   15ac0:	b.gt	15c14 <gzclose@@Base+0x304>
   15ac4:	cmp	w0, #0x77
   15ac8:	b.eq	15b78 <gzclose@@Base+0x268>  // b.none
   15acc:	cmp	w0, #0x77
   15ad0:	b.gt	15c14 <gzclose@@Base+0x304>
   15ad4:	cmp	w0, #0x72
   15ad8:	b.eq	15b68 <gzclose@@Base+0x258>  // b.none
   15adc:	cmp	w0, #0x72
   15ae0:	b.gt	15c14 <gzclose@@Base+0x304>
   15ae4:	cmp	w0, #0x68
   15ae8:	b.eq	15bd0 <gzclose@@Base+0x2c0>  // b.none
   15aec:	cmp	w0, #0x68
   15af0:	b.gt	15c14 <gzclose@@Base+0x304>
   15af4:	cmp	w0, #0x66
   15af8:	b.eq	15bc0 <gzclose@@Base+0x2b0>  // b.none
   15afc:	cmp	w0, #0x66
   15b00:	b.gt	15c14 <gzclose@@Base+0x304>
   15b04:	cmp	w0, #0x65
   15b08:	b.eq	15ba8 <gzclose@@Base+0x298>  // b.none
   15b0c:	cmp	w0, #0x65
   15b10:	b.gt	15c14 <gzclose@@Base+0x304>
   15b14:	cmp	w0, #0x62
   15b18:	b.eq	15c10 <gzclose@@Base+0x300>  // b.none
   15b1c:	cmp	w0, #0x62
   15b20:	b.gt	15c14 <gzclose@@Base+0x304>
   15b24:	cmp	w0, #0x61
   15b28:	b.eq	15b88 <gzclose@@Base+0x278>  // b.none
   15b2c:	cmp	w0, #0x61
   15b30:	b.gt	15c14 <gzclose@@Base+0x304>
   15b34:	cmp	w0, #0x54
   15b38:	b.eq	15c00 <gzclose@@Base+0x2f0>  // b.none
   15b3c:	cmp	w0, #0x54
   15b40:	b.gt	15c14 <gzclose@@Base+0x304>
   15b44:	cmp	w0, #0x52
   15b48:	b.eq	15be0 <gzclose@@Base+0x2d0>  // b.none
   15b4c:	cmp	w0, #0x52
   15b50:	b.gt	15c14 <gzclose@@Base+0x304>
   15b54:	cmp	w0, #0x2b
   15b58:	b.eq	15b98 <gzclose@@Base+0x288>  // b.none
   15b5c:	cmp	w0, #0x46
   15b60:	b.eq	15bf0 <gzclose@@Base+0x2e0>  // b.none
   15b64:	b	15c14 <gzclose@@Base+0x304>
   15b68:	ldr	x0, [sp, #64]
   15b6c:	mov	w1, #0x1c4f                	// #7247
   15b70:	str	w1, [x0, #24]
   15b74:	b	15c14 <gzclose@@Base+0x304>
   15b78:	ldr	x0, [sp, #64]
   15b7c:	mov	w1, #0x79b1                	// #31153
   15b80:	str	w1, [x0, #24]
   15b84:	b	15c14 <gzclose@@Base+0x304>
   15b88:	ldr	x0, [sp, #64]
   15b8c:	mov	w1, #0x1                   	// #1
   15b90:	str	w1, [x0, #24]
   15b94:	b	15c14 <gzclose@@Base+0x304>
   15b98:	ldr	x0, [sp, #64]
   15b9c:	bl	2570 <free@plt>
   15ba0:	mov	x0, #0x0                   	// #0
   15ba4:	b	15e50 <gzclose@@Base+0x540>
   15ba8:	mov	w0, #0x1                   	// #1
   15bac:	str	w0, [sp, #76]
   15bb0:	b	15c14 <gzclose@@Base+0x304>
   15bb4:	mov	w0, #0x1                   	// #1
   15bb8:	str	w0, [sp, #72]
   15bbc:	b	15c14 <gzclose@@Base+0x304>
   15bc0:	ldr	x0, [sp, #64]
   15bc4:	mov	w1, #0x1                   	// #1
   15bc8:	str	w1, [x0, #92]
   15bcc:	b	15c14 <gzclose@@Base+0x304>
   15bd0:	ldr	x0, [sp, #64]
   15bd4:	mov	w1, #0x2                   	// #2
   15bd8:	str	w1, [x0, #92]
   15bdc:	b	15c14 <gzclose@@Base+0x304>
   15be0:	ldr	x0, [sp, #64]
   15be4:	mov	w1, #0x3                   	// #3
   15be8:	str	w1, [x0, #92]
   15bec:	b	15c14 <gzclose@@Base+0x304>
   15bf0:	ldr	x0, [sp, #64]
   15bf4:	mov	w1, #0x4                   	// #4
   15bf8:	str	w1, [x0, #92]
   15bfc:	b	15c14 <gzclose@@Base+0x304>
   15c00:	ldr	x0, [sp, #64]
   15c04:	mov	w1, #0x1                   	// #1
   15c08:	str	w1, [x0, #64]
   15c0c:	b	15c14 <gzclose@@Base+0x304>
   15c10:	nop
   15c14:	ldr	x0, [sp, #24]
   15c18:	add	x0, x0, #0x1
   15c1c:	str	x0, [sp, #24]
   15c20:	ldr	x0, [sp, #24]
   15c24:	ldrb	w0, [x0]
   15c28:	cmp	w0, #0x0
   15c2c:	b.ne	15a74 <gzclose@@Base+0x164>  // b.any
   15c30:	ldr	x0, [sp, #64]
   15c34:	ldr	w0, [x0, #24]
   15c38:	cmp	w0, #0x0
   15c3c:	b.ne	15c50 <gzclose@@Base+0x340>  // b.any
   15c40:	ldr	x0, [sp, #64]
   15c44:	bl	2570 <free@plt>
   15c48:	mov	x0, #0x0                   	// #0
   15c4c:	b	15e50 <gzclose@@Base+0x540>
   15c50:	ldr	x0, [sp, #64]
   15c54:	ldr	w1, [x0, #24]
   15c58:	mov	w0, #0x1c4f                	// #7247
   15c5c:	cmp	w1, w0
   15c60:	b.ne	15c90 <gzclose@@Base+0x380>  // b.any
   15c64:	ldr	x0, [sp, #64]
   15c68:	ldr	w0, [x0, #64]
   15c6c:	cmp	w0, #0x0
   15c70:	b.eq	15c84 <gzclose@@Base+0x374>  // b.none
   15c74:	ldr	x0, [sp, #64]
   15c78:	bl	2570 <free@plt>
   15c7c:	mov	x0, #0x0                   	// #0
   15c80:	b	15e50 <gzclose@@Base+0x540>
   15c84:	ldr	x0, [sp, #64]
   15c88:	mov	w1, #0x1                   	// #1
   15c8c:	str	w1, [x0, #64]
   15c90:	ldr	x0, [sp, #40]
   15c94:	bl	23e0 <strlen@plt>
   15c98:	str	x0, [sp, #56]
   15c9c:	ldr	x0, [sp, #56]
   15ca0:	add	x0, x0, #0x1
   15ca4:	bl	2460 <malloc@plt>
   15ca8:	mov	x1, x0
   15cac:	ldr	x0, [sp, #64]
   15cb0:	str	x1, [x0, #32]
   15cb4:	ldr	x0, [sp, #64]
   15cb8:	ldr	x0, [x0, #32]
   15cbc:	cmp	x0, #0x0
   15cc0:	b.ne	15cd4 <gzclose@@Base+0x3c4>  // b.any
   15cc4:	ldr	x0, [sp, #64]
   15cc8:	bl	2570 <free@plt>
   15ccc:	mov	x0, #0x0                   	// #0
   15cd0:	b	15e50 <gzclose@@Base+0x540>
   15cd4:	ldr	x0, [sp, #64]
   15cd8:	ldr	x4, [x0, #32]
   15cdc:	ldr	x0, [sp, #56]
   15ce0:	add	x1, x0, #0x1
   15ce4:	ldr	x3, [sp, #40]
   15ce8:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   15cec:	add	x2, x0, #0x1b8
   15cf0:	mov	x0, x4
   15cf4:	bl	2450 <snprintf@plt>
   15cf8:	ldr	w0, [sp, #76]
   15cfc:	cmp	w0, #0x0
   15d00:	b.eq	15d0c <gzclose@@Base+0x3fc>  // b.none
   15d04:	mov	w2, #0x80000               	// #524288
   15d08:	b	15d10 <gzclose@@Base+0x400>
   15d0c:	mov	w2, #0x0                   	// #0
   15d10:	ldr	x0, [sp, #64]
   15d14:	ldr	w1, [x0, #24]
   15d18:	mov	w0, #0x1c4f                	// #7247
   15d1c:	cmp	w1, w0
   15d20:	b.eq	15d64 <gzclose@@Base+0x454>  // b.none
   15d24:	ldr	w0, [sp, #72]
   15d28:	cmp	w0, #0x0
   15d2c:	b.eq	15d38 <gzclose@@Base+0x428>  // b.none
   15d30:	mov	w1, #0xc1                  	// #193
   15d34:	b	15d3c <gzclose@@Base+0x42c>
   15d38:	mov	w1, #0x41                  	// #65
   15d3c:	ldr	x0, [sp, #64]
   15d40:	ldr	w3, [x0, #24]
   15d44:	mov	w0, #0x79b1                	// #31153
   15d48:	cmp	w3, w0
   15d4c:	b.ne	15d58 <gzclose@@Base+0x448>  // b.any
   15d50:	mov	w0, #0x200                 	// #512
   15d54:	b	15d5c <gzclose@@Base+0x44c>
   15d58:	mov	w0, #0x400                 	// #1024
   15d5c:	orr	w0, w1, w0
   15d60:	b	15d68 <gzclose@@Base+0x458>
   15d64:	mov	w0, #0x0                   	// #0
   15d68:	orr	w0, w2, w0
   15d6c:	str	w0, [sp, #52]
   15d70:	ldr	w0, [sp, #36]
   15d74:	cmp	w0, #0x0
   15d78:	b.ge	15d90 <gzclose@@Base+0x480>  // b.tcont
   15d7c:	mov	w2, #0x1b6                 	// #438
   15d80:	ldr	w1, [sp, #52]
   15d84:	ldr	x0, [sp, #40]
   15d88:	bl	2470 <open@plt>
   15d8c:	b	15d94 <gzclose@@Base+0x484>
   15d90:	ldr	w0, [sp, #36]
   15d94:	ldr	x1, [sp, #64]
   15d98:	str	w0, [x1, #28]
   15d9c:	ldr	x0, [sp, #64]
   15da0:	ldr	w0, [x0, #28]
   15da4:	cmn	w0, #0x1
   15da8:	b.ne	15dc8 <gzclose@@Base+0x4b8>  // b.any
   15dac:	ldr	x0, [sp, #64]
   15db0:	ldr	x0, [x0, #32]
   15db4:	bl	2570 <free@plt>
   15db8:	ldr	x0, [sp, #64]
   15dbc:	bl	2570 <free@plt>
   15dc0:	mov	x0, #0x0                   	// #0
   15dc4:	b	15e50 <gzclose@@Base+0x540>
   15dc8:	ldr	x0, [sp, #64]
   15dcc:	ldr	w0, [x0, #24]
   15dd0:	cmp	w0, #0x1
   15dd4:	b.ne	15df8 <gzclose@@Base+0x4e8>  // b.any
   15dd8:	ldr	x0, [sp, #64]
   15ddc:	ldr	w0, [x0, #28]
   15de0:	mov	w2, #0x2                   	// #2
   15de4:	mov	x1, #0x0                   	// #0
   15de8:	bl	24b0 <lseek64@plt>
   15dec:	ldr	x0, [sp, #64]
   15df0:	mov	w1, #0x79b1                	// #31153
   15df4:	str	w1, [x0, #24]
   15df8:	ldr	x0, [sp, #64]
   15dfc:	ldr	w1, [x0, #24]
   15e00:	mov	w0, #0x1c4f                	// #7247
   15e04:	cmp	w1, w0
   15e08:	b.ne	15e44 <gzclose@@Base+0x534>  // b.any
   15e0c:	ldr	x0, [sp, #64]
   15e10:	ldr	w0, [x0, #28]
   15e14:	mov	w2, #0x1                   	// #1
   15e18:	mov	x1, #0x0                   	// #0
   15e1c:	bl	24b0 <lseek64@plt>
   15e20:	mov	x1, x0
   15e24:	ldr	x0, [sp, #64]
   15e28:	str	x1, [x0, #72]
   15e2c:	ldr	x0, [sp, #64]
   15e30:	ldr	x0, [x0, #72]
   15e34:	cmn	x0, #0x1
   15e38:	b.ne	15e44 <gzclose@@Base+0x534>  // b.any
   15e3c:	ldr	x0, [sp, #64]
   15e40:	str	xzr, [x0, #72]
   15e44:	ldr	x0, [sp, #64]
   15e48:	bl	1596c <gzclose@@Base+0x5c>
   15e4c:	ldr	x0, [sp, #64]
   15e50:	ldp	x29, x30, [sp], #80
   15e54:	ret

0000000000015e58 <gzopen@@Base>:
   15e58:	stp	x29, x30, [sp, #-32]!
   15e5c:	mov	x29, sp
   15e60:	str	x0, [sp, #24]
   15e64:	str	x1, [sp, #16]
   15e68:	ldr	x2, [sp, #16]
   15e6c:	mov	w1, #0xffffffff            	// #-1
   15e70:	ldr	x0, [sp, #24]
   15e74:	bl	159e0 <gzclose@@Base+0xd0>
   15e78:	ldp	x29, x30, [sp], #32
   15e7c:	ret

0000000000015e80 <gzopen64@@ZLIB_1.2.3.3>:
   15e80:	stp	x29, x30, [sp, #-32]!
   15e84:	mov	x29, sp
   15e88:	str	x0, [sp, #24]
   15e8c:	str	x1, [sp, #16]
   15e90:	ldr	x2, [sp, #16]
   15e94:	mov	w1, #0xffffffff            	// #-1
   15e98:	ldr	x0, [sp, #24]
   15e9c:	bl	159e0 <gzclose@@Base+0xd0>
   15ea0:	ldp	x29, x30, [sp], #32
   15ea4:	ret

0000000000015ea8 <gzdopen@@Base>:
   15ea8:	stp	x29, x30, [sp, #-48]!
   15eac:	mov	x29, sp
   15eb0:	str	w0, [sp, #28]
   15eb4:	str	x1, [sp, #16]
   15eb8:	ldr	w0, [sp, #28]
   15ebc:	cmn	w0, #0x1
   15ec0:	b.eq	15edc <gzdopen@@Base+0x34>  // b.none
   15ec4:	mov	x0, #0x13                  	// #19
   15ec8:	bl	2460 <malloc@plt>
   15ecc:	str	x0, [sp, #40]
   15ed0:	ldr	x0, [sp, #40]
   15ed4:	cmp	x0, #0x0
   15ed8:	b.ne	15ee4 <gzdopen@@Base+0x3c>  // b.any
   15edc:	mov	x0, #0x0                   	// #0
   15ee0:	b	15f1c <gzdopen@@Base+0x74>
   15ee4:	ldr	w3, [sp, #28]
   15ee8:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   15eec:	add	x2, x0, #0x1c0
   15ef0:	mov	x1, #0x13                  	// #19
   15ef4:	ldr	x0, [sp, #40]
   15ef8:	bl	2450 <snprintf@plt>
   15efc:	ldr	x2, [sp, #16]
   15f00:	ldr	w1, [sp, #28]
   15f04:	ldr	x0, [sp, #40]
   15f08:	bl	159e0 <gzclose@@Base+0xd0>
   15f0c:	str	x0, [sp, #32]
   15f10:	ldr	x0, [sp, #40]
   15f14:	bl	2570 <free@plt>
   15f18:	ldr	x0, [sp, #32]
   15f1c:	ldp	x29, x30, [sp], #48
   15f20:	ret

0000000000015f24 <gzbuffer@@ZLIB_1.2.3.5>:
   15f24:	sub	sp, sp, #0x20
   15f28:	str	x0, [sp, #8]
   15f2c:	str	w1, [sp, #4]
   15f30:	ldr	x0, [sp, #8]
   15f34:	cmp	x0, #0x0
   15f38:	b.ne	15f44 <gzbuffer@@ZLIB_1.2.3.5+0x20>  // b.any
   15f3c:	mov	w0, #0xffffffff            	// #-1
   15f40:	b	15fd4 <gzbuffer@@ZLIB_1.2.3.5+0xb0>
   15f44:	ldr	x0, [sp, #8]
   15f48:	str	x0, [sp, #24]
   15f4c:	ldr	x0, [sp, #24]
   15f50:	ldr	w1, [x0, #24]
   15f54:	mov	w0, #0x1c4f                	// #7247
   15f58:	cmp	w1, w0
   15f5c:	b.eq	15f7c <gzbuffer@@ZLIB_1.2.3.5+0x58>  // b.none
   15f60:	ldr	x0, [sp, #24]
   15f64:	ldr	w1, [x0, #24]
   15f68:	mov	w0, #0x79b1                	// #31153
   15f6c:	cmp	w1, w0
   15f70:	b.eq	15f7c <gzbuffer@@ZLIB_1.2.3.5+0x58>  // b.none
   15f74:	mov	w0, #0xffffffff            	// #-1
   15f78:	b	15fd4 <gzbuffer@@ZLIB_1.2.3.5+0xb0>
   15f7c:	ldr	x0, [sp, #24]
   15f80:	ldr	w0, [x0, #40]
   15f84:	cmp	w0, #0x0
   15f88:	b.eq	15f94 <gzbuffer@@ZLIB_1.2.3.5+0x70>  // b.none
   15f8c:	mov	w0, #0xffffffff            	// #-1
   15f90:	b	15fd4 <gzbuffer@@ZLIB_1.2.3.5+0xb0>
   15f94:	ldr	w0, [sp, #4]
   15f98:	lsl	w0, w0, #1
   15f9c:	ldr	w1, [sp, #4]
   15fa0:	cmp	w1, w0
   15fa4:	b.ls	15fb0 <gzbuffer@@ZLIB_1.2.3.5+0x8c>  // b.plast
   15fa8:	mov	w0, #0xffffffff            	// #-1
   15fac:	b	15fd4 <gzbuffer@@ZLIB_1.2.3.5+0xb0>
   15fb0:	ldr	w0, [sp, #4]
   15fb4:	cmp	w0, #0x1
   15fb8:	b.hi	15fc4 <gzbuffer@@ZLIB_1.2.3.5+0xa0>  // b.pmore
   15fbc:	mov	w0, #0x2                   	// #2
   15fc0:	str	w0, [sp, #4]
   15fc4:	ldr	x0, [sp, #24]
   15fc8:	ldr	w1, [sp, #4]
   15fcc:	str	w1, [x0, #44]
   15fd0:	mov	w0, #0x0                   	// #0
   15fd4:	add	sp, sp, #0x20
   15fd8:	ret

0000000000015fdc <gzrewind@@Base>:
   15fdc:	stp	x29, x30, [sp, #-48]!
   15fe0:	mov	x29, sp
   15fe4:	str	x0, [sp, #24]
   15fe8:	ldr	x0, [sp, #24]
   15fec:	cmp	x0, #0x0
   15ff0:	b.ne	15ffc <gzrewind@@Base+0x20>  // b.any
   15ff4:	mov	w0, #0xffffffff            	// #-1
   15ff8:	b	1607c <gzrewind@@Base+0xa0>
   15ffc:	ldr	x0, [sp, #24]
   16000:	str	x0, [sp, #40]
   16004:	ldr	x0, [sp, #40]
   16008:	ldr	w1, [x0, #24]
   1600c:	mov	w0, #0x1c4f                	// #7247
   16010:	cmp	w1, w0
   16014:	b.ne	16038 <gzrewind@@Base+0x5c>  // b.any
   16018:	ldr	x0, [sp, #40]
   1601c:	ldr	w0, [x0, #108]
   16020:	cmp	w0, #0x0
   16024:	b.eq	16040 <gzrewind@@Base+0x64>  // b.none
   16028:	ldr	x0, [sp, #40]
   1602c:	ldr	w0, [x0, #108]
   16030:	cmn	w0, #0x5
   16034:	b.eq	16040 <gzrewind@@Base+0x64>  // b.none
   16038:	mov	w0, #0xffffffff            	// #-1
   1603c:	b	1607c <gzrewind@@Base+0xa0>
   16040:	ldr	x0, [sp, #40]
   16044:	ldr	w3, [x0, #28]
   16048:	ldr	x0, [sp, #40]
   1604c:	ldr	x0, [x0, #72]
   16050:	mov	w2, #0x0                   	// #0
   16054:	mov	x1, x0
   16058:	mov	w0, w3
   1605c:	bl	24b0 <lseek64@plt>
   16060:	cmn	x0, #0x1
   16064:	b.ne	16070 <gzrewind@@Base+0x94>  // b.any
   16068:	mov	w0, #0xffffffff            	// #-1
   1606c:	b	1607c <gzrewind@@Base+0xa0>
   16070:	ldr	x0, [sp, #40]
   16074:	bl	1596c <gzclose@@Base+0x5c>
   16078:	mov	w0, #0x0                   	// #0
   1607c:	ldp	x29, x30, [sp], #48
   16080:	ret

0000000000016084 <gzseek64@@ZLIB_1.2.3.3>:
   16084:	stp	x29, x30, [sp, #-80]!
   16088:	mov	x29, sp
   1608c:	str	x0, [sp, #40]
   16090:	str	x1, [sp, #32]
   16094:	str	w2, [sp, #28]
   16098:	ldr	x0, [sp, #40]
   1609c:	cmp	x0, #0x0
   160a0:	b.ne	160ac <gzseek64@@ZLIB_1.2.3.3+0x28>  // b.any
   160a4:	mov	x0, #0xffffffffffffffff    	// #-1
   160a8:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   160ac:	ldr	x0, [sp, #40]
   160b0:	str	x0, [sp, #72]
   160b4:	ldr	x0, [sp, #72]
   160b8:	ldr	w1, [x0, #24]
   160bc:	mov	w0, #0x1c4f                	// #7247
   160c0:	cmp	w1, w0
   160c4:	b.eq	160e4 <gzseek64@@ZLIB_1.2.3.3+0x60>  // b.none
   160c8:	ldr	x0, [sp, #72]
   160cc:	ldr	w1, [x0, #24]
   160d0:	mov	w0, #0x79b1                	// #31153
   160d4:	cmp	w1, w0
   160d8:	b.eq	160e4 <gzseek64@@ZLIB_1.2.3.3+0x60>  // b.none
   160dc:	mov	x0, #0xffffffffffffffff    	// #-1
   160e0:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   160e4:	ldr	x0, [sp, #72]
   160e8:	ldr	w0, [x0, #108]
   160ec:	cmp	w0, #0x0
   160f0:	b.eq	1610c <gzseek64@@ZLIB_1.2.3.3+0x88>  // b.none
   160f4:	ldr	x0, [sp, #72]
   160f8:	ldr	w0, [x0, #108]
   160fc:	cmn	w0, #0x5
   16100:	b.eq	1610c <gzseek64@@ZLIB_1.2.3.3+0x88>  // b.none
   16104:	mov	x0, #0xffffffffffffffff    	// #-1
   16108:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   1610c:	ldr	w0, [sp, #28]
   16110:	cmp	w0, #0x0
   16114:	b.eq	1612c <gzseek64@@ZLIB_1.2.3.3+0xa8>  // b.none
   16118:	ldr	w0, [sp, #28]
   1611c:	cmp	w0, #0x1
   16120:	b.eq	1612c <gzseek64@@ZLIB_1.2.3.3+0xa8>  // b.none
   16124:	mov	x0, #0xffffffffffffffff    	// #-1
   16128:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   1612c:	ldr	w0, [sp, #28]
   16130:	cmp	w0, #0x0
   16134:	b.ne	16150 <gzseek64@@ZLIB_1.2.3.3+0xcc>  // b.any
   16138:	ldr	x0, [sp, #72]
   1613c:	ldr	x0, [x0, #16]
   16140:	ldr	x1, [sp, #32]
   16144:	sub	x0, x1, x0
   16148:	str	x0, [sp, #32]
   1614c:	b	16174 <gzseek64@@ZLIB_1.2.3.3+0xf0>
   16150:	ldr	x0, [sp, #72]
   16154:	ldr	w0, [x0, #104]
   16158:	cmp	w0, #0x0
   1615c:	b.eq	16174 <gzseek64@@ZLIB_1.2.3.3+0xf0>  // b.none
   16160:	ldr	x0, [sp, #72]
   16164:	ldr	x0, [x0, #96]
   16168:	ldr	x1, [sp, #32]
   1616c:	add	x0, x1, x0
   16170:	str	x0, [sp, #32]
   16174:	ldr	x0, [sp, #72]
   16178:	str	wzr, [x0, #104]
   1617c:	ldr	x0, [sp, #72]
   16180:	ldr	w1, [x0, #24]
   16184:	mov	w0, #0x1c4f                	// #7247
   16188:	cmp	w1, w0
   1618c:	b.ne	16258 <gzseek64@@ZLIB_1.2.3.3+0x1d4>  // b.any
   16190:	ldr	x0, [sp, #72]
   16194:	ldr	w0, [x0, #68]
   16198:	cmp	w0, #0x1
   1619c:	b.ne	16258 <gzseek64@@ZLIB_1.2.3.3+0x1d4>  // b.any
   161a0:	ldr	x0, [sp, #72]
   161a4:	ldr	x1, [x0, #16]
   161a8:	ldr	x0, [sp, #32]
   161ac:	add	x0, x1, x0
   161b0:	cmp	x0, #0x0
   161b4:	b.lt	16258 <gzseek64@@ZLIB_1.2.3.3+0x1d4>  // b.tstop
   161b8:	ldr	x0, [sp, #72]
   161bc:	ldr	w3, [x0, #28]
   161c0:	ldr	x0, [sp, #72]
   161c4:	ldr	w0, [x0]
   161c8:	mov	w0, w0
   161cc:	ldr	x1, [sp, #32]
   161d0:	sub	x0, x1, x0
   161d4:	mov	w2, #0x1                   	// #1
   161d8:	mov	x1, x0
   161dc:	mov	w0, w3
   161e0:	bl	24b0 <lseek64@plt>
   161e4:	str	x0, [sp, #64]
   161e8:	ldr	x0, [sp, #64]
   161ec:	cmn	x0, #0x1
   161f0:	b.ne	161fc <gzseek64@@ZLIB_1.2.3.3+0x178>  // b.any
   161f4:	mov	x0, #0xffffffffffffffff    	// #-1
   161f8:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   161fc:	ldr	x0, [sp, #72]
   16200:	str	wzr, [x0]
   16204:	ldr	x0, [sp, #72]
   16208:	str	wzr, [x0, #80]
   1620c:	ldr	x0, [sp, #72]
   16210:	str	wzr, [x0, #84]
   16214:	ldr	x0, [sp, #72]
   16218:	str	wzr, [x0, #104]
   1621c:	mov	x2, #0x0                   	// #0
   16220:	mov	w1, #0x0                   	// #0
   16224:	ldr	x0, [sp, #72]
   16228:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   1622c:	ldr	x0, [sp, #72]
   16230:	str	wzr, [x0, #128]
   16234:	ldr	x0, [sp, #72]
   16238:	ldr	x1, [x0, #16]
   1623c:	ldr	x0, [sp, #32]
   16240:	add	x1, x1, x0
   16244:	ldr	x0, [sp, #72]
   16248:	str	x1, [x0, #16]
   1624c:	ldr	x0, [sp, #72]
   16250:	ldr	x0, [x0, #16]
   16254:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   16258:	ldr	x0, [sp, #32]
   1625c:	cmp	x0, #0x0
   16260:	b.ge	162c0 <gzseek64@@ZLIB_1.2.3.3+0x23c>  // b.tcont
   16264:	ldr	x0, [sp, #72]
   16268:	ldr	w1, [x0, #24]
   1626c:	mov	w0, #0x1c4f                	// #7247
   16270:	cmp	w1, w0
   16274:	b.eq	16280 <gzseek64@@ZLIB_1.2.3.3+0x1fc>  // b.none
   16278:	mov	x0, #0xffffffffffffffff    	// #-1
   1627c:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   16280:	ldr	x0, [sp, #72]
   16284:	ldr	x0, [x0, #16]
   16288:	ldr	x1, [sp, #32]
   1628c:	add	x0, x1, x0
   16290:	str	x0, [sp, #32]
   16294:	ldr	x0, [sp, #32]
   16298:	cmp	x0, #0x0
   1629c:	b.ge	162a8 <gzseek64@@ZLIB_1.2.3.3+0x224>  // b.tcont
   162a0:	mov	x0, #0xffffffffffffffff    	// #-1
   162a4:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   162a8:	ldr	x0, [sp, #40]
   162ac:	bl	25a0 <gzrewind@plt>
   162b0:	cmn	w0, #0x1
   162b4:	b.ne	162c0 <gzseek64@@ZLIB_1.2.3.3+0x23c>  // b.any
   162b8:	mov	x0, #0xffffffffffffffff    	// #-1
   162bc:	b	1638c <gzseek64@@ZLIB_1.2.3.3+0x308>
   162c0:	ldr	x0, [sp, #72]
   162c4:	ldr	w1, [x0, #24]
   162c8:	mov	w0, #0x1c4f                	// #7247
   162cc:	cmp	w1, w0
   162d0:	b.ne	16358 <gzseek64@@ZLIB_1.2.3.3+0x2d4>  // b.any
   162d4:	ldr	x0, [sp, #72]
   162d8:	ldr	w0, [x0]
   162dc:	mov	w0, w0
   162e0:	ldr	x1, [sp, #32]
   162e4:	cmp	x1, x0
   162e8:	b.ge	162f4 <gzseek64@@ZLIB_1.2.3.3+0x270>  // b.tcont
   162ec:	ldr	x0, [sp, #32]
   162f0:	b	162fc <gzseek64@@ZLIB_1.2.3.3+0x278>
   162f4:	ldr	x0, [sp, #72]
   162f8:	ldr	w0, [x0]
   162fc:	str	w0, [sp, #60]
   16300:	ldr	x0, [sp, #72]
   16304:	ldr	w1, [x0]
   16308:	ldr	w0, [sp, #60]
   1630c:	sub	w1, w1, w0
   16310:	ldr	x0, [sp, #72]
   16314:	str	w1, [x0]
   16318:	ldr	x0, [sp, #72]
   1631c:	ldr	x1, [x0, #8]
   16320:	ldr	w0, [sp, #60]
   16324:	add	x1, x1, x0
   16328:	ldr	x0, [sp, #72]
   1632c:	str	x1, [x0, #8]
   16330:	ldr	x0, [sp, #72]
   16334:	ldr	x1, [x0, #16]
   16338:	ldr	w0, [sp, #60]
   1633c:	add	x1, x1, x0
   16340:	ldr	x0, [sp, #72]
   16344:	str	x1, [x0, #16]
   16348:	ldr	w0, [sp, #60]
   1634c:	ldr	x1, [sp, #32]
   16350:	sub	x0, x1, x0
   16354:	str	x0, [sp, #32]
   16358:	ldr	x0, [sp, #32]
   1635c:	cmp	x0, #0x0
   16360:	b.eq	1637c <gzseek64@@ZLIB_1.2.3.3+0x2f8>  // b.none
   16364:	ldr	x0, [sp, #72]
   16368:	mov	w1, #0x1                   	// #1
   1636c:	str	w1, [x0, #104]
   16370:	ldr	x0, [sp, #72]
   16374:	ldr	x1, [sp, #32]
   16378:	str	x1, [x0, #96]
   1637c:	ldr	x0, [sp, #72]
   16380:	ldr	x1, [x0, #16]
   16384:	ldr	x0, [sp, #32]
   16388:	add	x0, x1, x0
   1638c:	ldp	x29, x30, [sp], #80
   16390:	ret

0000000000016394 <gzseek@@Base>:
   16394:	stp	x29, x30, [sp, #-64]!
   16398:	mov	x29, sp
   1639c:	str	x0, [sp, #40]
   163a0:	str	x1, [sp, #32]
   163a4:	str	w2, [sp, #28]
   163a8:	ldr	w2, [sp, #28]
   163ac:	ldr	x1, [sp, #32]
   163b0:	ldr	x0, [sp, #40]
   163b4:	bl	23d0 <gzseek64@plt>
   163b8:	str	x0, [sp, #56]
   163bc:	ldr	x0, [sp, #56]
   163c0:	ldp	x29, x30, [sp], #64
   163c4:	ret

00000000000163c8 <gztell64@@ZLIB_1.2.3.3>:
   163c8:	sub	sp, sp, #0x20
   163cc:	str	x0, [sp, #8]
   163d0:	ldr	x0, [sp, #8]
   163d4:	cmp	x0, #0x0
   163d8:	b.ne	163e4 <gztell64@@ZLIB_1.2.3.3+0x1c>  // b.any
   163dc:	mov	x0, #0xffffffffffffffff    	// #-1
   163e0:	b	16448 <gztell64@@ZLIB_1.2.3.3+0x80>
   163e4:	ldr	x0, [sp, #8]
   163e8:	str	x0, [sp, #24]
   163ec:	ldr	x0, [sp, #24]
   163f0:	ldr	w1, [x0, #24]
   163f4:	mov	w0, #0x1c4f                	// #7247
   163f8:	cmp	w1, w0
   163fc:	b.eq	1641c <gztell64@@ZLIB_1.2.3.3+0x54>  // b.none
   16400:	ldr	x0, [sp, #24]
   16404:	ldr	w1, [x0, #24]
   16408:	mov	w0, #0x79b1                	// #31153
   1640c:	cmp	w1, w0
   16410:	b.eq	1641c <gztell64@@ZLIB_1.2.3.3+0x54>  // b.none
   16414:	mov	x0, #0xffffffffffffffff    	// #-1
   16418:	b	16448 <gztell64@@ZLIB_1.2.3.3+0x80>
   1641c:	ldr	x0, [sp, #24]
   16420:	ldr	x1, [x0, #16]
   16424:	ldr	x0, [sp, #24]
   16428:	ldr	w0, [x0, #104]
   1642c:	cmp	w0, #0x0
   16430:	b.eq	16440 <gztell64@@ZLIB_1.2.3.3+0x78>  // b.none
   16434:	ldr	x0, [sp, #24]
   16438:	ldr	x0, [x0, #96]
   1643c:	b	16444 <gztell64@@ZLIB_1.2.3.3+0x7c>
   16440:	mov	x0, #0x0                   	// #0
   16444:	add	x0, x0, x1
   16448:	add	sp, sp, #0x20
   1644c:	ret

0000000000016450 <gztell@@Base>:
   16450:	stp	x29, x30, [sp, #-48]!
   16454:	mov	x29, sp
   16458:	str	x0, [sp, #24]
   1645c:	ldr	x0, [sp, #24]
   16460:	bl	24c0 <gztell64@plt>
   16464:	str	x0, [sp, #40]
   16468:	ldr	x0, [sp, #40]
   1646c:	ldp	x29, x30, [sp], #48
   16470:	ret

0000000000016474 <gzoffset64@@ZLIB_1.2.3.5>:
   16474:	stp	x29, x30, [sp, #-48]!
   16478:	mov	x29, sp
   1647c:	str	x0, [sp, #24]
   16480:	ldr	x0, [sp, #24]
   16484:	cmp	x0, #0x0
   16488:	b.ne	16494 <gzoffset64@@ZLIB_1.2.3.5+0x20>  // b.any
   1648c:	mov	x0, #0xffffffffffffffff    	// #-1
   16490:	b	16528 <gzoffset64@@ZLIB_1.2.3.5+0xb4>
   16494:	ldr	x0, [sp, #24]
   16498:	str	x0, [sp, #32]
   1649c:	ldr	x0, [sp, #32]
   164a0:	ldr	w1, [x0, #24]
   164a4:	mov	w0, #0x1c4f                	// #7247
   164a8:	cmp	w1, w0
   164ac:	b.eq	164cc <gzoffset64@@ZLIB_1.2.3.5+0x58>  // b.none
   164b0:	ldr	x0, [sp, #32]
   164b4:	ldr	w1, [x0, #24]
   164b8:	mov	w0, #0x79b1                	// #31153
   164bc:	cmp	w1, w0
   164c0:	b.eq	164cc <gzoffset64@@ZLIB_1.2.3.5+0x58>  // b.none
   164c4:	mov	x0, #0xffffffffffffffff    	// #-1
   164c8:	b	16528 <gzoffset64@@ZLIB_1.2.3.5+0xb4>
   164cc:	ldr	x0, [sp, #32]
   164d0:	ldr	w0, [x0, #28]
   164d4:	mov	w2, #0x1                   	// #1
   164d8:	mov	x1, #0x0                   	// #0
   164dc:	bl	24b0 <lseek64@plt>
   164e0:	str	x0, [sp, #40]
   164e4:	ldr	x0, [sp, #40]
   164e8:	cmn	x0, #0x1
   164ec:	b.ne	164f8 <gzoffset64@@ZLIB_1.2.3.5+0x84>  // b.any
   164f0:	mov	x0, #0xffffffffffffffff    	// #-1
   164f4:	b	16528 <gzoffset64@@ZLIB_1.2.3.5+0xb4>
   164f8:	ldr	x0, [sp, #32]
   164fc:	ldr	w1, [x0, #24]
   16500:	mov	w0, #0x1c4f                	// #7247
   16504:	cmp	w1, w0
   16508:	b.ne	16524 <gzoffset64@@ZLIB_1.2.3.5+0xb0>  // b.any
   1650c:	ldr	x0, [sp, #32]
   16510:	ldr	w0, [x0, #128]
   16514:	mov	w0, w0
   16518:	ldr	x1, [sp, #40]
   1651c:	sub	x0, x1, x0
   16520:	str	x0, [sp, #40]
   16524:	ldr	x0, [sp, #40]
   16528:	ldp	x29, x30, [sp], #48
   1652c:	ret

0000000000016530 <gzoffset@@ZLIB_1.2.3.5>:
   16530:	stp	x29, x30, [sp, #-48]!
   16534:	mov	x29, sp
   16538:	str	x0, [sp, #24]
   1653c:	ldr	x0, [sp, #24]
   16540:	bl	25b0 <gzoffset64@plt>
   16544:	str	x0, [sp, #40]
   16548:	ldr	x0, [sp, #40]
   1654c:	ldp	x29, x30, [sp], #48
   16550:	ret

0000000000016554 <gzeof@@Base>:
   16554:	sub	sp, sp, #0x20
   16558:	str	x0, [sp, #8]
   1655c:	ldr	x0, [sp, #8]
   16560:	cmp	x0, #0x0
   16564:	b.ne	16570 <gzeof@@Base+0x1c>  // b.any
   16568:	mov	w0, #0x0                   	// #0
   1656c:	b	165cc <gzeof@@Base+0x78>
   16570:	ldr	x0, [sp, #8]
   16574:	str	x0, [sp, #24]
   16578:	ldr	x0, [sp, #24]
   1657c:	ldr	w1, [x0, #24]
   16580:	mov	w0, #0x1c4f                	// #7247
   16584:	cmp	w1, w0
   16588:	b.eq	165a8 <gzeof@@Base+0x54>  // b.none
   1658c:	ldr	x0, [sp, #24]
   16590:	ldr	w1, [x0, #24]
   16594:	mov	w0, #0x79b1                	// #31153
   16598:	cmp	w1, w0
   1659c:	b.eq	165a8 <gzeof@@Base+0x54>  // b.none
   165a0:	mov	w0, #0x0                   	// #0
   165a4:	b	165cc <gzeof@@Base+0x78>
   165a8:	ldr	x0, [sp, #24]
   165ac:	ldr	w1, [x0, #24]
   165b0:	mov	w0, #0x1c4f                	// #7247
   165b4:	cmp	w1, w0
   165b8:	b.ne	165c8 <gzeof@@Base+0x74>  // b.any
   165bc:	ldr	x0, [sp, #24]
   165c0:	ldr	w0, [x0, #84]
   165c4:	b	165cc <gzeof@@Base+0x78>
   165c8:	mov	w0, #0x0                   	// #0
   165cc:	add	sp, sp, #0x20
   165d0:	ret

00000000000165d4 <gzerror@@Base>:
   165d4:	sub	sp, sp, #0x20
   165d8:	str	x0, [sp, #8]
   165dc:	str	x1, [sp]
   165e0:	ldr	x0, [sp, #8]
   165e4:	cmp	x0, #0x0
   165e8:	b.ne	165f4 <gzerror@@Base+0x20>  // b.any
   165ec:	mov	x0, #0x0                   	// #0
   165f0:	b	16688 <gzerror@@Base+0xb4>
   165f4:	ldr	x0, [sp, #8]
   165f8:	str	x0, [sp, #24]
   165fc:	ldr	x0, [sp, #24]
   16600:	ldr	w1, [x0, #24]
   16604:	mov	w0, #0x1c4f                	// #7247
   16608:	cmp	w1, w0
   1660c:	b.eq	1662c <gzerror@@Base+0x58>  // b.none
   16610:	ldr	x0, [sp, #24]
   16614:	ldr	w1, [x0, #24]
   16618:	mov	w0, #0x79b1                	// #31153
   1661c:	cmp	w1, w0
   16620:	b.eq	1662c <gzerror@@Base+0x58>  // b.none
   16624:	mov	x0, #0x0                   	// #0
   16628:	b	16688 <gzerror@@Base+0xb4>
   1662c:	ldr	x0, [sp]
   16630:	cmp	x0, #0x0
   16634:	b.eq	16648 <gzerror@@Base+0x74>  // b.none
   16638:	ldr	x0, [sp, #24]
   1663c:	ldr	w1, [x0, #108]
   16640:	ldr	x0, [sp]
   16644:	str	w1, [x0]
   16648:	ldr	x0, [sp, #24]
   1664c:	ldr	w0, [x0, #108]
   16650:	cmn	w0, #0x4
   16654:	b.eq	16680 <gzerror@@Base+0xac>  // b.none
   16658:	ldr	x0, [sp, #24]
   1665c:	ldr	x0, [x0, #112]
   16660:	cmp	x0, #0x0
   16664:	b.eq	16674 <gzerror@@Base+0xa0>  // b.none
   16668:	ldr	x0, [sp, #24]
   1666c:	ldr	x0, [x0, #112]
   16670:	b	16688 <gzerror@@Base+0xb4>
   16674:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16678:	add	x0, x0, #0x1c8
   1667c:	b	16688 <gzerror@@Base+0xb4>
   16680:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16684:	add	x0, x0, #0x1d0
   16688:	add	sp, sp, #0x20
   1668c:	ret

0000000000016690 <gzclearerr@@ZLIB_1.2.0.2>:
   16690:	stp	x29, x30, [sp, #-48]!
   16694:	mov	x29, sp
   16698:	str	x0, [sp, #24]
   1669c:	ldr	x0, [sp, #24]
   166a0:	cmp	x0, #0x0
   166a4:	b.eq	16710 <gzclearerr@@ZLIB_1.2.0.2+0x80>  // b.none
   166a8:	ldr	x0, [sp, #24]
   166ac:	str	x0, [sp, #40]
   166b0:	ldr	x0, [sp, #40]
   166b4:	ldr	w1, [x0, #24]
   166b8:	mov	w0, #0x1c4f                	// #7247
   166bc:	cmp	w1, w0
   166c0:	b.eq	166d8 <gzclearerr@@ZLIB_1.2.0.2+0x48>  // b.none
   166c4:	ldr	x0, [sp, #40]
   166c8:	ldr	w1, [x0, #24]
   166cc:	mov	w0, #0x79b1                	// #31153
   166d0:	cmp	w1, w0
   166d4:	b.ne	16718 <gzclearerr@@ZLIB_1.2.0.2+0x88>  // b.any
   166d8:	ldr	x0, [sp, #40]
   166dc:	ldr	w1, [x0, #24]
   166e0:	mov	w0, #0x1c4f                	// #7247
   166e4:	cmp	w1, w0
   166e8:	b.ne	166fc <gzclearerr@@ZLIB_1.2.0.2+0x6c>  // b.any
   166ec:	ldr	x0, [sp, #40]
   166f0:	str	wzr, [x0, #80]
   166f4:	ldr	x0, [sp, #40]
   166f8:	str	wzr, [x0, #84]
   166fc:	mov	x2, #0x0                   	// #0
   16700:	mov	w1, #0x0                   	// #0
   16704:	ldr	x0, [sp, #40]
   16708:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   1670c:	b	1671c <gzclearerr@@ZLIB_1.2.0.2+0x8c>
   16710:	nop
   16714:	b	1671c <gzclearerr@@ZLIB_1.2.0.2+0x8c>
   16718:	nop
   1671c:	ldp	x29, x30, [sp], #48
   16720:	ret
   16724:	stp	x29, x30, [sp, #-64]!
   16728:	mov	x29, sp
   1672c:	stp	x19, x20, [sp, #16]
   16730:	str	x0, [sp, #56]
   16734:	str	w1, [sp, #52]
   16738:	str	x2, [sp, #40]
   1673c:	ldr	x0, [sp, #56]
   16740:	ldr	x0, [x0, #112]
   16744:	cmp	x0, #0x0
   16748:	b.eq	16770 <gzclearerr@@ZLIB_1.2.0.2+0xe0>  // b.none
   1674c:	ldr	x0, [sp, #56]
   16750:	ldr	w0, [x0, #108]
   16754:	cmn	w0, #0x4
   16758:	b.eq	16768 <gzclearerr@@ZLIB_1.2.0.2+0xd8>  // b.none
   1675c:	ldr	x0, [sp, #56]
   16760:	ldr	x0, [x0, #112]
   16764:	bl	2570 <free@plt>
   16768:	ldr	x0, [sp, #56]
   1676c:	str	xzr, [x0, #112]
   16770:	ldr	w0, [sp, #52]
   16774:	cmp	w0, #0x0
   16778:	b.eq	16790 <gzclearerr@@ZLIB_1.2.0.2+0x100>  // b.none
   1677c:	ldr	w0, [sp, #52]
   16780:	cmn	w0, #0x5
   16784:	b.eq	16790 <gzclearerr@@ZLIB_1.2.0.2+0x100>  // b.none
   16788:	ldr	x0, [sp, #56]
   1678c:	str	wzr, [x0]
   16790:	ldr	x0, [sp, #56]
   16794:	ldr	w1, [sp, #52]
   16798:	str	w1, [x0, #108]
   1679c:	ldr	x0, [sp, #40]
   167a0:	cmp	x0, #0x0
   167a4:	b.eq	16858 <gzclearerr@@ZLIB_1.2.0.2+0x1c8>  // b.none
   167a8:	ldr	w0, [sp, #52]
   167ac:	cmn	w0, #0x4
   167b0:	b.eq	16860 <gzclearerr@@ZLIB_1.2.0.2+0x1d0>  // b.none
   167b4:	ldr	x0, [sp, #56]
   167b8:	ldr	x0, [x0, #32]
   167bc:	bl	23e0 <strlen@plt>
   167c0:	mov	x19, x0
   167c4:	ldr	x0, [sp, #40]
   167c8:	bl	23e0 <strlen@plt>
   167cc:	add	x0, x19, x0
   167d0:	add	x0, x0, #0x3
   167d4:	bl	2460 <malloc@plt>
   167d8:	mov	x1, x0
   167dc:	ldr	x0, [sp, #56]
   167e0:	str	x1, [x0, #112]
   167e4:	ldr	x0, [sp, #56]
   167e8:	ldr	x0, [x0, #112]
   167ec:	cmp	x0, #0x0
   167f0:	b.ne	16804 <gzclearerr@@ZLIB_1.2.0.2+0x174>  // b.any
   167f4:	ldr	x0, [sp, #56]
   167f8:	mov	w1, #0xfffffffc            	// #-4
   167fc:	str	w1, [x0, #108]
   16800:	b	16864 <gzclearerr@@ZLIB_1.2.0.2+0x1d4>
   16804:	ldr	x0, [sp, #56]
   16808:	ldr	x19, [x0, #112]
   1680c:	ldr	x0, [sp, #56]
   16810:	ldr	x0, [x0, #32]
   16814:	bl	23e0 <strlen@plt>
   16818:	mov	x20, x0
   1681c:	ldr	x0, [sp, #40]
   16820:	bl	23e0 <strlen@plt>
   16824:	add	x0, x20, x0
   16828:	add	x1, x0, #0x3
   1682c:	ldr	x0, [sp, #56]
   16830:	ldr	x2, [x0, #32]
   16834:	ldr	x5, [sp, #40]
   16838:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   1683c:	add	x4, x0, #0x1e0
   16840:	mov	x3, x2
   16844:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16848:	add	x2, x0, #0x1e8
   1684c:	mov	x0, x19
   16850:	bl	2450 <snprintf@plt>
   16854:	b	16864 <gzclearerr@@ZLIB_1.2.0.2+0x1d4>
   16858:	nop
   1685c:	b	16864 <gzclearerr@@ZLIB_1.2.0.2+0x1d4>
   16860:	nop
   16864:	ldp	x19, x20, [sp, #16]
   16868:	ldp	x29, x30, [sp], #64
   1686c:	ret
   16870:	stp	x29, x30, [sp, #-64]!
   16874:	mov	x29, sp
   16878:	str	x0, [sp, #40]
   1687c:	str	x1, [sp, #32]
   16880:	str	w2, [sp, #28]
   16884:	str	x3, [sp, #16]
   16888:	mov	w0, #0x40000000            	// #1073741824
   1688c:	str	w0, [sp, #56]
   16890:	ldr	x0, [sp, #16]
   16894:	str	wzr, [x0]
   16898:	ldr	x0, [sp, #16]
   1689c:	ldr	w0, [x0]
   168a0:	ldr	w1, [sp, #28]
   168a4:	sub	w0, w1, w0
   168a8:	str	w0, [sp, #60]
   168ac:	ldr	w1, [sp, #60]
   168b0:	ldr	w0, [sp, #56]
   168b4:	cmp	w1, w0
   168b8:	b.ls	168c4 <gzclearerr@@ZLIB_1.2.0.2+0x234>  // b.plast
   168bc:	ldr	w0, [sp, #56]
   168c0:	str	w0, [sp, #60]
   168c4:	ldr	x0, [sp, #40]
   168c8:	ldr	w3, [x0, #28]
   168cc:	ldr	x0, [sp, #16]
   168d0:	ldr	w0, [x0]
   168d4:	mov	w0, w0
   168d8:	ldr	x1, [sp, #32]
   168dc:	add	x0, x1, x0
   168e0:	ldr	w1, [sp, #60]
   168e4:	mov	x2, x1
   168e8:	mov	x1, x0
   168ec:	mov	w0, w3
   168f0:	bl	25e0 <read@plt>
   168f4:	str	w0, [sp, #52]
   168f8:	ldr	w0, [sp, #52]
   168fc:	cmp	w0, #0x0
   16900:	b.le	16934 <gzclearerr@@ZLIB_1.2.0.2+0x2a4>
   16904:	ldr	x0, [sp, #16]
   16908:	ldr	w1, [x0]
   1690c:	ldr	w0, [sp, #52]
   16910:	add	w1, w1, w0
   16914:	ldr	x0, [sp, #16]
   16918:	str	w1, [x0]
   1691c:	ldr	x0, [sp, #16]
   16920:	ldr	w0, [x0]
   16924:	ldr	w1, [sp, #28]
   16928:	cmp	w1, w0
   1692c:	b.hi	16898 <gzclearerr@@ZLIB_1.2.0.2+0x208>  // b.pmore
   16930:	b	16938 <gzclearerr@@ZLIB_1.2.0.2+0x2a8>
   16934:	nop
   16938:	ldr	w0, [sp, #52]
   1693c:	cmp	w0, #0x0
   16940:	b.ge	16968 <gzclearerr@@ZLIB_1.2.0.2+0x2d8>  // b.tcont
   16944:	bl	2650 <__errno_location@plt>
   16948:	ldr	w0, [x0]
   1694c:	bl	2500 <strerror@plt>
   16950:	mov	x2, x0
   16954:	mov	w1, #0xffffffff            	// #-1
   16958:	ldr	x0, [sp, #40]
   1695c:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   16960:	mov	w0, #0xffffffff            	// #-1
   16964:	b	16984 <gzclearerr@@ZLIB_1.2.0.2+0x2f4>
   16968:	ldr	w0, [sp, #52]
   1696c:	cmp	w0, #0x0
   16970:	b.ne	16980 <gzclearerr@@ZLIB_1.2.0.2+0x2f0>  // b.any
   16974:	ldr	x0, [sp, #40]
   16978:	mov	w1, #0x1                   	// #1
   1697c:	str	w1, [x0, #80]
   16980:	mov	w0, #0x0                   	// #0
   16984:	ldp	x29, x30, [sp], #64
   16988:	ret
   1698c:	stp	x29, x30, [sp, #-80]!
   16990:	mov	x29, sp
   16994:	str	x0, [sp, #24]
   16998:	ldr	x0, [sp, #24]
   1699c:	add	x0, x0, #0x78
   169a0:	str	x0, [sp, #48]
   169a4:	ldr	x0, [sp, #24]
   169a8:	ldr	w0, [x0, #108]
   169ac:	cmp	w0, #0x0
   169b0:	b.eq	169cc <gzclearerr@@ZLIB_1.2.0.2+0x33c>  // b.none
   169b4:	ldr	x0, [sp, #24]
   169b8:	ldr	w0, [x0, #108]
   169bc:	cmn	w0, #0x5
   169c0:	b.eq	169cc <gzclearerr@@ZLIB_1.2.0.2+0x33c>  // b.none
   169c4:	mov	w0, #0xffffffff            	// #-1
   169c8:	b	16ac8 <gzclearerr@@ZLIB_1.2.0.2+0x438>
   169cc:	ldr	x0, [sp, #24]
   169d0:	ldr	w0, [x0, #80]
   169d4:	cmp	w0, #0x0
   169d8:	b.ne	16ac4 <gzclearerr@@ZLIB_1.2.0.2+0x434>  // b.any
   169dc:	ldr	x0, [sp, #48]
   169e0:	ldr	w0, [x0, #8]
   169e4:	cmp	w0, #0x0
   169e8:	b.eq	16a48 <gzclearerr@@ZLIB_1.2.0.2+0x3b8>  // b.none
   169ec:	ldr	x0, [sp, #24]
   169f0:	ldr	x0, [x0, #48]
   169f4:	str	x0, [sp, #72]
   169f8:	ldr	x0, [sp, #48]
   169fc:	ldr	x0, [x0]
   16a00:	str	x0, [sp, #64]
   16a04:	ldr	x0, [sp, #48]
   16a08:	ldr	w0, [x0, #8]
   16a0c:	str	w0, [sp, #60]
   16a10:	ldr	x1, [sp, #64]
   16a14:	add	x0, x1, #0x1
   16a18:	str	x0, [sp, #64]
   16a1c:	ldr	x0, [sp, #72]
   16a20:	add	x2, x0, #0x1
   16a24:	str	x2, [sp, #72]
   16a28:	ldrb	w1, [x1]
   16a2c:	strb	w1, [x0]
   16a30:	ldr	w0, [sp, #60]
   16a34:	sub	w0, w0, #0x1
   16a38:	str	w0, [sp, #60]
   16a3c:	ldr	w0, [sp, #60]
   16a40:	cmp	w0, #0x0
   16a44:	b.ne	16a10 <gzclearerr@@ZLIB_1.2.0.2+0x380>  // b.any
   16a48:	ldr	x0, [sp, #24]
   16a4c:	ldr	x1, [x0, #48]
   16a50:	ldr	x0, [sp, #48]
   16a54:	ldr	w0, [x0, #8]
   16a58:	mov	w0, w0
   16a5c:	add	x4, x1, x0
   16a60:	ldr	x0, [sp, #24]
   16a64:	ldr	w1, [x0, #40]
   16a68:	ldr	x0, [sp, #48]
   16a6c:	ldr	w0, [x0, #8]
   16a70:	sub	w0, w1, w0
   16a74:	add	x1, sp, #0x2c
   16a78:	mov	x3, x1
   16a7c:	mov	w2, w0
   16a80:	mov	x1, x4
   16a84:	ldr	x0, [sp, #24]
   16a88:	bl	16870 <gzclearerr@@ZLIB_1.2.0.2+0x1e0>
   16a8c:	cmn	w0, #0x1
   16a90:	b.ne	16a9c <gzclearerr@@ZLIB_1.2.0.2+0x40c>  // b.any
   16a94:	mov	w0, #0xffffffff            	// #-1
   16a98:	b	16ac8 <gzclearerr@@ZLIB_1.2.0.2+0x438>
   16a9c:	ldr	x0, [sp, #48]
   16aa0:	ldr	w1, [x0, #8]
   16aa4:	ldr	w0, [sp, #44]
   16aa8:	add	w1, w1, w0
   16aac:	ldr	x0, [sp, #48]
   16ab0:	str	w1, [x0, #8]
   16ab4:	ldr	x0, [sp, #24]
   16ab8:	ldr	x1, [x0, #48]
   16abc:	ldr	x0, [sp, #48]
   16ac0:	str	x1, [x0]
   16ac4:	mov	w0, #0x0                   	// #0
   16ac8:	ldp	x29, x30, [sp], #80
   16acc:	ret
   16ad0:	stp	x29, x30, [sp, #-48]!
   16ad4:	mov	x29, sp
   16ad8:	str	x0, [sp, #24]
   16adc:	ldr	x0, [sp, #24]
   16ae0:	add	x0, x0, #0x78
   16ae4:	str	x0, [sp, #40]
   16ae8:	ldr	x0, [sp, #24]
   16aec:	ldr	w0, [x0, #40]
   16af0:	cmp	w0, #0x0
   16af4:	b.ne	16c24 <gzclearerr@@ZLIB_1.2.0.2+0x594>  // b.any
   16af8:	ldr	x0, [sp, #24]
   16afc:	ldr	w0, [x0, #44]
   16b00:	mov	w0, w0
   16b04:	bl	2460 <malloc@plt>
   16b08:	mov	x1, x0
   16b0c:	ldr	x0, [sp, #24]
   16b10:	str	x1, [x0, #48]
   16b14:	ldr	x0, [sp, #24]
   16b18:	ldr	w0, [x0, #44]
   16b1c:	lsl	w0, w0, #1
   16b20:	mov	w0, w0
   16b24:	bl	2460 <malloc@plt>
   16b28:	mov	x1, x0
   16b2c:	ldr	x0, [sp, #24]
   16b30:	str	x1, [x0, #56]
   16b34:	ldr	x0, [sp, #24]
   16b38:	ldr	x0, [x0, #48]
   16b3c:	cmp	x0, #0x0
   16b40:	b.eq	16b54 <gzclearerr@@ZLIB_1.2.0.2+0x4c4>  // b.none
   16b44:	ldr	x0, [sp, #24]
   16b48:	ldr	x0, [x0, #56]
   16b4c:	cmp	x0, #0x0
   16b50:	b.ne	16b88 <gzclearerr@@ZLIB_1.2.0.2+0x4f8>  // b.any
   16b54:	ldr	x0, [sp, #24]
   16b58:	ldr	x0, [x0, #56]
   16b5c:	bl	2570 <free@plt>
   16b60:	ldr	x0, [sp, #24]
   16b64:	ldr	x0, [x0, #48]
   16b68:	bl	2570 <free@plt>
   16b6c:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16b70:	add	x2, x0, #0x1f0
   16b74:	mov	w1, #0xfffffffc            	// #-4
   16b78:	ldr	x0, [sp, #24]
   16b7c:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   16b80:	mov	w0, #0xffffffff            	// #-1
   16b84:	b	16d74 <gzclearerr@@ZLIB_1.2.0.2+0x6e4>
   16b88:	ldr	x0, [sp, #24]
   16b8c:	ldr	w1, [x0, #44]
   16b90:	ldr	x0, [sp, #24]
   16b94:	str	w1, [x0, #40]
   16b98:	ldr	x0, [sp, #24]
   16b9c:	str	xzr, [x0, #184]
   16ba0:	ldr	x0, [sp, #24]
   16ba4:	str	xzr, [x0, #192]
   16ba8:	ldr	x0, [sp, #24]
   16bac:	str	xzr, [x0, #200]
   16bb0:	ldr	x0, [sp, #24]
   16bb4:	str	wzr, [x0, #128]
   16bb8:	ldr	x0, [sp, #24]
   16bbc:	str	xzr, [x0, #120]
   16bc0:	ldr	x0, [sp, #24]
   16bc4:	add	x4, x0, #0x78
   16bc8:	mov	w3, #0x70                  	// #112
   16bcc:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16bd0:	add	x2, x0, #0x200
   16bd4:	mov	w1, #0x1f                  	// #31
   16bd8:	mov	x0, x4
   16bdc:	bl	2600 <inflateInit2_@plt>
   16be0:	cmp	w0, #0x0
   16be4:	b.eq	16c24 <gzclearerr@@ZLIB_1.2.0.2+0x594>  // b.none
   16be8:	ldr	x0, [sp, #24]
   16bec:	ldr	x0, [x0, #56]
   16bf0:	bl	2570 <free@plt>
   16bf4:	ldr	x0, [sp, #24]
   16bf8:	ldr	x0, [x0, #48]
   16bfc:	bl	2570 <free@plt>
   16c00:	ldr	x0, [sp, #24]
   16c04:	str	wzr, [x0, #40]
   16c08:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16c0c:	add	x2, x0, #0x1f0
   16c10:	mov	w1, #0xfffffffc            	// #-4
   16c14:	ldr	x0, [sp, #24]
   16c18:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   16c1c:	mov	w0, #0xffffffff            	// #-1
   16c20:	b	16d74 <gzclearerr@@ZLIB_1.2.0.2+0x6e4>
   16c24:	ldr	x0, [sp, #40]
   16c28:	ldr	w0, [x0, #8]
   16c2c:	cmp	w0, #0x1
   16c30:	b.hi	16c64 <gzclearerr@@ZLIB_1.2.0.2+0x5d4>  // b.pmore
   16c34:	ldr	x0, [sp, #24]
   16c38:	bl	1698c <gzclearerr@@ZLIB_1.2.0.2+0x2fc>
   16c3c:	cmn	w0, #0x1
   16c40:	b.ne	16c4c <gzclearerr@@ZLIB_1.2.0.2+0x5bc>  // b.any
   16c44:	mov	w0, #0xffffffff            	// #-1
   16c48:	b	16d74 <gzclearerr@@ZLIB_1.2.0.2+0x6e4>
   16c4c:	ldr	x0, [sp, #40]
   16c50:	ldr	w0, [x0, #8]
   16c54:	cmp	w0, #0x0
   16c58:	b.ne	16c64 <gzclearerr@@ZLIB_1.2.0.2+0x5d4>  // b.any
   16c5c:	mov	w0, #0x0                   	// #0
   16c60:	b	16d74 <gzclearerr@@ZLIB_1.2.0.2+0x6e4>
   16c64:	ldr	x0, [sp, #40]
   16c68:	ldr	w0, [x0, #8]
   16c6c:	cmp	w0, #0x1
   16c70:	b.ls	16cc4 <gzclearerr@@ZLIB_1.2.0.2+0x634>  // b.plast
   16c74:	ldr	x0, [sp, #40]
   16c78:	ldr	x0, [x0]
   16c7c:	ldrb	w0, [x0]
   16c80:	cmp	w0, #0x1f
   16c84:	b.ne	16cc4 <gzclearerr@@ZLIB_1.2.0.2+0x634>  // b.any
   16c88:	ldr	x0, [sp, #40]
   16c8c:	ldr	x0, [x0]
   16c90:	add	x0, x0, #0x1
   16c94:	ldrb	w0, [x0]
   16c98:	cmp	w0, #0x8b
   16c9c:	b.ne	16cc4 <gzclearerr@@ZLIB_1.2.0.2+0x634>  // b.any
   16ca0:	ldr	x0, [sp, #40]
   16ca4:	bl	2610 <inflateReset@plt>
   16ca8:	ldr	x0, [sp, #24]
   16cac:	mov	w1, #0x2                   	// #2
   16cb0:	str	w1, [x0, #68]
   16cb4:	ldr	x0, [sp, #24]
   16cb8:	str	wzr, [x0, #64]
   16cbc:	mov	w0, #0x0                   	// #0
   16cc0:	b	16d74 <gzclearerr@@ZLIB_1.2.0.2+0x6e4>
   16cc4:	ldr	x0, [sp, #24]
   16cc8:	ldr	w0, [x0, #64]
   16ccc:	cmp	w0, #0x0
   16cd0:	b.ne	16cf8 <gzclearerr@@ZLIB_1.2.0.2+0x668>  // b.any
   16cd4:	ldr	x0, [sp, #40]
   16cd8:	str	wzr, [x0, #8]
   16cdc:	ldr	x0, [sp, #24]
   16ce0:	mov	w1, #0x1                   	// #1
   16ce4:	str	w1, [x0, #80]
   16ce8:	ldr	x0, [sp, #24]
   16cec:	str	wzr, [x0]
   16cf0:	mov	w0, #0x0                   	// #0
   16cf4:	b	16d74 <gzclearerr@@ZLIB_1.2.0.2+0x6e4>
   16cf8:	ldr	x0, [sp, #24]
   16cfc:	ldr	x1, [x0, #56]
   16d00:	ldr	x0, [sp, #24]
   16d04:	str	x1, [x0, #8]
   16d08:	ldr	x0, [sp, #40]
   16d0c:	ldr	w0, [x0, #8]
   16d10:	cmp	w0, #0x0
   16d14:	b.eq	16d58 <gzclearerr@@ZLIB_1.2.0.2+0x6c8>  // b.none
   16d18:	ldr	x0, [sp, #24]
   16d1c:	ldr	x3, [x0, #8]
   16d20:	ldr	x0, [sp, #40]
   16d24:	ldr	x1, [x0]
   16d28:	ldr	x0, [sp, #40]
   16d2c:	ldr	w0, [x0, #8]
   16d30:	mov	w0, w0
   16d34:	mov	x2, x0
   16d38:	mov	x0, x3
   16d3c:	bl	23a0 <memcpy@plt>
   16d40:	ldr	x0, [sp, #40]
   16d44:	ldr	w1, [x0, #8]
   16d48:	ldr	x0, [sp, #24]
   16d4c:	str	w1, [x0]
   16d50:	ldr	x0, [sp, #40]
   16d54:	str	wzr, [x0, #8]
   16d58:	ldr	x0, [sp, #24]
   16d5c:	mov	w1, #0x1                   	// #1
   16d60:	str	w1, [x0, #68]
   16d64:	ldr	x0, [sp, #24]
   16d68:	mov	w1, #0x1                   	// #1
   16d6c:	str	w1, [x0, #64]
   16d70:	mov	w0, #0x0                   	// #0
   16d74:	ldp	x29, x30, [sp], #48
   16d78:	ret
   16d7c:	stp	x29, x30, [sp, #-64]!
   16d80:	mov	x29, sp
   16d84:	str	x0, [sp, #24]
   16d88:	str	wzr, [sp, #60]
   16d8c:	ldr	x0, [sp, #24]
   16d90:	add	x0, x0, #0x78
   16d94:	str	x0, [sp, #48]
   16d98:	ldr	x0, [sp, #48]
   16d9c:	ldr	w0, [x0, #32]
   16da0:	str	w0, [sp, #44]
   16da4:	ldr	x0, [sp, #48]
   16da8:	ldr	w0, [x0, #8]
   16dac:	cmp	w0, #0x0
   16db0:	b.ne	16dcc <gzclearerr@@ZLIB_1.2.0.2+0x73c>  // b.any
   16db4:	ldr	x0, [sp, #24]
   16db8:	bl	1698c <gzclearerr@@ZLIB_1.2.0.2+0x2fc>
   16dbc:	cmn	w0, #0x1
   16dc0:	b.ne	16dcc <gzclearerr@@ZLIB_1.2.0.2+0x73c>  // b.any
   16dc4:	mov	w0, #0xffffffff            	// #-1
   16dc8:	b	16f18 <gzclearerr@@ZLIB_1.2.0.2+0x888>
   16dcc:	ldr	x0, [sp, #48]
   16dd0:	ldr	w0, [x0, #8]
   16dd4:	cmp	w0, #0x0
   16dd8:	b.ne	16df4 <gzclearerr@@ZLIB_1.2.0.2+0x764>  // b.any
   16ddc:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16de0:	add	x2, x0, #0x208
   16de4:	mov	w1, #0xfffffffb            	// #-5
   16de8:	ldr	x0, [sp, #24]
   16dec:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   16df0:	b	16ec4 <gzclearerr@@ZLIB_1.2.0.2+0x834>
   16df4:	mov	w1, #0x0                   	// #0
   16df8:	ldr	x0, [sp, #48]
   16dfc:	bl	23f0 <inflate@plt>
   16e00:	str	w0, [sp, #60]
   16e04:	ldr	w0, [sp, #60]
   16e08:	cmn	w0, #0x2
   16e0c:	b.eq	16e1c <gzclearerr@@ZLIB_1.2.0.2+0x78c>  // b.none
   16e10:	ldr	w0, [sp, #60]
   16e14:	cmp	w0, #0x2
   16e18:	b.ne	16e38 <gzclearerr@@ZLIB_1.2.0.2+0x7a8>  // b.any
   16e1c:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16e20:	add	x2, x0, #0x220
   16e24:	mov	w1, #0xfffffffe            	// #-2
   16e28:	ldr	x0, [sp, #24]
   16e2c:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   16e30:	mov	w0, #0xffffffff            	// #-1
   16e34:	b	16f18 <gzclearerr@@ZLIB_1.2.0.2+0x888>
   16e38:	ldr	w0, [sp, #60]
   16e3c:	cmn	w0, #0x4
   16e40:	b.ne	16e60 <gzclearerr@@ZLIB_1.2.0.2+0x7d0>  // b.any
   16e44:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16e48:	add	x2, x0, #0x1f0
   16e4c:	mov	w1, #0xfffffffc            	// #-4
   16e50:	ldr	x0, [sp, #24]
   16e54:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   16e58:	mov	w0, #0xffffffff            	// #-1
   16e5c:	b	16f18 <gzclearerr@@ZLIB_1.2.0.2+0x888>
   16e60:	ldr	w0, [sp, #60]
   16e64:	cmn	w0, #0x3
   16e68:	b.ne	16ea8 <gzclearerr@@ZLIB_1.2.0.2+0x818>  // b.any
   16e6c:	ldr	x0, [sp, #48]
   16e70:	ldr	x0, [x0, #48]
   16e74:	cmp	x0, #0x0
   16e78:	b.eq	16e88 <gzclearerr@@ZLIB_1.2.0.2+0x7f8>  // b.none
   16e7c:	ldr	x0, [sp, #48]
   16e80:	ldr	x0, [x0, #48]
   16e84:	b	16e90 <gzclearerr@@ZLIB_1.2.0.2+0x800>
   16e88:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   16e8c:	add	x0, x0, #0x248
   16e90:	mov	x2, x0
   16e94:	mov	w1, #0xfffffffd            	// #-3
   16e98:	ldr	x0, [sp, #24]
   16e9c:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   16ea0:	mov	w0, #0xffffffff            	// #-1
   16ea4:	b	16f18 <gzclearerr@@ZLIB_1.2.0.2+0x888>
   16ea8:	ldr	x0, [sp, #48]
   16eac:	ldr	w0, [x0, #32]
   16eb0:	cmp	w0, #0x0
   16eb4:	b.eq	16ec4 <gzclearerr@@ZLIB_1.2.0.2+0x834>  // b.none
   16eb8:	ldr	w0, [sp, #60]
   16ebc:	cmp	w0, #0x1
   16ec0:	b.ne	16da4 <gzclearerr@@ZLIB_1.2.0.2+0x714>  // b.any
   16ec4:	ldr	x0, [sp, #48]
   16ec8:	ldr	w0, [x0, #32]
   16ecc:	ldr	w1, [sp, #44]
   16ed0:	sub	w1, w1, w0
   16ed4:	ldr	x0, [sp, #24]
   16ed8:	str	w1, [x0]
   16edc:	ldr	x0, [sp, #48]
   16ee0:	ldr	x1, [x0, #24]
   16ee4:	ldr	x0, [sp, #24]
   16ee8:	ldr	w0, [x0]
   16eec:	mov	w0, w0
   16ef0:	neg	x0, x0
   16ef4:	add	x1, x1, x0
   16ef8:	ldr	x0, [sp, #24]
   16efc:	str	x1, [x0, #8]
   16f00:	ldr	w0, [sp, #60]
   16f04:	cmp	w0, #0x1
   16f08:	b.ne	16f14 <gzclearerr@@ZLIB_1.2.0.2+0x884>  // b.any
   16f0c:	ldr	x0, [sp, #24]
   16f10:	str	wzr, [x0, #68]
   16f14:	mov	w0, #0x0                   	// #0
   16f18:	ldp	x29, x30, [sp], #64
   16f1c:	ret
   16f20:	stp	x29, x30, [sp, #-48]!
   16f24:	mov	x29, sp
   16f28:	str	x0, [sp, #24]
   16f2c:	ldr	x0, [sp, #24]
   16f30:	add	x0, x0, #0x78
   16f34:	str	x0, [sp, #40]
   16f38:	ldr	x0, [sp, #24]
   16f3c:	ldr	w0, [x0, #68]
   16f40:	cmp	w0, #0x2
   16f44:	b.eq	16fe4 <gzclearerr@@ZLIB_1.2.0.2+0x954>  // b.none
   16f48:	cmp	w0, #0x2
   16f4c:	b.gt	17024 <gzclearerr@@ZLIB_1.2.0.2+0x994>
   16f50:	cmp	w0, #0x0
   16f54:	b.eq	16f64 <gzclearerr@@ZLIB_1.2.0.2+0x8d4>  // b.none
   16f58:	cmp	w0, #0x1
   16f5c:	b.eq	16f94 <gzclearerr@@ZLIB_1.2.0.2+0x904>  // b.none
   16f60:	b	17024 <gzclearerr@@ZLIB_1.2.0.2+0x994>
   16f64:	ldr	x0, [sp, #24]
   16f68:	bl	16ad0 <gzclearerr@@ZLIB_1.2.0.2+0x440>
   16f6c:	cmn	w0, #0x1
   16f70:	b.ne	16f7c <gzclearerr@@ZLIB_1.2.0.2+0x8ec>  // b.any
   16f74:	mov	w0, #0xffffffff            	// #-1
   16f78:	b	17058 <gzclearerr@@ZLIB_1.2.0.2+0x9c8>
   16f7c:	ldr	x0, [sp, #24]
   16f80:	ldr	w0, [x0, #68]
   16f84:	cmp	w0, #0x0
   16f88:	b.ne	17020 <gzclearerr@@ZLIB_1.2.0.2+0x990>  // b.any
   16f8c:	mov	w0, #0x0                   	// #0
   16f90:	b	17058 <gzclearerr@@ZLIB_1.2.0.2+0x9c8>
   16f94:	ldr	x0, [sp, #24]
   16f98:	ldr	x1, [x0, #56]
   16f9c:	ldr	x0, [sp, #24]
   16fa0:	ldr	w0, [x0, #40]
   16fa4:	lsl	w0, w0, #1
   16fa8:	ldr	x2, [sp, #24]
   16fac:	mov	x3, x2
   16fb0:	mov	w2, w0
   16fb4:	ldr	x0, [sp, #24]
   16fb8:	bl	16870 <gzclearerr@@ZLIB_1.2.0.2+0x1e0>
   16fbc:	cmn	w0, #0x1
   16fc0:	b.ne	16fcc <gzclearerr@@ZLIB_1.2.0.2+0x93c>  // b.any
   16fc4:	mov	w0, #0xffffffff            	// #-1
   16fc8:	b	17058 <gzclearerr@@ZLIB_1.2.0.2+0x9c8>
   16fcc:	ldr	x0, [sp, #24]
   16fd0:	ldr	x1, [x0, #56]
   16fd4:	ldr	x0, [sp, #24]
   16fd8:	str	x1, [x0, #8]
   16fdc:	mov	w0, #0x0                   	// #0
   16fe0:	b	17058 <gzclearerr@@ZLIB_1.2.0.2+0x9c8>
   16fe4:	ldr	x0, [sp, #24]
   16fe8:	ldr	w0, [x0, #40]
   16fec:	lsl	w1, w0, #1
   16ff0:	ldr	x0, [sp, #40]
   16ff4:	str	w1, [x0, #32]
   16ff8:	ldr	x0, [sp, #24]
   16ffc:	ldr	x1, [x0, #56]
   17000:	ldr	x0, [sp, #40]
   17004:	str	x1, [x0, #24]
   17008:	ldr	x0, [sp, #24]
   1700c:	bl	16d7c <gzclearerr@@ZLIB_1.2.0.2+0x6ec>
   17010:	cmn	w0, #0x1
   17014:	b.ne	17024 <gzclearerr@@ZLIB_1.2.0.2+0x994>  // b.any
   17018:	mov	w0, #0xffffffff            	// #-1
   1701c:	b	17058 <gzclearerr@@ZLIB_1.2.0.2+0x9c8>
   17020:	nop
   17024:	ldr	x0, [sp, #24]
   17028:	ldr	w0, [x0]
   1702c:	cmp	w0, #0x0
   17030:	b.ne	17054 <gzclearerr@@ZLIB_1.2.0.2+0x9c4>  // b.any
   17034:	ldr	x0, [sp, #24]
   17038:	ldr	w0, [x0, #80]
   1703c:	cmp	w0, #0x0
   17040:	b.eq	16f38 <gzclearerr@@ZLIB_1.2.0.2+0x8a8>  // b.none
   17044:	ldr	x0, [sp, #40]
   17048:	ldr	w0, [x0, #8]
   1704c:	cmp	w0, #0x0
   17050:	b.ne	16f38 <gzclearerr@@ZLIB_1.2.0.2+0x8a8>  // b.any
   17054:	mov	w0, #0x0                   	// #0
   17058:	ldp	x29, x30, [sp], #48
   1705c:	ret
   17060:	stp	x29, x30, [sp, #-48]!
   17064:	mov	x29, sp
   17068:	str	x0, [sp, #24]
   1706c:	str	x1, [sp, #16]
   17070:	b	17144 <gzclearerr@@ZLIB_1.2.0.2+0xab4>
   17074:	ldr	x0, [sp, #24]
   17078:	ldr	w0, [x0]
   1707c:	cmp	w0, #0x0
   17080:	b.eq	1710c <gzclearerr@@ZLIB_1.2.0.2+0xa7c>  // b.none
   17084:	ldr	x0, [sp, #24]
   17088:	ldr	w0, [x0]
   1708c:	mov	w0, w0
   17090:	ldr	x1, [sp, #16]
   17094:	cmp	x1, x0
   17098:	b.ge	170a4 <gzclearerr@@ZLIB_1.2.0.2+0xa14>  // b.tcont
   1709c:	ldr	x0, [sp, #16]
   170a0:	b	170ac <gzclearerr@@ZLIB_1.2.0.2+0xa1c>
   170a4:	ldr	x0, [sp, #24]
   170a8:	ldr	w0, [x0]
   170ac:	str	w0, [sp, #44]
   170b0:	ldr	x0, [sp, #24]
   170b4:	ldr	w1, [x0]
   170b8:	ldr	w0, [sp, #44]
   170bc:	sub	w1, w1, w0
   170c0:	ldr	x0, [sp, #24]
   170c4:	str	w1, [x0]
   170c8:	ldr	x0, [sp, #24]
   170cc:	ldr	x1, [x0, #8]
   170d0:	ldr	w0, [sp, #44]
   170d4:	add	x1, x1, x0
   170d8:	ldr	x0, [sp, #24]
   170dc:	str	x1, [x0, #8]
   170e0:	ldr	x0, [sp, #24]
   170e4:	ldr	x1, [x0, #16]
   170e8:	ldr	w0, [sp, #44]
   170ec:	add	x1, x1, x0
   170f0:	ldr	x0, [sp, #24]
   170f4:	str	x1, [x0, #16]
   170f8:	ldr	w0, [sp, #44]
   170fc:	ldr	x1, [sp, #16]
   17100:	sub	x0, x1, x0
   17104:	str	x0, [sp, #16]
   17108:	b	17144 <gzclearerr@@ZLIB_1.2.0.2+0xab4>
   1710c:	ldr	x0, [sp, #24]
   17110:	ldr	w0, [x0, #80]
   17114:	cmp	w0, #0x0
   17118:	b.eq	1712c <gzclearerr@@ZLIB_1.2.0.2+0xa9c>  // b.none
   1711c:	ldr	x0, [sp, #24]
   17120:	ldr	w0, [x0, #128]
   17124:	cmp	w0, #0x0
   17128:	b.eq	17150 <gzclearerr@@ZLIB_1.2.0.2+0xac0>  // b.none
   1712c:	ldr	x0, [sp, #24]
   17130:	bl	16f20 <gzclearerr@@ZLIB_1.2.0.2+0x890>
   17134:	cmn	w0, #0x1
   17138:	b.ne	17144 <gzclearerr@@ZLIB_1.2.0.2+0xab4>  // b.any
   1713c:	mov	w0, #0xffffffff            	// #-1
   17140:	b	17154 <gzclearerr@@ZLIB_1.2.0.2+0xac4>
   17144:	ldr	x0, [sp, #16]
   17148:	cmp	x0, #0x0
   1714c:	b.ne	17074 <gzclearerr@@ZLIB_1.2.0.2+0x9e4>  // b.any
   17150:	mov	w0, #0x0                   	// #0
   17154:	ldp	x29, x30, [sp], #48
   17158:	ret
   1715c:	stp	x29, x30, [sp, #-64]!
   17160:	mov	x29, sp
   17164:	str	x0, [sp, #40]
   17168:	str	x1, [sp, #32]
   1716c:	str	x2, [sp, #24]
   17170:	ldr	x0, [sp, #24]
   17174:	cmp	x0, #0x0
   17178:	b.ne	17184 <gzclearerr@@ZLIB_1.2.0.2+0xaf4>  // b.any
   1717c:	mov	x0, #0x0                   	// #0
   17180:	b	173d0 <gzclearerr@@ZLIB_1.2.0.2+0xd40>
   17184:	ldr	x0, [sp, #40]
   17188:	ldr	w0, [x0, #104]
   1718c:	cmp	w0, #0x0
   17190:	b.eq	171c0 <gzclearerr@@ZLIB_1.2.0.2+0xb30>  // b.none
   17194:	ldr	x0, [sp, #40]
   17198:	str	wzr, [x0, #104]
   1719c:	ldr	x0, [sp, #40]
   171a0:	ldr	x0, [x0, #96]
   171a4:	mov	x1, x0
   171a8:	ldr	x0, [sp, #40]
   171ac:	bl	17060 <gzclearerr@@ZLIB_1.2.0.2+0x9d0>
   171b0:	cmn	w0, #0x1
   171b4:	b.ne	171c0 <gzclearerr@@ZLIB_1.2.0.2+0xb30>  // b.any
   171b8:	mov	x0, #0x0                   	// #0
   171bc:	b	173d0 <gzclearerr@@ZLIB_1.2.0.2+0xd40>
   171c0:	str	xzr, [sp, #56]
   171c4:	mov	w0, #0xffffffff            	// #-1
   171c8:	str	w0, [sp, #52]
   171cc:	ldr	w0, [sp, #52]
   171d0:	mov	w0, w0
   171d4:	ldr	x1, [sp, #24]
   171d8:	cmp	x1, x0
   171dc:	b.cs	171e8 <gzclearerr@@ZLIB_1.2.0.2+0xb58>  // b.hs, b.nlast
   171e0:	ldr	x0, [sp, #24]
   171e4:	str	w0, [sp, #52]
   171e8:	ldr	x0, [sp, #40]
   171ec:	ldr	w0, [x0]
   171f0:	cmp	w0, #0x0
   171f4:	b.eq	17270 <gzclearerr@@ZLIB_1.2.0.2+0xbe0>  // b.none
   171f8:	ldr	x0, [sp, #40]
   171fc:	ldr	w1, [x0]
   17200:	ldr	w0, [sp, #52]
   17204:	cmp	w1, w0
   17208:	b.cs	17218 <gzclearerr@@ZLIB_1.2.0.2+0xb88>  // b.hs, b.nlast
   1720c:	ldr	x0, [sp, #40]
   17210:	ldr	w0, [x0]
   17214:	str	w0, [sp, #52]
   17218:	ldr	x0, [sp, #40]
   1721c:	ldr	x0, [x0, #8]
   17220:	ldr	w1, [sp, #52]
   17224:	mov	w1, w1
   17228:	mov	x2, x1
   1722c:	mov	x1, x0
   17230:	ldr	x0, [sp, #32]
   17234:	bl	23a0 <memcpy@plt>
   17238:	ldr	x0, [sp, #40]
   1723c:	ldr	x1, [x0, #8]
   17240:	ldr	w0, [sp, #52]
   17244:	mov	w0, w0
   17248:	add	x1, x1, x0
   1724c:	ldr	x0, [sp, #40]
   17250:	str	x1, [x0, #8]
   17254:	ldr	x0, [sp, #40]
   17258:	ldr	w1, [x0]
   1725c:	ldr	w0, [sp, #52]
   17260:	sub	w1, w1, w0
   17264:	ldr	x0, [sp, #40]
   17268:	str	w1, [x0]
   1726c:	b	17360 <gzclearerr@@ZLIB_1.2.0.2+0xcd0>
   17270:	ldr	x0, [sp, #40]
   17274:	ldr	w0, [x0, #80]
   17278:	cmp	w0, #0x0
   1727c:	b.eq	172a0 <gzclearerr@@ZLIB_1.2.0.2+0xc10>  // b.none
   17280:	ldr	x0, [sp, #40]
   17284:	ldr	w0, [x0, #128]
   17288:	cmp	w0, #0x0
   1728c:	b.ne	172a0 <gzclearerr@@ZLIB_1.2.0.2+0xc10>  // b.any
   17290:	ldr	x0, [sp, #40]
   17294:	mov	w1, #0x1                   	// #1
   17298:	str	w1, [x0, #84]
   1729c:	b	173cc <gzclearerr@@ZLIB_1.2.0.2+0xd3c>
   172a0:	ldr	x0, [sp, #40]
   172a4:	ldr	w0, [x0, #68]
   172a8:	cmp	w0, #0x0
   172ac:	b.eq	172c8 <gzclearerr@@ZLIB_1.2.0.2+0xc38>  // b.none
   172b0:	ldr	x0, [sp, #40]
   172b4:	ldr	w0, [x0, #40]
   172b8:	lsl	w1, w0, #1
   172bc:	ldr	w0, [sp, #52]
   172c0:	cmp	w1, w0
   172c4:	b.ls	172e0 <gzclearerr@@ZLIB_1.2.0.2+0xc50>  // b.plast
   172c8:	ldr	x0, [sp, #40]
   172cc:	bl	16f20 <gzclearerr@@ZLIB_1.2.0.2+0x890>
   172d0:	cmn	w0, #0x1
   172d4:	b.ne	173bc <gzclearerr@@ZLIB_1.2.0.2+0xd2c>  // b.any
   172d8:	mov	x0, #0x0                   	// #0
   172dc:	b	173d0 <gzclearerr@@ZLIB_1.2.0.2+0xd40>
   172e0:	ldr	x0, [sp, #40]
   172e4:	ldr	w0, [x0, #68]
   172e8:	cmp	w0, #0x1
   172ec:	b.ne	1731c <gzclearerr@@ZLIB_1.2.0.2+0xc8c>  // b.any
   172f0:	ldr	w0, [sp, #52]
   172f4:	add	x1, sp, #0x34
   172f8:	mov	x3, x1
   172fc:	mov	w2, w0
   17300:	ldr	x1, [sp, #32]
   17304:	ldr	x0, [sp, #40]
   17308:	bl	16870 <gzclearerr@@ZLIB_1.2.0.2+0x1e0>
   1730c:	cmn	w0, #0x1
   17310:	b.ne	17360 <gzclearerr@@ZLIB_1.2.0.2+0xcd0>  // b.any
   17314:	mov	x0, #0x0                   	// #0
   17318:	b	173d0 <gzclearerr@@ZLIB_1.2.0.2+0xd40>
   1731c:	ldr	w1, [sp, #52]
   17320:	ldr	x0, [sp, #40]
   17324:	str	w1, [x0, #152]
   17328:	ldr	x0, [sp, #40]
   1732c:	ldr	x1, [sp, #32]
   17330:	str	x1, [x0, #144]
   17334:	ldr	x0, [sp, #40]
   17338:	bl	16d7c <gzclearerr@@ZLIB_1.2.0.2+0x6ec>
   1733c:	cmn	w0, #0x1
   17340:	b.ne	1734c <gzclearerr@@ZLIB_1.2.0.2+0xcbc>  // b.any
   17344:	mov	x0, #0x0                   	// #0
   17348:	b	173d0 <gzclearerr@@ZLIB_1.2.0.2+0xd40>
   1734c:	ldr	x0, [sp, #40]
   17350:	ldr	w0, [x0]
   17354:	str	w0, [sp, #52]
   17358:	ldr	x0, [sp, #40]
   1735c:	str	wzr, [x0]
   17360:	ldr	w0, [sp, #52]
   17364:	mov	w0, w0
   17368:	ldr	x1, [sp, #24]
   1736c:	sub	x0, x1, x0
   17370:	str	x0, [sp, #24]
   17374:	ldr	w0, [sp, #52]
   17378:	mov	w0, w0
   1737c:	ldr	x1, [sp, #32]
   17380:	add	x0, x1, x0
   17384:	str	x0, [sp, #32]
   17388:	ldr	w0, [sp, #52]
   1738c:	mov	w0, w0
   17390:	ldr	x1, [sp, #56]
   17394:	add	x0, x1, x0
   17398:	str	x0, [sp, #56]
   1739c:	ldr	x0, [sp, #40]
   173a0:	ldr	x1, [x0, #16]
   173a4:	ldr	w0, [sp, #52]
   173a8:	mov	w0, w0
   173ac:	add	x1, x1, x0
   173b0:	ldr	x0, [sp, #40]
   173b4:	str	x1, [x0, #16]
   173b8:	b	173c0 <gzclearerr@@ZLIB_1.2.0.2+0xd30>
   173bc:	nop
   173c0:	ldr	x0, [sp, #24]
   173c4:	cmp	x0, #0x0
   173c8:	b.ne	171c4 <gzclearerr@@ZLIB_1.2.0.2+0xb34>  // b.any
   173cc:	ldr	x0, [sp, #56]
   173d0:	ldp	x29, x30, [sp], #64
   173d4:	ret

00000000000173d8 <gzread@@Base>:
   173d8:	stp	x29, x30, [sp, #-64]!
   173dc:	mov	x29, sp
   173e0:	str	x0, [sp, #40]
   173e4:	str	x1, [sp, #32]
   173e8:	str	w2, [sp, #28]
   173ec:	ldr	x0, [sp, #40]
   173f0:	cmp	x0, #0x0
   173f4:	b.ne	17400 <gzread@@Base+0x28>  // b.any
   173f8:	mov	w0, #0xffffffff            	// #-1
   173fc:	b	174bc <gzread@@Base+0xe4>
   17400:	ldr	x0, [sp, #40]
   17404:	str	x0, [sp, #56]
   17408:	ldr	x0, [sp, #56]
   1740c:	ldr	w1, [x0, #24]
   17410:	mov	w0, #0x1c4f                	// #7247
   17414:	cmp	w1, w0
   17418:	b.ne	1743c <gzread@@Base+0x64>  // b.any
   1741c:	ldr	x0, [sp, #56]
   17420:	ldr	w0, [x0, #108]
   17424:	cmp	w0, #0x0
   17428:	b.eq	17444 <gzread@@Base+0x6c>  // b.none
   1742c:	ldr	x0, [sp, #56]
   17430:	ldr	w0, [x0, #108]
   17434:	cmn	w0, #0x5
   17438:	b.eq	17444 <gzread@@Base+0x6c>  // b.none
   1743c:	mov	w0, #0xffffffff            	// #-1
   17440:	b	174bc <gzread@@Base+0xe4>
   17444:	ldr	w0, [sp, #28]
   17448:	cmp	w0, #0x0
   1744c:	b.ge	1746c <gzread@@Base+0x94>  // b.tcont
   17450:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   17454:	add	x2, x0, #0x260
   17458:	mov	w1, #0xfffffffe            	// #-2
   1745c:	ldr	x0, [sp, #56]
   17460:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   17464:	mov	w0, #0xffffffff            	// #-1
   17468:	b	174bc <gzread@@Base+0xe4>
   1746c:	ldr	w0, [sp, #28]
   17470:	mov	x2, x0
   17474:	ldr	x1, [sp, #32]
   17478:	ldr	x0, [sp, #56]
   1747c:	bl	1715c <gzclearerr@@ZLIB_1.2.0.2+0xacc>
   17480:	str	w0, [sp, #28]
   17484:	ldr	w0, [sp, #28]
   17488:	cmp	w0, #0x0
   1748c:	b.ne	174b8 <gzread@@Base+0xe0>  // b.any
   17490:	ldr	x0, [sp, #56]
   17494:	ldr	w0, [x0, #108]
   17498:	cmp	w0, #0x0
   1749c:	b.eq	174b8 <gzread@@Base+0xe0>  // b.none
   174a0:	ldr	x0, [sp, #56]
   174a4:	ldr	w0, [x0, #108]
   174a8:	cmn	w0, #0x5
   174ac:	b.eq	174b8 <gzread@@Base+0xe0>  // b.none
   174b0:	mov	w0, #0xffffffff            	// #-1
   174b4:	b	174bc <gzread@@Base+0xe4>
   174b8:	ldr	w0, [sp, #28]
   174bc:	ldp	x29, x30, [sp], #64
   174c0:	ret

00000000000174c4 <gzfread@@ZLIB_1.2.9>:
   174c4:	stp	x29, x30, [sp, #-64]!
   174c8:	mov	x29, sp
   174cc:	str	x0, [sp, #40]
   174d0:	str	x1, [sp, #32]
   174d4:	str	x2, [sp, #24]
   174d8:	str	x3, [sp, #16]
   174dc:	ldr	x0, [sp, #16]
   174e0:	cmp	x0, #0x0
   174e4:	b.ne	174f0 <gzfread@@ZLIB_1.2.9+0x2c>  // b.any
   174e8:	mov	x0, #0x0                   	// #0
   174ec:	b	175b4 <gzfread@@ZLIB_1.2.9+0xf0>
   174f0:	ldr	x0, [sp, #16]
   174f4:	str	x0, [sp, #56]
   174f8:	ldr	x0, [sp, #56]
   174fc:	ldr	w1, [x0, #24]
   17500:	mov	w0, #0x1c4f                	// #7247
   17504:	cmp	w1, w0
   17508:	b.ne	1752c <gzfread@@ZLIB_1.2.9+0x68>  // b.any
   1750c:	ldr	x0, [sp, #56]
   17510:	ldr	w0, [x0, #108]
   17514:	cmp	w0, #0x0
   17518:	b.eq	17534 <gzfread@@ZLIB_1.2.9+0x70>  // b.none
   1751c:	ldr	x0, [sp, #56]
   17520:	ldr	w0, [x0, #108]
   17524:	cmn	w0, #0x5
   17528:	b.eq	17534 <gzfread@@ZLIB_1.2.9+0x70>  // b.none
   1752c:	mov	x0, #0x0                   	// #0
   17530:	b	175b4 <gzfread@@ZLIB_1.2.9+0xf0>
   17534:	ldr	x1, [sp, #24]
   17538:	ldr	x0, [sp, #32]
   1753c:	mul	x0, x1, x0
   17540:	str	x0, [sp, #48]
   17544:	ldr	x0, [sp, #32]
   17548:	cmp	x0, #0x0
   1754c:	b.eq	17584 <gzfread@@ZLIB_1.2.9+0xc0>  // b.none
   17550:	ldr	x1, [sp, #48]
   17554:	ldr	x0, [sp, #32]
   17558:	udiv	x0, x1, x0
   1755c:	ldr	x1, [sp, #24]
   17560:	cmp	x1, x0
   17564:	b.eq	17584 <gzfread@@ZLIB_1.2.9+0xc0>  // b.none
   17568:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   1756c:	add	x2, x0, #0x280
   17570:	mov	w1, #0xfffffffe            	// #-2
   17574:	ldr	x0, [sp, #56]
   17578:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   1757c:	mov	x0, #0x0                   	// #0
   17580:	b	175b4 <gzfread@@ZLIB_1.2.9+0xf0>
   17584:	ldr	x0, [sp, #48]
   17588:	cmp	x0, #0x0
   1758c:	b.eq	175b0 <gzfread@@ZLIB_1.2.9+0xec>  // b.none
   17590:	ldr	x2, [sp, #48]
   17594:	ldr	x1, [sp, #40]
   17598:	ldr	x0, [sp, #56]
   1759c:	bl	1715c <gzclearerr@@ZLIB_1.2.0.2+0xacc>
   175a0:	mov	x1, x0
   175a4:	ldr	x0, [sp, #32]
   175a8:	udiv	x0, x1, x0
   175ac:	b	175b4 <gzfread@@ZLIB_1.2.9+0xf0>
   175b0:	mov	x0, #0x0                   	// #0
   175b4:	ldp	x29, x30, [sp], #64
   175b8:	ret

00000000000175bc <gzgetc@@Base>:
   175bc:	stp	x29, x30, [sp, #-48]!
   175c0:	mov	x29, sp
   175c4:	str	x0, [sp, #24]
   175c8:	ldr	x0, [sp, #24]
   175cc:	cmp	x0, #0x0
   175d0:	b.ne	175dc <gzgetc@@Base+0x20>  // b.any
   175d4:	mov	w0, #0xffffffff            	// #-1
   175d8:	b	176a4 <gzgetc@@Base+0xe8>
   175dc:	ldr	x0, [sp, #24]
   175e0:	str	x0, [sp, #40]
   175e4:	ldr	x0, [sp, #40]
   175e8:	ldr	w1, [x0, #24]
   175ec:	mov	w0, #0x1c4f                	// #7247
   175f0:	cmp	w1, w0
   175f4:	b.ne	17618 <gzgetc@@Base+0x5c>  // b.any
   175f8:	ldr	x0, [sp, #40]
   175fc:	ldr	w0, [x0, #108]
   17600:	cmp	w0, #0x0
   17604:	b.eq	17620 <gzgetc@@Base+0x64>  // b.none
   17608:	ldr	x0, [sp, #40]
   1760c:	ldr	w0, [x0, #108]
   17610:	cmn	w0, #0x5
   17614:	b.eq	17620 <gzgetc@@Base+0x64>  // b.none
   17618:	mov	w0, #0xffffffff            	// #-1
   1761c:	b	176a4 <gzgetc@@Base+0xe8>
   17620:	ldr	x0, [sp, #40]
   17624:	ldr	w0, [x0]
   17628:	cmp	w0, #0x0
   1762c:	b.eq	17674 <gzgetc@@Base+0xb8>  // b.none
   17630:	ldr	x0, [sp, #40]
   17634:	ldr	w0, [x0]
   17638:	sub	w1, w0, #0x1
   1763c:	ldr	x0, [sp, #40]
   17640:	str	w1, [x0]
   17644:	ldr	x0, [sp, #40]
   17648:	ldr	x0, [x0, #16]
   1764c:	add	x1, x0, #0x1
   17650:	ldr	x0, [sp, #40]
   17654:	str	x1, [x0, #16]
   17658:	ldr	x0, [sp, #40]
   1765c:	ldr	x0, [x0, #8]
   17660:	add	x2, x0, #0x1
   17664:	ldr	x1, [sp, #40]
   17668:	str	x2, [x1, #8]
   1766c:	ldrb	w0, [x0]
   17670:	b	176a4 <gzgetc@@Base+0xe8>
   17674:	add	x0, sp, #0x20
   17678:	mov	x2, #0x1                   	// #1
   1767c:	mov	x1, x0
   17680:	ldr	x0, [sp, #40]
   17684:	bl	1715c <gzclearerr@@ZLIB_1.2.0.2+0xacc>
   17688:	str	w0, [sp, #36]
   1768c:	ldr	w0, [sp, #36]
   17690:	cmp	w0, #0x0
   17694:	b.le	176a0 <gzgetc@@Base+0xe4>
   17698:	ldrb	w0, [sp, #32]
   1769c:	b	176a4 <gzgetc@@Base+0xe8>
   176a0:	mov	w0, #0xffffffff            	// #-1
   176a4:	ldp	x29, x30, [sp], #48
   176a8:	ret

00000000000176ac <gzgetc_@@ZLIB_1.2.5.2>:
   176ac:	stp	x29, x30, [sp, #-32]!
   176b0:	mov	x29, sp
   176b4:	str	x0, [sp, #24]
   176b8:	ldr	x0, [sp, #24]
   176bc:	bl	2410 <gzgetc@plt>
   176c0:	ldp	x29, x30, [sp], #32
   176c4:	ret

00000000000176c8 <gzungetc@@ZLIB_1.2.0.2>:
   176c8:	stp	x29, x30, [sp, #-64]!
   176cc:	mov	x29, sp
   176d0:	str	w0, [sp, #28]
   176d4:	str	x1, [sp, #16]
   176d8:	ldr	x0, [sp, #16]
   176dc:	cmp	x0, #0x0
   176e0:	b.ne	176ec <gzungetc@@ZLIB_1.2.0.2+0x24>  // b.any
   176e4:	mov	w0, #0xffffffff            	// #-1
   176e8:	b	17930 <gzungetc@@ZLIB_1.2.0.2+0x268>
   176ec:	ldr	x0, [sp, #16]
   176f0:	str	x0, [sp, #40]
   176f4:	ldr	x0, [sp, #40]
   176f8:	ldr	w1, [x0, #24]
   176fc:	mov	w0, #0x1c4f                	// #7247
   17700:	cmp	w1, w0
   17704:	b.ne	17728 <gzungetc@@ZLIB_1.2.0.2+0x60>  // b.any
   17708:	ldr	x0, [sp, #40]
   1770c:	ldr	w0, [x0, #108]
   17710:	cmp	w0, #0x0
   17714:	b.eq	17730 <gzungetc@@ZLIB_1.2.0.2+0x68>  // b.none
   17718:	ldr	x0, [sp, #40]
   1771c:	ldr	w0, [x0, #108]
   17720:	cmn	w0, #0x5
   17724:	b.eq	17730 <gzungetc@@ZLIB_1.2.0.2+0x68>  // b.none
   17728:	mov	w0, #0xffffffff            	// #-1
   1772c:	b	17930 <gzungetc@@ZLIB_1.2.0.2+0x268>
   17730:	ldr	x0, [sp, #40]
   17734:	ldr	w0, [x0, #104]
   17738:	cmp	w0, #0x0
   1773c:	b.eq	1776c <gzungetc@@ZLIB_1.2.0.2+0xa4>  // b.none
   17740:	ldr	x0, [sp, #40]
   17744:	str	wzr, [x0, #104]
   17748:	ldr	x0, [sp, #40]
   1774c:	ldr	x0, [x0, #96]
   17750:	mov	x1, x0
   17754:	ldr	x0, [sp, #40]
   17758:	bl	17060 <gzclearerr@@ZLIB_1.2.0.2+0x9d0>
   1775c:	cmn	w0, #0x1
   17760:	b.ne	1776c <gzungetc@@ZLIB_1.2.0.2+0xa4>  // b.any
   17764:	mov	w0, #0xffffffff            	// #-1
   17768:	b	17930 <gzungetc@@ZLIB_1.2.0.2+0x268>
   1776c:	ldr	w0, [sp, #28]
   17770:	cmp	w0, #0x0
   17774:	b.ge	17780 <gzungetc@@ZLIB_1.2.0.2+0xb8>  // b.tcont
   17778:	mov	w0, #0xffffffff            	// #-1
   1777c:	b	17930 <gzungetc@@ZLIB_1.2.0.2+0x268>
   17780:	ldr	x0, [sp, #40]
   17784:	ldr	w0, [x0]
   17788:	cmp	w0, #0x0
   1778c:	b.ne	177fc <gzungetc@@ZLIB_1.2.0.2+0x134>  // b.any
   17790:	ldr	x0, [sp, #40]
   17794:	mov	w1, #0x1                   	// #1
   17798:	str	w1, [x0]
   1779c:	ldr	x0, [sp, #40]
   177a0:	ldr	x1, [x0, #56]
   177a4:	ldr	x0, [sp, #40]
   177a8:	ldr	w0, [x0, #40]
   177ac:	lsl	w0, w0, #1
   177b0:	mov	w0, w0
   177b4:	sub	x0, x0, #0x1
   177b8:	add	x1, x1, x0
   177bc:	ldr	x0, [sp, #40]
   177c0:	str	x1, [x0, #8]
   177c4:	ldr	x0, [sp, #40]
   177c8:	ldr	x0, [x0, #8]
   177cc:	ldr	w1, [sp, #28]
   177d0:	and	w1, w1, #0xff
   177d4:	strb	w1, [x0]
   177d8:	ldr	x0, [sp, #40]
   177dc:	ldr	x0, [x0, #16]
   177e0:	sub	x1, x0, #0x1
   177e4:	ldr	x0, [sp, #40]
   177e8:	str	x1, [x0, #16]
   177ec:	ldr	x0, [sp, #40]
   177f0:	str	wzr, [x0, #84]
   177f4:	ldr	w0, [sp, #28]
   177f8:	b	17930 <gzungetc@@ZLIB_1.2.0.2+0x268>
   177fc:	ldr	x0, [sp, #40]
   17800:	ldr	w1, [x0]
   17804:	ldr	x0, [sp, #40]
   17808:	ldr	w0, [x0, #40]
   1780c:	lsl	w0, w0, #1
   17810:	cmp	w1, w0
   17814:	b.ne	17834 <gzungetc@@ZLIB_1.2.0.2+0x16c>  // b.any
   17818:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   1781c:	add	x2, x0, #0x2a8
   17820:	mov	w1, #0xfffffffd            	// #-3
   17824:	ldr	x0, [sp, #40]
   17828:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   1782c:	mov	w0, #0xffffffff            	// #-1
   17830:	b	17930 <gzungetc@@ZLIB_1.2.0.2+0x268>
   17834:	ldr	x0, [sp, #40]
   17838:	ldr	x1, [x0, #8]
   1783c:	ldr	x0, [sp, #40]
   17840:	ldr	x0, [x0, #56]
   17844:	cmp	x1, x0
   17848:	b.ne	178d4 <gzungetc@@ZLIB_1.2.0.2+0x20c>  // b.any
   1784c:	ldr	x0, [sp, #40]
   17850:	ldr	x1, [x0, #56]
   17854:	ldr	x0, [sp, #40]
   17858:	ldr	w0, [x0]
   1785c:	mov	w0, w0
   17860:	add	x0, x1, x0
   17864:	str	x0, [sp, #56]
   17868:	ldr	x0, [sp, #40]
   1786c:	ldr	x1, [x0, #56]
   17870:	ldr	x0, [sp, #40]
   17874:	ldr	w0, [x0, #40]
   17878:	lsl	w0, w0, #1
   1787c:	mov	w0, w0
   17880:	add	x0, x1, x0
   17884:	str	x0, [sp, #48]
   17888:	b	178b4 <gzungetc@@ZLIB_1.2.0.2+0x1ec>
   1788c:	ldr	x0, [sp, #56]
   17890:	sub	x0, x0, #0x1
   17894:	str	x0, [sp, #56]
   17898:	ldr	x0, [sp, #48]
   1789c:	sub	x0, x0, #0x1
   178a0:	str	x0, [sp, #48]
   178a4:	ldr	x0, [sp, #56]
   178a8:	ldrb	w1, [x0]
   178ac:	ldr	x0, [sp, #48]
   178b0:	strb	w1, [x0]
   178b4:	ldr	x0, [sp, #40]
   178b8:	ldr	x0, [x0, #56]
   178bc:	ldr	x1, [sp, #56]
   178c0:	cmp	x1, x0
   178c4:	b.hi	1788c <gzungetc@@ZLIB_1.2.0.2+0x1c4>  // b.pmore
   178c8:	ldr	x0, [sp, #40]
   178cc:	ldr	x1, [sp, #48]
   178d0:	str	x1, [x0, #8]
   178d4:	ldr	x0, [sp, #40]
   178d8:	ldr	w0, [x0]
   178dc:	add	w1, w0, #0x1
   178e0:	ldr	x0, [sp, #40]
   178e4:	str	w1, [x0]
   178e8:	ldr	x0, [sp, #40]
   178ec:	ldr	x0, [x0, #8]
   178f0:	sub	x1, x0, #0x1
   178f4:	ldr	x0, [sp, #40]
   178f8:	str	x1, [x0, #8]
   178fc:	ldr	x0, [sp, #40]
   17900:	ldr	x0, [x0, #8]
   17904:	ldr	w1, [sp, #28]
   17908:	and	w1, w1, #0xff
   1790c:	strb	w1, [x0]
   17910:	ldr	x0, [sp, #40]
   17914:	ldr	x0, [x0, #16]
   17918:	sub	x1, x0, #0x1
   1791c:	ldr	x0, [sp, #40]
   17920:	str	x1, [x0, #16]
   17924:	ldr	x0, [sp, #40]
   17928:	str	wzr, [x0, #84]
   1792c:	ldr	w0, [sp, #28]
   17930:	ldp	x29, x30, [sp], #64
   17934:	ret

0000000000017938 <gzgets@@Base>:
   17938:	stp	x29, x30, [sp, #-80]!
   1793c:	mov	x29, sp
   17940:	str	x0, [sp, #40]
   17944:	str	x1, [sp, #32]
   17948:	str	w2, [sp, #28]
   1794c:	ldr	x0, [sp, #40]
   17950:	cmp	x0, #0x0
   17954:	b.eq	17970 <gzgets@@Base+0x38>  // b.none
   17958:	ldr	x0, [sp, #32]
   1795c:	cmp	x0, #0x0
   17960:	b.eq	17970 <gzgets@@Base+0x38>  // b.none
   17964:	ldr	w0, [sp, #28]
   17968:	cmp	w0, #0x0
   1796c:	b.gt	17978 <gzgets@@Base+0x40>
   17970:	mov	x0, #0x0                   	// #0
   17974:	b	17b7c <gzgets@@Base+0x244>
   17978:	ldr	x0, [sp, #40]
   1797c:	str	x0, [sp, #64]
   17980:	ldr	x0, [sp, #64]
   17984:	ldr	w1, [x0, #24]
   17988:	mov	w0, #0x1c4f                	// #7247
   1798c:	cmp	w1, w0
   17990:	b.ne	179b4 <gzgets@@Base+0x7c>  // b.any
   17994:	ldr	x0, [sp, #64]
   17998:	ldr	w0, [x0, #108]
   1799c:	cmp	w0, #0x0
   179a0:	b.eq	179bc <gzgets@@Base+0x84>  // b.none
   179a4:	ldr	x0, [sp, #64]
   179a8:	ldr	w0, [x0, #108]
   179ac:	cmn	w0, #0x5
   179b0:	b.eq	179bc <gzgets@@Base+0x84>  // b.none
   179b4:	mov	x0, #0x0                   	// #0
   179b8:	b	17b7c <gzgets@@Base+0x244>
   179bc:	ldr	x0, [sp, #64]
   179c0:	ldr	w0, [x0, #104]
   179c4:	cmp	w0, #0x0
   179c8:	b.eq	179f8 <gzgets@@Base+0xc0>  // b.none
   179cc:	ldr	x0, [sp, #64]
   179d0:	str	wzr, [x0, #104]
   179d4:	ldr	x0, [sp, #64]
   179d8:	ldr	x0, [x0, #96]
   179dc:	mov	x1, x0
   179e0:	ldr	x0, [sp, #64]
   179e4:	bl	17060 <gzclearerr@@ZLIB_1.2.0.2+0x9d0>
   179e8:	cmn	w0, #0x1
   179ec:	b.ne	179f8 <gzgets@@Base+0xc0>  // b.any
   179f0:	mov	x0, #0x0                   	// #0
   179f4:	b	17b7c <gzgets@@Base+0x244>
   179f8:	ldr	x0, [sp, #32]
   179fc:	str	x0, [sp, #56]
   17a00:	ldr	w0, [sp, #28]
   17a04:	sub	w0, w0, #0x1
   17a08:	str	w0, [sp, #76]
   17a0c:	ldr	w0, [sp, #76]
   17a10:	cmp	w0, #0x0
   17a14:	b.eq	17b58 <gzgets@@Base+0x220>  // b.none
   17a18:	ldr	x0, [sp, #64]
   17a1c:	ldr	w0, [x0]
   17a20:	cmp	w0, #0x0
   17a24:	b.ne	17a40 <gzgets@@Base+0x108>  // b.any
   17a28:	ldr	x0, [sp, #64]
   17a2c:	bl	16f20 <gzclearerr@@ZLIB_1.2.0.2+0x890>
   17a30:	cmn	w0, #0x1
   17a34:	b.ne	17a40 <gzgets@@Base+0x108>  // b.any
   17a38:	mov	x0, #0x0                   	// #0
   17a3c:	b	17b7c <gzgets@@Base+0x244>
   17a40:	ldr	x0, [sp, #64]
   17a44:	ldr	w0, [x0]
   17a48:	cmp	w0, #0x0
   17a4c:	b.ne	17a60 <gzgets@@Base+0x128>  // b.any
   17a50:	ldr	x0, [sp, #64]
   17a54:	mov	w1, #0x1                   	// #1
   17a58:	str	w1, [x0, #84]
   17a5c:	b	17b58 <gzgets@@Base+0x220>
   17a60:	ldr	x0, [sp, #64]
   17a64:	ldr	w0, [x0]
   17a68:	ldr	w2, [sp, #76]
   17a6c:	ldr	w1, [sp, #76]
   17a70:	cmp	w2, w0
   17a74:	csel	w0, w1, w0, ls  // ls = plast
   17a78:	str	w0, [sp, #72]
   17a7c:	ldr	x0, [sp, #64]
   17a80:	ldr	x0, [x0, #8]
   17a84:	ldr	w1, [sp, #72]
   17a88:	mov	x2, x1
   17a8c:	mov	w1, #0xa                   	// #10
   17a90:	bl	25f0 <memchr@plt>
   17a94:	str	x0, [sp, #48]
   17a98:	ldr	x0, [sp, #48]
   17a9c:	cmp	x0, #0x0
   17aa0:	b.eq	17abc <gzgets@@Base+0x184>  // b.none
   17aa4:	ldr	x0, [sp, #64]
   17aa8:	ldr	x0, [x0, #8]
   17aac:	ldr	x1, [sp, #48]
   17ab0:	sub	x0, x1, x0
   17ab4:	add	w0, w0, #0x1
   17ab8:	str	w0, [sp, #72]
   17abc:	ldr	x0, [sp, #64]
   17ac0:	ldr	x0, [x0, #8]
   17ac4:	ldr	w1, [sp, #72]
   17ac8:	mov	x2, x1
   17acc:	mov	x1, x0
   17ad0:	ldr	x0, [sp, #32]
   17ad4:	bl	23a0 <memcpy@plt>
   17ad8:	ldr	x0, [sp, #64]
   17adc:	ldr	w1, [x0]
   17ae0:	ldr	w0, [sp, #72]
   17ae4:	sub	w1, w1, w0
   17ae8:	ldr	x0, [sp, #64]
   17aec:	str	w1, [x0]
   17af0:	ldr	x0, [sp, #64]
   17af4:	ldr	x1, [x0, #8]
   17af8:	ldr	w0, [sp, #72]
   17afc:	add	x1, x1, x0
   17b00:	ldr	x0, [sp, #64]
   17b04:	str	x1, [x0, #8]
   17b08:	ldr	x0, [sp, #64]
   17b0c:	ldr	x1, [x0, #16]
   17b10:	ldr	w0, [sp, #72]
   17b14:	add	x1, x1, x0
   17b18:	ldr	x0, [sp, #64]
   17b1c:	str	x1, [x0, #16]
   17b20:	ldr	w1, [sp, #76]
   17b24:	ldr	w0, [sp, #72]
   17b28:	sub	w0, w1, w0
   17b2c:	str	w0, [sp, #76]
   17b30:	ldr	w0, [sp, #72]
   17b34:	ldr	x1, [sp, #32]
   17b38:	add	x0, x1, x0
   17b3c:	str	x0, [sp, #32]
   17b40:	ldr	w0, [sp, #76]
   17b44:	cmp	w0, #0x0
   17b48:	b.eq	17b58 <gzgets@@Base+0x220>  // b.none
   17b4c:	ldr	x0, [sp, #48]
   17b50:	cmp	x0, #0x0
   17b54:	b.eq	17a18 <gzgets@@Base+0xe0>  // b.none
   17b58:	ldr	x1, [sp, #32]
   17b5c:	ldr	x0, [sp, #56]
   17b60:	cmp	x1, x0
   17b64:	b.ne	17b70 <gzgets@@Base+0x238>  // b.any
   17b68:	mov	x0, #0x0                   	// #0
   17b6c:	b	17b7c <gzgets@@Base+0x244>
   17b70:	ldr	x0, [sp, #32]
   17b74:	strb	wzr, [x0]
   17b78:	ldr	x0, [sp, #56]
   17b7c:	ldp	x29, x30, [sp], #80
   17b80:	ret

0000000000017b84 <gzdirect@@ZLIB_1.2.2.3>:
   17b84:	stp	x29, x30, [sp, #-48]!
   17b88:	mov	x29, sp
   17b8c:	str	x0, [sp, #24]
   17b90:	ldr	x0, [sp, #24]
   17b94:	cmp	x0, #0x0
   17b98:	b.ne	17ba4 <gzdirect@@ZLIB_1.2.2.3+0x20>  // b.any
   17b9c:	mov	w0, #0x0                   	// #0
   17ba0:	b	17bf0 <gzdirect@@ZLIB_1.2.2.3+0x6c>
   17ba4:	ldr	x0, [sp, #24]
   17ba8:	str	x0, [sp, #40]
   17bac:	ldr	x0, [sp, #40]
   17bb0:	ldr	w1, [x0, #24]
   17bb4:	mov	w0, #0x1c4f                	// #7247
   17bb8:	cmp	w1, w0
   17bbc:	b.ne	17be8 <gzdirect@@ZLIB_1.2.2.3+0x64>  // b.any
   17bc0:	ldr	x0, [sp, #40]
   17bc4:	ldr	w0, [x0, #68]
   17bc8:	cmp	w0, #0x0
   17bcc:	b.ne	17be8 <gzdirect@@ZLIB_1.2.2.3+0x64>  // b.any
   17bd0:	ldr	x0, [sp, #40]
   17bd4:	ldr	w0, [x0]
   17bd8:	cmp	w0, #0x0
   17bdc:	b.ne	17be8 <gzdirect@@ZLIB_1.2.2.3+0x64>  // b.any
   17be0:	ldr	x0, [sp, #40]
   17be4:	bl	16ad0 <gzclearerr@@ZLIB_1.2.0.2+0x440>
   17be8:	ldr	x0, [sp, #40]
   17bec:	ldr	w0, [x0, #64]
   17bf0:	ldp	x29, x30, [sp], #48
   17bf4:	ret

0000000000017bf8 <gzclose_r@@ZLIB_1.2.3.5>:
   17bf8:	stp	x29, x30, [sp, #-48]!
   17bfc:	mov	x29, sp
   17c00:	str	x0, [sp, #24]
   17c04:	ldr	x0, [sp, #24]
   17c08:	cmp	x0, #0x0
   17c0c:	b.ne	17c18 <gzclose_r@@ZLIB_1.2.3.5+0x20>  // b.any
   17c10:	mov	w0, #0xfffffffe            	// #-2
   17c14:	b	17cdc <gzclose_r@@ZLIB_1.2.3.5+0xe4>
   17c18:	ldr	x0, [sp, #24]
   17c1c:	str	x0, [sp, #40]
   17c20:	ldr	x0, [sp, #40]
   17c24:	ldr	w1, [x0, #24]
   17c28:	mov	w0, #0x1c4f                	// #7247
   17c2c:	cmp	w1, w0
   17c30:	b.eq	17c3c <gzclose_r@@ZLIB_1.2.3.5+0x44>  // b.none
   17c34:	mov	w0, #0xfffffffe            	// #-2
   17c38:	b	17cdc <gzclose_r@@ZLIB_1.2.3.5+0xe4>
   17c3c:	ldr	x0, [sp, #40]
   17c40:	ldr	w0, [x0, #40]
   17c44:	cmp	w0, #0x0
   17c48:	b.eq	17c70 <gzclose_r@@ZLIB_1.2.3.5+0x78>  // b.none
   17c4c:	ldr	x0, [sp, #40]
   17c50:	add	x0, x0, #0x78
   17c54:	bl	2550 <inflateEnd@plt>
   17c58:	ldr	x0, [sp, #40]
   17c5c:	ldr	x0, [x0, #56]
   17c60:	bl	2570 <free@plt>
   17c64:	ldr	x0, [sp, #40]
   17c68:	ldr	x0, [x0, #48]
   17c6c:	bl	2570 <free@plt>
   17c70:	ldr	x0, [sp, #40]
   17c74:	ldr	w0, [x0, #108]
   17c78:	cmn	w0, #0x5
   17c7c:	b.ne	17c88 <gzclose_r@@ZLIB_1.2.3.5+0x90>  // b.any
   17c80:	mov	w0, #0xfffffffb            	// #-5
   17c84:	b	17c8c <gzclose_r@@ZLIB_1.2.3.5+0x94>
   17c88:	mov	w0, #0x0                   	// #0
   17c8c:	str	w0, [sp, #36]
   17c90:	mov	x2, #0x0                   	// #0
   17c94:	mov	w1, #0x0                   	// #0
   17c98:	ldr	x0, [sp, #40]
   17c9c:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   17ca0:	ldr	x0, [sp, #40]
   17ca4:	ldr	x0, [x0, #32]
   17ca8:	bl	2570 <free@plt>
   17cac:	ldr	x0, [sp, #40]
   17cb0:	ldr	w0, [x0, #28]
   17cb4:	bl	2510 <close@plt>
   17cb8:	str	w0, [sp, #32]
   17cbc:	ldr	x0, [sp, #40]
   17cc0:	bl	2570 <free@plt>
   17cc4:	ldr	w0, [sp, #32]
   17cc8:	cmp	w0, #0x0
   17ccc:	b.ne	17cd8 <gzclose_r@@ZLIB_1.2.3.5+0xe0>  // b.any
   17cd0:	ldr	w0, [sp, #36]
   17cd4:	b	17cdc <gzclose_r@@ZLIB_1.2.3.5+0xe4>
   17cd8:	mov	w0, #0xffffffff            	// #-1
   17cdc:	ldp	x29, x30, [sp], #48
   17ce0:	ret
   17ce4:	stp	x29, x30, [sp, #-48]!
   17ce8:	mov	x29, sp
   17cec:	str	x0, [sp, #24]
   17cf0:	ldr	x0, [sp, #24]
   17cf4:	add	x0, x0, #0x78
   17cf8:	str	x0, [sp, #40]
   17cfc:	ldr	x0, [sp, #24]
   17d00:	ldr	w0, [x0, #44]
   17d04:	lsl	w0, w0, #1
   17d08:	mov	w0, w0
   17d0c:	bl	2460 <malloc@plt>
   17d10:	mov	x1, x0
   17d14:	ldr	x0, [sp, #24]
   17d18:	str	x1, [x0, #48]
   17d1c:	ldr	x0, [sp, #24]
   17d20:	ldr	x0, [x0, #48]
   17d24:	cmp	x0, #0x0
   17d28:	b.ne	17d48 <gzclose_r@@ZLIB_1.2.3.5+0x150>  // b.any
   17d2c:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   17d30:	add	x2, x0, #0x2c8
   17d34:	mov	w1, #0xfffffffc            	// #-4
   17d38:	ldr	x0, [sp, #24]
   17d3c:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   17d40:	mov	w0, #0xffffffff            	// #-1
   17d44:	b	17e98 <gzclose_r@@ZLIB_1.2.3.5+0x2a0>
   17d48:	ldr	x0, [sp, #24]
   17d4c:	ldr	w0, [x0, #64]
   17d50:	cmp	w0, #0x0
   17d54:	b.ne	17e44 <gzclose_r@@ZLIB_1.2.3.5+0x24c>  // b.any
   17d58:	ldr	x0, [sp, #24]
   17d5c:	ldr	w0, [x0, #44]
   17d60:	mov	w0, w0
   17d64:	bl	2460 <malloc@plt>
   17d68:	mov	x1, x0
   17d6c:	ldr	x0, [sp, #24]
   17d70:	str	x1, [x0, #56]
   17d74:	ldr	x0, [sp, #24]
   17d78:	ldr	x0, [x0, #56]
   17d7c:	cmp	x0, #0x0
   17d80:	b.ne	17dac <gzclose_r@@ZLIB_1.2.3.5+0x1b4>  // b.any
   17d84:	ldr	x0, [sp, #24]
   17d88:	ldr	x0, [x0, #48]
   17d8c:	bl	2570 <free@plt>
   17d90:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   17d94:	add	x2, x0, #0x2c8
   17d98:	mov	w1, #0xfffffffc            	// #-4
   17d9c:	ldr	x0, [sp, #24]
   17da0:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   17da4:	mov	w0, #0xffffffff            	// #-1
   17da8:	b	17e98 <gzclose_r@@ZLIB_1.2.3.5+0x2a0>
   17dac:	ldr	x0, [sp, #40]
   17db0:	str	xzr, [x0, #64]
   17db4:	ldr	x0, [sp, #40]
   17db8:	str	xzr, [x0, #72]
   17dbc:	ldr	x0, [sp, #40]
   17dc0:	str	xzr, [x0, #80]
   17dc4:	ldr	x0, [sp, #24]
   17dc8:	ldr	w1, [x0, #88]
   17dcc:	ldr	x0, [sp, #24]
   17dd0:	ldr	w2, [x0, #92]
   17dd4:	mov	w7, #0x70                  	// #112
   17dd8:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   17ddc:	add	x6, x0, #0x2d8
   17de0:	mov	w5, w2
   17de4:	mov	w4, #0x8                   	// #8
   17de8:	mov	w3, #0x1f                  	// #31
   17dec:	mov	w2, #0x8                   	// #8
   17df0:	ldr	x0, [sp, #40]
   17df4:	bl	24d0 <deflateInit2_@plt>
   17df8:	str	w0, [sp, #36]
   17dfc:	ldr	w0, [sp, #36]
   17e00:	cmp	w0, #0x0
   17e04:	b.eq	17e3c <gzclose_r@@ZLIB_1.2.3.5+0x244>  // b.none
   17e08:	ldr	x0, [sp, #24]
   17e0c:	ldr	x0, [x0, #56]
   17e10:	bl	2570 <free@plt>
   17e14:	ldr	x0, [sp, #24]
   17e18:	ldr	x0, [x0, #48]
   17e1c:	bl	2570 <free@plt>
   17e20:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   17e24:	add	x2, x0, #0x2c8
   17e28:	mov	w1, #0xfffffffc            	// #-4
   17e2c:	ldr	x0, [sp, #24]
   17e30:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   17e34:	mov	w0, #0xffffffff            	// #-1
   17e38:	b	17e98 <gzclose_r@@ZLIB_1.2.3.5+0x2a0>
   17e3c:	ldr	x0, [sp, #40]
   17e40:	str	xzr, [x0]
   17e44:	ldr	x0, [sp, #24]
   17e48:	ldr	w1, [x0, #44]
   17e4c:	ldr	x0, [sp, #24]
   17e50:	str	w1, [x0, #40]
   17e54:	ldr	x0, [sp, #24]
   17e58:	ldr	w0, [x0, #64]
   17e5c:	cmp	w0, #0x0
   17e60:	b.ne	17e94 <gzclose_r@@ZLIB_1.2.3.5+0x29c>  // b.any
   17e64:	ldr	x0, [sp, #24]
   17e68:	ldr	w1, [x0, #40]
   17e6c:	ldr	x0, [sp, #40]
   17e70:	str	w1, [x0, #32]
   17e74:	ldr	x0, [sp, #24]
   17e78:	ldr	x1, [x0, #56]
   17e7c:	ldr	x0, [sp, #40]
   17e80:	str	x1, [x0, #24]
   17e84:	ldr	x0, [sp, #40]
   17e88:	ldr	x1, [x0, #24]
   17e8c:	ldr	x0, [sp, #24]
   17e90:	str	x1, [x0, #8]
   17e94:	mov	w0, #0x0                   	// #0
   17e98:	ldp	x29, x30, [sp], #48
   17e9c:	ret
   17ea0:	stp	x29, x30, [sp, #-64]!
   17ea4:	mov	x29, sp
   17ea8:	str	x0, [sp, #24]
   17eac:	str	w1, [sp, #20]
   17eb0:	mov	w0, #0x40000000            	// #1073741824
   17eb4:	str	w0, [sp, #56]
   17eb8:	ldr	x0, [sp, #24]
   17ebc:	add	x0, x0, #0x78
   17ec0:	str	x0, [sp, #48]
   17ec4:	ldr	x0, [sp, #24]
   17ec8:	ldr	w0, [x0, #40]
   17ecc:	cmp	w0, #0x0
   17ed0:	b.ne	17eec <gzclose_r@@ZLIB_1.2.3.5+0x2f4>  // b.any
   17ed4:	ldr	x0, [sp, #24]
   17ed8:	bl	17ce4 <gzclose_r@@ZLIB_1.2.3.5+0xec>
   17edc:	cmn	w0, #0x1
   17ee0:	b.ne	17eec <gzclose_r@@ZLIB_1.2.3.5+0x2f4>  // b.any
   17ee4:	mov	w0, #0xffffffff            	// #-1
   17ee8:	b	18180 <gzclose_r@@ZLIB_1.2.3.5+0x588>
   17eec:	ldr	x0, [sp, #24]
   17ef0:	ldr	w0, [x0, #64]
   17ef4:	cmp	w0, #0x0
   17ef8:	b.eq	17fbc <gzclose_r@@ZLIB_1.2.3.5+0x3c4>  // b.none
   17efc:	b	17fa4 <gzclose_r@@ZLIB_1.2.3.5+0x3ac>
   17f00:	ldr	x0, [sp, #48]
   17f04:	ldr	w0, [x0, #8]
   17f08:	ldr	w2, [sp, #56]
   17f0c:	ldr	w1, [sp, #56]
   17f10:	cmp	w2, w0
   17f14:	csel	w0, w1, w0, ls  // ls = plast
   17f18:	str	w0, [sp, #44]
   17f1c:	ldr	x0, [sp, #24]
   17f20:	ldr	w3, [x0, #28]
   17f24:	ldr	x0, [sp, #48]
   17f28:	ldr	x0, [x0]
   17f2c:	ldr	w1, [sp, #44]
   17f30:	mov	x2, x1
   17f34:	mov	x1, x0
   17f38:	mov	w0, w3
   17f3c:	bl	2530 <write@plt>
   17f40:	str	w0, [sp, #40]
   17f44:	ldr	w0, [sp, #40]
   17f48:	cmp	w0, #0x0
   17f4c:	b.ge	17f74 <gzclose_r@@ZLIB_1.2.3.5+0x37c>  // b.tcont
   17f50:	bl	2650 <__errno_location@plt>
   17f54:	ldr	w0, [x0]
   17f58:	bl	2500 <strerror@plt>
   17f5c:	mov	x2, x0
   17f60:	mov	w1, #0xffffffff            	// #-1
   17f64:	ldr	x0, [sp, #24]
   17f68:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   17f6c:	mov	w0, #0xffffffff            	// #-1
   17f70:	b	18180 <gzclose_r@@ZLIB_1.2.3.5+0x588>
   17f74:	ldr	x0, [sp, #48]
   17f78:	ldr	w1, [x0, #8]
   17f7c:	ldr	w0, [sp, #40]
   17f80:	sub	w1, w1, w0
   17f84:	ldr	x0, [sp, #48]
   17f88:	str	w1, [x0, #8]
   17f8c:	ldr	x0, [sp, #48]
   17f90:	ldr	x1, [x0]
   17f94:	ldrsw	x0, [sp, #40]
   17f98:	add	x1, x1, x0
   17f9c:	ldr	x0, [sp, #48]
   17fa0:	str	x1, [x0]
   17fa4:	ldr	x0, [sp, #48]
   17fa8:	ldr	w0, [x0, #8]
   17fac:	cmp	w0, #0x0
   17fb0:	b.ne	17f00 <gzclose_r@@ZLIB_1.2.3.5+0x308>  // b.any
   17fb4:	mov	w0, #0x0                   	// #0
   17fb8:	b	18180 <gzclose_r@@ZLIB_1.2.3.5+0x588>
   17fbc:	str	wzr, [sp, #60]
   17fc0:	ldr	x0, [sp, #48]
   17fc4:	ldr	w0, [x0, #32]
   17fc8:	cmp	w0, #0x0
   17fcc:	b.eq	180ac <gzclose_r@@ZLIB_1.2.3.5+0x4b4>  // b.none
   17fd0:	ldr	w0, [sp, #20]
   17fd4:	cmp	w0, #0x0
   17fd8:	b.eq	18104 <gzclose_r@@ZLIB_1.2.3.5+0x50c>  // b.none
   17fdc:	ldr	w0, [sp, #20]
   17fe0:	cmp	w0, #0x4
   17fe4:	b.ne	180ac <gzclose_r@@ZLIB_1.2.3.5+0x4b4>  // b.any
   17fe8:	ldr	w0, [sp, #60]
   17fec:	cmp	w0, #0x1
   17ff0:	b.ne	18104 <gzclose_r@@ZLIB_1.2.3.5+0x50c>  // b.any
   17ff4:	b	180ac <gzclose_r@@ZLIB_1.2.3.5+0x4b4>
   17ff8:	ldr	x0, [sp, #48]
   17ffc:	ldr	x1, [x0, #24]
   18000:	ldr	x0, [sp, #24]
   18004:	ldr	x0, [x0, #8]
   18008:	sub	x1, x1, x0
   1800c:	ldr	w0, [sp, #56]
   18010:	sxtw	x0, w0
   18014:	cmp	x1, x0
   18018:	b.gt	18034 <gzclose_r@@ZLIB_1.2.3.5+0x43c>
   1801c:	ldr	x0, [sp, #48]
   18020:	ldr	x1, [x0, #24]
   18024:	ldr	x0, [sp, #24]
   18028:	ldr	x0, [x0, #8]
   1802c:	sub	x0, x1, x0
   18030:	b	18038 <gzclose_r@@ZLIB_1.2.3.5+0x440>
   18034:	ldr	w0, [sp, #56]
   18038:	str	w0, [sp, #44]
   1803c:	ldr	x0, [sp, #24]
   18040:	ldr	w3, [x0, #28]
   18044:	ldr	x0, [sp, #24]
   18048:	ldr	x0, [x0, #8]
   1804c:	ldr	w1, [sp, #44]
   18050:	mov	x2, x1
   18054:	mov	x1, x0
   18058:	mov	w0, w3
   1805c:	bl	2530 <write@plt>
   18060:	str	w0, [sp, #40]
   18064:	ldr	w0, [sp, #40]
   18068:	cmp	w0, #0x0
   1806c:	b.ge	18094 <gzclose_r@@ZLIB_1.2.3.5+0x49c>  // b.tcont
   18070:	bl	2650 <__errno_location@plt>
   18074:	ldr	w0, [x0]
   18078:	bl	2500 <strerror@plt>
   1807c:	mov	x2, x0
   18080:	mov	w1, #0xffffffff            	// #-1
   18084:	ldr	x0, [sp, #24]
   18088:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   1808c:	mov	w0, #0xffffffff            	// #-1
   18090:	b	18180 <gzclose_r@@ZLIB_1.2.3.5+0x588>
   18094:	ldr	x0, [sp, #24]
   18098:	ldr	x1, [x0, #8]
   1809c:	ldrsw	x0, [sp, #40]
   180a0:	add	x1, x1, x0
   180a4:	ldr	x0, [sp, #24]
   180a8:	str	x1, [x0, #8]
   180ac:	ldr	x0, [sp, #48]
   180b0:	ldr	x1, [x0, #24]
   180b4:	ldr	x0, [sp, #24]
   180b8:	ldr	x0, [x0, #8]
   180bc:	cmp	x1, x0
   180c0:	b.hi	17ff8 <gzclose_r@@ZLIB_1.2.3.5+0x400>  // b.pmore
   180c4:	ldr	x0, [sp, #48]
   180c8:	ldr	w0, [x0, #32]
   180cc:	cmp	w0, #0x0
   180d0:	b.ne	18104 <gzclose_r@@ZLIB_1.2.3.5+0x50c>  // b.any
   180d4:	ldr	x0, [sp, #24]
   180d8:	ldr	w1, [x0, #40]
   180dc:	ldr	x0, [sp, #48]
   180e0:	str	w1, [x0, #32]
   180e4:	ldr	x0, [sp, #24]
   180e8:	ldr	x1, [x0, #56]
   180ec:	ldr	x0, [sp, #48]
   180f0:	str	x1, [x0, #24]
   180f4:	ldr	x0, [sp, #24]
   180f8:	ldr	x1, [x0, #56]
   180fc:	ldr	x0, [sp, #24]
   18100:	str	x1, [x0, #8]
   18104:	ldr	x0, [sp, #48]
   18108:	ldr	w0, [x0, #32]
   1810c:	str	w0, [sp, #36]
   18110:	ldr	w1, [sp, #20]
   18114:	ldr	x0, [sp, #48]
   18118:	bl	2490 <deflate@plt>
   1811c:	str	w0, [sp, #60]
   18120:	ldr	w0, [sp, #60]
   18124:	cmn	w0, #0x2
   18128:	b.ne	18148 <gzclose_r@@ZLIB_1.2.3.5+0x550>  // b.any
   1812c:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   18130:	add	x2, x0, #0x2e0
   18134:	mov	w1, #0xfffffffe            	// #-2
   18138:	ldr	x0, [sp, #24]
   1813c:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   18140:	mov	w0, #0xffffffff            	// #-1
   18144:	b	18180 <gzclose_r@@ZLIB_1.2.3.5+0x588>
   18148:	ldr	x0, [sp, #48]
   1814c:	ldr	w0, [x0, #32]
   18150:	ldr	w1, [sp, #36]
   18154:	sub	w0, w1, w0
   18158:	str	w0, [sp, #36]
   1815c:	ldr	w0, [sp, #36]
   18160:	cmp	w0, #0x0
   18164:	b.ne	17fc0 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>  // b.any
   18168:	ldr	w0, [sp, #20]
   1816c:	cmp	w0, #0x4
   18170:	b.ne	1817c <gzclose_r@@ZLIB_1.2.3.5+0x584>  // b.any
   18174:	ldr	x0, [sp, #48]
   18178:	bl	2480 <deflateReset@plt>
   1817c:	mov	w0, #0x0                   	// #0
   18180:	ldp	x29, x30, [sp], #64
   18184:	ret
   18188:	stp	x29, x30, [sp, #-64]!
   1818c:	mov	x29, sp
   18190:	str	x0, [sp, #24]
   18194:	str	x1, [sp, #16]
   18198:	ldr	x0, [sp, #24]
   1819c:	add	x0, x0, #0x78
   181a0:	str	x0, [sp, #48]
   181a4:	ldr	x0, [sp, #48]
   181a8:	ldr	w0, [x0, #8]
   181ac:	cmp	w0, #0x0
   181b0:	b.eq	181d0 <gzclose_r@@ZLIB_1.2.3.5+0x5d8>  // b.none
   181b4:	mov	w1, #0x0                   	// #0
   181b8:	ldr	x0, [sp, #24]
   181bc:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   181c0:	cmn	w0, #0x1
   181c4:	b.ne	181d0 <gzclose_r@@ZLIB_1.2.3.5+0x5d8>  // b.any
   181c8:	mov	w0, #0xffffffff            	// #-1
   181cc:	b	182a0 <gzclose_r@@ZLIB_1.2.3.5+0x6a8>
   181d0:	mov	w0, #0x1                   	// #1
   181d4:	str	w0, [sp, #60]
   181d8:	b	18290 <gzclose_r@@ZLIB_1.2.3.5+0x698>
   181dc:	ldr	x0, [sp, #24]
   181e0:	ldr	w0, [x0, #40]
   181e4:	mov	w0, w0
   181e8:	ldr	x1, [sp, #16]
   181ec:	cmp	x1, x0
   181f0:	b.ge	181fc <gzclose_r@@ZLIB_1.2.3.5+0x604>  // b.tcont
   181f4:	ldr	x0, [sp, #16]
   181f8:	b	18204 <gzclose_r@@ZLIB_1.2.3.5+0x60c>
   181fc:	ldr	x0, [sp, #24]
   18200:	ldr	w0, [x0, #40]
   18204:	str	w0, [sp, #44]
   18208:	ldr	w0, [sp, #60]
   1820c:	cmp	w0, #0x0
   18210:	b.eq	18230 <gzclose_r@@ZLIB_1.2.3.5+0x638>  // b.none
   18214:	ldr	x0, [sp, #24]
   18218:	ldr	x0, [x0, #48]
   1821c:	ldr	w1, [sp, #44]
   18220:	mov	x2, x1
   18224:	mov	w1, #0x0                   	// #0
   18228:	bl	24a0 <memset@plt>
   1822c:	str	wzr, [sp, #60]
   18230:	ldr	x0, [sp, #48]
   18234:	ldr	w1, [sp, #44]
   18238:	str	w1, [x0, #8]
   1823c:	ldr	x0, [sp, #24]
   18240:	ldr	x1, [x0, #48]
   18244:	ldr	x0, [sp, #48]
   18248:	str	x1, [x0]
   1824c:	ldr	x0, [sp, #24]
   18250:	ldr	x1, [x0, #16]
   18254:	ldr	w0, [sp, #44]
   18258:	add	x1, x1, x0
   1825c:	ldr	x0, [sp, #24]
   18260:	str	x1, [x0, #16]
   18264:	mov	w1, #0x0                   	// #0
   18268:	ldr	x0, [sp, #24]
   1826c:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   18270:	cmn	w0, #0x1
   18274:	b.ne	18280 <gzclose_r@@ZLIB_1.2.3.5+0x688>  // b.any
   18278:	mov	w0, #0xffffffff            	// #-1
   1827c:	b	182a0 <gzclose_r@@ZLIB_1.2.3.5+0x6a8>
   18280:	ldr	w0, [sp, #44]
   18284:	ldr	x1, [sp, #16]
   18288:	sub	x0, x1, x0
   1828c:	str	x0, [sp, #16]
   18290:	ldr	x0, [sp, #16]
   18294:	cmp	x0, #0x0
   18298:	b.ne	181dc <gzclose_r@@ZLIB_1.2.3.5+0x5e4>  // b.any
   1829c:	mov	w0, #0x0                   	// #0
   182a0:	ldp	x29, x30, [sp], #64
   182a4:	ret
   182a8:	stp	x29, x30, [sp, #-80]!
   182ac:	mov	x29, sp
   182b0:	str	x0, [sp, #40]
   182b4:	str	x1, [sp, #32]
   182b8:	str	x2, [sp, #24]
   182bc:	ldr	x0, [sp, #24]
   182c0:	str	x0, [sp, #64]
   182c4:	ldr	x0, [sp, #24]
   182c8:	cmp	x0, #0x0
   182cc:	b.ne	182d8 <gzclose_r@@ZLIB_1.2.3.5+0x6e0>  // b.any
   182d0:	mov	x0, #0x0                   	// #0
   182d4:	b	18528 <gzclose_r@@ZLIB_1.2.3.5+0x930>
   182d8:	ldr	x0, [sp, #40]
   182dc:	ldr	w0, [x0, #40]
   182e0:	cmp	w0, #0x0
   182e4:	b.ne	18300 <gzclose_r@@ZLIB_1.2.3.5+0x708>  // b.any
   182e8:	ldr	x0, [sp, #40]
   182ec:	bl	17ce4 <gzclose_r@@ZLIB_1.2.3.5+0xec>
   182f0:	cmn	w0, #0x1
   182f4:	b.ne	18300 <gzclose_r@@ZLIB_1.2.3.5+0x708>  // b.any
   182f8:	mov	x0, #0x0                   	// #0
   182fc:	b	18528 <gzclose_r@@ZLIB_1.2.3.5+0x930>
   18300:	ldr	x0, [sp, #40]
   18304:	ldr	w0, [x0, #104]
   18308:	cmp	w0, #0x0
   1830c:	b.eq	1833c <gzclose_r@@ZLIB_1.2.3.5+0x744>  // b.none
   18310:	ldr	x0, [sp, #40]
   18314:	str	wzr, [x0, #104]
   18318:	ldr	x0, [sp, #40]
   1831c:	ldr	x0, [x0, #96]
   18320:	mov	x1, x0
   18324:	ldr	x0, [sp, #40]
   18328:	bl	18188 <gzclose_r@@ZLIB_1.2.3.5+0x590>
   1832c:	cmn	w0, #0x1
   18330:	b.ne	1833c <gzclose_r@@ZLIB_1.2.3.5+0x744>  // b.any
   18334:	mov	x0, #0x0                   	// #0
   18338:	b	18528 <gzclose_r@@ZLIB_1.2.3.5+0x930>
   1833c:	ldr	x0, [sp, #40]
   18340:	ldr	w0, [x0, #40]
   18344:	mov	w0, w0
   18348:	ldr	x1, [sp, #24]
   1834c:	cmp	x1, x0
   18350:	b.cs	18470 <gzclose_r@@ZLIB_1.2.3.5+0x878>  // b.hs, b.nlast
   18354:	ldr	x0, [sp, #40]
   18358:	ldr	w0, [x0, #128]
   1835c:	cmp	w0, #0x0
   18360:	b.ne	18374 <gzclose_r@@ZLIB_1.2.3.5+0x77c>  // b.any
   18364:	ldr	x0, [sp, #40]
   18368:	ldr	x1, [x0, #48]
   1836c:	ldr	x0, [sp, #40]
   18370:	str	x1, [x0, #120]
   18374:	ldr	x0, [sp, #40]
   18378:	ldr	x1, [x0, #120]
   1837c:	ldr	x0, [sp, #40]
   18380:	ldr	w0, [x0, #128]
   18384:	mov	w0, w0
   18388:	add	x1, x1, x0
   1838c:	ldr	x0, [sp, #40]
   18390:	ldr	x0, [x0, #48]
   18394:	sub	x0, x1, x0
   18398:	str	w0, [sp, #60]
   1839c:	ldr	x0, [sp, #40]
   183a0:	ldr	w1, [x0, #40]
   183a4:	ldr	w0, [sp, #60]
   183a8:	sub	w0, w1, w0
   183ac:	str	w0, [sp, #76]
   183b0:	ldr	w0, [sp, #76]
   183b4:	ldr	x1, [sp, #24]
   183b8:	cmp	x1, x0
   183bc:	b.cs	183c8 <gzclose_r@@ZLIB_1.2.3.5+0x7d0>  // b.hs, b.nlast
   183c0:	ldr	x0, [sp, #24]
   183c4:	str	w0, [sp, #76]
   183c8:	ldr	x0, [sp, #40]
   183cc:	ldr	x1, [x0, #48]
   183d0:	ldr	w0, [sp, #60]
   183d4:	add	x0, x1, x0
   183d8:	ldr	w1, [sp, #76]
   183dc:	mov	x2, x1
   183e0:	ldr	x1, [sp, #32]
   183e4:	bl	23a0 <memcpy@plt>
   183e8:	ldr	x0, [sp, #40]
   183ec:	ldr	w1, [x0, #128]
   183f0:	ldr	w0, [sp, #76]
   183f4:	add	w1, w1, w0
   183f8:	ldr	x0, [sp, #40]
   183fc:	str	w1, [x0, #128]
   18400:	ldr	x0, [sp, #40]
   18404:	ldr	x1, [x0, #16]
   18408:	ldr	w0, [sp, #76]
   1840c:	add	x1, x1, x0
   18410:	ldr	x0, [sp, #40]
   18414:	str	x1, [x0, #16]
   18418:	ldr	w0, [sp, #76]
   1841c:	ldr	x1, [sp, #32]
   18420:	add	x0, x1, x0
   18424:	str	x0, [sp, #32]
   18428:	ldr	w0, [sp, #76]
   1842c:	ldr	x1, [sp, #24]
   18430:	sub	x0, x1, x0
   18434:	str	x0, [sp, #24]
   18438:	ldr	x0, [sp, #24]
   1843c:	cmp	x0, #0x0
   18440:	b.eq	18460 <gzclose_r@@ZLIB_1.2.3.5+0x868>  // b.none
   18444:	mov	w1, #0x0                   	// #0
   18448:	ldr	x0, [sp, #40]
   1844c:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   18450:	cmn	w0, #0x1
   18454:	b.ne	18460 <gzclose_r@@ZLIB_1.2.3.5+0x868>  // b.any
   18458:	mov	x0, #0x0                   	// #0
   1845c:	b	18528 <gzclose_r@@ZLIB_1.2.3.5+0x930>
   18460:	ldr	x0, [sp, #24]
   18464:	cmp	x0, #0x0
   18468:	b.ne	18354 <gzclose_r@@ZLIB_1.2.3.5+0x75c>  // b.any
   1846c:	b	18524 <gzclose_r@@ZLIB_1.2.3.5+0x92c>
   18470:	ldr	x0, [sp, #40]
   18474:	ldr	w0, [x0, #128]
   18478:	cmp	w0, #0x0
   1847c:	b.eq	1849c <gzclose_r@@ZLIB_1.2.3.5+0x8a4>  // b.none
   18480:	mov	w1, #0x0                   	// #0
   18484:	ldr	x0, [sp, #40]
   18488:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   1848c:	cmn	w0, #0x1
   18490:	b.ne	1849c <gzclose_r@@ZLIB_1.2.3.5+0x8a4>  // b.any
   18494:	mov	x0, #0x0                   	// #0
   18498:	b	18528 <gzclose_r@@ZLIB_1.2.3.5+0x930>
   1849c:	ldr	x0, [sp, #40]
   184a0:	ldr	x1, [sp, #32]
   184a4:	str	x1, [x0, #120]
   184a8:	mov	w0, #0xffffffff            	// #-1
   184ac:	str	w0, [sp, #72]
   184b0:	ldr	w0, [sp, #72]
   184b4:	ldr	x1, [sp, #24]
   184b8:	cmp	x1, x0
   184bc:	b.cs	184c8 <gzclose_r@@ZLIB_1.2.3.5+0x8d0>  // b.hs, b.nlast
   184c0:	ldr	x0, [sp, #24]
   184c4:	str	w0, [sp, #72]
   184c8:	ldr	x0, [sp, #40]
   184cc:	ldr	w1, [sp, #72]
   184d0:	str	w1, [x0, #128]
   184d4:	ldr	x0, [sp, #40]
   184d8:	ldr	x1, [x0, #16]
   184dc:	ldr	w0, [sp, #72]
   184e0:	add	x1, x1, x0
   184e4:	ldr	x0, [sp, #40]
   184e8:	str	x1, [x0, #16]
   184ec:	mov	w1, #0x0                   	// #0
   184f0:	ldr	x0, [sp, #40]
   184f4:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   184f8:	cmn	w0, #0x1
   184fc:	b.ne	18508 <gzclose_r@@ZLIB_1.2.3.5+0x910>  // b.any
   18500:	mov	x0, #0x0                   	// #0
   18504:	b	18528 <gzclose_r@@ZLIB_1.2.3.5+0x930>
   18508:	ldr	w0, [sp, #72]
   1850c:	ldr	x1, [sp, #24]
   18510:	sub	x0, x1, x0
   18514:	str	x0, [sp, #24]
   18518:	ldr	x0, [sp, #24]
   1851c:	cmp	x0, #0x0
   18520:	b.ne	184a8 <gzclose_r@@ZLIB_1.2.3.5+0x8b0>  // b.any
   18524:	ldr	x0, [sp, #64]
   18528:	ldp	x29, x30, [sp], #80
   1852c:	ret

0000000000018530 <gzwrite@@Base>:
   18530:	stp	x29, x30, [sp, #-64]!
   18534:	mov	x29, sp
   18538:	str	x0, [sp, #40]
   1853c:	str	x1, [sp, #32]
   18540:	str	w2, [sp, #28]
   18544:	ldr	x0, [sp, #40]
   18548:	cmp	x0, #0x0
   1854c:	b.ne	18558 <gzwrite@@Base+0x28>  // b.any
   18550:	mov	w0, #0x0                   	// #0
   18554:	b	185c8 <gzwrite@@Base+0x98>
   18558:	ldr	x0, [sp, #40]
   1855c:	str	x0, [sp, #56]
   18560:	ldr	x0, [sp, #56]
   18564:	ldr	w1, [x0, #24]
   18568:	mov	w0, #0x79b1                	// #31153
   1856c:	cmp	w1, w0
   18570:	b.ne	18584 <gzwrite@@Base+0x54>  // b.any
   18574:	ldr	x0, [sp, #56]
   18578:	ldr	w0, [x0, #108]
   1857c:	cmp	w0, #0x0
   18580:	b.eq	1858c <gzwrite@@Base+0x5c>  // b.none
   18584:	mov	w0, #0x0                   	// #0
   18588:	b	185c8 <gzwrite@@Base+0x98>
   1858c:	ldr	w0, [sp, #28]
   18590:	cmp	w0, #0x0
   18594:	b.ge	185b4 <gzwrite@@Base+0x84>  // b.tcont
   18598:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   1859c:	add	x2, x0, #0x308
   185a0:	mov	w1, #0xfffffffd            	// #-3
   185a4:	ldr	x0, [sp, #56]
   185a8:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   185ac:	mov	w0, #0x0                   	// #0
   185b0:	b	185c8 <gzwrite@@Base+0x98>
   185b4:	ldr	w0, [sp, #28]
   185b8:	mov	x2, x0
   185bc:	ldr	x1, [sp, #32]
   185c0:	ldr	x0, [sp, #56]
   185c4:	bl	182a8 <gzclose_r@@ZLIB_1.2.3.5+0x6b0>
   185c8:	ldp	x29, x30, [sp], #64
   185cc:	ret

00000000000185d0 <gzfwrite@@ZLIB_1.2.9>:
   185d0:	stp	x29, x30, [sp, #-64]!
   185d4:	mov	x29, sp
   185d8:	str	x0, [sp, #40]
   185dc:	str	x1, [sp, #32]
   185e0:	str	x2, [sp, #24]
   185e4:	str	x3, [sp, #16]
   185e8:	ldr	x0, [sp, #16]
   185ec:	cmp	x0, #0x0
   185f0:	b.ne	185fc <gzfwrite@@ZLIB_1.2.9+0x2c>  // b.any
   185f4:	mov	x0, #0x0                   	// #0
   185f8:	b	186b0 <gzfwrite@@ZLIB_1.2.9+0xe0>
   185fc:	ldr	x0, [sp, #16]
   18600:	str	x0, [sp, #56]
   18604:	ldr	x0, [sp, #56]
   18608:	ldr	w1, [x0, #24]
   1860c:	mov	w0, #0x79b1                	// #31153
   18610:	cmp	w1, w0
   18614:	b.ne	18628 <gzfwrite@@ZLIB_1.2.9+0x58>  // b.any
   18618:	ldr	x0, [sp, #56]
   1861c:	ldr	w0, [x0, #108]
   18620:	cmp	w0, #0x0
   18624:	b.eq	18630 <gzfwrite@@ZLIB_1.2.9+0x60>  // b.none
   18628:	mov	x0, #0x0                   	// #0
   1862c:	b	186b0 <gzfwrite@@ZLIB_1.2.9+0xe0>
   18630:	ldr	x1, [sp, #24]
   18634:	ldr	x0, [sp, #32]
   18638:	mul	x0, x1, x0
   1863c:	str	x0, [sp, #48]
   18640:	ldr	x0, [sp, #32]
   18644:	cmp	x0, #0x0
   18648:	b.eq	18680 <gzfwrite@@ZLIB_1.2.9+0xb0>  // b.none
   1864c:	ldr	x1, [sp, #48]
   18650:	ldr	x0, [sp, #32]
   18654:	udiv	x0, x1, x0
   18658:	ldr	x1, [sp, #24]
   1865c:	cmp	x1, x0
   18660:	b.eq	18680 <gzfwrite@@ZLIB_1.2.9+0xb0>  // b.none
   18664:	adrp	x0, 1d000 <gzclose_w@@ZLIB_1.2.3.5+0x4190>
   18668:	add	x2, x0, #0x330
   1866c:	mov	w1, #0xfffffffe            	// #-2
   18670:	ldr	x0, [sp, #56]
   18674:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   18678:	mov	x0, #0x0                   	// #0
   1867c:	b	186b0 <gzfwrite@@ZLIB_1.2.9+0xe0>
   18680:	ldr	x0, [sp, #48]
   18684:	cmp	x0, #0x0
   18688:	b.eq	186ac <gzfwrite@@ZLIB_1.2.9+0xdc>  // b.none
   1868c:	ldr	x2, [sp, #48]
   18690:	ldr	x1, [sp, #40]
   18694:	ldr	x0, [sp, #56]
   18698:	bl	182a8 <gzclose_r@@ZLIB_1.2.3.5+0x6b0>
   1869c:	mov	x1, x0
   186a0:	ldr	x0, [sp, #32]
   186a4:	udiv	x0, x1, x0
   186a8:	b	186b0 <gzfwrite@@ZLIB_1.2.9+0xe0>
   186ac:	mov	x0, #0x0                   	// #0
   186b0:	ldp	x29, x30, [sp], #64
   186b4:	ret

00000000000186b8 <gzputc@@Base>:
   186b8:	stp	x29, x30, [sp, #-64]!
   186bc:	mov	x29, sp
   186c0:	str	x0, [sp, #24]
   186c4:	str	w1, [sp, #20]
   186c8:	ldr	x0, [sp, #24]
   186cc:	cmp	x0, #0x0
   186d0:	b.ne	186dc <gzputc@@Base+0x24>  // b.any
   186d4:	mov	w0, #0xffffffff            	// #-1
   186d8:	b	1884c <gzputc@@Base+0x194>
   186dc:	ldr	x0, [sp, #24]
   186e0:	str	x0, [sp, #56]
   186e4:	ldr	x0, [sp, #56]
   186e8:	add	x0, x0, #0x78
   186ec:	str	x0, [sp, #48]
   186f0:	ldr	x0, [sp, #56]
   186f4:	ldr	w1, [x0, #24]
   186f8:	mov	w0, #0x79b1                	// #31153
   186fc:	cmp	w1, w0
   18700:	b.ne	18714 <gzputc@@Base+0x5c>  // b.any
   18704:	ldr	x0, [sp, #56]
   18708:	ldr	w0, [x0, #108]
   1870c:	cmp	w0, #0x0
   18710:	b.eq	1871c <gzputc@@Base+0x64>  // b.none
   18714:	mov	w0, #0xffffffff            	// #-1
   18718:	b	1884c <gzputc@@Base+0x194>
   1871c:	ldr	x0, [sp, #56]
   18720:	ldr	w0, [x0, #104]
   18724:	cmp	w0, #0x0
   18728:	b.eq	18758 <gzputc@@Base+0xa0>  // b.none
   1872c:	ldr	x0, [sp, #56]
   18730:	str	wzr, [x0, #104]
   18734:	ldr	x0, [sp, #56]
   18738:	ldr	x0, [x0, #96]
   1873c:	mov	x1, x0
   18740:	ldr	x0, [sp, #56]
   18744:	bl	18188 <gzclose_r@@ZLIB_1.2.3.5+0x590>
   18748:	cmn	w0, #0x1
   1874c:	b.ne	18758 <gzputc@@Base+0xa0>  // b.any
   18750:	mov	w0, #0xffffffff            	// #-1
   18754:	b	1884c <gzputc@@Base+0x194>
   18758:	ldr	x0, [sp, #56]
   1875c:	ldr	w0, [x0, #40]
   18760:	cmp	w0, #0x0
   18764:	b.eq	18814 <gzputc@@Base+0x15c>  // b.none
   18768:	ldr	x0, [sp, #48]
   1876c:	ldr	w0, [x0, #8]
   18770:	cmp	w0, #0x0
   18774:	b.ne	18788 <gzputc@@Base+0xd0>  // b.any
   18778:	ldr	x0, [sp, #56]
   1877c:	ldr	x1, [x0, #48]
   18780:	ldr	x0, [sp, #48]
   18784:	str	x1, [x0]
   18788:	ldr	x0, [sp, #48]
   1878c:	ldr	x1, [x0]
   18790:	ldr	x0, [sp, #48]
   18794:	ldr	w0, [x0, #8]
   18798:	mov	w0, w0
   1879c:	add	x1, x1, x0
   187a0:	ldr	x0, [sp, #56]
   187a4:	ldr	x0, [x0, #48]
   187a8:	sub	x0, x1, x0
   187ac:	str	w0, [sp, #44]
   187b0:	ldr	x0, [sp, #56]
   187b4:	ldr	w0, [x0, #40]
   187b8:	ldr	w1, [sp, #44]
   187bc:	cmp	w1, w0
   187c0:	b.cs	18814 <gzputc@@Base+0x15c>  // b.hs, b.nlast
   187c4:	ldr	x0, [sp, #56]
   187c8:	ldr	x1, [x0, #48]
   187cc:	ldr	w0, [sp, #44]
   187d0:	add	x0, x1, x0
   187d4:	ldr	w1, [sp, #20]
   187d8:	and	w1, w1, #0xff
   187dc:	strb	w1, [x0]
   187e0:	ldr	x0, [sp, #48]
   187e4:	ldr	w0, [x0, #8]
   187e8:	add	w1, w0, #0x1
   187ec:	ldr	x0, [sp, #48]
   187f0:	str	w1, [x0, #8]
   187f4:	ldr	x0, [sp, #56]
   187f8:	ldr	x0, [x0, #16]
   187fc:	add	x1, x0, #0x1
   18800:	ldr	x0, [sp, #56]
   18804:	str	x1, [x0, #16]
   18808:	ldr	w0, [sp, #20]
   1880c:	and	w0, w0, #0xff
   18810:	b	1884c <gzputc@@Base+0x194>
   18814:	ldr	w0, [sp, #20]
   18818:	and	w0, w0, #0xff
   1881c:	strb	w0, [sp, #40]
   18820:	add	x0, sp, #0x28
   18824:	mov	x2, #0x1                   	// #1
   18828:	mov	x1, x0
   1882c:	ldr	x0, [sp, #56]
   18830:	bl	182a8 <gzclose_r@@ZLIB_1.2.3.5+0x6b0>
   18834:	cmp	x0, #0x1
   18838:	b.eq	18844 <gzputc@@Base+0x18c>  // b.none
   1883c:	mov	w0, #0xffffffff            	// #-1
   18840:	b	1884c <gzputc@@Base+0x194>
   18844:	ldr	w0, [sp, #20]
   18848:	and	w0, w0, #0xff
   1884c:	ldp	x29, x30, [sp], #64
   18850:	ret

0000000000018854 <gzputs@@Base>:
   18854:	stp	x29, x30, [sp, #-64]!
   18858:	mov	x29, sp
   1885c:	str	x0, [sp, #24]
   18860:	str	x1, [sp, #16]
   18864:	ldr	x0, [sp, #24]
   18868:	cmp	x0, #0x0
   1886c:	b.ne	18878 <gzputs@@Base+0x24>  // b.any
   18870:	mov	w0, #0xffffffff            	// #-1
   18874:	b	188f0 <gzputs@@Base+0x9c>
   18878:	ldr	x0, [sp, #24]
   1887c:	str	x0, [sp, #56]
   18880:	ldr	x0, [sp, #56]
   18884:	ldr	w1, [x0, #24]
   18888:	mov	w0, #0x79b1                	// #31153
   1888c:	cmp	w1, w0
   18890:	b.ne	188a4 <gzputs@@Base+0x50>  // b.any
   18894:	ldr	x0, [sp, #56]
   18898:	ldr	w0, [x0, #108]
   1889c:	cmp	w0, #0x0
   188a0:	b.eq	188ac <gzputs@@Base+0x58>  // b.none
   188a4:	mov	w0, #0xffffffff            	// #-1
   188a8:	b	188f0 <gzputs@@Base+0x9c>
   188ac:	ldr	x0, [sp, #16]
   188b0:	bl	23e0 <strlen@plt>
   188b4:	str	x0, [sp, #48]
   188b8:	ldr	x2, [sp, #48]
   188bc:	ldr	x1, [sp, #16]
   188c0:	ldr	x0, [sp, #56]
   188c4:	bl	182a8 <gzclose_r@@ZLIB_1.2.3.5+0x6b0>
   188c8:	str	w0, [sp, #44]
   188cc:	ldr	w0, [sp, #44]
   188d0:	cmp	w0, #0x0
   188d4:	b.ne	188e4 <gzputs@@Base+0x90>  // b.any
   188d8:	ldr	x0, [sp, #48]
   188dc:	cmp	x0, #0x0
   188e0:	b.ne	188ec <gzputs@@Base+0x98>  // b.any
   188e4:	ldr	w0, [sp, #44]
   188e8:	b	188f0 <gzputs@@Base+0x9c>
   188ec:	mov	w0, #0xffffffff            	// #-1
   188f0:	ldp	x29, x30, [sp], #64
   188f4:	ret

00000000000188f8 <gzvprintf@@ZLIB_1.2.7.1>:
   188f8:	stp	x29, x30, [sp, #-112]!
   188fc:	mov	x29, sp
   18900:	str	x19, [sp, #16]
   18904:	str	x0, [sp, #72]
   18908:	str	x1, [sp, #64]
   1890c:	mov	x19, x2
   18910:	ldr	x0, [sp, #72]
   18914:	cmp	x0, #0x0
   18918:	b.ne	18924 <gzvprintf@@ZLIB_1.2.7.1+0x2c>  // b.any
   1891c:	mov	w0, #0xfffffffe            	// #-2
   18920:	b	18b98 <gzvprintf@@ZLIB_1.2.7.1+0x2a0>
   18924:	ldr	x0, [sp, #72]
   18928:	str	x0, [sp, #104]
   1892c:	ldr	x0, [sp, #104]
   18930:	add	x0, x0, #0x78
   18934:	str	x0, [sp, #96]
   18938:	ldr	x0, [sp, #104]
   1893c:	ldr	w1, [x0, #24]
   18940:	mov	w0, #0x79b1                	// #31153
   18944:	cmp	w1, w0
   18948:	b.ne	1895c <gzvprintf@@ZLIB_1.2.7.1+0x64>  // b.any
   1894c:	ldr	x0, [sp, #104]
   18950:	ldr	w0, [x0, #108]
   18954:	cmp	w0, #0x0
   18958:	b.eq	18964 <gzvprintf@@ZLIB_1.2.7.1+0x6c>  // b.none
   1895c:	mov	w0, #0xfffffffe            	// #-2
   18960:	b	18b98 <gzvprintf@@ZLIB_1.2.7.1+0x2a0>
   18964:	ldr	x0, [sp, #104]
   18968:	ldr	w0, [x0, #40]
   1896c:	cmp	w0, #0x0
   18970:	b.ne	18990 <gzvprintf@@ZLIB_1.2.7.1+0x98>  // b.any
   18974:	ldr	x0, [sp, #104]
   18978:	bl	17ce4 <gzclose_r@@ZLIB_1.2.3.5+0xec>
   1897c:	cmn	w0, #0x1
   18980:	b.ne	18990 <gzvprintf@@ZLIB_1.2.7.1+0x98>  // b.any
   18984:	ldr	x0, [sp, #104]
   18988:	ldr	w0, [x0, #108]
   1898c:	b	18b98 <gzvprintf@@ZLIB_1.2.7.1+0x2a0>
   18990:	ldr	x0, [sp, #104]
   18994:	ldr	w0, [x0, #104]
   18998:	cmp	w0, #0x0
   1899c:	b.eq	189d0 <gzvprintf@@ZLIB_1.2.7.1+0xd8>  // b.none
   189a0:	ldr	x0, [sp, #104]
   189a4:	str	wzr, [x0, #104]
   189a8:	ldr	x0, [sp, #104]
   189ac:	ldr	x0, [x0, #96]
   189b0:	mov	x1, x0
   189b4:	ldr	x0, [sp, #104]
   189b8:	bl	18188 <gzclose_r@@ZLIB_1.2.3.5+0x590>
   189bc:	cmn	w0, #0x1
   189c0:	b.ne	189d0 <gzvprintf@@ZLIB_1.2.7.1+0xd8>  // b.any
   189c4:	ldr	x0, [sp, #104]
   189c8:	ldr	w0, [x0, #108]
   189cc:	b	18b98 <gzvprintf@@ZLIB_1.2.7.1+0x2a0>
   189d0:	ldr	x0, [sp, #96]
   189d4:	ldr	w0, [x0, #8]
   189d8:	cmp	w0, #0x0
   189dc:	b.ne	189f0 <gzvprintf@@ZLIB_1.2.7.1+0xf8>  // b.any
   189e0:	ldr	x0, [sp, #104]
   189e4:	ldr	x1, [x0, #48]
   189e8:	ldr	x0, [sp, #96]
   189ec:	str	x1, [x0]
   189f0:	ldr	x0, [sp, #96]
   189f4:	ldr	x1, [x0]
   189f8:	ldr	x0, [sp, #96]
   189fc:	ldr	w0, [x0, #8]
   18a00:	mov	w0, w0
   18a04:	add	x0, x1, x0
   18a08:	str	x0, [sp, #88]
   18a0c:	ldr	x0, [sp, #104]
   18a10:	ldr	w0, [x0, #40]
   18a14:	sub	w0, w0, #0x1
   18a18:	mov	w0, w0
   18a1c:	ldr	x1, [sp, #88]
   18a20:	add	x0, x1, x0
   18a24:	strb	wzr, [x0]
   18a28:	ldr	x0, [sp, #104]
   18a2c:	ldr	w0, [x0, #40]
   18a30:	mov	w4, w0
   18a34:	add	x2, sp, #0x20
   18a38:	mov	x3, x19
   18a3c:	ldp	x0, x1, [x3]
   18a40:	stp	x0, x1, [x2]
   18a44:	ldp	x0, x1, [x3, #16]
   18a48:	stp	x0, x1, [x2, #16]
   18a4c:	add	x0, sp, #0x20
   18a50:	mov	x3, x0
   18a54:	ldr	x2, [sp, #64]
   18a58:	mov	x1, x4
   18a5c:	ldr	x0, [sp, #88]
   18a60:	bl	2620 <vsnprintf@plt>
   18a64:	str	w0, [sp, #84]
   18a68:	ldr	w0, [sp, #84]
   18a6c:	cmp	w0, #0x0
   18a70:	b.eq	18aac <gzvprintf@@ZLIB_1.2.7.1+0x1b4>  // b.none
   18a74:	ldr	x0, [sp, #104]
   18a78:	ldr	w1, [x0, #40]
   18a7c:	ldr	w0, [sp, #84]
   18a80:	cmp	w1, w0
   18a84:	b.ls	18aac <gzvprintf@@ZLIB_1.2.7.1+0x1b4>  // b.plast
   18a88:	ldr	x0, [sp, #104]
   18a8c:	ldr	w0, [x0, #40]
   18a90:	sub	w0, w0, #0x1
   18a94:	mov	w0, w0
   18a98:	ldr	x1, [sp, #88]
   18a9c:	add	x0, x1, x0
   18aa0:	ldrb	w0, [x0]
   18aa4:	cmp	w0, #0x0
   18aa8:	b.eq	18ab4 <gzvprintf@@ZLIB_1.2.7.1+0x1bc>  // b.none
   18aac:	mov	w0, #0x0                   	// #0
   18ab0:	b	18b98 <gzvprintf@@ZLIB_1.2.7.1+0x2a0>
   18ab4:	ldr	x0, [sp, #96]
   18ab8:	ldr	w1, [x0, #8]
   18abc:	ldr	w0, [sp, #84]
   18ac0:	add	w1, w1, w0
   18ac4:	ldr	x0, [sp, #96]
   18ac8:	str	w1, [x0, #8]
   18acc:	ldr	x0, [sp, #104]
   18ad0:	ldr	x1, [x0, #16]
   18ad4:	ldrsw	x0, [sp, #84]
   18ad8:	add	x1, x1, x0
   18adc:	ldr	x0, [sp, #104]
   18ae0:	str	x1, [x0, #16]
   18ae4:	ldr	x0, [sp, #96]
   18ae8:	ldr	w1, [x0, #8]
   18aec:	ldr	x0, [sp, #104]
   18af0:	ldr	w0, [x0, #40]
   18af4:	cmp	w1, w0
   18af8:	b.cc	18b94 <gzvprintf@@ZLIB_1.2.7.1+0x29c>  // b.lo, b.ul, b.last
   18afc:	ldr	x0, [sp, #96]
   18b00:	ldr	w1, [x0, #8]
   18b04:	ldr	x0, [sp, #104]
   18b08:	ldr	w0, [x0, #40]
   18b0c:	sub	w0, w1, w0
   18b10:	str	w0, [sp, #80]
   18b14:	ldr	x0, [sp, #104]
   18b18:	ldr	w1, [x0, #40]
   18b1c:	ldr	x0, [sp, #96]
   18b20:	str	w1, [x0, #8]
   18b24:	mov	w1, #0x0                   	// #0
   18b28:	ldr	x0, [sp, #104]
   18b2c:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   18b30:	cmn	w0, #0x1
   18b34:	b.ne	18b44 <gzvprintf@@ZLIB_1.2.7.1+0x24c>  // b.any
   18b38:	ldr	x0, [sp, #104]
   18b3c:	ldr	w0, [x0, #108]
   18b40:	b	18b98 <gzvprintf@@ZLIB_1.2.7.1+0x2a0>
   18b44:	ldr	x0, [sp, #104]
   18b48:	ldr	x3, [x0, #48]
   18b4c:	ldr	x0, [sp, #104]
   18b50:	ldr	x1, [x0, #48]
   18b54:	ldr	x0, [sp, #104]
   18b58:	ldr	w0, [x0, #40]
   18b5c:	mov	w0, w0
   18b60:	add	x0, x1, x0
   18b64:	ldr	w1, [sp, #80]
   18b68:	mov	x2, x1
   18b6c:	mov	x1, x0
   18b70:	mov	x0, x3
   18b74:	bl	23a0 <memcpy@plt>
   18b78:	ldr	x0, [sp, #104]
   18b7c:	ldr	x1, [x0, #48]
   18b80:	ldr	x0, [sp, #96]
   18b84:	str	x1, [x0]
   18b88:	ldr	x0, [sp, #96]
   18b8c:	ldr	w1, [sp, #80]
   18b90:	str	w1, [x0, #8]
   18b94:	ldr	w0, [sp, #84]
   18b98:	ldr	x19, [sp, #16]
   18b9c:	ldp	x29, x30, [sp], #112
   18ba0:	ret

0000000000018ba4 <gzprintf@@Base>:
   18ba4:	stp	x29, x30, [sp, #-288]!
   18ba8:	mov	x29, sp
   18bac:	str	x0, [sp, #56]
   18bb0:	str	x1, [sp, #48]
   18bb4:	str	x2, [sp, #240]
   18bb8:	str	x3, [sp, #248]
   18bbc:	str	x4, [sp, #256]
   18bc0:	str	x5, [sp, #264]
   18bc4:	str	x6, [sp, #272]
   18bc8:	str	x7, [sp, #280]
   18bcc:	str	q0, [sp, #112]
   18bd0:	str	q1, [sp, #128]
   18bd4:	str	q2, [sp, #144]
   18bd8:	str	q3, [sp, #160]
   18bdc:	str	q4, [sp, #176]
   18be0:	str	q5, [sp, #192]
   18be4:	str	q6, [sp, #208]
   18be8:	str	q7, [sp, #224]
   18bec:	add	x0, sp, #0x120
   18bf0:	str	x0, [sp, #72]
   18bf4:	add	x0, sp, #0x120
   18bf8:	str	x0, [sp, #80]
   18bfc:	add	x0, sp, #0xf0
   18c00:	str	x0, [sp, #88]
   18c04:	mov	w0, #0xffffffd0            	// #-48
   18c08:	str	w0, [sp, #96]
   18c0c:	mov	w0, #0xffffff80            	// #-128
   18c10:	str	w0, [sp, #100]
   18c14:	add	x2, sp, #0x10
   18c18:	add	x3, sp, #0x48
   18c1c:	ldp	x0, x1, [x3]
   18c20:	stp	x0, x1, [x2]
   18c24:	ldp	x0, x1, [x3, #16]
   18c28:	stp	x0, x1, [x2, #16]
   18c2c:	add	x0, sp, #0x10
   18c30:	mov	x2, x0
   18c34:	ldr	x1, [sp, #48]
   18c38:	ldr	x0, [sp, #56]
   18c3c:	bl	23c0 <gzvprintf@plt>
   18c40:	str	w0, [sp, #108]
   18c44:	ldr	w0, [sp, #108]
   18c48:	ldp	x29, x30, [sp], #288
   18c4c:	ret

0000000000018c50 <gzflush@@Base>:
   18c50:	stp	x29, x30, [sp, #-48]!
   18c54:	mov	x29, sp
   18c58:	str	x0, [sp, #24]
   18c5c:	str	w1, [sp, #20]
   18c60:	ldr	x0, [sp, #24]
   18c64:	cmp	x0, #0x0
   18c68:	b.ne	18c74 <gzflush@@Base+0x24>  // b.any
   18c6c:	mov	w0, #0xfffffffe            	// #-2
   18c70:	b	18d1c <gzflush@@Base+0xcc>
   18c74:	ldr	x0, [sp, #24]
   18c78:	str	x0, [sp, #40]
   18c7c:	ldr	x0, [sp, #40]
   18c80:	ldr	w1, [x0, #24]
   18c84:	mov	w0, #0x79b1                	// #31153
   18c88:	cmp	w1, w0
   18c8c:	b.ne	18ca0 <gzflush@@Base+0x50>  // b.any
   18c90:	ldr	x0, [sp, #40]
   18c94:	ldr	w0, [x0, #108]
   18c98:	cmp	w0, #0x0
   18c9c:	b.eq	18ca8 <gzflush@@Base+0x58>  // b.none
   18ca0:	mov	w0, #0xfffffffe            	// #-2
   18ca4:	b	18d1c <gzflush@@Base+0xcc>
   18ca8:	ldr	w0, [sp, #20]
   18cac:	cmp	w0, #0x0
   18cb0:	b.lt	18cc0 <gzflush@@Base+0x70>  // b.tstop
   18cb4:	ldr	w0, [sp, #20]
   18cb8:	cmp	w0, #0x4
   18cbc:	b.le	18cc8 <gzflush@@Base+0x78>
   18cc0:	mov	w0, #0xfffffffe            	// #-2
   18cc4:	b	18d1c <gzflush@@Base+0xcc>
   18cc8:	ldr	x0, [sp, #40]
   18ccc:	ldr	w0, [x0, #104]
   18cd0:	cmp	w0, #0x0
   18cd4:	b.eq	18d08 <gzflush@@Base+0xb8>  // b.none
   18cd8:	ldr	x0, [sp, #40]
   18cdc:	str	wzr, [x0, #104]
   18ce0:	ldr	x0, [sp, #40]
   18ce4:	ldr	x0, [x0, #96]
   18ce8:	mov	x1, x0
   18cec:	ldr	x0, [sp, #40]
   18cf0:	bl	18188 <gzclose_r@@ZLIB_1.2.3.5+0x590>
   18cf4:	cmn	w0, #0x1
   18cf8:	b.ne	18d08 <gzflush@@Base+0xb8>  // b.any
   18cfc:	ldr	x0, [sp, #40]
   18d00:	ldr	w0, [x0, #108]
   18d04:	b	18d1c <gzflush@@Base+0xcc>
   18d08:	ldr	w1, [sp, #20]
   18d0c:	ldr	x0, [sp, #40]
   18d10:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   18d14:	ldr	x0, [sp, #40]
   18d18:	ldr	w0, [x0, #108]
   18d1c:	ldp	x29, x30, [sp], #48
   18d20:	ret

0000000000018d24 <gzsetparams@@Base>:
   18d24:	stp	x29, x30, [sp, #-48]!
   18d28:	mov	x29, sp
   18d2c:	str	x0, [sp, #24]
   18d30:	str	w1, [sp, #20]
   18d34:	str	w2, [sp, #16]
   18d38:	ldr	x0, [sp, #24]
   18d3c:	cmp	x0, #0x0
   18d40:	b.ne	18d4c <gzsetparams@@Base+0x28>  // b.any
   18d44:	mov	w0, #0xfffffffe            	// #-2
   18d48:	b	18e68 <gzsetparams@@Base+0x144>
   18d4c:	ldr	x0, [sp, #24]
   18d50:	str	x0, [sp, #40]
   18d54:	ldr	x0, [sp, #40]
   18d58:	add	x0, x0, #0x78
   18d5c:	str	x0, [sp, #32]
   18d60:	ldr	x0, [sp, #40]
   18d64:	ldr	w1, [x0, #24]
   18d68:	mov	w0, #0x79b1                	// #31153
   18d6c:	cmp	w1, w0
   18d70:	b.ne	18d84 <gzsetparams@@Base+0x60>  // b.any
   18d74:	ldr	x0, [sp, #40]
   18d78:	ldr	w0, [x0, #108]
   18d7c:	cmp	w0, #0x0
   18d80:	b.eq	18d8c <gzsetparams@@Base+0x68>  // b.none
   18d84:	mov	w0, #0xfffffffe            	// #-2
   18d88:	b	18e68 <gzsetparams@@Base+0x144>
   18d8c:	ldr	x0, [sp, #40]
   18d90:	ldr	w0, [x0, #88]
   18d94:	ldr	w1, [sp, #20]
   18d98:	cmp	w1, w0
   18d9c:	b.ne	18dbc <gzsetparams@@Base+0x98>  // b.any
   18da0:	ldr	x0, [sp, #40]
   18da4:	ldr	w0, [x0, #92]
   18da8:	ldr	w1, [sp, #16]
   18dac:	cmp	w1, w0
   18db0:	b.ne	18dbc <gzsetparams@@Base+0x98>  // b.any
   18db4:	mov	w0, #0x0                   	// #0
   18db8:	b	18e68 <gzsetparams@@Base+0x144>
   18dbc:	ldr	x0, [sp, #40]
   18dc0:	ldr	w0, [x0, #104]
   18dc4:	cmp	w0, #0x0
   18dc8:	b.eq	18dfc <gzsetparams@@Base+0xd8>  // b.none
   18dcc:	ldr	x0, [sp, #40]
   18dd0:	str	wzr, [x0, #104]
   18dd4:	ldr	x0, [sp, #40]
   18dd8:	ldr	x0, [x0, #96]
   18ddc:	mov	x1, x0
   18de0:	ldr	x0, [sp, #40]
   18de4:	bl	18188 <gzclose_r@@ZLIB_1.2.3.5+0x590>
   18de8:	cmn	w0, #0x1
   18dec:	b.ne	18dfc <gzsetparams@@Base+0xd8>  // b.any
   18df0:	ldr	x0, [sp, #40]
   18df4:	ldr	w0, [x0, #108]
   18df8:	b	18e68 <gzsetparams@@Base+0x144>
   18dfc:	ldr	x0, [sp, #40]
   18e00:	ldr	w0, [x0, #40]
   18e04:	cmp	w0, #0x0
   18e08:	b.eq	18e4c <gzsetparams@@Base+0x128>  // b.none
   18e0c:	ldr	x0, [sp, #32]
   18e10:	ldr	w0, [x0, #8]
   18e14:	cmp	w0, #0x0
   18e18:	b.eq	18e3c <gzsetparams@@Base+0x118>  // b.none
   18e1c:	mov	w1, #0x5                   	// #5
   18e20:	ldr	x0, [sp, #40]
   18e24:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   18e28:	cmn	w0, #0x1
   18e2c:	b.ne	18e3c <gzsetparams@@Base+0x118>  // b.any
   18e30:	ldr	x0, [sp, #40]
   18e34:	ldr	w0, [x0, #108]
   18e38:	b	18e68 <gzsetparams@@Base+0x144>
   18e3c:	ldr	w2, [sp, #16]
   18e40:	ldr	w1, [sp, #20]
   18e44:	ldr	x0, [sp, #32]
   18e48:	bl	24e0 <deflateParams@plt>
   18e4c:	ldr	x0, [sp, #40]
   18e50:	ldr	w1, [sp, #20]
   18e54:	str	w1, [x0, #88]
   18e58:	ldr	x0, [sp, #40]
   18e5c:	ldr	w1, [sp, #16]
   18e60:	str	w1, [x0, #92]
   18e64:	mov	w0, #0x0                   	// #0
   18e68:	ldp	x29, x30, [sp], #48
   18e6c:	ret

0000000000018e70 <gzclose_w@@ZLIB_1.2.3.5>:
   18e70:	stp	x29, x30, [sp, #-48]!
   18e74:	mov	x29, sp
   18e78:	str	x0, [sp, #24]
   18e7c:	str	wzr, [sp, #44]
   18e80:	ldr	x0, [sp, #24]
   18e84:	cmp	x0, #0x0
   18e88:	b.ne	18e94 <gzclose_w@@ZLIB_1.2.3.5+0x24>  // b.any
   18e8c:	mov	w0, #0xfffffffe            	// #-2
   18e90:	b	18fa0 <gzclose_w@@ZLIB_1.2.3.5+0x130>
   18e94:	ldr	x0, [sp, #24]
   18e98:	str	x0, [sp, #32]
   18e9c:	ldr	x0, [sp, #32]
   18ea0:	ldr	w1, [x0, #24]
   18ea4:	mov	w0, #0x79b1                	// #31153
   18ea8:	cmp	w1, w0
   18eac:	b.eq	18eb8 <gzclose_w@@ZLIB_1.2.3.5+0x48>  // b.none
   18eb0:	mov	w0, #0xfffffffe            	// #-2
   18eb4:	b	18fa0 <gzclose_w@@ZLIB_1.2.3.5+0x130>
   18eb8:	ldr	x0, [sp, #32]
   18ebc:	ldr	w0, [x0, #104]
   18ec0:	cmp	w0, #0x0
   18ec4:	b.eq	18ef8 <gzclose_w@@ZLIB_1.2.3.5+0x88>  // b.none
   18ec8:	ldr	x0, [sp, #32]
   18ecc:	str	wzr, [x0, #104]
   18ed0:	ldr	x0, [sp, #32]
   18ed4:	ldr	x0, [x0, #96]
   18ed8:	mov	x1, x0
   18edc:	ldr	x0, [sp, #32]
   18ee0:	bl	18188 <gzclose_r@@ZLIB_1.2.3.5+0x590>
   18ee4:	cmn	w0, #0x1
   18ee8:	b.ne	18ef8 <gzclose_w@@ZLIB_1.2.3.5+0x88>  // b.any
   18eec:	ldr	x0, [sp, #32]
   18ef0:	ldr	w0, [x0, #108]
   18ef4:	str	w0, [sp, #44]
   18ef8:	mov	w1, #0x4                   	// #4
   18efc:	ldr	x0, [sp, #32]
   18f00:	bl	17ea0 <gzclose_r@@ZLIB_1.2.3.5+0x2a8>
   18f04:	cmn	w0, #0x1
   18f08:	b.ne	18f18 <gzclose_w@@ZLIB_1.2.3.5+0xa8>  // b.any
   18f0c:	ldr	x0, [sp, #32]
   18f10:	ldr	w0, [x0, #108]
   18f14:	str	w0, [sp, #44]
   18f18:	ldr	x0, [sp, #32]
   18f1c:	ldr	w0, [x0, #40]
   18f20:	cmp	w0, #0x0
   18f24:	b.eq	18f5c <gzclose_w@@ZLIB_1.2.3.5+0xec>  // b.none
   18f28:	ldr	x0, [sp, #32]
   18f2c:	ldr	w0, [x0, #64]
   18f30:	cmp	w0, #0x0
   18f34:	b.ne	18f50 <gzclose_w@@ZLIB_1.2.3.5+0xe0>  // b.any
   18f38:	ldr	x0, [sp, #32]
   18f3c:	add	x0, x0, #0x78
   18f40:	bl	2590 <deflateEnd@plt>
   18f44:	ldr	x0, [sp, #32]
   18f48:	ldr	x0, [x0, #56]
   18f4c:	bl	2570 <free@plt>
   18f50:	ldr	x0, [sp, #32]
   18f54:	ldr	x0, [x0, #48]
   18f58:	bl	2570 <free@plt>
   18f5c:	mov	x2, #0x0                   	// #0
   18f60:	mov	w1, #0x0                   	// #0
   18f64:	ldr	x0, [sp, #32]
   18f68:	bl	16724 <gzclearerr@@ZLIB_1.2.0.2+0x94>
   18f6c:	ldr	x0, [sp, #32]
   18f70:	ldr	x0, [x0, #32]
   18f74:	bl	2570 <free@plt>
   18f78:	ldr	x0, [sp, #32]
   18f7c:	ldr	w0, [x0, #28]
   18f80:	bl	2510 <close@plt>
   18f84:	cmn	w0, #0x1
   18f88:	b.ne	18f94 <gzclose_w@@ZLIB_1.2.3.5+0x124>  // b.any
   18f8c:	mov	w0, #0xffffffff            	// #-1
   18f90:	str	w0, [sp, #44]
   18f94:	ldr	x0, [sp, #32]
   18f98:	bl	2570 <free@plt>
   18f9c:	ldr	w0, [sp, #44]
   18fa0:	ldp	x29, x30, [sp], #48
   18fa4:	ret

Disassembly of section .fini:

0000000000018fa8 <.fini>:
   18fa8:	stp	x29, x30, [sp, #-16]!
   18fac:	mov	x29, sp
   18fb0:	ldp	x29, x30, [sp], #16
   18fb4:	ret
