
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ext2.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1bc0>:
       0:	sub	sp, sp, #0x10
       4:	strh	w0, [sp, #14]
       8:	ldrh	w0, [sp, #14]
       c:	lsl	w0, w0, #8
      10:	sxth	w1, w0
      14:	ldrh	w0, [sp, #14]
      18:	lsr	w0, w0, #8
      1c:	and	w0, w0, #0xffff
      20:	sxth	w0, w0
      24:	orr	w0, w1, w0
      28:	sxth	w0, w0
      2c:	and	w0, w0, #0xffff
      30:	add	sp, sp, #0x10
      34:	ret
      38:	stp	x29, x30, [sp, #-32]!
      3c:	mov	x29, sp
      40:	str	x0, [sp, #24]
      44:	ldr	x1, [sp, #24]
      48:	adrp	x0, 0 <grub_mod_init-0x1bc0>
      4c:	add	x0, x0, #0x0
      50:	ldr	x0, [x0]
      54:	bl	0 <grub_list_push>
      58:	nop
      5c:	ldp	x29, x30, [sp], #32
      60:	ret
      64:	nop
	...
      70:	stp	x29, x30, [sp, #-32]!
      74:	mov	x29, sp
      78:	str	x0, [sp, #24]
      7c:	ldr	x0, [sp, #24]
      80:	bl	0 <grub_list_remove>
      84:	nop
      88:	ldp	x29, x30, [sp], #32
      8c:	ret
      90:	stp	x29, x30, [sp, #-48]!
      94:	mov	x29, sp
      98:	str	x0, [sp, #40]
      9c:	str	x1, [sp, #32]
      a0:	str	x2, [sp, #24]
      a4:	ldr	x2, [sp, #24]
      a8:	ldr	x1, [sp, #32]
      ac:	ldr	x0, [sp, #40]
      b0:	bl	0 <grub_memmove>
      b4:	ldp	x29, x30, [sp], #48
      b8:	ret
      bc:	sub	sp, sp, #0x20
      c0:	str	x0, [sp, #8]
      c4:	str	w1, [sp, #4]
      c8:	ldr	x1, [sp, #8]
      cc:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
      d0:	cmp	x1, x0
      d4:	b.ls	e0 <grub_mod_init-0x1ae0>  // b.plast
      d8:	mov	w0, #0x0                   	// #0
      dc:	b	120 <grub_mod_init-0x1aa0>
      e0:	mov	x0, #0x1                   	// #1
      e4:	str	x0, [sp, #24]
      e8:	b	fc <grub_mod_init-0x1ac4>
      ec:	ldr	w0, [sp, #4]
      f0:	ldr	x1, [sp, #24]
      f4:	mul	x0, x1, x0
      f8:	str	x0, [sp, #24]
      fc:	ldr	x1, [sp, #24]
     100:	ldr	x0, [sp, #8]
     104:	cmp	x1, x0
     108:	b.ls	ec <grub_mod_init-0x1ad4>  // b.plast
     10c:	ldr	x1, [sp, #24]
     110:	ldr	x0, [sp, #8]
     114:	cmp	x1, x0
     118:	cset	w0, eq  // eq = none
     11c:	and	w0, w0, #0xff
     120:	add	sp, sp, #0x20
     124:	ret
     128:	stp	x29, x30, [sp, #-32]!
     12c:	mov	x29, sp
     130:	str	x0, [sp, #24]
     134:	str	x1, [sp, #16]
     138:	ldr	x0, [sp, #24]
     13c:	ldr	w0, [x0, #100]
     140:	and	w0, w0, #0x1
     144:	cmp	w0, #0x0
     148:	b.ne	154 <grub_mod_init-0x1a6c>  // b.any
     14c:	mov	w0, #0x1                   	// #1
     150:	b	1c8 <grub_mod_init-0x19f8>
     154:	ldr	x0, [sp, #16]
     158:	cmp	x0, #0x1
     15c:	b.hi	168 <grub_mod_init-0x1a58>  // b.pmore
     160:	mov	w0, #0x1                   	// #1
     164:	b	1c8 <grub_mod_init-0x19f8>
     168:	ldr	x0, [sp, #16]
     16c:	and	x0, x0, #0x1
     170:	cmp	x0, #0x0
     174:	b.ne	180 <grub_mod_init-0x1a40>  // b.any
     178:	mov	w0, #0x0                   	// #0
     17c:	b	1c8 <grub_mod_init-0x19f8>
     180:	mov	w1, #0x7                   	// #7
     184:	ldr	x0, [sp, #16]
     188:	bl	bc <grub_mod_init-0x1b04>
     18c:	cmp	w0, #0x0
     190:	b.ne	1bc <grub_mod_init-0x1a04>  // b.any
     194:	mov	w1, #0x5                   	// #5
     198:	ldr	x0, [sp, #16]
     19c:	bl	bc <grub_mod_init-0x1b04>
     1a0:	cmp	w0, #0x0
     1a4:	b.ne	1bc <grub_mod_init-0x1a04>  // b.any
     1a8:	mov	w1, #0x3                   	// #3
     1ac:	ldr	x0, [sp, #16]
     1b0:	bl	bc <grub_mod_init-0x1b04>
     1b4:	cmp	w0, #0x0
     1b8:	b.eq	1c4 <grub_mod_init-0x19fc>  // b.none
     1bc:	mov	w0, #0x1                   	// #1
     1c0:	b	1c8 <grub_mod_init-0x19f8>
     1c4:	mov	w0, #0x0                   	// #0
     1c8:	ldp	x29, x30, [sp], #32
     1cc:	ret
     1d0:	stp	x29, x30, [sp, #-80]!
     1d4:	mov	x29, sp
     1d8:	str	x0, [sp, #40]
     1dc:	str	x1, [sp, #32]
     1e0:	str	x2, [sp, #24]
     1e4:	ldr	x0, [sp, #40]
     1e8:	ldr	w0, [x0, #336]
     1ec:	ldr	x1, [sp, #32]
     1f0:	lsl	x0, x1, x0
     1f4:	str	x0, [sp, #64]
     1f8:	ldr	x0, [sp, #40]
     1fc:	ldr	w0, [x0, #24]
     200:	add	w0, w0, #0xa
     204:	ldr	x1, [sp, #64]
     208:	lsr	x0, x1, x0
     20c:	str	x0, [sp, #72]
     210:	ldr	x0, [sp, #40]
     214:	ldr	w0, [x0, #24]
     218:	add	w0, w0, #0xa
     21c:	mov	w1, #0x1                   	// #1
     220:	lsl	w0, w1, w0
     224:	sub	w0, w0, #0x1
     228:	sxtw	x0, w0
     22c:	ldr	x1, [sp, #64]
     230:	and	x0, x1, x0
     234:	str	x0, [sp, #56]
     238:	ldr	x0, [sp, #40]
     23c:	ldr	w0, [x0, #96]
     240:	and	w0, w0, #0x10
     244:	cmp	w0, #0x0
     248:	b.eq	2c4 <grub_mod_init-0x18fc>  // b.none
     24c:	ldr	x0, [sp, #40]
     250:	ldr	w0, [x0, #260]
     254:	mov	w0, w0
     258:	ldr	x1, [sp, #72]
     25c:	cmp	x1, x0
     260:	b.cc	2c4 <grub_mod_init-0x18fc>  // b.lo, b.ul, b.last
     264:	ldr	x0, [sp, #40]
     268:	ldr	w0, [x0, #24]
     26c:	ldr	x1, [sp, #40]
     270:	ldr	w1, [x1, #336]
     274:	sub	w0, w0, w1
     278:	add	w0, w0, #0xa
     27c:	ldr	x1, [sp, #72]
     280:	lsl	x0, x1, x0
     284:	str	x0, [sp, #48]
     288:	ldr	x0, [sp, #40]
     28c:	ldr	w0, [x0, #32]
     290:	mov	w0, w0
     294:	ldr	x1, [sp, #48]
     298:	mul	x0, x1, x0
     29c:	str	x0, [sp, #72]
     2a0:	ldr	x1, [sp, #48]
     2a4:	ldr	x0, [sp, #40]
     2a8:	bl	128 <grub_mod_init-0x1a98>
     2ac:	cmp	w0, #0x0
     2b0:	b.eq	2d4 <grub_mod_init-0x18ec>  // b.none
     2b4:	ldr	x0, [sp, #72]
     2b8:	add	x0, x0, #0x1
     2bc:	str	x0, [sp, #72]
     2c0:	b	2d4 <grub_mod_init-0x18ec>
     2c4:	ldr	x0, [sp, #72]
     2c8:	add	x0, x0, #0x1
     2cc:	str	x0, [sp, #72]
     2d0:	b	2d8 <grub_mod_init-0x18e8>
     2d4:	nop
     2d8:	ldr	x0, [sp, #40]
     2dc:	ldr	x5, [x0, #344]
     2e0:	ldr	x0, [sp, #40]
     2e4:	ldr	w0, [x0, #20]
     2e8:	mov	w1, w0
     2ec:	ldr	x0, [sp, #72]
     2f0:	add	x1, x1, x0
     2f4:	ldr	x0, [sp, #40]
     2f8:	ldr	w0, [x0, #24]
     2fc:	add	w0, w0, #0x1
     300:	lsl	x0, x1, x0
     304:	ldr	x4, [sp, #24]
     308:	mov	x3, #0x40                  	// #64
     30c:	ldr	x2, [sp, #56]
     310:	mov	x1, x0
     314:	mov	x0, x5
     318:	bl	0 <grub_disk_read>
     31c:	ldp	x29, x30, [sp], #80
     320:	ret
     324:	stp	x29, x30, [sp, #-80]!
     328:	mov	x29, sp
     32c:	str	x0, [sp, #40]
     330:	str	x1, [sp, #32]
     334:	str	w2, [sp, #28]
     338:	str	xzr, [sp, #72]
     33c:	ldr	x0, [sp, #32]
     340:	add	x0, x0, #0xc
     344:	str	x0, [sp, #56]
     348:	ldr	x0, [sp, #32]
     34c:	ldrh	w1, [x0]
     350:	mov	w0, #0xf30a                	// #62218
     354:	cmp	w1, w0
     358:	b.ne	4ec <grub_mod_init-0x16d4>  // b.any
     35c:	ldr	x0, [sp, #32]
     360:	ldrh	w0, [x0, #6]
     364:	cmp	w0, #0x0
     368:	b.ne	374 <grub_mod_init-0x184c>  // b.any
     36c:	ldr	x0, [sp, #32]
     370:	b	514 <grub_mod_init-0x16ac>
     374:	str	wzr, [sp, #68]
     378:	b	3b8 <grub_mod_init-0x1808>
     37c:	ldrsw	x1, [sp, #68]
     380:	mov	x0, x1
     384:	lsl	x0, x0, #1
     388:	add	x0, x0, x1
     38c:	lsl	x0, x0, #2
     390:	mov	x1, x0
     394:	ldr	x0, [sp, #56]
     398:	add	x0, x0, x1
     39c:	ldr	w0, [x0]
     3a0:	ldr	w1, [sp, #28]
     3a4:	cmp	w1, w0
     3a8:	b.cc	3d4 <grub_mod_init-0x17ec>  // b.lo, b.ul, b.last
     3ac:	ldr	w0, [sp, #68]
     3b0:	add	w0, w0, #0x1
     3b4:	str	w0, [sp, #68]
     3b8:	ldr	x0, [sp, #32]
     3bc:	ldrh	w0, [x0, #2]
     3c0:	mov	w1, w0
     3c4:	ldr	w0, [sp, #68]
     3c8:	cmp	w0, w1
     3cc:	b.lt	37c <grub_mod_init-0x1844>  // b.tstop
     3d0:	b	3d8 <grub_mod_init-0x17e8>
     3d4:	nop
     3d8:	ldr	w0, [sp, #68]
     3dc:	sub	w0, w0, #0x1
     3e0:	str	w0, [sp, #68]
     3e4:	ldr	w0, [sp, #68]
     3e8:	cmp	w0, #0x0
     3ec:	b.lt	4f4 <grub_mod_init-0x16cc>  // b.tstop
     3f0:	ldrsw	x1, [sp, #68]
     3f4:	mov	x0, x1
     3f8:	lsl	x0, x0, #1
     3fc:	add	x0, x0, x1
     400:	lsl	x0, x0, #2
     404:	mov	x1, x0
     408:	ldr	x0, [sp, #56]
     40c:	add	x0, x0, x1
     410:	ldrh	w0, [x0, #8]
     414:	and	x0, x0, #0xffff
     418:	str	x0, [sp, #48]
     41c:	ldr	x0, [sp, #48]
     420:	lsl	x2, x0, #32
     424:	ldrsw	x1, [sp, #68]
     428:	mov	x0, x1
     42c:	lsl	x0, x0, #1
     430:	add	x0, x0, x1
     434:	lsl	x0, x0, #2
     438:	mov	x1, x0
     43c:	ldr	x0, [sp, #56]
     440:	add	x0, x0, x1
     444:	ldr	w0, [x0, #4]
     448:	mov	w0, w0
     44c:	orr	x0, x2, x0
     450:	str	x0, [sp, #48]
     454:	ldr	x0, [sp, #72]
     458:	cmp	x0, #0x0
     45c:	b.ne	480 <grub_mod_init-0x1740>  // b.any
     460:	ldr	x0, [sp, #40]
     464:	ldr	w0, [x0, #24]
     468:	add	w0, w0, #0xa
     46c:	mov	w1, #0x1                   	// #1
     470:	lsl	w0, w1, w0
     474:	mov	w0, w0
     478:	bl	0 <grub_malloc>
     47c:	str	x0, [sp, #72]
     480:	ldr	x0, [sp, #72]
     484:	cmp	x0, #0x0
     488:	b.eq	4fc <grub_mod_init-0x16c4>  // b.none
     48c:	ldr	x0, [sp, #40]
     490:	ldr	x5, [x0, #344]
     494:	ldr	x0, [sp, #40]
     498:	ldr	w0, [x0, #24]
     49c:	add	w0, w0, #0x1
     4a0:	ldr	x1, [sp, #48]
     4a4:	lsl	x6, x1, x0
     4a8:	ldr	x0, [sp, #40]
     4ac:	ldr	w0, [x0, #24]
     4b0:	add	w0, w0, #0xa
     4b4:	mov	w1, #0x1                   	// #1
     4b8:	lsl	w0, w1, w0
     4bc:	mov	w0, w0
     4c0:	ldr	x4, [sp, #72]
     4c4:	mov	x3, x0
     4c8:	mov	x2, #0x0                   	// #0
     4cc:	mov	x1, x6
     4d0:	mov	x0, x5
     4d4:	bl	0 <grub_disk_read>
     4d8:	cmp	w0, #0x0
     4dc:	b.ne	504 <grub_mod_init-0x16bc>  // b.any
     4e0:	ldr	x0, [sp, #72]
     4e4:	str	x0, [sp, #32]
     4e8:	b	33c <grub_mod_init-0x1884>
     4ec:	nop
     4f0:	b	508 <grub_mod_init-0x16b8>
     4f4:	nop
     4f8:	b	508 <grub_mod_init-0x16b8>
     4fc:	nop
     500:	b	508 <grub_mod_init-0x16b8>
     504:	nop
     508:	ldr	x0, [sp, #72]
     50c:	bl	0 <grub_free>
     510:	mov	x0, #0x0                   	// #0
     514:	ldp	x29, x30, [sp], #80
     518:	ret
     51c:	stp	x29, x30, [sp, #-128]!
     520:	mov	x29, sp
     524:	str	x0, [sp, #24]
     528:	str	x1, [sp, #16]
     52c:	ldr	x0, [sp, #24]
     530:	ldr	x0, [x0]
     534:	str	x0, [sp, #104]
     538:	ldr	x0, [sp, #24]
     53c:	add	x0, x0, #0x8
     540:	str	x0, [sp, #96]
     544:	ldr	x0, [sp, #104]
     548:	ldr	w0, [x0, #24]
     54c:	add	w0, w0, #0xa
     550:	mov	w1, #0x1                   	// #1
     554:	lsl	w0, w1, w0
     558:	str	w0, [sp, #92]
     55c:	ldr	w0, [sp, #92]
     560:	lsr	w0, w0, #2
     564:	mov	w0, w0
     568:	str	x0, [sp, #80]
     56c:	ldr	x0, [sp, #104]
     570:	ldr	w0, [x0, #24]
     574:	add	w0, w0, #0x1
     578:	str	w0, [sp, #76]
     57c:	ldr	w0, [sp, #76]
     580:	add	w0, w0, #0x7
     584:	str	w0, [sp, #72]
     588:	ldr	x0, [sp, #96]
     58c:	ldr	w0, [x0, #32]
     590:	and	w0, w0, #0x80000
     594:	cmp	w0, #0x0
     598:	b.eq	798 <grub_mod_init-0x1428>  // b.none
     59c:	ldr	x0, [sp, #96]
     5a0:	add	x0, x0, #0x28
     5a4:	ldr	x1, [sp, #16]
     5a8:	mov	w2, w1
     5ac:	mov	x1, x0
     5b0:	ldr	x0, [sp, #104]
     5b4:	bl	324 <grub_mod_init-0x189c>
     5b8:	str	x0, [sp, #64]
     5bc:	ldr	x0, [sp, #64]
     5c0:	cmp	x0, #0x0
     5c4:	b.ne	5e4 <grub_mod_init-0x15dc>  // b.any
     5c8:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     5cc:	add	x0, x0, #0x0
     5d0:	ldr	x1, [x0]
     5d4:	mov	w0, #0x9                   	// #9
     5d8:	bl	0 <grub_error>
     5dc:	mov	x0, #0xffffffffffffffff    	// #-1
     5e0:	b	940 <grub_mod_init-0x1280>
     5e4:	ldr	x0, [sp, #64]
     5e8:	add	x0, x0, #0xc
     5ec:	str	x0, [sp, #56]
     5f0:	str	wzr, [sp, #120]
     5f4:	b	638 <grub_mod_init-0x1588>
     5f8:	ldrsw	x1, [sp, #120]
     5fc:	mov	x0, x1
     600:	lsl	x0, x0, #1
     604:	add	x0, x0, x1
     608:	lsl	x0, x0, #2
     60c:	mov	x1, x0
     610:	ldr	x0, [sp, #56]
     614:	add	x0, x0, x1
     618:	ldr	w0, [x0]
     61c:	mov	w0, w0
     620:	ldr	x1, [sp, #16]
     624:	cmp	x1, x0
     628:	b.cc	654 <grub_mod_init-0x156c>  // b.lo, b.ul, b.last
     62c:	ldr	w0, [sp, #120]
     630:	add	w0, w0, #0x1
     634:	str	w0, [sp, #120]
     638:	ldr	x0, [sp, #64]
     63c:	ldrh	w0, [x0, #2]
     640:	mov	w1, w0
     644:	ldr	w0, [sp, #120]
     648:	cmp	w0, w1
     64c:	b.lt	5f8 <grub_mod_init-0x15c8>  // b.tstop
     650:	b	658 <grub_mod_init-0x1568>
     654:	nop
     658:	ldr	w0, [sp, #120]
     65c:	sub	w0, w0, #0x1
     660:	str	w0, [sp, #120]
     664:	ldr	w0, [sp, #120]
     668:	cmp	w0, #0x0
     66c:	b.lt	758 <grub_mod_init-0x1468>  // b.tstop
     670:	ldrsw	x1, [sp, #120]
     674:	mov	x0, x1
     678:	lsl	x0, x0, #1
     67c:	add	x0, x0, x1
     680:	lsl	x0, x0, #2
     684:	mov	x1, x0
     688:	ldr	x0, [sp, #56]
     68c:	add	x0, x0, x1
     690:	ldr	w0, [x0]
     694:	mov	w0, w0
     698:	ldr	x1, [sp, #16]
     69c:	sub	x0, x1, x0
     6a0:	str	x0, [sp, #16]
     6a4:	ldrsw	x1, [sp, #120]
     6a8:	mov	x0, x1
     6ac:	lsl	x0, x0, #1
     6b0:	add	x0, x0, x1
     6b4:	lsl	x0, x0, #2
     6b8:	mov	x1, x0
     6bc:	ldr	x0, [sp, #56]
     6c0:	add	x0, x0, x1
     6c4:	ldrh	w0, [x0, #4]
     6c8:	and	x0, x0, #0xffff
     6cc:	ldr	x1, [sp, #16]
     6d0:	cmp	x1, x0
     6d4:	b.cc	6e0 <grub_mod_init-0x14e0>  // b.lo, b.ul, b.last
     6d8:	str	xzr, [sp, #112]
     6dc:	b	774 <grub_mod_init-0x144c>
     6e0:	ldrsw	x1, [sp, #120]
     6e4:	mov	x0, x1
     6e8:	lsl	x0, x0, #1
     6ec:	add	x0, x0, x1
     6f0:	lsl	x0, x0, #2
     6f4:	mov	x1, x0
     6f8:	ldr	x0, [sp, #56]
     6fc:	add	x0, x0, x1
     700:	ldrh	w0, [x0, #6]
     704:	and	x0, x0, #0xffff
     708:	str	x0, [sp, #48]
     70c:	ldr	x0, [sp, #48]
     710:	lsl	x2, x0, #32
     714:	ldrsw	x1, [sp, #120]
     718:	mov	x0, x1
     71c:	lsl	x0, x0, #1
     720:	add	x0, x0, x1
     724:	lsl	x0, x0, #2
     728:	mov	x1, x0
     72c:	ldr	x0, [sp, #56]
     730:	add	x0, x0, x1
     734:	ldr	w0, [x0, #8]
     738:	mov	w0, w0
     73c:	add	x0, x2, x0
     740:	str	x0, [sp, #48]
     744:	ldr	x1, [sp, #16]
     748:	ldr	x0, [sp, #48]
     74c:	add	x0, x1, x0
     750:	str	x0, [sp, #112]
     754:	b	774 <grub_mod_init-0x144c>
     758:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     75c:	add	x0, x0, #0x0
     760:	ldr	x1, [x0]
     764:	mov	w0, #0x9                   	// #9
     768:	bl	0 <grub_error>
     76c:	mov	x0, #0xffffffffffffffff    	// #-1
     770:	str	x0, [sp, #112]
     774:	ldr	x0, [sp, #96]
     778:	add	x0, x0, #0x28
     77c:	ldr	x1, [sp, #64]
     780:	cmp	x1, x0
     784:	b.eq	790 <grub_mod_init-0x1430>  // b.none
     788:	ldr	x0, [sp, #64]
     78c:	bl	0 <grub_free>
     790:	ldr	x0, [sp, #112]
     794:	b	940 <grub_mod_init-0x1280>
     798:	ldr	x0, [sp, #16]
     79c:	cmp	x0, #0xb
     7a0:	b.hi	7c4 <grub_mod_init-0x13fc>  // b.pmore
     7a4:	ldr	x1, [sp, #96]
     7a8:	ldr	x0, [sp, #16]
     7ac:	add	x0, x0, #0x8
     7b0:	lsl	x0, x0, #2
     7b4:	add	x0, x1, x0
     7b8:	ldr	w0, [x0, #8]
     7bc:	mov	w0, w0
     7c0:	b	940 <grub_mod_init-0x1280>
     7c4:	ldr	x0, [sp, #16]
     7c8:	sub	x0, x0, #0xc
     7cc:	str	x0, [sp, #16]
     7d0:	ldr	x1, [sp, #16]
     7d4:	ldr	x0, [sp, #80]
     7d8:	cmp	x1, x0
     7dc:	b.cs	7f4 <grub_mod_init-0x13cc>  // b.hs, b.nlast
     7e0:	ldr	x0, [sp, #96]
     7e4:	ldr	w0, [x0, #88]
     7e8:	str	w0, [sp, #44]
     7ec:	str	wzr, [sp, #124]
     7f0:	b	89c <grub_mod_init-0x1324>
     7f4:	ldr	x1, [sp, #16]
     7f8:	ldr	x0, [sp, #80]
     7fc:	sub	x0, x1, x0
     800:	str	x0, [sp, #16]
     804:	ldr	x0, [sp, #80]
     808:	mul	x0, x0, x0
     80c:	ldr	x1, [sp, #16]
     810:	cmp	x1, x0
     814:	b.cs	830 <grub_mod_init-0x1390>  // b.hs, b.nlast
     818:	ldr	x0, [sp, #96]
     81c:	ldr	w0, [x0, #92]
     820:	str	w0, [sp, #44]
     824:	mov	w0, #0x1                   	// #1
     828:	str	w0, [sp, #124]
     82c:	b	89c <grub_mod_init-0x1324>
     830:	ldr	x0, [sp, #80]
     834:	mul	x0, x0, x0
     838:	ldr	x1, [sp, #16]
     83c:	sub	x0, x1, x0
     840:	str	x0, [sp, #16]
     844:	ldr	x0, [sp, #80]
     848:	mul	x1, x0, x0
     84c:	ldr	x0, [sp, #80]
     850:	add	x0, x0, #0x1
     854:	mul	x0, x1, x0
     858:	ldr	x1, [sp, #16]
     85c:	cmp	x1, x0
     860:	b.cs	87c <grub_mod_init-0x1344>  // b.hs, b.nlast
     864:	ldr	x0, [sp, #96]
     868:	ldr	w0, [x0, #96]
     86c:	str	w0, [sp, #44]
     870:	mov	w0, #0x2                   	// #2
     874:	str	w0, [sp, #124]
     878:	b	89c <grub_mod_init-0x1324>
     87c:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     880:	add	x0, x0, #0x0
     884:	ldr	x1, [x0]
     888:	mov	w0, #0x9                   	// #9
     88c:	bl	0 <grub_error>
     890:	mov	x0, #0xffffffffffffffff    	// #-1
     894:	b	940 <grub_mod_init-0x1280>
     898:	nop
     89c:	ldr	w0, [sp, #44]
     8a0:	cmp	w0, #0x0
     8a4:	b.ne	8b0 <grub_mod_init-0x1310>  // b.any
     8a8:	mov	x0, #0x0                   	// #0
     8ac:	b	940 <grub_mod_init-0x1280>
     8b0:	ldr	x0, [sp, #104]
     8b4:	ldr	x5, [x0, #344]
     8b8:	ldr	w0, [sp, #44]
     8bc:	mov	w1, w0
     8c0:	ldr	w0, [sp, #76]
     8c4:	lsl	x6, x1, x0
     8c8:	ldr	w1, [sp, #72]
     8cc:	ldr	w0, [sp, #124]
     8d0:	mul	w0, w1, w0
     8d4:	ldr	x1, [sp, #16]
     8d8:	lsr	x1, x1, x0
     8dc:	ldr	w0, [sp, #72]
     8e0:	mov	w2, #0x1                   	// #1
     8e4:	lsl	w0, w2, w0
     8e8:	sub	w0, w0, #0x1
     8ec:	sxtw	x0, w0
     8f0:	and	x0, x1, x0
     8f4:	lsl	x0, x0, #2
     8f8:	add	x1, sp, #0x2c
     8fc:	mov	x4, x1
     900:	mov	x3, #0x4                   	// #4
     904:	mov	x2, x0
     908:	mov	x1, x6
     90c:	mov	x0, x5
     910:	bl	0 <grub_disk_read>
     914:	cmp	w0, #0x0
     918:	b.eq	924 <grub_mod_init-0x129c>  // b.none
     91c:	mov	x0, #0xffffffffffffffff    	// #-1
     920:	b	940 <grub_mod_init-0x1280>
     924:	ldr	w0, [sp, #124]
     928:	sub	w1, w0, #0x1
     92c:	str	w1, [sp, #124]
     930:	cmp	w0, #0x0
     934:	b.ne	898 <grub_mod_init-0x1328>  // b.any
     938:	ldr	w0, [sp, #44]
     93c:	mov	w0, w0
     940:	ldp	x29, x30, [sp], #128
     944:	ret
	...
     960:	sub	sp, sp, #0x60
     964:	stp	x29, x30, [sp, #32]
     968:	add	x29, sp, #0x20
     96c:	str	x0, [sp, #88]
     970:	str	x1, [sp, #80]
     974:	str	x2, [sp, #72]
     978:	str	x3, [sp, #64]
     97c:	str	x4, [sp, #56]
     980:	str	x5, [sp, #48]
     984:	ldr	x0, [sp, #88]
     988:	ldr	x0, [x0]
     98c:	ldr	x8, [x0, #344]
     990:	ldr	x0, [sp, #88]
     994:	ldr	w0, [x0, #12]
     998:	mov	w1, w0
     99c:	ldr	x0, [sp, #88]
     9a0:	ldr	w0, [x0, #116]
     9a4:	mov	w0, w0
     9a8:	lsl	x0, x0, #32
     9ac:	orr	x0, x1, x0
     9b0:	ldr	x1, [sp, #88]
     9b4:	ldr	x1, [x1]
     9b8:	ldr	w1, [x1, #24]
     9bc:	add	w1, w1, #0x1
     9c0:	str	xzr, [sp, #16]
     9c4:	str	w1, [sp, #8]
     9c8:	str	x0, [sp]
     9cc:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     9d0:	add	x0, x0, #0x0
     9d4:	ldr	x7, [x0]
     9d8:	ldr	x6, [sp, #48]
     9dc:	ldr	x5, [sp, #56]
     9e0:	ldr	x4, [sp, #64]
     9e4:	ldr	x3, [sp, #72]
     9e8:	ldr	x2, [sp, #80]
     9ec:	ldr	x1, [sp, #88]
     9f0:	mov	x0, x8
     9f4:	bl	0 <grub_fshelp_read_file>
     9f8:	ldp	x29, x30, [sp, #32]
     9fc:	add	sp, sp, #0x60
     a00:	ret
     a04:	nop
	...
     a10:	stp	x29, x30, [sp, #-144]!
     a14:	mov	x29, sp
     a18:	str	x0, [sp, #40]
     a1c:	str	w1, [sp, #36]
     a20:	str	x2, [sp, #24]
     a24:	ldr	x0, [sp, #40]
     a28:	str	x0, [sp, #128]
     a2c:	ldr	w0, [sp, #36]
     a30:	sub	w0, w0, #0x1
     a34:	str	w0, [sp, #36]
     a38:	ldr	w1, [sp, #36]
     a3c:	ldr	x0, [sp, #128]
     a40:	ldr	w0, [x0, #40]
     a44:	udiv	w0, w1, w0
     a48:	mov	w0, w0
     a4c:	add	x1, sp, #0x30
     a50:	mov	x2, x1
     a54:	mov	x1, x0
     a58:	ldr	x0, [sp, #40]
     a5c:	bl	1d0 <grub_mod_init-0x19f0>
     a60:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     a64:	add	x0, x0, #0x0
     a68:	ldr	x0, [x0]
     a6c:	ldr	w0, [x0]
     a70:	cmp	w0, #0x0
     a74:	b.eq	a8c <grub_mod_init-0x1134>  // b.none
     a78:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     a7c:	add	x0, x0, #0x0
     a80:	ldr	x0, [x0]
     a84:	ldr	w0, [x0]
     a88:	b	bd4 <grub_mod_init-0xfec>
     a8c:	ldr	x0, [sp, #40]
     a90:	ldr	w0, [x0, #24]
     a94:	add	w0, w0, #0xa
     a98:	mov	w1, #0x1                   	// #1
     a9c:	lsl	w1, w1, w0
     aa0:	ldr	x0, [sp, #40]
     aa4:	ldr	w0, [x0, #76]
     aa8:	cmp	w0, #0x0
     aac:	b.eq	abc <grub_mod_init-0x1104>  // b.none
     ab0:	ldr	x0, [sp, #40]
     ab4:	ldrh	w0, [x0, #88]
     ab8:	b	ac0 <grub_mod_init-0x1100>
     abc:	mov	w0, #0x80                  	// #128
     ac0:	udiv	w0, w1, w0
     ac4:	str	w0, [sp, #124]
     ac8:	ldr	w0, [sp, #36]
     acc:	ldr	x1, [sp, #128]
     ad0:	ldr	w1, [x1, #40]
     ad4:	udiv	w2, w0, w1
     ad8:	mul	w1, w2, w1
     adc:	sub	w1, w0, w1
     ae0:	ldr	w0, [sp, #124]
     ae4:	udiv	w0, w1, w0
     ae8:	str	w0, [sp, #120]
     aec:	ldr	w0, [sp, #36]
     af0:	ldr	x1, [sp, #128]
     af4:	ldr	w1, [x1, #40]
     af8:	udiv	w2, w0, w1
     afc:	mul	w1, w2, w1
     b00:	sub	w0, w0, w1
     b04:	ldr	w1, [sp, #124]
     b08:	udiv	w2, w0, w1
     b0c:	mul	w1, w2, w1
     b10:	sub	w0, w0, w1
     b14:	str	w0, [sp, #116]
     b18:	ldr	w0, [sp, #56]
     b1c:	mov	w0, w0
     b20:	str	x0, [sp, #136]
     b24:	ldr	x0, [sp, #40]
     b28:	ldr	w0, [x0, #336]
     b2c:	cmp	w0, #0x5
     b30:	b.le	b4c <grub_mod_init-0x1074>
     b34:	ldr	w0, [sp, #88]
     b38:	mov	w0, w0
     b3c:	lsl	x0, x0, #32
     b40:	ldr	x1, [sp, #136]
     b44:	orr	x0, x1, x0
     b48:	str	x0, [sp, #136]
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	x5, [x0, #344]
     b54:	ldr	w1, [sp, #120]
     b58:	ldr	x0, [sp, #136]
     b5c:	add	x1, x1, x0
     b60:	ldr	x0, [sp, #40]
     b64:	ldr	w0, [x0, #24]
     b68:	add	w0, w0, #0x1
     b6c:	lsl	x6, x1, x0
     b70:	ldr	x0, [sp, #40]
     b74:	ldr	w0, [x0, #76]
     b78:	cmp	w0, #0x0
     b7c:	b.eq	b8c <grub_mod_init-0x1034>  // b.none
     b80:	ldr	x0, [sp, #40]
     b84:	ldrh	w0, [x0, #88]
     b88:	b	b90 <grub_mod_init-0x1030>
     b8c:	mov	w0, #0x80                  	// #128
     b90:	ldr	w1, [sp, #116]
     b94:	mul	w0, w0, w1
     b98:	mov	w0, w0
     b9c:	ldr	x4, [sp, #24]
     ba0:	mov	x3, #0x80                  	// #128
     ba4:	mov	x2, x0
     ba8:	mov	x1, x6
     bac:	mov	x0, x5
     bb0:	bl	0 <grub_disk_read>
     bb4:	cmp	w0, #0x0
     bb8:	b.eq	bd0 <grub_mod_init-0xff0>  // b.none
     bbc:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     bc0:	add	x0, x0, #0x0
     bc4:	ldr	x0, [x0]
     bc8:	ldr	w0, [x0]
     bcc:	b	bd4 <grub_mod_init-0xfec>
     bd0:	mov	w0, #0x0                   	// #0
     bd4:	ldp	x29, x30, [sp], #144
     bd8:	ret
     bdc:	nop
	...
     be8:	stp	x29, x30, [sp, #-48]!
     bec:	mov	x29, sp
     bf0:	str	x0, [sp, #24]
     bf4:	mov	x0, #0x1f8                 	// #504
     bf8:	bl	0 <grub_malloc>
     bfc:	str	x0, [sp, #40]
     c00:	ldr	x0, [sp, #40]
     c04:	cmp	x0, #0x0
     c08:	b.ne	c14 <grub_mod_init-0xfac>  // b.any
     c0c:	mov	x0, #0x0                   	// #0
     c10:	b	ec4 <grub_mod_init-0xcfc>
     c14:	ldr	x0, [sp, #40]
     c18:	mov	x4, x0
     c1c:	mov	x3, #0x150                 	// #336
     c20:	mov	x2, #0x0                   	// #0
     c24:	mov	x1, #0x2                   	// #2
     c28:	ldr	x0, [sp, #24]
     c2c:	bl	0 <grub_disk_read>
     c30:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     c34:	add	x0, x0, #0x0
     c38:	ldr	x0, [x0]
     c3c:	ldr	w0, [x0]
     c40:	cmp	w0, #0x0
     c44:	b.ne	e80 <grub_mod_init-0xd40>  // b.any
     c48:	ldr	x0, [sp, #40]
     c4c:	ldrh	w1, [x0, #56]
     c50:	mov	w0, #0xef53                	// #61267
     c54:	cmp	w1, w0
     c58:	b.ne	ce8 <grub_mod_init-0xed8>  // b.any
     c5c:	ldr	x0, [sp, #40]
     c60:	ldr	w0, [x0, #24]
     c64:	cmp	w0, #0xf
     c68:	b.hi	ce8 <grub_mod_init-0xed8>  // b.pmore
     c6c:	ldr	x0, [sp, #40]
     c70:	ldr	w0, [x0, #40]
     c74:	cmp	w0, #0x0
     c78:	b.eq	ce8 <grub_mod_init-0xed8>  // b.none
     c7c:	ldr	x0, [sp, #40]
     c80:	ldr	w0, [x0, #24]
     c84:	cmp	w0, #0x14
     c88:	b.hi	ce8 <grub_mod_init-0xed8>  // b.pmore
     c8c:	ldr	x0, [sp, #40]
     c90:	ldr	w0, [x0, #76]
     c94:	cmp	w0, #0x0
     c98:	b.eq	cac <grub_mod_init-0xf14>  // b.none
     c9c:	ldr	x0, [sp, #40]
     ca0:	ldrh	w0, [x0, #88]
     ca4:	cmp	w0, #0x0
     ca8:	b.eq	ce8 <grub_mod_init-0xed8>  // b.none
     cac:	ldr	x0, [sp, #40]
     cb0:	ldr	w0, [x0, #24]
     cb4:	add	w0, w0, #0xa
     cb8:	mov	w1, #0x1                   	// #1
     cbc:	lsl	w1, w1, w0
     cc0:	ldr	x0, [sp, #40]
     cc4:	ldr	w0, [x0, #76]
     cc8:	cmp	w0, #0x0
     ccc:	b.eq	cdc <grub_mod_init-0xee4>  // b.none
     cd0:	ldr	x0, [sp, #40]
     cd4:	ldrh	w0, [x0, #88]
     cd8:	b	ce0 <grub_mod_init-0xee0>
     cdc:	mov	w0, #0x80                  	// #128
     ce0:	cmp	w0, w1
     ce4:	b.ls	d00 <grub_mod_init-0xec0>  // b.plast
     ce8:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     cec:	add	x0, x0, #0x0
     cf0:	ldr	x1, [x0]
     cf4:	mov	w0, #0x9                   	// #9
     cf8:	bl	0 <grub_error>
     cfc:	b	e8c <grub_mod_init-0xd34>
     d00:	ldr	x0, [sp, #40]
     d04:	ldr	w0, [x0, #76]
     d08:	cmp	w0, #0x0
     d0c:	b.eq	d44 <grub_mod_init-0xe7c>  // b.none
     d10:	ldr	x0, [sp, #40]
     d14:	ldr	w1, [x0, #96]
     d18:	mov	w0, #0xfc29                	// #64553
     d1c:	movk	w0, #0xfffe, lsl #16
     d20:	and	w0, w1, w0
     d24:	cmp	w0, #0x0
     d28:	b.eq	d44 <grub_mod_init-0xe7c>  // b.none
     d2c:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     d30:	add	x0, x0, #0x0
     d34:	ldr	x1, [x0]
     d38:	mov	w0, #0x9                   	// #9
     d3c:	bl	0 <grub_error>
     d40:	b	e8c <grub_mod_init-0xd34>
     d44:	ldr	x0, [sp, #40]
     d48:	ldr	w0, [x0, #76]
     d4c:	cmp	w0, #0x0
     d50:	b.eq	dfc <grub_mod_init-0xdc4>  // b.none
     d54:	ldr	x0, [sp, #40]
     d58:	ldr	w0, [x0, #96]
     d5c:	and	w0, w0, #0x80
     d60:	cmp	w0, #0x0
     d64:	b.eq	dfc <grub_mod_init-0xdc4>  // b.none
     d68:	ldr	x0, [sp, #40]
     d6c:	ldrh	w0, [x0, #254]
     d70:	cmp	w0, #0x0
     d74:	b.eq	dfc <grub_mod_init-0xdc4>  // b.none
     d78:	ldr	x0, [sp, #40]
     d7c:	ldrh	w0, [x0, #254]
     d80:	mov	w1, w0
     d84:	ldr	x0, [sp, #40]
     d88:	ldrh	w0, [x0, #254]
     d8c:	sub	w0, w0, #0x1
     d90:	and	w0, w1, w0
     d94:	cmp	w0, #0x0
     d98:	b.ne	dfc <grub_mod_init-0xdc4>  // b.any
     d9c:	ldr	x0, [sp, #40]
     da0:	ldrh	w0, [x0, #254]
     da4:	and	w0, w0, #0x1fe0
     da8:	cmp	w0, #0x0
     dac:	b.eq	dfc <grub_mod_init-0xdc4>  // b.none
     db0:	ldr	x0, [sp, #40]
     db4:	ldrh	w0, [x0, #254]
     db8:	strh	w0, [sp, #38]
     dbc:	ldr	x0, [sp, #40]
     dc0:	str	wzr, [x0, #336]
     dc4:	b	ddc <grub_mod_init-0xde4>
     dc8:	ldr	x0, [sp, #40]
     dcc:	ldr	w0, [x0, #336]
     dd0:	add	w1, w0, #0x1
     dd4:	ldr	x0, [sp, #40]
     dd8:	str	w1, [x0, #336]
     ddc:	ldrh	w1, [sp, #38]
     de0:	ldr	x0, [sp, #40]
     de4:	ldr	w0, [x0, #336]
     de8:	mov	w2, #0x1                   	// #1
     dec:	lsl	w0, w2, w0
     df0:	cmp	w1, w0
     df4:	b.ne	dc8 <grub_mod_init-0xdf8>  // b.any
     df8:	b	e08 <grub_mod_init-0xdb8>
     dfc:	ldr	x0, [sp, #40]
     e00:	mov	w1, #0x5                   	// #5
     e04:	str	w1, [x0, #336]
     e08:	ldr	x0, [sp, #40]
     e0c:	ldr	x1, [sp, #24]
     e10:	str	x1, [x0, #344]
     e14:	ldr	x0, [sp, #40]
     e18:	ldr	x1, [sp, #40]
     e1c:	str	x1, [x0, #360]
     e20:	ldr	x0, [sp, #40]
     e24:	mov	w1, #0x2                   	// #2
     e28:	str	w1, [x0, #496]
     e2c:	ldr	x0, [sp, #40]
     e30:	mov	w1, #0x1                   	// #1
     e34:	str	w1, [x0, #500]
     e38:	ldr	x0, [sp, #40]
     e3c:	add	x1, x0, #0x170
     e40:	ldr	x0, [sp, #40]
     e44:	str	x1, [x0, #352]
     e48:	ldr	x0, [sp, #40]
     e4c:	ldr	x0, [x0, #352]
     e50:	mov	x2, x0
     e54:	mov	w1, #0x2                   	// #2
     e58:	ldr	x0, [sp, #40]
     e5c:	bl	a10 <grub_mod_init-0x11b0>
     e60:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     e64:	add	x0, x0, #0x0
     e68:	ldr	x0, [x0]
     e6c:	ldr	w0, [x0]
     e70:	cmp	w0, #0x0
     e74:	b.ne	e88 <grub_mod_init-0xd38>  // b.any
     e78:	ldr	x0, [sp, #40]
     e7c:	b	ec4 <grub_mod_init-0xcfc>
     e80:	nop
     e84:	b	e8c <grub_mod_init-0xd34>
     e88:	nop
     e8c:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     e90:	add	x0, x0, #0x0
     e94:	ldr	x0, [x0]
     e98:	ldr	w0, [x0]
     e9c:	cmp	w0, #0xb
     ea0:	b.ne	eb8 <grub_mod_init-0xd08>  // b.any
     ea4:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     ea8:	add	x0, x0, #0x0
     eac:	ldr	x1, [x0]
     eb0:	mov	w0, #0x9                   	// #9
     eb4:	bl	0 <grub_error>
     eb8:	ldr	x0, [sp, #40]
     ebc:	bl	0 <grub_free>
     ec0:	mov	x0, #0x0                   	// #0
     ec4:	ldp	x29, x30, [sp], #48
     ec8:	ret
     ecc:	nop
	...
     ee8:	stp	x29, x30, [sp, #-48]!
     eec:	mov	x29, sp
     ef0:	str	x0, [sp, #24]
     ef4:	ldr	x0, [sp, #24]
     ef8:	str	x0, [sp, #40]
     efc:	ldr	x0, [sp, #40]
     f00:	ldr	w0, [x0, #140]
     f04:	cmp	w0, #0x0
     f08:	b.ne	f80 <grub_mod_init-0xc40>  // b.any
     f0c:	ldr	x0, [sp, #40]
     f10:	ldr	x3, [x0]
     f14:	ldr	x0, [sp, #40]
     f18:	ldr	w1, [x0, #136]
     f1c:	ldr	x0, [sp, #40]
     f20:	add	x0, x0, #0x8
     f24:	mov	x2, x0
     f28:	mov	x0, x3
     f2c:	bl	a10 <grub_mod_init-0x11b0>
     f30:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     f34:	add	x0, x0, #0x0
     f38:	ldr	x0, [x0]
     f3c:	ldr	w0, [x0]
     f40:	cmp	w0, #0x0
     f44:	b.eq	f50 <grub_mod_init-0xc70>  // b.none
     f48:	mov	x0, #0x0                   	// #0
     f4c:	b	104c <grub_mod_init-0xb74>
     f50:	ldr	x0, [sp, #40]
     f54:	ldr	w0, [x0, #40]
     f58:	and	w0, w0, #0x800
     f5c:	cmp	w0, #0x0
     f60:	b.eq	f80 <grub_mod_init-0xc40>  // b.none
     f64:	adrp	x0, 0 <grub_mod_init-0x1bc0>
     f68:	add	x0, x0, #0x0
     f6c:	ldr	x1, [x0]
     f70:	mov	w0, #0x18                  	// #24
     f74:	bl	0 <grub_error>
     f78:	mov	x0, #0x0                   	// #0
     f7c:	b	104c <grub_mod_init-0xb74>
     f80:	ldr	x0, [sp, #40]
     f84:	ldr	w0, [x0, #12]
     f88:	add	w0, w0, #0x1
     f8c:	mov	w0, w0
     f90:	bl	0 <grub_malloc>
     f94:	str	x0, [sp, #32]
     f98:	ldr	x0, [sp, #32]
     f9c:	cmp	x0, #0x0
     fa0:	b.ne	fac <grub_mod_init-0xc14>  // b.any
     fa4:	mov	x0, #0x0                   	// #0
     fa8:	b	104c <grub_mod_init-0xb74>
     fac:	ldr	x0, [sp, #40]
     fb0:	ldr	w0, [x0, #12]
     fb4:	cmp	w0, #0x3c
     fb8:	b.hi	fe0 <grub_mod_init-0xbe0>  // b.pmore
     fbc:	ldr	x0, [sp, #40]
     fc0:	add	x1, x0, #0x30
     fc4:	ldr	x0, [sp, #40]
     fc8:	ldr	w0, [x0, #12]
     fcc:	mov	w0, w0
     fd0:	mov	x2, x0
     fd4:	ldr	x0, [sp, #32]
     fd8:	bl	90 <grub_mod_init-0x1b30>
     fdc:	b	1030 <grub_mod_init-0xb90>
     fe0:	ldr	x0, [sp, #40]
     fe4:	ldr	w0, [x0, #12]
     fe8:	mov	w0, w0
     fec:	ldr	x5, [sp, #32]
     ff0:	mov	x4, x0
     ff4:	mov	x3, #0x0                   	// #0
     ff8:	mov	x2, #0x0                   	// #0
     ffc:	mov	x1, #0x0                   	// #0
    1000:	ldr	x0, [sp, #40]
    1004:	bl	960 <grub_mod_init-0x1260>
    1008:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    100c:	add	x0, x0, #0x0
    1010:	ldr	x0, [x0]
    1014:	ldr	w0, [x0]
    1018:	cmp	w0, #0x0
    101c:	b.eq	1030 <grub_mod_init-0xb90>  // b.none
    1020:	ldr	x0, [sp, #32]
    1024:	bl	0 <grub_free>
    1028:	mov	x0, #0x0                   	// #0
    102c:	b	104c <grub_mod_init-0xb74>
    1030:	ldr	x0, [sp, #40]
    1034:	ldr	w0, [x0, #12]
    1038:	mov	w0, w0
    103c:	ldr	x1, [sp, #32]
    1040:	add	x0, x1, x0
    1044:	strb	wzr, [x0]
    1048:	ldr	x0, [sp, #32]
    104c:	ldp	x29, x30, [sp], #48
    1050:	ret
    1054:	nop
	...
    1068:	stp	x29, x30, [sp, #-336]!
    106c:	mov	x29, sp
    1070:	str	x0, [sp, #40]
    1074:	str	x1, [sp, #32]
    1078:	str	x2, [sp, #24]
    107c:	str	wzr, [sp, #332]
    1080:	ldr	x0, [sp, #40]
    1084:	str	x0, [sp, #320]
    1088:	ldr	x0, [sp, #320]
    108c:	ldr	w0, [x0, #140]
    1090:	cmp	w0, #0x0
    1094:	b.ne	10dc <grub_mod_init-0xae4>  // b.any
    1098:	ldr	x0, [sp, #320]
    109c:	ldr	x3, [x0]
    10a0:	ldr	x0, [sp, #320]
    10a4:	ldr	w1, [x0, #136]
    10a8:	ldr	x0, [sp, #320]
    10ac:	add	x0, x0, #0x8
    10b0:	mov	x2, x0
    10b4:	mov	x0, x3
    10b8:	bl	a10 <grub_mod_init-0x11b0>
    10bc:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    10c0:	add	x0, x0, #0x0
    10c4:	ldr	x0, [x0]
    10c8:	ldr	w0, [x0]
    10cc:	cmp	w0, #0x0
    10d0:	b.eq	10dc <grub_mod_init-0xae4>  // b.none
    10d4:	mov	w0, #0x0                   	// #0
    10d8:	b	1384 <grub_mod_init-0x83c>
    10dc:	ldr	x0, [sp, #320]
    10e0:	ldr	w0, [x0, #40]
    10e4:	and	w0, w0, #0x800
    10e8:	cmp	w0, #0x0
    10ec:	b.eq	136c <grub_mod_init-0x854>  // b.none
    10f0:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    10f4:	add	x0, x0, #0x0
    10f8:	ldr	x1, [x0]
    10fc:	mov	w0, #0x18                  	// #24
    1100:	bl	0 <grub_error>
    1104:	mov	w0, #0x0                   	// #0
    1108:	b	1384 <grub_mod_init-0x83c>
    110c:	ldr	w0, [sp, #332]
    1110:	add	x1, sp, #0x130
    1114:	mov	x5, x1
    1118:	mov	x4, #0x8                   	// #8
    111c:	mov	x3, x0
    1120:	mov	x2, #0x0                   	// #0
    1124:	mov	x1, #0x0                   	// #0
    1128:	ldr	x0, [sp, #320]
    112c:	bl	960 <grub_mod_init-0x1260>
    1130:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1134:	add	x0, x0, #0x0
    1138:	ldr	x0, [x0]
    113c:	ldr	w0, [x0]
    1140:	cmp	w0, #0x0
    1144:	b.eq	1150 <grub_mod_init-0xa70>  // b.none
    1148:	mov	w0, #0x0                   	// #0
    114c:	b	1384 <grub_mod_init-0x83c>
    1150:	ldrh	w0, [sp, #308]
    1154:	cmp	w0, #0x0
    1158:	b.ne	1164 <grub_mod_init-0xa5c>  // b.any
    115c:	mov	w0, #0x0                   	// #0
    1160:	b	1384 <grub_mod_init-0x83c>
    1164:	ldr	w0, [sp, #304]
    1168:	cmp	w0, #0x0
    116c:	b.eq	1358 <grub_mod_init-0x868>  // b.none
    1170:	ldrb	w0, [sp, #310]
    1174:	cmp	w0, #0x0
    1178:	b.eq	1358 <grub_mod_init-0x868>  // b.none
    117c:	str	wzr, [sp, #328]
    1180:	ldr	w0, [sp, #332]
    1184:	add	x0, x0, #0x8
    1188:	ldrb	w1, [sp, #310]
    118c:	and	x1, x1, #0xff
    1190:	add	x2, sp, #0x30
    1194:	mov	x5, x2
    1198:	mov	x4, x1
    119c:	mov	x3, x0
    11a0:	mov	x2, #0x0                   	// #0
    11a4:	mov	x1, #0x0                   	// #0
    11a8:	ldr	x0, [sp, #320]
    11ac:	bl	960 <grub_mod_init-0x1260>
    11b0:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    11b4:	add	x0, x0, #0x0
    11b8:	ldr	x0, [x0]
    11bc:	ldr	w0, [x0]
    11c0:	cmp	w0, #0x0
    11c4:	b.eq	11d0 <grub_mod_init-0x9f0>  // b.none
    11c8:	mov	w0, #0x0                   	// #0
    11cc:	b	1384 <grub_mod_init-0x83c>
    11d0:	mov	x0, #0x90                  	// #144
    11d4:	bl	0 <grub_malloc>
    11d8:	str	x0, [sp, #312]
    11dc:	ldr	x0, [sp, #312]
    11e0:	cmp	x0, #0x0
    11e4:	b.ne	11f0 <grub_mod_init-0x9d0>  // b.any
    11e8:	mov	w0, #0x0                   	// #0
    11ec:	b	1354 <grub_mod_init-0x86c>
    11f0:	ldr	x0, [sp, #320]
    11f4:	ldr	x1, [x0]
    11f8:	ldr	x0, [sp, #312]
    11fc:	str	x1, [x0]
    1200:	ldr	w0, [sp, #304]
    1204:	mov	w1, w0
    1208:	ldr	x0, [sp, #312]
    120c:	str	w1, [x0, #136]
    1210:	ldrb	w0, [sp, #310]
    1214:	sxtw	x0, w0
    1218:	add	x1, sp, #0x30
    121c:	strb	wzr, [x1, x0]
    1220:	ldrb	w0, [sp, #311]
    1224:	cmp	w0, #0x0
    1228:	b.eq	127c <grub_mod_init-0x944>  // b.none
    122c:	ldr	x0, [sp, #312]
    1230:	str	wzr, [x0, #140]
    1234:	ldrb	w0, [sp, #311]
    1238:	cmp	w0, #0x2
    123c:	b.ne	124c <grub_mod_init-0x974>  // b.any
    1240:	mov	w0, #0x2                   	// #2
    1244:	str	w0, [sp, #328]
    1248:	b	1330 <grub_mod_init-0x890>
    124c:	ldrb	w0, [sp, #311]
    1250:	cmp	w0, #0x7
    1254:	b.ne	1264 <grub_mod_init-0x95c>  // b.any
    1258:	mov	w0, #0x3                   	// #3
    125c:	str	w0, [sp, #328]
    1260:	b	1330 <grub_mod_init-0x890>
    1264:	ldrb	w0, [sp, #311]
    1268:	cmp	w0, #0x1
    126c:	b.ne	1330 <grub_mod_init-0x890>  // b.any
    1270:	mov	w0, #0x1                   	// #1
    1274:	str	w0, [sp, #328]
    1278:	b	1330 <grub_mod_init-0x890>
    127c:	ldr	x0, [sp, #320]
    1280:	ldr	x3, [x0]
    1284:	ldr	w0, [sp, #304]
    1288:	mov	w1, w0
    128c:	ldr	x0, [sp, #312]
    1290:	add	x0, x0, #0x8
    1294:	mov	x2, x0
    1298:	mov	x0, x3
    129c:	bl	a10 <grub_mod_init-0x11b0>
    12a0:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    12a4:	add	x0, x0, #0x0
    12a8:	ldr	x0, [x0]
    12ac:	ldr	w0, [x0]
    12b0:	cmp	w0, #0x0
    12b4:	b.eq	12c8 <grub_mod_init-0x8f8>  // b.none
    12b8:	ldr	x0, [sp, #312]
    12bc:	bl	0 <grub_free>
    12c0:	mov	w0, #0x0                   	// #0
    12c4:	b	1354 <grub_mod_init-0x86c>
    12c8:	ldr	x0, [sp, #312]
    12cc:	mov	w1, #0x1                   	// #1
    12d0:	str	w1, [x0, #140]
    12d4:	ldr	x0, [sp, #312]
    12d8:	ldrh	w0, [x0, #8]
    12dc:	and	w0, w0, #0xf000
    12e0:	cmp	w0, #0x4, lsl #12
    12e4:	b.ne	12f4 <grub_mod_init-0x8cc>  // b.any
    12e8:	mov	w0, #0x2                   	// #2
    12ec:	str	w0, [sp, #328]
    12f0:	b	1330 <grub_mod_init-0x890>
    12f4:	ldr	x0, [sp, #312]
    12f8:	ldrh	w0, [x0, #8]
    12fc:	and	w0, w0, #0xf000
    1300:	cmp	w0, #0xa, lsl #12
    1304:	b.ne	1314 <grub_mod_init-0x8ac>  // b.any
    1308:	mov	w0, #0x3                   	// #3
    130c:	str	w0, [sp, #328]
    1310:	b	1330 <grub_mod_init-0x890>
    1314:	ldr	x0, [sp, #312]
    1318:	ldrh	w0, [x0, #8]
    131c:	and	w0, w0, #0xf000
    1320:	cmp	w0, #0x8, lsl #12
    1324:	b.ne	1330 <grub_mod_init-0x890>  // b.any
    1328:	mov	w0, #0x1                   	// #1
    132c:	str	w0, [sp, #328]
    1330:	add	x0, sp, #0x30
    1334:	ldr	x4, [sp, #32]
    1338:	ldr	x3, [sp, #24]
    133c:	ldr	x2, [sp, #312]
    1340:	ldr	w1, [sp, #328]
    1344:	blr	x4
    1348:	cmp	w0, #0x0
    134c:	b.eq	1358 <grub_mod_init-0x868>  // b.none
    1350:	mov	w0, #0x1                   	// #1
    1354:	b	1384 <grub_mod_init-0x83c>
    1358:	ldrh	w0, [sp, #308]
    135c:	mov	w1, w0
    1360:	ldr	w0, [sp, #332]
    1364:	add	w0, w0, w1
    1368:	str	w0, [sp, #332]
    136c:	ldr	x0, [sp, #320]
    1370:	ldr	w0, [x0, #12]
    1374:	ldr	w1, [sp, #332]
    1378:	cmp	w1, w0
    137c:	b.cc	110c <grub_mod_init-0xab4>  // b.lo, b.ul, b.last
    1380:	mov	w0, #0x0                   	// #0
    1384:	ldp	x29, x30, [sp], #336
    1388:	ret
    138c:	nop
	...
    13a0:	stp	x29, x30, [sp, #-64]!
    13a4:	mov	x29, sp
    13a8:	str	x0, [sp, #24]
    13ac:	str	x1, [sp, #16]
    13b0:	str	xzr, [sp, #40]
    13b4:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    13b8:	add	x0, x0, #0x0
    13bc:	ldr	x0, [x0]
    13c0:	ldr	x0, [x0]
    13c4:	bl	0 <grub_dl_ref>
    13c8:	ldr	x0, [sp, #24]
    13cc:	ldr	x0, [x0, #8]
    13d0:	ldr	x0, [x0]
    13d4:	bl	be8 <grub_mod_init-0xfd8>
    13d8:	str	x0, [sp, #48]
    13dc:	ldr	x0, [sp, #48]
    13e0:	cmp	x0, #0x0
    13e4:	b.ne	1400 <grub_mod_init-0x7c0>  // b.any
    13e8:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    13ec:	add	x0, x0, #0x0
    13f0:	ldr	x0, [x0]
    13f4:	ldr	w0, [x0]
    13f8:	str	w0, [sp, #60]
    13fc:	b	153c <grub_mod_init-0x684>
    1400:	ldr	x0, [sp, #48]
    1404:	add	x1, x0, #0x168
    1408:	add	x2, sp, #0x28
    140c:	mov	w5, #0x1                   	// #1
    1410:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1414:	add	x0, x0, #0x0
    1418:	ldr	x4, [x0]
    141c:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1420:	add	x0, x0, #0x0
    1424:	ldr	x3, [x0]
    1428:	ldr	x0, [sp, #16]
    142c:	bl	0 <grub_fshelp_find_file>
    1430:	str	w0, [sp, #60]
    1434:	ldr	w0, [sp, #60]
    1438:	cmp	w0, #0x0
    143c:	b.ne	1530 <grub_mod_init-0x690>  // b.any
    1440:	ldr	x0, [sp, #40]
    1444:	ldr	w0, [x0, #140]
    1448:	cmp	w0, #0x0
    144c:	b.ne	147c <grub_mod_init-0x744>  // b.any
    1450:	ldr	x0, [sp, #40]
    1454:	ldr	w1, [x0, #136]
    1458:	ldr	x0, [sp, #40]
    145c:	add	x0, x0, #0x8
    1460:	mov	x2, x0
    1464:	ldr	x0, [sp, #48]
    1468:	bl	a10 <grub_mod_init-0x11b0>
    146c:	str	w0, [sp, #60]
    1470:	ldr	w0, [sp, #60]
    1474:	cmp	w0, #0x0
    1478:	b.ne	1538 <grub_mod_init-0x688>  // b.any
    147c:	ldr	x0, [sp, #40]
    1480:	ldr	w0, [x0, #40]
    1484:	and	w0, w0, #0x800
    1488:	cmp	w0, #0x0
    148c:	b.eq	14ac <grub_mod_init-0x714>  // b.none
    1490:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1494:	add	x0, x0, #0x0
    1498:	ldr	x1, [x0]
    149c:	mov	w0, #0x18                  	// #24
    14a0:	bl	0 <grub_error>
    14a4:	str	w0, [sp, #60]
    14a8:	b	153c <grub_mod_init-0x684>
    14ac:	ldr	x0, [sp, #48]
    14b0:	ldr	x3, [x0, #352]
    14b4:	ldr	x0, [sp, #40]
    14b8:	add	x0, x0, #0x8
    14bc:	mov	x2, #0x80                  	// #128
    14c0:	mov	x1, x0
    14c4:	mov	x0, x3
    14c8:	bl	90 <grub_mod_init-0x1b30>
    14cc:	ldr	x0, [sp, #40]
    14d0:	bl	0 <grub_free>
    14d4:	ldr	x0, [sp, #48]
    14d8:	ldr	x0, [x0, #352]
    14dc:	ldr	w0, [x0, #4]
    14e0:	mov	w1, w0
    14e4:	ldr	x0, [sp, #24]
    14e8:	str	x1, [x0, #64]
    14ec:	ldr	x0, [sp, #24]
    14f0:	ldr	x1, [x0, #64]
    14f4:	ldr	x0, [sp, #48]
    14f8:	ldr	x0, [x0, #352]
    14fc:	ldr	w0, [x0, #108]
    1500:	mov	w0, w0
    1504:	lsl	x0, x0, #32
    1508:	orr	x1, x1, x0
    150c:	ldr	x0, [sp, #24]
    1510:	str	x1, [x0, #64]
    1514:	ldr	x0, [sp, #24]
    1518:	ldr	x1, [sp, #48]
    151c:	str	x1, [x0, #80]
    1520:	ldr	x0, [sp, #24]
    1524:	str	xzr, [x0, #24]
    1528:	mov	w0, #0x0                   	// #0
    152c:	b	1578 <grub_mod_init-0x648>
    1530:	nop
    1534:	b	153c <grub_mod_init-0x684>
    1538:	nop
    153c:	ldr	x0, [sp, #48]
    1540:	add	x1, x0, #0x168
    1544:	ldr	x0, [sp, #40]
    1548:	cmp	x1, x0
    154c:	b.eq	1558 <grub_mod_init-0x668>  // b.none
    1550:	ldr	x0, [sp, #40]
    1554:	bl	0 <grub_free>
    1558:	ldr	x0, [sp, #48]
    155c:	bl	0 <grub_free>
    1560:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1564:	add	x0, x0, #0x0
    1568:	ldr	x0, [x0]
    156c:	ldr	x0, [x0]
    1570:	bl	0 <grub_dl_unref>
    1574:	ldr	w0, [sp, #60]
    1578:	ldp	x29, x30, [sp], #64
    157c:	ret
	...
    15a8:	stp	x29, x30, [sp, #-32]!
    15ac:	mov	x29, sp
    15b0:	str	x0, [sp, #24]
    15b4:	ldr	x0, [sp, #24]
    15b8:	ldr	x0, [x0, #80]
    15bc:	bl	0 <grub_free>
    15c0:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    15c4:	add	x0, x0, #0x0
    15c8:	ldr	x0, [x0]
    15cc:	ldr	x0, [x0]
    15d0:	bl	0 <grub_dl_unref>
    15d4:	mov	w0, #0x0                   	// #0
    15d8:	ldp	x29, x30, [sp], #32
    15dc:	ret
	...
    15e8:	stp	x29, x30, [sp, #-64]!
    15ec:	mov	x29, sp
    15f0:	str	x0, [sp, #40]
    15f4:	str	x1, [sp, #32]
    15f8:	str	x2, [sp, #24]
    15fc:	ldr	x0, [sp, #40]
    1600:	ldr	x0, [x0, #80]
    1604:	str	x0, [sp, #56]
    1608:	ldr	x0, [sp, #56]
    160c:	add	x6, x0, #0x168
    1610:	ldr	x0, [sp, #40]
    1614:	ldr	x1, [x0, #88]
    1618:	ldr	x0, [sp, #40]
    161c:	ldr	x2, [x0, #96]
    1620:	ldr	x0, [sp, #40]
    1624:	ldr	x0, [x0, #24]
    1628:	ldr	x5, [sp, #32]
    162c:	ldr	x4, [sp, #24]
    1630:	mov	x3, x0
    1634:	mov	x0, x6
    1638:	bl	960 <grub_mod_init-0x1260>
    163c:	ldp	x29, x30, [sp], #64
    1640:	ret
    1644:	stp	x29, x30, [sp, #-80]!
    1648:	mov	x29, sp
    164c:	str	x0, [sp, #40]
    1650:	str	w1, [sp, #36]
    1654:	str	x2, [sp, #24]
    1658:	str	x3, [sp, #16]
    165c:	ldr	x0, [sp, #16]
    1660:	str	x0, [sp, #72]
    1664:	add	x0, sp, #0x38
    1668:	mov	x2, #0x10                  	// #16
    166c:	mov	w1, #0x0                   	// #0
    1670:	bl	0 <grub_memset>
    1674:	ldr	x0, [sp, #24]
    1678:	ldr	w0, [x0, #140]
    167c:	cmp	w0, #0x0
    1680:	b.ne	16dc <grub_mod_init-0x4e4>  // b.any
    1684:	ldr	x0, [sp, #72]
    1688:	ldr	x3, [x0, #16]
    168c:	ldr	x0, [sp, #24]
    1690:	ldr	w1, [x0, #136]
    1694:	ldr	x0, [sp, #24]
    1698:	add	x0, x0, #0x8
    169c:	mov	x2, x0
    16a0:	mov	x0, x3
    16a4:	bl	a10 <grub_mod_init-0x11b0>
    16a8:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    16ac:	add	x0, x0, #0x0
    16b0:	ldr	x0, [x0]
    16b4:	ldr	w0, [x0]
    16b8:	cmp	w0, #0x0
    16bc:	b.ne	16cc <grub_mod_init-0x4f4>  // b.any
    16c0:	ldr	x0, [sp, #24]
    16c4:	mov	w1, #0x1                   	// #1
    16c8:	str	w1, [x0, #140]
    16cc:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    16d0:	add	x0, x0, #0x0
    16d4:	ldr	x0, [x0]
    16d8:	str	wzr, [x0]
    16dc:	ldr	x0, [sp, #24]
    16e0:	ldr	w0, [x0, #140]
    16e4:	cmp	w0, #0x0
    16e8:	b.eq	1704 <grub_mod_init-0x4bc>  // b.none
    16ec:	ldrb	w0, [sp, #56]
    16f0:	orr	w0, w0, #0x2
    16f4:	strb	w0, [sp, #56]
    16f8:	ldr	x0, [sp, #24]
    16fc:	ldr	w0, [x0, #24]
    1700:	str	w0, [sp, #60]
    1704:	ldr	w0, [sp, #36]
    1708:	and	w0, w0, #0xff
    170c:	cmp	w0, #0x2
    1710:	cset	w0, eq  // eq = none
    1714:	and	w1, w0, #0xff
    1718:	ldrb	w0, [sp, #56]
    171c:	bfxil	w0, w1, #0, #1
    1720:	strb	w0, [sp, #56]
    1724:	ldr	x0, [sp, #24]
    1728:	bl	0 <grub_free>
    172c:	ldr	x0, [sp, #72]
    1730:	ldr	x3, [x0]
    1734:	ldr	x0, [sp, #72]
    1738:	ldr	x1, [x0, #8]
    173c:	add	x0, sp, #0x38
    1740:	mov	x2, x1
    1744:	mov	x1, x0
    1748:	ldr	x0, [sp, #40]
    174c:	blr	x3
    1750:	ldp	x29, x30, [sp], #80
    1754:	ret
	...
    1760:	stp	x29, x30, [sp, #-80]!
    1764:	mov	x29, sp
    1768:	str	x0, [sp, #40]
    176c:	str	x1, [sp, #32]
    1770:	str	x2, [sp, #24]
    1774:	str	x3, [sp, #16]
    1778:	stp	xzr, xzr, [sp, #56]
    177c:	str	xzr, [sp, #72]
    1780:	ldr	x0, [sp, #24]
    1784:	str	x0, [sp, #56]
    1788:	ldr	x0, [sp, #16]
    178c:	str	x0, [sp, #64]
    1790:	str	xzr, [sp, #48]
    1794:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1798:	add	x0, x0, #0x0
    179c:	ldr	x0, [x0]
    17a0:	ldr	x0, [x0]
    17a4:	bl	0 <grub_dl_ref>
    17a8:	ldr	x0, [sp, #40]
    17ac:	ldr	x0, [x0]
    17b0:	bl	be8 <grub_mod_init-0xfd8>
    17b4:	str	x0, [sp, #72]
    17b8:	ldr	x0, [sp, #72]
    17bc:	cmp	x0, #0x0
    17c0:	b.eq	1830 <grub_mod_init-0x390>  // b.none
    17c4:	ldr	x0, [sp, #72]
    17c8:	add	x1, x0, #0x168
    17cc:	add	x2, sp, #0x30
    17d0:	mov	w5, #0x2                   	// #2
    17d4:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    17d8:	add	x0, x0, #0x0
    17dc:	ldr	x4, [x0]
    17e0:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    17e4:	add	x0, x0, #0x0
    17e8:	ldr	x3, [x0]
    17ec:	ldr	x0, [sp, #32]
    17f0:	bl	0 <grub_fshelp_find_file>
    17f4:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    17f8:	add	x0, x0, #0x0
    17fc:	ldr	x0, [x0]
    1800:	ldr	w0, [x0]
    1804:	cmp	w0, #0x0
    1808:	b.ne	1838 <grub_mod_init-0x388>  // b.any
    180c:	ldr	x3, [sp, #48]
    1810:	add	x0, sp, #0x38
    1814:	mov	x2, x0
    1818:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    181c:	add	x0, x0, #0x0
    1820:	ldr	x1, [x0]
    1824:	mov	x0, x3
    1828:	bl	1068 <grub_mod_init-0xb58>
    182c:	b	183c <grub_mod_init-0x384>
    1830:	nop
    1834:	b	183c <grub_mod_init-0x384>
    1838:	nop
    183c:	ldr	x0, [sp, #72]
    1840:	add	x1, x0, #0x168
    1844:	ldr	x0, [sp, #48]
    1848:	cmp	x1, x0
    184c:	b.eq	1858 <grub_mod_init-0x368>  // b.none
    1850:	ldr	x0, [sp, #48]
    1854:	bl	0 <grub_free>
    1858:	ldr	x0, [sp, #72]
    185c:	bl	0 <grub_free>
    1860:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1864:	add	x0, x0, #0x0
    1868:	ldr	x0, [x0]
    186c:	ldr	x0, [x0]
    1870:	bl	0 <grub_dl_unref>
    1874:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1878:	add	x0, x0, #0x0
    187c:	ldr	x0, [x0]
    1880:	ldr	w0, [x0]
    1884:	ldp	x29, x30, [sp], #80
    1888:	ret
    188c:	nop
	...
    18b8:	stp	x29, x30, [sp, #-48]!
    18bc:	mov	x29, sp
    18c0:	str	x0, [sp, #24]
    18c4:	str	x1, [sp, #16]
    18c8:	ldr	x0, [sp, #24]
    18cc:	ldr	x0, [x0]
    18d0:	str	x0, [sp, #40]
    18d4:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    18d8:	add	x0, x0, #0x0
    18dc:	ldr	x0, [x0]
    18e0:	ldr	x0, [x0]
    18e4:	bl	0 <grub_dl_ref>
    18e8:	ldr	x0, [sp, #40]
    18ec:	bl	be8 <grub_mod_init-0xfd8>
    18f0:	str	x0, [sp, #32]
    18f4:	ldr	x0, [sp, #32]
    18f8:	cmp	x0, #0x0
    18fc:	b.eq	1920 <grub_mod_init-0x2a0>  // b.none
    1900:	ldr	x0, [sp, #32]
    1904:	add	x0, x0, #0x78
    1908:	mov	x1, #0x10                  	// #16
    190c:	bl	0 <grub_strndup>
    1910:	mov	x1, x0
    1914:	ldr	x0, [sp, #16]
    1918:	str	x1, [x0]
    191c:	b	1928 <grub_mod_init-0x298>
    1920:	ldr	x0, [sp, #16]
    1924:	str	xzr, [x0]
    1928:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    192c:	add	x0, x0, #0x0
    1930:	ldr	x0, [x0]
    1934:	ldr	x0, [x0]
    1938:	bl	0 <grub_dl_unref>
    193c:	ldr	x0, [sp, #32]
    1940:	bl	0 <grub_free>
    1944:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1948:	add	x0, x0, #0x0
    194c:	ldr	x0, [x0]
    1950:	ldr	w0, [x0]
    1954:	ldp	x29, x30, [sp], #48
    1958:	ret
    195c:	nop
	...
    1970:	sub	sp, sp, #0x80
    1974:	stp	x29, x30, [sp, #16]
    1978:	add	x29, sp, #0x10
    197c:	stp	x19, x20, [sp, #32]
    1980:	stp	x21, x22, [sp, #48]
    1984:	stp	x23, x24, [sp, #64]
    1988:	str	x25, [sp, #80]
    198c:	str	x0, [sp, #104]
    1990:	str	x1, [sp, #96]
    1994:	ldr	x0, [sp, #104]
    1998:	ldr	x0, [x0]
    199c:	str	x0, [sp, #120]
    19a0:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    19a4:	add	x0, x0, #0x0
    19a8:	ldr	x0, [x0]
    19ac:	ldr	x0, [x0]
    19b0:	bl	0 <grub_dl_ref>
    19b4:	ldr	x0, [sp, #120]
    19b8:	bl	be8 <grub_mod_init-0xfd8>
    19bc:	str	x0, [sp, #112]
    19c0:	ldr	x0, [sp, #112]
    19c4:	cmp	x0, #0x0
    19c8:	b.eq	1aa8 <grub_mod_init-0x118>  // b.none
    19cc:	ldr	x0, [sp, #112]
    19d0:	ldrh	w0, [x0, #104]
    19d4:	bl	0 <grub_mod_init-0x1bc0>
    19d8:	and	w0, w0, #0xffff
    19dc:	mov	w19, w0
    19e0:	ldr	x0, [sp, #112]
    19e4:	ldrh	w0, [x0, #106]
    19e8:	bl	0 <grub_mod_init-0x1bc0>
    19ec:	and	w0, w0, #0xffff
    19f0:	mov	w20, w0
    19f4:	ldr	x0, [sp, #112]
    19f8:	ldrh	w0, [x0, #108]
    19fc:	bl	0 <grub_mod_init-0x1bc0>
    1a00:	and	w0, w0, #0xffff
    1a04:	mov	w21, w0
    1a08:	ldr	x0, [sp, #112]
    1a0c:	ldrh	w0, [x0, #110]
    1a10:	bl	0 <grub_mod_init-0x1bc0>
    1a14:	and	w0, w0, #0xffff
    1a18:	mov	w22, w0
    1a1c:	ldr	x0, [sp, #112]
    1a20:	ldrh	w0, [x0, #112]
    1a24:	bl	0 <grub_mod_init-0x1bc0>
    1a28:	and	w0, w0, #0xffff
    1a2c:	mov	w23, w0
    1a30:	ldr	x0, [sp, #112]
    1a34:	ldrh	w0, [x0, #114]
    1a38:	bl	0 <grub_mod_init-0x1bc0>
    1a3c:	and	w0, w0, #0xffff
    1a40:	mov	w24, w0
    1a44:	ldr	x0, [sp, #112]
    1a48:	ldrh	w0, [x0, #116]
    1a4c:	bl	0 <grub_mod_init-0x1bc0>
    1a50:	and	w0, w0, #0xffff
    1a54:	mov	w25, w0
    1a58:	ldr	x0, [sp, #112]
    1a5c:	ldrh	w0, [x0, #118]
    1a60:	bl	0 <grub_mod_init-0x1bc0>
    1a64:	and	w0, w0, #0xffff
    1a68:	str	w0, [sp]
    1a6c:	mov	w7, w25
    1a70:	mov	w6, w24
    1a74:	mov	w5, w23
    1a78:	mov	w4, w22
    1a7c:	mov	w3, w21
    1a80:	mov	w2, w20
    1a84:	mov	w1, w19
    1a88:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1a8c:	add	x0, x0, #0x0
    1a90:	ldr	x0, [x0]
    1a94:	bl	0 <grub_xasprintf>
    1a98:	mov	x1, x0
    1a9c:	ldr	x0, [sp, #96]
    1aa0:	str	x1, [x0]
    1aa4:	b	1ab0 <grub_mod_init-0x110>
    1aa8:	ldr	x0, [sp, #96]
    1aac:	str	xzr, [x0]
    1ab0:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1ab4:	add	x0, x0, #0x0
    1ab8:	ldr	x0, [x0]
    1abc:	ldr	x0, [x0]
    1ac0:	bl	0 <grub_dl_unref>
    1ac4:	ldr	x0, [sp, #112]
    1ac8:	bl	0 <grub_free>
    1acc:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1ad0:	add	x0, x0, #0x0
    1ad4:	ldr	x0, [x0]
    1ad8:	ldr	w0, [x0]
    1adc:	ldp	x19, x20, [sp, #32]
    1ae0:	ldp	x21, x22, [sp, #48]
    1ae4:	ldp	x23, x24, [sp, #64]
    1ae8:	ldr	x25, [sp, #80]
    1aec:	ldp	x29, x30, [sp, #16]
    1af0:	add	sp, sp, #0x80
    1af4:	ret
	...
    1b10:	stp	x29, x30, [sp, #-48]!
    1b14:	mov	x29, sp
    1b18:	str	x0, [sp, #24]
    1b1c:	str	x1, [sp, #16]
    1b20:	ldr	x0, [sp, #24]
    1b24:	ldr	x0, [x0]
    1b28:	str	x0, [sp, #40]
    1b2c:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1b30:	add	x0, x0, #0x0
    1b34:	ldr	x0, [x0]
    1b38:	ldr	x0, [x0]
    1b3c:	bl	0 <grub_dl_ref>
    1b40:	ldr	x0, [sp, #40]
    1b44:	bl	be8 <grub_mod_init-0xfd8>
    1b48:	str	x0, [sp, #32]
    1b4c:	ldr	x0, [sp, #32]
    1b50:	cmp	x0, #0x0
    1b54:	b.ne	1b64 <grub_mod_init-0x5c>  // b.any
    1b58:	ldr	x0, [sp, #16]
    1b5c:	str	wzr, [x0]
    1b60:	b	1b78 <grub_mod_init-0x48>
    1b64:	ldr	x0, [sp, #32]
    1b68:	ldr	w0, [x0, #48]
    1b6c:	mov	w1, w0
    1b70:	ldr	x0, [sp, #16]
    1b74:	str	w1, [x0]
    1b78:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1b7c:	add	x0, x0, #0x0
    1b80:	ldr	x0, [x0]
    1b84:	ldr	x0, [x0]
    1b88:	bl	0 <grub_dl_unref>
    1b8c:	ldr	x0, [sp, #32]
    1b90:	bl	0 <grub_free>
    1b94:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1b98:	add	x0, x0, #0x0
    1b9c:	ldr	x0, [x0]
    1ba0:	ldr	w0, [x0]
    1ba4:	ldp	x29, x30, [sp], #48
    1ba8:	ret
    1bac:	nop
	...

0000000000001bc0 <grub_mod_init>:
    1bc0:	stp	x29, x30, [sp, #-32]!
    1bc4:	mov	x29, sp
    1bc8:	str	x0, [sp, #24]
    1bcc:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1bd0:	add	x0, x0, #0x0
    1bd4:	ldr	x0, [x0]
    1bd8:	bl	38 <grub_mod_init-0x1b88>
    1bdc:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1be0:	add	x0, x0, #0x0
    1be4:	ldr	x0, [x0]
    1be8:	ldr	x1, [sp, #24]
    1bec:	str	x1, [x0]
    1bf0:	nop
    1bf4:	ldp	x29, x30, [sp], #32
    1bf8:	ret
    1bfc:	nop
	...

0000000000001c10 <grub_mod_fini>:
    1c10:	stp	x29, x30, [sp, #-16]!
    1c14:	mov	x29, sp
    1c18:	adrp	x0, 0 <grub_mod_init-0x1bc0>
    1c1c:	add	x0, x0, #0x0
    1c20:	ldr	x0, [x0]
    1c24:	bl	70 <grub_mod_init-0x1b50>
    1c28:	nop
    1c2c:	ldp	x29, x30, [sp], #16
    1c30:	ret
    1c34:	nop
	...
