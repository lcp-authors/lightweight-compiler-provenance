
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_datetime.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000046f8 <.init>:
    46f8:	stp	x29, x30, [sp, #-16]!
    46fc:	mov	x29, sp
    4700:	bl	4c60 <PyNumber_FloorDivide@plt+0x10>
    4704:	ldp	x29, x30, [sp], #16
    4708:	ret

Disassembly of section .plt:

0000000000004710 <memcpy@plt-0x20>:
    4710:	stp	x16, x30, [sp, #-16]!
    4714:	adrp	x16, 27000 <PyInit__datetime@@Base+0x15250>
    4718:	ldr	x17, [x16, #4088]
    471c:	add	x16, x16, #0xff8
    4720:	br	x17
    4724:	nop
    4728:	nop
    472c:	nop

0000000000004730 <memcpy@plt>:
    4730:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4734:	ldr	x17, [x16]
    4738:	add	x16, x16, #0x0
    473c:	br	x17

0000000000004740 <PyUnicode_FromFormat@plt>:
    4740:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4744:	ldr	x17, [x16, #8]
    4748:	add	x16, x16, #0x8
    474c:	br	x17

0000000000004750 <_PyUnicode_Ready@plt>:
    4750:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4754:	ldr	x17, [x16, #16]
    4758:	add	x16, x16, #0x10
    475c:	br	x17

0000000000004760 <PyDict_SetItemString@plt>:
    4760:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4764:	ldr	x17, [x16, #24]
    4768:	add	x16, x16, #0x18
    476c:	br	x17

0000000000004770 <strlen@plt>:
    4770:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4774:	ldr	x17, [x16, #32]
    4778:	add	x16, x16, #0x20
    477c:	br	x17

0000000000004780 <PyModule_AddIntConstant@plt>:
    4780:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4784:	ldr	x17, [x16, #40]
    4788:	add	x16, x16, #0x28
    478c:	br	x17

0000000000004790 <PyArg_ParseTupleAndKeywords@plt>:
    4790:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4794:	ldr	x17, [x16, #48]
    4798:	add	x16, x16, #0x30
    479c:	br	x17

00000000000047a0 <_PyObject_LookupAttrId@plt>:
    47a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47a4:	ldr	x17, [x16, #56]
    47a8:	add	x16, x16, #0x38
    47ac:	br	x17

00000000000047b0 <_PyBytes_Resize@plt>:
    47b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47b4:	ldr	x17, [x16, #64]
    47b8:	add	x16, x16, #0x40
    47bc:	br	x17

00000000000047c0 <PyObject_CallMethod@plt>:
    47c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47c4:	ldr	x17, [x16, #72]
    47c8:	add	x16, x16, #0x48
    47cc:	br	x17

00000000000047d0 <PyLong_FromDouble@plt>:
    47d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47d4:	ldr	x17, [x16, #80]
    47d8:	add	x16, x16, #0x50
    47dc:	br	x17

00000000000047e0 <_PyUnicode_Copy@plt>:
    47e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47e4:	ldr	x17, [x16, #88]
    47e8:	add	x16, x16, #0x58
    47ec:	br	x17

00000000000047f0 <_PyTime_ObjectToTimeval@plt>:
    47f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    47f4:	ldr	x17, [x16, #96]
    47f8:	add	x16, x16, #0x60
    47fc:	br	x17

0000000000004800 <PyNumber_Add@plt>:
    4800:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4804:	ldr	x17, [x16, #104]
    4808:	add	x16, x16, #0x68
    480c:	br	x17

0000000000004810 <__cxa_finalize@plt>:
    4810:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4814:	ldr	x17, [x16, #112]
    4818:	add	x16, x16, #0x70
    481c:	br	x17

0000000000004820 <sprintf@plt>:
    4820:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4824:	ldr	x17, [x16, #120]
    4828:	add	x16, x16, #0x78
    482c:	br	x17

0000000000004830 <_PyTime_GetSystemClock@plt>:
    4830:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4834:	ldr	x17, [x16, #128]
    4838:	add	x16, x16, #0x80
    483c:	br	x17

0000000000004840 <PyBytes_FromStringAndSize@plt>:
    4840:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4844:	ldr	x17, [x16, #136]
    4848:	add	x16, x16, #0x88
    484c:	br	x17

0000000000004850 <_Py_Dealloc@plt>:
    4850:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4854:	ldr	x17, [x16, #144]
    4858:	add	x16, x16, #0x90
    485c:	br	x17

0000000000004860 <PyErr_NoMemory@plt>:
    4860:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4864:	ldr	x17, [x16, #152]
    4868:	add	x16, x16, #0x98
    486c:	br	x17

0000000000004870 <PyNumber_Multiply@plt>:
    4870:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4874:	ldr	x17, [x16, #160]
    4878:	add	x16, x16, #0xa0
    487c:	br	x17

0000000000004880 <_PyTime_AsTimevalTime_t@plt>:
    4880:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4884:	ldr	x17, [x16, #168]
    4888:	add	x16, x16, #0xa8
    488c:	br	x17

0000000000004890 <PyObject_Str@plt>:
    4890:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4894:	ldr	x17, [x16, #176]
    4898:	add	x16, x16, #0xb0
    489c:	br	x17

00000000000048a0 <PyUnicode_WriteChar@plt>:
    48a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    48a4:	ldr	x17, [x16, #184]
    48a8:	add	x16, x16, #0xb8
    48ac:	br	x17

00000000000048b0 <_PyArg_UnpackKeywords@plt>:
    48b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    48b4:	ldr	x17, [x16, #192]
    48b8:	add	x16, x16, #0xc0
    48bc:	br	x17

00000000000048c0 <PyErr_SetString@plt>:
    48c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    48c4:	ldr	x17, [x16, #200]
    48c8:	add	x16, x16, #0xc8
    48cc:	br	x17

00000000000048d0 <PyObject_Malloc@plt>:
    48d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    48d4:	ldr	x17, [x16, #208]
    48d8:	add	x16, x16, #0xd0
    48dc:	br	x17

00000000000048e0 <PyErr_ExceptionMatches@plt>:
    48e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    48e4:	ldr	x17, [x16, #216]
    48e8:	add	x16, x16, #0xd8
    48ec:	br	x17

00000000000048f0 <_Py_HashBytes@plt>:
    48f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    48f4:	ldr	x17, [x16, #224]
    48f8:	add	x16, x16, #0xe0
    48fc:	br	x17

0000000000004900 <PyOS_snprintf@plt>:
    4900:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4904:	ldr	x17, [x16, #232]
    4908:	add	x16, x16, #0xe8
    490c:	br	x17

0000000000004910 <PyUnicode_GetLength@plt>:
    4910:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4914:	ldr	x17, [x16, #240]
    4918:	add	x16, x16, #0xf0
    491c:	br	x17

0000000000004920 <PyFloat_FromDouble@plt>:
    4920:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4924:	ldr	x17, [x16, #248]
    4928:	add	x16, x16, #0xf8
    492c:	br	x17

0000000000004930 <PyType_Ready@plt>:
    4930:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4934:	ldr	x17, [x16, #256]
    4938:	add	x16, x16, #0x100
    493c:	br	x17

0000000000004940 <PyLong_FromLong@plt>:
    4940:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4944:	ldr	x17, [x16, #264]
    4948:	add	x16, x16, #0x108
    494c:	br	x17

0000000000004950 <_PyLong_DivmodNear@plt>:
    4950:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4954:	ldr	x17, [x16, #272]
    4958:	add	x16, x16, #0x110
    495c:	br	x17

0000000000004960 <PyUnicode_DecodeLocale@plt>:
    4960:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4964:	ldr	x17, [x16, #280]
    4968:	add	x16, x16, #0x118
    496c:	br	x17

0000000000004970 <PyNumber_And@plt>:
    4970:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4974:	ldr	x17, [x16, #288]
    4978:	add	x16, x16, #0x120
    497c:	br	x17

0000000000004980 <__gmon_start__@plt>:
    4980:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4984:	ldr	x17, [x16, #296]
    4988:	add	x16, x16, #0x128
    498c:	br	x17

0000000000004990 <PyObject_CallFunction@plt>:
    4990:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4994:	ldr	x17, [x16, #304]
    4998:	add	x16, x16, #0x130
    499c:	br	x17

00000000000049a0 <PyUnicode_AsLatin1String@plt>:
    49a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    49a4:	ldr	x17, [x16, #312]
    49a8:	add	x16, x16, #0x138
    49ac:	br	x17

00000000000049b0 <PyTuple_New@plt>:
    49b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    49b4:	ldr	x17, [x16, #320]
    49b8:	add	x16, x16, #0x140
    49bc:	br	x17

00000000000049c0 <PyNumber_Remainder@plt>:
    49c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    49c4:	ldr	x17, [x16, #328]
    49c8:	add	x16, x16, #0x148
    49cc:	br	x17

00000000000049d0 <PyArg_UnpackTuple@plt>:
    49d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    49d4:	ldr	x17, [x16, #336]
    49d8:	add	x16, x16, #0x150
    49dc:	br	x17

00000000000049e0 <Py_BuildValue@plt>:
    49e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    49e4:	ldr	x17, [x16, #344]
    49e8:	add	x16, x16, #0x158
    49ec:	br	x17

00000000000049f0 <PyErr_Occurred@plt>:
    49f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    49f4:	ldr	x17, [x16, #352]
    49f8:	add	x16, x16, #0x160
    49fc:	br	x17

0000000000004a00 <PyModule_Create2@plt>:
    4a00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a04:	ldr	x17, [x16, #360]
    4a08:	add	x16, x16, #0x168
    4a0c:	br	x17

0000000000004a10 <PyImport_ImportModuleNoBlock@plt>:
    4a10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a14:	ldr	x17, [x16, #368]
    4a18:	add	x16, x16, #0x170
    4a1c:	br	x17

0000000000004a20 <memcmp@plt>:
    4a20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a24:	ldr	x17, [x16, #376]
    4a28:	add	x16, x16, #0x178
    4a2c:	br	x17

0000000000004a30 <strcmp@plt>:
    4a30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a34:	ldr	x17, [x16, #384]
    4a38:	add	x16, x16, #0x180
    4a3c:	br	x17

0000000000004a40 <_Py_CheckFunctionResult@plt>:
    4a40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a44:	ldr	x17, [x16, #392]
    4a48:	add	x16, x16, #0x188
    4a4c:	br	x17

0000000000004a50 <PyFloat_AsDouble@plt>:
    4a50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a54:	ldr	x17, [x16, #400]
    4a58:	add	x16, x16, #0x190
    4a5c:	br	x17

0000000000004a60 <PyObject_IsTrue@plt>:
    4a60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a64:	ldr	x17, [x16, #408]
    4a68:	add	x16, x16, #0x198
    4a6c:	br	x17

0000000000004a70 <PyArg_ParseTuple@plt>:
    4a70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a74:	ldr	x17, [x16, #416]
    4a78:	add	x16, x16, #0x1a0
    4a7c:	br	x17

0000000000004a80 <Py_FatalError@plt>:
    4a80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a84:	ldr	x17, [x16, #424]
    4a88:	add	x16, x16, #0x1a8
    4a8c:	br	x17

0000000000004a90 <PyObject_Hash@plt>:
    4a90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4a94:	ldr	x17, [x16, #432]
    4a98:	add	x16, x16, #0x1b0
    4a9c:	br	x17

0000000000004aa0 <_PyObject_CallMethodId@plt>:
    4aa0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4aa4:	ldr	x17, [x16, #440]
    4aa8:	add	x16, x16, #0x1b8
    4aac:	br	x17

0000000000004ab0 <_PyTime_ObjectToTime_t@plt>:
    4ab0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4ab4:	ldr	x17, [x16, #448]
    4ab8:	add	x16, x16, #0x1c0
    4abc:	br	x17

0000000000004ac0 <modf@plt>:
    4ac0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4ac4:	ldr	x17, [x16, #456]
    4ac8:	add	x16, x16, #0x1c8
    4acc:	br	x17

0000000000004ad0 <PyLong_AsDouble@plt>:
    4ad0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4ad4:	ldr	x17, [x16, #464]
    4ad8:	add	x16, x16, #0x1d0
    4adc:	br	x17

0000000000004ae0 <round@plt>:
    4ae0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4ae4:	ldr	x17, [x16, #472]
    4ae8:	add	x16, x16, #0x1d8
    4aec:	br	x17

0000000000004af0 <_PyLong_AsTime_t@plt>:
    4af0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4af4:	ldr	x17, [x16, #480]
    4af8:	add	x16, x16, #0x1e0
    4afc:	br	x17

0000000000004b00 <_PyTraceMalloc_NewReference@plt>:
    4b00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b04:	ldr	x17, [x16, #488]
    4b08:	add	x16, x16, #0x1e8
    4b0c:	br	x17

0000000000004b10 <_PyObject_GetDictPtr@plt>:
    4b10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b14:	ldr	x17, [x16, #496]
    4b18:	add	x16, x16, #0x1f0
    4b1c:	br	x17

0000000000004b20 <PyUnicode_FromString@plt>:
    4b20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b24:	ldr	x17, [x16, #504]
    4b28:	add	x16, x16, #0x1f8
    4b2c:	br	x17

0000000000004b30 <_PyObject_CallMethodIdObjArgs@plt>:
    4b30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b34:	ldr	x17, [x16, #512]
    4b38:	add	x16, x16, #0x200
    4b3c:	br	x17

0000000000004b40 <PyType_GetFlags@plt>:
    4b40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b44:	ldr	x17, [x16, #520]
    4b48:	add	x16, x16, #0x208
    4b4c:	br	x17

0000000000004b50 <PyModule_AddObject@plt>:
    4b50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b54:	ldr	x17, [x16, #528]
    4b58:	add	x16, x16, #0x210
    4b5c:	br	x17

0000000000004b60 <PyBytes_AsString@plt>:
    4b60:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b64:	ldr	x17, [x16, #536]
    4b68:	add	x16, x16, #0x218
    4b6c:	br	x17

0000000000004b70 <PyCapsule_New@plt>:
    4b70:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b74:	ldr	x17, [x16, #544]
    4b78:	add	x16, x16, #0x220
    4b7c:	br	x17

0000000000004b80 <PyType_IsSubtype@plt>:
    4b80:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b84:	ldr	x17, [x16, #552]
    4b88:	add	x16, x16, #0x228
    4b8c:	br	x17

0000000000004b90 <PyUnicode_AsUTF8AndSize@plt>:
    4b90:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4b94:	ldr	x17, [x16, #560]
    4b98:	add	x16, x16, #0x230
    4b9c:	br	x17

0000000000004ba0 <PyTuple_Size@plt>:
    4ba0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4ba4:	ldr	x17, [x16, #568]
    4ba8:	add	x16, x16, #0x238
    4bac:	br	x17

0000000000004bb0 <PyErr_Format@plt>:
    4bb0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4bb4:	ldr	x17, [x16, #576]
    4bb8:	add	x16, x16, #0x240
    4bbc:	br	x17

0000000000004bc0 <PyNumber_Divmod@plt>:
    4bc0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4bc4:	ldr	x17, [x16, #584]
    4bc8:	add	x16, x16, #0x248
    4bcc:	br	x17

0000000000004bd0 <PyUnicode_FromStringAndSize@plt>:
    4bd0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4bd4:	ldr	x17, [x16, #592]
    4bd8:	add	x16, x16, #0x250
    4bdc:	br	x17

0000000000004be0 <_PyObject_MakeTpCall@plt>:
    4be0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4be4:	ldr	x17, [x16, #600]
    4be8:	add	x16, x16, #0x258
    4bec:	br	x17

0000000000004bf0 <PyUnicode_AppendAndDel@plt>:
    4bf0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4bf4:	ldr	x17, [x16, #608]
    4bf8:	add	x16, x16, #0x260
    4bfc:	br	x17

0000000000004c00 <_PyLong_AsInt@plt>:
    4c00:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4c04:	ldr	x17, [x16, #616]
    4c08:	add	x16, x16, #0x268
    4c0c:	br	x17

0000000000004c10 <_PyTime_localtime@plt>:
    4c10:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4c14:	ldr	x17, [x16, #624]
    4c18:	add	x16, x16, #0x270
    4c1c:	br	x17

0000000000004c20 <PyTuple_Pack@plt>:
    4c20:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4c24:	ldr	x17, [x16, #632]
    4c28:	add	x16, x16, #0x278
    4c2c:	br	x17

0000000000004c30 <PyNumber_TrueDivide@plt>:
    4c30:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4c34:	ldr	x17, [x16, #640]
    4c38:	add	x16, x16, #0x280
    4c3c:	br	x17

0000000000004c40 <PyUnicode_Substring@plt>:
    4c40:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4c44:	ldr	x17, [x16, #648]
    4c48:	add	x16, x16, #0x288
    4c4c:	br	x17

0000000000004c50 <PyNumber_FloorDivide@plt>:
    4c50:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    4c54:	ldr	x17, [x16, #656]
    4c58:	add	x16, x16, #0x290
    4c5c:	br	x17

Disassembly of section .text:

0000000000004c60 <PyInit__datetime@@Base-0xd150>:
    4c60:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    4c64:	ldr	x0, [x0, #4000]
    4c68:	cbz	x0, 4c70 <PyNumber_FloorDivide@plt+0x20>
    4c6c:	b	4980 <__gmon_start__@plt>
    4c70:	ret
    4c74:	stp	x29, x30, [sp, #-32]!
    4c78:	mov	x29, sp
    4c7c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4c80:	add	x0, x0, #0x28
    4c84:	str	x0, [sp, #24]
    4c88:	ldr	x0, [sp, #24]
    4c8c:	str	x0, [sp, #24]
    4c90:	ldr	x1, [sp, #24]
    4c94:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4c98:	add	x0, x0, #0x28
    4c9c:	cmp	x1, x0
    4ca0:	b.eq	4cd8 <PyNumber_FloorDivide@plt+0x88>  // b.none
    4ca4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    4ca8:	ldr	x0, [x0, #3936]
    4cac:	str	x0, [sp, #16]
    4cb0:	ldr	x0, [sp, #16]
    4cb4:	str	x0, [sp, #16]
    4cb8:	ldr	x0, [sp, #16]
    4cbc:	cmp	x0, #0x0
    4cc0:	b.eq	4cdc <PyNumber_FloorDivide@plt+0x8c>  // b.none
    4cc4:	ldr	x1, [sp, #16]
    4cc8:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4ccc:	add	x0, x0, #0x28
    4cd0:	blr	x1
    4cd4:	b	4cdc <PyNumber_FloorDivide@plt+0x8c>
    4cd8:	nop
    4cdc:	ldp	x29, x30, [sp], #32
    4ce0:	ret
    4ce4:	stp	x29, x30, [sp, #-48]!
    4ce8:	mov	x29, sp
    4cec:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4cf0:	add	x0, x0, #0x28
    4cf4:	str	x0, [sp, #40]
    4cf8:	ldr	x0, [sp, #40]
    4cfc:	str	x0, [sp, #40]
    4d00:	ldr	x1, [sp, #40]
    4d04:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4d08:	add	x0, x0, #0x28
    4d0c:	sub	x0, x1, x0
    4d10:	asr	x0, x0, #3
    4d14:	lsr	x1, x0, #63
    4d18:	add	x0, x1, x0
    4d1c:	asr	x0, x0, #1
    4d20:	str	x0, [sp, #32]
    4d24:	ldr	x0, [sp, #32]
    4d28:	cmp	x0, #0x0
    4d2c:	b.eq	4d68 <PyNumber_FloorDivide@plt+0x118>  // b.none
    4d30:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    4d34:	ldr	x0, [x0, #4056]
    4d38:	str	x0, [sp, #24]
    4d3c:	ldr	x0, [sp, #24]
    4d40:	str	x0, [sp, #24]
    4d44:	ldr	x0, [sp, #24]
    4d48:	cmp	x0, #0x0
    4d4c:	b.eq	4d6c <PyNumber_FloorDivide@plt+0x11c>  // b.none
    4d50:	ldr	x2, [sp, #24]
    4d54:	ldr	x1, [sp, #32]
    4d58:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4d5c:	add	x0, x0, #0x28
    4d60:	blr	x2
    4d64:	b	4d6c <PyNumber_FloorDivide@plt+0x11c>
    4d68:	nop
    4d6c:	ldp	x29, x30, [sp], #48
    4d70:	ret
    4d74:	stp	x29, x30, [sp, #-16]!
    4d78:	mov	x29, sp
    4d7c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4d80:	add	x0, x0, #0x28
    4d84:	ldrb	w0, [x0]
    4d88:	and	x0, x0, #0xff
    4d8c:	cmp	x0, #0x0
    4d90:	b.ne	4dcc <PyNumber_FloorDivide@plt+0x17c>  // b.any
    4d94:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    4d98:	ldr	x0, [x0, #3952]
    4d9c:	cmp	x0, #0x0
    4da0:	b.eq	4db4 <PyNumber_FloorDivide@plt+0x164>  // b.none
    4da4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    4da8:	add	x0, x0, #0x298
    4dac:	ldr	x0, [x0]
    4db0:	bl	4810 <__cxa_finalize@plt>
    4db4:	bl	4c74 <PyNumber_FloorDivide@plt+0x24>
    4db8:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    4dbc:	add	x0, x0, #0x28
    4dc0:	mov	w1, #0x1                   	// #1
    4dc4:	strb	w1, [x0]
    4dc8:	b	4dd0 <PyNumber_FloorDivide@plt+0x180>
    4dcc:	nop
    4dd0:	ldp	x29, x30, [sp], #16
    4dd4:	ret
    4dd8:	stp	x29, x30, [sp, #-16]!
    4ddc:	mov	x29, sp
    4de0:	bl	4ce4 <PyNumber_FloorDivide@plt+0x94>
    4de4:	nop
    4de8:	ldp	x29, x30, [sp], #16
    4dec:	ret
    4df0:	stp	x29, x30, [sp, #-32]!
    4df4:	mov	x29, sp
    4df8:	str	x0, [sp, #24]
    4dfc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    4e00:	ldr	x0, [x0, #3984]
    4e04:	ldr	w0, [x0, #4]
    4e08:	cmp	w0, #0x0
    4e0c:	b.eq	4e18 <PyNumber_FloorDivide@plt+0x1c8>  // b.none
    4e10:	ldr	x0, [sp, #24]
    4e14:	bl	4b00 <_PyTraceMalloc_NewReference@plt>
    4e18:	ldr	x0, [sp, #24]
    4e1c:	mov	x1, #0x1                   	// #1
    4e20:	str	x1, [x0]
    4e24:	nop
    4e28:	ldp	x29, x30, [sp], #32
    4e2c:	ret
    4e30:	sub	sp, sp, #0x10
    4e34:	str	x0, [sp, #8]
    4e38:	ldr	x0, [sp, #8]
    4e3c:	ldr	x0, [x0]
    4e40:	add	x1, x0, #0x1
    4e44:	ldr	x0, [sp, #8]
    4e48:	str	x1, [x0]
    4e4c:	nop
    4e50:	add	sp, sp, #0x10
    4e54:	ret
    4e58:	stp	x29, x30, [sp, #-48]!
    4e5c:	mov	x29, sp
    4e60:	str	x0, [sp, #40]
    4e64:	str	w1, [sp, #36]
    4e68:	str	x2, [sp, #24]
    4e6c:	ldr	x0, [sp, #24]
    4e70:	ldr	x0, [x0]
    4e74:	sub	x1, x0, #0x1
    4e78:	ldr	x0, [sp, #24]
    4e7c:	str	x1, [x0]
    4e80:	ldr	x0, [sp, #24]
    4e84:	ldr	x0, [x0]
    4e88:	cmp	x0, #0x0
    4e8c:	b.ne	4e98 <PyNumber_FloorDivide@plt+0x248>  // b.any
    4e90:	ldr	x0, [sp, #24]
    4e94:	bl	4850 <_Py_Dealloc@plt>
    4e98:	nop
    4e9c:	ldp	x29, x30, [sp], #48
    4ea0:	ret
    4ea4:	stp	x29, x30, [sp, #-32]!
    4ea8:	mov	x29, sp
    4eac:	str	x0, [sp, #24]
    4eb0:	ldr	x0, [sp, #24]
    4eb4:	cmp	x0, #0x0
    4eb8:	b.eq	4ec4 <PyNumber_FloorDivide@plt+0x274>  // b.none
    4ebc:	ldr	x0, [sp, #24]
    4ec0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    4ec4:	nop
    4ec8:	ldp	x29, x30, [sp], #32
    4ecc:	ret
    4ed0:	stp	x29, x30, [sp, #-32]!
    4ed4:	mov	x29, sp
    4ed8:	str	x0, [sp, #24]
    4edc:	ldr	x0, [sp, #24]
    4ee0:	cmp	x0, #0x0
    4ee4:	b.eq	4efc <PyNumber_FloorDivide@plt+0x2ac>  // b.none
    4ee8:	ldr	x2, [sp, #24]
    4eec:	mov	w1, #0x21d                 	// #541
    4ef0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    4ef4:	add	x0, x0, #0x908
    4ef8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    4efc:	nop
    4f00:	ldp	x29, x30, [sp], #32
    4f04:	ret
    4f08:	stp	x29, x30, [sp, #-32]!
    4f0c:	mov	x29, sp
    4f10:	str	x0, [sp, #24]
    4f14:	str	x1, [sp, #16]
    4f18:	ldr	x0, [sp, #24]
    4f1c:	ldr	x1, [sp, #16]
    4f20:	str	x1, [x0, #8]
    4f24:	ldr	x0, [sp, #16]
    4f28:	bl	4b40 <PyType_GetFlags@plt>
    4f2c:	and	x0, x0, #0x200
    4f30:	cmp	x0, #0x0
    4f34:	b.eq	4f40 <PyNumber_FloorDivide@plt+0x2f0>  // b.none
    4f38:	ldr	x0, [sp, #16]
    4f3c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    4f40:	ldr	x0, [sp, #24]
    4f44:	bl	4df0 <PyNumber_FloorDivide@plt+0x1a0>
    4f48:	ldr	x0, [sp, #24]
    4f4c:	ldp	x29, x30, [sp], #32
    4f50:	ret
    4f54:	sub	sp, sp, #0x10
    4f58:	str	x0, [sp, #8]
    4f5c:	ldr	x0, [sp, #8]
    4f60:	and	x0, x0, #0x7fffffffffffffff
    4f64:	add	sp, sp, #0x10
    4f68:	ret
    4f6c:	sub	sp, sp, #0x30
    4f70:	str	x0, [sp, #8]
    4f74:	ldr	x0, [sp, #8]
    4f78:	ldr	x0, [x0, #8]
    4f7c:	str	x0, [sp, #40]
    4f80:	ldr	x0, [sp, #40]
    4f84:	ldr	x0, [x0, #56]
    4f88:	str	x0, [sp, #32]
    4f8c:	ldr	x0, [sp, #40]
    4f90:	ldr	x0, [x0, #168]
    4f94:	and	x0, x0, #0x800
    4f98:	cmp	x0, #0x0
    4f9c:	b.ne	4fa8 <PyNumber_FloorDivide@plt+0x358>  // b.any
    4fa0:	mov	x0, #0x0                   	// #0
    4fa4:	b	4fc0 <PyNumber_FloorDivide@plt+0x370>
    4fa8:	ldr	x0, [sp, #32]
    4fac:	ldr	x1, [sp, #8]
    4fb0:	add	x0, x1, x0
    4fb4:	str	x0, [sp, #24]
    4fb8:	ldr	x0, [sp, #24]
    4fbc:	ldr	x0, [x0]
    4fc0:	add	sp, sp, #0x30
    4fc4:	ret
    4fc8:	stp	x29, x30, [sp, #-80]!
    4fcc:	mov	x29, sp
    4fd0:	str	x0, [sp, #40]
    4fd4:	str	x1, [sp, #32]
    4fd8:	str	x2, [sp, #24]
    4fdc:	str	x3, [sp, #16]
    4fe0:	ldr	x0, [sp, #40]
    4fe4:	bl	4f6c <PyNumber_FloorDivide@plt+0x31c>
    4fe8:	str	x0, [sp, #72]
    4fec:	ldr	x0, [sp, #72]
    4ff0:	cmp	x0, #0x0
    4ff4:	b.ne	501c <PyNumber_FloorDivide@plt+0x3cc>  // b.any
    4ff8:	ldr	x0, [sp, #24]
    4ffc:	bl	4f54 <PyNumber_FloorDivide@plt+0x304>
    5000:	str	x0, [sp, #56]
    5004:	ldr	x3, [sp, #16]
    5008:	ldr	x2, [sp, #56]
    500c:	ldr	x1, [sp, #32]
    5010:	ldr	x0, [sp, #40]
    5014:	bl	4be0 <_PyObject_MakeTpCall@plt>
    5018:	b	5048 <PyNumber_FloorDivide@plt+0x3f8>
    501c:	ldr	x4, [sp, #72]
    5020:	ldr	x3, [sp, #16]
    5024:	ldr	x2, [sp, #24]
    5028:	ldr	x1, [sp, #32]
    502c:	ldr	x0, [sp, #40]
    5030:	blr	x4
    5034:	str	x0, [sp, #64]
    5038:	mov	x2, #0x0                   	// #0
    503c:	ldr	x1, [sp, #64]
    5040:	ldr	x0, [sp, #40]
    5044:	bl	4a40 <_Py_CheckFunctionResult@plt>
    5048:	ldp	x29, x30, [sp], #80
    504c:	ret
    5050:	stp	x29, x30, [sp, #-32]!
    5054:	mov	x29, sp
    5058:	str	x0, [sp, #24]
    505c:	mov	x3, #0x0                   	// #0
    5060:	mov	x2, #0x0                   	// #0
    5064:	mov	x1, #0x0                   	// #0
    5068:	ldr	x0, [sp, #24]
    506c:	bl	4fc8 <PyNumber_FloorDivide@plt+0x378>
    5070:	ldp	x29, x30, [sp], #32
    5074:	ret
    5078:	sub	sp, sp, #0x60
    507c:	stp	x29, x30, [sp, #16]
    5080:	add	x29, sp, #0x10
    5084:	str	x0, [sp, #56]
    5088:	str	x1, [sp, #48]
    508c:	str	x2, [sp, #40]
    5090:	str	x3, [sp, #32]
    5094:	str	xzr, [sp, #88]
    5098:	ldr	x0, [sp, #32]
    509c:	cmp	x0, #0x0
    50a0:	b.eq	50b0 <PyNumber_FloorDivide@plt+0x460>  // b.none
    50a4:	ldr	x0, [sp, #32]
    50a8:	ldr	x0, [x0, #16]
    50ac:	b	50b4 <PyNumber_FloorDivide@plt+0x464>
    50b0:	mov	x0, #0x0                   	// #0
    50b4:	ldr	x1, [sp, #40]
    50b8:	add	x0, x0, x1
    50bc:	str	x0, [sp, #72]
    50c0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    50c4:	ldr	x0, [x0, #4024]
    50c8:	str	x0, [sp, #80]
    50cc:	ldr	x0, [sp, #32]
    50d0:	cmp	x0, #0x0
    50d4:	b.ne	50fc <PyNumber_FloorDivide@plt+0x4ac>  // b.any
    50d8:	ldr	x0, [sp, #40]
    50dc:	cmp	x0, #0x0
    50e0:	b.lt	50fc <PyNumber_FloorDivide@plt+0x4ac>  // b.tstop
    50e4:	ldr	x0, [sp, #40]
    50e8:	cmp	x0, #0x1
    50ec:	b.gt	50fc <PyNumber_FloorDivide@plt+0x4ac>
    50f0:	ldr	x0, [sp, #48]
    50f4:	cmp	x0, #0x0
    50f8:	b.ne	5130 <PyNumber_FloorDivide@plt+0x4e0>  // b.any
    50fc:	add	x0, sp, #0x40
    5100:	str	x0, [sp]
    5104:	mov	w7, #0x0                   	// #0
    5108:	mov	w6, #0x1                   	// #1
    510c:	mov	w5, #0x0                   	// #0
    5110:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    5114:	add	x4, x0, #0xd80
    5118:	ldr	x3, [sp, #32]
    511c:	mov	x2, #0x0                   	// #0
    5120:	ldr	x1, [sp, #40]
    5124:	ldr	x0, [sp, #48]
    5128:	bl	48b0 <_PyArg_UnpackKeywords@plt>
    512c:	b	5134 <PyNumber_FloorDivide@plt+0x4e4>
    5130:	ldr	x0, [sp, #48]
    5134:	str	x0, [sp, #48]
    5138:	ldr	x0, [sp, #48]
    513c:	cmp	x0, #0x0
    5140:	b.eq	5178 <PyNumber_FloorDivide@plt+0x528>  // b.none
    5144:	ldr	x0, [sp, #72]
    5148:	cmp	x0, #0x0
    514c:	b.eq	5160 <PyNumber_FloorDivide@plt+0x510>  // b.none
    5150:	ldr	x0, [sp, #48]
    5154:	ldr	x0, [x0]
    5158:	str	x0, [sp, #80]
    515c:	b	5164 <PyNumber_FloorDivide@plt+0x514>
    5160:	nop
    5164:	ldr	x1, [sp, #80]
    5168:	ldr	x0, [sp, #56]
    516c:	bl	e988 <PyNumber_FloorDivide@plt+0x9d38>
    5170:	str	x0, [sp, #88]
    5174:	b	517c <PyNumber_FloorDivide@plt+0x52c>
    5178:	nop
    517c:	ldr	x0, [sp, #88]
    5180:	ldp	x29, x30, [sp, #16]
    5184:	add	sp, sp, #0x60
    5188:	ret
    518c:	sub	sp, sp, #0x20
    5190:	str	w0, [sp, #12]
    5194:	str	w1, [sp, #8]
    5198:	str	x2, [sp]
    519c:	ldr	w1, [sp, #12]
    51a0:	ldr	w0, [sp, #8]
    51a4:	sdiv	w0, w1, w0
    51a8:	str	w0, [sp, #28]
    51ac:	ldr	w1, [sp, #28]
    51b0:	ldr	w0, [sp, #8]
    51b4:	mul	w0, w1, w0
    51b8:	ldr	w1, [sp, #12]
    51bc:	sub	w1, w1, w0
    51c0:	ldr	x0, [sp]
    51c4:	str	w1, [x0]
    51c8:	ldr	x0, [sp]
    51cc:	ldr	w0, [x0]
    51d0:	cmp	w0, #0x0
    51d4:	b.ge	51fc <PyNumber_FloorDivide@plt+0x5ac>  // b.tcont
    51d8:	ldr	w0, [sp, #28]
    51dc:	sub	w0, w0, #0x1
    51e0:	str	w0, [sp, #28]
    51e4:	ldr	x0, [sp]
    51e8:	ldr	w1, [x0]
    51ec:	ldr	w0, [sp, #8]
    51f0:	add	w1, w1, w0
    51f4:	ldr	x0, [sp]
    51f8:	str	w1, [x0]
    51fc:	ldr	w0, [sp, #28]
    5200:	add	sp, sp, #0x20
    5204:	ret
    5208:	stp	x29, x30, [sp, #-48]!
    520c:	mov	x29, sp
    5210:	str	x0, [sp, #24]
    5214:	str	x1, [sp, #16]
    5218:	ldr	x1, [sp, #16]
    521c:	ldr	x0, [sp, #24]
    5220:	bl	4950 <_PyLong_DivmodNear@plt>
    5224:	str	x0, [sp, #40]
    5228:	ldr	x0, [sp, #40]
    522c:	cmp	x0, #0x0
    5230:	b.ne	523c <PyNumber_FloorDivide@plt+0x5ec>  // b.any
    5234:	mov	x0, #0x0                   	// #0
    5238:	b	5268 <PyNumber_FloorDivide@plt+0x618>
    523c:	ldr	x0, [sp, #40]
    5240:	ldr	x0, [x0, #24]
    5244:	str	x0, [sp, #32]
    5248:	ldr	x0, [sp, #32]
    524c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    5250:	ldr	x2, [sp, #40]
    5254:	mov	w1, #0xc3                  	// #195
    5258:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    525c:	add	x0, x0, #0xb30
    5260:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    5264:	ldr	x0, [sp, #32]
    5268:	ldp	x29, x30, [sp], #48
    526c:	ret
    5270:	sub	sp, sp, #0x20
    5274:	str	w0, [sp, #12]
    5278:	ldr	w0, [sp, #12]
    527c:	str	w0, [sp, #28]
    5280:	ldr	w0, [sp, #28]
    5284:	and	w0, w0, #0x3
    5288:	cmp	w0, #0x0
    528c:	b.ne	52f0 <PyNumber_FloorDivide@plt+0x6a0>  // b.any
    5290:	ldr	w1, [sp, #28]
    5294:	mov	w0, #0x851f                	// #34079
    5298:	movk	w0, #0x51eb, lsl #16
    529c:	umull	x0, w1, w0
    52a0:	lsr	x0, x0, #32
    52a4:	lsr	w0, w0, #5
    52a8:	mov	w2, #0x64                  	// #100
    52ac:	mul	w0, w0, w2
    52b0:	sub	w0, w1, w0
    52b4:	cmp	w0, #0x0
    52b8:	b.ne	52e8 <PyNumber_FloorDivide@plt+0x698>  // b.any
    52bc:	ldr	w1, [sp, #28]
    52c0:	mov	w0, #0x851f                	// #34079
    52c4:	movk	w0, #0x51eb, lsl #16
    52c8:	umull	x0, w1, w0
    52cc:	lsr	x0, x0, #32
    52d0:	lsr	w0, w0, #7
    52d4:	mov	w2, #0x190                 	// #400
    52d8:	mul	w0, w0, w2
    52dc:	sub	w0, w1, w0
    52e0:	cmp	w0, #0x0
    52e4:	b.ne	52f0 <PyNumber_FloorDivide@plt+0x6a0>  // b.any
    52e8:	mov	w0, #0x1                   	// #1
    52ec:	b	52f4 <PyNumber_FloorDivide@plt+0x6a4>
    52f0:	mov	w0, #0x0                   	// #0
    52f4:	add	sp, sp, #0x20
    52f8:	ret
    52fc:	stp	x29, x30, [sp, #-32]!
    5300:	mov	x29, sp
    5304:	str	w0, [sp, #28]
    5308:	str	w1, [sp, #24]
    530c:	ldr	w0, [sp, #24]
    5310:	cmp	w0, #0x2
    5314:	b.ne	5330 <PyNumber_FloorDivide@plt+0x6e0>  // b.any
    5318:	ldr	w0, [sp, #28]
    531c:	bl	5270 <PyNumber_FloorDivide@plt+0x620>
    5320:	cmp	w0, #0x0
    5324:	b.eq	5330 <PyNumber_FloorDivide@plt+0x6e0>  // b.none
    5328:	mov	w0, #0x1d                  	// #29
    532c:	b	5340 <PyNumber_FloorDivide@plt+0x6f0>
    5330:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5334:	add	x0, x0, #0xb60
    5338:	ldrsw	x1, [sp, #24]
    533c:	ldr	w0, [x0, x1, lsl #2]
    5340:	ldp	x29, x30, [sp], #32
    5344:	ret
    5348:	stp	x29, x30, [sp, #-48]!
    534c:	mov	x29, sp
    5350:	str	w0, [sp, #28]
    5354:	str	w1, [sp, #24]
    5358:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    535c:	add	x0, x0, #0xb98
    5360:	ldrsw	x1, [sp, #24]
    5364:	ldr	w0, [x0, x1, lsl #2]
    5368:	str	w0, [sp, #44]
    536c:	ldr	w0, [sp, #24]
    5370:	cmp	w0, #0x2
    5374:	b.le	5394 <PyNumber_FloorDivide@plt+0x744>
    5378:	ldr	w0, [sp, #28]
    537c:	bl	5270 <PyNumber_FloorDivide@plt+0x620>
    5380:	cmp	w0, #0x0
    5384:	b.eq	5394 <PyNumber_FloorDivide@plt+0x744>  // b.none
    5388:	ldr	w0, [sp, #44]
    538c:	add	w0, w0, #0x1
    5390:	str	w0, [sp, #44]
    5394:	ldr	w0, [sp, #44]
    5398:	ldp	x29, x30, [sp], #48
    539c:	ret
    53a0:	sub	sp, sp, #0x20
    53a4:	str	w0, [sp, #12]
    53a8:	ldr	w0, [sp, #12]
    53ac:	sub	w0, w0, #0x1
    53b0:	str	w0, [sp, #28]
    53b4:	ldr	w1, [sp, #28]
    53b8:	mov	w0, #0x16d                 	// #365
    53bc:	mul	w1, w1, w0
    53c0:	ldr	w0, [sp, #28]
    53c4:	add	w2, w0, #0x3
    53c8:	cmp	w0, #0x0
    53cc:	csel	w0, w2, w0, lt  // lt = tstop
    53d0:	asr	w0, w0, #2
    53d4:	add	w1, w1, w0
    53d8:	ldr	w0, [sp, #28]
    53dc:	mov	w2, #0x851f                	// #34079
    53e0:	movk	w2, #0x51eb, lsl #16
    53e4:	smull	x2, w0, w2
    53e8:	lsr	x2, x2, #32
    53ec:	asr	w2, w2, #5
    53f0:	asr	w0, w0, #31
    53f4:	sub	w0, w0, w2
    53f8:	add	w1, w1, w0
    53fc:	ldr	w0, [sp, #28]
    5400:	mov	w2, #0x851f                	// #34079
    5404:	movk	w2, #0x51eb, lsl #16
    5408:	smull	x2, w0, w2
    540c:	lsr	x2, x2, #32
    5410:	asr	w2, w2, #7
    5414:	asr	w0, w0, #31
    5418:	sub	w0, w2, w0
    541c:	add	w0, w1, w0
    5420:	add	sp, sp, #0x20
    5424:	ret
    5428:	stp	x29, x30, [sp, #-80]!
    542c:	mov	x29, sp
    5430:	str	w0, [sp, #44]
    5434:	str	x1, [sp, #32]
    5438:	str	x2, [sp, #24]
    543c:	str	x3, [sp, #16]
    5440:	ldr	w0, [sp, #44]
    5444:	sub	w0, w0, #0x1
    5448:	str	w0, [sp, #44]
    544c:	ldr	w0, [sp, #44]
    5450:	mov	w1, #0x6bd                 	// #1725
    5454:	movk	w1, #0x396b, lsl #16
    5458:	smull	x1, w0, w1
    545c:	lsr	x1, x1, #32
    5460:	asr	w1, w1, #15
    5464:	asr	w0, w0, #31
    5468:	sub	w0, w1, w0
    546c:	str	w0, [sp, #72]
    5470:	ldr	w0, [sp, #44]
    5474:	mov	w1, #0x6bd                 	// #1725
    5478:	movk	w1, #0x396b, lsl #16
    547c:	smull	x1, w0, w1
    5480:	lsr	x1, x1, #32
    5484:	asr	w2, w1, #15
    5488:	asr	w1, w0, #31
    548c:	sub	w2, w2, w1
    5490:	mov	w1, #0x3ab1                	// #15025
    5494:	movk	w1, #0x2, lsl #16
    5498:	mul	w1, w2, w1
    549c:	sub	w0, w0, w1
    54a0:	str	w0, [sp, #68]
    54a4:	ldr	w1, [sp, #72]
    54a8:	mov	w0, #0x190                 	// #400
    54ac:	mul	w0, w1, w0
    54b0:	add	w1, w0, #0x1
    54b4:	ldr	x0, [sp, #32]
    54b8:	str	w1, [x0]
    54bc:	ldr	w0, [sp, #68]
    54c0:	mov	w1, #0x81fb                	// #33275
    54c4:	movk	w1, #0xe5ac, lsl #16
    54c8:	smull	x1, w0, w1
    54cc:	lsr	x1, x1, #32
    54d0:	add	w1, w0, w1
    54d4:	asr	w1, w1, #15
    54d8:	asr	w0, w0, #31
    54dc:	sub	w0, w1, w0
    54e0:	str	w0, [sp, #64]
    54e4:	ldr	w0, [sp, #68]
    54e8:	mov	w1, #0x81fb                	// #33275
    54ec:	movk	w1, #0xe5ac, lsl #16
    54f0:	smull	x1, w0, w1
    54f4:	lsr	x1, x1, #32
    54f8:	add	w1, w0, w1
    54fc:	asr	w2, w1, #15
    5500:	asr	w1, w0, #31
    5504:	sub	w2, w2, w1
    5508:	mov	w1, #0x8eac                	// #36524
    550c:	mul	w1, w2, w1
    5510:	sub	w0, w0, w1
    5514:	str	w0, [sp, #68]
    5518:	ldr	w0, [sp, #68]
    551c:	mov	w1, #0xb073                	// #45171
    5520:	movk	w1, #0x166d, lsl #16
    5524:	smull	x1, w0, w1
    5528:	lsr	x1, x1, #32
    552c:	asr	w1, w1, #7
    5530:	asr	w0, w0, #31
    5534:	sub	w0, w1, w0
    5538:	str	w0, [sp, #60]
    553c:	ldr	w0, [sp, #68]
    5540:	mov	w1, #0xb073                	// #45171
    5544:	movk	w1, #0x166d, lsl #16
    5548:	smull	x1, w0, w1
    554c:	lsr	x1, x1, #32
    5550:	asr	w2, w1, #7
    5554:	asr	w1, w0, #31
    5558:	sub	w2, w2, w1
    555c:	mov	w1, #0x5b5                 	// #1461
    5560:	mul	w1, w2, w1
    5564:	sub	w0, w0, w1
    5568:	str	w0, [sp, #68]
    556c:	ldr	w0, [sp, #68]
    5570:	mov	w1, #0xf9b1                	// #63921
    5574:	movk	w1, #0xb38c, lsl #16
    5578:	smull	x1, w0, w1
    557c:	lsr	x1, x1, #32
    5580:	add	w1, w0, w1
    5584:	asr	w1, w1, #8
    5588:	asr	w0, w0, #31
    558c:	sub	w0, w1, w0
    5590:	str	w0, [sp, #56]
    5594:	ldr	w0, [sp, #68]
    5598:	mov	w1, #0xf9b1                	// #63921
    559c:	movk	w1, #0xb38c, lsl #16
    55a0:	smull	x1, w0, w1
    55a4:	lsr	x1, x1, #32
    55a8:	add	w1, w0, w1
    55ac:	asr	w2, w1, #8
    55b0:	asr	w1, w0, #31
    55b4:	sub	w2, w2, w1
    55b8:	mov	w1, #0x16d                 	// #365
    55bc:	mul	w1, w2, w1
    55c0:	sub	w0, w0, w1
    55c4:	str	w0, [sp, #68]
    55c8:	ldr	x0, [sp, #32]
    55cc:	ldr	w1, [x0]
    55d0:	ldr	w2, [sp, #64]
    55d4:	mov	w0, #0x19                  	// #25
    55d8:	mul	w2, w2, w0
    55dc:	ldr	w0, [sp, #60]
    55e0:	add	w0, w2, w0
    55e4:	lsl	w2, w0, #2
    55e8:	ldr	w0, [sp, #56]
    55ec:	add	w0, w2, w0
    55f0:	add	w1, w1, w0
    55f4:	ldr	x0, [sp, #32]
    55f8:	str	w1, [x0]
    55fc:	ldr	w0, [sp, #56]
    5600:	cmp	w0, #0x4
    5604:	b.eq	5614 <PyNumber_FloorDivide@plt+0x9c4>  // b.none
    5608:	ldr	w0, [sp, #64]
    560c:	cmp	w0, #0x4
    5610:	b.ne	5644 <PyNumber_FloorDivide@plt+0x9f4>  // b.any
    5614:	ldr	x0, [sp, #32]
    5618:	ldr	w0, [x0]
    561c:	sub	w1, w0, #0x1
    5620:	ldr	x0, [sp, #32]
    5624:	str	w1, [x0]
    5628:	ldr	x0, [sp, #24]
    562c:	mov	w1, #0xc                   	// #12
    5630:	str	w1, [x0]
    5634:	ldr	x0, [sp, #16]
    5638:	mov	w1, #0x1f                  	// #31
    563c:	str	w1, [x0]
    5640:	b	5744 <PyNumber_FloorDivide@plt+0xaf4>
    5644:	ldr	w0, [sp, #56]
    5648:	cmp	w0, #0x3
    564c:	b.ne	5670 <PyNumber_FloorDivide@plt+0xa20>  // b.any
    5650:	ldr	w0, [sp, #60]
    5654:	cmp	w0, #0x18
    5658:	b.ne	5668 <PyNumber_FloorDivide@plt+0xa18>  // b.any
    565c:	ldr	w0, [sp, #64]
    5660:	cmp	w0, #0x3
    5664:	b.ne	5670 <PyNumber_FloorDivide@plt+0xa20>  // b.any
    5668:	mov	w0, #0x1                   	// #1
    566c:	b	5674 <PyNumber_FloorDivide@plt+0xa24>
    5670:	mov	w0, #0x0                   	// #0
    5674:	str	w0, [sp, #52]
    5678:	ldr	w0, [sp, #68]
    567c:	add	w0, w0, #0x32
    5680:	asr	w1, w0, #5
    5684:	ldr	x0, [sp, #24]
    5688:	str	w1, [x0]
    568c:	ldr	x0, [sp, #24]
    5690:	ldr	w1, [x0]
    5694:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5698:	add	x0, x0, #0xb98
    569c:	sxtw	x1, w1
    56a0:	ldr	w1, [x0, x1, lsl #2]
    56a4:	ldr	x0, [sp, #24]
    56a8:	ldr	w0, [x0]
    56ac:	cmp	w0, #0x2
    56b0:	b.le	56c8 <PyNumber_FloorDivide@plt+0xa78>
    56b4:	ldr	w0, [sp, #52]
    56b8:	cmp	w0, #0x0
    56bc:	b.eq	56c8 <PyNumber_FloorDivide@plt+0xa78>  // b.none
    56c0:	mov	w0, #0x1                   	// #1
    56c4:	b	56cc <PyNumber_FloorDivide@plt+0xa7c>
    56c8:	mov	w0, #0x0                   	// #0
    56cc:	add	w0, w0, w1
    56d0:	str	w0, [sp, #76]
    56d4:	ldr	w1, [sp, #76]
    56d8:	ldr	w0, [sp, #68]
    56dc:	cmp	w1, w0
    56e0:	b.le	5724 <PyNumber_FloorDivide@plt+0xad4>
    56e4:	ldr	x0, [sp, #24]
    56e8:	ldr	w0, [x0]
    56ec:	sub	w1, w0, #0x1
    56f0:	ldr	x0, [sp, #24]
    56f4:	str	w1, [x0]
    56f8:	ldr	x0, [sp, #32]
    56fc:	ldr	w2, [x0]
    5700:	ldr	x0, [sp, #24]
    5704:	ldr	w0, [x0]
    5708:	mov	w1, w0
    570c:	mov	w0, w2
    5710:	bl	52fc <PyNumber_FloorDivide@plt+0x6ac>
    5714:	mov	w1, w0
    5718:	ldr	w0, [sp, #76]
    571c:	sub	w0, w0, w1
    5720:	str	w0, [sp, #76]
    5724:	ldr	w1, [sp, #68]
    5728:	ldr	w0, [sp, #76]
    572c:	sub	w0, w1, w0
    5730:	str	w0, [sp, #68]
    5734:	ldr	w0, [sp, #68]
    5738:	add	w1, w0, #0x1
    573c:	ldr	x0, [sp, #16]
    5740:	str	w1, [x0]
    5744:	ldp	x29, x30, [sp], #80
    5748:	ret
    574c:	stp	x29, x30, [sp, #-48]!
    5750:	mov	x29, sp
    5754:	str	x19, [sp, #16]
    5758:	str	w0, [sp, #44]
    575c:	str	w1, [sp, #40]
    5760:	str	w2, [sp, #36]
    5764:	ldr	w0, [sp, #44]
    5768:	bl	53a0 <PyNumber_FloorDivide@plt+0x750>
    576c:	mov	w19, w0
    5770:	ldr	w1, [sp, #40]
    5774:	ldr	w0, [sp, #44]
    5778:	bl	5348 <PyNumber_FloorDivide@plt+0x6f8>
    577c:	add	w1, w19, w0
    5780:	ldr	w0, [sp, #36]
    5784:	add	w0, w1, w0
    5788:	ldr	x19, [sp, #16]
    578c:	ldp	x29, x30, [sp], #48
    5790:	ret
    5794:	stp	x29, x30, [sp, #-32]!
    5798:	mov	x29, sp
    579c:	str	w0, [sp, #28]
    57a0:	str	w1, [sp, #24]
    57a4:	str	w2, [sp, #20]
    57a8:	ldr	w2, [sp, #20]
    57ac:	ldr	w1, [sp, #24]
    57b0:	ldr	w0, [sp, #28]
    57b4:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    57b8:	add	w0, w0, #0x6
    57bc:	mov	w1, #0x2493                	// #9363
    57c0:	movk	w1, #0x9249, lsl #16
    57c4:	smull	x1, w0, w1
    57c8:	lsr	x1, x1, #32
    57cc:	add	w1, w0, w1
    57d0:	asr	w2, w1, #2
    57d4:	asr	w1, w0, #31
    57d8:	sub	w2, w2, w1
    57dc:	mov	w1, w2
    57e0:	lsl	w1, w1, #3
    57e4:	sub	w1, w1, w2
    57e8:	sub	w2, w0, w1
    57ec:	mov	w0, w2
    57f0:	ldp	x29, x30, [sp], #32
    57f4:	ret
    57f8:	stp	x29, x30, [sp, #-48]!
    57fc:	mov	x29, sp
    5800:	str	w0, [sp, #28]
    5804:	mov	w2, #0x1                   	// #1
    5808:	mov	w1, #0x1                   	// #1
    580c:	ldr	w0, [sp, #28]
    5810:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    5814:	str	w0, [sp, #40]
    5818:	ldr	w0, [sp, #40]
    581c:	add	w0, w0, #0x6
    5820:	mov	w1, #0x2493                	// #9363
    5824:	movk	w1, #0x9249, lsl #16
    5828:	smull	x1, w0, w1
    582c:	lsr	x1, x1, #32
    5830:	add	w1, w0, w1
    5834:	asr	w2, w1, #2
    5838:	asr	w1, w0, #31
    583c:	sub	w2, w2, w1
    5840:	mov	w1, w2
    5844:	lsl	w1, w1, #3
    5848:	sub	w1, w1, w2
    584c:	sub	w0, w0, w1
    5850:	str	w0, [sp, #36]
    5854:	ldr	w1, [sp, #40]
    5858:	ldr	w0, [sp, #36]
    585c:	sub	w0, w1, w0
    5860:	str	w0, [sp, #44]
    5864:	ldr	w0, [sp, #36]
    5868:	cmp	w0, #0x3
    586c:	b.le	587c <PyNumber_FloorDivide@plt+0xc2c>
    5870:	ldr	w0, [sp, #44]
    5874:	add	w0, w0, #0x7
    5878:	str	w0, [sp, #44]
    587c:	ldr	w0, [sp, #44]
    5880:	ldp	x29, x30, [sp], #48
    5884:	ret
    5888:	stp	x29, x30, [sp, #-32]!
    588c:	mov	x29, sp
    5890:	str	w0, [sp, #28]
    5894:	ldr	w1, [sp, #28]
    5898:	mov	w0, #0x3601                	// #13825
    589c:	movk	w0, #0xc465, lsl #16
    58a0:	cmp	w1, w0
    58a4:	b.lt	58c4 <PyNumber_FloorDivide@plt+0xc74>  // b.tstop
    58a8:	ldr	w1, [sp, #28]
    58ac:	mov	w0, #0xc9ff                	// #51711
    58b0:	movk	w0, #0x3b9a, lsl #16
    58b4:	cmp	w1, w0
    58b8:	b.gt	58c4 <PyNumber_FloorDivide@plt+0xc74>
    58bc:	mov	w0, #0x0                   	// #0
    58c0:	b	58f0 <PyNumber_FloorDivide@plt+0xca0>
    58c4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    58c8:	ldr	x0, [x0, #4008]
    58cc:	ldr	x4, [x0]
    58d0:	mov	w3, #0xc9ff                	// #51711
    58d4:	movk	w3, #0x3b9a, lsl #16
    58d8:	ldr	w2, [sp, #28]
    58dc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    58e0:	add	x1, x0, #0xbd0
    58e4:	mov	x0, x4
    58e8:	bl	4bb0 <PyErr_Format@plt>
    58ec:	mov	w0, #0xffffffff            	// #-1
    58f0:	ldp	x29, x30, [sp], #32
    58f4:	ret
    58f8:	stp	x29, x30, [sp, #-32]!
    58fc:	mov	x29, sp
    5900:	str	w0, [sp, #28]
    5904:	str	w1, [sp, #24]
    5908:	str	w2, [sp, #20]
    590c:	ldr	w0, [sp, #28]
    5910:	cmp	w0, #0x0
    5914:	b.le	5928 <PyNumber_FloorDivide@plt+0xcd8>
    5918:	ldr	w1, [sp, #28]
    591c:	mov	w0, #0x270f                	// #9999
    5920:	cmp	w1, w0
    5924:	b.le	5950 <PyNumber_FloorDivide@plt+0xd00>
    5928:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    592c:	ldr	x0, [x0, #3968]
    5930:	ldr	x3, [x0]
    5934:	ldr	w2, [sp, #28]
    5938:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    593c:	add	x1, x0, #0xbf8
    5940:	mov	x0, x3
    5944:	bl	4bb0 <PyErr_Format@plt>
    5948:	mov	w0, #0xffffffff            	// #-1
    594c:	b	59dc <PyNumber_FloorDivide@plt+0xd8c>
    5950:	ldr	w0, [sp, #24]
    5954:	cmp	w0, #0x0
    5958:	b.le	5968 <PyNumber_FloorDivide@plt+0xd18>
    595c:	ldr	w0, [sp, #24]
    5960:	cmp	w0, #0xc
    5964:	b.le	598c <PyNumber_FloorDivide@plt+0xd3c>
    5968:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    596c:	ldr	x0, [x0, #3968]
    5970:	ldr	x2, [x0]
    5974:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5978:	add	x1, x0, #0xc10
    597c:	mov	x0, x2
    5980:	bl	48c0 <PyErr_SetString@plt>
    5984:	mov	w0, #0xffffffff            	// #-1
    5988:	b	59dc <PyNumber_FloorDivide@plt+0xd8c>
    598c:	ldr	w0, [sp, #20]
    5990:	cmp	w0, #0x0
    5994:	b.le	59b4 <PyNumber_FloorDivide@plt+0xd64>
    5998:	ldr	w1, [sp, #24]
    599c:	ldr	w0, [sp, #28]
    59a0:	bl	52fc <PyNumber_FloorDivide@plt+0x6ac>
    59a4:	mov	w1, w0
    59a8:	ldr	w0, [sp, #20]
    59ac:	cmp	w0, w1
    59b0:	b.le	59d8 <PyNumber_FloorDivide@plt+0xd88>
    59b4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    59b8:	ldr	x0, [x0, #3968]
    59bc:	ldr	x2, [x0]
    59c0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    59c4:	add	x1, x0, #0xc28
    59c8:	mov	x0, x2
    59cc:	bl	48c0 <PyErr_SetString@plt>
    59d0:	mov	w0, #0xffffffff            	// #-1
    59d4:	b	59dc <PyNumber_FloorDivide@plt+0xd8c>
    59d8:	mov	w0, #0x0                   	// #0
    59dc:	ldp	x29, x30, [sp], #32
    59e0:	ret
    59e4:	stp	x29, x30, [sp, #-48]!
    59e8:	mov	x29, sp
    59ec:	str	w0, [sp, #44]
    59f0:	str	w1, [sp, #40]
    59f4:	str	w2, [sp, #36]
    59f8:	str	w3, [sp, #32]
    59fc:	str	w4, [sp, #28]
    5a00:	ldr	w0, [sp, #44]
    5a04:	cmp	w0, #0x0
    5a08:	b.lt	5a18 <PyNumber_FloorDivide@plt+0xdc8>  // b.tstop
    5a0c:	ldr	w0, [sp, #44]
    5a10:	cmp	w0, #0x17
    5a14:	b.le	5a3c <PyNumber_FloorDivide@plt+0xdec>
    5a18:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    5a1c:	ldr	x0, [x0, #3968]
    5a20:	ldr	x2, [x0]
    5a24:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5a28:	add	x1, x0, #0xc48
    5a2c:	mov	x0, x2
    5a30:	bl	48c0 <PyErr_SetString@plt>
    5a34:	mov	w0, #0xffffffff            	// #-1
    5a38:	b	5b38 <PyNumber_FloorDivide@plt+0xee8>
    5a3c:	ldr	w0, [sp, #40]
    5a40:	cmp	w0, #0x0
    5a44:	b.lt	5a54 <PyNumber_FloorDivide@plt+0xe04>  // b.tstop
    5a48:	ldr	w0, [sp, #40]
    5a4c:	cmp	w0, #0x3b
    5a50:	b.le	5a78 <PyNumber_FloorDivide@plt+0xe28>
    5a54:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    5a58:	ldr	x0, [x0, #3968]
    5a5c:	ldr	x2, [x0]
    5a60:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5a64:	add	x1, x0, #0xc60
    5a68:	mov	x0, x2
    5a6c:	bl	48c0 <PyErr_SetString@plt>
    5a70:	mov	w0, #0xffffffff            	// #-1
    5a74:	b	5b38 <PyNumber_FloorDivide@plt+0xee8>
    5a78:	ldr	w0, [sp, #36]
    5a7c:	cmp	w0, #0x0
    5a80:	b.lt	5a90 <PyNumber_FloorDivide@plt+0xe40>  // b.tstop
    5a84:	ldr	w0, [sp, #36]
    5a88:	cmp	w0, #0x3b
    5a8c:	b.le	5ab4 <PyNumber_FloorDivide@plt+0xe64>
    5a90:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    5a94:	ldr	x0, [x0, #3968]
    5a98:	ldr	x2, [x0]
    5a9c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5aa0:	add	x1, x0, #0xc78
    5aa4:	mov	x0, x2
    5aa8:	bl	48c0 <PyErr_SetString@plt>
    5aac:	mov	w0, #0xffffffff            	// #-1
    5ab0:	b	5b38 <PyNumber_FloorDivide@plt+0xee8>
    5ab4:	ldr	w0, [sp, #32]
    5ab8:	cmp	w0, #0x0
    5abc:	b.lt	5ad4 <PyNumber_FloorDivide@plt+0xe84>  // b.tstop
    5ac0:	ldr	w1, [sp, #32]
    5ac4:	mov	w0, #0x423f                	// #16959
    5ac8:	movk	w0, #0xf, lsl #16
    5acc:	cmp	w1, w0
    5ad0:	b.le	5af8 <PyNumber_FloorDivide@plt+0xea8>
    5ad4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    5ad8:	ldr	x0, [x0, #3968]
    5adc:	ldr	x2, [x0]
    5ae0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5ae4:	add	x1, x0, #0xc90
    5ae8:	mov	x0, x2
    5aec:	bl	48c0 <PyErr_SetString@plt>
    5af0:	mov	w0, #0xffffffff            	// #-1
    5af4:	b	5b38 <PyNumber_FloorDivide@plt+0xee8>
    5af8:	ldr	w0, [sp, #28]
    5afc:	cmp	w0, #0x0
    5b00:	b.eq	5b34 <PyNumber_FloorDivide@plt+0xee4>  // b.none
    5b04:	ldr	w0, [sp, #28]
    5b08:	cmp	w0, #0x1
    5b0c:	b.eq	5b34 <PyNumber_FloorDivide@plt+0xee4>  // b.none
    5b10:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    5b14:	ldr	x0, [x0, #3968]
    5b18:	ldr	x2, [x0]
    5b1c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5b20:	add	x1, x0, #0xcb8
    5b24:	mov	x0, x2
    5b28:	bl	48c0 <PyErr_SetString@plt>
    5b2c:	mov	w0, #0xffffffff            	// #-1
    5b30:	b	5b38 <PyNumber_FloorDivide@plt+0xee8>
    5b34:	mov	w0, #0x0                   	// #0
    5b38:	ldp	x29, x30, [sp], #48
    5b3c:	ret
    5b40:	stp	x29, x30, [sp, #-64]!
    5b44:	mov	x29, sp
    5b48:	str	x0, [sp, #40]
    5b4c:	str	x1, [sp, #32]
    5b50:	str	w2, [sp, #28]
    5b54:	ldr	x0, [sp, #32]
    5b58:	ldr	w0, [x0]
    5b5c:	cmp	w0, #0x0
    5b60:	b.lt	5b78 <PyNumber_FloorDivide@plt+0xf28>  // b.tstop
    5b64:	ldr	x0, [sp, #32]
    5b68:	ldr	w0, [x0]
    5b6c:	ldr	w1, [sp, #28]
    5b70:	cmp	w1, w0
    5b74:	b.gt	5bb0 <PyNumber_FloorDivide@plt+0xf60>
    5b78:	ldr	x0, [sp, #32]
    5b7c:	ldr	w0, [x0]
    5b80:	ldr	x2, [sp, #32]
    5b84:	ldr	w1, [sp, #28]
    5b88:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    5b8c:	str	w0, [sp, #60]
    5b90:	ldr	x0, [sp, #40]
    5b94:	ldr	w0, [x0]
    5b98:	ldr	w1, [sp, #60]
    5b9c:	add	w0, w1, w0
    5ba0:	str	w0, [sp, #56]
    5ba4:	ldr	x0, [sp, #40]
    5ba8:	ldr	w1, [sp, #56]
    5bac:	str	w1, [x0]
    5bb0:	nop
    5bb4:	ldp	x29, x30, [sp], #64
    5bb8:	ret
    5bbc:	stp	x29, x30, [sp, #-48]!
    5bc0:	mov	x29, sp
    5bc4:	str	x0, [sp, #40]
    5bc8:	str	x1, [sp, #32]
    5bcc:	str	x2, [sp, #24]
    5bd0:	ldr	x0, [sp, #24]
    5bd4:	ldr	w0, [x0]
    5bd8:	cmp	w0, #0x0
    5bdc:	b.lt	5bf8 <PyNumber_FloorDivide@plt+0xfa8>  // b.tstop
    5be0:	ldr	x0, [sp, #24]
    5be4:	ldr	w1, [x0]
    5be8:	mov	w0, #0x423f                	// #16959
    5bec:	movk	w0, #0xf, lsl #16
    5bf0:	cmp	w1, w0
    5bf4:	b.le	5c0c <PyNumber_FloorDivide@plt+0xfbc>
    5bf8:	mov	w2, #0x4240                	// #16960
    5bfc:	movk	w2, #0xf, lsl #16
    5c00:	ldr	x1, [sp, #24]
    5c04:	ldr	x0, [sp, #32]
    5c08:	bl	5b40 <PyNumber_FloorDivide@plt+0xef0>
    5c0c:	ldr	x0, [sp, #32]
    5c10:	ldr	w0, [x0]
    5c14:	cmp	w0, #0x0
    5c18:	b.lt	5c34 <PyNumber_FloorDivide@plt+0xfe4>  // b.tstop
    5c1c:	ldr	x0, [sp, #32]
    5c20:	ldr	w1, [x0]
    5c24:	mov	w0, #0x517f                	// #20863
    5c28:	movk	w0, #0x1, lsl #16
    5c2c:	cmp	w1, w0
    5c30:	b.le	5c48 <PyNumber_FloorDivide@plt+0xff8>
    5c34:	mov	w2, #0x5180                	// #20864
    5c38:	movk	w2, #0x1, lsl #16
    5c3c:	ldr	x1, [sp, #32]
    5c40:	ldr	x0, [sp, #40]
    5c44:	bl	5b40 <PyNumber_FloorDivide@plt+0xef0>
    5c48:	nop
    5c4c:	ldp	x29, x30, [sp], #48
    5c50:	ret
    5c54:	stp	x29, x30, [sp, #-64]!
    5c58:	mov	x29, sp
    5c5c:	str	x0, [sp, #40]
    5c60:	str	x1, [sp, #32]
    5c64:	str	x2, [sp, #24]
    5c68:	ldr	x0, [sp, #40]
    5c6c:	ldr	w2, [x0]
    5c70:	ldr	x0, [sp, #32]
    5c74:	ldr	w0, [x0]
    5c78:	mov	w1, w0
    5c7c:	mov	w0, w2
    5c80:	bl	52fc <PyNumber_FloorDivide@plt+0x6ac>
    5c84:	str	w0, [sp, #60]
    5c88:	ldr	x0, [sp, #24]
    5c8c:	ldr	w0, [x0]
    5c90:	cmp	w0, #0x0
    5c94:	b.le	5cac <PyNumber_FloorDivide@plt+0x105c>
    5c98:	ldr	x0, [sp, #24]
    5c9c:	ldr	w0, [x0]
    5ca0:	ldr	w1, [sp, #60]
    5ca4:	cmp	w1, w0
    5ca8:	b.ge	5e1c <PyNumber_FloorDivide@plt+0x11cc>  // b.tcont
    5cac:	ldr	x0, [sp, #24]
    5cb0:	ldr	w0, [x0]
    5cb4:	cmp	w0, #0x0
    5cb8:	b.ne	5d3c <PyNumber_FloorDivide@plt+0x10ec>  // b.any
    5cbc:	ldr	x0, [sp, #32]
    5cc0:	ldr	w0, [x0]
    5cc4:	sub	w1, w0, #0x1
    5cc8:	ldr	x0, [sp, #32]
    5ccc:	str	w1, [x0]
    5cd0:	ldr	x0, [sp, #32]
    5cd4:	ldr	w0, [x0]
    5cd8:	cmp	w0, #0x0
    5cdc:	b.le	5d0c <PyNumber_FloorDivide@plt+0x10bc>
    5ce0:	ldr	x0, [sp, #40]
    5ce4:	ldr	w2, [x0]
    5ce8:	ldr	x0, [sp, #32]
    5cec:	ldr	w0, [x0]
    5cf0:	mov	w1, w0
    5cf4:	mov	w0, w2
    5cf8:	bl	52fc <PyNumber_FloorDivide@plt+0x6ac>
    5cfc:	mov	w1, w0
    5d00:	ldr	x0, [sp, #24]
    5d04:	str	w1, [x0]
    5d08:	b	5e1c <PyNumber_FloorDivide@plt+0x11cc>
    5d0c:	ldr	x0, [sp, #40]
    5d10:	ldr	w0, [x0]
    5d14:	sub	w1, w0, #0x1
    5d18:	ldr	x0, [sp, #40]
    5d1c:	str	w1, [x0]
    5d20:	ldr	x0, [sp, #32]
    5d24:	mov	w1, #0xc                   	// #12
    5d28:	str	w1, [x0]
    5d2c:	ldr	x0, [sp, #24]
    5d30:	mov	w1, #0x1f                  	// #31
    5d34:	str	w1, [x0]
    5d38:	b	5e1c <PyNumber_FloorDivide@plt+0x11cc>
    5d3c:	ldr	x0, [sp, #24]
    5d40:	ldr	w1, [x0]
    5d44:	ldr	w0, [sp, #60]
    5d48:	add	w0, w0, #0x1
    5d4c:	cmp	w1, w0
    5d50:	b.ne	5da8 <PyNumber_FloorDivide@plt+0x1158>  // b.any
    5d54:	ldr	x0, [sp, #32]
    5d58:	ldr	w0, [x0]
    5d5c:	add	w1, w0, #0x1
    5d60:	ldr	x0, [sp, #32]
    5d64:	str	w1, [x0]
    5d68:	ldr	x0, [sp, #24]
    5d6c:	mov	w1, #0x1                   	// #1
    5d70:	str	w1, [x0]
    5d74:	ldr	x0, [sp, #32]
    5d78:	ldr	w0, [x0]
    5d7c:	cmp	w0, #0xc
    5d80:	b.le	5e1c <PyNumber_FloorDivide@plt+0x11cc>
    5d84:	ldr	x0, [sp, #32]
    5d88:	mov	w1, #0x1                   	// #1
    5d8c:	str	w1, [x0]
    5d90:	ldr	x0, [sp, #40]
    5d94:	ldr	w0, [x0]
    5d98:	add	w1, w0, #0x1
    5d9c:	ldr	x0, [sp, #40]
    5da0:	str	w1, [x0]
    5da4:	b	5e1c <PyNumber_FloorDivide@plt+0x11cc>
    5da8:	ldr	x0, [sp, #40]
    5dac:	ldr	w3, [x0]
    5db0:	ldr	x0, [sp, #32]
    5db4:	ldr	w0, [x0]
    5db8:	mov	w2, #0x1                   	// #1
    5dbc:	mov	w1, w0
    5dc0:	mov	w0, w3
    5dc4:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    5dc8:	mov	w1, w0
    5dcc:	ldr	x0, [sp, #24]
    5dd0:	ldr	w0, [x0]
    5dd4:	add	w0, w1, w0
    5dd8:	sub	w0, w0, #0x1
    5ddc:	str	w0, [sp, #56]
    5de0:	ldr	w0, [sp, #56]
    5de4:	cmp	w0, #0x0
    5de8:	b.le	5e48 <PyNumber_FloorDivide@plt+0x11f8>
    5dec:	ldr	w1, [sp, #56]
    5df0:	mov	w0, #0xb9db                	// #47579
    5df4:	movk	w0, #0x37, lsl #16
    5df8:	cmp	w1, w0
    5dfc:	b.gt	5e48 <PyNumber_FloorDivide@plt+0x11f8>
    5e00:	ldr	x3, [sp, #24]
    5e04:	ldr	x2, [sp, #32]
    5e08:	ldr	x1, [sp, #40]
    5e0c:	ldr	w0, [sp, #56]
    5e10:	bl	5428 <PyNumber_FloorDivide@plt+0x7d8>
    5e14:	mov	w0, #0x0                   	// #0
    5e18:	b	5e74 <PyNumber_FloorDivide@plt+0x1224>
    5e1c:	ldr	x0, [sp, #40]
    5e20:	ldr	w0, [x0]
    5e24:	cmp	w0, #0x0
    5e28:	b.le	5e50 <PyNumber_FloorDivide@plt+0x1200>
    5e2c:	ldr	x0, [sp, #40]
    5e30:	ldr	w1, [x0]
    5e34:	mov	w0, #0x270f                	// #9999
    5e38:	cmp	w1, w0
    5e3c:	b.gt	5e50 <PyNumber_FloorDivide@plt+0x1200>
    5e40:	mov	w0, #0x0                   	// #0
    5e44:	b	5e74 <PyNumber_FloorDivide@plt+0x1224>
    5e48:	nop
    5e4c:	b	5e54 <PyNumber_FloorDivide@plt+0x1204>
    5e50:	nop
    5e54:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    5e58:	ldr	x0, [x0, #4008]
    5e5c:	ldr	x2, [x0]
    5e60:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    5e64:	add	x1, x0, #0xcd8
    5e68:	mov	x0, x2
    5e6c:	bl	48c0 <PyErr_SetString@plt>
    5e70:	mov	w0, #0xffffffff            	// #-1
    5e74:	ldp	x29, x30, [sp], #64
    5e78:	ret
    5e7c:	stp	x29, x30, [sp, #-48]!
    5e80:	mov	x29, sp
    5e84:	str	x0, [sp, #40]
    5e88:	str	x1, [sp, #32]
    5e8c:	str	x2, [sp, #24]
    5e90:	ldr	x2, [sp, #24]
    5e94:	ldr	x1, [sp, #32]
    5e98:	ldr	x0, [sp, #40]
    5e9c:	bl	5c54 <PyNumber_FloorDivide@plt+0x1004>
    5ea0:	ldp	x29, x30, [sp], #48
    5ea4:	ret
    5ea8:	stp	x29, x30, [sp, #-80]!
    5eac:	mov	x29, sp
    5eb0:	str	x0, [sp, #72]
    5eb4:	str	x1, [sp, #64]
    5eb8:	str	x2, [sp, #56]
    5ebc:	str	x3, [sp, #48]
    5ec0:	str	x4, [sp, #40]
    5ec4:	str	x5, [sp, #32]
    5ec8:	str	x6, [sp, #24]
    5ecc:	mov	w2, #0x4240                	// #16960
    5ed0:	movk	w2, #0xf, lsl #16
    5ed4:	ldr	x1, [sp, #24]
    5ed8:	ldr	x0, [sp, #32]
    5edc:	bl	5b40 <PyNumber_FloorDivide@plt+0xef0>
    5ee0:	mov	w2, #0x3c                  	// #60
    5ee4:	ldr	x1, [sp, #32]
    5ee8:	ldr	x0, [sp, #40]
    5eec:	bl	5b40 <PyNumber_FloorDivide@plt+0xef0>
    5ef0:	mov	w2, #0x3c                  	// #60
    5ef4:	ldr	x1, [sp, #40]
    5ef8:	ldr	x0, [sp, #48]
    5efc:	bl	5b40 <PyNumber_FloorDivide@plt+0xef0>
    5f00:	mov	w2, #0x18                  	// #24
    5f04:	ldr	x1, [sp, #48]
    5f08:	ldr	x0, [sp, #56]
    5f0c:	bl	5b40 <PyNumber_FloorDivide@plt+0xef0>
    5f10:	ldr	x2, [sp, #56]
    5f14:	ldr	x1, [sp, #64]
    5f18:	ldr	x0, [sp, #72]
    5f1c:	bl	5e7c <PyNumber_FloorDivide@plt+0x122c>
    5f20:	ldp	x29, x30, [sp], #80
    5f24:	ret
    5f28:	stp	x29, x30, [sp, #-48]!
    5f2c:	mov	x29, sp
    5f30:	str	x0, [sp, #24]
    5f34:	str	x1, [sp, #16]
    5f38:	ldr	x0, [sp, #16]
    5f3c:	cmp	x0, #0x0
    5f40:	b.eq	5f4c <PyNumber_FloorDivide@plt+0x12fc>  // b.none
    5f44:	mov	x0, #0x28                  	// #40
    5f48:	b	5f50 <PyNumber_FloorDivide@plt+0x1300>
    5f4c:	mov	x0, #0x20                  	// #32
    5f50:	bl	48d0 <PyObject_Malloc@plt>
    5f54:	str	x0, [sp, #40]
    5f58:	ldr	x0, [sp, #40]
    5f5c:	cmp	x0, #0x0
    5f60:	b.ne	5f6c <PyNumber_FloorDivide@plt+0x131c>  // b.any
    5f64:	bl	4860 <PyErr_NoMemory@plt>
    5f68:	b	5f7c <PyNumber_FloorDivide@plt+0x132c>
    5f6c:	ldr	x1, [sp, #24]
    5f70:	ldr	x0, [sp, #40]
    5f74:	bl	4f08 <PyNumber_FloorDivide@plt+0x2b8>
    5f78:	ldr	x0, [sp, #40]
    5f7c:	ldp	x29, x30, [sp], #48
    5f80:	ret
    5f84:	stp	x29, x30, [sp, #-48]!
    5f88:	mov	x29, sp
    5f8c:	str	x0, [sp, #24]
    5f90:	str	x1, [sp, #16]
    5f94:	ldr	x0, [sp, #16]
    5f98:	cmp	x0, #0x0
    5f9c:	b.eq	5fa8 <PyNumber_FloorDivide@plt+0x1358>  // b.none
    5fa0:	mov	x0, #0x30                  	// #48
    5fa4:	b	5fac <PyNumber_FloorDivide@plt+0x135c>
    5fa8:	mov	x0, #0x28                  	// #40
    5fac:	bl	48d0 <PyObject_Malloc@plt>
    5fb0:	str	x0, [sp, #40]
    5fb4:	ldr	x0, [sp, #40]
    5fb8:	cmp	x0, #0x0
    5fbc:	b.ne	5fc8 <PyNumber_FloorDivide@plt+0x1378>  // b.any
    5fc0:	bl	4860 <PyErr_NoMemory@plt>
    5fc4:	b	5fd8 <PyNumber_FloorDivide@plt+0x1388>
    5fc8:	ldr	x1, [sp, #24]
    5fcc:	ldr	x0, [sp, #40]
    5fd0:	bl	4f08 <PyNumber_FloorDivide@plt+0x2b8>
    5fd4:	ldr	x0, [sp, #40]
    5fd8:	ldp	x29, x30, [sp], #48
    5fdc:	ret
    5fe0:	sub	sp, sp, #0x20
    5fe4:	str	x0, [sp, #24]
    5fe8:	str	w1, [sp, #20]
    5fec:	str	w2, [sp, #16]
    5ff0:	str	w3, [sp, #12]
    5ff4:	ldr	x0, [sp, #24]
    5ff8:	mov	x1, #0xffffffffffffffff    	// #-1
    5ffc:	str	x1, [x0, #16]
    6000:	ldr	w0, [sp, #20]
    6004:	asr	w0, w0, #8
    6008:	and	w1, w0, #0xff
    600c:	ldr	x0, [sp, #24]
    6010:	strb	w1, [x0, #25]
    6014:	ldr	w0, [sp, #20]
    6018:	and	w1, w0, #0xff
    601c:	ldr	x0, [sp, #24]
    6020:	strb	w1, [x0, #26]
    6024:	ldr	w0, [sp, #16]
    6028:	and	w1, w0, #0xff
    602c:	ldr	x0, [sp, #24]
    6030:	strb	w1, [x0, #27]
    6034:	ldr	w0, [sp, #12]
    6038:	and	w1, w0, #0xff
    603c:	ldr	x0, [sp, #24]
    6040:	strb	w1, [x0, #28]
    6044:	nop
    6048:	add	sp, sp, #0x20
    604c:	ret
    6050:	sub	sp, sp, #0x30
    6054:	str	x0, [sp, #24]
    6058:	str	x1, [sp, #16]
    605c:	str	x2, [sp, #8]
    6060:	str	xzr, [sp, #40]
    6064:	b	60dc <PyNumber_FloorDivide@plt+0x148c>
    6068:	ldr	x0, [sp, #24]
    606c:	add	x1, x0, #0x1
    6070:	str	x1, [sp, #24]
    6074:	ldrb	w0, [x0]
    6078:	sub	w0, w0, #0x30
    607c:	str	w0, [sp, #36]
    6080:	ldr	w0, [sp, #36]
    6084:	cmp	w0, #0x9
    6088:	b.ls	6094 <PyNumber_FloorDivide@plt+0x1444>  // b.plast
    608c:	mov	x0, #0x0                   	// #0
    6090:	b	60f0 <PyNumber_FloorDivide@plt+0x14a0>
    6094:	ldr	x0, [sp, #16]
    6098:	ldr	w1, [x0]
    609c:	mov	w0, w1
    60a0:	lsl	w0, w0, #2
    60a4:	add	w0, w0, w1
    60a8:	lsl	w0, w0, #1
    60ac:	mov	w1, w0
    60b0:	ldr	x0, [sp, #16]
    60b4:	str	w1, [x0]
    60b8:	ldr	x0, [sp, #16]
    60bc:	ldr	w1, [x0]
    60c0:	ldr	w0, [sp, #36]
    60c4:	add	w1, w1, w0
    60c8:	ldr	x0, [sp, #16]
    60cc:	str	w1, [x0]
    60d0:	ldr	x0, [sp, #40]
    60d4:	add	x0, x0, #0x1
    60d8:	str	x0, [sp, #40]
    60dc:	ldr	x1, [sp, #40]
    60e0:	ldr	x0, [sp, #8]
    60e4:	cmp	x1, x0
    60e8:	b.cc	6068 <PyNumber_FloorDivide@plt+0x1418>  // b.lo, b.ul, b.last
    60ec:	ldr	x0, [sp, #24]
    60f0:	add	sp, sp, #0x30
    60f4:	ret
    60f8:	stp	x29, x30, [sp, #-64]!
    60fc:	mov	x29, sp
    6100:	str	x0, [sp, #40]
    6104:	str	x1, [sp, #32]
    6108:	str	x2, [sp, #24]
    610c:	str	x3, [sp, #16]
    6110:	ldr	x0, [sp, #40]
    6114:	str	x0, [sp, #56]
    6118:	mov	x2, #0x4                   	// #4
    611c:	ldr	x1, [sp, #32]
    6120:	ldr	x0, [sp, #56]
    6124:	bl	6050 <PyNumber_FloorDivide@plt+0x1400>
    6128:	str	x0, [sp, #56]
    612c:	ldr	x0, [sp, #56]
    6130:	cmp	x0, #0x0
    6134:	b.ne	6140 <PyNumber_FloorDivide@plt+0x14f0>  // b.any
    6138:	mov	w0, #0xffffffff            	// #-1
    613c:	b	61d4 <PyNumber_FloorDivide@plt+0x1584>
    6140:	ldr	x0, [sp, #56]
    6144:	add	x1, x0, #0x1
    6148:	str	x1, [sp, #56]
    614c:	ldrb	w0, [x0]
    6150:	cmp	w0, #0x2d
    6154:	b.eq	6160 <PyNumber_FloorDivide@plt+0x1510>  // b.none
    6158:	mov	w0, #0xfffffffe            	// #-2
    615c:	b	61d4 <PyNumber_FloorDivide@plt+0x1584>
    6160:	mov	x2, #0x2                   	// #2
    6164:	ldr	x1, [sp, #24]
    6168:	ldr	x0, [sp, #56]
    616c:	bl	6050 <PyNumber_FloorDivide@plt+0x1400>
    6170:	str	x0, [sp, #56]
    6174:	ldr	x0, [sp, #56]
    6178:	cmp	x0, #0x0
    617c:	b.ne	6188 <PyNumber_FloorDivide@plt+0x1538>  // b.any
    6180:	mov	w0, #0xffffffff            	// #-1
    6184:	b	61d4 <PyNumber_FloorDivide@plt+0x1584>
    6188:	ldr	x0, [sp, #56]
    618c:	add	x1, x0, #0x1
    6190:	str	x1, [sp, #56]
    6194:	ldrb	w0, [x0]
    6198:	cmp	w0, #0x2d
    619c:	b.eq	61a8 <PyNumber_FloorDivide@plt+0x1558>  // b.none
    61a0:	mov	w0, #0xfffffffe            	// #-2
    61a4:	b	61d4 <PyNumber_FloorDivide@plt+0x1584>
    61a8:	mov	x2, #0x2                   	// #2
    61ac:	ldr	x1, [sp, #16]
    61b0:	ldr	x0, [sp, #56]
    61b4:	bl	6050 <PyNumber_FloorDivide@plt+0x1400>
    61b8:	str	x0, [sp, #56]
    61bc:	ldr	x0, [sp, #56]
    61c0:	cmp	x0, #0x0
    61c4:	b.ne	61d0 <PyNumber_FloorDivide@plt+0x1580>  // b.any
    61c8:	mov	w0, #0xffffffff            	// #-1
    61cc:	b	61d4 <PyNumber_FloorDivide@plt+0x1584>
    61d0:	mov	w0, #0x0                   	// #0
    61d4:	ldp	x29, x30, [sp], #64
    61d8:	ret
    61dc:	stp	x29, x30, [sp, #-128]!
    61e0:	mov	x29, sp
    61e4:	str	x0, [sp, #56]
    61e8:	str	x1, [sp, #48]
    61ec:	str	x2, [sp, #40]
    61f0:	str	x3, [sp, #32]
    61f4:	str	x4, [sp, #24]
    61f8:	str	x5, [sp, #16]
    61fc:	ldr	x0, [sp, #56]
    6200:	str	x0, [sp, #120]
    6204:	ldr	x0, [sp, #48]
    6208:	str	x0, [sp, #104]
    620c:	ldr	x0, [sp, #40]
    6210:	str	x0, [sp, #64]
    6214:	ldr	x0, [sp, #32]
    6218:	str	x0, [sp, #72]
    621c:	ldr	x0, [sp, #24]
    6220:	str	x0, [sp, #80]
    6224:	str	xzr, [sp, #112]
    6228:	b	62cc <PyNumber_FloorDivide@plt+0x167c>
    622c:	ldr	x0, [sp, #112]
    6230:	lsl	x0, x0, #3
    6234:	add	x1, sp, #0x40
    6238:	ldr	x0, [x1, x0]
    623c:	mov	x2, #0x2                   	// #2
    6240:	mov	x1, x0
    6244:	ldr	x0, [sp, #120]
    6248:	bl	6050 <PyNumber_FloorDivide@plt+0x1400>
    624c:	str	x0, [sp, #120]
    6250:	ldr	x0, [sp, #120]
    6254:	cmp	x0, #0x0
    6258:	b.ne	6264 <PyNumber_FloorDivide@plt+0x1614>  // b.any
    625c:	mov	w0, #0xfffffffd            	// #-3
    6260:	b	6370 <PyNumber_FloorDivide@plt+0x1720>
    6264:	ldr	x0, [sp, #120]
    6268:	add	x1, x0, #0x1
    626c:	str	x1, [sp, #120]
    6270:	ldrb	w0, [x0]
    6274:	strb	w0, [sp, #103]
    6278:	ldr	x1, [sp, #120]
    627c:	ldr	x0, [sp, #104]
    6280:	cmp	x1, x0
    6284:	b.cc	629c <PyNumber_FloorDivide@plt+0x164c>  // b.lo, b.ul, b.last
    6288:	ldrb	w0, [sp, #103]
    628c:	cmp	w0, #0x0
    6290:	cset	w0, ne  // ne = any
    6294:	and	w0, w0, #0xff
    6298:	b	6370 <PyNumber_FloorDivide@plt+0x1720>
    629c:	ldrb	w0, [sp, #103]
    62a0:	cmp	w0, #0x3a
    62a4:	b.ne	62b8 <PyNumber_FloorDivide@plt+0x1668>  // b.any
    62a8:	ldr	x0, [sp, #112]
    62ac:	add	x0, x0, #0x1
    62b0:	str	x0, [sp, #112]
    62b4:	b	62cc <PyNumber_FloorDivide@plt+0x167c>
    62b8:	ldrb	w0, [sp, #103]
    62bc:	cmp	w0, #0x2e
    62c0:	b.eq	62dc <PyNumber_FloorDivide@plt+0x168c>  // b.none
    62c4:	mov	w0, #0xfffffffc            	// #-4
    62c8:	b	6370 <PyNumber_FloorDivide@plt+0x1720>
    62cc:	ldr	x0, [sp, #112]
    62d0:	cmp	x0, #0x2
    62d4:	b.ls	622c <PyNumber_FloorDivide@plt+0x15dc>  // b.plast
    62d8:	b	62e0 <PyNumber_FloorDivide@plt+0x1690>
    62dc:	nop
    62e0:	ldr	x1, [sp, #104]
    62e4:	ldr	x0, [sp, #120]
    62e8:	sub	x0, x1, x0
    62ec:	str	x0, [sp, #88]
    62f0:	ldr	x0, [sp, #88]
    62f4:	cmp	x0, #0x6
    62f8:	b.eq	6310 <PyNumber_FloorDivide@plt+0x16c0>  // b.none
    62fc:	ldr	x0, [sp, #88]
    6300:	cmp	x0, #0x3
    6304:	b.eq	6310 <PyNumber_FloorDivide@plt+0x16c0>  // b.none
    6308:	mov	w0, #0xfffffffd            	// #-3
    630c:	b	6370 <PyNumber_FloorDivide@plt+0x1720>
    6310:	ldr	x2, [sp, #88]
    6314:	ldr	x1, [sp, #16]
    6318:	ldr	x0, [sp, #120]
    631c:	bl	6050 <PyNumber_FloorDivide@plt+0x1400>
    6320:	str	x0, [sp, #120]
    6324:	ldr	x0, [sp, #120]
    6328:	cmp	x0, #0x0
    632c:	b.ne	6338 <PyNumber_FloorDivide@plt+0x16e8>  // b.any
    6330:	mov	w0, #0xfffffffd            	// #-3
    6334:	b	6370 <PyNumber_FloorDivide@plt+0x1720>
    6338:	ldr	x0, [sp, #88]
    633c:	cmp	x0, #0x3
    6340:	b.ne	635c <PyNumber_FloorDivide@plt+0x170c>  // b.any
    6344:	ldr	x0, [sp, #16]
    6348:	ldr	w1, [x0]
    634c:	mov	w0, #0x3e8                 	// #1000
    6350:	mul	w1, w1, w0
    6354:	ldr	x0, [sp, #16]
    6358:	str	w1, [x0]
    635c:	ldr	x0, [sp, #120]
    6360:	ldrb	w0, [x0]
    6364:	cmp	w0, #0x0
    6368:	cset	w0, ne  // ne = any
    636c:	and	w0, w0, #0xff
    6370:	ldp	x29, x30, [sp], #128
    6374:	ret
    6378:	stp	x29, x30, [sp, #-144]!
    637c:	mov	x29, sp
    6380:	str	x0, [sp, #72]
    6384:	str	x1, [sp, #64]
    6388:	str	x2, [sp, #56]
    638c:	str	x3, [sp, #48]
    6390:	str	x4, [sp, #40]
    6394:	str	x5, [sp, #32]
    6398:	str	x6, [sp, #24]
    639c:	str	x7, [sp, #16]
    63a0:	ldr	x0, [sp, #72]
    63a4:	str	x0, [sp, #128]
    63a8:	ldr	x1, [sp, #72]
    63ac:	ldr	x0, [sp, #64]
    63b0:	add	x0, x1, x0
    63b4:	str	x0, [sp, #120]
    63b8:	ldr	x0, [sp, #128]
    63bc:	str	x0, [sp, #136]
    63c0:	ldr	x0, [sp, #136]
    63c4:	ldrb	w0, [x0]
    63c8:	cmp	w0, #0x2b
    63cc:	b.eq	63fc <PyNumber_FloorDivide@plt+0x17ac>  // b.none
    63d0:	ldr	x0, [sp, #136]
    63d4:	ldrb	w0, [x0]
    63d8:	cmp	w0, #0x2d
    63dc:	b.eq	63fc <PyNumber_FloorDivide@plt+0x17ac>  // b.none
    63e0:	ldr	x0, [sp, #136]
    63e4:	add	x0, x0, #0x1
    63e8:	str	x0, [sp, #136]
    63ec:	ldr	x1, [sp, #136]
    63f0:	ldr	x0, [sp, #120]
    63f4:	cmp	x1, x0
    63f8:	b.cc	63c0 <PyNumber_FloorDivide@plt+0x1770>  // b.lo, b.ul, b.last
    63fc:	ldr	x5, [sp, #32]
    6400:	ldr	x4, [sp, #40]
    6404:	ldr	x3, [sp, #48]
    6408:	ldr	x2, [sp, #56]
    640c:	ldr	x1, [sp, #136]
    6410:	ldr	x0, [sp, #72]
    6414:	bl	61dc <PyNumber_FloorDivide@plt+0x158c>
    6418:	str	w0, [sp, #116]
    641c:	ldr	w0, [sp, #116]
    6420:	cmp	w0, #0x0
    6424:	b.ge	6430 <PyNumber_FloorDivide@plt+0x17e0>  // b.tcont
    6428:	ldr	w0, [sp, #116]
    642c:	b	6568 <PyNumber_FloorDivide@plt+0x1918>
    6430:	ldr	x1, [sp, #136]
    6434:	ldr	x0, [sp, #120]
    6438:	cmp	x1, x0
    643c:	b.ne	645c <PyNumber_FloorDivide@plt+0x180c>  // b.any
    6440:	ldr	w0, [sp, #116]
    6444:	cmp	w0, #0x1
    6448:	b.ne	6454 <PyNumber_FloorDivide@plt+0x1804>  // b.any
    644c:	mov	w0, #0xfffffffb            	// #-5
    6450:	b	6568 <PyNumber_FloorDivide@plt+0x1918>
    6454:	mov	w0, #0x0                   	// #0
    6458:	b	6568 <PyNumber_FloorDivide@plt+0x1918>
    645c:	ldr	x1, [sp, #120]
    6460:	ldr	x0, [sp, #136]
    6464:	sub	x0, x1, x0
    6468:	str	x0, [sp, #104]
    646c:	ldr	x0, [sp, #104]
    6470:	cmp	x0, #0x6
    6474:	b.eq	6498 <PyNumber_FloorDivide@plt+0x1848>  // b.none
    6478:	ldr	x0, [sp, #104]
    647c:	cmp	x0, #0x9
    6480:	b.eq	6498 <PyNumber_FloorDivide@plt+0x1848>  // b.none
    6484:	ldr	x0, [sp, #104]
    6488:	cmp	x0, #0x10
    648c:	b.eq	6498 <PyNumber_FloorDivide@plt+0x1848>  // b.none
    6490:	mov	w0, #0xfffffffb            	// #-5
    6494:	b	6568 <PyNumber_FloorDivide@plt+0x1918>
    6498:	ldr	x0, [sp, #136]
    649c:	ldrb	w0, [x0]
    64a0:	cmp	w0, #0x2d
    64a4:	b.ne	64b0 <PyNumber_FloorDivide@plt+0x1860>  // b.any
    64a8:	mov	w0, #0xffffffff            	// #-1
    64ac:	b	64b4 <PyNumber_FloorDivide@plt+0x1864>
    64b0:	mov	w0, #0x1                   	// #1
    64b4:	str	w0, [sp, #100]
    64b8:	ldr	x0, [sp, #136]
    64bc:	add	x0, x0, #0x1
    64c0:	str	x0, [sp, #136]
    64c4:	str	wzr, [sp, #96]
    64c8:	str	wzr, [sp, #92]
    64cc:	str	wzr, [sp, #88]
    64d0:	add	x2, sp, #0x58
    64d4:	add	x1, sp, #0x5c
    64d8:	add	x0, sp, #0x60
    64dc:	ldr	x5, [sp, #16]
    64e0:	mov	x4, x2
    64e4:	mov	x3, x1
    64e8:	mov	x2, x0
    64ec:	ldr	x1, [sp, #120]
    64f0:	ldr	x0, [sp, #136]
    64f4:	bl	61dc <PyNumber_FloorDivide@plt+0x158c>
    64f8:	str	w0, [sp, #116]
    64fc:	ldr	w1, [sp, #96]
    6500:	mov	w0, #0xe10                 	// #3600
    6504:	mul	w2, w1, w0
    6508:	ldr	w1, [sp, #92]
    650c:	mov	w0, w1
    6510:	lsl	w0, w0, #4
    6514:	sub	w0, w0, w1
    6518:	lsl	w0, w0, #2
    651c:	add	w1, w2, w0
    6520:	ldr	w0, [sp, #88]
    6524:	add	w1, w1, w0
    6528:	ldr	w0, [sp, #100]
    652c:	mul	w1, w1, w0
    6530:	ldr	x0, [sp, #24]
    6534:	str	w1, [x0]
    6538:	ldr	x0, [sp, #16]
    653c:	ldr	w1, [x0]
    6540:	ldr	w0, [sp, #100]
    6544:	mul	w1, w1, w0
    6548:	ldr	x0, [sp, #16]
    654c:	str	w1, [x0]
    6550:	ldr	w0, [sp, #116]
    6554:	cmp	w0, #0x0
    6558:	b.eq	6564 <PyNumber_FloorDivide@plt+0x1914>  // b.none
    655c:	mov	w0, #0xfffffffb            	// #-5
    6560:	b	6568 <PyNumber_FloorDivide@plt+0x1918>
    6564:	mov	w0, #0x1                   	// #1
    6568:	ldp	x29, x30, [sp], #144
    656c:	ret
    6570:	stp	x29, x30, [sp, #-64]!
    6574:	mov	x29, sp
    6578:	str	w0, [sp, #44]
    657c:	str	w1, [sp, #40]
    6580:	str	w2, [sp, #36]
    6584:	str	x3, [sp, #24]
    6588:	ldr	w2, [sp, #36]
    658c:	ldr	w1, [sp, #40]
    6590:	ldr	w0, [sp, #44]
    6594:	bl	58f8 <PyNumber_FloorDivide@plt+0xca8>
    6598:	cmp	w0, #0x0
    659c:	b.ge	65a8 <PyNumber_FloorDivide@plt+0x1958>  // b.tcont
    65a0:	mov	x0, #0x0                   	// #0
    65a4:	b	65e4 <PyNumber_FloorDivide@plt+0x1994>
    65a8:	ldr	x0, [sp, #24]
    65ac:	ldr	x2, [x0, #304]
    65b0:	mov	x1, #0x0                   	// #0
    65b4:	ldr	x0, [sp, #24]
    65b8:	blr	x2
    65bc:	str	x0, [sp, #56]
    65c0:	ldr	x0, [sp, #56]
    65c4:	cmp	x0, #0x0
    65c8:	b.eq	65e0 <PyNumber_FloorDivide@plt+0x1990>  // b.none
    65cc:	ldr	w3, [sp, #36]
    65d0:	ldr	w2, [sp, #40]
    65d4:	ldr	w1, [sp, #44]
    65d8:	ldr	x0, [sp, #56]
    65dc:	bl	5fe0 <PyNumber_FloorDivide@plt+0x1390>
    65e0:	ldr	x0, [sp, #56]
    65e4:	ldp	x29, x30, [sp], #64
    65e8:	ret
    65ec:	sub	sp, sp, #0x50
    65f0:	stp	x29, x30, [sp, #16]
    65f4:	add	x29, sp, #0x10
    65f8:	str	w0, [sp, #60]
    65fc:	str	w1, [sp, #56]
    6600:	str	w2, [sp, #52]
    6604:	str	x3, [sp, #40]
    6608:	ldr	x1, [sp, #40]
    660c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6610:	add	x0, x0, #0x2b0
    6614:	cmp	x1, x0
    6618:	b.ne	6638 <PyNumber_FloorDivide@plt+0x19e8>  // b.any
    661c:	ldr	x3, [sp, #40]
    6620:	ldr	w2, [sp, #52]
    6624:	ldr	w1, [sp, #56]
    6628:	ldr	w0, [sp, #60]
    662c:	bl	6570 <PyNumber_FloorDivide@plt+0x1920>
    6630:	str	x0, [sp, #72]
    6634:	b	66a4 <PyNumber_FloorDivide@plt+0x1a54>
    6638:	ldr	x1, [sp, #40]
    663c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6640:	add	x0, x0, #0x450
    6644:	cmp	x1, x0
    6648:	b.ne	6684 <PyNumber_FloorDivide@plt+0x1a34>  // b.any
    664c:	ldr	x0, [sp, #40]
    6650:	str	x0, [sp]
    6654:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6658:	ldr	x7, [x0, #4024]
    665c:	mov	w6, #0x0                   	// #0
    6660:	mov	w5, #0x0                   	// #0
    6664:	mov	w4, #0x0                   	// #0
    6668:	mov	w3, #0x0                   	// #0
    666c:	ldr	w2, [sp, #52]
    6670:	ldr	w1, [sp, #56]
    6674:	ldr	w0, [sp, #60]
    6678:	bl	6844 <PyNumber_FloorDivide@plt+0x1bf4>
    667c:	str	x0, [sp, #72]
    6680:	b	66a4 <PyNumber_FloorDivide@plt+0x1a54>
    6684:	ldr	w4, [sp, #52]
    6688:	ldr	w3, [sp, #56]
    668c:	ldr	w2, [sp, #60]
    6690:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    6694:	add	x1, x0, #0xcf0
    6698:	ldr	x0, [sp, #40]
    669c:	bl	4990 <PyObject_CallFunction@plt>
    66a0:	str	x0, [sp, #72]
    66a4:	ldr	x0, [sp, #72]
    66a8:	ldp	x29, x30, [sp, #16]
    66ac:	add	sp, sp, #0x50
    66b0:	ret
    66b4:	stp	x29, x30, [sp, #-80]!
    66b8:	mov	x29, sp
    66bc:	str	w0, [sp, #60]
    66c0:	str	w1, [sp, #56]
    66c4:	str	w2, [sp, #52]
    66c8:	str	w3, [sp, #48]
    66cc:	str	w4, [sp, #44]
    66d0:	str	w5, [sp, #40]
    66d4:	str	w6, [sp, #36]
    66d8:	str	x7, [sp, #24]
    66dc:	ldr	x1, [sp, #24]
    66e0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    66e4:	ldr	x0, [x0, #4024]
    66e8:	cmp	x1, x0
    66ec:	cset	w0, ne  // ne = any
    66f0:	and	w0, w0, #0xff
    66f4:	strb	w0, [sp, #79]
    66f8:	ldr	w2, [sp, #52]
    66fc:	ldr	w1, [sp, #56]
    6700:	ldr	w0, [sp, #60]
    6704:	bl	58f8 <PyNumber_FloorDivide@plt+0xca8>
    6708:	cmp	w0, #0x0
    670c:	b.ge	6718 <PyNumber_FloorDivide@plt+0x1ac8>  // b.tcont
    6710:	mov	x0, #0x0                   	// #0
    6714:	b	683c <PyNumber_FloorDivide@plt+0x1bec>
    6718:	ldr	w4, [sp, #80]
    671c:	ldr	w3, [sp, #36]
    6720:	ldr	w2, [sp, #40]
    6724:	ldr	w1, [sp, #44]
    6728:	ldr	w0, [sp, #48]
    672c:	bl	59e4 <PyNumber_FloorDivide@plt+0xd94>
    6730:	cmp	w0, #0x0
    6734:	b.ge	6740 <PyNumber_FloorDivide@plt+0x1af0>  // b.tcont
    6738:	mov	x0, #0x0                   	// #0
    673c:	b	683c <PyNumber_FloorDivide@plt+0x1bec>
    6740:	ldr	x0, [sp, #24]
    6744:	bl	6d90 <PyNumber_FloorDivide@plt+0x2140>
    6748:	cmp	w0, #0x0
    674c:	b.ge	6758 <PyNumber_FloorDivide@plt+0x1b08>  // b.tcont
    6750:	mov	x0, #0x0                   	// #0
    6754:	b	683c <PyNumber_FloorDivide@plt+0x1bec>
    6758:	ldr	x0, [sp, #88]
    675c:	ldr	x2, [x0, #304]
    6760:	ldrb	w0, [sp, #79]
    6764:	mov	x1, x0
    6768:	ldr	x0, [sp, #88]
    676c:	blr	x2
    6770:	str	x0, [sp, #64]
    6774:	ldr	x0, [sp, #64]
    6778:	cmp	x0, #0x0
    677c:	b.eq	6838 <PyNumber_FloorDivide@plt+0x1be8>  // b.none
    6780:	ldr	x0, [sp, #64]
    6784:	ldrb	w1, [sp, #79]
    6788:	strb	w1, [x0, #24]
    678c:	ldr	w3, [sp, #52]
    6790:	ldr	w2, [sp, #56]
    6794:	ldr	w1, [sp, #60]
    6798:	ldr	x0, [sp, #64]
    679c:	bl	5fe0 <PyNumber_FloorDivide@plt+0x1390>
    67a0:	ldr	w0, [sp, #48]
    67a4:	and	w1, w0, #0xff
    67a8:	ldr	x0, [sp, #64]
    67ac:	strb	w1, [x0, #29]
    67b0:	ldr	w0, [sp, #44]
    67b4:	and	w1, w0, #0xff
    67b8:	ldr	x0, [sp, #64]
    67bc:	strb	w1, [x0, #30]
    67c0:	ldr	w0, [sp, #40]
    67c4:	and	w1, w0, #0xff
    67c8:	ldr	x0, [sp, #64]
    67cc:	strb	w1, [x0, #31]
    67d0:	ldr	w0, [sp, #36]
    67d4:	asr	w0, w0, #16
    67d8:	and	w1, w0, #0xff
    67dc:	ldr	x0, [sp, #64]
    67e0:	strb	w1, [x0, #32]
    67e4:	ldr	w0, [sp, #36]
    67e8:	asr	w0, w0, #8
    67ec:	and	w1, w0, #0xff
    67f0:	ldr	x0, [sp, #64]
    67f4:	strb	w1, [x0, #33]
    67f8:	ldr	w0, [sp, #36]
    67fc:	and	w1, w0, #0xff
    6800:	ldr	x0, [sp, #64]
    6804:	strb	w1, [x0, #34]
    6808:	ldrb	w0, [sp, #79]
    680c:	cmp	w0, #0x0
    6810:	b.eq	6828 <PyNumber_FloorDivide@plt+0x1bd8>  // b.none
    6814:	ldr	x0, [sp, #24]
    6818:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    681c:	ldr	x0, [sp, #64]
    6820:	ldr	x1, [sp, #24]
    6824:	str	x1, [x0, #40]
    6828:	ldr	w0, [sp, #80]
    682c:	and	w1, w0, #0xff
    6830:	ldr	x0, [sp, #64]
    6834:	strb	w1, [x0, #35]
    6838:	ldr	x0, [sp, #64]
    683c:	ldp	x29, x30, [sp], #80
    6840:	ret
    6844:	sub	sp, sp, #0x50
    6848:	stp	x29, x30, [sp, #16]
    684c:	add	x29, sp, #0x10
    6850:	str	w0, [sp, #76]
    6854:	str	w1, [sp, #72]
    6858:	str	w2, [sp, #68]
    685c:	str	w3, [sp, #64]
    6860:	str	w4, [sp, #60]
    6864:	str	w5, [sp, #56]
    6868:	str	w6, [sp, #52]
    686c:	str	x7, [sp, #40]
    6870:	ldr	x0, [sp, #80]
    6874:	str	x0, [sp, #8]
    6878:	str	wzr, [sp]
    687c:	ldr	x7, [sp, #40]
    6880:	ldr	w6, [sp, #52]
    6884:	ldr	w5, [sp, #56]
    6888:	ldr	w4, [sp, #60]
    688c:	ldr	w3, [sp, #64]
    6890:	ldr	w2, [sp, #68]
    6894:	ldr	w1, [sp, #72]
    6898:	ldr	w0, [sp, #76]
    689c:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
    68a0:	ldp	x29, x30, [sp, #16]
    68a4:	add	sp, sp, #0x50
    68a8:	ret
    68ac:	sub	sp, sp, #0x60
    68b0:	stp	x29, x30, [sp, #16]
    68b4:	add	x29, sp, #0x10
    68b8:	str	w0, [sp, #76]
    68bc:	str	w1, [sp, #72]
    68c0:	str	w2, [sp, #68]
    68c4:	str	w3, [sp, #64]
    68c8:	str	w4, [sp, #60]
    68cc:	str	w5, [sp, #56]
    68d0:	str	w6, [sp, #52]
    68d4:	str	x7, [sp, #40]
    68d8:	ldr	x1, [sp, #104]
    68dc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    68e0:	add	x0, x0, #0x450
    68e4:	cmp	x1, x0
    68e8:	b.ne	692c <PyNumber_FloorDivide@plt+0x1cdc>  // b.any
    68ec:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    68f0:	add	x0, x0, #0x450
    68f4:	str	x0, [sp, #8]
    68f8:	ldr	w0, [sp, #96]
    68fc:	str	w0, [sp]
    6900:	ldr	x7, [sp, #40]
    6904:	ldr	w6, [sp, #52]
    6908:	ldr	w5, [sp, #56]
    690c:	ldr	w4, [sp, #60]
    6910:	ldr	w3, [sp, #64]
    6914:	ldr	w2, [sp, #68]
    6918:	ldr	w1, [sp, #72]
    691c:	ldr	w0, [sp, #76]
    6920:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
    6924:	str	x0, [sp, #88]
    6928:	b	6968 <PyNumber_FloorDivide@plt+0x1d18>
    692c:	ldr	x0, [sp, #40]
    6930:	str	x0, [sp, #8]
    6934:	ldr	w0, [sp, #52]
    6938:	str	w0, [sp]
    693c:	ldr	w7, [sp, #56]
    6940:	ldr	w6, [sp, #60]
    6944:	ldr	w5, [sp, #64]
    6948:	ldr	w4, [sp, #68]
    694c:	ldr	w3, [sp, #72]
    6950:	ldr	w2, [sp, #76]
    6954:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    6958:	add	x1, x0, #0xcf8
    695c:	ldr	x0, [sp, #104]
    6960:	bl	4990 <PyObject_CallFunction@plt>
    6964:	str	x0, [sp, #88]
    6968:	ldr	x0, [sp, #88]
    696c:	ldp	x29, x30, [sp, #16]
    6970:	add	sp, sp, #0x60
    6974:	ret
    6978:	sub	sp, sp, #0x50
    697c:	stp	x29, x30, [sp, #16]
    6980:	add	x29, sp, #0x10
    6984:	str	w0, [sp, #76]
    6988:	str	w1, [sp, #72]
    698c:	str	w2, [sp, #68]
    6990:	str	w3, [sp, #64]
    6994:	str	w4, [sp, #60]
    6998:	str	w5, [sp, #56]
    699c:	str	w6, [sp, #52]
    69a0:	str	x7, [sp, #40]
    69a4:	ldr	x0, [sp, #80]
    69a8:	str	x0, [sp, #8]
    69ac:	str	wzr, [sp]
    69b0:	ldr	x7, [sp, #40]
    69b4:	ldr	w6, [sp, #52]
    69b8:	ldr	w5, [sp, #56]
    69bc:	ldr	w4, [sp, #60]
    69c0:	ldr	w3, [sp, #64]
    69c4:	ldr	w2, [sp, #68]
    69c8:	ldr	w1, [sp, #72]
    69cc:	ldr	w0, [sp, #76]
    69d0:	bl	68ac <PyNumber_FloorDivide@plt+0x1c5c>
    69d4:	ldp	x29, x30, [sp, #16]
    69d8:	add	sp, sp, #0x50
    69dc:	ret
    69e0:	stp	x29, x30, [sp, #-80]!
    69e4:	mov	x29, sp
    69e8:	str	w0, [sp, #60]
    69ec:	str	w1, [sp, #56]
    69f0:	str	w2, [sp, #52]
    69f4:	str	w3, [sp, #48]
    69f8:	str	x4, [sp, #40]
    69fc:	str	w5, [sp, #36]
    6a00:	str	x6, [sp, #24]
    6a04:	ldr	x1, [sp, #40]
    6a08:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6a0c:	ldr	x0, [x0, #4024]
    6a10:	cmp	x1, x0
    6a14:	cset	w0, ne  // ne = any
    6a18:	and	w0, w0, #0xff
    6a1c:	strb	w0, [sp, #79]
    6a20:	ldr	w4, [sp, #36]
    6a24:	ldr	w3, [sp, #48]
    6a28:	ldr	w2, [sp, #52]
    6a2c:	ldr	w1, [sp, #56]
    6a30:	ldr	w0, [sp, #60]
    6a34:	bl	59e4 <PyNumber_FloorDivide@plt+0xd94>
    6a38:	cmp	w0, #0x0
    6a3c:	b.ge	6a48 <PyNumber_FloorDivide@plt+0x1df8>  // b.tcont
    6a40:	mov	x0, #0x0                   	// #0
    6a44:	b	6b3c <PyNumber_FloorDivide@plt+0x1eec>
    6a48:	ldr	x0, [sp, #40]
    6a4c:	bl	6d90 <PyNumber_FloorDivide@plt+0x2140>
    6a50:	cmp	w0, #0x0
    6a54:	b.ge	6a60 <PyNumber_FloorDivide@plt+0x1e10>  // b.tcont
    6a58:	mov	x0, #0x0                   	// #0
    6a5c:	b	6b3c <PyNumber_FloorDivide@plt+0x1eec>
    6a60:	ldr	x0, [sp, #24]
    6a64:	ldr	x2, [x0, #304]
    6a68:	ldrb	w0, [sp, #79]
    6a6c:	mov	x1, x0
    6a70:	ldr	x0, [sp, #24]
    6a74:	blr	x2
    6a78:	str	x0, [sp, #64]
    6a7c:	ldr	x0, [sp, #64]
    6a80:	cmp	x0, #0x0
    6a84:	b.eq	6b38 <PyNumber_FloorDivide@plt+0x1ee8>  // b.none
    6a88:	ldr	x0, [sp, #64]
    6a8c:	ldrb	w1, [sp, #79]
    6a90:	strb	w1, [x0, #24]
    6a94:	ldr	x0, [sp, #64]
    6a98:	mov	x1, #0xffffffffffffffff    	// #-1
    6a9c:	str	x1, [x0, #16]
    6aa0:	ldr	w0, [sp, #60]
    6aa4:	and	w1, w0, #0xff
    6aa8:	ldr	x0, [sp, #64]
    6aac:	strb	w1, [x0, #25]
    6ab0:	ldr	w0, [sp, #56]
    6ab4:	and	w1, w0, #0xff
    6ab8:	ldr	x0, [sp, #64]
    6abc:	strb	w1, [x0, #26]
    6ac0:	ldr	w0, [sp, #52]
    6ac4:	and	w1, w0, #0xff
    6ac8:	ldr	x0, [sp, #64]
    6acc:	strb	w1, [x0, #27]
    6ad0:	ldr	w0, [sp, #48]
    6ad4:	asr	w0, w0, #16
    6ad8:	and	w1, w0, #0xff
    6adc:	ldr	x0, [sp, #64]
    6ae0:	strb	w1, [x0, #28]
    6ae4:	ldr	w0, [sp, #48]
    6ae8:	asr	w0, w0, #8
    6aec:	and	w1, w0, #0xff
    6af0:	ldr	x0, [sp, #64]
    6af4:	strb	w1, [x0, #29]
    6af8:	ldr	w0, [sp, #48]
    6afc:	and	w1, w0, #0xff
    6b00:	ldr	x0, [sp, #64]
    6b04:	strb	w1, [x0, #30]
    6b08:	ldrb	w0, [sp, #79]
    6b0c:	cmp	w0, #0x0
    6b10:	b.eq	6b28 <PyNumber_FloorDivide@plt+0x1ed8>  // b.none
    6b14:	ldr	x0, [sp, #40]
    6b18:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    6b1c:	ldr	x0, [sp, #64]
    6b20:	ldr	x1, [sp, #40]
    6b24:	str	x1, [x0, #32]
    6b28:	ldr	w0, [sp, #36]
    6b2c:	and	w1, w0, #0xff
    6b30:	ldr	x0, [sp, #64]
    6b34:	strb	w1, [x0, #31]
    6b38:	ldr	x0, [sp, #64]
    6b3c:	ldp	x29, x30, [sp], #80
    6b40:	ret
    6b44:	stp	x29, x30, [sp, #-48]!
    6b48:	mov	x29, sp
    6b4c:	str	w0, [sp, #44]
    6b50:	str	w1, [sp, #40]
    6b54:	str	w2, [sp, #36]
    6b58:	str	w3, [sp, #32]
    6b5c:	str	x4, [sp, #24]
    6b60:	str	x5, [sp, #16]
    6b64:	ldr	x6, [sp, #16]
    6b68:	mov	w5, #0x0                   	// #0
    6b6c:	ldr	x4, [sp, #24]
    6b70:	ldr	w3, [sp, #32]
    6b74:	ldr	w2, [sp, #36]
    6b78:	ldr	w1, [sp, #40]
    6b7c:	ldr	w0, [sp, #44]
    6b80:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
    6b84:	ldp	x29, x30, [sp], #48
    6b88:	ret
    6b8c:	stp	x29, x30, [sp, #-64]!
    6b90:	mov	x29, sp
    6b94:	str	w0, [sp, #44]
    6b98:	str	w1, [sp, #40]
    6b9c:	str	w2, [sp, #36]
    6ba0:	str	w3, [sp, #32]
    6ba4:	str	x4, [sp, #24]
    6ba8:	ldr	w0, [sp, #32]
    6bac:	cmp	w0, #0x0
    6bb0:	b.eq	6bc4 <PyNumber_FloorDivide@plt+0x1f74>  // b.none
    6bb4:	add	x2, sp, #0x24
    6bb8:	add	x1, sp, #0x28
    6bbc:	add	x0, sp, #0x2c
    6bc0:	bl	5bbc <PyNumber_FloorDivide@plt+0xf6c>
    6bc4:	ldr	w0, [sp, #44]
    6bc8:	bl	5888 <PyNumber_FloorDivide@plt+0xc38>
    6bcc:	cmp	w0, #0x0
    6bd0:	b.ge	6bdc <PyNumber_FloorDivide@plt+0x1f8c>  // b.tcont
    6bd4:	mov	x0, #0x0                   	// #0
    6bd8:	b	6c34 <PyNumber_FloorDivide@plt+0x1fe4>
    6bdc:	ldr	x0, [sp, #24]
    6be0:	ldr	x2, [x0, #304]
    6be4:	mov	x1, #0x0                   	// #0
    6be8:	ldr	x0, [sp, #24]
    6bec:	blr	x2
    6bf0:	str	x0, [sp, #56]
    6bf4:	ldr	x0, [sp, #56]
    6bf8:	cmp	x0, #0x0
    6bfc:	b.eq	6c30 <PyNumber_FloorDivide@plt+0x1fe0>  // b.none
    6c00:	ldr	x0, [sp, #56]
    6c04:	mov	x1, #0xffffffffffffffff    	// #-1
    6c08:	str	x1, [x0, #16]
    6c0c:	ldr	w1, [sp, #44]
    6c10:	ldr	x0, [sp, #56]
    6c14:	str	w1, [x0, #24]
    6c18:	ldr	w1, [sp, #40]
    6c1c:	ldr	x0, [sp, #56]
    6c20:	str	w1, [x0, #28]
    6c24:	ldr	w1, [sp, #36]
    6c28:	ldr	x0, [sp, #56]
    6c2c:	str	w1, [x0, #32]
    6c30:	ldr	x0, [sp, #56]
    6c34:	ldp	x29, x30, [sp], #64
    6c38:	ret
    6c3c:	stp	x29, x30, [sp, #-48]!
    6c40:	mov	x29, sp
    6c44:	str	x0, [sp, #24]
    6c48:	str	x1, [sp, #16]
    6c4c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6c50:	add	x0, x0, #0xad0
    6c54:	str	x0, [sp, #40]
    6c58:	ldr	x0, [sp, #40]
    6c5c:	ldr	x2, [x0, #304]
    6c60:	mov	x1, #0x0                   	// #0
    6c64:	ldr	x0, [sp, #40]
    6c68:	blr	x2
    6c6c:	str	x0, [sp, #32]
    6c70:	ldr	x0, [sp, #32]
    6c74:	cmp	x0, #0x0
    6c78:	b.ne	6c84 <PyNumber_FloorDivide@plt+0x2034>  // b.any
    6c7c:	mov	x0, #0x0                   	// #0
    6c80:	b	6cb0 <PyNumber_FloorDivide@plt+0x2060>
    6c84:	ldr	x0, [sp, #24]
    6c88:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    6c8c:	ldr	x0, [sp, #32]
    6c90:	ldr	x1, [sp, #24]
    6c94:	str	x1, [x0, #16]
    6c98:	ldr	x0, [sp, #16]
    6c9c:	bl	4ea4 <PyNumber_FloorDivide@plt+0x254>
    6ca0:	ldr	x0, [sp, #32]
    6ca4:	ldr	x1, [sp, #16]
    6ca8:	str	x1, [x0, #24]
    6cac:	ldr	x0, [sp, #32]
    6cb0:	ldp	x29, x30, [sp], #48
    6cb4:	ret
    6cb8:	stp	x29, x30, [sp, #-32]!
    6cbc:	mov	x29, sp
    6cc0:	str	x0, [sp, #24]
    6cc4:	str	x1, [sp, #16]
    6cc8:	ldr	x0, [sp, #16]
    6ccc:	cmp	x0, #0x0
    6cd0:	b.ne	6d04 <PyNumber_FloorDivide@plt+0x20b4>  // b.any
    6cd4:	ldr	x0, [sp, #24]
    6cd8:	bl	9f98 <PyNumber_FloorDivide@plt+0x5348>
    6cdc:	cmp	w0, #0x0
    6ce0:	b.ne	6d04 <PyNumber_FloorDivide@plt+0x20b4>  // b.any
    6ce4:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    6ce8:	add	x0, x0, #0x30
    6cec:	ldr	x0, [x0]
    6cf0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    6cf4:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    6cf8:	add	x0, x0, #0x30
    6cfc:	ldr	x0, [x0]
    6d00:	b	6d88 <PyNumber_FloorDivide@plt+0x2138>
    6d04:	ldr	x0, [sp, #24]
    6d08:	ldr	w0, [x0, #24]
    6d0c:	cmn	w0, #0x1
    6d10:	b.ne	6d34 <PyNumber_FloorDivide@plt+0x20e4>  // b.any
    6d14:	ldr	x0, [sp, #24]
    6d18:	ldr	w0, [x0, #28]
    6d1c:	cmp	w0, #0x0
    6d20:	b.ne	6d34 <PyNumber_FloorDivide@plt+0x20e4>  // b.any
    6d24:	ldr	x0, [sp, #24]
    6d28:	ldr	w0, [x0, #32]
    6d2c:	cmp	w0, #0x0
    6d30:	b.le	6d54 <PyNumber_FloorDivide@plt+0x2104>
    6d34:	ldr	x0, [sp, #24]
    6d38:	ldr	w0, [x0, #24]
    6d3c:	cmn	w0, #0x1
    6d40:	b.lt	6d54 <PyNumber_FloorDivide@plt+0x2104>  // b.tstop
    6d44:	ldr	x0, [sp, #24]
    6d48:	ldr	w0, [x0, #24]
    6d4c:	cmp	w0, #0x0
    6d50:	b.le	6d7c <PyNumber_FloorDivide@plt+0x212c>
    6d54:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6d58:	ldr	x0, [x0, #3968]
    6d5c:	ldr	x3, [x0]
    6d60:	ldr	x2, [sp, #24]
    6d64:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    6d68:	add	x1, x0, #0xd08
    6d6c:	mov	x0, x3
    6d70:	bl	4bb0 <PyErr_Format@plt>
    6d74:	mov	x0, #0x0                   	// #0
    6d78:	b	6d88 <PyNumber_FloorDivide@plt+0x2138>
    6d7c:	ldr	x1, [sp, #16]
    6d80:	ldr	x0, [sp, #24]
    6d84:	bl	6c3c <PyNumber_FloorDivide@plt+0x1fec>
    6d88:	ldp	x29, x30, [sp], #32
    6d8c:	ret
    6d90:	stp	x29, x30, [sp, #-32]!
    6d94:	mov	x29, sp
    6d98:	str	x0, [sp, #24]
    6d9c:	ldr	x1, [sp, #24]
    6da0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6da4:	ldr	x0, [x0, #4024]
    6da8:	cmp	x1, x0
    6dac:	b.eq	6de8 <PyNumber_FloorDivide@plt+0x2198>  // b.none
    6db0:	ldr	x0, [sp, #24]
    6db4:	ldr	x1, [x0, #8]
    6db8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6dbc:	add	x0, x0, #0x930
    6dc0:	cmp	x1, x0
    6dc4:	b.eq	6de8 <PyNumber_FloorDivide@plt+0x2198>  // b.none
    6dc8:	ldr	x0, [sp, #24]
    6dcc:	ldr	x2, [x0, #8]
    6dd0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6dd4:	add	x1, x0, #0x930
    6dd8:	mov	x0, x2
    6ddc:	bl	4b80 <PyType_IsSubtype@plt>
    6de0:	cmp	w0, #0x0
    6de4:	b.eq	6df0 <PyNumber_FloorDivide@plt+0x21a0>  // b.none
    6de8:	mov	w0, #0x0                   	// #0
    6dec:	b	6e20 <PyNumber_FloorDivide@plt+0x21d0>
    6df0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6df4:	ldr	x0, [x0, #3976]
    6df8:	ldr	x3, [x0]
    6dfc:	ldr	x0, [sp, #24]
    6e00:	ldr	x0, [x0, #8]
    6e04:	ldr	x0, [x0, #24]
    6e08:	mov	x2, x0
    6e0c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    6e10:	add	x1, x0, #0xd70
    6e14:	mov	x0, x3
    6e18:	bl	4bb0 <PyErr_Format@plt>
    6e1c:	mov	w0, #0xffffffff            	// #-1
    6e20:	ldp	x29, x30, [sp], #32
    6e24:	ret
    6e28:	stp	x29, x30, [sp, #-48]!
    6e2c:	mov	x29, sp
    6e30:	str	x0, [sp, #24]
    6e34:	str	xzr, [sp, #40]
    6e38:	ldr	x0, [sp, #24]
    6e3c:	ldr	x1, [x0, #8]
    6e40:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6e44:	add	x0, x0, #0x450
    6e48:	cmp	x1, x0
    6e4c:	b.eq	6e70 <PyNumber_FloorDivide@plt+0x2220>  // b.none
    6e50:	ldr	x0, [sp, #24]
    6e54:	ldr	x2, [x0, #8]
    6e58:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6e5c:	add	x1, x0, #0x450
    6e60:	mov	x0, x2
    6e64:	bl	4b80 <PyType_IsSubtype@plt>
    6e68:	cmp	w0, #0x0
    6e6c:	b.eq	6e90 <PyNumber_FloorDivide@plt+0x2240>  // b.none
    6e70:	ldr	x0, [sp, #24]
    6e74:	ldrb	w0, [x0, #24]
    6e78:	cmp	w0, #0x0
    6e7c:	b.eq	6e90 <PyNumber_FloorDivide@plt+0x2240>  // b.none
    6e80:	ldr	x0, [sp, #24]
    6e84:	ldr	x0, [x0, #40]
    6e88:	str	x0, [sp, #40]
    6e8c:	b	6ee4 <PyNumber_FloorDivide@plt+0x2294>
    6e90:	ldr	x0, [sp, #24]
    6e94:	ldr	x1, [x0, #8]
    6e98:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6e9c:	add	x0, x0, #0x790
    6ea0:	cmp	x1, x0
    6ea4:	b.eq	6ec8 <PyNumber_FloorDivide@plt+0x2278>  // b.none
    6ea8:	ldr	x0, [sp, #24]
    6eac:	ldr	x2, [x0, #8]
    6eb0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6eb4:	add	x1, x0, #0x790
    6eb8:	mov	x0, x2
    6ebc:	bl	4b80 <PyType_IsSubtype@plt>
    6ec0:	cmp	w0, #0x0
    6ec4:	b.eq	6ee4 <PyNumber_FloorDivide@plt+0x2294>  // b.none
    6ec8:	ldr	x0, [sp, #24]
    6ecc:	ldrb	w0, [x0, #24]
    6ed0:	cmp	w0, #0x0
    6ed4:	b.eq	6ee4 <PyNumber_FloorDivide@plt+0x2294>  // b.none
    6ed8:	ldr	x0, [sp, #24]
    6edc:	ldr	x0, [x0, #32]
    6ee0:	str	x0, [sp, #40]
    6ee4:	ldr	x0, [sp, #40]
    6ee8:	ldp	x29, x30, [sp], #48
    6eec:	ret
    6ef0:	stp	x29, x30, [sp, #-64]!
    6ef4:	mov	x29, sp
    6ef8:	str	x0, [sp, #40]
    6efc:	str	x1, [sp, #32]
    6f00:	str	x2, [sp, #24]
    6f04:	ldr	x1, [sp, #40]
    6f08:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6f0c:	ldr	x0, [x0, #4024]
    6f10:	cmp	x1, x0
    6f14:	b.ne	6f30 <PyNumber_FloorDivide@plt+0x22e0>  // b.any
    6f18:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6f1c:	ldr	x0, [x0, #4024]
    6f20:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    6f24:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6f28:	ldr	x0, [x0, #4024]
    6f2c:	b	7088 <PyNumber_FloorDivide@plt+0x2438>
    6f30:	ldr	x3, [sp, #24]
    6f34:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    6f38:	add	x2, x0, #0xdb8
    6f3c:	ldr	x1, [sp, #32]
    6f40:	ldr	x0, [sp, #40]
    6f44:	bl	47c0 <PyObject_CallMethod@plt>
    6f48:	str	x0, [sp, #56]
    6f4c:	ldr	x1, [sp, #56]
    6f50:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    6f54:	ldr	x0, [x0, #4024]
    6f58:	cmp	x1, x0
    6f5c:	b.eq	6f6c <PyNumber_FloorDivide@plt+0x231c>  // b.none
    6f60:	ldr	x0, [sp, #56]
    6f64:	cmp	x0, #0x0
    6f68:	b.ne	6f74 <PyNumber_FloorDivide@plt+0x2324>  // b.any
    6f6c:	ldr	x0, [sp, #56]
    6f70:	b	7088 <PyNumber_FloorDivide@plt+0x2438>
    6f74:	ldr	x0, [sp, #56]
    6f78:	ldr	x1, [x0, #8]
    6f7c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6f80:	add	x0, x0, #0x5f0
    6f84:	cmp	x1, x0
    6f88:	b.eq	6fac <PyNumber_FloorDivide@plt+0x235c>  // b.none
    6f8c:	ldr	x0, [sp, #56]
    6f90:	ldr	x2, [x0, #8]
    6f94:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    6f98:	add	x1, x0, #0x5f0
    6f9c:	mov	x0, x2
    6fa0:	bl	4b80 <PyType_IsSubtype@plt>
    6fa4:	cmp	w0, #0x0
    6fa8:	b.eq	7034 <PyNumber_FloorDivide@plt+0x23e4>  // b.none
    6fac:	ldr	x0, [sp, #56]
    6fb0:	ldr	w0, [x0, #24]
    6fb4:	cmn	w0, #0x1
    6fb8:	b.ne	6fdc <PyNumber_FloorDivide@plt+0x238c>  // b.any
    6fbc:	ldr	x0, [sp, #56]
    6fc0:	ldr	w0, [x0, #28]
    6fc4:	cmp	w0, #0x0
    6fc8:	b.ne	6fdc <PyNumber_FloorDivide@plt+0x238c>  // b.any
    6fcc:	ldr	x0, [sp, #56]
    6fd0:	ldr	w0, [x0, #32]
    6fd4:	cmp	w0, #0x0
    6fd8:	b.le	6ffc <PyNumber_FloorDivide@plt+0x23ac>
    6fdc:	ldr	x0, [sp, #56]
    6fe0:	ldr	w0, [x0, #24]
    6fe4:	cmn	w0, #0x1
    6fe8:	b.lt	6ffc <PyNumber_FloorDivide@plt+0x23ac>  // b.tstop
    6fec:	ldr	x0, [sp, #56]
    6ff0:	ldr	w0, [x0, #24]
    6ff4:	cmp	w0, #0x0
    6ff8:	b.le	7080 <PyNumber_FloorDivide@plt+0x2430>
    6ffc:	ldr	x2, [sp, #56]
    7000:	mov	w1, #0x49b                 	// #1179
    7004:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7008:	add	x0, x0, #0xb30
    700c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7010:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7014:	ldr	x0, [x0, #3968]
    7018:	ldr	x2, [x0]
    701c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7020:	add	x1, x0, #0xdc0
    7024:	mov	x0, x2
    7028:	bl	4bb0 <PyErr_Format@plt>
    702c:	mov	x0, #0x0                   	// #0
    7030:	b	7088 <PyNumber_FloorDivide@plt+0x2438>
    7034:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7038:	ldr	x0, [x0, #3976]
    703c:	ldr	x4, [x0]
    7040:	ldr	x0, [sp, #56]
    7044:	ldr	x0, [x0, #8]
    7048:	ldr	x0, [x0, #24]
    704c:	mov	x3, x0
    7050:	ldr	x2, [sp, #32]
    7054:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7058:	add	x1, x0, #0xe20
    705c:	mov	x0, x4
    7060:	bl	4bb0 <PyErr_Format@plt>
    7064:	ldr	x2, [sp, #56]
    7068:	mov	w1, #0x4a7                 	// #1191
    706c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7070:	add	x0, x0, #0xb30
    7074:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7078:	mov	x0, #0x0                   	// #0
    707c:	b	7088 <PyNumber_FloorDivide@plt+0x2438>
    7080:	nop
    7084:	ldr	x0, [sp, #56]
    7088:	ldp	x29, x30, [sp], #64
    708c:	ret
    7090:	stp	x29, x30, [sp, #-32]!
    7094:	mov	x29, sp
    7098:	str	x0, [sp, #24]
    709c:	str	x1, [sp, #16]
    70a0:	ldr	x2, [sp, #16]
    70a4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    70a8:	add	x1, x0, #0xe58
    70ac:	ldr	x0, [sp, #24]
    70b0:	bl	6ef0 <PyNumber_FloorDivide@plt+0x22a0>
    70b4:	ldp	x29, x30, [sp], #32
    70b8:	ret
    70bc:	stp	x29, x30, [sp, #-32]!
    70c0:	mov	x29, sp
    70c4:	str	x0, [sp, #24]
    70c8:	str	x1, [sp, #16]
    70cc:	ldr	x2, [sp, #16]
    70d0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    70d4:	add	x1, x0, #0xe68
    70d8:	ldr	x0, [sp, #24]
    70dc:	bl	6ef0 <PyNumber_FloorDivide@plt+0x22a0>
    70e0:	ldp	x29, x30, [sp], #32
    70e4:	ret
    70e8:	stp	x29, x30, [sp, #-48]!
    70ec:	mov	x29, sp
    70f0:	str	x0, [sp, #24]
    70f4:	str	x1, [sp, #16]
    70f8:	ldr	x1, [sp, #24]
    70fc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7100:	ldr	x0, [x0, #4024]
    7104:	cmp	x1, x0
    7108:	b.ne	7124 <PyNumber_FloorDivide@plt+0x24d4>  // b.any
    710c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7110:	ldr	x0, [x0, #4024]
    7114:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    7118:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    711c:	ldr	x0, [x0, #4024]
    7120:	b	71c8 <PyNumber_FloorDivide@plt+0x2578>
    7124:	mov	x3, #0x0                   	// #0
    7128:	ldr	x2, [sp, #16]
    712c:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    7130:	add	x1, x0, #0xdc0
    7134:	ldr	x0, [sp, #24]
    7138:	bl	4b30 <_PyObject_CallMethodIdObjArgs@plt>
    713c:	str	x0, [sp, #40]
    7140:	ldr	x0, [sp, #40]
    7144:	cmp	x0, #0x0
    7148:	b.eq	7160 <PyNumber_FloorDivide@plt+0x2510>  // b.none
    714c:	ldr	x1, [sp, #40]
    7150:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7154:	ldr	x0, [x0, #4024]
    7158:	cmp	x1, x0
    715c:	b.ne	7168 <PyNumber_FloorDivide@plt+0x2518>  // b.any
    7160:	ldr	x0, [sp, #40]
    7164:	b	71c8 <PyNumber_FloorDivide@plt+0x2578>
    7168:	ldr	x0, [sp, #40]
    716c:	ldr	x0, [x0, #8]
    7170:	ldr	x0, [x0, #168]
    7174:	and	x0, x0, #0x10000000
    7178:	cmp	x0, #0x0
    717c:	b.ne	71c4 <PyNumber_FloorDivide@plt+0x2574>  // b.any
    7180:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7184:	ldr	x0, [x0, #3976]
    7188:	ldr	x3, [x0]
    718c:	ldr	x0, [sp, #40]
    7190:	ldr	x0, [x0, #8]
    7194:	ldr	x0, [x0, #24]
    7198:	mov	x2, x0
    719c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    71a0:	add	x1, x0, #0xe70
    71a4:	mov	x0, x3
    71a8:	bl	4bb0 <PyErr_Format@plt>
    71ac:	ldr	x2, [sp, #40]
    71b0:	mov	w1, #0x4e7                 	// #1255
    71b4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    71b8:	add	x0, x0, #0xb30
    71bc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    71c0:	str	xzr, [sp, #40]
    71c4:	ldr	x0, [sp, #40]
    71c8:	ldp	x29, x30, [sp], #48
    71cc:	ret
    71d0:	stp	x29, x30, [sp, #-48]!
    71d4:	mov	x29, sp
    71d8:	str	x0, [sp, #24]
    71dc:	str	x1, [sp, #16]
    71e0:	ldr	x1, [sp, #16]
    71e4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    71e8:	ldr	x0, [x0, #4024]
    71ec:	cmp	x1, x0
    71f0:	b.ne	71fc <PyNumber_FloorDivide@plt+0x25ac>  // b.any
    71f4:	ldr	x0, [sp, #24]
    71f8:	b	7274 <PyNumber_FloorDivide@plt+0x2624>
    71fc:	ldr	x0, [sp, #24]
    7200:	ldr	x0, [x0, #16]
    7204:	sub	x0, x0, #0x1
    7208:	mov	x2, x0
    720c:	mov	x1, #0x0                   	// #0
    7210:	ldr	x0, [sp, #24]
    7214:	bl	4c40 <PyUnicode_Substring@plt>
    7218:	str	x0, [sp, #40]
    721c:	ldr	x2, [sp, #24]
    7220:	mov	w1, #0x4ff                 	// #1279
    7224:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7228:	add	x0, x0, #0xb30
    722c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7230:	ldr	x0, [sp, #40]
    7234:	cmp	x0, #0x0
    7238:	b.ne	7244 <PyNumber_FloorDivide@plt+0x25f4>  // b.any
    723c:	mov	x0, #0x0                   	// #0
    7240:	b	7274 <PyNumber_FloorDivide@plt+0x2624>
    7244:	ldr	x2, [sp, #16]
    7248:	ldr	x1, [sp, #40]
    724c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7250:	add	x0, x0, #0xea8
    7254:	bl	4740 <PyUnicode_FromFormat@plt>
    7258:	str	x0, [sp, #24]
    725c:	ldr	x2, [sp, #40]
    7260:	mov	w1, #0x503                 	// #1283
    7264:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7268:	add	x0, x0, #0xb30
    726c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7270:	ldr	x0, [sp, #24]
    7274:	ldp	x29, x30, [sp], #48
    7278:	ret
    727c:	stp	x29, x30, [sp, #-48]!
    7280:	mov	x29, sp
    7284:	str	x0, [sp, #24]
    7288:	str	w1, [sp, #20]
    728c:	ldr	w0, [sp, #20]
    7290:	cmp	w0, #0x0
    7294:	b.ne	72a0 <PyNumber_FloorDivide@plt+0x2650>  // b.any
    7298:	ldr	x0, [sp, #24]
    729c:	b	7318 <PyNumber_FloorDivide@plt+0x26c8>
    72a0:	ldr	x0, [sp, #24]
    72a4:	ldr	x0, [x0, #16]
    72a8:	sub	x0, x0, #0x1
    72ac:	mov	x2, x0
    72b0:	mov	x1, #0x0                   	// #0
    72b4:	ldr	x0, [sp, #24]
    72b8:	bl	4c40 <PyUnicode_Substring@plt>
    72bc:	str	x0, [sp, #40]
    72c0:	ldr	x2, [sp, #24]
    72c4:	mov	w1, #0x517                 	// #1303
    72c8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    72cc:	add	x0, x0, #0xb30
    72d0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    72d4:	ldr	x0, [sp, #40]
    72d8:	cmp	x0, #0x0
    72dc:	b.ne	72e8 <PyNumber_FloorDivide@plt+0x2698>  // b.any
    72e0:	mov	x0, #0x0                   	// #0
    72e4:	b	7318 <PyNumber_FloorDivide@plt+0x26c8>
    72e8:	ldr	w2, [sp, #20]
    72ec:	ldr	x1, [sp, #40]
    72f0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    72f4:	add	x0, x0, #0xeb8
    72f8:	bl	4740 <PyUnicode_FromFormat@plt>
    72fc:	str	x0, [sp, #24]
    7300:	ldr	x2, [sp, #40]
    7304:	mov	w1, #0x51b                 	// #1307
    7308:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    730c:	add	x0, x0, #0xb30
    7310:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7314:	ldr	x0, [sp, #24]
    7318:	ldp	x29, x30, [sp], #48
    731c:	ret
    7320:	stp	x29, x30, [sp, #-48]!
    7324:	mov	x29, sp
    7328:	str	w0, [sp, #28]
    732c:	str	w1, [sp, #24]
    7330:	str	w2, [sp, #20]
    7334:	ldr	w0, [sp, #28]
    7338:	cmp	w0, #0x1
    733c:	b.ne	73c8 <PyNumber_FloorDivide@plt+0x2778>  // b.any
    7340:	ldr	w0, [sp, #24]
    7344:	cmp	w0, #0x0
    7348:	b.ne	736c <PyNumber_FloorDivide@plt+0x271c>  // b.any
    734c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    7350:	add	x0, x0, #0x30
    7354:	ldr	x0, [x0]
    7358:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    735c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    7360:	add	x0, x0, #0x30
    7364:	ldr	x0, [x0]
    7368:	b	73e4 <PyNumber_FloorDivide@plt+0x2794>
    736c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    7370:	add	x4, x0, #0x5f0
    7374:	mov	w3, #0x1                   	// #1
    7378:	ldr	w2, [sp, #20]
    737c:	ldr	w1, [sp, #24]
    7380:	mov	w0, #0x0                   	// #0
    7384:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    7388:	str	x0, [sp, #32]
    738c:	ldr	x0, [sp, #32]
    7390:	cmp	x0, #0x0
    7394:	b.ne	73a0 <PyNumber_FloorDivide@plt+0x2750>  // b.any
    7398:	mov	x0, #0x0                   	// #0
    739c:	b	73e4 <PyNumber_FloorDivide@plt+0x2794>
    73a0:	mov	x1, #0x0                   	// #0
    73a4:	ldr	x0, [sp, #32]
    73a8:	bl	6cb8 <PyNumber_FloorDivide@plt+0x2068>
    73ac:	str	x0, [sp, #40]
    73b0:	ldr	x2, [sp, #32]
    73b4:	mov	w1, #0x52f                 	// #1327
    73b8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    73bc:	add	x0, x0, #0xb30
    73c0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    73c4:	b	73e0 <PyNumber_FloorDivide@plt+0x2790>
    73c8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    73cc:	ldr	x0, [x0, #4024]
    73d0:	str	x0, [sp, #40]
    73d4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    73d8:	ldr	x0, [x0, #4024]
    73dc:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    73e0:	ldr	x0, [sp, #40]
    73e4:	ldp	x29, x30, [sp], #48
    73e8:	ret
    73ec:	stp	x29, x30, [sp, #-64]!
    73f0:	mov	x29, sp
    73f4:	str	x0, [sp, #40]
    73f8:	str	w1, [sp, #36]
    73fc:	str	w2, [sp, #32]
    7400:	str	w3, [sp, #28]
    7404:	ldr	x0, [sp, #40]
    7408:	ldrb	w0, [x0, #25]
    740c:	lsl	w0, w0, #8
    7410:	ldr	x1, [sp, #40]
    7414:	ldrb	w1, [x1, #26]
    7418:	orr	w3, w0, w1
    741c:	ldr	x0, [sp, #40]
    7420:	ldrb	w0, [x0, #27]
    7424:	mov	w1, w0
    7428:	ldr	x0, [sp, #40]
    742c:	ldrb	w0, [x0, #28]
    7430:	mov	w2, w0
    7434:	mov	w0, w3
    7438:	bl	5794 <PyNumber_FloorDivide@plt+0xb44>
    743c:	str	w0, [sp, #60]
    7440:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7444:	add	x0, x0, #0xcc8
    7448:	ldrsw	x1, [sp, #60]
    744c:	ldr	x8, [x0, x1, lsl #3]
    7450:	ldr	x0, [sp, #40]
    7454:	ldrb	w0, [x0, #27]
    7458:	sub	w1, w0, #0x1
    745c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7460:	add	x0, x0, #0xd00
    7464:	sxtw	x1, w1
    7468:	ldr	x2, [x0, x1, lsl #3]
    746c:	ldr	x0, [sp, #40]
    7470:	ldrb	w0, [x0, #28]
    7474:	mov	w3, w0
    7478:	ldr	x0, [sp, #40]
    747c:	ldrb	w0, [x0, #25]
    7480:	lsl	w0, w0, #8
    7484:	ldr	x1, [sp, #40]
    7488:	ldrb	w1, [x1, #26]
    748c:	orr	w0, w0, w1
    7490:	mov	w7, w0
    7494:	ldr	w6, [sp, #28]
    7498:	ldr	w5, [sp, #32]
    749c:	ldr	w4, [sp, #36]
    74a0:	mov	x1, x8
    74a4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    74a8:	add	x0, x0, #0xec8
    74ac:	bl	4740 <PyUnicode_FromFormat@plt>
    74b0:	ldp	x29, x30, [sp], #64
    74b4:	ret
    74b8:	sub	sp, sp, #0x80
    74bc:	stp	x29, x30, [sp, #16]
    74c0:	add	x29, sp, #0x10
    74c4:	str	x0, [sp, #72]
    74c8:	str	x1, [sp, #64]
    74cc:	str	x2, [sp, #56]
    74d0:	str	x3, [sp, #48]
    74d4:	str	x4, [sp, #40]
    74d8:	ldr	x1, [sp, #40]
    74dc:	ldr	x0, [sp, #48]
    74e0:	bl	7090 <PyNumber_FloorDivide@plt+0x2440>
    74e4:	str	x0, [sp, #120]
    74e8:	ldr	x0, [sp, #120]
    74ec:	cmp	x0, #0x0
    74f0:	b.ne	74fc <PyNumber_FloorDivide@plt+0x28ac>  // b.any
    74f4:	mov	w0, #0xffffffff            	// #-1
    74f8:	b	76bc <PyNumber_FloorDivide@plt+0x2a6c>
    74fc:	ldr	x1, [sp, #120]
    7500:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7504:	ldr	x0, [x0, #4024]
    7508:	cmp	x1, x0
    750c:	b.ne	7534 <PyNumber_FloorDivide@plt+0x28e4>  // b.any
    7510:	ldr	x2, [sp, #120]
    7514:	mov	w1, #0x56a                 	// #1386
    7518:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    751c:	add	x0, x0, #0xb30
    7520:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7524:	ldr	x0, [sp, #72]
    7528:	strb	wzr, [x0]
    752c:	mov	w0, #0x0                   	// #0
    7530:	b	76bc <PyNumber_FloorDivide@plt+0x2a6c>
    7534:	ldr	x0, [sp, #120]
    7538:	ldr	w0, [x0, #24]
    753c:	cmp	w0, #0x0
    7540:	b.ge	7588 <PyNumber_FloorDivide@plt+0x2938>  // b.tcont
    7544:	mov	w0, #0x2d                  	// #45
    7548:	strb	w0, [sp, #119]
    754c:	ldr	x0, [sp, #120]
    7550:	str	x0, [sp, #104]
    7554:	ldr	x0, [sp, #120]
    7558:	bl	8d30 <PyNumber_FloorDivide@plt+0x40e0>
    755c:	str	x0, [sp, #120]
    7560:	ldr	x2, [sp, #104]
    7564:	mov	w1, #0x571                 	// #1393
    7568:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    756c:	add	x0, x0, #0xb30
    7570:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7574:	ldr	x0, [sp, #120]
    7578:	cmp	x0, #0x0
    757c:	b.ne	7590 <PyNumber_FloorDivide@plt+0x2940>  // b.any
    7580:	mov	w0, #0xffffffff            	// #-1
    7584:	b	76bc <PyNumber_FloorDivide@plt+0x2a6c>
    7588:	mov	w0, #0x2b                  	// #43
    758c:	strb	w0, [sp, #119]
    7590:	ldr	x0, [sp, #120]
    7594:	ldr	w0, [x0, #32]
    7598:	str	w0, [sp, #100]
    759c:	ldr	x0, [sp, #120]
    75a0:	ldr	w0, [x0, #28]
    75a4:	str	w0, [sp, #88]
    75a8:	ldr	x2, [sp, #120]
    75ac:	mov	w1, #0x57b                 	// #1403
    75b0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    75b4:	add	x0, x0, #0xb30
    75b8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    75bc:	ldr	w0, [sp, #88]
    75c0:	add	x1, sp, #0x58
    75c4:	mov	x2, x1
    75c8:	mov	w1, #0x3c                  	// #60
    75cc:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    75d0:	str	w0, [sp, #92]
    75d4:	ldr	w0, [sp, #92]
    75d8:	add	x1, sp, #0x5c
    75dc:	mov	x2, x1
    75e0:	mov	w1, #0x3c                  	// #60
    75e4:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    75e8:	str	w0, [sp, #96]
    75ec:	ldr	w0, [sp, #100]
    75f0:	cmp	w0, #0x0
    75f4:	b.eq	7640 <PyNumber_FloorDivide@plt+0x29f0>  // b.none
    75f8:	ldrb	w2, [sp, #119]
    75fc:	ldr	w3, [sp, #92]
    7600:	ldr	w0, [sp, #88]
    7604:	ldr	w1, [sp, #100]
    7608:	str	w1, [sp, #8]
    760c:	str	w0, [sp]
    7610:	ldr	x7, [sp, #56]
    7614:	mov	w6, w3
    7618:	ldr	x5, [sp, #56]
    761c:	ldr	w4, [sp, #96]
    7620:	mov	w3, w2
    7624:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7628:	add	x2, x0, #0xee8
    762c:	ldr	x1, [sp, #64]
    7630:	ldr	x0, [sp, #72]
    7634:	bl	4900 <PyOS_snprintf@plt>
    7638:	mov	w0, #0x0                   	// #0
    763c:	b	76bc <PyNumber_FloorDivide@plt+0x2a6c>
    7640:	ldr	w0, [sp, #88]
    7644:	cmp	w0, #0x0
    7648:	b.eq	768c <PyNumber_FloorDivide@plt+0x2a3c>  // b.none
    764c:	ldrb	w1, [sp, #119]
    7650:	ldr	w2, [sp, #92]
    7654:	ldr	w0, [sp, #88]
    7658:	str	w0, [sp]
    765c:	ldr	x7, [sp, #56]
    7660:	mov	w6, w2
    7664:	ldr	x5, [sp, #56]
    7668:	ldr	w4, [sp, #96]
    766c:	mov	w3, w1
    7670:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7674:	add	x2, x0, #0xf00
    7678:	ldr	x1, [sp, #64]
    767c:	ldr	x0, [sp, #72]
    7680:	bl	4900 <PyOS_snprintf@plt>
    7684:	mov	w0, #0x0                   	// #0
    7688:	b	76bc <PyNumber_FloorDivide@plt+0x2a6c>
    768c:	ldrb	w0, [sp, #119]
    7690:	ldr	w1, [sp, #92]
    7694:	mov	w6, w1
    7698:	ldr	x5, [sp, #56]
    769c:	ldr	w4, [sp, #96]
    76a0:	mov	w3, w0
    76a4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    76a8:	add	x2, x0, #0xf18
    76ac:	ldr	x1, [sp, #64]
    76b0:	ldr	x0, [sp, #72]
    76b4:	bl	4900 <PyOS_snprintf@plt>
    76b8:	mov	w0, #0x0                   	// #0
    76bc:	ldp	x29, x30, [sp, #16]
    76c0:	add	sp, sp, #0x80
    76c4:	ret
    76c8:	stp	x29, x30, [sp, #-64]!
    76cc:	mov	x29, sp
    76d0:	str	x0, [sp, #24]
    76d4:	str	x1, [sp, #16]
    76d8:	ldr	x0, [sp, #24]
    76dc:	bl	6e28 <PyNumber_FloorDivide@plt+0x21d8>
    76e0:	str	x0, [sp, #48]
    76e4:	mov	x1, #0x0                   	// #0
    76e8:	mov	x0, #0x0                   	// #0
    76ec:	bl	4bd0 <PyUnicode_FromStringAndSize@plt>
    76f0:	str	x0, [sp, #56]
    76f4:	ldr	x0, [sp, #56]
    76f8:	cmp	x0, #0x0
    76fc:	b.ne	7708 <PyNumber_FloorDivide@plt+0x2ab8>  // b.any
    7700:	mov	x0, #0x0                   	// #0
    7704:	b	7840 <PyNumber_FloorDivide@plt+0x2bf0>
    7708:	ldr	x1, [sp, #48]
    770c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7710:	ldr	x0, [x0, #4024]
    7714:	cmp	x1, x0
    7718:	b.eq	7728 <PyNumber_FloorDivide@plt+0x2ad8>  // b.none
    771c:	ldr	x0, [sp, #48]
    7720:	cmp	x0, #0x0
    7724:	b.ne	7730 <PyNumber_FloorDivide@plt+0x2ae0>  // b.any
    7728:	ldr	x0, [sp, #56]
    772c:	b	7840 <PyNumber_FloorDivide@plt+0x2bf0>
    7730:	ldr	x1, [sp, #16]
    7734:	ldr	x0, [sp, #48]
    7738:	bl	70e8 <PyNumber_FloorDivide@plt+0x2498>
    773c:	str	x0, [sp, #40]
    7740:	ldr	x0, [sp, #40]
    7744:	cmp	x0, #0x0
    7748:	b.eq	7824 <PyNumber_FloorDivide@plt+0x2bd4>  // b.none
    774c:	ldr	x1, [sp, #40]
    7750:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7754:	ldr	x0, [x0, #4024]
    7758:	cmp	x1, x0
    775c:	b.ne	777c <PyNumber_FloorDivide@plt+0x2b2c>  // b.any
    7760:	ldr	x2, [sp, #40]
    7764:	mov	w1, #0x59e                 	// #1438
    7768:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    776c:	add	x0, x0, #0xb30
    7770:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7774:	ldr	x0, [sp, #56]
    7778:	b	7840 <PyNumber_FloorDivide@plt+0x2bf0>
    777c:	ldr	x2, [sp, #56]
    7780:	mov	w1, #0x5a7                 	// #1447
    7784:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7788:	add	x0, x0, #0xb30
    778c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7790:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7794:	add	x4, x0, #0xf28
    7798:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    779c:	add	x3, x0, #0xf30
    77a0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    77a4:	add	x2, x0, #0xf38
    77a8:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    77ac:	add	x1, x0, #0xdd8
    77b0:	ldr	x0, [sp, #40]
    77b4:	bl	4aa0 <_PyObject_CallMethodId@plt>
    77b8:	str	x0, [sp, #56]
    77bc:	ldr	x2, [sp, #40]
    77c0:	mov	w1, #0x5a9                 	// #1449
    77c4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    77c8:	add	x0, x0, #0xb30
    77cc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    77d0:	ldr	x0, [sp, #56]
    77d4:	cmp	x0, #0x0
    77d8:	b.ne	77e4 <PyNumber_FloorDivide@plt+0x2b94>  // b.any
    77dc:	mov	x0, #0x0                   	// #0
    77e0:	b	7840 <PyNumber_FloorDivide@plt+0x2bf0>
    77e4:	ldr	x0, [sp, #56]
    77e8:	ldr	x0, [x0, #8]
    77ec:	ldr	x0, [x0, #168]
    77f0:	and	x0, x0, #0x10000000
    77f4:	cmp	x0, #0x0
    77f8:	b.ne	781c <PyNumber_FloorDivide@plt+0x2bcc>  // b.any
    77fc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7800:	ldr	x0, [x0, #3976]
    7804:	ldr	x2, [x0]
    7808:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    780c:	add	x1, x0, #0xf40
    7810:	mov	x0, x2
    7814:	bl	48c0 <PyErr_SetString@plt>
    7818:	b	7828 <PyNumber_FloorDivide@plt+0x2bd8>
    781c:	ldr	x0, [sp, #56]
    7820:	b	7840 <PyNumber_FloorDivide@plt+0x2bf0>
    7824:	nop
    7828:	ldr	x2, [sp, #56]
    782c:	mov	w1, #0x5b4                 	// #1460
    7830:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7834:	add	x0, x0, #0xb30
    7838:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    783c:	mov	x0, #0x0                   	// #0
    7840:	ldp	x29, x30, [sp], #64
    7844:	ret
    7848:	stp	x29, x30, [sp, #-96]!
    784c:	mov	x29, sp
    7850:	str	x0, [sp, #24]
    7854:	ldr	x0, [sp, #24]
    7858:	ldr	x1, [x0, #8]
    785c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    7860:	add	x0, x0, #0x790
    7864:	cmp	x1, x0
    7868:	b.eq	788c <PyNumber_FloorDivide@plt+0x2c3c>  // b.none
    786c:	ldr	x0, [sp, #24]
    7870:	ldr	x2, [x0, #8]
    7874:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    7878:	add	x1, x0, #0x790
    787c:	mov	x0, x2
    7880:	bl	4b80 <PyType_IsSubtype@plt>
    7884:	cmp	w0, #0x0
    7888:	b.eq	78d0 <PyNumber_FloorDivide@plt+0x2c80>  // b.none
    788c:	ldr	x0, [sp, #24]
    7890:	ldrb	w0, [x0, #28]
    7894:	lsl	w1, w0, #16
    7898:	ldr	x0, [sp, #24]
    789c:	ldrb	w0, [x0, #29]
    78a0:	lsl	w0, w0, #8
    78a4:	orr	w0, w1, w0
    78a8:	ldr	x1, [sp, #24]
    78ac:	ldrb	w1, [x1, #30]
    78b0:	orr	w0, w0, w1
    78b4:	add	x3, sp, #0x20
    78b8:	mov	w2, w0
    78bc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    78c0:	add	x1, x0, #0xf70
    78c4:	mov	x0, x3
    78c8:	bl	4820 <sprintf@plt>
    78cc:	b	7964 <PyNumber_FloorDivide@plt+0x2d14>
    78d0:	ldr	x0, [sp, #24]
    78d4:	ldr	x1, [x0, #8]
    78d8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    78dc:	add	x0, x0, #0x450
    78e0:	cmp	x1, x0
    78e4:	b.eq	7908 <PyNumber_FloorDivide@plt+0x2cb8>  // b.none
    78e8:	ldr	x0, [sp, #24]
    78ec:	ldr	x2, [x0, #8]
    78f0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    78f4:	add	x1, x0, #0x450
    78f8:	mov	x0, x2
    78fc:	bl	4b80 <PyType_IsSubtype@plt>
    7900:	cmp	w0, #0x0
    7904:	b.eq	794c <PyNumber_FloorDivide@plt+0x2cfc>  // b.none
    7908:	ldr	x0, [sp, #24]
    790c:	ldrb	w0, [x0, #32]
    7910:	lsl	w1, w0, #16
    7914:	ldr	x0, [sp, #24]
    7918:	ldrb	w0, [x0, #33]
    791c:	lsl	w0, w0, #8
    7920:	orr	w0, w1, w0
    7924:	ldr	x1, [sp, #24]
    7928:	ldrb	w1, [x1, #34]
    792c:	orr	w0, w0, w1
    7930:	add	x3, sp, #0x20
    7934:	mov	w2, w0
    7938:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    793c:	add	x1, x0, #0xf70
    7940:	mov	x0, x3
    7944:	bl	4820 <sprintf@plt>
    7948:	b	7964 <PyNumber_FloorDivide@plt+0x2d14>
    794c:	add	x3, sp, #0x20
    7950:	mov	w2, #0x0                   	// #0
    7954:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7958:	add	x1, x0, #0xf70
    795c:	mov	x0, x3
    7960:	bl	4820 <sprintf@plt>
    7964:	add	x0, sp, #0x20
    7968:	bl	4770 <strlen@plt>
    796c:	mov	x1, x0
    7970:	add	x0, sp, #0x20
    7974:	bl	4840 <PyBytes_FromStringAndSize@plt>
    7978:	ldp	x29, x30, [sp], #96
    797c:	ret
    7980:	stp	x29, x30, [sp, #-288]!
    7984:	mov	x29, sp
    7988:	str	x0, [sp, #40]
    798c:	str	x1, [sp, #32]
    7990:	str	x2, [sp, #24]
    7994:	str	x3, [sp, #16]
    7998:	str	xzr, [sp, #280]
    799c:	str	xzr, [sp, #272]
    79a0:	str	xzr, [sp, #264]
    79a4:	str	xzr, [sp, #256]
    79a8:	str	xzr, [sp, #168]
    79ac:	add	x0, sp, #0xb0
    79b0:	mov	x1, x0
    79b4:	ldr	x0, [sp, #32]
    79b8:	bl	4b90 <PyUnicode_AsUTF8AndSize@plt>
    79bc:	str	x0, [sp, #248]
    79c0:	ldr	x0, [sp, #248]
    79c4:	cmp	x0, #0x0
    79c8:	b.ne	79d4 <PyNumber_FloorDivide@plt+0x2d84>  // b.any
    79cc:	mov	x0, #0x0                   	// #0
    79d0:	b	7e04 <PyNumber_FloorDivide@plt+0x31b4>
    79d4:	ldr	x1, [sp, #176]
    79d8:	mov	x0, #0x7ffffffe            	// #2147483646
    79dc:	cmp	x1, x0
    79e0:	b.le	79ec <PyNumber_FloorDivide@plt+0x2d9c>
    79e4:	bl	4860 <PyErr_NoMemory@plt>
    79e8:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    79ec:	ldr	x0, [sp, #176]
    79f0:	add	x0, x0, #0x1
    79f4:	str	x0, [sp, #232]
    79f8:	ldr	x0, [sp, #232]
    79fc:	mov	x1, x0
    7a00:	mov	x0, #0x0                   	// #0
    7a04:	bl	4840 <PyBytes_FromStringAndSize@plt>
    7a08:	str	x0, [sp, #168]
    7a0c:	ldr	x0, [sp, #168]
    7a10:	cmp	x0, #0x0
    7a14:	b.eq	7d9c <PyNumber_FloorDivide@plt+0x314c>  // b.none
    7a18:	ldr	x0, [sp, #168]
    7a1c:	bl	4b60 <PyBytes_AsString@plt>
    7a20:	str	x0, [sp, #240]
    7a24:	str	xzr, [sp, #224]
    7a28:	b	7ce4 <PyNumber_FloorDivide@plt+0x3094>
    7a2c:	ldrb	w0, [sp, #215]
    7a30:	cmp	w0, #0x25
    7a34:	b.eq	7a50 <PyNumber_FloorDivide@plt+0x2e00>  // b.none
    7a38:	ldr	x0, [sp, #248]
    7a3c:	sub	x0, x0, #0x1
    7a40:	str	x0, [sp, #216]
    7a44:	mov	x0, #0x1                   	// #1
    7a48:	str	x0, [sp, #160]
    7a4c:	b	7c2c <PyNumber_FloorDivide@plt+0x2fdc>
    7a50:	ldr	x0, [sp, #248]
    7a54:	add	x1, x0, #0x1
    7a58:	str	x1, [sp, #248]
    7a5c:	ldrb	w0, [x0]
    7a60:	strb	w0, [sp, #215]
    7a64:	ldrb	w0, [sp, #215]
    7a68:	cmp	w0, #0x0
    7a6c:	b.ne	7a94 <PyNumber_FloorDivide@plt+0x2e44>  // b.any
    7a70:	ldr	x0, [sp, #248]
    7a74:	sub	x0, x0, #0x1
    7a78:	str	x0, [sp, #248]
    7a7c:	ldr	x0, [sp, #248]
    7a80:	sub	x0, x0, #0x1
    7a84:	str	x0, [sp, #216]
    7a88:	mov	x0, #0x1                   	// #1
    7a8c:	str	x0, [sp, #160]
    7a90:	b	7c2c <PyNumber_FloorDivide@plt+0x2fdc>
    7a94:	ldrb	w0, [sp, #215]
    7a98:	cmp	w0, #0x7a
    7a9c:	b.ne	7b74 <PyNumber_FloorDivide@plt+0x2f24>  // b.any
    7aa0:	ldr	x0, [sp, #272]
    7aa4:	cmp	x0, #0x0
    7aa8:	b.ne	7b58 <PyNumber_FloorDivide@plt+0x2f08>  // b.any
    7aac:	ldr	x0, [sp, #40]
    7ab0:	bl	6e28 <PyNumber_FloorDivide@plt+0x21d8>
    7ab4:	str	x0, [sp, #184]
    7ab8:	mov	x1, #0x0                   	// #0
    7abc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7ac0:	add	x0, x0, #0xf78
    7ac4:	bl	4840 <PyBytes_FromStringAndSize@plt>
    7ac8:	str	x0, [sp, #272]
    7acc:	ldr	x0, [sp, #272]
    7ad0:	cmp	x0, #0x0
    7ad4:	b.eq	7da4 <PyNumber_FloorDivide@plt+0x3154>  // b.none
    7ad8:	ldr	x1, [sp, #184]
    7adc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    7ae0:	ldr	x0, [x0, #4024]
    7ae4:	cmp	x1, x0
    7ae8:	b.eq	7b58 <PyNumber_FloorDivide@plt+0x2f08>  // b.none
    7aec:	ldr	x0, [sp, #184]
    7af0:	cmp	x0, #0x0
    7af4:	b.eq	7b58 <PyNumber_FloorDivide@plt+0x2f08>  // b.none
    7af8:	add	x5, sp, #0x38
    7afc:	ldr	x4, [sp, #16]
    7b00:	ldr	x3, [sp, #184]
    7b04:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7b08:	add	x2, x0, #0xf78
    7b0c:	mov	x1, #0x64                  	// #100
    7b10:	mov	x0, x5
    7b14:	bl	74b8 <PyNumber_FloorDivide@plt+0x2868>
    7b18:	cmp	w0, #0x0
    7b1c:	b.lt	7dac <PyNumber_FloorDivide@plt+0x315c>  // b.tstop
    7b20:	ldr	x2, [sp, #272]
    7b24:	mov	w1, #0x618                 	// #1560
    7b28:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7b2c:	add	x0, x0, #0xb30
    7b30:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7b34:	add	x0, sp, #0x38
    7b38:	bl	4770 <strlen@plt>
    7b3c:	mov	x1, x0
    7b40:	add	x0, sp, #0x38
    7b44:	bl	4840 <PyBytes_FromStringAndSize@plt>
    7b48:	str	x0, [sp, #272]
    7b4c:	ldr	x0, [sp, #272]
    7b50:	cmp	x0, #0x0
    7b54:	b.eq	7db4 <PyNumber_FloorDivide@plt+0x3164>  // b.none
    7b58:	ldr	x0, [sp, #272]
    7b5c:	add	x0, x0, #0x20
    7b60:	str	x0, [sp, #216]
    7b64:	ldr	x0, [sp, #272]
    7b68:	ldr	x0, [x0, #16]
    7b6c:	str	x0, [sp, #160]
    7b70:	b	7c2c <PyNumber_FloorDivide@plt+0x2fdc>
    7b74:	ldrb	w0, [sp, #215]
    7b78:	cmp	w0, #0x5a
    7b7c:	b.ne	7bcc <PyNumber_FloorDivide@plt+0x2f7c>  // b.any
    7b80:	ldr	x0, [sp, #264]
    7b84:	cmp	x0, #0x0
    7b88:	b.ne	7ba8 <PyNumber_FloorDivide@plt+0x2f58>  // b.any
    7b8c:	ldr	x1, [sp, #16]
    7b90:	ldr	x0, [sp, #40]
    7b94:	bl	76c8 <PyNumber_FloorDivide@plt+0x2a78>
    7b98:	str	x0, [sp, #264]
    7b9c:	ldr	x0, [sp, #264]
    7ba0:	cmp	x0, #0x0
    7ba4:	b.eq	7dbc <PyNumber_FloorDivide@plt+0x316c>  // b.none
    7ba8:	add	x0, sp, #0xa0
    7bac:	mov	x1, x0
    7bb0:	ldr	x0, [sp, #264]
    7bb4:	bl	4b90 <PyUnicode_AsUTF8AndSize@plt>
    7bb8:	str	x0, [sp, #216]
    7bbc:	ldr	x0, [sp, #216]
    7bc0:	cmp	x0, #0x0
    7bc4:	b.ne	7c2c <PyNumber_FloorDivide@plt+0x2fdc>  // b.any
    7bc8:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7bcc:	ldrb	w0, [sp, #215]
    7bd0:	cmp	w0, #0x66
    7bd4:	b.ne	7c18 <PyNumber_FloorDivide@plt+0x2fc8>  // b.any
    7bd8:	ldr	x0, [sp, #256]
    7bdc:	cmp	x0, #0x0
    7be0:	b.ne	7bfc <PyNumber_FloorDivide@plt+0x2fac>  // b.any
    7be4:	ldr	x0, [sp, #40]
    7be8:	bl	7848 <PyNumber_FloorDivide@plt+0x2bf8>
    7bec:	str	x0, [sp, #256]
    7bf0:	ldr	x0, [sp, #256]
    7bf4:	cmp	x0, #0x0
    7bf8:	b.eq	7dc4 <PyNumber_FloorDivide@plt+0x3174>  // b.none
    7bfc:	ldr	x0, [sp, #256]
    7c00:	add	x0, x0, #0x20
    7c04:	str	x0, [sp, #216]
    7c08:	ldr	x0, [sp, #256]
    7c0c:	ldr	x0, [x0, #16]
    7c10:	str	x0, [sp, #160]
    7c14:	b	7c2c <PyNumber_FloorDivide@plt+0x2fdc>
    7c18:	ldr	x0, [sp, #248]
    7c1c:	sub	x0, x0, #0x2
    7c20:	str	x0, [sp, #216]
    7c24:	mov	x0, #0x2                   	// #2
    7c28:	str	x0, [sp, #160]
    7c2c:	ldr	x0, [sp, #160]
    7c30:	cmp	x0, #0x0
    7c34:	b.ne	7c8c <PyNumber_FloorDivide@plt+0x303c>  // b.any
    7c38:	b	7ce4 <PyNumber_FloorDivide@plt+0x3094>
    7c3c:	ldr	x1, [sp, #232]
    7c40:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
    7c44:	cmp	x1, x0
    7c48:	b.ls	7c54 <PyNumber_FloorDivide@plt+0x3004>  // b.plast
    7c4c:	bl	4860 <PyErr_NoMemory@plt>
    7c50:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7c54:	ldr	x0, [sp, #232]
    7c58:	lsl	x0, x0, #1
    7c5c:	str	x0, [sp, #232]
    7c60:	ldr	x1, [sp, #232]
    7c64:	add	x0, sp, #0xa8
    7c68:	bl	47b0 <_PyBytes_Resize@plt>
    7c6c:	cmp	w0, #0x0
    7c70:	b.lt	7dcc <PyNumber_FloorDivide@plt+0x317c>  // b.tstop
    7c74:	ldr	x0, [sp, #168]
    7c78:	bl	4b60 <PyBytes_AsString@plt>
    7c7c:	mov	x1, x0
    7c80:	ldr	x0, [sp, #224]
    7c84:	add	x0, x1, x0
    7c88:	str	x0, [sp, #240]
    7c8c:	ldr	x0, [sp, #160]
    7c90:	mov	x1, x0
    7c94:	ldr	x0, [sp, #224]
    7c98:	add	x0, x1, x0
    7c9c:	ldr	x1, [sp, #232]
    7ca0:	cmp	x1, x0
    7ca4:	b.cc	7c3c <PyNumber_FloorDivide@plt+0x2fec>  // b.lo, b.ul, b.last
    7ca8:	ldr	x0, [sp, #160]
    7cac:	mov	x2, x0
    7cb0:	ldr	x1, [sp, #216]
    7cb4:	ldr	x0, [sp, #240]
    7cb8:	bl	4730 <memcpy@plt>
    7cbc:	ldr	x0, [sp, #160]
    7cc0:	mov	x1, x0
    7cc4:	ldr	x0, [sp, #240]
    7cc8:	add	x0, x0, x1
    7ccc:	str	x0, [sp, #240]
    7cd0:	ldr	x0, [sp, #160]
    7cd4:	mov	x1, x0
    7cd8:	ldr	x0, [sp, #224]
    7cdc:	add	x0, x0, x1
    7ce0:	str	x0, [sp, #224]
    7ce4:	ldr	x0, [sp, #248]
    7ce8:	add	x1, x0, #0x1
    7cec:	str	x1, [sp, #248]
    7cf0:	ldrb	w0, [x0]
    7cf4:	strb	w0, [sp, #215]
    7cf8:	ldrb	w0, [sp, #215]
    7cfc:	cmp	w0, #0x0
    7d00:	b.ne	7a2c <PyNumber_FloorDivide@plt+0x2ddc>  // b.any
    7d04:	ldr	x1, [sp, #224]
    7d08:	add	x0, sp, #0xa8
    7d0c:	bl	47b0 <_PyBytes_Resize@plt>
    7d10:	cmp	w0, #0x0
    7d14:	b.lt	7dd4 <PyNumber_FloorDivide@plt+0x3184>  // b.tstop
    7d18:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7d1c:	add	x0, x0, #0xf80
    7d20:	bl	4a10 <PyImport_ImportModuleNoBlock@plt>
    7d24:	str	x0, [sp, #200]
    7d28:	ldr	x0, [sp, #200]
    7d2c:	cmp	x0, #0x0
    7d30:	b.eq	7ddc <PyNumber_FloorDivide@plt+0x318c>  // b.none
    7d34:	ldr	x0, [sp, #168]
    7d38:	add	x0, x0, #0x20
    7d3c:	bl	4b20 <PyUnicode_FromString@plt>
    7d40:	str	x0, [sp, #192]
    7d44:	ldr	x0, [sp, #192]
    7d48:	cmp	x0, #0x0
    7d4c:	b.eq	7d84 <PyNumber_FloorDivide@plt+0x3134>  // b.none
    7d50:	mov	x4, #0x0                   	// #0
    7d54:	ldr	x3, [sp, #24]
    7d58:	ldr	x2, [sp, #192]
    7d5c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    7d60:	add	x1, x0, #0xcb8
    7d64:	ldr	x0, [sp, #200]
    7d68:	bl	4b30 <_PyObject_CallMethodIdObjArgs@plt>
    7d6c:	str	x0, [sp, #280]
    7d70:	ldr	x2, [sp, #192]
    7d74:	mov	w1, #0x668                 	// #1640
    7d78:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7d7c:	add	x0, x0, #0xb30
    7d80:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7d84:	ldr	x2, [sp, #200]
    7d88:	mov	w1, #0x66a                 	// #1642
    7d8c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7d90:	add	x0, x0, #0xb30
    7d94:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7d98:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7d9c:	nop
    7da0:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7da4:	nop
    7da8:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7dac:	nop
    7db0:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7db4:	nop
    7db8:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7dbc:	nop
    7dc0:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7dc4:	nop
    7dc8:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7dcc:	nop
    7dd0:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7dd4:	nop
    7dd8:	b	7de0 <PyNumber_FloorDivide@plt+0x3190>
    7ddc:	nop
    7de0:	ldr	x0, [sp, #256]
    7de4:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    7de8:	ldr	x0, [sp, #272]
    7dec:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    7df0:	ldr	x0, [sp, #264]
    7df4:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    7df8:	ldr	x0, [sp, #168]
    7dfc:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    7e00:	ldr	x0, [sp, #280]
    7e04:	ldp	x29, x30, [sp], #288
    7e08:	ret
    7e0c:	stp	x29, x30, [sp, #-32]!
    7e10:	mov	x29, sp
    7e14:	str	xzr, [sp, #24]
    7e18:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7e1c:	add	x0, x0, #0xf80
    7e20:	bl	4a10 <PyImport_ImportModuleNoBlock@plt>
    7e24:	str	x0, [sp, #16]
    7e28:	ldr	x0, [sp, #16]
    7e2c:	cmp	x0, #0x0
    7e30:	b.eq	7e60 <PyNumber_FloorDivide@plt+0x3210>  // b.none
    7e34:	mov	x2, #0x0                   	// #0
    7e38:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    7e3c:	add	x1, x0, #0xdf0
    7e40:	ldr	x0, [sp, #16]
    7e44:	bl	4aa0 <_PyObject_CallMethodId@plt>
    7e48:	str	x0, [sp, #24]
    7e4c:	ldr	x2, [sp, #16]
    7e50:	mov	w1, #0x684                 	// #1668
    7e54:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7e58:	add	x0, x0, #0xb30
    7e5c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7e60:	ldr	x0, [sp, #24]
    7e64:	ldp	x29, x30, [sp], #32
    7e68:	ret
    7e6c:	sub	sp, sp, #0x70
    7e70:	stp	x29, x30, [sp, #16]
    7e74:	add	x29, sp, #0x10
    7e78:	str	x19, [sp, #32]
    7e7c:	str	w0, [sp, #76]
    7e80:	str	w1, [sp, #72]
    7e84:	str	w2, [sp, #68]
    7e88:	str	w3, [sp, #64]
    7e8c:	str	w4, [sp, #60]
    7e90:	str	w5, [sp, #56]
    7e94:	str	w6, [sp, #52]
    7e98:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7e9c:	add	x0, x0, #0xf80
    7ea0:	bl	4a10 <PyImport_ImportModuleNoBlock@plt>
    7ea4:	str	x0, [sp, #104]
    7ea8:	ldr	x0, [sp, #104]
    7eac:	cmp	x0, #0x0
    7eb0:	b.ne	7ebc <PyNumber_FloorDivide@plt+0x326c>  // b.any
    7eb4:	mov	x0, #0x0                   	// #0
    7eb8:	b	7f90 <PyNumber_FloorDivide@plt+0x3340>
    7ebc:	ldr	w2, [sp, #68]
    7ec0:	ldr	w1, [sp, #72]
    7ec4:	ldr	w0, [sp, #76]
    7ec8:	bl	5794 <PyNumber_FloorDivide@plt+0xb44>
    7ecc:	mov	w19, w0
    7ed0:	ldr	w1, [sp, #72]
    7ed4:	ldr	w0, [sp, #76]
    7ed8:	bl	5348 <PyNumber_FloorDivide@plt+0x6f8>
    7edc:	mov	w1, w0
    7ee0:	ldr	w0, [sp, #68]
    7ee4:	add	w0, w1, w0
    7ee8:	ldr	w1, [sp, #52]
    7eec:	str	w1, [sp, #8]
    7ef0:	str	w0, [sp]
    7ef4:	mov	w7, w19
    7ef8:	ldr	w6, [sp, #56]
    7efc:	ldr	w5, [sp, #60]
    7f00:	ldr	w4, [sp, #64]
    7f04:	ldr	w3, [sp, #68]
    7f08:	ldr	w2, [sp, #72]
    7f0c:	ldr	w1, [sp, #76]
    7f10:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7f14:	add	x0, x0, #0xf88
    7f18:	bl	49e0 <Py_BuildValue@plt>
    7f1c:	str	x0, [sp, #96]
    7f20:	ldr	x0, [sp, #96]
    7f24:	cmp	x0, #0x0
    7f28:	b.ne	7f48 <PyNumber_FloorDivide@plt+0x32f8>  // b.any
    7f2c:	ldr	x2, [sp, #104]
    7f30:	mov	w1, #0x6a1                 	// #1697
    7f34:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7f38:	add	x0, x0, #0xb30
    7f3c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7f40:	mov	x0, #0x0                   	// #0
    7f44:	b	7f90 <PyNumber_FloorDivide@plt+0x3340>
    7f48:	mov	x3, #0x0                   	// #0
    7f4c:	ldr	x2, [sp, #96]
    7f50:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    7f54:	add	x1, x0, #0xe08
    7f58:	ldr	x0, [sp, #104]
    7f5c:	bl	4b30 <_PyObject_CallMethodIdObjArgs@plt>
    7f60:	str	x0, [sp, #88]
    7f64:	ldr	x2, [sp, #104]
    7f68:	mov	w1, #0x6a7                 	// #1703
    7f6c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7f70:	add	x0, x0, #0xb30
    7f74:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7f78:	ldr	x2, [sp, #96]
    7f7c:	mov	w1, #0x6a8                 	// #1704
    7f80:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    7f84:	add	x0, x0, #0xb30
    7f88:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    7f8c:	ldr	x0, [sp, #88]
    7f90:	ldr	x19, [sp, #32]
    7f94:	ldp	x29, x30, [sp, #16]
    7f98:	add	sp, sp, #0x70
    7f9c:	ret
    7fa0:	stp	x29, x30, [sp, #-32]!
    7fa4:	mov	x29, sp
    7fa8:	str	w0, [sp, #28]
    7fac:	str	w1, [sp, #24]
    7fb0:	ldr	w0, [sp, #24]
    7fb4:	cmp	w0, #0x5
    7fb8:	b.eq	8158 <PyNumber_FloorDivide@plt+0x3508>  // b.none
    7fbc:	ldr	w0, [sp, #24]
    7fc0:	cmp	w0, #0x5
    7fc4:	b.gt	8194 <PyNumber_FloorDivide@plt+0x3544>
    7fc8:	ldr	w0, [sp, #24]
    7fcc:	cmp	w0, #0x4
    7fd0:	b.eq	80e0 <PyNumber_FloorDivide@plt+0x3490>  // b.none
    7fd4:	ldr	w0, [sp, #24]
    7fd8:	cmp	w0, #0x4
    7fdc:	b.gt	8194 <PyNumber_FloorDivide@plt+0x3544>
    7fe0:	ldr	w0, [sp, #24]
    7fe4:	cmp	w0, #0x3
    7fe8:	b.eq	8068 <PyNumber_FloorDivide@plt+0x3418>  // b.none
    7fec:	ldr	w0, [sp, #24]
    7ff0:	cmp	w0, #0x3
    7ff4:	b.gt	8194 <PyNumber_FloorDivide@plt+0x3544>
    7ff8:	ldr	w0, [sp, #24]
    7ffc:	cmp	w0, #0x2
    8000:	b.eq	802c <PyNumber_FloorDivide@plt+0x33dc>  // b.none
    8004:	ldr	w0, [sp, #24]
    8008:	cmp	w0, #0x2
    800c:	b.gt	8194 <PyNumber_FloorDivide@plt+0x3544>
    8010:	ldr	w0, [sp, #24]
    8014:	cmp	w0, #0x0
    8018:	b.eq	80a4 <PyNumber_FloorDivide@plt+0x3454>  // b.none
    801c:	ldr	w0, [sp, #24]
    8020:	cmp	w0, #0x1
    8024:	b.eq	811c <PyNumber_FloorDivide@plt+0x34cc>  // b.none
    8028:	b	8194 <PyNumber_FloorDivide@plt+0x3544>
    802c:	ldr	w0, [sp, #28]
    8030:	cmp	w0, #0x0
    8034:	b.ne	8050 <PyNumber_FloorDivide@plt+0x3400>  // b.any
    8038:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    803c:	ldr	x0, [x0, #4040]
    8040:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8044:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8048:	ldr	x0, [x0, #4040]
    804c:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    8050:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8054:	ldr	x0, [x0, #3992]
    8058:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    805c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8060:	ldr	x0, [x0, #3992]
    8064:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    8068:	ldr	w0, [sp, #28]
    806c:	cmp	w0, #0x0
    8070:	b.eq	808c <PyNumber_FloorDivide@plt+0x343c>  // b.none
    8074:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8078:	ldr	x0, [x0, #4040]
    807c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8080:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8084:	ldr	x0, [x0, #4040]
    8088:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    808c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8090:	ldr	x0, [x0, #3992]
    8094:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8098:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    809c:	ldr	x0, [x0, #3992]
    80a0:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    80a4:	ldr	w0, [sp, #28]
    80a8:	cmp	w0, #0x0
    80ac:	b.ge	80c8 <PyNumber_FloorDivide@plt+0x3478>  // b.tcont
    80b0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    80b4:	ldr	x0, [x0, #4040]
    80b8:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    80bc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    80c0:	ldr	x0, [x0, #4040]
    80c4:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    80c8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    80cc:	ldr	x0, [x0, #3992]
    80d0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    80d4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    80d8:	ldr	x0, [x0, #3992]
    80dc:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    80e0:	ldr	w0, [sp, #28]
    80e4:	cmp	w0, #0x0
    80e8:	b.le	8104 <PyNumber_FloorDivide@plt+0x34b4>
    80ec:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    80f0:	ldr	x0, [x0, #4040]
    80f4:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    80f8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    80fc:	ldr	x0, [x0, #4040]
    8100:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    8104:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8108:	ldr	x0, [x0, #3992]
    810c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8110:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8114:	ldr	x0, [x0, #3992]
    8118:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    811c:	ldr	w0, [sp, #28]
    8120:	cmp	w0, #0x0
    8124:	b.gt	8140 <PyNumber_FloorDivide@plt+0x34f0>
    8128:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    812c:	ldr	x0, [x0, #4040]
    8130:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8134:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8138:	ldr	x0, [x0, #4040]
    813c:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    8140:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8144:	ldr	x0, [x0, #3992]
    8148:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    814c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8150:	ldr	x0, [x0, #3992]
    8154:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    8158:	ldr	w0, [sp, #28]
    815c:	cmp	w0, #0x0
    8160:	b.lt	817c <PyNumber_FloorDivide@plt+0x352c>  // b.tstop
    8164:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8168:	ldr	x0, [x0, #4040]
    816c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8170:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8174:	ldr	x0, [x0, #4040]
    8178:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    817c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8180:	ldr	x0, [x0, #3992]
    8184:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8188:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    818c:	ldr	x0, [x0, #3992]
    8190:	b	81a0 <PyNumber_FloorDivide@plt+0x3550>
    8194:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8198:	add	x0, x0, #0xf98
    819c:	bl	4a80 <Py_FatalError@plt>
    81a0:	ldp	x29, x30, [sp], #32
    81a4:	ret
    81a8:	stp	x29, x30, [sp, #-32]!
    81ac:	mov	x29, sp
    81b0:	str	x0, [sp, #24]
    81b4:	str	x1, [sp, #16]
    81b8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    81bc:	ldr	x0, [x0, #3976]
    81c0:	ldr	x4, [x0]
    81c4:	ldr	x0, [sp, #24]
    81c8:	ldr	x0, [x0, #8]
    81cc:	ldr	x1, [x0, #24]
    81d0:	ldr	x0, [sp, #16]
    81d4:	ldr	x0, [x0, #8]
    81d8:	ldr	x0, [x0, #24]
    81dc:	mov	x3, x0
    81e0:	mov	x2, x1
    81e4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    81e8:	add	x1, x0, #0xfb8
    81ec:	mov	x0, x4
    81f0:	bl	4bb0 <PyErr_Format@plt>
    81f4:	mov	x0, #0x0                   	// #0
    81f8:	ldp	x29, x30, [sp], #32
    81fc:	ret
    8200:	stp	x29, x30, [sp, #-64]!
    8204:	mov	x29, sp
    8208:	str	x0, [sp, #24]
    820c:	str	xzr, [sp, #56]
    8210:	str	xzr, [sp, #48]
    8214:	str	xzr, [sp, #40]
    8218:	str	xzr, [sp, #32]
    821c:	ldr	x0, [sp, #24]
    8220:	ldr	w0, [x0, #24]
    8224:	sxtw	x0, w0
    8228:	bl	4940 <PyLong_FromLong@plt>
    822c:	str	x0, [sp, #56]
    8230:	ldr	x0, [sp, #56]
    8234:	cmp	x0, #0x0
    8238:	b.eq	8358 <PyNumber_FloorDivide@plt+0x3708>  // b.none
    823c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    8240:	add	x0, x0, #0x70
    8244:	ldr	x0, [x0]
    8248:	mov	x1, x0
    824c:	ldr	x0, [sp, #56]
    8250:	bl	4870 <PyNumber_Multiply@plt>
    8254:	str	x0, [sp, #48]
    8258:	ldr	x0, [sp, #48]
    825c:	cmp	x0, #0x0
    8260:	b.eq	8360 <PyNumber_FloorDivide@plt+0x3710>  // b.none
    8264:	ldr	x2, [sp, #56]
    8268:	mov	w1, #0x6ec                 	// #1772
    826c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8270:	add	x0, x0, #0xb30
    8274:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8278:	str	xzr, [sp, #56]
    827c:	ldr	x0, [sp, #24]
    8280:	ldr	w0, [x0, #28]
    8284:	sxtw	x0, w0
    8288:	bl	4940 <PyLong_FromLong@plt>
    828c:	str	x0, [sp, #56]
    8290:	ldr	x0, [sp, #56]
    8294:	cmp	x0, #0x0
    8298:	b.eq	8368 <PyNumber_FloorDivide@plt+0x3718>  // b.none
    829c:	ldr	x1, [sp, #48]
    82a0:	ldr	x0, [sp, #56]
    82a4:	bl	4800 <PyNumber_Add@plt>
    82a8:	str	x0, [sp, #40]
    82ac:	ldr	x0, [sp, #40]
    82b0:	cmp	x0, #0x0
    82b4:	b.eq	8370 <PyNumber_FloorDivide@plt+0x3720>  // b.none
    82b8:	ldr	x2, [sp, #56]
    82bc:	mov	w1, #0x6f6                 	// #1782
    82c0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    82c4:	add	x0, x0, #0xb30
    82c8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    82cc:	ldr	x2, [sp, #48]
    82d0:	mov	w1, #0x6f7                 	// #1783
    82d4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    82d8:	add	x0, x0, #0xb30
    82dc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    82e0:	str	xzr, [sp, #48]
    82e4:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    82e8:	add	x0, x0, #0x48
    82ec:	ldr	x0, [x0]
    82f0:	mov	x1, x0
    82f4:	ldr	x0, [sp, #40]
    82f8:	bl	4870 <PyNumber_Multiply@plt>
    82fc:	str	x0, [sp, #56]
    8300:	ldr	x0, [sp, #56]
    8304:	cmp	x0, #0x0
    8308:	b.eq	8378 <PyNumber_FloorDivide@plt+0x3728>  // b.none
    830c:	ldr	x2, [sp, #40]
    8310:	mov	w1, #0x6fe                 	// #1790
    8314:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8318:	add	x0, x0, #0xb30
    831c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8320:	str	xzr, [sp, #40]
    8324:	ldr	x0, [sp, #24]
    8328:	ldr	w0, [x0, #32]
    832c:	sxtw	x0, w0
    8330:	bl	4940 <PyLong_FromLong@plt>
    8334:	str	x0, [sp, #48]
    8338:	ldr	x0, [sp, #48]
    833c:	cmp	x0, #0x0
    8340:	b.eq	8380 <PyNumber_FloorDivide@plt+0x3730>  // b.none
    8344:	ldr	x1, [sp, #48]
    8348:	ldr	x0, [sp, #56]
    834c:	bl	4800 <PyNumber_Add@plt>
    8350:	str	x0, [sp, #32]
    8354:	b	8384 <PyNumber_FloorDivide@plt+0x3734>
    8358:	nop
    835c:	b	8384 <PyNumber_FloorDivide@plt+0x3734>
    8360:	nop
    8364:	b	8384 <PyNumber_FloorDivide@plt+0x3734>
    8368:	nop
    836c:	b	8384 <PyNumber_FloorDivide@plt+0x3734>
    8370:	nop
    8374:	b	8384 <PyNumber_FloorDivide@plt+0x3734>
    8378:	nop
    837c:	b	8384 <PyNumber_FloorDivide@plt+0x3734>
    8380:	nop
    8384:	ldr	x0, [sp, #56]
    8388:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    838c:	ldr	x0, [sp, #48]
    8390:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    8394:	ldr	x0, [sp, #40]
    8398:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    839c:	ldr	x0, [sp, #32]
    83a0:	ldp	x29, x30, [sp], #64
    83a4:	ret
    83a8:	stp	x29, x30, [sp, #-48]!
    83ac:	mov	x29, sp
    83b0:	str	x0, [sp, #24]
    83b4:	str	x1, [sp, #16]
    83b8:	ldr	x1, [sp, #16]
    83bc:	ldr	x0, [sp, #24]
    83c0:	bl	4bc0 <PyNumber_Divmod@plt>
    83c4:	str	x0, [sp, #40]
    83c8:	ldr	x0, [sp, #40]
    83cc:	cmp	x0, #0x0
    83d0:	b.eq	8488 <PyNumber_FloorDivide@plt+0x3838>  // b.none
    83d4:	ldr	x0, [sp, #40]
    83d8:	ldr	x0, [x0, #8]
    83dc:	ldr	x0, [x0, #168]
    83e0:	and	x0, x0, #0x4000000
    83e4:	cmp	x0, #0x0
    83e8:	b.ne	8434 <PyNumber_FloorDivide@plt+0x37e4>  // b.any
    83ec:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    83f0:	ldr	x0, [x0, #3976]
    83f4:	ldr	x3, [x0]
    83f8:	ldr	x0, [sp, #40]
    83fc:	ldr	x0, [x0, #8]
    8400:	ldr	x0, [x0, #24]
    8404:	mov	x2, x0
    8408:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    840c:	add	x1, x0, #0xfd0
    8410:	mov	x0, x3
    8414:	bl	4bb0 <PyErr_Format@plt>
    8418:	ldr	x2, [sp, #40]
    841c:	mov	w1, #0x718                 	// #1816
    8420:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8424:	add	x0, x0, #0xb30
    8428:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    842c:	mov	x0, #0x0                   	// #0
    8430:	b	848c <PyNumber_FloorDivide@plt+0x383c>
    8434:	ldr	x0, [sp, #40]
    8438:	ldr	x0, [x0, #16]
    843c:	cmp	x0, #0x2
    8440:	b.eq	8488 <PyNumber_FloorDivide@plt+0x3838>  // b.none
    8444:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8448:	ldr	x0, [x0, #3976]
    844c:	ldr	x3, [x0]
    8450:	ldr	x0, [sp, #40]
    8454:	ldr	x0, [x0, #16]
    8458:	mov	x2, x0
    845c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    8460:	add	x1, x0, #0x0
    8464:	mov	x0, x3
    8468:	bl	4bb0 <PyErr_Format@plt>
    846c:	ldr	x2, [sp, #40]
    8470:	mov	w1, #0x71f                 	// #1823
    8474:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8478:	add	x0, x0, #0xb30
    847c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8480:	mov	x0, #0x0                   	// #0
    8484:	b	848c <PyNumber_FloorDivide@plt+0x383c>
    8488:	ldr	x0, [sp, #40]
    848c:	ldp	x29, x30, [sp], #48
    8490:	ret
    8494:	stp	x29, x30, [sp, #-80]!
    8498:	mov	x29, sp
    849c:	str	x0, [sp, #24]
    84a0:	str	x1, [sp, #16]
    84a4:	str	xzr, [sp, #72]
    84a8:	str	xzr, [sp, #64]
    84ac:	str	xzr, [sp, #56]
    84b0:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    84b4:	add	x0, x0, #0x48
    84b8:	ldr	x0, [x0]
    84bc:	mov	x1, x0
    84c0:	ldr	x0, [sp, #24]
    84c4:	bl	83a8 <PyNumber_FloorDivide@plt+0x3758>
    84c8:	str	x0, [sp, #72]
    84cc:	ldr	x0, [sp, #72]
    84d0:	cmp	x0, #0x0
    84d4:	b.eq	863c <PyNumber_FloorDivide@plt+0x39ec>  // b.none
    84d8:	ldr	x0, [sp, #72]
    84dc:	ldr	x0, [x0, #32]
    84e0:	str	x0, [sp, #64]
    84e4:	ldr	x0, [sp, #64]
    84e8:	bl	4c00 <_PyLong_AsInt@plt>
    84ec:	str	w0, [sp, #52]
    84f0:	str	xzr, [sp, #64]
    84f4:	ldr	w0, [sp, #52]
    84f8:	cmn	w0, #0x1
    84fc:	b.ne	850c <PyNumber_FloorDivide@plt+0x38bc>  // b.any
    8500:	bl	49f0 <PyErr_Occurred@plt>
    8504:	cmp	x0, #0x0
    8508:	b.ne	8644 <PyNumber_FloorDivide@plt+0x39f4>  // b.any
    850c:	ldr	w0, [sp, #52]
    8510:	cmp	w0, #0x0
    8514:	b.lt	8678 <PyNumber_FloorDivide@plt+0x3a28>  // b.tstop
    8518:	ldr	w1, [sp, #52]
    851c:	mov	w0, #0x423f                	// #16959
    8520:	movk	w0, #0xf, lsl #16
    8524:	cmp	w1, w0
    8528:	b.gt	8678 <PyNumber_FloorDivide@plt+0x3a28>
    852c:	ldr	x0, [sp, #72]
    8530:	ldr	x0, [x0, #24]
    8534:	str	x0, [sp, #64]
    8538:	ldr	x0, [sp, #64]
    853c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8540:	ldr	x2, [sp, #72]
    8544:	mov	w1, #0x744                 	// #1860
    8548:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    854c:	add	x0, x0, #0xb30
    8550:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8554:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    8558:	add	x0, x0, #0x70
    855c:	ldr	x0, [x0]
    8560:	mov	x1, x0
    8564:	ldr	x0, [sp, #64]
    8568:	bl	83a8 <PyNumber_FloorDivide@plt+0x3758>
    856c:	str	x0, [sp, #72]
    8570:	ldr	x0, [sp, #72]
    8574:	cmp	x0, #0x0
    8578:	b.eq	864c <PyNumber_FloorDivide@plt+0x39fc>  // b.none
    857c:	ldr	x2, [sp, #64]
    8580:	mov	w1, #0x749                 	// #1865
    8584:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8588:	add	x0, x0, #0xb30
    858c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8590:	ldr	x0, [sp, #72]
    8594:	ldr	x0, [x0, #32]
    8598:	str	x0, [sp, #64]
    859c:	ldr	x0, [sp, #64]
    85a0:	bl	4c00 <_PyLong_AsInt@plt>
    85a4:	str	w0, [sp, #48]
    85a8:	str	xzr, [sp, #64]
    85ac:	ldr	w0, [sp, #48]
    85b0:	cmn	w0, #0x1
    85b4:	b.ne	85c4 <PyNumber_FloorDivide@plt+0x3974>  // b.any
    85b8:	bl	49f0 <PyErr_Occurred@plt>
    85bc:	cmp	x0, #0x0
    85c0:	b.ne	8654 <PyNumber_FloorDivide@plt+0x3a04>  // b.any
    85c4:	ldr	w0, [sp, #48]
    85c8:	cmp	w0, #0x0
    85cc:	b.lt	8680 <PyNumber_FloorDivide@plt+0x3a30>  // b.tstop
    85d0:	ldr	w1, [sp, #48]
    85d4:	mov	w0, #0x517f                	// #20863
    85d8:	movk	w0, #0x1, lsl #16
    85dc:	cmp	w1, w0
    85e0:	b.gt	8680 <PyNumber_FloorDivide@plt+0x3a30>
    85e4:	ldr	x0, [sp, #72]
    85e8:	ldr	x0, [x0, #24]
    85ec:	str	x0, [sp, #64]
    85f0:	ldr	x0, [sp, #64]
    85f4:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    85f8:	ldr	x0, [sp, #64]
    85fc:	bl	4c00 <_PyLong_AsInt@plt>
    8600:	str	w0, [sp, #44]
    8604:	ldr	w0, [sp, #44]
    8608:	cmn	w0, #0x1
    860c:	b.ne	861c <PyNumber_FloorDivide@plt+0x39cc>  // b.any
    8610:	bl	49f0 <PyErr_Occurred@plt>
    8614:	cmp	x0, #0x0
    8618:	b.ne	865c <PyNumber_FloorDivide@plt+0x3a0c>  // b.any
    861c:	ldr	x4, [sp, #16]
    8620:	mov	w3, #0x0                   	// #0
    8624:	ldr	w2, [sp, #52]
    8628:	ldr	w1, [sp, #48]
    862c:	ldr	w0, [sp, #44]
    8630:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    8634:	str	x0, [sp, #56]
    8638:	b	8660 <PyNumber_FloorDivide@plt+0x3a10>
    863c:	nop
    8640:	b	8660 <PyNumber_FloorDivide@plt+0x3a10>
    8644:	nop
    8648:	b	8660 <PyNumber_FloorDivide@plt+0x3a10>
    864c:	nop
    8650:	b	8660 <PyNumber_FloorDivide@plt+0x3a10>
    8654:	nop
    8658:	b	8660 <PyNumber_FloorDivide@plt+0x3a10>
    865c:	nop
    8660:	ldr	x0, [sp, #72]
    8664:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    8668:	ldr	x0, [sp, #64]
    866c:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    8670:	ldr	x0, [sp, #56]
    8674:	b	86a4 <PyNumber_FloorDivide@plt+0x3a54>
    8678:	nop
    867c:	b	8684 <PyNumber_FloorDivide@plt+0x3a34>
    8680:	nop
    8684:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8688:	ldr	x0, [x0, #3976]
    868c:	ldr	x2, [x0]
    8690:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    8694:	add	x1, x0, #0x28
    8698:	mov	x0, x2
    869c:	bl	48c0 <PyErr_SetString@plt>
    86a0:	b	8660 <PyNumber_FloorDivide@plt+0x3a10>
    86a4:	ldp	x29, x30, [sp], #80
    86a8:	ret
    86ac:	stp	x29, x30, [sp, #-64]!
    86b0:	mov	x29, sp
    86b4:	str	x0, [sp, #24]
    86b8:	str	x1, [sp, #16]
    86bc:	ldr	x0, [sp, #16]
    86c0:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    86c4:	str	x0, [sp, #56]
    86c8:	ldr	x0, [sp, #56]
    86cc:	cmp	x0, #0x0
    86d0:	b.ne	86dc <PyNumber_FloorDivide@plt+0x3a8c>  // b.any
    86d4:	mov	x0, #0x0                   	// #0
    86d8:	b	8740 <PyNumber_FloorDivide@plt+0x3af0>
    86dc:	ldr	x1, [sp, #56]
    86e0:	ldr	x0, [sp, #24]
    86e4:	bl	4870 <PyNumber_Multiply@plt>
    86e8:	str	x0, [sp, #48]
    86ec:	ldr	x2, [sp, #56]
    86f0:	mov	w1, #0x777                 	// #1911
    86f4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    86f8:	add	x0, x0, #0xb30
    86fc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8700:	ldr	x0, [sp, #48]
    8704:	cmp	x0, #0x0
    8708:	b.ne	8714 <PyNumber_FloorDivide@plt+0x3ac4>  // b.any
    870c:	mov	x0, #0x0                   	// #0
    8710:	b	8740 <PyNumber_FloorDivide@plt+0x3af0>
    8714:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8718:	add	x1, x0, #0x5f0
    871c:	ldr	x0, [sp, #48]
    8720:	bl	8494 <PyNumber_FloorDivide@plt+0x3844>
    8724:	str	x0, [sp, #40]
    8728:	ldr	x2, [sp, #48]
    872c:	mov	w1, #0x77c                 	// #1916
    8730:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8734:	add	x0, x0, #0xb30
    8738:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    873c:	ldr	x0, [sp, #40]
    8740:	ldp	x29, x30, [sp], #64
    8744:	ret
    8748:	stp	x29, x30, [sp, #-48]!
    874c:	mov	x29, sp
    8750:	str	x0, [sp, #24]
    8754:	mov	x2, #0x0                   	// #0
    8758:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    875c:	add	x1, x0, #0xc70
    8760:	ldr	x0, [sp, #24]
    8764:	bl	4aa0 <_PyObject_CallMethodId@plt>
    8768:	str	x0, [sp, #40]
    876c:	ldr	x0, [sp, #40]
    8770:	cmp	x0, #0x0
    8774:	b.ne	8780 <PyNumber_FloorDivide@plt+0x3b30>  // b.any
    8778:	mov	x0, #0x0                   	// #0
    877c:	b	882c <PyNumber_FloorDivide@plt+0x3bdc>
    8780:	ldr	x0, [sp, #40]
    8784:	ldr	x0, [x0, #8]
    8788:	ldr	x0, [x0, #168]
    878c:	and	x0, x0, #0x4000000
    8790:	cmp	x0, #0x0
    8794:	b.ne	87e0 <PyNumber_FloorDivide@plt+0x3b90>  // b.any
    8798:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    879c:	ldr	x0, [x0, #3976]
    87a0:	ldr	x3, [x0]
    87a4:	ldr	x0, [sp, #40]
    87a8:	ldr	x0, [x0, #8]
    87ac:	ldr	x0, [x0, #24]
    87b0:	mov	x2, x0
    87b4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    87b8:	add	x1, x0, #0x50
    87bc:	mov	x0, x3
    87c0:	bl	4bb0 <PyErr_Format@plt>
    87c4:	ldr	x2, [sp, #40]
    87c8:	mov	w1, #0x78f                 	// #1935
    87cc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    87d0:	add	x0, x0, #0xb30
    87d4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    87d8:	mov	x0, #0x0                   	// #0
    87dc:	b	882c <PyNumber_FloorDivide@plt+0x3bdc>
    87e0:	ldr	x0, [sp, #40]
    87e4:	bl	4ba0 <PyTuple_Size@plt>
    87e8:	cmp	x0, #0x2
    87ec:	b.eq	8828 <PyNumber_FloorDivide@plt+0x3bd8>  // b.none
    87f0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    87f4:	ldr	x0, [x0, #3968]
    87f8:	ldr	x2, [x0]
    87fc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    8800:	add	x1, x0, #0xa0
    8804:	mov	x0, x2
    8808:	bl	48c0 <PyErr_SetString@plt>
    880c:	ldr	x2, [sp, #40]
    8810:	mov	w1, #0x795                 	// #1941
    8814:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8818:	add	x0, x0, #0xb30
    881c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8820:	mov	x0, #0x0                   	// #0
    8824:	b	882c <PyNumber_FloorDivide@plt+0x3bdc>
    8828:	ldr	x0, [sp, #40]
    882c:	ldp	x29, x30, [sp], #48
    8830:	ret
    8834:	stp	x29, x30, [sp, #-96]!
    8838:	mov	x29, sp
    883c:	str	x0, [sp, #40]
    8840:	str	x1, [sp, #32]
    8844:	str	w2, [sp, #28]
    8848:	str	xzr, [sp, #88]
    884c:	str	xzr, [sp, #80]
    8850:	str	xzr, [sp, #72]
    8854:	ldr	x0, [sp, #40]
    8858:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    885c:	str	x0, [sp, #80]
    8860:	ldr	x0, [sp, #80]
    8864:	cmp	x0, #0x0
    8868:	b.ne	8874 <PyNumber_FloorDivide@plt+0x3c24>  // b.any
    886c:	mov	x0, #0x0                   	// #0
    8870:	b	8984 <PyNumber_FloorDivide@plt+0x3d34>
    8874:	ldr	x0, [sp, #32]
    8878:	bl	8748 <PyNumber_FloorDivide@plt+0x3af8>
    887c:	str	x0, [sp, #72]
    8880:	ldr	x0, [sp, #72]
    8884:	cmp	x0, #0x0
    8888:	b.eq	895c <PyNumber_FloorDivide@plt+0x3d0c>  // b.none
    888c:	ldr	x1, [sp, #72]
    8890:	ldrsw	x0, [sp, #28]
    8894:	add	x0, x0, #0x2
    8898:	lsl	x0, x0, #3
    889c:	add	x0, x1, x0
    88a0:	ldr	x0, [x0, #8]
    88a4:	mov	x1, x0
    88a8:	ldr	x0, [sp, #80]
    88ac:	bl	4870 <PyNumber_Multiply@plt>
    88b0:	str	x0, [sp, #64]
    88b4:	ldr	x2, [sp, #80]
    88b8:	mov	w1, #0x7ab                 	// #1963
    88bc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    88c0:	add	x0, x0, #0xb30
    88c4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    88c8:	str	xzr, [sp, #80]
    88cc:	ldr	x0, [sp, #64]
    88d0:	cmp	x0, #0x0
    88d4:	b.eq	8964 <PyNumber_FloorDivide@plt+0x3d14>  // b.none
    88d8:	ldr	w0, [sp, #28]
    88dc:	cmp	w0, #0x0
    88e0:	cset	w0, eq  // eq = none
    88e4:	and	w0, w0, #0xff
    88e8:	ldr	x1, [sp, #72]
    88ec:	sxtw	x0, w0
    88f0:	add	x0, x0, #0x2
    88f4:	lsl	x0, x0, #3
    88f8:	add	x0, x1, x0
    88fc:	ldr	x0, [x0, #8]
    8900:	mov	x1, x0
    8904:	ldr	x0, [sp, #64]
    8908:	bl	5208 <PyNumber_FloorDivide@plt+0x5b8>
    890c:	str	x0, [sp, #56]
    8910:	ldr	x2, [sp, #64]
    8914:	mov	w1, #0x7b0                 	// #1968
    8918:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    891c:	add	x0, x0, #0xb30
    8920:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8924:	ldr	x0, [sp, #56]
    8928:	cmp	x0, #0x0
    892c:	b.eq	896c <PyNumber_FloorDivide@plt+0x3d1c>  // b.none
    8930:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8934:	add	x1, x0, #0x5f0
    8938:	ldr	x0, [sp, #56]
    893c:	bl	8494 <PyNumber_FloorDivide@plt+0x3844>
    8940:	str	x0, [sp, #88]
    8944:	ldr	x2, [sp, #56]
    8948:	mov	w1, #0x7b4                 	// #1972
    894c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8950:	add	x0, x0, #0xb30
    8954:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8958:	b	8970 <PyNumber_FloorDivide@plt+0x3d20>
    895c:	nop
    8960:	b	8970 <PyNumber_FloorDivide@plt+0x3d20>
    8964:	nop
    8968:	b	8970 <PyNumber_FloorDivide@plt+0x3d20>
    896c:	nop
    8970:	ldr	x0, [sp, #80]
    8974:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    8978:	ldr	x0, [sp, #72]
    897c:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    8980:	ldr	x0, [sp, #88]
    8984:	ldp	x29, x30, [sp], #96
    8988:	ret
    898c:	stp	x29, x30, [sp, #-64]!
    8990:	mov	x29, sp
    8994:	str	x0, [sp, #24]
    8998:	str	x1, [sp, #16]
    899c:	ldr	x0, [sp, #24]
    89a0:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    89a4:	str	x0, [sp, #56]
    89a8:	ldr	x0, [sp, #56]
    89ac:	cmp	x0, #0x0
    89b0:	b.ne	89bc <PyNumber_FloorDivide@plt+0x3d6c>  // b.any
    89b4:	mov	x0, #0x0                   	// #0
    89b8:	b	8a20 <PyNumber_FloorDivide@plt+0x3dd0>
    89bc:	ldr	x1, [sp, #16]
    89c0:	ldr	x0, [sp, #56]
    89c4:	bl	4c50 <PyNumber_FloorDivide@plt>
    89c8:	str	x0, [sp, #48]
    89cc:	ldr	x2, [sp, #56]
    89d0:	mov	w1, #0x7c8                 	// #1992
    89d4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    89d8:	add	x0, x0, #0xb30
    89dc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    89e0:	ldr	x0, [sp, #48]
    89e4:	cmp	x0, #0x0
    89e8:	b.ne	89f4 <PyNumber_FloorDivide@plt+0x3da4>  // b.any
    89ec:	mov	x0, #0x0                   	// #0
    89f0:	b	8a20 <PyNumber_FloorDivide@plt+0x3dd0>
    89f4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    89f8:	add	x1, x0, #0x5f0
    89fc:	ldr	x0, [sp, #48]
    8a00:	bl	8494 <PyNumber_FloorDivide@plt+0x3844>
    8a04:	str	x0, [sp, #40]
    8a08:	ldr	x2, [sp, #48]
    8a0c:	mov	w1, #0x7cd                 	// #1997
    8a10:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8a14:	add	x0, x0, #0xb30
    8a18:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8a1c:	ldr	x0, [sp, #40]
    8a20:	ldp	x29, x30, [sp], #64
    8a24:	ret
    8a28:	stp	x29, x30, [sp, #-64]!
    8a2c:	mov	x29, sp
    8a30:	str	x0, [sp, #24]
    8a34:	str	x1, [sp, #16]
    8a38:	ldr	x0, [sp, #24]
    8a3c:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    8a40:	str	x0, [sp, #56]
    8a44:	ldr	x0, [sp, #56]
    8a48:	cmp	x0, #0x0
    8a4c:	b.ne	8a58 <PyNumber_FloorDivide@plt+0x3e08>  // b.any
    8a50:	mov	x0, #0x0                   	// #0
    8a54:	b	8ac8 <PyNumber_FloorDivide@plt+0x3e78>
    8a58:	ldr	x0, [sp, #16]
    8a5c:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    8a60:	str	x0, [sp, #48]
    8a64:	ldr	x0, [sp, #48]
    8a68:	cmp	x0, #0x0
    8a6c:	b.ne	8a8c <PyNumber_FloorDivide@plt+0x3e3c>  // b.any
    8a70:	ldr	x2, [sp, #56]
    8a74:	mov	w1, #0x7de                 	// #2014
    8a78:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8a7c:	add	x0, x0, #0xb30
    8a80:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8a84:	mov	x0, #0x0                   	// #0
    8a88:	b	8ac8 <PyNumber_FloorDivide@plt+0x3e78>
    8a8c:	ldr	x1, [sp, #48]
    8a90:	ldr	x0, [sp, #56]
    8a94:	bl	4c50 <PyNumber_FloorDivide@plt>
    8a98:	str	x0, [sp, #40]
    8a9c:	ldr	x2, [sp, #56]
    8aa0:	mov	w1, #0x7e3                 	// #2019
    8aa4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8aa8:	add	x0, x0, #0xb30
    8aac:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8ab0:	ldr	x2, [sp, #48]
    8ab4:	mov	w1, #0x7e4                 	// #2020
    8ab8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8abc:	add	x0, x0, #0xb30
    8ac0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8ac4:	ldr	x0, [sp, #40]
    8ac8:	ldp	x29, x30, [sp], #64
    8acc:	ret
    8ad0:	stp	x29, x30, [sp, #-64]!
    8ad4:	mov	x29, sp
    8ad8:	str	x0, [sp, #24]
    8adc:	str	x1, [sp, #16]
    8ae0:	ldr	x0, [sp, #24]
    8ae4:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    8ae8:	str	x0, [sp, #56]
    8aec:	ldr	x0, [sp, #56]
    8af0:	cmp	x0, #0x0
    8af4:	b.ne	8b00 <PyNumber_FloorDivide@plt+0x3eb0>  // b.any
    8af8:	mov	x0, #0x0                   	// #0
    8afc:	b	8b70 <PyNumber_FloorDivide@plt+0x3f20>
    8b00:	ldr	x0, [sp, #16]
    8b04:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    8b08:	str	x0, [sp, #48]
    8b0c:	ldr	x0, [sp, #48]
    8b10:	cmp	x0, #0x0
    8b14:	b.ne	8b34 <PyNumber_FloorDivide@plt+0x3ee4>  // b.any
    8b18:	ldr	x2, [sp, #56]
    8b1c:	mov	w1, #0x7f5                 	// #2037
    8b20:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8b24:	add	x0, x0, #0xb30
    8b28:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8b2c:	mov	x0, #0x0                   	// #0
    8b30:	b	8b70 <PyNumber_FloorDivide@plt+0x3f20>
    8b34:	ldr	x1, [sp, #48]
    8b38:	ldr	x0, [sp, #56]
    8b3c:	bl	4c30 <PyNumber_TrueDivide@plt>
    8b40:	str	x0, [sp, #40]
    8b44:	ldr	x2, [sp, #56]
    8b48:	mov	w1, #0x7fa                 	// #2042
    8b4c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8b50:	add	x0, x0, #0xb30
    8b54:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8b58:	ldr	x2, [sp, #48]
    8b5c:	mov	w1, #0x7fb                 	// #2043
    8b60:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8b64:	add	x0, x0, #0xb30
    8b68:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8b6c:	ldr	x0, [sp, #40]
    8b70:	ldp	x29, x30, [sp], #64
    8b74:	ret
    8b78:	stp	x29, x30, [sp, #-64]!
    8b7c:	mov	x29, sp
    8b80:	str	x0, [sp, #24]
    8b84:	str	x1, [sp, #16]
    8b88:	ldr	x0, [sp, #24]
    8b8c:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    8b90:	str	x0, [sp, #56]
    8b94:	ldr	x0, [sp, #56]
    8b98:	cmp	x0, #0x0
    8b9c:	b.ne	8ba8 <PyNumber_FloorDivide@plt+0x3f58>  // b.any
    8ba0:	mov	x0, #0x0                   	// #0
    8ba4:	b	8c0c <PyNumber_FloorDivide@plt+0x3fbc>
    8ba8:	ldr	x1, [sp, #16]
    8bac:	ldr	x0, [sp, #56]
    8bb0:	bl	5208 <PyNumber_FloorDivide@plt+0x5b8>
    8bb4:	str	x0, [sp, #48]
    8bb8:	ldr	x2, [sp, #56]
    8bbc:	mov	w1, #0x808                 	// #2056
    8bc0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8bc4:	add	x0, x0, #0xb30
    8bc8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8bcc:	ldr	x0, [sp, #48]
    8bd0:	cmp	x0, #0x0
    8bd4:	b.ne	8be0 <PyNumber_FloorDivide@plt+0x3f90>  // b.any
    8bd8:	mov	x0, #0x0                   	// #0
    8bdc:	b	8c0c <PyNumber_FloorDivide@plt+0x3fbc>
    8be0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8be4:	add	x1, x0, #0x5f0
    8be8:	ldr	x0, [sp, #48]
    8bec:	bl	8494 <PyNumber_FloorDivide@plt+0x3844>
    8bf0:	str	x0, [sp, #40]
    8bf4:	ldr	x2, [sp, #48]
    8bf8:	mov	w1, #0x80c                 	// #2060
    8bfc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    8c00:	add	x0, x0, #0xb30
    8c04:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    8c08:	ldr	x0, [sp, #40]
    8c0c:	ldp	x29, x30, [sp], #64
    8c10:	ret
    8c14:	stp	x29, x30, [sp, #-64]!
    8c18:	mov	x29, sp
    8c1c:	str	x0, [sp, #24]
    8c20:	str	x1, [sp, #16]
    8c24:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8c28:	ldr	x0, [x0, #3960]
    8c2c:	str	x0, [sp, #56]
    8c30:	ldr	x0, [sp, #24]
    8c34:	ldr	x1, [x0, #8]
    8c38:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8c3c:	add	x0, x0, #0x5f0
    8c40:	cmp	x1, x0
    8c44:	b.eq	8c68 <PyNumber_FloorDivide@plt+0x4018>  // b.none
    8c48:	ldr	x0, [sp, #24]
    8c4c:	ldr	x2, [x0, #8]
    8c50:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8c54:	add	x1, x0, #0x5f0
    8c58:	mov	x0, x2
    8c5c:	bl	4b80 <PyType_IsSubtype@plt>
    8c60:	cmp	w0, #0x0
    8c64:	b.eq	8d08 <PyNumber_FloorDivide@plt+0x40b8>  // b.none
    8c68:	ldr	x0, [sp, #16]
    8c6c:	ldr	x1, [x0, #8]
    8c70:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8c74:	add	x0, x0, #0x5f0
    8c78:	cmp	x1, x0
    8c7c:	b.eq	8ca0 <PyNumber_FloorDivide@plt+0x4050>  // b.none
    8c80:	ldr	x0, [sp, #16]
    8c84:	ldr	x2, [x0, #8]
    8c88:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8c8c:	add	x1, x0, #0x5f0
    8c90:	mov	x0, x2
    8c94:	bl	4b80 <PyType_IsSubtype@plt>
    8c98:	cmp	w0, #0x0
    8c9c:	b.eq	8d08 <PyNumber_FloorDivide@plt+0x40b8>  // b.none
    8ca0:	ldr	x0, [sp, #24]
    8ca4:	ldr	w1, [x0, #24]
    8ca8:	ldr	x0, [sp, #16]
    8cac:	ldr	w0, [x0, #24]
    8cb0:	add	w0, w1, w0
    8cb4:	str	w0, [sp, #52]
    8cb8:	ldr	x0, [sp, #24]
    8cbc:	ldr	w1, [x0, #28]
    8cc0:	ldr	x0, [sp, #16]
    8cc4:	ldr	w0, [x0, #28]
    8cc8:	add	w0, w1, w0
    8ccc:	str	w0, [sp, #48]
    8cd0:	ldr	x0, [sp, #24]
    8cd4:	ldr	w1, [x0, #32]
    8cd8:	ldr	x0, [sp, #16]
    8cdc:	ldr	w0, [x0, #32]
    8ce0:	add	w0, w1, w0
    8ce4:	str	w0, [sp, #44]
    8ce8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8cec:	add	x4, x0, #0x5f0
    8cf0:	mov	w3, #0x1                   	// #1
    8cf4:	ldr	w2, [sp, #44]
    8cf8:	ldr	w1, [sp, #48]
    8cfc:	ldr	w0, [sp, #52]
    8d00:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    8d04:	str	x0, [sp, #56]
    8d08:	ldr	x1, [sp, #56]
    8d0c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8d10:	ldr	x0, [x0, #3960]
    8d14:	cmp	x1, x0
    8d18:	b.ne	8d24 <PyNumber_FloorDivide@plt+0x40d4>  // b.any
    8d1c:	ldr	x0, [sp, #56]
    8d20:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8d24:	ldr	x0, [sp, #56]
    8d28:	ldp	x29, x30, [sp], #64
    8d2c:	ret
    8d30:	stp	x29, x30, [sp, #-32]!
    8d34:	mov	x29, sp
    8d38:	str	x0, [sp, #24]
    8d3c:	ldr	x0, [sp, #24]
    8d40:	ldr	w0, [x0, #24]
    8d44:	neg	w5, w0
    8d48:	ldr	x0, [sp, #24]
    8d4c:	ldr	w0, [x0, #28]
    8d50:	neg	w1, w0
    8d54:	ldr	x0, [sp, #24]
    8d58:	ldr	w0, [x0, #32]
    8d5c:	neg	w2, w0
    8d60:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8d64:	add	x4, x0, #0x5f0
    8d68:	mov	w3, #0x1                   	// #1
    8d6c:	mov	w0, w5
    8d70:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    8d74:	ldp	x29, x30, [sp], #32
    8d78:	ret
    8d7c:	stp	x29, x30, [sp, #-32]!
    8d80:	mov	x29, sp
    8d84:	str	x0, [sp, #24]
    8d88:	ldr	x0, [sp, #24]
    8d8c:	ldr	w5, [x0, #24]
    8d90:	ldr	x0, [sp, #24]
    8d94:	ldr	w1, [x0, #28]
    8d98:	ldr	x0, [sp, #24]
    8d9c:	ldr	w2, [x0, #32]
    8da0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8da4:	add	x4, x0, #0x5f0
    8da8:	mov	w3, #0x0                   	// #0
    8dac:	mov	w0, w5
    8db0:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    8db4:	ldp	x29, x30, [sp], #32
    8db8:	ret
    8dbc:	stp	x29, x30, [sp, #-48]!
    8dc0:	mov	x29, sp
    8dc4:	str	x0, [sp, #24]
    8dc8:	ldr	x0, [sp, #24]
    8dcc:	ldr	w0, [x0, #24]
    8dd0:	cmp	w0, #0x0
    8dd4:	b.ge	8de8 <PyNumber_FloorDivide@plt+0x4198>  // b.tcont
    8dd8:	ldr	x0, [sp, #24]
    8ddc:	bl	8d30 <PyNumber_FloorDivide@plt+0x40e0>
    8de0:	str	x0, [sp, #40]
    8de4:	b	8df4 <PyNumber_FloorDivide@plt+0x41a4>
    8de8:	ldr	x0, [sp, #24]
    8dec:	bl	8d7c <PyNumber_FloorDivide@plt+0x412c>
    8df0:	str	x0, [sp, #40]
    8df4:	ldr	x0, [sp, #40]
    8df8:	ldp	x29, x30, [sp], #48
    8dfc:	ret
    8e00:	stp	x29, x30, [sp, #-64]!
    8e04:	mov	x29, sp
    8e08:	str	x0, [sp, #24]
    8e0c:	str	x1, [sp, #16]
    8e10:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8e14:	ldr	x0, [x0, #3960]
    8e18:	str	x0, [sp, #56]
    8e1c:	ldr	x0, [sp, #24]
    8e20:	ldr	x1, [x0, #8]
    8e24:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8e28:	add	x0, x0, #0x5f0
    8e2c:	cmp	x1, x0
    8e30:	b.eq	8e54 <PyNumber_FloorDivide@plt+0x4204>  // b.none
    8e34:	ldr	x0, [sp, #24]
    8e38:	ldr	x2, [x0, #8]
    8e3c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8e40:	add	x1, x0, #0x5f0
    8e44:	mov	x0, x2
    8e48:	bl	4b80 <PyType_IsSubtype@plt>
    8e4c:	cmp	w0, #0x0
    8e50:	b.eq	8ef4 <PyNumber_FloorDivide@plt+0x42a4>  // b.none
    8e54:	ldr	x0, [sp, #16]
    8e58:	ldr	x1, [x0, #8]
    8e5c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8e60:	add	x0, x0, #0x5f0
    8e64:	cmp	x1, x0
    8e68:	b.eq	8e8c <PyNumber_FloorDivide@plt+0x423c>  // b.none
    8e6c:	ldr	x0, [sp, #16]
    8e70:	ldr	x2, [x0, #8]
    8e74:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8e78:	add	x1, x0, #0x5f0
    8e7c:	mov	x0, x2
    8e80:	bl	4b80 <PyType_IsSubtype@plt>
    8e84:	cmp	w0, #0x0
    8e88:	b.eq	8ef4 <PyNumber_FloorDivide@plt+0x42a4>  // b.none
    8e8c:	ldr	x0, [sp, #24]
    8e90:	ldr	w1, [x0, #24]
    8e94:	ldr	x0, [sp, #16]
    8e98:	ldr	w0, [x0, #24]
    8e9c:	sub	w0, w1, w0
    8ea0:	str	w0, [sp, #52]
    8ea4:	ldr	x0, [sp, #24]
    8ea8:	ldr	w1, [x0, #28]
    8eac:	ldr	x0, [sp, #16]
    8eb0:	ldr	w0, [x0, #28]
    8eb4:	sub	w0, w1, w0
    8eb8:	str	w0, [sp, #48]
    8ebc:	ldr	x0, [sp, #24]
    8ec0:	ldr	w1, [x0, #32]
    8ec4:	ldr	x0, [sp, #16]
    8ec8:	ldr	w0, [x0, #32]
    8ecc:	sub	w0, w1, w0
    8ed0:	str	w0, [sp, #44]
    8ed4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8ed8:	add	x4, x0, #0x5f0
    8edc:	mov	w3, #0x1                   	// #1
    8ee0:	ldr	w2, [sp, #44]
    8ee4:	ldr	w1, [sp, #48]
    8ee8:	ldr	w0, [sp, #52]
    8eec:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    8ef0:	str	x0, [sp, #56]
    8ef4:	ldr	x1, [sp, #56]
    8ef8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    8efc:	ldr	x0, [x0, #3960]
    8f00:	cmp	x1, x0
    8f04:	b.ne	8f10 <PyNumber_FloorDivide@plt+0x42c0>  // b.any
    8f08:	ldr	x0, [sp, #56]
    8f0c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    8f10:	ldr	x0, [sp, #56]
    8f14:	ldp	x29, x30, [sp], #64
    8f18:	ret
    8f1c:	sub	sp, sp, #0x20
    8f20:	str	x0, [sp, #8]
    8f24:	str	x1, [sp]
    8f28:	ldr	x0, [sp, #8]
    8f2c:	ldr	w1, [x0, #24]
    8f30:	ldr	x0, [sp]
    8f34:	ldr	w0, [x0, #24]
    8f38:	sub	w0, w1, w0
    8f3c:	str	w0, [sp, #28]
    8f40:	ldr	w0, [sp, #28]
    8f44:	cmp	w0, #0x0
    8f48:	b.ne	8f88 <PyNumber_FloorDivide@plt+0x4338>  // b.any
    8f4c:	ldr	x0, [sp, #8]
    8f50:	ldr	w1, [x0, #28]
    8f54:	ldr	x0, [sp]
    8f58:	ldr	w0, [x0, #28]
    8f5c:	sub	w0, w1, w0
    8f60:	str	w0, [sp, #28]
    8f64:	ldr	w0, [sp, #28]
    8f68:	cmp	w0, #0x0
    8f6c:	b.ne	8f88 <PyNumber_FloorDivide@plt+0x4338>  // b.any
    8f70:	ldr	x0, [sp, #8]
    8f74:	ldr	w1, [x0, #32]
    8f78:	ldr	x0, [sp]
    8f7c:	ldr	w0, [x0, #32]
    8f80:	sub	w0, w1, w0
    8f84:	str	w0, [sp, #28]
    8f88:	ldr	w0, [sp, #28]
    8f8c:	add	sp, sp, #0x20
    8f90:	ret
    8f94:	stp	x29, x30, [sp, #-64]!
    8f98:	mov	x29, sp
    8f9c:	str	x0, [sp, #40]
    8fa0:	str	x1, [sp, #32]
    8fa4:	str	w2, [sp, #28]
    8fa8:	ldr	x0, [sp, #32]
    8fac:	ldr	x1, [x0, #8]
    8fb0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8fb4:	add	x0, x0, #0x5f0
    8fb8:	cmp	x1, x0
    8fbc:	b.eq	8fe0 <PyNumber_FloorDivide@plt+0x4390>  // b.none
    8fc0:	ldr	x0, [sp, #32]
    8fc4:	ldr	x2, [x0, #8]
    8fc8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    8fcc:	add	x1, x0, #0x5f0
    8fd0:	mov	x0, x2
    8fd4:	bl	4b80 <PyType_IsSubtype@plt>
    8fd8:	cmp	w0, #0x0
    8fdc:	b.eq	9000 <PyNumber_FloorDivide@plt+0x43b0>  // b.none
    8fe0:	ldr	x1, [sp, #32]
    8fe4:	ldr	x0, [sp, #40]
    8fe8:	bl	8f1c <PyNumber_FloorDivide@plt+0x42cc>
    8fec:	str	w0, [sp, #60]
    8ff0:	ldr	w1, [sp, #28]
    8ff4:	ldr	w0, [sp, #60]
    8ff8:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
    8ffc:	b	9014 <PyNumber_FloorDivide@plt+0x43c4>
    9000:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9004:	ldr	x0, [x0, #3960]
    9008:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    900c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9010:	ldr	x0, [x0, #3960]
    9014:	ldp	x29, x30, [sp], #64
    9018:	ret
    901c:	stp	x29, x30, [sp, #-48]!
    9020:	mov	x29, sp
    9024:	str	x0, [sp, #24]
    9028:	ldr	x0, [sp, #24]
    902c:	ldr	x0, [x0, #16]
    9030:	cmn	x0, #0x1
    9034:	b.ne	9078 <PyNumber_FloorDivide@plt+0x4428>  // b.any
    9038:	ldr	x0, [sp, #24]
    903c:	bl	a378 <PyNumber_FloorDivide@plt+0x5728>
    9040:	str	x0, [sp, #40]
    9044:	ldr	x0, [sp, #40]
    9048:	cmp	x0, #0x0
    904c:	b.eq	9078 <PyNumber_FloorDivide@plt+0x4428>  // b.none
    9050:	ldr	x0, [sp, #40]
    9054:	bl	4a90 <PyObject_Hash@plt>
    9058:	mov	x1, x0
    905c:	ldr	x0, [sp, #24]
    9060:	str	x1, [x0, #16]
    9064:	ldr	x2, [sp, #40]
    9068:	mov	w1, #0x884                 	// #2180
    906c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9070:	add	x0, x0, #0xb30
    9074:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9078:	ldr	x0, [sp, #24]
    907c:	ldr	x0, [x0, #16]
    9080:	ldp	x29, x30, [sp], #48
    9084:	ret
    9088:	stp	x29, x30, [sp, #-48]!
    908c:	mov	x29, sp
    9090:	str	x0, [sp, #24]
    9094:	str	x1, [sp, #16]
    9098:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    909c:	ldr	x0, [x0, #3960]
    90a0:	str	x0, [sp, #40]
    90a4:	ldr	x0, [sp, #24]
    90a8:	ldr	x1, [x0, #8]
    90ac:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    90b0:	add	x0, x0, #0x5f0
    90b4:	cmp	x1, x0
    90b8:	b.eq	90dc <PyNumber_FloorDivide@plt+0x448c>  // b.none
    90bc:	ldr	x0, [sp, #24]
    90c0:	ldr	x2, [x0, #8]
    90c4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    90c8:	add	x1, x0, #0x5f0
    90cc:	mov	x0, x2
    90d0:	bl	4b80 <PyType_IsSubtype@plt>
    90d4:	cmp	w0, #0x0
    90d8:	b.eq	9158 <PyNumber_FloorDivide@plt+0x4508>  // b.none
    90dc:	ldr	x0, [sp, #16]
    90e0:	ldr	x0, [x0, #8]
    90e4:	ldr	x0, [x0, #168]
    90e8:	and	x0, x0, #0x1000000
    90ec:	cmp	x0, #0x0
    90f0:	b.eq	9108 <PyNumber_FloorDivide@plt+0x44b8>  // b.none
    90f4:	ldr	x1, [sp, #24]
    90f8:	ldr	x0, [sp, #16]
    90fc:	bl	86ac <PyNumber_FloorDivide@plt+0x3a5c>
    9100:	str	x0, [sp, #40]
    9104:	b	91d4 <PyNumber_FloorDivide@plt+0x4584>
    9108:	ldr	x0, [sp, #16]
    910c:	ldr	x1, [x0, #8]
    9110:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9114:	ldr	x0, [x0, #3944]
    9118:	cmp	x1, x0
    911c:	b.eq	9140 <PyNumber_FloorDivide@plt+0x44f0>  // b.none
    9120:	ldr	x0, [sp, #16]
    9124:	ldr	x2, [x0, #8]
    9128:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    912c:	ldr	x1, [x0, #3944]
    9130:	mov	x0, x2
    9134:	bl	4b80 <PyType_IsSubtype@plt>
    9138:	cmp	w0, #0x0
    913c:	b.eq	91d4 <PyNumber_FloorDivide@plt+0x4584>  // b.none
    9140:	mov	w2, #0x0                   	// #0
    9144:	ldr	x1, [sp, #16]
    9148:	ldr	x0, [sp, #24]
    914c:	bl	8834 <PyNumber_FloorDivide@plt+0x3be4>
    9150:	str	x0, [sp, #40]
    9154:	b	91d4 <PyNumber_FloorDivide@plt+0x4584>
    9158:	ldr	x0, [sp, #24]
    915c:	ldr	x0, [x0, #8]
    9160:	ldr	x0, [x0, #168]
    9164:	and	x0, x0, #0x1000000
    9168:	cmp	x0, #0x0
    916c:	b.eq	9184 <PyNumber_FloorDivide@plt+0x4534>  // b.none
    9170:	ldr	x1, [sp, #16]
    9174:	ldr	x0, [sp, #24]
    9178:	bl	86ac <PyNumber_FloorDivide@plt+0x3a5c>
    917c:	str	x0, [sp, #40]
    9180:	b	91d8 <PyNumber_FloorDivide@plt+0x4588>
    9184:	ldr	x0, [sp, #24]
    9188:	ldr	x1, [x0, #8]
    918c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9190:	ldr	x0, [x0, #3944]
    9194:	cmp	x1, x0
    9198:	b.eq	91bc <PyNumber_FloorDivide@plt+0x456c>  // b.none
    919c:	ldr	x0, [sp, #24]
    91a0:	ldr	x2, [x0, #8]
    91a4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    91a8:	ldr	x1, [x0, #3944]
    91ac:	mov	x0, x2
    91b0:	bl	4b80 <PyType_IsSubtype@plt>
    91b4:	cmp	w0, #0x0
    91b8:	b.eq	91d8 <PyNumber_FloorDivide@plt+0x4588>  // b.none
    91bc:	mov	w2, #0x0                   	// #0
    91c0:	ldr	x1, [sp, #24]
    91c4:	ldr	x0, [sp, #16]
    91c8:	bl	8834 <PyNumber_FloorDivide@plt+0x3be4>
    91cc:	str	x0, [sp, #40]
    91d0:	b	91d8 <PyNumber_FloorDivide@plt+0x4588>
    91d4:	nop
    91d8:	ldr	x1, [sp, #40]
    91dc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    91e0:	ldr	x0, [x0, #3960]
    91e4:	cmp	x1, x0
    91e8:	b.ne	91f4 <PyNumber_FloorDivide@plt+0x45a4>  // b.any
    91ec:	ldr	x0, [sp, #40]
    91f0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    91f4:	ldr	x0, [sp, #40]
    91f8:	ldp	x29, x30, [sp], #48
    91fc:	ret
    9200:	stp	x29, x30, [sp, #-48]!
    9204:	mov	x29, sp
    9208:	str	x0, [sp, #24]
    920c:	str	x1, [sp, #16]
    9210:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9214:	ldr	x0, [x0, #3960]
    9218:	str	x0, [sp, #40]
    921c:	ldr	x0, [sp, #24]
    9220:	ldr	x1, [x0, #8]
    9224:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9228:	add	x0, x0, #0x5f0
    922c:	cmp	x1, x0
    9230:	b.eq	9254 <PyNumber_FloorDivide@plt+0x4604>  // b.none
    9234:	ldr	x0, [sp, #24]
    9238:	ldr	x2, [x0, #8]
    923c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9240:	add	x1, x0, #0x5f0
    9244:	mov	x0, x2
    9248:	bl	4b80 <PyType_IsSubtype@plt>
    924c:	cmp	w0, #0x0
    9250:	b.eq	92c8 <PyNumber_FloorDivide@plt+0x4678>  // b.none
    9254:	ldr	x0, [sp, #16]
    9258:	ldr	x0, [x0, #8]
    925c:	ldr	x0, [x0, #168]
    9260:	and	x0, x0, #0x1000000
    9264:	cmp	x0, #0x0
    9268:	b.eq	9280 <PyNumber_FloorDivide@plt+0x4630>  // b.none
    926c:	ldr	x1, [sp, #16]
    9270:	ldr	x0, [sp, #24]
    9274:	bl	898c <PyNumber_FloorDivide@plt+0x3d3c>
    9278:	str	x0, [sp, #40]
    927c:	b	92c8 <PyNumber_FloorDivide@plt+0x4678>
    9280:	ldr	x0, [sp, #16]
    9284:	ldr	x1, [x0, #8]
    9288:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    928c:	add	x0, x0, #0x5f0
    9290:	cmp	x1, x0
    9294:	b.eq	92b8 <PyNumber_FloorDivide@plt+0x4668>  // b.none
    9298:	ldr	x0, [sp, #16]
    929c:	ldr	x2, [x0, #8]
    92a0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    92a4:	add	x1, x0, #0x5f0
    92a8:	mov	x0, x2
    92ac:	bl	4b80 <PyType_IsSubtype@plt>
    92b0:	cmp	w0, #0x0
    92b4:	b.eq	92c8 <PyNumber_FloorDivide@plt+0x4678>  // b.none
    92b8:	ldr	x1, [sp, #16]
    92bc:	ldr	x0, [sp, #24]
    92c0:	bl	8a28 <PyNumber_FloorDivide@plt+0x3dd8>
    92c4:	str	x0, [sp, #40]
    92c8:	ldr	x1, [sp, #40]
    92cc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    92d0:	ldr	x0, [x0, #3960]
    92d4:	cmp	x1, x0
    92d8:	b.ne	92e4 <PyNumber_FloorDivide@plt+0x4694>  // b.any
    92dc:	ldr	x0, [sp, #40]
    92e0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    92e4:	ldr	x0, [sp, #40]
    92e8:	ldp	x29, x30, [sp], #48
    92ec:	ret
    92f0:	stp	x29, x30, [sp, #-48]!
    92f4:	mov	x29, sp
    92f8:	str	x0, [sp, #24]
    92fc:	str	x1, [sp, #16]
    9300:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9304:	ldr	x0, [x0, #3960]
    9308:	str	x0, [sp, #40]
    930c:	ldr	x0, [sp, #24]
    9310:	ldr	x1, [x0, #8]
    9314:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9318:	add	x0, x0, #0x5f0
    931c:	cmp	x1, x0
    9320:	b.eq	9344 <PyNumber_FloorDivide@plt+0x46f4>  // b.none
    9324:	ldr	x0, [sp, #24]
    9328:	ldr	x2, [x0, #8]
    932c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9330:	add	x1, x0, #0x5f0
    9334:	mov	x0, x2
    9338:	bl	4b80 <PyType_IsSubtype@plt>
    933c:	cmp	w0, #0x0
    9340:	b.eq	9408 <PyNumber_FloorDivide@plt+0x47b8>  // b.none
    9344:	ldr	x0, [sp, #16]
    9348:	ldr	x1, [x0, #8]
    934c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9350:	add	x0, x0, #0x5f0
    9354:	cmp	x1, x0
    9358:	b.eq	937c <PyNumber_FloorDivide@plt+0x472c>  // b.none
    935c:	ldr	x0, [sp, #16]
    9360:	ldr	x2, [x0, #8]
    9364:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9368:	add	x1, x0, #0x5f0
    936c:	mov	x0, x2
    9370:	bl	4b80 <PyType_IsSubtype@plt>
    9374:	cmp	w0, #0x0
    9378:	b.eq	9390 <PyNumber_FloorDivide@plt+0x4740>  // b.none
    937c:	ldr	x1, [sp, #16]
    9380:	ldr	x0, [sp, #24]
    9384:	bl	8ad0 <PyNumber_FloorDivide@plt+0x3e80>
    9388:	str	x0, [sp, #40]
    938c:	b	9408 <PyNumber_FloorDivide@plt+0x47b8>
    9390:	ldr	x0, [sp, #16]
    9394:	ldr	x1, [x0, #8]
    9398:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    939c:	ldr	x0, [x0, #3944]
    93a0:	cmp	x1, x0
    93a4:	b.eq	93c8 <PyNumber_FloorDivide@plt+0x4778>  // b.none
    93a8:	ldr	x0, [sp, #16]
    93ac:	ldr	x2, [x0, #8]
    93b0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    93b4:	ldr	x1, [x0, #3944]
    93b8:	mov	x0, x2
    93bc:	bl	4b80 <PyType_IsSubtype@plt>
    93c0:	cmp	w0, #0x0
    93c4:	b.eq	93e0 <PyNumber_FloorDivide@plt+0x4790>  // b.none
    93c8:	mov	w2, #0x1                   	// #1
    93cc:	ldr	x1, [sp, #16]
    93d0:	ldr	x0, [sp, #24]
    93d4:	bl	8834 <PyNumber_FloorDivide@plt+0x3be4>
    93d8:	str	x0, [sp, #40]
    93dc:	b	9408 <PyNumber_FloorDivide@plt+0x47b8>
    93e0:	ldr	x0, [sp, #16]
    93e4:	ldr	x0, [x0, #8]
    93e8:	ldr	x0, [x0, #168]
    93ec:	and	x0, x0, #0x1000000
    93f0:	cmp	x0, #0x0
    93f4:	b.eq	9408 <PyNumber_FloorDivide@plt+0x47b8>  // b.none
    93f8:	ldr	x1, [sp, #16]
    93fc:	ldr	x0, [sp, #24]
    9400:	bl	8b78 <PyNumber_FloorDivide@plt+0x3f28>
    9404:	str	x0, [sp, #40]
    9408:	ldr	x1, [sp, #40]
    940c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9410:	ldr	x0, [x0, #3960]
    9414:	cmp	x1, x0
    9418:	b.ne	9424 <PyNumber_FloorDivide@plt+0x47d4>  // b.any
    941c:	ldr	x0, [sp, #40]
    9420:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    9424:	ldr	x0, [sp, #40]
    9428:	ldp	x29, x30, [sp], #48
    942c:	ret
    9430:	stp	x29, x30, [sp, #-64]!
    9434:	mov	x29, sp
    9438:	str	x0, [sp, #24]
    943c:	str	x1, [sp, #16]
    9440:	ldr	x0, [sp, #24]
    9444:	ldr	x1, [x0, #8]
    9448:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    944c:	add	x0, x0, #0x5f0
    9450:	cmp	x1, x0
    9454:	b.eq	9478 <PyNumber_FloorDivide@plt+0x4828>  // b.none
    9458:	ldr	x0, [sp, #24]
    945c:	ldr	x2, [x0, #8]
    9460:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9464:	add	x1, x0, #0x5f0
    9468:	mov	x0, x2
    946c:	bl	4b80 <PyType_IsSubtype@plt>
    9470:	cmp	w0, #0x0
    9474:	b.eq	94b0 <PyNumber_FloorDivide@plt+0x4860>  // b.none
    9478:	ldr	x0, [sp, #16]
    947c:	ldr	x1, [x0, #8]
    9480:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9484:	add	x0, x0, #0x5f0
    9488:	cmp	x1, x0
    948c:	b.eq	94c8 <PyNumber_FloorDivide@plt+0x4878>  // b.none
    9490:	ldr	x0, [sp, #16]
    9494:	ldr	x2, [x0, #8]
    9498:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    949c:	add	x1, x0, #0x5f0
    94a0:	mov	x0, x2
    94a4:	bl	4b80 <PyType_IsSubtype@plt>
    94a8:	cmp	w0, #0x0
    94ac:	b.ne	94c8 <PyNumber_FloorDivide@plt+0x4878>  // b.any
    94b0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    94b4:	ldr	x0, [x0, #3960]
    94b8:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    94bc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    94c0:	ldr	x0, [x0, #3960]
    94c4:	b	95a8 <PyNumber_FloorDivide@plt+0x4958>
    94c8:	ldr	x0, [sp, #24]
    94cc:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    94d0:	str	x0, [sp, #56]
    94d4:	ldr	x0, [sp, #56]
    94d8:	cmp	x0, #0x0
    94dc:	b.ne	94e8 <PyNumber_FloorDivide@plt+0x4898>  // b.any
    94e0:	mov	x0, #0x0                   	// #0
    94e4:	b	95a8 <PyNumber_FloorDivide@plt+0x4958>
    94e8:	ldr	x0, [sp, #16]
    94ec:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    94f0:	str	x0, [sp, #48]
    94f4:	ldr	x0, [sp, #48]
    94f8:	cmp	x0, #0x0
    94fc:	b.ne	951c <PyNumber_FloorDivide@plt+0x48cc>  // b.any
    9500:	ldr	x2, [sp, #56]
    9504:	mov	w1, #0x8e2                 	// #2274
    9508:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    950c:	add	x0, x0, #0xb30
    9510:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9514:	mov	x0, #0x0                   	// #0
    9518:	b	95a8 <PyNumber_FloorDivide@plt+0x4958>
    951c:	ldr	x1, [sp, #48]
    9520:	ldr	x0, [sp, #56]
    9524:	bl	49c0 <PyNumber_Remainder@plt>
    9528:	str	x0, [sp, #40]
    952c:	ldr	x2, [sp, #56]
    9530:	mov	w1, #0x8e7                 	// #2279
    9534:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9538:	add	x0, x0, #0xb30
    953c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9540:	ldr	x2, [sp, #48]
    9544:	mov	w1, #0x8e8                 	// #2280
    9548:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    954c:	add	x0, x0, #0xb30
    9550:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9554:	ldr	x0, [sp, #40]
    9558:	cmp	x0, #0x0
    955c:	b.ne	9568 <PyNumber_FloorDivide@plt+0x4918>  // b.any
    9560:	mov	x0, #0x0                   	// #0
    9564:	b	95a8 <PyNumber_FloorDivide@plt+0x4958>
    9568:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    956c:	add	x1, x0, #0x5f0
    9570:	ldr	x0, [sp, #40]
    9574:	bl	8494 <PyNumber_FloorDivide@plt+0x3844>
    9578:	str	x0, [sp, #32]
    957c:	ldr	x2, [sp, #40]
    9580:	mov	w1, #0x8ed                 	// #2285
    9584:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9588:	add	x0, x0, #0xb30
    958c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9590:	ldr	x0, [sp, #32]
    9594:	cmp	x0, #0x0
    9598:	b.ne	95a4 <PyNumber_FloorDivide@plt+0x4954>  // b.any
    959c:	mov	x0, #0x0                   	// #0
    95a0:	b	95a8 <PyNumber_FloorDivide@plt+0x4958>
    95a4:	ldr	x0, [sp, #32]
    95a8:	ldp	x29, x30, [sp], #64
    95ac:	ret
    95b0:	stp	x29, x30, [sp, #-80]!
    95b4:	mov	x29, sp
    95b8:	str	x0, [sp, #24]
    95bc:	str	x1, [sp, #16]
    95c0:	ldr	x0, [sp, #24]
    95c4:	ldr	x1, [x0, #8]
    95c8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    95cc:	add	x0, x0, #0x5f0
    95d0:	cmp	x1, x0
    95d4:	b.eq	95f8 <PyNumber_FloorDivide@plt+0x49a8>  // b.none
    95d8:	ldr	x0, [sp, #24]
    95dc:	ldr	x2, [x0, #8]
    95e0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    95e4:	add	x1, x0, #0x5f0
    95e8:	mov	x0, x2
    95ec:	bl	4b80 <PyType_IsSubtype@plt>
    95f0:	cmp	w0, #0x0
    95f4:	b.eq	9630 <PyNumber_FloorDivide@plt+0x49e0>  // b.none
    95f8:	ldr	x0, [sp, #16]
    95fc:	ldr	x1, [x0, #8]
    9600:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    9604:	add	x0, x0, #0x5f0
    9608:	cmp	x1, x0
    960c:	b.eq	9648 <PyNumber_FloorDivide@plt+0x49f8>  // b.none
    9610:	ldr	x0, [sp, #16]
    9614:	ldr	x2, [x0, #8]
    9618:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    961c:	add	x1, x0, #0x5f0
    9620:	mov	x0, x2
    9624:	bl	4b80 <PyType_IsSubtype@plt>
    9628:	cmp	w0, #0x0
    962c:	b.ne	9648 <PyNumber_FloorDivide@plt+0x49f8>  // b.any
    9630:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9634:	ldr	x0, [x0, #3960]
    9638:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    963c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9640:	ldr	x0, [x0, #3960]
    9644:	b	9774 <PyNumber_FloorDivide@plt+0x4b24>
    9648:	ldr	x0, [sp, #24]
    964c:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    9650:	str	x0, [sp, #72]
    9654:	ldr	x0, [sp, #72]
    9658:	cmp	x0, #0x0
    965c:	b.ne	9668 <PyNumber_FloorDivide@plt+0x4a18>  // b.any
    9660:	mov	x0, #0x0                   	// #0
    9664:	b	9774 <PyNumber_FloorDivide@plt+0x4b24>
    9668:	ldr	x0, [sp, #16]
    966c:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    9670:	str	x0, [sp, #64]
    9674:	ldr	x0, [sp, #64]
    9678:	cmp	x0, #0x0
    967c:	b.ne	969c <PyNumber_FloorDivide@plt+0x4a4c>  // b.any
    9680:	ldr	x2, [sp, #72]
    9684:	mov	w1, #0x906                 	// #2310
    9688:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    968c:	add	x0, x0, #0xb30
    9690:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9694:	mov	x0, #0x0                   	// #0
    9698:	b	9774 <PyNumber_FloorDivide@plt+0x4b24>
    969c:	ldr	x1, [sp, #64]
    96a0:	ldr	x0, [sp, #72]
    96a4:	bl	83a8 <PyNumber_FloorDivide@plt+0x3758>
    96a8:	str	x0, [sp, #56]
    96ac:	ldr	x2, [sp, #72]
    96b0:	mov	w1, #0x90b                 	// #2315
    96b4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    96b8:	add	x0, x0, #0xb30
    96bc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    96c0:	ldr	x2, [sp, #64]
    96c4:	mov	w1, #0x90c                 	// #2316
    96c8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    96cc:	add	x0, x0, #0xb30
    96d0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    96d4:	ldr	x0, [sp, #56]
    96d8:	cmp	x0, #0x0
    96dc:	b.ne	96e8 <PyNumber_FloorDivide@plt+0x4a98>  // b.any
    96e0:	mov	x0, #0x0                   	// #0
    96e4:	b	9774 <PyNumber_FloorDivide@plt+0x4b24>
    96e8:	ldr	x0, [sp, #56]
    96ec:	ldr	x2, [x0, #32]
    96f0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    96f4:	add	x1, x0, #0x5f0
    96f8:	mov	x0, x2
    96fc:	bl	8494 <PyNumber_FloorDivide@plt+0x3844>
    9700:	str	x0, [sp, #48]
    9704:	ldr	x0, [sp, #48]
    9708:	cmp	x0, #0x0
    970c:	b.ne	972c <PyNumber_FloorDivide@plt+0x4adc>  // b.any
    9710:	ldr	x2, [sp, #56]
    9714:	mov	w1, #0x912                 	// #2322
    9718:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    971c:	add	x0, x0, #0xb30
    9720:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9724:	mov	x0, #0x0                   	// #0
    9728:	b	9774 <PyNumber_FloorDivide@plt+0x4b24>
    972c:	ldr	x0, [sp, #56]
    9730:	ldr	x0, [x0, #24]
    9734:	ldr	x2, [sp, #48]
    9738:	mov	x1, x0
    973c:	mov	x0, #0x2                   	// #2
    9740:	bl	4c20 <PyTuple_Pack@plt>
    9744:	str	x0, [sp, #40]
    9748:	ldr	x2, [sp, #48]
    974c:	mov	w1, #0x916                 	// #2326
    9750:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9754:	add	x0, x0, #0xb30
    9758:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    975c:	ldr	x2, [sp, #56]
    9760:	mov	w1, #0x917                 	// #2327
    9764:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9768:	add	x0, x0, #0xb30
    976c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9770:	ldr	x0, [sp, #40]
    9774:	ldp	x29, x30, [sp], #80
    9778:	ret
    977c:	stp	x29, x30, [sp, #-128]!
    9780:	mov	x29, sp
    9784:	str	x0, [sp, #56]
    9788:	str	x1, [sp, #48]
    978c:	str	x2, [sp, #40]
    9790:	str	x3, [sp, #32]
    9794:	str	x4, [sp, #24]
    9798:	ldr	x0, [sp, #40]
    979c:	ldr	x0, [x0, #8]
    97a0:	ldr	x0, [x0, #168]
    97a4:	and	x0, x0, #0x1000000
    97a8:	cmp	x0, #0x0
    97ac:	b.eq	9800 <PyNumber_FloorDivide@plt+0x4bb0>  // b.none
    97b0:	ldr	x1, [sp, #32]
    97b4:	ldr	x0, [sp, #40]
    97b8:	bl	4870 <PyNumber_Multiply@plt>
    97bc:	str	x0, [sp, #96]
    97c0:	ldr	x0, [sp, #96]
    97c4:	cmp	x0, #0x0
    97c8:	b.ne	97d4 <PyNumber_FloorDivide@plt+0x4b84>  // b.any
    97cc:	mov	x0, #0x0                   	// #0
    97d0:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    97d4:	ldr	x1, [sp, #96]
    97d8:	ldr	x0, [sp, #48]
    97dc:	bl	4800 <PyNumber_Add@plt>
    97e0:	str	x0, [sp, #88]
    97e4:	ldr	x2, [sp, #96]
    97e8:	mov	w1, #0x932                 	// #2354
    97ec:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    97f0:	add	x0, x0, #0xb30
    97f4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    97f8:	ldr	x0, [sp, #88]
    97fc:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    9800:	ldr	x0, [sp, #40]
    9804:	ldr	x1, [x0, #8]
    9808:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    980c:	ldr	x0, [x0, #3944]
    9810:	cmp	x1, x0
    9814:	b.eq	9838 <PyNumber_FloorDivide@plt+0x4be8>  // b.none
    9818:	ldr	x0, [sp, #40]
    981c:	ldr	x2, [x0, #8]
    9820:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9824:	ldr	x1, [x0, #3944]
    9828:	mov	x0, x2
    982c:	bl	4b80 <PyType_IsSubtype@plt>
    9830:	cmp	w0, #0x0
    9834:	b.eq	99d4 <PyNumber_FloorDivide@plt+0x4d84>  // b.none
    9838:	ldr	x0, [sp, #40]
    983c:	bl	4a50 <PyFloat_AsDouble@plt>
    9840:	str	d0, [sp, #120]
    9844:	ldr	d1, [sp, #120]
    9848:	fmov	d0, #-1.000000000000000000e+00
    984c:	fcmp	d1, d0
    9850:	b.ne	9868 <PyNumber_FloorDivide@plt+0x4c18>  // b.any
    9854:	bl	49f0 <PyErr_Occurred@plt>
    9858:	cmp	x0, #0x0
    985c:	b.eq	9868 <PyNumber_FloorDivide@plt+0x4c18>  // b.none
    9860:	mov	x0, #0x0                   	// #0
    9864:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    9868:	add	x0, sp, #0x48
    986c:	ldr	d0, [sp, #120]
    9870:	bl	4ac0 <modf@plt>
    9874:	str	d0, [sp, #112]
    9878:	ldr	d0, [sp, #72]
    987c:	bl	47d0 <PyLong_FromDouble@plt>
    9880:	str	x0, [sp, #104]
    9884:	ldr	x0, [sp, #104]
    9888:	cmp	x0, #0x0
    988c:	b.ne	9898 <PyNumber_FloorDivide@plt+0x4c48>  // b.any
    9890:	mov	x0, #0x0                   	// #0
    9894:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    9898:	ldr	x1, [sp, #32]
    989c:	ldr	x0, [sp, #104]
    98a0:	bl	4870 <PyNumber_Multiply@plt>
    98a4:	str	x0, [sp, #96]
    98a8:	ldr	x2, [sp, #104]
    98ac:	mov	w1, #0x94e                 	// #2382
    98b0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    98b4:	add	x0, x0, #0xb30
    98b8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    98bc:	ldr	x0, [sp, #96]
    98c0:	cmp	x0, #0x0
    98c4:	b.ne	98d0 <PyNumber_FloorDivide@plt+0x4c80>  // b.any
    98c8:	mov	x0, #0x0                   	// #0
    98cc:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    98d0:	ldr	x1, [sp, #96]
    98d4:	ldr	x0, [sp, #48]
    98d8:	bl	4800 <PyNumber_Add@plt>
    98dc:	str	x0, [sp, #88]
    98e0:	ldr	x2, [sp, #96]
    98e4:	mov	w1, #0x953                 	// #2387
    98e8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    98ec:	add	x0, x0, #0xb30
    98f0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    98f4:	ldr	x0, [sp, #88]
    98f8:	cmp	x0, #0x0
    98fc:	b.ne	9908 <PyNumber_FloorDivide@plt+0x4cb8>  // b.any
    9900:	mov	x0, #0x0                   	// #0
    9904:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    9908:	ldr	d0, [sp, #112]
    990c:	fcmp	d0, #0.0
    9910:	b.ne	991c <PyNumber_FloorDivide@plt+0x4ccc>  // b.any
    9914:	ldr	x0, [sp, #88]
    9918:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    991c:	ldr	x0, [sp, #32]
    9920:	bl	4ad0 <PyLong_AsDouble@plt>
    9924:	str	d0, [sp, #120]
    9928:	ldr	d1, [sp, #120]
    992c:	ldr	d0, [sp, #112]
    9930:	fmul	d0, d1, d0
    9934:	str	d0, [sp, #120]
    9938:	add	x0, sp, #0x48
    993c:	ldr	d0, [sp, #120]
    9940:	bl	4ac0 <modf@plt>
    9944:	str	d0, [sp, #112]
    9948:	ldr	d0, [sp, #72]
    994c:	bl	47d0 <PyLong_FromDouble@plt>
    9950:	str	x0, [sp, #104]
    9954:	ldr	x0, [sp, #104]
    9958:	cmp	x0, #0x0
    995c:	b.ne	997c <PyNumber_FloorDivide@plt+0x4d2c>  // b.any
    9960:	ldr	x2, [sp, #88]
    9964:	mov	w1, #0x964                 	// #2404
    9968:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    996c:	add	x0, x0, #0xb30
    9970:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9974:	mov	x0, #0x0                   	// #0
    9978:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    997c:	ldr	x1, [sp, #104]
    9980:	ldr	x0, [sp, #88]
    9984:	bl	4800 <PyNumber_Add@plt>
    9988:	str	x0, [sp, #80]
    998c:	ldr	x2, [sp, #88]
    9990:	mov	w1, #0x969                 	// #2409
    9994:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9998:	add	x0, x0, #0xb30
    999c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    99a0:	ldr	x2, [sp, #104]
    99a4:	mov	w1, #0x96a                 	// #2410
    99a8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    99ac:	add	x0, x0, #0xb30
    99b0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    99b4:	ldr	x0, [sp, #24]
    99b8:	ldr	d1, [x0]
    99bc:	ldr	d0, [sp, #112]
    99c0:	fadd	d0, d1, d0
    99c4:	ldr	x0, [sp, #24]
    99c8:	str	d0, [x0]
    99cc:	ldr	x0, [sp, #80]
    99d0:	b	9a08 <PyNumber_FloorDivide@plt+0x4db8>
    99d4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    99d8:	ldr	x0, [x0, #3976]
    99dc:	ldr	x4, [x0]
    99e0:	ldr	x0, [sp, #40]
    99e4:	ldr	x0, [x0, #8]
    99e8:	ldr	x0, [x0, #24]
    99ec:	mov	x3, x0
    99f0:	ldr	x2, [sp, #56]
    99f4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    99f8:	add	x1, x0, #0xd0
    99fc:	mov	x0, x4
    9a00:	bl	4bb0 <PyErr_Format@plt>
    9a04:	mov	x0, #0x0                   	// #0
    9a08:	ldp	x29, x30, [sp], #128
    9a0c:	ret
    9a10:	sub	sp, sp, #0xc0
    9a14:	stp	x29, x30, [sp, #32]
    9a18:	add	x29, sp, #0x20
    9a1c:	str	x0, [sp, #72]
    9a20:	str	x1, [sp, #64]
    9a24:	str	x2, [sp, #56]
    9a28:	str	xzr, [sp, #184]
    9a2c:	str	xzr, [sp, #136]
    9a30:	str	xzr, [sp, #128]
    9a34:	str	xzr, [sp, #120]
    9a38:	str	xzr, [sp, #112]
    9a3c:	str	xzr, [sp, #104]
    9a40:	str	xzr, [sp, #96]
    9a44:	str	xzr, [sp, #88]
    9a48:	str	xzr, [sp, #176]
    9a4c:	str	xzr, [sp, #160]
    9a50:	str	xzr, [sp, #80]
    9a54:	add	x4, sp, #0x70
    9a58:	add	x3, sp, #0x78
    9a5c:	add	x2, sp, #0x80
    9a60:	add	x1, sp, #0x88
    9a64:	add	x0, sp, #0x58
    9a68:	str	x0, [sp, #16]
    9a6c:	add	x0, sp, #0x60
    9a70:	str	x0, [sp, #8]
    9a74:	add	x0, sp, #0x68
    9a78:	str	x0, [sp]
    9a7c:	mov	x7, x4
    9a80:	mov	x6, x3
    9a84:	mov	x5, x2
    9a88:	mov	x4, x1
    9a8c:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    9a90:	add	x3, x0, #0xe20
    9a94:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9a98:	add	x2, x0, #0x100
    9a9c:	ldr	x1, [sp, #56]
    9aa0:	ldr	x0, [sp, #64]
    9aa4:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    9aa8:	cmp	w0, #0x0
    9aac:	b.eq	9f3c <PyNumber_FloorDivide@plt+0x52ec>  // b.none
    9ab0:	mov	x0, #0x0                   	// #0
    9ab4:	bl	4940 <PyLong_FromLong@plt>
    9ab8:	str	x0, [sp, #176]
    9abc:	ldr	x0, [sp, #176]
    9ac0:	cmp	x0, #0x0
    9ac4:	b.eq	9f44 <PyNumber_FloorDivide@plt+0x52f4>  // b.none
    9ac8:	ldr	x0, [sp, #120]
    9acc:	cmp	x0, #0x0
    9ad0:	b.eq	9b30 <PyNumber_FloorDivide@plt+0x4ee0>  // b.none
    9ad4:	ldr	x1, [sp, #120]
    9ad8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9adc:	ldr	x0, [x0, #4048]
    9ae0:	ldr	x0, [x0]
    9ae4:	add	x2, sp, #0x50
    9ae8:	mov	x4, x2
    9aec:	mov	x3, x0
    9af0:	mov	x2, x1
    9af4:	ldr	x1, [sp, #176]
    9af8:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9afc:	add	x0, x0, #0x118
    9b00:	bl	977c <PyNumber_FloorDivide@plt+0x4b2c>
    9b04:	str	x0, [sp, #160]
    9b08:	ldr	x2, [sp, #176]
    9b0c:	mov	w1, #0x99e                 	// #2462
    9b10:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9b14:	add	x0, x0, #0xb30
    9b18:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9b1c:	ldr	x0, [sp, #160]
    9b20:	str	x0, [sp, #176]
    9b24:	ldr	x0, [sp, #176]
    9b28:	cmp	x0, #0x0
    9b2c:	b.eq	9f4c <PyNumber_FloorDivide@plt+0x52fc>  // b.none
    9b30:	ldr	x0, [sp, #112]
    9b34:	cmp	x0, #0x0
    9b38:	b.eq	9b98 <PyNumber_FloorDivide@plt+0x4f48>  // b.none
    9b3c:	ldr	x1, [sp, #112]
    9b40:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    9b44:	add	x0, x0, #0x40
    9b48:	ldr	x0, [x0]
    9b4c:	add	x2, sp, #0x50
    9b50:	mov	x4, x2
    9b54:	mov	x3, x0
    9b58:	mov	x2, x1
    9b5c:	ldr	x1, [sp, #176]
    9b60:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9b64:	add	x0, x0, #0x128
    9b68:	bl	977c <PyNumber_FloorDivide@plt+0x4b2c>
    9b6c:	str	x0, [sp, #160]
    9b70:	ldr	x2, [sp, #176]
    9b74:	mov	w1, #0x9a2                 	// #2466
    9b78:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9b7c:	add	x0, x0, #0xb30
    9b80:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9b84:	ldr	x0, [sp, #160]
    9b88:	str	x0, [sp, #176]
    9b8c:	ldr	x0, [sp, #176]
    9b90:	cmp	x0, #0x0
    9b94:	b.eq	9f54 <PyNumber_FloorDivide@plt+0x5304>  // b.none
    9b98:	ldr	x0, [sp, #128]
    9b9c:	cmp	x0, #0x0
    9ba0:	b.eq	9c00 <PyNumber_FloorDivide@plt+0x4fb0>  // b.none
    9ba4:	ldr	x1, [sp, #128]
    9ba8:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    9bac:	add	x0, x0, #0x48
    9bb0:	ldr	x0, [x0]
    9bb4:	add	x2, sp, #0x50
    9bb8:	mov	x4, x2
    9bbc:	mov	x3, x0
    9bc0:	mov	x2, x1
    9bc4:	ldr	x1, [sp, #176]
    9bc8:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9bcc:	add	x0, x0, #0x138
    9bd0:	bl	977c <PyNumber_FloorDivide@plt+0x4b2c>
    9bd4:	str	x0, [sp, #160]
    9bd8:	ldr	x2, [sp, #176]
    9bdc:	mov	w1, #0x9a6                 	// #2470
    9be0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9be4:	add	x0, x0, #0xb30
    9be8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9bec:	ldr	x0, [sp, #160]
    9bf0:	str	x0, [sp, #176]
    9bf4:	ldr	x0, [sp, #176]
    9bf8:	cmp	x0, #0x0
    9bfc:	b.eq	9f5c <PyNumber_FloorDivide@plt+0x530c>  // b.none
    9c00:	ldr	x0, [sp, #104]
    9c04:	cmp	x0, #0x0
    9c08:	b.eq	9c68 <PyNumber_FloorDivide@plt+0x5018>  // b.none
    9c0c:	ldr	x1, [sp, #104]
    9c10:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    9c14:	add	x0, x0, #0x50
    9c18:	ldr	x0, [x0]
    9c1c:	add	x2, sp, #0x50
    9c20:	mov	x4, x2
    9c24:	mov	x3, x0
    9c28:	mov	x2, x1
    9c2c:	ldr	x1, [sp, #176]
    9c30:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9c34:	add	x0, x0, #0x140
    9c38:	bl	977c <PyNumber_FloorDivide@plt+0x4b2c>
    9c3c:	str	x0, [sp, #160]
    9c40:	ldr	x2, [sp, #176]
    9c44:	mov	w1, #0x9aa                 	// #2474
    9c48:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9c4c:	add	x0, x0, #0xb30
    9c50:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9c54:	ldr	x0, [sp, #160]
    9c58:	str	x0, [sp, #176]
    9c5c:	ldr	x0, [sp, #176]
    9c60:	cmp	x0, #0x0
    9c64:	b.eq	9f64 <PyNumber_FloorDivide@plt+0x5314>  // b.none
    9c68:	ldr	x0, [sp, #96]
    9c6c:	cmp	x0, #0x0
    9c70:	b.eq	9cd0 <PyNumber_FloorDivide@plt+0x5080>  // b.none
    9c74:	ldr	x1, [sp, #96]
    9c78:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    9c7c:	add	x0, x0, #0x58
    9c80:	ldr	x0, [x0]
    9c84:	add	x2, sp, #0x50
    9c88:	mov	x4, x2
    9c8c:	mov	x3, x0
    9c90:	mov	x2, x1
    9c94:	ldr	x1, [sp, #176]
    9c98:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9c9c:	add	x0, x0, #0x148
    9ca0:	bl	977c <PyNumber_FloorDivide@plt+0x4b2c>
    9ca4:	str	x0, [sp, #160]
    9ca8:	ldr	x2, [sp, #176]
    9cac:	mov	w1, #0x9ae                 	// #2478
    9cb0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9cb4:	add	x0, x0, #0xb30
    9cb8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9cbc:	ldr	x0, [sp, #160]
    9cc0:	str	x0, [sp, #176]
    9cc4:	ldr	x0, [sp, #176]
    9cc8:	cmp	x0, #0x0
    9ccc:	b.eq	9f6c <PyNumber_FloorDivide@plt+0x531c>  // b.none
    9cd0:	ldr	x0, [sp, #136]
    9cd4:	cmp	x0, #0x0
    9cd8:	b.eq	9d38 <PyNumber_FloorDivide@plt+0x50e8>  // b.none
    9cdc:	ldr	x1, [sp, #136]
    9ce0:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    9ce4:	add	x0, x0, #0x60
    9ce8:	ldr	x0, [x0]
    9cec:	add	x2, sp, #0x50
    9cf0:	mov	x4, x2
    9cf4:	mov	x3, x0
    9cf8:	mov	x2, x1
    9cfc:	ldr	x1, [sp, #176]
    9d00:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9d04:	add	x0, x0, #0x150
    9d08:	bl	977c <PyNumber_FloorDivide@plt+0x4b2c>
    9d0c:	str	x0, [sp, #160]
    9d10:	ldr	x2, [sp, #176]
    9d14:	mov	w1, #0x9b2                 	// #2482
    9d18:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9d1c:	add	x0, x0, #0xb30
    9d20:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9d24:	ldr	x0, [sp, #160]
    9d28:	str	x0, [sp, #176]
    9d2c:	ldr	x0, [sp, #176]
    9d30:	cmp	x0, #0x0
    9d34:	b.eq	9f74 <PyNumber_FloorDivide@plt+0x5324>  // b.none
    9d38:	ldr	x0, [sp, #88]
    9d3c:	cmp	x0, #0x0
    9d40:	b.eq	9da0 <PyNumber_FloorDivide@plt+0x5150>  // b.none
    9d44:	ldr	x1, [sp, #88]
    9d48:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    9d4c:	add	x0, x0, #0x68
    9d50:	ldr	x0, [x0]
    9d54:	add	x2, sp, #0x50
    9d58:	mov	x4, x2
    9d5c:	mov	x3, x0
    9d60:	mov	x2, x1
    9d64:	ldr	x1, [sp, #176]
    9d68:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    9d6c:	add	x0, x0, #0x158
    9d70:	bl	977c <PyNumber_FloorDivide@plt+0x4b2c>
    9d74:	str	x0, [sp, #160]
    9d78:	ldr	x2, [sp, #176]
    9d7c:	mov	w1, #0x9b6                 	// #2486
    9d80:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9d84:	add	x0, x0, #0xb30
    9d88:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9d8c:	ldr	x0, [sp, #160]
    9d90:	str	x0, [sp, #176]
    9d94:	ldr	x0, [sp, #176]
    9d98:	cmp	x0, #0x0
    9d9c:	b.eq	9f7c <PyNumber_FloorDivide@plt+0x532c>  // b.none
    9da0:	ldr	d0, [sp, #80]
    9da4:	fcmp	d0, #0.0
    9da8:	b.eq	9f14 <PyNumber_FloorDivide@plt+0x52c4>  // b.none
    9dac:	ldr	d0, [sp, #80]
    9db0:	bl	4ae0 <round@plt>
    9db4:	str	d0, [sp, #168]
    9db8:	ldr	d0, [sp, #80]
    9dbc:	bl	4ae0 <round@plt>
    9dc0:	str	d0, [sp, #168]
    9dc4:	ldr	d0, [sp, #80]
    9dc8:	ldr	d1, [sp, #168]
    9dcc:	fsub	d0, d1, d0
    9dd0:	fabs	d1, d0
    9dd4:	fmov	d0, #5.000000000000000000e-01
    9dd8:	fcmp	d1, d0
    9ddc:	b.ne	9e94 <PyNumber_FloorDivide@plt+0x5244>  // b.any
    9de0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    9de4:	ldr	x0, [x0, #4048]
    9de8:	ldr	x0, [x0]
    9dec:	mov	x1, x0
    9df0:	ldr	x0, [sp, #176]
    9df4:	bl	4970 <PyNumber_And@plt>
    9df8:	str	x0, [sp, #152]
    9dfc:	ldr	x0, [sp, #152]
    9e00:	cmp	x0, #0x0
    9e04:	b.ne	9e20 <PyNumber_FloorDivide@plt+0x51d0>  // b.any
    9e08:	ldr	x2, [sp, #176]
    9e0c:	mov	w1, #0x9c7                 	// #2503
    9e10:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9e14:	add	x0, x0, #0xb30
    9e18:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9e1c:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9e20:	ldr	x0, [sp, #152]
    9e24:	bl	4a60 <PyObject_IsTrue@plt>
    9e28:	str	w0, [sp, #148]
    9e2c:	ldr	x2, [sp, #152]
    9e30:	mov	w1, #0x9cb                 	// #2507
    9e34:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9e38:	add	x0, x0, #0xb30
    9e3c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9e40:	ldr	w0, [sp, #148]
    9e44:	cmn	w0, #0x1
    9e48:	b.ne	9e64 <PyNumber_FloorDivide@plt+0x5214>  // b.any
    9e4c:	ldr	x2, [sp, #176]
    9e50:	mov	w1, #0x9cd                 	// #2509
    9e54:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9e58:	add	x0, x0, #0xb30
    9e5c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9e60:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9e64:	ldr	w0, [sp, #148]
    9e68:	scvtf	d1, w0
    9e6c:	ldr	d0, [sp, #80]
    9e70:	fadd	d1, d1, d0
    9e74:	fmov	d0, #5.000000000000000000e-01
    9e78:	fmul	d0, d1, d0
    9e7c:	bl	4ae0 <round@plt>
    9e80:	fadd	d1, d0, d0
    9e84:	ldr	w0, [sp, #148]
    9e88:	scvtf	d0, w0
    9e8c:	fsub	d0, d1, d0
    9e90:	str	d0, [sp, #168]
    9e94:	ldr	d0, [sp, #168]
    9e98:	fcvtzs	x0, d0
    9e9c:	bl	4940 <PyLong_FromLong@plt>
    9ea0:	str	x0, [sp, #152]
    9ea4:	ldr	x0, [sp, #152]
    9ea8:	cmp	x0, #0x0
    9eac:	b.ne	9ec8 <PyNumber_FloorDivide@plt+0x5278>  // b.any
    9eb0:	ldr	x2, [sp, #176]
    9eb4:	mov	w1, #0x9d6                 	// #2518
    9eb8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9ebc:	add	x0, x0, #0xb30
    9ec0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9ec4:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9ec8:	ldr	x1, [sp, #152]
    9ecc:	ldr	x0, [sp, #176]
    9ed0:	bl	4800 <PyNumber_Add@plt>
    9ed4:	str	x0, [sp, #160]
    9ed8:	ldr	x2, [sp, #152]
    9edc:	mov	w1, #0x9da                 	// #2522
    9ee0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9ee4:	add	x0, x0, #0xb30
    9ee8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9eec:	ldr	x2, [sp, #176]
    9ef0:	mov	w1, #0x9db                 	// #2523
    9ef4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9ef8:	add	x0, x0, #0xb30
    9efc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9f00:	ldr	x0, [sp, #160]
    9f04:	str	x0, [sp, #176]
    9f08:	ldr	x0, [sp, #176]
    9f0c:	cmp	x0, #0x0
    9f10:	b.eq	9f84 <PyNumber_FloorDivide@plt+0x5334>  // b.none
    9f14:	ldr	x1, [sp, #72]
    9f18:	ldr	x0, [sp, #176]
    9f1c:	bl	8494 <PyNumber_FloorDivide@plt+0x3844>
    9f20:	str	x0, [sp, #184]
    9f24:	ldr	x2, [sp, #176]
    9f28:	mov	w1, #0x9df                 	// #2527
    9f2c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9f30:	add	x0, x0, #0xb30
    9f34:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    9f38:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f3c:	nop
    9f40:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f44:	nop
    9f48:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f4c:	nop
    9f50:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f54:	nop
    9f58:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f5c:	nop
    9f60:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f64:	nop
    9f68:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f6c:	nop
    9f70:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f74:	nop
    9f78:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f7c:	nop
    9f80:	b	9f88 <PyNumber_FloorDivide@plt+0x5338>
    9f84:	nop
    9f88:	ldr	x0, [sp, #184]
    9f8c:	ldp	x29, x30, [sp, #32]
    9f90:	add	sp, sp, #0xc0
    9f94:	ret
    9f98:	sub	sp, sp, #0x10
    9f9c:	str	x0, [sp, #8]
    9fa0:	ldr	x0, [sp, #8]
    9fa4:	ldr	w0, [x0, #24]
    9fa8:	cmp	w0, #0x0
    9fac:	b.ne	9fd0 <PyNumber_FloorDivide@plt+0x5380>  // b.any
    9fb0:	ldr	x0, [sp, #8]
    9fb4:	ldr	w0, [x0, #28]
    9fb8:	cmp	w0, #0x0
    9fbc:	b.ne	9fd0 <PyNumber_FloorDivide@plt+0x5380>  // b.any
    9fc0:	ldr	x0, [sp, #8]
    9fc4:	ldr	w0, [x0, #32]
    9fc8:	cmp	w0, #0x0
    9fcc:	b.eq	9fd8 <PyNumber_FloorDivide@plt+0x5388>  // b.none
    9fd0:	mov	w0, #0x1                   	// #1
    9fd4:	b	9fdc <PyNumber_FloorDivide@plt+0x538c>
    9fd8:	mov	w0, #0x0                   	// #0
    9fdc:	add	sp, sp, #0x10
    9fe0:	ret
    9fe4:	stp	x29, x30, [sp, #-96]!
    9fe8:	mov	x29, sp
    9fec:	str	x0, [sp, #24]
    9ff0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    9ff4:	add	x0, x0, #0xf78
    9ff8:	bl	4b20 <PyUnicode_FromString@plt>
    9ffc:	str	x0, [sp, #88]
    a000:	ldr	x0, [sp, #88]
    a004:	cmp	x0, #0x0
    a008:	b.ne	a014 <PyNumber_FloorDivide@plt+0x53c4>  // b.any
    a00c:	mov	x0, #0x0                   	// #0
    a010:	b	a1e8 <PyNumber_FloorDivide@plt+0x5598>
    a014:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a018:	add	x0, x0, #0xf78
    a01c:	str	x0, [sp, #80]
    a020:	ldr	x0, [sp, #24]
    a024:	ldr	w0, [x0, #24]
    a028:	cmp	w0, #0x0
    a02c:	b.eq	a088 <PyNumber_FloorDivide@plt+0x5438>  // b.none
    a030:	ldr	x0, [sp, #88]
    a034:	str	x0, [sp, #72]
    a038:	ldr	x0, [sp, #24]
    a03c:	ldr	w0, [x0, #24]
    a040:	mov	w1, w0
    a044:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a048:	add	x0, x0, #0x160
    a04c:	bl	4740 <PyUnicode_FromFormat@plt>
    a050:	str	x0, [sp, #88]
    a054:	ldr	x2, [sp, #72]
    a058:	mov	w1, #0x9fa                 	// #2554
    a05c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a060:	add	x0, x0, #0xb30
    a064:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a068:	ldr	x0, [sp, #88]
    a06c:	cmp	x0, #0x0
    a070:	b.ne	a07c <PyNumber_FloorDivide@plt+0x542c>  // b.any
    a074:	mov	x0, #0x0                   	// #0
    a078:	b	a1e8 <PyNumber_FloorDivide@plt+0x5598>
    a07c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a080:	add	x0, x0, #0x168
    a084:	str	x0, [sp, #80]
    a088:	ldr	x0, [sp, #24]
    a08c:	ldr	w0, [x0, #28]
    a090:	cmp	w0, #0x0
    a094:	b.eq	a0f8 <PyNumber_FloorDivide@plt+0x54a8>  // b.none
    a098:	ldr	x0, [sp, #88]
    a09c:	str	x0, [sp, #64]
    a0a0:	ldr	x0, [sp, #24]
    a0a4:	ldr	w0, [x0, #28]
    a0a8:	mov	w3, w0
    a0ac:	ldr	x2, [sp, #80]
    a0b0:	ldr	x1, [sp, #88]
    a0b4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a0b8:	add	x0, x0, #0x170
    a0bc:	bl	4740 <PyUnicode_FromFormat@plt>
    a0c0:	str	x0, [sp, #88]
    a0c4:	ldr	x2, [sp, #64]
    a0c8:	mov	w1, #0xa02                 	// #2562
    a0cc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a0d0:	add	x0, x0, #0xb30
    a0d4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a0d8:	ldr	x0, [sp, #88]
    a0dc:	cmp	x0, #0x0
    a0e0:	b.ne	a0ec <PyNumber_FloorDivide@plt+0x549c>  // b.any
    a0e4:	mov	x0, #0x0                   	// #0
    a0e8:	b	a1e8 <PyNumber_FloorDivide@plt+0x5598>
    a0ec:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a0f0:	add	x0, x0, #0x168
    a0f4:	str	x0, [sp, #80]
    a0f8:	ldr	x0, [sp, #24]
    a0fc:	ldr	w0, [x0, #32]
    a100:	cmp	w0, #0x0
    a104:	b.eq	a15c <PyNumber_FloorDivide@plt+0x550c>  // b.none
    a108:	ldr	x0, [sp, #88]
    a10c:	str	x0, [sp, #56]
    a110:	ldr	x0, [sp, #24]
    a114:	ldr	w0, [x0, #32]
    a118:	mov	w3, w0
    a11c:	ldr	x2, [sp, #80]
    a120:	ldr	x1, [sp, #88]
    a124:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a128:	add	x0, x0, #0x180
    a12c:	bl	4740 <PyUnicode_FromFormat@plt>
    a130:	str	x0, [sp, #88]
    a134:	ldr	x2, [sp, #56]
    a138:	mov	w1, #0xa0b                 	// #2571
    a13c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a140:	add	x0, x0, #0xb30
    a144:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a148:	ldr	x0, [sp, #88]
    a14c:	cmp	x0, #0x0
    a150:	b.ne	a15c <PyNumber_FloorDivide@plt+0x550c>  // b.any
    a154:	mov	x0, #0x0                   	// #0
    a158:	b	a1e8 <PyNumber_FloorDivide@plt+0x5598>
    a15c:	ldr	x0, [sp, #88]
    a160:	ldr	x0, [x0, #16]
    a164:	cmp	x0, #0x0
    a168:	b.ne	a1ac <PyNumber_FloorDivide@plt+0x555c>  // b.any
    a16c:	ldr	x0, [sp, #88]
    a170:	str	x0, [sp, #48]
    a174:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a178:	add	x0, x0, #0x198
    a17c:	bl	4b20 <PyUnicode_FromString@plt>
    a180:	str	x0, [sp, #88]
    a184:	ldr	x2, [sp, #48]
    a188:	mov	w1, #0xa13                 	// #2579
    a18c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a190:	add	x0, x0, #0xb30
    a194:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a198:	ldr	x0, [sp, #88]
    a19c:	cmp	x0, #0x0
    a1a0:	b.ne	a1ac <PyNumber_FloorDivide@plt+0x555c>  // b.any
    a1a4:	mov	x0, #0x0                   	// #0
    a1a8:	b	a1e8 <PyNumber_FloorDivide@plt+0x5598>
    a1ac:	ldr	x0, [sp, #24]
    a1b0:	ldr	x0, [x0, #8]
    a1b4:	ldr	x0, [x0, #24]
    a1b8:	ldr	x2, [sp, #88]
    a1bc:	mov	x1, x0
    a1c0:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a1c4:	add	x0, x0, #0x1a0
    a1c8:	bl	4740 <PyUnicode_FromFormat@plt>
    a1cc:	str	x0, [sp, #40]
    a1d0:	ldr	x2, [sp, #88]
    a1d4:	mov	w1, #0xa1b                 	// #2587
    a1d8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a1dc:	add	x0, x0, #0xb30
    a1e0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a1e4:	ldr	x0, [sp, #40]
    a1e8:	ldp	x29, x30, [sp], #96
    a1ec:	ret
    a1f0:	stp	x29, x30, [sp, #-64]!
    a1f4:	mov	x29, sp
    a1f8:	str	x0, [sp, #24]
    a1fc:	ldr	x0, [sp, #24]
    a200:	ldr	w0, [x0, #32]
    a204:	str	w0, [sp, #60]
    a208:	ldr	x0, [sp, #24]
    a20c:	ldr	w0, [x0, #28]
    a210:	str	w0, [sp, #48]
    a214:	ldr	w0, [sp, #48]
    a218:	add	x1, sp, #0x30
    a21c:	mov	x2, x1
    a220:	mov	w1, #0x3c                  	// #60
    a224:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    a228:	str	w0, [sp, #44]
    a22c:	ldr	w0, [sp, #44]
    a230:	add	x1, sp, #0x2c
    a234:	mov	x2, x1
    a238:	mov	w1, #0x3c                  	// #60
    a23c:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    a240:	str	w0, [sp, #56]
    a244:	ldr	x0, [sp, #24]
    a248:	ldr	w0, [x0, #24]
    a24c:	str	w0, [sp, #52]
    a250:	ldr	w0, [sp, #52]
    a254:	cmp	w0, #0x0
    a258:	b.eq	a31c <PyNumber_FloorDivide@plt+0x56cc>  // b.none
    a25c:	ldr	w0, [sp, #60]
    a260:	cmp	w0, #0x0
    a264:	b.eq	a2c4 <PyNumber_FloorDivide@plt+0x5674>  // b.none
    a268:	ldr	w0, [sp, #52]
    a26c:	cmp	w0, #0x1
    a270:	b.eq	a280 <PyNumber_FloorDivide@plt+0x5630>  // b.none
    a274:	ldr	w0, [sp, #52]
    a278:	cmn	w0, #0x1
    a27c:	b.ne	a28c <PyNumber_FloorDivide@plt+0x563c>  // b.any
    a280:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a284:	add	x0, x0, #0xf78
    a288:	b	a294 <PyNumber_FloorDivide@plt+0x5644>
    a28c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a290:	add	x0, x0, #0x1a8
    a294:	ldr	w1, [sp, #44]
    a298:	ldr	w2, [sp, #48]
    a29c:	ldr	w6, [sp, #60]
    a2a0:	mov	w5, w2
    a2a4:	mov	w4, w1
    a2a8:	ldr	w3, [sp, #56]
    a2ac:	mov	x2, x0
    a2b0:	ldr	w1, [sp, #52]
    a2b4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a2b8:	add	x0, x0, #0x1b0
    a2bc:	bl	4740 <PyUnicode_FromFormat@plt>
    a2c0:	b	a370 <PyNumber_FloorDivide@plt+0x5720>
    a2c4:	ldr	w0, [sp, #52]
    a2c8:	cmp	w0, #0x1
    a2cc:	b.eq	a2dc <PyNumber_FloorDivide@plt+0x568c>  // b.none
    a2d0:	ldr	w0, [sp, #52]
    a2d4:	cmn	w0, #0x1
    a2d8:	b.ne	a2e8 <PyNumber_FloorDivide@plt+0x5698>  // b.any
    a2dc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a2e0:	add	x0, x0, #0xf78
    a2e4:	b	a2f0 <PyNumber_FloorDivide@plt+0x56a0>
    a2e8:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a2ec:	add	x0, x0, #0x1a8
    a2f0:	ldr	w1, [sp, #44]
    a2f4:	ldr	w2, [sp, #48]
    a2f8:	mov	w5, w2
    a2fc:	mov	w4, w1
    a300:	ldr	w3, [sp, #56]
    a304:	mov	x2, x0
    a308:	ldr	w1, [sp, #52]
    a30c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a310:	add	x0, x0, #0x1d0
    a314:	bl	4740 <PyUnicode_FromFormat@plt>
    a318:	b	a370 <PyNumber_FloorDivide@plt+0x5720>
    a31c:	ldr	w0, [sp, #60]
    a320:	cmp	w0, #0x0
    a324:	b.eq	a350 <PyNumber_FloorDivide@plt+0x5700>  // b.none
    a328:	ldr	w0, [sp, #44]
    a32c:	ldr	w1, [sp, #48]
    a330:	ldr	w4, [sp, #60]
    a334:	mov	w3, w1
    a338:	mov	w2, w0
    a33c:	ldr	w1, [sp, #56]
    a340:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a344:	add	x0, x0, #0x1e8
    a348:	bl	4740 <PyUnicode_FromFormat@plt>
    a34c:	b	a370 <PyNumber_FloorDivide@plt+0x5720>
    a350:	ldr	w0, [sp, #44]
    a354:	ldr	w1, [sp, #48]
    a358:	mov	w3, w1
    a35c:	mov	w2, w0
    a360:	ldr	w1, [sp, #56]
    a364:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a368:	add	x0, x0, #0x200
    a36c:	bl	4740 <PyUnicode_FromFormat@plt>
    a370:	ldp	x29, x30, [sp], #64
    a374:	ret
    a378:	stp	x29, x30, [sp, #-32]!
    a37c:	mov	x29, sp
    a380:	str	x0, [sp, #24]
    a384:	ldr	x0, [sp, #24]
    a388:	ldr	w1, [x0, #24]
    a38c:	ldr	x0, [sp, #24]
    a390:	ldr	w2, [x0, #28]
    a394:	ldr	x0, [sp, #24]
    a398:	ldr	w0, [x0, #32]
    a39c:	mov	w3, w0
    a3a0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a3a4:	add	x0, x0, #0xcf0
    a3a8:	bl	49e0 <Py_BuildValue@plt>
    a3ac:	ldp	x29, x30, [sp], #32
    a3b0:	ret
    a3b4:	stp	x29, x30, [sp, #-48]!
    a3b8:	mov	x29, sp
    a3bc:	str	x0, [sp, #24]
    a3c0:	str	x1, [sp, #16]
    a3c4:	ldr	x0, [sp, #24]
    a3c8:	bl	8200 <PyNumber_FloorDivide@plt+0x35b0>
    a3cc:	str	x0, [sp, #40]
    a3d0:	ldr	x0, [sp, #40]
    a3d4:	cmp	x0, #0x0
    a3d8:	b.ne	a3e4 <PyNumber_FloorDivide@plt+0x5794>  // b.any
    a3dc:	mov	x0, #0x0                   	// #0
    a3e0:	b	a418 <PyNumber_FloorDivide@plt+0x57c8>
    a3e4:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    a3e8:	add	x0, x0, #0x48
    a3ec:	ldr	x0, [x0]
    a3f0:	mov	x1, x0
    a3f4:	ldr	x0, [sp, #40]
    a3f8:	bl	4c30 <PyNumber_TrueDivide@plt>
    a3fc:	str	x0, [sp, #32]
    a400:	ldr	x2, [sp, #40]
    a404:	mov	w1, #0xa53                 	// #2643
    a408:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a40c:	add	x0, x0, #0xb30
    a410:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a414:	ldr	x0, [sp, #32]
    a418:	ldp	x29, x30, [sp], #48
    a41c:	ret
    a420:	stp	x29, x30, [sp, #-48]!
    a424:	mov	x29, sp
    a428:	str	x19, [sp, #16]
    a42c:	str	x0, [sp, #40]
    a430:	str	x1, [sp, #32]
    a434:	ldr	x0, [sp, #40]
    a438:	ldr	x19, [x0, #8]
    a43c:	ldr	x0, [sp, #40]
    a440:	bl	a378 <PyNumber_FloorDivide@plt+0x5728>
    a444:	mov	x2, x0
    a448:	mov	x1, x19
    a44c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a450:	add	x0, x0, #0x210
    a454:	bl	49e0 <Py_BuildValue@plt>
    a458:	ldr	x19, [sp, #16]
    a45c:	ldp	x29, x30, [sp], #48
    a460:	ret
    a464:	stp	x29, x30, [sp, #-32]!
    a468:	mov	x29, sp
    a46c:	str	x0, [sp, #24]
    a470:	str	x1, [sp, #16]
    a474:	ldr	x0, [sp, #24]
    a478:	ldrb	w0, [x0, #25]
    a47c:	lsl	w0, w0, #8
    a480:	ldr	x1, [sp, #24]
    a484:	ldrb	w1, [x1, #26]
    a488:	orr	w0, w0, w1
    a48c:	sxtw	x0, w0
    a490:	bl	4940 <PyLong_FromLong@plt>
    a494:	ldp	x29, x30, [sp], #32
    a498:	ret
    a49c:	stp	x29, x30, [sp, #-32]!
    a4a0:	mov	x29, sp
    a4a4:	str	x0, [sp, #24]
    a4a8:	str	x1, [sp, #16]
    a4ac:	ldr	x0, [sp, #24]
    a4b0:	ldrb	w0, [x0, #27]
    a4b4:	and	x0, x0, #0xff
    a4b8:	bl	4940 <PyLong_FromLong@plt>
    a4bc:	ldp	x29, x30, [sp], #32
    a4c0:	ret
    a4c4:	stp	x29, x30, [sp, #-32]!
    a4c8:	mov	x29, sp
    a4cc:	str	x0, [sp, #24]
    a4d0:	str	x1, [sp, #16]
    a4d4:	ldr	x0, [sp, #24]
    a4d8:	ldrb	w0, [x0, #28]
    a4dc:	and	x0, x0, #0xff
    a4e0:	bl	4940 <PyLong_FromLong@plt>
    a4e4:	ldp	x29, x30, [sp], #32
    a4e8:	ret
    a4ec:	stp	x29, x30, [sp, #-48]!
    a4f0:	mov	x29, sp
    a4f4:	str	x0, [sp, #24]
    a4f8:	str	x1, [sp, #16]
    a4fc:	ldr	x0, [sp, #24]
    a500:	ldr	x2, [x0, #304]
    a504:	mov	x1, #0x0                   	// #0
    a508:	ldr	x0, [sp, #24]
    a50c:	blr	x2
    a510:	str	x0, [sp, #40]
    a514:	ldr	x0, [sp, #40]
    a518:	cmp	x0, #0x0
    a51c:	b.eq	a54c <PyNumber_FloorDivide@plt+0x58fc>  // b.none
    a520:	ldr	x0, [sp, #16]
    a524:	add	x0, x0, #0x20
    a528:	str	x0, [sp, #32]
    a52c:	ldr	x0, [sp, #40]
    a530:	add	x0, x0, #0x19
    a534:	ldr	x1, [sp, #32]
    a538:	ldr	w1, [x1]
    a53c:	str	w1, [x0]
    a540:	ldr	x0, [sp, #40]
    a544:	mov	x1, #0xffffffffffffffff    	// #-1
    a548:	str	x1, [x0, #16]
    a54c:	ldr	x0, [sp, #40]
    a550:	ldp	x29, x30, [sp], #48
    a554:	ret
    a558:	stp	x29, x30, [sp, #-80]!
    a55c:	mov	x29, sp
    a560:	str	x0, [sp, #40]
    a564:	str	x1, [sp, #32]
    a568:	str	x2, [sp, #24]
    a56c:	str	xzr, [sp, #72]
    a570:	ldr	x0, [sp, #32]
    a574:	ldr	x0, [x0, #16]
    a578:	cmp	x0, #0x1
    a57c:	b.ne	a828 <PyNumber_FloorDivide@plt+0x5bd8>  // b.any
    a580:	ldr	x0, [sp, #32]
    a584:	ldr	x0, [x0, #24]
    a588:	str	x0, [sp, #64]
    a58c:	ldr	x0, [sp, #64]
    a590:	ldr	x0, [x0, #8]
    a594:	ldr	x0, [x0, #168]
    a598:	and	x0, x0, #0x8000000
    a59c:	cmp	x0, #0x0
    a5a0:	b.eq	a5d8 <PyNumber_FloorDivide@plt+0x5988>  // b.none
    a5a4:	ldr	x0, [sp, #64]
    a5a8:	ldr	x0, [x0, #16]
    a5ac:	cmp	x0, #0x4
    a5b0:	b.ne	a828 <PyNumber_FloorDivide@plt+0x5bd8>  // b.any
    a5b4:	ldr	x0, [sp, #64]
    a5b8:	ldrb	w0, [x0, #34]
    a5bc:	sub	w0, w0, #0x1
    a5c0:	cmp	w0, #0xb
    a5c4:	b.hi	a828 <PyNumber_FloorDivide@plt+0x5bd8>  // b.pmore
    a5c8:	ldr	x1, [sp, #64]
    a5cc:	ldr	x0, [sp, #40]
    a5d0:	bl	a4ec <PyNumber_FloorDivide@plt+0x589c>
    a5d4:	b	a880 <PyNumber_FloorDivide@plt+0x5c30>
    a5d8:	ldr	x0, [sp, #64]
    a5dc:	ldr	x0, [x0, #8]
    a5e0:	ldr	x0, [x0, #168]
    a5e4:	and	x0, x0, #0x10000000
    a5e8:	cmp	x0, #0x0
    a5ec:	b.eq	a828 <PyNumber_FloorDivide@plt+0x5bd8>  // b.none
    a5f0:	ldr	x0, [sp, #64]
    a5f4:	ldrb	w0, [x0, #32]
    a5f8:	and	w0, w0, #0xffffff80
    a5fc:	and	w0, w0, #0xff
    a600:	cmp	w0, #0x0
    a604:	b.ne	a620 <PyNumber_FloorDivide@plt+0x59d0>  // b.any
    a608:	ldr	x0, [sp, #64]
    a60c:	bl	4750 <_PyUnicode_Ready@plt>
    a610:	cmp	w0, #0x0
    a614:	b.eq	a620 <PyNumber_FloorDivide@plt+0x59d0>  // b.none
    a618:	mov	x0, #0x0                   	// #0
    a61c:	b	a880 <PyNumber_FloorDivide@plt+0x5c30>
    a620:	ldr	x0, [sp, #64]
    a624:	ldr	x0, [x0, #16]
    a628:	cmp	x0, #0x4
    a62c:	b.ne	a828 <PyNumber_FloorDivide@plt+0x5bd8>  // b.any
    a630:	ldr	x0, [sp, #64]
    a634:	ldrb	w0, [x0, #32]
    a638:	and	w0, w0, #0x1c
    a63c:	and	w0, w0, #0xff
    a640:	cmp	w0, #0x4
    a644:	b.ne	a6b4 <PyNumber_FloorDivide@plt+0x5a64>  // b.any
    a648:	ldr	x0, [sp, #64]
    a64c:	ldrb	w0, [x0, #32]
    a650:	and	w0, w0, #0x20
    a654:	and	w0, w0, #0xff
    a658:	cmp	w0, #0x0
    a65c:	b.eq	a690 <PyNumber_FloorDivide@plt+0x5a40>  // b.none
    a660:	ldr	x0, [sp, #64]
    a664:	ldrb	w0, [x0, #32]
    a668:	and	w0, w0, #0x40
    a66c:	and	w0, w0, #0xff
    a670:	cmp	w0, #0x0
    a674:	b.eq	a684 <PyNumber_FloorDivide@plt+0x5a34>  // b.none
    a678:	ldr	x0, [sp, #64]
    a67c:	add	x0, x0, #0x32
    a680:	b	a69c <PyNumber_FloorDivide@plt+0x5a4c>
    a684:	ldr	x0, [sp, #64]
    a688:	add	x0, x0, #0x4a
    a68c:	b	a69c <PyNumber_FloorDivide@plt+0x5a4c>
    a690:	ldr	x0, [sp, #64]
    a694:	ldr	x0, [x0, #72]
    a698:	add	x0, x0, #0x2
    a69c:	ldrb	w0, [x0]
    a6a0:	sub	w0, w0, #0x1
    a6a4:	cmp	w0, #0xb
    a6a8:	cset	w0, ls  // ls = plast
    a6ac:	and	w0, w0, #0xff
    a6b0:	b	a7a0 <PyNumber_FloorDivide@plt+0x5b50>
    a6b4:	ldr	x0, [sp, #64]
    a6b8:	ldrb	w0, [x0, #32]
    a6bc:	and	w0, w0, #0x1c
    a6c0:	and	w0, w0, #0xff
    a6c4:	cmp	w0, #0x8
    a6c8:	b.ne	a738 <PyNumber_FloorDivide@plt+0x5ae8>  // b.any
    a6cc:	ldr	x0, [sp, #64]
    a6d0:	ldrb	w0, [x0, #32]
    a6d4:	and	w0, w0, #0x20
    a6d8:	and	w0, w0, #0xff
    a6dc:	cmp	w0, #0x0
    a6e0:	b.eq	a714 <PyNumber_FloorDivide@plt+0x5ac4>  // b.none
    a6e4:	ldr	x0, [sp, #64]
    a6e8:	ldrb	w0, [x0, #32]
    a6ec:	and	w0, w0, #0x40
    a6f0:	and	w0, w0, #0xff
    a6f4:	cmp	w0, #0x0
    a6f8:	b.eq	a708 <PyNumber_FloorDivide@plt+0x5ab8>  // b.none
    a6fc:	ldr	x0, [sp, #64]
    a700:	add	x0, x0, #0x34
    a704:	b	a720 <PyNumber_FloorDivide@plt+0x5ad0>
    a708:	ldr	x0, [sp, #64]
    a70c:	add	x0, x0, #0x4c
    a710:	b	a720 <PyNumber_FloorDivide@plt+0x5ad0>
    a714:	ldr	x0, [sp, #64]
    a718:	ldr	x0, [x0, #72]
    a71c:	add	x0, x0, #0x4
    a720:	ldrh	w0, [x0]
    a724:	sub	w0, w0, #0x1
    a728:	cmp	w0, #0xb
    a72c:	cset	w0, ls  // ls = plast
    a730:	and	w0, w0, #0xff
    a734:	b	a7a0 <PyNumber_FloorDivide@plt+0x5b50>
    a738:	ldr	x0, [sp, #64]
    a73c:	ldrb	w0, [x0, #32]
    a740:	and	w0, w0, #0x20
    a744:	and	w0, w0, #0xff
    a748:	cmp	w0, #0x0
    a74c:	b.eq	a780 <PyNumber_FloorDivide@plt+0x5b30>  // b.none
    a750:	ldr	x0, [sp, #64]
    a754:	ldrb	w0, [x0, #32]
    a758:	and	w0, w0, #0x40
    a75c:	and	w0, w0, #0xff
    a760:	cmp	w0, #0x0
    a764:	b.eq	a774 <PyNumber_FloorDivide@plt+0x5b24>  // b.none
    a768:	ldr	x0, [sp, #64]
    a76c:	add	x0, x0, #0x38
    a770:	b	a78c <PyNumber_FloorDivide@plt+0x5b3c>
    a774:	ldr	x0, [sp, #64]
    a778:	add	x0, x0, #0x50
    a77c:	b	a78c <PyNumber_FloorDivide@plt+0x5b3c>
    a780:	ldr	x0, [sp, #64]
    a784:	ldr	x0, [x0, #72]
    a788:	add	x0, x0, #0x8
    a78c:	ldr	w0, [x0]
    a790:	sub	w0, w0, #0x1
    a794:	cmp	w0, #0xb
    a798:	cset	w0, ls  // ls = plast
    a79c:	and	w0, w0, #0xff
    a7a0:	cmp	w0, #0x0
    a7a4:	b.eq	a828 <PyNumber_FloorDivide@plt+0x5bd8>  // b.none
    a7a8:	ldr	x0, [sp, #64]
    a7ac:	bl	49a0 <PyUnicode_AsLatin1String@plt>
    a7b0:	str	x0, [sp, #64]
    a7b4:	ldr	x0, [sp, #64]
    a7b8:	cmp	x0, #0x0
    a7bc:	b.ne	a7fc <PyNumber_FloorDivide@plt+0x5bac>  // b.any
    a7c0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    a7c4:	ldr	x0, [x0, #4032]
    a7c8:	ldr	x0, [x0]
    a7cc:	bl	48e0 <PyErr_ExceptionMatches@plt>
    a7d0:	cmp	w0, #0x0
    a7d4:	b.eq	a7f4 <PyNumber_FloorDivide@plt+0x5ba4>  // b.none
    a7d8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    a7dc:	ldr	x0, [x0, #3968]
    a7e0:	ldr	x2, [x0]
    a7e4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a7e8:	add	x1, x0, #0x400
    a7ec:	mov	x0, x2
    a7f0:	bl	48c0 <PyErr_SetString@plt>
    a7f4:	mov	x0, #0x0                   	// #0
    a7f8:	b	a880 <PyNumber_FloorDivide@plt+0x5c30>
    a7fc:	ldr	x1, [sp, #64]
    a800:	ldr	x0, [sp, #40]
    a804:	bl	a4ec <PyNumber_FloorDivide@plt+0x589c>
    a808:	str	x0, [sp, #72]
    a80c:	ldr	x2, [sp, #64]
    a810:	mov	w1, #0xb21                 	// #2849
    a814:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a818:	add	x0, x0, #0xb30
    a81c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a820:	ldr	x0, [sp, #72]
    a824:	b	a880 <PyNumber_FloorDivide@plt+0x5c30>
    a828:	add	x2, sp, #0x34
    a82c:	add	x1, sp, #0x38
    a830:	add	x0, sp, #0x3c
    a834:	mov	x6, x2
    a838:	mov	x5, x1
    a83c:	mov	x4, x0
    a840:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    a844:	add	x3, x0, #0xf90
    a848:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a84c:	add	x2, x0, #0xcf0
    a850:	ldr	x1, [sp, #24]
    a854:	ldr	x0, [sp, #32]
    a858:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    a85c:	cmp	w0, #0x0
    a860:	b.eq	a87c <PyNumber_FloorDivide@plt+0x5c2c>  // b.none
    a864:	ldr	w0, [sp, #60]
    a868:	ldr	w1, [sp, #56]
    a86c:	ldr	w2, [sp, #52]
    a870:	ldr	x3, [sp, #40]
    a874:	bl	6570 <PyNumber_FloorDivide@plt+0x1920>
    a878:	str	x0, [sp, #72]
    a87c:	ldr	x0, [sp, #72]
    a880:	ldp	x29, x30, [sp], #80
    a884:	ret
    a888:	stp	x29, x30, [sp, #-96]!
    a88c:	mov	x29, sp
    a890:	str	x0, [sp, #24]
    a894:	str	x1, [sp, #16]
    a898:	add	x0, sp, #0x20
    a89c:	mov	w2, #0x0                   	// #0
    a8a0:	mov	x1, x0
    a8a4:	ldr	x0, [sp, #16]
    a8a8:	bl	4ab0 <_PyTime_ObjectToTime_t@plt>
    a8ac:	cmn	w0, #0x1
    a8b0:	b.ne	a8bc <PyNumber_FloorDivide@plt+0x5c6c>  // b.any
    a8b4:	mov	x0, #0x0                   	// #0
    a8b8:	b	a900 <PyNumber_FloorDivide@plt+0x5cb0>
    a8bc:	ldr	x0, [sp, #32]
    a8c0:	add	x1, sp, #0x28
    a8c4:	bl	4c10 <_PyTime_localtime@plt>
    a8c8:	cmp	w0, #0x0
    a8cc:	b.eq	a8d8 <PyNumber_FloorDivide@plt+0x5c88>  // b.none
    a8d0:	mov	x0, #0x0                   	// #0
    a8d4:	b	a900 <PyNumber_FloorDivide@plt+0x5cb0>
    a8d8:	ldr	w0, [sp, #60]
    a8dc:	add	w4, w0, #0x76c
    a8e0:	ldr	w0, [sp, #56]
    a8e4:	add	w0, w0, #0x1
    a8e8:	ldr	w1, [sp, #52]
    a8ec:	ldr	x3, [sp, #24]
    a8f0:	mov	w2, w1
    a8f4:	mov	w1, w0
    a8f8:	mov	w0, w4
    a8fc:	bl	65ec <PyNumber_FloorDivide@plt+0x199c>
    a900:	ldp	x29, x30, [sp], #96
    a904:	ret
    a908:	stp	x29, x30, [sp, #-48]!
    a90c:	mov	x29, sp
    a910:	str	x0, [sp, #24]
    a914:	str	x1, [sp, #16]
    a918:	bl	7e0c <PyNumber_FloorDivide@plt+0x31bc>
    a91c:	str	x0, [sp, #40]
    a920:	ldr	x0, [sp, #40]
    a924:	cmp	x0, #0x0
    a928:	b.ne	a934 <PyNumber_FloorDivide@plt+0x5ce4>  // b.any
    a92c:	mov	x0, #0x0                   	// #0
    a930:	b	a968 <PyNumber_FloorDivide@plt+0x5d18>
    a934:	mov	x3, #0x0                   	// #0
    a938:	ldr	x2, [sp, #40]
    a93c:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    a940:	add	x1, x0, #0xe60
    a944:	ldr	x0, [sp, #24]
    a948:	bl	4b30 <_PyObject_CallMethodIdObjArgs@plt>
    a94c:	str	x0, [sp, #32]
    a950:	ldr	x2, [sp, #40]
    a954:	mov	w1, #0xb58                 	// #2904
    a958:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    a95c:	add	x0, x0, #0xb30
    a960:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    a964:	ldr	x0, [sp, #32]
    a968:	ldp	x29, x30, [sp], #48
    a96c:	ret
    a970:	stp	x29, x30, [sp, #-32]!
    a974:	mov	x29, sp
    a978:	str	x0, [sp, #24]
    a97c:	str	x1, [sp, #16]
    a980:	ldr	x1, [sp, #16]
    a984:	ldr	x0, [sp, #24]
    a988:	bl	a888 <PyNumber_FloorDivide@plt+0x5c38>
    a98c:	ldp	x29, x30, [sp], #32
    a990:	ret
    a994:	stp	x29, x30, [sp, #-48]!
    a998:	mov	x29, sp
    a99c:	str	x0, [sp, #24]
    a9a0:	str	x1, [sp, #16]
    a9a4:	str	xzr, [sp, #40]
    a9a8:	add	x0, sp, #0x20
    a9ac:	mov	x4, x0
    a9b0:	mov	x3, #0x1                   	// #1
    a9b4:	mov	x2, #0x1                   	// #1
    a9b8:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    a9bc:	add	x1, x0, #0x470
    a9c0:	ldr	x0, [sp, #16]
    a9c4:	bl	49d0 <PyArg_UnpackTuple@plt>
    a9c8:	cmp	w0, #0x0
    a9cc:	b.eq	a9e4 <PyNumber_FloorDivide@plt+0x5d94>  // b.none
    a9d0:	ldr	x0, [sp, #32]
    a9d4:	mov	x1, x0
    a9d8:	ldr	x0, [sp, #24]
    a9dc:	bl	a888 <PyNumber_FloorDivide@plt+0x5c38>
    a9e0:	str	x0, [sp, #40]
    a9e4:	ldr	x0, [sp, #40]
    a9e8:	ldp	x29, x30, [sp], #48
    a9ec:	ret
    a9f0:	stp	x29, x30, [sp, #-64]!
    a9f4:	mov	x29, sp
    a9f8:	str	x0, [sp, #24]
    a9fc:	str	x1, [sp, #16]
    aa00:	str	xzr, [sp, #56]
    aa04:	add	x0, sp, #0x34
    aa08:	mov	x2, x0
    aa0c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    aa10:	add	x1, x0, #0x480
    aa14:	ldr	x0, [sp, #16]
    aa18:	bl	4a70 <PyArg_ParseTuple@plt>
    aa1c:	cmp	w0, #0x0
    aa20:	b.eq	aa7c <PyNumber_FloorDivide@plt+0x5e2c>  // b.none
    aa24:	ldr	w0, [sp, #52]
    aa28:	cmp	w0, #0x0
    aa2c:	b.gt	aa50 <PyNumber_FloorDivide@plt+0x5e00>
    aa30:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    aa34:	ldr	x0, [x0, #3968]
    aa38:	ldr	x2, [x0]
    aa3c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    aa40:	add	x1, x0, #0x490
    aa44:	mov	x0, x2
    aa48:	bl	48c0 <PyErr_SetString@plt>
    aa4c:	b	aa7c <PyNumber_FloorDivide@plt+0x5e2c>
    aa50:	ldr	w0, [sp, #52]
    aa54:	add	x3, sp, #0x28
    aa58:	add	x2, sp, #0x2c
    aa5c:	add	x1, sp, #0x30
    aa60:	bl	5428 <PyNumber_FloorDivide@plt+0x7d8>
    aa64:	ldr	w0, [sp, #48]
    aa68:	ldr	w1, [sp, #44]
    aa6c:	ldr	w2, [sp, #40]
    aa70:	ldr	x3, [sp, #24]
    aa74:	bl	65ec <PyNumber_FloorDivide@plt+0x199c>
    aa78:	str	x0, [sp, #56]
    aa7c:	ldr	x0, [sp, #56]
    aa80:	ldp	x29, x30, [sp], #64
    aa84:	ret
    aa88:	stp	x29, x30, [sp, #-80]!
    aa8c:	mov	x29, sp
    aa90:	str	x0, [sp, #24]
    aa94:	str	x1, [sp, #16]
    aa98:	ldr	x0, [sp, #16]
    aa9c:	ldr	x0, [x0, #8]
    aaa0:	ldr	x0, [x0, #168]
    aaa4:	and	x0, x0, #0x10000000
    aaa8:	cmp	x0, #0x0
    aaac:	b.ne	aad4 <PyNumber_FloorDivide@plt+0x5e84>  // b.any
    aab0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    aab4:	ldr	x0, [x0, #3976]
    aab8:	ldr	x2, [x0]
    aabc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    aac0:	add	x1, x0, #0x4a8
    aac4:	mov	x0, x2
    aac8:	bl	48c0 <PyErr_SetString@plt>
    aacc:	mov	x0, #0x0                   	// #0
    aad0:	b	ab90 <PyNumber_FloorDivide@plt+0x5f40>
    aad4:	add	x0, sp, #0x38
    aad8:	mov	x1, x0
    aadc:	ldr	x0, [sp, #16]
    aae0:	bl	4b90 <PyUnicode_AsUTF8AndSize@plt>
    aae4:	str	x0, [sp, #64]
    aae8:	ldr	x0, [sp, #64]
    aaec:	cmp	x0, #0x0
    aaf0:	b.eq	ab60 <PyNumber_FloorDivide@plt+0x5f10>  // b.none
    aaf4:	str	wzr, [sp, #52]
    aaf8:	str	wzr, [sp, #48]
    aafc:	str	wzr, [sp, #44]
    ab00:	ldr	x0, [sp, #56]
    ab04:	cmp	x0, #0xa
    ab08:	b.ne	ab34 <PyNumber_FloorDivide@plt+0x5ee4>  // b.any
    ab0c:	add	x2, sp, #0x2c
    ab10:	add	x1, sp, #0x30
    ab14:	add	x0, sp, #0x34
    ab18:	mov	x3, x2
    ab1c:	mov	x2, x1
    ab20:	mov	x1, x0
    ab24:	ldr	x0, [sp, #64]
    ab28:	bl	60f8 <PyNumber_FloorDivide@plt+0x14a8>
    ab2c:	str	w0, [sp, #76]
    ab30:	b	ab3c <PyNumber_FloorDivide@plt+0x5eec>
    ab34:	mov	w0, #0xffffffff            	// #-1
    ab38:	str	w0, [sp, #76]
    ab3c:	ldr	w0, [sp, #76]
    ab40:	cmp	w0, #0x0
    ab44:	b.lt	ab68 <PyNumber_FloorDivide@plt+0x5f18>  // b.tstop
    ab48:	ldr	w0, [sp, #52]
    ab4c:	ldr	w1, [sp, #48]
    ab50:	ldr	w2, [sp, #44]
    ab54:	ldr	x3, [sp, #24]
    ab58:	bl	65ec <PyNumber_FloorDivide@plt+0x199c>
    ab5c:	b	ab90 <PyNumber_FloorDivide@plt+0x5f40>
    ab60:	nop
    ab64:	b	ab6c <PyNumber_FloorDivide@plt+0x5f1c>
    ab68:	nop
    ab6c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ab70:	ldr	x0, [x0, #3968]
    ab74:	ldr	x3, [x0]
    ab78:	ldr	x2, [sp, #16]
    ab7c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ab80:	add	x1, x0, #0x4d0
    ab84:	mov	x0, x3
    ab88:	bl	4bb0 <PyErr_Format@plt>
    ab8c:	mov	x0, #0x0                   	// #0
    ab90:	ldp	x29, x30, [sp], #80
    ab94:	ret
    ab98:	stp	x29, x30, [sp, #-80]!
    ab9c:	mov	x29, sp
    aba0:	str	x0, [sp, #40]
    aba4:	str	x1, [sp, #32]
    aba8:	str	x2, [sp, #24]
    abac:	add	x2, sp, #0x34
    abb0:	add	x1, sp, #0x38
    abb4:	add	x0, sp, #0x3c
    abb8:	mov	x6, x2
    abbc:	mov	x5, x1
    abc0:	mov	x4, x0
    abc4:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    abc8:	add	x3, x0, #0xe78
    abcc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    abd0:	add	x2, x0, #0x4f0
    abd4:	ldr	x1, [sp, #24]
    abd8:	ldr	x0, [sp, #32]
    abdc:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    abe0:	cmp	w0, #0x0
    abe4:	b.ne	ac24 <PyNumber_FloorDivide@plt+0x5fd4>  // b.any
    abe8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    abec:	ldr	x0, [x0, #4008]
    abf0:	ldr	x0, [x0]
    abf4:	bl	48e0 <PyErr_ExceptionMatches@plt>
    abf8:	cmp	w0, #0x0
    abfc:	b.eq	ac1c <PyNumber_FloorDivide@plt+0x5fcc>  // b.none
    ac00:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ac04:	ldr	x0, [x0, #3968]
    ac08:	ldr	x2, [x0]
    ac0c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ac10:	add	x1, x0, #0x508
    ac14:	mov	x0, x2
    ac18:	bl	4bb0 <PyErr_Format@plt>
    ac1c:	mov	x0, #0x0                   	// #0
    ac20:	b	adbc <PyNumber_FloorDivide@plt+0x616c>
    ac24:	ldr	w0, [sp, #60]
    ac28:	cmp	w0, #0x0
    ac2c:	b.le	ac40 <PyNumber_FloorDivide@plt+0x5ff0>
    ac30:	ldr	w1, [sp, #60]
    ac34:	mov	w0, #0x270f                	// #9999
    ac38:	cmp	w1, w0
    ac3c:	b.le	ac6c <PyNumber_FloorDivide@plt+0x601c>
    ac40:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ac44:	ldr	x0, [x0, #3968]
    ac48:	ldr	x3, [x0]
    ac4c:	ldr	w0, [sp, #60]
    ac50:	mov	w2, w0
    ac54:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ac58:	add	x1, x0, #0x530
    ac5c:	mov	x0, x3
    ac60:	bl	4bb0 <PyErr_Format@plt>
    ac64:	mov	x0, #0x0                   	// #0
    ac68:	b	adbc <PyNumber_FloorDivide@plt+0x616c>
    ac6c:	ldr	w0, [sp, #56]
    ac70:	cmp	w0, #0x0
    ac74:	b.le	ac84 <PyNumber_FloorDivide@plt+0x6034>
    ac78:	ldr	w0, [sp, #56]
    ac7c:	cmp	w0, #0x34
    ac80:	b.le	ad10 <PyNumber_FloorDivide@plt+0x60c0>
    ac84:	mov	w0, #0x1                   	// #1
    ac88:	str	w0, [sp, #76]
    ac8c:	ldr	w0, [sp, #56]
    ac90:	cmp	w0, #0x35
    ac94:	b.ne	acd8 <PyNumber_FloorDivide@plt+0x6088>  // b.any
    ac98:	ldr	w0, [sp, #60]
    ac9c:	mov	w2, #0x1                   	// #1
    aca0:	mov	w1, #0x1                   	// #1
    aca4:	bl	5794 <PyNumber_FloorDivide@plt+0xb44>
    aca8:	str	w0, [sp, #72]
    acac:	ldr	w0, [sp, #72]
    acb0:	cmp	w0, #0x3
    acb4:	b.eq	acd4 <PyNumber_FloorDivide@plt+0x6084>  // b.none
    acb8:	ldr	w0, [sp, #72]
    acbc:	cmp	w0, #0x2
    acc0:	b.ne	acd8 <PyNumber_FloorDivide@plt+0x6088>  // b.any
    acc4:	ldr	w0, [sp, #60]
    acc8:	bl	5270 <PyNumber_FloorDivide@plt+0x620>
    accc:	cmp	w0, #0x0
    acd0:	b.eq	acd8 <PyNumber_FloorDivide@plt+0x6088>  // b.none
    acd4:	str	wzr, [sp, #76]
    acd8:	ldr	w0, [sp, #76]
    acdc:	cmp	w0, #0x0
    ace0:	b.eq	ad10 <PyNumber_FloorDivide@plt+0x60c0>  // b.none
    ace4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ace8:	ldr	x0, [x0, #3968]
    acec:	ldr	x3, [x0]
    acf0:	ldr	w0, [sp, #56]
    acf4:	mov	w2, w0
    acf8:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    acfc:	add	x1, x0, #0x550
    ad00:	mov	x0, x3
    ad04:	bl	4bb0 <PyErr_Format@plt>
    ad08:	mov	x0, #0x0                   	// #0
    ad0c:	b	adbc <PyNumber_FloorDivide@plt+0x616c>
    ad10:	ldr	w0, [sp, #52]
    ad14:	cmp	w0, #0x0
    ad18:	b.le	ad28 <PyNumber_FloorDivide@plt+0x60d8>
    ad1c:	ldr	w0, [sp, #52]
    ad20:	cmp	w0, #0x7
    ad24:	b.le	ad54 <PyNumber_FloorDivide@plt+0x6104>
    ad28:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ad2c:	ldr	x0, [x0, #3968]
    ad30:	ldr	x3, [x0]
    ad34:	ldr	w0, [sp, #52]
    ad38:	mov	w2, w0
    ad3c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ad40:	add	x1, x0, #0x568
    ad44:	mov	x0, x3
    ad48:	bl	4bb0 <PyErr_Format@plt>
    ad4c:	mov	x0, #0x0                   	// #0
    ad50:	b	adbc <PyNumber_FloorDivide@plt+0x616c>
    ad54:	ldr	w0, [sp, #60]
    ad58:	bl	57f8 <PyNumber_FloorDivide@plt+0xba8>
    ad5c:	str	w0, [sp, #68]
    ad60:	ldr	w0, [sp, #56]
    ad64:	str	w0, [sp, #48]
    ad68:	ldr	w0, [sp, #48]
    ad6c:	sub	w1, w0, #0x1
    ad70:	mov	w0, w1
    ad74:	lsl	w0, w0, #3
    ad78:	sub	w1, w0, w1
    ad7c:	ldr	w0, [sp, #52]
    ad80:	add	w0, w1, w0
    ad84:	sub	w0, w0, #0x1
    ad88:	str	w0, [sp, #64]
    ad8c:	ldr	w1, [sp, #68]
    ad90:	ldr	w0, [sp, #64]
    ad94:	add	w0, w1, w0
    ad98:	add	x3, sp, #0x34
    ad9c:	add	x2, sp, #0x30
    ada0:	add	x1, sp, #0x3c
    ada4:	bl	5428 <PyNumber_FloorDivide@plt+0x7d8>
    ada8:	ldr	w0, [sp, #60]
    adac:	ldr	w1, [sp, #48]
    adb0:	ldr	w2, [sp, #52]
    adb4:	ldr	x3, [sp, #40]
    adb8:	bl	65ec <PyNumber_FloorDivide@plt+0x199c>
    adbc:	ldp	x29, x30, [sp], #80
    adc0:	ret
    adc4:	stp	x29, x30, [sp, #-80]!
    adc8:	mov	x29, sp
    adcc:	str	x0, [sp, #40]
    add0:	str	x1, [sp, #32]
    add4:	str	w2, [sp, #28]
    add8:	str	xzr, [sp, #72]
    addc:	ldr	x0, [sp, #40]
    ade0:	ldrb	w0, [x0, #25]
    ade4:	lsl	w0, w0, #8
    ade8:	ldr	x1, [sp, #40]
    adec:	ldrb	w1, [x1, #26]
    adf0:	orr	w0, w0, w1
    adf4:	str	w0, [sp, #64]
    adf8:	ldr	x0, [sp, #40]
    adfc:	ldrb	w0, [x0, #27]
    ae00:	str	w0, [sp, #60]
    ae04:	ldr	x0, [sp, #32]
    ae08:	ldr	w0, [x0, #24]
    ae0c:	str	w0, [sp, #68]
    ae10:	ldr	x0, [sp, #40]
    ae14:	ldrb	w0, [x0, #28]
    ae18:	mov	w1, w0
    ae1c:	ldr	w0, [sp, #28]
    ae20:	cmp	w0, #0x0
    ae24:	b.eq	ae34 <PyNumber_FloorDivide@plt+0x61e4>  // b.none
    ae28:	ldr	w0, [sp, #68]
    ae2c:	neg	w0, w0
    ae30:	b	ae38 <PyNumber_FloorDivide@plt+0x61e8>
    ae34:	ldr	w0, [sp, #68]
    ae38:	add	w0, w0, w1
    ae3c:	str	w0, [sp, #56]
    ae40:	add	x2, sp, #0x38
    ae44:	add	x1, sp, #0x3c
    ae48:	add	x0, sp, #0x40
    ae4c:	bl	5e7c <PyNumber_FloorDivide@plt+0x122c>
    ae50:	cmp	w0, #0x0
    ae54:	b.lt	ae7c <PyNumber_FloorDivide@plt+0x622c>  // b.tstop
    ae58:	ldr	w4, [sp, #64]
    ae5c:	ldr	w1, [sp, #60]
    ae60:	ldr	w2, [sp, #56]
    ae64:	ldr	x0, [sp, #40]
    ae68:	ldr	x0, [x0, #8]
    ae6c:	mov	x3, x0
    ae70:	mov	w0, w4
    ae74:	bl	65ec <PyNumber_FloorDivide@plt+0x199c>
    ae78:	str	x0, [sp, #72]
    ae7c:	ldr	x0, [sp, #72]
    ae80:	ldp	x29, x30, [sp], #80
    ae84:	ret
    ae88:	stp	x29, x30, [sp, #-32]!
    ae8c:	mov	x29, sp
    ae90:	str	x0, [sp, #24]
    ae94:	str	x1, [sp, #16]
    ae98:	ldr	x0, [sp, #24]
    ae9c:	ldr	x1, [x0, #8]
    aea0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    aea4:	add	x0, x0, #0x450
    aea8:	cmp	x1, x0
    aeac:	b.eq	af08 <PyNumber_FloorDivide@plt+0x62b8>  // b.none
    aeb0:	ldr	x0, [sp, #24]
    aeb4:	ldr	x2, [x0, #8]
    aeb8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    aebc:	add	x1, x0, #0x450
    aec0:	mov	x0, x2
    aec4:	bl	4b80 <PyType_IsSubtype@plt>
    aec8:	cmp	w0, #0x0
    aecc:	b.ne	af08 <PyNumber_FloorDivide@plt+0x62b8>  // b.any
    aed0:	ldr	x0, [sp, #16]
    aed4:	ldr	x1, [x0, #8]
    aed8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    aedc:	add	x0, x0, #0x450
    aee0:	cmp	x1, x0
    aee4:	b.eq	af08 <PyNumber_FloorDivide@plt+0x62b8>  // b.none
    aee8:	ldr	x0, [sp, #16]
    aeec:	ldr	x2, [x0, #8]
    aef0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    aef4:	add	x1, x0, #0x450
    aef8:	mov	x0, x2
    aefc:	bl	4b80 <PyType_IsSubtype@plt>
    af00:	cmp	w0, #0x0
    af04:	b.eq	af20 <PyNumber_FloorDivide@plt+0x62d0>  // b.none
    af08:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    af0c:	ldr	x0, [x0, #3960]
    af10:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    af14:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    af18:	ldr	x0, [x0, #3960]
    af1c:	b	b008 <PyNumber_FloorDivide@plt+0x63b8>
    af20:	ldr	x0, [sp, #24]
    af24:	ldr	x1, [x0, #8]
    af28:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    af2c:	add	x0, x0, #0x2b0
    af30:	cmp	x1, x0
    af34:	b.eq	af58 <PyNumber_FloorDivide@plt+0x6308>  // b.none
    af38:	ldr	x0, [sp, #24]
    af3c:	ldr	x2, [x0, #8]
    af40:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    af44:	add	x1, x0, #0x2b0
    af48:	mov	x0, x2
    af4c:	bl	4b80 <PyType_IsSubtype@plt>
    af50:	cmp	w0, #0x0
    af54:	b.eq	afa4 <PyNumber_FloorDivide@plt+0x6354>  // b.none
    af58:	ldr	x0, [sp, #16]
    af5c:	ldr	x1, [x0, #8]
    af60:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    af64:	add	x0, x0, #0x5f0
    af68:	cmp	x1, x0
    af6c:	b.eq	af90 <PyNumber_FloorDivide@plt+0x6340>  // b.none
    af70:	ldr	x0, [sp, #16]
    af74:	ldr	x2, [x0, #8]
    af78:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    af7c:	add	x1, x0, #0x5f0
    af80:	mov	x0, x2
    af84:	bl	4b80 <PyType_IsSubtype@plt>
    af88:	cmp	w0, #0x0
    af8c:	b.eq	aff0 <PyNumber_FloorDivide@plt+0x63a0>  // b.none
    af90:	mov	w2, #0x0                   	// #0
    af94:	ldr	x1, [sp, #16]
    af98:	ldr	x0, [sp, #24]
    af9c:	bl	adc4 <PyNumber_FloorDivide@plt+0x6174>
    afa0:	b	b008 <PyNumber_FloorDivide@plt+0x63b8>
    afa4:	ldr	x0, [sp, #24]
    afa8:	ldr	x1, [x0, #8]
    afac:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    afb0:	add	x0, x0, #0x5f0
    afb4:	cmp	x1, x0
    afb8:	b.eq	afdc <PyNumber_FloorDivide@plt+0x638c>  // b.none
    afbc:	ldr	x0, [sp, #24]
    afc0:	ldr	x2, [x0, #8]
    afc4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    afc8:	add	x1, x0, #0x5f0
    afcc:	mov	x0, x2
    afd0:	bl	4b80 <PyType_IsSubtype@plt>
    afd4:	cmp	w0, #0x0
    afd8:	b.eq	aff4 <PyNumber_FloorDivide@plt+0x63a4>  // b.none
    afdc:	mov	w2, #0x0                   	// #0
    afe0:	ldr	x1, [sp, #24]
    afe4:	ldr	x0, [sp, #16]
    afe8:	bl	adc4 <PyNumber_FloorDivide@plt+0x6174>
    afec:	b	b008 <PyNumber_FloorDivide@plt+0x63b8>
    aff0:	nop
    aff4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    aff8:	ldr	x0, [x0, #3960]
    affc:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    b000:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b004:	ldr	x0, [x0, #3960]
    b008:	ldp	x29, x30, [sp], #32
    b00c:	ret
    b010:	stp	x29, x30, [sp, #-48]!
    b014:	mov	x29, sp
    b018:	str	x0, [sp, #24]
    b01c:	str	x1, [sp, #16]
    b020:	ldr	x0, [sp, #24]
    b024:	ldr	x1, [x0, #8]
    b028:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b02c:	add	x0, x0, #0x450
    b030:	cmp	x1, x0
    b034:	b.eq	b090 <PyNumber_FloorDivide@plt+0x6440>  // b.none
    b038:	ldr	x0, [sp, #24]
    b03c:	ldr	x2, [x0, #8]
    b040:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b044:	add	x1, x0, #0x450
    b048:	mov	x0, x2
    b04c:	bl	4b80 <PyType_IsSubtype@plt>
    b050:	cmp	w0, #0x0
    b054:	b.ne	b090 <PyNumber_FloorDivide@plt+0x6440>  // b.any
    b058:	ldr	x0, [sp, #16]
    b05c:	ldr	x1, [x0, #8]
    b060:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b064:	add	x0, x0, #0x450
    b068:	cmp	x1, x0
    b06c:	b.eq	b090 <PyNumber_FloorDivide@plt+0x6440>  // b.none
    b070:	ldr	x0, [sp, #16]
    b074:	ldr	x2, [x0, #8]
    b078:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b07c:	add	x1, x0, #0x450
    b080:	mov	x0, x2
    b084:	bl	4b80 <PyType_IsSubtype@plt>
    b088:	cmp	w0, #0x0
    b08c:	b.eq	b0a8 <PyNumber_FloorDivide@plt+0x6458>  // b.none
    b090:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b094:	ldr	x0, [x0, #3960]
    b098:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    b09c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b0a0:	ldr	x0, [x0, #3960]
    b0a4:	b	b21c <PyNumber_FloorDivide@plt+0x65cc>
    b0a8:	ldr	x0, [sp, #24]
    b0ac:	ldr	x1, [x0, #8]
    b0b0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b0b4:	add	x0, x0, #0x2b0
    b0b8:	cmp	x1, x0
    b0bc:	b.eq	b0e0 <PyNumber_FloorDivide@plt+0x6490>  // b.none
    b0c0:	ldr	x0, [sp, #24]
    b0c4:	ldr	x2, [x0, #8]
    b0c8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b0cc:	add	x1, x0, #0x2b0
    b0d0:	mov	x0, x2
    b0d4:	bl	4b80 <PyType_IsSubtype@plt>
    b0d8:	cmp	w0, #0x0
    b0dc:	b.eq	b208 <PyNumber_FloorDivide@plt+0x65b8>  // b.none
    b0e0:	ldr	x0, [sp, #16]
    b0e4:	ldr	x1, [x0, #8]
    b0e8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b0ec:	add	x0, x0, #0x2b0
    b0f0:	cmp	x1, x0
    b0f4:	b.eq	b118 <PyNumber_FloorDivide@plt+0x64c8>  // b.none
    b0f8:	ldr	x0, [sp, #16]
    b0fc:	ldr	x2, [x0, #8]
    b100:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b104:	add	x1, x0, #0x2b0
    b108:	mov	x0, x2
    b10c:	bl	4b80 <PyType_IsSubtype@plt>
    b110:	cmp	w0, #0x0
    b114:	b.eq	b1bc <PyNumber_FloorDivide@plt+0x656c>  // b.none
    b118:	ldr	x0, [sp, #24]
    b11c:	ldrb	w0, [x0, #25]
    b120:	lsl	w0, w0, #8
    b124:	ldr	x1, [sp, #24]
    b128:	ldrb	w1, [x1, #26]
    b12c:	orr	w3, w0, w1
    b130:	ldr	x0, [sp, #24]
    b134:	ldrb	w0, [x0, #27]
    b138:	mov	w1, w0
    b13c:	ldr	x0, [sp, #24]
    b140:	ldrb	w0, [x0, #28]
    b144:	mov	w2, w0
    b148:	mov	w0, w3
    b14c:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    b150:	str	w0, [sp, #44]
    b154:	ldr	x0, [sp, #16]
    b158:	ldrb	w0, [x0, #25]
    b15c:	lsl	w0, w0, #8
    b160:	ldr	x1, [sp, #16]
    b164:	ldrb	w1, [x1, #26]
    b168:	orr	w3, w0, w1
    b16c:	ldr	x0, [sp, #16]
    b170:	ldrb	w0, [x0, #27]
    b174:	mov	w1, w0
    b178:	ldr	x0, [sp, #16]
    b17c:	ldrb	w0, [x0, #28]
    b180:	mov	w2, w0
    b184:	mov	w0, w3
    b188:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    b18c:	str	w0, [sp, #40]
    b190:	ldr	w1, [sp, #44]
    b194:	ldr	w0, [sp, #40]
    b198:	sub	w5, w1, w0
    b19c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b1a0:	add	x4, x0, #0x5f0
    b1a4:	mov	w3, #0x0                   	// #0
    b1a8:	mov	w2, #0x0                   	// #0
    b1ac:	mov	w1, #0x0                   	// #0
    b1b0:	mov	w0, w5
    b1b4:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    b1b8:	b	b21c <PyNumber_FloorDivide@plt+0x65cc>
    b1bc:	ldr	x0, [sp, #16]
    b1c0:	ldr	x1, [x0, #8]
    b1c4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b1c8:	add	x0, x0, #0x5f0
    b1cc:	cmp	x1, x0
    b1d0:	b.eq	b1f4 <PyNumber_FloorDivide@plt+0x65a4>  // b.none
    b1d4:	ldr	x0, [sp, #16]
    b1d8:	ldr	x2, [x0, #8]
    b1dc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b1e0:	add	x1, x0, #0x5f0
    b1e4:	mov	x0, x2
    b1e8:	bl	4b80 <PyType_IsSubtype@plt>
    b1ec:	cmp	w0, #0x0
    b1f0:	b.eq	b208 <PyNumber_FloorDivide@plt+0x65b8>  // b.none
    b1f4:	mov	w2, #0x1                   	// #1
    b1f8:	ldr	x1, [sp, #16]
    b1fc:	ldr	x0, [sp, #24]
    b200:	bl	adc4 <PyNumber_FloorDivide@plt+0x6174>
    b204:	b	b21c <PyNumber_FloorDivide@plt+0x65cc>
    b208:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b20c:	ldr	x0, [x0, #3960]
    b210:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    b214:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b218:	ldr	x0, [x0, #3960]
    b21c:	ldp	x29, x30, [sp], #48
    b220:	ret
    b224:	stp	x29, x30, [sp, #-32]!
    b228:	mov	x29, sp
    b22c:	str	x0, [sp, #24]
    b230:	ldr	x0, [sp, #24]
    b234:	ldr	x0, [x0, #8]
    b238:	ldr	x5, [x0, #24]
    b23c:	ldr	x0, [sp, #24]
    b240:	ldrb	w0, [x0, #25]
    b244:	lsl	w0, w0, #8
    b248:	ldr	x1, [sp, #24]
    b24c:	ldrb	w1, [x1, #26]
    b250:	orr	w1, w0, w1
    b254:	ldr	x0, [sp, #24]
    b258:	ldrb	w0, [x0, #27]
    b25c:	mov	w2, w0
    b260:	ldr	x0, [sp, #24]
    b264:	ldrb	w0, [x0, #28]
    b268:	mov	w4, w0
    b26c:	mov	w3, w2
    b270:	mov	w2, w1
    b274:	mov	x1, x5
    b278:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b27c:	add	x0, x0, #0x590
    b280:	bl	4740 <PyUnicode_FromFormat@plt>
    b284:	ldp	x29, x30, [sp], #32
    b288:	ret
    b28c:	stp	x29, x30, [sp, #-32]!
    b290:	mov	x29, sp
    b294:	str	x0, [sp, #24]
    b298:	str	x1, [sp, #16]
    b29c:	ldr	x0, [sp, #24]
    b2a0:	ldrb	w0, [x0, #25]
    b2a4:	lsl	w0, w0, #8
    b2a8:	ldr	x1, [sp, #24]
    b2ac:	ldrb	w1, [x1, #26]
    b2b0:	orr	w1, w0, w1
    b2b4:	ldr	x0, [sp, #24]
    b2b8:	ldrb	w0, [x0, #27]
    b2bc:	mov	w2, w0
    b2c0:	ldr	x0, [sp, #24]
    b2c4:	ldrb	w0, [x0, #28]
    b2c8:	mov	w3, w0
    b2cc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b2d0:	add	x0, x0, #0x5a0
    b2d4:	bl	4740 <PyUnicode_FromFormat@plt>
    b2d8:	ldp	x29, x30, [sp], #32
    b2dc:	ret
    b2e0:	stp	x29, x30, [sp, #-32]!
    b2e4:	mov	x29, sp
    b2e8:	str	x0, [sp, #24]
    b2ec:	mov	x2, #0x0                   	// #0
    b2f0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b2f4:	add	x1, x0, #0xca0
    b2f8:	ldr	x0, [sp, #24]
    b2fc:	bl	4aa0 <_PyObject_CallMethodId@plt>
    b300:	ldp	x29, x30, [sp], #32
    b304:	ret
    b308:	stp	x29, x30, [sp, #-32]!
    b30c:	mov	x29, sp
    b310:	str	x0, [sp, #24]
    b314:	str	x1, [sp, #16]
    b318:	mov	w3, #0x0                   	// #0
    b31c:	mov	w2, #0x0                   	// #0
    b320:	mov	w1, #0x0                   	// #0
    b324:	ldr	x0, [sp, #24]
    b328:	bl	73ec <PyNumber_FloorDivide@plt+0x279c>
    b32c:	ldp	x29, x30, [sp], #32
    b330:	ret
    b334:	stp	x29, x30, [sp, #-80]!
    b338:	mov	x29, sp
    b33c:	str	x0, [sp, #40]
    b340:	str	x1, [sp, #32]
    b344:	str	x2, [sp, #24]
    b348:	add	x0, sp, #0x38
    b34c:	mov	x4, x0
    b350:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    b354:	add	x3, x0, #0xe98
    b358:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b35c:	add	x2, x0, #0x5b0
    b360:	ldr	x1, [sp, #24]
    b364:	ldr	x0, [sp, #32]
    b368:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    b36c:	cmp	w0, #0x0
    b370:	b.ne	b37c <PyNumber_FloorDivide@plt+0x672c>  // b.any
    b374:	mov	x0, #0x0                   	// #0
    b378:	b	b3dc <PyNumber_FloorDivide@plt+0x678c>
    b37c:	mov	x2, #0x0                   	// #0
    b380:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    b384:	add	x1, x0, #0xea8
    b388:	ldr	x0, [sp, #40]
    b38c:	bl	4aa0 <_PyObject_CallMethodId@plt>
    b390:	str	x0, [sp, #72]
    b394:	ldr	x0, [sp, #72]
    b398:	cmp	x0, #0x0
    b39c:	b.ne	b3a8 <PyNumber_FloorDivide@plt+0x6758>  // b.any
    b3a0:	mov	x0, #0x0                   	// #0
    b3a4:	b	b3dc <PyNumber_FloorDivide@plt+0x678c>
    b3a8:	ldr	x0, [sp, #56]
    b3ac:	ldr	x3, [sp, #40]
    b3b0:	ldr	x2, [sp, #72]
    b3b4:	mov	x1, x0
    b3b8:	ldr	x0, [sp, #40]
    b3bc:	bl	7980 <PyNumber_FloorDivide@plt+0x2d30>
    b3c0:	str	x0, [sp, #64]
    b3c4:	ldr	x2, [sp, #72]
    b3c8:	mov	w1, #0xc81                 	// #3201
    b3cc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    b3d0:	add	x0, x0, #0xb30
    b3d4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    b3d8:	ldr	x0, [sp, #64]
    b3dc:	ldp	x29, x30, [sp], #80
    b3e0:	ret
    b3e4:	stp	x29, x30, [sp, #-48]!
    b3e8:	mov	x29, sp
    b3ec:	str	x0, [sp, #24]
    b3f0:	str	x1, [sp, #16]
    b3f4:	add	x0, sp, #0x28
    b3f8:	mov	x2, x0
    b3fc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b400:	add	x1, x0, #0x5c0
    b404:	ldr	x0, [sp, #16]
    b408:	bl	4a70 <PyArg_ParseTuple@plt>
    b40c:	cmp	w0, #0x0
    b410:	b.ne	b41c <PyNumber_FloorDivide@plt+0x67cc>  // b.any
    b414:	mov	x0, #0x0                   	// #0
    b418:	b	b454 <PyNumber_FloorDivide@plt+0x6804>
    b41c:	ldr	x0, [sp, #40]
    b420:	bl	4910 <PyUnicode_GetLength@plt>
    b424:	cmp	x0, #0x0
    b428:	b.ne	b438 <PyNumber_FloorDivide@plt+0x67e8>  // b.any
    b42c:	ldr	x0, [sp, #24]
    b430:	bl	4890 <PyObject_Str@plt>
    b434:	b	b454 <PyNumber_FloorDivide@plt+0x6804>
    b438:	ldr	x0, [sp, #40]
    b43c:	mov	x3, #0x0                   	// #0
    b440:	mov	x2, x0
    b444:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b448:	add	x1, x0, #0xcb8
    b44c:	ldr	x0, [sp, #24]
    b450:	bl	4b30 <_PyObject_CallMethodIdObjArgs@plt>
    b454:	ldp	x29, x30, [sp], #48
    b458:	ret
    b45c:	stp	x29, x30, [sp, #-48]!
    b460:	mov	x29, sp
    b464:	str	x0, [sp, #24]
    b468:	str	x1, [sp, #16]
    b46c:	ldr	x0, [sp, #24]
    b470:	ldrb	w0, [x0, #25]
    b474:	lsl	w0, w0, #8
    b478:	ldr	x1, [sp, #24]
    b47c:	ldrb	w1, [x1, #26]
    b480:	orr	w3, w0, w1
    b484:	ldr	x0, [sp, #24]
    b488:	ldrb	w0, [x0, #27]
    b48c:	mov	w1, w0
    b490:	ldr	x0, [sp, #24]
    b494:	ldrb	w0, [x0, #28]
    b498:	mov	w2, w0
    b49c:	mov	w0, w3
    b4a0:	bl	5794 <PyNumber_FloorDivide@plt+0xb44>
    b4a4:	str	w0, [sp, #44]
    b4a8:	ldr	w0, [sp, #44]
    b4ac:	add	w0, w0, #0x1
    b4b0:	sxtw	x0, w0
    b4b4:	bl	4940 <PyLong_FromLong@plt>
    b4b8:	ldp	x29, x30, [sp], #48
    b4bc:	ret
    b4c0:	stp	x29, x30, [sp, #-64]!
    b4c4:	mov	x29, sp
    b4c8:	str	x0, [sp, #24]
    b4cc:	str	x1, [sp, #16]
    b4d0:	ldr	x0, [sp, #24]
    b4d4:	ldrb	w0, [x0, #25]
    b4d8:	lsl	w0, w0, #8
    b4dc:	ldr	x1, [sp, #24]
    b4e0:	ldrb	w1, [x1, #26]
    b4e4:	orr	w0, w0, w1
    b4e8:	str	w0, [sp, #60]
    b4ec:	ldr	w0, [sp, #60]
    b4f0:	bl	57f8 <PyNumber_FloorDivide@plt+0xba8>
    b4f4:	str	w0, [sp, #52]
    b4f8:	ldr	x0, [sp, #24]
    b4fc:	ldrb	w0, [x0, #27]
    b500:	mov	w1, w0
    b504:	ldr	x0, [sp, #24]
    b508:	ldrb	w0, [x0, #28]
    b50c:	mov	w2, w0
    b510:	ldr	w0, [sp, #60]
    b514:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    b518:	str	w0, [sp, #48]
    b51c:	ldr	w1, [sp, #48]
    b520:	ldr	w0, [sp, #52]
    b524:	sub	w0, w1, w0
    b528:	add	x1, sp, #0x2c
    b52c:	mov	x2, x1
    b530:	mov	w1, #0x7                   	// #7
    b534:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    b538:	str	w0, [sp, #56]
    b53c:	ldr	w0, [sp, #56]
    b540:	cmp	w0, #0x0
    b544:	b.ge	b584 <PyNumber_FloorDivide@plt+0x6934>  // b.tcont
    b548:	ldr	w0, [sp, #60]
    b54c:	sub	w0, w0, #0x1
    b550:	str	w0, [sp, #60]
    b554:	ldr	w0, [sp, #60]
    b558:	bl	57f8 <PyNumber_FloorDivide@plt+0xba8>
    b55c:	str	w0, [sp, #52]
    b560:	ldr	w1, [sp, #48]
    b564:	ldr	w0, [sp, #52]
    b568:	sub	w0, w1, w0
    b56c:	add	x1, sp, #0x2c
    b570:	mov	x2, x1
    b574:	mov	w1, #0x7                   	// #7
    b578:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    b57c:	str	w0, [sp, #56]
    b580:	b	b5bc <PyNumber_FloorDivide@plt+0x696c>
    b584:	ldr	w0, [sp, #56]
    b588:	cmp	w0, #0x33
    b58c:	b.le	b5bc <PyNumber_FloorDivide@plt+0x696c>
    b590:	ldr	w0, [sp, #60]
    b594:	add	w0, w0, #0x1
    b598:	bl	57f8 <PyNumber_FloorDivide@plt+0xba8>
    b59c:	mov	w1, w0
    b5a0:	ldr	w0, [sp, #48]
    b5a4:	cmp	w0, w1
    b5a8:	b.lt	b5bc <PyNumber_FloorDivide@plt+0x696c>  // b.tstop
    b5ac:	ldr	w0, [sp, #60]
    b5b0:	add	w0, w0, #0x1
    b5b4:	str	w0, [sp, #60]
    b5b8:	str	wzr, [sp, #56]
    b5bc:	ldr	w0, [sp, #56]
    b5c0:	add	w1, w0, #0x1
    b5c4:	ldr	w0, [sp, #44]
    b5c8:	add	w0, w0, #0x1
    b5cc:	mov	w3, w0
    b5d0:	mov	w2, w1
    b5d4:	ldr	w1, [sp, #60]
    b5d8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    b5dc:	add	x0, x0, #0xcf0
    b5e0:	bl	49e0 <Py_BuildValue@plt>
    b5e4:	ldp	x29, x30, [sp], #64
    b5e8:	ret
    b5ec:	stp	x29, x30, [sp, #-64]!
    b5f0:	mov	x29, sp
    b5f4:	str	x0, [sp, #40]
    b5f8:	str	x1, [sp, #32]
    b5fc:	str	w2, [sp, #28]
    b600:	ldr	x0, [sp, #32]
    b604:	ldr	x1, [x0, #8]
    b608:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b60c:	add	x0, x0, #0x2b0
    b610:	cmp	x1, x0
    b614:	b.eq	b638 <PyNumber_FloorDivide@plt+0x69e8>  // b.none
    b618:	ldr	x0, [sp, #32]
    b61c:	ldr	x2, [x0, #8]
    b620:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b624:	add	x1, x0, #0x2b0
    b628:	mov	x0, x2
    b62c:	bl	4b80 <PyType_IsSubtype@plt>
    b630:	cmp	w0, #0x0
    b634:	b.eq	b66c <PyNumber_FloorDivide@plt+0x6a1c>  // b.none
    b638:	ldr	x0, [sp, #40]
    b63c:	add	x3, x0, #0x19
    b640:	ldr	x0, [sp, #32]
    b644:	add	x0, x0, #0x19
    b648:	mov	x2, #0x4                   	// #4
    b64c:	mov	x1, x0
    b650:	mov	x0, x3
    b654:	bl	4a20 <memcmp@plt>
    b658:	str	w0, [sp, #60]
    b65c:	ldr	w1, [sp, #28]
    b660:	ldr	w0, [sp, #60]
    b664:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
    b668:	b	b680 <PyNumber_FloorDivide@plt+0x6a30>
    b66c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b670:	ldr	x0, [x0, #3960]
    b674:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    b678:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b67c:	ldr	x0, [x0, #3960]
    b680:	ldp	x29, x30, [sp], #64
    b684:	ret
    b688:	stp	x29, x30, [sp, #-32]!
    b68c:	mov	x29, sp
    b690:	str	x0, [sp, #24]
    b694:	str	x1, [sp, #16]
    b698:	ldr	x0, [sp, #24]
    b69c:	ldrb	w0, [x0, #25]
    b6a0:	lsl	w0, w0, #8
    b6a4:	ldr	x1, [sp, #24]
    b6a8:	ldrb	w1, [x1, #26]
    b6ac:	orr	w7, w0, w1
    b6b0:	ldr	x0, [sp, #24]
    b6b4:	ldrb	w0, [x0, #27]
    b6b8:	mov	w1, w0
    b6bc:	ldr	x0, [sp, #24]
    b6c0:	ldrb	w0, [x0, #28]
    b6c4:	mov	w6, #0xffffffff            	// #-1
    b6c8:	mov	w5, #0x0                   	// #0
    b6cc:	mov	w4, #0x0                   	// #0
    b6d0:	mov	w3, #0x0                   	// #0
    b6d4:	mov	w2, w0
    b6d8:	mov	w0, w7
    b6dc:	bl	7e6c <PyNumber_FloorDivide@plt+0x321c>
    b6e0:	ldp	x29, x30, [sp], #32
    b6e4:	ret
    b6e8:	stp	x29, x30, [sp, #-80]!
    b6ec:	mov	x29, sp
    b6f0:	str	x0, [sp, #40]
    b6f4:	str	x1, [sp, #32]
    b6f8:	str	x2, [sp, #24]
    b6fc:	ldr	x0, [sp, #40]
    b700:	ldrb	w0, [x0, #25]
    b704:	lsl	w0, w0, #8
    b708:	ldr	x1, [sp, #40]
    b70c:	ldrb	w1, [x1, #26]
    b710:	orr	w0, w0, w1
    b714:	str	w0, [sp, #60]
    b718:	ldr	x0, [sp, #40]
    b71c:	ldrb	w0, [x0, #27]
    b720:	str	w0, [sp, #56]
    b724:	ldr	x0, [sp, #40]
    b728:	ldrb	w0, [x0, #28]
    b72c:	str	w0, [sp, #52]
    b730:	add	x2, sp, #0x34
    b734:	add	x1, sp, #0x38
    b738:	add	x0, sp, #0x3c
    b73c:	mov	x6, x2
    b740:	mov	x5, x1
    b744:	mov	x4, x0
    b748:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    b74c:	add	x3, x0, #0xf90
    b750:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b754:	add	x2, x0, #0x5d0
    b758:	ldr	x1, [sp, #24]
    b75c:	ldr	x0, [sp, #32]
    b760:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    b764:	cmp	w0, #0x0
    b768:	b.ne	b774 <PyNumber_FloorDivide@plt+0x6b24>  // b.any
    b76c:	mov	x0, #0x0                   	// #0
    b770:	b	b7e0 <PyNumber_FloorDivide@plt+0x6b90>
    b774:	ldr	w0, [sp, #60]
    b778:	ldr	w1, [sp, #56]
    b77c:	ldr	w2, [sp, #52]
    b780:	mov	w3, w2
    b784:	mov	w2, w1
    b788:	mov	w1, w0
    b78c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    b790:	add	x0, x0, #0xcf0
    b794:	bl	49e0 <Py_BuildValue@plt>
    b798:	str	x0, [sp, #72]
    b79c:	ldr	x0, [sp, #72]
    b7a0:	cmp	x0, #0x0
    b7a4:	b.ne	b7b0 <PyNumber_FloorDivide@plt+0x6b60>  // b.any
    b7a8:	mov	x0, #0x0                   	// #0
    b7ac:	b	b7e0 <PyNumber_FloorDivide@plt+0x6b90>
    b7b0:	ldr	x0, [sp, #40]
    b7b4:	ldr	x0, [x0, #8]
    b7b8:	mov	x2, #0x0                   	// #0
    b7bc:	ldr	x1, [sp, #72]
    b7c0:	bl	a558 <PyNumber_FloorDivide@plt+0x5908>
    b7c4:	str	x0, [sp, #64]
    b7c8:	ldr	x2, [sp, #72]
    b7cc:	mov	w1, #0xcdd                 	// #3293
    b7d0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    b7d4:	add	x0, x0, #0xb30
    b7d8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    b7dc:	ldr	x0, [sp, #64]
    b7e0:	ldp	x29, x30, [sp], #80
    b7e4:	ret
    b7e8:	stp	x29, x30, [sp, #-32]!
    b7ec:	mov	x29, sp
    b7f0:	str	x0, [sp, #24]
    b7f4:	str	w1, [sp, #20]
    b7f8:	ldrsw	x0, [sp, #20]
    b7fc:	mov	x1, x0
    b800:	ldr	x0, [sp, #24]
    b804:	bl	48f0 <_Py_HashBytes@plt>
    b808:	ldp	x29, x30, [sp], #32
    b80c:	ret
    b810:	stp	x29, x30, [sp, #-32]!
    b814:	mov	x29, sp
    b818:	str	x0, [sp, #24]
    b81c:	ldr	x0, [sp, #24]
    b820:	ldr	x0, [x0, #16]
    b824:	cmn	x0, #0x1
    b828:	b.ne	b848 <PyNumber_FloorDivide@plt+0x6bf8>  // b.any
    b82c:	ldr	x0, [sp, #24]
    b830:	add	x0, x0, #0x19
    b834:	mov	w1, #0x4                   	// #4
    b838:	bl	b7e8 <PyNumber_FloorDivide@plt+0x6b98>
    b83c:	mov	x1, x0
    b840:	ldr	x0, [sp, #24]
    b844:	str	x1, [x0, #16]
    b848:	ldr	x0, [sp, #24]
    b84c:	ldr	x0, [x0, #16]
    b850:	ldp	x29, x30, [sp], #32
    b854:	ret
    b858:	stp	x29, x30, [sp, #-32]!
    b85c:	mov	x29, sp
    b860:	str	x0, [sp, #24]
    b864:	str	x1, [sp, #16]
    b868:	ldr	x0, [sp, #24]
    b86c:	ldrb	w0, [x0, #25]
    b870:	lsl	w0, w0, #8
    b874:	ldr	x1, [sp, #24]
    b878:	ldrb	w1, [x1, #26]
    b87c:	orr	w3, w0, w1
    b880:	ldr	x0, [sp, #24]
    b884:	ldrb	w0, [x0, #27]
    b888:	mov	w1, w0
    b88c:	ldr	x0, [sp, #24]
    b890:	ldrb	w0, [x0, #28]
    b894:	mov	w2, w0
    b898:	mov	w0, w3
    b89c:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    b8a0:	sxtw	x0, w0
    b8a4:	bl	4940 <PyLong_FromLong@plt>
    b8a8:	ldp	x29, x30, [sp], #32
    b8ac:	ret
    b8b0:	stp	x29, x30, [sp, #-48]!
    b8b4:	mov	x29, sp
    b8b8:	str	x0, [sp, #24]
    b8bc:	str	x1, [sp, #16]
    b8c0:	ldr	x0, [sp, #24]
    b8c4:	ldrb	w0, [x0, #25]
    b8c8:	lsl	w0, w0, #8
    b8cc:	ldr	x1, [sp, #24]
    b8d0:	ldrb	w1, [x1, #26]
    b8d4:	orr	w3, w0, w1
    b8d8:	ldr	x0, [sp, #24]
    b8dc:	ldrb	w0, [x0, #27]
    b8e0:	mov	w1, w0
    b8e4:	ldr	x0, [sp, #24]
    b8e8:	ldrb	w0, [x0, #28]
    b8ec:	mov	w2, w0
    b8f0:	mov	w0, w3
    b8f4:	bl	5794 <PyNumber_FloorDivide@plt+0xb44>
    b8f8:	str	w0, [sp, #44]
    b8fc:	ldrsw	x0, [sp, #44]
    b900:	bl	4940 <PyLong_FromLong@plt>
    b904:	ldp	x29, x30, [sp], #48
    b908:	ret
    b90c:	stp	x29, x30, [sp, #-48]!
    b910:	mov	x29, sp
    b914:	str	x0, [sp, #24]
    b918:	ldr	x0, [sp, #24]
    b91c:	add	x0, x0, #0x19
    b920:	mov	x1, #0x4                   	// #4
    b924:	bl	4840 <PyBytes_FromStringAndSize@plt>
    b928:	str	x0, [sp, #40]
    b92c:	ldr	x1, [sp, #40]
    b930:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b934:	add	x0, x0, #0x5e0
    b938:	bl	49e0 <Py_BuildValue@plt>
    b93c:	ldp	x29, x30, [sp], #48
    b940:	ret
    b944:	stp	x29, x30, [sp, #-48]!
    b948:	mov	x29, sp
    b94c:	str	x19, [sp, #16]
    b950:	str	x0, [sp, #40]
    b954:	str	x1, [sp, #32]
    b958:	ldr	x0, [sp, #40]
    b95c:	ldr	x19, [x0, #8]
    b960:	ldr	x0, [sp, #40]
    b964:	bl	b90c <PyNumber_FloorDivide@plt+0x6cbc>
    b968:	mov	x2, x0
    b96c:	mov	x1, x19
    b970:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b974:	add	x0, x0, #0x5e8
    b978:	bl	49e0 <Py_BuildValue@plt>
    b97c:	ldr	x19, [sp, #16]
    b980:	ldp	x29, x30, [sp], #48
    b984:	ret
    b988:	stp	x29, x30, [sp, #-32]!
    b98c:	mov	x29, sp
    b990:	str	x0, [sp, #24]
    b994:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    b998:	ldr	x0, [x0, #3928]
    b99c:	ldr	x3, [x0]
    b9a0:	ldr	x2, [sp, #24]
    b9a4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b9a8:	add	x1, x0, #0xa30
    b9ac:	mov	x0, x3
    b9b0:	bl	4bb0 <PyErr_Format@plt>
    b9b4:	mov	x0, #0x0                   	// #0
    b9b8:	ldp	x29, x30, [sp], #32
    b9bc:	ret
    b9c0:	stp	x29, x30, [sp, #-32]!
    b9c4:	mov	x29, sp
    b9c8:	str	x0, [sp, #24]
    b9cc:	str	x1, [sp, #16]
    b9d0:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    b9d4:	add	x0, x0, #0xa58
    b9d8:	bl	b988 <PyNumber_FloorDivide@plt+0x6d38>
    b9dc:	ldp	x29, x30, [sp], #32
    b9e0:	ret
    b9e4:	stp	x29, x30, [sp, #-32]!
    b9e8:	mov	x29, sp
    b9ec:	str	x0, [sp, #24]
    b9f0:	str	x1, [sp, #16]
    b9f4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    b9f8:	add	x0, x0, #0xe58
    b9fc:	bl	b988 <PyNumber_FloorDivide@plt+0x6d38>
    ba00:	ldp	x29, x30, [sp], #32
    ba04:	ret
    ba08:	stp	x29, x30, [sp, #-32]!
    ba0c:	mov	x29, sp
    ba10:	str	x0, [sp, #24]
    ba14:	str	x1, [sp, #16]
    ba18:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    ba1c:	add	x0, x0, #0xe68
    ba20:	bl	b988 <PyNumber_FloorDivide@plt+0x6d38>
    ba24:	ldp	x29, x30, [sp], #32
    ba28:	ret
    ba2c:	stp	x29, x30, [sp, #-80]!
    ba30:	mov	x29, sp
    ba34:	str	x0, [sp, #24]
    ba38:	str	x1, [sp, #16]
    ba3c:	str	xzr, [sp, #72]
    ba40:	str	xzr, [sp, #48]
    ba44:	str	xzr, [sp, #64]
    ba48:	str	xzr, [sp, #56]
    ba4c:	ldr	x0, [sp, #16]
    ba50:	ldr	x1, [x0, #8]
    ba54:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    ba58:	add	x0, x0, #0x450
    ba5c:	cmp	x1, x0
    ba60:	b.eq	baa8 <PyNumber_FloorDivide@plt+0x6e58>  // b.none
    ba64:	ldr	x0, [sp, #16]
    ba68:	ldr	x2, [x0, #8]
    ba6c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    ba70:	add	x1, x0, #0x450
    ba74:	mov	x0, x2
    ba78:	bl	4b80 <PyType_IsSubtype@plt>
    ba7c:	cmp	w0, #0x0
    ba80:	b.ne	baa8 <PyNumber_FloorDivide@plt+0x6e58>  // b.any
    ba84:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ba88:	ldr	x0, [x0, #3976]
    ba8c:	ldr	x2, [x0]
    ba90:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ba94:	add	x1, x0, #0xa60
    ba98:	mov	x0, x2
    ba9c:	bl	48c0 <PyErr_SetString@plt>
    baa0:	mov	x0, #0x0                   	// #0
    baa4:	b	bd40 <PyNumber_FloorDivide@plt+0x70f0>
    baa8:	ldr	x0, [sp, #16]
    baac:	ldrb	w0, [x0, #24]
    bab0:	cmp	w0, #0x0
    bab4:	b.eq	bac4 <PyNumber_FloorDivide@plt+0x6e74>  // b.none
    bab8:	ldr	x0, [sp, #16]
    babc:	ldr	x0, [x0, #40]
    bac0:	b	bacc <PyNumber_FloorDivide@plt+0x6e7c>
    bac4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bac8:	ldr	x0, [x0, #4024]
    bacc:	ldr	x1, [sp, #24]
    bad0:	cmp	x0, x1
    bad4:	b.eq	bafc <PyNumber_FloorDivide@plt+0x6eac>  // b.none
    bad8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    badc:	ldr	x0, [x0, #3968]
    bae0:	ldr	x2, [x0]
    bae4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    bae8:	add	x1, x0, #0xa88
    baec:	mov	x0, x2
    baf0:	bl	48c0 <PyErr_SetString@plt>
    baf4:	mov	x0, #0x0                   	// #0
    baf8:	b	bd40 <PyNumber_FloorDivide@plt+0x70f0>
    bafc:	mov	x1, #0x0                   	// #0
    bb00:	ldr	x0, [sp, #16]
    bb04:	bl	f3c8 <PyNumber_FloorDivide@plt+0xa778>
    bb08:	str	x0, [sp, #48]
    bb0c:	ldr	x0, [sp, #48]
    bb10:	cmp	x0, #0x0
    bb14:	b.ne	bb20 <PyNumber_FloorDivide@plt+0x6ed0>  // b.any
    bb18:	mov	x0, #0x0                   	// #0
    bb1c:	b	bd40 <PyNumber_FloorDivide@plt+0x70f0>
    bb20:	ldr	x1, [sp, #48]
    bb24:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bb28:	ldr	x0, [x0, #4024]
    bb2c:	cmp	x1, x0
    bb30:	b.ne	bb54 <PyNumber_FloorDivide@plt+0x6f04>  // b.any
    bb34:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bb38:	ldr	x0, [x0, #3968]
    bb3c:	ldr	x2, [x0]
    bb40:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    bb44:	add	x1, x0, #0xaa8
    bb48:	mov	x0, x2
    bb4c:	bl	48c0 <PyErr_SetString@plt>
    bb50:	b	bd1c <PyNumber_FloorDivide@plt+0x70cc>
    bb54:	mov	x1, #0x0                   	// #0
    bb58:	ldr	x0, [sp, #16]
    bb5c:	bl	f40c <PyNumber_FloorDivide@plt+0xa7bc>
    bb60:	str	x0, [sp, #64]
    bb64:	ldr	x0, [sp, #64]
    bb68:	cmp	x0, #0x0
    bb6c:	b.eq	bcf8 <PyNumber_FloorDivide@plt+0x70a8>  // b.none
    bb70:	ldr	x1, [sp, #64]
    bb74:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bb78:	ldr	x0, [x0, #4024]
    bb7c:	cmp	x1, x0
    bb80:	b.ne	bba4 <PyNumber_FloorDivide@plt+0x6f54>  // b.any
    bb84:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bb88:	ldr	x0, [x0, #3968]
    bb8c:	ldr	x2, [x0]
    bb90:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    bb94:	add	x1, x0, #0xad8
    bb98:	mov	x0, x2
    bb9c:	bl	48c0 <PyErr_SetString@plt>
    bba0:	b	bd1c <PyNumber_FloorDivide@plt+0x70cc>
    bba4:	ldr	x1, [sp, #64]
    bba8:	ldr	x0, [sp, #48]
    bbac:	bl	8e00 <PyNumber_FloorDivide@plt+0x41b0>
    bbb0:	str	x0, [sp, #56]
    bbb4:	ldr	x0, [sp, #56]
    bbb8:	cmp	x0, #0x0
    bbbc:	b.eq	bd00 <PyNumber_FloorDivide@plt+0x70b0>  // b.none
    bbc0:	mov	w2, #0x1                   	// #1
    bbc4:	ldr	x1, [sp, #56]
    bbc8:	ldr	x0, [sp, #16]
    bbcc:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
    bbd0:	str	x0, [sp, #72]
    bbd4:	ldr	x0, [sp, #72]
    bbd8:	cmp	x0, #0x0
    bbdc:	b.eq	bd08 <PyNumber_FloorDivide@plt+0x70b8>  // b.none
    bbe0:	ldr	x2, [sp, #64]
    bbe4:	mov	w1, #0xdf2                 	// #3570
    bbe8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bbec:	add	x0, x0, #0xb30
    bbf0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    bbf4:	ldr	x0, [sp, #16]
    bbf8:	ldrb	w0, [x0, #24]
    bbfc:	cmp	w0, #0x0
    bc00:	b.eq	bc10 <PyNumber_FloorDivide@plt+0x6fc0>  // b.none
    bc04:	ldr	x0, [sp, #16]
    bc08:	ldr	x0, [x0, #40]
    bc0c:	b	bc18 <PyNumber_FloorDivide@plt+0x6fc8>
    bc10:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bc14:	ldr	x0, [x0, #4024]
    bc18:	ldr	x1, [sp, #72]
    bc1c:	bl	70bc <PyNumber_FloorDivide@plt+0x246c>
    bc20:	str	x0, [sp, #64]
    bc24:	ldr	x0, [sp, #64]
    bc28:	cmp	x0, #0x0
    bc2c:	b.eq	bd10 <PyNumber_FloorDivide@plt+0x70c0>  // b.none
    bc30:	ldr	x1, [sp, #64]
    bc34:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bc38:	ldr	x0, [x0, #4024]
    bc3c:	cmp	x1, x0
    bc40:	b.eq	bcd4 <PyNumber_FloorDivide@plt+0x7084>  // b.none
    bc44:	ldr	x0, [sp, #64]
    bc48:	bl	9f98 <PyNumber_FloorDivide@plt+0x5348>
    bc4c:	cmp	w0, #0x0
    bc50:	b.eq	bc90 <PyNumber_FloorDivide@plt+0x7040>  // b.none
    bc54:	ldr	x0, [sp, #72]
    bc58:	str	x0, [sp, #40]
    bc5c:	mov	w2, #0x1                   	// #1
    bc60:	ldr	x1, [sp, #64]
    bc64:	ldr	x0, [sp, #72]
    bc68:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
    bc6c:	str	x0, [sp, #72]
    bc70:	ldr	x2, [sp, #40]
    bc74:	mov	w1, #0xdf9                 	// #3577
    bc78:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bc7c:	add	x0, x0, #0xb30
    bc80:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    bc84:	ldr	x0, [sp, #72]
    bc88:	cmp	x0, #0x0
    bc8c:	b.eq	bd18 <PyNumber_FloorDivide@plt+0x70c8>  // b.none
    bc90:	ldr	x2, [sp, #56]
    bc94:	mov	w1, #0xdfe                 	// #3582
    bc98:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bc9c:	add	x0, x0, #0xb30
    bca0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    bca4:	ldr	x2, [sp, #64]
    bca8:	mov	w1, #0xdff                 	// #3583
    bcac:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bcb0:	add	x0, x0, #0xb30
    bcb4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    bcb8:	ldr	x2, [sp, #48]
    bcbc:	mov	w1, #0xe00                 	// #3584
    bcc0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bcc4:	add	x0, x0, #0xb30
    bcc8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    bccc:	ldr	x0, [sp, #72]
    bcd0:	b	bd40 <PyNumber_FloorDivide@plt+0x70f0>
    bcd4:	nop
    bcd8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    bcdc:	ldr	x0, [x0, #3968]
    bce0:	ldr	x2, [x0]
    bce4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    bce8:	add	x1, x0, #0xb00
    bcec:	mov	x0, x2
    bcf0:	bl	48c0 <PyErr_SetString@plt>
    bcf4:	b	bd1c <PyNumber_FloorDivide@plt+0x70cc>
    bcf8:	nop
    bcfc:	b	bd1c <PyNumber_FloorDivide@plt+0x70cc>
    bd00:	nop
    bd04:	b	bd1c <PyNumber_FloorDivide@plt+0x70cc>
    bd08:	nop
    bd0c:	b	bd1c <PyNumber_FloorDivide@plt+0x70cc>
    bd10:	nop
    bd14:	b	bd1c <PyNumber_FloorDivide@plt+0x70cc>
    bd18:	nop
    bd1c:	ldr	x0, [sp, #48]
    bd20:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    bd24:	ldr	x0, [sp, #64]
    bd28:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    bd2c:	ldr	x0, [sp, #56]
    bd30:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    bd34:	ldr	x0, [sp, #72]
    bd38:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    bd3c:	mov	x0, #0x0                   	// #0
    bd40:	ldp	x29, x30, [sp], #80
    bd44:	ret
    bd48:	stp	x29, x30, [sp, #-80]!
    bd4c:	mov	x29, sp
    bd50:	str	x0, [sp, #24]
    bd54:	str	x1, [sp, #16]
    bd58:	add	x0, sp, #0x30
    bd5c:	mov	x2, x0
    bd60:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    bd64:	add	x1, x0, #0xec0
    bd68:	ldr	x0, [sp, #24]
    bd6c:	bl	47a0 <_PyObject_LookupAttrId@plt>
    bd70:	cmp	w0, #0x0
    bd74:	b.ge	bd80 <PyNumber_FloorDivide@plt+0x7130>  // b.tcont
    bd78:	mov	x0, #0x0                   	// #0
    bd7c:	b	bf2c <PyNumber_FloorDivide@plt+0x72dc>
    bd80:	ldr	x0, [sp, #48]
    bd84:	cmp	x0, #0x0
    bd88:	b.eq	bdb4 <PyNumber_FloorDivide@plt+0x7164>  // b.none
    bd8c:	ldr	x0, [sp, #48]
    bd90:	bl	5050 <PyNumber_FloorDivide@plt+0x400>
    bd94:	str	x0, [sp, #72]
    bd98:	ldr	x0, [sp, #48]
    bd9c:	mov	x2, x0
    bda0:	mov	w1, #0xe22                 	// #3618
    bda4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bda8:	add	x0, x0, #0xb30
    bdac:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    bdb0:	b	bdc0 <PyNumber_FloorDivide@plt+0x7170>
    bdb4:	mov	x0, #0x0                   	// #0
    bdb8:	bl	49b0 <PyTuple_New@plt>
    bdbc:	str	x0, [sp, #72]
    bdc0:	ldr	x0, [sp, #72]
    bdc4:	cmp	x0, #0x0
    bdc8:	b.ne	bdd4 <PyNumber_FloorDivide@plt+0x7184>  // b.any
    bdcc:	mov	x0, #0x0                   	// #0
    bdd0:	b	bf2c <PyNumber_FloorDivide@plt+0x72dc>
    bdd4:	add	x0, sp, #0x28
    bdd8:	mov	x2, x0
    bddc:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    bde0:	add	x1, x0, #0xed8
    bde4:	ldr	x0, [sp, #24]
    bde8:	bl	47a0 <_PyObject_LookupAttrId@plt>
    bdec:	cmp	w0, #0x0
    bdf0:	b.ge	be10 <PyNumber_FloorDivide@plt+0x71c0>  // b.tcont
    bdf4:	ldr	x2, [sp, #72]
    bdf8:	mov	w1, #0xe2c                 	// #3628
    bdfc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    be00:	add	x0, x0, #0xb30
    be04:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    be08:	mov	x0, #0x0                   	// #0
    be0c:	b	bf2c <PyNumber_FloorDivide@plt+0x72dc>
    be10:	ldr	x0, [sp, #40]
    be14:	cmp	x0, #0x0
    be18:	b.eq	be68 <PyNumber_FloorDivide@plt+0x7218>  // b.none
    be1c:	ldr	x0, [sp, #40]
    be20:	bl	5050 <PyNumber_FloorDivide@plt+0x400>
    be24:	str	x0, [sp, #64]
    be28:	ldr	x0, [sp, #40]
    be2c:	mov	x2, x0
    be30:	mov	w1, #0xe31                 	// #3633
    be34:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    be38:	add	x0, x0, #0xb30
    be3c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    be40:	ldr	x0, [sp, #64]
    be44:	cmp	x0, #0x0
    be48:	b.ne	bec4 <PyNumber_FloorDivide@plt+0x7274>  // b.any
    be4c:	ldr	x2, [sp, #72]
    be50:	mov	w1, #0xe33                 	// #3635
    be54:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    be58:	add	x0, x0, #0xb30
    be5c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    be60:	mov	x0, #0x0                   	// #0
    be64:	b	bf2c <PyNumber_FloorDivide@plt+0x72dc>
    be68:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    be6c:	ldr	x0, [x0, #4024]
    be70:	str	x0, [sp, #64]
    be74:	ldr	x0, [sp, #24]
    be78:	bl	4b10 <_PyObject_GetDictPtr@plt>
    be7c:	str	x0, [sp, #56]
    be80:	ldr	x0, [sp, #56]
    be84:	cmp	x0, #0x0
    be88:	b.eq	bebc <PyNumber_FloorDivide@plt+0x726c>  // b.none
    be8c:	ldr	x0, [sp, #56]
    be90:	ldr	x0, [x0]
    be94:	cmp	x0, #0x0
    be98:	b.eq	bebc <PyNumber_FloorDivide@plt+0x726c>  // b.none
    be9c:	ldr	x0, [sp, #56]
    bea0:	ldr	x0, [x0]
    bea4:	ldr	x0, [x0, #16]
    bea8:	cmp	x0, #0x0
    beac:	b.eq	bebc <PyNumber_FloorDivide@plt+0x726c>  // b.none
    beb0:	ldr	x0, [sp, #56]
    beb4:	ldr	x0, [x0]
    beb8:	str	x0, [sp, #64]
    bebc:	ldr	x0, [sp, #64]
    bec0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    bec4:	ldr	x1, [sp, #64]
    bec8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    becc:	ldr	x0, [x0, #4024]
    bed0:	cmp	x1, x0
    bed4:	b.ne	bf0c <PyNumber_FloorDivide@plt+0x72bc>  // b.any
    bed8:	ldr	x2, [sp, #64]
    bedc:	mov	w1, #0xe42                 	// #3650
    bee0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bee4:	add	x0, x0, #0xb30
    bee8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    beec:	ldr	x0, [sp, #24]
    bef0:	ldr	x0, [x0, #8]
    bef4:	ldr	x2, [sp, #72]
    bef8:	mov	x1, x0
    befc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    bf00:	add	x0, x0, #0x5e8
    bf04:	bl	49e0 <Py_BuildValue@plt>
    bf08:	b	bf2c <PyNumber_FloorDivide@plt+0x72dc>
    bf0c:	ldr	x0, [sp, #24]
    bf10:	ldr	x0, [x0, #8]
    bf14:	ldr	x3, [sp, #64]
    bf18:	ldr	x2, [sp, #72]
    bf1c:	mov	x1, x0
    bf20:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    bf24:	add	x0, x0, #0xb40
    bf28:	bl	49e0 <Py_BuildValue@plt>
    bf2c:	ldp	x29, x30, [sp], #80
    bf30:	ret
    bf34:	stp	x29, x30, [sp, #-64]!
    bf38:	mov	x29, sp
    bf3c:	str	x0, [sp, #40]
    bf40:	str	x1, [sp, #32]
    bf44:	str	x2, [sp, #24]
    bf48:	str	xzr, [sp, #48]
    bf4c:	add	x1, sp, #0x30
    bf50:	add	x0, sp, #0x38
    bf54:	mov	x6, x1
    bf58:	mov	x5, x0
    bf5c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    bf60:	add	x4, x0, #0x5f0
    bf64:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    bf68:	add	x3, x0, #0x3b0
    bf6c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    bf70:	add	x2, x0, #0xc88
    bf74:	ldr	x1, [sp, #24]
    bf78:	ldr	x0, [sp, #32]
    bf7c:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    bf80:	cmp	w0, #0x0
    bf84:	b.eq	bf98 <PyNumber_FloorDivide@plt+0x7348>  // b.none
    bf88:	ldr	x0, [sp, #56]
    bf8c:	ldr	x1, [sp, #48]
    bf90:	bl	6cb8 <PyNumber_FloorDivide@plt+0x2068>
    bf94:	b	bf9c <PyNumber_FloorDivide@plt+0x734c>
    bf98:	mov	x0, #0x0                   	// #0
    bf9c:	ldp	x29, x30, [sp], #64
    bfa0:	ret
    bfa4:	stp	x29, x30, [sp, #-48]!
    bfa8:	mov	x29, sp
    bfac:	str	x0, [sp, #24]
    bfb0:	ldr	x0, [sp, #24]
    bfb4:	ldr	x0, [x0, #16]
    bfb8:	str	x0, [sp, #40]
    bfbc:	ldr	x0, [sp, #40]
    bfc0:	cmp	x0, #0x0
    bfc4:	b.eq	bfe4 <PyNumber_FloorDivide@plt+0x7394>  // b.none
    bfc8:	ldr	x0, [sp, #24]
    bfcc:	str	xzr, [x0, #16]
    bfd0:	ldr	x2, [sp, #40]
    bfd4:	mov	w1, #0xe9c                 	// #3740
    bfd8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    bfdc:	add	x0, x0, #0xb30
    bfe0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    bfe4:	ldr	x0, [sp, #24]
    bfe8:	ldr	x0, [x0, #24]
    bfec:	str	x0, [sp, #32]
    bff0:	ldr	x0, [sp, #32]
    bff4:	cmp	x0, #0x0
    bff8:	b.eq	c018 <PyNumber_FloorDivide@plt+0x73c8>  // b.none
    bffc:	ldr	x0, [sp, #24]
    c000:	str	xzr, [x0, #24]
    c004:	ldr	x2, [sp, #32]
    c008:	mov	w1, #0xe9d                 	// #3741
    c00c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    c010:	add	x0, x0, #0xb30
    c014:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    c018:	ldr	x0, [sp, #24]
    c01c:	ldr	x0, [x0, #8]
    c020:	ldr	x1, [x0, #320]
    c024:	ldr	x0, [sp, #24]
    c028:	blr	x1
    c02c:	nop
    c030:	ldp	x29, x30, [sp], #48
    c034:	ret
    c038:	stp	x29, x30, [sp, #-48]!
    c03c:	mov	x29, sp
    c040:	str	x0, [sp, #40]
    c044:	str	x1, [sp, #32]
    c048:	str	w2, [sp, #28]
    c04c:	ldr	w0, [sp, #28]
    c050:	cmp	w0, #0x2
    c054:	b.eq	c07c <PyNumber_FloorDivide@plt+0x742c>  // b.none
    c058:	ldr	w0, [sp, #28]
    c05c:	cmp	w0, #0x3
    c060:	b.eq	c07c <PyNumber_FloorDivide@plt+0x742c>  // b.none
    c064:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c068:	ldr	x0, [x0, #3960]
    c06c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c070:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c074:	ldr	x0, [x0, #3960]
    c078:	b	c0ec <PyNumber_FloorDivide@plt+0x749c>
    c07c:	ldr	x0, [sp, #32]
    c080:	ldr	x1, [x0, #8]
    c084:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    c088:	add	x0, x0, #0xad0
    c08c:	cmp	x1, x0
    c090:	b.eq	c0cc <PyNumber_FloorDivide@plt+0x747c>  // b.none
    c094:	ldr	x0, [sp, #32]
    c098:	ldr	x2, [x0, #8]
    c09c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    c0a0:	add	x1, x0, #0xad0
    c0a4:	mov	x0, x2
    c0a8:	bl	4b80 <PyType_IsSubtype@plt>
    c0ac:	cmp	w0, #0x0
    c0b0:	b.ne	c0cc <PyNumber_FloorDivide@plt+0x747c>  // b.any
    c0b4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c0b8:	ldr	x0, [x0, #3960]
    c0bc:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c0c0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c0c4:	ldr	x0, [x0, #3960]
    c0c8:	b	c0ec <PyNumber_FloorDivide@plt+0x749c>
    c0cc:	ldr	x0, [sp, #40]
    c0d0:	ldr	x3, [x0, #16]
    c0d4:	ldr	x0, [sp, #32]
    c0d8:	ldr	x0, [x0, #16]
    c0dc:	ldr	w2, [sp, #28]
    c0e0:	mov	x1, x0
    c0e4:	mov	x0, x3
    c0e8:	bl	8f94 <PyNumber_FloorDivide@plt+0x4344>
    c0ec:	ldp	x29, x30, [sp], #48
    c0f0:	ret
    c0f4:	stp	x29, x30, [sp, #-32]!
    c0f8:	mov	x29, sp
    c0fc:	str	x0, [sp, #24]
    c100:	ldr	x0, [sp, #24]
    c104:	ldr	x0, [x0, #16]
    c108:	bl	901c <PyNumber_FloorDivide@plt+0x43cc>
    c10c:	ldp	x29, x30, [sp], #32
    c110:	ret
    c114:	stp	x29, x30, [sp, #-32]!
    c118:	mov	x29, sp
    c11c:	str	x0, [sp, #24]
    c120:	str	x1, [sp, #16]
    c124:	ldr	x1, [sp, #24]
    c128:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c12c:	ldr	x0, [x0, #4024]
    c130:	cmp	x1, x0
    c134:	b.eq	c170 <PyNumber_FloorDivide@plt+0x7520>  // b.none
    c138:	ldr	x0, [sp, #24]
    c13c:	ldr	x1, [x0, #8]
    c140:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    c144:	add	x0, x0, #0x450
    c148:	cmp	x1, x0
    c14c:	b.eq	c170 <PyNumber_FloorDivide@plt+0x7520>  // b.none
    c150:	ldr	x0, [sp, #24]
    c154:	ldr	x2, [x0, #8]
    c158:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    c15c:	add	x1, x0, #0x450
    c160:	mov	x0, x2
    c164:	bl	4b80 <PyType_IsSubtype@plt>
    c168:	cmp	w0, #0x0
    c16c:	b.eq	c178 <PyNumber_FloorDivide@plt+0x7528>  // b.none
    c170:	mov	w0, #0x0                   	// #0
    c174:	b	c1ac <PyNumber_FloorDivide@plt+0x755c>
    c178:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c17c:	ldr	x0, [x0, #3976]
    c180:	ldr	x4, [x0]
    c184:	ldr	x0, [sp, #24]
    c188:	ldr	x0, [x0, #8]
    c18c:	ldr	x0, [x0, #24]
    c190:	mov	x3, x0
    c194:	ldr	x2, [sp, #16]
    c198:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c19c:	add	x1, x0, #0xc98
    c1a0:	mov	x0, x4
    c1a4:	bl	4bb0 <PyErr_Format@plt>
    c1a8:	mov	w0, #0xffffffff            	// #-1
    c1ac:	ldp	x29, x30, [sp], #32
    c1b0:	ret
    c1b4:	stp	x29, x30, [sp, #-48]!
    c1b8:	mov	x29, sp
    c1bc:	str	x0, [sp, #24]
    c1c0:	ldr	x0, [sp, #24]
    c1c4:	ldr	x0, [x0, #8]
    c1c8:	ldr	x0, [x0, #24]
    c1cc:	str	x0, [sp, #40]
    c1d0:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    c1d4:	add	x0, x0, #0x30
    c1d8:	ldr	x0, [x0]
    c1dc:	ldr	x1, [sp, #24]
    c1e0:	cmp	x1, x0
    c1e4:	b.ne	c1fc <PyNumber_FloorDivide@plt+0x75ac>  // b.any
    c1e8:	ldr	x1, [sp, #40]
    c1ec:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c1f0:	add	x0, x0, #0xcd8
    c1f4:	bl	4740 <PyUnicode_FromFormat@plt>
    c1f8:	b	c254 <PyNumber_FloorDivide@plt+0x7604>
    c1fc:	ldr	x0, [sp, #24]
    c200:	ldr	x0, [x0, #24]
    c204:	cmp	x0, #0x0
    c208:	b.ne	c22c <PyNumber_FloorDivide@plt+0x75dc>  // b.any
    c20c:	ldr	x0, [sp, #24]
    c210:	ldr	x0, [x0, #16]
    c214:	mov	x2, x0
    c218:	ldr	x1, [sp, #40]
    c21c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c220:	add	x0, x0, #0xce0
    c224:	bl	4740 <PyUnicode_FromFormat@plt>
    c228:	b	c254 <PyNumber_FloorDivide@plt+0x7604>
    c22c:	ldr	x0, [sp, #24]
    c230:	ldr	x1, [x0, #16]
    c234:	ldr	x0, [sp, #24]
    c238:	ldr	x0, [x0, #24]
    c23c:	mov	x3, x0
    c240:	mov	x2, x1
    c244:	ldr	x1, [sp, #40]
    c248:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c24c:	add	x0, x0, #0xce8
    c250:	bl	4740 <PyUnicode_FromFormat@plt>
    c254:	ldp	x29, x30, [sp], #48
    c258:	ret
    c25c:	stp	x29, x30, [sp, #-64]!
    c260:	mov	x29, sp
    c264:	str	x0, [sp, #24]
    c268:	ldr	x0, [sp, #24]
    c26c:	ldr	x0, [x0, #24]
    c270:	cmp	x0, #0x0
    c274:	b.eq	c290 <PyNumber_FloorDivide@plt+0x7640>  // b.none
    c278:	ldr	x0, [sp, #24]
    c27c:	ldr	x0, [x0, #24]
    c280:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c284:	ldr	x0, [sp, #24]
    c288:	ldr	x0, [x0, #24]
    c28c:	b	c440 <PyNumber_FloorDivide@plt+0x77f0>
    c290:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    c294:	add	x0, x0, #0x30
    c298:	ldr	x0, [x0]
    c29c:	ldr	x1, [sp, #24]
    c2a0:	cmp	x1, x0
    c2a4:	b.eq	c2e4 <PyNumber_FloorDivide@plt+0x7694>  // b.none
    c2a8:	ldr	x0, [sp, #24]
    c2ac:	ldr	x0, [x0, #16]
    c2b0:	ldr	w0, [x0, #24]
    c2b4:	cmp	w0, #0x0
    c2b8:	b.ne	c2f4 <PyNumber_FloorDivide@plt+0x76a4>  // b.any
    c2bc:	ldr	x0, [sp, #24]
    c2c0:	ldr	x0, [x0, #16]
    c2c4:	ldr	w0, [x0, #28]
    c2c8:	cmp	w0, #0x0
    c2cc:	b.ne	c2f4 <PyNumber_FloorDivide@plt+0x76a4>  // b.any
    c2d0:	ldr	x0, [sp, #24]
    c2d4:	ldr	x0, [x0, #16]
    c2d8:	ldr	w0, [x0, #32]
    c2dc:	cmp	w0, #0x0
    c2e0:	b.ne	c2f4 <PyNumber_FloorDivide@plt+0x76a4>  // b.any
    c2e4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c2e8:	add	x0, x0, #0xcf8
    c2ec:	bl	4b20 <PyUnicode_FromString@plt>
    c2f0:	b	c440 <PyNumber_FloorDivide@plt+0x77f0>
    c2f4:	ldr	x0, [sp, #24]
    c2f8:	ldr	x0, [x0, #16]
    c2fc:	ldr	w0, [x0, #24]
    c300:	cmp	w0, #0x0
    c304:	b.ge	c334 <PyNumber_FloorDivide@plt+0x76e4>  // b.tcont
    c308:	mov	w0, #0x2d                  	// #45
    c30c:	strb	w0, [sp, #55]
    c310:	ldr	x0, [sp, #24]
    c314:	ldr	x0, [x0, #16]
    c318:	bl	8d30 <PyNumber_FloorDivide@plt+0x40e0>
    c31c:	str	x0, [sp, #56]
    c320:	ldr	x0, [sp, #56]
    c324:	cmp	x0, #0x0
    c328:	b.ne	c350 <PyNumber_FloorDivide@plt+0x7700>  // b.any
    c32c:	mov	x0, #0x0                   	// #0
    c330:	b	c440 <PyNumber_FloorDivide@plt+0x77f0>
    c334:	mov	w0, #0x2b                  	// #43
    c338:	strb	w0, [sp, #55]
    c33c:	ldr	x0, [sp, #24]
    c340:	ldr	x0, [x0, #16]
    c344:	str	x0, [sp, #56]
    c348:	ldr	x0, [sp, #56]
    c34c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c350:	ldr	x0, [sp, #56]
    c354:	ldr	w0, [x0, #32]
    c358:	str	w0, [sp, #48]
    c35c:	ldr	x0, [sp, #56]
    c360:	ldr	w0, [x0, #28]
    c364:	str	w0, [sp, #36]
    c368:	ldr	x2, [sp, #56]
    c36c:	mov	w1, #0xef2                 	// #3826
    c370:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    c374:	add	x0, x0, #0xb30
    c378:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    c37c:	ldr	w0, [sp, #36]
    c380:	add	x1, sp, #0x24
    c384:	mov	x2, x1
    c388:	mov	w1, #0x3c                  	// #60
    c38c:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    c390:	str	w0, [sp, #40]
    c394:	ldr	w0, [sp, #40]
    c398:	add	x1, sp, #0x28
    c39c:	mov	x2, x1
    c3a0:	mov	w1, #0x3c                  	// #60
    c3a4:	bl	518c <PyNumber_FloorDivide@plt+0x53c>
    c3a8:	str	w0, [sp, #44]
    c3ac:	ldr	w0, [sp, #48]
    c3b0:	cmp	w0, #0x0
    c3b4:	b.eq	c3e8 <PyNumber_FloorDivide@plt+0x7798>  // b.none
    c3b8:	ldrb	w0, [sp, #55]
    c3bc:	ldr	w1, [sp, #40]
    c3c0:	ldr	w2, [sp, #36]
    c3c4:	ldr	w5, [sp, #48]
    c3c8:	mov	w4, w2
    c3cc:	mov	w3, w1
    c3d0:	ldr	w2, [sp, #44]
    c3d4:	mov	w1, w0
    c3d8:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c3dc:	add	x0, x0, #0xd00
    c3e0:	bl	4740 <PyUnicode_FromFormat@plt>
    c3e4:	b	c440 <PyNumber_FloorDivide@plt+0x77f0>
    c3e8:	ldr	w0, [sp, #36]
    c3ec:	cmp	w0, #0x0
    c3f0:	b.eq	c420 <PyNumber_FloorDivide@plt+0x77d0>  // b.none
    c3f4:	ldrb	w0, [sp, #55]
    c3f8:	ldr	w1, [sp, #40]
    c3fc:	ldr	w2, [sp, #36]
    c400:	mov	w4, w2
    c404:	mov	w3, w1
    c408:	ldr	w2, [sp, #44]
    c40c:	mov	w1, w0
    c410:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c414:	add	x0, x0, #0xd20
    c418:	bl	4740 <PyUnicode_FromFormat@plt>
    c41c:	b	c440 <PyNumber_FloorDivide@plt+0x77f0>
    c420:	ldrb	w0, [sp, #55]
    c424:	ldr	w1, [sp, #40]
    c428:	mov	w3, w1
    c42c:	ldr	w2, [sp, #44]
    c430:	mov	w1, w0
    c434:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c438:	add	x0, x0, #0xd38
    c43c:	bl	4740 <PyUnicode_FromFormat@plt>
    c440:	ldp	x29, x30, [sp], #64
    c444:	ret
    c448:	stp	x29, x30, [sp, #-32]!
    c44c:	mov	x29, sp
    c450:	str	x0, [sp, #24]
    c454:	str	x1, [sp, #16]
    c458:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c45c:	add	x1, x0, #0xa58
    c460:	ldr	x0, [sp, #16]
    c464:	bl	c114 <PyNumber_FloorDivide@plt+0x74c4>
    c468:	cmn	w0, #0x1
    c46c:	b.ne	c478 <PyNumber_FloorDivide@plt+0x7828>  // b.any
    c470:	mov	x0, #0x0                   	// #0
    c474:	b	c480 <PyNumber_FloorDivide@plt+0x7830>
    c478:	ldr	x0, [sp, #24]
    c47c:	bl	c25c <PyNumber_FloorDivide@plt+0x760c>
    c480:	ldp	x29, x30, [sp], #32
    c484:	ret
    c488:	stp	x29, x30, [sp, #-32]!
    c48c:	mov	x29, sp
    c490:	str	x0, [sp, #24]
    c494:	str	x1, [sp, #16]
    c498:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    c49c:	add	x1, x0, #0xe58
    c4a0:	ldr	x0, [sp, #16]
    c4a4:	bl	c114 <PyNumber_FloorDivide@plt+0x74c4>
    c4a8:	cmn	w0, #0x1
    c4ac:	b.ne	c4b8 <PyNumber_FloorDivide@plt+0x7868>  // b.any
    c4b0:	mov	x0, #0x0                   	// #0
    c4b4:	b	c4cc <PyNumber_FloorDivide@plt+0x787c>
    c4b8:	ldr	x0, [sp, #24]
    c4bc:	ldr	x0, [x0, #16]
    c4c0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c4c4:	ldr	x0, [sp, #24]
    c4c8:	ldr	x0, [x0, #16]
    c4cc:	ldp	x29, x30, [sp], #32
    c4d0:	ret
    c4d4:	stp	x29, x30, [sp, #-32]!
    c4d8:	mov	x29, sp
    c4dc:	str	x0, [sp, #24]
    c4e0:	str	x1, [sp, #16]
    c4e4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    c4e8:	add	x1, x0, #0xe68
    c4ec:	ldr	x0, [sp, #16]
    c4f0:	bl	c114 <PyNumber_FloorDivide@plt+0x74c4>
    c4f4:	cmn	w0, #0x1
    c4f8:	b.ne	c504 <PyNumber_FloorDivide@plt+0x78b4>  // b.any
    c4fc:	mov	x0, #0x0                   	// #0
    c500:	b	c518 <PyNumber_FloorDivide@plt+0x78c8>
    c504:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c508:	ldr	x0, [x0, #4024]
    c50c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c510:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c514:	ldr	x0, [x0, #4024]
    c518:	ldp	x29, x30, [sp], #32
    c51c:	ret
    c520:	stp	x29, x30, [sp, #-32]!
    c524:	mov	x29, sp
    c528:	str	x0, [sp, #24]
    c52c:	str	x1, [sp, #16]
    c530:	ldr	x0, [sp, #16]
    c534:	ldr	x1, [x0, #8]
    c538:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    c53c:	add	x0, x0, #0x450
    c540:	cmp	x1, x0
    c544:	b.eq	c58c <PyNumber_FloorDivide@plt+0x793c>  // b.none
    c548:	ldr	x0, [sp, #16]
    c54c:	ldr	x2, [x0, #8]
    c550:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    c554:	add	x1, x0, #0x450
    c558:	mov	x0, x2
    c55c:	bl	4b80 <PyType_IsSubtype@plt>
    c560:	cmp	w0, #0x0
    c564:	b.ne	c58c <PyNumber_FloorDivide@plt+0x793c>  // b.any
    c568:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c56c:	ldr	x0, [x0, #3976]
    c570:	ldr	x2, [x0]
    c574:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c578:	add	x1, x0, #0xa60
    c57c:	mov	x0, x2
    c580:	bl	48c0 <PyErr_SetString@plt>
    c584:	mov	x0, #0x0                   	// #0
    c588:	b	c5ec <PyNumber_FloorDivide@plt+0x799c>
    c58c:	ldr	x0, [sp, #16]
    c590:	ldrb	w0, [x0, #24]
    c594:	cmp	w0, #0x0
    c598:	b.eq	c5b0 <PyNumber_FloorDivide@plt+0x7960>  // b.none
    c59c:	ldr	x0, [sp, #16]
    c5a0:	ldr	x0, [x0, #40]
    c5a4:	ldr	x1, [sp, #24]
    c5a8:	cmp	x1, x0
    c5ac:	b.eq	c5d4 <PyNumber_FloorDivide@plt+0x7984>  // b.none
    c5b0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c5b4:	ldr	x0, [x0, #3968]
    c5b8:	ldr	x2, [x0]
    c5bc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c5c0:	add	x1, x0, #0xa88
    c5c4:	mov	x0, x2
    c5c8:	bl	48c0 <PyErr_SetString@plt>
    c5cc:	mov	x0, #0x0                   	// #0
    c5d0:	b	c5ec <PyNumber_FloorDivide@plt+0x799c>
    c5d4:	ldr	x0, [sp, #24]
    c5d8:	ldr	x0, [x0, #16]
    c5dc:	mov	w2, #0x1                   	// #1
    c5e0:	mov	x1, x0
    c5e4:	ldr	x0, [sp, #16]
    c5e8:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
    c5ec:	ldp	x29, x30, [sp], #32
    c5f0:	ret
    c5f4:	stp	x29, x30, [sp, #-32]!
    c5f8:	mov	x29, sp
    c5fc:	str	x0, [sp, #24]
    c600:	str	x1, [sp, #16]
    c604:	ldr	x0, [sp, #24]
    c608:	ldr	x0, [x0, #24]
    c60c:	cmp	x0, #0x0
    c610:	b.ne	c630 <PyNumber_FloorDivide@plt+0x79e0>  // b.any
    c614:	ldr	x0, [sp, #24]
    c618:	ldr	x0, [x0, #16]
    c61c:	mov	x1, x0
    c620:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c624:	add	x0, x0, #0xd48
    c628:	bl	49e0 <Py_BuildValue@plt>
    c62c:	b	c650 <PyNumber_FloorDivide@plt+0x7a00>
    c630:	ldr	x0, [sp, #24]
    c634:	ldr	x1, [x0, #16]
    c638:	ldr	x0, [sp, #24]
    c63c:	ldr	x0, [x0, #24]
    c640:	mov	x2, x0
    c644:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c648:	add	x0, x0, #0xd50
    c64c:	bl	49e0 <Py_BuildValue@plt>
    c650:	ldp	x29, x30, [sp], #32
    c654:	ret
    c658:	stp	x29, x30, [sp, #-32]!
    c65c:	mov	x29, sp
    c660:	str	x0, [sp, #24]
    c664:	str	x1, [sp, #16]
    c668:	ldr	x0, [sp, #24]
    c66c:	ldrb	w0, [x0, #25]
    c670:	and	x0, x0, #0xff
    c674:	bl	4940 <PyLong_FromLong@plt>
    c678:	ldp	x29, x30, [sp], #32
    c67c:	ret
    c680:	stp	x29, x30, [sp, #-32]!
    c684:	mov	x29, sp
    c688:	str	x0, [sp, #24]
    c68c:	str	x1, [sp, #16]
    c690:	ldr	x0, [sp, #24]
    c694:	ldrb	w0, [x0, #26]
    c698:	and	x0, x0, #0xff
    c69c:	bl	4940 <PyLong_FromLong@plt>
    c6a0:	ldp	x29, x30, [sp], #32
    c6a4:	ret
    c6a8:	stp	x29, x30, [sp, #-32]!
    c6ac:	mov	x29, sp
    c6b0:	str	x0, [sp, #24]
    c6b4:	str	x1, [sp, #16]
    c6b8:	ldr	x0, [sp, #24]
    c6bc:	ldrb	w0, [x0, #27]
    c6c0:	and	x0, x0, #0xff
    c6c4:	bl	4940 <PyLong_FromLong@plt>
    c6c8:	ldp	x29, x30, [sp], #32
    c6cc:	ret
    c6d0:	stp	x29, x30, [sp, #-32]!
    c6d4:	mov	x29, sp
    c6d8:	str	x0, [sp, #24]
    c6dc:	str	x1, [sp, #16]
    c6e0:	ldr	x0, [sp, #24]
    c6e4:	ldrb	w0, [x0, #28]
    c6e8:	lsl	w1, w0, #16
    c6ec:	ldr	x0, [sp, #24]
    c6f0:	ldrb	w0, [x0, #29]
    c6f4:	lsl	w0, w0, #8
    c6f8:	orr	w0, w1, w0
    c6fc:	ldr	x1, [sp, #24]
    c700:	ldrb	w1, [x1, #30]
    c704:	orr	w0, w0, w1
    c708:	sxtw	x0, w0
    c70c:	bl	4940 <PyLong_FromLong@plt>
    c710:	ldp	x29, x30, [sp], #32
    c714:	ret
    c718:	stp	x29, x30, [sp, #-48]!
    c71c:	mov	x29, sp
    c720:	str	x0, [sp, #24]
    c724:	str	x1, [sp, #16]
    c728:	ldr	x0, [sp, #24]
    c72c:	ldrb	w0, [x0, #24]
    c730:	cmp	w0, #0x0
    c734:	b.eq	c744 <PyNumber_FloorDivide@plt+0x7af4>  // b.none
    c738:	ldr	x0, [sp, #24]
    c73c:	ldr	x0, [x0, #32]
    c740:	b	c74c <PyNumber_FloorDivide@plt+0x7afc>
    c744:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c748:	ldr	x0, [x0, #4024]
    c74c:	str	x0, [sp, #40]
    c750:	ldr	x0, [sp, #40]
    c754:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c758:	ldr	x0, [sp, #40]
    c75c:	ldp	x29, x30, [sp], #48
    c760:	ret
    c764:	stp	x29, x30, [sp, #-32]!
    c768:	mov	x29, sp
    c76c:	str	x0, [sp, #24]
    c770:	str	x1, [sp, #16]
    c774:	ldr	x0, [sp, #24]
    c778:	ldrb	w0, [x0, #31]
    c77c:	and	x0, x0, #0xff
    c780:	bl	4940 <PyLong_FromLong@plt>
    c784:	ldp	x29, x30, [sp], #32
    c788:	ret
    c78c:	stp	x29, x30, [sp, #-80]!
    c790:	mov	x29, sp
    c794:	str	x0, [sp, #40]
    c798:	str	x1, [sp, #32]
    c79c:	str	x2, [sp, #24]
    c7a0:	ldr	x1, [sp, #24]
    c7a4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c7a8:	ldr	x0, [x0, #4024]
    c7ac:	cmp	x1, x0
    c7b0:	cset	w0, ne  // ne = any
    c7b4:	and	w0, w0, #0xff
    c7b8:	strb	w0, [sp, #79]
    c7bc:	ldrb	w0, [sp, #79]
    c7c0:	cmp	w0, #0x0
    c7c4:	b.eq	c7fc <PyNumber_FloorDivide@plt+0x7bac>  // b.none
    c7c8:	ldr	x0, [sp, #24]
    c7cc:	bl	6d90 <PyNumber_FloorDivide@plt+0x2140>
    c7d0:	cmp	w0, #0x0
    c7d4:	b.ge	c7fc <PyNumber_FloorDivide@plt+0x7bac>  // b.tcont
    c7d8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c7dc:	ldr	x0, [x0, #3976]
    c7e0:	ldr	x2, [x0]
    c7e4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    c7e8:	add	x1, x0, #0xe78
    c7ec:	mov	x0, x2
    c7f0:	bl	48c0 <PyErr_SetString@plt>
    c7f4:	mov	x0, #0x0                   	// #0
    c7f8:	b	c8cc <PyNumber_FloorDivide@plt+0x7c7c>
    c7fc:	ldr	x0, [sp, #40]
    c800:	ldr	x2, [x0, #304]
    c804:	ldrb	w0, [sp, #79]
    c808:	mov	x1, x0
    c80c:	ldr	x0, [sp, #40]
    c810:	blr	x2
    c814:	str	x0, [sp, #64]
    c818:	ldr	x0, [sp, #64]
    c81c:	cmp	x0, #0x0
    c820:	b.eq	c8c8 <PyNumber_FloorDivide@plt+0x7c78>  // b.none
    c824:	ldr	x0, [sp, #32]
    c828:	add	x0, x0, #0x20
    c82c:	str	x0, [sp, #56]
    c830:	ldr	x0, [sp, #64]
    c834:	add	x0, x0, #0x19
    c838:	mov	x2, #0x6                   	// #6
    c83c:	ldr	x1, [sp, #56]
    c840:	bl	4730 <memcpy@plt>
    c844:	ldr	x0, [sp, #64]
    c848:	mov	x1, #0xffffffffffffffff    	// #-1
    c84c:	str	x1, [x0, #16]
    c850:	ldr	x0, [sp, #64]
    c854:	ldrb	w1, [sp, #79]
    c858:	strb	w1, [x0, #24]
    c85c:	ldrb	w0, [sp, #79]
    c860:	cmp	w0, #0x0
    c864:	b.eq	c87c <PyNumber_FloorDivide@plt+0x7c2c>  // b.none
    c868:	ldr	x0, [sp, #24]
    c86c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    c870:	ldr	x0, [sp, #64]
    c874:	ldr	x1, [sp, #24]
    c878:	str	x1, [x0, #32]
    c87c:	ldr	x0, [sp, #56]
    c880:	ldrb	w0, [x0]
    c884:	sxtb	w0, w0
    c888:	cmp	w0, #0x0
    c88c:	b.ge	c8c0 <PyNumber_FloorDivide@plt+0x7c70>  // b.tcont
    c890:	ldr	x0, [sp, #64]
    c894:	ldrb	w0, [x0, #25]
    c898:	sxtb	w0, w0
    c89c:	sub	w0, w0, #0x80
    c8a0:	sxtb	w0, w0
    c8a4:	and	w1, w0, #0xff
    c8a8:	ldr	x0, [sp, #64]
    c8ac:	strb	w1, [x0, #25]
    c8b0:	ldr	x0, [sp, #64]
    c8b4:	mov	w1, #0x1                   	// #1
    c8b8:	strb	w1, [x0, #31]
    c8bc:	b	c8c8 <PyNumber_FloorDivide@plt+0x7c78>
    c8c0:	ldr	x0, [sp, #64]
    c8c4:	strb	wzr, [x0, #31]
    c8c8:	ldr	x0, [sp, #64]
    c8cc:	ldp	x29, x30, [sp], #80
    c8d0:	ret
    c8d4:	sub	sp, sp, #0x70
    c8d8:	stp	x29, x30, [sp, #16]
    c8dc:	add	x29, sp, #0x10
    c8e0:	str	x0, [sp, #56]
    c8e4:	str	x1, [sp, #48]
    c8e8:	str	x2, [sp, #40]
    c8ec:	str	xzr, [sp, #104]
    c8f0:	str	wzr, [sp, #92]
    c8f4:	str	wzr, [sp, #88]
    c8f8:	str	wzr, [sp, #84]
    c8fc:	str	wzr, [sp, #80]
    c900:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    c904:	ldr	x0, [x0, #4024]
    c908:	str	x0, [sp, #72]
    c90c:	str	wzr, [sp, #68]
    c910:	ldr	x0, [sp, #48]
    c914:	ldr	x0, [x0, #16]
    c918:	cmp	x0, #0x0
    c91c:	b.le	cc08 <PyNumber_FloorDivide@plt+0x7fb8>
    c920:	ldr	x0, [sp, #48]
    c924:	ldr	x0, [x0, #16]
    c928:	cmp	x0, #0x2
    c92c:	b.gt	cc08 <PyNumber_FloorDivide@plt+0x7fb8>
    c930:	ldr	x0, [sp, #48]
    c934:	ldr	x0, [x0, #24]
    c938:	str	x0, [sp, #96]
    c93c:	ldr	x0, [sp, #48]
    c940:	ldr	x0, [x0, #16]
    c944:	cmp	x0, #0x2
    c948:	b.ne	c958 <PyNumber_FloorDivide@plt+0x7d08>  // b.any
    c94c:	ldr	x0, [sp, #48]
    c950:	ldr	x0, [x0, #32]
    c954:	str	x0, [sp, #72]
    c958:	ldr	x0, [sp, #96]
    c95c:	ldr	x0, [x0, #8]
    c960:	ldr	x0, [x0, #168]
    c964:	and	x0, x0, #0x8000000
    c968:	cmp	x0, #0x0
    c96c:	b.eq	c9b0 <PyNumber_FloorDivide@plt+0x7d60>  // b.none
    c970:	ldr	x0, [sp, #96]
    c974:	ldr	x0, [x0, #16]
    c978:	cmp	x0, #0x6
    c97c:	b.ne	cbfc <PyNumber_FloorDivide@plt+0x7fac>  // b.any
    c980:	ldr	x0, [sp, #96]
    c984:	ldrb	w0, [x0, #32]
    c988:	and	w0, w0, #0x7f
    c98c:	and	w0, w0, #0xff
    c990:	cmp	w0, #0x17
    c994:	b.hi	cbfc <PyNumber_FloorDivide@plt+0x7fac>  // b.pmore
    c998:	ldr	x0, [sp, #72]
    c99c:	mov	x2, x0
    c9a0:	ldr	x1, [sp, #96]
    c9a4:	ldr	x0, [sp, #56]
    c9a8:	bl	c78c <PyNumber_FloorDivide@plt+0x7b3c>
    c9ac:	b	cc84 <PyNumber_FloorDivide@plt+0x8034>
    c9b0:	ldr	x0, [sp, #96]
    c9b4:	ldr	x0, [x0, #8]
    c9b8:	ldr	x0, [x0, #168]
    c9bc:	and	x0, x0, #0x10000000
    c9c0:	cmp	x0, #0x0
    c9c4:	b.eq	cbfc <PyNumber_FloorDivide@plt+0x7fac>  // b.none
    c9c8:	ldr	x0, [sp, #96]
    c9cc:	ldrb	w0, [x0, #32]
    c9d0:	and	w0, w0, #0xffffff80
    c9d4:	and	w0, w0, #0xff
    c9d8:	cmp	w0, #0x0
    c9dc:	b.ne	c9f8 <PyNumber_FloorDivide@plt+0x7da8>  // b.any
    c9e0:	ldr	x0, [sp, #96]
    c9e4:	bl	4750 <_PyUnicode_Ready@plt>
    c9e8:	cmp	w0, #0x0
    c9ec:	b.eq	c9f8 <PyNumber_FloorDivide@plt+0x7da8>  // b.none
    c9f0:	mov	x0, #0x0                   	// #0
    c9f4:	b	cc84 <PyNumber_FloorDivide@plt+0x8034>
    c9f8:	ldr	x0, [sp, #96]
    c9fc:	ldr	x0, [x0, #16]
    ca00:	cmp	x0, #0x6
    ca04:	b.ne	cbfc <PyNumber_FloorDivide@plt+0x7fac>  // b.any
    ca08:	ldr	x0, [sp, #96]
    ca0c:	ldrb	w0, [x0, #32]
    ca10:	and	w0, w0, #0x1c
    ca14:	and	w0, w0, #0xff
    ca18:	cmp	w0, #0x4
    ca1c:	b.ne	ca88 <PyNumber_FloorDivide@plt+0x7e38>  // b.any
    ca20:	ldr	x0, [sp, #96]
    ca24:	ldrb	w0, [x0, #32]
    ca28:	and	w0, w0, #0x20
    ca2c:	and	w0, w0, #0xff
    ca30:	cmp	w0, #0x0
    ca34:	b.eq	ca68 <PyNumber_FloorDivide@plt+0x7e18>  // b.none
    ca38:	ldr	x0, [sp, #96]
    ca3c:	ldrb	w0, [x0, #32]
    ca40:	and	w0, w0, #0x40
    ca44:	and	w0, w0, #0xff
    ca48:	cmp	w0, #0x0
    ca4c:	b.eq	ca5c <PyNumber_FloorDivide@plt+0x7e0c>  // b.none
    ca50:	ldr	x0, [sp, #96]
    ca54:	add	x0, x0, #0x30
    ca58:	b	ca70 <PyNumber_FloorDivide@plt+0x7e20>
    ca5c:	ldr	x0, [sp, #96]
    ca60:	add	x0, x0, #0x48
    ca64:	b	ca70 <PyNumber_FloorDivide@plt+0x7e20>
    ca68:	ldr	x0, [sp, #96]
    ca6c:	ldr	x0, [x0, #72]
    ca70:	ldrb	w0, [x0]
    ca74:	and	w0, w0, #0x7f
    ca78:	cmp	w0, #0x17
    ca7c:	cset	w0, ls  // ls = plast
    ca80:	and	w0, w0, #0xff
    ca84:	b	cb6c <PyNumber_FloorDivide@plt+0x7f1c>
    ca88:	ldr	x0, [sp, #96]
    ca8c:	ldrb	w0, [x0, #32]
    ca90:	and	w0, w0, #0x1c
    ca94:	and	w0, w0, #0xff
    ca98:	cmp	w0, #0x8
    ca9c:	b.ne	cb08 <PyNumber_FloorDivide@plt+0x7eb8>  // b.any
    caa0:	ldr	x0, [sp, #96]
    caa4:	ldrb	w0, [x0, #32]
    caa8:	and	w0, w0, #0x20
    caac:	and	w0, w0, #0xff
    cab0:	cmp	w0, #0x0
    cab4:	b.eq	cae8 <PyNumber_FloorDivide@plt+0x7e98>  // b.none
    cab8:	ldr	x0, [sp, #96]
    cabc:	ldrb	w0, [x0, #32]
    cac0:	and	w0, w0, #0x40
    cac4:	and	w0, w0, #0xff
    cac8:	cmp	w0, #0x0
    cacc:	b.eq	cadc <PyNumber_FloorDivide@plt+0x7e8c>  // b.none
    cad0:	ldr	x0, [sp, #96]
    cad4:	add	x0, x0, #0x30
    cad8:	b	caf0 <PyNumber_FloorDivide@plt+0x7ea0>
    cadc:	ldr	x0, [sp, #96]
    cae0:	add	x0, x0, #0x48
    cae4:	b	caf0 <PyNumber_FloorDivide@plt+0x7ea0>
    cae8:	ldr	x0, [sp, #96]
    caec:	ldr	x0, [x0, #72]
    caf0:	ldrh	w0, [x0]
    caf4:	and	w0, w0, #0x7f
    caf8:	cmp	w0, #0x17
    cafc:	cset	w0, ls  // ls = plast
    cb00:	and	w0, w0, #0xff
    cb04:	b	cb6c <PyNumber_FloorDivide@plt+0x7f1c>
    cb08:	ldr	x0, [sp, #96]
    cb0c:	ldrb	w0, [x0, #32]
    cb10:	and	w0, w0, #0x20
    cb14:	and	w0, w0, #0xff
    cb18:	cmp	w0, #0x0
    cb1c:	b.eq	cb50 <PyNumber_FloorDivide@plt+0x7f00>  // b.none
    cb20:	ldr	x0, [sp, #96]
    cb24:	ldrb	w0, [x0, #32]
    cb28:	and	w0, w0, #0x40
    cb2c:	and	w0, w0, #0xff
    cb30:	cmp	w0, #0x0
    cb34:	b.eq	cb44 <PyNumber_FloorDivide@plt+0x7ef4>  // b.none
    cb38:	ldr	x0, [sp, #96]
    cb3c:	add	x0, x0, #0x30
    cb40:	b	cb58 <PyNumber_FloorDivide@plt+0x7f08>
    cb44:	ldr	x0, [sp, #96]
    cb48:	add	x0, x0, #0x48
    cb4c:	b	cb58 <PyNumber_FloorDivide@plt+0x7f08>
    cb50:	ldr	x0, [sp, #96]
    cb54:	ldr	x0, [x0, #72]
    cb58:	ldr	w0, [x0]
    cb5c:	and	w0, w0, #0x7f
    cb60:	cmp	w0, #0x17
    cb64:	cset	w0, ls  // ls = plast
    cb68:	and	w0, w0, #0xff
    cb6c:	cmp	w0, #0x0
    cb70:	b.eq	cbfc <PyNumber_FloorDivide@plt+0x7fac>  // b.none
    cb74:	ldr	x0, [sp, #96]
    cb78:	bl	49a0 <PyUnicode_AsLatin1String@plt>
    cb7c:	str	x0, [sp, #96]
    cb80:	ldr	x0, [sp, #96]
    cb84:	cmp	x0, #0x0
    cb88:	b.ne	cbc8 <PyNumber_FloorDivide@plt+0x7f78>  // b.any
    cb8c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    cb90:	ldr	x0, [x0, #4032]
    cb94:	ldr	x0, [x0]
    cb98:	bl	48e0 <PyErr_ExceptionMatches@plt>
    cb9c:	cmp	w0, #0x0
    cba0:	b.eq	cbc0 <PyNumber_FloorDivide@plt+0x7f70>  // b.none
    cba4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    cba8:	ldr	x0, [x0, #3968]
    cbac:	ldr	x2, [x0]
    cbb0:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    cbb4:	add	x1, x0, #0xe90
    cbb8:	mov	x0, x2
    cbbc:	bl	48c0 <PyErr_SetString@plt>
    cbc0:	mov	x0, #0x0                   	// #0
    cbc4:	b	cc84 <PyNumber_FloorDivide@plt+0x8034>
    cbc8:	ldr	x0, [sp, #72]
    cbcc:	mov	x2, x0
    cbd0:	ldr	x1, [sp, #96]
    cbd4:	ldr	x0, [sp, #56]
    cbd8:	bl	c78c <PyNumber_FloorDivide@plt+0x7b3c>
    cbdc:	str	x0, [sp, #104]
    cbe0:	ldr	x2, [sp, #96]
    cbe4:	mov	w1, #0x1001                	// #4097
    cbe8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    cbec:	add	x0, x0, #0xb30
    cbf0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    cbf4:	ldr	x0, [sp, #104]
    cbf8:	b	cc84 <PyNumber_FloorDivide@plt+0x8034>
    cbfc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    cc00:	ldr	x0, [x0, #4024]
    cc04:	str	x0, [sp, #72]
    cc08:	add	x4, sp, #0x50
    cc0c:	add	x3, sp, #0x54
    cc10:	add	x2, sp, #0x58
    cc14:	add	x1, sp, #0x5c
    cc18:	add	x0, sp, #0x44
    cc1c:	str	x0, [sp, #8]
    cc20:	add	x0, sp, #0x48
    cc24:	str	x0, [sp]
    cc28:	mov	x7, x4
    cc2c:	mov	x6, x3
    cc30:	mov	x5, x2
    cc34:	mov	x4, x1
    cc38:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    cc3c:	add	x3, x0, #0x5a0
    cc40:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    cc44:	add	x2, x0, #0xf00
    cc48:	ldr	x1, [sp, #40]
    cc4c:	ldr	x0, [sp, #48]
    cc50:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    cc54:	cmp	w0, #0x0
    cc58:	b.eq	cc80 <PyNumber_FloorDivide@plt+0x8030>  // b.none
    cc5c:	ldr	w0, [sp, #92]
    cc60:	ldr	w1, [sp, #88]
    cc64:	ldr	w2, [sp, #84]
    cc68:	ldr	w3, [sp, #80]
    cc6c:	ldr	x4, [sp, #72]
    cc70:	ldr	w5, [sp, #68]
    cc74:	ldr	x6, [sp, #56]
    cc78:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
    cc7c:	str	x0, [sp, #104]
    cc80:	ldr	x0, [sp, #104]
    cc84:	ldp	x29, x30, [sp, #16]
    cc88:	add	sp, sp, #0x70
    cc8c:	ret
    cc90:	stp	x29, x30, [sp, #-32]!
    cc94:	mov	x29, sp
    cc98:	str	x0, [sp, #24]
    cc9c:	ldr	x0, [sp, #24]
    cca0:	ldrb	w0, [x0, #24]
    cca4:	cmp	w0, #0x0
    cca8:	b.eq	ccb8 <PyNumber_FloorDivide@plt+0x8068>  // b.none
    ccac:	ldr	x0, [sp, #24]
    ccb0:	ldr	x0, [x0, #32]
    ccb4:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    ccb8:	ldr	x0, [sp, #24]
    ccbc:	ldr	x0, [x0, #8]
    ccc0:	ldr	x1, [x0, #320]
    ccc4:	ldr	x0, [sp, #24]
    ccc8:	blr	x1
    cccc:	nop
    ccd0:	ldp	x29, x30, [sp], #32
    ccd4:	ret
    ccd8:	stp	x29, x30, [sp, #-32]!
    ccdc:	mov	x29, sp
    cce0:	str	x0, [sp, #24]
    cce4:	str	x1, [sp, #16]
    cce8:	ldr	x0, [sp, #24]
    ccec:	ldrb	w0, [x0, #24]
    ccf0:	cmp	w0, #0x0
    ccf4:	b.eq	cd04 <PyNumber_FloorDivide@plt+0x80b4>  // b.none
    ccf8:	ldr	x0, [sp, #24]
    ccfc:	ldr	x0, [x0, #32]
    cd00:	b	cd0c <PyNumber_FloorDivide@plt+0x80bc>
    cd04:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    cd08:	ldr	x0, [x0, #4024]
    cd0c:	adrp	x1, 27000 <PyInit__datetime@@Base+0x15250>
    cd10:	ldr	x1, [x1, #4024]
    cd14:	bl	7090 <PyNumber_FloorDivide@plt+0x2440>
    cd18:	ldp	x29, x30, [sp], #32
    cd1c:	ret
    cd20:	stp	x29, x30, [sp, #-32]!
    cd24:	mov	x29, sp
    cd28:	str	x0, [sp, #24]
    cd2c:	str	x1, [sp, #16]
    cd30:	ldr	x0, [sp, #24]
    cd34:	ldrb	w0, [x0, #24]
    cd38:	cmp	w0, #0x0
    cd3c:	b.eq	cd4c <PyNumber_FloorDivide@plt+0x80fc>  // b.none
    cd40:	ldr	x0, [sp, #24]
    cd44:	ldr	x0, [x0, #32]
    cd48:	b	cd54 <PyNumber_FloorDivide@plt+0x8104>
    cd4c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    cd50:	ldr	x0, [x0, #4024]
    cd54:	adrp	x1, 27000 <PyInit__datetime@@Base+0x15250>
    cd58:	ldr	x1, [x1, #4024]
    cd5c:	bl	70bc <PyNumber_FloorDivide@plt+0x246c>
    cd60:	ldp	x29, x30, [sp], #32
    cd64:	ret
    cd68:	stp	x29, x30, [sp, #-32]!
    cd6c:	mov	x29, sp
    cd70:	str	x0, [sp, #24]
    cd74:	str	x1, [sp, #16]
    cd78:	ldr	x0, [sp, #24]
    cd7c:	ldrb	w0, [x0, #24]
    cd80:	cmp	w0, #0x0
    cd84:	b.eq	cd94 <PyNumber_FloorDivide@plt+0x8144>  // b.none
    cd88:	ldr	x0, [sp, #24]
    cd8c:	ldr	x0, [x0, #32]
    cd90:	b	cd9c <PyNumber_FloorDivide@plt+0x814c>
    cd94:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    cd98:	ldr	x0, [x0, #4024]
    cd9c:	adrp	x1, 27000 <PyInit__datetime@@Base+0x15250>
    cda0:	ldr	x1, [x1, #4024]
    cda4:	bl	70e8 <PyNumber_FloorDivide@plt+0x2498>
    cda8:	ldp	x29, x30, [sp], #32
    cdac:	ret
    cdb0:	stp	x29, x30, [sp, #-80]!
    cdb4:	mov	x29, sp
    cdb8:	str	x0, [sp, #24]
    cdbc:	ldr	x0, [sp, #24]
    cdc0:	ldr	x0, [x0, #8]
    cdc4:	ldr	x0, [x0, #24]
    cdc8:	str	x0, [sp, #64]
    cdcc:	ldr	x0, [sp, #24]
    cdd0:	ldrb	w0, [x0, #25]
    cdd4:	str	w0, [sp, #60]
    cdd8:	ldr	x0, [sp, #24]
    cddc:	ldrb	w0, [x0, #26]
    cde0:	str	w0, [sp, #56]
    cde4:	ldr	x0, [sp, #24]
    cde8:	ldrb	w0, [x0, #27]
    cdec:	str	w0, [sp, #52]
    cdf0:	ldr	x0, [sp, #24]
    cdf4:	ldrb	w0, [x0, #28]
    cdf8:	lsl	w1, w0, #16
    cdfc:	ldr	x0, [sp, #24]
    ce00:	ldrb	w0, [x0, #29]
    ce04:	lsl	w0, w0, #8
    ce08:	orr	w0, w1, w0
    ce0c:	ldr	x1, [sp, #24]
    ce10:	ldrb	w1, [x1, #30]
    ce14:	orr	w0, w0, w1
    ce18:	str	w0, [sp, #48]
    ce1c:	ldr	x0, [sp, #24]
    ce20:	ldrb	w0, [x0, #31]
    ce24:	str	w0, [sp, #44]
    ce28:	str	xzr, [sp, #72]
    ce2c:	ldr	w0, [sp, #48]
    ce30:	cmp	w0, #0x0
    ce34:	b.eq	ce60 <PyNumber_FloorDivide@plt+0x8210>  // b.none
    ce38:	ldr	w5, [sp, #48]
    ce3c:	ldr	w4, [sp, #52]
    ce40:	ldr	w3, [sp, #56]
    ce44:	ldr	w2, [sp, #60]
    ce48:	ldr	x1, [sp, #64]
    ce4c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ce50:	add	x0, x0, #0xf10
    ce54:	bl	4740 <PyUnicode_FromFormat@plt>
    ce58:	str	x0, [sp, #72]
    ce5c:	b	ceac <PyNumber_FloorDivide@plt+0x825c>
    ce60:	ldr	w0, [sp, #52]
    ce64:	cmp	w0, #0x0
    ce68:	b.eq	ce90 <PyNumber_FloorDivide@plt+0x8240>  // b.none
    ce6c:	ldr	w4, [sp, #52]
    ce70:	ldr	w3, [sp, #56]
    ce74:	ldr	w2, [sp, #60]
    ce78:	ldr	x1, [sp, #64]
    ce7c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ce80:	add	x0, x0, #0x590
    ce84:	bl	4740 <PyUnicode_FromFormat@plt>
    ce88:	str	x0, [sp, #72]
    ce8c:	b	ceac <PyNumber_FloorDivide@plt+0x825c>
    ce90:	ldr	w3, [sp, #56]
    ce94:	ldr	w2, [sp, #60]
    ce98:	ldr	x1, [sp, #64]
    ce9c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    cea0:	add	x0, x0, #0xf28
    cea4:	bl	4740 <PyUnicode_FromFormat@plt>
    cea8:	str	x0, [sp, #72]
    ceac:	ldr	x0, [sp, #72]
    ceb0:	cmp	x0, #0x0
    ceb4:	b.eq	cee0 <PyNumber_FloorDivide@plt+0x8290>  // b.none
    ceb8:	ldr	x0, [sp, #24]
    cebc:	ldrb	w0, [x0, #24]
    cec0:	cmp	w0, #0x0
    cec4:	b.eq	cee0 <PyNumber_FloorDivide@plt+0x8290>  // b.none
    cec8:	ldr	x0, [sp, #24]
    cecc:	ldr	x0, [x0, #32]
    ced0:	mov	x1, x0
    ced4:	ldr	x0, [sp, #72]
    ced8:	bl	71d0 <PyNumber_FloorDivide@plt+0x2580>
    cedc:	str	x0, [sp, #72]
    cee0:	ldr	x0, [sp, #72]
    cee4:	cmp	x0, #0x0
    cee8:	b.eq	cf08 <PyNumber_FloorDivide@plt+0x82b8>  // b.none
    ceec:	ldr	w0, [sp, #44]
    cef0:	cmp	w0, #0x0
    cef4:	b.eq	cf08 <PyNumber_FloorDivide@plt+0x82b8>  // b.none
    cef8:	ldr	w1, [sp, #44]
    cefc:	ldr	x0, [sp, #72]
    cf00:	bl	727c <PyNumber_FloorDivide@plt+0x262c>
    cf04:	str	x0, [sp, #72]
    cf08:	ldr	x0, [sp, #72]
    cf0c:	ldp	x29, x30, [sp], #80
    cf10:	ret
    cf14:	stp	x29, x30, [sp, #-32]!
    cf18:	mov	x29, sp
    cf1c:	str	x0, [sp, #24]
    cf20:	mov	x2, #0x0                   	// #0
    cf24:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    cf28:	add	x1, x0, #0xca0
    cf2c:	ldr	x0, [sp, #24]
    cf30:	bl	4aa0 <_PyObject_CallMethodId@plt>
    cf34:	ldp	x29, x30, [sp], #32
    cf38:	ret
    cf3c:	stp	x29, x30, [sp, #-192]!
    cf40:	mov	x29, sp
    cf44:	str	x0, [sp, #40]
    cf48:	str	x1, [sp, #32]
    cf4c:	str	x2, [sp, #24]
    cf50:	str	xzr, [sp, #64]
    cf54:	ldr	x0, [sp, #40]
    cf58:	ldrb	w0, [x0, #28]
    cf5c:	lsl	w1, w0, #16
    cf60:	ldr	x0, [sp, #40]
    cf64:	ldrb	w0, [x0, #29]
    cf68:	lsl	w0, w0, #8
    cf6c:	orr	w0, w1, w0
    cf70:	ldr	x1, [sp, #40]
    cf74:	ldrb	w1, [x1, #30]
    cf78:	orr	w0, w0, w1
    cf7c:	str	w0, [sp, #188]
    cf80:	add	x0, sp, #0x40
    cf84:	mov	x4, x0
    cf88:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    cf8c:	add	x3, x0, #0xef0
    cf90:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    cf94:	add	x2, x0, #0xf38
    cf98:	ldr	x1, [sp, #24]
    cf9c:	ldr	x0, [sp, #32]
    cfa0:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    cfa4:	cmp	w0, #0x0
    cfa8:	b.ne	cfb4 <PyNumber_FloorDivide@plt+0x8364>  // b.any
    cfac:	mov	x0, #0x0                   	// #0
    cfb0:	b	d1b0 <PyNumber_FloorDivide@plt+0x8560>
    cfb4:	ldr	x0, [sp, #64]
    cfb8:	cmp	x0, #0x0
    cfbc:	b.eq	cfdc <PyNumber_FloorDivide@plt+0x838c>  // b.none
    cfc0:	ldr	x2, [sp, #64]
    cfc4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    cfc8:	add	x1, x0, #0xf48
    cfcc:	mov	x0, x2
    cfd0:	bl	4a30 <strcmp@plt>
    cfd4:	cmp	w0, #0x0
    cfd8:	b.ne	d000 <PyNumber_FloorDivide@plt+0x83b0>  // b.any
    cfdc:	ldr	w0, [sp, #188]
    cfe0:	cmp	w0, #0x0
    cfe4:	b.ne	cff4 <PyNumber_FloorDivide@plt+0x83a4>  // b.any
    cfe8:	mov	x0, #0x2                   	// #2
    cfec:	str	x0, [sp, #176]
    cff0:	b	d08c <PyNumber_FloorDivide@plt+0x843c>
    cff4:	mov	x0, #0x4                   	// #4
    cff8:	str	x0, [sp, #176]
    cffc:	b	d08c <PyNumber_FloorDivide@plt+0x843c>
    d000:	str	xzr, [sp, #176]
    d004:	b	d078 <PyNumber_FloorDivide@plt+0x8428>
    d008:	ldr	x2, [sp, #64]
    d00c:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    d010:	add	x1, x0, #0xf00
    d014:	ldr	x0, [sp, #176]
    d018:	lsl	x0, x0, #4
    d01c:	add	x0, x1, x0
    d020:	ldr	x0, [x0]
    d024:	mov	x1, x0
    d028:	mov	x0, x2
    d02c:	bl	4a30 <strcmp@plt>
    d030:	cmp	w0, #0x0
    d034:	b.ne	d06c <PyNumber_FloorDivide@plt+0x841c>  // b.any
    d038:	ldr	x0, [sp, #176]
    d03c:	cmp	x0, #0x3
    d040:	b.ne	d088 <PyNumber_FloorDivide@plt+0x8438>  // b.any
    d044:	ldr	w0, [sp, #188]
    d048:	mov	w1, #0x4dd3                	// #19923
    d04c:	movk	w1, #0x1062, lsl #16
    d050:	smull	x1, w0, w1
    d054:	lsr	x1, x1, #32
    d058:	asr	w1, w1, #6
    d05c:	asr	w0, w0, #31
    d060:	sub	w0, w1, w0
    d064:	str	w0, [sp, #188]
    d068:	b	d088 <PyNumber_FloorDivide@plt+0x8438>
    d06c:	ldr	x0, [sp, #176]
    d070:	add	x0, x0, #0x1
    d074:	str	x0, [sp, #176]
    d078:	ldr	x0, [sp, #176]
    d07c:	cmp	x0, #0x4
    d080:	b.ls	d008 <PyNumber_FloorDivide@plt+0x83b8>  // b.plast
    d084:	b	d08c <PyNumber_FloorDivide@plt+0x843c>
    d088:	nop
    d08c:	ldr	x0, [sp, #176]
    d090:	cmp	x0, #0x5
    d094:	b.ne	d0bc <PyNumber_FloorDivide@plt+0x846c>  // b.any
    d098:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d09c:	ldr	x0, [x0, #3968]
    d0a0:	ldr	x2, [x0]
    d0a4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    d0a8:	add	x1, x0, #0xf50
    d0ac:	mov	x0, x2
    d0b0:	bl	4bb0 <PyErr_Format@plt>
    d0b4:	mov	x0, #0x0                   	// #0
    d0b8:	b	d1b0 <PyNumber_FloorDivide@plt+0x8560>
    d0bc:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    d0c0:	add	x1, x0, #0xf00
    d0c4:	ldr	x0, [sp, #176]
    d0c8:	lsl	x0, x0, #4
    d0cc:	add	x0, x1, x0
    d0d0:	ldr	x5, [x0, #8]
    d0d4:	ldr	x0, [sp, #40]
    d0d8:	ldrb	w0, [x0, #25]
    d0dc:	mov	w1, w0
    d0e0:	ldr	x0, [sp, #40]
    d0e4:	ldrb	w0, [x0, #26]
    d0e8:	mov	w2, w0
    d0ec:	ldr	x0, [sp, #40]
    d0f0:	ldrb	w0, [x0, #27]
    d0f4:	ldr	w4, [sp, #188]
    d0f8:	mov	w3, w0
    d0fc:	mov	x0, x5
    d100:	bl	4740 <PyUnicode_FromFormat@plt>
    d104:	str	x0, [sp, #56]
    d108:	ldr	x0, [sp, #56]
    d10c:	cmp	x0, #0x0
    d110:	b.eq	d13c <PyNumber_FloorDivide@plt+0x84ec>  // b.none
    d114:	ldr	x0, [sp, #40]
    d118:	ldrb	w0, [x0, #24]
    d11c:	cmp	w0, #0x0
    d120:	b.eq	d13c <PyNumber_FloorDivide@plt+0x84ec>  // b.none
    d124:	ldr	x0, [sp, #40]
    d128:	ldr	x1, [x0, #32]
    d12c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d130:	ldr	x0, [x0, #4024]
    d134:	cmp	x1, x0
    d138:	b.ne	d144 <PyNumber_FloorDivide@plt+0x84f4>  // b.any
    d13c:	ldr	x0, [sp, #56]
    d140:	b	d1b0 <PyNumber_FloorDivide@plt+0x8560>
    d144:	ldr	x0, [sp, #40]
    d148:	ldr	x1, [x0, #32]
    d14c:	add	x5, sp, #0x48
    d150:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d154:	ldr	x4, [x0, #4024]
    d158:	mov	x3, x1
    d15c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    d160:	add	x2, x0, #0xf68
    d164:	mov	x1, #0x64                  	// #100
    d168:	mov	x0, x5
    d16c:	bl	74b8 <PyNumber_FloorDivide@plt+0x2868>
    d170:	cmp	w0, #0x0
    d174:	b.ge	d198 <PyNumber_FloorDivide@plt+0x8548>  // b.tcont
    d178:	ldr	x0, [sp, #56]
    d17c:	mov	x2, x0
    d180:	mov	w1, #0x1090                	// #4240
    d184:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d188:	add	x0, x0, #0xb30
    d18c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d190:	mov	x0, #0x0                   	// #0
    d194:	b	d1b0 <PyNumber_FloorDivide@plt+0x8560>
    d198:	add	x0, sp, #0x48
    d19c:	bl	4b20 <PyUnicode_FromString@plt>
    d1a0:	mov	x1, x0
    d1a4:	add	x0, sp, #0x38
    d1a8:	bl	4bf0 <PyUnicode_AppendAndDel@plt>
    d1ac:	ldr	x0, [sp, #56]
    d1b0:	ldp	x29, x30, [sp], #192
    d1b4:	ret
    d1b8:	sub	sp, sp, #0x60
    d1bc:	stp	x29, x30, [sp, #16]
    d1c0:	add	x29, sp, #0x10
    d1c4:	str	x0, [sp, #56]
    d1c8:	str	x1, [sp, #48]
    d1cc:	str	x2, [sp, #40]
    d1d0:	add	x0, sp, #0x48
    d1d4:	mov	x4, x0
    d1d8:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    d1dc:	add	x3, x0, #0xf50
    d1e0:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    d1e4:	add	x2, x0, #0x5b0
    d1e8:	ldr	x1, [sp, #40]
    d1ec:	ldr	x0, [sp, #48]
    d1f0:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    d1f4:	cmp	w0, #0x0
    d1f8:	b.ne	d204 <PyNumber_FloorDivide@plt+0x85b4>  // b.any
    d1fc:	mov	x0, #0x0                   	// #0
    d200:	b	d2ac <PyNumber_FloorDivide@plt+0x865c>
    d204:	ldr	x0, [sp, #56]
    d208:	ldrb	w0, [x0, #25]
    d20c:	mov	w1, w0
    d210:	ldr	x0, [sp, #56]
    d214:	ldrb	w0, [x0, #26]
    d218:	mov	w2, w0
    d21c:	ldr	x0, [sp, #56]
    d220:	ldrb	w0, [x0, #27]
    d224:	mov	w3, w0
    d228:	mov	w0, #0xffffffff            	// #-1
    d22c:	str	w0, [sp, #8]
    d230:	mov	w0, #0x1                   	// #1
    d234:	str	w0, [sp]
    d238:	mov	w7, #0x0                   	// #0
    d23c:	mov	w6, w3
    d240:	mov	w5, w2
    d244:	mov	w4, w1
    d248:	mov	w3, #0x1                   	// #1
    d24c:	mov	w2, #0x1                   	// #1
    d250:	mov	w1, #0x76c                 	// #1900
    d254:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d258:	add	x0, x0, #0xf88
    d25c:	bl	49e0 <Py_BuildValue@plt>
    d260:	str	x0, [sp, #88]
    d264:	ldr	x0, [sp, #88]
    d268:	cmp	x0, #0x0
    d26c:	b.ne	d278 <PyNumber_FloorDivide@plt+0x8628>  // b.any
    d270:	mov	x0, #0x0                   	// #0
    d274:	b	d2ac <PyNumber_FloorDivide@plt+0x865c>
    d278:	ldr	x1, [sp, #72]
    d27c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d280:	ldr	x3, [x0, #4024]
    d284:	ldr	x2, [sp, #88]
    d288:	ldr	x0, [sp, #56]
    d28c:	bl	7980 <PyNumber_FloorDivide@plt+0x2d30>
    d290:	str	x0, [sp, #80]
    d294:	ldr	x2, [sp, #88]
    d298:	mov	w1, #0x10b2                	// #4274
    d29c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d2a0:	add	x0, x0, #0xb30
    d2a4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d2a8:	ldr	x0, [sp, #80]
    d2ac:	ldp	x29, x30, [sp, #16]
    d2b0:	add	sp, sp, #0x60
    d2b4:	ret
    d2b8:	stp	x29, x30, [sp, #-96]!
    d2bc:	mov	x29, sp
    d2c0:	str	x0, [sp, #40]
    d2c4:	str	x1, [sp, #32]
    d2c8:	str	w2, [sp, #28]
    d2cc:	str	xzr, [sp, #88]
    d2d0:	ldr	x0, [sp, #32]
    d2d4:	ldr	x1, [x0, #8]
    d2d8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    d2dc:	add	x0, x0, #0x790
    d2e0:	cmp	x1, x0
    d2e4:	b.eq	d320 <PyNumber_FloorDivide@plt+0x86d0>  // b.none
    d2e8:	ldr	x0, [sp, #32]
    d2ec:	ldr	x2, [x0, #8]
    d2f0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    d2f4:	add	x1, x0, #0x790
    d2f8:	mov	x0, x2
    d2fc:	bl	4b80 <PyType_IsSubtype@plt>
    d300:	cmp	w0, #0x0
    d304:	b.ne	d320 <PyNumber_FloorDivide@plt+0x86d0>  // b.any
    d308:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d30c:	ldr	x0, [x0, #3960]
    d310:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    d314:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d318:	ldr	x0, [x0, #3960]
    d31c:	b	d6bc <PyNumber_FloorDivide@plt+0x8a6c>
    d320:	ldr	x0, [sp, #40]
    d324:	ldrb	w0, [x0, #24]
    d328:	cmp	w0, #0x0
    d32c:	b.eq	d33c <PyNumber_FloorDivide@plt+0x86ec>  // b.none
    d330:	ldr	x0, [sp, #40]
    d334:	ldr	x1, [x0, #32]
    d338:	b	d344 <PyNumber_FloorDivide@plt+0x86f4>
    d33c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d340:	ldr	x1, [x0, #4024]
    d344:	ldr	x0, [sp, #32]
    d348:	ldrb	w0, [x0, #24]
    d34c:	cmp	w0, #0x0
    d350:	b.eq	d360 <PyNumber_FloorDivide@plt+0x8710>  // b.none
    d354:	ldr	x0, [sp, #32]
    d358:	ldr	x0, [x0, #32]
    d35c:	b	d368 <PyNumber_FloorDivide@plt+0x8718>
    d360:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d364:	ldr	x0, [x0, #4024]
    d368:	cmp	x1, x0
    d36c:	b.ne	d3a4 <PyNumber_FloorDivide@plt+0x8754>  // b.any
    d370:	ldr	x0, [sp, #40]
    d374:	add	x3, x0, #0x19
    d378:	ldr	x0, [sp, #32]
    d37c:	add	x0, x0, #0x19
    d380:	mov	x2, #0x6                   	// #6
    d384:	mov	x1, x0
    d388:	mov	x0, x3
    d38c:	bl	4a20 <memcmp@plt>
    d390:	str	w0, [sp, #84]
    d394:	ldr	w1, [sp, #28]
    d398:	ldr	w0, [sp, #84]
    d39c:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
    d3a0:	b	d6bc <PyNumber_FloorDivide@plt+0x8a6c>
    d3a4:	mov	x1, #0x0                   	// #0
    d3a8:	ldr	x0, [sp, #40]
    d3ac:	bl	ccd8 <PyNumber_FloorDivide@plt+0x8088>
    d3b0:	str	x0, [sp, #72]
    d3b4:	ldr	x0, [sp, #72]
    d3b8:	cmp	x0, #0x0
    d3bc:	b.ne	d3c8 <PyNumber_FloorDivide@plt+0x8778>  // b.any
    d3c0:	mov	x0, #0x0                   	// #0
    d3c4:	b	d6bc <PyNumber_FloorDivide@plt+0x8a6c>
    d3c8:	mov	x1, #0x0                   	// #0
    d3cc:	ldr	x0, [sp, #32]
    d3d0:	bl	ccd8 <PyNumber_FloorDivide@plt+0x8088>
    d3d4:	str	x0, [sp, #64]
    d3d8:	ldr	x0, [sp, #64]
    d3dc:	cmp	x0, #0x0
    d3e0:	b.eq	d698 <PyNumber_FloorDivide@plt+0x8a48>  // b.none
    d3e4:	ldr	x1, [sp, #72]
    d3e8:	ldr	x0, [sp, #64]
    d3ec:	cmp	x1, x0
    d3f0:	b.eq	d478 <PyNumber_FloorDivide@plt+0x8828>  // b.none
    d3f4:	ldr	x0, [sp, #72]
    d3f8:	ldr	x1, [x0, #8]
    d3fc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    d400:	add	x0, x0, #0x5f0
    d404:	cmp	x1, x0
    d408:	b.eq	d42c <PyNumber_FloorDivide@plt+0x87dc>  // b.none
    d40c:	ldr	x0, [sp, #72]
    d410:	ldr	x2, [x0, #8]
    d414:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    d418:	add	x1, x0, #0x5f0
    d41c:	mov	x0, x2
    d420:	bl	4b80 <PyType_IsSubtype@plt>
    d424:	cmp	w0, #0x0
    d428:	b.eq	d4b0 <PyNumber_FloorDivide@plt+0x8860>  // b.none
    d42c:	ldr	x0, [sp, #64]
    d430:	ldr	x1, [x0, #8]
    d434:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    d438:	add	x0, x0, #0x5f0
    d43c:	cmp	x1, x0
    d440:	b.eq	d464 <PyNumber_FloorDivide@plt+0x8814>  // b.none
    d444:	ldr	x0, [sp, #64]
    d448:	ldr	x2, [x0, #8]
    d44c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    d450:	add	x1, x0, #0x5f0
    d454:	mov	x0, x2
    d458:	bl	4b80 <PyType_IsSubtype@plt>
    d45c:	cmp	w0, #0x0
    d460:	b.eq	d4b0 <PyNumber_FloorDivide@plt+0x8860>  // b.none
    d464:	ldr	x1, [sp, #64]
    d468:	ldr	x0, [sp, #72]
    d46c:	bl	8f1c <PyNumber_FloorDivide@plt+0x42cc>
    d470:	cmp	w0, #0x0
    d474:	b.ne	d4b0 <PyNumber_FloorDivide@plt+0x8860>  // b.any
    d478:	ldr	x0, [sp, #40]
    d47c:	add	x3, x0, #0x19
    d480:	ldr	x0, [sp, #32]
    d484:	add	x0, x0, #0x19
    d488:	mov	x2, #0x6                   	// #6
    d48c:	mov	x1, x0
    d490:	mov	x0, x3
    d494:	bl	4a20 <memcmp@plt>
    d498:	str	w0, [sp, #84]
    d49c:	ldr	w1, [sp, #28]
    d4a0:	ldr	w0, [sp, #84]
    d4a4:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
    d4a8:	str	x0, [sp, #88]
    d4ac:	b	d69c <PyNumber_FloorDivide@plt+0x8a4c>
    d4b0:	ldr	x1, [sp, #72]
    d4b4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d4b8:	ldr	x0, [x0, #4024]
    d4bc:	cmp	x1, x0
    d4c0:	b.eq	d630 <PyNumber_FloorDivide@plt+0x89e0>  // b.none
    d4c4:	ldr	x1, [sp, #64]
    d4c8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d4cc:	ldr	x0, [x0, #4024]
    d4d0:	cmp	x1, x0
    d4d4:	b.eq	d630 <PyNumber_FloorDivide@plt+0x89e0>  // b.none
    d4d8:	ldr	x0, [sp, #40]
    d4dc:	ldrb	w0, [x0, #25]
    d4e0:	mov	w1, w0
    d4e4:	mov	w0, #0xe10                 	// #3600
    d4e8:	mul	w1, w1, w0
    d4ec:	ldr	x0, [sp, #40]
    d4f0:	ldrb	w0, [x0, #26]
    d4f4:	mov	w2, w0
    d4f8:	mov	w0, w2
    d4fc:	lsl	w0, w0, #4
    d500:	sub	w0, w0, w2
    d504:	lsl	w0, w0, #2
    d508:	add	w0, w1, w0
    d50c:	ldr	x1, [sp, #40]
    d510:	ldrb	w1, [x1, #27]
    d514:	add	w1, w0, w1
    d518:	ldr	x0, [sp, #72]
    d51c:	ldr	w2, [x0, #24]
    d520:	mov	w0, #0xae80                	// #44672
    d524:	movk	w0, #0xfffe, lsl #16
    d528:	mul	w0, w2, w0
    d52c:	add	w1, w1, w0
    d530:	ldr	x0, [sp, #72]
    d534:	ldr	w0, [x0, #28]
    d538:	sub	w0, w1, w0
    d53c:	str	w0, [sp, #60]
    d540:	ldr	x0, [sp, #32]
    d544:	ldrb	w0, [x0, #25]
    d548:	mov	w1, w0
    d54c:	mov	w0, #0xe10                 	// #3600
    d550:	mul	w1, w1, w0
    d554:	ldr	x0, [sp, #32]
    d558:	ldrb	w0, [x0, #26]
    d55c:	mov	w2, w0
    d560:	mov	w0, w2
    d564:	lsl	w0, w0, #4
    d568:	sub	w0, w0, w2
    d56c:	lsl	w0, w0, #2
    d570:	add	w0, w1, w0
    d574:	ldr	x1, [sp, #32]
    d578:	ldrb	w1, [x1, #27]
    d57c:	add	w1, w0, w1
    d580:	ldr	x0, [sp, #64]
    d584:	ldr	w2, [x0, #24]
    d588:	mov	w0, #0xae80                	// #44672
    d58c:	movk	w0, #0xfffe, lsl #16
    d590:	mul	w0, w2, w0
    d594:	add	w1, w1, w0
    d598:	ldr	x0, [sp, #64]
    d59c:	ldr	w0, [x0, #28]
    d5a0:	sub	w0, w1, w0
    d5a4:	str	w0, [sp, #56]
    d5a8:	ldr	w1, [sp, #60]
    d5ac:	ldr	w0, [sp, #56]
    d5b0:	sub	w0, w1, w0
    d5b4:	str	w0, [sp, #84]
    d5b8:	ldr	w0, [sp, #84]
    d5bc:	cmp	w0, #0x0
    d5c0:	b.ne	d61c <PyNumber_FloorDivide@plt+0x89cc>  // b.any
    d5c4:	ldr	x0, [sp, #40]
    d5c8:	ldrb	w0, [x0, #28]
    d5cc:	lsl	w1, w0, #16
    d5d0:	ldr	x0, [sp, #40]
    d5d4:	ldrb	w0, [x0, #29]
    d5d8:	lsl	w0, w0, #8
    d5dc:	orr	w0, w1, w0
    d5e0:	ldr	x1, [sp, #40]
    d5e4:	ldrb	w1, [x1, #30]
    d5e8:	orr	w1, w0, w1
    d5ec:	ldr	x0, [sp, #32]
    d5f0:	ldrb	w0, [x0, #28]
    d5f4:	lsl	w2, w0, #16
    d5f8:	ldr	x0, [sp, #32]
    d5fc:	ldrb	w0, [x0, #29]
    d600:	lsl	w0, w0, #8
    d604:	orr	w0, w2, w0
    d608:	ldr	x2, [sp, #32]
    d60c:	ldrb	w2, [x2, #30]
    d610:	orr	w0, w0, w2
    d614:	sub	w0, w1, w0
    d618:	str	w0, [sp, #84]
    d61c:	ldr	w1, [sp, #28]
    d620:	ldr	w0, [sp, #84]
    d624:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
    d628:	str	x0, [sp, #88]
    d62c:	b	d69c <PyNumber_FloorDivide@plt+0x8a4c>
    d630:	ldr	w0, [sp, #28]
    d634:	cmp	w0, #0x2
    d638:	b.ne	d654 <PyNumber_FloorDivide@plt+0x8a04>  // b.any
    d63c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d640:	ldr	x0, [x0, #3992]
    d644:	str	x0, [sp, #88]
    d648:	ldr	x0, [sp, #88]
    d64c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    d650:	b	d69c <PyNumber_FloorDivide@plt+0x8a4c>
    d654:	ldr	w0, [sp, #28]
    d658:	cmp	w0, #0x3
    d65c:	b.ne	d678 <PyNumber_FloorDivide@plt+0x8a28>  // b.any
    d660:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d664:	ldr	x0, [x0, #4040]
    d668:	str	x0, [sp, #88]
    d66c:	ldr	x0, [sp, #88]
    d670:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    d674:	b	d69c <PyNumber_FloorDivide@plt+0x8a4c>
    d678:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d67c:	ldr	x0, [x0, #3976]
    d680:	ldr	x2, [x0]
    d684:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    d688:	add	x1, x0, #0xf70
    d68c:	mov	x0, x2
    d690:	bl	48c0 <PyErr_SetString@plt>
    d694:	b	d69c <PyNumber_FloorDivide@plt+0x8a4c>
    d698:	nop
    d69c:	ldr	x2, [sp, #72]
    d6a0:	mov	w1, #0x10fe                	// #4350
    d6a4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d6a8:	add	x0, x0, #0xb30
    d6ac:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d6b0:	ldr	x0, [sp, #64]
    d6b4:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    d6b8:	ldr	x0, [sp, #88]
    d6bc:	ldp	x29, x30, [sp], #96
    d6c0:	ret
    d6c4:	stp	x29, x30, [sp, #-80]!
    d6c8:	mov	x29, sp
    d6cc:	str	x0, [sp, #24]
    d6d0:	ldr	x0, [sp, #24]
    d6d4:	ldr	x0, [x0, #16]
    d6d8:	cmn	x0, #0x1
    d6dc:	b.ne	d95c <PyNumber_FloorDivide@plt+0x8d0c>  // b.any
    d6e0:	ldr	x0, [sp, #24]
    d6e4:	ldrb	w0, [x0, #31]
    d6e8:	cmp	w0, #0x0
    d6ec:	b.eq	d7a0 <PyNumber_FloorDivide@plt+0x8b50>  // b.none
    d6f0:	ldr	x0, [sp, #24]
    d6f4:	ldrb	w0, [x0, #25]
    d6f8:	mov	w7, w0
    d6fc:	ldr	x0, [sp, #24]
    d700:	ldrb	w0, [x0, #26]
    d704:	mov	w8, w0
    d708:	ldr	x0, [sp, #24]
    d70c:	ldrb	w0, [x0, #27]
    d710:	mov	w9, w0
    d714:	ldr	x0, [sp, #24]
    d718:	ldrb	w0, [x0, #28]
    d71c:	lsl	w1, w0, #16
    d720:	ldr	x0, [sp, #24]
    d724:	ldrb	w0, [x0, #29]
    d728:	lsl	w0, w0, #8
    d72c:	orr	w0, w1, w0
    d730:	ldr	x1, [sp, #24]
    d734:	ldrb	w1, [x1, #30]
    d738:	orr	w2, w0, w1
    d73c:	ldr	x0, [sp, #24]
    d740:	ldrb	w0, [x0, #24]
    d744:	cmp	w0, #0x0
    d748:	b.eq	d758 <PyNumber_FloorDivide@plt+0x8b08>  // b.none
    d74c:	ldr	x0, [sp, #24]
    d750:	ldr	x0, [x0, #32]
    d754:	b	d760 <PyNumber_FloorDivide@plt+0x8b10>
    d758:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d75c:	ldr	x0, [x0, #4024]
    d760:	ldr	x1, [sp, #24]
    d764:	ldr	x1, [x1, #8]
    d768:	mov	x6, x1
    d76c:	mov	w5, #0x0                   	// #0
    d770:	mov	x4, x0
    d774:	mov	w3, w2
    d778:	mov	w2, w9
    d77c:	mov	w1, w8
    d780:	mov	w0, w7
    d784:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
    d788:	str	x0, [sp, #72]
    d78c:	ldr	x0, [sp, #72]
    d790:	cmp	x0, #0x0
    d794:	b.ne	d7b0 <PyNumber_FloorDivide@plt+0x8b60>  // b.any
    d798:	mov	x0, #0xffffffffffffffff    	// #-1
    d79c:	b	d964 <PyNumber_FloorDivide@plt+0x8d14>
    d7a0:	ldr	x0, [sp, #24]
    d7a4:	str	x0, [sp, #72]
    d7a8:	ldr	x0, [sp, #72]
    d7ac:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    d7b0:	mov	x1, #0x0                   	// #0
    d7b4:	ldr	x0, [sp, #72]
    d7b8:	bl	ccd8 <PyNumber_FloorDivide@plt+0x8088>
    d7bc:	str	x0, [sp, #64]
    d7c0:	ldr	x2, [sp, #72]
    d7c4:	mov	w1, #0x1117                	// #4375
    d7c8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d7cc:	add	x0, x0, #0xb30
    d7d0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d7d4:	ldr	x0, [sp, #64]
    d7d8:	cmp	x0, #0x0
    d7dc:	b.ne	d7e8 <PyNumber_FloorDivide@plt+0x8b98>  // b.any
    d7e0:	mov	x0, #0xffffffffffffffff    	// #-1
    d7e4:	b	d964 <PyNumber_FloorDivide@plt+0x8d14>
    d7e8:	ldr	x1, [sp, #64]
    d7ec:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d7f0:	ldr	x0, [x0, #4024]
    d7f4:	cmp	x1, x0
    d7f8:	b.ne	d81c <PyNumber_FloorDivide@plt+0x8bcc>  // b.any
    d7fc:	ldr	x0, [sp, #24]
    d800:	add	x0, x0, #0x19
    d804:	mov	w1, #0x6                   	// #6
    d808:	bl	b7e8 <PyNumber_FloorDivide@plt+0x6b98>
    d80c:	mov	x1, x0
    d810:	ldr	x0, [sp, #24]
    d814:	str	x1, [x0, #16]
    d818:	b	d948 <PyNumber_FloorDivide@plt+0x8cf8>
    d81c:	ldr	x0, [sp, #24]
    d820:	ldrb	w0, [x0, #25]
    d824:	mov	w1, w0
    d828:	mov	w0, #0xe10                 	// #3600
    d82c:	mul	w1, w1, w0
    d830:	ldr	x0, [sp, #24]
    d834:	ldrb	w0, [x0, #26]
    d838:	mov	w2, w0
    d83c:	mov	w0, w2
    d840:	lsl	w0, w0, #4
    d844:	sub	w0, w0, w2
    d848:	lsl	w0, w0, #2
    d84c:	add	w0, w1, w0
    d850:	ldr	x1, [sp, #24]
    d854:	ldrb	w1, [x1, #27]
    d858:	add	w0, w0, w1
    d85c:	str	w0, [sp, #60]
    d860:	ldr	x0, [sp, #24]
    d864:	ldrb	w0, [x0, #28]
    d868:	lsl	w1, w0, #16
    d86c:	ldr	x0, [sp, #24]
    d870:	ldrb	w0, [x0, #29]
    d874:	lsl	w0, w0, #8
    d878:	orr	w0, w1, w0
    d87c:	ldr	x1, [sp, #24]
    d880:	ldrb	w1, [x1, #30]
    d884:	orr	w0, w0, w1
    d888:	str	w0, [sp, #56]
    d88c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    d890:	add	x4, x0, #0x5f0
    d894:	mov	w3, #0x1                   	// #1
    d898:	ldr	w2, [sp, #56]
    d89c:	ldr	w1, [sp, #60]
    d8a0:	mov	w0, #0x0                   	// #0
    d8a4:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    d8a8:	str	x0, [sp, #48]
    d8ac:	ldr	x0, [sp, #48]
    d8b0:	cmp	x0, #0x0
    d8b4:	b.ne	d8d4 <PyNumber_FloorDivide@plt+0x8c84>  // b.any
    d8b8:	ldr	x2, [sp, #64]
    d8bc:	mov	w1, #0x112a                	// #4394
    d8c0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d8c4:	add	x0, x0, #0xb30
    d8c8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d8cc:	mov	x0, #0xffffffffffffffff    	// #-1
    d8d0:	b	d964 <PyNumber_FloorDivide@plt+0x8d14>
    d8d4:	ldr	x1, [sp, #64]
    d8d8:	ldr	x0, [sp, #48]
    d8dc:	bl	8e00 <PyNumber_FloorDivide@plt+0x41b0>
    d8e0:	str	x0, [sp, #40]
    d8e4:	ldr	x2, [sp, #48]
    d8e8:	mov	w1, #0x112e                	// #4398
    d8ec:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d8f0:	add	x0, x0, #0xb30
    d8f4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d8f8:	ldr	x0, [sp, #40]
    d8fc:	cmp	x0, #0x0
    d900:	b.ne	d920 <PyNumber_FloorDivide@plt+0x8cd0>  // b.any
    d904:	ldr	x2, [sp, #64]
    d908:	mov	w1, #0x1130                	// #4400
    d90c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d910:	add	x0, x0, #0xb30
    d914:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d918:	mov	x0, #0xffffffffffffffff    	// #-1
    d91c:	b	d964 <PyNumber_FloorDivide@plt+0x8d14>
    d920:	ldr	x0, [sp, #40]
    d924:	bl	4a90 <PyObject_Hash@plt>
    d928:	mov	x1, x0
    d92c:	ldr	x0, [sp, #24]
    d930:	str	x1, [x0, #16]
    d934:	ldr	x2, [sp, #40]
    d938:	mov	w1, #0x1134                	// #4404
    d93c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d940:	add	x0, x0, #0xb30
    d944:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d948:	ldr	x2, [sp, #64]
    d94c:	mov	w1, #0x1136                	// #4406
    d950:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    d954:	add	x0, x0, #0xb30
    d958:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    d95c:	ldr	x0, [sp, #24]
    d960:	ldr	x0, [x0, #16]
    d964:	ldp	x29, x30, [sp], #80
    d968:	ret
    d96c:	sub	sp, sp, #0x70
    d970:	stp	x29, x30, [sp, #16]
    d974:	add	x29, sp, #0x10
    d978:	str	x0, [sp, #56]
    d97c:	str	x1, [sp, #48]
    d980:	str	x2, [sp, #40]
    d984:	ldr	x0, [sp, #56]
    d988:	ldrb	w0, [x0, #25]
    d98c:	str	w0, [sp, #92]
    d990:	ldr	x0, [sp, #56]
    d994:	ldrb	w0, [x0, #26]
    d998:	str	w0, [sp, #88]
    d99c:	ldr	x0, [sp, #56]
    d9a0:	ldrb	w0, [x0, #27]
    d9a4:	str	w0, [sp, #84]
    d9a8:	ldr	x0, [sp, #56]
    d9ac:	ldrb	w0, [x0, #28]
    d9b0:	lsl	w1, w0, #16
    d9b4:	ldr	x0, [sp, #56]
    d9b8:	ldrb	w0, [x0, #29]
    d9bc:	lsl	w0, w0, #8
    d9c0:	orr	w0, w1, w0
    d9c4:	ldr	x1, [sp, #56]
    d9c8:	ldrb	w1, [x1, #30]
    d9cc:	orr	w0, w0, w1
    d9d0:	str	w0, [sp, #80]
    d9d4:	ldr	x0, [sp, #56]
    d9d8:	ldrb	w0, [x0, #24]
    d9dc:	cmp	w0, #0x0
    d9e0:	b.eq	d9f0 <PyNumber_FloorDivide@plt+0x8da0>  // b.none
    d9e4:	ldr	x0, [sp, #56]
    d9e8:	ldr	x0, [x0, #32]
    d9ec:	b	d9f8 <PyNumber_FloorDivide@plt+0x8da8>
    d9f0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    d9f4:	ldr	x0, [x0, #4024]
    d9f8:	str	x0, [sp, #72]
    d9fc:	ldr	x0, [sp, #56]
    da00:	ldrb	w0, [x0, #31]
    da04:	str	w0, [sp, #68]
    da08:	add	x4, sp, #0x50
    da0c:	add	x3, sp, #0x54
    da10:	add	x2, sp, #0x58
    da14:	add	x1, sp, #0x5c
    da18:	add	x0, sp, #0x44
    da1c:	str	x0, [sp, #8]
    da20:	add	x0, sp, #0x48
    da24:	str	x0, [sp]
    da28:	mov	x7, x4
    da2c:	mov	x6, x3
    da30:	mov	x5, x2
    da34:	mov	x4, x1
    da38:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    da3c:	add	x3, x0, #0x5a0
    da40:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    da44:	add	x2, x0, #0xfa8
    da48:	ldr	x1, [sp, #40]
    da4c:	ldr	x0, [sp, #48]
    da50:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    da54:	cmp	w0, #0x0
    da58:	b.ne	da64 <PyNumber_FloorDivide@plt+0x8e14>  // b.any
    da5c:	mov	x0, #0x0                   	// #0
    da60:	b	db38 <PyNumber_FloorDivide@plt+0x8ee8>
    da64:	ldr	w0, [sp, #68]
    da68:	cmp	w0, #0x0
    da6c:	b.eq	daa0 <PyNumber_FloorDivide@plt+0x8e50>  // b.none
    da70:	ldr	w0, [sp, #68]
    da74:	cmp	w0, #0x1
    da78:	b.eq	daa0 <PyNumber_FloorDivide@plt+0x8e50>  // b.none
    da7c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    da80:	ldr	x0, [x0, #3968]
    da84:	ldr	x2, [x0]
    da88:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    da8c:	add	x1, x0, #0xcb8
    da90:	mov	x0, x2
    da94:	bl	48c0 <PyErr_SetString@plt>
    da98:	mov	x0, #0x0                   	// #0
    da9c:	b	db38 <PyNumber_FloorDivide@plt+0x8ee8>
    daa0:	ldr	w0, [sp, #92]
    daa4:	ldr	w1, [sp, #88]
    daa8:	ldr	w2, [sp, #84]
    daac:	ldr	w3, [sp, #80]
    dab0:	ldr	x4, [sp, #72]
    dab4:	mov	x5, x4
    dab8:	mov	w4, w3
    dabc:	mov	w3, w2
    dac0:	mov	w2, w1
    dac4:	mov	w1, w0
    dac8:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    dacc:	add	x0, x0, #0xfc0
    dad0:	bl	49e0 <Py_BuildValue@plt>
    dad4:	str	x0, [sp, #104]
    dad8:	ldr	x0, [sp, #104]
    dadc:	cmp	x0, #0x0
    dae0:	b.ne	daec <PyNumber_FloorDivide@plt+0x8e9c>  // b.any
    dae4:	mov	x0, #0x0                   	// #0
    dae8:	b	db38 <PyNumber_FloorDivide@plt+0x8ee8>
    daec:	ldr	x0, [sp, #56]
    daf0:	ldr	x0, [x0, #8]
    daf4:	mov	x2, #0x0                   	// #0
    daf8:	ldr	x1, [sp, #104]
    dafc:	bl	c8d4 <PyNumber_FloorDivide@plt+0x7c84>
    db00:	str	x0, [sp, #96]
    db04:	ldr	x0, [sp, #96]
    db08:	cmp	x0, #0x0
    db0c:	b.eq	db20 <PyNumber_FloorDivide@plt+0x8ed0>  // b.none
    db10:	ldr	w0, [sp, #68]
    db14:	and	w1, w0, #0xff
    db18:	ldr	x0, [sp, #96]
    db1c:	strb	w1, [x0, #31]
    db20:	ldr	x2, [sp, #104]
    db24:	mov	w1, #0x1157                	// #4439
    db28:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    db2c:	add	x0, x0, #0xb30
    db30:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    db34:	ldr	x0, [sp, #96]
    db38:	ldp	x29, x30, [sp, #16]
    db3c:	add	sp, sp, #0x70
    db40:	ret
    db44:	stp	x29, x30, [sp, #-96]!
    db48:	mov	x29, sp
    db4c:	str	x0, [sp, #24]
    db50:	str	x1, [sp, #16]
    db54:	ldr	x0, [sp, #16]
    db58:	ldr	x0, [x0, #8]
    db5c:	ldr	x0, [x0, #168]
    db60:	and	x0, x0, #0x10000000
    db64:	cmp	x0, #0x0
    db68:	b.ne	db90 <PyNumber_FloorDivide@plt+0x8f40>  // b.any
    db6c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    db70:	ldr	x0, [x0, #3976]
    db74:	ldr	x2, [x0]
    db78:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    db7c:	add	x1, x0, #0x4a8
    db80:	mov	x0, x2
    db84:	bl	48c0 <PyErr_SetString@plt>
    db88:	mov	x0, #0x0                   	// #0
    db8c:	b	dd10 <PyNumber_FloorDivide@plt+0x90c0>
    db90:	add	x0, sp, #0x38
    db94:	mov	x1, x0
    db98:	ldr	x0, [sp, #16]
    db9c:	bl	4b90 <PyUnicode_AsUTF8AndSize@plt>
    dba0:	str	x0, [sp, #80]
    dba4:	ldr	x0, [sp, #80]
    dba8:	cmp	x0, #0x0
    dbac:	b.eq	dce0 <PyNumber_FloorDivide@plt+0x9090>  // b.none
    dbb0:	str	wzr, [sp, #52]
    dbb4:	str	wzr, [sp, #48]
    dbb8:	str	wzr, [sp, #44]
    dbbc:	str	wzr, [sp, #40]
    dbc0:	str	wzr, [sp, #32]
    dbc4:	ldr	x0, [sp, #56]
    dbc8:	mov	x8, x0
    dbcc:	add	x5, sp, #0x20
    dbd0:	add	x4, sp, #0x24
    dbd4:	add	x3, sp, #0x28
    dbd8:	add	x2, sp, #0x2c
    dbdc:	add	x1, sp, #0x30
    dbe0:	add	x0, sp, #0x34
    dbe4:	mov	x7, x5
    dbe8:	mov	x6, x4
    dbec:	mov	x5, x3
    dbf0:	mov	x4, x2
    dbf4:	mov	x3, x1
    dbf8:	mov	x2, x0
    dbfc:	mov	x1, x8
    dc00:	ldr	x0, [sp, #80]
    dc04:	bl	6378 <PyNumber_FloorDivide@plt+0x1728>
    dc08:	str	w0, [sp, #76]
    dc0c:	ldr	w0, [sp, #76]
    dc10:	cmp	w0, #0x0
    dc14:	b.lt	dce8 <PyNumber_FloorDivide@plt+0x9098>  // b.tstop
    dc18:	ldr	w0, [sp, #36]
    dc1c:	ldr	w1, [sp, #32]
    dc20:	mov	w2, w1
    dc24:	mov	w1, w0
    dc28:	ldr	w0, [sp, #76]
    dc2c:	bl	7320 <PyNumber_FloorDivide@plt+0x26d0>
    dc30:	str	x0, [sp, #64]
    dc34:	ldr	x0, [sp, #64]
    dc38:	cmp	x0, #0x0
    dc3c:	b.ne	dc48 <PyNumber_FloorDivide@plt+0x8ff8>  // b.any
    dc40:	mov	x0, #0x0                   	// #0
    dc44:	b	dd10 <PyNumber_FloorDivide@plt+0x90c0>
    dc48:	ldr	x1, [sp, #24]
    dc4c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    dc50:	add	x0, x0, #0x790
    dc54:	cmp	x1, x0
    dc58:	b.ne	dc8c <PyNumber_FloorDivide@plt+0x903c>  // b.any
    dc5c:	ldr	w7, [sp, #52]
    dc60:	ldr	w1, [sp, #48]
    dc64:	ldr	w2, [sp, #44]
    dc68:	ldr	w3, [sp, #40]
    dc6c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    dc70:	add	x6, x0, #0x790
    dc74:	mov	w5, #0x0                   	// #0
    dc78:	ldr	x4, [sp, #64]
    dc7c:	mov	w0, w7
    dc80:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
    dc84:	str	x0, [sp, #88]
    dc88:	b	dcc4 <PyNumber_FloorDivide@plt+0x9074>
    dc8c:	ldr	w0, [sp, #52]
    dc90:	ldr	w1, [sp, #48]
    dc94:	ldr	w2, [sp, #44]
    dc98:	ldr	w3, [sp, #40]
    dc9c:	ldr	x6, [sp, #64]
    dca0:	mov	w5, w3
    dca4:	mov	w4, w2
    dca8:	mov	w3, w1
    dcac:	mov	w2, w0
    dcb0:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    dcb4:	add	x1, x0, #0xfc0
    dcb8:	ldr	x0, [sp, #24]
    dcbc:	bl	4990 <PyObject_CallFunction@plt>
    dcc0:	str	x0, [sp, #88]
    dcc4:	ldr	x2, [sp, #64]
    dcc8:	mov	w1, #0x1184                	// #4484
    dccc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    dcd0:	add	x0, x0, #0xb30
    dcd4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    dcd8:	ldr	x0, [sp, #88]
    dcdc:	b	dd10 <PyNumber_FloorDivide@plt+0x90c0>
    dce0:	nop
    dce4:	b	dcec <PyNumber_FloorDivide@plt+0x909c>
    dce8:	nop
    dcec:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    dcf0:	ldr	x0, [x0, #3968]
    dcf4:	ldr	x3, [x0]
    dcf8:	ldr	x2, [sp, #16]
    dcfc:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    dd00:	add	x1, x0, #0x4d0
    dd04:	mov	x0, x3
    dd08:	bl	4bb0 <PyErr_Format@plt>
    dd0c:	mov	x0, #0x0                   	// #0
    dd10:	ldp	x29, x30, [sp], #96
    dd14:	ret
    dd18:	stp	x29, x30, [sp, #-48]!
    dd1c:	mov	x29, sp
    dd20:	str	x0, [sp, #24]
    dd24:	str	w1, [sp, #20]
    dd28:	str	xzr, [sp, #40]
    dd2c:	ldr	x0, [sp, #24]
    dd30:	add	x0, x0, #0x19
    dd34:	mov	x1, #0x6                   	// #6
    dd38:	bl	4840 <PyBytes_FromStringAndSize@plt>
    dd3c:	str	x0, [sp, #32]
    dd40:	ldr	x0, [sp, #32]
    dd44:	cmp	x0, #0x0
    dd48:	b.eq	ddec <PyNumber_FloorDivide@plt+0x919c>  // b.none
    dd4c:	ldr	w0, [sp, #20]
    dd50:	cmp	w0, #0x3
    dd54:	b.le	dd80 <PyNumber_FloorDivide@plt+0x9130>
    dd58:	ldr	x0, [sp, #24]
    dd5c:	ldrb	w0, [x0, #31]
    dd60:	cmp	w0, #0x0
    dd64:	b.eq	dd80 <PyNumber_FloorDivide@plt+0x9130>  // b.none
    dd68:	ldr	x0, [sp, #32]
    dd6c:	ldrb	w0, [x0, #32]
    dd70:	orr	w0, w0, #0xffffff80
    dd74:	and	w1, w0, #0xff
    dd78:	ldr	x0, [sp, #32]
    dd7c:	strb	w1, [x0, #32]
    dd80:	ldr	x0, [sp, #24]
    dd84:	ldrb	w0, [x0, #24]
    dd88:	cmp	w0, #0x0
    dd8c:	b.eq	dda8 <PyNumber_FloorDivide@plt+0x9158>  // b.none
    dd90:	ldr	x0, [sp, #24]
    dd94:	ldr	x1, [x0, #32]
    dd98:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    dd9c:	ldr	x0, [x0, #4024]
    dda0:	cmp	x1, x0
    dda4:	b.ne	ddbc <PyNumber_FloorDivide@plt+0x916c>  // b.any
    dda8:	ldr	x1, [sp, #32]
    ddac:	mov	x0, #0x1                   	// #1
    ddb0:	bl	4c20 <PyTuple_Pack@plt>
    ddb4:	str	x0, [sp, #40]
    ddb8:	b	ddd8 <PyNumber_FloorDivide@plt+0x9188>
    ddbc:	ldr	x0, [sp, #24]
    ddc0:	ldr	x0, [x0, #32]
    ddc4:	mov	x2, x0
    ddc8:	ldr	x1, [sp, #32]
    ddcc:	mov	x0, #0x2                   	// #2
    ddd0:	bl	4c20 <PyTuple_Pack@plt>
    ddd4:	str	x0, [sp, #40]
    ddd8:	ldr	x2, [sp, #32]
    dddc:	mov	w1, #0x11a4                	// #4516
    dde0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    dde4:	add	x0, x0, #0xb30
    dde8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    ddec:	ldr	x0, [sp, #40]
    ddf0:	ldp	x29, x30, [sp], #48
    ddf4:	ret
    ddf8:	stp	x29, x30, [sp, #-64]!
    ddfc:	mov	x29, sp
    de00:	str	x19, [sp, #16]
    de04:	str	x0, [sp, #40]
    de08:	str	x1, [sp, #32]
    de0c:	add	x0, sp, #0x3c
    de10:	mov	x2, x0
    de14:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    de18:	add	x1, x0, #0xfc8
    de1c:	ldr	x0, [sp, #32]
    de20:	bl	4a70 <PyArg_ParseTuple@plt>
    de24:	cmp	w0, #0x0
    de28:	b.ne	de34 <PyNumber_FloorDivide@plt+0x91e4>  // b.any
    de2c:	mov	x0, #0x0                   	// #0
    de30:	b	de60 <PyNumber_FloorDivide@plt+0x9210>
    de34:	ldr	x0, [sp, #40]
    de38:	ldr	x19, [x0, #8]
    de3c:	ldr	w0, [sp, #60]
    de40:	mov	w1, w0
    de44:	ldr	x0, [sp, #40]
    de48:	bl	dd18 <PyNumber_FloorDivide@plt+0x90c8>
    de4c:	mov	x2, x0
    de50:	mov	x1, x19
    de54:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    de58:	add	x0, x0, #0x5e8
    de5c:	bl	49e0 <Py_BuildValue@plt>
    de60:	ldr	x19, [sp, #16]
    de64:	ldp	x29, x30, [sp], #64
    de68:	ret
    de6c:	stp	x29, x30, [sp, #-48]!
    de70:	mov	x29, sp
    de74:	str	x19, [sp, #16]
    de78:	str	x0, [sp, #40]
    de7c:	str	x1, [sp, #32]
    de80:	ldr	x0, [sp, #40]
    de84:	ldr	x19, [x0, #8]
    de88:	mov	w1, #0x2                   	// #2
    de8c:	ldr	x0, [sp, #40]
    de90:	bl	dd18 <PyNumber_FloorDivide@plt+0x90c8>
    de94:	mov	x2, x0
    de98:	mov	x1, x19
    de9c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    dea0:	add	x0, x0, #0x5e8
    dea4:	bl	49e0 <Py_BuildValue@plt>
    dea8:	ldr	x19, [sp, #16]
    deac:	ldp	x29, x30, [sp], #48
    deb0:	ret
    deb4:	stp	x29, x30, [sp, #-32]!
    deb8:	mov	x29, sp
    debc:	str	x0, [sp, #24]
    dec0:	str	x1, [sp, #16]
    dec4:	ldr	x0, [sp, #24]
    dec8:	ldrb	w0, [x0, #29]
    decc:	and	x0, x0, #0xff
    ded0:	bl	4940 <PyLong_FromLong@plt>
    ded4:	ldp	x29, x30, [sp], #32
    ded8:	ret
    dedc:	stp	x29, x30, [sp, #-32]!
    dee0:	mov	x29, sp
    dee4:	str	x0, [sp, #24]
    dee8:	str	x1, [sp, #16]
    deec:	ldr	x0, [sp, #24]
    def0:	ldrb	w0, [x0, #30]
    def4:	and	x0, x0, #0xff
    def8:	bl	4940 <PyLong_FromLong@plt>
    defc:	ldp	x29, x30, [sp], #32
    df00:	ret
    df04:	stp	x29, x30, [sp, #-32]!
    df08:	mov	x29, sp
    df0c:	str	x0, [sp, #24]
    df10:	str	x1, [sp, #16]
    df14:	ldr	x0, [sp, #24]
    df18:	ldrb	w0, [x0, #31]
    df1c:	and	x0, x0, #0xff
    df20:	bl	4940 <PyLong_FromLong@plt>
    df24:	ldp	x29, x30, [sp], #32
    df28:	ret
    df2c:	stp	x29, x30, [sp, #-32]!
    df30:	mov	x29, sp
    df34:	str	x0, [sp, #24]
    df38:	str	x1, [sp, #16]
    df3c:	ldr	x0, [sp, #24]
    df40:	ldrb	w0, [x0, #32]
    df44:	lsl	w1, w0, #16
    df48:	ldr	x0, [sp, #24]
    df4c:	ldrb	w0, [x0, #33]
    df50:	lsl	w0, w0, #8
    df54:	orr	w0, w1, w0
    df58:	ldr	x1, [sp, #24]
    df5c:	ldrb	w1, [x1, #34]
    df60:	orr	w0, w0, w1
    df64:	sxtw	x0, w0
    df68:	bl	4940 <PyLong_FromLong@plt>
    df6c:	ldp	x29, x30, [sp], #32
    df70:	ret
    df74:	stp	x29, x30, [sp, #-48]!
    df78:	mov	x29, sp
    df7c:	str	x0, [sp, #24]
    df80:	str	x1, [sp, #16]
    df84:	ldr	x0, [sp, #24]
    df88:	ldrb	w0, [x0, #24]
    df8c:	cmp	w0, #0x0
    df90:	b.eq	dfa0 <PyNumber_FloorDivide@plt+0x9350>  // b.none
    df94:	ldr	x0, [sp, #24]
    df98:	ldr	x0, [x0, #40]
    df9c:	b	dfa8 <PyNumber_FloorDivide@plt+0x9358>
    dfa0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    dfa4:	ldr	x0, [x0, #4024]
    dfa8:	str	x0, [sp, #40]
    dfac:	ldr	x0, [sp, #40]
    dfb0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    dfb4:	ldr	x0, [sp, #40]
    dfb8:	ldp	x29, x30, [sp], #48
    dfbc:	ret
    dfc0:	stp	x29, x30, [sp, #-32]!
    dfc4:	mov	x29, sp
    dfc8:	str	x0, [sp, #24]
    dfcc:	str	x1, [sp, #16]
    dfd0:	ldr	x0, [sp, #24]
    dfd4:	ldrb	w0, [x0, #35]
    dfd8:	and	x0, x0, #0xff
    dfdc:	bl	4940 <PyLong_FromLong@plt>
    dfe0:	ldp	x29, x30, [sp], #32
    dfe4:	ret
    dfe8:	stp	x29, x30, [sp, #-80]!
    dfec:	mov	x29, sp
    dff0:	str	x0, [sp, #40]
    dff4:	str	x1, [sp, #32]
    dff8:	str	x2, [sp, #24]
    dffc:	ldr	x1, [sp, #24]
    e000:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e004:	ldr	x0, [x0, #4024]
    e008:	cmp	x1, x0
    e00c:	cset	w0, ne  // ne = any
    e010:	and	w0, w0, #0xff
    e014:	strb	w0, [sp, #79]
    e018:	ldrb	w0, [sp, #79]
    e01c:	cmp	w0, #0x0
    e020:	b.eq	e058 <PyNumber_FloorDivide@plt+0x9408>  // b.none
    e024:	ldr	x0, [sp, #24]
    e028:	bl	6d90 <PyNumber_FloorDivide@plt+0x2140>
    e02c:	cmp	w0, #0x0
    e030:	b.ge	e058 <PyNumber_FloorDivide@plt+0x9408>  // b.tcont
    e034:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e038:	ldr	x0, [x0, #3976]
    e03c:	ldr	x2, [x0]
    e040:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    e044:	add	x1, x0, #0xe78
    e048:	mov	x0, x2
    e04c:	bl	48c0 <PyErr_SetString@plt>
    e050:	mov	x0, #0x0                   	// #0
    e054:	b	e12c <PyNumber_FloorDivide@plt+0x94dc>
    e058:	ldr	x0, [sp, #40]
    e05c:	ldr	x2, [x0, #304]
    e060:	ldrb	w0, [sp, #79]
    e064:	mov	x1, x0
    e068:	ldr	x0, [sp, #40]
    e06c:	blr	x2
    e070:	str	x0, [sp, #64]
    e074:	ldr	x0, [sp, #64]
    e078:	cmp	x0, #0x0
    e07c:	b.eq	e128 <PyNumber_FloorDivide@plt+0x94d8>  // b.none
    e080:	ldr	x0, [sp, #32]
    e084:	add	x0, x0, #0x20
    e088:	str	x0, [sp, #56]
    e08c:	ldr	x0, [sp, #64]
    e090:	add	x0, x0, #0x19
    e094:	mov	x2, #0xa                   	// #10
    e098:	ldr	x1, [sp, #56]
    e09c:	bl	4730 <memcpy@plt>
    e0a0:	ldr	x0, [sp, #64]
    e0a4:	mov	x1, #0xffffffffffffffff    	// #-1
    e0a8:	str	x1, [x0, #16]
    e0ac:	ldr	x0, [sp, #64]
    e0b0:	ldrb	w1, [sp, #79]
    e0b4:	strb	w1, [x0, #24]
    e0b8:	ldrb	w0, [sp, #79]
    e0bc:	cmp	w0, #0x0
    e0c0:	b.eq	e0d8 <PyNumber_FloorDivide@plt+0x9488>  // b.none
    e0c4:	ldr	x0, [sp, #24]
    e0c8:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    e0cc:	ldr	x0, [sp, #64]
    e0d0:	ldr	x1, [sp, #24]
    e0d4:	str	x1, [x0, #40]
    e0d8:	ldr	x0, [sp, #56]
    e0dc:	add	x0, x0, #0x2
    e0e0:	ldrb	w0, [x0]
    e0e4:	sxtb	w0, w0
    e0e8:	cmp	w0, #0x0
    e0ec:	b.ge	e120 <PyNumber_FloorDivide@plt+0x94d0>  // b.tcont
    e0f0:	ldr	x0, [sp, #64]
    e0f4:	ldrb	w0, [x0, #27]
    e0f8:	sxtb	w0, w0
    e0fc:	sub	w0, w0, #0x80
    e100:	sxtb	w0, w0
    e104:	and	w1, w0, #0xff
    e108:	ldr	x0, [sp, #64]
    e10c:	strb	w1, [x0, #27]
    e110:	ldr	x0, [sp, #64]
    e114:	mov	w1, #0x1                   	// #1
    e118:	strb	w1, [x0, #35]
    e11c:	b	e128 <PyNumber_FloorDivide@plt+0x94d8>
    e120:	ldr	x0, [sp, #64]
    e124:	strb	wzr, [x0, #35]
    e128:	ldr	x0, [sp, #64]
    e12c:	ldp	x29, x30, [sp], #80
    e130:	ret
    e134:	sub	sp, sp, #0xa0
    e138:	stp	x29, x30, [sp, #48]
    e13c:	add	x29, sp, #0x30
    e140:	str	x0, [sp, #88]
    e144:	str	x1, [sp, #80]
    e148:	str	x2, [sp, #72]
    e14c:	str	xzr, [sp, #152]
    e150:	str	wzr, [sp, #128]
    e154:	str	wzr, [sp, #124]
    e158:	str	wzr, [sp, #120]
    e15c:	str	wzr, [sp, #116]
    e160:	str	wzr, [sp, #112]
    e164:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e168:	ldr	x0, [x0, #4024]
    e16c:	str	x0, [sp, #104]
    e170:	ldr	x0, [sp, #80]
    e174:	ldr	x0, [x0, #16]
    e178:	cmp	x0, #0x0
    e17c:	b.le	e480 <PyNumber_FloorDivide@plt+0x9830>
    e180:	ldr	x0, [sp, #80]
    e184:	ldr	x0, [x0, #16]
    e188:	cmp	x0, #0x2
    e18c:	b.gt	e480 <PyNumber_FloorDivide@plt+0x9830>
    e190:	ldr	x0, [sp, #80]
    e194:	ldr	x0, [x0, #24]
    e198:	str	x0, [sp, #144]
    e19c:	ldr	x0, [sp, #80]
    e1a0:	ldr	x0, [x0, #16]
    e1a4:	cmp	x0, #0x2
    e1a8:	b.ne	e1b8 <PyNumber_FloorDivide@plt+0x9568>  // b.any
    e1ac:	ldr	x0, [sp, #80]
    e1b0:	ldr	x0, [x0, #32]
    e1b4:	str	x0, [sp, #104]
    e1b8:	ldr	x0, [sp, #144]
    e1bc:	ldr	x0, [x0, #8]
    e1c0:	ldr	x0, [x0, #168]
    e1c4:	and	x0, x0, #0x8000000
    e1c8:	cmp	x0, #0x0
    e1cc:	b.eq	e210 <PyNumber_FloorDivide@plt+0x95c0>  // b.none
    e1d0:	ldr	x0, [sp, #144]
    e1d4:	ldr	x0, [x0, #16]
    e1d8:	cmp	x0, #0xa
    e1dc:	b.ne	e474 <PyNumber_FloorDivide@plt+0x9824>  // b.any
    e1e0:	ldr	x0, [sp, #144]
    e1e4:	ldrb	w0, [x0, #34]
    e1e8:	and	w0, w0, #0x7f
    e1ec:	sub	w0, w0, #0x1
    e1f0:	cmp	w0, #0xb
    e1f4:	b.hi	e474 <PyNumber_FloorDivide@plt+0x9824>  // b.pmore
    e1f8:	ldr	x0, [sp, #104]
    e1fc:	mov	x2, x0
    e200:	ldr	x1, [sp, #144]
    e204:	ldr	x0, [sp, #88]
    e208:	bl	dfe8 <PyNumber_FloorDivide@plt+0x9398>
    e20c:	b	e530 <PyNumber_FloorDivide@plt+0x98e0>
    e210:	ldr	x0, [sp, #144]
    e214:	ldr	x0, [x0, #8]
    e218:	ldr	x0, [x0, #168]
    e21c:	and	x0, x0, #0x10000000
    e220:	cmp	x0, #0x0
    e224:	b.eq	e474 <PyNumber_FloorDivide@plt+0x9824>  // b.none
    e228:	ldr	x0, [sp, #144]
    e22c:	ldrb	w0, [x0, #32]
    e230:	and	w0, w0, #0xffffff80
    e234:	and	w0, w0, #0xff
    e238:	cmp	w0, #0x0
    e23c:	b.ne	e258 <PyNumber_FloorDivide@plt+0x9608>  // b.any
    e240:	ldr	x0, [sp, #144]
    e244:	bl	4750 <_PyUnicode_Ready@plt>
    e248:	cmp	w0, #0x0
    e24c:	b.eq	e258 <PyNumber_FloorDivide@plt+0x9608>  // b.none
    e250:	mov	x0, #0x0                   	// #0
    e254:	b	e530 <PyNumber_FloorDivide@plt+0x98e0>
    e258:	ldr	x0, [sp, #144]
    e25c:	ldr	x0, [x0, #16]
    e260:	cmp	x0, #0xa
    e264:	b.ne	e474 <PyNumber_FloorDivide@plt+0x9824>  // b.any
    e268:	ldr	x0, [sp, #144]
    e26c:	ldrb	w0, [x0, #32]
    e270:	and	w0, w0, #0x1c
    e274:	and	w0, w0, #0xff
    e278:	cmp	w0, #0x4
    e27c:	b.ne	e2f0 <PyNumber_FloorDivide@plt+0x96a0>  // b.any
    e280:	ldr	x0, [sp, #144]
    e284:	ldrb	w0, [x0, #32]
    e288:	and	w0, w0, #0x20
    e28c:	and	w0, w0, #0xff
    e290:	cmp	w0, #0x0
    e294:	b.eq	e2c8 <PyNumber_FloorDivide@plt+0x9678>  // b.none
    e298:	ldr	x0, [sp, #144]
    e29c:	ldrb	w0, [x0, #32]
    e2a0:	and	w0, w0, #0x40
    e2a4:	and	w0, w0, #0xff
    e2a8:	cmp	w0, #0x0
    e2ac:	b.eq	e2bc <PyNumber_FloorDivide@plt+0x966c>  // b.none
    e2b0:	ldr	x0, [sp, #144]
    e2b4:	add	x0, x0, #0x32
    e2b8:	b	e2d4 <PyNumber_FloorDivide@plt+0x9684>
    e2bc:	ldr	x0, [sp, #144]
    e2c0:	add	x0, x0, #0x4a
    e2c4:	b	e2d4 <PyNumber_FloorDivide@plt+0x9684>
    e2c8:	ldr	x0, [sp, #144]
    e2cc:	ldr	x0, [x0, #72]
    e2d0:	add	x0, x0, #0x2
    e2d4:	ldrb	w0, [x0]
    e2d8:	and	w0, w0, #0x7f
    e2dc:	sub	w0, w0, #0x1
    e2e0:	cmp	w0, #0xb
    e2e4:	cset	w0, ls  // ls = plast
    e2e8:	and	w0, w0, #0xff
    e2ec:	b	e3e4 <PyNumber_FloorDivide@plt+0x9794>
    e2f0:	ldr	x0, [sp, #144]
    e2f4:	ldrb	w0, [x0, #32]
    e2f8:	and	w0, w0, #0x1c
    e2fc:	and	w0, w0, #0xff
    e300:	cmp	w0, #0x8
    e304:	b.ne	e378 <PyNumber_FloorDivide@plt+0x9728>  // b.any
    e308:	ldr	x0, [sp, #144]
    e30c:	ldrb	w0, [x0, #32]
    e310:	and	w0, w0, #0x20
    e314:	and	w0, w0, #0xff
    e318:	cmp	w0, #0x0
    e31c:	b.eq	e350 <PyNumber_FloorDivide@plt+0x9700>  // b.none
    e320:	ldr	x0, [sp, #144]
    e324:	ldrb	w0, [x0, #32]
    e328:	and	w0, w0, #0x40
    e32c:	and	w0, w0, #0xff
    e330:	cmp	w0, #0x0
    e334:	b.eq	e344 <PyNumber_FloorDivide@plt+0x96f4>  // b.none
    e338:	ldr	x0, [sp, #144]
    e33c:	add	x0, x0, #0x34
    e340:	b	e35c <PyNumber_FloorDivide@plt+0x970c>
    e344:	ldr	x0, [sp, #144]
    e348:	add	x0, x0, #0x4c
    e34c:	b	e35c <PyNumber_FloorDivide@plt+0x970c>
    e350:	ldr	x0, [sp, #144]
    e354:	ldr	x0, [x0, #72]
    e358:	add	x0, x0, #0x4
    e35c:	ldrh	w0, [x0]
    e360:	and	w0, w0, #0x7f
    e364:	sub	w0, w0, #0x1
    e368:	cmp	w0, #0xb
    e36c:	cset	w0, ls  // ls = plast
    e370:	and	w0, w0, #0xff
    e374:	b	e3e4 <PyNumber_FloorDivide@plt+0x9794>
    e378:	ldr	x0, [sp, #144]
    e37c:	ldrb	w0, [x0, #32]
    e380:	and	w0, w0, #0x20
    e384:	and	w0, w0, #0xff
    e388:	cmp	w0, #0x0
    e38c:	b.eq	e3c0 <PyNumber_FloorDivide@plt+0x9770>  // b.none
    e390:	ldr	x0, [sp, #144]
    e394:	ldrb	w0, [x0, #32]
    e398:	and	w0, w0, #0x40
    e39c:	and	w0, w0, #0xff
    e3a0:	cmp	w0, #0x0
    e3a4:	b.eq	e3b4 <PyNumber_FloorDivide@plt+0x9764>  // b.none
    e3a8:	ldr	x0, [sp, #144]
    e3ac:	add	x0, x0, #0x38
    e3b0:	b	e3cc <PyNumber_FloorDivide@plt+0x977c>
    e3b4:	ldr	x0, [sp, #144]
    e3b8:	add	x0, x0, #0x50
    e3bc:	b	e3cc <PyNumber_FloorDivide@plt+0x977c>
    e3c0:	ldr	x0, [sp, #144]
    e3c4:	ldr	x0, [x0, #72]
    e3c8:	add	x0, x0, #0x8
    e3cc:	ldr	w0, [x0]
    e3d0:	and	w0, w0, #0x7f
    e3d4:	sub	w0, w0, #0x1
    e3d8:	cmp	w0, #0xb
    e3dc:	cset	w0, ls  // ls = plast
    e3e0:	and	w0, w0, #0xff
    e3e4:	cmp	w0, #0x0
    e3e8:	b.eq	e474 <PyNumber_FloorDivide@plt+0x9824>  // b.none
    e3ec:	ldr	x0, [sp, #144]
    e3f0:	bl	49a0 <PyUnicode_AsLatin1String@plt>
    e3f4:	str	x0, [sp, #144]
    e3f8:	ldr	x0, [sp, #144]
    e3fc:	cmp	x0, #0x0
    e400:	b.ne	e440 <PyNumber_FloorDivide@plt+0x97f0>  // b.any
    e404:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e408:	ldr	x0, [x0, #4032]
    e40c:	ldr	x0, [x0]
    e410:	bl	48e0 <PyErr_ExceptionMatches@plt>
    e414:	cmp	w0, #0x0
    e418:	b.eq	e438 <PyNumber_FloorDivide@plt+0x97e8>  // b.none
    e41c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e420:	ldr	x0, [x0, #3968]
    e424:	ldr	x2, [x0]
    e428:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    e42c:	add	x1, x0, #0x228
    e430:	mov	x0, x2
    e434:	bl	48c0 <PyErr_SetString@plt>
    e438:	mov	x0, #0x0                   	// #0
    e43c:	b	e530 <PyNumber_FloorDivide@plt+0x98e0>
    e440:	ldr	x0, [sp, #104]
    e444:	mov	x2, x0
    e448:	ldr	x1, [sp, #144]
    e44c:	ldr	x0, [sp, #88]
    e450:	bl	dfe8 <PyNumber_FloorDivide@plt+0x9398>
    e454:	str	x0, [sp, #152]
    e458:	ldr	x2, [sp, #144]
    e45c:	mov	w1, #0x129e                	// #4766
    e460:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    e464:	add	x0, x0, #0xb30
    e468:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    e46c:	ldr	x0, [sp, #152]
    e470:	b	e530 <PyNumber_FloorDivide@plt+0x98e0>
    e474:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e478:	ldr	x0, [x0, #4024]
    e47c:	str	x0, [sp, #104]
    e480:	add	x4, sp, #0x80
    e484:	add	x3, sp, #0x84
    e488:	add	x2, sp, #0x88
    e48c:	add	x1, sp, #0x8c
    e490:	add	x0, sp, #0x70
    e494:	str	x0, [sp, #32]
    e498:	add	x0, sp, #0x68
    e49c:	str	x0, [sp, #24]
    e4a0:	add	x0, sp, #0x74
    e4a4:	str	x0, [sp, #16]
    e4a8:	add	x0, sp, #0x78
    e4ac:	str	x0, [sp, #8]
    e4b0:	add	x0, sp, #0x7c
    e4b4:	str	x0, [sp]
    e4b8:	mov	x7, x4
    e4bc:	mov	x6, x3
    e4c0:	mov	x5, x2
    e4c4:	mov	x4, x1
    e4c8:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    e4cc:	add	x3, x0, #0x850
    e4d0:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    e4d4:	add	x2, x0, #0x2a0
    e4d8:	ldr	x1, [sp, #72]
    e4dc:	ldr	x0, [sp, #80]
    e4e0:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    e4e4:	cmp	w0, #0x0
    e4e8:	b.eq	e52c <PyNumber_FloorDivide@plt+0x98dc>  // b.none
    e4ec:	ldr	w8, [sp, #140]
    e4f0:	ldr	w9, [sp, #136]
    e4f4:	ldr	w2, [sp, #132]
    e4f8:	ldr	w3, [sp, #128]
    e4fc:	ldr	w4, [sp, #124]
    e500:	ldr	w5, [sp, #120]
    e504:	ldr	w6, [sp, #116]
    e508:	ldr	x7, [sp, #104]
    e50c:	ldr	w0, [sp, #112]
    e510:	ldr	x1, [sp, #88]
    e514:	str	x1, [sp, #8]
    e518:	str	w0, [sp]
    e51c:	mov	w1, w9
    e520:	mov	w0, w8
    e524:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
    e528:	str	x0, [sp, #152]
    e52c:	ldr	x0, [sp, #152]
    e530:	ldp	x29, x30, [sp, #48]
    e534:	add	sp, sp, #0xa0
    e538:	ret
    e53c:	stp	x29, x30, [sp, #-64]!
    e540:	mov	x29, sp
    e544:	str	w0, [sp, #44]
    e548:	str	w1, [sp, #40]
    e54c:	str	w2, [sp, #36]
    e550:	str	w3, [sp, #32]
    e554:	str	w4, [sp, #28]
    e558:	str	w5, [sp, #24]
    e55c:	ldr	w0, [sp, #44]
    e560:	cmp	w0, #0x0
    e564:	b.le	e578 <PyNumber_FloorDivide@plt+0x9928>
    e568:	ldr	w1, [sp, #44]
    e56c:	mov	w0, #0x270f                	// #9999
    e570:	cmp	w1, w0
    e574:	b.le	e5a0 <PyNumber_FloorDivide@plt+0x9950>
    e578:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e57c:	ldr	x0, [x0, #3968]
    e580:	ldr	x3, [x0]
    e584:	ldr	w2, [sp, #44]
    e588:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    e58c:	add	x1, x0, #0xbf8
    e590:	mov	x0, x3
    e594:	bl	4bb0 <PyErr_Format@plt>
    e598:	mov	x0, #0xffffffffffffffff    	// #-1
    e59c:	b	e610 <PyNumber_FloorDivide@plt+0x99c0>
    e5a0:	ldr	w2, [sp, #36]
    e5a4:	ldr	w1, [sp, #40]
    e5a8:	ldr	w0, [sp, #44]
    e5ac:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    e5b0:	sxtw	x0, w0
    e5b4:	str	x0, [sp, #56]
    e5b8:	ldr	x1, [sp, #56]
    e5bc:	mov	x0, x1
    e5c0:	lsl	x0, x0, #1
    e5c4:	add	x0, x0, x1
    e5c8:	lsl	x0, x0, #3
    e5cc:	mov	x1, x0
    e5d0:	ldrsw	x0, [sp, #32]
    e5d4:	add	x1, x1, x0
    e5d8:	mov	x0, x1
    e5dc:	lsl	x0, x0, #4
    e5e0:	sub	x0, x0, x1
    e5e4:	lsl	x0, x0, #2
    e5e8:	mov	x1, x0
    e5ec:	ldrsw	x0, [sp, #28]
    e5f0:	add	x1, x1, x0
    e5f4:	mov	x0, x1
    e5f8:	lsl	x0, x0, #4
    e5fc:	sub	x0, x0, x1
    e600:	lsl	x0, x0, #2
    e604:	mov	x1, x0
    e608:	ldrsw	x0, [sp, #24]
    e60c:	add	x0, x1, x0
    e610:	ldp	x29, x30, [sp], #64
    e614:	ret
    e618:	stp	x29, x30, [sp, #-96]!
    e61c:	mov	x29, sp
    e620:	str	x0, [sp, #24]
    e624:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    e628:	add	x0, x0, #0x2a8
    e62c:	ldr	x0, [x0]
    e630:	ldr	x1, [sp, #24]
    e634:	sub	x0, x1, x0
    e638:	str	x0, [sp, #24]
    e63c:	ldr	x0, [sp, #24]
    e640:	str	x0, [sp, #88]
    e644:	ldr	x1, [sp, #88]
    e648:	ldr	x0, [sp, #24]
    e64c:	cmp	x1, x0
    e650:	b.eq	e678 <PyNumber_FloorDivide@plt+0x9a28>  // b.none
    e654:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e658:	ldr	x0, [x0, #4008]
    e65c:	ldr	x2, [x0]
    e660:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    e664:	add	x1, x0, #0x2b0
    e668:	mov	x0, x2
    e66c:	bl	48c0 <PyErr_SetString@plt>
    e670:	mov	x0, #0xffffffffffffffff    	// #-1
    e674:	b	e6d4 <PyNumber_FloorDivide@plt+0x9a84>
    e678:	add	x0, sp, #0x20
    e67c:	mov	x1, x0
    e680:	ldr	x0, [sp, #88]
    e684:	bl	4c10 <_PyTime_localtime@plt>
    e688:	cmp	w0, #0x0
    e68c:	b.eq	e698 <PyNumber_FloorDivide@plt+0x9a48>  // b.none
    e690:	mov	x0, #0xffffffffffffffff    	// #-1
    e694:	b	e6d4 <PyNumber_FloorDivide@plt+0x9a84>
    e698:	ldr	w0, [sp, #52]
    e69c:	add	w6, w0, #0x76c
    e6a0:	ldr	w0, [sp, #48]
    e6a4:	add	w0, w0, #0x1
    e6a8:	ldr	w1, [sp, #44]
    e6ac:	ldr	w2, [sp, #40]
    e6b0:	ldr	w3, [sp, #36]
    e6b4:	ldr	w4, [sp, #32]
    e6b8:	mov	w5, w4
    e6bc:	mov	w4, w3
    e6c0:	mov	w3, w2
    e6c4:	mov	w2, w1
    e6c8:	mov	w1, w0
    e6cc:	mov	w0, w6
    e6d0:	bl	e53c <PyNumber_FloorDivide@plt+0x98ec>
    e6d4:	ldp	x29, x30, [sp], #96
    e6d8:	ret
    e6dc:	sub	sp, sp, #0xc0
    e6e0:	stp	x29, x30, [sp, #16]
    e6e4:	add	x29, sp, #0x10
    e6e8:	str	x0, [sp, #72]
    e6ec:	str	x1, [sp, #64]
    e6f0:	str	x2, [sp, #56]
    e6f4:	str	w3, [sp, #52]
    e6f8:	str	x4, [sp, #40]
    e6fc:	str	wzr, [sp, #188]
    e700:	add	x0, sp, #0x50
    e704:	ldr	x2, [sp, #64]
    e708:	mov	x1, x0
    e70c:	ldr	x0, [sp, #56]
    e710:	blr	x2
    e714:	cmp	w0, #0x0
    e718:	b.eq	e724 <PyNumber_FloorDivide@plt+0x9ad4>  // b.none
    e71c:	mov	x0, #0x0                   	// #0
    e720:	b	e8a0 <PyNumber_FloorDivide@plt+0x9c50>
    e724:	ldr	w0, [sp, #100]
    e728:	add	w0, w0, #0x76c
    e72c:	str	w0, [sp, #184]
    e730:	ldr	w0, [sp, #96]
    e734:	add	w0, w0, #0x1
    e738:	str	w0, [sp, #180]
    e73c:	ldr	w0, [sp, #92]
    e740:	str	w0, [sp, #176]
    e744:	ldr	w0, [sp, #88]
    e748:	str	w0, [sp, #172]
    e74c:	ldr	w0, [sp, #84]
    e750:	str	w0, [sp, #168]
    e754:	ldr	w0, [sp, #80]
    e758:	mov	w1, #0x3b                  	// #59
    e75c:	cmp	w0, #0x3b
    e760:	csel	w0, w0, w1, le
    e764:	str	w0, [sp, #164]
    e768:	ldr	x1, [sp, #40]
    e76c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e770:	ldr	x0, [x0, #4024]
    e774:	cmp	x1, x0
    e778:	b.ne	e86c <PyNumber_FloorDivide@plt+0x9c1c>  // b.any
    e77c:	ldr	x1, [sp, #64]
    e780:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e784:	ldr	x0, [x0, #4064]
    e788:	cmp	x1, x0
    e78c:	b.ne	e86c <PyNumber_FloorDivide@plt+0x9c1c>  // b.any
    e790:	ldr	w5, [sp, #164]
    e794:	ldr	w4, [sp, #168]
    e798:	ldr	w3, [sp, #172]
    e79c:	ldr	w2, [sp, #176]
    e7a0:	ldr	w1, [sp, #180]
    e7a4:	ldr	w0, [sp, #184]
    e7a8:	bl	e53c <PyNumber_FloorDivide@plt+0x98ec>
    e7ac:	str	x0, [sp, #152]
    e7b0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    e7b4:	add	x0, x0, #0x2a8
    e7b8:	ldr	x1, [x0]
    e7bc:	ldr	x0, [sp, #56]
    e7c0:	add	x1, x1, x0
    e7c4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    e7c8:	add	x0, x0, #0x2a0
    e7cc:	ldr	x0, [x0]
    e7d0:	sub	x0, x1, x0
    e7d4:	bl	e618 <PyNumber_FloorDivide@plt+0x99c8>
    e7d8:	str	x0, [sp, #144]
    e7dc:	ldr	x0, [sp, #144]
    e7e0:	cmn	x0, #0x1
    e7e4:	b.ne	e7f0 <PyNumber_FloorDivide@plt+0x9ba0>  // b.any
    e7e8:	mov	x0, #0x0                   	// #0
    e7ec:	b	e8a0 <PyNumber_FloorDivide@plt+0x9c50>
    e7f0:	ldr	x1, [sp, #152]
    e7f4:	ldr	x0, [sp, #144]
    e7f8:	sub	x1, x1, x0
    e7fc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    e800:	add	x0, x0, #0x2a0
    e804:	ldr	x0, [x0]
    e808:	sub	x0, x1, x0
    e80c:	str	x0, [sp, #136]
    e810:	ldr	x0, [sp, #136]
    e814:	cmp	x0, #0x0
    e818:	b.ge	e86c <PyNumber_FloorDivide@plt+0x9c1c>  // b.tcont
    e81c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    e820:	add	x0, x0, #0x2a8
    e824:	ldr	x1, [x0]
    e828:	ldr	x0, [sp, #56]
    e82c:	add	x1, x1, x0
    e830:	ldr	x0, [sp, #136]
    e834:	add	x0, x1, x0
    e838:	bl	e618 <PyNumber_FloorDivide@plt+0x99c8>
    e83c:	str	x0, [sp, #144]
    e840:	ldr	x0, [sp, #144]
    e844:	cmn	x0, #0x1
    e848:	b.ne	e854 <PyNumber_FloorDivide@plt+0x9c04>  // b.any
    e84c:	mov	x0, #0x0                   	// #0
    e850:	b	e8a0 <PyNumber_FloorDivide@plt+0x9c50>
    e854:	ldr	x1, [sp, #144]
    e858:	ldr	x0, [sp, #152]
    e85c:	cmp	x1, x0
    e860:	b.ne	e86c <PyNumber_FloorDivide@plt+0x9c1c>  // b.any
    e864:	mov	w0, #0x1                   	// #1
    e868:	str	w0, [sp, #188]
    e86c:	ldr	x0, [sp, #72]
    e870:	str	x0, [sp, #8]
    e874:	ldr	w0, [sp, #188]
    e878:	str	w0, [sp]
    e87c:	ldr	x7, [sp, #40]
    e880:	ldr	w6, [sp, #52]
    e884:	ldr	w5, [sp, #164]
    e888:	ldr	w4, [sp, #168]
    e88c:	ldr	w3, [sp, #172]
    e890:	ldr	w2, [sp, #176]
    e894:	ldr	w1, [sp, #180]
    e898:	ldr	w0, [sp, #184]
    e89c:	bl	68ac <PyNumber_FloorDivide@plt+0x1c5c>
    e8a0:	ldp	x29, x30, [sp, #16]
    e8a4:	add	sp, sp, #0xc0
    e8a8:	ret
    e8ac:	stp	x29, x30, [sp, #-64]!
    e8b0:	mov	x29, sp
    e8b4:	str	x0, [sp, #40]
    e8b8:	str	x1, [sp, #32]
    e8bc:	str	x2, [sp, #24]
    e8c0:	str	x3, [sp, #16]
    e8c4:	add	x1, sp, #0x30
    e8c8:	add	x0, sp, #0x38
    e8cc:	mov	w3, #0x2                   	// #2
    e8d0:	mov	x2, x1
    e8d4:	mov	x1, x0
    e8d8:	ldr	x0, [sp, #24]
    e8dc:	bl	47f0 <_PyTime_ObjectToTimeval@plt>
    e8e0:	cmn	w0, #0x1
    e8e4:	b.ne	e8f0 <PyNumber_FloorDivide@plt+0x9ca0>  // b.any
    e8e8:	mov	x0, #0x0                   	// #0
    e8ec:	b	e910 <PyNumber_FloorDivide@plt+0x9cc0>
    e8f0:	ldr	x0, [sp, #56]
    e8f4:	ldr	x1, [sp, #48]
    e8f8:	ldr	x4, [sp, #16]
    e8fc:	mov	w3, w1
    e900:	mov	x2, x0
    e904:	ldr	x1, [sp, #32]
    e908:	ldr	x0, [sp, #40]
    e90c:	bl	e6dc <PyNumber_FloorDivide@plt+0x9a8c>
    e910:	ldp	x29, x30, [sp], #64
    e914:	ret
    e918:	stp	x29, x30, [sp, #-80]!
    e91c:	mov	x29, sp
    e920:	str	x0, [sp, #40]
    e924:	str	x1, [sp, #32]
    e928:	str	x2, [sp, #24]
    e92c:	bl	4830 <_PyTime_GetSystemClock@plt>
    e930:	str	x0, [sp, #72]
    e934:	add	x1, sp, #0x3c
    e938:	add	x0, sp, #0x40
    e93c:	mov	w3, #0x0                   	// #0
    e940:	mov	x2, x1
    e944:	mov	x1, x0
    e948:	ldr	x0, [sp, #72]
    e94c:	bl	4880 <_PyTime_AsTimevalTime_t@plt>
    e950:	cmp	w0, #0x0
    e954:	b.ge	e960 <PyNumber_FloorDivide@plt+0x9d10>  // b.tcont
    e958:	mov	x0, #0x0                   	// #0
    e95c:	b	e980 <PyNumber_FloorDivide@plt+0x9d30>
    e960:	ldr	x0, [sp, #64]
    e964:	ldr	w1, [sp, #60]
    e968:	ldr	x4, [sp, #24]
    e96c:	mov	w3, w1
    e970:	mov	x2, x0
    e974:	ldr	x1, [sp, #32]
    e978:	ldr	x0, [sp, #40]
    e97c:	bl	e6dc <PyNumber_FloorDivide@plt+0x9a8c>
    e980:	ldp	x29, x30, [sp], #80
    e984:	ret
    e988:	stp	x29, x30, [sp, #-48]!
    e98c:	mov	x29, sp
    e990:	str	x0, [sp, #24]
    e994:	str	x1, [sp, #16]
    e998:	ldr	x0, [sp, #16]
    e99c:	bl	6d90 <PyNumber_FloorDivide@plt+0x2140>
    e9a0:	cmp	w0, #0x0
    e9a4:	b.ge	e9b0 <PyNumber_FloorDivide@plt+0x9d60>  // b.tcont
    e9a8:	mov	x0, #0x0                   	// #0
    e9ac:	b	ea30 <PyNumber_FloorDivide@plt+0x9de0>
    e9b0:	ldr	x1, [sp, #16]
    e9b4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e9b8:	ldr	x0, [x0, #4024]
    e9bc:	cmp	x1, x0
    e9c0:	b.ne	e9d0 <PyNumber_FloorDivide@plt+0x9d80>  // b.any
    e9c4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e9c8:	ldr	x0, [x0, #4064]
    e9cc:	b	e9d8 <PyNumber_FloorDivide@plt+0x9d88>
    e9d0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    e9d4:	ldr	x0, [x0, #4016]
    e9d8:	ldr	x2, [sp, #16]
    e9dc:	mov	x1, x0
    e9e0:	ldr	x0, [sp, #24]
    e9e4:	bl	e918 <PyNumber_FloorDivide@plt+0x9cc8>
    e9e8:	str	x0, [sp, #40]
    e9ec:	ldr	x0, [sp, #40]
    e9f0:	cmp	x0, #0x0
    e9f4:	b.eq	ea2c <PyNumber_FloorDivide@plt+0x9ddc>  // b.none
    e9f8:	ldr	x1, [sp, #16]
    e9fc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ea00:	ldr	x0, [x0, #4024]
    ea04:	cmp	x1, x0
    ea08:	b.eq	ea2c <PyNumber_FloorDivide@plt+0x9ddc>  // b.none
    ea0c:	ldr	x3, [sp, #40]
    ea10:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    ea14:	add	x2, x0, #0x2e0
    ea18:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    ea1c:	add	x1, x0, #0xc88
    ea20:	ldr	x0, [sp, #16]
    ea24:	bl	4aa0 <_PyObject_CallMethodId@plt>
    ea28:	str	x0, [sp, #40]
    ea2c:	ldr	x0, [sp, #40]
    ea30:	ldp	x29, x30, [sp], #48
    ea34:	ret
    ea38:	stp	x29, x30, [sp, #-32]!
    ea3c:	mov	x29, sp
    ea40:	str	x0, [sp, #24]
    ea44:	str	x1, [sp, #16]
    ea48:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ea4c:	ldr	x2, [x0, #4024]
    ea50:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ea54:	ldr	x1, [x0, #4016]
    ea58:	ldr	x0, [sp, #24]
    ea5c:	bl	e918 <PyNumber_FloorDivide@plt+0x9cc8>
    ea60:	ldp	x29, x30, [sp], #32
    ea64:	ret
    ea68:	stp	x29, x30, [sp, #-80]!
    ea6c:	mov	x29, sp
    ea70:	str	x0, [sp, #40]
    ea74:	str	x1, [sp, #32]
    ea78:	str	x2, [sp, #24]
    ea7c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ea80:	ldr	x0, [x0, #4024]
    ea84:	str	x0, [sp, #56]
    ea88:	add	x1, sp, #0x38
    ea8c:	add	x0, sp, #0x40
    ea90:	mov	x5, x1
    ea94:	mov	x4, x0
    ea98:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    ea9c:	add	x3, x0, #0xf60
    eaa0:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    eaa4:	add	x2, x0, #0x2e8
    eaa8:	ldr	x1, [sp, #24]
    eaac:	ldr	x0, [sp, #32]
    eab0:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    eab4:	cmp	w0, #0x0
    eab8:	b.ne	eac4 <PyNumber_FloorDivide@plt+0x9e74>  // b.any
    eabc:	mov	x0, #0x0                   	// #0
    eac0:	b	eb6c <PyNumber_FloorDivide@plt+0x9f1c>
    eac4:	ldr	x0, [sp, #56]
    eac8:	bl	6d90 <PyNumber_FloorDivide@plt+0x2140>
    eacc:	cmp	w0, #0x0
    ead0:	b.ge	eadc <PyNumber_FloorDivide@plt+0x9e8c>  // b.tcont
    ead4:	mov	x0, #0x0                   	// #0
    ead8:	b	eb6c <PyNumber_FloorDivide@plt+0x9f1c>
    eadc:	ldr	x1, [sp, #56]
    eae0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    eae4:	ldr	x0, [x0, #4024]
    eae8:	cmp	x1, x0
    eaec:	b.ne	eafc <PyNumber_FloorDivide@plt+0x9eac>  // b.any
    eaf0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    eaf4:	ldr	x0, [x0, #4064]
    eaf8:	b	eb04 <PyNumber_FloorDivide@plt+0x9eb4>
    eafc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    eb00:	ldr	x0, [x0, #4016]
    eb04:	ldr	x1, [sp, #64]
    eb08:	ldr	x2, [sp, #56]
    eb0c:	mov	x3, x2
    eb10:	mov	x2, x1
    eb14:	mov	x1, x0
    eb18:	ldr	x0, [sp, #40]
    eb1c:	bl	e8ac <PyNumber_FloorDivide@plt+0x9c5c>
    eb20:	str	x0, [sp, #72]
    eb24:	ldr	x0, [sp, #72]
    eb28:	cmp	x0, #0x0
    eb2c:	b.eq	eb68 <PyNumber_FloorDivide@plt+0x9f18>  // b.none
    eb30:	ldr	x1, [sp, #56]
    eb34:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    eb38:	ldr	x0, [x0, #4024]
    eb3c:	cmp	x1, x0
    eb40:	b.eq	eb68 <PyNumber_FloorDivide@plt+0x9f18>  // b.none
    eb44:	ldr	x4, [sp, #56]
    eb48:	ldr	x3, [sp, #72]
    eb4c:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    eb50:	add	x2, x0, #0x2e0
    eb54:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    eb58:	add	x1, x0, #0xc88
    eb5c:	mov	x0, x4
    eb60:	bl	4aa0 <_PyObject_CallMethodId@plt>
    eb64:	str	x0, [sp, #72]
    eb68:	ldr	x0, [sp, #72]
    eb6c:	ldp	x29, x30, [sp], #80
    eb70:	ret
    eb74:	stp	x29, x30, [sp, #-48]!
    eb78:	mov	x29, sp
    eb7c:	str	x0, [sp, #24]
    eb80:	str	x1, [sp, #16]
    eb84:	str	xzr, [sp, #40]
    eb88:	add	x0, sp, #0x20
    eb8c:	mov	x2, x0
    eb90:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    eb94:	add	x1, x0, #0x300
    eb98:	ldr	x0, [sp, #16]
    eb9c:	bl	4a70 <PyArg_ParseTuple@plt>
    eba0:	cmp	w0, #0x0
    eba4:	b.eq	ebcc <PyNumber_FloorDivide@plt+0x9f7c>  // b.none
    eba8:	ldr	x1, [sp, #32]
    ebac:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ebb0:	ldr	x3, [x0, #4024]
    ebb4:	mov	x2, x1
    ebb8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ebbc:	ldr	x1, [x0, #4016]
    ebc0:	ldr	x0, [sp, #24]
    ebc4:	bl	e8ac <PyNumber_FloorDivide@plt+0x9c5c>
    ebc8:	str	x0, [sp, #40]
    ebcc:	ldr	x0, [sp, #40]
    ebd0:	ldp	x29, x30, [sp], #48
    ebd4:	ret
    ebd8:	stp	x29, x30, [sp, #-48]!
    ebdc:	mov	x29, sp
    ebe0:	str	x0, [sp, #24]
    ebe4:	str	x1, [sp, #16]
    ebe8:	add	x1, sp, #0x20
    ebec:	add	x0, sp, #0x28
    ebf0:	mov	x3, x1
    ebf4:	mov	x2, x0
    ebf8:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    ebfc:	add	x1, x0, #0x318
    ec00:	ldr	x0, [sp, #16]
    ec04:	bl	4a70 <PyArg_ParseTuple@plt>
    ec08:	cmp	w0, #0x0
    ec0c:	b.ne	ec18 <PyNumber_FloorDivide@plt+0x9fc8>  // b.any
    ec10:	mov	x0, #0x0                   	// #0
    ec14:	b	ec98 <PyNumber_FloorDivide@plt+0xa048>
    ec18:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    ec1c:	add	x0, x0, #0x98
    ec20:	ldr	x0, [x0]
    ec24:	cmp	x0, #0x0
    ec28:	b.ne	ec64 <PyNumber_FloorDivide@plt+0xa014>  // b.any
    ec2c:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    ec30:	add	x0, x0, #0x328
    ec34:	bl	4a10 <PyImport_ImportModuleNoBlock@plt>
    ec38:	mov	x1, x0
    ec3c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    ec40:	add	x0, x0, #0x98
    ec44:	str	x1, [x0]
    ec48:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    ec4c:	add	x0, x0, #0x98
    ec50:	ldr	x0, [x0]
    ec54:	cmp	x0, #0x0
    ec58:	b.ne	ec64 <PyNumber_FloorDivide@plt+0xa014>  // b.any
    ec5c:	mov	x0, #0x0                   	// #0
    ec60:	b	ec98 <PyNumber_FloorDivide@plt+0xa048>
    ec64:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
    ec68:	add	x0, x0, #0x98
    ec6c:	ldr	x6, [x0]
    ec70:	ldr	x0, [sp, #40]
    ec74:	ldr	x1, [sp, #32]
    ec78:	mov	x5, #0x0                   	// #0
    ec7c:	mov	x4, x1
    ec80:	mov	x3, x0
    ec84:	ldr	x2, [sp, #24]
    ec88:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    ec8c:	add	x1, x0, #0xf78
    ec90:	mov	x0, x6
    ec94:	bl	4b30 <_PyObject_CallMethodIdObjArgs@plt>
    ec98:	ldp	x29, x30, [sp], #48
    ec9c:	ret
    eca0:	sub	sp, sp, #0x60
    eca4:	stp	x29, x30, [sp, #16]
    eca8:	add	x29, sp, #0x10
    ecac:	str	x0, [sp, #56]
    ecb0:	str	x1, [sp, #48]
    ecb4:	str	x2, [sp, #40]
    ecb8:	str	xzr, [sp, #64]
    ecbc:	str	xzr, [sp, #88]
    ecc0:	add	x2, sp, #0x48
    ecc4:	add	x1, sp, #0x50
    ecc8:	add	x0, sp, #0x40
    eccc:	str	x0, [sp]
    ecd0:	mov	x7, x2
    ecd4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    ecd8:	add	x6, x0, #0x790
    ecdc:	mov	x5, x1
    ece0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    ece4:	add	x4, x0, #0x2b0
    ece8:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    ecec:	add	x3, x0, #0xf90
    ecf0:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    ecf4:	add	x2, x0, #0x338
    ecf8:	ldr	x1, [sp, #40]
    ecfc:	ldr	x0, [sp, #48]
    ed00:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    ed04:	cmp	w0, #0x0
    ed08:	b.eq	edfc <PyNumber_FloorDivide@plt+0xa1ac>  // b.none
    ed0c:	ldr	x0, [sp, #64]
    ed10:	cmp	x0, #0x0
    ed14:	b.ne	ed44 <PyNumber_FloorDivide@plt+0xa0f4>  // b.any
    ed18:	ldr	x0, [sp, #72]
    ed1c:	ldrb	w0, [x0, #24]
    ed20:	cmp	w0, #0x0
    ed24:	b.eq	ed38 <PyNumber_FloorDivide@plt+0xa0e8>  // b.none
    ed28:	ldr	x0, [sp, #72]
    ed2c:	ldr	x0, [x0, #32]
    ed30:	str	x0, [sp, #64]
    ed34:	b	ed44 <PyNumber_FloorDivide@plt+0xa0f4>
    ed38:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ed3c:	ldr	x0, [x0, #4024]
    ed40:	str	x0, [sp, #64]
    ed44:	ldr	x0, [sp, #80]
    ed48:	ldrb	w0, [x0, #25]
    ed4c:	lsl	w0, w0, #8
    ed50:	ldr	x1, [sp, #80]
    ed54:	ldrb	w1, [x1, #26]
    ed58:	orr	w8, w0, w1
    ed5c:	ldr	x0, [sp, #80]
    ed60:	ldrb	w0, [x0, #27]
    ed64:	mov	w9, w0
    ed68:	ldr	x0, [sp, #80]
    ed6c:	ldrb	w0, [x0, #28]
    ed70:	mov	w10, w0
    ed74:	ldr	x0, [sp, #72]
    ed78:	ldrb	w0, [x0, #25]
    ed7c:	mov	w11, w0
    ed80:	ldr	x0, [sp, #72]
    ed84:	ldrb	w0, [x0, #26]
    ed88:	mov	w4, w0
    ed8c:	ldr	x0, [sp, #72]
    ed90:	ldrb	w0, [x0, #27]
    ed94:	mov	w5, w0
    ed98:	ldr	x0, [sp, #72]
    ed9c:	ldrb	w0, [x0, #28]
    eda0:	lsl	w1, w0, #16
    eda4:	ldr	x0, [sp, #72]
    eda8:	ldrb	w0, [x0, #29]
    edac:	lsl	w0, w0, #8
    edb0:	orr	w0, w1, w0
    edb4:	ldr	x1, [sp, #72]
    edb8:	ldrb	w1, [x1, #30]
    edbc:	orr	w1, w0, w1
    edc0:	ldr	x2, [sp, #64]
    edc4:	ldr	x0, [sp, #72]
    edc8:	ldrb	w0, [x0, #31]
    edcc:	mov	w3, w0
    edd0:	ldr	x0, [sp, #56]
    edd4:	str	x0, [sp, #8]
    edd8:	str	w3, [sp]
    eddc:	mov	x7, x2
    ede0:	mov	w6, w1
    ede4:	mov	w3, w11
    ede8:	mov	w2, w10
    edec:	mov	w1, w9
    edf0:	mov	w0, w8
    edf4:	bl	68ac <PyNumber_FloorDivide@plt+0x1c5c>
    edf8:	str	x0, [sp, #88]
    edfc:	ldr	x0, [sp, #88]
    ee00:	ldp	x29, x30, [sp, #16]
    ee04:	add	sp, sp, #0x60
    ee08:	ret
    ee0c:	stp	x29, x30, [sp, #-48]!
    ee10:	mov	x29, sp
    ee14:	str	x0, [sp, #24]
    ee18:	ldr	x0, [sp, #24]
    ee1c:	bl	4910 <PyUnicode_GetLength@plt>
    ee20:	str	x0, [sp, #40]
    ee24:	ldr	x0, [sp, #40]
    ee28:	cmp	x0, #0x0
    ee2c:	b.ge	ee38 <PyNumber_FloorDivide@plt+0xa1e8>  // b.tcont
    ee30:	mov	x0, #0x0                   	// #0
    ee34:	b	f0a4 <PyNumber_FloorDivide@plt+0xa454>
    ee38:	ldr	x0, [sp, #40]
    ee3c:	cmp	x0, #0xa
    ee40:	b.le	f03c <PyNumber_FloorDivide@plt+0xa3ec>
    ee44:	ldr	x0, [sp, #24]
    ee48:	ldrb	w0, [x0, #32]
    ee4c:	and	w0, w0, #0x1c
    ee50:	and	w0, w0, #0xff
    ee54:	cmp	w0, #0x4
    ee58:	b.eq	f03c <PyNumber_FloorDivide@plt+0xa3ec>  // b.none
    ee5c:	ldr	x0, [sp, #24]
    ee60:	ldrb	w0, [x0, #32]
    ee64:	and	w0, w0, #0x1c
    ee68:	and	w0, w0, #0xff
    ee6c:	cmp	w0, #0x8
    ee70:	b.ne	eedc <PyNumber_FloorDivide@plt+0xa28c>  // b.any
    ee74:	ldr	x0, [sp, #24]
    ee78:	ldrb	w0, [x0, #32]
    ee7c:	and	w0, w0, #0x20
    ee80:	and	w0, w0, #0xff
    ee84:	cmp	w0, #0x0
    ee88:	b.eq	eebc <PyNumber_FloorDivide@plt+0xa26c>  // b.none
    ee8c:	ldr	x0, [sp, #24]
    ee90:	ldrb	w0, [x0, #32]
    ee94:	and	w0, w0, #0x40
    ee98:	and	w0, w0, #0xff
    ee9c:	cmp	w0, #0x0
    eea0:	b.eq	eeb0 <PyNumber_FloorDivide@plt+0xa260>  // b.none
    eea4:	ldr	x0, [sp, #24]
    eea8:	add	x0, x0, #0x44
    eeac:	b	eec8 <PyNumber_FloorDivide@plt+0xa278>
    eeb0:	ldr	x0, [sp, #24]
    eeb4:	add	x0, x0, #0x5c
    eeb8:	b	eec8 <PyNumber_FloorDivide@plt+0xa278>
    eebc:	ldr	x0, [sp, #24]
    eec0:	ldr	x0, [x0, #72]
    eec4:	add	x0, x0, #0x14
    eec8:	ldrh	w1, [x0]
    eecc:	mov	w0, #0xd7ff                	// #55295
    eed0:	cmp	w1, w0
    eed4:	b.ls	f03c <PyNumber_FloorDivide@plt+0xa3ec>  // b.plast
    eed8:	b	ef40 <PyNumber_FloorDivide@plt+0xa2f0>
    eedc:	ldr	x0, [sp, #24]
    eee0:	ldrb	w0, [x0, #32]
    eee4:	and	w0, w0, #0x20
    eee8:	and	w0, w0, #0xff
    eeec:	cmp	w0, #0x0
    eef0:	b.eq	ef24 <PyNumber_FloorDivide@plt+0xa2d4>  // b.none
    eef4:	ldr	x0, [sp, #24]
    eef8:	ldrb	w0, [x0, #32]
    eefc:	and	w0, w0, #0x40
    ef00:	and	w0, w0, #0xff
    ef04:	cmp	w0, #0x0
    ef08:	b.eq	ef18 <PyNumber_FloorDivide@plt+0xa2c8>  // b.none
    ef0c:	ldr	x0, [sp, #24]
    ef10:	add	x0, x0, #0x58
    ef14:	b	ef30 <PyNumber_FloorDivide@plt+0xa2e0>
    ef18:	ldr	x0, [sp, #24]
    ef1c:	add	x0, x0, #0x70
    ef20:	b	ef30 <PyNumber_FloorDivide@plt+0xa2e0>
    ef24:	ldr	x0, [sp, #24]
    ef28:	ldr	x0, [x0, #72]
    ef2c:	add	x0, x0, #0x28
    ef30:	ldr	w1, [x0]
    ef34:	mov	w0, #0xd7ff                	// #55295
    ef38:	cmp	w1, w0
    ef3c:	b.ls	f03c <PyNumber_FloorDivide@plt+0xa3ec>  // b.plast
    ef40:	ldr	x0, [sp, #24]
    ef44:	ldrb	w0, [x0, #32]
    ef48:	and	w0, w0, #0x1c
    ef4c:	and	w0, w0, #0xff
    ef50:	cmp	w0, #0x4
    ef54:	b.eq	f04c <PyNumber_FloorDivide@plt+0xa3fc>  // b.none
    ef58:	ldr	x0, [sp, #24]
    ef5c:	ldrb	w0, [x0, #32]
    ef60:	and	w0, w0, #0x1c
    ef64:	and	w0, w0, #0xff
    ef68:	cmp	w0, #0x8
    ef6c:	b.ne	efd8 <PyNumber_FloorDivide@plt+0xa388>  // b.any
    ef70:	ldr	x0, [sp, #24]
    ef74:	ldrb	w0, [x0, #32]
    ef78:	and	w0, w0, #0x20
    ef7c:	and	w0, w0, #0xff
    ef80:	cmp	w0, #0x0
    ef84:	b.eq	efb8 <PyNumber_FloorDivide@plt+0xa368>  // b.none
    ef88:	ldr	x0, [sp, #24]
    ef8c:	ldrb	w0, [x0, #32]
    ef90:	and	w0, w0, #0x40
    ef94:	and	w0, w0, #0xff
    ef98:	cmp	w0, #0x0
    ef9c:	b.eq	efac <PyNumber_FloorDivide@plt+0xa35c>  // b.none
    efa0:	ldr	x0, [sp, #24]
    efa4:	add	x0, x0, #0x44
    efa8:	b	efc4 <PyNumber_FloorDivide@plt+0xa374>
    efac:	ldr	x0, [sp, #24]
    efb0:	add	x0, x0, #0x5c
    efb4:	b	efc4 <PyNumber_FloorDivide@plt+0xa374>
    efb8:	ldr	x0, [sp, #24]
    efbc:	ldr	x0, [x0, #72]
    efc0:	add	x0, x0, #0x14
    efc4:	ldrh	w1, [x0]
    efc8:	mov	w0, #0xdfff                	// #57343
    efcc:	cmp	w1, w0
    efd0:	b.hi	f03c <PyNumber_FloorDivide@plt+0xa3ec>  // b.pmore
    efd4:	b	f04c <PyNumber_FloorDivide@plt+0xa3fc>
    efd8:	ldr	x0, [sp, #24]
    efdc:	ldrb	w0, [x0, #32]
    efe0:	and	w0, w0, #0x20
    efe4:	and	w0, w0, #0xff
    efe8:	cmp	w0, #0x0
    efec:	b.eq	f020 <PyNumber_FloorDivide@plt+0xa3d0>  // b.none
    eff0:	ldr	x0, [sp, #24]
    eff4:	ldrb	w0, [x0, #32]
    eff8:	and	w0, w0, #0x40
    effc:	and	w0, w0, #0xff
    f000:	cmp	w0, #0x0
    f004:	b.eq	f014 <PyNumber_FloorDivide@plt+0xa3c4>  // b.none
    f008:	ldr	x0, [sp, #24]
    f00c:	add	x0, x0, #0x58
    f010:	b	f02c <PyNumber_FloorDivide@plt+0xa3dc>
    f014:	ldr	x0, [sp, #24]
    f018:	add	x0, x0, #0x70
    f01c:	b	f02c <PyNumber_FloorDivide@plt+0xa3dc>
    f020:	ldr	x0, [sp, #24]
    f024:	ldr	x0, [x0, #72]
    f028:	add	x0, x0, #0x28
    f02c:	ldr	w1, [x0]
    f030:	mov	w0, #0xdfff                	// #57343
    f034:	cmp	w1, w0
    f038:	b.ls	f04c <PyNumber_FloorDivide@plt+0xa3fc>  // b.plast
    f03c:	ldr	x0, [sp, #24]
    f040:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    f044:	ldr	x0, [sp, #24]
    f048:	b	f0a4 <PyNumber_FloorDivide@plt+0xa454>
    f04c:	ldr	x0, [sp, #24]
    f050:	bl	47e0 <_PyUnicode_Copy@plt>
    f054:	str	x0, [sp, #32]
    f058:	ldr	x0, [sp, #32]
    f05c:	cmp	x0, #0x0
    f060:	b.ne	f06c <PyNumber_FloorDivide@plt+0xa41c>  // b.any
    f064:	mov	x0, #0x0                   	// #0
    f068:	b	f0a4 <PyNumber_FloorDivide@plt+0xa454>
    f06c:	mov	w2, #0x54                  	// #84
    f070:	mov	x1, #0xa                   	// #10
    f074:	ldr	x0, [sp, #32]
    f078:	bl	48a0 <PyUnicode_WriteChar@plt>
    f07c:	cmp	w0, #0x0
    f080:	b.eq	f0a0 <PyNumber_FloorDivide@plt+0xa450>  // b.none
    f084:	ldr	x2, [sp, #32]
    f088:	mov	w1, #0x13eb                	// #5099
    f08c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f090:	add	x0, x0, #0xb30
    f094:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f098:	mov	x0, #0x0                   	// #0
    f09c:	b	f0a4 <PyNumber_FloorDivide@plt+0xa454>
    f0a0:	ldr	x0, [sp, #32]
    f0a4:	ldp	x29, x30, [sp], #48
    f0a8:	ret
    f0ac:	sub	sp, sp, #0x90
    f0b0:	stp	x29, x30, [sp, #16]
    f0b4:	add	x29, sp, #0x10
    f0b8:	str	x0, [sp, #40]
    f0bc:	str	x1, [sp, #32]
    f0c0:	ldr	x0, [sp, #32]
    f0c4:	ldr	x0, [x0, #8]
    f0c8:	ldr	x0, [x0, #168]
    f0cc:	and	x0, x0, #0x10000000
    f0d0:	cmp	x0, #0x0
    f0d4:	b.ne	f0fc <PyNumber_FloorDivide@plt+0xa4ac>  // b.any
    f0d8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f0dc:	ldr	x0, [x0, #3976]
    f0e0:	ldr	x2, [x0]
    f0e4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    f0e8:	add	x1, x0, #0x4a8
    f0ec:	mov	x0, x2
    f0f0:	bl	48c0 <PyErr_SetString@plt>
    f0f4:	mov	x0, #0x0                   	// #0
    f0f8:	b	f374 <PyNumber_FloorDivide@plt+0xa724>
    f0fc:	ldr	x0, [sp, #32]
    f100:	bl	ee0c <PyNumber_FloorDivide@plt+0xa1bc>
    f104:	str	x0, [sp, #120]
    f108:	ldr	x0, [sp, #120]
    f10c:	cmp	x0, #0x0
    f110:	b.eq	f354 <PyNumber_FloorDivide@plt+0xa704>  // b.none
    f114:	add	x0, sp, #0x58
    f118:	mov	x1, x0
    f11c:	ldr	x0, [sp, #120]
    f120:	bl	4b90 <PyUnicode_AsUTF8AndSize@plt>
    f124:	str	x0, [sp, #112]
    f128:	ldr	x0, [sp, #112]
    f12c:	cmp	x0, #0x0
    f130:	b.ne	f150 <PyNumber_FloorDivide@plt+0xa500>  // b.any
    f134:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f138:	ldr	x0, [x0, #4032]
    f13c:	ldr	x0, [x0]
    f140:	bl	48e0 <PyErr_ExceptionMatches@plt>
    f144:	cmp	w0, #0x0
    f148:	b.eq	f35c <PyNumber_FloorDivide@plt+0xa70c>  // b.none
    f14c:	b	f330 <PyNumber_FloorDivide@plt+0xa6e0>
    f150:	ldr	x0, [sp, #112]
    f154:	str	x0, [sp, #136]
    f158:	str	wzr, [sp, #84]
    f15c:	str	wzr, [sp, #80]
    f160:	str	wzr, [sp, #76]
    f164:	str	wzr, [sp, #72]
    f168:	str	wzr, [sp, #68]
    f16c:	str	wzr, [sp, #64]
    f170:	str	wzr, [sp, #60]
    f174:	str	wzr, [sp, #56]
    f178:	str	wzr, [sp, #52]
    f17c:	add	x2, sp, #0x4c
    f180:	add	x1, sp, #0x50
    f184:	add	x0, sp, #0x54
    f188:	mov	x3, x2
    f18c:	mov	x2, x1
    f190:	mov	x1, x0
    f194:	ldr	x0, [sp, #136]
    f198:	bl	60f8 <PyNumber_FloorDivide@plt+0x14a8>
    f19c:	str	w0, [sp, #132]
    f1a0:	ldr	w0, [sp, #132]
    f1a4:	cmp	w0, #0x0
    f1a8:	b.ne	f294 <PyNumber_FloorDivide@plt+0xa644>  // b.any
    f1ac:	ldr	x0, [sp, #88]
    f1b0:	cmp	x0, #0xa
    f1b4:	b.le	f294 <PyNumber_FloorDivide@plt+0xa644>
    f1b8:	ldr	x0, [sp, #136]
    f1bc:	add	x0, x0, #0xa
    f1c0:	ldrb	w0, [x0]
    f1c4:	sxtb	w0, w0
    f1c8:	cmp	w0, #0x0
    f1cc:	b.lt	f1e0 <PyNumber_FloorDivide@plt+0xa590>  // b.tstop
    f1d0:	ldr	x0, [sp, #136]
    f1d4:	add	x0, x0, #0xb
    f1d8:	str	x0, [sp, #136]
    f1dc:	b	f234 <PyNumber_FloorDivide@plt+0xa5e4>
    f1e0:	ldr	x0, [sp, #136]
    f1e4:	add	x0, x0, #0xa
    f1e8:	ldrb	w0, [x0]
    f1ec:	and	w0, w0, #0xf0
    f1f0:	cmp	w0, #0xe0
    f1f4:	b.eq	f204 <PyNumber_FloorDivide@plt+0xa5b4>  // b.none
    f1f8:	cmp	w0, #0xf0
    f1fc:	b.eq	f214 <PyNumber_FloorDivide@plt+0xa5c4>  // b.none
    f200:	b	f224 <PyNumber_FloorDivide@plt+0xa5d4>
    f204:	ldr	x0, [sp, #136]
    f208:	add	x0, x0, #0xd
    f20c:	str	x0, [sp, #136]
    f210:	b	f234 <PyNumber_FloorDivide@plt+0xa5e4>
    f214:	ldr	x0, [sp, #136]
    f218:	add	x0, x0, #0xe
    f21c:	str	x0, [sp, #136]
    f220:	b	f234 <PyNumber_FloorDivide@plt+0xa5e4>
    f224:	ldr	x0, [sp, #136]
    f228:	add	x0, x0, #0xc
    f22c:	str	x0, [sp, #136]
    f230:	nop
    f234:	ldr	x1, [sp, #88]
    f238:	ldr	x2, [sp, #136]
    f23c:	ldr	x0, [sp, #112]
    f240:	sub	x0, x2, x0
    f244:	sub	x0, x1, x0
    f248:	str	x0, [sp, #88]
    f24c:	ldr	x0, [sp, #88]
    f250:	mov	x8, x0
    f254:	add	x5, sp, #0x34
    f258:	add	x4, sp, #0x38
    f25c:	add	x3, sp, #0x3c
    f260:	add	x2, sp, #0x40
    f264:	add	x1, sp, #0x44
    f268:	add	x0, sp, #0x48
    f26c:	mov	x7, x5
    f270:	mov	x6, x4
    f274:	mov	x5, x3
    f278:	mov	x4, x2
    f27c:	mov	x3, x1
    f280:	mov	x2, x0
    f284:	mov	x1, x8
    f288:	ldr	x0, [sp, #136]
    f28c:	bl	6378 <PyNumber_FloorDivide@plt+0x1728>
    f290:	str	w0, [sp, #132]
    f294:	ldr	w0, [sp, #132]
    f298:	cmp	w0, #0x0
    f29c:	b.lt	f32c <PyNumber_FloorDivide@plt+0xa6dc>  // b.tstop
    f2a0:	ldr	w0, [sp, #56]
    f2a4:	ldr	w1, [sp, #52]
    f2a8:	mov	w2, w1
    f2ac:	mov	w1, w0
    f2b0:	ldr	w0, [sp, #132]
    f2b4:	bl	7320 <PyNumber_FloorDivide@plt+0x26d0>
    f2b8:	str	x0, [sp, #104]
    f2bc:	ldr	x0, [sp, #104]
    f2c0:	cmp	x0, #0x0
    f2c4:	b.eq	f364 <PyNumber_FloorDivide@plt+0xa714>  // b.none
    f2c8:	ldr	w8, [sp, #84]
    f2cc:	ldr	w1, [sp, #80]
    f2d0:	ldr	w2, [sp, #76]
    f2d4:	ldr	w3, [sp, #72]
    f2d8:	ldr	w4, [sp, #68]
    f2dc:	ldr	w5, [sp, #64]
    f2e0:	ldr	w6, [sp, #60]
    f2e4:	ldr	x0, [sp, #40]
    f2e8:	str	x0, [sp]
    f2ec:	ldr	x7, [sp, #104]
    f2f0:	mov	w0, w8
    f2f4:	bl	6978 <PyNumber_FloorDivide@plt+0x1d28>
    f2f8:	str	x0, [sp, #96]
    f2fc:	ldr	x2, [sp, #104]
    f300:	mov	w1, #0x143b                	// #5179
    f304:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f308:	add	x0, x0, #0xb30
    f30c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f310:	ldr	x2, [sp, #120]
    f314:	mov	w1, #0x143c                	// #5180
    f318:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f31c:	add	x0, x0, #0xb30
    f320:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f324:	ldr	x0, [sp, #96]
    f328:	b	f374 <PyNumber_FloorDivide@plt+0xa724>
    f32c:	nop
    f330:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f334:	ldr	x0, [x0, #3968]
    f338:	ldr	x3, [x0]
    f33c:	ldr	x2, [sp, #32]
    f340:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    f344:	add	x1, x0, #0x4d0
    f348:	mov	x0, x3
    f34c:	bl	4bb0 <PyErr_Format@plt>
    f350:	b	f368 <PyNumber_FloorDivide@plt+0xa718>
    f354:	nop
    f358:	b	f368 <PyNumber_FloorDivide@plt+0xa718>
    f35c:	nop
    f360:	b	f368 <PyNumber_FloorDivide@plt+0xa718>
    f364:	nop
    f368:	ldr	x0, [sp, #120]
    f36c:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    f370:	mov	x0, #0x0                   	// #0
    f374:	ldp	x29, x30, [sp, #16]
    f378:	add	sp, sp, #0x90
    f37c:	ret
    f380:	stp	x29, x30, [sp, #-32]!
    f384:	mov	x29, sp
    f388:	str	x0, [sp, #24]
    f38c:	ldr	x0, [sp, #24]
    f390:	ldrb	w0, [x0, #24]
    f394:	cmp	w0, #0x0
    f398:	b.eq	f3a8 <PyNumber_FloorDivide@plt+0xa758>  // b.none
    f39c:	ldr	x0, [sp, #24]
    f3a0:	ldr	x0, [x0, #40]
    f3a4:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
    f3a8:	ldr	x0, [sp, #24]
    f3ac:	ldr	x0, [x0, #8]
    f3b0:	ldr	x1, [x0, #320]
    f3b4:	ldr	x0, [sp, #24]
    f3b8:	blr	x1
    f3bc:	nop
    f3c0:	ldp	x29, x30, [sp], #32
    f3c4:	ret
    f3c8:	stp	x29, x30, [sp, #-32]!
    f3cc:	mov	x29, sp
    f3d0:	str	x0, [sp, #24]
    f3d4:	str	x1, [sp, #16]
    f3d8:	ldr	x0, [sp, #24]
    f3dc:	ldrb	w0, [x0, #24]
    f3e0:	cmp	w0, #0x0
    f3e4:	b.eq	f3f4 <PyNumber_FloorDivide@plt+0xa7a4>  // b.none
    f3e8:	ldr	x0, [sp, #24]
    f3ec:	ldr	x0, [x0, #40]
    f3f0:	b	f3fc <PyNumber_FloorDivide@plt+0xa7ac>
    f3f4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f3f8:	ldr	x0, [x0, #4024]
    f3fc:	ldr	x1, [sp, #24]
    f400:	bl	7090 <PyNumber_FloorDivide@plt+0x2440>
    f404:	ldp	x29, x30, [sp], #32
    f408:	ret
    f40c:	stp	x29, x30, [sp, #-32]!
    f410:	mov	x29, sp
    f414:	str	x0, [sp, #24]
    f418:	str	x1, [sp, #16]
    f41c:	ldr	x0, [sp, #24]
    f420:	ldrb	w0, [x0, #24]
    f424:	cmp	w0, #0x0
    f428:	b.eq	f438 <PyNumber_FloorDivide@plt+0xa7e8>  // b.none
    f42c:	ldr	x0, [sp, #24]
    f430:	ldr	x0, [x0, #40]
    f434:	b	f440 <PyNumber_FloorDivide@plt+0xa7f0>
    f438:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f43c:	ldr	x0, [x0, #4024]
    f440:	ldr	x1, [sp, #24]
    f444:	bl	70bc <PyNumber_FloorDivide@plt+0x246c>
    f448:	ldp	x29, x30, [sp], #32
    f44c:	ret
    f450:	stp	x29, x30, [sp, #-32]!
    f454:	mov	x29, sp
    f458:	str	x0, [sp, #24]
    f45c:	str	x1, [sp, #16]
    f460:	ldr	x0, [sp, #24]
    f464:	ldrb	w0, [x0, #24]
    f468:	cmp	w0, #0x0
    f46c:	b.eq	f47c <PyNumber_FloorDivide@plt+0xa82c>  // b.none
    f470:	ldr	x0, [sp, #24]
    f474:	ldr	x0, [x0, #40]
    f478:	b	f484 <PyNumber_FloorDivide@plt+0xa834>
    f47c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f480:	ldr	x0, [x0, #4024]
    f484:	ldr	x1, [sp, #24]
    f488:	bl	70e8 <PyNumber_FloorDivide@plt+0x2498>
    f48c:	ldp	x29, x30, [sp], #32
    f490:	ret
    f494:	sub	sp, sp, #0x60
    f498:	stp	x29, x30, [sp, #16]
    f49c:	add	x29, sp, #0x10
    f4a0:	str	x0, [sp, #56]
    f4a4:	str	x1, [sp, #48]
    f4a8:	str	w2, [sp, #44]
    f4ac:	ldr	x0, [sp, #56]
    f4b0:	ldrb	w0, [x0, #25]
    f4b4:	lsl	w0, w0, #8
    f4b8:	ldr	x1, [sp, #56]
    f4bc:	ldrb	w1, [x1, #26]
    f4c0:	orr	w0, w0, w1
    f4c4:	str	w0, [sp, #92]
    f4c8:	ldr	x0, [sp, #56]
    f4cc:	ldrb	w0, [x0, #27]
    f4d0:	str	w0, [sp, #88]
    f4d4:	ldr	x0, [sp, #56]
    f4d8:	ldrb	w0, [x0, #28]
    f4dc:	mov	w2, w0
    f4e0:	ldr	x0, [sp, #48]
    f4e4:	ldr	w1, [x0, #24]
    f4e8:	ldr	w0, [sp, #44]
    f4ec:	mul	w0, w1, w0
    f4f0:	add	w0, w2, w0
    f4f4:	str	w0, [sp, #84]
    f4f8:	ldr	x0, [sp, #56]
    f4fc:	ldrb	w0, [x0, #29]
    f500:	str	w0, [sp, #80]
    f504:	ldr	x0, [sp, #56]
    f508:	ldrb	w0, [x0, #30]
    f50c:	str	w0, [sp, #76]
    f510:	ldr	x0, [sp, #56]
    f514:	ldrb	w0, [x0, #31]
    f518:	mov	w2, w0
    f51c:	ldr	x0, [sp, #48]
    f520:	ldr	w1, [x0, #28]
    f524:	ldr	w0, [sp, #44]
    f528:	mul	w0, w1, w0
    f52c:	add	w0, w2, w0
    f530:	str	w0, [sp, #72]
    f534:	ldr	x0, [sp, #56]
    f538:	ldrb	w0, [x0, #32]
    f53c:	lsl	w1, w0, #16
    f540:	ldr	x0, [sp, #56]
    f544:	ldrb	w0, [x0, #33]
    f548:	lsl	w0, w0, #8
    f54c:	orr	w0, w1, w0
    f550:	ldr	x1, [sp, #56]
    f554:	ldrb	w1, [x1, #34]
    f558:	orr	w1, w0, w1
    f55c:	ldr	x0, [sp, #48]
    f560:	ldr	w2, [x0, #32]
    f564:	ldr	w0, [sp, #44]
    f568:	mul	w0, w2, w0
    f56c:	add	w0, w1, w0
    f570:	str	w0, [sp, #68]
    f574:	add	x6, sp, #0x44
    f578:	add	x5, sp, #0x48
    f57c:	add	x4, sp, #0x4c
    f580:	add	x3, sp, #0x50
    f584:	add	x2, sp, #0x54
    f588:	add	x1, sp, #0x58
    f58c:	add	x0, sp, #0x5c
    f590:	bl	5ea8 <PyNumber_FloorDivide@plt+0x1258>
    f594:	cmp	w0, #0x0
    f598:	b.ge	f5a4 <PyNumber_FloorDivide@plt+0xa954>  // b.tcont
    f59c:	mov	x0, #0x0                   	// #0
    f5a0:	b	f600 <PyNumber_FloorDivide@plt+0xa9b0>
    f5a4:	ldr	w8, [sp, #92]
    f5a8:	ldr	w9, [sp, #88]
    f5ac:	ldr	w2, [sp, #84]
    f5b0:	ldr	w3, [sp, #80]
    f5b4:	ldr	w4, [sp, #76]
    f5b8:	ldr	w5, [sp, #72]
    f5bc:	ldr	w6, [sp, #68]
    f5c0:	ldr	x0, [sp, #56]
    f5c4:	ldrb	w0, [x0, #24]
    f5c8:	cmp	w0, #0x0
    f5cc:	b.eq	f5dc <PyNumber_FloorDivide@plt+0xa98c>  // b.none
    f5d0:	ldr	x0, [sp, #56]
    f5d4:	ldr	x0, [x0, #40]
    f5d8:	b	f5e4 <PyNumber_FloorDivide@plt+0xa994>
    f5dc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f5e0:	ldr	x0, [x0, #4024]
    f5e4:	ldr	x1, [sp, #56]
    f5e8:	ldr	x1, [x1, #8]
    f5ec:	str	x1, [sp]
    f5f0:	mov	x7, x0
    f5f4:	mov	w1, w9
    f5f8:	mov	w0, w8
    f5fc:	bl	6978 <PyNumber_FloorDivide@plt+0x1d28>
    f600:	ldp	x29, x30, [sp, #16]
    f604:	add	sp, sp, #0x60
    f608:	ret
    f60c:	stp	x29, x30, [sp, #-32]!
    f610:	mov	x29, sp
    f614:	str	x0, [sp, #24]
    f618:	str	x1, [sp, #16]
    f61c:	ldr	x0, [sp, #24]
    f620:	ldr	x1, [x0, #8]
    f624:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f628:	add	x0, x0, #0x450
    f62c:	cmp	x1, x0
    f630:	b.eq	f654 <PyNumber_FloorDivide@plt+0xaa04>  // b.none
    f634:	ldr	x0, [sp, #24]
    f638:	ldr	x2, [x0, #8]
    f63c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f640:	add	x1, x0, #0x450
    f644:	mov	x0, x2
    f648:	bl	4b80 <PyType_IsSubtype@plt>
    f64c:	cmp	w0, #0x0
    f650:	b.eq	f6a0 <PyNumber_FloorDivide@plt+0xaa50>  // b.none
    f654:	ldr	x0, [sp, #16]
    f658:	ldr	x1, [x0, #8]
    f65c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f660:	add	x0, x0, #0x5f0
    f664:	cmp	x1, x0
    f668:	b.eq	f68c <PyNumber_FloorDivide@plt+0xaa3c>  // b.none
    f66c:	ldr	x0, [sp, #16]
    f670:	ldr	x2, [x0, #8]
    f674:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f678:	add	x1, x0, #0x5f0
    f67c:	mov	x0, x2
    f680:	bl	4b80 <PyType_IsSubtype@plt>
    f684:	cmp	w0, #0x0
    f688:	b.eq	f6ec <PyNumber_FloorDivide@plt+0xaa9c>  // b.none
    f68c:	mov	w2, #0x1                   	// #1
    f690:	ldr	x1, [sp, #16]
    f694:	ldr	x0, [sp, #24]
    f698:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
    f69c:	b	f704 <PyNumber_FloorDivide@plt+0xaab4>
    f6a0:	ldr	x0, [sp, #24]
    f6a4:	ldr	x1, [x0, #8]
    f6a8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f6ac:	add	x0, x0, #0x5f0
    f6b0:	cmp	x1, x0
    f6b4:	b.eq	f6d8 <PyNumber_FloorDivide@plt+0xaa88>  // b.none
    f6b8:	ldr	x0, [sp, #24]
    f6bc:	ldr	x2, [x0, #8]
    f6c0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f6c4:	add	x1, x0, #0x5f0
    f6c8:	mov	x0, x2
    f6cc:	bl	4b80 <PyType_IsSubtype@plt>
    f6d0:	cmp	w0, #0x0
    f6d4:	b.eq	f6f0 <PyNumber_FloorDivide@plt+0xaaa0>  // b.none
    f6d8:	mov	w2, #0x1                   	// #1
    f6dc:	ldr	x1, [sp, #24]
    f6e0:	ldr	x0, [sp, #16]
    f6e4:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
    f6e8:	b	f704 <PyNumber_FloorDivide@plt+0xaab4>
    f6ec:	nop
    f6f0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f6f4:	ldr	x0, [x0, #3960]
    f6f8:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    f6fc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f700:	ldr	x0, [x0, #3960]
    f704:	ldp	x29, x30, [sp], #32
    f708:	ret
    f70c:	stp	x29, x30, [sp, #-112]!
    f710:	mov	x29, sp
    f714:	str	x19, [sp, #16]
    f718:	str	x0, [sp, #40]
    f71c:	str	x1, [sp, #32]
    f720:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f724:	ldr	x0, [x0, #3960]
    f728:	str	x0, [sp, #104]
    f72c:	ldr	x0, [sp, #40]
    f730:	ldr	x1, [x0, #8]
    f734:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f738:	add	x0, x0, #0x450
    f73c:	cmp	x1, x0
    f740:	b.eq	f764 <PyNumber_FloorDivide@plt+0xab14>  // b.none
    f744:	ldr	x0, [sp, #40]
    f748:	ldr	x2, [x0, #8]
    f74c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f750:	add	x1, x0, #0x450
    f754:	mov	x0, x2
    f758:	bl	4b80 <PyType_IsSubtype@plt>
    f75c:	cmp	w0, #0x0
    f760:	b.eq	fbb0 <PyNumber_FloorDivide@plt+0xaf60>  // b.none
    f764:	ldr	x0, [sp, #32]
    f768:	ldr	x1, [x0, #8]
    f76c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f770:	add	x0, x0, #0x450
    f774:	cmp	x1, x0
    f778:	b.eq	f79c <PyNumber_FloorDivide@plt+0xab4c>  // b.none
    f77c:	ldr	x0, [sp, #32]
    f780:	ldr	x2, [x0, #8]
    f784:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    f788:	add	x1, x0, #0x450
    f78c:	mov	x0, x2
    f790:	bl	4b80 <PyType_IsSubtype@plt>
    f794:	cmp	w0, #0x0
    f798:	b.eq	fb5c <PyNumber_FloorDivide@plt+0xaf0c>  // b.none
    f79c:	str	xzr, [sp, #80]
    f7a0:	ldr	x0, [sp, #40]
    f7a4:	ldrb	w0, [x0, #24]
    f7a8:	cmp	w0, #0x0
    f7ac:	b.eq	f7bc <PyNumber_FloorDivide@plt+0xab6c>  // b.none
    f7b0:	ldr	x0, [sp, #40]
    f7b4:	ldr	x1, [x0, #40]
    f7b8:	b	f7c4 <PyNumber_FloorDivide@plt+0xab74>
    f7bc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f7c0:	ldr	x1, [x0, #4024]
    f7c4:	ldr	x0, [sp, #32]
    f7c8:	ldrb	w0, [x0, #24]
    f7cc:	cmp	w0, #0x0
    f7d0:	b.eq	f7e0 <PyNumber_FloorDivide@plt+0xab90>  // b.none
    f7d4:	ldr	x0, [sp, #32]
    f7d8:	ldr	x0, [x0, #40]
    f7dc:	b	f7e8 <PyNumber_FloorDivide@plt+0xab98>
    f7e0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f7e4:	ldr	x0, [x0, #4024]
    f7e8:	cmp	x1, x0
    f7ec:	b.ne	f818 <PyNumber_FloorDivide@plt+0xabc8>  // b.any
    f7f0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f7f4:	ldr	x0, [x0, #4024]
    f7f8:	str	x0, [sp, #96]
    f7fc:	ldr	x0, [sp, #96]
    f800:	str	x0, [sp, #88]
    f804:	ldr	x0, [sp, #96]
    f808:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    f80c:	ldr	x0, [sp, #88]
    f810:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    f814:	b	f900 <PyNumber_FloorDivide@plt+0xacb0>
    f818:	mov	x1, #0x0                   	// #0
    f81c:	ldr	x0, [sp, #40]
    f820:	bl	f3c8 <PyNumber_FloorDivide@plt+0xa778>
    f824:	str	x0, [sp, #96]
    f828:	ldr	x0, [sp, #96]
    f82c:	cmp	x0, #0x0
    f830:	b.ne	f83c <PyNumber_FloorDivide@plt+0xabec>  // b.any
    f834:	mov	x0, #0x0                   	// #0
    f838:	b	fbd0 <PyNumber_FloorDivide@plt+0xaf80>
    f83c:	mov	x1, #0x0                   	// #0
    f840:	ldr	x0, [sp, #32]
    f844:	bl	f3c8 <PyNumber_FloorDivide@plt+0xa778>
    f848:	str	x0, [sp, #88]
    f84c:	ldr	x0, [sp, #88]
    f850:	cmp	x0, #0x0
    f854:	b.ne	f874 <PyNumber_FloorDivide@plt+0xac24>  // b.any
    f858:	ldr	x2, [sp, #96]
    f85c:	mov	w1, #0x14b8                	// #5304
    f860:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f864:	add	x0, x0, #0xb30
    f868:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f86c:	mov	x0, #0x0                   	// #0
    f870:	b	fbd0 <PyNumber_FloorDivide@plt+0xaf80>
    f874:	ldr	x1, [sp, #96]
    f878:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f87c:	ldr	x0, [x0, #4024]
    f880:	cmp	x1, x0
    f884:	cset	w0, ne  // ne = any
    f888:	and	w1, w0, #0xff
    f88c:	ldr	x2, [sp, #88]
    f890:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f894:	ldr	x0, [x0, #4024]
    f898:	cmp	x2, x0
    f89c:	cset	w0, ne  // ne = any
    f8a0:	and	w0, w0, #0xff
    f8a4:	eor	w0, w1, w0
    f8a8:	and	w0, w0, #0xff
    f8ac:	cmp	w0, #0x0
    f8b0:	b.eq	f900 <PyNumber_FloorDivide@plt+0xacb0>  // b.none
    f8b4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    f8b8:	ldr	x0, [x0, #3976]
    f8bc:	ldr	x2, [x0]
    f8c0:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    f8c4:	add	x1, x0, #0x348
    f8c8:	mov	x0, x2
    f8cc:	bl	48c0 <PyErr_SetString@plt>
    f8d0:	ldr	x2, [sp, #96]
    f8d4:	mov	w1, #0x14bf                	// #5311
    f8d8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f8dc:	add	x0, x0, #0xb30
    f8e0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f8e4:	ldr	x2, [sp, #88]
    f8e8:	mov	w1, #0x14c0                	// #5312
    f8ec:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f8f0:	add	x0, x0, #0xb30
    f8f4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f8f8:	mov	x0, #0x0                   	// #0
    f8fc:	b	fbd0 <PyNumber_FloorDivide@plt+0xaf80>
    f900:	ldr	x1, [sp, #96]
    f904:	ldr	x0, [sp, #88]
    f908:	cmp	x1, x0
    f90c:	b.eq	f970 <PyNumber_FloorDivide@plt+0xad20>  // b.none
    f910:	ldr	x1, [sp, #88]
    f914:	ldr	x0, [sp, #96]
    f918:	bl	8f1c <PyNumber_FloorDivide@plt+0x42cc>
    f91c:	cmp	w0, #0x0
    f920:	b.eq	f970 <PyNumber_FloorDivide@plt+0xad20>  // b.none
    f924:	ldr	x1, [sp, #88]
    f928:	ldr	x0, [sp, #96]
    f92c:	bl	8e00 <PyNumber_FloorDivide@plt+0x41b0>
    f930:	str	x0, [sp, #80]
    f934:	ldr	x0, [sp, #80]
    f938:	cmp	x0, #0x0
    f93c:	b.ne	f970 <PyNumber_FloorDivide@plt+0xad20>  // b.any
    f940:	ldr	x2, [sp, #96]
    f944:	mov	w1, #0x14c8                	// #5320
    f948:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f94c:	add	x0, x0, #0xb30
    f950:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f954:	ldr	x2, [sp, #88]
    f958:	mov	w1, #0x14c9                	// #5321
    f95c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f960:	add	x0, x0, #0xb30
    f964:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f968:	mov	x0, #0x0                   	// #0
    f96c:	b	fbd0 <PyNumber_FloorDivide@plt+0xaf80>
    f970:	ldr	x2, [sp, #96]
    f974:	mov	w1, #0x14cd                	// #5325
    f978:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f97c:	add	x0, x0, #0xb30
    f980:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f984:	ldr	x2, [sp, #88]
    f988:	mov	w1, #0x14ce                	// #5326
    f98c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    f990:	add	x0, x0, #0xb30
    f994:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    f998:	ldr	x0, [sp, #40]
    f99c:	ldrb	w0, [x0, #25]
    f9a0:	lsl	w0, w0, #8
    f9a4:	ldr	x1, [sp, #40]
    f9a8:	ldrb	w1, [x1, #26]
    f9ac:	orr	w3, w0, w1
    f9b0:	ldr	x0, [sp, #40]
    f9b4:	ldrb	w0, [x0, #27]
    f9b8:	mov	w1, w0
    f9bc:	ldr	x0, [sp, #40]
    f9c0:	ldrb	w0, [x0, #28]
    f9c4:	mov	w2, w0
    f9c8:	mov	w0, w3
    f9cc:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    f9d0:	mov	w19, w0
    f9d4:	ldr	x0, [sp, #32]
    f9d8:	ldrb	w0, [x0, #25]
    f9dc:	lsl	w0, w0, #8
    f9e0:	ldr	x1, [sp, #32]
    f9e4:	ldrb	w1, [x1, #26]
    f9e8:	orr	w3, w0, w1
    f9ec:	ldr	x0, [sp, #32]
    f9f0:	ldrb	w0, [x0, #27]
    f9f4:	mov	w1, w0
    f9f8:	ldr	x0, [sp, #32]
    f9fc:	ldrb	w0, [x0, #28]
    fa00:	mov	w2, w0
    fa04:	mov	w0, w3
    fa08:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
    fa0c:	sub	w0, w19, w0
    fa10:	str	w0, [sp, #76]
    fa14:	ldr	x0, [sp, #40]
    fa18:	ldrb	w0, [x0, #29]
    fa1c:	mov	w1, w0
    fa20:	ldr	x0, [sp, #32]
    fa24:	ldrb	w0, [x0, #29]
    fa28:	sub	w1, w1, w0
    fa2c:	mov	w0, #0xe10                 	// #3600
    fa30:	mul	w2, w1, w0
    fa34:	ldr	x0, [sp, #40]
    fa38:	ldrb	w0, [x0, #30]
    fa3c:	mov	w1, w0
    fa40:	ldr	x0, [sp, #32]
    fa44:	ldrb	w0, [x0, #30]
    fa48:	sub	w1, w1, w0
    fa4c:	mov	w0, w1
    fa50:	lsl	w0, w0, #4
    fa54:	sub	w0, w0, w1
    fa58:	lsl	w0, w0, #2
    fa5c:	add	w1, w2, w0
    fa60:	ldr	x0, [sp, #40]
    fa64:	ldrb	w0, [x0, #31]
    fa68:	mov	w2, w0
    fa6c:	ldr	x0, [sp, #32]
    fa70:	ldrb	w0, [x0, #31]
    fa74:	sub	w0, w2, w0
    fa78:	add	w0, w1, w0
    fa7c:	str	w0, [sp, #72]
    fa80:	ldr	x0, [sp, #40]
    fa84:	ldrb	w0, [x0, #32]
    fa88:	lsl	w1, w0, #16
    fa8c:	ldr	x0, [sp, #40]
    fa90:	ldrb	w0, [x0, #33]
    fa94:	lsl	w0, w0, #8
    fa98:	orr	w0, w1, w0
    fa9c:	ldr	x1, [sp, #40]
    faa0:	ldrb	w1, [x1, #34]
    faa4:	orr	w1, w0, w1
    faa8:	ldr	x0, [sp, #32]
    faac:	ldrb	w0, [x0, #32]
    fab0:	lsl	w2, w0, #16
    fab4:	ldr	x0, [sp, #32]
    fab8:	ldrb	w0, [x0, #33]
    fabc:	lsl	w0, w0, #8
    fac0:	orr	w0, w2, w0
    fac4:	ldr	x2, [sp, #32]
    fac8:	ldrb	w2, [x2, #34]
    facc:	orr	w0, w0, w2
    fad0:	sub	w0, w1, w0
    fad4:	str	w0, [sp, #68]
    fad8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    fadc:	add	x4, x0, #0x5f0
    fae0:	mov	w3, #0x1                   	// #1
    fae4:	ldr	w2, [sp, #68]
    fae8:	ldr	w1, [sp, #72]
    faec:	ldr	w0, [sp, #76]
    faf0:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
    faf4:	str	x0, [sp, #104]
    faf8:	ldr	x0, [sp, #104]
    fafc:	cmp	x0, #0x0
    fb00:	b.ne	fb0c <PyNumber_FloorDivide@plt+0xaebc>  // b.any
    fb04:	mov	x0, #0x0                   	// #0
    fb08:	b	fbd0 <PyNumber_FloorDivide@plt+0xaf80>
    fb0c:	ldr	x0, [sp, #80]
    fb10:	cmp	x0, #0x0
    fb14:	b.eq	fbac <PyNumber_FloorDivide@plt+0xaf5c>  // b.none
    fb18:	ldr	x0, [sp, #104]
    fb1c:	str	x0, [sp, #56]
    fb20:	ldr	x1, [sp, #80]
    fb24:	ldr	x0, [sp, #104]
    fb28:	bl	8e00 <PyNumber_FloorDivide@plt+0x41b0>
    fb2c:	str	x0, [sp, #104]
    fb30:	ldr	x2, [sp, #56]
    fb34:	mov	w1, #0x14e6                	// #5350
    fb38:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    fb3c:	add	x0, x0, #0xb30
    fb40:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    fb44:	ldr	x2, [sp, #80]
    fb48:	mov	w1, #0x14e7                	// #5351
    fb4c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
    fb50:	add	x0, x0, #0xb30
    fb54:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
    fb58:	b	fbac <PyNumber_FloorDivide@plt+0xaf5c>
    fb5c:	ldr	x0, [sp, #32]
    fb60:	ldr	x1, [x0, #8]
    fb64:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    fb68:	add	x0, x0, #0x5f0
    fb6c:	cmp	x1, x0
    fb70:	b.eq	fb94 <PyNumber_FloorDivide@plt+0xaf44>  // b.none
    fb74:	ldr	x0, [sp, #32]
    fb78:	ldr	x2, [x0, #8]
    fb7c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    fb80:	add	x1, x0, #0x5f0
    fb84:	mov	x0, x2
    fb88:	bl	4b80 <PyType_IsSubtype@plt>
    fb8c:	cmp	w0, #0x0
    fb90:	b.eq	fbb0 <PyNumber_FloorDivide@plt+0xaf60>  // b.none
    fb94:	mov	w2, #0xffffffff            	// #-1
    fb98:	ldr	x1, [sp, #32]
    fb9c:	ldr	x0, [sp, #40]
    fba0:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
    fba4:	str	x0, [sp, #104]
    fba8:	b	fbb0 <PyNumber_FloorDivide@plt+0xaf60>
    fbac:	nop
    fbb0:	ldr	x1, [sp, #104]
    fbb4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    fbb8:	ldr	x0, [x0, #3960]
    fbbc:	cmp	x1, x0
    fbc0:	b.ne	fbcc <PyNumber_FloorDivide@plt+0xaf7c>  // b.any
    fbc4:	ldr	x0, [sp, #104]
    fbc8:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
    fbcc:	ldr	x0, [sp, #104]
    fbd0:	ldr	x19, [sp, #16]
    fbd4:	ldp	x29, x30, [sp], #112
    fbd8:	ret
    fbdc:	sub	sp, sp, #0x40
    fbe0:	stp	x29, x30, [sp, #16]
    fbe4:	add	x29, sp, #0x10
    fbe8:	str	x0, [sp, #40]
    fbec:	ldr	x0, [sp, #40]
    fbf0:	ldr	x0, [x0, #8]
    fbf4:	ldr	x0, [x0, #24]
    fbf8:	str	x0, [sp, #48]
    fbfc:	ldr	x0, [sp, #40]
    fc00:	ldrb	w0, [x0, #32]
    fc04:	lsl	w1, w0, #16
    fc08:	ldr	x0, [sp, #40]
    fc0c:	ldrb	w0, [x0, #33]
    fc10:	lsl	w0, w0, #8
    fc14:	orr	w0, w1, w0
    fc18:	ldr	x1, [sp, #40]
    fc1c:	ldrb	w1, [x1, #34]
    fc20:	orr	w0, w0, w1
    fc24:	cmp	w0, #0x0
    fc28:	b.eq	fcc4 <PyNumber_FloorDivide@plt+0xb074>  // b.none
    fc2c:	ldr	x0, [sp, #40]
    fc30:	ldrb	w0, [x0, #25]
    fc34:	lsl	w0, w0, #8
    fc38:	ldr	x1, [sp, #40]
    fc3c:	ldrb	w1, [x1, #26]
    fc40:	orr	w2, w0, w1
    fc44:	ldr	x0, [sp, #40]
    fc48:	ldrb	w0, [x0, #27]
    fc4c:	mov	w3, w0
    fc50:	ldr	x0, [sp, #40]
    fc54:	ldrb	w0, [x0, #28]
    fc58:	mov	w4, w0
    fc5c:	ldr	x0, [sp, #40]
    fc60:	ldrb	w0, [x0, #29]
    fc64:	mov	w5, w0
    fc68:	ldr	x0, [sp, #40]
    fc6c:	ldrb	w0, [x0, #30]
    fc70:	mov	w6, w0
    fc74:	ldr	x0, [sp, #40]
    fc78:	ldrb	w0, [x0, #31]
    fc7c:	mov	w7, w0
    fc80:	ldr	x0, [sp, #40]
    fc84:	ldrb	w0, [x0, #32]
    fc88:	lsl	w1, w0, #16
    fc8c:	ldr	x0, [sp, #40]
    fc90:	ldrb	w0, [x0, #33]
    fc94:	lsl	w0, w0, #8
    fc98:	orr	w0, w1, w0
    fc9c:	ldr	x1, [sp, #40]
    fca0:	ldrb	w1, [x1, #34]
    fca4:	orr	w0, w0, w1
    fca8:	str	w0, [sp]
    fcac:	ldr	x1, [sp, #48]
    fcb0:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    fcb4:	add	x0, x0, #0x380
    fcb8:	bl	4740 <PyUnicode_FromFormat@plt>
    fcbc:	str	x0, [sp, #56]
    fcc0:	b	fdc0 <PyNumber_FloorDivide@plt+0xb170>
    fcc4:	ldr	x0, [sp, #40]
    fcc8:	ldrb	w0, [x0, #31]
    fccc:	cmp	w0, #0x0
    fcd0:	b.eq	fd54 <PyNumber_FloorDivide@plt+0xb104>  // b.none
    fcd4:	ldr	x0, [sp, #40]
    fcd8:	ldrb	w0, [x0, #25]
    fcdc:	lsl	w0, w0, #8
    fce0:	ldr	x1, [sp, #40]
    fce4:	ldrb	w1, [x1, #26]
    fce8:	orr	w1, w0, w1
    fcec:	ldr	x0, [sp, #40]
    fcf0:	ldrb	w0, [x0, #27]
    fcf4:	mov	w2, w0
    fcf8:	ldr	x0, [sp, #40]
    fcfc:	ldrb	w0, [x0, #28]
    fd00:	mov	w3, w0
    fd04:	ldr	x0, [sp, #40]
    fd08:	ldrb	w0, [x0, #29]
    fd0c:	mov	w4, w0
    fd10:	ldr	x0, [sp, #40]
    fd14:	ldrb	w0, [x0, #30]
    fd18:	mov	w5, w0
    fd1c:	ldr	x0, [sp, #40]
    fd20:	ldrb	w0, [x0, #31]
    fd24:	mov	w7, w0
    fd28:	mov	w6, w5
    fd2c:	mov	w5, w4
    fd30:	mov	w4, w3
    fd34:	mov	w3, w2
    fd38:	mov	w2, w1
    fd3c:	ldr	x1, [sp, #48]
    fd40:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    fd44:	add	x0, x0, #0x3a0
    fd48:	bl	4740 <PyUnicode_FromFormat@plt>
    fd4c:	str	x0, [sp, #56]
    fd50:	b	fdc0 <PyNumber_FloorDivide@plt+0xb170>
    fd54:	ldr	x0, [sp, #40]
    fd58:	ldrb	w0, [x0, #25]
    fd5c:	lsl	w0, w0, #8
    fd60:	ldr	x1, [sp, #40]
    fd64:	ldrb	w1, [x1, #26]
    fd68:	orr	w1, w0, w1
    fd6c:	ldr	x0, [sp, #40]
    fd70:	ldrb	w0, [x0, #27]
    fd74:	mov	w2, w0
    fd78:	ldr	x0, [sp, #40]
    fd7c:	ldrb	w0, [x0, #28]
    fd80:	mov	w3, w0
    fd84:	ldr	x0, [sp, #40]
    fd88:	ldrb	w0, [x0, #29]
    fd8c:	mov	w4, w0
    fd90:	ldr	x0, [sp, #40]
    fd94:	ldrb	w0, [x0, #30]
    fd98:	mov	w6, w0
    fd9c:	mov	w5, w4
    fda0:	mov	w4, w3
    fda4:	mov	w3, w2
    fda8:	mov	w2, w1
    fdac:	ldr	x1, [sp, #48]
    fdb0:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    fdb4:	add	x0, x0, #0x3c0
    fdb8:	bl	4740 <PyUnicode_FromFormat@plt>
    fdbc:	str	x0, [sp, #56]
    fdc0:	ldr	x0, [sp, #56]
    fdc4:	cmp	x0, #0x0
    fdc8:	b.eq	fdf4 <PyNumber_FloorDivide@plt+0xb1a4>  // b.none
    fdcc:	ldr	x0, [sp, #40]
    fdd0:	ldrb	w0, [x0, #35]
    fdd4:	cmp	w0, #0x0
    fdd8:	b.eq	fdf4 <PyNumber_FloorDivide@plt+0xb1a4>  // b.none
    fddc:	ldr	x0, [sp, #40]
    fde0:	ldrb	w0, [x0, #35]
    fde4:	mov	w1, w0
    fde8:	ldr	x0, [sp, #56]
    fdec:	bl	727c <PyNumber_FloorDivide@plt+0x262c>
    fdf0:	str	x0, [sp, #56]
    fdf4:	ldr	x0, [sp, #56]
    fdf8:	cmp	x0, #0x0
    fdfc:	b.eq	fe10 <PyNumber_FloorDivide@plt+0xb1c0>  // b.none
    fe00:	ldr	x0, [sp, #40]
    fe04:	ldrb	w0, [x0, #24]
    fe08:	cmp	w0, #0x0
    fe0c:	b.ne	fe18 <PyNumber_FloorDivide@plt+0xb1c8>  // b.any
    fe10:	ldr	x0, [sp, #56]
    fe14:	b	fe2c <PyNumber_FloorDivide@plt+0xb1dc>
    fe18:	ldr	x0, [sp, #40]
    fe1c:	ldr	x0, [x0, #40]
    fe20:	mov	x1, x0
    fe24:	ldr	x0, [sp, #56]
    fe28:	bl	71d0 <PyNumber_FloorDivide@plt+0x2580>
    fe2c:	ldp	x29, x30, [sp, #16]
    fe30:	add	sp, sp, #0x40
    fe34:	ret
    fe38:	stp	x29, x30, [sp, #-32]!
    fe3c:	mov	x29, sp
    fe40:	str	x0, [sp, #24]
    fe44:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    fe48:	add	x3, x0, #0x3d8
    fe4c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    fe50:	add	x2, x0, #0x1a8
    fe54:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
    fe58:	add	x1, x0, #0xca0
    fe5c:	ldr	x0, [sp, #24]
    fe60:	bl	4aa0 <_PyObject_CallMethodId@plt>
    fe64:	ldp	x29, x30, [sp], #32
    fe68:	ret
    fe6c:	sub	sp, sp, #0xd0
    fe70:	stp	x29, x30, [sp, #16]
    fe74:	add	x29, sp, #0x10
    fe78:	str	x0, [sp, #56]
    fe7c:	str	x1, [sp, #48]
    fe80:	str	x2, [sp, #40]
    fe84:	mov	w0, #0x54                  	// #84
    fe88:	str	w0, [sp, #188]
    fe8c:	str	xzr, [sp, #176]
    fe90:	str	xzr, [sp, #64]
    fe94:	ldr	x0, [sp, #56]
    fe98:	ldrb	w0, [x0, #32]
    fe9c:	lsl	w1, w0, #16
    fea0:	ldr	x0, [sp, #56]
    fea4:	ldrb	w0, [x0, #33]
    fea8:	lsl	w0, w0, #8
    feac:	orr	w0, w1, w0
    feb0:	ldr	x1, [sp, #56]
    feb4:	ldrb	w1, [x1, #34]
    feb8:	orr	w0, w0, w1
    febc:	str	w0, [sp, #204]
    fec0:	add	x1, sp, #0xb0
    fec4:	add	x0, sp, #0xbc
    fec8:	mov	x5, x1
    fecc:	mov	x4, x0
    fed0:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    fed4:	add	x3, x0, #0xfb0
    fed8:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
    fedc:	add	x2, x0, #0x3e0
    fee0:	ldr	x1, [sp, #40]
    fee4:	ldr	x0, [sp, #48]
    fee8:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
    feec:	cmp	w0, #0x0
    fef0:	b.ne	fefc <PyNumber_FloorDivide@plt+0xb2ac>  // b.any
    fef4:	mov	x0, #0x0                   	// #0
    fef8:	b	10128 <PyNumber_FloorDivide@plt+0xb4d8>
    fefc:	ldr	x0, [sp, #176]
    ff00:	cmp	x0, #0x0
    ff04:	b.eq	ff24 <PyNumber_FloorDivide@plt+0xb2d4>  // b.none
    ff08:	ldr	x2, [sp, #176]
    ff0c:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    ff10:	add	x1, x0, #0xf48
    ff14:	mov	x0, x2
    ff18:	bl	4a30 <strcmp@plt>
    ff1c:	cmp	w0, #0x0
    ff20:	b.ne	ff48 <PyNumber_FloorDivide@plt+0xb2f8>  // b.any
    ff24:	ldr	w0, [sp, #204]
    ff28:	cmp	w0, #0x0
    ff2c:	b.ne	ff3c <PyNumber_FloorDivide@plt+0xb2ec>  // b.any
    ff30:	mov	x0, #0x2                   	// #2
    ff34:	str	x0, [sp, #192]
    ff38:	b	ffd4 <PyNumber_FloorDivide@plt+0xb384>
    ff3c:	mov	x0, #0x4                   	// #4
    ff40:	str	x0, [sp, #192]
    ff44:	b	ffd4 <PyNumber_FloorDivide@plt+0xb384>
    ff48:	str	xzr, [sp, #192]
    ff4c:	b	ffc0 <PyNumber_FloorDivide@plt+0xb370>
    ff50:	ldr	x2, [sp, #176]
    ff54:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
    ff58:	add	x1, x0, #0xfc8
    ff5c:	ldr	x0, [sp, #192]
    ff60:	lsl	x0, x0, #4
    ff64:	add	x0, x1, x0
    ff68:	ldr	x0, [x0]
    ff6c:	mov	x1, x0
    ff70:	mov	x0, x2
    ff74:	bl	4a30 <strcmp@plt>
    ff78:	cmp	w0, #0x0
    ff7c:	b.ne	ffb4 <PyNumber_FloorDivide@plt+0xb364>  // b.any
    ff80:	ldr	x0, [sp, #192]
    ff84:	cmp	x0, #0x3
    ff88:	b.ne	ffd0 <PyNumber_FloorDivide@plt+0xb380>  // b.any
    ff8c:	ldr	w0, [sp, #204]
    ff90:	mov	w1, #0x4dd3                	// #19923
    ff94:	movk	w1, #0x1062, lsl #16
    ff98:	smull	x1, w0, w1
    ff9c:	lsr	x1, x1, #32
    ffa0:	asr	w1, w1, #6
    ffa4:	asr	w0, w0, #31
    ffa8:	sub	w0, w1, w0
    ffac:	str	w0, [sp, #204]
    ffb0:	b	ffd0 <PyNumber_FloorDivide@plt+0xb380>
    ffb4:	ldr	x0, [sp, #192]
    ffb8:	add	x0, x0, #0x1
    ffbc:	str	x0, [sp, #192]
    ffc0:	ldr	x0, [sp, #192]
    ffc4:	cmp	x0, #0x4
    ffc8:	b.ls	ff50 <PyNumber_FloorDivide@plt+0xb300>  // b.plast
    ffcc:	b	ffd4 <PyNumber_FloorDivide@plt+0xb384>
    ffd0:	nop
    ffd4:	ldr	x0, [sp, #192]
    ffd8:	cmp	x0, #0x5
    ffdc:	b.ne	10004 <PyNumber_FloorDivide@plt+0xb3b4>  // b.any
    ffe0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
    ffe4:	ldr	x0, [x0, #3968]
    ffe8:	ldr	x2, [x0]
    ffec:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
    fff0:	add	x1, x0, #0xf50
    fff4:	mov	x0, x2
    fff8:	bl	4bb0 <PyErr_Format@plt>
    fffc:	mov	x0, #0x0                   	// #0
   10000:	b	10128 <PyNumber_FloorDivide@plt+0xb4d8>
   10004:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
   10008:	add	x1, x0, #0xfc8
   1000c:	ldr	x0, [sp, #192]
   10010:	lsl	x0, x0, #4
   10014:	add	x0, x1, x0
   10018:	ldr	x8, [x0, #8]
   1001c:	ldr	x0, [sp, #56]
   10020:	ldrb	w0, [x0, #25]
   10024:	lsl	w0, w0, #8
   10028:	ldr	x1, [sp, #56]
   1002c:	ldrb	w1, [x1, #26]
   10030:	orr	w1, w0, w1
   10034:	ldr	x0, [sp, #56]
   10038:	ldrb	w0, [x0, #27]
   1003c:	mov	w9, w0
   10040:	ldr	x0, [sp, #56]
   10044:	ldrb	w0, [x0, #28]
   10048:	mov	w3, w0
   1004c:	ldr	w2, [sp, #188]
   10050:	ldr	x0, [sp, #56]
   10054:	ldrb	w0, [x0, #29]
   10058:	mov	w4, w0
   1005c:	ldr	x0, [sp, #56]
   10060:	ldrb	w0, [x0, #30]
   10064:	mov	w5, w0
   10068:	ldr	x0, [sp, #56]
   1006c:	ldrb	w0, [x0, #31]
   10070:	mov	w6, w0
   10074:	ldr	w0, [sp, #204]
   10078:	str	w0, [sp]
   1007c:	mov	w7, w6
   10080:	mov	w6, w5
   10084:	mov	w5, w4
   10088:	mov	w4, w2
   1008c:	mov	w2, w9
   10090:	mov	x0, x8
   10094:	bl	4740 <PyUnicode_FromFormat@plt>
   10098:	str	x0, [sp, #64]
   1009c:	ldr	x0, [sp, #64]
   100a0:	cmp	x0, #0x0
   100a4:	b.eq	100b8 <PyNumber_FloorDivide@plt+0xb468>  // b.none
   100a8:	ldr	x0, [sp, #56]
   100ac:	ldrb	w0, [x0, #24]
   100b0:	cmp	w0, #0x0
   100b4:	b.ne	100c0 <PyNumber_FloorDivide@plt+0xb470>  // b.any
   100b8:	ldr	x0, [sp, #64]
   100bc:	b	10128 <PyNumber_FloorDivide@plt+0xb4d8>
   100c0:	ldr	x0, [sp, #56]
   100c4:	ldr	x0, [x0, #40]
   100c8:	add	x5, sp, #0x48
   100cc:	ldr	x4, [sp, #56]
   100d0:	mov	x3, x0
   100d4:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
   100d8:	add	x2, x0, #0xf68
   100dc:	mov	x1, #0x64                  	// #100
   100e0:	mov	x0, x5
   100e4:	bl	74b8 <PyNumber_FloorDivide@plt+0x2868>
   100e8:	cmp	w0, #0x0
   100ec:	b.ge	10110 <PyNumber_FloorDivide@plt+0xb4c0>  // b.tcont
   100f0:	ldr	x0, [sp, #64]
   100f4:	mov	x2, x0
   100f8:	mov	w1, #0x1561                	// #5473
   100fc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10100:	add	x0, x0, #0xb30
   10104:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10108:	mov	x0, #0x0                   	// #0
   1010c:	b	10128 <PyNumber_FloorDivide@plt+0xb4d8>
   10110:	add	x0, sp, #0x48
   10114:	bl	4b20 <PyUnicode_FromString@plt>
   10118:	mov	x1, x0
   1011c:	add	x0, sp, #0x40
   10120:	bl	4bf0 <PyUnicode_AppendAndDel@plt>
   10124:	ldr	x0, [sp, #64]
   10128:	ldp	x29, x30, [sp, #16]
   1012c:	add	sp, sp, #0xd0
   10130:	ret
   10134:	stp	x29, x30, [sp, #-32]!
   10138:	mov	x29, sp
   1013c:	str	x0, [sp, #24]
   10140:	str	x1, [sp, #16]
   10144:	ldr	x0, [sp, #24]
   10148:	ldrb	w0, [x0, #29]
   1014c:	mov	w1, w0
   10150:	ldr	x0, [sp, #24]
   10154:	ldrb	w0, [x0, #30]
   10158:	mov	w2, w0
   1015c:	ldr	x0, [sp, #24]
   10160:	ldrb	w0, [x0, #31]
   10164:	mov	w3, w0
   10168:	ldr	x0, [sp, #24]
   1016c:	bl	73ec <PyNumber_FloorDivide@plt+0x279c>
   10170:	ldp	x29, x30, [sp], #32
   10174:	ret
   10178:	sub	sp, sp, #0x30
   1017c:	stp	x29, x30, [sp, #16]
   10180:	add	x29, sp, #0x10
   10184:	str	x0, [sp, #40]
   10188:	ldr	x0, [sp, #40]
   1018c:	ldrb	w0, [x0, #25]
   10190:	lsl	w0, w0, #8
   10194:	ldr	x1, [sp, #40]
   10198:	ldrb	w1, [x1, #26]
   1019c:	orr	w8, w0, w1
   101a0:	ldr	x0, [sp, #40]
   101a4:	ldrb	w0, [x0, #27]
   101a8:	mov	w9, w0
   101ac:	ldr	x0, [sp, #40]
   101b0:	ldrb	w0, [x0, #28]
   101b4:	mov	w10, w0
   101b8:	ldr	x0, [sp, #40]
   101bc:	ldrb	w0, [x0, #29]
   101c0:	mov	w11, w0
   101c4:	ldr	x0, [sp, #40]
   101c8:	ldrb	w0, [x0, #30]
   101cc:	mov	w4, w0
   101d0:	ldr	x0, [sp, #40]
   101d4:	ldrb	w0, [x0, #31]
   101d8:	mov	w5, w0
   101dc:	ldr	x0, [sp, #40]
   101e0:	ldrb	w0, [x0, #32]
   101e4:	lsl	w1, w0, #16
   101e8:	ldr	x0, [sp, #40]
   101ec:	ldrb	w0, [x0, #33]
   101f0:	lsl	w0, w0, #8
   101f4:	orr	w0, w1, w0
   101f8:	ldr	x1, [sp, #40]
   101fc:	ldrb	w1, [x1, #34]
   10200:	orr	w2, w0, w1
   10204:	ldr	x0, [sp, #40]
   10208:	ldrb	w0, [x0, #24]
   1020c:	cmp	w0, #0x0
   10210:	b.eq	10220 <PyNumber_FloorDivide@plt+0xb5d0>  // b.none
   10214:	ldr	x0, [sp, #40]
   10218:	ldr	x0, [x0, #40]
   1021c:	b	10228 <PyNumber_FloorDivide@plt+0xb5d8>
   10220:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   10224:	ldr	x0, [x0, #4024]
   10228:	ldr	x1, [sp, #40]
   1022c:	ldrb	w1, [x1, #35]
   10230:	cmp	w1, #0x0
   10234:	cset	w1, eq  // eq = none
   10238:	and	w1, w1, #0xff
   1023c:	mov	w3, w1
   10240:	ldr	x1, [sp, #40]
   10244:	ldr	x1, [x1, #8]
   10248:	str	x1, [sp, #8]
   1024c:	str	w3, [sp]
   10250:	mov	x7, x0
   10254:	mov	w6, w2
   10258:	mov	w3, w11
   1025c:	mov	w2, w10
   10260:	mov	w1, w9
   10264:	mov	w0, w8
   10268:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
   1026c:	ldp	x29, x30, [sp, #16]
   10270:	add	sp, sp, #0x30
   10274:	ret
   10278:	stp	x29, x30, [sp, #-48]!
   1027c:	mov	x29, sp
   10280:	str	x0, [sp, #24]
   10284:	ldr	x0, [sp, #24]
   10288:	bl	10178 <PyNumber_FloorDivide@plt+0xb528>
   1028c:	str	x0, [sp, #40]
   10290:	ldr	x0, [sp, #40]
   10294:	cmp	x0, #0x0
   10298:	b.ne	102a4 <PyNumber_FloorDivide@plt+0xb654>  // b.any
   1029c:	mov	x0, #0x0                   	// #0
   102a0:	b	102cc <PyNumber_FloorDivide@plt+0xb67c>
   102a4:	mov	x1, #0x0                   	// #0
   102a8:	ldr	x0, [sp, #40]
   102ac:	bl	f3c8 <PyNumber_FloorDivide@plt+0xa778>
   102b0:	str	x0, [sp, #32]
   102b4:	ldr	x2, [sp, #40]
   102b8:	mov	w1, #0x158c                	// #5516
   102bc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   102c0:	add	x0, x0, #0xb30
   102c4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   102c8:	ldr	x0, [sp, #32]
   102cc:	ldp	x29, x30, [sp], #48
   102d0:	ret
   102d4:	stp	x29, x30, [sp, #-64]!
   102d8:	mov	x29, sp
   102dc:	str	x0, [sp, #40]
   102e0:	str	x1, [sp, #32]
   102e4:	str	x2, [sp, #24]
   102e8:	str	x3, [sp, #16]
   102ec:	str	wzr, [sp, #60]
   102f0:	ldr	x0, [sp, #40]
   102f4:	bl	10278 <PyNumber_FloorDivide@plt+0xb628>
   102f8:	str	x0, [sp, #48]
   102fc:	ldr	x0, [sp, #48]
   10300:	cmp	x0, #0x0
   10304:	b.ne	10310 <PyNumber_FloorDivide@plt+0xb6c0>  // b.any
   10308:	mov	w0, #0xffffffff            	// #-1
   1030c:	b	103c0 <PyNumber_FloorDivide@plt+0xb770>
   10310:	ldr	x1, [sp, #48]
   10314:	ldr	x0, [sp, #24]
   10318:	cmp	x1, x0
   1031c:	b.eq	10340 <PyNumber_FloorDivide@plt+0xb6f0>  // b.none
   10320:	ldr	x1, [sp, #24]
   10324:	ldr	x0, [sp, #48]
   10328:	bl	8f1c <PyNumber_FloorDivide@plt+0x42cc>
   1032c:	cmp	w0, #0x0
   10330:	b.eq	10340 <PyNumber_FloorDivide@plt+0xb6f0>  // b.none
   10334:	mov	w0, #0x1                   	// #1
   10338:	str	w0, [sp, #60]
   1033c:	b	103a8 <PyNumber_FloorDivide@plt+0xb758>
   10340:	ldr	x2, [sp, #48]
   10344:	mov	w1, #0x15a6                	// #5542
   10348:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1034c:	add	x0, x0, #0xb30
   10350:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10354:	ldr	x0, [sp, #32]
   10358:	bl	10278 <PyNumber_FloorDivide@plt+0xb628>
   1035c:	str	x0, [sp, #48]
   10360:	ldr	x0, [sp, #48]
   10364:	cmp	x0, #0x0
   10368:	b.ne	10374 <PyNumber_FloorDivide@plt+0xb724>  // b.any
   1036c:	mov	w0, #0xffffffff            	// #-1
   10370:	b	103c0 <PyNumber_FloorDivide@plt+0xb770>
   10374:	ldr	x1, [sp, #48]
   10378:	ldr	x0, [sp, #16]
   1037c:	cmp	x1, x0
   10380:	b.eq	103a4 <PyNumber_FloorDivide@plt+0xb754>  // b.none
   10384:	ldr	x1, [sp, #16]
   10388:	ldr	x0, [sp, #48]
   1038c:	bl	8f1c <PyNumber_FloorDivide@plt+0x42cc>
   10390:	cmp	w0, #0x0
   10394:	b.eq	103a4 <PyNumber_FloorDivide@plt+0xb754>  // b.none
   10398:	mov	w0, #0x1                   	// #1
   1039c:	str	w0, [sp, #60]
   103a0:	b	103a8 <PyNumber_FloorDivide@plt+0xb758>
   103a4:	nop
   103a8:	ldr	x2, [sp, #48]
   103ac:	mov	w1, #0x15af                	// #5551
   103b0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   103b4:	add	x0, x0, #0xb30
   103b8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   103bc:	ldr	w0, [sp, #60]
   103c0:	ldp	x29, x30, [sp], #64
   103c4:	ret
   103c8:	stp	x29, x30, [sp, #-96]!
   103cc:	mov	x29, sp
   103d0:	str	x0, [sp, #40]
   103d4:	str	x1, [sp, #32]
   103d8:	str	w2, [sp, #28]
   103dc:	str	xzr, [sp, #88]
   103e0:	ldr	x0, [sp, #32]
   103e4:	ldr	x1, [x0, #8]
   103e8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   103ec:	add	x0, x0, #0x450
   103f0:	cmp	x1, x0
   103f4:	b.eq	104c0 <PyNumber_FloorDivide@plt+0xb870>  // b.none
   103f8:	ldr	x0, [sp, #32]
   103fc:	ldr	x2, [x0, #8]
   10400:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   10404:	add	x1, x0, #0x450
   10408:	mov	x0, x2
   1040c:	bl	4b80 <PyType_IsSubtype@plt>
   10410:	cmp	w0, #0x0
   10414:	b.ne	104c0 <PyNumber_FloorDivide@plt+0xb870>  // b.any
   10418:	ldr	x0, [sp, #32]
   1041c:	ldr	x1, [x0, #8]
   10420:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   10424:	add	x0, x0, #0x2b0
   10428:	cmp	x1, x0
   1042c:	b.eq	10450 <PyNumber_FloorDivide@plt+0xb800>  // b.none
   10430:	ldr	x0, [sp, #32]
   10434:	ldr	x2, [x0, #8]
   10438:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1043c:	add	x1, x0, #0x2b0
   10440:	mov	x0, x2
   10444:	bl	4b80 <PyType_IsSubtype@plt>
   10448:	cmp	w0, #0x0
   1044c:	b.eq	104a8 <PyNumber_FloorDivide@plt+0xb858>  // b.none
   10450:	ldr	w0, [sp, #28]
   10454:	cmp	w0, #0x2
   10458:	b.ne	10474 <PyNumber_FloorDivide@plt+0xb824>  // b.any
   1045c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   10460:	ldr	x0, [x0, #3992]
   10464:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   10468:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   1046c:	ldr	x0, [x0, #3992]
   10470:	b	10848 <PyNumber_FloorDivide@plt+0xbbf8>
   10474:	ldr	w0, [sp, #28]
   10478:	cmp	w0, #0x3
   1047c:	b.ne	10498 <PyNumber_FloorDivide@plt+0xb848>  // b.any
   10480:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   10484:	ldr	x0, [x0, #4040]
   10488:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   1048c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   10490:	ldr	x0, [x0, #4040]
   10494:	b	10848 <PyNumber_FloorDivide@plt+0xbbf8>
   10498:	ldr	x1, [sp, #32]
   1049c:	ldr	x0, [sp, #40]
   104a0:	bl	81a8 <PyNumber_FloorDivide@plt+0x3558>
   104a4:	b	10848 <PyNumber_FloorDivide@plt+0xbbf8>
   104a8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   104ac:	ldr	x0, [x0, #3960]
   104b0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   104b4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   104b8:	ldr	x0, [x0, #3960]
   104bc:	b	10848 <PyNumber_FloorDivide@plt+0xbbf8>
   104c0:	ldr	x0, [sp, #40]
   104c4:	ldrb	w0, [x0, #24]
   104c8:	cmp	w0, #0x0
   104cc:	b.eq	104dc <PyNumber_FloorDivide@plt+0xb88c>  // b.none
   104d0:	ldr	x0, [sp, #40]
   104d4:	ldr	x1, [x0, #40]
   104d8:	b	104e4 <PyNumber_FloorDivide@plt+0xb894>
   104dc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   104e0:	ldr	x1, [x0, #4024]
   104e4:	ldr	x0, [sp, #32]
   104e8:	ldrb	w0, [x0, #24]
   104ec:	cmp	w0, #0x0
   104f0:	b.eq	10500 <PyNumber_FloorDivide@plt+0xb8b0>  // b.none
   104f4:	ldr	x0, [sp, #32]
   104f8:	ldr	x0, [x0, #40]
   104fc:	b	10508 <PyNumber_FloorDivide@plt+0xb8b8>
   10500:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   10504:	ldr	x0, [x0, #4024]
   10508:	cmp	x1, x0
   1050c:	b.ne	10544 <PyNumber_FloorDivide@plt+0xb8f4>  // b.any
   10510:	ldr	x0, [sp, #40]
   10514:	add	x3, x0, #0x19
   10518:	ldr	x0, [sp, #32]
   1051c:	add	x0, x0, #0x19
   10520:	mov	x2, #0xa                   	// #10
   10524:	mov	x1, x0
   10528:	mov	x0, x3
   1052c:	bl	4a20 <memcmp@plt>
   10530:	str	w0, [sp, #84]
   10534:	ldr	w1, [sp, #28]
   10538:	ldr	w0, [sp, #84]
   1053c:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
   10540:	b	10848 <PyNumber_FloorDivide@plt+0xbbf8>
   10544:	mov	x1, #0x0                   	// #0
   10548:	ldr	x0, [sp, #40]
   1054c:	bl	f3c8 <PyNumber_FloorDivide@plt+0xa778>
   10550:	str	x0, [sp, #72]
   10554:	ldr	x0, [sp, #72]
   10558:	cmp	x0, #0x0
   1055c:	b.ne	10568 <PyNumber_FloorDivide@plt+0xb918>  // b.any
   10560:	mov	x0, #0x0                   	// #0
   10564:	b	10848 <PyNumber_FloorDivide@plt+0xbbf8>
   10568:	mov	x1, #0x0                   	// #0
   1056c:	ldr	x0, [sp, #32]
   10570:	bl	f3c8 <PyNumber_FloorDivide@plt+0xa778>
   10574:	str	x0, [sp, #64]
   10578:	ldr	x0, [sp, #64]
   1057c:	cmp	x0, #0x0
   10580:	b.eq	1080c <PyNumber_FloorDivide@plt+0xbbbc>  // b.none
   10584:	ldr	x1, [sp, #72]
   10588:	ldr	x0, [sp, #64]
   1058c:	cmp	x1, x0
   10590:	b.eq	10618 <PyNumber_FloorDivide@plt+0xb9c8>  // b.none
   10594:	ldr	x0, [sp, #72]
   10598:	ldr	x1, [x0, #8]
   1059c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   105a0:	add	x0, x0, #0x5f0
   105a4:	cmp	x1, x0
   105a8:	b.eq	105cc <PyNumber_FloorDivide@plt+0xb97c>  // b.none
   105ac:	ldr	x0, [sp, #72]
   105b0:	ldr	x2, [x0, #8]
   105b4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   105b8:	add	x1, x0, #0x5f0
   105bc:	mov	x0, x2
   105c0:	bl	4b80 <PyType_IsSubtype@plt>
   105c4:	cmp	w0, #0x0
   105c8:	b.eq	106ac <PyNumber_FloorDivide@plt+0xba5c>  // b.none
   105cc:	ldr	x0, [sp, #64]
   105d0:	ldr	x1, [x0, #8]
   105d4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   105d8:	add	x0, x0, #0x5f0
   105dc:	cmp	x1, x0
   105e0:	b.eq	10604 <PyNumber_FloorDivide@plt+0xb9b4>  // b.none
   105e4:	ldr	x0, [sp, #64]
   105e8:	ldr	x2, [x0, #8]
   105ec:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   105f0:	add	x1, x0, #0x5f0
   105f4:	mov	x0, x2
   105f8:	bl	4b80 <PyType_IsSubtype@plt>
   105fc:	cmp	w0, #0x0
   10600:	b.eq	106ac <PyNumber_FloorDivide@plt+0xba5c>  // b.none
   10604:	ldr	x1, [sp, #64]
   10608:	ldr	x0, [sp, #72]
   1060c:	bl	8f1c <PyNumber_FloorDivide@plt+0x42cc>
   10610:	cmp	w0, #0x0
   10614:	b.ne	106ac <PyNumber_FloorDivide@plt+0xba5c>  // b.any
   10618:	ldr	x0, [sp, #40]
   1061c:	add	x3, x0, #0x19
   10620:	ldr	x0, [sp, #32]
   10624:	add	x0, x0, #0x19
   10628:	mov	x2, #0xa                   	// #10
   1062c:	mov	x1, x0
   10630:	mov	x0, x3
   10634:	bl	4a20 <memcmp@plt>
   10638:	str	w0, [sp, #84]
   1063c:	ldr	w0, [sp, #28]
   10640:	cmp	w0, #0x2
   10644:	b.eq	10654 <PyNumber_FloorDivide@plt+0xba04>  // b.none
   10648:	ldr	w0, [sp, #28]
   1064c:	cmp	w0, #0x3
   10650:	b.ne	10698 <PyNumber_FloorDivide@plt+0xba48>  // b.any
   10654:	ldr	w0, [sp, #84]
   10658:	cmp	w0, #0x0
   1065c:	b.ne	10698 <PyNumber_FloorDivide@plt+0xba48>  // b.any
   10660:	ldr	x3, [sp, #64]
   10664:	ldr	x2, [sp, #72]
   10668:	ldr	x1, [sp, #32]
   1066c:	ldr	x0, [sp, #40]
   10670:	bl	102d4 <PyNumber_FloorDivide@plt+0xb684>
   10674:	str	w0, [sp, #48]
   10678:	ldr	w0, [sp, #48]
   1067c:	cmn	w0, #0x1
   10680:	b.eq	10814 <PyNumber_FloorDivide@plt+0xbbc4>  // b.none
   10684:	ldr	w0, [sp, #48]
   10688:	cmp	w0, #0x0
   1068c:	b.eq	10698 <PyNumber_FloorDivide@plt+0xba48>  // b.none
   10690:	mov	w0, #0x1                   	// #1
   10694:	str	w0, [sp, #84]
   10698:	ldr	w1, [sp, #28]
   1069c:	ldr	w0, [sp, #84]
   106a0:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
   106a4:	str	x0, [sp, #88]
   106a8:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   106ac:	ldr	x1, [sp, #72]
   106b0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   106b4:	ldr	x0, [x0, #4024]
   106b8:	cmp	x1, x0
   106bc:	b.eq	107a4 <PyNumber_FloorDivide@plt+0xbb54>  // b.none
   106c0:	ldr	x1, [sp, #64]
   106c4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   106c8:	ldr	x0, [x0, #4024]
   106cc:	cmp	x1, x0
   106d0:	b.eq	107a4 <PyNumber_FloorDivide@plt+0xbb54>  // b.none
   106d4:	ldr	x1, [sp, #32]
   106d8:	ldr	x0, [sp, #40]
   106dc:	bl	f70c <PyNumber_FloorDivide@plt+0xaabc>
   106e0:	str	x0, [sp, #56]
   106e4:	ldr	x0, [sp, #56]
   106e8:	cmp	x0, #0x0
   106ec:	b.eq	1081c <PyNumber_FloorDivide@plt+0xbbcc>  // b.none
   106f0:	ldr	x0, [sp, #56]
   106f4:	ldr	w0, [x0, #24]
   106f8:	str	w0, [sp, #84]
   106fc:	ldr	w0, [sp, #84]
   10700:	cmp	w0, #0x0
   10704:	b.ne	10720 <PyNumber_FloorDivide@plt+0xbad0>  // b.any
   10708:	ldr	x0, [sp, #56]
   1070c:	ldr	w1, [x0, #28]
   10710:	ldr	x0, [sp, #56]
   10714:	ldr	w0, [x0, #32]
   10718:	orr	w0, w1, w0
   1071c:	str	w0, [sp, #84]
   10720:	ldr	x2, [sp, #56]
   10724:	mov	w1, #0x15f7                	// #5623
   10728:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1072c:	add	x0, x0, #0xb30
   10730:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10734:	ldr	w0, [sp, #28]
   10738:	cmp	w0, #0x2
   1073c:	b.eq	1074c <PyNumber_FloorDivide@plt+0xbafc>  // b.none
   10740:	ldr	w0, [sp, #28]
   10744:	cmp	w0, #0x3
   10748:	b.ne	10790 <PyNumber_FloorDivide@plt+0xbb40>  // b.any
   1074c:	ldr	w0, [sp, #84]
   10750:	cmp	w0, #0x0
   10754:	b.ne	10790 <PyNumber_FloorDivide@plt+0xbb40>  // b.any
   10758:	ldr	x3, [sp, #64]
   1075c:	ldr	x2, [sp, #72]
   10760:	ldr	x1, [sp, #32]
   10764:	ldr	x0, [sp, #40]
   10768:	bl	102d4 <PyNumber_FloorDivide@plt+0xb684>
   1076c:	str	w0, [sp, #52]
   10770:	ldr	w0, [sp, #52]
   10774:	cmn	w0, #0x1
   10778:	b.eq	10824 <PyNumber_FloorDivide@plt+0xbbd4>  // b.none
   1077c:	ldr	w0, [sp, #52]
   10780:	cmp	w0, #0x0
   10784:	b.eq	10790 <PyNumber_FloorDivide@plt+0xbb40>  // b.none
   10788:	mov	w0, #0x1                   	// #1
   1078c:	str	w0, [sp, #84]
   10790:	ldr	w1, [sp, #28]
   10794:	ldr	w0, [sp, #84]
   10798:	bl	7fa0 <PyNumber_FloorDivide@plt+0x3350>
   1079c:	str	x0, [sp, #88]
   107a0:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   107a4:	ldr	w0, [sp, #28]
   107a8:	cmp	w0, #0x2
   107ac:	b.ne	107c8 <PyNumber_FloorDivide@plt+0xbb78>  // b.any
   107b0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   107b4:	ldr	x0, [x0, #3992]
   107b8:	str	x0, [sp, #88]
   107bc:	ldr	x0, [sp, #88]
   107c0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   107c4:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   107c8:	ldr	w0, [sp, #28]
   107cc:	cmp	w0, #0x3
   107d0:	b.ne	107ec <PyNumber_FloorDivide@plt+0xbb9c>  // b.any
   107d4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   107d8:	ldr	x0, [x0, #4040]
   107dc:	str	x0, [sp, #88]
   107e0:	ldr	x0, [sp, #88]
   107e4:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   107e8:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   107ec:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   107f0:	ldr	x0, [x0, #3976]
   107f4:	ldr	x2, [x0]
   107f8:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   107fc:	add	x1, x0, #0x3f0
   10800:	mov	x0, x2
   10804:	bl	48c0 <PyErr_SetString@plt>
   10808:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   1080c:	nop
   10810:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   10814:	nop
   10818:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   1081c:	nop
   10820:	b	10828 <PyNumber_FloorDivide@plt+0xbbd8>
   10824:	nop
   10828:	ldr	x2, [sp, #72]
   1082c:	mov	w1, #0x160f                	// #5647
   10830:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10834:	add	x0, x0, #0xb30
   10838:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   1083c:	ldr	x0, [sp, #64]
   10840:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
   10844:	ldr	x0, [sp, #88]
   10848:	ldp	x29, x30, [sp], #96
   1084c:	ret
   10850:	sub	sp, sp, #0x60
   10854:	stp	x29, x30, [sp, #16]
   10858:	add	x29, sp, #0x10
   1085c:	str	x0, [sp, #40]
   10860:	ldr	x0, [sp, #40]
   10864:	ldr	x0, [x0, #16]
   10868:	cmn	x0, #0x1
   1086c:	b.ne	10b54 <PyNumber_FloorDivide@plt+0xbf04>  // b.any
   10870:	ldr	x0, [sp, #40]
   10874:	ldrb	w0, [x0, #35]
   10878:	cmp	w0, #0x0
   1087c:	b.eq	10960 <PyNumber_FloorDivide@plt+0xbd10>  // b.none
   10880:	ldr	x0, [sp, #40]
   10884:	ldrb	w0, [x0, #25]
   10888:	lsl	w0, w0, #8
   1088c:	ldr	x1, [sp, #40]
   10890:	ldrb	w1, [x1, #26]
   10894:	orr	w8, w0, w1
   10898:	ldr	x0, [sp, #40]
   1089c:	ldrb	w0, [x0, #27]
   108a0:	mov	w9, w0
   108a4:	ldr	x0, [sp, #40]
   108a8:	ldrb	w0, [x0, #28]
   108ac:	mov	w10, w0
   108b0:	ldr	x0, [sp, #40]
   108b4:	ldrb	w0, [x0, #29]
   108b8:	mov	w3, w0
   108bc:	ldr	x0, [sp, #40]
   108c0:	ldrb	w0, [x0, #30]
   108c4:	mov	w4, w0
   108c8:	ldr	x0, [sp, #40]
   108cc:	ldrb	w0, [x0, #31]
   108d0:	mov	w5, w0
   108d4:	ldr	x0, [sp, #40]
   108d8:	ldrb	w0, [x0, #32]
   108dc:	lsl	w1, w0, #16
   108e0:	ldr	x0, [sp, #40]
   108e4:	ldrb	w0, [x0, #33]
   108e8:	lsl	w0, w0, #8
   108ec:	orr	w0, w1, w0
   108f0:	ldr	x1, [sp, #40]
   108f4:	ldrb	w1, [x1, #34]
   108f8:	orr	w2, w0, w1
   108fc:	ldr	x0, [sp, #40]
   10900:	ldrb	w0, [x0, #24]
   10904:	cmp	w0, #0x0
   10908:	b.eq	10918 <PyNumber_FloorDivide@plt+0xbcc8>  // b.none
   1090c:	ldr	x0, [sp, #40]
   10910:	ldr	x0, [x0, #40]
   10914:	b	10920 <PyNumber_FloorDivide@plt+0xbcd0>
   10918:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   1091c:	ldr	x0, [x0, #4024]
   10920:	ldr	x1, [sp, #40]
   10924:	ldr	x1, [x1, #8]
   10928:	str	x1, [sp, #8]
   1092c:	str	wzr, [sp]
   10930:	mov	x7, x0
   10934:	mov	w6, w2
   10938:	mov	w2, w10
   1093c:	mov	w1, w9
   10940:	mov	w0, w8
   10944:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
   10948:	str	x0, [sp, #88]
   1094c:	ldr	x0, [sp, #88]
   10950:	cmp	x0, #0x0
   10954:	b.ne	10970 <PyNumber_FloorDivide@plt+0xbd20>  // b.any
   10958:	mov	x0, #0xffffffffffffffff    	// #-1
   1095c:	b	10b5c <PyNumber_FloorDivide@plt+0xbf0c>
   10960:	ldr	x0, [sp, #40]
   10964:	str	x0, [sp, #88]
   10968:	ldr	x0, [sp, #88]
   1096c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   10970:	mov	x1, #0x0                   	// #0
   10974:	ldr	x0, [sp, #88]
   10978:	bl	f3c8 <PyNumber_FloorDivide@plt+0xa778>
   1097c:	str	x0, [sp, #80]
   10980:	ldr	x2, [sp, #88]
   10984:	mov	w1, #0x162b                	// #5675
   10988:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1098c:	add	x0, x0, #0xb30
   10990:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10994:	ldr	x0, [sp, #80]
   10998:	cmp	x0, #0x0
   1099c:	b.ne	109a8 <PyNumber_FloorDivide@plt+0xbd58>  // b.any
   109a0:	mov	x0, #0xffffffffffffffff    	// #-1
   109a4:	b	10b5c <PyNumber_FloorDivide@plt+0xbf0c>
   109a8:	ldr	x1, [sp, #80]
   109ac:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   109b0:	ldr	x0, [x0, #4024]
   109b4:	cmp	x1, x0
   109b8:	b.ne	109dc <PyNumber_FloorDivide@plt+0xbd8c>  // b.any
   109bc:	ldr	x0, [sp, #40]
   109c0:	add	x0, x0, #0x19
   109c4:	mov	w1, #0xa                   	// #10
   109c8:	bl	b7e8 <PyNumber_FloorDivide@plt+0x6b98>
   109cc:	mov	x1, x0
   109d0:	ldr	x0, [sp, #40]
   109d4:	str	x1, [x0, #16]
   109d8:	b	10b40 <PyNumber_FloorDivide@plt+0xbef0>
   109dc:	ldr	x0, [sp, #40]
   109e0:	ldrb	w0, [x0, #25]
   109e4:	lsl	w0, w0, #8
   109e8:	ldr	x1, [sp, #40]
   109ec:	ldrb	w1, [x1, #26]
   109f0:	orr	w3, w0, w1
   109f4:	ldr	x0, [sp, #40]
   109f8:	ldrb	w0, [x0, #27]
   109fc:	mov	w1, w0
   10a00:	ldr	x0, [sp, #40]
   10a04:	ldrb	w0, [x0, #28]
   10a08:	mov	w2, w0
   10a0c:	mov	w0, w3
   10a10:	bl	574c <PyNumber_FloorDivide@plt+0xafc>
   10a14:	str	w0, [sp, #76]
   10a18:	ldr	x0, [sp, #40]
   10a1c:	ldrb	w0, [x0, #29]
   10a20:	mov	w1, w0
   10a24:	mov	w0, #0xe10                 	// #3600
   10a28:	mul	w1, w1, w0
   10a2c:	ldr	x0, [sp, #40]
   10a30:	ldrb	w0, [x0, #30]
   10a34:	mov	w2, w0
   10a38:	mov	w0, w2
   10a3c:	lsl	w0, w0, #4
   10a40:	sub	w0, w0, w2
   10a44:	lsl	w0, w0, #2
   10a48:	add	w0, w1, w0
   10a4c:	ldr	x1, [sp, #40]
   10a50:	ldrb	w1, [x1, #31]
   10a54:	add	w0, w0, w1
   10a58:	str	w0, [sp, #72]
   10a5c:	ldr	x0, [sp, #40]
   10a60:	ldrb	w0, [x0, #32]
   10a64:	lsl	w1, w0, #16
   10a68:	ldr	x0, [sp, #40]
   10a6c:	ldrb	w0, [x0, #33]
   10a70:	lsl	w0, w0, #8
   10a74:	orr	w0, w1, w0
   10a78:	ldr	x1, [sp, #40]
   10a7c:	ldrb	w1, [x1, #34]
   10a80:	orr	w1, w0, w1
   10a84:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   10a88:	add	x4, x0, #0x5f0
   10a8c:	mov	w3, #0x1                   	// #1
   10a90:	mov	w2, w1
   10a94:	ldr	w1, [sp, #72]
   10a98:	ldr	w0, [sp, #76]
   10a9c:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   10aa0:	str	x0, [sp, #64]
   10aa4:	ldr	x0, [sp, #64]
   10aa8:	cmp	x0, #0x0
   10aac:	b.ne	10acc <PyNumber_FloorDivide@plt+0xbe7c>  // b.any
   10ab0:	ldr	x2, [sp, #80]
   10ab4:	mov	w1, #0x1643                	// #5699
   10ab8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10abc:	add	x0, x0, #0xb30
   10ac0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10ac4:	mov	x0, #0xffffffffffffffff    	// #-1
   10ac8:	b	10b5c <PyNumber_FloorDivide@plt+0xbf0c>
   10acc:	ldr	x1, [sp, #80]
   10ad0:	ldr	x0, [sp, #64]
   10ad4:	bl	8e00 <PyNumber_FloorDivide@plt+0x41b0>
   10ad8:	str	x0, [sp, #56]
   10adc:	ldr	x2, [sp, #64]
   10ae0:	mov	w1, #0x1647                	// #5703
   10ae4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10ae8:	add	x0, x0, #0xb30
   10aec:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10af0:	ldr	x0, [sp, #56]
   10af4:	cmp	x0, #0x0
   10af8:	b.ne	10b18 <PyNumber_FloorDivide@plt+0xbec8>  // b.any
   10afc:	ldr	x2, [sp, #80]
   10b00:	mov	w1, #0x1649                	// #5705
   10b04:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10b08:	add	x0, x0, #0xb30
   10b0c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10b10:	mov	x0, #0xffffffffffffffff    	// #-1
   10b14:	b	10b5c <PyNumber_FloorDivide@plt+0xbf0c>
   10b18:	ldr	x0, [sp, #56]
   10b1c:	bl	4a90 <PyObject_Hash@plt>
   10b20:	mov	x1, x0
   10b24:	ldr	x0, [sp, #40]
   10b28:	str	x1, [x0, #16]
   10b2c:	ldr	x2, [sp, #56]
   10b30:	mov	w1, #0x164d                	// #5709
   10b34:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10b38:	add	x0, x0, #0xb30
   10b3c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10b40:	ldr	x2, [sp, #80]
   10b44:	mov	w1, #0x164f                	// #5711
   10b48:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10b4c:	add	x0, x0, #0xb30
   10b50:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10b54:	ldr	x0, [sp, #40]
   10b58:	ldr	x0, [x0, #16]
   10b5c:	ldp	x29, x30, [sp, #16]
   10b60:	add	sp, sp, #0x60
   10b64:	ret
   10b68:	sub	sp, sp, #0xa0
   10b6c:	stp	x29, x30, [sp, #48]
   10b70:	add	x29, sp, #0x30
   10b74:	str	x0, [sp, #88]
   10b78:	str	x1, [sp, #80]
   10b7c:	str	x2, [sp, #72]
   10b80:	ldr	x0, [sp, #88]
   10b84:	ldrb	w0, [x0, #25]
   10b88:	lsl	w0, w0, #8
   10b8c:	ldr	x1, [sp, #88]
   10b90:	ldrb	w1, [x1, #26]
   10b94:	orr	w0, w0, w1
   10b98:	str	w0, [sp, #140]
   10b9c:	ldr	x0, [sp, #88]
   10ba0:	ldrb	w0, [x0, #27]
   10ba4:	str	w0, [sp, #136]
   10ba8:	ldr	x0, [sp, #88]
   10bac:	ldrb	w0, [x0, #28]
   10bb0:	str	w0, [sp, #132]
   10bb4:	ldr	x0, [sp, #88]
   10bb8:	ldrb	w0, [x0, #29]
   10bbc:	str	w0, [sp, #128]
   10bc0:	ldr	x0, [sp, #88]
   10bc4:	ldrb	w0, [x0, #30]
   10bc8:	str	w0, [sp, #124]
   10bcc:	ldr	x0, [sp, #88]
   10bd0:	ldrb	w0, [x0, #31]
   10bd4:	str	w0, [sp, #120]
   10bd8:	ldr	x0, [sp, #88]
   10bdc:	ldrb	w0, [x0, #32]
   10be0:	lsl	w1, w0, #16
   10be4:	ldr	x0, [sp, #88]
   10be8:	ldrb	w0, [x0, #33]
   10bec:	lsl	w0, w0, #8
   10bf0:	orr	w0, w1, w0
   10bf4:	ldr	x1, [sp, #88]
   10bf8:	ldrb	w1, [x1, #34]
   10bfc:	orr	w0, w0, w1
   10c00:	str	w0, [sp, #116]
   10c04:	ldr	x0, [sp, #88]
   10c08:	ldrb	w0, [x0, #24]
   10c0c:	cmp	w0, #0x0
   10c10:	b.eq	10c20 <PyNumber_FloorDivide@plt+0xbfd0>  // b.none
   10c14:	ldr	x0, [sp, #88]
   10c18:	ldr	x0, [x0, #40]
   10c1c:	b	10c28 <PyNumber_FloorDivide@plt+0xbfd8>
   10c20:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   10c24:	ldr	x0, [x0, #4024]
   10c28:	str	x0, [sp, #104]
   10c2c:	ldr	x0, [sp, #88]
   10c30:	ldrb	w0, [x0, #35]
   10c34:	str	w0, [sp, #100]
   10c38:	add	x4, sp, #0x80
   10c3c:	add	x3, sp, #0x84
   10c40:	add	x2, sp, #0x88
   10c44:	add	x1, sp, #0x8c
   10c48:	add	x0, sp, #0x64
   10c4c:	str	x0, [sp, #32]
   10c50:	add	x0, sp, #0x68
   10c54:	str	x0, [sp, #24]
   10c58:	add	x0, sp, #0x74
   10c5c:	str	x0, [sp, #16]
   10c60:	add	x0, sp, #0x78
   10c64:	str	x0, [sp, #8]
   10c68:	add	x0, sp, #0x7c
   10c6c:	str	x0, [sp]
   10c70:	mov	x7, x4
   10c74:	mov	x6, x3
   10c78:	mov	x5, x2
   10c7c:	mov	x4, x1
   10c80:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
   10c84:	add	x3, x0, #0x850
   10c88:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   10c8c:	add	x2, x0, #0x428
   10c90:	ldr	x1, [sp, #72]
   10c94:	ldr	x0, [sp, #80]
   10c98:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
   10c9c:	cmp	w0, #0x0
   10ca0:	b.ne	10cac <PyNumber_FloorDivide@plt+0xc05c>  // b.any
   10ca4:	mov	x0, #0x0                   	// #0
   10ca8:	b	10d7c <PyNumber_FloorDivide@plt+0xc12c>
   10cac:	ldr	w0, [sp, #100]
   10cb0:	cmp	w0, #0x0
   10cb4:	b.eq	10ce8 <PyNumber_FloorDivide@plt+0xc098>  // b.none
   10cb8:	ldr	w0, [sp, #100]
   10cbc:	cmp	w0, #0x1
   10cc0:	b.eq	10ce8 <PyNumber_FloorDivide@plt+0xc098>  // b.none
   10cc4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   10cc8:	ldr	x0, [x0, #3968]
   10ccc:	ldr	x2, [x0]
   10cd0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10cd4:	add	x1, x0, #0xcb8
   10cd8:	mov	x0, x2
   10cdc:	bl	48c0 <PyErr_SetString@plt>
   10ce0:	mov	x0, #0x0                   	// #0
   10ce4:	b	10d7c <PyNumber_FloorDivide@plt+0xc12c>
   10ce8:	ldr	w1, [sp, #140]
   10cec:	ldr	w2, [sp, #136]
   10cf0:	ldr	w3, [sp, #132]
   10cf4:	ldr	w4, [sp, #128]
   10cf8:	ldr	w5, [sp, #124]
   10cfc:	ldr	w6, [sp, #120]
   10d00:	ldr	w7, [sp, #116]
   10d04:	ldr	x0, [sp, #104]
   10d08:	str	x0, [sp]
   10d0c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10d10:	add	x0, x0, #0xcf8
   10d14:	bl	49e0 <Py_BuildValue@plt>
   10d18:	str	x0, [sp, #152]
   10d1c:	ldr	x0, [sp, #152]
   10d20:	cmp	x0, #0x0
   10d24:	b.ne	10d30 <PyNumber_FloorDivide@plt+0xc0e0>  // b.any
   10d28:	mov	x0, #0x0                   	// #0
   10d2c:	b	10d7c <PyNumber_FloorDivide@plt+0xc12c>
   10d30:	ldr	x0, [sp, #88]
   10d34:	ldr	x0, [x0, #8]
   10d38:	mov	x2, #0x0                   	// #0
   10d3c:	ldr	x1, [sp, #152]
   10d40:	bl	e134 <PyNumber_FloorDivide@plt+0x94e4>
   10d44:	str	x0, [sp, #144]
   10d48:	ldr	x0, [sp, #144]
   10d4c:	cmp	x0, #0x0
   10d50:	b.eq	10d64 <PyNumber_FloorDivide@plt+0xc114>  // b.none
   10d54:	ldr	w0, [sp, #100]
   10d58:	and	w1, w0, #0xff
   10d5c:	ldr	x0, [sp, #144]
   10d60:	strb	w1, [x0, #35]
   10d64:	ldr	x2, [sp, #152]
   10d68:	mov	w1, #0x1674                	// #5748
   10d6c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10d70:	add	x0, x0, #0xb30
   10d74:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10d78:	ldr	x0, [sp, #144]
   10d7c:	ldp	x29, x30, [sp, #48]
   10d80:	add	sp, sp, #0xa0
   10d84:	ret
   10d88:	stp	x29, x30, [sp, #-128]!
   10d8c:	mov	x29, sp
   10d90:	str	x0, [sp, #24]
   10d94:	str	xzr, [sp, #120]
   10d98:	str	xzr, [sp, #112]
   10d9c:	str	xzr, [sp, #104]
   10da0:	add	x0, sp, #0x28
   10da4:	mov	x1, x0
   10da8:	ldr	x0, [sp, #24]
   10dac:	bl	4c10 <_PyTime_localtime@plt>
   10db0:	cmp	w0, #0x0
   10db4:	b.eq	10dc0 <PyNumber_FloorDivide@plt+0xc170>  // b.none
   10db8:	mov	x0, #0x0                   	// #0
   10dbc:	b	10e64 <PyNumber_FloorDivide@plt+0xc214>
   10dc0:	ldr	x0, [sp, #88]
   10dc4:	str	x0, [sp, #104]
   10dc8:	ldr	x0, [sp, #80]
   10dcc:	mov	w1, w0
   10dd0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   10dd4:	add	x4, x0, #0x5f0
   10dd8:	mov	w3, #0x1                   	// #1
   10ddc:	mov	w2, #0x0                   	// #0
   10de0:	mov	w0, #0x0                   	// #0
   10de4:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   10de8:	str	x0, [sp, #96]
   10dec:	ldr	x0, [sp, #96]
   10df0:	cmp	x0, #0x0
   10df4:	b.ne	10e00 <PyNumber_FloorDivide@plt+0xc1b0>  // b.any
   10df8:	mov	x0, #0x0                   	// #0
   10dfc:	b	10e64 <PyNumber_FloorDivide@plt+0xc214>
   10e00:	ldr	x0, [sp, #104]
   10e04:	cmp	x0, #0x0
   10e08:	b.eq	10e2c <PyNumber_FloorDivide@plt+0xc1dc>  // b.none
   10e0c:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   10e10:	add	x1, x0, #0x440
   10e14:	ldr	x0, [sp, #104]
   10e18:	bl	4960 <PyUnicode_DecodeLocale@plt>
   10e1c:	str	x0, [sp, #112]
   10e20:	ldr	x0, [sp, #112]
   10e24:	cmp	x0, #0x0
   10e28:	b.eq	10e48 <PyNumber_FloorDivide@plt+0xc1f8>  // b.none
   10e2c:	ldr	x1, [sp, #112]
   10e30:	ldr	x0, [sp, #96]
   10e34:	bl	6cb8 <PyNumber_FloorDivide@plt+0x2068>
   10e38:	str	x0, [sp, #120]
   10e3c:	ldr	x0, [sp, #112]
   10e40:	bl	4ed0 <PyNumber_FloorDivide@plt+0x280>
   10e44:	b	10e4c <PyNumber_FloorDivide@plt+0xc1fc>
   10e48:	nop
   10e4c:	ldr	x2, [sp, #96]
   10e50:	mov	w1, #0x16b2                	// #5810
   10e54:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10e58:	add	x0, x0, #0xb30
   10e5c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10e60:	ldr	x0, [sp, #120]
   10e64:	ldp	x29, x30, [sp], #128
   10e68:	ret
   10e6c:	stp	x29, x30, [sp, #-64]!
   10e70:	mov	x29, sp
   10e74:	str	x0, [sp, #24]
   10e78:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   10e7c:	add	x0, x0, #0x38
   10e80:	ldr	x0, [x0]
   10e84:	mov	x1, x0
   10e88:	ldr	x0, [sp, #24]
   10e8c:	bl	f70c <PyNumber_FloorDivide@plt+0xaabc>
   10e90:	str	x0, [sp, #56]
   10e94:	ldr	x0, [sp, #56]
   10e98:	cmp	x0, #0x0
   10e9c:	b.ne	10ea8 <PyNumber_FloorDivide@plt+0xc258>  // b.any
   10ea0:	mov	x0, #0x0                   	// #0
   10ea4:	b	10f84 <PyNumber_FloorDivide@plt+0xc334>
   10ea8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   10eac:	add	x4, x0, #0x5f0
   10eb0:	mov	w3, #0x0                   	// #0
   10eb4:	mov	w2, #0x0                   	// #0
   10eb8:	mov	w1, #0x1                   	// #1
   10ebc:	mov	w0, #0x0                   	// #0
   10ec0:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   10ec4:	str	x0, [sp, #48]
   10ec8:	ldr	x0, [sp, #48]
   10ecc:	cmp	x0, #0x0
   10ed0:	b.ne	10ef0 <PyNumber_FloorDivide@plt+0xc2a0>  // b.any
   10ed4:	ldr	x2, [sp, #56]
   10ed8:	mov	w1, #0x16c3                	// #5827
   10edc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10ee0:	add	x0, x0, #0xb30
   10ee4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10ee8:	mov	x0, #0x0                   	// #0
   10eec:	b	10f84 <PyNumber_FloorDivide@plt+0xc334>
   10ef0:	ldr	x1, [sp, #48]
   10ef4:	ldr	x0, [sp, #56]
   10ef8:	bl	8a28 <PyNumber_FloorDivide@plt+0x3dd8>
   10efc:	str	x0, [sp, #40]
   10f00:	ldr	x2, [sp, #48]
   10f04:	mov	w1, #0x16c8                	// #5832
   10f08:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10f0c:	add	x0, x0, #0xb30
   10f10:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10f14:	ldr	x2, [sp, #56]
   10f18:	mov	w1, #0x16c9                	// #5833
   10f1c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10f20:	add	x0, x0, #0xb30
   10f24:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10f28:	ldr	x0, [sp, #40]
   10f2c:	cmp	x0, #0x0
   10f30:	b.ne	10f3c <PyNumber_FloorDivide@plt+0xc2ec>  // b.any
   10f34:	mov	x0, #0x0                   	// #0
   10f38:	b	10f84 <PyNumber_FloorDivide@plt+0xc334>
   10f3c:	ldr	x0, [sp, #40]
   10f40:	bl	4af0 <_PyLong_AsTime_t@plt>
   10f44:	str	x0, [sp, #32]
   10f48:	ldr	x2, [sp, #40]
   10f4c:	mov	w1, #0x16cd                	// #5837
   10f50:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   10f54:	add	x0, x0, #0xb30
   10f58:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   10f5c:	ldr	x0, [sp, #32]
   10f60:	cmn	x0, #0x1
   10f64:	b.ne	10f7c <PyNumber_FloorDivide@plt+0xc32c>  // b.any
   10f68:	bl	49f0 <PyErr_Occurred@plt>
   10f6c:	cmp	x0, #0x0
   10f70:	b.eq	10f7c <PyNumber_FloorDivide@plt+0xc32c>  // b.none
   10f74:	mov	x0, #0x0                   	// #0
   10f78:	b	10f84 <PyNumber_FloorDivide@plt+0xc334>
   10f7c:	ldr	x0, [sp, #32]
   10f80:	bl	10d88 <PyNumber_FloorDivide@plt+0xc138>
   10f84:	ldp	x29, x30, [sp], #64
   10f88:	ret
   10f8c:	stp	x29, x30, [sp, #-48]!
   10f90:	mov	x29, sp
   10f94:	str	x0, [sp, #24]
   10f98:	ldr	x0, [sp, #24]
   10f9c:	ldrb	w0, [x0, #25]
   10fa0:	lsl	w0, w0, #8
   10fa4:	ldr	x1, [sp, #24]
   10fa8:	ldrb	w1, [x1, #26]
   10fac:	orr	w7, w0, w1
   10fb0:	ldr	x0, [sp, #24]
   10fb4:	ldrb	w0, [x0, #27]
   10fb8:	mov	w1, w0
   10fbc:	ldr	x0, [sp, #24]
   10fc0:	ldrb	w0, [x0, #28]
   10fc4:	mov	w2, w0
   10fc8:	ldr	x0, [sp, #24]
   10fcc:	ldrb	w0, [x0, #29]
   10fd0:	mov	w3, w0
   10fd4:	ldr	x0, [sp, #24]
   10fd8:	ldrb	w0, [x0, #30]
   10fdc:	mov	w4, w0
   10fe0:	ldr	x0, [sp, #24]
   10fe4:	ldrb	w0, [x0, #31]
   10fe8:	mov	w5, w0
   10fec:	ldr	x0, [sp, #24]
   10ff0:	ldrb	w0, [x0, #35]
   10ff4:	mov	w6, w0
   10ff8:	mov	w0, w7
   10ffc:	bl	11574 <PyNumber_FloorDivide@plt+0xc924>
   11000:	str	x0, [sp, #40]
   11004:	ldr	x0, [sp, #40]
   11008:	cmn	x0, #0x1
   1100c:	b.ne	11018 <PyNumber_FloorDivide@plt+0xc3c8>  // b.any
   11010:	mov	x0, #0x0                   	// #0
   11014:	b	11038 <PyNumber_FloorDivide@plt+0xc3e8>
   11018:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1101c:	add	x0, x0, #0x2a8
   11020:	ldr	x0, [x0]
   11024:	ldr	x1, [sp, #40]
   11028:	sub	x0, x1, x0
   1102c:	str	x0, [sp, #32]
   11030:	ldr	x0, [sp, #32]
   11034:	bl	10d88 <PyNumber_FloorDivide@plt+0xc138>
   11038:	ldp	x29, x30, [sp], #48
   1103c:	ret
   11040:	sub	sp, sp, #0x70
   11044:	stp	x29, x30, [sp, #16]
   11048:	add	x29, sp, #0x10
   1104c:	str	x0, [sp, #56]
   11050:	str	x1, [sp, #48]
   11054:	str	x2, [sp, #40]
   11058:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   1105c:	ldr	x0, [x0, #4024]
   11060:	str	x0, [sp, #72]
   11064:	add	x0, sp, #0x48
   11068:	mov	x4, x0
   1106c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   11070:	add	x3, x0, #0x18
   11074:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   11078:	add	x2, x0, #0x450
   1107c:	ldr	x1, [sp, #40]
   11080:	ldr	x0, [sp, #48]
   11084:	bl	4790 <PyArg_ParseTupleAndKeywords@plt>
   11088:	cmp	w0, #0x0
   1108c:	b.ne	11098 <PyNumber_FloorDivide@plt+0xc448>  // b.any
   11090:	mov	x0, #0x0                   	// #0
   11094:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   11098:	ldr	x0, [sp, #72]
   1109c:	bl	6d90 <PyNumber_FloorDivide@plt+0x2140>
   110a0:	cmn	w0, #0x1
   110a4:	b.ne	110b0 <PyNumber_FloorDivide@plt+0xc460>  // b.any
   110a8:	mov	x0, #0x0                   	// #0
   110ac:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   110b0:	ldr	x0, [sp, #56]
   110b4:	ldrb	w0, [x0, #24]
   110b8:	cmp	w0, #0x0
   110bc:	b.eq	110d8 <PyNumber_FloorDivide@plt+0xc488>  // b.none
   110c0:	ldr	x0, [sp, #56]
   110c4:	ldr	x1, [x0, #40]
   110c8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   110cc:	ldr	x0, [x0, #4024]
   110d0:	cmp	x1, x0
   110d4:	b.ne	110fc <PyNumber_FloorDivide@plt+0xc4ac>  // b.any
   110d8:	nop
   110dc:	ldr	x0, [sp, #56]
   110e0:	bl	10f8c <PyNumber_FloorDivide@plt+0xc33c>
   110e4:	str	x0, [sp, #96]
   110e8:	ldr	x0, [sp, #96]
   110ec:	cmp	x0, #0x0
   110f0:	b.ne	11110 <PyNumber_FloorDivide@plt+0xc4c0>  // b.any
   110f4:	mov	x0, #0x0                   	// #0
   110f8:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   110fc:	ldr	x0, [sp, #56]
   11100:	ldr	x0, [x0, #40]
   11104:	str	x0, [sp, #96]
   11108:	ldr	x0, [sp, #96]
   1110c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   11110:	ldr	x0, [sp, #72]
   11114:	ldr	x1, [sp, #96]
   11118:	cmp	x1, x0
   1111c:	b.ne	11144 <PyNumber_FloorDivide@plt+0xc4f4>  // b.any
   11120:	ldr	x2, [sp, #96]
   11124:	mov	w1, #0x1707                	// #5895
   11128:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1112c:	add	x0, x0, #0xb30
   11130:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11134:	ldr	x0, [sp, #56]
   11138:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   1113c:	ldr	x0, [sp, #56]
   11140:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   11144:	ldr	x1, [sp, #56]
   11148:	ldr	x0, [sp, #96]
   1114c:	bl	7090 <PyNumber_FloorDivide@plt+0x2440>
   11150:	str	x0, [sp, #88]
   11154:	ldr	x2, [sp, #96]
   11158:	mov	w1, #0x170e                	// #5902
   1115c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11160:	add	x0, x0, #0xb30
   11164:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11168:	ldr	x0, [sp, #88]
   1116c:	cmp	x0, #0x0
   11170:	b.ne	1117c <PyNumber_FloorDivide@plt+0xc52c>  // b.any
   11174:	mov	x0, #0x0                   	// #0
   11178:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   1117c:	ldr	x1, [sp, #88]
   11180:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   11184:	ldr	x0, [x0, #4024]
   11188:	cmp	x1, x0
   1118c:	b.ne	111a8 <PyNumber_FloorDivide@plt+0xc558>  // b.any
   11190:	ldr	x2, [sp, #88]
   11194:	mov	w1, #0x1712                	// #5906
   11198:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1119c:	add	x0, x0, #0xb30
   111a0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   111a4:	b	110dc <PyNumber_FloorDivide@plt+0xc48c>
   111a8:	ldr	x0, [sp, #88]
   111ac:	ldr	x1, [x0, #8]
   111b0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   111b4:	add	x0, x0, #0x5f0
   111b8:	cmp	x1, x0
   111bc:	b.eq	11228 <PyNumber_FloorDivide@plt+0xc5d8>  // b.none
   111c0:	ldr	x0, [sp, #88]
   111c4:	ldr	x2, [x0, #8]
   111c8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   111cc:	add	x1, x0, #0x5f0
   111d0:	mov	x0, x2
   111d4:	bl	4b80 <PyType_IsSubtype@plt>
   111d8:	cmp	w0, #0x0
   111dc:	b.ne	11228 <PyNumber_FloorDivide@plt+0xc5d8>  // b.any
   111e0:	ldr	x2, [sp, #88]
   111e4:	mov	w1, #0x1716                	// #5910
   111e8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   111ec:	add	x0, x0, #0xb30
   111f0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   111f4:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   111f8:	ldr	x0, [x0, #3976]
   111fc:	ldr	x3, [x0]
   11200:	ldr	x0, [sp, #88]
   11204:	ldr	x0, [x0, #8]
   11208:	ldr	x0, [x0, #24]
   1120c:	mov	x2, x0
   11210:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   11214:	add	x1, x0, #0x460
   11218:	mov	x0, x3
   1121c:	bl	4bb0 <PyErr_Format@plt>
   11220:	mov	x0, #0x0                   	// #0
   11224:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   11228:	mov	w2, #0xffffffff            	// #-1
   1122c:	ldr	x1, [sp, #88]
   11230:	ldr	x0, [sp, #56]
   11234:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
   11238:	str	x0, [sp, #104]
   1123c:	ldr	x2, [sp, #88]
   11240:	mov	w1, #0x171e                	// #5918
   11244:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11248:	add	x0, x0, #0xb30
   1124c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11250:	ldr	x0, [sp, #104]
   11254:	cmp	x0, #0x0
   11258:	b.ne	11264 <PyNumber_FloorDivide@plt+0xc614>  // b.any
   1125c:	mov	x0, #0x0                   	// #0
   11260:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   11264:	ldr	x0, [sp, #104]
   11268:	ldrb	w0, [x0, #24]
   1126c:	cmp	w0, #0x0
   11270:	b.ne	11368 <PyNumber_FloorDivide@plt+0xc718>  // b.any
   11274:	ldr	x0, [sp, #104]
   11278:	str	x0, [sp, #80]
   1127c:	ldr	x0, [sp, #104]
   11280:	ldrb	w0, [x0, #25]
   11284:	lsl	w0, w0, #8
   11288:	ldr	x1, [sp, #104]
   1128c:	ldrb	w1, [x1, #26]
   11290:	orr	w8, w0, w1
   11294:	ldr	x0, [sp, #104]
   11298:	ldrb	w0, [x0, #27]
   1129c:	mov	w9, w0
   112a0:	ldr	x0, [sp, #104]
   112a4:	ldrb	w0, [x0, #28]
   112a8:	mov	w10, w0
   112ac:	ldr	x0, [sp, #104]
   112b0:	ldrb	w0, [x0, #29]
   112b4:	mov	w11, w0
   112b8:	ldr	x0, [sp, #104]
   112bc:	ldrb	w0, [x0, #30]
   112c0:	mov	w4, w0
   112c4:	ldr	x0, [sp, #104]
   112c8:	ldrb	w0, [x0, #31]
   112cc:	mov	w5, w0
   112d0:	ldr	x0, [sp, #104]
   112d4:	ldrb	w0, [x0, #32]
   112d8:	lsl	w1, w0, #16
   112dc:	ldr	x0, [sp, #104]
   112e0:	ldrb	w0, [x0, #33]
   112e4:	lsl	w0, w0, #8
   112e8:	orr	w0, w1, w0
   112ec:	ldr	x1, [sp, #104]
   112f0:	ldrb	w1, [x1, #34]
   112f4:	orr	w1, w0, w1
   112f8:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   112fc:	add	x0, x0, #0x30
   11300:	ldr	x2, [x0]
   11304:	ldr	x0, [sp, #104]
   11308:	ldrb	w0, [x0, #35]
   1130c:	mov	w3, w0
   11310:	ldr	x0, [sp, #104]
   11314:	ldr	x0, [x0, #8]
   11318:	str	x0, [sp, #8]
   1131c:	str	w3, [sp]
   11320:	mov	x7, x2
   11324:	mov	w6, w1
   11328:	mov	w3, w11
   1132c:	mov	w2, w10
   11330:	mov	w1, w9
   11334:	mov	w0, w8
   11338:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
   1133c:	str	x0, [sp, #104]
   11340:	ldr	x2, [sp, #80]
   11344:	mov	w1, #0x1730                	// #5936
   11348:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1134c:	add	x0, x0, #0xb30
   11350:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11354:	ldr	x0, [sp, #104]
   11358:	cmp	x0, #0x0
   1135c:	b.ne	113a8 <PyNumber_FloorDivide@plt+0xc758>  // b.any
   11360:	mov	x0, #0x0                   	// #0
   11364:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   11368:	ldr	x0, [sp, #104]
   1136c:	ldr	x0, [x0, #40]
   11370:	str	x0, [sp, #80]
   11374:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   11378:	add	x0, x0, #0x30
   1137c:	ldr	x1, [x0]
   11380:	ldr	x0, [sp, #104]
   11384:	str	x1, [x0, #40]
   11388:	ldr	x0, [sp, #104]
   1138c:	ldr	x0, [x0, #40]
   11390:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   11394:	ldr	x2, [sp, #80]
   11398:	mov	w1, #0x1739                	// #5945
   1139c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   113a0:	add	x0, x0, #0xb30
   113a4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   113a8:	ldr	x0, [sp, #104]
   113ac:	ldr	x0, [x0, #40]
   113b0:	str	x0, [sp, #80]
   113b4:	ldr	x1, [sp, #72]
   113b8:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   113bc:	ldr	x0, [x0, #4024]
   113c0:	cmp	x1, x0
   113c4:	b.ne	113fc <PyNumber_FloorDivide@plt+0xc7ac>  // b.any
   113c8:	ldr	x0, [sp, #104]
   113cc:	bl	10e6c <PyNumber_FloorDivide@plt+0xc21c>
   113d0:	str	x0, [sp, #72]
   113d4:	ldr	x0, [sp, #72]
   113d8:	cmp	x0, #0x0
   113dc:	b.ne	11404 <PyNumber_FloorDivide@plt+0xc7b4>  // b.any
   113e0:	ldr	x2, [sp, #104]
   113e4:	mov	w1, #0x1741                	// #5953
   113e8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   113ec:	add	x0, x0, #0xb30
   113f0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   113f4:	mov	x0, #0x0                   	// #0
   113f8:	b	11464 <PyNumber_FloorDivide@plt+0xc814>
   113fc:	ldr	x0, [sp, #72]
   11400:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   11404:	ldr	x1, [sp, #72]
   11408:	ldr	x0, [sp, #104]
   1140c:	str	x1, [x0, #40]
   11410:	ldr	x2, [sp, #80]
   11414:	mov	w1, #0x1748                	// #5960
   11418:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1141c:	add	x0, x0, #0xb30
   11420:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11424:	ldr	x0, [sp, #104]
   11428:	str	x0, [sp, #80]
   1142c:	ldr	x4, [sp, #72]
   11430:	mov	x3, #0x0                   	// #0
   11434:	ldr	x2, [sp, #80]
   11438:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1143c:	add	x1, x0, #0xc88
   11440:	mov	x0, x4
   11444:	bl	4b30 <_PyObject_CallMethodIdObjArgs@plt>
   11448:	str	x0, [sp, #104]
   1144c:	ldr	x2, [sp, #80]
   11450:	mov	w1, #0x174d                	// #5965
   11454:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11458:	add	x0, x0, #0xb30
   1145c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11460:	ldr	x0, [sp, #104]
   11464:	ldp	x29, x30, [sp, #16]
   11468:	add	sp, sp, #0x70
   1146c:	ret
   11470:	stp	x29, x30, [sp, #-48]!
   11474:	mov	x29, sp
   11478:	str	x0, [sp, #24]
   1147c:	str	x1, [sp, #16]
   11480:	mov	w0, #0xffffffff            	// #-1
   11484:	str	w0, [sp, #44]
   11488:	ldr	x0, [sp, #24]
   1148c:	ldrb	w0, [x0, #24]
   11490:	cmp	w0, #0x0
   11494:	b.eq	1150c <PyNumber_FloorDivide@plt+0xc8bc>  // b.none
   11498:	ldr	x0, [sp, #24]
   1149c:	ldr	x1, [x0, #40]
   114a0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   114a4:	ldr	x0, [x0, #4024]
   114a8:	cmp	x1, x0
   114ac:	b.eq	1150c <PyNumber_FloorDivide@plt+0xc8bc>  // b.none
   114b0:	ldr	x0, [sp, #24]
   114b4:	ldr	x0, [x0, #40]
   114b8:	ldr	x1, [sp, #24]
   114bc:	bl	70bc <PyNumber_FloorDivide@plt+0x246c>
   114c0:	str	x0, [sp, #32]
   114c4:	ldr	x0, [sp, #32]
   114c8:	cmp	x0, #0x0
   114cc:	b.ne	114d8 <PyNumber_FloorDivide@plt+0xc888>  // b.any
   114d0:	mov	x0, #0x0                   	// #0
   114d4:	b	1156c <PyNumber_FloorDivide@plt+0xc91c>
   114d8:	ldr	x1, [sp, #32]
   114dc:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   114e0:	ldr	x0, [x0, #4024]
   114e4:	cmp	x1, x0
   114e8:	b.eq	114f8 <PyNumber_FloorDivide@plt+0xc8a8>  // b.none
   114ec:	ldr	x0, [sp, #32]
   114f0:	bl	9f98 <PyNumber_FloorDivide@plt+0x5348>
   114f4:	str	w0, [sp, #44]
   114f8:	ldr	x2, [sp, #32]
   114fc:	mov	w1, #0x1760                	// #5984
   11500:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11504:	add	x0, x0, #0xb30
   11508:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   1150c:	ldr	x0, [sp, #24]
   11510:	ldrb	w0, [x0, #25]
   11514:	lsl	w0, w0, #8
   11518:	ldr	x1, [sp, #24]
   1151c:	ldrb	w1, [x1, #26]
   11520:	orr	w7, w0, w1
   11524:	ldr	x0, [sp, #24]
   11528:	ldrb	w0, [x0, #27]
   1152c:	mov	w1, w0
   11530:	ldr	x0, [sp, #24]
   11534:	ldrb	w0, [x0, #28]
   11538:	mov	w2, w0
   1153c:	ldr	x0, [sp, #24]
   11540:	ldrb	w0, [x0, #29]
   11544:	mov	w3, w0
   11548:	ldr	x0, [sp, #24]
   1154c:	ldrb	w0, [x0, #30]
   11550:	mov	w4, w0
   11554:	ldr	x0, [sp, #24]
   11558:	ldrb	w0, [x0, #31]
   1155c:	ldr	w6, [sp, #44]
   11560:	mov	w5, w0
   11564:	mov	w0, w7
   11568:	bl	7e6c <PyNumber_FloorDivide@plt+0x321c>
   1156c:	ldp	x29, x30, [sp], #48
   11570:	ret
   11574:	stp	x29, x30, [sp, #-112]!
   11578:	mov	x29, sp
   1157c:	str	w0, [sp, #44]
   11580:	str	w1, [sp, #40]
   11584:	str	w2, [sp, #36]
   11588:	str	w3, [sp, #32]
   1158c:	str	w4, [sp, #28]
   11590:	str	w5, [sp, #24]
   11594:	str	w6, [sp, #20]
   11598:	ldr	w5, [sp, #24]
   1159c:	ldr	w4, [sp, #28]
   115a0:	ldr	w3, [sp, #32]
   115a4:	ldr	w2, [sp, #36]
   115a8:	ldr	w1, [sp, #40]
   115ac:	ldr	w0, [sp, #44]
   115b0:	bl	e53c <PyNumber_FloorDivide@plt+0x98ec>
   115b4:	str	x0, [sp, #88]
   115b8:	ldr	x0, [sp, #88]
   115bc:	bl	e618 <PyNumber_FloorDivide@plt+0x99c8>
   115c0:	str	x0, [sp, #80]
   115c4:	ldr	x0, [sp, #80]
   115c8:	cmn	x0, #0x1
   115cc:	b.ne	115d8 <PyNumber_FloorDivide@plt+0xc988>  // b.any
   115d0:	mov	x0, #0xffffffffffffffff    	// #-1
   115d4:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   115d8:	ldr	x1, [sp, #80]
   115dc:	ldr	x0, [sp, #88]
   115e0:	sub	x0, x1, x0
   115e4:	str	x0, [sp, #72]
   115e8:	ldr	x1, [sp, #88]
   115ec:	ldr	x0, [sp, #72]
   115f0:	sub	x0, x1, x0
   115f4:	str	x0, [sp, #64]
   115f8:	ldr	x0, [sp, #64]
   115fc:	bl	e618 <PyNumber_FloorDivide@plt+0x99c8>
   11600:	str	x0, [sp, #56]
   11604:	ldr	x0, [sp, #56]
   11608:	cmn	x0, #0x1
   1160c:	b.ne	11618 <PyNumber_FloorDivide@plt+0xc9c8>  // b.any
   11610:	mov	x0, #0xffffffffffffffff    	// #-1
   11614:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   11618:	ldr	x1, [sp, #56]
   1161c:	ldr	x0, [sp, #88]
   11620:	cmp	x1, x0
   11624:	b.ne	116b0 <PyNumber_FloorDivide@plt+0xca60>  // b.any
   11628:	ldr	w0, [sp, #20]
   1162c:	cmp	w0, #0x0
   11630:	b.eq	11650 <PyNumber_FloorDivide@plt+0xca00>  // b.none
   11634:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11638:	add	x0, x0, #0x2a0
   1163c:	ldr	x0, [x0]
   11640:	ldr	x1, [sp, #64]
   11644:	add	x0, x1, x0
   11648:	str	x0, [sp, #96]
   1164c:	b	11668 <PyNumber_FloorDivide@plt+0xca18>
   11650:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11654:	add	x0, x0, #0x2a0
   11658:	ldr	x0, [x0]
   1165c:	ldr	x1, [sp, #64]
   11660:	sub	x0, x1, x0
   11664:	str	x0, [sp, #96]
   11668:	ldr	x0, [sp, #96]
   1166c:	bl	e618 <PyNumber_FloorDivide@plt+0x99c8>
   11670:	str	x0, [sp, #80]
   11674:	ldr	x0, [sp, #80]
   11678:	cmn	x0, #0x1
   1167c:	b.ne	11688 <PyNumber_FloorDivide@plt+0xca38>  // b.any
   11680:	mov	x0, #0xffffffffffffffff    	// #-1
   11684:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   11688:	ldr	x1, [sp, #80]
   1168c:	ldr	x0, [sp, #96]
   11690:	sub	x0, x1, x0
   11694:	str	x0, [sp, #104]
   11698:	ldr	x1, [sp, #72]
   1169c:	ldr	x0, [sp, #104]
   116a0:	cmp	x1, x0
   116a4:	b.ne	116c0 <PyNumber_FloorDivide@plt+0xca70>  // b.any
   116a8:	ldr	x0, [sp, #64]
   116ac:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   116b0:	ldr	x1, [sp, #56]
   116b4:	ldr	x0, [sp, #64]
   116b8:	sub	x0, x1, x0
   116bc:	str	x0, [sp, #104]
   116c0:	ldr	x1, [sp, #88]
   116c4:	ldr	x0, [sp, #104]
   116c8:	sub	x0, x1, x0
   116cc:	str	x0, [sp, #96]
   116d0:	ldr	x0, [sp, #96]
   116d4:	bl	e618 <PyNumber_FloorDivide@plt+0x99c8>
   116d8:	str	x0, [sp, #48]
   116dc:	ldr	x0, [sp, #48]
   116e0:	cmn	x0, #0x1
   116e4:	b.ne	116f0 <PyNumber_FloorDivide@plt+0xcaa0>  // b.any
   116e8:	mov	x0, #0xffffffffffffffff    	// #-1
   116ec:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   116f0:	ldr	x1, [sp, #48]
   116f4:	ldr	x0, [sp, #88]
   116f8:	cmp	x1, x0
   116fc:	b.ne	11708 <PyNumber_FloorDivide@plt+0xcab8>  // b.any
   11700:	ldr	x0, [sp, #96]
   11704:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   11708:	ldr	x1, [sp, #56]
   1170c:	ldr	x0, [sp, #88]
   11710:	cmp	x1, x0
   11714:	b.ne	11720 <PyNumber_FloorDivide@plt+0xcad0>  // b.any
   11718:	ldr	x0, [sp, #64]
   1171c:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   11720:	ldr	w0, [sp, #20]
   11724:	cmp	w0, #0x0
   11728:	b.eq	11744 <PyNumber_FloorDivide@plt+0xcaf4>  // b.none
   1172c:	ldr	x0, [sp, #96]
   11730:	ldr	x2, [sp, #64]
   11734:	ldr	x1, [sp, #64]
   11738:	cmp	x2, x0
   1173c:	csel	x0, x1, x0, le
   11740:	b	11758 <PyNumber_FloorDivide@plt+0xcb08>
   11744:	ldr	x0, [sp, #64]
   11748:	ldr	x2, [sp, #96]
   1174c:	ldr	x1, [sp, #96]
   11750:	cmp	x2, x0
   11754:	csel	x0, x1, x0, ge  // ge = tcont
   11758:	ldp	x29, x30, [sp], #112
   1175c:	ret
   11760:	stp	x29, x30, [sp, #-64]!
   11764:	mov	x29, sp
   11768:	str	x0, [sp, #24]
   1176c:	str	x1, [sp, #16]
   11770:	ldr	x0, [sp, #24]
   11774:	ldrb	w0, [x0, #24]
   11778:	cmp	w0, #0x0
   1177c:	b.eq	117f0 <PyNumber_FloorDivide@plt+0xcba0>  // b.none
   11780:	ldr	x0, [sp, #24]
   11784:	ldr	x1, [x0, #40]
   11788:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   1178c:	ldr	x0, [x0, #4024]
   11790:	cmp	x1, x0
   11794:	b.eq	117f0 <PyNumber_FloorDivide@plt+0xcba0>  // b.none
   11798:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   1179c:	add	x0, x0, #0x38
   117a0:	ldr	x0, [x0]
   117a4:	mov	x1, x0
   117a8:	ldr	x0, [sp, #24]
   117ac:	bl	f70c <PyNumber_FloorDivide@plt+0xaabc>
   117b0:	str	x0, [sp, #48]
   117b4:	ldr	x0, [sp, #48]
   117b8:	cmp	x0, #0x0
   117bc:	b.ne	117c8 <PyNumber_FloorDivide@plt+0xcb78>  // b.any
   117c0:	mov	x0, #0x0                   	// #0
   117c4:	b	118d8 <PyNumber_FloorDivide@plt+0xcc88>
   117c8:	mov	x1, #0x0                   	// #0
   117cc:	ldr	x0, [sp, #48]
   117d0:	bl	a3b4 <PyNumber_FloorDivide@plt+0x5764>
   117d4:	str	x0, [sp, #56]
   117d8:	ldr	x2, [sp, #48]
   117dc:	mov	w1, #0x17a8                	// #6056
   117e0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   117e4:	add	x0, x0, #0xb30
   117e8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   117ec:	b	118d4 <PyNumber_FloorDivide@plt+0xcc84>
   117f0:	ldr	x0, [sp, #24]
   117f4:	ldrb	w0, [x0, #25]
   117f8:	lsl	w0, w0, #8
   117fc:	ldr	x1, [sp, #24]
   11800:	ldrb	w1, [x1, #26]
   11804:	orr	w7, w0, w1
   11808:	ldr	x0, [sp, #24]
   1180c:	ldrb	w0, [x0, #27]
   11810:	mov	w1, w0
   11814:	ldr	x0, [sp, #24]
   11818:	ldrb	w0, [x0, #28]
   1181c:	mov	w2, w0
   11820:	ldr	x0, [sp, #24]
   11824:	ldrb	w0, [x0, #29]
   11828:	mov	w3, w0
   1182c:	ldr	x0, [sp, #24]
   11830:	ldrb	w0, [x0, #30]
   11834:	mov	w4, w0
   11838:	ldr	x0, [sp, #24]
   1183c:	ldrb	w0, [x0, #31]
   11840:	mov	w5, w0
   11844:	ldr	x0, [sp, #24]
   11848:	ldrb	w0, [x0, #35]
   1184c:	mov	w6, w0
   11850:	mov	w0, w7
   11854:	bl	11574 <PyNumber_FloorDivide@plt+0xc924>
   11858:	str	x0, [sp, #40]
   1185c:	ldr	x0, [sp, #40]
   11860:	cmn	x0, #0x1
   11864:	b.ne	11870 <PyNumber_FloorDivide@plt+0xcc20>  // b.any
   11868:	mov	x0, #0x0                   	// #0
   1186c:	b	118d8 <PyNumber_FloorDivide@plt+0xcc88>
   11870:	ldr	x1, [sp, #40]
   11874:	mov	x0, #0xffffffffffffb780    	// #-18560
   11878:	movk	x0, #0x886c, lsl #16
   1187c:	movk	x0, #0xfff1, lsl #32
   11880:	add	x0, x1, x0
   11884:	fmov	d0, x0
   11888:	scvtf	d1, d0
   1188c:	ldr	x0, [sp, #24]
   11890:	ldrb	w0, [x0, #32]
   11894:	lsl	w1, w0, #16
   11898:	ldr	x0, [sp, #24]
   1189c:	ldrb	w0, [x0, #33]
   118a0:	lsl	w0, w0, #8
   118a4:	orr	w0, w1, w0
   118a8:	ldr	x1, [sp, #24]
   118ac:	ldrb	w1, [x1, #34]
   118b0:	orr	w0, w0, w1
   118b4:	scvtf	d0, w0
   118b8:	mov	x0, #0x848000000000        	// #145685290680320
   118bc:	movk	x0, #0x412e, lsl #48
   118c0:	fmov	d2, x0
   118c4:	fdiv	d0, d0, d2
   118c8:	fadd	d0, d1, d0
   118cc:	bl	4920 <PyFloat_FromDouble@plt>
   118d0:	str	x0, [sp, #56]
   118d4:	ldr	x0, [sp, #56]
   118d8:	ldp	x29, x30, [sp], #64
   118dc:	ret
   118e0:	stp	x29, x30, [sp, #-32]!
   118e4:	mov	x29, sp
   118e8:	str	x0, [sp, #24]
   118ec:	str	x1, [sp, #16]
   118f0:	ldr	x0, [sp, #24]
   118f4:	ldrb	w0, [x0, #25]
   118f8:	lsl	w0, w0, #8
   118fc:	ldr	x1, [sp, #24]
   11900:	ldrb	w1, [x1, #26]
   11904:	orr	w4, w0, w1
   11908:	ldr	x0, [sp, #24]
   1190c:	ldrb	w0, [x0, #27]
   11910:	mov	w1, w0
   11914:	ldr	x0, [sp, #24]
   11918:	ldrb	w0, [x0, #28]
   1191c:	mov	w2, w0
   11920:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11924:	add	x3, x0, #0x2b0
   11928:	mov	w0, w4
   1192c:	bl	6570 <PyNumber_FloorDivide@plt+0x1920>
   11930:	ldp	x29, x30, [sp], #32
   11934:	ret
   11938:	stp	x29, x30, [sp, #-32]!
   1193c:	mov	x29, sp
   11940:	str	x0, [sp, #24]
   11944:	str	x1, [sp, #16]
   11948:	ldr	x0, [sp, #24]
   1194c:	ldrb	w0, [x0, #29]
   11950:	mov	w7, w0
   11954:	ldr	x0, [sp, #24]
   11958:	ldrb	w0, [x0, #30]
   1195c:	mov	w8, w0
   11960:	ldr	x0, [sp, #24]
   11964:	ldrb	w0, [x0, #31]
   11968:	mov	w2, w0
   1196c:	ldr	x0, [sp, #24]
   11970:	ldrb	w0, [x0, #32]
   11974:	lsl	w1, w0, #16
   11978:	ldr	x0, [sp, #24]
   1197c:	ldrb	w0, [x0, #33]
   11980:	lsl	w0, w0, #8
   11984:	orr	w0, w1, w0
   11988:	ldr	x1, [sp, #24]
   1198c:	ldrb	w1, [x1, #34]
   11990:	orr	w1, w0, w1
   11994:	ldr	x0, [sp, #24]
   11998:	ldrb	w0, [x0, #35]
   1199c:	mov	w3, w0
   119a0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   119a4:	add	x6, x0, #0x790
   119a8:	mov	w5, w3
   119ac:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   119b0:	ldr	x4, [x0, #4024]
   119b4:	mov	w3, w1
   119b8:	mov	w1, w8
   119bc:	mov	w0, w7
   119c0:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
   119c4:	ldp	x29, x30, [sp], #32
   119c8:	ret
   119cc:	stp	x29, x30, [sp, #-32]!
   119d0:	mov	x29, sp
   119d4:	str	x0, [sp, #24]
   119d8:	str	x1, [sp, #16]
   119dc:	ldr	x0, [sp, #24]
   119e0:	ldrb	w0, [x0, #29]
   119e4:	mov	w7, w0
   119e8:	ldr	x0, [sp, #24]
   119ec:	ldrb	w0, [x0, #30]
   119f0:	mov	w8, w0
   119f4:	ldr	x0, [sp, #24]
   119f8:	ldrb	w0, [x0, #31]
   119fc:	mov	w9, w0
   11a00:	ldr	x0, [sp, #24]
   11a04:	ldrb	w0, [x0, #32]
   11a08:	lsl	w1, w0, #16
   11a0c:	ldr	x0, [sp, #24]
   11a10:	ldrb	w0, [x0, #33]
   11a14:	lsl	w0, w0, #8
   11a18:	orr	w0, w1, w0
   11a1c:	ldr	x1, [sp, #24]
   11a20:	ldrb	w1, [x1, #34]
   11a24:	orr	w2, w0, w1
   11a28:	ldr	x0, [sp, #24]
   11a2c:	ldrb	w0, [x0, #24]
   11a30:	cmp	w0, #0x0
   11a34:	b.eq	11a44 <PyNumber_FloorDivide@plt+0xcdf4>  // b.none
   11a38:	ldr	x0, [sp, #24]
   11a3c:	ldr	x0, [x0, #40]
   11a40:	b	11a4c <PyNumber_FloorDivide@plt+0xcdfc>
   11a44:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   11a48:	ldr	x0, [x0, #4024]
   11a4c:	ldr	x1, [sp, #24]
   11a50:	ldrb	w1, [x1, #35]
   11a54:	mov	w3, w1
   11a58:	adrp	x1, 28000 <PyInit__datetime@@Base+0x16250>
   11a5c:	add	x6, x1, #0x790
   11a60:	mov	w5, w3
   11a64:	mov	x4, x0
   11a68:	mov	w3, w2
   11a6c:	mov	w2, w9
   11a70:	mov	w1, w8
   11a74:	mov	w0, w7
   11a78:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
   11a7c:	ldp	x29, x30, [sp], #32
   11a80:	ret
   11a84:	stp	x29, x30, [sp, #-80]!
   11a88:	mov	x29, sp
   11a8c:	str	x0, [sp, #24]
   11a90:	str	x1, [sp, #16]
   11a94:	ldr	x0, [sp, #24]
   11a98:	ldrb	w0, [x0, #24]
   11a9c:	cmp	w0, #0x0
   11aa0:	b.eq	11ab0 <PyNumber_FloorDivide@plt+0xce60>  // b.none
   11aa4:	ldr	x0, [sp, #24]
   11aa8:	ldr	x0, [x0, #40]
   11aac:	b	11ab8 <PyNumber_FloorDivide@plt+0xce68>
   11ab0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   11ab4:	ldr	x0, [x0, #4024]
   11ab8:	str	x0, [sp, #64]
   11abc:	ldr	x1, [sp, #64]
   11ac0:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   11ac4:	ldr	x0, [x0, #4024]
   11ac8:	cmp	x1, x0
   11acc:	b.ne	11ae4 <PyNumber_FloorDivide@plt+0xce94>  // b.any
   11ad0:	ldr	x0, [sp, #24]
   11ad4:	str	x0, [sp, #72]
   11ad8:	ldr	x0, [sp, #72]
   11adc:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   11ae0:	b	11b80 <PyNumber_FloorDivide@plt+0xcf30>
   11ae4:	ldr	x1, [sp, #24]
   11ae8:	ldr	x0, [sp, #64]
   11aec:	bl	7090 <PyNumber_FloorDivide@plt+0x2440>
   11af0:	str	x0, [sp, #56]
   11af4:	ldr	x0, [sp, #56]
   11af8:	cmp	x0, #0x0
   11afc:	b.ne	11b08 <PyNumber_FloorDivide@plt+0xceb8>  // b.any
   11b00:	mov	x0, #0x0                   	// #0
   11b04:	b	11c0c <PyNumber_FloorDivide@plt+0xcfbc>
   11b08:	ldr	x1, [sp, #56]
   11b0c:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   11b10:	ldr	x0, [x0, #4024]
   11b14:	cmp	x1, x0
   11b18:	b.ne	11b44 <PyNumber_FloorDivide@plt+0xcef4>  // b.any
   11b1c:	ldr	x2, [sp, #56]
   11b20:	mov	w1, #0x17eb                	// #6123
   11b24:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11b28:	add	x0, x0, #0xb30
   11b2c:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11b30:	ldr	x0, [sp, #24]
   11b34:	str	x0, [sp, #72]
   11b38:	ldr	x0, [sp, #72]
   11b3c:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   11b40:	b	11b80 <PyNumber_FloorDivide@plt+0xcf30>
   11b44:	mov	w2, #0xffffffff            	// #-1
   11b48:	ldr	x1, [sp, #56]
   11b4c:	ldr	x0, [sp, #24]
   11b50:	bl	f494 <PyNumber_FloorDivide@plt+0xa844>
   11b54:	str	x0, [sp, #72]
   11b58:	ldr	x2, [sp, #56]
   11b5c:	mov	w1, #0x17f2                	// #6130
   11b60:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11b64:	add	x0, x0, #0xb30
   11b68:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11b6c:	ldr	x0, [sp, #72]
   11b70:	cmp	x0, #0x0
   11b74:	b.ne	11b80 <PyNumber_FloorDivide@plt+0xcf30>  // b.any
   11b78:	mov	x0, #0x0                   	// #0
   11b7c:	b	11c0c <PyNumber_FloorDivide@plt+0xcfbc>
   11b80:	ldr	x0, [sp, #72]
   11b84:	ldrb	w0, [x0, #25]
   11b88:	lsl	w0, w0, #8
   11b8c:	ldr	x1, [sp, #72]
   11b90:	ldrb	w1, [x1, #26]
   11b94:	orr	w0, w0, w1
   11b98:	str	w0, [sp, #52]
   11b9c:	ldr	x0, [sp, #72]
   11ba0:	ldrb	w0, [x0, #27]
   11ba4:	str	w0, [sp, #48]
   11ba8:	ldr	x0, [sp, #72]
   11bac:	ldrb	w0, [x0, #28]
   11bb0:	str	w0, [sp, #44]
   11bb4:	ldr	x0, [sp, #72]
   11bb8:	ldrb	w0, [x0, #29]
   11bbc:	str	w0, [sp, #40]
   11bc0:	ldr	x0, [sp, #72]
   11bc4:	ldrb	w0, [x0, #30]
   11bc8:	str	w0, [sp, #36]
   11bcc:	ldr	x0, [sp, #72]
   11bd0:	ldrb	w0, [x0, #31]
   11bd4:	str	w0, [sp, #32]
   11bd8:	ldr	x2, [sp, #72]
   11bdc:	mov	w1, #0x17fe                	// #6142
   11be0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11be4:	add	x0, x0, #0xb30
   11be8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11bec:	mov	w6, #0x0                   	// #0
   11bf0:	ldr	w5, [sp, #32]
   11bf4:	ldr	w4, [sp, #36]
   11bf8:	ldr	w3, [sp, #40]
   11bfc:	ldr	w2, [sp, #44]
   11c00:	ldr	w1, [sp, #48]
   11c04:	ldr	w0, [sp, #52]
   11c08:	bl	7e6c <PyNumber_FloorDivide@plt+0x321c>
   11c0c:	ldp	x29, x30, [sp], #80
   11c10:	ret
   11c14:	stp	x29, x30, [sp, #-48]!
   11c18:	mov	x29, sp
   11c1c:	str	x0, [sp, #24]
   11c20:	str	w1, [sp, #20]
   11c24:	str	xzr, [sp, #40]
   11c28:	ldr	x0, [sp, #24]
   11c2c:	add	x0, x0, #0x19
   11c30:	mov	x1, #0xa                   	// #10
   11c34:	bl	4840 <PyBytes_FromStringAndSize@plt>
   11c38:	str	x0, [sp, #32]
   11c3c:	ldr	x0, [sp, #32]
   11c40:	cmp	x0, #0x0
   11c44:	b.eq	11ce8 <PyNumber_FloorDivide@plt+0xd098>  // b.none
   11c48:	ldr	w0, [sp, #20]
   11c4c:	cmp	w0, #0x3
   11c50:	b.le	11c7c <PyNumber_FloorDivide@plt+0xd02c>
   11c54:	ldr	x0, [sp, #24]
   11c58:	ldrb	w0, [x0, #35]
   11c5c:	cmp	w0, #0x0
   11c60:	b.eq	11c7c <PyNumber_FloorDivide@plt+0xd02c>  // b.none
   11c64:	ldr	x0, [sp, #32]
   11c68:	ldrb	w0, [x0, #34]
   11c6c:	orr	w0, w0, #0xffffff80
   11c70:	and	w1, w0, #0xff
   11c74:	ldr	x0, [sp, #32]
   11c78:	strb	w1, [x0, #34]
   11c7c:	ldr	x0, [sp, #24]
   11c80:	ldrb	w0, [x0, #24]
   11c84:	cmp	w0, #0x0
   11c88:	b.eq	11ca4 <PyNumber_FloorDivide@plt+0xd054>  // b.none
   11c8c:	ldr	x0, [sp, #24]
   11c90:	ldr	x1, [x0, #40]
   11c94:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   11c98:	ldr	x0, [x0, #4024]
   11c9c:	cmp	x1, x0
   11ca0:	b.ne	11cb8 <PyNumber_FloorDivide@plt+0xd068>  // b.any
   11ca4:	ldr	x1, [sp, #32]
   11ca8:	mov	x0, #0x1                   	// #1
   11cac:	bl	4c20 <PyTuple_Pack@plt>
   11cb0:	str	x0, [sp, #40]
   11cb4:	b	11cd4 <PyNumber_FloorDivide@plt+0xd084>
   11cb8:	ldr	x0, [sp, #24]
   11cbc:	ldr	x0, [x0, #40]
   11cc0:	mov	x2, x0
   11cc4:	ldr	x1, [sp, #32]
   11cc8:	mov	x0, #0x2                   	// #2
   11ccc:	bl	4c20 <PyTuple_Pack@plt>
   11cd0:	str	x0, [sp, #40]
   11cd4:	ldr	x2, [sp, #32]
   11cd8:	mov	w1, #0x1819                	// #6169
   11cdc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11ce0:	add	x0, x0, #0xb30
   11ce4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11ce8:	ldr	x0, [sp, #40]
   11cec:	ldp	x29, x30, [sp], #48
   11cf0:	ret
   11cf4:	stp	x29, x30, [sp, #-64]!
   11cf8:	mov	x29, sp
   11cfc:	str	x19, [sp, #16]
   11d00:	str	x0, [sp, #40]
   11d04:	str	x1, [sp, #32]
   11d08:	add	x0, sp, #0x3c
   11d0c:	mov	x2, x0
   11d10:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
   11d14:	add	x1, x0, #0xfc8
   11d18:	ldr	x0, [sp, #32]
   11d1c:	bl	4a70 <PyArg_ParseTuple@plt>
   11d20:	cmp	w0, #0x0
   11d24:	b.ne	11d30 <PyNumber_FloorDivide@plt+0xd0e0>  // b.any
   11d28:	mov	x0, #0x0                   	// #0
   11d2c:	b	11d5c <PyNumber_FloorDivide@plt+0xd10c>
   11d30:	ldr	x0, [sp, #40]
   11d34:	ldr	x19, [x0, #8]
   11d38:	ldr	w0, [sp, #60]
   11d3c:	mov	w1, w0
   11d40:	ldr	x0, [sp, #40]
   11d44:	bl	11c14 <PyNumber_FloorDivide@plt+0xcfc4>
   11d48:	mov	x2, x0
   11d4c:	mov	x1, x19
   11d50:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
   11d54:	add	x0, x0, #0x5e8
   11d58:	bl	49e0 <Py_BuildValue@plt>
   11d5c:	ldr	x19, [sp, #16]
   11d60:	ldp	x29, x30, [sp], #64
   11d64:	ret
   11d68:	stp	x29, x30, [sp, #-48]!
   11d6c:	mov	x29, sp
   11d70:	str	x19, [sp, #16]
   11d74:	str	x0, [sp, #40]
   11d78:	str	x1, [sp, #32]
   11d7c:	ldr	x0, [sp, #40]
   11d80:	ldr	x19, [x0, #8]
   11d84:	mov	w1, #0x2                   	// #2
   11d88:	ldr	x0, [sp, #40]
   11d8c:	bl	11c14 <PyNumber_FloorDivide@plt+0xcfc4>
   11d90:	mov	x2, x0
   11d94:	mov	x1, x19
   11d98:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
   11d9c:	add	x0, x0, #0x5e8
   11da0:	bl	49e0 <Py_BuildValue@plt>
   11da4:	ldr	x19, [sp, #16]
   11da8:	ldp	x29, x30, [sp], #48
   11dac:	ret

0000000000011db0 <PyInit__datetime@@Base>:
   11db0:	sub	sp, sp, #0x40
   11db4:	stp	x29, x30, [sp, #16]
   11db8:	add	x29, sp, #0x10
   11dbc:	mov	w1, #0x3f5                 	// #1013
   11dc0:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
   11dc4:	add	x0, x0, #0xd18
   11dc8:	bl	4a00 <PyModule_Create2@plt>
   11dcc:	str	x0, [sp, #56]
   11dd0:	ldr	x0, [sp, #56]
   11dd4:	cmp	x0, #0x0
   11dd8:	b.ne	11de4 <PyInit__datetime@@Base+0x34>  // b.any
   11ddc:	mov	x0, #0x0                   	// #0
   11de0:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11de4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11de8:	add	x0, x0, #0x2b0
   11dec:	bl	4930 <PyType_Ready@plt>
   11df0:	cmp	w0, #0x0
   11df4:	b.ge	11e00 <PyInit__datetime@@Base+0x50>  // b.tcont
   11df8:	mov	x0, #0x0                   	// #0
   11dfc:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11e00:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11e04:	add	x0, x0, #0x450
   11e08:	bl	4930 <PyType_Ready@plt>
   11e0c:	cmp	w0, #0x0
   11e10:	b.ge	11e1c <PyInit__datetime@@Base+0x6c>  // b.tcont
   11e14:	mov	x0, #0x0                   	// #0
   11e18:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11e1c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11e20:	add	x0, x0, #0x5f0
   11e24:	bl	4930 <PyType_Ready@plt>
   11e28:	cmp	w0, #0x0
   11e2c:	b.ge	11e38 <PyInit__datetime@@Base+0x88>  // b.tcont
   11e30:	mov	x0, #0x0                   	// #0
   11e34:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11e38:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11e3c:	add	x0, x0, #0x790
   11e40:	bl	4930 <PyType_Ready@plt>
   11e44:	cmp	w0, #0x0
   11e48:	b.ge	11e54 <PyInit__datetime@@Base+0xa4>  // b.tcont
   11e4c:	mov	x0, #0x0                   	// #0
   11e50:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11e54:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11e58:	add	x0, x0, #0x930
   11e5c:	bl	4930 <PyType_Ready@plt>
   11e60:	cmp	w0, #0x0
   11e64:	b.ge	11e70 <PyInit__datetime@@Base+0xc0>  // b.tcont
   11e68:	mov	x0, #0x0                   	// #0
   11e6c:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11e70:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11e74:	add	x0, x0, #0xad0
   11e78:	bl	4930 <PyType_Ready@plt>
   11e7c:	cmp	w0, #0x0
   11e80:	b.ge	11e8c <PyInit__datetime@@Base+0xdc>  // b.tcont
   11e84:	mov	x0, #0x0                   	// #0
   11e88:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11e8c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11e90:	add	x0, x0, #0x5f0
   11e94:	ldr	x0, [x0, #264]
   11e98:	str	x0, [sp, #48]
   11e9c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11ea0:	add	x4, x0, #0x5f0
   11ea4:	mov	w3, #0x0                   	// #0
   11ea8:	mov	w2, #0x1                   	// #1
   11eac:	mov	w1, #0x0                   	// #0
   11eb0:	mov	w0, #0x0                   	// #0
   11eb4:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   11eb8:	str	x0, [sp, #40]
   11ebc:	ldr	x0, [sp, #40]
   11ec0:	cmp	x0, #0x0
   11ec4:	b.eq	11ee4 <PyInit__datetime@@Base+0x134>  // b.none
   11ec8:	ldr	x2, [sp, #40]
   11ecc:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   11ed0:	add	x1, x0, #0xa48
   11ed4:	ldr	x0, [sp, #48]
   11ed8:	bl	4760 <PyDict_SetItemString@plt>
   11edc:	cmp	w0, #0x0
   11ee0:	b.ge	11eec <PyInit__datetime@@Base+0x13c>  // b.tcont
   11ee4:	mov	x0, #0x0                   	// #0
   11ee8:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11eec:	ldr	x2, [sp, #40]
   11ef0:	mov	w1, #0x190c                	// #6412
   11ef4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11ef8:	add	x0, x0, #0xb30
   11efc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11f00:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11f04:	add	x4, x0, #0x5f0
   11f08:	mov	w3, #0x0                   	// #0
   11f0c:	mov	w2, #0x0                   	// #0
   11f10:	mov	w1, #0x0                   	// #0
   11f14:	mov	w0, #0x3601                	// #13825
   11f18:	movk	w0, #0xc465, lsl #16
   11f1c:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   11f20:	str	x0, [sp, #40]
   11f24:	ldr	x0, [sp, #40]
   11f28:	cmp	x0, #0x0
   11f2c:	b.eq	11f4c <PyInit__datetime@@Base+0x19c>  // b.none
   11f30:	ldr	x2, [sp, #40]
   11f34:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   11f38:	add	x1, x0, #0xa58
   11f3c:	ldr	x0, [sp, #48]
   11f40:	bl	4760 <PyDict_SetItemString@plt>
   11f44:	cmp	w0, #0x0
   11f48:	b.ge	11f54 <PyInit__datetime@@Base+0x1a4>  // b.tcont
   11f4c:	mov	x0, #0x0                   	// #0
   11f50:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11f54:	ldr	x2, [sp, #40]
   11f58:	mov	w1, #0x1911                	// #6417
   11f5c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11f60:	add	x0, x0, #0xb30
   11f64:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11f68:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11f6c:	add	x4, x0, #0x5f0
   11f70:	mov	w3, #0x0                   	// #0
   11f74:	mov	w2, #0x423f                	// #16959
   11f78:	movk	w2, #0xf, lsl #16
   11f7c:	mov	w1, #0x517f                	// #20863
   11f80:	movk	w1, #0x1, lsl #16
   11f84:	mov	w0, #0xc9ff                	// #51711
   11f88:	movk	w0, #0x3b9a, lsl #16
   11f8c:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   11f90:	str	x0, [sp, #40]
   11f94:	ldr	x0, [sp, #40]
   11f98:	cmp	x0, #0x0
   11f9c:	b.eq	11fbc <PyInit__datetime@@Base+0x20c>  // b.none
   11fa0:	ldr	x2, [sp, #40]
   11fa4:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   11fa8:	add	x1, x0, #0xa60
   11fac:	ldr	x0, [sp, #48]
   11fb0:	bl	4760 <PyDict_SetItemString@plt>
   11fb4:	cmp	w0, #0x0
   11fb8:	b.ge	11fc4 <PyInit__datetime@@Base+0x214>  // b.tcont
   11fbc:	mov	x0, #0x0                   	// #0
   11fc0:	b	128e8 <PyInit__datetime@@Base+0xb38>
   11fc4:	ldr	x2, [sp, #40]
   11fc8:	mov	w1, #0x1916                	// #6422
   11fcc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   11fd0:	add	x0, x0, #0xb30
   11fd4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   11fd8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11fdc:	add	x0, x0, #0x2b0
   11fe0:	ldr	x0, [x0, #264]
   11fe4:	str	x0, [sp, #48]
   11fe8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   11fec:	add	x3, x0, #0x2b0
   11ff0:	mov	w2, #0x1                   	// #1
   11ff4:	mov	w1, #0x1                   	// #1
   11ff8:	mov	w0, #0x1                   	// #1
   11ffc:	bl	6570 <PyNumber_FloorDivide@plt+0x1920>
   12000:	str	x0, [sp, #40]
   12004:	ldr	x0, [sp, #40]
   12008:	cmp	x0, #0x0
   1200c:	b.eq	1202c <PyInit__datetime@@Base+0x27c>  // b.none
   12010:	ldr	x2, [sp, #40]
   12014:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12018:	add	x1, x0, #0xa58
   1201c:	ldr	x0, [sp, #48]
   12020:	bl	4760 <PyDict_SetItemString@plt>
   12024:	cmp	w0, #0x0
   12028:	b.ge	12034 <PyInit__datetime@@Base+0x284>  // b.tcont
   1202c:	mov	x0, #0x0                   	// #0
   12030:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12034:	ldr	x2, [sp, #40]
   12038:	mov	w1, #0x191e                	// #6430
   1203c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   12040:	add	x0, x0, #0xb30
   12044:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   12048:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1204c:	add	x3, x0, #0x2b0
   12050:	mov	w2, #0x1f                  	// #31
   12054:	mov	w1, #0xc                   	// #12
   12058:	mov	w0, #0x270f                	// #9999
   1205c:	bl	6570 <PyNumber_FloorDivide@plt+0x1920>
   12060:	str	x0, [sp, #40]
   12064:	ldr	x0, [sp, #40]
   12068:	cmp	x0, #0x0
   1206c:	b.eq	1208c <PyInit__datetime@@Base+0x2dc>  // b.none
   12070:	ldr	x2, [sp, #40]
   12074:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12078:	add	x1, x0, #0xa60
   1207c:	ldr	x0, [sp, #48]
   12080:	bl	4760 <PyDict_SetItemString@plt>
   12084:	cmp	w0, #0x0
   12088:	b.ge	12094 <PyInit__datetime@@Base+0x2e4>  // b.tcont
   1208c:	mov	x0, #0x0                   	// #0
   12090:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12094:	ldr	x2, [sp, #40]
   12098:	mov	w1, #0x1923                	// #6435
   1209c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   120a0:	add	x0, x0, #0xb30
   120a4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   120a8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   120ac:	add	x4, x0, #0x5f0
   120b0:	mov	w3, #0x0                   	// #0
   120b4:	mov	w2, #0x0                   	// #0
   120b8:	mov	w1, #0x0                   	// #0
   120bc:	mov	w0, #0x1                   	// #1
   120c0:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   120c4:	str	x0, [sp, #40]
   120c8:	ldr	x0, [sp, #40]
   120cc:	cmp	x0, #0x0
   120d0:	b.eq	120f0 <PyInit__datetime@@Base+0x340>  // b.none
   120d4:	ldr	x2, [sp, #40]
   120d8:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   120dc:	add	x1, x0, #0xa48
   120e0:	ldr	x0, [sp, #48]
   120e4:	bl	4760 <PyDict_SetItemString@plt>
   120e8:	cmp	w0, #0x0
   120ec:	b.ge	120f8 <PyInit__datetime@@Base+0x348>  // b.tcont
   120f0:	mov	x0, #0x0                   	// #0
   120f4:	b	128e8 <PyInit__datetime@@Base+0xb38>
   120f8:	ldr	x2, [sp, #40]
   120fc:	mov	w1, #0x1928                	// #6440
   12100:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   12104:	add	x0, x0, #0xb30
   12108:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   1210c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12110:	add	x0, x0, #0x790
   12114:	ldr	x0, [x0, #264]
   12118:	str	x0, [sp, #48]
   1211c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12120:	add	x6, x0, #0x790
   12124:	mov	w5, #0x0                   	// #0
   12128:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   1212c:	ldr	x4, [x0, #4024]
   12130:	mov	w3, #0x0                   	// #0
   12134:	mov	w2, #0x0                   	// #0
   12138:	mov	w1, #0x0                   	// #0
   1213c:	mov	w0, #0x0                   	// #0
   12140:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
   12144:	str	x0, [sp, #40]
   12148:	ldr	x0, [sp, #40]
   1214c:	cmp	x0, #0x0
   12150:	b.eq	12170 <PyInit__datetime@@Base+0x3c0>  // b.none
   12154:	ldr	x2, [sp, #40]
   12158:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   1215c:	add	x1, x0, #0xa58
   12160:	ldr	x0, [sp, #48]
   12164:	bl	4760 <PyDict_SetItemString@plt>
   12168:	cmp	w0, #0x0
   1216c:	b.ge	12178 <PyInit__datetime@@Base+0x3c8>  // b.tcont
   12170:	mov	x0, #0x0                   	// #0
   12174:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12178:	ldr	x2, [sp, #40]
   1217c:	mov	w1, #0x1930                	// #6448
   12180:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   12184:	add	x0, x0, #0xb30
   12188:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   1218c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12190:	add	x6, x0, #0x790
   12194:	mov	w5, #0x0                   	// #0
   12198:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   1219c:	ldr	x4, [x0, #4024]
   121a0:	mov	w3, #0x423f                	// #16959
   121a4:	movk	w3, #0xf, lsl #16
   121a8:	mov	w2, #0x3b                  	// #59
   121ac:	mov	w1, #0x3b                  	// #59
   121b0:	mov	w0, #0x17                  	// #23
   121b4:	bl	69e0 <PyNumber_FloorDivide@plt+0x1d90>
   121b8:	str	x0, [sp, #40]
   121bc:	ldr	x0, [sp, #40]
   121c0:	cmp	x0, #0x0
   121c4:	b.eq	121e4 <PyInit__datetime@@Base+0x434>  // b.none
   121c8:	ldr	x2, [sp, #40]
   121cc:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   121d0:	add	x1, x0, #0xa60
   121d4:	ldr	x0, [sp, #48]
   121d8:	bl	4760 <PyDict_SetItemString@plt>
   121dc:	cmp	w0, #0x0
   121e0:	b.ge	121ec <PyInit__datetime@@Base+0x43c>  // b.tcont
   121e4:	mov	x0, #0x0                   	// #0
   121e8:	b	128e8 <PyInit__datetime@@Base+0xb38>
   121ec:	ldr	x2, [sp, #40]
   121f0:	mov	w1, #0x1935                	// #6453
   121f4:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   121f8:	add	x0, x0, #0xb30
   121fc:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   12200:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12204:	add	x4, x0, #0x5f0
   12208:	mov	w3, #0x0                   	// #0
   1220c:	mov	w2, #0x1                   	// #1
   12210:	mov	w1, #0x0                   	// #0
   12214:	mov	w0, #0x0                   	// #0
   12218:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   1221c:	str	x0, [sp, #40]
   12220:	ldr	x0, [sp, #40]
   12224:	cmp	x0, #0x0
   12228:	b.eq	12248 <PyInit__datetime@@Base+0x498>  // b.none
   1222c:	ldr	x2, [sp, #40]
   12230:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12234:	add	x1, x0, #0xa48
   12238:	ldr	x0, [sp, #48]
   1223c:	bl	4760 <PyDict_SetItemString@plt>
   12240:	cmp	w0, #0x0
   12244:	b.ge	12250 <PyInit__datetime@@Base+0x4a0>  // b.tcont
   12248:	mov	x0, #0x0                   	// #0
   1224c:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12250:	ldr	x2, [sp, #40]
   12254:	mov	w1, #0x193a                	// #6458
   12258:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1225c:	add	x0, x0, #0xb30
   12260:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   12264:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12268:	add	x0, x0, #0x450
   1226c:	ldr	x0, [x0, #264]
   12270:	str	x0, [sp, #48]
   12274:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12278:	add	x0, x0, #0x450
   1227c:	str	x0, [sp, #8]
   12280:	str	wzr, [sp]
   12284:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   12288:	ldr	x7, [x0, #4024]
   1228c:	mov	w6, #0x0                   	// #0
   12290:	mov	w5, #0x0                   	// #0
   12294:	mov	w4, #0x0                   	// #0
   12298:	mov	w3, #0x0                   	// #0
   1229c:	mov	w2, #0x1                   	// #1
   122a0:	mov	w1, #0x1                   	// #1
   122a4:	mov	w0, #0x1                   	// #1
   122a8:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
   122ac:	str	x0, [sp, #40]
   122b0:	ldr	x0, [sp, #40]
   122b4:	cmp	x0, #0x0
   122b8:	b.eq	122d8 <PyInit__datetime@@Base+0x528>  // b.none
   122bc:	ldr	x2, [sp, #40]
   122c0:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   122c4:	add	x1, x0, #0xa58
   122c8:	ldr	x0, [sp, #48]
   122cc:	bl	4760 <PyDict_SetItemString@plt>
   122d0:	cmp	w0, #0x0
   122d4:	b.ge	122e0 <PyInit__datetime@@Base+0x530>  // b.tcont
   122d8:	mov	x0, #0x0                   	// #0
   122dc:	b	128e8 <PyInit__datetime@@Base+0xb38>
   122e0:	ldr	x2, [sp, #40]
   122e4:	mov	w1, #0x1942                	// #6466
   122e8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   122ec:	add	x0, x0, #0xb30
   122f0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   122f4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   122f8:	add	x0, x0, #0x450
   122fc:	str	x0, [sp, #8]
   12300:	str	wzr, [sp]
   12304:	adrp	x0, 27000 <PyInit__datetime@@Base+0x15250>
   12308:	ldr	x7, [x0, #4024]
   1230c:	mov	w6, #0x423f                	// #16959
   12310:	movk	w6, #0xf, lsl #16
   12314:	mov	w5, #0x3b                  	// #59
   12318:	mov	w4, #0x3b                  	// #59
   1231c:	mov	w3, #0x17                  	// #23
   12320:	mov	w2, #0x1f                  	// #31
   12324:	mov	w1, #0xc                   	// #12
   12328:	mov	w0, #0x270f                	// #9999
   1232c:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
   12330:	str	x0, [sp, #40]
   12334:	ldr	x0, [sp, #40]
   12338:	cmp	x0, #0x0
   1233c:	b.eq	1235c <PyInit__datetime@@Base+0x5ac>  // b.none
   12340:	ldr	x2, [sp, #40]
   12344:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12348:	add	x1, x0, #0xa60
   1234c:	ldr	x0, [sp, #48]
   12350:	bl	4760 <PyDict_SetItemString@plt>
   12354:	cmp	w0, #0x0
   12358:	b.ge	12364 <PyInit__datetime@@Base+0x5b4>  // b.tcont
   1235c:	mov	x0, #0x0                   	// #0
   12360:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12364:	ldr	x2, [sp, #40]
   12368:	mov	w1, #0x1947                	// #6471
   1236c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   12370:	add	x0, x0, #0xb30
   12374:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   12378:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1237c:	add	x4, x0, #0x5f0
   12380:	mov	w3, #0x0                   	// #0
   12384:	mov	w2, #0x1                   	// #1
   12388:	mov	w1, #0x0                   	// #0
   1238c:	mov	w0, #0x0                   	// #0
   12390:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   12394:	str	x0, [sp, #40]
   12398:	ldr	x0, [sp, #40]
   1239c:	cmp	x0, #0x0
   123a0:	b.eq	123c0 <PyInit__datetime@@Base+0x610>  // b.none
   123a4:	ldr	x2, [sp, #40]
   123a8:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   123ac:	add	x1, x0, #0xa48
   123b0:	ldr	x0, [sp, #48]
   123b4:	bl	4760 <PyDict_SetItemString@plt>
   123b8:	cmp	w0, #0x0
   123bc:	b.ge	123c8 <PyInit__datetime@@Base+0x618>  // b.tcont
   123c0:	mov	x0, #0x0                   	// #0
   123c4:	b	128e8 <PyInit__datetime@@Base+0xb38>
   123c8:	ldr	x2, [sp, #40]
   123cc:	mov	w1, #0x194c                	// #6476
   123d0:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   123d4:	add	x0, x0, #0xb30
   123d8:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   123dc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   123e0:	add	x0, x0, #0xad0
   123e4:	ldr	x0, [x0, #264]
   123e8:	str	x0, [sp, #48]
   123ec:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   123f0:	add	x4, x0, #0x5f0
   123f4:	mov	w3, #0x0                   	// #0
   123f8:	mov	w2, #0x0                   	// #0
   123fc:	mov	w1, #0x0                   	// #0
   12400:	mov	w0, #0x0                   	// #0
   12404:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   12408:	str	x0, [sp, #32]
   1240c:	ldr	x0, [sp, #32]
   12410:	cmp	x0, #0x0
   12414:	b.ne	12420 <PyInit__datetime@@Base+0x670>  // b.any
   12418:	mov	x0, #0x0                   	// #0
   1241c:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12420:	mov	x1, #0x0                   	// #0
   12424:	ldr	x0, [sp, #32]
   12428:	bl	6c3c <PyNumber_FloorDivide@plt+0x1fec>
   1242c:	str	x0, [sp, #40]
   12430:	ldr	x2, [sp, #32]
   12434:	mov	w1, #0x1955                	// #6485
   12438:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1243c:	add	x0, x0, #0xb30
   12440:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   12444:	ldr	x0, [sp, #40]
   12448:	cmp	x0, #0x0
   1244c:	b.eq	1246c <PyInit__datetime@@Base+0x6bc>  // b.none
   12450:	ldr	x2, [sp, #40]
   12454:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12458:	add	x1, x0, #0xa68
   1245c:	ldr	x0, [sp, #48]
   12460:	bl	4760 <PyDict_SetItemString@plt>
   12464:	cmp	w0, #0x0
   12468:	b.ge	12474 <PyInit__datetime@@Base+0x6c4>  // b.tcont
   1246c:	mov	x0, #0x0                   	// #0
   12470:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12474:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12478:	add	x0, x0, #0x30
   1247c:	ldr	x1, [sp, #40]
   12480:	str	x1, [x0]
   12484:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12488:	add	x0, x0, #0x30
   1248c:	ldr	x1, [x0]
   12490:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
   12494:	add	x0, x0, #0xca0
   12498:	str	x1, [x0, #40]
   1249c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   124a0:	add	x4, x0, #0x5f0
   124a4:	mov	w3, #0x1                   	// #1
   124a8:	mov	w2, #0x0                   	// #0
   124ac:	mov	w1, #0x3c                  	// #60
   124b0:	mov	w0, #0xffffffff            	// #-1
   124b4:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   124b8:	str	x0, [sp, #32]
   124bc:	ldr	x0, [sp, #32]
   124c0:	cmp	x0, #0x0
   124c4:	b.ne	124d0 <PyInit__datetime@@Base+0x720>  // b.any
   124c8:	mov	x0, #0x0                   	// #0
   124cc:	b	128e8 <PyInit__datetime@@Base+0xb38>
   124d0:	mov	x1, #0x0                   	// #0
   124d4:	ldr	x0, [sp, #32]
   124d8:	bl	6c3c <PyNumber_FloorDivide@plt+0x1fec>
   124dc:	str	x0, [sp, #40]
   124e0:	ldr	x2, [sp, #32]
   124e4:	mov	w1, #0x1962                	// #6498
   124e8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   124ec:	add	x0, x0, #0xb30
   124f0:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   124f4:	ldr	x0, [sp, #40]
   124f8:	cmp	x0, #0x0
   124fc:	b.eq	1251c <PyInit__datetime@@Base+0x76c>  // b.none
   12500:	ldr	x2, [sp, #40]
   12504:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12508:	add	x1, x0, #0xa58
   1250c:	ldr	x0, [sp, #48]
   12510:	bl	4760 <PyDict_SetItemString@plt>
   12514:	cmp	w0, #0x0
   12518:	b.ge	12524 <PyInit__datetime@@Base+0x774>  // b.tcont
   1251c:	mov	x0, #0x0                   	// #0
   12520:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12524:	ldr	x2, [sp, #40]
   12528:	mov	w1, #0x1965                	// #6501
   1252c:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   12530:	add	x0, x0, #0xb30
   12534:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   12538:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1253c:	add	x4, x0, #0x5f0
   12540:	mov	w3, #0x0                   	// #0
   12544:	mov	w2, #0x0                   	// #0
   12548:	mov	w1, #0x5144                	// #20804
   1254c:	movk	w1, #0x1, lsl #16
   12550:	mov	w0, #0x0                   	// #0
   12554:	bl	6b8c <PyNumber_FloorDivide@plt+0x1f3c>
   12558:	str	x0, [sp, #32]
   1255c:	ldr	x0, [sp, #32]
   12560:	cmp	x0, #0x0
   12564:	b.ne	12570 <PyInit__datetime@@Base+0x7c0>  // b.any
   12568:	mov	x0, #0x0                   	// #0
   1256c:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12570:	mov	x1, #0x0                   	// #0
   12574:	ldr	x0, [sp, #32]
   12578:	bl	6c3c <PyNumber_FloorDivide@plt+0x1fec>
   1257c:	str	x0, [sp, #40]
   12580:	ldr	x2, [sp, #32]
   12584:	mov	w1, #0x196b                	// #6507
   12588:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   1258c:	add	x0, x0, #0xb30
   12590:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   12594:	ldr	x0, [sp, #40]
   12598:	cmp	x0, #0x0
   1259c:	b.eq	125bc <PyInit__datetime@@Base+0x80c>  // b.none
   125a0:	ldr	x2, [sp, #40]
   125a4:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   125a8:	add	x1, x0, #0xa60
   125ac:	ldr	x0, [sp, #48]
   125b0:	bl	4760 <PyDict_SetItemString@plt>
   125b4:	cmp	w0, #0x0
   125b8:	b.ge	125c4 <PyInit__datetime@@Base+0x814>  // b.tcont
   125bc:	mov	x0, #0x0                   	// #0
   125c0:	b	128e8 <PyInit__datetime@@Base+0xb38>
   125c4:	ldr	x2, [sp, #40]
   125c8:	mov	w1, #0x196e                	// #6510
   125cc:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   125d0:	add	x0, x0, #0xb30
   125d4:	bl	4e58 <PyNumber_FloorDivide@plt+0x208>
   125d8:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   125dc:	add	x0, x0, #0x30
   125e0:	ldr	x1, [x0]
   125e4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   125e8:	add	x0, x0, #0x450
   125ec:	str	x0, [sp, #8]
   125f0:	str	wzr, [sp]
   125f4:	mov	x7, x1
   125f8:	mov	w6, #0x0                   	// #0
   125fc:	mov	w5, #0x0                   	// #0
   12600:	mov	w4, #0x0                   	// #0
   12604:	mov	w3, #0x0                   	// #0
   12608:	mov	w2, #0x1                   	// #1
   1260c:	mov	w1, #0x1                   	// #1
   12610:	mov	w0, #0x7b2                 	// #1970
   12614:	bl	66b4 <PyNumber_FloorDivide@plt+0x1a64>
   12618:	mov	x1, x0
   1261c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12620:	add	x0, x0, #0x38
   12624:	str	x1, [x0]
   12628:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   1262c:	add	x0, x0, #0x38
   12630:	ldr	x0, [x0]
   12634:	cmp	x0, #0x0
   12638:	b.ne	12644 <PyInit__datetime@@Base+0x894>  // b.any
   1263c:	mov	x0, #0x0                   	// #0
   12640:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12644:	mov	x2, #0x1                   	// #1
   12648:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   1264c:	add	x1, x0, #0xa70
   12650:	ldr	x0, [sp, #56]
   12654:	bl	4780 <PyModule_AddIntConstant@plt>
   12658:	mov	x2, #0x270f                	// #9999
   1265c:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12660:	add	x1, x0, #0xa78
   12664:	ldr	x0, [sp, #56]
   12668:	bl	4780 <PyModule_AddIntConstant@plt>
   1266c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12670:	add	x0, x0, #0x2b0
   12674:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   12678:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1267c:	add	x2, x0, #0x2b0
   12680:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12684:	add	x1, x0, #0x648
   12688:	ldr	x0, [sp, #56]
   1268c:	bl	4b50 <PyModule_AddObject@plt>
   12690:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12694:	add	x0, x0, #0x450
   12698:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   1269c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   126a0:	add	x2, x0, #0x450
   126a4:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   126a8:	add	x1, x0, #0xa80
   126ac:	ldr	x0, [sp, #56]
   126b0:	bl	4b50 <PyModule_AddObject@plt>
   126b4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   126b8:	add	x0, x0, #0x790
   126bc:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   126c0:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   126c4:	add	x2, x0, #0x790
   126c8:	adrp	x0, 12000 <PyInit__datetime@@Base+0x250>
   126cc:	add	x1, x0, #0xf80
   126d0:	ldr	x0, [sp, #56]
   126d4:	bl	4b50 <PyModule_AddObject@plt>
   126d8:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   126dc:	add	x0, x0, #0x5f0
   126e0:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   126e4:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   126e8:	add	x2, x0, #0x5f0
   126ec:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   126f0:	add	x1, x0, #0xa90
   126f4:	ldr	x0, [sp, #56]
   126f8:	bl	4b50 <PyModule_AddObject@plt>
   126fc:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12700:	add	x0, x0, #0x930
   12704:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   12708:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   1270c:	add	x2, x0, #0x930
   12710:	adrp	x0, 13000 <PyInit__datetime@@Base+0x1250>
   12714:	add	x1, x0, #0xe68
   12718:	ldr	x0, [sp, #56]
   1271c:	bl	4b50 <PyModule_AddObject@plt>
   12720:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12724:	add	x0, x0, #0xad0
   12728:	bl	4e30 <PyNumber_FloorDivide@plt+0x1e0>
   1272c:	adrp	x0, 28000 <PyInit__datetime@@Base+0x16250>
   12730:	add	x2, x0, #0xad0
   12734:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12738:	add	x1, x0, #0xaa0
   1273c:	ldr	x0, [sp, #56]
   12740:	bl	4b50 <PyModule_AddObject@plt>
   12744:	mov	x2, #0x0                   	// #0
   12748:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   1274c:	add	x1, x0, #0xab0
   12750:	adrp	x0, 29000 <PyInit__datetime@@Base+0x17250>
   12754:	add	x0, x0, #0xca0
   12758:	bl	4b70 <PyCapsule_New@plt>
   1275c:	str	x0, [sp, #40]
   12760:	ldr	x0, [sp, #40]
   12764:	cmp	x0, #0x0
   12768:	b.ne	12774 <PyInit__datetime@@Base+0x9c4>  // b.any
   1276c:	mov	x0, #0x0                   	// #0
   12770:	b	128e8 <PyInit__datetime@@Base+0xb38>
   12774:	ldr	x2, [sp, #40]
   12778:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   1277c:	add	x1, x0, #0xac8
   12780:	ldr	x0, [sp, #56]
   12784:	bl	4b50 <PyModule_AddObject@plt>
   12788:	mov	x0, #0x3e8                 	// #1000
   1278c:	bl	4940 <PyLong_FromLong@plt>
   12790:	mov	x1, x0
   12794:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12798:	add	x0, x0, #0x40
   1279c:	str	x1, [x0]
   127a0:	mov	x0, #0x4240                	// #16960
   127a4:	movk	x0, #0xf, lsl #16
   127a8:	bl	4940 <PyLong_FromLong@plt>
   127ac:	mov	x1, x0
   127b0:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   127b4:	add	x0, x0, #0x48
   127b8:	str	x1, [x0]
   127bc:	mov	x0, #0x8700                	// #34560
   127c0:	movk	x0, #0x393, lsl #16
   127c4:	bl	4940 <PyLong_FromLong@plt>
   127c8:	mov	x1, x0
   127cc:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   127d0:	add	x0, x0, #0x50
   127d4:	str	x1, [x0]
   127d8:	mov	x0, #0x5180                	// #20864
   127dc:	movk	x0, #0x1, lsl #16
   127e0:	bl	4940 <PyLong_FromLong@plt>
   127e4:	mov	x1, x0
   127e8:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   127ec:	add	x0, x0, #0x70
   127f0:	str	x1, [x0]
   127f4:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   127f8:	add	x0, x0, #0x40
   127fc:	ldr	x0, [x0]
   12800:	cmp	x0, #0x0
   12804:	b.eq	12844 <PyInit__datetime@@Base+0xa94>  // b.none
   12808:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   1280c:	add	x0, x0, #0x48
   12810:	ldr	x0, [x0]
   12814:	cmp	x0, #0x0
   12818:	b.eq	12844 <PyInit__datetime@@Base+0xa94>  // b.none
   1281c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12820:	add	x0, x0, #0x50
   12824:	ldr	x0, [x0]
   12828:	cmp	x0, #0x0
   1282c:	b.eq	12844 <PyInit__datetime@@Base+0xa94>  // b.none
   12830:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12834:	add	x0, x0, #0x70
   12838:	ldr	x0, [x0]
   1283c:	cmp	x0, #0x0
   12840:	b.ne	1284c <PyInit__datetime@@Base+0xa9c>  // b.any
   12844:	mov	x0, #0x0                   	// #0
   12848:	b	128e8 <PyInit__datetime@@Base+0xb38>
   1284c:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12850:	ldr	d0, [x0, #3288]
   12854:	bl	47d0 <PyLong_FromDouble@plt>
   12858:	mov	x1, x0
   1285c:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12860:	add	x0, x0, #0x58
   12864:	str	x1, [x0]
   12868:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   1286c:	ldr	d0, [x0, #3296]
   12870:	bl	47d0 <PyLong_FromDouble@plt>
   12874:	mov	x1, x0
   12878:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   1287c:	add	x0, x0, #0x60
   12880:	str	x1, [x0]
   12884:	adrp	x0, 14000 <PyInit__datetime@@Base+0x2250>
   12888:	ldr	d0, [x0, #3304]
   1288c:	bl	47d0 <PyLong_FromDouble@plt>
   12890:	mov	x1, x0
   12894:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   12898:	add	x0, x0, #0x68
   1289c:	str	x1, [x0]
   128a0:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   128a4:	add	x0, x0, #0x58
   128a8:	ldr	x0, [x0]
   128ac:	cmp	x0, #0x0
   128b0:	b.eq	128dc <PyInit__datetime@@Base+0xb2c>  // b.none
   128b4:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   128b8:	add	x0, x0, #0x60
   128bc:	ldr	x0, [x0]
   128c0:	cmp	x0, #0x0
   128c4:	b.eq	128dc <PyInit__datetime@@Base+0xb2c>  // b.none
   128c8:	adrp	x0, 2a000 <PyInit__datetime@@Base+0x18250>
   128cc:	add	x0, x0, #0x68
   128d0:	ldr	x0, [x0]
   128d4:	cmp	x0, #0x0
   128d8:	b.ne	128e4 <PyInit__datetime@@Base+0xb34>  // b.any
   128dc:	mov	x0, #0x0                   	// #0
   128e0:	b	128e8 <PyInit__datetime@@Base+0xb38>
   128e4:	ldr	x0, [sp, #56]
   128e8:	ldp	x29, x30, [sp, #16]
   128ec:	add	sp, sp, #0x40
   128f0:	ret

Disassembly of section .fini:

00000000000128f4 <.fini>:
   128f4:	stp	x29, x30, [sp, #-16]!
   128f8:	mov	x29, sp
   128fc:	ldp	x29, x30, [sp], #16
   12900:	ret
