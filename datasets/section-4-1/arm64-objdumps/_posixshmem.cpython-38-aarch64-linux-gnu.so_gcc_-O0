
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_posixshmem.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c38 <.init>:
 c38:	stp	x29, x30, [sp, #-16]!
 c3c:	mov	x29, sp
 c40:	bl	da0 <_PyLong_AsInt@plt+0x10>
 c44:	ldp	x29, x30, [sp], #16
 c48:	ret

Disassembly of section .plt:

0000000000000c50 <_PyUnicode_Ready@plt-0x20>:
 c50:	stp	x16, x30, [sp, #-16]!
 c54:	adrp	x16, 11000 <PyInit__posixshmem@@Base+0xfab0>
 c58:	ldr	x17, [x16, #4088]
 c5c:	add	x16, x16, #0xff8
 c60:	br	x17
 c64:	nop
 c68:	nop
 c6c:	nop

0000000000000c70 <_PyUnicode_Ready@plt>:
 c70:	adrp	x16, 12000 <_PyUnicode_Ready>
 c74:	ldr	x17, [x16]
 c78:	add	x16, x16, #0x0
 c7c:	br	x17

0000000000000c80 <PyEval_RestoreThread@plt>:
 c80:	adrp	x16, 12000 <_PyUnicode_Ready>
 c84:	ldr	x17, [x16, #8]
 c88:	add	x16, x16, #0x8
 c8c:	br	x17

0000000000000c90 <__cxa_finalize@plt>:
 c90:	adrp	x16, 12000 <_PyUnicode_Ready>
 c94:	ldr	x17, [x16, #16]
 c98:	add	x16, x16, #0x10
 c9c:	br	x17

0000000000000ca0 <_PyArg_UnpackKeywords@plt>:
 ca0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ca4:	ldr	x17, [x16, #24]
 ca8:	add	x16, x16, #0x18
 cac:	br	x17

0000000000000cb0 <PyErr_SetString@plt>:
 cb0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cb4:	ldr	x17, [x16, #32]
 cb8:	add	x16, x16, #0x20
 cbc:	br	x17

0000000000000cc0 <PyLong_FromLong@plt>:
 cc0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cc4:	ldr	x17, [x16, #40]
 cc8:	add	x16, x16, #0x28
 ccc:	br	x17

0000000000000cd0 <_PyArg_BadArgument@plt>:
 cd0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cd4:	ldr	x17, [x16, #48]
 cd8:	add	x16, x16, #0x30
 cdc:	br	x17

0000000000000ce0 <__gmon_start__@plt>:
 ce0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ce4:	ldr	x17, [x16, #56]
 ce8:	add	x16, x16, #0x38
 cec:	br	x17

0000000000000cf0 <PyErr_Occurred@plt>:
 cf0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cf4:	ldr	x17, [x16, #64]
 cf8:	add	x16, x16, #0x40
 cfc:	br	x17

0000000000000d00 <PyModule_Create2@plt>:
 d00:	adrp	x16, 12000 <_PyUnicode_Ready>
 d04:	ldr	x17, [x16, #72]
 d08:	add	x16, x16, #0x48
 d0c:	br	x17

0000000000000d10 <PyErr_SetFromErrnoWithFilenameObject@plt>:
 d10:	adrp	x16, 12000 <_PyUnicode_Ready>
 d14:	ldr	x17, [x16, #80]
 d18:	add	x16, x16, #0x50
 d1c:	br	x17

0000000000000d20 <shm_open@plt>:
 d20:	adrp	x16, 12000 <_PyUnicode_Ready>
 d24:	ldr	x17, [x16, #88]
 d28:	add	x16, x16, #0x58
 d2c:	br	x17

0000000000000d30 <PyUnicode_AsUTF8@plt>:
 d30:	adrp	x16, 12000 <_PyUnicode_Ready>
 d34:	ldr	x17, [x16, #96]
 d38:	add	x16, x16, #0x60
 d3c:	br	x17

0000000000000d40 <shm_unlink@plt>:
 d40:	adrp	x16, 12000 <_PyUnicode_Ready>
 d44:	ldr	x17, [x16, #104]
 d48:	add	x16, x16, #0x68
 d4c:	br	x17

0000000000000d50 <PyEval_SaveThread@plt>:
 d50:	adrp	x16, 12000 <_PyUnicode_Ready>
 d54:	ldr	x17, [x16, #112]
 d58:	add	x16, x16, #0x70
 d5c:	br	x17

0000000000000d60 <PyErr_CheckSignals@plt>:
 d60:	adrp	x16, 12000 <_PyUnicode_Ready>
 d64:	ldr	x17, [x16, #120]
 d68:	add	x16, x16, #0x78
 d6c:	br	x17

0000000000000d70 <PyType_IsSubtype@plt>:
 d70:	adrp	x16, 12000 <_PyUnicode_Ready>
 d74:	ldr	x17, [x16, #128]
 d78:	add	x16, x16, #0x80
 d7c:	br	x17

0000000000000d80 <__errno_location@plt>:
 d80:	adrp	x16, 12000 <_PyUnicode_Ready>
 d84:	ldr	x17, [x16, #136]
 d88:	add	x16, x16, #0x88
 d8c:	br	x17

0000000000000d90 <_PyLong_AsInt@plt>:
 d90:	adrp	x16, 12000 <_PyUnicode_Ready>
 d94:	ldr	x17, [x16, #144]
 d98:	add	x16, x16, #0x90
 d9c:	br	x17

Disassembly of section .text:

0000000000000da0 <PyInit__posixshmem@@Base-0x7b0>:
     da0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
     da4:	ldr	x0, [x0, #4048]
     da8:	cbz	x0, db0 <_PyLong_AsInt@plt+0x20>
     dac:	b	ce0 <__gmon_start__@plt>
     db0:	ret
     db4:	stp	x29, x30, [sp, #-32]!
     db8:	mov	x29, sp
     dbc:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     dc0:	add	x0, x0, #0x1e8
     dc4:	str	x0, [sp, #24]
     dc8:	ldr	x0, [sp, #24]
     dcc:	str	x0, [sp, #24]
     dd0:	ldr	x1, [sp, #24]
     dd4:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     dd8:	add	x0, x0, #0x1e8
     ddc:	cmp	x1, x0
     de0:	b.eq	e18 <_PyLong_AsInt@plt+0x88>  // b.none
     de4:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
     de8:	ldr	x0, [x0, #4008]
     dec:	str	x0, [sp, #16]
     df0:	ldr	x0, [sp, #16]
     df4:	str	x0, [sp, #16]
     df8:	ldr	x0, [sp, #16]
     dfc:	cmp	x0, #0x0
     e00:	b.eq	e1c <_PyLong_AsInt@plt+0x8c>  // b.none
     e04:	ldr	x1, [sp, #16]
     e08:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     e0c:	add	x0, x0, #0x1e8
     e10:	blr	x1
     e14:	b	e1c <_PyLong_AsInt@plt+0x8c>
     e18:	nop
     e1c:	ldp	x29, x30, [sp], #32
     e20:	ret
     e24:	stp	x29, x30, [sp, #-48]!
     e28:	mov	x29, sp
     e2c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     e30:	add	x0, x0, #0x1e8
     e34:	str	x0, [sp, #40]
     e38:	ldr	x0, [sp, #40]
     e3c:	str	x0, [sp, #40]
     e40:	ldr	x1, [sp, #40]
     e44:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     e48:	add	x0, x0, #0x1e8
     e4c:	sub	x0, x1, x0
     e50:	asr	x0, x0, #3
     e54:	lsr	x1, x0, #63
     e58:	add	x0, x1, x0
     e5c:	asr	x0, x0, #1
     e60:	str	x0, [sp, #32]
     e64:	ldr	x0, [sp, #32]
     e68:	cmp	x0, #0x0
     e6c:	b.eq	ea8 <_PyLong_AsInt@plt+0x118>  // b.none
     e70:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
     e74:	ldr	x0, [x0, #4064]
     e78:	str	x0, [sp, #24]
     e7c:	ldr	x0, [sp, #24]
     e80:	str	x0, [sp, #24]
     e84:	ldr	x0, [sp, #24]
     e88:	cmp	x0, #0x0
     e8c:	b.eq	eac <_PyLong_AsInt@plt+0x11c>  // b.none
     e90:	ldr	x2, [sp, #24]
     e94:	ldr	x1, [sp, #32]
     e98:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     e9c:	add	x0, x0, #0x1e8
     ea0:	blr	x2
     ea4:	b	eac <_PyLong_AsInt@plt+0x11c>
     ea8:	nop
     eac:	ldp	x29, x30, [sp], #48
     eb0:	ret
     eb4:	stp	x29, x30, [sp, #-16]!
     eb8:	mov	x29, sp
     ebc:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     ec0:	add	x0, x0, #0x1e8
     ec4:	ldrb	w0, [x0]
     ec8:	and	x0, x0, #0xff
     ecc:	cmp	x0, #0x0
     ed0:	b.ne	f0c <_PyLong_AsInt@plt+0x17c>  // b.any
     ed4:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
     ed8:	ldr	x0, [x0, #4024]
     edc:	cmp	x0, #0x0
     ee0:	b.eq	ef4 <_PyLong_AsInt@plt+0x164>  // b.none
     ee4:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     ee8:	add	x0, x0, #0x98
     eec:	ldr	x0, [x0]
     ef0:	bl	c90 <__cxa_finalize@plt>
     ef4:	bl	db4 <_PyLong_AsInt@plt+0x24>
     ef8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
     efc:	add	x0, x0, #0x1e8
     f00:	mov	w1, #0x1                   	// #1
     f04:	strb	w1, [x0]
     f08:	b	f10 <_PyLong_AsInt@plt+0x180>
     f0c:	nop
     f10:	ldp	x29, x30, [sp], #16
     f14:	ret
     f18:	stp	x29, x30, [sp, #-16]!
     f1c:	mov	x29, sp
     f20:	bl	e24 <_PyLong_AsInt@plt+0x94>
     f24:	nop
     f28:	ldp	x29, x30, [sp], #16
     f2c:	ret
     f30:	sub	sp, sp, #0x10
     f34:	str	x0, [sp, #8]
     f38:	ldr	x0, [sp, #8]
     f3c:	ldr	x0, [x0]
     f40:	add	x1, x0, #0x1
     f44:	ldr	x0, [sp, #8]
     f48:	str	x1, [x0]
     f4c:	nop
     f50:	add	sp, sp, #0x10
     f54:	ret
     f58:	stp	x29, x30, [sp, #-80]!
     f5c:	mov	x29, sp
     f60:	str	x0, [sp, #40]
     f64:	str	x1, [sp, #32]
     f68:	str	w2, [sp, #28]
     f6c:	str	w3, [sp, #24]
     f70:	str	wzr, [sp, #76]
     f74:	ldr	x0, [sp, #32]
     f78:	bl	d30 <PyUnicode_AsUTF8@plt>
     f7c:	str	x0, [sp, #64]
     f80:	ldr	x0, [sp, #64]
     f84:	cmp	x0, #0x0
     f88:	b.ne	f94 <_PyLong_AsInt@plt+0x204>  // b.any
     f8c:	mov	w0, #0xffffffff            	// #-1
     f90:	b	1024 <_PyLong_AsInt@plt+0x294>
     f94:	bl	d50 <PyEval_SaveThread@plt>
     f98:	str	x0, [sp, #56]
     f9c:	ldr	w0, [sp, #24]
     fa0:	mov	w2, w0
     fa4:	ldr	w1, [sp, #28]
     fa8:	ldr	x0, [sp, #64]
     fac:	bl	d20 <shm_open@plt>
     fb0:	str	w0, [sp, #52]
     fb4:	ldr	x0, [sp, #56]
     fb8:	bl	c80 <PyEval_RestoreThread@plt>
     fbc:	ldr	w0, [sp, #52]
     fc0:	cmp	w0, #0x0
     fc4:	b.ge	fec <_PyLong_AsInt@plt+0x25c>  // b.tcont
     fc8:	bl	d80 <__errno_location@plt>
     fcc:	ldr	w0, [x0]
     fd0:	cmp	w0, #0x4
     fd4:	b.ne	fec <_PyLong_AsInt@plt+0x25c>  // b.any
     fd8:	bl	d60 <PyErr_CheckSignals@plt>
     fdc:	str	w0, [sp, #76]
     fe0:	ldr	w0, [sp, #76]
     fe4:	cmp	w0, #0x0
     fe8:	b.eq	f94 <_PyLong_AsInt@plt+0x204>  // b.none
     fec:	ldr	w0, [sp, #52]
     ff0:	cmp	w0, #0x0
     ff4:	b.ge	1020 <_PyLong_AsInt@plt+0x290>  // b.tcont
     ff8:	ldr	w0, [sp, #76]
     ffc:	cmp	w0, #0x0
    1000:	b.ne	1018 <_PyLong_AsInt@plt+0x288>  // b.any
    1004:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    1008:	ldr	x0, [x0, #4040]
    100c:	ldr	x0, [x0]
    1010:	ldr	x1, [sp, #32]
    1014:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    1018:	mov	w0, #0xffffffff            	// #-1
    101c:	b	1024 <_PyLong_AsInt@plt+0x294>
    1020:	ldr	w0, [sp, #52]
    1024:	ldp	x29, x30, [sp], #80
    1028:	ret
    102c:	stp	x29, x30, [sp, #-64]!
    1030:	mov	x29, sp
    1034:	str	x0, [sp, #24]
    1038:	str	x1, [sp, #16]
    103c:	str	wzr, [sp, #60]
    1040:	ldr	x0, [sp, #16]
    1044:	bl	d30 <PyUnicode_AsUTF8@plt>
    1048:	str	x0, [sp, #48]
    104c:	ldr	x0, [sp, #48]
    1050:	cmp	x0, #0x0
    1054:	b.ne	1060 <_PyLong_AsInt@plt+0x2d0>  // b.any
    1058:	mov	x0, #0x0                   	// #0
    105c:	b	10f4 <_PyLong_AsInt@plt+0x364>
    1060:	bl	d50 <PyEval_SaveThread@plt>
    1064:	str	x0, [sp, #40]
    1068:	ldr	x0, [sp, #48]
    106c:	bl	d40 <shm_unlink@plt>
    1070:	str	w0, [sp, #36]
    1074:	ldr	x0, [sp, #40]
    1078:	bl	c80 <PyEval_RestoreThread@plt>
    107c:	ldr	w0, [sp, #36]
    1080:	cmp	w0, #0x0
    1084:	b.ge	10ac <_PyLong_AsInt@plt+0x31c>  // b.tcont
    1088:	bl	d80 <__errno_location@plt>
    108c:	ldr	w0, [x0]
    1090:	cmp	w0, #0x4
    1094:	b.ne	10ac <_PyLong_AsInt@plt+0x31c>  // b.any
    1098:	bl	d60 <PyErr_CheckSignals@plt>
    109c:	str	w0, [sp, #60]
    10a0:	ldr	w0, [sp, #60]
    10a4:	cmp	w0, #0x0
    10a8:	b.eq	1060 <_PyLong_AsInt@plt+0x2d0>  // b.none
    10ac:	ldr	w0, [sp, #36]
    10b0:	cmp	w0, #0x0
    10b4:	b.ge	10e0 <_PyLong_AsInt@plt+0x350>  // b.tcont
    10b8:	ldr	w0, [sp, #60]
    10bc:	cmp	w0, #0x0
    10c0:	b.ne	10d8 <_PyLong_AsInt@plt+0x348>  // b.any
    10c4:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    10c8:	ldr	x0, [x0, #4040]
    10cc:	ldr	x0, [x0]
    10d0:	ldr	x1, [sp, #16]
    10d4:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    10d8:	mov	x0, #0x0                   	// #0
    10dc:	b	10f4 <_PyLong_AsInt@plt+0x364>
    10e0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    10e4:	ldr	x0, [x0, #4056]
    10e8:	bl	f30 <_PyLong_AsInt@plt+0x1a0>
    10ec:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    10f0:	ldr	x0, [x0, #4056]
    10f4:	ldp	x29, x30, [sp], #64
    10f8:	ret
    10fc:	sub	sp, sp, #0x80
    1100:	stp	x29, x30, [sp, #16]
    1104:	add	x29, sp, #0x10
    1108:	str	x0, [sp, #56]
    110c:	str	x1, [sp, #48]
    1110:	str	x2, [sp, #40]
    1114:	str	x3, [sp, #32]
    1118:	str	xzr, [sp, #120]
    111c:	ldr	x0, [sp, #32]
    1120:	cmp	x0, #0x0
    1124:	b.eq	1134 <_PyLong_AsInt@plt+0x3a4>  // b.none
    1128:	ldr	x0, [sp, #32]
    112c:	ldr	x0, [x0, #16]
    1130:	b	1138 <_PyLong_AsInt@plt+0x3a8>
    1134:	mov	x0, #0x0                   	// #0
    1138:	ldr	x1, [sp, #40]
    113c:	add	x0, x0, x1
    1140:	sub	x0, x0, #0x2
    1144:	str	x0, [sp, #104]
    1148:	mov	w0, #0x1ff                 	// #511
    114c:	str	w0, [sp, #116]
    1150:	ldr	x0, [sp, #32]
    1154:	cmp	x0, #0x0
    1158:	b.ne	1180 <_PyLong_AsInt@plt+0x3f0>  // b.any
    115c:	ldr	x0, [sp, #40]
    1160:	cmp	x0, #0x1
    1164:	b.le	1180 <_PyLong_AsInt@plt+0x3f0>
    1168:	ldr	x0, [sp, #40]
    116c:	cmp	x0, #0x3
    1170:	b.gt	1180 <_PyLong_AsInt@plt+0x3f0>
    1174:	ldr	x0, [sp, #48]
    1178:	cmp	x0, #0x0
    117c:	b.ne	11b4 <_PyLong_AsInt@plt+0x424>  // b.any
    1180:	add	x0, sp, #0x40
    1184:	str	x0, [sp]
    1188:	mov	w7, #0x0                   	// #0
    118c:	mov	w6, #0x3                   	// #3
    1190:	mov	w5, #0x2                   	// #2
    1194:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
    1198:	add	x4, x0, #0x168
    119c:	ldr	x3, [sp, #32]
    11a0:	mov	x2, #0x0                   	// #0
    11a4:	ldr	x1, [sp, #40]
    11a8:	ldr	x0, [sp, #48]
    11ac:	bl	ca0 <_PyArg_UnpackKeywords@plt>
    11b0:	b	11b8 <_PyLong_AsInt@plt+0x428>
    11b4:	ldr	x0, [sp, #48]
    11b8:	str	x0, [sp, #48]
    11bc:	ldr	x0, [sp, #48]
    11c0:	cmp	x0, #0x0
    11c4:	b.eq	13d0 <_PyLong_AsInt@plt+0x640>  // b.none
    11c8:	ldr	x0, [sp, #48]
    11cc:	ldr	x0, [x0]
    11d0:	ldr	x0, [x0, #8]
    11d4:	ldr	x0, [x0, #168]
    11d8:	and	x0, x0, #0x10000000
    11dc:	cmp	x0, #0x0
    11e0:	b.ne	1210 <_PyLong_AsInt@plt+0x480>  // b.any
    11e4:	ldr	x0, [sp, #48]
    11e8:	ldr	x0, [x0]
    11ec:	mov	x3, x0
    11f0:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    11f4:	add	x2, x0, #0x618
    11f8:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    11fc:	add	x1, x0, #0x620
    1200:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    1204:	add	x0, x0, #0x630
    1208:	bl	cd0 <_PyArg_BadArgument@plt>
    120c:	b	13f4 <_PyLong_AsInt@plt+0x664>
    1210:	ldr	x0, [sp, #48]
    1214:	ldr	x0, [x0]
    1218:	ldrb	w0, [x0, #32]
    121c:	and	w0, w0, #0xffffff80
    1220:	and	w0, w0, #0xff
    1224:	cmp	w0, #0x0
    1228:	b.ne	1240 <_PyLong_AsInt@plt+0x4b0>  // b.any
    122c:	ldr	x0, [sp, #48]
    1230:	ldr	x0, [x0]
    1234:	bl	c70 <_PyUnicode_Ready@plt>
    1238:	cmn	w0, #0x1
    123c:	b.eq	13d8 <_PyLong_AsInt@plt+0x648>  // b.none
    1240:	ldr	x0, [sp, #48]
    1244:	ldr	x0, [x0]
    1248:	str	x0, [sp, #96]
    124c:	ldr	x0, [sp, #48]
    1250:	add	x0, x0, #0x8
    1254:	ldr	x0, [x0]
    1258:	ldr	x1, [x0, #8]
    125c:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    1260:	ldr	x0, [x0, #4016]
    1264:	cmp	x1, x0
    1268:	b.eq	1294 <_PyLong_AsInt@plt+0x504>  // b.none
    126c:	ldr	x0, [sp, #48]
    1270:	add	x0, x0, #0x8
    1274:	ldr	x0, [x0]
    1278:	ldr	x2, [x0, #8]
    127c:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    1280:	ldr	x1, [x0, #4016]
    1284:	mov	x0, x2
    1288:	bl	d70 <PyType_IsSubtype@plt>
    128c:	cmp	w0, #0x0
    1290:	b.eq	12b4 <_PyLong_AsInt@plt+0x524>  // b.none
    1294:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    1298:	ldr	x0, [x0, #4032]
    129c:	ldr	x2, [x0]
    12a0:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    12a4:	add	x1, x0, #0x640
    12a8:	mov	x0, x2
    12ac:	bl	cb0 <PyErr_SetString@plt>
    12b0:	b	13f4 <_PyLong_AsInt@plt+0x664>
    12b4:	ldr	x0, [sp, #48]
    12b8:	add	x0, x0, #0x8
    12bc:	ldr	x0, [x0]
    12c0:	bl	d90 <_PyLong_AsInt@plt>
    12c4:	str	w0, [sp, #92]
    12c8:	ldr	w0, [sp, #92]
    12cc:	cmn	w0, #0x1
    12d0:	b.ne	12e0 <_PyLong_AsInt@plt+0x550>  // b.any
    12d4:	bl	cf0 <PyErr_Occurred@plt>
    12d8:	cmp	x0, #0x0
    12dc:	b.ne	13e0 <_PyLong_AsInt@plt+0x650>  // b.any
    12e0:	ldr	x0, [sp, #104]
    12e4:	cmp	x0, #0x0
    12e8:	b.eq	1384 <_PyLong_AsInt@plt+0x5f4>  // b.none
    12ec:	ldr	x0, [sp, #48]
    12f0:	add	x0, x0, #0x10
    12f4:	ldr	x0, [x0]
    12f8:	ldr	x1, [x0, #8]
    12fc:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    1300:	ldr	x0, [x0, #4016]
    1304:	cmp	x1, x0
    1308:	b.eq	1334 <_PyLong_AsInt@plt+0x5a4>  // b.none
    130c:	ldr	x0, [sp, #48]
    1310:	add	x0, x0, #0x10
    1314:	ldr	x0, [x0]
    1318:	ldr	x2, [x0, #8]
    131c:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    1320:	ldr	x1, [x0, #4016]
    1324:	mov	x0, x2
    1328:	bl	d70 <PyType_IsSubtype@plt>
    132c:	cmp	w0, #0x0
    1330:	b.eq	1354 <_PyLong_AsInt@plt+0x5c4>  // b.none
    1334:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfab0>
    1338:	ldr	x0, [x0, #4032]
    133c:	ldr	x2, [x0]
    1340:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    1344:	add	x1, x0, #0x640
    1348:	mov	x0, x2
    134c:	bl	cb0 <PyErr_SetString@plt>
    1350:	b	13f4 <_PyLong_AsInt@plt+0x664>
    1354:	ldr	x0, [sp, #48]
    1358:	add	x0, x0, #0x10
    135c:	ldr	x0, [x0]
    1360:	bl	d90 <_PyLong_AsInt@plt>
    1364:	str	w0, [sp, #116]
    1368:	ldr	w0, [sp, #116]
    136c:	cmn	w0, #0x1
    1370:	b.ne	138c <_PyLong_AsInt@plt+0x5fc>  // b.any
    1374:	bl	cf0 <PyErr_Occurred@plt>
    1378:	cmp	x0, #0x0
    137c:	b.ne	13e8 <_PyLong_AsInt@plt+0x658>  // b.any
    1380:	b	138c <_PyLong_AsInt@plt+0x5fc>
    1384:	nop
    1388:	b	1390 <_PyLong_AsInt@plt+0x600>
    138c:	nop
    1390:	ldr	w3, [sp, #116]
    1394:	ldr	w2, [sp, #92]
    1398:	ldr	x1, [sp, #96]
    139c:	ldr	x0, [sp, #56]
    13a0:	bl	f58 <_PyLong_AsInt@plt+0x1c8>
    13a4:	str	w0, [sp, #88]
    13a8:	ldr	w0, [sp, #88]
    13ac:	cmn	w0, #0x1
    13b0:	b.ne	13c0 <_PyLong_AsInt@plt+0x630>  // b.any
    13b4:	bl	cf0 <PyErr_Occurred@plt>
    13b8:	cmp	x0, #0x0
    13bc:	b.ne	13f0 <_PyLong_AsInt@plt+0x660>  // b.any
    13c0:	ldrsw	x0, [sp, #88]
    13c4:	bl	cc0 <PyLong_FromLong@plt>
    13c8:	str	x0, [sp, #120]
    13cc:	b	13f4 <_PyLong_AsInt@plt+0x664>
    13d0:	nop
    13d4:	b	13f4 <_PyLong_AsInt@plt+0x664>
    13d8:	nop
    13dc:	b	13f4 <_PyLong_AsInt@plt+0x664>
    13e0:	nop
    13e4:	b	13f4 <_PyLong_AsInt@plt+0x664>
    13e8:	nop
    13ec:	b	13f4 <_PyLong_AsInt@plt+0x664>
    13f0:	nop
    13f4:	ldr	x0, [sp, #120]
    13f8:	ldp	x29, x30, [sp, #16]
    13fc:	add	sp, sp, #0x80
    1400:	ret
    1404:	sub	sp, sp, #0x60
    1408:	stp	x29, x30, [sp, #16]
    140c:	add	x29, sp, #0x10
    1410:	str	x0, [sp, #56]
    1414:	str	x1, [sp, #48]
    1418:	str	x2, [sp, #40]
    141c:	str	x3, [sp, #32]
    1420:	str	xzr, [sp, #88]
    1424:	ldr	x0, [sp, #32]
    1428:	cmp	x0, #0x0
    142c:	b.ne	1454 <_PyLong_AsInt@plt+0x6c4>  // b.any
    1430:	ldr	x0, [sp, #40]
    1434:	cmp	x0, #0x0
    1438:	b.le	1454 <_PyLong_AsInt@plt+0x6c4>
    143c:	ldr	x0, [sp, #40]
    1440:	cmp	x0, #0x1
    1444:	b.gt	1454 <_PyLong_AsInt@plt+0x6c4>
    1448:	ldr	x0, [sp, #48]
    144c:	cmp	x0, #0x0
    1450:	b.ne	1488 <_PyLong_AsInt@plt+0x6f8>  // b.any
    1454:	add	x0, sp, #0x48
    1458:	str	x0, [sp]
    145c:	mov	w7, #0x0                   	// #0
    1460:	mov	w6, #0x1                   	// #1
    1464:	mov	w5, #0x1                   	// #1
    1468:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
    146c:	add	x4, x0, #0x1a8
    1470:	ldr	x3, [sp, #32]
    1474:	mov	x2, #0x0                   	// #0
    1478:	ldr	x1, [sp, #40]
    147c:	ldr	x0, [sp, #48]
    1480:	bl	ca0 <_PyArg_UnpackKeywords@plt>
    1484:	b	148c <_PyLong_AsInt@plt+0x6fc>
    1488:	ldr	x0, [sp, #48]
    148c:	str	x0, [sp, #48]
    1490:	ldr	x0, [sp, #48]
    1494:	cmp	x0, #0x0
    1498:	b.eq	1534 <_PyLong_AsInt@plt+0x7a4>  // b.none
    149c:	ldr	x0, [sp, #48]
    14a0:	ldr	x0, [x0]
    14a4:	ldr	x0, [x0, #8]
    14a8:	ldr	x0, [x0, #168]
    14ac:	and	x0, x0, #0x10000000
    14b0:	cmp	x0, #0x0
    14b4:	b.ne	14e4 <_PyLong_AsInt@plt+0x754>  // b.any
    14b8:	ldr	x0, [sp, #48]
    14bc:	ldr	x0, [x0]
    14c0:	mov	x3, x0
    14c4:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    14c8:	add	x2, x0, #0x618
    14cc:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    14d0:	add	x1, x0, #0x620
    14d4:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    14d8:	add	x0, x0, #0x760
    14dc:	bl	cd0 <_PyArg_BadArgument@plt>
    14e0:	b	1540 <_PyLong_AsInt@plt+0x7b0>
    14e4:	ldr	x0, [sp, #48]
    14e8:	ldr	x0, [x0]
    14ec:	ldrb	w0, [x0, #32]
    14f0:	and	w0, w0, #0xffffff80
    14f4:	and	w0, w0, #0xff
    14f8:	cmp	w0, #0x0
    14fc:	b.ne	1514 <_PyLong_AsInt@plt+0x784>  // b.any
    1500:	ldr	x0, [sp, #48]
    1504:	ldr	x0, [x0]
    1508:	bl	c70 <_PyUnicode_Ready@plt>
    150c:	cmn	w0, #0x1
    1510:	b.eq	153c <_PyLong_AsInt@plt+0x7ac>  // b.none
    1514:	ldr	x0, [sp, #48]
    1518:	ldr	x0, [x0]
    151c:	str	x0, [sp, #80]
    1520:	ldr	x1, [sp, #80]
    1524:	ldr	x0, [sp, #56]
    1528:	bl	102c <_PyLong_AsInt@plt+0x29c>
    152c:	str	x0, [sp, #88]
    1530:	b	1540 <_PyLong_AsInt@plt+0x7b0>
    1534:	nop
    1538:	b	1540 <_PyLong_AsInt@plt+0x7b0>
    153c:	nop
    1540:	ldr	x0, [sp, #88]
    1544:	ldp	x29, x30, [sp, #16]
    1548:	add	sp, sp, #0x60
    154c:	ret

0000000000001550 <PyInit__posixshmem@@Base>:
    1550:	stp	x29, x30, [sp, #-32]!
    1554:	mov	x29, sp
    1558:	mov	w1, #0x3f5                 	// #1013
    155c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10ab0>
    1560:	add	x0, x0, #0x100
    1564:	bl	d00 <PyModule_Create2@plt>
    1568:	str	x0, [sp, #24]
    156c:	ldr	x0, [sp, #24]
    1570:	cmp	x0, #0x0
    1574:	b.ne	1580 <PyInit__posixshmem@@Base+0x30>  // b.any
    1578:	mov	x0, #0x0                   	// #0
    157c:	b	1584 <PyInit__posixshmem@@Base+0x34>
    1580:	ldr	x0, [sp, #24]
    1584:	ldp	x29, x30, [sp], #32
    1588:	ret

Disassembly of section .fini:

000000000000158c <.fini>:
    158c:	stp	x29, x30, [sp, #-16]!
    1590:	mov	x29, sp
    1594:	ldp	x29, x30, [sp], #16
    1598:	ret
