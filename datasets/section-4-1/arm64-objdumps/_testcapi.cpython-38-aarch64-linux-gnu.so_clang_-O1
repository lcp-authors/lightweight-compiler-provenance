
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_testcapi.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000008218 <.init>:
    8218:	stp	x29, x30, [sp, #-16]!
    821c:	mov	x29, sp
    8220:	bl	90b0 <PyObject_Calloc@plt+0x10>
    8224:	ldp	x29, x30, [sp], #16
    8228:	ret

Disassembly of section .plt:

0000000000008230 <memcpy@plt-0x20>:
    8230:	stp	x16, x30, [sp, #-16]!
    8234:	adrp	x16, 25000 <PyInit__testcapi@@Base+0x1be40>
    8238:	ldr	x17, [x16, #4088]
    823c:	add	x16, x16, #0xff8
    8240:	br	x17
    8244:	nop
    8248:	nop
    824c:	nop

0000000000008250 <memcpy@plt>:
    8250:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8254:	ldr	x17, [x16]
    8258:	add	x16, x16, #0x0
    825c:	br	x17

0000000000008260 <PyUnicode_FromFormat@plt>:
    8260:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8264:	ldr	x17, [x16, #8]
    8268:	add	x16, x16, #0x8
    826c:	br	x17

0000000000008270 <PyNumber_Negative@plt>:
    8270:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8274:	ldr	x17, [x16, #16]
    8278:	add	x16, x16, #0x10
    827c:	br	x17

0000000000008280 <PyMarshal_ReadLastObjectFromFile@plt>:
    8280:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8284:	ldr	x17, [x16, #24]
    8288:	add	x16, x16, #0x18
    828c:	br	x17

0000000000008290 <PyMapping_Items@plt>:
    8290:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8294:	ldr	x17, [x16, #32]
    8298:	add	x16, x16, #0x20
    829c:	br	x17

00000000000082a0 <PyList_New@plt>:
    82a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    82a4:	ldr	x17, [x16, #40]
    82a8:	add	x16, x16, #0x28
    82ac:	br	x17

00000000000082b0 <PyMarshal_ReadLongFromFile@plt>:
    82b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    82b4:	ldr	x17, [x16, #48]
    82b8:	add	x16, x16, #0x30
    82bc:	br	x17

00000000000082c0 <_PyUnicode_Ready@plt>:
    82c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    82c4:	ldr	x17, [x16, #56]
    82c8:	add	x16, x16, #0x38
    82cc:	br	x17

00000000000082d0 <PyUnicode_AsWideChar@plt>:
    82d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    82d4:	ldr	x17, [x16, #64]
    82d8:	add	x16, x16, #0x40
    82dc:	br	x17

00000000000082e0 <PyLong_AsLongLongAndOverflow@plt>:
    82e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    82e4:	ldr	x17, [x16, #72]
    82e8:	add	x16, x16, #0x48
    82ec:	br	x17

00000000000082f0 <PyErr_GetExcInfo@plt>:
    82f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    82f4:	ldr	x17, [x16, #80]
    82f8:	add	x16, x16, #0x50
    82fc:	br	x17

0000000000008300 <strlen@plt>:
    8300:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8304:	ldr	x17, [x16, #88]
    8308:	add	x16, x16, #0x58
    830c:	br	x17

0000000000008310 <PyTraceMalloc_Untrack@plt>:
    8310:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8314:	ldr	x17, [x16, #96]
    8318:	add	x16, x16, #0x60
    831c:	br	x17

0000000000008320 <PyModule_AddIntConstant@plt>:
    8320:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8324:	ldr	x17, [x16, #104]
    8328:	add	x16, x16, #0x68
    832c:	br	x17

0000000000008330 <raise@plt>:
    8330:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8334:	ldr	x17, [x16, #112]
    8338:	add	x16, x16, #0x70
    833c:	br	x17

0000000000008340 <_Py_EncodeLocaleEx@plt>:
    8340:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8344:	ldr	x17, [x16, #120]
    8348:	add	x16, x16, #0x78
    834c:	br	x17

0000000000008350 <PyThread_tss_create@plt>:
    8350:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8354:	ldr	x17, [x16, #128]
    8358:	add	x16, x16, #0x80
    835c:	br	x17

0000000000008360 <PyGILState_Release@plt>:
    8360:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8364:	ldr	x17, [x16, #136]
    8368:	add	x16, x16, #0x88
    836c:	br	x17

0000000000008370 <_PyBytes_Resize@plt>:
    8370:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8374:	ldr	x17, [x16, #144]
    8378:	add	x16, x16, #0x90
    837c:	br	x17

0000000000008380 <PyErr_Restore@plt>:
    8380:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8384:	ldr	x17, [x16, #152]
    8388:	add	x16, x16, #0x98
    838c:	br	x17

0000000000008390 <PyNumber_Lshift@plt>:
    8390:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8394:	ldr	x17, [x16, #160]
    8398:	add	x16, x16, #0xa0
    839c:	br	x17

00000000000083a0 <PyThread_tss_free@plt>:
    83a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    83a4:	ldr	x17, [x16, #168]
    83a8:	add	x16, x16, #0xa8
    83ac:	br	x17

00000000000083b0 <PyEval_RestoreThread@plt>:
    83b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    83b4:	ldr	x17, [x16, #176]
    83b8:	add	x16, x16, #0xb0
    83bc:	br	x17

00000000000083c0 <_Py_GetErrorHandler@plt>:
    83c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    83c4:	ldr	x17, [x16, #184]
    83c8:	add	x16, x16, #0xb8
    83cc:	br	x17

00000000000083d0 <PyMem_Free@plt>:
    83d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    83d4:	ldr	x17, [x16, #192]
    83d8:	add	x16, x16, #0xc0
    83dc:	br	x17

00000000000083e0 <_PyObject_IsFreed@plt>:
    83e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    83e4:	ldr	x17, [x16, #200]
    83e8:	add	x16, x16, #0xc8
    83ec:	br	x17

00000000000083f0 <PyCapsule_SetName@plt>:
    83f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    83f4:	ldr	x17, [x16, #208]
    83f8:	add	x16, x16, #0xd0
    83fc:	br	x17

0000000000008400 <PyUnicode_FromWideChar@plt>:
    8400:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8404:	ldr	x17, [x16, #216]
    8408:	add	x16, x16, #0xd8
    840c:	br	x17

0000000000008410 <PyErr_SetFromErrno@plt>:
    8410:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8414:	ldr	x17, [x16, #224]
    8418:	add	x16, x16, #0xe0
    841c:	br	x17

0000000000008420 <_PyTime_ObjectToTimeval@plt>:
    8420:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8424:	ldr	x17, [x16, #232]
    8428:	add	x16, x16, #0xe8
    842c:	br	x17

0000000000008430 <PyCFunction_NewEx@plt>:
    8430:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8434:	ldr	x17, [x16, #240]
    8438:	add	x16, x16, #0xf0
    843c:	br	x17

0000000000008440 <PyCapsule_GetName@plt>:
    8440:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8444:	ldr	x17, [x16, #248]
    8448:	add	x16, x16, #0xf8
    844c:	br	x17

0000000000008450 <PyLong_FromUnsignedLongLong@plt>:
    8450:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8454:	ldr	x17, [x16, #256]
    8458:	add	x16, x16, #0x100
    845c:	br	x17

0000000000008460 <PyThread_start_new_thread@plt>:
    8460:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8464:	ldr	x17, [x16, #264]
    8468:	add	x16, x16, #0x108
    846c:	br	x17

0000000000008470 <PyBuffer_Release@plt>:
    8470:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8474:	ldr	x17, [x16, #272]
    8478:	add	x16, x16, #0x110
    847c:	br	x17

0000000000008480 <PyLong_AsUnsignedLongLong@plt>:
    8480:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8484:	ldr	x17, [x16, #280]
    8488:	add	x16, x16, #0x118
    848c:	br	x17

0000000000008490 <PyNumber_Add@plt>:
    8490:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8494:	ldr	x17, [x16, #288]
    8498:	add	x16, x16, #0x120
    849c:	br	x17

00000000000084a0 <PyObject_GetAttrString@plt>:
    84a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    84a4:	ldr	x17, [x16, #296]
    84a8:	add	x16, x16, #0x128
    84ac:	br	x17

00000000000084b0 <ftell@plt>:
    84b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    84b4:	ldr	x17, [x16, #304]
    84b8:	add	x16, x16, #0x130
    84bc:	br	x17

00000000000084c0 <__cxa_finalize@plt>:
    84c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    84c4:	ldr	x17, [x16, #312]
    84c8:	add	x16, x16, #0x138
    84cc:	br	x17

00000000000084d0 <PyMem_RawMalloc@plt>:
    84d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    84d4:	ldr	x17, [x16, #320]
    84d8:	add	x16, x16, #0x140
    84dc:	br	x17

00000000000084e0 <sprintf@plt>:
    84e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    84e4:	ldr	x17, [x16, #328]
    84e8:	add	x16, x16, #0x148
    84ec:	br	x17

00000000000084f0 <PyLong_AsUnsignedLongLongMask@plt>:
    84f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    84f4:	ldr	x17, [x16, #336]
    84f8:	add	x16, x16, #0x150
    84fc:	br	x17

0000000000008500 <PyBytes_FromStringAndSize@plt>:
    8500:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8504:	ldr	x17, [x16, #344]
    8508:	add	x16, x16, #0x158
    850c:	br	x17

0000000000008510 <PyObject_SetAttrString@plt>:
    8510:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8514:	ldr	x17, [x16, #352]
    8518:	add	x16, x16, #0x160
    851c:	br	x17

0000000000008520 <PyThread_tss_is_created@plt>:
    8520:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8524:	ldr	x17, [x16, #360]
    8528:	add	x16, x16, #0x168
    852c:	br	x17

0000000000008530 <PyMapping_Keys@plt>:
    8530:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8534:	ldr	x17, [x16, #368]
    8538:	add	x16, x16, #0x170
    853c:	br	x17

0000000000008540 <Py_EndInterpreter@plt>:
    8540:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8544:	ldr	x17, [x16, #376]
    8548:	add	x16, x16, #0x178
    854c:	br	x17

0000000000008550 <PyThread_exit_thread@plt>:
    8550:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8554:	ldr	x17, [x16, #384]
    8558:	add	x16, x16, #0x180
    855c:	br	x17

0000000000008560 <_Py_Dealloc@plt>:
    8560:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8564:	ldr	x17, [x16, #392]
    8568:	add	x16, x16, #0x188
    856c:	br	x17

0000000000008570 <PyErr_NoMemory@plt>:
    8570:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8574:	ldr	x17, [x16, #400]
    8578:	add	x16, x16, #0x190
    857c:	br	x17

0000000000008580 <PyErr_SetObject@plt>:
    8580:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8584:	ldr	x17, [x16, #408]
    8588:	add	x16, x16, #0x198
    858c:	br	x17

0000000000008590 <PyObject_GC_Del@plt>:
    8590:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8594:	ldr	x17, [x16, #416]
    8598:	add	x16, x16, #0x1a0
    859c:	br	x17

00000000000085a0 <PyType_GetSlot@plt>:
    85a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    85a4:	ldr	x17, [x16, #424]
    85a8:	add	x16, x16, #0x1a8
    85ac:	br	x17

00000000000085b0 <_PyLong_Sign@plt>:
    85b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    85b4:	ldr	x17, [x16, #432]
    85b8:	add	x16, x16, #0x1b0
    85bc:	br	x17

00000000000085c0 <PyMarshal_WriteLongToFile@plt>:
    85c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    85c4:	ldr	x17, [x16, #440]
    85c8:	add	x16, x16, #0x1b8
    85cc:	br	x17

00000000000085d0 <PyErr_NewExceptionWithDoc@plt>:
    85d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    85d4:	ldr	x17, [x16, #448]
    85d8:	add	x16, x16, #0x1c0
    85dc:	br	x17

00000000000085e0 <PyThread_acquire_lock@plt>:
    85e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    85e4:	ldr	x17, [x16, #456]
    85e8:	add	x16, x16, #0x1c8
    85ec:	br	x17

00000000000085f0 <_PyLong_NumBits@plt>:
    85f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    85f4:	ldr	x17, [x16, #464]
    85f8:	add	x16, x16, #0x1d0
    85fc:	br	x17

0000000000008600 <PyObject_Str@plt>:
    8600:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8604:	ldr	x17, [x16, #472]
    8608:	add	x16, x16, #0x1d8
    860c:	br	x17

0000000000008610 <PyUnicode_FSConverter@plt>:
    8610:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8614:	ldr	x17, [x16, #480]
    8618:	add	x16, x16, #0x1e0
    861c:	br	x17

0000000000008620 <_PyGen_Send@plt>:
    8620:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8624:	ldr	x17, [x16, #488]
    8628:	add	x16, x16, #0x1e8
    862c:	br	x17

0000000000008630 <PyUnicode_CopyCharacters@plt>:
    8630:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8634:	ldr	x17, [x16, #496]
    8638:	add	x16, x16, #0x1f0
    863c:	br	x17

0000000000008640 <fclose@plt>:
    8640:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8644:	ldr	x17, [x16, #504]
    8648:	add	x16, x16, #0x1f8
    864c:	br	x17

0000000000008650 <_PyErr_SetKeyError@plt>:
    8650:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8654:	ldr	x17, [x16, #512]
    8658:	add	x16, x16, #0x200
    865c:	br	x17

0000000000008660 <malloc@plt>:
    8660:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8664:	ldr	x17, [x16, #520]
    8668:	add	x16, x16, #0x208
    866c:	br	x17

0000000000008670 <PyErr_SetString@plt>:
    8670:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8674:	ldr	x17, [x16, #528]
    8678:	add	x16, x16, #0x210
    867c:	br	x17

0000000000008680 <_PyObject_FastCallDict@plt>:
    8680:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8684:	ldr	x17, [x16, #536]
    8688:	add	x16, x16, #0x218
    868c:	br	x17

0000000000008690 <_PyTime_AsSecondsDouble@plt>:
    8690:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8694:	ldr	x17, [x16, #544]
    8698:	add	x16, x16, #0x220
    869c:	br	x17

00000000000086a0 <PyMethod_New@plt>:
    86a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    86a4:	ldr	x17, [x16, #552]
    86a8:	add	x16, x16, #0x228
    86ac:	br	x17

00000000000086b0 <PyException_GetTraceback@plt>:
    86b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    86b4:	ldr	x17, [x16, #560]
    86b8:	add	x16, x16, #0x230
    86bc:	br	x17

00000000000086c0 <PyObject_Malloc@plt>:
    86c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    86c4:	ldr	x17, [x16, #568]
    86c8:	add	x16, x16, #0x238
    86cc:	br	x17

00000000000086d0 <_PyTime_AsNanosecondsObject@plt>:
    86d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    86d4:	ldr	x17, [x16, #576]
    86d8:	add	x16, x16, #0x240
    86dc:	br	x17

00000000000086e0 <PyGILState_Ensure@plt>:
    86e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    86e4:	ldr	x17, [x16, #584]
    86e8:	add	x16, x16, #0x248
    86ec:	br	x17

00000000000086f0 <_PyObject_LookupSpecial@plt>:
    86f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    86f4:	ldr	x17, [x16, #592]
    86f8:	add	x16, x16, #0x250
    86fc:	br	x17

0000000000008700 <PyMem_SetAllocator@plt>:
    8700:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8704:	ldr	x17, [x16, #600]
    8708:	add	x16, x16, #0x258
    870c:	br	x17

0000000000008710 <_PyArg_UnpackStack@plt>:
    8710:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8714:	ldr	x17, [x16, #608]
    8718:	add	x16, x16, #0x260
    871c:	br	x17

0000000000008720 <PyErr_Print@plt>:
    8720:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8724:	ldr	x17, [x16, #616]
    8728:	add	x16, x16, #0x268
    872c:	br	x17

0000000000008730 <PyTraceMalloc_Track@plt>:
    8730:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8734:	ldr	x17, [x16, #624]
    8738:	add	x16, x16, #0x270
    873c:	br	x17

0000000000008740 <PyMem_Realloc@plt>:
    8740:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8744:	ldr	x17, [x16, #632]
    8748:	add	x16, x16, #0x278
    874c:	br	x17

0000000000008750 <PyErr_SetNone@plt>:
    8750:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8754:	ldr	x17, [x16, #640]
    8758:	add	x16, x16, #0x280
    875c:	br	x17

0000000000008760 <PyErr_ExceptionMatches@plt>:
    8760:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8764:	ldr	x17, [x16, #648]
    8768:	add	x16, x16, #0x288
    876c:	br	x17

0000000000008770 <memset@plt>:
    8770:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8774:	ldr	x17, [x16, #656]
    8778:	add	x16, x16, #0x290
    877c:	br	x17

0000000000008780 <gettimeofday@plt>:
    8780:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8784:	ldr	x17, [x16, #664]
    8788:	add	x16, x16, #0x298
    878c:	br	x17

0000000000008790 <Py_NewInterpreter@plt>:
    8790:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8794:	ldr	x17, [x16, #672]
    8798:	add	x16, x16, #0x2a0
    879c:	br	x17

00000000000087a0 <_Py_DecodeLocaleEx@plt>:
    87a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    87a4:	ldr	x17, [x16, #680]
    87a8:	add	x16, x16, #0x2a8
    87ac:	br	x17

00000000000087b0 <_PyTime_FromSecondsObject@plt>:
    87b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    87b4:	ldr	x17, [x16, #688]
    87b8:	add	x16, x16, #0x2b0
    87bc:	br	x17

00000000000087c0 <PyObject_Free@plt>:
    87c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    87c4:	ldr	x17, [x16, #696]
    87c8:	add	x16, x16, #0x2b8
    87cc:	br	x17

00000000000087d0 <_PyTime_AsMilliseconds@plt>:
    87d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    87d4:	ldr	x17, [x16, #704]
    87d8:	add	x16, x16, #0x2c0
    87dc:	br	x17

00000000000087e0 <PyLong_AsVoidPtr@plt>:
    87e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    87e4:	ldr	x17, [x16, #712]
    87e8:	add	x16, x16, #0x2c8
    87ec:	br	x17

00000000000087f0 <PyLong_FromSsize_t@plt>:
    87f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    87f4:	ldr	x17, [x16, #720]
    87f8:	add	x16, x16, #0x2d0
    87fc:	br	x17

0000000000008800 <PyFloat_FromDouble@plt>:
    8800:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8804:	ldr	x17, [x16, #728]
    8808:	add	x16, x16, #0x2d8
    880c:	br	x17

0000000000008810 <_PyArg_Parse_SizeT@plt>:
    8810:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8814:	ldr	x17, [x16, #736]
    8818:	add	x16, x16, #0x2e0
    881c:	br	x17

0000000000008820 <PyCapsule_Import@plt>:
    8820:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8824:	ldr	x17, [x16, #744]
    8828:	add	x16, x16, #0x2e8
    882c:	br	x17

0000000000008830 <PyType_Ready@plt>:
    8830:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8834:	ldr	x17, [x16, #752]
    8838:	add	x16, x16, #0x2f0
    883c:	br	x17

0000000000008840 <PyLong_FromLong@plt>:
    8840:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8844:	ldr	x17, [x16, #760]
    8848:	add	x16, x16, #0x2f8
    884c:	br	x17

0000000000008850 <PyLong_AsSsize_t@plt>:
    8850:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8854:	ldr	x17, [x16, #768]
    8858:	add	x16, x16, #0x300
    885c:	br	x17

0000000000008860 <PyOS_string_to_double@plt>:
    8860:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8864:	ldr	x17, [x16, #776]
    8868:	add	x16, x16, #0x308
    886c:	br	x17

0000000000008870 <PyBuffer_FillInfo@plt>:
    8870:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8874:	ldr	x17, [x16, #784]
    8878:	add	x16, x16, #0x310
    887c:	br	x17

0000000000008880 <PyLong_FromVoidPtr@plt>:
    8880:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8884:	ldr	x17, [x16, #792]
    8888:	add	x16, x16, #0x318
    888c:	br	x17

0000000000008890 <PyUnicode_FromUnicode@plt>:
    8890:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8894:	ldr	x17, [x16, #800]
    8898:	add	x16, x16, #0x320
    889c:	br	x17

00000000000088a0 <PyErr_NewException@plt>:
    88a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    88a4:	ldr	x17, [x16, #808]
    88a8:	add	x16, x16, #0x328
    88ac:	br	x17

00000000000088b0 <PyCodec_IncrementalDecoder@plt>:
    88b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    88b4:	ldr	x17, [x16, #816]
    88b8:	add	x16, x16, #0x330
    88bc:	br	x17

00000000000088c0 <PyErr_Clear@plt>:
    88c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    88c4:	ldr	x17, [x16, #824]
    88c8:	add	x16, x16, #0x338
    88cc:	br	x17

00000000000088d0 <PyBool_FromLong@plt>:
    88d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    88d4:	ldr	x17, [x16, #832]
    88d8:	add	x16, x16, #0x340
    88dc:	br	x17

00000000000088e0 <Py_AddPendingCall@plt>:
    88e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    88e4:	ldr	x17, [x16, #840]
    88e8:	add	x16, x16, #0x348
    88ec:	br	x17

00000000000088f0 <PyLong_AsUnsignedLongMask@plt>:
    88f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    88f4:	ldr	x17, [x16, #848]
    88f8:	add	x16, x16, #0x350
    88fc:	br	x17

0000000000008900 <__gmon_start__@plt>:
    8900:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8904:	ldr	x17, [x16, #856]
    8908:	add	x16, x16, #0x358
    890c:	br	x17

0000000000008910 <PyUnicode_AsUnicode@plt>:
    8910:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8914:	ldr	x17, [x16, #864]
    8918:	add	x16, x16, #0x360
    891c:	br	x17

0000000000008920 <PyTuple_New@plt>:
    8920:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8924:	ldr	x17, [x16, #872]
    8928:	add	x16, x16, #0x368
    892c:	br	x17

0000000000008930 <PyLong_AsSize_t@plt>:
    8930:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8934:	ldr	x17, [x16, #880]
    8938:	add	x16, x16, #0x370
    893c:	br	x17

0000000000008940 <PyThreadState_Get@plt>:
    8940:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8944:	ldr	x17, [x16, #888]
    8948:	add	x16, x16, #0x378
    894c:	br	x17

0000000000008950 <PyLong_AsLongAndOverflow@plt>:
    8950:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8954:	ldr	x17, [x16, #896]
    8958:	add	x16, x16, #0x380
    895c:	br	x17

0000000000008960 <PyArg_UnpackTuple@plt>:
    8960:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8964:	ldr	x17, [x16, #904]
    8968:	add	x16, x16, #0x388
    896c:	br	x17

0000000000008970 <PyBytes_FromString@plt>:
    8970:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8974:	ldr	x17, [x16, #912]
    8978:	add	x16, x16, #0x390
    897c:	br	x17

0000000000008980 <PyErr_Occurred@plt>:
    8980:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8984:	ldr	x17, [x16, #920]
    8988:	add	x16, x16, #0x398
    898c:	br	x17

0000000000008990 <PyModule_Create2@plt>:
    8990:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8994:	ldr	x17, [x16, #928]
    8998:	add	x16, x16, #0x3a0
    899c:	br	x17

00000000000089a0 <PyLong_AsLong@plt>:
    89a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    89a4:	ldr	x17, [x16, #936]
    89a8:	add	x16, x16, #0x3a8
    89ac:	br	x17

00000000000089b0 <PyImport_ImportModule@plt>:
    89b0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    89b4:	ldr	x17, [x16, #944]
    89b8:	add	x16, x16, #0x3b0
    89bc:	br	x17

00000000000089c0 <_PyErr_WriteUnraisableMsg@plt>:
    89c0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    89c4:	ldr	x17, [x16, #952]
    89c8:	add	x16, x16, #0x3b8
    89cc:	br	x17

00000000000089d0 <_PyDict_GetItem_KnownHash@plt>:
    89d0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    89d4:	ldr	x17, [x16, #960]
    89d8:	add	x16, x16, #0x3c0
    89dc:	br	x17

00000000000089e0 <PyObject_CallObject@plt>:
    89e0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    89e4:	ldr	x17, [x16, #968]
    89e8:	add	x16, x16, #0x3c8
    89ec:	br	x17

00000000000089f0 <PyState_FindModule@plt>:
    89f0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    89f4:	ldr	x17, [x16, #976]
    89f8:	add	x16, x16, #0x3d0
    89fc:	br	x17

0000000000008a00 <PyUnicode_AsUCS4@plt>:
    8a00:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a04:	ldr	x17, [x16, #984]
    8a08:	add	x16, x16, #0x3d8
    8a0c:	br	x17

0000000000008a10 <PyMem_RawFree@plt>:
    8a10:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a14:	ldr	x17, [x16, #992]
    8a18:	add	x16, x16, #0x3e0
    8a1c:	br	x17

0000000000008a20 <PyList_Reverse@plt>:
    8a20:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a24:	ldr	x17, [x16, #1000]
    8a28:	add	x16, x16, #0x3e8
    8a2c:	br	x17

0000000000008a30 <_PyUnicode_EqualToASCIIString@plt>:
    8a30:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a34:	ldr	x17, [x16, #1008]
    8a38:	add	x16, x16, #0x3f0
    8a3c:	br	x17

0000000000008a40 <_PyTime_AsTimespec@plt>:
    8a40:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a44:	ldr	x17, [x16, #1016]
    8a48:	add	x16, x16, #0x3f8
    8a4c:	br	x17

0000000000008a50 <PyCapsule_SetDestructor@plt>:
    8a50:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a54:	ldr	x17, [x16, #1024]
    8a58:	add	x16, x16, #0x400
    8a5c:	br	x17

0000000000008a60 <PyCodec_IncrementalEncoder@plt>:
    8a60:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a64:	ldr	x17, [x16, #1032]
    8a68:	add	x16, x16, #0x408
    8a6c:	br	x17

0000000000008a70 <_PyArg_ParseTuple_SizeT@plt>:
    8a70:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a74:	ldr	x17, [x16, #1040]
    8a78:	add	x16, x16, #0x410
    8a7c:	br	x17

0000000000008a80 <_Py_CheckFunctionResult@plt>:
    8a80:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a84:	ldr	x17, [x16, #1048]
    8a88:	add	x16, x16, #0x418
    8a8c:	br	x17

0000000000008a90 <PyUnicode_CompareWithASCIIString@plt>:
    8a90:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8a94:	ldr	x17, [x16, #1056]
    8a98:	add	x16, x16, #0x420
    8a9c:	br	x17

0000000000008aa0 <free@plt>:
    8aa0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8aa4:	ldr	x17, [x16, #1064]
    8aa8:	add	x16, x16, #0x428
    8aac:	br	x17

0000000000008ab0 <Py_FatalError@plt>:
    8ab0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ab4:	ldr	x17, [x16, #1072]
    8ab8:	add	x16, x16, #0x430
    8abc:	br	x17

0000000000008ac0 <PyMarshal_WriteObjectToFile@plt>:
    8ac0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ac4:	ldr	x17, [x16, #1080]
    8ac8:	add	x16, x16, #0x438
    8acc:	br	x17

0000000000008ad0 <PyThread_allocate_lock@plt>:
    8ad0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ad4:	ldr	x17, [x16, #1088]
    8ad8:	add	x16, x16, #0x440
    8adc:	br	x17

0000000000008ae0 <PyObject_Realloc@plt>:
    8ae0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ae4:	ldr	x17, [x16, #1096]
    8ae8:	add	x16, x16, #0x448
    8aec:	br	x17

0000000000008af0 <PyUnicode_EncodeDecimal@plt>:
    8af0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8af4:	ldr	x17, [x16, #1104]
    8af8:	add	x16, x16, #0x450
    8afc:	br	x17

0000000000008b00 <PyObject_Hash@plt>:
    8b00:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b04:	ldr	x17, [x16, #1112]
    8b08:	add	x16, x16, #0x458
    8b0c:	br	x17

0000000000008b10 <_PyTime_ObjectToTimespec@plt>:
    8b10:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b14:	ldr	x17, [x16, #1120]
    8b18:	add	x16, x16, #0x460
    8b1c:	br	x17

0000000000008b20 <_PyTraceMalloc_GetTraceback@plt>:
    8b20:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b24:	ldr	x17, [x16, #1128]
    8b28:	add	x16, x16, #0x468
    8b2c:	br	x17

0000000000008b30 <PyUnicode_Compare@plt>:
    8b30:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b34:	ldr	x17, [x16, #1136]
    8b38:	add	x16, x16, #0x470
    8b3c:	br	x17

0000000000008b40 <Py_IncRef@plt>:
    8b40:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b44:	ldr	x17, [x16, #1144]
    8b48:	add	x16, x16, #0x478
    8b4c:	br	x17

0000000000008b50 <PyCapsule_GetContext@plt>:
    8b50:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b54:	ldr	x17, [x16, #1152]
    8b58:	add	x16, x16, #0x480
    8b5c:	br	x17

0000000000008b60 <PyNumber_Rshift@plt>:
    8b60:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b64:	ldr	x17, [x16, #1160]
    8b68:	add	x16, x16, #0x488
    8b6c:	br	x17

0000000000008b70 <PyMem_GetAllocator@plt>:
    8b70:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b74:	ldr	x17, [x16, #1168]
    8b78:	add	x16, x16, #0x490
    8b7c:	br	x17

0000000000008b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    8b80:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b84:	ldr	x17, [x16, #1176]
    8b88:	add	x16, x16, #0x498
    8b8c:	br	x17

0000000000008b90 <PyThread_release_lock@plt>:
    8b90:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8b94:	ldr	x17, [x16, #1184]
    8b98:	add	x16, x16, #0x4a0
    8b9c:	br	x17

0000000000008ba0 <PyThread_tss_alloc@plt>:
    8ba0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ba4:	ldr	x17, [x16, #1192]
    8ba8:	add	x16, x16, #0x4a8
    8bac:	br	x17

0000000000008bb0 <PyVectorcall_Call@plt>:
    8bb0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8bb4:	ldr	x17, [x16, #1200]
    8bb8:	add	x16, x16, #0x4b0
    8bbc:	br	x17

0000000000008bc0 <_PyTime_ObjectToTime_t@plt>:
    8bc0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8bc4:	ldr	x17, [x16, #1208]
    8bc8:	add	x16, x16, #0x4b8
    8bcc:	br	x17

0000000000008bd0 <PyLong_AsDouble@plt>:
    8bd0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8bd4:	ldr	x17, [x16, #1216]
    8bd8:	add	x16, x16, #0x4c0
    8bdc:	br	x17

0000000000008be0 <Py_DecRef@plt>:
    8be0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8be4:	ldr	x17, [x16, #1224]
    8be8:	add	x16, x16, #0x4c8
    8bec:	br	x17

0000000000008bf0 <PyUnicode_FromKindAndData@plt>:
    8bf0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8bf4:	ldr	x17, [x16, #1232]
    8bf8:	add	x16, x16, #0x4d0
    8bfc:	br	x17

0000000000008c00 <PyThread_tss_set@plt>:
    8c00:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c04:	ldr	x17, [x16, #1240]
    8c08:	add	x16, x16, #0x4d8
    8c0c:	br	x17

0000000000008c10 <_PyTraceMalloc_NewReference@plt>:
    8c10:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c14:	ldr	x17, [x16, #1248]
    8c18:	add	x16, x16, #0x4e0
    8c1c:	br	x17

0000000000008c20 <PyDict_New@plt>:
    8c20:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c24:	ldr	x17, [x16, #1256]
    8c28:	add	x16, x16, #0x4e8
    8c2c:	br	x17

0000000000008c30 <PyCallable_Check@plt>:
    8c30:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c34:	ldr	x17, [x16, #1264]
    8c38:	add	x16, x16, #0x4f0
    8c3c:	br	x17

0000000000008c40 <PyObject_GetBuffer@plt>:
    8c40:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c44:	ldr	x17, [x16, #1272]
    8c48:	add	x16, x16, #0x4f8
    8c4c:	br	x17

0000000000008c50 <PyLong_AsUnsignedLong@plt>:
    8c50:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c54:	ldr	x17, [x16, #1280]
    8c58:	add	x16, x16, #0x500
    8c5c:	br	x17

0000000000008c60 <PyDict_Next@plt>:
    8c60:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c64:	ldr	x17, [x16, #1288]
    8c68:	add	x16, x16, #0x508
    8c6c:	br	x17

0000000000008c70 <PyUnicode_AsWideCharString@plt>:
    8c70:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c74:	ldr	x17, [x16, #1296]
    8c78:	add	x16, x16, #0x510
    8c7c:	br	x17

0000000000008c80 <PyLong_FromUnsignedLong@plt>:
    8c80:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c84:	ldr	x17, [x16, #1304]
    8c88:	add	x16, x16, #0x518
    8c8c:	br	x17

0000000000008c90 <PyUnicode_Fill@plt>:
    8c90:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8c94:	ldr	x17, [x16, #1312]
    8c98:	add	x16, x16, #0x520
    8c9c:	br	x17

0000000000008ca0 <PyUnicode_AsUTF8@plt>:
    8ca0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ca4:	ldr	x17, [x16, #1320]
    8ca8:	add	x16, x16, #0x528
    8cac:	br	x17

0000000000008cb0 <strcpy@plt>:
    8cb0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8cb4:	ldr	x17, [x16, #1328]
    8cb8:	add	x16, x16, #0x530
    8cbc:	br	x17

0000000000008cc0 <PyBuffer_FromContiguous@plt>:
    8cc0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8cc4:	ldr	x17, [x16, #1336]
    8cc8:	add	x16, x16, #0x538
    8ccc:	br	x17

0000000000008cd0 <fopen64@plt>:
    8cd0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8cd4:	ldr	x17, [x16, #1344]
    8cd8:	add	x16, x16, #0x540
    8cdc:	br	x17

0000000000008ce0 <PyErr_Fetch@plt>:
    8ce0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ce4:	ldr	x17, [x16, #1352]
    8ce8:	add	x16, x16, #0x548
    8cec:	br	x17

0000000000008cf0 <_PyObject_New@plt>:
    8cf0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8cf4:	ldr	x17, [x16, #1360]
    8cf8:	add	x16, x16, #0x550
    8cfc:	br	x17

0000000000008d00 <PyCapsule_SetPointer@plt>:
    8d00:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d04:	ldr	x17, [x16, #1368]
    8d08:	add	x16, x16, #0x558
    8d0c:	br	x17

0000000000008d10 <PyUnicode_FromString@plt>:
    8d10:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d14:	ldr	x17, [x16, #1376]
    8d18:	add	x16, x16, #0x560
    8d1c:	br	x17

0000000000008d20 <PyState_AddModule@plt>:
    8d20:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d24:	ldr	x17, [x16, #1384]
    8d28:	add	x16, x16, #0x568
    8d2c:	br	x17

0000000000008d30 <PyMem_RawCalloc@plt>:
    8d30:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d34:	ldr	x17, [x16, #1392]
    8d38:	add	x16, x16, #0x570
    8d3c:	br	x17

0000000000008d40 <PyMarshal_ReadObjectFromFile@plt>:
    8d40:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d44:	ldr	x17, [x16, #1400]
    8d48:	add	x16, x16, #0x578
    8d4c:	br	x17

0000000000008d50 <PyEval_SaveThread@plt>:
    8d50:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d54:	ldr	x17, [x16, #1408]
    8d58:	add	x16, x16, #0x580
    8d5c:	br	x17

0000000000008d60 <PyModule_AddObject@plt>:
    8d60:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d64:	ldr	x17, [x16, #1416]
    8d68:	add	x16, x16, #0x588
    8d6c:	br	x17

0000000000008d70 <_PyTime_AsMicroseconds@plt>:
    8d70:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d74:	ldr	x17, [x16, #1424]
    8d78:	add	x16, x16, #0x590
    8d7c:	br	x17

0000000000008d80 <PyDict_SetItem@plt>:
    8d80:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d84:	ldr	x17, [x16, #1432]
    8d88:	add	x16, x16, #0x598
    8d8c:	br	x17

0000000000008d90 <PyThread_tss_delete@plt>:
    8d90:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8d94:	ldr	x17, [x16, #1440]
    8d98:	add	x16, x16, #0x5a0
    8d9c:	br	x17

0000000000008da0 <_PyContext_NewHamtForTests@plt>:
    8da0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8da4:	ldr	x17, [x16, #1448]
    8da8:	add	x16, x16, #0x5a8
    8dac:	br	x17

0000000000008db0 <PyObject_Repr@plt>:
    8db0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8db4:	ldr	x17, [x16, #1456]
    8db8:	add	x16, x16, #0x5b0
    8dbc:	br	x17

0000000000008dc0 <PyMapping_Values@plt>:
    8dc0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8dc4:	ldr	x17, [x16, #1464]
    8dc8:	add	x16, x16, #0x5b8
    8dcc:	br	x17

0000000000008dd0 <_PyTime_AsTimeval@plt>:
    8dd0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8dd4:	ldr	x17, [x16, #1472]
    8dd8:	add	x16, x16, #0x5c0
    8ddc:	br	x17

0000000000008de0 <_PyMem_GetCurrentAllocatorName@plt>:
    8de0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8de4:	ldr	x17, [x16, #1480]
    8de8:	add	x16, x16, #0x5c8
    8dec:	br	x17

0000000000008df0 <PyLong_AsLongLong@plt>:
    8df0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8df4:	ldr	x17, [x16, #1488]
    8df8:	add	x16, x16, #0x5d0
    8dfc:	br	x17

0000000000008e00 <_PyTime_FromSeconds@plt>:
    8e00:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e04:	ldr	x17, [x16, #1496]
    8e08:	add	x16, x16, #0x5d8
    8e0c:	br	x17

0000000000008e10 <PyCapsule_New@plt>:
    8e10:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e14:	ldr	x17, [x16, #1504]
    8e18:	add	x16, x16, #0x5e0
    8e1c:	br	x17

0000000000008e20 <PyType_IsSubtype@plt>:
    8e20:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e24:	ldr	x17, [x16, #1512]
    8e28:	add	x16, x16, #0x5e8
    8e2c:	br	x17

0000000000008e30 <PyErr_Display@plt>:
    8e30:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e34:	ldr	x17, [x16, #1520]
    8e38:	add	x16, x16, #0x5f0
    8e3c:	br	x17

0000000000008e40 <PyStructSequence_NewType@plt>:
    8e40:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e44:	ldr	x17, [x16, #1528]
    8e48:	add	x16, x16, #0x5f8
    8e4c:	br	x17

0000000000008e50 <PyUnicode_Decode@plt>:
    8e50:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e54:	ldr	x17, [x16, #1536]
    8e58:	add	x16, x16, #0x600
    8e5c:	br	x17

0000000000008e60 <PyErr_Format@plt>:
    8e60:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e64:	ldr	x17, [x16, #1544]
    8e68:	add	x16, x16, #0x608
    8e6c:	br	x17

0000000000008e70 <PyCapsule_GetPointer@plt>:
    8e70:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e74:	ldr	x17, [x16, #1552]
    8e78:	add	x16, x16, #0x610
    8e7c:	br	x17

0000000000008e80 <_PyTime_FromNanosecondsObject@plt>:
    8e80:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e84:	ldr	x17, [x16, #1560]
    8e88:	add	x16, x16, #0x618
    8e8c:	br	x17

0000000000008e90 <PyComplex_FromCComplex@plt>:
    8e90:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8e94:	ldr	x17, [x16, #1568]
    8e98:	add	x16, x16, #0x620
    8e9c:	br	x17

0000000000008ea0 <_Py_BuildValue_SizeT@plt>:
    8ea0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ea4:	ldr	x17, [x16, #1576]
    8ea8:	add	x16, x16, #0x628
    8eac:	br	x17

0000000000008eb0 <PyUnicode_FromStringAndSize@plt>:
    8eb0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8eb4:	ldr	x17, [x16, #1584]
    8eb8:	add	x16, x16, #0x630
    8ebc:	br	x17

0000000000008ec0 <PyCapsule_GetDestructor@plt>:
    8ec0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ec4:	ldr	x17, [x16, #1592]
    8ec8:	add	x16, x16, #0x638
    8ecc:	br	x17

0000000000008ed0 <PyRun_SimpleStringFlags@plt>:
    8ed0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ed4:	ldr	x17, [x16, #1600]
    8ed8:	add	x16, x16, #0x640
    8edc:	br	x17

0000000000008ee0 <PyTraceBack_Print@plt>:
    8ee0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ee4:	ldr	x17, [x16, #1608]
    8ee8:	add	x16, x16, #0x648
    8eec:	br	x17

0000000000008ef0 <PyLong_FromLongLong@plt>:
    8ef0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ef4:	ldr	x17, [x16, #1616]
    8ef8:	add	x16, x16, #0x650
    8efc:	br	x17

0000000000008f00 <_PyObject_MakeTpCall@plt>:
    8f00:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f04:	ldr	x17, [x16, #1624]
    8f08:	add	x16, x16, #0x658
    8f0c:	br	x17

0000000000008f10 <PyThread_tss_get@plt>:
    8f10:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f14:	ldr	x17, [x16, #1632]
    8f18:	add	x16, x16, #0x660
    8f1c:	br	x17

0000000000008f20 <PyMem_Calloc@plt>:
    8f20:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f24:	ldr	x17, [x16, #1640]
    8f28:	add	x16, x16, #0x668
    8f2c:	br	x17

0000000000008f30 <printf@plt>:
    8f30:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f34:	ldr	x17, [x16, #1648]
    8f38:	add	x16, x16, #0x670
    8f3c:	br	x17

0000000000008f40 <__errno_location@plt>:
    8f40:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f44:	ldr	x17, [x16, #1656]
    8f48:	add	x16, x16, #0x678
    8f4c:	br	x17

0000000000008f50 <PyType_FromSpecWithBases@plt>:
    8f50:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f54:	ldr	x17, [x16, #1664]
    8f58:	add	x16, x16, #0x680
    8f5c:	br	x17

0000000000008f60 <PyMarshal_ReadShortFromFile@plt>:
    8f60:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f64:	ldr	x17, [x16, #1672]
    8f68:	add	x16, x16, #0x688
    8f6c:	br	x17

0000000000008f70 <PyEval_InitThreads@plt>:
    8f70:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f74:	ldr	x17, [x16, #1680]
    8f78:	add	x16, x16, #0x690
    8f7c:	br	x17

0000000000008f80 <PyCapsule_SetContext@plt>:
    8f80:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f84:	ldr	x17, [x16, #1688]
    8f88:	add	x16, x16, #0x698
    8f8c:	br	x17

0000000000008f90 <PyLong_FromString@plt>:
    8f90:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8f94:	ldr	x17, [x16, #1696]
    8f98:	add	x16, x16, #0x6a0
    8f9c:	br	x17

0000000000008fa0 <PyErr_SetExcInfo@plt>:
    8fa0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8fa4:	ldr	x17, [x16, #1704]
    8fa8:	add	x16, x16, #0x6a8
    8fac:	br	x17

0000000000008fb0 <PyUnicode_FindChar@plt>:
    8fb0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8fb4:	ldr	x17, [x16, #1712]
    8fb8:	add	x16, x16, #0x6b0
    8fbc:	br	x17

0000000000008fc0 <PyMem_Malloc@plt>:
    8fc0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8fc4:	ldr	x17, [x16, #1720]
    8fc8:	add	x16, x16, #0x6b8
    8fcc:	br	x17

0000000000008fd0 <PyThreadState_Swap@plt>:
    8fd0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8fd4:	ldr	x17, [x16, #1728]
    8fd8:	add	x16, x16, #0x6c0
    8fdc:	br	x17

0000000000008fe0 <PyNumber_Subtract@plt>:
    8fe0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8fe4:	ldr	x17, [x16, #1736]
    8fe8:	add	x16, x16, #0x6c8
    8fec:	br	x17

0000000000008ff0 <PyType_FromSpec@plt>:
    8ff0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    8ff4:	ldr	x17, [x16, #1744]
    8ff8:	add	x16, x16, #0x6d0
    8ffc:	br	x17

0000000000009000 <_PyLong_FromTime_t@plt>:
    9000:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9004:	ldr	x17, [x16, #1752]
    9008:	add	x16, x16, #0x6d8
    900c:	br	x17

0000000000009010 <PyUnicode_New@plt>:
    9010:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9014:	ldr	x17, [x16, #1760]
    9018:	add	x16, x16, #0x6e0
    901c:	br	x17

0000000000009020 <PyUnicode_TransformDecimalToASCII@plt>:
    9020:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9024:	ldr	x17, [x16, #1768]
    9028:	add	x16, x16, #0x6e8
    902c:	br	x17

0000000000009030 <PyThread_free_lock@plt>:
    9030:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9034:	ldr	x17, [x16, #1776]
    9038:	add	x16, x16, #0x6f0
    903c:	br	x17

0000000000009040 <PyTuple_Pack@plt>:
    9040:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9044:	ldr	x17, [x16, #1784]
    9048:	add	x16, x16, #0x6f8
    904c:	br	x17

0000000000009050 <PyMemoryView_FromBuffer@plt>:
    9050:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9054:	ldr	x17, [x16, #1792]
    9058:	add	x16, x16, #0x700
    905c:	br	x17

0000000000009060 <PyCode_NewEmpty@plt>:
    9060:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9064:	ldr	x17, [x16, #1800]
    9068:	add	x16, x16, #0x708
    906c:	br	x17

0000000000009070 <PyObject_GC_UnTrack@plt>:
    9070:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9074:	ldr	x17, [x16, #1808]
    9078:	add	x16, x16, #0x710
    907c:	br	x17

0000000000009080 <PyErr_WriteUnraisable@plt>:
    9080:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9084:	ldr	x17, [x16, #1816]
    9088:	add	x16, x16, #0x718
    908c:	br	x17

0000000000009090 <PyMem_RawRealloc@plt>:
    9090:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    9094:	ldr	x17, [x16, #1824]
    9098:	add	x16, x16, #0x720
    909c:	br	x17

00000000000090a0 <PyObject_Calloc@plt>:
    90a0:	adrp	x16, 26000 <memcpy@GLIBC_2.17>
    90a4:	ldr	x17, [x16, #1832]
    90a8:	add	x16, x16, #0x728
    90ac:	br	x17

Disassembly of section .text:

00000000000090b0 <MyList_dealloc@@Base-0xd4>:
    90b0:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
    90b4:	ldr	x0, [x0, #3992]
    90b8:	cbz	x0, 90c0 <PyObject_Calloc@plt+0x20>
    90bc:	b	8900 <__gmon_start__@plt>
    90c0:	ret
    90c4:	nop
    90c8:	adrp	x0, 29000 <PyInit__testcapi@@Base+0x1fe40>
    90cc:	add	x0, x0, #0xdb8
    90d0:	adrp	x1, 29000 <PyInit__testcapi@@Base+0x1fe40>
    90d4:	add	x1, x1, #0xdb8
    90d8:	cmp	x1, x0
    90dc:	b.eq	90f4 <PyObject_Calloc@plt+0x54>  // b.none
    90e0:	adrp	x1, 25000 <PyInit__testcapi@@Base+0x1be40>
    90e4:	ldr	x1, [x1, #3856]
    90e8:	cbz	x1, 90f4 <PyObject_Calloc@plt+0x54>
    90ec:	mov	x16, x1
    90f0:	br	x16
    90f4:	ret
    90f8:	adrp	x0, 29000 <PyInit__testcapi@@Base+0x1fe40>
    90fc:	add	x0, x0, #0xdb8
    9100:	adrp	x1, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9104:	add	x1, x1, #0xdb8
    9108:	sub	x1, x1, x0
    910c:	lsr	x2, x1, #63
    9110:	add	x1, x2, x1, asr #3
    9114:	cmp	xzr, x1, asr #1
    9118:	asr	x1, x1, #1
    911c:	b.eq	9134 <PyObject_Calloc@plt+0x94>  // b.none
    9120:	adrp	x2, 25000 <PyInit__testcapi@@Base+0x1be40>
    9124:	ldr	x2, [x2, #4056]
    9128:	cbz	x2, 9134 <PyObject_Calloc@plt+0x94>
    912c:	mov	x16, x2
    9130:	br	x16
    9134:	ret
    9138:	stp	x29, x30, [sp, #-32]!
    913c:	mov	x29, sp
    9140:	str	x19, [sp, #16]
    9144:	adrp	x19, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9148:	ldrb	w0, [x19, #3512]
    914c:	cbnz	w0, 9174 <PyObject_Calloc@plt+0xd4>
    9150:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
    9154:	ldr	x0, [x0, #3888]
    9158:	cbz	x0, 9168 <PyObject_Calloc@plt+0xc8>
    915c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce40>
    9160:	ldr	x0, [x0, #1840]
    9164:	bl	84c0 <__cxa_finalize@plt>
    9168:	bl	90c8 <PyObject_Calloc@plt+0x28>
    916c:	mov	w0, #0x1                   	// #1
    9170:	strb	w0, [x19, #3512]
    9174:	ldr	x19, [sp, #16]
    9178:	ldp	x29, x30, [sp], #32
    917c:	ret
    9180:	b	90f8 <PyObject_Calloc@plt+0x58>

0000000000009184 <MyList_dealloc@@Base>:
    9184:	stp	x29, x30, [sp, #-16]!
    9188:	mov	x29, sp
    918c:	ldr	w8, [x0, #40]
    9190:	cbnz	w8, 91b4 <MyList_dealloc@@Base+0x30>
    9194:	mov	w8, #0x1                   	// #1
    9198:	str	w8, [x0, #40]
    919c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    91a0:	ldr	x8, [x8, #4064]
    91a4:	ldr	x8, [x8, #48]
    91a8:	blr	x8
    91ac:	ldp	x29, x30, [sp], #16
    91b0:	ret
    91b4:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    91b8:	add	x0, x0, #0x7e6
    91bc:	bl	8ab0 <Py_FatalError@plt>

00000000000091c0 <PyInit__testcapi@@Base>:
    91c0:	stp	x29, x30, [sp, #-48]!
    91c4:	str	x21, [sp, #16]
    91c8:	stp	x20, x19, [sp, #32]
    91cc:	mov	x29, sp
    91d0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce40>
    91d4:	add	x0, x0, #0x738
    91d8:	mov	w1, #0x3f5                 	// #1013
    91dc:	bl	8990 <PyModule_Create2@plt>
    91e0:	mov	x19, x0
    91e4:	cbz	x0, 9884 <PyInit__testcapi@@Base+0x6c4>
    91e8:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    91ec:	ldr	x9, [x9, #4008]
    91f0:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce40>
    91f4:	add	x20, x20, #0x940
    91f8:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce40>
    91fc:	mov	x0, x20
    9200:	str	x9, [x8, #1960]
    9204:	str	x9, [x20, #8]
    9208:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    920c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9210:	add	x1, x1, #0x808
    9214:	mov	x0, x19
    9218:	mov	x2, x20
    921c:	bl	8d60 <PyModule_AddObject@plt>
    9220:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce40>
    9224:	add	x0, x0, #0xae0
    9228:	bl	8830 <PyType_Ready@plt>
    922c:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    9230:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce40>
    9234:	add	x20, x20, #0xae0
    9238:	mov	x0, x20
    923c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9240:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9244:	add	x1, x1, #0x820
    9248:	mov	x0, x19
    924c:	mov	x2, x20
    9250:	bl	8d60 <PyModule_AddObject@plt>
    9254:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce40>
    9258:	add	x0, x0, #0xc80
    925c:	bl	8830 <PyType_Ready@plt>
    9260:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    9264:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce40>
    9268:	add	x20, x20, #0xc80
    926c:	mov	x0, x20
    9270:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9274:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9278:	add	x1, x1, #0x82b
    927c:	mov	x0, x19
    9280:	mov	x2, x20
    9284:	bl	8d60 <PyModule_AddObject@plt>
    9288:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce40>
    928c:	add	x0, x0, #0xe20
    9290:	bl	8830 <PyType_Ready@plt>
    9294:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    9298:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce40>
    929c:	add	x20, x20, #0xe20
    92a0:	mov	x0, x20
    92a4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    92a8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    92ac:	add	x1, x1, #0x834
    92b0:	mov	x0, x19
    92b4:	mov	x2, x20
    92b8:	bl	8d60 <PyModule_AddObject@plt>
    92bc:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    92c0:	ldr	x8, [x8, #4064]
    92c4:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce40>
    92c8:	add	x20, x20, #0xfc0
    92cc:	mov	x0, x20
    92d0:	str	x8, [x20, #256]
    92d4:	bl	8830 <PyType_Ready@plt>
    92d8:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    92dc:	mov	x0, x20
    92e0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    92e4:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    92e8:	add	x1, x1, #0x83e
    92ec:	mov	x0, x19
    92f0:	mov	x2, x20
    92f4:	bl	8d60 <PyModule_AddObject@plt>
    92f8:	str	xzr, [x20, #408]
    92fc:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de40>
    9300:	add	x20, x20, #0x160
    9304:	mov	x0, x20
    9308:	bl	8830 <PyType_Ready@plt>
    930c:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    9310:	mov	x0, x20
    9314:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9318:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    931c:	add	x1, x1, #0x845
    9320:	mov	x0, x19
    9324:	mov	x2, x20
    9328:	bl	8d60 <PyModule_AddObject@plt>
    932c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    9330:	add	x0, x0, #0x300
    9334:	str	x20, [x0, #256]
    9338:	bl	8830 <PyType_Ready@plt>
    933c:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    9340:	adrp	x21, 27000 <PyInit__testcapi@@Base+0x1de40>
    9344:	add	x21, x21, #0x300
    9348:	mov	x0, x21
    934c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9350:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9354:	add	x1, x1, #0x85a
    9358:	mov	x0, x19
    935c:	mov	x2, x21
    9360:	bl	8d60 <PyModule_AddObject@plt>
    9364:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    9368:	add	x0, x0, #0x4a0
    936c:	str	x20, [x0, #256]
    9370:	bl	8830 <PyType_Ready@plt>
    9374:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    9378:	adrp	x21, 27000 <PyInit__testcapi@@Base+0x1de40>
    937c:	add	x21, x21, #0x4a0
    9380:	mov	x0, x21
    9384:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9388:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    938c:	add	x1, x1, #0x872
    9390:	mov	x0, x19
    9394:	mov	x2, x21
    9398:	bl	8d60 <PyModule_AddObject@plt>
    939c:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    93a0:	add	x0, x0, #0x640
    93a4:	str	x20, [x0, #256]
    93a8:	bl	8830 <PyType_Ready@plt>
    93ac:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    93b0:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de40>
    93b4:	add	x20, x20, #0x640
    93b8:	mov	x0, x20
    93bc:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    93c0:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    93c4:	add	x1, x1, #0x889
    93c8:	mov	x0, x19
    93cc:	mov	x2, x20
    93d0:	bl	8d60 <PyModule_AddObject@plt>
    93d4:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    93d8:	add	x0, x0, #0x7e0
    93dc:	bl	8830 <PyType_Ready@plt>
    93e0:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    93e4:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de40>
    93e8:	add	x20, x20, #0x7e0
    93ec:	mov	x0, x20
    93f0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    93f4:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    93f8:	add	x1, x1, #0x89b
    93fc:	mov	x0, x19
    9400:	mov	x2, x20
    9404:	bl	8d60 <PyModule_AddObject@plt>
    9408:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    940c:	add	x0, x0, #0x980
    9410:	bl	8830 <PyType_Ready@plt>
    9414:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    9418:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de40>
    941c:	add	x20, x20, #0x980
    9420:	mov	x0, x20
    9424:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9428:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    942c:	add	x1, x1, #0x8a8
    9430:	mov	x0, x19
    9434:	mov	x2, x20
    9438:	bl	8d60 <PyModule_AddObject@plt>
    943c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    9440:	ldr	x8, [x8, #3936]
    9444:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    9448:	add	x0, x0, #0xb20
    944c:	ldr	x8, [x8]
    9450:	str	x8, [x0, #256]
    9454:	bl	8830 <PyType_Ready@plt>
    9458:	tbnz	w0, #31, 9880 <PyInit__testcapi@@Base+0x6c0>
    945c:	adrp	x20, 27000 <PyInit__testcapi@@Base+0x1de40>
    9460:	add	x20, x20, #0xb20
    9464:	mov	x0, x20
    9468:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    946c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9470:	add	x1, x1, #0x8b0
    9474:	mov	x0, x19
    9478:	mov	x2, x20
    947c:	bl	8d60 <PyModule_AddObject@plt>
    9480:	mov	w0, #0xff                  	// #255
    9484:	bl	8840 <PyLong_FromLong@plt>
    9488:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    948c:	mov	x2, x0
    9490:	add	x1, x1, #0x8d3
    9494:	mov	x0, x19
    9498:	bl	8d60 <PyModule_AddObject@plt>
    949c:	mov	x0, xzr
    94a0:	bl	8840 <PyLong_FromLong@plt>
    94a4:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    94a8:	mov	x2, x0
    94ac:	add	x1, x1, #0x8c9
    94b0:	mov	x0, x19
    94b4:	bl	8d60 <PyModule_AddObject@plt>
    94b8:	mov	w0, #0xff                  	// #255
    94bc:	bl	8840 <PyLong_FromLong@plt>
    94c0:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    94c4:	mov	x2, x0
    94c8:	add	x1, x1, #0x8d2
    94cc:	mov	x0, x19
    94d0:	bl	8d60 <PyModule_AddObject@plt>
    94d4:	mov	w0, #0x7fff                	// #32767
    94d8:	bl	8840 <PyLong_FromLong@plt>
    94dc:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    94e0:	mov	x2, x0
    94e4:	add	x1, x1, #0x8e6
    94e8:	mov	x0, x19
    94ec:	bl	8d60 <PyModule_AddObject@plt>
    94f0:	mov	x0, #0xffffffffffff8000    	// #-32768
    94f4:	bl	8840 <PyLong_FromLong@plt>
    94f8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    94fc:	mov	x2, x0
    9500:	add	x1, x1, #0x8dc
    9504:	mov	x0, x19
    9508:	bl	8d60 <PyModule_AddObject@plt>
    950c:	mov	w0, #0xffff                	// #65535
    9510:	bl	8840 <PyLong_FromLong@plt>
    9514:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9518:	mov	x2, x0
    951c:	add	x1, x1, #0x8e5
    9520:	mov	x0, x19
    9524:	bl	8d60 <PyModule_AddObject@plt>
    9528:	mov	w0, #0x7fffffff            	// #2147483647
    952c:	bl	8840 <PyLong_FromLong@plt>
    9530:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9534:	mov	x2, x0
    9538:	add	x1, x1, #0x8f8
    953c:	mov	x0, x19
    9540:	bl	8d60 <PyModule_AddObject@plt>
    9544:	mov	x0, #0xffffffff80000000    	// #-2147483648
    9548:	bl	8840 <PyLong_FromLong@plt>
    954c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9550:	mov	x2, x0
    9554:	add	x1, x1, #0x8ef
    9558:	mov	x0, x19
    955c:	bl	8d60 <PyModule_AddObject@plt>
    9560:	mov	w0, #0xffffffff            	// #-1
    9564:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    9568:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    956c:	mov	x2, x0
    9570:	add	x1, x1, #0x8f7
    9574:	mov	x0, x19
    9578:	bl	8d60 <PyModule_AddObject@plt>
    957c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9580:	bl	8840 <PyLong_FromLong@plt>
    9584:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9588:	mov	x2, x0
    958c:	add	x1, x1, #0xd70
    9590:	mov	x0, x19
    9594:	bl	8d60 <PyModule_AddObject@plt>
    9598:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    959c:	bl	8840 <PyLong_FromLong@plt>
    95a0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    95a4:	mov	x2, x0
    95a8:	add	x1, x1, #0xd8f
    95ac:	mov	x0, x19
    95b0:	bl	8d60 <PyModule_AddObject@plt>
    95b4:	mov	x0, #0xffffffffffffffff    	// #-1
    95b8:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    95bc:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    95c0:	mov	x2, x0
    95c4:	add	x1, x1, #0x900
    95c8:	mov	x0, x19
    95cc:	bl	8d60 <PyModule_AddObject@plt>
    95d0:	mov	x8, #0xffffe0000000        	// #281474439839744
    95d4:	movk	x8, #0x47ef, lsl #48
    95d8:	fmov	d0, x8
    95dc:	bl	8800 <PyFloat_FromDouble@plt>
    95e0:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    95e4:	mov	x2, x0
    95e8:	add	x1, x1, #0x90a
    95ec:	mov	x0, x19
    95f0:	bl	8d60 <PyModule_AddObject@plt>
    95f4:	mov	x8, #0x3810000000000000    	// #4039728865751334912
    95f8:	fmov	d0, x8
    95fc:	bl	8800 <PyFloat_FromDouble@plt>
    9600:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9604:	mov	x2, x0
    9608:	add	x1, x1, #0x912
    960c:	mov	x0, x19
    9610:	bl	8d60 <PyModule_AddObject@plt>
    9614:	mov	x8, #0x7fefffffffffffff    	// #9218868437227405311
    9618:	fmov	d0, x8
    961c:	bl	8800 <PyFloat_FromDouble@plt>
    9620:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9624:	mov	x2, x0
    9628:	add	x1, x1, #0x91a
    962c:	mov	x0, x19
    9630:	bl	8d60 <PyModule_AddObject@plt>
    9634:	mov	x8, #0x10000000000000      	// #4503599627370496
    9638:	fmov	d0, x8
    963c:	bl	8800 <PyFloat_FromDouble@plt>
    9640:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9644:	mov	x2, x0
    9648:	add	x1, x1, #0x922
    964c:	mov	x0, x19
    9650:	bl	8d60 <PyModule_AddObject@plt>
    9654:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    9658:	bl	8ef0 <PyLong_FromLongLong@plt>
    965c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9660:	mov	x2, x0
    9664:	add	x1, x1, #0x92b
    9668:	mov	x0, x19
    966c:	bl	8d60 <PyModule_AddObject@plt>
    9670:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    9674:	bl	8ef0 <PyLong_FromLongLong@plt>
    9678:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    967c:	mov	x2, x0
    9680:	add	x1, x1, #0x91e
    9684:	mov	x0, x19
    9688:	bl	8d60 <PyModule_AddObject@plt>
    968c:	mov	x0, #0xffffffffffffffff    	// #-1
    9690:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    9694:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9698:	mov	x2, x0
    969c:	add	x1, x1, #0x92a
    96a0:	mov	x0, x19
    96a4:	bl	8d60 <PyModule_AddObject@plt>
    96a8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    96ac:	bl	87f0 <PyLong_FromSsize_t@plt>
    96b0:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    96b4:	mov	x2, x0
    96b8:	add	x1, x1, #0x935
    96bc:	mov	x0, x19
    96c0:	bl	8d60 <PyModule_AddObject@plt>
    96c4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    96c8:	bl	87f0 <PyLong_FromSsize_t@plt>
    96cc:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    96d0:	mov	x2, x0
    96d4:	add	x1, x1, #0x944
    96d8:	mov	x0, x19
    96dc:	bl	8d60 <PyModule_AddObject@plt>
    96e0:	mov	w0, #0x10                  	// #16
    96e4:	bl	87f0 <PyLong_FromSsize_t@plt>
    96e8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    96ec:	mov	x2, x0
    96f0:	add	x1, x1, #0x953
    96f4:	mov	x0, x19
    96f8:	bl	8d60 <PyModule_AddObject@plt>
    96fc:	mov	w0, #0x8                   	// #8
    9700:	bl	87f0 <PyLong_FromSsize_t@plt>
    9704:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9708:	mov	x2, x0
    970c:	add	x1, x1, #0x964
    9710:	mov	x0, x19
    9714:	bl	8d60 <PyModule_AddObject@plt>
    9718:	adrp	x20, 25000 <PyInit__testcapi@@Base+0x1be40>
    971c:	ldr	x20, [x20, #3912]
    9720:	mov	x0, x20
    9724:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9728:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    972c:	add	x1, x1, #0x972
    9730:	mov	x0, x19
    9734:	mov	x2, x20
    9738:	bl	8d60 <PyModule_AddObject@plt>
    973c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9740:	add	x1, x1, #0x981
    9744:	mov	w2, #0x3                   	// #3
    9748:	mov	x0, x19
    974c:	bl	8320 <PyModule_AddIntConstant@plt>
    9750:	adrp	x20, 25000 <PyInit__testcapi@@Base+0x1be40>
    9754:	ldr	x20, [x20, #4032]
    9758:	mov	x0, x20
    975c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9760:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    9764:	add	x1, x1, #0x992
    9768:	mov	x0, x19
    976c:	mov	x2, x20
    9770:	bl	8d60 <PyModule_AddObject@plt>
    9774:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    9778:	add	x0, x0, #0x9a0
    977c:	mov	x1, xzr
    9780:	mov	x2, xzr
    9784:	bl	88a0 <PyErr_NewException@plt>
    9788:	adrp	x20, 29000 <PyInit__testcapi@@Base+0x1fe40>
    978c:	str	x0, [x20, #3520]
    9790:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9794:	ldr	x2, [x20, #3520]
    9798:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    979c:	add	x1, x1, #0x147
    97a0:	mov	x0, x19
    97a4:	bl	8d60 <PyModule_AddObject@plt>
    97a8:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    97ac:	add	x0, x0, #0xcc0
    97b0:	bl	8ff0 <PyType_FromSpec@plt>
    97b4:	cbz	x0, 9880 <PyInit__testcapi@@Base+0x6c0>
    97b8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    97bc:	mov	x2, x0
    97c0:	add	x1, x1, #0x65d
    97c4:	mov	x0, x19
    97c8:	bl	8d60 <PyModule_AddObject@plt>
    97cc:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    97d0:	add	x0, x0, #0xce0
    97d4:	bl	8ff0 <PyType_FromSpec@plt>
    97d8:	cbz	x0, 9880 <PyInit__testcapi@@Base+0x6c0>
    97dc:	mov	x1, x0
    97e0:	mov	w0, #0x1                   	// #1
    97e4:	bl	9040 <PyTuple_Pack@plt>
    97e8:	cbz	x0, 9880 <PyInit__testcapi@@Base+0x6c0>
    97ec:	mov	x21, x0
    97f0:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    97f4:	add	x0, x0, #0xd00
    97f8:	mov	x1, x21
    97fc:	bl	8f50 <PyType_FromSpecWithBases@plt>
    9800:	cbz	x0, 9880 <PyInit__testcapi@@Base+0x6c0>
    9804:	mov	x20, x0
    9808:	mov	x0, x21
    980c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    9810:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    9814:	add	x1, x1, #0x687
    9818:	mov	x0, x19
    981c:	mov	x2, x20
    9820:	bl	8d60 <PyModule_AddObject@plt>
    9824:	mov	w0, #0x1                   	// #1
    9828:	mov	x1, x20
    982c:	bl	9040 <PyTuple_Pack@plt>
    9830:	cbz	x0, 9880 <PyInit__testcapi@@Base+0x6c0>
    9834:	mov	x20, x0
    9838:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
    983c:	add	x0, x0, #0xd20
    9840:	mov	x1, x20
    9844:	bl	8f50 <PyType_FromSpecWithBases@plt>
    9848:	cbz	x0, 9880 <PyInit__testcapi@@Base+0x6c0>
    984c:	mov	x21, x0
    9850:	mov	x0, x20
    9854:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    9858:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    985c:	add	x1, x1, #0x6aa
    9860:	mov	x0, x19
    9864:	mov	x2, x21
    9868:	bl	8d60 <PyModule_AddObject@plt>
    986c:	adrp	x1, 26000 <PyInit__testcapi@@Base+0x1ce40>
    9870:	add	x1, x1, #0x738
    9874:	mov	x0, x19
    9878:	bl	8d20 <PyState_AddModule@plt>
    987c:	b	9884 <PyInit__testcapi@@Base+0x6c4>
    9880:	mov	x19, xzr
    9884:	mov	x0, x19
    9888:	ldp	x20, x19, [sp, #32]
    988c:	ldr	x21, [sp, #16]
    9890:	ldp	x29, x30, [sp], #48
    9894:	ret
    9898:	ldr	x8, [x0]
    989c:	add	x8, x8, #0x1
    98a0:	str	x8, [x0]
    98a4:	ret
    98a8:	stp	x29, x30, [sp, #-16]!
    98ac:	mov	x29, sp
    98b0:	ldr	x8, [x0]
    98b4:	subs	x8, x8, #0x1
    98b8:	str	x8, [x0]
    98bc:	b.eq	98c8 <PyInit__testcapi@@Base+0x708>  // b.none
    98c0:	ldp	x29, x30, [sp], #16
    98c4:	ret
    98c8:	bl	8560 <_Py_Dealloc@plt>
    98cc:	ldp	x29, x30, [sp], #16
    98d0:	ret
    98d4:	sub	sp, sp, #0x30
    98d8:	stp	x29, x30, [sp, #16]
    98dc:	stp	x20, x19, [sp, #32]
    98e0:	add	x29, sp, #0x10
    98e4:	mov	x0, x1
    98e8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    98ec:	add	x1, x1, #0x6b5
    98f0:	add	x2, sp, #0x8
    98f4:	add	x3, sp, #0x4
    98f8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    98fc:	cbz	w0, 9958 <PyInit__testcapi@@Base+0x798>
    9900:	ldrsw	x0, [sp, #4]
    9904:	bl	8920 <PyTuple_New@plt>
    9908:	cbz	x0, 9958 <PyInit__testcapi@@Base+0x798>
    990c:	ldr	w8, [sp, #4]
    9910:	mov	x19, x0
    9914:	cmp	w8, #0x1
    9918:	b.lt	9944 <PyInit__testcapi@@Base+0x784>  // b.tstop
    991c:	mov	x20, xzr
    9920:	mov	x0, x20
    9924:	bl	8840 <PyLong_FromLong@plt>
    9928:	cbz	x0, 9950 <PyInit__testcapi@@Base+0x790>
    992c:	add	x8, x19, x20, lsl #3
    9930:	str	x0, [x8, #24]
    9934:	ldrsw	x8, [sp, #4]
    9938:	add	x20, x20, #0x1
    993c:	cmp	x20, x8
    9940:	b.lt	9920 <PyInit__testcapi@@Base+0x760>  // b.tstop
    9944:	ldr	x0, [sp, #8]
    9948:	mov	x1, x19
    994c:	bl	8580 <PyErr_SetObject@plt>
    9950:	mov	x0, x19
    9954:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    9958:	ldp	x20, x19, [sp, #32]
    995c:	ldp	x29, x30, [sp, #16]
    9960:	mov	x0, xzr
    9964:	add	sp, sp, #0x30
    9968:	ret
    996c:	stp	x29, x30, [sp, #-16]!
    9970:	mov	x29, sp
    9974:	bl	8570 <PyErr_NoMemory@plt>
    9978:	mov	x0, xzr
    997c:	ldp	x29, x30, [sp], #16
    9980:	ret
    9984:	stp	x29, x30, [sp, #-32]!
    9988:	str	x19, [sp, #16]
    998c:	mov	x29, sp
    9990:	mov	x0, x1
    9994:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9998:	add	x1, x1, #0x6c8
    999c:	add	x2, x29, #0x1c
    99a0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    99a4:	cbz	w0, 99c8 <PyInit__testcapi@@Base+0x808>
    99a8:	ldr	w19, [x29, #28]
    99ac:	bl	8f40 <__errno_location@plt>
    99b0:	str	w19, [x0]
    99b4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    99b8:	ldr	x19, [x19, #4016]
    99bc:	mov	x0, x19
    99c0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    99c4:	b	99cc <PyInit__testcapi@@Base+0x80c>
    99c8:	mov	x19, xzr
    99cc:	mov	x0, x19
    99d0:	ldr	x19, [sp, #16]
    99d4:	ldp	x29, x30, [sp], #32
    99d8:	ret
    99dc:	stp	x29, x30, [sp, #-32]!
    99e0:	str	x19, [sp, #16]
    99e4:	mov	x29, sp
    99e8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    99ec:	ldr	x19, [x19, #4016]
    99f0:	mov	x0, x19
    99f4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    99f8:	mov	x0, x19
    99fc:	ldr	x19, [sp, #16]
    9a00:	ldp	x29, x30, [sp], #32
    9a04:	ret
    9a08:	stp	x29, x30, [sp, #-32]!
    9a0c:	str	x19, [sp, #16]
    9a10:	mov	x29, sp
    9a14:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    9a18:	ldr	x19, [x19, #4016]
    9a1c:	mov	x0, x19
    9a20:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9a24:	mov	x0, x19
    9a28:	ldr	x19, [sp, #16]
    9a2c:	ldp	x29, x30, [sp], #32
    9a30:	ret
    9a34:	stp	x29, x30, [sp, #-32]!
    9a38:	str	x19, [sp, #16]
    9a3c:	mov	x29, sp
    9a40:	adrp	x19, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9a44:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9a48:	ldr	x10, [x19, #3528]
    9a4c:	ldr	w8, [x9, #3536]
    9a50:	cbz	x10, 9a78 <PyInit__testcapi@@Base+0x8b8>
    9a54:	cbnz	w8, 9a98 <PyInit__testcapi@@Base+0x8d8>
    9a58:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    9a5c:	ldr	x8, [x8, #4024]
    9a60:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9a64:	add	x1, x1, #0x6d4
    9a68:	ldr	x0, [x8]
    9a6c:	bl	8670 <PyErr_SetString@plt>
    9a70:	mov	x19, xzr
    9a74:	b	9aa8 <PyInit__testcapi@@Base+0x8e8>
    9a78:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    9a7c:	add	w8, w8, #0x1
    9a80:	add	x0, x0, #0x6f8
    9a84:	mov	w1, wzr
    9a88:	str	w8, [x9, #3536]
    9a8c:	bl	8820 <PyCapsule_Import@plt>
    9a90:	str	x0, [x19, #3528]
    9a94:	cbz	x0, 9ab8 <PyInit__testcapi@@Base+0x8f8>
    9a98:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    9a9c:	ldr	x19, [x19, #4016]
    9aa0:	mov	x0, x19
    9aa4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9aa8:	mov	x0, x19
    9aac:	ldr	x19, [sp, #16]
    9ab0:	ldp	x29, x30, [sp], #32
    9ab4:	ret
    9ab8:	mov	x19, xzr
    9abc:	b	9aa8 <PyInit__testcapi@@Base+0x8e8>
    9ac0:	sub	sp, sp, #0x30
    9ac4:	stp	x29, x30, [sp, #16]
    9ac8:	str	x19, [sp, #32]
    9acc:	add	x29, sp, #0x10
    9ad0:	mov	x0, x1
    9ad4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9ad8:	add	x1, x1, #0x70f
    9adc:	add	x2, x29, #0x18
    9ae0:	sub	x3, x29, #0x4
    9ae4:	stur	wzr, [x29, #-4]
    9ae8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9aec:	cbz	w0, 9b58 <PyInit__testcapi@@Base+0x998>
    9af0:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9af4:	ldr	x8, [x29, #24]
    9af8:	ldr	x9, [x9, #3528]
    9afc:	ldur	w10, [x29, #-4]
    9b00:	ldr	x0, [x8, #8]
    9b04:	ldr	x1, [x9]
    9b08:	cmp	w10, #0x0
    9b0c:	cset	w8, eq  // eq = none
    9b10:	cmp	x0, x1
    9b14:	cset	w9, eq  // eq = none
    9b18:	orr	w8, w9, w8
    9b1c:	cbnz	w10, 9b34 <PyInit__testcapi@@Base+0x974>
    9b20:	cmp	x0, x1
    9b24:	b.eq	9b34 <PyInit__testcapi@@Base+0x974>  // b.none
    9b28:	bl	8e20 <PyType_IsSubtype@plt>
    9b2c:	cmp	w0, #0x0
    9b30:	cset	w8, ne  // ne = any
    9b34:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    9b38:	adrp	x10, 25000 <PyInit__testcapi@@Base+0x1be40>
    9b3c:	ldr	x9, [x9, #3984]
    9b40:	ldr	x10, [x10, #4032]
    9b44:	cmp	w8, #0x0
    9b48:	csel	x19, x10, x9, ne  // ne = any
    9b4c:	mov	x0, x19
    9b50:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9b54:	b	9b5c <PyInit__testcapi@@Base+0x99c>
    9b58:	mov	x19, xzr
    9b5c:	mov	x0, x19
    9b60:	ldr	x19, [sp, #32]
    9b64:	ldp	x29, x30, [sp, #16]
    9b68:	add	sp, sp, #0x30
    9b6c:	ret
    9b70:	sub	sp, sp, #0x30
    9b74:	stp	x29, x30, [sp, #16]
    9b78:	str	x19, [sp, #32]
    9b7c:	add	x29, sp, #0x10
    9b80:	mov	x0, x1
    9b84:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9b88:	add	x1, x1, #0x70f
    9b8c:	add	x2, x29, #0x18
    9b90:	sub	x3, x29, #0x4
    9b94:	stur	wzr, [x29, #-4]
    9b98:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9b9c:	cbz	w0, 9c08 <PyInit__testcapi@@Base+0xa48>
    9ba0:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9ba4:	ldr	x8, [x29, #24]
    9ba8:	ldr	x9, [x9, #3528]
    9bac:	ldur	w10, [x29, #-4]
    9bb0:	ldr	x0, [x8, #8]
    9bb4:	ldr	x1, [x9, #16]
    9bb8:	cmp	w10, #0x0
    9bbc:	cset	w8, eq  // eq = none
    9bc0:	cmp	x0, x1
    9bc4:	cset	w9, eq  // eq = none
    9bc8:	orr	w8, w9, w8
    9bcc:	cbnz	w10, 9be4 <PyInit__testcapi@@Base+0xa24>
    9bd0:	cmp	x0, x1
    9bd4:	b.eq	9be4 <PyInit__testcapi@@Base+0xa24>  // b.none
    9bd8:	bl	8e20 <PyType_IsSubtype@plt>
    9bdc:	cmp	w0, #0x0
    9be0:	cset	w8, ne  // ne = any
    9be4:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    9be8:	adrp	x10, 25000 <PyInit__testcapi@@Base+0x1be40>
    9bec:	ldr	x9, [x9, #3984]
    9bf0:	ldr	x10, [x10, #4032]
    9bf4:	cmp	w8, #0x0
    9bf8:	csel	x19, x10, x9, ne  // ne = any
    9bfc:	mov	x0, x19
    9c00:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9c04:	b	9c0c <PyInit__testcapi@@Base+0xa4c>
    9c08:	mov	x19, xzr
    9c0c:	mov	x0, x19
    9c10:	ldr	x19, [sp, #32]
    9c14:	ldp	x29, x30, [sp, #16]
    9c18:	add	sp, sp, #0x30
    9c1c:	ret
    9c20:	sub	sp, sp, #0x30
    9c24:	stp	x29, x30, [sp, #16]
    9c28:	str	x19, [sp, #32]
    9c2c:	add	x29, sp, #0x10
    9c30:	mov	x0, x1
    9c34:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9c38:	add	x1, x1, #0x70f
    9c3c:	add	x2, x29, #0x18
    9c40:	sub	x3, x29, #0x4
    9c44:	stur	wzr, [x29, #-4]
    9c48:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9c4c:	cbz	w0, 9cb8 <PyInit__testcapi@@Base+0xaf8>
    9c50:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9c54:	ldr	x8, [x29, #24]
    9c58:	ldr	x9, [x9, #3528]
    9c5c:	ldur	w10, [x29, #-4]
    9c60:	ldr	x0, [x8, #8]
    9c64:	ldr	x1, [x9, #8]
    9c68:	cmp	w10, #0x0
    9c6c:	cset	w8, eq  // eq = none
    9c70:	cmp	x0, x1
    9c74:	cset	w9, eq  // eq = none
    9c78:	orr	w8, w9, w8
    9c7c:	cbnz	w10, 9c94 <PyInit__testcapi@@Base+0xad4>
    9c80:	cmp	x0, x1
    9c84:	b.eq	9c94 <PyInit__testcapi@@Base+0xad4>  // b.none
    9c88:	bl	8e20 <PyType_IsSubtype@plt>
    9c8c:	cmp	w0, #0x0
    9c90:	cset	w8, ne  // ne = any
    9c94:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    9c98:	adrp	x10, 25000 <PyInit__testcapi@@Base+0x1be40>
    9c9c:	ldr	x9, [x9, #3984]
    9ca0:	ldr	x10, [x10, #4032]
    9ca4:	cmp	w8, #0x0
    9ca8:	csel	x19, x10, x9, ne  // ne = any
    9cac:	mov	x0, x19
    9cb0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9cb4:	b	9cbc <PyInit__testcapi@@Base+0xafc>
    9cb8:	mov	x19, xzr
    9cbc:	mov	x0, x19
    9cc0:	ldr	x19, [sp, #32]
    9cc4:	ldp	x29, x30, [sp, #16]
    9cc8:	add	sp, sp, #0x30
    9ccc:	ret
    9cd0:	sub	sp, sp, #0x30
    9cd4:	stp	x29, x30, [sp, #16]
    9cd8:	str	x19, [sp, #32]
    9cdc:	add	x29, sp, #0x10
    9ce0:	mov	x0, x1
    9ce4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9ce8:	add	x1, x1, #0x70f
    9cec:	add	x2, x29, #0x18
    9cf0:	sub	x3, x29, #0x4
    9cf4:	stur	wzr, [x29, #-4]
    9cf8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9cfc:	cbz	w0, 9d68 <PyInit__testcapi@@Base+0xba8>
    9d00:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9d04:	ldr	x8, [x29, #24]
    9d08:	ldr	x9, [x9, #3528]
    9d0c:	ldur	w10, [x29, #-4]
    9d10:	ldr	x0, [x8, #8]
    9d14:	ldr	x1, [x9, #24]
    9d18:	cmp	w10, #0x0
    9d1c:	cset	w8, eq  // eq = none
    9d20:	cmp	x0, x1
    9d24:	cset	w9, eq  // eq = none
    9d28:	orr	w8, w9, w8
    9d2c:	cbnz	w10, 9d44 <PyInit__testcapi@@Base+0xb84>
    9d30:	cmp	x0, x1
    9d34:	b.eq	9d44 <PyInit__testcapi@@Base+0xb84>  // b.none
    9d38:	bl	8e20 <PyType_IsSubtype@plt>
    9d3c:	cmp	w0, #0x0
    9d40:	cset	w8, ne  // ne = any
    9d44:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    9d48:	adrp	x10, 25000 <PyInit__testcapi@@Base+0x1be40>
    9d4c:	ldr	x9, [x9, #3984]
    9d50:	ldr	x10, [x10, #4032]
    9d54:	cmp	w8, #0x0
    9d58:	csel	x19, x10, x9, ne  // ne = any
    9d5c:	mov	x0, x19
    9d60:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9d64:	b	9d6c <PyInit__testcapi@@Base+0xbac>
    9d68:	mov	x19, xzr
    9d6c:	mov	x0, x19
    9d70:	ldr	x19, [sp, #32]
    9d74:	ldp	x29, x30, [sp, #16]
    9d78:	add	sp, sp, #0x30
    9d7c:	ret
    9d80:	sub	sp, sp, #0x30
    9d84:	stp	x29, x30, [sp, #16]
    9d88:	str	x19, [sp, #32]
    9d8c:	add	x29, sp, #0x10
    9d90:	mov	x0, x1
    9d94:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9d98:	add	x1, x1, #0x70f
    9d9c:	add	x2, x29, #0x18
    9da0:	sub	x3, x29, #0x4
    9da4:	stur	wzr, [x29, #-4]
    9da8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9dac:	cbz	w0, 9e18 <PyInit__testcapi@@Base+0xc58>
    9db0:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9db4:	ldr	x8, [x29, #24]
    9db8:	ldr	x9, [x9, #3528]
    9dbc:	ldur	w10, [x29, #-4]
    9dc0:	ldr	x0, [x8, #8]
    9dc4:	ldr	x1, [x9, #32]
    9dc8:	cmp	w10, #0x0
    9dcc:	cset	w8, eq  // eq = none
    9dd0:	cmp	x0, x1
    9dd4:	cset	w9, eq  // eq = none
    9dd8:	orr	w8, w9, w8
    9ddc:	cbnz	w10, 9df4 <PyInit__testcapi@@Base+0xc34>
    9de0:	cmp	x0, x1
    9de4:	b.eq	9df4 <PyInit__testcapi@@Base+0xc34>  // b.none
    9de8:	bl	8e20 <PyType_IsSubtype@plt>
    9dec:	cmp	w0, #0x0
    9df0:	cset	w8, ne  // ne = any
    9df4:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    9df8:	adrp	x10, 25000 <PyInit__testcapi@@Base+0x1be40>
    9dfc:	ldr	x9, [x9, #3984]
    9e00:	ldr	x10, [x10, #4032]
    9e04:	cmp	w8, #0x0
    9e08:	csel	x19, x10, x9, ne  // ne = any
    9e0c:	mov	x0, x19
    9e10:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9e14:	b	9e1c <PyInit__testcapi@@Base+0xc5c>
    9e18:	mov	x19, xzr
    9e1c:	mov	x0, x19
    9e20:	ldr	x19, [sp, #32]
    9e24:	ldp	x29, x30, [sp, #16]
    9e28:	add	sp, sp, #0x30
    9e2c:	ret
    9e30:	stp	x29, x30, [sp, #-64]!
    9e34:	str	x23, [sp, #16]
    9e38:	stp	x22, x21, [sp, #32]
    9e3c:	stp	x20, x19, [sp, #48]
    9e40:	mov	x29, sp
    9e44:	adrp	x22, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9e48:	ldr	x8, [x22, #3528]
    9e4c:	mov	w1, #0xffffb9b0            	// #-18000
    9e50:	mov	w3, #0x1                   	// #1
    9e54:	mov	w0, wzr
    9e58:	ldr	x9, [x8, #72]
    9e5c:	ldr	x4, [x8, #24]
    9e60:	mov	w2, wzr
    9e64:	blr	x9
    9e68:	mov	x19, x0
    9e6c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    9e70:	add	x0, x0, #0x713
    9e74:	bl	8d10 <PyUnicode_FromString@plt>
    9e78:	ldr	x8, [x22, #3528]
    9e7c:	mov	x20, x0
    9e80:	mov	x0, x19
    9e84:	mov	x1, x20
    9e88:	ldr	x8, [x8, #80]
    9e8c:	blr	x8
    9e90:	ldr	x8, [x22, #3528]
    9e94:	mov	x21, x0
    9e98:	mov	x0, x19
    9e9c:	mov	x1, x20
    9ea0:	ldr	x8, [x8, #80]
    9ea4:	blr	x8
    9ea8:	ldr	x8, [x22, #3528]
    9eac:	mov	x22, x0
    9eb0:	mov	x0, x19
    9eb4:	mov	x1, xzr
    9eb8:	ldr	x8, [x8, #80]
    9ebc:	blr	x8
    9ec0:	mov	x23, x0
    9ec4:	mov	x0, x19
    9ec8:	bl	8be0 <Py_DecRef@plt>
    9ecc:	mov	x0, x20
    9ed0:	bl	8be0 <Py_DecRef@plt>
    9ed4:	mov	w0, #0x3                   	// #3
    9ed8:	bl	8920 <PyTuple_New@plt>
    9edc:	stp	x21, x22, [x0, #24]
    9ee0:	str	x23, [x0, #40]
    9ee4:	ldp	x20, x19, [sp, #48]
    9ee8:	ldp	x22, x21, [sp, #32]
    9eec:	ldr	x23, [sp, #16]
    9ef0:	ldp	x29, x30, [sp], #64
    9ef4:	ret
    9ef8:	stp	x29, x30, [sp, #-64]!
    9efc:	str	x23, [sp, #16]
    9f00:	stp	x22, x21, [sp, #32]
    9f04:	stp	x20, x19, [sp, #48]
    9f08:	mov	x29, sp
    9f0c:	adrp	x22, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9f10:	ldr	x8, [x22, #3528]
    9f14:	mov	w3, #0x1                   	// #1
    9f18:	mov	w0, wzr
    9f1c:	mov	w1, wzr
    9f20:	ldr	x9, [x8, #72]
    9f24:	ldr	x4, [x8, #24]
    9f28:	mov	w2, wzr
    9f2c:	blr	x9
    9f30:	mov	x19, x0
    9f34:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    9f38:	add	x0, x0, #0x39a
    9f3c:	bl	8d10 <PyUnicode_FromString@plt>
    9f40:	ldr	x8, [x22, #3528]
    9f44:	mov	x20, x0
    9f48:	mov	x0, x19
    9f4c:	mov	x1, xzr
    9f50:	ldr	x8, [x8, #80]
    9f54:	blr	x8
    9f58:	ldr	x8, [x22, #3528]
    9f5c:	mov	x21, x0
    9f60:	mov	x0, x19
    9f64:	mov	x1, xzr
    9f68:	ldr	x8, [x8, #80]
    9f6c:	blr	x8
    9f70:	ldr	x8, [x22, #3528]
    9f74:	mov	x22, x0
    9f78:	mov	x0, x19
    9f7c:	mov	x1, x20
    9f80:	ldr	x8, [x8, #80]
    9f84:	blr	x8
    9f88:	mov	x23, x0
    9f8c:	mov	x0, x19
    9f90:	bl	8be0 <Py_DecRef@plt>
    9f94:	mov	x0, x20
    9f98:	bl	8be0 <Py_DecRef@plt>
    9f9c:	mov	w0, #0x3                   	// #3
    9fa0:	bl	8920 <PyTuple_New@plt>
    9fa4:	stp	x21, x22, [x0, #24]
    9fa8:	str	x23, [x0, #40]
    9fac:	ldp	x20, x19, [sp, #48]
    9fb0:	ldp	x22, x21, [sp, #32]
    9fb4:	ldr	x23, [sp, #16]
    9fb8:	ldp	x29, x30, [sp], #64
    9fbc:	ret
    9fc0:	stp	x29, x30, [sp, #-32]!
    9fc4:	str	x19, [sp, #16]
    9fc8:	mov	x29, sp
    9fcc:	mov	x0, x1
    9fd0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    9fd4:	add	x1, x1, #0x710
    9fd8:	add	x2, x29, #0x1c
    9fdc:	str	wzr, [x29, #28]
    9fe0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    9fe4:	cbz	w0, a004 <PyInit__testcapi@@Base+0xe44>
    9fe8:	adrp	x19, 29000 <PyInit__testcapi@@Base+0x1fe40>
    9fec:	ldr	x8, [x19, #3528]
    9ff0:	ldr	x0, [x8, #40]
    9ff4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    9ff8:	ldr	x8, [x19, #3528]
    9ffc:	ldr	x0, [x8, #40]
    a000:	b	a008 <PyInit__testcapi@@Base+0xe48>
    a004:	mov	x0, xzr
    a008:	ldr	x19, [sp, #16]
    a00c:	ldp	x29, x30, [sp], #32
    a010:	ret
    a014:	sub	sp, sp, #0x20
    a018:	stp	x29, x30, [sp, #16]
    a01c:	add	x29, sp, #0x10
    a020:	mov	x0, x1
    a024:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a028:	add	x1, x1, #0x717
    a02c:	sub	x2, x29, #0x4
    a030:	add	x3, sp, #0x8
    a034:	add	x4, sp, #0x4
    a038:	mov	x5, sp
    a03c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a040:	cbz	w0, a064 <PyInit__testcapi@@Base+0xea4>
    a044:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a048:	ldr	x8, [x8, #3528]
    a04c:	ldp	w1, w0, [sp, #4]
    a050:	ldr	w2, [sp]
    a054:	ldr	x9, [x8, #48]
    a058:	ldr	x3, [x8]
    a05c:	blr	x9
    a060:	b	a068 <PyInit__testcapi@@Base+0xea8>
    a064:	mov	x0, xzr
    a068:	ldp	x29, x30, [sp, #16]
    a06c:	add	sp, sp, #0x20
    a070:	ret
    a074:	sub	sp, sp, #0x40
    a078:	stp	x29, x30, [sp, #48]
    a07c:	add	x29, sp, #0x30
    a080:	mov	x0, x1
    a084:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a088:	add	x8, sp, #0x10
    a08c:	add	x9, sp, #0x14
    a090:	add	x1, x1, #0x71c
    a094:	sub	x2, x29, #0x4
    a098:	sub	x3, x29, #0x8
    a09c:	sub	x4, x29, #0xc
    a0a0:	sub	x5, x29, #0x10
    a0a4:	sub	x6, x29, #0x14
    a0a8:	add	x7, sp, #0x18
    a0ac:	stp	x9, x8, [sp]
    a0b0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a0b4:	cbz	w0, a0ec <PyInit__testcapi@@Base+0xf2c>
    a0b8:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a0bc:	ldr	x8, [x8, #3528]
    a0c0:	adrp	x7, 25000 <PyInit__testcapi@@Base+0x1be40>
    a0c4:	ldp	w1, w0, [x29, #-12]
    a0c8:	ldp	w3, w2, [x29, #-20]
    a0cc:	ldp	w5, w4, [sp, #20]
    a0d0:	ldr	w6, [sp, #16]
    a0d4:	ldr	x9, [x8, #56]
    a0d8:	ldr	x8, [x8, #8]
    a0dc:	ldr	x7, [x7, #4016]
    a0e0:	str	x8, [sp]
    a0e4:	blr	x9
    a0e8:	b	a0f0 <PyInit__testcapi@@Base+0xf30>
    a0ec:	mov	x0, xzr
    a0f0:	ldp	x29, x30, [sp, #48]
    a0f4:	add	sp, sp, #0x40
    a0f8:	ret
    a0fc:	sub	sp, sp, #0x50
    a100:	stp	x29, x30, [sp, #64]
    a104:	add	x29, sp, #0x40
    a108:	mov	x0, x1
    a10c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a110:	add	x8, sp, #0x1c
    a114:	add	x9, sp, #0x20
    a118:	sub	x10, x29, #0x1c
    a11c:	add	x1, x1, #0x725
    a120:	sub	x2, x29, #0x4
    a124:	sub	x3, x29, #0x8
    a128:	sub	x4, x29, #0xc
    a12c:	sub	x5, x29, #0x10
    a130:	sub	x6, x29, #0x14
    a134:	sub	x7, x29, #0x18
    a138:	stp	x9, x8, [sp, #8]
    a13c:	str	x10, [sp]
    a140:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a144:	cbz	w0, a180 <PyInit__testcapi@@Base+0xfc0>
    a148:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a14c:	ldr	x8, [x8, #3528]
    a150:	adrp	x7, 25000 <PyInit__testcapi@@Base+0x1be40>
    a154:	ldp	w1, w0, [x29, #-12]
    a158:	ldp	w3, w2, [x29, #-20]
    a15c:	ldr	x10, [x8, #104]
    a160:	ldr	x8, [x8, #8]
    a164:	ldp	w5, w4, [x29, #-28]
    a168:	ldp	w9, w6, [sp, #28]
    a16c:	str	x8, [sp, #8]
    a170:	ldr	x7, [x7, #4016]
    a174:	str	w9, [sp]
    a178:	blr	x10
    a17c:	b	a184 <PyInit__testcapi@@Base+0xfc4>
    a180:	mov	x0, xzr
    a184:	ldp	x29, x30, [sp, #64]
    a188:	add	sp, sp, #0x50
    a18c:	ret
    a190:	sub	sp, sp, #0x30
    a194:	stp	x29, x30, [sp, #32]
    a198:	add	x29, sp, #0x20
    a19c:	mov	x0, x1
    a1a0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a1a4:	add	x1, x1, #0x72f
    a1a8:	sub	x2, x29, #0x4
    a1ac:	sub	x3, x29, #0x8
    a1b0:	sub	x4, x29, #0xc
    a1b4:	add	x5, sp, #0x10
    a1b8:	add	x6, sp, #0xc
    a1bc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a1c0:	cbz	w0, a1ec <PyInit__testcapi@@Base+0x102c>
    a1c4:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a1c8:	ldr	x8, [x8, #3528]
    a1cc:	adrp	x4, 25000 <PyInit__testcapi@@Base+0x1be40>
    a1d0:	ldp	w1, w0, [x29, #-12]
    a1d4:	ldp	w3, w2, [sp, #12]
    a1d8:	ldr	x9, [x8, #64]
    a1dc:	ldr	x5, [x8, #16]
    a1e0:	ldr	x4, [x4, #4016]
    a1e4:	blr	x9
    a1e8:	b	a1f0 <PyInit__testcapi@@Base+0x1030>
    a1ec:	mov	x0, xzr
    a1f0:	ldp	x29, x30, [sp, #32]
    a1f4:	add	sp, sp, #0x30
    a1f8:	ret
    a1fc:	sub	sp, sp, #0x30
    a200:	stp	x29, x30, [sp, #32]
    a204:	add	x29, sp, #0x20
    a208:	mov	x0, x1
    a20c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a210:	add	x1, x1, #0x735
    a214:	sub	x2, x29, #0x4
    a218:	sub	x3, x29, #0x8
    a21c:	sub	x4, x29, #0xc
    a220:	add	x5, sp, #0x10
    a224:	add	x6, sp, #0xc
    a228:	add	x7, sp, #0x8
    a22c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a230:	cbz	w0, a260 <PyInit__testcapi@@Base+0x10a0>
    a234:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a238:	ldr	x8, [x8, #3528]
    a23c:	adrp	x4, 25000 <PyInit__testcapi@@Base+0x1be40>
    a240:	ldp	w1, w0, [x29, #-12]
    a244:	ldp	w3, w2, [sp, #12]
    a248:	ldr	w5, [sp, #8]
    a24c:	ldr	x9, [x8, #112]
    a250:	ldr	x6, [x8, #16]
    a254:	ldr	x4, [x4, #4016]
    a258:	blr	x9
    a25c:	b	a264 <PyInit__testcapi@@Base+0x10a4>
    a260:	mov	x0, xzr
    a264:	ldp	x29, x30, [sp, #32]
    a268:	add	sp, sp, #0x30
    a26c:	ret
    a270:	sub	sp, sp, #0x20
    a274:	stp	x29, x30, [sp, #16]
    a278:	add	x29, sp, #0x10
    a27c:	mov	x0, x1
    a280:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a284:	add	x1, x1, #0x717
    a288:	sub	x2, x29, #0x4
    a28c:	add	x3, sp, #0x8
    a290:	add	x4, sp, #0x4
    a294:	mov	x5, sp
    a298:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a29c:	cbz	w0, a2c4 <PyInit__testcapi@@Base+0x1104>
    a2a0:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a2a4:	ldr	x8, [x8, #3528]
    a2a8:	ldp	w1, w0, [sp, #4]
    a2ac:	ldr	w2, [sp]
    a2b0:	mov	w3, #0x1                   	// #1
    a2b4:	ldr	x9, [x8, #72]
    a2b8:	ldr	x4, [x8, #24]
    a2bc:	blr	x9
    a2c0:	b	a2c8 <PyInit__testcapi@@Base+0x1108>
    a2c4:	mov	x0, xzr
    a2c8:	ldp	x29, x30, [sp, #16]
    a2cc:	add	sp, sp, #0x20
    a2d0:	ret
    a2d4:	sub	sp, sp, #0x30
    a2d8:	stp	x29, x30, [sp, #16]
    a2dc:	stp	x20, x19, [sp, #32]
    a2e0:	add	x29, sp, #0x10
    a2e4:	mov	x0, x1
    a2e8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a2ec:	add	x1, x1, #0x70f
    a2f0:	add	x2, sp, #0x8
    a2f4:	add	x3, sp, #0x4
    a2f8:	str	xzr, [sp, #8]
    a2fc:	str	wzr, [sp, #4]
    a300:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a304:	cbz	w0, a344 <PyInit__testcapi@@Base+0x1184>
    a308:	ldr	x1, [sp, #8]
    a30c:	mov	w0, #0x1                   	// #1
    a310:	bl	9040 <PyTuple_Pack@plt>
    a314:	cbz	x0, a344 <PyInit__testcapi@@Base+0x1184>
    a318:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a31c:	ldr	x8, [x8, #3528]
    a320:	mov	x19, x0
    a324:	mov	x1, x19
    a328:	ldr	x9, [x8, #96]
    a32c:	ldr	x0, [x8]
    a330:	blr	x9
    a334:	mov	x20, x0
    a338:	mov	x0, x19
    a33c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a340:	b	a348 <PyInit__testcapi@@Base+0x1188>
    a344:	mov	x20, xzr
    a348:	mov	x0, x20
    a34c:	ldp	x20, x19, [sp, #32]
    a350:	ldp	x29, x30, [sp, #16]
    a354:	add	sp, sp, #0x30
    a358:	ret
    a35c:	sub	sp, sp, #0x40
    a360:	stp	x29, x30, [sp, #32]
    a364:	stp	x20, x19, [sp, #48]
    a368:	add	x29, sp, #0x20
    a36c:	stur	xzr, [x29, #-8]
    a370:	str	xzr, [sp, #16]
    a374:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    a378:	ldr	x8, [x8, #4016]
    a37c:	mov	x0, x1
    a380:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a384:	add	x1, x1, #0x73c
    a388:	add	x2, sp, #0x10
    a38c:	add	x3, sp, #0x8
    a390:	sub	x4, x29, #0x8
    a394:	sub	x5, x29, #0x4
    a398:	str	x8, [sp, #8]
    a39c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a3a0:	cbz	w0, a400 <PyInit__testcapi@@Base+0x1240>
    a3a4:	ldur	w8, [x29, #-8]
    a3a8:	ldr	x1, [sp, #16]
    a3ac:	cbz	w8, a3f0 <PyInit__testcapi@@Base+0x1230>
    a3b0:	ldr	x2, [sp, #8]
    a3b4:	mov	w0, #0x2                   	// #2
    a3b8:	bl	9040 <PyTuple_Pack@plt>
    a3bc:	mov	x19, x0
    a3c0:	cbz	x0, a400 <PyInit__testcapi@@Base+0x1240>
    a3c4:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a3c8:	ldr	x8, [x8, #3528]
    a3cc:	mov	x1, x19
    a3d0:	mov	x2, xzr
    a3d4:	ldr	x9, [x8, #88]
    a3d8:	ldr	x0, [x8, #8]
    a3dc:	blr	x9
    a3e0:	mov	x20, x0
    a3e4:	mov	x0, x19
    a3e8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a3ec:	b	a404 <PyInit__testcapi@@Base+0x1244>
    a3f0:	mov	w0, #0x1                   	// #1
    a3f4:	bl	9040 <PyTuple_Pack@plt>
    a3f8:	mov	x19, x0
    a3fc:	cbnz	x0, a3c4 <PyInit__testcapi@@Base+0x1204>
    a400:	mov	x20, xzr
    a404:	mov	x0, x20
    a408:	ldp	x20, x19, [sp, #48]
    a40c:	ldp	x29, x30, [sp, #32]
    a410:	add	sp, sp, #0x40
    a414:	ret
    a418:	stp	x29, x30, [sp, #-48]!
    a41c:	str	x21, [sp, #16]
    a420:	stp	x20, x19, [sp, #32]
    a424:	mov	x29, sp
    a428:	mov	w0, #0x1e                  	// #30
    a42c:	bl	82a0 <PyList_New@plt>
    a430:	mov	x19, x0
    a434:	cbz	x0, a4d0 <PyInit__testcapi@@Base+0x1310>
    a438:	mov	x20, xzr
    a43c:	mov	x0, x20
    a440:	bl	8840 <PyLong_FromLong@plt>
    a444:	cbz	x0, a4c4 <PyInit__testcapi@@Base+0x1304>
    a448:	ldr	x8, [x19, #24]
    a44c:	str	x0, [x8, x20, lsl #3]
    a450:	add	x20, x20, #0x1
    a454:	cmp	x20, #0x1e
    a458:	b.ne	a43c <PyInit__testcapi@@Base+0x127c>  // b.any
    a45c:	mov	x0, x19
    a460:	bl	8a20 <PyList_Reverse@plt>
    a464:	cbnz	w0, a4c4 <PyInit__testcapi@@Base+0x1304>
    a468:	mov	x20, xzr
    a46c:	mov	w21, #0x1d                  	// #29
    a470:	ldr	x8, [x19, #24]
    a474:	ldr	x0, [x8, x20]
    a478:	bl	89a0 <PyLong_AsLong@plt>
    a47c:	cmp	x21, x0
    a480:	b.ne	a4b0 <PyInit__testcapi@@Base+0x12f0>  // b.any
    a484:	sub	x21, x21, #0x1
    a488:	cmn	x21, #0x1
    a48c:	add	x20, x20, #0x8
    a490:	b.ne	a470 <PyInit__testcapi@@Base+0x12b0>  // b.any
    a494:	mov	x0, x19
    a498:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a49c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a4a0:	ldr	x19, [x19, #4016]
    a4a4:	mov	x0, x19
    a4a8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a4ac:	b	a4d0 <PyInit__testcapi@@Base+0x1310>
    a4b0:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a4b4:	ldr	x0, [x8, #3520]
    a4b8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a4bc:	add	x1, x1, #0x742
    a4c0:	bl	8670 <PyErr_SetString@plt>
    a4c4:	mov	x0, x19
    a4c8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a4cc:	mov	x19, xzr
    a4d0:	mov	x0, x19
    a4d4:	ldp	x20, x19, [sp, #32]
    a4d8:	ldr	x21, [sp, #16]
    a4dc:	ldp	x29, x30, [sp], #48
    a4e0:	ret
    a4e4:	stp	x29, x30, [sp, #-32]!
    a4e8:	str	x19, [sp, #16]
    a4ec:	mov	x29, sp
    a4f0:	mov	w19, wzr
    a4f4:	mov	w0, w19
    a4f8:	bl	10308 <PyInit__testcapi@@Base+0x7148>
    a4fc:	tbnz	w0, #31, a520 <PyInit__testcapi@@Base+0x1360>
    a500:	add	w19, w19, #0x1
    a504:	cmp	w19, #0xc8
    a508:	b.ne	a4f4 <PyInit__testcapi@@Base+0x1334>  // b.any
    a50c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a510:	ldr	x19, [x19, #4016]
    a514:	mov	x0, x19
    a518:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a51c:	b	a524 <PyInit__testcapi@@Base+0x1364>
    a520:	mov	x19, xzr
    a524:	mov	x0, x19
    a528:	ldr	x19, [sp, #16]
    a52c:	ldp	x29, x30, [sp], #32
    a530:	ret
    a534:	sub	sp, sp, #0x30
    a538:	stp	x29, x30, [sp, #16]
    a53c:	str	x19, [sp, #32]
    a540:	add	x29, sp, #0x10
    a544:	mov	x0, x1
    a548:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a54c:	add	x1, x1, #0x794
    a550:	add	x2, x29, #0x18
    a554:	add	x3, sp, #0x8
    a558:	mov	x4, sp
    a55c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    a560:	cbz	w0, a594 <PyInit__testcapi@@Base+0x13d4>
    a564:	ldr	x0, [x29, #24]
    a568:	ldp	x2, x1, [sp]
    a56c:	bl	89d0 <_PyDict_GetItem_KnownHash@plt>
    a570:	mov	x19, x0
    a574:	cbnz	x0, a580 <PyInit__testcapi@@Base+0x13c0>
    a578:	bl	8980 <PyErr_Occurred@plt>
    a57c:	cbz	x0, a58c <PyInit__testcapi@@Base+0x13cc>
    a580:	mov	x0, x19
    a584:	bl	10428 <PyInit__testcapi@@Base+0x7268>
    a588:	b	a598 <PyInit__testcapi@@Base+0x13d8>
    a58c:	ldr	x0, [sp, #8]
    a590:	bl	8650 <_PyErr_SetKeyError@plt>
    a594:	mov	x19, xzr
    a598:	mov	x0, x19
    a59c:	ldr	x19, [sp, #32]
    a5a0:	ldp	x29, x30, [sp, #16]
    a5a4:	add	sp, sp, #0x30
    a5a8:	ret
    a5ac:	stp	x29, x30, [sp, #-16]!
    a5b0:	mov	x29, sp
    a5b4:	ldr	x8, [x1, #8]
    a5b8:	ldrb	w9, [x8, #171]
    a5bc:	tbnz	w9, #5, a5e8 <PyInit__testcapi@@Base+0x1428>
    a5c0:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    a5c4:	ldr	x9, [x9, #3952]
    a5c8:	ldr	x2, [x8, #24]
    a5cc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a5d0:	add	x1, x1, #0x7af
    a5d4:	ldr	x0, [x9]
    a5d8:	bl	8e60 <PyErr_Format@plt>
    a5dc:	mov	x0, xzr
    a5e0:	ldp	x29, x30, [sp], #16
    a5e4:	ret
    a5e8:	ldr	x8, [x1, #40]
    a5ec:	cmp	x8, #0x0
    a5f0:	cset	w0, ne  // ne = any
    a5f4:	bl	88d0 <PyBool_FromLong@plt>
    a5f8:	ldp	x29, x30, [sp], #16
    a5fc:	ret
    a600:	stp	x29, x30, [sp, #-32]!
    a604:	stp	x20, x19, [sp, #16]
    a608:	mov	x29, sp
    a60c:	adrp	x20, 26000 <PyInit__testcapi@@Base+0x1ce40>
    a610:	ldr	x8, [x20, #2216]
    a614:	cbz	x8, a62c <PyInit__testcapi@@Base+0x146c>
    a618:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a61c:	ldr	x19, [x19, #4016]
    a620:	mov	x0, x19
    a624:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a628:	b	a684 <PyInit__testcapi@@Base+0x14c4>
    a62c:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce40>
    a630:	add	x0, x0, #0x7a0
    a634:	bl	8cf0 <_PyObject_New@plt>
    a638:	mov	x19, x0
    a63c:	cbz	x0, a66c <PyInit__testcapi@@Base+0x14ac>
    a640:	ldr	x8, [x20, #2216]
    a644:	cbz	x8, a694 <PyInit__testcapi@@Base+0x14d4>
    a648:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a64c:	ldr	x0, [x8, #3520]
    a650:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a654:	add	x1, x1, #0x818
    a658:	bl	8670 <PyErr_SetString@plt>
    a65c:	mov	x0, x19
    a660:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a664:	mov	x19, xzr
    a668:	b	a684 <PyInit__testcapi@@Base+0x14c4>
    a66c:	bl	88c0 <PyErr_Clear@plt>
    a670:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a674:	ldr	x0, [x8, #3520]
    a678:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a67c:	add	x1, x1, #0x7e4
    a680:	bl	8670 <PyErr_SetString@plt>
    a684:	mov	x0, x19
    a688:	ldp	x20, x19, [sp, #16]
    a68c:	ldp	x29, x30, [sp], #32
    a690:	ret
    a694:	mov	x0, x19
    a698:	bl	8b00 <PyObject_Hash@plt>
    a69c:	cmn	x0, #0x1
    a6a0:	b.eq	a6dc <PyInit__testcapi@@Base+0x151c>  // b.none
    a6a4:	ldr	x8, [x20, #2216]
    a6a8:	cbz	x8, a6fc <PyInit__testcapi@@Base+0x153c>
    a6ac:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    a6b0:	ldr	x9, [x9, #4008]
    a6b4:	adrp	x8, 26000 <PyInit__testcapi@@Base+0x1ce40>
    a6b8:	ldr	x8, [x8, #2072]
    a6bc:	ldr	x9, [x9, #120]
    a6c0:	cmp	x8, x9
    a6c4:	b.eq	a710 <PyInit__testcapi@@Base+0x1550>  // b.none
    a6c8:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a6cc:	ldr	x0, [x8, #3520]
    a6d0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a6d4:	add	x1, x1, #0x8bb
    a6d8:	b	a658 <PyInit__testcapi@@Base+0x1498>
    a6dc:	bl	8980 <PyErr_Occurred@plt>
    a6e0:	cbz	x0, a6a4 <PyInit__testcapi@@Base+0x14e4>
    a6e4:	bl	88c0 <PyErr_Clear@plt>
    a6e8:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a6ec:	ldr	x0, [x8, #3520]
    a6f0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a6f4:	add	x1, x1, #0x84e
    a6f8:	b	a658 <PyInit__testcapi@@Base+0x1498>
    a6fc:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    a700:	ldr	x0, [x8, #3520]
    a704:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a708:	add	x1, x1, #0x880
    a70c:	b	a658 <PyInit__testcapi@@Base+0x1498>
    a710:	mov	x0, x19
    a714:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a718:	b	a618 <PyInit__testcapi@@Base+0x1458>
    a71c:	stp	x29, x30, [sp, #-16]!
    a720:	mov	x29, sp
    a724:	bl	10440 <PyInit__testcapi@@Base+0x7280>
    a728:	ldp	x29, x30, [sp], #16
    a72c:	ret
    a730:	stp	x29, x30, [sp, #-32]!
    a734:	str	x19, [sp, #16]
    a738:	mov	x29, sp
    a73c:	mov	x0, xzr
    a740:	bl	8840 <PyLong_FromLong@plt>
    a744:	mov	x19, x0
    a748:	bl	108e8 <PyInit__testcapi@@Base+0x7728>
    a74c:	bl	10428 <PyInit__testcapi@@Base+0x7268>
    a750:	mov	x0, x19
    a754:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a758:	mov	x0, x19
    a75c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a760:	mov	x0, x19
    a764:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a768:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a76c:	ldr	x19, [x19, #4016]
    a770:	mov	x0, x19
    a774:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a778:	mov	x0, x19
    a77c:	ldr	x19, [sp, #16]
    a780:	ldp	x29, x30, [sp], #32
    a784:	ret
    a788:	stp	x29, x30, [sp, #-32]!
    a78c:	str	x19, [sp, #16]
    a790:	mov	x29, sp
    a794:	mov	x0, xzr
    a798:	bl	8840 <PyLong_FromLong@plt>
    a79c:	mov	x19, x0
    a7a0:	bl	108e8 <PyInit__testcapi@@Base+0x7728>
    a7a4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a7a8:	mov	x0, x19
    a7ac:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a7b0:	mov	x0, x19
    a7b4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a7b8:	mov	x0, x19
    a7bc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a7c0:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a7c4:	ldr	x19, [x19, #4016]
    a7c8:	mov	x0, x19
    a7cc:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a7d0:	mov	x0, x19
    a7d4:	ldr	x19, [sp, #16]
    a7d8:	ldp	x29, x30, [sp], #32
    a7dc:	ret
    a7e0:	stp	x29, x30, [sp, #-32]!
    a7e4:	str	x19, [sp, #16]
    a7e8:	mov	x29, sp
    a7ec:	mov	x0, xzr
    a7f0:	bl	8840 <PyLong_FromLong@plt>
    a7f4:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    a7f8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a7fc:	ldr	x19, [x19, #4016]
    a800:	mov	x0, x19
    a804:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a808:	mov	x0, x19
    a80c:	ldr	x19, [sp, #16]
    a810:	ldp	x29, x30, [sp], #32
    a814:	ret
    a818:	stp	x29, x30, [sp, #-32]!
    a81c:	str	x19, [sp, #16]
    a820:	mov	x29, sp
    a824:	mov	x0, xzr
    a828:	bl	8840 <PyLong_FromLong@plt>
    a82c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a830:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a834:	ldr	x19, [x19, #4016]
    a838:	mov	x0, x19
    a83c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a840:	mov	x0, x19
    a844:	ldr	x19, [sp, #16]
    a848:	ldp	x29, x30, [sp], #32
    a84c:	ret
    a850:	sub	sp, sp, #0x70
    a854:	stp	x29, x30, [sp, #80]
    a858:	str	x19, [sp, #96]
    a85c:	add	x29, sp, #0x50
    a860:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e40>
    a864:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e40>
    a868:	add	x8, x8, #0xc31
    a86c:	add	x9, x9, #0xc35
    a870:	stp	x8, x9, [sp]
    a874:	adrp	x8, 13000 <PyInit__testcapi@@Base+0x9e40>
    a878:	adrp	x9, 13000 <PyInit__testcapi@@Base+0x9e40>
    a87c:	add	x8, x8, #0xc51
    a880:	add	x9, x9, #0xc66
    a884:	adrp	x10, 13000 <PyInit__testcapi@@Base+0x9e40>
    a888:	stp	x8, x9, [x29, #-32]
    a88c:	mov	x8, sp
    a890:	add	x10, x10, #0xc3f
    a894:	stur	x8, [x29, #-16]
    a898:	mov	w8, #0x1                   	// #1
    a89c:	sub	x0, x29, #0x20
    a8a0:	stp	xzr, xzr, [sp, #32]
    a8a4:	stp	xzr, x10, [sp, #16]
    a8a8:	stur	w8, [x29, #-8]
    a8ac:	bl	8e40 <PyStructSequence_NewType@plt>
    a8b0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a8b4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a8b8:	ldr	x19, [x19, #4016]
    a8bc:	mov	x0, x19
    a8c0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a8c4:	mov	x0, x19
    a8c8:	ldr	x19, [sp, #96]
    a8cc:	ldp	x29, x30, [sp, #80]
    a8d0:	add	sp, sp, #0x70
    a8d4:	ret
    a8d8:	stp	x29, x30, [sp, #-32]!
    a8dc:	str	x19, [sp, #16]
    a8e0:	mov	x29, sp
    a8e4:	mov	x0, xzr
    a8e8:	bl	8840 <PyLong_FromLong@plt>
    a8ec:	mov	x19, x0
    a8f0:	bl	8b40 <Py_IncRef@plt>
    a8f4:	mov	x0, x19
    a8f8:	bl	8be0 <Py_DecRef@plt>
    a8fc:	mov	x0, x19
    a900:	bl	8be0 <Py_DecRef@plt>
    a904:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    a908:	ldr	x19, [x19, #4016]
    a90c:	mov	x0, x19
    a910:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    a914:	mov	x0, x19
    a918:	ldr	x19, [sp, #16]
    a91c:	ldp	x29, x30, [sp], #32
    a920:	ret
    a924:	stp	x29, x30, [sp, #-48]!
    a928:	str	x21, [sp, #16]
    a92c:	stp	x20, x19, [sp, #32]
    a930:	mov	x29, sp
    a934:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    a938:	add	x0, x0, #0xcd1
    a93c:	mov	w2, #0x10                  	// #16
    a940:	mov	x1, xzr
    a944:	bl	8f90 <PyLong_FromString@plt>
    a948:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    a94c:	mov	w8, #0x4d2                 	// #1234
    a950:	add	x1, x29, #0x1c
    a954:	mov	x19, x0
    a958:	str	w8, [x29, #28]
    a95c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    a960:	mov	x20, x0
    a964:	mov	x0, x19
    a968:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a96c:	cmn	x20, #0x1
    a970:	b.eq	a98c <PyInit__testcapi@@Base+0x17cc>  // b.none
    a974:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    a978:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    a97c:	add	x0, x0, #0xc6a
    a980:	add	x1, x1, #0xc97
    a984:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    a988:	b	a994 <PyInit__testcapi@@Base+0x17d4>
    a98c:	bl	8980 <PyErr_Occurred@plt>
    a990:	cbz	x0, a9a8 <PyInit__testcapi@@Base+0x17e8>
    a994:	mov	x0, xzr
    a998:	ldp	x20, x19, [sp, #32]
    a99c:	ldr	x21, [sp, #16]
    a9a0:	ldp	x29, x30, [sp], #48
    a9a4:	ret
    a9a8:	ldr	w8, [x29, #28]
    a9ac:	cmp	w8, #0x1
    a9b0:	b.ne	aa98 <PyInit__testcapi@@Base+0x18d8>  // b.any
    a9b4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    a9b8:	bl	8840 <PyLong_FromLong@plt>
    a9bc:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    a9c0:	mov	x19, x0
    a9c4:	mov	w0, #0x1                   	// #1
    a9c8:	bl	8840 <PyLong_FromLong@plt>
    a9cc:	cbz	x0, ab9c <PyInit__testcapi@@Base+0x19dc>
    a9d0:	mov	x21, x0
    a9d4:	mov	x0, x19
    a9d8:	mov	x1, x21
    a9dc:	bl	8490 <PyNumber_Add@plt>
    a9e0:	mov	x20, x0
    a9e4:	mov	x0, x21
    a9e8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a9ec:	mov	x0, x19
    a9f0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    a9f4:	cbz	x20, a994 <PyInit__testcapi@@Base+0x17d4>
    a9f8:	add	x1, x29, #0x1c
    a9fc:	mov	x0, x20
    aa00:	str	wzr, [x29, #28]
    aa04:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    aa08:	mov	x19, x0
    aa0c:	mov	x0, x20
    aa10:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    aa14:	cmn	x19, #0x1
    aa18:	b.ne	a974 <PyInit__testcapi@@Base+0x17b4>  // b.any
    aa1c:	bl	8980 <PyErr_Occurred@plt>
    aa20:	cbnz	x0, a994 <PyInit__testcapi@@Base+0x17d4>
    aa24:	ldr	w8, [x29, #28]
    aa28:	cmp	w8, #0x1
    aa2c:	b.ne	aa98 <PyInit__testcapi@@Base+0x18d8>  // b.any
    aa30:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    aa34:	add	x0, x0, #0xcd0
    aa38:	mov	w2, #0x10                  	// #16
    aa3c:	mov	x1, xzr
    aa40:	bl	8f90 <PyLong_FromString@plt>
    aa44:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    aa48:	mov	w8, #0x4d2                 	// #1234
    aa4c:	add	x1, x29, #0x1c
    aa50:	mov	x19, x0
    aa54:	str	w8, [x29, #28]
    aa58:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    aa5c:	mov	x20, x0
    aa60:	mov	x0, x19
    aa64:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    aa68:	cmn	x20, #0x1
    aa6c:	b.ne	a974 <PyInit__testcapi@@Base+0x17b4>  // b.any
    aa70:	bl	8980 <PyErr_Occurred@plt>
    aa74:	cbnz	x0, a994 <PyInit__testcapi@@Base+0x17d4>
    aa78:	ldr	w8, [x29, #28]
    aa7c:	cmn	w8, #0x1
    aa80:	b.eq	aaac <PyInit__testcapi@@Base+0x18ec>  // b.none
    aa84:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    aa88:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    aa8c:	add	x0, x0, #0xc6a
    aa90:	add	x1, x1, #0xcea
    aa94:	b	a984 <PyInit__testcapi@@Base+0x17c4>
    aa98:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    aa9c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    aaa0:	add	x0, x0, #0xc6a
    aaa4:	add	x1, x1, #0xcb6
    aaa8:	b	a984 <PyInit__testcapi@@Base+0x17c4>
    aaac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    aab0:	bl	8840 <PyLong_FromLong@plt>
    aab4:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    aab8:	mov	x19, x0
    aabc:	mov	w0, #0x1                   	// #1
    aac0:	bl	8840 <PyLong_FromLong@plt>
    aac4:	cbz	x0, ab9c <PyInit__testcapi@@Base+0x19dc>
    aac8:	mov	x21, x0
    aacc:	mov	x0, x19
    aad0:	mov	x1, x21
    aad4:	bl	8fe0 <PyNumber_Subtract@plt>
    aad8:	mov	x20, x0
    aadc:	mov	x0, x21
    aae0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    aae4:	mov	x0, x19
    aae8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    aaec:	cbz	x20, a994 <PyInit__testcapi@@Base+0x17d4>
    aaf0:	add	x1, x29, #0x1c
    aaf4:	mov	x0, x20
    aaf8:	str	wzr, [x29, #28]
    aafc:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    ab00:	mov	x19, x0
    ab04:	mov	x0, x20
    ab08:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    ab0c:	cmn	x19, #0x1
    ab10:	b.ne	a974 <PyInit__testcapi@@Base+0x17b4>  // b.any
    ab14:	bl	8980 <PyErr_Occurred@plt>
    ab18:	cbnz	x0, a994 <PyInit__testcapi@@Base+0x17d4>
    ab1c:	ldr	w8, [x29, #28]
    ab20:	cmn	w8, #0x1
    ab24:	b.ne	aa84 <PyInit__testcapi@@Base+0x18c4>  // b.any
    ab28:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    ab2c:	add	x0, x0, #0xd3a
    ab30:	mov	w2, #0x10                  	// #16
    ab34:	mov	x1, xzr
    ab38:	bl	8f90 <PyLong_FromString@plt>
    ab3c:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    ab40:	mov	w8, #0x4d2                 	// #1234
    ab44:	add	x1, x29, #0x1c
    ab48:	mov	x20, x0
    ab4c:	str	w8, [x29, #28]
    ab50:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    ab54:	mov	x19, x0
    ab58:	mov	x0, x20
    ab5c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    ab60:	cmp	x19, #0xff
    ab64:	b.eq	ab80 <PyInit__testcapi@@Base+0x19c0>  // b.none
    ab68:	cmn	x19, #0x1
    ab6c:	b.ne	ac18 <PyInit__testcapi@@Base+0x1a58>  // b.any
    ab70:	bl	8980 <PyErr_Occurred@plt>
    ab74:	cbnz	x0, a994 <PyInit__testcapi@@Base+0x17d4>
    ab78:	cmp	x19, #0xff
    ab7c:	b.ne	ac18 <PyInit__testcapi@@Base+0x1a58>  // b.any
    ab80:	ldr	w8, [x29, #28]
    ab84:	cbz	w8, aba8 <PyInit__testcapi@@Base+0x19e8>
    ab88:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ab8c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ab90:	add	x0, x0, #0xc6a
    ab94:	add	x1, x1, #0xd20
    ab98:	b	a984 <PyInit__testcapi@@Base+0x17c4>
    ab9c:	mov	x0, x19
    aba0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    aba4:	b	a994 <PyInit__testcapi@@Base+0x17d4>
    aba8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    abac:	add	x0, x0, #0xd39
    abb0:	mov	w2, #0x10                  	// #16
    abb4:	mov	x1, xzr
    abb8:	bl	8f90 <PyLong_FromString@plt>
    abbc:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    abc0:	add	x1, x29, #0x1c
    abc4:	mov	x20, x0
    abc8:	str	wzr, [x29, #28]
    abcc:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    abd0:	mov	x19, x0
    abd4:	mov	x0, x20
    abd8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    abdc:	cmn	x19, #0xff
    abe0:	b.eq	abfc <PyInit__testcapi@@Base+0x1a3c>  // b.none
    abe4:	cmn	x19, #0x1
    abe8:	b.ne	ac18 <PyInit__testcapi@@Base+0x1a58>  // b.any
    abec:	bl	8980 <PyErr_Occurred@plt>
    abf0:	cbnz	x0, a994 <PyInit__testcapi@@Base+0x17d4>
    abf4:	cmn	x19, #0xff
    abf8:	b.ne	ac18 <PyInit__testcapi@@Base+0x1a58>  // b.any
    abfc:	ldr	w8, [x29, #28]
    ac00:	cbz	w8, ac2c <PyInit__testcapi@@Base+0x1a6c>
    ac04:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ac08:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ac0c:	add	x0, x0, #0xc6a
    ac10:	add	x1, x1, #0xd3d
    ac14:	b	a984 <PyInit__testcapi@@Base+0x17c4>
    ac18:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ac1c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ac20:	add	x0, x0, #0xc6a
    ac24:	add	x1, x1, #0xd05
    ac28:	b	a984 <PyInit__testcapi@@Base+0x17c4>
    ac2c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    ac30:	mov	x21, #0x7fffffffffffffff    	// #9223372036854775807
    ac34:	bl	8840 <PyLong_FromLong@plt>
    ac38:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    ac3c:	mov	w8, #0x4d2                 	// #1234
    ac40:	add	x1, x29, #0x1c
    ac44:	mov	x20, x0
    ac48:	str	w8, [x29, #28]
    ac4c:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    ac50:	mov	x19, x0
    ac54:	mov	x0, x20
    ac58:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    ac5c:	cmp	x19, x21
    ac60:	b.eq	ac80 <PyInit__testcapi@@Base+0x1ac0>  // b.none
    ac64:	cmn	x19, #0x1
    ac68:	b.ne	acf8 <PyInit__testcapi@@Base+0x1b38>  // b.any
    ac6c:	bl	8980 <PyErr_Occurred@plt>
    ac70:	cbnz	x0, a994 <PyInit__testcapi@@Base+0x17d4>
    ac74:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    ac78:	cmp	x19, x8
    ac7c:	b.ne	acf8 <PyInit__testcapi@@Base+0x1b38>  // b.any
    ac80:	ldr	w8, [x29, #28]
    ac84:	cbnz	w8, ab88 <PyInit__testcapi@@Base+0x19c8>
    ac88:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    ac8c:	mov	x21, #0x8000000000000000    	// #-9223372036854775808
    ac90:	bl	8840 <PyLong_FromLong@plt>
    ac94:	cbz	x0, a998 <PyInit__testcapi@@Base+0x17d8>
    ac98:	add	x1, x29, #0x1c
    ac9c:	mov	x20, x0
    aca0:	str	wzr, [x29, #28]
    aca4:	bl	8950 <PyLong_AsLongAndOverflow@plt>
    aca8:	mov	x19, x0
    acac:	mov	x0, x20
    acb0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    acb4:	cmp	x19, x21
    acb8:	b.eq	acd8 <PyInit__testcapi@@Base+0x1b18>  // b.none
    acbc:	cmn	x19, #0x1
    acc0:	b.ne	ad0c <PyInit__testcapi@@Base+0x1b4c>  // b.any
    acc4:	bl	8980 <PyErr_Occurred@plt>
    acc8:	cbnz	x0, a994 <PyInit__testcapi@@Base+0x17d4>
    accc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    acd0:	cmp	x19, x8
    acd4:	b.ne	ad0c <PyInit__testcapi@@Base+0x1b4c>  // b.any
    acd8:	ldr	w8, [x29, #28]
    acdc:	cbnz	w8, ab88 <PyInit__testcapi@@Base+0x19c8>
    ace0:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ace4:	ldr	x19, [x19, #4016]
    ace8:	mov	x0, x19
    acec:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    acf0:	mov	x0, x19
    acf4:	b	a998 <PyInit__testcapi@@Base+0x17d8>
    acf8:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    acfc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ad00:	add	x0, x0, #0xc6a
    ad04:	add	x1, x1, #0xd5a
    ad08:	b	a984 <PyInit__testcapi@@Base+0x17c4>
    ad0c:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ad10:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ad14:	add	x0, x0, #0xc6a
    ad18:	add	x1, x1, #0xd79
    ad1c:	b	a984 <PyInit__testcapi@@Base+0x17c4>
    ad20:	stp	x29, x30, [sp, #-32]!
    ad24:	str	x19, [sp, #16]
    ad28:	mov	x29, sp
    ad2c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ad30:	ldr	x19, [x19, #4016]
    ad34:	mov	x0, x19
    ad38:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ad3c:	mov	x0, x19
    ad40:	bl	8bd0 <PyLong_AsDouble@plt>
    ad44:	fmov	d1, #-1.000000000000000000e+00
    ad48:	fcmp	d0, d1
    ad4c:	b.eq	ad74 <PyInit__testcapi@@Base+0x1bb4>  // b.none
    ad50:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ad54:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ad58:	add	x0, x0, #0xc81
    ad5c:	add	x1, x1, #0xd98
    ad60:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    ad64:	mov	x0, xzr
    ad68:	ldr	x19, [sp, #16]
    ad6c:	ldp	x29, x30, [sp], #32
    ad70:	ret
    ad74:	bl	8980 <PyErr_Occurred@plt>
    ad78:	cbz	x0, ad50 <PyInit__testcapi@@Base+0x1b90>
    ad7c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ad80:	ldr	x8, [x8, #3952]
    ad84:	ldr	x0, [x8]
    ad88:	bl	8760 <PyErr_ExceptionMatches@plt>
    ad8c:	cbz	w0, ada0 <PyInit__testcapi@@Base+0x1be0>
    ad90:	bl	88c0 <PyErr_Clear@plt>
    ad94:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
    ad98:	ldr	x0, [x0, #4016]
    ad9c:	b	ad68 <PyInit__testcapi@@Base+0x1ba8>
    ada0:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ada4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ada8:	add	x0, x0, #0xc81
    adac:	add	x1, x1, #0xdbe
    adb0:	b	ad60 <PyInit__testcapi@@Base+0x1ba0>
    adb4:	stp	x29, x30, [sp, #-32]!
    adb8:	str	x19, [sp, #16]
    adbc:	mov	x29, sp
    adc0:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    adc4:	ldr	x19, [x19, #4016]
    adc8:	mov	x0, x19
    adcc:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    add0:	mov	x0, x19
    add4:	bl	8930 <PyLong_AsSize_t@plt>
    add8:	cmn	x0, #0x1
    addc:	b.eq	ae04 <PyInit__testcapi@@Base+0x1c44>  // b.none
    ade0:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ade4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ade8:	add	x0, x0, #0xc95
    adec:	add	x1, x1, #0xdfa
    adf0:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    adf4:	mov	x0, xzr
    adf8:	ldr	x19, [sp, #16]
    adfc:	ldp	x29, x30, [sp], #32
    ae00:	ret
    ae04:	bl	8980 <PyErr_Occurred@plt>
    ae08:	cbz	x0, ade0 <PyInit__testcapi@@Base+0x1c20>
    ae0c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ae10:	ldr	x19, [x19, #3952]
    ae14:	ldr	x0, [x19]
    ae18:	bl	8760 <PyErr_ExceptionMatches@plt>
    ae1c:	cbz	w0, ae4c <PyInit__testcapi@@Base+0x1c8c>
    ae20:	bl	88c0 <PyErr_Clear@plt>
    ae24:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
    ae28:	ldr	x0, [x0, #4016]
    ae2c:	bl	8850 <PyLong_AsSsize_t@plt>
    ae30:	cmn	x0, #0x1
    ae34:	b.eq	ae60 <PyInit__testcapi@@Base+0x1ca0>  // b.none
    ae38:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ae3c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ae40:	add	x0, x0, #0xc95
    ae44:	add	x1, x1, #0xe5c
    ae48:	b	adf0 <PyInit__testcapi@@Base+0x1c30>
    ae4c:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ae50:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ae54:	add	x0, x0, #0xc95
    ae58:	add	x1, x1, #0xe20
    ae5c:	b	adf0 <PyInit__testcapi@@Base+0x1c30>
    ae60:	bl	8980 <PyErr_Occurred@plt>
    ae64:	cbz	x0, ae38 <PyInit__testcapi@@Base+0x1c78>
    ae68:	ldr	x0, [x19]
    ae6c:	bl	8760 <PyErr_ExceptionMatches@plt>
    ae70:	cbz	w0, ae84 <PyInit__testcapi@@Base+0x1cc4>
    ae74:	bl	88c0 <PyErr_Clear@plt>
    ae78:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
    ae7c:	ldr	x0, [x0, #4016]
    ae80:	b	adf8 <PyInit__testcapi@@Base+0x1c38>
    ae84:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ae88:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    ae8c:	add	x0, x0, #0xc95
    ae90:	add	x1, x1, #0xe83
    ae94:	b	adf0 <PyInit__testcapi@@Base+0x1c30>
    ae98:	stp	x29, x30, [sp, #-32]!
    ae9c:	str	x19, [sp, #16]
    aea0:	mov	x29, sp
    aea4:	mov	x0, xzr
    aea8:	bl	84f0 <PyLong_AsUnsignedLongLongMask@plt>
    aeac:	cmn	x0, #0x1
    aeb0:	b.eq	aedc <PyInit__testcapi@@Base+0x1d1c>  // b.none
    aeb4:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    aeb8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    aebc:	add	x0, x0, #0xca9
    aec0:	add	x1, x1, #0xec0
    aec4:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    aec8:	mov	x19, xzr
    aecc:	mov	x0, x19
    aed0:	ldr	x19, [sp, #16]
    aed4:	ldp	x29, x30, [sp], #32
    aed8:	ret
    aedc:	bl	8980 <PyErr_Occurred@plt>
    aee0:	cbz	x0, aeb4 <PyInit__testcapi@@Base+0x1cf4>
    aee4:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    aee8:	ldr	x8, [x8, #3848]
    aeec:	ldr	x0, [x8]
    aef0:	bl	8760 <PyErr_ExceptionMatches@plt>
    aef4:	cbz	w0, af10 <PyInit__testcapi@@Base+0x1d50>
    aef8:	bl	88c0 <PyErr_Clear@plt>
    aefc:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    af00:	ldr	x19, [x19, #4016]
    af04:	mov	x0, x19
    af08:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    af0c:	b	aecc <PyInit__testcapi@@Base+0x1d0c>
    af10:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    af14:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    af18:	add	x0, x0, #0xca9
    af1c:	add	x1, x1, #0xef4
    af20:	b	aec4 <PyInit__testcapi@@Base+0x1d04>
    af24:	stp	x29, x30, [sp, #-64]!
    af28:	str	x23, [sp, #16]
    af2c:	stp	x22, x21, [sp, #32]
    af30:	stp	x20, x19, [sp, #48]
    af34:	mov	x29, sp
    af38:	adrp	x23, 12000 <PyInit__testcapi@@Base+0x8e40>
    af3c:	mov	x22, xzr
    af40:	add	x23, x23, #0x450
    af44:	ldr	x0, [x23, x22]
    af48:	bl	8840 <PyLong_FromLong@plt>
    af4c:	mov	x19, x0
    af50:	cbz	x0, afdc <PyInit__testcapi@@Base+0x1e1c>
    af54:	mov	x0, x19
    af58:	bl	85f0 <_PyLong_NumBits@plt>
    af5c:	mov	x21, x0
    af60:	mov	x0, x19
    af64:	bl	85b0 <_PyLong_Sign@plt>
    af68:	mov	w20, w0
    af6c:	mov	x0, x19
    af70:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    af74:	add	x8, x23, x22
    af78:	ldr	x9, [x8, #8]
    af7c:	cmp	x21, x9
    af80:	b.ne	afb0 <PyInit__testcapi@@Base+0x1df0>  // b.any
    af84:	ldr	w8, [x8, #16]
    af88:	cmp	w20, w8
    af8c:	b.ne	afc4 <PyInit__testcapi@@Base+0x1e04>  // b.any
    af90:	add	x22, x22, #0x18
    af94:	cmp	x22, #0x168
    af98:	b.ne	af44 <PyInit__testcapi@@Base+0x1d84>  // b.any
    af9c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    afa0:	ldr	x19, [x19, #4016]
    afa4:	mov	x0, x19
    afa8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    afac:	b	afdc <PyInit__testcapi@@Base+0x1e1c>
    afb0:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    afb4:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    afb8:	add	x0, x0, #0xcce
    afbc:	add	x1, x1, #0xf40
    afc0:	b	afd4 <PyInit__testcapi@@Base+0x1e14>
    afc4:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    afc8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    afcc:	add	x0, x0, #0xcce
    afd0:	add	x1, x1, #0xf61
    afd4:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    afd8:	mov	x19, xzr
    afdc:	mov	x0, x19
    afe0:	ldp	x20, x19, [sp, #48]
    afe4:	ldp	x22, x21, [sp, #32]
    afe8:	ldr	x23, [sp, #16]
    afec:	ldp	x29, x30, [sp], #64
    aff0:	ret
    aff4:	sub	sp, sp, #0x30
    aff8:	stp	x29, x30, [sp, #16]
    affc:	stp	x20, x19, [sp, #32]
    b000:	add	x29, sp, #0x10
    b004:	mov	w0, #0x1                   	// #1
    b008:	bl	8920 <PyTuple_New@plt>
    b00c:	mov	x19, x0
    b010:	cbz	x0, b058 <PyInit__testcapi@@Base+0x1e98>
    b014:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    b018:	add	x0, x0, #0xcd1
    b01c:	mov	w2, #0x10                  	// #16
    b020:	mov	x1, xzr
    b024:	bl	8f90 <PyLong_FromString@plt>
    b028:	cbz	x0, b054 <PyInit__testcapi@@Base+0x1e94>
    b02c:	mov	x20, x0
    b030:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    b034:	cmn	x0, #0x1
    b038:	str	x0, [sp, #8]
    b03c:	b.eq	b06c <PyInit__testcapi@@Base+0x1eac>  // b.none
    b040:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    b044:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b048:	add	x0, x0, #0xfc7
    b04c:	add	x1, x1, #0xf7f
    b050:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    b054:	mov	x19, xzr
    b058:	mov	x0, x19
    b05c:	ldp	x20, x19, [sp, #32]
    b060:	ldp	x29, x30, [sp, #16]
    b064:	add	sp, sp, #0x30
    b068:	ret
    b06c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b070:	add	x1, x1, #0xfc5
    b074:	add	x2, sp, #0x8
    b078:	mov	x0, x19
    b07c:	str	x20, [x19, #24]
    b080:	str	xzr, [sp, #8]
    b084:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    b088:	cbz	w0, b054 <PyInit__testcapi@@Base+0x1e94>
    b08c:	ldr	x8, [sp, #8]
    b090:	cmn	x8, #0x1
    b094:	b.eq	b0ac <PyInit__testcapi@@Base+0x1eec>  // b.none
    b098:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    b09c:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b0a0:	add	x0, x0, #0xfc7
    b0a4:	add	x1, x1, #0xfd3
    b0a8:	b	b050 <PyInit__testcapi@@Base+0x1e90>
    b0ac:	mov	x0, x20
    b0b0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b0b4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b0b8:	add	x0, x0, #0x4
    b0bc:	mov	w2, #0x10                  	// #16
    b0c0:	mov	x1, xzr
    b0c4:	bl	8f90 <PyLong_FromString@plt>
    b0c8:	cbz	x0, b054 <PyInit__testcapi@@Base+0x1e94>
    b0cc:	mov	x20, x0
    b0d0:	bl	88f0 <PyLong_AsUnsignedLongMask@plt>
    b0d4:	cmn	x0, #0x42
    b0d8:	str	x0, [sp, #8]
    b0dc:	b.ne	b128 <PyInit__testcapi@@Base+0x1f68>  // b.any
    b0e0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b0e4:	add	x1, x1, #0xfc5
    b0e8:	add	x2, sp, #0x8
    b0ec:	mov	x0, x19
    b0f0:	str	x20, [x19, #24]
    b0f4:	str	xzr, [sp, #8]
    b0f8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    b0fc:	cbz	w0, b054 <PyInit__testcapi@@Base+0x1e94>
    b100:	ldr	x8, [sp, #8]
    b104:	cmn	x8, #0x42
    b108:	b.ne	b13c <PyInit__testcapi@@Base+0x1f7c>  // b.any
    b10c:	mov	x0, x19
    b110:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b114:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    b118:	ldr	x19, [x19, #4016]
    b11c:	mov	x0, x19
    b120:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    b124:	b	b058 <PyInit__testcapi@@Base+0x1e98>
    b128:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    b12c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b130:	add	x0, x0, #0xfc7
    b134:	add	x1, x1, #0x20
    b138:	b	b050 <PyInit__testcapi@@Base+0x1e90>
    b13c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    b140:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b144:	add	x0, x0, #0xfc7
    b148:	add	x1, x1, #0x69
    b14c:	b	b050 <PyInit__testcapi@@Base+0x1e90>
    b150:	stp	x29, x30, [sp, #-48]!
    b154:	str	x21, [sp, #16]
    b158:	stp	x20, x19, [sp, #32]
    b15c:	mov	x29, sp
    b160:	mov	x0, xzr
    b164:	bl	8920 <PyTuple_New@plt>
    b168:	mov	x19, x0
    b16c:	cbz	x0, b204 <PyInit__testcapi@@Base+0x2044>
    b170:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b174:	add	x1, x1, #0x9d
    b178:	mov	x0, x19
    b17c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    b180:	cbz	w0, b1cc <PyInit__testcapi@@Base+0x200c>
    b184:	bl	8c20 <PyDict_New@plt>
    b188:	cbz	x0, b1e4 <PyInit__testcapi@@Base+0x2024>
    b18c:	mov	x20, x0
    b190:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    b194:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe40>
    b198:	add	x2, x2, #0x9d
    b19c:	add	x3, x3, #0xdd8
    b1a0:	mov	x0, x19
    b1a4:	mov	x1, x20
    b1a8:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    b1ac:	mov	w21, w0
    b1b0:	mov	x0, x19
    b1b4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b1b8:	mov	x0, x20
    b1bc:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    b1c0:	cbnz	w21, b1f4 <PyInit__testcapi@@Base+0x2034>
    b1c4:	mov	x19, xzr
    b1c8:	b	b204 <PyInit__testcapi@@Base+0x2044>
    b1cc:	mov	x0, x19
    b1d0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b1d4:	mov	x0, xzr
    b1d8:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    b1dc:	mov	x19, xzr
    b1e0:	b	b204 <PyInit__testcapi@@Base+0x2044>
    b1e4:	mov	x0, x19
    b1e8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b1ec:	mov	x0, xzr
    b1f0:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    b1f4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    b1f8:	ldr	x19, [x19, #4016]
    b1fc:	mov	x0, x19
    b200:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    b204:	mov	x0, x19
    b208:	ldp	x20, x19, [sp, #32]
    b20c:	ldr	x21, [sp, #16]
    b210:	ldp	x29, x30, [sp], #48
    b214:	ret
    b218:	stp	x29, x30, [sp, #-80]!
    b21c:	str	x28, [sp, #16]
    b220:	stp	x24, x23, [sp, #32]
    b224:	stp	x22, x21, [sp, #48]
    b228:	stp	x20, x19, [sp, #64]
    b22c:	mov	x29, sp
    b230:	sub	sp, sp, #0x1c0
    b234:	mov	x0, x1
    b238:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b23c:	add	x1, x1, #0xb3
    b240:	add	x2, x29, #0x18
    b244:	sub	x3, x29, #0x8
    b248:	sub	x4, x29, #0x10
    b24c:	sub	x5, x29, #0x18
    b250:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    b254:	cbz	w0, b298 <PyInit__testcapi@@Base+0x20d8>
    b258:	ldur	x8, [x29, #-24]
    b25c:	adrp	x10, 25000 <PyInit__testcapi@@Base+0x1be40>
    b260:	ldr	x9, [x8, #8]
    b264:	ldr	x10, [x10, #4064]
    b268:	cmp	x9, x10
    b26c:	b.eq	b2a0 <PyInit__testcapi@@Base+0x20e0>  // b.none
    b270:	adrp	x10, 25000 <PyInit__testcapi@@Base+0x1be40>
    b274:	ldr	x10, [x10, #3872]
    b278:	cmp	x9, x10
    b27c:	b.eq	b2a0 <PyInit__testcapi@@Base+0x20e0>  // b.none
    b280:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    b284:	ldr	x8, [x8, #3944]
    b288:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b28c:	add	x1, x1, #0xd1
    b290:	ldr	x0, [x8]
    b294:	bl	8670 <PyErr_SetString@plt>
    b298:	mov	x19, xzr
    b29c:	b	b404 <PyInit__testcapi@@Base+0x2244>
    b2a0:	movi	v0.2d, #0x0
    b2a4:	stur	xzr, [x29, #-32]
    b2a8:	stp	q0, q0, [sp, #256]
    b2ac:	stp	q0, q0, [sp, #224]
    b2b0:	stp	q0, q0, [sp, #192]
    b2b4:	stp	q0, q0, [sp, #160]
    b2b8:	stp	q0, q0, [sp, #128]
    b2bc:	stp	q0, q0, [sp, #96]
    b2c0:	stp	q0, q0, [sp, #64]
    b2c4:	stp	q0, q0, [sp, #32]
    b2c8:	stp	q0, q0, [x29, #-160]
    b2cc:	stp	q0, q0, [x29, #-128]
    b2d0:	stp	q0, q0, [x29, #-64]
    b2d4:	stp	q0, q0, [x29, #-96]
    b2d8:	ldr	x8, [x8, #16]
    b2dc:	cmp	x8, #0x8
    b2e0:	b.le	b300 <PyInit__testcapi@@Base+0x2140>
    b2e4:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    b2e8:	ldr	x8, [x8, #3944]
    b2ec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b2f0:	add	x1, x1, #0x115
    b2f4:	ldr	x0, [x8]
    b2f8:	bl	8670 <PyErr_SetString@plt>
    b2fc:	b	b3e4 <PyInit__testcapi@@Base+0x2224>
    b300:	cmp	x8, #0x1
    b304:	b.lt	b374 <PyInit__testcapi@@Base+0x21b4>  // b.tstop
    b308:	mov	x20, xzr
    b30c:	mov	x19, xzr
    b310:	mov	x21, xzr
    b314:	neg	x22, x8
    b318:	sub	x23, x29, #0xa0
    b31c:	sub	x24, x29, #0x60
    b320:	ldur	x8, [x29, #-24]
    b324:	ldr	x9, [x8, #8]
    b328:	ldrb	w9, [x9, #171]
    b32c:	tbnz	w9, #1, b33c <PyInit__testcapi@@Base+0x217c>
    b330:	add	x8, x8, x20
    b334:	add	x8, x8, #0x18
    b338:	b	b344 <PyInit__testcapi@@Base+0x2184>
    b33c:	ldr	x8, [x8, #24]
    b340:	add	x8, x8, x21, lsl #3
    b344:	ldr	x0, [x8]
    b348:	add	x1, x23, x20
    b34c:	bl	8610 <PyUnicode_FSConverter@plt>
    b350:	cbz	w0, b3c8 <PyInit__testcapi@@Base+0x2208>
    b354:	ldr	x8, [x23, x20]
    b358:	sub	x19, x19, #0x1
    b35c:	add	x21, x21, #0x1
    b360:	cmp	x22, x19
    b364:	add	x8, x8, #0x20
    b368:	str	x8, [x24, x20]
    b36c:	add	x20, x20, #0x8
    b370:	b.ne	b320 <PyInit__testcapi@@Base+0x2160>  // b.any
    b374:	ldr	x0, [x29, #24]
    b378:	ldp	x2, x1, [x29, #-16]
    b37c:	add	x8, sp, #0x20
    b380:	add	x5, x8, #0x20
    b384:	add	x6, x8, #0x40
    b388:	add	x7, x8, #0x60
    b38c:	add	x9, x8, #0x80
    b390:	add	x10, x8, #0xa0
    b394:	add	x11, x8, #0xc0
    b398:	add	x8, x8, #0xe0
    b39c:	sub	x3, x29, #0x60
    b3a0:	add	x4, sp, #0x20
    b3a4:	stp	x11, x8, [sp, #16]
    b3a8:	stp	x9, x10, [sp]
    b3ac:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    b3b0:	cbz	w0, b3e4 <PyInit__testcapi@@Base+0x2224>
    b3b4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    b3b8:	ldr	x19, [x19, #4016]
    b3bc:	mov	x0, x19
    b3c0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    b3c4:	b	b3e8 <PyInit__testcapi@@Base+0x2228>
    b3c8:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    b3cc:	ldr	x8, [x8, #3944]
    b3d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b3d4:	neg	x2, x19
    b3d8:	add	x1, x1, #0x151
    b3dc:	ldr	x0, [x8]
    b3e0:	bl	8e60 <PyErr_Format@plt>
    b3e4:	mov	x19, xzr
    b3e8:	mov	x20, xzr
    b3ec:	sub	x21, x29, #0xa0
    b3f0:	ldr	x0, [x21, x20]
    b3f4:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    b3f8:	add	x20, x20, #0x8
    b3fc:	cmp	x20, #0x40
    b400:	b.ne	b3f0 <PyInit__testcapi@@Base+0x2230>  // b.any
    b404:	mov	x0, x19
    b408:	add	sp, sp, #0x1c0
    b40c:	ldp	x20, x19, [sp, #64]
    b410:	ldp	x22, x21, [sp, #48]
    b414:	ldp	x24, x23, [sp, #32]
    b418:	ldr	x28, [sp, #16]
    b41c:	ldp	x29, x30, [sp], #80
    b420:	ret
    b424:	stp	x29, x30, [sp, #-48]!
    b428:	str	x21, [sp, #16]
    b42c:	stp	x20, x19, [sp, #32]
    b430:	mov	x29, sp
    b434:	mov	x0, xzr
    b438:	bl	8600 <PyObject_Str@plt>
    b43c:	mov	x19, x0
    b440:	mov	x0, xzr
    b444:	bl	8600 <PyObject_Str@plt>
    b448:	mov	x20, x0
    b44c:	mov	w0, #0x2                   	// #2
    b450:	mov	x1, x19
    b454:	mov	x2, x20
    b458:	bl	9040 <PyTuple_Pack@plt>
    b45c:	mov	x21, x0
    b460:	mov	x0, x19
    b464:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    b468:	mov	x0, x20
    b46c:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    b470:	mov	x0, x21
    b474:	ldp	x20, x19, [sp, #32]
    b478:	ldr	x21, [sp, #16]
    b47c:	ldp	x29, x30, [sp], #48
    b480:	ret
    b484:	stp	x29, x30, [sp, #-32]!
    b488:	stp	x20, x19, [sp, #16]
    b48c:	mov	x29, sp
    b490:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b494:	add	x0, x0, #0x19c
    b498:	mov	w1, #0x1                   	// #1
    b49c:	bl	8260 <PyUnicode_FromFormat@plt>
    b4a0:	mov	x19, x0
    b4a4:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b4a8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b4ac:	add	x1, x1, #0xcce
    b4b0:	mov	x0, x19
    b4b4:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b4b8:	cbz	w0, b644 <PyInit__testcapi@@Base+0x2484>
    b4bc:	mov	x0, x19
    b4c0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b4c4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b4c8:	add	x0, x0, #0x1ae
    b4cc:	mov	w1, #0x1                   	// #1
    b4d0:	bl	8260 <PyUnicode_FromFormat@plt>
    b4d4:	mov	x19, x0
    b4d8:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b4dc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b4e0:	add	x1, x1, #0xcce
    b4e4:	mov	x0, x19
    b4e8:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b4ec:	cbz	w0, b650 <PyInit__testcapi@@Base+0x2490>
    b4f0:	mov	x0, x19
    b4f4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b4f8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b4fc:	add	x0, x0, #0x1c2
    b500:	mov	w1, #0x1                   	// #1
    b504:	bl	8260 <PyUnicode_FromFormat@plt>
    b508:	mov	x19, x0
    b50c:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b510:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b514:	add	x1, x1, #0xcce
    b518:	mov	x0, x19
    b51c:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b520:	cbz	w0, b65c <PyInit__testcapi@@Base+0x249c>
    b524:	mov	x0, x19
    b528:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b52c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b530:	add	x0, x0, #0x1d6
    b534:	mov	w1, #0x1                   	// #1
    b538:	bl	8260 <PyUnicode_FromFormat@plt>
    b53c:	mov	x19, x0
    b540:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b544:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b548:	add	x1, x1, #0xcce
    b54c:	mov	x0, x19
    b550:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b554:	cbz	w0, b668 <PyInit__testcapi@@Base+0x24a8>
    b558:	mov	x0, x19
    b55c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b560:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b564:	add	x0, x0, #0x1e8
    b568:	mov	w1, #0x1                   	// #1
    b56c:	bl	8260 <PyUnicode_FromFormat@plt>
    b570:	mov	x19, x0
    b574:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b578:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b57c:	add	x1, x1, #0xcce
    b580:	mov	x0, x19
    b584:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b588:	cbz	w0, b674 <PyInit__testcapi@@Base+0x24b4>
    b58c:	mov	x0, x19
    b590:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b594:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b598:	add	x0, x0, #0x1fc
    b59c:	mov	w1, #0x1                   	// #1
    b5a0:	bl	8260 <PyUnicode_FromFormat@plt>
    b5a4:	mov	x19, x0
    b5a8:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b5ac:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b5b0:	add	x1, x1, #0xcce
    b5b4:	mov	x0, x19
    b5b8:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b5bc:	cbz	w0, b680 <PyInit__testcapi@@Base+0x24c0>
    b5c0:	mov	x0, x19
    b5c4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b5c8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b5cc:	add	x0, x0, #0x210
    b5d0:	mov	w1, #0x1                   	// #1
    b5d4:	bl	8260 <PyUnicode_FromFormat@plt>
    b5d8:	mov	x19, x0
    b5dc:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b5e0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b5e4:	add	x1, x1, #0xcce
    b5e8:	mov	x0, x19
    b5ec:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b5f0:	cbz	w0, b68c <PyInit__testcapi@@Base+0x24cc>
    b5f4:	mov	x0, x19
    b5f8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b5fc:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b600:	add	x0, x0, #0x226
    b604:	mov	w1, #0x1                   	// #1
    b608:	bl	8260 <PyUnicode_FromFormat@plt>
    b60c:	mov	x19, x0
    b610:	cbz	x0, b6bc <PyInit__testcapi@@Base+0x24fc>
    b614:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    b618:	add	x1, x1, #0xcce
    b61c:	mov	x0, x19
    b620:	bl	8a30 <_PyUnicode_EqualToASCIIString@plt>
    b624:	cbz	w0, b698 <PyInit__testcapi@@Base+0x24d8>
    b628:	mov	x0, x19
    b62c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    b630:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    b634:	ldr	x19, [x19, #4016]
    b638:	mov	x0, x19
    b63c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    b640:	b	b6bc <PyInit__testcapi@@Base+0x24fc>
    b644:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b648:	add	x20, x20, #0x19f
    b64c:	b	b6a0 <PyInit__testcapi@@Base+0x24e0>
    b650:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b654:	add	x20, x20, #0x1b2
    b658:	b	b6a0 <PyInit__testcapi@@Base+0x24e0>
    b65c:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b660:	add	x20, x20, #0x1c6
    b664:	b	b6a0 <PyInit__testcapi@@Base+0x24e0>
    b668:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b66c:	add	x20, x20, #0x1d9
    b670:	b	b6a0 <PyInit__testcapi@@Base+0x24e0>
    b674:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b678:	add	x20, x20, #0x1ec
    b67c:	b	b6a0 <PyInit__testcapi@@Base+0x24e0>
    b680:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b684:	add	x20, x20, #0x200
    b688:	b	b6a0 <PyInit__testcapi@@Base+0x24e0>
    b68c:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b690:	add	x20, x20, #0x215
    b694:	b	b6a0 <PyInit__testcapi@@Base+0x24e0>
    b698:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    b69c:	add	x20, x20, #0x22b
    b6a0:	mov	x0, x19
    b6a4:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    b6a8:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    b6ac:	add	x0, x0, #0xcf2
    b6b0:	mov	x1, x20
    b6b4:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    b6b8:	mov	x19, xzr
    b6bc:	mov	x0, x19
    b6c0:	ldp	x20, x19, [sp, #16]
    b6c4:	ldp	x29, x30, [sp], #32
    b6c8:	ret
    b6cc:	stp	x29, x30, [sp, #-32]!
    b6d0:	str	x19, [sp, #16]
    b6d4:	mov	x29, sp
    b6d8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    b6dc:	ldr	x19, [x19, #4016]
    b6e0:	mov	x0, x19
    b6e4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    b6e8:	mov	x0, x19
    b6ec:	ldr	x19, [sp, #16]
    b6f0:	ldp	x29, x30, [sp], #32
    b6f4:	ret
    b6f8:	stp	d9, d8, [sp, #-48]!
    b6fc:	stp	x29, x30, [sp, #16]
    b700:	str	x19, [sp, #32]
    b704:	mov	x29, sp
    b708:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b70c:	add	x0, x0, #0x307
    b710:	mov	x1, xzr
    b714:	mov	x2, xzr
    b718:	bl	8860 <PyOS_string_to_double@plt>
    b71c:	fmov	d9, #-1.000000000000000000e+00
    b720:	mov	v8.16b, v0.16b
    b724:	fcmp	d0, d9
    b728:	b.ne	b734 <PyInit__testcapi@@Base+0x2574>  // b.any
    b72c:	bl	8980 <PyErr_Occurred@plt>
    b730:	cbnz	x0, b758 <PyInit__testcapi@@Base+0x2598>
    b734:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e40>
    b738:	ldr	d0, [x8, #248]
    b73c:	fcmp	d8, d0
    b740:	b.eq	b76c <PyInit__testcapi@@Base+0x25ac>  // b.none
    b744:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b748:	add	x1, x1, #0x23c
    b74c:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    b750:	add	x0, x0, #0xd41
    b754:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    b758:	mov	x0, xzr
    b75c:	ldr	x19, [sp, #32]
    b760:	ldp	x29, x30, [sp, #16]
    b764:	ldp	d9, d8, [sp], #48
    b768:	ret
    b76c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b770:	add	x0, x0, #0x25e
    b774:	mov	x1, xzr
    b778:	mov	x2, xzr
    b77c:	bl	8860 <PyOS_string_to_double@plt>
    b780:	mov	v8.16b, v0.16b
    b784:	fcmp	d0, d9
    b788:	b.ne	b794 <PyInit__testcapi@@Base+0x25d4>  // b.any
    b78c:	bl	8980 <PyErr_Occurred@plt>
    b790:	cbnz	x0, b758 <PyInit__testcapi@@Base+0x2598>
    b794:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e40>
    b798:	ldr	d0, [x8, #256]
    b79c:	fcmp	d8, d0
    b7a0:	b.eq	b7b0 <PyInit__testcapi@@Base+0x25f0>  // b.none
    b7a4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b7a8:	add	x1, x1, #0x264
    b7ac:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b7b0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b7b4:	add	x0, x0, #0x288
    b7b8:	mov	x1, xzr
    b7bc:	mov	x2, xzr
    b7c0:	bl	8860 <PyOS_string_to_double@plt>
    b7c4:	mov	v8.16b, v0.16b
    b7c8:	fcmp	d0, d9
    b7cc:	b.ne	b7d8 <PyInit__testcapi@@Base+0x2618>  // b.any
    b7d0:	bl	8980 <PyErr_Occurred@plt>
    b7d4:	cbnz	x0, b758 <PyInit__testcapi@@Base+0x2598>
    b7d8:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e40>
    b7dc:	ldr	d0, [x8, #264]
    b7e0:	fcmp	d8, d0
    b7e4:	b.eq	b7f4 <PyInit__testcapi@@Base+0x2634>  // b.none
    b7e8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b7ec:	add	x1, x1, #0x28e
    b7f0:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b7f4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b7f8:	add	x0, x0, #0x2b2
    b7fc:	mov	x1, xzr
    b800:	mov	x2, xzr
    b804:	bl	8860 <PyOS_string_to_double@plt>
    b808:	mov	v8.16b, v0.16b
    b80c:	fcmp	d0, d9
    b810:	b.ne	b81c <PyInit__testcapi@@Base+0x265c>  // b.any
    b814:	bl	8980 <PyErr_Occurred@plt>
    b818:	cbnz	x0, b758 <PyInit__testcapi@@Base+0x2598>
    b81c:	fmov	d0, #1.000000000000000000e+00
    b820:	fcmp	d8, d0
    b824:	b.eq	b834 <PyInit__testcapi@@Base+0x2674>  // b.none
    b828:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b82c:	add	x1, x1, #0x2b8
    b830:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b834:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b838:	add	x0, x0, #0x2dc
    b83c:	mov	x1, xzr
    b840:	mov	x2, xzr
    b844:	bl	8860 <PyOS_string_to_double@plt>
    b848:	mov	v8.16b, v0.16b
    b84c:	fcmp	d0, d9
    b850:	b.ne	b85c <PyInit__testcapi@@Base+0x269c>  // b.any
    b854:	bl	8980 <PyErr_Occurred@plt>
    b858:	cbnz	x0, b758 <PyInit__testcapi@@Base+0x2598>
    b85c:	adrp	x8, 12000 <PyInit__testcapi@@Base+0x8e40>
    b860:	ldr	d0, [x8, #272]
    b864:	fcmp	d8, d0
    b868:	b.eq	b878 <PyInit__testcapi@@Base+0x26b8>  // b.none
    b86c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b870:	add	x1, x1, #0x2e2
    b874:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b878:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b87c:	add	x0, x0, #0x306
    b880:	mov	x1, xzr
    b884:	mov	x2, xzr
    b888:	bl	8860 <PyOS_string_to_double@plt>
    b88c:	fcmp	d0, d9
    b890:	b.ne	b99c <PyInit__testcapi@@Base+0x27dc>  // b.any
    b894:	bl	8980 <PyErr_Occurred@plt>
    b898:	cbz	x0, b99c <PyInit__testcapi@@Base+0x27dc>
    b89c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    b8a0:	ldr	x19, [x19, #3944]
    b8a4:	ldr	x0, [x19]
    b8a8:	bl	8760 <PyErr_ExceptionMatches@plt>
    b8ac:	cbz	w0, b758 <PyInit__testcapi@@Base+0x2598>
    b8b0:	bl	88c0 <PyErr_Clear@plt>
    b8b4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b8b8:	add	x0, x0, #0x336
    b8bc:	mov	x1, xzr
    b8c0:	mov	x2, xzr
    b8c4:	bl	8860 <PyOS_string_to_double@plt>
    b8c8:	fcmp	d0, d9
    b8cc:	b.ne	b9a8 <PyInit__testcapi@@Base+0x27e8>  // b.any
    b8d0:	bl	8980 <PyErr_Occurred@plt>
    b8d4:	cbz	x0, b9a8 <PyInit__testcapi@@Base+0x27e8>
    b8d8:	ldr	x0, [x19]
    b8dc:	bl	8760 <PyErr_ExceptionMatches@plt>
    b8e0:	cbz	w0, b758 <PyInit__testcapi@@Base+0x2598>
    b8e4:	bl	88c0 <PyErr_Clear@plt>
    b8e8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b8ec:	add	x0, x0, #0x366
    b8f0:	mov	x1, xzr
    b8f4:	mov	x2, xzr
    b8f8:	bl	8860 <PyOS_string_to_double@plt>
    b8fc:	fcmp	d0, d9
    b900:	b.ne	b9b4 <PyInit__testcapi@@Base+0x27f4>  // b.any
    b904:	bl	8980 <PyErr_Occurred@plt>
    b908:	cbz	x0, b9b4 <PyInit__testcapi@@Base+0x27f4>
    b90c:	ldr	x0, [x19]
    b910:	bl	8760 <PyErr_ExceptionMatches@plt>
    b914:	cbz	w0, b758 <PyInit__testcapi@@Base+0x2598>
    b918:	bl	88c0 <PyErr_Clear@plt>
    b91c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b920:	add	x0, x0, #0x398
    b924:	mov	x1, xzr
    b928:	mov	x2, xzr
    b92c:	bl	8860 <PyOS_string_to_double@plt>
    b930:	fcmp	d0, d9
    b934:	b.ne	b9c0 <PyInit__testcapi@@Base+0x2800>  // b.any
    b938:	bl	8980 <PyErr_Occurred@plt>
    b93c:	cbz	x0, b9c0 <PyInit__testcapi@@Base+0x2800>
    b940:	ldr	x0, [x19]
    b944:	bl	8760 <PyErr_ExceptionMatches@plt>
    b948:	cbz	w0, b758 <PyInit__testcapi@@Base+0x2598>
    b94c:	bl	88c0 <PyErr_Clear@plt>
    b950:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    b954:	add	x0, x0, #0x3c4
    b958:	mov	x1, xzr
    b95c:	mov	x2, xzr
    b960:	bl	8860 <PyOS_string_to_double@plt>
    b964:	fcmp	d0, d9
    b968:	b.ne	b9cc <PyInit__testcapi@@Base+0x280c>  // b.any
    b96c:	bl	8980 <PyErr_Occurred@plt>
    b970:	cbz	x0, b9cc <PyInit__testcapi@@Base+0x280c>
    b974:	ldr	x0, [x19]
    b978:	bl	8760 <PyErr_ExceptionMatches@plt>
    b97c:	cbz	w0, b758 <PyInit__testcapi@@Base+0x2598>
    b980:	bl	88c0 <PyErr_Clear@plt>
    b984:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    b988:	ldr	x19, [x19, #4016]
    b98c:	mov	x0, x19
    b990:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    b994:	mov	x0, x19
    b998:	b	b75c <PyInit__testcapi@@Base+0x259c>
    b99c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b9a0:	add	x1, x1, #0x30b
    b9a4:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b9a8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b9ac:	add	x1, x1, #0x33b
    b9b0:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b9b4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b9b8:	add	x1, x1, #0x36c
    b9bc:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b9c0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b9c4:	add	x1, x1, #0x39b
    b9c8:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b9cc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    b9d0:	add	x1, x1, #0x3cb
    b9d4:	b	b74c <PyInit__testcapi@@Base+0x258c>
    b9d8:	stp	x29, x30, [sp, #-32]!
    b9dc:	stp	x20, x19, [sp, #16]
    b9e0:	mov	x29, sp
    b9e4:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    b9e8:	add	x0, x0, #0x5b8
    b9ec:	mov	w1, #0x4                   	// #4
    b9f0:	bl	8eb0 <PyUnicode_FromStringAndSize@plt>
    b9f4:	mov	x19, x0
    b9f8:	cbz	x0, ba48 <PyInit__testcapi@@Base+0x2888>
    b9fc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ba00:	add	x1, x1, #0x3f8
    ba04:	mov	x0, x19
    ba08:	bl	8a90 <PyUnicode_CompareWithASCIIString@plt>
    ba0c:	mov	w20, w0
    ba10:	mov	x0, x19
    ba14:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    ba18:	cbz	w20, ba30 <PyInit__testcapi@@Base+0x2870>
    ba1c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ba20:	ldr	x19, [x19, #4016]
    ba24:	mov	x0, x19
    ba28:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ba2c:	b	ba48 <PyInit__testcapi@@Base+0x2888>
    ba30:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    ba34:	ldr	x0, [x8, #3520]
    ba38:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ba3c:	add	x1, x1, #0x3fc
    ba40:	bl	8670 <PyErr_SetString@plt>
    ba44:	mov	x19, xzr
    ba48:	mov	x0, x19
    ba4c:	ldp	x20, x19, [sp, #16]
    ba50:	ldp	x29, x30, [sp], #32
    ba54:	ret
    ba58:	sub	sp, sp, #0xc0
    ba5c:	stp	x29, x30, [sp, #96]
    ba60:	stp	x28, x27, [sp, #112]
    ba64:	stp	x26, x25, [sp, #128]
    ba68:	stp	x24, x23, [sp, #144]
    ba6c:	stp	x22, x21, [sp, #160]
    ba70:	stp	x20, x19, [sp, #176]
    ba74:	add	x29, sp, #0x60
    ba78:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ba7c:	add	x8, x8, #0xcc0
    ba80:	ldp	q0, q1, [x8, #32]
    ba84:	ldp	q2, q3, [x8, #64]
    ba88:	ldp	q4, q5, [x8]
    ba8c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    ba90:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ba94:	adrp	x2, 10000 <PyInit__testcapi@@Base+0x6e40>
    ba98:	add	x0, x0, #0x643
    ba9c:	add	x1, x1, #0x653
    baa0:	add	x2, x2, #0x90c
    baa4:	stp	q0, q1, [sp, #32]
    baa8:	stp	q2, q3, [sp, #64]
    baac:	stp	q4, q5, [sp]
    bab0:	bl	8e10 <PyCapsule_New@plt>
    bab4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    bab8:	add	x1, x1, #0x6fd
    babc:	mov	x19, x0
    bac0:	bl	8f80 <PyCapsule_SetContext@plt>
    bac4:	mov	x0, x19
    bac8:	bl	1090c <PyInit__testcapi@@Base+0x774c>
    bacc:	adrp	x21, 29000 <PyInit__testcapi@@Base+0x1fe40>
    bad0:	ldr	x26, [x21, #3552]
    bad4:	cbnz	x26, bbc0 <PyInit__testcapi@@Base+0x2a00>
    bad8:	adrp	x22, 29000 <PyInit__testcapi@@Base+0x1fe40>
    badc:	ldr	w8, [x22, #3560]
    bae0:	cbz	w8, bbb8 <PyInit__testcapi@@Base+0x29f8>
    bae4:	mov	x0, x19
    bae8:	str	wzr, [x22, #3560]
    baec:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    baf0:	ldr	x26, [x21, #3552]
    baf4:	cbnz	x26, bbc0 <PyInit__testcapi@@Base+0x2a00>
    baf8:	ldr	w8, [x22, #3560]
    bafc:	cbz	w8, bbb8 <PyInit__testcapi@@Base+0x29f8>
    bb00:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    bb04:	add	x1, x1, #0x482
    bb08:	mov	x0, sp
    bb0c:	mov	x2, xzr
    bb10:	str	wzr, [x22, #3560]
    bb14:	bl	8e10 <PyCapsule_New@plt>
    bb18:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    bb1c:	add	x20, x20, #0x643
    bb20:	mov	x1, x20
    bb24:	mov	x19, x0
    bb28:	bl	8d00 <PyCapsule_SetPointer@plt>
    bb2c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    bb30:	add	x1, x1, #0x653
    bb34:	mov	x0, x19
    bb38:	bl	83f0 <PyCapsule_SetName@plt>
    bb3c:	adrp	x1, 10000 <PyInit__testcapi@@Base+0x6e40>
    bb40:	add	x1, x1, #0x90c
    bb44:	mov	x0, x19
    bb48:	bl	8a50 <PyCapsule_SetDestructor@plt>
    bb4c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    bb50:	add	x1, x1, #0x6fd
    bb54:	mov	x0, x19
    bb58:	bl	8f80 <PyCapsule_SetContext@plt>
    bb5c:	mov	x0, x19
    bb60:	bl	1090c <PyInit__testcapi@@Base+0x774c>
    bb64:	ldr	x26, [x21, #3552]
    bb68:	cbnz	x26, bbc0 <PyInit__testcapi@@Base+0x2a00>
    bb6c:	ldr	w8, [x22, #3560]
    bb70:	cbz	w8, bbb8 <PyInit__testcapi@@Base+0x29f8>
    bb74:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    bb78:	add	x1, x1, #0x48a
    bb7c:	mov	x0, x19
    bb80:	str	wzr, [x22, #3560]
    bb84:	bl	8e70 <PyCapsule_GetPointer@plt>
    bb88:	mov	x21, x0
    bb8c:	bl	8980 <PyErr_Occurred@plt>
    bb90:	cbz	x0, bc10 <PyInit__testcapi@@Base+0x2a50>
    bb94:	bl	88c0 <PyErr_Clear@plt>
    bb98:	cbz	x21, bc1c <PyInit__testcapi@@Base+0x2a5c>
    bb9c:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
    bba0:	adrp	x9, 14000 <PyInit__testcapi@@Base+0xae40>
    bba4:	add	x8, x8, #0x512
    bba8:	add	x9, x9, #0x4ce
    bbac:	cmp	x21, x20
    bbb0:	csel	x26, x9, x8, eq  // eq = none
    bbb4:	b	bbc0 <PyInit__testcapi@@Base+0x2a00>
    bbb8:	adrp	x26, 14000 <PyInit__testcapi@@Base+0xae40>
    bbbc:	add	x26, x26, #0x46b
    bbc0:	cbz	x26, bbdc <PyInit__testcapi@@Base+0x2a1c>
    bbc4:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    bbc8:	add	x0, x0, #0xd77
    bbcc:	mov	x1, x26
    bbd0:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    bbd4:	mov	x19, xzr
    bbd8:	b	bbec <PyInit__testcapi@@Base+0x2a2c>
    bbdc:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    bbe0:	ldr	x19, [x19, #4016]
    bbe4:	mov	x0, x19
    bbe8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    bbec:	mov	x0, x19
    bbf0:	ldp	x20, x19, [sp, #176]
    bbf4:	ldp	x22, x21, [sp, #160]
    bbf8:	ldp	x24, x23, [sp, #144]
    bbfc:	ldp	x26, x25, [sp, #128]
    bc00:	ldp	x28, x27, [sp, #112]
    bc04:	ldp	x29, x30, [sp, #96]
    bc08:	add	sp, sp, #0xc0
    bc0c:	ret
    bc10:	adrp	x26, 14000 <PyInit__testcapi@@Base+0xae40>
    bc14:	add	x26, x26, #0x499
    bc18:	b	bbc0 <PyInit__testcapi@@Base+0x2a00>
    bc1c:	mov	x0, x19
    bc20:	mov	x1, xzr
    bc24:	bl	8a50 <PyCapsule_SetDestructor@plt>
    bc28:	mov	x0, x19
    bc2c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bc30:	ldr	w8, [x22, #3560]
    bc34:	cbz	w8, bc44 <PyInit__testcapi@@Base+0x2a84>
    bc38:	adrp	x26, 14000 <PyInit__testcapi@@Base+0xae40>
    bc3c:	add	x26, x26, #0x556
    bc40:	b	bbc0 <PyInit__testcapi@@Base+0x2a00>
    bc44:	ldr	x0, [sp, #8]
    bc48:	cbz	x0, bd94 <PyInit__testcapi@@Base+0x2bd4>
    bc4c:	mov	x8, sp
    bc50:	adrp	x19, 29000 <PyInit__testcapi@@Base+0x1fe40>
    bc54:	adrp	x20, 14000 <PyInit__testcapi@@Base+0xae40>
    bc58:	adrp	x21, 14000 <PyInit__testcapi@@Base+0xae40>
    bc5c:	adrp	x22, 14000 <PyInit__testcapi@@Base+0xae40>
    bc60:	mov	x26, xzr
    bc64:	add	x19, x19, #0xdec
    bc68:	add	x20, x20, #0x586
    bc6c:	add	x21, x21, #0x5a6
    bc70:	add	x22, x22, #0x5d7
    bc74:	add	x23, x8, #0x10
    bc78:	bl	89b0 <PyImport_ImportModule@plt>
    bc7c:	cbz	x0, bcf8 <PyInit__testcapi@@Base+0x2b38>
    bc80:	mov	x27, x0
    bc84:	ldur	x0, [x23, #-16]
    bc88:	mov	w1, wzr
    bc8c:	bl	8820 <PyCapsule_Import@plt>
    bc90:	cbz	x0, bd04 <PyInit__testcapi@@Base+0x2b44>
    bc94:	ldr	x1, [x23]
    bc98:	mov	x28, x0
    bc9c:	mov	x0, x27
    bca0:	bl	84a0 <PyObject_GetAttrString@plt>
    bca4:	cbz	x0, bd20 <PyInit__testcapi@@Base+0x2b60>
    bca8:	mov	x1, x22
    bcac:	mov	x24, x0
    bcb0:	bl	8e70 <PyCapsule_GetPointer@plt>
    bcb4:	mov	x25, x0
    bcb8:	bl	8980 <PyErr_Occurred@plt>
    bcbc:	cbz	x0, bd30 <PyInit__testcapi@@Base+0x2b70>
    bcc0:	bl	88c0 <PyErr_Clear@plt>
    bcc4:	cbz	x25, bd58 <PyInit__testcapi@@Base+0x2b98>
    bcc8:	mov	x0, x27
    bccc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bcd0:	mov	x0, x24
    bcd4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bcd8:	ldp	x3, x4, [x23, #-8]
    bcdc:	mov	x0, x19
    bce0:	mov	x1, x20
    bce4:	cmp	x25, x28
    bce8:	b.eq	bd6c <PyInit__testcapi@@Base+0x2bac>  // b.none
    bcec:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    bcf0:	add	x2, x2, #0x512
    bcf4:	b	bd74 <PyInit__testcapi@@Base+0x2bb4>
    bcf8:	bl	88c0 <PyErr_Clear@plt>
    bcfc:	mov	w8, wzr
    bd00:	b	bd80 <PyInit__testcapi@@Base+0x2bc0>
    bd04:	mov	x0, x27
    bd08:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bd0c:	ldp	x3, x4, [x23, #-8]
    bd10:	mov	x0, x19
    bd14:	mov	x1, x20
    bd18:	mov	x2, x21
    bd1c:	b	bd74 <PyInit__testcapi@@Base+0x2bb4>
    bd20:	mov	x0, x27
    bd24:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bd28:	mov	w8, #0x1                   	// #1
    bd2c:	b	bd80 <PyInit__testcapi@@Base+0x2bc0>
    bd30:	mov	x0, x24
    bd34:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bd38:	mov	x0, x27
    bd3c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bd40:	ldp	x3, x4, [x23, #-8]
    bd44:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    bd48:	mov	x0, x19
    bd4c:	mov	x1, x20
    bd50:	add	x2, x2, #0x499
    bd54:	b	bd74 <PyInit__testcapi@@Base+0x2bb4>
    bd58:	mov	x0, x24
    bd5c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bd60:	mov	x0, x27
    bd64:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bd68:	b	bcfc <PyInit__testcapi@@Base+0x2b3c>
    bd6c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    bd70:	add	x2, x2, #0x5ff
    bd74:	bl	84e0 <sprintf@plt>
    bd78:	mov	w8, #0x2                   	// #2
    bd7c:	mov	x26, x19
    bd80:	cbnz	w8, bd9c <PyInit__testcapi@@Base+0x2bdc>
    bd84:	ldr	x0, [x23, #16]
    bd88:	add	x23, x23, #0x18
    bd8c:	cbnz	x0, bc78 <PyInit__testcapi@@Base+0x2ab8>
    bd90:	b	bbc0 <PyInit__testcapi@@Base+0x2a00>
    bd94:	mov	x26, xzr
    bd98:	b	bbc0 <PyInit__testcapi@@Base+0x2a00>
    bd9c:	cmp	w8, #0x2
    bda0:	b.eq	bbc0 <PyInit__testcapi@@Base+0x2a00>  // b.none
    bda4:	b	bbd4 <PyInit__testcapi@@Base+0x2a14>
    bda8:	sub	sp, sp, #0xd0
    bdac:	stp	x29, x30, [sp, #176]
    bdb0:	str	x19, [sp, #192]
    bdb4:	add	x29, sp, #0xb0
    bdb8:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e40>
    bdbc:	movi	v0.2d, #0xffffffffffffffff
    bdc0:	add	x9, x9, #0x5c0
    bdc4:	mov	w8, #0xffffffff            	// #-1
    bdc8:	mov	w10, #0x5                   	// #5
    bdcc:	stp	q0, q0, [x29, #-48]
    bdd0:	ldr	q0, [x9]
    bdd4:	ldr	w9, [x9, #16]
    bdd8:	mov	w11, #0x8                   	// #8
    bddc:	stur	w8, [x29, #-16]
    bde0:	mov	w8, #0x14                  	// #20
    bde4:	str	x10, [x29, #24]
    bde8:	mov	w10, #0x4                   	// #4
    bdec:	stp	xzr, x11, [sp, #80]
    bdf0:	add	x11, x29, #0x18
    bdf4:	stp	x8, x10, [sp, #24]
    bdf8:	add	x8, sp, #0x58
    bdfc:	sub	x12, x29, #0x30
    be00:	stp	x11, x8, [sp, #56]
    be04:	mov	x8, #0x100000001           	// #4294967297
    be08:	add	x0, sp, #0x8
    be0c:	sub	x1, x29, #0x50
    be10:	mov	w2, #0x14                  	// #20
    be14:	mov	w3, #0x43                  	// #67
    be18:	stp	x12, xzr, [sp, #8]
    be1c:	stp	x8, xzr, [sp, #40]
    be20:	stur	q0, [x29, #-80]
    be24:	stur	w9, [x29, #-64]
    be28:	str	xzr, [sp, #72]
    be2c:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    be30:	ldr	x8, [sp, #8]
    be34:	mov	x9, xzr
    be38:	ldr	w10, [x8]
    be3c:	cmp	x9, x10
    be40:	b.ne	beb8 <PyInit__testcapi@@Base+0x2cf8>  // b.any
    be44:	add	x9, x9, #0x1
    be48:	cmp	x9, #0x5
    be4c:	add	x8, x8, #0x8
    be50:	b.ne	be38 <PyInit__testcapi@@Base+0x2c78>  // b.any
    be54:	ldr	x9, [sp, #64]
    be58:	sub	x8, x29, #0x30
    be5c:	add	x8, x8, #0x20
    be60:	str	x8, [sp, #8]
    be64:	mov	x8, #0xfffffffffffffff8    	// #-8
    be68:	str	x8, [x9]
    be6c:	ldr	x2, [sp, #24]
    be70:	add	x0, sp, #0x8
    be74:	sub	x1, x29, #0x50
    be78:	mov	w3, #0x43                  	// #67
    be7c:	bl	8cc0 <PyBuffer_FromContiguous@plt>
    be80:	ldr	x8, [sp, #8]
    be84:	mov	x9, xzr
    be88:	ldr	w10, [x8]
    be8c:	cmp	x9, x10
    be90:	b.ne	beb8 <PyInit__testcapi@@Base+0x2cf8>  // b.any
    be94:	add	x9, x9, #0x1
    be98:	cmp	x9, #0x5
    be9c:	sub	x8, x8, #0x8
    bea0:	b.ne	be88 <PyInit__testcapi@@Base+0x2cc8>  // b.any
    bea4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    bea8:	ldr	x19, [x19, #4016]
    beac:	mov	x0, x19
    beb0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    beb4:	b	bed0 <PyInit__testcapi@@Base+0x2d10>
    beb8:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    bebc:	ldr	x0, [x8, #3520]
    bec0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    bec4:	add	x1, x1, #0x70d
    bec8:	bl	8670 <PyErr_SetString@plt>
    becc:	mov	x19, xzr
    bed0:	mov	x0, x19
    bed4:	ldr	x19, [sp, #192]
    bed8:	ldp	x29, x30, [sp, #176]
    bedc:	add	sp, sp, #0xd0
    bee0:	ret
    bee4:	sub	sp, sp, #0x30
    bee8:	stp	x29, x30, [sp, #16]
    beec:	stp	x20, x19, [sp, #32]
    bef0:	add	x29, sp, #0x10
    bef4:	add	x2, sp, #0x8
    bef8:	mov	w3, #0x1                   	// #1
    befc:	mov	x0, xzr
    bf00:	mov	x1, xzr
    bf04:	mov	w4, wzr
    bf08:	mov	w5, wzr
    bf0c:	mov	w20, #0x1                   	// #1
    bf10:	bl	8870 <PyBuffer_FillInfo@plt>
    bf14:	mov	w19, w0
    bf18:	bl	8980 <PyErr_Occurred@plt>
    bf1c:	cbz	x0, bf38 <PyInit__testcapi@@Base+0x2d78>
    bf20:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    bf24:	ldr	x8, [x8, #3896]
    bf28:	ldr	x0, [x8]
    bf2c:	bl	8760 <PyErr_ExceptionMatches@plt>
    bf30:	cmp	w0, #0x0
    bf34:	cset	w20, eq  // eq = none
    bf38:	bl	88c0 <PyErr_Clear@plt>
    bf3c:	cmn	w19, #0x1
    bf40:	b.ne	bfc8 <PyInit__testcapi@@Base+0x2e08>  // b.any
    bf44:	tbnz	w20, #0, bfc8 <PyInit__testcapi@@Base+0x2e08>
    bf48:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
    bf4c:	ldr	x0, [x0, #3864]
    bf50:	mov	x1, xzr
    bf54:	ldr	x8, [x0, #304]
    bf58:	blr	x8
    bf5c:	cbz	x0, bfdc <PyInit__testcapi@@Base+0x2e1c>
    bf60:	mov	x1, xzr
    bf64:	mov	w2, wzr
    bf68:	mov	x20, x0
    bf6c:	bl	8c40 <PyObject_GetBuffer@plt>
    bf70:	mov	w19, w0
    bf74:	mov	x0, x20
    bf78:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    bf7c:	bl	8980 <PyErr_Occurred@plt>
    bf80:	cbz	x0, bfa0 <PyInit__testcapi@@Base+0x2de0>
    bf84:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    bf88:	ldr	x8, [x8, #3896]
    bf8c:	ldr	x0, [x8]
    bf90:	bl	8760 <PyErr_ExceptionMatches@plt>
    bf94:	cmp	w0, #0x0
    bf98:	cset	w20, eq  // eq = none
    bf9c:	b	bfa4 <PyInit__testcapi@@Base+0x2de4>
    bfa0:	mov	w20, #0x1                   	// #1
    bfa4:	bl	88c0 <PyErr_Clear@plt>
    bfa8:	cmn	w19, #0x1
    bfac:	b.ne	bfc8 <PyInit__testcapi@@Base+0x2e08>  // b.any
    bfb0:	tbnz	w20, #0, bfc8 <PyInit__testcapi@@Base+0x2e08>
    bfb4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    bfb8:	ldr	x19, [x19, #4016]
    bfbc:	mov	x0, x19
    bfc0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    bfc4:	b	bfe0 <PyInit__testcapi@@Base+0x2e20>
    bfc8:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
    bfcc:	ldr	x0, [x8, #3520]
    bfd0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    bfd4:	add	x1, x1, #0x734
    bfd8:	bl	8670 <PyErr_SetString@plt>
    bfdc:	mov	x19, xzr
    bfe0:	mov	x0, x19
    bfe4:	ldp	x20, x19, [sp, #32]
    bfe8:	ldp	x29, x30, [sp, #16]
    bfec:	add	sp, sp, #0x30
    bff0:	ret
    bff4:	stp	x29, x30, [sp, #-32]!
    bff8:	str	x19, [sp, #16]
    bffc:	mov	x29, sp
    c000:	mov	x0, x1
    c004:	mov	x1, xzr
    c008:	mov	w2, wzr
    c00c:	bl	8c40 <PyObject_GetBuffer@plt>
    c010:	tbnz	w0, #31, c028 <PyInit__testcapi@@Base+0x2e68>
    c014:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    c018:	ldr	x19, [x19, #4016]
    c01c:	mov	x0, x19
    c020:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    c024:	b	c02c <PyInit__testcapi@@Base+0x2e6c>
    c028:	mov	x19, xzr
    c02c:	mov	x0, x19
    c030:	ldr	x19, [sp, #16]
    c034:	ldp	x29, x30, [sp], #32
    c038:	ret
    c03c:	stp	x29, x30, [sp, #-32]!
    c040:	str	x19, [sp, #16]
    c044:	mov	x29, sp
    c048:	mov	x0, xzr
    c04c:	bl	82a0 <PyList_New@plt>
    c050:	mov	x19, x0
    c054:	cbz	x0, c124 <PyInit__testcapi@@Base+0x2f64>
    c058:	mov	x0, x19
    c05c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    c060:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c064:	add	x0, x0, #0x7b5
    c068:	mov	x1, x19
    c06c:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    c070:	cbz	x0, c120 <PyInit__testcapi@@Base+0x2f60>
    c074:	cmp	x0, x19
    c078:	b.eq	c090 <PyInit__testcapi@@Base+0x2ed0>  // b.none
    c07c:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c080:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c084:	add	x0, x0, #0xdd4
    c088:	add	x1, x1, #0x75f
    c08c:	b	c11c <PyInit__testcapi@@Base+0x2f5c>
    c090:	ldr	x8, [x19]
    c094:	cmp	x8, #0x2
    c098:	b.ne	c10c <PyInit__testcapi@@Base+0x2f4c>  // b.any
    c09c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c0a0:	mov	x0, x19
    c0a4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c0a8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c0ac:	add	x0, x0, #0x7b3
    c0b0:	bl	109d0 <PyInit__testcapi@@Base+0x7810>
    c0b4:	tbnz	w0, #31, c120 <PyInit__testcapi@@Base+0x2f60>
    c0b8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c0bc:	add	x0, x0, #0x7b7
    c0c0:	bl	109d0 <PyInit__testcapi@@Base+0x7810>
    c0c4:	tbnz	w0, #31, c120 <PyInit__testcapi@@Base+0x2f60>
    c0c8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c0cc:	add	x0, x0, #0x7bd
    c0d0:	bl	109d0 <PyInit__testcapi@@Base+0x7810>
    c0d4:	tbnz	w0, #31, c120 <PyInit__testcapi@@Base+0x2f60>
    c0d8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c0dc:	add	x0, x0, #0x7c3
    c0e0:	bl	109d0 <PyInit__testcapi@@Base+0x7810>
    c0e4:	tbnz	w0, #31, c120 <PyInit__testcapi@@Base+0x2f60>
    c0e8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c0ec:	add	x0, x0, #0x7c9
    c0f0:	bl	109d0 <PyInit__testcapi@@Base+0x7810>
    c0f4:	tbnz	w0, #31, c120 <PyInit__testcapi@@Base+0x2f60>
    c0f8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    c0fc:	ldr	x19, [x19, #4016]
    c100:	mov	x0, x19
    c104:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    c108:	b	c124 <PyInit__testcapi@@Base+0x2f64>
    c10c:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c110:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c114:	add	x0, x0, #0xdd4
    c118:	add	x1, x1, #0x788
    c11c:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    c120:	mov	x19, xzr
    c124:	mov	x0, x19
    c128:	ldr	x19, [sp, #16]
    c12c:	ldp	x29, x30, [sp], #32
    c130:	ret
    c134:	stp	x29, x30, [sp, #-32]!
    c138:	str	x19, [sp, #16]
    c13c:	mov	x29, sp
    c140:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    c144:	ldr	x8, [x8, #4016]
    c148:	cmp	x1, #0x0
    c14c:	csel	x19, x8, x1, eq  // eq = none
    c150:	mov	x0, x19
    c154:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    c158:	mov	x0, x19
    c15c:	ldr	x19, [sp, #16]
    c160:	ldp	x29, x30, [sp], #32
    c164:	ret
    c168:	stp	x29, x30, [sp, #-32]!
    c16c:	str	x19, [sp, #16]
    c170:	mov	x29, sp
    c174:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    c178:	ldr	x8, [x8, #4016]
    c17c:	cmp	x2, #0x0
    c180:	csel	x19, x8, x2, eq  // eq = none
    c184:	mov	x0, x19
    c188:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    c18c:	mov	x0, x19
    c190:	ldr	x19, [sp, #16]
    c194:	ldp	x29, x30, [sp], #32
    c198:	ret
    c19c:	sub	sp, sp, #0x20
    c1a0:	stp	x29, x30, [sp, #16]
    c1a4:	add	x29, sp, #0x10
    c1a8:	mov	x0, x1
    c1ac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c1b0:	add	x1, x1, #0x89c
    c1b4:	sub	x2, x29, #0x4
    c1b8:	add	x3, sp, #0x8
    c1bc:	add	x4, sp, #0x4
    c1c0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c1c4:	cbz	w0, c1e0 <PyInit__testcapi@@Base+0x3020>
    c1c8:	ldur	w1, [x29, #-4]
    c1cc:	ldp	w3, w2, [sp, #4]
    c1d0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c1d4:	add	x0, x0, #0x8c2
    c1d8:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    c1dc:	b	c1e4 <PyInit__testcapi@@Base+0x3024>
    c1e0:	mov	x0, xzr
    c1e4:	ldp	x29, x30, [sp, #16]
    c1e8:	add	sp, sp, #0x20
    c1ec:	ret
    c1f0:	sub	sp, sp, #0x70
    c1f4:	stp	x29, x30, [sp, #96]
    c1f8:	add	x29, sp, #0x60
    c1fc:	mov	x8, x2
    c200:	mov	x9, #0xffffffffffffffff    	// #-1
    c204:	add	x10, sp, #0x30
    c208:	adrp	x2, 12000 <PyInit__testcapi@@Base+0x8e40>
    c20c:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe40>
    c210:	mov	x0, x1
    c214:	movi	v0.2d, #0xffffffffffffffff
    c218:	str	x9, [sp, #80]
    c21c:	add	x9, x10, #0x10
    c220:	add	x11, x10, #0x20
    c224:	orr	x5, x10, #0x4
    c228:	orr	x6, x10, #0x8
    c22c:	orr	x7, x10, #0xc
    c230:	add	x12, x10, #0x14
    c234:	add	x13, x10, #0x18
    c238:	add	x14, x10, #0x1c
    c23c:	add	x10, x10, #0x24
    c240:	add	x2, x2, #0x5d4
    c244:	add	x3, x3, #0x540
    c248:	add	x4, sp, #0x30
    c24c:	mov	x1, x8
    c250:	stp	q0, q0, [sp, #48]
    c254:	stp	x11, x10, [sp, #32]
    c258:	stp	x13, x14, [sp, #16]
    c25c:	stp	x9, x12, [sp]
    c260:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    c264:	cbz	w0, c298 <PyInit__testcapi@@Base+0x30d8>
    c268:	ldp	w1, w2, [sp, #48]
    c26c:	ldp	w3, w4, [sp, #56]
    c270:	ldp	w5, w6, [sp, #64]
    c274:	ldp	w7, w8, [sp, #72]
    c278:	ldp	w9, w10, [sp, #80]
    c27c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c280:	add	x0, x0, #0x8bb
    c284:	str	w8, [sp]
    c288:	str	w10, [sp, #16]
    c28c:	str	w9, [sp, #8]
    c290:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    c294:	b	c29c <PyInit__testcapi@@Base+0x30dc>
    c298:	mov	x0, xzr
    c29c:	ldp	x29, x30, [sp, #96]
    c2a0:	add	sp, sp, #0x70
    c2a4:	ret
    c2a8:	sub	sp, sp, #0x20
    c2ac:	stp	x29, x30, [sp, #16]
    c2b0:	add	x29, sp, #0x10
    c2b4:	mov	x8, x2
    c2b8:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    c2bc:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe40>
    c2c0:	mov	x0, x1
    c2c4:	mov	w9, #0xffffffff            	// #-1
    c2c8:	add	x2, x2, #0x8cf
    c2cc:	add	x3, x3, #0x570
    c2d0:	sub	x4, x29, #0x4
    c2d4:	add	x5, sp, #0x8
    c2d8:	add	x6, sp, #0x4
    c2dc:	mov	x1, x8
    c2e0:	stur	w9, [x29, #-4]
    c2e4:	stp	w9, w9, [sp, #4]
    c2e8:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    c2ec:	cbz	w0, c308 <PyInit__testcapi@@Base+0x3148>
    c2f0:	ldur	w1, [x29, #-4]
    c2f4:	ldp	w3, w2, [sp, #4]
    c2f8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c2fc:	add	x0, x0, #0x8c2
    c300:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    c304:	b	c30c <PyInit__testcapi@@Base+0x314c>
    c308:	mov	x0, xzr
    c30c:	ldp	x29, x30, [sp, #16]
    c310:	add	sp, sp, #0x20
    c314:	ret
    c318:	sub	sp, sp, #0x20
    c31c:	stp	x29, x30, [sp, #16]
    c320:	add	x29, sp, #0x10
    c324:	mov	x8, x2
    c328:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    c32c:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe40>
    c330:	mov	x0, x1
    c334:	mov	w9, #0xffffffff            	// #-1
    c338:	add	x2, x2, #0x8dd
    c33c:	add	x3, x3, #0x590
    c340:	sub	x4, x29, #0x4
    c344:	add	x5, sp, #0x8
    c348:	add	x6, sp, #0x4
    c34c:	mov	x1, x8
    c350:	stur	w9, [x29, #-4]
    c354:	stp	w9, w9, [sp, #4]
    c358:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    c35c:	cbz	w0, c378 <PyInit__testcapi@@Base+0x31b8>
    c360:	ldur	w1, [x29, #-4]
    c364:	ldp	w3, w2, [sp, #4]
    c368:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    c36c:	add	x0, x0, #0x8c2
    c370:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    c374:	b	c37c <PyInit__testcapi@@Base+0x31bc>
    c378:	mov	x0, xzr
    c37c:	ldp	x29, x30, [sp, #16]
    c380:	add	sp, sp, #0x20
    c384:	ret
    c388:	sub	sp, sp, #0x20
    c38c:	stp	x29, x30, [sp, #16]
    c390:	add	x29, sp, #0x10
    c394:	mov	x0, x1
    c398:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    c39c:	add	x1, x1, #0xe5b
    c3a0:	sub	x2, x29, #0x4
    c3a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c3a8:	cbz	w0, c3b8 <PyInit__testcapi@@Base+0x31f8>
    c3ac:	ldurb	w0, [x29, #-4]
    c3b0:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    c3b4:	b	c3bc <PyInit__testcapi@@Base+0x31fc>
    c3b8:	mov	x0, xzr
    c3bc:	ldp	x29, x30, [sp, #16]
    c3c0:	add	sp, sp, #0x20
    c3c4:	ret
    c3c8:	sub	sp, sp, #0x20
    c3cc:	stp	x29, x30, [sp, #16]
    c3d0:	add	x29, sp, #0x10
    c3d4:	mov	x0, x1
    c3d8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    c3dc:	add	x1, x1, #0xe65
    c3e0:	sub	x2, x29, #0x4
    c3e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c3e8:	cbz	w0, c3f8 <PyInit__testcapi@@Base+0x3238>
    c3ec:	ldurb	w0, [x29, #-4]
    c3f0:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    c3f4:	b	c3fc <PyInit__testcapi@@Base+0x323c>
    c3f8:	mov	x0, xzr
    c3fc:	ldp	x29, x30, [sp, #16]
    c400:	add	sp, sp, #0x20
    c404:	ret
    c408:	sub	sp, sp, #0x20
    c40c:	stp	x29, x30, [sp, #16]
    c410:	add	x29, sp, #0x10
    c414:	mov	x0, x1
    c418:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    c41c:	add	x1, x1, #0xe6f
    c420:	sub	x2, x29, #0x4
    c424:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c428:	cbz	w0, c438 <PyInit__testcapi@@Base+0x3278>
    c42c:	ldursh	x0, [x29, #-4]
    c430:	bl	8840 <PyLong_FromLong@plt>
    c434:	b	c43c <PyInit__testcapi@@Base+0x327c>
    c438:	mov	x0, xzr
    c43c:	ldp	x29, x30, [sp, #16]
    c440:	add	sp, sp, #0x20
    c444:	ret
    c448:	sub	sp, sp, #0x20
    c44c:	stp	x29, x30, [sp, #16]
    c450:	add	x29, sp, #0x10
    c454:	mov	x0, x1
    c458:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    c45c:	add	x1, x1, #0xe79
    c460:	sub	x2, x29, #0x4
    c464:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c468:	cbz	w0, c478 <PyInit__testcapi@@Base+0x32b8>
    c46c:	ldurh	w0, [x29, #-4]
    c470:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    c474:	b	c47c <PyInit__testcapi@@Base+0x32bc>
    c478:	mov	x0, xzr
    c47c:	ldp	x29, x30, [sp, #16]
    c480:	add	sp, sp, #0x20
    c484:	ret
    c488:	sub	sp, sp, #0x20
    c48c:	stp	x29, x30, [sp, #16]
    c490:	add	x29, sp, #0x10
    c494:	mov	x0, x1
    c498:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c49c:	add	x1, x1, #0x44a
    c4a0:	sub	x2, x29, #0x4
    c4a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c4a8:	cbz	w0, c4b8 <PyInit__testcapi@@Base+0x32f8>
    c4ac:	ldur	w0, [x29, #-4]
    c4b0:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    c4b4:	b	c4bc <PyInit__testcapi@@Base+0x32fc>
    c4b8:	mov	x0, xzr
    c4bc:	ldp	x29, x30, [sp, #16]
    c4c0:	add	sp, sp, #0x20
    c4c4:	ret
    c4c8:	sub	sp, sp, #0x20
    c4cc:	stp	x29, x30, [sp, #16]
    c4d0:	add	x29, sp, #0x10
    c4d4:	mov	x0, x1
    c4d8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    c4dc:	add	x1, x1, #0xe8d
    c4e0:	add	x2, sp, #0x8
    c4e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c4e8:	cbz	w0, c4f8 <PyInit__testcapi@@Base+0x3338>
    c4ec:	ldr	x0, [sp, #8]
    c4f0:	bl	8c80 <PyLong_FromUnsignedLong@plt>
    c4f4:	b	c4fc <PyInit__testcapi@@Base+0x333c>
    c4f8:	mov	x0, xzr
    c4fc:	ldp	x29, x30, [sp, #16]
    c500:	add	sp, sp, #0x20
    c504:	ret
    c508:	sub	sp, sp, #0x20
    c50c:	stp	x29, x30, [sp, #16]
    c510:	add	x29, sp, #0x10
    c514:	mov	x0, x1
    c518:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c51c:	add	x1, x1, #0x8d3
    c520:	sub	x2, x29, #0x4
    c524:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c528:	cbz	w0, c538 <PyInit__testcapi@@Base+0x3378>
    c52c:	ldursw	x0, [x29, #-4]
    c530:	bl	8840 <PyLong_FromLong@plt>
    c534:	b	c53c <PyInit__testcapi@@Base+0x337c>
    c538:	mov	x0, xzr
    c53c:	ldp	x29, x30, [sp, #16]
    c540:	add	sp, sp, #0x20
    c544:	ret
    c548:	sub	sp, sp, #0x20
    c54c:	stp	x29, x30, [sp, #16]
    c550:	add	x29, sp, #0x10
    c554:	mov	x0, x1
    c558:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c55c:	add	x1, x1, #0xde3
    c560:	add	x2, sp, #0x8
    c564:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c568:	cbz	w0, c578 <PyInit__testcapi@@Base+0x33b8>
    c56c:	ldr	x0, [sp, #8]
    c570:	bl	8840 <PyLong_FromLong@plt>
    c574:	b	c57c <PyInit__testcapi@@Base+0x33bc>
    c578:	mov	x0, xzr
    c57c:	ldp	x29, x30, [sp, #16]
    c580:	add	sp, sp, #0x20
    c584:	ret
    c588:	sub	sp, sp, #0x20
    c58c:	stp	x29, x30, [sp, #16]
    c590:	add	x29, sp, #0x10
    c594:	mov	x0, x1
    c598:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c59c:	add	x1, x1, #0xc3a
    c5a0:	add	x2, sp, #0x8
    c5a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c5a8:	cbz	w0, c5b8 <PyInit__testcapi@@Base+0x33f8>
    c5ac:	ldr	x0, [sp, #8]
    c5b0:	bl	87f0 <PyLong_FromSsize_t@plt>
    c5b4:	b	c5bc <PyInit__testcapi@@Base+0x33fc>
    c5b8:	mov	x0, xzr
    c5bc:	ldp	x29, x30, [sp, #16]
    c5c0:	add	sp, sp, #0x20
    c5c4:	ret
    c5c8:	sub	sp, sp, #0x20
    c5cc:	stp	x29, x30, [sp, #16]
    c5d0:	add	x29, sp, #0x10
    c5d4:	mov	x0, x1
    c5d8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    c5dc:	add	x1, x1, #0xeb5
    c5e0:	sub	x2, x29, #0x4
    c5e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c5e8:	cbz	w0, c5f8 <PyInit__testcapi@@Base+0x3438>
    c5ec:	ldursw	x0, [x29, #-4]
    c5f0:	bl	8840 <PyLong_FromLong@plt>
    c5f4:	b	c5fc <PyInit__testcapi@@Base+0x343c>
    c5f8:	mov	x0, xzr
    c5fc:	ldp	x29, x30, [sp, #16]
    c600:	add	sp, sp, #0x20
    c604:	ret
    c608:	sub	sp, sp, #0x20
    c60c:	stp	x29, x30, [sp, #16]
    c610:	add	x29, sp, #0x10
    c614:	mov	x0, x1
    c618:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    c61c:	add	x1, x1, #0xeb4
    c620:	add	x2, sp, #0x8
    c624:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c628:	cbz	w0, c638 <PyInit__testcapi@@Base+0x3478>
    c62c:	ldr	x0, [sp, #8]
    c630:	bl	8ef0 <PyLong_FromLongLong@plt>
    c634:	b	c63c <PyInit__testcapi@@Base+0x347c>
    c638:	mov	x0, xzr
    c63c:	ldp	x29, x30, [sp, #16]
    c640:	add	sp, sp, #0x20
    c644:	ret
    c648:	sub	sp, sp, #0x20
    c64c:	stp	x29, x30, [sp, #16]
    c650:	add	x29, sp, #0x10
    c654:	mov	x0, x1
    c658:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    c65c:	add	x1, x1, #0xec9
    c660:	add	x2, sp, #0x8
    c664:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    c668:	cbz	w0, c678 <PyInit__testcapi@@Base+0x34b8>
    c66c:	ldr	x0, [sp, #8]
    c670:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    c674:	b	c67c <PyInit__testcapi@@Base+0x34bc>
    c678:	mov	x0, xzr
    c67c:	ldp	x29, x30, [sp, #16]
    c680:	add	sp, sp, #0x20
    c684:	ret
    c688:	stp	x29, x30, [sp, #-16]!
    c68c:	mov	x29, sp
    c690:	bl	10b0c <PyInit__testcapi@@Base+0x794c>
    c694:	ldp	x29, x30, [sp], #16
    c698:	ret
    c69c:	stp	x29, x30, [sp, #-48]!
    c6a0:	str	x21, [sp, #16]
    c6a4:	stp	x20, x19, [sp, #32]
    c6a8:	mov	x29, sp
    c6ac:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    c6b0:	add	x0, x0, #0xcd1
    c6b4:	mov	w2, #0x10                  	// #16
    c6b8:	mov	x1, xzr
    c6bc:	bl	8f90 <PyLong_FromString@plt>
    c6c0:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    c6c4:	mov	w8, #0x4d2                 	// #1234
    c6c8:	add	x1, x29, #0x1c
    c6cc:	mov	x19, x0
    c6d0:	str	w8, [x29, #28]
    c6d4:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    c6d8:	mov	x20, x0
    c6dc:	mov	x0, x19
    c6e0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c6e4:	cmn	x20, #0x1
    c6e8:	b.eq	c704 <PyInit__testcapi@@Base+0x3544>  // b.none
    c6ec:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c6f0:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    c6f4:	add	x0, x0, #0xedd
    c6f8:	add	x1, x1, #0xc97
    c6fc:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    c700:	b	c70c <PyInit__testcapi@@Base+0x354c>
    c704:	bl	8980 <PyErr_Occurred@plt>
    c708:	cbz	x0, c720 <PyInit__testcapi@@Base+0x3560>
    c70c:	mov	x0, xzr
    c710:	ldp	x20, x19, [sp, #32]
    c714:	ldr	x21, [sp, #16]
    c718:	ldp	x29, x30, [sp], #48
    c71c:	ret
    c720:	ldr	w8, [x29, #28]
    c724:	cmp	w8, #0x1
    c728:	b.ne	c810 <PyInit__testcapi@@Base+0x3650>  // b.any
    c72c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    c730:	bl	8ef0 <PyLong_FromLongLong@plt>
    c734:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    c738:	mov	x19, x0
    c73c:	mov	w0, #0x1                   	// #1
    c740:	bl	8840 <PyLong_FromLong@plt>
    c744:	cbz	x0, c914 <PyInit__testcapi@@Base+0x3754>
    c748:	mov	x21, x0
    c74c:	mov	x0, x19
    c750:	mov	x1, x21
    c754:	bl	8490 <PyNumber_Add@plt>
    c758:	mov	x20, x0
    c75c:	mov	x0, x21
    c760:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c764:	mov	x0, x19
    c768:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c76c:	cbz	x20, c70c <PyInit__testcapi@@Base+0x354c>
    c770:	add	x1, x29, #0x1c
    c774:	mov	x0, x20
    c778:	str	wzr, [x29, #28]
    c77c:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    c780:	mov	x19, x0
    c784:	mov	x0, x20
    c788:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c78c:	cmn	x19, #0x1
    c790:	b.ne	c6ec <PyInit__testcapi@@Base+0x352c>  // b.any
    c794:	bl	8980 <PyErr_Occurred@plt>
    c798:	cbnz	x0, c70c <PyInit__testcapi@@Base+0x354c>
    c79c:	ldr	w8, [x29, #28]
    c7a0:	cmp	w8, #0x1
    c7a4:	b.ne	c810 <PyInit__testcapi@@Base+0x3650>  // b.any
    c7a8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    c7ac:	add	x0, x0, #0xcd0
    c7b0:	mov	w2, #0x10                  	// #16
    c7b4:	mov	x1, xzr
    c7b8:	bl	8f90 <PyLong_FromString@plt>
    c7bc:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    c7c0:	mov	w8, #0x4d2                 	// #1234
    c7c4:	add	x1, x29, #0x1c
    c7c8:	mov	x19, x0
    c7cc:	str	w8, [x29, #28]
    c7d0:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    c7d4:	mov	x20, x0
    c7d8:	mov	x0, x19
    c7dc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c7e0:	cmn	x20, #0x1
    c7e4:	b.ne	c6ec <PyInit__testcapi@@Base+0x352c>  // b.any
    c7e8:	bl	8980 <PyErr_Occurred@plt>
    c7ec:	cbnz	x0, c70c <PyInit__testcapi@@Base+0x354c>
    c7f0:	ldr	w8, [x29, #28]
    c7f4:	cmn	w8, #0x1
    c7f8:	b.eq	c824 <PyInit__testcapi@@Base+0x3664>  // b.none
    c7fc:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c800:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    c804:	add	x0, x0, #0xedd
    c808:	add	x1, x1, #0xcea
    c80c:	b	c6fc <PyInit__testcapi@@Base+0x353c>
    c810:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c814:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    c818:	add	x0, x0, #0xedd
    c81c:	add	x1, x1, #0xcb6
    c820:	b	c6fc <PyInit__testcapi@@Base+0x353c>
    c824:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    c828:	bl	8ef0 <PyLong_FromLongLong@plt>
    c82c:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    c830:	mov	x19, x0
    c834:	mov	w0, #0x1                   	// #1
    c838:	bl	8840 <PyLong_FromLong@plt>
    c83c:	cbz	x0, c914 <PyInit__testcapi@@Base+0x3754>
    c840:	mov	x21, x0
    c844:	mov	x0, x19
    c848:	mov	x1, x21
    c84c:	bl	8fe0 <PyNumber_Subtract@plt>
    c850:	mov	x20, x0
    c854:	mov	x0, x21
    c858:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c85c:	mov	x0, x19
    c860:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c864:	cbz	x20, c70c <PyInit__testcapi@@Base+0x354c>
    c868:	add	x1, x29, #0x1c
    c86c:	mov	x0, x20
    c870:	str	wzr, [x29, #28]
    c874:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    c878:	mov	x19, x0
    c87c:	mov	x0, x20
    c880:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c884:	cmn	x19, #0x1
    c888:	b.ne	c6ec <PyInit__testcapi@@Base+0x352c>  // b.any
    c88c:	bl	8980 <PyErr_Occurred@plt>
    c890:	cbnz	x0, c70c <PyInit__testcapi@@Base+0x354c>
    c894:	ldr	w8, [x29, #28]
    c898:	cmn	w8, #0x1
    c89c:	b.ne	c7fc <PyInit__testcapi@@Base+0x363c>  // b.any
    c8a0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    c8a4:	add	x0, x0, #0xd3a
    c8a8:	mov	w2, #0x10                  	// #16
    c8ac:	mov	x1, xzr
    c8b0:	bl	8f90 <PyLong_FromString@plt>
    c8b4:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    c8b8:	mov	w8, #0x4d2                 	// #1234
    c8bc:	add	x1, x29, #0x1c
    c8c0:	mov	x20, x0
    c8c4:	str	w8, [x29, #28]
    c8c8:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    c8cc:	mov	x19, x0
    c8d0:	mov	x0, x20
    c8d4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c8d8:	cmp	x19, #0xff
    c8dc:	b.eq	c8f8 <PyInit__testcapi@@Base+0x3738>  // b.none
    c8e0:	cmn	x19, #0x1
    c8e4:	b.ne	c990 <PyInit__testcapi@@Base+0x37d0>  // b.any
    c8e8:	bl	8980 <PyErr_Occurred@plt>
    c8ec:	cbnz	x0, c70c <PyInit__testcapi@@Base+0x354c>
    c8f0:	cmp	x19, #0xff
    c8f4:	b.ne	c990 <PyInit__testcapi@@Base+0x37d0>  // b.any
    c8f8:	ldr	w8, [x29, #28]
    c8fc:	cbz	w8, c920 <PyInit__testcapi@@Base+0x3760>
    c900:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c904:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    c908:	add	x0, x0, #0xedd
    c90c:	add	x1, x1, #0xd20
    c910:	b	c6fc <PyInit__testcapi@@Base+0x353c>
    c914:	mov	x0, x19
    c918:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c91c:	b	c70c <PyInit__testcapi@@Base+0x354c>
    c920:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    c924:	add	x0, x0, #0xd39
    c928:	mov	w2, #0x10                  	// #16
    c92c:	mov	x1, xzr
    c930:	bl	8f90 <PyLong_FromString@plt>
    c934:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    c938:	add	x1, x29, #0x1c
    c93c:	mov	x20, x0
    c940:	str	wzr, [x29, #28]
    c944:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    c948:	mov	x19, x0
    c94c:	mov	x0, x20
    c950:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c954:	cmn	x19, #0xff
    c958:	b.eq	c974 <PyInit__testcapi@@Base+0x37b4>  // b.none
    c95c:	cmn	x19, #0x1
    c960:	b.ne	c990 <PyInit__testcapi@@Base+0x37d0>  // b.any
    c964:	bl	8980 <PyErr_Occurred@plt>
    c968:	cbnz	x0, c70c <PyInit__testcapi@@Base+0x354c>
    c96c:	cmn	x19, #0xff
    c970:	b.ne	c990 <PyInit__testcapi@@Base+0x37d0>  // b.any
    c974:	ldr	w8, [x29, #28]
    c978:	cbz	w8, c9a4 <PyInit__testcapi@@Base+0x37e4>
    c97c:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c980:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    c984:	add	x0, x0, #0xedd
    c988:	add	x1, x1, #0xd3d
    c98c:	b	c6fc <PyInit__testcapi@@Base+0x353c>
    c990:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    c994:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    c998:	add	x0, x0, #0xedd
    c99c:	add	x1, x1, #0xd05
    c9a0:	b	c6fc <PyInit__testcapi@@Base+0x353c>
    c9a4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    c9a8:	mov	x21, #0x7fffffffffffffff    	// #9223372036854775807
    c9ac:	bl	8ef0 <PyLong_FromLongLong@plt>
    c9b0:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    c9b4:	mov	w8, #0x4d2                 	// #1234
    c9b8:	add	x1, x29, #0x1c
    c9bc:	mov	x20, x0
    c9c0:	str	w8, [x29, #28]
    c9c4:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    c9c8:	mov	x19, x0
    c9cc:	mov	x0, x20
    c9d0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    c9d4:	cmp	x19, x21
    c9d8:	b.eq	c9f8 <PyInit__testcapi@@Base+0x3838>  // b.none
    c9dc:	cmn	x19, #0x1
    c9e0:	b.ne	ca70 <PyInit__testcapi@@Base+0x38b0>  // b.any
    c9e4:	bl	8980 <PyErr_Occurred@plt>
    c9e8:	cbnz	x0, c70c <PyInit__testcapi@@Base+0x354c>
    c9ec:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    c9f0:	cmp	x19, x8
    c9f4:	b.ne	ca70 <PyInit__testcapi@@Base+0x38b0>  // b.any
    c9f8:	ldr	w8, [x29, #28]
    c9fc:	cbnz	w8, c900 <PyInit__testcapi@@Base+0x3740>
    ca00:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    ca04:	mov	x21, #0x8000000000000000    	// #-9223372036854775808
    ca08:	bl	8ef0 <PyLong_FromLongLong@plt>
    ca0c:	cbz	x0, c710 <PyInit__testcapi@@Base+0x3550>
    ca10:	add	x1, x29, #0x1c
    ca14:	mov	x20, x0
    ca18:	str	wzr, [x29, #28]
    ca1c:	bl	82e0 <PyLong_AsLongLongAndOverflow@plt>
    ca20:	mov	x19, x0
    ca24:	mov	x0, x20
    ca28:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    ca2c:	cmp	x19, x21
    ca30:	b.eq	ca50 <PyInit__testcapi@@Base+0x3890>  // b.none
    ca34:	cmn	x19, #0x1
    ca38:	b.ne	ca84 <PyInit__testcapi@@Base+0x38c4>  // b.any
    ca3c:	bl	8980 <PyErr_Occurred@plt>
    ca40:	cbnz	x0, c70c <PyInit__testcapi@@Base+0x354c>
    ca44:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    ca48:	cmp	x19, x8
    ca4c:	b.ne	ca84 <PyInit__testcapi@@Base+0x38c4>  // b.any
    ca50:	ldr	w8, [x29, #28]
    ca54:	cbnz	w8, c900 <PyInit__testcapi@@Base+0x3740>
    ca58:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ca5c:	ldr	x19, [x19, #4016]
    ca60:	mov	x0, x19
    ca64:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ca68:	mov	x0, x19
    ca6c:	b	c710 <PyInit__testcapi@@Base+0x3550>
    ca70:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ca74:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ca78:	add	x0, x0, #0xedd
    ca7c:	add	x1, x1, #0x8e2
    ca80:	b	c6fc <PyInit__testcapi@@Base+0x353c>
    ca84:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
    ca88:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ca8c:	add	x0, x0, #0xedd
    ca90:	add	x1, x1, #0x905
    ca94:	b	c6fc <PyInit__testcapi@@Base+0x353c>
    ca98:	sub	sp, sp, #0x30
    ca9c:	stp	x29, x30, [sp, #16]
    caa0:	stp	x20, x19, [sp, #32]
    caa4:	add	x29, sp, #0x10
    caa8:	mov	w0, #0x1                   	// #1
    caac:	bl	8920 <PyTuple_New@plt>
    cab0:	mov	x19, x0
    cab4:	cbz	x0, cb70 <PyInit__testcapi@@Base+0x39b0>
    cab8:	mov	w0, #0x2a                  	// #42
    cabc:	bl	8840 <PyLong_FromLong@plt>
    cac0:	cbz	x0, cb6c <PyInit__testcapi@@Base+0x39ac>
    cac4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    cac8:	mov	x20, x0
    cacc:	str	x0, [x19, #24]
    cad0:	mov	x8, #0xffffffffffffffff    	// #-1
    cad4:	add	x1, x1, #0x928
    cad8:	add	x2, sp, #0x8
    cadc:	mov	x0, x19
    cae0:	str	x8, [sp, #8]
    cae4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cae8:	cbz	w0, cb6c <PyInit__testcapi@@Base+0x39ac>
    caec:	ldr	x8, [sp, #8]
    caf0:	cmp	x8, #0x2a
    caf4:	b.ne	cb58 <PyInit__testcapi@@Base+0x3998>  // b.any
    caf8:	mov	x0, x20
    cafc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    cb00:	mov	w0, #0x2a                  	// #42
    cb04:	bl	8840 <PyLong_FromLong@plt>
    cb08:	cbz	x0, cb6c <PyInit__testcapi@@Base+0x39ac>
    cb0c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    cb10:	str	x0, [x19, #24]
    cb14:	mov	x8, #0xffffffffffffffff    	// #-1
    cb18:	add	x1, x1, #0x928
    cb1c:	add	x2, sp, #0x8
    cb20:	mov	x0, x19
    cb24:	str	x8, [sp, #8]
    cb28:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cb2c:	cbz	w0, cb6c <PyInit__testcapi@@Base+0x39ac>
    cb30:	ldr	x8, [sp, #8]
    cb34:	cmp	x8, #0x2a
    cb38:	b.ne	cb84 <PyInit__testcapi@@Base+0x39c4>  // b.any
    cb3c:	mov	x0, x19
    cb40:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    cb44:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    cb48:	ldr	x19, [x19, #4016]
    cb4c:	mov	x0, x19
    cb50:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    cb54:	b	cb70 <PyInit__testcapi@@Base+0x39b0>
    cb58:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    cb5c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    cb60:	add	x0, x0, #0x92a
    cb64:	add	x1, x1, #0x936
    cb68:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    cb6c:	mov	x19, xzr
    cb70:	mov	x0, x19
    cb74:	ldp	x20, x19, [sp, #32]
    cb78:	ldp	x29, x30, [sp, #16]
    cb7c:	add	sp, sp, #0x30
    cb80:	ret
    cb84:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    cb88:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    cb8c:	add	x0, x0, #0x92a
    cb90:	add	x1, x1, #0x95e
    cb94:	b	cb68 <PyInit__testcapi@@Base+0x39a8>
    cb98:	sub	sp, sp, #0x20
    cb9c:	stp	x29, x30, [sp, #16]
    cba0:	add	x29, sp, #0x10
    cba4:	mov	x0, x1
    cba8:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    cbac:	add	x1, x1, #0xf01
    cbb0:	sub	x2, x29, #0x4
    cbb4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cbb8:	cbz	w0, cbcc <PyInit__testcapi@@Base+0x3a0c>
    cbbc:	ldur	s0, [x29, #-4]
    cbc0:	fcvt	d0, s0
    cbc4:	bl	8800 <PyFloat_FromDouble@plt>
    cbc8:	b	cbd0 <PyInit__testcapi@@Base+0x3a10>
    cbcc:	mov	x0, xzr
    cbd0:	ldp	x29, x30, [sp, #16]
    cbd4:	add	sp, sp, #0x20
    cbd8:	ret
    cbdc:	sub	sp, sp, #0x20
    cbe0:	stp	x29, x30, [sp, #16]
    cbe4:	add	x29, sp, #0x10
    cbe8:	mov	x0, x1
    cbec:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    cbf0:	add	x1, x1, #0x19d
    cbf4:	add	x2, sp, #0x8
    cbf8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cbfc:	cbz	w0, cc0c <PyInit__testcapi@@Base+0x3a4c>
    cc00:	ldr	d0, [sp, #8]
    cc04:	bl	8800 <PyFloat_FromDouble@plt>
    cc08:	b	cc10 <PyInit__testcapi@@Base+0x3a50>
    cc0c:	mov	x0, xzr
    cc10:	ldp	x29, x30, [sp, #16]
    cc14:	add	sp, sp, #0x20
    cc18:	ret
    cc1c:	sub	sp, sp, #0x20
    cc20:	stp	x29, x30, [sp, #16]
    cc24:	add	x29, sp, #0x10
    cc28:	mov	x0, x1
    cc2c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    cc30:	add	x1, x1, #0x962
    cc34:	mov	x2, sp
    cc38:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cc3c:	cbz	w0, cc4c <PyInit__testcapi@@Base+0x3a8c>
    cc40:	ldp	d0, d1, [sp]
    cc44:	bl	8e90 <PyComplex_FromCComplex@plt>
    cc48:	b	cc50 <PyInit__testcapi@@Base+0x3a90>
    cc4c:	mov	x0, xzr
    cc50:	ldp	x29, x30, [sp, #16]
    cc54:	add	sp, sp, #0x20
    cc58:	ret
    cc5c:	sub	sp, sp, #0x20
    cc60:	stp	x29, x30, [sp, #16]
    cc64:	add	x29, sp, #0x10
    cc68:	mov	x0, x1
    cc6c:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    cc70:	add	x1, x1, #0xf1f
    cc74:	add	x2, sp, #0x8
    cc78:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cc7c:	cbz	w0, cc90 <PyInit__testcapi@@Base+0x3ad0>
    cc80:	ldr	x0, [sp, #8]
    cc84:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    cc88:	ldr	x0, [sp, #8]
    cc8c:	b	cc94 <PyInit__testcapi@@Base+0x3ad4>
    cc90:	mov	x0, xzr
    cc94:	ldp	x29, x30, [sp, #16]
    cc98:	add	sp, sp, #0x20
    cc9c:	ret
    cca0:	sub	sp, sp, #0x20
    cca4:	stp	x29, x30, [sp, #16]
    cca8:	add	x29, sp, #0x10
    ccac:	mov	x0, x1
    ccb0:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    ccb4:	add	x1, x1, #0xf29
    ccb8:	add	x2, sp, #0x8
    ccbc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ccc0:	cbz	w0, ccd4 <PyInit__testcapi@@Base+0x3b14>
    ccc4:	ldr	x0, [sp, #8]
    ccc8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    cccc:	ldr	x0, [sp, #8]
    ccd0:	b	ccd8 <PyInit__testcapi@@Base+0x3b18>
    ccd4:	mov	x0, xzr
    ccd8:	ldp	x29, x30, [sp, #16]
    ccdc:	add	sp, sp, #0x20
    cce0:	ret
    cce4:	sub	sp, sp, #0x20
    cce8:	stp	x29, x30, [sp, #16]
    ccec:	add	x29, sp, #0x10
    ccf0:	mov	x0, x1
    ccf4:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    ccf8:	add	x1, x1, #0xf33
    ccfc:	add	x2, sp, #0x8
    cd00:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cd04:	cbz	w0, cd18 <PyInit__testcapi@@Base+0x3b58>
    cd08:	ldr	x0, [sp, #8]
    cd0c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    cd10:	ldr	x0, [sp, #8]
    cd14:	b	cd1c <PyInit__testcapi@@Base+0x3b5c>
    cd18:	mov	x0, xzr
    cd1c:	ldp	x29, x30, [sp, #16]
    cd20:	add	sp, sp, #0x20
    cd24:	ret
    cd28:	sub	sp, sp, #0x20
    cd2c:	stp	x29, x30, [sp, #16]
    cd30:	add	x29, sp, #0x10
    cd34:	mov	x0, x1
    cd38:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    cd3c:	add	x1, x1, #0xf3d
    cd40:	sub	x2, x29, #0x4
    cd44:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cd48:	cbz	w0, cd58 <PyInit__testcapi@@Base+0x3b98>
    cd4c:	ldurb	w0, [x29, #-4]
    cd50:	bl	8840 <PyLong_FromLong@plt>
    cd54:	b	cd5c <PyInit__testcapi@@Base+0x3b9c>
    cd58:	mov	x0, xzr
    cd5c:	ldp	x29, x30, [sp, #16]
    cd60:	add	sp, sp, #0x20
    cd64:	ret
    cd68:	sub	sp, sp, #0x20
    cd6c:	stp	x29, x30, [sp, #16]
    cd70:	add	x29, sp, #0x10
    cd74:	mov	x0, x1
    cd78:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    cd7c:	add	x1, x1, #0x99e
    cd80:	sub	x2, x29, #0x4
    cd84:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cd88:	cbz	w0, cd98 <PyInit__testcapi@@Base+0x3bd8>
    cd8c:	ldursw	x0, [x29, #-4]
    cd90:	bl	8840 <PyLong_FromLong@plt>
    cd94:	b	cd9c <PyInit__testcapi@@Base+0x3bdc>
    cd98:	mov	x0, xzr
    cd9c:	ldp	x29, x30, [sp, #16]
    cda0:	add	sp, sp, #0x20
    cda4:	ret
    cda8:	sub	sp, sp, #0x20
    cdac:	stp	x29, x30, [sp, #16]
    cdb0:	add	x29, sp, #0x10
    cdb4:	mov	x0, x1
    cdb8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
    cdbc:	add	x1, x1, #0xc2f
    cdc0:	add	x2, sp, #0x8
    cdc4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cdc8:	cbz	w0, cdd8 <PyInit__testcapi@@Base+0x3c18>
    cdcc:	ldr	x0, [sp, #8]
    cdd0:	bl	8970 <PyBytes_FromString@plt>
    cdd4:	b	cddc <PyInit__testcapi@@Base+0x3c1c>
    cdd8:	mov	x0, xzr
    cddc:	ldp	x29, x30, [sp, #16]
    cde0:	add	sp, sp, #0x20
    cde4:	ret
    cde8:	sub	sp, sp, #0x70
    cdec:	stp	x29, x30, [sp, #80]
    cdf0:	str	x19, [sp, #96]
    cdf4:	add	x29, sp, #0x50
    cdf8:	mov	x0, x1
    cdfc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ce00:	add	x1, x1, #0x985
    ce04:	mov	x2, sp
    ce08:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ce0c:	cbz	w0, ce2c <PyInit__testcapi@@Base+0x3c6c>
    ce10:	ldr	x0, [sp]
    ce14:	ldr	x1, [sp, #16]
    ce18:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ce1c:	mov	x19, x0
    ce20:	mov	x0, sp
    ce24:	bl	8470 <PyBuffer_Release@plt>
    ce28:	b	ce30 <PyInit__testcapi@@Base+0x3c70>
    ce2c:	mov	x19, xzr
    ce30:	mov	x0, x19
    ce34:	ldr	x19, [sp, #96]
    ce38:	ldp	x29, x30, [sp, #80]
    ce3c:	add	sp, sp, #0x70
    ce40:	ret
    ce44:	sub	sp, sp, #0x20
    ce48:	stp	x29, x30, [sp, #16]
    ce4c:	add	x29, sp, #0x10
    ce50:	mov	x0, x1
    ce54:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ce58:	add	x1, x1, #0x9b6
    ce5c:	add	x2, sp, #0x8
    ce60:	mov	x3, sp
    ce64:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ce68:	cbz	w0, ce78 <PyInit__testcapi@@Base+0x3cb8>
    ce6c:	ldp	x1, x0, [sp]
    ce70:	bl	8500 <PyBytes_FromStringAndSize@plt>
    ce74:	b	ce7c <PyInit__testcapi@@Base+0x3cbc>
    ce78:	mov	x0, xzr
    ce7c:	ldp	x29, x30, [sp, #16]
    ce80:	add	sp, sp, #0x20
    ce84:	ret
    ce88:	stp	x29, x30, [sp, #-32]!
    ce8c:	str	x19, [sp, #16]
    ce90:	mov	x29, sp
    ce94:	mov	x0, x1
    ce98:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    ce9c:	add	x1, x1, #0xf79
    cea0:	add	x2, x29, #0x18
    cea4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cea8:	cbz	w0, cec0 <PyInit__testcapi@@Base+0x3d00>
    ceac:	ldr	x0, [x29, #24]
    ceb0:	cbz	x0, cec8 <PyInit__testcapi@@Base+0x3d08>
    ceb4:	bl	8970 <PyBytes_FromString@plt>
    ceb8:	mov	x19, x0
    cebc:	b	ced8 <PyInit__testcapi@@Base+0x3d18>
    cec0:	mov	x19, xzr
    cec4:	b	ced8 <PyInit__testcapi@@Base+0x3d18>
    cec8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    cecc:	ldr	x19, [x19, #4016]
    ced0:	mov	x0, x19
    ced4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ced8:	mov	x0, x19
    cedc:	ldr	x19, [sp, #16]
    cee0:	ldp	x29, x30, [sp], #32
    cee4:	ret
    cee8:	sub	sp, sp, #0x70
    ceec:	stp	x29, x30, [sp, #80]
    cef0:	str	x19, [sp, #96]
    cef4:	add	x29, sp, #0x50
    cef8:	mov	x0, x1
    cefc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    cf00:	add	x1, x1, #0x988
    cf04:	mov	x2, sp
    cf08:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cf0c:	cbz	w0, cf28 <PyInit__testcapi@@Base+0x3d68>
    cf10:	ldr	x0, [sp]
    cf14:	cbz	x0, cf30 <PyInit__testcapi@@Base+0x3d70>
    cf18:	ldr	x1, [sp, #16]
    cf1c:	bl	8500 <PyBytes_FromStringAndSize@plt>
    cf20:	mov	x19, x0
    cf24:	b	cf40 <PyInit__testcapi@@Base+0x3d80>
    cf28:	mov	x19, xzr
    cf2c:	b	cf48 <PyInit__testcapi@@Base+0x3d88>
    cf30:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    cf34:	ldr	x19, [x19, #4016]
    cf38:	mov	x0, x19
    cf3c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    cf40:	mov	x0, sp
    cf44:	bl	8470 <PyBuffer_Release@plt>
    cf48:	mov	x0, x19
    cf4c:	ldr	x19, [sp, #96]
    cf50:	ldp	x29, x30, [sp, #80]
    cf54:	add	sp, sp, #0x70
    cf58:	ret
    cf5c:	sub	sp, sp, #0x30
    cf60:	stp	x29, x30, [sp, #16]
    cf64:	str	x19, [sp, #32]
    cf68:	add	x29, sp, #0x10
    cf6c:	mov	x0, x1
    cf70:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    cf74:	add	x1, x1, #0x98b
    cf78:	add	x2, x29, #0x18
    cf7c:	add	x3, sp, #0x8
    cf80:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cf84:	cbz	w0, cfa0 <PyInit__testcapi@@Base+0x3de0>
    cf88:	ldr	x0, [x29, #24]
    cf8c:	cbz	x0, cfa8 <PyInit__testcapi@@Base+0x3de8>
    cf90:	ldr	x1, [sp, #8]
    cf94:	bl	8500 <PyBytes_FromStringAndSize@plt>
    cf98:	mov	x19, x0
    cf9c:	b	cfb8 <PyInit__testcapi@@Base+0x3df8>
    cfa0:	mov	x19, xzr
    cfa4:	b	cfb8 <PyInit__testcapi@@Base+0x3df8>
    cfa8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    cfac:	ldr	x19, [x19, #4016]
    cfb0:	mov	x0, x19
    cfb4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    cfb8:	mov	x0, x19
    cfbc:	ldr	x19, [sp, #32]
    cfc0:	ldp	x29, x30, [sp, #16]
    cfc4:	add	sp, sp, #0x30
    cfc8:	ret
    cfcc:	sub	sp, sp, #0x20
    cfd0:	stp	x29, x30, [sp, #16]
    cfd4:	add	x29, sp, #0x10
    cfd8:	mov	x0, x1
    cfdc:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    cfe0:	add	x1, x1, #0xfa1
    cfe4:	add	x2, sp, #0x8
    cfe8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    cfec:	cbz	w0, cffc <PyInit__testcapi@@Base+0x3e3c>
    cff0:	ldr	x0, [sp, #8]
    cff4:	bl	8970 <PyBytes_FromString@plt>
    cff8:	b	d000 <PyInit__testcapi@@Base+0x3e40>
    cffc:	mov	x0, xzr
    d000:	ldp	x29, x30, [sp, #16]
    d004:	add	sp, sp, #0x20
    d008:	ret
    d00c:	sub	sp, sp, #0x70
    d010:	stp	x29, x30, [sp, #80]
    d014:	str	x19, [sp, #96]
    d018:	add	x29, sp, #0x50
    d01c:	mov	x0, x1
    d020:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d024:	add	x1, x1, #0x98e
    d028:	mov	x2, sp
    d02c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d030:	cbz	w0, d050 <PyInit__testcapi@@Base+0x3e90>
    d034:	ldr	x0, [sp]
    d038:	ldr	x1, [sp, #16]
    d03c:	bl	8500 <PyBytes_FromStringAndSize@plt>
    d040:	mov	x19, x0
    d044:	mov	x0, sp
    d048:	bl	8470 <PyBuffer_Release@plt>
    d04c:	b	d054 <PyInit__testcapi@@Base+0x3e94>
    d050:	mov	x19, xzr
    d054:	mov	x0, x19
    d058:	ldr	x19, [sp, #96]
    d05c:	ldp	x29, x30, [sp, #80]
    d060:	add	sp, sp, #0x70
    d064:	ret
    d068:	sub	sp, sp, #0x20
    d06c:	stp	x29, x30, [sp, #16]
    d070:	add	x29, sp, #0x10
    d074:	mov	x0, x1
    d078:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d07c:	add	x1, x1, #0x991
    d080:	add	x2, sp, #0x8
    d084:	mov	x3, sp
    d088:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d08c:	cbz	w0, d09c <PyInit__testcapi@@Base+0x3edc>
    d090:	ldp	x1, x0, [sp]
    d094:	bl	8500 <PyBytes_FromStringAndSize@plt>
    d098:	b	d0a0 <PyInit__testcapi@@Base+0x3ee0>
    d09c:	mov	x0, xzr
    d0a0:	ldp	x29, x30, [sp, #16]
    d0a4:	add	sp, sp, #0x20
    d0a8:	ret
    d0ac:	sub	sp, sp, #0x20
    d0b0:	stp	x29, x30, [sp, #16]
    d0b4:	add	x29, sp, #0x10
    d0b8:	mov	x0, x1
    d0bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d0c0:	add	x1, x1, #0x1d7
    d0c4:	add	x2, sp, #0x8
    d0c8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d0cc:	cbz	w0, d0e0 <PyInit__testcapi@@Base+0x3f20>
    d0d0:	ldr	x0, [sp, #8]
    d0d4:	mov	x1, #0xffffffffffffffff    	// #-1
    d0d8:	bl	8400 <PyUnicode_FromWideChar@plt>
    d0dc:	b	d0e4 <PyInit__testcapi@@Base+0x3f24>
    d0e0:	mov	x0, xzr
    d0e4:	ldp	x29, x30, [sp, #16]
    d0e8:	add	sp, sp, #0x20
    d0ec:	ret
    d0f0:	sub	sp, sp, #0x20
    d0f4:	stp	x29, x30, [sp, #16]
    d0f8:	add	x29, sp, #0x10
    d0fc:	mov	x0, x1
    d100:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d104:	add	x1, x1, #0x994
    d108:	add	x2, sp, #0x8
    d10c:	mov	x3, sp
    d110:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d114:	cbz	w0, d124 <PyInit__testcapi@@Base+0x3f64>
    d118:	ldp	x1, x0, [sp]
    d11c:	bl	8400 <PyUnicode_FromWideChar@plt>
    d120:	b	d128 <PyInit__testcapi@@Base+0x3f68>
    d124:	mov	x0, xzr
    d128:	ldp	x29, x30, [sp, #16]
    d12c:	add	sp, sp, #0x20
    d130:	ret
    d134:	stp	x29, x30, [sp, #-32]!
    d138:	str	x19, [sp, #16]
    d13c:	mov	x29, sp
    d140:	mov	x0, x1
    d144:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    d148:	add	x1, x1, #0xfe2
    d14c:	add	x2, x29, #0x18
    d150:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d154:	cbz	w0, d170 <PyInit__testcapi@@Base+0x3fb0>
    d158:	ldr	x0, [x29, #24]
    d15c:	cbz	x0, d178 <PyInit__testcapi@@Base+0x3fb8>
    d160:	mov	x1, #0xffffffffffffffff    	// #-1
    d164:	bl	8400 <PyUnicode_FromWideChar@plt>
    d168:	mov	x19, x0
    d16c:	b	d188 <PyInit__testcapi@@Base+0x3fc8>
    d170:	mov	x19, xzr
    d174:	b	d188 <PyInit__testcapi@@Base+0x3fc8>
    d178:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    d17c:	ldr	x19, [x19, #4016]
    d180:	mov	x0, x19
    d184:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    d188:	mov	x0, x19
    d18c:	ldr	x19, [sp, #16]
    d190:	ldp	x29, x30, [sp], #32
    d194:	ret
    d198:	sub	sp, sp, #0x30
    d19c:	stp	x29, x30, [sp, #16]
    d1a0:	str	x19, [sp, #32]
    d1a4:	add	x29, sp, #0x10
    d1a8:	mov	x0, x1
    d1ac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d1b0:	add	x1, x1, #0x997
    d1b4:	add	x2, x29, #0x18
    d1b8:	add	x3, sp, #0x8
    d1bc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d1c0:	cbz	w0, d1dc <PyInit__testcapi@@Base+0x401c>
    d1c4:	ldr	x0, [x29, #24]
    d1c8:	cbz	x0, d1e4 <PyInit__testcapi@@Base+0x4024>
    d1cc:	ldr	x1, [sp, #8]
    d1d0:	bl	8400 <PyUnicode_FromWideChar@plt>
    d1d4:	mov	x19, x0
    d1d8:	b	d1f4 <PyInit__testcapi@@Base+0x4034>
    d1dc:	mov	x19, xzr
    d1e0:	b	d1f4 <PyInit__testcapi@@Base+0x4034>
    d1e4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    d1e8:	ldr	x19, [x19, #4016]
    d1ec:	mov	x0, x19
    d1f0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    d1f4:	mov	x0, x19
    d1f8:	ldr	x19, [sp, #32]
    d1fc:	ldp	x29, x30, [sp, #16]
    d200:	add	sp, sp, #0x30
    d204:	ret
    d208:	sub	sp, sp, #0x70
    d20c:	stp	x29, x30, [sp, #80]
    d210:	str	x19, [sp, #96]
    d214:	add	x29, sp, #0x50
    d218:	mov	x0, x1
    d21c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d220:	add	x1, x1, #0x99a
    d224:	mov	x2, sp
    d228:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d22c:	cbz	w0, d274 <PyInit__testcapi@@Base+0x40b4>
    d230:	ldr	x8, [sp, #16]
    d234:	cmp	x8, #0x2
    d238:	b.lt	d258 <PyInit__testcapi@@Base+0x4098>  // b.tstop
    d23c:	ldr	x8, [sp]
    d240:	mov	w9, #0x5b                  	// #91
    d244:	strb	w9, [x8]
    d248:	ldr	x9, [sp, #16]
    d24c:	add	x8, x9, x8
    d250:	mov	w9, #0x5d                  	// #93
    d254:	sturb	w9, [x8, #-1]
    d258:	ldr	x0, [sp]
    d25c:	ldr	x1, [sp, #16]
    d260:	bl	8500 <PyBytes_FromStringAndSize@plt>
    d264:	mov	x19, x0
    d268:	mov	x0, sp
    d26c:	bl	8470 <PyBuffer_Release@plt>
    d270:	b	d278 <PyInit__testcapi@@Base+0x40b8>
    d274:	mov	x19, xzr
    d278:	mov	x0, x19
    d27c:	ldr	x19, [sp, #96]
    d280:	ldp	x29, x30, [sp, #80]
    d284:	add	sp, sp, #0x70
    d288:	ret
    d28c:	sub	sp, sp, #0x30
    d290:	stp	x29, x30, [sp, #16]
    d294:	str	x19, [sp, #32]
    d298:	add	x29, sp, #0x10
    d29c:	mov	x0, x1
    d2a0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d2a4:	add	x1, x1, #0x9ac
    d2a8:	add	x2, x29, #0x18
    d2ac:	add	x3, sp, #0x8
    d2b0:	str	xzr, [sp, #8]
    d2b4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d2b8:	cbz	w0, d2f4 <PyInit__testcapi@@Base+0x4134>
    d2bc:	ldr	x0, [x29, #24]
    d2c0:	ldr	x2, [sp, #8]
    d2c4:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    d2c8:	add	x1, x1, #0xffb
    d2cc:	mov	x3, sp
    d2d0:	bl	8810 <_PyArg_Parse_SizeT@plt>
    d2d4:	cbz	w0, d2f4 <PyInit__testcapi@@Base+0x4134>
    d2d8:	ldr	x0, [sp]
    d2dc:	bl	8970 <PyBytes_FromString@plt>
    d2e0:	ldr	x8, [sp]
    d2e4:	mov	x19, x0
    d2e8:	mov	x0, x8
    d2ec:	bl	83d0 <PyMem_Free@plt>
    d2f0:	b	d2f8 <PyInit__testcapi@@Base+0x4138>
    d2f4:	mov	x19, xzr
    d2f8:	mov	x0, x19
    d2fc:	ldr	x19, [sp, #32]
    d300:	ldp	x29, x30, [sp, #16]
    d304:	add	sp, sp, #0x30
    d308:	ret
    d30c:	sub	sp, sp, #0x30
    d310:	stp	x29, x30, [sp, #16]
    d314:	str	x19, [sp, #32]
    d318:	add	x29, sp, #0x10
    d31c:	mov	x0, x1
    d320:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d324:	add	x1, x1, #0x9ac
    d328:	add	x2, x29, #0x18
    d32c:	add	x3, sp, #0x8
    d330:	str	xzr, [sp, #8]
    d334:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d338:	cbz	w0, d374 <PyInit__testcapi@@Base+0x41b4>
    d33c:	ldr	x0, [x29, #24]
    d340:	ldr	x2, [sp, #8]
    d344:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    d348:	add	x1, x1, #0x886
    d34c:	mov	x3, sp
    d350:	bl	8810 <_PyArg_Parse_SizeT@plt>
    d354:	cbz	w0, d374 <PyInit__testcapi@@Base+0x41b4>
    d358:	ldr	x0, [sp]
    d35c:	bl	8970 <PyBytes_FromString@plt>
    d360:	ldr	x8, [sp]
    d364:	mov	x19, x0
    d368:	mov	x0, x8
    d36c:	bl	83d0 <PyMem_Free@plt>
    d370:	b	d378 <PyInit__testcapi@@Base+0x41b8>
    d374:	mov	x19, xzr
    d378:	mov	x0, x19
    d37c:	ldr	x19, [sp, #32]
    d380:	ldp	x29, x30, [sp, #16]
    d384:	add	sp, sp, #0x30
    d388:	ret
    d38c:	sub	sp, sp, #0x40
    d390:	stp	x29, x30, [sp, #32]
    d394:	str	x19, [sp, #48]
    d398:	add	x29, sp, #0x20
    d39c:	mov	x0, x1
    d3a0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d3a4:	add	x1, x1, #0x9b0
    d3a8:	add	x2, x29, #0x18
    d3ac:	sub	x3, x29, #0x8
    d3b0:	add	x4, sp, #0x10
    d3b4:	stur	xzr, [x29, #-8]
    d3b8:	stp	xzr, xzr, [sp, #8]
    d3bc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d3c0:	cbz	w0, d434 <PyInit__testcapi@@Base+0x4274>
    d3c4:	ldr	x8, [sp, #16]
    d3c8:	cbz	x8, d3f4 <PyInit__testcapi@@Base+0x4234>
    d3cc:	ldr	x9, [x8, #16]
    d3d0:	cbz	x9, d3dc <PyInit__testcapi@@Base+0x421c>
    d3d4:	ldr	x8, [x8, #40]
    d3d8:	b	d3e4 <PyInit__testcapi@@Base+0x4224>
    d3dc:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    d3e0:	ldr	x8, [x8, #3904]
    d3e4:	ldr	x9, [sp, #16]
    d3e8:	str	x8, [sp, #8]
    d3ec:	ldr	x8, [x9, #16]
    d3f0:	str	x8, [sp]
    d3f4:	ldr	x0, [x29, #24]
    d3f8:	ldur	x2, [x29, #-8]
    d3fc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d400:	add	x1, x1, #0x9b5
    d404:	add	x3, sp, #0x8
    d408:	mov	x4, sp
    d40c:	bl	8810 <_PyArg_Parse_SizeT@plt>
    d410:	cbz	w0, d434 <PyInit__testcapi@@Base+0x4274>
    d414:	ldp	x1, x0, [sp]
    d418:	bl	8500 <PyBytes_FromStringAndSize@plt>
    d41c:	ldr	x8, [sp, #16]
    d420:	mov	x19, x0
    d424:	cbnz	x8, d438 <PyInit__testcapi@@Base+0x4278>
    d428:	ldr	x0, [sp, #8]
    d42c:	bl	83d0 <PyMem_Free@plt>
    d430:	b	d438 <PyInit__testcapi@@Base+0x4278>
    d434:	mov	x19, xzr
    d438:	mov	x0, x19
    d43c:	ldr	x19, [sp, #48]
    d440:	ldp	x29, x30, [sp, #32]
    d444:	add	sp, sp, #0x40
    d448:	ret
    d44c:	sub	sp, sp, #0x40
    d450:	stp	x29, x30, [sp, #32]
    d454:	str	x19, [sp, #48]
    d458:	add	x29, sp, #0x20
    d45c:	mov	x0, x1
    d460:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d464:	add	x1, x1, #0x9b0
    d468:	add	x2, x29, #0x18
    d46c:	sub	x3, x29, #0x8
    d470:	add	x4, sp, #0x10
    d474:	stur	xzr, [x29, #-8]
    d478:	stp	xzr, xzr, [sp, #8]
    d47c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d480:	cbz	w0, d4f4 <PyInit__testcapi@@Base+0x4334>
    d484:	ldr	x8, [sp, #16]
    d488:	cbz	x8, d4b4 <PyInit__testcapi@@Base+0x42f4>
    d48c:	ldr	x9, [x8, #16]
    d490:	cbz	x9, d49c <PyInit__testcapi@@Base+0x42dc>
    d494:	ldr	x8, [x8, #40]
    d498:	b	d4a4 <PyInit__testcapi@@Base+0x42e4>
    d49c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    d4a0:	ldr	x8, [x8, #3904]
    d4a4:	ldr	x9, [sp, #16]
    d4a8:	str	x8, [sp, #8]
    d4ac:	ldr	x8, [x9, #16]
    d4b0:	str	x8, [sp]
    d4b4:	ldr	x0, [x29, #24]
    d4b8:	ldur	x2, [x29, #-8]
    d4bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d4c0:	add	x1, x1, #0x9b9
    d4c4:	add	x3, sp, #0x8
    d4c8:	mov	x4, sp
    d4cc:	bl	8810 <_PyArg_Parse_SizeT@plt>
    d4d0:	cbz	w0, d4f4 <PyInit__testcapi@@Base+0x4334>
    d4d4:	ldp	x1, x0, [sp]
    d4d8:	bl	8500 <PyBytes_FromStringAndSize@plt>
    d4dc:	ldr	x8, [sp, #16]
    d4e0:	mov	x19, x0
    d4e4:	cbnz	x8, d4f8 <PyInit__testcapi@@Base+0x4338>
    d4e8:	ldr	x0, [sp, #8]
    d4ec:	bl	83d0 <PyMem_Free@plt>
    d4f0:	b	d4f8 <PyInit__testcapi@@Base+0x4338>
    d4f4:	mov	x19, xzr
    d4f8:	mov	x0, x19
    d4fc:	ldr	x19, [sp, #48]
    d500:	ldp	x29, x30, [sp, #32]
    d504:	add	sp, sp, #0x40
    d508:	ret
    d50c:	sub	sp, sp, #0x20
    d510:	stp	x29, x30, [sp, #16]
    d514:	add	x29, sp, #0x10
    d518:	mov	x0, x1
    d51c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d520:	add	x1, x1, #0x9bd
    d524:	add	x2, sp, #0x8
    d528:	mov	x3, sp
    d52c:	str	xzr, [sp]
    d530:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d534:	cbz	w0, d544 <PyInit__testcapi@@Base+0x4384>
    d538:	ldp	x1, x0, [sp]
    d53c:	bl	8a60 <PyCodec_IncrementalEncoder@plt>
    d540:	b	d548 <PyInit__testcapi@@Base+0x4388>
    d544:	mov	x0, xzr
    d548:	ldp	x29, x30, [sp, #16]
    d54c:	add	sp, sp, #0x20
    d550:	ret
    d554:	sub	sp, sp, #0x20
    d558:	stp	x29, x30, [sp, #16]
    d55c:	add	x29, sp, #0x10
    d560:	mov	x0, x1
    d564:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d568:	add	x1, x1, #0x9d9
    d56c:	add	x2, sp, #0x8
    d570:	mov	x3, sp
    d574:	str	xzr, [sp]
    d578:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d57c:	cbz	w0, d58c <PyInit__testcapi@@Base+0x43cc>
    d580:	ldp	x1, x0, [sp]
    d584:	bl	88b0 <PyCodec_IncrementalDecoder@plt>
    d588:	b	d590 <PyInit__testcapi@@Base+0x43d0>
    d58c:	mov	x0, xzr
    d590:	ldp	x29, x30, [sp, #16]
    d594:	add	sp, sp, #0x20
    d598:	ret
    d59c:	stp	x29, x30, [sp, #-32]!
    d5a0:	str	x19, [sp, #16]
    d5a4:	mov	x29, sp
    d5a8:	mov	w0, #0x1                   	// #1
    d5ac:	bl	8920 <PyTuple_New@plt>
    d5b0:	mov	x19, x0
    d5b4:	cbz	x0, d62c <PyInit__testcapi@@Base+0x446c>
    d5b8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d5bc:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    d5c0:	add	x0, x0, #0x9f5
    d5c4:	add	x2, x2, #0x9fa
    d5c8:	mov	w1, #0x4                   	// #4
    d5cc:	mov	x3, xzr
    d5d0:	bl	8e50 <PyUnicode_Decode@plt>
    d5d4:	cbz	x0, d628 <PyInit__testcapi@@Base+0x4468>
    d5d8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d5dc:	str	x0, [x19, #24]
    d5e0:	add	x1, x1, #0xa02
    d5e4:	add	x2, x29, #0x18
    d5e8:	mov	x0, x19
    d5ec:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d5f0:	cbz	w0, d628 <PyInit__testcapi@@Base+0x4468>
    d5f4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d5f8:	add	x1, x1, #0xa11
    d5fc:	add	x2, x29, #0x18
    d600:	mov	x0, x19
    d604:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d608:	cbz	w0, d628 <PyInit__testcapi@@Base+0x4468>
    d60c:	mov	x0, x19
    d610:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    d614:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    d618:	ldr	x19, [x19, #4016]
    d61c:	mov	x0, x19
    d620:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    d624:	b	d62c <PyInit__testcapi@@Base+0x446c>
    d628:	mov	x19, xzr
    d62c:	mov	x0, x19
    d630:	ldr	x19, [sp, #16]
    d634:	ldp	x29, x30, [sp], #32
    d638:	ret
    d63c:	sub	sp, sp, #0x40
    d640:	stp	x29, x30, [sp, #16]
    d644:	str	x21, [sp, #32]
    d648:	stp	x20, x19, [sp, #48]
    d64c:	add	x29, sp, #0x10
    d650:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    d654:	ldr	x8, [x8, #3880]
    d658:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
    d65c:	mov	w0, #0x1                   	// #1
    d660:	ldrb	w8, [x8, #25]
    d664:	str	w8, [x9, #3820]
    d668:	bl	8920 <PyTuple_New@plt>
    d66c:	mov	x19, x0
    d670:	cbz	x0, d798 <PyInit__testcapi@@Base+0x45d8>
    d674:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d678:	adrp	x2, 12000 <PyInit__testcapi@@Base+0x8e40>
    d67c:	add	x0, x0, #0xa20
    d680:	add	x2, x2, #0xd71
    d684:	mov	w1, #0x4                   	// #4
    d688:	mov	x3, xzr
    d68c:	bl	8e50 <PyUnicode_Decode@plt>
    d690:	cbz	x0, d794 <PyInit__testcapi@@Base+0x45d4>
    d694:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d698:	mov	x20, x0
    d69c:	str	x0, [x19, #24]
    d6a0:	add	x1, x1, #0xa25
    d6a4:	add	x2, x29, #0x18
    d6a8:	mov	x0, x19
    d6ac:	str	xzr, [x29, #24]
    d6b0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d6b4:	cbz	w0, d794 <PyInit__testcapi@@Base+0x45d4>
    d6b8:	ldr	x0, [x20, #40]
    d6bc:	ldr	x21, [x29, #24]
    d6c0:	cbz	x0, d6e0 <PyInit__testcapi@@Base+0x4520>
    d6c4:	cmp	x21, x0
    d6c8:	b.eq	d6f0 <PyInit__testcapi@@Base+0x4530>  // b.none
    d6cc:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d6d0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d6d4:	add	x0, x0, #0xa5e
    d6d8:	add	x1, x1, #0xa33
    d6dc:	b	d790 <PyInit__testcapi@@Base+0x45d0>
    d6e0:	mov	x0, x20
    d6e4:	bl	8910 <PyUnicode_AsUnicode@plt>
    d6e8:	cmp	x21, x0
    d6ec:	b.ne	d6cc <PyInit__testcapi@@Base+0x450c>  // b.any
    d6f0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d6f4:	add	x1, x1, #0xa5b
    d6f8:	add	x2, x29, #0x18
    d6fc:	add	x3, sp, #0x8
    d700:	mov	x0, x19
    d704:	str	xzr, [x29, #24]
    d708:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d70c:	cbz	w0, d794 <PyInit__testcapi@@Base+0x45d4>
    d710:	ldr	x0, [x20, #40]
    d714:	ldr	x21, [x29, #24]
    d718:	cbnz	x0, d724 <PyInit__testcapi@@Base+0x4564>
    d71c:	mov	x0, x20
    d720:	bl	8910 <PyUnicode_AsUnicode@plt>
    d724:	cmp	x21, x0
    d728:	b.ne	d780 <PyInit__testcapi@@Base+0x45c0>  // b.any
    d72c:	ldr	x8, [x20, #40]
    d730:	ldr	x21, [sp, #8]
    d734:	cbnz	x8, d740 <PyInit__testcapi@@Base+0x4580>
    d738:	mov	x0, x20
    d73c:	bl	8910 <PyUnicode_AsUnicode@plt>
    d740:	ldr	w8, [x20, #32]
    d744:	mov	w9, #0x60                  	// #96
    d748:	mov	w10, #0x40                  	// #64
    d74c:	bics	wzr, w9, w8
    d750:	mov	w8, #0x10                  	// #16
    d754:	csel	x8, x8, x10, eq  // eq = none
    d758:	ldr	x8, [x20, x8]
    d75c:	cmp	x21, x8
    d760:	b.ne	d780 <PyInit__testcapi@@Base+0x45c0>  // b.any
    d764:	mov	x0, x19
    d768:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    d76c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    d770:	ldr	x19, [x19, #4016]
    d774:	mov	x0, x19
    d778:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    d77c:	b	d798 <PyInit__testcapi@@Base+0x45d8>
    d780:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d784:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d788:	add	x0, x0, #0xa5e
    d78c:	add	x1, x1, #0xa6a
    d790:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    d794:	mov	x19, xzr
    d798:	mov	x0, x19
    d79c:	ldp	x20, x19, [sp, #48]
    d7a0:	ldr	x21, [sp, #32]
    d7a4:	ldp	x29, x30, [sp, #16]
    d7a8:	add	sp, sp, #0x40
    d7ac:	ret
    d7b0:	sub	sp, sp, #0x50
    d7b4:	stp	x29, x30, [sp, #32]
    d7b8:	str	x21, [sp, #48]
    d7bc:	stp	x20, x19, [sp, #64]
    d7c0:	add	x29, sp, #0x20
    d7c4:	mov	w0, #0x2                   	// #2
    d7c8:	bl	8920 <PyTuple_New@plt>
    d7cc:	mov	x19, x0
    d7d0:	cbz	x0, d960 <PyInit__testcapi@@Base+0x47a0>
    d7d4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d7d8:	add	x0, x0, #0xa20
    d7dc:	bl	8d10 <PyUnicode_FromString@plt>
    d7e0:	str	x0, [x19, #24]
    d7e4:	adrp	x21, 25000 <PyInit__testcapi@@Base+0x1be40>
    d7e8:	ldr	x21, [x21, #4016]
    d7ec:	mov	x20, x0
    d7f0:	mov	x0, x21
    d7f4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    d7f8:	str	x21, [x19, #32]
    d7fc:	str	xzr, [x29, #24]
    d800:	ldr	x0, [x20, #40]
    d804:	cbnz	x0, d810 <PyInit__testcapi@@Base+0x4650>
    d808:	mov	x0, x20
    d80c:	bl	8910 <PyUnicode_AsUnicode@plt>
    d810:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d814:	stur	x0, [x29, #-8]
    d818:	add	x1, x1, #0xa94
    d81c:	add	x2, x29, #0x18
    d820:	sub	x3, x29, #0x8
    d824:	mov	x0, x19
    d828:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d82c:	cbz	w0, d95c <PyInit__testcapi@@Base+0x479c>
    d830:	ldr	x0, [x20, #40]
    d834:	ldr	x21, [x29, #24]
    d838:	cbz	x0, d858 <PyInit__testcapi@@Base+0x4698>
    d83c:	cmp	x21, x0
    d840:	b.eq	d868 <PyInit__testcapi@@Base+0x46a8>  // b.none
    d844:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d848:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d84c:	add	x0, x0, #0xaf4
    d850:	add	x1, x1, #0xaa3
    d854:	b	d958 <PyInit__testcapi@@Base+0x4798>
    d858:	mov	x0, x20
    d85c:	bl	8910 <PyUnicode_AsUnicode@plt>
    d860:	cmp	x21, x0
    d864:	b.ne	d844 <PyInit__testcapi@@Base+0x4684>  // b.any
    d868:	ldur	x8, [x29, #-8]
    d86c:	cbz	x8, d884 <PyInit__testcapi@@Base+0x46c4>
    d870:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d874:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d878:	add	x0, x0, #0xaf4
    d87c:	add	x1, x1, #0xaca
    d880:	b	d958 <PyInit__testcapi@@Base+0x4798>
    d884:	str	xzr, [x29, #24]
    d888:	ldr	x0, [x20, #40]
    d88c:	cbnz	x0, d898 <PyInit__testcapi@@Base+0x46d8>
    d890:	mov	x0, x20
    d894:	bl	8910 <PyUnicode_AsUnicode@plt>
    d898:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d89c:	stur	x0, [x29, #-8]
    d8a0:	mov	x8, #0xffffffffffffffff    	// #-1
    d8a4:	add	x1, x1, #0xaef
    d8a8:	add	x2, x29, #0x18
    d8ac:	add	x3, sp, #0x10
    d8b0:	sub	x4, x29, #0x8
    d8b4:	add	x5, sp, #0x8
    d8b8:	mov	x0, x19
    d8bc:	stp	x8, x8, [sp, #8]
    d8c0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    d8c4:	cbz	w0, d95c <PyInit__testcapi@@Base+0x479c>
    d8c8:	ldr	x0, [x20, #40]
    d8cc:	ldr	x21, [x29, #24]
    d8d0:	cbnz	x0, d8dc <PyInit__testcapi@@Base+0x471c>
    d8d4:	mov	x0, x20
    d8d8:	bl	8910 <PyUnicode_AsUnicode@plt>
    d8dc:	cmp	x21, x0
    d8e0:	b.ne	d948 <PyInit__testcapi@@Base+0x4788>  // b.any
    d8e4:	ldr	x8, [x20, #40]
    d8e8:	ldr	x21, [sp, #16]
    d8ec:	cbnz	x8, d8f8 <PyInit__testcapi@@Base+0x4738>
    d8f0:	mov	x0, x20
    d8f4:	bl	8910 <PyUnicode_AsUnicode@plt>
    d8f8:	ldr	w8, [x20, #32]
    d8fc:	mov	w9, #0x60                  	// #96
    d900:	mov	w10, #0x40                  	// #64
    d904:	bics	wzr, w9, w8
    d908:	mov	w8, #0x10                  	// #16
    d90c:	csel	x8, x8, x10, eq  // eq = none
    d910:	ldr	x8, [x20, x8]
    d914:	cmp	x21, x8
    d918:	b.ne	d948 <PyInit__testcapi@@Base+0x4788>  // b.any
    d91c:	ldur	x8, [x29, #-8]
    d920:	cbnz	x8, d978 <PyInit__testcapi@@Base+0x47b8>
    d924:	ldr	x8, [sp, #8]
    d928:	cbnz	x8, d978 <PyInit__testcapi@@Base+0x47b8>
    d92c:	mov	x0, x19
    d930:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    d934:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    d938:	ldr	x19, [x19, #4016]
    d93c:	mov	x0, x19
    d940:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    d944:	b	d960 <PyInit__testcapi@@Base+0x47a0>
    d948:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d94c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d950:	add	x0, x0, #0xaf4
    d954:	add	x1, x1, #0xb00
    d958:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    d95c:	mov	x19, xzr
    d960:	mov	x0, x19
    d964:	ldp	x20, x19, [sp, #64]
    d968:	ldr	x21, [sp, #48]
    d96c:	ldp	x29, x30, [sp, #32]
    d970:	add	sp, sp, #0x50
    d974:	ret
    d978:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d97c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    d980:	add	x0, x0, #0xaf4
    d984:	add	x1, x1, #0xb29
    d988:	b	d958 <PyInit__testcapi@@Base+0x4798>
    d98c:	sub	sp, sp, #0x40
    d990:	stp	x29, x30, [sp, #16]
    d994:	str	x21, [sp, #32]
    d998:	stp	x20, x19, [sp, #48]
    d99c:	add	x29, sp, #0x10
    d9a0:	mov	w8, #0xabcd                	// #43981
    d9a4:	movk	w8, #0x10, lsl #16
    d9a8:	mov	w9, #0x110000              	// #1114112
    d9ac:	add	x0, x29, #0x18
    d9b0:	mov	w1, #0x1                   	// #1
    d9b4:	str	x8, [x29, #24]
    d9b8:	stur	w9, [x29, #-4]
    d9bc:	bl	8400 <PyUnicode_FromWideChar@plt>
    d9c0:	mov	x19, x0
    d9c4:	cbz	x0, da60 <PyInit__testcapi@@Base+0x48a0>
    d9c8:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    d9cc:	add	x0, x0, #0xb51
    d9d0:	bl	8d10 <PyUnicode_FromString@plt>
    d9d4:	cbz	x0, da2c <PyInit__testcapi@@Base+0x486c>
    d9d8:	ldr	x8, [x19, #16]
    d9dc:	ldr	x9, [x0, #16]
    d9e0:	mov	x20, x0
    d9e4:	cmp	x8, x9
    d9e8:	b.ne	da38 <PyInit__testcapi@@Base+0x4878>  // b.any
    d9ec:	mov	x0, x19
    d9f0:	mov	x1, x20
    d9f4:	bl	8b30 <PyUnicode_Compare@plt>
    d9f8:	mov	w21, w0
    d9fc:	mov	x0, x19
    da00:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    da04:	mov	x0, x20
    da08:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    da0c:	cbz	w21, da78 <PyInit__testcapi@@Base+0x48b8>
    da10:	bl	8980 <PyErr_Occurred@plt>
    da14:	cbnz	x0, da5c <PyInit__testcapi@@Base+0x489c>
    da18:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    da1c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    da20:	add	x0, x0, #0x67
    da24:	add	x1, x1, #0xb88
    da28:	b	da58 <PyInit__testcapi@@Base+0x4898>
    da2c:	mov	x0, x19
    da30:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    da34:	b	da5c <PyInit__testcapi@@Base+0x489c>
    da38:	mov	x0, x19
    da3c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    da40:	mov	x0, x20
    da44:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    da48:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    da4c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    da50:	add	x0, x0, #0x67
    da54:	add	x1, x1, #0xb56
    da58:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    da5c:	mov	x19, xzr
    da60:	mov	x0, x19
    da64:	ldp	x20, x19, [sp, #48]
    da68:	ldr	x21, [sp, #32]
    da6c:	ldp	x29, x30, [sp, #16]
    da70:	add	sp, sp, #0x40
    da74:	ret
    da78:	sub	x0, x29, #0x4
    da7c:	mov	w1, #0x1                   	// #1
    da80:	bl	8400 <PyUnicode_FromWideChar@plt>
    da84:	cbz	x0, da9c <PyInit__testcapi@@Base+0x48dc>
    da88:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    da8c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    da90:	add	x0, x0, #0x67
    da94:	add	x1, x1, #0xbb2
    da98:	b	da58 <PyInit__testcapi@@Base+0x4898>
    da9c:	bl	88c0 <PyErr_Clear@plt>
    daa0:	sub	x0, x29, #0x4
    daa4:	mov	w1, #0x1                   	// #1
    daa8:	bl	8890 <PyUnicode_FromUnicode@plt>
    daac:	cbz	x0, dac4 <PyInit__testcapi@@Base+0x4904>
    dab0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    dab4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    dab8:	add	x0, x0, #0x67
    dabc:	add	x1, x1, #0xbe7
    dac0:	b	da58 <PyInit__testcapi@@Base+0x4898>
    dac4:	bl	88c0 <PyErr_Clear@plt>
    dac8:	mov	w1, #0x1                   	// #1
    dacc:	mov	x0, xzr
    dad0:	bl	8890 <PyUnicode_FromUnicode@plt>
    dad4:	mov	x19, x0
    dad8:	cbz	x0, da60 <PyInit__testcapi@@Base+0x48a0>
    dadc:	ldr	x0, [x19, #40]
    dae0:	ldur	w20, [x29, #-4]
    dae4:	cbnz	x0, daf0 <PyInit__testcapi@@Base+0x4930>
    dae8:	mov	x0, x19
    daec:	bl	8910 <PyUnicode_AsUnicode@plt>
    daf0:	str	w20, [x0]
    daf4:	mov	x0, x19
    daf8:	bl	82c0 <_PyUnicode_Ready@plt>
    dafc:	mov	w20, w0
    db00:	mov	x0, x19
    db04:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    db08:	tbnz	w20, #31, db20 <PyInit__testcapi@@Base+0x4960>
    db0c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    db10:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    db14:	add	x0, x0, #0x67
    db18:	add	x1, x1, #0xc1b
    db1c:	b	da58 <PyInit__testcapi@@Base+0x4898>
    db20:	bl	88c0 <PyErr_Clear@plt>
    db24:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    db28:	ldr	x19, [x19, #4016]
    db2c:	mov	x0, x19
    db30:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    db34:	b	da60 <PyInit__testcapi@@Base+0x48a0>
    db38:	sub	sp, sp, #0x40
    db3c:	stp	x29, x30, [sp, #16]
    db40:	str	x21, [sp, #32]
    db44:	stp	x20, x19, [sp, #48]
    db48:	add	x29, sp, #0x10
    db4c:	mov	x0, x1
    db50:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    db54:	add	x1, x1, #0xc39
    db58:	add	x2, x29, #0x18
    db5c:	add	x3, sp, #0x8
    db60:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    db64:	cbz	w0, dbf8 <PyInit__testcapi@@Base+0x4a38>
    db68:	ldr	x8, [sp, #8]
    db6c:	lsr	x9, x8, #61
    db70:	cbz	x9, dbd8 <PyInit__testcapi@@Base+0x4a18>
    db74:	mov	x19, xzr
    db78:	cbz	x19, dbe8 <PyInit__testcapi@@Base+0x4a28>
    db7c:	ldr	x0, [x29, #24]
    db80:	ldr	x2, [sp, #8]
    db84:	mov	x1, x19
    db88:	bl	82d0 <PyUnicode_AsWideChar@plt>
    db8c:	cmn	x0, #0x1
    db90:	b.eq	dbf0 <PyInit__testcapi@@Base+0x4a30>  // b.none
    db94:	ldr	x8, [sp, #8]
    db98:	mov	x20, x0
    db9c:	cmp	x0, x8
    dba0:	cinc	x1, x0, lt  // lt = tstop
    dba4:	mov	x0, x19
    dba8:	str	x1, [sp, #8]
    dbac:	bl	8400 <PyUnicode_FromWideChar@plt>
    dbb0:	mov	x21, x0
    dbb4:	mov	x0, x19
    dbb8:	bl	83d0 <PyMem_Free@plt>
    dbbc:	cbz	x21, dbf8 <PyInit__testcapi@@Base+0x4a38>
    dbc0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    dbc4:	add	x0, x0, #0xc3c
    dbc8:	mov	x1, x21
    dbcc:	mov	x2, x20
    dbd0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    dbd4:	b	dbfc <PyInit__testcapi@@Base+0x4a3c>
    dbd8:	lsl	x0, x8, #2
    dbdc:	bl	8fc0 <PyMem_Malloc@plt>
    dbe0:	mov	x19, x0
    dbe4:	cbnz	x19, db7c <PyInit__testcapi@@Base+0x49bc>
    dbe8:	bl	8570 <PyErr_NoMemory@plt>
    dbec:	b	dbfc <PyInit__testcapi@@Base+0x4a3c>
    dbf0:	mov	x0, x19
    dbf4:	bl	83d0 <PyMem_Free@plt>
    dbf8:	mov	x0, xzr
    dbfc:	ldp	x20, x19, [sp, #48]
    dc00:	ldr	x21, [sp, #32]
    dc04:	ldp	x29, x30, [sp, #16]
    dc08:	add	sp, sp, #0x40
    dc0c:	ret
    dc10:	sub	sp, sp, #0x30
    dc14:	stp	x29, x30, [sp, #16]
    dc18:	stp	x20, x19, [sp, #32]
    dc1c:	add	x29, sp, #0x10
    dc20:	mov	x0, x1
    dc24:	adrp	x1, 12000 <PyInit__testcapi@@Base+0x8e40>
    dc28:	add	x1, x1, #0xf33
    dc2c:	add	x2, sp, #0x8
    dc30:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    dc34:	cbz	w0, dc80 <PyInit__testcapi@@Base+0x4ac0>
    dc38:	ldr	x0, [sp, #8]
    dc3c:	mov	x1, sp
    dc40:	bl	8c70 <PyUnicode_AsWideCharString@plt>
    dc44:	cbz	x0, dc84 <PyInit__testcapi@@Base+0x4ac4>
    dc48:	ldr	x8, [sp]
    dc4c:	mov	x19, x0
    dc50:	add	x1, x8, #0x1
    dc54:	bl	8400 <PyUnicode_FromWideChar@plt>
    dc58:	mov	x20, x0
    dc5c:	mov	x0, x19
    dc60:	bl	83d0 <PyMem_Free@plt>
    dc64:	cbz	x20, dc80 <PyInit__testcapi@@Base+0x4ac0>
    dc68:	ldr	x2, [sp]
    dc6c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    dc70:	add	x0, x0, #0xc3c
    dc74:	mov	x1, x20
    dc78:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    dc7c:	b	dc84 <PyInit__testcapi@@Base+0x4ac4>
    dc80:	mov	x0, xzr
    dc84:	ldp	x20, x19, [sp, #32]
    dc88:	ldp	x29, x30, [sp, #16]
    dc8c:	add	sp, sp, #0x30
    dc90:	ret
    dc94:	sub	sp, sp, #0x40
    dc98:	stp	x29, x30, [sp, #16]
    dc9c:	str	x21, [sp, #32]
    dca0:	stp	x20, x19, [sp, #48]
    dca4:	add	x29, sp, #0x10
    dca8:	mov	x0, x1
    dcac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    dcb0:	add	x1, x1, #0xc41
    dcb4:	add	x2, x29, #0x18
    dcb8:	mov	x3, sp
    dcbc:	sub	x4, x29, #0x4
    dcc0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    dcc4:	cbz	w0, dd5c <PyInit__testcapi@@Base+0x4b9c>
    dcc8:	ldr	x8, [sp]
    dccc:	add	x19, x8, #0x1
    dcd0:	lsr	x8, x19, #61
    dcd4:	lsl	x21, x19, #2
    dcd8:	cbz	x8, dd38 <PyInit__testcapi@@Base+0x4b78>
    dcdc:	mov	x20, xzr
    dce0:	cbz	x20, dd48 <PyInit__testcapi@@Base+0x4b88>
    dce4:	mov	x0, x20
    dce8:	mov	w1, wzr
    dcec:	mov	x2, x21
    dcf0:	bl	8770 <memset@plt>
    dcf4:	ldr	x8, [sp]
    dcf8:	mov	w9, #0xffff                	// #65535
    dcfc:	mov	x1, x20
    dd00:	mov	x2, x19
    dd04:	str	w9, [x20, x8, lsl #2]
    dd08:	ldr	x0, [x29, #24]
    dd0c:	ldur	w3, [x29, #-4]
    dd10:	bl	8a00 <PyUnicode_AsUCS4@plt>
    dd14:	cbz	x0, dd54 <PyInit__testcapi@@Base+0x4b94>
    dd18:	mov	w0, #0x4                   	// #4
    dd1c:	mov	x1, x20
    dd20:	mov	x2, x19
    dd24:	bl	8bf0 <PyUnicode_FromKindAndData@plt>
    dd28:	mov	x19, x0
    dd2c:	mov	x0, x20
    dd30:	bl	83d0 <PyMem_Free@plt>
    dd34:	b	dd60 <PyInit__testcapi@@Base+0x4ba0>
    dd38:	mov	x0, x21
    dd3c:	bl	8fc0 <PyMem_Malloc@plt>
    dd40:	mov	x20, x0
    dd44:	cbnz	x20, dce4 <PyInit__testcapi@@Base+0x4b24>
    dd48:	bl	8570 <PyErr_NoMemory@plt>
    dd4c:	mov	x19, x0
    dd50:	b	dd60 <PyInit__testcapi@@Base+0x4ba0>
    dd54:	mov	x0, x20
    dd58:	bl	83d0 <PyMem_Free@plt>
    dd5c:	mov	x19, xzr
    dd60:	mov	x0, x19
    dd64:	ldp	x20, x19, [sp, #48]
    dd68:	ldr	x21, [sp, #32]
    dd6c:	ldp	x29, x30, [sp, #16]
    dd70:	add	sp, sp, #0x40
    dd74:	ret
    dd78:	sub	sp, sp, #0x30
    dd7c:	stp	x29, x30, [sp, #32]
    dd80:	add	x29, sp, #0x20
    dd84:	mov	x0, x1
    dd88:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    dd8c:	add	x1, x1, #0xc54
    dd90:	sub	x2, x29, #0x8
    dd94:	add	x3, sp, #0x10
    dd98:	add	x4, sp, #0x8
    dd9c:	mov	x5, sp
    dda0:	sub	x6, x29, #0xc
    dda4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    dda8:	cbz	w0, ddc8 <PyInit__testcapi@@Base+0x4c08>
    ddac:	ldur	x0, [x29, #-8]
    ddb0:	ldr	w1, [sp, #16]
    ddb4:	ldp	x3, x2, [sp]
    ddb8:	ldur	w4, [x29, #-12]
    ddbc:	bl	8fb0 <PyUnicode_FindChar@plt>
    ddc0:	cmn	x0, #0x2
    ddc4:	b.ne	ddd0 <PyInit__testcapi@@Base+0x4c10>  // b.any
    ddc8:	mov	x0, xzr
    ddcc:	b	ddd4 <PyInit__testcapi@@Base+0x4c14>
    ddd0:	bl	87f0 <PyLong_FromSsize_t@plt>
    ddd4:	ldp	x29, x30, [sp, #32]
    ddd8:	add	sp, sp, #0x30
    dddc:	ret
    dde0:	sub	sp, sp, #0x40
    dde4:	stp	x29, x30, [sp, #32]
    dde8:	str	x19, [sp, #48]
    ddec:	add	x29, sp, #0x20
    ddf0:	mov	x0, x1
    ddf4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ddf8:	add	x1, x1, #0xc6b
    ddfc:	sub	x2, x29, #0x8
    de00:	add	x3, sp, #0x8
    de04:	add	x4, x29, #0x18
    de08:	add	x5, sp, #0x10
    de0c:	mov	x6, sp
    de10:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    de14:	cbz	w0, debc <PyInit__testcapi@@Base+0x4cfc>
    de18:	ldur	x9, [x29, #-8]
    de1c:	ldr	w8, [x9, #32]
    de20:	ldr	x0, [x9, #16]
    de24:	tbnz	w8, #6, de44 <PyInit__testcapi@@Base+0x4c84>
    de28:	ubfx	w8, w8, #2, #3
    de2c:	cmp	w8, #0x1
    de30:	b.ne	de54 <PyInit__testcapi@@Base+0x4c94>  // b.any
    de34:	mov	w1, #0xff                  	// #255
    de38:	bl	9010 <PyUnicode_New@plt>
    de3c:	cbnz	x0, de6c <PyInit__testcapi@@Base+0x4cac>
    de40:	b	dec0 <PyInit__testcapi@@Base+0x4d00>
    de44:	mov	w1, #0x7f                  	// #127
    de48:	bl	9010 <PyUnicode_New@plt>
    de4c:	cbnz	x0, de6c <PyInit__testcapi@@Base+0x4cac>
    de50:	b	dec0 <PyInit__testcapi@@Base+0x4d00>
    de54:	cmp	w8, #0x2
    de58:	mov	w8, #0x10ffff              	// #1114111
    de5c:	mov	w9, #0xffff                	// #65535
    de60:	csel	w1, w9, w8, eq  // eq = none
    de64:	bl	9010 <PyUnicode_New@plt>
    de68:	cbz	x0, dec0 <PyInit__testcapi@@Base+0x4d00>
    de6c:	ldr	x2, [x0, #16]
    de70:	mov	x1, xzr
    de74:	mov	w3, wzr
    de78:	mov	x19, x0
    de7c:	bl	8c90 <PyUnicode_Fill@plt>
    de80:	tbnz	x0, #63, deb4 <PyInit__testcapi@@Base+0x4cf4>
    de84:	ldp	x1, x3, [sp, #8]
    de88:	ldr	x2, [x29, #24]
    de8c:	ldr	x4, [sp]
    de90:	mov	x0, x19
    de94:	bl	8630 <PyUnicode_CopyCharacters@plt>
    de98:	tbnz	x0, #63, deb4 <PyInit__testcapi@@Base+0x4cf4>
    de9c:	mov	x2, x0
    dea0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    dea4:	add	x0, x0, #0xc3c
    dea8:	mov	x1, x19
    deac:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    deb0:	b	dec0 <PyInit__testcapi@@Base+0x4d00>
    deb4:	mov	x0, x19
    deb8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    debc:	mov	x0, xzr
    dec0:	ldr	x19, [sp, #48]
    dec4:	ldp	x29, x30, [sp, #32]
    dec8:	add	sp, sp, #0x40
    decc:	ret
    ded0:	sub	sp, sp, #0x30
    ded4:	stp	x29, x30, [sp, #32]
    ded8:	add	x29, sp, #0x20
    dedc:	mov	x0, x1
    dee0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    dee4:	add	x1, x1, #0xc88
    dee8:	sub	x2, x29, #0x8
    deec:	add	x3, sp, #0x10
    def0:	add	x4, sp, #0x8
    def4:	str	xzr, [sp, #8]
    def8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    defc:	cbz	w0, df64 <PyInit__testcapi@@Base+0x4da4>
    df00:	ldr	x8, [sp, #16]
    df04:	mov	x0, xzr
    df08:	lsl	x9, x8, #3
    df0c:	sub	x1, x9, x8
    df10:	bl	8500 <PyBytes_FromStringAndSize@plt>
    df14:	str	x0, [sp]
    df18:	cbz	x0, df68 <PyInit__testcapi@@Base+0x4da8>
    df1c:	ldur	x8, [x29, #-8]
    df20:	ldp	x3, x1, [sp, #8]
    df24:	add	x2, x0, #0x20
    df28:	mov	x0, x8
    df2c:	bl	8af0 <PyUnicode_EncodeDecimal@plt>
    df30:	ldr	x8, [sp]
    df34:	tbnz	w0, #31, df5c <PyInit__testcapi@@Base+0x4d9c>
    df38:	add	x0, x8, #0x20
    df3c:	bl	8300 <strlen@plt>
    df40:	mov	x1, x0
    df44:	mov	x0, sp
    df48:	bl	8370 <_PyBytes_Resize@plt>
    df4c:	ldr	x8, [sp]
    df50:	cmp	w0, #0x0
    df54:	csel	x0, xzr, x8, lt  // lt = tstop
    df58:	b	df68 <PyInit__testcapi@@Base+0x4da8>
    df5c:	mov	x0, x8
    df60:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    df64:	mov	x0, xzr
    df68:	ldp	x29, x30, [sp, #32]
    df6c:	add	sp, sp, #0x30
    df70:	ret
    df74:	sub	sp, sp, #0x20
    df78:	stp	x29, x30, [sp, #16]
    df7c:	add	x29, sp, #0x10
    df80:	mov	x0, x1
    df84:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    df88:	add	x1, x1, #0xc88
    df8c:	add	x2, sp, #0x8
    df90:	mov	x3, sp
    df94:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    df98:	cbz	w0, dfa8 <PyInit__testcapi@@Base+0x4de8>
    df9c:	ldp	x1, x0, [sp]
    dfa0:	bl	9020 <PyUnicode_TransformDecimalToASCII@plt>
    dfa4:	b	dfac <PyInit__testcapi@@Base+0x4dec>
    dfa8:	mov	x0, xzr
    dfac:	ldp	x29, x30, [sp, #16]
    dfb0:	add	sp, sp, #0x20
    dfb4:	ret
    dfb8:	sub	sp, sp, #0x30
    dfbc:	stp	x29, x30, [sp, #16]
    dfc0:	str	x19, [sp, #32]
    dfc4:	add	x29, sp, #0x10
    dfc8:	mov	x0, x1
    dfcc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    dfd0:	add	x1, x1, #0x994
    dfd4:	add	x2, x29, #0x18
    dfd8:	add	x3, sp, #0x8
    dfdc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    dfe0:	cbz	w0, e01c <PyInit__testcapi@@Base+0x4e5c>
    dfe4:	ldr	x1, [sp, #8]
    dfe8:	mov	x0, xzr
    dfec:	bl	8890 <PyUnicode_FromUnicode@plt>
    dff0:	mov	x19, x0
    dff4:	cbz	x0, e020 <PyInit__testcapi@@Base+0x4e60>
    dff8:	ldr	x0, [x19, #40]
    dffc:	cbnz	x0, e008 <PyInit__testcapi@@Base+0x4e48>
    e000:	mov	x0, x19
    e004:	bl	8910 <PyUnicode_AsUnicode@plt>
    e008:	ldr	x8, [sp, #8]
    e00c:	ldr	x1, [x29, #24]
    e010:	lsl	x2, x8, #2
    e014:	bl	8250 <memcpy@plt>
    e018:	b	e020 <PyInit__testcapi@@Base+0x4e60>
    e01c:	mov	x19, xzr
    e020:	mov	x0, x19
    e024:	ldr	x19, [sp, #32]
    e028:	ldp	x29, x30, [sp, #16]
    e02c:	add	sp, sp, #0x30
    e030:	ret
    e034:	stp	x29, x30, [sp, #-64]!
    e038:	str	x23, [sp, #16]
    e03c:	stp	x22, x21, [sp, #32]
    e040:	stp	x20, x19, [sp, #48]
    e044:	mov	x29, sp
    e048:	mov	x0, x1
    e04c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e050:	add	x1, x1, #0xc8d
    e054:	add	x2, x29, #0x18
    e058:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e05c:	cbz	w0, e15c <PyInit__testcapi@@Base+0x4f9c>
    e060:	ldr	x0, [x29, #24]
    e064:	bl	8c30 <PyCallable_Check@plt>
    e068:	cbz	w0, e138 <PyInit__testcapi@@Base+0x4f78>
    e06c:	bl	8f70 <PyEval_InitThreads@plt>
    e070:	bl	8ad0 <PyThread_allocate_lock@plt>
    e074:	adrp	x22, 29000 <PyInit__testcapi@@Base+0x1fe40>
    e078:	str	x0, [x22, #3824]
    e07c:	cbz	x0, e178 <PyInit__testcapi@@Base+0x4fb8>
    e080:	mov	w1, #0x1                   	// #1
    e084:	bl	85e0 <PyThread_acquire_lock@plt>
    e088:	ldr	x1, [x29, #24]
    e08c:	adrp	x19, 10000 <PyInit__testcapi@@Base+0x6e40>
    e090:	add	x19, x19, #0xf6c
    e094:	mov	x0, x19
    e098:	bl	8460 <PyThread_start_new_thread@plt>
    e09c:	ldr	x0, [x29, #24]
    e0a0:	bl	10f8c <PyInit__testcapi@@Base+0x7dcc>
    e0a4:	mov	w20, w0
    e0a8:	bl	8d50 <PyEval_SaveThread@plt>
    e0ac:	ldr	x8, [x29, #24]
    e0b0:	mov	x21, x0
    e0b4:	mov	x0, x8
    e0b8:	bl	10f8c <PyInit__testcapi@@Base+0x7dcc>
    e0bc:	ldr	x8, [x22, #3824]
    e0c0:	and	w23, w20, w0
    e0c4:	mov	w1, #0x1                   	// #1
    e0c8:	mov	x0, x8
    e0cc:	bl	85e0 <PyThread_acquire_lock@plt>
    e0d0:	mov	x0, x21
    e0d4:	bl	83b0 <PyEval_RestoreThread@plt>
    e0d8:	bl	8d50 <PyEval_SaveThread@plt>
    e0dc:	ldr	x1, [x29, #24]
    e0e0:	mov	x20, x0
    e0e4:	mov	x0, x19
    e0e8:	bl	8460 <PyThread_start_new_thread@plt>
    e0ec:	ldr	x0, [x29, #24]
    e0f0:	bl	10f8c <PyInit__testcapi@@Base+0x7dcc>
    e0f4:	ldr	x8, [x22, #3824]
    e0f8:	and	w19, w23, w0
    e0fc:	mov	w1, #0x1                   	// #1
    e100:	mov	x0, x8
    e104:	bl	85e0 <PyThread_acquire_lock@plt>
    e108:	mov	x0, x20
    e10c:	bl	83b0 <PyEval_RestoreThread@plt>
    e110:	ldr	x0, [x22, #3824]
    e114:	bl	8b90 <PyThread_release_lock@plt>
    e118:	ldr	x0, [x22, #3824]
    e11c:	bl	9030 <PyThread_free_lock@plt>
    e120:	tbz	w19, #0, e15c <PyInit__testcapi@@Base+0x4f9c>
    e124:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    e128:	ldr	x19, [x19, #4016]
    e12c:	mov	x0, x19
    e130:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e134:	b	e160 <PyInit__testcapi@@Base+0x4fa0>
    e138:	ldr	x8, [x29, #24]
    e13c:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    e140:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e144:	add	x1, x1, #0xca1
    e148:	ldr	x8, [x8, #8]
    e14c:	ldr	x9, [x9, #3952]
    e150:	ldr	x2, [x8, #24]
    e154:	ldr	x0, [x9]
    e158:	bl	8e60 <PyErr_Format@plt>
    e15c:	mov	x19, xzr
    e160:	mov	x0, x19
    e164:	ldp	x20, x19, [sp, #48]
    e168:	ldp	x22, x21, [sp, #32]
    e16c:	ldr	x23, [sp, #16]
    e170:	ldp	x29, x30, [sp], #64
    e174:	ret
    e178:	bl	8570 <PyErr_NoMemory@plt>
    e17c:	mov	x19, x0
    e180:	b	e160 <PyInit__testcapi@@Base+0x4fa0>
    e184:	sub	sp, sp, #0x30
    e188:	stp	x29, x30, [sp, #16]
    e18c:	stp	x20, x19, [sp, #32]
    e190:	add	x29, sp, #0x10
    e194:	mov	x0, x1
    e198:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    e19c:	add	x1, x1, #0x14e
    e1a0:	add	x2, sp, #0x8
    e1a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e1a8:	cbz	w0, e1e8 <PyInit__testcapi@@Base+0x5028>
    e1ac:	ldr	x0, [sp, #8]
    e1b0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e1b4:	bl	8d50 <PyEval_SaveThread@plt>
    e1b8:	ldr	x1, [sp, #8]
    e1bc:	mov	x19, x0
    e1c0:	adrp	x0, 11000 <PyInit__testcapi@@Base+0x7e40>
    e1c4:	add	x0, x0, #0x98
    e1c8:	bl	88e0 <Py_AddPendingCall@plt>
    e1cc:	mov	w20, w0
    e1d0:	mov	x0, x19
    e1d4:	bl	83b0 <PyEval_RestoreThread@plt>
    e1d8:	tbnz	w20, #31, e1f0 <PyInit__testcapi@@Base+0x5030>
    e1dc:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    e1e0:	ldr	x19, [x19, #4032]
    e1e4:	b	e200 <PyInit__testcapi@@Base+0x5040>
    e1e8:	mov	x19, xzr
    e1ec:	b	e208 <PyInit__testcapi@@Base+0x5048>
    e1f0:	ldr	x0, [sp, #8]
    e1f4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e1f8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    e1fc:	ldr	x19, [x19, #3984]
    e200:	mov	x0, x19
    e204:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e208:	mov	x0, x19
    e20c:	ldp	x20, x19, [sp, #32]
    e210:	ldp	x29, x30, [sp, #16]
    e214:	add	sp, sp, #0x30
    e218:	ret
    e21c:	sub	sp, sp, #0x60
    e220:	stp	x29, x30, [sp, #32]
    e224:	str	x23, [sp, #48]
    e228:	stp	x22, x21, [sp, #64]
    e22c:	stp	x20, x19, [sp, #80]
    e230:	add	x29, sp, #0x20
    e234:	add	x0, sp, #0x10
    e238:	mov	x1, xzr
    e23c:	bl	8780 <gettimeofday@plt>
    e240:	mov	w20, wzr
    e244:	mov	w21, #0x4e20                	// #20000
    e248:	mov	x19, xzr
    e24c:	mov	x0, x19
    e250:	bl	8840 <PyLong_FromLong@plt>
    e254:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e258:	add	x19, x19, #0x1
    e25c:	cmp	x19, #0x3e8
    e260:	b.ne	e24c <PyInit__testcapi@@Base+0x508c>  // b.any
    e264:	add	w20, w20, #0x1
    e268:	cmp	w20, w21
    e26c:	b.ne	e248 <PyInit__testcapi@@Base+0x5088>  // b.any
    e270:	mov	w20, #0x4240                	// #16960
    e274:	mov	x0, sp
    e278:	mov	x1, xzr
    e27c:	movk	w20, #0xf, lsl #16
    e280:	bl	8780 <gettimeofday@plt>
    e284:	add	x1, sp, #0x10
    e288:	mov	x2, sp
    e28c:	mov	w0, #0x1                   	// #1
    e290:	bl	110d4 <PyInit__testcapi@@Base+0x7f14>
    e294:	add	x0, sp, #0x10
    e298:	mov	x1, xzr
    e29c:	bl	8780 <gettimeofday@plt>
    e2a0:	mov	w19, wzr
    e2a4:	mov	w21, #0x4e20                	// #20000
    e2a8:	mov	x22, xzr
    e2ac:	add	x0, x22, x20
    e2b0:	bl	8840 <PyLong_FromLong@plt>
    e2b4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e2b8:	add	x22, x22, #0x1
    e2bc:	cmp	x22, #0x3e8
    e2c0:	b.ne	e2ac <PyInit__testcapi@@Base+0x50ec>  // b.any
    e2c4:	add	w19, w19, #0x1
    e2c8:	cmp	w19, w21
    e2cc:	b.ne	e2a8 <PyInit__testcapi@@Base+0x50e8>  // b.any
    e2d0:	mov	x0, sp
    e2d4:	mov	x1, xzr
    e2d8:	bl	8780 <gettimeofday@plt>
    e2dc:	add	x1, sp, #0x10
    e2e0:	mov	x2, sp
    e2e4:	mov	w0, #0x2                   	// #2
    e2e8:	bl	110d4 <PyInit__testcapi@@Base+0x7f14>
    e2ec:	mov	w0, #0x1f40                	// #8000
    e2f0:	bl	8660 <malloc@plt>
    e2f4:	cbz	x0, e55c <PyInit__testcapi@@Base+0x539c>
    e2f8:	mov	x19, x0
    e2fc:	add	x0, sp, #0x10
    e300:	mov	x1, xzr
    e304:	bl	8780 <gettimeofday@plt>
    e308:	mov	w21, wzr
    e30c:	mov	w22, #0x4e20                	// #20000
    e310:	mov	x23, xzr
    e314:	add	x0, x23, x20
    e318:	bl	8840 <PyLong_FromLong@plt>
    e31c:	str	x0, [x19, x23, lsl #3]
    e320:	add	x23, x23, #0x1
    e324:	cmp	x23, #0x3e8
    e328:	b.ne	e314 <PyInit__testcapi@@Base+0x5154>  // b.any
    e32c:	mov	x23, xzr
    e330:	ldr	x0, [x19, x23, lsl #3]
    e334:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e338:	add	x23, x23, #0x1
    e33c:	cmp	x23, #0x3e8
    e340:	b.ne	e330 <PyInit__testcapi@@Base+0x5170>  // b.any
    e344:	add	w21, w21, #0x1
    e348:	cmp	w21, w22
    e34c:	b.ne	e310 <PyInit__testcapi@@Base+0x5150>  // b.any
    e350:	mov	w21, #0x1200                	// #4608
    e354:	mov	x0, sp
    e358:	mov	x1, xzr
    e35c:	movk	w21, #0x7a, lsl #16
    e360:	bl	8780 <gettimeofday@plt>
    e364:	add	x1, sp, #0x10
    e368:	mov	x2, sp
    e36c:	mov	w0, #0x3                   	// #3
    e370:	bl	110d4 <PyInit__testcapi@@Base+0x7f14>
    e374:	mov	x0, x19
    e378:	bl	8aa0 <free@plt>
    e37c:	mov	w0, #0x1200                	// #4608
    e380:	movk	w0, #0x7a, lsl #16
    e384:	bl	8660 <malloc@plt>
    e388:	cbz	x0, e55c <PyInit__testcapi@@Base+0x539c>
    e38c:	mov	x19, x0
    e390:	add	x0, sp, #0x10
    e394:	mov	x1, xzr
    e398:	bl	8780 <gettimeofday@plt>
    e39c:	mov	w22, wzr
    e3a0:	mov	x23, xzr
    e3a4:	add	x0, x23, x20
    e3a8:	bl	8840 <PyLong_FromLong@plt>
    e3ac:	str	x0, [x19, x23, lsl #3]
    e3b0:	add	x23, x23, #0x1
    e3b4:	cmp	x20, x23
    e3b8:	b.ne	e3a4 <PyInit__testcapi@@Base+0x51e4>  // b.any
    e3bc:	mov	x23, xzr
    e3c0:	ldr	x0, [x19, x23]
    e3c4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e3c8:	add	x23, x23, #0x8
    e3cc:	cmp	x21, x23
    e3d0:	b.ne	e3c0 <PyInit__testcapi@@Base+0x5200>  // b.any
    e3d4:	add	w22, w22, #0x1
    e3d8:	cmp	w22, #0x14
    e3dc:	b.ne	e3a0 <PyInit__testcapi@@Base+0x51e0>  // b.any
    e3e0:	mov	x0, sp
    e3e4:	mov	x1, xzr
    e3e8:	bl	8780 <gettimeofday@plt>
    e3ec:	add	x1, sp, #0x10
    e3f0:	mov	x2, sp
    e3f4:	mov	w0, #0x4                   	// #4
    e3f8:	bl	110d4 <PyInit__testcapi@@Base+0x7f14>
    e3fc:	mov	x0, x19
    e400:	bl	8aa0 <free@plt>
    e404:	mov	w0, #0x1200                	// #4608
    e408:	movk	w0, #0x7a, lsl #16
    e40c:	bl	8660 <malloc@plt>
    e410:	cbz	x0, e55c <PyInit__testcapi@@Base+0x539c>
    e414:	mov	x19, x0
    e418:	add	x0, sp, #0x10
    e41c:	mov	x1, xzr
    e420:	bl	8780 <gettimeofday@plt>
    e424:	mov	w22, wzr
    e428:	mov	x23, xzr
    e42c:	add	x0, x23, #0x3e8
    e430:	bl	8840 <PyLong_FromLong@plt>
    e434:	str	x0, [x19, x23, lsl #3]
    e438:	add	x23, x23, #0x1
    e43c:	cmp	x20, x23
    e440:	b.ne	e42c <PyInit__testcapi@@Base+0x526c>  // b.any
    e444:	mov	x23, xzr
    e448:	ldr	x0, [x19, x23]
    e44c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e450:	add	x23, x23, #0x8
    e454:	cmp	x21, x23
    e458:	b.ne	e448 <PyInit__testcapi@@Base+0x5288>  // b.any
    e45c:	add	w22, w22, #0x1
    e460:	cmp	w22, #0xa
    e464:	b.ne	e428 <PyInit__testcapi@@Base+0x5268>  // b.any
    e468:	mov	w20, #0x9680                	// #38528
    e46c:	mov	x0, sp
    e470:	mov	x1, xzr
    e474:	movk	w20, #0x98, lsl #16
    e478:	bl	8780 <gettimeofday@plt>
    e47c:	add	x1, sp, #0x10
    e480:	mov	x2, sp
    e484:	mov	w0, #0x5                   	// #5
    e488:	bl	110d4 <PyInit__testcapi@@Base+0x7f14>
    e48c:	mov	x0, x19
    e490:	bl	8aa0 <free@plt>
    e494:	mov	w0, #0x1                   	// #1
    e498:	bl	8840 <PyLong_FromLong@plt>
    e49c:	mov	x19, x0
    e4a0:	add	x0, sp, #0x10
    e4a4:	mov	x1, xzr
    e4a8:	bl	8780 <gettimeofday@plt>
    e4ac:	mov	w21, #0x9680                	// #38528
    e4b0:	movk	w21, #0x98, lsl #16
    e4b4:	mov	x0, x19
    e4b8:	mov	x1, x19
    e4bc:	bl	8490 <PyNumber_Add@plt>
    e4c0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e4c4:	subs	w21, w21, #0x1
    e4c8:	b.ne	e4b4 <PyInit__testcapi@@Base+0x52f4>  // b.any
    e4cc:	mov	x0, sp
    e4d0:	mov	x1, xzr
    e4d4:	bl	8780 <gettimeofday@plt>
    e4d8:	mov	x0, x19
    e4dc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e4e0:	add	x1, sp, #0x10
    e4e4:	mov	x2, sp
    e4e8:	mov	w0, #0x6                   	// #6
    e4ec:	bl	110d4 <PyInit__testcapi@@Base+0x7f14>
    e4f0:	mov	w0, #0x3e8                 	// #1000
    e4f4:	bl	8840 <PyLong_FromLong@plt>
    e4f8:	mov	x19, x0
    e4fc:	cbz	x0, e564 <PyInit__testcapi@@Base+0x53a4>
    e500:	add	x0, sp, #0x10
    e504:	mov	x1, xzr
    e508:	bl	8780 <gettimeofday@plt>
    e50c:	mov	x0, x19
    e510:	mov	x1, x19
    e514:	bl	8490 <PyNumber_Add@plt>
    e518:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    e51c:	subs	w20, w20, #0x1
    e520:	b.ne	e50c <PyInit__testcapi@@Base+0x534c>  // b.any
    e524:	mov	x0, sp
    e528:	mov	x1, xzr
    e52c:	bl	8780 <gettimeofday@plt>
    e530:	mov	x0, x19
    e534:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e538:	add	x1, sp, #0x10
    e53c:	mov	x2, sp
    e540:	mov	w0, #0x7                   	// #7
    e544:	bl	110d4 <PyInit__testcapi@@Base+0x7f14>
    e548:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    e54c:	ldr	x19, [x19, #4016]
    e550:	mov	x0, x19
    e554:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e558:	b	e564 <PyInit__testcapi@@Base+0x53a4>
    e55c:	bl	8570 <PyErr_NoMemory@plt>
    e560:	mov	x19, x0
    e564:	mov	x0, x19
    e568:	ldp	x20, x19, [sp, #80]
    e56c:	ldp	x22, x21, [sp, #64]
    e570:	ldr	x23, [sp, #48]
    e574:	ldp	x29, x30, [sp, #32]
    e578:	add	sp, sp, #0x60
    e57c:	ret
    e580:	sub	sp, sp, #0x30
    e584:	stp	x29, x30, [sp, #16]
    e588:	str	x19, [sp, #32]
    e58c:	add	x29, sp, #0x10
    e590:	mov	x0, x1
    e594:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e598:	add	x1, x1, #0xcd0
    e59c:	add	x2, sp, #0x8
    e5a0:	add	x3, x29, #0x18
    e5a4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e5a8:	cbz	w0, e5d0 <PyInit__testcapi@@Base+0x5410>
    e5ac:	ldr	x0, [sp, #8]
    e5b0:	ldr	x1, [x29, #24]
    e5b4:	bl	8ee0 <PyTraceBack_Print@plt>
    e5b8:	tbnz	w0, #31, e5d0 <PyInit__testcapi@@Base+0x5410>
    e5bc:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    e5c0:	ldr	x19, [x19, #4016]
    e5c4:	mov	x0, x19
    e5c8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e5cc:	b	e5d4 <PyInit__testcapi@@Base+0x5414>
    e5d0:	mov	x19, xzr
    e5d4:	mov	x0, x19
    e5d8:	ldr	x19, [sp, #32]
    e5dc:	ldp	x29, x30, [sp, #16]
    e5e0:	add	sp, sp, #0x30
    e5e4:	ret
    e5e8:	stp	x29, x30, [sp, #-32]!
    e5ec:	str	x19, [sp, #16]
    e5f0:	mov	x29, sp
    e5f4:	mov	x0, x1
    e5f8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e5fc:	add	x1, x1, #0xce3
    e600:	add	x2, x29, #0x18
    e604:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e608:	cbz	w0, e634 <PyInit__testcapi@@Base+0x5474>
    e60c:	ldr	x0, [x29, #24]
    e610:	ldr	x8, [x0, #8]
    e614:	ldrb	w8, [x8, #171]
    e618:	tbnz	w8, #6, e63c <PyInit__testcapi@@Base+0x547c>
    e61c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    e620:	ldr	x8, [x8, #3952]
    e624:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e628:	add	x1, x1, #0xcf5
    e62c:	ldr	x0, [x8]
    e630:	bl	8e60 <PyErr_Format@plt>
    e634:	mov	x19, xzr
    e638:	b	e670 <PyInit__testcapi@@Base+0x54b0>
    e63c:	bl	86b0 <PyException_GetTraceback@plt>
    e640:	ldr	x1, [x29, #24]
    e644:	mov	x19, x0
    e648:	mov	x2, x19
    e64c:	ldr	x8, [x1, #8]
    e650:	mov	x0, x8
    e654:	bl	8e30 <PyErr_Display@plt>
    e658:	mov	x0, x19
    e65c:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    e660:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    e664:	ldr	x19, [x19, #4016]
    e668:	mov	x0, x19
    e66c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e670:	mov	x0, x19
    e674:	ldr	x19, [sp, #16]
    e678:	ldp	x29, x30, [sp], #32
    e67c:	ret
    e680:	sub	sp, sp, #0x50
    e684:	stp	x29, x30, [sp, #48]
    e688:	str	x19, [sp, #64]
    e68c:	add	x29, sp, #0x30
    e690:	mov	x0, x1
    e694:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e698:	add	x1, x1, #0xd17
    e69c:	add	x2, x29, #0x18
    e6a0:	sub	x3, x29, #0x8
    e6a4:	sub	x4, x29, #0x10
    e6a8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e6ac:	cbz	w0, e738 <PyInit__testcapi@@Base+0x5578>
    e6b0:	add	x0, sp, #0x18
    e6b4:	add	x1, sp, #0x10
    e6b8:	add	x2, sp, #0x8
    e6bc:	bl	82f0 <PyErr_GetExcInfo@plt>
    e6c0:	ldr	x0, [x29, #24]
    e6c4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e6c8:	ldur	x0, [x29, #-8]
    e6cc:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e6d0:	ldur	x0, [x29, #-16]
    e6d4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e6d8:	ldr	x0, [x29, #24]
    e6dc:	ldp	x2, x1, [x29, #-16]
    e6e0:	bl	8fa0 <PyErr_SetExcInfo@plt>
    e6e4:	ldp	x10, x8, [sp, #16]
    e6e8:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    e6ec:	ldr	x9, [x9, #4016]
    e6f0:	ldr	x11, [sp, #8]
    e6f4:	cmp	x8, #0x0
    e6f8:	mov	w0, #0x3                   	// #3
    e6fc:	csel	x1, x9, x8, eq  // eq = none
    e700:	cmp	x10, #0x0
    e704:	csel	x2, x9, x10, eq  // eq = none
    e708:	cmp	x11, #0x0
    e70c:	csel	x3, x9, x11, eq  // eq = none
    e710:	bl	9040 <PyTuple_Pack@plt>
    e714:	ldr	x8, [sp, #24]
    e718:	mov	x19, x0
    e71c:	mov	x0, x8
    e720:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    e724:	ldr	x0, [sp, #16]
    e728:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    e72c:	ldr	x0, [sp, #8]
    e730:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
    e734:	b	e73c <PyInit__testcapi@@Base+0x557c>
    e738:	mov	x19, xzr
    e73c:	mov	x0, x19
    e740:	ldr	x19, [sp, #64]
    e744:	ldp	x29, x30, [sp, #48]
    e748:	add	sp, sp, #0x50
    e74c:	ret
    e750:	stp	x29, x30, [sp, #-32]!
    e754:	str	x19, [sp, #16]
    e758:	mov	x29, sp
    e75c:	adrp	x5, 29000 <PyInit__testcapi@@Base+0x1fe40>
    e760:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe40>
    e764:	add	x5, x5, #0xef8
    e768:	add	x3, x3, #0xf00
    e76c:	str	xzr, [x5]
    e770:	str	xzr, [x3]
    e774:	adrp	x2, 25000 <PyInit__testcapi@@Base+0x1be40>
    e778:	ldr	x2, [x2, #3920]
    e77c:	mov	x0, x1
    e780:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e784:	adrp	x4, 11000 <PyInit__testcapi@@Base+0x7e40>
    e788:	add	x1, x1, #0xd2d
    e78c:	add	x4, x4, #0x138
    e790:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e794:	cbz	w0, e7ac <PyInit__testcapi@@Base+0x55ec>
    e798:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    e79c:	ldr	x19, [x19, #4016]
    e7a0:	mov	x0, x19
    e7a4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    e7a8:	b	e7dc <PyInit__testcapi@@Base+0x561c>
    e7ac:	adrp	x19, 29000 <PyInit__testcapi@@Base+0x1fe40>
    e7b0:	ldr	x8, [x19, #3832]
    e7b4:	cbz	x8, e7d8 <PyInit__testcapi@@Base+0x5618>
    e7b8:	ldr	x0, [x8]
    e7bc:	bl	87f0 <PyLong_FromSsize_t@plt>
    e7c0:	ldr	x8, [x19, #3832]
    e7c4:	mov	x19, x0
    e7c8:	mov	x0, x8
    e7cc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    e7d0:	bl	88c0 <PyErr_Clear@plt>
    e7d4:	b	e7dc <PyInit__testcapi@@Base+0x561c>
    e7d8:	mov	x19, xzr
    e7dc:	mov	x0, x19
    e7e0:	ldr	x19, [sp, #16]
    e7e4:	ldp	x29, x30, [sp], #32
    e7e8:	ret
    e7ec:	sub	sp, sp, #0x30
    e7f0:	stp	x29, x30, [sp, #32]
    e7f4:	add	x29, sp, #0x20
    e7f8:	mov	x0, x1
    e7fc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e800:	add	x1, x1, #0xd32
    e804:	sub	x2, x29, #0x8
    e808:	add	x3, sp, #0x10
    e80c:	add	x4, sp, #0xc
    e810:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e814:	cbz	w0, e82c <PyInit__testcapi@@Base+0x566c>
    e818:	ldur	x0, [x29, #-8]
    e81c:	ldr	x1, [sp, #16]
    e820:	ldr	w2, [sp, #12]
    e824:	bl	9060 <PyCode_NewEmpty@plt>
    e828:	b	e830 <PyInit__testcapi@@Base+0x5670>
    e82c:	mov	x0, xzr
    e830:	ldp	x29, x30, [sp, #32]
    e834:	add	sp, sp, #0x30
    e838:	ret
    e83c:	sub	sp, sp, #0x30
    e840:	stp	x29, x30, [sp, #32]
    e844:	add	x29, sp, #0x20
    e848:	mov	x8, x2
    e84c:	adrp	x2, 14000 <PyInit__testcapi@@Base+0xae40>
    e850:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe40>
    e854:	mov	x0, x1
    e858:	add	x2, x2, #0xd49
    e85c:	add	x3, x3, #0x5b0
    e860:	sub	x4, x29, #0x8
    e864:	add	x5, sp, #0x10
    e868:	add	x6, sp, #0x8
    e86c:	mov	x7, sp
    e870:	mov	x1, x8
    e874:	stp	xzr, xzr, [sp, #8]
    e878:	str	xzr, [sp]
    e87c:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    e880:	cbz	w0, e898 <PyInit__testcapi@@Base+0x56d8>
    e884:	ldur	x0, [x29, #-8]
    e888:	ldp	x2, x1, [sp, #8]
    e88c:	ldr	x3, [sp]
    e890:	bl	85d0 <PyErr_NewExceptionWithDoc@plt>
    e894:	b	e89c <PyInit__testcapi@@Base+0x56dc>
    e898:	mov	x0, xzr
    e89c:	ldp	x29, x30, [sp, #32]
    e8a0:	add	sp, sp, #0x30
    e8a4:	ret
    e8a8:	sub	sp, sp, #0x60
    e8ac:	stp	x29, x30, [sp, #80]
    e8b0:	add	x29, sp, #0x50
    e8b4:	mov	x0, sp
    e8b8:	mov	w3, #0x1                   	// #1
    e8bc:	mov	w4, #0x1                   	// #1
    e8c0:	mov	w5, #0x11c                 	// #284
    e8c4:	mov	x1, xzr
    e8c8:	mov	x2, xzr
    e8cc:	bl	8870 <PyBuffer_FillInfo@plt>
    e8d0:	tbnz	w0, #31, e8e0 <PyInit__testcapi@@Base+0x5720>
    e8d4:	mov	x0, sp
    e8d8:	bl	9050 <PyMemoryView_FromBuffer@plt>
    e8dc:	b	e8e4 <PyInit__testcapi@@Base+0x5724>
    e8e0:	mov	x0, xzr
    e8e4:	ldp	x29, x30, [sp, #80]
    e8e8:	add	sp, sp, #0x60
    e8ec:	ret
    e8f0:	stp	x29, x30, [sp, #-32]!
    e8f4:	str	x19, [sp, #16]
    e8f8:	mov	x29, sp
    e8fc:	bl	8d50 <PyEval_SaveThread@plt>
    e900:	mov	x19, x0
    e904:	bl	8940 <PyThreadState_Get@plt>
    e908:	mov	x0, x19
    e90c:	bl	83b0 <PyEval_RestoreThread@plt>
    e910:	ldr	x19, [sp, #16]
    e914:	mov	x0, xzr
    e918:	ldp	x29, x30, [sp], #32
    e91c:	ret
    e920:	stp	x29, x30, [sp, #-48]!
    e924:	str	x21, [sp, #16]
    e928:	stp	x20, x19, [sp, #32]
    e92c:	mov	x29, sp
    e930:	mov	x0, x1
    e934:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e938:	add	x1, x1, #0xd67
    e93c:	add	x2, x29, #0x18
    e940:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e944:	cbz	w0, e9b0 <PyInit__testcapi@@Base+0x57f0>
    e948:	bl	8940 <PyThreadState_Get@plt>
    e94c:	mov	x19, x0
    e950:	mov	x0, xzr
    e954:	bl	8fd0 <PyThreadState_Swap@plt>
    e958:	bl	8790 <Py_NewInterpreter@plt>
    e95c:	cbz	x0, e990 <PyInit__testcapi@@Base+0x57d0>
    e960:	mov	x20, x0
    e964:	ldr	x0, [x29, #24]
    e968:	mov	x1, xzr
    e96c:	bl	8ed0 <PyRun_SimpleStringFlags@plt>
    e970:	mov	w21, w0
    e974:	mov	x0, x20
    e978:	bl	8540 <Py_EndInterpreter@plt>
    e97c:	mov	x0, x19
    e980:	bl	8fd0 <PyThreadState_Swap@plt>
    e984:	sxtw	x0, w21
    e988:	bl	8840 <PyLong_FromLong@plt>
    e98c:	b	e9b4 <PyInit__testcapi@@Base+0x57f4>
    e990:	mov	x0, x19
    e994:	bl	8fd0 <PyThreadState_Swap@plt>
    e998:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    e99c:	ldr	x8, [x8, #3928]
    e9a0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e9a4:	add	x1, x1, #0xd7a
    e9a8:	ldr	x0, [x8]
    e9ac:	bl	8670 <PyErr_SetString@plt>
    e9b0:	mov	x0, xzr
    e9b4:	ldp	x20, x19, [sp, #32]
    e9b8:	ldr	x21, [sp, #16]
    e9bc:	ldp	x29, x30, [sp], #48
    e9c0:	ret
    e9c4:	sub	sp, sp, #0x30
    e9c8:	stp	x29, x30, [sp, #32]
    e9cc:	add	x29, sp, #0x20
    e9d0:	mov	x0, x1
    e9d4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    e9d8:	add	x1, x1, #0xd9a
    e9dc:	sub	x2, x29, #0x8
    e9e0:	add	x3, sp, #0xc
    e9e4:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    e9e8:	cbz	w0, ea1c <PyInit__testcapi@@Base+0x585c>
    e9ec:	ldr	w0, [sp, #12]
    e9f0:	bl	11160 <PyInit__testcapi@@Base+0x7fa0>
    e9f4:	tbnz	w0, #31, ea1c <PyInit__testcapi@@Base+0x585c>
    e9f8:	ldur	x0, [x29, #-8]
    e9fc:	ldr	w2, [sp, #12]
    ea00:	add	x1, sp, #0x10
    ea04:	bl	8bc0 <_PyTime_ObjectToTime_t@plt>
    ea08:	cmn	w0, #0x1
    ea0c:	b.eq	ea1c <PyInit__testcapi@@Base+0x585c>  // b.none
    ea10:	ldr	x0, [sp, #16]
    ea14:	bl	9000 <_PyLong_FromTime_t@plt>
    ea18:	b	ea20 <PyInit__testcapi@@Base+0x5860>
    ea1c:	mov	x0, xzr
    ea20:	ldp	x29, x30, [sp, #32]
    ea24:	add	sp, sp, #0x30
    ea28:	ret
    ea2c:	sub	sp, sp, #0x30
    ea30:	stp	x29, x30, [sp, #32]
    ea34:	add	x29, sp, #0x20
    ea38:	mov	x0, x1
    ea3c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ea40:	add	x1, x1, #0xdc6
    ea44:	sub	x2, x29, #0x8
    ea48:	add	x3, sp, #0x4
    ea4c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ea50:	cbz	w0, ea9c <PyInit__testcapi@@Base+0x58dc>
    ea54:	ldr	w0, [sp, #4]
    ea58:	bl	11160 <PyInit__testcapi@@Base+0x7fa0>
    ea5c:	tbnz	w0, #31, ea9c <PyInit__testcapi@@Base+0x58dc>
    ea60:	ldur	x0, [x29, #-8]
    ea64:	ldr	w3, [sp, #4]
    ea68:	add	x1, sp, #0x10
    ea6c:	add	x2, sp, #0x8
    ea70:	bl	8420 <_PyTime_ObjectToTimeval@plt>
    ea74:	cmn	w0, #0x1
    ea78:	b.eq	ea9c <PyInit__testcapi@@Base+0x58dc>  // b.none
    ea7c:	ldr	x0, [sp, #16]
    ea80:	bl	9000 <_PyLong_FromTime_t@plt>
    ea84:	ldr	x2, [sp, #8]
    ea88:	mov	x1, x0
    ea8c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    ea90:	add	x0, x0, #0xde2
    ea94:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    ea98:	b	eaa0 <PyInit__testcapi@@Base+0x58e0>
    ea9c:	mov	x0, xzr
    eaa0:	ldp	x29, x30, [sp, #32]
    eaa4:	add	sp, sp, #0x30
    eaa8:	ret
    eaac:	sub	sp, sp, #0x30
    eab0:	stp	x29, x30, [sp, #32]
    eab4:	add	x29, sp, #0x20
    eab8:	mov	x0, x1
    eabc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    eac0:	add	x1, x1, #0xde5
    eac4:	sub	x2, x29, #0x8
    eac8:	add	x3, sp, #0x4
    eacc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ead0:	cbz	w0, eb1c <PyInit__testcapi@@Base+0x595c>
    ead4:	ldr	w0, [sp, #4]
    ead8:	bl	11160 <PyInit__testcapi@@Base+0x7fa0>
    eadc:	tbnz	w0, #31, eb1c <PyInit__testcapi@@Base+0x595c>
    eae0:	ldur	x0, [x29, #-8]
    eae4:	ldr	w3, [sp, #4]
    eae8:	add	x1, sp, #0x10
    eaec:	add	x2, sp, #0x8
    eaf0:	bl	8b10 <_PyTime_ObjectToTimespec@plt>
    eaf4:	cmn	w0, #0x1
    eaf8:	b.eq	eb1c <PyInit__testcapi@@Base+0x595c>  // b.none
    eafc:	ldr	x0, [sp, #16]
    eb00:	bl	9000 <_PyLong_FromTime_t@plt>
    eb04:	ldr	x2, [sp, #8]
    eb08:	mov	x1, x0
    eb0c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    eb10:	add	x0, x0, #0xde2
    eb14:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    eb18:	b	eb20 <PyInit__testcapi@@Base+0x5960>
    eb1c:	mov	x0, xzr
    eb20:	ldp	x29, x30, [sp, #32]
    eb24:	add	sp, sp, #0x30
    eb28:	ret
    eb2c:	sub	sp, sp, #0x20
    eb30:	stp	x29, x30, [sp, #16]
    eb34:	add	x29, sp, #0x10
    eb38:	mov	x0, x1
    eb3c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    eb40:	add	x1, x1, #0xe02
    eb44:	add	x2, sp, #0x8
    eb48:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    eb4c:	cbz	w0, eb80 <PyInit__testcapi@@Base+0x59c0>
    eb50:	ldr	x2, [sp, #8]
    eb54:	ldr	x8, [x2, #8]
    eb58:	ldr	w8, [x8, #168]
    eb5c:	tbz	w8, #31, eb68 <PyInit__testcapi@@Base+0x59a8>
    eb60:	ldrb	w8, [x2, #169]
    eb64:	tbnz	w8, #1, eb90 <PyInit__testcapi@@Base+0x59d0>
    eb68:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    eb6c:	ldr	x8, [x8, #3952]
    eb70:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    eb74:	add	x1, x1, #0xe10
    eb78:	ldr	x0, [x8]
    eb7c:	bl	8e60 <PyErr_Format@plt>
    eb80:	mov	x0, xzr
    eb84:	ldp	x29, x30, [sp, #16]
    eb88:	add	sp, sp, #0x20
    eb8c:	ret
    eb90:	adrp	x8, 11000 <PyInit__testcapi@@Base+0x7e40>
    eb94:	add	x8, x8, #0x19c
    eb98:	mov	x0, x2
    eb9c:	str	x8, [x2, #376]
    eba0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    eba4:	ldr	x0, [sp, #8]
    eba8:	b	eb84 <PyInit__testcapi@@Base+0x59c4>
    ebac:	stp	x29, x30, [sp, #-16]!
    ebb0:	mov	x29, sp
    ebb4:	mov	x1, x0
    ebb8:	adrp	x0, 29000 <PyInit__testcapi@@Base+0x1fe40>
    ebbc:	add	x0, x0, #0x5f0
    ebc0:	mov	x2, xzr
    ebc4:	bl	8430 <PyCFunction_NewEx@plt>
    ebc8:	ldp	x29, x30, [sp], #16
    ebcc:	ret
    ebd0:	stp	x29, x30, [sp, #-32]!
    ebd4:	str	x19, [sp, #16]
    ebd8:	mov	x29, sp
    ebdc:	mov	x0, xzr
    ebe0:	bl	84d0 <PyMem_RawMalloc@plt>
    ebe4:	cbz	x0, ec5c <PyInit__testcapi@@Base+0x5a9c>
    ebe8:	bl	8a10 <PyMem_RawFree@plt>
    ebec:	mov	x0, xzr
    ebf0:	mov	x1, xzr
    ebf4:	bl	8d30 <PyMem_RawCalloc@plt>
    ebf8:	cbz	x0, ec70 <PyInit__testcapi@@Base+0x5ab0>
    ebfc:	bl	8a10 <PyMem_RawFree@plt>
    ec00:	mov	x0, xzr
    ec04:	bl	8fc0 <PyMem_Malloc@plt>
    ec08:	cbz	x0, ec84 <PyInit__testcapi@@Base+0x5ac4>
    ec0c:	bl	83d0 <PyMem_Free@plt>
    ec10:	mov	x0, xzr
    ec14:	mov	x1, xzr
    ec18:	bl	8f20 <PyMem_Calloc@plt>
    ec1c:	cbz	x0, ec98 <PyInit__testcapi@@Base+0x5ad8>
    ec20:	bl	83d0 <PyMem_Free@plt>
    ec24:	mov	x0, xzr
    ec28:	bl	86c0 <PyObject_Malloc@plt>
    ec2c:	cbz	x0, ecac <PyInit__testcapi@@Base+0x5aec>
    ec30:	bl	87c0 <PyObject_Free@plt>
    ec34:	mov	x0, xzr
    ec38:	mov	x1, xzr
    ec3c:	bl	90a0 <PyObject_Calloc@plt>
    ec40:	cbz	x0, ecc0 <PyInit__testcapi@@Base+0x5b00>
    ec44:	bl	87c0 <PyObject_Free@plt>
    ec48:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ec4c:	ldr	x19, [x19, #4016]
    ec50:	mov	x0, x19
    ec54:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ec58:	b	ecdc <PyInit__testcapi@@Base+0x5b1c>
    ec5c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ec60:	ldr	x8, [x8, #3928]
    ec64:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ec68:	add	x1, x1, #0xe36
    ec6c:	b	ecd0 <PyInit__testcapi@@Base+0x5b10>
    ec70:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ec74:	ldr	x8, [x8, #3928]
    ec78:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ec7c:	add	x1, x1, #0xe56
    ec80:	b	ecd0 <PyInit__testcapi@@Base+0x5b10>
    ec84:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ec88:	ldr	x8, [x8, #3928]
    ec8c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ec90:	add	x1, x1, #0xe79
    ec94:	b	ecd0 <PyInit__testcapi@@Base+0x5b10>
    ec98:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ec9c:	ldr	x8, [x8, #3928]
    eca0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    eca4:	add	x1, x1, #0xe96
    eca8:	b	ecd0 <PyInit__testcapi@@Base+0x5b10>
    ecac:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ecb0:	ldr	x8, [x8, #3928]
    ecb4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ecb8:	add	x1, x1, #0xeb6
    ecbc:	b	ecd0 <PyInit__testcapi@@Base+0x5b10>
    ecc0:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ecc4:	ldr	x8, [x8, #3928]
    ecc8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    eccc:	add	x1, x1, #0xed6
    ecd0:	ldr	x0, [x8]
    ecd4:	bl	8670 <PyErr_SetString@plt>
    ecd8:	mov	x19, xzr
    ecdc:	mov	x0, x19
    ece0:	ldr	x19, [sp, #16]
    ece4:	ldp	x29, x30, [sp], #32
    ece8:	ret
    ecec:	stp	x29, x30, [sp, #-16]!
    ecf0:	mov	x29, sp
    ecf4:	mov	w0, wzr
    ecf8:	bl	11274 <PyInit__testcapi@@Base+0x80b4>
    ecfc:	ldp	x29, x30, [sp], #16
    ed00:	ret
    ed04:	stp	x29, x30, [sp, #-16]!
    ed08:	mov	x29, sp
    ed0c:	mov	w0, #0x1                   	// #1
    ed10:	bl	11274 <PyInit__testcapi@@Base+0x80b4>
    ed14:	ldp	x29, x30, [sp], #16
    ed18:	ret
    ed1c:	stp	x29, x30, [sp, #-16]!
    ed20:	mov	x29, sp
    ed24:	mov	w0, #0x2                   	// #2
    ed28:	bl	11274 <PyInit__testcapi@@Base+0x80b4>
    ed2c:	ldp	x29, x30, [sp], #16
    ed30:	ret
    ed34:	stp	x29, x30, [sp, #-32]!
    ed38:	str	x19, [sp, #16]
    ed3c:	mov	x29, sp
    ed40:	adrp	x2, 29000 <PyInit__testcapi@@Base+0x1fe40>
    ed44:	add	x2, x2, #0xf08
    ed48:	mov	x0, x1
    ed4c:	mov	x3, x2
    ed50:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ed54:	str	xzr, [x2, #8]
    ed58:	str	wzr, [x3, #4]!
    ed5c:	add	x1, x1, #0xfe8
    ed60:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ed64:	cbz	w0, ed80 <PyInit__testcapi@@Base+0x5bc0>
    ed68:	bl	11674 <PyInit__testcapi@@Base+0x84b4>
    ed6c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ed70:	ldr	x19, [x19, #4016]
    ed74:	mov	x0, x19
    ed78:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ed7c:	b	ed84 <PyInit__testcapi@@Base+0x5bc4>
    ed80:	mov	x19, xzr
    ed84:	mov	x0, x19
    ed88:	ldr	x19, [sp, #16]
    ed8c:	ldp	x29, x30, [sp], #32
    ed90:	ret
    ed94:	stp	x29, x30, [sp, #-32]!
    ed98:	str	x19, [sp, #16]
    ed9c:	mov	x29, sp
    eda0:	bl	1187c <PyInit__testcapi@@Base+0x86bc>
    eda4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    eda8:	ldr	x19, [x19, #4016]
    edac:	mov	x0, x19
    edb0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    edb4:	mov	x0, x19
    edb8:	ldr	x19, [sp, #16]
    edbc:	ldp	x29, x30, [sp], #32
    edc0:	ret
    edc4:	sub	sp, sp, #0x40
    edc8:	stp	x29, x30, [sp, #32]
    edcc:	str	x19, [sp, #48]
    edd0:	add	x29, sp, #0x20
    edd4:	mov	x19, x1
    edd8:	bl	8f70 <PyEval_InitThreads@plt>
    eddc:	bl	8ad0 <PyThread_allocate_lock@plt>
    ede0:	str	x0, [sp, #8]
    ede4:	bl	8ad0 <PyThread_allocate_lock@plt>
    ede8:	stp	x0, xzr, [sp, #16]
    edec:	cbz	x0, ee8c <PyInit__testcapi@@Base+0x5ccc>
    edf0:	ldr	x8, [sp, #8]
    edf4:	cbz	x8, ee8c <PyInit__testcapi@@Base+0x5ccc>
    edf8:	mov	x0, x19
    edfc:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ee00:	ldr	x0, [sp, #8]
    ee04:	mov	w1, #0x1                   	// #1
    ee08:	str	x19, [sp, #24]
    ee0c:	bl	85e0 <PyThread_acquire_lock@plt>
    ee10:	ldr	x0, [sp, #16]
    ee14:	mov	w1, #0x1                   	// #1
    ee18:	bl	85e0 <PyThread_acquire_lock@plt>
    ee1c:	adrp	x0, 11000 <PyInit__testcapi@@Base+0x7e40>
    ee20:	add	x0, x0, #0x8d0
    ee24:	add	x1, sp, #0x8
    ee28:	bl	8460 <PyThread_start_new_thread@plt>
    ee2c:	cmn	x0, #0x1
    ee30:	b.eq	eea8 <PyInit__testcapi@@Base+0x5ce8>  // b.none
    ee34:	ldr	x0, [sp, #8]
    ee38:	mov	w1, #0x1                   	// #1
    ee3c:	bl	85e0 <PyThread_acquire_lock@plt>
    ee40:	ldr	x0, [sp, #8]
    ee44:	bl	8b90 <PyThread_release_lock@plt>
    ee48:	bl	8d50 <PyEval_SaveThread@plt>
    ee4c:	ldr	x8, [sp, #16]
    ee50:	mov	x19, x0
    ee54:	mov	w1, #0x1                   	// #1
    ee58:	mov	x0, x8
    ee5c:	bl	85e0 <PyThread_acquire_lock@plt>
    ee60:	ldr	x0, [sp, #16]
    ee64:	bl	8b90 <PyThread_release_lock@plt>
    ee68:	mov	x0, x19
    ee6c:	bl	83b0 <PyEval_RestoreThread@plt>
    ee70:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ee74:	ldr	x19, [x19, #4016]
    ee78:	mov	x0, x19
    ee7c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ee80:	ldr	x0, [sp, #24]
    ee84:	cbnz	x0, eedc <PyInit__testcapi@@Base+0x5d1c>
    ee88:	b	eee4 <PyInit__testcapi@@Base+0x5d24>
    ee8c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ee90:	ldr	x8, [x8, #3928]
    ee94:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    ee98:	add	x1, x1, #0xfec
    ee9c:	ldr	x0, [x8]
    eea0:	bl	8670 <PyErr_SetString@plt>
    eea4:	b	eed0 <PyInit__testcapi@@Base+0x5d10>
    eea8:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    eeac:	ldr	x8, [x8, #3928]
    eeb0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    eeb4:	add	x1, x1, #0x4
    eeb8:	ldr	x0, [x8]
    eebc:	bl	8670 <PyErr_SetString@plt>
    eec0:	ldr	x0, [sp, #8]
    eec4:	bl	8b90 <PyThread_release_lock@plt>
    eec8:	ldr	x0, [sp, #16]
    eecc:	bl	8b90 <PyThread_release_lock@plt>
    eed0:	mov	x19, xzr
    eed4:	ldr	x0, [sp, #24]
    eed8:	cbz	x0, eee4 <PyInit__testcapi@@Base+0x5d24>
    eedc:	str	xzr, [sp, #24]
    eee0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
    eee4:	ldr	x0, [sp, #8]
    eee8:	cbz	x0, eef0 <PyInit__testcapi@@Base+0x5d30>
    eeec:	bl	9030 <PyThread_free_lock@plt>
    eef0:	ldr	x0, [sp, #16]
    eef4:	cbz	x0, eefc <PyInit__testcapi@@Base+0x5d3c>
    eef8:	bl	9030 <PyThread_free_lock@plt>
    eefc:	mov	x0, x19
    ef00:	ldr	x19, [sp, #48]
    ef04:	ldp	x29, x30, [sp, #32]
    ef08:	add	sp, sp, #0x40
    ef0c:	ret
    ef10:	sub	sp, sp, #0x30
    ef14:	stp	x29, x30, [sp, #16]
    ef18:	str	x19, [sp, #32]
    ef1c:	add	x29, sp, #0x10
    ef20:	mov	x0, x1
    ef24:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    ef28:	add	x1, x1, #0x1f
    ef2c:	add	x2, x29, #0x18
    ef30:	add	x3, sp, #0x8
    ef34:	add	x4, sp, #0x4
    ef38:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    ef3c:	cbz	w0, ef78 <PyInit__testcapi@@Base+0x5db8>
    ef40:	ldr	x0, [sp, #8]
    ef44:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    ef48:	add	x1, x1, #0x40
    ef4c:	bl	8cd0 <fopen64@plt>
    ef50:	mov	x19, x0
    ef54:	cbz	x0, ef80 <PyInit__testcapi@@Base+0x5dc0>
    ef58:	ldr	x0, [x29, #24]
    ef5c:	ldr	w2, [sp, #4]
    ef60:	mov	x1, x19
    ef64:	bl	85c0 <PyMarshal_WriteLongToFile@plt>
    ef68:	mov	x0, x19
    ef6c:	bl	8640 <fclose@plt>
    ef70:	bl	8980 <PyErr_Occurred@plt>
    ef74:	cbz	x0, ef94 <PyInit__testcapi@@Base+0x5dd4>
    ef78:	mov	x19, xzr
    ef7c:	b	efa4 <PyInit__testcapi@@Base+0x5de4>
    ef80:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ef84:	ldr	x8, [x8, #3976]
    ef88:	ldr	x0, [x8]
    ef8c:	bl	8410 <PyErr_SetFromErrno@plt>
    ef90:	b	efa4 <PyInit__testcapi@@Base+0x5de4>
    ef94:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ef98:	ldr	x19, [x19, #4016]
    ef9c:	mov	x0, x19
    efa0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    efa4:	mov	x0, x19
    efa8:	ldr	x19, [sp, #32]
    efac:	ldp	x29, x30, [sp, #16]
    efb0:	add	sp, sp, #0x30
    efb4:	ret
    efb8:	sub	sp, sp, #0x30
    efbc:	stp	x29, x30, [sp, #16]
    efc0:	str	x19, [sp, #32]
    efc4:	add	x29, sp, #0x10
    efc8:	mov	x0, x1
    efcc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    efd0:	add	x1, x1, #0x43
    efd4:	add	x2, x29, #0x18
    efd8:	add	x3, sp, #0x8
    efdc:	add	x4, sp, #0x4
    efe0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    efe4:	cbz	w0, f020 <PyInit__testcapi@@Base+0x5e60>
    efe8:	ldr	x0, [sp, #8]
    efec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    eff0:	add	x1, x1, #0x40
    eff4:	bl	8cd0 <fopen64@plt>
    eff8:	mov	x19, x0
    effc:	cbz	x0, f028 <PyInit__testcapi@@Base+0x5e68>
    f000:	ldr	x0, [x29, #24]
    f004:	ldr	w2, [sp, #4]
    f008:	mov	x1, x19
    f00c:	bl	8ac0 <PyMarshal_WriteObjectToFile@plt>
    f010:	mov	x0, x19
    f014:	bl	8640 <fclose@plt>
    f018:	bl	8980 <PyErr_Occurred@plt>
    f01c:	cbz	x0, f03c <PyInit__testcapi@@Base+0x5e7c>
    f020:	mov	x19, xzr
    f024:	b	f04c <PyInit__testcapi@@Base+0x5e8c>
    f028:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f02c:	ldr	x8, [x8, #3976]
    f030:	ldr	x0, [x8]
    f034:	bl	8410 <PyErr_SetFromErrno@plt>
    f038:	b	f04c <PyInit__testcapi@@Base+0x5e8c>
    f03c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f040:	ldr	x19, [x19, #4016]
    f044:	mov	x0, x19
    f048:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f04c:	mov	x0, x19
    f050:	ldr	x19, [sp, #32]
    f054:	ldp	x29, x30, [sp, #16]
    f058:	add	sp, sp, #0x30
    f05c:	ret
    f060:	stp	x29, x30, [sp, #-48]!
    f064:	str	x21, [sp, #16]
    f068:	stp	x20, x19, [sp, #32]
    f06c:	mov	x29, sp
    f070:	mov	x0, x1
    f074:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f078:	add	x1, x1, #0x66
    f07c:	add	x2, x29, #0x18
    f080:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f084:	cbz	w0, f0c4 <PyInit__testcapi@@Base+0x5f04>
    f088:	ldr	x0, [x29, #24]
    f08c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f090:	add	x1, x1, #0x87
    f094:	bl	8cd0 <fopen64@plt>
    f098:	cbz	x0, f0cc <PyInit__testcapi@@Base+0x5f0c>
    f09c:	mov	x21, x0
    f0a0:	bl	8f60 <PyMarshal_ReadShortFromFile@plt>
    f0a4:	mov	w19, w0
    f0a8:	mov	x0, x21
    f0ac:	bl	84b0 <ftell@plt>
    f0b0:	mov	x20, x0
    f0b4:	mov	x0, x21
    f0b8:	bl	8640 <fclose@plt>
    f0bc:	bl	8980 <PyErr_Occurred@plt>
    f0c0:	cbz	x0, f0e4 <PyInit__testcapi@@Base+0x5f24>
    f0c4:	mov	x0, xzr
    f0c8:	b	f0f8 <PyInit__testcapi@@Base+0x5f38>
    f0cc:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f0d0:	ldr	x8, [x8, #3976]
    f0d4:	ldr	x0, [x8]
    f0d8:	bl	8410 <PyErr_SetFromErrno@plt>
    f0dc:	mov	x0, xzr
    f0e0:	b	f0f8 <PyInit__testcapi@@Base+0x5f38>
    f0e4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    f0e8:	add	x0, x0, #0xc36
    f0ec:	mov	w1, w19
    f0f0:	mov	x2, x20
    f0f4:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f0f8:	ldp	x20, x19, [sp, #32]
    f0fc:	ldr	x21, [sp, #16]
    f100:	ldp	x29, x30, [sp], #48
    f104:	ret
    f108:	stp	x29, x30, [sp, #-48]!
    f10c:	str	x21, [sp, #16]
    f110:	stp	x20, x19, [sp, #32]
    f114:	mov	x29, sp
    f118:	mov	x0, x1
    f11c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f120:	add	x1, x1, #0x8a
    f124:	add	x2, x29, #0x18
    f128:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f12c:	cbz	w0, f16c <PyInit__testcapi@@Base+0x5fac>
    f130:	ldr	x0, [x29, #24]
    f134:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f138:	add	x1, x1, #0x87
    f13c:	bl	8cd0 <fopen64@plt>
    f140:	cbz	x0, f174 <PyInit__testcapi@@Base+0x5fb4>
    f144:	mov	x21, x0
    f148:	bl	82b0 <PyMarshal_ReadLongFromFile@plt>
    f14c:	mov	x19, x0
    f150:	mov	x0, x21
    f154:	bl	84b0 <ftell@plt>
    f158:	mov	x20, x0
    f15c:	mov	x0, x21
    f160:	bl	8640 <fclose@plt>
    f164:	bl	8980 <PyErr_Occurred@plt>
    f168:	cbz	x0, f18c <PyInit__testcapi@@Base+0x5fcc>
    f16c:	mov	x0, xzr
    f170:	b	f1a0 <PyInit__testcapi@@Base+0x5fe0>
    f174:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f178:	ldr	x8, [x8, #3976]
    f17c:	ldr	x0, [x8]
    f180:	bl	8410 <PyErr_SetFromErrno@plt>
    f184:	mov	x0, xzr
    f188:	b	f1a0 <PyInit__testcapi@@Base+0x5fe0>
    f18c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    f190:	add	x0, x0, #0x607
    f194:	mov	x1, x19
    f198:	mov	x2, x20
    f19c:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f1a0:	ldp	x20, x19, [sp, #32]
    f1a4:	ldr	x21, [sp, #16]
    f1a8:	ldp	x29, x30, [sp], #48
    f1ac:	ret
    f1b0:	stp	x29, x30, [sp, #-48]!
    f1b4:	str	x21, [sp, #16]
    f1b8:	stp	x20, x19, [sp, #32]
    f1bc:	mov	x29, sp
    f1c0:	mov	x0, x1
    f1c4:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f1c8:	add	x1, x1, #0xaa
    f1cc:	add	x2, x29, #0x18
    f1d0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f1d4:	cbz	w0, f234 <PyInit__testcapi@@Base+0x6074>
    f1d8:	ldr	x0, [x29, #24]
    f1dc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f1e0:	add	x1, x1, #0x87
    f1e4:	bl	8cd0 <fopen64@plt>
    f1e8:	cbz	x0, f224 <PyInit__testcapi@@Base+0x6064>
    f1ec:	mov	x19, x0
    f1f0:	bl	8280 <PyMarshal_ReadLastObjectFromFile@plt>
    f1f4:	mov	x20, x0
    f1f8:	mov	x0, x19
    f1fc:	bl	84b0 <ftell@plt>
    f200:	mov	x21, x0
    f204:	mov	x0, x19
    f208:	bl	8640 <fclose@plt>
    f20c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    f210:	add	x0, x0, #0xde2
    f214:	mov	x1, x20
    f218:	mov	x2, x21
    f21c:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f220:	b	f238 <PyInit__testcapi@@Base+0x6078>
    f224:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f228:	ldr	x8, [x8, #3976]
    f22c:	ldr	x0, [x8]
    f230:	bl	8410 <PyErr_SetFromErrno@plt>
    f234:	mov	x0, xzr
    f238:	ldp	x20, x19, [sp, #32]
    f23c:	ldr	x21, [sp, #16]
    f240:	ldp	x29, x30, [sp], #48
    f244:	ret
    f248:	stp	x29, x30, [sp, #-48]!
    f24c:	str	x21, [sp, #16]
    f250:	stp	x20, x19, [sp, #32]
    f254:	mov	x29, sp
    f258:	mov	x0, x1
    f25c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f260:	add	x1, x1, #0xd1
    f264:	add	x2, x29, #0x18
    f268:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f26c:	cbz	w0, f2cc <PyInit__testcapi@@Base+0x610c>
    f270:	ldr	x0, [x29, #24]
    f274:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f278:	add	x1, x1, #0x87
    f27c:	bl	8cd0 <fopen64@plt>
    f280:	cbz	x0, f2bc <PyInit__testcapi@@Base+0x60fc>
    f284:	mov	x19, x0
    f288:	bl	8d40 <PyMarshal_ReadObjectFromFile@plt>
    f28c:	mov	x20, x0
    f290:	mov	x0, x19
    f294:	bl	84b0 <ftell@plt>
    f298:	mov	x21, x0
    f29c:	mov	x0, x19
    f2a0:	bl	8640 <fclose@plt>
    f2a4:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    f2a8:	add	x0, x0, #0xde2
    f2ac:	mov	x1, x20
    f2b0:	mov	x2, x21
    f2b4:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f2b8:	b	f2d0 <PyInit__testcapi@@Base+0x6110>
    f2bc:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f2c0:	ldr	x8, [x8, #3976]
    f2c4:	ldr	x0, [x8]
    f2c8:	bl	8410 <PyErr_SetFromErrno@plt>
    f2cc:	mov	x0, xzr
    f2d0:	ldp	x20, x19, [sp, #32]
    f2d4:	ldr	x21, [sp, #16]
    f2d8:	ldp	x29, x30, [sp], #48
    f2dc:	ret
    f2e0:	stp	x29, x30, [sp, #-16]!
    f2e4:	mov	x29, sp
    f2e8:	bl	88c0 <PyErr_Clear@plt>
    f2ec:	mov	x0, xzr
    f2f0:	ldp	x29, x30, [sp], #16
    f2f4:	ret
    f2f8:	stp	x29, x30, [sp, #-32]!
    f2fc:	str	x19, [sp, #16]
    f300:	mov	x29, sp
    f304:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f308:	ldr	x8, [x8, #3944]
    f30c:	ldr	x0, [x8]
    f310:	bl	8750 <PyErr_SetNone@plt>
    f314:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f318:	ldr	x19, [x19, #4016]
    f31c:	mov	x0, x19
    f320:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f324:	mov	x0, x19
    f328:	ldr	x19, [sp, #16]
    f32c:	ldp	x29, x30, [sp], #32
    f330:	ret
    f334:	sub	sp, sp, #0x20
    f338:	stp	x29, x30, [sp, #16]
    f33c:	add	x29, sp, #0x10
    f340:	mov	x0, x1
    f344:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    f348:	add	x1, x1, #0x8d3
    f34c:	sub	x2, x29, #0x4
    f350:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f354:	cbz	w0, f368 <PyInit__testcapi@@Base+0x61a8>
    f358:	ldur	w0, [x29, #-4]
    f35c:	bl	8e00 <_PyTime_FromSeconds@plt>
    f360:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
    f364:	b	f36c <PyInit__testcapi@@Base+0x61ac>
    f368:	mov	x0, xzr
    f36c:	ldp	x29, x30, [sp, #16]
    f370:	add	sp, sp, #0x20
    f374:	ret
    f378:	sub	sp, sp, #0x30
    f37c:	stp	x29, x30, [sp, #32]
    f380:	add	x29, sp, #0x20
    f384:	mov	x0, x1
    f388:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f38c:	add	x1, x1, #0xf3
    f390:	sub	x2, x29, #0x8
    f394:	sub	x3, x29, #0xc
    f398:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f39c:	cbz	w0, f3d0 <PyInit__testcapi@@Base+0x6210>
    f3a0:	ldur	w0, [x29, #-12]
    f3a4:	bl	11160 <PyInit__testcapi@@Base+0x7fa0>
    f3a8:	tbnz	w0, #31, f3d0 <PyInit__testcapi@@Base+0x6210>
    f3ac:	ldur	x1, [x29, #-8]
    f3b0:	ldur	w2, [x29, #-12]
    f3b4:	add	x0, sp, #0x8
    f3b8:	bl	87b0 <_PyTime_FromSecondsObject@plt>
    f3bc:	cmn	w0, #0x1
    f3c0:	b.eq	f3d0 <PyInit__testcapi@@Base+0x6210>  // b.none
    f3c4:	ldr	x0, [sp, #8]
    f3c8:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
    f3cc:	b	f3d4 <PyInit__testcapi@@Base+0x6214>
    f3d0:	mov	x0, xzr
    f3d4:	ldp	x29, x30, [sp, #32]
    f3d8:	add	sp, sp, #0x30
    f3dc:	ret
    f3e0:	sub	sp, sp, #0x20
    f3e4:	stp	x29, x30, [sp, #16]
    f3e8:	add	x29, sp, #0x10
    f3ec:	mov	x0, x1
    f3f0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f3f4:	add	x1, x1, #0x14e
    f3f8:	add	x2, sp, #0x8
    f3fc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f400:	cbz	w0, f424 <PyInit__testcapi@@Base+0x6264>
    f404:	ldr	x1, [sp, #8]
    f408:	mov	x0, sp
    f40c:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
    f410:	tbnz	w0, #31, f424 <PyInit__testcapi@@Base+0x6264>
    f414:	ldr	x0, [sp]
    f418:	bl	8690 <_PyTime_AsSecondsDouble@plt>
    f41c:	bl	8800 <PyFloat_FromDouble@plt>
    f420:	b	f428 <PyInit__testcapi@@Base+0x6268>
    f424:	mov	x0, xzr
    f428:	ldp	x29, x30, [sp, #16]
    f42c:	add	sp, sp, #0x20
    f430:	ret
    f434:	sub	sp, sp, #0x40
    f438:	stp	x29, x30, [sp, #48]
    f43c:	add	x29, sp, #0x30
    f440:	mov	x0, x1
    f444:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f448:	add	x1, x1, #0xf3
    f44c:	sub	x2, x29, #0x8
    f450:	sub	x3, x29, #0xc
    f454:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f458:	cbz	w0, f4b0 <PyInit__testcapi@@Base+0x62f0>
    f45c:	ldur	w0, [x29, #-12]
    f460:	bl	11160 <PyInit__testcapi@@Base+0x7fa0>
    f464:	tbnz	w0, #31, f4b0 <PyInit__testcapi@@Base+0x62f0>
    f468:	ldur	x1, [x29, #-8]
    f46c:	add	x0, sp, #0x18
    f470:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
    f474:	tbnz	w0, #31, f4b0 <PyInit__testcapi@@Base+0x62f0>
    f478:	ldr	x0, [sp, #24]
    f47c:	ldur	w2, [x29, #-12]
    f480:	add	x1, sp, #0x8
    f484:	bl	8dd0 <_PyTime_AsTimeval@plt>
    f488:	tbnz	w0, #31, f4b0 <PyInit__testcapi@@Base+0x62f0>
    f48c:	ldr	x0, [sp, #8]
    f490:	bl	8ef0 <PyLong_FromLongLong@plt>
    f494:	cbz	x0, f4b4 <PyInit__testcapi@@Base+0x62f4>
    f498:	ldr	x2, [sp, #16]
    f49c:	mov	x1, x0
    f4a0:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    f4a4:	add	x0, x0, #0xde2
    f4a8:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f4ac:	b	f4b4 <PyInit__testcapi@@Base+0x62f4>
    f4b0:	mov	x0, xzr
    f4b4:	ldp	x29, x30, [sp, #48]
    f4b8:	add	sp, sp, #0x40
    f4bc:	ret
    f4c0:	sub	sp, sp, #0x30
    f4c4:	stp	x29, x30, [sp, #32]
    f4c8:	add	x29, sp, #0x20
    f4cc:	mov	x0, x1
    f4d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f4d4:	add	x1, x1, #0x14e
    f4d8:	sub	x2, x29, #0x8
    f4dc:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f4e0:	cbz	w0, f528 <PyInit__testcapi@@Base+0x6368>
    f4e4:	ldur	x1, [x29, #-8]
    f4e8:	add	x0, sp, #0x10
    f4ec:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
    f4f0:	tbnz	w0, #31, f528 <PyInit__testcapi@@Base+0x6368>
    f4f4:	ldr	x0, [sp, #16]
    f4f8:	mov	x1, sp
    f4fc:	bl	8a40 <_PyTime_AsTimespec@plt>
    f500:	cmn	w0, #0x1
    f504:	b.eq	f528 <PyInit__testcapi@@Base+0x6368>  // b.none
    f508:	ldr	x0, [sp]
    f50c:	bl	9000 <_PyLong_FromTime_t@plt>
    f510:	ldr	x2, [sp, #8]
    f514:	mov	x1, x0
    f518:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
    f51c:	add	x0, x0, #0xde2
    f520:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
    f524:	b	f52c <PyInit__testcapi@@Base+0x636c>
    f528:	mov	x0, xzr
    f52c:	ldp	x29, x30, [sp, #32]
    f530:	add	sp, sp, #0x30
    f534:	ret
    f538:	sub	sp, sp, #0x30
    f53c:	stp	x29, x30, [sp, #32]
    f540:	add	x29, sp, #0x20
    f544:	mov	x0, x1
    f548:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f54c:	add	x1, x1, #0xf3
    f550:	sub	x2, x29, #0x8
    f554:	sub	x3, x29, #0xc
    f558:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f55c:	cbz	w0, f590 <PyInit__testcapi@@Base+0x63d0>
    f560:	ldur	x1, [x29, #-8]
    f564:	add	x0, sp, #0x8
    f568:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
    f56c:	tbnz	w0, #31, f590 <PyInit__testcapi@@Base+0x63d0>
    f570:	ldur	w0, [x29, #-12]
    f574:	bl	11160 <PyInit__testcapi@@Base+0x7fa0>
    f578:	tbnz	w0, #31, f590 <PyInit__testcapi@@Base+0x63d0>
    f57c:	ldr	x0, [sp, #8]
    f580:	ldur	w1, [x29, #-12]
    f584:	bl	87d0 <_PyTime_AsMilliseconds@plt>
    f588:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
    f58c:	b	f594 <PyInit__testcapi@@Base+0x63d4>
    f590:	mov	x0, xzr
    f594:	ldp	x29, x30, [sp, #32]
    f598:	add	sp, sp, #0x30
    f59c:	ret
    f5a0:	sub	sp, sp, #0x30
    f5a4:	stp	x29, x30, [sp, #32]
    f5a8:	add	x29, sp, #0x20
    f5ac:	mov	x0, x1
    f5b0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f5b4:	add	x1, x1, #0xf3
    f5b8:	sub	x2, x29, #0x8
    f5bc:	sub	x3, x29, #0xc
    f5c0:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f5c4:	cbz	w0, f5f8 <PyInit__testcapi@@Base+0x6438>
    f5c8:	ldur	x1, [x29, #-8]
    f5cc:	add	x0, sp, #0x8
    f5d0:	bl	8e80 <_PyTime_FromNanosecondsObject@plt>
    f5d4:	tbnz	w0, #31, f5f8 <PyInit__testcapi@@Base+0x6438>
    f5d8:	ldur	w0, [x29, #-12]
    f5dc:	bl	11160 <PyInit__testcapi@@Base+0x7fa0>
    f5e0:	tbnz	w0, #31, f5f8 <PyInit__testcapi@@Base+0x6438>
    f5e4:	ldr	x0, [sp, #8]
    f5e8:	ldur	w1, [x29, #-12]
    f5ec:	bl	8d70 <_PyTime_AsMicroseconds@plt>
    f5f0:	bl	86d0 <_PyTime_AsNanosecondsObject@plt>
    f5f4:	b	f5fc <PyInit__testcapi@@Base+0x643c>
    f5f8:	mov	x0, xzr
    f5fc:	ldp	x29, x30, [sp, #32]
    f600:	add	sp, sp, #0x30
    f604:	ret
    f608:	stp	x29, x30, [sp, #-16]!
    f60c:	mov	x29, sp
    f610:	bl	8940 <PyThreadState_Get@plt>
    f614:	ldr	w8, [x0, #32]
    f618:	sub	w8, w8, #0x1
    f61c:	sxtw	x0, w8
    f620:	bl	8840 <PyLong_FromLong@plt>
    f624:	ldp	x29, x30, [sp], #16
    f628:	ret
    f62c:	stp	x29, x30, [sp, #-32]!
    f630:	str	x19, [sp, #16]
    f634:	mov	x29, sp
    f638:	mov	w0, #0x10                  	// #16
    f63c:	bl	8fc0 <PyMem_Malloc@plt>
    f640:	cbz	x0, f664 <PyInit__testcapi@@Base+0x64a4>
    f644:	mov	w8, #0x78                  	// #120
    f648:	strb	w8, [x0, #16]
    f64c:	bl	83d0 <PyMem_Free@plt>
    f650:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f654:	ldr	x19, [x19, #4016]
    f658:	mov	x0, x19
    f65c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f660:	b	f66c <PyInit__testcapi@@Base+0x64ac>
    f664:	bl	8570 <PyErr_NoMemory@plt>
    f668:	mov	x19, xzr
    f66c:	mov	x0, x19
    f670:	ldr	x19, [sp, #16]
    f674:	ldp	x29, x30, [sp], #32
    f678:	ret
    f67c:	stp	x29, x30, [sp, #-32]!
    f680:	str	x19, [sp, #16]
    f684:	mov	x29, sp
    f688:	mov	w0, #0x10                  	// #16
    f68c:	bl	8fc0 <PyMem_Malloc@plt>
    f690:	bl	8a10 <PyMem_RawFree@plt>
    f694:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f698:	ldr	x19, [x19, #4016]
    f69c:	mov	x0, x19
    f6a0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f6a4:	mov	x0, x19
    f6a8:	ldr	x19, [sp, #16]
    f6ac:	ldp	x29, x30, [sp], #32
    f6b0:	ret
    f6b4:	stp	x29, x30, [sp, #-32]!
    f6b8:	stp	x20, x19, [sp, #16]
    f6bc:	mov	x29, sp
    f6c0:	bl	8d50 <PyEval_SaveThread@plt>
    f6c4:	mov	x19, x0
    f6c8:	mov	w0, #0xa                   	// #10
    f6cc:	bl	8fc0 <PyMem_Malloc@plt>
    f6d0:	mov	x20, x0
    f6d4:	mov	x0, x19
    f6d8:	bl	83b0 <PyEval_RestoreThread@plt>
    f6dc:	mov	x0, x20
    f6e0:	bl	83d0 <PyMem_Free@plt>
    f6e4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f6e8:	ldr	x19, [x19, #4016]
    f6ec:	mov	x0, x19
    f6f0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f6f4:	mov	x0, x19
    f6f8:	ldp	x20, x19, [sp, #16]
    f6fc:	ldp	x29, x30, [sp], #32
    f700:	ret
    f704:	stp	x29, x30, [sp, #-16]!
    f708:	mov	x29, sp
    f70c:	bl	8de0 <_PyMem_GetCurrentAllocatorName@plt>
    f710:	cbz	x0, f720 <PyInit__testcapi@@Base+0x6560>
    f714:	bl	8d10 <PyUnicode_FromString@plt>
    f718:	ldp	x29, x30, [sp], #16
    f71c:	ret
    f720:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f724:	ldr	x8, [x8, #3928]
    f728:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f72c:	add	x1, x1, #0xf6
    f730:	ldr	x0, [x8]
    f734:	bl	8670 <PyErr_SetString@plt>
    f738:	mov	x0, xzr
    f73c:	ldp	x29, x30, [sp], #16
    f740:	ret
    f744:	stp	x29, x30, [sp, #-16]!
    f748:	mov	x29, sp
    f74c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    f750:	add	x0, x0, #0x4aa
    f754:	mov	x1, xzr
    f758:	bl	11940 <PyInit__testcapi@@Base+0x8780>
    f75c:	ldp	x29, x30, [sp], #16
    f760:	ret
    f764:	stp	x29, x30, [sp, #-16]!
    f768:	mov	x29, sp
    f76c:	mov	w0, #0x10                  	// #16
    f770:	bl	86c0 <PyObject_Malloc@plt>
    f774:	cbz	x0, f790 <PyInit__testcapi@@Base+0x65d0>
    f778:	mov	w8, #0x1                   	// #1
    f77c:	mov	x1, x0
    f780:	str	x8, [x0]
    f784:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    f788:	add	x0, x0, #0x4c7
    f78c:	bl	11940 <PyInit__testcapi@@Base+0x8780>
    f790:	ldp	x29, x30, [sp], #16
    f794:	ret
    f798:	stp	x29, x30, [sp, #-16]!
    f79c:	mov	x29, sp
    f7a0:	mov	w0, #0x8                   	// #8
    f7a4:	bl	86c0 <PyObject_Malloc@plt>
    f7a8:	cbz	x0, f7c4 <PyInit__testcapi@@Base+0x6604>
    f7ac:	mov	w8, #0x1                   	// #1
    f7b0:	mov	x1, x0
    f7b4:	str	x8, [x0]
    f7b8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    f7bc:	add	x0, x0, #0x4ed
    f7c0:	bl	11940 <PyInit__testcapi@@Base+0x8780>
    f7c4:	ldp	x29, x30, [sp], #16
    f7c8:	ret
    f7cc:	stp	x29, x30, [sp, #-32]!
    f7d0:	str	x19, [sp, #16]
    f7d4:	mov	x29, sp
    f7d8:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
    f7dc:	ldr	x0, [x0, #4048]
    f7e0:	bl	10fd0 <PyInit__testcapi@@Base+0x7e10>
    f7e4:	cbz	x0, f810 <PyInit__testcapi@@Base+0x6650>
    f7e8:	ldr	x8, [x0, #8]
    f7ec:	mov	x19, x0
    f7f0:	ldr	x8, [x8, #48]
    f7f4:	blr	x8
    f7f8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    f7fc:	mov	w8, #0x1                   	// #1
    f800:	add	x0, x0, #0x515
    f804:	mov	x1, x19
    f808:	str	x8, [x19]
    f80c:	bl	11940 <PyInit__testcapi@@Base+0x8780>
    f810:	ldr	x19, [sp, #16]
    f814:	ldp	x29, x30, [sp], #32
    f818:	ret
    f81c:	stp	x29, x30, [sp, #-32]!
    f820:	stp	x20, x19, [sp, #16]
    f824:	mov	x29, sp
    f828:	bl	8d50 <PyEval_SaveThread@plt>
    f82c:	mov	x19, x0
    f830:	mov	w0, #0xa                   	// #10
    f834:	bl	86c0 <PyObject_Malloc@plt>
    f838:	mov	x20, x0
    f83c:	mov	x0, x19
    f840:	bl	83b0 <PyEval_RestoreThread@plt>
    f844:	mov	x0, x20
    f848:	bl	87c0 <PyObject_Free@plt>
    f84c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f850:	ldr	x19, [x19, #4016]
    f854:	mov	x0, x19
    f858:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f85c:	mov	x0, x19
    f860:	ldp	x20, x19, [sp, #16]
    f864:	ldp	x29, x30, [sp], #32
    f868:	ret
    f86c:	sub	sp, sp, #0x40
    f870:	stp	x29, x30, [sp, #32]
    f874:	stp	x20, x19, [sp, #48]
    f878:	add	x29, sp, #0x20
    f87c:	mov	x0, x1
    f880:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f884:	add	x1, x1, #0x12d
    f888:	sub	x2, x29, #0x4
    f88c:	add	x3, sp, #0x10
    f890:	add	x4, sp, #0x8
    f894:	add	x5, sp, #0x4
    f898:	str	wzr, [sp, #4]
    f89c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f8a0:	cbz	w0, f8b8 <PyInit__testcapi@@Base+0x66f8>
    f8a4:	ldr	x0, [sp, #16]
    f8a8:	bl	87e0 <PyLong_AsVoidPtr@plt>
    f8ac:	mov	x19, x0
    f8b0:	bl	8980 <PyErr_Occurred@plt>
    f8b4:	cbz	x0, f8d0 <PyInit__testcapi@@Base+0x6710>
    f8b8:	mov	x19, xzr
    f8bc:	mov	x0, x19
    f8c0:	ldp	x20, x19, [sp, #48]
    f8c4:	ldp	x29, x30, [sp, #32]
    f8c8:	add	sp, sp, #0x40
    f8cc:	ret
    f8d0:	ldr	w8, [sp, #4]
    f8d4:	cbz	w8, f918 <PyInit__testcapi@@Base+0x6758>
    f8d8:	bl	8d50 <PyEval_SaveThread@plt>
    f8dc:	ldur	w8, [x29, #-4]
    f8e0:	ldr	x2, [sp, #8]
    f8e4:	mov	x20, x0
    f8e8:	mov	x1, x19
    f8ec:	mov	w0, w8
    f8f0:	bl	8730 <PyTraceMalloc_Track@plt>
    f8f4:	mov	w19, w0
    f8f8:	mov	x0, x20
    f8fc:	bl	83b0 <PyEval_RestoreThread@plt>
    f900:	tbnz	w19, #31, f930 <PyInit__testcapi@@Base+0x6770>
    f904:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f908:	ldr	x19, [x19, #4016]
    f90c:	mov	x0, x19
    f910:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f914:	b	f8bc <PyInit__testcapi@@Base+0x66fc>
    f918:	ldur	w0, [x29, #-4]
    f91c:	ldr	x2, [sp, #8]
    f920:	mov	x1, x19
    f924:	bl	8730 <PyTraceMalloc_Track@plt>
    f928:	mov	w19, w0
    f92c:	tbz	w19, #31, f904 <PyInit__testcapi@@Base+0x6744>
    f930:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f934:	ldr	x8, [x8, #3928]
    f938:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f93c:	add	x1, x1, #0x133
    f940:	ldr	x0, [x8]
    f944:	bl	8670 <PyErr_SetString@plt>
    f948:	b	f8b8 <PyInit__testcapi@@Base+0x66f8>
    f94c:	sub	sp, sp, #0x30
    f950:	stp	x29, x30, [sp, #16]
    f954:	str	x19, [sp, #32]
    f958:	add	x29, sp, #0x10
    f95c:	mov	x0, x1
    f960:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f964:	add	x1, x1, #0x14d
    f968:	add	x2, x29, #0x1c
    f96c:	add	x3, sp, #0x8
    f970:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    f974:	cbz	w0, f98c <PyInit__testcapi@@Base+0x67cc>
    f978:	ldr	x0, [sp, #8]
    f97c:	bl	87e0 <PyLong_AsVoidPtr@plt>
    f980:	mov	x19, x0
    f984:	bl	8980 <PyErr_Occurred@plt>
    f988:	cbz	x0, f9a4 <PyInit__testcapi@@Base+0x67e4>
    f98c:	mov	x19, xzr
    f990:	mov	x0, x19
    f994:	ldr	x19, [sp, #32]
    f998:	ldp	x29, x30, [sp, #16]
    f99c:	add	sp, sp, #0x30
    f9a0:	ret
    f9a4:	ldr	w0, [x29, #28]
    f9a8:	mov	x1, x19
    f9ac:	bl	8310 <PyTraceMalloc_Untrack@plt>
    f9b0:	tbnz	w0, #31, f9c8 <PyInit__testcapi@@Base+0x6808>
    f9b4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    f9b8:	ldr	x19, [x19, #4016]
    f9bc:	mov	x0, x19
    f9c0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    f9c4:	b	f990 <PyInit__testcapi@@Base+0x67d0>
    f9c8:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    f9cc:	ldr	x8, [x8, #3928]
    f9d0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f9d4:	add	x1, x1, #0x150
    f9d8:	ldr	x0, [x8]
    f9dc:	bl	8670 <PyErr_SetString@plt>
    f9e0:	b	f98c <PyInit__testcapi@@Base+0x67cc>
    f9e4:	sub	sp, sp, #0x30
    f9e8:	stp	x29, x30, [sp, #16]
    f9ec:	str	x19, [sp, #32]
    f9f0:	add	x29, sp, #0x10
    f9f4:	mov	x0, x1
    f9f8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    f9fc:	add	x1, x1, #0x14d
    fa00:	add	x2, x29, #0x1c
    fa04:	add	x3, sp, #0x8
    fa08:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fa0c:	cbz	w0, fa24 <PyInit__testcapi@@Base+0x6864>
    fa10:	ldr	x0, [sp, #8]
    fa14:	bl	87e0 <PyLong_AsVoidPtr@plt>
    fa18:	mov	x19, x0
    fa1c:	bl	8980 <PyErr_Occurred@plt>
    fa20:	cbz	x0, fa2c <PyInit__testcapi@@Base+0x686c>
    fa24:	mov	x0, xzr
    fa28:	b	fa38 <PyInit__testcapi@@Base+0x6878>
    fa2c:	ldr	w0, [x29, #28]
    fa30:	mov	x1, x19
    fa34:	bl	8b20 <_PyTraceMalloc_GetTraceback@plt>
    fa38:	ldr	x19, [sp, #32]
    fa3c:	ldp	x29, x30, [sp, #16]
    fa40:	add	sp, sp, #0x30
    fa44:	ret
    fa48:	sub	sp, sp, #0x20
    fa4c:	stp	x29, x30, [sp, #16]
    fa50:	add	x29, sp, #0x10
    fa54:	adrp	x2, 25000 <PyInit__testcapi@@Base+0x1be40>
    fa58:	ldr	x2, [x2, #4040]
    fa5c:	mov	x0, x1
    fa60:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fa64:	add	x1, x1, #0x16c
    fa68:	add	x3, sp, #0x8
    fa6c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fa70:	cbz	w0, fa84 <PyInit__testcapi@@Base+0x68c4>
    fa74:	ldr	x8, [sp, #8]
    fa78:	ldr	x0, [x8, #24]
    fa7c:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
    fa80:	b	fa88 <PyInit__testcapi@@Base+0x68c8>
    fa84:	mov	x0, xzr
    fa88:	ldp	x29, x30, [sp, #16]
    fa8c:	add	sp, sp, #0x20
    fa90:	ret
    fa94:	sub	sp, sp, #0x20
    fa98:	stp	x29, x30, [sp, #16]
    fa9c:	add	x29, sp, #0x10
    faa0:	adrp	x2, 25000 <PyInit__testcapi@@Base+0x1be40>
    faa4:	ldr	x2, [x2, #3960]
    faa8:	mov	x0, x1
    faac:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fab0:	add	x1, x1, #0x16c
    fab4:	add	x3, sp, #0x8
    fab8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fabc:	cbz	w0, fadc <PyInit__testcapi@@Base+0x691c>
    fac0:	mov	w0, #0x2                   	// #2
    fac4:	bl	8330 <raise@plt>
    fac8:	adrp	x1, 25000 <PyInit__testcapi@@Base+0x1be40>
    facc:	ldr	x0, [sp, #8]
    fad0:	ldr	x1, [x1, #4016]
    fad4:	bl	8620 <_PyGen_Send@plt>
    fad8:	b	fae0 <PyInit__testcapi@@Base+0x6920>
    fadc:	mov	x0, xzr
    fae0:	ldp	x29, x30, [sp, #16]
    fae4:	add	sp, sp, #0x20
    fae8:	ret
    faec:	sub	sp, sp, #0x30
    faf0:	stp	x29, x30, [sp, #32]
    faf4:	add	x29, sp, #0x20
    faf8:	mov	x0, x1
    fafc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fb00:	add	x1, x1, #0x18d
    fb04:	sub	x2, x29, #0x8
    fb08:	add	x3, sp, #0x10
    fb0c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fb10:	cbz	w0, fb38 <PyInit__testcapi@@Base+0x6978>
    fb14:	ldr	x0, [sp, #16]
    fb18:	add	x1, sp, #0x8
    fb1c:	mov	x2, sp
    fb20:	bl	11994 <PyInit__testcapi@@Base+0x87d4>
    fb24:	tbnz	w0, #31, fb38 <PyInit__testcapi@@Base+0x6978>
    fb28:	ldur	x0, [x29, #-8]
    fb2c:	ldp	x2, x1, [sp]
    fb30:	bl	11a04 <PyInit__testcapi@@Base+0x8844>
    fb34:	b	fb3c <PyInit__testcapi@@Base+0x697c>
    fb38:	mov	x0, xzr
    fb3c:	ldp	x29, x30, [sp, #32]
    fb40:	add	sp, sp, #0x30
    fb44:	ret
    fb48:	sub	sp, sp, #0x40
    fb4c:	stp	x29, x30, [sp, #48]
    fb50:	add	x29, sp, #0x30
    fb54:	mov	x0, x1
    fb58:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fb5c:	add	x1, x1, #0x18c
    fb60:	sub	x2, x29, #0x8
    fb64:	sub	x3, x29, #0x10
    fb68:	add	x4, sp, #0x18
    fb6c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fb70:	cbz	w0, fbc0 <PyInit__testcapi@@Base+0x6a00>
    fb74:	ldur	x0, [x29, #-16]
    fb78:	add	x1, sp, #0x10
    fb7c:	add	x2, sp, #0x8
    fb80:	bl	11994 <PyInit__testcapi@@Base+0x87d4>
    fb84:	tbnz	w0, #31, fbc0 <PyInit__testcapi@@Base+0x6a00>
    fb88:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    fb8c:	ldr	x8, [sp, #24]
    fb90:	ldr	x9, [x9, #4016]
    fb94:	cmp	x8, x9
    fb98:	b.eq	fbc8 <PyInit__testcapi@@Base+0x6a08>  // b.none
    fb9c:	ldr	x8, [x8, #8]
    fba0:	ldrb	w8, [x8, #171]
    fba4:	tbnz	w8, #5, fbcc <PyInit__testcapi@@Base+0x6a0c>
    fba8:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    fbac:	ldr	x8, [x8, #3952]
    fbb0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fbb4:	add	x1, x1, #0x190
    fbb8:	ldr	x0, [x8]
    fbbc:	bl	8670 <PyErr_SetString@plt>
    fbc0:	mov	x0, xzr
    fbc4:	b	fbdc <PyInit__testcapi@@Base+0x6a1c>
    fbc8:	str	xzr, [sp, #24]
    fbcc:	ldur	x0, [x29, #-8]
    fbd0:	ldp	x2, x1, [sp, #8]
    fbd4:	ldr	x3, [sp, #24]
    fbd8:	bl	8680 <_PyObject_FastCallDict@plt>
    fbdc:	ldp	x29, x30, [sp, #48]
    fbe0:	add	sp, sp, #0x40
    fbe4:	ret
    fbe8:	sub	sp, sp, #0x40
    fbec:	stp	x29, x30, [sp, #48]
    fbf0:	add	x29, sp, #0x30
    fbf4:	mov	x0, x1
    fbf8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fbfc:	add	x1, x1, #0x18c
    fc00:	sub	x2, x29, #0x8
    fc04:	sub	x3, x29, #0x10
    fc08:	add	x4, sp, #0x18
    fc0c:	str	xzr, [sp, #24]
    fc10:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fc14:	cbz	w0, fc60 <PyInit__testcapi@@Base+0x6aa0>
    fc18:	ldur	x0, [x29, #-16]
    fc1c:	add	x1, sp, #0x10
    fc20:	add	x2, sp, #0x8
    fc24:	bl	11994 <PyInit__testcapi@@Base+0x87d4>
    fc28:	tbnz	w0, #31, fc60 <PyInit__testcapi@@Base+0x6aa0>
    fc2c:	adrp	x9, 25000 <PyInit__testcapi@@Base+0x1be40>
    fc30:	ldr	x8, [sp, #24]
    fc34:	ldr	x9, [x9, #4016]
    fc38:	cmp	x8, x9
    fc3c:	b.eq	fc68 <PyInit__testcapi@@Base+0x6aa8>  // b.none
    fc40:	ldr	x9, [x8, #8]
    fc44:	ldrb	w9, [x9, #171]
    fc48:	tbnz	w9, #2, fc70 <PyInit__testcapi@@Base+0x6ab0>
    fc4c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    fc50:	ldr	x8, [x8, #3952]
    fc54:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fc58:	add	x1, x1, #0x1c8
    fc5c:	b	fc90 <PyInit__testcapi@@Base+0x6ad0>
    fc60:	mov	x0, xzr
    fc64:	b	fcb4 <PyInit__testcapi@@Base+0x6af4>
    fc68:	str	xzr, [sp, #24]
    fc6c:	b	fca4 <PyInit__testcapi@@Base+0x6ae4>
    fc70:	ldr	x8, [x8, #16]
    fc74:	ldr	x9, [sp, #8]
    fc78:	subs	x8, x9, x8
    fc7c:	b.ge	fca0 <PyInit__testcapi@@Base+0x6ae0>  // b.tcont
    fc80:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    fc84:	ldr	x8, [x8, #3944]
    fc88:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fc8c:	add	x1, x1, #0x1af
    fc90:	ldr	x0, [x8]
    fc94:	bl	8670 <PyErr_SetString@plt>
    fc98:	mov	x0, xzr
    fc9c:	b	fcb4 <PyInit__testcapi@@Base+0x6af4>
    fca0:	str	x8, [sp, #8]
    fca4:	ldur	x0, [x29, #-8]
    fca8:	ldp	x2, x1, [sp, #8]
    fcac:	ldr	x3, [sp, #24]
    fcb0:	bl	10ff0 <PyInit__testcapi@@Base+0x7e30>
    fcb4:	ldp	x29, x30, [sp, #48]
    fcb8:	add	sp, sp, #0x40
    fcbc:	ret
    fcc0:	sub	sp, sp, #0x30
    fcc4:	stp	x29, x30, [sp, #32]
    fcc8:	add	x29, sp, #0x20
    fccc:	mov	x0, x1
    fcd0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fcd4:	add	x1, x1, #0x1e8
    fcd8:	sub	x2, x29, #0x8
    fcdc:	add	x3, sp, #0x10
    fce0:	add	x4, sp, #0x8
    fce4:	str	xzr, [sp, #8]
    fce8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fcec:	cbz	w0, fd14 <PyInit__testcapi@@Base+0x6b54>
    fcf0:	ldr	x1, [sp, #16]
    fcf4:	ldr	x8, [x1, #8]
    fcf8:	ldrb	w8, [x8, #171]
    fcfc:	tbnz	w8, #2, fd1c <PyInit__testcapi@@Base+0x6b5c>
    fd00:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    fd04:	ldr	x8, [x8, #3952]
    fd08:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fd0c:	add	x1, x1, #0x1ed
    fd10:	b	fd40 <PyInit__testcapi@@Base+0x6b80>
    fd14:	mov	x0, xzr
    fd18:	b	fd58 <PyInit__testcapi@@Base+0x6b98>
    fd1c:	ldr	x2, [sp, #8]
    fd20:	cbz	x2, fd50 <PyInit__testcapi@@Base+0x6b90>
    fd24:	ldr	x8, [x2, #8]
    fd28:	ldrb	w8, [x8, #171]
    fd2c:	tbnz	w8, #5, fd50 <PyInit__testcapi@@Base+0x6b90>
    fd30:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    fd34:	ldr	x8, [x8, #3952]
    fd38:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fd3c:	add	x1, x1, #0x202
    fd40:	ldr	x0, [x8]
    fd44:	bl	8670 <PyErr_SetString@plt>
    fd48:	mov	x0, xzr
    fd4c:	b	fd58 <PyInit__testcapi@@Base+0x6b98>
    fd50:	ldur	x0, [x29, #-8]
    fd54:	bl	8bb0 <PyVectorcall_Call@plt>
    fd58:	ldp	x29, x30, [sp, #32]
    fd5c:	add	sp, sp, #0x30
    fd60:	ret
    fd64:	sub	sp, sp, #0x20
    fd68:	stp	x29, x30, [sp, #16]
    fd6c:	add	x29, sp, #0x10
    fd70:	mov	w8, #0x5                   	// #5
    fd74:	sub	x0, x29, #0x4
    fd78:	stur	w8, [x29, #-4]
    fd7c:	bl	8880 <PyLong_FromVoidPtr@plt>
    fd80:	ldp	x29, x30, [sp, #16]
    fd84:	add	sp, sp, #0x20
    fd88:	ret
    fd8c:	sub	sp, sp, #0x20
    fd90:	stp	x29, x30, [sp, #16]
    fd94:	add	x29, sp, #0x10
    fd98:	mov	x0, x1
    fd9c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
    fda0:	add	x1, x1, #0x8d3
    fda4:	sub	x2, x29, #0x4
    fda8:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
    fdac:	cbz	w0, fdc8 <PyInit__testcapi@@Base+0x6c08>
    fdb0:	ldur	w8, [x29, #-4]
    fdb4:	mov	w9, #0x7f                  	// #127
    fdb8:	bfi	w9, w8, #8, #24
    fdbc:	sxtw	x0, w9
    fdc0:	bl	8840 <PyLong_FromLong@plt>
    fdc4:	b	fdcc <PyInit__testcapi@@Base+0x6c0c>
    fdc8:	mov	x0, xzr
    fdcc:	ldp	x29, x30, [sp, #16]
    fdd0:	add	sp, sp, #0x20
    fdd4:	ret
    fdd8:	stp	x29, x30, [sp, #-16]!
    fddc:	mov	x29, sp
    fde0:	mov	x0, x1
    fde4:	bl	8530 <PyMapping_Keys@plt>
    fde8:	ldp	x29, x30, [sp], #16
    fdec:	ret
    fdf0:	stp	x29, x30, [sp, #-16]!
    fdf4:	mov	x29, sp
    fdf8:	mov	x0, x1
    fdfc:	bl	8dc0 <PyMapping_Values@plt>
    fe00:	ldp	x29, x30, [sp], #16
    fe04:	ret
    fe08:	stp	x29, x30, [sp, #-16]!
    fe0c:	mov	x29, sp
    fe10:	mov	x0, x1
    fe14:	bl	8290 <PyMapping_Items@plt>
    fe18:	ldp	x29, x30, [sp], #16
    fe1c:	ret
    fe20:	stp	x29, x30, [sp, #-32]!
    fe24:	str	x19, [sp, #16]
    fe28:	mov	x29, sp
    fe2c:	add	x0, x29, #0x18
    fe30:	str	xzr, [x29, #24]
    fe34:	bl	8520 <PyThread_tss_is_created@plt>
    fe38:	cbz	w0, fe54 <PyInit__testcapi@@Base+0x6c94>
    fe3c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    fe40:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fe44:	add	x0, x0, #0x659
    fe48:	add	x1, x1, #0x218
    fe4c:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
    fe50:	b	fe78 <PyInit__testcapi@@Base+0x6cb8>
    fe54:	add	x0, x29, #0x18
    fe58:	bl	8350 <PyThread_tss_create@plt>
    fe5c:	cbz	w0, fe8c <PyInit__testcapi@@Base+0x6ccc>
    fe60:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    fe64:	ldr	x8, [x8, #3928]
    fe68:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fe6c:	add	x1, x1, #0x24f
    fe70:	ldr	x0, [x8]
    fe74:	bl	8670 <PyErr_SetString@plt>
    fe78:	mov	x19, xzr
    fe7c:	mov	x0, x19
    fe80:	ldr	x19, [sp, #16]
    fe84:	ldp	x29, x30, [sp], #32
    fe88:	ret
    fe8c:	add	x0, x29, #0x18
    fe90:	bl	8520 <PyThread_tss_is_created@plt>
    fe94:	cbz	w0, feb8 <PyInit__testcapi@@Base+0x6cf8>
    fe98:	add	x0, x29, #0x18
    fe9c:	bl	8350 <PyThread_tss_create@plt>
    fea0:	cbz	w0, fecc <PyInit__testcapi@@Base+0x6d0c>
    fea4:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    fea8:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    feac:	add	x0, x0, #0x659
    feb0:	add	x1, x1, #0x2b4
    feb4:	b	fe4c <PyInit__testcapi@@Base+0x6c8c>
    feb8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    febc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    fec0:	add	x0, x0, #0x659
    fec4:	add	x1, x1, #0x26a
    fec8:	b	fe4c <PyInit__testcapi@@Base+0x6c8c>
    fecc:	add	x0, x29, #0x18
    fed0:	mov	x1, xzr
    fed4:	bl	8c00 <PyThread_tss_set@plt>
    fed8:	add	x0, x29, #0x18
    fedc:	bl	8520 <PyThread_tss_is_created@plt>
    fee0:	cbz	w0, ff20 <PyInit__testcapi@@Base+0x6d60>
    fee4:	add	x0, x29, #0x18
    fee8:	bl	8f10 <PyThread_tss_get@plt>
    feec:	add	x0, x29, #0x18
    fef0:	bl	8520 <PyThread_tss_is_created@plt>
    fef4:	cbz	w0, ff34 <PyInit__testcapi@@Base+0x6d74>
    fef8:	add	x0, x29, #0x18
    fefc:	bl	8d90 <PyThread_tss_delete@plt>
    ff00:	add	x0, x29, #0x18
    ff04:	bl	8520 <PyThread_tss_is_created@plt>
    ff08:	cbz	w0, ff48 <PyInit__testcapi@@Base+0x6d88>
    ff0c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    ff10:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    ff14:	add	x0, x0, #0x659
    ff18:	add	x1, x1, #0x3ab
    ff1c:	b	fe4c <PyInit__testcapi@@Base+0x6c8c>
    ff20:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    ff24:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    ff28:	add	x0, x0, #0x659
    ff2c:	add	x1, x1, #0x2f5
    ff30:	b	fe4c <PyInit__testcapi@@Base+0x6c8c>
    ff34:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    ff38:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    ff3c:	add	x0, x0, #0x659
    ff40:	add	x1, x1, #0x353
    ff44:	b	fe4c <PyInit__testcapi@@Base+0x6c8c>
    ff48:	bl	8ba0 <PyThread_tss_alloc@plt>
    ff4c:	mov	x19, x0
    ff50:	cbz	x0, ff74 <PyInit__testcapi@@Base+0x6db4>
    ff54:	mov	x0, x19
    ff58:	bl	8520 <PyThread_tss_is_created@plt>
    ff5c:	cbz	w0, ff90 <PyInit__testcapi@@Base+0x6dd0>
    ff60:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
    ff64:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    ff68:	add	x0, x0, #0x659
    ff6c:	add	x1, x1, #0x410
    ff70:	b	fe4c <PyInit__testcapi@@Base+0x6c8c>
    ff74:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
    ff78:	ldr	x8, [x8, #3928]
    ff7c:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
    ff80:	add	x1, x1, #0x3f6
    ff84:	ldr	x0, [x8]
    ff88:	bl	8670 <PyErr_SetString@plt>
    ff8c:	b	fe7c <PyInit__testcapi@@Base+0x6cbc>
    ff90:	mov	x0, x19
    ff94:	bl	83a0 <PyThread_tss_free@plt>
    ff98:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
    ff9c:	ldr	x19, [x19, #4016]
    ffa0:	mov	x0, x19
    ffa4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
    ffa8:	b	fe7c <PyInit__testcapi@@Base+0x6cbc>
    ffac:	stp	x29, x30, [sp, #-16]!
    ffb0:	mov	x29, sp
    ffb4:	bl	8da0 <_PyContext_NewHamtForTests@plt>
    ffb8:	ldp	x29, x30, [sp], #16
    ffbc:	ret
    ffc0:	sub	sp, sp, #0x30
    ffc4:	stp	x29, x30, [sp, #32]
    ffc8:	add	x29, sp, #0x20
    ffcc:	mov	x8, x2
    ffd0:	adrp	x2, 13000 <PyInit__testcapi@@Base+0x9e40>
    ffd4:	mov	x0, x1
    ffd8:	add	x2, x2, #0x67a
    ffdc:	sub	x5, x29, #0x8
    ffe0:	add	x6, sp, #0x10
    ffe4:	add	x7, sp, #0x8
    ffe8:	mov	w3, #0x3                   	// #3
    ffec:	mov	w4, #0x3                   	// #3
    fff0:	mov	x1, x8
    fff4:	bl	8710 <_PyArg_UnpackStack@plt>
    fff8:	cbz	w0, 1001c <PyInit__testcapi@@Base+0x6e5c>
    fffc:	ldr	x0, [sp, #8]
   10000:	mov	x1, xzr
   10004:	bl	89e0 <PyObject_CallObject@plt>
   10008:	cbz	x0, 10020 <PyInit__testcapi@@Base+0x6e60>
   1000c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10010:	ldur	x0, [x29, #-8]
   10014:	bl	8db0 <PyObject_Repr@plt>
   10018:	b	10020 <PyInit__testcapi@@Base+0x6e60>
   1001c:	mov	x0, xzr
   10020:	ldp	x29, x30, [sp, #32]
   10024:	add	sp, sp, #0x30
   10028:	ret
   1002c:	sub	sp, sp, #0x50
   10030:	stp	x29, x30, [sp, #48]
   10034:	stp	x20, x19, [sp, #64]
   10038:	add	x29, sp, #0x30
   1003c:	mov	x0, x1
   10040:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   10044:	add	x1, x1, #0x449
   10048:	sub	x2, x29, #0x8
   1004c:	sub	x3, x29, #0xc
   10050:	add	x4, sp, #0x18
   10054:	stur	wzr, [x29, #-12]
   10058:	str	xzr, [sp, #24]
   1005c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10060:	cbz	w0, 10128 <PyInit__testcapi@@Base+0x6f68>
   10064:	ldur	x0, [x29, #-8]
   10068:	mov	x1, xzr
   1006c:	bl	8c70 <PyUnicode_AsWideCharString@plt>
   10070:	mov	x19, x0
   10074:	cbz	x0, 1012c <PyInit__testcapi@@Base+0x6f6c>
   10078:	ldr	x0, [sp, #24]
   1007c:	bl	83c0 <_Py_GetErrorHandler@plt>
   10080:	ldur	w4, [x29, #-12]
   10084:	mov	w5, w0
   10088:	add	x1, sp, #0x10
   1008c:	add	x2, sp, #0x8
   10090:	mov	x3, sp
   10094:	mov	x0, x19
   10098:	str	xzr, [sp, #16]
   1009c:	str	xzr, [sp]
   100a0:	bl	8340 <_Py_EncodeLocaleEx@plt>
   100a4:	mov	w20, w0
   100a8:	mov	x0, x19
   100ac:	bl	83d0 <PyMem_Free@plt>
   100b0:	add	w8, w20, #0x3
   100b4:	cmp	w8, #0x3
   100b8:	b.hi	100e8 <PyInit__testcapi@@Base+0x6f28>  // b.pmore
   100bc:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e40>
   100c0:	add	x9, x9, #0x118
   100c4:	adr	x10, 100d4 <PyInit__testcapi@@Base+0x6f14>
   100c8:	ldrb	w11, [x9, x8]
   100cc:	add	x10, x10, x11, lsl #2
   100d0:	br	x10
   100d4:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   100d8:	ldr	x8, [x8, #3944]
   100dc:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   100e0:	add	x1, x1, #0x46f
   100e4:	b	100f8 <PyInit__testcapi@@Base+0x6f38>
   100e8:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   100ec:	ldr	x8, [x8, #3944]
   100f0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   100f4:	add	x1, x1, #0x489
   100f8:	ldr	x0, [x8]
   100fc:	bl	8670 <PyErr_SetString@plt>
   10100:	b	10128 <PyInit__testcapi@@Base+0x6f68>
   10104:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   10108:	ldr	x8, [x8, #3928]
   1010c:	ldp	x3, x2, [sp]
   10110:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   10114:	add	x1, x1, #0x44e
   10118:	ldr	x0, [x8]
   1011c:	bl	8e60 <PyErr_Format@plt>
   10120:	b	10128 <PyInit__testcapi@@Base+0x6f68>
   10124:	bl	8570 <PyErr_NoMemory@plt>
   10128:	mov	x19, xzr
   1012c:	mov	x0, x19
   10130:	ldp	x20, x19, [sp, #64]
   10134:	ldp	x29, x30, [sp, #48]
   10138:	add	sp, sp, #0x50
   1013c:	ret
   10140:	ldr	x0, [sp, #16]
   10144:	bl	8970 <PyBytes_FromString@plt>
   10148:	ldr	x8, [sp, #16]
   1014c:	mov	x19, x0
   10150:	mov	x0, x8
   10154:	bl	8a10 <PyMem_RawFree@plt>
   10158:	b	1012c <PyInit__testcapi@@Base+0x6f6c>
   1015c:	sub	sp, sp, #0x50
   10160:	stp	x29, x30, [sp, #48]
   10164:	str	x19, [sp, #64]
   10168:	add	x29, sp, #0x30
   1016c:	mov	x0, x1
   10170:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   10174:	add	x1, x1, #0x49b
   10178:	add	x2, x29, #0x18
   1017c:	sub	x3, x29, #0x4
   10180:	sub	x4, x29, #0x10
   10184:	stur	wzr, [x29, #-4]
   10188:	stur	xzr, [x29, #-16]
   1018c:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10190:	cbz	w0, 10238 <PyInit__testcapi@@Base+0x7078>
   10194:	ldur	x0, [x29, #-16]
   10198:	bl	83c0 <_Py_GetErrorHandler@plt>
   1019c:	mov	w5, w0
   101a0:	ldr	x0, [x29, #24]
   101a4:	ldur	w4, [x29, #-4]
   101a8:	add	x1, sp, #0x18
   101ac:	add	x2, sp, #0x10
   101b0:	add	x3, sp, #0x8
   101b4:	stp	xzr, xzr, [sp, #16]
   101b8:	str	xzr, [sp, #8]
   101bc:	bl	87a0 <_Py_DecodeLocaleEx@plt>
   101c0:	add	w8, w0, #0x3
   101c4:	cmp	w8, #0x3
   101c8:	b.hi	101f8 <PyInit__testcapi@@Base+0x7038>  // b.pmore
   101cc:	adrp	x9, 12000 <PyInit__testcapi@@Base+0x8e40>
   101d0:	add	x9, x9, #0x11c
   101d4:	adr	x10, 101e4 <PyInit__testcapi@@Base+0x7024>
   101d8:	ldrb	w11, [x9, x8]
   101dc:	add	x10, x10, x11, lsl #2
   101e0:	br	x10
   101e4:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   101e8:	ldr	x8, [x8, #3944]
   101ec:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   101f0:	add	x1, x1, #0x46f
   101f4:	b	10208 <PyInit__testcapi@@Base+0x7048>
   101f8:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   101fc:	ldr	x8, [x8, #3944]
   10200:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   10204:	add	x1, x1, #0x489
   10208:	ldr	x0, [x8]
   1020c:	bl	8670 <PyErr_SetString@plt>
   10210:	b	10238 <PyInit__testcapi@@Base+0x7078>
   10214:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   10218:	ldr	x8, [x8, #3928]
   1021c:	ldp	x3, x2, [sp, #8]
   10220:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   10224:	add	x1, x1, #0x4a0
   10228:	ldr	x0, [x8]
   1022c:	bl	8e60 <PyErr_Format@plt>
   10230:	b	10238 <PyInit__testcapi@@Base+0x7078>
   10234:	bl	8570 <PyErr_NoMemory@plt>
   10238:	mov	x19, xzr
   1023c:	mov	x0, x19
   10240:	ldr	x19, [sp, #64]
   10244:	ldp	x29, x30, [sp, #48]
   10248:	add	sp, sp, #0x50
   1024c:	ret
   10250:	ldp	x1, x0, [sp, #16]
   10254:	bl	8400 <PyUnicode_FromWideChar@plt>
   10258:	ldr	x8, [sp, #24]
   1025c:	mov	x19, x0
   10260:	mov	x0, x8
   10264:	bl	8a10 <PyMem_RawFree@plt>
   10268:	b	1023c <PyInit__testcapi@@Base+0x707c>
   1026c:	sub	sp, sp, #0x30
   10270:	stp	x29, x30, [sp, #16]
   10274:	str	x19, [sp, #32]
   10278:	add	x29, sp, #0x10
   1027c:	mov	x0, x1
   10280:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   10284:	add	x1, x1, #0x18c
   10288:	add	x2, x29, #0x18
   1028c:	add	x3, sp, #0x8
   10290:	mov	x4, sp
   10294:	bl	8a70 <_PyArg_ParseTuple_SizeT@plt>
   10298:	cbz	w0, 102c0 <PyInit__testcapi@@Base+0x7100>
   1029c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   102a0:	ldr	x0, [sp, #8]
   102a4:	ldr	x8, [x8, #4016]
   102a8:	cmp	x0, x8
   102ac:	b.eq	102c8 <PyInit__testcapi@@Base+0x7108>  // b.none
   102b0:	bl	8ca0 <PyUnicode_AsUTF8@plt>
   102b4:	mov	x19, x0
   102b8:	cbnz	x0, 102cc <PyInit__testcapi@@Base+0x710c>
   102bc:	b	102f4 <PyInit__testcapi@@Base+0x7134>
   102c0:	mov	x19, xzr
   102c4:	b	102f4 <PyInit__testcapi@@Base+0x7134>
   102c8:	mov	x19, xzr
   102cc:	ldr	x1, [x29, #24]
   102d0:	ldr	x0, [x1, #8]
   102d4:	bl	8580 <PyErr_SetObject@plt>
   102d8:	ldr	x1, [sp]
   102dc:	mov	x0, x19
   102e0:	bl	89c0 <_PyErr_WriteUnraisableMsg@plt>
   102e4:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
   102e8:	ldr	x19, [x19, #4016]
   102ec:	mov	x0, x19
   102f0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   102f4:	mov	x0, x19
   102f8:	ldr	x19, [sp, #32]
   102fc:	ldp	x29, x30, [sp, #16]
   10300:	add	sp, sp, #0x30
   10304:	ret
   10308:	sub	sp, sp, #0x50
   1030c:	stp	x29, x30, [sp, #16]
   10310:	str	x23, [sp, #32]
   10314:	stp	x22, x21, [sp, #48]
   10318:	stp	x20, x19, [sp, #64]
   1031c:	add	x29, sp, #0x10
   10320:	mov	w20, w0
   10324:	str	xzr, [x29, #24]
   10328:	bl	8c20 <PyDict_New@plt>
   1032c:	cbz	x0, 10404 <PyInit__testcapi@@Base+0x7244>
   10330:	mov	x19, x0
   10334:	cmp	w20, #0x0
   10338:	b.le	10384 <PyInit__testcapi@@Base+0x71c4>
   1033c:	mov	x21, xzr
   10340:	mov	w23, w20
   10344:	mov	x0, x21
   10348:	bl	8840 <PyLong_FromLong@plt>
   1034c:	str	x0, [sp, #8]
   10350:	cbz	x0, 10404 <PyInit__testcapi@@Base+0x7244>
   10354:	mov	x1, x0
   10358:	mov	x0, x19
   1035c:	mov	x2, x1
   10360:	bl	8d80 <PyDict_SetItem@plt>
   10364:	ldr	x8, [sp, #8]
   10368:	mov	w22, w0
   1036c:	mov	x0, x8
   10370:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10374:	tbnz	w22, #31, 10404 <PyInit__testcapi@@Base+0x7244>
   10378:	add	x21, x21, #0x1
   1037c:	cmp	x23, x21
   10380:	b.ne	10344 <PyInit__testcapi@@Base+0x7184>  // b.any
   10384:	sxtw	x22, w20
   10388:	add	x1, x29, #0x18
   1038c:	mov	x2, sp
   10390:	add	x3, sp, #0x8
   10394:	mov	x0, x19
   10398:	bl	8c60 <PyDict_Next@plt>
   1039c:	cbz	w0, 103e4 <PyInit__testcapi@@Base+0x7224>
   103a0:	ldr	x0, [sp, #8]
   103a4:	bl	89a0 <PyLong_AsLong@plt>
   103a8:	add	w8, w0, #0x1
   103ac:	sxtw	x0, w8
   103b0:	bl	8840 <PyLong_FromLong@plt>
   103b4:	cbz	x0, 10404 <PyInit__testcapi@@Base+0x7244>
   103b8:	ldr	x1, [sp]
   103bc:	mov	x20, x0
   103c0:	mov	x0, x19
   103c4:	mov	x2, x20
   103c8:	bl	8d80 <PyDict_SetItem@plt>
   103cc:	mov	w21, w0
   103d0:	mov	x0, x20
   103d4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   103d8:	sub	x22, x22, #0x1
   103dc:	tbz	w21, #31, 10388 <PyInit__testcapi@@Base+0x71c8>
   103e0:	b	10404 <PyInit__testcapi@@Base+0x7244>
   103e4:	mov	x0, x19
   103e8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   103ec:	cbz	x22, 10420 <PyInit__testcapi@@Base+0x7260>
   103f0:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   103f4:	ldr	x0, [x8, #3520]
   103f8:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
   103fc:	add	x1, x1, #0x764
   10400:	bl	8670 <PyErr_SetString@plt>
   10404:	mov	w0, #0xffffffff            	// #-1
   10408:	ldp	x20, x19, [sp, #64]
   1040c:	ldp	x22, x21, [sp, #48]
   10410:	ldr	x23, [sp, #32]
   10414:	ldp	x29, x30, [sp, #16]
   10418:	add	sp, sp, #0x50
   1041c:	ret
   10420:	mov	w0, wzr
   10424:	b	10408 <PyInit__testcapi@@Base+0x7248>
   10428:	cbz	x0, 1043c <PyInit__testcapi@@Base+0x727c>
   1042c:	stp	x29, x30, [sp, #-16]!
   10430:	mov	x29, sp
   10434:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   10438:	ldp	x29, x30, [sp], #16
   1043c:	ret
   10440:	stp	x29, x30, [sp, #-96]!
   10444:	stp	x28, x27, [sp, #16]
   10448:	stp	x26, x25, [sp, #32]
   1044c:	stp	x24, x23, [sp, #48]
   10450:	stp	x22, x21, [sp, #64]
   10454:	stp	x20, x19, [sp, #80]
   10458:	mov	x29, sp
   1045c:	mov	w22, #0xaaab                	// #43691
   10460:	mov	w23, wzr
   10464:	mov	w24, #0x1                   	// #1
   10468:	movk	w22, #0xaaaa, lsl #16
   1046c:	mov	w21, wzr
   10470:	neg	x25, x24
   10474:	mov	w20, #0xffffffff            	// #-1
   10478:	umull	x8, w21, w22
   1047c:	lsr	x8, x8, #33
   10480:	cmp	w21, #0x3
   10484:	add	w8, w8, w8, lsl #1
   10488:	sub	w8, w20, w8
   1048c:	csel	x9, x24, x25, cc  // cc = lo, ul, last
   10490:	add	x26, x9, w8, sxtw
   10494:	mov	x0, x26
   10498:	bl	8c80 <PyLong_FromUnsignedLong@plt>
   1049c:	cbz	x0, 10500 <PyInit__testcapi@@Base+0x7340>
   104a0:	mov	x27, x0
   104a4:	bl	8c50 <PyLong_AsUnsignedLong@plt>
   104a8:	mov	x28, x0
   104ac:	cmn	x0, #0x1
   104b0:	b.eq	10518 <PyInit__testcapi@@Base+0x7358>  // b.none
   104b4:	cmp	x28, x26
   104b8:	b.ne	1050c <PyInit__testcapi@@Base+0x734c>  // b.any
   104bc:	mov	x0, x27
   104c0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   104c4:	mov	x0, x26
   104c8:	bl	8840 <PyLong_FromLong@plt>
   104cc:	cbz	x0, 1052c <PyInit__testcapi@@Base+0x736c>
   104d0:	mov	x27, x0
   104d4:	bl	89a0 <PyLong_AsLong@plt>
   104d8:	mov	x28, x0
   104dc:	cmn	x0, #0x1
   104e0:	b.eq	10544 <PyInit__testcapi@@Base+0x7384>  // b.none
   104e4:	cmp	x28, x26
   104e8:	b.ne	10538 <PyInit__testcapi@@Base+0x7378>  // b.any
   104ec:	mov	x0, x27
   104f0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   104f4:	mov	w8, wzr
   104f8:	cbz	w8, 10564 <PyInit__testcapi@@Base+0x73a4>
   104fc:	b	10578 <PyInit__testcapi@@Base+0x73b8>
   10500:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10504:	add	x0, x0, #0x8f0
   10508:	b	10554 <PyInit__testcapi@@Base+0x7394>
   1050c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10510:	add	x0, x0, #0x92e
   10514:	b	10554 <PyInit__testcapi@@Base+0x7394>
   10518:	bl	8980 <PyErr_Occurred@plt>
   1051c:	cbz	x0, 104b4 <PyInit__testcapi@@Base+0x72f4>
   10520:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10524:	add	x0, x0, #0x910
   10528:	b	10554 <PyInit__testcapi@@Base+0x7394>
   1052c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10530:	add	x0, x0, #0x8f2
   10534:	b	10554 <PyInit__testcapi@@Base+0x7394>
   10538:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   1053c:	add	x0, x0, #0x930
   10540:	b	10554 <PyInit__testcapi@@Base+0x7394>
   10544:	bl	8980 <PyErr_Occurred@plt>
   10548:	cbz	x0, 104e4 <PyInit__testcapi@@Base+0x7324>
   1054c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10550:	add	x0, x0, #0x912
   10554:	bl	1087c <PyInit__testcapi@@Base+0x76bc>
   10558:	mov	x19, x0
   1055c:	mov	w8, #0x1                   	// #1
   10560:	cbnz	w8, 10578 <PyInit__testcapi@@Base+0x73b8>
   10564:	add	w21, w21, #0x1
   10568:	cmp	w21, #0x6
   1056c:	add	w20, w20, #0x1
   10570:	b.ne	10478 <PyInit__testcapi@@Base+0x72b8>  // b.any
   10574:	mov	w8, wzr
   10578:	cbnz	w8, 10784 <PyInit__testcapi@@Base+0x75c4>
   1057c:	add	w23, w23, #0x1
   10580:	cmp	w23, #0x41
   10584:	lsl	x24, x24, #1
   10588:	b.ne	1046c <PyInit__testcapi@@Base+0x72ac>  // b.any
   1058c:	mov	w0, #0x1                   	// #1
   10590:	bl	8840 <PyLong_FromLong@plt>
   10594:	cbz	x0, 10630 <PyInit__testcapi@@Base+0x7470>
   10598:	mov	x20, x0
   1059c:	bl	8270 <PyNumber_Negative@plt>
   105a0:	cbz	x0, 10724 <PyInit__testcapi@@Base+0x7564>
   105a4:	mov	x21, x0
   105a8:	bl	8c50 <PyLong_AsUnsignedLong@plt>
   105ac:	cmn	x0, #0x1
   105b0:	b.eq	105c0 <PyInit__testcapi@@Base+0x7400>  // b.none
   105b4:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   105b8:	add	x0, x0, #0x993
   105bc:	b	1072c <PyInit__testcapi@@Base+0x756c>
   105c0:	bl	8980 <PyErr_Occurred@plt>
   105c4:	cbz	x0, 105b4 <PyInit__testcapi@@Base+0x73f4>
   105c8:	adrp	x24, 25000 <PyInit__testcapi@@Base+0x1be40>
   105cc:	ldr	x24, [x24, #4000]
   105d0:	ldr	x0, [x24]
   105d4:	bl	8760 <PyErr_ExceptionMatches@plt>
   105d8:	cbz	w0, 1063c <PyInit__testcapi@@Base+0x747c>
   105dc:	bl	88c0 <PyErr_Clear@plt>
   105e0:	mov	x0, x21
   105e4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   105e8:	mov	w0, #0x40                  	// #64
   105ec:	bl	8840 <PyLong_FromLong@plt>
   105f0:	cbz	x0, 10630 <PyInit__testcapi@@Base+0x7470>
   105f4:	mov	x22, x0
   105f8:	mov	x0, x20
   105fc:	mov	x1, x22
   10600:	bl	8390 <PyNumber_Lshift@plt>
   10604:	mov	x21, x0
   10608:	mov	x0, x22
   1060c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10610:	cbz	x21, 10648 <PyInit__testcapi@@Base+0x7488>
   10614:	mov	x0, x21
   10618:	bl	8c50 <PyLong_AsUnsignedLong@plt>
   1061c:	cmn	x0, #0x1
   10620:	b.eq	10654 <PyInit__testcapi@@Base+0x7494>  // b.none
   10624:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10628:	add	x0, x0, #0xa24
   1062c:	b	1072c <PyInit__testcapi@@Base+0x756c>
   10630:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10634:	add	x0, x0, #0x947
   10638:	b	1072c <PyInit__testcapi@@Base+0x756c>
   1063c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10640:	add	x0, x0, #0x9bc
   10644:	b	1072c <PyInit__testcapi@@Base+0x756c>
   10648:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   1064c:	add	x0, x0, #0x9ff
   10650:	b	1072c <PyInit__testcapi@@Base+0x756c>
   10654:	bl	8980 <PyErr_Occurred@plt>
   10658:	cbz	x0, 10624 <PyInit__testcapi@@Base+0x7464>
   1065c:	ldr	x0, [x24]
   10660:	bl	8760 <PyErr_ExceptionMatches@plt>
   10664:	cbz	w0, 106a4 <PyInit__testcapi@@Base+0x74e4>
   10668:	bl	88c0 <PyErr_Clear@plt>
   1066c:	mov	x0, x21
   10670:	mov	x1, x20
   10674:	bl	8b60 <PyNumber_Rshift@plt>
   10678:	mov	x22, x0
   1067c:	mov	x0, x21
   10680:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10684:	cbz	x22, 106b0 <PyInit__testcapi@@Base+0x74f0>
   10688:	mov	x0, x22
   1068c:	bl	89a0 <PyLong_AsLong@plt>
   10690:	cmn	x0, #0x1
   10694:	b.eq	106bc <PyInit__testcapi@@Base+0x74fc>  // b.none
   10698:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   1069c:	add	x0, x0, #0xac1
   106a0:	b	1072c <PyInit__testcapi@@Base+0x756c>
   106a4:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   106a8:	add	x0, x0, #0xa53
   106ac:	b	1072c <PyInit__testcapi@@Base+0x756c>
   106b0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   106b4:	add	x0, x0, #0xa9c
   106b8:	b	1072c <PyInit__testcapi@@Base+0x756c>
   106bc:	bl	8980 <PyErr_Occurred@plt>
   106c0:	cbz	x0, 10698 <PyInit__testcapi@@Base+0x74d8>
   106c4:	ldr	x0, [x24]
   106c8:	bl	8760 <PyErr_ExceptionMatches@plt>
   106cc:	cbz	w0, 10814 <PyInit__testcapi@@Base+0x7654>
   106d0:	bl	88c0 <PyErr_Clear@plt>
   106d4:	mov	x0, x22
   106d8:	bl	8270 <PyNumber_Negative@plt>
   106dc:	mov	x23, x0
   106e0:	mov	x0, x22
   106e4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   106e8:	cbz	x23, 10724 <PyInit__testcapi@@Base+0x7564>
   106ec:	mov	x0, x23
   106f0:	mov	x1, x20
   106f4:	bl	8fe0 <PyNumber_Subtract@plt>
   106f8:	mov	x21, x0
   106fc:	mov	x0, x23
   10700:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10704:	cbz	x21, 10820 <PyInit__testcapi@@Base+0x7660>
   10708:	mov	x0, x21
   1070c:	bl	89a0 <PyLong_AsLong@plt>
   10710:	cmn	x0, #0x1
   10714:	b.eq	1082c <PyInit__testcapi@@Base+0x766c>  // b.none
   10718:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   1071c:	add	x0, x0, #0xb58
   10720:	b	1072c <PyInit__testcapi@@Base+0x756c>
   10724:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10728:	add	x0, x0, #0x96c
   1072c:	bl	1087c <PyInit__testcapi@@Base+0x76bc>
   10730:	mov	x19, x0
   10734:	mov	w8, wzr
   10738:	cbz	w8, 10784 <PyInit__testcapi@@Base+0x75c4>
   1073c:	adrp	x20, 25000 <PyInit__testcapi@@Base+0x1be40>
   10740:	ldr	x20, [x20, #4016]
   10744:	mov	x0, x20
   10748:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   1074c:	mov	x0, x20
   10750:	bl	89a0 <PyLong_AsLong@plt>
   10754:	cmn	x0, #0x1
   10758:	b.eq	107a4 <PyInit__testcapi@@Base+0x75e4>  // b.none
   1075c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10760:	add	x0, x0, #0xbce
   10764:	bl	1087c <PyInit__testcapi@@Base+0x76bc>
   10768:	mov	x19, x0
   1076c:	mov	w8, wzr
   10770:	cbz	w8, 10784 <PyInit__testcapi@@Base+0x75c4>
   10774:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
   10778:	ldr	x19, [x19, #4016]
   1077c:	mov	x0, x19
   10780:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   10784:	mov	x0, x19
   10788:	ldp	x20, x19, [sp, #80]
   1078c:	ldp	x22, x21, [sp, #64]
   10790:	ldp	x24, x23, [sp, #48]
   10794:	ldp	x26, x25, [sp, #32]
   10798:	ldp	x28, x27, [sp, #16]
   1079c:	ldp	x29, x30, [sp], #96
   107a0:	ret
   107a4:	bl	8980 <PyErr_Occurred@plt>
   107a8:	cbz	x0, 1075c <PyInit__testcapi@@Base+0x759c>
   107ac:	adrp	x20, 25000 <PyInit__testcapi@@Base+0x1be40>
   107b0:	ldr	x20, [x20, #3952]
   107b4:	ldr	x0, [x20]
   107b8:	bl	8760 <PyErr_ExceptionMatches@plt>
   107bc:	cbz	w0, 10808 <PyInit__testcapi@@Base+0x7648>
   107c0:	bl	88c0 <PyErr_Clear@plt>
   107c4:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
   107c8:	ldr	x0, [x0, #4016]
   107cc:	bl	8c50 <PyLong_AsUnsignedLong@plt>
   107d0:	cmn	x0, #0x1
   107d4:	b.ne	1075c <PyInit__testcapi@@Base+0x759c>  // b.any
   107d8:	bl	8980 <PyErr_Occurred@plt>
   107dc:	cbz	x0, 1075c <PyInit__testcapi@@Base+0x759c>
   107e0:	ldr	x0, [x20]
   107e4:	bl	8760 <PyErr_ExceptionMatches@plt>
   107e8:	cbz	w0, 10808 <PyInit__testcapi@@Base+0x7648>
   107ec:	bl	88c0 <PyErr_Clear@plt>
   107f0:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
   107f4:	ldr	x0, [x0, #4016]
   107f8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   107fc:	mov	w8, #0x1                   	// #1
   10800:	cbnz	w8, 10774 <PyInit__testcapi@@Base+0x75b4>
   10804:	b	10784 <PyInit__testcapi@@Base+0x75c4>
   10808:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   1080c:	add	x0, x0, #0xbf1
   10810:	b	10764 <PyInit__testcapi@@Base+0x75a4>
   10814:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10818:	add	x0, x0, #0xaec
   1081c:	b	1072c <PyInit__testcapi@@Base+0x756c>
   10820:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10824:	add	x0, x0, #0xb31
   10828:	b	1072c <PyInit__testcapi@@Base+0x756c>
   1082c:	bl	8980 <PyErr_Occurred@plt>
   10830:	cbz	x0, 10718 <PyInit__testcapi@@Base+0x7558>
   10834:	ldr	x0, [x24]
   10838:	bl	8760 <PyErr_ExceptionMatches@plt>
   1083c:	cbz	w0, 10870 <PyInit__testcapi@@Base+0x76b0>
   10840:	bl	88c0 <PyErr_Clear@plt>
   10844:	mov	x0, x21
   10848:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   1084c:	mov	x0, xzr
   10850:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   10854:	mov	x0, xzr
   10858:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   1085c:	mov	x0, x20
   10860:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10864:	mov	w8, #0x1                   	// #1
   10868:	cbnz	w8, 1073c <PyInit__testcapi@@Base+0x757c>
   1086c:	b	10784 <PyInit__testcapi@@Base+0x75c4>
   10870:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10874:	add	x0, x0, #0xb86
   10878:	b	1072c <PyInit__testcapi@@Base+0x756c>
   1087c:	stp	x29, x30, [sp, #-16]!
   10880:	mov	x29, sp
   10884:	mov	x1, x0
   10888:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
   1088c:	add	x0, x0, #0xbc0
   10890:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
   10894:	mov	x0, xzr
   10898:	ldp	x29, x30, [sp], #16
   1089c:	ret
   108a0:	cbz	x0, 108b4 <PyInit__testcapi@@Base+0x76f4>
   108a4:	stp	x29, x30, [sp, #-16]!
   108a8:	mov	x29, sp
   108ac:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   108b0:	ldp	x29, x30, [sp], #16
   108b4:	ret
   108b8:	stp	x29, x30, [sp, #-16]!
   108bc:	mov	x29, sp
   108c0:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   108c4:	ldr	x8, [x8, #3520]
   108c8:	mov	x3, x1
   108cc:	adrp	x1, 13000 <PyInit__testcapi@@Base+0x9e40>
   108d0:	mov	x2, x0
   108d4:	add	x1, x1, #0xc2a
   108d8:	mov	x0, x8
   108dc:	bl	8e60 <PyErr_Format@plt>
   108e0:	ldp	x29, x30, [sp], #16
   108e4:	ret
   108e8:	stp	x29, x30, [sp, #-32]!
   108ec:	str	x19, [sp, #16]
   108f0:	mov	x29, sp
   108f4:	mov	x19, x0
   108f8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   108fc:	mov	x0, x19
   10900:	ldr	x19, [sp, #16]
   10904:	ldp	x29, x30, [sp], #32
   10908:	ret
   1090c:	stp	x29, x30, [sp, #-32]!
   10910:	str	x19, [sp, #16]
   10914:	mov	x29, sp
   10918:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   1091c:	ldr	w9, [x8, #3560]
   10920:	mov	x19, x0
   10924:	add	w9, w9, #0x1
   10928:	str	w9, [x8, #3560]
   1092c:	bl	8b50 <PyCapsule_GetContext@plt>
   10930:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
   10934:	add	x8, x8, #0x6fd
   10938:	cmp	x0, x8
   1093c:	b.eq	1094c <PyInit__testcapi@@Base+0x778c>  // b.none
   10940:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
   10944:	add	x8, x8, #0x660
   10948:	b	109bc <PyInit__testcapi@@Base+0x77fc>
   1094c:	mov	x0, x19
   10950:	bl	8ec0 <PyCapsule_GetDestructor@plt>
   10954:	adrp	x8, 10000 <PyInit__testcapi@@Base+0x6e40>
   10958:	add	x8, x8, #0x90c
   1095c:	cmp	x0, x8
   10960:	b.eq	10970 <PyInit__testcapi@@Base+0x77b0>  // b.none
   10964:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
   10968:	add	x8, x8, #0x685
   1096c:	b	109bc <PyInit__testcapi@@Base+0x77fc>
   10970:	mov	x0, x19
   10974:	bl	8440 <PyCapsule_GetName@plt>
   10978:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
   1097c:	add	x8, x8, #0x653
   10980:	cmp	x0, x8
   10984:	b.eq	10994 <PyInit__testcapi@@Base+0x77d4>  // b.none
   10988:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
   1098c:	add	x8, x8, #0x6b6
   10990:	b	109bc <PyInit__testcapi@@Base+0x77fc>
   10994:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   10998:	add	x1, x1, #0x653
   1099c:	mov	x0, x19
   109a0:	bl	8e70 <PyCapsule_GetPointer@plt>
   109a4:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
   109a8:	add	x8, x8, #0x643
   109ac:	cmp	x0, x8
   109b0:	b.eq	109c4 <PyInit__testcapi@@Base+0x7804>  // b.none
   109b4:	adrp	x8, 14000 <PyInit__testcapi@@Base+0xae40>
   109b8:	add	x8, x8, #0x6d8
   109bc:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
   109c0:	str	x8, [x9, #3552]
   109c4:	ldr	x19, [sp, #16]
   109c8:	ldp	x29, x30, [sp], #32
   109cc:	ret
   109d0:	stp	x29, x30, [sp, #-32]!
   109d4:	stp	x20, x19, [sp, #16]
   109d8:	mov	x29, sp
   109dc:	mov	x19, x0
   109e0:	mov	x0, xzr
   109e4:	bl	82a0 <PyList_New@plt>
   109e8:	cbz	x0, 10a70 <PyInit__testcapi@@Base+0x78b0>
   109ec:	mov	x20, x0
   109f0:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   109f4:	adrp	x1, 10000 <PyInit__testcapi@@Base+0x6e40>
   109f8:	add	x1, x1, #0xabc
   109fc:	mov	x0, x19
   10a00:	mov	x2, xzr
   10a04:	mov	x3, x20
   10a08:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10a0c:	cbz	x0, 10a70 <PyInit__testcapi@@Base+0x78b0>
   10a10:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10a14:	ldr	x8, [x20]
   10a18:	cmp	x8, #0x1
   10a1c:	b.ne	10a58 <PyInit__testcapi@@Base+0x7898>  // b.any
   10a20:	mov	x0, x20
   10a24:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   10a28:	adrp	x1, 10000 <PyInit__testcapi@@Base+0x6e40>
   10a2c:	add	x1, x1, #0xae8
   10a30:	mov	x0, x19
   10a34:	mov	x2, xzr
   10a38:	mov	x3, x20
   10a3c:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   10a40:	cbz	x0, 10a80 <PyInit__testcapi@@Base+0x78c0>
   10a44:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   10a48:	ldr	x0, [x8, #3520]
   10a4c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   10a50:	add	x1, x1, #0x81f
   10a54:	b	10a68 <PyInit__testcapi@@Base+0x78a8>
   10a58:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   10a5c:	ldr	x0, [x8, #3520]
   10a60:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   10a64:	add	x1, x1, #0x7d5
   10a68:	mov	x2, x19
   10a6c:	bl	8e60 <PyErr_Format@plt>
   10a70:	mov	w0, #0xffffffff            	// #-1
   10a74:	ldp	x20, x19, [sp, #16]
   10a78:	ldp	x29, x30, [sp], #32
   10a7c:	ret
   10a80:	bl	8980 <PyErr_Occurred@plt>
   10a84:	cbz	x0, 10a44 <PyInit__testcapi@@Base+0x7884>
   10a88:	bl	88c0 <PyErr_Clear@plt>
   10a8c:	ldr	x8, [x20]
   10a90:	cmp	x8, #0x1
   10a94:	b.ne	10aa8 <PyInit__testcapi@@Base+0x78e8>  // b.any
   10a98:	mov	x0, x20
   10a9c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10aa0:	mov	w0, wzr
   10aa4:	b	10a74 <PyInit__testcapi@@Base+0x78b4>
   10aa8:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   10aac:	ldr	x0, [x8, #3520]
   10ab0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   10ab4:	add	x1, x1, #0x856
   10ab8:	b	10a68 <PyInit__testcapi@@Base+0x78a8>
   10abc:	stp	x29, x30, [sp, #-32]!
   10ac0:	str	x19, [sp, #16]
   10ac4:	mov	x29, sp
   10ac8:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
   10acc:	ldr	x19, [x19, #4016]
   10ad0:	mov	x0, x19
   10ad4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   10ad8:	mov	x0, x19
   10adc:	ldr	x19, [sp, #16]
   10ae0:	ldp	x29, x30, [sp], #32
   10ae4:	ret
   10ae8:	stp	x29, x30, [sp, #-16]!
   10aec:	mov	x29, sp
   10af0:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   10af4:	ldr	x8, [x8, #3944]
   10af8:	ldr	x0, [x8]
   10afc:	bl	8750 <PyErr_SetNone@plt>
   10b00:	mov	x0, xzr
   10b04:	ldp	x29, x30, [sp], #16
   10b08:	ret
   10b0c:	stp	x29, x30, [sp, #-96]!
   10b10:	stp	x28, x27, [sp, #16]
   10b14:	stp	x26, x25, [sp, #32]
   10b18:	stp	x24, x23, [sp, #48]
   10b1c:	stp	x22, x21, [sp, #64]
   10b20:	stp	x20, x19, [sp, #80]
   10b24:	mov	x29, sp
   10b28:	mov	w22, #0xaaab                	// #43691
   10b2c:	mov	w23, wzr
   10b30:	mov	w24, #0x1                   	// #1
   10b34:	movk	w22, #0xaaaa, lsl #16
   10b38:	mov	w21, wzr
   10b3c:	neg	x25, x24
   10b40:	mov	w20, #0xffffffff            	// #-1
   10b44:	umull	x8, w21, w22
   10b48:	lsr	x8, x8, #33
   10b4c:	cmp	w21, #0x3
   10b50:	add	w8, w8, w8, lsl #1
   10b54:	sub	w8, w20, w8
   10b58:	csel	x9, x24, x25, cc  // cc = lo, ul, last
   10b5c:	add	x26, x9, w8, sxtw
   10b60:	mov	x0, x26
   10b64:	bl	8450 <PyLong_FromUnsignedLongLong@plt>
   10b68:	cbz	x0, 10bcc <PyInit__testcapi@@Base+0x7a0c>
   10b6c:	mov	x27, x0
   10b70:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
   10b74:	mov	x28, x0
   10b78:	cmn	x0, #0x1
   10b7c:	b.eq	10be4 <PyInit__testcapi@@Base+0x7a24>  // b.none
   10b80:	cmp	x28, x26
   10b84:	b.ne	10bd8 <PyInit__testcapi@@Base+0x7a18>  // b.any
   10b88:	mov	x0, x27
   10b8c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10b90:	mov	x0, x26
   10b94:	bl	8ef0 <PyLong_FromLongLong@plt>
   10b98:	cbz	x0, 10bf8 <PyInit__testcapi@@Base+0x7a38>
   10b9c:	mov	x27, x0
   10ba0:	bl	8df0 <PyLong_AsLongLong@plt>
   10ba4:	mov	x28, x0
   10ba8:	cmn	x0, #0x1
   10bac:	b.eq	10c10 <PyInit__testcapi@@Base+0x7a50>  // b.none
   10bb0:	cmp	x28, x26
   10bb4:	b.ne	10c04 <PyInit__testcapi@@Base+0x7a44>  // b.any
   10bb8:	mov	x0, x27
   10bbc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10bc0:	mov	w8, wzr
   10bc4:	cbz	w8, 10c30 <PyInit__testcapi@@Base+0x7a70>
   10bc8:	b	10c44 <PyInit__testcapi@@Base+0x7a84>
   10bcc:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10bd0:	add	x0, x0, #0x8f0
   10bd4:	b	10c20 <PyInit__testcapi@@Base+0x7a60>
   10bd8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10bdc:	add	x0, x0, #0x92e
   10be0:	b	10c20 <PyInit__testcapi@@Base+0x7a60>
   10be4:	bl	8980 <PyErr_Occurred@plt>
   10be8:	cbz	x0, 10b80 <PyInit__testcapi@@Base+0x79c0>
   10bec:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10bf0:	add	x0, x0, #0x910
   10bf4:	b	10c20 <PyInit__testcapi@@Base+0x7a60>
   10bf8:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10bfc:	add	x0, x0, #0x8f2
   10c00:	b	10c20 <PyInit__testcapi@@Base+0x7a60>
   10c04:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10c08:	add	x0, x0, #0x930
   10c0c:	b	10c20 <PyInit__testcapi@@Base+0x7a60>
   10c10:	bl	8980 <PyErr_Occurred@plt>
   10c14:	cbz	x0, 10bb0 <PyInit__testcapi@@Base+0x79f0>
   10c18:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10c1c:	add	x0, x0, #0x912
   10c20:	bl	10f48 <PyInit__testcapi@@Base+0x7d88>
   10c24:	mov	x19, x0
   10c28:	mov	w8, #0x1                   	// #1
   10c2c:	cbnz	w8, 10c44 <PyInit__testcapi@@Base+0x7a84>
   10c30:	add	w21, w21, #0x1
   10c34:	cmp	w21, #0x6
   10c38:	add	w20, w20, #0x1
   10c3c:	b.ne	10b44 <PyInit__testcapi@@Base+0x7984>  // b.any
   10c40:	mov	w8, wzr
   10c44:	cbnz	w8, 10e50 <PyInit__testcapi@@Base+0x7c90>
   10c48:	add	w23, w23, #0x1
   10c4c:	cmp	w23, #0x41
   10c50:	lsl	x24, x24, #1
   10c54:	b.ne	10b38 <PyInit__testcapi@@Base+0x7978>  // b.any
   10c58:	mov	w0, #0x1                   	// #1
   10c5c:	bl	8840 <PyLong_FromLong@plt>
   10c60:	cbz	x0, 10cfc <PyInit__testcapi@@Base+0x7b3c>
   10c64:	mov	x20, x0
   10c68:	bl	8270 <PyNumber_Negative@plt>
   10c6c:	cbz	x0, 10df0 <PyInit__testcapi@@Base+0x7c30>
   10c70:	mov	x21, x0
   10c74:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
   10c78:	cmn	x0, #0x1
   10c7c:	b.eq	10c8c <PyInit__testcapi@@Base+0x7acc>  // b.none
   10c80:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10c84:	add	x0, x0, #0x993
   10c88:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10c8c:	bl	8980 <PyErr_Occurred@plt>
   10c90:	cbz	x0, 10c80 <PyInit__testcapi@@Base+0x7ac0>
   10c94:	adrp	x24, 25000 <PyInit__testcapi@@Base+0x1be40>
   10c98:	ldr	x24, [x24, #4000]
   10c9c:	ldr	x0, [x24]
   10ca0:	bl	8760 <PyErr_ExceptionMatches@plt>
   10ca4:	cbz	w0, 10d08 <PyInit__testcapi@@Base+0x7b48>
   10ca8:	bl	88c0 <PyErr_Clear@plt>
   10cac:	mov	x0, x21
   10cb0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10cb4:	mov	w0, #0x40                  	// #64
   10cb8:	bl	8840 <PyLong_FromLong@plt>
   10cbc:	cbz	x0, 10cfc <PyInit__testcapi@@Base+0x7b3c>
   10cc0:	mov	x22, x0
   10cc4:	mov	x0, x20
   10cc8:	mov	x1, x22
   10ccc:	bl	8390 <PyNumber_Lshift@plt>
   10cd0:	mov	x21, x0
   10cd4:	mov	x0, x22
   10cd8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10cdc:	cbz	x21, 10d14 <PyInit__testcapi@@Base+0x7b54>
   10ce0:	mov	x0, x21
   10ce4:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
   10ce8:	cmn	x0, #0x1
   10cec:	b.eq	10d20 <PyInit__testcapi@@Base+0x7b60>  // b.none
   10cf0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10cf4:	add	x0, x0, #0xa24
   10cf8:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10cfc:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10d00:	add	x0, x0, #0x947
   10d04:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10d08:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10d0c:	add	x0, x0, #0x9bc
   10d10:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10d14:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10d18:	add	x0, x0, #0x9ff
   10d1c:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10d20:	bl	8980 <PyErr_Occurred@plt>
   10d24:	cbz	x0, 10cf0 <PyInit__testcapi@@Base+0x7b30>
   10d28:	ldr	x0, [x24]
   10d2c:	bl	8760 <PyErr_ExceptionMatches@plt>
   10d30:	cbz	w0, 10d70 <PyInit__testcapi@@Base+0x7bb0>
   10d34:	bl	88c0 <PyErr_Clear@plt>
   10d38:	mov	x0, x21
   10d3c:	mov	x1, x20
   10d40:	bl	8b60 <PyNumber_Rshift@plt>
   10d44:	mov	x22, x0
   10d48:	mov	x0, x21
   10d4c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10d50:	cbz	x22, 10d7c <PyInit__testcapi@@Base+0x7bbc>
   10d54:	mov	x0, x22
   10d58:	bl	8df0 <PyLong_AsLongLong@plt>
   10d5c:	cmn	x0, #0x1
   10d60:	b.eq	10d88 <PyInit__testcapi@@Base+0x7bc8>  // b.none
   10d64:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10d68:	add	x0, x0, #0xac1
   10d6c:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10d70:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10d74:	add	x0, x0, #0xa53
   10d78:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10d7c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10d80:	add	x0, x0, #0xa9c
   10d84:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10d88:	bl	8980 <PyErr_Occurred@plt>
   10d8c:	cbz	x0, 10d64 <PyInit__testcapi@@Base+0x7ba4>
   10d90:	ldr	x0, [x24]
   10d94:	bl	8760 <PyErr_ExceptionMatches@plt>
   10d98:	cbz	w0, 10ee0 <PyInit__testcapi@@Base+0x7d20>
   10d9c:	bl	88c0 <PyErr_Clear@plt>
   10da0:	mov	x0, x22
   10da4:	bl	8270 <PyNumber_Negative@plt>
   10da8:	mov	x23, x0
   10dac:	mov	x0, x22
   10db0:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10db4:	cbz	x23, 10df0 <PyInit__testcapi@@Base+0x7c30>
   10db8:	mov	x0, x23
   10dbc:	mov	x1, x20
   10dc0:	bl	8fe0 <PyNumber_Subtract@plt>
   10dc4:	mov	x21, x0
   10dc8:	mov	x0, x23
   10dcc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10dd0:	cbz	x21, 10eec <PyInit__testcapi@@Base+0x7d2c>
   10dd4:	mov	x0, x21
   10dd8:	bl	8df0 <PyLong_AsLongLong@plt>
   10ddc:	cmn	x0, #0x1
   10de0:	b.eq	10ef8 <PyInit__testcapi@@Base+0x7d38>  // b.none
   10de4:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10de8:	add	x0, x0, #0xb58
   10dec:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10df0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10df4:	add	x0, x0, #0x96c
   10df8:	bl	10f48 <PyInit__testcapi@@Base+0x7d88>
   10dfc:	mov	x19, x0
   10e00:	mov	w8, wzr
   10e04:	cbz	w8, 10e50 <PyInit__testcapi@@Base+0x7c90>
   10e08:	adrp	x20, 25000 <PyInit__testcapi@@Base+0x1be40>
   10e0c:	ldr	x20, [x20, #4016]
   10e10:	mov	x0, x20
   10e14:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   10e18:	mov	x0, x20
   10e1c:	bl	8df0 <PyLong_AsLongLong@plt>
   10e20:	cmn	x0, #0x1
   10e24:	b.eq	10e70 <PyInit__testcapi@@Base+0x7cb0>  // b.none
   10e28:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10e2c:	add	x0, x0, #0xbce
   10e30:	bl	10f48 <PyInit__testcapi@@Base+0x7d88>
   10e34:	mov	x19, x0
   10e38:	mov	w8, wzr
   10e3c:	cbz	w8, 10e50 <PyInit__testcapi@@Base+0x7c90>
   10e40:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
   10e44:	ldr	x19, [x19, #4016]
   10e48:	mov	x0, x19
   10e4c:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   10e50:	mov	x0, x19
   10e54:	ldp	x20, x19, [sp, #80]
   10e58:	ldp	x22, x21, [sp, #64]
   10e5c:	ldp	x24, x23, [sp, #48]
   10e60:	ldp	x26, x25, [sp, #32]
   10e64:	ldp	x28, x27, [sp, #16]
   10e68:	ldp	x29, x30, [sp], #96
   10e6c:	ret
   10e70:	bl	8980 <PyErr_Occurred@plt>
   10e74:	cbz	x0, 10e28 <PyInit__testcapi@@Base+0x7c68>
   10e78:	adrp	x20, 25000 <PyInit__testcapi@@Base+0x1be40>
   10e7c:	ldr	x20, [x20, #3952]
   10e80:	ldr	x0, [x20]
   10e84:	bl	8760 <PyErr_ExceptionMatches@plt>
   10e88:	cbz	w0, 10ed4 <PyInit__testcapi@@Base+0x7d14>
   10e8c:	bl	88c0 <PyErr_Clear@plt>
   10e90:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
   10e94:	ldr	x0, [x0, #4016]
   10e98:	bl	8480 <PyLong_AsUnsignedLongLong@plt>
   10e9c:	cmn	x0, #0x1
   10ea0:	b.ne	10e28 <PyInit__testcapi@@Base+0x7c68>  // b.any
   10ea4:	bl	8980 <PyErr_Occurred@plt>
   10ea8:	cbz	x0, 10e28 <PyInit__testcapi@@Base+0x7c68>
   10eac:	ldr	x0, [x20]
   10eb0:	bl	8760 <PyErr_ExceptionMatches@plt>
   10eb4:	cbz	w0, 10ed4 <PyInit__testcapi@@Base+0x7d14>
   10eb8:	bl	88c0 <PyErr_Clear@plt>
   10ebc:	adrp	x0, 25000 <PyInit__testcapi@@Base+0x1be40>
   10ec0:	ldr	x0, [x0, #4016]
   10ec4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10ec8:	mov	w8, #0x1                   	// #1
   10ecc:	cbnz	w8, 10e40 <PyInit__testcapi@@Base+0x7c80>
   10ed0:	b	10e50 <PyInit__testcapi@@Base+0x7c90>
   10ed4:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10ed8:	add	x0, x0, #0xbf1
   10edc:	b	10e30 <PyInit__testcapi@@Base+0x7c70>
   10ee0:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10ee4:	add	x0, x0, #0xaec
   10ee8:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10eec:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10ef0:	add	x0, x0, #0xb31
   10ef4:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10ef8:	bl	8980 <PyErr_Occurred@plt>
   10efc:	cbz	x0, 10de4 <PyInit__testcapi@@Base+0x7c24>
   10f00:	ldr	x0, [x24]
   10f04:	bl	8760 <PyErr_ExceptionMatches@plt>
   10f08:	cbz	w0, 10f3c <PyInit__testcapi@@Base+0x7d7c>
   10f0c:	bl	88c0 <PyErr_Clear@plt>
   10f10:	mov	x0, x21
   10f14:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10f18:	mov	x0, xzr
   10f1c:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   10f20:	mov	x0, xzr
   10f24:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   10f28:	mov	x0, x20
   10f2c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   10f30:	mov	w8, #0x1                   	// #1
   10f34:	cbnz	w8, 10e08 <PyInit__testcapi@@Base+0x7c48>
   10f38:	b	10e50 <PyInit__testcapi@@Base+0x7c90>
   10f3c:	adrp	x0, 13000 <PyInit__testcapi@@Base+0x9e40>
   10f40:	add	x0, x0, #0xb86
   10f44:	b	10df8 <PyInit__testcapi@@Base+0x7c38>
   10f48:	stp	x29, x30, [sp, #-16]!
   10f4c:	mov	x29, sp
   10f50:	mov	x1, x0
   10f54:	adrp	x0, 12000 <PyInit__testcapi@@Base+0x8e40>
   10f58:	add	x0, x0, #0xecb
   10f5c:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
   10f60:	mov	x0, xzr
   10f64:	ldp	x29, x30, [sp], #16
   10f68:	ret
   10f6c:	stp	x29, x30, [sp, #-16]!
   10f70:	mov	x29, sp
   10f74:	bl	10f8c <PyInit__testcapi@@Base+0x7dcc>
   10f78:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   10f7c:	ldr	x0, [x8, #3824]
   10f80:	bl	8b90 <PyThread_release_lock@plt>
   10f84:	ldp	x29, x30, [sp], #16
   10f88:	ret
   10f8c:	stp	x29, x30, [sp, #-32]!
   10f90:	stp	x20, x19, [sp, #16]
   10f94:	mov	x29, sp
   10f98:	mov	x19, x0
   10f9c:	bl	86e0 <PyGILState_Ensure@plt>
   10fa0:	mov	w20, w0
   10fa4:	mov	x0, x19
   10fa8:	bl	10fd0 <PyInit__testcapi@@Base+0x7e10>
   10fac:	cmp	x0, #0x0
   10fb0:	cset	w19, ne  // ne = any
   10fb4:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   10fb8:	mov	w0, w20
   10fbc:	bl	8360 <PyGILState_Release@plt>
   10fc0:	mov	w0, w19
   10fc4:	ldp	x20, x19, [sp, #16]
   10fc8:	ldp	x29, x30, [sp], #32
   10fcc:	ret
   10fd0:	stp	x29, x30, [sp, #-16]!
   10fd4:	mov	x29, sp
   10fd8:	mov	x1, xzr
   10fdc:	mov	x2, xzr
   10fe0:	mov	x3, xzr
   10fe4:	bl	10ff0 <PyInit__testcapi@@Base+0x7e30>
   10fe8:	ldp	x29, x30, [sp], #16
   10fec:	ret
   10ff0:	stp	x29, x30, [sp, #-48]!
   10ff4:	stp	x22, x21, [sp, #16]
   10ff8:	stp	x20, x19, [sp, #32]
   10ffc:	mov	x29, sp
   11000:	mov	x20, x3
   11004:	mov	x22, x2
   11008:	mov	x21, x1
   1100c:	mov	x19, x0
   11010:	bl	11070 <PyInit__testcapi@@Base+0x7eb0>
   11014:	cbz	x0, 11044 <PyInit__testcapi@@Base+0x7e84>
   11018:	mov	x8, x0
   1101c:	mov	x0, x19
   11020:	mov	x1, x21
   11024:	mov	x2, x22
   11028:	mov	x3, x20
   1102c:	blr	x8
   11030:	mov	x1, x0
   11034:	mov	x0, x19
   11038:	mov	x2, xzr
   1103c:	bl	8a80 <_Py_CheckFunctionResult@plt>
   11040:	b	11060 <PyInit__testcapi@@Base+0x7ea0>
   11044:	mov	x0, x22
   11048:	bl	11090 <PyInit__testcapi@@Base+0x7ed0>
   1104c:	mov	x2, x0
   11050:	mov	x0, x19
   11054:	mov	x1, x21
   11058:	mov	x3, x20
   1105c:	bl	8f00 <_PyObject_MakeTpCall@plt>
   11060:	ldp	x20, x19, [sp, #32]
   11064:	ldp	x22, x21, [sp, #16]
   11068:	ldp	x29, x30, [sp], #48
   1106c:	ret
   11070:	ldr	x8, [x0, #8]
   11074:	ldrb	w9, [x8, #169]
   11078:	tbnz	w9, #3, 11084 <PyInit__testcapi@@Base+0x7ec4>
   1107c:	mov	x0, xzr
   11080:	ret
   11084:	ldr	x8, [x8, #56]
   11088:	ldr	x0, [x0, x8]
   1108c:	ret
   11090:	and	x0, x0, #0x7fffffffffffffff
   11094:	ret
   11098:	stp	x29, x30, [sp, #-32]!
   1109c:	stp	x20, x19, [sp, #16]
   110a0:	mov	x29, sp
   110a4:	mov	x19, x0
   110a8:	bl	10fd0 <PyInit__testcapi@@Base+0x7e10>
   110ac:	mov	x20, x0
   110b0:	mov	x0, x19
   110b4:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   110b8:	mov	x0, x20
   110bc:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   110c0:	cmp	x20, #0x0
   110c4:	ldp	x20, x19, [sp, #16]
   110c8:	csetm	w0, eq  // eq = none
   110cc:	ldp	x29, x30, [sp], #32
   110d0:	ret
   110d4:	stp	x29, x30, [sp, #-16]!
   110d8:	mov	x29, sp
   110dc:	ldr	x9, [x1]
   110e0:	ldp	x10, x11, [x2]
   110e4:	mov	w8, w0
   110e8:	sub	x10, x10, x9
   110ec:	str	x10, [x2]
   110f0:	ldr	x9, [x1, #8]
   110f4:	subs	x9, x11, x9
   110f8:	str	x9, [x2, #8]
   110fc:	b.pl	11114 <PyInit__testcapi@@Base+0x7f54>  // b.nfrst
   11100:	mov	w11, #0x4240                	// #16960
   11104:	movk	w11, #0xf, lsl #16
   11108:	sub	x10, x10, #0x1
   1110c:	add	x9, x9, x11
   11110:	stp	x10, x9, [x2]
   11114:	ldr	w9, [x2]
   11118:	ldr	w3, [x2, #8]
   1111c:	adrp	x0, 14000 <PyInit__testcapi@@Base+0xae40>
   11120:	add	x0, x0, #0xcbd
   11124:	mov	w1, w8
   11128:	mov	w2, w9
   1112c:	bl	8f30 <printf@plt>
   11130:	ldp	x29, x30, [sp], #16
   11134:	ret
   11138:	stp	x29, x30, [sp, #-16]!
   1113c:	mov	x29, sp
   11140:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   11144:	ldr	x0, [x8, #3840]
   11148:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   1114c:	str	x0, [x8, #3832]
   11150:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11154:	mov	w0, wzr
   11158:	ldp	x29, x30, [sp], #16
   1115c:	ret
   11160:	cmp	w0, #0x4
   11164:	b.cc	11194 <PyInit__testcapi@@Base+0x7fd4>  // b.lo, b.ul, b.last
   11168:	stp	x29, x30, [sp, #-16]!
   1116c:	mov	x29, sp
   11170:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   11174:	ldr	x8, [x8, #3944]
   11178:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   1117c:	add	x1, x1, #0xdb5
   11180:	ldr	x0, [x8]
   11184:	bl	8670 <PyErr_SetString@plt>
   11188:	mov	w0, #0xffffffff            	// #-1
   1118c:	ldp	x29, x30, [sp], #16
   11190:	ret
   11194:	mov	w0, wzr
   11198:	ret
   1119c:	sub	sp, sp, #0x40
   111a0:	stp	x29, x30, [sp, #32]
   111a4:	stp	x20, x19, [sp, #48]
   111a8:	add	x29, sp, #0x20
   111ac:	mov	w8, #0x1                   	// #1
   111b0:	mov	x19, x0
   111b4:	str	x8, [x0]
   111b8:	sub	x0, x29, #0x8
   111bc:	add	x1, sp, #0x10
   111c0:	add	x2, sp, #0x8
   111c4:	bl	8ce0 <PyErr_Fetch@plt>
   111c8:	adrp	x1, 29000 <PyInit__testcapi@@Base+0x1fe40>
   111cc:	add	x1, x1, #0x5d8
   111d0:	mov	x0, x19
   111d4:	bl	86f0 <_PyObject_LookupSpecial@plt>
   111d8:	cbz	x0, 11200 <PyInit__testcapi@@Base+0x8040>
   111dc:	mov	x20, x0
   111e0:	bl	10fd0 <PyInit__testcapi@@Base+0x7e10>
   111e4:	cbz	x0, 111f0 <PyInit__testcapi@@Base+0x8030>
   111e8:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   111ec:	b	111f8 <PyInit__testcapi@@Base+0x8038>
   111f0:	mov	x0, x20
   111f4:	bl	9080 <PyErr_WriteUnraisable@plt>
   111f8:	mov	x0, x20
   111fc:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11200:	ldur	x0, [x29, #-8]
   11204:	ldp	x2, x1, [sp, #8]
   11208:	bl	8380 <PyErr_Restore@plt>
   1120c:	ldr	x8, [x19]
   11210:	subs	x20, x8, #0x1
   11214:	str	x20, [x19]
   11218:	b.eq	11228 <PyInit__testcapi@@Base+0x8068>  // b.none
   1121c:	mov	x0, x19
   11220:	bl	11238 <PyInit__testcapi@@Base+0x8078>
   11224:	str	x20, [x19]
   11228:	ldp	x20, x19, [sp, #48]
   1122c:	ldp	x29, x30, [sp, #32]
   11230:	add	sp, sp, #0x40
   11234:	ret
   11238:	stp	x29, x30, [sp, #-32]!
   1123c:	str	x19, [sp, #16]
   11240:	mov	x29, sp
   11244:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   11248:	ldr	x8, [x8, #3968]
   1124c:	mov	x19, x0
   11250:	ldr	w8, [x8, #4]
   11254:	cbz	w8, 11260 <PyInit__testcapi@@Base+0x80a0>
   11258:	mov	x0, x19
   1125c:	bl	8c10 <_PyTraceMalloc_NewReference@plt>
   11260:	mov	w8, #0x1                   	// #1
   11264:	str	x8, [x19]
   11268:	ldr	x19, [sp, #16]
   1126c:	ldp	x29, x30, [sp], #32
   11270:	ret
   11274:	sub	sp, sp, #0xc0
   11278:	stp	x29, x30, [sp, #144]
   1127c:	str	x21, [sp, #160]
   11280:	stp	x20, x19, [sp, #176]
   11284:	add	x29, sp, #0x90
   11288:	adrp	x9, 11000 <PyInit__testcapi@@Base+0x7e40>
   1128c:	add	x8, sp, #0x30
   11290:	add	x9, x9, #0x5dc
   11294:	adrp	x10, 11000 <PyInit__testcapi@@Base+0x7e40>
   11298:	stp	x8, x9, [sp, #8]
   1129c:	adrp	x8, 11000 <PyInit__testcapi@@Base+0x7e40>
   112a0:	add	x10, x10, #0x600
   112a4:	add	x8, x8, #0x628
   112a8:	stp	x10, x8, [sp, #24]
   112ac:	adrp	x8, 11000 <PyInit__testcapi@@Base+0x7e40>
   112b0:	movi	v0.2d, #0x0
   112b4:	add	x8, x8, #0x650
   112b8:	add	x1, sp, #0x30
   112bc:	mov	w19, w0
   112c0:	stp	q0, q0, [sp, #48]
   112c4:	stp	q0, q0, [sp, #80]
   112c8:	stp	q0, q0, [sp, #112]
   112cc:	str	x8, [sp, #40]
   112d0:	bl	8b70 <PyMem_GetAllocator@plt>
   112d4:	add	x1, sp, #0x8
   112d8:	mov	w0, w19
   112dc:	bl	8700 <PyMem_SetAllocator@plt>
   112e0:	cmp	w19, #0x2
   112e4:	str	xzr, [sp, #136]
   112e8:	b.eq	11308 <PyInit__testcapi@@Base+0x8148>  // b.none
   112ec:	cmp	w19, #0x1
   112f0:	b.eq	11314 <PyInit__testcapi@@Base+0x8154>  // b.none
   112f4:	mov	x20, xzr
   112f8:	cbnz	w19, 11320 <PyInit__testcapi@@Base+0x8160>
   112fc:	mov	w0, #0x2a                  	// #42
   11300:	bl	84d0 <PyMem_RawMalloc@plt>
   11304:	b	1131c <PyInit__testcapi@@Base+0x815c>
   11308:	mov	w0, #0x2a                  	// #42
   1130c:	bl	86c0 <PyObject_Malloc@plt>
   11310:	b	1131c <PyInit__testcapi@@Base+0x815c>
   11314:	mov	w0, #0x2a                  	// #42
   11318:	bl	8fc0 <PyMem_Malloc@plt>
   1131c:	mov	x20, x0
   11320:	cbz	x20, 11340 <PyInit__testcapi@@Base+0x8180>
   11324:	ldr	x8, [sp, #136]
   11328:	add	x9, sp, #0x30
   1132c:	cmp	x8, x9
   11330:	b.eq	1134c <PyInit__testcapi@@Base+0x818c>  // b.none
   11334:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   11338:	add	x1, x1, #0xf07
   1133c:	b	11434 <PyInit__testcapi@@Base+0x8274>
   11340:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   11344:	add	x1, x1, #0xef9
   11348:	b	11434 <PyInit__testcapi@@Base+0x8274>
   1134c:	ldr	x8, [sp, #88]
   11350:	str	xzr, [sp, #136]
   11354:	cmp	x8, #0x2a
   11358:	b.ne	11388 <PyInit__testcapi@@Base+0x81c8>  // b.any
   1135c:	cmp	w19, #0x2
   11360:	b.eq	11394 <PyInit__testcapi@@Base+0x81d4>  // b.none
   11364:	cmp	w19, #0x1
   11368:	b.eq	113c4 <PyInit__testcapi@@Base+0x8204>  // b.none
   1136c:	cbnz	w19, 113dc <PyInit__testcapi@@Base+0x821c>
   11370:	mov	w1, #0xc8                  	// #200
   11374:	mov	x0, x20
   11378:	bl	9090 <PyMem_RawRealloc@plt>
   1137c:	mov	x21, x0
   11380:	cbnz	x21, 113a8 <PyInit__testcapi@@Base+0x81e8>
   11384:	b	113e4 <PyInit__testcapi@@Base+0x8224>
   11388:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   1138c:	add	x1, x1, #0xf1c
   11390:	b	11434 <PyInit__testcapi@@Base+0x8274>
   11394:	mov	w1, #0xc8                  	// #200
   11398:	mov	x0, x20
   1139c:	bl	8ae0 <PyObject_Realloc@plt>
   113a0:	mov	x21, x0
   113a4:	cbz	x21, 113e4 <PyInit__testcapi@@Base+0x8224>
   113a8:	ldr	x8, [sp, #136]
   113ac:	add	x9, sp, #0x30
   113b0:	cmp	x8, x9
   113b4:	b.eq	113f0 <PyInit__testcapi@@Base+0x8230>  // b.none
   113b8:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   113bc:	add	x1, x1, #0xf3f
   113c0:	b	11434 <PyInit__testcapi@@Base+0x8274>
   113c4:	mov	w1, #0xc8                  	// #200
   113c8:	mov	x0, x20
   113cc:	bl	8740 <PyMem_Realloc@plt>
   113d0:	mov	x21, x0
   113d4:	cbnz	x21, 113a8 <PyInit__testcapi@@Base+0x81e8>
   113d8:	b	113e4 <PyInit__testcapi@@Base+0x8224>
   113dc:	mov	x21, xzr
   113e0:	cbnz	x21, 113a8 <PyInit__testcapi@@Base+0x81e8>
   113e4:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   113e8:	add	x1, x1, #0xf30
   113ec:	b	11434 <PyInit__testcapi@@Base+0x8274>
   113f0:	ldr	x8, [sp, #112]
   113f4:	str	xzr, [sp, #136]
   113f8:	cmp	x8, x20
   113fc:	b.ne	1142c <PyInit__testcapi@@Base+0x826c>  // b.any
   11400:	ldr	x8, [sp, #120]
   11404:	cmp	x8, #0xc8
   11408:	b.ne	1142c <PyInit__testcapi@@Base+0x826c>  // b.any
   1140c:	cmp	w19, #0x2
   11410:	b.eq	1146c <PyInit__testcapi@@Base+0x82ac>  // b.none
   11414:	cmp	w19, #0x1
   11418:	b.eq	11478 <PyInit__testcapi@@Base+0x82b8>  // b.none
   1141c:	cbnz	w19, 11480 <PyInit__testcapi@@Base+0x82c0>
   11420:	mov	x0, x21
   11424:	bl	8a10 <PyMem_RawFree@plt>
   11428:	b	11480 <PyInit__testcapi@@Base+0x82c0>
   1142c:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   11430:	add	x1, x1, #0xf55
   11434:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   11438:	ldr	x8, [x8, #3928]
   1143c:	ldr	x0, [x8]
   11440:	bl	8670 <PyErr_SetString@plt>
   11444:	mov	x20, xzr
   11448:	add	x1, sp, #0x30
   1144c:	mov	w0, w19
   11450:	bl	8700 <PyMem_SetAllocator@plt>
   11454:	mov	x0, x20
   11458:	ldp	x20, x19, [sp, #176]
   1145c:	ldr	x21, [sp, #160]
   11460:	ldp	x29, x30, [sp, #144]
   11464:	add	sp, sp, #0xc0
   11468:	ret
   1146c:	mov	x0, x21
   11470:	bl	87c0 <PyObject_Free@plt>
   11474:	b	11480 <PyInit__testcapi@@Base+0x82c0>
   11478:	mov	x0, x21
   1147c:	bl	83d0 <PyMem_Free@plt>
   11480:	ldr	x8, [sp, #136]
   11484:	add	x9, sp, #0x30
   11488:	cmp	x8, x9
   1148c:	b.eq	1149c <PyInit__testcapi@@Base+0x82dc>  // b.none
   11490:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   11494:	add	x1, x1, #0xfb9
   11498:	b	11434 <PyInit__testcapi@@Base+0x8274>
   1149c:	ldr	x8, [sp, #128]
   114a0:	str	xzr, [sp, #136]
   114a4:	cmp	x8, x21
   114a8:	b.eq	114b8 <PyInit__testcapi@@Base+0x82f8>  // b.none
   114ac:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   114b0:	add	x1, x1, #0xfd3
   114b4:	b	11434 <PyInit__testcapi@@Base+0x8274>
   114b8:	cmp	w19, #0x2
   114bc:	b.eq	114dc <PyInit__testcapi@@Base+0x831c>  // b.none
   114c0:	cmp	w19, #0x1
   114c4:	b.eq	114ec <PyInit__testcapi@@Base+0x832c>  // b.none
   114c8:	cbnz	w19, 11500 <PyInit__testcapi@@Base+0x8340>
   114cc:	mov	w0, #0x2                   	// #2
   114d0:	mov	w1, #0x5                   	// #5
   114d4:	bl	8d30 <PyMem_RawCalloc@plt>
   114d8:	b	114f8 <PyInit__testcapi@@Base+0x8338>
   114dc:	mov	w0, #0x2                   	// #2
   114e0:	mov	w1, #0x5                   	// #5
   114e4:	bl	90a0 <PyObject_Calloc@plt>
   114e8:	b	114f8 <PyInit__testcapi@@Base+0x8338>
   114ec:	mov	w0, #0x2                   	// #2
   114f0:	mov	w1, #0x5                   	// #5
   114f4:	bl	8f20 <PyMem_Calloc@plt>
   114f8:	mov	x20, x0
   114fc:	b	11504 <PyInit__testcapi@@Base+0x8344>
   11500:	mov	x20, xzr
   11504:	cbz	x20, 11524 <PyInit__testcapi@@Base+0x8364>
   11508:	ldr	x8, [sp, #136]
   1150c:	add	x9, sp, #0x30
   11510:	cmp	x8, x9
   11514:	b.eq	11530 <PyInit__testcapi@@Base+0x8370>  // b.none
   11518:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   1151c:	add	x1, x1, #0xf7e
   11520:	b	11434 <PyInit__testcapi@@Base+0x8274>
   11524:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   11528:	add	x1, x1, #0xf70
   1152c:	b	11434 <PyInit__testcapi@@Base+0x8274>
   11530:	ldr	x8, [sp, #96]
   11534:	str	xzr, [sp, #136]
   11538:	cmp	x8, #0x2
   1153c:	b.ne	11570 <PyInit__testcapi@@Base+0x83b0>  // b.any
   11540:	ldr	x8, [sp, #104]
   11544:	cmp	x8, #0x5
   11548:	b.ne	11570 <PyInit__testcapi@@Base+0x83b0>  // b.any
   1154c:	cmp	w19, #0x2
   11550:	str	xzr, [sp, #128]
   11554:	b.eq	1157c <PyInit__testcapi@@Base+0x83bc>  // b.none
   11558:	cmp	w19, #0x1
   1155c:	b.eq	11588 <PyInit__testcapi@@Base+0x83c8>  // b.none
   11560:	cbnz	w19, 11590 <PyInit__testcapi@@Base+0x83d0>
   11564:	mov	x0, x20
   11568:	bl	8a10 <PyMem_RawFree@plt>
   1156c:	b	11590 <PyInit__testcapi@@Base+0x83d0>
   11570:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   11574:	add	x1, x1, #0xf93
   11578:	b	11434 <PyInit__testcapi@@Base+0x8274>
   1157c:	mov	x0, x20
   11580:	bl	87c0 <PyObject_Free@plt>
   11584:	b	11590 <PyInit__testcapi@@Base+0x83d0>
   11588:	mov	x0, x20
   1158c:	bl	83d0 <PyMem_Free@plt>
   11590:	ldr	x8, [sp, #136]
   11594:	add	x9, sp, #0x30
   11598:	cmp	x8, x9
   1159c:	b.eq	115ac <PyInit__testcapi@@Base+0x83ec>  // b.none
   115a0:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   115a4:	add	x1, x1, #0xfb2
   115a8:	b	11434 <PyInit__testcapi@@Base+0x8274>
   115ac:	ldr	x8, [sp, #128]
   115b0:	str	xzr, [sp, #136]
   115b4:	cmp	x8, x20
   115b8:	b.eq	115c8 <PyInit__testcapi@@Base+0x8408>  // b.none
   115bc:	adrp	x1, 14000 <PyInit__testcapi@@Base+0xae40>
   115c0:	add	x1, x1, #0xfcc
   115c4:	b	11434 <PyInit__testcapi@@Base+0x8274>
   115c8:	adrp	x20, 25000 <PyInit__testcapi@@Base+0x1be40>
   115cc:	ldr	x20, [x20, #4016]
   115d0:	mov	x0, x20
   115d4:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   115d8:	b	11448 <PyInit__testcapi@@Base+0x8288>
   115dc:	stp	x29, x30, [sp, #-16]!
   115e0:	mov	x29, sp
   115e4:	ldp	x8, x9, [x0]
   115e8:	str	x0, [x0, #88]
   115ec:	str	x1, [x0, #40]
   115f0:	mov	x0, x8
   115f4:	blr	x9
   115f8:	ldp	x29, x30, [sp], #16
   115fc:	ret
   11600:	stp	x29, x30, [sp, #-16]!
   11604:	mov	x29, sp
   11608:	ldr	x8, [x0]
   1160c:	ldr	x9, [x0, #16]
   11610:	str	x0, [x0, #88]
   11614:	stp	x1, x2, [x0, #48]
   11618:	mov	x0, x8
   1161c:	blr	x9
   11620:	ldp	x29, x30, [sp], #16
   11624:	ret
   11628:	stp	x29, x30, [sp, #-16]!
   1162c:	mov	x29, sp
   11630:	ldr	x8, [x0]
   11634:	ldr	x9, [x0, #24]
   11638:	str	x0, [x0, #88]
   1163c:	stp	x1, x2, [x0, #64]
   11640:	mov	x0, x8
   11644:	blr	x9
   11648:	ldp	x29, x30, [sp], #16
   1164c:	ret
   11650:	stp	x29, x30, [sp, #-16]!
   11654:	mov	x29, sp
   11658:	ldr	x8, [x0]
   1165c:	ldr	x9, [x0, #32]
   11660:	stp	x1, x0, [x0, #80]
   11664:	mov	x0, x8
   11668:	blr	x9
   1166c:	ldp	x29, x30, [sp], #16
   11670:	ret
   11674:	sub	sp, sp, #0x60
   11678:	stp	x29, x30, [sp, #48]
   1167c:	str	x21, [sp, #64]
   11680:	stp	x20, x19, [sp, #80]
   11684:	add	x29, sp, #0x30
   11688:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   1168c:	ldr	w8, [x8, #3864]
   11690:	cbnz	w8, 1172c <PyInit__testcapi@@Base+0x856c>
   11694:	adrp	x21, 29000 <PyInit__testcapi@@Base+0x1fe40>
   11698:	add	x21, x21, #0xf18
   1169c:	mov	w8, #0x1                   	// #1
   116a0:	mov	x19, x21
   116a4:	adrp	x9, 11000 <PyInit__testcapi@@Base+0x7e40>
   116a8:	adrp	x10, 11000 <PyInit__testcapi@@Base+0x7e40>
   116ac:	adrp	x11, 11000 <PyInit__testcapi@@Base+0x7e40>
   116b0:	adrp	x12, 11000 <PyInit__testcapi@@Base+0x7e40>
   116b4:	str	w8, [x19], #8
   116b8:	add	x9, x9, #0x740
   116bc:	add	x10, x10, #0x77c
   116c0:	add	x11, x11, #0x7cc
   116c4:	add	x12, x12, #0x81c
   116c8:	mov	w0, wzr
   116cc:	mov	x1, x19
   116d0:	stp	x9, x10, [sp, #16]
   116d4:	stp	x11, x12, [sp, #32]
   116d8:	bl	8b70 <PyMem_GetAllocator@plt>
   116dc:	add	x20, x21, #0x30
   116e0:	mov	w0, #0x1                   	// #1
   116e4:	mov	x1, x20
   116e8:	bl	8b70 <PyMem_GetAllocator@plt>
   116ec:	add	x21, x21, #0x58
   116f0:	mov	w0, #0x2                   	// #2
   116f4:	mov	x1, x21
   116f8:	bl	8b70 <PyMem_GetAllocator@plt>
   116fc:	add	x1, sp, #0x8
   11700:	mov	w0, wzr
   11704:	str	x19, [sp, #8]
   11708:	bl	8700 <PyMem_SetAllocator@plt>
   1170c:	add	x1, sp, #0x8
   11710:	mov	w0, #0x1                   	// #1
   11714:	str	x20, [sp, #8]
   11718:	bl	8700 <PyMem_SetAllocator@plt>
   1171c:	add	x1, sp, #0x8
   11720:	mov	w0, #0x2                   	// #2
   11724:	str	x21, [sp, #8]
   11728:	bl	8700 <PyMem_SetAllocator@plt>
   1172c:	ldp	x20, x19, [sp, #80]
   11730:	ldr	x21, [sp, #64]
   11734:	ldp	x29, x30, [sp, #48]
   11738:	add	sp, sp, #0x60
   1173c:	ret
   11740:	stp	x29, x30, [sp, #-32]!
   11744:	stp	x20, x19, [sp, #16]
   11748:	mov	x29, sp
   1174c:	mov	x19, x1
   11750:	mov	x20, x0
   11754:	bl	11838 <PyInit__testcapi@@Base+0x8678>
   11758:	cbz	w0, 11764 <PyInit__testcapi@@Base+0x85a4>
   1175c:	mov	x0, xzr
   11760:	b	11770 <PyInit__testcapi@@Base+0x85b0>
   11764:	ldp	x0, x8, [x20]
   11768:	mov	x1, x19
   1176c:	blr	x8
   11770:	ldp	x20, x19, [sp, #16]
   11774:	ldp	x29, x30, [sp], #32
   11778:	ret
   1177c:	stp	x29, x30, [sp, #-48]!
   11780:	str	x21, [sp, #16]
   11784:	stp	x20, x19, [sp, #32]
   11788:	mov	x29, sp
   1178c:	mov	x19, x2
   11790:	mov	x20, x1
   11794:	mov	x21, x0
   11798:	bl	11838 <PyInit__testcapi@@Base+0x8678>
   1179c:	cbz	w0, 117a8 <PyInit__testcapi@@Base+0x85e8>
   117a0:	mov	x0, xzr
   117a4:	b	117bc <PyInit__testcapi@@Base+0x85fc>
   117a8:	ldr	x8, [x21, #16]
   117ac:	ldr	x0, [x21]
   117b0:	mov	x1, x20
   117b4:	mov	x2, x19
   117b8:	blr	x8
   117bc:	ldp	x20, x19, [sp, #32]
   117c0:	ldr	x21, [sp, #16]
   117c4:	ldp	x29, x30, [sp], #48
   117c8:	ret
   117cc:	stp	x29, x30, [sp, #-48]!
   117d0:	str	x21, [sp, #16]
   117d4:	stp	x20, x19, [sp, #32]
   117d8:	mov	x29, sp
   117dc:	mov	x19, x2
   117e0:	mov	x20, x1
   117e4:	mov	x21, x0
   117e8:	bl	11838 <PyInit__testcapi@@Base+0x8678>
   117ec:	cbz	w0, 117f8 <PyInit__testcapi@@Base+0x8638>
   117f0:	mov	x0, xzr
   117f4:	b	1180c <PyInit__testcapi@@Base+0x864c>
   117f8:	ldr	x8, [x21, #24]
   117fc:	ldr	x0, [x21]
   11800:	mov	x1, x20
   11804:	mov	x2, x19
   11808:	blr	x8
   1180c:	ldp	x20, x19, [sp, #32]
   11810:	ldr	x21, [sp, #16]
   11814:	ldp	x29, x30, [sp], #48
   11818:	ret
   1181c:	stp	x29, x30, [sp, #-16]!
   11820:	mov	x29, sp
   11824:	ldr	x8, [x0, #32]
   11828:	ldr	x0, [x0]
   1182c:	blr	x8
   11830:	ldp	x29, x30, [sp], #16
   11834:	ret
   11838:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
   1183c:	add	x9, x9, #0xf08
   11840:	ldr	x8, [x9, #8]
   11844:	ldrsw	x10, [x9]
   11848:	add	x8, x8, #0x1
   1184c:	cmp	x8, x10
   11850:	str	x8, [x9, #8]
   11854:	b.le	11874 <PyInit__testcapi@@Base+0x86b4>
   11858:	adrp	x9, 29000 <PyInit__testcapi@@Base+0x1fe40>
   1185c:	ldrsw	x9, [x9, #3852]
   11860:	mov	w0, #0x1                   	// #1
   11864:	cmp	w9, #0x1
   11868:	b.lt	11878 <PyInit__testcapi@@Base+0x86b8>  // b.tstop
   1186c:	cmp	x8, x9
   11870:	b.le	11878 <PyInit__testcapi@@Base+0x86b8>
   11874:	mov	w0, wzr
   11878:	ret
   1187c:	stp	x29, x30, [sp, #-32]!
   11880:	str	x19, [sp, #16]
   11884:	mov	x29, sp
   11888:	adrp	x8, 29000 <PyInit__testcapi@@Base+0x1fe40>
   1188c:	ldr	w8, [x8, #3864]
   11890:	cbz	w8, 118c4 <PyInit__testcapi@@Base+0x8704>
   11894:	adrp	x19, 29000 <PyInit__testcapi@@Base+0x1fe40>
   11898:	add	x19, x19, #0xf18
   1189c:	mov	x1, x19
   118a0:	str	wzr, [x1], #8
   118a4:	mov	w0, wzr
   118a8:	bl	8700 <PyMem_SetAllocator@plt>
   118ac:	add	x1, x19, #0x30
   118b0:	mov	w0, #0x1                   	// #1
   118b4:	bl	8700 <PyMem_SetAllocator@plt>
   118b8:	add	x1, x19, #0x58
   118bc:	mov	w0, #0x2                   	// #2
   118c0:	bl	8700 <PyMem_SetAllocator@plt>
   118c4:	ldr	x19, [sp, #16]
   118c8:	ldp	x29, x30, [sp], #32
   118cc:	ret
   118d0:	stp	x29, x30, [sp, #-48]!
   118d4:	str	x21, [sp, #16]
   118d8:	stp	x20, x19, [sp, #32]
   118dc:	mov	x29, sp
   118e0:	mov	x19, x0
   118e4:	ldr	x0, [x0]
   118e8:	bl	8b90 <PyThread_release_lock@plt>
   118ec:	bl	86e0 <PyGILState_Ensure@plt>
   118f0:	ldr	x8, [x19, #16]
   118f4:	mov	w20, w0
   118f8:	mov	x0, x8
   118fc:	bl	10fd0 <PyInit__testcapi@@Base+0x7e10>
   11900:	ldr	x8, [x19, #16]
   11904:	mov	x21, x0
   11908:	cbz	x8, 11918 <PyInit__testcapi@@Base+0x8758>
   1190c:	mov	x0, x8
   11910:	str	xzr, [x19, #16]
   11914:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11918:	cbnz	x21, 11924 <PyInit__testcapi@@Base+0x8764>
   1191c:	bl	8720 <PyErr_Print@plt>
   11920:	b	1192c <PyInit__testcapi@@Base+0x876c>
   11924:	mov	x0, x21
   11928:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   1192c:	mov	w0, w20
   11930:	bl	8360 <PyGILState_Release@plt>
   11934:	ldr	x0, [x19, #8]
   11938:	bl	8b90 <PyThread_release_lock@plt>
   1193c:	bl	8550 <PyThread_exit_thread@plt>
   11940:	stp	x29, x30, [sp, #-32]!
   11944:	str	x19, [sp, #16]
   11948:	mov	x29, sp
   1194c:	mov	x19, x0
   11950:	mov	x0, x1
   11954:	bl	83e0 <_PyObject_IsFreed@plt>
   11958:	cbz	w0, 11970 <PyInit__testcapi@@Base+0x87b0>
   1195c:	adrp	x19, 25000 <PyInit__testcapi@@Base+0x1be40>
   11960:	ldr	x19, [x19, #4016]
   11964:	mov	x0, x19
   11968:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   1196c:	b	11984 <PyInit__testcapi@@Base+0x87c4>
   11970:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   11974:	add	x1, x1, #0x111
   11978:	mov	x0, x19
   1197c:	bl	108b8 <PyInit__testcapi@@Base+0x76f8>
   11980:	mov	x19, xzr
   11984:	mov	x0, x19
   11988:	ldr	x19, [sp, #16]
   1198c:	ldp	x29, x30, [sp], #32
   11990:	ret
   11994:	stp	x29, x30, [sp, #-16]!
   11998:	mov	x29, sp
   1199c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   119a0:	ldr	x8, [x8, #4016]
   119a4:	cmp	x0, x8
   119a8:	b.eq	119dc <PyInit__testcapi@@Base+0x881c>  // b.none
   119ac:	ldr	x8, [x0, #8]
   119b0:	ldrb	w8, [x8, #171]
   119b4:	tbnz	w8, #2, 119e8 <PyInit__testcapi@@Base+0x8828>
   119b8:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   119bc:	ldr	x8, [x8, #3952]
   119c0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   119c4:	add	x1, x1, #0x16f
   119c8:	ldr	x0, [x8]
   119cc:	bl	8670 <PyErr_SetString@plt>
   119d0:	mov	w0, #0xffffffff            	// #-1
   119d4:	ldp	x29, x30, [sp], #16
   119d8:	ret
   119dc:	mov	x8, xzr
   119e0:	str	xzr, [x1]
   119e4:	b	119f4 <PyInit__testcapi@@Base+0x8834>
   119e8:	add	x8, x0, #0x18
   119ec:	str	x8, [x1]
   119f0:	ldr	x8, [x0, #16]
   119f4:	mov	w0, wzr
   119f8:	str	x8, [x2]
   119fc:	ldp	x29, x30, [sp], #16
   11a00:	ret
   11a04:	stp	x29, x30, [sp, #-16]!
   11a08:	mov	x29, sp
   11a0c:	mov	x3, xzr
   11a10:	bl	10ff0 <PyInit__testcapi@@Base+0x7e30>
   11a14:	ldp	x29, x30, [sp], #16
   11a18:	ret
   11a1c:	stp	x29, x30, [sp, #-16]!
   11a20:	mov	x29, sp
   11a24:	bl	87c0 <PyObject_Free@plt>
   11a28:	ldp	x29, x30, [sp], #16
   11a2c:	ret
   11a30:	sub	sp, sp, #0xa0
   11a34:	stp	x29, x30, [sp, #112]
   11a38:	str	x21, [sp, #128]
   11a3c:	stp	x20, x19, [sp, #144]
   11a40:	add	x29, sp, #0x70
   11a44:	mov	x20, x2
   11a48:	mov	x21, x1
   11a4c:	str	xzr, [x29, #24]
   11a50:	stur	xzr, [x29, #-8]
   11a54:	bl	8cf0 <_PyObject_New@plt>
   11a58:	mov	x19, x0
   11a5c:	cbz	x0, 11b4c <PyInit__testcapi@@Base+0x898c>
   11a60:	movi	v0.2d, #0x0
   11a64:	mov	x4, x19
   11a68:	str	q0, [x4, #16]!
   11a6c:	mov	x11, x4
   11a70:	mov	x8, x4
   11a74:	mov	x9, x4
   11a78:	mov	x10, x4
   11a7c:	str	q0, [x11, #64]!
   11a80:	add	x17, x4, #0x48
   11a84:	adrp	x2, 12000 <PyInit__testcapi@@Base+0x8e40>
   11a88:	adrp	x3, 29000 <PyInit__testcapi@@Base+0x1fe40>
   11a8c:	add	x5, x4, #0x1
   11a90:	add	x6, x4, #0x2
   11a94:	add	x7, x4, #0x4
   11a98:	add	x12, x4, #0x6
   11a9c:	add	x13, x4, #0x8
   11aa0:	add	x14, x4, #0xc
   11aa4:	add	x15, x4, #0x18
   11aa8:	add	x16, x4, #0x28
   11aac:	str	q0, [x8, #16]!
   11ab0:	str	q0, [x9, #32]!
   11ab4:	str	q0, [x10, #48]!
   11ab8:	stp	x11, x17, [sp, #80]
   11abc:	sub	x11, x29, #0x8
   11ac0:	add	x17, x29, #0x18
   11ac4:	add	x2, x2, #0x5e8
   11ac8:	add	x3, x3, #0x890
   11acc:	mov	x0, x21
   11ad0:	mov	x1, x20
   11ad4:	stp	x16, x10, [sp, #48]
   11ad8:	stp	x15, x9, [sp, #32]
   11adc:	stp	x14, x8, [sp, #16]
   11ae0:	stp	x17, x11, [sp, #64]
   11ae4:	stp	x12, x13, [sp]
   11ae8:	bl	8b80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
   11aec:	cbz	w0, 11b2c <PyInit__testcapi@@Base+0x896c>
   11af0:	ldr	x1, [x29, #24]
   11af4:	cbz	x1, 11b3c <PyInit__testcapi@@Base+0x897c>
   11af8:	ldur	x8, [x29, #-8]
   11afc:	cmp	x8, #0x6
   11b00:	b.lt	11b44 <PyInit__testcapi@@Base+0x8984>  // b.tstop
   11b04:	mov	x0, x19
   11b08:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11b0c:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   11b10:	ldr	x8, [x8, #3944]
   11b14:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   11b18:	add	x1, x1, #0x585
   11b1c:	ldr	x0, [x8]
   11b20:	bl	8670 <PyErr_SetString@plt>
   11b24:	mov	x19, xzr
   11b28:	b	11b4c <PyInit__testcapi@@Base+0x898c>
   11b2c:	mov	x0, x19
   11b30:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11b34:	mov	x19, xzr
   11b38:	b	11b4c <PyInit__testcapi@@Base+0x898c>
   11b3c:	strb	wzr, [x19, #72]
   11b40:	b	11b4c <PyInit__testcapi@@Base+0x898c>
   11b44:	add	x0, x19, #0x48
   11b48:	bl	8cb0 <strcpy@plt>
   11b4c:	mov	x0, x19
   11b50:	ldp	x20, x19, [sp, #144]
   11b54:	ldr	x21, [sp, #128]
   11b58:	ldp	x29, x30, [sp, #112]
   11b5c:	add	sp, sp, #0xa0
   11b60:	ret
   11b64:	stp	x29, x30, [sp, #-16]!
   11b68:	mov	x29, sp
   11b6c:	ldr	x8, [x0, #8]
   11b70:	ldr	x8, [x8, #320]
   11b74:	blr	x8
   11b78:	ldp	x29, x30, [sp], #16
   11b7c:	ret
   11b80:	stp	x29, x30, [sp, #-16]!
   11b84:	mov	x29, sp
   11b88:	mov	x3, x1
   11b8c:	mov	x2, x0
   11b90:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe40>
   11b94:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   11b98:	add	x0, x0, #0x5c1
   11b9c:	add	x1, x1, #0x5c8
   11ba0:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11ba4:	ldp	x29, x30, [sp], #16
   11ba8:	ret
   11bac:	stp	x29, x30, [sp, #-16]!
   11bb0:	mov	x29, sp
   11bb4:	mov	x3, x1
   11bb8:	mov	x2, x0
   11bbc:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe40>
   11bc0:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   11bc4:	add	x0, x0, #0x5c1
   11bc8:	add	x1, x1, #0x5c7
   11bcc:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11bd0:	ldp	x29, x30, [sp], #16
   11bd4:	ret
   11bd8:	stp	x29, x30, [sp, #-16]!
   11bdc:	mov	x29, sp
   11be0:	adrp	x0, 15000 <PyInit__testcapi@@Base+0xbe40>
   11be4:	add	x0, x0, #0x18d
   11be8:	bl	8ea0 <_Py_BuildValue_SizeT@plt>
   11bec:	ldp	x29, x30, [sp], #16
   11bf0:	ret
   11bf4:	stp	x29, x30, [sp, #-32]!
   11bf8:	str	x19, [sp, #16]
   11bfc:	mov	x29, sp
   11c00:	mov	x19, x0
   11c04:	ldr	x0, [x0, #16]
   11c08:	cbz	x0, 11c14 <PyInit__testcapi@@Base+0x8a54>
   11c0c:	str	xzr, [x19, #16]
   11c10:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11c14:	ldr	x8, [x19, #8]
   11c18:	mov	x0, x19
   11c1c:	ldr	x8, [x8, #320]
   11c20:	blr	x8
   11c24:	ldr	x19, [sp, #16]
   11c28:	ldp	x29, x30, [sp], #32
   11c2c:	ret
   11c30:	stp	x29, x30, [sp, #-32]!
   11c34:	str	x19, [sp, #16]
   11c38:	mov	x29, sp
   11c3c:	mov	x8, x1
   11c40:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   11c44:	mov	x19, x0
   11c48:	add	x1, x1, #0x5ed
   11c4c:	add	x4, x29, #0x18
   11c50:	mov	w2, #0x1                   	// #1
   11c54:	mov	w3, #0x1                   	// #1
   11c58:	mov	x0, x8
   11c5c:	bl	8960 <PyArg_UnpackTuple@plt>
   11c60:	cbz	w0, 11c90 <PyInit__testcapi@@Base+0x8ad0>
   11c64:	ldr	x8, [x19, #304]
   11c68:	mov	x0, x19
   11c6c:	mov	x1, xzr
   11c70:	blr	x8
   11c74:	mov	x19, x0
   11c78:	cbz	x0, 11c94 <PyInit__testcapi@@Base+0x8ad4>
   11c7c:	ldr	x0, [x29, #24]
   11c80:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11c84:	ldr	x8, [x29, #24]
   11c88:	str	x8, [x19, #16]
   11c8c:	b	11c94 <PyInit__testcapi@@Base+0x8ad4>
   11c90:	mov	x19, xzr
   11c94:	mov	x0, x19
   11c98:	ldr	x19, [sp, #16]
   11c9c:	ldp	x29, x30, [sp], #32
   11ca0:	ret
   11ca4:	stp	x29, x30, [sp, #-32]!
   11ca8:	str	x19, [sp, #16]
   11cac:	mov	x29, sp
   11cb0:	mov	x19, x0
   11cb4:	ldr	x0, [x0, #16]
   11cb8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11cbc:	ldr	x0, [x19, #16]
   11cc0:	ldr	x19, [sp, #16]
   11cc4:	ldp	x29, x30, [sp], #32
   11cc8:	ret
   11ccc:	stp	x29, x30, [sp, #-16]!
   11cd0:	mov	x29, sp
   11cd4:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   11cd8:	ldr	x8, [x8, #4064]
   11cdc:	ldr	x8, [x8, #312]
   11ce0:	blr	x8
   11ce4:	str	wzr, [x0, #40]
   11ce8:	ldp	x29, x30, [sp], #16
   11cec:	ret
   11cf0:	stp	x29, x30, [sp, #-32]!
   11cf4:	str	x19, [sp, #16]
   11cf8:	mov	x29, sp
   11cfc:	adrp	x8, 25000 <PyInit__testcapi@@Base+0x1be40>
   11d00:	ldr	x8, [x8, #4016]
   11d04:	mov	x19, x0
   11d08:	cmp	x1, x8
   11d0c:	b.eq	11d24 <PyInit__testcapi@@Base+0x8b64>  // b.none
   11d10:	cbz	x1, 11d24 <PyInit__testcapi@@Base+0x8b64>
   11d14:	mov	x0, x19
   11d18:	bl	86a0 <PyMethod_New@plt>
   11d1c:	mov	x19, x0
   11d20:	b	11d2c <PyInit__testcapi@@Base+0x8b6c>
   11d24:	mov	x0, x19
   11d28:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11d2c:	mov	x0, x19
   11d30:	ldr	x19, [sp, #16]
   11d34:	ldp	x29, x30, [sp], #32
   11d38:	ret
   11d3c:	stp	x29, x30, [sp, #-16]!
   11d40:	mov	x29, sp
   11d44:	ldr	x8, [x0, #304]
   11d48:	mov	x1, xzr
   11d4c:	blr	x8
   11d50:	adrp	x8, 11000 <PyInit__testcapi@@Base+0x7e40>
   11d54:	add	x8, x8, #0xd64
   11d58:	str	x8, [x0, #16]
   11d5c:	ldp	x29, x30, [sp], #16
   11d60:	ret
   11d64:	stp	x29, x30, [sp, #-16]!
   11d68:	mov	x29, sp
   11d6c:	ldr	x8, [x0, #16]
   11d70:	cmp	x8, #0x0
   11d74:	cset	w0, ne  // ne = any
   11d78:	bl	88d0 <PyBool_FromLong@plt>
   11d7c:	ldp	x29, x30, [sp], #16
   11d80:	ret
   11d84:	stp	x29, x30, [sp, #-32]!
   11d88:	str	x19, [sp, #16]
   11d8c:	mov	x29, sp
   11d90:	mov	x0, x1
   11d94:	mov	x19, x1
   11d98:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11d9c:	mov	x0, x19
   11da0:	ldr	x19, [sp, #16]
   11da4:	ldp	x29, x30, [sp], #32
   11da8:	ret
   11dac:	stp	x29, x30, [sp, #-32]!
   11db0:	str	x19, [sp, #16]
   11db4:	mov	x29, sp
   11db8:	mov	x19, x0
   11dbc:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11dc0:	mov	x0, x19
   11dc4:	ldr	x19, [sp, #16]
   11dc8:	ldp	x29, x30, [sp], #32
   11dcc:	ret
   11dd0:	stp	x29, x30, [sp, #-16]!
   11dd4:	mov	x29, sp
   11dd8:	bl	8cf0 <_PyObject_New@plt>
   11ddc:	adrp	x8, 11000 <PyInit__testcapi@@Base+0x7e40>
   11de0:	add	x8, x8, #0xd64
   11de4:	stp	xzr, x8, [x0, #16]
   11de8:	ldp	x29, x30, [sp], #16
   11dec:	ret
   11df0:	stp	x29, x30, [sp, #-32]!
   11df4:	str	x19, [sp, #16]
   11df8:	mov	x29, sp
   11dfc:	mov	x19, x0
   11e00:	ldr	x0, [x0, #16]
   11e04:	cbz	x0, 11e10 <PyInit__testcapi@@Base+0x8c50>
   11e08:	str	xzr, [x19, #16]
   11e0c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11e10:	ldr	x8, [x19, #8]
   11e14:	mov	x0, x19
   11e18:	ldr	x8, [x8, #320]
   11e1c:	blr	x8
   11e20:	ldr	x19, [sp, #16]
   11e24:	ldp	x29, x30, [sp], #32
   11e28:	ret
   11e2c:	stp	x29, x30, [sp, #-16]!
   11e30:	mov	x29, sp
   11e34:	ldr	x1, [x0, #16]
   11e38:	mov	w0, #0x1                   	// #1
   11e3c:	bl	9040 <PyTuple_Pack@plt>
   11e40:	ldp	x29, x30, [sp], #16
   11e44:	ret
   11e48:	stp	x29, x30, [sp, #-16]!
   11e4c:	mov	x29, sp
   11e50:	mov	x0, x1
   11e54:	bl	11e60 <PyInit__testcapi@@Base+0x8ca0>
   11e58:	ldp	x29, x30, [sp], #16
   11e5c:	ret
   11e60:	stp	x29, x30, [sp, #-32]!
   11e64:	stp	x20, x19, [sp, #16]
   11e68:	mov	x29, sp
   11e6c:	mov	x19, x0
   11e70:	adrp	x0, 27000 <PyInit__testcapi@@Base+0x1de40>
   11e74:	add	x0, x0, #0x7e0
   11e78:	bl	8cf0 <_PyObject_New@plt>
   11e7c:	mov	x20, x0
   11e80:	cbz	x0, 11e90 <PyInit__testcapi@@Base+0x8cd0>
   11e84:	mov	x0, x19
   11e88:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11e8c:	str	x19, [x20, #16]
   11e90:	mov	x0, x20
   11e94:	ldp	x20, x19, [sp, #16]
   11e98:	ldp	x29, x30, [sp], #32
   11e9c:	ret
   11ea0:	stp	x29, x30, [sp, #-32]!
   11ea4:	str	x19, [sp, #16]
   11ea8:	mov	x29, sp
   11eac:	adrp	x19, 27000 <PyInit__testcapi@@Base+0x1de40>
   11eb0:	add	x19, x19, #0xb20
   11eb4:	mov	x0, x19
   11eb8:	bl	9898 <PyInit__testcapi@@Base+0x6d8>
   11ebc:	mov	x0, x19
   11ec0:	mov	x1, xzr
   11ec4:	bl	8580 <PyErr_SetObject@plt>
   11ec8:	ldr	x19, [sp, #16]
   11ecc:	mov	w0, #0xffffffff            	// #-1
   11ed0:	ldp	x29, x30, [sp], #32
   11ed4:	ret
   11ed8:	mov	w8, #0xa                   	// #10
   11edc:	str	w8, [x0, #16]
   11ee0:	mov	w0, wzr
   11ee4:	ret
   11ee8:	stp	x29, x30, [sp, #-32]!
   11eec:	stp	x20, x19, [sp, #16]
   11ef0:	mov	x29, sp
   11ef4:	ldr	x20, [x0, #8]
   11ef8:	mov	x19, x0
   11efc:	bl	9070 <PyObject_GC_UnTrack@plt>
   11f00:	mov	x0, x19
   11f04:	bl	8590 <PyObject_GC_Del@plt>
   11f08:	mov	x0, x20
   11f0c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11f10:	ldp	x20, x19, [sp, #16]
   11f14:	ldp	x29, x30, [sp], #32
   11f18:	ret
   11f1c:	stp	x29, x30, [sp, #-32]!
   11f20:	str	x19, [sp, #16]
   11f24:	mov	x29, sp
   11f28:	ldr	x19, [x0, #8]
   11f2c:	bl	87c0 <PyObject_Free@plt>
   11f30:	mov	x0, x19
   11f34:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   11f38:	ldr	x19, [sp, #16]
   11f3c:	ldp	x29, x30, [sp], #32
   11f40:	ret
   11f44:	stp	x29, x30, [sp, #-32]!
   11f48:	str	x19, [sp, #16]
   11f4c:	mov	x29, sp
   11f50:	mov	x19, x0
   11f54:	bl	11ed8 <PyInit__testcapi@@Base+0x8d18>
   11f58:	mov	w8, #0x14                  	// #20
   11f5c:	str	w8, [x19, #24]
   11f60:	ldr	x19, [sp, #16]
   11f64:	mov	w0, wzr
   11f68:	ldp	x29, x30, [sp], #32
   11f6c:	ret
   11f70:	stp	x29, x30, [sp, #-48]!
   11f74:	str	x21, [sp, #16]
   11f78:	stp	x20, x19, [sp, #32]
   11f7c:	mov	x29, sp
   11f80:	mov	x20, x0
   11f84:	ldr	x0, [x0, #8]
   11f88:	mov	x21, x1
   11f8c:	mov	w1, #0x30                  	// #48
   11f90:	mov	x19, x2
   11f94:	bl	85a0 <PyType_GetSlot@plt>
   11f98:	mov	w1, #0x3c                  	// #60
   11f9c:	bl	85a0 <PyType_GetSlot@plt>
   11fa0:	mov	x8, x0
   11fa4:	mov	x0, x20
   11fa8:	mov	x1, x21
   11fac:	mov	x2, x19
   11fb0:	blr	x8
   11fb4:	ldp	x20, x19, [sp, #32]
   11fb8:	ldr	x21, [sp, #16]
   11fbc:	mov	w0, wzr
   11fc0:	ldp	x29, x30, [sp], #48
   11fc4:	ret
   11fc8:	sub	sp, sp, #0x50
   11fcc:	stp	x29, x30, [sp, #32]
   11fd0:	stp	x22, x21, [sp, #48]
   11fd4:	stp	x20, x19, [sp, #64]
   11fd8:	add	x29, sp, #0x20
   11fdc:	mov	x22, x0
   11fe0:	sub	x0, x29, #0x8
   11fe4:	add	x1, sp, #0x10
   11fe8:	add	x2, sp, #0x8
   11fec:	bl	8ce0 <PyErr_Fetch@plt>
   11ff0:	adrp	x0, 26000 <PyInit__testcapi@@Base+0x1ce40>
   11ff4:	add	x0, x0, #0x738
   11ff8:	bl	89f0 <PyState_FindModule@plt>
   11ffc:	mov	x20, x0
   12000:	cbz	x0, 120a8 <PyInit__testcapi@@Base+0x8ee8>
   12004:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   12008:	add	x1, x1, #0x6aa
   1200c:	mov	x0, x20
   12010:	bl	84a0 <PyObject_GetAttrString@plt>
   12014:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   12018:	mov	x19, x0
   1201c:	add	x1, x1, #0x687
   12020:	mov	x0, x20
   12024:	bl	84a0 <PyObject_GetAttrString@plt>
   12028:	mov	x20, x0
   1202c:	mov	x21, xzr
   12030:	cbz	x19, 120b0 <PyInit__testcapi@@Base+0x8ef0>
   12034:	cbz	x20, 120b0 <PyInit__testcapi@@Base+0x8ef0>
   12038:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   1203c:	add	x1, x1, #0x6c9
   12040:	mov	x0, x22
   12044:	mov	x2, x20
   12048:	bl	8510 <PyObject_SetAttrString@plt>
   1204c:	tbnz	w0, #31, 120ac <PyInit__testcapi@@Base+0x8eec>
   12050:	ldr	x0, [x19]
   12054:	bl	87f0 <PyLong_FromSsize_t@plt>
   12058:	mov	x21, x0
   1205c:	cbz	x0, 120b0 <PyInit__testcapi@@Base+0x8ef0>
   12060:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   12064:	add	x1, x1, #0x6d3
   12068:	mov	x0, x19
   1206c:	mov	x2, x21
   12070:	bl	8510 <PyObject_SetAttrString@plt>
   12074:	tbnz	w0, #31, 120b0 <PyInit__testcapi@@Base+0x8ef0>
   12078:	mov	x0, x21
   1207c:	bl	98a8 <PyInit__testcapi@@Base+0x6e8>
   12080:	ldr	x0, [x20]
   12084:	bl	87f0 <PyLong_FromSsize_t@plt>
   12088:	mov	x21, x0
   1208c:	cbz	x0, 120b0 <PyInit__testcapi@@Base+0x8ef0>
   12090:	adrp	x1, 15000 <PyInit__testcapi@@Base+0xbe40>
   12094:	add	x1, x1, #0x6d3
   12098:	mov	x0, x20
   1209c:	mov	x2, x21
   120a0:	bl	8510 <PyObject_SetAttrString@plt>
   120a4:	b	120b0 <PyInit__testcapi@@Base+0x8ef0>
   120a8:	mov	x19, xzr
   120ac:	mov	x21, xzr
   120b0:	mov	x0, x19
   120b4:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   120b8:	mov	x0, x20
   120bc:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   120c0:	mov	x0, x21
   120c4:	bl	108a0 <PyInit__testcapi@@Base+0x76e0>
   120c8:	ldur	x0, [x29, #-8]
   120cc:	ldp	x2, x1, [sp, #8]
   120d0:	bl	8380 <PyErr_Restore@plt>
   120d4:	ldp	x20, x19, [sp, #64]
   120d8:	ldp	x22, x21, [sp, #48]
   120dc:	ldp	x29, x30, [sp, #32]
   120e0:	add	sp, sp, #0x50
   120e4:	ret

Disassembly of section .fini:

00000000000120e8 <.fini>:
   120e8:	stp	x29, x30, [sp, #-16]!
   120ec:	mov	x29, sp
   120f0:	ldp	x29, x30, [sp], #16
   120f4:	ret
