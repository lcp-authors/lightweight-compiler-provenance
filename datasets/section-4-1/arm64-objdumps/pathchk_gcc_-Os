
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//pathchk_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000980 <_init>:
 980:	stp	x29, x30, [sp, #-16]!
 984:	mov	x29, sp
 988:	bl	ac0 <call_weak_fn>
 98c:	ldp	x29, x30, [sp], #16
 990:	ret

Disassembly of section .plt:

00000000000009a0 <.plt>:
 9a0:	stp	x16, x30, [sp, #-16]!
 9a4:	adrp	x16, 11000 <__FRAME_END__+0xfd34>
 9a8:	ldr	x17, [x16, #4088]
 9ac:	add	x16, x16, #0xff8
 9b0:	br	x17
 9b4:	nop
 9b8:	nop
 9bc:	nop

00000000000009c0 <strlen@plt>:
 9c0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9c4:	ldr	x17, [x16]
 9c8:	add	x16, x16, #0x0
 9cc:	br	x17

00000000000009d0 <builtin_error@plt>:
 9d0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9d4:	ldr	x17, [x16, #8]
 9d8:	add	x16, x16, #0x8
 9dc:	br	x17

00000000000009e0 <__cxa_finalize@plt>:
 9e0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9e4:	ldr	x17, [x16, #16]
 9e8:	add	x16, x16, #0x10
 9ec:	br	x17

00000000000009f0 <builtin_help@plt>:
 9f0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9f4:	ldr	x17, [x16, #24]
 9f8:	add	x16, x16, #0x18
 9fc:	br	x17

0000000000000a00 <xmalloc@plt>:
 a00:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a04:	ldr	x17, [x16, #32]
 a08:	add	x16, x16, #0x20
 a0c:	br	x17

0000000000000a10 <builtin_usage@plt>:
 a10:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a14:	ldr	x17, [x16, #40]
 a18:	add	x16, x16, #0x28
 a1c:	br	x17

0000000000000a20 <strerror@plt>:
 a20:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a24:	ldr	x17, [x16, #48]
 a28:	add	x16, x16, #0x30
 a2c:	br	x17

0000000000000a30 <__gmon_start__@plt>:
 a30:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a34:	ldr	x17, [x16, #56]
 a38:	add	x16, x16, #0x38
 a3c:	br	x17

0000000000000a40 <access@plt>:
 a40:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a44:	ldr	x17, [x16, #64]
 a48:	add	x16, x16, #0x40
 a4c:	br	x17

0000000000000a50 <free@plt>:
 a50:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a54:	ldr	x17, [x16, #72]
 a58:	add	x16, x16, #0x48
 a5c:	br	x17

0000000000000a60 <internal_getopt@plt>:
 a60:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a64:	ldr	x17, [x16, #80]
 a68:	add	x16, x16, #0x50
 a6c:	br	x17

0000000000000a70 <reset_internal_getopt@plt>:
 a70:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a74:	ldr	x17, [x16, #88]
 a78:	add	x16, x16, #0x58
 a7c:	br	x17

0000000000000a80 <strchr@plt>:
 a80:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a84:	ldr	x17, [x16, #96]
 a88:	add	x16, x16, #0x60
 a8c:	br	x17

0000000000000a90 <strcpy@plt>:
 a90:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 a94:	ldr	x17, [x16, #104]
 a98:	add	x16, x16, #0x68
 a9c:	br	x17

0000000000000aa0 <__errno_location@plt>:
 aa0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 aa4:	ldr	x17, [x16, #112]
 aa8:	add	x16, x16, #0x70
 aac:	br	x17

0000000000000ab0 <__xstat@plt>:
 ab0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 ab4:	ldr	x17, [x16, #120]
 ab8:	add	x16, x16, #0x78
 abc:	br	x17

Disassembly of section .text:

0000000000000ac0 <call_weak_fn>:
 ac0:	adrp	x0, 11000 <__FRAME_END__+0xfd34>
 ac4:	ldr	x0, [x0, #4048]
 ac8:	cbz	x0, ad0 <call_weak_fn+0x10>
 acc:	b	a30 <__gmon_start__@plt>
 ad0:	ret

0000000000000ad4 <deregister_tm_clones>:
 ad4:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 ad8:	add	x0, x0, #0xf0
 adc:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 ae0:	add	x1, x1, #0xf0
 ae4:	cmp	x1, x0
 ae8:	b.eq	b00 <deregister_tm_clones+0x2c>  // b.none
 aec:	adrp	x1, 11000 <__FRAME_END__+0xfd34>
 af0:	ldr	x1, [x1, #4032]
 af4:	cbz	x1, b00 <deregister_tm_clones+0x2c>
 af8:	mov	x16, x1
 afc:	br	x16
 b00:	ret

0000000000000b04 <register_tm_clones>:
 b04:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b08:	add	x0, x0, #0xf0
 b0c:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 b10:	add	x1, x1, #0xf0
 b14:	sub	x1, x1, x0
 b18:	mov	x2, #0x2                   	// #2
 b1c:	asr	x1, x1, #3
 b20:	sdiv	x1, x1, x2
 b24:	cbz	x1, b3c <register_tm_clones+0x38>
 b28:	adrp	x2, 11000 <__FRAME_END__+0xfd34>
 b2c:	ldr	x2, [x2, #4064]
 b30:	cbz	x2, b3c <register_tm_clones+0x38>
 b34:	mov	x16, x2
 b38:	br	x16
 b3c:	ret

0000000000000b40 <__do_global_dtors_aux>:
 b40:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b44:	ldrb	w1, [x0, #240]
 b48:	cbnz	w1, b8c <__do_global_dtors_aux+0x4c>
 b4c:	stp	x29, x30, [sp, #-32]!
 b50:	mov	x29, sp
 b54:	str	x19, [sp, #16]
 b58:	mov	x19, x0
 b5c:	adrp	x0, 11000 <__FRAME_END__+0xfd34>
 b60:	ldr	x0, [x0, #4040]
 b64:	cbz	x0, b74 <__do_global_dtors_aux+0x34>
 b68:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b6c:	ldr	x0, [x0, #128]
 b70:	bl	9e0 <__cxa_finalize@plt>
 b74:	bl	ad4 <deregister_tm_clones>
 b78:	mov	w0, #0x1                   	// #1
 b7c:	strb	w0, [x19, #240]
 b80:	ldr	x19, [sp, #16]
 b84:	ldp	x29, x30, [sp], #32
 b88:	ret
 b8c:	ret

0000000000000b90 <frame_dummy>:
 b90:	b	b04 <register_tm_clones>

0000000000000b94 <xstrdup>:
 b94:	stp	x29, x30, [sp, #-32]!
 b98:	mov	x29, sp
 b9c:	str	x19, [sp, #16]
 ba0:	mov	x19, x0
 ba4:	bl	9c0 <strlen@plt>
 ba8:	add	x0, x0, #0x1
 bac:	bl	a00 <xmalloc@plt>
 bb0:	mov	x1, x19
 bb4:	ldr	x19, [sp, #16]
 bb8:	ldp	x29, x30, [sp], #32
 bbc:	b	a90 <strcpy@plt>

0000000000000bc0 <pathchk_builtin>:
 bc0:	stp	x29, x30, [sp, #-224]!
 bc4:	mov	x29, sp
 bc8:	stp	x19, x20, [sp, #16]
 bcc:	adrp	x20, 0 <_init-0x980>
 bd0:	add	x20, x20, #0xe7a
 bd4:	mov	x19, x0
 bd8:	stp	x21, x22, [sp, #32]
 bdc:	stp	x23, x24, [sp, #48]
 be0:	stp	x25, x26, [sp, #64]
 be4:	stp	x27, x28, [sp, #80]
 be8:	bl	a70 <reset_internal_getopt@plt>
 bec:	mov	x1, x20
 bf0:	mov	x0, x19
 bf4:	bl	a60 <internal_getopt@plt>
 bf8:	cmn	w0, #0x1
 bfc:	b.ne	c50 <pathchk_builtin+0x90>  // b.any
 c00:	adrp	x0, 11000 <__FRAME_END__+0xfd34>
 c04:	mov	w23, #0x0                   	// #0
 c08:	ldr	x0, [x0, #4056]
 c0c:	ldr	x24, [x0]
 c10:	cbz	x24, c60 <pathchk_builtin+0xa0>
 c14:	adrp	x25, 1000 <_fini+0x198>
 c18:	add	x27, sp, #0x60
 c1c:	add	x25, x25, #0x8d
 c20:	ldr	x0, [x24, #8]
 c24:	ldr	x19, [x0]
 c28:	mov	x0, x19
 c2c:	ldrb	w2, [x0]
 c30:	cbnz	w2, c90 <pathchk_builtin+0xd0>
 c34:	ldrb	w2, [x19]
 c38:	cbnz	w2, cb8 <pathchk_builtin+0xf8>
 c3c:	mov	w20, #0x0                   	// #0
 c40:	ldr	x24, [x24]
 c44:	orr	w23, w23, w20
 c48:	cbnz	x24, c20 <pathchk_builtin+0x60>
 c4c:	b	c70 <pathchk_builtin+0xb0>
 c50:	cmn	w0, #0x63
 c54:	b.eq	c68 <pathchk_builtin+0xa8>  // b.none
 c58:	cmp	w0, #0x70
 c5c:	b.eq	bec <pathchk_builtin+0x2c>  // b.none
 c60:	bl	a10 <builtin_usage@plt>
 c64:	b	c6c <pathchk_builtin+0xac>
 c68:	bl	9f0 <builtin_help@plt>
 c6c:	mov	w23, #0x102                 	// #258
 c70:	mov	w0, w23
 c74:	ldp	x19, x20, [sp, #16]
 c78:	ldp	x21, x22, [sp, #32]
 c7c:	ldp	x23, x24, [sp, #48]
 c80:	ldp	x25, x26, [sp, #64]
 c84:	ldp	x27, x28, [sp, #80]
 c88:	ldp	x29, x30, [sp], #224
 c8c:	ret
 c90:	ldrb	w1, [x25, w2, sxtw]
 c94:	cbnz	w1, cb0 <pathchk_builtin+0xf0>
 c98:	adrp	x0, 0 <_init-0x980>
 c9c:	mov	x1, x19
 ca0:	add	x0, x0, #0xe7c
 ca4:	bl	9d0 <builtin_error@plt>
 ca8:	mov	w20, #0x1                   	// #1
 cac:	b	c40 <pathchk_builtin+0x80>
 cb0:	add	x0, x0, #0x1
 cb4:	b	c2c <pathchk_builtin+0x6c>
 cb8:	cmp	w2, #0x2f
 cbc:	adrp	x1, 0 <_init-0x980>
 cc0:	add	x1, x1, #0xf65
 cc4:	adrp	x0, 0 <_init-0x980>
 cc8:	add	x0, x0, #0xe78
 ccc:	mov	x28, x19
 cd0:	csel	x0, x0, x1, eq  // eq = none
 cd4:	bl	b94 <xstrdup>
 cd8:	mov	x21, x0
 cdc:	ldrb	w0, [x28]
 ce0:	cmp	w0, #0x2f
 ce4:	b.eq	d30 <pathchk_builtin+0x170>  // b.none
 ce8:	mov	x0, x28
 cec:	mov	w1, #0x2f                  	// #47
 cf0:	bl	a80 <strchr@plt>
 cf4:	mov	x22, x0
 cf8:	cbz	x0, d38 <pathchk_builtin+0x178>
 cfc:	strb	wzr, [x0]
 d00:	mov	x1, x27
 d04:	mov	x0, x19
 d08:	bl	e58 <__stat>
 d0c:	cmp	w0, #0x0
 d10:	b.ge	d6c <pathchk_builtin+0x1ac>  // b.tcont
 d14:	bl	aa0 <__errno_location@plt>
 d18:	ldr	w0, [x0]
 d1c:	cmp	w0, #0x4
 d20:	b.eq	d00 <pathchk_builtin+0x140>  // b.none
 d24:	mov	w20, #0x0                   	// #0
 d28:	mov	w26, #0x2                   	// #2
 d2c:	b	d48 <pathchk_builtin+0x188>
 d30:	add	x28, x28, #0x1
 d34:	b	cdc <pathchk_builtin+0x11c>
 d38:	mov	x0, x28
 d3c:	bl	9c0 <strlen@plt>
 d40:	add	x22, x28, x0
 d44:	mov	w20, #0x1                   	// #1
 d48:	sub	x2, x22, x28
 d4c:	cmp	w2, #0xe
 d50:	b.le	df4 <pathchk_builtin+0x234>
 d54:	mov	x1, x28
 d58:	mov	w3, #0xe                   	// #14
 d5c:	adrp	x0, 0 <_init-0x980>
 d60:	add	x0, x0, #0xeea
 d64:	bl	9d0 <builtin_error@plt>
 d68:	b	d90 <pathchk_builtin+0x1d0>
 d6c:	b.ne	d24 <pathchk_builtin+0x164>  // b.any
 d70:	ldr	w0, [sp, #112]
 d74:	and	w0, w0, #0xf000
 d78:	cmp	w0, #0x4, lsl #12
 d7c:	b.eq	d9c <pathchk_builtin+0x1dc>  // b.none
 d80:	adrp	x0, 0 <_init-0x980>
 d84:	mov	x1, x19
 d88:	add	x0, x0, #0xeaa
 d8c:	bl	9d0 <builtin_error@plt>
 d90:	mov	x0, x21
 d94:	bl	a50 <free@plt>
 d98:	b	ca8 <pathchk_builtin+0xe8>
 d9c:	mov	x0, x19
 da0:	mov	w1, #0x1                   	// #1
 da4:	bl	a40 <access@plt>
 da8:	mov	w20, w0
 dac:	cbz	w0, dec <pathchk_builtin+0x22c>
 db0:	bl	aa0 <__errno_location@plt>
 db4:	ldr	w0, [x0]
 db8:	cmp	w0, #0xd
 dbc:	b.ne	dd0 <pathchk_builtin+0x210>  // b.any
 dc0:	adrp	x0, 0 <_init-0x980>
 dc4:	mov	x1, x19
 dc8:	add	x0, x0, #0xec2
 dcc:	b	d8c <pathchk_builtin+0x1cc>
 dd0:	bl	a20 <strerror@plt>
 dd4:	mov	x2, x0
 dd8:	mov	x1, x19
 ddc:	adrp	x0, 0 <_init-0x980>
 de0:	add	x0, x0, #0xee3
 de4:	bl	9d0 <builtin_error@plt>
 de8:	b	d90 <pathchk_builtin+0x1d0>
 dec:	mov	w26, #0x1                   	// #1
 df0:	b	d48 <pathchk_builtin+0x188>
 df4:	cbnz	w20, e24 <pathchk_builtin+0x264>
 df8:	cmp	w26, #0x1
 dfc:	b.ne	e14 <pathchk_builtin+0x254>  // b.any
 e00:	mov	x0, x21
 e04:	bl	a50 <free@plt>
 e08:	mov	x0, x19
 e0c:	bl	b94 <xstrdup>
 e10:	mov	x21, x0
 e14:	mov	x28, x22
 e18:	mov	w0, #0x2f                  	// #47
 e1c:	strb	w0, [x28], #1
 e20:	b	cdc <pathchk_builtin+0x11c>
 e24:	mov	x0, x21
 e28:	bl	a50 <free@plt>
 e2c:	mov	x0, x19
 e30:	bl	9c0 <strlen@plt>
 e34:	mov	x2, x0
 e38:	cmp	x0, #0x100
 e3c:	b.ls	c3c <pathchk_builtin+0x7c>  // b.plast
 e40:	mov	x1, x19
 e44:	mov	w3, #0x100                 	// #256
 e48:	adrp	x0, 0 <_init-0x980>
 e4c:	add	x0, x0, #0xf17
 e50:	bl	9d0 <builtin_error@plt>
 e54:	b	c40 <pathchk_builtin+0x80>

0000000000000e58 <__stat>:
 e58:	mov	x2, x1
 e5c:	mov	x1, x0
 e60:	mov	w0, #0x0                   	// #0
 e64:	b	ab0 <__xstat@plt>

Disassembly of section .fini:

0000000000000e68 <_fini>:
 e68:	stp	x29, x30, [sp, #-16]!
 e6c:	mov	x29, sp
 e70:	ldp	x29, x30, [sp], #16
 e74:	ret
