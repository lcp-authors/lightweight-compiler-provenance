
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_xxsubinterpreters.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000024b8 <.init>:
    24b8:	stp	x29, x30, [sp, #-16]!
    24bc:	mov	x29, sp
    24c0:	bl	2940 <PyThread_free_lock@plt+0x10>
    24c4:	ldp	x29, x30, [sp], #16
    24c8:	ret

Disassembly of section .plt:

00000000000024d0 <PyUnicode_FromFormat@plt-0x20>:
    24d0:	stp	x16, x30, [sp, #-16]!
    24d4:	adrp	x16, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    24d8:	ldr	x17, [x16, #4088]
    24dc:	add	x16, x16, #0xff8
    24e0:	br	x17
    24e4:	nop
    24e8:	nop
    24ec:	nop

00000000000024f0 <PyUnicode_FromFormat@plt>:
    24f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    24f4:	ldr	x17, [x16]
    24f8:	add	x16, x16, #0x0
    24fc:	br	x17

0000000000002500 <PyList_New@plt>:
    2500:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2504:	ldr	x17, [x16, #8]
    2508:	add	x16, x16, #0x8
    250c:	br	x17

0000000000002510 <PyDict_SetItemString@plt>:
    2510:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2514:	ldr	x17, [x16, #16]
    2518:	add	x16, x16, #0x10
    251c:	br	x17

0000000000002520 <PyLong_AsLongLongAndOverflow@plt>:
    2520:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2524:	ldr	x17, [x16, #24]
    2528:	add	x16, x16, #0x18
    252c:	br	x17

0000000000002530 <strlen@plt>:
    2530:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2534:	ldr	x17, [x16, #32]
    2538:	add	x16, x16, #0x20
    253c:	br	x17

0000000000002540 <PyDict_Size@plt>:
    2540:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2544:	ldr	x17, [x16, #40]
    2548:	add	x16, x16, #0x28
    254c:	br	x17

0000000000002550 <_PyInterpreterID_LookUp@plt>:
    2550:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2554:	ldr	x17, [x16, #48]
    2558:	add	x16, x16, #0x30
    255c:	br	x17

0000000000002560 <PyInterpreterState_ThreadHead@plt>:
    2560:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2564:	ldr	x17, [x16, #56]
    2568:	add	x16, x16, #0x38
    256c:	br	x17

0000000000002570 <PyArg_ParseTupleAndKeywords@plt>:
    2570:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2574:	ldr	x17, [x16, #64]
    2578:	add	x16, x16, #0x40
    257c:	br	x17

0000000000002580 <PyList_Insert@plt>:
    2580:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2584:	ldr	x17, [x16, #72]
    2588:	add	x16, x16, #0x48
    258c:	br	x17

0000000000002590 <PyMem_Free@plt>:
    2590:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2594:	ldr	x17, [x16, #80]
    2598:	add	x16, x16, #0x50
    259c:	br	x17

00000000000025a0 <_PyCrossInterpreterData_NewObject@plt>:
    25a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25a4:	ldr	x17, [x16, #88]
    25a8:	add	x16, x16, #0x58
    25ac:	br	x17

00000000000025b0 <PyObject_GetAttrString@plt>:
    25b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25b4:	ldr	x17, [x16, #96]
    25b8:	add	x16, x16, #0x60
    25bc:	br	x17

00000000000025c0 <__cxa_finalize@plt>:
    25c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25c4:	ldr	x17, [x16, #104]
    25c8:	add	x16, x16, #0x68
    25cc:	br	x17

00000000000025d0 <Py_EndInterpreter@plt>:
    25d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25d4:	ldr	x17, [x16, #112]
    25d8:	add	x16, x16, #0x70
    25dc:	br	x17

00000000000025e0 <_Py_Dealloc@plt>:
    25e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25e4:	ldr	x17, [x16, #120]
    25e8:	add	x16, x16, #0x78
    25ec:	br	x17

00000000000025f0 <PyInterpreterState_Next@plt>:
    25f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    25f4:	ldr	x17, [x16, #128]
    25f8:	add	x16, x16, #0x80
    25fc:	br	x17

0000000000002600 <PyErr_NoMemory@plt>:
    2600:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2604:	ldr	x17, [x16, #136]
    2608:	add	x16, x16, #0x88
    260c:	br	x17

0000000000002610 <_PyCrossInterpreterData_Release@plt>:
    2610:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2614:	ldr	x17, [x16, #144]
    2618:	add	x16, x16, #0x90
    261c:	br	x17

0000000000002620 <_PyInterpreterState_GetIDObject@plt>:
    2620:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2624:	ldr	x17, [x16, #152]
    2628:	add	x16, x16, #0x98
    262c:	br	x17

0000000000002630 <_PyType_Name@plt>:
    2630:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2634:	ldr	x17, [x16, #160]
    2638:	add	x16, x16, #0xa0
    263c:	br	x17

0000000000002640 <PyThread_acquire_lock@plt>:
    2640:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2644:	ldr	x17, [x16, #168]
    2648:	add	x16, x16, #0xa8
    264c:	br	x17

0000000000002650 <PyObject_RichCompare@plt>:
    2650:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2654:	ldr	x17, [x16, #176]
    2658:	add	x16, x16, #0xb0
    265c:	br	x17

0000000000002660 <_PyInterpreterState_GetMainModule@plt>:
    2660:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2664:	ldr	x17, [x16, #184]
    2668:	add	x16, x16, #0xb8
    266c:	br	x17

0000000000002670 <PyErr_SetString@plt>:
    2670:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2674:	ldr	x17, [x16, #192]
    2678:	add	x16, x16, #0xc0
    267c:	br	x17

0000000000002680 <PyInterpreterState_GetID@plt>:
    2680:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2684:	ldr	x17, [x16, #200]
    2688:	add	x16, x16, #0xc8
    268c:	br	x17

0000000000002690 <PyErr_SetNone@plt>:
    2690:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2694:	ldr	x17, [x16, #208]
    2698:	add	x16, x16, #0xd0
    269c:	br	x17

00000000000026a0 <PyErr_ExceptionMatches@plt>:
    26a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26a4:	ldr	x17, [x16, #216]
    26a8:	add	x16, x16, #0xd8
    26ac:	br	x17

00000000000026b0 <Py_NewInterpreter@plt>:
    26b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26b4:	ldr	x17, [x16, #224]
    26b8:	add	x16, x16, #0xe0
    26bc:	br	x17

00000000000026c0 <PyType_Ready@plt>:
    26c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26c4:	ldr	x17, [x16, #232]
    26c8:	add	x16, x16, #0xe8
    26cc:	br	x17

00000000000026d0 <_PyObject_GetCrossInterpreterData@plt>:
    26d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26d4:	ldr	x17, [x16, #240]
    26d8:	add	x16, x16, #0xf0
    26dc:	br	x17

00000000000026e0 <PyErr_NewException@plt>:
    26e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26e4:	ldr	x17, [x16, #248]
    26e8:	add	x16, x16, #0xf8
    26ec:	br	x17

00000000000026f0 <PyErr_Clear@plt>:
    26f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    26f4:	ldr	x17, [x16, #256]
    26f8:	add	x16, x16, #0x100
    26fc:	br	x17

0000000000002700 <_PyInterpreterState_RequireIDRef@plt>:
    2700:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2704:	ldr	x17, [x16, #264]
    2708:	add	x16, x16, #0x108
    270c:	br	x17

0000000000002710 <__gmon_start__@plt>:
    2710:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2714:	ldr	x17, [x16, #272]
    2718:	add	x16, x16, #0x110
    271c:	br	x17

0000000000002720 <PyArg_UnpackTuple@plt>:
    2720:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2724:	ldr	x17, [x16, #280]
    2728:	add	x16, x16, #0x118
    272c:	br	x17

0000000000002730 <PyErr_Occurred@plt>:
    2730:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2734:	ldr	x17, [x16, #288]
    2738:	add	x16, x16, #0x120
    273c:	br	x17

0000000000002740 <PyModule_Create2@plt>:
    2740:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2744:	ldr	x17, [x16, #296]
    2748:	add	x16, x16, #0x128
    274c:	br	x17

0000000000002750 <PyImport_ImportModule@plt>:
    2750:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2754:	ldr	x17, [x16, #304]
    2758:	add	x16, x16, #0x130
    275c:	br	x17

0000000000002760 <PyRun_StringFlags@plt>:
    2760:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2764:	ldr	x17, [x16, #312]
    2768:	add	x16, x16, #0x138
    276c:	br	x17

0000000000002770 <PyObject_CallFunctionObjArgs@plt>:
    2770:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2774:	ldr	x17, [x16, #320]
    2778:	add	x16, x16, #0x140
    277c:	br	x17

0000000000002780 <PyThreadState_Next@plt>:
    2780:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2784:	ldr	x17, [x16, #328]
    2788:	add	x16, x16, #0x148
    278c:	br	x17

0000000000002790 <PyThread_allocate_lock@plt>:
    2790:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2794:	ldr	x17, [x16, #336]
    2798:	add	x16, x16, #0x150
    279c:	br	x17

00000000000027a0 <PyObject_Hash@plt>:
    27a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27a4:	ldr	x17, [x16, #344]
    27a8:	add	x16, x16, #0x158
    27ac:	br	x17

00000000000027b0 <PyThread_release_lock@plt>:
    27b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27b4:	ldr	x17, [x16, #352]
    27b8:	add	x16, x16, #0x160
    27bc:	br	x17

00000000000027c0 <fwrite@plt>:
    27c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27c4:	ldr	x17, [x16, #360]
    27c8:	add	x16, x16, #0x168
    27cc:	br	x17

00000000000027d0 <PyDict_Next@plt>:
    27d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27d4:	ldr	x17, [x16, #368]
    27d8:	add	x16, x16, #0x170
    27dc:	br	x17

00000000000027e0 <PyUnicode_AsUTF8@plt>:
    27e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27e4:	ldr	x17, [x16, #376]
    27e8:	add	x16, x16, #0x178
    27ec:	br	x17

00000000000027f0 <strcpy@plt>:
    27f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    27f4:	ldr	x17, [x16, #384]
    27f8:	add	x16, x16, #0x180
    27fc:	br	x17

0000000000002800 <_PyInterpreterState_Get@plt>:
    2800:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2804:	ldr	x17, [x16, #392]
    2808:	add	x16, x16, #0x188
    280c:	br	x17

0000000000002810 <_PyInterpreterID_New@plt>:
    2810:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2814:	ldr	x17, [x16, #400]
    2818:	add	x16, x16, #0x190
    281c:	br	x17

0000000000002820 <PyErr_Fetch@plt>:
    2820:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2824:	ldr	x17, [x16, #408]
    2828:	add	x16, x16, #0x198
    282c:	br	x17

0000000000002830 <_PyObject_New@plt>:
    2830:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2834:	ldr	x17, [x16, #416]
    2838:	add	x16, x16, #0x1a0
    283c:	br	x17

0000000000002840 <PyUnicode_FromString@plt>:
    2840:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2844:	ldr	x17, [x16, #424]
    2848:	add	x16, x16, #0x1a8
    284c:	br	x17

0000000000002850 <PyUnicode_InternFromString@plt>:
    2850:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2854:	ldr	x17, [x16, #432]
    2858:	add	x16, x16, #0x1b0
    285c:	br	x17

0000000000002860 <_PyCrossInterpreterData_RegisterClass@plt>:
    2860:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2864:	ldr	x17, [x16, #440]
    2868:	add	x16, x16, #0x1b8
    286c:	br	x17

0000000000002870 <PyDict_SetItem@plt>:
    2870:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2874:	ldr	x17, [x16, #448]
    2878:	add	x16, x16, #0x1c0
    287c:	br	x17

0000000000002880 <PyNumber_Check@plt>:
    2880:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2884:	ldr	x17, [x16, #456]
    2888:	add	x16, x16, #0x1c8
    288c:	br	x17

0000000000002890 <PyLong_AsLongLong@plt>:
    2890:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2894:	ldr	x17, [x16, #464]
    2898:	add	x16, x16, #0x1d0
    289c:	br	x17

00000000000028a0 <PyType_IsSubtype@plt>:
    28a0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28a4:	ldr	x17, [x16, #472]
    28a8:	add	x16, x16, #0x1d8
    28ac:	br	x17

00000000000028b0 <PyUnicode_AsUTF8AndSize@plt>:
    28b0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28b4:	ldr	x17, [x16, #480]
    28b8:	add	x16, x16, #0x1e0
    28bc:	br	x17

00000000000028c0 <PyErr_Format@plt>:
    28c0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28c4:	ldr	x17, [x16, #488]
    28c8:	add	x16, x16, #0x1e8
    28cc:	br	x17

00000000000028d0 <PyModule_GetDict@plt>:
    28d0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28d4:	ldr	x17, [x16, #496]
    28d8:	add	x16, x16, #0x1f0
    28dc:	br	x17

00000000000028e0 <PyLong_FromLongLong@plt>:
    28e0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28e4:	ldr	x17, [x16, #504]
    28e8:	add	x16, x16, #0x1f8
    28ec:	br	x17

00000000000028f0 <PyInterpreterState_Head@plt>:
    28f0:	adrp	x16, 18000 <PyUnicode_FromFormat>
    28f4:	ldr	x17, [x16, #512]
    28f8:	add	x16, x16, #0x200
    28fc:	br	x17

0000000000002900 <_PyObject_CheckCrossInterpreterData@plt>:
    2900:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2904:	ldr	x17, [x16, #520]
    2908:	add	x16, x16, #0x208
    290c:	br	x17

0000000000002910 <PyMem_Malloc@plt>:
    2910:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2914:	ldr	x17, [x16, #528]
    2918:	add	x16, x16, #0x210
    291c:	br	x17

0000000000002920 <PyThreadState_Swap@plt>:
    2920:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2924:	ldr	x17, [x16, #536]
    2928:	add	x16, x16, #0x218
    292c:	br	x17

0000000000002930 <PyThread_free_lock@plt>:
    2930:	adrp	x16, 18000 <PyUnicode_FromFormat>
    2934:	ldr	x17, [x16, #544]
    2938:	add	x16, x16, #0x220
    293c:	br	x17

Disassembly of section .text:

0000000000002940 <PyInit__xxsubinterpreters@@Base-0x27d0>:
    2940:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    2944:	ldr	x0, [x0, #4040]
    2948:	cbz	x0, 2950 <PyThread_free_lock@plt+0x20>
    294c:	b	2710 <__gmon_start__@plt>
    2950:	ret
    2954:	nop
    2958:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    295c:	add	x0, x0, #0x928
    2960:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    2964:	add	x1, x1, #0x928
    2968:	cmp	x1, x0
    296c:	b.eq	2984 <PyThread_free_lock@plt+0x54>  // b.none
    2970:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    2974:	ldr	x1, [x1, #3952]
    2978:	cbz	x1, 2984 <PyThread_free_lock@plt+0x54>
    297c:	mov	x16, x1
    2980:	br	x16
    2984:	ret
    2988:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    298c:	add	x0, x0, #0x928
    2990:	adrp	x1, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    2994:	add	x1, x1, #0x928
    2998:	sub	x1, x1, x0
    299c:	lsr	x2, x1, #63
    29a0:	add	x1, x2, x1, asr #3
    29a4:	cmp	xzr, x1, asr #1
    29a8:	asr	x1, x1, #1
    29ac:	b.eq	29c4 <PyThread_free_lock@plt+0x94>  // b.none
    29b0:	adrp	x2, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    29b4:	ldr	x2, [x2, #4064]
    29b8:	cbz	x2, 29c4 <PyThread_free_lock@plt+0x94>
    29bc:	mov	x16, x2
    29c0:	br	x16
    29c4:	ret
    29c8:	stp	x29, x30, [sp, #-32]!
    29cc:	mov	x29, sp
    29d0:	str	x19, [sp, #16]
    29d4:	adrp	x19, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    29d8:	ldrb	w0, [x19, #2344]
    29dc:	cbnz	w0, 2a04 <PyThread_free_lock@plt+0xd4>
    29e0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    29e4:	ldr	x0, [x0, #3968]
    29e8:	cbz	x0, 29f8 <PyThread_free_lock@plt+0xc8>
    29ec:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    29f0:	ldr	x0, [x0, #552]
    29f4:	bl	25c0 <__cxa_finalize@plt>
    29f8:	bl	2958 <PyThread_free_lock@plt+0x28>
    29fc:	mov	w0, #0x1                   	// #1
    2a00:	strb	w0, [x19, #2344]
    2a04:	ldr	x19, [sp, #16]
    2a08:	ldp	x29, x30, [sp], #32
    2a0c:	ret
    2a10:	b	2988 <PyThread_free_lock@plt+0x58>
    2a14:	nop
    2a18:	stp	x29, x30, [sp, #-32]!
    2a1c:	mov	x29, sp
    2a20:	stp	x19, x20, [sp, #16]
    2a24:	mov	x19, x0
    2a28:	mov	x20, x1
    2a2c:	mov	x0, #0x10                  	// #16
    2a30:	bl	2910 <PyMem_Malloc@plt>
    2a34:	cbz	x0, 2a80 <PyThread_free_lock@plt+0x150>
    2a38:	ldr	x1, [x19, #16]
    2a3c:	ldp	w2, w4, [x19, #24]
    2a40:	str	x1, [x0]
    2a44:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    2a48:	ldr	x3, [x19]
    2a4c:	stp	w2, w4, [x0, #8]
    2a50:	str	x0, [x20]
    2a54:	adrp	x2, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    2a58:	ldr	x1, [x1, #3960]
    2a5c:	add	x3, x3, #0x1
    2a60:	str	x3, [x19]
    2a64:	add	x2, x2, #0xe50
    2a68:	mov	w0, #0x0                   	// #0
    2a6c:	str	x19, [x20, #8]
    2a70:	stp	x2, x1, [x20, #24]
    2a74:	ldp	x19, x20, [sp, #16]
    2a78:	ldp	x29, x30, [sp], #32
    2a7c:	ret
    2a80:	mov	w0, #0xffffffff            	// #-1
    2a84:	b	2a74 <PyThread_free_lock@plt+0x144>
    2a88:	stp	x29, x30, [sp, #-32]!
    2a8c:	mov	x29, sp
    2a90:	stp	x19, x20, [sp, #16]
    2a94:	mov	x20, x0
    2a98:	mov	x0, #0x18                  	// #24
    2a9c:	bl	2910 <PyMem_Malloc@plt>
    2aa0:	mov	x19, x0
    2aa4:	cbz	x0, 2ac4 <PyThread_free_lock@plt+0x194>
    2aa8:	mov	w0, #0x1                   	// #1
    2aac:	stp	xzr, x20, [x19]
    2ab0:	str	w0, [x19, #16]
    2ab4:	mov	x0, x19
    2ab8:	ldp	x19, x20, [sp, #16]
    2abc:	ldp	x29, x30, [sp], #32
    2ac0:	ret
    2ac4:	bl	2600 <PyErr_NoMemory@plt>
    2ac8:	b	2ab4 <PyThread_free_lock@plt+0x184>
    2acc:	nop
    2ad0:	stp	x29, x30, [sp, #-32]!
    2ad4:	mov	x29, sp
    2ad8:	stp	x19, x20, [sp, #16]
    2adc:	bl	27e0 <PyUnicode_AsUTF8@plt>
    2ae0:	cbz	x0, 2b14 <PyThread_free_lock@plt+0x1e4>
    2ae4:	mov	x19, x0
    2ae8:	bl	2530 <strlen@plt>
    2aec:	add	x0, x0, #0x1
    2af0:	bl	2910 <PyMem_Malloc@plt>
    2af4:	mov	x20, x0
    2af8:	cbz	x0, 2b28 <PyThread_free_lock@plt+0x1f8>
    2afc:	mov	x1, x19
    2b00:	bl	27f0 <strcpy@plt>
    2b04:	mov	x0, x20
    2b08:	ldp	x19, x20, [sp, #16]
    2b0c:	ldp	x29, x30, [sp], #32
    2b10:	ret
    2b14:	mov	x20, #0x0                   	// #0
    2b18:	mov	x0, x20
    2b1c:	ldp	x19, x20, [sp, #16]
    2b20:	ldp	x29, x30, [sp], #32
    2b24:	ret
    2b28:	bl	2600 <PyErr_NoMemory@plt>
    2b2c:	b	2b04 <PyThread_free_lock@plt+0x1d4>
    2b30:	mov	x1, x0
    2b34:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2b38:	add	x0, x0, #0x390
    2b3c:	ldr	x1, [x1, #16]
    2b40:	b	24f0 <PyUnicode_FromFormat@plt>
    2b44:	nop
    2b48:	mov	x0, #0x0                   	// #0
    2b4c:	b	2810 <_PyInterpreterID_New@plt>
    2b50:	stp	x29, x30, [sp, #-16]!
    2b54:	mov	x29, sp
    2b58:	bl	2800 <_PyInterpreterState_Get@plt>
    2b5c:	cbz	x0, 2b68 <PyThread_free_lock@plt+0x238>
    2b60:	ldp	x29, x30, [sp], #16
    2b64:	b	2620 <_PyInterpreterState_GetIDObject@plt>
    2b68:	ldp	x29, x30, [sp], #16
    2b6c:	ret
    2b70:	stp	x29, x30, [sp, #-48]!
    2b74:	mov	x0, #0x0                   	// #0
    2b78:	mov	x29, sp
    2b7c:	stp	x21, x22, [sp, #32]
    2b80:	bl	2500 <PyList_New@plt>
    2b84:	cbz	x0, 2c0c <PyThread_free_lock@plt+0x2dc>
    2b88:	mov	x22, x0
    2b8c:	stp	x19, x20, [sp, #16]
    2b90:	bl	28f0 <PyInterpreterState_Head@plt>
    2b94:	mov	x20, x0
    2b98:	cbnz	x0, 2bb4 <PyThread_free_lock@plt+0x284>
    2b9c:	b	2c20 <PyThread_free_lock@plt+0x2f0>
    2ba0:	mov	x0, x20
    2ba4:	tbnz	w21, #31, 2bf8 <PyThread_free_lock@plt+0x2c8>
    2ba8:	bl	25f0 <PyInterpreterState_Next@plt>
    2bac:	mov	x20, x0
    2bb0:	cbz	x0, 2c20 <PyThread_free_lock@plt+0x2f0>
    2bb4:	mov	x0, x20
    2bb8:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    2bbc:	mov	x19, x0
    2bc0:	mov	x1, #0x0                   	// #0
    2bc4:	mov	x0, x22
    2bc8:	mov	x2, x19
    2bcc:	cbz	x19, 2bf8 <PyThread_free_lock@plt+0x2c8>
    2bd0:	bl	2580 <PyList_Insert@plt>
    2bd4:	mov	w21, w0
    2bd8:	ldr	x1, [x19]
    2bdc:	sub	x1, x1, #0x1
    2be0:	str	x1, [x19]
    2be4:	cbnz	x1, 2ba0 <PyThread_free_lock@plt+0x270>
    2be8:	mov	x0, x19
    2bec:	bl	25e0 <_Py_Dealloc@plt>
    2bf0:	mov	x0, x20
    2bf4:	tbz	w21, #31, 2ba8 <PyThread_free_lock@plt+0x278>
    2bf8:	ldr	x0, [x22]
    2bfc:	sub	x0, x0, #0x1
    2c00:	str	x0, [x22]
    2c04:	cbz	x0, 2c34 <PyThread_free_lock@plt+0x304>
    2c08:	ldp	x19, x20, [sp, #16]
    2c0c:	mov	x22, #0x0                   	// #0
    2c10:	mov	x0, x22
    2c14:	ldp	x21, x22, [sp, #32]
    2c18:	ldp	x29, x30, [sp], #48
    2c1c:	ret
    2c20:	mov	x0, x22
    2c24:	ldp	x19, x20, [sp, #16]
    2c28:	ldp	x21, x22, [sp, #32]
    2c2c:	ldp	x29, x30, [sp], #48
    2c30:	ret
    2c34:	mov	x0, x22
    2c38:	mov	x22, #0x0                   	// #0
    2c3c:	bl	25e0 <_Py_Dealloc@plt>
    2c40:	mov	x0, x22
    2c44:	ldp	x19, x20, [sp, #16]
    2c48:	ldp	x21, x22, [sp, #32]
    2c4c:	ldp	x29, x30, [sp], #48
    2c50:	ret
    2c54:	nop
    2c58:	ldr	x0, [x0, #16]
    2c5c:	b	28e0 <PyLong_FromLongLong@plt>
    2c60:	stp	x29, x30, [sp, #-32]!
    2c64:	mov	x29, sp
    2c68:	ldr	x0, [x0, #16]
    2c6c:	stp	x19, x20, [sp, #16]
    2c70:	bl	28e0 <PyLong_FromLongLong@plt>
    2c74:	cbz	x0, 2cbc <PyThread_free_lock@plt+0x38c>
    2c78:	mov	x19, x0
    2c7c:	bl	27a0 <PyObject_Hash@plt>
    2c80:	mov	x20, x0
    2c84:	ldr	x1, [x19]
    2c88:	sub	x1, x1, #0x1
    2c8c:	str	x1, [x19]
    2c90:	cbz	x1, 2ca4 <PyThread_free_lock@plt+0x374>
    2c94:	mov	x0, x20
    2c98:	ldp	x19, x20, [sp, #16]
    2c9c:	ldp	x29, x30, [sp], #32
    2ca0:	ret
    2ca4:	mov	x0, x19
    2ca8:	bl	25e0 <_Py_Dealloc@plt>
    2cac:	mov	x0, x20
    2cb0:	ldp	x19, x20, [sp, #16]
    2cb4:	ldp	x29, x30, [sp], #32
    2cb8:	ret
    2cbc:	mov	x20, #0xffffffffffffffff    	// #-1
    2cc0:	b	2c94 <PyThread_free_lock@plt+0x364>
    2cc4:	nop
    2cc8:	stp	x29, x30, [sp, #-32]!
    2ccc:	mov	x29, sp
    2cd0:	str	x19, [sp, #16]
    2cd4:	mov	x19, x0
    2cd8:	ldr	x0, [x0, #8]
    2cdc:	bl	2630 <_PyType_Name@plt>
    2ce0:	mov	x1, x0
    2ce4:	ldr	w2, [x19, #24]
    2ce8:	cmp	w2, #0x1
    2cec:	b.eq	2d18 <PyThread_free_lock@plt+0x3e8>  // b.none
    2cf0:	cmn	w2, #0x1
    2cf4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2cf8:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    2cfc:	add	x0, x0, #0x3c8
    2d00:	add	x2, x2, #0x3b0
    2d04:	csel	x0, x2, x0, eq  // eq = none
    2d08:	ldr	x2, [x19, #16]
    2d0c:	ldr	x19, [sp, #16]
    2d10:	ldp	x29, x30, [sp], #32
    2d14:	b	24f0 <PyUnicode_FromFormat@plt>
    2d18:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    2d1c:	add	x0, x2, #0x398
    2d20:	ldr	x2, [x19, #16]
    2d24:	ldr	x19, [sp, #16]
    2d28:	ldp	x29, x30, [sp], #32
    2d2c:	b	24f0 <PyUnicode_FromFormat@plt>
    2d30:	stp	x29, x30, [sp, #-64]!
    2d34:	mov	x29, sp
    2d38:	stp	x19, x20, [sp, #16]
    2d3c:	mov	x20, x3
    2d40:	stp	x21, x22, [sp, #32]
    2d44:	mov	x21, x1
    2d48:	mov	w22, w5
    2d4c:	stp	x23, x24, [sp, #48]
    2d50:	mov	w23, w2
    2d54:	mov	w24, w4
    2d58:	bl	2830 <_PyObject_New@plt>
    2d5c:	cbz	x0, 2e24 <PyThread_free_lock@plt+0x4f4>
    2d60:	str	x20, [x0, #32]
    2d64:	mov	x19, x0
    2d68:	str	x21, [x0, #16]
    2d6c:	mov	w1, #0x1                   	// #1
    2d70:	ldr	x0, [x20]
    2d74:	stp	w23, w22, [x19, #24]
    2d78:	bl	2640 <PyThread_acquire_lock@plt>
    2d7c:	ldr	x5, [x20, #8]
    2d80:	cbnz	x5, 2d90 <PyThread_free_lock@plt+0x460>
    2d84:	b	2dc8 <PyThread_free_lock@plt+0x498>
    2d88:	ldr	x5, [x5, #16]
    2d8c:	cbz	x5, 2dc8 <PyThread_free_lock@plt+0x498>
    2d90:	ldr	x0, [x5]
    2d94:	cmp	x21, x0
    2d98:	b.ne	2d88 <PyThread_free_lock@plt+0x458>  // b.any
    2d9c:	ldr	x1, [x5, #24]
    2da0:	ldr	x0, [x20]
    2da4:	add	x1, x1, #0x1
    2da8:	str	x1, [x5, #24]
    2dac:	bl	27b0 <PyThread_release_lock@plt>
    2db0:	mov	x0, x19
    2db4:	ldp	x19, x20, [sp, #16]
    2db8:	ldp	x21, x22, [sp, #32]
    2dbc:	ldp	x23, x24, [sp, #48]
    2dc0:	ldp	x29, x30, [sp], #64
    2dc4:	ret
    2dc8:	adrp	x22, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    2dcc:	mov	x2, x21
    2dd0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2dd4:	add	x1, x1, #0x3d0
    2dd8:	ldr	x0, [x22, #2352]
    2ddc:	bl	28c0 <PyErr_Format@plt>
    2de0:	ldr	x0, [x20]
    2de4:	bl	27b0 <PyThread_release_lock@plt>
    2de8:	cbz	w24, 2e14 <PyThread_free_lock@plt+0x4e4>
    2dec:	ldr	x0, [x22, #2352]
    2df0:	bl	26a0 <PyErr_ExceptionMatches@plt>
    2df4:	cbz	w0, 2e14 <PyThread_free_lock@plt+0x4e4>
    2df8:	bl	26f0 <PyErr_Clear@plt>
    2dfc:	mov	x0, x19
    2e00:	ldp	x19, x20, [sp, #16]
    2e04:	ldp	x21, x22, [sp, #32]
    2e08:	ldp	x23, x24, [sp, #48]
    2e0c:	ldp	x29, x30, [sp], #64
    2e10:	ret
    2e14:	ldr	x0, [x19]
    2e18:	sub	x0, x0, #0x1
    2e1c:	str	x0, [x19]
    2e20:	cbz	x0, 2e40 <PyThread_free_lock@plt+0x510>
    2e24:	mov	x19, #0x0                   	// #0
    2e28:	mov	x0, x19
    2e2c:	ldp	x19, x20, [sp, #16]
    2e30:	ldp	x21, x22, [sp, #32]
    2e34:	ldp	x23, x24, [sp, #48]
    2e38:	ldp	x29, x30, [sp], #64
    2e3c:	ret
    2e40:	mov	x0, x19
    2e44:	mov	x19, #0x0                   	// #0
    2e48:	bl	25e0 <_Py_Dealloc@plt>
    2e4c:	b	2db0 <PyThread_free_lock@plt+0x480>
    2e50:	stp	x29, x30, [sp, #-48]!
    2e54:	mov	x1, x0
    2e58:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    2e5c:	mov	x29, sp
    2e60:	stp	x19, x20, [sp, #16]
    2e64:	add	x3, x3, #0x930
    2e68:	add	x3, x3, #0x8
    2e6c:	ldr	x20, [x1]
    2e70:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    2e74:	mov	w5, #0x0                   	// #0
    2e78:	add	x0, x0, #0x238
    2e7c:	mov	w4, #0x0                   	// #0
    2e80:	ldr	w2, [x20, #8]
    2e84:	ldr	x1, [x20]
    2e88:	str	x21, [sp, #32]
    2e8c:	bl	2d30 <PyThread_free_lock@plt+0x400>
    2e90:	ldr	w21, [x20, #8]
    2e94:	mov	x19, x0
    2e98:	cbz	w21, 2ea4 <PyThread_free_lock@plt+0x574>
    2e9c:	ldr	w0, [x20, #12]
    2ea0:	cbnz	w0, 2eb8 <PyThread_free_lock@plt+0x588>
    2ea4:	mov	x0, x19
    2ea8:	ldp	x19, x20, [sp, #16]
    2eac:	ldr	x21, [sp, #32]
    2eb0:	ldp	x29, x30, [sp], #48
    2eb4:	ret
    2eb8:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2ebc:	add	x0, x0, #0x408
    2ec0:	bl	2750 <PyImport_ImportModule@plt>
    2ec4:	mov	x20, x0
    2ec8:	cbz	x0, 2f7c <PyThread_free_lock@plt+0x64c>
    2ecc:	cmn	w21, #0x1
    2ed0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    2ed4:	add	x2, x2, #0x3f8
    2ed8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    2edc:	add	x1, x1, #0x3e8
    2ee0:	mov	x0, x20
    2ee4:	csel	x1, x1, x2, eq  // eq = none
    2ee8:	bl	25b0 <PyObject_GetAttrString@plt>
    2eec:	mov	x21, x0
    2ef0:	ldr	x1, [x20]
    2ef4:	sub	x0, x1, #0x1
    2ef8:	str	x0, [x20]
    2efc:	cbz	x0, 2f54 <PyThread_free_lock@plt+0x624>
    2f00:	cbz	x21, 2f98 <PyThread_free_lock@plt+0x668>
    2f04:	mov	x1, x19
    2f08:	mov	x0, x21
    2f0c:	mov	x2, #0x0                   	// #0
    2f10:	bl	2770 <PyObject_CallFunctionObjArgs@plt>
    2f14:	ldr	x1, [x21]
    2f18:	mov	x20, x0
    2f1c:	sub	x0, x1, #0x1
    2f20:	str	x0, [x21]
    2f24:	cbz	x0, 2f70 <PyThread_free_lock@plt+0x640>
    2f28:	cbz	x20, 2f98 <PyThread_free_lock@plt+0x668>
    2f2c:	ldr	x1, [x19]
    2f30:	sub	x1, x1, #0x1
    2f34:	str	x1, [x19]
    2f38:	cbz	x1, 2f60 <PyThread_free_lock@plt+0x630>
    2f3c:	mov	x19, x20
    2f40:	mov	x0, x19
    2f44:	ldp	x19, x20, [sp, #16]
    2f48:	ldr	x21, [sp, #32]
    2f4c:	ldp	x29, x30, [sp], #48
    2f50:	ret
    2f54:	mov	x0, x20
    2f58:	bl	25e0 <_Py_Dealloc@plt>
    2f5c:	b	2f00 <PyThread_free_lock@plt+0x5d0>
    2f60:	mov	x0, x19
    2f64:	mov	x19, x20
    2f68:	bl	25e0 <_Py_Dealloc@plt>
    2f6c:	b	2ea4 <PyThread_free_lock@plt+0x574>
    2f70:	mov	x0, x21
    2f74:	bl	25e0 <_Py_Dealloc@plt>
    2f78:	b	2f28 <PyThread_free_lock@plt+0x5f8>
    2f7c:	bl	26f0 <PyErr_Clear@plt>
    2f80:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    2f84:	add	x0, x0, #0x418
    2f88:	bl	2750 <PyImport_ImportModule@plt>
    2f8c:	mov	x20, x0
    2f90:	cbnz	x0, 2ecc <PyThread_free_lock@plt+0x59c>
    2f94:	nop
    2f98:	bl	26f0 <PyErr_Clear@plt>
    2f9c:	b	2ea4 <PyThread_free_lock@plt+0x574>
    2fa0:	stp	x29, x30, [sp, #-32]!
    2fa4:	mov	x29, sp
    2fa8:	stp	x19, x20, [sp, #16]
    2fac:	mov	x19, x0
    2fb0:	mov	x20, x1
    2fb4:	ldr	x0, [x0]
    2fb8:	mov	w1, #0x1                   	// #1
    2fbc:	bl	2640 <PyThread_acquire_lock@plt>
    2fc0:	ldr	x0, [x20]
    2fc4:	cbz	x0, 2fd0 <PyThread_free_lock@plt+0x6a0>
    2fc8:	bl	2590 <PyMem_Free@plt>
    2fcc:	str	xzr, [x20]
    2fd0:	ldr	x0, [x19]
    2fd4:	ldp	x19, x20, [sp, #16]
    2fd8:	ldp	x29, x30, [sp], #32
    2fdc:	b	27b0 <PyThread_release_lock@plt>
    2fe0:	stp	x29, x30, [sp, #-32]!
    2fe4:	mov	x29, sp
    2fe8:	str	x19, [sp, #16]
    2fec:	mov	x19, x0
    2ff0:	ldr	x0, [x0, #8]
    2ff4:	cbz	x0, 3000 <PyThread_free_lock@plt+0x6d0>
    2ff8:	add	x1, x0, #0x20
    2ffc:	bl	2fa0 <PyThread_free_lock@plt+0x670>
    3000:	mov	x0, x19
    3004:	ldr	x19, [sp, #16]
    3008:	ldp	x29, x30, [sp], #32
    300c:	b	2590 <PyMem_Free@plt>
    3010:	stp	x29, x30, [sp, #-48]!
    3014:	adrp	x2, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3018:	add	x2, x2, #0x238
    301c:	mov	x29, sp
    3020:	stp	x19, x20, [sp, #16]
    3024:	mov	x19, x0
    3028:	ldr	x0, [x0, #8]
    302c:	str	x21, [sp, #32]
    3030:	mov	x21, x1
    3034:	cmp	x0, x2
    3038:	b.eq	304c <PyThread_free_lock@plt+0x71c>  // b.none
    303c:	mov	x1, x2
    3040:	bl	28a0 <PyType_IsSubtype@plt>
    3044:	mov	w20, w0
    3048:	cbz	w0, 306c <PyThread_free_lock@plt+0x73c>
    304c:	ldr	x0, [x19, #16]
    3050:	mov	w20, #0x1                   	// #1
    3054:	str	x0, [x21]
    3058:	mov	w0, w20
    305c:	ldp	x19, x20, [sp, #16]
    3060:	ldr	x21, [sp, #32]
    3064:	ldp	x29, x30, [sp], #48
    3068:	ret
    306c:	ldr	x2, [x19, #8]
    3070:	ldr	x0, [x2, #96]
    3074:	cbz	x0, 30b4 <PyThread_free_lock@plt+0x784>
    3078:	ldr	x0, [x0, #264]
    307c:	cbz	x0, 30b4 <PyThread_free_lock@plt+0x784>
    3080:	mov	x0, x19
    3084:	bl	2890 <PyLong_AsLongLong@plt>
    3088:	cmn	x0, #0x1
    308c:	b.eq	30e4 <PyThread_free_lock@plt+0x7b4>  // b.none
    3090:	tbz	x0, #63, 3050 <PyThread_free_lock@plt+0x720>
    3094:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3098:	mov	x2, x19
    309c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    30a0:	add	x1, x1, #0x438
    30a4:	ldr	x0, [x0, #4016]
    30a8:	ldr	x0, [x0]
    30ac:	bl	28c0 <PyErr_Format@plt>
    30b0:	b	3058 <PyThread_free_lock@plt+0x728>
    30b4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    30b8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    30bc:	ldr	x2, [x2, #24]
    30c0:	add	x1, x1, #0x468
    30c4:	ldr	x0, [x0, #4024]
    30c8:	ldr	x0, [x0]
    30cc:	bl	28c0 <PyErr_Format@plt>
    30d0:	mov	w0, w20
    30d4:	ldp	x19, x20, [sp, #16]
    30d8:	ldr	x21, [sp, #32]
    30dc:	ldp	x29, x30, [sp], #48
    30e0:	ret
    30e4:	bl	2730 <PyErr_Occurred@plt>
    30e8:	cbnz	x0, 3058 <PyThread_free_lock@plt+0x728>
    30ec:	b	3094 <PyThread_free_lock@plt+0x764>
    30f0:	stp	x29, x30, [sp, #-48]!
    30f4:	cmp	w2, #0x0
    30f8:	mov	x29, sp
    30fc:	stp	x19, x20, [sp, #16]
    3100:	mov	x20, x0
    3104:	ldp	x19, x0, [x0, #16]
    3108:	str	x21, [sp, #32]
    310c:	mov	w21, w2
    3110:	csel	x19, x19, x0, ne  // ne = any
    3114:	cbnz	x19, 3128 <PyThread_free_lock@plt+0x7f8>
    3118:	b	31b4 <PyThread_free_lock@plt+0x884>
    311c:	ldr	x3, [x19]
    3120:	cbz	x3, 3150 <PyThread_free_lock@plt+0x820>
    3124:	mov	x19, x3
    3128:	ldr	x3, [x19, #8]
    312c:	cmp	x1, x3
    3130:	b.ne	311c <PyThread_free_lock@plt+0x7ec>  // b.any
    3134:	ldr	w0, [x19, #16]
    3138:	cbz	w0, 3198 <PyThread_free_lock@plt+0x868>
    313c:	mov	w0, #0x0                   	// #0
    3140:	ldp	x19, x20, [sp, #16]
    3144:	ldr	x21, [sp, #32]
    3148:	ldp	x29, x30, [sp], #48
    314c:	ret
    3150:	mov	x0, x1
    3154:	bl	2a88 <PyThread_free_lock@plt+0x158>
    3158:	cbz	x0, 3190 <PyThread_free_lock@plt+0x860>
    315c:	str	x0, [x19]
    3160:	cbz	w21, 317c <PyThread_free_lock@plt+0x84c>
    3164:	ldr	x1, [x20]
    3168:	mov	w0, #0x0                   	// #0
    316c:	add	x1, x1, #0x1
    3170:	str	x1, [x20]
    3174:	b	3140 <PyThread_free_lock@plt+0x810>
    3178:	str	x0, [x20, #24]
    317c:	ldr	x1, [x20, #8]
    3180:	mov	w0, #0x0                   	// #0
    3184:	add	x1, x1, #0x1
    3188:	str	x1, [x20, #8]
    318c:	b	3140 <PyThread_free_lock@plt+0x810>
    3190:	mov	w0, #0xffffffff            	// #-1
    3194:	b	3140 <PyThread_free_lock@plt+0x810>
    3198:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    319c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    31a0:	add	x1, x1, #0x490
    31a4:	ldr	x0, [x0, #2392]
    31a8:	bl	2670 <PyErr_SetString@plt>
    31ac:	mov	w0, #0xffffffff            	// #-1
    31b0:	b	3140 <PyThread_free_lock@plt+0x810>
    31b4:	mov	x0, x1
    31b8:	bl	2a88 <PyThread_free_lock@plt+0x158>
    31bc:	cbz	x0, 3190 <PyThread_free_lock@plt+0x860>
    31c0:	cbz	w21, 3178 <PyThread_free_lock@plt+0x848>
    31c4:	str	x0, [x20, #16]
    31c8:	b	3164 <PyThread_free_lock@plt+0x834>
    31cc:	nop
    31d0:	cbz	x0, 3224 <PyThread_free_lock@plt+0x8f4>
    31d4:	stp	x29, x30, [sp, #-32]!
    31d8:	mov	x29, sp
    31dc:	stp	x19, x20, [sp, #16]
    31e0:	mov	x20, x0
    31e4:	nop
    31e8:	mov	x19, x20
    31ec:	ldr	x0, [x20]
    31f0:	ldr	x20, [x20, #8]
    31f4:	cbz	x0, 3208 <PyThread_free_lock@plt+0x8d8>
    31f8:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    31fc:	ldr	x0, [x19]
    3200:	bl	2590 <PyMem_Free@plt>
    3204:	str	xzr, [x19]
    3208:	str	xzr, [x19, #8]
    320c:	mov	x0, x19
    3210:	bl	2590 <PyMem_Free@plt>
    3214:	cbnz	x20, 31e8 <PyThread_free_lock@plt+0x8b8>
    3218:	ldp	x19, x20, [sp, #16]
    321c:	ldp	x29, x30, [sp], #32
    3220:	ret
    3224:	ret
    3228:	stp	x29, x30, [sp, #-48]!
    322c:	add	x1, x0, #0x20
    3230:	mov	x29, sp
    3234:	stp	x19, x20, [sp, #16]
    3238:	mov	x19, x0
    323c:	str	x21, [sp, #32]
    3240:	bl	2fa0 <PyThread_free_lock@plt+0x670>
    3244:	ldr	x0, [x19]
    3248:	mov	w1, #0x1                   	// #1
    324c:	bl	2640 <PyThread_acquire_lock@plt>
    3250:	ldr	x20, [x19, #8]
    3254:	ldr	x0, [x20, #8]
    3258:	bl	31d0 <PyThread_free_lock@plt+0x8a0>
    325c:	stp	xzr, xzr, [x20]
    3260:	mov	x0, x20
    3264:	str	xzr, [x20, #16]
    3268:	bl	2590 <PyMem_Free@plt>
    326c:	ldr	x20, [x19, #16]
    3270:	ldr	x21, [x20, #16]
    3274:	cbz	x21, 3288 <PyThread_free_lock@plt+0x958>
    3278:	mov	x0, x21
    327c:	ldr	x21, [x21]
    3280:	bl	2590 <PyMem_Free@plt>
    3284:	cbnz	x21, 3278 <PyThread_free_lock@plt+0x948>
    3288:	ldr	x21, [x20, #24]
    328c:	str	xzr, [x20]
    3290:	str	xzr, [x20, #16]
    3294:	cbz	x21, 32a8 <PyThread_free_lock@plt+0x978>
    3298:	mov	x0, x21
    329c:	ldr	x21, [x21]
    32a0:	bl	2590 <PyMem_Free@plt>
    32a4:	cbnz	x21, 3298 <PyThread_free_lock@plt+0x968>
    32a8:	str	xzr, [x20, #8]
    32ac:	mov	x0, x20
    32b0:	str	xzr, [x20, #24]
    32b4:	bl	2590 <PyMem_Free@plt>
    32b8:	ldr	x0, [x19]
    32bc:	bl	27b0 <PyThread_release_lock@plt>
    32c0:	ldr	x0, [x19]
    32c4:	bl	2930 <PyThread_free_lock@plt>
    32c8:	mov	x0, x19
    32cc:	ldp	x19, x20, [sp, #16]
    32d0:	ldr	x21, [sp, #32]
    32d4:	ldp	x29, x30, [sp], #48
    32d8:	b	2590 <PyMem_Free@plt>
    32dc:	nop
    32e0:	stp	x29, x30, [sp, #-32]!
    32e4:	mov	x29, sp
    32e8:	stp	x19, x20, [sp, #16]
    32ec:	ldp	x2, x20, [x0, #8]
    32f0:	ldr	x19, [x0, #32]
    32f4:	ldr	x2, [x2, #320]
    32f8:	blr	x2
    32fc:	ldr	x0, [x19]
    3300:	mov	w1, #0x1                   	// #1
    3304:	bl	2640 <PyThread_acquire_lock@plt>
    3308:	ldr	x2, [x19, #8]
    330c:	cbz	x2, 3378 <PyThread_free_lock@plt+0xa48>
    3310:	mov	x0, x2
    3314:	mov	x3, #0x0                   	// #0
    3318:	b	332c <PyThread_free_lock@plt+0x9fc>
    331c:	ldr	x1, [x0, #16]
    3320:	mov	x3, x0
    3324:	mov	x0, x1
    3328:	cbz	x1, 3378 <PyThread_free_lock@plt+0xa48>
    332c:	ldr	x1, [x0]
    3330:	cmp	x20, x1
    3334:	b.ne	331c <PyThread_free_lock@plt+0x9ec>  // b.any
    3338:	ldr	x1, [x0, #24]
    333c:	sub	x1, x1, #0x1
    3340:	str	x1, [x0, #24]
    3344:	cbnz	x1, 3378 <PyThread_free_lock@plt+0xa48>
    3348:	cmp	x2, x0
    334c:	ldr	x1, [x0, #16]
    3350:	b.eq	3388 <PyThread_free_lock@plt+0xa58>  // b.none
    3354:	str	x1, [x3, #16]
    3358:	ldr	x1, [x19, #16]
    335c:	ldr	x20, [x0, #8]
    3360:	sub	x1, x1, #0x1
    3364:	str	x1, [x19, #16]
    3368:	bl	2fe0 <PyThread_free_lock@plt+0x6b0>
    336c:	cbz	x20, 3378 <PyThread_free_lock@plt+0xa48>
    3370:	mov	x0, x20
    3374:	bl	3228 <PyThread_free_lock@plt+0x8f8>
    3378:	ldr	x0, [x19]
    337c:	ldp	x19, x20, [sp, #16]
    3380:	ldp	x29, x30, [sp], #32
    3384:	b	27b0 <PyThread_release_lock@plt>
    3388:	str	x1, [x19, #8]
    338c:	b	3358 <PyThread_free_lock@plt+0xa28>
    3390:	stp	x29, x30, [sp, #-32]!
    3394:	mov	x0, x1
    3398:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    339c:	mov	x1, x2
    33a0:	mov	x29, sp
    33a4:	add	x3, x3, #0x3d8
    33a8:	add	x4, sp, #0x18
    33ac:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    33b0:	add	x2, x2, #0x4a8
    33b4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    33b8:	mov	w1, w0
    33bc:	mov	x0, #0x0                   	// #0
    33c0:	cbz	w1, 33e8 <PyThread_free_lock@plt+0xab8>
    33c4:	ldr	x0, [sp, #24]
    33c8:	bl	2900 <_PyObject_CheckCrossInterpreterData@plt>
    33cc:	cbnz	w0, 33f0 <PyThread_free_lock@plt+0xac0>
    33d0:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    33d4:	ldr	x1, [x1, #4056]
    33d8:	mov	x0, x1
    33dc:	ldr	x2, [x1]
    33e0:	add	x2, x2, #0x1
    33e4:	str	x2, [x1]
    33e8:	ldp	x29, x30, [sp], #32
    33ec:	ret
    33f0:	bl	26f0 <PyErr_Clear@plt>
    33f4:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    33f8:	ldr	x1, [x1, #4032]
    33fc:	mov	x0, x1
    3400:	ldr	x2, [x1]
    3404:	add	x2, x2, #0x1
    3408:	str	x2, [x1]
    340c:	ldp	x29, x30, [sp], #32
    3410:	ret
    3414:	nop
    3418:	stp	x29, x30, [sp, #-32]!
    341c:	mov	x29, sp
    3420:	str	x19, [sp, #16]
    3424:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    3428:	mov	x19, x0
    342c:	bl	2780 <PyThreadState_Next@plt>
    3430:	cbnz	x0, 3464 <PyThread_free_lock@plt+0xb34>
    3434:	ldr	x0, [x19, #24]
    3438:	cbz	x0, 344c <PyThread_free_lock@plt+0xb1c>
    343c:	ldrb	w0, [x0, #116]
    3440:	ldr	x19, [sp, #16]
    3444:	ldp	x29, x30, [sp], #32
    3448:	ret
    344c:	bl	2730 <PyErr_Occurred@plt>
    3450:	cmp	x0, #0x0
    3454:	csetm	w0, ne  // ne = any
    3458:	ldr	x19, [sp, #16]
    345c:	ldp	x29, x30, [sp], #32
    3460:	ret
    3464:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3468:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    346c:	add	x1, x1, #0x4b8
    3470:	ldr	x0, [x0, #4000]
    3474:	ldr	x0, [x0]
    3478:	bl	2670 <PyErr_SetString@plt>
    347c:	mov	w0, #0xffffffff            	// #-1
    3480:	b	3440 <PyThread_free_lock@plt+0xb10>
    3484:	nop
    3488:	stp	x29, x30, [sp, #-48]!
    348c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3490:	add	x3, x3, #0x3d8
    3494:	mov	x29, sp
    3498:	mov	x0, x1
    349c:	add	x3, x3, #0x10
    34a0:	mov	x1, x2
    34a4:	add	x4, sp, #0x28
    34a8:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    34ac:	add	x2, x2, #0x4e0
    34b0:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    34b4:	cbz	w0, 353c <PyThread_free_lock@plt+0xc0c>
    34b8:	ldr	x0, [sp, #40]
    34bc:	stp	x19, x20, [sp, #16]
    34c0:	bl	2550 <_PyInterpreterID_LookUp@plt>
    34c4:	mov	x19, x0
    34c8:	cbz	x0, 3538 <PyThread_free_lock@plt+0xc08>
    34cc:	bl	2800 <_PyInterpreterState_Get@plt>
    34d0:	cbz	x0, 3538 <PyThread_free_lock@plt+0xc08>
    34d4:	cmp	x19, x0
    34d8:	b.eq	3548 <PyThread_free_lock@plt+0xc18>  // b.none
    34dc:	mov	x0, x19
    34e0:	bl	3418 <PyThread_free_lock@plt+0xae8>
    34e4:	cmp	w0, #0x0
    34e8:	b.lt	3538 <PyThread_free_lock@plt+0xc08>  // b.tstop
    34ec:	b.ne	356c <PyThread_free_lock@plt+0xc3c>  // b.any
    34f0:	mov	x0, x19
    34f4:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    34f8:	mov	x20, x0
    34fc:	bl	2920 <PyThreadState_Swap@plt>
    3500:	mov	x19, x0
    3504:	mov	x0, x20
    3508:	bl	25d0 <Py_EndInterpreter@plt>
    350c:	mov	x0, x19
    3510:	bl	2920 <PyThreadState_Swap@plt>
    3514:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3518:	ldp	x19, x20, [sp, #16]
    351c:	ldr	x1, [x1, #4048]
    3520:	mov	x0, x1
    3524:	ldr	x2, [x1]
    3528:	add	x2, x2, #0x1
    352c:	str	x2, [x1]
    3530:	ldp	x29, x30, [sp], #48
    3534:	ret
    3538:	ldp	x19, x20, [sp, #16]
    353c:	mov	x0, #0x0                   	// #0
    3540:	ldp	x29, x30, [sp], #48
    3544:	ret
    3548:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    354c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3550:	add	x1, x1, #0x4f0
    3554:	ldr	x0, [x0, #4000]
    3558:	ldr	x0, [x0]
    355c:	bl	2670 <PyErr_SetString@plt>
    3560:	mov	x0, #0x0                   	// #0
    3564:	ldp	x19, x20, [sp, #16]
    3568:	b	3530 <PyThread_free_lock@plt+0xc00>
    356c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3570:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3574:	add	x1, x1, #0x518
    3578:	ldr	x0, [x0, #4000]
    357c:	ldr	x0, [x0]
    3580:	bl	28c0 <PyErr_Format@plt>
    3584:	mov	x0, #0x0                   	// #0
    3588:	ldp	x19, x20, [sp, #16]
    358c:	b	3530 <PyThread_free_lock@plt+0xc00>
    3590:	stp	x29, x30, [sp, #-32]!
    3594:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3598:	add	x3, x3, #0x3d8
    359c:	mov	x29, sp
    35a0:	mov	x0, x1
    35a4:	add	x3, x3, #0x20
    35a8:	mov	x1, x2
    35ac:	add	x4, sp, #0x18
    35b0:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    35b4:	add	x2, x2, #0x538
    35b8:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    35bc:	cbz	w0, 35fc <PyThread_free_lock@plt+0xccc>
    35c0:	ldr	x0, [sp, #24]
    35c4:	bl	2550 <_PyInterpreterID_LookUp@plt>
    35c8:	cbz	x0, 35fc <PyThread_free_lock@plt+0xccc>
    35cc:	bl	3418 <PyThread_free_lock@plt+0xae8>
    35d0:	cmp	w0, #0x0
    35d4:	b.lt	35fc <PyThread_free_lock@plt+0xccc>  // b.tstop
    35d8:	b.ne	3608 <PyThread_free_lock@plt+0xcd8>  // b.any
    35dc:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    35e0:	ldr	x1, [x1, #4032]
    35e4:	mov	x0, x1
    35e8:	ldr	x2, [x1]
    35ec:	add	x2, x2, #0x1
    35f0:	str	x2, [x1]
    35f4:	ldp	x29, x30, [sp], #32
    35f8:	ret
    35fc:	mov	x0, #0x0                   	// #0
    3600:	ldp	x29, x30, [sp], #32
    3604:	ret
    3608:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    360c:	ldr	x1, [x1, #4056]
    3610:	mov	x0, x1
    3614:	ldr	x2, [x1]
    3618:	add	x2, x2, #0x1
    361c:	str	x2, [x1]
    3620:	ldp	x29, x30, [sp], #32
    3624:	ret
    3628:	stp	x29, x30, [sp, #-48]!
    362c:	mov	x0, x1
    3630:	mov	x3, #0x0                   	// #0
    3634:	mov	x29, sp
    3638:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    363c:	mov	x2, #0x0                   	// #0
    3640:	add	x1, x1, #0xa98
    3644:	stp	x19, x20, [sp, #16]
    3648:	mov	x19, #0x0                   	// #0
    364c:	bl	2720 <PyArg_UnpackTuple@plt>
    3650:	cbz	w0, 3698 <PyThread_free_lock@plt+0xd68>
    3654:	mov	x0, #0x0                   	// #0
    3658:	str	x21, [sp, #32]
    365c:	bl	2920 <PyThreadState_Swap@plt>
    3660:	mov	x21, x0
    3664:	bl	26b0 <Py_NewInterpreter@plt>
    3668:	mov	x20, x0
    366c:	mov	x0, x21
    3670:	bl	2920 <PyThreadState_Swap@plt>
    3674:	cbz	x20, 36a8 <PyThread_free_lock@plt+0xd78>
    3678:	ldr	x0, [x20, #16]
    367c:	bl	2620 <_PyInterpreterState_GetIDObject@plt>
    3680:	mov	x19, x0
    3684:	cbz	x0, 36c8 <PyThread_free_lock@plt+0xd98>
    3688:	ldr	x0, [x20, #16]
    368c:	mov	w1, #0x1                   	// #1
    3690:	bl	2700 <_PyInterpreterState_RequireIDRef@plt>
    3694:	ldr	x21, [sp, #32]
    3698:	mov	x0, x19
    369c:	ldp	x19, x20, [sp, #16]
    36a0:	ldp	x29, x30, [sp], #48
    36a4:	ret
    36a8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    36ac:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    36b0:	add	x1, x1, #0x548
    36b4:	ldr	x0, [x0, #4000]
    36b8:	ldr	x0, [x0]
    36bc:	bl	2670 <PyErr_SetString@plt>
    36c0:	ldr	x21, [sp, #32]
    36c4:	b	3698 <PyThread_free_lock@plt+0xd68>
    36c8:	mov	x0, x20
    36cc:	bl	2920 <PyThreadState_Swap@plt>
    36d0:	mov	x1, x0
    36d4:	mov	x0, x20
    36d8:	mov	x20, x1
    36dc:	bl	25d0 <Py_EndInterpreter@plt>
    36e0:	mov	x0, x20
    36e4:	bl	2920 <PyThreadState_Swap@plt>
    36e8:	ldr	x21, [sp, #32]
    36ec:	b	3698 <PyThread_free_lock@plt+0xd68>
    36f0:	mov	x3, x0
    36f4:	cbnz	x1, 3718 <PyThread_free_lock@plt+0xde8>
    36f8:	ldr	w0, [x0, #24]
    36fc:	cmp	w0, #0x1
    3700:	b.eq	373c <PyThread_free_lock@plt+0xe0c>  // b.none
    3704:	cmn	w0, #0x1
    3708:	b.eq	3730 <PyThread_free_lock@plt+0xe00>  // b.none
    370c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    3710:	add	x0, x0, #0x568
    3714:	b	2850 <PyUnicode_InternFromString@plt>
    3718:	ldr	w2, [x1]
    371c:	mov	w4, #0x1                   	// #1
    3720:	ldr	w5, [x0, #28]
    3724:	ldp	x0, x1, [x0, #8]
    3728:	ldr	x3, [x3, #32]
    372c:	b	2d30 <PyThread_free_lock@plt+0x400>
    3730:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    3734:	add	x0, x0, #0xae0
    3738:	b	2850 <PyUnicode_InternFromString@plt>
    373c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    3740:	add	x0, x0, #0xad0
    3744:	b	2850 <PyUnicode_InternFromString@plt>
    3748:	stp	x29, x30, [sp, #-64]!
    374c:	mov	x29, sp
    3750:	stp	x19, x20, [sp, #16]
    3754:	mov	w19, w2
    3758:	sub	w2, w2, #0x2
    375c:	stp	x21, x22, [sp, #32]
    3760:	cmp	w2, #0x1
    3764:	b.hi	3858 <PyThread_free_lock@plt+0xf28>  // b.pmore
    3768:	mov	x21, x0
    376c:	mov	x20, x1
    3770:	ldr	x0, [x0, #8]
    3774:	adrp	x22, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3778:	add	x1, x22, #0x238
    377c:	cmp	x0, x1
    3780:	b.eq	378c <PyThread_free_lock@plt+0xe5c>  // b.none
    3784:	bl	28a0 <PyType_IsSubtype@plt>
    3788:	cbz	w0, 3890 <PyThread_free_lock@plt+0xf60>
    378c:	ldr	x0, [x20, #8]
    3790:	add	x1, x22, #0x238
    3794:	cmp	x0, x1
    3798:	b.eq	3814 <PyThread_free_lock@plt+0xee4>  // b.none
    379c:	bl	28a0 <PyType_IsSubtype@plt>
    37a0:	cbnz	w0, 3814 <PyThread_free_lock@plt+0xee4>
    37a4:	ldr	x0, [x20, #8]
    37a8:	ldr	x0, [x0, #168]
    37ac:	tbz	w0, #24, 3884 <PyThread_free_lock@plt+0xf54>
    37b0:	mov	x0, x20
    37b4:	add	x1, sp, #0x3c
    37b8:	bl	2520 <PyLong_AsLongLongAndOverflow@plt>
    37bc:	cmn	x0, #0x1
    37c0:	b.eq	3910 <PyThread_free_lock@plt+0xfe0>  // b.none
    37c4:	ldr	w1, [sp, #60]
    37c8:	cmp	w1, #0x0
    37cc:	ccmp	x0, #0x0, #0x1, eq  // eq = none
    37d0:	b.lt	3824 <PyThread_free_lock@plt+0xef4>  // b.tstop
    37d4:	ldr	x1, [x21, #16]
    37d8:	cmp	x0, x1
    37dc:	b.ne	3824 <PyThread_free_lock@plt+0xef4>  // b.any
    37e0:	cmp	w19, #0x2
    37e4:	b.ne	382c <PyThread_free_lock@plt+0xefc>  // b.any
    37e8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    37ec:	ldr	x0, [x0, #4056]
    37f0:	mov	x21, x0
    37f4:	ldr	x1, [x0]
    37f8:	add	x1, x1, #0x1
    37fc:	str	x1, [x0]
    3800:	mov	x0, x21
    3804:	ldp	x19, x20, [sp, #16]
    3808:	ldp	x21, x22, [sp, #32]
    380c:	ldp	x29, x30, [sp], #64
    3810:	ret
    3814:	ldr	w0, [x20, #24]
    3818:	ldr	w1, [x21, #24]
    381c:	cmp	w1, w0
    3820:	b.eq	38bc <PyThread_free_lock@plt+0xf8c>  // b.none
    3824:	cmp	w19, #0x3
    3828:	b.eq	37e8 <PyThread_free_lock@plt+0xeb8>  // b.none
    382c:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3830:	ldp	x19, x20, [sp, #16]
    3834:	ldr	x0, [x0, #4032]
    3838:	mov	x21, x0
    383c:	ldr	x1, [x0]
    3840:	add	x1, x1, #0x1
    3844:	str	x1, [x0]
    3848:	mov	x0, x21
    384c:	ldp	x21, x22, [sp, #32]
    3850:	ldp	x29, x30, [sp], #64
    3854:	ret
    3858:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    385c:	ldp	x19, x20, [sp, #16]
    3860:	ldr	x1, [x1, #3992]
    3864:	mov	x21, x1
    3868:	ldr	x0, [x1]
    386c:	add	x0, x0, #0x1
    3870:	str	x0, [x1]
    3874:	mov	x0, x21
    3878:	ldp	x21, x22, [sp, #32]
    387c:	ldp	x29, x30, [sp], #64
    3880:	ret
    3884:	mov	x0, x20
    3888:	bl	2880 <PyNumber_Check@plt>
    388c:	cbnz	w0, 38d0 <PyThread_free_lock@plt+0xfa0>
    3890:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3894:	ldp	x19, x20, [sp, #16]
    3898:	ldr	x0, [x0, #3992]
    389c:	mov	x21, x0
    38a0:	ldr	x1, [x0]
    38a4:	add	x1, x1, #0x1
    38a8:	str	x1, [x0]
    38ac:	mov	x0, x21
    38b0:	ldp	x21, x22, [sp, #32]
    38b4:	ldp	x29, x30, [sp], #64
    38b8:	ret
    38bc:	ldr	x0, [x20, #16]
    38c0:	ldr	x1, [x21, #16]
    38c4:	cmp	x1, x0
    38c8:	b.ne	3824 <PyThread_free_lock@plt+0xef4>  // b.any
    38cc:	b	37e0 <PyThread_free_lock@plt+0xeb0>
    38d0:	ldr	x0, [x21, #16]
    38d4:	mov	x21, #0x0                   	// #0
    38d8:	bl	28e0 <PyLong_FromLongLong@plt>
    38dc:	mov	x22, x0
    38e0:	cbz	x0, 3800 <PyThread_free_lock@plt+0xed0>
    38e4:	mov	x1, x20
    38e8:	mov	w2, w19
    38ec:	bl	2650 <PyObject_RichCompare@plt>
    38f0:	mov	x21, x0
    38f4:	ldr	x1, [x22]
    38f8:	sub	x0, x1, #0x1
    38fc:	str	x0, [x22]
    3900:	cbnz	x0, 3800 <PyThread_free_lock@plt+0xed0>
    3904:	mov	x0, x22
    3908:	bl	25e0 <_Py_Dealloc@plt>
    390c:	b	3800 <PyThread_free_lock@plt+0xed0>
    3910:	mov	x21, #0x0                   	// #0
    3914:	bl	2730 <PyErr_Occurred@plt>
    3918:	cbz	x0, 3824 <PyThread_free_lock@plt+0xef4>
    391c:	b	3800 <PyThread_free_lock@plt+0xed0>
    3920:	sub	sp, sp, #0x80
    3924:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3928:	add	x0, sp, #0x74
    392c:	add	x3, x3, #0x3d8
    3930:	adrp	x4, 3000 <PyThread_free_lock@plt+0x6d0>
    3934:	add	x3, x3, #0x30
    3938:	stp	x29, x30, [sp, #16]
    393c:	add	x29, sp, #0x10
    3940:	add	x4, x4, #0x10
    3944:	add	x7, sp, #0x70
    3948:	str	x0, [sp]
    394c:	add	x6, sp, #0x6c
    3950:	mov	x0, x1
    3954:	add	x5, sp, #0x78
    3958:	mov	x1, x2
    395c:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3960:	add	x2, x2, #0x570
    3964:	stp	x19, x20, [sp, #32]
    3968:	mov	x19, #0x0                   	// #0
    396c:	stp	wzr, wzr, [sp, #108]
    3970:	str	wzr, [sp, #116]
    3974:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3978:	cbz	w0, 3aac <PyThread_free_lock@plt+0x117c>
    397c:	stp	x21, x22, [sp, #48]
    3980:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3984:	add	x0, x21, #0x930
    3988:	ldp	w22, w2, [sp, #108]
    398c:	add	x19, x0, #0x8
    3990:	ldr	x0, [x0, #8]
    3994:	sub	w22, w22, w2
    3998:	mov	w1, #0x1                   	// #1
    399c:	stp	x23, x24, [sp, #64]
    39a0:	ldr	w23, [sp, #116]
    39a4:	ldr	x24, [sp, #120]
    39a8:	bl	2640 <PyThread_acquire_lock@plt>
    39ac:	ldr	x20, [x19, #8]
    39b0:	cbz	x20, 3ae0 <PyThread_free_lock@plt+0x11b0>
    39b4:	str	x25, [sp, #80]
    39b8:	b	39c4 <PyThread_free_lock@plt+0x1094>
    39bc:	ldr	x20, [x20, #16]
    39c0:	cbz	x20, 3adc <PyThread_free_lock@plt+0x11ac>
    39c4:	ldr	x0, [x20]
    39c8:	cmp	x24, x0
    39cc:	b.ne	39bc <PyThread_free_lock@plt+0x108c>  // b.any
    39d0:	ldr	x19, [x20, #8]
    39d4:	cbz	x19, 3c88 <PyThread_free_lock@plt+0x1358>
    39d8:	cmp	w23, #0x0
    39dc:	ccmp	w22, #0x1, #0x0, eq  // eq = none
    39e0:	b.ne	3ac0 <PyThread_free_lock@plt+0x1190>  // b.any
    39e4:	ldr	x0, [x19, #32]
    39e8:	cbnz	x0, 3c0c <PyThread_free_lock@plt+0x12dc>
    39ec:	ldr	x0, [x19]
    39f0:	mov	w1, #0x1                   	// #1
    39f4:	bl	2640 <PyThread_acquire_lock@plt>
    39f8:	ldr	w0, [x19, #24]
    39fc:	cbz	w0, 3b10 <PyThread_free_lock@plt+0x11e0>
    3a00:	ldr	x0, [x19, #8]
    3a04:	ldr	x0, [x0]
    3a08:	cmp	x0, #0x0
    3a0c:	b.gt	3c38 <PyThread_free_lock@plt+0x1308>
    3a10:	ldr	x2, [x19, #16]
    3a14:	ldr	x0, [x2, #16]
    3a18:	str	wzr, [x19, #24]
    3a1c:	cbz	x0, 3a40 <PyThread_free_lock@plt+0x1110>
    3a20:	ldr	x1, [x2]
    3a24:	sub	x1, x1, #0x1
    3a28:	str	wzr, [x0, #16]
    3a2c:	mov	x3, x1
    3a30:	ldr	x0, [x0]
    3a34:	sub	x1, x1, #0x1
    3a38:	cbnz	x0, 3a28 <PyThread_free_lock@plt+0x10f8>
    3a3c:	str	x3, [x2]
    3a40:	ldr	x0, [x2, #24]
    3a44:	cbz	x0, 3a68 <PyThread_free_lock@plt+0x1138>
    3a48:	ldr	x1, [x2, #8]
    3a4c:	sub	x1, x1, #0x1
    3a50:	str	wzr, [x0, #16]
    3a54:	mov	x3, x1
    3a58:	ldr	x0, [x0]
    3a5c:	sub	x1, x1, #0x1
    3a60:	cbnz	x0, 3a50 <PyThread_free_lock@plt+0x1120>
    3a64:	str	x3, [x2, #8]
    3a68:	ldr	x0, [x19]
    3a6c:	add	x21, x21, #0x930
    3a70:	bl	27b0 <PyThread_release_lock@plt>
    3a74:	ldr	x0, [x20, #8]
    3a78:	bl	3228 <PyThread_free_lock@plt+0x8f8>
    3a7c:	str	xzr, [x20, #8]
    3a80:	ldr	x0, [x21, #8]
    3a84:	bl	27b0 <PyThread_release_lock@plt>
    3a88:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3a8c:	ldp	x21, x22, [sp, #48]
    3a90:	ldr	x0, [x0, #4048]
    3a94:	ldp	x23, x24, [sp, #64]
    3a98:	mov	x19, x0
    3a9c:	ldr	x1, [x0]
    3aa0:	ldr	x25, [sp, #80]
    3aa4:	add	x1, x1, #0x1
    3aa8:	str	x1, [x0]
    3aac:	mov	x0, x19
    3ab0:	ldp	x29, x30, [sp, #16]
    3ab4:	ldp	x19, x20, [sp, #32]
    3ab8:	add	sp, sp, #0x80
    3abc:	ret
    3ac0:	ldr	x0, [x19]
    3ac4:	mov	w1, #0x1                   	// #1
    3ac8:	bl	2640 <PyThread_acquire_lock@plt>
    3acc:	ldr	w0, [x19, #24]
    3ad0:	cbz	w0, 3b10 <PyThread_free_lock@plt+0x11e0>
    3ad4:	cbnz	w23, 3a10 <PyThread_free_lock@plt+0x10e0>
    3ad8:	b	3a00 <PyThread_free_lock@plt+0x10d0>
    3adc:	ldr	x25, [sp, #80]
    3ae0:	mov	x2, x24
    3ae4:	ldr	x0, [x21, #2352]
    3ae8:	add	x21, x21, #0x930
    3aec:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3af0:	add	x1, x1, #0x3d0
    3af4:	mov	x19, #0x0                   	// #0
    3af8:	bl	28c0 <PyErr_Format@plt>
    3afc:	ldr	x0, [x21, #8]
    3b00:	bl	27b0 <PyThread_release_lock@plt>
    3b04:	ldp	x21, x22, [sp, #48]
    3b08:	ldp	x23, x24, [sp, #64]
    3b0c:	b	3aac <PyThread_free_lock@plt+0x117c>
    3b10:	add	x0, x21, #0x930
    3b14:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3b18:	add	x1, x1, #0x490
    3b1c:	ldr	x0, [x0, #40]
    3b20:	bl	2670 <PyErr_SetString@plt>
    3b24:	ldr	x0, [x19]
    3b28:	bl	27b0 <PyThread_release_lock@plt>
    3b2c:	cmp	w22, #0x1
    3b30:	b.eq	3b64 <PyThread_free_lock@plt+0x1234>  // b.none
    3b34:	add	x21, x21, #0x930
    3b38:	mov	x19, #0x0                   	// #0
    3b3c:	ldr	x0, [x21, #8]
    3b40:	bl	27b0 <PyThread_release_lock@plt>
    3b44:	mov	x0, x19
    3b48:	ldp	x29, x30, [sp, #16]
    3b4c:	ldp	x19, x20, [sp, #32]
    3b50:	ldp	x21, x22, [sp, #48]
    3b54:	ldp	x23, x24, [sp, #64]
    3b58:	ldr	x25, [sp, #80]
    3b5c:	add	sp, sp, #0x80
    3b60:	ret
    3b64:	add	x25, x21, #0x930
    3b68:	ldr	x0, [x25, #48]
    3b6c:	bl	26a0 <PyErr_ExceptionMatches@plt>
    3b70:	cbz	w0, 3bf0 <PyThread_free_lock@plt+0x12c0>
    3b74:	ldr	x0, [x20, #8]
    3b78:	ldr	x19, [x0, #32]
    3b7c:	cbnz	x19, 3c58 <PyThread_free_lock@plt+0x1328>
    3b80:	bl	26f0 <PyErr_Clear@plt>
    3b84:	ldr	x23, [x20, #8]
    3b88:	cbz	x23, 3be0 <PyThread_free_lock@plt+0x12b0>
    3b8c:	ldr	x0, [x23]
    3b90:	mov	w1, w22
    3b94:	bl	2640 <PyThread_acquire_lock@plt>
    3b98:	ldr	x0, [x23, #32]
    3b9c:	cbz	x0, 3bc0 <PyThread_free_lock@plt+0x1290>
    3ba0:	ldr	x0, [x25, #40]
    3ba4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3ba8:	add	x1, x1, #0x5d0
    3bac:	add	x21, x21, #0x930
    3bb0:	bl	2670 <PyErr_SetString@plt>
    3bb4:	ldr	x0, [x23]
    3bb8:	bl	27b0 <PyThread_release_lock@plt>
    3bbc:	b	3b3c <PyThread_free_lock@plt+0x120c>
    3bc0:	mov	x0, #0x8                   	// #8
    3bc4:	bl	2910 <PyMem_Malloc@plt>
    3bc8:	mov	x1, x0
    3bcc:	str	x1, [x23, #32]
    3bd0:	ldr	x0, [x23]
    3bd4:	cbz	x1, 3c2c <PyThread_free_lock@plt+0x12fc>
    3bd8:	str	x20, [x1]
    3bdc:	bl	27b0 <PyThread_release_lock@plt>
    3be0:	add	x21, x21, #0x930
    3be4:	ldr	x0, [x21, #8]
    3be8:	bl	27b0 <PyThread_release_lock@plt>
    3bec:	b	3a88 <PyThread_free_lock@plt+0x1158>
    3bf0:	ldr	x0, [x25, #8]
    3bf4:	mov	x19, #0x0                   	// #0
    3bf8:	bl	27b0 <PyThread_release_lock@plt>
    3bfc:	ldp	x21, x22, [sp, #48]
    3c00:	ldp	x23, x24, [sp, #64]
    3c04:	ldr	x25, [sp, #80]
    3c08:	b	3aac <PyThread_free_lock@plt+0x117c>
    3c0c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3c10:	add	x21, x21, #0x930
    3c14:	mov	x2, x24
    3c18:	add	x1, x1, #0x588
    3c1c:	mov	x19, #0x0                   	// #0
    3c20:	ldr	x0, [x21, #40]
    3c24:	bl	28c0 <PyErr_Format@plt>
    3c28:	b	3b3c <PyThread_free_lock@plt+0x120c>
    3c2c:	add	x21, x21, #0x930
    3c30:	bl	27b0 <PyThread_release_lock@plt>
    3c34:	b	3b3c <PyThread_free_lock@plt+0x120c>
    3c38:	add	x0, x21, #0x930
    3c3c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3c40:	add	x1, x1, #0x5a0
    3c44:	ldr	x0, [x0, #48]
    3c48:	bl	2670 <PyErr_SetString@plt>
    3c4c:	ldr	x0, [x19]
    3c50:	bl	27b0 <PyThread_release_lock@plt>
    3c54:	b	3b2c <PyThread_free_lock@plt+0x11fc>
    3c58:	ldr	x0, [x25, #40]
    3c5c:	mov	x2, x24
    3c60:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3c64:	add	x1, x1, #0x588
    3c68:	mov	x19, #0x0                   	// #0
    3c6c:	bl	28c0 <PyErr_Format@plt>
    3c70:	ldr	x0, [x25, #8]
    3c74:	bl	27b0 <PyThread_release_lock@plt>
    3c78:	ldp	x21, x22, [sp, #48]
    3c7c:	ldp	x23, x24, [sp, #64]
    3c80:	ldr	x25, [sp, #80]
    3c84:	b	3aac <PyThread_free_lock@plt+0x117c>
    3c88:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3c8c:	add	x21, x21, #0x930
    3c90:	mov	x2, x24
    3c94:	add	x1, x1, #0x588
    3c98:	b	3c20 <PyThread_free_lock@plt+0x12f0>
    3c9c:	nop
    3ca0:	sub	sp, sp, #0x40
    3ca4:	mov	w8, #0xffffffff            	// #-1
    3ca8:	add	x3, sp, #0x34
    3cac:	add	x0, sp, #0x30
    3cb0:	adrp	x4, 3000 <PyThread_free_lock@plt+0x6d0>
    3cb4:	add	x7, sp, #0x2c
    3cb8:	stp	x29, x30, [sp, #16]
    3cbc:	add	x29, sp, #0x10
    3cc0:	add	x4, x4, #0x10
    3cc4:	add	x6, sp, #0x28
    3cc8:	stp	x0, x3, [sp]
    3ccc:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3cd0:	add	x3, x3, #0x3d8
    3cd4:	mov	x0, x1
    3cd8:	add	x5, sp, #0x38
    3cdc:	mov	x1, x2
    3ce0:	add	x3, x3, #0x58
    3ce4:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3ce8:	add	x2, x2, #0x5e0
    3cec:	stp	w8, w8, [sp, #40]
    3cf0:	stp	wzr, wzr, [sp, #48]
    3cf4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3cf8:	cbz	w0, 3d54 <PyThread_free_lock@plt+0x1424>
    3cfc:	ldp	w1, w0, [sp, #40]
    3d00:	cbz	w1, 3d44 <PyThread_free_lock@plt+0x1414>
    3d04:	cmp	w1, #0x1
    3d08:	b.ne	3d48 <PyThread_free_lock@plt+0x1418>  // b.any
    3d0c:	add	w0, w0, #0x1
    3d10:	cmp	w0, #0x1
    3d14:	cset	w2, ls  // ls = plast
    3d18:	ldp	w4, w5, [sp, #48]
    3d1c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3d20:	ldr	x1, [sp, #56]
    3d24:	add	x3, x3, #0x930
    3d28:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3d2c:	add	x3, x3, #0x8
    3d30:	add	x0, x0, #0x238
    3d34:	bl	2d30 <PyThread_free_lock@plt+0x400>
    3d38:	ldp	x29, x30, [sp, #16]
    3d3c:	add	sp, sp, #0x40
    3d40:	ret
    3d44:	cbz	w0, 3d64 <PyThread_free_lock@plt+0x1434>
    3d48:	cmp	w0, #0x1
    3d4c:	csetm	w2, eq  // eq = none
    3d50:	b	3d18 <PyThread_free_lock@plt+0x13e8>
    3d54:	mov	x0, #0x0                   	// #0
    3d58:	ldp	x29, x30, [sp, #16]
    3d5c:	add	sp, sp, #0x40
    3d60:	ret
    3d64:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3d68:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3d6c:	add	x1, x1, #0x600
    3d70:	ldr	x0, [x0, #4016]
    3d74:	ldr	x0, [x0]
    3d78:	bl	2670 <PyErr_SetString@plt>
    3d7c:	mov	x0, #0x0                   	// #0
    3d80:	b	3d38 <PyThread_free_lock@plt+0x1408>
    3d84:	nop
    3d88:	stp	x29, x30, [sp, #-48]!
    3d8c:	mov	x29, sp
    3d90:	stp	x21, x22, [sp, #32]
    3d94:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3d98:	add	x3, x21, #0x930
    3d9c:	mov	x22, x0
    3da0:	stp	x19, x20, [sp, #16]
    3da4:	mov	x20, x2
    3da8:	ldr	x0, [x3, #8]
    3dac:	mov	x19, x1
    3db0:	mov	w1, #0x1                   	// #1
    3db4:	bl	2640 <PyThread_acquire_lock@plt>
    3db8:	str	xzr, [x20]
    3dbc:	ldr	x0, [x22]
    3dc0:	cbnz	x0, 3dd0 <PyThread_free_lock@plt+0x14a0>
    3dc4:	b	3e44 <PyThread_free_lock@plt+0x1514>
    3dc8:	ldr	x0, [x0, #16]
    3dcc:	cbz	x0, 3e44 <PyThread_free_lock@plt+0x1514>
    3dd0:	ldr	x3, [x0]
    3dd4:	cmp	x3, x19
    3dd8:	b.ne	3dc8 <PyThread_free_lock@plt+0x1498>  // b.any
    3ddc:	ldr	x1, [x0, #8]
    3de0:	cbz	x1, 3e20 <PyThread_free_lock@plt+0x14f0>
    3de4:	ldr	w1, [x1, #24]
    3de8:	cbz	w1, 3e20 <PyThread_free_lock@plt+0x14f0>
    3dec:	add	x1, x21, #0x930
    3df0:	ldr	x1, [x1, #8]
    3df4:	str	x1, [x20]
    3df8:	ldr	x19, [x0, #8]
    3dfc:	cbnz	x1, 3e0c <PyThread_free_lock@plt+0x14dc>
    3e00:	add	x21, x21, #0x930
    3e04:	ldr	x0, [x21, #8]
    3e08:	bl	27b0 <PyThread_release_lock@plt>
    3e0c:	mov	x0, x19
    3e10:	ldp	x19, x20, [sp, #16]
    3e14:	ldp	x21, x22, [sp, #32]
    3e18:	ldp	x29, x30, [sp], #48
    3e1c:	ret
    3e20:	add	x0, x21, #0x930
    3e24:	mov	x2, x19
    3e28:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3e2c:	add	x1, x1, #0x588
    3e30:	mov	x19, #0x0                   	// #0
    3e34:	ldr	x0, [x0, #40]
    3e38:	bl	28c0 <PyErr_Format@plt>
    3e3c:	ldr	x1, [x20]
    3e40:	b	3dfc <PyThread_free_lock@plt+0x14cc>
    3e44:	ldr	x0, [x21, #2352]
    3e48:	mov	x2, x19
    3e4c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3e50:	add	x1, x1, #0x3d0
    3e54:	mov	x19, #0x0                   	// #0
    3e58:	bl	28c0 <PyErr_Format@plt>
    3e5c:	ldr	x1, [x20]
    3e60:	b	3dfc <PyThread_free_lock@plt+0x14cc>
    3e64:	nop
    3e68:	stp	x29, x30, [sp, #-96]!
    3e6c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3e70:	add	x3, x3, #0x3d8
    3e74:	mov	x29, sp
    3e78:	mov	x0, x1
    3e7c:	adrp	x4, 3000 <PyThread_free_lock@plt+0x6d0>
    3e80:	mov	x1, x2
    3e84:	add	x3, x3, #0x88
    3e88:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    3e8c:	add	x4, x4, #0x10
    3e90:	add	x2, x2, #0x628
    3e94:	add	x6, sp, #0x50
    3e98:	add	x5, sp, #0x48
    3e9c:	stp	x19, x20, [sp, #16]
    3ea0:	mov	x20, #0x0                   	// #0
    3ea4:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    3ea8:	cbz	w0, 3fa8 <PyThread_free_lock@plt+0x1678>
    3eac:	stp	x21, x22, [sp, #32]
    3eb0:	stp	x23, x24, [sp, #48]
    3eb4:	ldp	x21, x24, [sp, #72]
    3eb8:	bl	2800 <_PyInterpreterState_Get@plt>
    3ebc:	mov	x22, x0
    3ec0:	cbz	x0, 4030 <PyThread_free_lock@plt+0x1700>
    3ec4:	adrp	x23, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    3ec8:	add	x23, x23, #0x930
    3ecc:	add	x0, x23, #0x10
    3ed0:	add	x2, sp, #0x58
    3ed4:	mov	x1, x21
    3ed8:	str	xzr, [sp, #88]
    3edc:	bl	3d88 <PyThread_free_lock@plt+0x1458>
    3ee0:	mov	x19, x0
    3ee4:	cbz	x0, 4030 <PyThread_free_lock@plt+0x1700>
    3ee8:	ldr	x20, [x0, #32]
    3eec:	cbnz	x20, 3ff0 <PyThread_free_lock@plt+0x16c0>
    3ef0:	mov	x0, #0x28                  	// #40
    3ef4:	bl	2910 <PyMem_Malloc@plt>
    3ef8:	mov	x21, x0
    3efc:	cbz	x0, 4080 <PyThread_free_lock@plt+0x1750>
    3f00:	mov	x0, x24
    3f04:	mov	x1, x21
    3f08:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    3f0c:	cbnz	w0, 4040 <PyThread_free_lock@plt+0x1710>
    3f10:	mov	x0, x22
    3f14:	bl	2680 <PyInterpreterState_GetID@plt>
    3f18:	mov	x22, x0
    3f1c:	mov	w1, #0x1                   	// #1
    3f20:	ldr	x0, [x19]
    3f24:	bl	2640 <PyThread_acquire_lock@plt>
    3f28:	ldr	w0, [x19, #24]
    3f2c:	cbz	w0, 405c <PyThread_free_lock@plt+0x172c>
    3f30:	ldr	x0, [x19, #16]
    3f34:	mov	x1, x22
    3f38:	mov	w2, #0x1                   	// #1
    3f3c:	bl	30f0 <PyThread_free_lock@plt+0x7c0>
    3f40:	cbnz	w0, 401c <PyThread_free_lock@plt+0x16ec>
    3f44:	mov	x0, #0x10                  	// #16
    3f48:	ldr	x22, [x19, #8]
    3f4c:	bl	2910 <PyMem_Malloc@plt>
    3f50:	mov	x1, x0
    3f54:	cbz	x0, 3fc0 <PyThread_free_lock@plt+0x1690>
    3f58:	ldp	x0, x2, [x22]
    3f5c:	stp	x21, xzr, [x1]
    3f60:	add	x0, x0, #0x1
    3f64:	str	x0, [x22]
    3f68:	cbz	x2, 3fb8 <PyThread_free_lock@plt+0x1688>
    3f6c:	ldr	x0, [x22, #16]
    3f70:	str	x1, [x0, #8]
    3f74:	ldr	x0, [x19]
    3f78:	str	x1, [x22, #16]
    3f7c:	bl	27b0 <PyThread_release_lock@plt>
    3f80:	ldr	x0, [sp, #88]
    3f84:	bl	27b0 <PyThread_release_lock@plt>
    3f88:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    3f8c:	ldp	x21, x22, [sp, #32]
    3f90:	ldr	x0, [x0, #4048]
    3f94:	ldp	x23, x24, [sp, #48]
    3f98:	mov	x20, x0
    3f9c:	ldr	x1, [x0]
    3fa0:	add	x1, x1, #0x1
    3fa4:	str	x1, [x0]
    3fa8:	mov	x0, x20
    3fac:	ldp	x19, x20, [sp, #16]
    3fb0:	ldp	x29, x30, [sp], #96
    3fb4:	ret
    3fb8:	str	x1, [x22, #8]
    3fbc:	b	3f74 <PyThread_free_lock@plt+0x1644>
    3fc0:	bl	2600 <PyErr_NoMemory@plt>
    3fc4:	ldr	x0, [x19]
    3fc8:	bl	27b0 <PyThread_release_lock@plt>
    3fcc:	ldr	x0, [sp, #88]
    3fd0:	bl	27b0 <PyThread_release_lock@plt>
    3fd4:	mov	x0, x21
    3fd8:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    3fdc:	mov	x0, x21
    3fe0:	bl	2590 <PyMem_Free@plt>
    3fe4:	ldp	x21, x22, [sp, #32]
    3fe8:	ldp	x23, x24, [sp, #48]
    3fec:	b	3fa8 <PyThread_free_lock@plt+0x1678>
    3ff0:	ldr	x0, [x23, #40]
    3ff4:	mov	x2, x21
    3ff8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    3ffc:	add	x1, x1, #0x588
    4000:	mov	x20, #0x0                   	// #0
    4004:	bl	28c0 <PyErr_Format@plt>
    4008:	ldr	x0, [sp, #88]
    400c:	bl	27b0 <PyThread_release_lock@plt>
    4010:	ldp	x21, x22, [sp, #32]
    4014:	ldp	x23, x24, [sp, #48]
    4018:	b	3fa8 <PyThread_free_lock@plt+0x1678>
    401c:	ldr	x0, [x19]
    4020:	bl	27b0 <PyThread_release_lock@plt>
    4024:	ldr	x0, [sp, #88]
    4028:	bl	27b0 <PyThread_release_lock@plt>
    402c:	b	3fd4 <PyThread_free_lock@plt+0x16a4>
    4030:	mov	x20, #0x0                   	// #0
    4034:	ldp	x21, x22, [sp, #32]
    4038:	ldp	x23, x24, [sp, #48]
    403c:	b	3fa8 <PyThread_free_lock@plt+0x1678>
    4040:	ldr	x0, [sp, #88]
    4044:	bl	27b0 <PyThread_release_lock@plt>
    4048:	mov	x0, x21
    404c:	bl	2590 <PyMem_Free@plt>
    4050:	ldp	x21, x22, [sp, #32]
    4054:	ldp	x23, x24, [sp, #48]
    4058:	b	3fa8 <PyThread_free_lock@plt+0x1678>
    405c:	ldr	x0, [x23, #40]
    4060:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4064:	add	x1, x1, #0x5d0
    4068:	bl	2670 <PyErr_SetString@plt>
    406c:	ldr	x0, [x19]
    4070:	bl	27b0 <PyThread_release_lock@plt>
    4074:	ldr	x0, [sp, #88]
    4078:	bl	27b0 <PyThread_release_lock@plt>
    407c:	b	3fd4 <PyThread_free_lock@plt+0x16a4>
    4080:	ldr	x0, [sp, #88]
    4084:	bl	27b0 <PyThread_release_lock@plt>
    4088:	ldp	x21, x22, [sp, #32]
    408c:	ldp	x23, x24, [sp, #48]
    4090:	b	3fa8 <PyThread_free_lock@plt+0x1678>
    4094:	nop
    4098:	stp	x29, x30, [sp, #-64]!
    409c:	mov	w1, #0x1                   	// #1
    40a0:	mov	x29, sp
    40a4:	stp	x19, x20, [sp, #16]
    40a8:	adrp	x19, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    40ac:	stp	x21, x22, [sp, #32]
    40b0:	add	x21, x19, #0x930
    40b4:	add	x22, x21, #0x8
    40b8:	ldr	x0, [x21, #8]
    40bc:	bl	2640 <PyThread_acquire_lock@plt>
    40c0:	ldr	x0, [x22, #16]
    40c4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    40c8:	cmp	x0, x1
    40cc:	b.eq	41e0 <PyThread_free_lock@plt+0x18b0>  // b.none
    40d0:	mov	x1, #0xfffffffffffffff     	// #1152921504606846975
    40d4:	cmp	x0, x1
    40d8:	b.hi	41b4 <PyThread_free_lock@plt+0x1884>  // b.pmore
    40dc:	lsl	x0, x0, #3
    40e0:	bl	2910 <PyMem_Malloc@plt>
    40e4:	mov	x20, x0
    40e8:	cbz	x0, 41b4 <PyThread_free_lock@plt+0x1884>
    40ec:	ldr	x1, [x22, #8]
    40f0:	stp	x23, x24, [sp, #48]
    40f4:	cbz	x1, 4110 <PyThread_free_lock@plt+0x17e0>
    40f8:	mov	x2, x0
    40fc:	nop
    4100:	ldr	x3, [x1]
    4104:	ldr	x1, [x1, #16]
    4108:	str	x3, [x2], #8
    410c:	cbnz	x1, 4100 <PyThread_free_lock@plt+0x17d0>
    4110:	add	x19, x19, #0x930
    4114:	add	x22, x19, #0x8
    4118:	ldr	x0, [x19, #8]
    411c:	ldr	x23, [x22, #16]
    4120:	bl	27b0 <PyThread_release_lock@plt>
    4124:	mov	x0, x23
    4128:	bl	2500 <PyList_New@plt>
    412c:	mov	x21, x0
    4130:	cbz	x0, 4190 <PyThread_free_lock@plt+0x1860>
    4134:	adrp	x24, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4138:	cmp	x23, #0x0
    413c:	add	x24, x24, #0x238
    4140:	mov	x19, #0x0                   	// #0
    4144:	b.gt	4160 <PyThread_free_lock@plt+0x1830>
    4148:	b	4194 <PyThread_free_lock@plt+0x1864>
    414c:	ldr	x1, [x21, #24]
    4150:	str	x0, [x1, x19, lsl #3]
    4154:	add	x19, x19, #0x1
    4158:	cmp	x19, x23
    415c:	b.eq	4194 <PyThread_free_lock@plt+0x1864>  // b.none
    4160:	ldr	x1, [x20, x19, lsl #3]
    4164:	mov	x3, x22
    4168:	mov	x0, x24
    416c:	mov	w5, #0x0                   	// #0
    4170:	mov	w4, #0x0                   	// #0
    4174:	mov	w2, #0x0                   	// #0
    4178:	bl	2d30 <PyThread_free_lock@plt+0x400>
    417c:	cbnz	x0, 414c <PyThread_free_lock@plt+0x181c>
    4180:	ldr	x0, [x21]
    4184:	sub	x0, x0, #0x1
    4188:	str	x0, [x21]
    418c:	cbz	x0, 41d0 <PyThread_free_lock@plt+0x18a0>
    4190:	mov	x21, #0x0                   	// #0
    4194:	mov	x0, x20
    4198:	bl	2590 <PyMem_Free@plt>
    419c:	mov	x0, x21
    41a0:	ldp	x19, x20, [sp, #16]
    41a4:	ldp	x21, x22, [sp, #32]
    41a8:	ldp	x23, x24, [sp, #48]
    41ac:	ldp	x29, x30, [sp], #64
    41b0:	ret
    41b4:	ldr	x0, [x21, #8]
    41b8:	bl	27b0 <PyThread_release_lock@plt>
    41bc:	ldp	x19, x20, [sp, #16]
    41c0:	mov	x0, #0x0                   	// #0
    41c4:	ldp	x21, x22, [sp, #32]
    41c8:	ldp	x29, x30, [sp], #64
    41cc:	b	2500 <PyList_New@plt>
    41d0:	mov	x0, x21
    41d4:	mov	x21, #0x0                   	// #0
    41d8:	bl	25e0 <_Py_Dealloc@plt>
    41dc:	b	4194 <PyThread_free_lock@plt+0x1864>
    41e0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    41e4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    41e8:	add	x1, x1, #0x640
    41ec:	ldr	x0, [x0, #4000]
    41f0:	ldr	x0, [x0]
    41f4:	bl	2670 <PyErr_SetString@plt>
    41f8:	ldr	x0, [x21, #8]
    41fc:	bl	27b0 <PyThread_release_lock@plt>
    4200:	b	41bc <PyThread_free_lock@plt+0x188c>
    4204:	nop
    4208:	stp	x29, x30, [sp, #-48]!
    420c:	mov	w1, #0x1                   	// #1
    4210:	mov	x29, sp
    4214:	stp	x19, x20, [sp, #16]
    4218:	adrp	x19, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    421c:	add	x2, x19, #0x930
    4220:	mov	x20, x0
    4224:	ldr	x0, [x2, #8]
    4228:	str	x21, [sp, #32]
    422c:	add	x21, x2, #0x8
    4230:	bl	2640 <PyThread_acquire_lock@plt>
    4234:	ldr	x2, [x21, #8]
    4238:	cbz	x2, 42c0 <PyThread_free_lock@plt+0x1990>
    423c:	mov	x0, x2
    4240:	mov	x3, #0x0                   	// #0
    4244:	b	4254 <PyThread_free_lock@plt+0x1924>
    4248:	mov	x3, x0
    424c:	mov	x0, x1
    4250:	cbz	x1, 42c0 <PyThread_free_lock@plt+0x1990>
    4254:	ldr	x4, [x0]
    4258:	ldr	x1, [x0, #16]
    425c:	cmp	x20, x4
    4260:	b.ne	4248 <PyThread_free_lock@plt+0x1918>  // b.any
    4264:	cmp	x0, x2
    4268:	b.eq	42b4 <PyThread_free_lock@plt+0x1984>  // b.none
    426c:	str	x1, [x3, #16]
    4270:	add	x19, x19, #0x930
    4274:	mov	w21, #0x0                   	// #0
    4278:	ldr	x20, [x0, #8]
    427c:	ldr	x1, [x19, #24]
    4280:	sub	x1, x1, #0x1
    4284:	str	x1, [x19, #24]
    4288:	bl	2fe0 <PyThread_free_lock@plt+0x6b0>
    428c:	ldr	x0, [x19, #8]
    4290:	bl	27b0 <PyThread_release_lock@plt>
    4294:	cbz	x20, 42a0 <PyThread_free_lock@plt+0x1970>
    4298:	mov	x0, x20
    429c:	bl	3228 <PyThread_free_lock@plt+0x8f8>
    42a0:	mov	w0, w21
    42a4:	ldp	x19, x20, [sp, #16]
    42a8:	ldr	x21, [sp, #32]
    42ac:	ldp	x29, x30, [sp], #48
    42b0:	ret
    42b4:	add	x2, x19, #0x930
    42b8:	str	x1, [x2, #16]
    42bc:	b	4270 <PyThread_free_lock@plt+0x1940>
    42c0:	ldr	x0, [x19, #2352]
    42c4:	add	x19, x19, #0x930
    42c8:	mov	x2, x20
    42cc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    42d0:	add	x1, x1, #0x3d0
    42d4:	mov	w21, #0xffffffff            	// #-1
    42d8:	bl	28c0 <PyErr_Format@plt>
    42dc:	ldr	x0, [x19, #8]
    42e0:	bl	27b0 <PyThread_release_lock@plt>
    42e4:	b	42a0 <PyThread_free_lock@plt+0x1970>
    42e8:	stp	x29, x30, [sp, #-32]!
    42ec:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    42f0:	add	x3, x3, #0x3d8
    42f4:	mov	x29, sp
    42f8:	mov	x0, x1
    42fc:	adrp	x4, 3000 <PyThread_free_lock@plt+0x6d0>
    4300:	mov	x1, x2
    4304:	add	x3, x3, #0xa0
    4308:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    430c:	add	x4, x4, #0x10
    4310:	add	x2, x2, #0x658
    4314:	add	x5, sp, #0x18
    4318:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    431c:	cbz	w0, 434c <PyThread_free_lock@plt+0x1a1c>
    4320:	ldr	x0, [sp, #24]
    4324:	bl	4208 <PyThread_free_lock@plt+0x18d8>
    4328:	cbnz	w0, 434c <PyThread_free_lock@plt+0x1a1c>
    432c:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    4330:	ldr	x1, [x1, #4048]
    4334:	mov	x0, x1
    4338:	ldr	x2, [x1]
    433c:	add	x2, x2, #0x1
    4340:	str	x2, [x1]
    4344:	ldp	x29, x30, [sp], #32
    4348:	ret
    434c:	mov	x0, #0x0                   	// #0
    4350:	ldp	x29, x30, [sp], #32
    4354:	ret
    4358:	stp	x29, x30, [sp, #-48]!
    435c:	mov	x0, #0x28                  	// #40
    4360:	mov	x29, sp
    4364:	stp	x19, x20, [sp, #16]
    4368:	bl	2910 <PyMem_Malloc@plt>
    436c:	mov	x19, x0
    4370:	cbz	x0, 4444 <PyThread_free_lock@plt+0x1b14>
    4374:	bl	2790 <PyThread_allocate_lock@plt>
    4378:	str	x0, [x19]
    437c:	cbz	x0, 446c <PyThread_free_lock@plt+0x1b3c>
    4380:	mov	x0, #0x18                  	// #24
    4384:	bl	2910 <PyMem_Malloc@plt>
    4388:	mov	x1, x0
    438c:	cbz	x0, 4490 <PyThread_free_lock@plt+0x1b60>
    4390:	stp	x21, x22, [sp, #32]
    4394:	mov	x0, #0x20                  	// #32
    4398:	stp	xzr, xzr, [x1]
    439c:	str	xzr, [x1, #16]
    43a0:	str	x1, [x19, #8]
    43a4:	bl	2910 <PyMem_Malloc@plt>
    43a8:	mov	x2, x0
    43ac:	cbz	x0, 44a8 <PyThread_free_lock@plt+0x1b78>
    43b0:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    43b4:	add	x21, x21, #0x930
    43b8:	add	x20, x21, #0x8
    43bc:	stp	xzr, xzr, [x2, #16]
    43c0:	mov	w1, #0x1                   	// #1
    43c4:	ldr	x0, [x21, #8]
    43c8:	stp	xzr, xzr, [x2]
    43cc:	str	x2, [x19, #16]
    43d0:	str	w1, [x19, #24]
    43d4:	str	xzr, [x19, #32]
    43d8:	bl	2640 <PyThread_acquire_lock@plt>
    43dc:	ldr	x22, [x20, #24]
    43e0:	tbnz	x22, #63, 44ec <PyThread_free_lock@plt+0x1bbc>
    43e4:	add	x1, x22, #0x1
    43e8:	str	x1, [x20, #24]
    43ec:	mov	x0, #0x20                  	// #32
    43f0:	bl	2910 <PyMem_Malloc@plt>
    43f4:	mov	x2, x0
    43f8:	ldr	x0, [x21, #8]
    43fc:	cbz	x2, 4454 <PyThread_free_lock@plt+0x1b24>
    4400:	ldp	x3, x1, [x20, #8]
    4404:	stp	x22, x19, [x2]
    4408:	stp	x3, xzr, [x2, #16]
    440c:	add	x1, x1, #0x1
    4410:	stp	x2, x1, [x20, #8]
    4414:	bl	27b0 <PyThread_release_lock@plt>
    4418:	mov	x3, x20
    441c:	mov	x1, x22
    4420:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4424:	mov	w5, #0x0                   	// #0
    4428:	add	x0, x0, #0x238
    442c:	mov	w4, #0x0                   	// #0
    4430:	mov	w2, #0x0                   	// #0
    4434:	bl	2d30 <PyThread_free_lock@plt+0x400>
    4438:	mov	x19, x0
    443c:	cbz	x0, 44dc <PyThread_free_lock@plt+0x1bac>
    4440:	ldp	x21, x22, [sp, #32]
    4444:	mov	x0, x19
    4448:	ldp	x19, x20, [sp, #16]
    444c:	ldp	x29, x30, [sp], #48
    4450:	ret
    4454:	bl	27b0 <PyThread_release_lock@plt>
    4458:	mov	x0, x19
    445c:	mov	x19, #0x0                   	// #0
    4460:	bl	3228 <PyThread_free_lock@plt+0x8f8>
    4464:	ldp	x21, x22, [sp, #32]
    4468:	b	4444 <PyThread_free_lock@plt+0x1b14>
    446c:	mov	x0, x19
    4470:	bl	2590 <PyMem_Free@plt>
    4474:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4478:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    447c:	mov	x19, #0x0                   	// #0
    4480:	add	x1, x1, #0x670
    4484:	ldr	x0, [x0, #2408]
    4488:	bl	2670 <PyErr_SetString@plt>
    448c:	b	4444 <PyThread_free_lock@plt+0x1b14>
    4490:	bl	2600 <PyErr_NoMemory@plt>
    4494:	str	xzr, [x19, #8]
    4498:	mov	x0, x19
    449c:	mov	x19, #0x0                   	// #0
    44a0:	bl	2590 <PyMem_Free@plt>
    44a4:	b	4444 <PyThread_free_lock@plt+0x1b14>
    44a8:	ldr	x20, [x19, #8]
    44ac:	ldr	x0, [x20, #8]
    44b0:	str	xzr, [x19, #16]
    44b4:	bl	31d0 <PyThread_free_lock@plt+0x8a0>
    44b8:	stp	xzr, xzr, [x20]
    44bc:	mov	x0, x20
    44c0:	str	xzr, [x20, #16]
    44c4:	bl	2590 <PyMem_Free@plt>
    44c8:	mov	x0, x19
    44cc:	mov	x19, #0x0                   	// #0
    44d0:	bl	2590 <PyMem_Free@plt>
    44d4:	ldp	x21, x22, [sp, #32]
    44d8:	b	4444 <PyThread_free_lock@plt+0x1b14>
    44dc:	mov	x0, x22
    44e0:	bl	4208 <PyThread_free_lock@plt+0x18d8>
    44e4:	ldp	x21, x22, [sp, #32]
    44e8:	b	4444 <PyThread_free_lock@plt+0x1b14>
    44ec:	ldr	x0, [x21, #56]
    44f0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    44f4:	add	x1, x1, #0x698
    44f8:	bl	2670 <PyErr_SetString@plt>
    44fc:	ldr	x0, [x21, #8]
    4500:	bl	27b0 <PyThread_release_lock@plt>
    4504:	b	4458 <PyThread_free_lock@plt+0x1b28>
    4508:	stp	x29, x30, [sp, #-96]!
    450c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4510:	add	x3, x3, #0x3d8
    4514:	mov	x29, sp
    4518:	mov	x0, x1
    451c:	adrp	x4, 3000 <PyThread_free_lock@plt+0x6d0>
    4520:	mov	x1, x2
    4524:	add	x3, x3, #0xb0
    4528:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    452c:	add	x4, x4, #0x10
    4530:	add	x2, x2, #0x6b8
    4534:	add	x5, sp, #0x50
    4538:	stp	x19, x20, [sp, #16]
    453c:	mov	x19, #0x0                   	// #0
    4540:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4544:	cbz	w0, 463c <PyThread_free_lock@plt+0x1d0c>
    4548:	stp	x21, x22, [sp, #32]
    454c:	ldr	x21, [sp, #80]
    4550:	bl	2800 <_PyInterpreterState_Get@plt>
    4554:	mov	x20, x0
    4558:	cbz	x0, 46d4 <PyThread_free_lock@plt+0x1da4>
    455c:	adrp	x22, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4560:	str	x23, [sp, #48]
    4564:	add	x23, x22, #0x930
    4568:	add	x2, sp, #0x58
    456c:	mov	x1, x21
    4570:	add	x0, x23, #0x10
    4574:	str	xzr, [sp, #88]
    4578:	bl	3d88 <PyThread_free_lock@plt+0x1458>
    457c:	str	x0, [sp, #72]
    4580:	mov	x19, x0
    4584:	cbz	x0, 46d0 <PyThread_free_lock@plt+0x1da0>
    4588:	mov	x0, x20
    458c:	bl	2680 <PyInterpreterState_GetID@plt>
    4590:	mov	x20, x0
    4594:	mov	w1, #0x1                   	// #1
    4598:	ldr	x0, [x19]
    459c:	bl	2640 <PyThread_acquire_lock@plt>
    45a0:	ldr	w0, [x19, #24]
    45a4:	cbz	w0, 46ec <PyThread_free_lock@plt+0x1dbc>
    45a8:	ldr	x0, [x19, #16]
    45ac:	mov	x1, x20
    45b0:	mov	w2, #0x0                   	// #0
    45b4:	bl	30f0 <PyThread_free_lock@plt+0x7c0>
    45b8:	cbnz	w0, 4660 <PyThread_free_lock@plt+0x1d30>
    45bc:	ldr	x1, [x19, #8]
    45c0:	ldr	x0, [x1, #8]
    45c4:	cbz	x0, 464c <PyThread_free_lock@plt+0x1d1c>
    45c8:	ldr	x2, [x0, #8]
    45cc:	str	x2, [x1, #8]
    45d0:	ldr	x2, [x1, #16]
    45d4:	cmp	x0, x2
    45d8:	b.eq	4700 <PyThread_free_lock@plt+0x1dd0>  // b.none
    45dc:	ldr	x2, [x1]
    45e0:	ldr	x20, [x0]
    45e4:	sub	x2, x2, #0x1
    45e8:	str	x2, [x1]
    45ec:	stp	xzr, xzr, [x0]
    45f0:	bl	2590 <PyMem_Free@plt>
    45f4:	cbz	x20, 464c <PyThread_free_lock@plt+0x1d1c>
    45f8:	ldr	x0, [x19]
    45fc:	bl	27b0 <PyThread_release_lock@plt>
    4600:	ldr	x0, [x19, #8]
    4604:	ldr	x0, [x0]
    4608:	cbz	x0, 4714 <PyThread_free_lock@plt+0x1de4>
    460c:	ldr	x0, [sp, #88]
    4610:	bl	27b0 <PyThread_release_lock@plt>
    4614:	mov	x0, x20
    4618:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    461c:	mov	x19, x0
    4620:	cbz	x0, 4708 <PyThread_free_lock@plt+0x1dd8>
    4624:	mov	x0, x20
    4628:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    462c:	mov	x0, x20
    4630:	bl	2590 <PyMem_Free@plt>
    4634:	ldp	x21, x22, [sp, #32]
    4638:	ldr	x23, [sp, #48]
    463c:	mov	x0, x19
    4640:	ldp	x19, x20, [sp, #16]
    4644:	ldp	x29, x30, [sp], #96
    4648:	ret
    464c:	bl	2730 <PyErr_Occurred@plt>
    4650:	cbnz	x0, 4660 <PyThread_free_lock@plt+0x1d30>
    4654:	ldr	x0, [x19, #32]
    4658:	cbz	x0, 4660 <PyThread_free_lock@plt+0x1d30>
    465c:	str	wzr, [x19, #24]
    4660:	ldr	x0, [x19]
    4664:	bl	27b0 <PyThread_release_lock@plt>
    4668:	ldr	x0, [x19, #8]
    466c:	ldr	x0, [x0]
    4670:	cbnz	x0, 4698 <PyThread_free_lock@plt+0x1d68>
    4674:	ldr	x0, [x19, #32]
    4678:	cbz	x0, 4698 <PyThread_free_lock@plt+0x1d68>
    467c:	ldr	x20, [x0]
    4680:	add	x1, x19, #0x20
    4684:	mov	x0, x19
    4688:	bl	2fa0 <PyThread_free_lock@plt+0x670>
    468c:	mov	x0, x19
    4690:	str	xzr, [x20, #8]
    4694:	bl	3228 <PyThread_free_lock@plt+0x8f8>
    4698:	ldr	x0, [sp, #88]
    469c:	bl	27b0 <PyThread_release_lock@plt>
    46a0:	bl	2730 <PyErr_Occurred@plt>
    46a4:	mov	x19, x0
    46a8:	cbnz	x0, 46d0 <PyThread_free_lock@plt+0x1da0>
    46ac:	add	x22, x22, #0x930
    46b0:	mov	x2, x21
    46b4:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    46b8:	add	x1, x1, #0x6c8
    46bc:	ldr	x0, [x22, #64]
    46c0:	bl	28c0 <PyErr_Format@plt>
    46c4:	ldp	x21, x22, [sp, #32]
    46c8:	ldr	x23, [sp, #48]
    46cc:	b	463c <PyThread_free_lock@plt+0x1d0c>
    46d0:	ldr	x23, [sp, #48]
    46d4:	mov	x19, #0x0                   	// #0
    46d8:	mov	x0, x19
    46dc:	ldp	x19, x20, [sp, #16]
    46e0:	ldp	x21, x22, [sp, #32]
    46e4:	ldp	x29, x30, [sp], #96
    46e8:	ret
    46ec:	ldr	x0, [x23, #40]
    46f0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    46f4:	add	x1, x1, #0x5d0
    46f8:	bl	2670 <PyErr_SetString@plt>
    46fc:	b	4660 <PyThread_free_lock@plt+0x1d30>
    4700:	str	xzr, [x1, #16]
    4704:	b	45dc <PyThread_free_lock@plt+0x1cac>
    4708:	ldp	x21, x22, [sp, #32]
    470c:	ldr	x23, [sp, #48]
    4710:	b	463c <PyThread_free_lock@plt+0x1d0c>
    4714:	ldr	x0, [x19, #32]
    4718:	cbz	x0, 460c <PyThread_free_lock@plt+0x1cdc>
    471c:	ldr	x21, [x0]
    4720:	add	x1, x19, #0x20
    4724:	mov	x0, x19
    4728:	bl	2fa0 <PyThread_free_lock@plt+0x670>
    472c:	mov	x0, x19
    4730:	str	xzr, [x21, #8]
    4734:	bl	3228 <PyThread_free_lock@plt+0x8f8>
    4738:	b	460c <PyThread_free_lock@plt+0x1cdc>
    473c:	nop
    4740:	stp	x29, x30, [sp, #-64]!
    4744:	mov	x29, sp
    4748:	stp	x21, x22, [sp, #32]
    474c:	mov	x22, x0
    4750:	ldr	x0, [x0]
    4754:	cmp	x0, #0x0
    4758:	b.le	47ac <PyThread_free_lock@plt+0x1e7c>
    475c:	mov	x21, #0x0                   	// #0
    4760:	stp	x19, x20, [sp, #16]
    4764:	mov	x19, #0x0                   	// #0
    4768:	str	x23, [sp, #48]
    476c:	nop
    4770:	ldr	x20, [x22, #8]
    4774:	add	x21, x21, #0x1
    4778:	add	x23, x20, x19
    477c:	ldr	x0, [x20, x19]
    4780:	cbz	x0, 478c <PyThread_free_lock@plt+0x1e5c>
    4784:	bl	2590 <PyMem_Free@plt>
    4788:	str	xzr, [x20, x19]
    478c:	add	x0, x23, #0x8
    4790:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4794:	ldr	x0, [x22]
    4798:	add	x19, x19, #0x30
    479c:	cmp	x0, x21
    47a0:	b.gt	4770 <PyThread_free_lock@plt+0x1e40>
    47a4:	ldp	x19, x20, [sp, #16]
    47a8:	ldr	x23, [sp, #48]
    47ac:	ldr	x0, [x22, #8]
    47b0:	bl	2590 <PyMem_Free@plt>
    47b4:	mov	x0, x22
    47b8:	ldp	x21, x22, [sp, #32]
    47bc:	ldp	x29, x30, [sp], #64
    47c0:	b	2590 <PyMem_Free@plt>
    47c4:	nop
    47c8:	sub	sp, sp, #0x70
    47cc:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    47d0:	add	x0, sp, #0x5c
    47d4:	add	x3, x3, #0x3d8
    47d8:	adrp	x4, 3000 <PyThread_free_lock@plt+0x6d0>
    47dc:	add	x3, x3, #0xc0
    47e0:	stp	x29, x30, [sp, #16]
    47e4:	add	x29, sp, #0x10
    47e8:	add	x4, x4, #0x10
    47ec:	add	x7, sp, #0x58
    47f0:	str	x0, [sp]
    47f4:	add	x6, sp, #0x54
    47f8:	mov	x0, x1
    47fc:	add	x5, sp, #0x60
    4800:	mov	x1, x2
    4804:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4808:	add	x2, x2, #0x6e0
    480c:	stp	wzr, wzr, [sp, #84]
    4810:	str	wzr, [sp, #92]
    4814:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4818:	cbz	w0, 4980 <PyThread_free_lock@plt+0x2050>
    481c:	stp	x19, x20, [sp, #32]
    4820:	stp	x23, x24, [sp, #64]
    4824:	ldp	w20, w23, [sp, #84]
    4828:	stp	x21, x22, [sp, #48]
    482c:	orr	w0, w20, w23
    4830:	cbz	w0, 4934 <PyThread_free_lock@plt+0x2004>
    4834:	ldr	x19, [sp, #96]
    4838:	bl	2800 <_PyInterpreterState_Get@plt>
    483c:	mov	x21, x0
    4840:	cbz	x0, 49f8 <PyThread_free_lock@plt+0x20c8>
    4844:	adrp	x24, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4848:	add	x24, x24, #0x930
    484c:	mov	x1, x19
    4850:	add	x0, x24, #0x10
    4854:	add	x2, sp, #0x68
    4858:	str	xzr, [sp, #104]
    485c:	bl	3d88 <PyThread_free_lock@plt+0x1458>
    4860:	mov	x19, x0
    4864:	cbz	x0, 49f8 <PyThread_free_lock@plt+0x20c8>
    4868:	mov	x0, x21
    486c:	bl	2680 <PyInterpreterState_GetID@plt>
    4870:	mov	x22, x0
    4874:	mov	w1, #0x1                   	// #1
    4878:	ldr	x0, [x19]
    487c:	sub	w20, w20, w23
    4880:	bl	2640 <PyThread_acquire_lock@plt>
    4884:	ldr	w0, [x19, #24]
    4888:	cbz	w0, 49d8 <PyThread_free_lock@plt+0x20a8>
    488c:	ldr	x23, [x19, #16]
    4890:	tbnz	w20, #31, 4948 <PyThread_free_lock@plt+0x2018>
    4894:	ldr	x21, [x23, #16]
    4898:	cbnz	x21, 48ac <PyThread_free_lock@plt+0x1f7c>
    489c:	b	4a0c <PyThread_free_lock@plt+0x20dc>
    48a0:	ldr	x0, [x21]
    48a4:	cbz	x0, 49a0 <PyThread_free_lock@plt+0x2070>
    48a8:	mov	x21, x0
    48ac:	ldr	x0, [x21, #8]
    48b0:	cmp	x22, x0
    48b4:	b.ne	48a0 <PyThread_free_lock@plt+0x1f70>  // b.any
    48b8:	ldr	x0, [x23]
    48bc:	sub	x0, x0, #0x1
    48c0:	str	wzr, [x21, #16]
    48c4:	str	x0, [x23]
    48c8:	cbz	w20, 4948 <PyThread_free_lock@plt+0x2018>
    48cc:	ldr	x0, [x19, #16]
    48d0:	mov	w1, #0x1                   	// #1
    48d4:	ldr	x2, [x0]
    48d8:	cbnz	x2, 48f0 <PyThread_free_lock@plt+0x1fc0>
    48dc:	ldr	x2, [x0, #8]
    48e0:	cbnz	x2, 48f0 <PyThread_free_lock@plt+0x1fc0>
    48e4:	ldr	x2, [x0, #16]
    48e8:	mov	w1, #0x0                   	// #0
    48ec:	cbz	x2, 4990 <PyThread_free_lock@plt+0x2060>
    48f0:	ldr	x0, [x19]
    48f4:	str	w1, [x19, #24]
    48f8:	bl	27b0 <PyThread_release_lock@plt>
    48fc:	ldr	x0, [sp, #104]
    4900:	bl	27b0 <PyThread_release_lock@plt>
    4904:	adrp	x1, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    4908:	ldp	x19, x20, [sp, #32]
    490c:	ldr	x1, [x1, #4048]
    4910:	ldp	x21, x22, [sp, #48]
    4914:	mov	x0, x1
    4918:	ldr	x2, [x1]
    491c:	ldp	x23, x24, [sp, #64]
    4920:	add	x2, x2, #0x1
    4924:	str	x2, [x1]
    4928:	ldp	x29, x30, [sp, #16]
    492c:	add	sp, sp, #0x70
    4930:	ret
    4934:	mov	w0, #0x1                   	// #1
    4938:	mov	w23, w0
    493c:	mov	w20, w0
    4940:	stp	w0, w0, [sp, #84]
    4944:	b	4834 <PyThread_free_lock@plt+0x1f04>
    4948:	ldr	x20, [x23, #24]
    494c:	cbnz	x20, 4960 <PyThread_free_lock@plt+0x2030>
    4950:	b	4a28 <PyThread_free_lock@plt+0x20f8>
    4954:	ldr	x0, [x20]
    4958:	cbz	x0, 49bc <PyThread_free_lock@plt+0x208c>
    495c:	mov	x20, x0
    4960:	ldr	x0, [x20, #8]
    4964:	cmp	x22, x0
    4968:	b.ne	4954 <PyThread_free_lock@plt+0x2024>  // b.any
    496c:	ldr	x0, [x23, #8]
    4970:	sub	x0, x0, #0x1
    4974:	str	wzr, [x20, #16]
    4978:	str	x0, [x23, #8]
    497c:	b	48cc <PyThread_free_lock@plt+0x1f9c>
    4980:	mov	x0, #0x0                   	// #0
    4984:	ldp	x29, x30, [sp, #16]
    4988:	add	sp, sp, #0x70
    498c:	ret
    4990:	ldr	x0, [x0, #24]
    4994:	cmp	x0, #0x0
    4998:	cset	w1, eq  // eq = none
    499c:	b	48f0 <PyThread_free_lock@plt+0x1fc0>
    49a0:	mov	x0, x22
    49a4:	bl	2a88 <PyThread_free_lock@plt+0x158>
    49a8:	cbz	x0, 49e8 <PyThread_free_lock@plt+0x20b8>
    49ac:	str	x0, [x21]
    49b0:	mov	x21, x0
    49b4:	ldr	x0, [x23]
    49b8:	b	48c0 <PyThread_free_lock@plt+0x1f90>
    49bc:	mov	x0, x22
    49c0:	bl	2a88 <PyThread_free_lock@plt+0x158>
    49c4:	cbz	x0, 49e8 <PyThread_free_lock@plt+0x20b8>
    49c8:	str	x0, [x20]
    49cc:	mov	x20, x0
    49d0:	ldr	x0, [x23, #8]
    49d4:	b	4974 <PyThread_free_lock@plt+0x2044>
    49d8:	ldr	x0, [x24, #40]
    49dc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    49e0:	add	x1, x1, #0x490
    49e4:	bl	2670 <PyErr_SetString@plt>
    49e8:	ldr	x0, [x19]
    49ec:	bl	27b0 <PyThread_release_lock@plt>
    49f0:	ldr	x0, [sp, #104]
    49f4:	bl	27b0 <PyThread_release_lock@plt>
    49f8:	mov	x0, #0x0                   	// #0
    49fc:	ldp	x19, x20, [sp, #32]
    4a00:	ldp	x21, x22, [sp, #48]
    4a04:	ldp	x23, x24, [sp, #64]
    4a08:	b	4928 <PyThread_free_lock@plt+0x1ff8>
    4a0c:	mov	x0, x22
    4a10:	bl	2a88 <PyThread_free_lock@plt+0x158>
    4a14:	mov	x21, x0
    4a18:	cbz	x0, 49e8 <PyThread_free_lock@plt+0x20b8>
    4a1c:	str	x21, [x23, #16]
    4a20:	ldr	x0, [x23]
    4a24:	b	48c0 <PyThread_free_lock@plt+0x1f90>
    4a28:	mov	x0, x22
    4a2c:	bl	2a88 <PyThread_free_lock@plt+0x158>
    4a30:	mov	x20, x0
    4a34:	cbz	x0, 49e8 <PyThread_free_lock@plt+0x20b8>
    4a38:	str	x20, [x23, #24]
    4a3c:	ldr	x0, [x23, #8]
    4a40:	b	4974 <PyThread_free_lock@plt+0x2044>
    4a44:	nop
    4a48:	stp	x29, x30, [sp, #-192]!
    4a4c:	adrp	x3, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4a50:	add	x3, x3, #0x3d8
    4a54:	mov	x29, sp
    4a58:	mov	x0, x1
    4a5c:	add	x3, x3, #0xe8
    4a60:	mov	x1, x2
    4a64:	add	x6, sp, #0x98
    4a68:	adrp	x2, 5000 <PyThread_free_lock@plt+0x26d0>
    4a6c:	add	x5, sp, #0x90
    4a70:	add	x2, x2, #0x7a8
    4a74:	add	x4, sp, #0x88
    4a78:	stp	x19, x20, [sp, #16]
    4a7c:	str	xzr, [sp, #152]
    4a80:	bl	2570 <PyArg_ParseTupleAndKeywords@plt>
    4a84:	cbz	w0, 4cc8 <PyThread_free_lock@plt+0x2398>
    4a88:	ldr	x0, [sp, #136]
    4a8c:	bl	2550 <_PyInterpreterID_LookUp@plt>
    4a90:	mov	x20, x0
    4a94:	cbz	x0, 4cc8 <PyThread_free_lock@plt+0x2398>
    4a98:	ldr	x0, [sp, #144]
    4a9c:	add	x1, sp, #0xa0
    4aa0:	bl	28b0 <PyUnicode_AsUTF8AndSize@plt>
    4aa4:	str	x0, [sp, #120]
    4aa8:	cbz	x0, 4cc8 <PyThread_free_lock@plt+0x2398>
    4aac:	bl	2530 <strlen@plt>
    4ab0:	ldr	x1, [sp, #160]
    4ab4:	cmp	x0, x1
    4ab8:	b.ne	4ce8 <PyThread_free_lock@plt+0x23b8>  // b.any
    4abc:	mov	x0, x20
    4ac0:	stp	x23, x24, [sp, #48]
    4ac4:	ldr	x24, [sp, #152]
    4ac8:	bl	3418 <PyThread_free_lock@plt+0xae8>
    4acc:	cmp	w0, #0x0
    4ad0:	b.lt	4cc4 <PyThread_free_lock@plt+0x2394>  // b.tstop
    4ad4:	b.ne	5000 <PyThread_free_lock@plt+0x26d0>  // b.any
    4ad8:	stp	x21, x22, [sp, #32]
    4adc:	stp	x25, x26, [sp, #64]
    4ae0:	cbz	x24, 4b38 <PyThread_free_lock@plt+0x2208>
    4ae4:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    4ae8:	ldr	x0, [x0, #4048]
    4aec:	cmp	x24, x0
    4af0:	b.eq	4b38 <PyThread_free_lock@plt+0x2208>  // b.none
    4af4:	mov	x0, x24
    4af8:	bl	2540 <PyDict_Size@plt>
    4afc:	mov	x23, x0
    4b00:	cbz	x0, 4b38 <PyThread_free_lock@plt+0x2208>
    4b04:	mov	x0, #0x10                  	// #16
    4b08:	bl	2910 <PyMem_Malloc@plt>
    4b0c:	mov	x21, x0
    4b10:	cbz	x0, 4df8 <PyThread_free_lock@plt+0x24c8>
    4b14:	str	x23, [x21]
    4b18:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    4b1c:	movk	x0, #0x2aa, lsl #48
    4b20:	cmp	x23, x0
    4b24:	b.ls	4d54 <PyThread_free_lock@plt+0x2424>  // b.plast
    4b28:	str	xzr, [x21, #8]
    4b2c:	bl	2600 <PyErr_NoMemory@plt>
    4b30:	mov	x0, x21
    4b34:	bl	2590 <PyMem_Free@plt>
    4b38:	bl	2730 <PyErr_Occurred@plt>
    4b3c:	mov	x21, x0
    4b40:	cbnz	x0, 4d44 <PyThread_free_lock@plt+0x2414>
    4b44:	bl	2800 <_PyInterpreterState_Get@plt>
    4b48:	mov	x26, #0x0                   	// #0
    4b4c:	cmp	x20, x0
    4b50:	b.eq	4b64 <PyThread_free_lock@plt+0x2234>  // b.none
    4b54:	mov	x0, x20
    4b58:	bl	2560 <PyInterpreterState_ThreadHead@plt>
    4b5c:	bl	2920 <PyThreadState_Swap@plt>
    4b60:	mov	x26, x0
    4b64:	mov	x0, x20
    4b68:	stp	xzr, xzr, [sp, #168]
    4b6c:	str	xzr, [sp, #184]
    4b70:	bl	2660 <_PyInterpreterState_GetMainModule@plt>
    4b74:	mov	x19, x0
    4b78:	cbz	x0, 4e34 <PyThread_free_lock@plt+0x2504>
    4b7c:	bl	28d0 <PyModule_GetDict@plt>
    4b80:	mov	x22, x0
    4b84:	ldr	x1, [x19]
    4b88:	sub	x0, x1, #0x1
    4b8c:	str	x0, [x19]
    4b90:	cbz	x0, 4d14 <PyThread_free_lock@plt+0x23e4>
    4b94:	cbz	x22, 4e34 <PyThread_free_lock@plt+0x2504>
    4b98:	ldr	x0, [x22]
    4b9c:	add	x0, x0, #0x1
    4ba0:	str	x0, [x22]
    4ba4:	cbz	x21, 4c38 <PyThread_free_lock@plt+0x2308>
    4ba8:	ldr	x0, [x21]
    4bac:	cmp	x0, #0x0
    4bb0:	b.le	4c38 <PyThread_free_lock@plt+0x2308>
    4bb4:	mov	x23, #0x0                   	// #0
    4bb8:	mov	x24, #0x0                   	// #0
    4bbc:	stp	x27, x28, [sp, #80]
    4bc0:	add	x24, x24, #0x1
    4bc4:	ldr	x0, [x21, #8]
    4bc8:	add	x20, x0, x23
    4bcc:	ldr	x0, [x0, x23]
    4bd0:	add	x23, x23, #0x30
    4bd4:	bl	2840 <PyUnicode_FromString@plt>
    4bd8:	mov	x19, x0
    4bdc:	add	x0, x20, #0x8
    4be0:	cbz	x19, 4e20 <PyThread_free_lock@plt+0x24f0>
    4be4:	bl	25a0 <_PyCrossInterpreterData_NewObject@plt>
    4be8:	mov	x20, x0
    4bec:	mov	x1, x19
    4bf0:	mov	x0, x22
    4bf4:	cbz	x20, 4e10 <PyThread_free_lock@plt+0x24e0>
    4bf8:	mov	x2, x20
    4bfc:	bl	2870 <PyDict_SetItem@plt>
    4c00:	ldr	x1, [x19]
    4c04:	mov	w27, w0
    4c08:	sub	x0, x1, #0x1
    4c0c:	str	x0, [x19]
    4c10:	cbz	x0, 4d38 <PyThread_free_lock@plt+0x2408>
    4c14:	ldr	x1, [x20]
    4c18:	sub	x1, x1, #0x1
    4c1c:	str	x1, [x20]
    4c20:	cbz	x1, 4cdc <PyThread_free_lock@plt+0x23ac>
    4c24:	cbnz	w27, 4e20 <PyThread_free_lock@plt+0x24f0>
    4c28:	ldr	x0, [x21]
    4c2c:	cmp	x24, x0
    4c30:	b.lt	4bc0 <PyThread_free_lock@plt+0x2290>  // b.tstop
    4c34:	ldp	x27, x28, [sp, #80]
    4c38:	mov	w1, #0x101                 	// #257
    4c3c:	ldr	x0, [sp, #120]
    4c40:	mov	x3, x22
    4c44:	mov	x2, x22
    4c48:	mov	x4, #0x0                   	// #0
    4c4c:	bl	2760 <PyRun_StringFlags@plt>
    4c50:	mov	x19, x0
    4c54:	ldr	x1, [x22]
    4c58:	sub	x0, x1, #0x1
    4c5c:	str	x0, [x22]
    4c60:	cbz	x0, 4d20 <PyThread_free_lock@plt+0x23f0>
    4c64:	cbz	x19, 4e34 <PyThread_free_lock@plt+0x2504>
    4c68:	ldr	x0, [x19]
    4c6c:	sub	x0, x0, #0x1
    4c70:	str	x0, [x19]
    4c74:	cbz	x0, 4d2c <PyThread_free_lock@plt+0x23fc>
    4c78:	cbz	x26, 4c84 <PyThread_free_lock@plt+0x2354>
    4c7c:	mov	x0, x26
    4c80:	bl	2920 <PyThreadState_Swap@plt>
    4c84:	cbz	x21, 4c90 <PyThread_free_lock@plt+0x2360>
    4c88:	mov	x0, x21
    4c8c:	bl	4740 <PyThread_free_lock@plt+0x1e10>
    4c90:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    4c94:	ldp	x21, x22, [sp, #32]
    4c98:	ldr	x0, [x0, #4048]
    4c9c:	ldp	x23, x24, [sp, #48]
    4ca0:	mov	x19, x0
    4ca4:	ldr	x1, [x0]
    4ca8:	ldp	x25, x26, [sp, #64]
    4cac:	add	x1, x1, #0x1
    4cb0:	str	x1, [x0]
    4cb4:	mov	x0, x19
    4cb8:	ldp	x19, x20, [sp, #16]
    4cbc:	ldp	x29, x30, [sp], #192
    4cc0:	ret
    4cc4:	ldp	x23, x24, [sp, #48]
    4cc8:	mov	x19, #0x0                   	// #0
    4ccc:	mov	x0, x19
    4cd0:	ldp	x19, x20, [sp, #16]
    4cd4:	ldp	x29, x30, [sp], #192
    4cd8:	ret
    4cdc:	mov	x0, x20
    4ce0:	bl	25e0 <_Py_Dealloc@plt>
    4ce4:	b	4c24 <PyThread_free_lock@plt+0x22f4>
    4ce8:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    4cec:	mov	x19, #0x0                   	// #0
    4cf0:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4cf4:	add	x1, x1, #0x7b8
    4cf8:	ldr	x0, [x0, #4016]
    4cfc:	ldr	x0, [x0]
    4d00:	bl	2670 <PyErr_SetString@plt>
    4d04:	mov	x0, x19
    4d08:	ldp	x19, x20, [sp, #16]
    4d0c:	ldp	x29, x30, [sp], #192
    4d10:	ret
    4d14:	mov	x0, x19
    4d18:	bl	25e0 <_Py_Dealloc@plt>
    4d1c:	b	4b94 <PyThread_free_lock@plt+0x2264>
    4d20:	mov	x0, x22
    4d24:	bl	25e0 <_Py_Dealloc@plt>
    4d28:	b	4c64 <PyThread_free_lock@plt+0x2334>
    4d2c:	mov	x0, x19
    4d30:	bl	25e0 <_Py_Dealloc@plt>
    4d34:	b	4c78 <PyThread_free_lock@plt+0x2348>
    4d38:	mov	x0, x19
    4d3c:	bl	25e0 <_Py_Dealloc@plt>
    4d40:	b	4c14 <PyThread_free_lock@plt+0x22e4>
    4d44:	ldp	x21, x22, [sp, #32]
    4d48:	ldp	x23, x24, [sp, #48]
    4d4c:	ldp	x25, x26, [sp, #64]
    4d50:	b	4cc8 <PyThread_free_lock@plt+0x2398>
    4d54:	add	x0, x23, x23, lsl #1
    4d58:	stp	x27, x28, [sp, #80]
    4d5c:	lsl	x0, x0, #4
    4d60:	bl	2910 <PyMem_Malloc@plt>
    4d64:	str	x0, [x21, #8]
    4d68:	cbz	x0, 50b8 <PyThread_free_lock@plt+0x2788>
    4d6c:	add	x0, sp, #0xb0
    4d70:	add	x28, sp, #0xb8
    4d74:	mov	x19, #0x0                   	// #0
    4d78:	mov	x22, #0x0                   	// #0
    4d7c:	str	x0, [sp, #112]
    4d80:	add	x0, sp, #0xa8
    4d84:	str	x0, [sp, #104]
    4d88:	str	xzr, [sp, #168]
    4d8c:	b	4dd0 <PyThread_free_lock@plt+0x24a0>
    4d90:	ldp	x0, x26, [sp, #176]
    4d94:	ldr	x27, [x21, #8]
    4d98:	add	x25, x27, x19
    4d9c:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    4da0:	str	x0, [x27, x19]
    4da4:	mov	x2, x0
    4da8:	add	x1, x25, #0x8
    4dac:	mov	x0, x26
    4db0:	cbz	x2, 4de8 <PyThread_free_lock@plt+0x24b8>
    4db4:	str	x1, [sp, #96]
    4db8:	bl	26d0 <_PyObject_GetCrossInterpreterData@plt>
    4dbc:	ldr	x1, [sp, #96]
    4dc0:	cbnz	w0, 4fd4 <PyThread_free_lock@plt+0x26a4>
    4dc4:	cmp	x23, x22
    4dc8:	add	x19, x19, #0x30
    4dcc:	b.le	4de8 <PyThread_free_lock@plt+0x24b8>
    4dd0:	ldp	x1, x2, [sp, #104]
    4dd4:	add	x22, x22, #0x1
    4dd8:	mov	x3, x28
    4ddc:	mov	x0, x24
    4de0:	bl	27d0 <PyDict_Next@plt>
    4de4:	cbnz	w0, 4d90 <PyThread_free_lock@plt+0x2460>
    4de8:	bl	2730 <PyErr_Occurred@plt>
    4dec:	cbnz	x0, 4e00 <PyThread_free_lock@plt+0x24d0>
    4df0:	ldp	x27, x28, [sp, #80]
    4df4:	b	4b44 <PyThread_free_lock@plt+0x2214>
    4df8:	bl	2600 <PyErr_NoMemory@plt>
    4dfc:	b	4b38 <PyThread_free_lock@plt+0x2208>
    4e00:	mov	x0, x21
    4e04:	bl	4740 <PyThread_free_lock@plt+0x1e10>
    4e08:	ldp	x27, x28, [sp, #80]
    4e0c:	b	4b38 <PyThread_free_lock@plt+0x2208>
    4e10:	ldr	x0, [x19]
    4e14:	sub	x0, x0, #0x1
    4e18:	str	x0, [x19]
    4e1c:	cbz	x0, 4ff4 <PyThread_free_lock@plt+0x26c4>
    4e20:	ldr	x0, [x22]
    4e24:	sub	x0, x0, #0x1
    4e28:	str	x0, [x22]
    4e2c:	cbz	x0, 50a8 <PyThread_free_lock@plt+0x2778>
    4e30:	ldp	x27, x28, [sp, #80]
    4e34:	add	x2, sp, #0xb8
    4e38:	add	x1, sp, #0xb0
    4e3c:	add	x0, sp, #0xa8
    4e40:	bl	2820 <PyErr_Fetch@plt>
    4e44:	mov	x0, #0x10                  	// #16
    4e48:	ldp	x20, x22, [sp, #168]
    4e4c:	bl	2910 <PyMem_Malloc@plt>
    4e50:	mov	x19, x0
    4e54:	cbz	x0, 50e8 <PyThread_free_lock@plt+0x27b8>
    4e58:	stp	xzr, xzr, [x19]
    4e5c:	mov	x1, x20
    4e60:	adrp	x23, 5000 <PyThread_free_lock@plt+0x26d0>
    4e64:	add	x0, x23, #0x7e8
    4e68:	bl	24f0 <PyUnicode_FromFormat@plt>
    4e6c:	mov	x20, x0
    4e70:	cbz	x0, 5034 <PyThread_free_lock@plt+0x2704>
    4e74:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    4e78:	ldr	x1, [x20]
    4e7c:	str	x0, [x19]
    4e80:	sub	x1, x1, #0x1
    4e84:	str	x1, [x20]
    4e88:	cbz	x1, 4f88 <PyThread_free_lock@plt+0x2658>
    4e8c:	cbz	x0, 50cc <PyThread_free_lock@plt+0x279c>
    4e90:	cbz	x22, 4ec4 <PyThread_free_lock@plt+0x2594>
    4e94:	mov	x1, x22
    4e98:	add	x0, x23, #0x7e8
    4e9c:	bl	24f0 <PyUnicode_FromFormat@plt>
    4ea0:	mov	x20, x0
    4ea4:	cbz	x0, 50c0 <PyThread_free_lock@plt+0x2790>
    4ea8:	bl	2ad0 <PyThread_free_lock@plt+0x1a0>
    4eac:	ldr	x1, [x20]
    4eb0:	str	x0, [x19, #8]
    4eb4:	sub	x1, x1, #0x1
    4eb8:	str	x1, [x20]
    4ebc:	cbz	x1, 4fa0 <PyThread_free_lock@plt+0x2670>
    4ec0:	cbz	x0, 50f0 <PyThread_free_lock@plt+0x27c0>
    4ec4:	ldr	x0, [sp, #168]
    4ec8:	cbz	x0, 4edc <PyThread_free_lock@plt+0x25ac>
    4ecc:	ldr	x1, [x0]
    4ed0:	sub	x1, x1, #0x1
    4ed4:	str	x1, [x0]
    4ed8:	cbz	x1, 5024 <PyThread_free_lock@plt+0x26f4>
    4edc:	ldr	x0, [sp, #176]
    4ee0:	cbz	x0, 4ef4 <PyThread_free_lock@plt+0x25c4>
    4ee4:	ldr	x1, [x0]
    4ee8:	sub	x1, x1, #0x1
    4eec:	str	x1, [x0]
    4ef0:	cbz	x1, 502c <PyThread_free_lock@plt+0x26fc>
    4ef4:	ldr	x0, [sp, #184]
    4ef8:	cbz	x0, 4f0c <PyThread_free_lock@plt+0x25dc>
    4efc:	ldr	x1, [x0]
    4f00:	sub	x1, x1, #0x1
    4f04:	str	x1, [x0]
    4f08:	cbz	x1, 4f98 <PyThread_free_lock@plt+0x2668>
    4f0c:	cbz	x19, 5058 <PyThread_free_lock@plt+0x2728>
    4f10:	cbz	x26, 4f1c <PyThread_free_lock@plt+0x25ec>
    4f14:	mov	x0, x26
    4f18:	bl	2920 <PyThreadState_Swap@plt>
    4f1c:	ldp	x2, x3, [x19]
    4f20:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    4f24:	ldr	x0, [x0, #2424]
    4f28:	cbz	x2, 4fb0 <PyThread_free_lock@plt+0x2680>
    4f2c:	cbz	x3, 4fc0 <PyThread_free_lock@plt+0x2690>
    4f30:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    4f34:	add	x1, x1, #0x828
    4f38:	bl	28c0 <PyErr_Format@plt>
    4f3c:	ldr	x0, [x19]
    4f40:	cbz	x0, 4f48 <PyThread_free_lock@plt+0x2618>
    4f44:	bl	2590 <PyMem_Free@plt>
    4f48:	ldr	x0, [x19, #8]
    4f4c:	cbz	x0, 4f54 <PyThread_free_lock@plt+0x2624>
    4f50:	bl	2590 <PyMem_Free@plt>
    4f54:	mov	x0, x19
    4f58:	bl	2590 <PyMem_Free@plt>
    4f5c:	cbz	x21, 4d44 <PyThread_free_lock@plt+0x2414>
    4f60:	mov	x0, x21
    4f64:	mov	x19, #0x0                   	// #0
    4f68:	bl	4740 <PyThread_free_lock@plt+0x1e10>
    4f6c:	mov	x0, x19
    4f70:	ldp	x19, x20, [sp, #16]
    4f74:	ldp	x21, x22, [sp, #32]
    4f78:	ldp	x23, x24, [sp, #48]
    4f7c:	ldp	x25, x26, [sp, #64]
    4f80:	ldp	x29, x30, [sp], #192
    4f84:	ret
    4f88:	mov	x0, x20
    4f8c:	bl	25e0 <_Py_Dealloc@plt>
    4f90:	ldr	x0, [x19]
    4f94:	b	4e8c <PyThread_free_lock@plt+0x255c>
    4f98:	bl	25e0 <_Py_Dealloc@plt>
    4f9c:	b	4f0c <PyThread_free_lock@plt+0x25dc>
    4fa0:	mov	x0, x20
    4fa4:	bl	25e0 <_Py_Dealloc@plt>
    4fa8:	ldr	x0, [x19, #8]
    4fac:	b	4ec0 <PyThread_free_lock@plt+0x2590>
    4fb0:	cbz	x3, 4fcc <PyThread_free_lock@plt+0x269c>
    4fb4:	mov	x1, x3
    4fb8:	bl	2670 <PyErr_SetString@plt>
    4fbc:	b	4f3c <PyThread_free_lock@plt+0x260c>
    4fc0:	mov	x1, x2
    4fc4:	bl	2670 <PyErr_SetString@plt>
    4fc8:	b	4f3c <PyThread_free_lock@plt+0x260c>
    4fcc:	bl	2690 <PyErr_SetNone@plt>
    4fd0:	b	4f3c <PyThread_free_lock@plt+0x260c>
    4fd4:	ldr	x0, [x25]
    4fd8:	cbz	x0, 4fe8 <PyThread_free_lock@plt+0x26b8>
    4fdc:	bl	2590 <PyMem_Free@plt>
    4fe0:	str	xzr, [x25]
    4fe4:	ldr	x1, [sp, #96]
    4fe8:	mov	x0, x1
    4fec:	bl	2610 <_PyCrossInterpreterData_Release@plt>
    4ff0:	b	4de8 <PyThread_free_lock@plt+0x24b8>
    4ff4:	mov	x0, x19
    4ff8:	bl	25e0 <_Py_Dealloc@plt>
    4ffc:	b	4e20 <PyThread_free_lock@plt+0x24f0>
    5000:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    5004:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5008:	mov	x19, #0x0                   	// #0
    500c:	add	x1, x1, #0x518
    5010:	ldr	x0, [x0, #4000]
    5014:	ldr	x0, [x0]
    5018:	bl	28c0 <PyErr_Format@plt>
    501c:	ldp	x23, x24, [sp, #48]
    5020:	b	4ccc <PyThread_free_lock@plt+0x239c>
    5024:	bl	25e0 <_Py_Dealloc@plt>
    5028:	b	4edc <PyThread_free_lock@plt+0x25ac>
    502c:	bl	25e0 <_Py_Dealloc@plt>
    5030:	b	4ef4 <PyThread_free_lock@plt+0x25c4>
    5034:	adrp	x20, 5000 <PyThread_free_lock@plt+0x26d0>
    5038:	add	x20, x20, #0x780
    503c:	bl	26f0 <PyErr_Clear@plt>
    5040:	ldr	x0, [x19]
    5044:	cbz	x0, 5050 <PyThread_free_lock@plt+0x2720>
    5048:	bl	2590 <PyMem_Free@plt>
    504c:	str	xzr, [x19]
    5050:	str	x20, [x19, #8]
    5054:	b	4ec4 <PyThread_free_lock@plt+0x2594>
    5058:	adrp	x3, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    505c:	mov	x2, #0x33                  	// #51
    5060:	mov	x1, #0x1                   	// #1
    5064:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5068:	ldr	x3, [x3, #3976]
    506c:	add	x0, x0, #0x7f0
    5070:	ldr	x3, [x3]
    5074:	bl	27c0 <fwrite@plt>
    5078:	bl	26f0 <PyErr_Clear@plt>
    507c:	cbz	x26, 5088 <PyThread_free_lock@plt+0x2758>
    5080:	mov	x0, x26
    5084:	bl	2920 <PyThreadState_Swap@plt>
    5088:	bl	2600 <PyErr_NoMemory@plt>
    508c:	cbz	x21, 4d44 <PyThread_free_lock@plt+0x2414>
    5090:	mov	x0, x21
    5094:	bl	4740 <PyThread_free_lock@plt+0x1e10>
    5098:	ldp	x21, x22, [sp, #32]
    509c:	ldp	x23, x24, [sp, #48]
    50a0:	ldp	x25, x26, [sp, #64]
    50a4:	b	4ccc <PyThread_free_lock@plt+0x239c>
    50a8:	mov	x0, x22
    50ac:	bl	25e0 <_Py_Dealloc@plt>
    50b0:	ldp	x27, x28, [sp, #80]
    50b4:	b	4e34 <PyThread_free_lock@plt+0x2504>
    50b8:	ldp	x27, x28, [sp, #80]
    50bc:	b	4b2c <PyThread_free_lock@plt+0x21fc>
    50c0:	adrp	x20, 5000 <PyThread_free_lock@plt+0x26d0>
    50c4:	add	x20, x20, #0x6f8
    50c8:	b	503c <PyThread_free_lock@plt+0x270c>
    50cc:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    50d0:	adrp	x20, 5000 <PyThread_free_lock@plt+0x26d0>
    50d4:	add	x20, x20, #0x720
    50d8:	ldr	x0, [x0, #4008]
    50dc:	ldr	x0, [x0]
    50e0:	bl	26a0 <PyErr_ExceptionMatches@plt>
    50e4:	b	503c <PyThread_free_lock@plt+0x270c>
    50e8:	bl	2600 <PyErr_NoMemory@plt>
    50ec:	b	4ec4 <PyThread_free_lock@plt+0x2594>
    50f0:	adrp	x0, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    50f4:	adrp	x20, 5000 <PyThread_free_lock@plt+0x26d0>
    50f8:	add	x20, x20, #0x750
    50fc:	ldr	x0, [x0, #4008]
    5100:	ldr	x0, [x0]
    5104:	bl	26a0 <PyErr_ExceptionMatches@plt>
    5108:	b	503c <PyThread_free_lock@plt+0x270c>
    510c:	nop

0000000000005110 <PyInit__xxsubinterpreters@@Base>:
    5110:	stp	x29, x30, [sp, #-64]!
    5114:	mov	x29, sp
    5118:	stp	x19, x20, [sp, #16]
    511c:	stp	x21, x22, [sp, #32]
    5120:	adrp	x21, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    5124:	add	x20, x21, #0x930
    5128:	ldr	x0, [x20, #8]
    512c:	cbz	x0, 535c <PyInit__xxsubinterpreters@@Base+0x24c>
    5130:	add	x22, x21, #0x930
    5134:	stp	x23, x24, [sp, #48]
    5138:	adrp	x23, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    513c:	add	x0, x23, #0x238
    5140:	stp	xzr, xzr, [x22, #16]
    5144:	str	xzr, [x22, #32]
    5148:	bl	26c0 <PyType_Ready@plt>
    514c:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    5150:	adrp	x0, 18000 <PyInit__xxsubinterpreters@@Base+0x12ef0>
    5154:	add	x0, x0, #0x3d8
    5158:	add	x0, x0, #0x108
    515c:	mov	w1, #0x3f5                 	// #1013
    5160:	bl	2740 <PyModule_Create2@plt>
    5164:	mov	x19, x0
    5168:	cbz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    516c:	bl	28d0 <PyModule_GetDict@plt>
    5170:	adrp	x24, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    5174:	ldr	x1, [x22, #72]
    5178:	mov	x20, x0
    517c:	cbz	x1, 5308 <PyInit__xxsubinterpreters@@Base+0x1f8>
    5180:	ldr	x24, [x24, #4000]
    5184:	add	x22, x21, #0x930
    5188:	mov	x2, #0x0                   	// #0
    518c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5190:	add	x0, x0, #0x860
    5194:	ldr	x1, [x24]
    5198:	bl	26e0 <PyErr_NewException@plt>
    519c:	str	x0, [x22, #56]
    51a0:	mov	x2, x0
    51a4:	cbz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    51a8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    51ac:	mov	x0, x20
    51b0:	add	x1, x1, #0x8b8
    51b4:	bl	2510 <PyDict_SetItemString@plt>
    51b8:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    51bc:	ldr	x1, [x22, #56]
    51c0:	mov	x2, #0x0                   	// #0
    51c4:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    51c8:	add	x0, x0, #0x8c8
    51cc:	bl	26e0 <PyErr_NewException@plt>
    51d0:	str	x0, [x21, #2352]
    51d4:	mov	x2, x0
    51d8:	cbz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    51dc:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    51e0:	mov	x0, x20
    51e4:	add	x1, x1, #0x8f0
    51e8:	bl	2510 <PyDict_SetItemString@plt>
    51ec:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    51f0:	ldr	x1, [x22, #56]
    51f4:	mov	x2, #0x0                   	// #0
    51f8:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    51fc:	add	x0, x0, #0x908
    5200:	bl	26e0 <PyErr_NewException@plt>
    5204:	str	x0, [x22, #40]
    5208:	mov	x2, x0
    520c:	cbz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    5210:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5214:	mov	x0, x20
    5218:	add	x1, x1, #0x930
    521c:	bl	2510 <PyDict_SetItemString@plt>
    5220:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    5224:	ldr	x1, [x22, #56]
    5228:	mov	x2, #0x0                   	// #0
    522c:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5230:	add	x0, x0, #0x948
    5234:	bl	26e0 <PyErr_NewException@plt>
    5238:	str	x0, [x22, #64]
    523c:	mov	x2, x0
    5240:	cbz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    5244:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5248:	mov	x0, x20
    524c:	add	x1, x1, #0x970
    5250:	bl	2510 <PyDict_SetItemString@plt>
    5254:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    5258:	ldr	x1, [x22, #56]
    525c:	mov	x2, #0x0                   	// #0
    5260:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5264:	add	x0, x0, #0x988
    5268:	bl	26e0 <PyErr_NewException@plt>
    526c:	str	x0, [x22, #48]
    5270:	mov	x2, x0
    5274:	cbz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    5278:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    527c:	mov	x0, x20
    5280:	add	x1, x1, #0x9b0
    5284:	bl	2510 <PyDict_SetItemString@plt>
    5288:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    528c:	ldr	x0, [x23, #568]
    5290:	add	x21, x23, #0x238
    5294:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5298:	mov	x2, x21
    529c:	add	x0, x0, #0x1
    52a0:	add	x1, x1, #0x9c8
    52a4:	str	x0, [x23, #568]
    52a8:	mov	x0, x20
    52ac:	bl	2510 <PyDict_SetItemString@plt>
    52b0:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    52b4:	adrp	x2, 17000 <PyInit__xxsubinterpreters@@Base+0x11ef0>
    52b8:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    52bc:	mov	x0, x20
    52c0:	add	x1, x1, #0x9d8
    52c4:	ldr	x2, [x2, #3984]
    52c8:	ldr	x3, [x2]
    52cc:	add	x3, x3, #0x1
    52d0:	str	x3, [x2]
    52d4:	bl	2510 <PyDict_SetItemString@plt>
    52d8:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    52dc:	adrp	x1, 2000 <PyUnicode_FromFormat@plt-0x4f0>
    52e0:	mov	x0, x21
    52e4:	add	x1, x1, #0xa18
    52e8:	bl	2860 <_PyCrossInterpreterData_RegisterClass@plt>
    52ec:	cbnz	w0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    52f0:	mov	x0, x19
    52f4:	ldp	x19, x20, [sp, #16]
    52f8:	ldp	x21, x22, [sp, #32]
    52fc:	ldp	x23, x24, [sp, #48]
    5300:	ldp	x29, x30, [sp], #64
    5304:	ret
    5308:	ldr	x1, [x24, #4000]
    530c:	mov	x2, #0x0                   	// #0
    5310:	adrp	x0, 5000 <PyThread_free_lock@plt+0x26d0>
    5314:	add	x0, x0, #0x880
    5318:	ldr	x1, [x1]
    531c:	bl	26e0 <PyErr_NewException@plt>
    5320:	str	x0, [x22, #72]
    5324:	mov	x2, x0
    5328:	cbz	x0, 5340 <PyInit__xxsubinterpreters@@Base+0x230>
    532c:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5330:	mov	x0, x20
    5334:	add	x1, x1, #0x8a8
    5338:	bl	2510 <PyDict_SetItemString@plt>
    533c:	cbz	w0, 5180 <PyInit__xxsubinterpreters@@Base+0x70>
    5340:	ldp	x23, x24, [sp, #48]
    5344:	mov	x19, #0x0                   	// #0
    5348:	mov	x0, x19
    534c:	ldp	x19, x20, [sp, #16]
    5350:	ldp	x21, x22, [sp, #32]
    5354:	ldp	x29, x30, [sp], #64
    5358:	ret
    535c:	bl	2790 <PyThread_allocate_lock@plt>
    5360:	str	x0, [x20, #8]
    5364:	mov	x19, x0
    5368:	cbnz	x0, 5130 <PyInit__xxsubinterpreters@@Base+0x20>
    536c:	ldr	x0, [x20, #56]
    5370:	adrp	x1, 5000 <PyThread_free_lock@plt+0x26d0>
    5374:	add	x1, x1, #0x830
    5378:	bl	2670 <PyErr_SetString@plt>
    537c:	b	5348 <PyInit__xxsubinterpreters@@Base+0x238>

Disassembly of section .fini:

0000000000005380 <.fini>:
    5380:	stp	x29, x30, [sp, #-16]!
    5384:	mov	x29, sp
    5388:	ldp	x29, x30, [sp], #16
    538c:	ret
