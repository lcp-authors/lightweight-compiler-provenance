
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_random.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001138 <.init>:
    1138:	stp	x29, x30, [sp, #-16]!
    113c:	mov	x29, sp
    1140:	bl	1380 <_PyTime_GetMonotonicClock@plt+0x10>
    1144:	ldp	x29, x30, [sp], #16
    1148:	ret

Disassembly of section .plt:

0000000000001150 <memcpy@plt-0x20>:
    1150:	stp	x16, x30, [sp, #-16]!
    1154:	adrp	x16, 12000 <PyInit__random@@Base+0x10bac>
    1158:	ldr	x17, [x16, #4088]
    115c:	add	x16, x16, #0xff8
    1160:	br	x17
    1164:	nop
    1168:	nop
    116c:	nop

0000000000001170 <memcpy@plt>:
    1170:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1174:	ldr	x17, [x16]
    1178:	add	x16, x16, #0x0
    117c:	br	x17

0000000000001180 <PyMem_Free@plt>:
    1180:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1184:	ldr	x17, [x16, #8]
    1188:	add	x16, x16, #0x8
    118c:	br	x17

0000000000001190 <__cxa_finalize@plt>:
    1190:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1194:	ldr	x17, [x16, #16]
    1198:	add	x16, x16, #0x10
    119c:	br	x17

00000000000011a0 <_PyTime_GetSystemClock@plt>:
    11a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11a4:	ldr	x17, [x16, #24]
    11a8:	add	x16, x16, #0x18
    11ac:	br	x17

00000000000011b0 <_Py_Dealloc@plt>:
    11b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11b4:	ldr	x17, [x16, #32]
    11b8:	add	x16, x16, #0x20
    11bc:	br	x17

00000000000011c0 <PyErr_NoMemory@plt>:
    11c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11c4:	ldr	x17, [x16, #40]
    11c8:	add	x16, x16, #0x28
    11cc:	br	x17

00000000000011d0 <PyLong_FromSize_t@plt>:
    11d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11d4:	ldr	x17, [x16, #48]
    11d8:	add	x16, x16, #0x30
    11dc:	br	x17

00000000000011e0 <_PyLong_NumBits@plt>:
    11e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11e4:	ldr	x17, [x16, #56]
    11e8:	add	x16, x16, #0x38
    11ec:	br	x17

00000000000011f0 <getpid@plt>:
    11f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    11f4:	ldr	x17, [x16, #64]
    11f8:	add	x16, x16, #0x40
    11fc:	br	x17

0000000000001200 <PyErr_SetString@plt>:
    1200:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1204:	ldr	x17, [x16, #72]
    1208:	add	x16, x16, #0x48
    120c:	br	x17

0000000000001210 <_PyLong_FromByteArray@plt>:
    1210:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1214:	ldr	x17, [x16, #80]
    1218:	add	x16, x16, #0x50
    121c:	br	x17

0000000000001220 <PyFloat_FromDouble@plt>:
    1220:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1224:	ldr	x17, [x16, #88]
    1228:	add	x16, x16, #0x58
    122c:	br	x17

0000000000001230 <PyType_Ready@plt>:
    1230:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1234:	ldr	x17, [x16, #96]
    1238:	add	x16, x16, #0x60
    123c:	br	x17

0000000000001240 <PyLong_FromLong@plt>:
    1240:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1244:	ldr	x17, [x16, #104]
    1248:	add	x16, x16, #0x68
    124c:	br	x17

0000000000001250 <PyErr_Clear@plt>:
    1250:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1254:	ldr	x17, [x16, #112]
    1258:	add	x16, x16, #0x70
    125c:	br	x17

0000000000001260 <__gmon_start__@plt>:
    1260:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1264:	ldr	x17, [x16, #120]
    1268:	add	x16, x16, #0x78
    126c:	br	x17

0000000000001270 <PyTuple_New@plt>:
    1270:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1274:	ldr	x17, [x16, #128]
    1278:	add	x16, x16, #0x80
    127c:	br	x17

0000000000001280 <_PyArg_CheckPositional@plt>:
    1280:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1284:	ldr	x17, [x16, #136]
    1288:	add	x16, x16, #0x88
    128c:	br	x17

0000000000001290 <PyErr_Occurred@plt>:
    1290:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1294:	ldr	x17, [x16, #144]
    1298:	add	x16, x16, #0x90
    129c:	br	x17

00000000000012a0 <PyModule_Create2@plt>:
    12a0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12a4:	ldr	x17, [x16, #152]
    12a8:	add	x16, x16, #0x98
    12ac:	br	x17

00000000000012b0 <PyLong_AsLong@plt>:
    12b0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12b4:	ldr	x17, [x16, #160]
    12b8:	add	x16, x16, #0xa0
    12bc:	br	x17

00000000000012c0 <PyObject_Hash@plt>:
    12c0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12c4:	ldr	x17, [x16, #168]
    12c8:	add	x16, x16, #0xa8
    12cc:	br	x17

00000000000012d0 <PyLong_AsUnsignedLong@plt>:
    12d0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12d4:	ldr	x17, [x16, #176]
    12d8:	add	x16, x16, #0xb0
    12dc:	br	x17

00000000000012e0 <PyLong_FromUnsignedLong@plt>:
    12e0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12e4:	ldr	x17, [x16, #184]
    12e8:	add	x16, x16, #0xb8
    12ec:	br	x17

00000000000012f0 <PyModule_AddObject@plt>:
    12f0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    12f4:	ldr	x17, [x16, #192]
    12f8:	add	x16, x16, #0xc0
    12fc:	br	x17

0000000000001300 <PyType_IsSubtype@plt>:
    1300:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1304:	ldr	x17, [x16, #200]
    1308:	add	x16, x16, #0xc8
    130c:	br	x17

0000000000001310 <_PyLong_AsByteArray@plt>:
    1310:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1314:	ldr	x17, [x16, #208]
    1318:	add	x16, x16, #0xd0
    131c:	br	x17

0000000000001320 <PyTuple_Size@plt>:
    1320:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1324:	ldr	x17, [x16, #216]
    1328:	add	x16, x16, #0xd8
    132c:	br	x17

0000000000001330 <_PyOS_URandomNonblock@plt>:
    1330:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1334:	ldr	x17, [x16, #224]
    1338:	add	x16, x16, #0xe0
    133c:	br	x17

0000000000001340 <_PyArg_NoKeywords@plt>:
    1340:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1344:	ldr	x17, [x16, #232]
    1348:	add	x16, x16, #0xe8
    134c:	br	x17

0000000000001350 <_PyLong_AsInt@plt>:
    1350:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1354:	ldr	x17, [x16, #240]
    1358:	add	x16, x16, #0xf0
    135c:	br	x17

0000000000001360 <PyMem_Malloc@plt>:
    1360:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1364:	ldr	x17, [x16, #248]
    1368:	add	x16, x16, #0xf8
    136c:	br	x17

0000000000001370 <_PyTime_GetMonotonicClock@plt>:
    1370:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
    1374:	ldr	x17, [x16, #256]
    1378:	add	x16, x16, #0x100
    137c:	br	x17

Disassembly of section .text:

0000000000001380 <PyInit__random@@Base-0xd4>:
    1380:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    1384:	ldr	x0, [x0, #4040]
    1388:	cbz	x0, 1390 <_PyTime_GetMonotonicClock@plt+0x20>
    138c:	b	1260 <__gmon_start__@plt>
    1390:	ret
    1394:	nop
    1398:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    139c:	add	x0, x0, #0x3d8
    13a0:	adrp	x1, 13000 <PyInit__random@@Base+0x11bac>
    13a4:	add	x1, x1, #0x3d8
    13a8:	cmp	x1, x0
    13ac:	b.eq	13c4 <_PyTime_GetMonotonicClock@plt+0x54>  // b.none
    13b0:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    13b4:	ldr	x1, [x1, #4000]
    13b8:	cbz	x1, 13c4 <_PyTime_GetMonotonicClock@plt+0x54>
    13bc:	mov	x16, x1
    13c0:	br	x16
    13c4:	ret
    13c8:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    13cc:	add	x0, x0, #0x3d8
    13d0:	adrp	x1, 13000 <PyInit__random@@Base+0x11bac>
    13d4:	add	x1, x1, #0x3d8
    13d8:	sub	x1, x1, x0
    13dc:	lsr	x2, x1, #63
    13e0:	add	x1, x2, x1, asr #3
    13e4:	cmp	xzr, x1, asr #1
    13e8:	asr	x1, x1, #1
    13ec:	b.eq	1404 <_PyTime_GetMonotonicClock@plt+0x94>  // b.none
    13f0:	adrp	x2, 12000 <PyInit__random@@Base+0x10bac>
    13f4:	ldr	x2, [x2, #4064]
    13f8:	cbz	x2, 1404 <_PyTime_GetMonotonicClock@plt+0x94>
    13fc:	mov	x16, x2
    1400:	br	x16
    1404:	ret
    1408:	stp	x29, x30, [sp, #-32]!
    140c:	mov	x29, sp
    1410:	str	x19, [sp, #16]
    1414:	adrp	x19, 13000 <PyInit__random@@Base+0x11bac>
    1418:	ldrb	w0, [x19, #984]
    141c:	cbnz	w0, 1444 <_PyTime_GetMonotonicClock@plt+0xd4>
    1420:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    1424:	ldr	x0, [x0, #4016]
    1428:	cbz	x0, 1438 <_PyTime_GetMonotonicClock@plt+0xc8>
    142c:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    1430:	ldr	x0, [x0, #264]
    1434:	bl	1190 <__cxa_finalize@plt>
    1438:	bl	1398 <_PyTime_GetMonotonicClock@plt+0x28>
    143c:	mov	w0, #0x1                   	// #1
    1440:	strb	w0, [x19, #984]
    1444:	ldr	x19, [sp, #16]
    1448:	ldp	x29, x30, [sp], #32
    144c:	ret
    1450:	b	13c8 <_PyTime_GetMonotonicClock@plt+0x58>

0000000000001454 <PyInit__random@@Base>:
    1454:	stp	x29, x30, [sp, #-32]!
    1458:	stp	x20, x19, [sp, #16]
    145c:	mov	x29, sp
    1460:	adrp	x19, 13000 <PyInit__random@@Base+0x11bac>
    1464:	add	x19, x19, #0x110
    1468:	mov	x0, x19
    146c:	bl	1230 <PyType_Ready@plt>
    1470:	tbnz	w0, #31, 14b0 <PyInit__random@@Base+0x5c>
    1474:	adrp	x0, 13000 <PyInit__random@@Base+0x11bac>
    1478:	add	x0, x0, #0x2b0
    147c:	mov	w1, #0x3f5                 	// #1013
    1480:	bl	12a0 <PyModule_Create2@plt>
    1484:	mov	x20, x0
    1488:	cbz	x0, 14b4 <PyInit__random@@Base+0x60>
    148c:	ldr	x8, [x19]
    1490:	adrp	x1, 1000 <memcpy@plt-0x170>
    1494:	add	x1, x1, #0xd5c
    1498:	mov	x0, x20
    149c:	add	x8, x8, #0x1
    14a0:	mov	x2, x19
    14a4:	str	x8, [x19]
    14a8:	bl	12f0 <PyModule_AddObject@plt>
    14ac:	b	14b4 <PyInit__random@@Base+0x60>
    14b0:	mov	x20, xzr
    14b4:	mov	x0, x20
    14b8:	ldp	x20, x19, [sp, #16]
    14bc:	ldp	x29, x30, [sp], #32
    14c0:	ret
    14c4:	stp	x29, x30, [sp, #-32]!
    14c8:	stp	x20, x19, [sp, #16]
    14cc:	mov	x29, sp
    14d0:	adrp	x8, 13000 <PyInit__random@@Base+0x11bac>
    14d4:	add	x8, x8, #0x110
    14d8:	mov	x19, x0
    14dc:	cmp	x0, x8
    14e0:	mov	x20, x1
    14e4:	b.ne	1500 <PyInit__random@@Base+0xac>  // b.any
    14e8:	cbz	x2, 1500 <PyInit__random@@Base+0xac>
    14ec:	adrp	x0, 1000 <memcpy@plt-0x170>
    14f0:	add	x0, x0, #0xd5c
    14f4:	mov	x1, x2
    14f8:	bl	1340 <_PyArg_NoKeywords@plt>
    14fc:	cbz	w0, 1558 <PyInit__random@@Base+0x104>
    1500:	ldr	x8, [x19, #304]
    1504:	mov	x0, x19
    1508:	mov	x1, xzr
    150c:	blr	x8
    1510:	mov	x19, x0
    1514:	cbz	x0, 155c <PyInit__random@@Base+0x108>
    1518:	mov	x0, x19
    151c:	mov	x1, x20
    1520:	bl	1a80 <PyInit__random@@Base+0x62c>
    1524:	cbz	x0, 1540 <PyInit__random@@Base+0xec>
    1528:	ldr	x8, [x0]
    152c:	subs	x8, x8, #0x1
    1530:	str	x8, [x0]
    1534:	b.ne	155c <PyInit__random@@Base+0x108>  // b.any
    1538:	bl	11b0 <_Py_Dealloc@plt>
    153c:	b	155c <PyInit__random@@Base+0x108>
    1540:	ldr	x8, [x19]
    1544:	subs	x8, x8, #0x1
    1548:	str	x8, [x19]
    154c:	b.ne	1558 <PyInit__random@@Base+0x104>  // b.any
    1550:	mov	x0, x19
    1554:	bl	11b0 <_Py_Dealloc@plt>
    1558:	mov	x19, xzr
    155c:	mov	x0, x19
    1560:	ldp	x20, x19, [sp, #16]
    1564:	ldp	x29, x30, [sp], #32
    1568:	ret
    156c:	stp	x29, x30, [sp, #-32]!
    1570:	stp	x20, x19, [sp, #16]
    1574:	mov	x29, sp
    1578:	mov	x19, x0
    157c:	bl	1980 <PyInit__random@@Base+0x52c>
    1580:	lsr	w20, w0, #5
    1584:	mov	x0, x19
    1588:	bl	1980 <PyInit__random@@Base+0x52c>
    158c:	mov	x9, #0x4190000000000000    	// #4724276009111650304
    1590:	lsr	w8, w0, #6
    1594:	ucvtf	d0, w20
    1598:	fmov	d1, x9
    159c:	ldp	x20, x19, [sp, #16]
    15a0:	fmul	d0, d0, d1
    15a4:	ucvtf	d1, w8
    15a8:	mov	x8, #0x3ca0000000000000    	// #4368491638549381120
    15ac:	fadd	d0, d0, d1
    15b0:	fmov	d1, x8
    15b4:	fmul	d0, d0, d1
    15b8:	ldp	x29, x30, [sp], #32
    15bc:	b	1220 <PyFloat_FromDouble@plt>
    15c0:	stp	x29, x30, [sp, #-48]!
    15c4:	str	x21, [sp, #16]
    15c8:	stp	x20, x19, [sp, #32]
    15cc:	mov	x29, sp
    15d0:	mov	x21, x2
    15d4:	mov	x20, x1
    15d8:	cmp	x2, #0x2
    15dc:	mov	x19, x0
    15e0:	b.cc	1600 <PyInit__random@@Base+0x1ac>  // b.lo, b.ul, b.last
    15e4:	adrp	x0, 1000 <memcpy@plt-0x170>
    15e8:	add	x0, x0, #0xd63
    15ec:	mov	w3, #0x1                   	// #1
    15f0:	mov	x1, x21
    15f4:	mov	x2, xzr
    15f8:	bl	1280 <_PyArg_CheckPositional@plt>
    15fc:	cbz	w0, 162c <PyInit__random@@Base+0x1d8>
    1600:	cmp	x21, #0x1
    1604:	b.lt	1610 <PyInit__random@@Base+0x1bc>  // b.tstop
    1608:	ldr	x1, [x20]
    160c:	b	1618 <PyInit__random@@Base+0x1c4>
    1610:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    1614:	ldr	x1, [x1, #4048]
    1618:	mov	x0, x19
    161c:	ldp	x20, x19, [sp, #32]
    1620:	ldr	x21, [sp, #16]
    1624:	ldp	x29, x30, [sp], #48
    1628:	b	1a80 <PyInit__random@@Base+0x62c>
    162c:	ldp	x20, x19, [sp, #32]
    1630:	ldr	x21, [sp, #16]
    1634:	mov	x0, xzr
    1638:	ldp	x29, x30, [sp], #48
    163c:	ret
    1640:	stp	x29, x30, [sp, #-48]!
    1644:	stp	x22, x21, [sp, #16]
    1648:	stp	x20, x19, [sp, #32]
    164c:	mov	x29, sp
    1650:	mov	x20, x0
    1654:	mov	w0, #0x271                 	// #625
    1658:	bl	1270 <PyTuple_New@plt>
    165c:	mov	x19, x0
    1660:	cbz	x0, 16bc <PyInit__random@@Base+0x268>
    1664:	mov	x21, xzr
    1668:	add	x22, x20, #0x14
    166c:	ldr	w0, [x22, x21, lsl #2]
    1670:	bl	12e0 <PyLong_FromUnsignedLong@plt>
    1674:	cbz	x0, 16a0 <PyInit__random@@Base+0x24c>
    1678:	add	x8, x19, x21, lsl #3
    167c:	add	x21, x21, #0x1
    1680:	cmp	x21, #0x270
    1684:	str	x0, [x8, #24]
    1688:	b.ne	166c <PyInit__random@@Base+0x218>  // b.any
    168c:	ldrsw	x0, [x20, #16]
    1690:	bl	1240 <PyLong_FromLong@plt>
    1694:	cbz	x0, 16a0 <PyInit__random@@Base+0x24c>
    1698:	str	x0, [x19, #5016]
    169c:	b	16bc <PyInit__random@@Base+0x268>
    16a0:	ldr	x8, [x19]
    16a4:	subs	x8, x8, #0x1
    16a8:	str	x8, [x19]
    16ac:	b.ne	16b8 <PyInit__random@@Base+0x264>  // b.any
    16b0:	mov	x0, x19
    16b4:	bl	11b0 <_Py_Dealloc@plt>
    16b8:	mov	x19, xzr
    16bc:	mov	x0, x19
    16c0:	ldp	x20, x19, [sp, #32]
    16c4:	ldp	x22, x21, [sp, #16]
    16c8:	ldp	x29, x30, [sp], #48
    16cc:	ret
    16d0:	stp	x29, x30, [sp, #-64]!
    16d4:	stp	x28, x23, [sp, #16]
    16d8:	stp	x22, x21, [sp, #32]
    16dc:	stp	x20, x19, [sp, #48]
    16e0:	mov	x29, sp
    16e4:	sub	sp, sp, #0x9c0
    16e8:	ldr	x8, [x1, #8]
    16ec:	ldrb	w8, [x8, #171]
    16f0:	tbnz	w8, #2, 1708 <PyInit__random@@Base+0x2b4>
    16f4:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    16f8:	ldr	x8, [x8, #4032]
    16fc:	adrp	x1, 1000 <memcpy@plt-0x170>
    1700:	add	x1, x1, #0xd86
    1704:	b	17c8 <PyInit__random@@Base+0x374>
    1708:	mov	x19, x0
    170c:	mov	x0, x1
    1710:	mov	x20, x1
    1714:	bl	1320 <PyTuple_Size@plt>
    1718:	cmp	x0, #0x271
    171c:	b.ne	179c <PyInit__random@@Base+0x348>  // b.any
    1720:	ldr	x0, [x20, #24]
    1724:	mov	x22, xzr
    1728:	add	x21, x20, #0x20
    172c:	mov	x23, sp
    1730:	bl	12d0 <PyLong_AsUnsignedLong@plt>
    1734:	mov	x20, x0
    1738:	cmn	x0, #0x1
    173c:	b.ne	1748 <PyInit__random@@Base+0x2f4>  // b.any
    1740:	bl	1290 <PyErr_Occurred@plt>
    1744:	cbnz	x0, 17d0 <PyInit__random@@Base+0x37c>
    1748:	str	w20, [x23, x22, lsl #2]
    174c:	ldr	x0, [x21, x22, lsl #3]
    1750:	add	x22, x22, #0x1
    1754:	cmp	x22, #0x270
    1758:	b.ne	1730 <PyInit__random@@Base+0x2dc>  // b.any
    175c:	bl	12b0 <PyLong_AsLong@plt>
    1760:	cmn	x0, #0x1
    1764:	b.eq	17b0 <PyInit__random@@Base+0x35c>  // b.none
    1768:	cmp	x0, #0x271
    176c:	b.cs	17b8 <PyInit__random@@Base+0x364>  // b.hs, b.nlast
    1770:	str	w0, [x19, #16]
    1774:	add	x0, x19, #0x14
    1778:	mov	x1, sp
    177c:	mov	w2, #0x9c0                 	// #2496
    1780:	bl	1170 <memcpy@plt>
    1784:	adrp	x0, 12000 <PyInit__random@@Base+0x10bac>
    1788:	ldr	x0, [x0, #4048]
    178c:	ldr	x8, [x0]
    1790:	add	x8, x8, #0x1
    1794:	str	x8, [x0]
    1798:	b	17d4 <PyInit__random@@Base+0x380>
    179c:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    17a0:	ldr	x8, [x8, #4024]
    17a4:	adrp	x1, 1000 <memcpy@plt-0x170>
    17a8:	add	x1, x1, #0xda3
    17ac:	b	17c8 <PyInit__random@@Base+0x374>
    17b0:	bl	1290 <PyErr_Occurred@plt>
    17b4:	cbnz	x0, 17d0 <PyInit__random@@Base+0x37c>
    17b8:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    17bc:	ldr	x8, [x8, #4024]
    17c0:	adrp	x1, 1000 <memcpy@plt-0x170>
    17c4:	add	x1, x1, #0xdc2
    17c8:	ldr	x0, [x8]
    17cc:	bl	1200 <PyErr_SetString@plt>
    17d0:	mov	x0, xzr
    17d4:	add	sp, sp, #0x9c0
    17d8:	ldp	x20, x19, [sp, #48]
    17dc:	ldp	x22, x21, [sp, #32]
    17e0:	ldp	x28, x23, [sp, #16]
    17e4:	ldp	x29, x30, [sp], #64
    17e8:	ret
    17ec:	stp	x29, x30, [sp, #-96]!
    17f0:	str	x27, [sp, #16]
    17f4:	stp	x26, x25, [sp, #32]
    17f8:	stp	x24, x23, [sp, #48]
    17fc:	stp	x22, x21, [sp, #64]
    1800:	stp	x20, x19, [sp, #80]
    1804:	mov	x29, sp
    1808:	adrp	x9, 12000 <PyInit__random@@Base+0x10bac>
    180c:	ldr	x8, [x1, #8]
    1810:	ldr	x9, [x9, #4008]
    1814:	cmp	x8, x9
    1818:	b.eq	1838 <PyInit__random@@Base+0x3e4>  // b.none
    181c:	mov	x20, x1
    1820:	adrp	x1, 12000 <PyInit__random@@Base+0x10bac>
    1824:	ldr	x1, [x1, #4008]
    1828:	mov	x19, x0
    182c:	mov	x0, x8
    1830:	bl	1300 <PyType_IsSubtype@plt>
    1834:	cbz	w0, 1870 <PyInit__random@@Base+0x41c>
    1838:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    183c:	ldr	x8, [x8, #4032]
    1840:	adrp	x1, 1000 <memcpy@plt-0x170>
    1844:	add	x1, x1, #0xdd0
    1848:	ldr	x0, [x8]
    184c:	bl	1200 <PyErr_SetString@plt>
    1850:	mov	x0, xzr
    1854:	ldp	x20, x19, [sp, #80]
    1858:	ldp	x22, x21, [sp, #64]
    185c:	ldp	x24, x23, [sp, #48]
    1860:	ldp	x26, x25, [sp, #32]
    1864:	ldr	x27, [sp, #16]
    1868:	ldp	x29, x30, [sp], #96
    186c:	ret
    1870:	mov	x0, x20
    1874:	bl	1350 <_PyLong_AsInt@plt>
    1878:	cmn	w0, #0x1
    187c:	b.eq	18c0 <PyInit__random@@Base+0x46c>  // b.none
    1880:	mov	w20, w0
    1884:	cmp	w0, #0x0
    1888:	b.le	18c8 <PyInit__random@@Base+0x474>
    188c:	cmp	w20, #0x20
    1890:	b.gt	18dc <PyInit__random@@Base+0x488>
    1894:	mov	x0, x19
    1898:	bl	1980 <PyInit__random@@Base+0x52c>
    189c:	neg	w8, w20
    18a0:	ldp	x20, x19, [sp, #80]
    18a4:	ldp	x22, x21, [sp, #64]
    18a8:	ldp	x24, x23, [sp, #48]
    18ac:	ldp	x26, x25, [sp, #32]
    18b0:	ldr	x27, [sp, #16]
    18b4:	lsr	w0, w0, w8
    18b8:	ldp	x29, x30, [sp], #96
    18bc:	b	12e0 <PyLong_FromUnsignedLong@plt>
    18c0:	bl	1290 <PyErr_Occurred@plt>
    18c4:	cbnz	x0, 1850 <PyInit__random@@Base+0x3fc>
    18c8:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    18cc:	ldr	x8, [x8, #4024]
    18d0:	adrp	x1, 1000 <memcpy@plt-0x170>
    18d4:	add	x1, x1, #0xdf5
    18d8:	b	1848 <PyInit__random@@Base+0x3f4>
    18dc:	sub	w8, w20, #0x1
    18e0:	add	w9, w20, #0x1e
    18e4:	cmp	w8, #0x0
    18e8:	csel	w8, w9, w8, lt  // lt = tstop
    18ec:	asr	w24, w8, #5
    18f0:	lsl	w8, w24, #2
    18f4:	add	w8, w8, #0x4
    18f8:	sxtw	x22, w8
    18fc:	mov	x0, x22
    1900:	bl	1360 <PyMem_Malloc@plt>
    1904:	cbz	x0, 1978 <PyInit__random@@Base+0x524>
    1908:	lsl	x8, x24, #2
    190c:	mov	x21, x0
    1910:	mov	x23, xzr
    1914:	neg	w24, w20
    1918:	add	x25, x8, #0x4
    191c:	mov	w26, #0x20                  	// #32
    1920:	subs	w27, w20, #0x20
    1924:	csel	w8, w20, w26, gt
    1928:	mov	x0, x19
    192c:	add	w20, w8, w24
    1930:	bl	1980 <PyInit__random@@Base+0x52c>
    1934:	lsr	w8, w0, w20
    1938:	str	w8, [x21, x23]
    193c:	add	x23, x23, #0x4
    1940:	cmp	x25, x23
    1944:	add	w24, w24, #0x20
    1948:	mov	w20, w27
    194c:	b.ne	1920 <PyInit__random@@Base+0x4cc>  // b.any
    1950:	mov	w2, #0x1                   	// #1
    1954:	mov	x0, x21
    1958:	mov	x1, x22
    195c:	mov	w3, wzr
    1960:	bl	1210 <_PyLong_FromByteArray@plt>
    1964:	mov	x19, x0
    1968:	mov	x0, x21
    196c:	bl	1180 <PyMem_Free@plt>
    1970:	mov	x0, x19
    1974:	b	1854 <PyInit__random@@Base+0x400>
    1978:	bl	11c0 <PyErr_NoMemory@plt>
    197c:	b	1850 <PyInit__random@@Base+0x3fc>
    1980:	ldr	w9, [x0, #16]
    1984:	cmp	w9, #0x270
    1988:	b.lt	1a48 <PyInit__random@@Base+0x5f4>  // b.tstop
    198c:	ldr	w10, [x0, #20]
    1990:	adrp	x8, 2000 <PyInit__random@@Base+0xbac>
    1994:	mov	x9, xzr
    1998:	add	x8, x8, #0x78
    199c:	add	x11, x0, x9
    19a0:	and	w12, w10, #0x80000000
    19a4:	ldr	w10, [x11, #24]
    19a8:	ldr	w13, [x11, #1608]
    19ac:	add	x9, x9, #0x4
    19b0:	cmp	x9, #0x38c
    19b4:	and	x14, x10, #0x1
    19b8:	ldr	w14, [x8, x14, lsl #2]
    19bc:	and	w15, w10, #0x7ffffffe
    19c0:	orr	w12, w15, w12
    19c4:	eor	w13, w14, w13
    19c8:	eor	w12, w13, w12, lsr #1
    19cc:	str	w12, [x11, #20]
    19d0:	b.ne	199c <PyInit__random@@Base+0x548>  // b.any
    19d4:	ldr	w9, [x0, #928]
    19d8:	mov	x10, xzr
    19dc:	add	x11, x0, x10
    19e0:	and	w12, w9, #0x80000000
    19e4:	ldr	w9, [x11, #932]
    19e8:	ldr	w13, [x11, #20]
    19ec:	add	x10, x10, #0x4
    19f0:	cmp	x10, #0x630
    19f4:	and	x14, x9, #0x1
    19f8:	ldr	w14, [x8, x14, lsl #2]
    19fc:	and	w15, w9, #0x7ffffffe
    1a00:	orr	w12, w15, w12
    1a04:	eor	w13, w14, w13
    1a08:	eor	w12, w13, w12, lsr #1
    1a0c:	str	w12, [x11, #928]
    1a10:	b.ne	19dc <PyInit__random@@Base+0x588>  // b.any
    1a14:	ldr	w10, [x0, #20]
    1a18:	ldr	w11, [x0, #2512]
    1a1c:	ldr	w12, [x0, #1604]
    1a20:	mov	w9, wzr
    1a24:	and	x13, x10, #0x1
    1a28:	ldr	w8, [x8, x13, lsl #2]
    1a2c:	and	w11, w11, #0x80000000
    1a30:	and	w10, w10, #0x7ffffffe
    1a34:	orr	w10, w10, w11
    1a38:	eor	w8, w8, w12
    1a3c:	eor	w8, w8, w10, lsr #1
    1a40:	str	w8, [x0, #2512]
    1a44:	str	wzr, [x0, #16]
    1a48:	add	w8, w9, #0x1
    1a4c:	add	x9, x0, w9, sxtw #2
    1a50:	str	w8, [x0, #16]
    1a54:	ldr	w8, [x9, #20]
    1a58:	mov	w9, #0x5680                	// #22144
    1a5c:	movk	w9, #0x9d2c, lsl #16
    1a60:	eor	w8, w8, w8, lsr #11
    1a64:	and	w9, w9, w8, lsl #7
    1a68:	eor	w8, w9, w8
    1a6c:	mov	w9, #0xefc60000            	// #-272236544
    1a70:	and	w9, w9, w8, lsl #15
    1a74:	eor	w8, w9, w8
    1a78:	eor	w0, w8, w8, lsr #18
    1a7c:	ret
    1a80:	stp	x29, x30, [sp, #-80]!
    1a84:	str	x28, [sp, #16]
    1a88:	stp	x24, x23, [sp, #32]
    1a8c:	stp	x22, x21, [sp, #48]
    1a90:	stp	x20, x19, [sp, #64]
    1a94:	mov	x29, sp
    1a98:	sub	sp, sp, #0x9c0
    1a9c:	adrp	x19, 12000 <PyInit__random@@Base+0x10bac>
    1aa0:	ldr	x19, [x19, #4048]
    1aa4:	mov	x20, x0
    1aa8:	cbz	x1, 1ad8 <PyInit__random@@Base+0x684>
    1aac:	cmp	x1, x19
    1ab0:	b.eq	1ad8 <PyInit__random@@Base+0x684>  // b.none
    1ab4:	ldr	x8, [x1, #8]
    1ab8:	ldrb	w8, [x8, #171]
    1abc:	tbnz	w8, #0, 1af4 <PyInit__random@@Base+0x6a0>
    1ac0:	mov	x0, x1
    1ac4:	bl	12c0 <PyObject_Hash@plt>
    1ac8:	cmn	x0, #0x1
    1acc:	b.eq	1b3c <PyInit__random@@Base+0x6e8>  // b.none
    1ad0:	bl	11d0 <PyLong_FromSize_t@plt>
    1ad4:	b	1b0c <PyInit__random@@Base+0x6b8>
    1ad8:	mov	x0, sp
    1adc:	mov	w1, #0x9c0                 	// #2496
    1ae0:	bl	1330 <_PyOS_URandomNonblock@plt>
    1ae4:	tbnz	w0, #31, 1b48 <PyInit__random@@Base+0x6f4>
    1ae8:	mov	x1, sp
    1aec:	mov	w2, #0x270                 	// #624
    1af0:	b	1b74 <PyInit__random@@Base+0x720>
    1af4:	adrp	x8, 12000 <PyInit__random@@Base+0x10bac>
    1af8:	ldr	x8, [x8, #4056]
    1afc:	mov	x0, x1
    1b00:	ldr	x8, [x8, #96]
    1b04:	ldr	x8, [x8, #64]
    1b08:	blr	x8
    1b0c:	mov	x21, x0
    1b10:	cbz	x0, 1b3c <PyInit__random@@Base+0x6e8>
    1b14:	mov	x0, x21
    1b18:	bl	11e0 <_PyLong_NumBits@plt>
    1b1c:	cbz	x0, 1b9c <PyInit__random@@Base+0x748>
    1b20:	mov	x22, x0
    1b24:	cmn	x0, #0x1
    1b28:	b.ne	1b8c <PyInit__random@@Base+0x738>  // b.any
    1b2c:	bl	1290 <PyErr_Occurred@plt>
    1b30:	cbz	x0, 1b8c <PyInit__random@@Base+0x738>
    1b34:	mov	x22, xzr
    1b38:	b	1bf8 <PyInit__random@@Base+0x7a4>
    1b3c:	mov	x19, xzr
    1b40:	mov	x22, xzr
    1b44:	b	1c14 <PyInit__random@@Base+0x7c0>
    1b48:	bl	1250 <PyErr_Clear@plt>
    1b4c:	bl	11a0 <_PyTime_GetSystemClock@plt>
    1b50:	lsr	x8, x0, #32
    1b54:	stp	w0, w8, [sp]
    1b58:	bl	11f0 <getpid@plt>
    1b5c:	str	w0, [sp, #8]
    1b60:	bl	1370 <_PyTime_GetMonotonicClock@plt>
    1b64:	lsr	x8, x0, #32
    1b68:	mov	x1, sp
    1b6c:	mov	w2, #0x5                   	// #5
    1b70:	stp	w0, w8, [sp, #12]
    1b74:	mov	x0, x20
    1b78:	bl	1c3c <PyInit__random@@Base+0x7e8>
    1b7c:	ldr	x8, [x19]
    1b80:	add	x8, x8, #0x1
    1b84:	str	x8, [x19]
    1b88:	b	1c1c <PyInit__random@@Base+0x7c8>
    1b8c:	sub	x8, x22, #0x1
    1b90:	lsr	x8, x8, #5
    1b94:	add	x23, x8, #0x1
    1b98:	b	1ba0 <PyInit__random@@Base+0x74c>
    1b9c:	mov	w23, #0x1                   	// #1
    1ba0:	lsl	x24, x23, #2
    1ba4:	mov	x0, x24
    1ba8:	bl	1360 <PyMem_Malloc@plt>
    1bac:	mov	x22, x0
    1bb0:	cbz	x0, 1bf4 <PyInit__random@@Base+0x7a0>
    1bb4:	mov	w3, #0x1                   	// #1
    1bb8:	mov	x0, x21
    1bbc:	mov	x1, x22
    1bc0:	mov	x2, x24
    1bc4:	mov	w4, wzr
    1bc8:	bl	1310 <_PyLong_AsByteArray@plt>
    1bcc:	cmn	w0, #0x1
    1bd0:	b.eq	1bf8 <PyInit__random@@Base+0x7a4>  // b.none
    1bd4:	mov	x0, x20
    1bd8:	mov	x1, x22
    1bdc:	mov	x2, x23
    1be0:	bl	1c3c <PyInit__random@@Base+0x7e8>
    1be4:	ldr	x8, [x19]
    1be8:	add	x8, x8, #0x1
    1bec:	str	x8, [x19]
    1bf0:	b	1bfc <PyInit__random@@Base+0x7a8>
    1bf4:	bl	11c0 <PyErr_NoMemory@plt>
    1bf8:	mov	x19, xzr
    1bfc:	ldr	x8, [x21]
    1c00:	subs	x8, x8, #0x1
    1c04:	str	x8, [x21]
    1c08:	b.ne	1c14 <PyInit__random@@Base+0x7c0>  // b.any
    1c0c:	mov	x0, x21
    1c10:	bl	11b0 <_Py_Dealloc@plt>
    1c14:	mov	x0, x22
    1c18:	bl	1180 <PyMem_Free@plt>
    1c1c:	mov	x0, x19
    1c20:	add	sp, sp, #0x9c0
    1c24:	ldp	x20, x19, [sp, #64]
    1c28:	ldp	x22, x21, [sp, #48]
    1c2c:	ldp	x24, x23, [sp, #32]
    1c30:	ldr	x28, [sp, #16]
    1c34:	ldp	x29, x30, [sp], #80
    1c38:	ret
    1c3c:	mov	w8, #0xd6aa                	// #54954
    1c40:	mov	w11, #0x8965                	// #35173
    1c44:	movk	w8, #0x12b, lsl #16
    1c48:	mov	w9, #0x1                   	// #1
    1c4c:	mov	w10, #0x6                   	// #6
    1c50:	movk	w11, #0x6c07, lsl #16
    1c54:	str	w8, [x0, #20]
    1c58:	eor	w8, w8, w8, lsr #30
    1c5c:	mul	w12, w8, w11
    1c60:	add	w8, w12, w9
    1c64:	add	w12, w10, w12
    1c68:	sub	w12, w12, #0x5
    1c6c:	str	w12, [x0, x10, lsl #2]
    1c70:	add	x10, x10, #0x1
    1c74:	cmp	x10, #0x275
    1c78:	add	x9, x9, #0x1
    1c7c:	b.ne	1c58 <PyInit__random@@Base+0x804>  // b.any
    1c80:	mov	w9, #0x270                 	// #624
    1c84:	cmp	x2, #0x270
    1c88:	mov	w11, #0x660d                	// #26125
    1c8c:	mov	x10, xzr
    1c90:	mov	w8, #0x1                   	// #1
    1c94:	str	w9, [x0, #16]
    1c98:	csel	x9, x2, x9, hi  // hi = pmore
    1c9c:	movk	w11, #0x19, lsl #16
    1ca0:	add	x12, x0, x8, lsl #2
    1ca4:	ldp	w15, w14, [x12, #16]
    1ca8:	ldr	w13, [x1, x10, lsl #2]
    1cac:	add	x8, x8, #0x1
    1cb0:	cmp	x8, #0x270
    1cb4:	eor	w15, w15, w15, lsr #30
    1cb8:	mul	w15, w15, w11
    1cbc:	add	w13, w13, w10
    1cc0:	eor	w14, w15, w14
    1cc4:	add	w13, w13, w14
    1cc8:	add	x10, x10, #0x1
    1ccc:	str	w13, [x12, #20]
    1cd0:	b.cc	1ce0 <PyInit__random@@Base+0x88c>  // b.lo, b.ul, b.last
    1cd4:	ldr	w8, [x0, #2512]
    1cd8:	str	w8, [x0, #20]
    1cdc:	mov	w8, #0x1                   	// #1
    1ce0:	cmp	x10, x2
    1ce4:	csel	x10, x10, xzr, cc  // cc = lo, ul, last
    1ce8:	subs	x9, x9, #0x1
    1cec:	b.ne	1ca0 <PyInit__random@@Base+0x84c>  // b.any
    1cf0:	mov	w10, #0x8b65                	// #35685
    1cf4:	mov	x9, #0xfffffffffffffd91    	// #-623
    1cf8:	movk	w10, #0x5d58, lsl #16
    1cfc:	add	x11, x0, x8, lsl #2
    1d00:	ldp	w12, w13, [x11, #16]
    1d04:	eor	w12, w12, w12, lsr #30
    1d08:	mul	w12, w12, w10
    1d0c:	eor	w12, w12, w13
    1d10:	sub	w12, w12, w8
    1d14:	add	x8, x8, #0x1
    1d18:	cmp	x8, #0x270
    1d1c:	str	w12, [x11, #20]
    1d20:	b.cc	1d30 <PyInit__random@@Base+0x8dc>  // b.lo, b.ul, b.last
    1d24:	ldr	w8, [x0, #2512]
    1d28:	str	w8, [x0, #20]
    1d2c:	mov	w8, #0x1                   	// #1
    1d30:	adds	x9, x9, #0x1
    1d34:	b.cc	1cfc <PyInit__random@@Base+0x8a8>  // b.lo, b.ul, b.last
    1d38:	mov	w8, #0x80000000            	// #-2147483648
    1d3c:	str	w8, [x0, #20]
    1d40:	ret

Disassembly of section .fini:

0000000000001d44 <.fini>:
    1d44:	stp	x29, x30, [sp, #-16]!
    1d48:	mov	x29, sp
    1d4c:	ldp	x29, x30, [sp], #16
    1d50:	ret
