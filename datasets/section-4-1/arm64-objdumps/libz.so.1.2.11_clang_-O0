
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libz.so.1.2.11_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002368 <.init>:
    2368:	stp	x29, x30, [sp, #-16]!
    236c:	mov	x29, sp
    2370:	bl	2670 <adler32_z@plt+0x10>
    2374:	ldp	x29, x30, [sp], #16
    2378:	ret

Disassembly of section .plt:

0000000000002380 <memcpy@plt-0x20>:
    2380:	stp	x16, x30, [sp, #-16]!
    2384:	adrp	x16, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    2388:	ldr	x17, [x16, #4088]
    238c:	add	x16, x16, #0xff8
    2390:	br	x17
    2394:	nop
    2398:	nop
    239c:	nop

00000000000023a0 <memcpy@plt>:
    23a0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16]
    23a8:	add	x16, x16, #0x0
    23ac:	br	x17

00000000000023b0 <crc32_z@plt>:
    23b0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #8]
    23b8:	add	x16, x16, #0x8
    23bc:	br	x17

00000000000023c0 <gzvprintf@plt>:
    23c0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #16]
    23c8:	add	x16, x16, #0x10
    23cc:	br	x17

00000000000023d0 <gzseek64@plt>:
    23d0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #24]
    23d8:	add	x16, x16, #0x18
    23dc:	br	x17

00000000000023e0 <strlen@plt>:
    23e0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #32]
    23e8:	add	x16, x16, #0x20
    23ec:	br	x17

00000000000023f0 <inflate@plt>:
    23f0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #40]
    23f8:	add	x16, x16, #0x28
    23fc:	br	x17

0000000000002400 <gzclose_r@plt>:
    2400:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #48]
    2408:	add	x16, x16, #0x30
    240c:	br	x17

0000000000002410 <gzgetc@plt>:
    2410:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #56]
    2418:	add	x16, x16, #0x38
    241c:	br	x17

0000000000002420 <__cxa_finalize@plt>:
    2420:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #64]
    2428:	add	x16, x16, #0x40
    242c:	br	x17

0000000000002430 <crc32@plt>:
    2430:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #72]
    2438:	add	x16, x16, #0x48
    243c:	br	x17

0000000000002440 <inflateResetKeep@plt>:
    2440:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #80]
    2448:	add	x16, x16, #0x50
    244c:	br	x17

0000000000002450 <snprintf@plt>:
    2450:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #88]
    2458:	add	x16, x16, #0x58
    245c:	br	x17

0000000000002460 <malloc@plt>:
    2460:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #96]
    2468:	add	x16, x16, #0x60
    246c:	br	x17

0000000000002470 <open@plt>:
    2470:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #104]
    2478:	add	x16, x16, #0x68
    247c:	br	x17

0000000000002480 <deflateReset@plt>:
    2480:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #112]
    2488:	add	x16, x16, #0x70
    248c:	br	x17

0000000000002490 <deflate@plt>:
    2490:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #120]
    2498:	add	x16, x16, #0x78
    249c:	br	x17

00000000000024a0 <memset@plt>:
    24a0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #128]
    24a8:	add	x16, x16, #0x80
    24ac:	br	x17

00000000000024b0 <lseek64@plt>:
    24b0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #136]
    24b8:	add	x16, x16, #0x88
    24bc:	br	x17

00000000000024c0 <gztell64@plt>:
    24c0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #144]
    24c8:	add	x16, x16, #0x90
    24cc:	br	x17

00000000000024d0 <deflateInit2_@plt>:
    24d0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #152]
    24d8:	add	x16, x16, #0x98
    24dc:	br	x17

00000000000024e0 <deflateParams@plt>:
    24e0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #160]
    24e8:	add	x16, x16, #0xa0
    24ec:	br	x17

00000000000024f0 <deflateInit_@plt>:
    24f0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #168]
    24f8:	add	x16, x16, #0xa8
    24fc:	br	x17

0000000000002500 <strerror@plt>:
    2500:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #176]
    2508:	add	x16, x16, #0xb0
    250c:	br	x17

0000000000002510 <close@plt>:
    2510:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #184]
    2518:	add	x16, x16, #0xb8
    251c:	br	x17

0000000000002520 <__gmon_start__@plt>:
    2520:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #192]
    2528:	add	x16, x16, #0xc0
    252c:	br	x17

0000000000002530 <write@plt>:
    2530:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #200]
    2538:	add	x16, x16, #0xc8
    253c:	br	x17

0000000000002540 <uncompress2@plt>:
    2540:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #208]
    2548:	add	x16, x16, #0xd0
    254c:	br	x17

0000000000002550 <inflateEnd@plt>:
    2550:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #216]
    2558:	add	x16, x16, #0xd8
    255c:	br	x17

0000000000002560 <adler32@plt>:
    2560:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #224]
    2568:	add	x16, x16, #0xe0
    256c:	br	x17

0000000000002570 <free@plt>:
    2570:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #232]
    2578:	add	x16, x16, #0xe8
    257c:	br	x17

0000000000002580 <gzclose_w@plt>:
    2580:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #240]
    2588:	add	x16, x16, #0xf0
    258c:	br	x17

0000000000002590 <deflateEnd@plt>:
    2590:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #248]
    2598:	add	x16, x16, #0xf8
    259c:	br	x17

00000000000025a0 <gzrewind@plt>:
    25a0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #256]
    25a8:	add	x16, x16, #0x100
    25ac:	br	x17

00000000000025b0 <gzoffset64@plt>:
    25b0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #264]
    25b8:	add	x16, x16, #0x108
    25bc:	br	x17

00000000000025c0 <inflateInit_@plt>:
    25c0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #272]
    25c8:	add	x16, x16, #0x110
    25cc:	br	x17

00000000000025d0 <compress2@plt>:
    25d0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #280]
    25d8:	add	x16, x16, #0x118
    25dc:	br	x17

00000000000025e0 <read@plt>:
    25e0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #288]
    25e8:	add	x16, x16, #0x120
    25ec:	br	x17

00000000000025f0 <memchr@plt>:
    25f0:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #296]
    25f8:	add	x16, x16, #0x128
    25fc:	br	x17

0000000000002600 <inflateInit2_@plt>:
    2600:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #304]
    2608:	add	x16, x16, #0x130
    260c:	br	x17

0000000000002610 <inflateReset@plt>:
    2610:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #312]
    2618:	add	x16, x16, #0x138
    261c:	br	x17

0000000000002620 <vsnprintf@plt>:
    2620:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #320]
    2628:	add	x16, x16, #0x140
    262c:	br	x17

0000000000002630 <deflateResetKeep@plt>:
    2630:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #328]
    2638:	add	x16, x16, #0x148
    263c:	br	x17

0000000000002640 <inflateReset2@plt>:
    2640:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #336]
    2648:	add	x16, x16, #0x150
    264c:	br	x17

0000000000002650 <__errno_location@plt>:
    2650:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #344]
    2658:	add	x16, x16, #0x158
    265c:	br	x17

0000000000002660 <adler32_z@plt>:
    2660:	adrp	x16, 2d000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #352]
    2668:	add	x16, x16, #0x160
    266c:	br	x17

Disassembly of section .text:

0000000000002670 <adler32_z@@ZLIB_1.2.9-0xd4>:
    2670:	adrp	x0, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    2674:	ldr	x0, [x0, #4048]
    2678:	cbz	x0, 2680 <adler32_z@plt+0x20>
    267c:	b	2520 <__gmon_start__@plt>
    2680:	ret
    2684:	nop
    2688:	adrp	x0, 2d000 <gzclose_w@@ZLIB_1.2.3.5+0x14b88>
    268c:	add	x0, x0, #0x170
    2690:	adrp	x1, 2d000 <gzclose_w@@ZLIB_1.2.3.5+0x14b88>
    2694:	add	x1, x1, #0x170
    2698:	cmp	x1, x0
    269c:	b.eq	26b4 <adler32_z@plt+0x54>  // b.none
    26a0:	adrp	x1, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    26a4:	ldr	x1, [x1, #4032]
    26a8:	cbz	x1, 26b4 <adler32_z@plt+0x54>
    26ac:	mov	x16, x1
    26b0:	br	x16
    26b4:	ret
    26b8:	adrp	x0, 2d000 <gzclose_w@@ZLIB_1.2.3.5+0x14b88>
    26bc:	add	x0, x0, #0x170
    26c0:	adrp	x1, 2d000 <gzclose_w@@ZLIB_1.2.3.5+0x14b88>
    26c4:	add	x1, x1, #0x170
    26c8:	sub	x1, x1, x0
    26cc:	lsr	x2, x1, #63
    26d0:	add	x1, x2, x1, asr #3
    26d4:	cmp	xzr, x1, asr #1
    26d8:	asr	x1, x1, #1
    26dc:	b.eq	26f4 <adler32_z@plt+0x94>  // b.none
    26e0:	adrp	x2, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    26e4:	ldr	x2, [x2, #4064]
    26e8:	cbz	x2, 26f4 <adler32_z@plt+0x94>
    26ec:	mov	x16, x2
    26f0:	br	x16
    26f4:	ret
    26f8:	stp	x29, x30, [sp, #-32]!
    26fc:	mov	x29, sp
    2700:	str	x19, [sp, #16]
    2704:	adrp	x19, 2d000 <gzclose_w@@ZLIB_1.2.3.5+0x14b88>
    2708:	ldrb	w0, [x19, #368]
    270c:	cbnz	w0, 2734 <adler32_z@plt+0xd4>
    2710:	adrp	x0, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    2714:	ldr	x0, [x0, #4040]
    2718:	cbz	x0, 2728 <adler32_z@plt+0xc8>
    271c:	adrp	x0, 2d000 <gzclose_w@@ZLIB_1.2.3.5+0x14b88>
    2720:	ldr	x0, [x0, #360]
    2724:	bl	2420 <__cxa_finalize@plt>
    2728:	bl	2688 <adler32_z@plt+0x28>
    272c:	mov	w0, #0x1                   	// #1
    2730:	strb	w0, [x19, #368]
    2734:	ldr	x19, [sp, #16]
    2738:	ldp	x29, x30, [sp], #32
    273c:	ret
    2740:	b	26b8 <adler32_z@plt+0x58>

0000000000002744 <adler32_z@@ZLIB_1.2.9>:
    2744:	sub	sp, sp, #0x30
    2748:	str	x0, [sp, #32]
    274c:	str	x1, [sp, #24]
    2750:	str	x2, [sp, #16]
    2754:	ldr	x8, [sp, #32]
    2758:	lsr	x8, x8, #16
    275c:	and	x8, x8, #0xffff
    2760:	str	x8, [sp, #8]
    2764:	ldr	x8, [sp, #32]
    2768:	and	x8, x8, #0xffff
    276c:	str	x8, [sp, #32]
    2770:	ldr	x8, [sp, #16]
    2774:	cmp	x8, #0x1
    2778:	b.ne	27f8 <adler32_z@@ZLIB_1.2.9+0xb4>  // b.any
    277c:	ldr	x8, [sp, #24]
    2780:	ldrb	w9, [x8]
    2784:	mov	w8, w9
    2788:	ldr	x10, [sp, #32]
    278c:	add	x8, x10, x8
    2790:	str	x8, [sp, #32]
    2794:	ldr	x8, [sp, #32]
    2798:	mov	x10, #0xfff1                	// #65521
    279c:	cmp	x8, x10
    27a0:	b.cc	27b4 <adler32_z@@ZLIB_1.2.9+0x70>  // b.lo, b.ul, b.last
    27a4:	ldr	x8, [sp, #32]
    27a8:	mov	x9, #0xfff1                	// #65521
    27ac:	subs	x8, x8, x9
    27b0:	str	x8, [sp, #32]
    27b4:	ldr	x8, [sp, #32]
    27b8:	ldr	x9, [sp, #8]
    27bc:	add	x8, x9, x8
    27c0:	str	x8, [sp, #8]
    27c4:	ldr	x8, [sp, #8]
    27c8:	mov	x9, #0xfff1                	// #65521
    27cc:	cmp	x8, x9
    27d0:	b.cc	27e4 <adler32_z@@ZLIB_1.2.9+0xa0>  // b.lo, b.ul, b.last
    27d4:	ldr	x8, [sp, #8]
    27d8:	mov	x9, #0xfff1                	// #65521
    27dc:	subs	x8, x8, x9
    27e0:	str	x8, [sp, #8]
    27e4:	ldr	x8, [sp, #32]
    27e8:	ldr	x9, [sp, #8]
    27ec:	orr	x8, x8, x9, lsl #16
    27f0:	str	x8, [sp, #40]
    27f4:	b	2ecc <adler32_z@@ZLIB_1.2.9+0x788>
    27f8:	ldr	x8, [sp, #24]
    27fc:	cbnz	x8, 280c <adler32_z@@ZLIB_1.2.9+0xc8>
    2800:	mov	x8, #0x1                   	// #1
    2804:	str	x8, [sp, #40]
    2808:	b	2ecc <adler32_z@@ZLIB_1.2.9+0x788>
    280c:	ldr	x8, [sp, #16]
    2810:	cmp	x8, #0x10
    2814:	b.cs	28a8 <adler32_z@@ZLIB_1.2.9+0x164>  // b.hs, b.nlast
    2818:	ldr	x8, [sp, #16]
    281c:	subs	x9, x8, #0x1
    2820:	str	x9, [sp, #16]
    2824:	cbz	x8, 285c <adler32_z@@ZLIB_1.2.9+0x118>
    2828:	ldr	x8, [sp, #24]
    282c:	add	x9, x8, #0x1
    2830:	str	x9, [sp, #24]
    2834:	ldrb	w10, [x8]
    2838:	mov	w8, w10
    283c:	ldr	x9, [sp, #32]
    2840:	add	x8, x9, x8
    2844:	str	x8, [sp, #32]
    2848:	ldr	x8, [sp, #32]
    284c:	ldr	x9, [sp, #8]
    2850:	add	x8, x9, x8
    2854:	str	x8, [sp, #8]
    2858:	b	2818 <adler32_z@@ZLIB_1.2.9+0xd4>
    285c:	ldr	x8, [sp, #32]
    2860:	mov	x9, #0xfff1                	// #65521
    2864:	cmp	x8, x9
    2868:	b.cc	287c <adler32_z@@ZLIB_1.2.9+0x138>  // b.lo, b.ul, b.last
    286c:	ldr	x8, [sp, #32]
    2870:	mov	x9, #0xfff1                	// #65521
    2874:	subs	x8, x8, x9
    2878:	str	x8, [sp, #32]
    287c:	ldr	x8, [sp, #8]
    2880:	mov	x9, #0xfff1                	// #65521
    2884:	udiv	x10, x8, x9
    2888:	mul	x9, x10, x9
    288c:	subs	x8, x8, x9
    2890:	str	x8, [sp, #8]
    2894:	ldr	x8, [sp, #32]
    2898:	ldr	x9, [sp, #8]
    289c:	orr	x8, x8, x9, lsl #16
    28a0:	str	x8, [sp, #40]
    28a4:	b	2ecc <adler32_z@@ZLIB_1.2.9+0x788>
    28a8:	ldr	x8, [sp, #16]
    28ac:	mov	x9, #0x15b0                	// #5552
    28b0:	cmp	x8, x9
    28b4:	b.cc	2b9c <adler32_z@@ZLIB_1.2.9+0x458>  // b.lo, b.ul, b.last
    28b8:	ldr	x8, [sp, #16]
    28bc:	mov	x9, #0x15b0                	// #5552
    28c0:	subs	x8, x8, x9
    28c4:	str	x8, [sp, #16]
    28c8:	mov	w10, #0x15b                 	// #347
    28cc:	str	w10, [sp, #4]
    28d0:	ldr	x8, [sp, #24]
    28d4:	ldrb	w9, [x8]
    28d8:	mov	w8, w9
    28dc:	ldr	x10, [sp, #32]
    28e0:	add	x8, x10, x8
    28e4:	str	x8, [sp, #32]
    28e8:	ldr	x8, [sp, #32]
    28ec:	ldr	x10, [sp, #8]
    28f0:	add	x8, x10, x8
    28f4:	str	x8, [sp, #8]
    28f8:	ldr	x8, [sp, #24]
    28fc:	ldrb	w9, [x8, #1]
    2900:	mov	w8, w9
    2904:	ldr	x10, [sp, #32]
    2908:	add	x8, x10, x8
    290c:	str	x8, [sp, #32]
    2910:	ldr	x8, [sp, #32]
    2914:	ldr	x10, [sp, #8]
    2918:	add	x8, x10, x8
    291c:	str	x8, [sp, #8]
    2920:	ldr	x8, [sp, #24]
    2924:	ldrb	w9, [x8, #2]
    2928:	mov	w8, w9
    292c:	ldr	x10, [sp, #32]
    2930:	add	x8, x10, x8
    2934:	str	x8, [sp, #32]
    2938:	ldr	x8, [sp, #32]
    293c:	ldr	x10, [sp, #8]
    2940:	add	x8, x10, x8
    2944:	str	x8, [sp, #8]
    2948:	ldr	x8, [sp, #24]
    294c:	ldrb	w9, [x8, #3]
    2950:	mov	w8, w9
    2954:	ldr	x10, [sp, #32]
    2958:	add	x8, x10, x8
    295c:	str	x8, [sp, #32]
    2960:	ldr	x8, [sp, #32]
    2964:	ldr	x10, [sp, #8]
    2968:	add	x8, x10, x8
    296c:	str	x8, [sp, #8]
    2970:	ldr	x8, [sp, #24]
    2974:	ldrb	w9, [x8, #4]
    2978:	mov	w8, w9
    297c:	ldr	x10, [sp, #32]
    2980:	add	x8, x10, x8
    2984:	str	x8, [sp, #32]
    2988:	ldr	x8, [sp, #32]
    298c:	ldr	x10, [sp, #8]
    2990:	add	x8, x10, x8
    2994:	str	x8, [sp, #8]
    2998:	ldr	x8, [sp, #24]
    299c:	ldrb	w9, [x8, #5]
    29a0:	mov	w8, w9
    29a4:	ldr	x10, [sp, #32]
    29a8:	add	x8, x10, x8
    29ac:	str	x8, [sp, #32]
    29b0:	ldr	x8, [sp, #32]
    29b4:	ldr	x10, [sp, #8]
    29b8:	add	x8, x10, x8
    29bc:	str	x8, [sp, #8]
    29c0:	ldr	x8, [sp, #24]
    29c4:	ldrb	w9, [x8, #6]
    29c8:	mov	w8, w9
    29cc:	ldr	x10, [sp, #32]
    29d0:	add	x8, x10, x8
    29d4:	str	x8, [sp, #32]
    29d8:	ldr	x8, [sp, #32]
    29dc:	ldr	x10, [sp, #8]
    29e0:	add	x8, x10, x8
    29e4:	str	x8, [sp, #8]
    29e8:	ldr	x8, [sp, #24]
    29ec:	ldrb	w9, [x8, #7]
    29f0:	mov	w8, w9
    29f4:	ldr	x10, [sp, #32]
    29f8:	add	x8, x10, x8
    29fc:	str	x8, [sp, #32]
    2a00:	ldr	x8, [sp, #32]
    2a04:	ldr	x10, [sp, #8]
    2a08:	add	x8, x10, x8
    2a0c:	str	x8, [sp, #8]
    2a10:	ldr	x8, [sp, #24]
    2a14:	ldrb	w9, [x8, #8]
    2a18:	mov	w8, w9
    2a1c:	ldr	x10, [sp, #32]
    2a20:	add	x8, x10, x8
    2a24:	str	x8, [sp, #32]
    2a28:	ldr	x8, [sp, #32]
    2a2c:	ldr	x10, [sp, #8]
    2a30:	add	x8, x10, x8
    2a34:	str	x8, [sp, #8]
    2a38:	ldr	x8, [sp, #24]
    2a3c:	ldrb	w9, [x8, #9]
    2a40:	mov	w8, w9
    2a44:	ldr	x10, [sp, #32]
    2a48:	add	x8, x10, x8
    2a4c:	str	x8, [sp, #32]
    2a50:	ldr	x8, [sp, #32]
    2a54:	ldr	x10, [sp, #8]
    2a58:	add	x8, x10, x8
    2a5c:	str	x8, [sp, #8]
    2a60:	ldr	x8, [sp, #24]
    2a64:	ldrb	w9, [x8, #10]
    2a68:	mov	w8, w9
    2a6c:	ldr	x10, [sp, #32]
    2a70:	add	x8, x10, x8
    2a74:	str	x8, [sp, #32]
    2a78:	ldr	x8, [sp, #32]
    2a7c:	ldr	x10, [sp, #8]
    2a80:	add	x8, x10, x8
    2a84:	str	x8, [sp, #8]
    2a88:	ldr	x8, [sp, #24]
    2a8c:	ldrb	w9, [x8, #11]
    2a90:	mov	w8, w9
    2a94:	ldr	x10, [sp, #32]
    2a98:	add	x8, x10, x8
    2a9c:	str	x8, [sp, #32]
    2aa0:	ldr	x8, [sp, #32]
    2aa4:	ldr	x10, [sp, #8]
    2aa8:	add	x8, x10, x8
    2aac:	str	x8, [sp, #8]
    2ab0:	ldr	x8, [sp, #24]
    2ab4:	ldrb	w9, [x8, #12]
    2ab8:	mov	w8, w9
    2abc:	ldr	x10, [sp, #32]
    2ac0:	add	x8, x10, x8
    2ac4:	str	x8, [sp, #32]
    2ac8:	ldr	x8, [sp, #32]
    2acc:	ldr	x10, [sp, #8]
    2ad0:	add	x8, x10, x8
    2ad4:	str	x8, [sp, #8]
    2ad8:	ldr	x8, [sp, #24]
    2adc:	ldrb	w9, [x8, #13]
    2ae0:	mov	w8, w9
    2ae4:	ldr	x10, [sp, #32]
    2ae8:	add	x8, x10, x8
    2aec:	str	x8, [sp, #32]
    2af0:	ldr	x8, [sp, #32]
    2af4:	ldr	x10, [sp, #8]
    2af8:	add	x8, x10, x8
    2afc:	str	x8, [sp, #8]
    2b00:	ldr	x8, [sp, #24]
    2b04:	ldrb	w9, [x8, #14]
    2b08:	mov	w8, w9
    2b0c:	ldr	x10, [sp, #32]
    2b10:	add	x8, x10, x8
    2b14:	str	x8, [sp, #32]
    2b18:	ldr	x8, [sp, #32]
    2b1c:	ldr	x10, [sp, #8]
    2b20:	add	x8, x10, x8
    2b24:	str	x8, [sp, #8]
    2b28:	ldr	x8, [sp, #24]
    2b2c:	ldrb	w9, [x8, #15]
    2b30:	mov	w8, w9
    2b34:	ldr	x10, [sp, #32]
    2b38:	add	x8, x10, x8
    2b3c:	str	x8, [sp, #32]
    2b40:	ldr	x8, [sp, #32]
    2b44:	ldr	x10, [sp, #8]
    2b48:	add	x8, x10, x8
    2b4c:	str	x8, [sp, #8]
    2b50:	ldr	x8, [sp, #24]
    2b54:	add	x8, x8, #0x10
    2b58:	str	x8, [sp, #24]
    2b5c:	ldr	w8, [sp, #4]
    2b60:	subs	w8, w8, #0x1
    2b64:	str	w8, [sp, #4]
    2b68:	cbnz	w8, 28d0 <adler32_z@@ZLIB_1.2.9+0x18c>
    2b6c:	ldr	x8, [sp, #32]
    2b70:	mov	x9, #0xfff1                	// #65521
    2b74:	udiv	x10, x8, x9
    2b78:	mul	x10, x10, x9
    2b7c:	subs	x8, x8, x10
    2b80:	str	x8, [sp, #32]
    2b84:	ldr	x8, [sp, #8]
    2b88:	udiv	x10, x8, x9
    2b8c:	mul	x9, x10, x9
    2b90:	subs	x8, x8, x9
    2b94:	str	x8, [sp, #8]
    2b98:	b	28a8 <adler32_z@@ZLIB_1.2.9+0x164>
    2b9c:	ldr	x8, [sp, #16]
    2ba0:	cbz	x8, 2ebc <adler32_z@@ZLIB_1.2.9+0x778>
    2ba4:	ldr	x8, [sp, #16]
    2ba8:	cmp	x8, #0x10
    2bac:	b.cc	2e4c <adler32_z@@ZLIB_1.2.9+0x708>  // b.lo, b.ul, b.last
    2bb0:	ldr	x8, [sp, #16]
    2bb4:	subs	x8, x8, #0x10
    2bb8:	str	x8, [sp, #16]
    2bbc:	ldr	x8, [sp, #24]
    2bc0:	ldrb	w9, [x8]
    2bc4:	mov	w8, w9
    2bc8:	ldr	x10, [sp, #32]
    2bcc:	add	x8, x10, x8
    2bd0:	str	x8, [sp, #32]
    2bd4:	ldr	x8, [sp, #32]
    2bd8:	ldr	x10, [sp, #8]
    2bdc:	add	x8, x10, x8
    2be0:	str	x8, [sp, #8]
    2be4:	ldr	x8, [sp, #24]
    2be8:	ldrb	w9, [x8, #1]
    2bec:	mov	w8, w9
    2bf0:	ldr	x10, [sp, #32]
    2bf4:	add	x8, x10, x8
    2bf8:	str	x8, [sp, #32]
    2bfc:	ldr	x8, [sp, #32]
    2c00:	ldr	x10, [sp, #8]
    2c04:	add	x8, x10, x8
    2c08:	str	x8, [sp, #8]
    2c0c:	ldr	x8, [sp, #24]
    2c10:	ldrb	w9, [x8, #2]
    2c14:	mov	w8, w9
    2c18:	ldr	x10, [sp, #32]
    2c1c:	add	x8, x10, x8
    2c20:	str	x8, [sp, #32]
    2c24:	ldr	x8, [sp, #32]
    2c28:	ldr	x10, [sp, #8]
    2c2c:	add	x8, x10, x8
    2c30:	str	x8, [sp, #8]
    2c34:	ldr	x8, [sp, #24]
    2c38:	ldrb	w9, [x8, #3]
    2c3c:	mov	w8, w9
    2c40:	ldr	x10, [sp, #32]
    2c44:	add	x8, x10, x8
    2c48:	str	x8, [sp, #32]
    2c4c:	ldr	x8, [sp, #32]
    2c50:	ldr	x10, [sp, #8]
    2c54:	add	x8, x10, x8
    2c58:	str	x8, [sp, #8]
    2c5c:	ldr	x8, [sp, #24]
    2c60:	ldrb	w9, [x8, #4]
    2c64:	mov	w8, w9
    2c68:	ldr	x10, [sp, #32]
    2c6c:	add	x8, x10, x8
    2c70:	str	x8, [sp, #32]
    2c74:	ldr	x8, [sp, #32]
    2c78:	ldr	x10, [sp, #8]
    2c7c:	add	x8, x10, x8
    2c80:	str	x8, [sp, #8]
    2c84:	ldr	x8, [sp, #24]
    2c88:	ldrb	w9, [x8, #5]
    2c8c:	mov	w8, w9
    2c90:	ldr	x10, [sp, #32]
    2c94:	add	x8, x10, x8
    2c98:	str	x8, [sp, #32]
    2c9c:	ldr	x8, [sp, #32]
    2ca0:	ldr	x10, [sp, #8]
    2ca4:	add	x8, x10, x8
    2ca8:	str	x8, [sp, #8]
    2cac:	ldr	x8, [sp, #24]
    2cb0:	ldrb	w9, [x8, #6]
    2cb4:	mov	w8, w9
    2cb8:	ldr	x10, [sp, #32]
    2cbc:	add	x8, x10, x8
    2cc0:	str	x8, [sp, #32]
    2cc4:	ldr	x8, [sp, #32]
    2cc8:	ldr	x10, [sp, #8]
    2ccc:	add	x8, x10, x8
    2cd0:	str	x8, [sp, #8]
    2cd4:	ldr	x8, [sp, #24]
    2cd8:	ldrb	w9, [x8, #7]
    2cdc:	mov	w8, w9
    2ce0:	ldr	x10, [sp, #32]
    2ce4:	add	x8, x10, x8
    2ce8:	str	x8, [sp, #32]
    2cec:	ldr	x8, [sp, #32]
    2cf0:	ldr	x10, [sp, #8]
    2cf4:	add	x8, x10, x8
    2cf8:	str	x8, [sp, #8]
    2cfc:	ldr	x8, [sp, #24]
    2d00:	ldrb	w9, [x8, #8]
    2d04:	mov	w8, w9
    2d08:	ldr	x10, [sp, #32]
    2d0c:	add	x8, x10, x8
    2d10:	str	x8, [sp, #32]
    2d14:	ldr	x8, [sp, #32]
    2d18:	ldr	x10, [sp, #8]
    2d1c:	add	x8, x10, x8
    2d20:	str	x8, [sp, #8]
    2d24:	ldr	x8, [sp, #24]
    2d28:	ldrb	w9, [x8, #9]
    2d2c:	mov	w8, w9
    2d30:	ldr	x10, [sp, #32]
    2d34:	add	x8, x10, x8
    2d38:	str	x8, [sp, #32]
    2d3c:	ldr	x8, [sp, #32]
    2d40:	ldr	x10, [sp, #8]
    2d44:	add	x8, x10, x8
    2d48:	str	x8, [sp, #8]
    2d4c:	ldr	x8, [sp, #24]
    2d50:	ldrb	w9, [x8, #10]
    2d54:	mov	w8, w9
    2d58:	ldr	x10, [sp, #32]
    2d5c:	add	x8, x10, x8
    2d60:	str	x8, [sp, #32]
    2d64:	ldr	x8, [sp, #32]
    2d68:	ldr	x10, [sp, #8]
    2d6c:	add	x8, x10, x8
    2d70:	str	x8, [sp, #8]
    2d74:	ldr	x8, [sp, #24]
    2d78:	ldrb	w9, [x8, #11]
    2d7c:	mov	w8, w9
    2d80:	ldr	x10, [sp, #32]
    2d84:	add	x8, x10, x8
    2d88:	str	x8, [sp, #32]
    2d8c:	ldr	x8, [sp, #32]
    2d90:	ldr	x10, [sp, #8]
    2d94:	add	x8, x10, x8
    2d98:	str	x8, [sp, #8]
    2d9c:	ldr	x8, [sp, #24]
    2da0:	ldrb	w9, [x8, #12]
    2da4:	mov	w8, w9
    2da8:	ldr	x10, [sp, #32]
    2dac:	add	x8, x10, x8
    2db0:	str	x8, [sp, #32]
    2db4:	ldr	x8, [sp, #32]
    2db8:	ldr	x10, [sp, #8]
    2dbc:	add	x8, x10, x8
    2dc0:	str	x8, [sp, #8]
    2dc4:	ldr	x8, [sp, #24]
    2dc8:	ldrb	w9, [x8, #13]
    2dcc:	mov	w8, w9
    2dd0:	ldr	x10, [sp, #32]
    2dd4:	add	x8, x10, x8
    2dd8:	str	x8, [sp, #32]
    2ddc:	ldr	x8, [sp, #32]
    2de0:	ldr	x10, [sp, #8]
    2de4:	add	x8, x10, x8
    2de8:	str	x8, [sp, #8]
    2dec:	ldr	x8, [sp, #24]
    2df0:	ldrb	w9, [x8, #14]
    2df4:	mov	w8, w9
    2df8:	ldr	x10, [sp, #32]
    2dfc:	add	x8, x10, x8
    2e00:	str	x8, [sp, #32]
    2e04:	ldr	x8, [sp, #32]
    2e08:	ldr	x10, [sp, #8]
    2e0c:	add	x8, x10, x8
    2e10:	str	x8, [sp, #8]
    2e14:	ldr	x8, [sp, #24]
    2e18:	ldrb	w9, [x8, #15]
    2e1c:	mov	w8, w9
    2e20:	ldr	x10, [sp, #32]
    2e24:	add	x8, x10, x8
    2e28:	str	x8, [sp, #32]
    2e2c:	ldr	x8, [sp, #32]
    2e30:	ldr	x10, [sp, #8]
    2e34:	add	x8, x10, x8
    2e38:	str	x8, [sp, #8]
    2e3c:	ldr	x8, [sp, #24]
    2e40:	add	x8, x8, #0x10
    2e44:	str	x8, [sp, #24]
    2e48:	b	2ba4 <adler32_z@@ZLIB_1.2.9+0x460>
    2e4c:	ldr	x8, [sp, #16]
    2e50:	subs	x9, x8, #0x1
    2e54:	str	x9, [sp, #16]
    2e58:	cbz	x8, 2e90 <adler32_z@@ZLIB_1.2.9+0x74c>
    2e5c:	ldr	x8, [sp, #24]
    2e60:	add	x9, x8, #0x1
    2e64:	str	x9, [sp, #24]
    2e68:	ldrb	w10, [x8]
    2e6c:	mov	w8, w10
    2e70:	ldr	x9, [sp, #32]
    2e74:	add	x8, x9, x8
    2e78:	str	x8, [sp, #32]
    2e7c:	ldr	x8, [sp, #32]
    2e80:	ldr	x9, [sp, #8]
    2e84:	add	x8, x9, x8
    2e88:	str	x8, [sp, #8]
    2e8c:	b	2e4c <adler32_z@@ZLIB_1.2.9+0x708>
    2e90:	ldr	x8, [sp, #32]
    2e94:	mov	x9, #0xfff1                	// #65521
    2e98:	udiv	x10, x8, x9
    2e9c:	mul	x10, x10, x9
    2ea0:	subs	x8, x8, x10
    2ea4:	str	x8, [sp, #32]
    2ea8:	ldr	x8, [sp, #8]
    2eac:	udiv	x10, x8, x9
    2eb0:	mul	x9, x10, x9
    2eb4:	subs	x8, x8, x9
    2eb8:	str	x8, [sp, #8]
    2ebc:	ldr	x8, [sp, #32]
    2ec0:	ldr	x9, [sp, #8]
    2ec4:	orr	x8, x8, x9, lsl #16
    2ec8:	str	x8, [sp, #40]
    2ecc:	ldr	x0, [sp, #40]
    2ed0:	add	sp, sp, #0x30
    2ed4:	ret

0000000000002ed8 <adler32@@Base>:
    2ed8:	sub	sp, sp, #0x30
    2edc:	stp	x29, x30, [sp, #32]
    2ee0:	add	x29, sp, #0x20
    2ee4:	stur	x0, [x29, #-8]
    2ee8:	str	x1, [sp, #16]
    2eec:	str	w2, [sp, #12]
    2ef0:	ldur	x0, [x29, #-8]
    2ef4:	ldr	x1, [sp, #16]
    2ef8:	ldr	w8, [sp, #12]
    2efc:	mov	w2, w8
    2f00:	bl	2660 <adler32_z@plt>
    2f04:	ldp	x29, x30, [sp, #32]
    2f08:	add	sp, sp, #0x30
    2f0c:	ret

0000000000002f10 <adler32_combine@@ZLIB_1.2.2>:
    2f10:	sub	sp, sp, #0x30
    2f14:	stp	x29, x30, [sp, #32]
    2f18:	add	x29, sp, #0x20
    2f1c:	stur	x0, [x29, #-8]
    2f20:	str	x1, [sp, #16]
    2f24:	str	x2, [sp, #8]
    2f28:	ldur	x0, [x29, #-8]
    2f2c:	ldr	x1, [sp, #16]
    2f30:	ldr	x2, [sp, #8]
    2f34:	bl	2f44 <adler32_combine@@ZLIB_1.2.2+0x34>
    2f38:	ldp	x29, x30, [sp, #32]
    2f3c:	add	sp, sp, #0x30
    2f40:	ret
    2f44:	sub	sp, sp, #0x40
    2f48:	str	x0, [sp, #48]
    2f4c:	str	x1, [sp, #40]
    2f50:	str	x2, [sp, #32]
    2f54:	ldr	x8, [sp, #32]
    2f58:	cmp	x8, #0x0
    2f5c:	cset	w9, ge  // ge = tcont
    2f60:	tbnz	w9, #0, 2f70 <adler32_combine@@ZLIB_1.2.2+0x60>
    2f64:	mov	x8, #0xffffffff            	// #4294967295
    2f68:	str	x8, [sp, #56]
    2f6c:	b	30a4 <adler32_combine@@ZLIB_1.2.2+0x194>
    2f70:	ldr	x8, [sp, #32]
    2f74:	mov	x9, #0xfff1                	// #65521
    2f78:	sdiv	x10, x8, x9
    2f7c:	mul	x10, x10, x9
    2f80:	subs	x8, x8, x10
    2f84:	str	x8, [sp, #32]
    2f88:	ldr	x8, [sp, #32]
    2f8c:	str	w8, [sp, #12]
    2f90:	ldr	x10, [sp, #48]
    2f94:	and	x10, x10, #0xffff
    2f98:	str	x10, [sp, #24]
    2f9c:	ldr	w8, [sp, #12]
    2fa0:	mov	w10, w8
    2fa4:	ldr	x11, [sp, #24]
    2fa8:	mul	x10, x10, x11
    2fac:	str	x10, [sp, #16]
    2fb0:	ldr	x10, [sp, #16]
    2fb4:	udiv	x11, x10, x9
    2fb8:	mul	x11, x11, x9
    2fbc:	subs	x10, x10, x11
    2fc0:	str	x10, [sp, #16]
    2fc4:	ldr	x10, [sp, #40]
    2fc8:	add	x11, x9, w10, uxth
    2fcc:	subs	x11, x11, #0x1
    2fd0:	ldr	x12, [sp, #24]
    2fd4:	add	x11, x12, x11
    2fd8:	str	x11, [sp, #24]
    2fdc:	ldr	x11, [sp, #48]
    2fe0:	lsr	x11, x11, #16
    2fe4:	ldr	x12, [sp, #40]
    2fe8:	lsr	x12, x12, #16
    2fec:	and	x12, x12, #0xffff
    2ff0:	add	x12, x12, w11, uxth
    2ff4:	add	x12, x12, x9
    2ff8:	ldr	w8, [sp, #12]
    2ffc:	mov	w13, w8
    3000:	subs	x12, x12, x13
    3004:	ldr	x13, [sp, #16]
    3008:	add	x12, x13, x12
    300c:	str	x12, [sp, #16]
    3010:	ldr	x12, [sp, #24]
    3014:	cmp	x12, x9
    3018:	b.cc	302c <adler32_combine@@ZLIB_1.2.2+0x11c>  // b.lo, b.ul, b.last
    301c:	ldr	x8, [sp, #24]
    3020:	mov	x9, #0xfff1                	// #65521
    3024:	subs	x8, x8, x9
    3028:	str	x8, [sp, #24]
    302c:	ldr	x8, [sp, #24]
    3030:	mov	x9, #0xfff1                	// #65521
    3034:	cmp	x8, x9
    3038:	b.cc	304c <adler32_combine@@ZLIB_1.2.2+0x13c>  // b.lo, b.ul, b.last
    303c:	ldr	x8, [sp, #24]
    3040:	mov	x9, #0xfff1                	// #65521
    3044:	subs	x8, x8, x9
    3048:	str	x8, [sp, #24]
    304c:	ldr	x8, [sp, #16]
    3050:	mov	x9, #0xffe2                	// #65506
    3054:	movk	x9, #0x1, lsl #16
    3058:	cmp	x8, x9
    305c:	b.cc	3074 <adler32_combine@@ZLIB_1.2.2+0x164>  // b.lo, b.ul, b.last
    3060:	ldr	x8, [sp, #16]
    3064:	mov	x9, #0xffe2                	// #65506
    3068:	movk	x9, #0x1, lsl #16
    306c:	subs	x8, x8, x9
    3070:	str	x8, [sp, #16]
    3074:	ldr	x8, [sp, #16]
    3078:	mov	x9, #0xfff1                	// #65521
    307c:	cmp	x8, x9
    3080:	b.cc	3094 <adler32_combine@@ZLIB_1.2.2+0x184>  // b.lo, b.ul, b.last
    3084:	ldr	x8, [sp, #16]
    3088:	mov	x9, #0xfff1                	// #65521
    308c:	subs	x8, x8, x9
    3090:	str	x8, [sp, #16]
    3094:	ldr	x8, [sp, #24]
    3098:	ldr	x9, [sp, #16]
    309c:	orr	x8, x8, x9, lsl #16
    30a0:	str	x8, [sp, #56]
    30a4:	ldr	x0, [sp, #56]
    30a8:	add	sp, sp, #0x40
    30ac:	ret

00000000000030b0 <adler32_combine64@@ZLIB_1.2.3.3>:
    30b0:	sub	sp, sp, #0x30
    30b4:	stp	x29, x30, [sp, #32]
    30b8:	add	x29, sp, #0x20
    30bc:	stur	x0, [x29, #-8]
    30c0:	str	x1, [sp, #16]
    30c4:	str	x2, [sp, #8]
    30c8:	ldur	x0, [x29, #-8]
    30cc:	ldr	x1, [sp, #16]
    30d0:	ldr	x2, [sp, #8]
    30d4:	bl	2f44 <adler32_combine@@ZLIB_1.2.2+0x34>
    30d8:	ldp	x29, x30, [sp, #32]
    30dc:	add	sp, sp, #0x30
    30e0:	ret

00000000000030e4 <get_crc_table@@Base>:
    30e4:	adrp	x0, 18000 <gzvprintf@@ZLIB_1.2.7.1+0x628>
    30e8:	add	x0, x0, #0x5dc
    30ec:	ret

00000000000030f0 <crc32_z@@ZLIB_1.2.9>:
    30f0:	sub	sp, sp, #0x40
    30f4:	stp	x29, x30, [sp, #48]
    30f8:	add	x29, sp, #0x30
    30fc:	stur	x0, [x29, #-16]
    3100:	str	x1, [sp, #24]
    3104:	str	x2, [sp, #16]
    3108:	ldr	x8, [sp, #24]
    310c:	cbnz	x8, 3118 <crc32_z@@ZLIB_1.2.9+0x28>
    3110:	stur	xzr, [x29, #-8]
    3114:	b	3154 <crc32_z@@ZLIB_1.2.9+0x64>
    3118:	mov	w8, #0x1                   	// #1
    311c:	str	w8, [sp, #12]
    3120:	ldrb	w8, [sp, #12]
    3124:	cbz	w8, 3140 <crc32_z@@ZLIB_1.2.9+0x50>
    3128:	ldur	x0, [x29, #-16]
    312c:	ldr	x1, [sp, #24]
    3130:	ldr	x2, [sp, #16]
    3134:	bl	3164 <crc32_z@@ZLIB_1.2.9+0x74>
    3138:	stur	x0, [x29, #-8]
    313c:	b	3154 <crc32_z@@ZLIB_1.2.9+0x64>
    3140:	ldur	x0, [x29, #-16]
    3144:	ldr	x1, [sp, #24]
    3148:	ldr	x2, [sp, #16]
    314c:	bl	36e4 <crc32_z@@ZLIB_1.2.9+0x5f4>
    3150:	stur	x0, [x29, #-8]
    3154:	ldur	x0, [x29, #-8]
    3158:	ldp	x29, x30, [sp, #48]
    315c:	add	sp, sp, #0x40
    3160:	ret
    3164:	sub	sp, sp, #0xa0
    3168:	stp	x28, x27, [sp, #80]
    316c:	stp	x26, x25, [sp, #96]
    3170:	stp	x24, x23, [sp, #112]
    3174:	stp	x22, x21, [sp, #128]
    3178:	stp	x20, x19, [sp, #144]
    317c:	adrp	x8, 18000 <gzvprintf@@ZLIB_1.2.7.1+0x628>
    3180:	add	x8, x8, #0x5dc
    3184:	add	x9, x8, #0xc00
    3188:	add	x10, x8, #0x800
    318c:	add	x11, x8, #0x400
    3190:	str	x0, [sp, #72]
    3194:	str	x1, [sp, #64]
    3198:	str	x2, [sp, #56]
    319c:	ldr	x12, [sp, #72]
    31a0:	str	w12, [sp, #52]
    31a4:	ldr	w12, [sp, #52]
    31a8:	mvn	w12, w12
    31ac:	str	w12, [sp, #52]
    31b0:	str	x8, [sp, #32]
    31b4:	str	x9, [sp, #24]
    31b8:	str	x10, [sp, #16]
    31bc:	str	x11, [sp, #8]
    31c0:	ldr	x8, [sp, #56]
    31c4:	mov	w9, #0x0                   	// #0
    31c8:	str	w9, [sp, #4]
    31cc:	cbz	x8, 31e0 <crc32_z@@ZLIB_1.2.9+0xf0>
    31d0:	ldr	x8, [sp, #64]
    31d4:	tst	x8, #0x3
    31d8:	cset	w9, ne  // ne = any
    31dc:	str	w9, [sp, #4]
    31e0:	ldr	w8, [sp, #4]
    31e4:	tbnz	w8, #0, 31ec <crc32_z@@ZLIB_1.2.9+0xfc>
    31e8:	b	322c <crc32_z@@ZLIB_1.2.9+0x13c>
    31ec:	ldr	w8, [sp, #52]
    31f0:	ldr	x9, [sp, #64]
    31f4:	add	x10, x9, #0x1
    31f8:	str	x10, [sp, #64]
    31fc:	ldrb	w11, [x9]
    3200:	eor	w8, w8, w11
    3204:	and	w8, w8, #0xff
    3208:	ldr	x9, [sp, #32]
    320c:	ldr	w8, [x9, w8, uxtw #2]
    3210:	ldr	w11, [sp, #52]
    3214:	eor	w8, w8, w11, lsr #8
    3218:	str	w8, [sp, #52]
    321c:	ldr	x10, [sp, #56]
    3220:	subs	x10, x10, #0x1
    3224:	str	x10, [sp, #56]
    3228:	b	31c0 <crc32_z@@ZLIB_1.2.9+0xd0>
    322c:	ldr	x8, [sp, #64]
    3230:	str	x8, [sp, #40]
    3234:	ldr	x8, [sp, #56]
    3238:	cmp	x8, #0x20
    323c:	b.cc	35d4 <crc32_z@@ZLIB_1.2.9+0x4e4>  // b.lo, b.ul, b.last
    3240:	ldr	x8, [sp, #40]
    3244:	add	x9, x8, #0x4
    3248:	str	x9, [sp, #40]
    324c:	ldr	w10, [x8]
    3250:	ldr	w11, [sp, #52]
    3254:	eor	w10, w11, w10
    3258:	str	w10, [sp, #52]
    325c:	ldr	w10, [sp, #52]
    3260:	and	w10, w10, #0xff
    3264:	ldr	x8, [sp, #24]
    3268:	ldr	w10, [x8, w10, uxtw #2]
    326c:	ldr	w11, [sp, #52]
    3270:	mov	x9, #0x8                   	// #8
    3274:	lsr	w11, w11, #8
    3278:	and	w11, w11, #0xff
    327c:	ldr	x12, [sp, #16]
    3280:	ldr	w11, [x12, w11, uxtw #2]
    3284:	eor	w10, w10, w11
    3288:	ldr	w11, [sp, #52]
    328c:	mov	x13, #0x10                  	// #16
    3290:	lsr	w11, w11, #16
    3294:	and	w11, w11, #0xff
    3298:	ldr	x14, [sp, #8]
    329c:	ldr	w11, [x14, w11, uxtw #2]
    32a0:	eor	w10, w10, w11
    32a4:	ldr	w11, [sp, #52]
    32a8:	mov	x15, #0x18                  	// #24
    32ac:	lsr	w11, w11, #24
    32b0:	ldr	x16, [sp, #32]
    32b4:	ldr	w11, [x16, w11, uxtw #2]
    32b8:	eor	w10, w10, w11
    32bc:	str	w10, [sp, #52]
    32c0:	ldr	x17, [sp, #40]
    32c4:	add	x18, x17, #0x4
    32c8:	str	x18, [sp, #40]
    32cc:	ldr	w10, [x17]
    32d0:	ldr	w11, [sp, #52]
    32d4:	eor	w10, w11, w10
    32d8:	str	w10, [sp, #52]
    32dc:	ldr	w10, [sp, #52]
    32e0:	and	w10, w10, #0xff
    32e4:	ldr	w10, [x8, w10, uxtw #2]
    32e8:	ldr	w11, [sp, #52]
    32ec:	mov	x0, x9
    32f0:	lsr	w11, w11, w0
    32f4:	and	w11, w11, #0xff
    32f8:	ldr	w11, [x12, w11, uxtw #2]
    32fc:	eor	w10, w10, w11
    3300:	ldr	w11, [sp, #52]
    3304:	mov	x1, x13
    3308:	lsr	w11, w11, w1
    330c:	and	w11, w11, #0xff
    3310:	ldr	w11, [x14, w11, uxtw #2]
    3314:	eor	w10, w10, w11
    3318:	ldr	w11, [sp, #52]
    331c:	mov	x2, x15
    3320:	lsr	w11, w11, w2
    3324:	ldr	w11, [x16, w11, uxtw #2]
    3328:	eor	w10, w10, w11
    332c:	str	w10, [sp, #52]
    3330:	ldr	x17, [sp, #40]
    3334:	add	x18, x17, #0x4
    3338:	str	x18, [sp, #40]
    333c:	ldr	w10, [x17]
    3340:	ldr	w11, [sp, #52]
    3344:	eor	w10, w11, w10
    3348:	str	w10, [sp, #52]
    334c:	ldr	w10, [sp, #52]
    3350:	and	w10, w10, #0xff
    3354:	ldr	w10, [x8, w10, uxtw #2]
    3358:	ldr	w11, [sp, #52]
    335c:	mov	x3, x9
    3360:	lsr	w11, w11, w3
    3364:	and	w11, w11, #0xff
    3368:	ldr	w11, [x12, w11, uxtw #2]
    336c:	eor	w10, w10, w11
    3370:	ldr	w11, [sp, #52]
    3374:	mov	x4, x13
    3378:	lsr	w11, w11, w4
    337c:	and	w11, w11, #0xff
    3380:	ldr	w11, [x14, w11, uxtw #2]
    3384:	eor	w10, w10, w11
    3388:	ldr	w11, [sp, #52]
    338c:	mov	x5, x15
    3390:	lsr	w11, w11, w5
    3394:	ldr	w11, [x16, w11, uxtw #2]
    3398:	eor	w10, w10, w11
    339c:	str	w10, [sp, #52]
    33a0:	ldr	x17, [sp, #40]
    33a4:	add	x18, x17, #0x4
    33a8:	str	x18, [sp, #40]
    33ac:	ldr	w10, [x17]
    33b0:	ldr	w11, [sp, #52]
    33b4:	eor	w10, w11, w10
    33b8:	str	w10, [sp, #52]
    33bc:	ldr	w10, [sp, #52]
    33c0:	and	w10, w10, #0xff
    33c4:	ldr	w10, [x8, w10, uxtw #2]
    33c8:	ldr	w11, [sp, #52]
    33cc:	mov	x6, x9
    33d0:	lsr	w11, w11, w6
    33d4:	and	w11, w11, #0xff
    33d8:	ldr	w11, [x12, w11, uxtw #2]
    33dc:	eor	w10, w10, w11
    33e0:	ldr	w11, [sp, #52]
    33e4:	mov	x7, x13
    33e8:	lsr	w11, w11, w7
    33ec:	and	w11, w11, #0xff
    33f0:	ldr	w11, [x14, w11, uxtw #2]
    33f4:	eor	w10, w10, w11
    33f8:	ldr	w11, [sp, #52]
    33fc:	mov	x17, x15
    3400:	lsr	w11, w11, w17
    3404:	ldr	w11, [x16, w11, uxtw #2]
    3408:	eor	w10, w10, w11
    340c:	str	w10, [sp, #52]
    3410:	ldr	x18, [sp, #40]
    3414:	add	x19, x18, #0x4
    3418:	str	x19, [sp, #40]
    341c:	ldr	w10, [x18]
    3420:	ldr	w11, [sp, #52]
    3424:	eor	w10, w11, w10
    3428:	str	w10, [sp, #52]
    342c:	ldr	w10, [sp, #52]
    3430:	and	w10, w10, #0xff
    3434:	ldr	w10, [x8, w10, uxtw #2]
    3438:	ldr	w11, [sp, #52]
    343c:	mov	x18, x9
    3440:	lsr	w11, w11, w18
    3444:	and	w11, w11, #0xff
    3448:	ldr	w11, [x12, w11, uxtw #2]
    344c:	eor	w10, w10, w11
    3450:	ldr	w11, [sp, #52]
    3454:	mov	x19, x13
    3458:	lsr	w11, w11, w19
    345c:	and	w11, w11, #0xff
    3460:	ldr	w11, [x14, w11, uxtw #2]
    3464:	eor	w10, w10, w11
    3468:	ldr	w11, [sp, #52]
    346c:	mov	x20, x15
    3470:	lsr	w11, w11, w20
    3474:	ldr	w11, [x16, w11, uxtw #2]
    3478:	eor	w10, w10, w11
    347c:	str	w10, [sp, #52]
    3480:	ldr	x21, [sp, #40]
    3484:	add	x22, x21, #0x4
    3488:	str	x22, [sp, #40]
    348c:	ldr	w10, [x21]
    3490:	ldr	w11, [sp, #52]
    3494:	eor	w10, w11, w10
    3498:	str	w10, [sp, #52]
    349c:	ldr	w10, [sp, #52]
    34a0:	and	w10, w10, #0xff
    34a4:	ldr	w10, [x8, w10, uxtw #2]
    34a8:	ldr	w11, [sp, #52]
    34ac:	mov	x21, x9
    34b0:	lsr	w11, w11, w21
    34b4:	and	w11, w11, #0xff
    34b8:	ldr	w11, [x12, w11, uxtw #2]
    34bc:	eor	w10, w10, w11
    34c0:	ldr	w11, [sp, #52]
    34c4:	mov	x22, x13
    34c8:	lsr	w11, w11, w22
    34cc:	and	w11, w11, #0xff
    34d0:	ldr	w11, [x14, w11, uxtw #2]
    34d4:	eor	w10, w10, w11
    34d8:	ldr	w11, [sp, #52]
    34dc:	mov	x23, x15
    34e0:	lsr	w11, w11, w23
    34e4:	ldr	w11, [x16, w11, uxtw #2]
    34e8:	eor	w10, w10, w11
    34ec:	str	w10, [sp, #52]
    34f0:	ldr	x24, [sp, #40]
    34f4:	add	x25, x24, #0x4
    34f8:	str	x25, [sp, #40]
    34fc:	ldr	w10, [x24]
    3500:	ldr	w11, [sp, #52]
    3504:	eor	w10, w11, w10
    3508:	str	w10, [sp, #52]
    350c:	ldr	w10, [sp, #52]
    3510:	and	w10, w10, #0xff
    3514:	ldr	w10, [x8, w10, uxtw #2]
    3518:	ldr	w11, [sp, #52]
    351c:	mov	x24, x9
    3520:	lsr	w11, w11, w24
    3524:	and	w11, w11, #0xff
    3528:	ldr	w11, [x12, w11, uxtw #2]
    352c:	eor	w10, w10, w11
    3530:	ldr	w11, [sp, #52]
    3534:	mov	x25, x13
    3538:	lsr	w11, w11, w25
    353c:	and	w11, w11, #0xff
    3540:	ldr	w11, [x14, w11, uxtw #2]
    3544:	eor	w10, w10, w11
    3548:	ldr	w11, [sp, #52]
    354c:	mov	x26, x15
    3550:	lsr	w11, w11, w26
    3554:	ldr	w11, [x16, w11, uxtw #2]
    3558:	eor	w10, w10, w11
    355c:	str	w10, [sp, #52]
    3560:	ldr	x27, [sp, #40]
    3564:	add	x28, x27, #0x4
    3568:	str	x28, [sp, #40]
    356c:	ldr	w10, [x27]
    3570:	ldr	w11, [sp, #52]
    3574:	eor	w10, w11, w10
    3578:	str	w10, [sp, #52]
    357c:	ldr	w10, [sp, #52]
    3580:	and	w10, w10, #0xff
    3584:	ldr	w10, [x8, w10, uxtw #2]
    3588:	ldr	w11, [sp, #52]
    358c:	lsr	w9, w11, w9
    3590:	and	w9, w9, #0xff
    3594:	ldr	w9, [x12, w9, uxtw #2]
    3598:	eor	w9, w10, w9
    359c:	ldr	w10, [sp, #52]
    35a0:	lsr	w10, w10, w13
    35a4:	and	w10, w10, #0xff
    35a8:	ldr	w10, [x14, w10, uxtw #2]
    35ac:	eor	w9, w9, w10
    35b0:	ldr	w10, [sp, #52]
    35b4:	lsr	w10, w10, w15
    35b8:	ldr	w10, [x16, w10, uxtw #2]
    35bc:	eor	w9, w9, w10
    35c0:	str	w9, [sp, #52]
    35c4:	ldr	x27, [sp, #56]
    35c8:	subs	x27, x27, #0x20
    35cc:	str	x27, [sp, #56]
    35d0:	b	3234 <crc32_z@@ZLIB_1.2.9+0x144>
    35d4:	ldr	x8, [sp, #56]
    35d8:	cmp	x8, #0x4
    35dc:	b.cc	3664 <crc32_z@@ZLIB_1.2.9+0x574>  // b.lo, b.ul, b.last
    35e0:	ldr	x8, [sp, #40]
    35e4:	add	x9, x8, #0x4
    35e8:	str	x9, [sp, #40]
    35ec:	ldr	w10, [x8]
    35f0:	ldr	w11, [sp, #52]
    35f4:	eor	w10, w11, w10
    35f8:	str	w10, [sp, #52]
    35fc:	ldr	w10, [sp, #52]
    3600:	and	w10, w10, #0xff
    3604:	ldr	x8, [sp, #24]
    3608:	ldr	w10, [x8, w10, uxtw #2]
    360c:	ldr	w11, [sp, #52]
    3610:	lsr	w11, w11, #8
    3614:	and	w11, w11, #0xff
    3618:	ldr	x9, [sp, #16]
    361c:	ldr	w11, [x9, w11, uxtw #2]
    3620:	eor	w10, w10, w11
    3624:	ldr	w11, [sp, #52]
    3628:	lsr	w11, w11, #16
    362c:	and	w11, w11, #0xff
    3630:	ldr	x12, [sp, #8]
    3634:	ldr	w11, [x12, w11, uxtw #2]
    3638:	eor	w10, w10, w11
    363c:	ldr	w11, [sp, #52]
    3640:	lsr	w11, w11, #24
    3644:	ldr	x13, [sp, #32]
    3648:	ldr	w11, [x13, w11, uxtw #2]
    364c:	eor	w10, w10, w11
    3650:	str	w10, [sp, #52]
    3654:	ldr	x14, [sp, #56]
    3658:	subs	x14, x14, #0x4
    365c:	str	x14, [sp, #56]
    3660:	b	35d4 <crc32_z@@ZLIB_1.2.9+0x4e4>
    3664:	ldr	x8, [sp, #40]
    3668:	str	x8, [sp, #64]
    366c:	ldr	x8, [sp, #56]
    3670:	cbz	x8, 36b4 <crc32_z@@ZLIB_1.2.9+0x5c4>
    3674:	ldr	w8, [sp, #52]
    3678:	ldr	x9, [sp, #64]
    367c:	add	x10, x9, #0x1
    3680:	str	x10, [sp, #64]
    3684:	ldrb	w11, [x9]
    3688:	eor	w8, w8, w11
    368c:	and	w8, w8, #0xff
    3690:	ldr	x9, [sp, #32]
    3694:	ldr	w8, [x9, w8, uxtw #2]
    3698:	ldr	w11, [sp, #52]
    369c:	eor	w8, w8, w11, lsr #8
    36a0:	str	w8, [sp, #52]
    36a4:	ldr	x8, [sp, #56]
    36a8:	subs	x8, x8, #0x1
    36ac:	str	x8, [sp, #56]
    36b0:	cbnz	x8, 3674 <crc32_z@@ZLIB_1.2.9+0x584>
    36b4:	ldr	w8, [sp, #52]
    36b8:	mvn	w8, w8
    36bc:	str	w8, [sp, #52]
    36c0:	ldr	w8, [sp, #52]
    36c4:	mov	w0, w8
    36c8:	ldp	x20, x19, [sp, #144]
    36cc:	ldp	x22, x21, [sp, #128]
    36d0:	ldp	x24, x23, [sp, #112]
    36d4:	ldp	x26, x25, [sp, #96]
    36d8:	ldp	x28, x27, [sp, #80]
    36dc:	add	sp, sp, #0xa0
    36e0:	ret
    36e4:	sub	sp, sp, #0xa0
    36e8:	stp	x28, x27, [sp, #80]
    36ec:	stp	x26, x25, [sp, #96]
    36f0:	stp	x24, x23, [sp, #112]
    36f4:	stp	x22, x21, [sp, #128]
    36f8:	stp	x20, x19, [sp, #144]
    36fc:	adrp	x8, 18000 <gzvprintf@@ZLIB_1.2.7.1+0x628>
    3700:	add	x8, x8, #0x5dc
    3704:	add	x9, x8, #0x1, lsl #12
    3708:	mov	x10, #0x1400                	// #5120
    370c:	add	x10, x8, x10
    3710:	mov	x11, #0x1800                	// #6144
    3714:	add	x11, x8, x11
    3718:	mov	x12, #0x1c00                	// #7168
    371c:	add	x8, x8, x12
    3720:	str	x0, [sp, #72]
    3724:	str	x1, [sp, #64]
    3728:	str	x2, [sp, #56]
    372c:	ldr	x12, [sp, #72]
    3730:	lsr	w12, w12, #24
    3734:	ldr	x13, [sp, #72]
    3738:	lsr	w13, w13, #8
    373c:	and	w13, w13, #0xff00
    3740:	add	w12, w13, w12, uxtb
    3744:	ldr	x14, [sp, #72]
    3748:	and	w13, w14, #0xff00
    374c:	add	w12, w12, w13, lsl #8
    3750:	ldr	x15, [sp, #72]
    3754:	and	w13, w15, #0xff
    3758:	add	w12, w12, w13, lsl #24
    375c:	str	w12, [sp, #52]
    3760:	ldr	w12, [sp, #52]
    3764:	mvn	w12, w12
    3768:	str	w12, [sp, #52]
    376c:	str	x9, [sp, #32]
    3770:	str	x10, [sp, #24]
    3774:	str	x11, [sp, #16]
    3778:	str	x8, [sp, #8]
    377c:	ldr	x8, [sp, #56]
    3780:	mov	w9, #0x0                   	// #0
    3784:	str	w9, [sp, #4]
    3788:	cbz	x8, 379c <crc32_z@@ZLIB_1.2.9+0x6ac>
    378c:	ldr	x8, [sp, #64]
    3790:	tst	x8, #0x3
    3794:	cset	w9, ne  // ne = any
    3798:	str	w9, [sp, #4]
    379c:	ldr	w8, [sp, #4]
    37a0:	tbnz	w8, #0, 37a8 <crc32_z@@ZLIB_1.2.9+0x6b8>
    37a4:	b	37e4 <crc32_z@@ZLIB_1.2.9+0x6f4>
    37a8:	ldr	w8, [sp, #52]
    37ac:	ldr	x9, [sp, #64]
    37b0:	add	x10, x9, #0x1
    37b4:	str	x10, [sp, #64]
    37b8:	ldrb	w11, [x9]
    37bc:	eor	w8, w11, w8, lsr #24
    37c0:	ldr	x9, [sp, #32]
    37c4:	ldr	w8, [x9, w8, uxtw #2]
    37c8:	ldr	w11, [sp, #52]
    37cc:	eor	w8, w8, w11, lsl #8
    37d0:	str	w8, [sp, #52]
    37d4:	ldr	x10, [sp, #56]
    37d8:	subs	x10, x10, #0x1
    37dc:	str	x10, [sp, #56]
    37e0:	b	377c <crc32_z@@ZLIB_1.2.9+0x68c>
    37e4:	ldr	x8, [sp, #64]
    37e8:	str	x8, [sp, #40]
    37ec:	ldr	x8, [sp, #56]
    37f0:	cmp	x8, #0x20
    37f4:	b.cc	3b8c <crc32_z@@ZLIB_1.2.9+0xa9c>  // b.lo, b.ul, b.last
    37f8:	ldr	x8, [sp, #40]
    37fc:	add	x9, x8, #0x4
    3800:	str	x9, [sp, #40]
    3804:	ldr	w10, [x8]
    3808:	ldr	w11, [sp, #52]
    380c:	eor	w10, w11, w10
    3810:	str	w10, [sp, #52]
    3814:	ldr	w10, [sp, #52]
    3818:	and	w10, w10, #0xff
    381c:	ldr	x8, [sp, #32]
    3820:	ldr	w10, [x8, w10, uxtw #2]
    3824:	ldr	w11, [sp, #52]
    3828:	mov	x9, #0x8                   	// #8
    382c:	lsr	w11, w11, #8
    3830:	and	w11, w11, #0xff
    3834:	ldr	x12, [sp, #24]
    3838:	ldr	w11, [x12, w11, uxtw #2]
    383c:	eor	w10, w10, w11
    3840:	ldr	w11, [sp, #52]
    3844:	mov	x13, #0x10                  	// #16
    3848:	lsr	w11, w11, #16
    384c:	and	w11, w11, #0xff
    3850:	ldr	x14, [sp, #16]
    3854:	ldr	w11, [x14, w11, uxtw #2]
    3858:	eor	w10, w10, w11
    385c:	ldr	w11, [sp, #52]
    3860:	mov	x15, #0x18                  	// #24
    3864:	lsr	w11, w11, #24
    3868:	ldr	x16, [sp, #8]
    386c:	ldr	w11, [x16, w11, uxtw #2]
    3870:	eor	w10, w10, w11
    3874:	str	w10, [sp, #52]
    3878:	ldr	x17, [sp, #40]
    387c:	add	x18, x17, #0x4
    3880:	str	x18, [sp, #40]
    3884:	ldr	w10, [x17]
    3888:	ldr	w11, [sp, #52]
    388c:	eor	w10, w11, w10
    3890:	str	w10, [sp, #52]
    3894:	ldr	w10, [sp, #52]
    3898:	and	w10, w10, #0xff
    389c:	ldr	w10, [x8, w10, uxtw #2]
    38a0:	ldr	w11, [sp, #52]
    38a4:	mov	x0, x9
    38a8:	lsr	w11, w11, w0
    38ac:	and	w11, w11, #0xff
    38b0:	ldr	w11, [x12, w11, uxtw #2]
    38b4:	eor	w10, w10, w11
    38b8:	ldr	w11, [sp, #52]
    38bc:	mov	x1, x13
    38c0:	lsr	w11, w11, w1
    38c4:	and	w11, w11, #0xff
    38c8:	ldr	w11, [x14, w11, uxtw #2]
    38cc:	eor	w10, w10, w11
    38d0:	ldr	w11, [sp, #52]
    38d4:	mov	x2, x15
    38d8:	lsr	w11, w11, w2
    38dc:	ldr	w11, [x16, w11, uxtw #2]
    38e0:	eor	w10, w10, w11
    38e4:	str	w10, [sp, #52]
    38e8:	ldr	x17, [sp, #40]
    38ec:	add	x18, x17, #0x4
    38f0:	str	x18, [sp, #40]
    38f4:	ldr	w10, [x17]
    38f8:	ldr	w11, [sp, #52]
    38fc:	eor	w10, w11, w10
    3900:	str	w10, [sp, #52]
    3904:	ldr	w10, [sp, #52]
    3908:	and	w10, w10, #0xff
    390c:	ldr	w10, [x8, w10, uxtw #2]
    3910:	ldr	w11, [sp, #52]
    3914:	mov	x3, x9
    3918:	lsr	w11, w11, w3
    391c:	and	w11, w11, #0xff
    3920:	ldr	w11, [x12, w11, uxtw #2]
    3924:	eor	w10, w10, w11
    3928:	ldr	w11, [sp, #52]
    392c:	mov	x4, x13
    3930:	lsr	w11, w11, w4
    3934:	and	w11, w11, #0xff
    3938:	ldr	w11, [x14, w11, uxtw #2]
    393c:	eor	w10, w10, w11
    3940:	ldr	w11, [sp, #52]
    3944:	mov	x5, x15
    3948:	lsr	w11, w11, w5
    394c:	ldr	w11, [x16, w11, uxtw #2]
    3950:	eor	w10, w10, w11
    3954:	str	w10, [sp, #52]
    3958:	ldr	x17, [sp, #40]
    395c:	add	x18, x17, #0x4
    3960:	str	x18, [sp, #40]
    3964:	ldr	w10, [x17]
    3968:	ldr	w11, [sp, #52]
    396c:	eor	w10, w11, w10
    3970:	str	w10, [sp, #52]
    3974:	ldr	w10, [sp, #52]
    3978:	and	w10, w10, #0xff
    397c:	ldr	w10, [x8, w10, uxtw #2]
    3980:	ldr	w11, [sp, #52]
    3984:	mov	x6, x9
    3988:	lsr	w11, w11, w6
    398c:	and	w11, w11, #0xff
    3990:	ldr	w11, [x12, w11, uxtw #2]
    3994:	eor	w10, w10, w11
    3998:	ldr	w11, [sp, #52]
    399c:	mov	x7, x13
    39a0:	lsr	w11, w11, w7
    39a4:	and	w11, w11, #0xff
    39a8:	ldr	w11, [x14, w11, uxtw #2]
    39ac:	eor	w10, w10, w11
    39b0:	ldr	w11, [sp, #52]
    39b4:	mov	x17, x15
    39b8:	lsr	w11, w11, w17
    39bc:	ldr	w11, [x16, w11, uxtw #2]
    39c0:	eor	w10, w10, w11
    39c4:	str	w10, [sp, #52]
    39c8:	ldr	x18, [sp, #40]
    39cc:	add	x19, x18, #0x4
    39d0:	str	x19, [sp, #40]
    39d4:	ldr	w10, [x18]
    39d8:	ldr	w11, [sp, #52]
    39dc:	eor	w10, w11, w10
    39e0:	str	w10, [sp, #52]
    39e4:	ldr	w10, [sp, #52]
    39e8:	and	w10, w10, #0xff
    39ec:	ldr	w10, [x8, w10, uxtw #2]
    39f0:	ldr	w11, [sp, #52]
    39f4:	mov	x18, x9
    39f8:	lsr	w11, w11, w18
    39fc:	and	w11, w11, #0xff
    3a00:	ldr	w11, [x12, w11, uxtw #2]
    3a04:	eor	w10, w10, w11
    3a08:	ldr	w11, [sp, #52]
    3a0c:	mov	x19, x13
    3a10:	lsr	w11, w11, w19
    3a14:	and	w11, w11, #0xff
    3a18:	ldr	w11, [x14, w11, uxtw #2]
    3a1c:	eor	w10, w10, w11
    3a20:	ldr	w11, [sp, #52]
    3a24:	mov	x20, x15
    3a28:	lsr	w11, w11, w20
    3a2c:	ldr	w11, [x16, w11, uxtw #2]
    3a30:	eor	w10, w10, w11
    3a34:	str	w10, [sp, #52]
    3a38:	ldr	x21, [sp, #40]
    3a3c:	add	x22, x21, #0x4
    3a40:	str	x22, [sp, #40]
    3a44:	ldr	w10, [x21]
    3a48:	ldr	w11, [sp, #52]
    3a4c:	eor	w10, w11, w10
    3a50:	str	w10, [sp, #52]
    3a54:	ldr	w10, [sp, #52]
    3a58:	and	w10, w10, #0xff
    3a5c:	ldr	w10, [x8, w10, uxtw #2]
    3a60:	ldr	w11, [sp, #52]
    3a64:	mov	x21, x9
    3a68:	lsr	w11, w11, w21
    3a6c:	and	w11, w11, #0xff
    3a70:	ldr	w11, [x12, w11, uxtw #2]
    3a74:	eor	w10, w10, w11
    3a78:	ldr	w11, [sp, #52]
    3a7c:	mov	x22, x13
    3a80:	lsr	w11, w11, w22
    3a84:	and	w11, w11, #0xff
    3a88:	ldr	w11, [x14, w11, uxtw #2]
    3a8c:	eor	w10, w10, w11
    3a90:	ldr	w11, [sp, #52]
    3a94:	mov	x23, x15
    3a98:	lsr	w11, w11, w23
    3a9c:	ldr	w11, [x16, w11, uxtw #2]
    3aa0:	eor	w10, w10, w11
    3aa4:	str	w10, [sp, #52]
    3aa8:	ldr	x24, [sp, #40]
    3aac:	add	x25, x24, #0x4
    3ab0:	str	x25, [sp, #40]
    3ab4:	ldr	w10, [x24]
    3ab8:	ldr	w11, [sp, #52]
    3abc:	eor	w10, w11, w10
    3ac0:	str	w10, [sp, #52]
    3ac4:	ldr	w10, [sp, #52]
    3ac8:	and	w10, w10, #0xff
    3acc:	ldr	w10, [x8, w10, uxtw #2]
    3ad0:	ldr	w11, [sp, #52]
    3ad4:	mov	x24, x9
    3ad8:	lsr	w11, w11, w24
    3adc:	and	w11, w11, #0xff
    3ae0:	ldr	w11, [x12, w11, uxtw #2]
    3ae4:	eor	w10, w10, w11
    3ae8:	ldr	w11, [sp, #52]
    3aec:	mov	x25, x13
    3af0:	lsr	w11, w11, w25
    3af4:	and	w11, w11, #0xff
    3af8:	ldr	w11, [x14, w11, uxtw #2]
    3afc:	eor	w10, w10, w11
    3b00:	ldr	w11, [sp, #52]
    3b04:	mov	x26, x15
    3b08:	lsr	w11, w11, w26
    3b0c:	ldr	w11, [x16, w11, uxtw #2]
    3b10:	eor	w10, w10, w11
    3b14:	str	w10, [sp, #52]
    3b18:	ldr	x27, [sp, #40]
    3b1c:	add	x28, x27, #0x4
    3b20:	str	x28, [sp, #40]
    3b24:	ldr	w10, [x27]
    3b28:	ldr	w11, [sp, #52]
    3b2c:	eor	w10, w11, w10
    3b30:	str	w10, [sp, #52]
    3b34:	ldr	w10, [sp, #52]
    3b38:	and	w10, w10, #0xff
    3b3c:	ldr	w10, [x8, w10, uxtw #2]
    3b40:	ldr	w11, [sp, #52]
    3b44:	lsr	w9, w11, w9
    3b48:	and	w9, w9, #0xff
    3b4c:	ldr	w9, [x12, w9, uxtw #2]
    3b50:	eor	w9, w10, w9
    3b54:	ldr	w10, [sp, #52]
    3b58:	lsr	w10, w10, w13
    3b5c:	and	w10, w10, #0xff
    3b60:	ldr	w10, [x14, w10, uxtw #2]
    3b64:	eor	w9, w9, w10
    3b68:	ldr	w10, [sp, #52]
    3b6c:	lsr	w10, w10, w15
    3b70:	ldr	w10, [x16, w10, uxtw #2]
    3b74:	eor	w9, w9, w10
    3b78:	str	w9, [sp, #52]
    3b7c:	ldr	x27, [sp, #56]
    3b80:	subs	x27, x27, #0x20
    3b84:	str	x27, [sp, #56]
    3b88:	b	37ec <crc32_z@@ZLIB_1.2.9+0x6fc>
    3b8c:	ldr	x8, [sp, #56]
    3b90:	cmp	x8, #0x4
    3b94:	b.cc	3c1c <crc32_z@@ZLIB_1.2.9+0xb2c>  // b.lo, b.ul, b.last
    3b98:	ldr	x8, [sp, #40]
    3b9c:	add	x9, x8, #0x4
    3ba0:	str	x9, [sp, #40]
    3ba4:	ldr	w10, [x8]
    3ba8:	ldr	w11, [sp, #52]
    3bac:	eor	w10, w11, w10
    3bb0:	str	w10, [sp, #52]
    3bb4:	ldr	w10, [sp, #52]
    3bb8:	and	w10, w10, #0xff
    3bbc:	ldr	x8, [sp, #32]
    3bc0:	ldr	w10, [x8, w10, uxtw #2]
    3bc4:	ldr	w11, [sp, #52]
    3bc8:	lsr	w11, w11, #8
    3bcc:	and	w11, w11, #0xff
    3bd0:	ldr	x9, [sp, #24]
    3bd4:	ldr	w11, [x9, w11, uxtw #2]
    3bd8:	eor	w10, w10, w11
    3bdc:	ldr	w11, [sp, #52]
    3be0:	lsr	w11, w11, #16
    3be4:	and	w11, w11, #0xff
    3be8:	ldr	x12, [sp, #16]
    3bec:	ldr	w11, [x12, w11, uxtw #2]
    3bf0:	eor	w10, w10, w11
    3bf4:	ldr	w11, [sp, #52]
    3bf8:	lsr	w11, w11, #24
    3bfc:	ldr	x13, [sp, #8]
    3c00:	ldr	w11, [x13, w11, uxtw #2]
    3c04:	eor	w10, w10, w11
    3c08:	str	w10, [sp, #52]
    3c0c:	ldr	x14, [sp, #56]
    3c10:	subs	x14, x14, #0x4
    3c14:	str	x14, [sp, #56]
    3c18:	b	3b8c <crc32_z@@ZLIB_1.2.9+0xa9c>
    3c1c:	ldr	x8, [sp, #40]
    3c20:	str	x8, [sp, #64]
    3c24:	ldr	x8, [sp, #56]
    3c28:	cbz	x8, 3c68 <crc32_z@@ZLIB_1.2.9+0xb78>
    3c2c:	ldr	w8, [sp, #52]
    3c30:	ldr	x9, [sp, #64]
    3c34:	add	x10, x9, #0x1
    3c38:	str	x10, [sp, #64]
    3c3c:	ldrb	w11, [x9]
    3c40:	eor	w8, w11, w8, lsr #24
    3c44:	ldr	x9, [sp, #32]
    3c48:	ldr	w8, [x9, w8, uxtw #2]
    3c4c:	ldr	w11, [sp, #52]
    3c50:	eor	w8, w8, w11, lsl #8
    3c54:	str	w8, [sp, #52]
    3c58:	ldr	x8, [sp, #56]
    3c5c:	subs	x8, x8, #0x1
    3c60:	str	x8, [sp, #56]
    3c64:	cbnz	x8, 3c2c <crc32_z@@ZLIB_1.2.9+0xb3c>
    3c68:	ldr	w8, [sp, #52]
    3c6c:	mvn	w8, w8
    3c70:	str	w8, [sp, #52]
    3c74:	ldr	w8, [sp, #52]
    3c78:	lsr	w8, w8, #24
    3c7c:	ldr	w9, [sp, #52]
    3c80:	lsr	w9, w9, #8
    3c84:	and	w9, w9, #0xff00
    3c88:	add	w8, w9, w8, uxtb
    3c8c:	ldr	w9, [sp, #52]
    3c90:	and	w9, w9, #0xff00
    3c94:	add	w8, w8, w9, lsl #8
    3c98:	ldr	w9, [sp, #52]
    3c9c:	and	w9, w9, #0xff
    3ca0:	add	w8, w8, w9, lsl #24
    3ca4:	mov	w10, w8
    3ca8:	ubfx	x0, x10, #0, #32
    3cac:	ldp	x20, x19, [sp, #144]
    3cb0:	ldp	x22, x21, [sp, #128]
    3cb4:	ldp	x24, x23, [sp, #112]
    3cb8:	ldp	x26, x25, [sp, #96]
    3cbc:	ldp	x28, x27, [sp, #80]
    3cc0:	add	sp, sp, #0xa0
    3cc4:	ret

0000000000003cc8 <crc32@@Base>:
    3cc8:	sub	sp, sp, #0x30
    3ccc:	stp	x29, x30, [sp, #32]
    3cd0:	add	x29, sp, #0x20
    3cd4:	stur	x0, [x29, #-8]
    3cd8:	str	x1, [sp, #16]
    3cdc:	str	w2, [sp, #12]
    3ce0:	ldur	x0, [x29, #-8]
    3ce4:	ldr	x1, [sp, #16]
    3ce8:	ldr	w8, [sp, #12]
    3cec:	mov	w2, w8
    3cf0:	bl	23b0 <crc32_z@plt>
    3cf4:	ldp	x29, x30, [sp, #32]
    3cf8:	add	sp, sp, #0x30
    3cfc:	ret

0000000000003d00 <crc32_combine@@ZLIB_1.2.2>:
    3d00:	sub	sp, sp, #0x30
    3d04:	stp	x29, x30, [sp, #32]
    3d08:	add	x29, sp, #0x20
    3d0c:	stur	x0, [x29, #-8]
    3d10:	str	x1, [sp, #16]
    3d14:	str	x2, [sp, #8]
    3d18:	ldur	x0, [x29, #-8]
    3d1c:	ldr	x1, [sp, #16]
    3d20:	ldr	x2, [sp, #8]
    3d24:	bl	3d34 <crc32_combine@@ZLIB_1.2.2+0x34>
    3d28:	ldp	x29, x30, [sp, #32]
    3d2c:	add	sp, sp, #0x30
    3d30:	ret
    3d34:	stp	x29, x30, [sp, #-32]!
    3d38:	str	x28, [sp, #16]
    3d3c:	mov	x29, sp
    3d40:	sub	sp, sp, #0x240
    3d44:	stur	x0, [x29, #-16]
    3d48:	stur	x1, [x29, #-24]
    3d4c:	stur	x2, [x29, #-32]
    3d50:	ldur	x8, [x29, #-32]
    3d54:	cmp	x8, #0x0
    3d58:	cset	w9, gt
    3d5c:	tbnz	w9, #0, 3d6c <crc32_combine@@ZLIB_1.2.2+0x6c>
    3d60:	ldur	x8, [x29, #-16]
    3d64:	stur	x8, [x29, #-8]
    3d68:	b	3e7c <crc32_combine@@ZLIB_1.2.2+0x17c>
    3d6c:	mov	x8, #0x8320                	// #33568
    3d70:	movk	x8, #0xedb8, lsl #16
    3d74:	str	x8, [sp, #16]
    3d78:	mov	x8, #0x1                   	// #1
    3d7c:	stur	x8, [x29, #-48]
    3d80:	mov	w9, #0x1                   	// #1
    3d84:	stur	w9, [x29, #-36]
    3d88:	ldur	w8, [x29, #-36]
    3d8c:	cmp	w8, #0x20
    3d90:	b.ge	3dc0 <crc32_combine@@ZLIB_1.2.2+0xc0>  // b.tcont
    3d94:	ldur	x8, [x29, #-48]
    3d98:	ldursw	x9, [x29, #-36]
    3d9c:	add	x10, sp, #0x10
    3da0:	str	x8, [x10, x9, lsl #3]
    3da4:	ldur	x8, [x29, #-48]
    3da8:	lsl	x8, x8, #1
    3dac:	stur	x8, [x29, #-48]
    3db0:	ldur	w8, [x29, #-36]
    3db4:	add	w8, w8, #0x1
    3db8:	stur	w8, [x29, #-36]
    3dbc:	b	3d88 <crc32_combine@@ZLIB_1.2.2+0x88>
    3dc0:	add	x8, sp, #0x110
    3dc4:	mov	x0, x8
    3dc8:	add	x9, sp, #0x10
    3dcc:	mov	x1, x9
    3dd0:	str	x8, [sp, #8]
    3dd4:	str	x9, [sp]
    3dd8:	bl	3ec4 <crc32_combine64@@ZLIB_1.2.3.3+0x34>
    3ddc:	ldr	x0, [sp]
    3de0:	ldr	x1, [sp, #8]
    3de4:	bl	3ec4 <crc32_combine64@@ZLIB_1.2.3.3+0x34>
    3de8:	add	x0, sp, #0x110
    3dec:	add	x1, sp, #0x10
    3df0:	bl	3ec4 <crc32_combine64@@ZLIB_1.2.3.3+0x34>
    3df4:	ldur	x8, [x29, #-32]
    3df8:	and	x8, x8, #0x1
    3dfc:	cbz	x8, 3e10 <crc32_combine@@ZLIB_1.2.2+0x110>
    3e00:	ldur	x1, [x29, #-16]
    3e04:	add	x0, sp, #0x110
    3e08:	bl	3f24 <crc32_combine64@@ZLIB_1.2.3.3+0x94>
    3e0c:	stur	x0, [x29, #-16]
    3e10:	ldur	x8, [x29, #-32]
    3e14:	asr	x8, x8, #1
    3e18:	stur	x8, [x29, #-32]
    3e1c:	ldur	x8, [x29, #-32]
    3e20:	cbnz	x8, 3e28 <crc32_combine@@ZLIB_1.2.2+0x128>
    3e24:	b	3e64 <crc32_combine@@ZLIB_1.2.2+0x164>
    3e28:	add	x0, sp, #0x10
    3e2c:	add	x1, sp, #0x110
    3e30:	bl	3ec4 <crc32_combine64@@ZLIB_1.2.3.3+0x34>
    3e34:	ldur	x8, [x29, #-32]
    3e38:	and	x8, x8, #0x1
    3e3c:	cbz	x8, 3e50 <crc32_combine@@ZLIB_1.2.2+0x150>
    3e40:	ldur	x1, [x29, #-16]
    3e44:	add	x0, sp, #0x10
    3e48:	bl	3f24 <crc32_combine64@@ZLIB_1.2.3.3+0x94>
    3e4c:	stur	x0, [x29, #-16]
    3e50:	ldur	x8, [x29, #-32]
    3e54:	asr	x8, x8, #1
    3e58:	stur	x8, [x29, #-32]
    3e5c:	ldur	x8, [x29, #-32]
    3e60:	cbnz	x8, 3de8 <crc32_combine@@ZLIB_1.2.2+0xe8>
    3e64:	ldur	x8, [x29, #-24]
    3e68:	ldur	x9, [x29, #-16]
    3e6c:	eor	x8, x9, x8
    3e70:	stur	x8, [x29, #-16]
    3e74:	ldur	x8, [x29, #-16]
    3e78:	stur	x8, [x29, #-8]
    3e7c:	ldur	x0, [x29, #-8]
    3e80:	add	sp, sp, #0x240
    3e84:	ldr	x28, [sp, #16]
    3e88:	ldp	x29, x30, [sp], #32
    3e8c:	ret

0000000000003e90 <crc32_combine64@@ZLIB_1.2.3.3>:
    3e90:	sub	sp, sp, #0x30
    3e94:	stp	x29, x30, [sp, #32]
    3e98:	add	x29, sp, #0x20
    3e9c:	stur	x0, [x29, #-8]
    3ea0:	str	x1, [sp, #16]
    3ea4:	str	x2, [sp, #8]
    3ea8:	ldur	x0, [x29, #-8]
    3eac:	ldr	x1, [sp, #16]
    3eb0:	ldr	x2, [sp, #8]
    3eb4:	bl	3d34 <crc32_combine@@ZLIB_1.2.2+0x34>
    3eb8:	ldp	x29, x30, [sp, #32]
    3ebc:	add	sp, sp, #0x30
    3ec0:	ret
    3ec4:	sub	sp, sp, #0x30
    3ec8:	stp	x29, x30, [sp, #32]
    3ecc:	add	x29, sp, #0x20
    3ed0:	stur	x0, [x29, #-8]
    3ed4:	str	x1, [sp, #16]
    3ed8:	str	wzr, [sp, #12]
    3edc:	ldr	w8, [sp, #12]
    3ee0:	cmp	w8, #0x20
    3ee4:	b.ge	3f18 <crc32_combine64@@ZLIB_1.2.3.3+0x88>  // b.tcont
    3ee8:	ldr	x0, [sp, #16]
    3eec:	ldr	x8, [sp, #16]
    3ef0:	ldrsw	x9, [sp, #12]
    3ef4:	ldr	x1, [x8, x9, lsl #3]
    3ef8:	bl	3f24 <crc32_combine64@@ZLIB_1.2.3.3+0x94>
    3efc:	ldur	x8, [x29, #-8]
    3f00:	ldrsw	x9, [sp, #12]
    3f04:	str	x0, [x8, x9, lsl #3]
    3f08:	ldr	w8, [sp, #12]
    3f0c:	add	w8, w8, #0x1
    3f10:	str	w8, [sp, #12]
    3f14:	b	3edc <crc32_combine64@@ZLIB_1.2.3.3+0x4c>
    3f18:	ldp	x29, x30, [sp, #32]
    3f1c:	add	sp, sp, #0x30
    3f20:	ret
    3f24:	sub	sp, sp, #0x20
    3f28:	str	x0, [sp, #24]
    3f2c:	str	x1, [sp, #16]
    3f30:	str	xzr, [sp, #8]
    3f34:	ldr	x8, [sp, #16]
    3f38:	cbz	x8, 3f78 <crc32_combine64@@ZLIB_1.2.3.3+0xe8>
    3f3c:	ldr	x8, [sp, #16]
    3f40:	and	x8, x8, #0x1
    3f44:	cbz	x8, 3f5c <crc32_combine64@@ZLIB_1.2.3.3+0xcc>
    3f48:	ldr	x8, [sp, #24]
    3f4c:	ldr	x8, [x8]
    3f50:	ldr	x9, [sp, #8]
    3f54:	eor	x8, x9, x8
    3f58:	str	x8, [sp, #8]
    3f5c:	ldr	x8, [sp, #16]
    3f60:	lsr	x8, x8, #1
    3f64:	str	x8, [sp, #16]
    3f68:	ldr	x8, [sp, #24]
    3f6c:	add	x8, x8, #0x8
    3f70:	str	x8, [sp, #24]
    3f74:	b	3f34 <crc32_combine64@@ZLIB_1.2.3.3+0xa4>
    3f78:	ldr	x0, [sp, #8]
    3f7c:	add	sp, sp, #0x20
    3f80:	ret

0000000000003f84 <deflateInit_@@Base>:
    3f84:	sub	sp, sp, #0x30
    3f88:	stp	x29, x30, [sp, #32]
    3f8c:	add	x29, sp, #0x20
    3f90:	mov	w8, #0x8                   	// #8
    3f94:	mov	w9, #0xf                   	// #15
    3f98:	mov	w10, wzr
    3f9c:	stur	x0, [x29, #-8]
    3fa0:	stur	w1, [x29, #-12]
    3fa4:	str	x2, [sp, #8]
    3fa8:	str	w3, [sp, #4]
    3fac:	ldur	x0, [x29, #-8]
    3fb0:	ldur	w1, [x29, #-12]
    3fb4:	ldr	x6, [sp, #8]
    3fb8:	ldr	w7, [sp, #4]
    3fbc:	mov	w2, w8
    3fc0:	mov	w3, w9
    3fc4:	mov	w4, w8
    3fc8:	mov	w5, w10
    3fcc:	bl	24d0 <deflateInit2_@plt>
    3fd0:	ldp	x29, x30, [sp, #32]
    3fd4:	add	sp, sp, #0x30
    3fd8:	ret

0000000000003fdc <deflateInit2_@@Base>:
    3fdc:	sub	sp, sp, #0x70
    3fe0:	stp	x29, x30, [sp, #96]
    3fe4:	add	x29, sp, #0x60
    3fe8:	mov	w8, #0x1                   	// #1
    3fec:	adrp	x9, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    3ff0:	ldr	x9, [x9, #4056]
    3ff4:	stur	x0, [x29, #-16]
    3ff8:	stur	w1, [x29, #-20]
    3ffc:	stur	w2, [x29, #-24]
    4000:	stur	w3, [x29, #-28]
    4004:	stur	w4, [x29, #-32]
    4008:	stur	w5, [x29, #-36]
    400c:	str	x6, [sp, #48]
    4010:	str	w7, [sp, #44]
    4014:	str	w8, [sp, #28]
    4018:	ldr	x10, [sp, #48]
    401c:	str	x9, [sp, #8]
    4020:	cbz	x10, 404c <deflateInit2_@@Base+0x70>
    4024:	ldr	x8, [sp, #48]
    4028:	ldrb	w9, [x8]
    402c:	adrp	x8, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    4030:	add	x8, x8, #0x621
    4034:	ldrb	w10, [x8]
    4038:	cmp	w9, w10
    403c:	b.ne	404c <deflateInit2_@@Base+0x70>  // b.any
    4040:	ldrsw	x8, [sp, #44]
    4044:	cmp	x8, #0x70
    4048:	b.eq	4058 <deflateInit2_@@Base+0x7c>  // b.none
    404c:	mov	w8, #0xfffffffa            	// #-6
    4050:	stur	w8, [x29, #-4]
    4054:	b	449c <deflateInit2_@@Base+0x4c0>
    4058:	ldur	x8, [x29, #-16]
    405c:	cbnz	x8, 406c <deflateInit2_@@Base+0x90>
    4060:	mov	w8, #0xfffffffe            	// #-2
    4064:	stur	w8, [x29, #-4]
    4068:	b	449c <deflateInit2_@@Base+0x4c0>
    406c:	ldur	x8, [x29, #-16]
    4070:	mov	x9, xzr
    4074:	str	x9, [x8, #48]
    4078:	ldur	x8, [x29, #-16]
    407c:	ldr	x8, [x8, #64]
    4080:	cbnz	x8, 40a0 <deflateInit2_@@Base+0xc4>
    4084:	ldur	x8, [x29, #-16]
    4088:	adrp	x9, 14000 <inflateCodesUsed@@ZLIB_1.2.9+0x3ba4>
    408c:	add	x9, x9, #0x644
    4090:	str	x9, [x8, #64]
    4094:	ldur	x8, [x29, #-16]
    4098:	mov	x9, xzr
    409c:	str	x9, [x8, #80]
    40a0:	ldur	x8, [x29, #-16]
    40a4:	ldr	x8, [x8, #72]
    40a8:	cbnz	x8, 40bc <deflateInit2_@@Base+0xe0>
    40ac:	ldur	x8, [x29, #-16]
    40b0:	adrp	x9, 14000 <inflateCodesUsed@@ZLIB_1.2.9+0x3ba4>
    40b4:	add	x9, x9, #0x680
    40b8:	str	x9, [x8, #72]
    40bc:	ldur	w8, [x29, #-20]
    40c0:	mov	w9, #0xffffffff            	// #-1
    40c4:	cmp	w8, w9
    40c8:	b.ne	40d4 <deflateInit2_@@Base+0xf8>  // b.any
    40cc:	mov	w8, #0x6                   	// #6
    40d0:	stur	w8, [x29, #-20]
    40d4:	ldur	w8, [x29, #-28]
    40d8:	cmp	w8, #0x0
    40dc:	cset	w8, ge  // ge = tcont
    40e0:	tbnz	w8, #0, 40fc <deflateInit2_@@Base+0x120>
    40e4:	mov	w8, wzr
    40e8:	str	wzr, [sp, #28]
    40ec:	ldur	w9, [x29, #-28]
    40f0:	subs	w8, w8, w9
    40f4:	stur	w8, [x29, #-28]
    40f8:	b	411c <deflateInit2_@@Base+0x140>
    40fc:	ldur	w8, [x29, #-28]
    4100:	cmp	w8, #0xf
    4104:	b.le	411c <deflateInit2_@@Base+0x140>
    4108:	mov	w8, #0x2                   	// #2
    410c:	str	w8, [sp, #28]
    4110:	ldur	w8, [x29, #-28]
    4114:	subs	w8, w8, #0x10
    4118:	stur	w8, [x29, #-28]
    411c:	ldur	w8, [x29, #-32]
    4120:	cmp	w8, #0x1
    4124:	b.lt	41a8 <deflateInit2_@@Base+0x1cc>  // b.tstop
    4128:	ldur	w8, [x29, #-32]
    412c:	cmp	w8, #0x9
    4130:	b.gt	41a8 <deflateInit2_@@Base+0x1cc>
    4134:	ldur	w8, [x29, #-24]
    4138:	cmp	w8, #0x8
    413c:	b.ne	41a8 <deflateInit2_@@Base+0x1cc>  // b.any
    4140:	ldur	w8, [x29, #-28]
    4144:	cmp	w8, #0x8
    4148:	b.lt	41a8 <deflateInit2_@@Base+0x1cc>  // b.tstop
    414c:	ldur	w8, [x29, #-28]
    4150:	cmp	w8, #0xf
    4154:	b.gt	41a8 <deflateInit2_@@Base+0x1cc>
    4158:	ldur	w8, [x29, #-20]
    415c:	cmp	w8, #0x0
    4160:	cset	w8, lt  // lt = tstop
    4164:	tbnz	w8, #0, 41a8 <deflateInit2_@@Base+0x1cc>
    4168:	ldur	w8, [x29, #-20]
    416c:	cmp	w8, #0x9
    4170:	b.gt	41a8 <deflateInit2_@@Base+0x1cc>
    4174:	ldur	w8, [x29, #-36]
    4178:	cmp	w8, #0x0
    417c:	cset	w8, lt  // lt = tstop
    4180:	tbnz	w8, #0, 41a8 <deflateInit2_@@Base+0x1cc>
    4184:	ldur	w8, [x29, #-36]
    4188:	cmp	w8, #0x4
    418c:	b.gt	41a8 <deflateInit2_@@Base+0x1cc>
    4190:	ldur	w8, [x29, #-28]
    4194:	cmp	w8, #0x8
    4198:	b.ne	41b4 <deflateInit2_@@Base+0x1d8>  // b.any
    419c:	ldr	w8, [sp, #28]
    41a0:	cmp	w8, #0x1
    41a4:	b.eq	41b4 <deflateInit2_@@Base+0x1d8>  // b.none
    41a8:	mov	w8, #0xfffffffe            	// #-2
    41ac:	stur	w8, [x29, #-4]
    41b0:	b	449c <deflateInit2_@@Base+0x4c0>
    41b4:	ldur	w8, [x29, #-28]
    41b8:	cmp	w8, #0x8
    41bc:	b.ne	41c8 <deflateInit2_@@Base+0x1ec>  // b.any
    41c0:	mov	w8, #0x9                   	// #9
    41c4:	stur	w8, [x29, #-28]
    41c8:	ldur	x8, [x29, #-16]
    41cc:	ldr	x8, [x8, #64]
    41d0:	ldur	x9, [x29, #-16]
    41d4:	ldr	x0, [x9, #80]
    41d8:	mov	w1, #0x1                   	// #1
    41dc:	mov	w2, #0x1740                	// #5952
    41e0:	blr	x8
    41e4:	str	x0, [sp, #32]
    41e8:	ldr	x8, [sp, #32]
    41ec:	cbnz	x8, 41fc <deflateInit2_@@Base+0x220>
    41f0:	mov	w8, #0xfffffffc            	// #-4
    41f4:	stur	w8, [x29, #-4]
    41f8:	b	449c <deflateInit2_@@Base+0x4c0>
    41fc:	ldr	x8, [sp, #32]
    4200:	ldur	x9, [x29, #-16]
    4204:	str	x8, [x9, #56]
    4208:	ldur	x8, [x29, #-16]
    420c:	ldr	x9, [sp, #32]
    4210:	str	x8, [x9]
    4214:	ldr	x8, [sp, #32]
    4218:	mov	w10, #0x2a                  	// #42
    421c:	str	w10, [x8, #8]
    4220:	ldr	w10, [sp, #28]
    4224:	ldr	x8, [sp, #32]
    4228:	str	w10, [x8, #48]
    422c:	ldr	x8, [sp, #32]
    4230:	mov	x9, xzr
    4234:	str	x9, [x8, #56]
    4238:	ldur	w10, [x29, #-28]
    423c:	ldr	x8, [sp, #32]
    4240:	str	w10, [x8, #84]
    4244:	ldr	x8, [sp, #32]
    4248:	ldr	w10, [x8, #84]
    424c:	mov	w11, #0x1                   	// #1
    4250:	lsl	w10, w11, w10
    4254:	ldr	x8, [sp, #32]
    4258:	str	w10, [x8, #80]
    425c:	ldr	x8, [sp, #32]
    4260:	ldr	w10, [x8, #80]
    4264:	subs	w10, w10, #0x1
    4268:	ldr	x8, [sp, #32]
    426c:	str	w10, [x8, #88]
    4270:	ldur	w10, [x29, #-32]
    4274:	add	w10, w10, #0x7
    4278:	ldr	x8, [sp, #32]
    427c:	str	w10, [x8, #136]
    4280:	ldr	x8, [sp, #32]
    4284:	ldr	w10, [x8, #136]
    4288:	lsl	w10, w11, w10
    428c:	ldr	x8, [sp, #32]
    4290:	str	w10, [x8, #132]
    4294:	ldr	x8, [sp, #32]
    4298:	ldr	w10, [x8, #132]
    429c:	subs	w10, w10, #0x1
    42a0:	ldr	x8, [sp, #32]
    42a4:	str	w10, [x8, #140]
    42a8:	ldr	x8, [sp, #32]
    42ac:	ldr	w10, [x8, #136]
    42b0:	mov	w12, #0x3                   	// #3
    42b4:	add	w10, w10, #0x3
    42b8:	subs	w10, w10, #0x1
    42bc:	udiv	w10, w10, w12
    42c0:	ldr	x8, [sp, #32]
    42c4:	str	w10, [x8, #144]
    42c8:	ldur	x8, [x29, #-16]
    42cc:	ldr	x8, [x8, #64]
    42d0:	ldur	x9, [x29, #-16]
    42d4:	ldr	x0, [x9, #80]
    42d8:	ldr	x9, [sp, #32]
    42dc:	ldr	w1, [x9, #80]
    42e0:	mov	w10, #0x2                   	// #2
    42e4:	mov	w2, w10
    42e8:	str	w11, [sp, #4]
    42ec:	str	w10, [sp]
    42f0:	blr	x8
    42f4:	ldr	x8, [sp, #32]
    42f8:	str	x0, [x8, #96]
    42fc:	ldur	x8, [x29, #-16]
    4300:	ldr	x8, [x8, #64]
    4304:	ldur	x9, [x29, #-16]
    4308:	ldr	x0, [x9, #80]
    430c:	ldr	x9, [sp, #32]
    4310:	ldr	w1, [x9, #80]
    4314:	ldr	w2, [sp]
    4318:	blr	x8
    431c:	ldr	x8, [sp, #32]
    4320:	str	x0, [x8, #112]
    4324:	ldur	x8, [x29, #-16]
    4328:	ldr	x8, [x8, #64]
    432c:	ldur	x9, [x29, #-16]
    4330:	ldr	x0, [x9, #80]
    4334:	ldr	x9, [sp, #32]
    4338:	ldr	w1, [x9, #132]
    433c:	ldr	w2, [sp]
    4340:	blr	x8
    4344:	ldr	x8, [sp, #32]
    4348:	str	x0, [x8, #120]
    434c:	ldr	x8, [sp, #32]
    4350:	str	xzr, [x8, #5944]
    4354:	ldur	w10, [x29, #-32]
    4358:	add	w10, w10, #0x6
    435c:	ldr	w11, [sp, #4]
    4360:	lsl	w10, w11, w10
    4364:	ldr	x8, [sp, #32]
    4368:	str	w10, [x8, #5896]
    436c:	ldur	x8, [x29, #-16]
    4370:	ldr	x8, [x8, #64]
    4374:	ldur	x9, [x29, #-16]
    4378:	ldr	x0, [x9, #80]
    437c:	ldr	x9, [sp, #32]
    4380:	ldr	w1, [x9, #5896]
    4384:	mov	w2, #0x4                   	// #4
    4388:	blr	x8
    438c:	str	x0, [sp, #16]
    4390:	ldr	x8, [sp, #16]
    4394:	ldr	x9, [sp, #32]
    4398:	str	x8, [x9, #16]
    439c:	ldr	x8, [sp, #32]
    43a0:	ldr	w10, [x8, #5896]
    43a4:	mov	w8, w10
    43a8:	mov	x9, #0x4                   	// #4
    43ac:	mul	x8, x8, x9
    43b0:	ldr	x9, [sp, #32]
    43b4:	str	x8, [x9, #24]
    43b8:	ldr	x8, [sp, #32]
    43bc:	ldr	x8, [x8, #96]
    43c0:	cbz	x8, 43e8 <deflateInit2_@@Base+0x40c>
    43c4:	ldr	x8, [sp, #32]
    43c8:	ldr	x8, [x8, #112]
    43cc:	cbz	x8, 43e8 <deflateInit2_@@Base+0x40c>
    43d0:	ldr	x8, [sp, #32]
    43d4:	ldr	x8, [x8, #120]
    43d8:	cbz	x8, 43e8 <deflateInit2_@@Base+0x40c>
    43dc:	ldr	x8, [sp, #32]
    43e0:	ldr	x8, [x8, #16]
    43e4:	cbnz	x8, 4418 <deflateInit2_@@Base+0x43c>
    43e8:	ldr	x8, [sp, #32]
    43ec:	mov	w9, #0x29a                 	// #666
    43f0:	str	w9, [x8, #8]
    43f4:	ldr	x8, [sp, #8]
    43f8:	ldr	x10, [x8, #48]
    43fc:	ldur	x11, [x29, #-16]
    4400:	str	x10, [x11, #48]
    4404:	ldur	x0, [x29, #-16]
    4408:	bl	2590 <deflateEnd@plt>
    440c:	mov	w9, #0xfffffffc            	// #-4
    4410:	stur	w9, [x29, #-4]
    4414:	b	449c <deflateInit2_@@Base+0x4c0>
    4418:	ldr	x8, [sp, #16]
    441c:	ldr	x9, [sp, #32]
    4420:	ldr	w10, [x9, #5896]
    4424:	mov	w9, w10
    4428:	mov	x11, #0x2                   	// #2
    442c:	udiv	x9, x9, x11
    4430:	mov	x11, #0x2                   	// #2
    4434:	mul	x9, x11, x9
    4438:	add	x8, x8, x9
    443c:	ldr	x9, [sp, #32]
    4440:	str	x8, [x9, #5904]
    4444:	ldr	x8, [sp, #32]
    4448:	ldr	x8, [x8, #16]
    444c:	ldr	x9, [sp, #32]
    4450:	ldr	w10, [x9, #5896]
    4454:	mov	w9, w10
    4458:	mov	x11, #0x3                   	// #3
    445c:	mul	x9, x11, x9
    4460:	add	x8, x8, x9
    4464:	ldr	x9, [sp, #32]
    4468:	str	x8, [x9, #5888]
    446c:	ldur	w10, [x29, #-20]
    4470:	ldr	x8, [sp, #32]
    4474:	str	w10, [x8, #196]
    4478:	ldur	w10, [x29, #-36]
    447c:	ldr	x8, [sp, #32]
    4480:	str	w10, [x8, #200]
    4484:	ldur	w10, [x29, #-24]
    4488:	ldr	x8, [sp, #32]
    448c:	strb	w10, [x8, #72]
    4490:	ldur	x0, [x29, #-16]
    4494:	bl	2480 <deflateReset@plt>
    4498:	stur	w0, [x29, #-4]
    449c:	ldur	w0, [x29, #-4]
    44a0:	ldp	x29, x30, [sp, #96]
    44a4:	add	sp, sp, #0x70
    44a8:	ret

00000000000044ac <deflateEnd@@Base>:
    44ac:	sub	sp, sp, #0x30
    44b0:	stp	x29, x30, [sp, #32]
    44b4:	add	x29, sp, #0x20
    44b8:	str	x0, [sp, #16]
    44bc:	ldr	x0, [sp, #16]
    44c0:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    44c4:	cbz	w0, 44d4 <deflateEnd@@Base+0x28>
    44c8:	mov	w8, #0xfffffffe            	// #-2
    44cc:	stur	w8, [x29, #-4]
    44d0:	b	45e4 <deflateEnd@@Base+0x138>
    44d4:	ldr	x8, [sp, #16]
    44d8:	ldr	x8, [x8, #56]
    44dc:	ldr	w9, [x8, #8]
    44e0:	str	w9, [sp, #12]
    44e4:	ldr	x8, [sp, #16]
    44e8:	ldr	x8, [x8, #56]
    44ec:	ldr	x8, [x8, #16]
    44f0:	cbz	x8, 4514 <deflateEnd@@Base+0x68>
    44f4:	ldr	x8, [sp, #16]
    44f8:	ldr	x8, [x8, #72]
    44fc:	ldr	x9, [sp, #16]
    4500:	ldr	x0, [x9, #80]
    4504:	ldr	x9, [sp, #16]
    4508:	ldr	x9, [x9, #56]
    450c:	ldr	x1, [x9, #16]
    4510:	blr	x8
    4514:	ldr	x8, [sp, #16]
    4518:	ldr	x8, [x8, #56]
    451c:	ldr	x8, [x8, #120]
    4520:	cbz	x8, 4544 <deflateEnd@@Base+0x98>
    4524:	ldr	x8, [sp, #16]
    4528:	ldr	x8, [x8, #72]
    452c:	ldr	x9, [sp, #16]
    4530:	ldr	x0, [x9, #80]
    4534:	ldr	x9, [sp, #16]
    4538:	ldr	x9, [x9, #56]
    453c:	ldr	x1, [x9, #120]
    4540:	blr	x8
    4544:	ldr	x8, [sp, #16]
    4548:	ldr	x8, [x8, #56]
    454c:	ldr	x8, [x8, #112]
    4550:	cbz	x8, 4574 <deflateEnd@@Base+0xc8>
    4554:	ldr	x8, [sp, #16]
    4558:	ldr	x8, [x8, #72]
    455c:	ldr	x9, [sp, #16]
    4560:	ldr	x0, [x9, #80]
    4564:	ldr	x9, [sp, #16]
    4568:	ldr	x9, [x9, #56]
    456c:	ldr	x1, [x9, #112]
    4570:	blr	x8
    4574:	ldr	x8, [sp, #16]
    4578:	ldr	x8, [x8, #56]
    457c:	ldr	x8, [x8, #96]
    4580:	cbz	x8, 45a4 <deflateEnd@@Base+0xf8>
    4584:	ldr	x8, [sp, #16]
    4588:	ldr	x8, [x8, #72]
    458c:	ldr	x9, [sp, #16]
    4590:	ldr	x0, [x9, #80]
    4594:	ldr	x9, [sp, #16]
    4598:	ldr	x9, [x9, #56]
    459c:	ldr	x1, [x9, #96]
    45a0:	blr	x8
    45a4:	ldr	x8, [sp, #16]
    45a8:	ldr	x8, [x8, #72]
    45ac:	ldr	x9, [sp, #16]
    45b0:	ldr	x0, [x9, #80]
    45b4:	ldr	x9, [sp, #16]
    45b8:	ldr	x1, [x9, #56]
    45bc:	blr	x8
    45c0:	ldr	x8, [sp, #16]
    45c4:	mov	x9, xzr
    45c8:	str	x9, [x8, #56]
    45cc:	ldr	w10, [sp, #12]
    45d0:	mov	w11, #0xfffffffd            	// #-3
    45d4:	mov	w12, wzr
    45d8:	cmp	w10, #0x71
    45dc:	csel	w10, w11, w12, eq  // eq = none
    45e0:	stur	w10, [x29, #-4]
    45e4:	ldur	w0, [x29, #-4]
    45e8:	ldp	x29, x30, [sp, #32]
    45ec:	add	sp, sp, #0x30
    45f0:	ret

00000000000045f4 <deflateReset@@Base>:
    45f4:	sub	sp, sp, #0x20
    45f8:	stp	x29, x30, [sp, #16]
    45fc:	add	x29, sp, #0x10
    4600:	str	x0, [sp, #8]
    4604:	ldr	x0, [sp, #8]
    4608:	bl	2630 <deflateResetKeep@plt>
    460c:	str	w0, [sp, #4]
    4610:	ldr	w8, [sp, #4]
    4614:	cbnz	w8, 4624 <deflateReset@@Base+0x30>
    4618:	ldr	x8, [sp, #8]
    461c:	ldr	x0, [x8, #56]
    4620:	bl	517c <deflateResetKeep@@ZLIB_1.2.5.2+0x160>
    4624:	ldr	w0, [sp, #4]
    4628:	ldp	x29, x30, [sp, #16]
    462c:	add	sp, sp, #0x20
    4630:	ret

0000000000004634 <deflateSetDictionary@@Base>:
    4634:	sub	sp, sp, #0x50
    4638:	stp	x29, x30, [sp, #64]
    463c:	add	x29, sp, #0x40
    4640:	stur	x0, [x29, #-16]
    4644:	stur	x1, [x29, #-24]
    4648:	stur	w2, [x29, #-28]
    464c:	ldur	x0, [x29, #-16]
    4650:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    4654:	cbnz	w0, 4660 <deflateSetDictionary@@Base+0x2c>
    4658:	ldur	x8, [x29, #-24]
    465c:	cbnz	x8, 466c <deflateSetDictionary@@Base+0x38>
    4660:	mov	w8, #0xfffffffe            	// #-2
    4664:	stur	w8, [x29, #-4]
    4668:	b	4994 <deflateSetDictionary@@Base+0x360>
    466c:	ldur	x8, [x29, #-16]
    4670:	ldr	x8, [x8, #56]
    4674:	str	x8, [sp, #24]
    4678:	ldr	x8, [sp, #24]
    467c:	ldr	w9, [x8, #48]
    4680:	str	w9, [sp, #12]
    4684:	ldr	w9, [sp, #12]
    4688:	cmp	w9, #0x2
    468c:	b.eq	46b8 <deflateSetDictionary@@Base+0x84>  // b.none
    4690:	ldr	w8, [sp, #12]
    4694:	cmp	w8, #0x1
    4698:	b.ne	46ac <deflateSetDictionary@@Base+0x78>  // b.any
    469c:	ldr	x8, [sp, #24]
    46a0:	ldr	w9, [x8, #8]
    46a4:	cmp	w9, #0x2a
    46a8:	b.ne	46b8 <deflateSetDictionary@@Base+0x84>  // b.any
    46ac:	ldr	x8, [sp, #24]
    46b0:	ldr	w9, [x8, #180]
    46b4:	cbz	w9, 46c4 <deflateSetDictionary@@Base+0x90>
    46b8:	mov	w8, #0xfffffffe            	// #-2
    46bc:	stur	w8, [x29, #-4]
    46c0:	b	4994 <deflateSetDictionary@@Base+0x360>
    46c4:	ldr	w8, [sp, #12]
    46c8:	cmp	w8, #0x1
    46cc:	b.ne	46ec <deflateSetDictionary@@Base+0xb8>  // b.any
    46d0:	ldur	x8, [x29, #-16]
    46d4:	ldr	x0, [x8, #96]
    46d8:	ldur	x1, [x29, #-24]
    46dc:	ldur	w2, [x29, #-28]
    46e0:	bl	2560 <adler32@plt>
    46e4:	ldur	x8, [x29, #-16]
    46e8:	str	x0, [x8, #96]
    46ec:	ldr	x8, [sp, #24]
    46f0:	str	wzr, [x8, #48]
    46f4:	ldur	w9, [x29, #-28]
    46f8:	ldr	x8, [sp, #24]
    46fc:	ldr	w10, [x8, #80]
    4700:	cmp	w9, w10
    4704:	b.cc	47b0 <deflateSetDictionary@@Base+0x17c>  // b.lo, b.ul, b.last
    4708:	ldr	w8, [sp, #12]
    470c:	cbnz	w8, 4780 <deflateSetDictionary@@Base+0x14c>
    4710:	ldr	x8, [sp, #24]
    4714:	ldr	x8, [x8, #120]
    4718:	ldr	x9, [sp, #24]
    471c:	ldr	w10, [x9, #132]
    4720:	subs	w10, w10, #0x1
    4724:	mov	w9, w10
    4728:	ubfx	x9, x9, #0, #32
    472c:	mov	x11, #0x2                   	// #2
    4730:	mul	x9, x11, x9
    4734:	add	x8, x8, x9
    4738:	mov	w10, #0x0                   	// #0
    473c:	strh	w10, [x8]
    4740:	ldr	x8, [sp, #24]
    4744:	ldr	x0, [x8, #120]
    4748:	ldr	x8, [sp, #24]
    474c:	ldr	w10, [x8, #132]
    4750:	subs	w10, w10, #0x1
    4754:	mov	w12, #0x2                   	// #2
    4758:	umull	x2, w10, w12
    475c:	mov	w10, wzr
    4760:	mov	w1, w10
    4764:	bl	24a0 <memset@plt>
    4768:	ldr	x8, [sp, #24]
    476c:	str	wzr, [x8, #172]
    4770:	ldr	x8, [sp, #24]
    4774:	str	xzr, [x8, #152]
    4778:	ldr	x8, [sp, #24]
    477c:	str	wzr, [x8, #5932]
    4780:	ldur	w8, [x29, #-28]
    4784:	ldr	x9, [sp, #24]
    4788:	ldr	w10, [x9, #80]
    478c:	subs	w8, w8, w10
    4790:	ldur	x9, [x29, #-24]
    4794:	mov	w11, w8
    4798:	ubfx	x11, x11, #0, #32
    479c:	add	x9, x9, x11
    47a0:	stur	x9, [x29, #-24]
    47a4:	ldr	x9, [sp, #24]
    47a8:	ldr	w8, [x9, #80]
    47ac:	stur	w8, [x29, #-28]
    47b0:	ldur	x8, [x29, #-16]
    47b4:	ldr	w9, [x8, #8]
    47b8:	str	w9, [sp, #8]
    47bc:	ldur	x8, [x29, #-16]
    47c0:	ldr	x8, [x8]
    47c4:	str	x8, [sp]
    47c8:	ldur	w9, [x29, #-28]
    47cc:	ldur	x8, [x29, #-16]
    47d0:	str	w9, [x8, #8]
    47d4:	ldur	x8, [x29, #-24]
    47d8:	ldur	x10, [x29, #-16]
    47dc:	str	x8, [x10]
    47e0:	ldr	x0, [sp, #24]
    47e4:	bl	4a9c <deflateSetDictionary@@Base+0x468>
    47e8:	ldr	x8, [sp, #24]
    47ec:	ldr	w9, [x8, #180]
    47f0:	cmp	w9, #0x3
    47f4:	b.cc	490c <deflateSetDictionary@@Base+0x2d8>  // b.lo, b.ul, b.last
    47f8:	ldr	x8, [sp, #24]
    47fc:	ldr	w9, [x8, #172]
    4800:	str	w9, [sp, #20]
    4804:	ldr	x8, [sp, #24]
    4808:	ldr	w9, [x8, #180]
    480c:	subs	w9, w9, #0x2
    4810:	str	w9, [sp, #16]
    4814:	ldr	x8, [sp, #24]
    4818:	ldr	w9, [x8, #128]
    481c:	ldr	x8, [sp, #24]
    4820:	ldr	w10, [x8, #144]
    4824:	lsl	w9, w9, w10
    4828:	ldr	x8, [sp, #24]
    482c:	ldr	x8, [x8, #96]
    4830:	ldr	w10, [sp, #20]
    4834:	add	w10, w10, #0x3
    4838:	subs	w10, w10, #0x1
    483c:	ldrb	w10, [x8, w10, uxtw]
    4840:	eor	w9, w9, w10
    4844:	ldr	x8, [sp, #24]
    4848:	ldr	w10, [x8, #140]
    484c:	and	w9, w9, w10
    4850:	ldr	x8, [sp, #24]
    4854:	str	w9, [x8, #128]
    4858:	ldr	x8, [sp, #24]
    485c:	ldr	x8, [x8, #120]
    4860:	ldr	x11, [sp, #24]
    4864:	ldr	w9, [x11, #128]
    4868:	mov	w11, w9
    486c:	mov	x12, #0x2                   	// #2
    4870:	mul	x11, x12, x11
    4874:	add	x8, x8, x11
    4878:	ldrh	w9, [x8]
    487c:	ldr	x8, [sp, #24]
    4880:	ldr	x8, [x8, #112]
    4884:	ldr	w10, [sp, #20]
    4888:	ldr	x11, [sp, #24]
    488c:	ldr	w13, [x11, #88]
    4890:	and	w10, w10, w13
    4894:	mov	w11, w10
    4898:	ubfx	x11, x11, #0, #32
    489c:	mul	x11, x12, x11
    48a0:	add	x8, x8, x11
    48a4:	strh	w9, [x8]
    48a8:	ldr	w9, [sp, #20]
    48ac:	ldr	x8, [sp, #24]
    48b0:	ldr	x8, [x8, #120]
    48b4:	ldr	x11, [sp, #24]
    48b8:	ldr	w10, [x11, #128]
    48bc:	mov	w11, w10
    48c0:	mul	x11, x12, x11
    48c4:	add	x8, x8, x11
    48c8:	strh	w9, [x8]
    48cc:	ldr	w9, [sp, #20]
    48d0:	add	w9, w9, #0x1
    48d4:	str	w9, [sp, #20]
    48d8:	ldr	w8, [sp, #16]
    48dc:	subs	w8, w8, #0x1
    48e0:	str	w8, [sp, #16]
    48e4:	cbnz	w8, 4814 <deflateSetDictionary@@Base+0x1e0>
    48e8:	ldr	w8, [sp, #20]
    48ec:	ldr	x9, [sp, #24]
    48f0:	str	w8, [x9, #172]
    48f4:	ldr	x9, [sp, #24]
    48f8:	mov	w8, #0x2                   	// #2
    48fc:	str	w8, [x9, #180]
    4900:	ldr	x0, [sp, #24]
    4904:	bl	4a9c <deflateSetDictionary@@Base+0x468>
    4908:	b	47e8 <deflateSetDictionary@@Base+0x1b4>
    490c:	ldr	x8, [sp, #24]
    4910:	ldr	w9, [x8, #180]
    4914:	ldr	x8, [sp, #24]
    4918:	ldr	w10, [x8, #172]
    491c:	add	w9, w10, w9
    4920:	str	w9, [x8, #172]
    4924:	ldr	x8, [sp, #24]
    4928:	ldr	w9, [x8, #172]
    492c:	mov	w8, w9
    4930:	ldr	x11, [sp, #24]
    4934:	str	x8, [x11, #152]
    4938:	ldr	x8, [sp, #24]
    493c:	ldr	w9, [x8, #180]
    4940:	ldr	x8, [sp, #24]
    4944:	str	w9, [x8, #5932]
    4948:	ldr	x8, [sp, #24]
    494c:	str	wzr, [x8, #180]
    4950:	ldr	x8, [sp, #24]
    4954:	mov	w9, #0x2                   	// #2
    4958:	str	w9, [x8, #184]
    495c:	ldr	x8, [sp, #24]
    4960:	str	w9, [x8, #160]
    4964:	ldr	x8, [sp, #24]
    4968:	str	wzr, [x8, #168]
    496c:	ldr	x8, [sp]
    4970:	ldur	x11, [x29, #-16]
    4974:	str	x8, [x11]
    4978:	ldr	w9, [sp, #8]
    497c:	ldur	x8, [x29, #-16]
    4980:	str	w9, [x8, #8]
    4984:	ldr	w9, [sp, #12]
    4988:	ldr	x8, [sp, #24]
    498c:	str	w9, [x8, #48]
    4990:	stur	wzr, [x29, #-4]
    4994:	ldur	w0, [x29, #-4]
    4998:	ldp	x29, x30, [sp, #64]
    499c:	add	sp, sp, #0x50
    49a0:	ret
    49a4:	sub	sp, sp, #0x20
    49a8:	str	x0, [sp, #16]
    49ac:	ldr	x8, [sp, #16]
    49b0:	cbz	x8, 49cc <deflateSetDictionary@@Base+0x398>
    49b4:	ldr	x8, [sp, #16]
    49b8:	ldr	x8, [x8, #64]
    49bc:	cbz	x8, 49cc <deflateSetDictionary@@Base+0x398>
    49c0:	ldr	x8, [sp, #16]
    49c4:	ldr	x8, [x8, #72]
    49c8:	cbnz	x8, 49d8 <deflateSetDictionary@@Base+0x3a4>
    49cc:	mov	w8, #0x1                   	// #1
    49d0:	str	w8, [sp, #28]
    49d4:	b	4a90 <deflateSetDictionary@@Base+0x45c>
    49d8:	ldr	x8, [sp, #16]
    49dc:	ldr	x8, [x8, #56]
    49e0:	str	x8, [sp, #8]
    49e4:	ldr	x8, [sp, #8]
    49e8:	cbz	x8, 4a80 <deflateSetDictionary@@Base+0x44c>
    49ec:	ldr	x8, [sp, #8]
    49f0:	ldr	x8, [x8]
    49f4:	ldr	x9, [sp, #16]
    49f8:	cmp	x8, x9
    49fc:	b.ne	4a80 <deflateSetDictionary@@Base+0x44c>  // b.any
    4a00:	ldr	x8, [sp, #8]
    4a04:	ldr	w9, [x8, #8]
    4a08:	cmp	w9, #0x2a
    4a0c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a10:	ldr	x8, [sp, #8]
    4a14:	ldr	w9, [x8, #8]
    4a18:	cmp	w9, #0x39
    4a1c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a20:	ldr	x8, [sp, #8]
    4a24:	ldr	w9, [x8, #8]
    4a28:	cmp	w9, #0x45
    4a2c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a30:	ldr	x8, [sp, #8]
    4a34:	ldr	w9, [x8, #8]
    4a38:	cmp	w9, #0x49
    4a3c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a40:	ldr	x8, [sp, #8]
    4a44:	ldr	w9, [x8, #8]
    4a48:	cmp	w9, #0x5b
    4a4c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a50:	ldr	x8, [sp, #8]
    4a54:	ldr	w9, [x8, #8]
    4a58:	cmp	w9, #0x67
    4a5c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a60:	ldr	x8, [sp, #8]
    4a64:	ldr	w9, [x8, #8]
    4a68:	cmp	w9, #0x71
    4a6c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a70:	ldr	x8, [sp, #8]
    4a74:	ldr	w9, [x8, #8]
    4a78:	cmp	w9, #0x29a
    4a7c:	b.eq	4a8c <deflateSetDictionary@@Base+0x458>  // b.none
    4a80:	mov	w8, #0x1                   	// #1
    4a84:	str	w8, [sp, #28]
    4a88:	b	4a90 <deflateSetDictionary@@Base+0x45c>
    4a8c:	str	wzr, [sp, #28]
    4a90:	ldr	w0, [sp, #28]
    4a94:	add	sp, sp, #0x20
    4a98:	ret
    4a9c:	sub	sp, sp, #0x40
    4aa0:	stp	x29, x30, [sp, #48]
    4aa4:	add	x29, sp, #0x30
    4aa8:	stur	x0, [x29, #-8]
    4aac:	ldur	x8, [x29, #-8]
    4ab0:	ldr	w9, [x8, #80]
    4ab4:	stur	w9, [x29, #-20]
    4ab8:	ldur	x8, [x29, #-8]
    4abc:	ldr	x8, [x8, #104]
    4ac0:	ldur	x9, [x29, #-8]
    4ac4:	ldr	w10, [x9, #180]
    4ac8:	mov	w9, w10
    4acc:	subs	x8, x8, x9
    4ad0:	ldur	x9, [x29, #-8]
    4ad4:	ldr	w10, [x9, #172]
    4ad8:	mov	w9, w10
    4adc:	subs	x8, x8, x9
    4ae0:	stur	w8, [x29, #-16]
    4ae4:	ldur	x9, [x29, #-8]
    4ae8:	ldr	w8, [x9, #172]
    4aec:	ldur	w10, [x29, #-20]
    4af0:	ldur	x9, [x29, #-8]
    4af4:	ldr	w11, [x9, #80]
    4af8:	subs	w11, w11, #0x106
    4afc:	add	w10, w10, w11
    4b00:	cmp	w8, w10
    4b04:	b.cc	4b94 <deflateSetDictionary@@Base+0x560>  // b.lo, b.ul, b.last
    4b08:	ldur	x8, [x29, #-8]
    4b0c:	ldr	x0, [x8, #96]
    4b10:	ldur	x8, [x29, #-8]
    4b14:	ldr	x8, [x8, #96]
    4b18:	ldur	w9, [x29, #-20]
    4b1c:	mov	w10, w9
    4b20:	add	x1, x8, x10
    4b24:	ldur	w9, [x29, #-20]
    4b28:	ldur	w11, [x29, #-16]
    4b2c:	subs	w9, w9, w11
    4b30:	mov	w8, w9
    4b34:	ubfx	x2, x8, #0, #32
    4b38:	bl	23a0 <memcpy@plt>
    4b3c:	ldur	w9, [x29, #-20]
    4b40:	ldur	x8, [x29, #-8]
    4b44:	ldr	w11, [x8, #176]
    4b48:	subs	w9, w11, w9
    4b4c:	str	w9, [x8, #176]
    4b50:	ldur	w9, [x29, #-20]
    4b54:	ldur	x8, [x29, #-8]
    4b58:	ldr	w11, [x8, #172]
    4b5c:	subs	w9, w11, w9
    4b60:	str	w9, [x8, #172]
    4b64:	ldur	w9, [x29, #-20]
    4b68:	mov	w8, w9
    4b6c:	ldur	x10, [x29, #-8]
    4b70:	ldr	x12, [x10, #152]
    4b74:	subs	x8, x12, x8
    4b78:	str	x8, [x10, #152]
    4b7c:	ldur	x0, [x29, #-8]
    4b80:	bl	6ac8 <deflate@@Base+0x136c>
    4b84:	ldur	w9, [x29, #-20]
    4b88:	ldur	w11, [x29, #-16]
    4b8c:	add	w9, w11, w9
    4b90:	stur	w9, [x29, #-16]
    4b94:	ldur	x8, [x29, #-8]
    4b98:	ldr	x8, [x8]
    4b9c:	ldr	w9, [x8, #8]
    4ba0:	cbnz	w9, 4ba8 <deflateSetDictionary@@Base+0x574>
    4ba4:	b	4dc4 <deflateSetDictionary@@Base+0x790>
    4ba8:	ldur	x8, [x29, #-8]
    4bac:	ldr	x0, [x8]
    4bb0:	ldur	x8, [x29, #-8]
    4bb4:	ldr	x8, [x8, #96]
    4bb8:	ldur	x9, [x29, #-8]
    4bbc:	ldr	w10, [x9, #172]
    4bc0:	mov	w9, w10
    4bc4:	add	x8, x8, x9
    4bc8:	ldur	x9, [x29, #-8]
    4bcc:	ldr	w10, [x9, #180]
    4bd0:	mov	w9, w10
    4bd4:	add	x1, x8, x9
    4bd8:	ldur	w2, [x29, #-16]
    4bdc:	bl	9ec4 <deflateCopy@@Base+0x19e0>
    4be0:	stur	w0, [x29, #-12]
    4be4:	ldur	w10, [x29, #-12]
    4be8:	ldur	x8, [x29, #-8]
    4bec:	ldr	w11, [x8, #180]
    4bf0:	add	w10, w11, w10
    4bf4:	str	w10, [x8, #180]
    4bf8:	ldur	x8, [x29, #-8]
    4bfc:	ldr	w10, [x8, #180]
    4c00:	ldur	x8, [x29, #-8]
    4c04:	ldr	w11, [x8, #5932]
    4c08:	add	w10, w10, w11
    4c0c:	cmp	w10, #0x3
    4c10:	b.cc	4d8c <deflateSetDictionary@@Base+0x758>  // b.lo, b.ul, b.last
    4c14:	ldur	x8, [x29, #-8]
    4c18:	ldr	w9, [x8, #172]
    4c1c:	ldur	x8, [x29, #-8]
    4c20:	ldr	w10, [x8, #5932]
    4c24:	subs	w9, w9, w10
    4c28:	str	w9, [sp, #24]
    4c2c:	ldur	x8, [x29, #-8]
    4c30:	ldr	x8, [x8, #96]
    4c34:	ldr	w9, [sp, #24]
    4c38:	mov	w11, w9
    4c3c:	ldrb	w9, [x8, x11]
    4c40:	ldur	x8, [x29, #-8]
    4c44:	str	w9, [x8, #128]
    4c48:	ldur	x8, [x29, #-8]
    4c4c:	ldr	w9, [x8, #128]
    4c50:	ldur	x8, [x29, #-8]
    4c54:	ldr	w10, [x8, #144]
    4c58:	lsl	w9, w9, w10
    4c5c:	ldur	x8, [x29, #-8]
    4c60:	ldr	x8, [x8, #96]
    4c64:	ldr	w10, [sp, #24]
    4c68:	add	w10, w10, #0x1
    4c6c:	ldrb	w10, [x8, w10, uxtw]
    4c70:	eor	w9, w9, w10
    4c74:	ldur	x8, [x29, #-8]
    4c78:	ldr	w10, [x8, #140]
    4c7c:	and	w9, w9, w10
    4c80:	ldur	x8, [x29, #-8]
    4c84:	str	w9, [x8, #128]
    4c88:	ldur	x8, [x29, #-8]
    4c8c:	ldr	w9, [x8, #5932]
    4c90:	cbz	w9, 4d8c <deflateSetDictionary@@Base+0x758>
    4c94:	ldur	x8, [x29, #-8]
    4c98:	ldr	w9, [x8, #128]
    4c9c:	ldur	x8, [x29, #-8]
    4ca0:	ldr	w10, [x8, #144]
    4ca4:	lsl	w9, w9, w10
    4ca8:	ldur	x8, [x29, #-8]
    4cac:	ldr	x8, [x8, #96]
    4cb0:	ldr	w10, [sp, #24]
    4cb4:	add	w10, w10, #0x3
    4cb8:	subs	w10, w10, #0x1
    4cbc:	ldrb	w10, [x8, w10, uxtw]
    4cc0:	eor	w9, w9, w10
    4cc4:	ldur	x8, [x29, #-8]
    4cc8:	ldr	w10, [x8, #140]
    4ccc:	and	w9, w9, w10
    4cd0:	ldur	x8, [x29, #-8]
    4cd4:	str	w9, [x8, #128]
    4cd8:	ldur	x8, [x29, #-8]
    4cdc:	ldr	x8, [x8, #120]
    4ce0:	ldur	x11, [x29, #-8]
    4ce4:	ldr	w9, [x11, #128]
    4ce8:	mov	w11, w9
    4cec:	mov	x12, #0x2                   	// #2
    4cf0:	mul	x11, x12, x11
    4cf4:	add	x8, x8, x11
    4cf8:	ldrh	w9, [x8]
    4cfc:	ldur	x8, [x29, #-8]
    4d00:	ldr	x8, [x8, #112]
    4d04:	ldr	w10, [sp, #24]
    4d08:	ldur	x11, [x29, #-8]
    4d0c:	ldr	w13, [x11, #88]
    4d10:	and	w10, w10, w13
    4d14:	mov	w11, w10
    4d18:	ubfx	x11, x11, #0, #32
    4d1c:	mul	x11, x12, x11
    4d20:	add	x8, x8, x11
    4d24:	strh	w9, [x8]
    4d28:	ldr	w9, [sp, #24]
    4d2c:	ldur	x8, [x29, #-8]
    4d30:	ldr	x8, [x8, #120]
    4d34:	ldur	x11, [x29, #-8]
    4d38:	ldr	w10, [x11, #128]
    4d3c:	mov	w11, w10
    4d40:	mul	x11, x12, x11
    4d44:	add	x8, x8, x11
    4d48:	strh	w9, [x8]
    4d4c:	ldr	w9, [sp, #24]
    4d50:	add	w9, w9, #0x1
    4d54:	str	w9, [sp, #24]
    4d58:	ldur	x8, [x29, #-8]
    4d5c:	ldr	w9, [x8, #5932]
    4d60:	subs	w9, w9, #0x1
    4d64:	str	w9, [x8, #5932]
    4d68:	ldur	x8, [x29, #-8]
    4d6c:	ldr	w9, [x8, #180]
    4d70:	ldur	x8, [x29, #-8]
    4d74:	ldr	w10, [x8, #5932]
    4d78:	add	w9, w9, w10
    4d7c:	cmp	w9, #0x3
    4d80:	b.cs	4d88 <deflateSetDictionary@@Base+0x754>  // b.hs, b.nlast
    4d84:	b	4d8c <deflateSetDictionary@@Base+0x758>
    4d88:	b	4c88 <deflateSetDictionary@@Base+0x654>
    4d8c:	ldur	x8, [x29, #-8]
    4d90:	ldr	w9, [x8, #180]
    4d94:	mov	w10, #0x0                   	// #0
    4d98:	cmp	w9, #0x106
    4d9c:	str	w10, [sp, #4]
    4da0:	b.cs	4dbc <deflateSetDictionary@@Base+0x788>  // b.hs, b.nlast
    4da4:	ldur	x8, [x29, #-8]
    4da8:	ldr	x8, [x8]
    4dac:	ldr	w9, [x8, #8]
    4db0:	cmp	w9, #0x0
    4db4:	cset	w9, ne  // ne = any
    4db8:	str	w9, [sp, #4]
    4dbc:	ldr	w8, [sp, #4]
    4dc0:	tbnz	w8, #0, 4ab8 <deflateSetDictionary@@Base+0x484>
    4dc4:	ldur	x8, [x29, #-8]
    4dc8:	ldr	x8, [x8, #5944]
    4dcc:	ldur	x9, [x29, #-8]
    4dd0:	ldr	x9, [x9, #104]
    4dd4:	cmp	x8, x9
    4dd8:	b.cs	4f18 <deflateSetDictionary@@Base+0x8e4>  // b.hs, b.nlast
    4ddc:	ldur	x8, [x29, #-8]
    4de0:	ldr	w9, [x8, #172]
    4de4:	mov	w8, w9
    4de8:	ldur	x10, [x29, #-8]
    4dec:	ldr	w9, [x10, #180]
    4df0:	mov	w10, w9
    4df4:	add	x8, x8, x10
    4df8:	str	x8, [sp, #16]
    4dfc:	ldur	x8, [x29, #-8]
    4e00:	ldr	x8, [x8, #5944]
    4e04:	ldr	x10, [sp, #16]
    4e08:	cmp	x8, x10
    4e0c:	b.cs	4e74 <deflateSetDictionary@@Base+0x840>  // b.hs, b.nlast
    4e10:	ldur	x8, [x29, #-8]
    4e14:	ldr	x8, [x8, #104]
    4e18:	ldr	x9, [sp, #16]
    4e1c:	subs	x8, x8, x9
    4e20:	str	x8, [sp, #8]
    4e24:	ldr	x8, [sp, #8]
    4e28:	cmp	x8, #0x102
    4e2c:	b.ls	4e38 <deflateSetDictionary@@Base+0x804>  // b.plast
    4e30:	mov	x8, #0x102                 	// #258
    4e34:	str	x8, [sp, #8]
    4e38:	ldur	x8, [x29, #-8]
    4e3c:	ldr	x8, [x8, #96]
    4e40:	ldr	x9, [sp, #16]
    4e44:	add	x0, x8, x9
    4e48:	ldr	x8, [sp, #8]
    4e4c:	and	x2, x8, #0xffffffff
    4e50:	mov	w10, wzr
    4e54:	mov	w1, w10
    4e58:	bl	24a0 <memset@plt>
    4e5c:	ldr	x8, [sp, #16]
    4e60:	ldr	x9, [sp, #8]
    4e64:	add	x8, x8, x9
    4e68:	ldur	x9, [x29, #-8]
    4e6c:	str	x8, [x9, #5944]
    4e70:	b	4f18 <deflateSetDictionary@@Base+0x8e4>
    4e74:	ldur	x8, [x29, #-8]
    4e78:	ldr	x8, [x8, #5944]
    4e7c:	ldr	x9, [sp, #16]
    4e80:	add	x9, x9, #0x102
    4e84:	cmp	x8, x9
    4e88:	b.cs	4f18 <deflateSetDictionary@@Base+0x8e4>  // b.hs, b.nlast
    4e8c:	ldr	x8, [sp, #16]
    4e90:	add	x8, x8, #0x102
    4e94:	ldur	x9, [x29, #-8]
    4e98:	ldr	x9, [x9, #5944]
    4e9c:	subs	x8, x8, x9
    4ea0:	str	x8, [sp, #8]
    4ea4:	ldr	x8, [sp, #8]
    4ea8:	ldur	x9, [x29, #-8]
    4eac:	ldr	x9, [x9, #104]
    4eb0:	ldur	x10, [x29, #-8]
    4eb4:	ldr	x10, [x10, #5944]
    4eb8:	subs	x9, x9, x10
    4ebc:	cmp	x8, x9
    4ec0:	b.ls	4edc <deflateSetDictionary@@Base+0x8a8>  // b.plast
    4ec4:	ldur	x8, [x29, #-8]
    4ec8:	ldr	x8, [x8, #104]
    4ecc:	ldur	x9, [x29, #-8]
    4ed0:	ldr	x9, [x9, #5944]
    4ed4:	subs	x8, x8, x9
    4ed8:	str	x8, [sp, #8]
    4edc:	ldur	x8, [x29, #-8]
    4ee0:	ldr	x8, [x8, #96]
    4ee4:	ldur	x9, [x29, #-8]
    4ee8:	ldr	x9, [x9, #5944]
    4eec:	add	x0, x8, x9
    4ef0:	ldr	x8, [sp, #8]
    4ef4:	and	x2, x8, #0xffffffff
    4ef8:	mov	w10, wzr
    4efc:	mov	w1, w10
    4f00:	bl	24a0 <memset@plt>
    4f04:	ldr	x8, [sp, #8]
    4f08:	ldur	x9, [x29, #-8]
    4f0c:	ldr	x11, [x9, #5944]
    4f10:	add	x8, x11, x8
    4f14:	str	x8, [x9, #5944]
    4f18:	ldp	x29, x30, [sp, #48]
    4f1c:	add	sp, sp, #0x40
    4f20:	ret

0000000000004f24 <deflateGetDictionary@@ZLIB_1.2.9>:
    4f24:	sub	sp, sp, #0x40
    4f28:	stp	x29, x30, [sp, #48]
    4f2c:	add	x29, sp, #0x30
    4f30:	stur	x0, [x29, #-16]
    4f34:	str	x1, [sp, #24]
    4f38:	str	x2, [sp, #16]
    4f3c:	ldur	x0, [x29, #-16]
    4f40:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    4f44:	cbz	w0, 4f54 <deflateGetDictionary@@ZLIB_1.2.9+0x30>
    4f48:	mov	w8, #0xfffffffe            	// #-2
    4f4c:	stur	w8, [x29, #-4]
    4f50:	b	500c <deflateGetDictionary@@ZLIB_1.2.9+0xe8>
    4f54:	ldur	x8, [x29, #-16]
    4f58:	ldr	x8, [x8, #56]
    4f5c:	str	x8, [sp, #8]
    4f60:	ldr	x8, [sp, #8]
    4f64:	ldr	w9, [x8, #172]
    4f68:	ldr	x8, [sp, #8]
    4f6c:	ldr	w10, [x8, #180]
    4f70:	add	w9, w9, w10
    4f74:	str	w9, [sp, #4]
    4f78:	ldr	w9, [sp, #4]
    4f7c:	ldr	x8, [sp, #8]
    4f80:	ldr	w10, [x8, #80]
    4f84:	cmp	w9, w10
    4f88:	b.ls	4f98 <deflateGetDictionary@@ZLIB_1.2.9+0x74>  // b.plast
    4f8c:	ldr	x8, [sp, #8]
    4f90:	ldr	w9, [x8, #80]
    4f94:	str	w9, [sp, #4]
    4f98:	ldr	x8, [sp, #24]
    4f9c:	cbz	x8, 4ff4 <deflateGetDictionary@@ZLIB_1.2.9+0xd0>
    4fa0:	ldr	w8, [sp, #4]
    4fa4:	cbz	w8, 4ff4 <deflateGetDictionary@@ZLIB_1.2.9+0xd0>
    4fa8:	ldr	x0, [sp, #24]
    4fac:	ldr	x8, [sp, #8]
    4fb0:	ldr	x8, [x8, #96]
    4fb4:	ldr	x9, [sp, #8]
    4fb8:	ldr	w10, [x9, #172]
    4fbc:	mov	w9, w10
    4fc0:	add	x8, x8, x9
    4fc4:	ldr	x9, [sp, #8]
    4fc8:	ldr	w10, [x9, #180]
    4fcc:	mov	w9, w10
    4fd0:	add	x8, x8, x9
    4fd4:	ldr	w10, [sp, #4]
    4fd8:	mov	w9, w10
    4fdc:	mov	x11, xzr
    4fe0:	subs	x9, x11, x9
    4fe4:	add	x1, x8, x9
    4fe8:	ldr	w10, [sp, #4]
    4fec:	mov	w2, w10
    4ff0:	bl	23a0 <memcpy@plt>
    4ff4:	ldr	x8, [sp, #16]
    4ff8:	cbz	x8, 5008 <deflateGetDictionary@@ZLIB_1.2.9+0xe4>
    4ffc:	ldr	w8, [sp, #4]
    5000:	ldr	x9, [sp, #16]
    5004:	str	w8, [x9]
    5008:	stur	wzr, [x29, #-4]
    500c:	ldur	w0, [x29, #-4]
    5010:	ldp	x29, x30, [sp, #48]
    5014:	add	sp, sp, #0x40
    5018:	ret

000000000000501c <deflateResetKeep@@ZLIB_1.2.5.2>:
    501c:	sub	sp, sp, #0x40
    5020:	stp	x29, x30, [sp, #48]
    5024:	add	x29, sp, #0x30
    5028:	stur	x0, [x29, #-16]
    502c:	ldur	x0, [x29, #-16]
    5030:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    5034:	cbz	w0, 5044 <deflateResetKeep@@ZLIB_1.2.5.2+0x28>
    5038:	mov	w8, #0xfffffffe            	// #-2
    503c:	stur	w8, [x29, #-4]
    5040:	b	516c <deflateResetKeep@@ZLIB_1.2.5.2+0x150>
    5044:	ldur	x8, [x29, #-16]
    5048:	mov	x9, xzr
    504c:	str	xzr, [x8, #40]
    5050:	ldur	x8, [x29, #-16]
    5054:	str	xzr, [x8, #16]
    5058:	ldur	x8, [x29, #-16]
    505c:	str	x9, [x8, #48]
    5060:	ldur	x8, [x29, #-16]
    5064:	mov	w10, #0x2                   	// #2
    5068:	str	w10, [x8, #88]
    506c:	ldur	x8, [x29, #-16]
    5070:	ldr	x8, [x8, #56]
    5074:	str	x8, [sp, #24]
    5078:	ldr	x8, [sp, #24]
    507c:	str	xzr, [x8, #40]
    5080:	ldr	x8, [sp, #24]
    5084:	ldr	x8, [x8, #16]
    5088:	ldr	x9, [sp, #24]
    508c:	str	x8, [x9, #32]
    5090:	ldr	x8, [sp, #24]
    5094:	ldr	w10, [x8, #48]
    5098:	cmp	w10, #0x0
    509c:	cset	w10, ge  // ge = tcont
    50a0:	tbnz	w10, #0, 50bc <deflateResetKeep@@ZLIB_1.2.5.2+0xa0>
    50a4:	ldr	x8, [sp, #24]
    50a8:	ldr	w9, [x8, #48]
    50ac:	mov	w10, wzr
    50b0:	subs	w9, w10, w9
    50b4:	ldr	x8, [sp, #24]
    50b8:	str	w9, [x8, #48]
    50bc:	ldr	x8, [sp, #24]
    50c0:	ldr	w9, [x8, #48]
    50c4:	cmp	w9, #0x2
    50c8:	b.ne	50d8 <deflateResetKeep@@ZLIB_1.2.5.2+0xbc>  // b.any
    50cc:	mov	w8, #0x39                  	// #57
    50d0:	str	w8, [sp, #20]
    50d4:	b	50f4 <deflateResetKeep@@ZLIB_1.2.5.2+0xd8>
    50d8:	ldr	x8, [sp, #24]
    50dc:	ldr	w9, [x8, #48]
    50e0:	mov	w10, #0x71                  	// #113
    50e4:	mov	w11, #0x2a                  	// #42
    50e8:	cmp	w9, #0x0
    50ec:	csel	w9, w11, w10, ne  // ne = any
    50f0:	str	w9, [sp, #20]
    50f4:	ldr	w8, [sp, #20]
    50f8:	ldr	x9, [sp, #24]
    50fc:	str	w8, [x9, #8]
    5100:	ldr	x9, [sp, #24]
    5104:	ldr	w8, [x9, #48]
    5108:	cmp	w8, #0x2
    510c:	b.ne	5130 <deflateResetKeep@@ZLIB_1.2.5.2+0x114>  // b.any
    5110:	mov	x8, xzr
    5114:	mov	x0, x8
    5118:	mov	x1, x8
    511c:	mov	w9, wzr
    5120:	mov	w2, w9
    5124:	bl	2430 <crc32@plt>
    5128:	str	x0, [sp, #8]
    512c:	b	514c <deflateResetKeep@@ZLIB_1.2.5.2+0x130>
    5130:	mov	x8, xzr
    5134:	mov	x0, x8
    5138:	mov	x1, x8
    513c:	mov	w9, wzr
    5140:	mov	w2, w9
    5144:	bl	2560 <adler32@plt>
    5148:	str	x0, [sp, #8]
    514c:	ldr	x8, [sp, #8]
    5150:	ldur	x9, [x29, #-16]
    5154:	str	x8, [x9, #96]
    5158:	ldr	x8, [sp, #24]
    515c:	str	wzr, [x8, #76]
    5160:	ldr	x0, [sp, #24]
    5164:	bl	10de4 <inflateCodesUsed@@ZLIB_1.2.9+0x988>
    5168:	stur	wzr, [x29, #-4]
    516c:	ldur	w0, [x29, #-4]
    5170:	ldp	x29, x30, [sp, #48]
    5174:	add	sp, sp, #0x40
    5178:	ret
    517c:	sub	sp, sp, #0x30
    5180:	stp	x29, x30, [sp, #32]
    5184:	add	x29, sp, #0x20
    5188:	mov	x8, #0x2                   	// #2
    518c:	mov	w9, #0x0                   	// #0
    5190:	adrp	x10, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    5194:	add	x10, x10, #0xc68
    5198:	mov	w11, wzr
    519c:	mov	w12, #0x2                   	// #2
    51a0:	stur	x0, [x29, #-8]
    51a4:	ldur	x13, [x29, #-8]
    51a8:	ldr	w14, [x13, #80]
    51ac:	mov	w13, w14
    51b0:	mul	x8, x8, x13
    51b4:	ldur	x13, [x29, #-8]
    51b8:	str	x8, [x13, #104]
    51bc:	ldur	x8, [x29, #-8]
    51c0:	ldr	x8, [x8, #120]
    51c4:	ldur	x13, [x29, #-8]
    51c8:	ldr	w14, [x13, #132]
    51cc:	subs	w14, w14, #0x1
    51d0:	mov	w13, w14
    51d4:	ubfx	x13, x13, #0, #32
    51d8:	mov	x15, #0x2                   	// #2
    51dc:	mul	x13, x15, x13
    51e0:	add	x8, x8, x13
    51e4:	strh	w9, [x8]
    51e8:	ldur	x8, [x29, #-8]
    51ec:	ldr	x0, [x8, #120]
    51f0:	ldur	x8, [x29, #-8]
    51f4:	ldr	w9, [x8, #132]
    51f8:	subs	w9, w9, #0x1
    51fc:	mov	w14, #0x2                   	// #2
    5200:	umull	x2, w9, w14
    5204:	mov	w1, w11
    5208:	str	x10, [sp, #16]
    520c:	str	w12, [sp, #12]
    5210:	bl	24a0 <memset@plt>
    5214:	ldur	x8, [x29, #-8]
    5218:	ldrsw	x8, [x8, #196]
    521c:	mov	x10, #0x10                  	// #16
    5220:	mul	x8, x10, x8
    5224:	ldr	x13, [sp, #16]
    5228:	add	x8, x13, x8
    522c:	ldrh	w9, [x8, #2]
    5230:	ldur	x8, [x29, #-8]
    5234:	str	w9, [x8, #192]
    5238:	ldur	x8, [x29, #-8]
    523c:	ldrsw	x8, [x8, #196]
    5240:	mul	x8, x10, x8
    5244:	ldrh	w9, [x13, x8]
    5248:	ldur	x8, [x29, #-8]
    524c:	str	w9, [x8, #204]
    5250:	ldur	x8, [x29, #-8]
    5254:	ldrsw	x8, [x8, #196]
    5258:	mul	x8, x10, x8
    525c:	add	x8, x13, x8
    5260:	ldrh	w9, [x8, #4]
    5264:	ldur	x8, [x29, #-8]
    5268:	str	w9, [x8, #208]
    526c:	ldur	x8, [x29, #-8]
    5270:	ldrsw	x8, [x8, #196]
    5274:	mul	x8, x10, x8
    5278:	add	x8, x13, x8
    527c:	ldrh	w9, [x8, #6]
    5280:	ldur	x8, [x29, #-8]
    5284:	str	w9, [x8, #188]
    5288:	ldur	x8, [x29, #-8]
    528c:	str	wzr, [x8, #172]
    5290:	ldur	x8, [x29, #-8]
    5294:	str	xzr, [x8, #152]
    5298:	ldur	x8, [x29, #-8]
    529c:	str	wzr, [x8, #180]
    52a0:	ldur	x8, [x29, #-8]
    52a4:	str	wzr, [x8, #5932]
    52a8:	ldur	x8, [x29, #-8]
    52ac:	ldr	w9, [sp, #12]
    52b0:	str	w9, [x8, #184]
    52b4:	ldur	x8, [x29, #-8]
    52b8:	str	w9, [x8, #160]
    52bc:	ldur	x8, [x29, #-8]
    52c0:	str	wzr, [x8, #168]
    52c4:	ldur	x8, [x29, #-8]
    52c8:	str	wzr, [x8, #128]
    52cc:	ldp	x29, x30, [sp, #32]
    52d0:	add	sp, sp, #0x30
    52d4:	ret

00000000000052d8 <deflateSetHeader@@ZLIB_1.2.2>:
    52d8:	sub	sp, sp, #0x30
    52dc:	stp	x29, x30, [sp, #32]
    52e0:	add	x29, sp, #0x20
    52e4:	str	x0, [sp, #16]
    52e8:	str	x1, [sp, #8]
    52ec:	ldr	x0, [sp, #16]
    52f0:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    52f4:	cbnz	w0, 530c <deflateSetHeader@@ZLIB_1.2.2+0x34>
    52f8:	ldr	x8, [sp, #16]
    52fc:	ldr	x8, [x8, #56]
    5300:	ldr	w9, [x8, #48]
    5304:	cmp	w9, #0x2
    5308:	b.eq	5318 <deflateSetHeader@@ZLIB_1.2.2+0x40>  // b.none
    530c:	mov	w8, #0xfffffffe            	// #-2
    5310:	stur	w8, [x29, #-4]
    5314:	b	532c <deflateSetHeader@@ZLIB_1.2.2+0x54>
    5318:	ldr	x8, [sp, #8]
    531c:	ldr	x9, [sp, #16]
    5320:	ldr	x9, [x9, #56]
    5324:	str	x8, [x9, #56]
    5328:	stur	wzr, [x29, #-4]
    532c:	ldur	w0, [x29, #-4]
    5330:	ldp	x29, x30, [sp, #32]
    5334:	add	sp, sp, #0x30
    5338:	ret

000000000000533c <deflatePending@@ZLIB_1.2.5.1>:
    533c:	sub	sp, sp, #0x30
    5340:	stp	x29, x30, [sp, #32]
    5344:	add	x29, sp, #0x20
    5348:	str	x0, [sp, #16]
    534c:	str	x1, [sp, #8]
    5350:	str	x2, [sp]
    5354:	ldr	x0, [sp, #16]
    5358:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    535c:	cbz	w0, 536c <deflatePending@@ZLIB_1.2.5.1+0x30>
    5360:	mov	w8, #0xfffffffe            	// #-2
    5364:	stur	w8, [x29, #-4]
    5368:	b	53a8 <deflatePending@@ZLIB_1.2.5.1+0x6c>
    536c:	ldr	x8, [sp, #8]
    5370:	cbz	x8, 5388 <deflatePending@@ZLIB_1.2.5.1+0x4c>
    5374:	ldr	x8, [sp, #16]
    5378:	ldr	x8, [x8, #56]
    537c:	ldr	x8, [x8, #40]
    5380:	ldr	x9, [sp, #8]
    5384:	str	w8, [x9]
    5388:	ldr	x8, [sp]
    538c:	cbz	x8, 53a4 <deflatePending@@ZLIB_1.2.5.1+0x68>
    5390:	ldr	x8, [sp, #16]
    5394:	ldr	x8, [x8, #56]
    5398:	ldr	w9, [x8, #5940]
    539c:	ldr	x8, [sp]
    53a0:	str	w9, [x8]
    53a4:	stur	wzr, [x29, #-4]
    53a8:	ldur	w0, [x29, #-4]
    53ac:	ldp	x29, x30, [sp, #32]
    53b0:	add	sp, sp, #0x30
    53b4:	ret

00000000000053b8 <deflatePrime@@ZLIB_1.2.0.8>:
    53b8:	sub	sp, sp, #0x40
    53bc:	stp	x29, x30, [sp, #48]
    53c0:	add	x29, sp, #0x30
    53c4:	stur	x0, [x29, #-16]
    53c8:	stur	w1, [x29, #-20]
    53cc:	str	w2, [sp, #24]
    53d0:	ldur	x0, [x29, #-16]
    53d4:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    53d8:	cbz	w0, 53e8 <deflatePrime@@ZLIB_1.2.0.8+0x30>
    53dc:	mov	w8, #0xfffffffe            	// #-2
    53e0:	stur	w8, [x29, #-4]
    53e4:	b	54c8 <deflatePrime@@ZLIB_1.2.0.8+0x110>
    53e8:	ldur	x8, [x29, #-16]
    53ec:	ldr	x8, [x8, #56]
    53f0:	str	x8, [sp, #16]
    53f4:	ldr	x8, [sp, #16]
    53f8:	ldr	x8, [x8, #5904]
    53fc:	ldr	x9, [sp, #16]
    5400:	ldr	x9, [x9, #32]
    5404:	add	x9, x9, #0x2
    5408:	cmp	x8, x9
    540c:	b.cs	541c <deflatePrime@@ZLIB_1.2.0.8+0x64>  // b.hs, b.nlast
    5410:	mov	w8, #0xfffffffb            	// #-5
    5414:	stur	w8, [x29, #-4]
    5418:	b	54c8 <deflatePrime@@ZLIB_1.2.0.8+0x110>
    541c:	ldr	x8, [sp, #16]
    5420:	ldr	w9, [x8, #5940]
    5424:	mov	w10, #0x10                  	// #16
    5428:	subs	w9, w10, w9
    542c:	str	w9, [sp, #12]
    5430:	ldr	w9, [sp, #12]
    5434:	ldur	w10, [x29, #-20]
    5438:	cmp	w9, w10
    543c:	b.le	5448 <deflatePrime@@ZLIB_1.2.0.8+0x90>
    5440:	ldur	w8, [x29, #-20]
    5444:	str	w8, [sp, #12]
    5448:	ldr	w8, [sp, #24]
    544c:	ldr	w9, [sp, #12]
    5450:	mov	w10, #0x1                   	// #1
    5454:	lsl	w9, w10, w9
    5458:	subs	w9, w9, #0x1
    545c:	and	w8, w8, w9
    5460:	ldr	x11, [sp, #16]
    5464:	ldr	w9, [x11, #5940]
    5468:	lsl	w8, w8, w9
    546c:	and	w8, w8, #0xffff
    5470:	ldr	x11, [sp, #16]
    5474:	ldrh	w9, [x11, #5936]
    5478:	orr	w8, w9, w8
    547c:	strh	w8, [x11, #5936]
    5480:	ldr	w8, [sp, #12]
    5484:	ldr	x11, [sp, #16]
    5488:	ldr	w9, [x11, #5940]
    548c:	add	w8, w9, w8
    5490:	str	w8, [x11, #5940]
    5494:	ldr	x0, [sp, #16]
    5498:	bl	112b4 <inflateCodesUsed@@ZLIB_1.2.9+0xe58>
    549c:	ldr	w8, [sp, #12]
    54a0:	ldr	w9, [sp, #24]
    54a4:	asr	w8, w9, w8
    54a8:	str	w8, [sp, #24]
    54ac:	ldr	w8, [sp, #12]
    54b0:	ldur	w9, [x29, #-20]
    54b4:	subs	w8, w9, w8
    54b8:	stur	w8, [x29, #-20]
    54bc:	ldur	w8, [x29, #-20]
    54c0:	cbnz	w8, 541c <deflatePrime@@ZLIB_1.2.0.8+0x64>
    54c4:	stur	wzr, [x29, #-4]
    54c8:	ldur	w0, [x29, #-4]
    54cc:	ldp	x29, x30, [sp, #48]
    54d0:	add	sp, sp, #0x40
    54d4:	ret

00000000000054d8 <deflateParams@@Base>:
    54d8:	sub	sp, sp, #0x50
    54dc:	stp	x29, x30, [sp, #64]
    54e0:	add	x29, sp, #0x40
    54e4:	adrp	x8, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    54e8:	add	x8, x8, #0xc68
    54ec:	stur	x0, [x29, #-16]
    54f0:	stur	w1, [x29, #-20]
    54f4:	stur	w2, [x29, #-24]
    54f8:	ldur	x0, [x29, #-16]
    54fc:	str	x8, [sp, #8]
    5500:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    5504:	cbz	w0, 5514 <deflateParams@@Base+0x3c>
    5508:	mov	w8, #0xfffffffe            	// #-2
    550c:	stur	w8, [x29, #-4]
    5510:	b	574c <deflateParams@@Base+0x274>
    5514:	ldur	x8, [x29, #-16]
    5518:	ldr	x8, [x8, #56]
    551c:	str	x8, [sp, #32]
    5520:	ldur	w9, [x29, #-20]
    5524:	mov	w10, #0xffffffff            	// #-1
    5528:	cmp	w9, w10
    552c:	b.ne	5538 <deflateParams@@Base+0x60>  // b.any
    5530:	mov	w8, #0x6                   	// #6
    5534:	stur	w8, [x29, #-20]
    5538:	ldur	w8, [x29, #-20]
    553c:	cmp	w8, #0x0
    5540:	cset	w8, lt  // lt = tstop
    5544:	tbnz	w8, #0, 5570 <deflateParams@@Base+0x98>
    5548:	ldur	w8, [x29, #-20]
    554c:	cmp	w8, #0x9
    5550:	b.gt	5570 <deflateParams@@Base+0x98>
    5554:	ldur	w8, [x29, #-24]
    5558:	cmp	w8, #0x0
    555c:	cset	w8, lt  // lt = tstop
    5560:	tbnz	w8, #0, 5570 <deflateParams@@Base+0x98>
    5564:	ldur	w8, [x29, #-24]
    5568:	cmp	w8, #0x4
    556c:	b.le	557c <deflateParams@@Base+0xa4>
    5570:	mov	w8, #0xfffffffe            	// #-2
    5574:	stur	w8, [x29, #-4]
    5578:	b	574c <deflateParams@@Base+0x274>
    557c:	ldr	x8, [sp, #32]
    5580:	ldrsw	x8, [x8, #196]
    5584:	mov	x9, #0x10                  	// #16
    5588:	mul	x8, x9, x8
    558c:	ldr	x9, [sp, #8]
    5590:	add	x8, x9, x8
    5594:	ldr	x8, [x8, #8]
    5598:	str	x8, [sp, #24]
    559c:	ldur	w10, [x29, #-24]
    55a0:	ldr	x8, [sp, #32]
    55a4:	ldr	w11, [x8, #200]
    55a8:	cmp	w10, w11
    55ac:	b.ne	55d4 <deflateParams@@Base+0xfc>  // b.any
    55b0:	ldr	x8, [sp, #24]
    55b4:	ldursw	x9, [x29, #-20]
    55b8:	mov	x10, #0x10                  	// #16
    55bc:	mul	x9, x10, x9
    55c0:	ldr	x10, [sp, #8]
    55c4:	add	x9, x10, x9
    55c8:	ldr	x9, [x9, #8]
    55cc:	cmp	x8, x9
    55d0:	b.eq	5624 <deflateParams@@Base+0x14c>  // b.none
    55d4:	ldr	x8, [sp, #32]
    55d8:	ldr	x8, [x8, #5944]
    55dc:	cbz	x8, 5624 <deflateParams@@Base+0x14c>
    55e0:	ldur	x0, [x29, #-16]
    55e4:	mov	w1, #0x5                   	// #5
    55e8:	bl	2490 <deflate@plt>
    55ec:	str	w0, [sp, #20]
    55f0:	ldr	w8, [sp, #20]
    55f4:	mov	w9, #0xfffffffe            	// #-2
    55f8:	cmp	w8, w9
    55fc:	b.ne	560c <deflateParams@@Base+0x134>  // b.any
    5600:	ldr	w8, [sp, #20]
    5604:	stur	w8, [x29, #-4]
    5608:	b	574c <deflateParams@@Base+0x274>
    560c:	ldur	x8, [x29, #-16]
    5610:	ldr	w9, [x8, #32]
    5614:	cbnz	w9, 5624 <deflateParams@@Base+0x14c>
    5618:	mov	w8, #0xfffffffb            	// #-5
    561c:	stur	w8, [x29, #-4]
    5620:	b	574c <deflateParams@@Base+0x274>
    5624:	ldr	x8, [sp, #32]
    5628:	ldr	w9, [x8, #196]
    562c:	ldur	w10, [x29, #-20]
    5630:	cmp	w9, w10
    5634:	b.eq	573c <deflateParams@@Base+0x264>  // b.none
    5638:	ldr	x8, [sp, #32]
    563c:	ldr	w9, [x8, #196]
    5640:	cbnz	w9, 56cc <deflateParams@@Base+0x1f4>
    5644:	ldr	x8, [sp, #32]
    5648:	ldr	w9, [x8, #5928]
    564c:	cbz	w9, 56cc <deflateParams@@Base+0x1f4>
    5650:	ldr	x8, [sp, #32]
    5654:	ldr	w9, [x8, #5928]
    5658:	cmp	w9, #0x1
    565c:	b.ne	566c <deflateParams@@Base+0x194>  // b.any
    5660:	ldr	x0, [sp, #32]
    5664:	bl	6ac8 <deflate@@Base+0x136c>
    5668:	b	569c <deflateParams@@Base+0x1c4>
    566c:	ldr	x8, [sp, #32]
    5670:	ldr	x8, [x8, #120]
    5674:	ldr	x9, [sp, #32]
    5678:	ldr	w10, [x9, #132]
    567c:	subs	w10, w10, #0x1
    5680:	mov	w9, w10
    5684:	ubfx	x9, x9, #0, #32
    5688:	mov	x11, #0x2                   	// #2
    568c:	mul	x9, x11, x9
    5690:	add	x8, x8, x9
    5694:	mov	w10, #0x0                   	// #0
    5698:	strh	w10, [x8]
    569c:	ldr	x8, [sp, #32]
    56a0:	ldr	x0, [x8, #120]
    56a4:	ldr	x8, [sp, #32]
    56a8:	ldr	w9, [x8, #132]
    56ac:	subs	w9, w9, #0x1
    56b0:	mov	w10, #0x2                   	// #2
    56b4:	umull	x2, w9, w10
    56b8:	mov	w9, wzr
    56bc:	mov	w1, w9
    56c0:	bl	24a0 <memset@plt>
    56c4:	ldr	x8, [sp, #32]
    56c8:	str	wzr, [x8, #5928]
    56cc:	ldur	w8, [x29, #-20]
    56d0:	ldr	x9, [sp, #32]
    56d4:	str	w8, [x9, #196]
    56d8:	ldursw	x9, [x29, #-20]
    56dc:	mov	x10, #0x10                  	// #16
    56e0:	mul	x9, x10, x9
    56e4:	ldr	x11, [sp, #8]
    56e8:	add	x9, x11, x9
    56ec:	ldrh	w8, [x9, #2]
    56f0:	ldr	x9, [sp, #32]
    56f4:	str	w8, [x9, #192]
    56f8:	ldursw	x9, [x29, #-20]
    56fc:	mul	x9, x10, x9
    5700:	ldrh	w8, [x11, x9]
    5704:	ldr	x9, [sp, #32]
    5708:	str	w8, [x9, #204]
    570c:	ldursw	x9, [x29, #-20]
    5710:	mul	x9, x10, x9
    5714:	add	x9, x11, x9
    5718:	ldrh	w8, [x9, #4]
    571c:	ldr	x9, [sp, #32]
    5720:	str	w8, [x9, #208]
    5724:	ldursw	x9, [x29, #-20]
    5728:	mul	x9, x10, x9
    572c:	add	x9, x11, x9
    5730:	ldrh	w8, [x9, #6]
    5734:	ldr	x9, [sp, #32]
    5738:	str	w8, [x9, #188]
    573c:	ldur	w8, [x29, #-24]
    5740:	ldr	x9, [sp, #32]
    5744:	str	w8, [x9, #200]
    5748:	stur	wzr, [x29, #-4]
    574c:	ldur	w0, [x29, #-4]
    5750:	ldp	x29, x30, [sp, #64]
    5754:	add	sp, sp, #0x50
    5758:	ret

000000000000575c <deflate@@Base>:
    575c:	sub	sp, sp, #0x90
    5760:	stp	x29, x30, [sp, #128]
    5764:	add	x29, sp, #0x80
    5768:	adrp	x8, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    576c:	ldr	x8, [x8, #4056]
    5770:	stur	x0, [x29, #-16]
    5774:	stur	w1, [x29, #-20]
    5778:	ldur	x0, [x29, #-16]
    577c:	str	x8, [sp, #32]
    5780:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    5784:	cbnz	w0, 57a4 <deflate@@Base+0x48>
    5788:	ldur	w8, [x29, #-20]
    578c:	cmp	w8, #0x5
    5790:	b.gt	57a4 <deflate@@Base+0x48>
    5794:	ldur	w8, [x29, #-20]
    5798:	cmp	w8, #0x0
    579c:	cset	w8, ge  // ge = tcont
    57a0:	tbnz	w8, #0, 57b0 <deflate@@Base+0x54>
    57a4:	mov	w8, #0xfffffffe            	// #-2
    57a8:	stur	w8, [x29, #-4]
    57ac:	b	6ab8 <deflate@@Base+0x135c>
    57b0:	ldur	x8, [x29, #-16]
    57b4:	ldr	x8, [x8, #56]
    57b8:	stur	x8, [x29, #-32]
    57bc:	ldur	x8, [x29, #-16]
    57c0:	ldr	x8, [x8, #24]
    57c4:	cbz	x8, 57fc <deflate@@Base+0xa0>
    57c8:	ldur	x8, [x29, #-16]
    57cc:	ldr	w9, [x8, #8]
    57d0:	cbz	w9, 57e0 <deflate@@Base+0x84>
    57d4:	ldur	x8, [x29, #-16]
    57d8:	ldr	x8, [x8]
    57dc:	cbz	x8, 57fc <deflate@@Base+0xa0>
    57e0:	ldur	x8, [x29, #-32]
    57e4:	ldr	w9, [x8, #8]
    57e8:	cmp	w9, #0x29a
    57ec:	b.ne	5818 <deflate@@Base+0xbc>  // b.any
    57f0:	ldur	w8, [x29, #-20]
    57f4:	cmp	w8, #0x4
    57f8:	b.eq	5818 <deflate@@Base+0xbc>  // b.none
    57fc:	ldr	x8, [sp, #32]
    5800:	ldr	x9, [x8, #32]
    5804:	ldur	x10, [x29, #-16]
    5808:	str	x9, [x10, #48]
    580c:	mov	w11, #0xfffffffe            	// #-2
    5810:	stur	w11, [x29, #-4]
    5814:	b	6ab8 <deflate@@Base+0x135c>
    5818:	ldur	x8, [x29, #-16]
    581c:	ldr	w9, [x8, #32]
    5820:	cbnz	w9, 5840 <deflate@@Base+0xe4>
    5824:	ldr	x8, [sp, #32]
    5828:	ldr	x9, [x8, #56]
    582c:	ldur	x10, [x29, #-16]
    5830:	str	x9, [x10, #48]
    5834:	mov	w11, #0xfffffffb            	// #-5
    5838:	stur	w11, [x29, #-4]
    583c:	b	6ab8 <deflate@@Base+0x135c>
    5840:	ldur	x8, [x29, #-32]
    5844:	ldr	w9, [x8, #76]
    5848:	stur	w9, [x29, #-24]
    584c:	ldur	w9, [x29, #-20]
    5850:	ldur	x8, [x29, #-32]
    5854:	str	w9, [x8, #76]
    5858:	ldur	x8, [x29, #-32]
    585c:	ldr	x8, [x8, #40]
    5860:	cbz	x8, 5890 <deflate@@Base+0x134>
    5864:	ldur	x0, [x29, #-16]
    5868:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    586c:	ldur	x8, [x29, #-16]
    5870:	ldr	w9, [x8, #32]
    5874:	cbnz	w9, 588c <deflate@@Base+0x130>
    5878:	ldur	x8, [x29, #-32]
    587c:	mov	w9, #0xffffffff            	// #-1
    5880:	str	w9, [x8, #76]
    5884:	stur	wzr, [x29, #-4]
    5888:	b	6ab8 <deflate@@Base+0x135c>
    588c:	b	5908 <deflate@@Base+0x1ac>
    5890:	ldur	x8, [x29, #-16]
    5894:	ldr	w9, [x8, #8]
    5898:	cbnz	w9, 5908 <deflate@@Base+0x1ac>
    589c:	ldur	w8, [x29, #-20]
    58a0:	mov	w9, #0x2                   	// #2
    58a4:	mul	w8, w8, w9
    58a8:	ldur	w10, [x29, #-20]
    58ac:	mov	w11, #0x9                   	// #9
    58b0:	mov	w12, wzr
    58b4:	cmp	w10, #0x4
    58b8:	csel	w10, w11, w12, gt
    58bc:	subs	w8, w8, w10
    58c0:	ldur	w10, [x29, #-24]
    58c4:	mul	w9, w10, w9
    58c8:	ldur	w10, [x29, #-24]
    58cc:	cmp	w10, #0x4
    58d0:	csel	w10, w11, w12, gt
    58d4:	subs	w9, w9, w10
    58d8:	cmp	w8, w9
    58dc:	b.gt	5908 <deflate@@Base+0x1ac>
    58e0:	ldur	w8, [x29, #-20]
    58e4:	cmp	w8, #0x4
    58e8:	b.eq	5908 <deflate@@Base+0x1ac>  // b.none
    58ec:	ldr	x8, [sp, #32]
    58f0:	ldr	x9, [x8, #56]
    58f4:	ldur	x10, [x29, #-16]
    58f8:	str	x9, [x10, #48]
    58fc:	mov	w11, #0xfffffffb            	// #-5
    5900:	stur	w11, [x29, #-4]
    5904:	b	6ab8 <deflate@@Base+0x135c>
    5908:	ldur	x8, [x29, #-32]
    590c:	ldr	w9, [x8, #8]
    5910:	cmp	w9, #0x29a
    5914:	b.ne	5940 <deflate@@Base+0x1e4>  // b.any
    5918:	ldur	x8, [x29, #-16]
    591c:	ldr	w9, [x8, #8]
    5920:	cbz	w9, 5940 <deflate@@Base+0x1e4>
    5924:	ldr	x8, [sp, #32]
    5928:	ldr	x9, [x8, #56]
    592c:	ldur	x10, [x29, #-16]
    5930:	str	x9, [x10, #48]
    5934:	mov	w11, #0xfffffffb            	// #-5
    5938:	stur	w11, [x29, #-4]
    593c:	b	6ab8 <deflate@@Base+0x135c>
    5940:	ldur	x8, [x29, #-32]
    5944:	ldr	w9, [x8, #8]
    5948:	cmp	w9, #0x2a
    594c:	b.ne	5abc <deflate@@Base+0x360>  // b.any
    5950:	ldur	x8, [x29, #-32]
    5954:	ldr	w9, [x8, #84]
    5958:	subs	w9, w9, #0x8
    595c:	lsl	w9, w9, #4
    5960:	add	w9, w9, #0x8
    5964:	lsl	w9, w9, #8
    5968:	stur	w9, [x29, #-36]
    596c:	ldur	x8, [x29, #-32]
    5970:	ldr	w9, [x8, #200]
    5974:	cmp	w9, #0x2
    5978:	b.ge	598c <deflate@@Base+0x230>  // b.tcont
    597c:	ldur	x8, [x29, #-32]
    5980:	ldr	w9, [x8, #196]
    5984:	cmp	w9, #0x2
    5988:	b.ge	5994 <deflate@@Base+0x238>  // b.tcont
    598c:	stur	wzr, [x29, #-40]
    5990:	b	59d4 <deflate@@Base+0x278>
    5994:	ldur	x8, [x29, #-32]
    5998:	ldr	w9, [x8, #196]
    599c:	cmp	w9, #0x6
    59a0:	b.ge	59b0 <deflate@@Base+0x254>  // b.tcont
    59a4:	mov	w8, #0x1                   	// #1
    59a8:	stur	w8, [x29, #-40]
    59ac:	b	59d4 <deflate@@Base+0x278>
    59b0:	ldur	x8, [x29, #-32]
    59b4:	ldr	w9, [x8, #196]
    59b8:	cmp	w9, #0x6
    59bc:	b.ne	59cc <deflate@@Base+0x270>  // b.any
    59c0:	mov	w8, #0x2                   	// #2
    59c4:	stur	w8, [x29, #-40]
    59c8:	b	59d4 <deflate@@Base+0x278>
    59cc:	mov	w8, #0x3                   	// #3
    59d0:	stur	w8, [x29, #-40]
    59d4:	ldur	w8, [x29, #-40]
    59d8:	ldur	w9, [x29, #-36]
    59dc:	orr	w8, w9, w8, lsl #6
    59e0:	stur	w8, [x29, #-36]
    59e4:	ldur	x10, [x29, #-32]
    59e8:	ldr	w8, [x10, #172]
    59ec:	cbz	w8, 59fc <deflate@@Base+0x2a0>
    59f0:	ldur	w8, [x29, #-36]
    59f4:	orr	w8, w8, #0x20
    59f8:	stur	w8, [x29, #-36]
    59fc:	ldur	w8, [x29, #-36]
    5a00:	mov	w9, #0x1f                  	// #31
    5a04:	udiv	w10, w8, w9
    5a08:	mul	w10, w10, w9
    5a0c:	subs	w8, w8, w10
    5a10:	subs	w8, w9, w8
    5a14:	ldur	w9, [x29, #-36]
    5a18:	add	w8, w9, w8
    5a1c:	stur	w8, [x29, #-36]
    5a20:	ldur	x0, [x29, #-32]
    5a24:	ldur	w1, [x29, #-36]
    5a28:	bl	6fb0 <deflateBound@@ZLIB_1.2.0+0x330>
    5a2c:	ldur	x11, [x29, #-32]
    5a30:	ldr	w8, [x11, #172]
    5a34:	cbz	w8, 5a68 <deflate@@Base+0x30c>
    5a38:	ldur	x0, [x29, #-32]
    5a3c:	ldur	x8, [x29, #-16]
    5a40:	ldr	x8, [x8, #96]
    5a44:	lsr	x8, x8, #16
    5a48:	mov	w1, w8
    5a4c:	bl	6fb0 <deflateBound@@ZLIB_1.2.0+0x330>
    5a50:	ldur	x0, [x29, #-32]
    5a54:	ldur	x9, [x29, #-16]
    5a58:	ldr	x9, [x9, #96]
    5a5c:	and	x9, x9, #0xffff
    5a60:	mov	w1, w9
    5a64:	bl	6fb0 <deflateBound@@ZLIB_1.2.0+0x330>
    5a68:	mov	x8, xzr
    5a6c:	mov	x0, x8
    5a70:	mov	x1, x8
    5a74:	mov	w9, wzr
    5a78:	mov	w2, w9
    5a7c:	bl	2560 <adler32@plt>
    5a80:	ldur	x8, [x29, #-16]
    5a84:	str	x0, [x8, #96]
    5a88:	ldur	x8, [x29, #-32]
    5a8c:	mov	w9, #0x71                  	// #113
    5a90:	str	w9, [x8, #8]
    5a94:	ldur	x0, [x29, #-16]
    5a98:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    5a9c:	ldur	x8, [x29, #-32]
    5aa0:	ldr	x8, [x8, #40]
    5aa4:	cbz	x8, 5abc <deflate@@Base+0x360>
    5aa8:	ldur	x8, [x29, #-32]
    5aac:	mov	w9, #0xffffffff            	// #-1
    5ab0:	str	w9, [x8, #76]
    5ab4:	stur	wzr, [x29, #-4]
    5ab8:	b	6ab8 <deflate@@Base+0x135c>
    5abc:	ldur	x8, [x29, #-32]
    5ac0:	ldr	w9, [x8, #8]
    5ac4:	cmp	w9, #0x39
    5ac8:	b.ne	5fd4 <deflate@@Base+0x878>  // b.any
    5acc:	mov	x8, xzr
    5ad0:	mov	x0, x8
    5ad4:	mov	x1, x8
    5ad8:	mov	w9, wzr
    5adc:	mov	w2, w9
    5ae0:	bl	2430 <crc32@plt>
    5ae4:	ldur	x8, [x29, #-16]
    5ae8:	str	x0, [x8, #96]
    5aec:	ldur	x8, [x29, #-32]
    5af0:	ldr	x8, [x8, #16]
    5af4:	ldur	x10, [x29, #-32]
    5af8:	ldr	x11, [x10, #40]
    5afc:	add	x12, x11, #0x1
    5b00:	str	x12, [x10, #40]
    5b04:	add	x8, x8, x11
    5b08:	mov	w9, #0x1f                  	// #31
    5b0c:	strb	w9, [x8]
    5b10:	ldur	x8, [x29, #-32]
    5b14:	ldr	x8, [x8, #16]
    5b18:	ldur	x10, [x29, #-32]
    5b1c:	ldr	x11, [x10, #40]
    5b20:	add	x12, x11, #0x1
    5b24:	str	x12, [x10, #40]
    5b28:	add	x8, x8, x11
    5b2c:	mov	w9, #0x8b                  	// #139
    5b30:	strb	w9, [x8]
    5b34:	ldur	x8, [x29, #-32]
    5b38:	ldr	x8, [x8, #16]
    5b3c:	ldur	x10, [x29, #-32]
    5b40:	ldr	x11, [x10, #40]
    5b44:	add	x12, x11, #0x1
    5b48:	str	x12, [x10, #40]
    5b4c:	add	x8, x8, x11
    5b50:	mov	w9, #0x8                   	// #8
    5b54:	strb	w9, [x8]
    5b58:	ldur	x8, [x29, #-32]
    5b5c:	ldr	x8, [x8, #56]
    5b60:	cbnz	x8, 5ce8 <deflate@@Base+0x58c>
    5b64:	ldur	x8, [x29, #-32]
    5b68:	ldr	x8, [x8, #16]
    5b6c:	ldur	x9, [x29, #-32]
    5b70:	ldr	x10, [x9, #40]
    5b74:	add	x11, x10, #0x1
    5b78:	str	x11, [x9, #40]
    5b7c:	add	x8, x8, x10
    5b80:	mov	w12, #0x0                   	// #0
    5b84:	strb	w12, [x8]
    5b88:	ldur	x8, [x29, #-32]
    5b8c:	ldr	x8, [x8, #16]
    5b90:	ldur	x9, [x29, #-32]
    5b94:	ldr	x10, [x9, #40]
    5b98:	add	x11, x10, #0x1
    5b9c:	str	x11, [x9, #40]
    5ba0:	add	x8, x8, x10
    5ba4:	strb	w12, [x8]
    5ba8:	ldur	x8, [x29, #-32]
    5bac:	ldr	x8, [x8, #16]
    5bb0:	ldur	x9, [x29, #-32]
    5bb4:	ldr	x10, [x9, #40]
    5bb8:	add	x11, x10, #0x1
    5bbc:	str	x11, [x9, #40]
    5bc0:	add	x8, x8, x10
    5bc4:	strb	w12, [x8]
    5bc8:	ldur	x8, [x29, #-32]
    5bcc:	ldr	x8, [x8, #16]
    5bd0:	ldur	x9, [x29, #-32]
    5bd4:	ldr	x10, [x9, #40]
    5bd8:	add	x11, x10, #0x1
    5bdc:	str	x11, [x9, #40]
    5be0:	add	x8, x8, x10
    5be4:	strb	w12, [x8]
    5be8:	ldur	x8, [x29, #-32]
    5bec:	ldr	x8, [x8, #16]
    5bf0:	ldur	x9, [x29, #-32]
    5bf4:	ldr	x10, [x9, #40]
    5bf8:	add	x11, x10, #0x1
    5bfc:	str	x11, [x9, #40]
    5c00:	add	x8, x8, x10
    5c04:	strb	w12, [x8]
    5c08:	ldur	x8, [x29, #-32]
    5c0c:	ldr	w12, [x8, #196]
    5c10:	cmp	w12, #0x9
    5c14:	b.ne	5c24 <deflate@@Base+0x4c8>  // b.any
    5c18:	mov	w8, #0x2                   	// #2
    5c1c:	str	w8, [sp, #28]
    5c20:	b	5c68 <deflate@@Base+0x50c>
    5c24:	ldur	x8, [x29, #-32]
    5c28:	ldr	w9, [x8, #200]
    5c2c:	mov	w10, #0x1                   	// #1
    5c30:	cmp	w9, #0x2
    5c34:	str	w10, [sp, #24]
    5c38:	b.ge	5c50 <deflate@@Base+0x4f4>  // b.tcont
    5c3c:	ldur	x8, [x29, #-32]
    5c40:	ldr	w9, [x8, #196]
    5c44:	cmp	w9, #0x2
    5c48:	cset	w9, lt  // lt = tstop
    5c4c:	str	w9, [sp, #24]
    5c50:	ldr	w8, [sp, #24]
    5c54:	mov	w9, #0x4                   	// #4
    5c58:	mov	w10, wzr
    5c5c:	tst	w8, #0x1
    5c60:	csel	w8, w9, w10, ne  // ne = any
    5c64:	str	w8, [sp, #28]
    5c68:	ldr	w8, [sp, #28]
    5c6c:	ldur	x9, [x29, #-32]
    5c70:	ldr	x9, [x9, #16]
    5c74:	ldur	x10, [x29, #-32]
    5c78:	ldr	x11, [x10, #40]
    5c7c:	add	x12, x11, #0x1
    5c80:	str	x12, [x10, #40]
    5c84:	add	x9, x9, x11
    5c88:	strb	w8, [x9]
    5c8c:	ldur	x9, [x29, #-32]
    5c90:	ldr	x9, [x9, #16]
    5c94:	ldur	x10, [x29, #-32]
    5c98:	ldr	x11, [x10, #40]
    5c9c:	add	x12, x11, #0x1
    5ca0:	str	x12, [x10, #40]
    5ca4:	add	x9, x9, x11
    5ca8:	mov	w8, #0x3                   	// #3
    5cac:	strb	w8, [x9]
    5cb0:	ldur	x9, [x29, #-32]
    5cb4:	mov	w8, #0x71                  	// #113
    5cb8:	str	w8, [x9, #8]
    5cbc:	ldur	x0, [x29, #-16]
    5cc0:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    5cc4:	ldur	x9, [x29, #-32]
    5cc8:	ldr	x9, [x9, #40]
    5ccc:	cbz	x9, 5ce4 <deflate@@Base+0x588>
    5cd0:	ldur	x8, [x29, #-32]
    5cd4:	mov	w9, #0xffffffff            	// #-1
    5cd8:	str	w9, [x8, #76]
    5cdc:	stur	wzr, [x29, #-4]
    5ce0:	b	6ab8 <deflate@@Base+0x135c>
    5ce4:	b	5fd4 <deflate@@Base+0x878>
    5ce8:	ldur	x8, [x29, #-32]
    5cec:	ldr	x8, [x8, #56]
    5cf0:	ldr	w9, [x8]
    5cf4:	mov	w10, wzr
    5cf8:	mov	w11, #0x1                   	// #1
    5cfc:	cmp	w9, #0x0
    5d00:	csel	w9, w11, w10, ne  // ne = any
    5d04:	ldur	x8, [x29, #-32]
    5d08:	ldr	x8, [x8, #56]
    5d0c:	ldr	w11, [x8, #68]
    5d10:	mov	w12, #0x2                   	// #2
    5d14:	cmp	w11, #0x0
    5d18:	csel	w11, w12, w10, ne  // ne = any
    5d1c:	add	w9, w9, w11
    5d20:	ldur	x8, [x29, #-32]
    5d24:	ldr	x8, [x8, #56]
    5d28:	ldr	x8, [x8, #24]
    5d2c:	mov	w11, #0x4                   	// #4
    5d30:	cmp	x8, #0x0
    5d34:	csel	w11, w10, w11, eq  // eq = none
    5d38:	add	w9, w9, w11
    5d3c:	ldur	x8, [x29, #-32]
    5d40:	ldr	x8, [x8, #56]
    5d44:	ldr	x8, [x8, #40]
    5d48:	mov	w11, #0x8                   	// #8
    5d4c:	cmp	x8, #0x0
    5d50:	csel	w11, w10, w11, eq  // eq = none
    5d54:	add	w9, w9, w11
    5d58:	ldur	x8, [x29, #-32]
    5d5c:	ldr	x8, [x8, #56]
    5d60:	ldr	x8, [x8, #56]
    5d64:	mov	w11, #0x10                  	// #16
    5d68:	cmp	x8, #0x0
    5d6c:	csel	w10, w10, w11, eq  // eq = none
    5d70:	add	w9, w9, w10
    5d74:	ldur	x8, [x29, #-32]
    5d78:	ldr	x8, [x8, #16]
    5d7c:	ldur	x13, [x29, #-32]
    5d80:	ldr	x14, [x13, #40]
    5d84:	add	x15, x14, #0x1
    5d88:	str	x15, [x13, #40]
    5d8c:	add	x8, x8, x14
    5d90:	strb	w9, [x8]
    5d94:	ldur	x8, [x29, #-32]
    5d98:	ldr	x8, [x8, #56]
    5d9c:	ldr	x8, [x8, #8]
    5da0:	and	x8, x8, #0xff
    5da4:	ldur	x13, [x29, #-32]
    5da8:	ldr	x13, [x13, #16]
    5dac:	ldur	x14, [x29, #-32]
    5db0:	ldr	x15, [x14, #40]
    5db4:	add	x16, x15, #0x1
    5db8:	str	x16, [x14, #40]
    5dbc:	add	x13, x13, x15
    5dc0:	strb	w8, [x13]
    5dc4:	ldur	x13, [x29, #-32]
    5dc8:	ldr	x13, [x13, #56]
    5dcc:	ldr	x13, [x13, #8]
    5dd0:	lsr	x13, x13, #8
    5dd4:	and	x13, x13, #0xff
    5dd8:	ldur	x14, [x29, #-32]
    5ddc:	ldr	x14, [x14, #16]
    5de0:	ldur	x15, [x29, #-32]
    5de4:	ldr	x16, [x15, #40]
    5de8:	add	x17, x16, #0x1
    5dec:	str	x17, [x15, #40]
    5df0:	add	x14, x14, x16
    5df4:	strb	w13, [x14]
    5df8:	ldur	x14, [x29, #-32]
    5dfc:	ldr	x14, [x14, #56]
    5e00:	ldr	x14, [x14, #8]
    5e04:	lsr	x14, x14, #16
    5e08:	and	x14, x14, #0xff
    5e0c:	ldur	x15, [x29, #-32]
    5e10:	ldr	x15, [x15, #16]
    5e14:	ldur	x16, [x29, #-32]
    5e18:	ldr	x17, [x16, #40]
    5e1c:	add	x18, x17, #0x1
    5e20:	str	x18, [x16, #40]
    5e24:	add	x15, x15, x17
    5e28:	strb	w14, [x15]
    5e2c:	ldur	x15, [x29, #-32]
    5e30:	ldr	x15, [x15, #56]
    5e34:	ldr	x15, [x15, #8]
    5e38:	lsr	x15, x15, #24
    5e3c:	and	x15, x15, #0xff
    5e40:	ldur	x16, [x29, #-32]
    5e44:	ldr	x16, [x16, #16]
    5e48:	ldur	x17, [x29, #-32]
    5e4c:	ldr	x18, [x17, #40]
    5e50:	add	x0, x18, #0x1
    5e54:	str	x0, [x17, #40]
    5e58:	add	x16, x16, x18
    5e5c:	strb	w15, [x16]
    5e60:	ldur	x16, [x29, #-32]
    5e64:	ldr	w8, [x16, #196]
    5e68:	cmp	w8, #0x9
    5e6c:	b.ne	5e7c <deflate@@Base+0x720>  // b.any
    5e70:	mov	w8, #0x2                   	// #2
    5e74:	str	w8, [sp, #20]
    5e78:	b	5ec0 <deflate@@Base+0x764>
    5e7c:	ldur	x8, [x29, #-32]
    5e80:	ldr	w9, [x8, #200]
    5e84:	mov	w10, #0x1                   	// #1
    5e88:	cmp	w9, #0x2
    5e8c:	str	w10, [sp, #16]
    5e90:	b.ge	5ea8 <deflate@@Base+0x74c>  // b.tcont
    5e94:	ldur	x8, [x29, #-32]
    5e98:	ldr	w9, [x8, #196]
    5e9c:	cmp	w9, #0x2
    5ea0:	cset	w9, lt  // lt = tstop
    5ea4:	str	w9, [sp, #16]
    5ea8:	ldr	w8, [sp, #16]
    5eac:	mov	w9, #0x4                   	// #4
    5eb0:	mov	w10, wzr
    5eb4:	tst	w8, #0x1
    5eb8:	csel	w8, w9, w10, ne  // ne = any
    5ebc:	str	w8, [sp, #20]
    5ec0:	ldr	w8, [sp, #20]
    5ec4:	ldur	x9, [x29, #-32]
    5ec8:	ldr	x9, [x9, #16]
    5ecc:	ldur	x10, [x29, #-32]
    5ed0:	ldr	x11, [x10, #40]
    5ed4:	add	x12, x11, #0x1
    5ed8:	str	x12, [x10, #40]
    5edc:	add	x9, x9, x11
    5ee0:	strb	w8, [x9]
    5ee4:	ldur	x9, [x29, #-32]
    5ee8:	ldr	x9, [x9, #56]
    5eec:	ldr	w8, [x9, #20]
    5ef0:	and	w8, w8, #0xff
    5ef4:	ldur	x9, [x29, #-32]
    5ef8:	ldr	x9, [x9, #16]
    5efc:	ldur	x10, [x29, #-32]
    5f00:	ldr	x11, [x10, #40]
    5f04:	add	x12, x11, #0x1
    5f08:	str	x12, [x10, #40]
    5f0c:	add	x9, x9, x11
    5f10:	strb	w8, [x9]
    5f14:	ldur	x9, [x29, #-32]
    5f18:	ldr	x9, [x9, #56]
    5f1c:	ldr	x9, [x9, #24]
    5f20:	cbz	x9, 5f88 <deflate@@Base+0x82c>
    5f24:	ldur	x8, [x29, #-32]
    5f28:	ldr	x8, [x8, #56]
    5f2c:	ldr	w9, [x8, #32]
    5f30:	and	w9, w9, #0xff
    5f34:	ldur	x8, [x29, #-32]
    5f38:	ldr	x8, [x8, #16]
    5f3c:	ldur	x10, [x29, #-32]
    5f40:	ldr	x11, [x10, #40]
    5f44:	add	x12, x11, #0x1
    5f48:	str	x12, [x10, #40]
    5f4c:	add	x8, x8, x11
    5f50:	strb	w9, [x8]
    5f54:	ldur	x8, [x29, #-32]
    5f58:	ldr	x8, [x8, #56]
    5f5c:	ldr	w9, [x8, #32]
    5f60:	lsr	w9, w9, #8
    5f64:	and	w9, w9, #0xff
    5f68:	ldur	x8, [x29, #-32]
    5f6c:	ldr	x8, [x8, #16]
    5f70:	ldur	x10, [x29, #-32]
    5f74:	ldr	x11, [x10, #40]
    5f78:	add	x12, x11, #0x1
    5f7c:	str	x12, [x10, #40]
    5f80:	add	x8, x8, x11
    5f84:	strb	w9, [x8]
    5f88:	ldur	x8, [x29, #-32]
    5f8c:	ldr	x8, [x8, #56]
    5f90:	ldr	w9, [x8, #68]
    5f94:	cbz	w9, 5fc0 <deflate@@Base+0x864>
    5f98:	ldur	x8, [x29, #-16]
    5f9c:	ldr	x0, [x8, #96]
    5fa0:	ldur	x8, [x29, #-32]
    5fa4:	ldr	x1, [x8, #16]
    5fa8:	ldur	x8, [x29, #-32]
    5fac:	ldr	x8, [x8, #40]
    5fb0:	mov	w2, w8
    5fb4:	bl	2430 <crc32@plt>
    5fb8:	ldur	x9, [x29, #-16]
    5fbc:	str	x0, [x9, #96]
    5fc0:	ldur	x8, [x29, #-32]
    5fc4:	str	xzr, [x8, #64]
    5fc8:	ldur	x8, [x29, #-32]
    5fcc:	mov	w9, #0x45                  	// #69
    5fd0:	str	w9, [x8, #8]
    5fd4:	ldur	x8, [x29, #-32]
    5fd8:	ldr	w9, [x8, #8]
    5fdc:	cmp	w9, #0x45
    5fe0:	b.ne	6220 <deflate@@Base+0xac4>  // b.any
    5fe4:	ldur	x8, [x29, #-32]
    5fe8:	ldr	x8, [x8, #56]
    5fec:	ldr	x8, [x8, #24]
    5ff0:	cbz	x8, 6214 <deflate@@Base+0xab8>
    5ff4:	ldur	x8, [x29, #-32]
    5ff8:	ldr	x8, [x8, #40]
    5ffc:	stur	x8, [x29, #-48]
    6000:	ldur	x8, [x29, #-32]
    6004:	ldr	x8, [x8, #56]
    6008:	ldr	w9, [x8, #32]
    600c:	and	w9, w9, #0xffff
    6010:	mov	w8, w9
    6014:	ubfx	x8, x8, #0, #32
    6018:	ldur	x10, [x29, #-32]
    601c:	ldr	x10, [x10, #64]
    6020:	subs	x8, x8, x10
    6024:	stur	w8, [x29, #-52]
    6028:	ldur	x8, [x29, #-32]
    602c:	ldr	x8, [x8, #40]
    6030:	ldur	w9, [x29, #-52]
    6034:	mov	w10, w9
    6038:	add	x8, x8, x10
    603c:	ldur	x10, [x29, #-32]
    6040:	ldr	x10, [x10, #24]
    6044:	cmp	x8, x10
    6048:	b.ls	6160 <deflate@@Base+0xa04>  // b.plast
    604c:	ldur	x8, [x29, #-32]
    6050:	ldr	x8, [x8, #24]
    6054:	ldur	x9, [x29, #-32]
    6058:	ldr	x9, [x9, #40]
    605c:	subs	x8, x8, x9
    6060:	stur	w8, [x29, #-56]
    6064:	ldur	x9, [x29, #-32]
    6068:	ldr	x9, [x9, #16]
    606c:	ldur	x10, [x29, #-32]
    6070:	ldr	x10, [x10, #40]
    6074:	add	x0, x9, x10
    6078:	ldur	x9, [x29, #-32]
    607c:	ldr	x9, [x9, #56]
    6080:	ldr	x9, [x9, #24]
    6084:	ldur	x10, [x29, #-32]
    6088:	ldr	x10, [x10, #64]
    608c:	add	x1, x9, x10
    6090:	ldur	w8, [x29, #-56]
    6094:	mov	w2, w8
    6098:	bl	23a0 <memcpy@plt>
    609c:	ldur	x9, [x29, #-32]
    60a0:	ldr	x9, [x9, #24]
    60a4:	ldur	x10, [x29, #-32]
    60a8:	str	x9, [x10, #40]
    60ac:	ldur	x8, [x29, #-32]
    60b0:	ldr	x8, [x8, #56]
    60b4:	ldr	w9, [x8, #68]
    60b8:	cbz	w9, 6108 <deflate@@Base+0x9ac>
    60bc:	ldur	x8, [x29, #-32]
    60c0:	ldr	x8, [x8, #40]
    60c4:	ldur	x9, [x29, #-48]
    60c8:	cmp	x8, x9
    60cc:	b.ls	6108 <deflate@@Base+0x9ac>  // b.plast
    60d0:	ldur	x8, [x29, #-16]
    60d4:	ldr	x0, [x8, #96]
    60d8:	ldur	x8, [x29, #-32]
    60dc:	ldr	x8, [x8, #16]
    60e0:	ldur	x9, [x29, #-48]
    60e4:	add	x1, x8, x9
    60e8:	ldur	x8, [x29, #-32]
    60ec:	ldr	x8, [x8, #40]
    60f0:	ldur	x9, [x29, #-48]
    60f4:	subs	x8, x8, x9
    60f8:	mov	w2, w8
    60fc:	bl	2430 <crc32@plt>
    6100:	ldur	x9, [x29, #-16]
    6104:	str	x0, [x9, #96]
    6108:	ldur	w8, [x29, #-56]
    610c:	mov	w9, w8
    6110:	ldur	x10, [x29, #-32]
    6114:	ldr	x11, [x10, #64]
    6118:	add	x9, x11, x9
    611c:	str	x9, [x10, #64]
    6120:	ldur	x0, [x29, #-16]
    6124:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    6128:	ldur	x9, [x29, #-32]
    612c:	ldr	x9, [x9, #40]
    6130:	cbz	x9, 6148 <deflate@@Base+0x9ec>
    6134:	ldur	x8, [x29, #-32]
    6138:	mov	w9, #0xffffffff            	// #-1
    613c:	str	w9, [x8, #76]
    6140:	stur	wzr, [x29, #-4]
    6144:	b	6ab8 <deflate@@Base+0x135c>
    6148:	stur	xzr, [x29, #-48]
    614c:	ldur	w8, [x29, #-56]
    6150:	ldur	w9, [x29, #-52]
    6154:	subs	w8, w9, w8
    6158:	stur	w8, [x29, #-52]
    615c:	b	6028 <deflate@@Base+0x8cc>
    6160:	ldur	x8, [x29, #-32]
    6164:	ldr	x8, [x8, #16]
    6168:	ldur	x9, [x29, #-32]
    616c:	ldr	x9, [x9, #40]
    6170:	add	x0, x8, x9
    6174:	ldur	x8, [x29, #-32]
    6178:	ldr	x8, [x8, #56]
    617c:	ldr	x8, [x8, #24]
    6180:	ldur	x9, [x29, #-32]
    6184:	ldr	x9, [x9, #64]
    6188:	add	x1, x8, x9
    618c:	ldur	w10, [x29, #-52]
    6190:	mov	w2, w10
    6194:	bl	23a0 <memcpy@plt>
    6198:	ldur	w10, [x29, #-52]
    619c:	mov	w8, w10
    61a0:	ldur	x9, [x29, #-32]
    61a4:	ldr	x11, [x9, #40]
    61a8:	add	x8, x11, x8
    61ac:	str	x8, [x9, #40]
    61b0:	ldur	x8, [x29, #-32]
    61b4:	ldr	x8, [x8, #56]
    61b8:	ldr	w9, [x8, #68]
    61bc:	cbz	w9, 620c <deflate@@Base+0xab0>
    61c0:	ldur	x8, [x29, #-32]
    61c4:	ldr	x8, [x8, #40]
    61c8:	ldur	x9, [x29, #-48]
    61cc:	cmp	x8, x9
    61d0:	b.ls	620c <deflate@@Base+0xab0>  // b.plast
    61d4:	ldur	x8, [x29, #-16]
    61d8:	ldr	x0, [x8, #96]
    61dc:	ldur	x8, [x29, #-32]
    61e0:	ldr	x8, [x8, #16]
    61e4:	ldur	x9, [x29, #-48]
    61e8:	add	x1, x8, x9
    61ec:	ldur	x8, [x29, #-32]
    61f0:	ldr	x8, [x8, #40]
    61f4:	ldur	x9, [x29, #-48]
    61f8:	subs	x8, x8, x9
    61fc:	mov	w2, w8
    6200:	bl	2430 <crc32@plt>
    6204:	ldur	x9, [x29, #-16]
    6208:	str	x0, [x9, #96]
    620c:	ldur	x8, [x29, #-32]
    6210:	str	xzr, [x8, #64]
    6214:	ldur	x8, [x29, #-32]
    6218:	mov	w9, #0x49                  	// #73
    621c:	str	w9, [x8, #8]
    6220:	ldur	x8, [x29, #-32]
    6224:	ldr	w9, [x8, #8]
    6228:	cmp	w9, #0x49
    622c:	b.ne	63ac <deflate@@Base+0xc50>  // b.any
    6230:	ldur	x8, [x29, #-32]
    6234:	ldr	x8, [x8, #56]
    6238:	ldr	x8, [x8, #40]
    623c:	cbz	x8, 63a0 <deflate@@Base+0xc44>
    6240:	ldur	x8, [x29, #-32]
    6244:	ldr	x8, [x8, #40]
    6248:	str	x8, [sp, #64]
    624c:	ldur	x8, [x29, #-32]
    6250:	ldr	x8, [x8, #40]
    6254:	ldur	x9, [x29, #-32]
    6258:	ldr	x9, [x9, #24]
    625c:	cmp	x8, x9
    6260:	b.ne	62ec <deflate@@Base+0xb90>  // b.any
    6264:	ldur	x8, [x29, #-32]
    6268:	ldr	x8, [x8, #56]
    626c:	ldr	w9, [x8, #68]
    6270:	cbz	w9, 62c0 <deflate@@Base+0xb64>
    6274:	ldur	x8, [x29, #-32]
    6278:	ldr	x8, [x8, #40]
    627c:	ldr	x9, [sp, #64]
    6280:	cmp	x8, x9
    6284:	b.ls	62c0 <deflate@@Base+0xb64>  // b.plast
    6288:	ldur	x8, [x29, #-16]
    628c:	ldr	x0, [x8, #96]
    6290:	ldur	x8, [x29, #-32]
    6294:	ldr	x8, [x8, #16]
    6298:	ldr	x9, [sp, #64]
    629c:	add	x1, x8, x9
    62a0:	ldur	x8, [x29, #-32]
    62a4:	ldr	x8, [x8, #40]
    62a8:	ldr	x9, [sp, #64]
    62ac:	subs	x8, x8, x9
    62b0:	mov	w2, w8
    62b4:	bl	2430 <crc32@plt>
    62b8:	ldur	x9, [x29, #-16]
    62bc:	str	x0, [x9, #96]
    62c0:	ldur	x0, [x29, #-16]
    62c4:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    62c8:	ldur	x8, [x29, #-32]
    62cc:	ldr	x8, [x8, #40]
    62d0:	cbz	x8, 62e8 <deflate@@Base+0xb8c>
    62d4:	ldur	x8, [x29, #-32]
    62d8:	mov	w9, #0xffffffff            	// #-1
    62dc:	str	w9, [x8, #76]
    62e0:	stur	wzr, [x29, #-4]
    62e4:	b	6ab8 <deflate@@Base+0x135c>
    62e8:	str	xzr, [sp, #64]
    62ec:	ldur	x8, [x29, #-32]
    62f0:	ldr	x8, [x8, #56]
    62f4:	ldr	x8, [x8, #40]
    62f8:	ldur	x9, [x29, #-32]
    62fc:	ldr	x10, [x9, #64]
    6300:	add	x11, x10, #0x1
    6304:	str	x11, [x9, #64]
    6308:	ldrb	w12, [x8, x10]
    630c:	str	w12, [sp, #60]
    6310:	ldr	w12, [sp, #60]
    6314:	ldur	x8, [x29, #-32]
    6318:	ldr	x8, [x8, #16]
    631c:	ldur	x9, [x29, #-32]
    6320:	ldr	x10, [x9, #40]
    6324:	add	x11, x10, #0x1
    6328:	str	x11, [x9, #40]
    632c:	add	x8, x8, x10
    6330:	strb	w12, [x8]
    6334:	ldr	w8, [sp, #60]
    6338:	cbnz	w8, 624c <deflate@@Base+0xaf0>
    633c:	ldur	x8, [x29, #-32]
    6340:	ldr	x8, [x8, #56]
    6344:	ldr	w9, [x8, #68]
    6348:	cbz	w9, 6398 <deflate@@Base+0xc3c>
    634c:	ldur	x8, [x29, #-32]
    6350:	ldr	x8, [x8, #40]
    6354:	ldr	x9, [sp, #64]
    6358:	cmp	x8, x9
    635c:	b.ls	6398 <deflate@@Base+0xc3c>  // b.plast
    6360:	ldur	x8, [x29, #-16]
    6364:	ldr	x0, [x8, #96]
    6368:	ldur	x8, [x29, #-32]
    636c:	ldr	x8, [x8, #16]
    6370:	ldr	x9, [sp, #64]
    6374:	add	x1, x8, x9
    6378:	ldur	x8, [x29, #-32]
    637c:	ldr	x8, [x8, #40]
    6380:	ldr	x9, [sp, #64]
    6384:	subs	x8, x8, x9
    6388:	mov	w2, w8
    638c:	bl	2430 <crc32@plt>
    6390:	ldur	x9, [x29, #-16]
    6394:	str	x0, [x9, #96]
    6398:	ldur	x8, [x29, #-32]
    639c:	str	xzr, [x8, #64]
    63a0:	ldur	x8, [x29, #-32]
    63a4:	mov	w9, #0x5b                  	// #91
    63a8:	str	w9, [x8, #8]
    63ac:	ldur	x8, [x29, #-32]
    63b0:	ldr	w9, [x8, #8]
    63b4:	cmp	w9, #0x5b
    63b8:	b.ne	6530 <deflate@@Base+0xdd4>  // b.any
    63bc:	ldur	x8, [x29, #-32]
    63c0:	ldr	x8, [x8, #56]
    63c4:	ldr	x8, [x8, #56]
    63c8:	cbz	x8, 6524 <deflate@@Base+0xdc8>
    63cc:	ldur	x8, [x29, #-32]
    63d0:	ldr	x8, [x8, #40]
    63d4:	str	x8, [sp, #48]
    63d8:	ldur	x8, [x29, #-32]
    63dc:	ldr	x8, [x8, #40]
    63e0:	ldur	x9, [x29, #-32]
    63e4:	ldr	x9, [x9, #24]
    63e8:	cmp	x8, x9
    63ec:	b.ne	6478 <deflate@@Base+0xd1c>  // b.any
    63f0:	ldur	x8, [x29, #-32]
    63f4:	ldr	x8, [x8, #56]
    63f8:	ldr	w9, [x8, #68]
    63fc:	cbz	w9, 644c <deflate@@Base+0xcf0>
    6400:	ldur	x8, [x29, #-32]
    6404:	ldr	x8, [x8, #40]
    6408:	ldr	x9, [sp, #48]
    640c:	cmp	x8, x9
    6410:	b.ls	644c <deflate@@Base+0xcf0>  // b.plast
    6414:	ldur	x8, [x29, #-16]
    6418:	ldr	x0, [x8, #96]
    641c:	ldur	x8, [x29, #-32]
    6420:	ldr	x8, [x8, #16]
    6424:	ldr	x9, [sp, #48]
    6428:	add	x1, x8, x9
    642c:	ldur	x8, [x29, #-32]
    6430:	ldr	x8, [x8, #40]
    6434:	ldr	x9, [sp, #48]
    6438:	subs	x8, x8, x9
    643c:	mov	w2, w8
    6440:	bl	2430 <crc32@plt>
    6444:	ldur	x9, [x29, #-16]
    6448:	str	x0, [x9, #96]
    644c:	ldur	x0, [x29, #-16]
    6450:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    6454:	ldur	x8, [x29, #-32]
    6458:	ldr	x8, [x8, #40]
    645c:	cbz	x8, 6474 <deflate@@Base+0xd18>
    6460:	ldur	x8, [x29, #-32]
    6464:	mov	w9, #0xffffffff            	// #-1
    6468:	str	w9, [x8, #76]
    646c:	stur	wzr, [x29, #-4]
    6470:	b	6ab8 <deflate@@Base+0x135c>
    6474:	str	xzr, [sp, #48]
    6478:	ldur	x8, [x29, #-32]
    647c:	ldr	x8, [x8, #56]
    6480:	ldr	x8, [x8, #56]
    6484:	ldur	x9, [x29, #-32]
    6488:	ldr	x10, [x9, #64]
    648c:	add	x11, x10, #0x1
    6490:	str	x11, [x9, #64]
    6494:	ldrb	w12, [x8, x10]
    6498:	str	w12, [sp, #44]
    649c:	ldr	w12, [sp, #44]
    64a0:	ldur	x8, [x29, #-32]
    64a4:	ldr	x8, [x8, #16]
    64a8:	ldur	x9, [x29, #-32]
    64ac:	ldr	x10, [x9, #40]
    64b0:	add	x11, x10, #0x1
    64b4:	str	x11, [x9, #40]
    64b8:	add	x8, x8, x10
    64bc:	strb	w12, [x8]
    64c0:	ldr	w8, [sp, #44]
    64c4:	cbnz	w8, 63d8 <deflate@@Base+0xc7c>
    64c8:	ldur	x8, [x29, #-32]
    64cc:	ldr	x8, [x8, #56]
    64d0:	ldr	w9, [x8, #68]
    64d4:	cbz	w9, 6524 <deflate@@Base+0xdc8>
    64d8:	ldur	x8, [x29, #-32]
    64dc:	ldr	x8, [x8, #40]
    64e0:	ldr	x9, [sp, #48]
    64e4:	cmp	x8, x9
    64e8:	b.ls	6524 <deflate@@Base+0xdc8>  // b.plast
    64ec:	ldur	x8, [x29, #-16]
    64f0:	ldr	x0, [x8, #96]
    64f4:	ldur	x8, [x29, #-32]
    64f8:	ldr	x8, [x8, #16]
    64fc:	ldr	x9, [sp, #48]
    6500:	add	x1, x8, x9
    6504:	ldur	x8, [x29, #-32]
    6508:	ldr	x8, [x8, #40]
    650c:	ldr	x9, [sp, #48]
    6510:	subs	x8, x8, x9
    6514:	mov	w2, w8
    6518:	bl	2430 <crc32@plt>
    651c:	ldur	x9, [x29, #-16]
    6520:	str	x0, [x9, #96]
    6524:	ldur	x8, [x29, #-32]
    6528:	mov	w9, #0x67                  	// #103
    652c:	str	w9, [x8, #8]
    6530:	ldur	x8, [x29, #-32]
    6534:	ldr	w9, [x8, #8]
    6538:	cmp	w9, #0x67
    653c:	b.ne	6644 <deflate@@Base+0xee8>  // b.any
    6540:	ldur	x8, [x29, #-32]
    6544:	ldr	x8, [x8, #56]
    6548:	ldr	w9, [x8, #68]
    654c:	cbz	w9, 6610 <deflate@@Base+0xeb4>
    6550:	ldur	x8, [x29, #-32]
    6554:	ldr	x8, [x8, #40]
    6558:	add	x8, x8, #0x2
    655c:	ldur	x9, [x29, #-32]
    6560:	ldr	x9, [x9, #24]
    6564:	cmp	x8, x9
    6568:	b.ls	6594 <deflate@@Base+0xe38>  // b.plast
    656c:	ldur	x0, [x29, #-16]
    6570:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    6574:	ldur	x8, [x29, #-32]
    6578:	ldr	x8, [x8, #40]
    657c:	cbz	x8, 6594 <deflate@@Base+0xe38>
    6580:	ldur	x8, [x29, #-32]
    6584:	mov	w9, #0xffffffff            	// #-1
    6588:	str	w9, [x8, #76]
    658c:	stur	wzr, [x29, #-4]
    6590:	b	6ab8 <deflate@@Base+0x135c>
    6594:	ldur	x8, [x29, #-16]
    6598:	ldr	x8, [x8, #96]
    659c:	and	x8, x8, #0xff
    65a0:	ldur	x9, [x29, #-32]
    65a4:	ldr	x9, [x9, #16]
    65a8:	ldur	x10, [x29, #-32]
    65ac:	ldr	x11, [x10, #40]
    65b0:	add	x12, x11, #0x1
    65b4:	str	x12, [x10, #40]
    65b8:	add	x9, x9, x11
    65bc:	strb	w8, [x9]
    65c0:	ldur	x9, [x29, #-16]
    65c4:	ldr	x9, [x9, #96]
    65c8:	lsr	x9, x9, #8
    65cc:	and	x9, x9, #0xff
    65d0:	ldur	x10, [x29, #-32]
    65d4:	ldr	x10, [x10, #16]
    65d8:	ldur	x11, [x29, #-32]
    65dc:	ldr	x12, [x11, #40]
    65e0:	add	x13, x12, #0x1
    65e4:	str	x13, [x11, #40]
    65e8:	add	x10, x10, x12
    65ec:	strb	w9, [x10]
    65f0:	mov	x10, xzr
    65f4:	mov	x0, x10
    65f8:	mov	x1, x10
    65fc:	mov	w8, wzr
    6600:	mov	w2, w8
    6604:	bl	2430 <crc32@plt>
    6608:	ldur	x10, [x29, #-16]
    660c:	str	x0, [x10, #96]
    6610:	ldur	x8, [x29, #-32]
    6614:	mov	w9, #0x71                  	// #113
    6618:	str	w9, [x8, #8]
    661c:	ldur	x0, [x29, #-16]
    6620:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    6624:	ldur	x8, [x29, #-32]
    6628:	ldr	x8, [x8, #40]
    662c:	cbz	x8, 6644 <deflate@@Base+0xee8>
    6630:	ldur	x8, [x29, #-32]
    6634:	mov	w9, #0xffffffff            	// #-1
    6638:	str	w9, [x8, #76]
    663c:	stur	wzr, [x29, #-4]
    6640:	b	6ab8 <deflate@@Base+0x135c>
    6644:	ldur	x8, [x29, #-16]
    6648:	ldr	w9, [x8, #8]
    664c:	cbnz	w9, 6674 <deflate@@Base+0xf18>
    6650:	ldur	x8, [x29, #-32]
    6654:	ldr	w9, [x8, #180]
    6658:	cbnz	w9, 6674 <deflate@@Base+0xf18>
    665c:	ldur	w8, [x29, #-20]
    6660:	cbz	w8, 6878 <deflate@@Base+0x111c>
    6664:	ldur	x8, [x29, #-32]
    6668:	ldr	w9, [x8, #8]
    666c:	cmp	w9, #0x29a
    6670:	b.eq	6878 <deflate@@Base+0x111c>  // b.none
    6674:	ldur	x8, [x29, #-32]
    6678:	ldr	w9, [x8, #196]
    667c:	cbnz	w9, 6694 <deflate@@Base+0xf38>
    6680:	ldur	x0, [x29, #-32]
    6684:	ldur	w1, [x29, #-20]
    6688:	bl	7014 <deflateBound@@ZLIB_1.2.0+0x394>
    668c:	str	w0, [sp, #12]
    6690:	b	671c <deflate@@Base+0xfc0>
    6694:	ldur	x8, [x29, #-32]
    6698:	ldr	w9, [x8, #200]
    669c:	cmp	w9, #0x2
    66a0:	b.ne	66b8 <deflate@@Base+0xf5c>  // b.any
    66a4:	ldur	x0, [x29, #-32]
    66a8:	ldur	w1, [x29, #-20]
    66ac:	bl	79d8 <deflateBound@@ZLIB_1.2.0+0xd58>
    66b0:	str	w0, [sp, #8]
    66b4:	b	6714 <deflate@@Base+0xfb8>
    66b8:	ldur	x8, [x29, #-32]
    66bc:	ldr	w9, [x8, #200]
    66c0:	cmp	w9, #0x3
    66c4:	b.ne	66dc <deflate@@Base+0xf80>  // b.any
    66c8:	ldur	x0, [x29, #-32]
    66cc:	ldur	w1, [x29, #-20]
    66d0:	bl	7d5c <deflateBound@@ZLIB_1.2.0+0x10dc>
    66d4:	str	w0, [sp, #4]
    66d8:	b	670c <deflate@@Base+0xfb0>
    66dc:	ldur	x8, [x29, #-32]
    66e0:	ldrsw	x8, [x8, #196]
    66e4:	mov	x9, #0x10                  	// #16
    66e8:	mul	x8, x9, x8
    66ec:	adrp	x9, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
    66f0:	add	x9, x9, #0xc68
    66f4:	add	x8, x9, x8
    66f8:	ldr	x8, [x8, #8]
    66fc:	ldur	x0, [x29, #-32]
    6700:	ldur	w1, [x29, #-20]
    6704:	blr	x8
    6708:	str	w0, [sp, #4]
    670c:	ldr	w8, [sp, #4]
    6710:	str	w8, [sp, #8]
    6714:	ldr	w8, [sp, #8]
    6718:	str	w8, [sp, #12]
    671c:	ldr	w8, [sp, #12]
    6720:	str	w8, [sp, #40]
    6724:	ldr	w8, [sp, #40]
    6728:	cmp	w8, #0x2
    672c:	b.eq	673c <deflate@@Base+0xfe0>  // b.none
    6730:	ldr	w8, [sp, #40]
    6734:	cmp	w8, #0x3
    6738:	b.ne	6748 <deflate@@Base+0xfec>  // b.any
    673c:	ldur	x8, [x29, #-32]
    6740:	mov	w9, #0x29a                 	// #666
    6744:	str	w9, [x8, #8]
    6748:	ldr	w8, [sp, #40]
    674c:	cbz	w8, 675c <deflate@@Base+0x1000>
    6750:	ldr	w8, [sp, #40]
    6754:	cmp	w8, #0x2
    6758:	b.ne	677c <deflate@@Base+0x1020>  // b.any
    675c:	ldur	x8, [x29, #-16]
    6760:	ldr	w9, [x8, #32]
    6764:	cbnz	w9, 6774 <deflate@@Base+0x1018>
    6768:	ldur	x8, [x29, #-32]
    676c:	mov	w9, #0xffffffff            	// #-1
    6770:	str	w9, [x8, #76]
    6774:	stur	wzr, [x29, #-4]
    6778:	b	6ab8 <deflate@@Base+0x135c>
    677c:	ldr	w8, [sp, #40]
    6780:	cmp	w8, #0x1
    6784:	b.ne	6878 <deflate@@Base+0x111c>  // b.any
    6788:	ldur	w8, [x29, #-20]
    678c:	cmp	w8, #0x1
    6790:	b.ne	67a0 <deflate@@Base+0x1044>  // b.any
    6794:	ldur	x0, [x29, #-32]
    6798:	bl	113c0 <inflateCodesUsed@@ZLIB_1.2.9+0xf64>
    679c:	b	6850 <deflate@@Base+0x10f4>
    67a0:	ldur	w8, [x29, #-20]
    67a4:	cmp	w8, #0x5
    67a8:	b.eq	6850 <deflate@@Base+0x10f4>  // b.none
    67ac:	ldur	x0, [x29, #-32]
    67b0:	mov	x8, xzr
    67b4:	mov	x1, x8
    67b8:	mov	x2, x8
    67bc:	mov	w9, wzr
    67c0:	mov	w3, w9
    67c4:	bl	10fa0 <inflateCodesUsed@@ZLIB_1.2.9+0xb44>
    67c8:	ldur	w9, [x29, #-20]
    67cc:	cmp	w9, #0x3
    67d0:	b.ne	6850 <deflate@@Base+0x10f4>  // b.any
    67d4:	ldur	x8, [x29, #-32]
    67d8:	ldr	x8, [x8, #120]
    67dc:	ldur	x9, [x29, #-32]
    67e0:	ldr	w10, [x9, #132]
    67e4:	subs	w10, w10, #0x1
    67e8:	mov	w9, w10
    67ec:	ubfx	x9, x9, #0, #32
    67f0:	mov	x11, #0x2                   	// #2
    67f4:	mul	x9, x11, x9
    67f8:	add	x8, x8, x9
    67fc:	mov	w10, #0x0                   	// #0
    6800:	strh	w10, [x8]
    6804:	ldur	x8, [x29, #-32]
    6808:	ldr	x0, [x8, #120]
    680c:	ldur	x8, [x29, #-32]
    6810:	ldr	w10, [x8, #132]
    6814:	subs	w10, w10, #0x1
    6818:	mov	w12, #0x2                   	// #2
    681c:	umull	x2, w10, w12
    6820:	mov	w10, wzr
    6824:	mov	w1, w10
    6828:	bl	24a0 <memset@plt>
    682c:	ldur	x8, [x29, #-32]
    6830:	ldr	w10, [x8, #180]
    6834:	cbnz	w10, 6850 <deflate@@Base+0x10f4>
    6838:	ldur	x8, [x29, #-32]
    683c:	str	wzr, [x8, #172]
    6840:	ldur	x8, [x29, #-32]
    6844:	str	xzr, [x8, #152]
    6848:	ldur	x8, [x29, #-32]
    684c:	str	wzr, [x8, #5932]
    6850:	ldur	x0, [x29, #-16]
    6854:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    6858:	ldur	x8, [x29, #-16]
    685c:	ldr	w9, [x8, #32]
    6860:	cbnz	w9, 6878 <deflate@@Base+0x111c>
    6864:	ldur	x8, [x29, #-32]
    6868:	mov	w9, #0xffffffff            	// #-1
    686c:	str	w9, [x8, #76]
    6870:	stur	wzr, [x29, #-4]
    6874:	b	6ab8 <deflate@@Base+0x135c>
    6878:	ldur	w8, [x29, #-20]
    687c:	cmp	w8, #0x4
    6880:	b.eq	688c <deflate@@Base+0x1130>  // b.none
    6884:	stur	wzr, [x29, #-4]
    6888:	b	6ab8 <deflate@@Base+0x135c>
    688c:	ldur	x8, [x29, #-32]
    6890:	ldr	w9, [x8, #48]
    6894:	cmp	w9, #0x0
    6898:	cset	w9, gt
    689c:	tbnz	w9, #0, 68ac <deflate@@Base+0x1150>
    68a0:	mov	w8, #0x1                   	// #1
    68a4:	stur	w8, [x29, #-4]
    68a8:	b	6ab8 <deflate@@Base+0x135c>
    68ac:	ldur	x8, [x29, #-32]
    68b0:	ldr	w9, [x8, #48]
    68b4:	cmp	w9, #0x2
    68b8:	b.ne	6a38 <deflate@@Base+0x12dc>  // b.any
    68bc:	ldur	x8, [x29, #-16]
    68c0:	ldr	x8, [x8, #96]
    68c4:	and	x8, x8, #0xff
    68c8:	ldur	x9, [x29, #-32]
    68cc:	ldr	x9, [x9, #16]
    68d0:	ldur	x10, [x29, #-32]
    68d4:	ldr	x11, [x10, #40]
    68d8:	add	x12, x11, #0x1
    68dc:	str	x12, [x10, #40]
    68e0:	add	x9, x9, x11
    68e4:	strb	w8, [x9]
    68e8:	ldur	x9, [x29, #-16]
    68ec:	ldr	x9, [x9, #96]
    68f0:	lsr	x9, x9, #8
    68f4:	and	x9, x9, #0xff
    68f8:	ldur	x10, [x29, #-32]
    68fc:	ldr	x10, [x10, #16]
    6900:	ldur	x11, [x29, #-32]
    6904:	ldr	x12, [x11, #40]
    6908:	add	x13, x12, #0x1
    690c:	str	x13, [x11, #40]
    6910:	add	x10, x10, x12
    6914:	strb	w9, [x10]
    6918:	ldur	x10, [x29, #-16]
    691c:	ldr	x10, [x10, #96]
    6920:	lsr	x10, x10, #16
    6924:	and	x10, x10, #0xff
    6928:	ldur	x11, [x29, #-32]
    692c:	ldr	x11, [x11, #16]
    6930:	ldur	x12, [x29, #-32]
    6934:	ldr	x13, [x12, #40]
    6938:	add	x14, x13, #0x1
    693c:	str	x14, [x12, #40]
    6940:	add	x11, x11, x13
    6944:	strb	w10, [x11]
    6948:	ldur	x11, [x29, #-16]
    694c:	ldr	x11, [x11, #96]
    6950:	lsr	x11, x11, #24
    6954:	and	x11, x11, #0xff
    6958:	ldur	x12, [x29, #-32]
    695c:	ldr	x12, [x12, #16]
    6960:	ldur	x13, [x29, #-32]
    6964:	ldr	x14, [x13, #40]
    6968:	add	x15, x14, #0x1
    696c:	str	x15, [x13, #40]
    6970:	add	x12, x12, x14
    6974:	strb	w11, [x12]
    6978:	ldur	x12, [x29, #-16]
    697c:	ldr	x12, [x12, #16]
    6980:	and	x12, x12, #0xff
    6984:	ldur	x13, [x29, #-32]
    6988:	ldr	x13, [x13, #16]
    698c:	ldur	x14, [x29, #-32]
    6990:	ldr	x15, [x14, #40]
    6994:	add	x16, x15, #0x1
    6998:	str	x16, [x14, #40]
    699c:	add	x13, x13, x15
    69a0:	strb	w12, [x13]
    69a4:	ldur	x13, [x29, #-16]
    69a8:	ldr	x13, [x13, #16]
    69ac:	lsr	x13, x13, #8
    69b0:	and	x13, x13, #0xff
    69b4:	ldur	x14, [x29, #-32]
    69b8:	ldr	x14, [x14, #16]
    69bc:	ldur	x15, [x29, #-32]
    69c0:	ldr	x16, [x15, #40]
    69c4:	add	x17, x16, #0x1
    69c8:	str	x17, [x15, #40]
    69cc:	add	x14, x14, x16
    69d0:	strb	w13, [x14]
    69d4:	ldur	x14, [x29, #-16]
    69d8:	ldr	x14, [x14, #16]
    69dc:	lsr	x14, x14, #16
    69e0:	and	x14, x14, #0xff
    69e4:	ldur	x15, [x29, #-32]
    69e8:	ldr	x15, [x15, #16]
    69ec:	ldur	x16, [x29, #-32]
    69f0:	ldr	x17, [x16, #40]
    69f4:	add	x18, x17, #0x1
    69f8:	str	x18, [x16, #40]
    69fc:	add	x15, x15, x17
    6a00:	strb	w14, [x15]
    6a04:	ldur	x15, [x29, #-16]
    6a08:	ldr	x15, [x15, #16]
    6a0c:	lsr	x15, x15, #24
    6a10:	and	x15, x15, #0xff
    6a14:	ldur	x16, [x29, #-32]
    6a18:	ldr	x16, [x16, #16]
    6a1c:	ldur	x17, [x29, #-32]
    6a20:	ldr	x18, [x17, #40]
    6a24:	add	x0, x18, #0x1
    6a28:	str	x0, [x17, #40]
    6a2c:	add	x16, x16, x18
    6a30:	strb	w15, [x16]
    6a34:	b	6a68 <deflate@@Base+0x130c>
    6a38:	ldur	x0, [x29, #-32]
    6a3c:	ldur	x8, [x29, #-16]
    6a40:	ldr	x8, [x8, #96]
    6a44:	lsr	x8, x8, #16
    6a48:	mov	w1, w8
    6a4c:	bl	6fb0 <deflateBound@@ZLIB_1.2.0+0x330>
    6a50:	ldur	x0, [x29, #-32]
    6a54:	ldur	x9, [x29, #-16]
    6a58:	ldr	x9, [x9, #96]
    6a5c:	and	x9, x9, #0xffff
    6a60:	mov	w1, w9
    6a64:	bl	6fb0 <deflateBound@@ZLIB_1.2.0+0x330>
    6a68:	ldur	x0, [x29, #-16]
    6a6c:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    6a70:	ldur	x8, [x29, #-32]
    6a74:	ldr	w9, [x8, #48]
    6a78:	cmp	w9, #0x0
    6a7c:	cset	w9, le
    6a80:	tbnz	w9, #0, 6a9c <deflate@@Base+0x1340>
    6a84:	ldur	x8, [x29, #-32]
    6a88:	ldr	w9, [x8, #48]
    6a8c:	mov	w10, wzr
    6a90:	subs	w9, w10, w9
    6a94:	ldur	x8, [x29, #-32]
    6a98:	str	w9, [x8, #48]
    6a9c:	ldur	x8, [x29, #-32]
    6aa0:	ldr	x8, [x8, #40]
    6aa4:	mov	w9, #0x1                   	// #1
    6aa8:	mov	w10, wzr
    6aac:	cmp	x8, #0x0
    6ab0:	csel	w9, w10, w9, ne  // ne = any
    6ab4:	stur	w9, [x29, #-4]
    6ab8:	ldur	w0, [x29, #-4]
    6abc:	ldp	x29, x30, [sp, #128]
    6ac0:	add	sp, sp, #0x90
    6ac4:	ret
    6ac8:	sub	sp, sp, #0x30
    6acc:	str	x0, [sp, #40]
    6ad0:	ldr	x8, [sp, #40]
    6ad4:	ldr	w9, [x8, #80]
    6ad8:	str	w9, [sp, #20]
    6adc:	ldr	x8, [sp, #40]
    6ae0:	ldr	w9, [x8, #132]
    6ae4:	str	w9, [sp, #36]
    6ae8:	ldr	x8, [sp, #40]
    6aec:	ldr	x8, [x8, #120]
    6af0:	ldr	w9, [sp, #36]
    6af4:	mov	w10, w9
    6af8:	mov	x11, #0x2                   	// #2
    6afc:	mul	x10, x11, x10
    6b00:	add	x8, x8, x10
    6b04:	str	x8, [sp, #24]
    6b08:	ldr	x8, [sp, #24]
    6b0c:	mov	x9, #0xfffffffffffffffe    	// #-2
    6b10:	add	x9, x8, x9
    6b14:	str	x9, [sp, #24]
    6b18:	ldurh	w10, [x8, #-2]
    6b1c:	str	w10, [sp, #32]
    6b20:	ldr	w10, [sp, #32]
    6b24:	ldr	w11, [sp, #20]
    6b28:	cmp	w10, w11
    6b2c:	b.cc	6b44 <deflate@@Base+0x13e8>  // b.lo, b.ul, b.last
    6b30:	ldr	w8, [sp, #32]
    6b34:	ldr	w9, [sp, #20]
    6b38:	subs	w8, w8, w9
    6b3c:	str	w8, [sp, #16]
    6b40:	b	6b4c <deflate@@Base+0x13f0>
    6b44:	mov	w8, wzr
    6b48:	str	w8, [sp, #16]
    6b4c:	ldr	w8, [sp, #16]
    6b50:	ldr	x9, [sp, #24]
    6b54:	strh	w8, [x9]
    6b58:	ldr	w8, [sp, #36]
    6b5c:	subs	w8, w8, #0x1
    6b60:	str	w8, [sp, #36]
    6b64:	cbnz	w8, 6b08 <deflate@@Base+0x13ac>
    6b68:	ldr	w8, [sp, #20]
    6b6c:	str	w8, [sp, #36]
    6b70:	ldr	x9, [sp, #40]
    6b74:	ldr	x9, [x9, #112]
    6b78:	ldr	w8, [sp, #36]
    6b7c:	mov	w10, w8
    6b80:	mov	x11, #0x2                   	// #2
    6b84:	mul	x10, x11, x10
    6b88:	add	x9, x9, x10
    6b8c:	str	x9, [sp, #24]
    6b90:	ldr	x8, [sp, #24]
    6b94:	mov	x9, #0xfffffffffffffffe    	// #-2
    6b98:	add	x9, x8, x9
    6b9c:	str	x9, [sp, #24]
    6ba0:	ldurh	w10, [x8, #-2]
    6ba4:	str	w10, [sp, #32]
    6ba8:	ldr	w10, [sp, #32]
    6bac:	ldr	w11, [sp, #20]
    6bb0:	cmp	w10, w11
    6bb4:	b.cc	6bcc <deflate@@Base+0x1470>  // b.lo, b.ul, b.last
    6bb8:	ldr	w8, [sp, #32]
    6bbc:	ldr	w9, [sp, #20]
    6bc0:	subs	w8, w8, w9
    6bc4:	str	w8, [sp, #12]
    6bc8:	b	6bd4 <deflate@@Base+0x1478>
    6bcc:	mov	w8, wzr
    6bd0:	str	w8, [sp, #12]
    6bd4:	ldr	w8, [sp, #12]
    6bd8:	ldr	x9, [sp, #24]
    6bdc:	strh	w8, [x9]
    6be0:	ldr	w8, [sp, #36]
    6be4:	subs	w8, w8, #0x1
    6be8:	str	w8, [sp, #36]
    6bec:	cbnz	w8, 6b90 <deflate@@Base+0x1434>
    6bf0:	add	sp, sp, #0x30
    6bf4:	ret

0000000000006bf8 <deflateTune@@ZLIB_1.2.2.3>:
    6bf8:	sub	sp, sp, #0x40
    6bfc:	stp	x29, x30, [sp, #48]
    6c00:	add	x29, sp, #0x30
    6c04:	stur	x0, [x29, #-16]
    6c08:	stur	w1, [x29, #-20]
    6c0c:	str	w2, [sp, #24]
    6c10:	str	w3, [sp, #20]
    6c14:	str	w4, [sp, #16]
    6c18:	ldur	x0, [x29, #-16]
    6c1c:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    6c20:	cbz	w0, 6c30 <deflateTune@@ZLIB_1.2.2.3+0x38>
    6c24:	mov	w8, #0xfffffffe            	// #-2
    6c28:	stur	w8, [x29, #-4]
    6c2c:	b	6c70 <deflateTune@@ZLIB_1.2.2.3+0x78>
    6c30:	ldur	x8, [x29, #-16]
    6c34:	ldr	x8, [x8, #56]
    6c38:	str	x8, [sp, #8]
    6c3c:	ldur	w9, [x29, #-20]
    6c40:	ldr	x8, [sp, #8]
    6c44:	str	w9, [x8, #204]
    6c48:	ldr	w9, [sp, #24]
    6c4c:	ldr	x8, [sp, #8]
    6c50:	str	w9, [x8, #192]
    6c54:	ldr	w9, [sp, #20]
    6c58:	ldr	x8, [sp, #8]
    6c5c:	str	w9, [x8, #208]
    6c60:	ldr	w9, [sp, #16]
    6c64:	ldr	x8, [sp, #8]
    6c68:	str	w9, [x8, #188]
    6c6c:	stur	wzr, [x29, #-4]
    6c70:	ldur	w0, [x29, #-4]
    6c74:	ldp	x29, x30, [sp, #48]
    6c78:	add	sp, sp, #0x40
    6c7c:	ret

0000000000006c80 <deflateBound@@ZLIB_1.2.0>:
    6c80:	sub	sp, sp, #0x50
    6c84:	stp	x29, x30, [sp, #64]
    6c88:	add	x29, sp, #0x40
    6c8c:	stur	x0, [x29, #-16]
    6c90:	stur	x1, [x29, #-24]
    6c94:	ldur	x8, [x29, #-24]
    6c98:	ldur	x9, [x29, #-24]
    6c9c:	add	x9, x9, #0x7
    6ca0:	add	x8, x8, x9, lsr #3
    6ca4:	ldur	x9, [x29, #-24]
    6ca8:	add	x9, x9, #0x3f
    6cac:	add	x8, x8, x9, lsr #6
    6cb0:	add	x8, x8, #0x5
    6cb4:	str	x8, [sp, #24]
    6cb8:	ldur	x0, [x29, #-16]
    6cbc:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    6cc0:	cbz	w0, 6cd4 <deflateBound@@ZLIB_1.2.0+0x54>
    6cc4:	ldr	x8, [sp, #24]
    6cc8:	add	x8, x8, #0x6
    6ccc:	stur	x8, [x29, #-8]
    6cd0:	b	6e8c <deflateBound@@ZLIB_1.2.0+0x20c>
    6cd4:	ldur	x8, [x29, #-16]
    6cd8:	ldr	x8, [x8, #56]
    6cdc:	str	x8, [sp, #32]
    6ce0:	ldr	x8, [sp, #32]
    6ce4:	ldr	w9, [x8, #48]
    6ce8:	str	w9, [sp, #4]
    6cec:	cbz	w9, 6d14 <deflateBound@@ZLIB_1.2.0+0x94>
    6cf0:	b	6cf4 <deflateBound@@ZLIB_1.2.0+0x74>
    6cf4:	ldr	w8, [sp, #4]
    6cf8:	cmp	w8, #0x1
    6cfc:	b.eq	6d1c <deflateBound@@ZLIB_1.2.0+0x9c>  // b.none
    6d00:	b	6d04 <deflateBound@@ZLIB_1.2.0+0x84>
    6d04:	ldr	w8, [sp, #4]
    6d08:	cmp	w8, #0x2
    6d0c:	b.eq	6d48 <deflateBound@@ZLIB_1.2.0+0xc8>  // b.none
    6d10:	b	6e20 <deflateBound@@ZLIB_1.2.0+0x1a0>
    6d14:	str	xzr, [sp, #16]
    6d18:	b	6e28 <deflateBound@@ZLIB_1.2.0+0x1a8>
    6d1c:	ldr	x8, [sp, #32]
    6d20:	ldr	w9, [x8, #172]
    6d24:	mov	w10, wzr
    6d28:	mov	w11, #0x4                   	// #4
    6d2c:	cmp	w9, #0x0
    6d30:	csel	w9, w11, w10, ne  // ne = any
    6d34:	add	w9, w9, #0x6
    6d38:	mov	w0, w9
    6d3c:	sxtw	x8, w0
    6d40:	str	x8, [sp, #16]
    6d44:	b	6e28 <deflateBound@@ZLIB_1.2.0+0x1a8>
    6d48:	mov	x8, #0x12                  	// #18
    6d4c:	str	x8, [sp, #16]
    6d50:	ldr	x8, [sp, #32]
    6d54:	ldr	x8, [x8, #56]
    6d58:	cbz	x8, 6e1c <deflateBound@@ZLIB_1.2.0+0x19c>
    6d5c:	ldr	x8, [sp, #32]
    6d60:	ldr	x8, [x8, #56]
    6d64:	ldr	x8, [x8, #24]
    6d68:	cbz	x8, 6d90 <deflateBound@@ZLIB_1.2.0+0x110>
    6d6c:	ldr	x8, [sp, #32]
    6d70:	ldr	x8, [x8, #56]
    6d74:	ldr	w9, [x8, #32]
    6d78:	add	w9, w9, #0x2
    6d7c:	mov	w8, w9
    6d80:	ubfx	x8, x8, #0, #32
    6d84:	ldr	x10, [sp, #16]
    6d88:	add	x8, x10, x8
    6d8c:	str	x8, [sp, #16]
    6d90:	ldr	x8, [sp, #32]
    6d94:	ldr	x8, [x8, #56]
    6d98:	ldr	x8, [x8, #40]
    6d9c:	str	x8, [sp, #8]
    6da0:	ldr	x8, [sp, #8]
    6da4:	cbz	x8, 6dc8 <deflateBound@@ZLIB_1.2.0+0x148>
    6da8:	ldr	x8, [sp, #16]
    6dac:	add	x8, x8, #0x1
    6db0:	str	x8, [sp, #16]
    6db4:	ldr	x8, [sp, #8]
    6db8:	add	x9, x8, #0x1
    6dbc:	str	x9, [sp, #8]
    6dc0:	ldrb	w10, [x8]
    6dc4:	cbnz	w10, 6da8 <deflateBound@@ZLIB_1.2.0+0x128>
    6dc8:	ldr	x8, [sp, #32]
    6dcc:	ldr	x8, [x8, #56]
    6dd0:	ldr	x8, [x8, #56]
    6dd4:	str	x8, [sp, #8]
    6dd8:	ldr	x8, [sp, #8]
    6ddc:	cbz	x8, 6e00 <deflateBound@@ZLIB_1.2.0+0x180>
    6de0:	ldr	x8, [sp, #16]
    6de4:	add	x8, x8, #0x1
    6de8:	str	x8, [sp, #16]
    6dec:	ldr	x8, [sp, #8]
    6df0:	add	x9, x8, #0x1
    6df4:	str	x9, [sp, #8]
    6df8:	ldrb	w10, [x8]
    6dfc:	cbnz	w10, 6de0 <deflateBound@@ZLIB_1.2.0+0x160>
    6e00:	ldr	x8, [sp, #32]
    6e04:	ldr	x8, [x8, #56]
    6e08:	ldr	w9, [x8, #68]
    6e0c:	cbz	w9, 6e1c <deflateBound@@ZLIB_1.2.0+0x19c>
    6e10:	ldr	x8, [sp, #16]
    6e14:	add	x8, x8, #0x2
    6e18:	str	x8, [sp, #16]
    6e1c:	b	6e28 <deflateBound@@ZLIB_1.2.0+0x1a8>
    6e20:	mov	x8, #0x6                   	// #6
    6e24:	str	x8, [sp, #16]
    6e28:	ldr	x8, [sp, #32]
    6e2c:	ldr	w9, [x8, #84]
    6e30:	cmp	w9, #0xf
    6e34:	b.ne	6e48 <deflateBound@@ZLIB_1.2.0+0x1c8>  // b.any
    6e38:	ldr	x8, [sp, #32]
    6e3c:	ldr	w9, [x8, #136]
    6e40:	cmp	w9, #0xf
    6e44:	b.eq	6e5c <deflateBound@@ZLIB_1.2.0+0x1dc>  // b.none
    6e48:	ldr	x8, [sp, #24]
    6e4c:	ldr	x9, [sp, #16]
    6e50:	add	x8, x8, x9
    6e54:	stur	x8, [x29, #-8]
    6e58:	b	6e8c <deflateBound@@ZLIB_1.2.0+0x20c>
    6e5c:	ldur	x8, [x29, #-24]
    6e60:	ldur	x9, [x29, #-24]
    6e64:	add	x8, x8, x9, lsr #12
    6e68:	ldur	x9, [x29, #-24]
    6e6c:	add	x8, x8, x9, lsr #14
    6e70:	ldur	x9, [x29, #-24]
    6e74:	add	x8, x8, x9, lsr #25
    6e78:	add	x8, x8, #0xd
    6e7c:	subs	x8, x8, #0x6
    6e80:	ldr	x9, [sp, #16]
    6e84:	add	x8, x8, x9
    6e88:	stur	x8, [x29, #-8]
    6e8c:	ldur	x0, [x29, #-8]
    6e90:	ldp	x29, x30, [sp, #64]
    6e94:	add	sp, sp, #0x50
    6e98:	ret
    6e9c:	sub	sp, sp, #0x30
    6ea0:	stp	x29, x30, [sp, #32]
    6ea4:	add	x29, sp, #0x20
    6ea8:	stur	x0, [x29, #-8]
    6eac:	ldur	x8, [x29, #-8]
    6eb0:	ldr	x8, [x8, #56]
    6eb4:	str	x8, [sp, #8]
    6eb8:	ldr	x0, [sp, #8]
    6ebc:	bl	112b4 <inflateCodesUsed@@ZLIB_1.2.9+0xe58>
    6ec0:	ldr	x8, [sp, #8]
    6ec4:	ldr	x8, [x8, #40]
    6ec8:	stur	w8, [x29, #-12]
    6ecc:	ldur	w8, [x29, #-12]
    6ed0:	ldur	x9, [x29, #-8]
    6ed4:	ldr	w10, [x9, #32]
    6ed8:	cmp	w8, w10
    6edc:	b.ls	6eec <deflateBound@@ZLIB_1.2.0+0x26c>  // b.plast
    6ee0:	ldur	x8, [x29, #-8]
    6ee4:	ldr	w9, [x8, #32]
    6ee8:	stur	w9, [x29, #-12]
    6eec:	ldur	w8, [x29, #-12]
    6ef0:	cbnz	w8, 6ef8 <deflateBound@@ZLIB_1.2.0+0x278>
    6ef4:	b	6fa4 <deflateBound@@ZLIB_1.2.0+0x324>
    6ef8:	ldur	x8, [x29, #-8]
    6efc:	ldr	x0, [x8, #24]
    6f00:	ldr	x8, [sp, #8]
    6f04:	ldr	x1, [x8, #32]
    6f08:	ldur	w9, [x29, #-12]
    6f0c:	mov	w2, w9
    6f10:	bl	23a0 <memcpy@plt>
    6f14:	ldur	w9, [x29, #-12]
    6f18:	mov	w8, w9
    6f1c:	ldur	x10, [x29, #-8]
    6f20:	ldr	x11, [x10, #24]
    6f24:	add	x8, x11, x8
    6f28:	str	x8, [x10, #24]
    6f2c:	ldur	w9, [x29, #-12]
    6f30:	mov	w8, w9
    6f34:	ldr	x10, [sp, #8]
    6f38:	ldr	x11, [x10, #32]
    6f3c:	add	x8, x11, x8
    6f40:	str	x8, [x10, #32]
    6f44:	ldur	w9, [x29, #-12]
    6f48:	mov	w8, w9
    6f4c:	ldur	x10, [x29, #-8]
    6f50:	ldr	x11, [x10, #40]
    6f54:	add	x8, x11, x8
    6f58:	str	x8, [x10, #40]
    6f5c:	ldur	w9, [x29, #-12]
    6f60:	ldur	x8, [x29, #-8]
    6f64:	ldr	w12, [x8, #32]
    6f68:	subs	w9, w12, w9
    6f6c:	str	w9, [x8, #32]
    6f70:	ldur	w9, [x29, #-12]
    6f74:	mov	w8, w9
    6f78:	ldr	x10, [sp, #8]
    6f7c:	ldr	x11, [x10, #40]
    6f80:	subs	x8, x11, x8
    6f84:	str	x8, [x10, #40]
    6f88:	ldr	x8, [sp, #8]
    6f8c:	ldr	x8, [x8, #40]
    6f90:	cbnz	x8, 6fa4 <deflateBound@@ZLIB_1.2.0+0x324>
    6f94:	ldr	x8, [sp, #8]
    6f98:	ldr	x8, [x8, #16]
    6f9c:	ldr	x9, [sp, #8]
    6fa0:	str	x8, [x9, #32]
    6fa4:	ldp	x29, x30, [sp, #32]
    6fa8:	add	sp, sp, #0x30
    6fac:	ret
    6fb0:	sub	sp, sp, #0x10
    6fb4:	str	x0, [sp, #8]
    6fb8:	str	w1, [sp, #4]
    6fbc:	ldr	w8, [sp, #4]
    6fc0:	lsr	w8, w8, #8
    6fc4:	ldr	x9, [sp, #8]
    6fc8:	ldr	x9, [x9, #16]
    6fcc:	ldr	x10, [sp, #8]
    6fd0:	ldr	x11, [x10, #40]
    6fd4:	add	x12, x11, #0x1
    6fd8:	str	x12, [x10, #40]
    6fdc:	add	x9, x9, x11
    6fe0:	strb	w8, [x9]
    6fe4:	ldr	w8, [sp, #4]
    6fe8:	and	w8, w8, #0xff
    6fec:	ldr	x9, [sp, #8]
    6ff0:	ldr	x9, [x9, #16]
    6ff4:	ldr	x10, [sp, #8]
    6ff8:	ldr	x11, [x10, #40]
    6ffc:	add	x12, x11, #0x1
    7000:	str	x12, [x10, #40]
    7004:	add	x9, x9, x11
    7008:	strb	w8, [x9]
    700c:	add	sp, sp, #0x10
    7010:	ret
    7014:	sub	sp, sp, #0x70
    7018:	stp	x29, x30, [sp, #96]
    701c:	add	x29, sp, #0x60
    7020:	stur	x0, [x29, #-16]
    7024:	stur	w1, [x29, #-20]
    7028:	ldur	x8, [x29, #-16]
    702c:	ldr	x8, [x8, #24]
    7030:	subs	x8, x8, #0x5
    7034:	ldur	x9, [x29, #-16]
    7038:	ldr	w10, [x9, #80]
    703c:	mov	w9, w10
    7040:	cmp	x8, x9
    7044:	b.ls	705c <deflateBound@@ZLIB_1.2.0+0x3dc>  // b.plast
    7048:	ldur	x8, [x29, #-16]
    704c:	ldr	w9, [x8, #80]
    7050:	mov	w0, w9
    7054:	str	x0, [sp, #40]
    7058:	b	706c <deflateBound@@ZLIB_1.2.0+0x3ec>
    705c:	ldur	x8, [x29, #-16]
    7060:	ldr	x8, [x8, #24]
    7064:	subs	x8, x8, #0x5
    7068:	str	x8, [sp, #40]
    706c:	ldr	x8, [sp, #40]
    7070:	stur	w8, [x29, #-24]
    7074:	stur	wzr, [x29, #-40]
    7078:	ldur	x9, [x29, #-16]
    707c:	ldr	x9, [x9]
    7080:	ldr	w8, [x9, #8]
    7084:	stur	w8, [x29, #-44]
    7088:	mov	w8, #0xffff                	// #65535
    708c:	stur	w8, [x29, #-28]
    7090:	ldur	x9, [x29, #-16]
    7094:	ldr	w8, [x9, #5940]
    7098:	add	w8, w8, #0x2a
    709c:	asr	w8, w8, #3
    70a0:	stur	w8, [x29, #-36]
    70a4:	ldur	x9, [x29, #-16]
    70a8:	ldr	x9, [x9]
    70ac:	ldr	w8, [x9, #32]
    70b0:	ldur	w10, [x29, #-36]
    70b4:	cmp	w8, w10
    70b8:	b.cs	70c0 <deflateBound@@ZLIB_1.2.0+0x440>  // b.hs, b.nlast
    70bc:	b	73e8 <deflateBound@@ZLIB_1.2.0+0x768>
    70c0:	ldur	x8, [x29, #-16]
    70c4:	ldr	x8, [x8]
    70c8:	ldr	w9, [x8, #32]
    70cc:	ldur	w10, [x29, #-36]
    70d0:	subs	w9, w9, w10
    70d4:	stur	w9, [x29, #-36]
    70d8:	ldur	x8, [x29, #-16]
    70dc:	ldr	w9, [x8, #172]
    70e0:	mov	w8, w9
    70e4:	ldur	x11, [x29, #-16]
    70e8:	ldr	x11, [x11, #152]
    70ec:	subs	x8, x8, x11
    70f0:	stur	w8, [x29, #-32]
    70f4:	ldur	w8, [x29, #-28]
    70f8:	mov	w11, w8
    70fc:	ldur	w8, [x29, #-32]
    7100:	mov	w12, w8
    7104:	ldur	x13, [x29, #-16]
    7108:	ldr	x13, [x13]
    710c:	ldr	w8, [x13, #8]
    7110:	mov	w13, w8
    7114:	add	x12, x12, x13
    7118:	cmp	x11, x12
    711c:	b.ls	7138 <deflateBound@@ZLIB_1.2.0+0x4b8>  // b.plast
    7120:	ldur	w8, [x29, #-32]
    7124:	ldur	x9, [x29, #-16]
    7128:	ldr	x9, [x9]
    712c:	ldr	w10, [x9, #8]
    7130:	add	w8, w8, w10
    7134:	stur	w8, [x29, #-28]
    7138:	ldur	w8, [x29, #-28]
    713c:	ldur	w9, [x29, #-36]
    7140:	cmp	w8, w9
    7144:	b.ls	7150 <deflateBound@@ZLIB_1.2.0+0x4d0>  // b.plast
    7148:	ldur	w8, [x29, #-36]
    714c:	stur	w8, [x29, #-28]
    7150:	ldur	w8, [x29, #-28]
    7154:	ldur	w9, [x29, #-24]
    7158:	cmp	w8, w9
    715c:	b.cs	71a0 <deflateBound@@ZLIB_1.2.0+0x520>  // b.hs, b.nlast
    7160:	ldur	w8, [x29, #-28]
    7164:	cbnz	w8, 7174 <deflateBound@@ZLIB_1.2.0+0x4f4>
    7168:	ldur	w8, [x29, #-20]
    716c:	cmp	w8, #0x4
    7170:	b.ne	719c <deflateBound@@ZLIB_1.2.0+0x51c>  // b.any
    7174:	ldur	w8, [x29, #-20]
    7178:	cbz	w8, 719c <deflateBound@@ZLIB_1.2.0+0x51c>
    717c:	ldur	w8, [x29, #-28]
    7180:	ldur	w9, [x29, #-32]
    7184:	ldur	x10, [x29, #-16]
    7188:	ldr	x10, [x10]
    718c:	ldr	w11, [x10, #8]
    7190:	add	w9, w9, w11
    7194:	cmp	w8, w9
    7198:	b.eq	71a0 <deflateBound@@ZLIB_1.2.0+0x520>  // b.none
    719c:	b	73e8 <deflateBound@@ZLIB_1.2.0+0x768>
    71a0:	ldur	w8, [x29, #-20]
    71a4:	mov	w9, #0x0                   	// #0
    71a8:	cmp	w8, #0x4
    71ac:	str	w9, [sp, #36]
    71b0:	b.ne	71d8 <deflateBound@@ZLIB_1.2.0+0x558>  // b.any
    71b4:	ldur	w8, [x29, #-28]
    71b8:	ldur	w9, [x29, #-32]
    71bc:	ldur	x10, [x29, #-16]
    71c0:	ldr	x10, [x10]
    71c4:	ldr	w11, [x10, #8]
    71c8:	add	w9, w9, w11
    71cc:	cmp	w8, w9
    71d0:	cset	w8, eq  // eq = none
    71d4:	str	w8, [sp, #36]
    71d8:	ldr	w8, [sp, #36]
    71dc:	mov	w9, #0x1                   	// #1
    71e0:	mov	w10, wzr
    71e4:	tst	w8, #0x1
    71e8:	csel	w8, w9, w10, ne  // ne = any
    71ec:	stur	w8, [x29, #-40]
    71f0:	ldur	x0, [x29, #-16]
    71f4:	ldur	w3, [x29, #-40]
    71f8:	mov	x11, xzr
    71fc:	mov	x1, x11
    7200:	mov	x2, x11
    7204:	bl	10fa0 <inflateCodesUsed@@ZLIB_1.2.9+0xb44>
    7208:	ldur	w8, [x29, #-28]
    720c:	ldur	x11, [x29, #-16]
    7210:	ldr	x11, [x11, #16]
    7214:	ldur	x12, [x29, #-16]
    7218:	ldr	x12, [x12, #40]
    721c:	subs	x12, x12, #0x4
    7220:	add	x11, x11, x12
    7224:	strb	w8, [x11]
    7228:	ldur	w8, [x29, #-28]
    722c:	mov	x11, #0x8                   	// #8
    7230:	lsr	w8, w8, #8
    7234:	ldur	x12, [x29, #-16]
    7238:	ldr	x12, [x12, #16]
    723c:	ldur	x13, [x29, #-16]
    7240:	ldr	x13, [x13, #40]
    7244:	subs	x13, x13, #0x3
    7248:	add	x12, x12, x13
    724c:	strb	w8, [x12]
    7250:	ldur	w8, [x29, #-28]
    7254:	mvn	w8, w8
    7258:	ldur	x12, [x29, #-16]
    725c:	ldr	x12, [x12, #16]
    7260:	ldur	x13, [x29, #-16]
    7264:	ldr	x13, [x13, #40]
    7268:	subs	x13, x13, #0x2
    726c:	add	x12, x12, x13
    7270:	strb	w8, [x12]
    7274:	ldur	w8, [x29, #-28]
    7278:	mvn	w8, w8
    727c:	lsr	w8, w8, w11
    7280:	ldur	x12, [x29, #-16]
    7284:	ldr	x12, [x12, #16]
    7288:	ldur	x13, [x29, #-16]
    728c:	ldr	x13, [x13, #40]
    7290:	subs	x13, x13, #0x1
    7294:	add	x12, x12, x13
    7298:	strb	w8, [x12]
    729c:	ldur	x12, [x29, #-16]
    72a0:	ldr	x0, [x12]
    72a4:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    72a8:	ldur	w8, [x29, #-32]
    72ac:	cbz	w8, 736c <deflateBound@@ZLIB_1.2.0+0x6ec>
    72b0:	ldur	w8, [x29, #-32]
    72b4:	ldur	w9, [x29, #-28]
    72b8:	cmp	w8, w9
    72bc:	b.ls	72c8 <deflateBound@@ZLIB_1.2.0+0x648>  // b.plast
    72c0:	ldur	w8, [x29, #-28]
    72c4:	stur	w8, [x29, #-32]
    72c8:	ldur	x8, [x29, #-16]
    72cc:	ldr	x8, [x8]
    72d0:	ldr	x0, [x8, #24]
    72d4:	ldur	x8, [x29, #-16]
    72d8:	ldr	x8, [x8, #96]
    72dc:	ldur	x9, [x29, #-16]
    72e0:	ldr	x9, [x9, #152]
    72e4:	add	x1, x8, x9
    72e8:	ldur	w10, [x29, #-32]
    72ec:	mov	w2, w10
    72f0:	bl	23a0 <memcpy@plt>
    72f4:	ldur	w10, [x29, #-32]
    72f8:	mov	w8, w10
    72fc:	ldur	x9, [x29, #-16]
    7300:	ldr	x9, [x9]
    7304:	ldr	x11, [x9, #24]
    7308:	add	x8, x11, x8
    730c:	str	x8, [x9, #24]
    7310:	ldur	w10, [x29, #-32]
    7314:	ldur	x8, [x29, #-16]
    7318:	ldr	x8, [x8]
    731c:	ldr	w12, [x8, #32]
    7320:	subs	w10, w12, w10
    7324:	str	w10, [x8, #32]
    7328:	ldur	w10, [x29, #-32]
    732c:	mov	w8, w10
    7330:	ldur	x9, [x29, #-16]
    7334:	ldr	x9, [x9]
    7338:	ldr	x11, [x9, #40]
    733c:	add	x8, x11, x8
    7340:	str	x8, [x9, #40]
    7344:	ldur	w10, [x29, #-32]
    7348:	mov	w8, w10
    734c:	ldur	x9, [x29, #-16]
    7350:	ldr	x11, [x9, #152]
    7354:	add	x8, x11, x8
    7358:	str	x8, [x9, #152]
    735c:	ldur	w10, [x29, #-32]
    7360:	ldur	w12, [x29, #-28]
    7364:	subs	w10, w12, w10
    7368:	stur	w10, [x29, #-28]
    736c:	ldur	w8, [x29, #-28]
    7370:	cbz	w8, 73e0 <deflateBound@@ZLIB_1.2.0+0x760>
    7374:	ldur	x8, [x29, #-16]
    7378:	ldr	x0, [x8]
    737c:	ldur	x8, [x29, #-16]
    7380:	ldr	x8, [x8]
    7384:	ldr	x1, [x8, #24]
    7388:	ldur	w2, [x29, #-28]
    738c:	bl	9ec4 <deflateCopy@@Base+0x19e0>
    7390:	ldur	w9, [x29, #-28]
    7394:	mov	w8, w9
    7398:	ldur	x10, [x29, #-16]
    739c:	ldr	x10, [x10]
    73a0:	ldr	x11, [x10, #24]
    73a4:	add	x8, x11, x8
    73a8:	str	x8, [x10, #24]
    73ac:	ldur	w9, [x29, #-28]
    73b0:	ldur	x8, [x29, #-16]
    73b4:	ldr	x8, [x8]
    73b8:	ldr	w12, [x8, #32]
    73bc:	subs	w9, w12, w9
    73c0:	str	w9, [x8, #32]
    73c4:	ldur	w9, [x29, #-28]
    73c8:	mov	w8, w9
    73cc:	ldur	x10, [x29, #-16]
    73d0:	ldr	x10, [x10]
    73d4:	ldr	x11, [x10, #40]
    73d8:	add	x8, x11, x8
    73dc:	str	x8, [x10, #40]
    73e0:	ldur	w8, [x29, #-40]
    73e4:	cbz	w8, 7088 <deflateBound@@ZLIB_1.2.0+0x408>
    73e8:	ldur	x8, [x29, #-16]
    73ec:	ldr	x8, [x8]
    73f0:	ldr	w9, [x8, #8]
    73f4:	ldur	w10, [x29, #-44]
    73f8:	subs	w9, w10, w9
    73fc:	stur	w9, [x29, #-44]
    7400:	ldur	w9, [x29, #-44]
    7404:	cbz	w9, 75cc <deflateBound@@ZLIB_1.2.0+0x94c>
    7408:	ldur	w8, [x29, #-44]
    740c:	ldur	x9, [x29, #-16]
    7410:	ldr	w10, [x9, #80]
    7414:	cmp	w8, w10
    7418:	b.cc	7478 <deflateBound@@ZLIB_1.2.0+0x7f8>  // b.lo, b.ul, b.last
    741c:	ldur	x8, [x29, #-16]
    7420:	mov	w9, #0x2                   	// #2
    7424:	str	w9, [x8, #5928]
    7428:	ldur	x8, [x29, #-16]
    742c:	ldr	x0, [x8, #96]
    7430:	ldur	x8, [x29, #-16]
    7434:	ldr	x8, [x8]
    7438:	ldr	x8, [x8]
    743c:	ldur	x10, [x29, #-16]
    7440:	ldr	w9, [x10, #80]
    7444:	mov	w10, w9
    7448:	mov	x11, xzr
    744c:	subs	x10, x11, x10
    7450:	add	x1, x8, x10
    7454:	ldur	x8, [x29, #-16]
    7458:	ldr	w9, [x8, #80]
    745c:	mov	w2, w9
    7460:	bl	23a0 <memcpy@plt>
    7464:	ldur	x8, [x29, #-16]
    7468:	ldr	w9, [x8, #80]
    746c:	ldur	x8, [x29, #-16]
    7470:	str	w9, [x8, #172]
    7474:	b	7560 <deflateBound@@ZLIB_1.2.0+0x8e0>
    7478:	ldur	x8, [x29, #-16]
    747c:	ldr	x8, [x8, #104]
    7480:	ldur	x9, [x29, #-16]
    7484:	ldr	w10, [x9, #172]
    7488:	mov	w9, w10
    748c:	subs	x8, x8, x9
    7490:	ldur	w10, [x29, #-44]
    7494:	mov	w9, w10
    7498:	cmp	x8, x9
    749c:	b.hi	7508 <deflateBound@@ZLIB_1.2.0+0x888>  // b.pmore
    74a0:	ldur	x8, [x29, #-16]
    74a4:	ldr	w9, [x8, #80]
    74a8:	ldur	x8, [x29, #-16]
    74ac:	ldr	w10, [x8, #172]
    74b0:	subs	w9, w10, w9
    74b4:	str	w9, [x8, #172]
    74b8:	ldur	x8, [x29, #-16]
    74bc:	ldr	x0, [x8, #96]
    74c0:	ldur	x8, [x29, #-16]
    74c4:	ldr	x8, [x8, #96]
    74c8:	ldur	x11, [x29, #-16]
    74cc:	ldr	w9, [x11, #80]
    74d0:	mov	w11, w9
    74d4:	add	x1, x8, x11
    74d8:	ldur	x8, [x29, #-16]
    74dc:	ldr	w9, [x8, #172]
    74e0:	mov	w2, w9
    74e4:	bl	23a0 <memcpy@plt>
    74e8:	ldur	x8, [x29, #-16]
    74ec:	ldr	w9, [x8, #5928]
    74f0:	cmp	w9, #0x2
    74f4:	b.cs	7508 <deflateBound@@ZLIB_1.2.0+0x888>  // b.hs, b.nlast
    74f8:	ldur	x8, [x29, #-16]
    74fc:	ldr	w9, [x8, #5928]
    7500:	add	w9, w9, #0x1
    7504:	str	w9, [x8, #5928]
    7508:	ldur	x8, [x29, #-16]
    750c:	ldr	x8, [x8, #96]
    7510:	ldur	x9, [x29, #-16]
    7514:	ldr	w10, [x9, #172]
    7518:	mov	w9, w10
    751c:	add	x0, x8, x9
    7520:	ldur	x8, [x29, #-16]
    7524:	ldr	x8, [x8]
    7528:	ldr	x8, [x8]
    752c:	ldur	w10, [x29, #-44]
    7530:	mov	w9, w10
    7534:	mov	x11, xzr
    7538:	subs	x9, x11, x9
    753c:	add	x1, x8, x9
    7540:	ldur	w10, [x29, #-44]
    7544:	mov	w2, w10
    7548:	bl	23a0 <memcpy@plt>
    754c:	ldur	w10, [x29, #-44]
    7550:	ldur	x8, [x29, #-16]
    7554:	ldr	w12, [x8, #172]
    7558:	add	w10, w12, w10
    755c:	str	w10, [x8, #172]
    7560:	ldur	x8, [x29, #-16]
    7564:	ldr	w9, [x8, #172]
    7568:	mov	w8, w9
    756c:	ldur	x10, [x29, #-16]
    7570:	str	x8, [x10, #152]
    7574:	ldur	w9, [x29, #-44]
    7578:	ldur	x8, [x29, #-16]
    757c:	ldr	w11, [x8, #80]
    7580:	ldur	x8, [x29, #-16]
    7584:	ldr	w12, [x8, #5932]
    7588:	subs	w11, w11, w12
    758c:	cmp	w9, w11
    7590:	b.ls	75b0 <deflateBound@@ZLIB_1.2.0+0x930>  // b.plast
    7594:	ldur	x8, [x29, #-16]
    7598:	ldr	w9, [x8, #80]
    759c:	ldur	x8, [x29, #-16]
    75a0:	ldr	w10, [x8, #5932]
    75a4:	subs	w9, w9, w10
    75a8:	str	w9, [sp, #32]
    75ac:	b	75b8 <deflateBound@@ZLIB_1.2.0+0x938>
    75b0:	ldur	w8, [x29, #-44]
    75b4:	str	w8, [sp, #32]
    75b8:	ldr	w8, [sp, #32]
    75bc:	ldur	x9, [x29, #-16]
    75c0:	ldr	w10, [x9, #5932]
    75c4:	add	w8, w10, w8
    75c8:	str	w8, [x9, #5932]
    75cc:	ldur	x8, [x29, #-16]
    75d0:	ldr	x8, [x8, #5944]
    75d4:	ldur	x9, [x29, #-16]
    75d8:	ldr	w10, [x9, #172]
    75dc:	mov	w9, w10
    75e0:	cmp	x8, x9
    75e4:	b.cs	75fc <deflateBound@@ZLIB_1.2.0+0x97c>  // b.hs, b.nlast
    75e8:	ldur	x8, [x29, #-16]
    75ec:	ldr	w9, [x8, #172]
    75f0:	mov	w8, w9
    75f4:	ldur	x10, [x29, #-16]
    75f8:	str	x8, [x10, #5944]
    75fc:	ldur	w8, [x29, #-40]
    7600:	cbz	w8, 7610 <deflateBound@@ZLIB_1.2.0+0x990>
    7604:	mov	w8, #0x3                   	// #3
    7608:	stur	w8, [x29, #-4]
    760c:	b	79c8 <deflateBound@@ZLIB_1.2.0+0xd48>
    7610:	ldur	w8, [x29, #-20]
    7614:	cbz	w8, 765c <deflateBound@@ZLIB_1.2.0+0x9dc>
    7618:	ldur	w8, [x29, #-20]
    761c:	cmp	w8, #0x4
    7620:	b.eq	765c <deflateBound@@ZLIB_1.2.0+0x9dc>  // b.none
    7624:	ldur	x8, [x29, #-16]
    7628:	ldr	x8, [x8]
    762c:	ldr	w9, [x8, #8]
    7630:	cbnz	w9, 765c <deflateBound@@ZLIB_1.2.0+0x9dc>
    7634:	ldur	x8, [x29, #-16]
    7638:	ldr	w9, [x8, #172]
    763c:	mov	w8, w9
    7640:	ldur	x10, [x29, #-16]
    7644:	ldr	x10, [x10, #152]
    7648:	cmp	x8, x10
    764c:	b.ne	765c <deflateBound@@ZLIB_1.2.0+0x9dc>  // b.any
    7650:	mov	w8, #0x1                   	// #1
    7654:	stur	w8, [x29, #-4]
    7658:	b	79c8 <deflateBound@@ZLIB_1.2.0+0xd48>
    765c:	ldur	x8, [x29, #-16]
    7660:	ldr	x8, [x8, #104]
    7664:	ldur	x9, [x29, #-16]
    7668:	ldr	w10, [x9, #172]
    766c:	mov	w9, w10
    7670:	subs	x8, x8, x9
    7674:	subs	x8, x8, #0x1
    7678:	stur	w8, [x29, #-36]
    767c:	ldur	x9, [x29, #-16]
    7680:	ldr	x9, [x9]
    7684:	ldr	w8, [x9, #8]
    7688:	ldur	w10, [x29, #-36]
    768c:	cmp	w8, w10
    7690:	b.ls	7748 <deflateBound@@ZLIB_1.2.0+0xac8>  // b.plast
    7694:	ldur	x8, [x29, #-16]
    7698:	ldr	x8, [x8, #152]
    769c:	ldur	x9, [x29, #-16]
    76a0:	ldr	w10, [x9, #80]
    76a4:	mov	w9, w10
    76a8:	cmp	x8, x9
    76ac:	b.lt	7748 <deflateBound@@ZLIB_1.2.0+0xac8>  // b.tstop
    76b0:	ldur	x8, [x29, #-16]
    76b4:	ldr	w9, [x8, #80]
    76b8:	mov	w8, w9
    76bc:	ldur	x10, [x29, #-16]
    76c0:	ldr	x11, [x10, #152]
    76c4:	subs	x8, x11, x8
    76c8:	str	x8, [x10, #152]
    76cc:	ldur	x8, [x29, #-16]
    76d0:	ldr	w9, [x8, #80]
    76d4:	ldur	x8, [x29, #-16]
    76d8:	ldr	w12, [x8, #172]
    76dc:	subs	w9, w12, w9
    76e0:	str	w9, [x8, #172]
    76e4:	ldur	x8, [x29, #-16]
    76e8:	ldr	x0, [x8, #96]
    76ec:	ldur	x8, [x29, #-16]
    76f0:	ldr	x8, [x8, #96]
    76f4:	ldur	x10, [x29, #-16]
    76f8:	ldr	w9, [x10, #80]
    76fc:	mov	w10, w9
    7700:	add	x1, x8, x10
    7704:	ldur	x8, [x29, #-16]
    7708:	ldr	w9, [x8, #172]
    770c:	mov	w2, w9
    7710:	bl	23a0 <memcpy@plt>
    7714:	ldur	x8, [x29, #-16]
    7718:	ldr	w9, [x8, #5928]
    771c:	cmp	w9, #0x2
    7720:	b.cs	7734 <deflateBound@@ZLIB_1.2.0+0xab4>  // b.hs, b.nlast
    7724:	ldur	x8, [x29, #-16]
    7728:	ldr	w9, [x8, #5928]
    772c:	add	w9, w9, #0x1
    7730:	str	w9, [x8, #5928]
    7734:	ldur	x8, [x29, #-16]
    7738:	ldr	w9, [x8, #80]
    773c:	ldur	w10, [x29, #-36]
    7740:	add	w9, w10, w9
    7744:	stur	w9, [x29, #-36]
    7748:	ldur	w8, [x29, #-36]
    774c:	ldur	x9, [x29, #-16]
    7750:	ldr	x9, [x9]
    7754:	ldr	w10, [x9, #8]
    7758:	cmp	w8, w10
    775c:	b.ls	7770 <deflateBound@@ZLIB_1.2.0+0xaf0>  // b.plast
    7760:	ldur	x8, [x29, #-16]
    7764:	ldr	x8, [x8]
    7768:	ldr	w9, [x8, #8]
    776c:	stur	w9, [x29, #-36]
    7770:	ldur	w8, [x29, #-36]
    7774:	cbz	w8, 77b4 <deflateBound@@ZLIB_1.2.0+0xb34>
    7778:	ldur	x8, [x29, #-16]
    777c:	ldr	x0, [x8]
    7780:	ldur	x8, [x29, #-16]
    7784:	ldr	x8, [x8, #96]
    7788:	ldur	x9, [x29, #-16]
    778c:	ldr	w10, [x9, #172]
    7790:	mov	w9, w10
    7794:	add	x1, x8, x9
    7798:	ldur	w2, [x29, #-36]
    779c:	bl	9ec4 <deflateCopy@@Base+0x19e0>
    77a0:	ldur	w10, [x29, #-36]
    77a4:	ldur	x8, [x29, #-16]
    77a8:	ldr	w11, [x8, #172]
    77ac:	add	w10, w11, w10
    77b0:	str	w10, [x8, #172]
    77b4:	ldur	x8, [x29, #-16]
    77b8:	ldr	x8, [x8, #5944]
    77bc:	ldur	x9, [x29, #-16]
    77c0:	ldr	w10, [x9, #172]
    77c4:	mov	w9, w10
    77c8:	cmp	x8, x9
    77cc:	b.cs	77e4 <deflateBound@@ZLIB_1.2.0+0xb64>  // b.hs, b.nlast
    77d0:	ldur	x8, [x29, #-16]
    77d4:	ldr	w9, [x8, #172]
    77d8:	mov	w8, w9
    77dc:	ldur	x10, [x29, #-16]
    77e0:	str	x8, [x10, #5944]
    77e4:	ldur	x8, [x29, #-16]
    77e8:	ldr	w9, [x8, #5940]
    77ec:	add	w9, w9, #0x2a
    77f0:	asr	w9, w9, #3
    77f4:	stur	w9, [x29, #-36]
    77f8:	ldur	x8, [x29, #-16]
    77fc:	ldr	x8, [x8, #24]
    7800:	ldur	w9, [x29, #-36]
    7804:	mov	w10, w9
    7808:	subs	x8, x8, x10
    780c:	mov	x10, #0xffff                	// #65535
    7810:	cmp	x8, x10
    7814:	b.ls	7824 <deflateBound@@ZLIB_1.2.0+0xba4>  // b.plast
    7818:	mov	x8, #0xffff                	// #65535
    781c:	str	x8, [sp, #24]
    7820:	b	783c <deflateBound@@ZLIB_1.2.0+0xbbc>
    7824:	ldur	x8, [x29, #-16]
    7828:	ldr	x8, [x8, #24]
    782c:	ldur	w9, [x29, #-36]
    7830:	mov	w10, w9
    7834:	subs	x8, x8, x10
    7838:	str	x8, [sp, #24]
    783c:	ldr	x8, [sp, #24]
    7840:	stur	w8, [x29, #-36]
    7844:	ldur	w8, [x29, #-36]
    7848:	ldur	x9, [x29, #-16]
    784c:	ldr	w10, [x9, #80]
    7850:	cmp	w8, w10
    7854:	b.ls	7868 <deflateBound@@ZLIB_1.2.0+0xbe8>  // b.plast
    7858:	ldur	x8, [x29, #-16]
    785c:	ldr	w9, [x8, #80]
    7860:	str	w9, [sp, #20]
    7864:	b	7870 <deflateBound@@ZLIB_1.2.0+0xbf0>
    7868:	ldur	w8, [x29, #-36]
    786c:	str	w8, [sp, #20]
    7870:	ldr	w8, [sp, #20]
    7874:	stur	w8, [x29, #-24]
    7878:	ldur	x9, [x29, #-16]
    787c:	ldr	w8, [x9, #172]
    7880:	mov	w9, w8
    7884:	ldur	x10, [x29, #-16]
    7888:	ldr	x10, [x10, #152]
    788c:	subs	x9, x9, x10
    7890:	stur	w9, [x29, #-32]
    7894:	ldur	w8, [x29, #-32]
    7898:	ldur	w9, [x29, #-24]
    789c:	cmp	w8, w9
    78a0:	b.cs	78e0 <deflateBound@@ZLIB_1.2.0+0xc60>  // b.hs, b.nlast
    78a4:	ldur	w8, [x29, #-32]
    78a8:	cbnz	w8, 78b8 <deflateBound@@ZLIB_1.2.0+0xc38>
    78ac:	ldur	w8, [x29, #-20]
    78b0:	cmp	w8, #0x4
    78b4:	b.ne	79b0 <deflateBound@@ZLIB_1.2.0+0xd30>  // b.any
    78b8:	ldur	w8, [x29, #-20]
    78bc:	cbz	w8, 79b0 <deflateBound@@ZLIB_1.2.0+0xd30>
    78c0:	ldur	x8, [x29, #-16]
    78c4:	ldr	x8, [x8]
    78c8:	ldr	w9, [x8, #8]
    78cc:	cbnz	w9, 79b0 <deflateBound@@ZLIB_1.2.0+0xd30>
    78d0:	ldur	w8, [x29, #-32]
    78d4:	ldur	w9, [x29, #-36]
    78d8:	cmp	w8, w9
    78dc:	b.hi	79b0 <deflateBound@@ZLIB_1.2.0+0xd30>  // b.pmore
    78e0:	ldur	w8, [x29, #-32]
    78e4:	ldur	w9, [x29, #-36]
    78e8:	cmp	w8, w9
    78ec:	b.ls	78fc <deflateBound@@ZLIB_1.2.0+0xc7c>  // b.plast
    78f0:	ldur	w8, [x29, #-36]
    78f4:	str	w8, [sp, #16]
    78f8:	b	7904 <deflateBound@@ZLIB_1.2.0+0xc84>
    78fc:	ldur	w8, [x29, #-32]
    7900:	str	w8, [sp, #16]
    7904:	ldr	w8, [sp, #16]
    7908:	stur	w8, [x29, #-28]
    790c:	ldur	w8, [x29, #-20]
    7910:	mov	w9, #0x0                   	// #0
    7914:	cmp	w8, #0x4
    7918:	str	w9, [sp, #12]
    791c:	b.ne	794c <deflateBound@@ZLIB_1.2.0+0xccc>  // b.any
    7920:	ldur	x8, [x29, #-16]
    7924:	ldr	x8, [x8]
    7928:	ldr	w9, [x8, #8]
    792c:	mov	w10, #0x0                   	// #0
    7930:	str	w10, [sp, #12]
    7934:	cbnz	w9, 794c <deflateBound@@ZLIB_1.2.0+0xccc>
    7938:	ldur	w8, [x29, #-28]
    793c:	ldur	w9, [x29, #-32]
    7940:	cmp	w8, w9
    7944:	cset	w8, eq  // eq = none
    7948:	str	w8, [sp, #12]
    794c:	ldr	w8, [sp, #12]
    7950:	mov	w9, #0x1                   	// #1
    7954:	mov	w10, wzr
    7958:	tst	w8, #0x1
    795c:	csel	w8, w9, w10, ne  // ne = any
    7960:	stur	w8, [x29, #-40]
    7964:	ldur	x0, [x29, #-16]
    7968:	ldur	x11, [x29, #-16]
    796c:	ldr	x11, [x11, #96]
    7970:	ldur	x12, [x29, #-16]
    7974:	ldr	x12, [x12, #152]
    7978:	add	x1, x11, x12
    797c:	ldur	w8, [x29, #-28]
    7980:	mov	w2, w8
    7984:	ldur	w3, [x29, #-40]
    7988:	bl	10fa0 <inflateCodesUsed@@ZLIB_1.2.9+0xb44>
    798c:	ldur	w8, [x29, #-28]
    7990:	mov	w11, w8
    7994:	ldur	x12, [x29, #-16]
    7998:	ldr	x13, [x12, #152]
    799c:	add	x11, x13, x11
    79a0:	str	x11, [x12, #152]
    79a4:	ldur	x11, [x29, #-16]
    79a8:	ldr	x0, [x11]
    79ac:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    79b0:	ldur	w8, [x29, #-40]
    79b4:	mov	w9, wzr
    79b8:	mov	w10, #0x2                   	// #2
    79bc:	cmp	w8, #0x0
    79c0:	csel	w8, w10, w9, ne  // ne = any
    79c4:	stur	w8, [x29, #-4]
    79c8:	ldur	w0, [x29, #-4]
    79cc:	ldp	x29, x30, [sp, #96]
    79d0:	add	sp, sp, #0x70
    79d4:	ret
    79d8:	sub	sp, sp, #0x60
    79dc:	stp	x29, x30, [sp, #80]
    79e0:	add	x29, sp, #0x50
    79e4:	stur	x0, [x29, #-16]
    79e8:	stur	w1, [x29, #-20]
    79ec:	ldur	x8, [x29, #-16]
    79f0:	ldr	w9, [x8, #180]
    79f4:	cbnz	w9, 7a20 <deflateBound@@ZLIB_1.2.0+0xda0>
    79f8:	ldur	x0, [x29, #-16]
    79fc:	bl	4a9c <deflateSetDictionary@@Base+0x468>
    7a00:	ldur	x8, [x29, #-16]
    7a04:	ldr	w9, [x8, #180]
    7a08:	cbnz	w9, 7a20 <deflateBound@@ZLIB_1.2.0+0xda0>
    7a0c:	ldur	w8, [x29, #-20]
    7a10:	cbnz	w8, 7a1c <deflateBound@@ZLIB_1.2.0+0xd9c>
    7a14:	stur	wzr, [x29, #-4]
    7a18:	b	7d4c <deflateBound@@ZLIB_1.2.0+0x10cc>
    7a1c:	b	7bc0 <deflateBound@@ZLIB_1.2.0+0xf40>
    7a20:	ldur	x8, [x29, #-16]
    7a24:	str	wzr, [x8, #160]
    7a28:	ldur	x8, [x29, #-16]
    7a2c:	ldr	x8, [x8, #96]
    7a30:	ldur	x9, [x29, #-16]
    7a34:	ldr	w10, [x9, #172]
    7a38:	mov	w9, w10
    7a3c:	add	x8, x8, x9
    7a40:	ldrb	w10, [x8]
    7a44:	sturb	w10, [x29, #-25]
    7a48:	ldur	x8, [x29, #-16]
    7a4c:	ldr	x8, [x8, #5904]
    7a50:	ldur	x9, [x29, #-16]
    7a54:	ldr	w10, [x9, #5900]
    7a58:	mov	w9, w10
    7a5c:	mov	x11, #0x2                   	// #2
    7a60:	mul	x9, x11, x9
    7a64:	add	x8, x8, x9
    7a68:	mov	w10, #0x0                   	// #0
    7a6c:	strh	w10, [x8]
    7a70:	ldurb	w10, [x29, #-25]
    7a74:	ldur	x8, [x29, #-16]
    7a78:	ldr	x8, [x8, #5888]
    7a7c:	ldur	x9, [x29, #-16]
    7a80:	ldr	w12, [x9, #5900]
    7a84:	mov	w11, w12
    7a88:	mov	w12, w11
    7a8c:	add	w12, w12, #0x1
    7a90:	str	w12, [x9, #5900]
    7a94:	add	x8, x8, x11
    7a98:	strb	w10, [x8]
    7a9c:	ldur	x8, [x29, #-16]
    7aa0:	add	x8, x8, #0xd4
    7aa4:	ldurb	w10, [x29, #-25]
    7aa8:	mov	w9, w10
    7aac:	mov	x11, #0x4                   	// #4
    7ab0:	mul	x9, x11, x9
    7ab4:	add	x8, x8, x9
    7ab8:	ldrh	w10, [x8]
    7abc:	add	w10, w10, #0x1
    7ac0:	strh	w10, [x8]
    7ac4:	ldur	x8, [x29, #-16]
    7ac8:	ldr	w10, [x8, #5900]
    7acc:	ldur	x8, [x29, #-16]
    7ad0:	ldr	w12, [x8, #5896]
    7ad4:	subs	w12, w12, #0x1
    7ad8:	cmp	w10, w12
    7adc:	cset	w10, eq  // eq = none
    7ae0:	and	w10, w10, #0x1
    7ae4:	stur	w10, [x29, #-24]
    7ae8:	ldur	x8, [x29, #-16]
    7aec:	ldr	w10, [x8, #180]
    7af0:	subs	w10, w10, #0x1
    7af4:	str	w10, [x8, #180]
    7af8:	ldur	x8, [x29, #-16]
    7afc:	ldr	w10, [x8, #172]
    7b00:	add	w10, w10, #0x1
    7b04:	str	w10, [x8, #172]
    7b08:	ldur	w10, [x29, #-24]
    7b0c:	cbz	w10, 7bbc <deflateBound@@ZLIB_1.2.0+0xf3c>
    7b10:	ldur	x0, [x29, #-16]
    7b14:	ldur	x8, [x29, #-16]
    7b18:	ldr	x8, [x8, #152]
    7b1c:	cmp	x8, #0x0
    7b20:	cset	w9, lt  // lt = tstop
    7b24:	str	x0, [sp, #40]
    7b28:	tbnz	w9, #0, 7b4c <deflateBound@@ZLIB_1.2.0+0xecc>
    7b2c:	ldur	x8, [x29, #-16]
    7b30:	ldr	x8, [x8, #96]
    7b34:	ldur	x9, [x29, #-16]
    7b38:	ldr	x9, [x9, #152]
    7b3c:	and	x9, x9, #0xffffffff
    7b40:	add	x8, x8, x9
    7b44:	str	x8, [sp, #32]
    7b48:	b	7b54 <deflateBound@@ZLIB_1.2.0+0xed4>
    7b4c:	mov	x8, xzr
    7b50:	str	x8, [sp, #32]
    7b54:	ldr	x8, [sp, #32]
    7b58:	ldur	x9, [x29, #-16]
    7b5c:	ldr	w10, [x9, #172]
    7b60:	mov	w9, w10
    7b64:	ldur	x11, [x29, #-16]
    7b68:	ldr	x11, [x11, #152]
    7b6c:	subs	x2, x9, x11
    7b70:	ldr	x0, [sp, #40]
    7b74:	mov	x1, x8
    7b78:	mov	w10, wzr
    7b7c:	mov	w3, w10
    7b80:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    7b84:	ldur	x8, [x29, #-16]
    7b88:	ldr	w10, [x8, #172]
    7b8c:	mov	w8, w10
    7b90:	ldur	x9, [x29, #-16]
    7b94:	str	x8, [x9, #152]
    7b98:	ldur	x8, [x29, #-16]
    7b9c:	ldr	x0, [x8]
    7ba0:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    7ba4:	ldur	x8, [x29, #-16]
    7ba8:	ldr	x8, [x8]
    7bac:	ldr	w10, [x8, #32]
    7bb0:	cbnz	w10, 7bbc <deflateBound@@ZLIB_1.2.0+0xf3c>
    7bb4:	stur	wzr, [x29, #-4]
    7bb8:	b	7d4c <deflateBound@@ZLIB_1.2.0+0x10cc>
    7bbc:	b	79ec <deflateBound@@ZLIB_1.2.0+0xd6c>
    7bc0:	ldur	x8, [x29, #-16]
    7bc4:	str	wzr, [x8, #5932]
    7bc8:	ldur	w9, [x29, #-20]
    7bcc:	cmp	w9, #0x4
    7bd0:	b.ne	7c8c <deflateBound@@ZLIB_1.2.0+0x100c>  // b.any
    7bd4:	ldur	x0, [x29, #-16]
    7bd8:	ldur	x8, [x29, #-16]
    7bdc:	ldr	x8, [x8, #152]
    7be0:	cmp	x8, #0x0
    7be4:	cset	w9, lt  // lt = tstop
    7be8:	str	x0, [sp, #24]
    7bec:	tbnz	w9, #0, 7c10 <deflateBound@@ZLIB_1.2.0+0xf90>
    7bf0:	ldur	x8, [x29, #-16]
    7bf4:	ldr	x8, [x8, #96]
    7bf8:	ldur	x9, [x29, #-16]
    7bfc:	ldr	x9, [x9, #152]
    7c00:	and	x9, x9, #0xffffffff
    7c04:	add	x8, x8, x9
    7c08:	str	x8, [sp, #16]
    7c0c:	b	7c18 <deflateBound@@ZLIB_1.2.0+0xf98>
    7c10:	mov	x8, xzr
    7c14:	str	x8, [sp, #16]
    7c18:	ldr	x8, [sp, #16]
    7c1c:	ldur	x9, [x29, #-16]
    7c20:	ldr	w10, [x9, #172]
    7c24:	mov	w9, w10
    7c28:	ldur	x11, [x29, #-16]
    7c2c:	ldr	x11, [x11, #152]
    7c30:	subs	x2, x9, x11
    7c34:	ldr	x0, [sp, #24]
    7c38:	mov	x1, x8
    7c3c:	mov	w3, #0x1                   	// #1
    7c40:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    7c44:	ldur	x8, [x29, #-16]
    7c48:	ldr	w10, [x8, #172]
    7c4c:	mov	w8, w10
    7c50:	ldur	x9, [x29, #-16]
    7c54:	str	x8, [x9, #152]
    7c58:	ldur	x8, [x29, #-16]
    7c5c:	ldr	x0, [x8]
    7c60:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    7c64:	ldur	x8, [x29, #-16]
    7c68:	ldr	x8, [x8]
    7c6c:	ldr	w10, [x8, #32]
    7c70:	cbnz	w10, 7c80 <deflateBound@@ZLIB_1.2.0+0x1000>
    7c74:	mov	w8, #0x2                   	// #2
    7c78:	stur	w8, [x29, #-4]
    7c7c:	b	7d4c <deflateBound@@ZLIB_1.2.0+0x10cc>
    7c80:	mov	w8, #0x3                   	// #3
    7c84:	stur	w8, [x29, #-4]
    7c88:	b	7d4c <deflateBound@@ZLIB_1.2.0+0x10cc>
    7c8c:	ldur	x8, [x29, #-16]
    7c90:	ldr	w9, [x8, #5900]
    7c94:	cbz	w9, 7d44 <deflateBound@@ZLIB_1.2.0+0x10c4>
    7c98:	ldur	x0, [x29, #-16]
    7c9c:	ldur	x8, [x29, #-16]
    7ca0:	ldr	x8, [x8, #152]
    7ca4:	cmp	x8, #0x0
    7ca8:	cset	w9, lt  // lt = tstop
    7cac:	str	x0, [sp, #8]
    7cb0:	tbnz	w9, #0, 7cd4 <deflateBound@@ZLIB_1.2.0+0x1054>
    7cb4:	ldur	x8, [x29, #-16]
    7cb8:	ldr	x8, [x8, #96]
    7cbc:	ldur	x9, [x29, #-16]
    7cc0:	ldr	x9, [x9, #152]
    7cc4:	and	x9, x9, #0xffffffff
    7cc8:	add	x8, x8, x9
    7ccc:	str	x8, [sp]
    7cd0:	b	7cdc <deflateBound@@ZLIB_1.2.0+0x105c>
    7cd4:	mov	x8, xzr
    7cd8:	str	x8, [sp]
    7cdc:	ldr	x8, [sp]
    7ce0:	ldur	x9, [x29, #-16]
    7ce4:	ldr	w10, [x9, #172]
    7ce8:	mov	w9, w10
    7cec:	ldur	x11, [x29, #-16]
    7cf0:	ldr	x11, [x11, #152]
    7cf4:	subs	x2, x9, x11
    7cf8:	ldr	x0, [sp, #8]
    7cfc:	mov	x1, x8
    7d00:	mov	w10, wzr
    7d04:	mov	w3, w10
    7d08:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    7d0c:	ldur	x8, [x29, #-16]
    7d10:	ldr	w10, [x8, #172]
    7d14:	mov	w8, w10
    7d18:	ldur	x9, [x29, #-16]
    7d1c:	str	x8, [x9, #152]
    7d20:	ldur	x8, [x29, #-16]
    7d24:	ldr	x0, [x8]
    7d28:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    7d2c:	ldur	x8, [x29, #-16]
    7d30:	ldr	x8, [x8]
    7d34:	ldr	w10, [x8, #32]
    7d38:	cbnz	w10, 7d44 <deflateBound@@ZLIB_1.2.0+0x10c4>
    7d3c:	stur	wzr, [x29, #-4]
    7d40:	b	7d4c <deflateBound@@ZLIB_1.2.0+0x10cc>
    7d44:	mov	w8, #0x1                   	// #1
    7d48:	stur	w8, [x29, #-4]
    7d4c:	ldur	w0, [x29, #-4]
    7d50:	ldp	x29, x30, [sp, #80]
    7d54:	add	sp, sp, #0x60
    7d58:	ret
    7d5c:	sub	sp, sp, #0x90
    7d60:	stp	x29, x30, [sp, #128]
    7d64:	add	x29, sp, #0x80
    7d68:	stur	x0, [x29, #-16]
    7d6c:	stur	w1, [x29, #-20]
    7d70:	ldur	x8, [x29, #-16]
    7d74:	ldr	w9, [x8, #180]
    7d78:	cmp	w9, #0x102
    7d7c:	b.hi	7db8 <deflateBound@@ZLIB_1.2.0+0x1138>  // b.pmore
    7d80:	ldur	x0, [x29, #-16]
    7d84:	bl	4a9c <deflateSetDictionary@@Base+0x468>
    7d88:	ldur	x8, [x29, #-16]
    7d8c:	ldr	w9, [x8, #180]
    7d90:	cmp	w9, #0x102
    7d94:	b.hi	7da8 <deflateBound@@ZLIB_1.2.0+0x1128>  // b.pmore
    7d98:	ldur	w8, [x29, #-20]
    7d9c:	cbnz	w8, 7da8 <deflateBound@@ZLIB_1.2.0+0x1128>
    7da0:	stur	wzr, [x29, #-4]
    7da4:	b	84d4 <deflateBound@@ZLIB_1.2.0+0x1854>
    7da8:	ldur	x8, [x29, #-16]
    7dac:	ldr	w9, [x8, #180]
    7db0:	cbnz	w9, 7db8 <deflateBound@@ZLIB_1.2.0+0x1138>
    7db4:	b	8348 <deflateBound@@ZLIB_1.2.0+0x16c8>
    7db8:	ldur	x8, [x29, #-16]
    7dbc:	str	wzr, [x8, #160]
    7dc0:	ldur	x8, [x29, #-16]
    7dc4:	ldr	w9, [x8, #180]
    7dc8:	cmp	w9, #0x3
    7dcc:	b.cc	8008 <deflateBound@@ZLIB_1.2.0+0x1388>  // b.lo, b.ul, b.last
    7dd0:	ldur	x8, [x29, #-16]
    7dd4:	ldr	w9, [x8, #172]
    7dd8:	cmp	w9, #0x0
    7ddc:	cset	w9, ls  // ls = plast
    7de0:	tbnz	w9, #0, 8008 <deflateBound@@ZLIB_1.2.0+0x1388>
    7de4:	ldur	x8, [x29, #-16]
    7de8:	ldr	x8, [x8, #96]
    7dec:	ldur	x9, [x29, #-16]
    7df0:	ldr	w10, [x9, #172]
    7df4:	mov	w9, w10
    7df8:	add	x8, x8, x9
    7dfc:	mov	x9, #0xffffffffffffffff    	// #-1
    7e00:	add	x8, x8, x9
    7e04:	stur	x8, [x29, #-40]
    7e08:	ldur	x8, [x29, #-40]
    7e0c:	ldrb	w10, [x8]
    7e10:	stur	w10, [x29, #-28]
    7e14:	ldur	w10, [x29, #-28]
    7e18:	ldur	x8, [x29, #-40]
    7e1c:	add	x9, x8, #0x1
    7e20:	stur	x9, [x29, #-40]
    7e24:	ldrb	w11, [x8, #1]
    7e28:	cmp	w10, w11
    7e2c:	b.ne	8008 <deflateBound@@ZLIB_1.2.0+0x1388>  // b.any
    7e30:	ldur	w8, [x29, #-28]
    7e34:	ldur	x9, [x29, #-40]
    7e38:	add	x10, x9, #0x1
    7e3c:	stur	x10, [x29, #-40]
    7e40:	ldrb	w11, [x9, #1]
    7e44:	cmp	w8, w11
    7e48:	b.ne	8008 <deflateBound@@ZLIB_1.2.0+0x1388>  // b.any
    7e4c:	ldur	w8, [x29, #-28]
    7e50:	ldur	x9, [x29, #-40]
    7e54:	add	x10, x9, #0x1
    7e58:	stur	x10, [x29, #-40]
    7e5c:	ldrb	w11, [x9, #1]
    7e60:	cmp	w8, w11
    7e64:	b.ne	8008 <deflateBound@@ZLIB_1.2.0+0x1388>  // b.any
    7e68:	ldur	x8, [x29, #-16]
    7e6c:	ldr	x8, [x8, #96]
    7e70:	ldur	x9, [x29, #-16]
    7e74:	ldr	w10, [x9, #172]
    7e78:	mov	w9, w10
    7e7c:	add	x8, x8, x9
    7e80:	add	x8, x8, #0x102
    7e84:	stur	x8, [x29, #-48]
    7e88:	ldur	w8, [x29, #-28]
    7e8c:	ldur	x9, [x29, #-40]
    7e90:	add	x10, x9, #0x1
    7e94:	stur	x10, [x29, #-40]
    7e98:	ldrb	w11, [x9, #1]
    7e9c:	mov	w12, #0x0                   	// #0
    7ea0:	cmp	w8, w11
    7ea4:	stur	w12, [x29, #-60]
    7ea8:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7eac:	ldur	w8, [x29, #-28]
    7eb0:	ldur	x9, [x29, #-40]
    7eb4:	add	x10, x9, #0x1
    7eb8:	stur	x10, [x29, #-40]
    7ebc:	ldrb	w11, [x9, #1]
    7ec0:	mov	w12, #0x0                   	// #0
    7ec4:	cmp	w8, w11
    7ec8:	stur	w12, [x29, #-60]
    7ecc:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7ed0:	ldur	w8, [x29, #-28]
    7ed4:	ldur	x9, [x29, #-40]
    7ed8:	add	x10, x9, #0x1
    7edc:	stur	x10, [x29, #-40]
    7ee0:	ldrb	w11, [x9, #1]
    7ee4:	mov	w12, #0x0                   	// #0
    7ee8:	cmp	w8, w11
    7eec:	stur	w12, [x29, #-60]
    7ef0:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7ef4:	ldur	w8, [x29, #-28]
    7ef8:	ldur	x9, [x29, #-40]
    7efc:	add	x10, x9, #0x1
    7f00:	stur	x10, [x29, #-40]
    7f04:	ldrb	w11, [x9, #1]
    7f08:	mov	w12, #0x0                   	// #0
    7f0c:	cmp	w8, w11
    7f10:	stur	w12, [x29, #-60]
    7f14:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7f18:	ldur	w8, [x29, #-28]
    7f1c:	ldur	x9, [x29, #-40]
    7f20:	add	x10, x9, #0x1
    7f24:	stur	x10, [x29, #-40]
    7f28:	ldrb	w11, [x9, #1]
    7f2c:	mov	w12, #0x0                   	// #0
    7f30:	cmp	w8, w11
    7f34:	stur	w12, [x29, #-60]
    7f38:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7f3c:	ldur	w8, [x29, #-28]
    7f40:	ldur	x9, [x29, #-40]
    7f44:	add	x10, x9, #0x1
    7f48:	stur	x10, [x29, #-40]
    7f4c:	ldrb	w11, [x9, #1]
    7f50:	mov	w12, #0x0                   	// #0
    7f54:	cmp	w8, w11
    7f58:	stur	w12, [x29, #-60]
    7f5c:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7f60:	ldur	w8, [x29, #-28]
    7f64:	ldur	x9, [x29, #-40]
    7f68:	add	x10, x9, #0x1
    7f6c:	stur	x10, [x29, #-40]
    7f70:	ldrb	w11, [x9, #1]
    7f74:	mov	w12, #0x0                   	// #0
    7f78:	cmp	w8, w11
    7f7c:	stur	w12, [x29, #-60]
    7f80:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7f84:	ldur	w8, [x29, #-28]
    7f88:	ldur	x9, [x29, #-40]
    7f8c:	add	x10, x9, #0x1
    7f90:	stur	x10, [x29, #-40]
    7f94:	ldrb	w11, [x9, #1]
    7f98:	mov	w12, #0x0                   	// #0
    7f9c:	cmp	w8, w11
    7fa0:	stur	w12, [x29, #-60]
    7fa4:	b.ne	7fbc <deflateBound@@ZLIB_1.2.0+0x133c>  // b.any
    7fa8:	ldur	x8, [x29, #-40]
    7fac:	ldur	x9, [x29, #-48]
    7fb0:	cmp	x8, x9
    7fb4:	cset	w10, cc  // cc = lo, ul, last
    7fb8:	stur	w10, [x29, #-60]
    7fbc:	ldur	w8, [x29, #-60]
    7fc0:	tbnz	w8, #0, 7e88 <deflateBound@@ZLIB_1.2.0+0x1208>
    7fc4:	ldur	x8, [x29, #-48]
    7fc8:	ldur	x9, [x29, #-40]
    7fcc:	subs	x8, x8, x9
    7fd0:	mov	w10, #0x102                 	// #258
    7fd4:	subs	w8, w10, w8
    7fd8:	ldur	x9, [x29, #-16]
    7fdc:	str	w8, [x9, #160]
    7fe0:	ldur	x9, [x29, #-16]
    7fe4:	ldr	w8, [x9, #160]
    7fe8:	ldur	x9, [x29, #-16]
    7fec:	ldr	w10, [x9, #180]
    7ff0:	cmp	w8, w10
    7ff4:	b.ls	8008 <deflateBound@@ZLIB_1.2.0+0x1388>  // b.plast
    7ff8:	ldur	x8, [x29, #-16]
    7ffc:	ldr	w9, [x8, #180]
    8000:	ldur	x8, [x29, #-16]
    8004:	str	w9, [x8, #160]
    8008:	ldur	x8, [x29, #-16]
    800c:	ldr	w9, [x8, #160]
    8010:	cmp	w9, #0x3
    8014:	b.cc	81b0 <deflateBound@@ZLIB_1.2.0+0x1530>  // b.lo, b.ul, b.last
    8018:	ldur	x8, [x29, #-16]
    801c:	ldr	w9, [x8, #160]
    8020:	subs	w9, w9, #0x3
    8024:	sturb	w9, [x29, #-49]
    8028:	mov	w9, #0x1                   	// #1
    802c:	sturh	w9, [x29, #-52]
    8030:	ldurh	w9, [x29, #-52]
    8034:	ldur	x8, [x29, #-16]
    8038:	ldr	x8, [x8, #5904]
    803c:	ldur	x10, [x29, #-16]
    8040:	ldr	w11, [x10, #5900]
    8044:	mov	w10, w11
    8048:	mov	x12, #0x2                   	// #2
    804c:	mul	x10, x12, x10
    8050:	add	x8, x8, x10
    8054:	strh	w9, [x8]
    8058:	ldurb	w9, [x29, #-49]
    805c:	ldur	x8, [x29, #-16]
    8060:	ldr	x8, [x8, #5888]
    8064:	ldur	x10, [x29, #-16]
    8068:	ldr	w11, [x10, #5900]
    806c:	mov	w12, w11
    8070:	mov	w11, w12
    8074:	add	w11, w11, #0x1
    8078:	str	w11, [x10, #5900]
    807c:	add	x8, x8, x12
    8080:	strb	w9, [x8]
    8084:	ldurh	w9, [x29, #-52]
    8088:	mov	w11, #0xffffffff            	// #-1
    808c:	add	w9, w11, w9, uxth
    8090:	sturh	w9, [x29, #-52]
    8094:	ldur	x8, [x29, #-16]
    8098:	add	x8, x8, #0xd4
    809c:	ldurb	w9, [x29, #-49]
    80a0:	mov	w10, w9
    80a4:	adrp	x12, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    80a8:	add	x12, x12, #0xd64
    80ac:	ldrb	w9, [x12, x10]
    80b0:	add	w9, w9, #0x100
    80b4:	add	w9, w9, #0x1
    80b8:	mov	w0, w9
    80bc:	sxtw	x10, w0
    80c0:	mov	x12, #0x4                   	// #4
    80c4:	mul	x10, x12, x10
    80c8:	add	x8, x8, x10
    80cc:	ldrh	w9, [x8]
    80d0:	add	w9, w9, #0x1
    80d4:	strh	w9, [x8]
    80d8:	ldur	x8, [x29, #-16]
    80dc:	add	x8, x8, #0x9c8
    80e0:	ldurh	w9, [x29, #-52]
    80e4:	cmp	w9, #0x100
    80e8:	str	x8, [sp, #56]
    80ec:	b.ge	810c <deflateBound@@ZLIB_1.2.0+0x148c>  // b.tcont
    80f0:	ldurh	w8, [x29, #-52]
    80f4:	mov	w9, w8
    80f8:	adrp	x10, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    80fc:	add	x10, x10, #0xb64
    8100:	ldrb	w8, [x10, x9]
    8104:	str	w8, [sp, #52]
    8108:	b	8128 <deflateBound@@ZLIB_1.2.0+0x14a8>
    810c:	ldurh	w8, [x29, #-52]
    8110:	asr	w8, w8, #7
    8114:	add	w8, w8, #0x100
    8118:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    811c:	add	x9, x9, #0xb64
    8120:	ldrb	w8, [x9, w8, sxtw]
    8124:	str	w8, [sp, #52]
    8128:	ldr	w8, [sp, #52]
    812c:	mov	w0, w8
    8130:	sxtw	x9, w0
    8134:	mov	x10, #0x4                   	// #4
    8138:	mul	x9, x10, x9
    813c:	ldr	x10, [sp, #56]
    8140:	add	x9, x10, x9
    8144:	ldrh	w8, [x9]
    8148:	add	w8, w8, #0x1
    814c:	strh	w8, [x9]
    8150:	ldur	x9, [x29, #-16]
    8154:	ldr	w8, [x9, #5900]
    8158:	ldur	x9, [x29, #-16]
    815c:	ldr	w11, [x9, #5896]
    8160:	subs	w11, w11, #0x1
    8164:	cmp	w8, w11
    8168:	cset	w8, eq  // eq = none
    816c:	and	w8, w8, #0x1
    8170:	stur	w8, [x29, #-24]
    8174:	ldur	x9, [x29, #-16]
    8178:	ldr	w8, [x9, #160]
    817c:	ldur	x9, [x29, #-16]
    8180:	ldr	w11, [x9, #180]
    8184:	subs	w8, w11, w8
    8188:	str	w8, [x9, #180]
    818c:	ldur	x9, [x29, #-16]
    8190:	ldr	w8, [x9, #160]
    8194:	ldur	x9, [x29, #-16]
    8198:	ldr	w11, [x9, #172]
    819c:	add	w8, w11, w8
    81a0:	str	w8, [x9, #172]
    81a4:	ldur	x9, [x29, #-16]
    81a8:	str	wzr, [x9, #160]
    81ac:	b	8290 <deflateBound@@ZLIB_1.2.0+0x1610>
    81b0:	ldur	x8, [x29, #-16]
    81b4:	ldr	x8, [x8, #96]
    81b8:	ldur	x9, [x29, #-16]
    81bc:	ldr	w10, [x9, #172]
    81c0:	mov	w9, w10
    81c4:	add	x8, x8, x9
    81c8:	ldrb	w10, [x8]
    81cc:	sturb	w10, [x29, #-53]
    81d0:	ldur	x8, [x29, #-16]
    81d4:	ldr	x8, [x8, #5904]
    81d8:	ldur	x9, [x29, #-16]
    81dc:	ldr	w10, [x9, #5900]
    81e0:	mov	w9, w10
    81e4:	mov	x11, #0x2                   	// #2
    81e8:	mul	x9, x11, x9
    81ec:	add	x8, x8, x9
    81f0:	mov	w10, #0x0                   	// #0
    81f4:	strh	w10, [x8]
    81f8:	ldurb	w10, [x29, #-53]
    81fc:	ldur	x8, [x29, #-16]
    8200:	ldr	x8, [x8, #5888]
    8204:	ldur	x9, [x29, #-16]
    8208:	ldr	w12, [x9, #5900]
    820c:	mov	w11, w12
    8210:	mov	w12, w11
    8214:	add	w12, w12, #0x1
    8218:	str	w12, [x9, #5900]
    821c:	add	x8, x8, x11
    8220:	strb	w10, [x8]
    8224:	ldur	x8, [x29, #-16]
    8228:	add	x8, x8, #0xd4
    822c:	ldurb	w10, [x29, #-53]
    8230:	mov	w9, w10
    8234:	mov	x11, #0x4                   	// #4
    8238:	mul	x9, x11, x9
    823c:	add	x8, x8, x9
    8240:	ldrh	w10, [x8]
    8244:	add	w10, w10, #0x1
    8248:	strh	w10, [x8]
    824c:	ldur	x8, [x29, #-16]
    8250:	ldr	w10, [x8, #5900]
    8254:	ldur	x8, [x29, #-16]
    8258:	ldr	w12, [x8, #5896]
    825c:	subs	w12, w12, #0x1
    8260:	cmp	w10, w12
    8264:	cset	w10, eq  // eq = none
    8268:	and	w10, w10, #0x1
    826c:	stur	w10, [x29, #-24]
    8270:	ldur	x8, [x29, #-16]
    8274:	ldr	w10, [x8, #180]
    8278:	subs	w10, w10, #0x1
    827c:	str	w10, [x8, #180]
    8280:	ldur	x8, [x29, #-16]
    8284:	ldr	w10, [x8, #172]
    8288:	add	w10, w10, #0x1
    828c:	str	w10, [x8, #172]
    8290:	ldur	w8, [x29, #-24]
    8294:	cbz	w8, 8344 <deflateBound@@ZLIB_1.2.0+0x16c4>
    8298:	ldur	x0, [x29, #-16]
    829c:	ldur	x8, [x29, #-16]
    82a0:	ldr	x8, [x8, #152]
    82a4:	cmp	x8, #0x0
    82a8:	cset	w9, lt  // lt = tstop
    82ac:	str	x0, [sp, #40]
    82b0:	tbnz	w9, #0, 82d4 <deflateBound@@ZLIB_1.2.0+0x1654>
    82b4:	ldur	x8, [x29, #-16]
    82b8:	ldr	x8, [x8, #96]
    82bc:	ldur	x9, [x29, #-16]
    82c0:	ldr	x9, [x9, #152]
    82c4:	and	x9, x9, #0xffffffff
    82c8:	add	x8, x8, x9
    82cc:	str	x8, [sp, #32]
    82d0:	b	82dc <deflateBound@@ZLIB_1.2.0+0x165c>
    82d4:	mov	x8, xzr
    82d8:	str	x8, [sp, #32]
    82dc:	ldr	x8, [sp, #32]
    82e0:	ldur	x9, [x29, #-16]
    82e4:	ldr	w10, [x9, #172]
    82e8:	mov	w9, w10
    82ec:	ldur	x11, [x29, #-16]
    82f0:	ldr	x11, [x11, #152]
    82f4:	subs	x2, x9, x11
    82f8:	ldr	x0, [sp, #40]
    82fc:	mov	x1, x8
    8300:	mov	w10, wzr
    8304:	mov	w3, w10
    8308:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    830c:	ldur	x8, [x29, #-16]
    8310:	ldr	w10, [x8, #172]
    8314:	mov	w8, w10
    8318:	ldur	x9, [x29, #-16]
    831c:	str	x8, [x9, #152]
    8320:	ldur	x8, [x29, #-16]
    8324:	ldr	x0, [x8]
    8328:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    832c:	ldur	x8, [x29, #-16]
    8330:	ldr	x8, [x8]
    8334:	ldr	w10, [x8, #32]
    8338:	cbnz	w10, 8344 <deflateBound@@ZLIB_1.2.0+0x16c4>
    833c:	stur	wzr, [x29, #-4]
    8340:	b	84d4 <deflateBound@@ZLIB_1.2.0+0x1854>
    8344:	b	7d70 <deflateBound@@ZLIB_1.2.0+0x10f0>
    8348:	ldur	x8, [x29, #-16]
    834c:	str	wzr, [x8, #5932]
    8350:	ldur	w9, [x29, #-20]
    8354:	cmp	w9, #0x4
    8358:	b.ne	8414 <deflateBound@@ZLIB_1.2.0+0x1794>  // b.any
    835c:	ldur	x0, [x29, #-16]
    8360:	ldur	x8, [x29, #-16]
    8364:	ldr	x8, [x8, #152]
    8368:	cmp	x8, #0x0
    836c:	cset	w9, lt  // lt = tstop
    8370:	str	x0, [sp, #24]
    8374:	tbnz	w9, #0, 8398 <deflateBound@@ZLIB_1.2.0+0x1718>
    8378:	ldur	x8, [x29, #-16]
    837c:	ldr	x8, [x8, #96]
    8380:	ldur	x9, [x29, #-16]
    8384:	ldr	x9, [x9, #152]
    8388:	and	x9, x9, #0xffffffff
    838c:	add	x8, x8, x9
    8390:	str	x8, [sp, #16]
    8394:	b	83a0 <deflateBound@@ZLIB_1.2.0+0x1720>
    8398:	mov	x8, xzr
    839c:	str	x8, [sp, #16]
    83a0:	ldr	x8, [sp, #16]
    83a4:	ldur	x9, [x29, #-16]
    83a8:	ldr	w10, [x9, #172]
    83ac:	mov	w9, w10
    83b0:	ldur	x11, [x29, #-16]
    83b4:	ldr	x11, [x11, #152]
    83b8:	subs	x2, x9, x11
    83bc:	ldr	x0, [sp, #24]
    83c0:	mov	x1, x8
    83c4:	mov	w3, #0x1                   	// #1
    83c8:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    83cc:	ldur	x8, [x29, #-16]
    83d0:	ldr	w10, [x8, #172]
    83d4:	mov	w8, w10
    83d8:	ldur	x9, [x29, #-16]
    83dc:	str	x8, [x9, #152]
    83e0:	ldur	x8, [x29, #-16]
    83e4:	ldr	x0, [x8]
    83e8:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    83ec:	ldur	x8, [x29, #-16]
    83f0:	ldr	x8, [x8]
    83f4:	ldr	w10, [x8, #32]
    83f8:	cbnz	w10, 8408 <deflateBound@@ZLIB_1.2.0+0x1788>
    83fc:	mov	w8, #0x2                   	// #2
    8400:	stur	w8, [x29, #-4]
    8404:	b	84d4 <deflateBound@@ZLIB_1.2.0+0x1854>
    8408:	mov	w8, #0x3                   	// #3
    840c:	stur	w8, [x29, #-4]
    8410:	b	84d4 <deflateBound@@ZLIB_1.2.0+0x1854>
    8414:	ldur	x8, [x29, #-16]
    8418:	ldr	w9, [x8, #5900]
    841c:	cbz	w9, 84cc <deflateBound@@ZLIB_1.2.0+0x184c>
    8420:	ldur	x0, [x29, #-16]
    8424:	ldur	x8, [x29, #-16]
    8428:	ldr	x8, [x8, #152]
    842c:	cmp	x8, #0x0
    8430:	cset	w9, lt  // lt = tstop
    8434:	str	x0, [sp, #8]
    8438:	tbnz	w9, #0, 845c <deflateBound@@ZLIB_1.2.0+0x17dc>
    843c:	ldur	x8, [x29, #-16]
    8440:	ldr	x8, [x8, #96]
    8444:	ldur	x9, [x29, #-16]
    8448:	ldr	x9, [x9, #152]
    844c:	and	x9, x9, #0xffffffff
    8450:	add	x8, x8, x9
    8454:	str	x8, [sp]
    8458:	b	8464 <deflateBound@@ZLIB_1.2.0+0x17e4>
    845c:	mov	x8, xzr
    8460:	str	x8, [sp]
    8464:	ldr	x8, [sp]
    8468:	ldur	x9, [x29, #-16]
    846c:	ldr	w10, [x9, #172]
    8470:	mov	w9, w10
    8474:	ldur	x11, [x29, #-16]
    8478:	ldr	x11, [x11, #152]
    847c:	subs	x2, x9, x11
    8480:	ldr	x0, [sp, #8]
    8484:	mov	x1, x8
    8488:	mov	w10, wzr
    848c:	mov	w3, w10
    8490:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    8494:	ldur	x8, [x29, #-16]
    8498:	ldr	w10, [x8, #172]
    849c:	mov	w8, w10
    84a0:	ldur	x9, [x29, #-16]
    84a4:	str	x8, [x9, #152]
    84a8:	ldur	x8, [x29, #-16]
    84ac:	ldr	x0, [x8]
    84b0:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    84b4:	ldur	x8, [x29, #-16]
    84b8:	ldr	x8, [x8]
    84bc:	ldr	w10, [x8, #32]
    84c0:	cbnz	w10, 84cc <deflateBound@@ZLIB_1.2.0+0x184c>
    84c4:	stur	wzr, [x29, #-4]
    84c8:	b	84d4 <deflateBound@@ZLIB_1.2.0+0x1854>
    84cc:	mov	w8, #0x1                   	// #1
    84d0:	stur	w8, [x29, #-4]
    84d4:	ldur	w0, [x29, #-4]
    84d8:	ldp	x29, x30, [sp, #128]
    84dc:	add	sp, sp, #0x90
    84e0:	ret

00000000000084e4 <deflateCopy@@Base>:
    84e4:	sub	sp, sp, #0x50
    84e8:	stp	x29, x30, [sp, #64]
    84ec:	add	x29, sp, #0x40
    84f0:	stur	x0, [x29, #-16]
    84f4:	stur	x1, [x29, #-24]
    84f8:	ldur	x0, [x29, #-24]
    84fc:	bl	49a4 <deflateSetDictionary@@Base+0x370>
    8500:	cbnz	w0, 850c <deflateCopy@@Base+0x28>
    8504:	ldur	x8, [x29, #-16]
    8508:	cbnz	x8, 8518 <deflateCopy@@Base+0x34>
    850c:	mov	w8, #0xfffffffe            	// #-2
    8510:	stur	w8, [x29, #-4]
    8514:	b	87d4 <deflateCopy@@Base+0x2f0>
    8518:	ldur	x8, [x29, #-24]
    851c:	ldr	x8, [x8, #56]
    8520:	str	x8, [sp, #24]
    8524:	ldur	x0, [x29, #-16]
    8528:	ldur	x1, [x29, #-24]
    852c:	mov	x2, #0x70                  	// #112
    8530:	bl	23a0 <memcpy@plt>
    8534:	ldur	x8, [x29, #-16]
    8538:	ldr	x8, [x8, #64]
    853c:	ldur	x9, [x29, #-16]
    8540:	ldr	x0, [x9, #80]
    8544:	mov	w1, #0x1                   	// #1
    8548:	mov	w2, #0x1740                	// #5952
    854c:	blr	x8
    8550:	str	x0, [sp, #32]
    8554:	ldr	x8, [sp, #32]
    8558:	cbnz	x8, 8568 <deflateCopy@@Base+0x84>
    855c:	mov	w8, #0xfffffffc            	// #-4
    8560:	stur	w8, [x29, #-4]
    8564:	b	87d4 <deflateCopy@@Base+0x2f0>
    8568:	ldr	x8, [sp, #32]
    856c:	ldur	x9, [x29, #-16]
    8570:	str	x8, [x9, #56]
    8574:	ldr	x0, [sp, #32]
    8578:	ldr	x1, [sp, #24]
    857c:	mov	x2, #0x1740                	// #5952
    8580:	bl	23a0 <memcpy@plt>
    8584:	ldur	x8, [x29, #-16]
    8588:	ldr	x9, [sp, #32]
    858c:	str	x8, [x9]
    8590:	ldur	x8, [x29, #-16]
    8594:	ldr	x8, [x8, #64]
    8598:	ldur	x9, [x29, #-16]
    859c:	ldr	x0, [x9, #80]
    85a0:	ldr	x9, [sp, #32]
    85a4:	ldr	w1, [x9, #80]
    85a8:	mov	w10, #0x2                   	// #2
    85ac:	mov	w2, w10
    85b0:	str	w10, [sp, #12]
    85b4:	blr	x8
    85b8:	ldr	x8, [sp, #32]
    85bc:	str	x0, [x8, #96]
    85c0:	ldur	x8, [x29, #-16]
    85c4:	ldr	x8, [x8, #64]
    85c8:	ldur	x9, [x29, #-16]
    85cc:	ldr	x0, [x9, #80]
    85d0:	ldr	x9, [sp, #32]
    85d4:	ldr	w1, [x9, #80]
    85d8:	ldr	w2, [sp, #12]
    85dc:	blr	x8
    85e0:	ldr	x8, [sp, #32]
    85e4:	str	x0, [x8, #112]
    85e8:	ldur	x8, [x29, #-16]
    85ec:	ldr	x8, [x8, #64]
    85f0:	ldur	x9, [x29, #-16]
    85f4:	ldr	x0, [x9, #80]
    85f8:	ldr	x9, [sp, #32]
    85fc:	ldr	w1, [x9, #132]
    8600:	ldr	w2, [sp, #12]
    8604:	blr	x8
    8608:	ldr	x8, [sp, #32]
    860c:	str	x0, [x8, #120]
    8610:	ldur	x8, [x29, #-16]
    8614:	ldr	x8, [x8, #64]
    8618:	ldur	x9, [x29, #-16]
    861c:	ldr	x0, [x9, #80]
    8620:	ldr	x9, [sp, #32]
    8624:	ldr	w1, [x9, #5896]
    8628:	mov	w2, #0x4                   	// #4
    862c:	blr	x8
    8630:	str	x0, [sp, #16]
    8634:	ldr	x8, [sp, #16]
    8638:	ldr	x9, [sp, #32]
    863c:	str	x8, [x9, #16]
    8640:	ldr	x8, [sp, #32]
    8644:	ldr	x8, [x8, #96]
    8648:	cbz	x8, 8670 <deflateCopy@@Base+0x18c>
    864c:	ldr	x8, [sp, #32]
    8650:	ldr	x8, [x8, #112]
    8654:	cbz	x8, 8670 <deflateCopy@@Base+0x18c>
    8658:	ldr	x8, [sp, #32]
    865c:	ldr	x8, [x8, #120]
    8660:	cbz	x8, 8670 <deflateCopy@@Base+0x18c>
    8664:	ldr	x8, [sp, #32]
    8668:	ldr	x8, [x8, #16]
    866c:	cbnz	x8, 8684 <deflateCopy@@Base+0x1a0>
    8670:	ldur	x0, [x29, #-16]
    8674:	bl	2590 <deflateEnd@plt>
    8678:	mov	w8, #0xfffffffc            	// #-4
    867c:	stur	w8, [x29, #-4]
    8680:	b	87d4 <deflateCopy@@Base+0x2f0>
    8684:	ldr	x8, [sp, #32]
    8688:	ldr	x0, [x8, #96]
    868c:	ldr	x8, [sp, #24]
    8690:	ldr	x1, [x8, #96]
    8694:	ldr	x8, [sp, #32]
    8698:	ldr	w9, [x8, #80]
    869c:	mov	w10, #0x2                   	// #2
    86a0:	mul	w9, w9, w10
    86a4:	mov	w10, #0x1                   	// #1
    86a8:	umull	x2, w9, w10
    86ac:	bl	23a0 <memcpy@plt>
    86b0:	ldr	x8, [sp, #32]
    86b4:	ldr	x0, [x8, #112]
    86b8:	ldr	x8, [sp, #24]
    86bc:	ldr	x1, [x8, #112]
    86c0:	ldr	x8, [sp, #32]
    86c4:	ldr	w9, [x8, #80]
    86c8:	mov	w8, w9
    86cc:	mov	x11, #0x2                   	// #2
    86d0:	mul	x2, x8, x11
    86d4:	str	x11, [sp]
    86d8:	bl	23a0 <memcpy@plt>
    86dc:	ldr	x8, [sp, #32]
    86e0:	ldr	x0, [x8, #120]
    86e4:	ldr	x8, [sp, #24]
    86e8:	ldr	x1, [x8, #120]
    86ec:	ldr	x8, [sp, #32]
    86f0:	ldr	w9, [x8, #132]
    86f4:	mov	w8, w9
    86f8:	ldr	x11, [sp]
    86fc:	mul	x2, x8, x11
    8700:	bl	23a0 <memcpy@plt>
    8704:	ldr	x8, [sp, #32]
    8708:	ldr	x0, [x8, #16]
    870c:	ldr	x8, [sp, #24]
    8710:	ldr	x1, [x8, #16]
    8714:	ldr	x8, [sp, #32]
    8718:	ldr	x8, [x8, #24]
    871c:	and	x2, x8, #0xffffffff
    8720:	bl	23a0 <memcpy@plt>
    8724:	ldr	x8, [sp, #32]
    8728:	ldr	x8, [x8, #16]
    872c:	ldr	x11, [sp, #24]
    8730:	ldr	x11, [x11, #32]
    8734:	ldr	x12, [sp, #24]
    8738:	ldr	x12, [x12, #16]
    873c:	subs	x11, x11, x12
    8740:	add	x8, x8, x11
    8744:	ldr	x11, [sp, #32]
    8748:	str	x8, [x11, #32]
    874c:	ldr	x8, [sp, #16]
    8750:	ldr	x11, [sp, #32]
    8754:	ldr	w9, [x11, #5896]
    8758:	mov	w11, w9
    875c:	ldr	x12, [sp]
    8760:	udiv	x11, x11, x12
    8764:	mov	x13, #0x2                   	// #2
    8768:	mul	x11, x13, x11
    876c:	add	x8, x8, x11
    8770:	ldr	x11, [sp, #32]
    8774:	str	x8, [x11, #5904]
    8778:	ldr	x8, [sp, #32]
    877c:	ldr	x8, [x8, #16]
    8780:	ldr	x11, [sp, #32]
    8784:	ldr	w9, [x11, #5896]
    8788:	mov	w11, w9
    878c:	mov	x13, #0x3                   	// #3
    8790:	mul	x11, x13, x11
    8794:	add	x8, x8, x11
    8798:	ldr	x11, [sp, #32]
    879c:	str	x8, [x11, #5888]
    87a0:	ldr	x8, [sp, #32]
    87a4:	add	x8, x8, #0xd4
    87a8:	ldr	x11, [sp, #32]
    87ac:	str	x8, [x11, #2904]
    87b0:	ldr	x8, [sp, #32]
    87b4:	add	x8, x8, #0x9c8
    87b8:	ldr	x11, [sp, #32]
    87bc:	str	x8, [x11, #2928]
    87c0:	ldr	x8, [sp, #32]
    87c4:	add	x8, x8, #0xabc
    87c8:	ldr	x11, [sp, #32]
    87cc:	str	x8, [x11, #2952]
    87d0:	stur	wzr, [x29, #-4]
    87d4:	ldur	w0, [x29, #-4]
    87d8:	ldp	x29, x30, [sp, #64]
    87dc:	add	sp, sp, #0x50
    87e0:	ret
    87e4:	sub	sp, sp, #0x80
    87e8:	stp	x29, x30, [sp, #112]
    87ec:	add	x29, sp, #0x70
    87f0:	stur	x0, [x29, #-16]
    87f4:	stur	w1, [x29, #-20]
    87f8:	ldur	x8, [x29, #-16]
    87fc:	ldr	w9, [x8, #180]
    8800:	cmp	w9, #0x106
    8804:	b.cs	8840 <deflateCopy@@Base+0x35c>  // b.hs, b.nlast
    8808:	ldur	x0, [x29, #-16]
    880c:	bl	4a9c <deflateSetDictionary@@Base+0x468>
    8810:	ldur	x8, [x29, #-16]
    8814:	ldr	w9, [x8, #180]
    8818:	cmp	w9, #0x106
    881c:	b.cs	8830 <deflateCopy@@Base+0x34c>  // b.hs, b.nlast
    8820:	ldur	w8, [x29, #-20]
    8824:	cbnz	w8, 8830 <deflateCopy@@Base+0x34c>
    8828:	stur	wzr, [x29, #-4]
    882c:	b	8fe8 <deflateCopy@@Base+0xb04>
    8830:	ldur	x8, [x29, #-16]
    8834:	ldr	w9, [x8, #180]
    8838:	cbnz	w9, 8840 <deflateCopy@@Base+0x35c>
    883c:	b	8e30 <deflateCopy@@Base+0x94c>
    8840:	stur	wzr, [x29, #-24]
    8844:	ldur	x8, [x29, #-16]
    8848:	ldr	w9, [x8, #180]
    884c:	cmp	w9, #0x3
    8850:	b.cc	8910 <deflateCopy@@Base+0x42c>  // b.lo, b.ul, b.last
    8854:	ldur	x8, [x29, #-16]
    8858:	ldr	w9, [x8, #128]
    885c:	ldur	x8, [x29, #-16]
    8860:	ldr	w10, [x8, #144]
    8864:	lsl	w9, w9, w10
    8868:	ldur	x8, [x29, #-16]
    886c:	ldr	x8, [x8, #96]
    8870:	ldur	x11, [x29, #-16]
    8874:	ldr	w10, [x11, #172]
    8878:	add	w10, w10, #0x2
    887c:	ldrb	w10, [x8, w10, uxtw]
    8880:	eor	w9, w9, w10
    8884:	ldur	x8, [x29, #-16]
    8888:	ldr	w10, [x8, #140]
    888c:	and	w9, w9, w10
    8890:	ldur	x8, [x29, #-16]
    8894:	str	w9, [x8, #128]
    8898:	ldur	x8, [x29, #-16]
    889c:	ldr	x8, [x8, #120]
    88a0:	ldur	x11, [x29, #-16]
    88a4:	ldr	w9, [x11, #128]
    88a8:	mov	w11, w9
    88ac:	mov	x12, #0x2                   	// #2
    88b0:	ldrh	w9, [x8, x11, lsl #1]
    88b4:	ldur	x8, [x29, #-16]
    88b8:	ldr	x8, [x8, #112]
    88bc:	ldur	x11, [x29, #-16]
    88c0:	ldr	w10, [x11, #172]
    88c4:	ldur	x11, [x29, #-16]
    88c8:	ldr	w13, [x11, #88]
    88cc:	and	w10, w10, w13
    88d0:	mov	w11, w10
    88d4:	ubfx	x11, x11, #0, #32
    88d8:	mul	x11, x12, x11
    88dc:	add	x8, x8, x11
    88e0:	strh	w9, [x8]
    88e4:	stur	w9, [x29, #-24]
    88e8:	ldur	x8, [x29, #-16]
    88ec:	ldr	w9, [x8, #172]
    88f0:	ldur	x8, [x29, #-16]
    88f4:	ldr	x8, [x8, #120]
    88f8:	ldur	x11, [x29, #-16]
    88fc:	ldr	w10, [x11, #128]
    8900:	mov	w11, w10
    8904:	mul	x11, x12, x11
    8908:	add	x8, x8, x11
    890c:	strh	w9, [x8]
    8910:	ldur	w8, [x29, #-24]
    8914:	cbz	w8, 8950 <deflateCopy@@Base+0x46c>
    8918:	ldur	x8, [x29, #-16]
    891c:	ldr	w9, [x8, #172]
    8920:	ldur	w10, [x29, #-24]
    8924:	subs	w9, w9, w10
    8928:	ldur	x8, [x29, #-16]
    892c:	ldr	w10, [x8, #80]
    8930:	subs	w10, w10, #0x106
    8934:	cmp	w9, w10
    8938:	b.hi	8950 <deflateCopy@@Base+0x46c>  // b.pmore
    893c:	ldur	x0, [x29, #-16]
    8940:	ldur	w1, [x29, #-24]
    8944:	bl	9a28 <deflateCopy@@Base+0x1544>
    8948:	ldur	x8, [x29, #-16]
    894c:	str	w0, [x8, #160]
    8950:	ldur	x8, [x29, #-16]
    8954:	ldr	w9, [x8, #160]
    8958:	cmp	w9, #0x3
    895c:	b.cc	8c98 <deflateCopy@@Base+0x7b4>  // b.lo, b.ul, b.last
    8960:	ldur	x8, [x29, #-16]
    8964:	ldr	w9, [x8, #160]
    8968:	subs	w9, w9, #0x3
    896c:	sturb	w9, [x29, #-29]
    8970:	ldur	x8, [x29, #-16]
    8974:	ldr	w9, [x8, #172]
    8978:	ldur	x8, [x29, #-16]
    897c:	ldr	w10, [x8, #176]
    8980:	subs	w9, w9, w10
    8984:	sturh	w9, [x29, #-32]
    8988:	ldurh	w9, [x29, #-32]
    898c:	ldur	x8, [x29, #-16]
    8990:	ldr	x8, [x8, #5904]
    8994:	ldur	x11, [x29, #-16]
    8998:	ldr	w10, [x11, #5900]
    899c:	mov	w11, w10
    89a0:	mov	x12, #0x2                   	// #2
    89a4:	mul	x11, x12, x11
    89a8:	add	x8, x8, x11
    89ac:	strh	w9, [x8]
    89b0:	ldurb	w9, [x29, #-29]
    89b4:	ldur	x8, [x29, #-16]
    89b8:	ldr	x8, [x8, #5888]
    89bc:	ldur	x11, [x29, #-16]
    89c0:	ldr	w10, [x11, #5900]
    89c4:	mov	w12, w10
    89c8:	mov	w10, w12
    89cc:	add	w10, w10, #0x1
    89d0:	str	w10, [x11, #5900]
    89d4:	add	x8, x8, x12
    89d8:	strb	w9, [x8]
    89dc:	ldurh	w9, [x29, #-32]
    89e0:	mov	w10, #0xffffffff            	// #-1
    89e4:	add	w9, w10, w9, uxth
    89e8:	sturh	w9, [x29, #-32]
    89ec:	ldur	x8, [x29, #-16]
    89f0:	add	x8, x8, #0xd4
    89f4:	ldurb	w9, [x29, #-29]
    89f8:	mov	w11, w9
    89fc:	adrp	x12, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    8a00:	add	x12, x12, #0xd64
    8a04:	ldrb	w9, [x12, x11]
    8a08:	add	w9, w9, #0x100
    8a0c:	add	w9, w9, #0x1
    8a10:	mov	w0, w9
    8a14:	sxtw	x11, w0
    8a18:	mov	x12, #0x4                   	// #4
    8a1c:	mul	x11, x12, x11
    8a20:	add	x8, x8, x11
    8a24:	ldrh	w9, [x8]
    8a28:	add	w9, w9, #0x1
    8a2c:	strh	w9, [x8]
    8a30:	ldur	x8, [x29, #-16]
    8a34:	add	x8, x8, #0x9c8
    8a38:	ldurh	w9, [x29, #-32]
    8a3c:	cmp	w9, #0x100
    8a40:	stur	x8, [x29, #-48]
    8a44:	b.ge	8a64 <deflateCopy@@Base+0x580>  // b.tcont
    8a48:	ldurh	w8, [x29, #-32]
    8a4c:	mov	w9, w8
    8a50:	adrp	x10, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    8a54:	add	x10, x10, #0xb64
    8a58:	ldrb	w8, [x10, x9]
    8a5c:	stur	w8, [x29, #-52]
    8a60:	b	8a80 <deflateCopy@@Base+0x59c>
    8a64:	ldurh	w8, [x29, #-32]
    8a68:	asr	w8, w8, #7
    8a6c:	add	w8, w8, #0x100
    8a70:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    8a74:	add	x9, x9, #0xb64
    8a78:	ldrb	w8, [x9, w8, sxtw]
    8a7c:	stur	w8, [x29, #-52]
    8a80:	ldur	w8, [x29, #-52]
    8a84:	mov	w0, w8
    8a88:	sxtw	x9, w0
    8a8c:	mov	x10, #0x4                   	// #4
    8a90:	mul	x9, x10, x9
    8a94:	ldur	x10, [x29, #-48]
    8a98:	add	x9, x10, x9
    8a9c:	ldrh	w8, [x9]
    8aa0:	add	w8, w8, #0x1
    8aa4:	strh	w8, [x9]
    8aa8:	ldur	x9, [x29, #-16]
    8aac:	ldr	w8, [x9, #5900]
    8ab0:	ldur	x9, [x29, #-16]
    8ab4:	ldr	w11, [x9, #5896]
    8ab8:	subs	w11, w11, #0x1
    8abc:	cmp	w8, w11
    8ac0:	cset	w8, eq  // eq = none
    8ac4:	and	w8, w8, #0x1
    8ac8:	stur	w8, [x29, #-28]
    8acc:	ldur	x9, [x29, #-16]
    8ad0:	ldr	w8, [x9, #160]
    8ad4:	ldur	x9, [x29, #-16]
    8ad8:	ldr	w11, [x9, #180]
    8adc:	subs	w8, w11, w8
    8ae0:	str	w8, [x9, #180]
    8ae4:	ldur	x9, [x29, #-16]
    8ae8:	ldr	w8, [x9, #160]
    8aec:	ldur	x9, [x29, #-16]
    8af0:	ldr	w11, [x9, #192]
    8af4:	cmp	w8, w11
    8af8:	b.hi	8c10 <deflateCopy@@Base+0x72c>  // b.pmore
    8afc:	ldur	x8, [x29, #-16]
    8b00:	ldr	w9, [x8, #180]
    8b04:	cmp	w9, #0x3
    8b08:	b.cc	8c10 <deflateCopy@@Base+0x72c>  // b.lo, b.ul, b.last
    8b0c:	ldur	x8, [x29, #-16]
    8b10:	ldr	w9, [x8, #160]
    8b14:	subs	w9, w9, #0x1
    8b18:	str	w9, [x8, #160]
    8b1c:	ldur	x8, [x29, #-16]
    8b20:	ldr	w9, [x8, #172]
    8b24:	add	w9, w9, #0x1
    8b28:	str	w9, [x8, #172]
    8b2c:	ldur	x8, [x29, #-16]
    8b30:	ldr	w9, [x8, #128]
    8b34:	ldur	x8, [x29, #-16]
    8b38:	ldr	w10, [x8, #144]
    8b3c:	lsl	w9, w9, w10
    8b40:	ldur	x8, [x29, #-16]
    8b44:	ldr	x8, [x8, #96]
    8b48:	ldur	x11, [x29, #-16]
    8b4c:	ldr	w10, [x11, #172]
    8b50:	add	w10, w10, #0x2
    8b54:	ldrb	w10, [x8, w10, uxtw]
    8b58:	eor	w9, w9, w10
    8b5c:	ldur	x8, [x29, #-16]
    8b60:	ldr	w10, [x8, #140]
    8b64:	and	w9, w9, w10
    8b68:	ldur	x8, [x29, #-16]
    8b6c:	str	w9, [x8, #128]
    8b70:	ldur	x8, [x29, #-16]
    8b74:	ldr	x8, [x8, #120]
    8b78:	ldur	x11, [x29, #-16]
    8b7c:	ldr	w9, [x11, #128]
    8b80:	mov	w11, w9
    8b84:	mov	x12, #0x2                   	// #2
    8b88:	ldrh	w9, [x8, x11, lsl #1]
    8b8c:	ldur	x8, [x29, #-16]
    8b90:	ldr	x8, [x8, #112]
    8b94:	ldur	x11, [x29, #-16]
    8b98:	ldr	w10, [x11, #172]
    8b9c:	ldur	x11, [x29, #-16]
    8ba0:	ldr	w13, [x11, #88]
    8ba4:	and	w10, w10, w13
    8ba8:	mov	w11, w10
    8bac:	ubfx	x11, x11, #0, #32
    8bb0:	mul	x11, x12, x11
    8bb4:	add	x8, x8, x11
    8bb8:	strh	w9, [x8]
    8bbc:	stur	w9, [x29, #-24]
    8bc0:	ldur	x8, [x29, #-16]
    8bc4:	ldr	w9, [x8, #172]
    8bc8:	ldur	x8, [x29, #-16]
    8bcc:	ldr	x8, [x8, #120]
    8bd0:	ldur	x11, [x29, #-16]
    8bd4:	ldr	w10, [x11, #128]
    8bd8:	mov	w11, w10
    8bdc:	mul	x11, x12, x11
    8be0:	add	x8, x8, x11
    8be4:	strh	w9, [x8]
    8be8:	ldur	x8, [x29, #-16]
    8bec:	ldr	w9, [x8, #160]
    8bf0:	subs	w9, w9, #0x1
    8bf4:	str	w9, [x8, #160]
    8bf8:	cbnz	w9, 8b1c <deflateCopy@@Base+0x638>
    8bfc:	ldur	x8, [x29, #-16]
    8c00:	ldr	w9, [x8, #172]
    8c04:	add	w9, w9, #0x1
    8c08:	str	w9, [x8, #172]
    8c0c:	b	8c94 <deflateCopy@@Base+0x7b0>
    8c10:	ldur	x8, [x29, #-16]
    8c14:	ldr	w9, [x8, #160]
    8c18:	ldur	x8, [x29, #-16]
    8c1c:	ldr	w10, [x8, #172]
    8c20:	add	w9, w10, w9
    8c24:	str	w9, [x8, #172]
    8c28:	ldur	x8, [x29, #-16]
    8c2c:	str	wzr, [x8, #160]
    8c30:	ldur	x8, [x29, #-16]
    8c34:	ldr	x8, [x8, #96]
    8c38:	ldur	x11, [x29, #-16]
    8c3c:	ldr	w9, [x11, #172]
    8c40:	mov	w11, w9
    8c44:	ldrb	w9, [x8, x11]
    8c48:	ldur	x8, [x29, #-16]
    8c4c:	str	w9, [x8, #128]
    8c50:	ldur	x8, [x29, #-16]
    8c54:	ldr	w9, [x8, #128]
    8c58:	ldur	x8, [x29, #-16]
    8c5c:	ldr	w10, [x8, #144]
    8c60:	lsl	w9, w9, w10
    8c64:	ldur	x8, [x29, #-16]
    8c68:	ldr	x8, [x8, #96]
    8c6c:	ldur	x11, [x29, #-16]
    8c70:	ldr	w10, [x11, #172]
    8c74:	add	w10, w10, #0x1
    8c78:	ldrb	w10, [x8, w10, uxtw]
    8c7c:	eor	w9, w9, w10
    8c80:	ldur	x8, [x29, #-16]
    8c84:	ldr	w10, [x8, #140]
    8c88:	and	w9, w9, w10
    8c8c:	ldur	x8, [x29, #-16]
    8c90:	str	w9, [x8, #128]
    8c94:	b	8d78 <deflateCopy@@Base+0x894>
    8c98:	ldur	x8, [x29, #-16]
    8c9c:	ldr	x8, [x8, #96]
    8ca0:	ldur	x9, [x29, #-16]
    8ca4:	ldr	w10, [x9, #172]
    8ca8:	mov	w9, w10
    8cac:	add	x8, x8, x9
    8cb0:	ldrb	w10, [x8]
    8cb4:	sturb	w10, [x29, #-33]
    8cb8:	ldur	x8, [x29, #-16]
    8cbc:	ldr	x8, [x8, #5904]
    8cc0:	ldur	x9, [x29, #-16]
    8cc4:	ldr	w10, [x9, #5900]
    8cc8:	mov	w9, w10
    8ccc:	mov	x11, #0x2                   	// #2
    8cd0:	mul	x9, x11, x9
    8cd4:	add	x8, x8, x9
    8cd8:	mov	w10, #0x0                   	// #0
    8cdc:	strh	w10, [x8]
    8ce0:	ldurb	w10, [x29, #-33]
    8ce4:	ldur	x8, [x29, #-16]
    8ce8:	ldr	x8, [x8, #5888]
    8cec:	ldur	x9, [x29, #-16]
    8cf0:	ldr	w12, [x9, #5900]
    8cf4:	mov	w11, w12
    8cf8:	mov	w12, w11
    8cfc:	add	w12, w12, #0x1
    8d00:	str	w12, [x9, #5900]
    8d04:	add	x8, x8, x11
    8d08:	strb	w10, [x8]
    8d0c:	ldur	x8, [x29, #-16]
    8d10:	add	x8, x8, #0xd4
    8d14:	ldurb	w10, [x29, #-33]
    8d18:	mov	w9, w10
    8d1c:	mov	x11, #0x4                   	// #4
    8d20:	mul	x9, x11, x9
    8d24:	add	x8, x8, x9
    8d28:	ldrh	w10, [x8]
    8d2c:	add	w10, w10, #0x1
    8d30:	strh	w10, [x8]
    8d34:	ldur	x8, [x29, #-16]
    8d38:	ldr	w10, [x8, #5900]
    8d3c:	ldur	x8, [x29, #-16]
    8d40:	ldr	w12, [x8, #5896]
    8d44:	subs	w12, w12, #0x1
    8d48:	cmp	w10, w12
    8d4c:	cset	w10, eq  // eq = none
    8d50:	and	w10, w10, #0x1
    8d54:	stur	w10, [x29, #-28]
    8d58:	ldur	x8, [x29, #-16]
    8d5c:	ldr	w10, [x8, #180]
    8d60:	subs	w10, w10, #0x1
    8d64:	str	w10, [x8, #180]
    8d68:	ldur	x8, [x29, #-16]
    8d6c:	ldr	w10, [x8, #172]
    8d70:	add	w10, w10, #0x1
    8d74:	str	w10, [x8, #172]
    8d78:	ldur	w8, [x29, #-28]
    8d7c:	cbz	w8, 8e2c <deflateCopy@@Base+0x948>
    8d80:	ldur	x0, [x29, #-16]
    8d84:	ldur	x8, [x29, #-16]
    8d88:	ldr	x8, [x8, #152]
    8d8c:	cmp	x8, #0x0
    8d90:	cset	w9, lt  // lt = tstop
    8d94:	str	x0, [sp, #48]
    8d98:	tbnz	w9, #0, 8dbc <deflateCopy@@Base+0x8d8>
    8d9c:	ldur	x8, [x29, #-16]
    8da0:	ldr	x8, [x8, #96]
    8da4:	ldur	x9, [x29, #-16]
    8da8:	ldr	x9, [x9, #152]
    8dac:	and	x9, x9, #0xffffffff
    8db0:	add	x8, x8, x9
    8db4:	str	x8, [sp, #40]
    8db8:	b	8dc4 <deflateCopy@@Base+0x8e0>
    8dbc:	mov	x8, xzr
    8dc0:	str	x8, [sp, #40]
    8dc4:	ldr	x8, [sp, #40]
    8dc8:	ldur	x9, [x29, #-16]
    8dcc:	ldr	w10, [x9, #172]
    8dd0:	mov	w9, w10
    8dd4:	ldur	x11, [x29, #-16]
    8dd8:	ldr	x11, [x11, #152]
    8ddc:	subs	x2, x9, x11
    8de0:	ldr	x0, [sp, #48]
    8de4:	mov	x1, x8
    8de8:	mov	w10, wzr
    8dec:	mov	w3, w10
    8df0:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    8df4:	ldur	x8, [x29, #-16]
    8df8:	ldr	w10, [x8, #172]
    8dfc:	mov	w8, w10
    8e00:	ldur	x9, [x29, #-16]
    8e04:	str	x8, [x9, #152]
    8e08:	ldur	x8, [x29, #-16]
    8e0c:	ldr	x0, [x8]
    8e10:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    8e14:	ldur	x8, [x29, #-16]
    8e18:	ldr	x8, [x8]
    8e1c:	ldr	w10, [x8, #32]
    8e20:	cbnz	w10, 8e2c <deflateCopy@@Base+0x948>
    8e24:	stur	wzr, [x29, #-4]
    8e28:	b	8fe8 <deflateCopy@@Base+0xb04>
    8e2c:	b	87f8 <deflateCopy@@Base+0x314>
    8e30:	ldur	x8, [x29, #-16]
    8e34:	ldr	w9, [x8, #172]
    8e38:	cmp	w9, #0x2
    8e3c:	b.cs	8e50 <deflateCopy@@Base+0x96c>  // b.hs, b.nlast
    8e40:	ldur	x8, [x29, #-16]
    8e44:	ldr	w9, [x8, #172]
    8e48:	str	w9, [sp, #36]
    8e4c:	b	8e58 <deflateCopy@@Base+0x974>
    8e50:	mov	w8, #0x2                   	// #2
    8e54:	str	w8, [sp, #36]
    8e58:	ldr	w8, [sp, #36]
    8e5c:	ldur	x9, [x29, #-16]
    8e60:	str	w8, [x9, #5932]
    8e64:	ldur	w8, [x29, #-20]
    8e68:	cmp	w8, #0x4
    8e6c:	b.ne	8f28 <deflateCopy@@Base+0xa44>  // b.any
    8e70:	ldur	x0, [x29, #-16]
    8e74:	ldur	x8, [x29, #-16]
    8e78:	ldr	x8, [x8, #152]
    8e7c:	cmp	x8, #0x0
    8e80:	cset	w9, lt  // lt = tstop
    8e84:	str	x0, [sp, #24]
    8e88:	tbnz	w9, #0, 8eac <deflateCopy@@Base+0x9c8>
    8e8c:	ldur	x8, [x29, #-16]
    8e90:	ldr	x8, [x8, #96]
    8e94:	ldur	x9, [x29, #-16]
    8e98:	ldr	x9, [x9, #152]
    8e9c:	and	x9, x9, #0xffffffff
    8ea0:	add	x8, x8, x9
    8ea4:	str	x8, [sp, #16]
    8ea8:	b	8eb4 <deflateCopy@@Base+0x9d0>
    8eac:	mov	x8, xzr
    8eb0:	str	x8, [sp, #16]
    8eb4:	ldr	x8, [sp, #16]
    8eb8:	ldur	x9, [x29, #-16]
    8ebc:	ldr	w10, [x9, #172]
    8ec0:	mov	w9, w10
    8ec4:	ldur	x11, [x29, #-16]
    8ec8:	ldr	x11, [x11, #152]
    8ecc:	subs	x2, x9, x11
    8ed0:	ldr	x0, [sp, #24]
    8ed4:	mov	x1, x8
    8ed8:	mov	w3, #0x1                   	// #1
    8edc:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    8ee0:	ldur	x8, [x29, #-16]
    8ee4:	ldr	w10, [x8, #172]
    8ee8:	mov	w8, w10
    8eec:	ldur	x9, [x29, #-16]
    8ef0:	str	x8, [x9, #152]
    8ef4:	ldur	x8, [x29, #-16]
    8ef8:	ldr	x0, [x8]
    8efc:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    8f00:	ldur	x8, [x29, #-16]
    8f04:	ldr	x8, [x8]
    8f08:	ldr	w10, [x8, #32]
    8f0c:	cbnz	w10, 8f1c <deflateCopy@@Base+0xa38>
    8f10:	mov	w8, #0x2                   	// #2
    8f14:	stur	w8, [x29, #-4]
    8f18:	b	8fe8 <deflateCopy@@Base+0xb04>
    8f1c:	mov	w8, #0x3                   	// #3
    8f20:	stur	w8, [x29, #-4]
    8f24:	b	8fe8 <deflateCopy@@Base+0xb04>
    8f28:	ldur	x8, [x29, #-16]
    8f2c:	ldr	w9, [x8, #5900]
    8f30:	cbz	w9, 8fe0 <deflateCopy@@Base+0xafc>
    8f34:	ldur	x0, [x29, #-16]
    8f38:	ldur	x8, [x29, #-16]
    8f3c:	ldr	x8, [x8, #152]
    8f40:	cmp	x8, #0x0
    8f44:	cset	w9, lt  // lt = tstop
    8f48:	str	x0, [sp, #8]
    8f4c:	tbnz	w9, #0, 8f70 <deflateCopy@@Base+0xa8c>
    8f50:	ldur	x8, [x29, #-16]
    8f54:	ldr	x8, [x8, #96]
    8f58:	ldur	x9, [x29, #-16]
    8f5c:	ldr	x9, [x9, #152]
    8f60:	and	x9, x9, #0xffffffff
    8f64:	add	x8, x8, x9
    8f68:	str	x8, [sp]
    8f6c:	b	8f78 <deflateCopy@@Base+0xa94>
    8f70:	mov	x8, xzr
    8f74:	str	x8, [sp]
    8f78:	ldr	x8, [sp]
    8f7c:	ldur	x9, [x29, #-16]
    8f80:	ldr	w10, [x9, #172]
    8f84:	mov	w9, w10
    8f88:	ldur	x11, [x29, #-16]
    8f8c:	ldr	x11, [x11, #152]
    8f90:	subs	x2, x9, x11
    8f94:	ldr	x0, [sp, #8]
    8f98:	mov	x1, x8
    8f9c:	mov	w10, wzr
    8fa0:	mov	w3, w10
    8fa4:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    8fa8:	ldur	x8, [x29, #-16]
    8fac:	ldr	w10, [x8, #172]
    8fb0:	mov	w8, w10
    8fb4:	ldur	x9, [x29, #-16]
    8fb8:	str	x8, [x9, #152]
    8fbc:	ldur	x8, [x29, #-16]
    8fc0:	ldr	x0, [x8]
    8fc4:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    8fc8:	ldur	x8, [x29, #-16]
    8fcc:	ldr	x8, [x8]
    8fd0:	ldr	w10, [x8, #32]
    8fd4:	cbnz	w10, 8fe0 <deflateCopy@@Base+0xafc>
    8fd8:	stur	wzr, [x29, #-4]
    8fdc:	b	8fe8 <deflateCopy@@Base+0xb04>
    8fe0:	mov	w8, #0x1                   	// #1
    8fe4:	stur	w8, [x29, #-4]
    8fe8:	ldur	w0, [x29, #-4]
    8fec:	ldp	x29, x30, [sp, #112]
    8ff0:	add	sp, sp, #0x80
    8ff4:	ret
    8ff8:	sub	sp, sp, #0x90
    8ffc:	stp	x29, x30, [sp, #128]
    9000:	add	x29, sp, #0x80
    9004:	stur	x0, [x29, #-16]
    9008:	stur	w1, [x29, #-20]
    900c:	ldur	x8, [x29, #-16]
    9010:	ldr	w9, [x8, #180]
    9014:	cmp	w9, #0x106
    9018:	b.cs	9054 <deflateCopy@@Base+0xb70>  // b.hs, b.nlast
    901c:	ldur	x0, [x29, #-16]
    9020:	bl	4a9c <deflateSetDictionary@@Base+0x468>
    9024:	ldur	x8, [x29, #-16]
    9028:	ldr	w9, [x8, #180]
    902c:	cmp	w9, #0x106
    9030:	b.cs	9044 <deflateCopy@@Base+0xb60>  // b.hs, b.nlast
    9034:	ldur	w8, [x29, #-20]
    9038:	cbnz	w8, 9044 <deflateCopy@@Base+0xb60>
    903c:	stur	wzr, [x29, #-4]
    9040:	b	9a18 <deflateCopy@@Base+0x1534>
    9044:	ldur	x8, [x29, #-16]
    9048:	ldr	w9, [x8, #180]
    904c:	cbnz	w9, 9054 <deflateCopy@@Base+0xb70>
    9050:	b	9784 <deflateCopy@@Base+0x12a0>
    9054:	stur	wzr, [x29, #-24]
    9058:	ldur	x8, [x29, #-16]
    905c:	ldr	w9, [x8, #180]
    9060:	cmp	w9, #0x3
    9064:	b.cc	9124 <deflateCopy@@Base+0xc40>  // b.lo, b.ul, b.last
    9068:	ldur	x8, [x29, #-16]
    906c:	ldr	w9, [x8, #128]
    9070:	ldur	x8, [x29, #-16]
    9074:	ldr	w10, [x8, #144]
    9078:	lsl	w9, w9, w10
    907c:	ldur	x8, [x29, #-16]
    9080:	ldr	x8, [x8, #96]
    9084:	ldur	x11, [x29, #-16]
    9088:	ldr	w10, [x11, #172]
    908c:	add	w10, w10, #0x2
    9090:	ldrb	w10, [x8, w10, uxtw]
    9094:	eor	w9, w9, w10
    9098:	ldur	x8, [x29, #-16]
    909c:	ldr	w10, [x8, #140]
    90a0:	and	w9, w9, w10
    90a4:	ldur	x8, [x29, #-16]
    90a8:	str	w9, [x8, #128]
    90ac:	ldur	x8, [x29, #-16]
    90b0:	ldr	x8, [x8, #120]
    90b4:	ldur	x11, [x29, #-16]
    90b8:	ldr	w9, [x11, #128]
    90bc:	mov	w11, w9
    90c0:	mov	x12, #0x2                   	// #2
    90c4:	ldrh	w9, [x8, x11, lsl #1]
    90c8:	ldur	x8, [x29, #-16]
    90cc:	ldr	x8, [x8, #112]
    90d0:	ldur	x11, [x29, #-16]
    90d4:	ldr	w10, [x11, #172]
    90d8:	ldur	x11, [x29, #-16]
    90dc:	ldr	w13, [x11, #88]
    90e0:	and	w10, w10, w13
    90e4:	mov	w11, w10
    90e8:	ubfx	x11, x11, #0, #32
    90ec:	mul	x11, x12, x11
    90f0:	add	x8, x8, x11
    90f4:	strh	w9, [x8]
    90f8:	stur	w9, [x29, #-24]
    90fc:	ldur	x8, [x29, #-16]
    9100:	ldr	w9, [x8, #172]
    9104:	ldur	x8, [x29, #-16]
    9108:	ldr	x8, [x8, #120]
    910c:	ldur	x11, [x29, #-16]
    9110:	ldr	w10, [x11, #128]
    9114:	mov	w11, w10
    9118:	mul	x11, x12, x11
    911c:	add	x8, x8, x11
    9120:	strh	w9, [x8]
    9124:	ldur	x8, [x29, #-16]
    9128:	ldr	w9, [x8, #160]
    912c:	ldur	x8, [x29, #-16]
    9130:	str	w9, [x8, #184]
    9134:	ldur	x8, [x29, #-16]
    9138:	ldr	w9, [x8, #176]
    913c:	ldur	x8, [x29, #-16]
    9140:	str	w9, [x8, #164]
    9144:	ldur	x8, [x29, #-16]
    9148:	mov	w9, #0x2                   	// #2
    914c:	str	w9, [x8, #160]
    9150:	ldur	w9, [x29, #-24]
    9154:	cbz	w9, 9200 <deflateCopy@@Base+0xd1c>
    9158:	ldur	x8, [x29, #-16]
    915c:	ldr	w9, [x8, #184]
    9160:	ldur	x8, [x29, #-16]
    9164:	ldr	w10, [x8, #192]
    9168:	cmp	w9, w10
    916c:	b.cs	9200 <deflateCopy@@Base+0xd1c>  // b.hs, b.nlast
    9170:	ldur	x8, [x29, #-16]
    9174:	ldr	w9, [x8, #172]
    9178:	ldur	w10, [x29, #-24]
    917c:	subs	w9, w9, w10
    9180:	ldur	x8, [x29, #-16]
    9184:	ldr	w10, [x8, #80]
    9188:	subs	w10, w10, #0x106
    918c:	cmp	w9, w10
    9190:	b.hi	9200 <deflateCopy@@Base+0xd1c>  // b.pmore
    9194:	ldur	x0, [x29, #-16]
    9198:	ldur	w1, [x29, #-24]
    919c:	bl	9a28 <deflateCopy@@Base+0x1544>
    91a0:	ldur	x8, [x29, #-16]
    91a4:	str	w0, [x8, #160]
    91a8:	ldur	x8, [x29, #-16]
    91ac:	ldr	w9, [x8, #160]
    91b0:	cmp	w9, #0x5
    91b4:	b.hi	9200 <deflateCopy@@Base+0xd1c>  // b.pmore
    91b8:	ldur	x8, [x29, #-16]
    91bc:	ldr	w9, [x8, #200]
    91c0:	cmp	w9, #0x1
    91c4:	b.eq	91f4 <deflateCopy@@Base+0xd10>  // b.none
    91c8:	ldur	x8, [x29, #-16]
    91cc:	ldr	w9, [x8, #160]
    91d0:	cmp	w9, #0x3
    91d4:	b.ne	9200 <deflateCopy@@Base+0xd1c>  // b.any
    91d8:	ldur	x8, [x29, #-16]
    91dc:	ldr	w9, [x8, #172]
    91e0:	ldur	x8, [x29, #-16]
    91e4:	ldr	w10, [x8, #176]
    91e8:	subs	w9, w9, w10
    91ec:	cmp	w9, #0x1, lsl #12
    91f0:	b.ls	9200 <deflateCopy@@Base+0xd1c>  // b.plast
    91f4:	ldur	x8, [x29, #-16]
    91f8:	mov	w9, #0x2                   	// #2
    91fc:	str	w9, [x8, #160]
    9200:	ldur	x8, [x29, #-16]
    9204:	ldr	w9, [x8, #184]
    9208:	cmp	w9, #0x3
    920c:	b.cc	95a8 <deflateCopy@@Base+0x10c4>  // b.lo, b.ul, b.last
    9210:	ldur	x8, [x29, #-16]
    9214:	ldr	w9, [x8, #160]
    9218:	ldur	x8, [x29, #-16]
    921c:	ldr	w10, [x8, #184]
    9220:	cmp	w9, w10
    9224:	b.hi	95a8 <deflateCopy@@Base+0x10c4>  // b.pmore
    9228:	ldur	x8, [x29, #-16]
    922c:	ldr	w9, [x8, #172]
    9230:	ldur	x8, [x29, #-16]
    9234:	ldr	w10, [x8, #180]
    9238:	add	w9, w9, w10
    923c:	subs	w9, w9, #0x3
    9240:	stur	w9, [x29, #-32]
    9244:	ldur	x8, [x29, #-16]
    9248:	ldr	w9, [x8, #184]
    924c:	subs	w9, w9, #0x3
    9250:	sturb	w9, [x29, #-33]
    9254:	ldur	x8, [x29, #-16]
    9258:	ldr	w9, [x8, #172]
    925c:	subs	w9, w9, #0x1
    9260:	ldur	x8, [x29, #-16]
    9264:	ldr	w10, [x8, #164]
    9268:	subs	w9, w9, w10
    926c:	sturh	w9, [x29, #-36]
    9270:	ldurh	w9, [x29, #-36]
    9274:	ldur	x8, [x29, #-16]
    9278:	ldr	x8, [x8, #5904]
    927c:	ldur	x11, [x29, #-16]
    9280:	ldr	w10, [x11, #5900]
    9284:	mov	w11, w10
    9288:	mov	x12, #0x2                   	// #2
    928c:	mul	x11, x12, x11
    9290:	add	x8, x8, x11
    9294:	strh	w9, [x8]
    9298:	ldurb	w9, [x29, #-33]
    929c:	ldur	x8, [x29, #-16]
    92a0:	ldr	x8, [x8, #5888]
    92a4:	ldur	x11, [x29, #-16]
    92a8:	ldr	w10, [x11, #5900]
    92ac:	mov	w12, w10
    92b0:	mov	w10, w12
    92b4:	add	w10, w10, #0x1
    92b8:	str	w10, [x11, #5900]
    92bc:	add	x8, x8, x12
    92c0:	strb	w9, [x8]
    92c4:	ldurh	w9, [x29, #-36]
    92c8:	mov	w10, #0xffffffff            	// #-1
    92cc:	add	w9, w10, w9, uxth
    92d0:	sturh	w9, [x29, #-36]
    92d4:	ldur	x8, [x29, #-16]
    92d8:	add	x8, x8, #0xd4
    92dc:	ldurb	w9, [x29, #-33]
    92e0:	mov	w11, w9
    92e4:	adrp	x12, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    92e8:	add	x12, x12, #0xd64
    92ec:	ldrb	w9, [x12, x11]
    92f0:	add	w9, w9, #0x100
    92f4:	add	w9, w9, #0x1
    92f8:	mov	w0, w9
    92fc:	sxtw	x11, w0
    9300:	mov	x12, #0x4                   	// #4
    9304:	mul	x11, x12, x11
    9308:	add	x8, x8, x11
    930c:	ldrh	w9, [x8]
    9310:	add	w9, w9, #0x1
    9314:	strh	w9, [x8]
    9318:	ldur	x8, [x29, #-16]
    931c:	add	x8, x8, #0x9c8
    9320:	ldurh	w9, [x29, #-36]
    9324:	cmp	w9, #0x100
    9328:	stur	x8, [x29, #-48]
    932c:	b.ge	934c <deflateCopy@@Base+0xe68>  // b.tcont
    9330:	ldurh	w8, [x29, #-36]
    9334:	mov	w9, w8
    9338:	adrp	x10, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    933c:	add	x10, x10, #0xb64
    9340:	ldrb	w8, [x10, x9]
    9344:	stur	w8, [x29, #-52]
    9348:	b	9368 <deflateCopy@@Base+0xe84>
    934c:	ldurh	w8, [x29, #-36]
    9350:	asr	w8, w8, #7
    9354:	add	w8, w8, #0x100
    9358:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    935c:	add	x9, x9, #0xb64
    9360:	ldrb	w8, [x9, w8, sxtw]
    9364:	stur	w8, [x29, #-52]
    9368:	ldur	w8, [x29, #-52]
    936c:	mov	w0, w8
    9370:	sxtw	x9, w0
    9374:	mov	x10, #0x4                   	// #4
    9378:	mul	x9, x10, x9
    937c:	ldur	x10, [x29, #-48]
    9380:	add	x9, x10, x9
    9384:	ldrh	w8, [x9]
    9388:	add	w8, w8, #0x1
    938c:	strh	w8, [x9]
    9390:	ldur	x9, [x29, #-16]
    9394:	ldr	w8, [x9, #5900]
    9398:	ldur	x9, [x29, #-16]
    939c:	ldr	w11, [x9, #5896]
    93a0:	subs	w11, w11, #0x1
    93a4:	cmp	w8, w11
    93a8:	cset	w8, eq  // eq = none
    93ac:	and	w8, w8, #0x1
    93b0:	stur	w8, [x29, #-28]
    93b4:	ldur	x9, [x29, #-16]
    93b8:	ldr	w8, [x9, #184]
    93bc:	subs	w8, w8, #0x1
    93c0:	ldur	x9, [x29, #-16]
    93c4:	ldr	w11, [x9, #180]
    93c8:	subs	w8, w11, w8
    93cc:	str	w8, [x9, #180]
    93d0:	ldur	x9, [x29, #-16]
    93d4:	ldr	w8, [x9, #184]
    93d8:	subs	w8, w8, #0x2
    93dc:	str	w8, [x9, #184]
    93e0:	ldur	x8, [x29, #-16]
    93e4:	ldr	w9, [x8, #172]
    93e8:	add	w9, w9, #0x1
    93ec:	str	w9, [x8, #172]
    93f0:	ldur	w10, [x29, #-32]
    93f4:	cmp	w9, w10
    93f8:	b.hi	94b8 <deflateCopy@@Base+0xfd4>  // b.pmore
    93fc:	ldur	x8, [x29, #-16]
    9400:	ldr	w9, [x8, #128]
    9404:	ldur	x8, [x29, #-16]
    9408:	ldr	w10, [x8, #144]
    940c:	lsl	w9, w9, w10
    9410:	ldur	x8, [x29, #-16]
    9414:	ldr	x8, [x8, #96]
    9418:	ldur	x11, [x29, #-16]
    941c:	ldr	w10, [x11, #172]
    9420:	add	w10, w10, #0x2
    9424:	ldrb	w10, [x8, w10, uxtw]
    9428:	eor	w9, w9, w10
    942c:	ldur	x8, [x29, #-16]
    9430:	ldr	w10, [x8, #140]
    9434:	and	w9, w9, w10
    9438:	ldur	x8, [x29, #-16]
    943c:	str	w9, [x8, #128]
    9440:	ldur	x8, [x29, #-16]
    9444:	ldr	x8, [x8, #120]
    9448:	ldur	x11, [x29, #-16]
    944c:	ldr	w9, [x11, #128]
    9450:	mov	w11, w9
    9454:	mov	x12, #0x2                   	// #2
    9458:	ldrh	w9, [x8, x11, lsl #1]
    945c:	ldur	x8, [x29, #-16]
    9460:	ldr	x8, [x8, #112]
    9464:	ldur	x11, [x29, #-16]
    9468:	ldr	w10, [x11, #172]
    946c:	ldur	x11, [x29, #-16]
    9470:	ldr	w13, [x11, #88]
    9474:	and	w10, w10, w13
    9478:	mov	w11, w10
    947c:	ubfx	x11, x11, #0, #32
    9480:	mul	x11, x12, x11
    9484:	add	x8, x8, x11
    9488:	strh	w9, [x8]
    948c:	stur	w9, [x29, #-24]
    9490:	ldur	x8, [x29, #-16]
    9494:	ldr	w9, [x8, #172]
    9498:	ldur	x8, [x29, #-16]
    949c:	ldr	x8, [x8, #120]
    94a0:	ldur	x11, [x29, #-16]
    94a4:	ldr	w10, [x11, #128]
    94a8:	mov	w11, w10
    94ac:	mul	x11, x12, x11
    94b0:	add	x8, x8, x11
    94b4:	strh	w9, [x8]
    94b8:	ldur	x8, [x29, #-16]
    94bc:	ldr	w9, [x8, #184]
    94c0:	subs	w9, w9, #0x1
    94c4:	str	w9, [x8, #184]
    94c8:	cbnz	w9, 93e0 <deflateCopy@@Base+0xefc>
    94cc:	ldur	x8, [x29, #-16]
    94d0:	str	wzr, [x8, #168]
    94d4:	ldur	x8, [x29, #-16]
    94d8:	mov	w9, #0x2                   	// #2
    94dc:	str	w9, [x8, #160]
    94e0:	ldur	x8, [x29, #-16]
    94e4:	ldr	w9, [x8, #172]
    94e8:	add	w9, w9, #0x1
    94ec:	str	w9, [x8, #172]
    94f0:	ldur	w9, [x29, #-28]
    94f4:	cbz	w9, 95a4 <deflateCopy@@Base+0x10c0>
    94f8:	ldur	x0, [x29, #-16]
    94fc:	ldur	x8, [x29, #-16]
    9500:	ldr	x8, [x8, #152]
    9504:	cmp	x8, #0x0
    9508:	cset	w9, lt  // lt = tstop
    950c:	str	x0, [sp, #64]
    9510:	tbnz	w9, #0, 9534 <deflateCopy@@Base+0x1050>
    9514:	ldur	x8, [x29, #-16]
    9518:	ldr	x8, [x8, #96]
    951c:	ldur	x9, [x29, #-16]
    9520:	ldr	x9, [x9, #152]
    9524:	and	x9, x9, #0xffffffff
    9528:	add	x8, x8, x9
    952c:	str	x8, [sp, #56]
    9530:	b	953c <deflateCopy@@Base+0x1058>
    9534:	mov	x8, xzr
    9538:	str	x8, [sp, #56]
    953c:	ldr	x8, [sp, #56]
    9540:	ldur	x9, [x29, #-16]
    9544:	ldr	w10, [x9, #172]
    9548:	mov	w9, w10
    954c:	ldur	x11, [x29, #-16]
    9550:	ldr	x11, [x11, #152]
    9554:	subs	x2, x9, x11
    9558:	ldr	x0, [sp, #64]
    955c:	mov	x1, x8
    9560:	mov	w10, wzr
    9564:	mov	w3, w10
    9568:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    956c:	ldur	x8, [x29, #-16]
    9570:	ldr	w10, [x8, #172]
    9574:	mov	w8, w10
    9578:	ldur	x9, [x29, #-16]
    957c:	str	x8, [x9, #152]
    9580:	ldur	x8, [x29, #-16]
    9584:	ldr	x0, [x8]
    9588:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    958c:	ldur	x8, [x29, #-16]
    9590:	ldr	x8, [x8]
    9594:	ldr	w10, [x8, #32]
    9598:	cbnz	w10, 95a4 <deflateCopy@@Base+0x10c0>
    959c:	stur	wzr, [x29, #-4]
    95a0:	b	9a18 <deflateCopy@@Base+0x1534>
    95a4:	b	9780 <deflateCopy@@Base+0x129c>
    95a8:	ldur	x8, [x29, #-16]
    95ac:	ldr	w9, [x8, #168]
    95b0:	cbz	w9, 9754 <deflateCopy@@Base+0x1270>
    95b4:	ldur	x8, [x29, #-16]
    95b8:	ldr	x8, [x8, #96]
    95bc:	ldur	x9, [x29, #-16]
    95c0:	ldr	w10, [x9, #172]
    95c4:	subs	w10, w10, #0x1
    95c8:	mov	w9, w10
    95cc:	ubfx	x9, x9, #0, #32
    95d0:	add	x8, x8, x9
    95d4:	ldrb	w10, [x8]
    95d8:	sturb	w10, [x29, #-37]
    95dc:	ldur	x8, [x29, #-16]
    95e0:	ldr	x8, [x8, #5904]
    95e4:	ldur	x9, [x29, #-16]
    95e8:	ldr	w10, [x9, #5900]
    95ec:	mov	w9, w10
    95f0:	mov	x11, #0x2                   	// #2
    95f4:	mul	x9, x11, x9
    95f8:	add	x8, x8, x9
    95fc:	mov	w10, #0x0                   	// #0
    9600:	strh	w10, [x8]
    9604:	ldurb	w10, [x29, #-37]
    9608:	ldur	x8, [x29, #-16]
    960c:	ldr	x8, [x8, #5888]
    9610:	ldur	x9, [x29, #-16]
    9614:	ldr	w12, [x9, #5900]
    9618:	mov	w11, w12
    961c:	mov	w12, w11
    9620:	add	w12, w12, #0x1
    9624:	str	w12, [x9, #5900]
    9628:	add	x8, x8, x11
    962c:	strb	w10, [x8]
    9630:	ldur	x8, [x29, #-16]
    9634:	add	x8, x8, #0xd4
    9638:	ldurb	w10, [x29, #-37]
    963c:	mov	w9, w10
    9640:	mov	x11, #0x4                   	// #4
    9644:	mul	x9, x11, x9
    9648:	add	x8, x8, x9
    964c:	ldrh	w10, [x8]
    9650:	add	w10, w10, #0x1
    9654:	strh	w10, [x8]
    9658:	ldur	x8, [x29, #-16]
    965c:	ldr	w10, [x8, #5900]
    9660:	ldur	x8, [x29, #-16]
    9664:	ldr	w12, [x8, #5896]
    9668:	subs	w12, w12, #0x1
    966c:	cmp	w10, w12
    9670:	cset	w10, eq  // eq = none
    9674:	and	w10, w10, #0x1
    9678:	stur	w10, [x29, #-28]
    967c:	ldur	w10, [x29, #-28]
    9680:	cbz	w10, 9718 <deflateCopy@@Base+0x1234>
    9684:	ldur	x0, [x29, #-16]
    9688:	ldur	x8, [x29, #-16]
    968c:	ldr	x8, [x8, #152]
    9690:	cmp	x8, #0x0
    9694:	cset	w9, lt  // lt = tstop
    9698:	str	x0, [sp, #48]
    969c:	tbnz	w9, #0, 96c0 <deflateCopy@@Base+0x11dc>
    96a0:	ldur	x8, [x29, #-16]
    96a4:	ldr	x8, [x8, #96]
    96a8:	ldur	x9, [x29, #-16]
    96ac:	ldr	x9, [x9, #152]
    96b0:	and	x9, x9, #0xffffffff
    96b4:	add	x8, x8, x9
    96b8:	str	x8, [sp, #40]
    96bc:	b	96c8 <deflateCopy@@Base+0x11e4>
    96c0:	mov	x8, xzr
    96c4:	str	x8, [sp, #40]
    96c8:	ldr	x8, [sp, #40]
    96cc:	ldur	x9, [x29, #-16]
    96d0:	ldr	w10, [x9, #172]
    96d4:	mov	w9, w10
    96d8:	ldur	x11, [x29, #-16]
    96dc:	ldr	x11, [x11, #152]
    96e0:	subs	x2, x9, x11
    96e4:	ldr	x0, [sp, #48]
    96e8:	mov	x1, x8
    96ec:	mov	w10, wzr
    96f0:	mov	w3, w10
    96f4:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    96f8:	ldur	x8, [x29, #-16]
    96fc:	ldr	w10, [x8, #172]
    9700:	mov	w8, w10
    9704:	ldur	x9, [x29, #-16]
    9708:	str	x8, [x9, #152]
    970c:	ldur	x8, [x29, #-16]
    9710:	ldr	x0, [x8]
    9714:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    9718:	ldur	x8, [x29, #-16]
    971c:	ldr	w9, [x8, #172]
    9720:	add	w9, w9, #0x1
    9724:	str	w9, [x8, #172]
    9728:	ldur	x8, [x29, #-16]
    972c:	ldr	w9, [x8, #180]
    9730:	subs	w9, w9, #0x1
    9734:	str	w9, [x8, #180]
    9738:	ldur	x8, [x29, #-16]
    973c:	ldr	x8, [x8]
    9740:	ldr	w9, [x8, #32]
    9744:	cbnz	w9, 9750 <deflateCopy@@Base+0x126c>
    9748:	stur	wzr, [x29, #-4]
    974c:	b	9a18 <deflateCopy@@Base+0x1534>
    9750:	b	9780 <deflateCopy@@Base+0x129c>
    9754:	ldur	x8, [x29, #-16]
    9758:	mov	w9, #0x1                   	// #1
    975c:	str	w9, [x8, #168]
    9760:	ldur	x8, [x29, #-16]
    9764:	ldr	w9, [x8, #172]
    9768:	add	w9, w9, #0x1
    976c:	str	w9, [x8, #172]
    9770:	ldur	x8, [x29, #-16]
    9774:	ldr	w9, [x8, #180]
    9778:	subs	w9, w9, #0x1
    977c:	str	w9, [x8, #180]
    9780:	b	900c <deflateCopy@@Base+0xb28>
    9784:	ldur	x8, [x29, #-16]
    9788:	ldr	w9, [x8, #168]
    978c:	cbz	w9, 9860 <deflateCopy@@Base+0x137c>
    9790:	ldur	x8, [x29, #-16]
    9794:	ldr	x8, [x8, #96]
    9798:	ldur	x9, [x29, #-16]
    979c:	ldr	w10, [x9, #172]
    97a0:	subs	w10, w10, #0x1
    97a4:	mov	w9, w10
    97a8:	ubfx	x9, x9, #0, #32
    97ac:	add	x8, x8, x9
    97b0:	ldrb	w10, [x8]
    97b4:	sturb	w10, [x29, #-38]
    97b8:	ldur	x8, [x29, #-16]
    97bc:	ldr	x8, [x8, #5904]
    97c0:	ldur	x9, [x29, #-16]
    97c4:	ldr	w10, [x9, #5900]
    97c8:	mov	w9, w10
    97cc:	mov	x11, #0x2                   	// #2
    97d0:	mul	x9, x11, x9
    97d4:	add	x8, x8, x9
    97d8:	mov	w10, #0x0                   	// #0
    97dc:	strh	w10, [x8]
    97e0:	ldurb	w10, [x29, #-38]
    97e4:	ldur	x8, [x29, #-16]
    97e8:	ldr	x8, [x8, #5888]
    97ec:	ldur	x9, [x29, #-16]
    97f0:	ldr	w12, [x9, #5900]
    97f4:	mov	w11, w12
    97f8:	mov	w12, w11
    97fc:	add	w12, w12, #0x1
    9800:	str	w12, [x9, #5900]
    9804:	add	x8, x8, x11
    9808:	strb	w10, [x8]
    980c:	ldur	x8, [x29, #-16]
    9810:	add	x8, x8, #0xd4
    9814:	ldurb	w10, [x29, #-38]
    9818:	mov	w9, w10
    981c:	mov	x11, #0x4                   	// #4
    9820:	mul	x9, x11, x9
    9824:	add	x8, x8, x9
    9828:	ldrh	w10, [x8]
    982c:	add	w10, w10, #0x1
    9830:	strh	w10, [x8]
    9834:	ldur	x8, [x29, #-16]
    9838:	ldr	w10, [x8, #5900]
    983c:	ldur	x8, [x29, #-16]
    9840:	ldr	w12, [x8, #5896]
    9844:	subs	w12, w12, #0x1
    9848:	cmp	w10, w12
    984c:	cset	w10, eq  // eq = none
    9850:	and	w10, w10, #0x1
    9854:	stur	w10, [x29, #-28]
    9858:	ldur	x8, [x29, #-16]
    985c:	str	wzr, [x8, #168]
    9860:	ldur	x8, [x29, #-16]
    9864:	ldr	w9, [x8, #172]
    9868:	cmp	w9, #0x2
    986c:	b.cs	9880 <deflateCopy@@Base+0x139c>  // b.hs, b.nlast
    9870:	ldur	x8, [x29, #-16]
    9874:	ldr	w9, [x8, #172]
    9878:	str	w9, [sp, #36]
    987c:	b	9888 <deflateCopy@@Base+0x13a4>
    9880:	mov	w8, #0x2                   	// #2
    9884:	str	w8, [sp, #36]
    9888:	ldr	w8, [sp, #36]
    988c:	ldur	x9, [x29, #-16]
    9890:	str	w8, [x9, #5932]
    9894:	ldur	w8, [x29, #-20]
    9898:	cmp	w8, #0x4
    989c:	b.ne	9958 <deflateCopy@@Base+0x1474>  // b.any
    98a0:	ldur	x0, [x29, #-16]
    98a4:	ldur	x8, [x29, #-16]
    98a8:	ldr	x8, [x8, #152]
    98ac:	cmp	x8, #0x0
    98b0:	cset	w9, lt  // lt = tstop
    98b4:	str	x0, [sp, #24]
    98b8:	tbnz	w9, #0, 98dc <deflateCopy@@Base+0x13f8>
    98bc:	ldur	x8, [x29, #-16]
    98c0:	ldr	x8, [x8, #96]
    98c4:	ldur	x9, [x29, #-16]
    98c8:	ldr	x9, [x9, #152]
    98cc:	and	x9, x9, #0xffffffff
    98d0:	add	x8, x8, x9
    98d4:	str	x8, [sp, #16]
    98d8:	b	98e4 <deflateCopy@@Base+0x1400>
    98dc:	mov	x8, xzr
    98e0:	str	x8, [sp, #16]
    98e4:	ldr	x8, [sp, #16]
    98e8:	ldur	x9, [x29, #-16]
    98ec:	ldr	w10, [x9, #172]
    98f0:	mov	w9, w10
    98f4:	ldur	x11, [x29, #-16]
    98f8:	ldr	x11, [x11, #152]
    98fc:	subs	x2, x9, x11
    9900:	ldr	x0, [sp, #24]
    9904:	mov	x1, x8
    9908:	mov	w3, #0x1                   	// #1
    990c:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    9910:	ldur	x8, [x29, #-16]
    9914:	ldr	w10, [x8, #172]
    9918:	mov	w8, w10
    991c:	ldur	x9, [x29, #-16]
    9920:	str	x8, [x9, #152]
    9924:	ldur	x8, [x29, #-16]
    9928:	ldr	x0, [x8]
    992c:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    9930:	ldur	x8, [x29, #-16]
    9934:	ldr	x8, [x8]
    9938:	ldr	w10, [x8, #32]
    993c:	cbnz	w10, 994c <deflateCopy@@Base+0x1468>
    9940:	mov	w8, #0x2                   	// #2
    9944:	stur	w8, [x29, #-4]
    9948:	b	9a18 <deflateCopy@@Base+0x1534>
    994c:	mov	w8, #0x3                   	// #3
    9950:	stur	w8, [x29, #-4]
    9954:	b	9a18 <deflateCopy@@Base+0x1534>
    9958:	ldur	x8, [x29, #-16]
    995c:	ldr	w9, [x8, #5900]
    9960:	cbz	w9, 9a10 <deflateCopy@@Base+0x152c>
    9964:	ldur	x0, [x29, #-16]
    9968:	ldur	x8, [x29, #-16]
    996c:	ldr	x8, [x8, #152]
    9970:	cmp	x8, #0x0
    9974:	cset	w9, lt  // lt = tstop
    9978:	str	x0, [sp, #8]
    997c:	tbnz	w9, #0, 99a0 <deflateCopy@@Base+0x14bc>
    9980:	ldur	x8, [x29, #-16]
    9984:	ldr	x8, [x8, #96]
    9988:	ldur	x9, [x29, #-16]
    998c:	ldr	x9, [x9, #152]
    9990:	and	x9, x9, #0xffffffff
    9994:	add	x8, x8, x9
    9998:	str	x8, [sp]
    999c:	b	99a8 <deflateCopy@@Base+0x14c4>
    99a0:	mov	x8, xzr
    99a4:	str	x8, [sp]
    99a8:	ldr	x8, [sp]
    99ac:	ldur	x9, [x29, #-16]
    99b0:	ldr	w10, [x9, #172]
    99b4:	mov	w9, w10
    99b8:	ldur	x11, [x29, #-16]
    99bc:	ldr	x11, [x11, #152]
    99c0:	subs	x2, x9, x11
    99c4:	ldr	x0, [sp, #8]
    99c8:	mov	x1, x8
    99cc:	mov	w10, wzr
    99d0:	mov	w3, w10
    99d4:	bl	11634 <inflateCodesUsed@@ZLIB_1.2.9+0x11d8>
    99d8:	ldur	x8, [x29, #-16]
    99dc:	ldr	w10, [x8, #172]
    99e0:	mov	w8, w10
    99e4:	ldur	x9, [x29, #-16]
    99e8:	str	x8, [x9, #152]
    99ec:	ldur	x8, [x29, #-16]
    99f0:	ldr	x0, [x8]
    99f4:	bl	6e9c <deflateBound@@ZLIB_1.2.0+0x21c>
    99f8:	ldur	x8, [x29, #-16]
    99fc:	ldr	x8, [x8]
    9a00:	ldr	w10, [x8, #32]
    9a04:	cbnz	w10, 9a10 <deflateCopy@@Base+0x152c>
    9a08:	stur	wzr, [x29, #-4]
    9a0c:	b	9a18 <deflateCopy@@Base+0x1534>
    9a10:	mov	w8, #0x1                   	// #1
    9a14:	stur	w8, [x29, #-4]
    9a18:	ldur	w0, [x29, #-4]
    9a1c:	ldp	x29, x30, [sp, #128]
    9a20:	add	sp, sp, #0x90
    9a24:	ret
    9a28:	sub	sp, sp, #0x60
    9a2c:	str	x0, [sp, #80]
    9a30:	str	w1, [sp, #76]
    9a34:	ldr	x8, [sp, #80]
    9a38:	ldr	w9, [x8, #188]
    9a3c:	str	w9, [sp, #72]
    9a40:	ldr	x8, [sp, #80]
    9a44:	ldr	x8, [x8, #96]
    9a48:	ldr	x10, [sp, #80]
    9a4c:	ldr	w9, [x10, #172]
    9a50:	mov	w10, w9
    9a54:	add	x8, x8, x10
    9a58:	str	x8, [sp, #64]
    9a5c:	ldr	x8, [sp, #80]
    9a60:	ldr	w9, [x8, #184]
    9a64:	str	w9, [sp, #48]
    9a68:	ldr	x8, [sp, #80]
    9a6c:	ldr	w9, [x8, #208]
    9a70:	str	w9, [sp, #44]
    9a74:	ldr	x8, [sp, #80]
    9a78:	ldr	w9, [x8, #172]
    9a7c:	ldr	x8, [sp, #80]
    9a80:	ldr	w11, [x8, #80]
    9a84:	subs	w11, w11, #0x106
    9a88:	cmp	w9, w11
    9a8c:	b.ls	9ab0 <deflateCopy@@Base+0x15cc>  // b.plast
    9a90:	ldr	x8, [sp, #80]
    9a94:	ldr	w9, [x8, #172]
    9a98:	ldr	x8, [sp, #80]
    9a9c:	ldr	w10, [x8, #80]
    9aa0:	subs	w10, w10, #0x106
    9aa4:	subs	w9, w9, w10
    9aa8:	str	w9, [sp, #8]
    9aac:	b	9ab8 <deflateCopy@@Base+0x15d4>
    9ab0:	mov	w8, wzr
    9ab4:	str	w8, [sp, #8]
    9ab8:	ldr	w8, [sp, #8]
    9abc:	str	w8, [sp, #40]
    9ac0:	ldr	x9, [sp, #80]
    9ac4:	ldr	x9, [x9, #112]
    9ac8:	str	x9, [sp, #32]
    9acc:	ldr	x9, [sp, #80]
    9ad0:	ldr	w8, [x9, #88]
    9ad4:	str	w8, [sp, #28]
    9ad8:	ldr	x9, [sp, #80]
    9adc:	ldr	x9, [x9, #96]
    9ae0:	ldr	x10, [sp, #80]
    9ae4:	ldr	w8, [x10, #172]
    9ae8:	mov	w10, w8
    9aec:	add	x9, x9, x10
    9af0:	add	x9, x9, #0x102
    9af4:	str	x9, [sp, #16]
    9af8:	ldr	x9, [sp, #64]
    9afc:	ldr	w8, [sp, #48]
    9b00:	subs	w8, w8, #0x1
    9b04:	mov	w0, w8
    9b08:	sxtw	x10, w0
    9b0c:	add	x9, x9, x10
    9b10:	ldrb	w8, [x9]
    9b14:	strb	w8, [sp, #15]
    9b18:	ldr	x9, [sp, #64]
    9b1c:	ldrsw	x10, [sp, #48]
    9b20:	add	x9, x9, x10
    9b24:	ldrb	w8, [x9]
    9b28:	strb	w8, [sp, #14]
    9b2c:	ldr	x9, [sp, #80]
    9b30:	ldr	w8, [x9, #184]
    9b34:	ldr	x9, [sp, #80]
    9b38:	ldr	w11, [x9, #204]
    9b3c:	cmp	w8, w11
    9b40:	b.cc	9b50 <deflateCopy@@Base+0x166c>  // b.lo, b.ul, b.last
    9b44:	ldr	w8, [sp, #72]
    9b48:	lsr	w8, w8, #2
    9b4c:	str	w8, [sp, #72]
    9b50:	ldr	w8, [sp, #44]
    9b54:	ldr	x9, [sp, #80]
    9b58:	ldr	w10, [x9, #180]
    9b5c:	cmp	w8, w10
    9b60:	b.ls	9b70 <deflateCopy@@Base+0x168c>  // b.plast
    9b64:	ldr	x8, [sp, #80]
    9b68:	ldr	w9, [x8, #180]
    9b6c:	str	w9, [sp, #44]
    9b70:	ldr	x8, [sp, #80]
    9b74:	ldr	x8, [x8, #96]
    9b78:	ldr	w9, [sp, #76]
    9b7c:	mov	w10, w9
    9b80:	add	x8, x8, x10
    9b84:	str	x8, [sp, #56]
    9b88:	ldr	x8, [sp, #56]
    9b8c:	ldrsw	x10, [sp, #48]
    9b90:	ldrb	w9, [x8, x10]
    9b94:	ldrb	w11, [sp, #14]
    9b98:	cmp	w9, w11
    9b9c:	b.ne	9bf4 <deflateCopy@@Base+0x1710>  // b.any
    9ba0:	ldr	x8, [sp, #56]
    9ba4:	ldr	w9, [sp, #48]
    9ba8:	subs	w9, w9, #0x1
    9bac:	ldrb	w9, [x8, w9, sxtw]
    9bb0:	ldrb	w10, [sp, #15]
    9bb4:	cmp	w9, w10
    9bb8:	b.ne	9bf4 <deflateCopy@@Base+0x1710>  // b.any
    9bbc:	ldr	x8, [sp, #56]
    9bc0:	ldrb	w9, [x8]
    9bc4:	ldr	x8, [sp, #64]
    9bc8:	ldrb	w10, [x8]
    9bcc:	cmp	w9, w10
    9bd0:	b.ne	9bf4 <deflateCopy@@Base+0x1710>  // b.any
    9bd4:	ldr	x8, [sp, #56]
    9bd8:	add	x9, x8, #0x1
    9bdc:	str	x9, [sp, #56]
    9be0:	ldrb	w10, [x8, #1]
    9be4:	ldr	x8, [sp, #64]
    9be8:	ldrb	w11, [x8, #1]
    9bec:	cmp	w10, w11
    9bf0:	b.eq	9bf8 <deflateCopy@@Base+0x1714>  // b.none
    9bf4:	b	9e40 <deflateCopy@@Base+0x195c>
    9bf8:	ldr	x8, [sp, #64]
    9bfc:	add	x8, x8, #0x2
    9c00:	str	x8, [sp, #64]
    9c04:	ldr	x8, [sp, #56]
    9c08:	add	x8, x8, #0x1
    9c0c:	str	x8, [sp, #56]
    9c10:	ldr	x8, [sp, #64]
    9c14:	add	x9, x8, #0x1
    9c18:	str	x9, [sp, #64]
    9c1c:	ldrb	w10, [x8, #1]
    9c20:	ldr	x8, [sp, #56]
    9c24:	add	x9, x8, #0x1
    9c28:	str	x9, [sp, #56]
    9c2c:	ldrb	w11, [x8, #1]
    9c30:	mov	w12, #0x0                   	// #0
    9c34:	cmp	w10, w11
    9c38:	str	w12, [sp, #4]
    9c3c:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9c40:	ldr	x8, [sp, #64]
    9c44:	add	x9, x8, #0x1
    9c48:	str	x9, [sp, #64]
    9c4c:	ldrb	w10, [x8, #1]
    9c50:	ldr	x8, [sp, #56]
    9c54:	add	x9, x8, #0x1
    9c58:	str	x9, [sp, #56]
    9c5c:	ldrb	w11, [x8, #1]
    9c60:	mov	w12, #0x0                   	// #0
    9c64:	cmp	w10, w11
    9c68:	str	w12, [sp, #4]
    9c6c:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9c70:	ldr	x8, [sp, #64]
    9c74:	add	x9, x8, #0x1
    9c78:	str	x9, [sp, #64]
    9c7c:	ldrb	w10, [x8, #1]
    9c80:	ldr	x8, [sp, #56]
    9c84:	add	x9, x8, #0x1
    9c88:	str	x9, [sp, #56]
    9c8c:	ldrb	w11, [x8, #1]
    9c90:	mov	w12, #0x0                   	// #0
    9c94:	cmp	w10, w11
    9c98:	str	w12, [sp, #4]
    9c9c:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9ca0:	ldr	x8, [sp, #64]
    9ca4:	add	x9, x8, #0x1
    9ca8:	str	x9, [sp, #64]
    9cac:	ldrb	w10, [x8, #1]
    9cb0:	ldr	x8, [sp, #56]
    9cb4:	add	x9, x8, #0x1
    9cb8:	str	x9, [sp, #56]
    9cbc:	ldrb	w11, [x8, #1]
    9cc0:	mov	w12, #0x0                   	// #0
    9cc4:	cmp	w10, w11
    9cc8:	str	w12, [sp, #4]
    9ccc:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9cd0:	ldr	x8, [sp, #64]
    9cd4:	add	x9, x8, #0x1
    9cd8:	str	x9, [sp, #64]
    9cdc:	ldrb	w10, [x8, #1]
    9ce0:	ldr	x8, [sp, #56]
    9ce4:	add	x9, x8, #0x1
    9ce8:	str	x9, [sp, #56]
    9cec:	ldrb	w11, [x8, #1]
    9cf0:	mov	w12, #0x0                   	// #0
    9cf4:	cmp	w10, w11
    9cf8:	str	w12, [sp, #4]
    9cfc:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9d00:	ldr	x8, [sp, #64]
    9d04:	add	x9, x8, #0x1
    9d08:	str	x9, [sp, #64]
    9d0c:	ldrb	w10, [x8, #1]
    9d10:	ldr	x8, [sp, #56]
    9d14:	add	x9, x8, #0x1
    9d18:	str	x9, [sp, #56]
    9d1c:	ldrb	w11, [x8, #1]
    9d20:	mov	w12, #0x0                   	// #0
    9d24:	cmp	w10, w11
    9d28:	str	w12, [sp, #4]
    9d2c:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9d30:	ldr	x8, [sp, #64]
    9d34:	add	x9, x8, #0x1
    9d38:	str	x9, [sp, #64]
    9d3c:	ldrb	w10, [x8, #1]
    9d40:	ldr	x8, [sp, #56]
    9d44:	add	x9, x8, #0x1
    9d48:	str	x9, [sp, #56]
    9d4c:	ldrb	w11, [x8, #1]
    9d50:	mov	w12, #0x0                   	// #0
    9d54:	cmp	w10, w11
    9d58:	str	w12, [sp, #4]
    9d5c:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9d60:	ldr	x8, [sp, #64]
    9d64:	add	x9, x8, #0x1
    9d68:	str	x9, [sp, #64]
    9d6c:	ldrb	w10, [x8, #1]
    9d70:	ldr	x8, [sp, #56]
    9d74:	add	x9, x8, #0x1
    9d78:	str	x9, [sp, #56]
    9d7c:	ldrb	w11, [x8, #1]
    9d80:	mov	w12, #0x0                   	// #0
    9d84:	cmp	w10, w11
    9d88:	str	w12, [sp, #4]
    9d8c:	b.ne	9da4 <deflateCopy@@Base+0x18c0>  // b.any
    9d90:	ldr	x8, [sp, #64]
    9d94:	ldr	x9, [sp, #16]
    9d98:	cmp	x8, x9
    9d9c:	cset	w10, cc  // cc = lo, ul, last
    9da0:	str	w10, [sp, #4]
    9da4:	ldr	w8, [sp, #4]
    9da8:	tbnz	w8, #0, 9c10 <deflateCopy@@Base+0x172c>
    9dac:	ldr	x8, [sp, #16]
    9db0:	ldr	x9, [sp, #64]
    9db4:	subs	x8, x8, x9
    9db8:	mov	w10, #0x102                 	// #258
    9dbc:	subs	w8, w10, w8
    9dc0:	str	w8, [sp, #52]
    9dc4:	ldr	x9, [sp, #16]
    9dc8:	mov	x11, #0xfffffffffffffefe    	// #-258
    9dcc:	add	x9, x9, x11
    9dd0:	str	x9, [sp, #64]
    9dd4:	ldr	w8, [sp, #52]
    9dd8:	ldr	w10, [sp, #48]
    9ddc:	cmp	w8, w10
    9de0:	b.le	9e40 <deflateCopy@@Base+0x195c>
    9de4:	ldr	w8, [sp, #76]
    9de8:	ldr	x9, [sp, #80]
    9dec:	str	w8, [x9, #176]
    9df0:	ldr	w8, [sp, #52]
    9df4:	str	w8, [sp, #48]
    9df8:	ldr	w8, [sp, #52]
    9dfc:	ldr	w10, [sp, #44]
    9e00:	cmp	w8, w10
    9e04:	b.lt	9e0c <deflateCopy@@Base+0x1928>  // b.tstop
    9e08:	b	9e8c <deflateCopy@@Base+0x19a8>
    9e0c:	ldr	x8, [sp, #64]
    9e10:	ldr	w9, [sp, #48]
    9e14:	subs	w9, w9, #0x1
    9e18:	mov	w0, w9
    9e1c:	sxtw	x10, w0
    9e20:	add	x8, x8, x10
    9e24:	ldrb	w9, [x8]
    9e28:	strb	w9, [sp, #15]
    9e2c:	ldr	x8, [sp, #64]
    9e30:	ldrsw	x10, [sp, #48]
    9e34:	add	x8, x8, x10
    9e38:	ldrb	w9, [x8]
    9e3c:	strb	w9, [sp, #14]
    9e40:	ldr	x8, [sp, #32]
    9e44:	ldr	w9, [sp, #76]
    9e48:	ldr	w10, [sp, #28]
    9e4c:	and	w9, w9, w10
    9e50:	ldrh	w9, [x8, w9, uxtw #1]
    9e54:	str	w9, [sp, #76]
    9e58:	ldr	w10, [sp, #40]
    9e5c:	mov	w11, #0x0                   	// #0
    9e60:	cmp	w9, w10
    9e64:	str	w11, [sp]
    9e68:	b.ls	9e84 <deflateCopy@@Base+0x19a0>  // b.plast
    9e6c:	ldr	w8, [sp, #72]
    9e70:	subs	w8, w8, #0x1
    9e74:	str	w8, [sp, #72]
    9e78:	cmp	w8, #0x0
    9e7c:	cset	w8, ne  // ne = any
    9e80:	str	w8, [sp]
    9e84:	ldr	w8, [sp]
    9e88:	tbnz	w8, #0, 9b70 <deflateCopy@@Base+0x168c>
    9e8c:	ldr	w8, [sp, #48]
    9e90:	ldr	x9, [sp, #80]
    9e94:	ldr	w10, [x9, #180]
    9e98:	cmp	w8, w10
    9e9c:	b.hi	9eac <deflateCopy@@Base+0x19c8>  // b.pmore
    9ea0:	ldr	w8, [sp, #48]
    9ea4:	str	w8, [sp, #92]
    9ea8:	b	9eb8 <deflateCopy@@Base+0x19d4>
    9eac:	ldr	x8, [sp, #80]
    9eb0:	ldr	w9, [x8, #180]
    9eb4:	str	w9, [sp, #92]
    9eb8:	ldr	w0, [sp, #92]
    9ebc:	add	sp, sp, #0x60
    9ec0:	ret
    9ec4:	sub	sp, sp, #0x30
    9ec8:	stp	x29, x30, [sp, #32]
    9ecc:	add	x29, sp, #0x20
    9ed0:	str	x0, [sp, #16]
    9ed4:	str	x1, [sp, #8]
    9ed8:	str	w2, [sp, #4]
    9edc:	ldr	x8, [sp, #16]
    9ee0:	ldr	w9, [x8, #8]
    9ee4:	str	w9, [sp]
    9ee8:	ldr	w9, [sp]
    9eec:	ldr	w10, [sp, #4]
    9ef0:	cmp	w9, w10
    9ef4:	b.ls	9f00 <deflateCopy@@Base+0x1a1c>  // b.plast
    9ef8:	ldr	w8, [sp, #4]
    9efc:	str	w8, [sp]
    9f00:	ldr	w8, [sp]
    9f04:	cbnz	w8, 9f10 <deflateCopy@@Base+0x1a2c>
    9f08:	stur	wzr, [x29, #-4]
    9f0c:	b	9fd8 <deflateCopy@@Base+0x1af4>
    9f10:	ldr	w8, [sp]
    9f14:	ldr	x9, [sp, #16]
    9f18:	ldr	w10, [x9, #8]
    9f1c:	subs	w8, w10, w8
    9f20:	str	w8, [x9, #8]
    9f24:	ldr	x0, [sp, #8]
    9f28:	ldr	x9, [sp, #16]
    9f2c:	ldr	x1, [x9]
    9f30:	ldr	w8, [sp]
    9f34:	mov	w2, w8
    9f38:	bl	23a0 <memcpy@plt>
    9f3c:	ldr	x9, [sp, #16]
    9f40:	ldr	x9, [x9, #56]
    9f44:	ldr	w8, [x9, #48]
    9f48:	cmp	w8, #0x1
    9f4c:	b.ne	9f70 <deflateCopy@@Base+0x1a8c>  // b.any
    9f50:	ldr	x8, [sp, #16]
    9f54:	ldr	x0, [x8, #96]
    9f58:	ldr	x1, [sp, #8]
    9f5c:	ldr	w2, [sp]
    9f60:	bl	2560 <adler32@plt>
    9f64:	ldr	x8, [sp, #16]
    9f68:	str	x0, [x8, #96]
    9f6c:	b	9fa0 <deflateCopy@@Base+0x1abc>
    9f70:	ldr	x8, [sp, #16]
    9f74:	ldr	x8, [x8, #56]
    9f78:	ldr	w9, [x8, #48]
    9f7c:	cmp	w9, #0x2
    9f80:	b.ne	9fa0 <deflateCopy@@Base+0x1abc>  // b.any
    9f84:	ldr	x8, [sp, #16]
    9f88:	ldr	x0, [x8, #96]
    9f8c:	ldr	x1, [sp, #8]
    9f90:	ldr	w2, [sp]
    9f94:	bl	2430 <crc32@plt>
    9f98:	ldr	x8, [sp, #16]
    9f9c:	str	x0, [x8, #96]
    9fa0:	ldr	w8, [sp]
    9fa4:	mov	w9, w8
    9fa8:	ldr	x10, [sp, #16]
    9fac:	ldr	x11, [x10]
    9fb0:	add	x9, x11, x9
    9fb4:	str	x9, [x10]
    9fb8:	ldr	w8, [sp]
    9fbc:	mov	w9, w8
    9fc0:	ldr	x10, [sp, #16]
    9fc4:	ldr	x11, [x10, #16]
    9fc8:	add	x9, x11, x9
    9fcc:	str	x9, [x10, #16]
    9fd0:	ldr	w8, [sp]
    9fd4:	stur	w8, [x29, #-4]
    9fd8:	ldur	w0, [x29, #-4]
    9fdc:	ldp	x29, x30, [sp, #32]
    9fe0:	add	sp, sp, #0x30
    9fe4:	ret

0000000000009fe8 <inflateBackInit_@@ZLIB_1.2.0>:
    9fe8:	sub	sp, sp, #0x50
    9fec:	stp	x29, x30, [sp, #64]
    9ff0:	add	x29, sp, #0x40
    9ff4:	stur	x0, [x29, #-16]
    9ff8:	stur	w1, [x29, #-20]
    9ffc:	str	x2, [sp, #32]
    a000:	str	x3, [sp, #24]
    a004:	str	w4, [sp, #20]
    a008:	ldr	x8, [sp, #24]
    a00c:	cbz	x8, a038 <inflateBackInit_@@ZLIB_1.2.0+0x50>
    a010:	ldr	x8, [sp, #24]
    a014:	ldrb	w9, [x8]
    a018:	adrp	x8, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a01c:	add	x8, x8, #0xf2a
    a020:	ldrb	w10, [x8]
    a024:	cmp	w9, w10
    a028:	b.ne	a038 <inflateBackInit_@@ZLIB_1.2.0+0x50>  // b.any
    a02c:	ldr	w8, [sp, #20]
    a030:	cmp	w8, #0x70
    a034:	b.eq	a044 <inflateBackInit_@@ZLIB_1.2.0+0x5c>  // b.none
    a038:	mov	w8, #0xfffffffa            	// #-6
    a03c:	stur	w8, [x29, #-4]
    a040:	b	a154 <inflateBackInit_@@ZLIB_1.2.0+0x16c>
    a044:	ldur	x8, [x29, #-16]
    a048:	cbz	x8, a06c <inflateBackInit_@@ZLIB_1.2.0+0x84>
    a04c:	ldr	x8, [sp, #32]
    a050:	cbz	x8, a06c <inflateBackInit_@@ZLIB_1.2.0+0x84>
    a054:	ldur	w8, [x29, #-20]
    a058:	cmp	w8, #0x8
    a05c:	b.lt	a06c <inflateBackInit_@@ZLIB_1.2.0+0x84>  // b.tstop
    a060:	ldur	w8, [x29, #-20]
    a064:	cmp	w8, #0xf
    a068:	b.le	a078 <inflateBackInit_@@ZLIB_1.2.0+0x90>
    a06c:	mov	w8, #0xfffffffe            	// #-2
    a070:	stur	w8, [x29, #-4]
    a074:	b	a154 <inflateBackInit_@@ZLIB_1.2.0+0x16c>
    a078:	ldur	x8, [x29, #-16]
    a07c:	mov	x9, xzr
    a080:	str	x9, [x8, #48]
    a084:	ldur	x8, [x29, #-16]
    a088:	ldr	x8, [x8, #64]
    a08c:	cbnz	x8, a0ac <inflateBackInit_@@ZLIB_1.2.0+0xc4>
    a090:	ldur	x8, [x29, #-16]
    a094:	adrp	x9, 14000 <inflateCodesUsed@@ZLIB_1.2.9+0x3ba4>
    a098:	add	x9, x9, #0x644
    a09c:	str	x9, [x8, #64]
    a0a0:	ldur	x8, [x29, #-16]
    a0a4:	mov	x9, xzr
    a0a8:	str	x9, [x8, #80]
    a0ac:	ldur	x8, [x29, #-16]
    a0b0:	ldr	x8, [x8, #72]
    a0b4:	cbnz	x8, a0c8 <inflateBackInit_@@ZLIB_1.2.0+0xe0>
    a0b8:	ldur	x8, [x29, #-16]
    a0bc:	adrp	x9, 14000 <inflateCodesUsed@@ZLIB_1.2.9+0x3ba4>
    a0c0:	add	x9, x9, #0x680
    a0c4:	str	x9, [x8, #72]
    a0c8:	ldur	x8, [x29, #-16]
    a0cc:	ldr	x8, [x8, #64]
    a0d0:	ldur	x9, [x29, #-16]
    a0d4:	ldr	x0, [x9, #80]
    a0d8:	mov	w1, #0x1                   	// #1
    a0dc:	mov	w2, #0x1bf8                	// #7160
    a0e0:	blr	x8
    a0e4:	str	x0, [sp, #8]
    a0e8:	ldr	x8, [sp, #8]
    a0ec:	cbnz	x8, a0fc <inflateBackInit_@@ZLIB_1.2.0+0x114>
    a0f0:	mov	w8, #0xfffffffc            	// #-4
    a0f4:	stur	w8, [x29, #-4]
    a0f8:	b	a154 <inflateBackInit_@@ZLIB_1.2.0+0x16c>
    a0fc:	ldr	x8, [sp, #8]
    a100:	ldur	x9, [x29, #-16]
    a104:	str	x8, [x9, #56]
    a108:	ldr	x8, [sp, #8]
    a10c:	mov	w10, #0x8000                	// #32768
    a110:	str	w10, [x8, #28]
    a114:	ldur	w10, [x29, #-20]
    a118:	ldr	x8, [sp, #8]
    a11c:	str	w10, [x8, #56]
    a120:	ldur	w10, [x29, #-20]
    a124:	mov	w11, #0x1                   	// #1
    a128:	lsl	w10, w11, w10
    a12c:	ldr	x8, [sp, #8]
    a130:	str	w10, [x8, #60]
    a134:	ldr	x8, [sp, #32]
    a138:	ldr	x9, [sp, #8]
    a13c:	str	x8, [x9, #72]
    a140:	ldr	x8, [sp, #8]
    a144:	str	wzr, [x8, #68]
    a148:	ldr	x8, [sp, #8]
    a14c:	str	wzr, [x8, #64]
    a150:	stur	wzr, [x29, #-4]
    a154:	ldur	w0, [x29, #-4]
    a158:	ldp	x29, x30, [sp, #64]
    a15c:	add	sp, sp, #0x50
    a160:	ret

000000000000a164 <inflateBack@@ZLIB_1.2.0>:
    a164:	sub	sp, sp, #0xb0
    a168:	stp	x29, x30, [sp, #160]
    a16c:	add	x29, sp, #0xa0
    a170:	stur	x0, [x29, #-16]
    a174:	stur	x1, [x29, #-24]
    a178:	stur	x2, [x29, #-32]
    a17c:	stur	x3, [x29, #-40]
    a180:	stur	x4, [x29, #-48]
    a184:	ldur	x8, [x29, #-16]
    a188:	cbz	x8, a198 <inflateBack@@ZLIB_1.2.0+0x34>
    a18c:	ldur	x8, [x29, #-16]
    a190:	ldr	x8, [x8, #56]
    a194:	cbnz	x8, a1a4 <inflateBack@@ZLIB_1.2.0+0x40>
    a198:	mov	w8, #0xfffffffe            	// #-2
    a19c:	stur	w8, [x29, #-4]
    a1a0:	b	ba74 <inflateBack@@ZLIB_1.2.0+0x1910>
    a1a4:	ldur	x8, [x29, #-16]
    a1a8:	ldr	x8, [x8, #56]
    a1ac:	stur	x8, [x29, #-56]
    a1b0:	ldur	x8, [x29, #-16]
    a1b4:	mov	x9, xzr
    a1b8:	str	x9, [x8, #48]
    a1bc:	ldur	x8, [x29, #-56]
    a1c0:	mov	w10, #0x3f3f                	// #16191
    a1c4:	str	w10, [x8, #8]
    a1c8:	ldur	x8, [x29, #-56]
    a1cc:	str	wzr, [x8, #12]
    a1d0:	ldur	x8, [x29, #-56]
    a1d4:	str	wzr, [x8, #64]
    a1d8:	ldur	x8, [x29, #-16]
    a1dc:	ldr	x8, [x8]
    a1e0:	stur	x8, [x29, #-64]
    a1e4:	ldur	x8, [x29, #-64]
    a1e8:	cbz	x8, a1fc <inflateBack@@ZLIB_1.2.0+0x98>
    a1ec:	ldur	x8, [x29, #-16]
    a1f0:	ldr	w9, [x8, #8]
    a1f4:	str	w9, [sp, #36]
    a1f8:	b	a204 <inflateBack@@ZLIB_1.2.0+0xa0>
    a1fc:	mov	w8, wzr
    a200:	str	w8, [sp, #36]
    a204:	ldr	w8, [sp, #36]
    a208:	stur	w8, [x29, #-76]
    a20c:	str	xzr, [sp, #72]
    a210:	str	wzr, [sp, #68]
    a214:	ldur	x9, [x29, #-56]
    a218:	ldr	x9, [x9, #72]
    a21c:	stur	x9, [x29, #-72]
    a220:	ldur	x9, [x29, #-56]
    a224:	ldr	w8, [x9, #60]
    a228:	str	w8, [sp, #80]
    a22c:	ldur	x8, [x29, #-56]
    a230:	ldr	w9, [x8, #8]
    a234:	mov	w10, #0x3f3f                	// #16191
    a238:	subs	w9, w9, w10
    a23c:	mov	w8, w9
    a240:	ubfx	x8, x8, #0, #32
    a244:	cmp	x8, #0x12
    a248:	str	x8, [sp, #24]
    a24c:	b.hi	ba44 <inflateBack@@ZLIB_1.2.0+0x18e0>  // b.pmore
    a250:	adrp	x8, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a254:	add	x8, x8, #0x628
    a258:	ldr	x11, [sp, #24]
    a25c:	ldrsw	x10, [x8, x11, lsl #2]
    a260:	add	x9, x8, x10
    a264:	br	x9
    a268:	ldur	x8, [x29, #-56]
    a26c:	ldr	w9, [x8, #12]
    a270:	cbz	w9, a2b0 <inflateBack@@ZLIB_1.2.0+0x14c>
    a274:	ldr	w8, [sp, #68]
    a278:	and	w8, w8, #0x7
    a27c:	ldr	x9, [sp, #72]
    a280:	mov	w10, w8
    a284:	lsr	x9, x9, x10
    a288:	str	x9, [sp, #72]
    a28c:	ldr	w8, [sp, #68]
    a290:	and	w8, w8, #0x7
    a294:	ldr	w11, [sp, #68]
    a298:	subs	w8, w11, w8
    a29c:	str	w8, [sp, #68]
    a2a0:	ldur	x8, [x29, #-56]
    a2a4:	mov	w9, #0x3f50                	// #16208
    a2a8:	str	w9, [x8, #8]
    a2ac:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    a2b0:	ldr	w8, [sp, #68]
    a2b4:	cmp	w8, #0x3
    a2b8:	b.cs	a33c <inflateBack@@ZLIB_1.2.0+0x1d8>  // b.hs, b.nlast
    a2bc:	ldur	w8, [x29, #-76]
    a2c0:	cbnz	w8, a2f4 <inflateBack@@ZLIB_1.2.0+0x190>
    a2c4:	ldur	x8, [x29, #-24]
    a2c8:	ldur	x0, [x29, #-32]
    a2cc:	sub	x1, x29, #0x40
    a2d0:	blr	x8
    a2d4:	stur	w0, [x29, #-76]
    a2d8:	ldur	w9, [x29, #-76]
    a2dc:	cbnz	w9, a2f4 <inflateBack@@ZLIB_1.2.0+0x190>
    a2e0:	mov	x8, xzr
    a2e4:	stur	x8, [x29, #-64]
    a2e8:	mov	w9, #0xfffffffb            	// #-5
    a2ec:	str	w9, [sp, #40]
    a2f0:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    a2f4:	ldur	w8, [x29, #-76]
    a2f8:	subs	w8, w8, #0x1
    a2fc:	stur	w8, [x29, #-76]
    a300:	ldur	x9, [x29, #-64]
    a304:	add	x10, x9, #0x1
    a308:	stur	x10, [x29, #-64]
    a30c:	ldrb	w8, [x9]
    a310:	mov	w9, w8
    a314:	ldr	w8, [sp, #68]
    a318:	mov	w10, w8
    a31c:	lsl	x9, x9, x10
    a320:	ldr	x10, [sp, #72]
    a324:	add	x9, x10, x9
    a328:	str	x9, [sp, #72]
    a32c:	ldr	w8, [sp, #68]
    a330:	add	w8, w8, #0x8
    a334:	str	w8, [sp, #68]
    a338:	b	a2b0 <inflateBack@@ZLIB_1.2.0+0x14c>
    a33c:	ldr	x8, [sp, #72]
    a340:	and	w8, w8, #0x1
    a344:	ldur	x9, [x29, #-56]
    a348:	str	w8, [x9, #12]
    a34c:	ldr	x8, [sp, #72]
    a350:	lsr	x8, x8, #1
    a354:	str	x8, [sp, #72]
    a358:	ldr	w9, [sp, #68]
    a35c:	subs	w9, w9, #0x1
    a360:	str	w9, [sp, #68]
    a364:	ldr	x8, [sp, #72]
    a368:	and	w8, w8, #0x3
    a36c:	subs	w8, w8, #0x0
    a370:	mov	w9, w8
    a374:	ubfx	x9, x9, #0, #32
    a378:	cmp	x9, #0x3
    a37c:	str	x9, [sp, #16]
    a380:	b.hi	a3f0 <inflateBack@@ZLIB_1.2.0+0x28c>  // b.pmore
    a384:	adrp	x8, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a388:	add	x8, x8, #0x674
    a38c:	ldr	x11, [sp, #16]
    a390:	ldrsw	x10, [x8, x11, lsl #2]
    a394:	add	x9, x8, x10
    a398:	br	x9
    a39c:	ldur	x8, [x29, #-56]
    a3a0:	mov	w9, #0x3f41                	// #16193
    a3a4:	str	w9, [x8, #8]
    a3a8:	b	a3f0 <inflateBack@@ZLIB_1.2.0+0x28c>
    a3ac:	ldur	x0, [x29, #-56]
    a3b0:	bl	ba84 <inflateBack@@ZLIB_1.2.0+0x1920>
    a3b4:	ldur	x8, [x29, #-56]
    a3b8:	mov	w9, #0x3f48                	// #16200
    a3bc:	str	w9, [x8, #8]
    a3c0:	b	a3f0 <inflateBack@@ZLIB_1.2.0+0x28c>
    a3c4:	ldur	x8, [x29, #-56]
    a3c8:	mov	w9, #0x3f44                	// #16196
    a3cc:	str	w9, [x8, #8]
    a3d0:	b	a3f0 <inflateBack@@ZLIB_1.2.0+0x28c>
    a3d4:	ldur	x8, [x29, #-16]
    a3d8:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a3dc:	add	x9, x9, #0xf31
    a3e0:	str	x9, [x8, #48]
    a3e4:	ldur	x8, [x29, #-56]
    a3e8:	mov	w10, #0x3f51                	// #16209
    a3ec:	str	w10, [x8, #8]
    a3f0:	ldr	x8, [sp, #72]
    a3f4:	lsr	x8, x8, #2
    a3f8:	str	x8, [sp, #72]
    a3fc:	ldr	w9, [sp, #68]
    a400:	subs	w9, w9, #0x2
    a404:	str	w9, [sp, #68]
    a408:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    a40c:	ldr	w8, [sp, #68]
    a410:	and	w8, w8, #0x7
    a414:	ldr	x9, [sp, #72]
    a418:	mov	w10, w8
    a41c:	lsr	x9, x9, x10
    a420:	str	x9, [sp, #72]
    a424:	ldr	w8, [sp, #68]
    a428:	and	w8, w8, #0x7
    a42c:	ldr	w11, [sp, #68]
    a430:	subs	w8, w11, w8
    a434:	str	w8, [sp, #68]
    a438:	ldr	w8, [sp, #68]
    a43c:	cmp	w8, #0x20
    a440:	b.cs	a4c4 <inflateBack@@ZLIB_1.2.0+0x360>  // b.hs, b.nlast
    a444:	ldur	w8, [x29, #-76]
    a448:	cbnz	w8, a47c <inflateBack@@ZLIB_1.2.0+0x318>
    a44c:	ldur	x8, [x29, #-24]
    a450:	ldur	x0, [x29, #-32]
    a454:	sub	x1, x29, #0x40
    a458:	blr	x8
    a45c:	stur	w0, [x29, #-76]
    a460:	ldur	w9, [x29, #-76]
    a464:	cbnz	w9, a47c <inflateBack@@ZLIB_1.2.0+0x318>
    a468:	mov	x8, xzr
    a46c:	stur	x8, [x29, #-64]
    a470:	mov	w9, #0xfffffffb            	// #-5
    a474:	str	w9, [sp, #40]
    a478:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    a47c:	ldur	w8, [x29, #-76]
    a480:	subs	w8, w8, #0x1
    a484:	stur	w8, [x29, #-76]
    a488:	ldur	x9, [x29, #-64]
    a48c:	add	x10, x9, #0x1
    a490:	stur	x10, [x29, #-64]
    a494:	ldrb	w8, [x9]
    a498:	mov	w9, w8
    a49c:	ldr	w8, [sp, #68]
    a4a0:	mov	w10, w8
    a4a4:	lsl	x9, x9, x10
    a4a8:	ldr	x10, [sp, #72]
    a4ac:	add	x9, x10, x9
    a4b0:	str	x9, [sp, #72]
    a4b4:	ldr	w8, [sp, #68]
    a4b8:	add	w8, w8, #0x8
    a4bc:	str	w8, [sp, #68]
    a4c0:	b	a438 <inflateBack@@ZLIB_1.2.0+0x2d4>
    a4c4:	ldr	x8, [sp, #72]
    a4c8:	and	x8, x8, #0xffff
    a4cc:	ldr	x9, [sp, #72]
    a4d0:	lsr	x9, x9, #16
    a4d4:	eor	x9, x9, #0xffff
    a4d8:	cmp	x8, x9
    a4dc:	b.eq	a500 <inflateBack@@ZLIB_1.2.0+0x39c>  // b.none
    a4e0:	ldur	x8, [x29, #-16]
    a4e4:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a4e8:	add	x9, x9, #0xf44
    a4ec:	str	x9, [x8, #48]
    a4f0:	ldur	x8, [x29, #-56]
    a4f4:	mov	w10, #0x3f51                	// #16209
    a4f8:	str	w10, [x8, #8]
    a4fc:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    a500:	ldr	x8, [sp, #72]
    a504:	and	w8, w8, #0xffff
    a508:	ldur	x9, [x29, #-56]
    a50c:	str	w8, [x9, #92]
    a510:	str	xzr, [sp, #72]
    a514:	str	wzr, [sp, #68]
    a518:	ldur	x8, [x29, #-56]
    a51c:	ldr	w9, [x8, #92]
    a520:	cbz	w9, a65c <inflateBack@@ZLIB_1.2.0+0x4f8>
    a524:	ldur	x8, [x29, #-56]
    a528:	ldr	w9, [x8, #92]
    a52c:	str	w9, [sp, #64]
    a530:	ldur	w8, [x29, #-76]
    a534:	cbnz	w8, a568 <inflateBack@@ZLIB_1.2.0+0x404>
    a538:	ldur	x8, [x29, #-24]
    a53c:	ldur	x0, [x29, #-32]
    a540:	sub	x1, x29, #0x40
    a544:	blr	x8
    a548:	stur	w0, [x29, #-76]
    a54c:	ldur	w9, [x29, #-76]
    a550:	cbnz	w9, a568 <inflateBack@@ZLIB_1.2.0+0x404>
    a554:	mov	x8, xzr
    a558:	stur	x8, [x29, #-64]
    a55c:	mov	w9, #0xfffffffb            	// #-5
    a560:	str	w9, [sp, #40]
    a564:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    a568:	ldr	w8, [sp, #80]
    a56c:	cbnz	w8, a5b8 <inflateBack@@ZLIB_1.2.0+0x454>
    a570:	ldur	x8, [x29, #-56]
    a574:	ldr	x8, [x8, #72]
    a578:	stur	x8, [x29, #-72]
    a57c:	ldur	x8, [x29, #-56]
    a580:	ldr	w9, [x8, #60]
    a584:	str	w9, [sp, #80]
    a588:	ldr	w9, [sp, #80]
    a58c:	ldur	x8, [x29, #-56]
    a590:	str	w9, [x8, #64]
    a594:	ldur	x8, [x29, #-40]
    a598:	ldur	x0, [x29, #-48]
    a59c:	ldur	x1, [x29, #-72]
    a5a0:	ldr	w2, [sp, #80]
    a5a4:	blr	x8
    a5a8:	cbz	w0, a5b8 <inflateBack@@ZLIB_1.2.0+0x454>
    a5ac:	mov	w8, #0xfffffffb            	// #-5
    a5b0:	str	w8, [sp, #40]
    a5b4:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    a5b8:	ldr	w8, [sp, #64]
    a5bc:	ldur	w9, [x29, #-76]
    a5c0:	cmp	w8, w9
    a5c4:	b.ls	a5d0 <inflateBack@@ZLIB_1.2.0+0x46c>  // b.plast
    a5c8:	ldur	w8, [x29, #-76]
    a5cc:	str	w8, [sp, #64]
    a5d0:	ldr	w8, [sp, #64]
    a5d4:	ldr	w9, [sp, #80]
    a5d8:	cmp	w8, w9
    a5dc:	b.ls	a5e8 <inflateBack@@ZLIB_1.2.0+0x484>  // b.plast
    a5e0:	ldr	w8, [sp, #80]
    a5e4:	str	w8, [sp, #64]
    a5e8:	ldur	x0, [x29, #-72]
    a5ec:	ldur	x1, [x29, #-64]
    a5f0:	ldr	w8, [sp, #64]
    a5f4:	mov	w2, w8
    a5f8:	bl	23a0 <memcpy@plt>
    a5fc:	ldr	w8, [sp, #64]
    a600:	ldur	w9, [x29, #-76]
    a604:	subs	w8, w9, w8
    a608:	stur	w8, [x29, #-76]
    a60c:	ldr	w8, [sp, #64]
    a610:	mov	w10, w8
    a614:	ldur	x11, [x29, #-64]
    a618:	add	x10, x11, x10
    a61c:	stur	x10, [x29, #-64]
    a620:	ldr	w8, [sp, #64]
    a624:	ldr	w9, [sp, #80]
    a628:	subs	w8, w9, w8
    a62c:	str	w8, [sp, #80]
    a630:	ldr	w8, [sp, #64]
    a634:	mov	w10, w8
    a638:	ldur	x11, [x29, #-72]
    a63c:	add	x10, x11, x10
    a640:	stur	x10, [x29, #-72]
    a644:	ldr	w8, [sp, #64]
    a648:	ldur	x10, [x29, #-56]
    a64c:	ldr	w9, [x10, #92]
    a650:	subs	w8, w9, w8
    a654:	str	w8, [x10, #92]
    a658:	b	a518 <inflateBack@@ZLIB_1.2.0+0x3b4>
    a65c:	ldur	x8, [x29, #-56]
    a660:	mov	w9, #0x3f3f                	// #16191
    a664:	str	w9, [x8, #8]
    a668:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    a66c:	ldr	w8, [sp, #68]
    a670:	cmp	w8, #0xe
    a674:	b.cs	a6f8 <inflateBack@@ZLIB_1.2.0+0x594>  // b.hs, b.nlast
    a678:	ldur	w8, [x29, #-76]
    a67c:	cbnz	w8, a6b0 <inflateBack@@ZLIB_1.2.0+0x54c>
    a680:	ldur	x8, [x29, #-24]
    a684:	ldur	x0, [x29, #-32]
    a688:	sub	x1, x29, #0x40
    a68c:	blr	x8
    a690:	stur	w0, [x29, #-76]
    a694:	ldur	w9, [x29, #-76]
    a698:	cbnz	w9, a6b0 <inflateBack@@ZLIB_1.2.0+0x54c>
    a69c:	mov	x8, xzr
    a6a0:	stur	x8, [x29, #-64]
    a6a4:	mov	w9, #0xfffffffb            	// #-5
    a6a8:	str	w9, [sp, #40]
    a6ac:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    a6b0:	ldur	w8, [x29, #-76]
    a6b4:	subs	w8, w8, #0x1
    a6b8:	stur	w8, [x29, #-76]
    a6bc:	ldur	x9, [x29, #-64]
    a6c0:	add	x10, x9, #0x1
    a6c4:	stur	x10, [x29, #-64]
    a6c8:	ldrb	w8, [x9]
    a6cc:	mov	w9, w8
    a6d0:	ldr	w8, [sp, #68]
    a6d4:	mov	w10, w8
    a6d8:	lsl	x9, x9, x10
    a6dc:	ldr	x10, [sp, #72]
    a6e0:	add	x9, x10, x9
    a6e4:	str	x9, [sp, #72]
    a6e8:	ldr	w8, [sp, #68]
    a6ec:	add	w8, w8, #0x8
    a6f0:	str	w8, [sp, #68]
    a6f4:	b	a66c <inflateBack@@ZLIB_1.2.0+0x508>
    a6f8:	ldr	x8, [sp, #72]
    a6fc:	and	w8, w8, #0x1f
    a700:	add	w8, w8, #0x101
    a704:	ldur	x9, [x29, #-56]
    a708:	str	w8, [x9, #132]
    a70c:	ldr	x8, [sp, #72]
    a710:	lsr	x8, x8, #5
    a714:	str	x8, [sp, #72]
    a718:	ldr	w9, [sp, #68]
    a71c:	subs	w9, w9, #0x5
    a720:	str	w9, [sp, #68]
    a724:	ldr	x8, [sp, #72]
    a728:	and	w8, w8, #0x1f
    a72c:	add	w8, w8, #0x1
    a730:	ldur	x9, [x29, #-56]
    a734:	str	w8, [x9, #136]
    a738:	ldr	x8, [sp, #72]
    a73c:	lsr	x8, x8, #5
    a740:	str	x8, [sp, #72]
    a744:	ldr	w9, [sp, #68]
    a748:	subs	w9, w9, #0x5
    a74c:	str	w9, [sp, #68]
    a750:	ldr	x8, [sp, #72]
    a754:	and	w8, w8, #0xf
    a758:	add	w8, w8, #0x4
    a75c:	ldur	x9, [x29, #-56]
    a760:	str	w8, [x9, #128]
    a764:	ldr	x8, [sp, #72]
    a768:	lsr	x8, x8, #4
    a76c:	str	x8, [sp, #72]
    a770:	ldr	w9, [sp, #68]
    a774:	subs	w9, w9, #0x4
    a778:	str	w9, [sp, #68]
    a77c:	ldur	x8, [x29, #-56]
    a780:	ldr	w9, [x8, #132]
    a784:	cmp	w9, #0x11e
    a788:	b.hi	a79c <inflateBack@@ZLIB_1.2.0+0x638>  // b.pmore
    a78c:	ldur	x8, [x29, #-56]
    a790:	ldr	w9, [x8, #136]
    a794:	cmp	w9, #0x1e
    a798:	b.ls	a7bc <inflateBack@@ZLIB_1.2.0+0x658>  // b.plast
    a79c:	ldur	x8, [x29, #-16]
    a7a0:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a7a4:	add	x9, x9, #0xf61
    a7a8:	str	x9, [x8, #48]
    a7ac:	ldur	x8, [x29, #-56]
    a7b0:	mov	w10, #0x3f51                	// #16209
    a7b4:	str	w10, [x8, #8]
    a7b8:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    a7bc:	ldur	x8, [x29, #-56]
    a7c0:	str	wzr, [x8, #140]
    a7c4:	ldur	x8, [x29, #-56]
    a7c8:	ldr	w9, [x8, #140]
    a7cc:	ldur	x8, [x29, #-56]
    a7d0:	ldr	w10, [x8, #128]
    a7d4:	cmp	w9, w10
    a7d8:	b.cs	a8cc <inflateBack@@ZLIB_1.2.0+0x768>  // b.hs, b.nlast
    a7dc:	ldr	w8, [sp, #68]
    a7e0:	cmp	w8, #0x3
    a7e4:	b.cs	a868 <inflateBack@@ZLIB_1.2.0+0x704>  // b.hs, b.nlast
    a7e8:	ldur	w8, [x29, #-76]
    a7ec:	cbnz	w8, a820 <inflateBack@@ZLIB_1.2.0+0x6bc>
    a7f0:	ldur	x8, [x29, #-24]
    a7f4:	ldur	x0, [x29, #-32]
    a7f8:	sub	x1, x29, #0x40
    a7fc:	blr	x8
    a800:	stur	w0, [x29, #-76]
    a804:	ldur	w9, [x29, #-76]
    a808:	cbnz	w9, a820 <inflateBack@@ZLIB_1.2.0+0x6bc>
    a80c:	mov	x8, xzr
    a810:	stur	x8, [x29, #-64]
    a814:	mov	w9, #0xfffffffb            	// #-5
    a818:	str	w9, [sp, #40]
    a81c:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    a820:	ldur	w8, [x29, #-76]
    a824:	subs	w8, w8, #0x1
    a828:	stur	w8, [x29, #-76]
    a82c:	ldur	x9, [x29, #-64]
    a830:	add	x10, x9, #0x1
    a834:	stur	x10, [x29, #-64]
    a838:	ldrb	w8, [x9]
    a83c:	mov	w9, w8
    a840:	ldr	w8, [sp, #68]
    a844:	mov	w10, w8
    a848:	lsl	x9, x9, x10
    a84c:	ldr	x10, [sp, #72]
    a850:	add	x9, x10, x9
    a854:	str	x9, [sp, #72]
    a858:	ldr	w8, [sp, #68]
    a85c:	add	w8, w8, #0x8
    a860:	str	w8, [sp, #68]
    a864:	b	a7dc <inflateBack@@ZLIB_1.2.0+0x678>
    a868:	ldr	x8, [sp, #72]
    a86c:	and	w8, w8, #0x7
    a870:	ldur	x9, [x29, #-56]
    a874:	add	x9, x9, #0x98
    a878:	ldur	x10, [x29, #-56]
    a87c:	ldr	w11, [x10, #140]
    a880:	mov	w12, w11
    a884:	mov	w11, w12
    a888:	add	w11, w11, #0x1
    a88c:	str	w11, [x10, #140]
    a890:	mov	x10, #0x2                   	// #2
    a894:	adrp	x13, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a898:	add	x13, x13, #0x684
    a89c:	ldrh	w11, [x13, x12, lsl #1]
    a8a0:	mov	w12, w11
    a8a4:	mul	x10, x10, x12
    a8a8:	add	x9, x9, x10
    a8ac:	strh	w8, [x9]
    a8b0:	ldr	x8, [sp, #72]
    a8b4:	lsr	x8, x8, #3
    a8b8:	str	x8, [sp, #72]
    a8bc:	ldr	w9, [sp, #68]
    a8c0:	subs	w9, w9, #0x3
    a8c4:	str	w9, [sp, #68]
    a8c8:	b	a7c4 <inflateBack@@ZLIB_1.2.0+0x660>
    a8cc:	ldur	x8, [x29, #-56]
    a8d0:	ldr	w9, [x8, #140]
    a8d4:	cmp	w9, #0x13
    a8d8:	b.cs	a924 <inflateBack@@ZLIB_1.2.0+0x7c0>  // b.hs, b.nlast
    a8dc:	ldur	x8, [x29, #-56]
    a8e0:	add	x8, x8, #0x98
    a8e4:	ldur	x9, [x29, #-56]
    a8e8:	ldr	w10, [x9, #140]
    a8ec:	mov	w11, w10
    a8f0:	mov	w10, w11
    a8f4:	add	w10, w10, #0x1
    a8f8:	str	w10, [x9, #140]
    a8fc:	mov	x9, #0x2                   	// #2
    a900:	adrp	x12, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a904:	add	x12, x12, #0x684
    a908:	ldrh	w10, [x12, x11, lsl #1]
    a90c:	mov	w11, w10
    a910:	mul	x9, x9, x11
    a914:	add	x8, x8, x9
    a918:	mov	w10, #0x0                   	// #0
    a91c:	strh	w10, [x8]
    a920:	b	a8cc <inflateBack@@ZLIB_1.2.0+0x768>
    a924:	ldur	x8, [x29, #-56]
    a928:	add	x8, x8, #0x558
    a92c:	ldur	x9, [x29, #-56]
    a930:	str	x8, [x9, #144]
    a934:	ldur	x8, [x29, #-56]
    a938:	ldr	x8, [x8, #144]
    a93c:	ldur	x9, [x29, #-56]
    a940:	str	x8, [x9, #104]
    a944:	ldur	x8, [x29, #-56]
    a948:	mov	w10, #0x7                   	// #7
    a94c:	str	w10, [x8, #120]
    a950:	ldur	x8, [x29, #-56]
    a954:	add	x1, x8, #0x98
    a958:	ldur	x8, [x29, #-56]
    a95c:	add	x3, x8, #0x90
    a960:	ldur	x8, [x29, #-56]
    a964:	add	x4, x8, #0x78
    a968:	ldur	x8, [x29, #-56]
    a96c:	add	x5, x8, #0x318
    a970:	mov	w10, wzr
    a974:	mov	w0, w10
    a978:	mov	w2, #0x13                  	// #19
    a97c:	bl	104c0 <inflateCodesUsed@@ZLIB_1.2.9+0x64>
    a980:	str	w0, [sp, #40]
    a984:	ldr	w10, [sp, #40]
    a988:	cbz	w10, a9ac <inflateBack@@ZLIB_1.2.0+0x848>
    a98c:	ldur	x8, [x29, #-16]
    a990:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    a994:	add	x9, x9, #0xf85
    a998:	str	x9, [x8, #48]
    a99c:	ldur	x8, [x29, #-56]
    a9a0:	mov	w10, #0x3f51                	// #16209
    a9a4:	str	w10, [x8, #8]
    a9a8:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    a9ac:	ldur	x8, [x29, #-56]
    a9b0:	str	wzr, [x8, #140]
    a9b4:	ldur	x8, [x29, #-56]
    a9b8:	ldr	w9, [x8, #140]
    a9bc:	ldur	x8, [x29, #-56]
    a9c0:	ldr	w10, [x8, #132]
    a9c4:	ldur	x8, [x29, #-56]
    a9c8:	ldr	w11, [x8, #136]
    a9cc:	add	w10, w10, w11
    a9d0:	cmp	w9, w10
    a9d4:	b.cs	aeac <inflateBack@@ZLIB_1.2.0+0xd48>  // b.hs, b.nlast
    a9d8:	ldur	x8, [x29, #-56]
    a9dc:	ldr	x8, [x8, #104]
    a9e0:	ldr	x9, [sp, #72]
    a9e4:	ldur	x10, [x29, #-56]
    a9e8:	ldr	w11, [x10, #120]
    a9ec:	mov	w12, #0x1                   	// #1
    a9f0:	lsl	w11, w12, w11
    a9f4:	subs	w11, w11, #0x1
    a9f8:	and	w9, w9, w11
    a9fc:	ldr	w9, [x8, w9, uxtw #2]
    aa00:	str	w9, [sp, #52]
    aa04:	ldrb	w9, [sp, #53]
    aa08:	ldr	w11, [sp, #68]
    aa0c:	cmp	w9, w11
    aa10:	b.hi	aa18 <inflateBack@@ZLIB_1.2.0+0x8b4>  // b.pmore
    aa14:	b	aa98 <inflateBack@@ZLIB_1.2.0+0x934>
    aa18:	ldur	w8, [x29, #-76]
    aa1c:	cbnz	w8, aa50 <inflateBack@@ZLIB_1.2.0+0x8ec>
    aa20:	ldur	x8, [x29, #-24]
    aa24:	ldur	x0, [x29, #-32]
    aa28:	sub	x1, x29, #0x40
    aa2c:	blr	x8
    aa30:	stur	w0, [x29, #-76]
    aa34:	ldur	w9, [x29, #-76]
    aa38:	cbnz	w9, aa50 <inflateBack@@ZLIB_1.2.0+0x8ec>
    aa3c:	mov	x8, xzr
    aa40:	stur	x8, [x29, #-64]
    aa44:	mov	w9, #0xfffffffb            	// #-5
    aa48:	str	w9, [sp, #40]
    aa4c:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    aa50:	ldur	w8, [x29, #-76]
    aa54:	subs	w8, w8, #0x1
    aa58:	stur	w8, [x29, #-76]
    aa5c:	ldur	x9, [x29, #-64]
    aa60:	add	x10, x9, #0x1
    aa64:	stur	x10, [x29, #-64]
    aa68:	ldrb	w8, [x9]
    aa6c:	mov	w9, w8
    aa70:	ldr	w8, [sp, #68]
    aa74:	mov	w10, w8
    aa78:	lsl	x9, x9, x10
    aa7c:	ldr	x10, [sp, #72]
    aa80:	add	x9, x10, x9
    aa84:	str	x9, [sp, #72]
    aa88:	ldr	w8, [sp, #68]
    aa8c:	add	w8, w8, #0x8
    aa90:	str	w8, [sp, #68]
    aa94:	b	a9d8 <inflateBack@@ZLIB_1.2.0+0x874>
    aa98:	ldrh	w8, [sp, #54]
    aa9c:	cmp	w8, #0x10
    aaa0:	b.ge	ab04 <inflateBack@@ZLIB_1.2.0+0x9a0>  // b.tcont
    aaa4:	ldrb	w8, [sp, #53]
    aaa8:	mov	w9, w8
    aaac:	ldr	x10, [sp, #72]
    aab0:	lsr	x9, x10, x9
    aab4:	str	x9, [sp, #72]
    aab8:	ldrb	w8, [sp, #53]
    aabc:	ldr	w11, [sp, #68]
    aac0:	subs	w8, w11, w8
    aac4:	str	w8, [sp, #68]
    aac8:	mov	x8, #0x2                   	// #2
    aacc:	add	x9, sp, #0x34
    aad0:	ldrh	w10, [x9, #2]
    aad4:	ldur	x9, [x29, #-56]
    aad8:	add	x9, x9, #0x98
    aadc:	ldur	x11, [x29, #-56]
    aae0:	ldr	w12, [x11, #140]
    aae4:	mov	w13, w12
    aae8:	mov	w12, w13
    aaec:	add	w12, w12, #0x1
    aaf0:	str	w12, [x11, #140]
    aaf4:	mul	x8, x8, x13
    aaf8:	add	x8, x9, x8
    aafc:	strh	w10, [x8]
    ab00:	b	aea8 <inflateBack@@ZLIB_1.2.0+0xd44>
    ab04:	ldrh	w8, [sp, #54]
    ab08:	cmp	w8, #0x10
    ab0c:	b.ne	ac3c <inflateBack@@ZLIB_1.2.0+0xad8>  // b.any
    ab10:	ldr	w8, [sp, #68]
    ab14:	ldrb	w9, [sp, #53]
    ab18:	add	w9, w9, #0x2
    ab1c:	cmp	w8, w9
    ab20:	b.cs	aba4 <inflateBack@@ZLIB_1.2.0+0xa40>  // b.hs, b.nlast
    ab24:	ldur	w8, [x29, #-76]
    ab28:	cbnz	w8, ab5c <inflateBack@@ZLIB_1.2.0+0x9f8>
    ab2c:	ldur	x8, [x29, #-24]
    ab30:	ldur	x0, [x29, #-32]
    ab34:	sub	x1, x29, #0x40
    ab38:	blr	x8
    ab3c:	stur	w0, [x29, #-76]
    ab40:	ldur	w9, [x29, #-76]
    ab44:	cbnz	w9, ab5c <inflateBack@@ZLIB_1.2.0+0x9f8>
    ab48:	mov	x8, xzr
    ab4c:	stur	x8, [x29, #-64]
    ab50:	mov	w9, #0xfffffffb            	// #-5
    ab54:	str	w9, [sp, #40]
    ab58:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    ab5c:	ldur	w8, [x29, #-76]
    ab60:	subs	w8, w8, #0x1
    ab64:	stur	w8, [x29, #-76]
    ab68:	ldur	x9, [x29, #-64]
    ab6c:	add	x10, x9, #0x1
    ab70:	stur	x10, [x29, #-64]
    ab74:	ldrb	w8, [x9]
    ab78:	mov	w9, w8
    ab7c:	ldr	w8, [sp, #68]
    ab80:	mov	w10, w8
    ab84:	lsl	x9, x9, x10
    ab88:	ldr	x10, [sp, #72]
    ab8c:	add	x9, x10, x9
    ab90:	str	x9, [sp, #72]
    ab94:	ldr	w8, [sp, #68]
    ab98:	add	w8, w8, #0x8
    ab9c:	str	w8, [sp, #68]
    aba0:	b	ab10 <inflateBack@@ZLIB_1.2.0+0x9ac>
    aba4:	ldrb	w8, [sp, #53]
    aba8:	mov	w9, w8
    abac:	ldr	x10, [sp, #72]
    abb0:	lsr	x9, x10, x9
    abb4:	str	x9, [sp, #72]
    abb8:	ldrb	w8, [sp, #53]
    abbc:	ldr	w11, [sp, #68]
    abc0:	subs	w8, w11, w8
    abc4:	str	w8, [sp, #68]
    abc8:	ldur	x8, [x29, #-56]
    abcc:	ldr	w9, [x8, #140]
    abd0:	cbnz	w9, abf4 <inflateBack@@ZLIB_1.2.0+0xa90>
    abd4:	ldur	x8, [x29, #-16]
    abd8:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    abdc:	add	x9, x9, #0xf9e
    abe0:	str	x9, [x8, #48]
    abe4:	ldur	x8, [x29, #-56]
    abe8:	mov	w10, #0x3f51                	// #16209
    abec:	str	w10, [x8, #8]
    abf0:	b	aeac <inflateBack@@ZLIB_1.2.0+0xd48>
    abf4:	ldur	x8, [x29, #-56]
    abf8:	add	x8, x8, #0x98
    abfc:	ldur	x9, [x29, #-56]
    ac00:	ldr	w10, [x9, #140]
    ac04:	subs	w10, w10, #0x1
    ac08:	ldrh	w10, [x8, w10, uxtw #1]
    ac0c:	str	w10, [sp, #44]
    ac10:	ldr	x8, [sp, #72]
    ac14:	and	w8, w8, #0x3
    ac18:	add	w8, w8, #0x3
    ac1c:	str	w8, [sp, #64]
    ac20:	ldr	x8, [sp, #72]
    ac24:	lsr	x8, x8, #2
    ac28:	str	x8, [sp, #72]
    ac2c:	ldr	w9, [sp, #68]
    ac30:	subs	w9, w9, #0x2
    ac34:	str	w9, [sp, #68]
    ac38:	b	ae14 <inflateBack@@ZLIB_1.2.0+0xcb0>
    ac3c:	ldrh	w8, [sp, #54]
    ac40:	cmp	w8, #0x11
    ac44:	b.ne	ad30 <inflateBack@@ZLIB_1.2.0+0xbcc>  // b.any
    ac48:	ldr	w8, [sp, #68]
    ac4c:	ldrb	w9, [sp, #53]
    ac50:	add	w9, w9, #0x3
    ac54:	cmp	w8, w9
    ac58:	b.cs	acdc <inflateBack@@ZLIB_1.2.0+0xb78>  // b.hs, b.nlast
    ac5c:	ldur	w8, [x29, #-76]
    ac60:	cbnz	w8, ac94 <inflateBack@@ZLIB_1.2.0+0xb30>
    ac64:	ldur	x8, [x29, #-24]
    ac68:	ldur	x0, [x29, #-32]
    ac6c:	sub	x1, x29, #0x40
    ac70:	blr	x8
    ac74:	stur	w0, [x29, #-76]
    ac78:	ldur	w9, [x29, #-76]
    ac7c:	cbnz	w9, ac94 <inflateBack@@ZLIB_1.2.0+0xb30>
    ac80:	mov	x8, xzr
    ac84:	stur	x8, [x29, #-64]
    ac88:	mov	w9, #0xfffffffb            	// #-5
    ac8c:	str	w9, [sp, #40]
    ac90:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    ac94:	ldur	w8, [x29, #-76]
    ac98:	subs	w8, w8, #0x1
    ac9c:	stur	w8, [x29, #-76]
    aca0:	ldur	x9, [x29, #-64]
    aca4:	add	x10, x9, #0x1
    aca8:	stur	x10, [x29, #-64]
    acac:	ldrb	w8, [x9]
    acb0:	mov	w9, w8
    acb4:	ldr	w8, [sp, #68]
    acb8:	mov	w10, w8
    acbc:	lsl	x9, x9, x10
    acc0:	ldr	x10, [sp, #72]
    acc4:	add	x9, x10, x9
    acc8:	str	x9, [sp, #72]
    accc:	ldr	w8, [sp, #68]
    acd0:	add	w8, w8, #0x8
    acd4:	str	w8, [sp, #68]
    acd8:	b	ac48 <inflateBack@@ZLIB_1.2.0+0xae4>
    acdc:	ldrb	w8, [sp, #53]
    ace0:	mov	w9, w8
    ace4:	ldr	x10, [sp, #72]
    ace8:	lsr	x9, x10, x9
    acec:	str	x9, [sp, #72]
    acf0:	ldrb	w8, [sp, #53]
    acf4:	ldr	w11, [sp, #68]
    acf8:	subs	w8, w11, w8
    acfc:	str	w8, [sp, #68]
    ad00:	str	wzr, [sp, #44]
    ad04:	ldr	x8, [sp, #72]
    ad08:	and	w8, w8, #0x7
    ad0c:	add	w8, w8, #0x3
    ad10:	str	w8, [sp, #64]
    ad14:	ldr	x8, [sp, #72]
    ad18:	lsr	x8, x8, #3
    ad1c:	str	x8, [sp, #72]
    ad20:	ldr	w9, [sp, #68]
    ad24:	subs	w9, w9, #0x3
    ad28:	str	w9, [sp, #68]
    ad2c:	b	ae14 <inflateBack@@ZLIB_1.2.0+0xcb0>
    ad30:	ldr	w8, [sp, #68]
    ad34:	ldrb	w9, [sp, #53]
    ad38:	add	w9, w9, #0x7
    ad3c:	cmp	w8, w9
    ad40:	b.cs	adc4 <inflateBack@@ZLIB_1.2.0+0xc60>  // b.hs, b.nlast
    ad44:	ldur	w8, [x29, #-76]
    ad48:	cbnz	w8, ad7c <inflateBack@@ZLIB_1.2.0+0xc18>
    ad4c:	ldur	x8, [x29, #-24]
    ad50:	ldur	x0, [x29, #-32]
    ad54:	sub	x1, x29, #0x40
    ad58:	blr	x8
    ad5c:	stur	w0, [x29, #-76]
    ad60:	ldur	w9, [x29, #-76]
    ad64:	cbnz	w9, ad7c <inflateBack@@ZLIB_1.2.0+0xc18>
    ad68:	mov	x8, xzr
    ad6c:	stur	x8, [x29, #-64]
    ad70:	mov	w9, #0xfffffffb            	// #-5
    ad74:	str	w9, [sp, #40]
    ad78:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    ad7c:	ldur	w8, [x29, #-76]
    ad80:	subs	w8, w8, #0x1
    ad84:	stur	w8, [x29, #-76]
    ad88:	ldur	x9, [x29, #-64]
    ad8c:	add	x10, x9, #0x1
    ad90:	stur	x10, [x29, #-64]
    ad94:	ldrb	w8, [x9]
    ad98:	mov	w9, w8
    ad9c:	ldr	w8, [sp, #68]
    ada0:	mov	w10, w8
    ada4:	lsl	x9, x9, x10
    ada8:	ldr	x10, [sp, #72]
    adac:	add	x9, x10, x9
    adb0:	str	x9, [sp, #72]
    adb4:	ldr	w8, [sp, #68]
    adb8:	add	w8, w8, #0x8
    adbc:	str	w8, [sp, #68]
    adc0:	b	ad30 <inflateBack@@ZLIB_1.2.0+0xbcc>
    adc4:	ldrb	w8, [sp, #53]
    adc8:	mov	w9, w8
    adcc:	ldr	x10, [sp, #72]
    add0:	lsr	x9, x10, x9
    add4:	str	x9, [sp, #72]
    add8:	ldrb	w8, [sp, #53]
    addc:	ldr	w11, [sp, #68]
    ade0:	subs	w8, w11, w8
    ade4:	str	w8, [sp, #68]
    ade8:	str	wzr, [sp, #44]
    adec:	ldr	x8, [sp, #72]
    adf0:	and	w8, w8, #0x7f
    adf4:	add	w8, w8, #0xb
    adf8:	str	w8, [sp, #64]
    adfc:	ldr	x8, [sp, #72]
    ae00:	lsr	x8, x8, #7
    ae04:	str	x8, [sp, #72]
    ae08:	ldr	w9, [sp, #68]
    ae0c:	subs	w9, w9, #0x7
    ae10:	str	w9, [sp, #68]
    ae14:	ldur	x8, [x29, #-56]
    ae18:	ldr	w9, [x8, #140]
    ae1c:	ldr	w10, [sp, #64]
    ae20:	add	w9, w9, w10
    ae24:	ldur	x8, [x29, #-56]
    ae28:	ldr	w10, [x8, #132]
    ae2c:	ldur	x8, [x29, #-56]
    ae30:	ldr	w11, [x8, #136]
    ae34:	add	w10, w10, w11
    ae38:	cmp	w9, w10
    ae3c:	b.ls	ae60 <inflateBack@@ZLIB_1.2.0+0xcfc>  // b.plast
    ae40:	ldur	x8, [x29, #-16]
    ae44:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    ae48:	add	x9, x9, #0xf9e
    ae4c:	str	x9, [x8, #48]
    ae50:	ldur	x8, [x29, #-56]
    ae54:	mov	w10, #0x3f51                	// #16209
    ae58:	str	w10, [x8, #8]
    ae5c:	b	aeac <inflateBack@@ZLIB_1.2.0+0xd48>
    ae60:	ldr	w8, [sp, #64]
    ae64:	subs	w9, w8, #0x1
    ae68:	str	w9, [sp, #64]
    ae6c:	cbz	w8, aea8 <inflateBack@@ZLIB_1.2.0+0xd44>
    ae70:	ldr	w8, [sp, #44]
    ae74:	ldur	x9, [x29, #-56]
    ae78:	add	x9, x9, #0x98
    ae7c:	ldur	x10, [x29, #-56]
    ae80:	ldr	w11, [x10, #140]
    ae84:	mov	w12, w11
    ae88:	mov	w11, w12
    ae8c:	add	w11, w11, #0x1
    ae90:	str	w11, [x10, #140]
    ae94:	mov	x10, #0x2                   	// #2
    ae98:	mul	x10, x10, x12
    ae9c:	add	x9, x9, x10
    aea0:	strh	w8, [x9]
    aea4:	b	ae60 <inflateBack@@ZLIB_1.2.0+0xcfc>
    aea8:	b	a9b4 <inflateBack@@ZLIB_1.2.0+0x850>
    aeac:	ldur	x8, [x29, #-56]
    aeb0:	ldr	w9, [x8, #8]
    aeb4:	mov	w10, #0x3f51                	// #16209
    aeb8:	cmp	w9, w10
    aebc:	b.ne	aec4 <inflateBack@@ZLIB_1.2.0+0xd60>  // b.any
    aec0:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    aec4:	ldur	x8, [x29, #-56]
    aec8:	ldrh	w9, [x8, #664]
    aecc:	cbnz	w9, aef0 <inflateBack@@ZLIB_1.2.0+0xd8c>
    aed0:	ldur	x8, [x29, #-16]
    aed4:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    aed8:	add	x9, x9, #0xfb8
    aedc:	str	x9, [x8, #48]
    aee0:	ldur	x8, [x29, #-56]
    aee4:	mov	w10, #0x3f51                	// #16209
    aee8:	str	w10, [x8, #8]
    aeec:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    aef0:	ldur	x8, [x29, #-56]
    aef4:	add	x8, x8, #0x558
    aef8:	ldur	x9, [x29, #-56]
    aefc:	str	x8, [x9, #144]
    af00:	ldur	x8, [x29, #-56]
    af04:	ldr	x8, [x8, #144]
    af08:	ldur	x9, [x29, #-56]
    af0c:	str	x8, [x9, #104]
    af10:	ldur	x8, [x29, #-56]
    af14:	mov	w10, #0x9                   	// #9
    af18:	str	w10, [x8, #120]
    af1c:	ldur	x8, [x29, #-56]
    af20:	add	x1, x8, #0x98
    af24:	ldur	x8, [x29, #-56]
    af28:	ldr	w2, [x8, #132]
    af2c:	ldur	x8, [x29, #-56]
    af30:	add	x3, x8, #0x90
    af34:	ldur	x8, [x29, #-56]
    af38:	add	x4, x8, #0x78
    af3c:	ldur	x8, [x29, #-56]
    af40:	add	x5, x8, #0x318
    af44:	mov	w0, #0x1                   	// #1
    af48:	bl	104c0 <inflateCodesUsed@@ZLIB_1.2.9+0x64>
    af4c:	str	w0, [sp, #40]
    af50:	ldr	w10, [sp, #40]
    af54:	cbz	w10, af78 <inflateBack@@ZLIB_1.2.0+0xe14>
    af58:	ldur	x8, [x29, #-16]
    af5c:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    af60:	add	x9, x9, #0xfdd
    af64:	str	x9, [x8, #48]
    af68:	ldur	x8, [x29, #-56]
    af6c:	mov	w10, #0x3f51                	// #16209
    af70:	str	w10, [x8, #8]
    af74:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    af78:	ldur	x8, [x29, #-56]
    af7c:	ldr	x8, [x8, #144]
    af80:	ldur	x9, [x29, #-56]
    af84:	str	x8, [x9, #112]
    af88:	ldur	x8, [x29, #-56]
    af8c:	mov	w10, #0x6                   	// #6
    af90:	str	w10, [x8, #124]
    af94:	ldur	x8, [x29, #-56]
    af98:	add	x8, x8, #0x98
    af9c:	ldur	x9, [x29, #-56]
    afa0:	ldr	w10, [x9, #132]
    afa4:	mov	w9, w10
    afa8:	mov	x11, #0x2                   	// #2
    afac:	mul	x9, x11, x9
    afb0:	add	x1, x8, x9
    afb4:	ldur	x8, [x29, #-56]
    afb8:	ldr	w2, [x8, #136]
    afbc:	ldur	x8, [x29, #-56]
    afc0:	add	x3, x8, #0x90
    afc4:	ldur	x8, [x29, #-56]
    afc8:	add	x4, x8, #0x7c
    afcc:	ldur	x8, [x29, #-56]
    afd0:	add	x5, x8, #0x318
    afd4:	mov	w0, #0x2                   	// #2
    afd8:	bl	104c0 <inflateCodesUsed@@ZLIB_1.2.9+0x64>
    afdc:	str	w0, [sp, #40]
    afe0:	ldr	w10, [sp, #40]
    afe4:	cbz	w10, b008 <inflateBack@@ZLIB_1.2.0+0xea4>
    afe8:	ldur	x8, [x29, #-16]
    afec:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    aff0:	add	x9, x9, #0xff9
    aff4:	str	x9, [x8, #48]
    aff8:	ldur	x8, [x29, #-56]
    affc:	mov	w10, #0x3f51                	// #16209
    b000:	str	w10, [x8, #8]
    b004:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b008:	ldur	x8, [x29, #-56]
    b00c:	mov	w9, #0x3f48                	// #16200
    b010:	str	w9, [x8, #8]
    b014:	ldur	w8, [x29, #-76]
    b018:	cmp	w8, #0x6
    b01c:	b.cc	b100 <inflateBack@@ZLIB_1.2.0+0xf9c>  // b.lo, b.ul, b.last
    b020:	ldr	w8, [sp, #80]
    b024:	cmp	w8, #0x102
    b028:	b.cc	b100 <inflateBack@@ZLIB_1.2.0+0xf9c>  // b.lo, b.ul, b.last
    b02c:	ldur	x8, [x29, #-72]
    b030:	ldur	x9, [x29, #-16]
    b034:	str	x8, [x9, #24]
    b038:	ldr	w10, [sp, #80]
    b03c:	ldur	x8, [x29, #-16]
    b040:	str	w10, [x8, #32]
    b044:	ldur	x8, [x29, #-64]
    b048:	ldur	x9, [x29, #-16]
    b04c:	str	x8, [x9]
    b050:	ldur	w10, [x29, #-76]
    b054:	ldur	x8, [x29, #-16]
    b058:	str	w10, [x8, #8]
    b05c:	ldr	x8, [sp, #72]
    b060:	ldur	x9, [x29, #-56]
    b064:	str	x8, [x9, #80]
    b068:	ldr	w10, [sp, #68]
    b06c:	ldur	x8, [x29, #-56]
    b070:	str	w10, [x8, #88]
    b074:	ldur	x8, [x29, #-56]
    b078:	ldr	w9, [x8, #64]
    b07c:	ldur	x8, [x29, #-56]
    b080:	ldr	w10, [x8, #60]
    b084:	cmp	w9, w10
    b088:	b.cs	b0a4 <inflateBack@@ZLIB_1.2.0+0xf40>  // b.hs, b.nlast
    b08c:	ldur	x8, [x29, #-56]
    b090:	ldr	w9, [x8, #60]
    b094:	ldr	w10, [sp, #80]
    b098:	subs	w9, w9, w10
    b09c:	ldur	x8, [x29, #-56]
    b0a0:	str	w9, [x8, #64]
    b0a4:	ldur	x0, [x29, #-16]
    b0a8:	ldur	x8, [x29, #-56]
    b0ac:	ldr	w1, [x8, #60]
    b0b0:	bl	bb44 <inflateBackEnd@@ZLIB_1.2.0+0x78>
    b0b4:	ldur	x8, [x29, #-16]
    b0b8:	ldr	x8, [x8, #24]
    b0bc:	stur	x8, [x29, #-72]
    b0c0:	ldur	x8, [x29, #-16]
    b0c4:	ldr	w9, [x8, #32]
    b0c8:	str	w9, [sp, #80]
    b0cc:	ldur	x8, [x29, #-16]
    b0d0:	ldr	x8, [x8]
    b0d4:	stur	x8, [x29, #-64]
    b0d8:	ldur	x8, [x29, #-16]
    b0dc:	ldr	w9, [x8, #8]
    b0e0:	stur	w9, [x29, #-76]
    b0e4:	ldur	x8, [x29, #-56]
    b0e8:	ldr	x8, [x8, #80]
    b0ec:	str	x8, [sp, #72]
    b0f0:	ldur	x8, [x29, #-56]
    b0f4:	ldr	w9, [x8, #88]
    b0f8:	str	w9, [sp, #68]
    b0fc:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b100:	ldur	x8, [x29, #-56]
    b104:	ldr	x8, [x8, #104]
    b108:	ldr	x9, [sp, #72]
    b10c:	ldur	x10, [x29, #-56]
    b110:	ldr	w11, [x10, #120]
    b114:	mov	w12, #0x1                   	// #1
    b118:	lsl	w11, w12, w11
    b11c:	subs	w11, w11, #0x1
    b120:	and	w9, w9, w11
    b124:	ldr	w9, [x8, w9, uxtw #2]
    b128:	str	w9, [sp, #52]
    b12c:	ldrb	w9, [sp, #53]
    b130:	ldr	w11, [sp, #68]
    b134:	cmp	w9, w11
    b138:	b.hi	b140 <inflateBack@@ZLIB_1.2.0+0xfdc>  // b.pmore
    b13c:	b	b1c0 <inflateBack@@ZLIB_1.2.0+0x105c>
    b140:	ldur	w8, [x29, #-76]
    b144:	cbnz	w8, b178 <inflateBack@@ZLIB_1.2.0+0x1014>
    b148:	ldur	x8, [x29, #-24]
    b14c:	ldur	x0, [x29, #-32]
    b150:	sub	x1, x29, #0x40
    b154:	blr	x8
    b158:	stur	w0, [x29, #-76]
    b15c:	ldur	w9, [x29, #-76]
    b160:	cbnz	w9, b178 <inflateBack@@ZLIB_1.2.0+0x1014>
    b164:	mov	x8, xzr
    b168:	stur	x8, [x29, #-64]
    b16c:	mov	w9, #0xfffffffb            	// #-5
    b170:	str	w9, [sp, #40]
    b174:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b178:	ldur	w8, [x29, #-76]
    b17c:	subs	w8, w8, #0x1
    b180:	stur	w8, [x29, #-76]
    b184:	ldur	x9, [x29, #-64]
    b188:	add	x10, x9, #0x1
    b18c:	stur	x10, [x29, #-64]
    b190:	ldrb	w8, [x9]
    b194:	mov	w9, w8
    b198:	ldr	w8, [sp, #68]
    b19c:	mov	w10, w8
    b1a0:	lsl	x9, x9, x10
    b1a4:	ldr	x10, [sp, #72]
    b1a8:	add	x9, x10, x9
    b1ac:	str	x9, [sp, #72]
    b1b0:	ldr	w8, [sp, #68]
    b1b4:	add	w8, w8, #0x8
    b1b8:	str	w8, [sp, #68]
    b1bc:	b	b100 <inflateBack@@ZLIB_1.2.0+0xf9c>
    b1c0:	ldrb	w8, [sp, #52]
    b1c4:	cbz	w8, b2dc <inflateBack@@ZLIB_1.2.0+0x1178>
    b1c8:	ldrb	w8, [sp, #52]
    b1cc:	and	w8, w8, #0xf0
    b1d0:	cbnz	w8, b2dc <inflateBack@@ZLIB_1.2.0+0x1178>
    b1d4:	ldr	w8, [sp, #52]
    b1d8:	str	w8, [sp, #48]
    b1dc:	ldur	x8, [x29, #-56]
    b1e0:	ldr	x8, [x8, #104]
    b1e4:	ldrh	w9, [sp, #50]
    b1e8:	ldr	x10, [sp, #72]
    b1ec:	ldrb	w11, [sp, #49]
    b1f0:	ldrb	w12, [sp, #48]
    b1f4:	add	w11, w11, w12
    b1f8:	mov	w12, #0x1                   	// #1
    b1fc:	lsl	w11, w12, w11
    b200:	subs	w11, w11, #0x1
    b204:	and	w10, w10, w11
    b208:	ldrb	w11, [sp, #49]
    b20c:	lsr	w10, w10, w11
    b210:	add	w9, w9, w10
    b214:	ldr	w9, [x8, w9, uxtw #2]
    b218:	str	w9, [sp, #52]
    b21c:	ldrb	w9, [sp, #49]
    b220:	ldrb	w10, [sp, #53]
    b224:	add	w9, w9, w10
    b228:	ldr	w10, [sp, #68]
    b22c:	cmp	w9, w10
    b230:	b.hi	b238 <inflateBack@@ZLIB_1.2.0+0x10d4>  // b.pmore
    b234:	b	b2b8 <inflateBack@@ZLIB_1.2.0+0x1154>
    b238:	ldur	w8, [x29, #-76]
    b23c:	cbnz	w8, b270 <inflateBack@@ZLIB_1.2.0+0x110c>
    b240:	ldur	x8, [x29, #-24]
    b244:	ldur	x0, [x29, #-32]
    b248:	sub	x1, x29, #0x40
    b24c:	blr	x8
    b250:	stur	w0, [x29, #-76]
    b254:	ldur	w9, [x29, #-76]
    b258:	cbnz	w9, b270 <inflateBack@@ZLIB_1.2.0+0x110c>
    b25c:	mov	x8, xzr
    b260:	stur	x8, [x29, #-64]
    b264:	mov	w9, #0xfffffffb            	// #-5
    b268:	str	w9, [sp, #40]
    b26c:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b270:	ldur	w8, [x29, #-76]
    b274:	subs	w8, w8, #0x1
    b278:	stur	w8, [x29, #-76]
    b27c:	ldur	x9, [x29, #-64]
    b280:	add	x10, x9, #0x1
    b284:	stur	x10, [x29, #-64]
    b288:	ldrb	w8, [x9]
    b28c:	mov	w9, w8
    b290:	ldr	w8, [sp, #68]
    b294:	mov	w10, w8
    b298:	lsl	x9, x9, x10
    b29c:	ldr	x10, [sp, #72]
    b2a0:	add	x9, x10, x9
    b2a4:	str	x9, [sp, #72]
    b2a8:	ldr	w8, [sp, #68]
    b2ac:	add	w8, w8, #0x8
    b2b0:	str	w8, [sp, #68]
    b2b4:	b	b1dc <inflateBack@@ZLIB_1.2.0+0x1078>
    b2b8:	ldrb	w8, [sp, #49]
    b2bc:	mov	w9, w8
    b2c0:	ldr	x10, [sp, #72]
    b2c4:	lsr	x9, x10, x9
    b2c8:	str	x9, [sp, #72]
    b2cc:	ldrb	w8, [sp, #49]
    b2d0:	ldr	w11, [sp, #68]
    b2d4:	subs	w8, w11, w8
    b2d8:	str	w8, [sp, #68]
    b2dc:	ldrb	w8, [sp, #53]
    b2e0:	mov	w9, w8
    b2e4:	ldr	x10, [sp, #72]
    b2e8:	lsr	x9, x10, x9
    b2ec:	str	x9, [sp, #72]
    b2f0:	ldrb	w8, [sp, #53]
    b2f4:	ldr	w11, [sp, #68]
    b2f8:	subs	w8, w11, w8
    b2fc:	str	w8, [sp, #68]
    b300:	ldrh	w8, [sp, #54]
    b304:	ldur	x9, [x29, #-56]
    b308:	str	w8, [x9, #92]
    b30c:	ldrb	w8, [sp, #52]
    b310:	cbnz	w8, b398 <inflateBack@@ZLIB_1.2.0+0x1234>
    b314:	ldr	w8, [sp, #80]
    b318:	cbnz	w8, b364 <inflateBack@@ZLIB_1.2.0+0x1200>
    b31c:	ldur	x8, [x29, #-56]
    b320:	ldr	x8, [x8, #72]
    b324:	stur	x8, [x29, #-72]
    b328:	ldur	x8, [x29, #-56]
    b32c:	ldr	w9, [x8, #60]
    b330:	str	w9, [sp, #80]
    b334:	ldr	w9, [sp, #80]
    b338:	ldur	x8, [x29, #-56]
    b33c:	str	w9, [x8, #64]
    b340:	ldur	x8, [x29, #-40]
    b344:	ldur	x0, [x29, #-48]
    b348:	ldur	x1, [x29, #-72]
    b34c:	ldr	w2, [sp, #80]
    b350:	blr	x8
    b354:	cbz	w0, b364 <inflateBack@@ZLIB_1.2.0+0x1200>
    b358:	mov	w8, #0xfffffffb            	// #-5
    b35c:	str	w8, [sp, #40]
    b360:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b364:	ldur	x8, [x29, #-56]
    b368:	ldr	w9, [x8, #92]
    b36c:	ldur	x8, [x29, #-72]
    b370:	add	x10, x8, #0x1
    b374:	stur	x10, [x29, #-72]
    b378:	strb	w9, [x8]
    b37c:	ldr	w9, [sp, #80]
    b380:	subs	w9, w9, #0x1
    b384:	str	w9, [sp, #80]
    b388:	ldur	x8, [x29, #-56]
    b38c:	mov	w9, #0x3f48                	// #16200
    b390:	str	w9, [x8, #8]
    b394:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b398:	ldrb	w8, [sp, #52]
    b39c:	and	w8, w8, #0x20
    b3a0:	cbz	w8, b3b4 <inflateBack@@ZLIB_1.2.0+0x1250>
    b3a4:	ldur	x8, [x29, #-56]
    b3a8:	mov	w9, #0x3f3f                	// #16191
    b3ac:	str	w9, [x8, #8]
    b3b0:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b3b4:	ldrb	w8, [sp, #52]
    b3b8:	and	w8, w8, #0x40
    b3bc:	cbz	w8, b3e0 <inflateBack@@ZLIB_1.2.0+0x127c>
    b3c0:	ldur	x8, [x29, #-16]
    b3c4:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    b3c8:	add	x9, x9, #0xf
    b3cc:	str	x9, [x8, #48]
    b3d0:	ldur	x8, [x29, #-56]
    b3d4:	mov	w10, #0x3f51                	// #16209
    b3d8:	str	w10, [x8, #8]
    b3dc:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b3e0:	ldrb	w8, [sp, #52]
    b3e4:	and	w8, w8, #0xf
    b3e8:	ldur	x9, [x29, #-56]
    b3ec:	str	w8, [x9, #100]
    b3f0:	ldur	x9, [x29, #-56]
    b3f4:	ldr	w8, [x9, #100]
    b3f8:	cbz	w8, b4e8 <inflateBack@@ZLIB_1.2.0+0x1384>
    b3fc:	ldr	w8, [sp, #68]
    b400:	ldur	x9, [x29, #-56]
    b404:	ldr	w10, [x9, #100]
    b408:	cmp	w8, w10
    b40c:	b.cs	b490 <inflateBack@@ZLIB_1.2.0+0x132c>  // b.hs, b.nlast
    b410:	ldur	w8, [x29, #-76]
    b414:	cbnz	w8, b448 <inflateBack@@ZLIB_1.2.0+0x12e4>
    b418:	ldur	x8, [x29, #-24]
    b41c:	ldur	x0, [x29, #-32]
    b420:	sub	x1, x29, #0x40
    b424:	blr	x8
    b428:	stur	w0, [x29, #-76]
    b42c:	ldur	w9, [x29, #-76]
    b430:	cbnz	w9, b448 <inflateBack@@ZLIB_1.2.0+0x12e4>
    b434:	mov	x8, xzr
    b438:	stur	x8, [x29, #-64]
    b43c:	mov	w9, #0xfffffffb            	// #-5
    b440:	str	w9, [sp, #40]
    b444:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b448:	ldur	w8, [x29, #-76]
    b44c:	subs	w8, w8, #0x1
    b450:	stur	w8, [x29, #-76]
    b454:	ldur	x9, [x29, #-64]
    b458:	add	x10, x9, #0x1
    b45c:	stur	x10, [x29, #-64]
    b460:	ldrb	w8, [x9]
    b464:	mov	w9, w8
    b468:	ldr	w8, [sp, #68]
    b46c:	mov	w10, w8
    b470:	lsl	x9, x9, x10
    b474:	ldr	x10, [sp, #72]
    b478:	add	x9, x10, x9
    b47c:	str	x9, [sp, #72]
    b480:	ldr	w8, [sp, #68]
    b484:	add	w8, w8, #0x8
    b488:	str	w8, [sp, #68]
    b48c:	b	b3fc <inflateBack@@ZLIB_1.2.0+0x1298>
    b490:	ldr	x8, [sp, #72]
    b494:	ldur	x9, [x29, #-56]
    b498:	ldr	w10, [x9, #100]
    b49c:	mov	w11, #0x1                   	// #1
    b4a0:	lsl	w10, w11, w10
    b4a4:	subs	w10, w10, #0x1
    b4a8:	and	w8, w8, w10
    b4ac:	ldur	x9, [x29, #-56]
    b4b0:	ldr	w10, [x9, #92]
    b4b4:	add	w8, w10, w8
    b4b8:	str	w8, [x9, #92]
    b4bc:	ldur	x8, [x29, #-56]
    b4c0:	ldr	w9, [x8, #100]
    b4c4:	mov	w8, w9
    b4c8:	ldr	x10, [sp, #72]
    b4cc:	lsr	x8, x10, x8
    b4d0:	str	x8, [sp, #72]
    b4d4:	ldur	x8, [x29, #-56]
    b4d8:	ldr	w9, [x8, #100]
    b4dc:	ldr	w11, [sp, #68]
    b4e0:	subs	w9, w11, w9
    b4e4:	str	w9, [sp, #68]
    b4e8:	ldur	x8, [x29, #-56]
    b4ec:	ldr	x8, [x8, #112]
    b4f0:	ldr	x9, [sp, #72]
    b4f4:	ldur	x10, [x29, #-56]
    b4f8:	ldr	w11, [x10, #124]
    b4fc:	mov	w12, #0x1                   	// #1
    b500:	lsl	w11, w12, w11
    b504:	subs	w11, w11, #0x1
    b508:	and	w9, w9, w11
    b50c:	ldr	w9, [x8, w9, uxtw #2]
    b510:	str	w9, [sp, #52]
    b514:	ldrb	w9, [sp, #53]
    b518:	ldr	w11, [sp, #68]
    b51c:	cmp	w9, w11
    b520:	b.hi	b528 <inflateBack@@ZLIB_1.2.0+0x13c4>  // b.pmore
    b524:	b	b5a8 <inflateBack@@ZLIB_1.2.0+0x1444>
    b528:	ldur	w8, [x29, #-76]
    b52c:	cbnz	w8, b560 <inflateBack@@ZLIB_1.2.0+0x13fc>
    b530:	ldur	x8, [x29, #-24]
    b534:	ldur	x0, [x29, #-32]
    b538:	sub	x1, x29, #0x40
    b53c:	blr	x8
    b540:	stur	w0, [x29, #-76]
    b544:	ldur	w9, [x29, #-76]
    b548:	cbnz	w9, b560 <inflateBack@@ZLIB_1.2.0+0x13fc>
    b54c:	mov	x8, xzr
    b550:	stur	x8, [x29, #-64]
    b554:	mov	w9, #0xfffffffb            	// #-5
    b558:	str	w9, [sp, #40]
    b55c:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b560:	ldur	w8, [x29, #-76]
    b564:	subs	w8, w8, #0x1
    b568:	stur	w8, [x29, #-76]
    b56c:	ldur	x9, [x29, #-64]
    b570:	add	x10, x9, #0x1
    b574:	stur	x10, [x29, #-64]
    b578:	ldrb	w8, [x9]
    b57c:	mov	w9, w8
    b580:	ldr	w8, [sp, #68]
    b584:	mov	w10, w8
    b588:	lsl	x9, x9, x10
    b58c:	ldr	x10, [sp, #72]
    b590:	add	x9, x10, x9
    b594:	str	x9, [sp, #72]
    b598:	ldr	w8, [sp, #68]
    b59c:	add	w8, w8, #0x8
    b5a0:	str	w8, [sp, #68]
    b5a4:	b	b4e8 <inflateBack@@ZLIB_1.2.0+0x1384>
    b5a8:	ldrb	w8, [sp, #52]
    b5ac:	and	w8, w8, #0xf0
    b5b0:	cbnz	w8, b6bc <inflateBack@@ZLIB_1.2.0+0x1558>
    b5b4:	ldr	w8, [sp, #52]
    b5b8:	str	w8, [sp, #48]
    b5bc:	ldur	x8, [x29, #-56]
    b5c0:	ldr	x8, [x8, #112]
    b5c4:	ldrh	w9, [sp, #50]
    b5c8:	ldr	x10, [sp, #72]
    b5cc:	ldrb	w11, [sp, #49]
    b5d0:	ldrb	w12, [sp, #48]
    b5d4:	add	w11, w11, w12
    b5d8:	mov	w12, #0x1                   	// #1
    b5dc:	lsl	w11, w12, w11
    b5e0:	subs	w11, w11, #0x1
    b5e4:	and	w10, w10, w11
    b5e8:	ldrb	w11, [sp, #49]
    b5ec:	lsr	w10, w10, w11
    b5f0:	add	w9, w9, w10
    b5f4:	ldr	w9, [x8, w9, uxtw #2]
    b5f8:	str	w9, [sp, #52]
    b5fc:	ldrb	w9, [sp, #49]
    b600:	ldrb	w10, [sp, #53]
    b604:	add	w9, w9, w10
    b608:	ldr	w10, [sp, #68]
    b60c:	cmp	w9, w10
    b610:	b.hi	b618 <inflateBack@@ZLIB_1.2.0+0x14b4>  // b.pmore
    b614:	b	b698 <inflateBack@@ZLIB_1.2.0+0x1534>
    b618:	ldur	w8, [x29, #-76]
    b61c:	cbnz	w8, b650 <inflateBack@@ZLIB_1.2.0+0x14ec>
    b620:	ldur	x8, [x29, #-24]
    b624:	ldur	x0, [x29, #-32]
    b628:	sub	x1, x29, #0x40
    b62c:	blr	x8
    b630:	stur	w0, [x29, #-76]
    b634:	ldur	w9, [x29, #-76]
    b638:	cbnz	w9, b650 <inflateBack@@ZLIB_1.2.0+0x14ec>
    b63c:	mov	x8, xzr
    b640:	stur	x8, [x29, #-64]
    b644:	mov	w9, #0xfffffffb            	// #-5
    b648:	str	w9, [sp, #40]
    b64c:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b650:	ldur	w8, [x29, #-76]
    b654:	subs	w8, w8, #0x1
    b658:	stur	w8, [x29, #-76]
    b65c:	ldur	x9, [x29, #-64]
    b660:	add	x10, x9, #0x1
    b664:	stur	x10, [x29, #-64]
    b668:	ldrb	w8, [x9]
    b66c:	mov	w9, w8
    b670:	ldr	w8, [sp, #68]
    b674:	mov	w10, w8
    b678:	lsl	x9, x9, x10
    b67c:	ldr	x10, [sp, #72]
    b680:	add	x9, x10, x9
    b684:	str	x9, [sp, #72]
    b688:	ldr	w8, [sp, #68]
    b68c:	add	w8, w8, #0x8
    b690:	str	w8, [sp, #68]
    b694:	b	b5bc <inflateBack@@ZLIB_1.2.0+0x1458>
    b698:	ldrb	w8, [sp, #49]
    b69c:	mov	w9, w8
    b6a0:	ldr	x10, [sp, #72]
    b6a4:	lsr	x9, x10, x9
    b6a8:	str	x9, [sp, #72]
    b6ac:	ldrb	w8, [sp, #49]
    b6b0:	ldr	w11, [sp, #68]
    b6b4:	subs	w8, w11, w8
    b6b8:	str	w8, [sp, #68]
    b6bc:	ldrb	w8, [sp, #53]
    b6c0:	mov	w9, w8
    b6c4:	ldr	x10, [sp, #72]
    b6c8:	lsr	x9, x10, x9
    b6cc:	str	x9, [sp, #72]
    b6d0:	ldrb	w8, [sp, #53]
    b6d4:	ldr	w11, [sp, #68]
    b6d8:	subs	w8, w11, w8
    b6dc:	str	w8, [sp, #68]
    b6e0:	ldrb	w8, [sp, #52]
    b6e4:	and	w8, w8, #0x40
    b6e8:	cbz	w8, b70c <inflateBack@@ZLIB_1.2.0+0x15a8>
    b6ec:	ldur	x8, [x29, #-16]
    b6f0:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    b6f4:	add	x9, x9, #0x2b
    b6f8:	str	x9, [x8, #48]
    b6fc:	ldur	x8, [x29, #-56]
    b700:	mov	w10, #0x3f51                	// #16209
    b704:	str	w10, [x8, #8]
    b708:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b70c:	ldrh	w8, [sp, #54]
    b710:	ldur	x9, [x29, #-56]
    b714:	str	w8, [x9, #96]
    b718:	ldrb	w8, [sp, #52]
    b71c:	and	w8, w8, #0xf
    b720:	ldur	x9, [x29, #-56]
    b724:	str	w8, [x9, #100]
    b728:	ldur	x9, [x29, #-56]
    b72c:	ldr	w8, [x9, #100]
    b730:	cbz	w8, b820 <inflateBack@@ZLIB_1.2.0+0x16bc>
    b734:	ldr	w8, [sp, #68]
    b738:	ldur	x9, [x29, #-56]
    b73c:	ldr	w10, [x9, #100]
    b740:	cmp	w8, w10
    b744:	b.cs	b7c8 <inflateBack@@ZLIB_1.2.0+0x1664>  // b.hs, b.nlast
    b748:	ldur	w8, [x29, #-76]
    b74c:	cbnz	w8, b780 <inflateBack@@ZLIB_1.2.0+0x161c>
    b750:	ldur	x8, [x29, #-24]
    b754:	ldur	x0, [x29, #-32]
    b758:	sub	x1, x29, #0x40
    b75c:	blr	x8
    b760:	stur	w0, [x29, #-76]
    b764:	ldur	w9, [x29, #-76]
    b768:	cbnz	w9, b780 <inflateBack@@ZLIB_1.2.0+0x161c>
    b76c:	mov	x8, xzr
    b770:	stur	x8, [x29, #-64]
    b774:	mov	w9, #0xfffffffb            	// #-5
    b778:	str	w9, [sp, #40]
    b77c:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b780:	ldur	w8, [x29, #-76]
    b784:	subs	w8, w8, #0x1
    b788:	stur	w8, [x29, #-76]
    b78c:	ldur	x9, [x29, #-64]
    b790:	add	x10, x9, #0x1
    b794:	stur	x10, [x29, #-64]
    b798:	ldrb	w8, [x9]
    b79c:	mov	w9, w8
    b7a0:	ldr	w8, [sp, #68]
    b7a4:	mov	w10, w8
    b7a8:	lsl	x9, x9, x10
    b7ac:	ldr	x10, [sp, #72]
    b7b0:	add	x9, x10, x9
    b7b4:	str	x9, [sp, #72]
    b7b8:	ldr	w8, [sp, #68]
    b7bc:	add	w8, w8, #0x8
    b7c0:	str	w8, [sp, #68]
    b7c4:	b	b734 <inflateBack@@ZLIB_1.2.0+0x15d0>
    b7c8:	ldr	x8, [sp, #72]
    b7cc:	ldur	x9, [x29, #-56]
    b7d0:	ldr	w10, [x9, #100]
    b7d4:	mov	w11, #0x1                   	// #1
    b7d8:	lsl	w10, w11, w10
    b7dc:	subs	w10, w10, #0x1
    b7e0:	and	w8, w8, w10
    b7e4:	ldur	x9, [x29, #-56]
    b7e8:	ldr	w10, [x9, #96]
    b7ec:	add	w8, w10, w8
    b7f0:	str	w8, [x9, #96]
    b7f4:	ldur	x8, [x29, #-56]
    b7f8:	ldr	w9, [x8, #100]
    b7fc:	mov	w8, w9
    b800:	ldr	x10, [sp, #72]
    b804:	lsr	x8, x10, x8
    b808:	str	x8, [sp, #72]
    b80c:	ldur	x8, [x29, #-56]
    b810:	ldr	w9, [x8, #100]
    b814:	ldr	w11, [sp, #68]
    b818:	subs	w9, w11, w9
    b81c:	str	w9, [sp, #68]
    b820:	ldur	x8, [x29, #-56]
    b824:	ldr	w9, [x8, #96]
    b828:	ldur	x8, [x29, #-56]
    b82c:	ldr	w10, [x8, #60]
    b830:	ldur	x8, [x29, #-56]
    b834:	ldr	w11, [x8, #64]
    b838:	ldur	x8, [x29, #-56]
    b83c:	ldr	w12, [x8, #60]
    b840:	cmp	w11, w12
    b844:	str	w9, [sp, #12]
    b848:	str	w10, [sp, #8]
    b84c:	b.cs	b85c <inflateBack@@ZLIB_1.2.0+0x16f8>  // b.hs, b.nlast
    b850:	ldr	w8, [sp, #80]
    b854:	str	w8, [sp, #4]
    b858:	b	b864 <inflateBack@@ZLIB_1.2.0+0x1700>
    b85c:	mov	w8, wzr
    b860:	str	w8, [sp, #4]
    b864:	ldr	w8, [sp, #4]
    b868:	ldr	w9, [sp, #8]
    b86c:	subs	w8, w9, w8
    b870:	ldr	w10, [sp, #12]
    b874:	cmp	w10, w8
    b878:	b.ls	b89c <inflateBack@@ZLIB_1.2.0+0x1738>  // b.plast
    b87c:	ldur	x8, [x29, #-16]
    b880:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    b884:	add	x9, x9, #0x41
    b888:	str	x9, [x8, #48]
    b88c:	ldur	x8, [x29, #-56]
    b890:	mov	w10, #0x3f51                	// #16209
    b894:	str	w10, [x8, #8]
    b898:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b89c:	ldr	w8, [sp, #80]
    b8a0:	cbnz	w8, b8ec <inflateBack@@ZLIB_1.2.0+0x1788>
    b8a4:	ldur	x8, [x29, #-56]
    b8a8:	ldr	x8, [x8, #72]
    b8ac:	stur	x8, [x29, #-72]
    b8b0:	ldur	x8, [x29, #-56]
    b8b4:	ldr	w9, [x8, #60]
    b8b8:	str	w9, [sp, #80]
    b8bc:	ldr	w9, [sp, #80]
    b8c0:	ldur	x8, [x29, #-56]
    b8c4:	str	w9, [x8, #64]
    b8c8:	ldur	x8, [x29, #-40]
    b8cc:	ldur	x0, [x29, #-48]
    b8d0:	ldur	x1, [x29, #-72]
    b8d4:	ldr	w2, [sp, #80]
    b8d8:	blr	x8
    b8dc:	cbz	w0, b8ec <inflateBack@@ZLIB_1.2.0+0x1788>
    b8e0:	mov	w8, #0xfffffffb            	// #-5
    b8e4:	str	w8, [sp, #40]
    b8e8:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    b8ec:	ldur	x8, [x29, #-56]
    b8f0:	ldr	w9, [x8, #60]
    b8f4:	ldur	x8, [x29, #-56]
    b8f8:	ldr	w10, [x8, #96]
    b8fc:	subs	w9, w9, w10
    b900:	str	w9, [sp, #64]
    b904:	ldr	w9, [sp, #64]
    b908:	ldr	w10, [sp, #80]
    b90c:	cmp	w9, w10
    b910:	b.cs	b93c <inflateBack@@ZLIB_1.2.0+0x17d8>  // b.hs, b.nlast
    b914:	ldur	x8, [x29, #-72]
    b918:	ldr	w9, [sp, #64]
    b91c:	mov	w10, w9
    b920:	add	x8, x8, x10
    b924:	str	x8, [sp, #56]
    b928:	ldr	w9, [sp, #80]
    b92c:	ldr	w11, [sp, #64]
    b930:	subs	w9, w9, w11
    b934:	str	w9, [sp, #64]
    b938:	b	b964 <inflateBack@@ZLIB_1.2.0+0x1800>
    b93c:	ldur	x8, [x29, #-72]
    b940:	ldur	x9, [x29, #-56]
    b944:	ldr	w10, [x9, #96]
    b948:	mov	w9, w10
    b94c:	mov	x11, xzr
    b950:	subs	x9, x11, x9
    b954:	add	x8, x8, x9
    b958:	str	x8, [sp, #56]
    b95c:	ldr	w10, [sp, #80]
    b960:	str	w10, [sp, #64]
    b964:	ldr	w8, [sp, #64]
    b968:	ldur	x9, [x29, #-56]
    b96c:	ldr	w10, [x9, #92]
    b970:	cmp	w8, w10
    b974:	b.ls	b984 <inflateBack@@ZLIB_1.2.0+0x1820>  // b.plast
    b978:	ldur	x8, [x29, #-56]
    b97c:	ldr	w9, [x8, #92]
    b980:	str	w9, [sp, #64]
    b984:	ldr	w8, [sp, #64]
    b988:	ldur	x9, [x29, #-56]
    b98c:	ldr	w10, [x9, #92]
    b990:	subs	w8, w10, w8
    b994:	str	w8, [x9, #92]
    b998:	ldr	w8, [sp, #64]
    b99c:	ldr	w10, [sp, #80]
    b9a0:	subs	w8, w10, w8
    b9a4:	str	w8, [sp, #80]
    b9a8:	ldr	x8, [sp, #56]
    b9ac:	add	x9, x8, #0x1
    b9b0:	str	x9, [sp, #56]
    b9b4:	ldrb	w10, [x8]
    b9b8:	ldur	x8, [x29, #-72]
    b9bc:	add	x9, x8, #0x1
    b9c0:	stur	x9, [x29, #-72]
    b9c4:	strb	w10, [x8]
    b9c8:	ldr	w8, [sp, #64]
    b9cc:	subs	w8, w8, #0x1
    b9d0:	str	w8, [sp, #64]
    b9d4:	cbnz	w8, b9a8 <inflateBack@@ZLIB_1.2.0+0x1844>
    b9d8:	ldur	x8, [x29, #-56]
    b9dc:	ldr	w9, [x8, #92]
    b9e0:	cbnz	w9, b89c <inflateBack@@ZLIB_1.2.0+0x1738>
    b9e4:	b	ba50 <inflateBack@@ZLIB_1.2.0+0x18ec>
    b9e8:	mov	w8, #0x1                   	// #1
    b9ec:	str	w8, [sp, #40]
    b9f0:	ldr	w8, [sp, #80]
    b9f4:	ldur	x9, [x29, #-56]
    b9f8:	ldr	w10, [x9, #60]
    b9fc:	cmp	w8, w10
    ba00:	b.cs	ba34 <inflateBack@@ZLIB_1.2.0+0x18d0>  // b.hs, b.nlast
    ba04:	ldur	x8, [x29, #-40]
    ba08:	ldur	x0, [x29, #-48]
    ba0c:	ldur	x9, [x29, #-56]
    ba10:	ldr	x1, [x9, #72]
    ba14:	ldur	x9, [x29, #-56]
    ba18:	ldr	w10, [x9, #60]
    ba1c:	ldr	w11, [sp, #80]
    ba20:	subs	w2, w10, w11
    ba24:	blr	x8
    ba28:	cbz	w0, ba34 <inflateBack@@ZLIB_1.2.0+0x18d0>
    ba2c:	mov	w8, #0xfffffffb            	// #-5
    ba30:	str	w8, [sp, #40]
    ba34:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    ba38:	mov	w8, #0xfffffffd            	// #-3
    ba3c:	str	w8, [sp, #40]
    ba40:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    ba44:	mov	w8, #0xfffffffe            	// #-2
    ba48:	str	w8, [sp, #40]
    ba4c:	b	ba54 <inflateBack@@ZLIB_1.2.0+0x18f0>
    ba50:	b	a22c <inflateBack@@ZLIB_1.2.0+0xc8>
    ba54:	ldur	x8, [x29, #-64]
    ba58:	ldur	x9, [x29, #-16]
    ba5c:	str	x8, [x9]
    ba60:	ldur	w10, [x29, #-76]
    ba64:	ldur	x8, [x29, #-16]
    ba68:	str	w10, [x8, #8]
    ba6c:	ldr	w10, [sp, #40]
    ba70:	stur	w10, [x29, #-4]
    ba74:	ldur	w0, [x29, #-4]
    ba78:	ldp	x29, x30, [sp, #160]
    ba7c:	add	sp, sp, #0xb0
    ba80:	ret
    ba84:	sub	sp, sp, #0x10
    ba88:	adrp	x8, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    ba8c:	add	x8, x8, #0x6aa
    ba90:	mov	w9, #0x9                   	// #9
    ba94:	adrp	x10, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    ba98:	add	x10, x10, #0xeaa
    ba9c:	mov	w11, #0x5                   	// #5
    baa0:	str	x0, [sp, #8]
    baa4:	ldr	x12, [sp, #8]
    baa8:	str	x8, [x12, #104]
    baac:	ldr	x8, [sp, #8]
    bab0:	str	w9, [x8, #120]
    bab4:	ldr	x8, [sp, #8]
    bab8:	str	x10, [x8, #112]
    babc:	ldr	x8, [sp, #8]
    bac0:	str	w11, [x8, #124]
    bac4:	add	sp, sp, #0x10
    bac8:	ret

000000000000bacc <inflateBackEnd@@ZLIB_1.2.0>:
    bacc:	sub	sp, sp, #0x20
    bad0:	stp	x29, x30, [sp, #16]
    bad4:	add	x29, sp, #0x10
    bad8:	str	x0, [sp]
    badc:	ldr	x8, [sp]
    bae0:	cbz	x8, bafc <inflateBackEnd@@ZLIB_1.2.0+0x30>
    bae4:	ldr	x8, [sp]
    bae8:	ldr	x8, [x8, #56]
    baec:	cbz	x8, bafc <inflateBackEnd@@ZLIB_1.2.0+0x30>
    baf0:	ldr	x8, [sp]
    baf4:	ldr	x8, [x8, #72]
    baf8:	cbnz	x8, bb08 <inflateBackEnd@@ZLIB_1.2.0+0x3c>
    bafc:	mov	w8, #0xfffffffe            	// #-2
    bb00:	stur	w8, [x29, #-4]
    bb04:	b	bb34 <inflateBackEnd@@ZLIB_1.2.0+0x68>
    bb08:	ldr	x8, [sp]
    bb0c:	ldr	x8, [x8, #72]
    bb10:	ldr	x9, [sp]
    bb14:	ldr	x0, [x9, #80]
    bb18:	ldr	x9, [sp]
    bb1c:	ldr	x1, [x9, #56]
    bb20:	blr	x8
    bb24:	ldr	x8, [sp]
    bb28:	mov	x9, xzr
    bb2c:	str	x9, [x8, #56]
    bb30:	stur	wzr, [x29, #-4]
    bb34:	ldur	w0, [x29, #-4]
    bb38:	ldp	x29, x30, [sp, #16]
    bb3c:	add	sp, sp, #0x20
    bb40:	ret
    bb44:	sub	sp, sp, #0xb0
    bb48:	mov	x8, xzr
    bb4c:	mov	w9, #0x1                   	// #1
    bb50:	str	x0, [sp, #168]
    bb54:	str	w1, [sp, #164]
    bb58:	ldr	x10, [sp, #168]
    bb5c:	ldr	x10, [x10, #56]
    bb60:	str	x10, [sp, #152]
    bb64:	ldr	x10, [sp, #168]
    bb68:	ldr	x10, [x10]
    bb6c:	str	x10, [sp, #144]
    bb70:	ldr	x10, [sp, #144]
    bb74:	ldr	x11, [sp, #168]
    bb78:	ldr	w12, [x11, #8]
    bb7c:	subs	w12, w12, #0x5
    bb80:	mov	w11, w12
    bb84:	ubfx	x11, x11, #0, #32
    bb88:	add	x10, x10, x11
    bb8c:	str	x10, [sp, #136]
    bb90:	ldr	x10, [sp, #168]
    bb94:	ldr	x10, [x10, #24]
    bb98:	str	x10, [sp, #128]
    bb9c:	ldr	x10, [sp, #128]
    bba0:	ldr	w12, [sp, #164]
    bba4:	ldr	x11, [sp, #168]
    bba8:	ldr	w13, [x11, #32]
    bbac:	subs	w12, w12, w13
    bbb0:	mov	w11, w12
    bbb4:	ubfx	x11, x11, #0, #32
    bbb8:	subs	x8, x8, x11
    bbbc:	add	x8, x10, x8
    bbc0:	str	x8, [sp, #120]
    bbc4:	ldr	x8, [sp, #128]
    bbc8:	ldr	x10, [sp, #168]
    bbcc:	ldr	w12, [x10, #32]
    bbd0:	subs	w12, w12, #0x101
    bbd4:	mov	w10, w12
    bbd8:	ubfx	x10, x10, #0, #32
    bbdc:	add	x8, x8, x10
    bbe0:	str	x8, [sp, #112]
    bbe4:	ldr	x8, [sp, #152]
    bbe8:	ldr	w12, [x8, #60]
    bbec:	str	w12, [sp, #108]
    bbf0:	ldr	x8, [sp, #152]
    bbf4:	ldr	w12, [x8, #64]
    bbf8:	str	w12, [sp, #104]
    bbfc:	ldr	x8, [sp, #152]
    bc00:	ldr	w12, [x8, #68]
    bc04:	str	w12, [sp, #100]
    bc08:	ldr	x8, [sp, #152]
    bc0c:	ldr	x8, [x8, #72]
    bc10:	str	x8, [sp, #88]
    bc14:	ldr	x8, [sp, #152]
    bc18:	ldr	x8, [x8, #80]
    bc1c:	str	x8, [sp, #80]
    bc20:	ldr	x8, [sp, #152]
    bc24:	ldr	w12, [x8, #88]
    bc28:	str	w12, [sp, #76]
    bc2c:	ldr	x8, [sp, #152]
    bc30:	ldr	x8, [x8, #104]
    bc34:	str	x8, [sp, #64]
    bc38:	ldr	x8, [sp, #152]
    bc3c:	ldr	x8, [x8, #112]
    bc40:	str	x8, [sp, #56]
    bc44:	ldr	x8, [sp, #152]
    bc48:	ldr	w12, [x8, #120]
    bc4c:	lsl	w12, w9, w12
    bc50:	subs	w12, w12, #0x1
    bc54:	str	w12, [sp, #52]
    bc58:	ldr	x8, [sp, #152]
    bc5c:	ldr	w12, [x8, #124]
    bc60:	lsl	w9, w9, w12
    bc64:	subs	w9, w9, #0x1
    bc68:	str	w9, [sp, #48]
    bc6c:	ldr	w8, [sp, #76]
    bc70:	cmp	w8, #0xf
    bc74:	b.cs	bce8 <inflateBackEnd@@ZLIB_1.2.0+0x21c>  // b.hs, b.nlast
    bc78:	ldr	x8, [sp, #144]
    bc7c:	add	x9, x8, #0x1
    bc80:	str	x9, [sp, #144]
    bc84:	ldrb	w10, [x8]
    bc88:	mov	w8, w10
    bc8c:	ldr	w10, [sp, #76]
    bc90:	mov	w9, w10
    bc94:	lsl	x8, x8, x9
    bc98:	ldr	x9, [sp, #80]
    bc9c:	add	x8, x9, x8
    bca0:	str	x8, [sp, #80]
    bca4:	ldr	w10, [sp, #76]
    bca8:	add	w10, w10, #0x8
    bcac:	str	w10, [sp, #76]
    bcb0:	ldr	x8, [sp, #144]
    bcb4:	add	x9, x8, #0x1
    bcb8:	str	x9, [sp, #144]
    bcbc:	ldrb	w10, [x8]
    bcc0:	mov	w8, w10
    bcc4:	ldr	w10, [sp, #76]
    bcc8:	mov	w9, w10
    bccc:	lsl	x8, x8, x9
    bcd0:	ldr	x9, [sp, #80]
    bcd4:	add	x8, x9, x8
    bcd8:	str	x8, [sp, #80]
    bcdc:	ldr	w10, [sp, #76]
    bce0:	add	w10, w10, #0x8
    bce4:	str	w10, [sp, #76]
    bce8:	ldr	x8, [sp, #64]
    bcec:	ldr	x9, [sp, #80]
    bcf0:	ldr	w10, [sp, #52]
    bcf4:	mov	w11, w10
    bcf8:	and	x9, x9, x11
    bcfc:	ldr	w10, [x8, x9, lsl #2]
    bd00:	str	w10, [sp, #44]
    bd04:	ldrb	w8, [sp, #45]
    bd08:	str	w8, [sp, #40]
    bd0c:	ldr	w8, [sp, #40]
    bd10:	mov	w9, w8
    bd14:	ldr	x10, [sp, #80]
    bd18:	lsr	x9, x10, x9
    bd1c:	str	x9, [sp, #80]
    bd20:	ldr	w8, [sp, #40]
    bd24:	ldr	w11, [sp, #76]
    bd28:	subs	w8, w11, w8
    bd2c:	str	w8, [sp, #76]
    bd30:	ldrb	w8, [sp, #44]
    bd34:	str	w8, [sp, #40]
    bd38:	ldr	w8, [sp, #40]
    bd3c:	cbnz	w8, bd5c <inflateBackEnd@@ZLIB_1.2.0+0x290>
    bd40:	add	x8, sp, #0x2c
    bd44:	ldrh	w9, [x8, #2]
    bd48:	ldr	x8, [sp, #128]
    bd4c:	add	x10, x8, #0x1
    bd50:	str	x10, [sp, #128]
    bd54:	strb	w9, [x8]
    bd58:	b	c538 <inflateBackEnd@@ZLIB_1.2.0+0xa6c>
    bd5c:	ldr	w8, [sp, #40]
    bd60:	and	w8, w8, #0x10
    bd64:	cbz	w8, c4b4 <inflateBackEnd@@ZLIB_1.2.0+0x9e8>
    bd68:	ldrh	w8, [sp, #46]
    bd6c:	str	w8, [sp, #36]
    bd70:	ldr	w8, [sp, #40]
    bd74:	and	w8, w8, #0xf
    bd78:	str	w8, [sp, #40]
    bd7c:	ldr	w8, [sp, #40]
    bd80:	cbz	w8, be14 <inflateBackEnd@@ZLIB_1.2.0+0x348>
    bd84:	ldr	w8, [sp, #76]
    bd88:	ldr	w9, [sp, #40]
    bd8c:	cmp	w8, w9
    bd90:	b.cs	bdcc <inflateBackEnd@@ZLIB_1.2.0+0x300>  // b.hs, b.nlast
    bd94:	ldr	x8, [sp, #144]
    bd98:	add	x9, x8, #0x1
    bd9c:	str	x9, [sp, #144]
    bda0:	ldrb	w10, [x8]
    bda4:	mov	w8, w10
    bda8:	ldr	w10, [sp, #76]
    bdac:	mov	w9, w10
    bdb0:	lsl	x8, x8, x9
    bdb4:	ldr	x9, [sp, #80]
    bdb8:	add	x8, x9, x8
    bdbc:	str	x8, [sp, #80]
    bdc0:	ldr	w10, [sp, #76]
    bdc4:	add	w10, w10, #0x8
    bdc8:	str	w10, [sp, #76]
    bdcc:	ldr	x8, [sp, #80]
    bdd0:	ldr	w9, [sp, #40]
    bdd4:	mov	w10, #0x1                   	// #1
    bdd8:	lsl	w9, w10, w9
    bddc:	subs	w9, w9, #0x1
    bde0:	and	w8, w8, w9
    bde4:	ldr	w9, [sp, #36]
    bde8:	add	w8, w9, w8
    bdec:	str	w8, [sp, #36]
    bdf0:	ldr	w8, [sp, #40]
    bdf4:	mov	w11, w8
    bdf8:	ldr	x12, [sp, #80]
    bdfc:	lsr	x11, x12, x11
    be00:	str	x11, [sp, #80]
    be04:	ldr	w8, [sp, #40]
    be08:	ldr	w9, [sp, #76]
    be0c:	subs	w8, w9, w8
    be10:	str	w8, [sp, #76]
    be14:	ldr	w8, [sp, #76]
    be18:	cmp	w8, #0xf
    be1c:	b.cs	be90 <inflateBackEnd@@ZLIB_1.2.0+0x3c4>  // b.hs, b.nlast
    be20:	ldr	x8, [sp, #144]
    be24:	add	x9, x8, #0x1
    be28:	str	x9, [sp, #144]
    be2c:	ldrb	w10, [x8]
    be30:	mov	w8, w10
    be34:	ldr	w10, [sp, #76]
    be38:	mov	w9, w10
    be3c:	lsl	x8, x8, x9
    be40:	ldr	x9, [sp, #80]
    be44:	add	x8, x9, x8
    be48:	str	x8, [sp, #80]
    be4c:	ldr	w10, [sp, #76]
    be50:	add	w10, w10, #0x8
    be54:	str	w10, [sp, #76]
    be58:	ldr	x8, [sp, #144]
    be5c:	add	x9, x8, #0x1
    be60:	str	x9, [sp, #144]
    be64:	ldrb	w10, [x8]
    be68:	mov	w8, w10
    be6c:	ldr	w10, [sp, #76]
    be70:	mov	w9, w10
    be74:	lsl	x8, x8, x9
    be78:	ldr	x9, [sp, #80]
    be7c:	add	x8, x9, x8
    be80:	str	x8, [sp, #80]
    be84:	ldr	w10, [sp, #76]
    be88:	add	w10, w10, #0x8
    be8c:	str	w10, [sp, #76]
    be90:	ldr	x8, [sp, #56]
    be94:	ldr	x9, [sp, #80]
    be98:	ldr	w10, [sp, #48]
    be9c:	mov	w11, w10
    bea0:	and	x9, x9, x11
    bea4:	ldr	w10, [x8, x9, lsl #2]
    bea8:	str	w10, [sp, #44]
    beac:	ldrb	w8, [sp, #45]
    beb0:	str	w8, [sp, #40]
    beb4:	ldr	w8, [sp, #40]
    beb8:	mov	w9, w8
    bebc:	ldr	x10, [sp, #80]
    bec0:	lsr	x9, x10, x9
    bec4:	str	x9, [sp, #80]
    bec8:	ldr	w8, [sp, #40]
    becc:	ldr	w11, [sp, #76]
    bed0:	subs	w8, w11, w8
    bed4:	str	w8, [sp, #76]
    bed8:	ldrb	w8, [sp, #44]
    bedc:	str	w8, [sp, #40]
    bee0:	ldr	w8, [sp, #40]
    bee4:	and	w8, w8, #0x10
    bee8:	cbz	w8, c448 <inflateBackEnd@@ZLIB_1.2.0+0x97c>
    beec:	ldrh	w8, [sp, #46]
    bef0:	str	w8, [sp, #32]
    bef4:	ldr	w8, [sp, #40]
    bef8:	and	w8, w8, #0xf
    befc:	str	w8, [sp, #40]
    bf00:	ldr	w8, [sp, #76]
    bf04:	ldr	w9, [sp, #40]
    bf08:	cmp	w8, w9
    bf0c:	b.cs	bf90 <inflateBackEnd@@ZLIB_1.2.0+0x4c4>  // b.hs, b.nlast
    bf10:	ldr	x8, [sp, #144]
    bf14:	add	x9, x8, #0x1
    bf18:	str	x9, [sp, #144]
    bf1c:	ldrb	w10, [x8]
    bf20:	mov	w8, w10
    bf24:	ldr	w10, [sp, #76]
    bf28:	mov	w9, w10
    bf2c:	lsl	x8, x8, x9
    bf30:	ldr	x9, [sp, #80]
    bf34:	add	x8, x9, x8
    bf38:	str	x8, [sp, #80]
    bf3c:	ldr	w10, [sp, #76]
    bf40:	add	w10, w10, #0x8
    bf44:	str	w10, [sp, #76]
    bf48:	ldr	w10, [sp, #76]
    bf4c:	ldr	w11, [sp, #40]
    bf50:	cmp	w10, w11
    bf54:	b.cs	bf90 <inflateBackEnd@@ZLIB_1.2.0+0x4c4>  // b.hs, b.nlast
    bf58:	ldr	x8, [sp, #144]
    bf5c:	add	x9, x8, #0x1
    bf60:	str	x9, [sp, #144]
    bf64:	ldrb	w10, [x8]
    bf68:	mov	w8, w10
    bf6c:	ldr	w10, [sp, #76]
    bf70:	mov	w9, w10
    bf74:	lsl	x8, x8, x9
    bf78:	ldr	x9, [sp, #80]
    bf7c:	add	x8, x9, x8
    bf80:	str	x8, [sp, #80]
    bf84:	ldr	w10, [sp, #76]
    bf88:	add	w10, w10, #0x8
    bf8c:	str	w10, [sp, #76]
    bf90:	ldr	x8, [sp, #80]
    bf94:	ldr	w9, [sp, #40]
    bf98:	mov	w10, #0x1                   	// #1
    bf9c:	lsl	w9, w10, w9
    bfa0:	subs	w9, w9, #0x1
    bfa4:	and	w8, w8, w9
    bfa8:	ldr	w9, [sp, #32]
    bfac:	add	w8, w9, w8
    bfb0:	str	w8, [sp, #32]
    bfb4:	ldr	w8, [sp, #40]
    bfb8:	mov	w11, w8
    bfbc:	ldr	x12, [sp, #80]
    bfc0:	lsr	x11, x12, x11
    bfc4:	str	x11, [sp, #80]
    bfc8:	ldr	w8, [sp, #40]
    bfcc:	ldr	w9, [sp, #76]
    bfd0:	subs	w8, w9, w8
    bfd4:	str	w8, [sp, #76]
    bfd8:	ldr	x11, [sp, #128]
    bfdc:	ldr	x12, [sp, #120]
    bfe0:	subs	x11, x11, x12
    bfe4:	str	w11, [sp, #40]
    bfe8:	ldr	w8, [sp, #32]
    bfec:	ldr	w9, [sp, #40]
    bff0:	cmp	w8, w9
    bff4:	b.ls	c35c <inflateBackEnd@@ZLIB_1.2.0+0x890>  // b.plast
    bff8:	ldr	w8, [sp, #32]
    bffc:	ldr	w9, [sp, #40]
    c000:	subs	w8, w8, w9
    c004:	str	w8, [sp, #40]
    c008:	ldr	w8, [sp, #40]
    c00c:	ldr	w9, [sp, #104]
    c010:	cmp	w8, w9
    c014:	b.ls	c044 <inflateBackEnd@@ZLIB_1.2.0+0x578>  // b.plast
    c018:	ldr	x8, [sp, #152]
    c01c:	ldr	w9, [x8, #7144]
    c020:	cbz	w9, c044 <inflateBackEnd@@ZLIB_1.2.0+0x578>
    c024:	ldr	x8, [sp, #168]
    c028:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    c02c:	add	x9, x9, #0x41
    c030:	str	x9, [x8, #48]
    c034:	ldr	x8, [sp, #152]
    c038:	mov	w10, #0x3f51                	// #16209
    c03c:	str	w10, [x8, #8]
    c040:	b	c56c <inflateBackEnd@@ZLIB_1.2.0+0xaa0>
    c044:	ldr	x8, [sp, #88]
    c048:	str	x8, [sp, #24]
    c04c:	ldr	w9, [sp, #100]
    c050:	cbnz	w9, c0e4 <inflateBackEnd@@ZLIB_1.2.0+0x618>
    c054:	ldr	w8, [sp, #108]
    c058:	ldr	w9, [sp, #40]
    c05c:	subs	w8, w8, w9
    c060:	ldr	x10, [sp, #24]
    c064:	mov	w11, w8
    c068:	ubfx	x11, x11, #0, #32
    c06c:	add	x10, x10, x11
    c070:	str	x10, [sp, #24]
    c074:	ldr	w8, [sp, #40]
    c078:	ldr	w9, [sp, #36]
    c07c:	cmp	w8, w9
    c080:	b.cs	c0e0 <inflateBackEnd@@ZLIB_1.2.0+0x614>  // b.hs, b.nlast
    c084:	ldr	w8, [sp, #40]
    c088:	ldr	w9, [sp, #36]
    c08c:	subs	w8, w9, w8
    c090:	str	w8, [sp, #36]
    c094:	ldr	x8, [sp, #24]
    c098:	add	x9, x8, #0x1
    c09c:	str	x9, [sp, #24]
    c0a0:	ldrb	w10, [x8]
    c0a4:	ldr	x8, [sp, #128]
    c0a8:	add	x9, x8, #0x1
    c0ac:	str	x9, [sp, #128]
    c0b0:	strb	w10, [x8]
    c0b4:	ldr	w8, [sp, #40]
    c0b8:	subs	w8, w8, #0x1
    c0bc:	str	w8, [sp, #40]
    c0c0:	cbnz	w8, c094 <inflateBackEnd@@ZLIB_1.2.0+0x5c8>
    c0c4:	ldr	x8, [sp, #128]
    c0c8:	ldr	w9, [sp, #32]
    c0cc:	mov	w10, w9
    c0d0:	mov	x11, xzr
    c0d4:	subs	x10, x11, x10
    c0d8:	add	x8, x8, x10
    c0dc:	str	x8, [sp, #24]
    c0e0:	b	c288 <inflateBackEnd@@ZLIB_1.2.0+0x7bc>
    c0e4:	ldr	w8, [sp, #100]
    c0e8:	ldr	w9, [sp, #40]
    c0ec:	cmp	w8, w9
    c0f0:	b.cs	c1fc <inflateBackEnd@@ZLIB_1.2.0+0x730>  // b.hs, b.nlast
    c0f4:	ldr	w8, [sp, #108]
    c0f8:	ldr	w9, [sp, #100]
    c0fc:	add	w8, w8, w9
    c100:	ldr	w9, [sp, #40]
    c104:	subs	w8, w8, w9
    c108:	ldr	x10, [sp, #24]
    c10c:	mov	w11, w8
    c110:	ubfx	x11, x11, #0, #32
    c114:	add	x10, x10, x11
    c118:	str	x10, [sp, #24]
    c11c:	ldr	w8, [sp, #100]
    c120:	ldr	w9, [sp, #40]
    c124:	subs	w8, w9, w8
    c128:	str	w8, [sp, #40]
    c12c:	ldr	w8, [sp, #40]
    c130:	ldr	w9, [sp, #36]
    c134:	cmp	w8, w9
    c138:	b.cs	c1f8 <inflateBackEnd@@ZLIB_1.2.0+0x72c>  // b.hs, b.nlast
    c13c:	ldr	w8, [sp, #40]
    c140:	ldr	w9, [sp, #36]
    c144:	subs	w8, w9, w8
    c148:	str	w8, [sp, #36]
    c14c:	ldr	x8, [sp, #24]
    c150:	add	x9, x8, #0x1
    c154:	str	x9, [sp, #24]
    c158:	ldrb	w10, [x8]
    c15c:	ldr	x8, [sp, #128]
    c160:	add	x9, x8, #0x1
    c164:	str	x9, [sp, #128]
    c168:	strb	w10, [x8]
    c16c:	ldr	w8, [sp, #40]
    c170:	subs	w8, w8, #0x1
    c174:	str	w8, [sp, #40]
    c178:	cbnz	w8, c14c <inflateBackEnd@@ZLIB_1.2.0+0x680>
    c17c:	ldr	x8, [sp, #88]
    c180:	str	x8, [sp, #24]
    c184:	ldr	w9, [sp, #100]
    c188:	ldr	w10, [sp, #36]
    c18c:	cmp	w9, w10
    c190:	b.cs	c1f8 <inflateBackEnd@@ZLIB_1.2.0+0x72c>  // b.hs, b.nlast
    c194:	ldr	w8, [sp, #100]
    c198:	str	w8, [sp, #40]
    c19c:	ldr	w8, [sp, #40]
    c1a0:	ldr	w9, [sp, #36]
    c1a4:	subs	w8, w9, w8
    c1a8:	str	w8, [sp, #36]
    c1ac:	ldr	x8, [sp, #24]
    c1b0:	add	x9, x8, #0x1
    c1b4:	str	x9, [sp, #24]
    c1b8:	ldrb	w10, [x8]
    c1bc:	ldr	x8, [sp, #128]
    c1c0:	add	x9, x8, #0x1
    c1c4:	str	x9, [sp, #128]
    c1c8:	strb	w10, [x8]
    c1cc:	ldr	w8, [sp, #40]
    c1d0:	subs	w8, w8, #0x1
    c1d4:	str	w8, [sp, #40]
    c1d8:	cbnz	w8, c1ac <inflateBackEnd@@ZLIB_1.2.0+0x6e0>
    c1dc:	ldr	x8, [sp, #128]
    c1e0:	ldr	w9, [sp, #32]
    c1e4:	mov	w10, w9
    c1e8:	mov	x11, xzr
    c1ec:	subs	x10, x11, x10
    c1f0:	add	x8, x8, x10
    c1f4:	str	x8, [sp, #24]
    c1f8:	b	c288 <inflateBackEnd@@ZLIB_1.2.0+0x7bc>
    c1fc:	ldr	w8, [sp, #100]
    c200:	ldr	w9, [sp, #40]
    c204:	subs	w8, w8, w9
    c208:	ldr	x10, [sp, #24]
    c20c:	mov	w11, w8
    c210:	ubfx	x11, x11, #0, #32
    c214:	add	x10, x10, x11
    c218:	str	x10, [sp, #24]
    c21c:	ldr	w8, [sp, #40]
    c220:	ldr	w9, [sp, #36]
    c224:	cmp	w8, w9
    c228:	b.cs	c288 <inflateBackEnd@@ZLIB_1.2.0+0x7bc>  // b.hs, b.nlast
    c22c:	ldr	w8, [sp, #40]
    c230:	ldr	w9, [sp, #36]
    c234:	subs	w8, w9, w8
    c238:	str	w8, [sp, #36]
    c23c:	ldr	x8, [sp, #24]
    c240:	add	x9, x8, #0x1
    c244:	str	x9, [sp, #24]
    c248:	ldrb	w10, [x8]
    c24c:	ldr	x8, [sp, #128]
    c250:	add	x9, x8, #0x1
    c254:	str	x9, [sp, #128]
    c258:	strb	w10, [x8]
    c25c:	ldr	w8, [sp, #40]
    c260:	subs	w8, w8, #0x1
    c264:	str	w8, [sp, #40]
    c268:	cbnz	w8, c23c <inflateBackEnd@@ZLIB_1.2.0+0x770>
    c26c:	ldr	x8, [sp, #128]
    c270:	ldr	w9, [sp, #32]
    c274:	mov	w10, w9
    c278:	mov	x11, xzr
    c27c:	subs	x10, x11, x10
    c280:	add	x8, x8, x10
    c284:	str	x8, [sp, #24]
    c288:	ldr	w8, [sp, #36]
    c28c:	cmp	w8, #0x2
    c290:	b.ls	c304 <inflateBackEnd@@ZLIB_1.2.0+0x838>  // b.plast
    c294:	ldr	x8, [sp, #24]
    c298:	add	x9, x8, #0x1
    c29c:	str	x9, [sp, #24]
    c2a0:	ldrb	w10, [x8]
    c2a4:	ldr	x8, [sp, #128]
    c2a8:	add	x9, x8, #0x1
    c2ac:	str	x9, [sp, #128]
    c2b0:	strb	w10, [x8]
    c2b4:	ldr	x8, [sp, #24]
    c2b8:	add	x9, x8, #0x1
    c2bc:	str	x9, [sp, #24]
    c2c0:	ldrb	w10, [x8]
    c2c4:	ldr	x8, [sp, #128]
    c2c8:	add	x9, x8, #0x1
    c2cc:	str	x9, [sp, #128]
    c2d0:	strb	w10, [x8]
    c2d4:	ldr	x8, [sp, #24]
    c2d8:	add	x9, x8, #0x1
    c2dc:	str	x9, [sp, #24]
    c2e0:	ldrb	w10, [x8]
    c2e4:	ldr	x8, [sp, #128]
    c2e8:	add	x9, x8, #0x1
    c2ec:	str	x9, [sp, #128]
    c2f0:	strb	w10, [x8]
    c2f4:	ldr	w10, [sp, #36]
    c2f8:	subs	w10, w10, #0x3
    c2fc:	str	w10, [sp, #36]
    c300:	b	c288 <inflateBackEnd@@ZLIB_1.2.0+0x7bc>
    c304:	ldr	w8, [sp, #36]
    c308:	cbz	w8, c358 <inflateBackEnd@@ZLIB_1.2.0+0x88c>
    c30c:	ldr	x8, [sp, #24]
    c310:	add	x9, x8, #0x1
    c314:	str	x9, [sp, #24]
    c318:	ldrb	w10, [x8]
    c31c:	ldr	x8, [sp, #128]
    c320:	add	x9, x8, #0x1
    c324:	str	x9, [sp, #128]
    c328:	strb	w10, [x8]
    c32c:	ldr	w10, [sp, #36]
    c330:	cmp	w10, #0x1
    c334:	b.ls	c358 <inflateBackEnd@@ZLIB_1.2.0+0x88c>  // b.plast
    c338:	ldr	x8, [sp, #24]
    c33c:	add	x9, x8, #0x1
    c340:	str	x9, [sp, #24]
    c344:	ldrb	w10, [x8]
    c348:	ldr	x8, [sp, #128]
    c34c:	add	x9, x8, #0x1
    c350:	str	x9, [sp, #128]
    c354:	strb	w10, [x8]
    c358:	b	c444 <inflateBackEnd@@ZLIB_1.2.0+0x978>
    c35c:	ldr	x8, [sp, #128]
    c360:	ldr	w9, [sp, #32]
    c364:	mov	w10, w9
    c368:	mov	x11, xzr
    c36c:	subs	x10, x11, x10
    c370:	add	x8, x8, x10
    c374:	str	x8, [sp, #24]
    c378:	ldr	x8, [sp, #24]
    c37c:	add	x9, x8, #0x1
    c380:	str	x9, [sp, #24]
    c384:	ldrb	w10, [x8]
    c388:	ldr	x8, [sp, #128]
    c38c:	add	x9, x8, #0x1
    c390:	str	x9, [sp, #128]
    c394:	strb	w10, [x8]
    c398:	ldr	x8, [sp, #24]
    c39c:	add	x9, x8, #0x1
    c3a0:	str	x9, [sp, #24]
    c3a4:	ldrb	w10, [x8]
    c3a8:	ldr	x8, [sp, #128]
    c3ac:	add	x9, x8, #0x1
    c3b0:	str	x9, [sp, #128]
    c3b4:	strb	w10, [x8]
    c3b8:	ldr	x8, [sp, #24]
    c3bc:	add	x9, x8, #0x1
    c3c0:	str	x9, [sp, #24]
    c3c4:	ldrb	w10, [x8]
    c3c8:	ldr	x8, [sp, #128]
    c3cc:	add	x9, x8, #0x1
    c3d0:	str	x9, [sp, #128]
    c3d4:	strb	w10, [x8]
    c3d8:	ldr	w10, [sp, #36]
    c3dc:	subs	w10, w10, #0x3
    c3e0:	str	w10, [sp, #36]
    c3e4:	ldr	w8, [sp, #36]
    c3e8:	cmp	w8, #0x2
    c3ec:	b.hi	c378 <inflateBackEnd@@ZLIB_1.2.0+0x8ac>  // b.pmore
    c3f0:	ldr	w8, [sp, #36]
    c3f4:	cbz	w8, c444 <inflateBackEnd@@ZLIB_1.2.0+0x978>
    c3f8:	ldr	x8, [sp, #24]
    c3fc:	add	x9, x8, #0x1
    c400:	str	x9, [sp, #24]
    c404:	ldrb	w10, [x8]
    c408:	ldr	x8, [sp, #128]
    c40c:	add	x9, x8, #0x1
    c410:	str	x9, [sp, #128]
    c414:	strb	w10, [x8]
    c418:	ldr	w10, [sp, #36]
    c41c:	cmp	w10, #0x1
    c420:	b.ls	c444 <inflateBackEnd@@ZLIB_1.2.0+0x978>  // b.plast
    c424:	ldr	x8, [sp, #24]
    c428:	add	x9, x8, #0x1
    c42c:	str	x9, [sp, #24]
    c430:	ldrb	w10, [x8]
    c434:	ldr	x8, [sp, #128]
    c438:	add	x9, x8, #0x1
    c43c:	str	x9, [sp, #128]
    c440:	strb	w10, [x8]
    c444:	b	c4b0 <inflateBackEnd@@ZLIB_1.2.0+0x9e4>
    c448:	ldr	w8, [sp, #40]
    c44c:	and	w8, w8, #0x40
    c450:	cbnz	w8, c490 <inflateBackEnd@@ZLIB_1.2.0+0x9c4>
    c454:	ldr	x8, [sp, #56]
    c458:	ldrh	w9, [sp, #46]
    c45c:	mov	w10, w9
    c460:	ldr	x11, [sp, #80]
    c464:	ldr	w9, [sp, #40]
    c468:	mov	w12, #0x1                   	// #1
    c46c:	lsl	w9, w12, w9
    c470:	subs	w9, w9, #0x1
    c474:	mov	w13, w9
    c478:	ubfx	x13, x13, #0, #32
    c47c:	and	x11, x11, x13
    c480:	add	x10, x10, x11
    c484:	ldr	w9, [x8, x10, lsl #2]
    c488:	str	w9, [sp, #44]
    c48c:	b	beac <inflateBackEnd@@ZLIB_1.2.0+0x3e0>
    c490:	ldr	x8, [sp, #168]
    c494:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    c498:	add	x9, x9, #0x2b
    c49c:	str	x9, [x8, #48]
    c4a0:	ldr	x8, [sp, #152]
    c4a4:	mov	w10, #0x3f51                	// #16209
    c4a8:	str	w10, [x8, #8]
    c4ac:	b	c56c <inflateBackEnd@@ZLIB_1.2.0+0xaa0>
    c4b0:	b	c538 <inflateBackEnd@@ZLIB_1.2.0+0xa6c>
    c4b4:	ldr	w8, [sp, #40]
    c4b8:	and	w8, w8, #0x40
    c4bc:	cbnz	w8, c4fc <inflateBackEnd@@ZLIB_1.2.0+0xa30>
    c4c0:	ldr	x8, [sp, #64]
    c4c4:	ldrh	w9, [sp, #46]
    c4c8:	mov	w10, w9
    c4cc:	ldr	x11, [sp, #80]
    c4d0:	ldr	w9, [sp, #40]
    c4d4:	mov	w12, #0x1                   	// #1
    c4d8:	lsl	w9, w12, w9
    c4dc:	subs	w9, w9, #0x1
    c4e0:	mov	w13, w9
    c4e4:	ubfx	x13, x13, #0, #32
    c4e8:	and	x11, x11, x13
    c4ec:	add	x10, x10, x11
    c4f0:	ldr	w9, [x8, x10, lsl #2]
    c4f4:	str	w9, [sp, #44]
    c4f8:	b	bd04 <inflateBackEnd@@ZLIB_1.2.0+0x238>
    c4fc:	ldr	w8, [sp, #40]
    c500:	and	w8, w8, #0x20
    c504:	cbz	w8, c518 <inflateBackEnd@@ZLIB_1.2.0+0xa4c>
    c508:	ldr	x8, [sp, #152]
    c50c:	mov	w9, #0x3f3f                	// #16191
    c510:	str	w9, [x8, #8]
    c514:	b	c56c <inflateBackEnd@@ZLIB_1.2.0+0xaa0>
    c518:	ldr	x8, [sp, #168]
    c51c:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    c520:	add	x9, x9, #0xf
    c524:	str	x9, [x8, #48]
    c528:	ldr	x8, [sp, #152]
    c52c:	mov	w10, #0x3f51                	// #16209
    c530:	str	w10, [x8, #8]
    c534:	b	c56c <inflateBackEnd@@ZLIB_1.2.0+0xaa0>
    c538:	ldr	x8, [sp, #144]
    c53c:	ldr	x9, [sp, #136]
    c540:	mov	w10, #0x0                   	// #0
    c544:	cmp	x8, x9
    c548:	str	w10, [sp, #20]
    c54c:	b.cs	c564 <inflateBackEnd@@ZLIB_1.2.0+0xa98>  // b.hs, b.nlast
    c550:	ldr	x8, [sp, #128]
    c554:	ldr	x9, [sp, #112]
    c558:	cmp	x8, x9
    c55c:	cset	w10, cc  // cc = lo, ul, last
    c560:	str	w10, [sp, #20]
    c564:	ldr	w8, [sp, #20]
    c568:	tbnz	w8, #0, bc6c <inflateBackEnd@@ZLIB_1.2.0+0x1a0>
    c56c:	ldr	w8, [sp, #76]
    c570:	lsr	w8, w8, #3
    c574:	str	w8, [sp, #36]
    c578:	ldr	w8, [sp, #36]
    c57c:	mov	w9, w8
    c580:	ldr	x10, [sp, #144]
    c584:	mov	x11, xzr
    c588:	subs	x9, x11, x9
    c58c:	add	x9, x10, x9
    c590:	str	x9, [sp, #144]
    c594:	ldr	w8, [sp, #36]
    c598:	ldr	w12, [sp, #76]
    c59c:	subs	w8, w12, w8, lsl #3
    c5a0:	str	w8, [sp, #76]
    c5a4:	ldr	w8, [sp, #76]
    c5a8:	mov	w12, #0x1                   	// #1
    c5ac:	lsl	w8, w12, w8
    c5b0:	subs	w8, w8, #0x1
    c5b4:	mov	w9, w8
    c5b8:	ubfx	x9, x9, #0, #32
    c5bc:	ldr	x10, [sp, #80]
    c5c0:	and	x9, x10, x9
    c5c4:	str	x9, [sp, #80]
    c5c8:	ldr	x9, [sp, #144]
    c5cc:	ldr	x10, [sp, #168]
    c5d0:	str	x9, [x10]
    c5d4:	ldr	x9, [sp, #128]
    c5d8:	ldr	x10, [sp, #168]
    c5dc:	str	x9, [x10, #24]
    c5e0:	ldr	x9, [sp, #144]
    c5e4:	ldr	x10, [sp, #136]
    c5e8:	cmp	x9, x10
    c5ec:	b.cs	c608 <inflateBackEnd@@ZLIB_1.2.0+0xb3c>  // b.hs, b.nlast
    c5f0:	ldr	x8, [sp, #136]
    c5f4:	ldr	x9, [sp, #144]
    c5f8:	subs	x8, x8, x9
    c5fc:	add	x8, x8, #0x5
    c600:	str	x8, [sp, #8]
    c604:	b	c620 <inflateBackEnd@@ZLIB_1.2.0+0xb54>
    c608:	ldr	x8, [sp, #144]
    c60c:	ldr	x9, [sp, #136]
    c610:	subs	x8, x8, x9
    c614:	mov	x9, #0x5                   	// #5
    c618:	subs	x8, x9, x8
    c61c:	str	x8, [sp, #8]
    c620:	ldr	x8, [sp, #8]
    c624:	ldr	x9, [sp, #168]
    c628:	str	w8, [x9, #8]
    c62c:	ldr	x9, [sp, #128]
    c630:	ldr	x10, [sp, #112]
    c634:	cmp	x9, x10
    c638:	b.cs	c654 <inflateBackEnd@@ZLIB_1.2.0+0xb88>  // b.hs, b.nlast
    c63c:	ldr	x8, [sp, #112]
    c640:	ldr	x9, [sp, #128]
    c644:	subs	x8, x8, x9
    c648:	add	x8, x8, #0x101
    c64c:	str	x8, [sp]
    c650:	b	c66c <inflateBackEnd@@ZLIB_1.2.0+0xba0>
    c654:	ldr	x8, [sp, #128]
    c658:	ldr	x9, [sp, #112]
    c65c:	subs	x8, x8, x9
    c660:	mov	x9, #0x101                 	// #257
    c664:	subs	x8, x9, x8
    c668:	str	x8, [sp]
    c66c:	ldr	x8, [sp]
    c670:	ldr	x9, [sp, #168]
    c674:	str	w8, [x9, #32]
    c678:	ldr	x9, [sp, #80]
    c67c:	ldr	x10, [sp, #152]
    c680:	str	x9, [x10, #80]
    c684:	ldr	w8, [sp, #76]
    c688:	ldr	x9, [sp, #152]
    c68c:	str	w8, [x9, #88]
    c690:	add	sp, sp, #0xb0
    c694:	ret

000000000000c698 <inflateResetKeep@@ZLIB_1.2.5.2>:
    c698:	sub	sp, sp, #0x30
    c69c:	stp	x29, x30, [sp, #32]
    c6a0:	add	x29, sp, #0x20
    c6a4:	str	x0, [sp, #16]
    c6a8:	ldr	x0, [sp, #16]
    c6ac:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    c6b0:	cbz	w0, c6c0 <inflateResetKeep@@ZLIB_1.2.5.2+0x28>
    c6b4:	mov	w8, #0xfffffffe            	// #-2
    c6b8:	stur	w8, [x29, #-4]
    c6bc:	b	c798 <inflateResetKeep@@ZLIB_1.2.5.2+0x100>
    c6c0:	ldr	x8, [sp, #16]
    c6c4:	ldr	x8, [x8, #56]
    c6c8:	str	x8, [sp, #8]
    c6cc:	ldr	x8, [sp, #8]
    c6d0:	mov	x9, xzr
    c6d4:	str	xzr, [x8, #40]
    c6d8:	ldr	x8, [sp, #16]
    c6dc:	str	xzr, [x8, #40]
    c6e0:	ldr	x8, [sp, #16]
    c6e4:	str	xzr, [x8, #16]
    c6e8:	ldr	x8, [sp, #16]
    c6ec:	str	x9, [x8, #48]
    c6f0:	ldr	x8, [sp, #8]
    c6f4:	ldr	w10, [x8, #16]
    c6f8:	cbz	w10, c718 <inflateResetKeep@@ZLIB_1.2.5.2+0x80>
    c6fc:	ldr	x8, [sp, #8]
    c700:	ldr	w9, [x8, #16]
    c704:	and	w9, w9, #0x1
    c708:	mov	w0, w9
    c70c:	sxtw	x8, w0
    c710:	ldr	x10, [sp, #16]
    c714:	str	x8, [x10, #96]
    c718:	ldr	x8, [sp, #8]
    c71c:	mov	w9, #0x3f34                	// #16180
    c720:	str	w9, [x8, #8]
    c724:	ldr	x8, [sp, #8]
    c728:	str	wzr, [x8, #12]
    c72c:	ldr	x8, [sp, #8]
    c730:	str	wzr, [x8, #20]
    c734:	ldr	x8, [sp, #8]
    c738:	mov	w9, #0x8000                	// #32768
    c73c:	str	w9, [x8, #28]
    c740:	ldr	x8, [sp, #8]
    c744:	mov	x10, xzr
    c748:	str	x10, [x8, #48]
    c74c:	ldr	x8, [sp, #8]
    c750:	str	xzr, [x8, #80]
    c754:	ldr	x8, [sp, #8]
    c758:	str	wzr, [x8, #88]
    c75c:	ldr	x8, [sp, #8]
    c760:	add	x8, x8, #0x558
    c764:	ldr	x10, [sp, #8]
    c768:	str	x8, [x10, #144]
    c76c:	ldr	x10, [sp, #8]
    c770:	str	x8, [x10, #112]
    c774:	ldr	x10, [sp, #8]
    c778:	str	x8, [x10, #104]
    c77c:	ldr	x8, [sp, #8]
    c780:	mov	w9, #0x1                   	// #1
    c784:	str	w9, [x8, #7144]
    c788:	ldr	x8, [sp, #8]
    c78c:	mov	w9, #0xffffffff            	// #-1
    c790:	str	w9, [x8, #7148]
    c794:	stur	wzr, [x29, #-4]
    c798:	ldur	w0, [x29, #-4]
    c79c:	ldp	x29, x30, [sp, #32]
    c7a0:	add	sp, sp, #0x30
    c7a4:	ret
    c7a8:	sub	sp, sp, #0x20
    c7ac:	str	x0, [sp, #16]
    c7b0:	ldr	x8, [sp, #16]
    c7b4:	cbz	x8, c7d0 <inflateResetKeep@@ZLIB_1.2.5.2+0x138>
    c7b8:	ldr	x8, [sp, #16]
    c7bc:	ldr	x8, [x8, #64]
    c7c0:	cbz	x8, c7d0 <inflateResetKeep@@ZLIB_1.2.5.2+0x138>
    c7c4:	ldr	x8, [sp, #16]
    c7c8:	ldr	x8, [x8, #72]
    c7cc:	cbnz	x8, c7dc <inflateResetKeep@@ZLIB_1.2.5.2+0x144>
    c7d0:	mov	w8, #0x1                   	// #1
    c7d4:	str	w8, [sp, #28]
    c7d8:	b	c83c <inflateResetKeep@@ZLIB_1.2.5.2+0x1a4>
    c7dc:	ldr	x8, [sp, #16]
    c7e0:	ldr	x8, [x8, #56]
    c7e4:	str	x8, [sp, #8]
    c7e8:	ldr	x8, [sp, #8]
    c7ec:	cbz	x8, c82c <inflateResetKeep@@ZLIB_1.2.5.2+0x194>
    c7f0:	ldr	x8, [sp, #8]
    c7f4:	ldr	x8, [x8]
    c7f8:	ldr	x9, [sp, #16]
    c7fc:	cmp	x8, x9
    c800:	b.ne	c82c <inflateResetKeep@@ZLIB_1.2.5.2+0x194>  // b.any
    c804:	ldr	x8, [sp, #8]
    c808:	ldr	w9, [x8, #8]
    c80c:	mov	w10, #0x3f34                	// #16180
    c810:	cmp	w9, w10
    c814:	b.cc	c82c <inflateResetKeep@@ZLIB_1.2.5.2+0x194>  // b.lo, b.ul, b.last
    c818:	ldr	x8, [sp, #8]
    c81c:	ldr	w9, [x8, #8]
    c820:	mov	w10, #0x3f53                	// #16211
    c824:	cmp	w9, w10
    c828:	b.ls	c838 <inflateResetKeep@@ZLIB_1.2.5.2+0x1a0>  // b.plast
    c82c:	mov	w8, #0x1                   	// #1
    c830:	str	w8, [sp, #28]
    c834:	b	c83c <inflateResetKeep@@ZLIB_1.2.5.2+0x1a4>
    c838:	str	wzr, [sp, #28]
    c83c:	ldr	w0, [sp, #28]
    c840:	add	sp, sp, #0x20
    c844:	ret

000000000000c848 <inflateReset@@Base>:
    c848:	sub	sp, sp, #0x30
    c84c:	stp	x29, x30, [sp, #32]
    c850:	add	x29, sp, #0x20
    c854:	str	x0, [sp, #16]
    c858:	ldr	x0, [sp, #16]
    c85c:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    c860:	cbz	w0, c870 <inflateReset@@Base+0x28>
    c864:	mov	w8, #0xfffffffe            	// #-2
    c868:	stur	w8, [x29, #-4]
    c86c:	b	c8a0 <inflateReset@@Base+0x58>
    c870:	ldr	x8, [sp, #16]
    c874:	ldr	x8, [x8, #56]
    c878:	str	x8, [sp, #8]
    c87c:	ldr	x8, [sp, #8]
    c880:	str	wzr, [x8, #60]
    c884:	ldr	x8, [sp, #8]
    c888:	str	wzr, [x8, #64]
    c88c:	ldr	x8, [sp, #8]
    c890:	str	wzr, [x8, #68]
    c894:	ldr	x0, [sp, #16]
    c898:	bl	2440 <inflateResetKeep@plt>
    c89c:	stur	w0, [x29, #-4]
    c8a0:	ldur	w0, [x29, #-4]
    c8a4:	ldp	x29, x30, [sp, #32]
    c8a8:	add	sp, sp, #0x30
    c8ac:	ret

000000000000c8b0 <inflateReset2@@ZLIB_1.2.3.4>:
    c8b0:	sub	sp, sp, #0x30
    c8b4:	stp	x29, x30, [sp, #32]
    c8b8:	add	x29, sp, #0x20
    c8bc:	str	x0, [sp, #16]
    c8c0:	str	w1, [sp, #12]
    c8c4:	ldr	x0, [sp, #16]
    c8c8:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    c8cc:	cbz	w0, c8dc <inflateReset2@@ZLIB_1.2.3.4+0x2c>
    c8d0:	mov	w8, #0xfffffffe            	// #-2
    c8d4:	stur	w8, [x29, #-4]
    c8d8:	b	c9d0 <inflateReset2@@ZLIB_1.2.3.4+0x120>
    c8dc:	ldr	x8, [sp, #16]
    c8e0:	ldr	x8, [x8, #56]
    c8e4:	str	x8, [sp]
    c8e8:	ldr	w9, [sp, #12]
    c8ec:	cmp	w9, #0x0
    c8f0:	cset	w9, ge  // ge = tcont
    c8f4:	tbnz	w9, #0, c910 <inflateReset2@@ZLIB_1.2.3.4+0x60>
    c8f8:	mov	w8, wzr
    c8fc:	str	wzr, [sp, #8]
    c900:	ldr	w9, [sp, #12]
    c904:	subs	w8, w8, w9
    c908:	str	w8, [sp, #12]
    c90c:	b	c938 <inflateReset2@@ZLIB_1.2.3.4+0x88>
    c910:	ldr	w8, [sp, #12]
    c914:	asr	w8, w8, #4
    c918:	add	w8, w8, #0x5
    c91c:	str	w8, [sp, #8]
    c920:	ldr	w8, [sp, #12]
    c924:	cmp	w8, #0x30
    c928:	b.ge	c938 <inflateReset2@@ZLIB_1.2.3.4+0x88>  // b.tcont
    c92c:	ldr	w8, [sp, #12]
    c930:	and	w8, w8, #0xf
    c934:	str	w8, [sp, #12]
    c938:	ldr	w8, [sp, #12]
    c93c:	cbz	w8, c964 <inflateReset2@@ZLIB_1.2.3.4+0xb4>
    c940:	ldr	w8, [sp, #12]
    c944:	cmp	w8, #0x8
    c948:	b.lt	c958 <inflateReset2@@ZLIB_1.2.3.4+0xa8>  // b.tstop
    c94c:	ldr	w8, [sp, #12]
    c950:	cmp	w8, #0xf
    c954:	b.le	c964 <inflateReset2@@ZLIB_1.2.3.4+0xb4>
    c958:	mov	w8, #0xfffffffe            	// #-2
    c95c:	stur	w8, [x29, #-4]
    c960:	b	c9d0 <inflateReset2@@ZLIB_1.2.3.4+0x120>
    c964:	ldr	x8, [sp]
    c968:	ldr	x8, [x8, #72]
    c96c:	cbz	x8, c9ac <inflateReset2@@ZLIB_1.2.3.4+0xfc>
    c970:	ldr	x8, [sp]
    c974:	ldr	w9, [x8, #56]
    c978:	ldr	w10, [sp, #12]
    c97c:	cmp	w9, w10
    c980:	b.eq	c9ac <inflateReset2@@ZLIB_1.2.3.4+0xfc>  // b.none
    c984:	ldr	x8, [sp, #16]
    c988:	ldr	x8, [x8, #72]
    c98c:	ldr	x9, [sp, #16]
    c990:	ldr	x0, [x9, #80]
    c994:	ldr	x9, [sp]
    c998:	ldr	x1, [x9, #72]
    c99c:	blr	x8
    c9a0:	ldr	x8, [sp]
    c9a4:	mov	x9, xzr
    c9a8:	str	x9, [x8, #72]
    c9ac:	ldr	w8, [sp, #8]
    c9b0:	ldr	x9, [sp]
    c9b4:	str	w8, [x9, #16]
    c9b8:	ldr	w8, [sp, #12]
    c9bc:	ldr	x9, [sp]
    c9c0:	str	w8, [x9, #56]
    c9c4:	ldr	x0, [sp, #16]
    c9c8:	bl	2610 <inflateReset@plt>
    c9cc:	stur	w0, [x29, #-4]
    c9d0:	ldur	w0, [x29, #-4]
    c9d4:	ldp	x29, x30, [sp, #32]
    c9d8:	add	sp, sp, #0x30
    c9dc:	ret

000000000000c9e0 <inflateInit2_@@Base>:
    c9e0:	sub	sp, sp, #0x40
    c9e4:	stp	x29, x30, [sp, #48]
    c9e8:	add	x29, sp, #0x30
    c9ec:	stur	x0, [x29, #-16]
    c9f0:	stur	w1, [x29, #-20]
    c9f4:	str	x2, [sp, #16]
    c9f8:	str	w3, [sp, #12]
    c9fc:	ldr	x8, [sp, #16]
    ca00:	cbz	x8, ca2c <inflateInit2_@@Base+0x4c>
    ca04:	ldr	x8, [sp, #16]
    ca08:	ldrb	w9, [x8]
    ca0c:	adrp	x8, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    ca10:	add	x8, x8, #0xf2a
    ca14:	ldrb	w10, [x8]
    ca18:	cmp	w9, w10
    ca1c:	b.ne	ca2c <inflateInit2_@@Base+0x4c>  // b.any
    ca20:	ldr	w8, [sp, #12]
    ca24:	cmp	w8, #0x70
    ca28:	b.eq	ca38 <inflateInit2_@@Base+0x58>  // b.none
    ca2c:	mov	w8, #0xfffffffa            	// #-6
    ca30:	stur	w8, [x29, #-4]
    ca34:	b	cb44 <inflateInit2_@@Base+0x164>
    ca38:	ldur	x8, [x29, #-16]
    ca3c:	cbnz	x8, ca4c <inflateInit2_@@Base+0x6c>
    ca40:	mov	w8, #0xfffffffe            	// #-2
    ca44:	stur	w8, [x29, #-4]
    ca48:	b	cb44 <inflateInit2_@@Base+0x164>
    ca4c:	ldur	x8, [x29, #-16]
    ca50:	mov	x9, xzr
    ca54:	str	x9, [x8, #48]
    ca58:	ldur	x8, [x29, #-16]
    ca5c:	ldr	x8, [x8, #64]
    ca60:	cbnz	x8, ca80 <inflateInit2_@@Base+0xa0>
    ca64:	ldur	x8, [x29, #-16]
    ca68:	adrp	x9, 14000 <inflateCodesUsed@@ZLIB_1.2.9+0x3ba4>
    ca6c:	add	x9, x9, #0x644
    ca70:	str	x9, [x8, #64]
    ca74:	ldur	x8, [x29, #-16]
    ca78:	mov	x9, xzr
    ca7c:	str	x9, [x8, #80]
    ca80:	ldur	x8, [x29, #-16]
    ca84:	ldr	x8, [x8, #72]
    ca88:	cbnz	x8, ca9c <inflateInit2_@@Base+0xbc>
    ca8c:	ldur	x8, [x29, #-16]
    ca90:	adrp	x9, 14000 <inflateCodesUsed@@ZLIB_1.2.9+0x3ba4>
    ca94:	add	x9, x9, #0x680
    ca98:	str	x9, [x8, #72]
    ca9c:	ldur	x8, [x29, #-16]
    caa0:	ldr	x8, [x8, #64]
    caa4:	ldur	x9, [x29, #-16]
    caa8:	ldr	x0, [x9, #80]
    caac:	mov	w1, #0x1                   	// #1
    cab0:	mov	w2, #0x1bf8                	// #7160
    cab4:	blr	x8
    cab8:	str	x0, [sp]
    cabc:	ldr	x8, [sp]
    cac0:	cbnz	x8, cad0 <inflateInit2_@@Base+0xf0>
    cac4:	mov	w8, #0xfffffffc            	// #-4
    cac8:	stur	w8, [x29, #-4]
    cacc:	b	cb44 <inflateInit2_@@Base+0x164>
    cad0:	ldr	x8, [sp]
    cad4:	ldur	x9, [x29, #-16]
    cad8:	str	x8, [x9, #56]
    cadc:	ldur	x8, [x29, #-16]
    cae0:	ldr	x9, [sp]
    cae4:	str	x8, [x9]
    cae8:	ldr	x8, [sp]
    caec:	mov	x9, xzr
    caf0:	str	x9, [x8, #72]
    caf4:	ldr	x8, [sp]
    caf8:	mov	w10, #0x3f34                	// #16180
    cafc:	str	w10, [x8, #8]
    cb00:	ldur	x0, [x29, #-16]
    cb04:	ldur	w1, [x29, #-20]
    cb08:	bl	2640 <inflateReset2@plt>
    cb0c:	str	w0, [sp, #8]
    cb10:	ldr	w10, [sp, #8]
    cb14:	cbz	w10, cb3c <inflateInit2_@@Base+0x15c>
    cb18:	ldur	x8, [x29, #-16]
    cb1c:	ldr	x8, [x8, #72]
    cb20:	ldur	x9, [x29, #-16]
    cb24:	ldr	x0, [x9, #80]
    cb28:	ldr	x1, [sp]
    cb2c:	blr	x8
    cb30:	ldur	x8, [x29, #-16]
    cb34:	mov	x9, xzr
    cb38:	str	x9, [x8, #56]
    cb3c:	ldr	w8, [sp, #8]
    cb40:	stur	w8, [x29, #-4]
    cb44:	ldur	w0, [x29, #-4]
    cb48:	ldp	x29, x30, [sp, #48]
    cb4c:	add	sp, sp, #0x40
    cb50:	ret

000000000000cb54 <inflateInit_@@Base>:
    cb54:	sub	sp, sp, #0x30
    cb58:	stp	x29, x30, [sp, #32]
    cb5c:	add	x29, sp, #0x20
    cb60:	mov	w8, #0xf                   	// #15
    cb64:	stur	x0, [x29, #-8]
    cb68:	str	x1, [sp, #16]
    cb6c:	str	w2, [sp, #12]
    cb70:	ldur	x0, [x29, #-8]
    cb74:	ldr	x2, [sp, #16]
    cb78:	ldr	w3, [sp, #12]
    cb7c:	mov	w1, w8
    cb80:	bl	2600 <inflateInit2_@plt>
    cb84:	ldp	x29, x30, [sp, #32]
    cb88:	add	sp, sp, #0x30
    cb8c:	ret

000000000000cb90 <inflatePrime@@ZLIB_1.2.2.4>:
    cb90:	sub	sp, sp, #0x30
    cb94:	stp	x29, x30, [sp, #32]
    cb98:	add	x29, sp, #0x20
    cb9c:	str	x0, [sp, #16]
    cba0:	str	w1, [sp, #12]
    cba4:	str	w2, [sp, #8]
    cba8:	ldr	x0, [sp, #16]
    cbac:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    cbb0:	cbz	w0, cbc0 <inflatePrime@@ZLIB_1.2.2.4+0x30>
    cbb4:	mov	w8, #0xfffffffe            	// #-2
    cbb8:	stur	w8, [x29, #-4]
    cbbc:	b	cc84 <inflatePrime@@ZLIB_1.2.2.4+0xf4>
    cbc0:	ldr	x8, [sp, #16]
    cbc4:	ldr	x8, [x8, #56]
    cbc8:	str	x8, [sp]
    cbcc:	ldr	w9, [sp, #12]
    cbd0:	cmp	w9, #0x0
    cbd4:	cset	w9, ge  // ge = tcont
    cbd8:	tbnz	w9, #0, cbf4 <inflatePrime@@ZLIB_1.2.2.4+0x64>
    cbdc:	ldr	x8, [sp]
    cbe0:	str	xzr, [x8, #80]
    cbe4:	ldr	x8, [sp]
    cbe8:	str	wzr, [x8, #88]
    cbec:	stur	wzr, [x29, #-4]
    cbf0:	b	cc84 <inflatePrime@@ZLIB_1.2.2.4+0xf4>
    cbf4:	ldr	w8, [sp, #12]
    cbf8:	cmp	w8, #0x10
    cbfc:	b.gt	cc18 <inflatePrime@@ZLIB_1.2.2.4+0x88>
    cc00:	ldr	x8, [sp]
    cc04:	ldr	w9, [x8, #88]
    cc08:	ldr	w10, [sp, #12]
    cc0c:	add	w9, w9, w10
    cc10:	cmp	w9, #0x20
    cc14:	b.ls	cc24 <inflatePrime@@ZLIB_1.2.2.4+0x94>  // b.plast
    cc18:	mov	w8, #0xfffffffe            	// #-2
    cc1c:	stur	w8, [x29, #-4]
    cc20:	b	cc84 <inflatePrime@@ZLIB_1.2.2.4+0xf4>
    cc24:	ldr	w8, [sp, #12]
    cc28:	mov	w9, w8
    cc2c:	mov	x10, #0x1                   	// #1
    cc30:	lsl	x9, x10, x9
    cc34:	subs	x9, x9, #0x1
    cc38:	ldrsw	x10, [sp, #8]
    cc3c:	and	x9, x10, x9
    cc40:	str	w9, [sp, #8]
    cc44:	ldr	w8, [sp, #8]
    cc48:	ldr	x10, [sp]
    cc4c:	ldr	w9, [x10, #88]
    cc50:	lsl	w8, w8, w9
    cc54:	mov	w10, w8
    cc58:	ubfx	x10, x10, #0, #32
    cc5c:	ldr	x11, [sp]
    cc60:	ldr	x12, [x11, #80]
    cc64:	add	x10, x12, x10
    cc68:	str	x10, [x11, #80]
    cc6c:	ldr	w8, [sp, #12]
    cc70:	ldr	x10, [sp]
    cc74:	ldr	w9, [x10, #88]
    cc78:	add	w8, w9, w8
    cc7c:	str	w8, [x10, #88]
    cc80:	stur	wzr, [x29, #-4]
    cc84:	ldur	w0, [x29, #-4]
    cc88:	ldp	x29, x30, [sp, #32]
    cc8c:	add	sp, sp, #0x30
    cc90:	ret

000000000000cc94 <inflate@@Base>:
    cc94:	sub	sp, sp, #0xd0
    cc98:	stp	x29, x30, [sp, #192]
    cc9c:	add	x29, sp, #0xc0
    cca0:	stur	x0, [x29, #-16]
    cca4:	stur	w1, [x29, #-20]
    cca8:	ldur	x0, [x29, #-16]
    ccac:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    ccb0:	cbnz	w0, ccd8 <inflate@@Base+0x44>
    ccb4:	ldur	x8, [x29, #-16]
    ccb8:	ldr	x8, [x8, #24]
    ccbc:	cbz	x8, ccd8 <inflate@@Base+0x44>
    ccc0:	ldur	x8, [x29, #-16]
    ccc4:	ldr	x8, [x8]
    ccc8:	cbnz	x8, cce4 <inflate@@Base+0x50>
    cccc:	ldur	x8, [x29, #-16]
    ccd0:	ldr	w9, [x8, #8]
    ccd4:	cbz	w9, cce4 <inflate@@Base+0x50>
    ccd8:	mov	w8, #0xfffffffe            	// #-2
    ccdc:	stur	w8, [x29, #-4]
    cce0:	b	f724 <inflate@@Base+0x2a90>
    cce4:	ldur	x8, [x29, #-16]
    cce8:	ldr	x8, [x8, #56]
    ccec:	stur	x8, [x29, #-32]
    ccf0:	ldur	x8, [x29, #-32]
    ccf4:	ldr	w9, [x8, #8]
    ccf8:	mov	w10, #0x3f3f                	// #16191
    ccfc:	cmp	w9, w10
    cd00:	b.ne	cd10 <inflate@@Base+0x7c>  // b.any
    cd04:	ldur	x8, [x29, #-32]
    cd08:	mov	w9, #0x3f40                	// #16192
    cd0c:	str	w9, [x8, #8]
    cd10:	ldur	x8, [x29, #-16]
    cd14:	ldr	x8, [x8, #24]
    cd18:	stur	x8, [x29, #-48]
    cd1c:	ldur	x8, [x29, #-16]
    cd20:	ldr	w9, [x8, #32]
    cd24:	stur	w9, [x29, #-56]
    cd28:	ldur	x8, [x29, #-16]
    cd2c:	ldr	x8, [x8]
    cd30:	stur	x8, [x29, #-40]
    cd34:	ldur	x8, [x29, #-16]
    cd38:	ldr	w9, [x8, #8]
    cd3c:	stur	w9, [x29, #-52]
    cd40:	ldur	x8, [x29, #-32]
    cd44:	ldr	x8, [x8, #80]
    cd48:	stur	x8, [x29, #-64]
    cd4c:	ldur	x8, [x29, #-32]
    cd50:	ldr	w9, [x8, #88]
    cd54:	stur	w9, [x29, #-68]
    cd58:	ldur	w8, [x29, #-52]
    cd5c:	stur	w8, [x29, #-72]
    cd60:	ldur	w8, [x29, #-56]
    cd64:	stur	w8, [x29, #-76]
    cd68:	str	wzr, [sp, #88]
    cd6c:	ldur	x8, [x29, #-32]
    cd70:	ldr	w9, [x8, #8]
    cd74:	mov	w10, #0x3f34                	// #16180
    cd78:	subs	w9, w9, w10
    cd7c:	mov	w8, w9
    cd80:	ubfx	x8, x8, #0, #32
    cd84:	cmp	x8, #0x1f
    cd88:	str	x8, [sp, #72]
    cd8c:	b.hi	f460 <inflate@@Base+0x27cc>  // b.pmore
    cd90:	adrp	x8, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    cd94:	add	x8, x8, #0x60
    cd98:	ldr	x11, [sp, #72]
    cd9c:	ldrsw	x10, [x8, x11, lsl #2]
    cda0:	add	x9, x8, x10
    cda4:	br	x9
    cda8:	ldur	x8, [x29, #-32]
    cdac:	ldr	w9, [x8, #16]
    cdb0:	cbnz	w9, cdc4 <inflate@@Base+0x130>
    cdb4:	ldur	x8, [x29, #-32]
    cdb8:	mov	w9, #0x3f40                	// #16192
    cdbc:	str	w9, [x8, #8]
    cdc0:	b	f46c <inflate@@Base+0x27d8>
    cdc4:	ldur	w8, [x29, #-68]
    cdc8:	cmp	w8, #0x10
    cdcc:	b.cs	ce24 <inflate@@Base+0x190>  // b.hs, b.nlast
    cdd0:	ldur	w8, [x29, #-52]
    cdd4:	cbnz	w8, cddc <inflate@@Base+0x148>
    cdd8:	b	f470 <inflate@@Base+0x27dc>
    cddc:	ldur	w8, [x29, #-52]
    cde0:	subs	w8, w8, #0x1
    cde4:	stur	w8, [x29, #-52]
    cde8:	ldur	x9, [x29, #-40]
    cdec:	add	x10, x9, #0x1
    cdf0:	stur	x10, [x29, #-40]
    cdf4:	ldrb	w8, [x9]
    cdf8:	mov	w9, w8
    cdfc:	ldur	w8, [x29, #-68]
    ce00:	mov	w10, w8
    ce04:	lsl	x9, x9, x10
    ce08:	ldur	x10, [x29, #-64]
    ce0c:	add	x9, x10, x9
    ce10:	stur	x9, [x29, #-64]
    ce14:	ldur	w8, [x29, #-68]
    ce18:	add	w8, w8, #0x8
    ce1c:	stur	w8, [x29, #-68]
    ce20:	b	cdc4 <inflate@@Base+0x130>
    ce24:	ldur	x8, [x29, #-32]
    ce28:	ldr	w9, [x8, #16]
    ce2c:	and	w9, w9, #0x2
    ce30:	cbz	w9, cec8 <inflate@@Base+0x234>
    ce34:	ldur	x8, [x29, #-64]
    ce38:	mov	x9, #0x8b1f                	// #35615
    ce3c:	cmp	x8, x9
    ce40:	b.ne	cec8 <inflate@@Base+0x234>  // b.any
    ce44:	ldur	x8, [x29, #-32]
    ce48:	ldr	w9, [x8, #56]
    ce4c:	cbnz	w9, ce5c <inflate@@Base+0x1c8>
    ce50:	ldur	x8, [x29, #-32]
    ce54:	mov	w9, #0xf                   	// #15
    ce58:	str	w9, [x8, #56]
    ce5c:	mov	x8, xzr
    ce60:	mov	x0, x8
    ce64:	mov	x1, x8
    ce68:	mov	w9, wzr
    ce6c:	mov	w2, w9
    ce70:	bl	2430 <crc32@plt>
    ce74:	ldur	x8, [x29, #-32]
    ce78:	str	x0, [x8, #32]
    ce7c:	ldur	x8, [x29, #-64]
    ce80:	add	x9, sp, #0x54
    ce84:	strb	w8, [sp, #84]
    ce88:	ldur	x10, [x29, #-64]
    ce8c:	lsr	x10, x10, #8
    ce90:	strb	w10, [x9, #1]
    ce94:	ldur	x11, [x29, #-32]
    ce98:	ldr	x0, [x11, #32]
    ce9c:	mov	x1, x9
    cea0:	mov	w2, #0x2                   	// #2
    cea4:	bl	2430 <crc32@plt>
    cea8:	ldur	x9, [x29, #-32]
    ceac:	str	x0, [x9, #32]
    ceb0:	stur	xzr, [x29, #-64]
    ceb4:	stur	wzr, [x29, #-68]
    ceb8:	ldur	x8, [x29, #-32]
    cebc:	mov	w9, #0x3f35                	// #16181
    cec0:	str	w9, [x8, #8]
    cec4:	b	f46c <inflate@@Base+0x27d8>
    cec8:	ldur	x8, [x29, #-32]
    cecc:	str	wzr, [x8, #24]
    ced0:	ldur	x8, [x29, #-32]
    ced4:	ldr	x8, [x8, #48]
    ced8:	cbz	x8, ceec <inflate@@Base+0x258>
    cedc:	ldur	x8, [x29, #-32]
    cee0:	ldr	x8, [x8, #48]
    cee4:	mov	w9, #0xffffffff            	// #-1
    cee8:	str	w9, [x8, #72]
    ceec:	ldur	x8, [x29, #-32]
    cef0:	ldr	w9, [x8, #16]
    cef4:	and	w9, w9, #0x1
    cef8:	cbz	w9, cf2c <inflate@@Base+0x298>
    cefc:	ldur	x8, [x29, #-64]
    cf00:	and	w8, w8, #0xff
    cf04:	lsl	w8, w8, #8
    cf08:	mov	w9, w8
    cf0c:	ubfx	x9, x9, #0, #32
    cf10:	ldur	x10, [x29, #-64]
    cf14:	add	x9, x9, x10, lsr #8
    cf18:	mov	x10, #0x1f                  	// #31
    cf1c:	udiv	x11, x9, x10
    cf20:	mul	x10, x11, x10
    cf24:	subs	x9, x9, x10
    cf28:	cbz	x9, cf4c <inflate@@Base+0x2b8>
    cf2c:	ldur	x8, [x29, #-16]
    cf30:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    cf34:	add	x9, x9, #0x996
    cf38:	str	x9, [x8, #48]
    cf3c:	ldur	x8, [x29, #-32]
    cf40:	mov	w10, #0x3f51                	// #16209
    cf44:	str	w10, [x8, #8]
    cf48:	b	f46c <inflate@@Base+0x27d8>
    cf4c:	ldur	x8, [x29, #-64]
    cf50:	and	w8, w8, #0xf
    cf54:	cmp	w8, #0x8
    cf58:	b.eq	cf7c <inflate@@Base+0x2e8>  // b.none
    cf5c:	ldur	x8, [x29, #-16]
    cf60:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    cf64:	add	x9, x9, #0x9ad
    cf68:	str	x9, [x8, #48]
    cf6c:	ldur	x8, [x29, #-32]
    cf70:	mov	w10, #0x3f51                	// #16209
    cf74:	str	w10, [x8, #8]
    cf78:	b	f46c <inflate@@Base+0x27d8>
    cf7c:	ldur	x8, [x29, #-64]
    cf80:	lsr	x8, x8, #4
    cf84:	stur	x8, [x29, #-64]
    cf88:	ldur	w9, [x29, #-68]
    cf8c:	subs	w9, w9, #0x4
    cf90:	stur	w9, [x29, #-68]
    cf94:	ldur	x8, [x29, #-64]
    cf98:	and	w8, w8, #0xf
    cf9c:	add	w8, w8, #0x8
    cfa0:	str	w8, [sp, #92]
    cfa4:	ldur	x9, [x29, #-32]
    cfa8:	ldr	w8, [x9, #56]
    cfac:	cbnz	w8, cfbc <inflate@@Base+0x328>
    cfb0:	ldr	w8, [sp, #92]
    cfb4:	ldur	x9, [x29, #-32]
    cfb8:	str	w8, [x9, #56]
    cfbc:	ldr	w8, [sp, #92]
    cfc0:	cmp	w8, #0xf
    cfc4:	b.hi	cfdc <inflate@@Base+0x348>  // b.pmore
    cfc8:	ldr	w8, [sp, #92]
    cfcc:	ldur	x9, [x29, #-32]
    cfd0:	ldr	w10, [x9, #56]
    cfd4:	cmp	w8, w10
    cfd8:	b.ls	cffc <inflate@@Base+0x368>  // b.plast
    cfdc:	ldur	x8, [x29, #-16]
    cfe0:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    cfe4:	add	x9, x9, #0x9c8
    cfe8:	str	x9, [x8, #48]
    cfec:	ldur	x8, [x29, #-32]
    cff0:	mov	w10, #0x3f51                	// #16209
    cff4:	str	w10, [x8, #8]
    cff8:	b	f46c <inflate@@Base+0x27d8>
    cffc:	ldr	w8, [sp, #92]
    d000:	mov	w9, #0x1                   	// #1
    d004:	lsl	w8, w9, w8
    d008:	ldur	x10, [x29, #-32]
    d00c:	str	w8, [x10, #28]
    d010:	mov	x10, xzr
    d014:	mov	x0, x10
    d018:	mov	x1, x10
    d01c:	mov	w8, wzr
    d020:	mov	w2, w8
    d024:	bl	2560 <adler32@plt>
    d028:	ldur	x10, [x29, #-32]
    d02c:	str	x0, [x10, #32]
    d030:	ldur	x10, [x29, #-16]
    d034:	str	x0, [x10, #96]
    d038:	ldur	x10, [x29, #-64]
    d03c:	mov	w8, #0x3f3d                	// #16189
    d040:	mov	w9, #0x3f3f                	// #16191
    d044:	tst	x10, #0x200
    d048:	csel	w8, w8, w9, ne  // ne = any
    d04c:	ldur	x10, [x29, #-32]
    d050:	str	w8, [x10, #8]
    d054:	stur	xzr, [x29, #-64]
    d058:	stur	wzr, [x29, #-68]
    d05c:	b	f46c <inflate@@Base+0x27d8>
    d060:	ldur	w8, [x29, #-68]
    d064:	cmp	w8, #0x10
    d068:	b.cs	d0c0 <inflate@@Base+0x42c>  // b.hs, b.nlast
    d06c:	ldur	w8, [x29, #-52]
    d070:	cbnz	w8, d078 <inflate@@Base+0x3e4>
    d074:	b	f470 <inflate@@Base+0x27dc>
    d078:	ldur	w8, [x29, #-52]
    d07c:	subs	w8, w8, #0x1
    d080:	stur	w8, [x29, #-52]
    d084:	ldur	x9, [x29, #-40]
    d088:	add	x10, x9, #0x1
    d08c:	stur	x10, [x29, #-40]
    d090:	ldrb	w8, [x9]
    d094:	mov	w9, w8
    d098:	ldur	w8, [x29, #-68]
    d09c:	mov	w10, w8
    d0a0:	lsl	x9, x9, x10
    d0a4:	ldur	x10, [x29, #-64]
    d0a8:	add	x9, x10, x9
    d0ac:	stur	x9, [x29, #-64]
    d0b0:	ldur	w8, [x29, #-68]
    d0b4:	add	w8, w8, #0x8
    d0b8:	stur	w8, [x29, #-68]
    d0bc:	b	d060 <inflate@@Base+0x3cc>
    d0c0:	ldur	x8, [x29, #-64]
    d0c4:	ldur	x9, [x29, #-32]
    d0c8:	str	w8, [x9, #24]
    d0cc:	ldur	x9, [x29, #-32]
    d0d0:	ldr	w8, [x9, #24]
    d0d4:	and	w8, w8, #0xff
    d0d8:	cmp	w8, #0x8
    d0dc:	b.eq	d100 <inflate@@Base+0x46c>  // b.none
    d0e0:	ldur	x8, [x29, #-16]
    d0e4:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    d0e8:	add	x9, x9, #0x9ad
    d0ec:	str	x9, [x8, #48]
    d0f0:	ldur	x8, [x29, #-32]
    d0f4:	mov	w10, #0x3f51                	// #16209
    d0f8:	str	w10, [x8, #8]
    d0fc:	b	f46c <inflate@@Base+0x27d8>
    d100:	ldur	x8, [x29, #-32]
    d104:	ldr	w9, [x8, #24]
    d108:	and	w9, w9, #0xe000
    d10c:	cbz	w9, d130 <inflate@@Base+0x49c>
    d110:	ldur	x8, [x29, #-16]
    d114:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    d118:	add	x9, x9, #0x9dc
    d11c:	str	x9, [x8, #48]
    d120:	ldur	x8, [x29, #-32]
    d124:	mov	w10, #0x3f51                	// #16209
    d128:	str	w10, [x8, #8]
    d12c:	b	f46c <inflate@@Base+0x27d8>
    d130:	ldur	x8, [x29, #-32]
    d134:	ldr	x8, [x8, #48]
    d138:	cbz	x8, d154 <inflate@@Base+0x4c0>
    d13c:	ldur	x8, [x29, #-64]
    d140:	lsr	x8, x8, #8
    d144:	and	x8, x8, #0x1
    d148:	ldur	x9, [x29, #-32]
    d14c:	ldr	x9, [x9, #48]
    d150:	str	w8, [x9]
    d154:	ldur	x8, [x29, #-32]
    d158:	ldr	w9, [x8, #24]
    d15c:	and	w9, w9, #0x200
    d160:	cbz	w9, d1a8 <inflate@@Base+0x514>
    d164:	ldur	x8, [x29, #-32]
    d168:	ldr	w9, [x8, #16]
    d16c:	and	w9, w9, #0x4
    d170:	cbz	w9, d1a8 <inflate@@Base+0x514>
    d174:	ldur	x8, [x29, #-64]
    d178:	add	x9, sp, #0x54
    d17c:	strb	w8, [sp, #84]
    d180:	ldur	x10, [x29, #-64]
    d184:	lsr	x10, x10, #8
    d188:	strb	w10, [x9, #1]
    d18c:	ldur	x11, [x29, #-32]
    d190:	ldr	x0, [x11, #32]
    d194:	mov	x1, x9
    d198:	mov	w2, #0x2                   	// #2
    d19c:	bl	2430 <crc32@plt>
    d1a0:	ldur	x9, [x29, #-32]
    d1a4:	str	x0, [x9, #32]
    d1a8:	stur	xzr, [x29, #-64]
    d1ac:	stur	wzr, [x29, #-68]
    d1b0:	ldur	x8, [x29, #-32]
    d1b4:	mov	w9, #0x3f36                	// #16182
    d1b8:	str	w9, [x8, #8]
    d1bc:	ldur	w8, [x29, #-68]
    d1c0:	cmp	w8, #0x20
    d1c4:	b.cs	d21c <inflate@@Base+0x588>  // b.hs, b.nlast
    d1c8:	ldur	w8, [x29, #-52]
    d1cc:	cbnz	w8, d1d4 <inflate@@Base+0x540>
    d1d0:	b	f470 <inflate@@Base+0x27dc>
    d1d4:	ldur	w8, [x29, #-52]
    d1d8:	subs	w8, w8, #0x1
    d1dc:	stur	w8, [x29, #-52]
    d1e0:	ldur	x9, [x29, #-40]
    d1e4:	add	x10, x9, #0x1
    d1e8:	stur	x10, [x29, #-40]
    d1ec:	ldrb	w8, [x9]
    d1f0:	mov	w9, w8
    d1f4:	ldur	w8, [x29, #-68]
    d1f8:	mov	w10, w8
    d1fc:	lsl	x9, x9, x10
    d200:	ldur	x10, [x29, #-64]
    d204:	add	x9, x10, x9
    d208:	stur	x9, [x29, #-64]
    d20c:	ldur	w8, [x29, #-68]
    d210:	add	w8, w8, #0x8
    d214:	stur	w8, [x29, #-68]
    d218:	b	d1bc <inflate@@Base+0x528>
    d21c:	ldur	x8, [x29, #-32]
    d220:	ldr	x8, [x8, #48]
    d224:	cbz	x8, d238 <inflate@@Base+0x5a4>
    d228:	ldur	x8, [x29, #-64]
    d22c:	ldur	x9, [x29, #-32]
    d230:	ldr	x9, [x9, #48]
    d234:	str	x8, [x9, #8]
    d238:	ldur	x8, [x29, #-32]
    d23c:	ldr	w9, [x8, #24]
    d240:	and	w9, w9, #0x200
    d244:	cbz	w9, d2a4 <inflate@@Base+0x610>
    d248:	ldur	x8, [x29, #-32]
    d24c:	ldr	w9, [x8, #16]
    d250:	and	w9, w9, #0x4
    d254:	cbz	w9, d2a4 <inflate@@Base+0x610>
    d258:	ldur	x8, [x29, #-64]
    d25c:	add	x9, sp, #0x54
    d260:	strb	w8, [sp, #84]
    d264:	ldur	x10, [x29, #-64]
    d268:	lsr	x10, x10, #8
    d26c:	strb	w10, [x9, #1]
    d270:	ldur	x11, [x29, #-64]
    d274:	lsr	x11, x11, #16
    d278:	strb	w11, [x9, #2]
    d27c:	ldur	x12, [x29, #-64]
    d280:	lsr	x12, x12, #24
    d284:	strb	w12, [x9, #3]
    d288:	ldur	x13, [x29, #-32]
    d28c:	ldr	x0, [x13, #32]
    d290:	mov	x1, x9
    d294:	mov	w2, #0x4                   	// #4
    d298:	bl	2430 <crc32@plt>
    d29c:	ldur	x9, [x29, #-32]
    d2a0:	str	x0, [x9, #32]
    d2a4:	stur	xzr, [x29, #-64]
    d2a8:	stur	wzr, [x29, #-68]
    d2ac:	ldur	x8, [x29, #-32]
    d2b0:	mov	w9, #0x3f37                	// #16183
    d2b4:	str	w9, [x8, #8]
    d2b8:	ldur	w8, [x29, #-68]
    d2bc:	cmp	w8, #0x10
    d2c0:	b.cs	d318 <inflate@@Base+0x684>  // b.hs, b.nlast
    d2c4:	ldur	w8, [x29, #-52]
    d2c8:	cbnz	w8, d2d0 <inflate@@Base+0x63c>
    d2cc:	b	f470 <inflate@@Base+0x27dc>
    d2d0:	ldur	w8, [x29, #-52]
    d2d4:	subs	w8, w8, #0x1
    d2d8:	stur	w8, [x29, #-52]
    d2dc:	ldur	x9, [x29, #-40]
    d2e0:	add	x10, x9, #0x1
    d2e4:	stur	x10, [x29, #-40]
    d2e8:	ldrb	w8, [x9]
    d2ec:	mov	w9, w8
    d2f0:	ldur	w8, [x29, #-68]
    d2f4:	mov	w10, w8
    d2f8:	lsl	x9, x9, x10
    d2fc:	ldur	x10, [x29, #-64]
    d300:	add	x9, x10, x9
    d304:	stur	x9, [x29, #-64]
    d308:	ldur	w8, [x29, #-68]
    d30c:	add	w8, w8, #0x8
    d310:	stur	w8, [x29, #-68]
    d314:	b	d2b8 <inflate@@Base+0x624>
    d318:	ldur	x8, [x29, #-32]
    d31c:	ldr	x8, [x8, #48]
    d320:	cbz	x8, d34c <inflate@@Base+0x6b8>
    d324:	ldur	x8, [x29, #-64]
    d328:	and	x8, x8, #0xff
    d32c:	ldur	x9, [x29, #-32]
    d330:	ldr	x9, [x9, #48]
    d334:	str	w8, [x9, #16]
    d338:	ldur	x9, [x29, #-64]
    d33c:	lsr	x9, x9, #8
    d340:	ldur	x10, [x29, #-32]
    d344:	ldr	x10, [x10, #48]
    d348:	str	w9, [x10, #20]
    d34c:	ldur	x8, [x29, #-32]
    d350:	ldr	w9, [x8, #24]
    d354:	and	w9, w9, #0x200
    d358:	cbz	w9, d3a0 <inflate@@Base+0x70c>
    d35c:	ldur	x8, [x29, #-32]
    d360:	ldr	w9, [x8, #16]
    d364:	and	w9, w9, #0x4
    d368:	cbz	w9, d3a0 <inflate@@Base+0x70c>
    d36c:	ldur	x8, [x29, #-64]
    d370:	add	x9, sp, #0x54
    d374:	strb	w8, [sp, #84]
    d378:	ldur	x10, [x29, #-64]
    d37c:	lsr	x10, x10, #8
    d380:	strb	w10, [x9, #1]
    d384:	ldur	x11, [x29, #-32]
    d388:	ldr	x0, [x11, #32]
    d38c:	mov	x1, x9
    d390:	mov	w2, #0x2                   	// #2
    d394:	bl	2430 <crc32@plt>
    d398:	ldur	x9, [x29, #-32]
    d39c:	str	x0, [x9, #32]
    d3a0:	stur	xzr, [x29, #-64]
    d3a4:	stur	wzr, [x29, #-68]
    d3a8:	ldur	x8, [x29, #-32]
    d3ac:	mov	w9, #0x3f38                	// #16184
    d3b0:	str	w9, [x8, #8]
    d3b4:	ldur	x8, [x29, #-32]
    d3b8:	ldr	w9, [x8, #24]
    d3bc:	and	w9, w9, #0x400
    d3c0:	cbz	w9, d4ac <inflate@@Base+0x818>
    d3c4:	ldur	w8, [x29, #-68]
    d3c8:	cmp	w8, #0x10
    d3cc:	b.cs	d424 <inflate@@Base+0x790>  // b.hs, b.nlast
    d3d0:	ldur	w8, [x29, #-52]
    d3d4:	cbnz	w8, d3dc <inflate@@Base+0x748>
    d3d8:	b	f470 <inflate@@Base+0x27dc>
    d3dc:	ldur	w8, [x29, #-52]
    d3e0:	subs	w8, w8, #0x1
    d3e4:	stur	w8, [x29, #-52]
    d3e8:	ldur	x9, [x29, #-40]
    d3ec:	add	x10, x9, #0x1
    d3f0:	stur	x10, [x29, #-40]
    d3f4:	ldrb	w8, [x9]
    d3f8:	mov	w9, w8
    d3fc:	ldur	w8, [x29, #-68]
    d400:	mov	w10, w8
    d404:	lsl	x9, x9, x10
    d408:	ldur	x10, [x29, #-64]
    d40c:	add	x9, x10, x9
    d410:	stur	x9, [x29, #-64]
    d414:	ldur	w8, [x29, #-68]
    d418:	add	w8, w8, #0x8
    d41c:	stur	w8, [x29, #-68]
    d420:	b	d3c4 <inflate@@Base+0x730>
    d424:	ldur	x8, [x29, #-64]
    d428:	ldur	x9, [x29, #-32]
    d42c:	str	w8, [x9, #92]
    d430:	ldur	x9, [x29, #-32]
    d434:	ldr	x9, [x9, #48]
    d438:	cbz	x9, d44c <inflate@@Base+0x7b8>
    d43c:	ldur	x8, [x29, #-64]
    d440:	ldur	x9, [x29, #-32]
    d444:	ldr	x9, [x9, #48]
    d448:	str	w8, [x9, #32]
    d44c:	ldur	x8, [x29, #-32]
    d450:	ldr	w9, [x8, #24]
    d454:	and	w9, w9, #0x200
    d458:	cbz	w9, d4a0 <inflate@@Base+0x80c>
    d45c:	ldur	x8, [x29, #-32]
    d460:	ldr	w9, [x8, #16]
    d464:	and	w9, w9, #0x4
    d468:	cbz	w9, d4a0 <inflate@@Base+0x80c>
    d46c:	ldur	x8, [x29, #-64]
    d470:	add	x9, sp, #0x54
    d474:	strb	w8, [sp, #84]
    d478:	ldur	x10, [x29, #-64]
    d47c:	lsr	x10, x10, #8
    d480:	strb	w10, [x9, #1]
    d484:	ldur	x11, [x29, #-32]
    d488:	ldr	x0, [x11, #32]
    d48c:	mov	x1, x9
    d490:	mov	w2, #0x2                   	// #2
    d494:	bl	2430 <crc32@plt>
    d498:	ldur	x9, [x29, #-32]
    d49c:	str	x0, [x9, #32]
    d4a0:	stur	xzr, [x29, #-64]
    d4a4:	stur	wzr, [x29, #-68]
    d4a8:	b	d4c8 <inflate@@Base+0x834>
    d4ac:	ldur	x8, [x29, #-32]
    d4b0:	ldr	x8, [x8, #48]
    d4b4:	cbz	x8, d4c8 <inflate@@Base+0x834>
    d4b8:	ldur	x8, [x29, #-32]
    d4bc:	ldr	x8, [x8, #48]
    d4c0:	mov	x9, xzr
    d4c4:	str	x9, [x8, #24]
    d4c8:	ldur	x8, [x29, #-32]
    d4cc:	mov	w9, #0x3f39                	// #16185
    d4d0:	str	w9, [x8, #8]
    d4d4:	ldur	x8, [x29, #-32]
    d4d8:	ldr	w9, [x8, #24]
    d4dc:	and	w9, w9, #0x400
    d4e0:	cbz	w9, d64c <inflate@@Base+0x9b8>
    d4e4:	ldur	x8, [x29, #-32]
    d4e8:	ldr	w9, [x8, #92]
    d4ec:	stur	w9, [x29, #-80]
    d4f0:	ldur	w9, [x29, #-80]
    d4f4:	ldur	w10, [x29, #-52]
    d4f8:	cmp	w9, w10
    d4fc:	b.ls	d508 <inflate@@Base+0x874>  // b.plast
    d500:	ldur	w8, [x29, #-52]
    d504:	stur	w8, [x29, #-80]
    d508:	ldur	w8, [x29, #-80]
    d50c:	cbz	w8, d63c <inflate@@Base+0x9a8>
    d510:	ldur	x8, [x29, #-32]
    d514:	ldr	x8, [x8, #48]
    d518:	cbz	x8, d5c8 <inflate@@Base+0x934>
    d51c:	ldur	x8, [x29, #-32]
    d520:	ldr	x8, [x8, #48]
    d524:	ldr	x8, [x8, #24]
    d528:	cbz	x8, d5c8 <inflate@@Base+0x934>
    d52c:	ldur	x8, [x29, #-32]
    d530:	ldr	x8, [x8, #48]
    d534:	ldr	w9, [x8, #32]
    d538:	ldur	x8, [x29, #-32]
    d53c:	ldr	w10, [x8, #92]
    d540:	subs	w9, w9, w10
    d544:	str	w9, [sp, #92]
    d548:	ldur	x8, [x29, #-32]
    d54c:	ldr	x8, [x8, #48]
    d550:	ldr	x8, [x8, #24]
    d554:	ldr	w9, [sp, #92]
    d558:	mov	w11, w9
    d55c:	add	x0, x8, x11
    d560:	ldur	x1, [x29, #-40]
    d564:	ldr	w9, [sp, #92]
    d568:	ldur	w10, [x29, #-80]
    d56c:	add	w9, w9, w10
    d570:	ldur	x8, [x29, #-32]
    d574:	ldr	x8, [x8, #48]
    d578:	ldr	w10, [x8, #36]
    d57c:	cmp	w9, w10
    d580:	str	x0, [sp, #64]
    d584:	str	x1, [sp, #56]
    d588:	b.ls	d5a8 <inflate@@Base+0x914>  // b.plast
    d58c:	ldur	x8, [x29, #-32]
    d590:	ldr	x8, [x8, #48]
    d594:	ldr	w9, [x8, #36]
    d598:	ldr	w10, [sp, #92]
    d59c:	subs	w9, w9, w10
    d5a0:	str	w9, [sp, #52]
    d5a4:	b	d5b0 <inflate@@Base+0x91c>
    d5a8:	ldur	w8, [x29, #-80]
    d5ac:	str	w8, [sp, #52]
    d5b0:	ldr	w8, [sp, #52]
    d5b4:	mov	w9, w8
    d5b8:	ubfx	x2, x9, #0, #32
    d5bc:	ldr	x0, [sp, #64]
    d5c0:	ldr	x1, [sp, #56]
    d5c4:	bl	23a0 <memcpy@plt>
    d5c8:	ldur	x8, [x29, #-32]
    d5cc:	ldr	w9, [x8, #24]
    d5d0:	and	w9, w9, #0x200
    d5d4:	cbz	w9, d604 <inflate@@Base+0x970>
    d5d8:	ldur	x8, [x29, #-32]
    d5dc:	ldr	w9, [x8, #16]
    d5e0:	and	w9, w9, #0x4
    d5e4:	cbz	w9, d604 <inflate@@Base+0x970>
    d5e8:	ldur	x8, [x29, #-32]
    d5ec:	ldr	x0, [x8, #32]
    d5f0:	ldur	x1, [x29, #-40]
    d5f4:	ldur	w2, [x29, #-80]
    d5f8:	bl	2430 <crc32@plt>
    d5fc:	ldur	x8, [x29, #-32]
    d600:	str	x0, [x8, #32]
    d604:	ldur	w8, [x29, #-80]
    d608:	ldur	w9, [x29, #-52]
    d60c:	subs	w8, w9, w8
    d610:	stur	w8, [x29, #-52]
    d614:	ldur	w8, [x29, #-80]
    d618:	mov	w10, w8
    d61c:	ldur	x11, [x29, #-40]
    d620:	add	x10, x11, x10
    d624:	stur	x10, [x29, #-40]
    d628:	ldur	w8, [x29, #-80]
    d62c:	ldur	x10, [x29, #-32]
    d630:	ldr	w9, [x10, #92]
    d634:	subs	w8, w9, w8
    d638:	str	w8, [x10, #92]
    d63c:	ldur	x8, [x29, #-32]
    d640:	ldr	w9, [x8, #92]
    d644:	cbz	w9, d64c <inflate@@Base+0x9b8>
    d648:	b	f470 <inflate@@Base+0x27dc>
    d64c:	ldur	x8, [x29, #-32]
    d650:	str	wzr, [x8, #92]
    d654:	ldur	x8, [x29, #-32]
    d658:	mov	w9, #0x3f3a                	// #16186
    d65c:	str	w9, [x8, #8]
    d660:	ldur	x8, [x29, #-32]
    d664:	ldr	w9, [x8, #24]
    d668:	and	w9, w9, #0x800
    d66c:	cbz	w9, d7a4 <inflate@@Base+0xb10>
    d670:	ldur	w8, [x29, #-52]
    d674:	cbnz	w8, d67c <inflate@@Base+0x9e8>
    d678:	b	f470 <inflate@@Base+0x27dc>
    d67c:	stur	wzr, [x29, #-80]
    d680:	ldur	x8, [x29, #-40]
    d684:	ldur	w9, [x29, #-80]
    d688:	mov	w10, w9
    d68c:	mov	w9, w10
    d690:	add	w9, w9, #0x1
    d694:	stur	w9, [x29, #-80]
    d698:	ldrb	w9, [x8, x10]
    d69c:	str	w9, [sp, #92]
    d6a0:	ldur	x8, [x29, #-32]
    d6a4:	ldr	x8, [x8, #48]
    d6a8:	cbz	x8, d708 <inflate@@Base+0xa74>
    d6ac:	ldur	x8, [x29, #-32]
    d6b0:	ldr	x8, [x8, #48]
    d6b4:	ldr	x8, [x8, #40]
    d6b8:	cbz	x8, d708 <inflate@@Base+0xa74>
    d6bc:	ldur	x8, [x29, #-32]
    d6c0:	ldr	w9, [x8, #92]
    d6c4:	ldur	x8, [x29, #-32]
    d6c8:	ldr	x8, [x8, #48]
    d6cc:	ldr	w10, [x8, #48]
    d6d0:	cmp	w9, w10
    d6d4:	b.cs	d708 <inflate@@Base+0xa74>  // b.hs, b.nlast
    d6d8:	ldr	w8, [sp, #92]
    d6dc:	ldur	x9, [x29, #-32]
    d6e0:	ldr	x9, [x9, #48]
    d6e4:	ldr	x9, [x9, #40]
    d6e8:	ldur	x10, [x29, #-32]
    d6ec:	ldr	w11, [x10, #92]
    d6f0:	mov	w12, w11
    d6f4:	mov	w11, w12
    d6f8:	add	w11, w11, #0x1
    d6fc:	str	w11, [x10, #92]
    d700:	add	x9, x9, x12
    d704:	strb	w8, [x9]
    d708:	ldr	w8, [sp, #92]
    d70c:	mov	w9, #0x0                   	// #0
    d710:	str	w9, [sp, #48]
    d714:	cbz	w8, d72c <inflate@@Base+0xa98>
    d718:	ldur	w8, [x29, #-80]
    d71c:	ldur	w9, [x29, #-52]
    d720:	cmp	w8, w9
    d724:	cset	w8, cc  // cc = lo, ul, last
    d728:	str	w8, [sp, #48]
    d72c:	ldr	w8, [sp, #48]
    d730:	tbnz	w8, #0, d680 <inflate@@Base+0x9ec>
    d734:	ldur	x8, [x29, #-32]
    d738:	ldr	w9, [x8, #24]
    d73c:	and	w9, w9, #0x200
    d740:	cbz	w9, d770 <inflate@@Base+0xadc>
    d744:	ldur	x8, [x29, #-32]
    d748:	ldr	w9, [x8, #16]
    d74c:	and	w9, w9, #0x4
    d750:	cbz	w9, d770 <inflate@@Base+0xadc>
    d754:	ldur	x8, [x29, #-32]
    d758:	ldr	x0, [x8, #32]
    d75c:	ldur	x1, [x29, #-40]
    d760:	ldur	w2, [x29, #-80]
    d764:	bl	2430 <crc32@plt>
    d768:	ldur	x8, [x29, #-32]
    d76c:	str	x0, [x8, #32]
    d770:	ldur	w8, [x29, #-80]
    d774:	ldur	w9, [x29, #-52]
    d778:	subs	w8, w9, w8
    d77c:	stur	w8, [x29, #-52]
    d780:	ldur	w8, [x29, #-80]
    d784:	mov	w10, w8
    d788:	ldur	x11, [x29, #-40]
    d78c:	add	x10, x11, x10
    d790:	stur	x10, [x29, #-40]
    d794:	ldr	w8, [sp, #92]
    d798:	cbz	w8, d7a0 <inflate@@Base+0xb0c>
    d79c:	b	f470 <inflate@@Base+0x27dc>
    d7a0:	b	d7c0 <inflate@@Base+0xb2c>
    d7a4:	ldur	x8, [x29, #-32]
    d7a8:	ldr	x8, [x8, #48]
    d7ac:	cbz	x8, d7c0 <inflate@@Base+0xb2c>
    d7b0:	ldur	x8, [x29, #-32]
    d7b4:	ldr	x8, [x8, #48]
    d7b8:	mov	x9, xzr
    d7bc:	str	x9, [x8, #40]
    d7c0:	ldur	x8, [x29, #-32]
    d7c4:	str	wzr, [x8, #92]
    d7c8:	ldur	x8, [x29, #-32]
    d7cc:	mov	w9, #0x3f3b                	// #16187
    d7d0:	str	w9, [x8, #8]
    d7d4:	ldur	x8, [x29, #-32]
    d7d8:	ldr	w9, [x8, #24]
    d7dc:	and	w9, w9, #0x1000
    d7e0:	cbz	w9, d918 <inflate@@Base+0xc84>
    d7e4:	ldur	w8, [x29, #-52]
    d7e8:	cbnz	w8, d7f0 <inflate@@Base+0xb5c>
    d7ec:	b	f470 <inflate@@Base+0x27dc>
    d7f0:	stur	wzr, [x29, #-80]
    d7f4:	ldur	x8, [x29, #-40]
    d7f8:	ldur	w9, [x29, #-80]
    d7fc:	mov	w10, w9
    d800:	mov	w9, w10
    d804:	add	w9, w9, #0x1
    d808:	stur	w9, [x29, #-80]
    d80c:	ldrb	w9, [x8, x10]
    d810:	str	w9, [sp, #92]
    d814:	ldur	x8, [x29, #-32]
    d818:	ldr	x8, [x8, #48]
    d81c:	cbz	x8, d87c <inflate@@Base+0xbe8>
    d820:	ldur	x8, [x29, #-32]
    d824:	ldr	x8, [x8, #48]
    d828:	ldr	x8, [x8, #56]
    d82c:	cbz	x8, d87c <inflate@@Base+0xbe8>
    d830:	ldur	x8, [x29, #-32]
    d834:	ldr	w9, [x8, #92]
    d838:	ldur	x8, [x29, #-32]
    d83c:	ldr	x8, [x8, #48]
    d840:	ldr	w10, [x8, #64]
    d844:	cmp	w9, w10
    d848:	b.cs	d87c <inflate@@Base+0xbe8>  // b.hs, b.nlast
    d84c:	ldr	w8, [sp, #92]
    d850:	ldur	x9, [x29, #-32]
    d854:	ldr	x9, [x9, #48]
    d858:	ldr	x9, [x9, #56]
    d85c:	ldur	x10, [x29, #-32]
    d860:	ldr	w11, [x10, #92]
    d864:	mov	w12, w11
    d868:	mov	w11, w12
    d86c:	add	w11, w11, #0x1
    d870:	str	w11, [x10, #92]
    d874:	add	x9, x9, x12
    d878:	strb	w8, [x9]
    d87c:	ldr	w8, [sp, #92]
    d880:	mov	w9, #0x0                   	// #0
    d884:	str	w9, [sp, #44]
    d888:	cbz	w8, d8a0 <inflate@@Base+0xc0c>
    d88c:	ldur	w8, [x29, #-80]
    d890:	ldur	w9, [x29, #-52]
    d894:	cmp	w8, w9
    d898:	cset	w8, cc  // cc = lo, ul, last
    d89c:	str	w8, [sp, #44]
    d8a0:	ldr	w8, [sp, #44]
    d8a4:	tbnz	w8, #0, d7f4 <inflate@@Base+0xb60>
    d8a8:	ldur	x8, [x29, #-32]
    d8ac:	ldr	w9, [x8, #24]
    d8b0:	and	w9, w9, #0x200
    d8b4:	cbz	w9, d8e4 <inflate@@Base+0xc50>
    d8b8:	ldur	x8, [x29, #-32]
    d8bc:	ldr	w9, [x8, #16]
    d8c0:	and	w9, w9, #0x4
    d8c4:	cbz	w9, d8e4 <inflate@@Base+0xc50>
    d8c8:	ldur	x8, [x29, #-32]
    d8cc:	ldr	x0, [x8, #32]
    d8d0:	ldur	x1, [x29, #-40]
    d8d4:	ldur	w2, [x29, #-80]
    d8d8:	bl	2430 <crc32@plt>
    d8dc:	ldur	x8, [x29, #-32]
    d8e0:	str	x0, [x8, #32]
    d8e4:	ldur	w8, [x29, #-80]
    d8e8:	ldur	w9, [x29, #-52]
    d8ec:	subs	w8, w9, w8
    d8f0:	stur	w8, [x29, #-52]
    d8f4:	ldur	w8, [x29, #-80]
    d8f8:	mov	w10, w8
    d8fc:	ldur	x11, [x29, #-40]
    d900:	add	x10, x11, x10
    d904:	stur	x10, [x29, #-40]
    d908:	ldr	w8, [sp, #92]
    d90c:	cbz	w8, d914 <inflate@@Base+0xc80>
    d910:	b	f470 <inflate@@Base+0x27dc>
    d914:	b	d934 <inflate@@Base+0xca0>
    d918:	ldur	x8, [x29, #-32]
    d91c:	ldr	x8, [x8, #48]
    d920:	cbz	x8, d934 <inflate@@Base+0xca0>
    d924:	ldur	x8, [x29, #-32]
    d928:	ldr	x8, [x8, #48]
    d92c:	mov	x9, xzr
    d930:	str	x9, [x8, #56]
    d934:	ldur	x8, [x29, #-32]
    d938:	mov	w9, #0x3f3c                	// #16188
    d93c:	str	w9, [x8, #8]
    d940:	ldur	x8, [x29, #-32]
    d944:	ldr	w9, [x8, #24]
    d948:	and	w9, w9, #0x200
    d94c:	cbz	w9, da00 <inflate@@Base+0xd6c>
    d950:	ldur	w8, [x29, #-68]
    d954:	cmp	w8, #0x10
    d958:	b.cs	d9b0 <inflate@@Base+0xd1c>  // b.hs, b.nlast
    d95c:	ldur	w8, [x29, #-52]
    d960:	cbnz	w8, d968 <inflate@@Base+0xcd4>
    d964:	b	f470 <inflate@@Base+0x27dc>
    d968:	ldur	w8, [x29, #-52]
    d96c:	subs	w8, w8, #0x1
    d970:	stur	w8, [x29, #-52]
    d974:	ldur	x9, [x29, #-40]
    d978:	add	x10, x9, #0x1
    d97c:	stur	x10, [x29, #-40]
    d980:	ldrb	w8, [x9]
    d984:	mov	w9, w8
    d988:	ldur	w8, [x29, #-68]
    d98c:	mov	w10, w8
    d990:	lsl	x9, x9, x10
    d994:	ldur	x10, [x29, #-64]
    d998:	add	x9, x10, x9
    d99c:	stur	x9, [x29, #-64]
    d9a0:	ldur	w8, [x29, #-68]
    d9a4:	add	w8, w8, #0x8
    d9a8:	stur	w8, [x29, #-68]
    d9ac:	b	d950 <inflate@@Base+0xcbc>
    d9b0:	ldur	x8, [x29, #-32]
    d9b4:	ldr	w9, [x8, #16]
    d9b8:	and	w9, w9, #0x4
    d9bc:	cbz	w9, d9f8 <inflate@@Base+0xd64>
    d9c0:	ldur	x8, [x29, #-64]
    d9c4:	ldur	x9, [x29, #-32]
    d9c8:	ldr	x9, [x9, #32]
    d9cc:	and	x9, x9, #0xffff
    d9d0:	cmp	x8, x9
    d9d4:	b.eq	d9f8 <inflate@@Base+0xd64>  // b.none
    d9d8:	ldur	x8, [x29, #-16]
    d9dc:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    d9e0:	add	x9, x9, #0x9f5
    d9e4:	str	x9, [x8, #48]
    d9e8:	ldur	x8, [x29, #-32]
    d9ec:	mov	w10, #0x3f51                	// #16209
    d9f0:	str	w10, [x8, #8]
    d9f4:	b	f46c <inflate@@Base+0x27d8>
    d9f8:	stur	xzr, [x29, #-64]
    d9fc:	stur	wzr, [x29, #-68]
    da00:	ldur	x8, [x29, #-32]
    da04:	ldr	x8, [x8, #48]
    da08:	cbz	x8, da38 <inflate@@Base+0xda4>
    da0c:	ldur	x8, [x29, #-32]
    da10:	ldr	w9, [x8, #24]
    da14:	asr	w9, w9, #9
    da18:	mov	w10, #0x1                   	// #1
    da1c:	and	w9, w9, #0x1
    da20:	ldur	x8, [x29, #-32]
    da24:	ldr	x8, [x8, #48]
    da28:	str	w9, [x8, #68]
    da2c:	ldur	x8, [x29, #-32]
    da30:	ldr	x8, [x8, #48]
    da34:	str	w10, [x8, #72]
    da38:	mov	x8, xzr
    da3c:	mov	x0, x8
    da40:	mov	x1, x8
    da44:	mov	w9, wzr
    da48:	mov	w2, w9
    da4c:	bl	2430 <crc32@plt>
    da50:	ldur	x8, [x29, #-32]
    da54:	str	x0, [x8, #32]
    da58:	ldur	x8, [x29, #-16]
    da5c:	str	x0, [x8, #96]
    da60:	ldur	x8, [x29, #-32]
    da64:	mov	w9, #0x3f3f                	// #16191
    da68:	str	w9, [x8, #8]
    da6c:	b	f46c <inflate@@Base+0x27d8>
    da70:	ldur	w8, [x29, #-68]
    da74:	cmp	w8, #0x20
    da78:	b.cs	dad0 <inflate@@Base+0xe3c>  // b.hs, b.nlast
    da7c:	ldur	w8, [x29, #-52]
    da80:	cbnz	w8, da88 <inflate@@Base+0xdf4>
    da84:	b	f470 <inflate@@Base+0x27dc>
    da88:	ldur	w8, [x29, #-52]
    da8c:	subs	w8, w8, #0x1
    da90:	stur	w8, [x29, #-52]
    da94:	ldur	x9, [x29, #-40]
    da98:	add	x10, x9, #0x1
    da9c:	stur	x10, [x29, #-40]
    daa0:	ldrb	w8, [x9]
    daa4:	mov	w9, w8
    daa8:	ldur	w8, [x29, #-68]
    daac:	mov	w10, w8
    dab0:	lsl	x9, x9, x10
    dab4:	ldur	x10, [x29, #-64]
    dab8:	add	x9, x10, x9
    dabc:	stur	x9, [x29, #-64]
    dac0:	ldur	w8, [x29, #-68]
    dac4:	add	w8, w8, #0x8
    dac8:	stur	w8, [x29, #-68]
    dacc:	b	da70 <inflate@@Base+0xddc>
    dad0:	ldur	x8, [x29, #-64]
    dad4:	lsr	x8, x8, #24
    dad8:	ldur	x9, [x29, #-64]
    dadc:	lsr	x9, x9, #8
    dae0:	and	x9, x9, #0xff00
    dae4:	add	x9, x9, w8, uxtb
    dae8:	ldur	x10, [x29, #-64]
    daec:	and	x10, x10, #0xff00
    daf0:	add	x9, x9, x10, lsl #8
    daf4:	ldur	x10, [x29, #-64]
    daf8:	and	x10, x10, #0xff
    dafc:	add	x9, x9, x10, lsl #24
    db00:	ldur	x10, [x29, #-32]
    db04:	str	x9, [x10, #32]
    db08:	ldur	x10, [x29, #-16]
    db0c:	str	x9, [x10, #96]
    db10:	stur	xzr, [x29, #-64]
    db14:	stur	wzr, [x29, #-68]
    db18:	ldur	x8, [x29, #-32]
    db1c:	mov	w9, #0x3f3e                	// #16190
    db20:	str	w9, [x8, #8]
    db24:	ldur	x8, [x29, #-32]
    db28:	ldr	w9, [x8, #20]
    db2c:	cbnz	w9, db84 <inflate@@Base+0xef0>
    db30:	ldur	x8, [x29, #-48]
    db34:	ldur	x9, [x29, #-16]
    db38:	str	x8, [x9, #24]
    db3c:	ldur	w10, [x29, #-56]
    db40:	ldur	x8, [x29, #-16]
    db44:	str	w10, [x8, #32]
    db48:	ldur	x8, [x29, #-40]
    db4c:	ldur	x9, [x29, #-16]
    db50:	str	x8, [x9]
    db54:	ldur	w10, [x29, #-52]
    db58:	ldur	x8, [x29, #-16]
    db5c:	str	w10, [x8, #8]
    db60:	ldur	x8, [x29, #-64]
    db64:	ldur	x9, [x29, #-32]
    db68:	str	x8, [x9, #80]
    db6c:	ldur	w10, [x29, #-68]
    db70:	ldur	x8, [x29, #-32]
    db74:	str	w10, [x8, #88]
    db78:	mov	w8, #0x2                   	// #2
    db7c:	stur	w8, [x29, #-4]
    db80:	b	f724 <inflate@@Base+0x2a90>
    db84:	mov	x8, xzr
    db88:	mov	x0, x8
    db8c:	mov	x1, x8
    db90:	mov	w9, wzr
    db94:	mov	w2, w9
    db98:	bl	2560 <adler32@plt>
    db9c:	ldur	x8, [x29, #-32]
    dba0:	str	x0, [x8, #32]
    dba4:	ldur	x8, [x29, #-16]
    dba8:	str	x0, [x8, #96]
    dbac:	ldur	x8, [x29, #-32]
    dbb0:	mov	w9, #0x3f3f                	// #16191
    dbb4:	str	w9, [x8, #8]
    dbb8:	ldur	w8, [x29, #-20]
    dbbc:	cmp	w8, #0x5
    dbc0:	b.eq	dbd0 <inflate@@Base+0xf3c>  // b.none
    dbc4:	ldur	w8, [x29, #-20]
    dbc8:	cmp	w8, #0x6
    dbcc:	b.ne	dbd4 <inflate@@Base+0xf40>  // b.any
    dbd0:	b	f470 <inflate@@Base+0x27dc>
    dbd4:	ldur	x8, [x29, #-32]
    dbd8:	ldr	w9, [x8, #12]
    dbdc:	cbz	w9, dc1c <inflate@@Base+0xf88>
    dbe0:	ldur	w8, [x29, #-68]
    dbe4:	and	w8, w8, #0x7
    dbe8:	ldur	x9, [x29, #-64]
    dbec:	mov	w10, w8
    dbf0:	lsr	x9, x9, x10
    dbf4:	stur	x9, [x29, #-64]
    dbf8:	ldur	w8, [x29, #-68]
    dbfc:	and	w8, w8, #0x7
    dc00:	ldur	w11, [x29, #-68]
    dc04:	subs	w8, w11, w8
    dc08:	stur	w8, [x29, #-68]
    dc0c:	ldur	x8, [x29, #-32]
    dc10:	mov	w9, #0x3f4e                	// #16206
    dc14:	str	w9, [x8, #8]
    dc18:	b	f46c <inflate@@Base+0x27d8>
    dc1c:	ldur	w8, [x29, #-68]
    dc20:	cmp	w8, #0x3
    dc24:	b.cs	dc7c <inflate@@Base+0xfe8>  // b.hs, b.nlast
    dc28:	ldur	w8, [x29, #-52]
    dc2c:	cbnz	w8, dc34 <inflate@@Base+0xfa0>
    dc30:	b	f470 <inflate@@Base+0x27dc>
    dc34:	ldur	w8, [x29, #-52]
    dc38:	subs	w8, w8, #0x1
    dc3c:	stur	w8, [x29, #-52]
    dc40:	ldur	x9, [x29, #-40]
    dc44:	add	x10, x9, #0x1
    dc48:	stur	x10, [x29, #-40]
    dc4c:	ldrb	w8, [x9]
    dc50:	mov	w9, w8
    dc54:	ldur	w8, [x29, #-68]
    dc58:	mov	w10, w8
    dc5c:	lsl	x9, x9, x10
    dc60:	ldur	x10, [x29, #-64]
    dc64:	add	x9, x10, x9
    dc68:	stur	x9, [x29, #-64]
    dc6c:	ldur	w8, [x29, #-68]
    dc70:	add	w8, w8, #0x8
    dc74:	stur	w8, [x29, #-68]
    dc78:	b	dc1c <inflate@@Base+0xf88>
    dc7c:	ldur	x8, [x29, #-64]
    dc80:	and	w8, w8, #0x1
    dc84:	ldur	x9, [x29, #-32]
    dc88:	str	w8, [x9, #12]
    dc8c:	ldur	x8, [x29, #-64]
    dc90:	lsr	x8, x8, #1
    dc94:	stur	x8, [x29, #-64]
    dc98:	ldur	w9, [x29, #-68]
    dc9c:	subs	w9, w9, #0x1
    dca0:	stur	w9, [x29, #-68]
    dca4:	ldur	x8, [x29, #-64]
    dca8:	and	w8, w8, #0x3
    dcac:	subs	w8, w8, #0x0
    dcb0:	mov	w9, w8
    dcb4:	ubfx	x9, x9, #0, #32
    dcb8:	cmp	x9, #0x3
    dcbc:	str	x9, [sp, #32]
    dcc0:	b.hi	dd58 <inflate@@Base+0x10c4>  // b.pmore
    dcc4:	adrp	x8, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    dcc8:	add	x8, x8, #0xe0
    dccc:	ldr	x11, [sp, #32]
    dcd0:	ldrsw	x10, [x8, x11, lsl #2]
    dcd4:	add	x9, x8, x10
    dcd8:	br	x9
    dcdc:	ldur	x8, [x29, #-32]
    dce0:	mov	w9, #0x3f41                	// #16193
    dce4:	str	w9, [x8, #8]
    dce8:	b	dd58 <inflate@@Base+0x10c4>
    dcec:	ldur	x0, [x29, #-32]
    dcf0:	bl	f734 <inflate@@Base+0x2aa0>
    dcf4:	ldur	x8, [x29, #-32]
    dcf8:	mov	w9, #0x3f47                	// #16199
    dcfc:	str	w9, [x8, #8]
    dd00:	ldur	w9, [x29, #-20]
    dd04:	cmp	w9, #0x6
    dd08:	b.ne	dd28 <inflate@@Base+0x1094>  // b.any
    dd0c:	ldur	x8, [x29, #-64]
    dd10:	lsr	x8, x8, #2
    dd14:	stur	x8, [x29, #-64]
    dd18:	ldur	w9, [x29, #-68]
    dd1c:	subs	w9, w9, #0x2
    dd20:	stur	w9, [x29, #-68]
    dd24:	b	f470 <inflate@@Base+0x27dc>
    dd28:	b	dd58 <inflate@@Base+0x10c4>
    dd2c:	ldur	x8, [x29, #-32]
    dd30:	mov	w9, #0x3f44                	// #16196
    dd34:	str	w9, [x8, #8]
    dd38:	b	dd58 <inflate@@Base+0x10c4>
    dd3c:	ldur	x8, [x29, #-16]
    dd40:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    dd44:	add	x9, x9, #0xf31
    dd48:	str	x9, [x8, #48]
    dd4c:	ldur	x8, [x29, #-32]
    dd50:	mov	w10, #0x3f51                	// #16209
    dd54:	str	w10, [x8, #8]
    dd58:	ldur	x8, [x29, #-64]
    dd5c:	lsr	x8, x8, #2
    dd60:	stur	x8, [x29, #-64]
    dd64:	ldur	w9, [x29, #-68]
    dd68:	subs	w9, w9, #0x2
    dd6c:	stur	w9, [x29, #-68]
    dd70:	b	f46c <inflate@@Base+0x27d8>
    dd74:	ldur	w8, [x29, #-68]
    dd78:	and	w8, w8, #0x7
    dd7c:	ldur	x9, [x29, #-64]
    dd80:	mov	w10, w8
    dd84:	lsr	x9, x9, x10
    dd88:	stur	x9, [x29, #-64]
    dd8c:	ldur	w8, [x29, #-68]
    dd90:	and	w8, w8, #0x7
    dd94:	ldur	w11, [x29, #-68]
    dd98:	subs	w8, w11, w8
    dd9c:	stur	w8, [x29, #-68]
    dda0:	ldur	w8, [x29, #-68]
    dda4:	cmp	w8, #0x20
    dda8:	b.cs	de00 <inflate@@Base+0x116c>  // b.hs, b.nlast
    ddac:	ldur	w8, [x29, #-52]
    ddb0:	cbnz	w8, ddb8 <inflate@@Base+0x1124>
    ddb4:	b	f470 <inflate@@Base+0x27dc>
    ddb8:	ldur	w8, [x29, #-52]
    ddbc:	subs	w8, w8, #0x1
    ddc0:	stur	w8, [x29, #-52]
    ddc4:	ldur	x9, [x29, #-40]
    ddc8:	add	x10, x9, #0x1
    ddcc:	stur	x10, [x29, #-40]
    ddd0:	ldrb	w8, [x9]
    ddd4:	mov	w9, w8
    ddd8:	ldur	w8, [x29, #-68]
    dddc:	mov	w10, w8
    dde0:	lsl	x9, x9, x10
    dde4:	ldur	x10, [x29, #-64]
    dde8:	add	x9, x10, x9
    ddec:	stur	x9, [x29, #-64]
    ddf0:	ldur	w8, [x29, #-68]
    ddf4:	add	w8, w8, #0x8
    ddf8:	stur	w8, [x29, #-68]
    ddfc:	b	dda0 <inflate@@Base+0x110c>
    de00:	ldur	x8, [x29, #-64]
    de04:	and	x8, x8, #0xffff
    de08:	ldur	x9, [x29, #-64]
    de0c:	lsr	x9, x9, #16
    de10:	eor	x9, x9, #0xffff
    de14:	cmp	x8, x9
    de18:	b.eq	de3c <inflate@@Base+0x11a8>  // b.none
    de1c:	ldur	x8, [x29, #-16]
    de20:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    de24:	add	x9, x9, #0xf44
    de28:	str	x9, [x8, #48]
    de2c:	ldur	x8, [x29, #-32]
    de30:	mov	w10, #0x3f51                	// #16209
    de34:	str	w10, [x8, #8]
    de38:	b	f46c <inflate@@Base+0x27d8>
    de3c:	ldur	x8, [x29, #-64]
    de40:	and	w8, w8, #0xffff
    de44:	ldur	x9, [x29, #-32]
    de48:	str	w8, [x9, #92]
    de4c:	stur	xzr, [x29, #-64]
    de50:	stur	wzr, [x29, #-68]
    de54:	ldur	x8, [x29, #-32]
    de58:	mov	w9, #0x3f42                	// #16194
    de5c:	str	w9, [x8, #8]
    de60:	ldur	w9, [x29, #-20]
    de64:	cmp	w9, #0x6
    de68:	b.ne	de70 <inflate@@Base+0x11dc>  // b.any
    de6c:	b	f470 <inflate@@Base+0x27dc>
    de70:	ldur	x8, [x29, #-32]
    de74:	mov	w9, #0x3f43                	// #16195
    de78:	str	w9, [x8, #8]
    de7c:	ldur	x8, [x29, #-32]
    de80:	ldr	w9, [x8, #92]
    de84:	stur	w9, [x29, #-80]
    de88:	ldur	w9, [x29, #-80]
    de8c:	cbz	w9, df40 <inflate@@Base+0x12ac>
    de90:	ldur	w8, [x29, #-80]
    de94:	ldur	w9, [x29, #-52]
    de98:	cmp	w8, w9
    de9c:	b.ls	dea8 <inflate@@Base+0x1214>  // b.plast
    dea0:	ldur	w8, [x29, #-52]
    dea4:	stur	w8, [x29, #-80]
    dea8:	ldur	w8, [x29, #-80]
    deac:	ldur	w9, [x29, #-56]
    deb0:	cmp	w8, w9
    deb4:	b.ls	dec0 <inflate@@Base+0x122c>  // b.plast
    deb8:	ldur	w8, [x29, #-56]
    debc:	stur	w8, [x29, #-80]
    dec0:	ldur	w8, [x29, #-80]
    dec4:	cbnz	w8, decc <inflate@@Base+0x1238>
    dec8:	b	f470 <inflate@@Base+0x27dc>
    decc:	ldur	x0, [x29, #-48]
    ded0:	ldur	x1, [x29, #-40]
    ded4:	ldur	w8, [x29, #-80]
    ded8:	mov	w2, w8
    dedc:	bl	23a0 <memcpy@plt>
    dee0:	ldur	w8, [x29, #-80]
    dee4:	ldur	w9, [x29, #-52]
    dee8:	subs	w8, w9, w8
    deec:	stur	w8, [x29, #-52]
    def0:	ldur	w8, [x29, #-80]
    def4:	mov	w10, w8
    def8:	ldur	x11, [x29, #-40]
    defc:	add	x10, x11, x10
    df00:	stur	x10, [x29, #-40]
    df04:	ldur	w8, [x29, #-80]
    df08:	ldur	w9, [x29, #-56]
    df0c:	subs	w8, w9, w8
    df10:	stur	w8, [x29, #-56]
    df14:	ldur	w8, [x29, #-80]
    df18:	mov	w10, w8
    df1c:	ldur	x11, [x29, #-48]
    df20:	add	x10, x11, x10
    df24:	stur	x10, [x29, #-48]
    df28:	ldur	w8, [x29, #-80]
    df2c:	ldur	x10, [x29, #-32]
    df30:	ldr	w9, [x10, #92]
    df34:	subs	w8, w9, w8
    df38:	str	w8, [x10, #92]
    df3c:	b	f46c <inflate@@Base+0x27d8>
    df40:	ldur	x8, [x29, #-32]
    df44:	mov	w9, #0x3f3f                	// #16191
    df48:	str	w9, [x8, #8]
    df4c:	b	f46c <inflate@@Base+0x27d8>
    df50:	ldur	w8, [x29, #-68]
    df54:	cmp	w8, #0xe
    df58:	b.cs	dfb0 <inflate@@Base+0x131c>  // b.hs, b.nlast
    df5c:	ldur	w8, [x29, #-52]
    df60:	cbnz	w8, df68 <inflate@@Base+0x12d4>
    df64:	b	f470 <inflate@@Base+0x27dc>
    df68:	ldur	w8, [x29, #-52]
    df6c:	subs	w8, w8, #0x1
    df70:	stur	w8, [x29, #-52]
    df74:	ldur	x9, [x29, #-40]
    df78:	add	x10, x9, #0x1
    df7c:	stur	x10, [x29, #-40]
    df80:	ldrb	w8, [x9]
    df84:	mov	w9, w8
    df88:	ldur	w8, [x29, #-68]
    df8c:	mov	w10, w8
    df90:	lsl	x9, x9, x10
    df94:	ldur	x10, [x29, #-64]
    df98:	add	x9, x10, x9
    df9c:	stur	x9, [x29, #-64]
    dfa0:	ldur	w8, [x29, #-68]
    dfa4:	add	w8, w8, #0x8
    dfa8:	stur	w8, [x29, #-68]
    dfac:	b	df50 <inflate@@Base+0x12bc>
    dfb0:	ldur	x8, [x29, #-64]
    dfb4:	and	w8, w8, #0x1f
    dfb8:	add	w8, w8, #0x101
    dfbc:	ldur	x9, [x29, #-32]
    dfc0:	str	w8, [x9, #132]
    dfc4:	ldur	x8, [x29, #-64]
    dfc8:	lsr	x8, x8, #5
    dfcc:	stur	x8, [x29, #-64]
    dfd0:	ldur	w9, [x29, #-68]
    dfd4:	subs	w9, w9, #0x5
    dfd8:	stur	w9, [x29, #-68]
    dfdc:	ldur	x8, [x29, #-64]
    dfe0:	and	w8, w8, #0x1f
    dfe4:	add	w8, w8, #0x1
    dfe8:	ldur	x9, [x29, #-32]
    dfec:	str	w8, [x9, #136]
    dff0:	ldur	x8, [x29, #-64]
    dff4:	lsr	x8, x8, #5
    dff8:	stur	x8, [x29, #-64]
    dffc:	ldur	w9, [x29, #-68]
    e000:	subs	w9, w9, #0x5
    e004:	stur	w9, [x29, #-68]
    e008:	ldur	x8, [x29, #-64]
    e00c:	and	w8, w8, #0xf
    e010:	add	w8, w8, #0x4
    e014:	ldur	x9, [x29, #-32]
    e018:	str	w8, [x9, #128]
    e01c:	ldur	x8, [x29, #-64]
    e020:	lsr	x8, x8, #4
    e024:	stur	x8, [x29, #-64]
    e028:	ldur	w9, [x29, #-68]
    e02c:	subs	w9, w9, #0x4
    e030:	stur	w9, [x29, #-68]
    e034:	ldur	x8, [x29, #-32]
    e038:	ldr	w9, [x8, #132]
    e03c:	cmp	w9, #0x11e
    e040:	b.hi	e054 <inflate@@Base+0x13c0>  // b.pmore
    e044:	ldur	x8, [x29, #-32]
    e048:	ldr	w9, [x8, #136]
    e04c:	cmp	w9, #0x1e
    e050:	b.ls	e074 <inflate@@Base+0x13e0>  // b.plast
    e054:	ldur	x8, [x29, #-16]
    e058:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    e05c:	add	x9, x9, #0xf61
    e060:	str	x9, [x8, #48]
    e064:	ldur	x8, [x29, #-32]
    e068:	mov	w10, #0x3f51                	// #16209
    e06c:	str	w10, [x8, #8]
    e070:	b	f46c <inflate@@Base+0x27d8>
    e074:	ldur	x8, [x29, #-32]
    e078:	str	wzr, [x8, #140]
    e07c:	ldur	x8, [x29, #-32]
    e080:	mov	w9, #0x3f45                	// #16197
    e084:	str	w9, [x8, #8]
    e088:	ldur	x8, [x29, #-32]
    e08c:	ldr	w9, [x8, #140]
    e090:	ldur	x8, [x29, #-32]
    e094:	ldr	w10, [x8, #128]
    e098:	cmp	w9, w10
    e09c:	b.cs	e164 <inflate@@Base+0x14d0>  // b.hs, b.nlast
    e0a0:	ldur	w8, [x29, #-68]
    e0a4:	cmp	w8, #0x3
    e0a8:	b.cs	e100 <inflate@@Base+0x146c>  // b.hs, b.nlast
    e0ac:	ldur	w8, [x29, #-52]
    e0b0:	cbnz	w8, e0b8 <inflate@@Base+0x1424>
    e0b4:	b	f470 <inflate@@Base+0x27dc>
    e0b8:	ldur	w8, [x29, #-52]
    e0bc:	subs	w8, w8, #0x1
    e0c0:	stur	w8, [x29, #-52]
    e0c4:	ldur	x9, [x29, #-40]
    e0c8:	add	x10, x9, #0x1
    e0cc:	stur	x10, [x29, #-40]
    e0d0:	ldrb	w8, [x9]
    e0d4:	mov	w9, w8
    e0d8:	ldur	w8, [x29, #-68]
    e0dc:	mov	w10, w8
    e0e0:	lsl	x9, x9, x10
    e0e4:	ldur	x10, [x29, #-64]
    e0e8:	add	x9, x10, x9
    e0ec:	stur	x9, [x29, #-64]
    e0f0:	ldur	w8, [x29, #-68]
    e0f4:	add	w8, w8, #0x8
    e0f8:	stur	w8, [x29, #-68]
    e0fc:	b	e0a0 <inflate@@Base+0x140c>
    e100:	ldur	x8, [x29, #-64]
    e104:	and	w8, w8, #0x7
    e108:	ldur	x9, [x29, #-32]
    e10c:	add	x9, x9, #0x98
    e110:	ldur	x10, [x29, #-32]
    e114:	ldr	w11, [x10, #140]
    e118:	mov	w12, w11
    e11c:	mov	w11, w12
    e120:	add	w11, w11, #0x1
    e124:	str	w11, [x10, #140]
    e128:	mov	x10, #0x2                   	// #2
    e12c:	adrp	x13, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    e130:	add	x13, x13, #0xf0
    e134:	ldrh	w11, [x13, x12, lsl #1]
    e138:	mov	w12, w11
    e13c:	mul	x10, x10, x12
    e140:	add	x9, x9, x10
    e144:	strh	w8, [x9]
    e148:	ldur	x8, [x29, #-64]
    e14c:	lsr	x8, x8, #3
    e150:	stur	x8, [x29, #-64]
    e154:	ldur	w9, [x29, #-68]
    e158:	subs	w9, w9, #0x3
    e15c:	stur	w9, [x29, #-68]
    e160:	b	e088 <inflate@@Base+0x13f4>
    e164:	ldur	x8, [x29, #-32]
    e168:	ldr	w9, [x8, #140]
    e16c:	cmp	w9, #0x13
    e170:	b.cs	e1bc <inflate@@Base+0x1528>  // b.hs, b.nlast
    e174:	ldur	x8, [x29, #-32]
    e178:	add	x8, x8, #0x98
    e17c:	ldur	x9, [x29, #-32]
    e180:	ldr	w10, [x9, #140]
    e184:	mov	w11, w10
    e188:	mov	w10, w11
    e18c:	add	w10, w10, #0x1
    e190:	str	w10, [x9, #140]
    e194:	mov	x9, #0x2                   	// #2
    e198:	adrp	x12, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    e19c:	add	x12, x12, #0xf0
    e1a0:	ldrh	w10, [x12, x11, lsl #1]
    e1a4:	mov	w11, w10
    e1a8:	mul	x9, x9, x11
    e1ac:	add	x8, x8, x9
    e1b0:	mov	w10, #0x0                   	// #0
    e1b4:	strh	w10, [x8]
    e1b8:	b	e164 <inflate@@Base+0x14d0>
    e1bc:	ldur	x8, [x29, #-32]
    e1c0:	add	x8, x8, #0x558
    e1c4:	ldur	x9, [x29, #-32]
    e1c8:	str	x8, [x9, #144]
    e1cc:	ldur	x8, [x29, #-32]
    e1d0:	ldr	x8, [x8, #144]
    e1d4:	ldur	x9, [x29, #-32]
    e1d8:	str	x8, [x9, #104]
    e1dc:	ldur	x8, [x29, #-32]
    e1e0:	mov	w10, #0x7                   	// #7
    e1e4:	str	w10, [x8, #120]
    e1e8:	ldur	x8, [x29, #-32]
    e1ec:	add	x1, x8, #0x98
    e1f0:	ldur	x8, [x29, #-32]
    e1f4:	add	x3, x8, #0x90
    e1f8:	ldur	x8, [x29, #-32]
    e1fc:	add	x4, x8, #0x78
    e200:	ldur	x8, [x29, #-32]
    e204:	add	x5, x8, #0x318
    e208:	mov	w10, wzr
    e20c:	mov	w0, w10
    e210:	mov	w2, #0x13                  	// #19
    e214:	bl	104c0 <inflateCodesUsed@@ZLIB_1.2.9+0x64>
    e218:	str	w0, [sp, #88]
    e21c:	ldr	w10, [sp, #88]
    e220:	cbz	w10, e244 <inflate@@Base+0x15b0>
    e224:	ldur	x8, [x29, #-16]
    e228:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    e22c:	add	x9, x9, #0xf85
    e230:	str	x9, [x8, #48]
    e234:	ldur	x8, [x29, #-32]
    e238:	mov	w10, #0x3f51                	// #16209
    e23c:	str	w10, [x8, #8]
    e240:	b	f46c <inflate@@Base+0x27d8>
    e244:	ldur	x8, [x29, #-32]
    e248:	str	wzr, [x8, #140]
    e24c:	ldur	x8, [x29, #-32]
    e250:	mov	w9, #0x3f46                	// #16198
    e254:	str	w9, [x8, #8]
    e258:	ldur	x8, [x29, #-32]
    e25c:	ldr	w9, [x8, #140]
    e260:	ldur	x8, [x29, #-32]
    e264:	ldr	w10, [x8, #132]
    e268:	ldur	x8, [x29, #-32]
    e26c:	ldr	w11, [x8, #136]
    e270:	add	w10, w10, w11
    e274:	cmp	w9, w10
    e278:	b.cs	e6a0 <inflate@@Base+0x1a0c>  // b.hs, b.nlast
    e27c:	ldur	x8, [x29, #-32]
    e280:	ldr	x8, [x8, #104]
    e284:	ldur	x9, [x29, #-64]
    e288:	ldur	x10, [x29, #-32]
    e28c:	ldr	w11, [x10, #120]
    e290:	mov	w12, #0x1                   	// #1
    e294:	lsl	w11, w12, w11
    e298:	subs	w11, w11, #0x1
    e29c:	and	w9, w9, w11
    e2a0:	ldr	w9, [x8, w9, uxtw #2]
    e2a4:	stur	w9, [x29, #-92]
    e2a8:	ldurb	w9, [x29, #-91]
    e2ac:	ldur	w11, [x29, #-68]
    e2b0:	cmp	w9, w11
    e2b4:	b.hi	e2bc <inflate@@Base+0x1628>  // b.pmore
    e2b8:	b	e310 <inflate@@Base+0x167c>
    e2bc:	ldur	w8, [x29, #-52]
    e2c0:	cbnz	w8, e2c8 <inflate@@Base+0x1634>
    e2c4:	b	f470 <inflate@@Base+0x27dc>
    e2c8:	ldur	w8, [x29, #-52]
    e2cc:	subs	w8, w8, #0x1
    e2d0:	stur	w8, [x29, #-52]
    e2d4:	ldur	x9, [x29, #-40]
    e2d8:	add	x10, x9, #0x1
    e2dc:	stur	x10, [x29, #-40]
    e2e0:	ldrb	w8, [x9]
    e2e4:	mov	w9, w8
    e2e8:	ldur	w8, [x29, #-68]
    e2ec:	mov	w10, w8
    e2f0:	lsl	x9, x9, x10
    e2f4:	ldur	x10, [x29, #-64]
    e2f8:	add	x9, x10, x9
    e2fc:	stur	x9, [x29, #-64]
    e300:	ldur	w8, [x29, #-68]
    e304:	add	w8, w8, #0x8
    e308:	stur	w8, [x29, #-68]
    e30c:	b	e27c <inflate@@Base+0x15e8>
    e310:	ldurh	w8, [x29, #-90]
    e314:	cmp	w8, #0x10
    e318:	b.ge	e37c <inflate@@Base+0x16e8>  // b.tcont
    e31c:	ldurb	w8, [x29, #-91]
    e320:	mov	w9, w8
    e324:	ldur	x10, [x29, #-64]
    e328:	lsr	x9, x10, x9
    e32c:	stur	x9, [x29, #-64]
    e330:	ldurb	w8, [x29, #-91]
    e334:	ldur	w11, [x29, #-68]
    e338:	subs	w8, w11, w8
    e33c:	stur	w8, [x29, #-68]
    e340:	mov	x8, #0x2                   	// #2
    e344:	sub	x9, x29, #0x5c
    e348:	ldrh	w10, [x9, #2]
    e34c:	ldur	x9, [x29, #-32]
    e350:	add	x9, x9, #0x98
    e354:	ldur	x11, [x29, #-32]
    e358:	ldr	w12, [x11, #140]
    e35c:	mov	w13, w12
    e360:	mov	w12, w13
    e364:	add	w12, w12, #0x1
    e368:	str	w12, [x11, #140]
    e36c:	mul	x8, x8, x13
    e370:	add	x8, x9, x8
    e374:	strh	w10, [x8]
    e378:	b	e69c <inflate@@Base+0x1a08>
    e37c:	ldurh	w8, [x29, #-90]
    e380:	cmp	w8, #0x10
    e384:	b.ne	e488 <inflate@@Base+0x17f4>  // b.any
    e388:	ldur	w8, [x29, #-68]
    e38c:	ldurb	w9, [x29, #-91]
    e390:	add	w9, w9, #0x2
    e394:	cmp	w8, w9
    e398:	b.cs	e3f0 <inflate@@Base+0x175c>  // b.hs, b.nlast
    e39c:	ldur	w8, [x29, #-52]
    e3a0:	cbnz	w8, e3a8 <inflate@@Base+0x1714>
    e3a4:	b	f470 <inflate@@Base+0x27dc>
    e3a8:	ldur	w8, [x29, #-52]
    e3ac:	subs	w8, w8, #0x1
    e3b0:	stur	w8, [x29, #-52]
    e3b4:	ldur	x9, [x29, #-40]
    e3b8:	add	x10, x9, #0x1
    e3bc:	stur	x10, [x29, #-40]
    e3c0:	ldrb	w8, [x9]
    e3c4:	mov	w9, w8
    e3c8:	ldur	w8, [x29, #-68]
    e3cc:	mov	w10, w8
    e3d0:	lsl	x9, x9, x10
    e3d4:	ldur	x10, [x29, #-64]
    e3d8:	add	x9, x10, x9
    e3dc:	stur	x9, [x29, #-64]
    e3e0:	ldur	w8, [x29, #-68]
    e3e4:	add	w8, w8, #0x8
    e3e8:	stur	w8, [x29, #-68]
    e3ec:	b	e388 <inflate@@Base+0x16f4>
    e3f0:	ldurb	w8, [x29, #-91]
    e3f4:	mov	w9, w8
    e3f8:	ldur	x10, [x29, #-64]
    e3fc:	lsr	x9, x10, x9
    e400:	stur	x9, [x29, #-64]
    e404:	ldurb	w8, [x29, #-91]
    e408:	ldur	w11, [x29, #-68]
    e40c:	subs	w8, w11, w8
    e410:	stur	w8, [x29, #-68]
    e414:	ldur	x8, [x29, #-32]
    e418:	ldr	w9, [x8, #140]
    e41c:	cbnz	w9, e440 <inflate@@Base+0x17ac>
    e420:	ldur	x8, [x29, #-16]
    e424:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    e428:	add	x9, x9, #0xf9e
    e42c:	str	x9, [x8, #48]
    e430:	ldur	x8, [x29, #-32]
    e434:	mov	w10, #0x3f51                	// #16209
    e438:	str	w10, [x8, #8]
    e43c:	b	e6a0 <inflate@@Base+0x1a0c>
    e440:	ldur	x8, [x29, #-32]
    e444:	add	x8, x8, #0x98
    e448:	ldur	x9, [x29, #-32]
    e44c:	ldr	w10, [x9, #140]
    e450:	subs	w10, w10, #0x1
    e454:	ldrh	w10, [x8, w10, uxtw #1]
    e458:	str	w10, [sp, #92]
    e45c:	ldur	x8, [x29, #-64]
    e460:	and	w8, w8, #0x3
    e464:	add	w8, w8, #0x3
    e468:	stur	w8, [x29, #-80]
    e46c:	ldur	x8, [x29, #-64]
    e470:	lsr	x8, x8, #2
    e474:	stur	x8, [x29, #-64]
    e478:	ldur	w9, [x29, #-68]
    e47c:	subs	w9, w9, #0x2
    e480:	stur	w9, [x29, #-68]
    e484:	b	e608 <inflate@@Base+0x1974>
    e488:	ldurh	w8, [x29, #-90]
    e48c:	cmp	w8, #0x11
    e490:	b.ne	e550 <inflate@@Base+0x18bc>  // b.any
    e494:	ldur	w8, [x29, #-68]
    e498:	ldurb	w9, [x29, #-91]
    e49c:	add	w9, w9, #0x3
    e4a0:	cmp	w8, w9
    e4a4:	b.cs	e4fc <inflate@@Base+0x1868>  // b.hs, b.nlast
    e4a8:	ldur	w8, [x29, #-52]
    e4ac:	cbnz	w8, e4b4 <inflate@@Base+0x1820>
    e4b0:	b	f470 <inflate@@Base+0x27dc>
    e4b4:	ldur	w8, [x29, #-52]
    e4b8:	subs	w8, w8, #0x1
    e4bc:	stur	w8, [x29, #-52]
    e4c0:	ldur	x9, [x29, #-40]
    e4c4:	add	x10, x9, #0x1
    e4c8:	stur	x10, [x29, #-40]
    e4cc:	ldrb	w8, [x9]
    e4d0:	mov	w9, w8
    e4d4:	ldur	w8, [x29, #-68]
    e4d8:	mov	w10, w8
    e4dc:	lsl	x9, x9, x10
    e4e0:	ldur	x10, [x29, #-64]
    e4e4:	add	x9, x10, x9
    e4e8:	stur	x9, [x29, #-64]
    e4ec:	ldur	w8, [x29, #-68]
    e4f0:	add	w8, w8, #0x8
    e4f4:	stur	w8, [x29, #-68]
    e4f8:	b	e494 <inflate@@Base+0x1800>
    e4fc:	ldurb	w8, [x29, #-91]
    e500:	mov	w9, w8
    e504:	ldur	x10, [x29, #-64]
    e508:	lsr	x9, x10, x9
    e50c:	stur	x9, [x29, #-64]
    e510:	ldurb	w8, [x29, #-91]
    e514:	ldur	w11, [x29, #-68]
    e518:	subs	w8, w11, w8
    e51c:	stur	w8, [x29, #-68]
    e520:	str	wzr, [sp, #92]
    e524:	ldur	x8, [x29, #-64]
    e528:	and	w8, w8, #0x7
    e52c:	add	w8, w8, #0x3
    e530:	stur	w8, [x29, #-80]
    e534:	ldur	x8, [x29, #-64]
    e538:	lsr	x8, x8, #3
    e53c:	stur	x8, [x29, #-64]
    e540:	ldur	w9, [x29, #-68]
    e544:	subs	w9, w9, #0x3
    e548:	stur	w9, [x29, #-68]
    e54c:	b	e608 <inflate@@Base+0x1974>
    e550:	ldur	w8, [x29, #-68]
    e554:	ldurb	w9, [x29, #-91]
    e558:	add	w9, w9, #0x7
    e55c:	cmp	w8, w9
    e560:	b.cs	e5b8 <inflate@@Base+0x1924>  // b.hs, b.nlast
    e564:	ldur	w8, [x29, #-52]
    e568:	cbnz	w8, e570 <inflate@@Base+0x18dc>
    e56c:	b	f470 <inflate@@Base+0x27dc>
    e570:	ldur	w8, [x29, #-52]
    e574:	subs	w8, w8, #0x1
    e578:	stur	w8, [x29, #-52]
    e57c:	ldur	x9, [x29, #-40]
    e580:	add	x10, x9, #0x1
    e584:	stur	x10, [x29, #-40]
    e588:	ldrb	w8, [x9]
    e58c:	mov	w9, w8
    e590:	ldur	w8, [x29, #-68]
    e594:	mov	w10, w8
    e598:	lsl	x9, x9, x10
    e59c:	ldur	x10, [x29, #-64]
    e5a0:	add	x9, x10, x9
    e5a4:	stur	x9, [x29, #-64]
    e5a8:	ldur	w8, [x29, #-68]
    e5ac:	add	w8, w8, #0x8
    e5b0:	stur	w8, [x29, #-68]
    e5b4:	b	e550 <inflate@@Base+0x18bc>
    e5b8:	ldurb	w8, [x29, #-91]
    e5bc:	mov	w9, w8
    e5c0:	ldur	x10, [x29, #-64]
    e5c4:	lsr	x9, x10, x9
    e5c8:	stur	x9, [x29, #-64]
    e5cc:	ldurb	w8, [x29, #-91]
    e5d0:	ldur	w11, [x29, #-68]
    e5d4:	subs	w8, w11, w8
    e5d8:	stur	w8, [x29, #-68]
    e5dc:	str	wzr, [sp, #92]
    e5e0:	ldur	x8, [x29, #-64]
    e5e4:	and	w8, w8, #0x7f
    e5e8:	add	w8, w8, #0xb
    e5ec:	stur	w8, [x29, #-80]
    e5f0:	ldur	x8, [x29, #-64]
    e5f4:	lsr	x8, x8, #7
    e5f8:	stur	x8, [x29, #-64]
    e5fc:	ldur	w9, [x29, #-68]
    e600:	subs	w9, w9, #0x7
    e604:	stur	w9, [x29, #-68]
    e608:	ldur	x8, [x29, #-32]
    e60c:	ldr	w9, [x8, #140]
    e610:	ldur	w10, [x29, #-80]
    e614:	add	w9, w9, w10
    e618:	ldur	x8, [x29, #-32]
    e61c:	ldr	w10, [x8, #132]
    e620:	ldur	x8, [x29, #-32]
    e624:	ldr	w11, [x8, #136]
    e628:	add	w10, w10, w11
    e62c:	cmp	w9, w10
    e630:	b.ls	e654 <inflate@@Base+0x19c0>  // b.plast
    e634:	ldur	x8, [x29, #-16]
    e638:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    e63c:	add	x9, x9, #0xf9e
    e640:	str	x9, [x8, #48]
    e644:	ldur	x8, [x29, #-32]
    e648:	mov	w10, #0x3f51                	// #16209
    e64c:	str	w10, [x8, #8]
    e650:	b	e6a0 <inflate@@Base+0x1a0c>
    e654:	ldur	w8, [x29, #-80]
    e658:	subs	w9, w8, #0x1
    e65c:	stur	w9, [x29, #-80]
    e660:	cbz	w8, e69c <inflate@@Base+0x1a08>
    e664:	ldr	w8, [sp, #92]
    e668:	ldur	x9, [x29, #-32]
    e66c:	add	x9, x9, #0x98
    e670:	ldur	x10, [x29, #-32]
    e674:	ldr	w11, [x10, #140]
    e678:	mov	w12, w11
    e67c:	mov	w11, w12
    e680:	add	w11, w11, #0x1
    e684:	str	w11, [x10, #140]
    e688:	mov	x10, #0x2                   	// #2
    e68c:	mul	x10, x10, x12
    e690:	add	x9, x9, x10
    e694:	strh	w8, [x9]
    e698:	b	e654 <inflate@@Base+0x19c0>
    e69c:	b	e258 <inflate@@Base+0x15c4>
    e6a0:	ldur	x8, [x29, #-32]
    e6a4:	ldr	w9, [x8, #8]
    e6a8:	mov	w10, #0x3f51                	// #16209
    e6ac:	cmp	w9, w10
    e6b0:	b.ne	e6b8 <inflate@@Base+0x1a24>  // b.any
    e6b4:	b	f46c <inflate@@Base+0x27d8>
    e6b8:	ldur	x8, [x29, #-32]
    e6bc:	ldrh	w9, [x8, #664]
    e6c0:	cbnz	w9, e6e4 <inflate@@Base+0x1a50>
    e6c4:	ldur	x8, [x29, #-16]
    e6c8:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    e6cc:	add	x9, x9, #0xfb8
    e6d0:	str	x9, [x8, #48]
    e6d4:	ldur	x8, [x29, #-32]
    e6d8:	mov	w10, #0x3f51                	// #16209
    e6dc:	str	w10, [x8, #8]
    e6e0:	b	f46c <inflate@@Base+0x27d8>
    e6e4:	ldur	x8, [x29, #-32]
    e6e8:	add	x8, x8, #0x558
    e6ec:	ldur	x9, [x29, #-32]
    e6f0:	str	x8, [x9, #144]
    e6f4:	ldur	x8, [x29, #-32]
    e6f8:	ldr	x8, [x8, #144]
    e6fc:	ldur	x9, [x29, #-32]
    e700:	str	x8, [x9, #104]
    e704:	ldur	x8, [x29, #-32]
    e708:	mov	w10, #0x9                   	// #9
    e70c:	str	w10, [x8, #120]
    e710:	ldur	x8, [x29, #-32]
    e714:	add	x1, x8, #0x98
    e718:	ldur	x8, [x29, #-32]
    e71c:	ldr	w2, [x8, #132]
    e720:	ldur	x8, [x29, #-32]
    e724:	add	x3, x8, #0x90
    e728:	ldur	x8, [x29, #-32]
    e72c:	add	x4, x8, #0x78
    e730:	ldur	x8, [x29, #-32]
    e734:	add	x5, x8, #0x318
    e738:	mov	w0, #0x1                   	// #1
    e73c:	bl	104c0 <inflateCodesUsed@@ZLIB_1.2.9+0x64>
    e740:	str	w0, [sp, #88]
    e744:	ldr	w10, [sp, #88]
    e748:	cbz	w10, e76c <inflate@@Base+0x1ad8>
    e74c:	ldur	x8, [x29, #-16]
    e750:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    e754:	add	x9, x9, #0xfdd
    e758:	str	x9, [x8, #48]
    e75c:	ldur	x8, [x29, #-32]
    e760:	mov	w10, #0x3f51                	// #16209
    e764:	str	w10, [x8, #8]
    e768:	b	f46c <inflate@@Base+0x27d8>
    e76c:	ldur	x8, [x29, #-32]
    e770:	ldr	x8, [x8, #144]
    e774:	ldur	x9, [x29, #-32]
    e778:	str	x8, [x9, #112]
    e77c:	ldur	x8, [x29, #-32]
    e780:	mov	w10, #0x6                   	// #6
    e784:	str	w10, [x8, #124]
    e788:	ldur	x8, [x29, #-32]
    e78c:	add	x8, x8, #0x98
    e790:	ldur	x9, [x29, #-32]
    e794:	ldr	w10, [x9, #132]
    e798:	mov	w9, w10
    e79c:	mov	x11, #0x2                   	// #2
    e7a0:	mul	x9, x11, x9
    e7a4:	add	x1, x8, x9
    e7a8:	ldur	x8, [x29, #-32]
    e7ac:	ldr	w2, [x8, #136]
    e7b0:	ldur	x8, [x29, #-32]
    e7b4:	add	x3, x8, #0x90
    e7b8:	ldur	x8, [x29, #-32]
    e7bc:	add	x4, x8, #0x7c
    e7c0:	ldur	x8, [x29, #-32]
    e7c4:	add	x5, x8, #0x318
    e7c8:	mov	w0, #0x2                   	// #2
    e7cc:	bl	104c0 <inflateCodesUsed@@ZLIB_1.2.9+0x64>
    e7d0:	str	w0, [sp, #88]
    e7d4:	ldr	w10, [sp, #88]
    e7d8:	cbz	w10, e7fc <inflate@@Base+0x1b68>
    e7dc:	ldur	x8, [x29, #-16]
    e7e0:	adrp	x9, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
    e7e4:	add	x9, x9, #0xff9
    e7e8:	str	x9, [x8, #48]
    e7ec:	ldur	x8, [x29, #-32]
    e7f0:	mov	w10, #0x3f51                	// #16209
    e7f4:	str	w10, [x8, #8]
    e7f8:	b	f46c <inflate@@Base+0x27d8>
    e7fc:	ldur	x8, [x29, #-32]
    e800:	mov	w9, #0x3f47                	// #16199
    e804:	str	w9, [x8, #8]
    e808:	ldur	w9, [x29, #-20]
    e80c:	cmp	w9, #0x6
    e810:	b.ne	e818 <inflate@@Base+0x1b84>  // b.any
    e814:	b	f470 <inflate@@Base+0x27dc>
    e818:	ldur	x8, [x29, #-32]
    e81c:	mov	w9, #0x3f48                	// #16200
    e820:	str	w9, [x8, #8]
    e824:	ldur	w8, [x29, #-52]
    e828:	cmp	w8, #0x6
    e82c:	b.cc	e8fc <inflate@@Base+0x1c68>  // b.lo, b.ul, b.last
    e830:	ldur	w8, [x29, #-56]
    e834:	cmp	w8, #0x102
    e838:	b.cc	e8fc <inflate@@Base+0x1c68>  // b.lo, b.ul, b.last
    e83c:	ldur	x8, [x29, #-48]
    e840:	ldur	x9, [x29, #-16]
    e844:	str	x8, [x9, #24]
    e848:	ldur	w10, [x29, #-56]
    e84c:	ldur	x8, [x29, #-16]
    e850:	str	w10, [x8, #32]
    e854:	ldur	x8, [x29, #-40]
    e858:	ldur	x9, [x29, #-16]
    e85c:	str	x8, [x9]
    e860:	ldur	w10, [x29, #-52]
    e864:	ldur	x8, [x29, #-16]
    e868:	str	w10, [x8, #8]
    e86c:	ldur	x8, [x29, #-64]
    e870:	ldur	x9, [x29, #-32]
    e874:	str	x8, [x9, #80]
    e878:	ldur	w10, [x29, #-68]
    e87c:	ldur	x8, [x29, #-32]
    e880:	str	w10, [x8, #88]
    e884:	ldur	x0, [x29, #-16]
    e888:	ldur	w1, [x29, #-76]
    e88c:	bl	bb44 <inflateBackEnd@@ZLIB_1.2.0+0x78>
    e890:	ldur	x8, [x29, #-16]
    e894:	ldr	x8, [x8, #24]
    e898:	stur	x8, [x29, #-48]
    e89c:	ldur	x8, [x29, #-16]
    e8a0:	ldr	w9, [x8, #32]
    e8a4:	stur	w9, [x29, #-56]
    e8a8:	ldur	x8, [x29, #-16]
    e8ac:	ldr	x8, [x8]
    e8b0:	stur	x8, [x29, #-40]
    e8b4:	ldur	x8, [x29, #-16]
    e8b8:	ldr	w9, [x8, #8]
    e8bc:	stur	w9, [x29, #-52]
    e8c0:	ldur	x8, [x29, #-32]
    e8c4:	ldr	x8, [x8, #80]
    e8c8:	stur	x8, [x29, #-64]
    e8cc:	ldur	x8, [x29, #-32]
    e8d0:	ldr	w9, [x8, #88]
    e8d4:	stur	w9, [x29, #-68]
    e8d8:	ldur	x8, [x29, #-32]
    e8dc:	ldr	w9, [x8, #8]
    e8e0:	mov	w10, #0x3f3f                	// #16191
    e8e4:	cmp	w9, w10
    e8e8:	b.ne	e8f8 <inflate@@Base+0x1c64>  // b.any
    e8ec:	ldur	x8, [x29, #-32]
    e8f0:	mov	w9, #0xffffffff            	// #-1
    e8f4:	str	w9, [x8, #7148]
    e8f8:	b	f46c <inflate@@Base+0x27d8>
    e8fc:	ldur	x8, [x29, #-32]
    e900:	str	wzr, [x8, #7148]
    e904:	ldur	x8, [x29, #-32]
    e908:	ldr	x8, [x8, #104]
    e90c:	ldur	x9, [x29, #-64]
    e910:	ldur	x10, [x29, #-32]
    e914:	ldr	w11, [x10, #120]
    e918:	mov	w12, #0x1                   	// #1
    e91c:	lsl	w11, w12, w11
    e920:	subs	w11, w11, #0x1
    e924:	and	w9, w9, w11
    e928:	ldr	w9, [x8, w9, uxtw #2]
    e92c:	stur	w9, [x29, #-92]
    e930:	ldurb	w9, [x29, #-91]
    e934:	ldur	w11, [x29, #-68]
    e938:	cmp	w9, w11
    e93c:	b.hi	e944 <inflate@@Base+0x1cb0>  // b.pmore
    e940:	b	e998 <inflate@@Base+0x1d04>
    e944:	ldur	w8, [x29, #-52]
    e948:	cbnz	w8, e950 <inflate@@Base+0x1cbc>
    e94c:	b	f470 <inflate@@Base+0x27dc>
    e950:	ldur	w8, [x29, #-52]
    e954:	subs	w8, w8, #0x1
    e958:	stur	w8, [x29, #-52]
    e95c:	ldur	x9, [x29, #-40]
    e960:	add	x10, x9, #0x1
    e964:	stur	x10, [x29, #-40]
    e968:	ldrb	w8, [x9]
    e96c:	mov	w9, w8
    e970:	ldur	w8, [x29, #-68]
    e974:	mov	w10, w8
    e978:	lsl	x9, x9, x10
    e97c:	ldur	x10, [x29, #-64]
    e980:	add	x9, x10, x9
    e984:	stur	x9, [x29, #-64]
    e988:	ldur	w8, [x29, #-68]
    e98c:	add	w8, w8, #0x8
    e990:	stur	w8, [x29, #-68]
    e994:	b	e904 <inflate@@Base+0x1c70>
    e998:	ldurb	w8, [x29, #-92]
    e99c:	cbz	w8, ea9c <inflate@@Base+0x1e08>
    e9a0:	ldurb	w8, [x29, #-92]
    e9a4:	and	w8, w8, #0xf0
    e9a8:	cbnz	w8, ea9c <inflate@@Base+0x1e08>
    e9ac:	ldur	w8, [x29, #-92]
    e9b0:	str	w8, [sp, #96]
    e9b4:	ldur	x8, [x29, #-32]
    e9b8:	ldr	x8, [x8, #104]
    e9bc:	ldrh	w9, [sp, #98]
    e9c0:	ldur	x10, [x29, #-64]
    e9c4:	ldrb	w11, [sp, #97]
    e9c8:	ldrb	w12, [sp, #96]
    e9cc:	add	w11, w11, w12
    e9d0:	mov	w12, #0x1                   	// #1
    e9d4:	lsl	w11, w12, w11
    e9d8:	subs	w11, w11, #0x1
    e9dc:	and	w10, w10, w11
    e9e0:	ldrb	w11, [sp, #97]
    e9e4:	lsr	w10, w10, w11
    e9e8:	add	w9, w9, w10
    e9ec:	ldr	w9, [x8, w9, uxtw #2]
    e9f0:	stur	w9, [x29, #-92]
    e9f4:	ldrb	w9, [sp, #97]
    e9f8:	ldurb	w10, [x29, #-91]
    e9fc:	add	w9, w9, w10
    ea00:	ldur	w10, [x29, #-68]
    ea04:	cmp	w9, w10
    ea08:	b.hi	ea10 <inflate@@Base+0x1d7c>  // b.pmore
    ea0c:	b	ea64 <inflate@@Base+0x1dd0>
    ea10:	ldur	w8, [x29, #-52]
    ea14:	cbnz	w8, ea1c <inflate@@Base+0x1d88>
    ea18:	b	f470 <inflate@@Base+0x27dc>
    ea1c:	ldur	w8, [x29, #-52]
    ea20:	subs	w8, w8, #0x1
    ea24:	stur	w8, [x29, #-52]
    ea28:	ldur	x9, [x29, #-40]
    ea2c:	add	x10, x9, #0x1
    ea30:	stur	x10, [x29, #-40]
    ea34:	ldrb	w8, [x9]
    ea38:	mov	w9, w8
    ea3c:	ldur	w8, [x29, #-68]
    ea40:	mov	w10, w8
    ea44:	lsl	x9, x9, x10
    ea48:	ldur	x10, [x29, #-64]
    ea4c:	add	x9, x10, x9
    ea50:	stur	x9, [x29, #-64]
    ea54:	ldur	w8, [x29, #-68]
    ea58:	add	w8, w8, #0x8
    ea5c:	stur	w8, [x29, #-68]
    ea60:	b	e9b4 <inflate@@Base+0x1d20>
    ea64:	ldrb	w8, [sp, #97]
    ea68:	mov	w9, w8
    ea6c:	ldur	x10, [x29, #-64]
    ea70:	lsr	x9, x10, x9
    ea74:	stur	x9, [x29, #-64]
    ea78:	ldrb	w8, [sp, #97]
    ea7c:	ldur	w11, [x29, #-68]
    ea80:	subs	w8, w11, w8
    ea84:	stur	w8, [x29, #-68]
    ea88:	ldrb	w8, [sp, #97]
    ea8c:	ldur	x9, [x29, #-32]
    ea90:	ldr	w10, [x9, #7148]
    ea94:	add	w8, w10, w8
    ea98:	str	w8, [x9, #7148]
    ea9c:	ldurb	w8, [x29, #-91]
    eaa0:	mov	w9, w8
    eaa4:	ldur	x10, [x29, #-64]
    eaa8:	lsr	x9, x10, x9
    eaac:	stur	x9, [x29, #-64]
    eab0:	ldurb	w8, [x29, #-91]
    eab4:	ldur	w11, [x29, #-68]
    eab8:	subs	w8, w11, w8
    eabc:	stur	w8, [x29, #-68]
    eac0:	ldurb	w8, [x29, #-91]
    eac4:	ldur	x9, [x29, #-32]
    eac8:	ldr	w10, [x9, #7148]
    eacc:	add	w8, w10, w8
    ead0:	str	w8, [x9, #7148]
    ead4:	ldurh	w8, [x29, #-90]
    ead8:	ldur	x9, [x29, #-32]
    eadc:	str	w8, [x9, #92]
    eae0:	ldurb	w8, [x29, #-92]
    eae4:	cbnz	w8, eaf8 <inflate@@Base+0x1e64>
    eae8:	ldur	x8, [x29, #-32]
    eaec:	mov	w9, #0x3f4d                	// #16205
    eaf0:	str	w9, [x8, #8]
    eaf4:	b	f46c <inflate@@Base+0x27d8>
    eaf8:	ldurb	w8, [x29, #-92]
    eafc:	and	w8, w8, #0x20
    eb00:	cbz	w8, eb20 <inflate@@Base+0x1e8c>
    eb04:	ldur	x8, [x29, #-32]
    eb08:	mov	w9, #0xffffffff            	// #-1
    eb0c:	str	w9, [x8, #7148]
    eb10:	ldur	x8, [x29, #-32]
    eb14:	mov	w9, #0x3f3f                	// #16191
    eb18:	str	w9, [x8, #8]
    eb1c:	b	f46c <inflate@@Base+0x27d8>
    eb20:	ldurb	w8, [x29, #-92]
    eb24:	and	w8, w8, #0x40
    eb28:	cbz	w8, eb4c <inflate@@Base+0x1eb8>
    eb2c:	ldur	x8, [x29, #-16]
    eb30:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    eb34:	add	x9, x9, #0xf
    eb38:	str	x9, [x8, #48]
    eb3c:	ldur	x8, [x29, #-32]
    eb40:	mov	w10, #0x3f51                	// #16209
    eb44:	str	w10, [x8, #8]
    eb48:	b	f46c <inflate@@Base+0x27d8>
    eb4c:	ldurb	w8, [x29, #-92]
    eb50:	and	w8, w8, #0xf
    eb54:	ldur	x9, [x29, #-32]
    eb58:	str	w8, [x9, #100]
    eb5c:	ldur	x9, [x29, #-32]
    eb60:	mov	w8, #0x3f49                	// #16201
    eb64:	str	w8, [x9, #8]
    eb68:	ldur	x8, [x29, #-32]
    eb6c:	ldr	w9, [x8, #100]
    eb70:	cbz	w9, ec4c <inflate@@Base+0x1fb8>
    eb74:	ldur	w8, [x29, #-68]
    eb78:	ldur	x9, [x29, #-32]
    eb7c:	ldr	w10, [x9, #100]
    eb80:	cmp	w8, w10
    eb84:	b.cs	ebdc <inflate@@Base+0x1f48>  // b.hs, b.nlast
    eb88:	ldur	w8, [x29, #-52]
    eb8c:	cbnz	w8, eb94 <inflate@@Base+0x1f00>
    eb90:	b	f470 <inflate@@Base+0x27dc>
    eb94:	ldur	w8, [x29, #-52]
    eb98:	subs	w8, w8, #0x1
    eb9c:	stur	w8, [x29, #-52]
    eba0:	ldur	x9, [x29, #-40]
    eba4:	add	x10, x9, #0x1
    eba8:	stur	x10, [x29, #-40]
    ebac:	ldrb	w8, [x9]
    ebb0:	mov	w9, w8
    ebb4:	ldur	w8, [x29, #-68]
    ebb8:	mov	w10, w8
    ebbc:	lsl	x9, x9, x10
    ebc0:	ldur	x10, [x29, #-64]
    ebc4:	add	x9, x10, x9
    ebc8:	stur	x9, [x29, #-64]
    ebcc:	ldur	w8, [x29, #-68]
    ebd0:	add	w8, w8, #0x8
    ebd4:	stur	w8, [x29, #-68]
    ebd8:	b	eb74 <inflate@@Base+0x1ee0>
    ebdc:	ldur	x8, [x29, #-64]
    ebe0:	ldur	x9, [x29, #-32]
    ebe4:	ldr	w10, [x9, #100]
    ebe8:	mov	w11, #0x1                   	// #1
    ebec:	lsl	w10, w11, w10
    ebf0:	subs	w10, w10, #0x1
    ebf4:	and	w8, w8, w10
    ebf8:	ldur	x9, [x29, #-32]
    ebfc:	ldr	w10, [x9, #92]
    ec00:	add	w8, w10, w8
    ec04:	str	w8, [x9, #92]
    ec08:	ldur	x8, [x29, #-32]
    ec0c:	ldr	w9, [x8, #100]
    ec10:	mov	w8, w9
    ec14:	ldur	x10, [x29, #-64]
    ec18:	lsr	x8, x10, x8
    ec1c:	stur	x8, [x29, #-64]
    ec20:	ldur	x8, [x29, #-32]
    ec24:	ldr	w9, [x8, #100]
    ec28:	ldur	w11, [x29, #-68]
    ec2c:	subs	w9, w11, w9
    ec30:	stur	w9, [x29, #-68]
    ec34:	ldur	x8, [x29, #-32]
    ec38:	ldr	w9, [x8, #100]
    ec3c:	ldur	x8, [x29, #-32]
    ec40:	ldr	w10, [x8, #7148]
    ec44:	add	w9, w10, w9
    ec48:	str	w9, [x8, #7148]
    ec4c:	ldur	x8, [x29, #-32]
    ec50:	ldr	w9, [x8, #92]
    ec54:	ldur	x8, [x29, #-32]
    ec58:	str	w9, [x8, #7152]
    ec5c:	ldur	x8, [x29, #-32]
    ec60:	mov	w9, #0x3f4a                	// #16202
    ec64:	str	w9, [x8, #8]
    ec68:	ldur	x8, [x29, #-32]
    ec6c:	ldr	x8, [x8, #112]
    ec70:	ldur	x9, [x29, #-64]
    ec74:	ldur	x10, [x29, #-32]
    ec78:	ldr	w11, [x10, #124]
    ec7c:	mov	w12, #0x1                   	// #1
    ec80:	lsl	w11, w12, w11
    ec84:	subs	w11, w11, #0x1
    ec88:	and	w9, w9, w11
    ec8c:	ldr	w9, [x8, w9, uxtw #2]
    ec90:	stur	w9, [x29, #-92]
    ec94:	ldurb	w9, [x29, #-91]
    ec98:	ldur	w11, [x29, #-68]
    ec9c:	cmp	w9, w11
    eca0:	b.hi	eca8 <inflate@@Base+0x2014>  // b.pmore
    eca4:	b	ecfc <inflate@@Base+0x2068>
    eca8:	ldur	w8, [x29, #-52]
    ecac:	cbnz	w8, ecb4 <inflate@@Base+0x2020>
    ecb0:	b	f470 <inflate@@Base+0x27dc>
    ecb4:	ldur	w8, [x29, #-52]
    ecb8:	subs	w8, w8, #0x1
    ecbc:	stur	w8, [x29, #-52]
    ecc0:	ldur	x9, [x29, #-40]
    ecc4:	add	x10, x9, #0x1
    ecc8:	stur	x10, [x29, #-40]
    eccc:	ldrb	w8, [x9]
    ecd0:	mov	w9, w8
    ecd4:	ldur	w8, [x29, #-68]
    ecd8:	mov	w10, w8
    ecdc:	lsl	x9, x9, x10
    ece0:	ldur	x10, [x29, #-64]
    ece4:	add	x9, x10, x9
    ece8:	stur	x9, [x29, #-64]
    ecec:	ldur	w8, [x29, #-68]
    ecf0:	add	w8, w8, #0x8
    ecf4:	stur	w8, [x29, #-68]
    ecf8:	b	ec68 <inflate@@Base+0x1fd4>
    ecfc:	ldurb	w8, [x29, #-92]
    ed00:	and	w8, w8, #0xf0
    ed04:	cbnz	w8, edf8 <inflate@@Base+0x2164>
    ed08:	ldur	w8, [x29, #-92]
    ed0c:	str	w8, [sp, #96]
    ed10:	ldur	x8, [x29, #-32]
    ed14:	ldr	x8, [x8, #112]
    ed18:	ldrh	w9, [sp, #98]
    ed1c:	ldur	x10, [x29, #-64]
    ed20:	ldrb	w11, [sp, #97]
    ed24:	ldrb	w12, [sp, #96]
    ed28:	add	w11, w11, w12
    ed2c:	mov	w12, #0x1                   	// #1
    ed30:	lsl	w11, w12, w11
    ed34:	subs	w11, w11, #0x1
    ed38:	and	w10, w10, w11
    ed3c:	ldrb	w11, [sp, #97]
    ed40:	lsr	w10, w10, w11
    ed44:	add	w9, w9, w10
    ed48:	ldr	w9, [x8, w9, uxtw #2]
    ed4c:	stur	w9, [x29, #-92]
    ed50:	ldrb	w9, [sp, #97]
    ed54:	ldurb	w10, [x29, #-91]
    ed58:	add	w9, w9, w10
    ed5c:	ldur	w10, [x29, #-68]
    ed60:	cmp	w9, w10
    ed64:	b.hi	ed6c <inflate@@Base+0x20d8>  // b.pmore
    ed68:	b	edc0 <inflate@@Base+0x212c>
    ed6c:	ldur	w8, [x29, #-52]
    ed70:	cbnz	w8, ed78 <inflate@@Base+0x20e4>
    ed74:	b	f470 <inflate@@Base+0x27dc>
    ed78:	ldur	w8, [x29, #-52]
    ed7c:	subs	w8, w8, #0x1
    ed80:	stur	w8, [x29, #-52]
    ed84:	ldur	x9, [x29, #-40]
    ed88:	add	x10, x9, #0x1
    ed8c:	stur	x10, [x29, #-40]
    ed90:	ldrb	w8, [x9]
    ed94:	mov	w9, w8
    ed98:	ldur	w8, [x29, #-68]
    ed9c:	mov	w10, w8
    eda0:	lsl	x9, x9, x10
    eda4:	ldur	x10, [x29, #-64]
    eda8:	add	x9, x10, x9
    edac:	stur	x9, [x29, #-64]
    edb0:	ldur	w8, [x29, #-68]
    edb4:	add	w8, w8, #0x8
    edb8:	stur	w8, [x29, #-68]
    edbc:	b	ed10 <inflate@@Base+0x207c>
    edc0:	ldrb	w8, [sp, #97]
    edc4:	mov	w9, w8
    edc8:	ldur	x10, [x29, #-64]
    edcc:	lsr	x9, x10, x9
    edd0:	stur	x9, [x29, #-64]
    edd4:	ldrb	w8, [sp, #97]
    edd8:	ldur	w11, [x29, #-68]
    eddc:	subs	w8, w11, w8
    ede0:	stur	w8, [x29, #-68]
    ede4:	ldrb	w8, [sp, #97]
    ede8:	ldur	x9, [x29, #-32]
    edec:	ldr	w10, [x9, #7148]
    edf0:	add	w8, w10, w8
    edf4:	str	w8, [x9, #7148]
    edf8:	ldurb	w8, [x29, #-91]
    edfc:	mov	w9, w8
    ee00:	ldur	x10, [x29, #-64]
    ee04:	lsr	x9, x10, x9
    ee08:	stur	x9, [x29, #-64]
    ee0c:	ldurb	w8, [x29, #-91]
    ee10:	ldur	w11, [x29, #-68]
    ee14:	subs	w8, w11, w8
    ee18:	stur	w8, [x29, #-68]
    ee1c:	ldurb	w8, [x29, #-91]
    ee20:	ldur	x9, [x29, #-32]
    ee24:	ldr	w10, [x9, #7148]
    ee28:	add	w8, w10, w8
    ee2c:	str	w8, [x9, #7148]
    ee30:	ldurb	w8, [x29, #-92]
    ee34:	and	w8, w8, #0x40
    ee38:	cbz	w8, ee5c <inflate@@Base+0x21c8>
    ee3c:	ldur	x8, [x29, #-16]
    ee40:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    ee44:	add	x9, x9, #0x2b
    ee48:	str	x9, [x8, #48]
    ee4c:	ldur	x8, [x29, #-32]
    ee50:	mov	w10, #0x3f51                	// #16209
    ee54:	str	w10, [x8, #8]
    ee58:	b	f46c <inflate@@Base+0x27d8>
    ee5c:	ldurh	w8, [x29, #-90]
    ee60:	ldur	x9, [x29, #-32]
    ee64:	str	w8, [x9, #96]
    ee68:	ldurb	w8, [x29, #-92]
    ee6c:	and	w8, w8, #0xf
    ee70:	ldur	x9, [x29, #-32]
    ee74:	str	w8, [x9, #100]
    ee78:	ldur	x9, [x29, #-32]
    ee7c:	mov	w8, #0x3f4b                	// #16203
    ee80:	str	w8, [x9, #8]
    ee84:	ldur	x8, [x29, #-32]
    ee88:	ldr	w9, [x8, #100]
    ee8c:	cbz	w9, ef68 <inflate@@Base+0x22d4>
    ee90:	ldur	w8, [x29, #-68]
    ee94:	ldur	x9, [x29, #-32]
    ee98:	ldr	w10, [x9, #100]
    ee9c:	cmp	w8, w10
    eea0:	b.cs	eef8 <inflate@@Base+0x2264>  // b.hs, b.nlast
    eea4:	ldur	w8, [x29, #-52]
    eea8:	cbnz	w8, eeb0 <inflate@@Base+0x221c>
    eeac:	b	f470 <inflate@@Base+0x27dc>
    eeb0:	ldur	w8, [x29, #-52]
    eeb4:	subs	w8, w8, #0x1
    eeb8:	stur	w8, [x29, #-52]
    eebc:	ldur	x9, [x29, #-40]
    eec0:	add	x10, x9, #0x1
    eec4:	stur	x10, [x29, #-40]
    eec8:	ldrb	w8, [x9]
    eecc:	mov	w9, w8
    eed0:	ldur	w8, [x29, #-68]
    eed4:	mov	w10, w8
    eed8:	lsl	x9, x9, x10
    eedc:	ldur	x10, [x29, #-64]
    eee0:	add	x9, x10, x9
    eee4:	stur	x9, [x29, #-64]
    eee8:	ldur	w8, [x29, #-68]
    eeec:	add	w8, w8, #0x8
    eef0:	stur	w8, [x29, #-68]
    eef4:	b	ee90 <inflate@@Base+0x21fc>
    eef8:	ldur	x8, [x29, #-64]
    eefc:	ldur	x9, [x29, #-32]
    ef00:	ldr	w10, [x9, #100]
    ef04:	mov	w11, #0x1                   	// #1
    ef08:	lsl	w10, w11, w10
    ef0c:	subs	w10, w10, #0x1
    ef10:	and	w8, w8, w10
    ef14:	ldur	x9, [x29, #-32]
    ef18:	ldr	w10, [x9, #96]
    ef1c:	add	w8, w10, w8
    ef20:	str	w8, [x9, #96]
    ef24:	ldur	x8, [x29, #-32]
    ef28:	ldr	w9, [x8, #100]
    ef2c:	mov	w8, w9
    ef30:	ldur	x10, [x29, #-64]
    ef34:	lsr	x8, x10, x8
    ef38:	stur	x8, [x29, #-64]
    ef3c:	ldur	x8, [x29, #-32]
    ef40:	ldr	w9, [x8, #100]
    ef44:	ldur	w11, [x29, #-68]
    ef48:	subs	w9, w11, w9
    ef4c:	stur	w9, [x29, #-68]
    ef50:	ldur	x8, [x29, #-32]
    ef54:	ldr	w9, [x8, #100]
    ef58:	ldur	x8, [x29, #-32]
    ef5c:	ldr	w10, [x8, #7148]
    ef60:	add	w9, w10, w9
    ef64:	str	w9, [x8, #7148]
    ef68:	ldur	x8, [x29, #-32]
    ef6c:	mov	w9, #0x3f4c                	// #16204
    ef70:	str	w9, [x8, #8]
    ef74:	ldur	w8, [x29, #-56]
    ef78:	cbnz	w8, ef80 <inflate@@Base+0x22ec>
    ef7c:	b	f470 <inflate@@Base+0x27dc>
    ef80:	ldur	w8, [x29, #-76]
    ef84:	ldur	w9, [x29, #-56]
    ef88:	subs	w8, w8, w9
    ef8c:	stur	w8, [x29, #-80]
    ef90:	ldur	x10, [x29, #-32]
    ef94:	ldr	w8, [x10, #96]
    ef98:	ldur	w9, [x29, #-80]
    ef9c:	cmp	w8, w9
    efa0:	b.ls	f098 <inflate@@Base+0x2404>  // b.plast
    efa4:	ldur	x8, [x29, #-32]
    efa8:	ldr	w9, [x8, #96]
    efac:	ldur	w10, [x29, #-80]
    efb0:	subs	w9, w9, w10
    efb4:	stur	w9, [x29, #-80]
    efb8:	ldur	w9, [x29, #-80]
    efbc:	ldur	x8, [x29, #-32]
    efc0:	ldr	w10, [x8, #64]
    efc4:	cmp	w9, w10
    efc8:	b.ls	eff8 <inflate@@Base+0x2364>  // b.plast
    efcc:	ldur	x8, [x29, #-32]
    efd0:	ldr	w9, [x8, #7144]
    efd4:	cbz	w9, eff8 <inflate@@Base+0x2364>
    efd8:	ldur	x8, [x29, #-16]
    efdc:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    efe0:	add	x9, x9, #0x41
    efe4:	str	x9, [x8, #48]
    efe8:	ldur	x8, [x29, #-32]
    efec:	mov	w10, #0x3f51                	// #16209
    eff0:	str	w10, [x8, #8]
    eff4:	b	f46c <inflate@@Base+0x27d8>
    eff8:	ldur	w8, [x29, #-80]
    effc:	ldur	x9, [x29, #-32]
    f000:	ldr	w10, [x9, #68]
    f004:	cmp	w8, w10
    f008:	b.ls	f04c <inflate@@Base+0x23b8>  // b.plast
    f00c:	ldur	x8, [x29, #-32]
    f010:	ldr	w9, [x8, #68]
    f014:	ldur	w10, [x29, #-80]
    f018:	subs	w9, w10, w9
    f01c:	stur	w9, [x29, #-80]
    f020:	ldur	x8, [x29, #-32]
    f024:	ldr	x8, [x8, #72]
    f028:	ldur	x11, [x29, #-32]
    f02c:	ldr	w9, [x11, #60]
    f030:	ldur	w10, [x29, #-80]
    f034:	subs	w9, w9, w10
    f038:	mov	w11, w9
    f03c:	ubfx	x11, x11, #0, #32
    f040:	add	x8, x8, x11
    f044:	stur	x8, [x29, #-88]
    f048:	b	f074 <inflate@@Base+0x23e0>
    f04c:	ldur	x8, [x29, #-32]
    f050:	ldr	x8, [x8, #72]
    f054:	ldur	x9, [x29, #-32]
    f058:	ldr	w10, [x9, #68]
    f05c:	ldur	w11, [x29, #-80]
    f060:	subs	w10, w10, w11
    f064:	mov	w9, w10
    f068:	ubfx	x9, x9, #0, #32
    f06c:	add	x8, x8, x9
    f070:	stur	x8, [x29, #-88]
    f074:	ldur	w8, [x29, #-80]
    f078:	ldur	x9, [x29, #-32]
    f07c:	ldr	w10, [x9, #92]
    f080:	cmp	w8, w10
    f084:	b.ls	f094 <inflate@@Base+0x2400>  // b.plast
    f088:	ldur	x8, [x29, #-32]
    f08c:	ldr	w9, [x8, #92]
    f090:	stur	w9, [x29, #-80]
    f094:	b	f0c4 <inflate@@Base+0x2430>
    f098:	ldur	x8, [x29, #-48]
    f09c:	ldur	x9, [x29, #-32]
    f0a0:	ldr	w10, [x9, #96]
    f0a4:	mov	w9, w10
    f0a8:	mov	x11, xzr
    f0ac:	subs	x9, x11, x9
    f0b0:	add	x8, x8, x9
    f0b4:	stur	x8, [x29, #-88]
    f0b8:	ldur	x8, [x29, #-32]
    f0bc:	ldr	w10, [x8, #92]
    f0c0:	stur	w10, [x29, #-80]
    f0c4:	ldur	w8, [x29, #-80]
    f0c8:	ldur	w9, [x29, #-56]
    f0cc:	cmp	w8, w9
    f0d0:	b.ls	f0dc <inflate@@Base+0x2448>  // b.plast
    f0d4:	ldur	w8, [x29, #-56]
    f0d8:	stur	w8, [x29, #-80]
    f0dc:	ldur	w8, [x29, #-80]
    f0e0:	ldur	w9, [x29, #-56]
    f0e4:	subs	w8, w9, w8
    f0e8:	stur	w8, [x29, #-56]
    f0ec:	ldur	w8, [x29, #-80]
    f0f0:	ldur	x10, [x29, #-32]
    f0f4:	ldr	w9, [x10, #92]
    f0f8:	subs	w8, w9, w8
    f0fc:	str	w8, [x10, #92]
    f100:	ldur	x8, [x29, #-88]
    f104:	add	x9, x8, #0x1
    f108:	stur	x9, [x29, #-88]
    f10c:	ldrb	w10, [x8]
    f110:	ldur	x8, [x29, #-48]
    f114:	add	x9, x8, #0x1
    f118:	stur	x9, [x29, #-48]
    f11c:	strb	w10, [x8]
    f120:	ldur	w8, [x29, #-80]
    f124:	subs	w8, w8, #0x1
    f128:	stur	w8, [x29, #-80]
    f12c:	cbnz	w8, f100 <inflate@@Base+0x246c>
    f130:	ldur	x8, [x29, #-32]
    f134:	ldr	w9, [x8, #92]
    f138:	cbnz	w9, f148 <inflate@@Base+0x24b4>
    f13c:	ldur	x8, [x29, #-32]
    f140:	mov	w9, #0x3f48                	// #16200
    f144:	str	w9, [x8, #8]
    f148:	b	f46c <inflate@@Base+0x27d8>
    f14c:	ldur	w8, [x29, #-56]
    f150:	cbnz	w8, f158 <inflate@@Base+0x24c4>
    f154:	b	f470 <inflate@@Base+0x27dc>
    f158:	ldur	x8, [x29, #-32]
    f15c:	ldr	w9, [x8, #92]
    f160:	ldur	x8, [x29, #-48]
    f164:	add	x10, x8, #0x1
    f168:	stur	x10, [x29, #-48]
    f16c:	strb	w9, [x8]
    f170:	ldur	w9, [x29, #-56]
    f174:	subs	w9, w9, #0x1
    f178:	stur	w9, [x29, #-56]
    f17c:	ldur	x8, [x29, #-32]
    f180:	mov	w9, #0x3f48                	// #16200
    f184:	str	w9, [x8, #8]
    f188:	b	f46c <inflate@@Base+0x27d8>
    f18c:	ldur	x8, [x29, #-32]
    f190:	ldr	w9, [x8, #16]
    f194:	cbz	w9, f36c <inflate@@Base+0x26d8>
    f198:	ldur	w8, [x29, #-68]
    f19c:	cmp	w8, #0x20
    f1a0:	b.cs	f1f8 <inflate@@Base+0x2564>  // b.hs, b.nlast
    f1a4:	ldur	w8, [x29, #-52]
    f1a8:	cbnz	w8, f1b0 <inflate@@Base+0x251c>
    f1ac:	b	f470 <inflate@@Base+0x27dc>
    f1b0:	ldur	w8, [x29, #-52]
    f1b4:	subs	w8, w8, #0x1
    f1b8:	stur	w8, [x29, #-52]
    f1bc:	ldur	x9, [x29, #-40]
    f1c0:	add	x10, x9, #0x1
    f1c4:	stur	x10, [x29, #-40]
    f1c8:	ldrb	w8, [x9]
    f1cc:	mov	w9, w8
    f1d0:	ldur	w8, [x29, #-68]
    f1d4:	mov	w10, w8
    f1d8:	lsl	x9, x9, x10
    f1dc:	ldur	x10, [x29, #-64]
    f1e0:	add	x9, x10, x9
    f1e4:	stur	x9, [x29, #-64]
    f1e8:	ldur	w8, [x29, #-68]
    f1ec:	add	w8, w8, #0x8
    f1f0:	stur	w8, [x29, #-68]
    f1f4:	b	f198 <inflate@@Base+0x2504>
    f1f8:	ldur	w8, [x29, #-56]
    f1fc:	ldur	w9, [x29, #-76]
    f200:	subs	w8, w9, w8
    f204:	stur	w8, [x29, #-76]
    f208:	ldur	w8, [x29, #-76]
    f20c:	mov	w10, w8
    f210:	ldur	x11, [x29, #-16]
    f214:	ldr	x12, [x11, #40]
    f218:	add	x10, x12, x10
    f21c:	str	x10, [x11, #40]
    f220:	ldur	w8, [x29, #-76]
    f224:	mov	w10, w8
    f228:	ldur	x11, [x29, #-32]
    f22c:	ldr	x12, [x11, #40]
    f230:	add	x10, x12, x10
    f234:	str	x10, [x11, #40]
    f238:	ldur	x10, [x29, #-32]
    f23c:	ldr	w8, [x10, #16]
    f240:	and	w8, w8, #0x4
    f244:	cbz	w8, f2cc <inflate@@Base+0x2638>
    f248:	ldur	w8, [x29, #-76]
    f24c:	cbz	w8, f2cc <inflate@@Base+0x2638>
    f250:	ldur	x8, [x29, #-32]
    f254:	ldr	w9, [x8, #24]
    f258:	cbz	w9, f28c <inflate@@Base+0x25f8>
    f25c:	ldur	x8, [x29, #-32]
    f260:	ldr	x0, [x8, #32]
    f264:	ldur	x8, [x29, #-48]
    f268:	ldur	w9, [x29, #-76]
    f26c:	mov	w10, w9
    f270:	mov	x11, xzr
    f274:	subs	x10, x11, x10
    f278:	add	x1, x8, x10
    f27c:	ldur	w2, [x29, #-76]
    f280:	bl	2430 <crc32@plt>
    f284:	str	x0, [sp, #24]
    f288:	b	f2b8 <inflate@@Base+0x2624>
    f28c:	ldur	x8, [x29, #-32]
    f290:	ldr	x0, [x8, #32]
    f294:	ldur	x8, [x29, #-48]
    f298:	ldur	w9, [x29, #-76]
    f29c:	mov	w10, w9
    f2a0:	mov	x11, xzr
    f2a4:	subs	x10, x11, x10
    f2a8:	add	x1, x8, x10
    f2ac:	ldur	w2, [x29, #-76]
    f2b0:	bl	2560 <adler32@plt>
    f2b4:	str	x0, [sp, #24]
    f2b8:	ldr	x8, [sp, #24]
    f2bc:	ldur	x9, [x29, #-32]
    f2c0:	str	x8, [x9, #32]
    f2c4:	ldur	x9, [x29, #-16]
    f2c8:	str	x8, [x9, #96]
    f2cc:	ldur	w8, [x29, #-56]
    f2d0:	stur	w8, [x29, #-76]
    f2d4:	ldur	x9, [x29, #-32]
    f2d8:	ldr	w8, [x9, #16]
    f2dc:	and	w8, w8, #0x4
    f2e0:	cbz	w8, f364 <inflate@@Base+0x26d0>
    f2e4:	ldur	x8, [x29, #-32]
    f2e8:	ldr	w9, [x8, #24]
    f2ec:	cbz	w9, f2fc <inflate@@Base+0x2668>
    f2f0:	ldur	x8, [x29, #-64]
    f2f4:	str	x8, [sp, #16]
    f2f8:	b	f330 <inflate@@Base+0x269c>
    f2fc:	ldur	x8, [x29, #-64]
    f300:	lsr	x8, x8, #24
    f304:	ldur	x9, [x29, #-64]
    f308:	lsr	x9, x9, #8
    f30c:	and	x9, x9, #0xff00
    f310:	add	x9, x9, w8, uxtb
    f314:	ldur	x10, [x29, #-64]
    f318:	and	x10, x10, #0xff00
    f31c:	add	x9, x9, x10, lsl #8
    f320:	ldur	x10, [x29, #-64]
    f324:	and	x10, x10, #0xff
    f328:	add	x9, x9, x10, lsl #24
    f32c:	str	x9, [sp, #16]
    f330:	ldr	x8, [sp, #16]
    f334:	ldur	x9, [x29, #-32]
    f338:	ldr	x9, [x9, #32]
    f33c:	cmp	x8, x9
    f340:	b.eq	f364 <inflate@@Base+0x26d0>  // b.none
    f344:	ldur	x8, [x29, #-16]
    f348:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    f34c:	add	x9, x9, #0xa09
    f350:	str	x9, [x8, #48]
    f354:	ldur	x8, [x29, #-32]
    f358:	mov	w10, #0x3f51                	// #16209
    f35c:	str	w10, [x8, #8]
    f360:	b	f46c <inflate@@Base+0x27d8>
    f364:	stur	xzr, [x29, #-64]
    f368:	stur	wzr, [x29, #-68]
    f36c:	ldur	x8, [x29, #-32]
    f370:	mov	w9, #0x3f4f                	// #16207
    f374:	str	w9, [x8, #8]
    f378:	ldur	x8, [x29, #-32]
    f37c:	ldr	w9, [x8, #16]
    f380:	cbz	w9, f430 <inflate@@Base+0x279c>
    f384:	ldur	x8, [x29, #-32]
    f388:	ldr	w9, [x8, #24]
    f38c:	cbz	w9, f430 <inflate@@Base+0x279c>
    f390:	ldur	w8, [x29, #-68]
    f394:	cmp	w8, #0x20
    f398:	b.cs	f3f0 <inflate@@Base+0x275c>  // b.hs, b.nlast
    f39c:	ldur	w8, [x29, #-52]
    f3a0:	cbnz	w8, f3a8 <inflate@@Base+0x2714>
    f3a4:	b	f470 <inflate@@Base+0x27dc>
    f3a8:	ldur	w8, [x29, #-52]
    f3ac:	subs	w8, w8, #0x1
    f3b0:	stur	w8, [x29, #-52]
    f3b4:	ldur	x9, [x29, #-40]
    f3b8:	add	x10, x9, #0x1
    f3bc:	stur	x10, [x29, #-40]
    f3c0:	ldrb	w8, [x9]
    f3c4:	mov	w9, w8
    f3c8:	ldur	w8, [x29, #-68]
    f3cc:	mov	w10, w8
    f3d0:	lsl	x9, x9, x10
    f3d4:	ldur	x10, [x29, #-64]
    f3d8:	add	x9, x10, x9
    f3dc:	stur	x9, [x29, #-64]
    f3e0:	ldur	w8, [x29, #-68]
    f3e4:	add	w8, w8, #0x8
    f3e8:	stur	w8, [x29, #-68]
    f3ec:	b	f390 <inflate@@Base+0x26fc>
    f3f0:	ldur	x8, [x29, #-64]
    f3f4:	ldur	x9, [x29, #-32]
    f3f8:	ldr	x9, [x9, #40]
    f3fc:	and	x9, x9, #0xffffffff
    f400:	cmp	x8, x9
    f404:	b.eq	f428 <inflate@@Base+0x2794>  // b.none
    f408:	ldur	x8, [x29, #-16]
    f40c:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    f410:	add	x9, x9, #0xa1e
    f414:	str	x9, [x8, #48]
    f418:	ldur	x8, [x29, #-32]
    f41c:	mov	w10, #0x3f51                	// #16209
    f420:	str	w10, [x8, #8]
    f424:	b	f46c <inflate@@Base+0x27d8>
    f428:	stur	xzr, [x29, #-64]
    f42c:	stur	wzr, [x29, #-68]
    f430:	ldur	x8, [x29, #-32]
    f434:	mov	w9, #0x3f50                	// #16208
    f438:	str	w9, [x8, #8]
    f43c:	mov	w8, #0x1                   	// #1
    f440:	str	w8, [sp, #88]
    f444:	b	f470 <inflate@@Base+0x27dc>
    f448:	mov	w8, #0xfffffffd            	// #-3
    f44c:	str	w8, [sp, #88]
    f450:	b	f470 <inflate@@Base+0x27dc>
    f454:	mov	w8, #0xfffffffc            	// #-4
    f458:	stur	w8, [x29, #-4]
    f45c:	b	f724 <inflate@@Base+0x2a90>
    f460:	mov	w8, #0xfffffffe            	// #-2
    f464:	stur	w8, [x29, #-4]
    f468:	b	f724 <inflate@@Base+0x2a90>
    f46c:	b	cd6c <inflate@@Base+0xd8>
    f470:	ldur	x8, [x29, #-48]
    f474:	ldur	x9, [x29, #-16]
    f478:	str	x8, [x9, #24]
    f47c:	ldur	w10, [x29, #-56]
    f480:	ldur	x8, [x29, #-16]
    f484:	str	w10, [x8, #32]
    f488:	ldur	x8, [x29, #-40]
    f48c:	ldur	x9, [x29, #-16]
    f490:	str	x8, [x9]
    f494:	ldur	w10, [x29, #-52]
    f498:	ldur	x8, [x29, #-16]
    f49c:	str	w10, [x8, #8]
    f4a0:	ldur	x8, [x29, #-64]
    f4a4:	ldur	x9, [x29, #-32]
    f4a8:	str	x8, [x9, #80]
    f4ac:	ldur	w10, [x29, #-68]
    f4b0:	ldur	x8, [x29, #-32]
    f4b4:	str	w10, [x8, #88]
    f4b8:	ldur	x8, [x29, #-32]
    f4bc:	ldr	w9, [x8, #60]
    f4c0:	cbnz	w9, f50c <inflate@@Base+0x2878>
    f4c4:	ldur	w8, [x29, #-76]
    f4c8:	ldur	x9, [x29, #-16]
    f4cc:	ldr	w10, [x9, #32]
    f4d0:	cmp	w8, w10
    f4d4:	b.eq	f548 <inflate@@Base+0x28b4>  // b.none
    f4d8:	ldur	x8, [x29, #-32]
    f4dc:	ldr	w9, [x8, #8]
    f4e0:	mov	w10, #0x3f51                	// #16209
    f4e4:	cmp	w9, w10
    f4e8:	b.cs	f548 <inflate@@Base+0x28b4>  // b.hs, b.nlast
    f4ec:	ldur	x8, [x29, #-32]
    f4f0:	ldr	w9, [x8, #8]
    f4f4:	mov	w10, #0x3f4e                	// #16206
    f4f8:	cmp	w9, w10
    f4fc:	b.cc	f50c <inflate@@Base+0x2878>  // b.lo, b.ul, b.last
    f500:	ldur	w8, [x29, #-20]
    f504:	cmp	w8, #0x4
    f508:	b.eq	f548 <inflate@@Base+0x28b4>  // b.none
    f50c:	ldur	x0, [x29, #-16]
    f510:	ldur	x8, [x29, #-16]
    f514:	ldr	x1, [x8, #24]
    f518:	ldur	w9, [x29, #-76]
    f51c:	ldur	x8, [x29, #-16]
    f520:	ldr	w10, [x8, #32]
    f524:	subs	w2, w9, w10
    f528:	bl	f77c <inflate@@Base+0x2ae8>
    f52c:	cbz	w0, f548 <inflate@@Base+0x28b4>
    f530:	ldur	x8, [x29, #-32]
    f534:	mov	w9, #0x3f52                	// #16210
    f538:	str	w9, [x8, #8]
    f53c:	mov	w9, #0xfffffffc            	// #-4
    f540:	stur	w9, [x29, #-4]
    f544:	b	f724 <inflate@@Base+0x2a90>
    f548:	ldur	x8, [x29, #-16]
    f54c:	ldr	w9, [x8, #8]
    f550:	ldur	w10, [x29, #-72]
    f554:	subs	w9, w10, w9
    f558:	stur	w9, [x29, #-72]
    f55c:	ldur	x8, [x29, #-16]
    f560:	ldr	w9, [x8, #32]
    f564:	ldur	w10, [x29, #-76]
    f568:	subs	w9, w10, w9
    f56c:	stur	w9, [x29, #-76]
    f570:	ldur	w9, [x29, #-72]
    f574:	mov	w8, w9
    f578:	ldur	x11, [x29, #-16]
    f57c:	ldr	x12, [x11, #16]
    f580:	add	x8, x12, x8
    f584:	str	x8, [x11, #16]
    f588:	ldur	w9, [x29, #-76]
    f58c:	mov	w8, w9
    f590:	ldur	x11, [x29, #-16]
    f594:	ldr	x12, [x11, #40]
    f598:	add	x8, x12, x8
    f59c:	str	x8, [x11, #40]
    f5a0:	ldur	w9, [x29, #-76]
    f5a4:	mov	w8, w9
    f5a8:	ldur	x11, [x29, #-32]
    f5ac:	ldr	x12, [x11, #40]
    f5b0:	add	x8, x12, x8
    f5b4:	str	x8, [x11, #40]
    f5b8:	ldur	x8, [x29, #-32]
    f5bc:	ldr	w9, [x8, #16]
    f5c0:	and	w9, w9, #0x4
    f5c4:	cbz	w9, f654 <inflate@@Base+0x29c0>
    f5c8:	ldur	w8, [x29, #-76]
    f5cc:	cbz	w8, f654 <inflate@@Base+0x29c0>
    f5d0:	ldur	x8, [x29, #-32]
    f5d4:	ldr	w9, [x8, #24]
    f5d8:	cbz	w9, f610 <inflate@@Base+0x297c>
    f5dc:	ldur	x8, [x29, #-32]
    f5e0:	ldr	x0, [x8, #32]
    f5e4:	ldur	x8, [x29, #-16]
    f5e8:	ldr	x8, [x8, #24]
    f5ec:	ldur	w9, [x29, #-76]
    f5f0:	mov	w10, w9
    f5f4:	mov	x11, xzr
    f5f8:	subs	x10, x11, x10
    f5fc:	add	x1, x8, x10
    f600:	ldur	w2, [x29, #-76]
    f604:	bl	2430 <crc32@plt>
    f608:	str	x0, [sp, #8]
    f60c:	b	f640 <inflate@@Base+0x29ac>
    f610:	ldur	x8, [x29, #-32]
    f614:	ldr	x0, [x8, #32]
    f618:	ldur	x8, [x29, #-16]
    f61c:	ldr	x8, [x8, #24]
    f620:	ldur	w9, [x29, #-76]
    f624:	mov	w10, w9
    f628:	mov	x11, xzr
    f62c:	subs	x10, x11, x10
    f630:	add	x1, x8, x10
    f634:	ldur	w2, [x29, #-76]
    f638:	bl	2560 <adler32@plt>
    f63c:	str	x0, [sp, #8]
    f640:	ldr	x8, [sp, #8]
    f644:	ldur	x9, [x29, #-32]
    f648:	str	x8, [x9, #32]
    f64c:	ldur	x9, [x29, #-16]
    f650:	str	x8, [x9, #96]
    f654:	ldur	x8, [x29, #-32]
    f658:	ldr	w9, [x8, #88]
    f65c:	ldur	x8, [x29, #-32]
    f660:	ldr	w10, [x8, #12]
    f664:	mov	w11, wzr
    f668:	mov	w12, #0x40                  	// #64
    f66c:	cmp	w10, #0x0
    f670:	csel	w10, w12, w11, ne  // ne = any
    f674:	add	w9, w9, w10
    f678:	ldur	x8, [x29, #-32]
    f67c:	ldr	w10, [x8, #8]
    f680:	mov	w12, #0x3f3f                	// #16191
    f684:	mov	w13, #0x80                  	// #128
    f688:	cmp	w10, w12
    f68c:	csel	w10, w13, w11, eq  // eq = none
    f690:	add	w9, w9, w10
    f694:	ldur	x8, [x29, #-32]
    f698:	ldr	w10, [x8, #8]
    f69c:	mov	w11, #0x3f47                	// #16199
    f6a0:	mov	w12, #0x1                   	// #1
    f6a4:	cmp	w10, w11
    f6a8:	str	w9, [sp, #4]
    f6ac:	str	w12, [sp]
    f6b0:	b.eq	f6cc <inflate@@Base+0x2a38>  // b.none
    f6b4:	ldur	x8, [x29, #-32]
    f6b8:	ldr	w9, [x8, #8]
    f6bc:	mov	w10, #0x3f42                	// #16194
    f6c0:	cmp	w9, w10
    f6c4:	cset	w9, eq  // eq = none
    f6c8:	str	w9, [sp]
    f6cc:	ldr	w8, [sp]
    f6d0:	mov	w9, #0x100                 	// #256
    f6d4:	mov	w10, wzr
    f6d8:	tst	w8, #0x1
    f6dc:	csel	w8, w9, w10, ne  // ne = any
    f6e0:	ldr	w9, [sp, #4]
    f6e4:	add	w8, w9, w8
    f6e8:	ldur	x11, [x29, #-16]
    f6ec:	str	w8, [x11, #88]
    f6f0:	ldur	w8, [x29, #-72]
    f6f4:	cbnz	w8, f700 <inflate@@Base+0x2a6c>
    f6f8:	ldur	w8, [x29, #-76]
    f6fc:	cbz	w8, f70c <inflate@@Base+0x2a78>
    f700:	ldur	w8, [x29, #-20]
    f704:	cmp	w8, #0x4
    f708:	b.ne	f71c <inflate@@Base+0x2a88>  // b.any
    f70c:	ldr	w8, [sp, #88]
    f710:	cbnz	w8, f71c <inflate@@Base+0x2a88>
    f714:	mov	w8, #0xfffffffb            	// #-5
    f718:	str	w8, [sp, #88]
    f71c:	ldr	w8, [sp, #88]
    f720:	stur	w8, [x29, #-4]
    f724:	ldur	w0, [x29, #-4]
    f728:	ldp	x29, x30, [sp, #192]
    f72c:	add	sp, sp, #0xd0
    f730:	ret
    f734:	sub	sp, sp, #0x10
    f738:	adrp	x8, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    f73c:	add	x8, x8, #0x116
    f740:	mov	w9, #0x9                   	// #9
    f744:	adrp	x10, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
    f748:	add	x10, x10, #0x916
    f74c:	mov	w11, #0x5                   	// #5
    f750:	str	x0, [sp, #8]
    f754:	ldr	x12, [sp, #8]
    f758:	str	x8, [x12, #104]
    f75c:	ldr	x8, [sp, #8]
    f760:	str	w9, [x8, #120]
    f764:	ldr	x8, [sp, #8]
    f768:	str	x10, [x8, #112]
    f76c:	ldr	x8, [sp, #8]
    f770:	str	w11, [x8, #124]
    f774:	add	sp, sp, #0x10
    f778:	ret
    f77c:	sub	sp, sp, #0x40
    f780:	stp	x29, x30, [sp, #48]
    f784:	add	x29, sp, #0x30
    f788:	stur	x0, [x29, #-16]
    f78c:	str	x1, [sp, #24]
    f790:	str	w2, [sp, #20]
    f794:	ldur	x8, [x29, #-16]
    f798:	ldr	x8, [x8, #56]
    f79c:	str	x8, [sp, #8]
    f7a0:	ldr	x8, [sp, #8]
    f7a4:	ldr	x8, [x8, #72]
    f7a8:	cbnz	x8, f7f4 <inflate@@Base+0x2b60>
    f7ac:	ldur	x8, [x29, #-16]
    f7b0:	ldr	x8, [x8, #64]
    f7b4:	ldur	x9, [x29, #-16]
    f7b8:	ldr	x0, [x9, #80]
    f7bc:	ldr	x9, [sp, #8]
    f7c0:	ldr	w10, [x9, #56]
    f7c4:	mov	w11, #0x1                   	// #1
    f7c8:	lsl	w1, w11, w10
    f7cc:	mov	w2, w11
    f7d0:	blr	x8
    f7d4:	ldr	x8, [sp, #8]
    f7d8:	str	x0, [x8, #72]
    f7dc:	ldr	x8, [sp, #8]
    f7e0:	ldr	x8, [x8, #72]
    f7e4:	cbnz	x8, f7f4 <inflate@@Base+0x2b60>
    f7e8:	mov	w8, #0x1                   	// #1
    f7ec:	stur	w8, [x29, #-4]
    f7f0:	b	f9c0 <inflate@@Base+0x2d2c>
    f7f4:	ldr	x8, [sp, #8]
    f7f8:	ldr	w9, [x8, #60]
    f7fc:	cbnz	w9, f828 <inflate@@Base+0x2b94>
    f800:	ldr	x8, [sp, #8]
    f804:	ldr	w9, [x8, #56]
    f808:	mov	w10, #0x1                   	// #1
    f80c:	lsl	w9, w10, w9
    f810:	ldr	x8, [sp, #8]
    f814:	str	w9, [x8, #60]
    f818:	ldr	x8, [sp, #8]
    f81c:	str	wzr, [x8, #68]
    f820:	ldr	x8, [sp, #8]
    f824:	str	wzr, [x8, #64]
    f828:	ldr	w8, [sp, #20]
    f82c:	ldr	x9, [sp, #8]
    f830:	ldr	w10, [x9, #60]
    f834:	cmp	w8, w10
    f838:	b.cc	f88c <inflate@@Base+0x2bf8>  // b.lo, b.ul, b.last
    f83c:	ldr	x8, [sp, #8]
    f840:	ldr	x0, [x8, #72]
    f844:	ldr	x8, [sp, #24]
    f848:	ldr	x9, [sp, #8]
    f84c:	ldr	w10, [x9, #60]
    f850:	mov	w9, w10
    f854:	mov	x11, xzr
    f858:	subs	x9, x11, x9
    f85c:	add	x1, x8, x9
    f860:	ldr	x8, [sp, #8]
    f864:	ldr	w10, [x8, #60]
    f868:	mov	w2, w10
    f86c:	bl	23a0 <memcpy@plt>
    f870:	ldr	x8, [sp, #8]
    f874:	str	wzr, [x8, #68]
    f878:	ldr	x8, [sp, #8]
    f87c:	ldr	w10, [x8, #60]
    f880:	ldr	x8, [sp, #8]
    f884:	str	w10, [x8, #64]
    f888:	b	f9bc <inflate@@Base+0x2d28>
    f88c:	ldr	x8, [sp, #8]
    f890:	ldr	w9, [x8, #60]
    f894:	ldr	x8, [sp, #8]
    f898:	ldr	w10, [x8, #68]
    f89c:	subs	w9, w9, w10
    f8a0:	str	w9, [sp, #4]
    f8a4:	ldr	w9, [sp, #4]
    f8a8:	ldr	w10, [sp, #20]
    f8ac:	cmp	w9, w10
    f8b0:	b.ls	f8bc <inflate@@Base+0x2c28>  // b.plast
    f8b4:	ldr	w8, [sp, #20]
    f8b8:	str	w8, [sp, #4]
    f8bc:	ldr	x8, [sp, #8]
    f8c0:	ldr	x8, [x8, #72]
    f8c4:	ldr	x9, [sp, #8]
    f8c8:	ldr	w10, [x9, #68]
    f8cc:	mov	w9, w10
    f8d0:	add	x0, x8, x9
    f8d4:	ldr	x8, [sp, #24]
    f8d8:	ldr	w10, [sp, #20]
    f8dc:	mov	w9, w10
    f8e0:	mov	x11, xzr
    f8e4:	subs	x9, x11, x9
    f8e8:	add	x1, x8, x9
    f8ec:	ldr	w10, [sp, #4]
    f8f0:	mov	w2, w10
    f8f4:	bl	23a0 <memcpy@plt>
    f8f8:	ldr	w10, [sp, #4]
    f8fc:	ldr	w12, [sp, #20]
    f900:	subs	w10, w12, w10
    f904:	str	w10, [sp, #20]
    f908:	ldr	w10, [sp, #20]
    f90c:	cbz	w10, f95c <inflate@@Base+0x2cc8>
    f910:	ldr	x8, [sp, #8]
    f914:	ldr	x0, [x8, #72]
    f918:	ldr	x8, [sp, #24]
    f91c:	ldr	w9, [sp, #20]
    f920:	mov	w10, w9
    f924:	mov	x11, xzr
    f928:	subs	x10, x11, x10
    f92c:	add	x1, x8, x10
    f930:	ldr	w9, [sp, #20]
    f934:	mov	w2, w9
    f938:	bl	23a0 <memcpy@plt>
    f93c:	ldr	w9, [sp, #20]
    f940:	ldr	x8, [sp, #8]
    f944:	str	w9, [x8, #68]
    f948:	ldr	x8, [sp, #8]
    f94c:	ldr	w9, [x8, #60]
    f950:	ldr	x8, [sp, #8]
    f954:	str	w9, [x8, #64]
    f958:	b	f9bc <inflate@@Base+0x2d28>
    f95c:	ldr	w8, [sp, #4]
    f960:	ldr	x9, [sp, #8]
    f964:	ldr	w10, [x9, #68]
    f968:	add	w8, w10, w8
    f96c:	str	w8, [x9, #68]
    f970:	ldr	x9, [sp, #8]
    f974:	ldr	w8, [x9, #68]
    f978:	ldr	x9, [sp, #8]
    f97c:	ldr	w10, [x9, #60]
    f980:	cmp	w8, w10
    f984:	b.ne	f990 <inflate@@Base+0x2cfc>  // b.any
    f988:	ldr	x8, [sp, #8]
    f98c:	str	wzr, [x8, #68]
    f990:	ldr	x8, [sp, #8]
    f994:	ldr	w9, [x8, #64]
    f998:	ldr	x8, [sp, #8]
    f99c:	ldr	w10, [x8, #60]
    f9a0:	cmp	w9, w10
    f9a4:	b.cs	f9bc <inflate@@Base+0x2d28>  // b.hs, b.nlast
    f9a8:	ldr	w8, [sp, #4]
    f9ac:	ldr	x9, [sp, #8]
    f9b0:	ldr	w10, [x9, #64]
    f9b4:	add	w8, w10, w8
    f9b8:	str	w8, [x9, #64]
    f9bc:	stur	wzr, [x29, #-4]
    f9c0:	ldur	w0, [x29, #-4]
    f9c4:	ldp	x29, x30, [sp, #48]
    f9c8:	add	sp, sp, #0x40
    f9cc:	ret

000000000000f9d0 <inflateEnd@@Base>:
    f9d0:	sub	sp, sp, #0x30
    f9d4:	stp	x29, x30, [sp, #32]
    f9d8:	add	x29, sp, #0x20
    f9dc:	str	x0, [sp, #16]
    f9e0:	ldr	x0, [sp, #16]
    f9e4:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    f9e8:	cbz	w0, f9f8 <inflateEnd@@Base+0x28>
    f9ec:	mov	w8, #0xfffffffe            	// #-2
    f9f0:	stur	w8, [x29, #-4]
    f9f4:	b	fa58 <inflateEnd@@Base+0x88>
    f9f8:	ldr	x8, [sp, #16]
    f9fc:	ldr	x8, [x8, #56]
    fa00:	str	x8, [sp, #8]
    fa04:	ldr	x8, [sp, #8]
    fa08:	ldr	x8, [x8, #72]
    fa0c:	cbz	x8, fa2c <inflateEnd@@Base+0x5c>
    fa10:	ldr	x8, [sp, #16]
    fa14:	ldr	x8, [x8, #72]
    fa18:	ldr	x9, [sp, #16]
    fa1c:	ldr	x0, [x9, #80]
    fa20:	ldr	x9, [sp, #8]
    fa24:	ldr	x1, [x9, #72]
    fa28:	blr	x8
    fa2c:	ldr	x8, [sp, #16]
    fa30:	ldr	x8, [x8, #72]
    fa34:	ldr	x9, [sp, #16]
    fa38:	ldr	x0, [x9, #80]
    fa3c:	ldr	x9, [sp, #16]
    fa40:	ldr	x1, [x9, #56]
    fa44:	blr	x8
    fa48:	ldr	x8, [sp, #16]
    fa4c:	mov	x9, xzr
    fa50:	str	x9, [x8, #56]
    fa54:	stur	wzr, [x29, #-4]
    fa58:	ldur	w0, [x29, #-4]
    fa5c:	ldp	x29, x30, [sp, #32]
    fa60:	add	sp, sp, #0x30
    fa64:	ret

000000000000fa68 <inflateGetDictionary@@ZLIB_1.2.7.1>:
    fa68:	sub	sp, sp, #0x40
    fa6c:	stp	x29, x30, [sp, #48]
    fa70:	add	x29, sp, #0x30
    fa74:	stur	x0, [x29, #-16]
    fa78:	str	x1, [sp, #24]
    fa7c:	str	x2, [sp, #16]
    fa80:	ldur	x0, [x29, #-16]
    fa84:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    fa88:	cbz	w0, fa98 <inflateGetDictionary@@ZLIB_1.2.7.1+0x30>
    fa8c:	mov	w8, #0xfffffffe            	// #-2
    fa90:	stur	w8, [x29, #-4]
    fa94:	b	fb54 <inflateGetDictionary@@ZLIB_1.2.7.1+0xec>
    fa98:	ldur	x8, [x29, #-16]
    fa9c:	ldr	x8, [x8, #56]
    faa0:	str	x8, [sp, #8]
    faa4:	ldr	x8, [sp, #8]
    faa8:	ldr	w9, [x8, #64]
    faac:	cbz	w9, fb38 <inflateGetDictionary@@ZLIB_1.2.7.1+0xd0>
    fab0:	ldr	x8, [sp, #24]
    fab4:	cbz	x8, fb38 <inflateGetDictionary@@ZLIB_1.2.7.1+0xd0>
    fab8:	ldr	x0, [sp, #24]
    fabc:	ldr	x8, [sp, #8]
    fac0:	ldr	x8, [x8, #72]
    fac4:	ldr	x9, [sp, #8]
    fac8:	ldr	w10, [x9, #68]
    facc:	mov	w9, w10
    fad0:	add	x1, x8, x9
    fad4:	ldr	x8, [sp, #8]
    fad8:	ldr	w10, [x8, #64]
    fadc:	ldr	x8, [sp, #8]
    fae0:	ldr	w11, [x8, #68]
    fae4:	subs	w10, w10, w11
    fae8:	mov	w8, w10
    faec:	ubfx	x2, x8, #0, #32
    faf0:	bl	23a0 <memcpy@plt>
    faf4:	ldr	x8, [sp, #24]
    faf8:	ldr	x9, [sp, #8]
    fafc:	ldr	w10, [x9, #64]
    fb00:	mov	w9, w10
    fb04:	add	x8, x8, x9
    fb08:	ldr	x9, [sp, #8]
    fb0c:	ldr	w10, [x9, #68]
    fb10:	mov	w9, w10
    fb14:	mov	x12, xzr
    fb18:	subs	x9, x12, x9
    fb1c:	add	x0, x8, x9
    fb20:	ldr	x8, [sp, #8]
    fb24:	ldr	x1, [x8, #72]
    fb28:	ldr	x8, [sp, #8]
    fb2c:	ldr	w10, [x8, #68]
    fb30:	mov	w2, w10
    fb34:	bl	23a0 <memcpy@plt>
    fb38:	ldr	x8, [sp, #16]
    fb3c:	cbz	x8, fb50 <inflateGetDictionary@@ZLIB_1.2.7.1+0xe8>
    fb40:	ldr	x8, [sp, #8]
    fb44:	ldr	w9, [x8, #64]
    fb48:	ldr	x8, [sp, #16]
    fb4c:	str	w9, [x8]
    fb50:	stur	wzr, [x29, #-4]
    fb54:	ldur	w0, [x29, #-4]
    fb58:	ldp	x29, x30, [sp, #48]
    fb5c:	add	sp, sp, #0x40
    fb60:	ret

000000000000fb64 <inflateSetDictionary@@Base>:
    fb64:	sub	sp, sp, #0x50
    fb68:	stp	x29, x30, [sp, #64]
    fb6c:	add	x29, sp, #0x40
    fb70:	stur	x0, [x29, #-16]
    fb74:	stur	x1, [x29, #-24]
    fb78:	stur	w2, [x29, #-28]
    fb7c:	ldur	x0, [x29, #-16]
    fb80:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    fb84:	cbz	w0, fb94 <inflateSetDictionary@@Base+0x30>
    fb88:	mov	w8, #0xfffffffe            	// #-2
    fb8c:	stur	w8, [x29, #-4]
    fb90:	b	fc80 <inflateSetDictionary@@Base+0x11c>
    fb94:	ldur	x8, [x29, #-16]
    fb98:	ldr	x8, [x8, #56]
    fb9c:	str	x8, [sp, #24]
    fba0:	ldr	x8, [sp, #24]
    fba4:	ldr	w9, [x8, #16]
    fba8:	cbz	w9, fbcc <inflateSetDictionary@@Base+0x68>
    fbac:	ldr	x8, [sp, #24]
    fbb0:	ldr	w9, [x8, #8]
    fbb4:	mov	w10, #0x3f3e                	// #16190
    fbb8:	cmp	w9, w10
    fbbc:	b.eq	fbcc <inflateSetDictionary@@Base+0x68>  // b.none
    fbc0:	mov	w8, #0xfffffffe            	// #-2
    fbc4:	stur	w8, [x29, #-4]
    fbc8:	b	fc80 <inflateSetDictionary@@Base+0x11c>
    fbcc:	ldr	x8, [sp, #24]
    fbd0:	ldr	w9, [x8, #8]
    fbd4:	mov	w10, #0x3f3e                	// #16190
    fbd8:	cmp	w9, w10
    fbdc:	b.ne	fc30 <inflateSetDictionary@@Base+0xcc>  // b.any
    fbe0:	mov	x8, xzr
    fbe4:	mov	x0, x8
    fbe8:	mov	x1, x8
    fbec:	mov	w9, wzr
    fbf0:	mov	w2, w9
    fbf4:	bl	2560 <adler32@plt>
    fbf8:	str	x0, [sp, #16]
    fbfc:	ldr	x0, [sp, #16]
    fc00:	ldur	x1, [x29, #-24]
    fc04:	ldur	w2, [x29, #-28]
    fc08:	bl	2560 <adler32@plt>
    fc0c:	str	x0, [sp, #16]
    fc10:	ldr	x8, [sp, #16]
    fc14:	ldr	x10, [sp, #24]
    fc18:	ldr	x10, [x10, #32]
    fc1c:	cmp	x8, x10
    fc20:	b.eq	fc30 <inflateSetDictionary@@Base+0xcc>  // b.none
    fc24:	mov	w8, #0xfffffffd            	// #-3
    fc28:	stur	w8, [x29, #-4]
    fc2c:	b	fc80 <inflateSetDictionary@@Base+0x11c>
    fc30:	ldur	x0, [x29, #-16]
    fc34:	ldur	x8, [x29, #-24]
    fc38:	ldur	w9, [x29, #-28]
    fc3c:	mov	w10, w9
    fc40:	add	x1, x8, x10
    fc44:	ldur	w2, [x29, #-28]
    fc48:	bl	f77c <inflate@@Base+0x2ae8>
    fc4c:	str	w0, [sp, #12]
    fc50:	ldr	w9, [sp, #12]
    fc54:	cbz	w9, fc70 <inflateSetDictionary@@Base+0x10c>
    fc58:	ldr	x8, [sp, #24]
    fc5c:	mov	w9, #0x3f52                	// #16210
    fc60:	str	w9, [x8, #8]
    fc64:	mov	w9, #0xfffffffc            	// #-4
    fc68:	stur	w9, [x29, #-4]
    fc6c:	b	fc80 <inflateSetDictionary@@Base+0x11c>
    fc70:	ldr	x8, [sp, #24]
    fc74:	mov	w9, #0x1                   	// #1
    fc78:	str	w9, [x8, #20]
    fc7c:	stur	wzr, [x29, #-4]
    fc80:	ldur	w0, [x29, #-4]
    fc84:	ldp	x29, x30, [sp, #64]
    fc88:	add	sp, sp, #0x50
    fc8c:	ret

000000000000fc90 <inflateGetHeader@@ZLIB_1.2.2>:
    fc90:	sub	sp, sp, #0x30
    fc94:	stp	x29, x30, [sp, #32]
    fc98:	add	x29, sp, #0x20
    fc9c:	str	x0, [sp, #16]
    fca0:	str	x1, [sp, #8]
    fca4:	ldr	x0, [sp, #16]
    fca8:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    fcac:	cbz	w0, fcbc <inflateGetHeader@@ZLIB_1.2.2+0x2c>
    fcb0:	mov	w8, #0xfffffffe            	// #-2
    fcb4:	stur	w8, [x29, #-4]
    fcb8:	b	fcfc <inflateGetHeader@@ZLIB_1.2.2+0x6c>
    fcbc:	ldr	x8, [sp, #16]
    fcc0:	ldr	x8, [x8, #56]
    fcc4:	str	x8, [sp]
    fcc8:	ldr	x8, [sp]
    fccc:	ldr	w9, [x8, #16]
    fcd0:	and	w9, w9, #0x2
    fcd4:	cbnz	w9, fce4 <inflateGetHeader@@ZLIB_1.2.2+0x54>
    fcd8:	mov	w8, #0xfffffffe            	// #-2
    fcdc:	stur	w8, [x29, #-4]
    fce0:	b	fcfc <inflateGetHeader@@ZLIB_1.2.2+0x6c>
    fce4:	ldr	x8, [sp, #8]
    fce8:	ldr	x9, [sp]
    fcec:	str	x8, [x9, #48]
    fcf0:	ldr	x8, [sp, #8]
    fcf4:	str	wzr, [x8, #72]
    fcf8:	stur	wzr, [x29, #-4]
    fcfc:	ldur	w0, [x29, #-4]
    fd00:	ldp	x29, x30, [sp, #32]
    fd04:	add	sp, sp, #0x30
    fd08:	ret

000000000000fd0c <inflateSync@@Base>:
    fd0c:	sub	sp, sp, #0x50
    fd10:	stp	x29, x30, [sp, #64]
    fd14:	add	x29, sp, #0x40
    fd18:	stur	x0, [x29, #-16]
    fd1c:	ldur	x0, [x29, #-16]
    fd20:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
    fd24:	cbz	w0, fd34 <inflateSync@@Base+0x28>
    fd28:	mov	w8, #0xfffffffe            	// #-2
    fd2c:	stur	w8, [x29, #-4]
    fd30:	b	ff08 <inflateSync@@Base+0x1fc>
    fd34:	ldur	x8, [x29, #-16]
    fd38:	ldr	x8, [x8, #56]
    fd3c:	str	x8, [sp, #8]
    fd40:	ldur	x8, [x29, #-16]
    fd44:	ldr	w9, [x8, #8]
    fd48:	cbnz	w9, fd68 <inflateSync@@Base+0x5c>
    fd4c:	ldr	x8, [sp, #8]
    fd50:	ldr	w9, [x8, #88]
    fd54:	cmp	w9, #0x8
    fd58:	b.cs	fd68 <inflateSync@@Base+0x5c>  // b.hs, b.nlast
    fd5c:	mov	w8, #0xfffffffb            	// #-5
    fd60:	stur	w8, [x29, #-4]
    fd64:	b	ff08 <inflateSync@@Base+0x1fc>
    fd68:	ldr	x8, [sp, #8]
    fd6c:	ldr	w9, [x8, #8]
    fd70:	mov	w10, #0x3f53                	// #16211
    fd74:	cmp	w9, w10
    fd78:	b.eq	fe40 <inflateSync@@Base+0x134>  // b.none
    fd7c:	ldr	x8, [sp, #8]
    fd80:	mov	w9, #0x3f53                	// #16211
    fd84:	str	w9, [x8, #8]
    fd88:	ldr	x8, [sp, #8]
    fd8c:	ldr	w9, [x8, #88]
    fd90:	and	w9, w9, #0x7
    fd94:	ldr	x8, [sp, #8]
    fd98:	ldr	x10, [x8, #80]
    fd9c:	mov	w11, w9
    fda0:	lsl	x10, x10, x11
    fda4:	str	x10, [x8, #80]
    fda8:	ldr	x8, [sp, #8]
    fdac:	ldr	w9, [x8, #88]
    fdb0:	and	w9, w9, #0x7
    fdb4:	ldr	x8, [sp, #8]
    fdb8:	ldr	w12, [x8, #88]
    fdbc:	subs	w9, w12, w9
    fdc0:	str	w9, [x8, #88]
    fdc4:	stur	wzr, [x29, #-20]
    fdc8:	ldr	x8, [sp, #8]
    fdcc:	ldr	w9, [x8, #88]
    fdd0:	cmp	w9, #0x8
    fdd4:	b.cc	fe24 <inflateSync@@Base+0x118>  // b.lo, b.ul, b.last
    fdd8:	ldr	x8, [sp, #8]
    fddc:	ldr	x8, [x8, #80]
    fde0:	ldur	w9, [x29, #-20]
    fde4:	mov	w10, w9
    fde8:	mov	w9, w10
    fdec:	add	w9, w9, #0x1
    fdf0:	stur	w9, [x29, #-20]
    fdf4:	add	x11, sp, #0x14
    fdf8:	add	x10, x11, x10
    fdfc:	strb	w8, [x10]
    fe00:	ldr	x10, [sp, #8]
    fe04:	ldr	x11, [x10, #80]
    fe08:	lsr	x11, x11, #8
    fe0c:	str	x11, [x10, #80]
    fe10:	ldr	x10, [sp, #8]
    fe14:	ldr	w8, [x10, #88]
    fe18:	subs	w8, w8, #0x8
    fe1c:	str	w8, [x10, #88]
    fe20:	b	fdc8 <inflateSync@@Base+0xbc>
    fe24:	ldr	x8, [sp, #8]
    fe28:	str	wzr, [x8, #140]
    fe2c:	ldr	x8, [sp, #8]
    fe30:	add	x0, x8, #0x8c
    fe34:	ldur	w2, [x29, #-20]
    fe38:	add	x1, sp, #0x14
    fe3c:	bl	ff18 <inflateSync@@Base+0x20c>
    fe40:	ldr	x8, [sp, #8]
    fe44:	add	x0, x8, #0x8c
    fe48:	ldur	x8, [x29, #-16]
    fe4c:	ldr	x1, [x8]
    fe50:	ldur	x8, [x29, #-16]
    fe54:	ldr	w2, [x8, #8]
    fe58:	bl	ff18 <inflateSync@@Base+0x20c>
    fe5c:	stur	w0, [x29, #-20]
    fe60:	ldur	w9, [x29, #-20]
    fe64:	ldur	x8, [x29, #-16]
    fe68:	ldr	w10, [x8, #8]
    fe6c:	subs	w9, w10, w9
    fe70:	str	w9, [x8, #8]
    fe74:	ldur	w9, [x29, #-20]
    fe78:	mov	w8, w9
    fe7c:	ldur	x11, [x29, #-16]
    fe80:	ldr	x12, [x11]
    fe84:	add	x8, x12, x8
    fe88:	str	x8, [x11]
    fe8c:	ldur	w9, [x29, #-20]
    fe90:	mov	w8, w9
    fe94:	ldur	x11, [x29, #-16]
    fe98:	ldr	x12, [x11, #16]
    fe9c:	add	x8, x12, x8
    fea0:	str	x8, [x11, #16]
    fea4:	ldr	x8, [sp, #8]
    fea8:	ldr	w9, [x8, #140]
    feac:	cmp	w9, #0x4
    feb0:	b.eq	fec0 <inflateSync@@Base+0x1b4>  // b.none
    feb4:	mov	w8, #0xfffffffd            	// #-3
    feb8:	stur	w8, [x29, #-4]
    febc:	b	ff08 <inflateSync@@Base+0x1fc>
    fec0:	ldur	x8, [x29, #-16]
    fec4:	ldr	x8, [x8, #16]
    fec8:	str	x8, [sp, #32]
    fecc:	ldur	x8, [x29, #-16]
    fed0:	ldr	x8, [x8, #40]
    fed4:	str	x8, [sp, #24]
    fed8:	ldur	x0, [x29, #-16]
    fedc:	bl	2610 <inflateReset@plt>
    fee0:	ldr	x8, [sp, #32]
    fee4:	ldur	x9, [x29, #-16]
    fee8:	str	x8, [x9, #16]
    feec:	ldr	x8, [sp, #24]
    fef0:	ldur	x9, [x29, #-16]
    fef4:	str	x8, [x9, #40]
    fef8:	ldr	x8, [sp, #8]
    fefc:	mov	w10, #0x3f3f                	// #16191
    ff00:	str	w10, [x8, #8]
    ff04:	stur	wzr, [x29, #-4]
    ff08:	ldur	w0, [x29, #-4]
    ff0c:	ldp	x29, x30, [sp, #64]
    ff10:	add	sp, sp, #0x50
    ff14:	ret
    ff18:	sub	sp, sp, #0x20
    ff1c:	str	x0, [sp, #24]
    ff20:	str	x1, [sp, #16]
    ff24:	str	w2, [sp, #12]
    ff28:	ldr	x8, [sp, #24]
    ff2c:	ldr	w9, [x8]
    ff30:	str	w9, [sp, #8]
    ff34:	str	wzr, [sp, #4]
    ff38:	ldr	w8, [sp, #4]
    ff3c:	ldr	w9, [sp, #12]
    ff40:	mov	w10, #0x0                   	// #0
    ff44:	cmp	w8, w9
    ff48:	str	w10, [sp]
    ff4c:	b.cs	ff60 <inflateSync@@Base+0x254>  // b.hs, b.nlast
    ff50:	ldr	w8, [sp, #8]
    ff54:	cmp	w8, #0x4
    ff58:	cset	w8, cc  // cc = lo, ul, last
    ff5c:	str	w8, [sp]
    ff60:	ldr	w8, [sp]
    ff64:	tbnz	w8, #0, ff6c <inflateSync@@Base+0x260>
    ff68:	b	ffe8 <inflateSync@@Base+0x2dc>
    ff6c:	ldr	x8, [sp, #16]
    ff70:	ldr	w9, [sp, #4]
    ff74:	mov	w10, w9
    ff78:	ldrb	w9, [x8, x10]
    ff7c:	ldr	w11, [sp, #8]
    ff80:	mov	w12, #0xff                  	// #255
    ff84:	mov	w13, wzr
    ff88:	cmp	w11, #0x2
    ff8c:	csel	w11, w13, w12, cc  // cc = lo, ul, last
    ff90:	cmp	w9, w11
    ff94:	b.ne	ffa8 <inflateSync@@Base+0x29c>  // b.any
    ff98:	ldr	w8, [sp, #8]
    ff9c:	add	w8, w8, #0x1
    ffa0:	str	w8, [sp, #8]
    ffa4:	b	ffd8 <inflateSync@@Base+0x2cc>
    ffa8:	ldr	x8, [sp, #16]
    ffac:	ldr	w9, [sp, #4]
    ffb0:	mov	w10, w9
    ffb4:	add	x8, x8, x10
    ffb8:	ldrb	w9, [x8]
    ffbc:	cbz	w9, ffc8 <inflateSync@@Base+0x2bc>
    ffc0:	str	wzr, [sp, #8]
    ffc4:	b	ffd8 <inflateSync@@Base+0x2cc>
    ffc8:	ldr	w8, [sp, #8]
    ffcc:	mov	w9, #0x4                   	// #4
    ffd0:	subs	w8, w9, w8
    ffd4:	str	w8, [sp, #8]
    ffd8:	ldr	w8, [sp, #4]
    ffdc:	add	w8, w8, #0x1
    ffe0:	str	w8, [sp, #4]
    ffe4:	b	ff38 <inflateSync@@Base+0x22c>
    ffe8:	ldr	w8, [sp, #8]
    ffec:	ldr	x9, [sp, #24]
    fff0:	str	w8, [x9]
    fff4:	ldr	w0, [sp, #4]
    fff8:	add	sp, sp, #0x20
    fffc:	ret

0000000000010000 <inflateSyncPoint@@Base>:
   10000:	sub	sp, sp, #0x30
   10004:	stp	x29, x30, [sp, #32]
   10008:	add	x29, sp, #0x20
   1000c:	str	x0, [sp, #16]
   10010:	ldr	x0, [sp, #16]
   10014:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
   10018:	cbz	w0, 10028 <inflateSyncPoint@@Base+0x28>
   1001c:	mov	w8, #0xfffffffe            	// #-2
   10020:	stur	w8, [x29, #-4]
   10024:	b	10070 <inflateSyncPoint@@Base+0x70>
   10028:	ldr	x8, [sp, #16]
   1002c:	ldr	x8, [x8, #56]
   10030:	str	x8, [sp, #8]
   10034:	ldr	x8, [sp, #8]
   10038:	ldr	w9, [x8, #8]
   1003c:	mov	w10, #0x3f41                	// #16193
   10040:	mov	w11, #0x0                   	// #0
   10044:	cmp	w9, w10
   10048:	str	w11, [sp, #4]
   1004c:	b.ne	10064 <inflateSyncPoint@@Base+0x64>  // b.any
   10050:	ldr	x8, [sp, #8]
   10054:	ldr	w9, [x8, #88]
   10058:	cmp	w9, #0x0
   1005c:	cset	w9, eq  // eq = none
   10060:	str	w9, [sp, #4]
   10064:	ldr	w8, [sp, #4]
   10068:	and	w8, w8, #0x1
   1006c:	stur	w8, [x29, #-4]
   10070:	ldur	w0, [x29, #-4]
   10074:	ldp	x29, x30, [sp, #32]
   10078:	add	sp, sp, #0x30
   1007c:	ret

0000000000010080 <inflateCopy@@ZLIB_1.2.0>:
   10080:	sub	sp, sp, #0x50
   10084:	stp	x29, x30, [sp, #64]
   10088:	add	x29, sp, #0x40
   1008c:	stur	x0, [x29, #-16]
   10090:	stur	x1, [x29, #-24]
   10094:	ldur	x0, [x29, #-24]
   10098:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
   1009c:	cbnz	w0, 100a8 <inflateCopy@@ZLIB_1.2.0+0x28>
   100a0:	ldur	x8, [x29, #-16]
   100a4:	cbnz	x8, 100b4 <inflateCopy@@ZLIB_1.2.0+0x34>
   100a8:	mov	w8, #0xfffffffe            	// #-2
   100ac:	stur	w8, [x29, #-4]
   100b0:	b	102b0 <inflateCopy@@ZLIB_1.2.0+0x230>
   100b4:	ldur	x8, [x29, #-24]
   100b8:	ldr	x8, [x8, #56]
   100bc:	str	x8, [sp, #32]
   100c0:	ldur	x8, [x29, #-24]
   100c4:	ldr	x8, [x8, #64]
   100c8:	ldur	x9, [x29, #-24]
   100cc:	ldr	x0, [x9, #80]
   100d0:	mov	w1, #0x1                   	// #1
   100d4:	mov	w2, #0x1bf8                	// #7160
   100d8:	blr	x8
   100dc:	str	x0, [sp, #24]
   100e0:	ldr	x8, [sp, #24]
   100e4:	cbnz	x8, 100f4 <inflateCopy@@ZLIB_1.2.0+0x74>
   100e8:	mov	w8, #0xfffffffc            	// #-4
   100ec:	stur	w8, [x29, #-4]
   100f0:	b	102b0 <inflateCopy@@ZLIB_1.2.0+0x230>
   100f4:	mov	x8, xzr
   100f8:	str	x8, [sp, #16]
   100fc:	ldr	x8, [sp, #32]
   10100:	ldr	x8, [x8, #72]
   10104:	cbz	x8, 10160 <inflateCopy@@ZLIB_1.2.0+0xe0>
   10108:	ldur	x8, [x29, #-24]
   1010c:	ldr	x8, [x8, #64]
   10110:	ldur	x9, [x29, #-24]
   10114:	ldr	x0, [x9, #80]
   10118:	ldr	x9, [sp, #32]
   1011c:	ldr	w10, [x9, #56]
   10120:	mov	w11, #0x1                   	// #1
   10124:	lsl	w1, w11, w10
   10128:	mov	w2, w11
   1012c:	blr	x8
   10130:	str	x0, [sp, #16]
   10134:	ldr	x8, [sp, #16]
   10138:	cbnz	x8, 10160 <inflateCopy@@ZLIB_1.2.0+0xe0>
   1013c:	ldur	x8, [x29, #-24]
   10140:	ldr	x8, [x8, #72]
   10144:	ldur	x9, [x29, #-24]
   10148:	ldr	x0, [x9, #80]
   1014c:	ldr	x1, [sp, #24]
   10150:	blr	x8
   10154:	mov	w10, #0xfffffffc            	// #-4
   10158:	stur	w10, [x29, #-4]
   1015c:	b	102b0 <inflateCopy@@ZLIB_1.2.0+0x230>
   10160:	ldur	x0, [x29, #-16]
   10164:	ldur	x1, [x29, #-24]
   10168:	mov	x2, #0x70                  	// #112
   1016c:	bl	23a0 <memcpy@plt>
   10170:	ldr	x0, [sp, #24]
   10174:	ldr	x1, [sp, #32]
   10178:	mov	x2, #0x1bf8                	// #7160
   1017c:	bl	23a0 <memcpy@plt>
   10180:	ldur	x8, [x29, #-16]
   10184:	ldr	x9, [sp, #24]
   10188:	str	x8, [x9]
   1018c:	ldr	x8, [sp, #32]
   10190:	ldr	x8, [x8, #104]
   10194:	ldr	x9, [sp, #32]
   10198:	add	x9, x9, #0x558
   1019c:	cmp	x8, x9
   101a0:	b.cc	10228 <inflateCopy@@ZLIB_1.2.0+0x1a8>  // b.lo, b.ul, b.last
   101a4:	ldr	x8, [sp, #32]
   101a8:	ldr	x8, [x8, #104]
   101ac:	ldr	x9, [sp, #32]
   101b0:	mov	x10, #0x1be4                	// #7140
   101b4:	add	x9, x9, x10
   101b8:	cmp	x8, x9
   101bc:	b.hi	10228 <inflateCopy@@ZLIB_1.2.0+0x1a8>  // b.pmore
   101c0:	ldr	x8, [sp, #24]
   101c4:	add	x8, x8, #0x558
   101c8:	ldr	x9, [sp, #32]
   101cc:	ldr	x9, [x9, #104]
   101d0:	ldr	x10, [sp, #32]
   101d4:	add	x10, x10, #0x558
   101d8:	subs	x9, x9, x10
   101dc:	mov	x10, #0x4                   	// #4
   101e0:	sdiv	x9, x9, x10
   101e4:	mov	x11, #0x4                   	// #4
   101e8:	mul	x9, x11, x9
   101ec:	add	x8, x8, x9
   101f0:	ldr	x9, [sp, #24]
   101f4:	str	x8, [x9, #104]
   101f8:	ldr	x8, [sp, #24]
   101fc:	add	x8, x8, #0x558
   10200:	ldr	x9, [sp, #32]
   10204:	ldr	x9, [x9, #112]
   10208:	ldr	x12, [sp, #32]
   1020c:	add	x12, x12, #0x558
   10210:	subs	x9, x9, x12
   10214:	sdiv	x9, x9, x10
   10218:	mul	x9, x11, x9
   1021c:	add	x8, x8, x9
   10220:	ldr	x9, [sp, #24]
   10224:	str	x8, [x9, #112]
   10228:	ldr	x8, [sp, #24]
   1022c:	add	x8, x8, #0x558
   10230:	ldr	x9, [sp, #32]
   10234:	ldr	x9, [x9, #144]
   10238:	ldr	x10, [sp, #32]
   1023c:	add	x10, x10, #0x558
   10240:	subs	x9, x9, x10
   10244:	mov	x10, #0x4                   	// #4
   10248:	sdiv	x9, x9, x10
   1024c:	mov	x10, #0x4                   	// #4
   10250:	mul	x9, x10, x9
   10254:	add	x8, x8, x9
   10258:	ldr	x9, [sp, #24]
   1025c:	str	x8, [x9, #144]
   10260:	ldr	x8, [sp, #16]
   10264:	cbz	x8, 10294 <inflateCopy@@ZLIB_1.2.0+0x214>
   10268:	ldr	x8, [sp, #32]
   1026c:	ldr	w9, [x8, #56]
   10270:	mov	w10, #0x1                   	// #1
   10274:	lsl	w9, w10, w9
   10278:	str	w9, [sp, #12]
   1027c:	ldr	x0, [sp, #16]
   10280:	ldr	x8, [sp, #32]
   10284:	ldr	x1, [x8, #72]
   10288:	ldr	w9, [sp, #12]
   1028c:	mov	w2, w9
   10290:	bl	23a0 <memcpy@plt>
   10294:	ldr	x8, [sp, #16]
   10298:	ldr	x9, [sp, #24]
   1029c:	str	x8, [x9, #72]
   102a0:	ldr	x8, [sp, #24]
   102a4:	ldur	x9, [x29, #-16]
   102a8:	str	x8, [x9, #56]
   102ac:	stur	wzr, [x29, #-4]
   102b0:	ldur	w0, [x29, #-4]
   102b4:	ldp	x29, x30, [sp, #64]
   102b8:	add	sp, sp, #0x50
   102bc:	ret

00000000000102c0 <inflateUndermine@@ZLIB_1.2.3.3>:
   102c0:	sub	sp, sp, #0x30
   102c4:	stp	x29, x30, [sp, #32]
   102c8:	add	x29, sp, #0x20
   102cc:	str	x0, [sp, #16]
   102d0:	str	w1, [sp, #12]
   102d4:	ldr	x0, [sp, #16]
   102d8:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
   102dc:	cbz	w0, 102ec <inflateUndermine@@ZLIB_1.2.3.3+0x2c>
   102e0:	mov	w8, #0xfffffffe            	// #-2
   102e4:	stur	w8, [x29, #-4]
   102e8:	b	1030c <inflateUndermine@@ZLIB_1.2.3.3+0x4c>
   102ec:	ldr	x8, [sp, #16]
   102f0:	ldr	x8, [x8, #56]
   102f4:	str	x8, [sp]
   102f8:	ldr	x8, [sp]
   102fc:	mov	w9, #0x1                   	// #1
   10300:	str	w9, [x8, #7144]
   10304:	mov	w9, #0xfffffffd            	// #-3
   10308:	stur	w9, [x29, #-4]
   1030c:	ldur	w0, [x29, #-4]
   10310:	ldp	x29, x30, [sp, #32]
   10314:	add	sp, sp, #0x30
   10318:	ret

000000000001031c <inflateValidate@@ZLIB_1.2.9>:
   1031c:	sub	sp, sp, #0x30
   10320:	stp	x29, x30, [sp, #32]
   10324:	add	x29, sp, #0x20
   10328:	str	x0, [sp, #16]
   1032c:	str	w1, [sp, #12]
   10330:	ldr	x0, [sp, #16]
   10334:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
   10338:	cbz	w0, 10348 <inflateValidate@@ZLIB_1.2.9+0x2c>
   1033c:	mov	w8, #0xfffffffe            	// #-2
   10340:	stur	w8, [x29, #-4]
   10344:	b	10384 <inflateValidate@@ZLIB_1.2.9+0x68>
   10348:	ldr	x8, [sp, #16]
   1034c:	ldr	x8, [x8, #56]
   10350:	str	x8, [sp]
   10354:	ldr	w9, [sp, #12]
   10358:	cbz	w9, 10370 <inflateValidate@@ZLIB_1.2.9+0x54>
   1035c:	ldr	x8, [sp]
   10360:	ldr	w9, [x8, #16]
   10364:	orr	w9, w9, #0x4
   10368:	str	w9, [x8, #16]
   1036c:	b	10380 <inflateValidate@@ZLIB_1.2.9+0x64>
   10370:	ldr	x8, [sp]
   10374:	ldr	w9, [x8, #16]
   10378:	and	w9, w9, #0xfffffffb
   1037c:	str	w9, [x8, #16]
   10380:	stur	wzr, [x29, #-4]
   10384:	ldur	w0, [x29, #-4]
   10388:	ldp	x29, x30, [sp, #32]
   1038c:	add	sp, sp, #0x30
   10390:	ret

0000000000010394 <inflateMark@@ZLIB_1.2.3.4>:
   10394:	sub	sp, sp, #0x40
   10398:	stp	x29, x30, [sp, #48]
   1039c:	add	x29, sp, #0x30
   103a0:	stur	x0, [x29, #-16]
   103a4:	ldur	x0, [x29, #-16]
   103a8:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
   103ac:	cbz	w0, 103bc <inflateMark@@ZLIB_1.2.3.4+0x28>
   103b0:	mov	x8, #0xffffffffffff0000    	// #-65536
   103b4:	stur	x8, [x29, #-8]
   103b8:	b	1044c <inflateMark@@ZLIB_1.2.3.4+0xb8>
   103bc:	ldur	x8, [x29, #-16]
   103c0:	ldr	x8, [x8, #56]
   103c4:	str	x8, [sp, #24]
   103c8:	ldr	x8, [sp, #24]
   103cc:	ldrsw	x8, [x8, #7148]
   103d0:	lsl	x8, x8, #16
   103d4:	ldr	x9, [sp, #24]
   103d8:	ldr	w10, [x9, #8]
   103dc:	mov	w11, #0x3f43                	// #16195
   103e0:	cmp	w10, w11
   103e4:	str	x8, [sp, #16]
   103e8:	b.ne	103fc <inflateMark@@ZLIB_1.2.3.4+0x68>  // b.any
   103ec:	ldr	x8, [sp, #24]
   103f0:	ldr	w9, [x8, #92]
   103f4:	str	w9, [sp, #12]
   103f8:	b	1043c <inflateMark@@ZLIB_1.2.3.4+0xa8>
   103fc:	ldr	x8, [sp, #24]
   10400:	ldr	w9, [x8, #8]
   10404:	mov	w10, #0x3f4c                	// #16204
   10408:	cmp	w9, w10
   1040c:	b.ne	1042c <inflateMark@@ZLIB_1.2.3.4+0x98>  // b.any
   10410:	ldr	x8, [sp, #24]
   10414:	ldr	w9, [x8, #7152]
   10418:	ldr	x8, [sp, #24]
   1041c:	ldr	w10, [x8, #92]
   10420:	subs	w9, w9, w10
   10424:	str	w9, [sp, #8]
   10428:	b	10434 <inflateMark@@ZLIB_1.2.3.4+0xa0>
   1042c:	mov	w8, wzr
   10430:	str	w8, [sp, #8]
   10434:	ldr	w8, [sp, #8]
   10438:	str	w8, [sp, #12]
   1043c:	ldr	w8, [sp, #12]
   10440:	ldr	x9, [sp, #16]
   10444:	add	x10, x9, w8, uxtw
   10448:	stur	x10, [x29, #-8]
   1044c:	ldur	x0, [x29, #-8]
   10450:	ldp	x29, x30, [sp, #48]
   10454:	add	sp, sp, #0x40
   10458:	ret

000000000001045c <inflateCodesUsed@@ZLIB_1.2.9>:
   1045c:	sub	sp, sp, #0x30
   10460:	stp	x29, x30, [sp, #32]
   10464:	add	x29, sp, #0x20
   10468:	str	x0, [sp, #16]
   1046c:	ldr	x0, [sp, #16]
   10470:	bl	c7a8 <inflateResetKeep@@ZLIB_1.2.5.2+0x110>
   10474:	cbz	w0, 10484 <inflateCodesUsed@@ZLIB_1.2.9+0x28>
   10478:	mov	x8, #0xffffffffffffffff    	// #-1
   1047c:	stur	x8, [x29, #-8]
   10480:	b	104b0 <inflateCodesUsed@@ZLIB_1.2.9+0x54>
   10484:	ldr	x8, [sp, #16]
   10488:	ldr	x8, [x8, #56]
   1048c:	str	x8, [sp, #8]
   10490:	ldr	x8, [sp, #8]
   10494:	ldr	x8, [x8, #144]
   10498:	ldr	x9, [sp, #8]
   1049c:	add	x9, x9, #0x558
   104a0:	subs	x8, x8, x9
   104a4:	mov	x9, #0x4                   	// #4
   104a8:	sdiv	x8, x8, x9
   104ac:	stur	x8, [x29, #-8]
   104b0:	ldur	x0, [x29, #-8]
   104b4:	ldp	x29, x30, [sp, #32]
   104b8:	add	sp, sp, #0x30
   104bc:	ret
   104c0:	sub	sp, sp, #0xe0
   104c4:	add	x8, sp, #0xb0
   104c8:	str	w0, [sp, #216]
   104cc:	str	x1, [x8, #32]
   104d0:	str	w2, [sp, #204]
   104d4:	str	x3, [x8, #16]
   104d8:	str	x4, [x8, #8]
   104dc:	str	x5, [x8]
   104e0:	str	wzr, [sp, #172]
   104e4:	str	x8, [sp, #8]
   104e8:	ldr	w8, [sp, #172]
   104ec:	cmp	w8, #0xf
   104f0:	b.hi	10524 <inflateCodesUsed@@ZLIB_1.2.9+0xc8>  // b.pmore
   104f4:	ldr	w8, [sp, #172]
   104f8:	mov	w9, w8
   104fc:	mov	x10, #0x2                   	// #2
   10500:	mul	x9, x10, x9
   10504:	add	x10, sp, #0x34
   10508:	add	x9, x10, x9
   1050c:	mov	w8, #0x0                   	// #0
   10510:	strh	w8, [x9]
   10514:	ldr	w8, [sp, #172]
   10518:	add	w8, w8, #0x1
   1051c:	str	w8, [sp, #172]
   10520:	b	104e8 <inflateCodesUsed@@ZLIB_1.2.9+0x8c>
   10524:	str	wzr, [sp, #168]
   10528:	ldr	w8, [sp, #168]
   1052c:	ldr	w9, [sp, #204]
   10530:	cmp	w8, w9
   10534:	b.cs	1057c <inflateCodesUsed@@ZLIB_1.2.9+0x120>  // b.hs, b.nlast
   10538:	ldr	x8, [sp, #8]
   1053c:	ldr	x9, [x8, #32]
   10540:	ldr	w10, [sp, #168]
   10544:	mov	w11, w10
   10548:	mov	x12, #0x2                   	// #2
   1054c:	ldrh	w10, [x9, x11, lsl #1]
   10550:	mov	w9, w10
   10554:	mul	x9, x12, x9
   10558:	add	x11, sp, #0x34
   1055c:	add	x9, x11, x9
   10560:	ldrh	w10, [x9]
   10564:	add	w10, w10, #0x1
   10568:	strh	w10, [x9]
   1056c:	ldr	w8, [sp, #168]
   10570:	add	w8, w8, #0x1
   10574:	str	w8, [sp, #168]
   10578:	b	10528 <inflateCodesUsed@@ZLIB_1.2.9+0xcc>
   1057c:	ldr	x8, [sp, #8]
   10580:	ldr	x9, [x8, #8]
   10584:	ldr	w10, [x9]
   10588:	str	w10, [sp, #156]
   1058c:	mov	w10, #0xf                   	// #15
   10590:	str	w10, [sp, #160]
   10594:	ldr	w8, [sp, #160]
   10598:	cmp	w8, #0x1
   1059c:	b.cc	105c8 <inflateCodesUsed@@ZLIB_1.2.9+0x16c>  // b.lo, b.ul, b.last
   105a0:	ldr	w8, [sp, #160]
   105a4:	mov	w9, w8
   105a8:	add	x10, sp, #0x34
   105ac:	ldrh	w8, [x10, x9, lsl #1]
   105b0:	cbz	w8, 105b8 <inflateCodesUsed@@ZLIB_1.2.9+0x15c>
   105b4:	b	105c8 <inflateCodesUsed@@ZLIB_1.2.9+0x16c>
   105b8:	ldr	w8, [sp, #160]
   105bc:	subs	w8, w8, #0x1
   105c0:	str	w8, [sp, #160]
   105c4:	b	10594 <inflateCodesUsed@@ZLIB_1.2.9+0x138>
   105c8:	ldr	w8, [sp, #156]
   105cc:	ldr	w9, [sp, #160]
   105d0:	cmp	w8, w9
   105d4:	b.ls	105e0 <inflateCodesUsed@@ZLIB_1.2.9+0x184>  // b.plast
   105d8:	ldr	w8, [sp, #160]
   105dc:	str	w8, [sp, #156]
   105e0:	ldr	w8, [sp, #160]
   105e4:	cbnz	w8, 1064c <inflateCodesUsed@@ZLIB_1.2.9+0x1f0>
   105e8:	add	x8, sp, #0x74
   105ec:	mov	w9, #0x40                  	// #64
   105f0:	strb	w9, [sp, #116]
   105f4:	mov	w9, #0x1                   	// #1
   105f8:	strb	w9, [x8, #1]
   105fc:	mov	w9, #0x0                   	// #0
   10600:	strh	w9, [x8, #2]
   10604:	ldr	x8, [sp, #8]
   10608:	ldr	x10, [x8, #16]
   1060c:	ldr	x11, [x10]
   10610:	add	x12, x11, #0x4
   10614:	str	x12, [x10]
   10618:	ldr	w9, [sp, #116]
   1061c:	str	w9, [x11]
   10620:	ldr	x10, [x8, #16]
   10624:	ldr	x11, [x10]
   10628:	add	x12, x11, #0x4
   1062c:	str	x12, [x10]
   10630:	ldr	w9, [sp, #116]
   10634:	str	w9, [x11]
   10638:	ldr	x10, [x8, #8]
   1063c:	mov	w9, #0x1                   	// #1
   10640:	str	w9, [x10]
   10644:	str	wzr, [sp, #220]
   10648:	b	10dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   1064c:	mov	w8, #0x1                   	// #1
   10650:	str	w8, [sp, #164]
   10654:	ldr	w8, [sp, #164]
   10658:	ldr	w9, [sp, #160]
   1065c:	cmp	w8, w9
   10660:	b.cs	1068c <inflateCodesUsed@@ZLIB_1.2.9+0x230>  // b.hs, b.nlast
   10664:	ldr	w8, [sp, #164]
   10668:	mov	w9, w8
   1066c:	add	x10, sp, #0x34
   10670:	ldrh	w8, [x10, x9, lsl #1]
   10674:	cbz	w8, 1067c <inflateCodesUsed@@ZLIB_1.2.9+0x220>
   10678:	b	1068c <inflateCodesUsed@@ZLIB_1.2.9+0x230>
   1067c:	ldr	w8, [sp, #164]
   10680:	add	w8, w8, #0x1
   10684:	str	w8, [sp, #164]
   10688:	b	10654 <inflateCodesUsed@@ZLIB_1.2.9+0x1f8>
   1068c:	ldr	w8, [sp, #156]
   10690:	ldr	w9, [sp, #164]
   10694:	cmp	w8, w9
   10698:	b.cs	106a4 <inflateCodesUsed@@ZLIB_1.2.9+0x248>  // b.hs, b.nlast
   1069c:	ldr	w8, [sp, #164]
   106a0:	str	w8, [sp, #156]
   106a4:	mov	w8, #0x1                   	// #1
   106a8:	str	w8, [sp, #144]
   106ac:	str	w8, [sp, #172]
   106b0:	ldr	w8, [sp, #172]
   106b4:	cmp	w8, #0xf
   106b8:	b.hi	10710 <inflateCodesUsed@@ZLIB_1.2.9+0x2b4>  // b.pmore
   106bc:	ldr	w8, [sp, #144]
   106c0:	lsl	w8, w8, #1
   106c4:	str	w8, [sp, #144]
   106c8:	ldr	w8, [sp, #172]
   106cc:	mov	w9, w8
   106d0:	add	x10, sp, #0x34
   106d4:	ldrh	w8, [x10, x9, lsl #1]
   106d8:	ldr	w11, [sp, #144]
   106dc:	subs	w8, w11, w8
   106e0:	str	w8, [sp, #144]
   106e4:	ldr	w8, [sp, #144]
   106e8:	cmp	w8, #0x0
   106ec:	cset	w8, ge  // ge = tcont
   106f0:	tbnz	w8, #0, 10700 <inflateCodesUsed@@ZLIB_1.2.9+0x2a4>
   106f4:	mov	w8, #0xffffffff            	// #-1
   106f8:	str	w8, [sp, #220]
   106fc:	b	10dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10700:	ldr	w8, [sp, #172]
   10704:	add	w8, w8, #0x1
   10708:	str	w8, [sp, #172]
   1070c:	b	106b0 <inflateCodesUsed@@ZLIB_1.2.9+0x254>
   10710:	ldr	w8, [sp, #144]
   10714:	cmp	w8, #0x0
   10718:	cset	w8, le
   1071c:	tbnz	w8, #0, 10740 <inflateCodesUsed@@ZLIB_1.2.9+0x2e4>
   10720:	ldr	w8, [sp, #216]
   10724:	cbz	w8, 10734 <inflateCodesUsed@@ZLIB_1.2.9+0x2d8>
   10728:	ldr	w8, [sp, #160]
   1072c:	cmp	w8, #0x1
   10730:	b.eq	10740 <inflateCodesUsed@@ZLIB_1.2.9+0x2e4>  // b.none
   10734:	mov	w8, #0xffffffff            	// #-1
   10738:	str	w8, [sp, #220]
   1073c:	b	10dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10740:	add	x8, sp, #0x14
   10744:	mov	w9, #0x0                   	// #0
   10748:	strh	w9, [x8, #2]
   1074c:	mov	w9, #0x1                   	// #1
   10750:	str	w9, [sp, #172]
   10754:	ldr	w8, [sp, #172]
   10758:	cmp	w8, #0xf
   1075c:	b.cs	107b4 <inflateCodesUsed@@ZLIB_1.2.9+0x358>  // b.hs, b.nlast
   10760:	ldr	w8, [sp, #172]
   10764:	mov	w9, w8
   10768:	mov	x10, #0x2                   	// #2
   1076c:	add	x11, sp, #0x14
   10770:	ldrh	w8, [x11, x9, lsl #1]
   10774:	ldr	w12, [sp, #172]
   10778:	mov	w9, w12
   1077c:	add	x13, sp, #0x34
   10780:	ldrh	w12, [x13, x9, lsl #1]
   10784:	add	w8, w8, w12
   10788:	ldr	w12, [sp, #172]
   1078c:	add	w12, w12, #0x1
   10790:	mov	w9, w12
   10794:	ubfx	x9, x9, #0, #32
   10798:	mul	x9, x10, x9
   1079c:	add	x9, x11, x9
   107a0:	strh	w8, [x9]
   107a4:	ldr	w8, [sp, #172]
   107a8:	add	w8, w8, #0x1
   107ac:	str	w8, [sp, #172]
   107b0:	b	10754 <inflateCodesUsed@@ZLIB_1.2.9+0x2f8>
   107b4:	str	wzr, [sp, #168]
   107b8:	ldr	w8, [sp, #168]
   107bc:	ldr	w9, [sp, #204]
   107c0:	cmp	w8, w9
   107c4:	b.cs	10840 <inflateCodesUsed@@ZLIB_1.2.9+0x3e4>  // b.hs, b.nlast
   107c8:	ldr	x8, [sp, #8]
   107cc:	ldr	x9, [x8, #32]
   107d0:	ldr	w10, [sp, #168]
   107d4:	mov	w11, w10
   107d8:	ldrh	w10, [x9, x11, lsl #1]
   107dc:	cbz	w10, 10830 <inflateCodesUsed@@ZLIB_1.2.9+0x3d4>
   107e0:	ldr	w8, [sp, #168]
   107e4:	ldr	x9, [sp, #8]
   107e8:	ldr	x10, [x9]
   107ec:	ldr	x11, [x9, #32]
   107f0:	ldr	w12, [sp, #168]
   107f4:	mov	w13, w12
   107f8:	mov	x14, #0x2                   	// #2
   107fc:	ldrh	w12, [x11, x13, lsl #1]
   10800:	mov	w11, w12
   10804:	mul	x11, x14, x11
   10808:	add	x13, sp, #0x14
   1080c:	add	x11, x13, x11
   10810:	ldrh	w12, [x11]
   10814:	mov	w13, w12
   10818:	mov	w12, w13
   1081c:	add	w12, w12, #0x1
   10820:	strh	w12, [x11]
   10824:	mul	x11, x14, x13
   10828:	add	x10, x10, x11
   1082c:	strh	w8, [x10]
   10830:	ldr	w8, [sp, #168]
   10834:	add	w8, w8, #0x1
   10838:	str	w8, [sp, #168]
   1083c:	b	107b8 <inflateCodesUsed@@ZLIB_1.2.9+0x35c>
   10840:	ldr	w8, [sp, #216]
   10844:	str	w8, [sp, #4]
   10848:	cbz	w8, 10860 <inflateCodesUsed@@ZLIB_1.2.9+0x404>
   1084c:	b	10850 <inflateCodesUsed@@ZLIB_1.2.9+0x3f4>
   10850:	ldr	w8, [sp, #4]
   10854:	cmp	w8, #0x1
   10858:	b.eq	1087c <inflateCodesUsed@@ZLIB_1.2.9+0x420>  // b.none
   1085c:	b	108a0 <inflateCodesUsed@@ZLIB_1.2.9+0x444>
   10860:	ldr	x8, [sp, #8]
   10864:	ldr	x9, [x8]
   10868:	str	x9, [sp, #88]
   1086c:	str	x9, [sp, #96]
   10870:	mov	w10, #0x14                  	// #20
   10874:	str	w10, [sp, #84]
   10878:	b	108bc <inflateCodesUsed@@ZLIB_1.2.9+0x460>
   1087c:	adrp	x8, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   10880:	add	x8, x8, #0xa66
   10884:	str	x8, [sp, #96]
   10888:	adrp	x8, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   1088c:	add	x8, x8, #0xaa4
   10890:	str	x8, [sp, #88]
   10894:	mov	w9, #0x101                 	// #257
   10898:	str	w9, [sp, #84]
   1089c:	b	108bc <inflateCodesUsed@@ZLIB_1.2.9+0x460>
   108a0:	adrp	x8, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   108a4:	add	x8, x8, #0xae2
   108a8:	str	x8, [sp, #96]
   108ac:	adrp	x8, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   108b0:	add	x8, x8, #0xb22
   108b4:	str	x8, [sp, #88]
   108b8:	str	wzr, [sp, #84]
   108bc:	str	wzr, [sp, #136]
   108c0:	str	wzr, [sp, #168]
   108c4:	ldr	w8, [sp, #164]
   108c8:	str	w8, [sp, #172]
   108cc:	ldr	x9, [sp, #8]
   108d0:	ldr	x10, [x9, #16]
   108d4:	ldr	x10, [x10]
   108d8:	str	x10, [sp, #104]
   108dc:	ldr	w8, [sp, #156]
   108e0:	str	w8, [sp, #152]
   108e4:	str	wzr, [sp, #148]
   108e8:	mov	w8, #0xffffffff            	// #-1
   108ec:	str	w8, [sp, #124]
   108f0:	ldr	w8, [sp, #156]
   108f4:	mov	w11, #0x1                   	// #1
   108f8:	lsl	w8, w11, w8
   108fc:	str	w8, [sp, #140]
   10900:	ldr	w8, [sp, #140]
   10904:	subs	w8, w8, #0x1
   10908:	str	w8, [sp, #120]
   1090c:	ldr	w8, [sp, #216]
   10910:	cmp	w8, #0x1
   10914:	b.ne	10924 <inflateCodesUsed@@ZLIB_1.2.9+0x4c8>  // b.any
   10918:	ldr	w8, [sp, #140]
   1091c:	cmp	w8, #0x354
   10920:	b.hi	1093c <inflateCodesUsed@@ZLIB_1.2.9+0x4e0>  // b.pmore
   10924:	ldr	w8, [sp, #216]
   10928:	cmp	w8, #0x2
   1092c:	b.ne	10948 <inflateCodesUsed@@ZLIB_1.2.9+0x4ec>  // b.any
   10930:	ldr	w8, [sp, #140]
   10934:	cmp	w8, #0x250
   10938:	b.ls	10948 <inflateCodesUsed@@ZLIB_1.2.9+0x4ec>  // b.plast
   1093c:	mov	w8, #0x1                   	// #1
   10940:	str	w8, [sp, #220]
   10944:	b	10dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10948:	ldr	w8, [sp, #172]
   1094c:	ldr	w9, [sp, #148]
   10950:	subs	w8, w8, w9
   10954:	add	x10, sp, #0x74
   10958:	strb	w8, [x10, #1]
   1095c:	ldr	x10, [sp, #8]
   10960:	ldr	x11, [x10]
   10964:	ldr	w8, [sp, #168]
   10968:	mov	w12, w8
   1096c:	ldrh	w8, [x11, x12, lsl #1]
   10970:	add	w8, w8, #0x1
   10974:	ldr	w9, [sp, #84]
   10978:	cmp	w8, w9
   1097c:	b.cs	109b4 <inflateCodesUsed@@ZLIB_1.2.9+0x558>  // b.hs, b.nlast
   10980:	add	x8, sp, #0x74
   10984:	mov	w9, #0x0                   	// #0
   10988:	strb	w9, [sp, #116]
   1098c:	ldr	x10, [sp, #8]
   10990:	ldr	x11, [x10]
   10994:	ldr	w9, [sp, #168]
   10998:	mov	w12, w9
   1099c:	mov	x13, #0x2                   	// #2
   109a0:	mul	x12, x13, x12
   109a4:	add	x11, x11, x12
   109a8:	ldrh	w9, [x11]
   109ac:	strh	w9, [x8, #2]
   109b0:	b	10a60 <inflateCodesUsed@@ZLIB_1.2.9+0x604>
   109b4:	ldr	x8, [sp, #8]
   109b8:	ldr	x9, [x8]
   109bc:	ldr	w10, [sp, #168]
   109c0:	mov	w11, w10
   109c4:	ldrh	w10, [x9, x11, lsl #1]
   109c8:	ldr	w12, [sp, #84]
   109cc:	cmp	w10, w12
   109d0:	b.cc	10a4c <inflateCodesUsed@@ZLIB_1.2.9+0x5f0>  // b.lo, b.ul, b.last
   109d4:	ldr	x8, [sp, #88]
   109d8:	ldr	x9, [sp, #8]
   109dc:	ldr	x10, [x9]
   109e0:	ldr	w11, [sp, #168]
   109e4:	mov	w12, w11
   109e8:	mov	x13, #0x2                   	// #2
   109ec:	ldrh	w11, [x10, x12, lsl #1]
   109f0:	ldr	w14, [sp, #84]
   109f4:	subs	w11, w11, w14
   109f8:	mov	w10, w11
   109fc:	ubfx	x10, x10, #0, #32
   10a00:	mul	x10, x13, x10
   10a04:	add	x8, x8, x10
   10a08:	ldrh	w11, [x8]
   10a0c:	add	x8, sp, #0x74
   10a10:	strb	w11, [sp, #116]
   10a14:	ldr	x10, [sp, #96]
   10a18:	ldr	x12, [x9]
   10a1c:	ldr	w11, [sp, #168]
   10a20:	mov	w15, w11
   10a24:	ldrh	w11, [x12, x15, lsl #1]
   10a28:	ldr	w14, [sp, #84]
   10a2c:	subs	w11, w11, w14
   10a30:	mov	w12, w11
   10a34:	ubfx	x12, x12, #0, #32
   10a38:	mul	x12, x13, x12
   10a3c:	add	x10, x10, x12
   10a40:	ldrh	w11, [x10]
   10a44:	strh	w11, [x8, #2]
   10a48:	b	10a60 <inflateCodesUsed@@ZLIB_1.2.9+0x604>
   10a4c:	add	x8, sp, #0x74
   10a50:	mov	w9, #0x60                  	// #96
   10a54:	strb	w9, [sp, #116]
   10a58:	mov	w9, #0x0                   	// #0
   10a5c:	strh	w9, [x8, #2]
   10a60:	ldr	w8, [sp, #172]
   10a64:	ldr	w9, [sp, #148]
   10a68:	subs	w8, w8, w9
   10a6c:	mov	w9, #0x1                   	// #1
   10a70:	lsl	w8, w9, w8
   10a74:	str	w8, [sp, #132]
   10a78:	ldr	w8, [sp, #152]
   10a7c:	lsl	w8, w9, w8
   10a80:	str	w8, [sp, #128]
   10a84:	ldr	w8, [sp, #128]
   10a88:	str	w8, [sp, #164]
   10a8c:	ldr	w8, [sp, #132]
   10a90:	ldr	w9, [sp, #128]
   10a94:	subs	w8, w9, w8
   10a98:	str	w8, [sp, #128]
   10a9c:	ldr	x10, [sp, #104]
   10aa0:	ldr	w8, [sp, #136]
   10aa4:	ldr	w9, [sp, #148]
   10aa8:	lsr	w8, w8, w9
   10aac:	ldr	w9, [sp, #128]
   10ab0:	add	w8, w8, w9
   10ab4:	ldr	w9, [sp, #116]
   10ab8:	str	w9, [x10, w8, uxtw #2]
   10abc:	ldr	w8, [sp, #128]
   10ac0:	cbnz	w8, 10a8c <inflateCodesUsed@@ZLIB_1.2.9+0x630>
   10ac4:	ldr	w8, [sp, #172]
   10ac8:	mov	w9, #0x1                   	// #1
   10acc:	subs	w8, w8, #0x1
   10ad0:	lsl	w8, w9, w8
   10ad4:	str	w8, [sp, #132]
   10ad8:	ldr	w8, [sp, #136]
   10adc:	ldr	w9, [sp, #132]
   10ae0:	and	w8, w8, w9
   10ae4:	cbz	w8, 10af8 <inflateCodesUsed@@ZLIB_1.2.9+0x69c>
   10ae8:	ldr	w8, [sp, #132]
   10aec:	lsr	w8, w8, #1
   10af0:	str	w8, [sp, #132]
   10af4:	b	10ad8 <inflateCodesUsed@@ZLIB_1.2.9+0x67c>
   10af8:	ldr	w8, [sp, #132]
   10afc:	cbz	w8, 10b28 <inflateCodesUsed@@ZLIB_1.2.9+0x6cc>
   10b00:	ldr	w8, [sp, #132]
   10b04:	subs	w8, w8, #0x1
   10b08:	ldr	w9, [sp, #136]
   10b0c:	and	w8, w9, w8
   10b10:	str	w8, [sp, #136]
   10b14:	ldr	w8, [sp, #132]
   10b18:	ldr	w9, [sp, #136]
   10b1c:	add	w8, w9, w8
   10b20:	str	w8, [sp, #136]
   10b24:	b	10b2c <inflateCodesUsed@@ZLIB_1.2.9+0x6d0>
   10b28:	str	wzr, [sp, #136]
   10b2c:	ldr	w8, [sp, #168]
   10b30:	add	w8, w8, #0x1
   10b34:	str	w8, [sp, #168]
   10b38:	ldr	w8, [sp, #172]
   10b3c:	mov	w9, w8
   10b40:	mov	x10, #0x2                   	// #2
   10b44:	mul	x9, x10, x9
   10b48:	add	x10, sp, #0x34
   10b4c:	add	x9, x10, x9
   10b50:	ldrh	w8, [x9]
   10b54:	mov	w11, #0xffffffff            	// #-1
   10b58:	add	w8, w11, w8, uxth
   10b5c:	mov	w11, w8
   10b60:	strh	w11, [x9]
   10b64:	and	w8, w8, #0xffff
   10b68:	cbnz	w8, 10ba4 <inflateCodesUsed@@ZLIB_1.2.9+0x748>
   10b6c:	ldr	w8, [sp, #172]
   10b70:	ldr	w9, [sp, #160]
   10b74:	cmp	w8, w9
   10b78:	b.ne	10b80 <inflateCodesUsed@@ZLIB_1.2.9+0x724>  // b.any
   10b7c:	b	10d64 <inflateCodesUsed@@ZLIB_1.2.9+0x908>
   10b80:	ldr	x8, [sp, #8]
   10b84:	ldr	x9, [x8, #32]
   10b88:	ldr	x10, [x8]
   10b8c:	ldr	w11, [sp, #168]
   10b90:	mov	w12, w11
   10b94:	ldrh	w11, [x10, x12, lsl #1]
   10b98:	mov	w10, w11
   10b9c:	ldrh	w11, [x9, x10, lsl #1]
   10ba0:	str	w11, [sp, #172]
   10ba4:	ldr	w8, [sp, #172]
   10ba8:	ldr	w9, [sp, #156]
   10bac:	cmp	w8, w9
   10bb0:	b.ls	10d60 <inflateCodesUsed@@ZLIB_1.2.9+0x904>  // b.plast
   10bb4:	ldr	w8, [sp, #136]
   10bb8:	ldr	w9, [sp, #120]
   10bbc:	and	w8, w8, w9
   10bc0:	ldr	w9, [sp, #124]
   10bc4:	cmp	w8, w9
   10bc8:	b.eq	10d60 <inflateCodesUsed@@ZLIB_1.2.9+0x904>  // b.none
   10bcc:	ldr	w8, [sp, #148]
   10bd0:	cbnz	w8, 10bdc <inflateCodesUsed@@ZLIB_1.2.9+0x780>
   10bd4:	ldr	w8, [sp, #156]
   10bd8:	str	w8, [sp, #148]
   10bdc:	ldr	w8, [sp, #164]
   10be0:	mov	w9, w8
   10be4:	ldr	x10, [sp, #104]
   10be8:	mov	x11, #0x4                   	// #4
   10bec:	mul	x9, x11, x9
   10bf0:	add	x9, x10, x9
   10bf4:	str	x9, [sp, #104]
   10bf8:	ldr	w8, [sp, #172]
   10bfc:	ldr	w12, [sp, #148]
   10c00:	subs	w8, w8, w12
   10c04:	str	w8, [sp, #152]
   10c08:	ldr	w8, [sp, #152]
   10c0c:	mov	w12, #0x1                   	// #1
   10c10:	lsl	w8, w12, w8
   10c14:	str	w8, [sp, #144]
   10c18:	ldr	w8, [sp, #152]
   10c1c:	ldr	w9, [sp, #148]
   10c20:	add	w8, w8, w9
   10c24:	ldr	w9, [sp, #160]
   10c28:	cmp	w8, w9
   10c2c:	b.cs	10c80 <inflateCodesUsed@@ZLIB_1.2.9+0x824>  // b.hs, b.nlast
   10c30:	ldr	w8, [sp, #152]
   10c34:	ldr	w9, [sp, #148]
   10c38:	add	w8, w8, w9
   10c3c:	add	x10, sp, #0x34
   10c40:	ldrh	w8, [x10, w8, uxtw #1]
   10c44:	ldr	w9, [sp, #144]
   10c48:	subs	w8, w9, w8
   10c4c:	str	w8, [sp, #144]
   10c50:	ldr	w8, [sp, #144]
   10c54:	cmp	w8, #0x0
   10c58:	cset	w8, gt
   10c5c:	tbnz	w8, #0, 10c64 <inflateCodesUsed@@ZLIB_1.2.9+0x808>
   10c60:	b	10c80 <inflateCodesUsed@@ZLIB_1.2.9+0x824>
   10c64:	ldr	w8, [sp, #152]
   10c68:	add	w8, w8, #0x1
   10c6c:	str	w8, [sp, #152]
   10c70:	ldr	w8, [sp, #144]
   10c74:	lsl	w8, w8, #1
   10c78:	str	w8, [sp, #144]
   10c7c:	b	10c18 <inflateCodesUsed@@ZLIB_1.2.9+0x7bc>
   10c80:	ldr	w8, [sp, #152]
   10c84:	mov	w9, #0x1                   	// #1
   10c88:	lsl	w8, w9, w8
   10c8c:	ldr	w9, [sp, #140]
   10c90:	add	w8, w9, w8
   10c94:	str	w8, [sp, #140]
   10c98:	ldr	w8, [sp, #216]
   10c9c:	cmp	w8, #0x1
   10ca0:	b.ne	10cb0 <inflateCodesUsed@@ZLIB_1.2.9+0x854>  // b.any
   10ca4:	ldr	w8, [sp, #140]
   10ca8:	cmp	w8, #0x354
   10cac:	b.hi	10cc8 <inflateCodesUsed@@ZLIB_1.2.9+0x86c>  // b.pmore
   10cb0:	ldr	w8, [sp, #216]
   10cb4:	cmp	w8, #0x2
   10cb8:	b.ne	10cd4 <inflateCodesUsed@@ZLIB_1.2.9+0x878>  // b.any
   10cbc:	ldr	w8, [sp, #140]
   10cc0:	cmp	w8, #0x250
   10cc4:	b.ls	10cd4 <inflateCodesUsed@@ZLIB_1.2.9+0x878>  // b.plast
   10cc8:	mov	w8, #0x1                   	// #1
   10ccc:	str	w8, [sp, #220]
   10cd0:	b	10dd8 <inflateCodesUsed@@ZLIB_1.2.9+0x97c>
   10cd4:	ldr	w8, [sp, #136]
   10cd8:	ldr	w9, [sp, #120]
   10cdc:	and	w8, w8, w9
   10ce0:	str	w8, [sp, #124]
   10ce4:	ldr	w8, [sp, #152]
   10ce8:	ldr	x10, [sp, #8]
   10cec:	ldr	x11, [x10, #16]
   10cf0:	ldr	x11, [x11]
   10cf4:	ldr	w9, [sp, #124]
   10cf8:	mov	w12, w9
   10cfc:	mov	x13, #0x4                   	// #4
   10d00:	mul	x12, x13, x12
   10d04:	add	x11, x11, x12
   10d08:	strb	w8, [x11]
   10d0c:	ldr	w8, [sp, #156]
   10d10:	ldr	x11, [x10, #16]
   10d14:	ldr	x11, [x11]
   10d18:	ldr	w9, [sp, #124]
   10d1c:	mov	w12, w9
   10d20:	mul	x12, x13, x12
   10d24:	add	x11, x11, x12
   10d28:	strb	w8, [x11, #1]
   10d2c:	ldr	x11, [sp, #104]
   10d30:	ldr	x12, [x10, #16]
   10d34:	ldr	x12, [x12]
   10d38:	subs	x11, x11, x12
   10d3c:	mov	x12, #0x4                   	// #4
   10d40:	sdiv	x11, x11, x12
   10d44:	ldr	x12, [x10, #16]
   10d48:	ldr	x12, [x12]
   10d4c:	ldr	w8, [sp, #124]
   10d50:	mov	w14, w8
   10d54:	mul	x13, x13, x14
   10d58:	add	x12, x12, x13
   10d5c:	strh	w11, [x12, #2]
   10d60:	b	10948 <inflateCodesUsed@@ZLIB_1.2.9+0x4ec>
   10d64:	ldr	w8, [sp, #136]
   10d68:	cbz	w8, 10da4 <inflateCodesUsed@@ZLIB_1.2.9+0x948>
   10d6c:	add	x8, sp, #0x74
   10d70:	mov	w9, #0x40                  	// #64
   10d74:	strb	w9, [sp, #116]
   10d78:	ldr	w9, [sp, #172]
   10d7c:	ldr	w10, [sp, #148]
   10d80:	subs	w9, w9, w10
   10d84:	strb	w9, [x8, #1]
   10d88:	mov	w9, #0x0                   	// #0
   10d8c:	strh	w9, [x8, #2]
   10d90:	ldr	x8, [sp, #104]
   10d94:	ldr	w9, [sp, #136]
   10d98:	mov	w11, w9
   10d9c:	ldr	w9, [sp, #116]
   10da0:	str	w9, [x8, x11, lsl #2]
   10da4:	ldr	w8, [sp, #140]
   10da8:	mov	w9, w8
   10dac:	ldr	x10, [sp, #8]
   10db0:	ldr	x11, [x10, #16]
   10db4:	ldr	x12, [x11]
   10db8:	mov	x13, #0x4                   	// #4
   10dbc:	mul	x9, x13, x9
   10dc0:	add	x9, x12, x9
   10dc4:	str	x9, [x11]
   10dc8:	ldr	w8, [sp, #156]
   10dcc:	ldr	x9, [x10, #8]
   10dd0:	str	w8, [x9]
   10dd4:	str	wzr, [sp, #220]
   10dd8:	ldr	w0, [sp, #220]
   10ddc:	add	sp, sp, #0xe0
   10de0:	ret
   10de4:	sub	sp, sp, #0x40
   10de8:	stp	x29, x30, [sp, #48]
   10dec:	add	x29, sp, #0x30
   10df0:	adrp	x8, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
   10df4:	add	x8, x8, #0xd08
   10df8:	adrp	x9, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
   10dfc:	add	x9, x9, #0xd28
   10e00:	adrp	x10, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
   10e04:	add	x10, x10, #0xd48
   10e08:	mov	w11, #0x0                   	// #0
   10e0c:	stur	x0, [x29, #-8]
   10e10:	stur	x8, [x29, #-16]
   10e14:	str	x9, [sp, #24]
   10e18:	str	x10, [sp, #16]
   10e1c:	str	w11, [sp, #12]
   10e20:	bl	10ea0 <inflateCodesUsed@@ZLIB_1.2.9+0xa44>
   10e24:	ldur	x8, [x29, #-8]
   10e28:	add	x8, x8, #0xd4
   10e2c:	ldur	x9, [x29, #-8]
   10e30:	str	x8, [x9, #2904]
   10e34:	ldur	x8, [x29, #-8]
   10e38:	ldur	x9, [x29, #-16]
   10e3c:	str	x9, [x8, #2920]
   10e40:	ldur	x8, [x29, #-8]
   10e44:	add	x8, x8, #0x9c8
   10e48:	ldur	x10, [x29, #-8]
   10e4c:	str	x8, [x10, #2928]
   10e50:	ldur	x8, [x29, #-8]
   10e54:	ldr	x10, [sp, #24]
   10e58:	str	x10, [x8, #2944]
   10e5c:	ldur	x8, [x29, #-8]
   10e60:	add	x8, x8, #0xabc
   10e64:	ldur	x12, [x29, #-8]
   10e68:	str	x8, [x12, #2952]
   10e6c:	ldur	x8, [x29, #-8]
   10e70:	ldr	x12, [sp, #16]
   10e74:	str	x12, [x8, #2968]
   10e78:	ldur	x8, [x29, #-8]
   10e7c:	ldr	w11, [sp, #12]
   10e80:	strh	w11, [x8, #5936]
   10e84:	ldur	x8, [x29, #-8]
   10e88:	str	wzr, [x8, #5940]
   10e8c:	ldur	x0, [x29, #-8]
   10e90:	bl	10ea4 <inflateCodesUsed@@ZLIB_1.2.9+0xa48>
   10e94:	ldp	x29, x30, [sp, #48]
   10e98:	add	sp, sp, #0x40
   10e9c:	ret
   10ea0:	ret
   10ea4:	sub	sp, sp, #0x10
   10ea8:	str	x0, [sp, #8]
   10eac:	str	wzr, [sp, #4]
   10eb0:	ldr	w8, [sp, #4]
   10eb4:	cmp	w8, #0x11e
   10eb8:	b.ge	10eec <inflateCodesUsed@@ZLIB_1.2.9+0xa90>  // b.tcont
   10ebc:	ldr	x8, [sp, #8]
   10ec0:	add	x8, x8, #0xd4
   10ec4:	ldrsw	x9, [sp, #4]
   10ec8:	mov	x10, #0x4                   	// #4
   10ecc:	mul	x9, x10, x9
   10ed0:	add	x8, x8, x9
   10ed4:	mov	w11, #0x0                   	// #0
   10ed8:	strh	w11, [x8]
   10edc:	ldr	w8, [sp, #4]
   10ee0:	add	w8, w8, #0x1
   10ee4:	str	w8, [sp, #4]
   10ee8:	b	10eb0 <inflateCodesUsed@@ZLIB_1.2.9+0xa54>
   10eec:	str	wzr, [sp, #4]
   10ef0:	ldr	w8, [sp, #4]
   10ef4:	cmp	w8, #0x1e
   10ef8:	b.ge	10f2c <inflateCodesUsed@@ZLIB_1.2.9+0xad0>  // b.tcont
   10efc:	ldr	x8, [sp, #8]
   10f00:	add	x8, x8, #0x9c8
   10f04:	ldrsw	x9, [sp, #4]
   10f08:	mov	x10, #0x4                   	// #4
   10f0c:	mul	x9, x10, x9
   10f10:	add	x8, x8, x9
   10f14:	mov	w11, #0x0                   	// #0
   10f18:	strh	w11, [x8]
   10f1c:	ldr	w8, [sp, #4]
   10f20:	add	w8, w8, #0x1
   10f24:	str	w8, [sp, #4]
   10f28:	b	10ef0 <inflateCodesUsed@@ZLIB_1.2.9+0xa94>
   10f2c:	str	wzr, [sp, #4]
   10f30:	ldr	w8, [sp, #4]
   10f34:	cmp	w8, #0x13
   10f38:	b.ge	10f6c <inflateCodesUsed@@ZLIB_1.2.9+0xb10>  // b.tcont
   10f3c:	ldr	x8, [sp, #8]
   10f40:	add	x8, x8, #0xabc
   10f44:	ldrsw	x9, [sp, #4]
   10f48:	mov	x10, #0x4                   	// #4
   10f4c:	mul	x9, x10, x9
   10f50:	add	x8, x8, x9
   10f54:	mov	w11, #0x0                   	// #0
   10f58:	strh	w11, [x8]
   10f5c:	ldr	w8, [sp, #4]
   10f60:	add	w8, w8, #0x1
   10f64:	str	w8, [sp, #4]
   10f68:	b	10f30 <inflateCodesUsed@@ZLIB_1.2.9+0xad4>
   10f6c:	ldr	x8, [sp, #8]
   10f70:	mov	w9, #0x1                   	// #1
   10f74:	strh	w9, [x8, #1236]
   10f78:	ldr	x8, [sp, #8]
   10f7c:	str	xzr, [x8, #5920]
   10f80:	ldr	x8, [sp, #8]
   10f84:	str	xzr, [x8, #5912]
   10f88:	ldr	x8, [sp, #8]
   10f8c:	str	wzr, [x8, #5928]
   10f90:	ldr	x8, [sp, #8]
   10f94:	str	wzr, [x8, #5900]
   10f98:	add	sp, sp, #0x10
   10f9c:	ret
   10fa0:	sub	sp, sp, #0x40
   10fa4:	stp	x29, x30, [sp, #48]
   10fa8:	add	x29, sp, #0x30
   10fac:	mov	w8, #0x3                   	// #3
   10fb0:	mov	w9, #0x10                  	// #16
   10fb4:	stur	x0, [x29, #-8]
   10fb8:	stur	x1, [x29, #-16]
   10fbc:	str	x2, [sp, #24]
   10fc0:	str	w3, [sp, #20]
   10fc4:	str	w8, [sp, #16]
   10fc8:	ldur	x10, [x29, #-8]
   10fcc:	ldr	w8, [x10, #5940]
   10fd0:	ldr	w11, [sp, #16]
   10fd4:	subs	w9, w9, w11
   10fd8:	cmp	w8, w9
   10fdc:	b.le	110a8 <inflateCodesUsed@@ZLIB_1.2.9+0xc4c>
   10fe0:	ldr	w8, [sp, #20]
   10fe4:	add	w8, w8, #0x0
   10fe8:	str	w8, [sp, #12]
   10fec:	ldr	w8, [sp, #12]
   10ff0:	and	w8, w8, #0xffff
   10ff4:	ldur	x9, [x29, #-8]
   10ff8:	ldr	w10, [x9, #5940]
   10ffc:	lsl	w8, w8, w10
   11000:	ldur	x9, [x29, #-8]
   11004:	ldrh	w10, [x9, #5936]
   11008:	orr	w8, w10, w8
   1100c:	strh	w8, [x9, #5936]
   11010:	ldur	x9, [x29, #-8]
   11014:	ldrh	w8, [x9, #5936]
   11018:	and	w8, w8, #0xff
   1101c:	ldur	x9, [x29, #-8]
   11020:	ldr	x9, [x9, #16]
   11024:	ldur	x11, [x29, #-8]
   11028:	ldr	x12, [x11, #40]
   1102c:	add	x13, x12, #0x1
   11030:	str	x13, [x11, #40]
   11034:	add	x9, x9, x12
   11038:	strb	w8, [x9]
   1103c:	ldur	x9, [x29, #-8]
   11040:	ldrh	w8, [x9, #5936]
   11044:	asr	w8, w8, #8
   11048:	ldur	x9, [x29, #-8]
   1104c:	ldr	x9, [x9, #16]
   11050:	ldur	x11, [x29, #-8]
   11054:	ldr	x12, [x11, #40]
   11058:	add	x13, x12, #0x1
   1105c:	str	x13, [x11, #40]
   11060:	add	x9, x9, x12
   11064:	strb	w8, [x9]
   11068:	ldr	w8, [sp, #12]
   1106c:	and	w8, w8, #0xffff
   11070:	ldur	x9, [x29, #-8]
   11074:	ldr	w10, [x9, #5940]
   11078:	mov	w14, #0x10                  	// #16
   1107c:	subs	w10, w14, w10
   11080:	asr	w8, w8, w10
   11084:	ldur	x9, [x29, #-8]
   11088:	strh	w8, [x9, #5936]
   1108c:	ldr	w8, [sp, #16]
   11090:	subs	w8, w8, #0x10
   11094:	ldur	x9, [x29, #-8]
   11098:	ldr	w10, [x9, #5940]
   1109c:	add	w8, w10, w8
   110a0:	str	w8, [x9, #5940]
   110a4:	b	110e4 <inflateCodesUsed@@ZLIB_1.2.9+0xc88>
   110a8:	ldr	w8, [sp, #20]
   110ac:	add	w8, w8, #0x0
   110b0:	and	w8, w8, #0xffff
   110b4:	ldur	x9, [x29, #-8]
   110b8:	ldr	w10, [x9, #5940]
   110bc:	lsl	w8, w8, w10
   110c0:	ldur	x9, [x29, #-8]
   110c4:	ldrh	w10, [x9, #5936]
   110c8:	orr	w8, w10, w8
   110cc:	strh	w8, [x9, #5936]
   110d0:	ldr	w8, [sp, #16]
   110d4:	ldur	x9, [x29, #-8]
   110d8:	ldr	w10, [x9, #5940]
   110dc:	add	w8, w10, w8
   110e0:	str	w8, [x9, #5940]
   110e4:	ldur	x0, [x29, #-8]
   110e8:	bl	111e8 <inflateCodesUsed@@ZLIB_1.2.9+0xd8c>
   110ec:	ldr	x8, [sp, #24]
   110f0:	and	w8, w8, #0xffff
   110f4:	and	w8, w8, #0xff
   110f8:	ldur	x9, [x29, #-8]
   110fc:	ldr	x9, [x9, #16]
   11100:	ldur	x10, [x29, #-8]
   11104:	ldr	x11, [x10, #40]
   11108:	add	x12, x11, #0x1
   1110c:	str	x12, [x10, #40]
   11110:	add	x9, x9, x11
   11114:	strb	w8, [x9]
   11118:	ldr	x9, [sp, #24]
   1111c:	and	w8, w9, #0xffff
   11120:	mov	x10, #0x8                   	// #8
   11124:	asr	w8, w8, #8
   11128:	ldur	x11, [x29, #-8]
   1112c:	ldr	x11, [x11, #16]
   11130:	ldur	x12, [x29, #-8]
   11134:	ldr	x13, [x12, #40]
   11138:	add	x14, x13, #0x1
   1113c:	str	x14, [x12, #40]
   11140:	add	x11, x11, x13
   11144:	strb	w8, [x11]
   11148:	ldr	x11, [sp, #24]
   1114c:	mvn	x11, x11
   11150:	and	w8, w11, #0xffff
   11154:	and	w8, w8, #0xff
   11158:	ldur	x12, [x29, #-8]
   1115c:	ldr	x12, [x12, #16]
   11160:	ldur	x13, [x29, #-8]
   11164:	ldr	x14, [x13, #40]
   11168:	add	x15, x14, #0x1
   1116c:	str	x15, [x13, #40]
   11170:	add	x12, x12, x14
   11174:	strb	w8, [x12]
   11178:	ldr	x12, [sp, #24]
   1117c:	mvn	x12, x12
   11180:	and	w8, w12, #0xffff
   11184:	asr	w8, w8, w10
   11188:	ldur	x13, [x29, #-8]
   1118c:	ldr	x13, [x13, #16]
   11190:	ldur	x14, [x29, #-8]
   11194:	ldr	x15, [x14, #40]
   11198:	add	x16, x15, #0x1
   1119c:	str	x16, [x14, #40]
   111a0:	add	x13, x13, x15
   111a4:	strb	w8, [x13]
   111a8:	ldur	x13, [x29, #-8]
   111ac:	ldr	x13, [x13, #16]
   111b0:	ldur	x14, [x29, #-8]
   111b4:	ldr	x14, [x14, #40]
   111b8:	add	x0, x13, x14
   111bc:	ldur	x1, [x29, #-16]
   111c0:	ldr	x2, [sp, #24]
   111c4:	bl	23a0 <memcpy@plt>
   111c8:	ldr	x13, [sp, #24]
   111cc:	ldur	x14, [x29, #-8]
   111d0:	ldr	x15, [x14, #40]
   111d4:	add	x13, x15, x13
   111d8:	str	x13, [x14, #40]
   111dc:	ldp	x29, x30, [sp, #48]
   111e0:	add	sp, sp, #0x40
   111e4:	ret
   111e8:	sub	sp, sp, #0x10
   111ec:	str	x0, [sp, #8]
   111f0:	ldr	x8, [sp, #8]
   111f4:	ldr	w9, [x8, #5940]
   111f8:	cmp	w9, #0x8
   111fc:	b.le	1125c <inflateCodesUsed@@ZLIB_1.2.9+0xe00>
   11200:	ldr	x8, [sp, #8]
   11204:	ldrh	w9, [x8, #5936]
   11208:	and	w9, w9, #0xff
   1120c:	ldr	x8, [sp, #8]
   11210:	ldr	x8, [x8, #16]
   11214:	ldr	x10, [sp, #8]
   11218:	ldr	x11, [x10, #40]
   1121c:	add	x12, x11, #0x1
   11220:	str	x12, [x10, #40]
   11224:	add	x8, x8, x11
   11228:	strb	w9, [x8]
   1122c:	ldr	x8, [sp, #8]
   11230:	ldrh	w9, [x8, #5936]
   11234:	asr	w9, w9, #8
   11238:	ldr	x8, [sp, #8]
   1123c:	ldr	x8, [x8, #16]
   11240:	ldr	x10, [sp, #8]
   11244:	ldr	x11, [x10, #40]
   11248:	add	x12, x11, #0x1
   1124c:	str	x12, [x10, #40]
   11250:	add	x8, x8, x11
   11254:	strb	w9, [x8]
   11258:	b	11298 <inflateCodesUsed@@ZLIB_1.2.9+0xe3c>
   1125c:	ldr	x8, [sp, #8]
   11260:	ldr	w9, [x8, #5940]
   11264:	cmp	w9, #0x0
   11268:	cset	w9, le
   1126c:	tbnz	w9, #0, 11298 <inflateCodesUsed@@ZLIB_1.2.9+0xe3c>
   11270:	ldr	x8, [sp, #8]
   11274:	ldrh	w9, [x8, #5936]
   11278:	ldr	x8, [sp, #8]
   1127c:	ldr	x8, [x8, #16]
   11280:	ldr	x10, [sp, #8]
   11284:	ldr	x11, [x10, #40]
   11288:	add	x12, x11, #0x1
   1128c:	str	x12, [x10, #40]
   11290:	add	x8, x8, x11
   11294:	strb	w9, [x8]
   11298:	ldr	x8, [sp, #8]
   1129c:	mov	w9, #0x0                   	// #0
   112a0:	strh	w9, [x8, #5936]
   112a4:	ldr	x8, [sp, #8]
   112a8:	str	wzr, [x8, #5940]
   112ac:	add	sp, sp, #0x10
   112b0:	ret
   112b4:	sub	sp, sp, #0x20
   112b8:	stp	x29, x30, [sp, #16]
   112bc:	add	x29, sp, #0x10
   112c0:	str	x0, [sp, #8]
   112c4:	ldr	x0, [sp, #8]
   112c8:	bl	112d8 <inflateCodesUsed@@ZLIB_1.2.9+0xe7c>
   112cc:	ldp	x29, x30, [sp, #16]
   112d0:	add	sp, sp, #0x20
   112d4:	ret
   112d8:	sub	sp, sp, #0x10
   112dc:	str	x0, [sp, #8]
   112e0:	ldr	x8, [sp, #8]
   112e4:	ldr	w9, [x8, #5940]
   112e8:	cmp	w9, #0x10
   112ec:	b.ne	11360 <inflateCodesUsed@@ZLIB_1.2.9+0xf04>  // b.any
   112f0:	ldr	x8, [sp, #8]
   112f4:	ldrh	w9, [x8, #5936]
   112f8:	and	w9, w9, #0xff
   112fc:	ldr	x8, [sp, #8]
   11300:	ldr	x8, [x8, #16]
   11304:	ldr	x10, [sp, #8]
   11308:	ldr	x11, [x10, #40]
   1130c:	add	x12, x11, #0x1
   11310:	str	x12, [x10, #40]
   11314:	add	x8, x8, x11
   11318:	strb	w9, [x8]
   1131c:	ldr	x8, [sp, #8]
   11320:	ldrh	w9, [x8, #5936]
   11324:	asr	w9, w9, #8
   11328:	ldr	x8, [sp, #8]
   1132c:	ldr	x8, [x8, #16]
   11330:	ldr	x10, [sp, #8]
   11334:	ldr	x11, [x10, #40]
   11338:	add	x12, x11, #0x1
   1133c:	str	x12, [x10, #40]
   11340:	add	x8, x8, x11
   11344:	strb	w9, [x8]
   11348:	ldr	x8, [sp, #8]
   1134c:	mov	w9, #0x0                   	// #0
   11350:	strh	w9, [x8, #5936]
   11354:	ldr	x8, [sp, #8]
   11358:	str	wzr, [x8, #5940]
   1135c:	b	113b8 <inflateCodesUsed@@ZLIB_1.2.9+0xf5c>
   11360:	ldr	x8, [sp, #8]
   11364:	ldr	w9, [x8, #5940]
   11368:	cmp	w9, #0x8
   1136c:	b.lt	113b8 <inflateCodesUsed@@ZLIB_1.2.9+0xf5c>  // b.tstop
   11370:	ldr	x8, [sp, #8]
   11374:	ldrh	w9, [x8, #5936]
   11378:	ldr	x8, [sp, #8]
   1137c:	ldr	x8, [x8, #16]
   11380:	ldr	x10, [sp, #8]
   11384:	ldr	x11, [x10, #40]
   11388:	add	x12, x11, #0x1
   1138c:	str	x12, [x10, #40]
   11390:	add	x8, x8, x11
   11394:	strb	w9, [x8]
   11398:	ldr	x8, [sp, #8]
   1139c:	ldrh	w9, [x8, #5936]
   113a0:	asr	w9, w9, #8
   113a4:	strh	w9, [x8, #5936]
   113a8:	ldr	x8, [sp, #8]
   113ac:	ldr	w9, [x8, #5940]
   113b0:	subs	w9, w9, #0x8
   113b4:	str	w9, [x8, #5940]
   113b8:	add	sp, sp, #0x10
   113bc:	ret
   113c0:	sub	sp, sp, #0x30
   113c4:	stp	x29, x30, [sp, #32]
   113c8:	add	x29, sp, #0x20
   113cc:	mov	w8, #0x3                   	// #3
   113d0:	mov	w9, #0x10                  	// #16
   113d4:	adrp	x10, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   113d8:	add	x10, x10, #0xe64
   113dc:	stur	x0, [x29, #-8]
   113e0:	stur	w8, [x29, #-12]
   113e4:	ldur	x11, [x29, #-8]
   113e8:	ldr	w8, [x11, #5940]
   113ec:	ldur	w12, [x29, #-12]
   113f0:	subs	w9, w9, w12
   113f4:	cmp	w8, w9
   113f8:	str	x10, [sp]
   113fc:	b.le	114c4 <inflateCodesUsed@@ZLIB_1.2.9+0x1068>
   11400:	mov	w8, #0x2                   	// #2
   11404:	str	w8, [sp, #16]
   11408:	ldr	w8, [sp, #16]
   1140c:	and	w8, w8, #0xffff
   11410:	ldur	x9, [x29, #-8]
   11414:	ldr	w10, [x9, #5940]
   11418:	lsl	w8, w8, w10
   1141c:	ldur	x9, [x29, #-8]
   11420:	ldrh	w10, [x9, #5936]
   11424:	orr	w8, w10, w8
   11428:	strh	w8, [x9, #5936]
   1142c:	ldur	x9, [x29, #-8]
   11430:	ldrh	w8, [x9, #5936]
   11434:	and	w8, w8, #0xff
   11438:	ldur	x9, [x29, #-8]
   1143c:	ldr	x9, [x9, #16]
   11440:	ldur	x11, [x29, #-8]
   11444:	ldr	x12, [x11, #40]
   11448:	add	x13, x12, #0x1
   1144c:	str	x13, [x11, #40]
   11450:	add	x9, x9, x12
   11454:	strb	w8, [x9]
   11458:	ldur	x9, [x29, #-8]
   1145c:	ldrh	w8, [x9, #5936]
   11460:	asr	w8, w8, #8
   11464:	ldur	x9, [x29, #-8]
   11468:	ldr	x9, [x9, #16]
   1146c:	ldur	x11, [x29, #-8]
   11470:	ldr	x12, [x11, #40]
   11474:	add	x13, x12, #0x1
   11478:	str	x13, [x11, #40]
   1147c:	add	x9, x9, x12
   11480:	strb	w8, [x9]
   11484:	ldr	w8, [sp, #16]
   11488:	and	w8, w8, #0xffff
   1148c:	ldur	x9, [x29, #-8]
   11490:	ldr	w10, [x9, #5940]
   11494:	mov	w14, #0x10                  	// #16
   11498:	subs	w10, w14, w10
   1149c:	asr	w8, w8, w10
   114a0:	ldur	x9, [x29, #-8]
   114a4:	strh	w8, [x9, #5936]
   114a8:	ldur	w8, [x29, #-12]
   114ac:	subs	w8, w8, #0x10
   114b0:	ldur	x9, [x29, #-8]
   114b4:	ldr	w10, [x9, #5940]
   114b8:	add	w8, w10, w8
   114bc:	str	w8, [x9, #5940]
   114c0:	b	114f8 <inflateCodesUsed@@ZLIB_1.2.9+0x109c>
   114c4:	ldur	x8, [x29, #-8]
   114c8:	ldr	w9, [x8, #5940]
   114cc:	mov	w10, #0x2                   	// #2
   114d0:	lsl	w9, w10, w9
   114d4:	ldur	x8, [x29, #-8]
   114d8:	ldrh	w10, [x8, #5936]
   114dc:	orr	w9, w10, w9
   114e0:	strh	w9, [x8, #5936]
   114e4:	ldur	w9, [x29, #-12]
   114e8:	ldur	x8, [x29, #-8]
   114ec:	ldr	w10, [x8, #5940]
   114f0:	add	w9, w10, w9
   114f4:	str	w9, [x8, #5940]
   114f8:	ldr	x8, [sp]
   114fc:	ldrh	w9, [x8, #1026]
   11500:	str	w9, [sp, #12]
   11504:	ldur	x10, [x29, #-8]
   11508:	ldr	w9, [x10, #5940]
   1150c:	ldr	w11, [sp, #12]
   11510:	mov	w12, #0x10                  	// #16
   11514:	subs	w11, w12, w11
   11518:	cmp	w9, w11
   1151c:	b.le	115e8 <inflateCodesUsed@@ZLIB_1.2.9+0x118c>
   11520:	ldr	x8, [sp]
   11524:	ldrh	w9, [x8, #1024]
   11528:	str	w9, [sp, #8]
   1152c:	ldr	w9, [sp, #8]
   11530:	and	w9, w9, #0xffff
   11534:	ldur	x10, [x29, #-8]
   11538:	ldr	w11, [x10, #5940]
   1153c:	lsl	w9, w9, w11
   11540:	ldur	x10, [x29, #-8]
   11544:	ldrh	w11, [x10, #5936]
   11548:	orr	w9, w11, w9
   1154c:	strh	w9, [x10, #5936]
   11550:	ldur	x10, [x29, #-8]
   11554:	ldrh	w9, [x10, #5936]
   11558:	and	w9, w9, #0xff
   1155c:	ldur	x10, [x29, #-8]
   11560:	ldr	x10, [x10, #16]
   11564:	ldur	x12, [x29, #-8]
   11568:	ldr	x13, [x12, #40]
   1156c:	add	x14, x13, #0x1
   11570:	str	x14, [x12, #40]
   11574:	add	x10, x10, x13
   11578:	strb	w9, [x10]
   1157c:	ldur	x10, [x29, #-8]
   11580:	ldrh	w9, [x10, #5936]
   11584:	asr	w9, w9, #8
   11588:	ldur	x10, [x29, #-8]
   1158c:	ldr	x10, [x10, #16]
   11590:	ldur	x12, [x29, #-8]
   11594:	ldr	x13, [x12, #40]
   11598:	add	x14, x13, #0x1
   1159c:	str	x14, [x12, #40]
   115a0:	add	x10, x10, x13
   115a4:	strb	w9, [x10]
   115a8:	ldr	w9, [sp, #8]
   115ac:	and	w9, w9, #0xffff
   115b0:	ldur	x10, [x29, #-8]
   115b4:	ldr	w11, [x10, #5940]
   115b8:	mov	w15, #0x10                  	// #16
   115bc:	subs	w11, w15, w11
   115c0:	asr	w9, w9, w11
   115c4:	ldur	x10, [x29, #-8]
   115c8:	strh	w9, [x10, #5936]
   115cc:	ldr	w9, [sp, #12]
   115d0:	subs	w9, w9, #0x10
   115d4:	ldur	x10, [x29, #-8]
   115d8:	ldr	w11, [x10, #5940]
   115dc:	add	w9, w11, w9
   115e0:	str	w9, [x10, #5940]
   115e4:	b	11620 <inflateCodesUsed@@ZLIB_1.2.9+0x11c4>
   115e8:	ldr	x8, [sp]
   115ec:	ldrh	w9, [x8, #1024]
   115f0:	ldur	x10, [x29, #-8]
   115f4:	ldr	w11, [x10, #5940]
   115f8:	lsl	w9, w9, w11
   115fc:	ldur	x10, [x29, #-8]
   11600:	ldrh	w11, [x10, #5936]
   11604:	orr	w9, w11, w9
   11608:	strh	w9, [x10, #5936]
   1160c:	ldr	w9, [sp, #12]
   11610:	ldur	x10, [x29, #-8]
   11614:	ldr	w11, [x10, #5940]
   11618:	add	w9, w11, w9
   1161c:	str	w9, [x10, #5940]
   11620:	ldur	x0, [x29, #-8]
   11624:	bl	112d8 <inflateCodesUsed@@ZLIB_1.2.9+0xe7c>
   11628:	ldp	x29, x30, [sp, #32]
   1162c:	add	sp, sp, #0x30
   11630:	ret
   11634:	sub	sp, sp, #0x60
   11638:	stp	x29, x30, [sp, #80]
   1163c:	add	x29, sp, #0x50
   11640:	stur	x0, [x29, #-8]
   11644:	stur	x1, [x29, #-16]
   11648:	stur	x2, [x29, #-24]
   1164c:	stur	w3, [x29, #-28]
   11650:	str	wzr, [sp, #28]
   11654:	ldur	x8, [x29, #-8]
   11658:	ldr	w9, [x8, #196]
   1165c:	cmp	w9, #0x0
   11660:	cset	w9, le
   11664:	tbnz	w9, #0, 11708 <inflateCodesUsed@@ZLIB_1.2.9+0x12ac>
   11668:	ldur	x8, [x29, #-8]
   1166c:	ldr	x8, [x8]
   11670:	ldr	w9, [x8, #88]
   11674:	cmp	w9, #0x2
   11678:	b.ne	11690 <inflateCodesUsed@@ZLIB_1.2.9+0x1234>  // b.any
   1167c:	ldur	x0, [x29, #-8]
   11680:	bl	11a3c <inflateCodesUsed@@ZLIB_1.2.9+0x15e0>
   11684:	ldur	x8, [x29, #-8]
   11688:	ldr	x8, [x8]
   1168c:	str	w0, [x8, #88]
   11690:	ldur	x0, [x29, #-8]
   11694:	ldur	x8, [x29, #-8]
   11698:	add	x1, x8, #0xb58
   1169c:	bl	11b38 <inflateCodesUsed@@ZLIB_1.2.9+0x16dc>
   116a0:	ldur	x0, [x29, #-8]
   116a4:	ldur	x8, [x29, #-8]
   116a8:	add	x1, x8, #0xb70
   116ac:	bl	11b38 <inflateCodesUsed@@ZLIB_1.2.9+0x16dc>
   116b0:	ldur	x0, [x29, #-8]
   116b4:	bl	11f68 <inflateCodesUsed@@ZLIB_1.2.9+0x1b0c>
   116b8:	str	w0, [sp, #28]
   116bc:	ldur	x8, [x29, #-8]
   116c0:	ldr	x8, [x8, #5912]
   116c4:	add	x8, x8, #0x3
   116c8:	add	x8, x8, #0x7
   116cc:	lsr	x8, x8, #3
   116d0:	str	x8, [sp, #40]
   116d4:	ldur	x8, [x29, #-8]
   116d8:	ldr	x8, [x8, #5920]
   116dc:	add	x8, x8, #0x3
   116e0:	add	x8, x8, #0x7
   116e4:	lsr	x8, x8, #3
   116e8:	str	x8, [sp, #32]
   116ec:	ldr	x8, [sp, #32]
   116f0:	ldr	x9, [sp, #40]
   116f4:	cmp	x8, x9
   116f8:	b.hi	11704 <inflateCodesUsed@@ZLIB_1.2.9+0x12a8>  // b.pmore
   116fc:	ldr	x8, [sp, #32]
   11700:	str	x8, [sp, #40]
   11704:	b	11718 <inflateCodesUsed@@ZLIB_1.2.9+0x12bc>
   11708:	ldur	x8, [x29, #-24]
   1170c:	add	x8, x8, #0x5
   11710:	str	x8, [sp, #32]
   11714:	str	x8, [sp, #40]
   11718:	ldur	x8, [x29, #-24]
   1171c:	add	x8, x8, #0x4
   11720:	ldr	x9, [sp, #40]
   11724:	cmp	x8, x9
   11728:	b.hi	1174c <inflateCodesUsed@@ZLIB_1.2.9+0x12f0>  // b.pmore
   1172c:	ldur	x8, [x29, #-16]
   11730:	cbz	x8, 1174c <inflateCodesUsed@@ZLIB_1.2.9+0x12f0>
   11734:	ldur	x0, [x29, #-8]
   11738:	ldur	x1, [x29, #-16]
   1173c:	ldur	x2, [x29, #-24]
   11740:	ldur	w3, [x29, #-28]
   11744:	bl	10fa0 <inflateCodesUsed@@ZLIB_1.2.9+0xb44>
   11748:	b	11a18 <inflateCodesUsed@@ZLIB_1.2.9+0x15bc>
   1174c:	ldur	x8, [x29, #-8]
   11750:	ldr	w9, [x8, #200]
   11754:	cmp	w9, #0x4
   11758:	b.eq	1176c <inflateCodesUsed@@ZLIB_1.2.9+0x1310>  // b.none
   1175c:	ldr	x8, [sp, #32]
   11760:	ldr	x9, [sp, #40]
   11764:	cmp	x8, x9
   11768:	b.ne	118b0 <inflateCodesUsed@@ZLIB_1.2.9+0x1454>  // b.any
   1176c:	mov	w8, #0x3                   	// #3
   11770:	str	w8, [sp, #24]
   11774:	ldur	x9, [x29, #-8]
   11778:	ldr	w8, [x9, #5940]
   1177c:	ldr	w10, [sp, #24]
   11780:	mov	w11, #0x10                  	// #16
   11784:	subs	w10, w11, w10
   11788:	cmp	w8, w10
   1178c:	b.le	11858 <inflateCodesUsed@@ZLIB_1.2.9+0x13fc>
   11790:	ldur	w8, [x29, #-28]
   11794:	add	w8, w8, #0x2
   11798:	str	w8, [sp, #20]
   1179c:	ldr	w8, [sp, #20]
   117a0:	and	w8, w8, #0xffff
   117a4:	ldur	x9, [x29, #-8]
   117a8:	ldr	w10, [x9, #5940]
   117ac:	lsl	w8, w8, w10
   117b0:	ldur	x9, [x29, #-8]
   117b4:	ldrh	w10, [x9, #5936]
   117b8:	orr	w8, w10, w8
   117bc:	strh	w8, [x9, #5936]
   117c0:	ldur	x9, [x29, #-8]
   117c4:	ldrh	w8, [x9, #5936]
   117c8:	and	w8, w8, #0xff
   117cc:	ldur	x9, [x29, #-8]
   117d0:	ldr	x9, [x9, #16]
   117d4:	ldur	x11, [x29, #-8]
   117d8:	ldr	x12, [x11, #40]
   117dc:	add	x13, x12, #0x1
   117e0:	str	x13, [x11, #40]
   117e4:	add	x9, x9, x12
   117e8:	strb	w8, [x9]
   117ec:	ldur	x9, [x29, #-8]
   117f0:	ldrh	w8, [x9, #5936]
   117f4:	asr	w8, w8, #8
   117f8:	ldur	x9, [x29, #-8]
   117fc:	ldr	x9, [x9, #16]
   11800:	ldur	x11, [x29, #-8]
   11804:	ldr	x12, [x11, #40]
   11808:	add	x13, x12, #0x1
   1180c:	str	x13, [x11, #40]
   11810:	add	x9, x9, x12
   11814:	strb	w8, [x9]
   11818:	ldr	w8, [sp, #20]
   1181c:	and	w8, w8, #0xffff
   11820:	ldur	x9, [x29, #-8]
   11824:	ldr	w10, [x9, #5940]
   11828:	mov	w14, #0x10                  	// #16
   1182c:	subs	w10, w14, w10
   11830:	asr	w8, w8, w10
   11834:	ldur	x9, [x29, #-8]
   11838:	strh	w8, [x9, #5936]
   1183c:	ldr	w8, [sp, #24]
   11840:	subs	w8, w8, #0x10
   11844:	ldur	x9, [x29, #-8]
   11848:	ldr	w10, [x9, #5940]
   1184c:	add	w8, w10, w8
   11850:	str	w8, [x9, #5940]
   11854:	b	11894 <inflateCodesUsed@@ZLIB_1.2.9+0x1438>
   11858:	ldur	w8, [x29, #-28]
   1185c:	add	w8, w8, #0x2
   11860:	and	w8, w8, #0xffff
   11864:	ldur	x9, [x29, #-8]
   11868:	ldr	w10, [x9, #5940]
   1186c:	lsl	w8, w8, w10
   11870:	ldur	x9, [x29, #-8]
   11874:	ldrh	w10, [x9, #5936]
   11878:	orr	w8, w10, w8
   1187c:	strh	w8, [x9, #5936]
   11880:	ldr	w8, [sp, #24]
   11884:	ldur	x9, [x29, #-8]
   11888:	ldr	w10, [x9, #5940]
   1188c:	add	w8, w10, w8
   11890:	str	w8, [x9, #5940]
   11894:	ldur	x0, [x29, #-8]
   11898:	adrp	x1, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   1189c:	add	x1, x1, #0xe64
   118a0:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   118a4:	add	x2, x2, #0x2e4
   118a8:	bl	12054 <inflateCodesUsed@@ZLIB_1.2.9+0x1bf8>
   118ac:	b	11a18 <inflateCodesUsed@@ZLIB_1.2.9+0x15bc>
   118b0:	mov	w8, #0x3                   	// #3
   118b4:	str	w8, [sp, #16]
   118b8:	ldur	x9, [x29, #-8]
   118bc:	ldr	w8, [x9, #5940]
   118c0:	ldr	w10, [sp, #16]
   118c4:	mov	w11, #0x10                  	// #16
   118c8:	subs	w10, w11, w10
   118cc:	cmp	w8, w10
   118d0:	b.le	1199c <inflateCodesUsed@@ZLIB_1.2.9+0x1540>
   118d4:	ldur	w8, [x29, #-28]
   118d8:	add	w8, w8, #0x4
   118dc:	str	w8, [sp, #12]
   118e0:	ldr	w8, [sp, #12]
   118e4:	and	w8, w8, #0xffff
   118e8:	ldur	x9, [x29, #-8]
   118ec:	ldr	w10, [x9, #5940]
   118f0:	lsl	w8, w8, w10
   118f4:	ldur	x9, [x29, #-8]
   118f8:	ldrh	w10, [x9, #5936]
   118fc:	orr	w8, w10, w8
   11900:	strh	w8, [x9, #5936]
   11904:	ldur	x9, [x29, #-8]
   11908:	ldrh	w8, [x9, #5936]
   1190c:	and	w8, w8, #0xff
   11910:	ldur	x9, [x29, #-8]
   11914:	ldr	x9, [x9, #16]
   11918:	ldur	x11, [x29, #-8]
   1191c:	ldr	x12, [x11, #40]
   11920:	add	x13, x12, #0x1
   11924:	str	x13, [x11, #40]
   11928:	add	x9, x9, x12
   1192c:	strb	w8, [x9]
   11930:	ldur	x9, [x29, #-8]
   11934:	ldrh	w8, [x9, #5936]
   11938:	asr	w8, w8, #8
   1193c:	ldur	x9, [x29, #-8]
   11940:	ldr	x9, [x9, #16]
   11944:	ldur	x11, [x29, #-8]
   11948:	ldr	x12, [x11, #40]
   1194c:	add	x13, x12, #0x1
   11950:	str	x13, [x11, #40]
   11954:	add	x9, x9, x12
   11958:	strb	w8, [x9]
   1195c:	ldr	w8, [sp, #12]
   11960:	and	w8, w8, #0xffff
   11964:	ldur	x9, [x29, #-8]
   11968:	ldr	w10, [x9, #5940]
   1196c:	mov	w14, #0x10                  	// #16
   11970:	subs	w10, w14, w10
   11974:	asr	w8, w8, w10
   11978:	ldur	x9, [x29, #-8]
   1197c:	strh	w8, [x9, #5936]
   11980:	ldr	w8, [sp, #16]
   11984:	subs	w8, w8, #0x10
   11988:	ldur	x9, [x29, #-8]
   1198c:	ldr	w10, [x9, #5940]
   11990:	add	w8, w10, w8
   11994:	str	w8, [x9, #5940]
   11998:	b	119d8 <inflateCodesUsed@@ZLIB_1.2.9+0x157c>
   1199c:	ldur	w8, [x29, #-28]
   119a0:	add	w8, w8, #0x4
   119a4:	and	w8, w8, #0xffff
   119a8:	ldur	x9, [x29, #-8]
   119ac:	ldr	w10, [x9, #5940]
   119b0:	lsl	w8, w8, w10
   119b4:	ldur	x9, [x29, #-8]
   119b8:	ldrh	w10, [x9, #5936]
   119bc:	orr	w8, w10, w8
   119c0:	strh	w8, [x9, #5936]
   119c4:	ldr	w8, [sp, #16]
   119c8:	ldur	x9, [x29, #-8]
   119cc:	ldr	w10, [x9, #5940]
   119d0:	add	w8, w10, w8
   119d4:	str	w8, [x9, #5940]
   119d8:	ldur	x0, [x29, #-8]
   119dc:	ldur	x8, [x29, #-8]
   119e0:	ldr	w9, [x8, #2912]
   119e4:	add	w1, w9, #0x1
   119e8:	ldur	x8, [x29, #-8]
   119ec:	ldr	w9, [x8, #2936]
   119f0:	add	w2, w9, #0x1
   119f4:	ldr	w9, [sp, #28]
   119f8:	add	w3, w9, #0x1
   119fc:	bl	12958 <inflateCodesUsed@@ZLIB_1.2.9+0x24fc>
   11a00:	ldur	x0, [x29, #-8]
   11a04:	ldur	x8, [x29, #-8]
   11a08:	add	x1, x8, #0xd4
   11a0c:	ldur	x8, [x29, #-8]
   11a10:	add	x2, x8, #0x9c8
   11a14:	bl	12054 <inflateCodesUsed@@ZLIB_1.2.9+0x1bf8>
   11a18:	ldur	x0, [x29, #-8]
   11a1c:	bl	10ea4 <inflateCodesUsed@@ZLIB_1.2.9+0xa48>
   11a20:	ldur	w8, [x29, #-28]
   11a24:	cbz	w8, 11a30 <inflateCodesUsed@@ZLIB_1.2.9+0x15d4>
   11a28:	ldur	x0, [x29, #-8]
   11a2c:	bl	111e8 <inflateCodesUsed@@ZLIB_1.2.9+0xd8c>
   11a30:	ldp	x29, x30, [sp, #80]
   11a34:	add	sp, sp, #0x60
   11a38:	ret
   11a3c:	sub	sp, sp, #0x20
   11a40:	mov	x8, #0xc07f                	// #49279
   11a44:	movk	x8, #0xf3ff, lsl #16
   11a48:	str	x0, [sp, #16]
   11a4c:	str	x8, [sp, #8]
   11a50:	str	wzr, [sp, #4]
   11a54:	ldr	w8, [sp, #4]
   11a58:	cmp	w8, #0x1f
   11a5c:	b.gt	11aac <inflateCodesUsed@@ZLIB_1.2.9+0x1650>
   11a60:	ldr	x8, [sp, #8]
   11a64:	and	x8, x8, #0x1
   11a68:	cbz	x8, 11a90 <inflateCodesUsed@@ZLIB_1.2.9+0x1634>
   11a6c:	ldr	x8, [sp, #16]
   11a70:	add	x8, x8, #0xd4
   11a74:	ldrsw	x9, [sp, #4]
   11a78:	mov	x10, #0x4                   	// #4
   11a7c:	mul	x9, x10, x9
   11a80:	ldrh	w11, [x8, x9]
   11a84:	cbz	w11, 11a90 <inflateCodesUsed@@ZLIB_1.2.9+0x1634>
   11a88:	str	wzr, [sp, #28]
   11a8c:	b	11b2c <inflateCodesUsed@@ZLIB_1.2.9+0x16d0>
   11a90:	ldr	w8, [sp, #4]
   11a94:	add	w8, w8, #0x1
   11a98:	str	w8, [sp, #4]
   11a9c:	ldr	x9, [sp, #8]
   11aa0:	lsr	x9, x9, #1
   11aa4:	str	x9, [sp, #8]
   11aa8:	b	11a54 <inflateCodesUsed@@ZLIB_1.2.9+0x15f8>
   11aac:	ldr	x8, [sp, #16]
   11ab0:	ldrh	w9, [x8, #248]
   11ab4:	cbnz	w9, 11ad0 <inflateCodesUsed@@ZLIB_1.2.9+0x1674>
   11ab8:	ldr	x8, [sp, #16]
   11abc:	ldrh	w9, [x8, #252]
   11ac0:	cbnz	w9, 11ad0 <inflateCodesUsed@@ZLIB_1.2.9+0x1674>
   11ac4:	ldr	x8, [sp, #16]
   11ac8:	ldrh	w9, [x8, #264]
   11acc:	cbz	w9, 11adc <inflateCodesUsed@@ZLIB_1.2.9+0x1680>
   11ad0:	mov	w8, #0x1                   	// #1
   11ad4:	str	w8, [sp, #28]
   11ad8:	b	11b2c <inflateCodesUsed@@ZLIB_1.2.9+0x16d0>
   11adc:	mov	w8, #0x20                  	// #32
   11ae0:	str	w8, [sp, #4]
   11ae4:	ldr	w8, [sp, #4]
   11ae8:	cmp	w8, #0x100
   11aec:	b.ge	11b28 <inflateCodesUsed@@ZLIB_1.2.9+0x16cc>  // b.tcont
   11af0:	ldr	x8, [sp, #16]
   11af4:	add	x8, x8, #0xd4
   11af8:	ldrsw	x9, [sp, #4]
   11afc:	mov	x10, #0x4                   	// #4
   11b00:	mul	x9, x10, x9
   11b04:	ldrh	w11, [x8, x9]
   11b08:	cbz	w11, 11b18 <inflateCodesUsed@@ZLIB_1.2.9+0x16bc>
   11b0c:	mov	w8, #0x1                   	// #1
   11b10:	str	w8, [sp, #28]
   11b14:	b	11b2c <inflateCodesUsed@@ZLIB_1.2.9+0x16d0>
   11b18:	ldr	w8, [sp, #4]
   11b1c:	add	w8, w8, #0x1
   11b20:	str	w8, [sp, #4]
   11b24:	b	11ae4 <inflateCodesUsed@@ZLIB_1.2.9+0x1688>
   11b28:	str	wzr, [sp, #28]
   11b2c:	ldr	w0, [sp, #28]
   11b30:	add	sp, sp, #0x20
   11b34:	ret
   11b38:	sub	sp, sp, #0x60
   11b3c:	stp	x29, x30, [sp, #80]
   11b40:	add	x29, sp, #0x50
   11b44:	mov	w8, #0xffffffff            	// #-1
   11b48:	mov	w9, #0x23d                 	// #573
   11b4c:	stur	x0, [x29, #-8]
   11b50:	stur	x1, [x29, #-16]
   11b54:	ldur	x10, [x29, #-16]
   11b58:	ldr	x10, [x10]
   11b5c:	stur	x10, [x29, #-24]
   11b60:	ldur	x10, [x29, #-16]
   11b64:	ldr	x10, [x10, #16]
   11b68:	ldr	x10, [x10]
   11b6c:	stur	x10, [x29, #-32]
   11b70:	ldur	x10, [x29, #-16]
   11b74:	ldr	x10, [x10, #16]
   11b78:	ldr	w11, [x10, #20]
   11b7c:	stur	w11, [x29, #-36]
   11b80:	str	w8, [sp, #32]
   11b84:	ldur	x10, [x29, #-8]
   11b88:	str	wzr, [x10, #5300]
   11b8c:	ldur	x10, [x29, #-8]
   11b90:	str	w9, [x10, #5304]
   11b94:	str	wzr, [sp, #40]
   11b98:	ldr	w8, [sp, #40]
   11b9c:	ldur	w9, [x29, #-36]
   11ba0:	cmp	w8, w9
   11ba4:	b.ge	11c30 <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>  // b.tcont
   11ba8:	ldur	x8, [x29, #-24]
   11bac:	ldrsw	x9, [sp, #40]
   11bb0:	mov	x10, #0x4                   	// #4
   11bb4:	mul	x9, x10, x9
   11bb8:	ldrh	w11, [x8, x9]
   11bbc:	cbz	w11, 11c04 <inflateCodesUsed@@ZLIB_1.2.9+0x17a8>
   11bc0:	ldr	w8, [sp, #40]
   11bc4:	str	w8, [sp, #32]
   11bc8:	ldur	x9, [x29, #-8]
   11bcc:	add	x9, x9, #0xbc0
   11bd0:	ldur	x10, [x29, #-8]
   11bd4:	ldr	w11, [x10, #5300]
   11bd8:	add	w11, w11, #0x1
   11bdc:	str	w11, [x10, #5300]
   11be0:	str	w8, [x9, w11, sxtw #2]
   11be4:	ldur	x9, [x29, #-8]
   11be8:	mov	x10, #0x14bc                	// #5308
   11bec:	add	x9, x9, x10
   11bf0:	ldrsw	x10, [sp, #40]
   11bf4:	add	x9, x9, x10
   11bf8:	mov	w8, #0x0                   	// #0
   11bfc:	strb	w8, [x9]
   11c00:	b	11c20 <inflateCodesUsed@@ZLIB_1.2.9+0x17c4>
   11c04:	ldur	x8, [x29, #-24]
   11c08:	ldrsw	x9, [sp, #40]
   11c0c:	mov	x10, #0x4                   	// #4
   11c10:	mul	x9, x10, x9
   11c14:	add	x8, x8, x9
   11c18:	mov	w11, #0x0                   	// #0
   11c1c:	strh	w11, [x8, #2]
   11c20:	ldr	w8, [sp, #40]
   11c24:	add	w8, w8, #0x1
   11c28:	str	w8, [sp, #40]
   11c2c:	b	11b98 <inflateCodesUsed@@ZLIB_1.2.9+0x173c>
   11c30:	ldur	x8, [x29, #-8]
   11c34:	ldr	w9, [x8, #5300]
   11c38:	cmp	w9, #0x2
   11c3c:	b.ge	11d0c <inflateCodesUsed@@ZLIB_1.2.9+0x18b0>  // b.tcont
   11c40:	ldr	w8, [sp, #32]
   11c44:	cmp	w8, #0x2
   11c48:	b.ge	11c60 <inflateCodesUsed@@ZLIB_1.2.9+0x1804>  // b.tcont
   11c4c:	ldr	w8, [sp, #32]
   11c50:	add	w8, w8, #0x1
   11c54:	str	w8, [sp, #32]
   11c58:	str	w8, [sp, #24]
   11c5c:	b	11c68 <inflateCodesUsed@@ZLIB_1.2.9+0x180c>
   11c60:	mov	w8, wzr
   11c64:	str	w8, [sp, #24]
   11c68:	ldr	w8, [sp, #24]
   11c6c:	ldur	x9, [x29, #-8]
   11c70:	add	x9, x9, #0xbc0
   11c74:	ldur	x10, [x29, #-8]
   11c78:	ldr	w11, [x10, #5300]
   11c7c:	add	w11, w11, #0x1
   11c80:	str	w11, [x10, #5300]
   11c84:	mov	x10, #0x4                   	// #4
   11c88:	str	w8, [x9, w11, sxtw #2]
   11c8c:	str	w8, [sp, #28]
   11c90:	ldur	x9, [x29, #-24]
   11c94:	ldrsw	x12, [sp, #28]
   11c98:	mul	x10, x10, x12
   11c9c:	add	x9, x9, x10
   11ca0:	mov	w8, #0x1                   	// #1
   11ca4:	strh	w8, [x9]
   11ca8:	ldur	x9, [x29, #-8]
   11cac:	mov	x10, #0x14bc                	// #5308
   11cb0:	add	x9, x9, x10
   11cb4:	ldrsw	x10, [sp, #28]
   11cb8:	add	x9, x9, x10
   11cbc:	mov	w8, #0x0                   	// #0
   11cc0:	strb	w8, [x9]
   11cc4:	ldur	x9, [x29, #-8]
   11cc8:	ldr	x10, [x9, #5912]
   11ccc:	subs	x10, x10, #0x1
   11cd0:	str	x10, [x9, #5912]
   11cd4:	ldur	x9, [x29, #-32]
   11cd8:	cbz	x9, 11d08 <inflateCodesUsed@@ZLIB_1.2.9+0x18ac>
   11cdc:	ldur	x8, [x29, #-32]
   11ce0:	ldrsw	x9, [sp, #28]
   11ce4:	mov	x10, #0x4                   	// #4
   11ce8:	mul	x9, x10, x9
   11cec:	add	x8, x8, x9
   11cf0:	ldrh	w11, [x8, #2]
   11cf4:	mov	w8, w11
   11cf8:	ldur	x9, [x29, #-8]
   11cfc:	ldr	x10, [x9, #5920]
   11d00:	subs	x8, x10, x8
   11d04:	str	x8, [x9, #5920]
   11d08:	b	11c30 <inflateCodesUsed@@ZLIB_1.2.9+0x17d4>
   11d0c:	ldr	w8, [sp, #32]
   11d10:	ldur	x9, [x29, #-16]
   11d14:	str	w8, [x9, #8]
   11d18:	ldur	x9, [x29, #-8]
   11d1c:	ldr	w8, [x9, #5300]
   11d20:	mov	w10, #0x2                   	// #2
   11d24:	sdiv	w8, w8, w10
   11d28:	str	w8, [sp, #40]
   11d2c:	ldr	w8, [sp, #40]
   11d30:	cmp	w8, #0x1
   11d34:	b.lt	11d58 <inflateCodesUsed@@ZLIB_1.2.9+0x18fc>  // b.tstop
   11d38:	ldur	x0, [x29, #-8]
   11d3c:	ldur	x1, [x29, #-24]
   11d40:	ldr	w2, [sp, #40]
   11d44:	bl	13050 <inflateCodesUsed@@ZLIB_1.2.9+0x2bf4>
   11d48:	ldr	w8, [sp, #40]
   11d4c:	subs	w8, w8, #0x1
   11d50:	str	w8, [sp, #40]
   11d54:	b	11d2c <inflateCodesUsed@@ZLIB_1.2.9+0x18d0>
   11d58:	ldur	w8, [x29, #-36]
   11d5c:	str	w8, [sp, #28]
   11d60:	ldur	x8, [x29, #-8]
   11d64:	mov	x9, #0x4                   	// #4
   11d68:	ldr	w10, [x8, #3012]
   11d6c:	str	w10, [sp, #40]
   11d70:	ldur	x8, [x29, #-8]
   11d74:	add	x8, x8, #0xbc0
   11d78:	ldur	x11, [x29, #-8]
   11d7c:	ldrsw	x12, [x11, #5300]
   11d80:	mov	w10, w12
   11d84:	subs	w10, w10, #0x1
   11d88:	str	w10, [x11, #5300]
   11d8c:	ldr	w10, [x8, x12, lsl #2]
   11d90:	ldur	x8, [x29, #-8]
   11d94:	str	w10, [x8, #3012]
   11d98:	ldur	x0, [x29, #-8]
   11d9c:	ldur	x1, [x29, #-24]
   11da0:	mov	w2, #0x1                   	// #1
   11da4:	str	x9, [sp, #16]
   11da8:	bl	13050 <inflateCodesUsed@@ZLIB_1.2.9+0x2bf4>
   11dac:	ldur	x8, [x29, #-8]
   11db0:	ldr	w10, [x8, #3012]
   11db4:	str	w10, [sp, #36]
   11db8:	ldr	w10, [sp, #40]
   11dbc:	ldur	x8, [x29, #-8]
   11dc0:	add	x8, x8, #0xbc0
   11dc4:	ldur	x9, [x29, #-8]
   11dc8:	ldr	w13, [x9, #5304]
   11dcc:	subs	w13, w13, #0x1
   11dd0:	str	w13, [x9, #5304]
   11dd4:	str	w10, [x8, w13, sxtw #2]
   11dd8:	ldr	w10, [sp, #36]
   11ddc:	ldur	x8, [x29, #-8]
   11de0:	add	x8, x8, #0xbc0
   11de4:	ldur	x9, [x29, #-8]
   11de8:	ldr	w13, [x9, #5304]
   11dec:	subs	w13, w13, #0x1
   11df0:	str	w13, [x9, #5304]
   11df4:	str	w10, [x8, w13, sxtw #2]
   11df8:	ldur	x8, [x29, #-24]
   11dfc:	ldrsw	x9, [sp, #40]
   11e00:	ldr	x11, [sp, #16]
   11e04:	mul	x9, x11, x9
   11e08:	ldrh	w10, [x8, x9]
   11e0c:	ldur	x8, [x29, #-24]
   11e10:	ldrsw	x9, [sp, #36]
   11e14:	mul	x9, x11, x9
   11e18:	ldrh	w13, [x8, x9]
   11e1c:	add	w10, w10, w13
   11e20:	ldur	x8, [x29, #-24]
   11e24:	ldrsw	x9, [sp, #28]
   11e28:	mul	x9, x11, x9
   11e2c:	add	x8, x8, x9
   11e30:	strh	w10, [x8]
   11e34:	ldur	x8, [x29, #-8]
   11e38:	mov	x9, #0x14bc                	// #5308
   11e3c:	add	x8, x8, x9
   11e40:	ldrsw	x12, [sp, #40]
   11e44:	ldrb	w10, [x8, x12]
   11e48:	ldur	x8, [x29, #-8]
   11e4c:	add	x8, x8, x9
   11e50:	ldrsw	x9, [sp, #36]
   11e54:	ldrb	w13, [x8, x9]
   11e58:	cmp	w10, w13
   11e5c:	b.lt	11e7c <inflateCodesUsed@@ZLIB_1.2.9+0x1a20>  // b.tstop
   11e60:	ldur	x8, [x29, #-8]
   11e64:	mov	x9, #0x14bc                	// #5308
   11e68:	add	x8, x8, x9
   11e6c:	ldrsw	x9, [sp, #40]
   11e70:	ldrb	w10, [x8, x9]
   11e74:	str	w10, [sp, #12]
   11e78:	b	11e94 <inflateCodesUsed@@ZLIB_1.2.9+0x1a38>
   11e7c:	ldur	x8, [x29, #-8]
   11e80:	mov	x9, #0x14bc                	// #5308
   11e84:	add	x8, x8, x9
   11e88:	ldrsw	x9, [sp, #36]
   11e8c:	ldrb	w10, [x8, x9]
   11e90:	str	w10, [sp, #12]
   11e94:	ldr	w8, [sp, #12]
   11e98:	mov	w2, #0x1                   	// #1
   11e9c:	add	w8, w8, #0x1
   11ea0:	ldur	x9, [x29, #-8]
   11ea4:	mov	x10, #0x14bc                	// #5308
   11ea8:	add	x9, x9, x10
   11eac:	ldrsw	x10, [sp, #28]
   11eb0:	add	x9, x9, x10
   11eb4:	strb	w8, [x9]
   11eb8:	ldr	w8, [sp, #28]
   11ebc:	ldur	x9, [x29, #-24]
   11ec0:	ldrsw	x10, [sp, #36]
   11ec4:	mov	x11, #0x4                   	// #4
   11ec8:	mul	x10, x11, x10
   11ecc:	add	x9, x9, x10
   11ed0:	strh	w8, [x9, #2]
   11ed4:	ldur	x9, [x29, #-24]
   11ed8:	ldrsw	x10, [sp, #40]
   11edc:	mul	x10, x11, x10
   11ee0:	add	x9, x9, x10
   11ee4:	strh	w8, [x9, #2]
   11ee8:	ldr	w8, [sp, #28]
   11eec:	add	w12, w8, #0x1
   11ef0:	str	w12, [sp, #28]
   11ef4:	ldur	x9, [x29, #-8]
   11ef8:	str	w8, [x9, #3012]
   11efc:	ldur	x0, [x29, #-8]
   11f00:	ldur	x1, [x29, #-24]
   11f04:	bl	13050 <inflateCodesUsed@@ZLIB_1.2.9+0x2bf4>
   11f08:	ldur	x8, [x29, #-8]
   11f0c:	ldr	w9, [x8, #5300]
   11f10:	cmp	w9, #0x2
   11f14:	b.ge	11d60 <inflateCodesUsed@@ZLIB_1.2.9+0x1904>  // b.tcont
   11f18:	ldur	x8, [x29, #-8]
   11f1c:	ldr	w9, [x8, #3012]
   11f20:	ldur	x8, [x29, #-8]
   11f24:	add	x8, x8, #0xbc0
   11f28:	ldur	x10, [x29, #-8]
   11f2c:	ldr	w11, [x10, #5304]
   11f30:	subs	w11, w11, #0x1
   11f34:	str	w11, [x10, #5304]
   11f38:	str	w9, [x8, w11, sxtw #2]
   11f3c:	ldur	x0, [x29, #-8]
   11f40:	ldur	x1, [x29, #-16]
   11f44:	bl	1328c <inflateCodesUsed@@ZLIB_1.2.9+0x2e30>
   11f48:	ldur	x0, [x29, #-24]
   11f4c:	ldr	w1, [sp, #32]
   11f50:	ldur	x8, [x29, #-8]
   11f54:	add	x2, x8, #0xba0
   11f58:	bl	136e8 <inflateCodesUsed@@ZLIB_1.2.9+0x328c>
   11f5c:	ldp	x29, x30, [sp, #80]
   11f60:	add	sp, sp, #0x60
   11f64:	ret
   11f68:	sub	sp, sp, #0x20
   11f6c:	stp	x29, x30, [sp, #16]
   11f70:	add	x29, sp, #0x10
   11f74:	mov	w8, #0x12                  	// #18
   11f78:	str	x0, [sp, #8]
   11f7c:	ldr	x0, [sp, #8]
   11f80:	ldr	x9, [sp, #8]
   11f84:	add	x1, x9, #0xd4
   11f88:	ldr	x9, [sp, #8]
   11f8c:	ldr	w2, [x9, #2912]
   11f90:	str	w8, [sp]
   11f94:	bl	13868 <inflateCodesUsed@@ZLIB_1.2.9+0x340c>
   11f98:	ldr	x0, [sp, #8]
   11f9c:	ldr	x9, [sp, #8]
   11fa0:	add	x1, x9, #0x9c8
   11fa4:	ldr	x9, [sp, #8]
   11fa8:	ldr	w2, [x9, #2936]
   11fac:	bl	13868 <inflateCodesUsed@@ZLIB_1.2.9+0x340c>
   11fb0:	ldr	x0, [sp, #8]
   11fb4:	ldr	x9, [sp, #8]
   11fb8:	add	x1, x9, #0xb88
   11fbc:	bl	11b38 <inflateCodesUsed@@ZLIB_1.2.9+0x16dc>
   11fc0:	ldr	w8, [sp]
   11fc4:	str	w8, [sp, #4]
   11fc8:	ldr	w8, [sp, #4]
   11fcc:	cmp	w8, #0x3
   11fd0:	b.lt	12018 <inflateCodesUsed@@ZLIB_1.2.9+0x1bbc>  // b.tstop
   11fd4:	ldr	x8, [sp, #8]
   11fd8:	add	x8, x8, #0xabc
   11fdc:	ldrsw	x9, [sp, #4]
   11fe0:	adrp	x10, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   11fe4:	add	x10, x10, #0x494
   11fe8:	ldrb	w11, [x10, x9]
   11fec:	mov	w9, w11
   11ff0:	mov	x10, #0x4                   	// #4
   11ff4:	mul	x9, x10, x9
   11ff8:	add	x8, x8, x9
   11ffc:	ldrh	w11, [x8, #2]
   12000:	cbz	w11, 12008 <inflateCodesUsed@@ZLIB_1.2.9+0x1bac>
   12004:	b	12018 <inflateCodesUsed@@ZLIB_1.2.9+0x1bbc>
   12008:	ldr	w8, [sp, #4]
   1200c:	subs	w8, w8, #0x1
   12010:	str	w8, [sp, #4]
   12014:	b	11fc8 <inflateCodesUsed@@ZLIB_1.2.9+0x1b6c>
   12018:	ldrsw	x8, [sp, #4]
   1201c:	add	x8, x8, #0x1
   12020:	mov	x9, #0x3                   	// #3
   12024:	mul	x8, x9, x8
   12028:	add	x8, x8, #0x5
   1202c:	add	x8, x8, #0x5
   12030:	add	x8, x8, #0x4
   12034:	ldr	x9, [sp, #8]
   12038:	ldr	x10, [x9, #5912]
   1203c:	add	x8, x10, x8
   12040:	str	x8, [x9, #5912]
   12044:	ldr	w0, [sp, #4]
   12048:	ldp	x29, x30, [sp, #16]
   1204c:	add	sp, sp, #0x20
   12050:	ret
   12054:	sub	sp, sp, #0x60
   12058:	str	x0, [sp, #88]
   1205c:	str	x1, [sp, #80]
   12060:	str	x2, [sp, #72]
   12064:	str	wzr, [sp, #60]
   12068:	ldr	x8, [sp, #88]
   1206c:	ldr	w9, [x8, #5900]
   12070:	cbz	w9, 12828 <inflateCodesUsed@@ZLIB_1.2.9+0x23cc>
   12074:	ldr	x8, [sp, #88]
   12078:	ldr	x8, [x8, #5904]
   1207c:	ldr	w9, [sp, #60]
   12080:	mov	w10, w9
   12084:	ldrh	w9, [x8, x10, lsl #1]
   12088:	str	w9, [sp, #68]
   1208c:	ldr	x8, [sp, #88]
   12090:	ldr	x8, [x8, #5888]
   12094:	ldr	w9, [sp, #60]
   12098:	mov	w10, w9
   1209c:	mov	w9, w10
   120a0:	add	w9, w9, #0x1
   120a4:	str	w9, [sp, #60]
   120a8:	ldrb	w9, [x8, x10]
   120ac:	str	w9, [sp, #64]
   120b0:	ldr	w9, [sp, #68]
   120b4:	cbnz	w9, 1220c <inflateCodesUsed@@ZLIB_1.2.9+0x1db0>
   120b8:	ldr	x8, [sp, #80]
   120bc:	ldrsw	x9, [sp, #64]
   120c0:	mov	x10, #0x4                   	// #4
   120c4:	mul	x9, x10, x9
   120c8:	add	x8, x8, x9
   120cc:	ldrh	w11, [x8, #2]
   120d0:	str	w11, [sp, #48]
   120d4:	ldr	x8, [sp, #88]
   120d8:	ldr	w11, [x8, #5940]
   120dc:	ldr	w12, [sp, #48]
   120e0:	mov	w13, #0x10                  	// #16
   120e4:	subs	w12, w13, w12
   120e8:	cmp	w11, w12
   120ec:	b.le	121c4 <inflateCodesUsed@@ZLIB_1.2.9+0x1d68>
   120f0:	ldr	x8, [sp, #80]
   120f4:	ldrsw	x9, [sp, #64]
   120f8:	mov	x10, #0x4                   	// #4
   120fc:	mul	x9, x10, x9
   12100:	ldrh	w11, [x8, x9]
   12104:	str	w11, [sp, #44]
   12108:	ldr	w11, [sp, #44]
   1210c:	and	w11, w11, #0xffff
   12110:	ldr	x8, [sp, #88]
   12114:	ldr	w12, [x8, #5940]
   12118:	lsl	w11, w11, w12
   1211c:	ldr	x8, [sp, #88]
   12120:	ldrh	w12, [x8, #5936]
   12124:	orr	w11, w12, w11
   12128:	strh	w11, [x8, #5936]
   1212c:	ldr	x8, [sp, #88]
   12130:	ldrh	w11, [x8, #5936]
   12134:	and	w11, w11, #0xff
   12138:	ldr	x8, [sp, #88]
   1213c:	ldr	x8, [x8, #16]
   12140:	ldr	x9, [sp, #88]
   12144:	ldr	x10, [x9, #40]
   12148:	add	x13, x10, #0x1
   1214c:	str	x13, [x9, #40]
   12150:	add	x8, x8, x10
   12154:	strb	w11, [x8]
   12158:	ldr	x8, [sp, #88]
   1215c:	ldrh	w11, [x8, #5936]
   12160:	asr	w11, w11, #8
   12164:	ldr	x8, [sp, #88]
   12168:	ldr	x8, [x8, #16]
   1216c:	ldr	x9, [sp, #88]
   12170:	ldr	x10, [x9, #40]
   12174:	add	x13, x10, #0x1
   12178:	str	x13, [x9, #40]
   1217c:	add	x8, x8, x10
   12180:	strb	w11, [x8]
   12184:	ldr	w11, [sp, #44]
   12188:	and	w11, w11, #0xffff
   1218c:	ldr	x8, [sp, #88]
   12190:	ldr	w12, [x8, #5940]
   12194:	mov	w14, #0x10                  	// #16
   12198:	subs	w12, w14, w12
   1219c:	asr	w11, w11, w12
   121a0:	ldr	x8, [sp, #88]
   121a4:	strh	w11, [x8, #5936]
   121a8:	ldr	w11, [sp, #48]
   121ac:	subs	w11, w11, #0x10
   121b0:	ldr	x8, [sp, #88]
   121b4:	ldr	w12, [x8, #5940]
   121b8:	add	w11, w12, w11
   121bc:	str	w11, [x8, #5940]
   121c0:	b	12208 <inflateCodesUsed@@ZLIB_1.2.9+0x1dac>
   121c4:	ldr	x8, [sp, #80]
   121c8:	ldrsw	x9, [sp, #64]
   121cc:	mov	x10, #0x4                   	// #4
   121d0:	mul	x9, x10, x9
   121d4:	ldrh	w11, [x8, x9]
   121d8:	ldr	x8, [sp, #88]
   121dc:	ldr	w12, [x8, #5940]
   121e0:	lsl	w11, w11, w12
   121e4:	ldr	x8, [sp, #88]
   121e8:	ldrh	w12, [x8, #5936]
   121ec:	orr	w11, w12, w11
   121f0:	strh	w11, [x8, #5936]
   121f4:	ldr	w11, [sp, #48]
   121f8:	ldr	x8, [sp, #88]
   121fc:	ldr	w12, [x8, #5940]
   12200:	add	w11, w12, w11
   12204:	str	w11, [x8, #5940]
   12208:	b	12814 <inflateCodesUsed@@ZLIB_1.2.9+0x23b8>
   1220c:	ldrsw	x8, [sp, #64]
   12210:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   12214:	add	x9, x9, #0xd64
   12218:	ldrb	w10, [x9, x8]
   1221c:	str	w10, [sp, #56]
   12220:	ldr	x8, [sp, #80]
   12224:	ldr	w10, [sp, #56]
   12228:	add	w10, w10, #0x100
   1222c:	add	w10, w10, #0x1
   12230:	mov	w9, w10
   12234:	ubfx	x9, x9, #0, #32
   12238:	mov	x11, #0x4                   	// #4
   1223c:	mul	x9, x11, x9
   12240:	add	x8, x8, x9
   12244:	ldrh	w10, [x8, #2]
   12248:	str	w10, [sp, #40]
   1224c:	ldr	x8, [sp, #88]
   12250:	ldr	w10, [x8, #5940]
   12254:	ldr	w12, [sp, #40]
   12258:	mov	w13, #0x10                  	// #16
   1225c:	subs	w12, w13, w12
   12260:	cmp	w10, w12
   12264:	b.le	1234c <inflateCodesUsed@@ZLIB_1.2.9+0x1ef0>
   12268:	ldr	x8, [sp, #80]
   1226c:	ldr	w9, [sp, #56]
   12270:	add	w9, w9, #0x100
   12274:	add	w9, w9, #0x1
   12278:	mov	w10, w9
   1227c:	ubfx	x10, x10, #0, #32
   12280:	mov	x11, #0x4                   	// #4
   12284:	mul	x10, x11, x10
   12288:	ldrh	w9, [x8, x10]
   1228c:	str	w9, [sp, #36]
   12290:	ldr	w9, [sp, #36]
   12294:	and	w9, w9, #0xffff
   12298:	ldr	x8, [sp, #88]
   1229c:	ldr	w12, [x8, #5940]
   122a0:	lsl	w9, w9, w12
   122a4:	ldr	x8, [sp, #88]
   122a8:	ldrh	w12, [x8, #5936]
   122ac:	orr	w9, w12, w9
   122b0:	strh	w9, [x8, #5936]
   122b4:	ldr	x8, [sp, #88]
   122b8:	ldrh	w9, [x8, #5936]
   122bc:	and	w9, w9, #0xff
   122c0:	ldr	x8, [sp, #88]
   122c4:	ldr	x8, [x8, #16]
   122c8:	ldr	x10, [sp, #88]
   122cc:	ldr	x11, [x10, #40]
   122d0:	add	x13, x11, #0x1
   122d4:	str	x13, [x10, #40]
   122d8:	add	x8, x8, x11
   122dc:	strb	w9, [x8]
   122e0:	ldr	x8, [sp, #88]
   122e4:	ldrh	w9, [x8, #5936]
   122e8:	asr	w9, w9, #8
   122ec:	ldr	x8, [sp, #88]
   122f0:	ldr	x8, [x8, #16]
   122f4:	ldr	x10, [sp, #88]
   122f8:	ldr	x11, [x10, #40]
   122fc:	add	x13, x11, #0x1
   12300:	str	x13, [x10, #40]
   12304:	add	x8, x8, x11
   12308:	strb	w9, [x8]
   1230c:	ldr	w9, [sp, #36]
   12310:	and	w9, w9, #0xffff
   12314:	ldr	x8, [sp, #88]
   12318:	ldr	w12, [x8, #5940]
   1231c:	mov	w14, #0x10                  	// #16
   12320:	subs	w12, w14, w12
   12324:	asr	w9, w9, w12
   12328:	ldr	x8, [sp, #88]
   1232c:	strh	w9, [x8, #5936]
   12330:	ldr	w9, [sp, #40]
   12334:	subs	w9, w9, #0x10
   12338:	ldr	x8, [sp, #88]
   1233c:	ldr	w12, [x8, #5940]
   12340:	add	w9, w12, w9
   12344:	str	w9, [x8, #5940]
   12348:	b	123a0 <inflateCodesUsed@@ZLIB_1.2.9+0x1f44>
   1234c:	ldr	x8, [sp, #80]
   12350:	ldr	w9, [sp, #56]
   12354:	add	w9, w9, #0x100
   12358:	add	w9, w9, #0x1
   1235c:	mov	w10, w9
   12360:	ubfx	x10, x10, #0, #32
   12364:	mov	x11, #0x4                   	// #4
   12368:	mul	x10, x11, x10
   1236c:	ldrh	w9, [x8, x10]
   12370:	ldr	x8, [sp, #88]
   12374:	ldr	w12, [x8, #5940]
   12378:	lsl	w9, w9, w12
   1237c:	ldr	x8, [sp, #88]
   12380:	ldrh	w12, [x8, #5936]
   12384:	orr	w9, w12, w9
   12388:	strh	w9, [x8, #5936]
   1238c:	ldr	w9, [sp, #40]
   12390:	ldr	x8, [sp, #88]
   12394:	ldr	w12, [x8, #5940]
   12398:	add	w9, w12, w9
   1239c:	str	w9, [x8, #5940]
   123a0:	ldr	w8, [sp, #56]
   123a4:	mov	w9, w8
   123a8:	adrp	x10, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   123ac:	add	x10, x10, #0x35c
   123b0:	ldr	w8, [x10, x9, lsl #2]
   123b4:	str	w8, [sp, #52]
   123b8:	ldr	w8, [sp, #52]
   123bc:	cbz	w8, 12500 <inflateCodesUsed@@ZLIB_1.2.9+0x20a4>
   123c0:	ldr	w8, [sp, #56]
   123c4:	mov	w9, w8
   123c8:	adrp	x10, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   123cc:	add	x10, x10, #0x4a8
   123d0:	ldr	w8, [x10, x9, lsl #2]
   123d4:	ldr	w11, [sp, #64]
   123d8:	subs	w8, w11, w8
   123dc:	str	w8, [sp, #64]
   123e0:	ldr	w8, [sp, #52]
   123e4:	str	w8, [sp, #32]
   123e8:	ldr	x9, [sp, #88]
   123ec:	ldr	w8, [x9, #5940]
   123f0:	ldr	w11, [sp, #32]
   123f4:	mov	w12, #0x10                  	// #16
   123f8:	subs	w11, w12, w11
   123fc:	cmp	w8, w11
   12400:	b.le	124c8 <inflateCodesUsed@@ZLIB_1.2.9+0x206c>
   12404:	ldr	w8, [sp, #64]
   12408:	str	w8, [sp, #28]
   1240c:	ldr	w8, [sp, #28]
   12410:	and	w8, w8, #0xffff
   12414:	ldr	x9, [sp, #88]
   12418:	ldr	w10, [x9, #5940]
   1241c:	lsl	w8, w8, w10
   12420:	ldr	x9, [sp, #88]
   12424:	ldrh	w10, [x9, #5936]
   12428:	orr	w8, w10, w8
   1242c:	strh	w8, [x9, #5936]
   12430:	ldr	x9, [sp, #88]
   12434:	ldrh	w8, [x9, #5936]
   12438:	and	w8, w8, #0xff
   1243c:	ldr	x9, [sp, #88]
   12440:	ldr	x9, [x9, #16]
   12444:	ldr	x11, [sp, #88]
   12448:	ldr	x12, [x11, #40]
   1244c:	add	x13, x12, #0x1
   12450:	str	x13, [x11, #40]
   12454:	add	x9, x9, x12
   12458:	strb	w8, [x9]
   1245c:	ldr	x9, [sp, #88]
   12460:	ldrh	w8, [x9, #5936]
   12464:	asr	w8, w8, #8
   12468:	ldr	x9, [sp, #88]
   1246c:	ldr	x9, [x9, #16]
   12470:	ldr	x11, [sp, #88]
   12474:	ldr	x12, [x11, #40]
   12478:	add	x13, x12, #0x1
   1247c:	str	x13, [x11, #40]
   12480:	add	x9, x9, x12
   12484:	strb	w8, [x9]
   12488:	ldr	w8, [sp, #28]
   1248c:	and	w8, w8, #0xffff
   12490:	ldr	x9, [sp, #88]
   12494:	ldr	w10, [x9, #5940]
   12498:	mov	w14, #0x10                  	// #16
   1249c:	subs	w10, w14, w10
   124a0:	asr	w8, w8, w10
   124a4:	ldr	x9, [sp, #88]
   124a8:	strh	w8, [x9, #5936]
   124ac:	ldr	w8, [sp, #32]
   124b0:	subs	w8, w8, #0x10
   124b4:	ldr	x9, [sp, #88]
   124b8:	ldr	w10, [x9, #5940]
   124bc:	add	w8, w10, w8
   124c0:	str	w8, [x9, #5940]
   124c4:	b	12500 <inflateCodesUsed@@ZLIB_1.2.9+0x20a4>
   124c8:	ldr	w8, [sp, #64]
   124cc:	and	w8, w8, #0xffff
   124d0:	ldr	x9, [sp, #88]
   124d4:	ldr	w10, [x9, #5940]
   124d8:	lsl	w8, w8, w10
   124dc:	ldr	x9, [sp, #88]
   124e0:	ldrh	w10, [x9, #5936]
   124e4:	orr	w8, w10, w8
   124e8:	strh	w8, [x9, #5936]
   124ec:	ldr	w8, [sp, #32]
   124f0:	ldr	x9, [sp, #88]
   124f4:	ldr	w10, [x9, #5940]
   124f8:	add	w8, w10, w8
   124fc:	str	w8, [x9, #5940]
   12500:	ldr	w8, [sp, #68]
   12504:	subs	w8, w8, #0x1
   12508:	str	w8, [sp, #68]
   1250c:	ldr	w8, [sp, #68]
   12510:	cmp	w8, #0x100
   12514:	b.cs	12534 <inflateCodesUsed@@ZLIB_1.2.9+0x20d8>  // b.hs, b.nlast
   12518:	ldr	w8, [sp, #68]
   1251c:	mov	w9, w8
   12520:	adrp	x10, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   12524:	add	x10, x10, #0xb64
   12528:	ldrb	w8, [x10, x9]
   1252c:	str	w8, [sp]
   12530:	b	12550 <inflateCodesUsed@@ZLIB_1.2.9+0x20f4>
   12534:	ldr	w8, [sp, #68]
   12538:	lsr	w8, w8, #7
   1253c:	add	w8, w8, #0x100
   12540:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   12544:	add	x9, x9, #0xb64
   12548:	ldrb	w8, [x9, w8, uxtw]
   1254c:	str	w8, [sp]
   12550:	ldr	w8, [sp]
   12554:	str	w8, [sp, #56]
   12558:	ldr	x9, [sp, #72]
   1255c:	ldr	w8, [sp, #56]
   12560:	mov	w10, w8
   12564:	mov	x11, #0x4                   	// #4
   12568:	mul	x10, x11, x10
   1256c:	add	x9, x9, x10
   12570:	ldrh	w8, [x9, #2]
   12574:	str	w8, [sp, #24]
   12578:	ldr	x9, [sp, #88]
   1257c:	ldr	w8, [x9, #5940]
   12580:	ldr	w12, [sp, #24]
   12584:	mov	w13, #0x10                  	// #16
   12588:	subs	w12, w13, w12
   1258c:	cmp	w8, w12
   12590:	b.le	1266c <inflateCodesUsed@@ZLIB_1.2.9+0x2210>
   12594:	ldr	x8, [sp, #72]
   12598:	ldr	w9, [sp, #56]
   1259c:	mov	w10, w9
   125a0:	mov	x11, #0x4                   	// #4
   125a4:	mul	x10, x11, x10
   125a8:	ldrh	w9, [x8, x10]
   125ac:	str	w9, [sp, #20]
   125b0:	ldr	w9, [sp, #20]
   125b4:	and	w9, w9, #0xffff
   125b8:	ldr	x8, [sp, #88]
   125bc:	ldr	w12, [x8, #5940]
   125c0:	lsl	w9, w9, w12
   125c4:	ldr	x8, [sp, #88]
   125c8:	ldrh	w12, [x8, #5936]
   125cc:	orr	w9, w12, w9
   125d0:	strh	w9, [x8, #5936]
   125d4:	ldr	x8, [sp, #88]
   125d8:	ldrh	w9, [x8, #5936]
   125dc:	and	w9, w9, #0xff
   125e0:	ldr	x8, [sp, #88]
   125e4:	ldr	x8, [x8, #16]
   125e8:	ldr	x10, [sp, #88]
   125ec:	ldr	x11, [x10, #40]
   125f0:	add	x13, x11, #0x1
   125f4:	str	x13, [x10, #40]
   125f8:	add	x8, x8, x11
   125fc:	strb	w9, [x8]
   12600:	ldr	x8, [sp, #88]
   12604:	ldrh	w9, [x8, #5936]
   12608:	asr	w9, w9, #8
   1260c:	ldr	x8, [sp, #88]
   12610:	ldr	x8, [x8, #16]
   12614:	ldr	x10, [sp, #88]
   12618:	ldr	x11, [x10, #40]
   1261c:	add	x13, x11, #0x1
   12620:	str	x13, [x10, #40]
   12624:	add	x8, x8, x11
   12628:	strb	w9, [x8]
   1262c:	ldr	w9, [sp, #20]
   12630:	and	w9, w9, #0xffff
   12634:	ldr	x8, [sp, #88]
   12638:	ldr	w12, [x8, #5940]
   1263c:	mov	w14, #0x10                  	// #16
   12640:	subs	w12, w14, w12
   12644:	asr	w9, w9, w12
   12648:	ldr	x8, [sp, #88]
   1264c:	strh	w9, [x8, #5936]
   12650:	ldr	w9, [sp, #24]
   12654:	subs	w9, w9, #0x10
   12658:	ldr	x8, [sp, #88]
   1265c:	ldr	w12, [x8, #5940]
   12660:	add	w9, w12, w9
   12664:	str	w9, [x8, #5940]
   12668:	b	126b4 <inflateCodesUsed@@ZLIB_1.2.9+0x2258>
   1266c:	ldr	x8, [sp, #72]
   12670:	ldr	w9, [sp, #56]
   12674:	mov	w10, w9
   12678:	mov	x11, #0x4                   	// #4
   1267c:	mul	x10, x11, x10
   12680:	ldrh	w9, [x8, x10]
   12684:	ldr	x8, [sp, #88]
   12688:	ldr	w12, [x8, #5940]
   1268c:	lsl	w9, w9, w12
   12690:	ldr	x8, [sp, #88]
   12694:	ldrh	w12, [x8, #5936]
   12698:	orr	w9, w12, w9
   1269c:	strh	w9, [x8, #5936]
   126a0:	ldr	w9, [sp, #24]
   126a4:	ldr	x8, [sp, #88]
   126a8:	ldr	w12, [x8, #5940]
   126ac:	add	w9, w12, w9
   126b0:	str	w9, [x8, #5940]
   126b4:	ldr	w8, [sp, #56]
   126b8:	mov	w9, w8
   126bc:	adrp	x10, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   126c0:	add	x10, x10, #0x3d0
   126c4:	ldr	w8, [x10, x9, lsl #2]
   126c8:	str	w8, [sp, #52]
   126cc:	ldr	w8, [sp, #52]
   126d0:	cbz	w8, 12814 <inflateCodesUsed@@ZLIB_1.2.9+0x23b8>
   126d4:	ldr	w8, [sp, #56]
   126d8:	mov	w9, w8
   126dc:	adrp	x10, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   126e0:	add	x10, x10, #0x51c
   126e4:	ldr	w8, [x10, x9, lsl #2]
   126e8:	ldr	w11, [sp, #68]
   126ec:	subs	w8, w11, w8
   126f0:	str	w8, [sp, #68]
   126f4:	ldr	w8, [sp, #52]
   126f8:	str	w8, [sp, #16]
   126fc:	ldr	x9, [sp, #88]
   12700:	ldr	w8, [x9, #5940]
   12704:	ldr	w11, [sp, #16]
   12708:	mov	w12, #0x10                  	// #16
   1270c:	subs	w11, w12, w11
   12710:	cmp	w8, w11
   12714:	b.le	127dc <inflateCodesUsed@@ZLIB_1.2.9+0x2380>
   12718:	ldr	w8, [sp, #68]
   1271c:	str	w8, [sp, #12]
   12720:	ldr	w8, [sp, #12]
   12724:	and	w8, w8, #0xffff
   12728:	ldr	x9, [sp, #88]
   1272c:	ldr	w10, [x9, #5940]
   12730:	lsl	w8, w8, w10
   12734:	ldr	x9, [sp, #88]
   12738:	ldrh	w10, [x9, #5936]
   1273c:	orr	w8, w10, w8
   12740:	strh	w8, [x9, #5936]
   12744:	ldr	x9, [sp, #88]
   12748:	ldrh	w8, [x9, #5936]
   1274c:	and	w8, w8, #0xff
   12750:	ldr	x9, [sp, #88]
   12754:	ldr	x9, [x9, #16]
   12758:	ldr	x11, [sp, #88]
   1275c:	ldr	x12, [x11, #40]
   12760:	add	x13, x12, #0x1
   12764:	str	x13, [x11, #40]
   12768:	add	x9, x9, x12
   1276c:	strb	w8, [x9]
   12770:	ldr	x9, [sp, #88]
   12774:	ldrh	w8, [x9, #5936]
   12778:	asr	w8, w8, #8
   1277c:	ldr	x9, [sp, #88]
   12780:	ldr	x9, [x9, #16]
   12784:	ldr	x11, [sp, #88]
   12788:	ldr	x12, [x11, #40]
   1278c:	add	x13, x12, #0x1
   12790:	str	x13, [x11, #40]
   12794:	add	x9, x9, x12
   12798:	strb	w8, [x9]
   1279c:	ldr	w8, [sp, #12]
   127a0:	and	w8, w8, #0xffff
   127a4:	ldr	x9, [sp, #88]
   127a8:	ldr	w10, [x9, #5940]
   127ac:	mov	w14, #0x10                  	// #16
   127b0:	subs	w10, w14, w10
   127b4:	asr	w8, w8, w10
   127b8:	ldr	x9, [sp, #88]
   127bc:	strh	w8, [x9, #5936]
   127c0:	ldr	w8, [sp, #16]
   127c4:	subs	w8, w8, #0x10
   127c8:	ldr	x9, [sp, #88]
   127cc:	ldr	w10, [x9, #5940]
   127d0:	add	w8, w10, w8
   127d4:	str	w8, [x9, #5940]
   127d8:	b	12814 <inflateCodesUsed@@ZLIB_1.2.9+0x23b8>
   127dc:	ldr	w8, [sp, #68]
   127e0:	and	w8, w8, #0xffff
   127e4:	ldr	x9, [sp, #88]
   127e8:	ldr	w10, [x9, #5940]
   127ec:	lsl	w8, w8, w10
   127f0:	ldr	x9, [sp, #88]
   127f4:	ldrh	w10, [x9, #5936]
   127f8:	orr	w8, w10, w8
   127fc:	strh	w8, [x9, #5936]
   12800:	ldr	w8, [sp, #16]
   12804:	ldr	x9, [sp, #88]
   12808:	ldr	w10, [x9, #5940]
   1280c:	add	w8, w10, w8
   12810:	str	w8, [x9, #5940]
   12814:	ldr	w8, [sp, #60]
   12818:	ldr	x9, [sp, #88]
   1281c:	ldr	w10, [x9, #5900]
   12820:	cmp	w8, w10
   12824:	b.cc	12074 <inflateCodesUsed@@ZLIB_1.2.9+0x1c18>  // b.lo, b.ul, b.last
   12828:	ldr	x8, [sp, #80]
   1282c:	ldrh	w9, [x8, #1026]
   12830:	str	w9, [sp, #8]
   12834:	ldr	x8, [sp, #88]
   12838:	ldr	w9, [x8, #5940]
   1283c:	ldr	w10, [sp, #8]
   12840:	mov	w11, #0x10                  	// #16
   12844:	subs	w10, w11, w10
   12848:	cmp	w9, w10
   1284c:	b.le	12918 <inflateCodesUsed@@ZLIB_1.2.9+0x24bc>
   12850:	ldr	x8, [sp, #80]
   12854:	ldrh	w9, [x8, #1024]
   12858:	str	w9, [sp, #4]
   1285c:	ldr	w9, [sp, #4]
   12860:	and	w9, w9, #0xffff
   12864:	ldr	x8, [sp, #88]
   12868:	ldr	w10, [x8, #5940]
   1286c:	lsl	w9, w9, w10
   12870:	ldr	x8, [sp, #88]
   12874:	ldrh	w10, [x8, #5936]
   12878:	orr	w9, w10, w9
   1287c:	strh	w9, [x8, #5936]
   12880:	ldr	x8, [sp, #88]
   12884:	ldrh	w9, [x8, #5936]
   12888:	and	w9, w9, #0xff
   1288c:	ldr	x8, [sp, #88]
   12890:	ldr	x8, [x8, #16]
   12894:	ldr	x11, [sp, #88]
   12898:	ldr	x12, [x11, #40]
   1289c:	add	x13, x12, #0x1
   128a0:	str	x13, [x11, #40]
   128a4:	add	x8, x8, x12
   128a8:	strb	w9, [x8]
   128ac:	ldr	x8, [sp, #88]
   128b0:	ldrh	w9, [x8, #5936]
   128b4:	asr	w9, w9, #8
   128b8:	ldr	x8, [sp, #88]
   128bc:	ldr	x8, [x8, #16]
   128c0:	ldr	x11, [sp, #88]
   128c4:	ldr	x12, [x11, #40]
   128c8:	add	x13, x12, #0x1
   128cc:	str	x13, [x11, #40]
   128d0:	add	x8, x8, x12
   128d4:	strb	w9, [x8]
   128d8:	ldr	w9, [sp, #4]
   128dc:	and	w9, w9, #0xffff
   128e0:	ldr	x8, [sp, #88]
   128e4:	ldr	w10, [x8, #5940]
   128e8:	mov	w14, #0x10                  	// #16
   128ec:	subs	w10, w14, w10
   128f0:	asr	w9, w9, w10
   128f4:	ldr	x8, [sp, #88]
   128f8:	strh	w9, [x8, #5936]
   128fc:	ldr	w9, [sp, #8]
   12900:	subs	w9, w9, #0x10
   12904:	ldr	x8, [sp, #88]
   12908:	ldr	w10, [x8, #5940]
   1290c:	add	w9, w10, w9
   12910:	str	w9, [x8, #5940]
   12914:	b	12950 <inflateCodesUsed@@ZLIB_1.2.9+0x24f4>
   12918:	ldr	x8, [sp, #80]
   1291c:	ldrh	w9, [x8, #1024]
   12920:	ldr	x8, [sp, #88]
   12924:	ldr	w10, [x8, #5940]
   12928:	lsl	w9, w9, w10
   1292c:	ldr	x8, [sp, #88]
   12930:	ldrh	w10, [x8, #5936]
   12934:	orr	w9, w10, w9
   12938:	strh	w9, [x8, #5936]
   1293c:	ldr	w9, [sp, #8]
   12940:	ldr	x8, [sp, #88]
   12944:	ldr	w10, [x8, #5940]
   12948:	add	w9, w10, w9
   1294c:	str	w9, [x8, #5940]
   12950:	add	sp, sp, #0x60
   12954:	ret
   12958:	sub	sp, sp, #0x50
   1295c:	stp	x29, x30, [sp, #64]
   12960:	add	x29, sp, #0x40
   12964:	mov	w8, #0x5                   	// #5
   12968:	mov	w9, #0x10                  	// #16
   1296c:	stur	x0, [x29, #-8]
   12970:	stur	w1, [x29, #-12]
   12974:	stur	w2, [x29, #-16]
   12978:	stur	w3, [x29, #-20]
   1297c:	stur	w8, [x29, #-28]
   12980:	ldur	x10, [x29, #-8]
   12984:	ldr	w8, [x10, #5940]
   12988:	ldur	w11, [x29, #-28]
   1298c:	subs	w9, w9, w11
   12990:	cmp	w8, w9
   12994:	b.le	12a60 <inflateCodesUsed@@ZLIB_1.2.9+0x2604>
   12998:	ldur	w8, [x29, #-12]
   1299c:	subs	w8, w8, #0x101
   129a0:	str	w8, [sp, #32]
   129a4:	ldr	w8, [sp, #32]
   129a8:	and	w8, w8, #0xffff
   129ac:	ldur	x9, [x29, #-8]
   129b0:	ldr	w10, [x9, #5940]
   129b4:	lsl	w8, w8, w10
   129b8:	ldur	x9, [x29, #-8]
   129bc:	ldrh	w10, [x9, #5936]
   129c0:	orr	w8, w10, w8
   129c4:	strh	w8, [x9, #5936]
   129c8:	ldur	x9, [x29, #-8]
   129cc:	ldrh	w8, [x9, #5936]
   129d0:	and	w8, w8, #0xff
   129d4:	ldur	x9, [x29, #-8]
   129d8:	ldr	x9, [x9, #16]
   129dc:	ldur	x11, [x29, #-8]
   129e0:	ldr	x12, [x11, #40]
   129e4:	add	x13, x12, #0x1
   129e8:	str	x13, [x11, #40]
   129ec:	add	x9, x9, x12
   129f0:	strb	w8, [x9]
   129f4:	ldur	x9, [x29, #-8]
   129f8:	ldrh	w8, [x9, #5936]
   129fc:	asr	w8, w8, #8
   12a00:	ldur	x9, [x29, #-8]
   12a04:	ldr	x9, [x9, #16]
   12a08:	ldur	x11, [x29, #-8]
   12a0c:	ldr	x12, [x11, #40]
   12a10:	add	x13, x12, #0x1
   12a14:	str	x13, [x11, #40]
   12a18:	add	x9, x9, x12
   12a1c:	strb	w8, [x9]
   12a20:	ldr	w8, [sp, #32]
   12a24:	and	w8, w8, #0xffff
   12a28:	ldur	x9, [x29, #-8]
   12a2c:	ldr	w10, [x9, #5940]
   12a30:	mov	w14, #0x10                  	// #16
   12a34:	subs	w10, w14, w10
   12a38:	asr	w8, w8, w10
   12a3c:	ldur	x9, [x29, #-8]
   12a40:	strh	w8, [x9, #5936]
   12a44:	ldur	w8, [x29, #-28]
   12a48:	subs	w8, w8, #0x10
   12a4c:	ldur	x9, [x29, #-8]
   12a50:	ldr	w10, [x9, #5940]
   12a54:	add	w8, w10, w8
   12a58:	str	w8, [x9, #5940]
   12a5c:	b	12a9c <inflateCodesUsed@@ZLIB_1.2.9+0x2640>
   12a60:	ldur	w8, [x29, #-12]
   12a64:	subs	w8, w8, #0x101
   12a68:	and	w8, w8, #0xffff
   12a6c:	ldur	x9, [x29, #-8]
   12a70:	ldr	w10, [x9, #5940]
   12a74:	lsl	w8, w8, w10
   12a78:	ldur	x9, [x29, #-8]
   12a7c:	ldrh	w10, [x9, #5936]
   12a80:	orr	w8, w10, w8
   12a84:	strh	w8, [x9, #5936]
   12a88:	ldur	w8, [x29, #-28]
   12a8c:	ldur	x9, [x29, #-8]
   12a90:	ldr	w10, [x9, #5940]
   12a94:	add	w8, w10, w8
   12a98:	str	w8, [x9, #5940]
   12a9c:	mov	w8, #0x5                   	// #5
   12aa0:	str	w8, [sp, #28]
   12aa4:	ldur	x9, [x29, #-8]
   12aa8:	ldr	w8, [x9, #5940]
   12aac:	ldr	w10, [sp, #28]
   12ab0:	mov	w11, #0x10                  	// #16
   12ab4:	subs	w10, w11, w10
   12ab8:	cmp	w8, w10
   12abc:	b.le	12b88 <inflateCodesUsed@@ZLIB_1.2.9+0x272c>
   12ac0:	ldur	w8, [x29, #-16]
   12ac4:	subs	w8, w8, #0x1
   12ac8:	str	w8, [sp, #24]
   12acc:	ldr	w8, [sp, #24]
   12ad0:	and	w8, w8, #0xffff
   12ad4:	ldur	x9, [x29, #-8]
   12ad8:	ldr	w10, [x9, #5940]
   12adc:	lsl	w8, w8, w10
   12ae0:	ldur	x9, [x29, #-8]
   12ae4:	ldrh	w10, [x9, #5936]
   12ae8:	orr	w8, w10, w8
   12aec:	strh	w8, [x9, #5936]
   12af0:	ldur	x9, [x29, #-8]
   12af4:	ldrh	w8, [x9, #5936]
   12af8:	and	w8, w8, #0xff
   12afc:	ldur	x9, [x29, #-8]
   12b00:	ldr	x9, [x9, #16]
   12b04:	ldur	x11, [x29, #-8]
   12b08:	ldr	x12, [x11, #40]
   12b0c:	add	x13, x12, #0x1
   12b10:	str	x13, [x11, #40]
   12b14:	add	x9, x9, x12
   12b18:	strb	w8, [x9]
   12b1c:	ldur	x9, [x29, #-8]
   12b20:	ldrh	w8, [x9, #5936]
   12b24:	asr	w8, w8, #8
   12b28:	ldur	x9, [x29, #-8]
   12b2c:	ldr	x9, [x9, #16]
   12b30:	ldur	x11, [x29, #-8]
   12b34:	ldr	x12, [x11, #40]
   12b38:	add	x13, x12, #0x1
   12b3c:	str	x13, [x11, #40]
   12b40:	add	x9, x9, x12
   12b44:	strb	w8, [x9]
   12b48:	ldr	w8, [sp, #24]
   12b4c:	and	w8, w8, #0xffff
   12b50:	ldur	x9, [x29, #-8]
   12b54:	ldr	w10, [x9, #5940]
   12b58:	mov	w14, #0x10                  	// #16
   12b5c:	subs	w10, w14, w10
   12b60:	asr	w8, w8, w10
   12b64:	ldur	x9, [x29, #-8]
   12b68:	strh	w8, [x9, #5936]
   12b6c:	ldr	w8, [sp, #28]
   12b70:	subs	w8, w8, #0x10
   12b74:	ldur	x9, [x29, #-8]
   12b78:	ldr	w10, [x9, #5940]
   12b7c:	add	w8, w10, w8
   12b80:	str	w8, [x9, #5940]
   12b84:	b	12bc4 <inflateCodesUsed@@ZLIB_1.2.9+0x2768>
   12b88:	ldur	w8, [x29, #-16]
   12b8c:	subs	w8, w8, #0x1
   12b90:	and	w8, w8, #0xffff
   12b94:	ldur	x9, [x29, #-8]
   12b98:	ldr	w10, [x9, #5940]
   12b9c:	lsl	w8, w8, w10
   12ba0:	ldur	x9, [x29, #-8]
   12ba4:	ldrh	w10, [x9, #5936]
   12ba8:	orr	w8, w10, w8
   12bac:	strh	w8, [x9, #5936]
   12bb0:	ldr	w8, [sp, #28]
   12bb4:	ldur	x9, [x29, #-8]
   12bb8:	ldr	w10, [x9, #5940]
   12bbc:	add	w8, w10, w8
   12bc0:	str	w8, [x9, #5940]
   12bc4:	mov	w8, #0x4                   	// #4
   12bc8:	str	w8, [sp, #20]
   12bcc:	ldur	x9, [x29, #-8]
   12bd0:	ldr	w8, [x9, #5940]
   12bd4:	ldr	w10, [sp, #20]
   12bd8:	mov	w11, #0x10                  	// #16
   12bdc:	subs	w10, w11, w10
   12be0:	cmp	w8, w10
   12be4:	b.le	12cb0 <inflateCodesUsed@@ZLIB_1.2.9+0x2854>
   12be8:	ldur	w8, [x29, #-20]
   12bec:	subs	w8, w8, #0x4
   12bf0:	str	w8, [sp, #16]
   12bf4:	ldr	w8, [sp, #16]
   12bf8:	and	w8, w8, #0xffff
   12bfc:	ldur	x9, [x29, #-8]
   12c00:	ldr	w10, [x9, #5940]
   12c04:	lsl	w8, w8, w10
   12c08:	ldur	x9, [x29, #-8]
   12c0c:	ldrh	w10, [x9, #5936]
   12c10:	orr	w8, w10, w8
   12c14:	strh	w8, [x9, #5936]
   12c18:	ldur	x9, [x29, #-8]
   12c1c:	ldrh	w8, [x9, #5936]
   12c20:	and	w8, w8, #0xff
   12c24:	ldur	x9, [x29, #-8]
   12c28:	ldr	x9, [x9, #16]
   12c2c:	ldur	x11, [x29, #-8]
   12c30:	ldr	x12, [x11, #40]
   12c34:	add	x13, x12, #0x1
   12c38:	str	x13, [x11, #40]
   12c3c:	add	x9, x9, x12
   12c40:	strb	w8, [x9]
   12c44:	ldur	x9, [x29, #-8]
   12c48:	ldrh	w8, [x9, #5936]
   12c4c:	asr	w8, w8, #8
   12c50:	ldur	x9, [x29, #-8]
   12c54:	ldr	x9, [x9, #16]
   12c58:	ldur	x11, [x29, #-8]
   12c5c:	ldr	x12, [x11, #40]
   12c60:	add	x13, x12, #0x1
   12c64:	str	x13, [x11, #40]
   12c68:	add	x9, x9, x12
   12c6c:	strb	w8, [x9]
   12c70:	ldr	w8, [sp, #16]
   12c74:	and	w8, w8, #0xffff
   12c78:	ldur	x9, [x29, #-8]
   12c7c:	ldr	w10, [x9, #5940]
   12c80:	mov	w14, #0x10                  	// #16
   12c84:	subs	w10, w14, w10
   12c88:	asr	w8, w8, w10
   12c8c:	ldur	x9, [x29, #-8]
   12c90:	strh	w8, [x9, #5936]
   12c94:	ldr	w8, [sp, #20]
   12c98:	subs	w8, w8, #0x10
   12c9c:	ldur	x9, [x29, #-8]
   12ca0:	ldr	w10, [x9, #5940]
   12ca4:	add	w8, w10, w8
   12ca8:	str	w8, [x9, #5940]
   12cac:	b	12cec <inflateCodesUsed@@ZLIB_1.2.9+0x2890>
   12cb0:	ldur	w8, [x29, #-20]
   12cb4:	subs	w8, w8, #0x4
   12cb8:	and	w8, w8, #0xffff
   12cbc:	ldur	x9, [x29, #-8]
   12cc0:	ldr	w10, [x9, #5940]
   12cc4:	lsl	w8, w8, w10
   12cc8:	ldur	x9, [x29, #-8]
   12ccc:	ldrh	w10, [x9, #5936]
   12cd0:	orr	w8, w10, w8
   12cd4:	strh	w8, [x9, #5936]
   12cd8:	ldr	w8, [sp, #20]
   12cdc:	ldur	x9, [x29, #-8]
   12ce0:	ldr	w10, [x9, #5940]
   12ce4:	add	w8, w10, w8
   12ce8:	str	w8, [x9, #5940]
   12cec:	stur	wzr, [x29, #-24]
   12cf0:	ldur	w8, [x29, #-24]
   12cf4:	ldur	w9, [x29, #-20]
   12cf8:	cmp	w8, w9
   12cfc:	b.ge	12e7c <inflateCodesUsed@@ZLIB_1.2.9+0x2a20>  // b.tcont
   12d00:	mov	w8, #0x3                   	// #3
   12d04:	str	w8, [sp, #12]
   12d08:	ldur	x9, [x29, #-8]
   12d0c:	ldr	w8, [x9, #5940]
   12d10:	ldr	w10, [sp, #12]
   12d14:	mov	w11, #0x10                  	// #16
   12d18:	subs	w10, w11, w10
   12d1c:	cmp	w8, w10
   12d20:	b.le	12e10 <inflateCodesUsed@@ZLIB_1.2.9+0x29b4>
   12d24:	ldur	x8, [x29, #-8]
   12d28:	add	x8, x8, #0xabc
   12d2c:	ldursw	x9, [x29, #-24]
   12d30:	adrp	x10, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   12d34:	add	x10, x10, #0x494
   12d38:	ldrb	w11, [x10, x9]
   12d3c:	mov	w9, w11
   12d40:	mov	x10, #0x4                   	// #4
   12d44:	mul	x9, x10, x9
   12d48:	add	x8, x8, x9
   12d4c:	ldrh	w11, [x8, #2]
   12d50:	str	w11, [sp, #8]
   12d54:	ldr	w11, [sp, #8]
   12d58:	and	w11, w11, #0xffff
   12d5c:	ldur	x8, [x29, #-8]
   12d60:	ldr	w12, [x8, #5940]
   12d64:	lsl	w11, w11, w12
   12d68:	ldur	x8, [x29, #-8]
   12d6c:	ldrh	w12, [x8, #5936]
   12d70:	orr	w11, w12, w11
   12d74:	strh	w11, [x8, #5936]
   12d78:	ldur	x8, [x29, #-8]
   12d7c:	ldrh	w11, [x8, #5936]
   12d80:	and	w11, w11, #0xff
   12d84:	ldur	x8, [x29, #-8]
   12d88:	ldr	x8, [x8, #16]
   12d8c:	ldur	x9, [x29, #-8]
   12d90:	ldr	x10, [x9, #40]
   12d94:	add	x13, x10, #0x1
   12d98:	str	x13, [x9, #40]
   12d9c:	add	x8, x8, x10
   12da0:	strb	w11, [x8]
   12da4:	ldur	x8, [x29, #-8]
   12da8:	ldrh	w11, [x8, #5936]
   12dac:	asr	w11, w11, #8
   12db0:	ldur	x8, [x29, #-8]
   12db4:	ldr	x8, [x8, #16]
   12db8:	ldur	x9, [x29, #-8]
   12dbc:	ldr	x10, [x9, #40]
   12dc0:	add	x13, x10, #0x1
   12dc4:	str	x13, [x9, #40]
   12dc8:	add	x8, x8, x10
   12dcc:	strb	w11, [x8]
   12dd0:	ldr	w11, [sp, #8]
   12dd4:	and	w11, w11, #0xffff
   12dd8:	ldur	x8, [x29, #-8]
   12ddc:	ldr	w12, [x8, #5940]
   12de0:	mov	w14, #0x10                  	// #16
   12de4:	subs	w12, w14, w12
   12de8:	asr	w11, w11, w12
   12dec:	ldur	x8, [x29, #-8]
   12df0:	strh	w11, [x8, #5936]
   12df4:	ldr	w11, [sp, #12]
   12df8:	subs	w11, w11, #0x10
   12dfc:	ldur	x8, [x29, #-8]
   12e00:	ldr	w12, [x8, #5940]
   12e04:	add	w11, w12, w11
   12e08:	str	w11, [x8, #5940]
   12e0c:	b	12e6c <inflateCodesUsed@@ZLIB_1.2.9+0x2a10>
   12e10:	ldur	x8, [x29, #-8]
   12e14:	add	x8, x8, #0xabc
   12e18:	ldursw	x9, [x29, #-24]
   12e1c:	adrp	x10, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   12e20:	add	x10, x10, #0x494
   12e24:	ldrb	w11, [x10, x9]
   12e28:	mov	w9, w11
   12e2c:	mov	x10, #0x4                   	// #4
   12e30:	mul	x9, x10, x9
   12e34:	add	x8, x8, x9
   12e38:	ldrh	w11, [x8, #2]
   12e3c:	ldur	x8, [x29, #-8]
   12e40:	ldr	w12, [x8, #5940]
   12e44:	lsl	w11, w11, w12
   12e48:	ldur	x8, [x29, #-8]
   12e4c:	ldrh	w12, [x8, #5936]
   12e50:	orr	w11, w12, w11
   12e54:	strh	w11, [x8, #5936]
   12e58:	ldr	w11, [sp, #12]
   12e5c:	ldur	x8, [x29, #-8]
   12e60:	ldr	w12, [x8, #5940]
   12e64:	add	w11, w12, w11
   12e68:	str	w11, [x8, #5940]
   12e6c:	ldur	w8, [x29, #-24]
   12e70:	add	w8, w8, #0x1
   12e74:	stur	w8, [x29, #-24]
   12e78:	b	12cf0 <inflateCodesUsed@@ZLIB_1.2.9+0x2894>
   12e7c:	ldur	x0, [x29, #-8]
   12e80:	ldur	x8, [x29, #-8]
   12e84:	add	x1, x8, #0xd4
   12e88:	ldur	w9, [x29, #-12]
   12e8c:	subs	w2, w9, #0x1
   12e90:	bl	13a80 <inflateCodesUsed@@ZLIB_1.2.9+0x3624>
   12e94:	ldur	x0, [x29, #-8]
   12e98:	ldur	x8, [x29, #-8]
   12e9c:	add	x1, x8, #0x9c8
   12ea0:	ldur	w9, [x29, #-16]
   12ea4:	subs	w2, w9, #0x1
   12ea8:	bl	13a80 <inflateCodesUsed@@ZLIB_1.2.9+0x3624>
   12eac:	ldp	x29, x30, [sp, #64]
   12eb0:	add	sp, sp, #0x50
   12eb4:	ret
   12eb8:	sub	sp, sp, #0x20
   12ebc:	str	x0, [sp, #24]
   12ec0:	str	w1, [sp, #20]
   12ec4:	str	w2, [sp, #16]
   12ec8:	ldr	w8, [sp, #20]
   12ecc:	ldr	x9, [sp, #24]
   12ed0:	ldr	x9, [x9, #5904]
   12ed4:	ldr	x10, [sp, #24]
   12ed8:	ldr	w11, [x10, #5900]
   12edc:	mov	w10, w11
   12ee0:	mov	x12, #0x2                   	// #2
   12ee4:	mul	x10, x12, x10
   12ee8:	add	x9, x9, x10
   12eec:	strh	w8, [x9]
   12ef0:	ldr	w8, [sp, #16]
   12ef4:	ldr	x9, [sp, #24]
   12ef8:	ldr	x9, [x9, #5888]
   12efc:	ldr	x10, [sp, #24]
   12f00:	ldr	w11, [x10, #5900]
   12f04:	mov	w12, w11
   12f08:	mov	w11, w12
   12f0c:	add	w11, w11, #0x1
   12f10:	str	w11, [x10, #5900]
   12f14:	add	x9, x9, x12
   12f18:	strb	w8, [x9]
   12f1c:	ldr	w8, [sp, #20]
   12f20:	cbnz	w8, 12f50 <inflateCodesUsed@@ZLIB_1.2.9+0x2af4>
   12f24:	ldr	x8, [sp, #24]
   12f28:	add	x8, x8, #0xd4
   12f2c:	ldr	w9, [sp, #16]
   12f30:	mov	w10, w9
   12f34:	mov	x11, #0x4                   	// #4
   12f38:	mul	x10, x11, x10
   12f3c:	add	x8, x8, x10
   12f40:	ldrh	w9, [x8]
   12f44:	add	w9, w9, #0x1
   12f48:	strh	w9, [x8]
   12f4c:	b	13028 <inflateCodesUsed@@ZLIB_1.2.9+0x2bcc>
   12f50:	ldr	x8, [sp, #24]
   12f54:	ldr	w9, [x8, #5928]
   12f58:	add	w9, w9, #0x1
   12f5c:	str	w9, [x8, #5928]
   12f60:	ldr	w9, [sp, #20]
   12f64:	subs	w9, w9, #0x1
   12f68:	str	w9, [sp, #20]
   12f6c:	ldr	x8, [sp, #24]
   12f70:	add	x8, x8, #0xd4
   12f74:	ldr	w9, [sp, #16]
   12f78:	mov	w10, w9
   12f7c:	adrp	x11, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   12f80:	add	x11, x11, #0xd64
   12f84:	ldrb	w9, [x11, x10]
   12f88:	add	w9, w9, #0x100
   12f8c:	add	w9, w9, #0x1
   12f90:	mov	w0, w9
   12f94:	sxtw	x10, w0
   12f98:	mov	x11, #0x4                   	// #4
   12f9c:	mul	x10, x11, x10
   12fa0:	add	x8, x8, x10
   12fa4:	ldrh	w9, [x8]
   12fa8:	add	w9, w9, #0x1
   12fac:	strh	w9, [x8]
   12fb0:	ldr	x8, [sp, #24]
   12fb4:	add	x8, x8, #0x9c8
   12fb8:	ldr	w9, [sp, #20]
   12fbc:	cmp	w9, #0x100
   12fc0:	str	x8, [sp, #8]
   12fc4:	b.cs	12fe4 <inflateCodesUsed@@ZLIB_1.2.9+0x2b88>  // b.hs, b.nlast
   12fc8:	ldr	w8, [sp, #20]
   12fcc:	mov	w9, w8
   12fd0:	adrp	x10, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   12fd4:	add	x10, x10, #0xb64
   12fd8:	ldrb	w8, [x10, x9]
   12fdc:	str	w8, [sp, #4]
   12fe0:	b	13000 <inflateCodesUsed@@ZLIB_1.2.9+0x2ba4>
   12fe4:	ldr	w8, [sp, #20]
   12fe8:	lsr	w8, w8, #7
   12fec:	add	w8, w8, #0x100
   12ff0:	adrp	x9, 1b000 <gzclose_w@@ZLIB_1.2.3.5+0x2b88>
   12ff4:	add	x9, x9, #0xb64
   12ff8:	ldrb	w8, [x9, w8, uxtw]
   12ffc:	str	w8, [sp, #4]
   13000:	ldr	w8, [sp, #4]
   13004:	mov	w0, w8
   13008:	sxtw	x9, w0
   1300c:	mov	x10, #0x4                   	// #4
   13010:	mul	x9, x10, x9
   13014:	ldr	x10, [sp, #8]
   13018:	add	x9, x10, x9
   1301c:	ldrh	w8, [x9]
   13020:	add	w8, w8, #0x1
   13024:	strh	w8, [x9]
   13028:	ldr	x8, [sp, #24]
   1302c:	ldr	w9, [x8, #5900]
   13030:	ldr	x8, [sp, #24]
   13034:	ldr	w10, [x8, #5896]
   13038:	subs	w10, w10, #0x1
   1303c:	cmp	w9, w10
   13040:	cset	w9, eq  // eq = none
   13044:	and	w0, w9, #0x1
   13048:	add	sp, sp, #0x20
   1304c:	ret
   13050:	sub	sp, sp, #0x20
   13054:	str	x0, [sp, #24]
   13058:	str	x1, [sp, #16]
   1305c:	str	w2, [sp, #12]
   13060:	ldr	x8, [sp, #24]
   13064:	add	x8, x8, #0xbc0
   13068:	ldrsw	x9, [sp, #12]
   1306c:	ldr	w10, [x8, x9, lsl #2]
   13070:	str	w10, [sp, #8]
   13074:	ldr	w10, [sp, #12]
   13078:	lsl	w10, w10, #1
   1307c:	str	w10, [sp, #4]
   13080:	ldr	w8, [sp, #4]
   13084:	ldr	x9, [sp, #24]
   13088:	ldr	w10, [x9, #5300]
   1308c:	cmp	w8, w10
   13090:	b.gt	13270 <inflateCodesUsed@@ZLIB_1.2.9+0x2e14>
   13094:	ldr	w8, [sp, #4]
   13098:	ldr	x9, [sp, #24]
   1309c:	ldr	w10, [x9, #5300]
   130a0:	cmp	w8, w10
   130a4:	b.ge	1318c <inflateCodesUsed@@ZLIB_1.2.9+0x2d30>  // b.tcont
   130a8:	ldr	x8, [sp, #16]
   130ac:	ldr	x9, [sp, #24]
   130b0:	add	x9, x9, #0xbc0
   130b4:	ldr	w10, [sp, #4]
   130b8:	add	w10, w10, #0x1
   130bc:	mov	x11, #0x4                   	// #4
   130c0:	ldrsw	x9, [x9, w10, sxtw #2]
   130c4:	mul	x9, x11, x9
   130c8:	ldrh	w10, [x8, x9]
   130cc:	ldr	x8, [sp, #16]
   130d0:	ldr	x9, [sp, #24]
   130d4:	add	x9, x9, #0xbc0
   130d8:	ldrsw	x12, [sp, #4]
   130dc:	ldrsw	x9, [x9, x12, lsl #2]
   130e0:	mul	x9, x11, x9
   130e4:	ldrh	w13, [x8, x9]
   130e8:	cmp	w10, w13
   130ec:	b.lt	13180 <inflateCodesUsed@@ZLIB_1.2.9+0x2d24>  // b.tstop
   130f0:	ldr	x8, [sp, #16]
   130f4:	ldr	x9, [sp, #24]
   130f8:	add	x9, x9, #0xbc0
   130fc:	ldr	w10, [sp, #4]
   13100:	add	w10, w10, #0x1
   13104:	mov	x11, #0x4                   	// #4
   13108:	ldrsw	x9, [x9, w10, sxtw #2]
   1310c:	mul	x9, x11, x9
   13110:	ldrh	w10, [x8, x9]
   13114:	ldr	x8, [sp, #16]
   13118:	ldr	x9, [sp, #24]
   1311c:	add	x9, x9, #0xbc0
   13120:	ldrsw	x12, [sp, #4]
   13124:	ldrsw	x9, [x9, x12, lsl #2]
   13128:	mul	x9, x11, x9
   1312c:	ldrh	w13, [x8, x9]
   13130:	cmp	w10, w13
   13134:	b.ne	1318c <inflateCodesUsed@@ZLIB_1.2.9+0x2d30>  // b.any
   13138:	ldr	x8, [sp, #24]
   1313c:	mov	x9, #0x14bc                	// #5308
   13140:	add	x8, x8, x9
   13144:	ldr	x10, [sp, #24]
   13148:	add	x10, x10, #0xbc0
   1314c:	ldr	w11, [sp, #4]
   13150:	add	w11, w11, #0x1
   13154:	ldrsw	x10, [x10, w11, sxtw #2]
   13158:	ldrb	w11, [x8, x10]
   1315c:	ldr	x8, [sp, #24]
   13160:	add	x8, x8, x9
   13164:	ldr	x9, [sp, #24]
   13168:	add	x9, x9, #0xbc0
   1316c:	ldrsw	x10, [sp, #4]
   13170:	ldrsw	x9, [x9, x10, lsl #2]
   13174:	ldrb	w12, [x8, x9]
   13178:	cmp	w11, w12
   1317c:	b.gt	1318c <inflateCodesUsed@@ZLIB_1.2.9+0x2d30>
   13180:	ldr	w8, [sp, #4]
   13184:	add	w8, w8, #0x1
   13188:	str	w8, [sp, #4]
   1318c:	ldr	x8, [sp, #16]
   13190:	ldrsw	x9, [sp, #8]
   13194:	mov	x10, #0x4                   	// #4
   13198:	mul	x9, x10, x9
   1319c:	ldrh	w11, [x8, x9]
   131a0:	ldr	x8, [sp, #16]
   131a4:	ldr	x9, [sp, #24]
   131a8:	add	x9, x9, #0xbc0
   131ac:	ldrsw	x12, [sp, #4]
   131b0:	ldrsw	x9, [x9, x12, lsl #2]
   131b4:	mul	x9, x10, x9
   131b8:	ldrh	w13, [x8, x9]
   131bc:	cmp	w11, w13
   131c0:	b.lt	13234 <inflateCodesUsed@@ZLIB_1.2.9+0x2dd8>  // b.tstop
   131c4:	ldr	x8, [sp, #16]
   131c8:	ldrsw	x9, [sp, #8]
   131cc:	mov	x10, #0x4                   	// #4
   131d0:	mul	x9, x10, x9
   131d4:	ldrh	w11, [x8, x9]
   131d8:	ldr	x8, [sp, #16]
   131dc:	ldr	x9, [sp, #24]
   131e0:	add	x9, x9, #0xbc0
   131e4:	ldrsw	x12, [sp, #4]
   131e8:	ldrsw	x9, [x9, x12, lsl #2]
   131ec:	mul	x9, x10, x9
   131f0:	ldrh	w13, [x8, x9]
   131f4:	cmp	w11, w13
   131f8:	b.ne	13238 <inflateCodesUsed@@ZLIB_1.2.9+0x2ddc>  // b.any
   131fc:	ldr	x8, [sp, #24]
   13200:	mov	x9, #0x14bc                	// #5308
   13204:	add	x8, x8, x9
   13208:	ldrsw	x10, [sp, #8]
   1320c:	ldrb	w11, [x8, x10]
   13210:	ldr	x8, [sp, #24]
   13214:	add	x8, x8, x9
   13218:	ldr	x9, [sp, #24]
   1321c:	add	x9, x9, #0xbc0
   13220:	ldrsw	x10, [sp, #4]
   13224:	ldrsw	x9, [x9, x10, lsl #2]
   13228:	ldrb	w12, [x8, x9]
   1322c:	cmp	w11, w12
   13230:	b.gt	13238 <inflateCodesUsed@@ZLIB_1.2.9+0x2ddc>
   13234:	b	13270 <inflateCodesUsed@@ZLIB_1.2.9+0x2e14>
   13238:	ldr	x8, [sp, #24]
   1323c:	add	x8, x8, #0xbc0
   13240:	ldrsw	x9, [sp, #4]
   13244:	ldr	w10, [x8, x9, lsl #2]
   13248:	ldr	x8, [sp, #24]
   1324c:	add	x8, x8, #0xbc0
   13250:	ldrsw	x9, [sp, #12]
   13254:	str	w10, [x8, x9, lsl #2]
   13258:	ldr	w10, [sp, #4]
   1325c:	str	w10, [sp, #12]
   13260:	ldr	w10, [sp, #4]
   13264:	lsl	w10, w10, #1
   13268:	str	w10, [sp, #4]
   1326c:	b	13080 <inflateCodesUsed@@ZLIB_1.2.9+0x2c24>
   13270:	ldr	w8, [sp, #8]
   13274:	ldr	x9, [sp, #24]
   13278:	add	x9, x9, #0xbc0
   1327c:	ldrsw	x10, [sp, #12]
   13280:	str	w8, [x9, x10, lsl #2]
   13284:	add	sp, sp, #0x20
   13288:	ret
   1328c:	sub	sp, sp, #0x60
   13290:	str	x0, [sp, #88]
   13294:	str	x1, [sp, #80]
   13298:	ldr	x8, [sp, #80]
   1329c:	ldr	x8, [x8]
   132a0:	str	x8, [sp, #72]
   132a4:	ldr	x8, [sp, #80]
   132a8:	ldr	w9, [x8, #8]
   132ac:	str	w9, [sp, #68]
   132b0:	ldr	x8, [sp, #80]
   132b4:	ldr	x8, [x8, #16]
   132b8:	ldr	x8, [x8]
   132bc:	str	x8, [sp, #56]
   132c0:	ldr	x8, [sp, #80]
   132c4:	ldr	x8, [x8, #16]
   132c8:	ldr	x8, [x8, #8]
   132cc:	str	x8, [sp, #48]
   132d0:	ldr	x8, [sp, #80]
   132d4:	ldr	x8, [x8, #16]
   132d8:	ldr	w9, [x8, #16]
   132dc:	str	w9, [sp, #44]
   132e0:	ldr	x8, [sp, #80]
   132e4:	ldr	x8, [x8, #16]
   132e8:	ldr	w9, [x8, #24]
   132ec:	str	w9, [sp, #40]
   132f0:	str	wzr, [sp, #12]
   132f4:	str	wzr, [sp, #24]
   132f8:	ldr	w8, [sp, #24]
   132fc:	cmp	w8, #0xf
   13300:	b.gt	13334 <inflateCodesUsed@@ZLIB_1.2.9+0x2ed8>
   13304:	ldr	x8, [sp, #88]
   13308:	add	x8, x8, #0xba0
   1330c:	ldrsw	x9, [sp, #24]
   13310:	mov	x10, #0x2                   	// #2
   13314:	mul	x9, x10, x9
   13318:	add	x8, x8, x9
   1331c:	mov	w11, #0x0                   	// #0
   13320:	strh	w11, [x8]
   13324:	ldr	w8, [sp, #24]
   13328:	add	w8, w8, #0x1
   1332c:	str	w8, [sp, #24]
   13330:	b	132f8 <inflateCodesUsed@@ZLIB_1.2.9+0x2e9c>
   13334:	ldr	x8, [sp, #72]
   13338:	ldr	x9, [sp, #88]
   1333c:	add	x9, x9, #0xbc0
   13340:	ldr	x10, [sp, #88]
   13344:	ldrsw	x10, [x10, #5304]
   13348:	mov	x11, #0x4                   	// #4
   1334c:	ldrsw	x9, [x9, x10, lsl #2]
   13350:	mul	x9, x11, x9
   13354:	add	x8, x8, x9
   13358:	mov	w12, #0x0                   	// #0
   1335c:	strh	w12, [x8, #2]
   13360:	ldr	x8, [sp, #88]
   13364:	ldr	w12, [x8, #5304]
   13368:	add	w12, w12, #0x1
   1336c:	str	w12, [sp, #36]
   13370:	ldr	w8, [sp, #36]
   13374:	cmp	w8, #0x23d
   13378:	b.ge	13510 <inflateCodesUsed@@ZLIB_1.2.9+0x30b4>  // b.tcont
   1337c:	ldr	x8, [sp, #88]
   13380:	add	x8, x8, #0xbc0
   13384:	ldrsw	x9, [sp, #36]
   13388:	mov	x10, #0x4                   	// #4
   1338c:	ldr	w11, [x8, x9, lsl #2]
   13390:	str	w11, [sp, #32]
   13394:	ldr	x8, [sp, #72]
   13398:	ldr	x9, [sp, #72]
   1339c:	ldrsw	x12, [sp, #32]
   133a0:	mul	x12, x10, x12
   133a4:	add	x9, x9, x12
   133a8:	ldrh	w11, [x9, #2]
   133ac:	mov	w9, w11
   133b0:	mul	x9, x10, x9
   133b4:	add	x8, x8, x9
   133b8:	ldrh	w11, [x8, #2]
   133bc:	add	w11, w11, #0x1
   133c0:	str	w11, [sp, #24]
   133c4:	ldr	w11, [sp, #24]
   133c8:	ldr	w13, [sp, #40]
   133cc:	cmp	w11, w13
   133d0:	b.le	133e8 <inflateCodesUsed@@ZLIB_1.2.9+0x2f8c>
   133d4:	ldr	w8, [sp, #40]
   133d8:	str	w8, [sp, #24]
   133dc:	ldr	w8, [sp, #12]
   133e0:	add	w8, w8, #0x1
   133e4:	str	w8, [sp, #12]
   133e8:	ldr	w8, [sp, #24]
   133ec:	ldr	x9, [sp, #72]
   133f0:	ldrsw	x10, [sp, #32]
   133f4:	mov	x11, #0x4                   	// #4
   133f8:	mul	x10, x11, x10
   133fc:	add	x9, x9, x10
   13400:	strh	w8, [x9, #2]
   13404:	ldr	w8, [sp, #32]
   13408:	ldr	w12, [sp, #68]
   1340c:	cmp	w8, w12
   13410:	b.le	13418 <inflateCodesUsed@@ZLIB_1.2.9+0x2fbc>
   13414:	b	13500 <inflateCodesUsed@@ZLIB_1.2.9+0x30a4>
   13418:	ldr	x8, [sp, #88]
   1341c:	add	x8, x8, #0xba0
   13420:	ldrsw	x9, [sp, #24]
   13424:	mov	x10, #0x2                   	// #2
   13428:	mul	x9, x10, x9
   1342c:	add	x8, x8, x9
   13430:	ldrh	w11, [x8]
   13434:	add	w11, w11, #0x1
   13438:	strh	w11, [x8]
   1343c:	str	wzr, [sp, #20]
   13440:	ldr	w11, [sp, #32]
   13444:	ldr	w12, [sp, #44]
   13448:	cmp	w11, w12
   1344c:	b.lt	13468 <inflateCodesUsed@@ZLIB_1.2.9+0x300c>  // b.tstop
   13450:	ldr	x8, [sp, #48]
   13454:	ldr	w9, [sp, #32]
   13458:	ldr	w10, [sp, #44]
   1345c:	subs	w9, w9, w10
   13460:	ldr	w9, [x8, w9, sxtw #2]
   13464:	str	w9, [sp, #20]
   13468:	ldr	x8, [sp, #72]
   1346c:	ldrsw	x9, [sp, #32]
   13470:	mov	x10, #0x4                   	// #4
   13474:	mul	x9, x10, x9
   13478:	add	x8, x8, x9
   1347c:	ldrh	w11, [x8]
   13480:	strh	w11, [sp, #18]
   13484:	ldrh	w11, [sp, #18]
   13488:	mov	w8, w11
   1348c:	ldr	w11, [sp, #24]
   13490:	ldr	w12, [sp, #20]
   13494:	add	w11, w11, w12
   13498:	mov	w9, w11
   1349c:	ubfx	x9, x9, #0, #32
   134a0:	mul	x8, x8, x9
   134a4:	ldr	x9, [sp, #88]
   134a8:	ldr	x10, [x9, #5912]
   134ac:	add	x8, x10, x8
   134b0:	str	x8, [x9, #5912]
   134b4:	ldr	x8, [sp, #56]
   134b8:	cbz	x8, 13500 <inflateCodesUsed@@ZLIB_1.2.9+0x30a4>
   134bc:	ldrh	w8, [sp, #18]
   134c0:	mov	w9, w8
   134c4:	ldr	x10, [sp, #56]
   134c8:	ldrsw	x11, [sp, #32]
   134cc:	mov	x12, #0x4                   	// #4
   134d0:	mul	x11, x12, x11
   134d4:	add	x10, x10, x11
   134d8:	ldrh	w8, [x10, #2]
   134dc:	ldr	w13, [sp, #20]
   134e0:	add	w8, w8, w13
   134e4:	mov	w10, w8
   134e8:	ubfx	x10, x10, #0, #32
   134ec:	mul	x9, x9, x10
   134f0:	ldr	x10, [sp, #88]
   134f4:	ldr	x11, [x10, #5920]
   134f8:	add	x9, x11, x9
   134fc:	str	x9, [x10, #5920]
   13500:	ldr	w8, [sp, #36]
   13504:	add	w8, w8, #0x1
   13508:	str	w8, [sp, #36]
   1350c:	b	13370 <inflateCodesUsed@@ZLIB_1.2.9+0x2f14>
   13510:	ldr	w8, [sp, #12]
   13514:	cbnz	w8, 1351c <inflateCodesUsed@@ZLIB_1.2.9+0x30c0>
   13518:	b	136e0 <inflateCodesUsed@@ZLIB_1.2.9+0x3284>
   1351c:	ldr	w8, [sp, #40]
   13520:	subs	w8, w8, #0x1
   13524:	str	w8, [sp, #24]
   13528:	ldr	x8, [sp, #88]
   1352c:	add	x8, x8, #0xba0
   13530:	ldrsw	x9, [sp, #24]
   13534:	ldrh	w10, [x8, x9, lsl #1]
   13538:	cbnz	w10, 1354c <inflateCodesUsed@@ZLIB_1.2.9+0x30f0>
   1353c:	ldr	w8, [sp, #24]
   13540:	subs	w8, w8, #0x1
   13544:	str	w8, [sp, #24]
   13548:	b	13528 <inflateCodesUsed@@ZLIB_1.2.9+0x30cc>
   1354c:	ldr	x8, [sp, #88]
   13550:	add	x8, x8, #0xba0
   13554:	ldrsw	x9, [sp, #24]
   13558:	mov	x10, #0x2                   	// #2
   1355c:	mul	x9, x10, x9
   13560:	add	x8, x8, x9
   13564:	ldrh	w11, [x8]
   13568:	mov	w12, #0xffffffff            	// #-1
   1356c:	add	w11, w12, w11, uxth
   13570:	strh	w11, [x8]
   13574:	ldr	x8, [sp, #88]
   13578:	add	x8, x8, #0xba0
   1357c:	ldr	w11, [sp, #24]
   13580:	add	w11, w11, #0x1
   13584:	mov	w0, w11
   13588:	sxtw	x9, w0
   1358c:	mul	x9, x10, x9
   13590:	add	x8, x8, x9
   13594:	ldrh	w11, [x8]
   13598:	add	w11, w11, #0x2
   1359c:	strh	w11, [x8]
   135a0:	ldr	x8, [sp, #88]
   135a4:	add	x8, x8, #0xba0
   135a8:	ldrsw	x9, [sp, #40]
   135ac:	mul	x9, x10, x9
   135b0:	add	x8, x8, x9
   135b4:	ldrh	w11, [x8]
   135b8:	add	w11, w12, w11, uxth
   135bc:	strh	w11, [x8]
   135c0:	ldr	w11, [sp, #12]
   135c4:	subs	w11, w11, #0x2
   135c8:	str	w11, [sp, #12]
   135cc:	ldr	w8, [sp, #12]
   135d0:	cmp	w8, #0x0
   135d4:	cset	w8, gt
   135d8:	tbnz	w8, #0, 1351c <inflateCodesUsed@@ZLIB_1.2.9+0x30c0>
   135dc:	ldr	w8, [sp, #40]
   135e0:	str	w8, [sp, #24]
   135e4:	ldr	w8, [sp, #24]
   135e8:	cbz	w8, 136e0 <inflateCodesUsed@@ZLIB_1.2.9+0x3284>
   135ec:	ldr	x8, [sp, #88]
   135f0:	add	x8, x8, #0xba0
   135f4:	ldrsw	x9, [sp, #24]
   135f8:	ldrh	w10, [x8, x9, lsl #1]
   135fc:	str	w10, [sp, #32]
   13600:	ldr	w8, [sp, #32]
   13604:	cbz	w8, 136d0 <inflateCodesUsed@@ZLIB_1.2.9+0x3274>
   13608:	ldr	x8, [sp, #88]
   1360c:	add	x8, x8, #0xbc0
   13610:	ldr	w9, [sp, #36]
   13614:	subs	w9, w9, #0x1
   13618:	str	w9, [sp, #36]
   1361c:	ldr	w9, [x8, w9, sxtw #2]
   13620:	str	w9, [sp, #28]
   13624:	ldr	w9, [sp, #28]
   13628:	ldr	w10, [sp, #68]
   1362c:	cmp	w9, w10
   13630:	b.le	13638 <inflateCodesUsed@@ZLIB_1.2.9+0x31dc>
   13634:	b	13600 <inflateCodesUsed@@ZLIB_1.2.9+0x31a4>
   13638:	ldr	x8, [sp, #72]
   1363c:	ldrsw	x9, [sp, #28]
   13640:	mov	x10, #0x4                   	// #4
   13644:	mul	x9, x10, x9
   13648:	add	x8, x8, x9
   1364c:	ldrh	w11, [x8, #2]
   13650:	ldr	w12, [sp, #24]
   13654:	cmp	w11, w12
   13658:	b.eq	136c0 <inflateCodesUsed@@ZLIB_1.2.9+0x3264>  // b.none
   1365c:	ldrsw	x8, [sp, #24]
   13660:	ldr	x9, [sp, #72]
   13664:	ldrsw	x10, [sp, #28]
   13668:	mov	x11, #0x4                   	// #4
   1366c:	mul	x10, x11, x10
   13670:	add	x9, x9, x10
   13674:	ldrh	w12, [x9, #2]
   13678:	mov	w9, w12
   1367c:	subs	x8, x8, x9
   13680:	ldr	x9, [sp, #72]
   13684:	ldrsw	x10, [sp, #28]
   13688:	mul	x10, x11, x10
   1368c:	ldrh	w12, [x9, x10]
   13690:	mov	w9, w12
   13694:	mul	x8, x8, x9
   13698:	ldr	x9, [sp, #88]
   1369c:	ldr	x10, [x9, #5912]
   136a0:	add	x8, x10, x8
   136a4:	str	x8, [x9, #5912]
   136a8:	ldr	w12, [sp, #24]
   136ac:	ldr	x8, [sp, #72]
   136b0:	ldrsw	x9, [sp, #28]
   136b4:	mul	x9, x11, x9
   136b8:	add	x8, x8, x9
   136bc:	strh	w12, [x8, #2]
   136c0:	ldr	w8, [sp, #32]
   136c4:	subs	w8, w8, #0x1
   136c8:	str	w8, [sp, #32]
   136cc:	b	13600 <inflateCodesUsed@@ZLIB_1.2.9+0x31a4>
   136d0:	ldr	w8, [sp, #24]
   136d4:	subs	w8, w8, #0x1
   136d8:	str	w8, [sp, #24]
   136dc:	b	135e4 <inflateCodesUsed@@ZLIB_1.2.9+0x3188>
   136e0:	add	sp, sp, #0x60
   136e4:	ret
   136e8:	sub	sp, sp, #0x60
   136ec:	stp	x29, x30, [sp, #80]
   136f0:	add	x29, sp, #0x50
   136f4:	mov	w8, #0x1                   	// #1
   136f8:	stur	x0, [x29, #-8]
   136fc:	stur	w1, [x29, #-12]
   13700:	stur	x2, [x29, #-24]
   13704:	str	wzr, [sp, #20]
   13708:	str	w8, [sp, #16]
   1370c:	ldr	w8, [sp, #16]
   13710:	cmp	w8, #0xf
   13714:	b.gt	13764 <inflateCodesUsed@@ZLIB_1.2.9+0x3308>
   13718:	ldr	w8, [sp, #20]
   1371c:	ldur	x9, [x29, #-24]
   13720:	ldr	w10, [sp, #16]
   13724:	subs	w10, w10, #0x1
   13728:	mov	x11, #0x2                   	// #2
   1372c:	ldrh	w10, [x9, w10, sxtw #1]
   13730:	add	w8, w8, w10
   13734:	lsl	w8, w8, #1
   13738:	str	w8, [sp, #20]
   1373c:	ldr	w8, [sp, #20]
   13740:	ldrsw	x9, [sp, #16]
   13744:	mul	x9, x11, x9
   13748:	add	x11, sp, #0x18
   1374c:	add	x9, x11, x9
   13750:	strh	w8, [x9]
   13754:	ldr	w8, [sp, #16]
   13758:	add	w8, w8, #0x1
   1375c:	str	w8, [sp, #16]
   13760:	b	1370c <inflateCodesUsed@@ZLIB_1.2.9+0x32b0>
   13764:	str	wzr, [sp, #12]
   13768:	ldr	w8, [sp, #12]
   1376c:	ldur	w9, [x29, #-12]
   13770:	cmp	w8, w9
   13774:	b.gt	137f8 <inflateCodesUsed@@ZLIB_1.2.9+0x339c>
   13778:	ldur	x8, [x29, #-8]
   1377c:	ldrsw	x9, [sp, #12]
   13780:	mov	x10, #0x4                   	// #4
   13784:	mul	x9, x10, x9
   13788:	add	x8, x8, x9
   1378c:	ldrh	w11, [x8, #2]
   13790:	str	w11, [sp, #8]
   13794:	ldr	w11, [sp, #8]
   13798:	cbnz	w11, 137a0 <inflateCodesUsed@@ZLIB_1.2.9+0x3344>
   1379c:	b	137e8 <inflateCodesUsed@@ZLIB_1.2.9+0x338c>
   137a0:	ldrsw	x8, [sp, #8]
   137a4:	mov	x9, #0x2                   	// #2
   137a8:	mul	x8, x9, x8
   137ac:	add	x9, sp, #0x18
   137b0:	add	x8, x9, x8
   137b4:	ldrh	w10, [x8]
   137b8:	mov	w11, w10
   137bc:	add	w11, w11, #0x1
   137c0:	strh	w11, [x8]
   137c4:	ldr	w1, [sp, #8]
   137c8:	mov	w0, w10
   137cc:	bl	13804 <inflateCodesUsed@@ZLIB_1.2.9+0x33a8>
   137d0:	ldur	x8, [x29, #-8]
   137d4:	ldrsw	x9, [sp, #12]
   137d8:	mov	x12, #0x4                   	// #4
   137dc:	mul	x9, x12, x9
   137e0:	add	x8, x8, x9
   137e4:	strh	w0, [x8]
   137e8:	ldr	w8, [sp, #12]
   137ec:	add	w8, w8, #0x1
   137f0:	str	w8, [sp, #12]
   137f4:	b	13768 <inflateCodesUsed@@ZLIB_1.2.9+0x330c>
   137f8:	ldp	x29, x30, [sp, #80]
   137fc:	add	sp, sp, #0x60
   13800:	ret
   13804:	sub	sp, sp, #0x10
   13808:	str	w0, [sp, #12]
   1380c:	str	w1, [sp, #8]
   13810:	str	wzr, [sp, #4]
   13814:	ldr	w8, [sp, #12]
   13818:	and	w8, w8, #0x1
   1381c:	ldr	w9, [sp, #4]
   13820:	orr	w8, w9, w8
   13824:	str	w8, [sp, #4]
   13828:	ldr	w8, [sp, #12]
   1382c:	lsr	w8, w8, #1
   13830:	str	w8, [sp, #12]
   13834:	ldr	w8, [sp, #4]
   13838:	lsl	w8, w8, #1
   1383c:	str	w8, [sp, #4]
   13840:	ldr	w8, [sp, #8]
   13844:	subs	w8, w8, #0x1
   13848:	str	w8, [sp, #8]
   1384c:	cmp	w8, #0x0
   13850:	cset	w8, gt
   13854:	tbnz	w8, #0, 13814 <inflateCodesUsed@@ZLIB_1.2.9+0x33b8>
   13858:	ldr	w8, [sp, #4]
   1385c:	lsr	w0, w8, #1
   13860:	add	sp, sp, #0x10
   13864:	ret
   13868:	sub	sp, sp, #0x30
   1386c:	mov	w8, #0xffffffff            	// #-1
   13870:	mov	w9, #0x7                   	// #7
   13874:	mov	w10, #0x4                   	// #4
   13878:	str	x0, [sp, #40]
   1387c:	str	x1, [sp, #32]
   13880:	str	w2, [sp, #28]
   13884:	str	w8, [sp, #20]
   13888:	ldr	x11, [sp, #32]
   1388c:	ldrh	w8, [x11, #2]
   13890:	str	w8, [sp, #12]
   13894:	str	wzr, [sp, #8]
   13898:	str	w9, [sp, #4]
   1389c:	str	w10, [sp]
   138a0:	ldr	w8, [sp, #12]
   138a4:	cbnz	w8, 138b8 <inflateCodesUsed@@ZLIB_1.2.9+0x345c>
   138a8:	mov	w8, #0x8a                  	// #138
   138ac:	str	w8, [sp, #4]
   138b0:	mov	w8, #0x3                   	// #3
   138b4:	str	w8, [sp]
   138b8:	ldr	x8, [sp, #32]
   138bc:	ldr	w9, [sp, #28]
   138c0:	add	w9, w9, #0x1
   138c4:	mov	w0, w9
   138c8:	sxtw	x10, w0
   138cc:	mov	x11, #0x4                   	// #4
   138d0:	mul	x10, x11, x10
   138d4:	add	x8, x8, x10
   138d8:	mov	w9, #0xffff                	// #65535
   138dc:	strh	w9, [x8, #2]
   138e0:	str	wzr, [sp, #24]
   138e4:	ldr	w8, [sp, #24]
   138e8:	ldr	w9, [sp, #28]
   138ec:	cmp	w8, w9
   138f0:	b.gt	13a78 <inflateCodesUsed@@ZLIB_1.2.9+0x361c>
   138f4:	ldr	w8, [sp, #12]
   138f8:	str	w8, [sp, #16]
   138fc:	ldr	x9, [sp, #32]
   13900:	ldr	w8, [sp, #24]
   13904:	add	w8, w8, #0x1
   13908:	mov	w0, w8
   1390c:	sxtw	x10, w0
   13910:	mov	x11, #0x4                   	// #4
   13914:	mul	x10, x11, x10
   13918:	add	x9, x9, x10
   1391c:	ldrh	w8, [x9, #2]
   13920:	str	w8, [sp, #12]
   13924:	ldr	w8, [sp, #8]
   13928:	add	w8, w8, #0x1
   1392c:	str	w8, [sp, #8]
   13930:	ldr	w12, [sp, #4]
   13934:	cmp	w8, w12
   13938:	b.ge	13950 <inflateCodesUsed@@ZLIB_1.2.9+0x34f4>  // b.tcont
   1393c:	ldr	w8, [sp, #16]
   13940:	ldr	w9, [sp, #12]
   13944:	cmp	w8, w9
   13948:	b.ne	13950 <inflateCodesUsed@@ZLIB_1.2.9+0x34f4>  // b.any
   1394c:	b	13a68 <inflateCodesUsed@@ZLIB_1.2.9+0x360c>
   13950:	ldr	w8, [sp, #8]
   13954:	ldr	w9, [sp]
   13958:	cmp	w8, w9
   1395c:	b.ge	1398c <inflateCodesUsed@@ZLIB_1.2.9+0x3530>  // b.tcont
   13960:	ldr	w8, [sp, #8]
   13964:	ldr	x9, [sp, #40]
   13968:	add	x9, x9, #0xabc
   1396c:	ldrsw	x10, [sp, #16]
   13970:	mov	x11, #0x4                   	// #4
   13974:	mul	x10, x11, x10
   13978:	add	x9, x9, x10
   1397c:	ldrh	w12, [x9]
   13980:	add	w8, w12, w8
   13984:	strh	w8, [x9]
   13988:	b	13a0c <inflateCodesUsed@@ZLIB_1.2.9+0x35b0>
   1398c:	ldr	w8, [sp, #16]
   13990:	cbz	w8, 139dc <inflateCodesUsed@@ZLIB_1.2.9+0x3580>
   13994:	ldr	w8, [sp, #16]
   13998:	ldr	w9, [sp, #20]
   1399c:	cmp	w8, w9
   139a0:	b.eq	139c8 <inflateCodesUsed@@ZLIB_1.2.9+0x356c>  // b.none
   139a4:	ldr	x8, [sp, #40]
   139a8:	add	x8, x8, #0xabc
   139ac:	ldrsw	x9, [sp, #16]
   139b0:	mov	x10, #0x4                   	// #4
   139b4:	mul	x9, x10, x9
   139b8:	add	x8, x8, x9
   139bc:	ldrh	w11, [x8]
   139c0:	add	w11, w11, #0x1
   139c4:	strh	w11, [x8]
   139c8:	ldr	x8, [sp, #40]
   139cc:	ldrh	w9, [x8, #2812]
   139d0:	add	w9, w9, #0x1
   139d4:	strh	w9, [x8, #2812]
   139d8:	b	13a0c <inflateCodesUsed@@ZLIB_1.2.9+0x35b0>
   139dc:	ldr	w8, [sp, #8]
   139e0:	cmp	w8, #0xa
   139e4:	b.gt	139fc <inflateCodesUsed@@ZLIB_1.2.9+0x35a0>
   139e8:	ldr	x8, [sp, #40]
   139ec:	ldrh	w9, [x8, #2816]
   139f0:	add	w9, w9, #0x1
   139f4:	strh	w9, [x8, #2816]
   139f8:	b	13a0c <inflateCodesUsed@@ZLIB_1.2.9+0x35b0>
   139fc:	ldr	x8, [sp, #40]
   13a00:	ldrh	w9, [x8, #2820]
   13a04:	add	w9, w9, #0x1
   13a08:	strh	w9, [x8, #2820]
   13a0c:	str	wzr, [sp, #8]
   13a10:	ldr	w8, [sp, #16]
   13a14:	str	w8, [sp, #20]
   13a18:	ldr	w8, [sp, #12]
   13a1c:	cbnz	w8, 13a34 <inflateCodesUsed@@ZLIB_1.2.9+0x35d8>
   13a20:	mov	w8, #0x8a                  	// #138
   13a24:	str	w8, [sp, #4]
   13a28:	mov	w8, #0x3                   	// #3
   13a2c:	str	w8, [sp]
   13a30:	b	13a68 <inflateCodesUsed@@ZLIB_1.2.9+0x360c>
   13a34:	ldr	w8, [sp, #16]
   13a38:	ldr	w9, [sp, #12]
   13a3c:	cmp	w8, w9
   13a40:	b.ne	13a58 <inflateCodesUsed@@ZLIB_1.2.9+0x35fc>  // b.any
   13a44:	mov	w8, #0x6                   	// #6
   13a48:	str	w8, [sp, #4]
   13a4c:	mov	w8, #0x3                   	// #3
   13a50:	str	w8, [sp]
   13a54:	b	13a68 <inflateCodesUsed@@ZLIB_1.2.9+0x360c>
   13a58:	mov	w8, #0x7                   	// #7
   13a5c:	str	w8, [sp, #4]
   13a60:	mov	w8, #0x4                   	// #4
   13a64:	str	w8, [sp]
   13a68:	ldr	w8, [sp, #24]
   13a6c:	add	w8, w8, #0x1
   13a70:	str	w8, [sp, #24]
   13a74:	b	138e4 <inflateCodesUsed@@ZLIB_1.2.9+0x3488>
   13a78:	add	sp, sp, #0x30
   13a7c:	ret
   13a80:	sub	sp, sp, #0x70
   13a84:	mov	w8, #0xffffffff            	// #-1
   13a88:	mov	w9, #0x7                   	// #7
   13a8c:	mov	w10, #0x4                   	// #4
   13a90:	str	x0, [sp, #104]
   13a94:	str	x1, [sp, #96]
   13a98:	str	w2, [sp, #92]
   13a9c:	str	w8, [sp, #84]
   13aa0:	ldr	x11, [sp, #96]
   13aa4:	ldrh	w8, [x11, #2]
   13aa8:	str	w8, [sp, #76]
   13aac:	str	wzr, [sp, #72]
   13ab0:	str	w9, [sp, #68]
   13ab4:	str	w10, [sp, #64]
   13ab8:	ldr	w8, [sp, #76]
   13abc:	cbnz	w8, 13ad0 <inflateCodesUsed@@ZLIB_1.2.9+0x3674>
   13ac0:	mov	w8, #0x8a                  	// #138
   13ac4:	str	w8, [sp, #68]
   13ac8:	mov	w8, #0x3                   	// #3
   13acc:	str	w8, [sp, #64]
   13ad0:	str	wzr, [sp, #88]
   13ad4:	ldr	w8, [sp, #88]
   13ad8:	ldr	w9, [sp, #92]
   13adc:	cmp	w8, w9
   13ae0:	b.gt	145b0 <inflateCodesUsed@@ZLIB_1.2.9+0x4154>
   13ae4:	ldr	w8, [sp, #76]
   13ae8:	str	w8, [sp, #80]
   13aec:	ldr	x9, [sp, #96]
   13af0:	ldr	w8, [sp, #88]
   13af4:	add	w8, w8, #0x1
   13af8:	mov	w0, w8
   13afc:	sxtw	x10, w0
   13b00:	mov	x11, #0x4                   	// #4
   13b04:	mul	x10, x11, x10
   13b08:	add	x9, x9, x10
   13b0c:	ldrh	w8, [x9, #2]
   13b10:	str	w8, [sp, #76]
   13b14:	ldr	w8, [sp, #72]
   13b18:	add	w8, w8, #0x1
   13b1c:	str	w8, [sp, #72]
   13b20:	ldr	w12, [sp, #68]
   13b24:	cmp	w8, w12
   13b28:	b.ge	13b40 <inflateCodesUsed@@ZLIB_1.2.9+0x36e4>  // b.tcont
   13b2c:	ldr	w8, [sp, #80]
   13b30:	ldr	w9, [sp, #76]
   13b34:	cmp	w8, w9
   13b38:	b.ne	13b40 <inflateCodesUsed@@ZLIB_1.2.9+0x36e4>  // b.any
   13b3c:	b	145a0 <inflateCodesUsed@@ZLIB_1.2.9+0x4144>
   13b40:	ldr	w8, [sp, #72]
   13b44:	ldr	w9, [sp, #64]
   13b48:	cmp	w8, w9
   13b4c:	b.ge	13cc0 <inflateCodesUsed@@ZLIB_1.2.9+0x3864>  // b.tcont
   13b50:	ldr	x8, [sp, #104]
   13b54:	add	x8, x8, #0xabc
   13b58:	ldrsw	x9, [sp, #80]
   13b5c:	mov	x10, #0x4                   	// #4
   13b60:	mul	x9, x10, x9
   13b64:	add	x8, x8, x9
   13b68:	ldrh	w11, [x8, #2]
   13b6c:	str	w11, [sp, #60]
   13b70:	ldr	x8, [sp, #104]
   13b74:	ldr	w11, [x8, #5940]
   13b78:	ldr	w12, [sp, #60]
   13b7c:	mov	w13, #0x10                  	// #16
   13b80:	subs	w12, w13, w12
   13b84:	cmp	w11, w12
   13b88:	b.le	13c64 <inflateCodesUsed@@ZLIB_1.2.9+0x3808>
   13b8c:	ldr	x8, [sp, #104]
   13b90:	add	x8, x8, #0xabc
   13b94:	ldrsw	x9, [sp, #80]
   13b98:	mov	x10, #0x4                   	// #4
   13b9c:	mul	x9, x10, x9
   13ba0:	ldrh	w11, [x8, x9]
   13ba4:	str	w11, [sp, #56]
   13ba8:	ldr	w11, [sp, #56]
   13bac:	and	w11, w11, #0xffff
   13bb0:	ldr	x8, [sp, #104]
   13bb4:	ldr	w12, [x8, #5940]
   13bb8:	lsl	w11, w11, w12
   13bbc:	ldr	x8, [sp, #104]
   13bc0:	ldrh	w12, [x8, #5936]
   13bc4:	orr	w11, w12, w11
   13bc8:	strh	w11, [x8, #5936]
   13bcc:	ldr	x8, [sp, #104]
   13bd0:	ldrh	w11, [x8, #5936]
   13bd4:	and	w11, w11, #0xff
   13bd8:	ldr	x8, [sp, #104]
   13bdc:	ldr	x8, [x8, #16]
   13be0:	ldr	x9, [sp, #104]
   13be4:	ldr	x10, [x9, #40]
   13be8:	add	x13, x10, #0x1
   13bec:	str	x13, [x9, #40]
   13bf0:	add	x8, x8, x10
   13bf4:	strb	w11, [x8]
   13bf8:	ldr	x8, [sp, #104]
   13bfc:	ldrh	w11, [x8, #5936]
   13c00:	asr	w11, w11, #8
   13c04:	ldr	x8, [sp, #104]
   13c08:	ldr	x8, [x8, #16]
   13c0c:	ldr	x9, [sp, #104]
   13c10:	ldr	x10, [x9, #40]
   13c14:	add	x13, x10, #0x1
   13c18:	str	x13, [x9, #40]
   13c1c:	add	x8, x8, x10
   13c20:	strb	w11, [x8]
   13c24:	ldr	w11, [sp, #56]
   13c28:	and	w11, w11, #0xffff
   13c2c:	ldr	x8, [sp, #104]
   13c30:	ldr	w12, [x8, #5940]
   13c34:	mov	w14, #0x10                  	// #16
   13c38:	subs	w12, w14, w12
   13c3c:	asr	w11, w11, w12
   13c40:	ldr	x8, [sp, #104]
   13c44:	strh	w11, [x8, #5936]
   13c48:	ldr	w11, [sp, #60]
   13c4c:	subs	w11, w11, #0x10
   13c50:	ldr	x8, [sp, #104]
   13c54:	ldr	w12, [x8, #5940]
   13c58:	add	w11, w12, w11
   13c5c:	str	w11, [x8, #5940]
   13c60:	b	13cac <inflateCodesUsed@@ZLIB_1.2.9+0x3850>
   13c64:	ldr	x8, [sp, #104]
   13c68:	add	x8, x8, #0xabc
   13c6c:	ldrsw	x9, [sp, #80]
   13c70:	mov	x10, #0x4                   	// #4
   13c74:	mul	x9, x10, x9
   13c78:	ldrh	w11, [x8, x9]
   13c7c:	ldr	x8, [sp, #104]
   13c80:	ldr	w12, [x8, #5940]
   13c84:	lsl	w11, w11, w12
   13c88:	ldr	x8, [sp, #104]
   13c8c:	ldrh	w12, [x8, #5936]
   13c90:	orr	w11, w12, w11
   13c94:	strh	w11, [x8, #5936]
   13c98:	ldr	w11, [sp, #60]
   13c9c:	ldr	x8, [sp, #104]
   13ca0:	ldr	w12, [x8, #5940]
   13ca4:	add	w11, w12, w11
   13ca8:	str	w11, [x8, #5940]
   13cac:	ldr	w8, [sp, #72]
   13cb0:	subs	w8, w8, #0x1
   13cb4:	str	w8, [sp, #72]
   13cb8:	cbnz	w8, 13b50 <inflateCodesUsed@@ZLIB_1.2.9+0x36f4>
   13cbc:	b	14544 <inflateCodesUsed@@ZLIB_1.2.9+0x40e8>
   13cc0:	ldr	w8, [sp, #80]
   13cc4:	cbz	w8, 14094 <inflateCodesUsed@@ZLIB_1.2.9+0x3c38>
   13cc8:	ldr	w8, [sp, #80]
   13ccc:	ldr	w9, [sp, #84]
   13cd0:	cmp	w8, w9
   13cd4:	b.eq	13e40 <inflateCodesUsed@@ZLIB_1.2.9+0x39e4>  // b.none
   13cd8:	ldr	x8, [sp, #104]
   13cdc:	add	x8, x8, #0xabc
   13ce0:	ldrsw	x9, [sp, #80]
   13ce4:	mov	x10, #0x4                   	// #4
   13ce8:	mul	x9, x10, x9
   13cec:	add	x8, x8, x9
   13cf0:	ldrh	w11, [x8, #2]
   13cf4:	str	w11, [sp, #52]
   13cf8:	ldr	x8, [sp, #104]
   13cfc:	ldr	w11, [x8, #5940]
   13d00:	ldr	w12, [sp, #52]
   13d04:	mov	w13, #0x10                  	// #16
   13d08:	subs	w12, w13, w12
   13d0c:	cmp	w11, w12
   13d10:	b.le	13dec <inflateCodesUsed@@ZLIB_1.2.9+0x3990>
   13d14:	ldr	x8, [sp, #104]
   13d18:	add	x8, x8, #0xabc
   13d1c:	ldrsw	x9, [sp, #80]
   13d20:	mov	x10, #0x4                   	// #4
   13d24:	mul	x9, x10, x9
   13d28:	ldrh	w11, [x8, x9]
   13d2c:	str	w11, [sp, #48]
   13d30:	ldr	w11, [sp, #48]
   13d34:	and	w11, w11, #0xffff
   13d38:	ldr	x8, [sp, #104]
   13d3c:	ldr	w12, [x8, #5940]
   13d40:	lsl	w11, w11, w12
   13d44:	ldr	x8, [sp, #104]
   13d48:	ldrh	w12, [x8, #5936]
   13d4c:	orr	w11, w12, w11
   13d50:	strh	w11, [x8, #5936]
   13d54:	ldr	x8, [sp, #104]
   13d58:	ldrh	w11, [x8, #5936]
   13d5c:	and	w11, w11, #0xff
   13d60:	ldr	x8, [sp, #104]
   13d64:	ldr	x8, [x8, #16]
   13d68:	ldr	x9, [sp, #104]
   13d6c:	ldr	x10, [x9, #40]
   13d70:	add	x13, x10, #0x1
   13d74:	str	x13, [x9, #40]
   13d78:	add	x8, x8, x10
   13d7c:	strb	w11, [x8]
   13d80:	ldr	x8, [sp, #104]
   13d84:	ldrh	w11, [x8, #5936]
   13d88:	asr	w11, w11, #8
   13d8c:	ldr	x8, [sp, #104]
   13d90:	ldr	x8, [x8, #16]
   13d94:	ldr	x9, [sp, #104]
   13d98:	ldr	x10, [x9, #40]
   13d9c:	add	x13, x10, #0x1
   13da0:	str	x13, [x9, #40]
   13da4:	add	x8, x8, x10
   13da8:	strb	w11, [x8]
   13dac:	ldr	w11, [sp, #48]
   13db0:	and	w11, w11, #0xffff
   13db4:	ldr	x8, [sp, #104]
   13db8:	ldr	w12, [x8, #5940]
   13dbc:	mov	w14, #0x10                  	// #16
   13dc0:	subs	w12, w14, w12
   13dc4:	asr	w11, w11, w12
   13dc8:	ldr	x8, [sp, #104]
   13dcc:	strh	w11, [x8, #5936]
   13dd0:	ldr	w11, [sp, #52]
   13dd4:	subs	w11, w11, #0x10
   13dd8:	ldr	x8, [sp, #104]
   13ddc:	ldr	w12, [x8, #5940]
   13de0:	add	w11, w12, w11
   13de4:	str	w11, [x8, #5940]
   13de8:	b	13e34 <inflateCodesUsed@@ZLIB_1.2.9+0x39d8>
   13dec:	ldr	x8, [sp, #104]
   13df0:	add	x8, x8, #0xabc
   13df4:	ldrsw	x9, [sp, #80]
   13df8:	mov	x10, #0x4                   	// #4
   13dfc:	mul	x9, x10, x9
   13e00:	ldrh	w11, [x8, x9]
   13e04:	ldr	x8, [sp, #104]
   13e08:	ldr	w12, [x8, #5940]
   13e0c:	lsl	w11, w11, w12
   13e10:	ldr	x8, [sp, #104]
   13e14:	ldrh	w12, [x8, #5936]
   13e18:	orr	w11, w12, w11
   13e1c:	strh	w11, [x8, #5936]
   13e20:	ldr	w11, [sp, #52]
   13e24:	ldr	x8, [sp, #104]
   13e28:	ldr	w12, [x8, #5940]
   13e2c:	add	w11, w12, w11
   13e30:	str	w11, [x8, #5940]
   13e34:	ldr	w8, [sp, #72]
   13e38:	subs	w8, w8, #0x1
   13e3c:	str	w8, [sp, #72]
   13e40:	ldr	x8, [sp, #104]
   13e44:	ldrh	w9, [x8, #2814]
   13e48:	str	w9, [sp, #44]
   13e4c:	ldr	x8, [sp, #104]
   13e50:	ldr	w9, [x8, #5940]
   13e54:	ldr	w10, [sp, #44]
   13e58:	mov	w11, #0x10                  	// #16
   13e5c:	subs	w10, w11, w10
   13e60:	cmp	w9, w10
   13e64:	b.le	13f30 <inflateCodesUsed@@ZLIB_1.2.9+0x3ad4>
   13e68:	ldr	x8, [sp, #104]
   13e6c:	ldrh	w9, [x8, #2812]
   13e70:	str	w9, [sp, #40]
   13e74:	ldr	w9, [sp, #40]
   13e78:	and	w9, w9, #0xffff
   13e7c:	ldr	x8, [sp, #104]
   13e80:	ldr	w10, [x8, #5940]
   13e84:	lsl	w9, w9, w10
   13e88:	ldr	x8, [sp, #104]
   13e8c:	ldrh	w10, [x8, #5936]
   13e90:	orr	w9, w10, w9
   13e94:	strh	w9, [x8, #5936]
   13e98:	ldr	x8, [sp, #104]
   13e9c:	ldrh	w9, [x8, #5936]
   13ea0:	and	w9, w9, #0xff
   13ea4:	ldr	x8, [sp, #104]
   13ea8:	ldr	x8, [x8, #16]
   13eac:	ldr	x11, [sp, #104]
   13eb0:	ldr	x12, [x11, #40]
   13eb4:	add	x13, x12, #0x1
   13eb8:	str	x13, [x11, #40]
   13ebc:	add	x8, x8, x12
   13ec0:	strb	w9, [x8]
   13ec4:	ldr	x8, [sp, #104]
   13ec8:	ldrh	w9, [x8, #5936]
   13ecc:	asr	w9, w9, #8
   13ed0:	ldr	x8, [sp, #104]
   13ed4:	ldr	x8, [x8, #16]
   13ed8:	ldr	x11, [sp, #104]
   13edc:	ldr	x12, [x11, #40]
   13ee0:	add	x13, x12, #0x1
   13ee4:	str	x13, [x11, #40]
   13ee8:	add	x8, x8, x12
   13eec:	strb	w9, [x8]
   13ef0:	ldr	w9, [sp, #40]
   13ef4:	and	w9, w9, #0xffff
   13ef8:	ldr	x8, [sp, #104]
   13efc:	ldr	w10, [x8, #5940]
   13f00:	mov	w14, #0x10                  	// #16
   13f04:	subs	w10, w14, w10
   13f08:	asr	w9, w9, w10
   13f0c:	ldr	x8, [sp, #104]
   13f10:	strh	w9, [x8, #5936]
   13f14:	ldr	w9, [sp, #44]
   13f18:	subs	w9, w9, #0x10
   13f1c:	ldr	x8, [sp, #104]
   13f20:	ldr	w10, [x8, #5940]
   13f24:	add	w9, w10, w9
   13f28:	str	w9, [x8, #5940]
   13f2c:	b	13f68 <inflateCodesUsed@@ZLIB_1.2.9+0x3b0c>
   13f30:	ldr	x8, [sp, #104]
   13f34:	ldrh	w9, [x8, #2812]
   13f38:	ldr	x8, [sp, #104]
   13f3c:	ldr	w10, [x8, #5940]
   13f40:	lsl	w9, w9, w10
   13f44:	ldr	x8, [sp, #104]
   13f48:	ldrh	w10, [x8, #5936]
   13f4c:	orr	w9, w10, w9
   13f50:	strh	w9, [x8, #5936]
   13f54:	ldr	w9, [sp, #44]
   13f58:	ldr	x8, [sp, #104]
   13f5c:	ldr	w10, [x8, #5940]
   13f60:	add	w9, w10, w9
   13f64:	str	w9, [x8, #5940]
   13f68:	mov	w8, #0x2                   	// #2
   13f6c:	str	w8, [sp, #36]
   13f70:	ldr	x9, [sp, #104]
   13f74:	ldr	w8, [x9, #5940]
   13f78:	ldr	w10, [sp, #36]
   13f7c:	mov	w11, #0x10                  	// #16
   13f80:	subs	w10, w11, w10
   13f84:	cmp	w8, w10
   13f88:	b.le	14054 <inflateCodesUsed@@ZLIB_1.2.9+0x3bf8>
   13f8c:	ldr	w8, [sp, #72]
   13f90:	subs	w8, w8, #0x3
   13f94:	str	w8, [sp, #32]
   13f98:	ldr	w8, [sp, #32]
   13f9c:	and	w8, w8, #0xffff
   13fa0:	ldr	x9, [sp, #104]
   13fa4:	ldr	w10, [x9, #5940]
   13fa8:	lsl	w8, w8, w10
   13fac:	ldr	x9, [sp, #104]
   13fb0:	ldrh	w10, [x9, #5936]
   13fb4:	orr	w8, w10, w8
   13fb8:	strh	w8, [x9, #5936]
   13fbc:	ldr	x9, [sp, #104]
   13fc0:	ldrh	w8, [x9, #5936]
   13fc4:	and	w8, w8, #0xff
   13fc8:	ldr	x9, [sp, #104]
   13fcc:	ldr	x9, [x9, #16]
   13fd0:	ldr	x11, [sp, #104]
   13fd4:	ldr	x12, [x11, #40]
   13fd8:	add	x13, x12, #0x1
   13fdc:	str	x13, [x11, #40]
   13fe0:	add	x9, x9, x12
   13fe4:	strb	w8, [x9]
   13fe8:	ldr	x9, [sp, #104]
   13fec:	ldrh	w8, [x9, #5936]
   13ff0:	asr	w8, w8, #8
   13ff4:	ldr	x9, [sp, #104]
   13ff8:	ldr	x9, [x9, #16]
   13ffc:	ldr	x11, [sp, #104]
   14000:	ldr	x12, [x11, #40]
   14004:	add	x13, x12, #0x1
   14008:	str	x13, [x11, #40]
   1400c:	add	x9, x9, x12
   14010:	strb	w8, [x9]
   14014:	ldr	w8, [sp, #32]
   14018:	and	w8, w8, #0xffff
   1401c:	ldr	x9, [sp, #104]
   14020:	ldr	w10, [x9, #5940]
   14024:	mov	w14, #0x10                  	// #16
   14028:	subs	w10, w14, w10
   1402c:	asr	w8, w8, w10
   14030:	ldr	x9, [sp, #104]
   14034:	strh	w8, [x9, #5936]
   14038:	ldr	w8, [sp, #36]
   1403c:	subs	w8, w8, #0x10
   14040:	ldr	x9, [sp, #104]
   14044:	ldr	w10, [x9, #5940]
   14048:	add	w8, w10, w8
   1404c:	str	w8, [x9, #5940]
   14050:	b	14090 <inflateCodesUsed@@ZLIB_1.2.9+0x3c34>
   14054:	ldr	w8, [sp, #72]
   14058:	subs	w8, w8, #0x3
   1405c:	and	w8, w8, #0xffff
   14060:	ldr	x9, [sp, #104]
   14064:	ldr	w10, [x9, #5940]
   14068:	lsl	w8, w8, w10
   1406c:	ldr	x9, [sp, #104]
   14070:	ldrh	w10, [x9, #5936]
   14074:	orr	w8, w10, w8
   14078:	strh	w8, [x9, #5936]
   1407c:	ldr	w8, [sp, #36]
   14080:	ldr	x9, [sp, #104]
   14084:	ldr	w10, [x9, #5940]
   14088:	add	w8, w10, w8
   1408c:	str	w8, [x9, #5940]
   14090:	b	14544 <inflateCodesUsed@@ZLIB_1.2.9+0x40e8>
   14094:	ldr	w8, [sp, #72]
   14098:	cmp	w8, #0xa
   1409c:	b.gt	142f4 <inflateCodesUsed@@ZLIB_1.2.9+0x3e98>
   140a0:	ldr	x8, [sp, #104]
   140a4:	ldrh	w9, [x8, #2818]
   140a8:	str	w9, [sp, #28]
   140ac:	ldr	x8, [sp, #104]
   140b0:	ldr	w9, [x8, #5940]
   140b4:	ldr	w10, [sp, #28]
   140b8:	mov	w11, #0x10                  	// #16
   140bc:	subs	w10, w11, w10
   140c0:	cmp	w9, w10
   140c4:	b.le	14190 <inflateCodesUsed@@ZLIB_1.2.9+0x3d34>
   140c8:	ldr	x8, [sp, #104]
   140cc:	ldrh	w9, [x8, #2816]
   140d0:	str	w9, [sp, #24]
   140d4:	ldr	w9, [sp, #24]
   140d8:	and	w9, w9, #0xffff
   140dc:	ldr	x8, [sp, #104]
   140e0:	ldr	w10, [x8, #5940]
   140e4:	lsl	w9, w9, w10
   140e8:	ldr	x8, [sp, #104]
   140ec:	ldrh	w10, [x8, #5936]
   140f0:	orr	w9, w10, w9
   140f4:	strh	w9, [x8, #5936]
   140f8:	ldr	x8, [sp, #104]
   140fc:	ldrh	w9, [x8, #5936]
   14100:	and	w9, w9, #0xff
   14104:	ldr	x8, [sp, #104]
   14108:	ldr	x8, [x8, #16]
   1410c:	ldr	x11, [sp, #104]
   14110:	ldr	x12, [x11, #40]
   14114:	add	x13, x12, #0x1
   14118:	str	x13, [x11, #40]
   1411c:	add	x8, x8, x12
   14120:	strb	w9, [x8]
   14124:	ldr	x8, [sp, #104]
   14128:	ldrh	w9, [x8, #5936]
   1412c:	asr	w9, w9, #8
   14130:	ldr	x8, [sp, #104]
   14134:	ldr	x8, [x8, #16]
   14138:	ldr	x11, [sp, #104]
   1413c:	ldr	x12, [x11, #40]
   14140:	add	x13, x12, #0x1
   14144:	str	x13, [x11, #40]
   14148:	add	x8, x8, x12
   1414c:	strb	w9, [x8]
   14150:	ldr	w9, [sp, #24]
   14154:	and	w9, w9, #0xffff
   14158:	ldr	x8, [sp, #104]
   1415c:	ldr	w10, [x8, #5940]
   14160:	mov	w14, #0x10                  	// #16
   14164:	subs	w10, w14, w10
   14168:	asr	w9, w9, w10
   1416c:	ldr	x8, [sp, #104]
   14170:	strh	w9, [x8, #5936]
   14174:	ldr	w9, [sp, #28]
   14178:	subs	w9, w9, #0x10
   1417c:	ldr	x8, [sp, #104]
   14180:	ldr	w10, [x8, #5940]
   14184:	add	w9, w10, w9
   14188:	str	w9, [x8, #5940]
   1418c:	b	141c8 <inflateCodesUsed@@ZLIB_1.2.9+0x3d6c>
   14190:	ldr	x8, [sp, #104]
   14194:	ldrh	w9, [x8, #2816]
   14198:	ldr	x8, [sp, #104]
   1419c:	ldr	w10, [x8, #5940]
   141a0:	lsl	w9, w9, w10
   141a4:	ldr	x8, [sp, #104]
   141a8:	ldrh	w10, [x8, #5936]
   141ac:	orr	w9, w10, w9
   141b0:	strh	w9, [x8, #5936]
   141b4:	ldr	w9, [sp, #28]
   141b8:	ldr	x8, [sp, #104]
   141bc:	ldr	w10, [x8, #5940]
   141c0:	add	w9, w10, w9
   141c4:	str	w9, [x8, #5940]
   141c8:	mov	w8, #0x3                   	// #3
   141cc:	str	w8, [sp, #20]
   141d0:	ldr	x9, [sp, #104]
   141d4:	ldr	w8, [x9, #5940]
   141d8:	ldr	w10, [sp, #20]
   141dc:	mov	w11, #0x10                  	// #16
   141e0:	subs	w10, w11, w10
   141e4:	cmp	w8, w10
   141e8:	b.le	142b4 <inflateCodesUsed@@ZLIB_1.2.9+0x3e58>
   141ec:	ldr	w8, [sp, #72]
   141f0:	subs	w8, w8, #0x3
   141f4:	str	w8, [sp, #16]
   141f8:	ldr	w8, [sp, #16]
   141fc:	and	w8, w8, #0xffff
   14200:	ldr	x9, [sp, #104]
   14204:	ldr	w10, [x9, #5940]
   14208:	lsl	w8, w8, w10
   1420c:	ldr	x9, [sp, #104]
   14210:	ldrh	w10, [x9, #5936]
   14214:	orr	w8, w10, w8
   14218:	strh	w8, [x9, #5936]
   1421c:	ldr	x9, [sp, #104]
   14220:	ldrh	w8, [x9, #5936]
   14224:	and	w8, w8, #0xff
   14228:	ldr	x9, [sp, #104]
   1422c:	ldr	x9, [x9, #16]
   14230:	ldr	x11, [sp, #104]
   14234:	ldr	x12, [x11, #40]
   14238:	add	x13, x12, #0x1
   1423c:	str	x13, [x11, #40]
   14240:	add	x9, x9, x12
   14244:	strb	w8, [x9]
   14248:	ldr	x9, [sp, #104]
   1424c:	ldrh	w8, [x9, #5936]
   14250:	asr	w8, w8, #8
   14254:	ldr	x9, [sp, #104]
   14258:	ldr	x9, [x9, #16]
   1425c:	ldr	x11, [sp, #104]
   14260:	ldr	x12, [x11, #40]
   14264:	add	x13, x12, #0x1
   14268:	str	x13, [x11, #40]
   1426c:	add	x9, x9, x12
   14270:	strb	w8, [x9]
   14274:	ldr	w8, [sp, #16]
   14278:	and	w8, w8, #0xffff
   1427c:	ldr	x9, [sp, #104]
   14280:	ldr	w10, [x9, #5940]
   14284:	mov	w14, #0x10                  	// #16
   14288:	subs	w10, w14, w10
   1428c:	asr	w8, w8, w10
   14290:	ldr	x9, [sp, #104]
   14294:	strh	w8, [x9, #5936]
   14298:	ldr	w8, [sp, #20]
   1429c:	subs	w8, w8, #0x10
   142a0:	ldr	x9, [sp, #104]
   142a4:	ldr	w10, [x9, #5940]
   142a8:	add	w8, w10, w8
   142ac:	str	w8, [x9, #5940]
   142b0:	b	142f0 <inflateCodesUsed@@ZLIB_1.2.9+0x3e94>
   142b4:	ldr	w8, [sp, #72]
   142b8:	subs	w8, w8, #0x3
   142bc:	and	w8, w8, #0xffff
   142c0:	ldr	x9, [sp, #104]
   142c4:	ldr	w10, [x9, #5940]
   142c8:	lsl	w8, w8, w10
   142cc:	ldr	x9, [sp, #104]
   142d0:	ldrh	w10, [x9, #5936]
   142d4:	orr	w8, w10, w8
   142d8:	strh	w8, [x9, #5936]
   142dc:	ldr	w8, [sp, #20]
   142e0:	ldr	x9, [sp, #104]
   142e4:	ldr	w10, [x9, #5940]
   142e8:	add	w8, w10, w8
   142ec:	str	w8, [x9, #5940]
   142f0:	b	14544 <inflateCodesUsed@@ZLIB_1.2.9+0x40e8>
   142f4:	ldr	x8, [sp, #104]
   142f8:	ldrh	w9, [x8, #2822]
   142fc:	str	w9, [sp, #12]
   14300:	ldr	x8, [sp, #104]
   14304:	ldr	w9, [x8, #5940]
   14308:	ldr	w10, [sp, #12]
   1430c:	mov	w11, #0x10                  	// #16
   14310:	subs	w10, w11, w10
   14314:	cmp	w9, w10
   14318:	b.le	143e4 <inflateCodesUsed@@ZLIB_1.2.9+0x3f88>
   1431c:	ldr	x8, [sp, #104]
   14320:	ldrh	w9, [x8, #2820]
   14324:	str	w9, [sp, #8]
   14328:	ldr	w9, [sp, #8]
   1432c:	and	w9, w9, #0xffff
   14330:	ldr	x8, [sp, #104]
   14334:	ldr	w10, [x8, #5940]
   14338:	lsl	w9, w9, w10
   1433c:	ldr	x8, [sp, #104]
   14340:	ldrh	w10, [x8, #5936]
   14344:	orr	w9, w10, w9
   14348:	strh	w9, [x8, #5936]
   1434c:	ldr	x8, [sp, #104]
   14350:	ldrh	w9, [x8, #5936]
   14354:	and	w9, w9, #0xff
   14358:	ldr	x8, [sp, #104]
   1435c:	ldr	x8, [x8, #16]
   14360:	ldr	x11, [sp, #104]
   14364:	ldr	x12, [x11, #40]
   14368:	add	x13, x12, #0x1
   1436c:	str	x13, [x11, #40]
   14370:	add	x8, x8, x12
   14374:	strb	w9, [x8]
   14378:	ldr	x8, [sp, #104]
   1437c:	ldrh	w9, [x8, #5936]
   14380:	asr	w9, w9, #8
   14384:	ldr	x8, [sp, #104]
   14388:	ldr	x8, [x8, #16]
   1438c:	ldr	x11, [sp, #104]
   14390:	ldr	x12, [x11, #40]
   14394:	add	x13, x12, #0x1
   14398:	str	x13, [x11, #40]
   1439c:	add	x8, x8, x12
   143a0:	strb	w9, [x8]
   143a4:	ldr	w9, [sp, #8]
   143a8:	and	w9, w9, #0xffff
   143ac:	ldr	x8, [sp, #104]
   143b0:	ldr	w10, [x8, #5940]
   143b4:	mov	w14, #0x10                  	// #16
   143b8:	subs	w10, w14, w10
   143bc:	asr	w9, w9, w10
   143c0:	ldr	x8, [sp, #104]
   143c4:	strh	w9, [x8, #5936]
   143c8:	ldr	w9, [sp, #12]
   143cc:	subs	w9, w9, #0x10
   143d0:	ldr	x8, [sp, #104]
   143d4:	ldr	w10, [x8, #5940]
   143d8:	add	w9, w10, w9
   143dc:	str	w9, [x8, #5940]
   143e0:	b	1441c <inflateCodesUsed@@ZLIB_1.2.9+0x3fc0>
   143e4:	ldr	x8, [sp, #104]
   143e8:	ldrh	w9, [x8, #2820]
   143ec:	ldr	x8, [sp, #104]
   143f0:	ldr	w10, [x8, #5940]
   143f4:	lsl	w9, w9, w10
   143f8:	ldr	x8, [sp, #104]
   143fc:	ldrh	w10, [x8, #5936]
   14400:	orr	w9, w10, w9
   14404:	strh	w9, [x8, #5936]
   14408:	ldr	w9, [sp, #12]
   1440c:	ldr	x8, [sp, #104]
   14410:	ldr	w10, [x8, #5940]
   14414:	add	w9, w10, w9
   14418:	str	w9, [x8, #5940]
   1441c:	mov	w8, #0x7                   	// #7
   14420:	str	w8, [sp, #4]
   14424:	ldr	x9, [sp, #104]
   14428:	ldr	w8, [x9, #5940]
   1442c:	ldr	w10, [sp, #4]
   14430:	mov	w11, #0x10                  	// #16
   14434:	subs	w10, w11, w10
   14438:	cmp	w8, w10
   1443c:	b.le	14508 <inflateCodesUsed@@ZLIB_1.2.9+0x40ac>
   14440:	ldr	w8, [sp, #72]
   14444:	subs	w8, w8, #0xb
   14448:	str	w8, [sp]
   1444c:	ldr	w8, [sp]
   14450:	and	w8, w8, #0xffff
   14454:	ldr	x9, [sp, #104]
   14458:	ldr	w10, [x9, #5940]
   1445c:	lsl	w8, w8, w10
   14460:	ldr	x9, [sp, #104]
   14464:	ldrh	w10, [x9, #5936]
   14468:	orr	w8, w10, w8
   1446c:	strh	w8, [x9, #5936]
   14470:	ldr	x9, [sp, #104]
   14474:	ldrh	w8, [x9, #5936]
   14478:	and	w8, w8, #0xff
   1447c:	ldr	x9, [sp, #104]
   14480:	ldr	x9, [x9, #16]
   14484:	ldr	x11, [sp, #104]
   14488:	ldr	x12, [x11, #40]
   1448c:	add	x13, x12, #0x1
   14490:	str	x13, [x11, #40]
   14494:	add	x9, x9, x12
   14498:	strb	w8, [x9]
   1449c:	ldr	x9, [sp, #104]
   144a0:	ldrh	w8, [x9, #5936]
   144a4:	asr	w8, w8, #8
   144a8:	ldr	x9, [sp, #104]
   144ac:	ldr	x9, [x9, #16]
   144b0:	ldr	x11, [sp, #104]
   144b4:	ldr	x12, [x11, #40]
   144b8:	add	x13, x12, #0x1
   144bc:	str	x13, [x11, #40]
   144c0:	add	x9, x9, x12
   144c4:	strb	w8, [x9]
   144c8:	ldr	w8, [sp]
   144cc:	and	w8, w8, #0xffff
   144d0:	ldr	x9, [sp, #104]
   144d4:	ldr	w10, [x9, #5940]
   144d8:	mov	w14, #0x10                  	// #16
   144dc:	subs	w10, w14, w10
   144e0:	asr	w8, w8, w10
   144e4:	ldr	x9, [sp, #104]
   144e8:	strh	w8, [x9, #5936]
   144ec:	ldr	w8, [sp, #4]
   144f0:	subs	w8, w8, #0x10
   144f4:	ldr	x9, [sp, #104]
   144f8:	ldr	w10, [x9, #5940]
   144fc:	add	w8, w10, w8
   14500:	str	w8, [x9, #5940]
   14504:	b	14544 <inflateCodesUsed@@ZLIB_1.2.9+0x40e8>
   14508:	ldr	w8, [sp, #72]
   1450c:	subs	w8, w8, #0xb
   14510:	and	w8, w8, #0xffff
   14514:	ldr	x9, [sp, #104]
   14518:	ldr	w10, [x9, #5940]
   1451c:	lsl	w8, w8, w10
   14520:	ldr	x9, [sp, #104]
   14524:	ldrh	w10, [x9, #5936]
   14528:	orr	w8, w10, w8
   1452c:	strh	w8, [x9, #5936]
   14530:	ldr	w8, [sp, #4]
   14534:	ldr	x9, [sp, #104]
   14538:	ldr	w10, [x9, #5940]
   1453c:	add	w8, w10, w8
   14540:	str	w8, [x9, #5940]
   14544:	str	wzr, [sp, #72]
   14548:	ldr	w8, [sp, #80]
   1454c:	str	w8, [sp, #84]
   14550:	ldr	w8, [sp, #76]
   14554:	cbnz	w8, 1456c <inflateCodesUsed@@ZLIB_1.2.9+0x4110>
   14558:	mov	w8, #0x8a                  	// #138
   1455c:	str	w8, [sp, #68]
   14560:	mov	w8, #0x3                   	// #3
   14564:	str	w8, [sp, #64]
   14568:	b	145a0 <inflateCodesUsed@@ZLIB_1.2.9+0x4144>
   1456c:	ldr	w8, [sp, #80]
   14570:	ldr	w9, [sp, #76]
   14574:	cmp	w8, w9
   14578:	b.ne	14590 <inflateCodesUsed@@ZLIB_1.2.9+0x4134>  // b.any
   1457c:	mov	w8, #0x6                   	// #6
   14580:	str	w8, [sp, #68]
   14584:	mov	w8, #0x3                   	// #3
   14588:	str	w8, [sp, #64]
   1458c:	b	145a0 <inflateCodesUsed@@ZLIB_1.2.9+0x4144>
   14590:	mov	w8, #0x7                   	// #7
   14594:	str	w8, [sp, #68]
   14598:	mov	w8, #0x4                   	// #4
   1459c:	str	w8, [sp, #64]
   145a0:	ldr	w8, [sp, #88]
   145a4:	add	w8, w8, #0x1
   145a8:	str	w8, [sp, #88]
   145ac:	b	13ad4 <inflateCodesUsed@@ZLIB_1.2.9+0x3678>
   145b0:	add	sp, sp, #0x70
   145b4:	ret

00000000000145b8 <zlibVersion@@Base>:
   145b8:	adrp	x0, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
   145bc:	add	x0, x0, #0xf2a
   145c0:	ret

00000000000145c4 <zlibCompileFlags@@ZLIB_1.2.0.2>:
   145c4:	sub	sp, sp, #0x10
   145c8:	str	xzr, [sp, #8]
   145cc:	ldr	x8, [sp, #8]
   145d0:	add	x8, x8, #0x1
   145d4:	str	x8, [sp, #8]
   145d8:	ldr	x8, [sp, #8]
   145dc:	add	x8, x8, #0x8
   145e0:	str	x8, [sp, #8]
   145e4:	ldr	x8, [sp, #8]
   145e8:	add	x8, x8, #0x20
   145ec:	str	x8, [sp, #8]
   145f0:	ldr	x8, [sp, #8]
   145f4:	add	x8, x8, #0x80
   145f8:	str	x8, [sp, #8]
   145fc:	ldr	x0, [sp, #8]
   14600:	add	sp, sp, #0x10
   14604:	ret

0000000000014608 <zError@@Base>:
   14608:	sub	sp, sp, #0x10
   1460c:	mov	w8, #0x2                   	// #2
   14610:	adrp	x9, 2c000 <gzclose_w@@ZLIB_1.2.3.5+0x13b88>
   14614:	ldr	x9, [x9, #4056]
   14618:	str	w0, [sp, #12]
   1461c:	ldr	w10, [sp, #12]
   14620:	subs	w8, w8, w10
   14624:	mov	w1, w8
   14628:	sxtw	x11, w1
   1462c:	mov	x12, #0x8                   	// #8
   14630:	mul	x11, x12, x11
   14634:	add	x9, x9, x11
   14638:	ldr	x0, [x9]
   1463c:	add	sp, sp, #0x10
   14640:	ret
   14644:	sub	sp, sp, #0x20
   14648:	stp	x29, x30, [sp, #16]
   1464c:	add	x29, sp, #0x10
   14650:	str	x0, [sp, #8]
   14654:	str	w1, [sp, #4]
   14658:	str	w2, [sp]
   1465c:	ldr	w8, [sp, #4]
   14660:	ldr	w9, [sp]
   14664:	mul	w8, w8, w9
   14668:	mov	w10, w8
   1466c:	ubfx	x0, x10, #0, #32
   14670:	bl	2460 <malloc@plt>
   14674:	ldp	x29, x30, [sp, #16]
   14678:	add	sp, sp, #0x20
   1467c:	ret
   14680:	sub	sp, sp, #0x20
   14684:	stp	x29, x30, [sp, #16]
   14688:	add	x29, sp, #0x10
   1468c:	str	x0, [sp, #8]
   14690:	str	x1, [sp]
   14694:	ldr	x0, [sp]
   14698:	bl	2570 <free@plt>
   1469c:	ldp	x29, x30, [sp, #16]
   146a0:	add	sp, sp, #0x20
   146a4:	ret

00000000000146a8 <compress2@@Base>:
   146a8:	sub	sp, sp, #0xd0
   146ac:	stp	x29, x30, [sp, #192]
   146b0:	add	x29, sp, #0xc0
   146b4:	mov	w8, #0xffffffff            	// #-1
   146b8:	mov	x9, xzr
   146bc:	adrp	x10, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
   146c0:	add	x10, x10, #0xf2a
   146c4:	mov	w11, #0x70                  	// #112
   146c8:	add	x12, sp, #0x20
   146cc:	stur	x0, [x29, #-16]
   146d0:	stur	x1, [x29, #-24]
   146d4:	stur	x2, [x29, #-32]
   146d8:	stur	x3, [x29, #-40]
   146dc:	stur	w4, [x29, #-44]
   146e0:	str	w8, [sp, #24]
   146e4:	ldur	x13, [x29, #-24]
   146e8:	ldr	x13, [x13]
   146ec:	str	x13, [sp, #16]
   146f0:	ldur	x13, [x29, #-24]
   146f4:	str	xzr, [x13]
   146f8:	str	x9, [x12, #64]
   146fc:	str	x9, [x12, #72]
   14700:	str	x9, [x12, #80]
   14704:	ldur	w1, [x29, #-44]
   14708:	mov	x0, x12
   1470c:	mov	x2, x10
   14710:	mov	w3, w11
   14714:	bl	24f0 <deflateInit_@plt>
   14718:	str	w0, [sp, #28]
   1471c:	ldr	w8, [sp, #28]
   14720:	cbz	w8, 14730 <compress2@@Base+0x88>
   14724:	ldr	w8, [sp, #28]
   14728:	stur	w8, [x29, #-4]
   1472c:	b	14840 <compress2@@Base+0x198>
   14730:	ldur	x8, [x29, #-16]
   14734:	add	x9, sp, #0x20
   14738:	str	x8, [x9, #24]
   1473c:	str	wzr, [sp, #64]
   14740:	ldur	x8, [x29, #-32]
   14744:	str	x8, [sp, #32]
   14748:	str	wzr, [sp, #40]
   1474c:	ldr	w8, [sp, #64]
   14750:	cbnz	w8, 14794 <compress2@@Base+0xec>
   14754:	ldr	x8, [sp, #16]
   14758:	mov	x9, #0xffffffff            	// #4294967295
   1475c:	cmp	x8, x9
   14760:	b.ls	14770 <compress2@@Base+0xc8>  // b.plast
   14764:	mov	w8, #0xffffffff            	// #-1
   14768:	str	w8, [sp, #12]
   1476c:	b	14778 <compress2@@Base+0xd0>
   14770:	ldr	x8, [sp, #16]
   14774:	str	w8, [sp, #12]
   14778:	ldr	w8, [sp, #12]
   1477c:	str	w8, [sp, #64]
   14780:	ldr	w8, [sp, #64]
   14784:	mov	w9, w8
   14788:	ldr	x10, [sp, #16]
   1478c:	subs	x9, x10, x9
   14790:	str	x9, [sp, #16]
   14794:	ldr	w8, [sp, #40]
   14798:	cbnz	w8, 147dc <compress2@@Base+0x134>
   1479c:	ldur	x8, [x29, #-40]
   147a0:	mov	x9, #0xffffffff            	// #4294967295
   147a4:	cmp	x8, x9
   147a8:	b.ls	147b8 <compress2@@Base+0x110>  // b.plast
   147ac:	mov	w8, #0xffffffff            	// #-1
   147b0:	str	w8, [sp, #8]
   147b4:	b	147c0 <compress2@@Base+0x118>
   147b8:	ldur	x8, [x29, #-40]
   147bc:	str	w8, [sp, #8]
   147c0:	ldr	w8, [sp, #8]
   147c4:	str	w8, [sp, #40]
   147c8:	ldr	w8, [sp, #40]
   147cc:	mov	w9, w8
   147d0:	ldur	x10, [x29, #-40]
   147d4:	subs	x9, x10, x9
   147d8:	stur	x9, [x29, #-40]
   147dc:	ldur	x8, [x29, #-40]
   147e0:	mov	w9, #0x4                   	// #4
   147e4:	mov	w10, wzr
   147e8:	cmp	x8, #0x0
   147ec:	csel	w1, w10, w9, ne  // ne = any
   147f0:	add	x0, sp, #0x20
   147f4:	bl	2490 <deflate@plt>
   147f8:	str	w0, [sp, #28]
   147fc:	ldr	w8, [sp, #28]
   14800:	cbz	w8, 1474c <compress2@@Base+0xa4>
   14804:	add	x0, sp, #0x20
   14808:	ldr	x8, [sp, #72]
   1480c:	ldur	x9, [x29, #-24]
   14810:	str	x8, [x9]
   14814:	bl	2590 <deflateEnd@plt>
   14818:	ldr	w10, [sp, #28]
   1481c:	cmp	w10, #0x1
   14820:	b.ne	14830 <compress2@@Base+0x188>  // b.any
   14824:	mov	w8, wzr
   14828:	str	w8, [sp, #4]
   1482c:	b	14838 <compress2@@Base+0x190>
   14830:	ldr	w8, [sp, #28]
   14834:	str	w8, [sp, #4]
   14838:	ldr	w8, [sp, #4]
   1483c:	stur	w8, [x29, #-4]
   14840:	ldur	w0, [x29, #-4]
   14844:	ldp	x29, x30, [sp, #192]
   14848:	add	sp, sp, #0xd0
   1484c:	ret

0000000000014850 <compress@@Base>:
   14850:	sub	sp, sp, #0x30
   14854:	stp	x29, x30, [sp, #32]
   14858:	add	x29, sp, #0x20
   1485c:	mov	w4, #0xffffffff            	// #-1
   14860:	stur	x0, [x29, #-8]
   14864:	str	x1, [sp, #16]
   14868:	str	x2, [sp, #8]
   1486c:	str	x3, [sp]
   14870:	ldur	x0, [x29, #-8]
   14874:	ldr	x1, [sp, #16]
   14878:	ldr	x2, [sp, #8]
   1487c:	ldr	x3, [sp]
   14880:	bl	25d0 <compress2@plt>
   14884:	ldp	x29, x30, [sp, #32]
   14888:	add	sp, sp, #0x30
   1488c:	ret

0000000000014890 <compressBound@@ZLIB_1.2.0>:
   14890:	sub	sp, sp, #0x10
   14894:	str	x0, [sp, #8]
   14898:	ldr	x8, [sp, #8]
   1489c:	ldr	x9, [sp, #8]
   148a0:	add	x8, x8, x9, lsr #12
   148a4:	ldr	x9, [sp, #8]
   148a8:	add	x8, x8, x9, lsr #14
   148ac:	ldr	x9, [sp, #8]
   148b0:	add	x8, x8, x9, lsr #25
   148b4:	add	x0, x8, #0xd
   148b8:	add	sp, sp, #0x10
   148bc:	ret

00000000000148c0 <uncompress2@@ZLIB_1.2.9>:
   148c0:	sub	sp, sp, #0xf0
   148c4:	stp	x29, x30, [sp, #224]
   148c8:	add	x29, sp, #0xe0
   148cc:	sub	x8, x29, #0x28
   148d0:	mov	w9, #0xffffffff            	// #-1
   148d4:	str	x0, [x8, #24]
   148d8:	str	x1, [x8, #16]
   148dc:	str	x2, [x8, #8]
   148e0:	str	x3, [x8]
   148e4:	str	w9, [sp, #64]
   148e8:	ldr	x10, [x8]
   148ec:	ldr	x10, [x10]
   148f0:	str	x10, [sp, #56]
   148f4:	ldr	x10, [x8, #16]
   148f8:	ldr	x10, [x10]
   148fc:	str	x8, [sp, #32]
   14900:	cbz	x10, 14920 <uncompress2@@ZLIB_1.2.9+0x60>
   14904:	ldr	x8, [sp, #32]
   14908:	ldr	x9, [x8, #16]
   1490c:	ldr	x9, [x9]
   14910:	str	x9, [sp, #48]
   14914:	ldr	x9, [x8, #16]
   14918:	str	xzr, [x9]
   1491c:	b	14934 <uncompress2@@ZLIB_1.2.9+0x74>
   14920:	mov	x8, #0x1                   	// #1
   14924:	str	x8, [sp, #48]
   14928:	add	x8, sp, #0x2f
   1492c:	ldr	x9, [sp, #32]
   14930:	str	x8, [x9, #24]
   14934:	ldr	x8, [sp, #32]
   14938:	ldr	x9, [x8, #8]
   1493c:	add	x10, sp, #0x48
   14940:	str	x9, [sp, #72]
   14944:	str	wzr, [sp, #80]
   14948:	mov	x9, xzr
   1494c:	str	x9, [x10, #64]
   14950:	str	x9, [x10, #72]
   14954:	str	x9, [x10, #80]
   14958:	mov	x0, x10
   1495c:	adrp	x1, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
   14960:	add	x1, x1, #0xf2a
   14964:	mov	w2, #0x70                  	// #112
   14968:	bl	25c0 <inflateInit_@plt>
   1496c:	str	w0, [sp, #68]
   14970:	ldr	w11, [sp, #68]
   14974:	cbz	w11, 14988 <uncompress2@@ZLIB_1.2.9+0xc8>
   14978:	ldr	w8, [sp, #68]
   1497c:	ldr	x9, [sp, #32]
   14980:	str	w8, [x9, #36]
   14984:	b	14b3c <uncompress2@@ZLIB_1.2.9+0x27c>
   14988:	ldr	x8, [sp, #32]
   1498c:	ldr	x9, [x8, #24]
   14990:	add	x10, sp, #0x48
   14994:	str	x9, [x10, #24]
   14998:	str	wzr, [sp, #104]
   1499c:	ldr	w8, [sp, #104]
   149a0:	cbnz	w8, 149e4 <uncompress2@@ZLIB_1.2.9+0x124>
   149a4:	ldr	x8, [sp, #48]
   149a8:	mov	x9, #0xffffffff            	// #4294967295
   149ac:	cmp	x8, x9
   149b0:	b.ls	149c0 <uncompress2@@ZLIB_1.2.9+0x100>  // b.plast
   149b4:	mov	w8, #0xffffffff            	// #-1
   149b8:	str	w8, [sp, #28]
   149bc:	b	149c8 <uncompress2@@ZLIB_1.2.9+0x108>
   149c0:	ldr	x8, [sp, #48]
   149c4:	str	w8, [sp, #28]
   149c8:	ldr	w8, [sp, #28]
   149cc:	str	w8, [sp, #104]
   149d0:	ldr	w8, [sp, #104]
   149d4:	mov	w9, w8
   149d8:	ldr	x10, [sp, #48]
   149dc:	subs	x9, x10, x9
   149e0:	str	x9, [sp, #48]
   149e4:	ldr	w8, [sp, #80]
   149e8:	cbnz	w8, 14a2c <uncompress2@@ZLIB_1.2.9+0x16c>
   149ec:	ldr	x8, [sp, #56]
   149f0:	mov	x9, #0xffffffff            	// #4294967295
   149f4:	cmp	x8, x9
   149f8:	b.ls	14a08 <uncompress2@@ZLIB_1.2.9+0x148>  // b.plast
   149fc:	mov	w8, #0xffffffff            	// #-1
   14a00:	str	w8, [sp, #24]
   14a04:	b	14a10 <uncompress2@@ZLIB_1.2.9+0x150>
   14a08:	ldr	x8, [sp, #56]
   14a0c:	str	w8, [sp, #24]
   14a10:	ldr	w8, [sp, #24]
   14a14:	str	w8, [sp, #80]
   14a18:	ldr	w8, [sp, #80]
   14a1c:	mov	w9, w8
   14a20:	ldr	x10, [sp, #56]
   14a24:	subs	x9, x10, x9
   14a28:	str	x9, [sp, #56]
   14a2c:	add	x0, sp, #0x48
   14a30:	mov	w8, wzr
   14a34:	mov	w1, w8
   14a38:	bl	23f0 <inflate@plt>
   14a3c:	str	w0, [sp, #68]
   14a40:	ldr	w8, [sp, #68]
   14a44:	cbz	w8, 1499c <uncompress2@@ZLIB_1.2.9+0xdc>
   14a48:	ldr	x8, [sp, #56]
   14a4c:	ldr	w9, [sp, #80]
   14a50:	mov	w10, w9
   14a54:	add	x8, x8, x10
   14a58:	ldr	x10, [sp, #32]
   14a5c:	ldr	x11, [x10]
   14a60:	ldr	x12, [x11]
   14a64:	subs	x8, x12, x8
   14a68:	str	x8, [x11]
   14a6c:	ldr	x8, [x10, #24]
   14a70:	add	x11, sp, #0x2f
   14a74:	cmp	x8, x11
   14a78:	b.eq	14a90 <uncompress2@@ZLIB_1.2.9+0x1d0>  // b.none
   14a7c:	ldr	x8, [sp, #112]
   14a80:	ldr	x9, [sp, #32]
   14a84:	ldr	x10, [x9, #16]
   14a88:	str	x8, [x10]
   14a8c:	b	14ab0 <uncompress2@@ZLIB_1.2.9+0x1f0>
   14a90:	ldr	x8, [sp, #112]
   14a94:	cbz	x8, 14ab0 <uncompress2@@ZLIB_1.2.9+0x1f0>
   14a98:	ldr	w8, [sp, #68]
   14a9c:	mov	w9, #0xfffffffb            	// #-5
   14aa0:	cmp	w8, w9
   14aa4:	b.ne	14ab0 <uncompress2@@ZLIB_1.2.9+0x1f0>  // b.any
   14aa8:	mov	x8, #0x1                   	// #1
   14aac:	str	x8, [sp, #48]
   14ab0:	add	x0, sp, #0x48
   14ab4:	bl	2550 <inflateEnd@plt>
   14ab8:	ldr	w8, [sp, #68]
   14abc:	cmp	w8, #0x1
   14ac0:	b.ne	14ad0 <uncompress2@@ZLIB_1.2.9+0x210>  // b.any
   14ac4:	mov	w8, wzr
   14ac8:	str	w8, [sp, #20]
   14acc:	b	14b30 <uncompress2@@ZLIB_1.2.9+0x270>
   14ad0:	ldr	w8, [sp, #68]
   14ad4:	cmp	w8, #0x2
   14ad8:	b.ne	14ae8 <uncompress2@@ZLIB_1.2.9+0x228>  // b.any
   14adc:	mov	w8, #0xfffffffd            	// #-3
   14ae0:	str	w8, [sp, #16]
   14ae4:	b	14b28 <uncompress2@@ZLIB_1.2.9+0x268>
   14ae8:	ldr	w8, [sp, #68]
   14aec:	mov	w9, #0xfffffffb            	// #-5
   14af0:	cmp	w8, w9
   14af4:	b.ne	14b18 <uncompress2@@ZLIB_1.2.9+0x258>  // b.any
   14af8:	ldr	x8, [sp, #48]
   14afc:	ldr	w9, [sp, #104]
   14b00:	mov	w10, w9
   14b04:	add	x8, x8, x10
   14b08:	cbz	x8, 14b18 <uncompress2@@ZLIB_1.2.9+0x258>
   14b0c:	mov	w8, #0xfffffffd            	// #-3
   14b10:	str	w8, [sp, #12]
   14b14:	b	14b20 <uncompress2@@ZLIB_1.2.9+0x260>
   14b18:	ldr	w8, [sp, #68]
   14b1c:	str	w8, [sp, #12]
   14b20:	ldr	w8, [sp, #12]
   14b24:	str	w8, [sp, #16]
   14b28:	ldr	w8, [sp, #16]
   14b2c:	str	w8, [sp, #20]
   14b30:	ldr	w8, [sp, #20]
   14b34:	ldr	x9, [sp, #32]
   14b38:	str	w8, [x9, #36]
   14b3c:	ldr	x8, [sp, #32]
   14b40:	ldr	w0, [x8, #36]
   14b44:	ldp	x29, x30, [sp, #224]
   14b48:	add	sp, sp, #0xf0
   14b4c:	ret

0000000000014b50 <uncompress@@Base>:
   14b50:	sub	sp, sp, #0x30
   14b54:	stp	x29, x30, [sp, #32]
   14b58:	add	x29, sp, #0x20
   14b5c:	mov	x8, sp
   14b60:	stur	x0, [x29, #-8]
   14b64:	str	x1, [sp, #16]
   14b68:	str	x2, [sp, #8]
   14b6c:	str	x3, [sp]
   14b70:	ldur	x0, [x29, #-8]
   14b74:	ldr	x1, [sp, #16]
   14b78:	ldr	x2, [sp, #8]
   14b7c:	mov	x3, x8
   14b80:	bl	2540 <uncompress2@plt>
   14b84:	ldp	x29, x30, [sp, #32]
   14b88:	add	sp, sp, #0x30
   14b8c:	ret

0000000000014b90 <gzclose@@Base>:
   14b90:	sub	sp, sp, #0x30
   14b94:	stp	x29, x30, [sp, #32]
   14b98:	add	x29, sp, #0x20
   14b9c:	str	x0, [sp, #16]
   14ba0:	ldr	x8, [sp, #16]
   14ba4:	cbnz	x8, 14bb4 <gzclose@@Base+0x24>
   14ba8:	mov	w8, #0xfffffffe            	// #-2
   14bac:	stur	w8, [x29, #-4]
   14bb0:	b	14bf4 <gzclose@@Base+0x64>
   14bb4:	ldr	x8, [sp, #16]
   14bb8:	str	x8, [sp, #8]
   14bbc:	ldr	x8, [sp, #8]
   14bc0:	ldr	w9, [x8, #24]
   14bc4:	mov	w10, #0x1c4f                	// #7247
   14bc8:	cmp	w9, w10
   14bcc:	b.ne	14be0 <gzclose@@Base+0x50>  // b.any
   14bd0:	ldr	x0, [sp, #16]
   14bd4:	bl	2400 <gzclose_r@plt>
   14bd8:	str	w0, [sp, #4]
   14bdc:	b	14bec <gzclose@@Base+0x5c>
   14be0:	ldr	x0, [sp, #16]
   14be4:	bl	2580 <gzclose_w@plt>
   14be8:	str	w0, [sp, #4]
   14bec:	ldr	w8, [sp, #4]
   14bf0:	stur	w8, [x29, #-4]
   14bf4:	ldur	w0, [x29, #-4]
   14bf8:	ldp	x29, x30, [sp, #32]
   14bfc:	add	sp, sp, #0x30
   14c00:	ret

0000000000014c04 <gzopen@@Base>:
   14c04:	sub	sp, sp, #0x20
   14c08:	stp	x29, x30, [sp, #16]
   14c0c:	add	x29, sp, #0x10
   14c10:	mov	w8, #0xffffffff            	// #-1
   14c14:	str	x0, [sp, #8]
   14c18:	str	x1, [sp]
   14c1c:	ldr	x0, [sp, #8]
   14c20:	ldr	x2, [sp]
   14c24:	mov	w1, w8
   14c28:	bl	14c38 <gzopen@@Base+0x34>
   14c2c:	ldp	x29, x30, [sp, #16]
   14c30:	add	sp, sp, #0x20
   14c34:	ret
   14c38:	sub	sp, sp, #0x70
   14c3c:	stp	x29, x30, [sp, #96]
   14c40:	add	x29, sp, #0x60
   14c44:	stur	x0, [x29, #-16]
   14c48:	stur	w1, [x29, #-20]
   14c4c:	stur	x2, [x29, #-32]
   14c50:	str	wzr, [sp, #40]
   14c54:	str	wzr, [sp, #36]
   14c58:	ldur	x8, [x29, #-16]
   14c5c:	cbnz	x8, 14c6c <gzopen@@Base+0x68>
   14c60:	mov	x8, xzr
   14c64:	stur	x8, [x29, #-8]
   14c68:	b	1505c <gzopen@@Base+0x458>
   14c6c:	mov	x0, #0xe8                  	// #232
   14c70:	bl	2460 <malloc@plt>
   14c74:	stur	x0, [x29, #-40]
   14c78:	ldur	x8, [x29, #-40]
   14c7c:	cbnz	x8, 14c8c <gzopen@@Base+0x88>
   14c80:	mov	x8, xzr
   14c84:	stur	x8, [x29, #-8]
   14c88:	b	1505c <gzopen@@Base+0x458>
   14c8c:	ldur	x8, [x29, #-40]
   14c90:	str	wzr, [x8, #40]
   14c94:	ldur	x8, [x29, #-40]
   14c98:	mov	w9, #0x2000                	// #8192
   14c9c:	str	w9, [x8, #44]
   14ca0:	ldur	x8, [x29, #-40]
   14ca4:	mov	x10, xzr
   14ca8:	str	x10, [x8, #112]
   14cac:	ldur	x8, [x29, #-40]
   14cb0:	str	wzr, [x8, #24]
   14cb4:	ldur	x8, [x29, #-40]
   14cb8:	mov	w9, #0xffffffff            	// #-1
   14cbc:	str	w9, [x8, #88]
   14cc0:	ldur	x8, [x29, #-40]
   14cc4:	str	wzr, [x8, #92]
   14cc8:	ldur	x8, [x29, #-40]
   14ccc:	str	wzr, [x8, #64]
   14cd0:	ldur	x8, [x29, #-32]
   14cd4:	ldrb	w9, [x8]
   14cd8:	cbz	w9, 14e0c <gzopen@@Base+0x208>
   14cdc:	ldur	x8, [x29, #-32]
   14ce0:	ldrb	w9, [x8]
   14ce4:	cmp	w9, #0x30
   14ce8:	b.lt	14d14 <gzopen@@Base+0x110>  // b.tstop
   14cec:	ldur	x8, [x29, #-32]
   14cf0:	ldrb	w9, [x8]
   14cf4:	cmp	w9, #0x39
   14cf8:	b.gt	14d14 <gzopen@@Base+0x110>
   14cfc:	ldur	x8, [x29, #-32]
   14d00:	ldrb	w9, [x8]
   14d04:	subs	w9, w9, #0x30
   14d08:	ldur	x8, [x29, #-40]
   14d0c:	str	w9, [x8, #88]
   14d10:	b	14dfc <gzopen@@Base+0x1f8>
   14d14:	ldur	x8, [x29, #-32]
   14d18:	ldrb	w9, [x8]
   14d1c:	subs	w9, w9, #0x2b
   14d20:	mov	w8, w9
   14d24:	ubfx	x8, x8, #0, #32
   14d28:	cmp	x8, #0x4d
   14d2c:	str	x8, [sp, #24]
   14d30:	b.hi	14dfc <gzopen@@Base+0x1f8>  // b.pmore
   14d34:	adrp	x8, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   14d38:	add	x8, x8, #0x600
   14d3c:	ldr	x11, [sp, #24]
   14d40:	ldrsw	x10, [x8, x11, lsl #2]
   14d44:	add	x9, x8, x10
   14d48:	br	x9
   14d4c:	ldur	x8, [x29, #-40]
   14d50:	mov	w9, #0x1c4f                	// #7247
   14d54:	str	w9, [x8, #24]
   14d58:	b	14dfc <gzopen@@Base+0x1f8>
   14d5c:	ldur	x8, [x29, #-40]
   14d60:	mov	w9, #0x79b1                	// #31153
   14d64:	str	w9, [x8, #24]
   14d68:	b	14dfc <gzopen@@Base+0x1f8>
   14d6c:	ldur	x8, [x29, #-40]
   14d70:	mov	w9, #0x1                   	// #1
   14d74:	str	w9, [x8, #24]
   14d78:	b	14dfc <gzopen@@Base+0x1f8>
   14d7c:	ldur	x0, [x29, #-40]
   14d80:	bl	2570 <free@plt>
   14d84:	mov	x8, xzr
   14d88:	stur	x8, [x29, #-8]
   14d8c:	b	1505c <gzopen@@Base+0x458>
   14d90:	b	14dfc <gzopen@@Base+0x1f8>
   14d94:	mov	w8, #0x1                   	// #1
   14d98:	str	w8, [sp, #40]
   14d9c:	b	14dfc <gzopen@@Base+0x1f8>
   14da0:	mov	w8, #0x1                   	// #1
   14da4:	str	w8, [sp, #36]
   14da8:	b	14dfc <gzopen@@Base+0x1f8>
   14dac:	ldur	x8, [x29, #-40]
   14db0:	mov	w9, #0x1                   	// #1
   14db4:	str	w9, [x8, #92]
   14db8:	b	14dfc <gzopen@@Base+0x1f8>
   14dbc:	ldur	x8, [x29, #-40]
   14dc0:	mov	w9, #0x2                   	// #2
   14dc4:	str	w9, [x8, #92]
   14dc8:	b	14dfc <gzopen@@Base+0x1f8>
   14dcc:	ldur	x8, [x29, #-40]
   14dd0:	mov	w9, #0x3                   	// #3
   14dd4:	str	w9, [x8, #92]
   14dd8:	b	14dfc <gzopen@@Base+0x1f8>
   14ddc:	ldur	x8, [x29, #-40]
   14de0:	mov	w9, #0x4                   	// #4
   14de4:	str	w9, [x8, #92]
   14de8:	b	14dfc <gzopen@@Base+0x1f8>
   14dec:	ldur	x8, [x29, #-40]
   14df0:	mov	w9, #0x1                   	// #1
   14df4:	str	w9, [x8, #64]
   14df8:	b	14dfc <gzopen@@Base+0x1f8>
   14dfc:	ldur	x8, [x29, #-32]
   14e00:	add	x8, x8, #0x1
   14e04:	stur	x8, [x29, #-32]
   14e08:	b	14cd0 <gzopen@@Base+0xcc>
   14e0c:	ldur	x8, [x29, #-40]
   14e10:	ldr	w9, [x8, #24]
   14e14:	cbnz	w9, 14e2c <gzopen@@Base+0x228>
   14e18:	ldur	x0, [x29, #-40]
   14e1c:	bl	2570 <free@plt>
   14e20:	mov	x8, xzr
   14e24:	stur	x8, [x29, #-8]
   14e28:	b	1505c <gzopen@@Base+0x458>
   14e2c:	ldur	x8, [x29, #-40]
   14e30:	ldr	w9, [x8, #24]
   14e34:	mov	w10, #0x1c4f                	// #7247
   14e38:	cmp	w9, w10
   14e3c:	b.ne	14e6c <gzopen@@Base+0x268>  // b.any
   14e40:	ldur	x8, [x29, #-40]
   14e44:	ldr	w9, [x8, #64]
   14e48:	cbz	w9, 14e60 <gzopen@@Base+0x25c>
   14e4c:	ldur	x0, [x29, #-40]
   14e50:	bl	2570 <free@plt>
   14e54:	mov	x8, xzr
   14e58:	stur	x8, [x29, #-8]
   14e5c:	b	1505c <gzopen@@Base+0x458>
   14e60:	ldur	x8, [x29, #-40]
   14e64:	mov	w9, #0x1                   	// #1
   14e68:	str	w9, [x8, #64]
   14e6c:	ldur	x0, [x29, #-16]
   14e70:	bl	23e0 <strlen@plt>
   14e74:	str	x0, [sp, #48]
   14e78:	ldr	x8, [sp, #48]
   14e7c:	add	x0, x8, #0x1
   14e80:	bl	2460 <malloc@plt>
   14e84:	ldur	x8, [x29, #-40]
   14e88:	str	x0, [x8, #32]
   14e8c:	ldur	x8, [x29, #-40]
   14e90:	ldr	x8, [x8, #32]
   14e94:	cbnz	x8, 14eac <gzopen@@Base+0x2a8>
   14e98:	ldur	x0, [x29, #-40]
   14e9c:	bl	2570 <free@plt>
   14ea0:	mov	x8, xzr
   14ea4:	stur	x8, [x29, #-8]
   14ea8:	b	1505c <gzopen@@Base+0x458>
   14eac:	ldur	x8, [x29, #-40]
   14eb0:	ldr	x0, [x8, #32]
   14eb4:	ldr	x8, [sp, #48]
   14eb8:	add	x1, x8, #0x1
   14ebc:	ldur	x3, [x29, #-16]
   14ec0:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   14ec4:	add	x2, x2, #0x752
   14ec8:	bl	2450 <snprintf@plt>
   14ecc:	ldr	w9, [sp, #40]
   14ed0:	mov	w10, wzr
   14ed4:	mov	w11, #0x80000               	// #524288
   14ed8:	cmp	w9, #0x0
   14edc:	csel	w9, w11, w10, ne  // ne = any
   14ee0:	orr	w9, w10, w9
   14ee4:	ldur	x8, [x29, #-40]
   14ee8:	ldr	w10, [x8, #24]
   14eec:	mov	w11, #0x1c4f                	// #7247
   14ef0:	cmp	w10, w11
   14ef4:	str	w9, [sp, #20]
   14ef8:	b.ne	14f08 <gzopen@@Base+0x304>  // b.any
   14efc:	mov	w8, wzr
   14f00:	str	w8, [sp, #16]
   14f04:	b	14f48 <gzopen@@Base+0x344>
   14f08:	ldr	w8, [sp, #36]
   14f0c:	mov	w9, wzr
   14f10:	mov	w10, #0x80                  	// #128
   14f14:	cmp	w8, #0x0
   14f18:	csel	w8, w10, w9, ne  // ne = any
   14f1c:	mov	w9, #0x41                  	// #65
   14f20:	orr	w8, w9, w8
   14f24:	ldur	x11, [x29, #-40]
   14f28:	ldr	w9, [x11, #24]
   14f2c:	mov	w10, #0x79b1                	// #31153
   14f30:	mov	w12, #0x400                 	// #1024
   14f34:	mov	w13, #0x200                 	// #512
   14f38:	cmp	w9, w10
   14f3c:	csel	w9, w13, w12, eq  // eq = none
   14f40:	orr	w8, w8, w9
   14f44:	str	w8, [sp, #16]
   14f48:	ldr	w8, [sp, #16]
   14f4c:	ldr	w9, [sp, #20]
   14f50:	orr	w8, w9, w8
   14f54:	str	w8, [sp, #44]
   14f58:	ldur	w8, [x29, #-20]
   14f5c:	mov	w10, #0xffffffff            	// #-1
   14f60:	cmp	w8, w10
   14f64:	b.le	14f74 <gzopen@@Base+0x370>
   14f68:	ldur	w8, [x29, #-20]
   14f6c:	str	w8, [sp, #12]
   14f70:	b	14f88 <gzopen@@Base+0x384>
   14f74:	ldur	x0, [x29, #-16]
   14f78:	ldr	w1, [sp, #44]
   14f7c:	mov	w2, #0x1b6                 	// #438
   14f80:	bl	2470 <open@plt>
   14f84:	str	w0, [sp, #12]
   14f88:	ldr	w8, [sp, #12]
   14f8c:	ldur	x9, [x29, #-40]
   14f90:	str	w8, [x9, #28]
   14f94:	ldur	x9, [x29, #-40]
   14f98:	ldr	w8, [x9, #28]
   14f9c:	mov	w10, #0xffffffff            	// #-1
   14fa0:	cmp	w8, w10
   14fa4:	b.ne	14fc8 <gzopen@@Base+0x3c4>  // b.any
   14fa8:	ldur	x8, [x29, #-40]
   14fac:	ldr	x0, [x8, #32]
   14fb0:	bl	2570 <free@plt>
   14fb4:	ldur	x0, [x29, #-40]
   14fb8:	bl	2570 <free@plt>
   14fbc:	mov	x8, xzr
   14fc0:	stur	x8, [x29, #-8]
   14fc4:	b	1505c <gzopen@@Base+0x458>
   14fc8:	ldur	x8, [x29, #-40]
   14fcc:	ldr	w9, [x8, #24]
   14fd0:	cmp	w9, #0x1
   14fd4:	b.ne	14ffc <gzopen@@Base+0x3f8>  // b.any
   14fd8:	ldur	x8, [x29, #-40]
   14fdc:	ldr	w0, [x8, #28]
   14fe0:	mov	x8, xzr
   14fe4:	mov	x1, x8
   14fe8:	mov	w2, #0x2                   	// #2
   14fec:	bl	24b0 <lseek64@plt>
   14ff0:	ldur	x8, [x29, #-40]
   14ff4:	mov	w9, #0x79b1                	// #31153
   14ff8:	str	w9, [x8, #24]
   14ffc:	ldur	x8, [x29, #-40]
   15000:	ldr	w9, [x8, #24]
   15004:	mov	w10, #0x1c4f                	// #7247
   15008:	cmp	w9, w10
   1500c:	b.ne	1504c <gzopen@@Base+0x448>  // b.any
   15010:	ldur	x8, [x29, #-40]
   15014:	ldr	w0, [x8, #28]
   15018:	mov	x8, xzr
   1501c:	mov	x1, x8
   15020:	mov	w2, #0x1                   	// #1
   15024:	bl	24b0 <lseek64@plt>
   15028:	ldur	x8, [x29, #-40]
   1502c:	str	x0, [x8, #72]
   15030:	ldur	x8, [x29, #-40]
   15034:	ldr	x8, [x8, #72]
   15038:	mov	x9, #0xffffffffffffffff    	// #-1
   1503c:	cmp	x8, x9
   15040:	b.ne	1504c <gzopen@@Base+0x448>  // b.any
   15044:	ldur	x8, [x29, #-40]
   15048:	str	xzr, [x8, #72]
   1504c:	ldur	x0, [x29, #-40]
   15050:	bl	152b0 <gzrewind@@Base+0xbc>
   15054:	ldur	x8, [x29, #-40]
   15058:	stur	x8, [x29, #-8]
   1505c:	ldur	x0, [x29, #-8]
   15060:	ldp	x29, x30, [sp, #96]
   15064:	add	sp, sp, #0x70
   15068:	ret

000000000001506c <gzopen64@@ZLIB_1.2.3.3>:
   1506c:	sub	sp, sp, #0x20
   15070:	stp	x29, x30, [sp, #16]
   15074:	add	x29, sp, #0x10
   15078:	mov	w8, #0xffffffff            	// #-1
   1507c:	str	x0, [sp, #8]
   15080:	str	x1, [sp]
   15084:	ldr	x0, [sp, #8]
   15088:	ldr	x2, [sp]
   1508c:	mov	w1, w8
   15090:	bl	14c38 <gzopen@@Base+0x34>
   15094:	ldp	x29, x30, [sp, #16]
   15098:	add	sp, sp, #0x20
   1509c:	ret

00000000000150a0 <gzdopen@@Base>:
   150a0:	sub	sp, sp, #0x40
   150a4:	stp	x29, x30, [sp, #48]
   150a8:	add	x29, sp, #0x30
   150ac:	mov	w8, #0xffffffff            	// #-1
   150b0:	stur	w0, [x29, #-12]
   150b4:	str	x1, [sp, #24]
   150b8:	ldur	w9, [x29, #-12]
   150bc:	cmp	w9, w8
   150c0:	b.eq	150d4 <gzdopen@@Base+0x34>  // b.none
   150c4:	mov	x0, #0x13                  	// #19
   150c8:	bl	2460 <malloc@plt>
   150cc:	str	x0, [sp, #16]
   150d0:	cbnz	x0, 150e0 <gzdopen@@Base+0x40>
   150d4:	mov	x8, xzr
   150d8:	stur	x8, [x29, #-8]
   150dc:	b	15120 <gzdopen@@Base+0x80>
   150e0:	ldr	x0, [sp, #16]
   150e4:	ldur	w3, [x29, #-12]
   150e8:	mov	x1, #0x13                  	// #19
   150ec:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   150f0:	add	x2, x2, #0x738
   150f4:	bl	2450 <snprintf@plt>
   150f8:	ldr	x8, [sp, #16]
   150fc:	ldur	w1, [x29, #-12]
   15100:	ldr	x2, [sp, #24]
   15104:	mov	x0, x8
   15108:	bl	14c38 <gzopen@@Base+0x34>
   1510c:	str	x0, [sp, #8]
   15110:	ldr	x0, [sp, #16]
   15114:	bl	2570 <free@plt>
   15118:	ldr	x8, [sp, #8]
   1511c:	stur	x8, [x29, #-8]
   15120:	ldur	x0, [x29, #-8]
   15124:	ldp	x29, x30, [sp, #48]
   15128:	add	sp, sp, #0x40
   1512c:	ret

0000000000015130 <gzbuffer@@ZLIB_1.2.3.5>:
   15130:	sub	sp, sp, #0x20
   15134:	str	x0, [sp, #16]
   15138:	str	w1, [sp, #12]
   1513c:	ldr	x8, [sp, #16]
   15140:	cbnz	x8, 15150 <gzbuffer@@ZLIB_1.2.3.5+0x20>
   15144:	mov	w8, #0xffffffff            	// #-1
   15148:	str	w8, [sp, #28]
   1514c:	b	151e8 <gzbuffer@@ZLIB_1.2.3.5+0xb8>
   15150:	ldr	x8, [sp, #16]
   15154:	str	x8, [sp]
   15158:	ldr	x8, [sp]
   1515c:	ldr	w9, [x8, #24]
   15160:	mov	w10, #0x1c4f                	// #7247
   15164:	cmp	w9, w10
   15168:	b.eq	1518c <gzbuffer@@ZLIB_1.2.3.5+0x5c>  // b.none
   1516c:	ldr	x8, [sp]
   15170:	ldr	w9, [x8, #24]
   15174:	mov	w10, #0x79b1                	// #31153
   15178:	cmp	w9, w10
   1517c:	b.eq	1518c <gzbuffer@@ZLIB_1.2.3.5+0x5c>  // b.none
   15180:	mov	w8, #0xffffffff            	// #-1
   15184:	str	w8, [sp, #28]
   15188:	b	151e8 <gzbuffer@@ZLIB_1.2.3.5+0xb8>
   1518c:	ldr	x8, [sp]
   15190:	ldr	w9, [x8, #40]
   15194:	cbz	w9, 151a4 <gzbuffer@@ZLIB_1.2.3.5+0x74>
   15198:	mov	w8, #0xffffffff            	// #-1
   1519c:	str	w8, [sp, #28]
   151a0:	b	151e8 <gzbuffer@@ZLIB_1.2.3.5+0xb8>
   151a4:	ldr	w8, [sp, #12]
   151a8:	lsl	w8, w8, #1
   151ac:	ldr	w9, [sp, #12]
   151b0:	cmp	w8, w9
   151b4:	b.cs	151c4 <gzbuffer@@ZLIB_1.2.3.5+0x94>  // b.hs, b.nlast
   151b8:	mov	w8, #0xffffffff            	// #-1
   151bc:	str	w8, [sp, #28]
   151c0:	b	151e8 <gzbuffer@@ZLIB_1.2.3.5+0xb8>
   151c4:	ldr	w8, [sp, #12]
   151c8:	cmp	w8, #0x2
   151cc:	b.cs	151d8 <gzbuffer@@ZLIB_1.2.3.5+0xa8>  // b.hs, b.nlast
   151d0:	mov	w8, #0x2                   	// #2
   151d4:	str	w8, [sp, #12]
   151d8:	ldr	w8, [sp, #12]
   151dc:	ldr	x9, [sp]
   151e0:	str	w8, [x9, #44]
   151e4:	str	wzr, [sp, #28]
   151e8:	ldr	w0, [sp, #28]
   151ec:	add	sp, sp, #0x20
   151f0:	ret

00000000000151f4 <gzrewind@@Base>:
   151f4:	sub	sp, sp, #0x30
   151f8:	stp	x29, x30, [sp, #32]
   151fc:	add	x29, sp, #0x20
   15200:	str	x0, [sp, #16]
   15204:	ldr	x8, [sp, #16]
   15208:	cbnz	x8, 15218 <gzrewind@@Base+0x24>
   1520c:	mov	w8, #0xffffffff            	// #-1
   15210:	stur	w8, [x29, #-4]
   15214:	b	152a0 <gzrewind@@Base+0xac>
   15218:	ldr	x8, [sp, #16]
   1521c:	str	x8, [sp, #8]
   15220:	ldr	x8, [sp, #8]
   15224:	ldr	w9, [x8, #24]
   15228:	mov	w10, #0x1c4f                	// #7247
   1522c:	cmp	w9, w10
   15230:	b.ne	15254 <gzrewind@@Base+0x60>  // b.any
   15234:	ldr	x8, [sp, #8]
   15238:	ldr	w9, [x8, #108]
   1523c:	cbz	w9, 15260 <gzrewind@@Base+0x6c>
   15240:	ldr	x8, [sp, #8]
   15244:	ldr	w9, [x8, #108]
   15248:	mov	w10, #0xfffffffb            	// #-5
   1524c:	cmp	w9, w10
   15250:	b.eq	15260 <gzrewind@@Base+0x6c>  // b.none
   15254:	mov	w8, #0xffffffff            	// #-1
   15258:	stur	w8, [x29, #-4]
   1525c:	b	152a0 <gzrewind@@Base+0xac>
   15260:	ldr	x8, [sp, #8]
   15264:	ldr	w0, [x8, #28]
   15268:	ldr	x8, [sp, #8]
   1526c:	ldr	x1, [x8, #72]
   15270:	mov	w9, wzr
   15274:	mov	w2, w9
   15278:	bl	24b0 <lseek64@plt>
   1527c:	mov	x8, #0xffffffffffffffff    	// #-1
   15280:	cmp	x0, x8
   15284:	b.ne	15294 <gzrewind@@Base+0xa0>  // b.any
   15288:	mov	w8, #0xffffffff            	// #-1
   1528c:	stur	w8, [x29, #-4]
   15290:	b	152a0 <gzrewind@@Base+0xac>
   15294:	ldr	x0, [sp, #8]
   15298:	bl	152b0 <gzrewind@@Base+0xbc>
   1529c:	stur	wzr, [x29, #-4]
   152a0:	ldur	w0, [x29, #-4]
   152a4:	ldp	x29, x30, [sp, #32]
   152a8:	add	sp, sp, #0x30
   152ac:	ret
   152b0:	sub	sp, sp, #0x20
   152b4:	stp	x29, x30, [sp, #16]
   152b8:	add	x29, sp, #0x10
   152bc:	mov	w8, #0x1c4f                	// #7247
   152c0:	str	x0, [sp, #8]
   152c4:	ldr	x9, [sp, #8]
   152c8:	str	wzr, [x9]
   152cc:	ldr	x9, [sp, #8]
   152d0:	ldr	w10, [x9, #24]
   152d4:	cmp	w10, w8
   152d8:	b.ne	152f4 <gzrewind@@Base+0x100>  // b.any
   152dc:	ldr	x8, [sp, #8]
   152e0:	str	wzr, [x8, #80]
   152e4:	ldr	x8, [sp, #8]
   152e8:	str	wzr, [x8, #84]
   152ec:	ldr	x8, [sp, #8]
   152f0:	str	wzr, [x8, #68]
   152f4:	ldr	x8, [sp, #8]
   152f8:	mov	w9, wzr
   152fc:	str	wzr, [x8, #104]
   15300:	ldr	x0, [sp, #8]
   15304:	mov	w1, w9
   15308:	mov	x8, xzr
   1530c:	mov	x2, x8
   15310:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   15314:	ldr	x8, [sp, #8]
   15318:	str	xzr, [x8, #16]
   1531c:	ldr	x8, [sp, #8]
   15320:	str	wzr, [x8, #128]
   15324:	ldp	x29, x30, [sp, #16]
   15328:	add	sp, sp, #0x20
   1532c:	ret

0000000000015330 <gzseek64@@ZLIB_1.2.3.3>:
   15330:	sub	sp, sp, #0x50
   15334:	stp	x29, x30, [sp, #64]
   15338:	add	x29, sp, #0x40
   1533c:	stur	x0, [x29, #-16]
   15340:	stur	x1, [x29, #-24]
   15344:	stur	w2, [x29, #-28]
   15348:	ldur	x8, [x29, #-16]
   1534c:	cbnz	x8, 1535c <gzseek64@@ZLIB_1.2.3.3+0x2c>
   15350:	mov	x8, #0xffffffffffffffff    	// #-1
   15354:	stur	x8, [x29, #-8]
   15358:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   1535c:	ldur	x8, [x29, #-16]
   15360:	str	x8, [sp, #16]
   15364:	ldr	x8, [sp, #16]
   15368:	ldr	w9, [x8, #24]
   1536c:	mov	w10, #0x1c4f                	// #7247
   15370:	cmp	w9, w10
   15374:	b.eq	15398 <gzseek64@@ZLIB_1.2.3.3+0x68>  // b.none
   15378:	ldr	x8, [sp, #16]
   1537c:	ldr	w9, [x8, #24]
   15380:	mov	w10, #0x79b1                	// #31153
   15384:	cmp	w9, w10
   15388:	b.eq	15398 <gzseek64@@ZLIB_1.2.3.3+0x68>  // b.none
   1538c:	mov	x8, #0xffffffffffffffff    	// #-1
   15390:	stur	x8, [x29, #-8]
   15394:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   15398:	ldr	x8, [sp, #16]
   1539c:	ldr	w9, [x8, #108]
   153a0:	cbz	w9, 153c4 <gzseek64@@ZLIB_1.2.3.3+0x94>
   153a4:	ldr	x8, [sp, #16]
   153a8:	ldr	w9, [x8, #108]
   153ac:	mov	w10, #0xfffffffb            	// #-5
   153b0:	cmp	w9, w10
   153b4:	b.eq	153c4 <gzseek64@@ZLIB_1.2.3.3+0x94>  // b.none
   153b8:	mov	x8, #0xffffffffffffffff    	// #-1
   153bc:	stur	x8, [x29, #-8]
   153c0:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   153c4:	ldur	w8, [x29, #-28]
   153c8:	cbz	w8, 153e4 <gzseek64@@ZLIB_1.2.3.3+0xb4>
   153cc:	ldur	w8, [x29, #-28]
   153d0:	cmp	w8, #0x1
   153d4:	b.eq	153e4 <gzseek64@@ZLIB_1.2.3.3+0xb4>  // b.none
   153d8:	mov	x8, #0xffffffffffffffff    	// #-1
   153dc:	stur	x8, [x29, #-8]
   153e0:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   153e4:	ldur	w8, [x29, #-28]
   153e8:	cbnz	w8, 15404 <gzseek64@@ZLIB_1.2.3.3+0xd4>
   153ec:	ldr	x8, [sp, #16]
   153f0:	ldr	x8, [x8, #16]
   153f4:	ldur	x9, [x29, #-24]
   153f8:	subs	x8, x9, x8
   153fc:	stur	x8, [x29, #-24]
   15400:	b	15424 <gzseek64@@ZLIB_1.2.3.3+0xf4>
   15404:	ldr	x8, [sp, #16]
   15408:	ldr	w9, [x8, #104]
   1540c:	cbz	w9, 15424 <gzseek64@@ZLIB_1.2.3.3+0xf4>
   15410:	ldr	x8, [sp, #16]
   15414:	ldr	x8, [x8, #96]
   15418:	ldur	x9, [x29, #-24]
   1541c:	add	x8, x9, x8
   15420:	stur	x8, [x29, #-24]
   15424:	ldr	x8, [sp, #16]
   15428:	str	wzr, [x8, #104]
   1542c:	ldr	x8, [sp, #16]
   15430:	ldr	w9, [x8, #24]
   15434:	mov	w10, #0x1c4f                	// #7247
   15438:	cmp	w9, w10
   1543c:	b.ne	15514 <gzseek64@@ZLIB_1.2.3.3+0x1e4>  // b.any
   15440:	ldr	x8, [sp, #16]
   15444:	ldr	w9, [x8, #68]
   15448:	cmp	w9, #0x1
   1544c:	b.ne	15514 <gzseek64@@ZLIB_1.2.3.3+0x1e4>  // b.any
   15450:	ldr	x8, [sp, #16]
   15454:	ldr	x8, [x8, #16]
   15458:	ldur	x9, [x29, #-24]
   1545c:	add	x8, x8, x9
   15460:	cmp	x8, #0x0
   15464:	cset	w10, lt  // lt = tstop
   15468:	tbnz	w10, #0, 15514 <gzseek64@@ZLIB_1.2.3.3+0x1e4>
   1546c:	ldr	x8, [sp, #16]
   15470:	ldr	w0, [x8, #28]
   15474:	ldur	x8, [x29, #-24]
   15478:	ldr	x9, [sp, #16]
   1547c:	ldr	w10, [x9]
   15480:	mov	w9, w10
   15484:	subs	x1, x8, x9
   15488:	mov	w2, #0x1                   	// #1
   1548c:	bl	24b0 <lseek64@plt>
   15490:	str	x0, [sp, #24]
   15494:	ldr	x8, [sp, #24]
   15498:	mov	x9, #0xffffffffffffffff    	// #-1
   1549c:	cmp	x8, x9
   154a0:	b.ne	154b0 <gzseek64@@ZLIB_1.2.3.3+0x180>  // b.any
   154a4:	mov	x8, #0xffffffffffffffff    	// #-1
   154a8:	stur	x8, [x29, #-8]
   154ac:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   154b0:	ldr	x8, [sp, #16]
   154b4:	mov	w9, wzr
   154b8:	str	wzr, [x8]
   154bc:	ldr	x8, [sp, #16]
   154c0:	str	wzr, [x8, #80]
   154c4:	ldr	x8, [sp, #16]
   154c8:	str	wzr, [x8, #84]
   154cc:	ldr	x8, [sp, #16]
   154d0:	str	wzr, [x8, #104]
   154d4:	ldr	x0, [sp, #16]
   154d8:	mov	w1, w9
   154dc:	mov	x8, xzr
   154e0:	mov	x2, x8
   154e4:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   154e8:	ldr	x8, [sp, #16]
   154ec:	str	wzr, [x8, #128]
   154f0:	ldur	x8, [x29, #-24]
   154f4:	ldr	x10, [sp, #16]
   154f8:	ldr	x11, [x10, #16]
   154fc:	add	x8, x11, x8
   15500:	str	x8, [x10, #16]
   15504:	ldr	x8, [sp, #16]
   15508:	ldr	x8, [x8, #16]
   1550c:	stur	x8, [x29, #-8]
   15510:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   15514:	ldur	x8, [x29, #-24]
   15518:	cmp	x8, #0x0
   1551c:	cset	w9, ge  // ge = tcont
   15520:	tbnz	w9, #0, 15594 <gzseek64@@ZLIB_1.2.3.3+0x264>
   15524:	ldr	x8, [sp, #16]
   15528:	ldr	w9, [x8, #24]
   1552c:	mov	w10, #0x1c4f                	// #7247
   15530:	cmp	w9, w10
   15534:	b.eq	15544 <gzseek64@@ZLIB_1.2.3.3+0x214>  // b.none
   15538:	mov	x8, #0xffffffffffffffff    	// #-1
   1553c:	stur	x8, [x29, #-8]
   15540:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   15544:	ldr	x8, [sp, #16]
   15548:	ldr	x8, [x8, #16]
   1554c:	ldur	x9, [x29, #-24]
   15550:	add	x8, x9, x8
   15554:	stur	x8, [x29, #-24]
   15558:	ldur	x8, [x29, #-24]
   1555c:	cmp	x8, #0x0
   15560:	cset	w10, ge  // ge = tcont
   15564:	tbnz	w10, #0, 15574 <gzseek64@@ZLIB_1.2.3.3+0x244>
   15568:	mov	x8, #0xffffffffffffffff    	// #-1
   1556c:	stur	x8, [x29, #-8]
   15570:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   15574:	ldur	x0, [x29, #-16]
   15578:	bl	25a0 <gzrewind@plt>
   1557c:	mov	w8, #0xffffffff            	// #-1
   15580:	cmp	w0, w8
   15584:	b.ne	15594 <gzseek64@@ZLIB_1.2.3.3+0x264>  // b.any
   15588:	mov	x8, #0xffffffffffffffff    	// #-1
   1558c:	stur	x8, [x29, #-8]
   15590:	b	1566c <gzseek64@@ZLIB_1.2.3.3+0x33c>
   15594:	ldr	x8, [sp, #16]
   15598:	ldr	w9, [x8, #24]
   1559c:	mov	w10, #0x1c4f                	// #7247
   155a0:	cmp	w9, w10
   155a4:	b.ne	15638 <gzseek64@@ZLIB_1.2.3.3+0x308>  // b.any
   155a8:	ldr	x8, [sp, #16]
   155ac:	ldr	w9, [x8]
   155b0:	mov	w8, w9
   155b4:	ldur	x10, [x29, #-24]
   155b8:	cmp	x8, x10
   155bc:	b.le	155cc <gzseek64@@ZLIB_1.2.3.3+0x29c>
   155c0:	ldur	x8, [x29, #-24]
   155c4:	str	w8, [sp, #12]
   155c8:	b	155d8 <gzseek64@@ZLIB_1.2.3.3+0x2a8>
   155cc:	ldr	x8, [sp, #16]
   155d0:	ldr	w9, [x8]
   155d4:	str	w9, [sp, #12]
   155d8:	ldr	w8, [sp, #12]
   155dc:	str	w8, [sp, #32]
   155e0:	ldr	w8, [sp, #32]
   155e4:	ldr	x9, [sp, #16]
   155e8:	ldr	w10, [x9]
   155ec:	subs	w8, w10, w8
   155f0:	str	w8, [x9]
   155f4:	ldr	w8, [sp, #32]
   155f8:	mov	w9, w8
   155fc:	ldr	x11, [sp, #16]
   15600:	ldr	x12, [x11, #8]
   15604:	add	x9, x12, x9
   15608:	str	x9, [x11, #8]
   1560c:	ldr	w8, [sp, #32]
   15610:	mov	w9, w8
   15614:	ldr	x11, [sp, #16]
   15618:	ldr	x12, [x11, #16]
   1561c:	add	x9, x12, x9
   15620:	str	x9, [x11, #16]
   15624:	ldr	w8, [sp, #32]
   15628:	mov	w9, w8
   1562c:	ldur	x11, [x29, #-24]
   15630:	subs	x9, x11, x9
   15634:	stur	x9, [x29, #-24]
   15638:	ldur	x8, [x29, #-24]
   1563c:	cbz	x8, 15658 <gzseek64@@ZLIB_1.2.3.3+0x328>
   15640:	ldr	x8, [sp, #16]
   15644:	mov	w9, #0x1                   	// #1
   15648:	str	w9, [x8, #104]
   1564c:	ldur	x8, [x29, #-24]
   15650:	ldr	x10, [sp, #16]
   15654:	str	x8, [x10, #96]
   15658:	ldr	x8, [sp, #16]
   1565c:	ldr	x8, [x8, #16]
   15660:	ldur	x9, [x29, #-24]
   15664:	add	x8, x8, x9
   15668:	stur	x8, [x29, #-8]
   1566c:	ldur	x0, [x29, #-8]
   15670:	ldp	x29, x30, [sp, #64]
   15674:	add	sp, sp, #0x50
   15678:	ret
   1567c:	sub	sp, sp, #0x40
   15680:	stp	x29, x30, [sp, #48]
   15684:	add	x29, sp, #0x30
   15688:	stur	x0, [x29, #-8]
   1568c:	stur	w1, [x29, #-12]
   15690:	str	x2, [sp, #24]
   15694:	ldur	x8, [x29, #-8]
   15698:	ldr	x8, [x8, #112]
   1569c:	cbz	x8, 156cc <gzseek64@@ZLIB_1.2.3.3+0x39c>
   156a0:	ldur	x8, [x29, #-8]
   156a4:	ldr	w9, [x8, #108]
   156a8:	mov	w10, #0xfffffffc            	// #-4
   156ac:	cmp	w9, w10
   156b0:	b.eq	156c0 <gzseek64@@ZLIB_1.2.3.3+0x390>  // b.none
   156b4:	ldur	x8, [x29, #-8]
   156b8:	ldr	x0, [x8, #112]
   156bc:	bl	2570 <free@plt>
   156c0:	ldur	x8, [x29, #-8]
   156c4:	mov	x9, xzr
   156c8:	str	x9, [x8, #112]
   156cc:	ldur	w8, [x29, #-12]
   156d0:	cbz	w8, 156ec <gzseek64@@ZLIB_1.2.3.3+0x3bc>
   156d4:	ldur	w8, [x29, #-12]
   156d8:	mov	w9, #0xfffffffb            	// #-5
   156dc:	cmp	w8, w9
   156e0:	b.eq	156ec <gzseek64@@ZLIB_1.2.3.3+0x3bc>  // b.none
   156e4:	ldur	x8, [x29, #-8]
   156e8:	str	wzr, [x8]
   156ec:	ldur	w8, [x29, #-12]
   156f0:	ldur	x9, [x29, #-8]
   156f4:	str	w8, [x9, #108]
   156f8:	ldr	x9, [sp, #24]
   156fc:	cbnz	x9, 15704 <gzseek64@@ZLIB_1.2.3.3+0x3d4>
   15700:	b	157bc <gzseek64@@ZLIB_1.2.3.3+0x48c>
   15704:	ldur	w8, [x29, #-12]
   15708:	mov	w9, #0xfffffffc            	// #-4
   1570c:	cmp	w8, w9
   15710:	b.ne	15718 <gzseek64@@ZLIB_1.2.3.3+0x3e8>  // b.any
   15714:	b	157bc <gzseek64@@ZLIB_1.2.3.3+0x48c>
   15718:	ldur	x8, [x29, #-8]
   1571c:	ldr	x0, [x8, #32]
   15720:	bl	23e0 <strlen@plt>
   15724:	ldr	x8, [sp, #24]
   15728:	str	x0, [sp, #16]
   1572c:	mov	x0, x8
   15730:	bl	23e0 <strlen@plt>
   15734:	ldr	x8, [sp, #16]
   15738:	add	x9, x8, x0
   1573c:	add	x0, x9, #0x3
   15740:	bl	2460 <malloc@plt>
   15744:	ldur	x8, [x29, #-8]
   15748:	str	x0, [x8, #112]
   1574c:	cbnz	x0, 15760 <gzseek64@@ZLIB_1.2.3.3+0x430>
   15750:	ldur	x8, [x29, #-8]
   15754:	mov	w9, #0xfffffffc            	// #-4
   15758:	str	w9, [x8, #108]
   1575c:	b	157bc <gzseek64@@ZLIB_1.2.3.3+0x48c>
   15760:	ldur	x8, [x29, #-8]
   15764:	ldr	x0, [x8, #112]
   15768:	ldur	x8, [x29, #-8]
   1576c:	ldr	x8, [x8, #32]
   15770:	str	x0, [sp, #8]
   15774:	mov	x0, x8
   15778:	bl	23e0 <strlen@plt>
   1577c:	ldr	x8, [sp, #24]
   15780:	str	x0, [sp]
   15784:	mov	x0, x8
   15788:	bl	23e0 <strlen@plt>
   1578c:	ldr	x8, [sp]
   15790:	add	x9, x8, x0
   15794:	add	x1, x9, #0x3
   15798:	ldur	x9, [x29, #-8]
   1579c:	ldr	x3, [x9, #32]
   157a0:	ldr	x5, [sp, #24]
   157a4:	ldr	x0, [sp, #8]
   157a8:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   157ac:	add	x2, x2, #0x74e
   157b0:	adrp	x4, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   157b4:	add	x4, x4, #0x755
   157b8:	bl	2450 <snprintf@plt>
   157bc:	ldp	x29, x30, [sp, #48]
   157c0:	add	sp, sp, #0x40
   157c4:	ret

00000000000157c8 <gzseek@@Base>:
   157c8:	sub	sp, sp, #0x40
   157cc:	stp	x29, x30, [sp, #48]
   157d0:	add	x29, sp, #0x30
   157d4:	stur	x0, [x29, #-8]
   157d8:	stur	x1, [x29, #-16]
   157dc:	stur	w2, [x29, #-20]
   157e0:	ldur	x0, [x29, #-8]
   157e4:	ldur	x1, [x29, #-16]
   157e8:	ldur	w2, [x29, #-20]
   157ec:	bl	23d0 <gzseek64@plt>
   157f0:	str	x0, [sp, #16]
   157f4:	ldr	x8, [sp, #16]
   157f8:	ldr	x9, [sp, #16]
   157fc:	cmp	x8, x9
   15800:	b.ne	15810 <gzseek@@Base+0x48>  // b.any
   15804:	ldr	x8, [sp, #16]
   15808:	str	x8, [sp, #8]
   1580c:	b	15818 <gzseek@@Base+0x50>
   15810:	mov	x8, #0xffffffffffffffff    	// #-1
   15814:	str	x8, [sp, #8]
   15818:	ldr	x8, [sp, #8]
   1581c:	mov	x0, x8
   15820:	ldp	x29, x30, [sp, #48]
   15824:	add	sp, sp, #0x40
   15828:	ret

000000000001582c <gztell64@@ZLIB_1.2.3.3>:
   1582c:	sub	sp, sp, #0x30
   15830:	str	x0, [sp, #32]
   15834:	ldr	x8, [sp, #32]
   15838:	cbnz	x8, 15848 <gztell64@@ZLIB_1.2.3.3+0x1c>
   1583c:	mov	x8, #0xffffffffffffffff    	// #-1
   15840:	str	x8, [sp, #40]
   15844:	b	158c4 <gztell64@@ZLIB_1.2.3.3+0x98>
   15848:	ldr	x8, [sp, #32]
   1584c:	str	x8, [sp, #24]
   15850:	ldr	x8, [sp, #24]
   15854:	ldr	w9, [x8, #24]
   15858:	mov	w10, #0x1c4f                	// #7247
   1585c:	cmp	w9, w10
   15860:	b.eq	15884 <gztell64@@ZLIB_1.2.3.3+0x58>  // b.none
   15864:	ldr	x8, [sp, #24]
   15868:	ldr	w9, [x8, #24]
   1586c:	mov	w10, #0x79b1                	// #31153
   15870:	cmp	w9, w10
   15874:	b.eq	15884 <gztell64@@ZLIB_1.2.3.3+0x58>  // b.none
   15878:	mov	x8, #0xffffffffffffffff    	// #-1
   1587c:	str	x8, [sp, #40]
   15880:	b	158c4 <gztell64@@ZLIB_1.2.3.3+0x98>
   15884:	ldr	x8, [sp, #24]
   15888:	ldr	x8, [x8, #16]
   1588c:	ldr	x9, [sp, #24]
   15890:	ldr	w10, [x9, #104]
   15894:	str	x8, [sp, #16]
   15898:	cbz	w10, 158ac <gztell64@@ZLIB_1.2.3.3+0x80>
   1589c:	ldr	x8, [sp, #24]
   158a0:	ldr	x8, [x8, #96]
   158a4:	str	x8, [sp, #8]
   158a8:	b	158b4 <gztell64@@ZLIB_1.2.3.3+0x88>
   158ac:	mov	x8, xzr
   158b0:	str	x8, [sp, #8]
   158b4:	ldr	x8, [sp, #8]
   158b8:	ldr	x9, [sp, #16]
   158bc:	add	x8, x9, x8
   158c0:	str	x8, [sp, #40]
   158c4:	ldr	x0, [sp, #40]
   158c8:	add	sp, sp, #0x30
   158cc:	ret

00000000000158d0 <gztell@@Base>:
   158d0:	sub	sp, sp, #0x30
   158d4:	stp	x29, x30, [sp, #32]
   158d8:	add	x29, sp, #0x20
   158dc:	stur	x0, [x29, #-8]
   158e0:	ldur	x0, [x29, #-8]
   158e4:	bl	24c0 <gztell64@plt>
   158e8:	str	x0, [sp, #16]
   158ec:	ldr	x8, [sp, #16]
   158f0:	ldr	x9, [sp, #16]
   158f4:	cmp	x8, x9
   158f8:	b.ne	15908 <gztell@@Base+0x38>  // b.any
   158fc:	ldr	x8, [sp, #16]
   15900:	str	x8, [sp, #8]
   15904:	b	15910 <gztell@@Base+0x40>
   15908:	mov	x8, #0xffffffffffffffff    	// #-1
   1590c:	str	x8, [sp, #8]
   15910:	ldr	x8, [sp, #8]
   15914:	mov	x0, x8
   15918:	ldp	x29, x30, [sp, #32]
   1591c:	add	sp, sp, #0x30
   15920:	ret

0000000000015924 <gzoffset64@@ZLIB_1.2.3.5>:
   15924:	sub	sp, sp, #0x30
   15928:	stp	x29, x30, [sp, #32]
   1592c:	add	x29, sp, #0x20
   15930:	str	x0, [sp, #16]
   15934:	ldr	x8, [sp, #16]
   15938:	cbnz	x8, 15948 <gzoffset64@@ZLIB_1.2.3.5+0x24>
   1593c:	mov	x8, #0xffffffffffffffff    	// #-1
   15940:	stur	x8, [x29, #-8]
   15944:	b	159f0 <gzoffset64@@ZLIB_1.2.3.5+0xcc>
   15948:	ldr	x8, [sp, #16]
   1594c:	str	x8, [sp]
   15950:	ldr	x8, [sp]
   15954:	ldr	w9, [x8, #24]
   15958:	mov	w10, #0x1c4f                	// #7247
   1595c:	cmp	w9, w10
   15960:	b.eq	15984 <gzoffset64@@ZLIB_1.2.3.5+0x60>  // b.none
   15964:	ldr	x8, [sp]
   15968:	ldr	w9, [x8, #24]
   1596c:	mov	w10, #0x79b1                	// #31153
   15970:	cmp	w9, w10
   15974:	b.eq	15984 <gzoffset64@@ZLIB_1.2.3.5+0x60>  // b.none
   15978:	mov	x8, #0xffffffffffffffff    	// #-1
   1597c:	stur	x8, [x29, #-8]
   15980:	b	159f0 <gzoffset64@@ZLIB_1.2.3.5+0xcc>
   15984:	ldr	x8, [sp]
   15988:	ldr	w0, [x8, #28]
   1598c:	mov	x8, xzr
   15990:	mov	x1, x8
   15994:	mov	w2, #0x1                   	// #1
   15998:	bl	24b0 <lseek64@plt>
   1599c:	str	x0, [sp, #8]
   159a0:	ldr	x8, [sp, #8]
   159a4:	mov	x9, #0xffffffffffffffff    	// #-1
   159a8:	cmp	x8, x9
   159ac:	b.ne	159bc <gzoffset64@@ZLIB_1.2.3.5+0x98>  // b.any
   159b0:	mov	x8, #0xffffffffffffffff    	// #-1
   159b4:	stur	x8, [x29, #-8]
   159b8:	b	159f0 <gzoffset64@@ZLIB_1.2.3.5+0xcc>
   159bc:	ldr	x8, [sp]
   159c0:	ldr	w9, [x8, #24]
   159c4:	mov	w10, #0x1c4f                	// #7247
   159c8:	cmp	w9, w10
   159cc:	b.ne	159e8 <gzoffset64@@ZLIB_1.2.3.5+0xc4>  // b.any
   159d0:	ldr	x8, [sp]
   159d4:	ldr	w9, [x8, #128]
   159d8:	mov	w8, w9
   159dc:	ldr	x10, [sp, #8]
   159e0:	subs	x8, x10, x8
   159e4:	str	x8, [sp, #8]
   159e8:	ldr	x8, [sp, #8]
   159ec:	stur	x8, [x29, #-8]
   159f0:	ldur	x0, [x29, #-8]
   159f4:	ldp	x29, x30, [sp, #32]
   159f8:	add	sp, sp, #0x30
   159fc:	ret

0000000000015a00 <gzoffset@@ZLIB_1.2.3.5>:
   15a00:	sub	sp, sp, #0x30
   15a04:	stp	x29, x30, [sp, #32]
   15a08:	add	x29, sp, #0x20
   15a0c:	stur	x0, [x29, #-8]
   15a10:	ldur	x0, [x29, #-8]
   15a14:	bl	25b0 <gzoffset64@plt>
   15a18:	str	x0, [sp, #16]
   15a1c:	ldr	x8, [sp, #16]
   15a20:	ldr	x9, [sp, #16]
   15a24:	cmp	x8, x9
   15a28:	b.ne	15a38 <gzoffset@@ZLIB_1.2.3.5+0x38>  // b.any
   15a2c:	ldr	x8, [sp, #16]
   15a30:	str	x8, [sp, #8]
   15a34:	b	15a40 <gzoffset@@ZLIB_1.2.3.5+0x40>
   15a38:	mov	x8, #0xffffffffffffffff    	// #-1
   15a3c:	str	x8, [sp, #8]
   15a40:	ldr	x8, [sp, #8]
   15a44:	mov	x0, x8
   15a48:	ldp	x29, x30, [sp, #32]
   15a4c:	add	sp, sp, #0x30
   15a50:	ret

0000000000015a54 <gzeof@@Base>:
   15a54:	sub	sp, sp, #0x20
   15a58:	str	x0, [sp, #16]
   15a5c:	ldr	x8, [sp, #16]
   15a60:	cbnz	x8, 15a6c <gzeof@@Base+0x18>
   15a64:	str	wzr, [sp, #28]
   15a68:	b	15ad8 <gzeof@@Base+0x84>
   15a6c:	ldr	x8, [sp, #16]
   15a70:	str	x8, [sp, #8]
   15a74:	ldr	x8, [sp, #8]
   15a78:	ldr	w9, [x8, #24]
   15a7c:	mov	w10, #0x1c4f                	// #7247
   15a80:	cmp	w9, w10
   15a84:	b.eq	15aa4 <gzeof@@Base+0x50>  // b.none
   15a88:	ldr	x8, [sp, #8]
   15a8c:	ldr	w9, [x8, #24]
   15a90:	mov	w10, #0x79b1                	// #31153
   15a94:	cmp	w9, w10
   15a98:	b.eq	15aa4 <gzeof@@Base+0x50>  // b.none
   15a9c:	str	wzr, [sp, #28]
   15aa0:	b	15ad8 <gzeof@@Base+0x84>
   15aa4:	ldr	x8, [sp, #8]
   15aa8:	ldr	w9, [x8, #24]
   15aac:	mov	w10, #0x1c4f                	// #7247
   15ab0:	cmp	w9, w10
   15ab4:	b.ne	15ac8 <gzeof@@Base+0x74>  // b.any
   15ab8:	ldr	x8, [sp, #8]
   15abc:	ldr	w9, [x8, #84]
   15ac0:	str	w9, [sp, #4]
   15ac4:	b	15ad0 <gzeof@@Base+0x7c>
   15ac8:	mov	w8, wzr
   15acc:	str	w8, [sp, #4]
   15ad0:	ldr	w8, [sp, #4]
   15ad4:	str	w8, [sp, #28]
   15ad8:	ldr	w0, [sp, #28]
   15adc:	add	sp, sp, #0x20
   15ae0:	ret

0000000000015ae4 <gzerror@@Base>:
   15ae4:	sub	sp, sp, #0x30
   15ae8:	str	x0, [sp, #32]
   15aec:	str	x1, [sp, #24]
   15af0:	ldr	x8, [sp, #32]
   15af4:	cbnz	x8, 15b04 <gzerror@@Base+0x20>
   15af8:	mov	x8, xzr
   15afc:	str	x8, [sp, #40]
   15b00:	b	15bb4 <gzerror@@Base+0xd0>
   15b04:	ldr	x8, [sp, #32]
   15b08:	str	x8, [sp, #16]
   15b0c:	ldr	x8, [sp, #16]
   15b10:	ldr	w9, [x8, #24]
   15b14:	mov	w10, #0x1c4f                	// #7247
   15b18:	cmp	w9, w10
   15b1c:	b.eq	15b40 <gzerror@@Base+0x5c>  // b.none
   15b20:	ldr	x8, [sp, #16]
   15b24:	ldr	w9, [x8, #24]
   15b28:	mov	w10, #0x79b1                	// #31153
   15b2c:	cmp	w9, w10
   15b30:	b.eq	15b40 <gzerror@@Base+0x5c>  // b.none
   15b34:	mov	x8, xzr
   15b38:	str	x8, [sp, #40]
   15b3c:	b	15bb4 <gzerror@@Base+0xd0>
   15b40:	ldr	x8, [sp, #24]
   15b44:	cbz	x8, 15b58 <gzerror@@Base+0x74>
   15b48:	ldr	x8, [sp, #16]
   15b4c:	ldr	w9, [x8, #108]
   15b50:	ldr	x8, [sp, #24]
   15b54:	str	w9, [x8]
   15b58:	ldr	x8, [sp, #16]
   15b5c:	ldr	w9, [x8, #108]
   15b60:	mov	w10, #0xfffffffc            	// #-4
   15b64:	cmp	w9, w10
   15b68:	b.ne	15b7c <gzerror@@Base+0x98>  // b.any
   15b6c:	adrp	x8, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   15b70:	add	x8, x8, #0x740
   15b74:	str	x8, [sp, #8]
   15b78:	b	15bac <gzerror@@Base+0xc8>
   15b7c:	ldr	x8, [sp, #16]
   15b80:	ldr	x8, [x8, #112]
   15b84:	cbnz	x8, 15b98 <gzerror@@Base+0xb4>
   15b88:	adrp	x8, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   15b8c:	add	x8, x8, #0x757
   15b90:	str	x8, [sp]
   15b94:	b	15ba4 <gzerror@@Base+0xc0>
   15b98:	ldr	x8, [sp, #16]
   15b9c:	ldr	x8, [x8, #112]
   15ba0:	str	x8, [sp]
   15ba4:	ldr	x8, [sp]
   15ba8:	str	x8, [sp, #8]
   15bac:	ldr	x8, [sp, #8]
   15bb0:	str	x8, [sp, #40]
   15bb4:	ldr	x0, [sp, #40]
   15bb8:	add	sp, sp, #0x30
   15bbc:	ret

0000000000015bc0 <gzclearerr@@ZLIB_1.2.0.2>:
   15bc0:	sub	sp, sp, #0x20
   15bc4:	stp	x29, x30, [sp, #16]
   15bc8:	add	x29, sp, #0x10
   15bcc:	str	x0, [sp, #8]
   15bd0:	ldr	x8, [sp, #8]
   15bd4:	cbnz	x8, 15bdc <gzclearerr@@ZLIB_1.2.0.2+0x1c>
   15bd8:	b	15c4c <gzclearerr@@ZLIB_1.2.0.2+0x8c>
   15bdc:	ldr	x8, [sp, #8]
   15be0:	str	x8, [sp]
   15be4:	ldr	x8, [sp]
   15be8:	ldr	w9, [x8, #24]
   15bec:	mov	w10, #0x1c4f                	// #7247
   15bf0:	cmp	w9, w10
   15bf4:	b.eq	15c10 <gzclearerr@@ZLIB_1.2.0.2+0x50>  // b.none
   15bf8:	ldr	x8, [sp]
   15bfc:	ldr	w9, [x8, #24]
   15c00:	mov	w10, #0x79b1                	// #31153
   15c04:	cmp	w9, w10
   15c08:	b.eq	15c10 <gzclearerr@@ZLIB_1.2.0.2+0x50>  // b.none
   15c0c:	b	15c4c <gzclearerr@@ZLIB_1.2.0.2+0x8c>
   15c10:	ldr	x8, [sp]
   15c14:	ldr	w9, [x8, #24]
   15c18:	mov	w10, #0x1c4f                	// #7247
   15c1c:	cmp	w9, w10
   15c20:	b.ne	15c34 <gzclearerr@@ZLIB_1.2.0.2+0x74>  // b.any
   15c24:	ldr	x8, [sp]
   15c28:	str	wzr, [x8, #80]
   15c2c:	ldr	x8, [sp]
   15c30:	str	wzr, [x8, #84]
   15c34:	ldr	x0, [sp]
   15c38:	mov	w8, wzr
   15c3c:	mov	w1, w8
   15c40:	mov	x9, xzr
   15c44:	mov	x2, x9
   15c48:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   15c4c:	ldp	x29, x30, [sp, #16]
   15c50:	add	sp, sp, #0x20
   15c54:	ret

0000000000015c58 <gzread@@Base>:
   15c58:	sub	sp, sp, #0x40
   15c5c:	stp	x29, x30, [sp, #48]
   15c60:	add	x29, sp, #0x30
   15c64:	stur	x0, [x29, #-16]
   15c68:	str	x1, [sp, #24]
   15c6c:	str	w2, [sp, #20]
   15c70:	ldur	x8, [x29, #-16]
   15c74:	cbnz	x8, 15c84 <gzread@@Base+0x2c>
   15c78:	mov	w8, #0xffffffff            	// #-1
   15c7c:	stur	w8, [x29, #-4]
   15c80:	b	15d50 <gzread@@Base+0xf8>
   15c84:	ldur	x8, [x29, #-16]
   15c88:	str	x8, [sp, #8]
   15c8c:	ldr	x8, [sp, #8]
   15c90:	ldr	w9, [x8, #24]
   15c94:	mov	w10, #0x1c4f                	// #7247
   15c98:	cmp	w9, w10
   15c9c:	b.ne	15cc0 <gzread@@Base+0x68>  // b.any
   15ca0:	ldr	x8, [sp, #8]
   15ca4:	ldr	w9, [x8, #108]
   15ca8:	cbz	w9, 15ccc <gzread@@Base+0x74>
   15cac:	ldr	x8, [sp, #8]
   15cb0:	ldr	w9, [x8, #108]
   15cb4:	mov	w10, #0xfffffffb            	// #-5
   15cb8:	cmp	w9, w10
   15cbc:	b.eq	15ccc <gzread@@Base+0x74>  // b.none
   15cc0:	mov	w8, #0xffffffff            	// #-1
   15cc4:	stur	w8, [x29, #-4]
   15cc8:	b	15d50 <gzread@@Base+0xf8>
   15ccc:	ldr	w8, [sp, #20]
   15cd0:	cmp	w8, #0x0
   15cd4:	cset	w8, ge  // ge = tcont
   15cd8:	tbnz	w8, #0, 15cfc <gzread@@Base+0xa4>
   15cdc:	ldr	x0, [sp, #8]
   15ce0:	mov	w1, #0xfffffffe            	// #-2
   15ce4:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   15ce8:	add	x2, x2, #0x758
   15cec:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   15cf0:	mov	w8, #0xffffffff            	// #-1
   15cf4:	stur	w8, [x29, #-4]
   15cf8:	b	15d50 <gzread@@Base+0xf8>
   15cfc:	ldr	x0, [sp, #8]
   15d00:	ldr	x1, [sp, #24]
   15d04:	ldr	w8, [sp, #20]
   15d08:	mov	w2, w8
   15d0c:	bl	15d60 <gzread@@Base+0x108>
   15d10:	str	w0, [sp, #20]
   15d14:	ldr	w8, [sp, #20]
   15d18:	cbnz	w8, 15d48 <gzread@@Base+0xf0>
   15d1c:	ldr	x8, [sp, #8]
   15d20:	ldr	w9, [x8, #108]
   15d24:	cbz	w9, 15d48 <gzread@@Base+0xf0>
   15d28:	ldr	x8, [sp, #8]
   15d2c:	ldr	w9, [x8, #108]
   15d30:	mov	w10, #0xfffffffb            	// #-5
   15d34:	cmp	w9, w10
   15d38:	b.eq	15d48 <gzread@@Base+0xf0>  // b.none
   15d3c:	mov	w8, #0xffffffff            	// #-1
   15d40:	stur	w8, [x29, #-4]
   15d44:	b	15d50 <gzread@@Base+0xf8>
   15d48:	ldr	w8, [sp, #20]
   15d4c:	stur	w8, [x29, #-4]
   15d50:	ldur	w0, [x29, #-4]
   15d54:	ldp	x29, x30, [sp, #48]
   15d58:	add	sp, sp, #0x40
   15d5c:	ret
   15d60:	sub	sp, sp, #0x40
   15d64:	stp	x29, x30, [sp, #48]
   15d68:	add	x29, sp, #0x30
   15d6c:	stur	x0, [x29, #-16]
   15d70:	str	x1, [sp, #24]
   15d74:	str	x2, [sp, #16]
   15d78:	ldr	x8, [sp, #16]
   15d7c:	cbnz	x8, 15d88 <gzread@@Base+0x130>
   15d80:	stur	xzr, [x29, #-8]
   15d84:	b	15fb0 <gzread@@Base+0x358>
   15d88:	ldur	x8, [x29, #-16]
   15d8c:	ldr	w9, [x8, #104]
   15d90:	cbz	w9, 15dc0 <gzread@@Base+0x168>
   15d94:	ldur	x8, [x29, #-16]
   15d98:	str	wzr, [x8, #104]
   15d9c:	ldur	x0, [x29, #-16]
   15da0:	ldur	x8, [x29, #-16]
   15da4:	ldr	x1, [x8, #96]
   15da8:	bl	1646c <gzungetc@@ZLIB_1.2.0.2+0x284>
   15dac:	mov	w9, #0xffffffff            	// #-1
   15db0:	cmp	w0, w9
   15db4:	b.ne	15dc0 <gzread@@Base+0x168>  // b.any
   15db8:	stur	xzr, [x29, #-8]
   15dbc:	b	15fb0 <gzread@@Base+0x358>
   15dc0:	str	xzr, [sp, #8]
   15dc4:	mov	w8, #0xffffffff            	// #-1
   15dc8:	str	w8, [sp, #4]
   15dcc:	ldr	w8, [sp, #4]
   15dd0:	mov	w9, w8
   15dd4:	ldr	x10, [sp, #16]
   15dd8:	cmp	x9, x10
   15ddc:	b.ls	15de8 <gzread@@Base+0x190>  // b.plast
   15de0:	ldr	x8, [sp, #16]
   15de4:	str	w8, [sp, #4]
   15de8:	ldur	x8, [x29, #-16]
   15dec:	ldr	w9, [x8]
   15df0:	cbz	w9, 15e5c <gzread@@Base+0x204>
   15df4:	ldur	x8, [x29, #-16]
   15df8:	ldr	w9, [x8]
   15dfc:	ldr	w10, [sp, #4]
   15e00:	cmp	w9, w10
   15e04:	b.cs	15e14 <gzread@@Base+0x1bc>  // b.hs, b.nlast
   15e08:	ldur	x8, [x29, #-16]
   15e0c:	ldr	w9, [x8]
   15e10:	str	w9, [sp, #4]
   15e14:	ldr	x0, [sp, #24]
   15e18:	ldur	x8, [x29, #-16]
   15e1c:	ldr	x1, [x8, #8]
   15e20:	ldr	w9, [sp, #4]
   15e24:	mov	w2, w9
   15e28:	bl	23a0 <memcpy@plt>
   15e2c:	ldr	w9, [sp, #4]
   15e30:	mov	w8, w9
   15e34:	ldur	x10, [x29, #-16]
   15e38:	ldr	x11, [x10, #8]
   15e3c:	add	x8, x11, x8
   15e40:	str	x8, [x10, #8]
   15e44:	ldr	w9, [sp, #4]
   15e48:	ldur	x8, [x29, #-16]
   15e4c:	ldr	w12, [x8]
   15e50:	subs	w9, w12, w9
   15e54:	str	w9, [x8]
   15e58:	b	15f4c <gzread@@Base+0x2f4>
   15e5c:	ldur	x8, [x29, #-16]
   15e60:	ldr	w9, [x8, #80]
   15e64:	cbz	w9, 15e84 <gzread@@Base+0x22c>
   15e68:	ldur	x8, [x29, #-16]
   15e6c:	ldr	w9, [x8, #128]
   15e70:	cbnz	w9, 15e84 <gzread@@Base+0x22c>
   15e74:	ldur	x8, [x29, #-16]
   15e78:	mov	w9, #0x1                   	// #1
   15e7c:	str	w9, [x8, #84]
   15e80:	b	15fa8 <gzread@@Base+0x350>
   15e84:	ldur	x8, [x29, #-16]
   15e88:	ldr	w9, [x8, #68]
   15e8c:	cbz	w9, 15ea8 <gzread@@Base+0x250>
   15e90:	ldr	w8, [sp, #4]
   15e94:	ldur	x9, [x29, #-16]
   15e98:	ldr	w10, [x9, #40]
   15e9c:	lsl	w10, w10, #1
   15ea0:	cmp	w8, w10
   15ea4:	b.cs	15ec8 <gzread@@Base+0x270>  // b.hs, b.nlast
   15ea8:	ldur	x0, [x29, #-16]
   15eac:	bl	167fc <gzgets@@Base+0x280>
   15eb0:	mov	w8, #0xffffffff            	// #-1
   15eb4:	cmp	w0, w8
   15eb8:	b.ne	15ec4 <gzread@@Base+0x26c>  // b.any
   15ebc:	stur	xzr, [x29, #-8]
   15ec0:	b	15fb0 <gzread@@Base+0x358>
   15ec4:	b	15fa0 <gzread@@Base+0x348>
   15ec8:	ldur	x8, [x29, #-16]
   15ecc:	ldr	w9, [x8, #68]
   15ed0:	cmp	w9, #0x1
   15ed4:	b.ne	15f04 <gzread@@Base+0x2ac>  // b.any
   15ed8:	ldur	x0, [x29, #-16]
   15edc:	ldr	x1, [sp, #24]
   15ee0:	add	x3, sp, #0x4
   15ee4:	ldr	w2, [sp, #4]
   15ee8:	bl	16d90 <gzclose_r@@ZLIB_1.2.3.5+0x108>
   15eec:	mov	w8, #0xffffffff            	// #-1
   15ef0:	cmp	w0, w8
   15ef4:	b.ne	15f00 <gzread@@Base+0x2a8>  // b.any
   15ef8:	stur	xzr, [x29, #-8]
   15efc:	b	15fb0 <gzread@@Base+0x358>
   15f00:	b	15f4c <gzread@@Base+0x2f4>
   15f04:	ldr	w8, [sp, #4]
   15f08:	ldur	x9, [x29, #-16]
   15f0c:	str	w8, [x9, #152]
   15f10:	ldr	x9, [sp, #24]
   15f14:	ldur	x10, [x29, #-16]
   15f18:	str	x9, [x10, #144]
   15f1c:	ldur	x0, [x29, #-16]
   15f20:	bl	16ec8 <gzclose_r@@ZLIB_1.2.3.5+0x240>
   15f24:	mov	w8, #0xffffffff            	// #-1
   15f28:	cmp	w0, w8
   15f2c:	b.ne	15f38 <gzread@@Base+0x2e0>  // b.any
   15f30:	stur	xzr, [x29, #-8]
   15f34:	b	15fb0 <gzread@@Base+0x358>
   15f38:	ldur	x8, [x29, #-16]
   15f3c:	ldr	w9, [x8]
   15f40:	str	w9, [sp, #4]
   15f44:	ldur	x8, [x29, #-16]
   15f48:	str	wzr, [x8]
   15f4c:	ldr	w8, [sp, #4]
   15f50:	mov	w9, w8
   15f54:	ldr	x10, [sp, #16]
   15f58:	subs	x9, x10, x9
   15f5c:	str	x9, [sp, #16]
   15f60:	ldr	x9, [sp, #24]
   15f64:	ldr	w8, [sp, #4]
   15f68:	mov	w10, w8
   15f6c:	add	x9, x9, x10
   15f70:	str	x9, [sp, #24]
   15f74:	ldr	w8, [sp, #4]
   15f78:	mov	w9, w8
   15f7c:	ldr	x10, [sp, #8]
   15f80:	add	x9, x10, x9
   15f84:	str	x9, [sp, #8]
   15f88:	ldr	w8, [sp, #4]
   15f8c:	mov	w9, w8
   15f90:	ldur	x10, [x29, #-16]
   15f94:	ldr	x11, [x10, #16]
   15f98:	add	x9, x11, x9
   15f9c:	str	x9, [x10, #16]
   15fa0:	ldr	x8, [sp, #16]
   15fa4:	cbnz	x8, 15dc4 <gzread@@Base+0x16c>
   15fa8:	ldr	x8, [sp, #8]
   15fac:	stur	x8, [x29, #-8]
   15fb0:	ldur	x0, [x29, #-8]
   15fb4:	ldp	x29, x30, [sp, #48]
   15fb8:	add	sp, sp, #0x40
   15fbc:	ret

0000000000015fc0 <gzfread@@ZLIB_1.2.9>:
   15fc0:	sub	sp, sp, #0x50
   15fc4:	stp	x29, x30, [sp, #64]
   15fc8:	add	x29, sp, #0x40
   15fcc:	stur	x0, [x29, #-16]
   15fd0:	stur	x1, [x29, #-24]
   15fd4:	str	x2, [sp, #32]
   15fd8:	str	x3, [sp, #24]
   15fdc:	ldr	x8, [sp, #24]
   15fe0:	cbnz	x8, 15fec <gzfread@@ZLIB_1.2.9+0x2c>
   15fe4:	stur	xzr, [x29, #-8]
   15fe8:	b	160b4 <gzfread@@ZLIB_1.2.9+0xf4>
   15fec:	ldr	x8, [sp, #24]
   15ff0:	str	x8, [sp, #8]
   15ff4:	ldr	x8, [sp, #8]
   15ff8:	ldr	w9, [x8, #24]
   15ffc:	mov	w10, #0x1c4f                	// #7247
   16000:	cmp	w9, w10
   16004:	b.ne	16028 <gzfread@@ZLIB_1.2.9+0x68>  // b.any
   16008:	ldr	x8, [sp, #8]
   1600c:	ldr	w9, [x8, #108]
   16010:	cbz	w9, 16030 <gzfread@@ZLIB_1.2.9+0x70>
   16014:	ldr	x8, [sp, #8]
   16018:	ldr	w9, [x8, #108]
   1601c:	mov	w10, #0xfffffffb            	// #-5
   16020:	cmp	w9, w10
   16024:	b.eq	16030 <gzfread@@ZLIB_1.2.9+0x70>  // b.none
   16028:	stur	xzr, [x29, #-8]
   1602c:	b	160b4 <gzfread@@ZLIB_1.2.9+0xf4>
   16030:	ldr	x8, [sp, #32]
   16034:	ldur	x9, [x29, #-24]
   16038:	mul	x8, x8, x9
   1603c:	str	x8, [sp, #16]
   16040:	ldur	x8, [x29, #-24]
   16044:	cbz	x8, 1607c <gzfread@@ZLIB_1.2.9+0xbc>
   16048:	ldr	x8, [sp, #16]
   1604c:	ldur	x9, [x29, #-24]
   16050:	udiv	x8, x8, x9
   16054:	ldr	x9, [sp, #32]
   16058:	cmp	x8, x9
   1605c:	b.eq	1607c <gzfread@@ZLIB_1.2.9+0xbc>  // b.none
   16060:	ldr	x0, [sp, #8]
   16064:	mov	w1, #0xfffffffe            	// #-2
   16068:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   1606c:	add	x2, x2, #0x777
   16070:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16074:	stur	xzr, [x29, #-8]
   16078:	b	160b4 <gzfread@@ZLIB_1.2.9+0xf4>
   1607c:	ldr	x8, [sp, #16]
   16080:	cbz	x8, 160a4 <gzfread@@ZLIB_1.2.9+0xe4>
   16084:	ldr	x0, [sp, #8]
   16088:	ldur	x1, [x29, #-16]
   1608c:	ldr	x2, [sp, #16]
   16090:	bl	15d60 <gzread@@Base+0x108>
   16094:	ldur	x8, [x29, #-24]
   16098:	udiv	x8, x0, x8
   1609c:	str	x8, [sp]
   160a0:	b	160ac <gzfread@@ZLIB_1.2.9+0xec>
   160a4:	mov	x8, xzr
   160a8:	str	x8, [sp]
   160ac:	ldr	x8, [sp]
   160b0:	stur	x8, [x29, #-8]
   160b4:	ldur	x0, [x29, #-8]
   160b8:	ldp	x29, x30, [sp, #64]
   160bc:	add	sp, sp, #0x50
   160c0:	ret

00000000000160c4 <gzgetc@@Base>:
   160c4:	sub	sp, sp, #0x40
   160c8:	stp	x29, x30, [sp, #48]
   160cc:	add	x29, sp, #0x30
   160d0:	stur	x0, [x29, #-16]
   160d4:	ldur	x8, [x29, #-16]
   160d8:	cbnz	x8, 160e8 <gzgetc@@Base+0x24>
   160dc:	mov	w8, #0xffffffff            	// #-1
   160e0:	stur	w8, [x29, #-4]
   160e4:	b	161b4 <gzgetc@@Base+0xf0>
   160e8:	ldur	x8, [x29, #-16]
   160ec:	str	x8, [sp, #16]
   160f0:	ldr	x8, [sp, #16]
   160f4:	ldr	w9, [x8, #24]
   160f8:	mov	w10, #0x1c4f                	// #7247
   160fc:	cmp	w9, w10
   16100:	b.ne	16124 <gzgetc@@Base+0x60>  // b.any
   16104:	ldr	x8, [sp, #16]
   16108:	ldr	w9, [x8, #108]
   1610c:	cbz	w9, 16130 <gzgetc@@Base+0x6c>
   16110:	ldr	x8, [sp, #16]
   16114:	ldr	w9, [x8, #108]
   16118:	mov	w10, #0xfffffffb            	// #-5
   1611c:	cmp	w9, w10
   16120:	b.eq	16130 <gzgetc@@Base+0x6c>  // b.none
   16124:	mov	w8, #0xffffffff            	// #-1
   16128:	stur	w8, [x29, #-4]
   1612c:	b	161b4 <gzgetc@@Base+0xf0>
   16130:	ldr	x8, [sp, #16]
   16134:	ldr	w9, [x8]
   16138:	cbz	w9, 16178 <gzgetc@@Base+0xb4>
   1613c:	ldr	x8, [sp, #16]
   16140:	ldr	w9, [x8]
   16144:	subs	w9, w9, #0x1
   16148:	str	w9, [x8]
   1614c:	ldr	x8, [sp, #16]
   16150:	ldr	x10, [x8, #16]
   16154:	add	x10, x10, #0x1
   16158:	str	x10, [x8, #16]
   1615c:	ldr	x8, [sp, #16]
   16160:	ldr	x10, [x8, #8]
   16164:	add	x11, x10, #0x1
   16168:	str	x11, [x8, #8]
   1616c:	ldrb	w9, [x10]
   16170:	stur	w9, [x29, #-4]
   16174:	b	161b4 <gzgetc@@Base+0xf0>
   16178:	ldr	x0, [sp, #16]
   1617c:	sub	x1, x29, #0x15
   16180:	mov	x2, #0x1                   	// #1
   16184:	bl	15d60 <gzread@@Base+0x108>
   16188:	stur	w0, [x29, #-20]
   1618c:	ldur	w8, [x29, #-20]
   16190:	cmp	w8, #0x1
   16194:	b.ge	161a4 <gzgetc@@Base+0xe0>  // b.tcont
   16198:	mov	w8, #0xffffffff            	// #-1
   1619c:	str	w8, [sp, #12]
   161a0:	b	161ac <gzgetc@@Base+0xe8>
   161a4:	ldurb	w8, [x29, #-21]
   161a8:	str	w8, [sp, #12]
   161ac:	ldr	w8, [sp, #12]
   161b0:	stur	w8, [x29, #-4]
   161b4:	ldur	w0, [x29, #-4]
   161b8:	ldp	x29, x30, [sp, #48]
   161bc:	add	sp, sp, #0x40
   161c0:	ret

00000000000161c4 <gzgetc_@@ZLIB_1.2.5.2>:
   161c4:	sub	sp, sp, #0x20
   161c8:	stp	x29, x30, [sp, #16]
   161cc:	add	x29, sp, #0x10
   161d0:	str	x0, [sp, #8]
   161d4:	ldr	x0, [sp, #8]
   161d8:	bl	2410 <gzgetc@plt>
   161dc:	ldp	x29, x30, [sp, #16]
   161e0:	add	sp, sp, #0x20
   161e4:	ret

00000000000161e8 <gzungetc@@ZLIB_1.2.0.2>:
   161e8:	sub	sp, sp, #0x40
   161ec:	stp	x29, x30, [sp, #48]
   161f0:	add	x29, sp, #0x30
   161f4:	stur	w0, [x29, #-8]
   161f8:	stur	x1, [x29, #-16]
   161fc:	ldur	x8, [x29, #-16]
   16200:	cbnz	x8, 16210 <gzungetc@@ZLIB_1.2.0.2+0x28>
   16204:	mov	w8, #0xffffffff            	// #-1
   16208:	stur	w8, [x29, #-4]
   1620c:	b	1645c <gzungetc@@ZLIB_1.2.0.2+0x274>
   16210:	ldur	x8, [x29, #-16]
   16214:	str	x8, [sp, #24]
   16218:	ldr	x8, [sp, #24]
   1621c:	ldr	w9, [x8, #24]
   16220:	mov	w10, #0x1c4f                	// #7247
   16224:	cmp	w9, w10
   16228:	b.ne	1624c <gzungetc@@ZLIB_1.2.0.2+0x64>  // b.any
   1622c:	ldr	x8, [sp, #24]
   16230:	ldr	w9, [x8, #108]
   16234:	cbz	w9, 16258 <gzungetc@@ZLIB_1.2.0.2+0x70>
   16238:	ldr	x8, [sp, #24]
   1623c:	ldr	w9, [x8, #108]
   16240:	mov	w10, #0xfffffffb            	// #-5
   16244:	cmp	w9, w10
   16248:	b.eq	16258 <gzungetc@@ZLIB_1.2.0.2+0x70>  // b.none
   1624c:	mov	w8, #0xffffffff            	// #-1
   16250:	stur	w8, [x29, #-4]
   16254:	b	1645c <gzungetc@@ZLIB_1.2.0.2+0x274>
   16258:	ldr	x8, [sp, #24]
   1625c:	ldr	w9, [x8, #104]
   16260:	cbz	w9, 16294 <gzungetc@@ZLIB_1.2.0.2+0xac>
   16264:	ldr	x8, [sp, #24]
   16268:	str	wzr, [x8, #104]
   1626c:	ldr	x0, [sp, #24]
   16270:	ldr	x8, [sp, #24]
   16274:	ldr	x1, [x8, #96]
   16278:	bl	1646c <gzungetc@@ZLIB_1.2.0.2+0x284>
   1627c:	mov	w9, #0xffffffff            	// #-1
   16280:	cmp	w0, w9
   16284:	b.ne	16294 <gzungetc@@ZLIB_1.2.0.2+0xac>  // b.any
   16288:	mov	w8, #0xffffffff            	// #-1
   1628c:	stur	w8, [x29, #-4]
   16290:	b	1645c <gzungetc@@ZLIB_1.2.0.2+0x274>
   16294:	ldur	w8, [x29, #-8]
   16298:	cmp	w8, #0x0
   1629c:	cset	w8, ge  // ge = tcont
   162a0:	tbnz	w8, #0, 162b0 <gzungetc@@ZLIB_1.2.0.2+0xc8>
   162a4:	mov	w8, #0xffffffff            	// #-1
   162a8:	stur	w8, [x29, #-4]
   162ac:	b	1645c <gzungetc@@ZLIB_1.2.0.2+0x274>
   162b0:	ldr	x8, [sp, #24]
   162b4:	ldr	w9, [x8]
   162b8:	cbnz	w9, 1632c <gzungetc@@ZLIB_1.2.0.2+0x144>
   162bc:	ldr	x8, [sp, #24]
   162c0:	mov	w9, #0x1                   	// #1
   162c4:	str	w9, [x8]
   162c8:	ldr	x8, [sp, #24]
   162cc:	ldr	x8, [x8, #56]
   162d0:	ldr	x10, [sp, #24]
   162d4:	ldr	w9, [x10, #40]
   162d8:	lsl	w9, w9, #1
   162dc:	mov	w10, w9
   162e0:	ubfx	x10, x10, #0, #32
   162e4:	add	x8, x8, x10
   162e8:	mov	x10, #0xffffffffffffffff    	// #-1
   162ec:	add	x8, x8, x10
   162f0:	ldr	x10, [sp, #24]
   162f4:	str	x8, [x10, #8]
   162f8:	ldur	w9, [x29, #-8]
   162fc:	ldr	x8, [sp, #24]
   16300:	ldr	x8, [x8, #8]
   16304:	strb	w9, [x8]
   16308:	ldr	x8, [sp, #24]
   1630c:	ldr	x10, [x8, #16]
   16310:	subs	x10, x10, #0x1
   16314:	str	x10, [x8, #16]
   16318:	ldr	x8, [sp, #24]
   1631c:	str	wzr, [x8, #84]
   16320:	ldur	w9, [x29, #-8]
   16324:	stur	w9, [x29, #-4]
   16328:	b	1645c <gzungetc@@ZLIB_1.2.0.2+0x274>
   1632c:	ldr	x8, [sp, #24]
   16330:	ldr	w9, [x8]
   16334:	ldr	x8, [sp, #24]
   16338:	ldr	w10, [x8, #40]
   1633c:	lsl	w10, w10, #1
   16340:	cmp	w9, w10
   16344:	b.ne	16368 <gzungetc@@ZLIB_1.2.0.2+0x180>  // b.any
   16348:	ldr	x0, [sp, #24]
   1634c:	mov	w1, #0xfffffffd            	// #-3
   16350:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   16354:	add	x2, x2, #0x798
   16358:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   1635c:	mov	w8, #0xffffffff            	// #-1
   16360:	stur	w8, [x29, #-4]
   16364:	b	1645c <gzungetc@@ZLIB_1.2.0.2+0x274>
   16368:	ldr	x8, [sp, #24]
   1636c:	ldr	x8, [x8, #8]
   16370:	ldr	x9, [sp, #24]
   16374:	ldr	x9, [x9, #56]
   16378:	cmp	x8, x9
   1637c:	b.ne	16408 <gzungetc@@ZLIB_1.2.0.2+0x220>  // b.any
   16380:	ldr	x8, [sp, #24]
   16384:	ldr	x8, [x8, #56]
   16388:	ldr	x9, [sp, #24]
   1638c:	ldr	w10, [x9]
   16390:	mov	w9, w10
   16394:	add	x8, x8, x9
   16398:	str	x8, [sp, #16]
   1639c:	ldr	x8, [sp, #24]
   163a0:	ldr	x8, [x8, #56]
   163a4:	ldr	x9, [sp, #24]
   163a8:	ldr	w10, [x9, #40]
   163ac:	lsl	w10, w10, #1
   163b0:	mov	w9, w10
   163b4:	ubfx	x9, x9, #0, #32
   163b8:	add	x8, x8, x9
   163bc:	str	x8, [sp, #8]
   163c0:	ldr	x8, [sp, #16]
   163c4:	ldr	x9, [sp, #24]
   163c8:	ldr	x9, [x9, #56]
   163cc:	cmp	x8, x9
   163d0:	b.ls	163fc <gzungetc@@ZLIB_1.2.0.2+0x214>  // b.plast
   163d4:	ldr	x8, [sp, #16]
   163d8:	mov	x9, #0xffffffffffffffff    	// #-1
   163dc:	add	x8, x8, x9
   163e0:	str	x8, [sp, #16]
   163e4:	ldrb	w10, [x8]
   163e8:	ldr	x8, [sp, #8]
   163ec:	add	x8, x8, x9
   163f0:	str	x8, [sp, #8]
   163f4:	strb	w10, [x8]
   163f8:	b	163c0 <gzungetc@@ZLIB_1.2.0.2+0x1d8>
   163fc:	ldr	x8, [sp, #8]
   16400:	ldr	x9, [sp, #24]
   16404:	str	x8, [x9, #8]
   16408:	ldr	x8, [sp, #24]
   1640c:	ldr	w9, [x8]
   16410:	add	w9, w9, #0x1
   16414:	str	w9, [x8]
   16418:	ldr	x8, [sp, #24]
   1641c:	ldr	x10, [x8, #8]
   16420:	mov	x11, #0xffffffffffffffff    	// #-1
   16424:	add	x10, x10, x11
   16428:	str	x10, [x8, #8]
   1642c:	ldur	w9, [x29, #-8]
   16430:	ldr	x8, [sp, #24]
   16434:	ldr	x8, [x8, #8]
   16438:	strb	w9, [x8]
   1643c:	ldr	x8, [sp, #24]
   16440:	ldr	x10, [x8, #16]
   16444:	subs	x10, x10, #0x1
   16448:	str	x10, [x8, #16]
   1644c:	ldr	x8, [sp, #24]
   16450:	str	wzr, [x8, #84]
   16454:	ldur	w9, [x29, #-8]
   16458:	stur	w9, [x29, #-4]
   1645c:	ldur	w0, [x29, #-4]
   16460:	ldp	x29, x30, [sp, #48]
   16464:	add	sp, sp, #0x40
   16468:	ret
   1646c:	sub	sp, sp, #0x30
   16470:	stp	x29, x30, [sp, #32]
   16474:	add	x29, sp, #0x20
   16478:	str	x0, [sp, #16]
   1647c:	str	x1, [sp, #8]
   16480:	ldr	x8, [sp, #8]
   16484:	cbz	x8, 16568 <gzungetc@@ZLIB_1.2.0.2+0x380>
   16488:	ldr	x8, [sp, #16]
   1648c:	ldr	w9, [x8]
   16490:	cbz	w9, 16528 <gzungetc@@ZLIB_1.2.0.2+0x340>
   16494:	ldr	x8, [sp, #16]
   16498:	ldr	w9, [x8]
   1649c:	mov	w8, w9
   164a0:	ldr	x10, [sp, #8]
   164a4:	cmp	x8, x10
   164a8:	b.le	164b8 <gzungetc@@ZLIB_1.2.0.2+0x2d0>
   164ac:	ldr	x8, [sp, #8]
   164b0:	str	w8, [sp]
   164b4:	b	164c4 <gzungetc@@ZLIB_1.2.0.2+0x2dc>
   164b8:	ldr	x8, [sp, #16]
   164bc:	ldr	w9, [x8]
   164c0:	str	w9, [sp]
   164c4:	ldr	w8, [sp]
   164c8:	str	w8, [sp, #4]
   164cc:	ldr	w8, [sp, #4]
   164d0:	ldr	x9, [sp, #16]
   164d4:	ldr	w10, [x9]
   164d8:	subs	w8, w10, w8
   164dc:	str	w8, [x9]
   164e0:	ldr	w8, [sp, #4]
   164e4:	mov	w9, w8
   164e8:	ldr	x11, [sp, #16]
   164ec:	ldr	x12, [x11, #8]
   164f0:	add	x9, x12, x9
   164f4:	str	x9, [x11, #8]
   164f8:	ldr	w8, [sp, #4]
   164fc:	mov	w9, w8
   16500:	ldr	x11, [sp, #16]
   16504:	ldr	x12, [x11, #16]
   16508:	add	x9, x12, x9
   1650c:	str	x9, [x11, #16]
   16510:	ldr	w8, [sp, #4]
   16514:	mov	w9, w8
   16518:	ldr	x11, [sp, #8]
   1651c:	subs	x9, x11, x9
   16520:	str	x9, [sp, #8]
   16524:	b	16564 <gzungetc@@ZLIB_1.2.0.2+0x37c>
   16528:	ldr	x8, [sp, #16]
   1652c:	ldr	w9, [x8, #80]
   16530:	cbz	w9, 16544 <gzungetc@@ZLIB_1.2.0.2+0x35c>
   16534:	ldr	x8, [sp, #16]
   16538:	ldr	w9, [x8, #128]
   1653c:	cbnz	w9, 16544 <gzungetc@@ZLIB_1.2.0.2+0x35c>
   16540:	b	16568 <gzungetc@@ZLIB_1.2.0.2+0x380>
   16544:	ldr	x0, [sp, #16]
   16548:	bl	167fc <gzgets@@Base+0x280>
   1654c:	mov	w8, #0xffffffff            	// #-1
   16550:	cmp	w0, w8
   16554:	b.ne	16564 <gzungetc@@ZLIB_1.2.0.2+0x37c>  // b.any
   16558:	mov	w8, #0xffffffff            	// #-1
   1655c:	stur	w8, [x29, #-4]
   16560:	b	1656c <gzungetc@@ZLIB_1.2.0.2+0x384>
   16564:	b	16480 <gzungetc@@ZLIB_1.2.0.2+0x298>
   16568:	stur	wzr, [x29, #-4]
   1656c:	ldur	w0, [x29, #-4]
   16570:	ldp	x29, x30, [sp, #32]
   16574:	add	sp, sp, #0x30
   16578:	ret

000000000001657c <gzgets@@Base>:
   1657c:	sub	sp, sp, #0x60
   16580:	stp	x29, x30, [sp, #80]
   16584:	add	x29, sp, #0x50
   16588:	stur	x0, [x29, #-16]
   1658c:	stur	x1, [x29, #-24]
   16590:	stur	w2, [x29, #-28]
   16594:	ldur	x8, [x29, #-16]
   16598:	cbz	x8, 165b0 <gzgets@@Base+0x34>
   1659c:	ldur	x8, [x29, #-24]
   165a0:	cbz	x8, 165b0 <gzgets@@Base+0x34>
   165a4:	ldur	w8, [x29, #-28]
   165a8:	cmp	w8, #0x1
   165ac:	b.ge	165bc <gzgets@@Base+0x40>  // b.tcont
   165b0:	mov	x8, xzr
   165b4:	stur	x8, [x29, #-8]
   165b8:	b	167ec <gzgets@@Base+0x270>
   165bc:	ldur	x8, [x29, #-16]
   165c0:	str	x8, [sp, #16]
   165c4:	ldr	x8, [sp, #16]
   165c8:	ldr	w9, [x8, #24]
   165cc:	mov	w10, #0x1c4f                	// #7247
   165d0:	cmp	w9, w10
   165d4:	b.ne	165f8 <gzgets@@Base+0x7c>  // b.any
   165d8:	ldr	x8, [sp, #16]
   165dc:	ldr	w9, [x8, #108]
   165e0:	cbz	w9, 16604 <gzgets@@Base+0x88>
   165e4:	ldr	x8, [sp, #16]
   165e8:	ldr	w9, [x8, #108]
   165ec:	mov	w10, #0xfffffffb            	// #-5
   165f0:	cmp	w9, w10
   165f4:	b.eq	16604 <gzgets@@Base+0x88>  // b.none
   165f8:	mov	x8, xzr
   165fc:	stur	x8, [x29, #-8]
   16600:	b	167ec <gzgets@@Base+0x270>
   16604:	ldr	x8, [sp, #16]
   16608:	ldr	w9, [x8, #104]
   1660c:	cbz	w9, 16640 <gzgets@@Base+0xc4>
   16610:	ldr	x8, [sp, #16]
   16614:	str	wzr, [x8, #104]
   16618:	ldr	x0, [sp, #16]
   1661c:	ldr	x8, [sp, #16]
   16620:	ldr	x1, [x8, #96]
   16624:	bl	1646c <gzungetc@@ZLIB_1.2.0.2+0x284>
   16628:	mov	w9, #0xffffffff            	// #-1
   1662c:	cmp	w0, w9
   16630:	b.ne	16640 <gzgets@@Base+0xc4>  // b.any
   16634:	mov	x8, xzr
   16638:	stur	x8, [x29, #-8]
   1663c:	b	167ec <gzgets@@Base+0x270>
   16640:	ldur	x8, [x29, #-24]
   16644:	str	x8, [sp, #32]
   16648:	ldur	w9, [x29, #-28]
   1664c:	subs	w9, w9, #0x1
   16650:	stur	w9, [x29, #-32]
   16654:	ldur	w9, [x29, #-32]
   16658:	cbz	w9, 167bc <gzgets@@Base+0x240>
   1665c:	ldr	x8, [sp, #16]
   16660:	ldr	w9, [x8]
   16664:	cbnz	w9, 16688 <gzgets@@Base+0x10c>
   16668:	ldr	x0, [sp, #16]
   1666c:	bl	167fc <gzgets@@Base+0x280>
   16670:	mov	w8, #0xffffffff            	// #-1
   16674:	cmp	w0, w8
   16678:	b.ne	16688 <gzgets@@Base+0x10c>  // b.any
   1667c:	mov	x8, xzr
   16680:	stur	x8, [x29, #-8]
   16684:	b	167ec <gzgets@@Base+0x270>
   16688:	ldr	x8, [sp, #16]
   1668c:	ldr	w9, [x8]
   16690:	cbnz	w9, 166a4 <gzgets@@Base+0x128>
   16694:	ldr	x8, [sp, #16]
   16698:	mov	w9, #0x1                   	// #1
   1669c:	str	w9, [x8, #84]
   166a0:	b	167bc <gzgets@@Base+0x240>
   166a4:	ldr	x8, [sp, #16]
   166a8:	ldr	w9, [x8]
   166ac:	ldur	w10, [x29, #-32]
   166b0:	cmp	w9, w10
   166b4:	b.ls	166c4 <gzgets@@Base+0x148>  // b.plast
   166b8:	ldur	w8, [x29, #-32]
   166bc:	str	w8, [sp, #12]
   166c0:	b	166d0 <gzgets@@Base+0x154>
   166c4:	ldr	x8, [sp, #16]
   166c8:	ldr	w9, [x8]
   166cc:	str	w9, [sp, #12]
   166d0:	ldr	w8, [sp, #12]
   166d4:	stur	w8, [x29, #-36]
   166d8:	ldr	x9, [sp, #16]
   166dc:	ldr	x0, [x9, #8]
   166e0:	ldur	w8, [x29, #-36]
   166e4:	mov	w2, w8
   166e8:	mov	w1, #0xa                   	// #10
   166ec:	bl	25f0 <memchr@plt>
   166f0:	str	x0, [sp, #24]
   166f4:	ldr	x9, [sp, #24]
   166f8:	cbz	x9, 16714 <gzgets@@Base+0x198>
   166fc:	ldr	x8, [sp, #24]
   16700:	ldr	x9, [sp, #16]
   16704:	ldr	x9, [x9, #8]
   16708:	subs	x8, x8, x9
   1670c:	add	w8, w8, #0x1
   16710:	stur	w8, [x29, #-36]
   16714:	ldur	x0, [x29, #-24]
   16718:	ldr	x8, [sp, #16]
   1671c:	ldr	x1, [x8, #8]
   16720:	ldur	w9, [x29, #-36]
   16724:	mov	w2, w9
   16728:	bl	23a0 <memcpy@plt>
   1672c:	ldur	w9, [x29, #-36]
   16730:	ldr	x8, [sp, #16]
   16734:	ldr	w10, [x8]
   16738:	subs	w9, w10, w9
   1673c:	str	w9, [x8]
   16740:	ldur	w9, [x29, #-36]
   16744:	mov	w8, w9
   16748:	ldr	x11, [sp, #16]
   1674c:	ldr	x12, [x11, #8]
   16750:	add	x8, x12, x8
   16754:	str	x8, [x11, #8]
   16758:	ldur	w9, [x29, #-36]
   1675c:	mov	w8, w9
   16760:	ldr	x11, [sp, #16]
   16764:	ldr	x12, [x11, #16]
   16768:	add	x8, x12, x8
   1676c:	str	x8, [x11, #16]
   16770:	ldur	w9, [x29, #-36]
   16774:	ldur	w10, [x29, #-32]
   16778:	subs	w9, w10, w9
   1677c:	stur	w9, [x29, #-32]
   16780:	ldur	w9, [x29, #-36]
   16784:	mov	w8, w9
   16788:	ldur	x11, [x29, #-24]
   1678c:	add	x8, x11, x8
   16790:	stur	x8, [x29, #-24]
   16794:	ldur	w8, [x29, #-32]
   16798:	mov	w9, #0x0                   	// #0
   1679c:	str	w9, [sp, #8]
   167a0:	cbz	w8, 167b4 <gzgets@@Base+0x238>
   167a4:	ldr	x8, [sp, #24]
   167a8:	cmp	x8, #0x0
   167ac:	cset	w9, eq  // eq = none
   167b0:	str	w9, [sp, #8]
   167b4:	ldr	w8, [sp, #8]
   167b8:	tbnz	w8, #0, 1665c <gzgets@@Base+0xe0>
   167bc:	ldur	x8, [x29, #-24]
   167c0:	ldr	x9, [sp, #32]
   167c4:	cmp	x8, x9
   167c8:	b.ne	167d8 <gzgets@@Base+0x25c>  // b.any
   167cc:	mov	x8, xzr
   167d0:	stur	x8, [x29, #-8]
   167d4:	b	167ec <gzgets@@Base+0x270>
   167d8:	ldur	x8, [x29, #-24]
   167dc:	mov	w9, #0x0                   	// #0
   167e0:	strb	w9, [x8]
   167e4:	ldr	x8, [sp, #32]
   167e8:	stur	x8, [x29, #-8]
   167ec:	ldur	x0, [x29, #-8]
   167f0:	ldp	x29, x30, [sp, #80]
   167f4:	add	sp, sp, #0x60
   167f8:	ret
   167fc:	sub	sp, sp, #0x40
   16800:	stp	x29, x30, [sp, #48]
   16804:	add	x29, sp, #0x30
   16808:	stur	x0, [x29, #-16]
   1680c:	ldur	x8, [x29, #-16]
   16810:	add	x8, x8, #0x78
   16814:	str	x8, [sp, #24]
   16818:	ldur	x8, [x29, #-16]
   1681c:	ldr	w9, [x8, #68]
   16820:	str	w9, [sp, #20]
   16824:	cbz	w9, 1684c <gzgets@@Base+0x2d0>
   16828:	b	1682c <gzgets@@Base+0x2b0>
   1682c:	ldr	w8, [sp, #20]
   16830:	cmp	w8, #0x1
   16834:	b.eq	16884 <gzgets@@Base+0x308>  // b.none
   16838:	b	1683c <gzgets@@Base+0x2c0>
   1683c:	ldr	w8, [sp, #20]
   16840:	cmp	w8, #0x2
   16844:	b.eq	168d4 <gzgets@@Base+0x358>  // b.none
   16848:	b	16918 <gzgets@@Base+0x39c>
   1684c:	ldur	x0, [x29, #-16]
   16850:	bl	169f0 <gzdirect@@ZLIB_1.2.2.3+0x78>
   16854:	mov	w8, #0xffffffff            	// #-1
   16858:	cmp	w0, w8
   1685c:	b.ne	1686c <gzgets@@Base+0x2f0>  // b.any
   16860:	mov	w8, #0xffffffff            	// #-1
   16864:	stur	w8, [x29, #-4]
   16868:	b	16968 <gzgets@@Base+0x3ec>
   1686c:	ldur	x8, [x29, #-16]
   16870:	ldr	w9, [x8, #68]
   16874:	cbnz	w9, 16880 <gzgets@@Base+0x304>
   16878:	stur	wzr, [x29, #-4]
   1687c:	b	16968 <gzgets@@Base+0x3ec>
   16880:	b	16918 <gzgets@@Base+0x39c>
   16884:	ldur	x0, [x29, #-16]
   16888:	ldur	x8, [x29, #-16]
   1688c:	ldr	x1, [x8, #56]
   16890:	ldur	x8, [x29, #-16]
   16894:	ldr	w9, [x8, #40]
   16898:	lsl	w2, w9, #1
   1689c:	ldur	x3, [x29, #-16]
   168a0:	bl	16d90 <gzclose_r@@ZLIB_1.2.3.5+0x108>
   168a4:	mov	w9, #0xffffffff            	// #-1
   168a8:	cmp	w0, w9
   168ac:	b.ne	168bc <gzgets@@Base+0x340>  // b.any
   168b0:	mov	w8, #0xffffffff            	// #-1
   168b4:	stur	w8, [x29, #-4]
   168b8:	b	16968 <gzgets@@Base+0x3ec>
   168bc:	ldur	x8, [x29, #-16]
   168c0:	ldr	x8, [x8, #56]
   168c4:	ldur	x9, [x29, #-16]
   168c8:	str	x8, [x9, #8]
   168cc:	stur	wzr, [x29, #-4]
   168d0:	b	16968 <gzgets@@Base+0x3ec>
   168d4:	ldur	x8, [x29, #-16]
   168d8:	ldr	w9, [x8, #40]
   168dc:	lsl	w9, w9, #1
   168e0:	ldr	x8, [sp, #24]
   168e4:	str	w9, [x8, #32]
   168e8:	ldur	x8, [x29, #-16]
   168ec:	ldr	x8, [x8, #56]
   168f0:	ldr	x10, [sp, #24]
   168f4:	str	x8, [x10, #24]
   168f8:	ldur	x0, [x29, #-16]
   168fc:	bl	16ec8 <gzclose_r@@ZLIB_1.2.3.5+0x240>
   16900:	mov	w9, #0xffffffff            	// #-1
   16904:	cmp	w0, w9
   16908:	b.ne	16918 <gzgets@@Base+0x39c>  // b.any
   1690c:	mov	w8, #0xffffffff            	// #-1
   16910:	stur	w8, [x29, #-4]
   16914:	b	16968 <gzgets@@Base+0x3ec>
   16918:	ldur	x8, [x29, #-16]
   1691c:	ldr	w9, [x8]
   16920:	mov	w10, #0x0                   	// #0
   16924:	str	w10, [sp, #16]
   16928:	cbnz	w9, 1695c <gzgets@@Base+0x3e0>
   1692c:	ldur	x8, [x29, #-16]
   16930:	ldr	w9, [x8, #80]
   16934:	mov	w10, #0x1                   	// #1
   16938:	str	w10, [sp, #12]
   1693c:	cbz	w9, 16954 <gzgets@@Base+0x3d8>
   16940:	ldr	x8, [sp, #24]
   16944:	ldr	w9, [x8, #8]
   16948:	cmp	w9, #0x0
   1694c:	cset	w9, ne  // ne = any
   16950:	str	w9, [sp, #12]
   16954:	ldr	w8, [sp, #12]
   16958:	str	w8, [sp, #16]
   1695c:	ldr	w8, [sp, #16]
   16960:	tbnz	w8, #0, 16818 <gzgets@@Base+0x29c>
   16964:	stur	wzr, [x29, #-4]
   16968:	ldur	w0, [x29, #-4]
   1696c:	ldp	x29, x30, [sp, #48]
   16970:	add	sp, sp, #0x40
   16974:	ret

0000000000016978 <gzdirect@@ZLIB_1.2.2.3>:
   16978:	sub	sp, sp, #0x30
   1697c:	stp	x29, x30, [sp, #32]
   16980:	add	x29, sp, #0x20
   16984:	str	x0, [sp, #16]
   16988:	ldr	x8, [sp, #16]
   1698c:	cbnz	x8, 16998 <gzdirect@@ZLIB_1.2.2.3+0x20>
   16990:	stur	wzr, [x29, #-4]
   16994:	b	169e0 <gzdirect@@ZLIB_1.2.2.3+0x68>
   16998:	ldr	x8, [sp, #16]
   1699c:	str	x8, [sp, #8]
   169a0:	ldr	x8, [sp, #8]
   169a4:	ldr	w9, [x8, #24]
   169a8:	mov	w10, #0x1c4f                	// #7247
   169ac:	cmp	w9, w10
   169b0:	b.ne	169d4 <gzdirect@@ZLIB_1.2.2.3+0x5c>  // b.any
   169b4:	ldr	x8, [sp, #8]
   169b8:	ldr	w9, [x8, #68]
   169bc:	cbnz	w9, 169d4 <gzdirect@@ZLIB_1.2.2.3+0x5c>
   169c0:	ldr	x8, [sp, #8]
   169c4:	ldr	w9, [x8]
   169c8:	cbnz	w9, 169d4 <gzdirect@@ZLIB_1.2.2.3+0x5c>
   169cc:	ldr	x0, [sp, #8]
   169d0:	bl	169f0 <gzdirect@@ZLIB_1.2.2.3+0x78>
   169d4:	ldr	x8, [sp, #8]
   169d8:	ldr	w9, [x8, #64]
   169dc:	stur	w9, [x29, #-4]
   169e0:	ldur	w0, [x29, #-4]
   169e4:	ldp	x29, x30, [sp, #32]
   169e8:	add	sp, sp, #0x30
   169ec:	ret
   169f0:	sub	sp, sp, #0x30
   169f4:	stp	x29, x30, [sp, #32]
   169f8:	add	x29, sp, #0x20
   169fc:	str	x0, [sp, #16]
   16a00:	ldr	x8, [sp, #16]
   16a04:	add	x8, x8, #0x78
   16a08:	str	x8, [sp, #8]
   16a0c:	ldr	x8, [sp, #16]
   16a10:	ldr	w9, [x8, #40]
   16a14:	cbnz	w9, 16b3c <gzdirect@@ZLIB_1.2.2.3+0x1c4>
   16a18:	ldr	x8, [sp, #16]
   16a1c:	ldr	w9, [x8, #44]
   16a20:	mov	w0, w9
   16a24:	bl	2460 <malloc@plt>
   16a28:	ldr	x8, [sp, #16]
   16a2c:	str	x0, [x8, #48]
   16a30:	ldr	x8, [sp, #16]
   16a34:	ldr	w9, [x8, #44]
   16a38:	lsl	w9, w9, #1
   16a3c:	mov	w8, w9
   16a40:	ubfx	x0, x8, #0, #32
   16a44:	bl	2460 <malloc@plt>
   16a48:	ldr	x8, [sp, #16]
   16a4c:	str	x0, [x8, #56]
   16a50:	ldr	x8, [sp, #16]
   16a54:	ldr	x8, [x8, #48]
   16a58:	cbz	x8, 16a68 <gzdirect@@ZLIB_1.2.2.3+0xf0>
   16a5c:	ldr	x8, [sp, #16]
   16a60:	ldr	x8, [x8, #56]
   16a64:	cbnz	x8, 16aa0 <gzdirect@@ZLIB_1.2.2.3+0x128>
   16a68:	ldr	x8, [sp, #16]
   16a6c:	ldr	x0, [x8, #56]
   16a70:	bl	2570 <free@plt>
   16a74:	ldr	x8, [sp, #16]
   16a78:	ldr	x0, [x8, #48]
   16a7c:	bl	2570 <free@plt>
   16a80:	ldr	x0, [sp, #16]
   16a84:	mov	w1, #0xfffffffc            	// #-4
   16a88:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   16a8c:	add	x2, x2, #0x740
   16a90:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16a94:	mov	w9, #0xffffffff            	// #-1
   16a98:	stur	w9, [x29, #-4]
   16a9c:	b	16c78 <gzdirect@@ZLIB_1.2.2.3+0x300>
   16aa0:	ldr	x8, [sp, #16]
   16aa4:	ldr	w9, [x8, #44]
   16aa8:	ldr	x8, [sp, #16]
   16aac:	str	w9, [x8, #40]
   16ab0:	ldr	x8, [sp, #16]
   16ab4:	mov	x10, xzr
   16ab8:	str	x10, [x8, #184]
   16abc:	ldr	x8, [sp, #16]
   16ac0:	str	x10, [x8, #192]
   16ac4:	ldr	x8, [sp, #16]
   16ac8:	str	x10, [x8, #200]
   16acc:	ldr	x8, [sp, #16]
   16ad0:	str	wzr, [x8, #128]
   16ad4:	ldr	x8, [sp, #16]
   16ad8:	str	x10, [x8, #120]
   16adc:	ldr	x8, [sp, #16]
   16ae0:	add	x0, x8, #0x78
   16ae4:	mov	w1, #0x1f                  	// #31
   16ae8:	adrp	x2, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
   16aec:	add	x2, x2, #0xf2a
   16af0:	mov	w3, #0x70                  	// #112
   16af4:	bl	2600 <inflateInit2_@plt>
   16af8:	cbz	w0, 16b3c <gzdirect@@ZLIB_1.2.2.3+0x1c4>
   16afc:	ldr	x8, [sp, #16]
   16b00:	ldr	x0, [x8, #56]
   16b04:	bl	2570 <free@plt>
   16b08:	ldr	x8, [sp, #16]
   16b0c:	ldr	x0, [x8, #48]
   16b10:	bl	2570 <free@plt>
   16b14:	ldr	x8, [sp, #16]
   16b18:	str	wzr, [x8, #40]
   16b1c:	ldr	x0, [sp, #16]
   16b20:	mov	w1, #0xfffffffc            	// #-4
   16b24:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   16b28:	add	x2, x2, #0x740
   16b2c:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16b30:	mov	w9, #0xffffffff            	// #-1
   16b34:	stur	w9, [x29, #-4]
   16b38:	b	16c78 <gzdirect@@ZLIB_1.2.2.3+0x300>
   16b3c:	ldr	x8, [sp, #8]
   16b40:	ldr	w9, [x8, #8]
   16b44:	cmp	w9, #0x2
   16b48:	b.cs	16b80 <gzdirect@@ZLIB_1.2.2.3+0x208>  // b.hs, b.nlast
   16b4c:	ldr	x0, [sp, #16]
   16b50:	bl	170b8 <gzclose_r@@ZLIB_1.2.3.5+0x430>
   16b54:	mov	w8, #0xffffffff            	// #-1
   16b58:	cmp	w0, w8
   16b5c:	b.ne	16b6c <gzdirect@@ZLIB_1.2.2.3+0x1f4>  // b.any
   16b60:	mov	w8, #0xffffffff            	// #-1
   16b64:	stur	w8, [x29, #-4]
   16b68:	b	16c78 <gzdirect@@ZLIB_1.2.2.3+0x300>
   16b6c:	ldr	x8, [sp, #8]
   16b70:	ldr	w9, [x8, #8]
   16b74:	cbnz	w9, 16b80 <gzdirect@@ZLIB_1.2.2.3+0x208>
   16b78:	stur	wzr, [x29, #-4]
   16b7c:	b	16c78 <gzdirect@@ZLIB_1.2.2.3+0x300>
   16b80:	ldr	x8, [sp, #8]
   16b84:	ldr	w9, [x8, #8]
   16b88:	cmp	w9, #0x1
   16b8c:	b.ls	16bdc <gzdirect@@ZLIB_1.2.2.3+0x264>  // b.plast
   16b90:	ldr	x8, [sp, #8]
   16b94:	ldr	x8, [x8]
   16b98:	ldrb	w9, [x8]
   16b9c:	cmp	w9, #0x1f
   16ba0:	b.ne	16bdc <gzdirect@@ZLIB_1.2.2.3+0x264>  // b.any
   16ba4:	ldr	x8, [sp, #8]
   16ba8:	ldr	x8, [x8]
   16bac:	ldrb	w9, [x8, #1]
   16bb0:	cmp	w9, #0x8b
   16bb4:	b.ne	16bdc <gzdirect@@ZLIB_1.2.2.3+0x264>  // b.any
   16bb8:	ldr	x0, [sp, #8]
   16bbc:	bl	2610 <inflateReset@plt>
   16bc0:	ldr	x8, [sp, #16]
   16bc4:	mov	w9, #0x2                   	// #2
   16bc8:	str	w9, [x8, #68]
   16bcc:	ldr	x8, [sp, #16]
   16bd0:	str	wzr, [x8, #64]
   16bd4:	stur	wzr, [x29, #-4]
   16bd8:	b	16c78 <gzdirect@@ZLIB_1.2.2.3+0x300>
   16bdc:	ldr	x8, [sp, #16]
   16be0:	ldr	w9, [x8, #64]
   16be4:	cbnz	w9, 16c0c <gzdirect@@ZLIB_1.2.2.3+0x294>
   16be8:	ldr	x8, [sp, #8]
   16bec:	str	wzr, [x8, #8]
   16bf0:	ldr	x8, [sp, #16]
   16bf4:	mov	w9, #0x1                   	// #1
   16bf8:	str	w9, [x8, #80]
   16bfc:	ldr	x8, [sp, #16]
   16c00:	str	wzr, [x8]
   16c04:	stur	wzr, [x29, #-4]
   16c08:	b	16c78 <gzdirect@@ZLIB_1.2.2.3+0x300>
   16c0c:	ldr	x8, [sp, #16]
   16c10:	ldr	x8, [x8, #56]
   16c14:	ldr	x9, [sp, #16]
   16c18:	str	x8, [x9, #8]
   16c1c:	ldr	x8, [sp, #8]
   16c20:	ldr	w10, [x8, #8]
   16c24:	cbz	w10, 16c60 <gzdirect@@ZLIB_1.2.2.3+0x2e8>
   16c28:	ldr	x8, [sp, #16]
   16c2c:	ldr	x0, [x8, #8]
   16c30:	ldr	x8, [sp, #8]
   16c34:	ldr	x1, [x8]
   16c38:	ldr	x8, [sp, #8]
   16c3c:	ldr	w9, [x8, #8]
   16c40:	mov	w2, w9
   16c44:	bl	23a0 <memcpy@plt>
   16c48:	ldr	x8, [sp, #8]
   16c4c:	ldr	w9, [x8, #8]
   16c50:	ldr	x8, [sp, #16]
   16c54:	str	w9, [x8]
   16c58:	ldr	x8, [sp, #8]
   16c5c:	str	wzr, [x8, #8]
   16c60:	ldr	x8, [sp, #16]
   16c64:	mov	w9, #0x1                   	// #1
   16c68:	str	w9, [x8, #68]
   16c6c:	ldr	x8, [sp, #16]
   16c70:	str	w9, [x8, #64]
   16c74:	stur	wzr, [x29, #-4]
   16c78:	ldur	w0, [x29, #-4]
   16c7c:	ldp	x29, x30, [sp, #32]
   16c80:	add	sp, sp, #0x30
   16c84:	ret

0000000000016c88 <gzclose_r@@ZLIB_1.2.3.5>:
   16c88:	sub	sp, sp, #0x40
   16c8c:	stp	x29, x30, [sp, #48]
   16c90:	add	x29, sp, #0x30
   16c94:	stur	x0, [x29, #-16]
   16c98:	ldur	x8, [x29, #-16]
   16c9c:	cbnz	x8, 16cac <gzclose_r@@ZLIB_1.2.3.5+0x24>
   16ca0:	mov	w8, #0xfffffffe            	// #-2
   16ca4:	stur	w8, [x29, #-4]
   16ca8:	b	16d80 <gzclose_r@@ZLIB_1.2.3.5+0xf8>
   16cac:	ldur	x8, [x29, #-16]
   16cb0:	str	x8, [sp, #16]
   16cb4:	ldr	x8, [sp, #16]
   16cb8:	ldr	w9, [x8, #24]
   16cbc:	mov	w10, #0x1c4f                	// #7247
   16cc0:	cmp	w9, w10
   16cc4:	b.eq	16cd4 <gzclose_r@@ZLIB_1.2.3.5+0x4c>  // b.none
   16cc8:	mov	w8, #0xfffffffe            	// #-2
   16ccc:	stur	w8, [x29, #-4]
   16cd0:	b	16d80 <gzclose_r@@ZLIB_1.2.3.5+0xf8>
   16cd4:	ldr	x8, [sp, #16]
   16cd8:	ldr	w9, [x8, #40]
   16cdc:	cbz	w9, 16d08 <gzclose_r@@ZLIB_1.2.3.5+0x80>
   16ce0:	ldr	x8, [sp, #16]
   16ce4:	add	x0, x8, #0x78
   16ce8:	bl	2550 <inflateEnd@plt>
   16cec:	ldr	x8, [sp, #16]
   16cf0:	ldr	x8, [x8, #56]
   16cf4:	mov	x0, x8
   16cf8:	bl	2570 <free@plt>
   16cfc:	ldr	x8, [sp, #16]
   16d00:	ldr	x0, [x8, #48]
   16d04:	bl	2570 <free@plt>
   16d08:	ldr	x8, [sp, #16]
   16d0c:	ldr	w9, [x8, #108]
   16d10:	mov	w10, #0xfffffffb            	// #-5
   16d14:	mov	w11, wzr
   16d18:	cmp	w9, w10
   16d1c:	csel	w9, w10, w11, eq  // eq = none
   16d20:	str	w9, [sp, #24]
   16d24:	ldr	x0, [sp, #16]
   16d28:	mov	w1, w11
   16d2c:	mov	x8, xzr
   16d30:	mov	x2, x8
   16d34:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16d38:	ldr	x8, [sp, #16]
   16d3c:	ldr	x0, [x8, #32]
   16d40:	bl	2570 <free@plt>
   16d44:	ldr	x8, [sp, #16]
   16d48:	ldr	w0, [x8, #28]
   16d4c:	bl	2510 <close@plt>
   16d50:	stur	w0, [x29, #-20]
   16d54:	ldr	x0, [sp, #16]
   16d58:	bl	2570 <free@plt>
   16d5c:	ldur	w9, [x29, #-20]
   16d60:	cbz	w9, 16d70 <gzclose_r@@ZLIB_1.2.3.5+0xe8>
   16d64:	mov	w8, #0xffffffff            	// #-1
   16d68:	str	w8, [sp, #12]
   16d6c:	b	16d78 <gzclose_r@@ZLIB_1.2.3.5+0xf0>
   16d70:	ldr	w8, [sp, #24]
   16d74:	str	w8, [sp, #12]
   16d78:	ldr	w8, [sp, #12]
   16d7c:	stur	w8, [x29, #-4]
   16d80:	ldur	w0, [x29, #-4]
   16d84:	ldp	x29, x30, [sp, #48]
   16d88:	add	sp, sp, #0x40
   16d8c:	ret
   16d90:	sub	sp, sp, #0x60
   16d94:	stp	x29, x30, [sp, #80]
   16d98:	add	x29, sp, #0x50
   16d9c:	mov	w8, #0x40000000            	// #1073741824
   16da0:	stur	x0, [x29, #-16]
   16da4:	stur	x1, [x29, #-24]
   16da8:	stur	w2, [x29, #-28]
   16dac:	str	x3, [sp, #40]
   16db0:	str	w8, [sp, #28]
   16db4:	ldr	x9, [sp, #40]
   16db8:	str	wzr, [x9]
   16dbc:	ldur	w8, [x29, #-28]
   16dc0:	ldr	x9, [sp, #40]
   16dc4:	ldr	w10, [x9]
   16dc8:	subs	w8, w8, w10
   16dcc:	str	w8, [sp, #32]
   16dd0:	ldr	w8, [sp, #32]
   16dd4:	ldr	w10, [sp, #28]
   16dd8:	cmp	w8, w10
   16ddc:	b.ls	16de8 <gzclose_r@@ZLIB_1.2.3.5+0x160>  // b.plast
   16de0:	ldr	w8, [sp, #28]
   16de4:	str	w8, [sp, #32]
   16de8:	ldur	x8, [x29, #-16]
   16dec:	ldr	w0, [x8, #28]
   16df0:	ldur	x8, [x29, #-24]
   16df4:	ldr	x9, [sp, #40]
   16df8:	ldr	w10, [x9]
   16dfc:	mov	w9, w10
   16e00:	add	x1, x8, x9
   16e04:	ldr	w10, [sp, #32]
   16e08:	mov	w2, w10
   16e0c:	bl	25e0 <read@plt>
   16e10:	str	w0, [sp, #36]
   16e14:	ldr	w10, [sp, #36]
   16e18:	cmp	w10, #0x0
   16e1c:	cset	w10, gt
   16e20:	tbnz	w10, #0, 16e28 <gzclose_r@@ZLIB_1.2.3.5+0x1a0>
   16e24:	b	16e50 <gzclose_r@@ZLIB_1.2.3.5+0x1c8>
   16e28:	ldr	w8, [sp, #36]
   16e2c:	ldr	x9, [sp, #40]
   16e30:	ldr	w10, [x9]
   16e34:	add	w8, w10, w8
   16e38:	str	w8, [x9]
   16e3c:	ldr	x8, [sp, #40]
   16e40:	ldr	w9, [x8]
   16e44:	ldur	w10, [x29, #-28]
   16e48:	cmp	w9, w10
   16e4c:	b.cc	16dbc <gzclose_r@@ZLIB_1.2.3.5+0x134>  // b.lo, b.ul, b.last
   16e50:	ldr	w8, [sp, #36]
   16e54:	cmp	w8, #0x0
   16e58:	cset	w8, ge  // ge = tcont
   16e5c:	tbnz	w8, #0, 16ea0 <gzclose_r@@ZLIB_1.2.3.5+0x218>
   16e60:	ldur	x0, [x29, #-16]
   16e64:	str	x0, [sp, #16]
   16e68:	bl	2650 <__errno_location@plt>
   16e6c:	ldr	w0, [x0]
   16e70:	bl	2500 <strerror@plt>
   16e74:	ldr	x8, [sp, #16]
   16e78:	str	x0, [sp, #8]
   16e7c:	mov	x0, x8
   16e80:	mov	w9, #0xffffffff            	// #-1
   16e84:	mov	w1, w9
   16e88:	ldr	x2, [sp, #8]
   16e8c:	str	w9, [sp, #4]
   16e90:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16e94:	ldr	w9, [sp, #4]
   16e98:	stur	w9, [x29, #-4]
   16e9c:	b	16eb8 <gzclose_r@@ZLIB_1.2.3.5+0x230>
   16ea0:	ldr	w8, [sp, #36]
   16ea4:	cbnz	w8, 16eb4 <gzclose_r@@ZLIB_1.2.3.5+0x22c>
   16ea8:	ldur	x8, [x29, #-16]
   16eac:	mov	w9, #0x1                   	// #1
   16eb0:	str	w9, [x8, #80]
   16eb4:	stur	wzr, [x29, #-4]
   16eb8:	ldur	w0, [x29, #-4]
   16ebc:	ldp	x29, x30, [sp, #80]
   16ec0:	add	sp, sp, #0x60
   16ec4:	ret
   16ec8:	sub	sp, sp, #0x50
   16ecc:	stp	x29, x30, [sp, #64]
   16ed0:	add	x29, sp, #0x40
   16ed4:	stur	x0, [x29, #-16]
   16ed8:	stur	wzr, [x29, #-20]
   16edc:	ldur	x8, [x29, #-16]
   16ee0:	add	x8, x8, #0x78
   16ee4:	str	x8, [sp, #32]
   16ee8:	ldr	x8, [sp, #32]
   16eec:	ldr	w9, [x8, #32]
   16ef0:	stur	w9, [x29, #-24]
   16ef4:	ldr	x8, [sp, #32]
   16ef8:	ldr	w9, [x8, #8]
   16efc:	cbnz	w9, 16f20 <gzclose_r@@ZLIB_1.2.3.5+0x298>
   16f00:	ldur	x0, [x29, #-16]
   16f04:	bl	170b8 <gzclose_r@@ZLIB_1.2.3.5+0x430>
   16f08:	mov	w8, #0xffffffff            	// #-1
   16f0c:	cmp	w0, w8
   16f10:	b.ne	16f20 <gzclose_r@@ZLIB_1.2.3.5+0x298>  // b.any
   16f14:	mov	w8, #0xffffffff            	// #-1
   16f18:	stur	w8, [x29, #-4]
   16f1c:	b	170a8 <gzclose_r@@ZLIB_1.2.3.5+0x420>
   16f20:	ldr	x8, [sp, #32]
   16f24:	ldr	w9, [x8, #8]
   16f28:	cbnz	w9, 16f44 <gzclose_r@@ZLIB_1.2.3.5+0x2bc>
   16f2c:	ldur	x0, [x29, #-16]
   16f30:	mov	w1, #0xfffffffb            	// #-5
   16f34:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   16f38:	add	x2, x2, #0x7b7
   16f3c:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16f40:	b	17050 <gzclose_r@@ZLIB_1.2.3.5+0x3c8>
   16f44:	ldr	x0, [sp, #32]
   16f48:	mov	w8, wzr
   16f4c:	mov	w1, w8
   16f50:	bl	23f0 <inflate@plt>
   16f54:	stur	w0, [x29, #-20]
   16f58:	ldur	w8, [x29, #-20]
   16f5c:	mov	w9, #0xfffffffe            	// #-2
   16f60:	cmp	w8, w9
   16f64:	b.eq	16f74 <gzclose_r@@ZLIB_1.2.3.5+0x2ec>  // b.none
   16f68:	ldur	w8, [x29, #-20]
   16f6c:	cmp	w8, #0x2
   16f70:	b.ne	16f94 <gzclose_r@@ZLIB_1.2.3.5+0x30c>  // b.any
   16f74:	ldur	x0, [x29, #-16]
   16f78:	mov	w1, #0xfffffffe            	// #-2
   16f7c:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   16f80:	add	x2, x2, #0x7ce
   16f84:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16f88:	mov	w8, #0xffffffff            	// #-1
   16f8c:	stur	w8, [x29, #-4]
   16f90:	b	170a8 <gzclose_r@@ZLIB_1.2.3.5+0x420>
   16f94:	ldur	w8, [x29, #-20]
   16f98:	mov	w9, #0xfffffffc            	// #-4
   16f9c:	cmp	w8, w9
   16fa0:	b.ne	16fc4 <gzclose_r@@ZLIB_1.2.3.5+0x33c>  // b.any
   16fa4:	ldur	x0, [x29, #-16]
   16fa8:	mov	w1, #0xfffffffc            	// #-4
   16fac:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   16fb0:	add	x2, x2, #0x740
   16fb4:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   16fb8:	mov	w8, #0xffffffff            	// #-1
   16fbc:	stur	w8, [x29, #-4]
   16fc0:	b	170a8 <gzclose_r@@ZLIB_1.2.3.5+0x420>
   16fc4:	ldur	w8, [x29, #-20]
   16fc8:	mov	w9, #0xfffffffd            	// #-3
   16fcc:	cmp	w8, w9
   16fd0:	b.ne	17024 <gzclose_r@@ZLIB_1.2.3.5+0x39c>  // b.any
   16fd4:	ldur	x0, [x29, #-16]
   16fd8:	ldr	x8, [sp, #32]
   16fdc:	ldr	x8, [x8, #48]
   16fe0:	str	x0, [sp, #24]
   16fe4:	cbnz	x8, 16ff8 <gzclose_r@@ZLIB_1.2.3.5+0x370>
   16fe8:	adrp	x8, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   16fec:	add	x8, x8, #0x7f5
   16ff0:	str	x8, [sp, #16]
   16ff4:	b	17004 <gzclose_r@@ZLIB_1.2.3.5+0x37c>
   16ff8:	ldr	x8, [sp, #32]
   16ffc:	ldr	x8, [x8, #48]
   17000:	str	x8, [sp, #16]
   17004:	ldr	x8, [sp, #16]
   17008:	ldr	x0, [sp, #24]
   1700c:	mov	w1, #0xfffffffd            	// #-3
   17010:	mov	x2, x8
   17014:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   17018:	mov	w9, #0xffffffff            	// #-1
   1701c:	stur	w9, [x29, #-4]
   17020:	b	170a8 <gzclose_r@@ZLIB_1.2.3.5+0x420>
   17024:	ldr	x8, [sp, #32]
   17028:	ldr	w9, [x8, #32]
   1702c:	mov	w10, #0x0                   	// #0
   17030:	str	w10, [sp, #12]
   17034:	cbz	w9, 17048 <gzclose_r@@ZLIB_1.2.3.5+0x3c0>
   17038:	ldur	w8, [x29, #-20]
   1703c:	cmp	w8, #0x1
   17040:	cset	w8, ne  // ne = any
   17044:	str	w8, [sp, #12]
   17048:	ldr	w8, [sp, #12]
   1704c:	tbnz	w8, #0, 16ef4 <gzclose_r@@ZLIB_1.2.3.5+0x26c>
   17050:	ldur	w8, [x29, #-24]
   17054:	ldr	x9, [sp, #32]
   17058:	ldr	w10, [x9, #32]
   1705c:	subs	w8, w8, w10
   17060:	ldur	x9, [x29, #-16]
   17064:	str	w8, [x9]
   17068:	ldr	x9, [sp, #32]
   1706c:	ldr	x9, [x9, #24]
   17070:	ldur	x11, [x29, #-16]
   17074:	ldr	w8, [x11]
   17078:	mov	w11, w8
   1707c:	mov	x12, xzr
   17080:	subs	x11, x12, x11
   17084:	add	x9, x9, x11
   17088:	ldur	x11, [x29, #-16]
   1708c:	str	x9, [x11, #8]
   17090:	ldur	w8, [x29, #-20]
   17094:	cmp	w8, #0x1
   17098:	b.ne	170a4 <gzclose_r@@ZLIB_1.2.3.5+0x41c>  // b.any
   1709c:	ldur	x8, [x29, #-16]
   170a0:	str	wzr, [x8, #68]
   170a4:	stur	wzr, [x29, #-4]
   170a8:	ldur	w0, [x29, #-4]
   170ac:	ldp	x29, x30, [sp, #64]
   170b0:	add	sp, sp, #0x50
   170b4:	ret
   170b8:	sub	sp, sp, #0x50
   170bc:	stp	x29, x30, [sp, #64]
   170c0:	add	x29, sp, #0x40
   170c4:	stur	x0, [x29, #-16]
   170c8:	ldur	x8, [x29, #-16]
   170cc:	add	x8, x8, #0x78
   170d0:	str	x8, [sp, #32]
   170d4:	ldur	x8, [x29, #-16]
   170d8:	ldr	w9, [x8, #108]
   170dc:	cbz	w9, 17100 <gzclose_r@@ZLIB_1.2.3.5+0x478>
   170e0:	ldur	x8, [x29, #-16]
   170e4:	ldr	w9, [x8, #108]
   170e8:	mov	w10, #0xfffffffb            	// #-5
   170ec:	cmp	w9, w10
   170f0:	b.eq	17100 <gzclose_r@@ZLIB_1.2.3.5+0x478>  // b.none
   170f4:	mov	w8, #0xffffffff            	// #-1
   170f8:	stur	w8, [x29, #-4]
   170fc:	b	171e4 <gzclose_r@@ZLIB_1.2.3.5+0x55c>
   17100:	ldur	x8, [x29, #-16]
   17104:	ldr	w9, [x8, #80]
   17108:	cbnz	w9, 171e0 <gzclose_r@@ZLIB_1.2.3.5+0x558>
   1710c:	ldr	x8, [sp, #32]
   17110:	ldr	w9, [x8, #8]
   17114:	cbz	w9, 1716c <gzclose_r@@ZLIB_1.2.3.5+0x4e4>
   17118:	ldur	x8, [x29, #-16]
   1711c:	ldr	x8, [x8, #48]
   17120:	str	x8, [sp, #24]
   17124:	ldr	x8, [sp, #32]
   17128:	ldr	x8, [x8]
   1712c:	str	x8, [sp, #16]
   17130:	ldr	x8, [sp, #32]
   17134:	ldr	w9, [x8, #8]
   17138:	str	w9, [sp, #12]
   1713c:	ldr	x8, [sp, #16]
   17140:	add	x9, x8, #0x1
   17144:	str	x9, [sp, #16]
   17148:	ldrb	w10, [x8]
   1714c:	ldr	x8, [sp, #24]
   17150:	add	x9, x8, #0x1
   17154:	str	x9, [sp, #24]
   17158:	strb	w10, [x8]
   1715c:	ldr	w8, [sp, #12]
   17160:	subs	w8, w8, #0x1
   17164:	str	w8, [sp, #12]
   17168:	cbnz	w8, 1713c <gzclose_r@@ZLIB_1.2.3.5+0x4b4>
   1716c:	ldur	x0, [x29, #-16]
   17170:	ldur	x8, [x29, #-16]
   17174:	ldr	x8, [x8, #48]
   17178:	ldr	x9, [sp, #32]
   1717c:	ldr	w10, [x9, #8]
   17180:	mov	w9, w10
   17184:	add	x1, x8, x9
   17188:	ldur	x8, [x29, #-16]
   1718c:	ldr	w10, [x8, #40]
   17190:	ldr	x8, [sp, #32]
   17194:	ldr	w11, [x8, #8]
   17198:	subs	w2, w10, w11
   1719c:	sub	x3, x29, #0x14
   171a0:	bl	16d90 <gzclose_r@@ZLIB_1.2.3.5+0x108>
   171a4:	mov	w10, #0xffffffff            	// #-1
   171a8:	cmp	w0, w10
   171ac:	b.ne	171bc <gzclose_r@@ZLIB_1.2.3.5+0x534>  // b.any
   171b0:	mov	w8, #0xffffffff            	// #-1
   171b4:	stur	w8, [x29, #-4]
   171b8:	b	171e4 <gzclose_r@@ZLIB_1.2.3.5+0x55c>
   171bc:	ldur	w8, [x29, #-20]
   171c0:	ldr	x9, [sp, #32]
   171c4:	ldr	w10, [x9, #8]
   171c8:	add	w8, w10, w8
   171cc:	str	w8, [x9, #8]
   171d0:	ldur	x9, [x29, #-16]
   171d4:	ldr	x9, [x9, #48]
   171d8:	ldr	x11, [sp, #32]
   171dc:	str	x9, [x11]
   171e0:	stur	wzr, [x29, #-4]
   171e4:	ldur	w0, [x29, #-4]
   171e8:	ldp	x29, x30, [sp, #64]
   171ec:	add	sp, sp, #0x50
   171f0:	ret

00000000000171f4 <gzwrite@@Base>:
   171f4:	sub	sp, sp, #0x40
   171f8:	stp	x29, x30, [sp, #48]
   171fc:	add	x29, sp, #0x30
   17200:	stur	x0, [x29, #-16]
   17204:	str	x1, [sp, #24]
   17208:	str	w2, [sp, #20]
   1720c:	ldur	x8, [x29, #-16]
   17210:	cbnz	x8, 1721c <gzwrite@@Base+0x28>
   17214:	stur	wzr, [x29, #-4]
   17218:	b	17290 <gzwrite@@Base+0x9c>
   1721c:	ldur	x8, [x29, #-16]
   17220:	str	x8, [sp, #8]
   17224:	ldr	x8, [sp, #8]
   17228:	ldr	w9, [x8, #24]
   1722c:	mov	w10, #0x79b1                	// #31153
   17230:	cmp	w9, w10
   17234:	b.ne	17244 <gzwrite@@Base+0x50>  // b.any
   17238:	ldr	x8, [sp, #8]
   1723c:	ldr	w9, [x8, #108]
   17240:	cbz	w9, 1724c <gzwrite@@Base+0x58>
   17244:	stur	wzr, [x29, #-4]
   17248:	b	17290 <gzwrite@@Base+0x9c>
   1724c:	ldr	w8, [sp, #20]
   17250:	cmp	w8, #0x0
   17254:	cset	w8, ge  // ge = tcont
   17258:	tbnz	w8, #0, 17278 <gzwrite@@Base+0x84>
   1725c:	ldr	x0, [sp, #8]
   17260:	mov	w1, #0xfffffffd            	// #-3
   17264:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   17268:	add	x2, x2, #0x80b
   1726c:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   17270:	stur	wzr, [x29, #-4]
   17274:	b	17290 <gzwrite@@Base+0x9c>
   17278:	ldr	x0, [sp, #8]
   1727c:	ldr	x1, [sp, #24]
   17280:	ldr	w8, [sp, #20]
   17284:	mov	w2, w8
   17288:	bl	172a0 <gzwrite@@Base+0xac>
   1728c:	stur	w0, [x29, #-4]
   17290:	ldur	w0, [x29, #-4]
   17294:	ldp	x29, x30, [sp, #48]
   17298:	add	sp, sp, #0x40
   1729c:	ret
   172a0:	sub	sp, sp, #0x50
   172a4:	stp	x29, x30, [sp, #64]
   172a8:	add	x29, sp, #0x40
   172ac:	stur	x0, [x29, #-16]
   172b0:	stur	x1, [x29, #-24]
   172b4:	str	x2, [sp, #32]
   172b8:	ldr	x8, [sp, #32]
   172bc:	str	x8, [sp, #24]
   172c0:	ldr	x8, [sp, #32]
   172c4:	cbnz	x8, 172d0 <gzwrite@@Base+0xdc>
   172c8:	stur	xzr, [x29, #-8]
   172cc:	b	17538 <gzwrite@@Base+0x344>
   172d0:	ldur	x8, [x29, #-16]
   172d4:	ldr	w9, [x8, #40]
   172d8:	cbnz	w9, 172f8 <gzwrite@@Base+0x104>
   172dc:	ldur	x0, [x29, #-16]
   172e0:	bl	17c8c <gzvprintf@@ZLIB_1.2.7.1+0x2b4>
   172e4:	mov	w8, #0xffffffff            	// #-1
   172e8:	cmp	w0, w8
   172ec:	b.ne	172f8 <gzwrite@@Base+0x104>  // b.any
   172f0:	stur	xzr, [x29, #-8]
   172f4:	b	17538 <gzwrite@@Base+0x344>
   172f8:	ldur	x8, [x29, #-16]
   172fc:	ldr	w9, [x8, #104]
   17300:	cbz	w9, 17330 <gzwrite@@Base+0x13c>
   17304:	ldur	x8, [x29, #-16]
   17308:	str	wzr, [x8, #104]
   1730c:	ldur	x0, [x29, #-16]
   17310:	ldur	x8, [x29, #-16]
   17314:	ldr	x1, [x8, #96]
   17318:	bl	177d4 <gzputc@@Base+0x19c>
   1731c:	mov	w9, #0xffffffff            	// #-1
   17320:	cmp	w0, w9
   17324:	b.ne	17330 <gzwrite@@Base+0x13c>  // b.any
   17328:	stur	xzr, [x29, #-8]
   1732c:	b	17538 <gzwrite@@Base+0x344>
   17330:	ldr	x8, [sp, #32]
   17334:	ldur	x9, [x29, #-16]
   17338:	ldr	w10, [x9, #40]
   1733c:	mov	w9, w10
   17340:	cmp	x8, x9
   17344:	b.cs	1746c <gzwrite@@Base+0x278>  // b.hs, b.nlast
   17348:	ldur	x8, [x29, #-16]
   1734c:	ldr	w9, [x8, #128]
   17350:	cbnz	w9, 17364 <gzwrite@@Base+0x170>
   17354:	ldur	x8, [x29, #-16]
   17358:	ldr	x8, [x8, #48]
   1735c:	ldur	x9, [x29, #-16]
   17360:	str	x8, [x9, #120]
   17364:	ldur	x8, [x29, #-16]
   17368:	ldr	x8, [x8, #120]
   1736c:	ldur	x9, [x29, #-16]
   17370:	ldr	w10, [x9, #128]
   17374:	mov	w9, w10
   17378:	add	x8, x8, x9
   1737c:	ldur	x9, [x29, #-16]
   17380:	ldr	x9, [x9, #48]
   17384:	subs	x8, x8, x9
   17388:	str	w8, [sp, #20]
   1738c:	ldur	x9, [x29, #-16]
   17390:	ldr	w8, [x9, #40]
   17394:	ldr	w10, [sp, #20]
   17398:	subs	w8, w8, w10
   1739c:	str	w8, [sp, #16]
   173a0:	ldr	w8, [sp, #16]
   173a4:	mov	w9, w8
   173a8:	ldr	x11, [sp, #32]
   173ac:	cmp	x9, x11
   173b0:	b.ls	173bc <gzwrite@@Base+0x1c8>  // b.plast
   173b4:	ldr	x8, [sp, #32]
   173b8:	str	w8, [sp, #16]
   173bc:	ldur	x8, [x29, #-16]
   173c0:	ldr	x8, [x8, #48]
   173c4:	ldr	w9, [sp, #20]
   173c8:	mov	w10, w9
   173cc:	add	x0, x8, x10
   173d0:	ldur	x1, [x29, #-24]
   173d4:	ldr	w9, [sp, #16]
   173d8:	mov	w2, w9
   173dc:	bl	23a0 <memcpy@plt>
   173e0:	ldr	w9, [sp, #16]
   173e4:	ldur	x8, [x29, #-16]
   173e8:	ldr	w11, [x8, #128]
   173ec:	add	w9, w11, w9
   173f0:	str	w9, [x8, #128]
   173f4:	ldr	w9, [sp, #16]
   173f8:	mov	w8, w9
   173fc:	ldur	x10, [x29, #-16]
   17400:	ldr	x12, [x10, #16]
   17404:	add	x8, x12, x8
   17408:	str	x8, [x10, #16]
   1740c:	ldur	x8, [x29, #-24]
   17410:	ldr	w9, [sp, #16]
   17414:	mov	w10, w9
   17418:	add	x8, x8, x10
   1741c:	stur	x8, [x29, #-24]
   17420:	ldr	w9, [sp, #16]
   17424:	mov	w8, w9
   17428:	ldr	x10, [sp, #32]
   1742c:	subs	x8, x10, x8
   17430:	str	x8, [sp, #32]
   17434:	ldr	x8, [sp, #32]
   17438:	cbz	x8, 17460 <gzwrite@@Base+0x26c>
   1743c:	ldur	x0, [x29, #-16]
   17440:	mov	w8, wzr
   17444:	mov	w1, w8
   17448:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   1744c:	mov	w8, #0xffffffff            	// #-1
   17450:	cmp	w0, w8
   17454:	b.ne	17460 <gzwrite@@Base+0x26c>  // b.any
   17458:	stur	xzr, [x29, #-8]
   1745c:	b	17538 <gzwrite@@Base+0x344>
   17460:	ldr	x8, [sp, #32]
   17464:	cbnz	x8, 17348 <gzwrite@@Base+0x154>
   17468:	b	17530 <gzwrite@@Base+0x33c>
   1746c:	ldur	x8, [x29, #-16]
   17470:	ldr	w9, [x8, #128]
   17474:	cbz	w9, 1749c <gzwrite@@Base+0x2a8>
   17478:	ldur	x0, [x29, #-16]
   1747c:	mov	w8, wzr
   17480:	mov	w1, w8
   17484:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   17488:	mov	w8, #0xffffffff            	// #-1
   1748c:	cmp	w0, w8
   17490:	b.ne	1749c <gzwrite@@Base+0x2a8>  // b.any
   17494:	stur	xzr, [x29, #-8]
   17498:	b	17538 <gzwrite@@Base+0x344>
   1749c:	ldur	x8, [x29, #-24]
   174a0:	ldur	x9, [x29, #-16]
   174a4:	str	x8, [x9, #120]
   174a8:	mov	w8, #0xffffffff            	// #-1
   174ac:	str	w8, [sp, #12]
   174b0:	ldr	w8, [sp, #12]
   174b4:	mov	w9, w8
   174b8:	ldr	x10, [sp, #32]
   174bc:	cmp	x9, x10
   174c0:	b.ls	174cc <gzwrite@@Base+0x2d8>  // b.plast
   174c4:	ldr	x8, [sp, #32]
   174c8:	str	w8, [sp, #12]
   174cc:	ldr	w8, [sp, #12]
   174d0:	ldur	x9, [x29, #-16]
   174d4:	str	w8, [x9, #128]
   174d8:	ldr	w8, [sp, #12]
   174dc:	mov	w9, w8
   174e0:	ldur	x10, [x29, #-16]
   174e4:	ldr	x11, [x10, #16]
   174e8:	add	x9, x11, x9
   174ec:	str	x9, [x10, #16]
   174f0:	ldur	x0, [x29, #-16]
   174f4:	mov	w8, wzr
   174f8:	mov	w1, w8
   174fc:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   17500:	mov	w8, #0xffffffff            	// #-1
   17504:	cmp	w0, w8
   17508:	b.ne	17514 <gzwrite@@Base+0x320>  // b.any
   1750c:	stur	xzr, [x29, #-8]
   17510:	b	17538 <gzwrite@@Base+0x344>
   17514:	ldr	w8, [sp, #12]
   17518:	mov	w9, w8
   1751c:	ldr	x10, [sp, #32]
   17520:	subs	x9, x10, x9
   17524:	str	x9, [sp, #32]
   17528:	ldr	x8, [sp, #32]
   1752c:	cbnz	x8, 174a8 <gzwrite@@Base+0x2b4>
   17530:	ldr	x8, [sp, #24]
   17534:	stur	x8, [x29, #-8]
   17538:	ldur	x0, [x29, #-8]
   1753c:	ldp	x29, x30, [sp, #64]
   17540:	add	sp, sp, #0x50
   17544:	ret

0000000000017548 <gzfwrite@@ZLIB_1.2.9>:
   17548:	sub	sp, sp, #0x50
   1754c:	stp	x29, x30, [sp, #64]
   17550:	add	x29, sp, #0x40
   17554:	stur	x0, [x29, #-16]
   17558:	stur	x1, [x29, #-24]
   1755c:	str	x2, [sp, #32]
   17560:	str	x3, [sp, #24]
   17564:	ldr	x8, [sp, #24]
   17568:	cbnz	x8, 17574 <gzfwrite@@ZLIB_1.2.9+0x2c>
   1756c:	stur	xzr, [x29, #-8]
   17570:	b	17628 <gzfwrite@@ZLIB_1.2.9+0xe0>
   17574:	ldr	x8, [sp, #24]
   17578:	str	x8, [sp, #8]
   1757c:	ldr	x8, [sp, #8]
   17580:	ldr	w9, [x8, #24]
   17584:	mov	w10, #0x79b1                	// #31153
   17588:	cmp	w9, w10
   1758c:	b.ne	1759c <gzfwrite@@ZLIB_1.2.9+0x54>  // b.any
   17590:	ldr	x8, [sp, #8]
   17594:	ldr	w9, [x8, #108]
   17598:	cbz	w9, 175a4 <gzfwrite@@ZLIB_1.2.9+0x5c>
   1759c:	stur	xzr, [x29, #-8]
   175a0:	b	17628 <gzfwrite@@ZLIB_1.2.9+0xe0>
   175a4:	ldr	x8, [sp, #32]
   175a8:	ldur	x9, [x29, #-24]
   175ac:	mul	x8, x8, x9
   175b0:	str	x8, [sp, #16]
   175b4:	ldur	x8, [x29, #-24]
   175b8:	cbz	x8, 175f0 <gzfwrite@@ZLIB_1.2.9+0xa8>
   175bc:	ldr	x8, [sp, #16]
   175c0:	ldur	x9, [x29, #-24]
   175c4:	udiv	x8, x8, x9
   175c8:	ldr	x9, [sp, #32]
   175cc:	cmp	x8, x9
   175d0:	b.eq	175f0 <gzfwrite@@ZLIB_1.2.9+0xa8>  // b.none
   175d4:	ldr	x0, [sp, #8]
   175d8:	mov	w1, #0xfffffffe            	// #-2
   175dc:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   175e0:	add	x2, x2, #0x777
   175e4:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   175e8:	stur	xzr, [x29, #-8]
   175ec:	b	17628 <gzfwrite@@ZLIB_1.2.9+0xe0>
   175f0:	ldr	x8, [sp, #16]
   175f4:	cbz	x8, 17618 <gzfwrite@@ZLIB_1.2.9+0xd0>
   175f8:	ldr	x0, [sp, #8]
   175fc:	ldur	x1, [x29, #-16]
   17600:	ldr	x2, [sp, #16]
   17604:	bl	172a0 <gzwrite@@Base+0xac>
   17608:	ldur	x8, [x29, #-24]
   1760c:	udiv	x8, x0, x8
   17610:	str	x8, [sp]
   17614:	b	17620 <gzfwrite@@ZLIB_1.2.9+0xd8>
   17618:	mov	x8, xzr
   1761c:	str	x8, [sp]
   17620:	ldr	x8, [sp]
   17624:	stur	x8, [x29, #-8]
   17628:	ldur	x0, [x29, #-8]
   1762c:	ldp	x29, x30, [sp, #64]
   17630:	add	sp, sp, #0x50
   17634:	ret

0000000000017638 <gzputc@@Base>:
   17638:	sub	sp, sp, #0x40
   1763c:	stp	x29, x30, [sp, #48]
   17640:	add	x29, sp, #0x30
   17644:	stur	x0, [x29, #-16]
   17648:	stur	w1, [x29, #-20]
   1764c:	ldur	x8, [x29, #-16]
   17650:	cbnz	x8, 17660 <gzputc@@Base+0x28>
   17654:	mov	w8, #0xffffffff            	// #-1
   17658:	stur	w8, [x29, #-4]
   1765c:	b	177c4 <gzputc@@Base+0x18c>
   17660:	ldur	x8, [x29, #-16]
   17664:	str	x8, [sp, #8]
   17668:	ldr	x8, [sp, #8]
   1766c:	add	x8, x8, #0x78
   17670:	str	x8, [sp]
   17674:	ldr	x8, [sp, #8]
   17678:	ldr	w9, [x8, #24]
   1767c:	mov	w10, #0x79b1                	// #31153
   17680:	cmp	w9, w10
   17684:	b.ne	17694 <gzputc@@Base+0x5c>  // b.any
   17688:	ldr	x8, [sp, #8]
   1768c:	ldr	w9, [x8, #108]
   17690:	cbz	w9, 176a0 <gzputc@@Base+0x68>
   17694:	mov	w8, #0xffffffff            	// #-1
   17698:	stur	w8, [x29, #-4]
   1769c:	b	177c4 <gzputc@@Base+0x18c>
   176a0:	ldr	x8, [sp, #8]
   176a4:	ldr	w9, [x8, #104]
   176a8:	cbz	w9, 176dc <gzputc@@Base+0xa4>
   176ac:	ldr	x8, [sp, #8]
   176b0:	str	wzr, [x8, #104]
   176b4:	ldr	x0, [sp, #8]
   176b8:	ldr	x8, [sp, #8]
   176bc:	ldr	x1, [x8, #96]
   176c0:	bl	177d4 <gzputc@@Base+0x19c>
   176c4:	mov	w9, #0xffffffff            	// #-1
   176c8:	cmp	w0, w9
   176cc:	b.ne	176dc <gzputc@@Base+0xa4>  // b.any
   176d0:	mov	w8, #0xffffffff            	// #-1
   176d4:	stur	w8, [x29, #-4]
   176d8:	b	177c4 <gzputc@@Base+0x18c>
   176dc:	ldr	x8, [sp, #8]
   176e0:	ldr	w9, [x8, #40]
   176e4:	cbz	w9, 1778c <gzputc@@Base+0x154>
   176e8:	ldr	x8, [sp]
   176ec:	ldr	w9, [x8, #8]
   176f0:	cbnz	w9, 17704 <gzputc@@Base+0xcc>
   176f4:	ldr	x8, [sp, #8]
   176f8:	ldr	x8, [x8, #48]
   176fc:	ldr	x9, [sp]
   17700:	str	x8, [x9]
   17704:	ldr	x8, [sp]
   17708:	ldr	x8, [x8]
   1770c:	ldr	x9, [sp]
   17710:	ldr	w10, [x9, #8]
   17714:	mov	w9, w10
   17718:	add	x8, x8, x9
   1771c:	ldr	x9, [sp, #8]
   17720:	ldr	x9, [x9, #48]
   17724:	subs	x8, x8, x9
   17728:	str	w8, [sp, #24]
   1772c:	ldr	w8, [sp, #24]
   17730:	ldr	x9, [sp, #8]
   17734:	ldr	w10, [x9, #40]
   17738:	cmp	w8, w10
   1773c:	b.cs	1778c <gzputc@@Base+0x154>  // b.hs, b.nlast
   17740:	ldur	w8, [x29, #-20]
   17744:	ldr	x9, [sp, #8]
   17748:	ldr	x9, [x9, #48]
   1774c:	ldr	w10, [sp, #24]
   17750:	mov	w11, w10
   17754:	add	x9, x9, x11
   17758:	strb	w8, [x9]
   1775c:	ldr	x9, [sp]
   17760:	ldr	w8, [x9, #8]
   17764:	add	w8, w8, #0x1
   17768:	str	w8, [x9, #8]
   1776c:	ldr	x9, [sp, #8]
   17770:	ldr	x11, [x9, #16]
   17774:	add	x11, x11, #0x1
   17778:	str	x11, [x9, #16]
   1777c:	ldur	w8, [x29, #-20]
   17780:	and	w8, w8, #0xff
   17784:	stur	w8, [x29, #-4]
   17788:	b	177c4 <gzputc@@Base+0x18c>
   1778c:	ldur	w8, [x29, #-20]
   17790:	add	x1, sp, #0x17
   17794:	strb	w8, [sp, #23]
   17798:	ldr	x0, [sp, #8]
   1779c:	mov	x2, #0x1                   	// #1
   177a0:	bl	172a0 <gzwrite@@Base+0xac>
   177a4:	cmp	x0, #0x1
   177a8:	b.eq	177b8 <gzputc@@Base+0x180>  // b.none
   177ac:	mov	w8, #0xffffffff            	// #-1
   177b0:	stur	w8, [x29, #-4]
   177b4:	b	177c4 <gzputc@@Base+0x18c>
   177b8:	ldur	w8, [x29, #-20]
   177bc:	and	w8, w8, #0xff
   177c0:	stur	w8, [x29, #-4]
   177c4:	ldur	w0, [x29, #-4]
   177c8:	ldp	x29, x30, [sp, #48]
   177cc:	add	sp, sp, #0x40
   177d0:	ret
   177d4:	sub	sp, sp, #0x40
   177d8:	stp	x29, x30, [sp, #48]
   177dc:	add	x29, sp, #0x30
   177e0:	stur	x0, [x29, #-16]
   177e4:	str	x1, [sp, #24]
   177e8:	ldur	x8, [x29, #-16]
   177ec:	add	x8, x8, #0x78
   177f0:	str	x8, [sp, #8]
   177f4:	ldr	x8, [sp, #8]
   177f8:	ldr	w9, [x8, #8]
   177fc:	cbz	w9, 17828 <gzputc@@Base+0x1f0>
   17800:	ldur	x0, [x29, #-16]
   17804:	mov	w8, wzr
   17808:	mov	w1, w8
   1780c:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   17810:	mov	w8, #0xffffffff            	// #-1
   17814:	cmp	w0, w8
   17818:	b.ne	17828 <gzputc@@Base+0x1f0>  // b.any
   1781c:	mov	w8, #0xffffffff            	// #-1
   17820:	stur	w8, [x29, #-4]
   17824:	b	17910 <gzputc@@Base+0x2d8>
   17828:	mov	w8, #0x1                   	// #1
   1782c:	str	w8, [sp, #20]
   17830:	ldr	x8, [sp, #24]
   17834:	cbz	x8, 1790c <gzputc@@Base+0x2d4>
   17838:	ldur	x8, [x29, #-16]
   1783c:	ldr	w9, [x8, #40]
   17840:	mov	w8, w9
   17844:	ldr	x10, [sp, #24]
   17848:	cmp	x8, x10
   1784c:	b.le	1785c <gzputc@@Base+0x224>
   17850:	ldr	x8, [sp, #24]
   17854:	str	w8, [sp, #4]
   17858:	b	17868 <gzputc@@Base+0x230>
   1785c:	ldur	x8, [x29, #-16]
   17860:	ldr	w9, [x8, #40]
   17864:	str	w9, [sp, #4]
   17868:	ldr	w8, [sp, #4]
   1786c:	str	w8, [sp, #16]
   17870:	ldr	w8, [sp, #20]
   17874:	cbz	w8, 17898 <gzputc@@Base+0x260>
   17878:	ldur	x8, [x29, #-16]
   1787c:	ldr	x0, [x8, #48]
   17880:	ldr	w9, [sp, #16]
   17884:	mov	w2, w9
   17888:	mov	w9, wzr
   1788c:	mov	w1, w9
   17890:	bl	24a0 <memset@plt>
   17894:	str	wzr, [sp, #20]
   17898:	ldr	w8, [sp, #16]
   1789c:	ldr	x9, [sp, #8]
   178a0:	str	w8, [x9, #8]
   178a4:	ldur	x9, [x29, #-16]
   178a8:	ldr	x9, [x9, #48]
   178ac:	ldr	x10, [sp, #8]
   178b0:	str	x9, [x10]
   178b4:	ldr	w8, [sp, #16]
   178b8:	mov	w9, w8
   178bc:	ldur	x10, [x29, #-16]
   178c0:	ldr	x11, [x10, #16]
   178c4:	add	x9, x11, x9
   178c8:	str	x9, [x10, #16]
   178cc:	ldur	x0, [x29, #-16]
   178d0:	mov	w8, wzr
   178d4:	mov	w1, w8
   178d8:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   178dc:	mov	w8, #0xffffffff            	// #-1
   178e0:	cmp	w0, w8
   178e4:	b.ne	178f4 <gzputc@@Base+0x2bc>  // b.any
   178e8:	mov	w8, #0xffffffff            	// #-1
   178ec:	stur	w8, [x29, #-4]
   178f0:	b	17910 <gzputc@@Base+0x2d8>
   178f4:	ldr	w8, [sp, #16]
   178f8:	mov	w9, w8
   178fc:	ldr	x10, [sp, #24]
   17900:	subs	x9, x10, x9
   17904:	str	x9, [sp, #24]
   17908:	b	17830 <gzputc@@Base+0x1f8>
   1790c:	stur	wzr, [x29, #-4]
   17910:	ldur	w0, [x29, #-4]
   17914:	ldp	x29, x30, [sp, #48]
   17918:	add	sp, sp, #0x40
   1791c:	ret

0000000000017920 <gzputs@@Base>:
   17920:	sub	sp, sp, #0x50
   17924:	stp	x29, x30, [sp, #64]
   17928:	add	x29, sp, #0x40
   1792c:	stur	x0, [x29, #-16]
   17930:	stur	x1, [x29, #-24]
   17934:	ldur	x8, [x29, #-16]
   17938:	cbnz	x8, 17948 <gzputs@@Base+0x28>
   1793c:	mov	w8, #0xffffffff            	// #-1
   17940:	stur	w8, [x29, #-4]
   17944:	b	179c8 <gzputs@@Base+0xa8>
   17948:	ldur	x8, [x29, #-16]
   1794c:	str	x8, [sp, #16]
   17950:	ldr	x8, [sp, #16]
   17954:	ldr	w9, [x8, #24]
   17958:	mov	w10, #0x79b1                	// #31153
   1795c:	cmp	w9, w10
   17960:	b.ne	17970 <gzputs@@Base+0x50>  // b.any
   17964:	ldr	x8, [sp, #16]
   17968:	ldr	w9, [x8, #108]
   1796c:	cbz	w9, 1797c <gzputs@@Base+0x5c>
   17970:	mov	w8, #0xffffffff            	// #-1
   17974:	stur	w8, [x29, #-4]
   17978:	b	179c8 <gzputs@@Base+0xa8>
   1797c:	ldur	x0, [x29, #-24]
   17980:	bl	23e0 <strlen@plt>
   17984:	str	x0, [sp, #24]
   17988:	ldr	x0, [sp, #16]
   1798c:	ldur	x1, [x29, #-24]
   17990:	ldr	x2, [sp, #24]
   17994:	bl	172a0 <gzwrite@@Base+0xac>
   17998:	stur	w0, [x29, #-28]
   1799c:	ldur	w8, [x29, #-28]
   179a0:	cbnz	w8, 179b8 <gzputs@@Base+0x98>
   179a4:	ldr	x8, [sp, #24]
   179a8:	cbz	x8, 179b8 <gzputs@@Base+0x98>
   179ac:	mov	w8, #0xffffffff            	// #-1
   179b0:	str	w8, [sp, #12]
   179b4:	b	179c0 <gzputs@@Base+0xa0>
   179b8:	ldur	w8, [x29, #-28]
   179bc:	str	w8, [sp, #12]
   179c0:	ldr	w8, [sp, #12]
   179c4:	stur	w8, [x29, #-4]
   179c8:	ldur	w0, [x29, #-4]
   179cc:	ldp	x29, x30, [sp, #64]
   179d0:	add	sp, sp, #0x50
   179d4:	ret

00000000000179d8 <gzvprintf@@ZLIB_1.2.7.1>:
   179d8:	sub	sp, sp, #0x80
   179dc:	stp	x29, x30, [sp, #112]
   179e0:	add	x29, sp, #0x70
   179e4:	stur	x0, [x29, #-16]
   179e8:	stur	x1, [x29, #-24]
   179ec:	ldur	x8, [x29, #-16]
   179f0:	str	x2, [sp, #8]
   179f4:	cbnz	x8, 17a04 <gzvprintf@@ZLIB_1.2.7.1+0x2c>
   179f8:	mov	w8, #0xfffffffe            	// #-2
   179fc:	stur	w8, [x29, #-4]
   17a00:	b	17c7c <gzvprintf@@ZLIB_1.2.7.1+0x2a4>
   17a04:	ldur	x8, [x29, #-16]
   17a08:	stur	x8, [x29, #-48]
   17a0c:	ldur	x8, [x29, #-48]
   17a10:	add	x8, x8, #0x78
   17a14:	str	x8, [sp, #56]
   17a18:	ldur	x8, [x29, #-48]
   17a1c:	ldr	w9, [x8, #24]
   17a20:	mov	w10, #0x79b1                	// #31153
   17a24:	cmp	w9, w10
   17a28:	b.ne	17a38 <gzvprintf@@ZLIB_1.2.7.1+0x60>  // b.any
   17a2c:	ldur	x8, [x29, #-48]
   17a30:	ldr	w9, [x8, #108]
   17a34:	cbz	w9, 17a44 <gzvprintf@@ZLIB_1.2.7.1+0x6c>
   17a38:	mov	w8, #0xfffffffe            	// #-2
   17a3c:	stur	w8, [x29, #-4]
   17a40:	b	17c7c <gzvprintf@@ZLIB_1.2.7.1+0x2a4>
   17a44:	ldur	x8, [x29, #-48]
   17a48:	ldr	w9, [x8, #40]
   17a4c:	cbnz	w9, 17a74 <gzvprintf@@ZLIB_1.2.7.1+0x9c>
   17a50:	ldur	x0, [x29, #-48]
   17a54:	bl	17c8c <gzvprintf@@ZLIB_1.2.7.1+0x2b4>
   17a58:	mov	w8, #0xffffffff            	// #-1
   17a5c:	cmp	w0, w8
   17a60:	b.ne	17a74 <gzvprintf@@ZLIB_1.2.7.1+0x9c>  // b.any
   17a64:	ldur	x8, [x29, #-48]
   17a68:	ldr	w9, [x8, #108]
   17a6c:	stur	w9, [x29, #-4]
   17a70:	b	17c7c <gzvprintf@@ZLIB_1.2.7.1+0x2a4>
   17a74:	ldur	x8, [x29, #-48]
   17a78:	ldr	w9, [x8, #104]
   17a7c:	cbz	w9, 17ab4 <gzvprintf@@ZLIB_1.2.7.1+0xdc>
   17a80:	ldur	x8, [x29, #-48]
   17a84:	str	wzr, [x8, #104]
   17a88:	ldur	x0, [x29, #-48]
   17a8c:	ldur	x8, [x29, #-48]
   17a90:	ldr	x1, [x8, #96]
   17a94:	bl	177d4 <gzputc@@Base+0x19c>
   17a98:	mov	w9, #0xffffffff            	// #-1
   17a9c:	cmp	w0, w9
   17aa0:	b.ne	17ab4 <gzvprintf@@ZLIB_1.2.7.1+0xdc>  // b.any
   17aa4:	ldur	x8, [x29, #-48]
   17aa8:	ldr	w9, [x8, #108]
   17aac:	stur	w9, [x29, #-4]
   17ab0:	b	17c7c <gzvprintf@@ZLIB_1.2.7.1+0x2a4>
   17ab4:	ldr	x8, [sp, #56]
   17ab8:	ldr	w9, [x8, #8]
   17abc:	cbnz	w9, 17ad0 <gzvprintf@@ZLIB_1.2.7.1+0xf8>
   17ac0:	ldur	x8, [x29, #-48]
   17ac4:	ldr	x8, [x8, #48]
   17ac8:	ldr	x9, [sp, #56]
   17acc:	str	x8, [x9]
   17ad0:	ldur	x8, [x29, #-48]
   17ad4:	ldr	x8, [x8, #48]
   17ad8:	ldr	x9, [sp, #56]
   17adc:	ldr	x9, [x9]
   17ae0:	ldur	x10, [x29, #-48]
   17ae4:	ldr	x10, [x10, #48]
   17ae8:	subs	x9, x9, x10
   17aec:	add	x8, x8, x9
   17af0:	ldr	x9, [sp, #56]
   17af4:	ldr	w11, [x9, #8]
   17af8:	mov	w9, w11
   17afc:	add	x8, x8, x9
   17b00:	stur	x8, [x29, #-40]
   17b04:	ldur	x8, [x29, #-40]
   17b08:	ldur	x9, [x29, #-48]
   17b0c:	ldr	w11, [x9, #40]
   17b10:	subs	w11, w11, #0x1
   17b14:	mov	w9, w11
   17b18:	ubfx	x9, x9, #0, #32
   17b1c:	add	x8, x8, x9
   17b20:	mov	w11, #0x0                   	// #0
   17b24:	strb	w11, [x8]
   17b28:	ldur	x0, [x29, #-40]
   17b2c:	ldur	x8, [x29, #-48]
   17b30:	ldr	w11, [x8, #40]
   17b34:	mov	w1, w11
   17b38:	ldur	x2, [x29, #-24]
   17b3c:	ldr	x8, [sp, #8]
   17b40:	ldr	q0, [x8]
   17b44:	add	x3, sp, #0x10
   17b48:	str	q0, [sp, #16]
   17b4c:	ldr	q0, [x8, #16]
   17b50:	str	q0, [sp, #32]
   17b54:	bl	2620 <vsnprintf@plt>
   17b58:	stur	w0, [x29, #-28]
   17b5c:	ldur	w11, [x29, #-28]
   17b60:	cbz	w11, 17b90 <gzvprintf@@ZLIB_1.2.7.1+0x1b8>
   17b64:	ldur	w8, [x29, #-28]
   17b68:	ldur	x9, [x29, #-48]
   17b6c:	ldr	w10, [x9, #40]
   17b70:	cmp	w8, w10
   17b74:	b.cs	17b90 <gzvprintf@@ZLIB_1.2.7.1+0x1b8>  // b.hs, b.nlast
   17b78:	ldur	x8, [x29, #-40]
   17b7c:	ldur	x9, [x29, #-48]
   17b80:	ldr	w10, [x9, #40]
   17b84:	subs	w10, w10, #0x1
   17b88:	ldrb	w10, [x8, w10, uxtw]
   17b8c:	cbz	w10, 17b98 <gzvprintf@@ZLIB_1.2.7.1+0x1c0>
   17b90:	stur	wzr, [x29, #-4]
   17b94:	b	17c7c <gzvprintf@@ZLIB_1.2.7.1+0x2a4>
   17b98:	ldur	w8, [x29, #-28]
   17b9c:	ldr	x9, [sp, #56]
   17ba0:	ldr	w10, [x9, #8]
   17ba4:	add	w8, w10, w8
   17ba8:	str	w8, [x9, #8]
   17bac:	ldursw	x9, [x29, #-28]
   17bb0:	ldur	x11, [x29, #-48]
   17bb4:	ldr	x12, [x11, #16]
   17bb8:	add	x9, x12, x9
   17bbc:	str	x9, [x11, #16]
   17bc0:	ldr	x9, [sp, #56]
   17bc4:	ldr	w8, [x9, #8]
   17bc8:	ldur	x9, [x29, #-48]
   17bcc:	ldr	w10, [x9, #40]
   17bd0:	cmp	w8, w10
   17bd4:	b.cc	17c74 <gzvprintf@@ZLIB_1.2.7.1+0x29c>  // b.lo, b.ul, b.last
   17bd8:	ldr	x8, [sp, #56]
   17bdc:	ldr	w9, [x8, #8]
   17be0:	ldur	x8, [x29, #-48]
   17be4:	ldr	w10, [x8, #40]
   17be8:	subs	w9, w9, w10
   17bec:	stur	w9, [x29, #-32]
   17bf0:	ldur	x8, [x29, #-48]
   17bf4:	ldr	w9, [x8, #40]
   17bf8:	ldr	x8, [sp, #56]
   17bfc:	str	w9, [x8, #8]
   17c00:	ldur	x0, [x29, #-48]
   17c04:	mov	w9, wzr
   17c08:	mov	w1, w9
   17c0c:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   17c10:	mov	w9, #0xffffffff            	// #-1
   17c14:	cmp	w0, w9
   17c18:	b.ne	17c2c <gzvprintf@@ZLIB_1.2.7.1+0x254>  // b.any
   17c1c:	ldur	x8, [x29, #-48]
   17c20:	ldr	w9, [x8, #108]
   17c24:	stur	w9, [x29, #-4]
   17c28:	b	17c7c <gzvprintf@@ZLIB_1.2.7.1+0x2a4>
   17c2c:	ldur	x8, [x29, #-48]
   17c30:	ldr	x0, [x8, #48]
   17c34:	ldur	x8, [x29, #-48]
   17c38:	ldr	x8, [x8, #48]
   17c3c:	ldur	x9, [x29, #-48]
   17c40:	ldr	w10, [x9, #40]
   17c44:	mov	w9, w10
   17c48:	add	x1, x8, x9
   17c4c:	ldur	w10, [x29, #-32]
   17c50:	mov	w2, w10
   17c54:	bl	23a0 <memcpy@plt>
   17c58:	ldur	x8, [x29, #-48]
   17c5c:	ldr	x8, [x8, #48]
   17c60:	ldr	x9, [sp, #56]
   17c64:	str	x8, [x9]
   17c68:	ldur	w10, [x29, #-32]
   17c6c:	ldr	x8, [sp, #56]
   17c70:	str	w10, [x8, #8]
   17c74:	ldur	w8, [x29, #-28]
   17c78:	stur	w8, [x29, #-4]
   17c7c:	ldur	w0, [x29, #-4]
   17c80:	ldp	x29, x30, [sp, #112]
   17c84:	add	sp, sp, #0x80
   17c88:	ret
   17c8c:	sub	sp, sp, #0x40
   17c90:	stp	x29, x30, [sp, #48]
   17c94:	add	x29, sp, #0x30
   17c98:	adrp	x8, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   17c9c:	add	x8, x8, #0x740
   17ca0:	stur	x0, [x29, #-16]
   17ca4:	ldur	x9, [x29, #-16]
   17ca8:	add	x9, x9, #0x78
   17cac:	str	x9, [sp, #16]
   17cb0:	ldur	x9, [x29, #-16]
   17cb4:	ldr	w10, [x9, #44]
   17cb8:	lsl	w10, w10, #1
   17cbc:	mov	w9, w10
   17cc0:	ubfx	x0, x9, #0, #32
   17cc4:	str	x8, [sp, #8]
   17cc8:	bl	2460 <malloc@plt>
   17ccc:	ldur	x8, [x29, #-16]
   17cd0:	str	x0, [x8, #48]
   17cd4:	ldur	x8, [x29, #-16]
   17cd8:	ldr	x8, [x8, #48]
   17cdc:	cbnz	x8, 17cfc <gzvprintf@@ZLIB_1.2.7.1+0x324>
   17ce0:	ldur	x0, [x29, #-16]
   17ce4:	mov	w1, #0xfffffffc            	// #-4
   17ce8:	ldr	x2, [sp, #8]
   17cec:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   17cf0:	mov	w8, #0xffffffff            	// #-1
   17cf4:	stur	w8, [x29, #-4]
   17cf8:	b	17e40 <gzvprintf@@ZLIB_1.2.7.1+0x468>
   17cfc:	ldur	x8, [x29, #-16]
   17d00:	ldr	w9, [x8, #64]
   17d04:	cbnz	w9, 17df0 <gzvprintf@@ZLIB_1.2.7.1+0x418>
   17d08:	ldur	x8, [x29, #-16]
   17d0c:	ldr	w9, [x8, #44]
   17d10:	mov	w0, w9
   17d14:	bl	2460 <malloc@plt>
   17d18:	ldur	x8, [x29, #-16]
   17d1c:	str	x0, [x8, #56]
   17d20:	ldur	x8, [x29, #-16]
   17d24:	ldr	x8, [x8, #56]
   17d28:	cbnz	x8, 17d54 <gzvprintf@@ZLIB_1.2.7.1+0x37c>
   17d2c:	ldur	x8, [x29, #-16]
   17d30:	ldr	x0, [x8, #48]
   17d34:	bl	2570 <free@plt>
   17d38:	ldur	x0, [x29, #-16]
   17d3c:	mov	w1, #0xfffffffc            	// #-4
   17d40:	ldr	x2, [sp, #8]
   17d44:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   17d48:	mov	w9, #0xffffffff            	// #-1
   17d4c:	stur	w9, [x29, #-4]
   17d50:	b	17e40 <gzvprintf@@ZLIB_1.2.7.1+0x468>
   17d54:	ldr	x8, [sp, #16]
   17d58:	mov	x9, xzr
   17d5c:	str	x9, [x8, #64]
   17d60:	ldr	x8, [sp, #16]
   17d64:	str	x9, [x8, #72]
   17d68:	ldr	x8, [sp, #16]
   17d6c:	str	x9, [x8, #80]
   17d70:	ldr	x0, [sp, #16]
   17d74:	ldur	x8, [x29, #-16]
   17d78:	ldr	w1, [x8, #88]
   17d7c:	ldur	x8, [x29, #-16]
   17d80:	ldr	w5, [x8, #92]
   17d84:	mov	w10, #0x8                   	// #8
   17d88:	mov	w2, w10
   17d8c:	mov	w3, #0x1f                  	// #31
   17d90:	mov	w4, w10
   17d94:	adrp	x6, 1a000 <gzclose_w@@ZLIB_1.2.3.5+0x1b88>
   17d98:	add	x6, x6, #0xf2a
   17d9c:	mov	w7, #0x70                  	// #112
   17da0:	bl	24d0 <deflateInit2_@plt>
   17da4:	stur	w0, [x29, #-20]
   17da8:	ldur	w10, [x29, #-20]
   17dac:	cbz	w10, 17de4 <gzvprintf@@ZLIB_1.2.7.1+0x40c>
   17db0:	ldur	x8, [x29, #-16]
   17db4:	ldr	x0, [x8, #56]
   17db8:	bl	2570 <free@plt>
   17dbc:	ldur	x8, [x29, #-16]
   17dc0:	ldr	x0, [x8, #48]
   17dc4:	bl	2570 <free@plt>
   17dc8:	ldur	x0, [x29, #-16]
   17dcc:	mov	w1, #0xfffffffc            	// #-4
   17dd0:	ldr	x2, [sp, #8]
   17dd4:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   17dd8:	mov	w9, #0xffffffff            	// #-1
   17ddc:	stur	w9, [x29, #-4]
   17de0:	b	17e40 <gzvprintf@@ZLIB_1.2.7.1+0x468>
   17de4:	ldr	x8, [sp, #16]
   17de8:	mov	x9, xzr
   17dec:	str	x9, [x8]
   17df0:	ldur	x8, [x29, #-16]
   17df4:	ldr	w9, [x8, #44]
   17df8:	ldur	x8, [x29, #-16]
   17dfc:	str	w9, [x8, #40]
   17e00:	ldur	x8, [x29, #-16]
   17e04:	ldr	w9, [x8, #64]
   17e08:	cbnz	w9, 17e3c <gzvprintf@@ZLIB_1.2.7.1+0x464>
   17e0c:	ldur	x8, [x29, #-16]
   17e10:	ldr	w9, [x8, #40]
   17e14:	ldr	x8, [sp, #16]
   17e18:	str	w9, [x8, #32]
   17e1c:	ldur	x8, [x29, #-16]
   17e20:	ldr	x8, [x8, #56]
   17e24:	ldr	x10, [sp, #16]
   17e28:	str	x8, [x10, #24]
   17e2c:	ldr	x8, [sp, #16]
   17e30:	ldr	x8, [x8, #24]
   17e34:	ldur	x10, [x29, #-16]
   17e38:	str	x8, [x10, #8]
   17e3c:	stur	wzr, [x29, #-4]
   17e40:	ldur	w0, [x29, #-4]
   17e44:	ldp	x29, x30, [sp, #48]
   17e48:	add	sp, sp, #0x40
   17e4c:	ret
   17e50:	sub	sp, sp, #0x80
   17e54:	stp	x29, x30, [sp, #112]
   17e58:	add	x29, sp, #0x70
   17e5c:	mov	w8, #0x40000000            	// #1073741824
   17e60:	stur	x0, [x29, #-16]
   17e64:	stur	w1, [x29, #-20]
   17e68:	stur	w8, [x29, #-40]
   17e6c:	ldur	x9, [x29, #-16]
   17e70:	add	x9, x9, #0x78
   17e74:	stur	x9, [x29, #-48]
   17e78:	ldur	x9, [x29, #-16]
   17e7c:	ldr	w8, [x9, #40]
   17e80:	cbnz	w8, 17ea4 <gzvprintf@@ZLIB_1.2.7.1+0x4cc>
   17e84:	ldur	x0, [x29, #-16]
   17e88:	bl	17c8c <gzvprintf@@ZLIB_1.2.7.1+0x2b4>
   17e8c:	mov	w8, #0xffffffff            	// #-1
   17e90:	cmp	w0, w8
   17e94:	b.ne	17ea4 <gzvprintf@@ZLIB_1.2.7.1+0x4cc>  // b.any
   17e98:	mov	w8, #0xffffffff            	// #-1
   17e9c:	stur	w8, [x29, #-4]
   17ea0:	b	1816c <gzvprintf@@ZLIB_1.2.7.1+0x794>
   17ea4:	ldur	x8, [x29, #-16]
   17ea8:	ldr	w9, [x8, #64]
   17eac:	cbz	w9, 17f94 <gzvprintf@@ZLIB_1.2.7.1+0x5bc>
   17eb0:	ldur	x8, [x29, #-48]
   17eb4:	ldr	w9, [x8, #8]
   17eb8:	cbz	w9, 17f8c <gzvprintf@@ZLIB_1.2.7.1+0x5b4>
   17ebc:	ldur	x8, [x29, #-48]
   17ec0:	ldr	w9, [x8, #8]
   17ec4:	ldur	w10, [x29, #-40]
   17ec8:	cmp	w9, w10
   17ecc:	b.ls	17edc <gzvprintf@@ZLIB_1.2.7.1+0x504>  // b.plast
   17ed0:	ldur	w8, [x29, #-40]
   17ed4:	stur	w8, [x29, #-52]
   17ed8:	b	17ee8 <gzvprintf@@ZLIB_1.2.7.1+0x510>
   17edc:	ldur	x8, [x29, #-48]
   17ee0:	ldr	w9, [x8, #8]
   17ee4:	stur	w9, [x29, #-52]
   17ee8:	ldur	w8, [x29, #-52]
   17eec:	stur	w8, [x29, #-36]
   17ef0:	ldur	x9, [x29, #-16]
   17ef4:	ldr	w0, [x9, #28]
   17ef8:	ldur	x9, [x29, #-48]
   17efc:	ldr	x1, [x9]
   17f00:	ldur	w8, [x29, #-36]
   17f04:	mov	w2, w8
   17f08:	bl	2530 <write@plt>
   17f0c:	stur	w0, [x29, #-28]
   17f10:	ldur	w8, [x29, #-28]
   17f14:	cmp	w8, #0x0
   17f18:	cset	w8, ge  // ge = tcont
   17f1c:	tbnz	w8, #0, 17f60 <gzvprintf@@ZLIB_1.2.7.1+0x588>
   17f20:	ldur	x0, [x29, #-16]
   17f24:	str	x0, [sp, #48]
   17f28:	bl	2650 <__errno_location@plt>
   17f2c:	ldr	w0, [x0]
   17f30:	bl	2500 <strerror@plt>
   17f34:	ldr	x8, [sp, #48]
   17f38:	str	x0, [sp, #40]
   17f3c:	mov	x0, x8
   17f40:	mov	w9, #0xffffffff            	// #-1
   17f44:	mov	w1, w9
   17f48:	ldr	x2, [sp, #40]
   17f4c:	str	w9, [sp, #36]
   17f50:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   17f54:	ldr	w9, [sp, #36]
   17f58:	stur	w9, [x29, #-4]
   17f5c:	b	1816c <gzvprintf@@ZLIB_1.2.7.1+0x794>
   17f60:	ldur	w8, [x29, #-28]
   17f64:	ldur	x9, [x29, #-48]
   17f68:	ldr	w10, [x9, #8]
   17f6c:	subs	w8, w10, w8
   17f70:	str	w8, [x9, #8]
   17f74:	ldursw	x9, [x29, #-28]
   17f78:	ldur	x11, [x29, #-48]
   17f7c:	ldr	x12, [x11]
   17f80:	add	x9, x12, x9
   17f84:	str	x9, [x11]
   17f88:	b	17eb0 <gzvprintf@@ZLIB_1.2.7.1+0x4d8>
   17f8c:	stur	wzr, [x29, #-4]
   17f90:	b	1816c <gzvprintf@@ZLIB_1.2.7.1+0x794>
   17f94:	stur	wzr, [x29, #-24]
   17f98:	ldur	x8, [x29, #-48]
   17f9c:	ldr	w9, [x8, #32]
   17fa0:	cbz	w9, 17fc4 <gzvprintf@@ZLIB_1.2.7.1+0x5ec>
   17fa4:	ldur	w8, [x29, #-20]
   17fa8:	cbz	w8, 180ec <gzvprintf@@ZLIB_1.2.7.1+0x714>
   17fac:	ldur	w8, [x29, #-20]
   17fb0:	cmp	w8, #0x4
   17fb4:	b.ne	17fc4 <gzvprintf@@ZLIB_1.2.7.1+0x5ec>  // b.any
   17fb8:	ldur	w8, [x29, #-24]
   17fbc:	cmp	w8, #0x1
   17fc0:	b.ne	180ec <gzvprintf@@ZLIB_1.2.7.1+0x714>  // b.any
   17fc4:	ldur	x8, [x29, #-48]
   17fc8:	ldr	x8, [x8, #24]
   17fcc:	ldur	x9, [x29, #-16]
   17fd0:	ldr	x9, [x9, #8]
   17fd4:	cmp	x8, x9
   17fd8:	b.ls	180b0 <gzvprintf@@ZLIB_1.2.7.1+0x6d8>  // b.plast
   17fdc:	ldur	x8, [x29, #-48]
   17fe0:	ldr	x8, [x8, #24]
   17fe4:	ldur	x9, [x29, #-16]
   17fe8:	ldr	x9, [x9, #8]
   17fec:	subs	x8, x8, x9
   17ff0:	ldursw	x9, [x29, #-40]
   17ff4:	cmp	x8, x9
   17ff8:	b.le	18008 <gzvprintf@@ZLIB_1.2.7.1+0x630>
   17ffc:	ldur	w8, [x29, #-40]
   18000:	str	w8, [sp, #32]
   18004:	b	18020 <gzvprintf@@ZLIB_1.2.7.1+0x648>
   18008:	ldur	x8, [x29, #-48]
   1800c:	ldr	x8, [x8, #24]
   18010:	ldur	x9, [x29, #-16]
   18014:	ldr	x9, [x9, #8]
   18018:	subs	x8, x8, x9
   1801c:	str	w8, [sp, #32]
   18020:	ldr	w8, [sp, #32]
   18024:	stur	w8, [x29, #-36]
   18028:	ldur	x9, [x29, #-16]
   1802c:	ldr	w0, [x9, #28]
   18030:	ldur	x9, [x29, #-16]
   18034:	ldr	x1, [x9, #8]
   18038:	ldur	w8, [x29, #-36]
   1803c:	mov	w2, w8
   18040:	bl	2530 <write@plt>
   18044:	stur	w0, [x29, #-28]
   18048:	ldur	w8, [x29, #-28]
   1804c:	cmp	w8, #0x0
   18050:	cset	w8, ge  // ge = tcont
   18054:	tbnz	w8, #0, 18098 <gzvprintf@@ZLIB_1.2.7.1+0x6c0>
   18058:	ldur	x0, [x29, #-16]
   1805c:	str	x0, [sp, #24]
   18060:	bl	2650 <__errno_location@plt>
   18064:	ldr	w0, [x0]
   18068:	bl	2500 <strerror@plt>
   1806c:	ldr	x8, [sp, #24]
   18070:	str	x0, [sp, #16]
   18074:	mov	x0, x8
   18078:	mov	w9, #0xffffffff            	// #-1
   1807c:	mov	w1, w9
   18080:	ldr	x2, [sp, #16]
   18084:	str	w9, [sp, #12]
   18088:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   1808c:	ldr	w9, [sp, #12]
   18090:	stur	w9, [x29, #-4]
   18094:	b	1816c <gzvprintf@@ZLIB_1.2.7.1+0x794>
   18098:	ldursw	x8, [x29, #-28]
   1809c:	ldur	x9, [x29, #-16]
   180a0:	ldr	x10, [x9, #8]
   180a4:	add	x8, x10, x8
   180a8:	str	x8, [x9, #8]
   180ac:	b	17fc4 <gzvprintf@@ZLIB_1.2.7.1+0x5ec>
   180b0:	ldur	x8, [x29, #-48]
   180b4:	ldr	w9, [x8, #32]
   180b8:	cbnz	w9, 180ec <gzvprintf@@ZLIB_1.2.7.1+0x714>
   180bc:	ldur	x8, [x29, #-16]
   180c0:	ldr	w9, [x8, #40]
   180c4:	ldur	x8, [x29, #-48]
   180c8:	str	w9, [x8, #32]
   180cc:	ldur	x8, [x29, #-16]
   180d0:	ldr	x8, [x8, #56]
   180d4:	ldur	x10, [x29, #-48]
   180d8:	str	x8, [x10, #24]
   180dc:	ldur	x8, [x29, #-16]
   180e0:	ldr	x8, [x8, #56]
   180e4:	ldur	x10, [x29, #-16]
   180e8:	str	x8, [x10, #8]
   180ec:	ldur	x8, [x29, #-48]
   180f0:	ldr	w9, [x8, #32]
   180f4:	stur	w9, [x29, #-32]
   180f8:	ldur	x0, [x29, #-48]
   180fc:	ldur	w1, [x29, #-20]
   18100:	bl	2490 <deflate@plt>
   18104:	stur	w0, [x29, #-24]
   18108:	ldur	w9, [x29, #-24]
   1810c:	mov	w10, #0xfffffffe            	// #-2
   18110:	cmp	w9, w10
   18114:	b.ne	18138 <gzvprintf@@ZLIB_1.2.7.1+0x760>  // b.any
   18118:	ldur	x0, [x29, #-16]
   1811c:	mov	w1, #0xfffffffe            	// #-2
   18120:	adrp	x2, 1c000 <gzclose_w@@ZLIB_1.2.3.5+0x3b88>
   18124:	add	x2, x2, #0x830
   18128:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   1812c:	mov	w8, #0xffffffff            	// #-1
   18130:	stur	w8, [x29, #-4]
   18134:	b	1816c <gzvprintf@@ZLIB_1.2.7.1+0x794>
   18138:	ldur	x8, [x29, #-48]
   1813c:	ldr	w9, [x8, #32]
   18140:	ldur	w10, [x29, #-32]
   18144:	subs	w9, w10, w9
   18148:	stur	w9, [x29, #-32]
   1814c:	ldur	w8, [x29, #-32]
   18150:	cbnz	w8, 17f98 <gzvprintf@@ZLIB_1.2.7.1+0x5c0>
   18154:	ldur	w8, [x29, #-20]
   18158:	cmp	w8, #0x4
   1815c:	b.ne	18168 <gzvprintf@@ZLIB_1.2.7.1+0x790>  // b.any
   18160:	ldur	x0, [x29, #-48]
   18164:	bl	2480 <deflateReset@plt>
   18168:	stur	wzr, [x29, #-4]
   1816c:	ldur	w0, [x29, #-4]
   18170:	ldp	x29, x30, [sp, #112]
   18174:	add	sp, sp, #0x80
   18178:	ret

000000000001817c <gzprintf@@Base>:
   1817c:	sub	sp, sp, #0x130
   18180:	stp	x29, x30, [sp, #272]
   18184:	str	x28, [sp, #288]
   18188:	add	x29, sp, #0x110
   1818c:	str	q7, [sp, #112]
   18190:	str	q6, [sp, #96]
   18194:	str	q5, [sp, #80]
   18198:	str	q4, [sp, #64]
   1819c:	str	q3, [sp, #48]
   181a0:	str	q2, [sp, #32]
   181a4:	str	q1, [sp, #16]
   181a8:	str	q0, [sp]
   181ac:	str	x7, [sp, #168]
   181b0:	str	x6, [sp, #160]
   181b4:	str	x5, [sp, #152]
   181b8:	str	x4, [sp, #144]
   181bc:	str	x3, [sp, #136]
   181c0:	str	x2, [sp, #128]
   181c4:	stur	x0, [x29, #-8]
   181c8:	stur	x1, [x29, #-16]
   181cc:	mov	w8, #0xffffff80            	// #-128
   181d0:	stur	w8, [x29, #-20]
   181d4:	mov	w8, #0xffffffd0            	// #-48
   181d8:	stur	w8, [x29, #-24]
   181dc:	mov	x9, sp
   181e0:	add	x9, x9, #0x80
   181e4:	stur	x9, [x29, #-32]
   181e8:	add	x9, sp, #0x80
   181ec:	add	x9, x9, #0x30
   181f0:	stur	x9, [x29, #-40]
   181f4:	add	x9, x29, #0x20
   181f8:	stur	x9, [x29, #-48]
   181fc:	ldur	x0, [x29, #-8]
   18200:	ldur	x1, [x29, #-16]
   18204:	ldur	q0, [x29, #-48]
   18208:	ldur	q1, [x29, #-32]
   1820c:	stur	q1, [x29, #-80]
   18210:	stur	q0, [x29, #-96]
   18214:	sub	x2, x29, #0x60
   18218:	bl	23c0 <gzvprintf@plt>
   1821c:	stur	w0, [x29, #-52]
   18220:	ldur	w0, [x29, #-52]
   18224:	ldr	x28, [sp, #288]
   18228:	ldp	x29, x30, [sp, #272]
   1822c:	add	sp, sp, #0x130
   18230:	ret

0000000000018234 <gzflush@@Base>:
   18234:	sub	sp, sp, #0x30
   18238:	stp	x29, x30, [sp, #32]
   1823c:	add	x29, sp, #0x20
   18240:	str	x0, [sp, #16]
   18244:	str	w1, [sp, #12]
   18248:	ldr	x8, [sp, #16]
   1824c:	cbnz	x8, 1825c <gzflush@@Base+0x28>
   18250:	mov	w8, #0xfffffffe            	// #-2
   18254:	stur	w8, [x29, #-4]
   18258:	b	18310 <gzflush@@Base+0xdc>
   1825c:	ldr	x8, [sp, #16]
   18260:	str	x8, [sp]
   18264:	ldr	x8, [sp]
   18268:	ldr	w9, [x8, #24]
   1826c:	mov	w10, #0x79b1                	// #31153
   18270:	cmp	w9, w10
   18274:	b.ne	18284 <gzflush@@Base+0x50>  // b.any
   18278:	ldr	x8, [sp]
   1827c:	ldr	w9, [x8, #108]
   18280:	cbz	w9, 18290 <gzflush@@Base+0x5c>
   18284:	mov	w8, #0xfffffffe            	// #-2
   18288:	stur	w8, [x29, #-4]
   1828c:	b	18310 <gzflush@@Base+0xdc>
   18290:	ldr	w8, [sp, #12]
   18294:	cmp	w8, #0x0
   18298:	cset	w8, lt  // lt = tstop
   1829c:	tbnz	w8, #0, 182ac <gzflush@@Base+0x78>
   182a0:	ldr	w8, [sp, #12]
   182a4:	cmp	w8, #0x4
   182a8:	b.le	182b8 <gzflush@@Base+0x84>
   182ac:	mov	w8, #0xfffffffe            	// #-2
   182b0:	stur	w8, [x29, #-4]
   182b4:	b	18310 <gzflush@@Base+0xdc>
   182b8:	ldr	x8, [sp]
   182bc:	ldr	w9, [x8, #104]
   182c0:	cbz	w9, 182f8 <gzflush@@Base+0xc4>
   182c4:	ldr	x8, [sp]
   182c8:	str	wzr, [x8, #104]
   182cc:	ldr	x0, [sp]
   182d0:	ldr	x8, [sp]
   182d4:	ldr	x1, [x8, #96]
   182d8:	bl	177d4 <gzputc@@Base+0x19c>
   182dc:	mov	w9, #0xffffffff            	// #-1
   182e0:	cmp	w0, w9
   182e4:	b.ne	182f8 <gzflush@@Base+0xc4>  // b.any
   182e8:	ldr	x8, [sp]
   182ec:	ldr	w9, [x8, #108]
   182f0:	stur	w9, [x29, #-4]
   182f4:	b	18310 <gzflush@@Base+0xdc>
   182f8:	ldr	x0, [sp]
   182fc:	ldr	w1, [sp, #12]
   18300:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   18304:	ldr	x8, [sp]
   18308:	ldr	w9, [x8, #108]
   1830c:	stur	w9, [x29, #-4]
   18310:	ldur	w0, [x29, #-4]
   18314:	ldp	x29, x30, [sp, #32]
   18318:	add	sp, sp, #0x30
   1831c:	ret

0000000000018320 <gzsetparams@@Base>:
   18320:	sub	sp, sp, #0x40
   18324:	stp	x29, x30, [sp, #48]
   18328:	add	x29, sp, #0x30
   1832c:	stur	x0, [x29, #-16]
   18330:	stur	w1, [x29, #-20]
   18334:	str	w2, [sp, #24]
   18338:	ldur	x8, [x29, #-16]
   1833c:	cbnz	x8, 1834c <gzsetparams@@Base+0x2c>
   18340:	mov	w8, #0xfffffffe            	// #-2
   18344:	stur	w8, [x29, #-4]
   18348:	b	18468 <gzsetparams@@Base+0x148>
   1834c:	ldur	x8, [x29, #-16]
   18350:	str	x8, [sp, #16]
   18354:	ldr	x8, [sp, #16]
   18358:	add	x8, x8, #0x78
   1835c:	str	x8, [sp, #8]
   18360:	ldr	x8, [sp, #16]
   18364:	ldr	w9, [x8, #24]
   18368:	mov	w10, #0x79b1                	// #31153
   1836c:	cmp	w9, w10
   18370:	b.ne	18380 <gzsetparams@@Base+0x60>  // b.any
   18374:	ldr	x8, [sp, #16]
   18378:	ldr	w9, [x8, #108]
   1837c:	cbz	w9, 1838c <gzsetparams@@Base+0x6c>
   18380:	mov	w8, #0xfffffffe            	// #-2
   18384:	stur	w8, [x29, #-4]
   18388:	b	18468 <gzsetparams@@Base+0x148>
   1838c:	ldur	w8, [x29, #-20]
   18390:	ldr	x9, [sp, #16]
   18394:	ldr	w10, [x9, #88]
   18398:	cmp	w8, w10
   1839c:	b.ne	183bc <gzsetparams@@Base+0x9c>  // b.any
   183a0:	ldr	w8, [sp, #24]
   183a4:	ldr	x9, [sp, #16]
   183a8:	ldr	w10, [x9, #92]
   183ac:	cmp	w8, w10
   183b0:	b.ne	183bc <gzsetparams@@Base+0x9c>  // b.any
   183b4:	stur	wzr, [x29, #-4]
   183b8:	b	18468 <gzsetparams@@Base+0x148>
   183bc:	ldr	x8, [sp, #16]
   183c0:	ldr	w9, [x8, #104]
   183c4:	cbz	w9, 183fc <gzsetparams@@Base+0xdc>
   183c8:	ldr	x8, [sp, #16]
   183cc:	str	wzr, [x8, #104]
   183d0:	ldr	x0, [sp, #16]
   183d4:	ldr	x8, [sp, #16]
   183d8:	ldr	x1, [x8, #96]
   183dc:	bl	177d4 <gzputc@@Base+0x19c>
   183e0:	mov	w9, #0xffffffff            	// #-1
   183e4:	cmp	w0, w9
   183e8:	b.ne	183fc <gzsetparams@@Base+0xdc>  // b.any
   183ec:	ldr	x8, [sp, #16]
   183f0:	ldr	w9, [x8, #108]
   183f4:	stur	w9, [x29, #-4]
   183f8:	b	18468 <gzsetparams@@Base+0x148>
   183fc:	ldr	x8, [sp, #16]
   18400:	ldr	w9, [x8, #40]
   18404:	cbz	w9, 1844c <gzsetparams@@Base+0x12c>
   18408:	ldr	x8, [sp, #8]
   1840c:	ldr	w9, [x8, #8]
   18410:	cbz	w9, 1843c <gzsetparams@@Base+0x11c>
   18414:	ldr	x0, [sp, #16]
   18418:	mov	w1, #0x5                   	// #5
   1841c:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   18420:	mov	w8, #0xffffffff            	// #-1
   18424:	cmp	w0, w8
   18428:	b.ne	1843c <gzsetparams@@Base+0x11c>  // b.any
   1842c:	ldr	x8, [sp, #16]
   18430:	ldr	w9, [x8, #108]
   18434:	stur	w9, [x29, #-4]
   18438:	b	18468 <gzsetparams@@Base+0x148>
   1843c:	ldr	x0, [sp, #8]
   18440:	ldur	w1, [x29, #-20]
   18444:	ldr	w2, [sp, #24]
   18448:	bl	24e0 <deflateParams@plt>
   1844c:	ldur	w8, [x29, #-20]
   18450:	ldr	x9, [sp, #16]
   18454:	str	w8, [x9, #88]
   18458:	ldr	w8, [sp, #24]
   1845c:	ldr	x9, [sp, #16]
   18460:	str	w8, [x9, #92]
   18464:	stur	wzr, [x29, #-4]
   18468:	ldur	w0, [x29, #-4]
   1846c:	ldp	x29, x30, [sp, #48]
   18470:	add	sp, sp, #0x40
   18474:	ret

0000000000018478 <gzclose_w@@ZLIB_1.2.3.5>:
   18478:	sub	sp, sp, #0x30
   1847c:	stp	x29, x30, [sp, #32]
   18480:	add	x29, sp, #0x20
   18484:	str	x0, [sp, #16]
   18488:	str	wzr, [sp, #12]
   1848c:	ldr	x8, [sp, #16]
   18490:	cbnz	x8, 184a0 <gzclose_w@@ZLIB_1.2.3.5+0x28>
   18494:	mov	w8, #0xfffffffe            	// #-2
   18498:	stur	w8, [x29, #-4]
   1849c:	b	185bc <gzclose_w@@ZLIB_1.2.3.5+0x144>
   184a0:	ldr	x8, [sp, #16]
   184a4:	str	x8, [sp]
   184a8:	ldr	x8, [sp]
   184ac:	ldr	w9, [x8, #24]
   184b0:	mov	w10, #0x79b1                	// #31153
   184b4:	cmp	w9, w10
   184b8:	b.eq	184c8 <gzclose_w@@ZLIB_1.2.3.5+0x50>  // b.none
   184bc:	mov	w8, #0xfffffffe            	// #-2
   184c0:	stur	w8, [x29, #-4]
   184c4:	b	185bc <gzclose_w@@ZLIB_1.2.3.5+0x144>
   184c8:	ldr	x8, [sp]
   184cc:	ldr	w9, [x8, #104]
   184d0:	cbz	w9, 18504 <gzclose_w@@ZLIB_1.2.3.5+0x8c>
   184d4:	ldr	x8, [sp]
   184d8:	str	wzr, [x8, #104]
   184dc:	ldr	x0, [sp]
   184e0:	ldr	x8, [sp]
   184e4:	ldr	x1, [x8, #96]
   184e8:	bl	177d4 <gzputc@@Base+0x19c>
   184ec:	mov	w9, #0xffffffff            	// #-1
   184f0:	cmp	w0, w9
   184f4:	b.ne	18504 <gzclose_w@@ZLIB_1.2.3.5+0x8c>  // b.any
   184f8:	ldr	x8, [sp]
   184fc:	ldr	w9, [x8, #108]
   18500:	str	w9, [sp, #12]
   18504:	ldr	x0, [sp]
   18508:	mov	w1, #0x4                   	// #4
   1850c:	bl	17e50 <gzvprintf@@ZLIB_1.2.7.1+0x478>
   18510:	mov	w8, #0xffffffff            	// #-1
   18514:	cmp	w0, w8
   18518:	b.ne	18528 <gzclose_w@@ZLIB_1.2.3.5+0xb0>  // b.any
   1851c:	ldr	x8, [sp]
   18520:	ldr	w9, [x8, #108]
   18524:	str	w9, [sp, #12]
   18528:	ldr	x8, [sp]
   1852c:	ldr	w9, [x8, #40]
   18530:	cbz	w9, 18568 <gzclose_w@@ZLIB_1.2.3.5+0xf0>
   18534:	ldr	x8, [sp]
   18538:	ldr	w9, [x8, #64]
   1853c:	cbnz	w9, 1855c <gzclose_w@@ZLIB_1.2.3.5+0xe4>
   18540:	ldr	x8, [sp]
   18544:	add	x0, x8, #0x78
   18548:	bl	2590 <deflateEnd@plt>
   1854c:	ldr	x8, [sp]
   18550:	ldr	x8, [x8, #56]
   18554:	mov	x0, x8
   18558:	bl	2570 <free@plt>
   1855c:	ldr	x8, [sp]
   18560:	ldr	x0, [x8, #48]
   18564:	bl	2570 <free@plt>
   18568:	ldr	x0, [sp]
   1856c:	mov	w8, wzr
   18570:	mov	w1, w8
   18574:	mov	x9, xzr
   18578:	mov	x2, x9
   1857c:	bl	1567c <gzseek64@@ZLIB_1.2.3.3+0x34c>
   18580:	ldr	x9, [sp]
   18584:	ldr	x0, [x9, #32]
   18588:	bl	2570 <free@plt>
   1858c:	ldr	x9, [sp]
   18590:	ldr	w0, [x9, #28]
   18594:	bl	2510 <close@plt>
   18598:	mov	w8, #0xffffffff            	// #-1
   1859c:	cmp	w0, w8
   185a0:	b.ne	185ac <gzclose_w@@ZLIB_1.2.3.5+0x134>  // b.any
   185a4:	mov	w8, #0xffffffff            	// #-1
   185a8:	str	w8, [sp, #12]
   185ac:	ldr	x0, [sp]
   185b0:	bl	2570 <free@plt>
   185b4:	ldr	w8, [sp, #12]
   185b8:	stur	w8, [x29, #-4]
   185bc:	ldur	w0, [x29, #-4]
   185c0:	ldp	x29, x30, [sp, #32]
   185c4:	add	sp, sp, #0x30
   185c8:	ret

Disassembly of section .fini:

00000000000185cc <.fini>:
   185cc:	stp	x29, x30, [sp, #-16]!
   185d0:	mov	x29, sp
   185d4:	ldp	x29, x30, [sp], #16
   185d8:	ret
