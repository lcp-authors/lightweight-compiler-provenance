
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001a20 <.init>:
    1a20:	stp	x29, x30, [sp, #-16]!
    1a24:	mov	x29, sp
    1a28:	bl	1d80 <cap_to_name@plt+0x10>
    1a2c:	ldp	x29, x30, [sp], #16
    1a30:	ret

Disassembly of section .plt:

0000000000001a40 <memcpy@plt-0x20>:
    1a40:	stp	x16, x30, [sp, #-16]!
    1a44:	adrp	x16, 16000 <cap_set_nsowner@@Base+0x1089c>
    1a48:	ldr	x17, [x16, #4088]
    1a4c:	add	x16, x16, #0xff8
    1a50:	br	x17
    1a54:	nop
    1a58:	nop
    1a5c:	nop

0000000000001a60 <memcpy@plt>:
    1a60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a64:	ldr	x17, [x16]
    1a68:	add	x16, x16, #0x0
    1a6c:	br	x17

0000000000001a70 <removexattr@plt>:
    1a70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #8]
    1a78:	add	x16, x16, #0x8
    1a7c:	br	x17

0000000000001a80 <setuid@plt>:
    1a80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #16]
    1a88:	add	x16, x16, #0x10
    1a8c:	br	x17

0000000000001a90 <strtoul@plt>:
    1a90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #24]
    1a98:	add	x16, x16, #0x18
    1a9c:	br	x17

0000000000001aa0 <strlen@plt>:
    1aa0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #32]
    1aa8:	add	x16, x16, #0x20
    1aac:	br	x17

0000000000001ab0 <psx_load_syscalls@plt>:
    1ab0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #40]
    1ab8:	add	x16, x16, #0x28
    1abc:	br	x17

0000000000001ac0 <cap_get_secbits@plt>:
    1ac0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #48]
    1ac8:	add	x16, x16, #0x30
    1acc:	br	x17

0000000000001ad0 <cap_clear_flag@plt>:
    1ad0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #56]
    1ad8:	add	x16, x16, #0x38
    1adc:	br	x17

0000000000001ae0 <cap_max_bits@plt>:
    1ae0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #64]
    1ae8:	add	x16, x16, #0x40
    1aec:	br	x17

0000000000001af0 <_libcap_strdup@plt>:
    1af0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #72]
    1af8:	add	x16, x16, #0x48
    1afc:	br	x17

0000000000001b00 <cap_get_ambient@plt>:
    1b00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #80]
    1b08:	add	x16, x16, #0x50
    1b0c:	br	x17

0000000000001b10 <__cxa_finalize@plt>:
    1b10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #88]
    1b18:	add	x16, x16, #0x58
    1b1c:	br	x17

0000000000001b20 <sprintf@plt>:
    1b20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #96]
    1b28:	add	x16, x16, #0x60
    1b2c:	br	x17

0000000000001b30 <asprintf@plt>:
    1b30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #104]
    1b38:	add	x16, x16, #0x68
    1b3c:	br	x17

0000000000001b40 <capset@plt>:
    1b40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #112]
    1b48:	add	x16, x16, #0x70
    1b4c:	br	x17

0000000000001b50 <malloc@plt>:
    1b50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #120]
    1b58:	add	x16, x16, #0x78
    1b5c:	br	x17

0000000000001b60 <cap_set_syscall@plt>:
    1b60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #128]
    1b68:	add	x16, x16, #0x80
    1b6c:	br	x17

0000000000001b70 <setxattr@plt>:
    1b70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #136]
    1b78:	add	x16, x16, #0x88
    1b7c:	br	x17

0000000000001b80 <cap_reset_ambient@plt>:
    1b80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #144]
    1b88:	add	x16, x16, #0x90
    1b8c:	br	x17

0000000000001b90 <cap_get_bound@plt>:
    1b90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #152]
    1b98:	add	x16, x16, #0x98
    1b9c:	br	x17

0000000000001ba0 <memset@plt>:
    1ba0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #160]
    1ba8:	add	x16, x16, #0xa0
    1bac:	br	x17

0000000000001bb0 <calloc@plt>:
    1bb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #168]
    1bb8:	add	x16, x16, #0xa8
    1bbc:	br	x17

0000000000001bc0 <cap_set_proc@plt>:
    1bc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #176]
    1bc8:	add	x16, x16, #0xb0
    1bcc:	br	x17

0000000000001bd0 <__gmon_start__@plt>:
    1bd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #184]
    1bd8:	add	x16, x16, #0xb8
    1bdc:	br	x17

0000000000001be0 <fremovexattr@plt>:
    1be0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #192]
    1be8:	add	x16, x16, #0xc0
    1bec:	br	x17

0000000000001bf0 <setgid@plt>:
    1bf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #200]
    1bf8:	add	x16, x16, #0xc8
    1bfc:	br	x17

0000000000001c00 <cap_init@plt>:
    1c00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #208]
    1c08:	add	x16, x16, #0xd0
    1c0c:	br	x17

0000000000001c10 <getxattr@plt>:
    1c10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #216]
    1c18:	add	x16, x16, #0xd8
    1c1c:	br	x17

0000000000001c20 <memcmp@plt>:
    1c20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #224]
    1c28:	add	x16, x16, #0xe0
    1c2c:	br	x17

0000000000001c30 <__ctype_b_loc@plt>:
    1c30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #232]
    1c38:	add	x16, x16, #0xe8
    1c3c:	br	x17

0000000000001c40 <cap_get_proc@plt>:
    1c40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #240]
    1c48:	add	x16, x16, #0xf0
    1c4c:	br	x17

0000000000001c50 <__lxstat64@plt>:
    1c50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #248]
    1c58:	add	x16, x16, #0xf8
    1c5c:	br	x17

0000000000001c60 <cap_drop_bound@plt>:
    1c60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #256]
    1c68:	add	x16, x16, #0x100
    1c6c:	br	x17

0000000000001c70 <free@plt>:
    1c70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #264]
    1c78:	add	x16, x16, #0x108
    1c7c:	br	x17

0000000000001c80 <__fxstat64@plt>:
    1c80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #272]
    1c88:	add	x16, x16, #0x110
    1c8c:	br	x17

0000000000001c90 <fgetxattr@plt>:
    1c90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #280]
    1c98:	add	x16, x16, #0x118
    1c9c:	br	x17

0000000000001ca0 <setgroups@plt>:
    1ca0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #288]
    1ca8:	add	x16, x16, #0x120
    1cac:	br	x17

0000000000001cb0 <strcpy@plt>:
    1cb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #296]
    1cb8:	add	x16, x16, #0x128
    1cbc:	br	x17

0000000000001cc0 <fsetxattr@plt>:
    1cc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #304]
    1cc8:	add	x16, x16, #0x130
    1ccc:	br	x17

0000000000001cd0 <capgetp@plt>:
    1cd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #312]
    1cd8:	add	x16, x16, #0x138
    1cdc:	br	x17

0000000000001ce0 <cap_free@plt>:
    1ce0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #320]
    1ce8:	add	x16, x16, #0x140
    1cec:	br	x17

0000000000001cf0 <cap_set_flag@plt>:
    1cf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #328]
    1cf8:	add	x16, x16, #0x148
    1cfc:	br	x17

0000000000001d00 <cap_compare@plt>:
    1d00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d04:	ldr	x17, [x16, #336]
    1d08:	add	x16, x16, #0x150
    1d0c:	br	x17

0000000000001d10 <capget@plt>:
    1d10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d14:	ldr	x17, [x16, #344]
    1d18:	add	x16, x16, #0x158
    1d1c:	br	x17

0000000000001d20 <cap_set_secbits@plt>:
    1d20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d24:	ldr	x17, [x16, #352]
    1d28:	add	x16, x16, #0x160
    1d2c:	br	x17

0000000000001d30 <__errno_location@plt>:
    1d30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d34:	ldr	x17, [x16, #360]
    1d38:	add	x16, x16, #0x168
    1d3c:	br	x17

0000000000001d40 <tolower@plt>:
    1d40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d44:	ldr	x17, [x16, #368]
    1d48:	add	x16, x16, #0x170
    1d4c:	br	x17

0000000000001d50 <prctl@plt>:
    1d50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d54:	ldr	x17, [x16, #376]
    1d58:	add	x16, x16, #0x178
    1d5c:	br	x17

0000000000001d60 <syscall@plt>:
    1d60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d64:	ldr	x17, [x16, #384]
    1d68:	add	x16, x16, #0x180
    1d6c:	br	x17

0000000000001d70 <cap_to_name@plt>:
    1d70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1d74:	ldr	x17, [x16, #392]
    1d78:	add	x16, x16, #0x188
    1d7c:	br	x17

Disassembly of section .text:

0000000000001d80 <cap_max_bits@@Base-0x254>:
    1d80:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x1089c>
    1d84:	ldr	x0, [x0, #4056]
    1d88:	cbz	x0, 1d90 <cap_to_name@plt+0x20>
    1d8c:	b	1bd0 <__gmon_start__@plt>
    1d90:	ret
    1d94:	stp	x29, x30, [sp, #-32]!
    1d98:	mov	x29, sp
    1d9c:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1da0:	add	x0, x0, #0x2e0
    1da4:	str	x0, [sp, #24]
    1da8:	ldr	x0, [sp, #24]
    1dac:	str	x0, [sp, #24]
    1db0:	ldr	x1, [sp, #24]
    1db4:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1db8:	add	x0, x0, #0x2e0
    1dbc:	cmp	x1, x0
    1dc0:	b.eq	1df8 <cap_to_name@plt+0x88>  // b.none
    1dc4:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x1089c>
    1dc8:	ldr	x0, [x0, #4040]
    1dcc:	str	x0, [sp, #16]
    1dd0:	ldr	x0, [sp, #16]
    1dd4:	str	x0, [sp, #16]
    1dd8:	ldr	x0, [sp, #16]
    1ddc:	cmp	x0, #0x0
    1de0:	b.eq	1dfc <cap_to_name@plt+0x8c>  // b.none
    1de4:	ldr	x1, [sp, #16]
    1de8:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1dec:	add	x0, x0, #0x2e0
    1df0:	blr	x1
    1df4:	b	1dfc <cap_to_name@plt+0x8c>
    1df8:	nop
    1dfc:	ldp	x29, x30, [sp], #32
    1e00:	ret
    1e04:	stp	x29, x30, [sp, #-48]!
    1e08:	mov	x29, sp
    1e0c:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1e10:	add	x0, x0, #0x2e0
    1e14:	str	x0, [sp, #40]
    1e18:	ldr	x0, [sp, #40]
    1e1c:	str	x0, [sp, #40]
    1e20:	ldr	x1, [sp, #40]
    1e24:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1e28:	add	x0, x0, #0x2e0
    1e2c:	sub	x0, x1, x0
    1e30:	asr	x0, x0, #3
    1e34:	lsr	x1, x0, #63
    1e38:	add	x0, x1, x0
    1e3c:	asr	x0, x0, #1
    1e40:	str	x0, [sp, #32]
    1e44:	ldr	x0, [sp, #32]
    1e48:	cmp	x0, #0x0
    1e4c:	b.eq	1e88 <cap_to_name@plt+0x118>  // b.none
    1e50:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x1089c>
    1e54:	ldr	x0, [x0, #4064]
    1e58:	str	x0, [sp, #24]
    1e5c:	ldr	x0, [sp, #24]
    1e60:	str	x0, [sp, #24]
    1e64:	ldr	x0, [sp, #24]
    1e68:	cmp	x0, #0x0
    1e6c:	b.eq	1e8c <cap_to_name@plt+0x11c>  // b.none
    1e70:	ldr	x2, [sp, #24]
    1e74:	ldr	x1, [sp, #32]
    1e78:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1e7c:	add	x0, x0, #0x2e0
    1e80:	blr	x2
    1e84:	b	1e8c <cap_to_name@plt+0x11c>
    1e88:	nop
    1e8c:	ldp	x29, x30, [sp], #48
    1e90:	ret
    1e94:	stp	x29, x30, [sp, #-16]!
    1e98:	mov	x29, sp
    1e9c:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1ea0:	add	x0, x0, #0x2e0
    1ea4:	ldrb	w0, [x0]
    1ea8:	and	x0, x0, #0xff
    1eac:	cmp	x0, #0x0
    1eb0:	b.ne	1eec <cap_to_name@plt+0x17c>  // b.any
    1eb4:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x1089c>
    1eb8:	ldr	x0, [x0, #4048]
    1ebc:	cmp	x0, #0x0
    1ec0:	b.eq	1ed4 <cap_to_name@plt+0x164>  // b.none
    1ec4:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1ec8:	add	x0, x0, #0x190
    1ecc:	ldr	x0, [x0]
    1ed0:	bl	1b10 <__cxa_finalize@plt>
    1ed4:	bl	1d94 <cap_to_name@plt+0x24>
    1ed8:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1edc:	add	x0, x0, #0x2e0
    1ee0:	mov	w1, #0x1                   	// #1
    1ee4:	strb	w1, [x0]
    1ee8:	b	1ef0 <cap_to_name@plt+0x180>
    1eec:	nop
    1ef0:	ldp	x29, x30, [sp], #16
    1ef4:	ret
    1ef8:	stp	x29, x30, [sp, #-16]!
    1efc:	mov	x29, sp
    1f00:	bl	1e04 <cap_to_name@plt+0x94>
    1f04:	nop
    1f08:	ldp	x29, x30, [sp], #16
    1f0c:	ret
    1f10:	stp	x29, x30, [sp, #-32]!
    1f14:	mov	x29, sp
    1f18:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1f1c:	add	x0, x0, #0x2e4
    1f20:	ldr	w0, [x0]
    1f24:	cmp	w0, #0x0
    1f28:	b.ne	1fc8 <cap_to_name@plt+0x258>  // b.any
    1f2c:	mov	x1, #0x0                   	// #0
    1f30:	mov	x0, #0x0                   	// #0
    1f34:	bl	1b60 <cap_set_syscall@plt>
    1f38:	str	wzr, [sp, #28]
    1f3c:	mov	w0, #0x40                  	// #64
    1f40:	str	w0, [sp, #24]
    1f44:	b	1f90 <cap_to_name@plt+0x220>
    1f48:	ldr	w1, [sp, #28]
    1f4c:	ldr	w0, [sp, #24]
    1f50:	add	w0, w1, w0
    1f54:	lsr	w1, w0, #31
    1f58:	add	w0, w1, w0
    1f5c:	asr	w0, w0, #1
    1f60:	str	w0, [sp, #20]
    1f64:	ldr	w0, [sp, #20]
    1f68:	bl	1b90 <cap_get_bound@plt>
    1f6c:	cmp	w0, #0x0
    1f70:	b.ge	1f84 <cap_to_name@plt+0x214>  // b.tcont
    1f74:	ldr	w0, [sp, #20]
    1f78:	sub	w0, w0, #0x1
    1f7c:	str	w0, [sp, #24]
    1f80:	b	1f90 <cap_to_name@plt+0x220>
    1f84:	ldr	w0, [sp, #20]
    1f88:	add	w0, w0, #0x1
    1f8c:	str	w0, [sp, #28]
    1f90:	ldr	w1, [sp, #28]
    1f94:	ldr	w0, [sp, #24]
    1f98:	cmp	w1, w0
    1f9c:	b.le	1f48 <cap_to_name@plt+0x1d8>
    1fa0:	ldr	w0, [sp, #28]
    1fa4:	cmp	w0, #0x0
    1fa8:	b.eq	1fb4 <cap_to_name@plt+0x244>  // b.none
    1fac:	ldr	w0, [sp, #28]
    1fb0:	b	1fb8 <cap_to_name@plt+0x248>
    1fb4:	mov	w0, #0x26                  	// #38
    1fb8:	adrp	x1, 17000 <cap_set_nsowner@@Base+0x1189c>
    1fbc:	add	x1, x1, #0x2e4
    1fc0:	str	w0, [x1]
    1fc4:	b	1fcc <cap_to_name@plt+0x25c>
    1fc8:	nop
    1fcc:	ldp	x29, x30, [sp], #32
    1fd0:	ret

0000000000001fd4 <cap_max_bits@@Base>:
    1fd4:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    1fd8:	add	x0, x0, #0x2e4
    1fdc:	ldr	w0, [x0]
    1fe0:	ret

0000000000001fe4 <cap_init@@Base>:
    1fe4:	stp	x29, x30, [sp, #-32]!
    1fe8:	mov	x29, sp
    1fec:	mov	x1, #0x28                  	// #40
    1ff0:	mov	x0, #0x1                   	// #1
    1ff4:	bl	1bb0 <calloc@plt>
    1ff8:	str	x0, [sp, #16]
    1ffc:	ldr	x0, [sp, #16]
    2000:	cmp	x0, #0x0
    2004:	b.ne	2020 <cap_init@@Base+0x3c>  // b.any
    2008:	bl	1d30 <__errno_location@plt>
    200c:	mov	x1, x0
    2010:	mov	w0, #0xc                   	// #12
    2014:	str	w0, [x1]
    2018:	mov	x0, #0x0                   	// #0
    201c:	b	20c8 <cap_init@@Base+0xe4>
    2020:	ldr	x0, [sp, #16]
    2024:	mov	w1, #0x90d0                	// #37072
    2028:	movk	w1, #0xca, lsl #16
    202c:	str	w1, [x0]
    2030:	ldr	x0, [sp, #16]
    2034:	add	x0, x0, #0x4
    2038:	str	x0, [sp, #24]
    203c:	ldr	x0, [sp, #24]
    2040:	mov	w1, #0x522                 	// #1314
    2044:	movk	w1, #0x2008, lsl #16
    2048:	str	w1, [x0]
    204c:	ldr	x0, [sp, #24]
    2050:	mov	x1, #0x0                   	// #0
    2054:	bl	1d10 <capget@plt>
    2058:	ldr	x0, [sp, #24]
    205c:	ldr	w0, [x0]
    2060:	mov	w1, #0x522                 	// #1314
    2064:	movk	w1, #0x2008, lsl #16
    2068:	cmp	w0, w1
    206c:	b.eq	20b0 <cap_init@@Base+0xcc>  // b.none
    2070:	mov	w1, #0x522                 	// #1314
    2074:	movk	w1, #0x2008, lsl #16
    2078:	cmp	w0, w1
    207c:	b.hi	20a0 <cap_init@@Base+0xbc>  // b.pmore
    2080:	mov	w1, #0x330                 	// #816
    2084:	movk	w1, #0x1998, lsl #16
    2088:	cmp	w0, w1
    208c:	b.eq	20b8 <cap_init@@Base+0xd4>  // b.none
    2090:	mov	w1, #0x1026                	// #4134
    2094:	movk	w1, #0x2007, lsl #16
    2098:	cmp	w0, w1
    209c:	b.eq	20c0 <cap_init@@Base+0xdc>  // b.none
    20a0:	ldr	x0, [sp, #24]
    20a4:	bl	1ce0 <cap_free@plt>
    20a8:	str	xzr, [sp, #24]
    20ac:	b	20c4 <cap_init@@Base+0xe0>
    20b0:	nop
    20b4:	b	20c4 <cap_init@@Base+0xe0>
    20b8:	nop
    20bc:	b	20c4 <cap_init@@Base+0xe0>
    20c0:	nop
    20c4:	ldr	x0, [sp, #24]
    20c8:	ldp	x29, x30, [sp], #32
    20cc:	ret

00000000000020d0 <_libcap_strdup@@Base>:
    20d0:	stp	x29, x30, [sp, #-48]!
    20d4:	mov	x29, sp
    20d8:	str	x0, [sp, #24]
    20dc:	ldr	x0, [sp, #24]
    20e0:	cmp	x0, #0x0
    20e4:	b.ne	2100 <_libcap_strdup@@Base+0x30>  // b.any
    20e8:	bl	1d30 <__errno_location@plt>
    20ec:	mov	x1, x0
    20f0:	mov	w0, #0x16                  	// #22
    20f4:	str	w0, [x1]
    20f8:	mov	x0, #0x0                   	// #0
    20fc:	b	2160 <_libcap_strdup@@Base+0x90>
    2100:	ldr	x0, [sp, #24]
    2104:	bl	1aa0 <strlen@plt>
    2108:	add	x0, x0, #0x5
    210c:	bl	1b50 <malloc@plt>
    2110:	str	x0, [sp, #40]
    2114:	ldr	x0, [sp, #40]
    2118:	cmp	x0, #0x0
    211c:	b.ne	2138 <_libcap_strdup@@Base+0x68>  // b.any
    2120:	bl	1d30 <__errno_location@plt>
    2124:	mov	x1, x0
    2128:	mov	w0, #0xc                   	// #12
    212c:	str	w0, [x1]
    2130:	mov	x0, #0x0                   	// #0
    2134:	b	2160 <_libcap_strdup@@Base+0x90>
    2138:	ldr	x0, [sp, #40]
    213c:	add	x1, x0, #0x4
    2140:	str	x1, [sp, #40]
    2144:	mov	w1, #0x95d0                	// #38352
    2148:	movk	w1, #0xca, lsl #16
    214c:	str	w1, [x0]
    2150:	ldr	x1, [sp, #24]
    2154:	ldr	x0, [sp, #40]
    2158:	bl	1cb0 <strcpy@plt>
    215c:	ldr	x0, [sp, #40]
    2160:	ldp	x29, x30, [sp], #48
    2164:	ret

0000000000002168 <cap_dup@@Base>:
    2168:	stp	x29, x30, [sp, #-48]!
    216c:	mov	x29, sp
    2170:	str	x0, [sp, #24]
    2174:	ldr	x0, [sp, #24]
    2178:	cmp	x0, #0x0
    217c:	b.eq	219c <cap_dup@@Base+0x34>  // b.none
    2180:	ldr	x0, [sp, #24]
    2184:	sub	x0, x0, #0x4
    2188:	ldr	w1, [x0]
    218c:	mov	w0, #0x90d0                	// #37072
    2190:	movk	w0, #0xca, lsl #16
    2194:	cmp	w1, w0
    2198:	b.eq	21b4 <cap_dup@@Base+0x4c>  // b.none
    219c:	bl	1d30 <__errno_location@plt>
    21a0:	mov	x1, x0
    21a4:	mov	w0, #0x16                  	// #22
    21a8:	str	w0, [x1]
    21ac:	mov	x0, #0x0                   	// #0
    21b0:	b	21e4 <cap_dup@@Base+0x7c>
    21b4:	bl	1c00 <cap_init@plt>
    21b8:	str	x0, [sp, #40]
    21bc:	ldr	x0, [sp, #40]
    21c0:	cmp	x0, #0x0
    21c4:	b.ne	21d0 <cap_dup@@Base+0x68>  // b.any
    21c8:	mov	x0, #0x0                   	// #0
    21cc:	b	21e4 <cap_dup@@Base+0x7c>
    21d0:	mov	x2, #0x24                  	// #36
    21d4:	ldr	x1, [sp, #24]
    21d8:	ldr	x0, [sp, #40]
    21dc:	bl	1a60 <memcpy@plt>
    21e0:	ldr	x0, [sp, #40]
    21e4:	ldp	x29, x30, [sp], #48
    21e8:	ret

00000000000021ec <cap_free@@Base>:
    21ec:	stp	x29, x30, [sp, #-48]!
    21f0:	mov	x29, sp
    21f4:	str	x0, [sp, #24]
    21f8:	ldr	x0, [sp, #24]
    21fc:	cmp	x0, #0x0
    2200:	b.ne	220c <cap_free@@Base+0x20>  // b.any
    2204:	mov	w0, #0x0                   	// #0
    2208:	b	22e0 <cap_free@@Base+0xf4>
    220c:	ldr	x0, [sp, #24]
    2210:	cmp	x0, #0x0
    2214:	b.eq	2264 <cap_free@@Base+0x78>  // b.none
    2218:	ldr	x0, [sp, #24]
    221c:	sub	x0, x0, #0x4
    2220:	ldr	w1, [x0]
    2224:	mov	w0, #0x90d0                	// #37072
    2228:	movk	w0, #0xca, lsl #16
    222c:	cmp	w1, w0
    2230:	b.ne	2264 <cap_free@@Base+0x78>  // b.any
    2234:	ldr	x0, [sp, #24]
    2238:	sub	x0, x0, #0x4
    223c:	str	x0, [sp, #24]
    2240:	mov	x2, #0x28                  	// #40
    2244:	mov	w1, #0x0                   	// #0
    2248:	ldr	x0, [sp, #24]
    224c:	bl	1ba0 <memset@plt>
    2250:	ldr	x0, [sp, #24]
    2254:	bl	1c70 <free@plt>
    2258:	str	xzr, [sp, #24]
    225c:	mov	w0, #0x0                   	// #0
    2260:	b	22e0 <cap_free@@Base+0xf4>
    2264:	ldr	x0, [sp, #24]
    2268:	cmp	x0, #0x0
    226c:	b.eq	22cc <cap_free@@Base+0xe0>  // b.none
    2270:	ldr	x0, [sp, #24]
    2274:	sub	x0, x0, #0x4
    2278:	ldr	w1, [x0]
    227c:	mov	w0, #0x95d0                	// #38352
    2280:	movk	w0, #0xca, lsl #16
    2284:	cmp	w1, w0
    2288:	b.ne	22cc <cap_free@@Base+0xe0>  // b.any
    228c:	ldr	x0, [sp, #24]
    2290:	bl	1aa0 <strlen@plt>
    2294:	add	x0, x0, #0x4
    2298:	str	x0, [sp, #40]
    229c:	ldr	x0, [sp, #24]
    22a0:	sub	x0, x0, #0x4
    22a4:	str	x0, [sp, #24]
    22a8:	ldr	x2, [sp, #40]
    22ac:	mov	w1, #0x0                   	// #0
    22b0:	ldr	x0, [sp, #24]
    22b4:	bl	1ba0 <memset@plt>
    22b8:	ldr	x0, [sp, #24]
    22bc:	bl	1c70 <free@plt>
    22c0:	str	xzr, [sp, #24]
    22c4:	mov	w0, #0x0                   	// #0
    22c8:	b	22e0 <cap_free@@Base+0xf4>
    22cc:	bl	1d30 <__errno_location@plt>
    22d0:	mov	x1, x0
    22d4:	mov	w0, #0x16                  	// #22
    22d8:	str	w0, [x1]
    22dc:	mov	w0, #0xffffffff            	// #-1
    22e0:	ldp	x29, x30, [sp], #48
    22e4:	ret
    22e8:	stp	x29, x30, [sp, #-48]!
    22ec:	mov	x29, sp
    22f0:	str	x0, [sp, #40]
    22f4:	str	x1, [sp, #32]
    22f8:	str	x2, [sp, #24]
    22fc:	str	x3, [sp, #16]
    2300:	ldr	x3, [sp, #16]
    2304:	ldr	x2, [sp, #24]
    2308:	ldr	x1, [sp, #32]
    230c:	ldr	x0, [sp, #40]
    2310:	bl	1d60 <syscall@plt>
    2314:	ldp	x29, x30, [sp], #48
    2318:	ret
    231c:	stp	x29, x30, [sp, #-80]!
    2320:	mov	x29, sp
    2324:	str	x0, [sp, #72]
    2328:	str	x1, [sp, #64]
    232c:	str	x2, [sp, #56]
    2330:	str	x3, [sp, #48]
    2334:	str	x4, [sp, #40]
    2338:	str	x5, [sp, #32]
    233c:	str	x6, [sp, #24]
    2340:	ldr	x6, [sp, #24]
    2344:	ldr	x5, [sp, #32]
    2348:	ldr	x4, [sp, #40]
    234c:	ldr	x3, [sp, #48]
    2350:	ldr	x2, [sp, #56]
    2354:	ldr	x1, [sp, #64]
    2358:	ldr	x0, [sp, #72]
    235c:	bl	1d60 <syscall@plt>
    2360:	ldp	x29, x30, [sp], #80
    2364:	ret

0000000000002368 <psx_load_syscalls@@Base>:
    2368:	sub	sp, sp, #0x10
    236c:	str	x0, [sp, #8]
    2370:	str	x1, [sp]
    2374:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2378:	add	x0, x0, #0x198
    237c:	str	wzr, [x0]
    2380:	nop
    2384:	add	sp, sp, #0x10
    2388:	ret

000000000000238c <cap_set_syscall@@Base>:
    238c:	stp	x29, x30, [sp, #-32]!
    2390:	mov	x29, sp
    2394:	str	x0, [sp, #24]
    2398:	str	x1, [sp, #16]
    239c:	ldr	x0, [sp, #24]
    23a0:	cmp	x0, #0x0
    23a4:	b.ne	23c0 <cap_set_syscall@@Base+0x34>  // b.any
    23a8:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    23ac:	add	x1, x0, #0x1a8
    23b0:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    23b4:	add	x0, x0, #0x1a0
    23b8:	bl	1ab0 <psx_load_syscalls@plt>
    23bc:	b	23e0 <cap_set_syscall@@Base+0x54>
    23c0:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    23c4:	add	x0, x0, #0x1a0
    23c8:	ldr	x1, [sp, #24]
    23cc:	str	x1, [x0]
    23d0:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    23d4:	add	x0, x0, #0x1a8
    23d8:	ldr	x1, [sp, #16]
    23dc:	str	x1, [x0]
    23e0:	nop
    23e4:	ldp	x29, x30, [sp], #32
    23e8:	ret
    23ec:	stp	x29, x30, [sp, #-32]!
    23f0:	mov	x29, sp
    23f4:	str	x0, [sp, #24]
    23f8:	str	x1, [sp, #16]
    23fc:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2400:	add	x0, x0, #0x1a0
    2404:	ldr	x4, [x0]
    2408:	ldr	x0, [sp, #24]
    240c:	ldr	x1, [sp, #16]
    2410:	mov	x3, #0x0                   	// #0
    2414:	mov	x2, x1
    2418:	mov	x1, x0
    241c:	mov	x0, #0x5b                  	// #91
    2420:	blr	x4
    2424:	ldp	x29, x30, [sp], #32
    2428:	ret
    242c:	stp	x29, x30, [sp, #-48]!
    2430:	mov	x29, sp
    2434:	str	x0, [sp, #40]
    2438:	str	x1, [sp, #32]
    243c:	str	x2, [sp, #24]
    2440:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2444:	add	x0, x0, #0x1a0
    2448:	ldr	x4, [x0]
    244c:	ldr	x3, [sp, #24]
    2450:	ldr	x2, [sp, #32]
    2454:	ldr	x1, [sp, #40]
    2458:	mov	x0, #0xa7                  	// #167
    245c:	blr	x4
    2460:	ldp	x29, x30, [sp], #48
    2464:	ret
    2468:	stp	x29, x30, [sp, #-64]!
    246c:	mov	x29, sp
    2470:	str	x0, [sp, #56]
    2474:	str	x1, [sp, #48]
    2478:	str	x2, [sp, #40]
    247c:	str	x3, [sp, #32]
    2480:	str	x4, [sp, #24]
    2484:	str	x5, [sp, #16]
    2488:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    248c:	add	x0, x0, #0x1a8
    2490:	ldr	x7, [x0]
    2494:	ldr	x6, [sp, #16]
    2498:	ldr	x5, [sp, #24]
    249c:	ldr	x4, [sp, #32]
    24a0:	ldr	x3, [sp, #40]
    24a4:	ldr	x2, [sp, #48]
    24a8:	ldr	x1, [sp, #56]
    24ac:	mov	x0, #0xa7                  	// #167
    24b0:	blr	x7
    24b4:	ldp	x29, x30, [sp], #64
    24b8:	ret

00000000000024bc <cap_get_proc@@Base>:
    24bc:	stp	x29, x30, [sp, #-32]!
    24c0:	mov	x29, sp
    24c4:	bl	1c00 <cap_init@plt>
    24c8:	str	x0, [sp, #24]
    24cc:	ldr	x0, [sp, #24]
    24d0:	cmp	x0, #0x0
    24d4:	b.eq	2504 <cap_get_proc@@Base+0x48>  // b.none
    24d8:	ldr	x2, [sp, #24]
    24dc:	ldr	x0, [sp, #24]
    24e0:	add	x0, x0, #0x8
    24e4:	mov	x1, x0
    24e8:	mov	x0, x2
    24ec:	bl	1d10 <capget@plt>
    24f0:	cmp	w0, #0x0
    24f4:	b.eq	2504 <cap_get_proc@@Base+0x48>  // b.none
    24f8:	ldr	x0, [sp, #24]
    24fc:	bl	1ce0 <cap_free@plt>
    2500:	str	xzr, [sp, #24]
    2504:	ldr	x0, [sp, #24]
    2508:	ldp	x29, x30, [sp], #32
    250c:	ret

0000000000002510 <cap_set_proc@@Base>:
    2510:	stp	x29, x30, [sp, #-48]!
    2514:	mov	x29, sp
    2518:	str	x0, [sp, #24]
    251c:	ldr	x0, [sp, #24]
    2520:	cmp	x0, #0x0
    2524:	b.eq	2544 <cap_set_proc@@Base+0x34>  // b.none
    2528:	ldr	x0, [sp, #24]
    252c:	sub	x0, x0, #0x4
    2530:	ldr	w1, [x0]
    2534:	mov	w0, #0x90d0                	// #37072
    2538:	movk	w0, #0xca, lsl #16
    253c:	cmp	w1, w0
    2540:	b.eq	255c <cap_set_proc@@Base+0x4c>  // b.none
    2544:	bl	1d30 <__errno_location@plt>
    2548:	mov	x1, x0
    254c:	mov	w0, #0x16                  	// #22
    2550:	str	w0, [x1]
    2554:	mov	w0, #0xffffffff            	// #-1
    2558:	b	257c <cap_set_proc@@Base+0x6c>
    255c:	ldr	x2, [sp, #24]
    2560:	ldr	x0, [sp, #24]
    2564:	add	x0, x0, #0x8
    2568:	mov	x1, x0
    256c:	mov	x0, x2
    2570:	bl	23ec <cap_set_syscall@@Base+0x60>
    2574:	str	w0, [sp, #44]
    2578:	ldr	w0, [sp, #44]
    257c:	ldp	x29, x30, [sp], #48
    2580:	ret

0000000000002584 <capgetp@@Base>:
    2584:	stp	x29, x30, [sp, #-48]!
    2588:	mov	x29, sp
    258c:	str	w0, [sp, #28]
    2590:	str	x1, [sp, #16]
    2594:	ldr	x0, [sp, #16]
    2598:	cmp	x0, #0x0
    259c:	b.eq	25bc <capgetp@@Base+0x38>  // b.none
    25a0:	ldr	x0, [sp, #16]
    25a4:	sub	x0, x0, #0x4
    25a8:	ldr	w1, [x0]
    25ac:	mov	w0, #0x90d0                	// #37072
    25b0:	movk	w0, #0xca, lsl #16
    25b4:	cmp	w1, w0
    25b8:	b.eq	25d4 <capgetp@@Base+0x50>  // b.none
    25bc:	bl	1d30 <__errno_location@plt>
    25c0:	mov	x1, x0
    25c4:	mov	w0, #0x16                  	// #22
    25c8:	str	w0, [x1]
    25cc:	mov	w0, #0xffffffff            	// #-1
    25d0:	b	2608 <capgetp@@Base+0x84>
    25d4:	ldr	x0, [sp, #16]
    25d8:	ldr	w1, [sp, #28]
    25dc:	str	w1, [x0, #4]
    25e0:	ldr	x2, [sp, #16]
    25e4:	ldr	x0, [sp, #16]
    25e8:	add	x0, x0, #0x8
    25ec:	mov	x1, x0
    25f0:	mov	x0, x2
    25f4:	bl	1d10 <capget@plt>
    25f8:	str	w0, [sp, #44]
    25fc:	ldr	x0, [sp, #16]
    2600:	str	wzr, [x0, #4]
    2604:	ldr	w0, [sp, #44]
    2608:	ldp	x29, x30, [sp], #48
    260c:	ret

0000000000002610 <cap_get_pid@@Base>:
    2610:	stp	x29, x30, [sp, #-48]!
    2614:	mov	x29, sp
    2618:	str	w0, [sp, #28]
    261c:	bl	1c00 <cap_init@plt>
    2620:	str	x0, [sp, #40]
    2624:	ldr	x0, [sp, #40]
    2628:	cmp	x0, #0x0
    262c:	b.eq	266c <cap_get_pid@@Base+0x5c>  // b.none
    2630:	ldr	x1, [sp, #40]
    2634:	ldr	w0, [sp, #28]
    2638:	bl	1cd0 <capgetp@plt>
    263c:	cmp	w0, #0x0
    2640:	b.eq	266c <cap_get_pid@@Base+0x5c>  // b.none
    2644:	bl	1d30 <__errno_location@plt>
    2648:	ldr	w0, [x0]
    264c:	str	w0, [sp, #36]
    2650:	ldr	x0, [sp, #40]
    2654:	bl	1ce0 <cap_free@plt>
    2658:	bl	1d30 <__errno_location@plt>
    265c:	mov	x1, x0
    2660:	ldr	w0, [sp, #36]
    2664:	str	w0, [x1]
    2668:	str	xzr, [sp, #40]
    266c:	ldr	x0, [sp, #40]
    2670:	ldp	x29, x30, [sp], #48
    2674:	ret

0000000000002678 <capsetp@@Base>:
    2678:	stp	x29, x30, [sp, #-48]!
    267c:	mov	x29, sp
    2680:	str	w0, [sp, #28]
    2684:	str	x1, [sp, #16]
    2688:	ldr	x0, [sp, #16]
    268c:	cmp	x0, #0x0
    2690:	b.eq	26b0 <capsetp@@Base+0x38>  // b.none
    2694:	ldr	x0, [sp, #16]
    2698:	sub	x0, x0, #0x4
    269c:	ldr	w1, [x0]
    26a0:	mov	w0, #0x90d0                	// #37072
    26a4:	movk	w0, #0xca, lsl #16
    26a8:	cmp	w1, w0
    26ac:	b.eq	26c8 <capsetp@@Base+0x50>  // b.none
    26b0:	bl	1d30 <__errno_location@plt>
    26b4:	mov	x1, x0
    26b8:	mov	w0, #0x16                  	// #22
    26bc:	str	w0, [x1]
    26c0:	mov	w0, #0xffffffff            	// #-1
    26c4:	b	270c <capsetp@@Base+0x94>
    26c8:	ldr	x0, [sp, #16]
    26cc:	ldr	w1, [sp, #28]
    26d0:	str	w1, [x0, #4]
    26d4:	ldr	x2, [sp, #16]
    26d8:	ldr	x0, [sp, #16]
    26dc:	add	x0, x0, #0x8
    26e0:	mov	x1, x0
    26e4:	mov	x0, x2
    26e8:	bl	1b40 <capset@plt>
    26ec:	str	w0, [sp, #44]
    26f0:	ldr	x0, [sp, #16]
    26f4:	mov	w1, #0x522                 	// #1314
    26f8:	movk	w1, #0x2008, lsl #16
    26fc:	str	w1, [x0]
    2700:	ldr	x0, [sp, #16]
    2704:	str	wzr, [x0, #4]
    2708:	ldr	w0, [sp, #44]
    270c:	ldp	x29, x30, [sp], #48
    2710:	ret

0000000000002714 <cap_get_bound@@Base>:
    2714:	stp	x29, x30, [sp, #-48]!
    2718:	mov	x29, sp
    271c:	str	w0, [sp, #28]
    2720:	ldrsw	x0, [sp, #28]
    2724:	mov	x2, #0x0                   	// #0
    2728:	mov	x1, x0
    272c:	mov	x0, #0x17                  	// #23
    2730:	bl	242c <cap_set_syscall@@Base+0xa0>
    2734:	str	w0, [sp, #44]
    2738:	ldr	w0, [sp, #44]
    273c:	cmp	w0, #0x0
    2740:	b.ge	2760 <cap_get_bound@@Base+0x4c>  // b.tcont
    2744:	bl	1d30 <__errno_location@plt>
    2748:	mov	x1, x0
    274c:	ldr	w0, [sp, #44]
    2750:	neg	w0, w0
    2754:	str	w0, [x1]
    2758:	mov	w0, #0xffffffff            	// #-1
    275c:	b	2764 <cap_get_bound@@Base+0x50>
    2760:	ldr	w0, [sp, #44]
    2764:	ldp	x29, x30, [sp], #48
    2768:	ret

000000000000276c <cap_drop_bound@@Base>:
    276c:	stp	x29, x30, [sp, #-48]!
    2770:	mov	x29, sp
    2774:	str	w0, [sp, #28]
    2778:	ldrsw	x0, [sp, #28]
    277c:	mov	x2, #0x0                   	// #0
    2780:	mov	x1, x0
    2784:	mov	x0, #0x18                  	// #24
    2788:	bl	242c <cap_set_syscall@@Base+0xa0>
    278c:	str	w0, [sp, #44]
    2790:	ldr	w0, [sp, #44]
    2794:	cmp	w0, #0x0
    2798:	b.ge	27b8 <cap_drop_bound@@Base+0x4c>  // b.tcont
    279c:	bl	1d30 <__errno_location@plt>
    27a0:	mov	x1, x0
    27a4:	ldr	w0, [sp, #44]
    27a8:	neg	w0, w0
    27ac:	str	w0, [x1]
    27b0:	mov	w0, #0xffffffff            	// #-1
    27b4:	b	27bc <cap_drop_bound@@Base+0x50>
    27b8:	ldr	w0, [sp, #44]
    27bc:	ldp	x29, x30, [sp], #48
    27c0:	ret

00000000000027c4 <cap_get_ambient@@Base>:
    27c4:	stp	x29, x30, [sp, #-48]!
    27c8:	mov	x29, sp
    27cc:	str	w0, [sp, #28]
    27d0:	ldrsw	x0, [sp, #28]
    27d4:	mov	x4, #0x0                   	// #0
    27d8:	mov	x3, #0x0                   	// #0
    27dc:	mov	x2, x0
    27e0:	mov	x1, #0x1                   	// #1
    27e4:	mov	w0, #0x2f                  	// #47
    27e8:	bl	1d50 <prctl@plt>
    27ec:	str	w0, [sp, #44]
    27f0:	ldr	w0, [sp, #44]
    27f4:	cmp	w0, #0x0
    27f8:	b.ge	2818 <cap_get_ambient@@Base+0x54>  // b.tcont
    27fc:	bl	1d30 <__errno_location@plt>
    2800:	mov	x1, x0
    2804:	ldr	w0, [sp, #44]
    2808:	neg	w0, w0
    280c:	str	w0, [x1]
    2810:	mov	w0, #0xffffffff            	// #-1
    2814:	b	281c <cap_get_ambient@@Base+0x58>
    2818:	ldr	w0, [sp, #44]
    281c:	ldp	x29, x30, [sp], #48
    2820:	ret

0000000000002824 <cap_set_ambient@@Base>:
    2824:	stp	x29, x30, [sp, #-48]!
    2828:	mov	x29, sp
    282c:	str	w0, [sp, #28]
    2830:	str	w1, [sp, #24]
    2834:	ldr	w0, [sp, #24]
    2838:	cmp	w0, #0x0
    283c:	b.eq	2858 <cap_set_ambient@@Base+0x34>  // b.none
    2840:	ldr	w0, [sp, #24]
    2844:	cmp	w0, #0x1
    2848:	b.ne	2864 <cap_set_ambient@@Base+0x40>  // b.any
    284c:	mov	w0, #0x2                   	// #2
    2850:	str	w0, [sp, #44]
    2854:	b	287c <cap_set_ambient@@Base+0x58>
    2858:	mov	w0, #0x3                   	// #3
    285c:	str	w0, [sp, #44]
    2860:	b	287c <cap_set_ambient@@Base+0x58>
    2864:	bl	1d30 <__errno_location@plt>
    2868:	mov	x1, x0
    286c:	mov	w0, #0x16                  	// #22
    2870:	str	w0, [x1]
    2874:	mov	w0, #0xffffffff            	// #-1
    2878:	b	28d0 <cap_set_ambient@@Base+0xac>
    287c:	ldrsw	x0, [sp, #44]
    2880:	ldrsw	x1, [sp, #28]
    2884:	mov	x5, #0x0                   	// #0
    2888:	mov	x4, #0x0                   	// #0
    288c:	mov	x3, #0x0                   	// #0
    2890:	mov	x2, x1
    2894:	mov	x1, x0
    2898:	mov	x0, #0x2f                  	// #47
    289c:	bl	2468 <cap_set_syscall@@Base+0xdc>
    28a0:	str	w0, [sp, #40]
    28a4:	ldr	w0, [sp, #40]
    28a8:	cmp	w0, #0x0
    28ac:	b.ge	28cc <cap_set_ambient@@Base+0xa8>  // b.tcont
    28b0:	bl	1d30 <__errno_location@plt>
    28b4:	mov	x1, x0
    28b8:	ldr	w0, [sp, #40]
    28bc:	neg	w0, w0
    28c0:	str	w0, [x1]
    28c4:	mov	w0, #0xffffffff            	// #-1
    28c8:	b	28d0 <cap_set_ambient@@Base+0xac>
    28cc:	ldr	w0, [sp, #40]
    28d0:	ldp	x29, x30, [sp], #48
    28d4:	ret

00000000000028d8 <cap_reset_ambient@@Base>:
    28d8:	stp	x29, x30, [sp, #-32]!
    28dc:	mov	x29, sp
    28e0:	bl	1d30 <__errno_location@plt>
    28e4:	ldr	w0, [x0]
    28e8:	str	w0, [sp, #20]
    28ec:	str	wzr, [sp, #24]
    28f0:	str	wzr, [sp, #28]
    28f4:	b	2934 <cap_reset_ambient@@Base+0x5c>
    28f8:	ldr	w0, [sp, #28]
    28fc:	bl	1b00 <cap_get_ambient@plt>
    2900:	str	w0, [sp, #24]
    2904:	ldr	w0, [sp, #24]
    2908:	cmn	w0, #0x1
    290c:	b.ne	2928 <cap_reset_ambient@@Base+0x50>  // b.any
    2910:	bl	1d30 <__errno_location@plt>
    2914:	mov	x1, x0
    2918:	ldr	w0, [sp, #20]
    291c:	str	w0, [x1]
    2920:	mov	w0, #0x0                   	// #0
    2924:	b	298c <cap_reset_ambient@@Base+0xb4>
    2928:	ldr	w0, [sp, #28]
    292c:	add	w0, w0, #0x1
    2930:	str	w0, [sp, #28]
    2934:	ldr	w0, [sp, #24]
    2938:	cmp	w0, #0x0
    293c:	b.eq	28f8 <cap_reset_ambient@@Base+0x20>  // b.none
    2940:	mov	x5, #0x0                   	// #0
    2944:	mov	x4, #0x0                   	// #0
    2948:	mov	x3, #0x0                   	// #0
    294c:	mov	x2, #0x0                   	// #0
    2950:	mov	x1, #0x4                   	// #4
    2954:	mov	x0, #0x2f                  	// #47
    2958:	bl	2468 <cap_set_syscall@@Base+0xdc>
    295c:	str	w0, [sp, #24]
    2960:	ldr	w0, [sp, #24]
    2964:	cmp	w0, #0x0
    2968:	b.ge	2988 <cap_reset_ambient@@Base+0xb0>  // b.tcont
    296c:	bl	1d30 <__errno_location@plt>
    2970:	mov	x1, x0
    2974:	ldr	w0, [sp, #24]
    2978:	neg	w0, w0
    297c:	str	w0, [x1]
    2980:	mov	w0, #0xffffffff            	// #-1
    2984:	b	298c <cap_reset_ambient@@Base+0xb4>
    2988:	ldr	w0, [sp, #24]
    298c:	ldp	x29, x30, [sp], #32
    2990:	ret

0000000000002994 <cap_get_secbits@@Base>:
    2994:	stp	x29, x30, [sp, #-16]!
    2998:	mov	x29, sp
    299c:	mov	x2, #0x0                   	// #0
    29a0:	mov	x1, #0x0                   	// #0
    29a4:	mov	w0, #0x1b                  	// #27
    29a8:	bl	1d50 <prctl@plt>
    29ac:	ldp	x29, x30, [sp], #16
    29b0:	ret

00000000000029b4 <cap_set_secbits@@Base>:
    29b4:	stp	x29, x30, [sp, #-32]!
    29b8:	mov	x29, sp
    29bc:	str	w0, [sp, #28]
    29c0:	ldr	w0, [sp, #28]
    29c4:	mov	x2, #0x0                   	// #0
    29c8:	mov	x1, x0
    29cc:	mov	x0, #0x1c                  	// #28
    29d0:	bl	242c <cap_set_syscall@@Base+0xa0>
    29d4:	ldp	x29, x30, [sp], #32
    29d8:	ret

00000000000029dc <cap_set_mode@@Base>:
    29dc:	stp	x29, x30, [sp, #-64]!
    29e0:	mov	x29, sp
    29e4:	str	w0, [sp, #28]
    29e8:	mov	w0, #0x8                   	// #8
    29ec:	str	w0, [sp, #32]
    29f0:	bl	1c40 <cap_get_proc@plt>
    29f4:	str	x0, [sp, #40]
    29f8:	mov	w0, #0xef                  	// #239
    29fc:	str	w0, [sp, #60]
    2a00:	add	x0, sp, #0x20
    2a04:	mov	w4, #0x1                   	// #1
    2a08:	mov	x3, x0
    2a0c:	mov	w2, #0x1                   	// #1
    2a10:	mov	w1, #0x0                   	// #0
    2a14:	ldr	x0, [sp, #40]
    2a18:	bl	1cf0 <cap_set_flag@plt>
    2a1c:	str	w0, [sp, #56]
    2a20:	ldr	x0, [sp, #40]
    2a24:	bl	1bc0 <cap_set_proc@plt>
    2a28:	mov	w1, w0
    2a2c:	ldr	w0, [sp, #56]
    2a30:	orr	w0, w0, w1
    2a34:	str	w0, [sp, #56]
    2a38:	ldr	w0, [sp, #56]
    2a3c:	cmp	w0, #0x0
    2a40:	b.ne	2b1c <cap_set_mode@@Base+0x140>  // b.any
    2a44:	ldr	w0, [sp, #28]
    2a48:	cmp	w0, #0x2
    2a4c:	b.hi	2a60 <cap_set_mode@@Base+0x84>  // b.pmore
    2a50:	ldr	w0, [sp, #28]
    2a54:	cmp	w0, #0x0
    2a58:	b.ne	2a70 <cap_set_mode@@Base+0x94>  // b.any
    2a5c:	b	2b00 <cap_set_mode@@Base+0x124>
    2a60:	ldr	w0, [sp, #28]
    2a64:	cmp	w0, #0x3
    2a68:	b.eq	2a7c <cap_set_mode@@Base+0xa0>  // b.none
    2a6c:	b	2b00 <cap_set_mode@@Base+0x124>
    2a70:	mov	w1, #0x2                   	// #2
    2a74:	ldr	x0, [sp, #40]
    2a78:	bl	1ad0 <cap_clear_flag@plt>
    2a7c:	mov	w0, #0x0                   	// #0
    2a80:	bl	1b00 <cap_get_ambient@plt>
    2a84:	cmp	w0, #0x0
    2a88:	b.ge	2a98 <cap_set_mode@@Base+0xbc>  // b.tcont
    2a8c:	mov	w0, #0x2f                  	// #47
    2a90:	str	w0, [sp, #60]
    2a94:	b	2aac <cap_set_mode@@Base+0xd0>
    2a98:	bl	1b80 <cap_reset_ambient@plt>
    2a9c:	str	w0, [sp, #56]
    2aa0:	ldr	w0, [sp, #56]
    2aa4:	cmp	w0, #0x0
    2aa8:	b.ne	2b24 <cap_set_mode@@Base+0x148>  // b.any
    2aac:	ldr	w0, [sp, #60]
    2ab0:	bl	1d20 <cap_set_secbits@plt>
    2ab4:	str	w0, [sp, #56]
    2ab8:	ldr	w0, [sp, #28]
    2abc:	cmp	w0, #0x1
    2ac0:	b.ne	2b2c <cap_set_mode@@Base+0x150>  // b.any
    2ac4:	str	wzr, [sp, #52]
    2ac8:	b	2ae0 <cap_set_mode@@Base+0x104>
    2acc:	ldr	w0, [sp, #52]
    2ad0:	bl	1c60 <cap_drop_bound@plt>
    2ad4:	ldr	w0, [sp, #52]
    2ad8:	add	w0, w0, #0x1
    2adc:	str	w0, [sp, #52]
    2ae0:	ldr	w0, [sp, #52]
    2ae4:	bl	1b90 <cap_get_bound@plt>
    2ae8:	cmp	w0, #0x0
    2aec:	b.ge	2acc <cap_set_mode@@Base+0xf0>  // b.tcont
    2af0:	mov	w1, #0x1                   	// #1
    2af4:	ldr	x0, [sp, #40]
    2af8:	bl	1ad0 <cap_clear_flag@plt>
    2afc:	b	2b30 <cap_set_mode@@Base+0x154>
    2b00:	bl	1d30 <__errno_location@plt>
    2b04:	mov	x1, x0
    2b08:	mov	w0, #0x16                  	// #22
    2b0c:	str	w0, [x1]
    2b10:	mov	w0, #0xffffffff            	// #-1
    2b14:	str	w0, [sp, #56]
    2b18:	b	2b30 <cap_set_mode@@Base+0x154>
    2b1c:	nop
    2b20:	b	2b30 <cap_set_mode@@Base+0x154>
    2b24:	nop
    2b28:	b	2b30 <cap_set_mode@@Base+0x154>
    2b2c:	nop
    2b30:	mov	w1, #0x0                   	// #0
    2b34:	ldr	x0, [sp, #40]
    2b38:	bl	1ad0 <cap_clear_flag@plt>
    2b3c:	ldr	x0, [sp, #40]
    2b40:	bl	1bc0 <cap_set_proc@plt>
    2b44:	mov	w1, w0
    2b48:	ldr	w0, [sp, #56]
    2b4c:	orr	w0, w0, w1
    2b50:	str	w0, [sp, #56]
    2b54:	ldr	x0, [sp, #40]
    2b58:	bl	1ce0 <cap_free@plt>
    2b5c:	ldr	w0, [sp, #56]
    2b60:	ldp	x29, x30, [sp], #64
    2b64:	ret

0000000000002b68 <cap_get_mode@@Base>:
    2b68:	stp	x29, x30, [sp, #-64]!
    2b6c:	mov	x29, sp
    2b70:	bl	1ac0 <cap_get_secbits@plt>
    2b74:	str	w0, [sp, #52]
    2b78:	ldr	w1, [sp, #52]
    2b7c:	mov	w0, #0x2f                  	// #47
    2b80:	and	w0, w1, w0
    2b84:	cmp	w0, #0x2f
    2b88:	b.eq	2b94 <cap_get_mode@@Base+0x2c>  // b.none
    2b8c:	mov	w0, #0x0                   	// #0
    2b90:	b	2ce0 <cap_get_mode@@Base+0x178>
    2b94:	bl	1d30 <__errno_location@plt>
    2b98:	ldr	w0, [x0]
    2b9c:	str	w0, [sp, #48]
    2ba0:	str	wzr, [sp, #60]
    2ba4:	str	wzr, [sp, #56]
    2ba8:	b	2c14 <cap_get_mode@@Base+0xac>
    2bac:	ldr	w0, [sp, #56]
    2bb0:	bl	1b00 <cap_get_ambient@plt>
    2bb4:	str	w0, [sp, #60]
    2bb8:	ldr	w0, [sp, #60]
    2bbc:	cmn	w0, #0x1
    2bc0:	b.ne	2bf4 <cap_get_mode@@Base+0x8c>  // b.any
    2bc4:	bl	1d30 <__errno_location@plt>
    2bc8:	mov	x1, x0
    2bcc:	ldr	w0, [sp, #48]
    2bd0:	str	w0, [x1]
    2bd4:	ldr	w0, [sp, #56]
    2bd8:	cmp	w0, #0x0
    2bdc:	b.eq	2c24 <cap_get_mode@@Base+0xbc>  // b.none
    2be0:	ldr	w0, [sp, #52]
    2be4:	cmp	w0, #0xef
    2be8:	b.eq	2c24 <cap_get_mode@@Base+0xbc>  // b.none
    2bec:	mov	w0, #0x0                   	// #0
    2bf0:	b	2ce0 <cap_get_mode@@Base+0x178>
    2bf4:	ldr	w0, [sp, #60]
    2bf8:	cmp	w0, #0x0
    2bfc:	b.eq	2c08 <cap_get_mode@@Base+0xa0>  // b.none
    2c00:	mov	w0, #0x0                   	// #0
    2c04:	b	2ce0 <cap_get_mode@@Base+0x178>
    2c08:	ldr	w0, [sp, #56]
    2c0c:	add	w0, w0, #0x1
    2c10:	str	w0, [sp, #56]
    2c14:	ldr	w0, [sp, #60]
    2c18:	cmp	w0, #0x0
    2c1c:	b.eq	2bac <cap_get_mode@@Base+0x44>  // b.none
    2c20:	b	2c28 <cap_get_mode@@Base+0xc0>
    2c24:	nop
    2c28:	bl	1c40 <cap_get_proc@plt>
    2c2c:	str	x0, [sp, #40]
    2c30:	bl	1c00 <cap_init@plt>
    2c34:	str	x0, [sp, #32]
    2c38:	ldr	x1, [sp, #40]
    2c3c:	ldr	x0, [sp, #32]
    2c40:	bl	1d00 <cap_compare@plt>
    2c44:	str	w0, [sp, #28]
    2c48:	ldr	x0, [sp, #32]
    2c4c:	bl	1ce0 <cap_free@plt>
    2c50:	ldr	x0, [sp, #40]
    2c54:	bl	1ce0 <cap_free@plt>
    2c58:	ldr	w0, [sp, #28]
    2c5c:	and	w0, w0, #0x4
    2c60:	cmp	w0, #0x0
    2c64:	b.eq	2c70 <cap_get_mode@@Base+0x108>  // b.none
    2c68:	mov	w0, #0x3                   	// #3
    2c6c:	b	2ce0 <cap_get_mode@@Base+0x178>
    2c70:	ldr	w0, [sp, #28]
    2c74:	and	w0, w0, #0x2
    2c78:	cmp	w0, #0x0
    2c7c:	b.ne	2c90 <cap_get_mode@@Base+0x128>  // b.any
    2c80:	ldr	w0, [sp, #28]
    2c84:	and	w0, w0, #0x1
    2c88:	cmp	w0, #0x0
    2c8c:	b.eq	2c98 <cap_get_mode@@Base+0x130>  // b.none
    2c90:	mov	w0, #0x2                   	// #2
    2c94:	b	2ce0 <cap_get_mode@@Base+0x178>
    2c98:	str	wzr, [sp, #56]
    2c9c:	ldr	w0, [sp, #56]
    2ca0:	bl	1b90 <cap_get_bound@plt>
    2ca4:	str	w0, [sp, #24]
    2ca8:	ldr	w0, [sp, #24]
    2cac:	cmn	w0, #0x1
    2cb0:	b.eq	2cd8 <cap_get_mode@@Base+0x170>  // b.none
    2cb4:	ldr	w0, [sp, #24]
    2cb8:	cmp	w0, #0x0
    2cbc:	b.eq	2cc8 <cap_get_mode@@Base+0x160>  // b.none
    2cc0:	mov	w0, #0x2                   	// #2
    2cc4:	b	2ce0 <cap_get_mode@@Base+0x178>
    2cc8:	ldr	w0, [sp, #56]
    2ccc:	add	w0, w0, #0x1
    2cd0:	str	w0, [sp, #56]
    2cd4:	b	2c9c <cap_get_mode@@Base+0x134>
    2cd8:	nop
    2cdc:	mov	w0, #0x1                   	// #1
    2ce0:	ldp	x29, x30, [sp], #64
    2ce4:	ret

0000000000002ce8 <cap_setuid@@Base>:
    2ce8:	stp	x29, x30, [sp, #-64]!
    2cec:	mov	x29, sp
    2cf0:	str	w0, [sp, #28]
    2cf4:	mov	w0, #0x7                   	// #7
    2cf8:	str	w0, [sp, #40]
    2cfc:	bl	1c40 <cap_get_proc@plt>
    2d00:	str	x0, [sp, #48]
    2d04:	add	x0, sp, #0x28
    2d08:	mov	w4, #0x1                   	// #1
    2d0c:	mov	x3, x0
    2d10:	mov	w2, #0x1                   	// #1
    2d14:	mov	w1, #0x0                   	// #0
    2d18:	ldr	x0, [sp, #48]
    2d1c:	bl	1cf0 <cap_set_flag@plt>
    2d20:	mov	x2, #0x0                   	// #0
    2d24:	mov	x1, #0x1                   	// #1
    2d28:	mov	x0, #0x8                   	// #8
    2d2c:	bl	242c <cap_set_syscall@@Base+0xa0>
    2d30:	ldr	x0, [sp, #48]
    2d34:	bl	1bc0 <cap_set_proc@plt>
    2d38:	str	w0, [sp, #60]
    2d3c:	ldr	w0, [sp, #60]
    2d40:	cmp	w0, #0x0
    2d44:	b.ne	2dbc <cap_setuid@@Base+0xd4>  // b.any
    2d48:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2d4c:	add	x0, x0, #0x198
    2d50:	ldr	w0, [x0]
    2d54:	cmp	w0, #0x0
    2d58:	b.eq	2db0 <cap_setuid@@Base+0xc8>  // b.none
    2d5c:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2d60:	add	x0, x0, #0x1a0
    2d64:	ldr	x4, [x0]
    2d68:	ldr	w0, [sp, #28]
    2d6c:	mov	x3, #0x0                   	// #0
    2d70:	mov	x2, #0x0                   	// #0
    2d74:	mov	x1, x0
    2d78:	mov	x0, #0x92                  	// #146
    2d7c:	blr	x4
    2d80:	str	w0, [sp, #60]
    2d84:	ldr	w0, [sp, #60]
    2d88:	cmp	w0, #0x0
    2d8c:	b.ge	2dbc <cap_setuid@@Base+0xd4>  // b.tcont
    2d90:	bl	1d30 <__errno_location@plt>
    2d94:	mov	x1, x0
    2d98:	ldr	w0, [sp, #60]
    2d9c:	neg	w0, w0
    2da0:	str	w0, [x1]
    2da4:	mov	w0, #0xffffffff            	// #-1
    2da8:	str	w0, [sp, #60]
    2dac:	b	2dbc <cap_setuid@@Base+0xd4>
    2db0:	ldr	w0, [sp, #28]
    2db4:	bl	1a80 <setuid@plt>
    2db8:	str	w0, [sp, #60]
    2dbc:	bl	1d30 <__errno_location@plt>
    2dc0:	ldr	w0, [x0]
    2dc4:	str	w0, [sp, #44]
    2dc8:	mov	x2, #0x0                   	// #0
    2dcc:	mov	x1, #0x0                   	// #0
    2dd0:	mov	x0, #0x8                   	// #8
    2dd4:	bl	242c <cap_set_syscall@@Base+0xa0>
    2dd8:	mov	w1, #0x0                   	// #0
    2ddc:	ldr	x0, [sp, #48]
    2de0:	bl	1ad0 <cap_clear_flag@plt>
    2de4:	ldr	x0, [sp, #48]
    2de8:	bl	1bc0 <cap_set_proc@plt>
    2dec:	ldr	x0, [sp, #48]
    2df0:	bl	1ce0 <cap_free@plt>
    2df4:	bl	1d30 <__errno_location@plt>
    2df8:	mov	x1, x0
    2dfc:	ldr	w0, [sp, #44]
    2e00:	str	w0, [x1]
    2e04:	ldr	w0, [sp, #60]
    2e08:	ldp	x29, x30, [sp], #64
    2e0c:	ret

0000000000002e10 <cap_setgroups@@Base>:
    2e10:	stp	x29, x30, [sp, #-80]!
    2e14:	mov	x29, sp
    2e18:	str	w0, [sp, #44]
    2e1c:	str	x1, [sp, #32]
    2e20:	str	x2, [sp, #24]
    2e24:	mov	w0, #0x6                   	// #6
    2e28:	str	w0, [sp, #56]
    2e2c:	bl	1c40 <cap_get_proc@plt>
    2e30:	str	x0, [sp, #64]
    2e34:	add	x0, sp, #0x38
    2e38:	mov	w4, #0x1                   	// #1
    2e3c:	mov	x3, x0
    2e40:	mov	w2, #0x1                   	// #1
    2e44:	mov	w1, #0x0                   	// #0
    2e48:	ldr	x0, [sp, #64]
    2e4c:	bl	1cf0 <cap_set_flag@plt>
    2e50:	ldr	x0, [sp, #64]
    2e54:	bl	1bc0 <cap_set_proc@plt>
    2e58:	str	w0, [sp, #76]
    2e5c:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2e60:	add	x0, x0, #0x198
    2e64:	ldr	w0, [x0]
    2e68:	cmp	w0, #0x0
    2e6c:	b.eq	2f08 <cap_setgroups@@Base+0xf8>  // b.none
    2e70:	ldr	w0, [sp, #76]
    2e74:	cmp	w0, #0x0
    2e78:	b.ne	2ea4 <cap_setgroups@@Base+0x94>  // b.any
    2e7c:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2e80:	add	x0, x0, #0x1a0
    2e84:	ldr	x4, [x0]
    2e88:	ldr	w0, [sp, #44]
    2e8c:	mov	x3, #0x0                   	// #0
    2e90:	mov	x2, #0x0                   	// #0
    2e94:	mov	x1, x0
    2e98:	mov	x0, #0x90                  	// #144
    2e9c:	blr	x4
    2ea0:	str	w0, [sp, #76]
    2ea4:	ldr	w0, [sp, #76]
    2ea8:	cmp	w0, #0x0
    2eac:	b.ne	2edc <cap_setgroups@@Base+0xcc>  // b.any
    2eb0:	adrp	x0, 17000 <cap_set_nsowner@@Base+0x1189c>
    2eb4:	add	x0, x0, #0x1a0
    2eb8:	ldr	x4, [x0]
    2ebc:	ldr	x0, [sp, #32]
    2ec0:	ldr	x1, [sp, #24]
    2ec4:	mov	x3, #0x0                   	// #0
    2ec8:	mov	x2, x1
    2ecc:	mov	x1, x0
    2ed0:	mov	x0, #0x9f                  	// #159
    2ed4:	blr	x4
    2ed8:	str	w0, [sp, #76]
    2edc:	ldr	w0, [sp, #76]
    2ee0:	cmp	w0, #0x0
    2ee4:	b.ge	2f3c <cap_setgroups@@Base+0x12c>  // b.tcont
    2ee8:	bl	1d30 <__errno_location@plt>
    2eec:	mov	x1, x0
    2ef0:	ldr	w0, [sp, #76]
    2ef4:	neg	w0, w0
    2ef8:	str	w0, [x1]
    2efc:	mov	w0, #0xffffffff            	// #-1
    2f00:	str	w0, [sp, #76]
    2f04:	b	2f3c <cap_setgroups@@Base+0x12c>
    2f08:	ldr	w0, [sp, #76]
    2f0c:	cmp	w0, #0x0
    2f10:	b.ne	2f20 <cap_setgroups@@Base+0x110>  // b.any
    2f14:	ldr	w0, [sp, #44]
    2f18:	bl	1bf0 <setgid@plt>
    2f1c:	str	w0, [sp, #76]
    2f20:	ldr	w0, [sp, #76]
    2f24:	cmp	w0, #0x0
    2f28:	b.ne	2f3c <cap_setgroups@@Base+0x12c>  // b.any
    2f2c:	ldr	x1, [sp, #24]
    2f30:	ldr	x0, [sp, #32]
    2f34:	bl	1ca0 <setgroups@plt>
    2f38:	str	w0, [sp, #76]
    2f3c:	bl	1d30 <__errno_location@plt>
    2f40:	ldr	w0, [x0]
    2f44:	str	w0, [sp, #60]
    2f48:	mov	w1, #0x0                   	// #0
    2f4c:	ldr	x0, [sp, #64]
    2f50:	bl	1ad0 <cap_clear_flag@plt>
    2f54:	ldr	x0, [sp, #64]
    2f58:	bl	1bc0 <cap_set_proc@plt>
    2f5c:	ldr	x0, [sp, #64]
    2f60:	bl	1ce0 <cap_free@plt>
    2f64:	bl	1d30 <__errno_location@plt>
    2f68:	mov	x1, x0
    2f6c:	ldr	w0, [sp, #60]
    2f70:	str	w0, [x1]
    2f74:	ldr	w0, [sp, #76]
    2f78:	ldp	x29, x30, [sp], #80
    2f7c:	ret

0000000000002f80 <cap_size@@Base>:
    2f80:	sub	sp, sp, #0x10
    2f84:	str	x0, [sp, #8]
    2f88:	mov	x0, #0x1d                  	// #29
    2f8c:	add	sp, sp, #0x10
    2f90:	ret

0000000000002f94 <cap_copy_ext@@Base>:
    2f94:	stp	x29, x30, [sp, #-80]!
    2f98:	mov	x29, sp
    2f9c:	str	x0, [sp, #40]
    2fa0:	str	x1, [sp, #32]
    2fa4:	str	x2, [sp, #24]
    2fa8:	ldr	x0, [sp, #40]
    2fac:	str	x0, [sp, #56]
    2fb0:	ldr	x0, [sp, #32]
    2fb4:	cmp	x0, #0x0
    2fb8:	b.eq	2ff0 <cap_copy_ext@@Base+0x5c>  // b.none
    2fbc:	ldr	x0, [sp, #32]
    2fc0:	sub	x0, x0, #0x4
    2fc4:	ldr	w1, [x0]
    2fc8:	mov	w0, #0x90d0                	// #37072
    2fcc:	movk	w0, #0xca, lsl #16
    2fd0:	cmp	w1, w0
    2fd4:	b.ne	2ff0 <cap_copy_ext@@Base+0x5c>  // b.any
    2fd8:	ldr	x0, [sp, #24]
    2fdc:	cmp	x0, #0x1c
    2fe0:	b.le	2ff0 <cap_copy_ext@@Base+0x5c>
    2fe4:	ldr	x0, [sp, #40]
    2fe8:	cmp	x0, #0x0
    2fec:	b.ne	3008 <cap_copy_ext@@Base+0x74>  // b.any
    2ff0:	bl	1d30 <__errno_location@plt>
    2ff4:	mov	x1, x0
    2ff8:	mov	w0, #0x16                  	// #22
    2ffc:	str	w0, [x1]
    3000:	mov	x0, #0xffffffffffffffff    	// #-1
    3004:	b	3190 <cap_copy_ext@@Base+0x1fc>
    3008:	ldr	x3, [sp, #56]
    300c:	mov	x2, #0x4                   	// #4
    3010:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    3014:	add	x1, x0, #0x7b8
    3018:	mov	x0, x3
    301c:	bl	1a60 <memcpy@plt>
    3020:	ldr	x0, [sp, #56]
    3024:	mov	w1, #0x8                   	// #8
    3028:	strb	w1, [x0, #4]
    302c:	str	wzr, [sp, #76]
    3030:	b	3180 <cap_copy_ext@@Base+0x1ec>
    3034:	str	xzr, [sp, #64]
    3038:	b	3168 <cap_copy_ext@@Base+0x1d4>
    303c:	ldr	x0, [sp, #64]
    3040:	lsr	x1, x0, #2
    3044:	ldr	x2, [sp, #32]
    3048:	ldrsw	x3, [sp, #76]
    304c:	mov	x0, x1
    3050:	lsl	x0, x0, #1
    3054:	add	x0, x0, x1
    3058:	add	x0, x0, x3
    305c:	lsl	x0, x0, #2
    3060:	add	x0, x2, x0
    3064:	ldr	w0, [x0, #8]
    3068:	str	w0, [sp, #52]
    306c:	ldr	x1, [sp, #64]
    3070:	add	x0, x1, #0x1
    3074:	str	x0, [sp, #64]
    3078:	ldr	w0, [sp, #52]
    307c:	and	w4, w0, #0xff
    3080:	ldr	x3, [sp, #56]
    3084:	ldrsw	x2, [sp, #76]
    3088:	mov	x0, x1
    308c:	lsl	x0, x0, #1
    3090:	add	x0, x0, x1
    3094:	add	x0, x3, x0
    3098:	add	x0, x0, x2
    309c:	mov	w1, w4
    30a0:	strb	w1, [x0, #5]
    30a4:	ldr	w0, [sp, #52]
    30a8:	lsr	w0, w0, #8
    30ac:	str	w0, [sp, #52]
    30b0:	ldr	x1, [sp, #64]
    30b4:	add	x0, x1, #0x1
    30b8:	str	x0, [sp, #64]
    30bc:	ldr	w0, [sp, #52]
    30c0:	and	w4, w0, #0xff
    30c4:	ldr	x3, [sp, #56]
    30c8:	ldrsw	x2, [sp, #76]
    30cc:	mov	x0, x1
    30d0:	lsl	x0, x0, #1
    30d4:	add	x0, x0, x1
    30d8:	add	x0, x3, x0
    30dc:	add	x0, x0, x2
    30e0:	mov	w1, w4
    30e4:	strb	w1, [x0, #5]
    30e8:	ldr	w0, [sp, #52]
    30ec:	lsr	w0, w0, #8
    30f0:	str	w0, [sp, #52]
    30f4:	ldr	x1, [sp, #64]
    30f8:	add	x0, x1, #0x1
    30fc:	str	x0, [sp, #64]
    3100:	ldr	w0, [sp, #52]
    3104:	and	w4, w0, #0xff
    3108:	ldr	x3, [sp, #56]
    310c:	ldrsw	x2, [sp, #76]
    3110:	mov	x0, x1
    3114:	lsl	x0, x0, #1
    3118:	add	x0, x0, x1
    311c:	add	x0, x3, x0
    3120:	add	x0, x0, x2
    3124:	mov	w1, w4
    3128:	strb	w1, [x0, #5]
    312c:	ldr	w0, [sp, #52]
    3130:	lsr	w2, w0, #8
    3134:	ldr	x1, [sp, #64]
    3138:	add	x0, x1, #0x1
    313c:	str	x0, [sp, #64]
    3140:	and	w4, w2, #0xff
    3144:	ldr	x3, [sp, #56]
    3148:	ldrsw	x2, [sp, #76]
    314c:	mov	x0, x1
    3150:	lsl	x0, x0, #1
    3154:	add	x0, x0, x1
    3158:	add	x0, x3, x0
    315c:	add	x0, x0, x2
    3160:	mov	w1, w4
    3164:	strb	w1, [x0, #5]
    3168:	ldr	x0, [sp, #64]
    316c:	cmp	x0, #0x7
    3170:	b.ls	303c <cap_copy_ext@@Base+0xa8>  // b.plast
    3174:	ldr	w0, [sp, #76]
    3178:	add	w0, w0, #0x1
    317c:	str	w0, [sp, #76]
    3180:	ldr	w0, [sp, #76]
    3184:	cmp	w0, #0x2
    3188:	b.le	3034 <cap_copy_ext@@Base+0xa0>
    318c:	mov	x0, #0x1d                  	// #29
    3190:	ldp	x29, x30, [sp], #80
    3194:	ret

0000000000003198 <cap_copy_int@@Base>:
    3198:	stp	x29, x30, [sp, #-80]!
    319c:	mov	x29, sp
    31a0:	str	x0, [sp, #24]
    31a4:	ldr	x0, [sp, #24]
    31a8:	str	x0, [sp, #56]
    31ac:	ldr	x0, [sp, #56]
    31b0:	cmp	x0, #0x0
    31b4:	b.eq	31d8 <cap_copy_int@@Base+0x40>  // b.none
    31b8:	ldr	x3, [sp, #56]
    31bc:	mov	x2, #0x4                   	// #4
    31c0:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    31c4:	add	x1, x0, #0x7b8
    31c8:	mov	x0, x3
    31cc:	bl	1c20 <memcmp@plt>
    31d0:	cmp	w0, #0x0
    31d4:	b.eq	31f0 <cap_copy_int@@Base+0x58>  // b.none
    31d8:	bl	1d30 <__errno_location@plt>
    31dc:	mov	x1, x0
    31e0:	mov	w0, #0x16                  	// #22
    31e4:	str	w0, [x1]
    31e8:	mov	x0, #0x0                   	// #0
    31ec:	b	33d0 <cap_copy_int@@Base+0x238>
    31f0:	bl	1c00 <cap_init@plt>
    31f4:	str	x0, [sp, #48]
    31f8:	ldr	x0, [sp, #48]
    31fc:	cmp	x0, #0x0
    3200:	b.ne	320c <cap_copy_int@@Base+0x74>  // b.any
    3204:	mov	x0, #0x0                   	// #0
    3208:	b	33d0 <cap_copy_int@@Base+0x238>
    320c:	ldr	x0, [sp, #56]
    3210:	ldrb	w0, [x0, #4]
    3214:	str	w0, [sp, #44]
    3218:	str	wzr, [sp, #76]
    321c:	b	33c0 <cap_copy_int@@Base+0x228>
    3220:	str	wzr, [sp, #68]
    3224:	str	wzr, [sp, #72]
    3228:	b	33a8 <cap_copy_int@@Base+0x210>
    322c:	str	wzr, [sp, #64]
    3230:	ldr	w1, [sp, #68]
    3234:	ldr	w0, [sp, #44]
    3238:	cmp	w1, w0
    323c:	b.eq	3274 <cap_copy_int@@Base+0xdc>  // b.none
    3240:	ldr	w0, [sp, #68]
    3244:	add	w1, w0, #0x1
    3248:	str	w1, [sp, #68]
    324c:	ldr	x3, [sp, #56]
    3250:	ldrsw	x2, [sp, #76]
    3254:	sxtw	x1, w0
    3258:	mov	x0, x1
    325c:	lsl	x0, x0, #1
    3260:	add	x0, x0, x1
    3264:	add	x0, x3, x0
    3268:	add	x0, x0, x2
    326c:	ldrb	w0, [x0, #5]
    3270:	str	w0, [sp, #64]
    3274:	ldr	w1, [sp, #68]
    3278:	ldr	w0, [sp, #44]
    327c:	cmp	w1, w0
    3280:	b.eq	32c8 <cap_copy_int@@Base+0x130>  // b.none
    3284:	ldr	w0, [sp, #68]
    3288:	add	w1, w0, #0x1
    328c:	str	w1, [sp, #68]
    3290:	ldr	x3, [sp, #56]
    3294:	ldrsw	x2, [sp, #76]
    3298:	sxtw	x1, w0
    329c:	mov	x0, x1
    32a0:	lsl	x0, x0, #1
    32a4:	add	x0, x0, x1
    32a8:	add	x0, x3, x0
    32ac:	add	x0, x0, x2
    32b0:	ldrb	w0, [x0, #5]
    32b4:	lsl	w0, w0, #8
    32b8:	mov	w1, w0
    32bc:	ldr	w0, [sp, #64]
    32c0:	orr	w0, w0, w1
    32c4:	str	w0, [sp, #64]
    32c8:	ldr	w1, [sp, #68]
    32cc:	ldr	w0, [sp, #44]
    32d0:	cmp	w1, w0
    32d4:	b.eq	331c <cap_copy_int@@Base+0x184>  // b.none
    32d8:	ldr	w0, [sp, #68]
    32dc:	add	w1, w0, #0x1
    32e0:	str	w1, [sp, #68]
    32e4:	ldr	x3, [sp, #56]
    32e8:	ldrsw	x2, [sp, #76]
    32ec:	sxtw	x1, w0
    32f0:	mov	x0, x1
    32f4:	lsl	x0, x0, #1
    32f8:	add	x0, x0, x1
    32fc:	add	x0, x3, x0
    3300:	add	x0, x0, x2
    3304:	ldrb	w0, [x0, #5]
    3308:	lsl	w0, w0, #16
    330c:	mov	w1, w0
    3310:	ldr	w0, [sp, #64]
    3314:	orr	w0, w0, w1
    3318:	str	w0, [sp, #64]
    331c:	ldr	w1, [sp, #68]
    3320:	ldr	w0, [sp, #44]
    3324:	cmp	w1, w0
    3328:	b.eq	3370 <cap_copy_int@@Base+0x1d8>  // b.none
    332c:	ldr	w0, [sp, #68]
    3330:	add	w1, w0, #0x1
    3334:	str	w1, [sp, #68]
    3338:	ldr	x3, [sp, #56]
    333c:	ldrsw	x2, [sp, #76]
    3340:	sxtw	x1, w0
    3344:	mov	x0, x1
    3348:	lsl	x0, x0, #1
    334c:	add	x0, x0, x1
    3350:	add	x0, x3, x0
    3354:	add	x0, x0, x2
    3358:	ldrb	w0, [x0, #5]
    335c:	lsl	w0, w0, #24
    3360:	mov	w1, w0
    3364:	ldr	w0, [sp, #64]
    3368:	orr	w0, w0, w1
    336c:	str	w0, [sp, #64]
    3370:	ldr	x2, [sp, #48]
    3374:	ldrsw	x3, [sp, #76]
    3378:	ldr	w1, [sp, #72]
    337c:	mov	x0, x1
    3380:	lsl	x0, x0, #1
    3384:	add	x0, x0, x1
    3388:	add	x0, x0, x3
    338c:	lsl	x0, x0, #2
    3390:	add	x0, x2, x0
    3394:	ldr	w1, [sp, #64]
    3398:	str	w1, [x0, #8]
    339c:	ldr	w0, [sp, #72]
    33a0:	add	w0, w0, #0x1
    33a4:	str	w0, [sp, #72]
    33a8:	ldr	w0, [sp, #72]
    33ac:	cmp	w0, #0x1
    33b0:	b.ls	322c <cap_copy_int@@Base+0x94>  // b.plast
    33b4:	ldr	w0, [sp, #76]
    33b8:	add	w0, w0, #0x1
    33bc:	str	w0, [sp, #76]
    33c0:	ldr	w0, [sp, #76]
    33c4:	cmp	w0, #0x2
    33c8:	b.le	3220 <cap_copy_int@@Base+0x88>
    33cc:	ldr	x0, [sp, #48]
    33d0:	ldp	x29, x30, [sp], #80
    33d4:	ret

00000000000033d8 <cap_get_flag@@Base>:
    33d8:	stp	x29, x30, [sp, #-48]!
    33dc:	mov	x29, sp
    33e0:	str	x0, [sp, #40]
    33e4:	str	w1, [sp, #36]
    33e8:	str	w2, [sp, #32]
    33ec:	str	x3, [sp, #24]
    33f0:	ldr	x0, [sp, #24]
    33f4:	cmp	x0, #0x0
    33f8:	b.eq	34ac <cap_get_flag@@Base+0xd4>  // b.none
    33fc:	ldr	x0, [sp, #40]
    3400:	cmp	x0, #0x0
    3404:	b.eq	34ac <cap_get_flag@@Base+0xd4>  // b.none
    3408:	ldr	x0, [sp, #40]
    340c:	sub	x0, x0, #0x4
    3410:	ldr	w1, [x0]
    3414:	mov	w0, #0x90d0                	// #37072
    3418:	movk	w0, #0xca, lsl #16
    341c:	cmp	w1, w0
    3420:	b.ne	34ac <cap_get_flag@@Base+0xd4>  // b.any
    3424:	ldr	w0, [sp, #36]
    3428:	cmp	w0, #0x0
    342c:	b.lt	34ac <cap_get_flag@@Base+0xd4>  // b.tstop
    3430:	ldr	w0, [sp, #36]
    3434:	cmp	w0, #0x3f
    3438:	b.gt	34ac <cap_get_flag@@Base+0xd4>
    343c:	ldr	w0, [sp, #32]
    3440:	cmp	w0, #0x2
    3444:	b.hi	34ac <cap_get_flag@@Base+0xd4>  // b.pmore
    3448:	ldr	w0, [sp, #36]
    344c:	asr	w0, w0, #5
    3450:	ldr	x2, [sp, #40]
    3454:	ldr	w3, [sp, #32]
    3458:	sxtw	x1, w0
    345c:	mov	x0, x1
    3460:	lsl	x0, x0, #1
    3464:	add	x0, x0, x1
    3468:	add	x0, x0, x3
    346c:	lsl	x0, x0, #2
    3470:	add	x0, x2, x0
    3474:	ldr	w1, [x0, #8]
    3478:	ldr	w0, [sp, #36]
    347c:	and	w0, w0, #0x1f
    3480:	mov	w2, #0x1                   	// #1
    3484:	lsl	w0, w2, w0
    3488:	and	w0, w1, w0
    348c:	cmp	w0, #0x0
    3490:	cset	w0, ne  // ne = any
    3494:	and	w0, w0, #0xff
    3498:	mov	w1, w0
    349c:	ldr	x0, [sp, #24]
    34a0:	str	w1, [x0]
    34a4:	mov	w0, #0x0                   	// #0
    34a8:	b	34c0 <cap_get_flag@@Base+0xe8>
    34ac:	bl	1d30 <__errno_location@plt>
    34b0:	mov	x1, x0
    34b4:	mov	w0, #0x16                  	// #22
    34b8:	str	w0, [x1]
    34bc:	mov	w0, #0xffffffff            	// #-1
    34c0:	ldp	x29, x30, [sp], #48
    34c4:	ret

00000000000034c8 <cap_set_flag@@Base>:
    34c8:	stp	x29, x30, [sp, #-64]!
    34cc:	mov	x29, sp
    34d0:	str	x0, [sp, #40]
    34d4:	str	w1, [sp, #36]
    34d8:	str	w2, [sp, #32]
    34dc:	str	x3, [sp, #24]
    34e0:	str	w4, [sp, #20]
    34e4:	ldr	x0, [sp, #40]
    34e8:	cmp	x0, #0x0
    34ec:	b.eq	36c0 <cap_set_flag@@Base+0x1f8>  // b.none
    34f0:	ldr	x0, [sp, #40]
    34f4:	sub	x0, x0, #0x4
    34f8:	ldr	w1, [x0]
    34fc:	mov	w0, #0x90d0                	// #37072
    3500:	movk	w0, #0xca, lsl #16
    3504:	cmp	w1, w0
    3508:	b.ne	36c0 <cap_set_flag@@Base+0x1f8>  // b.any
    350c:	ldr	w0, [sp, #32]
    3510:	cmp	w0, #0x0
    3514:	b.le	36c0 <cap_set_flag@@Base+0x1f8>
    3518:	ldr	w0, [sp, #32]
    351c:	cmp	w0, #0x3f
    3520:	b.gt	36c0 <cap_set_flag@@Base+0x1f8>
    3524:	ldr	w0, [sp, #36]
    3528:	cmp	w0, #0x2
    352c:	b.hi	36c0 <cap_set_flag@@Base+0x1f8>  // b.pmore
    3530:	ldr	w0, [sp, #20]
    3534:	cmp	w0, #0x1
    3538:	b.eq	3548 <cap_set_flag@@Base+0x80>  // b.none
    353c:	ldr	w0, [sp, #20]
    3540:	cmp	w0, #0x0
    3544:	b.ne	36c0 <cap_set_flag@@Base+0x1f8>  // b.any
    3548:	str	wzr, [sp, #60]
    354c:	b	36a8 <cap_set_flag@@Base+0x1e0>
    3550:	ldrsw	x0, [sp, #60]
    3554:	lsl	x0, x0, #2
    3558:	ldr	x1, [sp, #24]
    355c:	add	x0, x1, x0
    3560:	ldr	w0, [x0]
    3564:	cmp	w0, #0x0
    3568:	b.lt	369c <cap_set_flag@@Base+0x1d4>  // b.tstop
    356c:	ldrsw	x0, [sp, #60]
    3570:	lsl	x0, x0, #2
    3574:	ldr	x1, [sp, #24]
    3578:	add	x0, x1, x0
    357c:	ldr	w0, [x0]
    3580:	cmp	w0, #0x3f
    3584:	b.gt	369c <cap_set_flag@@Base+0x1d4>
    3588:	ldrsw	x0, [sp, #60]
    358c:	lsl	x0, x0, #2
    3590:	ldr	x1, [sp, #24]
    3594:	add	x0, x1, x0
    3598:	ldr	w0, [x0]
    359c:	str	w0, [sp, #56]
    35a0:	ldr	w0, [sp, #20]
    35a4:	cmp	w0, #0x1
    35a8:	b.ne	3624 <cap_set_flag@@Base+0x15c>  // b.any
    35ac:	ldr	w0, [sp, #56]
    35b0:	asr	w0, w0, #5
    35b4:	ldr	x2, [sp, #40]
    35b8:	ldr	w3, [sp, #36]
    35bc:	sxtw	x1, w0
    35c0:	mov	x0, x1
    35c4:	lsl	x0, x0, #1
    35c8:	add	x0, x0, x1
    35cc:	add	x0, x0, x3
    35d0:	lsl	x0, x0, #2
    35d4:	add	x0, x2, x0
    35d8:	ldr	w1, [x0, #8]
    35dc:	ldr	w0, [sp, #56]
    35e0:	and	w0, w0, #0x1f
    35e4:	mov	w2, #0x1                   	// #1
    35e8:	lsl	w0, w2, w0
    35ec:	ldr	w2, [sp, #56]
    35f0:	asr	w5, w2, #5
    35f4:	orr	w2, w1, w0
    35f8:	ldr	x3, [sp, #40]
    35fc:	ldr	w4, [sp, #36]
    3600:	sxtw	x1, w5
    3604:	mov	x0, x1
    3608:	lsl	x0, x0, #1
    360c:	add	x0, x0, x1
    3610:	add	x0, x0, x4
    3614:	lsl	x0, x0, #2
    3618:	add	x0, x3, x0
    361c:	str	w2, [x0, #8]
    3620:	b	369c <cap_set_flag@@Base+0x1d4>
    3624:	ldr	w0, [sp, #56]
    3628:	asr	w0, w0, #5
    362c:	ldr	x2, [sp, #40]
    3630:	ldr	w3, [sp, #36]
    3634:	sxtw	x1, w0
    3638:	mov	x0, x1
    363c:	lsl	x0, x0, #1
    3640:	add	x0, x0, x1
    3644:	add	x0, x0, x3
    3648:	lsl	x0, x0, #2
    364c:	add	x0, x2, x0
    3650:	ldr	w1, [x0, #8]
    3654:	ldr	w0, [sp, #56]
    3658:	and	w0, w0, #0x1f
    365c:	mov	w2, #0x1                   	// #1
    3660:	lsl	w0, w2, w0
    3664:	mvn	w0, w0
    3668:	ldr	w2, [sp, #56]
    366c:	asr	w5, w2, #5
    3670:	and	w2, w1, w0
    3674:	ldr	x3, [sp, #40]
    3678:	ldr	w4, [sp, #36]
    367c:	sxtw	x1, w5
    3680:	mov	x0, x1
    3684:	lsl	x0, x0, #1
    3688:	add	x0, x0, x1
    368c:	add	x0, x0, x4
    3690:	lsl	x0, x0, #2
    3694:	add	x0, x3, x0
    3698:	str	w2, [x0, #8]
    369c:	ldr	w0, [sp, #60]
    36a0:	add	w0, w0, #0x1
    36a4:	str	w0, [sp, #60]
    36a8:	ldr	w1, [sp, #60]
    36ac:	ldr	w0, [sp, #32]
    36b0:	cmp	w1, w0
    36b4:	b.lt	3550 <cap_set_flag@@Base+0x88>  // b.tstop
    36b8:	mov	w0, #0x0                   	// #0
    36bc:	b	36d4 <cap_set_flag@@Base+0x20c>
    36c0:	bl	1d30 <__errno_location@plt>
    36c4:	mov	x1, x0
    36c8:	mov	w0, #0x16                  	// #22
    36cc:	str	w0, [x1]
    36d0:	mov	w0, #0xffffffff            	// #-1
    36d4:	ldp	x29, x30, [sp], #64
    36d8:	ret

00000000000036dc <cap_clear@@Base>:
    36dc:	stp	x29, x30, [sp, #-32]!
    36e0:	mov	x29, sp
    36e4:	str	x0, [sp, #24]
    36e8:	ldr	x0, [sp, #24]
    36ec:	cmp	x0, #0x0
    36f0:	b.eq	372c <cap_clear@@Base+0x50>  // b.none
    36f4:	ldr	x0, [sp, #24]
    36f8:	sub	x0, x0, #0x4
    36fc:	ldr	w1, [x0]
    3700:	mov	w0, #0x90d0                	// #37072
    3704:	movk	w0, #0xca, lsl #16
    3708:	cmp	w1, w0
    370c:	b.ne	372c <cap_clear@@Base+0x50>  // b.any
    3710:	ldr	x0, [sp, #24]
    3714:	add	x0, x0, #0x8
    3718:	mov	x2, #0x18                  	// #24
    371c:	mov	w1, #0x0                   	// #0
    3720:	bl	1ba0 <memset@plt>
    3724:	mov	w0, #0x0                   	// #0
    3728:	b	3740 <cap_clear@@Base+0x64>
    372c:	bl	1d30 <__errno_location@plt>
    3730:	mov	x1, x0
    3734:	mov	w0, #0x16                  	// #22
    3738:	str	w0, [x1]
    373c:	mov	w0, #0xffffffff            	// #-1
    3740:	ldp	x29, x30, [sp], #32
    3744:	ret

0000000000003748 <cap_clear_flag@@Base>:
    3748:	stp	x29, x30, [sp, #-48]!
    374c:	mov	x29, sp
    3750:	str	x0, [sp, #24]
    3754:	str	w1, [sp, #20]
    3758:	ldr	w0, [sp, #20]
    375c:	cmp	w0, #0x2
    3760:	b.hi	37dc <cap_clear_flag@@Base+0x94>  // b.pmore
    3764:	ldr	x0, [sp, #24]
    3768:	cmp	x0, #0x0
    376c:	b.eq	37dc <cap_clear_flag@@Base+0x94>  // b.none
    3770:	ldr	x0, [sp, #24]
    3774:	sub	x0, x0, #0x4
    3778:	ldr	w1, [x0]
    377c:	mov	w0, #0x90d0                	// #37072
    3780:	movk	w0, #0xca, lsl #16
    3784:	cmp	w1, w0
    3788:	b.ne	37dc <cap_clear_flag@@Base+0x94>  // b.any
    378c:	str	wzr, [sp, #44]
    3790:	b	37c8 <cap_clear_flag@@Base+0x80>
    3794:	ldr	x2, [sp, #24]
    3798:	ldr	w3, [sp, #20]
    379c:	ldr	w1, [sp, #44]
    37a0:	mov	x0, x1
    37a4:	lsl	x0, x0, #1
    37a8:	add	x0, x0, x1
    37ac:	add	x0, x0, x3
    37b0:	lsl	x0, x0, #2
    37b4:	add	x0, x2, x0
    37b8:	str	wzr, [x0, #8]
    37bc:	ldr	w0, [sp, #44]
    37c0:	add	w0, w0, #0x1
    37c4:	str	w0, [sp, #44]
    37c8:	ldr	w0, [sp, #44]
    37cc:	cmp	w0, #0x1
    37d0:	b.ls	3794 <cap_clear_flag@@Base+0x4c>  // b.plast
    37d4:	mov	w0, #0x0                   	// #0
    37d8:	b	37f0 <cap_clear_flag@@Base+0xa8>
    37dc:	bl	1d30 <__errno_location@plt>
    37e0:	mov	x1, x0
    37e4:	mov	w0, #0x16                  	// #22
    37e8:	str	w0, [x1]
    37ec:	mov	w0, #0xffffffff            	// #-1
    37f0:	ldp	x29, x30, [sp], #48
    37f4:	ret

00000000000037f8 <cap_compare@@Base>:
    37f8:	stp	x29, x30, [sp, #-48]!
    37fc:	mov	x29, sp
    3800:	str	x0, [sp, #24]
    3804:	str	x1, [sp, #16]
    3808:	ldr	x0, [sp, #24]
    380c:	cmp	x0, #0x0
    3810:	b.eq	3858 <cap_compare@@Base+0x60>  // b.none
    3814:	ldr	x0, [sp, #24]
    3818:	sub	x0, x0, #0x4
    381c:	ldr	w1, [x0]
    3820:	mov	w0, #0x90d0                	// #37072
    3824:	movk	w0, #0xca, lsl #16
    3828:	cmp	w1, w0
    382c:	b.ne	3858 <cap_compare@@Base+0x60>  // b.any
    3830:	ldr	x0, [sp, #16]
    3834:	cmp	x0, #0x0
    3838:	b.eq	3858 <cap_compare@@Base+0x60>  // b.none
    383c:	ldr	x0, [sp, #16]
    3840:	sub	x0, x0, #0x4
    3844:	ldr	w1, [x0]
    3848:	mov	w0, #0x90d0                	// #37072
    384c:	movk	w0, #0xca, lsl #16
    3850:	cmp	w1, w0
    3854:	b.eq	3870 <cap_compare@@Base+0x78>  // b.none
    3858:	bl	1d30 <__errno_location@plt>
    385c:	mov	x1, x0
    3860:	mov	w0, #0x16                  	// #22
    3864:	str	w0, [x1]
    3868:	mov	w0, #0xffffffff            	// #-1
    386c:	b	39a4 <cap_compare@@Base+0x1ac>
    3870:	str	wzr, [sp, #44]
    3874:	str	wzr, [sp, #40]
    3878:	b	3994 <cap_compare@@Base+0x19c>
    387c:	ldr	x2, [sp, #24]
    3880:	ldr	w1, [sp, #44]
    3884:	mov	x0, x1
    3888:	lsl	x0, x0, #1
    388c:	add	x0, x0, x1
    3890:	lsl	x0, x0, #2
    3894:	add	x0, x2, x0
    3898:	ldr	w2, [x0, #8]
    389c:	ldr	x3, [sp, #16]
    38a0:	ldr	w1, [sp, #44]
    38a4:	mov	x0, x1
    38a8:	lsl	x0, x0, #1
    38ac:	add	x0, x0, x1
    38b0:	lsl	x0, x0, #2
    38b4:	add	x0, x3, x0
    38b8:	ldr	w0, [x0, #8]
    38bc:	cmp	w2, w0
    38c0:	cset	w0, ne  // ne = any
    38c4:	and	w0, w0, #0xff
    38c8:	mov	w4, w0
    38cc:	ldr	x2, [sp, #24]
    38d0:	ldr	w1, [sp, #44]
    38d4:	mov	x0, x1
    38d8:	lsl	x0, x0, #1
    38dc:	add	x0, x0, x1
    38e0:	lsl	x0, x0, #2
    38e4:	add	x0, x2, x0
    38e8:	ldr	w2, [x0, #16]
    38ec:	ldr	x3, [sp, #16]
    38f0:	ldr	w1, [sp, #44]
    38f4:	mov	x0, x1
    38f8:	lsl	x0, x0, #1
    38fc:	add	x0, x0, x1
    3900:	lsl	x0, x0, #2
    3904:	add	x0, x3, x0
    3908:	ldr	w0, [x0, #16]
    390c:	cmp	w2, w0
    3910:	b.eq	391c <cap_compare@@Base+0x124>  // b.none
    3914:	mov	w0, #0x4                   	// #4
    3918:	b	3920 <cap_compare@@Base+0x128>
    391c:	mov	w0, #0x0                   	// #0
    3920:	orr	w2, w0, w4
    3924:	ldr	x3, [sp, #24]
    3928:	ldr	w1, [sp, #44]
    392c:	mov	x0, x1
    3930:	lsl	x0, x0, #1
    3934:	add	x0, x0, x1
    3938:	lsl	x0, x0, #2
    393c:	add	x0, x3, x0
    3940:	ldr	w3, [x0, #12]
    3944:	ldr	x4, [sp, #16]
    3948:	ldr	w1, [sp, #44]
    394c:	mov	x0, x1
    3950:	lsl	x0, x0, #1
    3954:	add	x0, x0, x1
    3958:	lsl	x0, x0, #2
    395c:	add	x0, x4, x0
    3960:	ldr	w0, [x0, #12]
    3964:	cmp	w3, w0
    3968:	b.eq	3974 <cap_compare@@Base+0x17c>  // b.none
    396c:	mov	w0, #0x2                   	// #2
    3970:	b	3978 <cap_compare@@Base+0x180>
    3974:	mov	w0, #0x0                   	// #0
    3978:	orr	w0, w0, w2
    397c:	ldr	w1, [sp, #40]
    3980:	orr	w0, w1, w0
    3984:	str	w0, [sp, #40]
    3988:	ldr	w0, [sp, #44]
    398c:	add	w0, w0, #0x1
    3990:	str	w0, [sp, #44]
    3994:	ldr	w0, [sp, #44]
    3998:	cmp	w0, #0x1
    399c:	b.ls	387c <cap_compare@@Base+0x84>  // b.plast
    39a0:	ldr	w0, [sp, #40]
    39a4:	ldp	x29, x30, [sp], #48
    39a8:	ret
    39ac:	sub	sp, sp, #0x30
    39b0:	str	x0, [sp, #24]
    39b4:	str	x1, [sp, #16]
    39b8:	str	w2, [sp, #12]
    39bc:	str	w3, [sp, #8]
    39c0:	ldr	w0, [sp, #8]
    39c4:	str	w0, [sp, #44]
    39c8:	b	3a34 <cap_compare@@Base+0x23c>
    39cc:	ldr	x2, [sp, #24]
    39d0:	ldr	w3, [sp, #12]
    39d4:	ldrsw	x1, [sp, #44]
    39d8:	mov	x0, x1
    39dc:	lsl	x0, x0, #1
    39e0:	add	x0, x0, x1
    39e4:	add	x0, x0, x3
    39e8:	lsl	x0, x0, #2
    39ec:	add	x0, x2, x0
    39f0:	ldr	w1, [x0, #8]
    39f4:	ldrsw	x0, [sp, #44]
    39f8:	lsl	x0, x0, #2
    39fc:	ldr	x2, [sp, #16]
    3a00:	add	x0, x2, x0
    3a04:	ldr	w0, [x0]
    3a08:	orr	w2, w1, w0
    3a0c:	ldr	x3, [sp, #24]
    3a10:	ldr	w4, [sp, #12]
    3a14:	ldrsw	x1, [sp, #44]
    3a18:	mov	x0, x1
    3a1c:	lsl	x0, x0, #1
    3a20:	add	x0, x0, x1
    3a24:	add	x0, x0, x4
    3a28:	lsl	x0, x0, #2
    3a2c:	add	x0, x3, x0
    3a30:	str	w2, [x0, #8]
    3a34:	ldr	w0, [sp, #44]
    3a38:	sub	w1, w0, #0x1
    3a3c:	str	w1, [sp, #44]
    3a40:	cmp	w0, #0x0
    3a44:	b.ne	39cc <cap_compare@@Base+0x1d4>  // b.any
    3a48:	nop
    3a4c:	nop
    3a50:	add	sp, sp, #0x30
    3a54:	ret
    3a58:	sub	sp, sp, #0x30
    3a5c:	str	x0, [sp, #24]
    3a60:	str	x1, [sp, #16]
    3a64:	str	w2, [sp, #12]
    3a68:	str	w3, [sp, #8]
    3a6c:	ldr	w0, [sp, #8]
    3a70:	str	w0, [sp, #44]
    3a74:	b	3ae4 <cap_compare@@Base+0x2ec>
    3a78:	ldr	x2, [sp, #24]
    3a7c:	ldr	w3, [sp, #12]
    3a80:	ldrsw	x1, [sp, #44]
    3a84:	mov	x0, x1
    3a88:	lsl	x0, x0, #1
    3a8c:	add	x0, x0, x1
    3a90:	add	x0, x0, x3
    3a94:	lsl	x0, x0, #2
    3a98:	add	x0, x2, x0
    3a9c:	ldr	w1, [x0, #8]
    3aa0:	ldrsw	x0, [sp, #44]
    3aa4:	lsl	x0, x0, #2
    3aa8:	ldr	x2, [sp, #16]
    3aac:	add	x0, x2, x0
    3ab0:	ldr	w0, [x0]
    3ab4:	mvn	w0, w0
    3ab8:	and	w2, w1, w0
    3abc:	ldr	x3, [sp, #24]
    3ac0:	ldr	w4, [sp, #12]
    3ac4:	ldrsw	x1, [sp, #44]
    3ac8:	mov	x0, x1
    3acc:	lsl	x0, x0, #1
    3ad0:	add	x0, x0, x1
    3ad4:	add	x0, x0, x4
    3ad8:	lsl	x0, x0, #2
    3adc:	add	x0, x3, x0
    3ae0:	str	w2, [x0, #8]
    3ae4:	ldr	w0, [sp, #44]
    3ae8:	sub	w1, w0, #0x1
    3aec:	str	w1, [sp, #44]
    3af0:	cmp	w0, #0x0
    3af4:	b.ne	3a78 <cap_compare@@Base+0x280>  // b.any
    3af8:	nop
    3afc:	nop
    3b00:	add	sp, sp, #0x30
    3b04:	ret
    3b08:	stp	x29, x30, [sp, #-32]!
    3b0c:	mov	x29, sp
    3b10:	str	x0, [sp, #24]
    3b14:	str	x1, [sp, #16]
    3b18:	b	3b34 <cap_compare@@Base+0x33c>
    3b1c:	ldr	x0, [sp, #24]
    3b20:	add	x0, x0, #0x1
    3b24:	str	x0, [sp, #24]
    3b28:	ldr	x0, [sp, #16]
    3b2c:	add	x0, x0, #0x1
    3b30:	str	x0, [sp, #16]
    3b34:	ldr	x0, [sp, #16]
    3b38:	ldrb	w0, [x0]
    3b3c:	cmp	w0, #0x0
    3b40:	b.eq	3b64 <cap_compare@@Base+0x36c>  // b.none
    3b44:	ldr	x0, [sp, #24]
    3b48:	ldrb	w0, [x0]
    3b4c:	bl	1d40 <tolower@plt>
    3b50:	mov	w1, w0
    3b54:	ldr	x0, [sp, #16]
    3b58:	ldrb	w0, [x0]
    3b5c:	cmp	w1, w0
    3b60:	b.eq	3b1c <cap_compare@@Base+0x324>  // b.none
    3b64:	ldr	x0, [sp, #16]
    3b68:	ldrb	w0, [x0]
    3b6c:	cmp	w0, #0x0
    3b70:	b.ne	3bb0 <cap_compare@@Base+0x3b8>  // b.any
    3b74:	bl	1c30 <__ctype_b_loc@plt>
    3b78:	ldr	x1, [x0]
    3b7c:	ldr	x0, [sp, #24]
    3b80:	ldrb	w0, [x0]
    3b84:	and	x0, x0, #0xff
    3b88:	lsl	x0, x0, #1
    3b8c:	add	x0, x1, x0
    3b90:	ldrh	w0, [x0]
    3b94:	and	w0, w0, #0x8
    3b98:	cmp	w0, #0x0
    3b9c:	b.ne	3bb0 <cap_compare@@Base+0x3b8>  // b.any
    3ba0:	ldr	x0, [sp, #24]
    3ba4:	ldrb	w0, [x0]
    3ba8:	cmp	w0, #0x5f
    3bac:	b.ne	3bb8 <cap_compare@@Base+0x3c0>  // b.any
    3bb0:	mov	x0, #0x0                   	// #0
    3bb4:	b	3bbc <cap_compare@@Base+0x3c4>
    3bb8:	ldr	x0, [sp, #24]
    3bbc:	ldp	x29, x30, [sp], #32
    3bc0:	ret
    3bc4:	stp	x29, x30, [sp, #-48]!
    3bc8:	mov	x29, sp
    3bcc:	str	x0, [sp, #24]
    3bd0:	str	w1, [sp, #20]
    3bd4:	str	w2, [sp, #16]
    3bd8:	bl	1ae0 <cap_max_bits@plt>
    3bdc:	str	w0, [sp, #36]
    3be0:	ldr	w0, [sp, #16]
    3be4:	str	w0, [sp, #44]
    3be8:	b	3c70 <cap_compare@@Base+0x478>
    3bec:	ldr	w0, [sp, #44]
    3bf0:	lsl	w0, w0, #5
    3bf4:	str	w0, [sp, #32]
    3bf8:	str	wzr, [sp, #40]
    3bfc:	ldr	w0, [sp, #32]
    3c00:	add	w1, w0, #0x20
    3c04:	ldr	w0, [sp, #36]
    3c08:	cmp	w1, w0
    3c0c:	b.hi	3c1c <cap_compare@@Base+0x424>  // b.pmore
    3c10:	mov	w0, #0xffffffff            	// #-1
    3c14:	str	w0, [sp, #40]
    3c18:	b	3c50 <cap_compare@@Base+0x458>
    3c1c:	ldr	w0, [sp, #36]
    3c20:	ldr	w1, [sp, #32]
    3c24:	cmp	w1, w0
    3c28:	b.cs	3c50 <cap_compare@@Base+0x458>  // b.hs, b.nlast
    3c2c:	ldr	w0, [sp, #36]
    3c30:	negs	w1, w0
    3c34:	and	w0, w0, #0x1f
    3c38:	and	w1, w1, #0x1f
    3c3c:	csneg	w0, w0, w1, mi  // mi = first
    3c40:	mov	x1, #0x1                   	// #1
    3c44:	lsl	x0, x1, x0
    3c48:	sub	w0, w0, #0x1
    3c4c:	str	w0, [sp, #40]
    3c50:	ldr	w0, [sp, #44]
    3c54:	lsl	x0, x0, #2
    3c58:	ldr	x1, [sp, #24]
    3c5c:	add	x0, x1, x0
    3c60:	ldr	w2, [sp, #20]
    3c64:	ldr	w1, [sp, #40]
    3c68:	and	w1, w2, w1
    3c6c:	str	w1, [x0]
    3c70:	ldr	w0, [sp, #44]
    3c74:	sub	w1, w0, #0x1
    3c78:	str	w1, [sp, #44]
    3c7c:	cmp	w0, #0x0
    3c80:	b.ne	3bec <cap_compare@@Base+0x3f4>  // b.any
    3c84:	nop
    3c88:	ldp	x29, x30, [sp], #48
    3c8c:	ret
    3c90:	stp	x29, x30, [sp, #-80]!
    3c94:	mov	x29, sp
    3c98:	str	x0, [sp, #24]
    3c9c:	ldr	x0, [sp, #24]
    3ca0:	ldr	x0, [x0]
    3ca4:	str	x0, [sp, #40]
    3ca8:	bl	1c30 <__ctype_b_loc@plt>
    3cac:	ldr	x1, [x0]
    3cb0:	ldr	x0, [sp, #40]
    3cb4:	ldrb	w0, [x0]
    3cb8:	and	x0, x0, #0xff
    3cbc:	lsl	x0, x0, #1
    3cc0:	add	x0, x1, x0
    3cc4:	ldrh	w0, [x0]
    3cc8:	and	w0, w0, #0x800
    3ccc:	cmp	w0, #0x0
    3cd0:	b.eq	3d10 <cap_compare@@Base+0x518>  // b.none
    3cd4:	ldr	x0, [sp, #40]
    3cd8:	add	x1, sp, #0x28
    3cdc:	mov	w2, #0x0                   	// #0
    3ce0:	bl	1a90 <strtoul@plt>
    3ce4:	str	x0, [sp, #48]
    3ce8:	ldr	x0, [sp, #48]
    3cec:	cmp	x0, #0x3f
    3cf0:	b.ls	3cfc <cap_compare@@Base+0x504>  // b.plast
    3cf4:	mov	w0, #0xffffffff            	// #-1
    3cf8:	b	3dfc <cap_compare@@Base+0x604>
    3cfc:	ldr	x1, [sp, #40]
    3d00:	ldr	x0, [sp, #24]
    3d04:	str	x1, [x0]
    3d08:	ldr	x0, [sp, #48]
    3d0c:	b	3dfc <cap_compare@@Base+0x604>
    3d10:	str	wzr, [sp, #76]
    3d14:	b	3d54 <cap_compare@@Base+0x55c>
    3d18:	bl	1c30 <__ctype_b_loc@plt>
    3d1c:	ldr	x1, [x0]
    3d20:	ldrsw	x0, [sp, #68]
    3d24:	lsl	x0, x0, #1
    3d28:	add	x0, x1, x0
    3d2c:	ldrh	w0, [x0]
    3d30:	and	w0, w0, #0x400
    3d34:	cmp	w0, #0x0
    3d38:	b.ne	3d48 <cap_compare@@Base+0x550>  // b.any
    3d3c:	ldr	w0, [sp, #68]
    3d40:	cmp	w0, #0x5f
    3d44:	b.ne	3d78 <cap_compare@@Base+0x580>  // b.any
    3d48:	ldr	w0, [sp, #76]
    3d4c:	add	w0, w0, #0x1
    3d50:	str	w0, [sp, #76]
    3d54:	ldr	x1, [sp, #40]
    3d58:	ldr	w0, [sp, #76]
    3d5c:	add	x0, x1, x0
    3d60:	ldrb	w0, [x0]
    3d64:	str	w0, [sp, #68]
    3d68:	ldr	w0, [sp, #68]
    3d6c:	cmp	w0, #0x0
    3d70:	b.ne	3d18 <cap_compare@@Base+0x520>  // b.any
    3d74:	b	3d7c <cap_compare@@Base+0x584>
    3d78:	nop
    3d7c:	bl	1ae0 <cap_max_bits@plt>
    3d80:	str	w0, [sp, #72]
    3d84:	b	3de4 <cap_compare@@Base+0x5ec>
    3d88:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x1089c>
    3d8c:	ldr	x0, [x0, #4032]
    3d90:	ldr	w1, [sp, #72]
    3d94:	ldr	x0, [x0, x1, lsl #3]
    3d98:	cmp	x0, #0x0
    3d9c:	b.eq	3de4 <cap_compare@@Base+0x5ec>  // b.none
    3da0:	ldr	x2, [sp, #40]
    3da4:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x1089c>
    3da8:	ldr	x0, [x0, #4032]
    3dac:	ldr	w1, [sp, #72]
    3db0:	ldr	x0, [x0, x1, lsl #3]
    3db4:	mov	x1, x0
    3db8:	mov	x0, x2
    3dbc:	bl	3b08 <cap_compare@@Base+0x310>
    3dc0:	str	x0, [sp, #56]
    3dc4:	ldr	x0, [sp, #56]
    3dc8:	cmp	x0, #0x0
    3dcc:	b.eq	3de4 <cap_compare@@Base+0x5ec>  // b.none
    3dd0:	ldr	x0, [sp, #24]
    3dd4:	ldr	x1, [sp, #56]
    3dd8:	str	x1, [x0]
    3ddc:	ldr	w0, [sp, #72]
    3de0:	b	3dfc <cap_compare@@Base+0x604>
    3de4:	ldr	w0, [sp, #72]
    3de8:	sub	w1, w0, #0x1
    3dec:	str	w1, [sp, #72]
    3df0:	cmp	w0, #0x0
    3df4:	b.ne	3d88 <cap_compare@@Base+0x590>  // b.any
    3df8:	mov	w0, #0xffffffff            	// #-1
    3dfc:	ldp	x29, x30, [sp], #80
    3e00:	ret

0000000000003e04 <cap_from_text@@Base>:
    3e04:	stp	x29, x30, [sp, #-80]!
    3e08:	mov	x29, sp
    3e0c:	str	x0, [sp, #24]
    3e10:	ldr	x0, [sp, #24]
    3e14:	cmp	x0, #0x0
    3e18:	b.ne	3e34 <cap_from_text@@Base+0x30>  // b.any
    3e1c:	bl	1d30 <__errno_location@plt>
    3e20:	mov	x1, x0
    3e24:	mov	w0, #0x16                  	// #22
    3e28:	str	w0, [x1]
    3e2c:	mov	x0, #0x0                   	// #0
    3e30:	b	44b8 <cap_from_text@@Base+0x6b4>
    3e34:	bl	1c00 <cap_init@plt>
    3e38:	str	x0, [sp, #56]
    3e3c:	ldr	x0, [sp, #56]
    3e40:	cmp	x0, #0x0
    3e44:	b.ne	3e50 <cap_from_text@@Base+0x4c>  // b.any
    3e48:	mov	x0, #0x0                   	// #0
    3e4c:	b	44b8 <cap_from_text@@Base+0x6b4>
    3e50:	ldr	x0, [sp, #56]
    3e54:	ldr	w0, [x0]
    3e58:	mov	w1, #0x522                 	// #1314
    3e5c:	movk	w1, #0x2008, lsl #16
    3e60:	cmp	w0, w1
    3e64:	b.eq	3eb4 <cap_from_text@@Base+0xb0>  // b.none
    3e68:	mov	w1, #0x522                 	// #1314
    3e6c:	movk	w1, #0x2008, lsl #16
    3e70:	cmp	w0, w1
    3e74:	b.hi	3ec0 <cap_from_text@@Base+0xbc>  // b.pmore
    3e78:	mov	w1, #0x330                 	// #816
    3e7c:	movk	w1, #0x1998, lsl #16
    3e80:	cmp	w0, w1
    3e84:	b.eq	3e9c <cap_from_text@@Base+0x98>  // b.none
    3e88:	mov	w1, #0x1026                	// #4134
    3e8c:	movk	w1, #0x2007, lsl #16
    3e90:	cmp	w0, w1
    3e94:	b.eq	3ea8 <cap_from_text@@Base+0xa4>  // b.none
    3e98:	b	3ec0 <cap_from_text@@Base+0xbc>
    3e9c:	mov	w0, #0x1                   	// #1
    3ea0:	str	w0, [sp, #76]
    3ea4:	b	3ed8 <cap_from_text@@Base+0xd4>
    3ea8:	mov	w0, #0x2                   	// #2
    3eac:	str	w0, [sp, #76]
    3eb0:	b	3ed8 <cap_from_text@@Base+0xd4>
    3eb4:	mov	w0, #0x2                   	// #2
    3eb8:	str	w0, [sp, #76]
    3ebc:	b	3ed8 <cap_from_text@@Base+0xd4>
    3ec0:	bl	1d30 <__errno_location@plt>
    3ec4:	mov	x1, x0
    3ec8:	mov	w0, #0x16                  	// #22
    3ecc:	str	w0, [x1]
    3ed0:	mov	x0, #0x0                   	// #0
    3ed4:	b	44b8 <cap_from_text@@Base+0x6b4>
    3ed8:	str	wzr, [sp, #68]
    3edc:	str	wzr, [sp, #64]
    3ee0:	add	x0, sp, #0x28
    3ee4:	mov	x2, #0x8                   	// #8
    3ee8:	mov	w1, #0x0                   	// #0
    3eec:	bl	1ba0 <memset@plt>
    3ef0:	b	3f00 <cap_from_text@@Base+0xfc>
    3ef4:	ldr	x0, [sp, #24]
    3ef8:	add	x0, x0, #0x1
    3efc:	str	x0, [sp, #24]
    3f00:	bl	1c30 <__ctype_b_loc@plt>
    3f04:	ldr	x1, [x0]
    3f08:	ldr	x0, [sp, #24]
    3f0c:	ldrb	w0, [x0]
    3f10:	and	x0, x0, #0xff
    3f14:	lsl	x0, x0, #1
    3f18:	add	x0, x1, x0
    3f1c:	ldrh	w0, [x0]
    3f20:	and	w0, w0, #0x2000
    3f24:	cmp	w0, #0x0
    3f28:	b.ne	3ef4 <cap_from_text@@Base+0xf0>  // b.any
    3f2c:	ldr	x0, [sp, #24]
    3f30:	ldrb	w0, [x0]
    3f34:	cmp	w0, #0x0
    3f38:	b.ne	3f44 <cap_from_text@@Base+0x140>  // b.any
    3f3c:	ldr	x0, [sp, #56]
    3f40:	b	44b8 <cap_from_text@@Base+0x6b4>
    3f44:	bl	1c30 <__ctype_b_loc@plt>
    3f48:	ldr	x1, [x0]
    3f4c:	ldr	x0, [sp, #24]
    3f50:	ldrb	w0, [x0]
    3f54:	and	x0, x0, #0xff
    3f58:	lsl	x0, x0, #1
    3f5c:	add	x0, x1, x0
    3f60:	ldrh	w0, [x0]
    3f64:	and	w0, w0, #0x8
    3f68:	cmp	w0, #0x0
    3f6c:	b.ne	3f80 <cap_from_text@@Base+0x17c>  // b.any
    3f70:	ldr	x0, [sp, #24]
    3f74:	ldrb	w0, [x0]
    3f78:	cmp	w0, #0x5f
    3f7c:	b.ne	4084 <cap_from_text@@Base+0x280>  // b.any
    3f80:	ldr	x2, [sp, #24]
    3f84:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    3f88:	add	x1, x0, #0xa70
    3f8c:	mov	x0, x2
    3f90:	bl	3b08 <cap_compare@@Base+0x310>
    3f94:	cmp	x0, #0x0
    3f98:	b.eq	3fbc <cap_from_text@@Base+0x1b8>  // b.none
    3f9c:	ldr	x0, [sp, #24]
    3fa0:	add	x0, x0, #0x3
    3fa4:	str	x0, [sp, #24]
    3fa8:	add	x0, sp, #0x28
    3fac:	ldr	w2, [sp, #76]
    3fb0:	mov	w1, #0xffffffff            	// #-1
    3fb4:	bl	3bc4 <cap_compare@@Base+0x3cc>
    3fb8:	b	4018 <cap_from_text@@Base+0x214>
    3fbc:	add	x0, sp, #0x18
    3fc0:	bl	3c90 <cap_compare@@Base+0x498>
    3fc4:	str	w0, [sp, #52]
    3fc8:	ldr	w0, [sp, #52]
    3fcc:	cmn	w0, #0x1
    3fd0:	b.eq	4454 <cap_from_text@@Base+0x650>  // b.none
    3fd4:	ldr	w0, [sp, #52]
    3fd8:	asr	w0, w0, #5
    3fdc:	sxtw	x0, w0
    3fe0:	lsl	x0, x0, #2
    3fe4:	add	x1, sp, #0x28
    3fe8:	ldr	w1, [x1, x0]
    3fec:	ldr	w0, [sp, #52]
    3ff0:	and	w0, w0, #0x1f
    3ff4:	mov	w2, #0x1                   	// #1
    3ff8:	lsl	w0, w2, w0
    3ffc:	ldr	w2, [sp, #52]
    4000:	asr	w3, w2, #5
    4004:	orr	w2, w1, w0
    4008:	sxtw	x0, w3
    400c:	lsl	x0, x0, #2
    4010:	add	x1, sp, #0x28
    4014:	str	w2, [x1, x0]
    4018:	ldr	x0, [sp, #24]
    401c:	ldrb	w0, [x0]
    4020:	cmp	w0, #0x2c
    4024:	b.ne	4074 <cap_from_text@@Base+0x270>  // b.any
    4028:	bl	1c30 <__ctype_b_loc@plt>
    402c:	ldr	x1, [x0]
    4030:	ldr	x0, [sp, #24]
    4034:	add	x0, x0, #0x1
    4038:	str	x0, [sp, #24]
    403c:	ldr	x0, [sp, #24]
    4040:	ldrb	w0, [x0]
    4044:	and	x0, x0, #0xff
    4048:	lsl	x0, x0, #1
    404c:	add	x0, x1, x0
    4050:	ldrh	w0, [x0]
    4054:	and	w0, w0, #0x8
    4058:	cmp	w0, #0x0
    405c:	b.ne	3f80 <cap_from_text@@Base+0x17c>  // b.any
    4060:	ldr	x0, [sp, #24]
    4064:	ldrb	w0, [x0]
    4068:	cmp	w0, #0x5f
    406c:	b.ne	445c <cap_from_text@@Base+0x658>  // b.any
    4070:	b	3f80 <cap_from_text@@Base+0x17c>
    4074:	nop
    4078:	mov	w0, #0x1                   	// #1
    407c:	str	w0, [sp, #64]
    4080:	b	40b4 <cap_from_text@@Base+0x2b0>
    4084:	ldr	x0, [sp, #24]
    4088:	ldrb	w0, [x0]
    408c:	cmp	w0, #0x2b
    4090:	b.eq	4464 <cap_from_text@@Base+0x660>  // b.none
    4094:	ldr	x0, [sp, #24]
    4098:	ldrb	w0, [x0]
    409c:	cmp	w0, #0x2d
    40a0:	b.eq	4464 <cap_from_text@@Base+0x660>  // b.none
    40a4:	add	x0, sp, #0x28
    40a8:	ldr	w2, [sp, #76]
    40ac:	mov	w1, #0xffffffff            	// #-1
    40b0:	bl	3bc4 <cap_compare@@Base+0x3cc>
    40b4:	ldr	x0, [sp, #24]
    40b8:	add	x1, x0, #0x1
    40bc:	str	x1, [sp, #24]
    40c0:	ldrb	w0, [x0]
    40c4:	strb	w0, [sp, #75]
    40c8:	ldrb	w0, [sp, #75]
    40cc:	cmp	w0, #0x3d
    40d0:	b.ne	412c <cap_from_text@@Base+0x328>  // b.any
    40d4:	ldr	x0, [sp, #24]
    40d8:	ldrb	w0, [x0]
    40dc:	cmp	w0, #0x2b
    40e0:	b.eq	40f4 <cap_from_text@@Base+0x2f0>  // b.none
    40e4:	ldr	x0, [sp, #24]
    40e8:	ldrb	w0, [x0]
    40ec:	cmp	w0, #0x2d
    40f0:	b.ne	412c <cap_from_text@@Base+0x328>  // b.any
    40f4:	ldr	w0, [sp, #64]
    40f8:	cmp	w0, #0x0
    40fc:	b.eq	446c <cap_from_text@@Base+0x668>  // b.none
    4100:	ldr	x0, [sp, #24]
    4104:	add	x1, x0, #0x1
    4108:	str	x1, [sp, #24]
    410c:	ldrb	w0, [x0]
    4110:	cmp	w0, #0x2b
    4114:	b.ne	4120 <cap_from_text@@Base+0x31c>  // b.any
    4118:	mov	w0, #0x50                  	// #80
    411c:	b	4124 <cap_from_text@@Base+0x320>
    4120:	mov	w0, #0x4d                  	// #77
    4124:	strb	w0, [sp, #75]
    4128:	b	4150 <cap_from_text@@Base+0x34c>
    412c:	ldrb	w0, [sp, #75]
    4130:	cmp	w0, #0x2b
    4134:	b.eq	4150 <cap_from_text@@Base+0x34c>  // b.none
    4138:	ldrb	w0, [sp, #75]
    413c:	cmp	w0, #0x2d
    4140:	b.eq	4150 <cap_from_text@@Base+0x34c>  // b.none
    4144:	ldrb	w0, [sp, #75]
    4148:	cmp	w0, #0x3d
    414c:	b.ne	4474 <cap_from_text@@Base+0x670>  // b.any
    4150:	ldr	x0, [sp, #24]
    4154:	ldrb	w0, [x0]
    4158:	cmp	w0, #0x0
    415c:	b.eq	41f4 <cap_from_text@@Base+0x3f0>  // b.none
    4160:	bl	1c30 <__ctype_b_loc@plt>
    4164:	ldr	x1, [x0]
    4168:	ldr	x0, [sp, #24]
    416c:	ldrb	w0, [x0]
    4170:	and	x0, x0, #0xff
    4174:	lsl	x0, x0, #1
    4178:	add	x0, x1, x0
    417c:	ldrh	w0, [x0]
    4180:	and	w0, w0, #0x2000
    4184:	cmp	w0, #0x0
    4188:	b.ne	41f4 <cap_from_text@@Base+0x3f0>  // b.any
    418c:	ldr	x0, [sp, #24]
    4190:	add	x1, x0, #0x1
    4194:	str	x1, [sp, #24]
    4198:	ldrb	w0, [x0]
    419c:	cmp	w0, #0x70
    41a0:	b.eq	41e0 <cap_from_text@@Base+0x3dc>  // b.none
    41a4:	cmp	w0, #0x70
    41a8:	b.gt	447c <cap_from_text@@Base+0x678>
    41ac:	cmp	w0, #0x65
    41b0:	b.eq	41c0 <cap_from_text@@Base+0x3bc>  // b.none
    41b4:	cmp	w0, #0x69
    41b8:	b.eq	41d0 <cap_from_text@@Base+0x3cc>  // b.none
    41bc:	b	447c <cap_from_text@@Base+0x678>
    41c0:	ldr	w0, [sp, #68]
    41c4:	orr	w0, w0, #0x1
    41c8:	str	w0, [sp, #68]
    41cc:	b	41f0 <cap_from_text@@Base+0x3ec>
    41d0:	ldr	w0, [sp, #68]
    41d4:	orr	w0, w0, #0x4
    41d8:	str	w0, [sp, #68]
    41dc:	b	41f0 <cap_from_text@@Base+0x3ec>
    41e0:	ldr	w0, [sp, #68]
    41e4:	orr	w0, w0, #0x2
    41e8:	str	w0, [sp, #68]
    41ec:	nop
    41f0:	b	4200 <cap_from_text@@Base+0x3fc>
    41f4:	ldrb	w0, [sp, #75]
    41f8:	cmp	w0, #0x3d
    41fc:	b.ne	4484 <cap_from_text@@Base+0x680>  // b.any
    4200:	ldrb	w0, [sp, #75]
    4204:	cmp	w0, #0x50
    4208:	b.eq	4248 <cap_from_text@@Base+0x444>  // b.none
    420c:	cmp	w0, #0x50
    4210:	b.gt	43a4 <cap_from_text@@Base+0x5a0>
    4214:	cmp	w0, #0x4d
    4218:	b.eq	4248 <cap_from_text@@Base+0x444>  // b.none
    421c:	cmp	w0, #0x4d
    4220:	b.gt	43a4 <cap_from_text@@Base+0x5a0>
    4224:	cmp	w0, #0x3d
    4228:	b.eq	4248 <cap_from_text@@Base+0x444>  // b.none
    422c:	cmp	w0, #0x3d
    4230:	b.gt	43a4 <cap_from_text@@Base+0x5a0>
    4234:	cmp	w0, #0x2b
    4238:	b.eq	429c <cap_from_text@@Base+0x498>  // b.none
    423c:	cmp	w0, #0x2d
    4240:	b.eq	431c <cap_from_text@@Base+0x518>  // b.none
    4244:	b	43a4 <cap_from_text@@Base+0x5a0>
    4248:	add	x0, sp, #0x28
    424c:	ldr	w3, [sp, #76]
    4250:	mov	w2, #0x0                   	// #0
    4254:	mov	x1, x0
    4258:	ldr	x0, [sp, #56]
    425c:	bl	3a58 <cap_compare@@Base+0x260>
    4260:	add	x0, sp, #0x28
    4264:	ldr	w3, [sp, #76]
    4268:	mov	w2, #0x1                   	// #1
    426c:	mov	x1, x0
    4270:	ldr	x0, [sp, #56]
    4274:	bl	3a58 <cap_compare@@Base+0x260>
    4278:	add	x0, sp, #0x28
    427c:	ldr	w3, [sp, #76]
    4280:	mov	w2, #0x2                   	// #2
    4284:	mov	x1, x0
    4288:	ldr	x0, [sp, #56]
    428c:	bl	3a58 <cap_compare@@Base+0x260>
    4290:	ldrb	w0, [sp, #75]
    4294:	cmp	w0, #0x4d
    4298:	b.eq	4318 <cap_from_text@@Base+0x514>  // b.none
    429c:	ldr	w0, [sp, #68]
    42a0:	and	w0, w0, #0x1
    42a4:	cmp	w0, #0x0
    42a8:	b.eq	42c4 <cap_from_text@@Base+0x4c0>  // b.none
    42ac:	add	x0, sp, #0x28
    42b0:	ldr	w3, [sp, #76]
    42b4:	mov	w2, #0x0                   	// #0
    42b8:	mov	x1, x0
    42bc:	ldr	x0, [sp, #56]
    42c0:	bl	39ac <cap_compare@@Base+0x1b4>
    42c4:	ldr	w0, [sp, #68]
    42c8:	and	w0, w0, #0x2
    42cc:	cmp	w0, #0x0
    42d0:	b.eq	42ec <cap_from_text@@Base+0x4e8>  // b.none
    42d4:	add	x0, sp, #0x28
    42d8:	ldr	w3, [sp, #76]
    42dc:	mov	w2, #0x1                   	// #1
    42e0:	mov	x1, x0
    42e4:	ldr	x0, [sp, #56]
    42e8:	bl	39ac <cap_compare@@Base+0x1b4>
    42ec:	ldr	w0, [sp, #68]
    42f0:	and	w0, w0, #0x4
    42f4:	cmp	w0, #0x0
    42f8:	b.eq	4398 <cap_from_text@@Base+0x594>  // b.none
    42fc:	add	x0, sp, #0x28
    4300:	ldr	w3, [sp, #76]
    4304:	mov	w2, #0x2                   	// #2
    4308:	mov	x1, x0
    430c:	ldr	x0, [sp, #56]
    4310:	bl	39ac <cap_compare@@Base+0x1b4>
    4314:	b	4398 <cap_from_text@@Base+0x594>
    4318:	nop
    431c:	ldr	w0, [sp, #68]
    4320:	and	w0, w0, #0x1
    4324:	cmp	w0, #0x0
    4328:	b.eq	4344 <cap_from_text@@Base+0x540>  // b.none
    432c:	add	x0, sp, #0x28
    4330:	ldr	w3, [sp, #76]
    4334:	mov	w2, #0x0                   	// #0
    4338:	mov	x1, x0
    433c:	ldr	x0, [sp, #56]
    4340:	bl	3a58 <cap_compare@@Base+0x260>
    4344:	ldr	w0, [sp, #68]
    4348:	and	w0, w0, #0x2
    434c:	cmp	w0, #0x0
    4350:	b.eq	436c <cap_from_text@@Base+0x568>  // b.none
    4354:	add	x0, sp, #0x28
    4358:	ldr	w3, [sp, #76]
    435c:	mov	w2, #0x1                   	// #1
    4360:	mov	x1, x0
    4364:	ldr	x0, [sp, #56]
    4368:	bl	3a58 <cap_compare@@Base+0x260>
    436c:	ldr	w0, [sp, #68]
    4370:	and	w0, w0, #0x4
    4374:	cmp	w0, #0x0
    4378:	b.eq	43a0 <cap_from_text@@Base+0x59c>  // b.none
    437c:	add	x0, sp, #0x28
    4380:	ldr	w3, [sp, #76]
    4384:	mov	w2, #0x2                   	// #2
    4388:	mov	x1, x0
    438c:	ldr	x0, [sp, #56]
    4390:	bl	3a58 <cap_compare@@Base+0x260>
    4394:	b	43a0 <cap_from_text@@Base+0x59c>
    4398:	nop
    439c:	b	43a4 <cap_from_text@@Base+0x5a0>
    43a0:	nop
    43a4:	ldr	x0, [sp, #24]
    43a8:	ldrb	w0, [x0]
    43ac:	cmp	w0, #0x2b
    43b0:	b.eq	43c4 <cap_from_text@@Base+0x5c0>  // b.none
    43b4:	ldr	x0, [sp, #24]
    43b8:	ldrb	w0, [x0]
    43bc:	cmp	w0, #0x2d
    43c0:	b.ne	4414 <cap_from_text@@Base+0x610>  // b.any
    43c4:	ldr	w0, [sp, #64]
    43c8:	cmp	w0, #0x0
    43cc:	b.eq	448c <cap_from_text@@Base+0x688>  // b.none
    43d0:	str	wzr, [sp, #68]
    43d4:	ldr	x0, [sp, #24]
    43d8:	add	x1, x0, #0x1
    43dc:	str	x1, [sp, #24]
    43e0:	ldrb	w0, [x0]
    43e4:	strb	w0, [sp, #75]
    43e8:	bl	1c30 <__ctype_b_loc@plt>
    43ec:	ldr	x1, [x0]
    43f0:	ldr	x0, [sp, #24]
    43f4:	ldrb	w0, [x0]
    43f8:	and	x0, x0, #0xff
    43fc:	lsl	x0, x0, #1
    4400:	add	x0, x1, x0
    4404:	ldrh	w0, [x0]
    4408:	and	w0, w0, #0x400
    440c:	cmp	w0, #0x0
    4410:	b.eq	4494 <cap_from_text@@Base+0x690>  // b.none
    4414:	ldr	x0, [sp, #24]
    4418:	ldrb	w0, [x0]
    441c:	cmp	w0, #0x0
    4420:	b.eq	3ed8 <cap_from_text@@Base+0xd4>  // b.none
    4424:	bl	1c30 <__ctype_b_loc@plt>
    4428:	ldr	x1, [x0]
    442c:	ldr	x0, [sp, #24]
    4430:	ldrb	w0, [x0]
    4434:	and	x0, x0, #0xff
    4438:	lsl	x0, x0, #1
    443c:	add	x0, x1, x0
    4440:	ldrh	w0, [x0]
    4444:	and	w0, w0, #0x2000
    4448:	cmp	w0, #0x0
    444c:	b.eq	4150 <cap_from_text@@Base+0x34c>  // b.none
    4450:	b	3ed8 <cap_from_text@@Base+0xd4>
    4454:	nop
    4458:	b	4498 <cap_from_text@@Base+0x694>
    445c:	nop
    4460:	b	4498 <cap_from_text@@Base+0x694>
    4464:	nop
    4468:	b	4498 <cap_from_text@@Base+0x694>
    446c:	nop
    4470:	b	4498 <cap_from_text@@Base+0x694>
    4474:	nop
    4478:	b	4498 <cap_from_text@@Base+0x694>
    447c:	nop
    4480:	b	4498 <cap_from_text@@Base+0x694>
    4484:	nop
    4488:	b	4498 <cap_from_text@@Base+0x694>
    448c:	nop
    4490:	b	4498 <cap_from_text@@Base+0x694>
    4494:	nop
    4498:	ldr	x0, [sp, #56]
    449c:	bl	1ce0 <cap_free@plt>
    44a0:	str	xzr, [sp, #56]
    44a4:	bl	1d30 <__errno_location@plt>
    44a8:	mov	x1, x0
    44ac:	mov	w0, #0x16                  	// #22
    44b0:	str	w0, [x1]
    44b4:	ldr	x0, [sp, #56]
    44b8:	ldp	x29, x30, [sp], #80
    44bc:	ret

00000000000044c0 <cap_from_name@@Base>:
    44c0:	stp	x29, x30, [sp, #-48]!
    44c4:	mov	x29, sp
    44c8:	str	x0, [sp, #24]
    44cc:	str	x1, [sp, #16]
    44d0:	add	x0, sp, #0x18
    44d4:	bl	3c90 <cap_compare@@Base+0x498>
    44d8:	str	w0, [sp, #44]
    44dc:	ldr	w0, [sp, #44]
    44e0:	cmp	w0, #0x0
    44e4:	b.lt	4500 <cap_from_name@@Base+0x40>  // b.tstop
    44e8:	ldr	x0, [sp, #16]
    44ec:	cmp	x0, #0x0
    44f0:	b.eq	4500 <cap_from_name@@Base+0x40>  // b.none
    44f4:	ldr	x0, [sp, #16]
    44f8:	ldr	w1, [sp, #44]
    44fc:	str	w1, [x0]
    4500:	ldr	w0, [sp, #44]
    4504:	lsr	w0, w0, #31
    4508:	and	w0, w0, #0xff
    450c:	neg	w0, w0
    4510:	ldp	x29, x30, [sp], #48
    4514:	ret

0000000000004518 <cap_to_name@@Base>:
    4518:	stp	x29, x30, [sp, #-48]!
    451c:	mov	x29, sp
    4520:	str	w0, [sp, #28]
    4524:	ldr	w0, [sp, #28]
    4528:	cmp	w0, #0x0
    452c:	b.lt	453c <cap_to_name@@Base+0x24>  // b.tstop
    4530:	ldr	w0, [sp, #28]
    4534:	cmp	w0, #0x25
    4538:	b.le	4570 <cap_to_name@@Base+0x58>
    453c:	add	x3, sp, #0x20
    4540:	ldr	w2, [sp, #28]
    4544:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4548:	add	x1, x0, #0xa78
    454c:	mov	x0, x3
    4550:	bl	1b30 <asprintf@plt>
    4554:	ldr	x0, [sp, #32]
    4558:	bl	1af0 <_libcap_strdup@plt>
    455c:	str	x0, [sp, #40]
    4560:	ldr	x0, [sp, #32]
    4564:	bl	1c70 <free@plt>
    4568:	ldr	x0, [sp, #40]
    456c:	b	4584 <cap_to_name@@Base+0x6c>
    4570:	adrp	x0, 16000 <cap_set_nsowner@@Base+0x1089c>
    4574:	ldr	x0, [x0, #4032]
    4578:	ldrsw	x1, [sp, #28]
    457c:	ldr	x0, [x0, x1, lsl #3]
    4580:	bl	1af0 <_libcap_strdup@plt>
    4584:	ldp	x29, x30, [sp], #48
    4588:	ret
    458c:	sub	sp, sp, #0x20
    4590:	str	x0, [sp, #8]
    4594:	str	w1, [sp, #4]
    4598:	str	wzr, [sp, #28]
    459c:	ldr	w0, [sp, #4]
    45a0:	asr	w0, w0, #5
    45a4:	ldr	x2, [sp, #8]
    45a8:	sxtw	x1, w0
    45ac:	mov	x0, x1
    45b0:	lsl	x0, x0, #1
    45b4:	add	x0, x0, x1
    45b8:	lsl	x0, x0, #2
    45bc:	add	x0, x2, x0
    45c0:	ldr	w1, [x0, #8]
    45c4:	ldr	w0, [sp, #4]
    45c8:	and	w0, w0, #0x1f
    45cc:	mov	w2, #0x1                   	// #1
    45d0:	lsl	w0, w2, w0
    45d4:	and	w0, w1, w0
    45d8:	cmp	w0, #0x0
    45dc:	b.eq	45ec <cap_to_name@@Base+0xd4>  // b.none
    45e0:	ldr	w0, [sp, #28]
    45e4:	orr	w0, w0, #0x1
    45e8:	str	w0, [sp, #28]
    45ec:	ldr	w0, [sp, #4]
    45f0:	asr	w0, w0, #5
    45f4:	ldr	x2, [sp, #8]
    45f8:	sxtw	x1, w0
    45fc:	mov	x0, x1
    4600:	lsl	x0, x0, #1
    4604:	add	x0, x0, x1
    4608:	lsl	x0, x0, #2
    460c:	add	x0, x2, x0
    4610:	ldr	w1, [x0, #12]
    4614:	ldr	w0, [sp, #4]
    4618:	and	w0, w0, #0x1f
    461c:	mov	w2, #0x1                   	// #1
    4620:	lsl	w0, w2, w0
    4624:	and	w0, w1, w0
    4628:	cmp	w0, #0x0
    462c:	b.eq	463c <cap_to_name@@Base+0x124>  // b.none
    4630:	ldr	w0, [sp, #28]
    4634:	orr	w0, w0, #0x2
    4638:	str	w0, [sp, #28]
    463c:	ldr	w0, [sp, #4]
    4640:	asr	w0, w0, #5
    4644:	ldr	x2, [sp, #8]
    4648:	sxtw	x1, w0
    464c:	mov	x0, x1
    4650:	lsl	x0, x0, #1
    4654:	add	x0, x0, x1
    4658:	lsl	x0, x0, #2
    465c:	add	x0, x2, x0
    4660:	ldr	w1, [x0, #16]
    4664:	ldr	w0, [sp, #4]
    4668:	and	w0, w0, #0x1f
    466c:	mov	w2, #0x1                   	// #1
    4670:	lsl	w0, w2, w0
    4674:	and	w0, w1, w0
    4678:	cmp	w0, #0x0
    467c:	b.eq	468c <cap_to_name@@Base+0x174>  // b.none
    4680:	ldr	w0, [sp, #28]
    4684:	orr	w0, w0, #0x4
    4688:	str	w0, [sp, #28]
    468c:	ldr	w0, [sp, #28]
    4690:	add	sp, sp, #0x20
    4694:	ret

0000000000004698 <cap_to_text@@Base>:
    4698:	sub	sp, sp, #0x610
    469c:	stp	x29, x30, [sp]
    46a0:	mov	x29, sp
    46a4:	str	x0, [sp, #24]
    46a8:	str	x1, [sp, #16]
    46ac:	ldr	x0, [sp, #24]
    46b0:	cmp	x0, #0x0
    46b4:	b.eq	46d4 <cap_to_text@@Base+0x3c>  // b.none
    46b8:	ldr	x0, [sp, #24]
    46bc:	sub	x0, x0, #0x4
    46c0:	ldr	w1, [x0]
    46c4:	mov	w0, #0x90d0                	// #37072
    46c8:	movk	w0, #0xca, lsl #16
    46cc:	cmp	w1, w0
    46d0:	b.eq	46ec <cap_to_text@@Base+0x54>  // b.none
    46d4:	bl	1d30 <__errno_location@plt>
    46d8:	mov	x1, x0
    46dc:	mov	w0, #0x16                  	// #22
    46e0:	str	w0, [x1]
    46e4:	mov	x0, #0x0                   	// #0
    46e8:	b	4d90 <cap_to_text@@Base+0x6f8>
    46ec:	add	x0, sp, #0x20
    46f0:	mov	x2, #0x20                  	// #32
    46f4:	mov	w1, #0x0                   	// #0
    46f8:	bl	1ba0 <memset@plt>
    46fc:	bl	1ae0 <cap_max_bits@plt>
    4700:	str	w0, [sp, #1528]
    4704:	str	wzr, [sp, #1532]
    4708:	b	4750 <cap_to_text@@Base+0xb8>
    470c:	ldr	w0, [sp, #1532]
    4710:	mov	w1, w0
    4714:	ldr	x0, [sp, #24]
    4718:	bl	458c <cap_to_name@@Base+0x74>
    471c:	mov	w3, w0
    4720:	sxtw	x0, w3
    4724:	lsl	x0, x0, #2
    4728:	add	x1, sp, #0x20
    472c:	ldr	w0, [x1, x0]
    4730:	add	w2, w0, #0x1
    4734:	sxtw	x0, w3
    4738:	lsl	x0, x0, #2
    473c:	add	x1, sp, #0x20
    4740:	str	w2, [x1, x0]
    4744:	ldr	w0, [sp, #1532]
    4748:	add	w0, w0, #0x1
    474c:	str	w0, [sp, #1532]
    4750:	ldr	w0, [sp, #1528]
    4754:	ldr	w1, [sp, #1532]
    4758:	cmp	w1, w0
    475c:	b.cc	470c <cap_to_text@@Base+0x74>  // b.lo, b.ul, b.last
    4760:	mov	w0, #0x7                   	// #7
    4764:	str	w0, [sp, #1536]
    4768:	ldr	w0, [sp, #1536]
    476c:	str	w0, [sp, #1540]
    4770:	b	47a4 <cap_to_text@@Base+0x10c>
    4774:	ldrsw	x0, [sp, #1536]
    4778:	lsl	x0, x0, #2
    477c:	add	x1, sp, #0x20
    4780:	ldr	w1, [x1, x0]
    4784:	ldrsw	x0, [sp, #1540]
    4788:	lsl	x0, x0, #2
    478c:	add	x2, sp, #0x20
    4790:	ldr	w0, [x2, x0]
    4794:	cmp	w1, w0
    4798:	b.lt	47a4 <cap_to_text@@Base+0x10c>  // b.tstop
    479c:	ldr	w0, [sp, #1536]
    47a0:	str	w0, [sp, #1540]
    47a4:	ldr	w0, [sp, #1536]
    47a8:	sub	w1, w0, #0x1
    47ac:	str	w1, [sp, #1536]
    47b0:	cmp	w0, #0x0
    47b4:	b.ne	4774 <cap_to_text@@Base+0xdc>  // b.any
    47b8:	ldr	w0, [sp, #1540]
    47bc:	and	w0, w0, #0x1
    47c0:	cmp	w0, #0x0
    47c4:	b.eq	47d4 <cap_to_text@@Base+0x13c>  // b.none
    47c8:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    47cc:	add	x0, x0, #0xa80
    47d0:	b	47dc <cap_to_text@@Base+0x144>
    47d4:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    47d8:	add	x0, x0, #0xa88
    47dc:	ldr	w1, [sp, #1540]
    47e0:	and	w1, w1, #0x4
    47e4:	cmp	w1, #0x0
    47e8:	b.eq	47f8 <cap_to_text@@Base+0x160>  // b.none
    47ec:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    47f0:	add	x1, x1, #0xa90
    47f4:	b	4800 <cap_to_text@@Base+0x168>
    47f8:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    47fc:	add	x1, x1, #0xa88
    4800:	ldr	w2, [sp, #1540]
    4804:	and	w2, w2, #0x2
    4808:	cmp	w2, #0x0
    480c:	b.eq	481c <cap_to_text@@Base+0x184>  // b.none
    4810:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    4814:	add	x2, x2, #0xa98
    4818:	b	4824 <cap_to_text@@Base+0x18c>
    481c:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    4820:	add	x2, x2, #0xa88
    4824:	add	x5, sp, #0x40
    4828:	mov	x4, x2
    482c:	mov	x3, x1
    4830:	mov	x2, x0
    4834:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4838:	add	x1, x0, #0xaa0
    483c:	mov	x0, x5
    4840:	bl	1b20 <sprintf@plt>
    4844:	sxtw	x0, w0
    4848:	add	x1, sp, #0x40
    484c:	add	x0, x1, x0
    4850:	str	x0, [sp, #1544]
    4854:	mov	w0, #0x8                   	// #8
    4858:	str	w0, [sp, #1536]
    485c:	b	4b08 <cap_to_text@@Base+0x470>
    4860:	ldr	w1, [sp, #1536]
    4864:	ldr	w0, [sp, #1540]
    4868:	cmp	w1, w0
    486c:	b.eq	4b08 <cap_to_text@@Base+0x470>  // b.none
    4870:	ldrsw	x0, [sp, #1536]
    4874:	lsl	x0, x0, #2
    4878:	add	x1, sp, #0x20
    487c:	ldr	w0, [x1, x0]
    4880:	cmp	w0, #0x0
    4884:	b.ne	488c <cap_to_text@@Base+0x1f4>  // b.any
    4888:	b	4b08 <cap_to_text@@Base+0x470>
    488c:	ldr	x0, [sp, #1544]
    4890:	add	x1, x0, #0x1
    4894:	str	x1, [sp, #1544]
    4898:	mov	w1, #0x20                  	// #32
    489c:	strb	w1, [x0]
    48a0:	str	wzr, [sp, #1532]
    48a4:	b	4950 <cap_to_text@@Base+0x2b8>
    48a8:	ldr	w0, [sp, #1532]
    48ac:	mov	w1, w0
    48b0:	ldr	x0, [sp, #24]
    48b4:	bl	458c <cap_to_name@@Base+0x74>
    48b8:	mov	w1, w0
    48bc:	ldr	w0, [sp, #1536]
    48c0:	cmp	w0, w1
    48c4:	b.ne	4944 <cap_to_text@@Base+0x2ac>  // b.any
    48c8:	ldr	w0, [sp, #1532]
    48cc:	bl	1d70 <cap_to_name@plt>
    48d0:	str	x0, [sp, #1512]
    48d4:	ldr	x0, [sp, #1512]
    48d8:	bl	1aa0 <strlen@plt>
    48dc:	mov	x2, x0
    48e0:	add	x0, sp, #0x40
    48e4:	ldr	x1, [sp, #1544]
    48e8:	sub	x0, x1, x0
    48ec:	add	x0, x2, x0
    48f0:	cmp	x0, #0x540
    48f4:	b.ls	4918 <cap_to_text@@Base+0x280>  // b.plast
    48f8:	ldr	x0, [sp, #1512]
    48fc:	bl	1ce0 <cap_free@plt>
    4900:	bl	1d30 <__errno_location@plt>
    4904:	mov	x1, x0
    4908:	mov	w0, #0x22                  	// #34
    490c:	str	w0, [x1]
    4910:	mov	x0, #0x0                   	// #0
    4914:	b	4d90 <cap_to_text@@Base+0x6f8>
    4918:	ldr	x2, [sp, #1512]
    491c:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4920:	add	x1, x0, #0xaa8
    4924:	ldr	x0, [sp, #1544]
    4928:	bl	1b20 <sprintf@plt>
    492c:	sxtw	x0, w0
    4930:	ldr	x1, [sp, #1544]
    4934:	add	x0, x1, x0
    4938:	str	x0, [sp, #1544]
    493c:	ldr	x0, [sp, #1512]
    4940:	bl	1ce0 <cap_free@plt>
    4944:	ldr	w0, [sp, #1532]
    4948:	add	w0, w0, #0x1
    494c:	str	w0, [sp, #1532]
    4950:	ldr	w0, [sp, #1528]
    4954:	ldr	w1, [sp, #1532]
    4958:	cmp	w1, w0
    495c:	b.cc	48a8 <cap_to_text@@Base+0x210>  // b.lo, b.ul, b.last
    4960:	ldr	x0, [sp, #1544]
    4964:	sub	x0, x0, #0x1
    4968:	str	x0, [sp, #1544]
    496c:	ldr	w0, [sp, #1540]
    4970:	mvn	w1, w0
    4974:	ldr	w0, [sp, #1536]
    4978:	and	w0, w1, w0
    497c:	str	w0, [sp, #1532]
    4980:	ldr	w0, [sp, #1532]
    4984:	cmp	w0, #0x0
    4988:	b.eq	4a24 <cap_to_text@@Base+0x38c>  // b.none
    498c:	ldr	w0, [sp, #1532]
    4990:	and	w0, w0, #0x1
    4994:	cmp	w0, #0x0
    4998:	b.eq	49a8 <cap_to_text@@Base+0x310>  // b.none
    499c:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    49a0:	add	x0, x0, #0xa80
    49a4:	b	49b0 <cap_to_text@@Base+0x318>
    49a8:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    49ac:	add	x0, x0, #0xa88
    49b0:	ldr	w1, [sp, #1532]
    49b4:	and	w1, w1, #0x4
    49b8:	cmp	w1, #0x0
    49bc:	b.eq	49cc <cap_to_text@@Base+0x334>  // b.none
    49c0:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    49c4:	add	x1, x1, #0xa90
    49c8:	b	49d4 <cap_to_text@@Base+0x33c>
    49cc:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    49d0:	add	x1, x1, #0xa88
    49d4:	ldr	w2, [sp, #1532]
    49d8:	and	w2, w2, #0x2
    49dc:	cmp	w2, #0x0
    49e0:	b.eq	49f0 <cap_to_text@@Base+0x358>  // b.none
    49e4:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    49e8:	add	x2, x2, #0xa98
    49ec:	b	49f8 <cap_to_text@@Base+0x360>
    49f0:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    49f4:	add	x2, x2, #0xa88
    49f8:	mov	x4, x2
    49fc:	mov	x3, x1
    4a00:	mov	x2, x0
    4a04:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4a08:	add	x1, x0, #0xab0
    4a0c:	ldr	x0, [sp, #1544]
    4a10:	bl	1b20 <sprintf@plt>
    4a14:	sxtw	x0, w0
    4a18:	ldr	x1, [sp, #1544]
    4a1c:	add	x0, x1, x0
    4a20:	str	x0, [sp, #1544]
    4a24:	ldr	w0, [sp, #1536]
    4a28:	mvn	w1, w0
    4a2c:	ldr	w0, [sp, #1540]
    4a30:	and	w0, w1, w0
    4a34:	str	w0, [sp, #1532]
    4a38:	ldr	w0, [sp, #1532]
    4a3c:	cmp	w0, #0x0
    4a40:	b.eq	4adc <cap_to_text@@Base+0x444>  // b.none
    4a44:	ldr	w0, [sp, #1532]
    4a48:	and	w0, w0, #0x1
    4a4c:	cmp	w0, #0x0
    4a50:	b.eq	4a60 <cap_to_text@@Base+0x3c8>  // b.none
    4a54:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4a58:	add	x0, x0, #0xa80
    4a5c:	b	4a68 <cap_to_text@@Base+0x3d0>
    4a60:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4a64:	add	x0, x0, #0xa88
    4a68:	ldr	w1, [sp, #1532]
    4a6c:	and	w1, w1, #0x4
    4a70:	cmp	w1, #0x0
    4a74:	b.eq	4a84 <cap_to_text@@Base+0x3ec>  // b.none
    4a78:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    4a7c:	add	x1, x1, #0xa90
    4a80:	b	4a8c <cap_to_text@@Base+0x3f4>
    4a84:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    4a88:	add	x1, x1, #0xa88
    4a8c:	ldr	w2, [sp, #1532]
    4a90:	and	w2, w2, #0x2
    4a94:	cmp	w2, #0x0
    4a98:	b.eq	4aa8 <cap_to_text@@Base+0x410>  // b.none
    4a9c:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    4aa0:	add	x2, x2, #0xa98
    4aa4:	b	4ab0 <cap_to_text@@Base+0x418>
    4aa8:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    4aac:	add	x2, x2, #0xa88
    4ab0:	mov	x4, x2
    4ab4:	mov	x3, x1
    4ab8:	mov	x2, x0
    4abc:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4ac0:	add	x1, x0, #0xab8
    4ac4:	ldr	x0, [sp, #1544]
    4ac8:	bl	1b20 <sprintf@plt>
    4acc:	sxtw	x0, w0
    4ad0:	ldr	x1, [sp, #1544]
    4ad4:	add	x0, x1, x0
    4ad8:	str	x0, [sp, #1544]
    4adc:	add	x0, sp, #0x40
    4ae0:	ldr	x1, [sp, #1544]
    4ae4:	sub	x0, x1, x0
    4ae8:	cmp	x0, #0x540
    4aec:	b.le	4b08 <cap_to_text@@Base+0x470>
    4af0:	bl	1d30 <__errno_location@plt>
    4af4:	mov	x1, x0
    4af8:	mov	w0, #0x22                  	// #34
    4afc:	str	w0, [x1]
    4b00:	mov	x0, #0x0                   	// #0
    4b04:	b	4d90 <cap_to_text@@Base+0x6f8>
    4b08:	ldr	w0, [sp, #1536]
    4b0c:	sub	w1, w0, #0x1
    4b10:	str	w1, [sp, #1536]
    4b14:	cmp	w0, #0x0
    4b18:	b.ne	4860 <cap_to_text@@Base+0x1c8>  // b.any
    4b1c:	add	x0, sp, #0x20
    4b20:	mov	x2, #0x20                  	// #32
    4b24:	mov	w1, #0x0                   	// #0
    4b28:	bl	1ba0 <memset@plt>
    4b2c:	ldr	w0, [sp, #1528]
    4b30:	str	w0, [sp, #1532]
    4b34:	b	4b7c <cap_to_text@@Base+0x4e4>
    4b38:	ldr	w0, [sp, #1532]
    4b3c:	mov	w1, w0
    4b40:	ldr	x0, [sp, #24]
    4b44:	bl	458c <cap_to_name@@Base+0x74>
    4b48:	mov	w3, w0
    4b4c:	sxtw	x0, w3
    4b50:	lsl	x0, x0, #2
    4b54:	add	x1, sp, #0x20
    4b58:	ldr	w0, [x1, x0]
    4b5c:	add	w2, w0, #0x1
    4b60:	sxtw	x0, w3
    4b64:	lsl	x0, x0, #2
    4b68:	add	x1, sp, #0x20
    4b6c:	str	w2, [x1, x0]
    4b70:	ldr	w0, [sp, #1532]
    4b74:	add	w0, w0, #0x1
    4b78:	str	w0, [sp, #1532]
    4b7c:	ldr	w0, [sp, #1532]
    4b80:	cmp	w0, #0x3f
    4b84:	b.ls	4b38 <cap_to_text@@Base+0x4a0>  // b.plast
    4b88:	mov	w0, #0x8                   	// #8
    4b8c:	str	w0, [sp, #1536]
    4b90:	b	4d54 <cap_to_text@@Base+0x6bc>
    4b94:	ldrsw	x0, [sp, #1536]
    4b98:	lsl	x0, x0, #2
    4b9c:	add	x1, sp, #0x20
    4ba0:	ldr	w0, [x1, x0]
    4ba4:	cmp	w0, #0x0
    4ba8:	b.ne	4bb0 <cap_to_text@@Base+0x518>  // b.any
    4bac:	b	4d54 <cap_to_text@@Base+0x6bc>
    4bb0:	ldr	x0, [sp, #1544]
    4bb4:	add	x1, x0, #0x1
    4bb8:	str	x1, [sp, #1544]
    4bbc:	mov	w1, #0x20                  	// #32
    4bc0:	strb	w1, [x0]
    4bc4:	ldr	w0, [sp, #1528]
    4bc8:	str	w0, [sp, #1532]
    4bcc:	b	4c78 <cap_to_text@@Base+0x5e0>
    4bd0:	ldr	w0, [sp, #1532]
    4bd4:	mov	w1, w0
    4bd8:	ldr	x0, [sp, #24]
    4bdc:	bl	458c <cap_to_name@@Base+0x74>
    4be0:	mov	w1, w0
    4be4:	ldr	w0, [sp, #1536]
    4be8:	cmp	w0, w1
    4bec:	b.ne	4c6c <cap_to_text@@Base+0x5d4>  // b.any
    4bf0:	ldr	w0, [sp, #1532]
    4bf4:	bl	1d70 <cap_to_name@plt>
    4bf8:	str	x0, [sp, #1520]
    4bfc:	ldr	x0, [sp, #1520]
    4c00:	bl	1aa0 <strlen@plt>
    4c04:	mov	x2, x0
    4c08:	add	x0, sp, #0x40
    4c0c:	ldr	x1, [sp, #1544]
    4c10:	sub	x0, x1, x0
    4c14:	add	x0, x2, x0
    4c18:	cmp	x0, #0x540
    4c1c:	b.ls	4c40 <cap_to_text@@Base+0x5a8>  // b.plast
    4c20:	ldr	x0, [sp, #1520]
    4c24:	bl	1ce0 <cap_free@plt>
    4c28:	bl	1d30 <__errno_location@plt>
    4c2c:	mov	x1, x0
    4c30:	mov	w0, #0x22                  	// #34
    4c34:	str	w0, [x1]
    4c38:	mov	x0, #0x0                   	// #0
    4c3c:	b	4d90 <cap_to_text@@Base+0x6f8>
    4c40:	ldr	x2, [sp, #1520]
    4c44:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4c48:	add	x1, x0, #0xaa8
    4c4c:	ldr	x0, [sp, #1544]
    4c50:	bl	1b20 <sprintf@plt>
    4c54:	sxtw	x0, w0
    4c58:	ldr	x1, [sp, #1544]
    4c5c:	add	x0, x1, x0
    4c60:	str	x0, [sp, #1544]
    4c64:	ldr	x0, [sp, #1520]
    4c68:	bl	1ce0 <cap_free@plt>
    4c6c:	ldr	w0, [sp, #1532]
    4c70:	add	w0, w0, #0x1
    4c74:	str	w0, [sp, #1532]
    4c78:	ldr	w0, [sp, #1532]
    4c7c:	cmp	w0, #0x3f
    4c80:	b.ls	4bd0 <cap_to_text@@Base+0x538>  // b.plast
    4c84:	ldr	x0, [sp, #1544]
    4c88:	sub	x0, x0, #0x1
    4c8c:	str	x0, [sp, #1544]
    4c90:	ldr	w0, [sp, #1536]
    4c94:	and	w0, w0, #0x1
    4c98:	cmp	w0, #0x0
    4c9c:	b.eq	4cac <cap_to_text@@Base+0x614>  // b.none
    4ca0:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4ca4:	add	x0, x0, #0xa80
    4ca8:	b	4cb4 <cap_to_text@@Base+0x61c>
    4cac:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4cb0:	add	x0, x0, #0xa88
    4cb4:	ldr	w1, [sp, #1536]
    4cb8:	and	w1, w1, #0x4
    4cbc:	cmp	w1, #0x0
    4cc0:	b.eq	4cd0 <cap_to_text@@Base+0x638>  // b.none
    4cc4:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    4cc8:	add	x1, x1, #0xa90
    4ccc:	b	4cd8 <cap_to_text@@Base+0x640>
    4cd0:	adrp	x1, 5000 <cap_mode_name@@Base+0x264>
    4cd4:	add	x1, x1, #0xa88
    4cd8:	ldr	w2, [sp, #1536]
    4cdc:	and	w2, w2, #0x2
    4ce0:	cmp	w2, #0x0
    4ce4:	b.eq	4cf4 <cap_to_text@@Base+0x65c>  // b.none
    4ce8:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    4cec:	add	x2, x2, #0xa98
    4cf0:	b	4cfc <cap_to_text@@Base+0x664>
    4cf4:	adrp	x2, 5000 <cap_mode_name@@Base+0x264>
    4cf8:	add	x2, x2, #0xa88
    4cfc:	mov	x4, x2
    4d00:	mov	x3, x1
    4d04:	mov	x2, x0
    4d08:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4d0c:	add	x1, x0, #0xab0
    4d10:	ldr	x0, [sp, #1544]
    4d14:	bl	1b20 <sprintf@plt>
    4d18:	sxtw	x0, w0
    4d1c:	ldr	x1, [sp, #1544]
    4d20:	add	x0, x1, x0
    4d24:	str	x0, [sp, #1544]
    4d28:	add	x0, sp, #0x40
    4d2c:	ldr	x1, [sp, #1544]
    4d30:	sub	x0, x1, x0
    4d34:	cmp	x0, #0x540
    4d38:	b.le	4d54 <cap_to_text@@Base+0x6bc>
    4d3c:	bl	1d30 <__errno_location@plt>
    4d40:	mov	x1, x0
    4d44:	mov	w0, #0x22                  	// #34
    4d48:	str	w0, [x1]
    4d4c:	mov	x0, #0x0                   	// #0
    4d50:	b	4d90 <cap_to_text@@Base+0x6f8>
    4d54:	ldr	w0, [sp, #1536]
    4d58:	sub	w1, w0, #0x1
    4d5c:	str	w1, [sp, #1536]
    4d60:	cmp	w0, #0x1
    4d64:	b.gt	4b94 <cap_to_text@@Base+0x4fc>
    4d68:	ldr	x0, [sp, #16]
    4d6c:	cmp	x0, #0x0
    4d70:	b.eq	4d88 <cap_to_text@@Base+0x6f0>  // b.none
    4d74:	add	x0, sp, #0x40
    4d78:	ldr	x1, [sp, #1544]
    4d7c:	sub	x1, x1, x0
    4d80:	ldr	x0, [sp, #16]
    4d84:	str	x1, [x0]
    4d88:	add	x0, sp, #0x40
    4d8c:	bl	1af0 <_libcap_strdup@plt>
    4d90:	ldp	x29, x30, [sp]
    4d94:	add	sp, sp, #0x610
    4d98:	ret

0000000000004d9c <cap_mode_name@@Base>:
    4d9c:	sub	sp, sp, #0x10
    4da0:	str	w0, [sp, #12]
    4da4:	ldr	w0, [sp, #12]
    4da8:	cmp	w0, #0x3
    4dac:	b.eq	4e04 <cap_mode_name@@Base+0x68>  // b.none
    4db0:	ldr	w0, [sp, #12]
    4db4:	cmp	w0, #0x3
    4db8:	b.hi	4e1c <cap_mode_name@@Base+0x80>  // b.pmore
    4dbc:	ldr	w0, [sp, #12]
    4dc0:	cmp	w0, #0x2
    4dc4:	b.eq	4df8 <cap_mode_name@@Base+0x5c>  // b.none
    4dc8:	ldr	w0, [sp, #12]
    4dcc:	cmp	w0, #0x2
    4dd0:	b.hi	4e1c <cap_mode_name@@Base+0x80>  // b.pmore
    4dd4:	ldr	w0, [sp, #12]
    4dd8:	cmp	w0, #0x0
    4ddc:	b.eq	4e10 <cap_mode_name@@Base+0x74>  // b.none
    4de0:	ldr	w0, [sp, #12]
    4de4:	cmp	w0, #0x1
    4de8:	b.ne	4e1c <cap_mode_name@@Base+0x80>  // b.any
    4dec:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4df0:	add	x0, x0, #0xac0
    4df4:	b	4e24 <cap_mode_name@@Base+0x88>
    4df8:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4dfc:	add	x0, x0, #0xac8
    4e00:	b	4e24 <cap_mode_name@@Base+0x88>
    4e04:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4e08:	add	x0, x0, #0xad8
    4e0c:	b	4e24 <cap_mode_name@@Base+0x88>
    4e10:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4e14:	add	x0, x0, #0xae0
    4e18:	b	4e24 <cap_mode_name@@Base+0x88>
    4e1c:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    4e20:	add	x0, x0, #0xaf0
    4e24:	add	sp, sp, #0x10
    4e28:	ret
    4e2c:	stp	x29, x30, [sp, #-64]!
    4e30:	mov	x29, sp
    4e34:	str	x0, [sp, #40]
    4e38:	str	x1, [sp, #32]
    4e3c:	str	w2, [sp, #28]
    4e40:	ldr	x0, [sp, #40]
    4e44:	ldr	w0, [x0]
    4e48:	str	w0, [sp, #52]
    4e4c:	ldr	w0, [sp, #52]
    4e50:	and	w0, w0, #0xff000000
    4e54:	mov	w1, #0x3000000             	// #50331648
    4e58:	cmp	w0, w1
    4e5c:	b.eq	4eb8 <cap_mode_name@@Base+0x11c>  // b.none
    4e60:	mov	w1, #0x3000000             	// #50331648
    4e64:	cmp	w0, w1
    4e68:	b.hi	4ee0 <cap_mode_name@@Base+0x144>  // b.pmore
    4e6c:	mov	w1, #0x1000000             	// #16777216
    4e70:	cmp	w0, w1
    4e74:	b.eq	4e88 <cap_mode_name@@Base+0xec>  // b.none
    4e78:	mov	w1, #0x2000000             	// #33554432
    4e7c:	cmp	w0, w1
    4e80:	b.eq	4ea0 <cap_mode_name@@Base+0x104>  // b.none
    4e84:	b	4ee0 <cap_mode_name@@Base+0x144>
    4e88:	mov	w0, #0x1                   	// #1
    4e8c:	str	w0, [sp, #60]
    4e90:	ldr	w0, [sp, #28]
    4e94:	sub	w0, w0, #0xc
    4e98:	str	w0, [sp, #28]
    4e9c:	b	4ef4 <cap_mode_name@@Base+0x158>
    4ea0:	mov	w0, #0x2                   	// #2
    4ea4:	str	w0, [sp, #60]
    4ea8:	ldr	w0, [sp, #28]
    4eac:	sub	w0, w0, #0x14
    4eb0:	str	w0, [sp, #28]
    4eb4:	b	4ef4 <cap_mode_name@@Base+0x158>
    4eb8:	mov	w0, #0x2                   	// #2
    4ebc:	str	w0, [sp, #60]
    4ec0:	ldr	w0, [sp, #28]
    4ec4:	sub	w0, w0, #0x18
    4ec8:	str	w0, [sp, #28]
    4ecc:	ldr	x0, [sp, #40]
    4ed0:	ldr	w1, [x0, #20]
    4ed4:	ldr	x0, [sp, #32]
    4ed8:	str	w1, [x0, #32]
    4edc:	b	4ef4 <cap_mode_name@@Base+0x158>
    4ee0:	ldr	x0, [sp, #32]
    4ee4:	bl	1ce0 <cap_free@plt>
    4ee8:	str	xzr, [sp, #32]
    4eec:	ldr	x0, [sp, #32]
    4ef0:	b	50d4 <cap_mode_name@@Base+0x338>
    4ef4:	ldr	w0, [sp, #28]
    4ef8:	cmp	w0, #0x0
    4efc:	b.eq	4f14 <cap_mode_name@@Base+0x178>  // b.none
    4f00:	ldr	x0, [sp, #32]
    4f04:	bl	1ce0 <cap_free@plt>
    4f08:	str	xzr, [sp, #32]
    4f0c:	ldr	x0, [sp, #32]
    4f10:	b	50d4 <cap_mode_name@@Base+0x338>
    4f14:	str	wzr, [sp, #56]
    4f18:	b	5004 <cap_mode_name@@Base+0x268>
    4f1c:	ldr	x1, [sp, #40]
    4f20:	ldr	w0, [sp, #56]
    4f24:	lsl	x0, x0, #3
    4f28:	add	x0, x1, x0
    4f2c:	ldr	w2, [x0, #8]
    4f30:	ldr	x3, [sp, #32]
    4f34:	ldr	w1, [sp, #56]
    4f38:	mov	x0, x1
    4f3c:	lsl	x0, x0, #1
    4f40:	add	x0, x0, x1
    4f44:	lsl	x0, x0, #2
    4f48:	add	x0, x3, x0
    4f4c:	str	w2, [x0, #16]
    4f50:	ldr	x1, [sp, #40]
    4f54:	ldr	w0, [sp, #56]
    4f58:	lsl	x0, x0, #3
    4f5c:	add	x0, x1, x0
    4f60:	ldr	w2, [x0, #4]
    4f64:	ldr	x3, [sp, #32]
    4f68:	ldr	w1, [sp, #56]
    4f6c:	mov	x0, x1
    4f70:	lsl	x0, x0, #1
    4f74:	add	x0, x0, x1
    4f78:	lsl	x0, x0, #2
    4f7c:	add	x0, x3, x0
    4f80:	str	w2, [x0, #12]
    4f84:	ldr	w0, [sp, #52]
    4f88:	and	w0, w0, #0x1
    4f8c:	cmp	w0, #0x0
    4f90:	b.eq	4ff8 <cap_mode_name@@Base+0x25c>  // b.none
    4f94:	ldr	x2, [sp, #32]
    4f98:	ldr	w1, [sp, #56]
    4f9c:	mov	x0, x1
    4fa0:	lsl	x0, x0, #1
    4fa4:	add	x0, x0, x1
    4fa8:	lsl	x0, x0, #2
    4fac:	add	x0, x2, x0
    4fb0:	ldr	w2, [x0, #16]
    4fb4:	ldr	x3, [sp, #32]
    4fb8:	ldr	w1, [sp, #56]
    4fbc:	mov	x0, x1
    4fc0:	lsl	x0, x0, #1
    4fc4:	add	x0, x0, x1
    4fc8:	lsl	x0, x0, #2
    4fcc:	add	x0, x3, x0
    4fd0:	ldr	w0, [x0, #12]
    4fd4:	orr	w2, w2, w0
    4fd8:	ldr	x3, [sp, #32]
    4fdc:	ldr	w1, [sp, #56]
    4fe0:	mov	x0, x1
    4fe4:	lsl	x0, x0, #1
    4fe8:	add	x0, x0, x1
    4fec:	lsl	x0, x0, #2
    4ff0:	add	x0, x3, x0
    4ff4:	str	w2, [x0, #8]
    4ff8:	ldr	w0, [sp, #56]
    4ffc:	add	w0, w0, #0x1
    5000:	str	w0, [sp, #56]
    5004:	ldr	w1, [sp, #56]
    5008:	ldr	w0, [sp, #60]
    500c:	cmp	w1, w0
    5010:	b.cc	4f1c <cap_mode_name@@Base+0x180>  // b.lo, b.ul, b.last
    5014:	b	50c4 <cap_mode_name@@Base+0x328>
    5018:	ldr	x2, [sp, #32]
    501c:	ldr	w1, [sp, #56]
    5020:	mov	x0, x1
    5024:	lsl	x0, x0, #1
    5028:	add	x0, x0, x1
    502c:	lsl	x0, x0, #2
    5030:	add	x0, x2, x0
    5034:	str	wzr, [x0, #8]
    5038:	ldr	x2, [sp, #32]
    503c:	ldr	w1, [sp, #56]
    5040:	mov	x0, x1
    5044:	lsl	x0, x0, #1
    5048:	add	x0, x0, x1
    504c:	lsl	x0, x0, #2
    5050:	add	x0, x2, x0
    5054:	ldr	w2, [x0, #8]
    5058:	ldr	x3, [sp, #32]
    505c:	ldr	w1, [sp, #56]
    5060:	mov	x0, x1
    5064:	lsl	x0, x0, #1
    5068:	add	x0, x0, x1
    506c:	lsl	x0, x0, #2
    5070:	add	x0, x3, x0
    5074:	str	w2, [x0, #12]
    5078:	ldr	x2, [sp, #32]
    507c:	ldr	w1, [sp, #56]
    5080:	mov	x0, x1
    5084:	lsl	x0, x0, #1
    5088:	add	x0, x0, x1
    508c:	lsl	x0, x0, #2
    5090:	add	x0, x2, x0
    5094:	ldr	w2, [x0, #12]
    5098:	ldr	x3, [sp, #32]
    509c:	ldr	w1, [sp, #56]
    50a0:	mov	x0, x1
    50a4:	lsl	x0, x0, #1
    50a8:	add	x0, x0, x1
    50ac:	lsl	x0, x0, #2
    50b0:	add	x0, x3, x0
    50b4:	str	w2, [x0, #16]
    50b8:	ldr	w0, [sp, #56]
    50bc:	add	w0, w0, #0x1
    50c0:	str	w0, [sp, #56]
    50c4:	ldr	w0, [sp, #56]
    50c8:	cmp	w0, #0x1
    50cc:	b.ls	5018 <cap_mode_name@@Base+0x27c>  // b.plast
    50d0:	ldr	x0, [sp, #32]
    50d4:	ldp	x29, x30, [sp], #64
    50d8:	ret
    50dc:	stp	x29, x30, [sp, #-64]!
    50e0:	mov	x29, sp
    50e4:	str	x0, [sp, #40]
    50e8:	str	x1, [sp, #32]
    50ec:	str	x2, [sp, #24]
    50f0:	ldr	x0, [sp, #32]
    50f4:	cmp	x0, #0x0
    50f8:	b.eq	5118 <cap_mode_name@@Base+0x37c>  // b.none
    50fc:	ldr	x0, [sp, #32]
    5100:	sub	x0, x0, #0x4
    5104:	ldr	w1, [x0]
    5108:	mov	w0, #0x90d0                	// #37072
    510c:	movk	w0, #0xca, lsl #16
    5110:	cmp	w1, w0
    5114:	b.eq	5130 <cap_mode_name@@Base+0x394>  // b.none
    5118:	bl	1d30 <__errno_location@plt>
    511c:	mov	x1, x0
    5120:	mov	w0, #0x16                  	// #22
    5124:	str	w0, [x1]
    5128:	mov	w0, #0xffffffff            	// #-1
    512c:	b	5494 <cap_mode_name@@Base+0x6f8>
    5130:	ldr	x0, [sp, #32]
    5134:	ldr	w0, [x0]
    5138:	mov	w1, #0x522                 	// #1314
    513c:	movk	w1, #0x2008, lsl #16
    5140:	cmp	w0, w1
    5144:	b.eq	519c <cap_mode_name@@Base+0x400>  // b.none
    5148:	mov	w1, #0x522                 	// #1314
    514c:	movk	w1, #0x2008, lsl #16
    5150:	cmp	w0, w1
    5154:	b.hi	51bc <cap_mode_name@@Base+0x420>  // b.pmore
    5158:	mov	w1, #0x330                 	// #816
    515c:	movk	w1, #0x1998, lsl #16
    5160:	cmp	w0, w1
    5164:	b.eq	517c <cap_mode_name@@Base+0x3e0>  // b.none
    5168:	mov	w1, #0x1026                	// #4134
    516c:	movk	w1, #0x2007, lsl #16
    5170:	cmp	w0, w1
    5174:	b.eq	519c <cap_mode_name@@Base+0x400>  // b.none
    5178:	b	51bc <cap_mode_name@@Base+0x420>
    517c:	mov	w0, #0x1000000             	// #16777216
    5180:	str	w0, [sp, #56]
    5184:	mov	w0, #0x1                   	// #1
    5188:	str	w0, [sp, #52]
    518c:	ldr	x0, [sp, #24]
    5190:	mov	w1, #0xc                   	// #12
    5194:	str	w1, [x0]
    5198:	b	51d4 <cap_mode_name@@Base+0x438>
    519c:	mov	w0, #0x2000000             	// #33554432
    51a0:	str	w0, [sp, #56]
    51a4:	mov	w0, #0x2                   	// #2
    51a8:	str	w0, [sp, #52]
    51ac:	ldr	x0, [sp, #24]
    51b0:	mov	w1, #0x14                  	// #20
    51b4:	str	w1, [x0]
    51b8:	b	51d4 <cap_mode_name@@Base+0x438>
    51bc:	bl	1d30 <__errno_location@plt>
    51c0:	mov	x1, x0
    51c4:	mov	w0, #0x16                  	// #22
    51c8:	str	w0, [x1]
    51cc:	mov	w0, #0xffffffff            	// #-1
    51d0:	b	5494 <cap_mode_name@@Base+0x6f8>
    51d4:	ldr	x0, [sp, #32]
    51d8:	ldr	w0, [x0, #32]
    51dc:	cmp	w0, #0x0
    51e0:	b.eq	5240 <cap_mode_name@@Base+0x4a4>  // b.none
    51e4:	ldr	x0, [sp, #32]
    51e8:	ldr	w1, [x0]
    51ec:	mov	w0, #0x521                 	// #1313
    51f0:	movk	w0, #0x2008, lsl #16
    51f4:	cmp	w1, w0
    51f8:	b.hi	5214 <cap_mode_name@@Base+0x478>  // b.pmore
    51fc:	bl	1d30 <__errno_location@plt>
    5200:	mov	x1, x0
    5204:	mov	w0, #0x16                  	// #22
    5208:	str	w0, [x1]
    520c:	mov	w0, #0xffffffff            	// #-1
    5210:	b	5494 <cap_mode_name@@Base+0x6f8>
    5214:	mov	w0, #0x3000000             	// #50331648
    5218:	str	w0, [sp, #56]
    521c:	mov	w0, #0x2                   	// #2
    5220:	str	w0, [sp, #52]
    5224:	ldr	x0, [sp, #24]
    5228:	mov	w1, #0x18                  	// #24
    522c:	str	w1, [x0]
    5230:	ldr	x0, [sp, #32]
    5234:	ldr	w1, [x0, #32]
    5238:	ldr	x0, [sp, #40]
    523c:	str	w1, [x0, #20]
    5240:	str	wzr, [sp, #60]
    5244:	str	wzr, [sp, #48]
    5248:	b	5284 <cap_mode_name@@Base+0x4e8>
    524c:	ldr	x2, [sp, #32]
    5250:	ldr	w1, [sp, #48]
    5254:	mov	x0, x1
    5258:	lsl	x0, x0, #1
    525c:	add	x0, x0, x1
    5260:	lsl	x0, x0, #2
    5264:	add	x0, x2, x0
    5268:	ldr	w0, [x0, #8]
    526c:	ldr	w1, [sp, #60]
    5270:	orr	w0, w1, w0
    5274:	str	w0, [sp, #60]
    5278:	ldr	w0, [sp, #48]
    527c:	add	w0, w0, #0x1
    5280:	str	w0, [sp, #48]
    5284:	ldr	w1, [sp, #48]
    5288:	ldr	w0, [sp, #52]
    528c:	cmp	w1, w0
    5290:	b.cc	524c <cap_mode_name@@Base+0x4b0>  // b.lo, b.ul, b.last
    5294:	b	5334 <cap_mode_name@@Base+0x598>
    5298:	ldr	x2, [sp, #32]
    529c:	ldr	w1, [sp, #48]
    52a0:	mov	x0, x1
    52a4:	lsl	x0, x0, #1
    52a8:	add	x0, x0, x1
    52ac:	lsl	x0, x0, #2
    52b0:	add	x0, x2, x0
    52b4:	ldr	w0, [x0, #8]
    52b8:	cmp	w0, #0x0
    52bc:	b.ne	5310 <cap_mode_name@@Base+0x574>  // b.any
    52c0:	ldr	x2, [sp, #32]
    52c4:	ldr	w1, [sp, #48]
    52c8:	mov	x0, x1
    52cc:	lsl	x0, x0, #1
    52d0:	add	x0, x0, x1
    52d4:	lsl	x0, x0, #2
    52d8:	add	x0, x2, x0
    52dc:	ldr	w0, [x0, #16]
    52e0:	cmp	w0, #0x0
    52e4:	b.ne	5310 <cap_mode_name@@Base+0x574>  // b.any
    52e8:	ldr	x2, [sp, #32]
    52ec:	ldr	w1, [sp, #48]
    52f0:	mov	x0, x1
    52f4:	lsl	x0, x0, #1
    52f8:	add	x0, x0, x1
    52fc:	lsl	x0, x0, #2
    5300:	add	x0, x2, x0
    5304:	ldr	w0, [x0, #12]
    5308:	cmp	w0, #0x0
    530c:	b.eq	5328 <cap_mode_name@@Base+0x58c>  // b.none
    5310:	bl	1d30 <__errno_location@plt>
    5314:	mov	x1, x0
    5318:	mov	w0, #0x16                  	// #22
    531c:	str	w0, [x1]
    5320:	mov	w0, #0xffffffff            	// #-1
    5324:	b	5494 <cap_mode_name@@Base+0x6f8>
    5328:	ldr	w0, [sp, #48]
    532c:	add	w0, w0, #0x1
    5330:	str	w0, [sp, #48]
    5334:	ldr	w0, [sp, #48]
    5338:	cmp	w0, #0x1
    533c:	b.ls	5298 <cap_mode_name@@Base+0x4fc>  // b.plast
    5340:	str	wzr, [sp, #48]
    5344:	b	5454 <cap_mode_name@@Base+0x6b8>
    5348:	ldr	x2, [sp, #32]
    534c:	ldr	w1, [sp, #48]
    5350:	mov	x0, x1
    5354:	lsl	x0, x0, #1
    5358:	add	x0, x0, x1
    535c:	lsl	x0, x0, #2
    5360:	add	x0, x2, x0
    5364:	ldr	w1, [x0, #12]
    5368:	ldr	x2, [sp, #40]
    536c:	ldr	w0, [sp, #48]
    5370:	lsl	x0, x0, #3
    5374:	add	x0, x2, x0
    5378:	str	w1, [x0, #4]
    537c:	ldr	x2, [sp, #32]
    5380:	ldr	w1, [sp, #48]
    5384:	mov	x0, x1
    5388:	lsl	x0, x0, #1
    538c:	add	x0, x0, x1
    5390:	lsl	x0, x0, #2
    5394:	add	x0, x2, x0
    5398:	ldr	w1, [x0, #16]
    539c:	ldr	x2, [sp, #40]
    53a0:	ldr	w0, [sp, #48]
    53a4:	lsl	x0, x0, #3
    53a8:	add	x0, x2, x0
    53ac:	str	w1, [x0, #8]
    53b0:	ldr	w0, [sp, #60]
    53b4:	cmp	w0, #0x0
    53b8:	b.eq	5448 <cap_mode_name@@Base+0x6ac>  // b.none
    53bc:	ldr	x2, [sp, #32]
    53c0:	ldr	w1, [sp, #48]
    53c4:	mov	x0, x1
    53c8:	lsl	x0, x0, #1
    53cc:	add	x0, x0, x1
    53d0:	lsl	x0, x0, #2
    53d4:	add	x0, x2, x0
    53d8:	ldr	w0, [x0, #8]
    53dc:	mvn	w2, w0
    53e0:	ldr	x3, [sp, #32]
    53e4:	ldr	w1, [sp, #48]
    53e8:	mov	x0, x1
    53ec:	lsl	x0, x0, #1
    53f0:	add	x0, x0, x1
    53f4:	lsl	x0, x0, #2
    53f8:	add	x0, x3, x0
    53fc:	ldr	w3, [x0, #12]
    5400:	ldr	x4, [sp, #32]
    5404:	ldr	w1, [sp, #48]
    5408:	mov	x0, x1
    540c:	lsl	x0, x0, #1
    5410:	add	x0, x0, x1
    5414:	lsl	x0, x0, #2
    5418:	add	x0, x4, x0
    541c:	ldr	w0, [x0, #16]
    5420:	orr	w0, w3, w0
    5424:	and	w0, w2, w0
    5428:	cmp	w0, #0x0
    542c:	b.eq	5448 <cap_mode_name@@Base+0x6ac>  // b.none
    5430:	bl	1d30 <__errno_location@plt>
    5434:	mov	x1, x0
    5438:	mov	w0, #0x16                  	// #22
    543c:	str	w0, [x1]
    5440:	mov	w0, #0xffffffff            	// #-1
    5444:	b	5494 <cap_mode_name@@Base+0x6f8>
    5448:	ldr	w0, [sp, #48]
    544c:	add	w0, w0, #0x1
    5450:	str	w0, [sp, #48]
    5454:	ldr	w1, [sp, #48]
    5458:	ldr	w0, [sp, #52]
    545c:	cmp	w1, w0
    5460:	b.cc	5348 <cap_mode_name@@Base+0x5ac>  // b.lo, b.ul, b.last
    5464:	ldr	w0, [sp, #60]
    5468:	cmp	w0, #0x0
    546c:	b.ne	5480 <cap_mode_name@@Base+0x6e4>  // b.any
    5470:	ldr	x0, [sp, #40]
    5474:	ldr	w1, [sp, #56]
    5478:	str	w1, [x0]
    547c:	b	5490 <cap_mode_name@@Base+0x6f4>
    5480:	ldr	w0, [sp, #56]
    5484:	orr	w1, w0, #0x1
    5488:	ldr	x0, [sp, #40]
    548c:	str	w1, [x0]
    5490:	mov	w0, #0x0                   	// #0
    5494:	ldp	x29, x30, [sp], #64
    5498:	ret

000000000000549c <cap_get_fd@@Base>:
    549c:	stp	x29, x30, [sp, #-80]!
    54a0:	mov	x29, sp
    54a4:	str	w0, [sp, #28]
    54a8:	bl	1c00 <cap_init@plt>
    54ac:	str	x0, [sp, #72]
    54b0:	ldr	x0, [sp, #72]
    54b4:	cmp	x0, #0x0
    54b8:	b.eq	550c <cap_get_fd@@Base+0x70>  // b.none
    54bc:	add	x0, sp, #0x28
    54c0:	mov	x3, #0x18                  	// #24
    54c4:	mov	x2, x0
    54c8:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    54cc:	add	x1, x0, #0xaf8
    54d0:	ldr	w0, [sp, #28]
    54d4:	bl	1c90 <fgetxattr@plt>
    54d8:	str	w0, [sp, #68]
    54dc:	ldr	w0, [sp, #68]
    54e0:	cmp	w0, #0x3
    54e4:	b.gt	54f8 <cap_get_fd@@Base+0x5c>
    54e8:	ldr	x0, [sp, #72]
    54ec:	bl	1ce0 <cap_free@plt>
    54f0:	str	xzr, [sp, #72]
    54f4:	b	550c <cap_get_fd@@Base+0x70>
    54f8:	add	x0, sp, #0x28
    54fc:	ldr	w2, [sp, #68]
    5500:	ldr	x1, [sp, #72]
    5504:	bl	4e2c <cap_mode_name@@Base+0x90>
    5508:	str	x0, [sp, #72]
    550c:	ldr	x0, [sp, #72]
    5510:	ldp	x29, x30, [sp], #80
    5514:	ret

0000000000005518 <cap_get_file@@Base>:
    5518:	stp	x29, x30, [sp, #-80]!
    551c:	mov	x29, sp
    5520:	str	x0, [sp, #24]
    5524:	bl	1c00 <cap_init@plt>
    5528:	str	x0, [sp, #72]
    552c:	ldr	x0, [sp, #72]
    5530:	cmp	x0, #0x0
    5534:	b.eq	5588 <cap_get_file@@Base+0x70>  // b.none
    5538:	add	x0, sp, #0x28
    553c:	mov	x3, #0x18                  	// #24
    5540:	mov	x2, x0
    5544:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    5548:	add	x1, x0, #0xaf8
    554c:	ldr	x0, [sp, #24]
    5550:	bl	1c10 <getxattr@plt>
    5554:	str	w0, [sp, #68]
    5558:	ldr	w0, [sp, #68]
    555c:	cmp	w0, #0x3
    5560:	b.gt	5574 <cap_get_file@@Base+0x5c>
    5564:	ldr	x0, [sp, #72]
    5568:	bl	1ce0 <cap_free@plt>
    556c:	str	xzr, [sp, #72]
    5570:	b	5588 <cap_get_file@@Base+0x70>
    5574:	add	x0, sp, #0x28
    5578:	ldr	w2, [sp, #68]
    557c:	ldr	x1, [sp, #72]
    5580:	bl	4e2c <cap_mode_name@@Base+0x90>
    5584:	str	x0, [sp, #72]
    5588:	ldr	x0, [sp, #72]
    558c:	ldp	x29, x30, [sp], #80
    5590:	ret

0000000000005594 <cap_get_nsowner@@Base>:
    5594:	sub	sp, sp, #0x10
    5598:	str	x0, [sp, #8]
    559c:	ldr	x0, [sp, #8]
    55a0:	ldr	w0, [x0, #32]
    55a4:	add	sp, sp, #0x10
    55a8:	ret

00000000000055ac <cap_set_fd@@Base>:
    55ac:	stp	x29, x30, [sp, #-192]!
    55b0:	mov	x29, sp
    55b4:	str	w0, [sp, #28]
    55b8:	str	x1, [sp, #16]
    55bc:	add	x0, sp, #0x20
    55c0:	mov	x1, x0
    55c4:	ldr	w0, [sp, #28]
    55c8:	bl	5788 <cap_set_nsowner@@Base+0x24>
    55cc:	cmp	w0, #0x0
    55d0:	b.eq	55dc <cap_set_fd@@Base+0x30>  // b.none
    55d4:	mov	w0, #0xffffffff            	// #-1
    55d8:	b	5680 <cap_set_fd@@Base+0xd4>
    55dc:	ldr	w0, [sp, #48]
    55e0:	and	w0, w0, #0xf000
    55e4:	cmp	w0, #0xa, lsl #12
    55e8:	b.eq	55fc <cap_set_fd@@Base+0x50>  // b.none
    55ec:	ldr	w0, [sp, #48]
    55f0:	and	w0, w0, #0xf000
    55f4:	cmp	w0, #0x8, lsl #12
    55f8:	b.eq	5614 <cap_set_fd@@Base+0x68>  // b.none
    55fc:	bl	1d30 <__errno_location@plt>
    5600:	mov	x1, x0
    5604:	mov	w0, #0x16                  	// #22
    5608:	str	w0, [x1]
    560c:	mov	w0, #0xffffffff            	// #-1
    5610:	b	5680 <cap_set_fd@@Base+0xd4>
    5614:	ldr	x0, [sp, #16]
    5618:	cmp	x0, #0x0
    561c:	b.ne	5634 <cap_set_fd@@Base+0x88>  // b.any
    5620:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    5624:	add	x1, x0, #0xaf8
    5628:	ldr	w0, [sp, #28]
    562c:	bl	1be0 <fremovexattr@plt>
    5630:	b	5680 <cap_set_fd@@Base+0xd4>
    5634:	add	x1, sp, #0xa4
    5638:	add	x0, sp, #0xa8
    563c:	mov	x2, x1
    5640:	ldr	x1, [sp, #16]
    5644:	bl	50dc <cap_mode_name@@Base+0x340>
    5648:	cmp	w0, #0x0
    564c:	b.eq	5658 <cap_set_fd@@Base+0xac>  // b.none
    5650:	mov	w0, #0xffffffff            	// #-1
    5654:	b	5680 <cap_set_fd@@Base+0xd4>
    5658:	ldr	w0, [sp, #164]
    565c:	sxtw	x1, w0
    5660:	add	x0, sp, #0xa8
    5664:	mov	w4, #0x0                   	// #0
    5668:	mov	x3, x1
    566c:	mov	x2, x0
    5670:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    5674:	add	x1, x0, #0xaf8
    5678:	ldr	w0, [sp, #28]
    567c:	bl	1cc0 <fsetxattr@plt>
    5680:	ldp	x29, x30, [sp], #192
    5684:	ret

0000000000005688 <cap_set_file@@Base>:
    5688:	stp	x29, x30, [sp, #-192]!
    568c:	mov	x29, sp
    5690:	str	x0, [sp, #24]
    5694:	str	x1, [sp, #16]
    5698:	add	x0, sp, #0x20
    569c:	mov	x1, x0
    56a0:	ldr	x0, [sp, #24]
    56a4:	bl	5798 <cap_set_nsowner@@Base+0x34>
    56a8:	cmp	w0, #0x0
    56ac:	b.eq	56b8 <cap_set_file@@Base+0x30>  // b.none
    56b0:	mov	w0, #0xffffffff            	// #-1
    56b4:	b	575c <cap_set_file@@Base+0xd4>
    56b8:	ldr	w0, [sp, #48]
    56bc:	and	w0, w0, #0xf000
    56c0:	cmp	w0, #0xa, lsl #12
    56c4:	b.eq	56d8 <cap_set_file@@Base+0x50>  // b.none
    56c8:	ldr	w0, [sp, #48]
    56cc:	and	w0, w0, #0xf000
    56d0:	cmp	w0, #0x8, lsl #12
    56d4:	b.eq	56f0 <cap_set_file@@Base+0x68>  // b.none
    56d8:	bl	1d30 <__errno_location@plt>
    56dc:	mov	x1, x0
    56e0:	mov	w0, #0x16                  	// #22
    56e4:	str	w0, [x1]
    56e8:	mov	w0, #0xffffffff            	// #-1
    56ec:	b	575c <cap_set_file@@Base+0xd4>
    56f0:	ldr	x0, [sp, #16]
    56f4:	cmp	x0, #0x0
    56f8:	b.ne	5710 <cap_set_file@@Base+0x88>  // b.any
    56fc:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    5700:	add	x1, x0, #0xaf8
    5704:	ldr	x0, [sp, #24]
    5708:	bl	1a70 <removexattr@plt>
    570c:	b	575c <cap_set_file@@Base+0xd4>
    5710:	add	x1, sp, #0xa4
    5714:	add	x0, sp, #0xa8
    5718:	mov	x2, x1
    571c:	ldr	x1, [sp, #16]
    5720:	bl	50dc <cap_mode_name@@Base+0x340>
    5724:	cmp	w0, #0x0
    5728:	b.eq	5734 <cap_set_file@@Base+0xac>  // b.none
    572c:	mov	w0, #0xffffffff            	// #-1
    5730:	b	575c <cap_set_file@@Base+0xd4>
    5734:	ldr	w0, [sp, #164]
    5738:	sxtw	x1, w0
    573c:	add	x0, sp, #0xa8
    5740:	mov	w4, #0x0                   	// #0
    5744:	mov	x3, x1
    5748:	mov	x2, x0
    574c:	adrp	x0, 5000 <cap_mode_name@@Base+0x264>
    5750:	add	x1, x0, #0xaf8
    5754:	ldr	x0, [sp, #24]
    5758:	bl	1b70 <setxattr@plt>
    575c:	ldp	x29, x30, [sp], #192
    5760:	ret

0000000000005764 <cap_set_nsowner@@Base>:
    5764:	sub	sp, sp, #0x10
    5768:	str	x0, [sp, #8]
    576c:	str	w1, [sp, #4]
    5770:	ldr	x0, [sp, #8]
    5774:	ldr	w1, [sp, #4]
    5778:	str	w1, [x0, #32]
    577c:	mov	w0, #0x0                   	// #0
    5780:	add	sp, sp, #0x10
    5784:	ret
    5788:	mov	x2, x1
    578c:	mov	w1, w0
    5790:	mov	w0, #0x0                   	// #0
    5794:	b	1c80 <__fxstat64@plt>
    5798:	mov	x2, x1
    579c:	mov	x1, x0
    57a0:	mov	w0, #0x0                   	// #0
    57a4:	b	1c50 <__lxstat64@plt>

Disassembly of section .fini:

00000000000057a8 <.fini>:
    57a8:	stp	x29, x30, [sp, #-16]!
    57ac:	mov	x29, sp
    57b0:	ldp	x29, x30, [sp], #16
    57b4:	ret
