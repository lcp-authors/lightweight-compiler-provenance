
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//png.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_png_build_huff_table>:
       0:	mov	x2, #0x0                   	// #0
       4:	mov	w3, #0x0                   	// #0
       8:	mov	w1, #0x0                   	// #0
       c:	ldr	w4, [x0, #28]
      10:	cmp	w4, w2
      14:	b.gt	1c <grub_png_build_huff_table+0x1c>
      18:	ret
      1c:	ldr	x7, [x0, #8]
      20:	lsl	x4, x2, #2
      24:	add	x2, x2, #0x1
      28:	ldr	w5, [x7, x4]
      2c:	add	w6, w5, w1
      30:	str	w6, [x7, x4]
      34:	ldr	x7, [x0, #16]
      38:	sub	w1, w3, w1
      3c:	add	w3, w5, w3
      40:	str	w1, [x7, x4]
      44:	lsl	w1, w6, #1
      48:	b	c <grub_png_build_huff_table+0xc>

000000000000004c <grub_png_output_byte>:
      4c:	stp	x29, x30, [sp, #-48]!
      50:	mov	x29, sp
      54:	stp	x19, x20, [sp, #16]
      58:	mov	x20, x0
      5c:	ldr	w0, [x0, #44]
      60:	sub	w0, w0, #0x1
      64:	str	w0, [x20, #44]
      68:	str	x21, [sp, #32]
      6c:	tbz	w0, #31, 8c <grub_png_output_byte+0x40>
      70:	adrp	x0, 0 <grub_png_build_huff_table>
      74:	ldr	x1, [x0]
      78:	mov	w0, #0x4                   	// #4
      7c:	ldp	x19, x20, [sp, #16]
      80:	ldr	x21, [sp, #32]
      84:	ldp	x29, x30, [sp], #48
      88:	b	0 <grub_error>
      8c:	add	x21, x20, #0x8, lsl #12
      90:	and	w1, w1, #0xff
      94:	ldr	w0, [x21, #2464]
      98:	cbnz	w0, 108 <grub_png_output_byte+0xbc>
      9c:	cmp	w1, #0x4
      a0:	b.ls	b0 <grub_png_output_byte+0x64>  // b.plast
      a4:	adrp	x0, 0 <grub_png_build_huff_table>
      a8:	ldr	x1, [x0]
      ac:	b	78 <grub_png_output_byte+0x2c>
      b0:	str	w1, [x21, #2468]
      b4:	ldr	w0, [x21, #2464]
      b8:	add	w1, w0, #0x1
      bc:	str	w1, [x21, #2464]
      c0:	ldr	w1, [x20, #60]
      c4:	cmp	w0, w1
      c8:	b.ne	ec <grub_png_output_byte+0xa0>  // b.any
      cc:	ldr	w1, [x21, #2472]
      d0:	sxtw	x0, w0
      d4:	ldr	x19, [x21, #2456]
      d8:	neg	x2, x0
      dc:	sub	x19, x19, x0
      e0:	cbz	w1, 11c <grub_png_output_byte+0xd0>
      e4:	bl	0 <grub_zalloc>
      e8:	cbnz	x0, 14c <grub_png_output_byte+0x100>
      ec:	adrp	x0, 0 <grub_png_build_huff_table>
      f0:	ldp	x19, x20, [sp, #16]
      f4:	ldr	x0, [x0]
      f8:	ldr	x21, [sp, #32]
      fc:	ldr	w0, [x0]
     100:	ldp	x29, x30, [sp], #48
     104:	ret
     108:	ldr	x0, [x21, #2456]
     10c:	add	x2, x0, #0x1
     110:	str	x2, [x21, #2456]
     114:	strb	w1, [x0]
     118:	b	b4 <grub_png_output_byte+0x68>
     11c:	add	x2, x19, x2
     120:	mov	x0, #0x0                   	// #0
     124:	ldr	w1, [x21, #2468]
     128:	sub	w1, w1, #0x1
     12c:	cmp	w1, #0x3
     130:	b.hi	170 <grub_png_output_byte+0x124>  // b.pmore
     134:	adrp	x3, 0 <grub_png_build_huff_table>
     138:	ldr	x3, [x3]
     13c:	ldrb	w1, [x3, w1, uxtw]
     140:	adr	x3, 14c <grub_png_output_byte+0x100>
     144:	add	x1, x3, w1, sxtb #2
     148:	br	x1
     14c:	mov	x2, x0
     150:	b	124 <grub_png_output_byte+0xd8>
     154:	ldr	w3, [x20, #36]
     158:	mov	x1, #0x0                   	// #0
     15c:	add	x4, x19, w3, sxtw
     160:	ldr	w5, [x20, #60]
     164:	add	w2, w3, w1
     168:	cmp	w5, w2
     16c:	b.gt	180 <grub_png_output_byte+0x134>
     170:	bl	0 <grub_free>
     174:	str	wzr, [x21, #2464]
     178:	str	wzr, [x21, #2472]
     17c:	b	ec <grub_png_output_byte+0xa0>
     180:	ldrb	w2, [x4, x1]
     184:	ldrb	w5, [x19, x1]
     188:	add	w2, w2, w5
     18c:	strb	w2, [x4, x1]
     190:	add	x1, x1, #0x1
     194:	b	160 <grub_png_output_byte+0x114>
     198:	ldrb	w3, [x19, x1]
     19c:	ldrb	w4, [x2, x1]
     1a0:	add	w3, w3, w4
     1a4:	strb	w3, [x19, x1]
     1a8:	add	x1, x1, #0x1
     1ac:	ldr	w3, [x20, #60]
     1b0:	cmp	w3, w1
     1b4:	b.gt	198 <grub_png_output_byte+0x14c>
     1b8:	b	170 <grub_png_output_byte+0x124>
     1bc:	mov	x1, #0x0                   	// #0
     1c0:	b	1ac <grub_png_output_byte+0x160>
     1c4:	ldrb	w3, [x2, x1]
     1c8:	ldrb	w4, [x19, x1]
     1cc:	add	w3, w4, w3, lsr #1
     1d0:	strb	w3, [x19, x1]
     1d4:	add	x1, x1, #0x1
     1d8:	ldr	w3, [x20, #36]
     1dc:	add	x6, x2, x1
     1e0:	add	x4, x19, x1
     1e4:	cmp	w3, w1
     1e8:	b.gt	1c4 <grub_png_output_byte+0x178>
     1ec:	mov	x2, #0x0                   	// #0
     1f0:	ldr	w5, [x20, #60]
     1f4:	add	w3, w2, w1
     1f8:	cmp	w5, w3
     1fc:	b.le	170 <grub_png_output_byte+0x124>
     200:	ldrb	w5, [x19, x2]
     204:	ldrb	w3, [x6, x2]
     208:	add	w3, w3, w5
     20c:	ldrb	w5, [x4, x2]
     210:	add	w3, w5, w3, lsr #1
     214:	strb	w3, [x4, x2]
     218:	add	x2, x2, #0x1
     21c:	b	1f0 <grub_png_output_byte+0x1a4>
     220:	mov	x1, #0x0                   	// #0
     224:	b	1d8 <grub_png_output_byte+0x18c>
     228:	ldrb	w3, [x19, x1]
     22c:	ldrb	w4, [x2, x1]
     230:	add	w3, w3, w4
     234:	strb	w3, [x19, x1]
     238:	add	x1, x1, #0x1
     23c:	ldr	w3, [x20, #36]
     240:	add	x12, x2, x1
     244:	add	x11, x19, x1
     248:	cmp	w3, w1
     24c:	b.gt	228 <grub_png_output_byte+0x1dc>
     250:	mov	x3, #0x0                   	// #0
     254:	ldr	w5, [x20, #60]
     258:	add	w4, w3, w1
     25c:	cmp	w5, w4
     260:	b.le	170 <grub_png_output_byte+0x124>
     264:	ldrb	w6, [x2, x3]
     268:	ldrb	w7, [x19, x3]
     26c:	ldrb	w10, [x12, x3]
     270:	sub	w5, w7, w6
     274:	sub	w8, w10, w6
     278:	add	w4, w8, w5
     27c:	tbz	w8, #31, 284 <grub_png_output_byte+0x238>
     280:	sub	w8, w6, w10
     284:	tbz	w5, #31, 28c <grub_png_output_byte+0x240>
     288:	sub	w5, w6, w7
     28c:	cmp	w4, #0x0
     290:	ldrb	w9, [x11, x3]
     294:	cneg	w4, w4, lt  // lt = tstop
     298:	cmp	w4, w5
     29c:	csel	w13, w4, w5, le
     2a0:	cmp	w13, w8
     2a4:	b.ge	2b0 <grub_png_output_byte+0x264>  // b.tcont
     2a8:	cmp	w4, w5
     2ac:	csel	w7, w10, w6, ge  // ge = tcont
     2b0:	add	w7, w9, w7
     2b4:	strb	w7, [x11, x3]
     2b8:	add	x3, x3, #0x1
     2bc:	b	254 <grub_png_output_byte+0x208>
     2c0:	mov	x1, #0x0                   	// #0
     2c4:	b	23c <grub_png_output_byte+0x1f0>
	...

00000000000002e8 <grub_png_insert_huff_item.part.0>:
     2e8:	ldr	w7, [x0, #28]
     2ec:	cmp	w7, w2
     2f0:	b.lt	348 <grub_png_insert_huff_item.part.0+0x60>  // b.tstop
     2f4:	sbfiz	x3, x2, #2, #32
     2f8:	mov	w4, #0x0                   	// #0
     2fc:	ldr	x6, [x0, #8]
     300:	mov	x5, x3
     304:	cmp	w7, w2
     308:	b.ne	358 <grub_png_insert_huff_item.part.0+0x70>  // b.any
     30c:	ldr	x7, [x0]
     310:	mov	w5, #0x0                   	// #0
     314:	ldr	w2, [x0, #24]
     318:	cmp	w4, w5
     31c:	b.gt	36c <grub_png_insert_huff_item.part.0+0x84>
     320:	sub	w2, w2, w4
     324:	str	w1, [x7, w2, sxtw #2]
     328:	ldr	w1, [x0, #24]
     32c:	add	w1, w1, #0x1
     330:	str	w1, [x0, #24]
     334:	sub	x0, x3, #0x4
     338:	ldr	w1, [x6, x0]
     33c:	add	w1, w1, #0x1
     340:	str	w1, [x6, x0]
     344:	ret
     348:	adrp	x0, 0 <grub_png_build_huff_table>
     34c:	ldr	x1, [x0]
     350:	mov	w0, #0x4                   	// #4
     354:	b	0 <grub_error>
     358:	ldr	w8, [x6, x5]
     35c:	add	w2, w2, #0x1
     360:	add	x5, x5, #0x4
     364:	add	w4, w4, w8
     368:	b	304 <grub_png_insert_huff_item.part.0+0x1c>
     36c:	sub	w2, w2, w5
     370:	add	w5, w5, #0x1
     374:	add	x8, x7, w2, sxtw #2
     378:	ldur	w8, [x8, #-4]
     37c:	str	w8, [x7, w2, sxtw #2]
     380:	b	314 <grub_png_insert_huff_item.part.0+0x2c>
     384:	nop
	...

0000000000000390 <grub_png_get_dword.isra.0>:
     390:	stp	x29, x30, [sp, #-32]!
     394:	mov	x2, #0x4                   	// #4
     398:	mov	x29, sp
     39c:	add	x1, sp, #0x1c
     3a0:	str	wzr, [sp, #28]
     3a4:	bl	0 <grub_file_read>
     3a8:	ldr	w0, [sp, #28]
     3ac:	ldp	x29, x30, [sp], #32
     3b0:	rev	w0, w0
     3b4:	ret

00000000000003b8 <grub_png_get_byte>:
     3b8:	stp	x29, x30, [sp, #-64]!
     3bc:	mov	x29, sp
     3c0:	stp	x19, x20, [sp, #16]
     3c4:	mov	x19, x0
     3c8:	ldr	w0, [x0, #80]
     3cc:	str	x21, [sp, #32]
     3d0:	cbz	w0, 464 <grub_png_get_byte+0xac>
     3d4:	ldr	w0, [x19, #84]
     3d8:	cbnz	w0, 464 <grub_png_get_byte+0xac>
     3dc:	mov	w21, #0x4154                	// #16724
     3e0:	movk	w21, #0x4944, lsl #16
     3e4:	ldr	x0, [x19]
     3e8:	bl	390 <grub_png_get_dword.isra.0>
     3ec:	ldr	x0, [x19]
     3f0:	ldr	w1, [x19, #24]
     3f4:	ldr	x2, [x0, #24]
     3f8:	cmp	x2, x1
     3fc:	b.eq	424 <grub_png_get_byte+0x6c>  // b.none
     400:	adrp	x0, 0 <grub_png_build_huff_table>
     404:	ldr	x1, [x0]
     408:	mov	w0, #0x4                   	// #4
     40c:	bl	0 <grub_error>
     410:	mov	w0, #0x0                   	// #0
     414:	ldp	x19, x20, [sp, #16]
     418:	ldr	x21, [sp, #32]
     41c:	ldp	x29, x30, [sp], #64
     420:	ret
     424:	bl	390 <grub_png_get_dword.isra.0>
     428:	mov	w20, w0
     42c:	ldr	x0, [x19]
     430:	bl	390 <grub_png_get_dword.isra.0>
     434:	cmp	w0, w21
     438:	b.eq	448 <grub_png_get_byte+0x90>  // b.none
     43c:	adrp	x0, 0 <grub_png_build_huff_table>
     440:	ldr	x1, [x0]
     444:	b	408 <grub_png_get_byte+0x50>
     448:	ldr	x0, [x19]
     44c:	ldr	x0, [x0, #24]
     450:	add	w0, w0, #0x4
     454:	add	w0, w0, w20
     458:	str	w0, [x19, #24]
     45c:	cbz	w20, 3e4 <grub_png_get_byte+0x2c>
     460:	str	w20, [x19, #84]
     464:	ldr	x0, [x19]
     468:	add	x1, sp, #0x3f
     46c:	mov	x2, #0x1                   	// #1
     470:	strb	wzr, [sp, #63]
     474:	bl	0 <grub_file_read>
     478:	ldr	w0, [x19, #80]
     47c:	cbz	w0, 48c <grub_png_get_byte+0xd4>
     480:	ldr	w0, [x19, #84]
     484:	sub	w0, w0, #0x1
     488:	str	w0, [x19, #84]
     48c:	ldrb	w0, [sp, #63]
     490:	b	414 <grub_png_get_byte+0x5c>
     494:	nop
	...

00000000000004a8 <grub_png_get_bits>:
     4a8:	stp	x29, x30, [sp, #-80]!
     4ac:	mov	x29, sp
     4b0:	stp	x19, x20, [sp, #16]
     4b4:	mov	w20, w1
     4b8:	ldr	w1, [x0, #16]
     4bc:	stp	x21, x22, [sp, #32]
     4c0:	mov	x19, x0
     4c4:	stp	x23, x24, [sp, #48]
     4c8:	str	x25, [sp, #64]
     4cc:	cbnz	w1, 4e4 <grub_png_get_bits+0x3c>
     4d0:	bl	3b8 <grub_png_get_byte>
     4d4:	and	w0, w0, #0xff
     4d8:	str	w0, [x19, #20]
     4dc:	mov	w0, #0x8                   	// #8
     4e0:	str	w0, [x19, #16]
     4e4:	mov	w22, #0x0                   	// #0
     4e8:	mov	w21, #0x0                   	// #0
     4ec:	adrp	x23, 0 <grub_png_build_huff_table>
     4f0:	mov	w24, #0x1                   	// #1
     4f4:	mov	w25, #0x8                   	// #8
     4f8:	ldr	x0, [x23]
     4fc:	ldr	w0, [x0]
     500:	cbnz	w0, 538 <grub_png_get_bits+0x90>
     504:	ldp	w2, w3, [x19, #16]
     508:	cmp	w20, w2
     50c:	csel	w1, w20, w2, le
     510:	subs	w20, w20, w1
     514:	lsl	w0, w24, w1
     518:	sub	w0, w0, #0x1
     51c:	and	w0, w0, w3
     520:	lsl	w0, w0, w22
     524:	add	w21, w21, w0
     528:	b.ne	554 <grub_png_get_bits+0xac>  // b.any
     52c:	sub	w2, w2, w1
     530:	asr	w1, w3, w1
     534:	stp	w2, w1, [x19, #16]
     538:	mov	w0, w21
     53c:	ldp	x19, x20, [sp, #16]
     540:	ldp	x21, x22, [sp, #32]
     544:	ldp	x23, x24, [sp, #48]
     548:	ldr	x25, [sp, #64]
     54c:	ldp	x29, x30, [sp], #80
     550:	ret
     554:	add	w22, w22, w1
     558:	mov	x0, x19
     55c:	bl	3b8 <grub_png_get_byte>
     560:	and	w0, w0, #0xff
     564:	stp	w25, w0, [x19, #16]
     568:	b	4f8 <grub_png_get_bits+0x50>
     56c:	nop
	...

0000000000000578 <grub_png_get_huff_code>:
     578:	stp	x29, x30, [sp, #-48]!
     57c:	mov	w2, #0x0                   	// #0
     580:	mov	x29, sp
     584:	stp	x19, x20, [sp, #16]
     588:	mov	x20, x1
     58c:	stp	x21, x22, [sp, #32]
     590:	mov	x22, x0
     594:	mov	x21, #0x0                   	// #0
     598:	ldr	w0, [x20, #28]
     59c:	cmp	w0, w21
     5a0:	b.gt	5ac <grub_png_get_huff_code+0x34>
     5a4:	mov	w0, #0x0                   	// #0
     5a8:	b	5ec <grub_png_get_huff_code+0x74>
     5ac:	lsl	w19, w2, #1
     5b0:	mov	w1, #0x1                   	// #1
     5b4:	mov	x0, x22
     5b8:	bl	4a8 <grub_png_get_bits>
     5bc:	ldr	x1, [x20, #8]
     5c0:	add	w2, w19, w0
     5c4:	lsl	x0, x21, #2
     5c8:	add	x21, x21, #0x1
     5cc:	ldr	w1, [x1, x0]
     5d0:	cmp	w1, w2
     5d4:	b.le	598 <grub_png_get_huff_code+0x20>
     5d8:	ldr	x1, [x20, #16]
     5dc:	ldr	w0, [x1, x0]
     5e0:	add	w2, w2, w0
     5e4:	ldr	x0, [x20]
     5e8:	ldr	w0, [x0, w2, sxtw #2]
     5ec:	ldp	x19, x20, [sp, #16]
     5f0:	ldp	x21, x22, [sp, #32]
     5f4:	ldp	x29, x30, [sp], #48
     5f8:	ret

00000000000005fc <grub_png_read_dynamic_block>:
     5fc:	stp	x29, x30, [sp, #-80]!
     600:	mov	x29, sp
     604:	stp	x19, x20, [sp, #16]
     608:	mov	x19, x0
     60c:	stp	x21, x22, [sp, #32]
     610:	mov	w21, #0x7fff                	// #32767
     614:	mov	w22, w21
     618:	stp	x23, x24, [sp, #48]
     61c:	str	x25, [sp, #64]
     620:	adrp	x0, 0 <grub_png_build_huff_table>
     624:	ldr	x20, [x0]
     628:	ldr	w0, [x20]
     62c:	cbnz	w0, 680 <grub_png_read_dynamic_block+0x84>
     630:	add	x1, x19, #0x950
     634:	mov	x0, x19
     638:	bl	578 <grub_png_get_huff_code>
     63c:	cmp	w0, #0xff
     640:	b.gt	678 <grub_png_read_dynamic_block+0x7c>
     644:	add	x20, x19, #0x8, lsl #12
     648:	and	w1, w0, #0xff
     64c:	ldrsw	x0, [x20, #2448]
     650:	add	x0, x19, x0
     654:	strb	w1, [x0, #2448]
     658:	mov	x0, x19
     65c:	bl	4c <grub_png_output_byte>
     660:	ldr	w0, [x20, #2448]
     664:	add	w0, w0, #0x1
     668:	cmp	w0, w21
     66c:	csel	w0, w0, wzr, le
     670:	str	w0, [x20, #2448]
     674:	b	620 <grub_png_read_dynamic_block+0x24>
     678:	cmp	w0, #0x100
     67c:	b.ne	69c <grub_png_read_dynamic_block+0xa0>  // b.any
     680:	ldr	w0, [x20]
     684:	ldp	x19, x20, [sp, #16]
     688:	ldp	x21, x22, [sp, #32]
     68c:	ldp	x23, x24, [sp, #48]
     690:	ldr	x25, [sp, #64]
     694:	ldp	x29, x30, [sp], #80
     698:	ret
     69c:	adrp	x1, 0 <grub_png_build_huff_table>
     6a0:	sub	w0, w0, #0x101
     6a4:	ldr	x24, [x1]
     6a8:	sxtw	x0, w0
     6ac:	add	x1, x24, #0x7c
     6b0:	ldr	w23, [x24, x0, lsl #2]
     6b4:	ldrb	w1, [x1, x0]
     6b8:	cbz	w1, 6c8 <grub_png_read_dynamic_block+0xcc>
     6bc:	mov	x0, x19
     6c0:	bl	4a8 <grub_png_get_bits>
     6c4:	add	w23, w23, w0
     6c8:	add	x1, x19, #0x970
     6cc:	mov	x0, x19
     6d0:	bl	578 <grub_png_get_huff_code>
     6d4:	sxtw	x0, w0
     6d8:	add	x1, x24, #0x9c
     6dc:	add	x24, x24, #0x114
     6e0:	ldr	w25, [x1, x0, lsl #2]
     6e4:	ldrb	w1, [x24, x0]
     6e8:	cbz	w1, 6f8 <grub_png_read_dynamic_block+0xfc>
     6ec:	mov	x0, x19
     6f0:	bl	4a8 <grub_png_get_bits>
     6f4:	add	w25, w25, w0
     6f8:	add	x24, x19, #0x8, lsl #12
     6fc:	ldr	w20, [x24, #2448]
     700:	subs	w20, w20, w25
     704:	b.pl	70c <grub_png_read_dynamic_block+0x110>  // b.nfrst
     708:	add	w20, w20, #0x8, lsl #12
     70c:	cmp	w23, #0x0
     710:	b.le	620 <grub_png_read_dynamic_block+0x24>
     714:	add	x0, x19, w20, sxtw
     718:	add	w20, w20, #0x1
     71c:	sub	w23, w23, #0x1
     720:	ldrb	w1, [x0, #2448]
     724:	ldrsw	x0, [x24, #2448]
     728:	add	x0, x19, x0
     72c:	strb	w1, [x0, #2448]
     730:	mov	x0, x19
     734:	bl	4c <grub_png_output_byte>
     738:	ldr	w0, [x24, #2448]
     73c:	add	w0, w0, #0x1
     740:	cmp	w0, w21
     744:	csel	w0, w0, wzr, le
     748:	cmp	w20, w22
     74c:	csel	w20, w20, wzr, le
     750:	str	w0, [x24, #2448]
     754:	b	70c <grub_png_read_dynamic_block+0x110>
	...

0000000000000768 <grub_video_reader_png>:
     768:	stp	x29, x30, [sp, #-336]!
     76c:	mov	x2, #0x0                   	// #0
     770:	mov	x29, sp
     774:	stp	x19, x20, [sp, #16]
     778:	stp	x21, x22, [sp, #32]
     77c:	mov	x22, x0
     780:	mov	x0, x1
     784:	mov	w1, #0x31                  	// #49
     788:	stp	x23, x24, [sp, #48]
     78c:	stp	x25, x26, [sp, #64]
     790:	stp	x27, x28, [sp, #80]
     794:	bl	0 <grub_buffile_open>
     798:	cbnz	x0, 7c4 <grub_video_reader_png+0x5c>
     79c:	adrp	x0, 0 <grub_png_build_huff_table>
     7a0:	ldr	x0, [x0]
     7a4:	ldr	w0, [x0]
     7a8:	ldp	x19, x20, [sp, #16]
     7ac:	ldp	x21, x22, [sp, #32]
     7b0:	ldp	x23, x24, [sp, #48]
     7b4:	ldp	x25, x26, [sp, #64]
     7b8:	ldp	x27, x28, [sp, #80]
     7bc:	ldp	x29, x30, [sp], #336
     7c0:	ret
     7c4:	mov	x19, x0
     7c8:	mov	x0, #0x89b0                	// #35248
     7cc:	bl	0 <grub_zalloc>
     7d0:	mov	x27, x0
     7d4:	cbz	x0, 10dc <grub_video_reader_png+0x974>
     7d8:	stp	x19, x22, [x27]
     7dc:	mov	x2, #0x8                   	// #8
     7e0:	add	x1, sp, #0x80
     7e4:	mov	x0, x19
     7e8:	bl	0 <grub_file_read>
     7ec:	mov	x2, x0
     7f0:	cmp	x0, #0x8
     7f4:	b.ne	10cc <grub_video_reader_png+0x964>  // b.any
     7f8:	adrp	x0, 0 <grub_png_build_huff_table>
     7fc:	ldr	x0, [x0]
     800:	str	x0, [sp, #96]
     804:	add	x1, x0, #0x132
     808:	add	x0, sp, #0x80
     80c:	bl	0 <grub_memcmp>
     810:	cbz	w0, 828 <grub_video_reader_png+0xc0>
     814:	adrp	x0, 0 <grub_png_build_huff_table>
     818:	ldr	x1, [x0]
     81c:	mov	w0, #0x4                   	// #4
     820:	bl	0 <grub_error>
     824:	b	10cc <grub_video_reader_png+0x964>
     828:	ldr	x0, [x27]
     82c:	bl	390 <grub_png_get_dword.isra.0>
     830:	mov	w20, w0
     834:	ldr	x0, [x27]
     838:	bl	390 <grub_png_get_dword.isra.0>
     83c:	mov	w2, w0
     840:	ldr	x0, [x27]
     844:	ldr	x1, [x0, #24]
     848:	add	w3, w1, #0x4
     84c:	add	w3, w3, w20
     850:	str	w3, [x27, #24]
     854:	mov	w3, #0x4452                	// #17490
     858:	movk	w3, #0x4948, lsl #16
     85c:	cmp	w2, w3
     860:	b.eq	8c8 <grub_video_reader_png+0x160>  // b.none
     864:	b.hi	898 <grub_video_reader_png+0x130>  // b.pmore
     868:	mov	w3, #0x4154                	// #16724
     86c:	movk	w3, #0x4944, lsl #16
     870:	cmp	w2, w3
     874:	b.eq	b64 <grub_video_reader_png+0x3fc>  // b.none
     878:	mov	w3, #0x4e44                	// #20036
     87c:	movk	w3, #0x4945, lsl #16
     880:	cmp	w2, w3
     884:	b.eq	104c <grub_video_reader_png+0x8e4>  // b.none
     888:	add	x1, x1, #0x4
     88c:	add	x1, x1, w20, uxtw
     890:	bl	0 <grub_file_seek>
     894:	b	8f8 <grub_video_reader_png+0x190>
     898:	mov	w3, #0x5445                	// #21573
     89c:	movk	w3, #0x504c, lsl #16
     8a0:	cmp	w2, w3
     8a4:	b.ne	888 <grub_video_reader_png+0x120>  // b.any
     8a8:	cbz	w20, 8f8 <grub_video_reader_png+0x190>
     8ac:	add	x21, x27, #0x650
     8b0:	mov	x23, #0x0                   	// #0
     8b4:	cmp	w20, w23
     8b8:	b.hi	b3c <grub_video_reader_png+0x3d4>  // b.pmore
     8bc:	ldr	x0, [x27]
     8c0:	bl	390 <grub_png_get_dword.isra.0>
     8c4:	b	8f8 <grub_video_reader_png+0x190>
     8c8:	bl	390 <grub_png_get_dword.isra.0>
     8cc:	str	w0, [x27, #28]
     8d0:	ldr	x0, [x27]
     8d4:	bl	390 <grub_png_get_dword.isra.0>
     8d8:	str	w0, [x27, #32]
     8dc:	cbz	w0, 8e8 <grub_video_reader_png+0x180>
     8e0:	ldr	w0, [x27, #28]
     8e4:	cbnz	w0, 928 <grub_video_reader_png+0x1c0>
     8e8:	adrp	x0, 0 <grub_png_build_huff_table>
     8ec:	ldr	x1, [x0]
     8f0:	mov	w0, #0x4                   	// #4
     8f4:	bl	0 <grub_error>
     8f8:	adrp	x0, 0 <grub_png_build_huff_table>
     8fc:	ldr	x0, [x0]
     900:	ldr	w0, [x0]
     904:	cbnz	w0, 10cc <grub_video_reader_png+0x964>
     908:	ldr	x1, [x27]
     90c:	ldr	w0, [x27, #24]
     910:	ldr	x1, [x1, #24]
     914:	cmp	x1, x0
     918:	b.eq	828 <grub_video_reader_png+0xc0>  // b.none
     91c:	adrp	x0, 0 <grub_png_build_huff_table>
     920:	ldr	x1, [x0]
     924:	b	81c <grub_video_reader_png+0xb4>
     928:	mov	x0, x27
     92c:	bl	3b8 <grub_png_get_byte>
     930:	and	w20, w0, #0xff
     934:	cmp	w20, #0x10
     938:	cset	w0, eq  // eq = none
     93c:	str	w0, [x27, #40]
     940:	mov	x0, x27
     944:	bl	3b8 <grub_png_get_byte>
     948:	and	w0, w0, #0xff
     94c:	and	w1, w0, #0xfffffff9
     950:	cmp	w0, #0x3
     954:	cbz	w1, 968 <grub_video_reader_png+0x200>
     958:	b.eq	96c <grub_video_reader_png+0x204>  // b.none
     95c:	adrp	x0, 0 <grub_png_build_huff_table>
     960:	ldr	x1, [x0]
     964:	b	8f0 <grub_video_reader_png+0x188>
     968:	b.ne	974 <grub_video_reader_png+0x20c>  // b.any
     96c:	mov	w1, #0x1                   	// #1
     970:	str	w1, [x27, #56]
     974:	ldr	w2, [x27, #40]
     978:	ldr	w1, [x27, #56]
     97c:	cbz	w2, 984 <grub_video_reader_png+0x21c>
     980:	cbnz	w1, 95c <grub_video_reader_png+0x1f4>
     984:	ands	w5, w0, #0x4
     988:	mov	w2, #0x1                   	// #1
     98c:	mov	w3, #0x4                   	// #4
     990:	csel	w3, w2, w3, ne  // ne = any
     994:	cbz	w1, 9a0 <grub_video_reader_png+0x238>
     998:	str	w2, [x27, #36]
     99c:	b	9ac <grub_video_reader_png+0x244>
     9a0:	tbz	w0, #1, 9d8 <grub_video_reader_png+0x270>
     9a4:	mov	w0, #0x3                   	// #3
     9a8:	str	w0, [x27, #36]
     9ac:	cmp	w20, #0x8
     9b0:	ccmp	w20, #0x10, #0x4, ne  // ne = any
     9b4:	b.eq	9e0 <grub_video_reader_png+0x278>  // b.none
     9b8:	cmp	w20, #0x4
     9bc:	b.ne	9cc <grub_video_reader_png+0x264>  // b.any
     9c0:	ldr	w0, [x27, #48]
     9c4:	orr	w1, w1, w0
     9c8:	cbnz	w1, 9e0 <grub_video_reader_png+0x278>
     9cc:	adrp	x0, 0 <grub_png_build_huff_table>
     9d0:	ldr	x1, [x0]
     9d4:	b	8f0 <grub_video_reader_png+0x188>
     9d8:	str	w2, [x27, #48]
     9dc:	b	998 <grub_video_reader_png+0x230>
     9e0:	cbz	w5, 9f0 <grub_video_reader_png+0x288>
     9e4:	ldr	w0, [x27, #36]
     9e8:	add	w0, w0, #0x1
     9ec:	str	w0, [x27, #36]
     9f0:	ldp	w1, w2, [x27, #28]
     9f4:	ldr	x0, [x27, #8]
     9f8:	bl	0 <grub_video_bitmap_create>
     9fc:	cbnz	w0, 8f8 <grub_video_reader_png+0x190>
     a00:	ldr	w1, [x27, #40]
     a04:	cbz	w1, a14 <grub_video_reader_png+0x2ac>
     a08:	ldr	w0, [x27, #36]
     a0c:	lsl	w0, w0, #1
     a10:	str	w0, [x27, #36]
     a14:	str	w20, [x27, #64]
     a18:	cmp	w20, #0x4
     a1c:	ldr	w0, [x27, #28]
     a20:	b.le	aac <grub_video_reader_png+0x344>
     a24:	ldr	w20, [x27, #36]
     a28:	mul	w20, w20, w0
     a2c:	str	w20, [x27, #60]
     a30:	cbnz	w1, a44 <grub_video_reader_png+0x2dc>
     a34:	ldr	w0, [x27, #48]
     a38:	cbnz	w0, a44 <grub_video_reader_png+0x2dc>
     a3c:	ldr	w0, [x27, #56]
     a40:	cbz	w0, abc <grub_video_reader_png+0x354>
     a44:	ldr	w1, [x27, #32]
     a48:	ldr	w0, [x27, #60]
     a4c:	mul	w0, w1, w0
     a50:	bl	0 <grub_malloc>
     a54:	str	x0, [x27, #72]
     a58:	adrp	x1, 0 <grub_png_build_huff_table>
     a5c:	ldr	x1, [x1]
     a60:	ldr	w1, [x1]
     a64:	cbnz	w1, 10cc <grub_video_reader_png+0x964>
     a68:	add	x1, x27, #0x8, lsl #12
     a6c:	str	x0, [x1, #2456]
     a70:	ldr	w1, [x27, #60]
     a74:	ldr	w0, [x27, #32]
     a78:	madd	w0, w1, w0, w0
     a7c:	mov	w1, #0x1                   	// #1
     a80:	str	w0, [x27, #44]
     a84:	add	x0, x27, #0x8, lsl #12
     a88:	str	wzr, [x0, #2464]
     a8c:	str	w1, [x0, #2472]
     a90:	mov	x0, x27
     a94:	bl	3b8 <grub_png_get_byte>
     a98:	tst	w0, #0xff
     a9c:	b.eq	ad8 <grub_video_reader_png+0x370>  // b.none
     aa0:	adrp	x0, 0 <grub_png_build_huff_table>
     aa4:	ldr	x1, [x0]
     aa8:	b	8f0 <grub_video_reader_png+0x188>
     aac:	mul	w20, w20, w0
     ab0:	add	w20, w20, #0x7
     ab4:	lsr	w20, w20, #3
     ab8:	b	a2c <grub_video_reader_png+0x2c4>
     abc:	ldr	x1, [x27, #8]
     ac0:	add	x0, x27, #0x8, lsl #12
     ac4:	ldr	x1, [x1]
     ac8:	ldr	x1, [x1, #80]
     acc:	str	xzr, [x27, #72]
     ad0:	str	x1, [x0, #2456]
     ad4:	b	a70 <grub_video_reader_png+0x308>
     ad8:	mov	x0, x27
     adc:	bl	3b8 <grub_png_get_byte>
     ae0:	tst	w0, #0xff
     ae4:	b.eq	af4 <grub_video_reader_png+0x38c>  // b.none
     ae8:	adrp	x0, 0 <grub_png_build_huff_table>
     aec:	ldr	x1, [x0]
     af0:	b	8f0 <grub_video_reader_png+0x188>
     af4:	mov	x0, x27
     af8:	bl	3b8 <grub_png_get_byte>
     afc:	tst	w0, #0xff
     b00:	b.eq	8bc <grub_video_reader_png+0x154>  // b.none
     b04:	adrp	x0, 0 <grub_png_build_huff_table>
     b08:	ldr	x1, [x0]
     b0c:	b	8f0 <grub_video_reader_png+0x188>
     b10:	mov	x0, x27
     b14:	bl	3b8 <grub_png_get_byte>
     b18:	strb	w0, [x21]
     b1c:	mov	x0, x27
     b20:	add	x21, x21, #0x3
     b24:	bl	3b8 <grub_png_get_byte>
     b28:	sturb	w0, [x21, #-2]
     b2c:	mov	x0, x27
     b30:	bl	3b8 <grub_png_get_byte>
     b34:	sturb	w0, [x21, #-1]
     b38:	b	8b4 <grub_video_reader_png+0x14c>
     b3c:	add	x23, x23, #0x3
     b40:	cmp	x23, #0x303
     b44:	b.ne	b10 <grub_video_reader_png+0x3a8>  // b.any
     b48:	mov	w21, #0x300                 	// #768
     b4c:	cmp	w20, w21
     b50:	b.ls	8bc <grub_video_reader_png+0x154>  // b.plast
     b54:	mov	x0, x27
     b58:	add	w21, w21, #0x1
     b5c:	bl	3b8 <grub_png_get_byte>
     b60:	b	b4c <grub_video_reader_png+0x3e4>
     b64:	mov	w0, #0x1                   	// #1
     b68:	str	wzr, [x27, #16]
     b6c:	stp	w0, w20, [x27, #80]
     b70:	mov	x0, x27
     b74:	bl	3b8 <grub_png_get_byte>
     b78:	and	w20, w0, #0xff
     b7c:	and	w20, w20, #0xf
     b80:	mov	x0, x27
     b84:	bl	3b8 <grub_png_get_byte>
     b88:	and	w0, w0, #0xff
     b8c:	cmp	w20, #0x8
     b90:	b.eq	bac <grub_video_reader_png+0x444>  // b.none
     b94:	adrp	x0, 0 <grub_png_build_huff_table>
     b98:	ldr	x1, [x0]
     b9c:	mov	w0, #0x4                   	// #4
     ba0:	bl	0 <grub_error>
     ba4:	str	wzr, [x27, #80]
     ba8:	b	8f8 <grub_video_reader_png+0x190>
     bac:	tbnz	w0, #5, c50 <grub_video_reader_png+0x4e8>
     bb0:	add	x25, sp, #0x88
     bb4:	mov	w1, #0x1                   	// #1
     bb8:	mov	x0, x27
     bbc:	bl	4a8 <grub_png_get_bits>
     bc0:	str	w0, [sp, #108]
     bc4:	mov	w1, #0x2                   	// #2
     bc8:	mov	x0, x27
     bcc:	bl	4a8 <grub_png_get_bits>
     bd0:	cmp	w0, #0x1
     bd4:	b.eq	c7c <grub_video_reader_png+0x514>  // b.none
     bd8:	cmp	w0, #0x2
     bdc:	b.eq	d7c <grub_video_reader_png+0x614>  // b.none
     be0:	cbnz	w0, 1040 <grub_video_reader_png+0x8d8>
     be4:	str	wzr, [x27, #16]
     be8:	mov	x0, x27
     bec:	mov	w21, #0x0                   	// #0
     bf0:	bl	3b8 <grub_png_get_byte>
     bf4:	and	w20, w0, #0xff
     bf8:	mov	x0, x27
     bfc:	bl	3b8 <grub_png_get_byte>
     c00:	ubfiz	w0, w0, #8, #8
     c04:	add	w20, w20, w0
     c08:	mov	x0, x27
     c0c:	bl	3b8 <grub_png_get_byte>
     c10:	and	w20, w20, #0xffff
     c14:	mov	x0, x27
     c18:	bl	3b8 <grub_png_get_byte>
     c1c:	cmp	w20, w21
     c20:	b.ne	c5c <grub_video_reader_png+0x4f4>  // b.any
     c24:	adrp	x0, 0 <grub_png_build_huff_table>
     c28:	ldr	w1, [sp, #108]
     c2c:	ldr	x0, [x0]
     c30:	ldr	w0, [x0]
     c34:	orr	w0, w1, w0
     c38:	cbz	w0, bb4 <grub_video_reader_png+0x44c>
     c3c:	ldr	x0, [x27]
     c40:	bl	390 <grub_png_get_dword.isra.0>
     c44:	ldr	x0, [x27]
     c48:	bl	390 <grub_png_get_dword.isra.0>
     c4c:	b	ba4 <grub_video_reader_png+0x43c>
     c50:	adrp	x0, 0 <grub_png_build_huff_table>
     c54:	ldr	x1, [x0]
     c58:	b	b9c <grub_video_reader_png+0x434>
     c5c:	mov	x0, x27
     c60:	add	w21, w21, #0x1
     c64:	bl	3b8 <grub_png_get_byte>
     c68:	and	w21, w21, #0xffff
     c6c:	mov	w1, w0
     c70:	mov	x0, x27
     c74:	bl	4c <grub_png_output_byte>
     c78:	b	c1c <grub_video_reader_png+0x4b4>
     c7c:	add	x21, x27, #0x950
     c80:	add	x1, x27, #0x58
     c84:	str	x1, [x27, #2384]
     c88:	add	x0, x27, #0x4d8
     c8c:	add	x1, x27, #0x518
     c90:	mov	x2, #0x40                  	// #64
     c94:	stp	x0, x1, [x21, #8]
     c98:	mov	x1, #0x1000000000          	// #68719476736
     c9c:	mov	w20, #0x0                   	// #0
     ca0:	str	x1, [x27, #2408]
     ca4:	mov	w1, #0x0                   	// #0
     ca8:	bl	0 <grub_memset>
     cac:	mov	w1, w20
     cb0:	mov	x0, x21
     cb4:	add	w20, w20, #0x1
     cb8:	mov	w2, #0x8                   	// #8
     cbc:	bl	2e8 <grub_png_insert_huff_item.part.0>
     cc0:	cmp	w20, #0x90
     cc4:	b.ne	cac <grub_video_reader_png+0x544>  // b.any
     cc8:	mov	w1, w20
     ccc:	mov	x0, x21
     cd0:	add	w20, w20, #0x1
     cd4:	mov	w2, #0x9                   	// #9
     cd8:	bl	2e8 <grub_png_insert_huff_item.part.0>
     cdc:	cmp	w20, #0x100
     ce0:	b.ne	cc8 <grub_video_reader_png+0x560>  // b.any
     ce4:	mov	w1, w20
     ce8:	mov	x0, x21
     cec:	add	w20, w20, #0x1
     cf0:	mov	w2, #0x7                   	// #7
     cf4:	bl	2e8 <grub_png_insert_huff_item.part.0>
     cf8:	cmp	w20, #0x118
     cfc:	b.ne	ce4 <grub_video_reader_png+0x57c>  // b.any
     d00:	mov	w1, w20
     d04:	mov	x0, x21
     d08:	add	w20, w20, #0x1
     d0c:	mov	w2, #0x8                   	// #8
     d10:	bl	2e8 <grub_png_insert_huff_item.part.0>
     d14:	cmp	w20, #0x120
     d18:	b.ne	d00 <grub_video_reader_png+0x598>  // b.any
     d1c:	add	x20, x27, #0x970
     d20:	mov	x0, x21
     d24:	bl	0 <grub_png_build_huff_table>
     d28:	mov	w21, #0x0                   	// #0
     d2c:	add	x1, x27, #0x558
     d30:	str	x1, [x27, #2416]
     d34:	add	x0, x27, #0x5d0
     d38:	add	x1, x27, #0x610
     d3c:	stp	x0, x1, [x20, #8]
     d40:	mov	x1, #0x1000000000          	// #68719476736
     d44:	mov	x2, #0x40                  	// #64
     d48:	str	x1, [x27, #2440]
     d4c:	mov	w1, #0x0                   	// #0
     d50:	bl	0 <grub_memset>
     d54:	mov	w1, w21
     d58:	mov	x0, x20
     d5c:	add	w21, w21, #0x1
     d60:	mov	w2, #0x5                   	// #5
     d64:	bl	2e8 <grub_png_insert_huff_item.part.0>
     d68:	cmp	w21, #0x1e
     d6c:	b.ne	d54 <grub_video_reader_png+0x5ec>  // b.any
     d70:	mov	x0, x20
     d74:	bl	0 <grub_png_build_huff_table>
     d78:	b	dd4 <grub_video_reader_png+0x66c>
     d7c:	mov	w1, #0x5                   	// #5
     d80:	mov	x0, x27
     d84:	bl	4a8 <grub_png_get_bits>
     d88:	add	w20, w0, #0x101
     d8c:	mov	w1, #0x5                   	// #5
     d90:	mov	x0, x27
     d94:	bl	4a8 <grub_png_get_bits>
     d98:	add	w26, w0, #0x1
     d9c:	mov	w1, #0x4                   	// #4
     da0:	mov	x0, x27
     da4:	bl	4a8 <grub_png_get_bits>
     da8:	mov	w23, w0
     dac:	cmp	w20, #0x120
     db0:	add	w21, w0, #0x4
     db4:	ccmp	w26, #0x1e, #0x0, le
     db8:	b.gt	dc4 <grub_video_reader_png+0x65c>
     dbc:	cmp	w21, #0x13
     dc0:	b.le	de0 <grub_video_reader_png+0x678>
     dc4:	adrp	x0, 0 <grub_png_build_huff_table>
     dc8:	ldr	x1, [x0]
     dcc:	mov	w0, #0x4                   	// #4
     dd0:	bl	0 <grub_error>
     dd4:	mov	x0, x27
     dd8:	bl	5fc <grub_png_read_dynamic_block>
     ddc:	b	c24 <grub_video_reader_png+0x4bc>
     de0:	add	x0, sp, #0x100
     de4:	str	x0, [sp, #160]
     de8:	add	x0, sp, #0xc0
     dec:	str	x0, [sp, #168]
     df0:	add	x0, sp, #0xe0
     df4:	str	x0, [sp, #176]
     df8:	mov	x0, #0x800000000           	// #34359738368
     dfc:	mov	x2, #0x20                  	// #32
     e00:	mov	w1, #0x0                   	// #0
     e04:	str	x0, [sp, #184]
     e08:	add	x0, sp, #0xc0
     e0c:	bl	0 <grub_memset>
     e10:	ldr	x0, [sp, #96]
     e14:	mov	x24, #0x0                   	// #0
     e18:	add	x28, x0, #0x13a
     e1c:	cmp	w21, w24
     e20:	b.gt	ef4 <grub_video_reader_png+0x78c>
     e24:	cmn	w23, #0x4
     e28:	mov	w0, #0xfffffffc            	// #-4
     e2c:	csel	w0, w23, w0, ge  // ge = tcont
     e30:	ldr	x1, [sp, #96]
     e34:	add	w0, w0, #0x4
     e38:	add	x1, x1, #0x13a
     e3c:	sxtw	x0, w0
     e40:	cmp	w0, #0x12
     e44:	b.le	f10 <grub_video_reader_png+0x7a8>
     e48:	mov	x21, #0x0                   	// #0
     e4c:	ldrb	w2, [x25, x21]
     e50:	cbz	w2, e60 <grub_video_reader_png+0x6f8>
     e54:	mov	w1, w21
     e58:	add	x0, sp, #0xa0
     e5c:	bl	2e8 <grub_png_insert_huff_item.part.0>
     e60:	add	x21, x21, #0x1
     e64:	cmp	x21, #0x13
     e68:	b.ne	e4c <grub_video_reader_png+0x6e4>  // b.any
     e6c:	add	x24, x27, #0x950
     e70:	add	x0, sp, #0xa0
     e74:	bl	0 <grub_png_build_huff_table>
     e78:	mov	x21, #0x1000000000          	// #68719476736
     e7c:	add	x1, x27, #0x58
     e80:	str	x1, [x27, #2384]
     e84:	add	x0, x27, #0x4d8
     e88:	add	x1, x27, #0x518
     e8c:	stp	x0, x1, [x24, #8]
     e90:	add	x23, x27, #0x970
     e94:	mov	x2, #0x40                  	// #64
     e98:	str	x21, [x27, #2408]
     e9c:	mov	w1, #0x0                   	// #0
     ea0:	mov	w28, #0x0                   	// #0
     ea4:	bl	0 <grub_memset>
     ea8:	add	x1, x27, #0x558
     eac:	str	x1, [x27, #2416]
     eb0:	add	x0, x27, #0x5d0
     eb4:	add	x1, x27, #0x610
     eb8:	stp	x0, x1, [x23, #8]
     ebc:	mov	x2, #0x40                  	// #64
     ec0:	mov	w1, #0x0                   	// #0
     ec4:	str	x21, [x27, #2440]
     ec8:	mov	w21, #0x0                   	// #0
     ecc:	bl	0 <grub_memset>
     ed0:	add	w0, w20, w26
     ed4:	str	w0, [sp, #112]
     ed8:	ldr	w0, [sp, #112]
     edc:	cmp	w28, w0
     ee0:	b.lt	f20 <grub_video_reader_png+0x7b8>  // b.tstop
     ee4:	mov	x0, x24
     ee8:	bl	0 <grub_png_build_huff_table>
     eec:	mov	x0, x23
     ef0:	b	d74 <grub_video_reader_png+0x60c>
     ef4:	mov	w1, #0x3                   	// #3
     ef8:	mov	x0, x27
     efc:	bl	4a8 <grub_png_get_bits>
     f00:	ldrb	w1, [x28, x24]
     f04:	add	x24, x24, #0x1
     f08:	strb	w0, [x25, x1]
     f0c:	b	e1c <grub_video_reader_png+0x6b4>
     f10:	ldrb	w2, [x1, x0]
     f14:	add	x0, x0, #0x1
     f18:	strb	wzr, [x25, x2]
     f1c:	b	e40 <grub_video_reader_png+0x6d8>
     f20:	adrp	x0, 0 <grub_png_build_huff_table>
     f24:	ldr	x0, [x0]
     f28:	ldr	w0, [x0]
     f2c:	cbnz	w0, dd4 <grub_video_reader_png+0x66c>
     f30:	cmp	w20, w28
     f34:	b.gt	f84 <grub_video_reader_png+0x81c>
     f38:	sub	w6, w28, w20
     f3c:	mov	x26, x23
     f40:	add	x1, sp, #0xa0
     f44:	mov	x0, x27
     f48:	str	w6, [sp, #116]
     f4c:	bl	578 <grub_png_get_huff_code>
     f50:	ldr	w6, [sp, #116]
     f54:	mov	w2, w0
     f58:	cmp	w0, #0xf
     f5c:	b.gt	f90 <grub_video_reader_png+0x828>
     f60:	cbz	w0, f78 <grub_video_reader_png+0x810>
     f64:	mov	w1, w6
     f68:	mov	x0, x26
     f6c:	str	w2, [sp, #116]
     f70:	bl	2e8 <grub_png_insert_huff_item.part.0>
     f74:	ldr	w2, [sp, #116]
     f78:	add	w28, w28, #0x1
     f7c:	mov	w21, w2
     f80:	b	ed8 <grub_video_reader_png+0x770>
     f84:	mov	x26, x24
     f88:	mov	w6, w28
     f8c:	b	f40 <grub_video_reader_png+0x7d8>
     f90:	cmp	w0, #0x10
     f94:	b.ne	100c <grub_video_reader_png+0x8a4>  // b.any
     f98:	mov	x0, x27
     f9c:	mov	w1, #0x2                   	// #2
     fa0:	str	w6, [sp, #116]
     fa4:	bl	4a8 <grub_png_get_bits>
     fa8:	ldr	w6, [sp, #116]
     fac:	mov	w5, w0
     fb0:	add	w7, w0, #0x3
     fb4:	cmp	w7, #0x0
     fb8:	b.gt	fd8 <grub_video_reader_png+0x870>
     fbc:	cmn	w5, #0x3
     fc0:	mov	w0, #0xfffffffd            	// #-3
     fc4:	csel	w5, w5, w0, ge  // ge = tcont
     fc8:	add	w3, w28, w5
     fcc:	add	w28, w3, #0x2
     fd0:	mov	w2, w21
     fd4:	b	f78 <grub_video_reader_png+0x810>
     fd8:	add	w8, w6, #0x1
     fdc:	cbz	w21, 1000 <grub_video_reader_png+0x898>
     fe0:	mov	w2, w21
     fe4:	mov	w1, w6
     fe8:	mov	x0, x26
     fec:	stp	w5, w8, [sp, #116]
     ff0:	str	w7, [sp, #124]
     ff4:	bl	2e8 <grub_png_insert_huff_item.part.0>
     ff8:	ldp	w5, w8, [sp, #116]
     ffc:	ldr	w7, [sp, #124]
    1000:	sub	w7, w7, #0x1
    1004:	mov	w6, w8
    1008:	b	fb4 <grub_video_reader_png+0x84c>
    100c:	cmp	w0, #0x11
    1010:	b.ne	102c <grub_video_reader_png+0x8c4>  // b.any
    1014:	mov	x0, x27
    1018:	mov	w1, #0x3                   	// #3
    101c:	bl	4a8 <grub_png_get_bits>
    1020:	add	w0, w0, #0x2
    1024:	add	w28, w28, w0
    1028:	b	fd0 <grub_video_reader_png+0x868>
    102c:	mov	x0, x27
    1030:	mov	w1, #0x7                   	// #7
    1034:	bl	4a8 <grub_png_get_bits>
    1038:	add	w0, w0, #0xa
    103c:	b	1024 <grub_video_reader_png+0x8bc>
    1040:	adrp	x0, 0 <grub_png_build_huff_table>
    1044:	ldr	x1, [x0]
    1048:	b	b9c <grub_video_reader_png+0x434>
    104c:	ldr	x20, [x27, #72]
    1050:	cbz	x20, 10cc <grub_video_reader_png+0x964>
    1054:	ldr	x0, [x27, #8]
    1058:	ldr	w1, [x27, #40]
    105c:	ldr	w2, [x27, #64]
    1060:	ldr	x0, [x0]
    1064:	add	x20, x20, w1, sxtw
    1068:	cmp	w2, #0x4
    106c:	ldr	x21, [x0, #80]
    1070:	b.gt	11d0 <grub_video_reader_png+0xa68>
    1074:	ldr	w0, [x27, #48]
    1078:	mov	w3, #0x1                   	// #1
    107c:	lsl	w3, w3, w2
    1080:	sub	w23, w3, #0x1
    1084:	cbz	w0, 112c <grub_video_reader_png+0x9c4>
    1088:	adrp	x0, 0 <grub_png_build_huff_table>
    108c:	sxtw	x2, w2
    1090:	add	x6, sp, #0xe0
    1094:	mov	w5, #0x0                   	// #0
    1098:	ldr	x0, [x0]
    109c:	ldr	w1, [x0]
    10a0:	ldrb	w0, [x0, #4]
    10a4:	str	w1, [sp, #224]
    10a8:	add	x1, sp, #0x100
    10ac:	strb	w0, [sp, #228]
    10b0:	cmp	w5, w3
    10b4:	b.ne	1108 <grub_video_reader_png+0x9a0>  // b.any
    10b8:	mov	w3, #0x0                   	// #0
    10bc:	mov	w7, #0x8                   	// #8
    10c0:	ldr	w0, [x27, #32]
    10c4:	cmp	w3, w0
    10c8:	b.cc	1148 <grub_video_reader_png+0x9e0>  // b.lo, b.ul, b.last
    10cc:	ldr	x0, [x27, #72]
    10d0:	bl	0 <grub_free>
    10d4:	mov	x0, x27
    10d8:	bl	0 <grub_free>
    10dc:	adrp	x0, 0 <grub_png_build_huff_table>
    10e0:	ldr	x20, [x0]
    10e4:	ldr	w0, [x20]
    10e8:	cbz	w0, 10f8 <grub_video_reader_png+0x990>
    10ec:	ldr	x0, [x22]
    10f0:	bl	0 <grub_video_bitmap_destroy>
    10f4:	str	xzr, [x22]
    10f8:	mov	x0, x19
    10fc:	bl	0 <grub_file_close>
    1100:	ldr	w0, [x20]
    1104:	b	7a8 <grub_video_reader_png+0x40>
    1108:	ldrb	w0, [x6, x2]
    110c:	add	x1, x1, #0x3
    1110:	mul	w0, w5, w0
    1114:	add	w5, w5, #0x1
    1118:	and	w0, w0, #0xff
    111c:	sturb	w0, [x1, #-3]
    1120:	sturb	w0, [x1, #-2]
    1124:	sturb	w0, [x1, #-1]
    1128:	b	10b0 <grub_video_reader_png+0x948>
    112c:	mov	w0, #0x3                   	// #3
    1130:	add	x1, x27, #0x650
    1134:	lsl	w2, w0, w2
    1138:	add	x0, sp, #0x100
    113c:	sxtw	x2, w2
    1140:	bl	0 <grub_memmove>
    1144:	b	10b8 <grub_video_reader_png+0x950>
    1148:	ldr	w1, [x27, #64]
    114c:	mov	x6, x20
    1150:	mov	x2, x21
    1154:	mov	w5, #0x0                   	// #0
    1158:	sub	w1, w7, w1
    115c:	ldr	w0, [x27, #28]
    1160:	cmp	w5, w0
    1164:	b.cc	1180 <grub_video_reader_png+0xa18>  // b.lo, b.ul, b.last
    1168:	add	w0, w0, w0, lsl #1
    116c:	add	w3, w3, #0x1
    1170:	add	x21, x21, x0
    1174:	ldrsw	x0, [x27, #60]
    1178:	add	x20, x20, x0
    117c:	b	10c0 <grub_video_reader_png+0x958>
    1180:	ldrb	w0, [x6]
    1184:	asr	w0, w0, w1
    1188:	and	w0, w0, w23
    118c:	ubfiz	x8, x0, #1, #8
    1190:	add	x0, x8, w0, uxtb
    1194:	add	x0, x27, x0
    1198:	ldrb	w8, [x0, #1618]
    119c:	strb	w8, [x2, #2]
    11a0:	ldrb	w8, [x0, #1617]
    11a4:	strb	w8, [x2, #1]
    11a8:	ldrb	w0, [x0, #1616]
    11ac:	strb	w0, [x2]
    11b0:	ldr	w0, [x27, #64]
    11b4:	subs	w1, w1, w0
    11b8:	b.pl	11c4 <grub_video_reader_png+0xa5c>  // b.nfrst
    11bc:	add	x6, x6, #0x1
    11c0:	add	w1, w1, #0x8
    11c4:	add	w5, w5, #0x1
    11c8:	add	x2, x2, #0x3
    11cc:	b	115c <grub_video_reader_png+0x9f4>
    11d0:	ldr	w0, [x27, #56]
    11d4:	cbz	w0, 1234 <grub_video_reader_png+0xacc>
    11d8:	mov	x0, #0x0                   	// #0
    11dc:	b	1220 <grub_video_reader_png+0xab8>
    11e0:	ldrb	w1, [x20, x0]
    11e4:	add	x1, x1, x1, lsl #1
    11e8:	add	x1, x27, x1
    11ec:	ldrb	w1, [x1, #1618]
    11f0:	strb	w1, [x21, #2]
    11f4:	ldrb	w1, [x20, x0]
    11f8:	add	x1, x1, x1, lsl #1
    11fc:	add	x1, x27, x1
    1200:	ldrb	w1, [x1, #1617]
    1204:	strb	w1, [x21, #1]
    1208:	ldrb	w1, [x20, x0]
    120c:	add	x0, x0, #0x1
    1210:	add	x1, x1, x1, lsl #1
    1214:	add	x1, x27, x1
    1218:	ldrb	w1, [x1, #1616]
    121c:	strb	w1, [x21], #3
    1220:	ldp	w1, w2, [x27, #28]
    1224:	mul	w1, w1, w2
    1228:	cmp	w1, w0
    122c:	b.hi	11e0 <grub_video_reader_png+0xa78>  // b.pmore
    1230:	b	10cc <grub_video_reader_png+0x964>
    1234:	ldr	w0, [x27, #48]
    1238:	cbz	w0, 1378 <grub_video_reader_png+0xc10>
    123c:	ldr	w0, [x27, #36]
    1240:	cmp	w0, #0x2
    1244:	b.eq	12a4 <grub_video_reader_png+0xb3c>  // b.none
    1248:	cmp	w0, #0x4
    124c:	b.eq	129c <grub_video_reader_png+0xb34>  // b.none
    1250:	cmp	w0, #0x1
    1254:	b.ne	10cc <grub_video_reader_png+0x964>  // b.any
    1258:	mov	x0, #0x0                   	// #0
    125c:	b	1338 <grub_video_reader_png+0xbd0>
    1260:	ldrb	w0, [x20, #3]
    1264:	add	w1, w1, #0x1
    1268:	strb	w0, [x21, #3]
    126c:	add	x20, x20, #0x4
    1270:	ldurb	w0, [x20, #-1]
    1274:	strb	w0, [x21, #2]
    1278:	ldurb	w0, [x20, #-1]
    127c:	strb	w0, [x21, #1]
    1280:	ldurb	w0, [x20, #-3]
    1284:	strb	w0, [x21], #4
    1288:	ldp	w0, w2, [x27, #28]
    128c:	mul	w0, w0, w2
    1290:	cmp	w1, w0
    1294:	b.cc	1260 <grub_video_reader_png+0xaf8>  // b.lo, b.ul, b.last
    1298:	b	10cc <grub_video_reader_png+0x964>
    129c:	mov	w1, #0x0                   	// #0
    12a0:	b	1288 <grub_video_reader_png+0xb20>
    12a4:	cbnz	w1, 1314 <grub_video_reader_png+0xbac>
    12a8:	ldp	w0, w2, [x27, #28]
    12ac:	mul	w0, w0, w2
    12b0:	cmp	w1, w0
    12b4:	b.cs	10cc <grub_video_reader_png+0x964>  // b.hs, b.nlast
    12b8:	ldrb	w0, [x20, #1]
    12bc:	add	w1, w1, #0x1
    12c0:	strb	w0, [x21, #3]
    12c4:	ldrb	w0, [x20, #1]
    12c8:	strb	w0, [x21, #2]
    12cc:	ldrb	w0, [x20, #1]
    12d0:	strb	w0, [x21, #1]
    12d4:	ldrb	w0, [x20], #2
    12d8:	strb	w0, [x21], #4
    12dc:	b	12a8 <grub_video_reader_png+0xb40>
    12e0:	ldrb	w0, [x20, #1]
    12e4:	add	w1, w1, #0x1
    12e8:	strb	w0, [x21, #2]
    12ec:	add	x20, x20, #0x2
    12f0:	ldurb	w0, [x20, #-1]
    12f4:	strb	w0, [x21, #1]
    12f8:	ldurb	w0, [x20, #-1]
    12fc:	strb	w0, [x21], #4
    1300:	ldp	w0, w2, [x27, #28]
    1304:	mul	w0, w0, w2
    1308:	cmp	w1, w0
    130c:	b.cc	12e0 <grub_video_reader_png+0xb78>  // b.lo, b.ul, b.last
    1310:	b	10cc <grub_video_reader_png+0x964>
    1314:	mov	w1, #0x0                   	// #0
    1318:	b	1300 <grub_video_reader_png+0xb98>
    131c:	ldrb	w1, [x20, x0]
    1320:	strb	w1, [x21, #2]
    1324:	ldrb	w1, [x20, x0]
    1328:	strb	w1, [x21, #1]
    132c:	ldrb	w1, [x20, x0]
    1330:	add	x0, x0, #0x1
    1334:	strb	w1, [x21], #3
    1338:	ldp	w1, w2, [x27, #28]
    133c:	mul	w1, w1, w2
    1340:	cmp	w1, w0
    1344:	b.hi	131c <grub_video_reader_png+0xbb4>  // b.pmore
    1348:	b	10cc <grub_video_reader_png+0x964>
    134c:	lsl	x1, x0, #1
    1350:	ldrb	w1, [x20, x1]
    1354:	strb	w1, [x21, x0]
    1358:	add	x0, x0, #0x1
    135c:	ldp	w1, w2, [x27, #28]
    1360:	mul	w1, w1, w2
    1364:	ldr	w2, [x27, #36]
    1368:	mul	w1, w1, w2
    136c:	cmp	w0, w1, lsr #1
    1370:	b.cc	134c <grub_video_reader_png+0xbe4>  // b.lo, b.ul, b.last
    1374:	b	10cc <grub_video_reader_png+0x964>
    1378:	mov	x0, #0x0                   	// #0
    137c:	b	135c <grub_video_reader_png+0xbf4>
	...

00000000000013f8 <grub_mod_init>:
    13f8:	adrp	x0, 0 <grub_png_build_huff_table>
    13fc:	ldr	x0, [x0]
    1400:	b	0 <grub_video_bitmap_reader_register>
    1404:	nop
	...

0000000000001410 <grub_mod_fini>:
    1410:	adrp	x0, 0 <grub_png_build_huff_table>
    1414:	ldr	x0, [x0]
    1418:	b	0 <grub_video_bitmap_reader_unregister>
    141c:	nop
	...
