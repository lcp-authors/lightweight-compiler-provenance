
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fnmatch.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000790 <.init>:
 790:	stp	x29, x30, [sp, #-16]!
 794:	mov	x29, sp
 798:	bl	870 <fprintf@plt+0x10>
 79c:	ldp	x29, x30, [sp], #16
 7a0:	ret

Disassembly of section .plt:

00000000000007b0 <memcpy@plt-0x20>:
 7b0:	stp	x16, x30, [sp, #-16]!
 7b4:	adrp	x16, 11000 <dl_load@@Base+0xffe4>
 7b8:	ldr	x17, [x16, #4088]
 7bc:	add	x16, x16, #0xff8
 7c0:	br	x17
 7c4:	nop
 7c8:	nop
 7cc:	nop

00000000000007d0 <memcpy@plt>:
 7d0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7d4:	ldr	x17, [x16]
 7d8:	add	x16, x16, #0x0
 7dc:	br	x17

00000000000007e0 <strlen@plt>:
 7e0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #8]
 7e8:	add	x16, x16, #0x8
 7ec:	br	x17

00000000000007f0 <exit@plt>:
 7f0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #16]
 7f8:	add	x16, x16, #0x10
 7fc:	br	x17

0000000000000800 <__cxa_finalize@plt>:
 800:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 804:	ldr	x17, [x16, #24]
 808:	add	x16, x16, #0x18
 80c:	br	x17

0000000000000810 <memset@plt>:
 810:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 814:	ldr	x17, [x16, #32]
 818:	add	x16, x16, #0x20
 81c:	br	x17

0000000000000820 <__gmon_start__@plt>:
 820:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 824:	ldr	x17, [x16, #40]
 828:	add	x16, x16, #0x28
 82c:	br	x17

0000000000000830 <fwrite@plt>:
 830:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 834:	ldr	x17, [x16, #48]
 838:	add	x16, x16, #0x30
 83c:	br	x17

0000000000000840 <fnmatch@plt>:
 840:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 844:	ldr	x17, [x16, #56]
 848:	add	x16, x16, #0x38
 84c:	br	x17

0000000000000850 <gettext@plt>:
 850:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 854:	ldr	x17, [x16, #64]
 858:	add	x16, x16, #0x40
 85c:	br	x17

0000000000000860 <fprintf@plt>:
 860:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 864:	ldr	x17, [x16, #72]
 868:	add	x16, x16, #0x48
 86c:	br	x17

Disassembly of section .text:

0000000000000870 <dl_load@@Base-0x7ac>:
     870:	adrp	x0, 11000 <dl_load@@Base+0xffe4>
     874:	ldr	x0, [x0, #4056]
     878:	cbz	x0, 880 <fprintf@plt+0x20>
     87c:	b	820 <__gmon_start__@plt>
     880:	ret
     884:	stp	x29, x30, [sp, #-32]!
     888:	mov	x29, sp
     88c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     890:	add	x0, x0, #0x110
     894:	str	x0, [sp, #24]
     898:	ldr	x0, [sp, #24]
     89c:	str	x0, [sp, #24]
     8a0:	ldr	x1, [sp, #24]
     8a4:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     8a8:	add	x0, x0, #0x110
     8ac:	cmp	x1, x0
     8b0:	b.eq	8e8 <fprintf@plt+0x88>  // b.none
     8b4:	adrp	x0, 11000 <dl_load@@Base+0xffe4>
     8b8:	ldr	x0, [x0, #4032]
     8bc:	str	x0, [sp, #16]
     8c0:	ldr	x0, [sp, #16]
     8c4:	str	x0, [sp, #16]
     8c8:	ldr	x0, [sp, #16]
     8cc:	cmp	x0, #0x0
     8d0:	b.eq	8ec <fprintf@plt+0x8c>  // b.none
     8d4:	ldr	x1, [sp, #16]
     8d8:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     8dc:	add	x0, x0, #0x110
     8e0:	blr	x1
     8e4:	b	8ec <fprintf@plt+0x8c>
     8e8:	nop
     8ec:	ldp	x29, x30, [sp], #32
     8f0:	ret
     8f4:	stp	x29, x30, [sp, #-48]!
     8f8:	mov	x29, sp
     8fc:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     900:	add	x0, x0, #0x110
     904:	str	x0, [sp, #40]
     908:	ldr	x0, [sp, #40]
     90c:	str	x0, [sp, #40]
     910:	ldr	x1, [sp, #40]
     914:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     918:	add	x0, x0, #0x110
     91c:	sub	x0, x1, x0
     920:	asr	x0, x0, #3
     924:	lsr	x1, x0, #63
     928:	add	x0, x1, x0
     92c:	asr	x0, x0, #1
     930:	str	x0, [sp, #32]
     934:	ldr	x0, [sp, #32]
     938:	cmp	x0, #0x0
     93c:	b.eq	978 <fprintf@plt+0x118>  // b.none
     940:	adrp	x0, 11000 <dl_load@@Base+0xffe4>
     944:	ldr	x0, [x0, #4064]
     948:	str	x0, [sp, #24]
     94c:	ldr	x0, [sp, #24]
     950:	str	x0, [sp, #24]
     954:	ldr	x0, [sp, #24]
     958:	cmp	x0, #0x0
     95c:	b.eq	97c <fprintf@plt+0x11c>  // b.none
     960:	ldr	x2, [sp, #24]
     964:	ldr	x1, [sp, #32]
     968:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     96c:	add	x0, x0, #0x110
     970:	blr	x2
     974:	b	97c <fprintf@plt+0x11c>
     978:	nop
     97c:	ldp	x29, x30, [sp], #48
     980:	ret
     984:	stp	x29, x30, [sp, #-16]!
     988:	mov	x29, sp
     98c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     990:	add	x0, x0, #0x110
     994:	ldrb	w0, [x0]
     998:	and	x0, x0, #0xff
     99c:	cmp	x0, #0x0
     9a0:	b.ne	9dc <fprintf@plt+0x17c>  // b.any
     9a4:	adrp	x0, 11000 <dl_load@@Base+0xffe4>
     9a8:	ldr	x0, [x0, #4040]
     9ac:	cmp	x0, #0x0
     9b0:	b.eq	9c4 <fprintf@plt+0x164>  // b.none
     9b4:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     9b8:	add	x0, x0, #0x50
     9bc:	ldr	x0, [x0]
     9c0:	bl	800 <__cxa_finalize@plt>
     9c4:	bl	884 <fprintf@plt+0x24>
     9c8:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     9cc:	add	x0, x0, #0x110
     9d0:	mov	w1, #0x1                   	// #1
     9d4:	strb	w1, [x0]
     9d8:	b	9e0 <fprintf@plt+0x180>
     9dc:	nop
     9e0:	ldp	x29, x30, [sp], #16
     9e4:	ret
     9e8:	stp	x29, x30, [sp, #-16]!
     9ec:	mov	x29, sp
     9f0:	bl	8f4 <fprintf@plt+0x94>
     9f4:	nop
     9f8:	ldp	x29, x30, [sp], #16
     9fc:	ret
     a00:	stp	x29, x30, [sp, #-80]!
     a04:	mov	x29, sp
     a08:	str	x0, [sp, #56]
     a0c:	str	x1, [sp, #48]
     a10:	str	x2, [sp, #40]
     a14:	str	x3, [sp, #32]
     a18:	str	w4, [sp, #28]
     a1c:	str	x5, [sp, #16]
     a20:	str	w6, [sp, #24]
     a24:	str	xzr, [sp, #72]
     a28:	mov	x2, #0x20                  	// #32
     a2c:	mov	w1, #0x0                   	// #0
     a30:	ldr	x0, [sp, #16]
     a34:	bl	810 <memset@plt>
     a38:	ldr	x0, [sp, #16]
     a3c:	ldr	w1, [sp, #24]
     a40:	str	w1, [x0]
     a44:	ldr	x0, [sp, #16]
     a48:	ldr	x1, [sp, #32]
     a4c:	str	x1, [x0, #16]
     a50:	ldr	w0, [sp, #28]
     a54:	cmp	w0, #0x0
     a58:	b.eq	adc <fprintf@plt+0x27c>  // b.none
     a5c:	ldr	x0, [sp, #56]
     a60:	ldr	x1, [x0, #280]
     a64:	ldr	x0, [sp, #32]
     a68:	add	x0, x0, #0x1
     a6c:	blr	x1
     a70:	str	x0, [sp, #72]
     a74:	ldr	x0, [sp, #72]
     a78:	cmp	x0, #0x0
     a7c:	b.ne	aac <fprintf@plt+0x24c>  // b.any
     a80:	ldr	x0, [sp, #56]
     a84:	ldr	x4, [x0, #96]
     a88:	ldr	x0, [sp, #32]
     a8c:	add	x0, x0, #0x1
     a90:	mov	x3, x0
     a94:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     a98:	add	x2, x0, #0x2e8
     a9c:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     aa0:	add	x1, x0, #0x2f8
     aa4:	ldr	x0, [sp, #48]
     aa8:	blr	x4
     aac:	ldr	x2, [sp, #32]
     ab0:	ldr	x1, [sp, #40]
     ab4:	ldr	x0, [sp, #72]
     ab8:	bl	7d0 <memcpy@plt>
     abc:	ldr	x1, [sp, #72]
     ac0:	ldr	x0, [sp, #32]
     ac4:	add	x0, x1, x0
     ac8:	strb	wzr, [x0]
     acc:	ldr	x0, [sp, #16]
     ad0:	ldr	x1, [sp, #72]
     ad4:	str	x1, [x0, #8]
     ad8:	b	ae8 <fprintf@plt+0x288>
     adc:	ldr	x0, [sp, #16]
     ae0:	ldr	x1, [sp, #40]
     ae4:	str	x1, [x0, #8]
     ae8:	ldr	x0, [sp, #16]
     aec:	ldp	x29, x30, [sp], #80
     af0:	ret
     af4:	stp	x29, x30, [sp, #-64]!
     af8:	mov	x29, sp
     afc:	str	x0, [sp, #56]
     b00:	str	x1, [sp, #48]
     b04:	str	x2, [sp, #40]
     b08:	str	x3, [sp, #32]
     b0c:	str	w4, [sp, #28]
     b10:	str	x5, [sp, #16]
     b14:	mov	w6, #0x2                   	// #2
     b18:	ldr	x5, [sp, #16]
     b1c:	ldr	w4, [sp, #28]
     b20:	ldr	x3, [sp, #32]
     b24:	ldr	x2, [sp, #40]
     b28:	ldr	x1, [sp, #48]
     b2c:	ldr	x0, [sp, #56]
     b30:	bl	a00 <fprintf@plt+0x1a0>
     b34:	ldp	x29, x30, [sp], #64
     b38:	ret
     b3c:	sub	sp, sp, #0x10
     b40:	str	d0, [sp, #8]
     b44:	str	x0, [sp]
     b48:	ldr	x0, [sp]
     b4c:	mov	w1, #0x1                   	// #1
     b50:	str	w1, [x0]
     b54:	ldr	x0, [sp]
     b58:	ldr	d0, [sp, #8]
     b5c:	str	d0, [x0, #8]
     b60:	ldr	x0, [sp]
     b64:	str	wzr, [x0, #16]
     b68:	ldr	x0, [sp]
     b6c:	add	sp, sp, #0x10
     b70:	ret
     b74:	stp	x29, x30, [sp, #-176]!
     b78:	mov	x29, sp
     b7c:	stp	x19, x20, [sp, #16]
     b80:	str	w0, [sp, #60]
     b84:	str	x1, [sp, #48]
     b88:	str	x2, [sp, #40]
     b8c:	ldr	x0, [sp, #48]
     b90:	fmov	d0, #-1.000000000000000000e+00
     b94:	bl	b3c <fprintf@plt+0x2dc>
     b98:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     b9c:	add	x0, x0, #0x118
     ba0:	ldr	x0, [x0]
     ba4:	ldr	x4, [x0, #152]
     ba8:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     bac:	add	x0, x0, #0x120
     bb0:	ldr	x0, [x0]
     bb4:	add	x1, sp, #0x88
     bb8:	mov	x3, x1
     bbc:	mov	w2, #0x2                   	// #2
     bc0:	mov	x1, #0x0                   	// #0
     bc4:	blr	x4
     bc8:	cmp	w0, #0x0
     bcc:	b.ne	c08 <fprintf@plt+0x3a8>  // b.any
     bd0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     bd4:	add	x0, x0, #0x118
     bd8:	ldr	x0, [x0]
     bdc:	ldr	x19, [x0, #104]
     be0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     be4:	add	x0, x0, #0x120
     be8:	ldr	x20, [x0]
     bec:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     bf0:	add	x0, x0, #0x338
     bf4:	bl	850 <gettext@plt>
     bf8:	mov	x1, x0
     bfc:	mov	x0, x20
     c00:	blr	x19
     c04:	b	d30 <fprintf@plt+0x4d0>
     c08:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     c0c:	add	x0, x0, #0x118
     c10:	ldr	x0, [x0]
     c14:	ldr	x4, [x0, #152]
     c18:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     c1c:	add	x0, x0, #0x120
     c20:	ldr	x0, [x0]
     c24:	add	x1, sp, #0x68
     c28:	mov	x3, x1
     c2c:	mov	w2, #0x2                   	// #2
     c30:	mov	x1, #0x1                   	// #1
     c34:	blr	x4
     c38:	cmp	w0, #0x0
     c3c:	b.ne	c78 <fprintf@plt+0x418>  // b.any
     c40:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     c44:	add	x0, x0, #0x118
     c48:	ldr	x0, [x0]
     c4c:	ldr	x19, [x0, #104]
     c50:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     c54:	add	x0, x0, #0x120
     c58:	ldr	x20, [x0]
     c5c:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     c60:	add	x0, x0, #0x360
     c64:	bl	850 <gettext@plt>
     c68:	mov	x1, x0
     c6c:	mov	x0, x20
     c70:	blr	x19
     c74:	b	d30 <fprintf@plt+0x4d0>
     c78:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     c7c:	add	x0, x0, #0x118
     c80:	ldr	x0, [x0]
     c84:	ldr	x4, [x0, #152]
     c88:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     c8c:	add	x0, x0, #0x120
     c90:	ldr	x0, [x0]
     c94:	add	x1, sp, #0x48
     c98:	mov	x3, x1
     c9c:	mov	w2, #0x1                   	// #1
     ca0:	mov	x1, #0x2                   	// #2
     ca4:	blr	x4
     ca8:	cmp	w0, #0x0
     cac:	b.ne	ce8 <fprintf@plt+0x488>  // b.any
     cb0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     cb4:	add	x0, x0, #0x118
     cb8:	ldr	x0, [x0]
     cbc:	ldr	x19, [x0, #104]
     cc0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     cc4:	add	x0, x0, #0x120
     cc8:	ldr	x20, [x0]
     ccc:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     cd0:	add	x0, x0, #0x388
     cd4:	bl	850 <gettext@plt>
     cd8:	mov	x1, x0
     cdc:	mov	x0, x20
     ce0:	blr	x19
     ce4:	b	d30 <fprintf@plt+0x4d0>
     ce8:	ldr	d0, [sp, #80]
     cec:	fcvtzs	w0, d0
     cf0:	str	w0, [sp, #172]
     cf4:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     cf8:	add	x0, x0, #0x58
     cfc:	ldr	w0, [x0]
     d00:	ldr	w1, [sp, #172]
     d04:	and	w0, w1, w0
     d08:	str	w0, [sp, #172]
     d0c:	ldr	x0, [sp, #144]
     d10:	ldr	x1, [sp, #112]
     d14:	ldr	w2, [sp, #172]
     d18:	bl	840 <fnmatch@plt>
     d1c:	str	w0, [sp, #168]
     d20:	ldr	w0, [sp, #168]
     d24:	scvtf	d0, w0
     d28:	ldr	x0, [sp, #48]
     d2c:	bl	b3c <fprintf@plt+0x2dc>
     d30:	ldr	x0, [sp, #48]
     d34:	ldp	x19, x20, [sp, #16]
     d38:	ldp	x29, x30, [sp], #176
     d3c:	ret
     d40:	stp	x29, x30, [sp, #-160]!
     d44:	mov	x29, sp
     d48:	stp	x19, x20, [sp, #16]
     d4c:	str	x21, [sp, #32]
     d50:	str	wzr, [sp, #156]
     d54:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     d58:	add	x0, x0, #0x118
     d5c:	ldr	x0, [x0]
     d60:	ldr	x19, [x0, #176]
     d64:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     d68:	add	x0, x0, #0x120
     d6c:	ldr	x20, [x0]
     d70:	add	x0, sp, #0x50
     d74:	fmov	d0, #1.000000000000000000e+00
     d78:	bl	b3c <fprintf@plt+0x2dc>
     d7c:	mov	x3, x0
     d80:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     d84:	add	x2, x0, #0x408
     d88:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     d8c:	add	x1, x0, #0x418
     d90:	mov	x0, x20
     d94:	blr	x19
     d98:	cmp	w0, #0x0
     d9c:	b.ne	de0 <fprintf@plt+0x580>  // b.any
     da0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     da4:	add	x0, x0, #0x118
     da8:	ldr	x0, [x0]
     dac:	ldr	x19, [x0, #104]
     db0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     db4:	add	x0, x0, #0x120
     db8:	ldr	x20, [x0]
     dbc:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     dc0:	add	x0, x0, #0x420
     dc4:	bl	850 <gettext@plt>
     dc8:	mov	x1, x0
     dcc:	mov	x0, x20
     dd0:	blr	x19
     dd4:	ldr	w0, [sp, #156]
     dd8:	add	w0, w0, #0x1
     ddc:	str	w0, [sp, #156]
     de0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     de4:	add	x0, x0, #0x118
     de8:	ldr	x0, [x0]
     dec:	ldr	x1, [x0, #248]
     df0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     df4:	add	x0, x0, #0x120
     df8:	ldr	x0, [x0]
     dfc:	blr	x1
     e00:	str	x0, [sp, #144]
     e04:	str	wzr, [sp, #152]
     e08:	b	f48 <fprintf@plt+0x6e8>
     e0c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     e10:	add	x0, x0, #0x118
     e14:	ldr	x19, [x0]
     e18:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     e1c:	add	x0, x0, #0x120
     e20:	ldr	x20, [x0]
     e24:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     e28:	add	x1, x0, #0x70
     e2c:	ldrsw	x0, [sp, #152]
     e30:	lsl	x0, x0, #4
     e34:	add	x0, x1, x0
     e38:	ldr	x21, [x0]
     e3c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     e40:	add	x1, x0, #0x70
     e44:	ldrsw	x0, [sp, #152]
     e48:	lsl	x0, x0, #4
     e4c:	add	x0, x1, x0
     e50:	ldr	x0, [x0]
     e54:	bl	7e0 <strlen@plt>
     e58:	mov	x1, x0
     e5c:	add	x0, sp, #0x70
     e60:	mov	x5, x0
     e64:	mov	w4, #0x1                   	// #1
     e68:	mov	x3, x1
     e6c:	mov	x2, x21
     e70:	mov	x1, x20
     e74:	mov	x0, x19
     e78:	bl	af4 <fprintf@plt+0x294>
     e7c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     e80:	add	x1, x0, #0x70
     e84:	ldrsw	x0, [sp, #152]
     e88:	lsl	x0, x0, #4
     e8c:	add	x0, x1, x0
     e90:	ldr	w0, [x0, #8]
     e94:	scvtf	d0, w0
     e98:	add	x0, sp, #0x50
     e9c:	bl	b3c <fprintf@plt+0x2dc>
     ea0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     ea4:	add	x0, x0, #0x118
     ea8:	ldr	x0, [x0]
     eac:	ldr	x4, [x0, #232]
     eb0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     eb4:	add	x0, x0, #0x120
     eb8:	ldr	x0, [x0]
     ebc:	add	x2, sp, #0x50
     ec0:	add	x1, sp, #0x70
     ec4:	mov	x3, x2
     ec8:	mov	x2, x1
     ecc:	ldr	x1, [sp, #144]
     ed0:	blr	x4
     ed4:	cmp	w0, #0x0
     ed8:	b.ne	f3c <fprintf@plt+0x6dc>  // b.any
     edc:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     ee0:	add	x0, x0, #0x118
     ee4:	ldr	x0, [x0]
     ee8:	ldr	x19, [x0, #104]
     eec:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     ef0:	add	x0, x0, #0x120
     ef4:	ldr	x20, [x0]
     ef8:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     efc:	add	x0, x0, #0x458
     f00:	bl	850 <gettext@plt>
     f04:	mov	x3, x0
     f08:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     f0c:	add	x1, x0, #0x70
     f10:	ldrsw	x0, [sp, #152]
     f14:	lsl	x0, x0, #4
     f18:	add	x0, x1, x0
     f1c:	ldr	x0, [x0]
     f20:	mov	x2, x0
     f24:	mov	x1, x3
     f28:	mov	x0, x20
     f2c:	blr	x19
     f30:	ldr	w0, [sp, #156]
     f34:	add	w0, w0, #0x1
     f38:	str	w0, [sp, #156]
     f3c:	ldr	w0, [sp, #152]
     f40:	add	w0, w0, #0x1
     f44:	str	w0, [sp, #152]
     f48:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     f4c:	add	x1, x0, #0x70
     f50:	ldrsw	x0, [sp, #152]
     f54:	lsl	x0, x0, #4
     f58:	add	x0, x1, x0
     f5c:	ldr	x0, [x0]
     f60:	cmp	x0, #0x0
     f64:	b.ne	e0c <fprintf@plt+0x5ac>  // b.any
     f68:	mov	w0, #0x5                   	// #5
     f6c:	str	w0, [sp, #48]
     f70:	ldr	x0, [sp, #144]
     f74:	str	x0, [sp, #56]
     f78:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     f7c:	add	x0, x0, #0x118
     f80:	ldr	x0, [x0]
     f84:	ldr	x4, [x0, #176]
     f88:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     f8c:	add	x0, x0, #0x120
     f90:	ldr	x5, [x0]
     f94:	add	x0, sp, #0x30
     f98:	mov	x3, x0
     f9c:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     fa0:	add	x2, x0, #0x488
     fa4:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     fa8:	add	x1, x0, #0x418
     fac:	mov	x0, x5
     fb0:	blr	x4
     fb4:	cmp	w0, #0x0
     fb8:	b.ne	ffc <fprintf@plt+0x79c>  // b.any
     fbc:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     fc0:	add	x0, x0, #0x118
     fc4:	ldr	x0, [x0]
     fc8:	ldr	x19, [x0, #104]
     fcc:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
     fd0:	add	x0, x0, #0x120
     fd4:	ldr	x20, [x0]
     fd8:	adrp	x0, 1000 <fprintf@plt+0x7a0>
     fdc:	add	x0, x0, #0x490
     fe0:	bl	850 <gettext@plt>
     fe4:	mov	x1, x0
     fe8:	mov	x0, x20
     fec:	blr	x19
     ff0:	ldr	w0, [sp, #156]
     ff4:	add	w0, w0, #0x1
     ff8:	str	w0, [sp, #156]
     ffc:	ldr	w0, [sp, #156]
    1000:	cmp	w0, #0x0
    1004:	cset	w0, eq  // eq = none
    1008:	and	w0, w0, #0xff
    100c:	ldp	x19, x20, [sp, #16]
    1010:	ldr	x21, [sp, #32]
    1014:	ldp	x29, x30, [sp], #160
    1018:	ret

000000000000101c <dl_load@@Base>:
    101c:	stp	x29, x30, [sp, #-64]!
    1020:	mov	x29, sp
    1024:	str	x0, [sp, #24]
    1028:	str	x1, [sp, #16]
    102c:	str	wzr, [sp, #52]
    1030:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1034:	add	x0, x0, #0x118
    1038:	ldr	x1, [sp, #24]
    103c:	str	x1, [x0]
    1040:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1044:	add	x0, x0, #0x120
    1048:	ldr	x1, [sp, #16]
    104c:	str	x1, [x0]
    1050:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1054:	add	x0, x0, #0x118
    1058:	ldr	x0, [x0]
    105c:	ldr	w0, [x0]
    1060:	cmp	w0, #0x2
    1064:	b.ne	1080 <dl_load@@Base+0x64>  // b.any
    1068:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    106c:	add	x0, x0, #0x118
    1070:	ldr	x0, [x0]
    1074:	ldr	w0, [x0, #4]
    1078:	cmp	w0, #0x0
    107c:	b.ge	10f8 <dl_load@@Base+0xdc>  // b.tcont
    1080:	adrp	x0, 11000 <dl_load@@Base+0xffe4>
    1084:	ldr	x0, [x0, #4048]
    1088:	ldr	x0, [x0]
    108c:	mov	x3, x0
    1090:	mov	x2, #0x25                  	// #37
    1094:	mov	x1, #0x1                   	// #1
    1098:	adrp	x0, 1000 <fprintf@plt+0x7a0>
    109c:	add	x0, x0, #0x4c8
    10a0:	bl	830 <fwrite@plt>
    10a4:	adrp	x0, 11000 <dl_load@@Base+0xffe4>
    10a8:	ldr	x0, [x0, #4048]
    10ac:	ldr	x6, [x0]
    10b0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    10b4:	add	x0, x0, #0x118
    10b8:	ldr	x0, [x0]
    10bc:	ldr	w1, [x0]
    10c0:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    10c4:	add	x0, x0, #0x118
    10c8:	ldr	x0, [x0]
    10cc:	ldr	w0, [x0, #4]
    10d0:	mov	w5, w0
    10d4:	mov	w4, w1
    10d8:	mov	w3, #0x0                   	// #0
    10dc:	mov	w2, #0x2                   	// #2
    10e0:	adrp	x0, 1000 <fprintf@plt+0x7a0>
    10e4:	add	x1, x0, #0x4f0
    10e8:	mov	x0, x6
    10ec:	bl	860 <fprintf@plt>
    10f0:	mov	w0, #0x1                   	// #1
    10f4:	bl	7f0 <exit@plt>
    10f8:	str	xzr, [sp, #56]
    10fc:	mov	x0, #0x1                   	// #1
    1100:	str	x0, [sp, #40]
    1104:	b	11f8 <dl_load@@Base+0x1dc>
    1108:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    110c:	add	x2, x0, #0xe0
    1110:	ldr	x1, [sp, #56]
    1114:	mov	x0, x1
    1118:	lsl	x0, x0, #1
    111c:	add	x0, x0, x1
    1120:	lsl	x0, x0, #4
    1124:	add	x0, x2, x0
    1128:	ldr	x0, [x0]
    112c:	cmp	x0, #0x0
    1130:	b.eq	120c <dl_load@@Base+0x1f0>  // b.none
    1134:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1138:	add	x0, x0, #0x118
    113c:	ldr	x0, [x0]
    1140:	ldr	x3, [x0, #48]
    1144:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1148:	add	x0, x0, #0x120
    114c:	ldr	x4, [x0]
    1150:	ldr	x1, [sp, #56]
    1154:	mov	x0, x1
    1158:	lsl	x0, x0, #1
    115c:	add	x0, x0, x1
    1160:	lsl	x0, x0, #4
    1164:	adrp	x1, 12000 <dl_load@@Base+0x10fe4>
    1168:	add	x1, x1, #0xe0
    116c:	add	x0, x0, x1
    1170:	mov	x2, x0
    1174:	adrp	x0, 1000 <fprintf@plt+0x7a0>
    1178:	add	x1, x0, #0x418
    117c:	mov	x0, x4
    1180:	blr	x3
    1184:	cmp	w0, #0x0
    1188:	b.ne	11ec <dl_load@@Base+0x1d0>  // b.any
    118c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1190:	add	x0, x0, #0x118
    1194:	ldr	x0, [x0]
    1198:	ldr	x3, [x0, #104]
    119c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    11a0:	add	x0, x0, #0x120
    11a4:	ldr	x4, [x0]
    11a8:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    11ac:	add	x2, x0, #0xe0
    11b0:	ldr	x1, [sp, #56]
    11b4:	mov	x0, x1
    11b8:	lsl	x0, x0, #1
    11bc:	add	x0, x0, x1
    11c0:	lsl	x0, x0, #4
    11c4:	add	x0, x2, x0
    11c8:	ldr	x0, [x0]
    11cc:	mov	x2, x0
    11d0:	adrp	x0, 1000 <fprintf@plt+0x7a0>
    11d4:	add	x1, x0, #0x528
    11d8:	mov	x0, x4
    11dc:	blr	x3
    11e0:	ldr	w0, [sp, #52]
    11e4:	add	w0, w0, #0x1
    11e8:	str	w0, [sp, #52]
    11ec:	ldr	x0, [sp, #56]
    11f0:	add	x0, x0, #0x1
    11f4:	str	x0, [sp, #56]
    11f8:	ldr	x1, [sp, #56]
    11fc:	ldr	x0, [sp, #40]
    1200:	cmp	x1, x0
    1204:	b.cc	1108 <dl_load@@Base+0xec>  // b.lo, b.ul, b.last
    1208:	b	1210 <dl_load@@Base+0x1f4>
    120c:	nop
    1210:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1214:	add	x0, x0, #0x68
    1218:	ldr	x0, [x0]
    121c:	cmp	x0, #0x0
    1220:	b.eq	1274 <dl_load@@Base+0x258>  // b.none
    1224:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1228:	add	x0, x0, #0x68
    122c:	ldr	x0, [x0]
    1230:	blr	x0
    1234:	cmp	w0, #0x0
    1238:	b.ne	1274 <dl_load@@Base+0x258>  // b.any
    123c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1240:	add	x0, x0, #0x118
    1244:	ldr	x0, [x0]
    1248:	ldr	x2, [x0, #104]
    124c:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1250:	add	x0, x0, #0x120
    1254:	ldr	x3, [x0]
    1258:	adrp	x0, 1000 <fprintf@plt+0x7a0>
    125c:	add	x1, x0, #0x548
    1260:	mov	x0, x3
    1264:	blr	x2
    1268:	ldr	w0, [sp, #52]
    126c:	add	w0, w0, #0x1
    1270:	str	w0, [sp, #52]
    1274:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    1278:	add	x0, x0, #0x60
    127c:	ldr	x0, [x0]
    1280:	cmp	x0, #0x0
    1284:	b.eq	12bc <dl_load@@Base+0x2a0>  // b.none
    1288:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    128c:	add	x0, x0, #0x118
    1290:	ldr	x0, [x0]
    1294:	ldr	x2, [x0, #88]
    1298:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    129c:	add	x0, x0, #0x120
    12a0:	ldr	x3, [x0]
    12a4:	adrp	x0, 12000 <dl_load@@Base+0x10fe4>
    12a8:	add	x0, x0, #0x60
    12ac:	ldr	x0, [x0]
    12b0:	mov	x1, x0
    12b4:	mov	x0, x3
    12b8:	blr	x2
    12bc:	ldr	w0, [sp, #52]
    12c0:	cmp	w0, #0x0
    12c4:	cset	w0, eq  // eq = none
    12c8:	and	w0, w0, #0xff
    12cc:	ldp	x29, x30, [sp], #64
    12d0:	ret

Disassembly of section .fini:

00000000000012d4 <.fini>:
    12d4:	stp	x29, x30, [sp, #-16]!
    12d8:	mov	x29, sp
    12dc:	ldp	x29, x30, [sp], #16
    12e0:	ret
