In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libe2p.a_gcc_-O0:

feature.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_feature2string>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	w1, [sp, #24]
  10:	adrp	x0, 0 <e2p_feature2string>
  14:	add	x0, x0, #0x0
  18:	str	x0, [sp, #40]
  1c:	b	60 <e2p_feature2string+0x60>
  20:	ldr	x0, [sp, #40]
  24:	ldr	w0, [x0]
  28:	ldr	w1, [sp, #28]
  2c:	cmp	w1, w0
  30:	b.ne	54 <e2p_feature2string+0x54>  // b.any
  34:	ldr	x0, [sp, #40]
  38:	ldr	w0, [x0, #4]
  3c:	ldr	w1, [sp, #24]
  40:	cmp	w1, w0
  44:	b.ne	54 <e2p_feature2string+0x54>  // b.any
  48:	ldr	x0, [sp, #40]
  4c:	ldr	x0, [x0, #8]
  50:	b	128 <e2p_feature2string+0x128>
  54:	ldr	x0, [sp, #40]
  58:	add	x0, x0, #0x10
  5c:	str	x0, [sp, #40]
  60:	ldr	x0, [sp, #40]
  64:	ldr	x0, [x0, #8]
  68:	cmp	x0, #0x0
  6c:	b.ne	20 <e2p_feature2string+0x20>  // b.any
  70:	ldr	w0, [sp, #28]
  74:	cmp	w0, #0x2
  78:	b.eq	bc <e2p_feature2string+0xbc>  // b.none
  7c:	ldr	w0, [sp, #28]
  80:	cmp	w0, #0x2
  84:	b.gt	c8 <e2p_feature2string+0xc8>
  88:	ldr	w0, [sp, #28]
  8c:	cmp	w0, #0x0
  90:	b.eq	a4 <e2p_feature2string+0xa4>  // b.none
  94:	ldr	w0, [sp, #28]
  98:	cmp	w0, #0x1
  9c:	b.eq	b0 <e2p_feature2string+0xb0>  // b.none
  a0:	b	c8 <e2p_feature2string+0xc8>
  a4:	mov	w0, #0x43                  	// #67
  a8:	strb	w0, [sp, #39]
  ac:	b	d4 <e2p_feature2string+0xd4>
  b0:	mov	w0, #0x49                  	// #73
  b4:	strb	w0, [sp, #39]
  b8:	b	d4 <e2p_feature2string+0xd4>
  bc:	mov	w0, #0x52                  	// #82
  c0:	strb	w0, [sp, #39]
  c4:	b	d4 <e2p_feature2string+0xd4>
  c8:	mov	w0, #0x3f                  	// #63
  cc:	strb	w0, [sp, #39]
  d0:	nop
  d4:	str	wzr, [sp, #32]
  d8:	b	e8 <e2p_feature2string+0xe8>
  dc:	ldr	w0, [sp, #32]
  e0:	add	w0, w0, #0x1
  e4:	str	w0, [sp, #32]
  e8:	ldr	w0, [sp, #24]
  ec:	lsr	w0, w0, #1
  f0:	str	w0, [sp, #24]
  f4:	ldr	w0, [sp, #24]
  f8:	cmp	w0, #0x0
  fc:	b.ne	dc <e2p_feature2string+0xdc>  // b.any
 100:	ldrb	w0, [sp, #39]
 104:	ldr	w3, [sp, #32]
 108:	mov	w2, w0
 10c:	adrp	x0, 0 <e2p_feature2string>
 110:	add	x1, x0, #0x0
 114:	adrp	x0, 0 <e2p_feature2string>
 118:	add	x0, x0, #0x0
 11c:	bl	0 <sprintf>
 120:	adrp	x0, 0 <e2p_feature2string>
 124:	add	x0, x0, #0x0
 128:	ldp	x29, x30, [sp], #48
 12c:	ret

0000000000000130 <e2p_string2feature>:
 130:	stp	x29, x30, [sp, #-80]!
 134:	mov	x29, sp
 138:	str	x0, [sp, #40]
 13c:	str	x1, [sp, #32]
 140:	str	x2, [sp, #24]
 144:	adrp	x0, 0 <e2p_feature2string>
 148:	add	x0, x0, #0x0
 14c:	str	x0, [sp, #72]
 150:	b	1a4 <e2p_string2feature+0x74>
 154:	ldr	x0, [sp, #72]
 158:	ldr	x0, [x0, #8]
 15c:	mov	x1, x0
 160:	ldr	x0, [sp, #40]
 164:	bl	0 <strcasecmp>
 168:	cmp	w0, #0x0
 16c:	b.ne	198 <e2p_string2feature+0x68>  // b.any
 170:	ldr	x0, [sp, #72]
 174:	ldr	w1, [x0]
 178:	ldr	x0, [sp, #32]
 17c:	str	w1, [x0]
 180:	ldr	x0, [sp, #72]
 184:	ldr	w1, [x0, #4]
 188:	ldr	x0, [sp, #24]
 18c:	str	w1, [x0]
 190:	mov	w0, #0x0                   	// #0
 194:	b	308 <e2p_string2feature+0x1d8>
 198:	ldr	x0, [sp, #72]
 19c:	add	x0, x0, #0x10
 1a0:	str	x0, [sp, #72]
 1a4:	ldr	x0, [sp, #72]
 1a8:	ldr	x0, [x0, #8]
 1ac:	cmp	x0, #0x0
 1b0:	b.ne	154 <e2p_string2feature+0x24>  // b.any
 1b4:	mov	x2, #0x8                   	// #8
 1b8:	adrp	x0, 0 <e2p_feature2string>
 1bc:	add	x1, x0, #0x0
 1c0:	ldr	x0, [sp, #40]
 1c4:	bl	0 <strncasecmp>
 1c8:	cmp	w0, #0x0
 1cc:	b.eq	1d8 <e2p_string2feature+0xa8>  // b.none
 1d0:	mov	w0, #0x1                   	// #1
 1d4:	b	308 <e2p_string2feature+0x1d8>
 1d8:	ldr	x0, [sp, #40]
 1dc:	add	x0, x0, #0x8
 1e0:	ldrb	w0, [x0]
 1e4:	sub	w0, w0, #0x43
 1e8:	cmp	w0, #0x2f
 1ec:	cset	w1, hi  // hi = pmore
 1f0:	and	w1, w1, #0xff
 1f4:	cmp	w1, #0x0
 1f8:	b.ne	278 <e2p_string2feature+0x148>  // b.any
 1fc:	mov	x1, #0x1                   	// #1
 200:	lsl	x0, x1, x0
 204:	and	x1, x0, #0x800000008000
 208:	cmp	x1, #0x0
 20c:	cset	w1, ne  // ne = any
 210:	and	w1, w1, #0xff
 214:	cmp	w1, #0x0
 218:	b.ne	268 <e2p_string2feature+0x138>  // b.any
 21c:	and	x1, x0, #0x4000000040
 220:	cmp	x1, #0x0
 224:	cset	w1, ne  // ne = any
 228:	and	w1, w1, #0xff
 22c:	cmp	w1, #0x0
 230:	b.ne	258 <e2p_string2feature+0x128>  // b.any
 234:	and	x0, x0, #0x100000001
 238:	cmp	x0, #0x0
 23c:	cset	w0, ne  // ne = any
 240:	and	w0, w0, #0xff
 244:	cmp	w0, #0x0
 248:	b.eq	278 <e2p_string2feature+0x148>  // b.none
 24c:	ldr	x0, [sp, #32]
 250:	str	wzr, [x0]
 254:	b	280 <e2p_string2feature+0x150>
 258:	ldr	x0, [sp, #32]
 25c:	mov	w1, #0x1                   	// #1
 260:	str	w1, [x0]
 264:	b	280 <e2p_string2feature+0x150>
 268:	ldr	x0, [sp, #32]
 26c:	mov	w1, #0x2                   	// #2
 270:	str	w1, [x0]
 274:	b	280 <e2p_string2feature+0x150>
 278:	mov	w0, #0x1                   	// #1
 27c:	b	308 <e2p_string2feature+0x1d8>
 280:	ldr	x0, [sp, #40]
 284:	add	x0, x0, #0x9
 288:	ldrb	w0, [x0]
 28c:	cmp	w0, #0x0
 290:	b.ne	29c <e2p_string2feature+0x16c>  // b.any
 294:	mov	w0, #0x1                   	// #1
 298:	b	308 <e2p_string2feature+0x1d8>
 29c:	ldr	x0, [sp, #40]
 2a0:	add	x0, x0, #0x9
 2a4:	add	x1, sp, #0x38
 2a8:	mov	w2, #0xa                   	// #10
 2ac:	bl	0 <strtol>
 2b0:	str	w0, [sp, #68]
 2b4:	ldr	w0, [sp, #68]
 2b8:	cmp	w0, #0x1f
 2bc:	b.gt	2cc <e2p_string2feature+0x19c>
 2c0:	ldr	w0, [sp, #68]
 2c4:	cmp	w0, #0x0
 2c8:	b.ge	2d4 <e2p_string2feature+0x1a4>  // b.tcont
 2cc:	mov	w0, #0x1                   	// #1
 2d0:	b	308 <e2p_string2feature+0x1d8>
 2d4:	ldr	x0, [sp, #56]
 2d8:	ldrb	w0, [x0]
 2dc:	cmp	w0, #0x0
 2e0:	b.eq	2ec <e2p_string2feature+0x1bc>  // b.none
 2e4:	mov	w0, #0x1                   	// #1
 2e8:	b	308 <e2p_string2feature+0x1d8>
 2ec:	ldr	w0, [sp, #68]
 2f0:	mov	w1, #0x1                   	// #1
 2f4:	lsl	w0, w1, w0
 2f8:	mov	w1, w0
 2fc:	ldr	x0, [sp, #24]
 300:	str	w1, [x0]
 304:	mov	w0, #0x0                   	// #0
 308:	ldp	x29, x30, [sp], #80
 30c:	ret

0000000000000310 <e2p_jrnl_feature2string>:
 310:	stp	x29, x30, [sp, #-48]!
 314:	mov	x29, sp
 318:	str	w0, [sp, #28]
 31c:	str	w1, [sp, #24]
 320:	adrp	x0, 0 <e2p_feature2string>
 324:	add	x0, x0, #0x0
 328:	str	x0, [sp, #40]
 32c:	b	370 <e2p_jrnl_feature2string+0x60>
 330:	ldr	x0, [sp, #40]
 334:	ldr	w0, [x0]
 338:	ldr	w1, [sp, #28]
 33c:	cmp	w1, w0
 340:	b.ne	364 <e2p_jrnl_feature2string+0x54>  // b.any
 344:	ldr	x0, [sp, #40]
 348:	ldr	w0, [x0, #4]
 34c:	ldr	w1, [sp, #24]
 350:	cmp	w1, w0
 354:	b.ne	364 <e2p_jrnl_feature2string+0x54>  // b.any
 358:	ldr	x0, [sp, #40]
 35c:	ldr	x0, [x0, #8]
 360:	b	438 <e2p_jrnl_feature2string+0x128>
 364:	ldr	x0, [sp, #40]
 368:	add	x0, x0, #0x10
 36c:	str	x0, [sp, #40]
 370:	ldr	x0, [sp, #40]
 374:	ldr	x0, [x0, #8]
 378:	cmp	x0, #0x0
 37c:	b.ne	330 <e2p_jrnl_feature2string+0x20>  // b.any
 380:	ldr	w0, [sp, #28]
 384:	cmp	w0, #0x2
 388:	b.eq	3cc <e2p_jrnl_feature2string+0xbc>  // b.none
 38c:	ldr	w0, [sp, #28]
 390:	cmp	w0, #0x2
 394:	b.gt	3d8 <e2p_jrnl_feature2string+0xc8>
 398:	ldr	w0, [sp, #28]
 39c:	cmp	w0, #0x0
 3a0:	b.eq	3b4 <e2p_jrnl_feature2string+0xa4>  // b.none
 3a4:	ldr	w0, [sp, #28]
 3a8:	cmp	w0, #0x1
 3ac:	b.eq	3c0 <e2p_jrnl_feature2string+0xb0>  // b.none
 3b0:	b	3d8 <e2p_jrnl_feature2string+0xc8>
 3b4:	mov	w0, #0x43                  	// #67
 3b8:	strb	w0, [sp, #39]
 3bc:	b	3e4 <e2p_jrnl_feature2string+0xd4>
 3c0:	mov	w0, #0x49                  	// #73
 3c4:	strb	w0, [sp, #39]
 3c8:	b	3e4 <e2p_jrnl_feature2string+0xd4>
 3cc:	mov	w0, #0x52                  	// #82
 3d0:	strb	w0, [sp, #39]
 3d4:	b	3e4 <e2p_jrnl_feature2string+0xd4>
 3d8:	mov	w0, #0x3f                  	// #63
 3dc:	strb	w0, [sp, #39]
 3e0:	nop
 3e4:	str	wzr, [sp, #32]
 3e8:	b	3f8 <e2p_jrnl_feature2string+0xe8>
 3ec:	ldr	w0, [sp, #32]
 3f0:	add	w0, w0, #0x1
 3f4:	str	w0, [sp, #32]
 3f8:	ldr	w0, [sp, #24]
 3fc:	lsr	w0, w0, #1
 400:	str	w0, [sp, #24]
 404:	ldr	w0, [sp, #24]
 408:	cmp	w0, #0x0
 40c:	b.ne	3ec <e2p_jrnl_feature2string+0xdc>  // b.any
 410:	ldrb	w0, [sp, #39]
 414:	ldr	w3, [sp, #32]
 418:	mov	w2, w0
 41c:	adrp	x0, 0 <e2p_feature2string>
 420:	add	x1, x0, #0x0
 424:	adrp	x0, 0 <e2p_feature2string>
 428:	add	x0, x0, #0x0
 42c:	bl	0 <sprintf>
 430:	adrp	x0, 0 <e2p_feature2string>
 434:	add	x0, x0, #0x0
 438:	ldp	x29, x30, [sp], #48
 43c:	ret

0000000000000440 <e2p_jrnl_string2feature>:
 440:	stp	x29, x30, [sp, #-80]!
 444:	mov	x29, sp
 448:	str	x0, [sp, #40]
 44c:	str	x1, [sp, #32]
 450:	str	x2, [sp, #24]
 454:	adrp	x0, 0 <e2p_feature2string>
 458:	add	x0, x0, #0x0
 45c:	str	x0, [sp, #72]
 460:	b	4b4 <e2p_jrnl_string2feature+0x74>
 464:	ldr	x0, [sp, #72]
 468:	ldr	x0, [x0, #8]
 46c:	mov	x1, x0
 470:	ldr	x0, [sp, #40]
 474:	bl	0 <strcasecmp>
 478:	cmp	w0, #0x0
 47c:	b.ne	4a8 <e2p_jrnl_string2feature+0x68>  // b.any
 480:	ldr	x0, [sp, #72]
 484:	ldr	w1, [x0]
 488:	ldr	x0, [sp, #32]
 48c:	str	w1, [x0]
 490:	ldr	x0, [sp, #72]
 494:	ldr	w1, [x0, #4]
 498:	ldr	x0, [sp, #24]
 49c:	str	w1, [x0]
 4a0:	mov	w0, #0x0                   	// #0
 4a4:	b	618 <e2p_jrnl_string2feature+0x1d8>
 4a8:	ldr	x0, [sp, #72]
 4ac:	add	x0, x0, #0x10
 4b0:	str	x0, [sp, #72]
 4b4:	ldr	x0, [sp, #72]
 4b8:	ldr	x0, [x0, #8]
 4bc:	cmp	x0, #0x0
 4c0:	b.ne	464 <e2p_jrnl_string2feature+0x24>  // b.any
 4c4:	mov	x2, #0x8                   	// #8
 4c8:	adrp	x0, 0 <e2p_feature2string>
 4cc:	add	x1, x0, #0x0
 4d0:	ldr	x0, [sp, #40]
 4d4:	bl	0 <strncasecmp>
 4d8:	cmp	w0, #0x0
 4dc:	b.eq	4e8 <e2p_jrnl_string2feature+0xa8>  // b.none
 4e0:	mov	w0, #0x1                   	// #1
 4e4:	b	618 <e2p_jrnl_string2feature+0x1d8>
 4e8:	ldr	x0, [sp, #40]
 4ec:	add	x0, x0, #0x8
 4f0:	ldrb	w0, [x0]
 4f4:	sub	w0, w0, #0x43
 4f8:	cmp	w0, #0x2f
 4fc:	cset	w1, hi  // hi = pmore
 500:	and	w1, w1, #0xff
 504:	cmp	w1, #0x0
 508:	b.ne	588 <e2p_jrnl_string2feature+0x148>  // b.any
 50c:	mov	x1, #0x1                   	// #1
 510:	lsl	x0, x1, x0
 514:	and	x1, x0, #0x800000008000
 518:	cmp	x1, #0x0
 51c:	cset	w1, ne  // ne = any
 520:	and	w1, w1, #0xff
 524:	cmp	w1, #0x0
 528:	b.ne	578 <e2p_jrnl_string2feature+0x138>  // b.any
 52c:	and	x1, x0, #0x4000000040
 530:	cmp	x1, #0x0
 534:	cset	w1, ne  // ne = any
 538:	and	w1, w1, #0xff
 53c:	cmp	w1, #0x0
 540:	b.ne	568 <e2p_jrnl_string2feature+0x128>  // b.any
 544:	and	x0, x0, #0x100000001
 548:	cmp	x0, #0x0
 54c:	cset	w0, ne  // ne = any
 550:	and	w0, w0, #0xff
 554:	cmp	w0, #0x0
 558:	b.eq	588 <e2p_jrnl_string2feature+0x148>  // b.none
 55c:	ldr	x0, [sp, #32]
 560:	str	wzr, [x0]
 564:	b	590 <e2p_jrnl_string2feature+0x150>
 568:	ldr	x0, [sp, #32]
 56c:	mov	w1, #0x1                   	// #1
 570:	str	w1, [x0]
 574:	b	590 <e2p_jrnl_string2feature+0x150>
 578:	ldr	x0, [sp, #32]
 57c:	mov	w1, #0x2                   	// #2
 580:	str	w1, [x0]
 584:	b	590 <e2p_jrnl_string2feature+0x150>
 588:	mov	w0, #0x1                   	// #1
 58c:	b	618 <e2p_jrnl_string2feature+0x1d8>
 590:	ldr	x0, [sp, #40]
 594:	add	x0, x0, #0x9
 598:	ldrb	w0, [x0]
 59c:	cmp	w0, #0x0
 5a0:	b.ne	5ac <e2p_jrnl_string2feature+0x16c>  // b.any
 5a4:	mov	w0, #0x1                   	// #1
 5a8:	b	618 <e2p_jrnl_string2feature+0x1d8>
 5ac:	ldr	x0, [sp, #40]
 5b0:	add	x0, x0, #0x9
 5b4:	add	x1, sp, #0x38
 5b8:	mov	w2, #0xa                   	// #10
 5bc:	bl	0 <strtol>
 5c0:	str	w0, [sp, #68]
 5c4:	ldr	w0, [sp, #68]
 5c8:	cmp	w0, #0x1f
 5cc:	b.gt	5dc <e2p_jrnl_string2feature+0x19c>
 5d0:	ldr	w0, [sp, #68]
 5d4:	cmp	w0, #0x0
 5d8:	b.ge	5e4 <e2p_jrnl_string2feature+0x1a4>  // b.tcont
 5dc:	mov	w0, #0x1                   	// #1
 5e0:	b	618 <e2p_jrnl_string2feature+0x1d8>
 5e4:	ldr	x0, [sp, #56]
 5e8:	ldrb	w0, [x0]
 5ec:	cmp	w0, #0x0
 5f0:	b.eq	5fc <e2p_jrnl_string2feature+0x1bc>  // b.none
 5f4:	mov	w0, #0x1                   	// #1
 5f8:	b	618 <e2p_jrnl_string2feature+0x1d8>
 5fc:	ldr	w0, [sp, #68]
 600:	mov	w1, #0x1                   	// #1
 604:	lsl	w0, w1, w0
 608:	mov	w1, w0
 60c:	ldr	x0, [sp, #24]
 610:	str	w1, [x0]
 614:	mov	w0, #0x0                   	// #0
 618:	ldp	x29, x30, [sp], #80
 61c:	ret

0000000000000620 <skip_over_blanks>:
 620:	stp	x29, x30, [sp, #-32]!
 624:	mov	x29, sp
 628:	str	x0, [sp, #24]
 62c:	b	63c <skip_over_blanks+0x1c>
 630:	ldr	x0, [sp, #24]
 634:	add	x0, x0, #0x1
 638:	str	x0, [sp, #24]
 63c:	ldr	x0, [sp, #24]
 640:	ldrb	w0, [x0]
 644:	cmp	w0, #0x0
 648:	b.eq	678 <skip_over_blanks+0x58>  // b.none
 64c:	bl	0 <__ctype_b_loc>
 650:	ldr	x1, [x0]
 654:	ldr	x0, [sp, #24]
 658:	ldrb	w0, [x0]
 65c:	and	x0, x0, #0xff
 660:	lsl	x0, x0, #1
 664:	add	x0, x1, x0
 668:	ldrh	w0, [x0]
 66c:	and	w0, w0, #0x2000
 670:	cmp	w0, #0x0
 674:	b.ne	630 <skip_over_blanks+0x10>  // b.any
 678:	ldr	x0, [sp, #24]
 67c:	ldp	x29, x30, [sp], #32
 680:	ret

0000000000000684 <skip_over_word>:
 684:	stp	x29, x30, [sp, #-32]!
 688:	mov	x29, sp
 68c:	str	x0, [sp, #24]
 690:	b	6a0 <skip_over_word+0x1c>
 694:	ldr	x0, [sp, #24]
 698:	add	x0, x0, #0x1
 69c:	str	x0, [sp, #24]
 6a0:	ldr	x0, [sp, #24]
 6a4:	ldrb	w0, [x0]
 6a8:	cmp	w0, #0x0
 6ac:	b.eq	6ec <skip_over_word+0x68>  // b.none
 6b0:	bl	0 <__ctype_b_loc>
 6b4:	ldr	x1, [x0]
 6b8:	ldr	x0, [sp, #24]
 6bc:	ldrb	w0, [x0]
 6c0:	and	x0, x0, #0xff
 6c4:	lsl	x0, x0, #1
 6c8:	add	x0, x1, x0
 6cc:	ldrh	w0, [x0]
 6d0:	and	w0, w0, #0x2000
 6d4:	cmp	w0, #0x0
 6d8:	b.ne	6ec <skip_over_word+0x68>  // b.any
 6dc:	ldr	x0, [sp, #24]
 6e0:	ldrb	w0, [x0]
 6e4:	cmp	w0, #0x2c
 6e8:	b.ne	694 <skip_over_word+0x10>  // b.any
 6ec:	ldr	x0, [sp, #24]
 6f0:	ldp	x29, x30, [sp], #32
 6f4:	ret

00000000000006f8 <e2p_edit_feature2>:
 6f8:	stp	x29, x30, [sp, #-112]!
 6fc:	mov	x29, sp
 700:	str	x0, [sp, #56]
 704:	str	x1, [sp, #48]
 708:	str	x2, [sp, #40]
 70c:	str	x3, [sp, #32]
 710:	str	x4, [sp, #24]
 714:	str	x5, [sp, #16]
 718:	str	wzr, [sp, #88]
 71c:	ldr	x0, [sp, #32]
 720:	cmp	x0, #0x0
 724:	b.ne	730 <e2p_edit_feature2+0x38>  // b.any
 728:	ldr	x0, [sp, #40]
 72c:	str	x0, [sp, #32]
 730:	ldr	x0, [sp, #24]
 734:	cmp	x0, #0x0
 738:	b.eq	744 <e2p_edit_feature2+0x4c>  // b.none
 73c:	ldr	x0, [sp, #24]
 740:	str	wzr, [x0]
 744:	ldr	x0, [sp, #16]
 748:	cmp	x0, #0x0
 74c:	b.eq	758 <e2p_edit_feature2+0x60>  // b.none
 750:	ldr	x0, [sp, #16]
 754:	str	wzr, [x0]
 758:	ldr	x0, [sp, #56]
 75c:	bl	0 <strlen>
 760:	add	x0, x0, #0x1
 764:	bl	0 <malloc>
 768:	str	x0, [sp, #80]
 76c:	ldr	x0, [sp, #80]
 770:	cmp	x0, #0x0
 774:	b.ne	780 <e2p_edit_feature2+0x88>  // b.any
 778:	mov	w0, #0x1                   	// #1
 77c:	b	a58 <e2p_edit_feature2+0x360>
 780:	ldr	x1, [sp, #56]
 784:	ldr	x0, [sp, #80]
 788:	bl	0 <strcpy>
 78c:	ldr	x0, [sp, #80]
 790:	str	x0, [sp, #104]
 794:	b	a20 <e2p_edit_feature2+0x328>
 798:	str	wzr, [sp, #92]
 79c:	ldr	x0, [sp, #104]
 7a0:	bl	620 <skip_over_blanks>
 7a4:	str	x0, [sp, #104]
 7a8:	ldr	x0, [sp, #104]
 7ac:	bl	684 <skip_over_word>
 7b0:	str	x0, [sp, #96]
 7b4:	ldr	x0, [sp, #96]
 7b8:	ldrb	w0, [x0]
 7bc:	cmp	w0, #0x0
 7c0:	b.ne	7cc <e2p_edit_feature2+0xd4>  // b.any
 7c4:	str	xzr, [sp, #96]
 7c8:	b	7d4 <e2p_edit_feature2+0xdc>
 7cc:	ldr	x0, [sp, #96]
 7d0:	strb	wzr, [x0]
 7d4:	adrp	x0, 0 <e2p_feature2string>
 7d8:	add	x1, x0, #0x0
 7dc:	ldr	x0, [sp, #104]
 7e0:	bl	0 <strcasecmp>
 7e4:	cmp	w0, #0x0
 7e8:	b.eq	804 <e2p_edit_feature2+0x10c>  // b.none
 7ec:	adrp	x0, 0 <e2p_feature2string>
 7f0:	add	x1, x0, #0x0
 7f4:	ldr	x0, [sp, #104]
 7f8:	bl	0 <strcasecmp>
 7fc:	cmp	w0, #0x0
 800:	b.ne	828 <e2p_edit_feature2+0x130>  // b.any
 804:	ldr	x0, [sp, #48]
 808:	str	wzr, [x0]
 80c:	ldr	x0, [sp, #48]
 810:	add	x0, x0, #0x4
 814:	str	wzr, [x0]
 818:	ldr	x0, [sp, #48]
 81c:	add	x0, x0, #0x8
 820:	str	wzr, [x0]
 824:	b	a00 <e2p_edit_feature2+0x308>
 828:	ldr	x0, [sp, #104]
 82c:	ldrb	w0, [x0]
 830:	cmp	w0, #0x5e
 834:	b.eq	850 <e2p_edit_feature2+0x158>  // b.none
 838:	cmp	w0, #0x5e
 83c:	b.gt	86c <e2p_edit_feature2+0x174>
 840:	cmp	w0, #0x2b
 844:	b.eq	85c <e2p_edit_feature2+0x164>  // b.none
 848:	cmp	w0, #0x2d
 84c:	b.ne	86c <e2p_edit_feature2+0x174>  // b.any
 850:	ldr	w0, [sp, #92]
 854:	add	w0, w0, #0x1
 858:	str	w0, [sp, #92]
 85c:	ldr	x0, [sp, #104]
 860:	add	x0, x0, #0x1
 864:	str	x0, [sp, #104]
 868:	nop
 86c:	add	x1, sp, #0x4c
 870:	add	x0, sp, #0x48
 874:	mov	x2, x1
 878:	mov	x1, x0
 87c:	ldr	x0, [sp, #104]
 880:	bl	130 <e2p_string2feature>
 884:	cmp	w0, #0x0
 888:	b.eq	898 <e2p_edit_feature2+0x1a0>  // b.none
 88c:	mov	w0, #0x1                   	// #1
 890:	str	w0, [sp, #88]
 894:	b	a4c <e2p_edit_feature2+0x354>
 898:	ldr	w0, [sp, #92]
 89c:	cmp	w0, #0x0
 8a0:	b.eq	958 <e2p_edit_feature2+0x260>  // b.none
 8a4:	ldr	x0, [sp, #32]
 8a8:	cmp	x0, #0x0
 8ac:	b.eq	918 <e2p_edit_feature2+0x220>  // b.none
 8b0:	ldr	w0, [sp, #72]
 8b4:	sxtw	x0, w0
 8b8:	lsl	x0, x0, #2
 8bc:	ldr	x1, [sp, #32]
 8c0:	add	x0, x1, x0
 8c4:	ldr	w1, [x0]
 8c8:	ldr	w0, [sp, #76]
 8cc:	and	w0, w1, w0
 8d0:	cmp	w0, #0x0
 8d4:	b.ne	918 <e2p_edit_feature2+0x220>  // b.any
 8d8:	mov	w0, #0x1                   	// #1
 8dc:	str	w0, [sp, #88]
 8e0:	ldr	x0, [sp, #24]
 8e4:	cmp	x0, #0x0
 8e8:	b.eq	8fc <e2p_edit_feature2+0x204>  // b.none
 8ec:	ldr	w0, [sp, #72]
 8f0:	orr	w1, w0, #0x80
 8f4:	ldr	x0, [sp, #24]
 8f8:	str	w1, [x0]
 8fc:	ldr	x0, [sp, #16]
 900:	cmp	x0, #0x0
 904:	b.eq	a40 <e2p_edit_feature2+0x348>  // b.none
 908:	ldr	w1, [sp, #76]
 90c:	ldr	x0, [sp, #16]
 910:	str	w1, [x0]
 914:	b	a40 <e2p_edit_feature2+0x348>
 918:	ldr	w0, [sp, #72]
 91c:	sxtw	x0, w0
 920:	lsl	x0, x0, #2
 924:	ldr	x1, [sp, #48]
 928:	add	x0, x1, x0
 92c:	ldr	w2, [x0]
 930:	ldr	w0, [sp, #76]
 934:	mvn	w1, w0
 938:	ldr	w0, [sp, #72]
 93c:	sxtw	x0, w0
 940:	lsl	x0, x0, #2
 944:	ldr	x3, [sp, #48]
 948:	add	x0, x3, x0
 94c:	and	w1, w2, w1
 950:	str	w1, [x0]
 954:	b	a00 <e2p_edit_feature2+0x308>
 958:	ldr	x0, [sp, #40]
 95c:	cmp	x0, #0x0
 960:	b.eq	9c8 <e2p_edit_feature2+0x2d0>  // b.none
 964:	ldr	w0, [sp, #72]
 968:	sxtw	x0, w0
 96c:	lsl	x0, x0, #2
 970:	ldr	x1, [sp, #40]
 974:	add	x0, x1, x0
 978:	ldr	w1, [x0]
 97c:	ldr	w0, [sp, #76]
 980:	and	w0, w1, w0
 984:	cmp	w0, #0x0
 988:	b.ne	9c8 <e2p_edit_feature2+0x2d0>  // b.any
 98c:	mov	w0, #0x1                   	// #1
 990:	str	w0, [sp, #88]
 994:	ldr	x0, [sp, #24]
 998:	cmp	x0, #0x0
 99c:	b.eq	9ac <e2p_edit_feature2+0x2b4>  // b.none
 9a0:	ldr	w1, [sp, #72]
 9a4:	ldr	x0, [sp, #24]
 9a8:	str	w1, [x0]
 9ac:	ldr	x0, [sp, #16]
 9b0:	cmp	x0, #0x0
 9b4:	b.eq	a48 <e2p_edit_feature2+0x350>  // b.none
 9b8:	ldr	w1, [sp, #76]
 9bc:	ldr	x0, [sp, #16]
 9c0:	str	w1, [x0]
 9c4:	b	a48 <e2p_edit_feature2+0x350>
 9c8:	ldr	w0, [sp, #72]
 9cc:	sxtw	x0, w0
 9d0:	lsl	x0, x0, #2
 9d4:	ldr	x1, [sp, #48]
 9d8:	add	x0, x1, x0
 9dc:	ldr	w2, [x0]
 9e0:	ldr	w1, [sp, #76]
 9e4:	ldr	w0, [sp, #72]
 9e8:	sxtw	x0, w0
 9ec:	lsl	x0, x0, #2
 9f0:	ldr	x3, [sp, #48]
 9f4:	add	x0, x3, x0
 9f8:	orr	w1, w2, w1
 9fc:	str	w1, [x0]
 a00:	ldr	x0, [sp, #96]
 a04:	cmp	x0, #0x0
 a08:	b.eq	a18 <e2p_edit_feature2+0x320>  // b.none
 a0c:	ldr	x0, [sp, #96]
 a10:	add	x0, x0, #0x1
 a14:	b	a1c <e2p_edit_feature2+0x324>
 a18:	mov	x0, #0x0                   	// #0
 a1c:	str	x0, [sp, #104]
 a20:	ldr	x0, [sp, #104]
 a24:	cmp	x0, #0x0
 a28:	b.eq	a4c <e2p_edit_feature2+0x354>  // b.none
 a2c:	ldr	x0, [sp, #104]
 a30:	ldrb	w0, [x0]
 a34:	cmp	w0, #0x0
 a38:	b.ne	798 <e2p_edit_feature2+0xa0>  // b.any
 a3c:	b	a4c <e2p_edit_feature2+0x354>
 a40:	nop
 a44:	b	a4c <e2p_edit_feature2+0x354>
 a48:	nop
 a4c:	ldr	x0, [sp, #80]
 a50:	bl	0 <free>
 a54:	ldr	w0, [sp, #88]
 a58:	ldp	x29, x30, [sp], #112
 a5c:	ret

0000000000000a60 <e2p_edit_feature>:
 a60:	stp	x29, x30, [sp, #-48]!
 a64:	mov	x29, sp
 a68:	str	x0, [sp, #40]
 a6c:	str	x1, [sp, #32]
 a70:	str	x2, [sp, #24]
 a74:	mov	x5, #0x0                   	// #0
 a78:	mov	x4, #0x0                   	// #0
 a7c:	mov	x3, #0x0                   	// #0
 a80:	ldr	x2, [sp, #24]
 a84:	ldr	x1, [sp, #32]
 a88:	ldr	x0, [sp, #40]
 a8c:	bl	6f8 <e2p_edit_feature2>
 a90:	ldp	x29, x30, [sp], #48
 a94:	ret

fgetflags.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fgetflags>:
   0:	stp	x29, x30, [sp, #-192]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	wzr, [sp, #188]
  14:	add	x0, sp, #0x30
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <lstat>
  24:	cmp	w0, #0x0
  28:	b.ne	4c <fgetflags+0x4c>  // b.any
  2c:	ldr	w0, [sp, #64]
  30:	and	w0, w0, #0xf000
  34:	cmp	w0, #0x8, lsl #12
  38:	b.eq	4c <fgetflags+0x4c>  // b.none
  3c:	ldr	w0, [sp, #64]
  40:	and	w0, w0, #0xf000
  44:	cmp	w0, #0x4, lsl #12
  48:	b.ne	e0 <fgetflags+0xe0>  // b.any
  4c:	mov	w1, #0x800                 	// #2048
  50:	ldr	x0, [sp, #24]
  54:	bl	0 <open>
  58:	str	w0, [sp, #184]
  5c:	ldr	w0, [sp, #184]
  60:	cmn	w0, #0x1
  64:	b.ne	70 <fgetflags+0x70>  // b.any
  68:	mov	w0, #0xffffffff            	// #-1
  6c:	b	f8 <fgetflags+0xf8>
  70:	add	x0, sp, #0x2c
  74:	mov	x2, x0
  78:	mov	x1, #0x6601                	// #26113
  7c:	movk	x1, #0x8008, lsl #16
  80:	ldr	w0, [sp, #184]
  84:	bl	0 <ioctl>
  88:	str	w0, [sp, #180]
  8c:	ldr	w0, [sp, #180]
  90:	cmn	w0, #0x1
  94:	b.ne	a4 <fgetflags+0xa4>  // b.any
  98:	bl	0 <__errno_location>
  9c:	ldr	w0, [x0]
  a0:	str	w0, [sp, #188]
  a4:	ldr	w0, [sp, #44]
  a8:	sxtw	x1, w0
  ac:	ldr	x0, [sp, #16]
  b0:	str	x1, [x0]
  b4:	ldr	w0, [sp, #184]
  b8:	bl	0 <close>
  bc:	ldr	w0, [sp, #188]
  c0:	cmp	w0, #0x0
  c4:	b.eq	d8 <fgetflags+0xd8>  // b.none
  c8:	bl	0 <__errno_location>
  cc:	mov	x1, x0
  d0:	ldr	w0, [sp, #188]
  d4:	str	w0, [x1]
  d8:	ldr	w0, [sp, #180]
  dc:	b	f8 <fgetflags+0xf8>
  e0:	nop
  e4:	bl	0 <__errno_location>
  e8:	mov	x1, x0
  ec:	mov	w0, #0x5f                  	// #95
  f0:	str	w0, [x1]
  f4:	mov	w0, #0xffffffff            	// #-1
  f8:	ldp	x29, x30, [sp], #192
  fc:	ret

fsetflags.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fsetflags>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	wzr, [sp, #172]
  14:	add	x0, sp, #0x20
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <lstat>
  24:	cmp	w0, #0x0
  28:	b.ne	4c <fsetflags+0x4c>  // b.any
  2c:	ldr	w0, [sp, #48]
  30:	and	w0, w0, #0xf000
  34:	cmp	w0, #0x8, lsl #12
  38:	b.eq	4c <fsetflags+0x4c>  // b.none
  3c:	ldr	w0, [sp, #48]
  40:	and	w0, w0, #0xf000
  44:	cmp	w0, #0x4, lsl #12
  48:	b.ne	d8 <fsetflags+0xd8>  // b.any
  4c:	mov	w1, #0x800                 	// #2048
  50:	ldr	x0, [sp, #24]
  54:	bl	0 <open>
  58:	str	w0, [sp, #168]
  5c:	ldr	w0, [sp, #168]
  60:	cmn	w0, #0x1
  64:	b.ne	70 <fsetflags+0x70>  // b.any
  68:	mov	w0, #0xffffffff            	// #-1
  6c:	b	f0 <fsetflags+0xf0>
  70:	ldr	x0, [sp, #16]
  74:	str	w0, [sp, #160]
  78:	add	x0, sp, #0xa0
  7c:	mov	x2, x0
  80:	mov	x1, #0x6602                	// #26114
  84:	movk	x1, #0x4008, lsl #16
  88:	ldr	w0, [sp, #168]
  8c:	bl	0 <ioctl>
  90:	str	w0, [sp, #164]
  94:	ldr	w0, [sp, #164]
  98:	cmn	w0, #0x1
  9c:	b.ne	ac <fsetflags+0xac>  // b.any
  a0:	bl	0 <__errno_location>
  a4:	ldr	w0, [x0]
  a8:	str	w0, [sp, #172]
  ac:	ldr	w0, [sp, #168]
  b0:	bl	0 <close>
  b4:	ldr	w0, [sp, #172]
  b8:	cmp	w0, #0x0
  bc:	b.eq	d0 <fsetflags+0xd0>  // b.none
  c0:	bl	0 <__errno_location>
  c4:	mov	x1, x0
  c8:	ldr	w0, [sp, #172]
  cc:	str	w0, [x1]
  d0:	ldr	w0, [sp, #164]
  d4:	b	f0 <fsetflags+0xf0>
  d8:	nop
  dc:	bl	0 <__errno_location>
  e0:	mov	x1, x0
  e4:	mov	w0, #0x5f                  	// #95
  e8:	str	w0, [x1]
  ec:	mov	w0, #0xffffffff            	// #-1
  f0:	ldp	x29, x30, [sp], #176
  f4:	ret

fgetversion.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fgetversion>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	mov	w0, #0xffffffff            	// #-1
  14:	str	w0, [sp, #32]
  18:	mov	w0, #0xffffffff            	// #-1
  1c:	str	w0, [sp, #40]
  20:	str	wzr, [sp, #44]
  24:	mov	w1, #0x800                 	// #2048
  28:	ldr	x0, [sp, #24]
  2c:	bl	0 <open>
  30:	str	w0, [sp, #36]
  34:	ldr	w0, [sp, #36]
  38:	cmn	w0, #0x1
  3c:	b.ne	48 <fgetversion+0x48>  // b.any
  40:	mov	w0, #0xffffffff            	// #-1
  44:	b	c0 <fgetversion+0xc0>
  48:	add	x0, sp, #0x20
  4c:	mov	x2, x0
  50:	mov	x1, #0x7601                	// #30209
  54:	movk	x1, #0x8008, lsl #16
  58:	ldr	w0, [sp, #36]
  5c:	bl	0 <ioctl>
  60:	str	w0, [sp, #40]
  64:	ldr	w0, [sp, #40]
  68:	cmn	w0, #0x1
  6c:	b.ne	7c <fgetversion+0x7c>  // b.any
  70:	bl	0 <__errno_location>
  74:	ldr	w0, [x0]
  78:	str	w0, [sp, #44]
  7c:	ldr	w0, [sp, #36]
  80:	bl	0 <close>
  84:	ldr	w0, [sp, #40]
  88:	cmn	w0, #0x1
  8c:	b.ne	a0 <fgetversion+0xa0>  // b.any
  90:	bl	0 <__errno_location>
  94:	mov	x1, x0
  98:	ldr	w0, [sp, #44]
  9c:	str	w0, [x1]
  a0:	ldr	w0, [sp, #40]
  a4:	cmp	w0, #0x0
  a8:	b.ne	bc <fgetversion+0xbc>  // b.any
  ac:	ldr	w0, [sp, #32]
  b0:	mov	w1, w0
  b4:	ldr	x0, [sp, #16]
  b8:	str	x1, [x0]
  bc:	ldr	w0, [sp, #40]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret

fsetversion.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fsetversion>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	wzr, [sp, #44]
  14:	mov	w1, #0x800                 	// #2048
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <open>
  20:	str	w0, [sp, #40]
  24:	ldr	w0, [sp, #40]
  28:	cmn	w0, #0x1
  2c:	b.ne	38 <fsetversion+0x38>  // b.any
  30:	mov	w0, #0xffffffff            	// #-1
  34:	b	9c <fsetversion+0x9c>
  38:	ldr	x0, [sp, #16]
  3c:	str	w0, [sp, #32]
  40:	add	x0, sp, #0x20
  44:	mov	x2, x0
  48:	mov	x1, #0x7602                	// #30210
  4c:	movk	x1, #0x4008, lsl #16
  50:	ldr	w0, [sp, #40]
  54:	bl	0 <ioctl>
  58:	str	w0, [sp, #36]
  5c:	ldr	w0, [sp, #36]
  60:	cmn	w0, #0x1
  64:	b.ne	74 <fsetversion+0x74>  // b.any
  68:	bl	0 <__errno_location>
  6c:	ldr	w0, [x0]
  70:	str	w0, [sp, #44]
  74:	ldr	w0, [sp, #40]
  78:	bl	0 <close>
  7c:	ldr	w0, [sp, #44]
  80:	cmp	w0, #0x0
  84:	b.eq	98 <fsetversion+0x98>  // b.none
  88:	bl	0 <__errno_location>
  8c:	mov	x1, x0
  90:	ldr	w0, [sp, #44]
  94:	str	w0, [x1]
  98:	ldr	w0, [sp, #36]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

getflags.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getflags>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	x1, [sp, #16]
  10:	add	x0, sp, #0x28
  14:	mov	x1, x0
  18:	ldr	w0, [sp, #28]
  1c:	bl	0 <fstat>
  20:	cmp	w0, #0x0
  24:	b.ne	48 <getflags+0x48>  // b.any
  28:	ldr	w0, [sp, #56]
  2c:	and	w0, w0, #0xf000
  30:	cmp	w0, #0x8, lsl #12
  34:	b.eq	48 <getflags+0x48>  // b.none
  38:	ldr	w0, [sp, #56]
  3c:	and	w0, w0, #0xf000
  40:	cmp	w0, #0x4, lsl #12
  44:	b.ne	7c <getflags+0x7c>  // b.any
  48:	add	x0, sp, #0x24
  4c:	mov	x2, x0
  50:	mov	x1, #0x6601                	// #26113
  54:	movk	x1, #0x8008, lsl #16
  58:	ldr	w0, [sp, #28]
  5c:	bl	0 <ioctl>
  60:	str	w0, [sp, #172]
  64:	ldr	w0, [sp, #36]
  68:	sxtw	x1, w0
  6c:	ldr	x0, [sp, #16]
  70:	str	x1, [x0]
  74:	ldr	w0, [sp, #172]
  78:	b	94 <getflags+0x94>
  7c:	nop
  80:	bl	0 <__errno_location>
  84:	mov	x1, x0
  88:	mov	w0, #0x5f                  	// #95
  8c:	str	w0, [x1]
  90:	mov	w0, #0xffffffff            	// #-1
  94:	ldp	x29, x30, [sp], #176
  98:	ret

getversion.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getversion>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	x1, [sp, #16]
  10:	add	x0, sp, #0x28
  14:	mov	x2, x0
  18:	mov	x1, #0x7601                	// #30209
  1c:	movk	x1, #0x8008, lsl #16
  20:	ldr	w0, [sp, #28]
  24:	bl	0 <ioctl>
  28:	str	w0, [sp, #44]
  2c:	ldr	w0, [sp, #40]
  30:	sxtw	x1, w0
  34:	ldr	x0, [sp, #16]
  38:	str	x1, [x0]
  3c:	ldr	w0, [sp, #44]
  40:	ldp	x29, x30, [sp], #48
  44:	ret

hashstr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_hash2string>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	adrp	x0, 0 <e2p_hash2string>
  10:	add	x0, x0, #0x0
  14:	str	x0, [sp, #40]
  18:	b	48 <e2p_hash2string+0x48>
  1c:	ldr	x0, [sp, #40]
  20:	ldr	w0, [x0]
  24:	ldr	w1, [sp, #28]
  28:	cmp	w1, w0
  2c:	b.ne	3c <e2p_hash2string+0x3c>  // b.any
  30:	ldr	x0, [sp, #40]
  34:	ldr	x0, [x0, #8]
  38:	b	78 <e2p_hash2string+0x78>
  3c:	ldr	x0, [sp, #40]
  40:	add	x0, x0, #0x10
  44:	str	x0, [sp, #40]
  48:	ldr	x0, [sp, #40]
  4c:	ldr	x0, [x0, #8]
  50:	cmp	x0, #0x0
  54:	b.ne	1c <e2p_hash2string+0x1c>  // b.any
  58:	ldr	w2, [sp, #28]
  5c:	adrp	x0, 0 <e2p_hash2string>
  60:	add	x1, x0, #0x0
  64:	adrp	x0, 0 <e2p_hash2string>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <sprintf>
  70:	adrp	x0, 0 <e2p_hash2string>
  74:	add	x0, x0, #0x0
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

0000000000000080 <e2p_string2hash>:
  80:	stp	x29, x30, [sp, #-64]!
  84:	mov	x29, sp
  88:	str	x0, [sp, #24]
  8c:	adrp	x0, 0 <e2p_hash2string>
  90:	add	x0, x0, #0x0
  94:	str	x0, [sp, #56]
  98:	b	d0 <e2p_string2hash+0x50>
  9c:	ldr	x0, [sp, #56]
  a0:	ldr	x0, [x0, #8]
  a4:	mov	x1, x0
  a8:	ldr	x0, [sp, #24]
  ac:	bl	0 <strcasecmp>
  b0:	cmp	w0, #0x0
  b4:	b.ne	c4 <e2p_string2hash+0x44>  // b.any
  b8:	ldr	x0, [sp, #56]
  bc:	ldr	w0, [x0]
  c0:	b	174 <e2p_string2hash+0xf4>
  c4:	ldr	x0, [sp, #56]
  c8:	add	x0, x0, #0x10
  cc:	str	x0, [sp, #56]
  d0:	ldr	x0, [sp, #56]
  d4:	ldr	x0, [x0, #8]
  d8:	cmp	x0, #0x0
  dc:	b.ne	9c <e2p_string2hash+0x1c>  // b.any
  e0:	mov	x2, #0x8                   	// #8
  e4:	adrp	x0, 0 <e2p_hash2string>
  e8:	add	x1, x0, #0x0
  ec:	ldr	x0, [sp, #24]
  f0:	bl	0 <strncasecmp>
  f4:	cmp	w0, #0x0
  f8:	b.eq	104 <e2p_string2hash+0x84>  // b.none
  fc:	mov	w0, #0xffffffff            	// #-1
 100:	b	174 <e2p_string2hash+0xf4>
 104:	ldr	x0, [sp, #24]
 108:	add	x0, x0, #0x8
 10c:	ldrb	w0, [x0]
 110:	cmp	w0, #0x0
 114:	b.ne	120 <e2p_string2hash+0xa0>  // b.any
 118:	mov	w0, #0xffffffff            	// #-1
 11c:	b	174 <e2p_string2hash+0xf4>
 120:	ldr	x0, [sp, #24]
 124:	add	x0, x0, #0x8
 128:	add	x1, sp, #0x28
 12c:	mov	w2, #0xa                   	// #10
 130:	bl	0 <strtol>
 134:	str	w0, [sp, #52]
 138:	ldr	w0, [sp, #52]
 13c:	cmp	w0, #0xff
 140:	b.gt	150 <e2p_string2hash+0xd0>
 144:	ldr	w0, [sp, #52]
 148:	cmp	w0, #0x0
 14c:	b.ge	158 <e2p_string2hash+0xd8>  // b.tcont
 150:	mov	w0, #0xffffffff            	// #-1
 154:	b	174 <e2p_string2hash+0xf4>
 158:	ldr	x0, [sp, #40]
 15c:	ldrb	w0, [x0]
 160:	cmp	w0, #0x0
 164:	b.eq	170 <e2p_string2hash+0xf0>  // b.none
 168:	mov	w0, #0xffffffff            	// #-1
 16c:	b	174 <e2p_string2hash+0xf4>
 170:	ldr	w0, [sp, #52]
 174:	ldp	x29, x30, [sp], #64
 178:	ret

iod.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <iterate_on_dir>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	mov	w0, #0xffffffff            	// #-1
  18:	str	w0, [sp, #92]
  1c:	str	wzr, [sp, #84]
  20:	mov	w1, #0x3                   	// #3
  24:	ldr	x0, [sp, #40]
  28:	bl	0 <pathconf>
  2c:	str	w0, [sp, #92]
  30:	ldr	w0, [sp, #92]
  34:	cmn	w0, #0x1
  38:	b.ne	44 <iterate_on_dir+0x44>  // b.any
  3c:	mov	w0, #0xe                   	// #14
  40:	str	w0, [sp, #92]
  44:	ldr	w0, [sp, #92]
  48:	add	w0, w0, #0x118
  4c:	str	w0, [sp, #92]
  50:	ldr	w0, [sp, #92]
  54:	add	w0, w0, #0x1
  58:	sxtw	x0, w0
  5c:	bl	0 <malloc>
  60:	str	x0, [sp, #72]
  64:	ldr	x0, [sp, #72]
  68:	cmp	x0, #0x0
  6c:	b.ne	78 <iterate_on_dir+0x78>  // b.any
  70:	mov	w0, #0xffffffff            	// #-1
  74:	b	148 <iterate_on_dir+0x148>
  78:	ldr	w0, [sp, #92]
  7c:	add	w0, w0, #0x1
  80:	sxtw	x0, w0
  84:	mov	x2, x0
  88:	mov	w1, #0x0                   	// #0
  8c:	ldr	x0, [sp, #72]
  90:	bl	0 <memset>
  94:	ldr	x0, [sp, #40]
  98:	bl	0 <opendir>
  9c:	str	x0, [sp, #64]
  a0:	ldr	x0, [sp, #64]
  a4:	cmp	x0, #0x0
  a8:	b.ne	11c <iterate_on_dir+0x11c>  // b.any
  ac:	ldr	x0, [sp, #72]
  b0:	bl	0 <free>
  b4:	mov	w0, #0xffffffff            	// #-1
  b8:	b	148 <iterate_on_dir+0x148>
  bc:	ldr	x0, [sp, #56]
  c0:	ldrh	w0, [x0, #16]
  c4:	str	w0, [sp, #88]
  c8:	ldr	w1, [sp, #88]
  cc:	ldr	w0, [sp, #92]
  d0:	cmp	w1, w0
  d4:	b.le	e0 <iterate_on_dir+0xe0>
  d8:	ldr	w0, [sp, #92]
  dc:	str	w0, [sp, #88]
  e0:	ldrsw	x0, [sp, #88]
  e4:	mov	x2, x0
  e8:	ldr	x1, [sp, #56]
  ec:	ldr	x0, [sp, #72]
  f0:	bl	0 <memcpy>
  f4:	ldr	x3, [sp, #32]
  f8:	ldr	x2, [sp, #24]
  fc:	ldr	x1, [sp, #72]
 100:	ldr	x0, [sp, #40]
 104:	blr	x3
 108:	cmp	w0, #0x0
 10c:	b.eq	11c <iterate_on_dir+0x11c>  // b.none
 110:	ldr	w0, [sp, #84]
 114:	add	w0, w0, #0x1
 118:	str	w0, [sp, #84]
 11c:	ldr	x0, [sp, #64]
 120:	bl	0 <readdir>
 124:	str	x0, [sp, #56]
 128:	ldr	x0, [sp, #56]
 12c:	cmp	x0, #0x0
 130:	b.ne	bc <iterate_on_dir+0xbc>  // b.any
 134:	ldr	x0, [sp, #72]
 138:	bl	0 <free>
 13c:	ldr	x0, [sp, #64]
 140:	bl	0 <closedir>
 144:	ldr	w0, [sp, #84]
 148:	ldp	x29, x30, [sp], #96
 14c:	ret

ls.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_dir_index>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #92]
      10:	and	w0, w0, #0x20
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_bigalloc>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	and	w0, w0, #0x200
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_feature_metadata_csum>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #100]
      60:	and	w0, w0, #0x400
      64:	cmp	w0, #0x0
      68:	cset	w0, ne  // ne = any
      6c:	and	w0, w0, #0xff
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_has_feature_64bit>:
      78:	sub	sp, sp, #0x10
      7c:	str	x0, [sp, #8]
      80:	ldr	x0, [sp, #8]
      84:	ldr	w0, [x0, #96]
      88:	and	w0, w0, #0x80
      8c:	cmp	w0, #0x0
      90:	cset	w0, ne  // ne = any
      94:	and	w0, w0, #0xff
      98:	add	sp, sp, #0x10
      9c:	ret

00000000000000a0 <ext2fs_has_feature_mmp>:
      a0:	sub	sp, sp, #0x10
      a4:	str	x0, [sp, #8]
      a8:	ldr	x0, [sp, #8]
      ac:	ldr	w0, [x0, #96]
      b0:	and	w0, w0, #0x100
      b4:	cmp	w0, #0x0
      b8:	cset	w0, ne  // ne = any
      bc:	and	w0, w0, #0xff
      c0:	add	sp, sp, #0x10
      c4:	ret

00000000000000c8 <ext2fs_has_feature_csum_seed>:
      c8:	sub	sp, sp, #0x10
      cc:	str	x0, [sp, #8]
      d0:	ldr	x0, [sp, #8]
      d4:	ldr	w0, [x0, #96]
      d8:	and	w0, w0, #0x2000
      dc:	cmp	w0, #0x0
      e0:	cset	w0, ne  // ne = any
      e4:	and	w0, w0, #0xff
      e8:	add	sp, sp, #0x10
      ec:	ret

00000000000000f0 <ext2fs_has_feature_casefold>:
      f0:	sub	sp, sp, #0x10
      f4:	str	x0, [sp, #8]
      f8:	ldr	x0, [sp, #8]
      fc:	ldr	w0, [x0, #96]
     100:	and	w0, w0, #0x20000
     104:	cmp	w0, #0x0
     108:	cset	w0, ne  // ne = any
     10c:	and	w0, w0, #0xff
     110:	add	sp, sp, #0x10
     114:	ret

0000000000000118 <quota_sb_inump>:
     118:	sub	sp, sp, #0x10
     11c:	str	x0, [sp, #8]
     120:	str	w1, [sp, #4]
     124:	ldr	w0, [sp, #4]
     128:	cmp	w0, #0x2
     12c:	b.eq	170 <quota_sb_inump+0x58>  // b.none
     130:	ldr	w0, [sp, #4]
     134:	cmp	w0, #0x2
     138:	b.hi	17c <quota_sb_inump+0x64>  // b.pmore
     13c:	ldr	w0, [sp, #4]
     140:	cmp	w0, #0x0
     144:	b.eq	158 <quota_sb_inump+0x40>  // b.none
     148:	ldr	w0, [sp, #4]
     14c:	cmp	w0, #0x1
     150:	b.eq	164 <quota_sb_inump+0x4c>  // b.none
     154:	b	17c <quota_sb_inump+0x64>
     158:	ldr	x0, [sp, #8]
     15c:	add	x0, x0, #0x240
     160:	b	180 <quota_sb_inump+0x68>
     164:	ldr	x0, [sp, #8]
     168:	add	x0, x0, #0x244
     16c:	b	180 <quota_sb_inump+0x68>
     170:	ldr	x0, [sp, #8]
     174:	add	x0, x0, #0x26c
     178:	b	180 <quota_sb_inump+0x68>
     17c:	mov	x0, #0x0                   	// #0
     180:	add	sp, sp, #0x10
     184:	ret

0000000000000188 <print_user>:
     188:	stp	x29, x30, [sp, #-48]!
     18c:	mov	x29, sp
     190:	strh	w0, [sp, #30]
     194:	str	x1, [sp, #16]
     198:	ldrh	w0, [sp, #30]
     19c:	mov	w2, w0
     1a0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     1a4:	add	x1, x0, #0x0
     1a8:	ldr	x0, [sp, #16]
     1ac:	bl	0 <fprintf>
     1b0:	ldrh	w0, [sp, #30]
     1b4:	bl	0 <getpwuid>
     1b8:	str	x0, [sp, #40]
     1bc:	ldr	x0, [sp, #40]
     1c0:	cmp	x0, #0x0
     1c4:	b.ne	1e4 <print_user+0x5c>  // b.any
     1c8:	ldr	x3, [sp, #16]
     1cc:	mov	x2, #0xf                   	// #15
     1d0:	mov	x1, #0x1                   	// #1
     1d4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     1d8:	add	x0, x0, #0x0
     1dc:	bl	0 <fwrite>
     1e0:	b	200 <print_user+0x78>
     1e4:	ldr	x0, [sp, #40]
     1e8:	ldr	x0, [x0]
     1ec:	mov	x2, x0
     1f0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     1f4:	add	x1, x0, #0x0
     1f8:	ldr	x0, [sp, #16]
     1fc:	bl	0 <fprintf>
     200:	nop
     204:	ldp	x29, x30, [sp], #48
     208:	ret

000000000000020c <print_group>:
     20c:	stp	x29, x30, [sp, #-48]!
     210:	mov	x29, sp
     214:	strh	w0, [sp, #30]
     218:	str	x1, [sp, #16]
     21c:	ldrh	w0, [sp, #30]
     220:	mov	w2, w0
     224:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     228:	add	x1, x0, #0x0
     22c:	ldr	x0, [sp, #16]
     230:	bl	0 <fprintf>
     234:	ldrh	w0, [sp, #30]
     238:	bl	0 <getgrgid>
     23c:	str	x0, [sp, #40]
     240:	ldr	x0, [sp, #40]
     244:	cmp	x0, #0x0
     248:	b.ne	268 <print_group+0x5c>  // b.any
     24c:	ldr	x3, [sp, #16]
     250:	mov	x2, #0x10                  	// #16
     254:	mov	x1, #0x1                   	// #1
     258:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     25c:	add	x0, x0, #0x0
     260:	bl	0 <fwrite>
     264:	b	284 <print_group+0x78>
     268:	ldr	x0, [sp, #40]
     26c:	ldr	x0, [x0]
     270:	mov	x2, x0
     274:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     278:	add	x1, x0, #0x0
     27c:	ldr	x0, [sp, #16]
     280:	bl	0 <fprintf>
     284:	nop
     288:	ldp	x29, x30, [sp], #48
     28c:	ret

0000000000000290 <interval_string>:
     290:	stp	x29, x30, [sp, #-48]!
     294:	mov	x29, sp
     298:	str	w0, [sp, #28]
     29c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     2a0:	add	x0, x0, #0x0
     2a4:	strb	wzr, [x0]
     2a8:	ldr	w0, [sp, #28]
     2ac:	cmp	w0, #0x0
     2b0:	b.ne	2c0 <interval_string+0x30>  // b.any
     2b4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     2b8:	add	x0, x0, #0x0
     2bc:	b	5d0 <interval_string+0x340>
     2c0:	ldr	w1, [sp, #28]
     2c4:	mov	w0, #0x8cff                	// #36095
     2c8:	movk	w0, #0x27, lsl #16
     2cc:	cmp	w1, w0
     2d0:	b.ls	34c <interval_string+0xbc>  // b.plast
     2d4:	ldr	w1, [sp, #28]
     2d8:	mov	w0, #0x49a1                	// #18849
     2dc:	movk	w0, #0xcf20, lsl #16
     2e0:	umull	x0, w1, w0
     2e4:	lsr	x0, x0, #32
     2e8:	lsr	w0, w0, #21
     2ec:	str	w0, [sp, #44]
     2f0:	ldr	w1, [sp, #44]
     2f4:	mov	w0, #0x8d00                	// #36096
     2f8:	movk	w0, #0x27, lsl #16
     2fc:	mul	w0, w1, w0
     300:	mov	w1, w0
     304:	ldr	w0, [sp, #28]
     308:	sub	w0, w0, w1
     30c:	str	w0, [sp, #28]
     310:	ldr	w0, [sp, #44]
     314:	cmp	w0, #0x1
     318:	b.le	328 <interval_string+0x98>
     31c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     320:	add	x0, x0, #0x0
     324:	b	330 <interval_string+0xa0>
     328:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     32c:	add	x0, x0, #0x0
     330:	mov	x3, x0
     334:	ldr	w2, [sp, #44]
     338:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     33c:	add	x1, x0, #0x0
     340:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     344:	add	x0, x0, #0x0
     348:	bl	0 <sprintf>
     34c:	ldr	w1, [sp, #28]
     350:	mov	w0, #0x3a7f                	// #14975
     354:	movk	w0, #0x9, lsl #16
     358:	cmp	w1, w0
     35c:	b.ls	418 <interval_string+0x188>  // b.plast
     360:	ldr	w1, [sp, #28]
     364:	mov	w0, #0xde4d                	// #56909
     368:	movk	w0, #0x6ef5, lsl #16
     36c:	umull	x0, w1, w0
     370:	lsr	x0, x0, #32
     374:	lsr	w0, w0, #18
     378:	str	w0, [sp, #44]
     37c:	ldr	w1, [sp, #44]
     380:	mov	w0, #0x3a80                	// #14976
     384:	movk	w0, #0x9, lsl #16
     388:	mul	w0, w1, w0
     38c:	mov	w1, w0
     390:	ldr	w0, [sp, #28]
     394:	sub	w0, w0, w1
     398:	str	w0, [sp, #28]
     39c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     3a0:	add	x0, x0, #0x0
     3a4:	ldrb	w0, [x0]
     3a8:	cmp	w0, #0x0
     3ac:	b.eq	3bc <interval_string+0x12c>  // b.none
     3b0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     3b4:	add	x0, x0, #0x0
     3b8:	b	3c4 <interval_string+0x134>
     3bc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     3c0:	add	x0, x0, #0x0
     3c4:	ldr	w1, [sp, #44]
     3c8:	cmp	w1, #0x1
     3cc:	b.le	3dc <interval_string+0x14c>
     3d0:	adrp	x1, 0 <ext2fs_has_feature_dir_index>
     3d4:	add	x1, x1, #0x0
     3d8:	b	3e4 <interval_string+0x154>
     3dc:	adrp	x1, 0 <ext2fs_has_feature_dir_index>
     3e0:	add	x1, x1, #0x0
     3e4:	mov	x4, x1
     3e8:	ldr	w3, [sp, #44]
     3ec:	mov	x2, x0
     3f0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     3f4:	add	x1, x0, #0x0
     3f8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     3fc:	add	x0, x0, #0x0
     400:	bl	0 <sprintf>
     404:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     408:	add	x1, x0, #0x0
     40c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     410:	add	x0, x0, #0x0
     414:	bl	0 <strcat>
     418:	ldr	w1, [sp, #28]
     41c:	mov	w0, #0x517f                	// #20863
     420:	movk	w0, #0x1, lsl #16
     424:	cmp	w1, w0
     428:	b.ls	4e4 <interval_string+0x254>  // b.plast
     42c:	ldr	w1, [sp, #28]
     430:	mov	w0, #0x4507                	// #17671
     434:	movk	w0, #0xc22e, lsl #16
     438:	umull	x0, w1, w0
     43c:	lsr	x0, x0, #32
     440:	lsr	w0, w0, #16
     444:	str	w0, [sp, #44]
     448:	ldr	w1, [sp, #44]
     44c:	mov	w0, #0x5180                	// #20864
     450:	movk	w0, #0x1, lsl #16
     454:	mul	w0, w1, w0
     458:	mov	w1, w0
     45c:	ldr	w0, [sp, #28]
     460:	sub	w0, w0, w1
     464:	str	w0, [sp, #28]
     468:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     46c:	add	x0, x0, #0x0
     470:	ldrb	w0, [x0]
     474:	cmp	w0, #0x0
     478:	b.eq	488 <interval_string+0x1f8>  // b.none
     47c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     480:	add	x0, x0, #0x0
     484:	b	490 <interval_string+0x200>
     488:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     48c:	add	x0, x0, #0x0
     490:	ldr	w1, [sp, #44]
     494:	cmp	w1, #0x1
     498:	b.le	4a8 <interval_string+0x218>
     49c:	adrp	x1, 0 <ext2fs_has_feature_dir_index>
     4a0:	add	x1, x1, #0x0
     4a4:	b	4b0 <interval_string+0x220>
     4a8:	adrp	x1, 0 <ext2fs_has_feature_dir_index>
     4ac:	add	x1, x1, #0x0
     4b0:	mov	x4, x1
     4b4:	ldr	w3, [sp, #44]
     4b8:	mov	x2, x0
     4bc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     4c0:	add	x1, x0, #0x0
     4c4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     4c8:	add	x0, x0, #0x0
     4cc:	bl	0 <sprintf>
     4d0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     4d4:	add	x1, x0, #0x0
     4d8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     4dc:	add	x0, x0, #0x0
     4e0:	bl	0 <strcat>
     4e4:	ldr	w0, [sp, #28]
     4e8:	cmp	w0, #0x0
     4ec:	b.eq	5c8 <interval_string+0x338>  // b.none
     4f0:	ldr	w1, [sp, #28]
     4f4:	mov	w0, #0xb3c5                	// #46021
     4f8:	movk	w0, #0x91a2, lsl #16
     4fc:	umull	x0, w1, w0
     500:	lsr	x0, x0, #32
     504:	lsr	w0, w0, #11
     508:	str	w0, [sp, #40]
     50c:	ldr	w1, [sp, #40]
     510:	mov	w0, #0xe10                 	// #3600
     514:	mul	w0, w1, w0
     518:	mov	w1, w0
     51c:	ldr	w0, [sp, #28]
     520:	sub	w0, w0, w1
     524:	str	w0, [sp, #28]
     528:	ldr	w1, [sp, #28]
     52c:	mov	w0, #0x8889                	// #34953
     530:	movk	w0, #0x8888, lsl #16
     534:	umull	x0, w1, w0
     538:	lsr	x0, x0, #32
     53c:	lsr	w0, w0, #5
     540:	str	w0, [sp, #36]
     544:	ldr	w1, [sp, #36]
     548:	mov	w0, w1
     54c:	lsl	w0, w0, #4
     550:	sub	w0, w0, w1
     554:	lsl	w0, w0, #2
     558:	mov	w1, w0
     55c:	ldr	w0, [sp, #28]
     560:	sub	w0, w0, w1
     564:	str	w0, [sp, #28]
     568:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     56c:	add	x0, x0, #0x0
     570:	ldrb	w0, [x0]
     574:	cmp	w0, #0x0
     578:	b.eq	588 <interval_string+0x2f8>  // b.none
     57c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     580:	add	x0, x0, #0x0
     584:	b	590 <interval_string+0x300>
     588:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     58c:	add	x0, x0, #0x0
     590:	ldr	w5, [sp, #28]
     594:	ldr	w4, [sp, #36]
     598:	ldr	w3, [sp, #40]
     59c:	mov	x2, x0
     5a0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     5a4:	add	x1, x0, #0x0
     5a8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     5ac:	add	x0, x0, #0x0
     5b0:	bl	0 <sprintf>
     5b4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     5b8:	add	x1, x0, #0x0
     5bc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     5c0:	add	x0, x0, #0x0
     5c4:	bl	0 <strcat>
     5c8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     5cc:	add	x0, x0, #0x0
     5d0:	ldp	x29, x30, [sp], #48
     5d4:	ret

00000000000005d8 <print_features>:
     5d8:	stp	x29, x30, [sp, #-64]!
     5dc:	mov	x29, sp
     5e0:	str	x0, [sp, #24]
     5e4:	str	x1, [sp, #16]
     5e8:	str	wzr, [sp, #52]
     5ec:	ldr	x0, [sp, #24]
     5f0:	add	x0, x0, #0x5c
     5f4:	str	x0, [sp, #40]
     5f8:	ldr	x3, [sp, #16]
     5fc:	mov	x2, #0x19                  	// #25
     600:	mov	x1, #0x1                   	// #1
     604:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     608:	add	x0, x0, #0x0
     60c:	bl	0 <fwrite>
     610:	str	wzr, [sp, #60]
     614:	b	6a8 <print_features+0xd0>
     618:	str	wzr, [sp, #56]
     61c:	mov	w0, #0x1                   	// #1
     620:	str	w0, [sp, #36]
     624:	b	684 <print_features+0xac>
     628:	ldr	x0, [sp, #40]
     62c:	ldr	w1, [x0]
     630:	ldr	w0, [sp, #36]
     634:	and	w0, w1, w0
     638:	cmp	w0, #0x0
     63c:	b.eq	66c <print_features+0x94>  // b.none
     640:	ldr	w1, [sp, #36]
     644:	ldr	w0, [sp, #60]
     648:	bl	0 <e2p_feature2string>
     64c:	mov	x2, x0
     650:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     654:	add	x1, x0, #0x0
     658:	ldr	x0, [sp, #16]
     65c:	bl	0 <fprintf>
     660:	ldr	w0, [sp, #52]
     664:	add	w0, w0, #0x1
     668:	str	w0, [sp, #52]
     66c:	ldr	w0, [sp, #56]
     670:	add	w0, w0, #0x1
     674:	str	w0, [sp, #56]
     678:	ldr	w0, [sp, #36]
     67c:	lsl	w0, w0, #1
     680:	str	w0, [sp, #36]
     684:	ldr	w0, [sp, #56]
     688:	cmp	w0, #0x1f
     68c:	b.le	628 <print_features+0x50>
     690:	ldr	w0, [sp, #60]
     694:	add	w0, w0, #0x1
     698:	str	w0, [sp, #60]
     69c:	ldr	x0, [sp, #40]
     6a0:	add	x0, x0, #0x4
     6a4:	str	x0, [sp, #40]
     6a8:	ldr	w0, [sp, #60]
     6ac:	cmp	w0, #0x2
     6b0:	b.le	618 <print_features+0x40>
     6b4:	ldr	w0, [sp, #52]
     6b8:	cmp	w0, #0x0
     6bc:	b.ne	6d8 <print_features+0x100>  // b.any
     6c0:	ldr	x3, [sp, #16]
     6c4:	mov	x2, #0x7                   	// #7
     6c8:	mov	x1, #0x1                   	// #1
     6cc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     6d0:	add	x0, x0, #0x0
     6d4:	bl	0 <fwrite>
     6d8:	ldr	x1, [sp, #16]
     6dc:	mov	w0, #0xa                   	// #10
     6e0:	bl	0 <fputc>
     6e4:	nop
     6e8:	ldp	x29, x30, [sp], #64
     6ec:	ret

00000000000006f0 <print_mntopts>:
     6f0:	stp	x29, x30, [sp, #-48]!
     6f4:	mov	x29, sp
     6f8:	str	x0, [sp, #24]
     6fc:	str	x1, [sp, #16]
     700:	str	wzr, [sp, #40]
     704:	ldr	x0, [sp, #24]
     708:	ldr	w0, [x0, #256]
     70c:	str	w0, [sp, #32]
     710:	ldr	x3, [sp, #16]
     714:	mov	x2, #0x19                  	// #25
     718:	mov	x1, #0x1                   	// #1
     71c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     720:	add	x0, x0, #0x0
     724:	bl	0 <fwrite>
     728:	ldr	w0, [sp, #32]
     72c:	and	w0, w0, #0x60
     730:	cmp	w0, #0x0
     734:	b.eq	764 <print_mntopts+0x74>  // b.none
     738:	ldr	w0, [sp, #32]
     73c:	and	w0, w0, #0x60
     740:	bl	0 <e2p_mntopt2string>
     744:	mov	x2, x0
     748:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     74c:	add	x1, x0, #0x0
     750:	ldr	x0, [sp, #16]
     754:	bl	0 <fprintf>
     758:	ldr	w0, [sp, #40]
     75c:	add	w0, w0, #0x1
     760:	str	w0, [sp, #40]
     764:	str	wzr, [sp, #44]
     768:	mov	w0, #0x1                   	// #1
     76c:	str	w0, [sp, #36]
     770:	b	7e0 <print_mntopts+0xf0>
     774:	ldr	w0, [sp, #36]
     778:	and	w0, w0, #0x60
     77c:	cmp	w0, #0x0
     780:	b.ne	7c4 <print_mntopts+0xd4>  // b.any
     784:	ldr	w1, [sp, #32]
     788:	ldr	w0, [sp, #36]
     78c:	and	w0, w1, w0
     790:	cmp	w0, #0x0
     794:	b.eq	7c8 <print_mntopts+0xd8>  // b.none
     798:	ldr	w0, [sp, #36]
     79c:	bl	0 <e2p_mntopt2string>
     7a0:	mov	x2, x0
     7a4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     7a8:	add	x1, x0, #0x0
     7ac:	ldr	x0, [sp, #16]
     7b0:	bl	0 <fprintf>
     7b4:	ldr	w0, [sp, #40]
     7b8:	add	w0, w0, #0x1
     7bc:	str	w0, [sp, #40]
     7c0:	b	7c8 <print_mntopts+0xd8>
     7c4:	nop
     7c8:	ldr	w0, [sp, #44]
     7cc:	add	w0, w0, #0x1
     7d0:	str	w0, [sp, #44]
     7d4:	ldr	w0, [sp, #36]
     7d8:	lsl	w0, w0, #1
     7dc:	str	w0, [sp, #36]
     7e0:	ldr	w0, [sp, #44]
     7e4:	cmp	w0, #0x1f
     7e8:	b.le	774 <print_mntopts+0x84>
     7ec:	ldr	w0, [sp, #40]
     7f0:	cmp	w0, #0x0
     7f4:	b.ne	810 <print_mntopts+0x120>  // b.any
     7f8:	ldr	x3, [sp, #16]
     7fc:	mov	x2, #0x7                   	// #7
     800:	mov	x1, #0x1                   	// #1
     804:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     808:	add	x0, x0, #0x0
     80c:	bl	0 <fwrite>
     810:	ldr	x1, [sp, #16]
     814:	mov	w0, #0xa                   	// #10
     818:	bl	0 <fputc>
     81c:	nop
     820:	ldp	x29, x30, [sp], #48
     824:	ret

0000000000000828 <print_super_flags>:
     828:	stp	x29, x30, [sp, #-48]!
     82c:	mov	x29, sp
     830:	str	x0, [sp, #24]
     834:	str	x1, [sp, #16]
     838:	str	wzr, [sp, #44]
     83c:	ldr	x0, [sp, #24]
     840:	ldr	w0, [x0, #352]
     844:	cmp	w0, #0x0
     848:	b.eq	944 <print_super_flags+0x11c>  // b.none
     84c:	ldr	x3, [sp, #16]
     850:	mov	x2, #0x1a                  	// #26
     854:	mov	x1, #0x1                   	// #1
     858:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     85c:	add	x0, x0, #0x0
     860:	bl	0 <fwrite>
     864:	ldr	x0, [sp, #24]
     868:	ldr	w0, [x0, #352]
     86c:	and	w0, w0, #0x1
     870:	cmp	w0, #0x0
     874:	b.eq	89c <print_super_flags+0x74>  // b.none
     878:	ldr	x3, [sp, #16]
     87c:	mov	x2, #0x16                  	// #22
     880:	mov	x1, #0x1                   	// #1
     884:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     888:	add	x0, x0, #0x0
     88c:	bl	0 <fwrite>
     890:	ldr	w0, [sp, #44]
     894:	add	w0, w0, #0x1
     898:	str	w0, [sp, #44]
     89c:	ldr	x0, [sp, #24]
     8a0:	ldr	w0, [x0, #352]
     8a4:	and	w0, w0, #0x2
     8a8:	cmp	w0, #0x0
     8ac:	b.eq	8d4 <print_super_flags+0xac>  // b.none
     8b0:	ldr	x3, [sp, #16]
     8b4:	mov	x2, #0x18                  	// #24
     8b8:	mov	x1, #0x1                   	// #1
     8bc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     8c0:	add	x0, x0, #0x0
     8c4:	bl	0 <fwrite>
     8c8:	ldr	w0, [sp, #44]
     8cc:	add	w0, w0, #0x1
     8d0:	str	w0, [sp, #44]
     8d4:	ldr	x0, [sp, #24]
     8d8:	ldr	w0, [x0, #352]
     8dc:	and	w0, w0, #0x4
     8e0:	cmp	w0, #0x0
     8e4:	b.eq	90c <print_super_flags+0xe4>  // b.none
     8e8:	ldr	x3, [sp, #16]
     8ec:	mov	x2, #0x10                  	// #16
     8f0:	mov	x1, #0x1                   	// #1
     8f4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     8f8:	add	x0, x0, #0x0
     8fc:	bl	0 <fwrite>
     900:	ldr	w0, [sp, #44]
     904:	add	w0, w0, #0x1
     908:	str	w0, [sp, #44]
     90c:	ldr	w0, [sp, #44]
     910:	cmp	w0, #0x0
     914:	b.eq	928 <print_super_flags+0x100>  // b.none
     918:	ldr	x1, [sp, #16]
     91c:	mov	w0, #0xa                   	// #10
     920:	bl	0 <fputc>
     924:	b	948 <print_super_flags+0x120>
     928:	ldr	x3, [sp, #16]
     92c:	mov	x2, #0x7                   	// #7
     930:	mov	x1, #0x1                   	// #1
     934:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     938:	add	x0, x0, #0x0
     93c:	bl	0 <fwrite>
     940:	b	948 <print_super_flags+0x120>
     944:	nop
     948:	ldp	x29, x30, [sp], #48
     94c:	ret

0000000000000950 <e2p_blocks_count>:
     950:	stp	x29, x30, [sp, #-48]!
     954:	mov	x29, sp
     958:	str	x19, [sp, #16]
     95c:	str	x0, [sp, #40]
     960:	ldr	x0, [sp, #40]
     964:	ldr	w0, [x0, #4]
     968:	mov	w19, w0
     96c:	ldr	x0, [sp, #40]
     970:	bl	78 <ext2fs_has_feature_64bit>
     974:	cmp	w0, #0x0
     978:	b.eq	990 <e2p_blocks_count+0x40>  // b.none
     97c:	ldr	x0, [sp, #40]
     980:	ldr	w0, [x0, #336]
     984:	mov	w0, w0
     988:	lsl	x0, x0, #32
     98c:	b	994 <e2p_blocks_count+0x44>
     990:	mov	x0, #0x0                   	// #0
     994:	orr	x0, x0, x19
     998:	ldr	x19, [sp, #16]
     99c:	ldp	x29, x30, [sp], #48
     9a0:	ret

00000000000009a4 <e2p_r_blocks_count>:
     9a4:	stp	x29, x30, [sp, #-48]!
     9a8:	mov	x29, sp
     9ac:	str	x19, [sp, #16]
     9b0:	str	x0, [sp, #40]
     9b4:	ldr	x0, [sp, #40]
     9b8:	ldr	w0, [x0, #8]
     9bc:	mov	w19, w0
     9c0:	ldr	x0, [sp, #40]
     9c4:	bl	78 <ext2fs_has_feature_64bit>
     9c8:	cmp	w0, #0x0
     9cc:	b.eq	9e4 <e2p_r_blocks_count+0x40>  // b.none
     9d0:	ldr	x0, [sp, #40]
     9d4:	ldr	w0, [x0, #340]
     9d8:	mov	w0, w0
     9dc:	lsl	x0, x0, #32
     9e0:	b	9e8 <e2p_r_blocks_count+0x44>
     9e4:	mov	x0, #0x0                   	// #0
     9e8:	orr	x0, x0, x19
     9ec:	ldr	x19, [sp, #16]
     9f0:	ldp	x29, x30, [sp], #48
     9f4:	ret

00000000000009f8 <e2p_free_blocks_count>:
     9f8:	stp	x29, x30, [sp, #-48]!
     9fc:	mov	x29, sp
     a00:	str	x19, [sp, #16]
     a04:	str	x0, [sp, #40]
     a08:	ldr	x0, [sp, #40]
     a0c:	ldr	w0, [x0, #12]
     a10:	mov	w19, w0
     a14:	ldr	x0, [sp, #40]
     a18:	bl	78 <ext2fs_has_feature_64bit>
     a1c:	cmp	w0, #0x0
     a20:	b.eq	a38 <e2p_free_blocks_count+0x40>  // b.none
     a24:	ldr	x0, [sp, #40]
     a28:	ldr	w0, [x0, #344]
     a2c:	mov	w0, w0
     a30:	lsl	x0, x0, #32
     a34:	b	a3c <e2p_free_blocks_count+0x44>
     a38:	mov	x0, #0x0                   	// #0
     a3c:	orr	x0, x0, x19
     a40:	ldr	x19, [sp, #16]
     a44:	ldp	x29, x30, [sp], #48
     a48:	ret

0000000000000a4c <checksum_type>:
     a4c:	sub	sp, sp, #0x10
     a50:	strb	w0, [sp, #15]
     a54:	ldrb	w0, [sp, #15]
     a58:	cmp	w0, #0x1
     a5c:	b.ne	a6c <checksum_type+0x20>  // b.any
     a60:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     a64:	add	x0, x0, #0x0
     a68:	b	a74 <checksum_type+0x28>
     a6c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     a70:	add	x0, x0, #0x0
     a74:	add	sp, sp, #0x10
     a78:	ret

0000000000000a7c <quota_type2prefix>:
     a7c:	sub	sp, sp, #0x10
     a80:	str	w0, [sp, #12]
     a84:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     a88:	add	x0, x0, #0x0
     a8c:	ldr	w1, [sp, #12]
     a90:	ldr	x0, [x0, x1, lsl #3]
     a94:	add	sp, sp, #0x10
     a98:	ret

0000000000000a9c <list_super2>:
     a9c:	stp	x29, x30, [sp, #-160]!
     aa0:	mov	x29, sp
     aa4:	str	x19, [sp, #16]
     aa8:	str	x0, [sp, #40]
     aac:	str	x1, [sp, #32]
     ab0:	ldr	x0, [sp, #40]
     ab4:	ldr	w1, [x0, #40]
     ab8:	ldr	x0, [sp, #40]
     abc:	ldr	w0, [x0, #76]
     ac0:	cmp	w0, #0x0
     ac4:	b.eq	ad4 <list_super2+0x38>  // b.none
     ac8:	ldr	x0, [sp, #40]
     acc:	ldrh	w0, [x0, #88]
     ad0:	b	ad8 <list_super2+0x3c>
     ad4:	mov	w0, #0x80                  	// #128
     ad8:	mul	w0, w0, w1
     adc:	ldr	x1, [sp, #40]
     ae0:	ldr	w1, [x1, #24]
     ae4:	mov	w2, #0x400                 	// #1024
     ae8:	lsl	w1, w2, w1
     aec:	add	w0, w0, w1
     af0:	sub	w1, w0, #0x1
     af4:	ldr	x0, [sp, #40]
     af8:	ldr	w0, [x0, #24]
     afc:	add	w0, w0, #0xa
     b00:	lsr	w0, w1, w0
     b04:	str	w0, [sp, #152]
     b08:	ldr	x0, [sp, #40]
     b0c:	ldrb	w0, [x0, #120]
     b10:	cmp	w0, #0x0
     b14:	b.eq	b40 <list_super2+0xa4>  // b.none
     b18:	add	x0, sp, #0x40
     b1c:	mov	x2, #0x50                  	// #80
     b20:	mov	w1, #0x0                   	// #0
     b24:	bl	0 <memset>
     b28:	ldr	x0, [sp, #40]
     b2c:	add	x1, x0, #0x78
     b30:	add	x0, sp, #0x40
     b34:	mov	x2, #0x10                  	// #16
     b38:	bl	0 <strncpy>
     b3c:	b	b60 <list_super2+0xc4>
     b40:	add	x2, sp, #0x40
     b44:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     b48:	add	x1, x0, #0x0
     b4c:	mov	x0, x2
     b50:	ldr	w2, [x1]
     b54:	str	w2, [x0]
     b58:	ldur	w1, [x1, #3]
     b5c:	stur	w1, [x0, #3]
     b60:	add	x0, sp, #0x40
     b64:	mov	x2, x0
     b68:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     b6c:	add	x1, x0, #0x0
     b70:	ldr	x0, [sp, #32]
     b74:	bl	0 <fprintf>
     b78:	ldr	x0, [sp, #40]
     b7c:	ldrb	w0, [x0, #136]
     b80:	cmp	w0, #0x0
     b84:	b.eq	bb0 <list_super2+0x114>  // b.none
     b88:	add	x0, sp, #0x40
     b8c:	mov	x2, #0x50                  	// #80
     b90:	mov	w1, #0x0                   	// #0
     b94:	bl	0 <memset>
     b98:	ldr	x0, [sp, #40]
     b9c:	add	x1, x0, #0x88
     ba0:	add	x0, sp, #0x40
     ba4:	mov	x2, #0x40                  	// #64
     ba8:	bl	0 <strncpy>
     bac:	b	bc4 <list_super2+0x128>
     bb0:	add	x2, sp, #0x40
     bb4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     bb8:	add	x0, x0, #0x0
     bbc:	ldp	x0, x1, [x0]
     bc0:	stp	x0, x1, [x2]
     bc4:	add	x0, sp, #0x40
     bc8:	mov	x2, x0
     bcc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     bd0:	add	x1, x0, #0x0
     bd4:	ldr	x0, [sp, #32]
     bd8:	bl	0 <fprintf>
     bdc:	ldr	x0, [sp, #40]
     be0:	add	x0, x0, #0x68
     be4:	bl	0 <e2p_uuid2str>
     be8:	mov	x2, x0
     bec:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     bf0:	add	x1, x0, #0x0
     bf4:	ldr	x0, [sp, #32]
     bf8:	bl	0 <fprintf>
     bfc:	ldr	x0, [sp, #40]
     c00:	ldrh	w0, [x0, #56]
     c04:	mov	w2, w0
     c08:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     c0c:	add	x1, x0, #0x0
     c10:	ldr	x0, [sp, #32]
     c14:	bl	0 <fprintf>
     c18:	ldr	x0, [sp, #40]
     c1c:	ldr	w0, [x0, #76]
     c20:	mov	w2, w0
     c24:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     c28:	add	x1, x0, #0x0
     c2c:	ldr	x0, [sp, #32]
     c30:	bl	0 <fprintf>
     c34:	ldr	x0, [sp, #40]
     c38:	ldr	w0, [x0, #76]
     c3c:	cmp	w0, #0x0
     c40:	b.ne	c60 <list_super2+0x1c4>  // b.any
     c44:	ldr	x3, [sp, #32]
     c48:	mov	x2, #0xc                   	// #12
     c4c:	mov	x1, #0x1                   	// #1
     c50:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     c54:	add	x0, x0, #0x0
     c58:	bl	0 <fwrite>
     c5c:	b	ca4 <list_super2+0x208>
     c60:	ldr	x0, [sp, #40]
     c64:	ldr	w0, [x0, #76]
     c68:	cmp	w0, #0x1
     c6c:	b.ne	c8c <list_super2+0x1f0>  // b.any
     c70:	ldr	x3, [sp, #32]
     c74:	mov	x2, #0xb                   	// #11
     c78:	mov	x1, #0x1                   	// #1
     c7c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     c80:	add	x0, x0, #0x0
     c84:	bl	0 <fwrite>
     c88:	b	ca4 <list_super2+0x208>
     c8c:	ldr	x3, [sp, #32]
     c90:	mov	x2, #0xb                   	// #11
     c94:	mov	x1, #0x1                   	// #1
     c98:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     c9c:	add	x0, x0, #0x0
     ca0:	bl	0 <fwrite>
     ca4:	ldr	x1, [sp, #32]
     ca8:	ldr	x0, [sp, #40]
     cac:	bl	5d8 <print_features>
     cb0:	ldr	x1, [sp, #32]
     cb4:	ldr	x0, [sp, #40]
     cb8:	bl	828 <print_super_flags>
     cbc:	ldr	x1, [sp, #32]
     cc0:	ldr	x0, [sp, #40]
     cc4:	bl	6f0 <print_mntopts>
     cc8:	ldr	x0, [sp, #40]
     ccc:	ldrb	w0, [x0, #512]
     cd0:	cmp	w0, #0x0
     cd4:	b.eq	cf4 <list_super2+0x258>  // b.none
     cd8:	ldr	x0, [sp, #40]
     cdc:	add	x0, x0, #0x200
     ce0:	mov	x2, x0
     ce4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     ce8:	add	x1, x0, #0x0
     cec:	ldr	x0, [sp, #32]
     cf0:	bl	0 <fprintf>
     cf4:	ldr	x3, [sp, #32]
     cf8:	mov	x2, #0x19                  	// #25
     cfc:	mov	x1, #0x1                   	// #1
     d00:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     d04:	add	x0, x0, #0x0
     d08:	bl	0 <fwrite>
     d0c:	ldr	x0, [sp, #40]
     d10:	ldrh	w0, [x0, #58]
     d14:	mov	w1, w0
     d18:	ldr	x0, [sp, #32]
     d1c:	bl	0 <print_fs_state>
     d20:	ldr	x1, [sp, #32]
     d24:	mov	w0, #0xa                   	// #10
     d28:	bl	0 <fputc>
     d2c:	ldr	x3, [sp, #32]
     d30:	mov	x2, #0x1a                  	// #26
     d34:	mov	x1, #0x1                   	// #1
     d38:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     d3c:	add	x0, x0, #0x0
     d40:	bl	0 <fwrite>
     d44:	ldr	x0, [sp, #40]
     d48:	ldrh	w0, [x0, #60]
     d4c:	mov	w1, w0
     d50:	ldr	x0, [sp, #32]
     d54:	bl	0 <print_fs_errors>
     d58:	ldr	x1, [sp, #32]
     d5c:	mov	w0, #0xa                   	// #10
     d60:	bl	0 <fputc>
     d64:	ldr	x0, [sp, #40]
     d68:	ldr	w0, [x0, #72]
     d6c:	bl	0 <e2p_os2string>
     d70:	str	x0, [sp, #144]
     d74:	ldr	x2, [sp, #144]
     d78:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     d7c:	add	x1, x0, #0x0
     d80:	ldr	x0, [sp, #32]
     d84:	bl	0 <fprintf>
     d88:	ldr	x0, [sp, #144]
     d8c:	bl	0 <free>
     d90:	ldr	x0, [sp, #40]
     d94:	ldr	w0, [x0]
     d98:	mov	w2, w0
     d9c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     da0:	add	x1, x0, #0x0
     da4:	ldr	x0, [sp, #32]
     da8:	bl	0 <fprintf>
     dac:	ldr	x0, [sp, #40]
     db0:	bl	950 <e2p_blocks_count>
     db4:	mov	x2, x0
     db8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     dbc:	add	x1, x0, #0x0
     dc0:	ldr	x0, [sp, #32]
     dc4:	bl	0 <fprintf>
     dc8:	ldr	x0, [sp, #40]
     dcc:	bl	9a4 <e2p_r_blocks_count>
     dd0:	mov	x2, x0
     dd4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     dd8:	add	x1, x0, #0x0
     ddc:	ldr	x0, [sp, #32]
     de0:	bl	0 <fprintf>
     de4:	ldr	x0, [sp, #40]
     de8:	ldr	w0, [x0, #584]
     dec:	cmp	w0, #0x0
     df0:	b.eq	e10 <list_super2+0x374>  // b.none
     df4:	ldr	x0, [sp, #40]
     df8:	ldr	w0, [x0, #584]
     dfc:	mov	w2, w0
     e00:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     e04:	add	x1, x0, #0x0
     e08:	ldr	x0, [sp, #32]
     e0c:	bl	0 <fprintf>
     e10:	ldr	x0, [sp, #40]
     e14:	bl	9f8 <e2p_free_blocks_count>
     e18:	mov	x2, x0
     e1c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     e20:	add	x1, x0, #0x0
     e24:	ldr	x0, [sp, #32]
     e28:	bl	0 <fprintf>
     e2c:	ldr	x0, [sp, #40]
     e30:	ldr	w0, [x0, #16]
     e34:	mov	w2, w0
     e38:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     e3c:	add	x1, x0, #0x0
     e40:	ldr	x0, [sp, #32]
     e44:	bl	0 <fprintf>
     e48:	ldr	x0, [sp, #40]
     e4c:	ldr	w0, [x0, #20]
     e50:	mov	w2, w0
     e54:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     e58:	add	x1, x0, #0x0
     e5c:	ldr	x0, [sp, #32]
     e60:	bl	0 <fprintf>
     e64:	ldr	x0, [sp, #40]
     e68:	ldr	w0, [x0, #24]
     e6c:	mov	w1, #0x400                 	// #1024
     e70:	lsl	w0, w1, w0
     e74:	mov	w2, w0
     e78:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     e7c:	add	x1, x0, #0x0
     e80:	ldr	x0, [sp, #32]
     e84:	bl	0 <fprintf>
     e88:	ldr	x0, [sp, #40]
     e8c:	bl	28 <ext2fs_has_feature_bigalloc>
     e90:	cmp	w0, #0x0
     e94:	b.eq	ec0 <list_super2+0x424>  // b.none
     e98:	ldr	x0, [sp, #40]
     e9c:	ldr	w0, [x0, #28]
     ea0:	mov	w1, #0x400                 	// #1024
     ea4:	lsl	w0, w1, w0
     ea8:	mov	w2, w0
     eac:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     eb0:	add	x1, x0, #0x0
     eb4:	ldr	x0, [sp, #32]
     eb8:	bl	0 <fprintf>
     ebc:	b	ee4 <list_super2+0x448>
     ec0:	ldr	x0, [sp, #40]
     ec4:	ldr	w0, [x0, #28]
     ec8:	mov	w1, #0x400                 	// #1024
     ecc:	lsl	w0, w1, w0
     ed0:	mov	w2, w0
     ed4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     ed8:	add	x1, x0, #0x0
     edc:	ldr	x0, [sp, #32]
     ee0:	bl	0 <fprintf>
     ee4:	ldr	x0, [sp, #40]
     ee8:	bl	78 <ext2fs_has_feature_64bit>
     eec:	cmp	w0, #0x0
     ef0:	b.eq	f10 <list_super2+0x474>  // b.none
     ef4:	ldr	x0, [sp, #40]
     ef8:	ldrh	w0, [x0, #254]
     efc:	mov	w2, w0
     f00:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     f04:	add	x1, x0, #0x0
     f08:	ldr	x0, [sp, #32]
     f0c:	bl	0 <fprintf>
     f10:	ldr	x0, [sp, #40]
     f14:	ldrh	w0, [x0, #206]
     f18:	cmp	w0, #0x0
     f1c:	b.eq	f3c <list_super2+0x4a0>  // b.none
     f20:	ldr	x0, [sp, #40]
     f24:	ldrh	w0, [x0, #206]
     f28:	mov	w2, w0
     f2c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     f30:	add	x1, x0, #0x0
     f34:	ldr	x0, [sp, #32]
     f38:	bl	0 <fprintf>
     f3c:	ldr	x0, [sp, #40]
     f40:	ldr	w0, [x0, #32]
     f44:	mov	w2, w0
     f48:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     f4c:	add	x1, x0, #0x0
     f50:	ldr	x0, [sp, #32]
     f54:	bl	0 <fprintf>
     f58:	ldr	x0, [sp, #40]
     f5c:	bl	28 <ext2fs_has_feature_bigalloc>
     f60:	cmp	w0, #0x0
     f64:	b.eq	f88 <list_super2+0x4ec>  // b.none
     f68:	ldr	x0, [sp, #40]
     f6c:	ldr	w0, [x0, #36]
     f70:	mov	w2, w0
     f74:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     f78:	add	x1, x0, #0x0
     f7c:	ldr	x0, [sp, #32]
     f80:	bl	0 <fprintf>
     f84:	b	fa4 <list_super2+0x508>
     f88:	ldr	x0, [sp, #40]
     f8c:	ldr	w0, [x0, #36]
     f90:	mov	w2, w0
     f94:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     f98:	add	x1, x0, #0x0
     f9c:	ldr	x0, [sp, #32]
     fa0:	bl	0 <fprintf>
     fa4:	ldr	x0, [sp, #40]
     fa8:	ldr	w0, [x0, #40]
     fac:	mov	w2, w0
     fb0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     fb4:	add	x1, x0, #0x0
     fb8:	ldr	x0, [sp, #32]
     fbc:	bl	0 <fprintf>
     fc0:	ldr	w2, [sp, #152]
     fc4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     fc8:	add	x1, x0, #0x0
     fcc:	ldr	x0, [sp, #32]
     fd0:	bl	0 <fprintf>
     fd4:	ldr	x0, [sp, #40]
     fd8:	ldrh	w0, [x0, #356]
     fdc:	cmp	w0, #0x0
     fe0:	b.eq	1000 <list_super2+0x564>  // b.none
     fe4:	ldr	x0, [sp, #40]
     fe8:	ldrh	w0, [x0, #356]
     fec:	mov	w2, w0
     ff0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
     ff4:	add	x1, x0, #0x0
     ff8:	ldr	x0, [sp, #32]
     ffc:	bl	0 <fprintf>
    1000:	ldr	x0, [sp, #40]
    1004:	ldr	w0, [x0, #368]
    1008:	cmp	w0, #0x0
    100c:	b.eq	102c <list_super2+0x590>  // b.none
    1010:	ldr	x0, [sp, #40]
    1014:	ldr	w0, [x0, #368]
    1018:	mov	w2, w0
    101c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1020:	add	x1, x0, #0x0
    1024:	ldr	x0, [sp, #32]
    1028:	bl	0 <fprintf>
    102c:	ldr	x0, [sp, #40]
    1030:	ldr	w0, [x0, #260]
    1034:	cmp	w0, #0x0
    1038:	b.eq	1058 <list_super2+0x5bc>  // b.none
    103c:	ldr	x0, [sp, #40]
    1040:	ldr	w0, [x0, #260]
    1044:	mov	w2, w0
    1048:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    104c:	add	x1, x0, #0x0
    1050:	ldr	x0, [sp, #32]
    1054:	bl	0 <fprintf>
    1058:	ldr	x0, [sp, #40]
    105c:	ldrb	w0, [x0, #372]
    1060:	cmp	w0, #0x0
    1064:	b.eq	1090 <list_super2+0x5f4>  // b.none
    1068:	ldr	x0, [sp, #40]
    106c:	ldrb	w0, [x0, #372]
    1070:	mov	w1, w0
    1074:	mov	w0, #0x1                   	// #1
    1078:	lsl	w0, w0, w1
    107c:	mov	w2, w0
    1080:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1084:	add	x1, x0, #0x0
    1088:	ldr	x0, [sp, #32]
    108c:	bl	0 <fprintf>
    1090:	ldr	x0, [sp, #40]
    1094:	ldr	w0, [x0, #264]
    1098:	cmp	w0, #0x0
    109c:	b.eq	10cc <list_super2+0x630>  // b.none
    10a0:	ldr	x0, [sp, #40]
    10a4:	ldr	w0, [x0, #264]
    10a8:	mov	w0, w0
    10ac:	str	x0, [sp, #56]
    10b0:	add	x0, sp, #0x38
    10b4:	bl	0 <ctime>
    10b8:	mov	x2, x0
    10bc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    10c0:	add	x1, x0, #0x0
    10c4:	ldr	x0, [sp, #32]
    10c8:	bl	0 <fprintf>
    10cc:	ldr	x0, [sp, #40]
    10d0:	ldr	w0, [x0, #44]
    10d4:	mov	w0, w0
    10d8:	str	x0, [sp, #56]
    10dc:	ldr	x0, [sp, #40]
    10e0:	ldr	w0, [x0, #44]
    10e4:	cmp	w0, #0x0
    10e8:	b.eq	10f8 <list_super2+0x65c>  // b.none
    10ec:	add	x0, sp, #0x38
    10f0:	bl	0 <ctime>
    10f4:	b	1100 <list_super2+0x664>
    10f8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    10fc:	add	x0, x0, #0x0
    1100:	mov	x2, x0
    1104:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1108:	add	x1, x0, #0x0
    110c:	ldr	x0, [sp, #32]
    1110:	bl	0 <fprintf>
    1114:	ldr	x0, [sp, #40]
    1118:	ldr	w0, [x0, #48]
    111c:	mov	w0, w0
    1120:	str	x0, [sp, #56]
    1124:	add	x0, sp, #0x38
    1128:	bl	0 <ctime>
    112c:	mov	x2, x0
    1130:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1134:	add	x1, x0, #0x0
    1138:	ldr	x0, [sp, #32]
    113c:	bl	0 <fprintf>
    1140:	ldr	x0, [sp, #40]
    1144:	ldrh	w0, [x0, #52]
    1148:	mov	w2, w0
    114c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1150:	add	x1, x0, #0x0
    1154:	ldr	x0, [sp, #32]
    1158:	bl	0 <fprintf>
    115c:	ldr	x0, [sp, #40]
    1160:	ldrsh	w0, [x0, #54]
    1164:	mov	w2, w0
    1168:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    116c:	add	x1, x0, #0x0
    1170:	ldr	x0, [sp, #32]
    1174:	bl	0 <fprintf>
    1178:	ldr	x0, [sp, #40]
    117c:	ldr	w0, [x0, #64]
    1180:	mov	w0, w0
    1184:	str	x0, [sp, #56]
    1188:	add	x0, sp, #0x38
    118c:	bl	0 <ctime>
    1190:	mov	x2, x0
    1194:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1198:	add	x1, x0, #0x0
    119c:	ldr	x0, [sp, #32]
    11a0:	bl	0 <fprintf>
    11a4:	ldr	x0, [sp, #40]
    11a8:	ldr	w19, [x0, #68]
    11ac:	ldr	x0, [sp, #40]
    11b0:	ldr	w0, [x0, #68]
    11b4:	bl	290 <interval_string>
    11b8:	mov	x3, x0
    11bc:	mov	w2, w19
    11c0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    11c4:	add	x1, x0, #0x0
    11c8:	ldr	x0, [sp, #32]
    11cc:	bl	0 <fprintf>
    11d0:	ldr	x0, [sp, #40]
    11d4:	ldr	w0, [x0, #68]
    11d8:	cmp	w0, #0x0
    11dc:	b.eq	1218 <list_super2+0x77c>  // b.none
    11e0:	ldr	x0, [sp, #40]
    11e4:	ldr	w1, [x0, #64]
    11e8:	ldr	x0, [sp, #40]
    11ec:	ldr	w0, [x0, #68]
    11f0:	add	w0, w1, w0
    11f4:	mov	w0, w0
    11f8:	str	x0, [sp, #48]
    11fc:	add	x0, sp, #0x30
    1200:	bl	0 <ctime>
    1204:	mov	x2, x0
    1208:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    120c:	add	x1, x0, #0x0
    1210:	ldr	x0, [sp, #32]
    1214:	bl	0 <fprintf>
    1218:	ldr	x0, [sp, #40]
    121c:	ldr	x0, [x0, #376]
    1220:	cmp	x0, #0x0
    1224:	b.eq	1354 <list_super2+0x8b8>  // b.none
    1228:	ldr	x3, [sp, #32]
    122c:	mov	x2, #0x1a                  	// #26
    1230:	mov	x1, #0x1                   	// #1
    1234:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1238:	add	x0, x0, #0x0
    123c:	bl	0 <fwrite>
    1240:	ldr	x0, [sp, #40]
    1244:	ldr	x1, [x0, #376]
    1248:	mov	x0, #0x1fff                	// #8191
    124c:	cmp	x1, x0
    1250:	b.hi	1274 <list_super2+0x7d8>  // b.pmore
    1254:	ldr	x0, [sp, #40]
    1258:	ldr	x0, [x0, #376]
    125c:	mov	x2, x0
    1260:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1264:	add	x1, x0, #0x0
    1268:	ldr	x0, [sp, #32]
    126c:	bl	0 <fprintf>
    1270:	b	1354 <list_super2+0x8b8>
    1274:	ldr	x0, [sp, #40]
    1278:	ldr	x1, [x0, #376]
    127c:	mov	x0, #0x7fffff              	// #8388607
    1280:	cmp	x1, x0
    1284:	b.hi	12b0 <list_super2+0x814>  // b.pmore
    1288:	ldr	x0, [sp, #40]
    128c:	ldr	x0, [x0, #376]
    1290:	add	x0, x0, #0x200
    1294:	lsr	x0, x0, #10
    1298:	mov	x2, x0
    129c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    12a0:	add	x1, x0, #0x0
    12a4:	ldr	x0, [sp, #32]
    12a8:	bl	0 <fprintf>
    12ac:	b	1354 <list_super2+0x8b8>
    12b0:	ldr	x0, [sp, #40]
    12b4:	ldr	x1, [x0, #376]
    12b8:	mov	x0, #0x1ffffffff           	// #8589934591
    12bc:	cmp	x1, x0
    12c0:	b.hi	12ec <list_super2+0x850>  // b.pmore
    12c4:	ldr	x0, [sp, #40]
    12c8:	ldr	x0, [x0, #376]
    12cc:	add	x0, x0, #0x80, lsl #12
    12d0:	lsr	x0, x0, #20
    12d4:	mov	x2, x0
    12d8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    12dc:	add	x1, x0, #0x0
    12e0:	ldr	x0, [sp, #32]
    12e4:	bl	0 <fprintf>
    12e8:	b	1354 <list_super2+0x8b8>
    12ec:	ldr	x0, [sp, #40]
    12f0:	ldr	x1, [x0, #376]
    12f4:	mov	x0, #0x7ffffffffff         	// #8796093022207
    12f8:	cmp	x1, x0
    12fc:	b.hi	132c <list_super2+0x890>  // b.pmore
    1300:	ldr	x0, [sp, #40]
    1304:	ldr	x1, [x0, #376]
    1308:	mov	x0, #0x20000000            	// #536870912
    130c:	add	x0, x1, x0
    1310:	lsr	x0, x0, #30
    1314:	mov	x2, x0
    1318:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    131c:	add	x1, x0, #0x0
    1320:	ldr	x0, [sp, #32]
    1324:	bl	0 <fprintf>
    1328:	b	1354 <list_super2+0x8b8>
    132c:	ldr	x0, [sp, #40]
    1330:	ldr	x1, [x0, #376]
    1334:	mov	x0, #0x8000000000          	// #549755813888
    1338:	add	x0, x1, x0
    133c:	lsr	x0, x0, #40
    1340:	mov	x2, x0
    1344:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1348:	add	x1, x0, #0x0
    134c:	ldr	x0, [sp, #32]
    1350:	bl	0 <fprintf>
    1354:	ldr	x3, [sp, #32]
    1358:	mov	x2, #0x1a                  	// #26
    135c:	mov	x1, #0x1                   	// #1
    1360:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1364:	add	x0, x0, #0x0
    1368:	bl	0 <fwrite>
    136c:	ldr	x0, [sp, #40]
    1370:	ldrh	w0, [x0, #80]
    1374:	ldr	x1, [sp, #32]
    1378:	bl	188 <print_user>
    137c:	ldr	x3, [sp, #32]
    1380:	mov	x2, #0x1a                  	// #26
    1384:	mov	x1, #0x1                   	// #1
    1388:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    138c:	add	x0, x0, #0x0
    1390:	bl	0 <fwrite>
    1394:	ldr	x0, [sp, #40]
    1398:	ldrh	w0, [x0, #82]
    139c:	ldr	x1, [sp, #32]
    13a0:	bl	20c <print_group>
    13a4:	ldr	x0, [sp, #40]
    13a8:	ldr	w0, [x0, #76]
    13ac:	cmp	w0, #0x0
    13b0:	b.eq	1444 <list_super2+0x9a8>  // b.none
    13b4:	ldr	x0, [sp, #40]
    13b8:	ldr	w0, [x0, #84]
    13bc:	mov	w2, w0
    13c0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    13c4:	add	x1, x0, #0x0
    13c8:	ldr	x0, [sp, #32]
    13cc:	bl	0 <fprintf>
    13d0:	ldr	x0, [sp, #40]
    13d4:	ldrh	w0, [x0, #88]
    13d8:	mov	w2, w0
    13dc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    13e0:	add	x1, x0, #0x0
    13e4:	ldr	x0, [sp, #32]
    13e8:	bl	0 <fprintf>
    13ec:	ldr	x0, [sp, #40]
    13f0:	ldrh	w0, [x0, #348]
    13f4:	cmp	w0, #0x0
    13f8:	b.eq	1418 <list_super2+0x97c>  // b.none
    13fc:	ldr	x0, [sp, #40]
    1400:	ldrh	w0, [x0, #348]
    1404:	mov	w2, w0
    1408:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    140c:	add	x1, x0, #0x0
    1410:	ldr	x0, [sp, #32]
    1414:	bl	0 <fprintf>
    1418:	ldr	x0, [sp, #40]
    141c:	ldrh	w0, [x0, #350]
    1420:	cmp	w0, #0x0
    1424:	b.eq	1444 <list_super2+0x9a8>  // b.none
    1428:	ldr	x0, [sp, #40]
    142c:	ldrh	w0, [x0, #350]
    1430:	mov	w2, w0
    1434:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1438:	add	x1, x0, #0x0
    143c:	ldr	x0, [sp, #32]
    1440:	bl	0 <fprintf>
    1444:	ldr	x0, [sp, #40]
    1448:	add	x0, x0, #0xd0
    144c:	bl	0 <e2p_is_null_uuid>
    1450:	cmp	w0, #0x0
    1454:	b.ne	1478 <list_super2+0x9dc>  // b.any
    1458:	ldr	x0, [sp, #40]
    145c:	add	x0, x0, #0xd0
    1460:	bl	0 <e2p_uuid2str>
    1464:	mov	x2, x0
    1468:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    146c:	add	x1, x0, #0x0
    1470:	ldr	x0, [sp, #32]
    1474:	bl	0 <fprintf>
    1478:	ldr	x0, [sp, #40]
    147c:	ldr	w0, [x0, #224]
    1480:	cmp	w0, #0x0
    1484:	b.eq	14a4 <list_super2+0xa08>  // b.none
    1488:	ldr	x0, [sp, #40]
    148c:	ldr	w0, [x0, #224]
    1490:	mov	w2, w0
    1494:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1498:	add	x1, x0, #0x0
    149c:	ldr	x0, [sp, #32]
    14a0:	bl	0 <fprintf>
    14a4:	ldr	x0, [sp, #40]
    14a8:	ldr	w0, [x0, #228]
    14ac:	cmp	w0, #0x0
    14b0:	b.eq	14d0 <list_super2+0xa34>  // b.none
    14b4:	ldr	x0, [sp, #40]
    14b8:	ldr	w0, [x0, #228]
    14bc:	mov	w2, w0
    14c0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    14c4:	add	x1, x0, #0x0
    14c8:	ldr	x0, [sp, #32]
    14cc:	bl	0 <fprintf>
    14d0:	ldr	x0, [sp, #40]
    14d4:	ldr	w0, [x0, #232]
    14d8:	cmp	w0, #0x0
    14dc:	b.eq	14fc <list_super2+0xa60>  // b.none
    14e0:	ldr	x0, [sp, #40]
    14e4:	ldr	w0, [x0, #232]
    14e8:	mov	w2, w0
    14ec:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    14f0:	add	x1, x0, #0x0
    14f4:	ldr	x0, [sp, #32]
    14f8:	bl	0 <fprintf>
    14fc:	ldr	x0, [sp, #40]
    1500:	bl	0 <ext2fs_has_feature_dir_index>
    1504:	cmp	w0, #0x0
    1508:	b.ne	151c <list_super2+0xa80>  // b.any
    150c:	ldr	x0, [sp, #40]
    1510:	ldrb	w0, [x0, #252]
    1514:	cmp	w0, #0x0
    1518:	b.eq	153c <list_super2+0xaa0>  // b.none
    151c:	ldr	x0, [sp, #40]
    1520:	ldrb	w0, [x0, #252]
    1524:	bl	0 <e2p_hash2string>
    1528:	mov	x2, x0
    152c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1530:	add	x1, x0, #0x0
    1534:	ldr	x0, [sp, #32]
    1538:	bl	0 <fprintf>
    153c:	ldr	x0, [sp, #40]
    1540:	add	x0, x0, #0xec
    1544:	bl	0 <e2p_is_null_uuid>
    1548:	cmp	w0, #0x0
    154c:	b.ne	1570 <list_super2+0xad4>  // b.any
    1550:	ldr	x0, [sp, #40]
    1554:	add	x0, x0, #0xec
    1558:	bl	0 <e2p_uuid2str>
    155c:	mov	x2, x0
    1560:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1564:	add	x1, x0, #0x0
    1568:	ldr	x0, [sp, #32]
    156c:	bl	0 <fprintf>
    1570:	ldr	x0, [sp, #40]
    1574:	ldrb	w0, [x0, #253]
    1578:	cmp	w0, #0x0
    157c:	b.eq	15e4 <list_super2+0xb48>  // b.none
    1580:	ldr	x3, [sp, #32]
    1584:	mov	x2, #0x1a                  	// #26
    1588:	mov	x1, #0x1                   	// #1
    158c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1590:	add	x0, x0, #0x0
    1594:	bl	0 <fwrite>
    1598:	ldr	x0, [sp, #40]
    159c:	ldrb	w0, [x0, #253]
    15a0:	cmp	w0, #0x1
    15a4:	b.ne	15c4 <list_super2+0xb28>  // b.any
    15a8:	ldr	x3, [sp, #32]
    15ac:	mov	x2, #0xd                   	// #13
    15b0:	mov	x1, #0x1                   	// #1
    15b4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    15b8:	add	x0, x0, #0x0
    15bc:	bl	0 <fwrite>
    15c0:	b	15e8 <list_super2+0xb4c>
    15c4:	ldr	x0, [sp, #40]
    15c8:	ldrb	w0, [x0, #253]
    15cc:	mov	w2, w0
    15d0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    15d4:	add	x1, x0, #0x0
    15d8:	ldr	x0, [sp, #32]
    15dc:	bl	0 <fprintf>
    15e0:	b	15e8 <list_super2+0xb4c>
    15e4:	nop
    15e8:	ldr	x0, [sp, #40]
    15ec:	ldr	w0, [x0, #588]
    15f0:	cmp	w0, #0x0
    15f4:	b.ne	1608 <list_super2+0xb6c>  // b.any
    15f8:	ldr	x0, [sp, #40]
    15fc:	ldr	w0, [x0, #592]
    1600:	cmp	w0, #0x0
    1604:	b.eq	1684 <list_super2+0xbe8>  // b.none
    1608:	ldr	x3, [sp, #32]
    160c:	mov	x2, #0x1a                  	// #26
    1610:	mov	x1, #0x1                   	// #1
    1614:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1618:	add	x0, x0, #0x0
    161c:	bl	0 <fwrite>
    1620:	ldr	x0, [sp, #40]
    1624:	ldr	w0, [x0, #588]
    1628:	cmp	w0, #0x0
    162c:	b.eq	164c <list_super2+0xbb0>  // b.none
    1630:	ldr	x0, [sp, #40]
    1634:	ldr	w0, [x0, #588]
    1638:	mov	w2, w0
    163c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1640:	add	x1, x0, #0x0
    1644:	ldr	x0, [sp, #32]
    1648:	bl	0 <fprintf>
    164c:	ldr	x0, [sp, #40]
    1650:	ldr	w0, [x0, #592]
    1654:	cmp	w0, #0x0
    1658:	b.eq	1678 <list_super2+0xbdc>  // b.none
    165c:	ldr	x0, [sp, #40]
    1660:	ldr	w0, [x0, #592]
    1664:	mov	w2, w0
    1668:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    166c:	add	x1, x0, #0x0
    1670:	ldr	x0, [sp, #32]
    1674:	bl	0 <fprintf>
    1678:	ldr	x1, [sp, #32]
    167c:	mov	w0, #0xa                   	// #10
    1680:	bl	0 <fputc>
    1684:	ldr	x0, [sp, #40]
    1688:	ldr	w0, [x0, #384]
    168c:	cmp	w0, #0x0
    1690:	b.eq	16e8 <list_super2+0xc4c>  // b.none
    1694:	ldr	x0, [sp, #40]
    1698:	ldr	w0, [x0, #384]
    169c:	mov	w2, w0
    16a0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    16a4:	add	x1, x0, #0x0
    16a8:	ldr	x0, [sp, #32]
    16ac:	bl	0 <fprintf>
    16b0:	ldr	x0, [sp, #40]
    16b4:	ldr	w0, [x0, #388]
    16b8:	mov	w2, w0
    16bc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    16c0:	add	x1, x0, #0x0
    16c4:	ldr	x0, [sp, #32]
    16c8:	bl	0 <fprintf>
    16cc:	ldr	x0, [sp, #40]
    16d0:	ldr	x0, [x0, #392]
    16d4:	mov	x2, x0
    16d8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    16dc:	add	x1, x0, #0x0
    16e0:	ldr	x0, [sp, #32]
    16e4:	bl	0 <fprintf>
    16e8:	ldr	x0, [sp, #40]
    16ec:	ldr	w0, [x0, #400]
    16f0:	cmp	w0, #0x0
    16f4:	b.eq	1714 <list_super2+0xc78>  // b.none
    16f8:	ldr	x0, [sp, #40]
    16fc:	ldr	w0, [x0, #400]
    1700:	mov	w2, w0
    1704:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1708:	add	x1, x0, #0x0
    170c:	ldr	x0, [sp, #32]
    1710:	bl	0 <fprintf>
    1714:	ldr	x0, [sp, #40]
    1718:	ldr	w0, [x0, #404]
    171c:	cmp	w0, #0x0
    1720:	b.eq	1740 <list_super2+0xca4>  // b.none
    1724:	ldr	x0, [sp, #40]
    1728:	ldr	w0, [x0, #404]
    172c:	mov	w2, w0
    1730:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1734:	add	x1, x0, #0x0
    1738:	ldr	x0, [sp, #32]
    173c:	bl	0 <fprintf>
    1740:	ldr	x0, [sp, #40]
    1744:	ldr	w0, [x0, #408]
    1748:	cmp	w0, #0x0
    174c:	b.eq	180c <list_super2+0xd70>  // b.none
    1750:	ldr	x0, [sp, #40]
    1754:	ldr	w0, [x0, #408]
    1758:	mov	w0, w0
    175c:	str	x0, [sp, #56]
    1760:	add	x0, sp, #0x38
    1764:	bl	0 <ctime>
    1768:	mov	x2, x0
    176c:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1770:	add	x1, x0, #0x0
    1774:	ldr	x0, [sp, #32]
    1778:	bl	0 <fprintf>
    177c:	add	x0, sp, #0x40
    1780:	mov	x2, #0x50                  	// #80
    1784:	mov	w1, #0x0                   	// #0
    1788:	bl	0 <memset>
    178c:	ldr	x0, [sp, #40]
    1790:	add	x1, x0, #0x1a8
    1794:	add	x0, sp, #0x40
    1798:	mov	x2, #0x20                  	// #32
    179c:	bl	0 <strncpy>
    17a0:	add	x0, sp, #0x40
    17a4:	mov	x2, x0
    17a8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    17ac:	add	x1, x0, #0x0
    17b0:	ldr	x0, [sp, #32]
    17b4:	bl	0 <fprintf>
    17b8:	ldr	x0, [sp, #40]
    17bc:	ldr	w0, [x0, #456]
    17c0:	mov	w2, w0
    17c4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    17c8:	add	x1, x0, #0x0
    17cc:	ldr	x0, [sp, #32]
    17d0:	bl	0 <fprintf>
    17d4:	ldr	x0, [sp, #40]
    17d8:	ldr	w0, [x0, #412]
    17dc:	mov	w2, w0
    17e0:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    17e4:	add	x1, x0, #0x0
    17e8:	ldr	x0, [sp, #32]
    17ec:	bl	0 <fprintf>
    17f0:	ldr	x0, [sp, #40]
    17f4:	ldr	x0, [x0, #416]
    17f8:	mov	x2, x0
    17fc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1800:	add	x1, x0, #0x0
    1804:	ldr	x0, [sp, #32]
    1808:	bl	0 <fprintf>
    180c:	ldr	x0, [sp, #40]
    1810:	ldr	w0, [x0, #460]
    1814:	cmp	w0, #0x0
    1818:	b.eq	18d8 <list_super2+0xe3c>  // b.none
    181c:	ldr	x0, [sp, #40]
    1820:	ldr	w0, [x0, #460]
    1824:	mov	w0, w0
    1828:	str	x0, [sp, #56]
    182c:	add	x0, sp, #0x38
    1830:	bl	0 <ctime>
    1834:	mov	x2, x0
    1838:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    183c:	add	x1, x0, #0x0
    1840:	ldr	x0, [sp, #32]
    1844:	bl	0 <fprintf>
    1848:	add	x0, sp, #0x40
    184c:	mov	x2, #0x50                  	// #80
    1850:	mov	w1, #0x0                   	// #0
    1854:	bl	0 <memset>
    1858:	ldr	x0, [sp, #40]
    185c:	add	x1, x0, #0x1e0
    1860:	add	x0, sp, #0x40
    1864:	mov	x2, #0x20                  	// #32
    1868:	bl	0 <strncpy>
    186c:	add	x0, sp, #0x40
    1870:	mov	x2, x0
    1874:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1878:	add	x1, x0, #0x0
    187c:	ldr	x0, [sp, #32]
    1880:	bl	0 <fprintf>
    1884:	ldr	x0, [sp, #40]
    1888:	ldr	w0, [x0, #468]
    188c:	mov	w2, w0
    1890:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1894:	add	x1, x0, #0x0
    1898:	ldr	x0, [sp, #32]
    189c:	bl	0 <fprintf>
    18a0:	ldr	x0, [sp, #40]
    18a4:	ldr	w0, [x0, #464]
    18a8:	mov	w2, w0
    18ac:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    18b0:	add	x1, x0, #0x0
    18b4:	ldr	x0, [sp, #32]
    18b8:	bl	0 <fprintf>
    18bc:	ldr	x0, [sp, #40]
    18c0:	ldr	x0, [x0, #472]
    18c4:	mov	x2, x0
    18c8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    18cc:	add	x1, x0, #0x0
    18d0:	ldr	x0, [sp, #32]
    18d4:	bl	0 <fprintf>
    18d8:	ldr	x0, [sp, #40]
    18dc:	bl	a0 <ext2fs_has_feature_mmp>
    18e0:	cmp	w0, #0x0
    18e4:	b.eq	1920 <list_super2+0xe84>  // b.none
    18e8:	ldr	x0, [sp, #40]
    18ec:	ldr	x0, [x0, #360]
    18f0:	mov	x2, x0
    18f4:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    18f8:	add	x1, x0, #0x0
    18fc:	ldr	x0, [sp, #32]
    1900:	bl	0 <fprintf>
    1904:	ldr	x0, [sp, #40]
    1908:	ldrh	w0, [x0, #358]
    190c:	mov	w2, w0
    1910:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1914:	add	x1, x0, #0x0
    1918:	ldr	x0, [sp, #32]
    191c:	bl	0 <fprintf>
    1920:	str	wzr, [sp, #156]
    1924:	b	1980 <list_super2+0xee4>
    1928:	ldr	w1, [sp, #156]
    192c:	ldr	x0, [sp, #40]
    1930:	bl	118 <quota_sb_inump>
    1934:	ldr	w0, [x0]
    1938:	cmp	w0, #0x0
    193c:	b.eq	1974 <list_super2+0xed8>  // b.none
    1940:	ldr	w0, [sp, #156]
    1944:	bl	a7c <quota_type2prefix>
    1948:	mov	x19, x0
    194c:	ldr	w1, [sp, #156]
    1950:	ldr	x0, [sp, #40]
    1954:	bl	118 <quota_sb_inump>
    1958:	ldr	w0, [x0]
    195c:	mov	w3, w0
    1960:	mov	x2, x19
    1964:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1968:	add	x1, x0, #0x0
    196c:	ldr	x0, [sp, #32]
    1970:	bl	0 <fprintf>
    1974:	ldr	w0, [sp, #156]
    1978:	add	w0, w0, #0x1
    197c:	str	w0, [sp, #156]
    1980:	ldr	w0, [sp, #156]
    1984:	cmp	w0, #0x2
    1988:	b.ls	1928 <list_super2+0xe8c>  // b.plast
    198c:	ldr	x0, [sp, #40]
    1990:	bl	50 <ext2fs_has_feature_metadata_csum>
    1994:	cmp	w0, #0x0
    1998:	b.eq	19d8 <list_super2+0xf3c>  // b.none
    199c:	ldr	x0, [sp, #40]
    19a0:	ldrb	w0, [x0, #373]
    19a4:	bl	a4c <checksum_type>
    19a8:	mov	x2, x0
    19ac:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    19b0:	add	x1, x0, #0x0
    19b4:	ldr	x0, [sp, #32]
    19b8:	bl	0 <fprintf>
    19bc:	ldr	x0, [sp, #40]
    19c0:	ldr	w0, [x0, #1020]
    19c4:	mov	w2, w0
    19c8:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    19cc:	add	x1, x0, #0x0
    19d0:	ldr	x0, [sp, #32]
    19d4:	bl	0 <fprintf>
    19d8:	ldr	x0, [sp, #40]
    19dc:	add	x0, x0, #0x258
    19e0:	bl	0 <e2p_is_null_uuid>
    19e4:	cmp	w0, #0x0
    19e8:	b.ne	1a0c <list_super2+0xf70>  // b.any
    19ec:	ldr	x0, [sp, #40]
    19f0:	add	x0, x0, #0x258
    19f4:	bl	0 <e2p_uuid2str>
    19f8:	mov	x2, x0
    19fc:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1a00:	add	x1, x0, #0x0
    1a04:	ldr	x0, [sp, #32]
    1a08:	bl	0 <fprintf>
    1a0c:	ldr	x0, [sp, #40]
    1a10:	bl	c8 <ext2fs_has_feature_csum_seed>
    1a14:	cmp	w0, #0x0
    1a18:	b.eq	1a38 <list_super2+0xf9c>  // b.none
    1a1c:	ldr	x0, [sp, #40]
    1a20:	ldr	w0, [x0, #624]
    1a24:	mov	w2, w0
    1a28:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1a2c:	add	x1, x0, #0x0
    1a30:	ldr	x0, [sp, #32]
    1a34:	bl	0 <fprintf>
    1a38:	ldr	x0, [sp, #40]
    1a3c:	bl	f0 <ext2fs_has_feature_casefold>
    1a40:	cmp	w0, #0x0
    1a44:	b.eq	1a68 <list_super2+0xfcc>  // b.none
    1a48:	ldr	x0, [sp, #40]
    1a4c:	ldrh	w0, [x0, #636]
    1a50:	bl	0 <e2p_encoding2str>
    1a54:	mov	x2, x0
    1a58:	adrp	x0, 0 <ext2fs_has_feature_dir_index>
    1a5c:	add	x1, x0, #0x0
    1a60:	ldr	x0, [sp, #32]
    1a64:	bl	0 <fprintf>
    1a68:	nop
    1a6c:	ldr	x19, [sp, #16]
    1a70:	ldp	x29, x30, [sp], #160
    1a74:	ret

0000000000001a78 <list_super>:
    1a78:	stp	x29, x30, [sp, #-32]!
    1a7c:	mov	x29, sp
    1a80:	str	x0, [sp, #24]
    1a84:	adrp	x0, 0 <stdout>
    1a88:	add	x0, x0, #0x0
    1a8c:	ldr	x0, [x0]
    1a90:	mov	x1, x0
    1a94:	ldr	x0, [sp, #24]
    1a98:	bl	a9c <list_super2>
    1a9c:	nop
    1aa0:	ldp	x29, x30, [sp], #32
    1aa4:	ret

ljs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_swab32>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	lsr	w1, w0, #24
  10:	ldr	w0, [sp, #12]
  14:	lsr	w0, w0, #8
  18:	and	w0, w0, #0xff00
  1c:	orr	w1, w1, w0
  20:	ldr	w0, [sp, #12]
  24:	lsl	w0, w0, #8
  28:	and	w0, w0, #0xff0000
  2c:	orr	w1, w1, w0
  30:	ldr	w0, [sp, #12]
  34:	lsl	w0, w0, #24
  38:	orr	w0, w1, w0
  3c:	add	sp, sp, #0x10
  40:	ret

0000000000000044 <journal_checksum_type_str>:
  44:	sub	sp, sp, #0x10
  48:	strb	w0, [sp, #15]
  4c:	ldrb	w0, [sp, #15]
  50:	cmp	w0, #0x4
  54:	b.ne	64 <journal_checksum_type_str+0x20>  // b.any
  58:	adrp	x0, 0 <e2p_swab32>
  5c:	add	x0, x0, #0x0
  60:	b	6c <journal_checksum_type_str+0x28>
  64:	adrp	x0, 0 <e2p_swab32>
  68:	add	x0, x0, #0x0
  6c:	add	sp, sp, #0x10
  70:	ret

0000000000000074 <e2p_list_journal_super>:
  74:	stp	x29, x30, [sp, #-112]!
  78:	mov	x29, sp
  7c:	str	x19, [sp, #16]
  80:	str	x0, [sp, #56]
  84:	str	x1, [sp, #48]
  88:	str	w2, [sp, #44]
  8c:	str	w3, [sp, #40]
  90:	ldr	x0, [sp, #48]
  94:	str	x0, [sp, #80]
  98:	str	wzr, [sp, #92]
  9c:	ldr	x3, [sp, #56]
  a0:	mov	x2, #0x19                  	// #25
  a4:	mov	x1, #0x1                   	// #1
  a8:	adrp	x0, 0 <e2p_swab32>
  ac:	add	x0, x0, #0x0
  b0:	bl	0 <fwrite>
  b4:	str	wzr, [sp, #88]
  b8:	ldr	x0, [sp, #80]
  bc:	add	x0, x0, #0x24
  c0:	str	x0, [sp, #104]
  c4:	b	164 <e2p_list_journal_super+0xf0>
  c8:	ldr	x0, [sp, #104]
  cc:	ldr	w0, [x0]
  d0:	bl	0 <e2p_swab32>
  d4:	str	w0, [sp, #68]
  d8:	str	wzr, [sp, #96]
  dc:	mov	w0, #0x1                   	// #1
  e0:	str	w0, [sp, #100]
  e4:	b	140 <e2p_list_journal_super+0xcc>
  e8:	ldr	w1, [sp, #68]
  ec:	ldr	w0, [sp, #100]
  f0:	and	w0, w1, w0
  f4:	cmp	w0, #0x0
  f8:	b.eq	128 <e2p_list_journal_super+0xb4>  // b.none
  fc:	ldr	w0, [sp, #88]
 100:	ldr	w1, [sp, #100]
 104:	bl	0 <e2p_jrnl_feature2string>
 108:	mov	x2, x0
 10c:	adrp	x0, 0 <e2p_swab32>
 110:	add	x1, x0, #0x0
 114:	ldr	x0, [sp, #56]
 118:	bl	0 <fprintf>
 11c:	ldr	w0, [sp, #92]
 120:	add	w0, w0, #0x1
 124:	str	w0, [sp, #92]
 128:	ldr	w0, [sp, #96]
 12c:	add	w0, w0, #0x1
 130:	str	w0, [sp, #96]
 134:	ldr	w0, [sp, #100]
 138:	lsl	w0, w0, #1
 13c:	str	w0, [sp, #100]
 140:	ldr	w0, [sp, #96]
 144:	cmp	w0, #0x1f
 148:	b.le	e8 <e2p_list_journal_super+0x74>
 14c:	ldr	w0, [sp, #88]
 150:	add	w0, w0, #0x1
 154:	str	w0, [sp, #88]
 158:	ldr	x0, [sp, #104]
 15c:	add	x0, x0, #0x4
 160:	str	x0, [sp, #104]
 164:	ldr	w0, [sp, #88]
 168:	cmp	w0, #0x2
 16c:	b.ls	c8 <e2p_list_journal_super+0x54>  // b.plast
 170:	ldr	w0, [sp, #92]
 174:	cmp	w0, #0x0
 178:	b.ne	194 <e2p_list_journal_super+0x120>  // b.any
 17c:	ldr	x3, [sp, #56]
 180:	mov	x2, #0x7                   	// #7
 184:	mov	x1, #0x1                   	// #1
 188:	adrp	x0, 0 <e2p_swab32>
 18c:	add	x0, x0, #0x0
 190:	bl	0 <fwrite>
 194:	ldr	x1, [sp, #56]
 198:	mov	w0, #0xa                   	// #10
 19c:	bl	0 <fputc>
 1a0:	ldr	x3, [sp, #56]
 1a4:	mov	x2, #0x1a                  	// #26
 1a8:	mov	x1, #0x1                   	// #1
 1ac:	adrp	x0, 0 <e2p_swab32>
 1b0:	add	x0, x0, #0x0
 1b4:	bl	0 <fwrite>
 1b8:	ldr	x0, [sp, #80]
 1bc:	ldr	w0, [x0, #12]
 1c0:	bl	0 <ntohl>
 1c4:	lsr	w19, w0, #10
 1c8:	ldr	x0, [sp, #80]
 1cc:	ldr	w0, [x0, #16]
 1d0:	bl	0 <ntohl>
 1d4:	mul	w0, w19, w0
 1d8:	str	w0, [sp, #76]
 1dc:	ldr	w1, [sp, #76]
 1e0:	mov	w0, #0x1fff                	// #8191
 1e4:	cmp	w1, w0
 1e8:	b.hi	204 <e2p_list_journal_super+0x190>  // b.pmore
 1ec:	ldr	w2, [sp, #76]
 1f0:	adrp	x0, 0 <e2p_swab32>
 1f4:	add	x1, x0, #0x0
 1f8:	ldr	x0, [sp, #56]
 1fc:	bl	0 <fprintf>
 200:	b	220 <e2p_list_journal_super+0x1ac>
 204:	ldr	w0, [sp, #76]
 208:	lsr	w0, w0, #10
 20c:	mov	w2, w0
 210:	adrp	x0, 0 <e2p_swab32>
 214:	add	x1, x0, #0x0
 218:	ldr	x0, [sp, #56]
 21c:	bl	0 <fprintf>
 220:	ldr	x0, [sp, #80]
 224:	ldr	w0, [x0, #64]
 228:	bl	0 <ntohl>
 22c:	str	w0, [sp, #72]
 230:	ldr	x0, [sp, #80]
 234:	ldr	w0, [x0, #12]
 238:	bl	0 <ntohl>
 23c:	mov	w1, w0
 240:	ldr	w0, [sp, #44]
 244:	cmp	w0, w1
 248:	b.eq	26c <e2p_list_journal_super+0x1f8>  // b.none
 24c:	ldr	x0, [sp, #80]
 250:	ldr	w0, [x0, #12]
 254:	bl	0 <ntohl>
 258:	mov	w2, w0
 25c:	adrp	x0, 0 <e2p_swab32>
 260:	add	x1, x0, #0x0
 264:	ldr	x0, [sp, #56]
 268:	bl	0 <fprintf>
 26c:	ldr	x0, [sp, #80]
 270:	ldr	w0, [x0, #16]
 274:	bl	0 <ntohl>
 278:	mov	w2, w0
 27c:	adrp	x0, 0 <e2p_swab32>
 280:	add	x1, x0, #0x0
 284:	ldr	x0, [sp, #56]
 288:	bl	0 <fprintf>
 28c:	ldr	x0, [sp, #80]
 290:	ldr	w0, [x0, #20]
 294:	bl	0 <ntohl>
 298:	cmp	w0, #0x1
 29c:	b.eq	2c0 <e2p_list_journal_super+0x24c>  // b.none
 2a0:	ldr	x0, [sp, #80]
 2a4:	ldr	w0, [x0, #20]
 2a8:	bl	0 <ntohl>
 2ac:	mov	w2, w0
 2b0:	adrp	x0, 0 <e2p_swab32>
 2b4:	add	x1, x0, #0x0
 2b8:	ldr	x0, [sp, #56]
 2bc:	bl	0 <fprintf>
 2c0:	ldr	x0, [sp, #80]
 2c4:	ldr	w0, [x0, #24]
 2c8:	bl	0 <ntohl>
 2cc:	mov	w19, w0
 2d0:	ldr	x0, [sp, #80]
 2d4:	ldr	w0, [x0, #28]
 2d8:	bl	0 <ntohl>
 2dc:	mov	w3, w0
 2e0:	mov	w2, w19
 2e4:	adrp	x0, 0 <e2p_swab32>
 2e8:	add	x1, x0, #0x0
 2ec:	ldr	x0, [sp, #56]
 2f0:	bl	0 <fprintf>
 2f4:	ldr	w0, [sp, #72]
 2f8:	cmp	w0, #0x1
 2fc:	b.eq	314 <e2p_list_journal_super+0x2a0>  // b.none
 300:	ldr	w2, [sp, #72]
 304:	adrp	x0, 0 <e2p_swab32>
 308:	add	x1, x0, #0x0
 30c:	ldr	x0, [sp, #56]
 310:	bl	0 <fprintf>
 314:	ldr	x0, [sp, #80]
 318:	ldr	w19, [x0, #36]
 31c:	mov	w0, #0x1                   	// #1
 320:	bl	0 <e2p_swab32>
 324:	and	w0, w19, w0
 328:	cmp	w0, #0x0
 32c:	b.eq	348 <e2p_list_journal_super+0x2d4>  // b.none
 330:	ldr	x3, [sp, #56]
 334:	mov	x2, #0x20                  	// #32
 338:	mov	x1, #0x1                   	// #1
 33c:	adrp	x0, 0 <e2p_swab32>
 340:	add	x0, x0, #0x0
 344:	bl	0 <fwrite>
 348:	ldr	x0, [sp, #80]
 34c:	ldr	w19, [x0, #40]
 350:	mov	w0, #0x10                  	// #16
 354:	bl	0 <e2p_swab32>
 358:	and	w0, w19, w0
 35c:	cmp	w0, #0x0
 360:	b.ne	380 <e2p_list_journal_super+0x30c>  // b.any
 364:	ldr	x0, [sp, #80]
 368:	ldr	w19, [x0, #40]
 36c:	mov	w0, #0x8                   	// #8
 370:	bl	0 <e2p_swab32>
 374:	and	w0, w19, w0
 378:	cmp	w0, #0x0
 37c:	b.eq	3b4 <e2p_list_journal_super+0x340>  // b.none
 380:	ldr	x0, [sp, #80]
 384:	ldrb	w0, [x0, #80]
 388:	bl	44 <journal_checksum_type_str>
 38c:	mov	x19, x0
 390:	ldr	x0, [sp, #80]
 394:	ldr	w0, [x0, #252]
 398:	bl	0 <e2p_swab32>
 39c:	mov	w3, w0
 3a0:	mov	x2, x19
 3a4:	adrp	x0, 0 <e2p_swab32>
 3a8:	add	x1, x0, #0x0
 3ac:	ldr	x0, [sp, #56]
 3b0:	bl	0 <fprintf>
 3b4:	ldr	w0, [sp, #72]
 3b8:	cmp	w0, #0x1
 3bc:	b.hi	3d4 <e2p_list_journal_super+0x360>  // b.pmore
 3c0:	ldr	x0, [sp, #80]
 3c4:	add	x0, x0, #0x100
 3c8:	bl	0 <e2p_is_null_uuid>
 3cc:	cmp	w0, #0x0
 3d0:	b.ne	44c <e2p_list_journal_super+0x3d8>  // b.any
 3d4:	str	wzr, [sp, #88]
 3d8:	b	430 <e2p_list_journal_super+0x3bc>
 3dc:	ldr	w0, [sp, #88]
 3e0:	cmp	w0, #0x0
 3e4:	b.eq	3f4 <e2p_list_journal_super+0x380>  // b.none
 3e8:	adrp	x0, 0 <e2p_swab32>
 3ec:	add	x19, x0, #0x0
 3f0:	b	3fc <e2p_list_journal_super+0x388>
 3f4:	adrp	x0, 0 <e2p_swab32>
 3f8:	add	x19, x0, #0x0
 3fc:	ldr	w0, [sp, #88]
 400:	lsl	w0, w0, #4
 404:	mov	w0, w0
 408:	add	x0, x0, #0x100
 40c:	ldr	x1, [sp, #80]
 410:	add	x0, x1, x0
 414:	bl	0 <e2p_uuid2str>
 418:	mov	x1, x0
 41c:	mov	x0, x19
 420:	bl	0 <printf>
 424:	ldr	w0, [sp, #88]
 428:	add	w0, w0, #0x1
 42c:	str	w0, [sp, #88]
 430:	ldr	w1, [sp, #88]
 434:	ldr	w0, [sp, #72]
 438:	cmp	w1, w0
 43c:	b.cs	44c <e2p_list_journal_super+0x3d8>  // b.hs, b.nlast
 440:	ldr	w0, [sp, #88]
 444:	cmp	w0, #0x2f
 448:	b.ls	3dc <e2p_list_journal_super+0x368>  // b.plast
 44c:	ldr	x0, [sp, #80]
 450:	ldr	w0, [x0, #32]
 454:	cmp	w0, #0x0
 458:	b.eq	47c <e2p_list_journal_super+0x408>  // b.none
 45c:	ldr	x0, [sp, #80]
 460:	ldr	w0, [x0, #32]
 464:	bl	0 <ntohl>
 468:	mov	w2, w0
 46c:	adrp	x0, 0 <e2p_swab32>
 470:	add	x1, x0, #0x0
 474:	ldr	x0, [sp, #56]
 478:	bl	0 <fprintf>
 47c:	nop
 480:	ldr	x19, [sp, #16]
 484:	ldp	x29, x30, [sp], #112
 488:	ret

mntopts.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_mntopt2string>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	adrp	x0, 0 <e2p_mntopt2string>
  10:	add	x0, x0, #0x0
  14:	str	x0, [sp, #40]
  18:	b	48 <e2p_mntopt2string+0x48>
  1c:	ldr	x0, [sp, #40]
  20:	ldr	w0, [x0]
  24:	ldr	w1, [sp, #28]
  28:	cmp	w1, w0
  2c:	b.ne	3c <e2p_mntopt2string+0x3c>  // b.any
  30:	ldr	x0, [sp, #40]
  34:	ldr	x0, [x0, #8]
  38:	b	a4 <e2p_mntopt2string+0xa4>
  3c:	ldr	x0, [sp, #40]
  40:	add	x0, x0, #0x10
  44:	str	x0, [sp, #40]
  48:	ldr	x0, [sp, #40]
  4c:	ldr	x0, [x0, #8]
  50:	cmp	x0, #0x0
  54:	b.ne	1c <e2p_mntopt2string+0x1c>  // b.any
  58:	str	wzr, [sp, #36]
  5c:	b	6c <e2p_mntopt2string+0x6c>
  60:	ldr	w0, [sp, #36]
  64:	add	w0, w0, #0x1
  68:	str	w0, [sp, #36]
  6c:	ldr	w0, [sp, #28]
  70:	lsr	w0, w0, #1
  74:	str	w0, [sp, #28]
  78:	ldr	w0, [sp, #28]
  7c:	cmp	w0, #0x0
  80:	b.ne	60 <e2p_mntopt2string+0x60>  // b.any
  84:	ldr	w2, [sp, #36]
  88:	adrp	x0, 0 <e2p_mntopt2string>
  8c:	add	x1, x0, #0x0
  90:	adrp	x0, 0 <e2p_mntopt2string>
  94:	add	x0, x0, #0x0
  98:	bl	0 <sprintf>
  9c:	adrp	x0, 0 <e2p_mntopt2string>
  a0:	add	x0, x0, #0x0
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <e2p_string2mntopt>:
  ac:	stp	x29, x30, [sp, #-64]!
  b0:	mov	x29, sp
  b4:	str	x0, [sp, #24]
  b8:	str	x1, [sp, #16]
  bc:	adrp	x0, 0 <e2p_mntopt2string>
  c0:	add	x0, x0, #0x0
  c4:	str	x0, [sp, #56]
  c8:	b	10c <e2p_string2mntopt+0x60>
  cc:	ldr	x0, [sp, #56]
  d0:	ldr	x0, [x0, #8]
  d4:	mov	x1, x0
  d8:	ldr	x0, [sp, #24]
  dc:	bl	0 <strcasecmp>
  e0:	cmp	w0, #0x0
  e4:	b.ne	100 <e2p_string2mntopt+0x54>  // b.any
  e8:	ldr	x0, [sp, #56]
  ec:	ldr	w1, [x0]
  f0:	ldr	x0, [sp, #16]
  f4:	str	w1, [x0]
  f8:	mov	w0, #0x0                   	// #0
  fc:	b	1c8 <e2p_string2mntopt+0x11c>
 100:	ldr	x0, [sp, #56]
 104:	add	x0, x0, #0x10
 108:	str	x0, [sp, #56]
 10c:	ldr	x0, [sp, #56]
 110:	ldr	x0, [x0, #8]
 114:	cmp	x0, #0x0
 118:	b.ne	cc <e2p_string2mntopt+0x20>  // b.any
 11c:	mov	x2, #0x7                   	// #7
 120:	adrp	x0, 0 <e2p_mntopt2string>
 124:	add	x1, x0, #0x0
 128:	ldr	x0, [sp, #24]
 12c:	bl	0 <strncasecmp>
 130:	cmp	w0, #0x0
 134:	b.eq	140 <e2p_string2mntopt+0x94>  // b.none
 138:	mov	w0, #0x1                   	// #1
 13c:	b	1c8 <e2p_string2mntopt+0x11c>
 140:	ldr	x0, [sp, #24]
 144:	add	x0, x0, #0x8
 148:	ldrb	w0, [x0]
 14c:	cmp	w0, #0x0
 150:	b.ne	15c <e2p_string2mntopt+0xb0>  // b.any
 154:	mov	w0, #0x1                   	// #1
 158:	b	1c8 <e2p_string2mntopt+0x11c>
 15c:	ldr	x0, [sp, #24]
 160:	add	x0, x0, #0x8
 164:	add	x1, sp, #0x28
 168:	mov	w2, #0xa                   	// #10
 16c:	bl	0 <strtol>
 170:	str	w0, [sp, #52]
 174:	ldr	w0, [sp, #52]
 178:	cmp	w0, #0x1f
 17c:	b.gt	18c <e2p_string2mntopt+0xe0>
 180:	ldr	w0, [sp, #52]
 184:	cmp	w0, #0x0
 188:	b.ge	194 <e2p_string2mntopt+0xe8>  // b.tcont
 18c:	mov	w0, #0x1                   	// #1
 190:	b	1c8 <e2p_string2mntopt+0x11c>
 194:	ldr	x0, [sp, #40]
 198:	ldrb	w0, [x0]
 19c:	cmp	w0, #0x0
 1a0:	b.eq	1ac <e2p_string2mntopt+0x100>  // b.none
 1a4:	mov	w0, #0x1                   	// #1
 1a8:	b	1c8 <e2p_string2mntopt+0x11c>
 1ac:	ldr	w0, [sp, #52]
 1b0:	mov	w1, #0x1                   	// #1
 1b4:	lsl	w0, w1, w0
 1b8:	mov	w1, w0
 1bc:	ldr	x0, [sp, #16]
 1c0:	str	w1, [x0]
 1c4:	mov	w0, #0x0                   	// #0
 1c8:	ldp	x29, x30, [sp], #64
 1cc:	ret

00000000000001d0 <skip_over_blanks>:
 1d0:	stp	x29, x30, [sp, #-32]!
 1d4:	mov	x29, sp
 1d8:	str	x0, [sp, #24]
 1dc:	b	1ec <skip_over_blanks+0x1c>
 1e0:	ldr	x0, [sp, #24]
 1e4:	add	x0, x0, #0x1
 1e8:	str	x0, [sp, #24]
 1ec:	ldr	x0, [sp, #24]
 1f0:	ldrb	w0, [x0]
 1f4:	cmp	w0, #0x0
 1f8:	b.eq	228 <skip_over_blanks+0x58>  // b.none
 1fc:	bl	0 <__ctype_b_loc>
 200:	ldr	x1, [x0]
 204:	ldr	x0, [sp, #24]
 208:	ldrb	w0, [x0]
 20c:	and	x0, x0, #0xff
 210:	lsl	x0, x0, #1
 214:	add	x0, x1, x0
 218:	ldrh	w0, [x0]
 21c:	and	w0, w0, #0x2000
 220:	cmp	w0, #0x0
 224:	b.ne	1e0 <skip_over_blanks+0x10>  // b.any
 228:	ldr	x0, [sp, #24]
 22c:	ldp	x29, x30, [sp], #32
 230:	ret

0000000000000234 <skip_over_word>:
 234:	stp	x29, x30, [sp, #-32]!
 238:	mov	x29, sp
 23c:	str	x0, [sp, #24]
 240:	b	250 <skip_over_word+0x1c>
 244:	ldr	x0, [sp, #24]
 248:	add	x0, x0, #0x1
 24c:	str	x0, [sp, #24]
 250:	ldr	x0, [sp, #24]
 254:	ldrb	w0, [x0]
 258:	cmp	w0, #0x0
 25c:	b.eq	29c <skip_over_word+0x68>  // b.none
 260:	bl	0 <__ctype_b_loc>
 264:	ldr	x1, [x0]
 268:	ldr	x0, [sp, #24]
 26c:	ldrb	w0, [x0]
 270:	and	x0, x0, #0xff
 274:	lsl	x0, x0, #1
 278:	add	x0, x1, x0
 27c:	ldrh	w0, [x0]
 280:	and	w0, w0, #0x2000
 284:	cmp	w0, #0x0
 288:	b.ne	29c <skip_over_word+0x68>  // b.any
 28c:	ldr	x0, [sp, #24]
 290:	ldrb	w0, [x0]
 294:	cmp	w0, #0x2c
 298:	b.ne	244 <skip_over_word+0x10>  // b.any
 29c:	ldr	x0, [sp, #24]
 2a0:	ldp	x29, x30, [sp], #32
 2a4:	ret

00000000000002a8 <e2p_edit_mntopts>:
 2a8:	stp	x29, x30, [sp, #-96]!
 2ac:	mov	x29, sp
 2b0:	str	x0, [sp, #40]
 2b4:	str	x1, [sp, #32]
 2b8:	str	w2, [sp, #28]
 2bc:	str	wzr, [sp, #72]
 2c0:	ldr	x0, [sp, #40]
 2c4:	bl	0 <strlen>
 2c8:	add	x0, x0, #0x1
 2cc:	bl	0 <malloc>
 2d0:	str	x0, [sp, #64]
 2d4:	ldr	x0, [sp, #64]
 2d8:	cmp	x0, #0x0
 2dc:	b.ne	2e8 <e2p_edit_mntopts+0x40>  // b.any
 2e0:	mov	w0, #0x1                   	// #1
 2e4:	b	480 <e2p_edit_mntopts+0x1d8>
 2e8:	ldr	x1, [sp, #40]
 2ec:	ldr	x0, [sp, #64]
 2f0:	bl	0 <strcpy>
 2f4:	ldr	x0, [sp, #64]
 2f8:	str	x0, [sp, #88]
 2fc:	b	458 <e2p_edit_mntopts+0x1b0>
 300:	str	wzr, [sp, #76]
 304:	ldr	x0, [sp, #88]
 308:	bl	1d0 <skip_over_blanks>
 30c:	str	x0, [sp, #88]
 310:	ldr	x0, [sp, #88]
 314:	bl	234 <skip_over_word>
 318:	str	x0, [sp, #80]
 31c:	ldr	x0, [sp, #80]
 320:	ldrb	w0, [x0]
 324:	cmp	w0, #0x0
 328:	b.ne	334 <e2p_edit_mntopts+0x8c>  // b.any
 32c:	str	xzr, [sp, #80]
 330:	b	33c <e2p_edit_mntopts+0x94>
 334:	ldr	x0, [sp, #80]
 338:	strb	wzr, [x0]
 33c:	ldr	x0, [sp, #88]
 340:	ldrb	w0, [x0]
 344:	cmp	w0, #0x5e
 348:	b.eq	364 <e2p_edit_mntopts+0xbc>  // b.none
 34c:	cmp	w0, #0x5e
 350:	b.gt	380 <e2p_edit_mntopts+0xd8>
 354:	cmp	w0, #0x2b
 358:	b.eq	370 <e2p_edit_mntopts+0xc8>  // b.none
 35c:	cmp	w0, #0x2d
 360:	b.ne	380 <e2p_edit_mntopts+0xd8>  // b.any
 364:	ldr	w0, [sp, #76]
 368:	add	w0, w0, #0x1
 36c:	str	w0, [sp, #76]
 370:	ldr	x0, [sp, #88]
 374:	add	x0, x0, #0x1
 378:	str	x0, [sp, #88]
 37c:	nop
 380:	add	x0, sp, #0x3c
 384:	mov	x1, x0
 388:	ldr	x0, [sp, #88]
 38c:	bl	ac <e2p_string2mntopt>
 390:	cmp	w0, #0x0
 394:	b.eq	3a4 <e2p_edit_mntopts+0xfc>  // b.none
 398:	mov	w0, #0x1                   	// #1
 39c:	str	w0, [sp, #72]
 3a0:	b	474 <e2p_edit_mntopts+0x1cc>
 3a4:	ldr	w0, [sp, #28]
 3a8:	cmp	w0, #0x0
 3ac:	b.eq	3d0 <e2p_edit_mntopts+0x128>  // b.none
 3b0:	ldr	w1, [sp, #60]
 3b4:	ldr	w0, [sp, #28]
 3b8:	and	w0, w1, w0
 3bc:	cmp	w0, #0x0
 3c0:	b.ne	3d0 <e2p_edit_mntopts+0x128>  // b.any
 3c4:	mov	w0, #0x1                   	// #1
 3c8:	str	w0, [sp, #72]
 3cc:	b	474 <e2p_edit_mntopts+0x1cc>
 3d0:	ldr	w0, [sp, #60]
 3d4:	and	w0, w0, #0x60
 3d8:	cmp	w0, #0x0
 3dc:	b.eq	3f4 <e2p_edit_mntopts+0x14c>  // b.none
 3e0:	ldr	x0, [sp, #32]
 3e4:	ldr	w0, [x0]
 3e8:	and	w1, w0, #0xffffff9f
 3ec:	ldr	x0, [sp, #32]
 3f0:	str	w1, [x0]
 3f4:	ldr	w0, [sp, #76]
 3f8:	cmp	w0, #0x0
 3fc:	b.eq	420 <e2p_edit_mntopts+0x178>  // b.none
 400:	ldr	x0, [sp, #32]
 404:	ldr	w1, [x0]
 408:	ldr	w0, [sp, #60]
 40c:	mvn	w0, w0
 410:	and	w1, w1, w0
 414:	ldr	x0, [sp, #32]
 418:	str	w1, [x0]
 41c:	b	438 <e2p_edit_mntopts+0x190>
 420:	ldr	x0, [sp, #32]
 424:	ldr	w1, [x0]
 428:	ldr	w0, [sp, #60]
 42c:	orr	w1, w1, w0
 430:	ldr	x0, [sp, #32]
 434:	str	w1, [x0]
 438:	ldr	x0, [sp, #80]
 43c:	cmp	x0, #0x0
 440:	b.eq	450 <e2p_edit_mntopts+0x1a8>  // b.none
 444:	ldr	x0, [sp, #80]
 448:	add	x0, x0, #0x1
 44c:	b	454 <e2p_edit_mntopts+0x1ac>
 450:	mov	x0, #0x0                   	// #0
 454:	str	x0, [sp, #88]
 458:	ldr	x0, [sp, #88]
 45c:	cmp	x0, #0x0
 460:	b.eq	474 <e2p_edit_mntopts+0x1cc>  // b.none
 464:	ldr	x0, [sp, #88]
 468:	ldrb	w0, [x0]
 46c:	cmp	w0, #0x0
 470:	b.ne	300 <e2p_edit_mntopts+0x58>  // b.any
 474:	ldr	x0, [sp, #64]
 478:	bl	0 <free>
 47c:	ldr	w0, [sp, #72]
 480:	ldp	x29, x30, [sp], #96
 484:	ret

parse_num.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <parse_num_blocks2>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	add	x0, sp, #0x20
  14:	mov	w2, #0x0                   	// #0
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #24]
  20:	bl	0 <strtoull>
  24:	str	x0, [sp, #40]
  28:	ldr	x0, [sp, #32]
  2c:	ldrb	w0, [x0]
  30:	cmp	w0, #0x0
  34:	b.eq	54 <parse_num_blocks2+0x54>  // b.none
  38:	ldr	x0, [sp, #32]
  3c:	add	x0, x0, #0x1
  40:	ldrb	w0, [x0]
  44:	cmp	w0, #0x0
  48:	b.eq	54 <parse_num_blocks2+0x54>  // b.none
  4c:	mov	x0, #0x0                   	// #0
  50:	b	188 <parse_num_blocks2+0x188>
  54:	ldr	x0, [sp, #32]
  58:	ldrb	w0, [x0]
  5c:	cmp	w0, #0x74
  60:	b.eq	f0 <parse_num_blocks2+0xf0>  // b.none
  64:	cmp	w0, #0x74
  68:	b.gt	178 <parse_num_blocks2+0x178>
  6c:	cmp	w0, #0x73
  70:	b.eq	144 <parse_num_blocks2+0x144>  // b.none
  74:	cmp	w0, #0x73
  78:	b.gt	178 <parse_num_blocks2+0x178>
  7c:	cmp	w0, #0x6d
  80:	b.eq	108 <parse_num_blocks2+0x108>  // b.none
  84:	cmp	w0, #0x6d
  88:	b.gt	178 <parse_num_blocks2+0x178>
  8c:	cmp	w0, #0x6b
  90:	b.eq	114 <parse_num_blocks2+0x114>  // b.none
  94:	cmp	w0, #0x6b
  98:	b.gt	178 <parse_num_blocks2+0x178>
  9c:	cmp	w0, #0x67
  a0:	b.eq	fc <parse_num_blocks2+0xfc>  // b.none
  a4:	cmp	w0, #0x67
  a8:	b.gt	178 <parse_num_blocks2+0x178>
  ac:	cmp	w0, #0x54
  b0:	b.eq	f0 <parse_num_blocks2+0xf0>  // b.none
  b4:	cmp	w0, #0x54
  b8:	b.gt	178 <parse_num_blocks2+0x178>
  bc:	cmp	w0, #0x4d
  c0:	b.eq	108 <parse_num_blocks2+0x108>  // b.none
  c4:	cmp	w0, #0x4d
  c8:	b.gt	178 <parse_num_blocks2+0x178>
  cc:	cmp	w0, #0x4b
  d0:	b.eq	114 <parse_num_blocks2+0x114>  // b.none
  d4:	cmp	w0, #0x4b
  d8:	b.gt	178 <parse_num_blocks2+0x178>
  dc:	cmp	w0, #0x0
  e0:	b.eq	180 <parse_num_blocks2+0x180>  // b.none
  e4:	cmp	w0, #0x47
  e8:	b.eq	fc <parse_num_blocks2+0xfc>  // b.none
  ec:	b	178 <parse_num_blocks2+0x178>
  f0:	ldr	x0, [sp, #40]
  f4:	lsl	x0, x0, #10
  f8:	str	x0, [sp, #40]
  fc:	ldr	x0, [sp, #40]
 100:	lsl	x0, x0, #10
 104:	str	x0, [sp, #40]
 108:	ldr	x0, [sp, #40]
 10c:	lsl	x0, x0, #10
 110:	str	x0, [sp, #40]
 114:	ldr	w0, [sp, #20]
 118:	cmp	w0, #0x0
 11c:	b.ge	130 <parse_num_blocks2+0x130>  // b.tcont
 120:	ldr	x0, [sp, #40]
 124:	lsl	x0, x0, #10
 128:	str	x0, [sp, #40]
 12c:	b	184 <parse_num_blocks2+0x184>
 130:	ldr	w0, [sp, #20]
 134:	ldr	x1, [sp, #40]
 138:	lsr	x0, x1, x0
 13c:	str	x0, [sp, #40]
 140:	b	184 <parse_num_blocks2+0x184>
 144:	ldr	w0, [sp, #20]
 148:	cmp	w0, #0x0
 14c:	b.ge	160 <parse_num_blocks2+0x160>  // b.tcont
 150:	ldr	x0, [sp, #40]
 154:	lsl	x0, x0, #9
 158:	str	x0, [sp, #40]
 15c:	b	184 <parse_num_blocks2+0x184>
 160:	ldr	w0, [sp, #20]
 164:	add	w0, w0, #0x1
 168:	ldr	x1, [sp, #40]
 16c:	lsr	x0, x1, x0
 170:	str	x0, [sp, #40]
 174:	b	184 <parse_num_blocks2+0x184>
 178:	mov	x0, #0x0                   	// #0
 17c:	b	188 <parse_num_blocks2+0x188>
 180:	nop
 184:	ldr	x0, [sp, #40]
 188:	ldp	x29, x30, [sp], #48
 18c:	ret

0000000000000190 <parse_num_blocks>:
 190:	stp	x29, x30, [sp, #-32]!
 194:	mov	x29, sp
 198:	str	x0, [sp, #24]
 19c:	str	w1, [sp, #20]
 1a0:	ldr	w1, [sp, #20]
 1a4:	ldr	x0, [sp, #24]
 1a8:	bl	0 <parse_num_blocks2>
 1ac:	ldp	x29, x30, [sp], #32
 1b0:	ret

pe.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <print_fs_errors>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strh	w1, [sp, #22]
  10:	ldrh	w0, [sp, #22]
  14:	cmp	w0, #0x3
  18:	b.eq	70 <print_fs_errors+0x70>  // b.none
  1c:	cmp	w0, #0x3
  20:	b.gt	8c <print_fs_errors+0x8c>
  24:	cmp	w0, #0x1
  28:	b.eq	38 <print_fs_errors+0x38>  // b.none
  2c:	cmp	w0, #0x2
  30:	b.eq	54 <print_fs_errors+0x54>  // b.none
  34:	b	8c <print_fs_errors+0x8c>
  38:	ldr	x3, [sp, #24]
  3c:	mov	x2, #0x8                   	// #8
  40:	mov	x1, #0x1                   	// #1
  44:	adrp	x0, 0 <print_fs_errors>
  48:	add	x0, x0, #0x0
  4c:	bl	0 <fwrite>
  50:	b	a8 <print_fs_errors+0xa8>
  54:	ldr	x3, [sp, #24]
  58:	mov	x2, #0x11                  	// #17
  5c:	mov	x1, #0x1                   	// #1
  60:	adrp	x0, 0 <print_fs_errors>
  64:	add	x0, x0, #0x0
  68:	bl	0 <fwrite>
  6c:	b	a8 <print_fs_errors+0xa8>
  70:	ldr	x3, [sp, #24]
  74:	mov	x2, #0x5                   	// #5
  78:	mov	x1, #0x1                   	// #1
  7c:	adrp	x0, 0 <print_fs_errors>
  80:	add	x0, x0, #0x0
  84:	bl	0 <fwrite>
  88:	b	a8 <print_fs_errors+0xa8>
  8c:	ldr	x3, [sp, #24]
  90:	mov	x2, #0x12                  	// #18
  94:	mov	x1, #0x1                   	// #1
  98:	adrp	x0, 0 <print_fs_errors>
  9c:	add	x0, x0, #0x0
  a0:	bl	0 <fwrite>
  a4:	nop
  a8:	nop
  ac:	ldp	x29, x30, [sp], #32
  b0:	ret

pf.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <print_flags>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	w2, [sp, #28]
  14:	ldr	w0, [sp, #28]
  18:	and	w0, w0, #0x1
  1c:	str	w0, [sp, #48]
  20:	mov	w0, #0x1                   	// #1
  24:	str	w0, [sp, #52]
  28:	adrp	x0, 0 <print_flags>
  2c:	add	x0, x0, #0x0
  30:	str	x0, [sp, #56]
  34:	b	d4 <print_flags+0xd4>
  38:	ldr	x0, [sp, #56]
  3c:	ldr	x1, [x0]
  40:	ldr	x0, [sp, #32]
  44:	and	x0, x1, x0
  48:	cmp	x0, #0x0
  4c:	b.eq	b0 <print_flags+0xb0>  // b.none
  50:	ldr	w0, [sp, #48]
  54:	cmp	w0, #0x0
  58:	b.eq	9c <print_flags+0x9c>  // b.none
  5c:	ldr	w0, [sp, #52]
  60:	cmp	w0, #0x0
  64:	b.eq	70 <print_flags+0x70>  // b.none
  68:	str	wzr, [sp, #52]
  6c:	b	88 <print_flags+0x88>
  70:	ldr	x3, [sp, #40]
  74:	mov	x2, #0x2                   	// #2
  78:	mov	x1, #0x1                   	// #1
  7c:	adrp	x0, 0 <print_flags>
  80:	add	x0, x0, #0x0
  84:	bl	0 <fwrite>
  88:	ldr	x0, [sp, #56]
  8c:	ldr	x0, [x0, #16]
  90:	ldr	x1, [sp, #40]
  94:	bl	0 <fputs>
  98:	b	c8 <print_flags+0xc8>
  9c:	ldr	x0, [sp, #56]
  a0:	ldr	x0, [x0, #8]
  a4:	ldr	x1, [sp, #40]
  a8:	bl	0 <fputs>
  ac:	b	c8 <print_flags+0xc8>
  b0:	ldr	w0, [sp, #48]
  b4:	cmp	w0, #0x0
  b8:	b.ne	c8 <print_flags+0xc8>  // b.any
  bc:	ldr	x1, [sp, #40]
  c0:	mov	w0, #0x2d                  	// #45
  c4:	bl	0 <fputc>
  c8:	ldr	x0, [sp, #56]
  cc:	add	x0, x0, #0x18
  d0:	str	x0, [sp, #56]
  d4:	ldr	x0, [sp, #56]
  d8:	ldr	x0, [x0]
  dc:	cmp	x0, #0x0
  e0:	b.ne	38 <print_flags+0x38>  // b.any
  e4:	ldr	w0, [sp, #48]
  e8:	cmp	w0, #0x0
  ec:	b.eq	114 <print_flags+0x114>  // b.none
  f0:	ldr	w0, [sp, #52]
  f4:	cmp	w0, #0x0
  f8:	b.eq	114 <print_flags+0x114>  // b.none
  fc:	ldr	x3, [sp, #40]
 100:	mov	x2, #0x3                   	// #3
 104:	mov	x1, #0x1                   	// #1
 108:	adrp	x0, 0 <print_flags>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <fwrite>
 114:	nop
 118:	ldp	x29, x30, [sp], #64
 11c:	ret

ps.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <print_fs_state>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	strh	w1, [sp, #22]
  10:	ldrh	w0, [sp, #22]
  14:	and	w0, w0, #0x1
  18:	cmp	w0, #0x0
  1c:	b.eq	3c <print_fs_state+0x3c>  // b.none
  20:	ldr	x3, [sp, #24]
  24:	mov	x2, #0x6                   	// #6
  28:	mov	x1, #0x1                   	// #1
  2c:	adrp	x0, 0 <print_fs_state>
  30:	add	x0, x0, #0x0
  34:	bl	0 <fwrite>
  38:	b	54 <print_fs_state+0x54>
  3c:	ldr	x3, [sp, #24]
  40:	mov	x2, #0xa                   	// #10
  44:	mov	x1, #0x1                   	// #1
  48:	adrp	x0, 0 <print_fs_state>
  4c:	add	x0, x0, #0x0
  50:	bl	0 <fwrite>
  54:	ldrh	w0, [sp, #22]
  58:	and	w0, w0, #0x2
  5c:	cmp	w0, #0x0
  60:	b.eq	7c <print_fs_state+0x7c>  // b.none
  64:	ldr	x3, [sp, #24]
  68:	mov	x2, #0xc                   	// #12
  6c:	mov	x1, #0x1                   	// #1
  70:	adrp	x0, 0 <print_fs_state>
  74:	add	x0, x0, #0x0
  78:	bl	0 <fwrite>
  7c:	nop
  80:	ldp	x29, x30, [sp], #32
  84:	ret

setflags.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <setflags>:
   0:	stp	x29, x30, [sp, #-176]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	x1, [sp, #16]
  10:	add	x0, sp, #0x30
  14:	mov	x1, x0
  18:	ldr	w0, [sp, #28]
  1c:	bl	0 <fstat>
  20:	cmp	w0, #0x0
  24:	b.ne	60 <setflags+0x60>  // b.any
  28:	ldr	w0, [sp, #64]
  2c:	and	w0, w0, #0xf000
  30:	cmp	w0, #0x8, lsl #12
  34:	b.eq	60 <setflags+0x60>  // b.none
  38:	ldr	w0, [sp, #64]
  3c:	and	w0, w0, #0xf000
  40:	cmp	w0, #0x4, lsl #12
  44:	b.eq	60 <setflags+0x60>  // b.none
  48:	bl	0 <__errno_location>
  4c:	mov	x1, x0
  50:	mov	w0, #0x5f                  	// #95
  54:	str	w0, [x1]
  58:	mov	w0, #0xffffffff            	// #-1
  5c:	b	80 <setflags+0x80>
  60:	ldr	x0, [sp, #16]
  64:	str	w0, [sp, #44]
  68:	add	x0, sp, #0x2c
  6c:	mov	x2, x0
  70:	mov	x1, #0x6602                	// #26114
  74:	movk	x1, #0x4008, lsl #16
  78:	ldr	w0, [sp, #28]
  7c:	bl	0 <ioctl>
  80:	ldp	x29, x30, [sp], #176
  84:	ret

setversion.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <setversion>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	str	w0, [sp, #44]
  18:	add	x0, sp, #0x2c
  1c:	mov	x2, x0
  20:	mov	x1, #0x7602                	// #30210
  24:	movk	x1, #0x4008, lsl #16
  28:	ldr	w0, [sp, #28]
  2c:	bl	0 <ioctl>
  30:	ldp	x29, x30, [sp], #48
  34:	ret

uuid.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_is_null_uuid>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	wzr, [sp, #20]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #24]
  14:	b	44 <e2p_is_null_uuid+0x44>
  18:	ldr	x0, [sp, #24]
  1c:	add	x1, x0, #0x1
  20:	str	x1, [sp, #24]
  24:	ldrb	w0, [x0]
  28:	cmp	w0, #0x0
  2c:	b.eq	38 <e2p_is_null_uuid+0x38>  // b.none
  30:	mov	w0, #0x0                   	// #0
  34:	b	54 <e2p_is_null_uuid+0x54>
  38:	ldr	w0, [sp, #20]
  3c:	add	w0, w0, #0x1
  40:	str	w0, [sp, #20]
  44:	ldr	w0, [sp, #20]
  48:	cmp	w0, #0xf
  4c:	b.le	18 <e2p_is_null_uuid+0x18>
  50:	mov	w0, #0x1                   	// #1
  54:	add	sp, sp, #0x20
  58:	ret

000000000000005c <e2p_unpack_uuid>:
  5c:	stp	x29, x30, [sp, #-48]!
  60:	mov	x29, sp
  64:	str	x0, [sp, #24]
  68:	str	x1, [sp, #16]
  6c:	ldr	x0, [sp, #24]
  70:	str	x0, [sp, #40]
  74:	ldr	x0, [sp, #40]
  78:	add	x1, x0, #0x1
  7c:	str	x1, [sp, #40]
  80:	ldrb	w0, [x0]
  84:	str	w0, [sp, #36]
  88:	ldr	w0, [sp, #36]
  8c:	lsl	w1, w0, #8
  90:	ldr	x0, [sp, #40]
  94:	add	x2, x0, #0x1
  98:	str	x2, [sp, #40]
  9c:	ldrb	w0, [x0]
  a0:	orr	w0, w1, w0
  a4:	str	w0, [sp, #36]
  a8:	ldr	w0, [sp, #36]
  ac:	lsl	w1, w0, #8
  b0:	ldr	x0, [sp, #40]
  b4:	add	x2, x0, #0x1
  b8:	str	x2, [sp, #40]
  bc:	ldrb	w0, [x0]
  c0:	orr	w0, w1, w0
  c4:	str	w0, [sp, #36]
  c8:	ldr	w0, [sp, #36]
  cc:	lsl	w1, w0, #8
  d0:	ldr	x0, [sp, #40]
  d4:	add	x2, x0, #0x1
  d8:	str	x2, [sp, #40]
  dc:	ldrb	w0, [x0]
  e0:	orr	w0, w1, w0
  e4:	str	w0, [sp, #36]
  e8:	ldr	x0, [sp, #16]
  ec:	ldr	w1, [sp, #36]
  f0:	str	w1, [x0]
  f4:	ldr	x0, [sp, #40]
  f8:	add	x1, x0, #0x1
  fc:	str	x1, [sp, #40]
 100:	ldrb	w0, [x0]
 104:	str	w0, [sp, #36]
 108:	ldr	w0, [sp, #36]
 10c:	lsl	w1, w0, #8
 110:	ldr	x0, [sp, #40]
 114:	add	x2, x0, #0x1
 118:	str	x2, [sp, #40]
 11c:	ldrb	w0, [x0]
 120:	orr	w0, w1, w0
 124:	str	w0, [sp, #36]
 128:	ldr	w0, [sp, #36]
 12c:	and	w1, w0, #0xffff
 130:	ldr	x0, [sp, #16]
 134:	strh	w1, [x0, #4]
 138:	ldr	x0, [sp, #40]
 13c:	add	x1, x0, #0x1
 140:	str	x1, [sp, #40]
 144:	ldrb	w0, [x0]
 148:	str	w0, [sp, #36]
 14c:	ldr	w0, [sp, #36]
 150:	lsl	w1, w0, #8
 154:	ldr	x0, [sp, #40]
 158:	add	x2, x0, #0x1
 15c:	str	x2, [sp, #40]
 160:	ldrb	w0, [x0]
 164:	orr	w0, w1, w0
 168:	str	w0, [sp, #36]
 16c:	ldr	w0, [sp, #36]
 170:	and	w1, w0, #0xffff
 174:	ldr	x0, [sp, #16]
 178:	strh	w1, [x0, #6]
 17c:	ldr	x0, [sp, #40]
 180:	add	x1, x0, #0x1
 184:	str	x1, [sp, #40]
 188:	ldrb	w0, [x0]
 18c:	str	w0, [sp, #36]
 190:	ldr	w0, [sp, #36]
 194:	lsl	w1, w0, #8
 198:	ldr	x0, [sp, #40]
 19c:	add	x2, x0, #0x1
 1a0:	str	x2, [sp, #40]
 1a4:	ldrb	w0, [x0]
 1a8:	orr	w0, w1, w0
 1ac:	str	w0, [sp, #36]
 1b0:	ldr	w0, [sp, #36]
 1b4:	and	w1, w0, #0xffff
 1b8:	ldr	x0, [sp, #16]
 1bc:	strh	w1, [x0, #8]
 1c0:	ldr	x0, [sp, #16]
 1c4:	add	x0, x0, #0xa
 1c8:	mov	x2, #0x6                   	// #6
 1cc:	ldr	x1, [sp, #40]
 1d0:	bl	0 <memcpy>
 1d4:	nop
 1d8:	ldp	x29, x30, [sp], #48
 1dc:	ret

00000000000001e0 <e2p_uuid_to_str>:
 1e0:	sub	sp, sp, #0x60
 1e4:	stp	x29, x30, [sp, #48]
 1e8:	add	x29, sp, #0x30
 1ec:	str	x0, [sp, #72]
 1f0:	str	x1, [sp, #64]
 1f4:	add	x0, sp, #0x50
 1f8:	mov	x1, x0
 1fc:	ldr	x0, [sp, #72]
 200:	bl	5c <e2p_unpack_uuid>
 204:	ldr	w1, [sp, #80]
 208:	ldrh	w0, [sp, #84]
 20c:	mov	w8, w0
 210:	ldrh	w0, [sp, #86]
 214:	mov	w9, w0
 218:	ldrh	w0, [sp, #88]
 21c:	lsr	w0, w0, #8
 220:	and	w0, w0, #0xffff
 224:	mov	w10, w0
 228:	ldrh	w0, [sp, #88]
 22c:	and	w0, w0, #0xff
 230:	ldrb	w2, [sp, #90]
 234:	mov	w7, w2
 238:	ldrb	w2, [sp, #91]
 23c:	ldrb	w3, [sp, #92]
 240:	ldrb	w4, [sp, #93]
 244:	ldrb	w5, [sp, #94]
 248:	ldrb	w6, [sp, #95]
 24c:	str	w6, [sp, #32]
 250:	str	w5, [sp, #24]
 254:	str	w4, [sp, #16]
 258:	str	w3, [sp, #8]
 25c:	str	w2, [sp]
 260:	mov	w6, w0
 264:	mov	w5, w10
 268:	mov	w4, w9
 26c:	mov	w3, w8
 270:	mov	w2, w1
 274:	adrp	x0, 0 <e2p_is_null_uuid>
 278:	add	x1, x0, #0x0
 27c:	ldr	x0, [sp, #64]
 280:	bl	0 <sprintf>
 284:	nop
 288:	ldp	x29, x30, [sp, #48]
 28c:	add	sp, sp, #0x60
 290:	ret

0000000000000294 <e2p_uuid2str>:
 294:	stp	x29, x30, [sp, #-32]!
 298:	mov	x29, sp
 29c:	str	x0, [sp, #24]
 2a0:	ldr	x0, [sp, #24]
 2a4:	bl	0 <e2p_is_null_uuid>
 2a8:	cmp	w0, #0x0
 2ac:	b.eq	2bc <e2p_uuid2str+0x28>  // b.none
 2b0:	adrp	x0, 0 <e2p_is_null_uuid>
 2b4:	add	x0, x0, #0x0
 2b8:	b	2d4 <e2p_uuid2str+0x40>
 2bc:	adrp	x0, 0 <e2p_is_null_uuid>
 2c0:	add	x1, x0, #0x0
 2c4:	ldr	x0, [sp, #24]
 2c8:	bl	1e0 <e2p_uuid_to_str>
 2cc:	adrp	x0, 0 <e2p_is_null_uuid>
 2d0:	add	x0, x0, #0x0
 2d4:	ldp	x29, x30, [sp], #32
 2d8:	ret

ostype.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_os2string>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	ldr	w0, [sp, #28]
  10:	cmp	w0, #0x0
  14:	b.lt	3c <e2p_os2string+0x3c>  // b.tstop
  18:	ldr	w0, [sp, #28]
  1c:	cmp	w0, #0x4
  20:	b.gt	3c <e2p_os2string+0x3c>
  24:	adrp	x0, 0 <e2p_os2string>
  28:	add	x0, x0, #0x0
  2c:	ldrsw	x1, [sp, #28]
  30:	ldr	x0, [x0, x1, lsl #3]
  34:	str	x0, [sp, #40]
  38:	b	48 <e2p_os2string+0x48>
  3c:	adrp	x0, 0 <e2p_os2string>
  40:	add	x0, x0, #0x0
  44:	str	x0, [sp, #40]
  48:	ldr	x0, [sp, #40]
  4c:	bl	0 <strlen>
  50:	add	x0, x0, #0x1
  54:	bl	0 <malloc>
  58:	str	x0, [sp, #32]
  5c:	ldr	x0, [sp, #32]
  60:	cmp	x0, #0x0
  64:	b.eq	74 <e2p_os2string+0x74>  // b.none
  68:	ldr	x1, [sp, #40]
  6c:	ldr	x0, [sp, #32]
  70:	bl	0 <strcpy>
  74:	ldr	x0, [sp, #32]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

0000000000000080 <e2p_string2os>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	mov	x29, sp
  88:	str	x0, [sp, #24]
  8c:	str	wzr, [sp, #36]
  90:	adrp	x0, 0 <e2p_os2string>
  94:	add	x0, x0, #0x0
  98:	str	x0, [sp, #40]
  9c:	b	dc <e2p_string2os+0x5c>
  a0:	ldr	x0, [sp, #40]
  a4:	ldr	x0, [x0]
  a8:	mov	x1, x0
  ac:	ldr	x0, [sp, #24]
  b0:	bl	0 <strcasecmp>
  b4:	cmp	w0, #0x0
  b8:	b.ne	c4 <e2p_string2os+0x44>  // b.any
  bc:	ldr	w0, [sp, #36]
  c0:	b	f0 <e2p_string2os+0x70>
  c4:	ldr	x0, [sp, #40]
  c8:	add	x0, x0, #0x8
  cc:	str	x0, [sp, #40]
  d0:	ldr	w0, [sp, #36]
  d4:	add	w0, w0, #0x1
  d8:	str	w0, [sp, #36]
  dc:	ldr	x0, [sp, #40]
  e0:	ldr	x0, [x0]
  e4:	cmp	x0, #0x0
  e8:	b.ne	a0 <e2p_string2os+0x20>  // b.any
  ec:	mov	w0, #0xffffffff            	// #-1
  f0:	ldp	x29, x30, [sp], #48
  f4:	ret

percent.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_percent>:
   0:	sub	sp, sp, #0x20
   4:	str	w0, [sp, #12]
   8:	str	w1, [sp, #8]
   c:	mov	w0, #0xff000000            	// #-16777216
  10:	str	w0, [sp, #28]
  14:	ldr	w0, [sp, #12]
  18:	cmp	w0, #0x0
  1c:	b.ne	28 <e2p_percent+0x28>  // b.any
  20:	mov	w0, #0x0                   	// #0
  24:	b	bc <e2p_percent+0xbc>
  28:	mov	w0, #0x64                  	// #100
  2c:	ldr	w1, [sp, #12]
  30:	sdiv	w2, w0, w1
  34:	ldr	w1, [sp, #12]
  38:	mul	w1, w2, w1
  3c:	sub	w0, w0, w1
  40:	cmp	w0, #0x0
  44:	b.ne	64 <e2p_percent+0x64>  // b.any
  48:	mov	w1, #0x64                  	// #100
  4c:	ldr	w0, [sp, #12]
  50:	sdiv	w0, w1, w0
  54:	mov	w1, w0
  58:	ldr	w0, [sp, #8]
  5c:	udiv	w0, w0, w1
  60:	b	bc <e2p_percent+0xbc>
  64:	ldr	w1, [sp, #28]
  68:	ldr	w0, [sp, #8]
  6c:	and	w0, w1, w0
  70:	cmp	w0, #0x0
  74:	b.eq	9c <e2p_percent+0x9c>  // b.none
  78:	ldr	w1, [sp, #8]
  7c:	mov	w0, #0x851f                	// #34079
  80:	movk	w0, #0x51eb, lsl #16
  84:	umull	x0, w1, w0
  88:	lsr	x0, x0, #32
  8c:	lsr	w1, w0, #5
  90:	ldr	w0, [sp, #12]
  94:	mul	w0, w1, w0
  98:	b	bc <e2p_percent+0xbc>
  9c:	ldr	w1, [sp, #12]
  a0:	ldr	w0, [sp, #8]
  a4:	mul	w1, w1, w0
  a8:	mov	w0, #0x851f                	// #34079
  ac:	movk	w0, #0x51eb, lsl #16
  b0:	umull	x0, w1, w0
  b4:	lsr	x0, x0, #32
  b8:	lsr	w0, w0, #5
  bc:	add	sp, sp, #0x20
  c0:	ret

crypto_mode.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_encmode2string>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	adrp	x0, 0 <e2p_encmode2string>
  10:	add	x0, x0, #0x0
  14:	str	x0, [sp, #40]
  18:	b	48 <e2p_encmode2string+0x48>
  1c:	ldr	x0, [sp, #40]
  20:	ldr	w0, [x0]
  24:	ldr	w1, [sp, #28]
  28:	cmp	w1, w0
  2c:	b.ne	3c <e2p_encmode2string+0x3c>  // b.any
  30:	ldr	x0, [sp, #40]
  34:	ldr	x0, [x0, #8]
  38:	b	78 <e2p_encmode2string+0x78>
  3c:	ldr	x0, [sp, #40]
  40:	add	x0, x0, #0x10
  44:	str	x0, [sp, #40]
  48:	ldr	x0, [sp, #40]
  4c:	ldr	x0, [x0, #8]
  50:	cmp	x0, #0x0
  54:	b.ne	1c <e2p_encmode2string+0x1c>  // b.any
  58:	ldr	w2, [sp, #28]
  5c:	adrp	x0, 0 <e2p_encmode2string>
  60:	add	x1, x0, #0x0
  64:	adrp	x0, 0 <e2p_encmode2string>
  68:	add	x0, x0, #0x0
  6c:	bl	0 <sprintf>
  70:	adrp	x0, 0 <e2p_encmode2string>
  74:	add	x0, x0, #0x0
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

0000000000000080 <e2p_string2encmode>:
  80:	stp	x29, x30, [sp, #-64]!
  84:	mov	x29, sp
  88:	str	x0, [sp, #24]
  8c:	adrp	x0, 0 <e2p_encmode2string>
  90:	add	x0, x0, #0x0
  94:	str	x0, [sp, #56]
  98:	b	d0 <e2p_string2encmode+0x50>
  9c:	ldr	x0, [sp, #56]
  a0:	ldr	x0, [x0, #8]
  a4:	mov	x1, x0
  a8:	ldr	x0, [sp, #24]
  ac:	bl	0 <strcasecmp>
  b0:	cmp	w0, #0x0
  b4:	b.ne	c4 <e2p_string2encmode+0x44>  // b.any
  b8:	ldr	x0, [sp, #56]
  bc:	ldr	w0, [x0]
  c0:	b	174 <e2p_string2encmode+0xf4>
  c4:	ldr	x0, [sp, #56]
  c8:	add	x0, x0, #0x10
  cc:	str	x0, [sp, #56]
  d0:	ldr	x0, [sp, #56]
  d4:	ldr	x0, [x0, #8]
  d8:	cmp	x0, #0x0
  dc:	b.ne	9c <e2p_string2encmode+0x1c>  // b.any
  e0:	mov	x2, #0x9                   	// #9
  e4:	adrp	x0, 0 <e2p_encmode2string>
  e8:	add	x1, x0, #0x0
  ec:	ldr	x0, [sp, #24]
  f0:	bl	0 <strncasecmp>
  f4:	cmp	w0, #0x0
  f8:	b.eq	104 <e2p_string2encmode+0x84>  // b.none
  fc:	mov	w0, #0xffffffff            	// #-1
 100:	b	174 <e2p_string2encmode+0xf4>
 104:	ldr	x0, [sp, #24]
 108:	add	x0, x0, #0x9
 10c:	ldrb	w0, [x0]
 110:	cmp	w0, #0x0
 114:	b.ne	120 <e2p_string2encmode+0xa0>  // b.any
 118:	mov	w0, #0xffffffff            	// #-1
 11c:	b	174 <e2p_string2encmode+0xf4>
 120:	ldr	x0, [sp, #24]
 124:	add	x0, x0, #0x9
 128:	add	x1, sp, #0x28
 12c:	mov	w2, #0xa                   	// #10
 130:	bl	0 <strtol>
 134:	str	w0, [sp, #52]
 138:	ldr	w0, [sp, #52]
 13c:	cmp	w0, #0xff
 140:	b.gt	150 <e2p_string2encmode+0xd0>
 144:	ldr	w0, [sp, #52]
 148:	cmp	w0, #0x0
 14c:	b.ge	158 <e2p_string2encmode+0xd8>  // b.tcont
 150:	mov	w0, #0xffffffff            	// #-1
 154:	b	174 <e2p_string2encmode+0xf4>
 158:	ldr	x0, [sp, #40]
 15c:	ldrb	w0, [x0]
 160:	cmp	w0, #0x0
 164:	b.eq	170 <e2p_string2encmode+0xf0>  // b.none
 168:	mov	w0, #0xffffffff            	// #-1
 16c:	b	174 <e2p_string2encmode+0xf4>
 170:	ldr	w0, [sp, #52]
 174:	ldp	x29, x30, [sp], #64
 178:	ret

fgetproject.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fgetproject>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	wzr, [sp, #76]
  14:	mov	w1, #0x800                 	// #2048
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <open>
  20:	str	w0, [sp, #72]
  24:	ldr	w0, [sp, #72]
  28:	cmn	w0, #0x1
  2c:	b.ne	38 <fgetproject+0x38>  // b.any
  30:	mov	w0, #0xffffffff            	// #-1
  34:	b	a4 <fgetproject+0xa4>
  38:	add	x0, sp, #0x28
  3c:	mov	x2, x0
  40:	mov	x1, #0x581f                	// #22559
  44:	movk	x1, #0x801c, lsl #16
  48:	ldr	w0, [sp, #72]
  4c:	bl	0 <ioctl>
  50:	str	w0, [sp, #68]
  54:	ldr	w0, [sp, #68]
  58:	cmp	w0, #0x0
  5c:	b.ne	70 <fgetproject+0x70>  // b.any
  60:	ldr	w0, [sp, #52]
  64:	mov	w1, w0
  68:	ldr	x0, [sp, #16]
  6c:	str	x1, [x0]
  70:	bl	0 <__errno_location>
  74:	ldr	w0, [x0]
  78:	str	w0, [sp, #76]
  7c:	ldr	w0, [sp, #72]
  80:	bl	0 <close>
  84:	ldr	w0, [sp, #76]
  88:	cmp	w0, #0x0
  8c:	b.eq	a0 <fgetproject+0xa0>  // b.none
  90:	bl	0 <__errno_location>
  94:	mov	x1, x0
  98:	ldr	w0, [sp, #76]
  9c:	str	w0, [x1]
  a0:	ldr	w0, [sp, #68]
  a4:	ldp	x29, x30, [sp], #80
  a8:	ret

fsetproject.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <fsetproject>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	wzr, [sp, #72]
  14:	mov	w1, #0x800                 	// #2048
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <open>
  20:	str	w0, [sp, #68]
  24:	ldr	w0, [sp, #68]
  28:	cmn	w0, #0x1
  2c:	b.ne	38 <fsetproject+0x38>  // b.any
  30:	mov	w0, #0xffffffff            	// #-1
  34:	b	dc <fsetproject+0xdc>
  38:	add	x0, sp, #0x28
  3c:	mov	x2, x0
  40:	mov	x1, #0x581f                	// #22559
  44:	movk	x1, #0x801c, lsl #16
  48:	ldr	w0, [sp, #68]
  4c:	bl	0 <ioctl>
  50:	str	w0, [sp, #76]
  54:	ldr	w0, [sp, #76]
  58:	cmn	w0, #0x1
  5c:	b.ne	70 <fsetproject+0x70>  // b.any
  60:	bl	0 <__errno_location>
  64:	ldr	w0, [x0]
  68:	str	w0, [sp, #72]
  6c:	b	b4 <fsetproject+0xb4>
  70:	ldr	x0, [sp, #16]
  74:	str	w0, [sp, #52]
  78:	add	x0, sp, #0x28
  7c:	mov	x2, x0
  80:	mov	x1, #0x5820                	// #22560
  84:	movk	x1, #0x401c, lsl #16
  88:	ldr	w0, [sp, #68]
  8c:	bl	0 <ioctl>
  90:	str	w0, [sp, #76]
  94:	ldr	w0, [sp, #76]
  98:	cmn	w0, #0x1
  9c:	b.ne	b0 <fsetproject+0xb0>  // b.any
  a0:	bl	0 <__errno_location>
  a4:	ldr	w0, [x0]
  a8:	str	w0, [sp, #72]
  ac:	b	b4 <fsetproject+0xb4>
  b0:	nop
  b4:	ldr	w0, [sp, #68]
  b8:	bl	0 <close>
  bc:	ldr	w0, [sp, #72]
  c0:	cmp	w0, #0x0
  c4:	b.eq	d8 <fsetproject+0xd8>  // b.none
  c8:	bl	0 <__errno_location>
  cc:	mov	x1, x0
  d0:	ldr	w0, [sp, #72]
  d4:	str	w0, [x1]
  d8:	ldr	w0, [sp, #76]
  dc:	ldp	x29, x30, [sp], #80
  e0:	ret

encoding.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2p_str2encoding>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	wzr, [sp, #44]
  10:	b	68 <e2p_str2encoding+0x68>
  14:	adrp	x0, 0 <e2p_str2encoding>
  18:	add	x1, x0, #0x0
  1c:	ldr	w0, [sp, #44]
  20:	lsl	x0, x0, #4
  24:	add	x0, x1, x0
  28:	ldr	x0, [x0]
  2c:	mov	x1, x0
  30:	ldr	x0, [sp, #24]
  34:	bl	0 <strcmp>
  38:	cmp	w0, #0x0
  3c:	b.ne	5c <e2p_str2encoding+0x5c>  // b.any
  40:	adrp	x0, 0 <e2p_str2encoding>
  44:	add	x1, x0, #0x0
  48:	ldr	w0, [sp, #44]
  4c:	lsl	x0, x0, #4
  50:	add	x0, x1, x0
  54:	ldrh	w0, [x0, #8]
  58:	b	78 <e2p_str2encoding+0x78>
  5c:	ldr	w0, [sp, #44]
  60:	add	w0, w0, #0x1
  64:	str	w0, [sp, #44]
  68:	ldr	w0, [sp, #44]
  6c:	cmp	w0, #0x1
  70:	b.ls	14 <e2p_str2encoding+0x14>  // b.plast
  74:	mov	w0, #0xffffffea            	// #-22
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

0000000000000080 <e2p_encoding2str>:
  80:	stp	x29, x30, [sp, #-48]!
  84:	mov	x29, sp
  88:	str	w0, [sp, #28]
  8c:	str	wzr, [sp, #44]
  90:	b	e4 <e2p_encoding2str+0x64>
  94:	adrp	x0, 0 <e2p_str2encoding>
  98:	add	x1, x0, #0x0
  9c:	ldr	w0, [sp, #44]
  a0:	lsl	x0, x0, #4
  a4:	add	x0, x1, x0
  a8:	ldrh	w0, [x0, #8]
  ac:	mov	w1, w0
  b0:	ldr	w0, [sp, #28]
  b4:	cmp	w0, w1
  b8:	b.ne	d8 <e2p_encoding2str+0x58>  // b.any
  bc:	adrp	x0, 0 <e2p_str2encoding>
  c0:	add	x1, x0, #0x0
  c4:	ldr	w0, [sp, #44]
  c8:	lsl	x0, x0, #4
  cc:	add	x0, x1, x0
  d0:	ldr	x0, [x0]
  d4:	b	110 <e2p_encoding2str+0x90>
  d8:	ldr	w0, [sp, #44]
  dc:	add	w0, w0, #0x1
  e0:	str	w0, [sp, #44]
  e4:	ldr	w0, [sp, #44]
  e8:	cmp	w0, #0x1
  ec:	b.ls	94 <e2p_encoding2str+0x14>  // b.plast
  f0:	ldr	w2, [sp, #28]
  f4:	adrp	x0, 0 <e2p_str2encoding>
  f8:	add	x1, x0, #0x0
  fc:	adrp	x0, 0 <e2p_str2encoding>
 100:	add	x0, x0, #0x0
 104:	bl	0 <sprintf>
 108:	adrp	x0, 0 <e2p_str2encoding>
 10c:	add	x0, x0, #0x0
 110:	ldp	x29, x30, [sp], #48
 114:	ret

0000000000000118 <e2p_get_encoding_flags>:
 118:	sub	sp, sp, #0x20
 11c:	str	w0, [sp, #12]
 120:	str	wzr, [sp, #28]
 124:	b	178 <e2p_get_encoding_flags+0x60>
 128:	adrp	x0, 0 <e2p_str2encoding>
 12c:	add	x1, x0, #0x0
 130:	ldr	w0, [sp, #28]
 134:	lsl	x0, x0, #4
 138:	add	x0, x1, x0
 13c:	ldrh	w0, [x0, #8]
 140:	mov	w1, w0
 144:	ldr	w0, [sp, #12]
 148:	cmp	w0, w1
 14c:	b.ne	16c <e2p_get_encoding_flags+0x54>  // b.any
 150:	adrp	x0, 0 <e2p_str2encoding>
 154:	add	x1, x0, #0x0
 158:	ldr	w0, [sp, #28]
 15c:	lsl	x0, x0, #4
 160:	add	x0, x1, x0
 164:	ldrh	w0, [x0, #10]
 168:	b	188 <e2p_get_encoding_flags+0x70>
 16c:	ldr	w0, [sp, #28]
 170:	add	w0, w0, #0x1
 174:	str	w0, [sp, #28]
 178:	ldr	w0, [sp, #28]
 17c:	cmp	w0, #0x1
 180:	b.ls	128 <e2p_get_encoding_flags+0x10>  // b.plast
 184:	mov	w0, #0x0                   	// #0
 188:	add	sp, sp, #0x20
 18c:	ret

0000000000000190 <e2p_str2encoding_flags>:
 190:	stp	x29, x30, [sp, #-80]!
 194:	mov	x29, sp
 198:	str	w0, [sp, #44]
 19c:	str	x1, [sp, #32]
 1a0:	str	x2, [sp, #24]
 1a4:	adrp	x0, 0 <e2p_str2encoding>
 1a8:	add	x1, x0, #0x0
 1ac:	ldr	x0, [sp, #32]
 1b0:	bl	0 <strtok>
 1b4:	str	x0, [sp, #72]
 1b8:	str	wzr, [sp, #64]
 1bc:	ldr	w0, [sp, #44]
 1c0:	cmp	w0, #0x1
 1c4:	b.eq	2d8 <e2p_str2encoding_flags+0x148>  // b.none
 1c8:	mov	w0, #0xffffffea            	// #-22
 1cc:	b	2e8 <e2p_str2encoding_flags+0x158>
 1d0:	str	wzr, [sp, #64]
 1d4:	mov	x2, #0x2                   	// #2
 1d8:	ldr	x1, [sp, #72]
 1dc:	adrp	x0, 0 <e2p_str2encoding>
 1e0:	add	x0, x0, #0x0
 1e4:	bl	0 <strncmp>
 1e8:	cmp	w0, #0x0
 1ec:	b.ne	204 <e2p_str2encoding_flags+0x74>  // b.any
 1f0:	mov	w0, #0x1                   	// #1
 1f4:	str	w0, [sp, #64]
 1f8:	ldr	x0, [sp, #72]
 1fc:	add	x0, x0, #0x2
 200:	str	x0, [sp, #72]
 204:	str	wzr, [sp, #68]
 208:	b	2b0 <e2p_str2encoding_flags+0x120>
 20c:	ldr	w0, [sp, #68]
 210:	lsl	x1, x0, #4
 214:	adrp	x0, 0 <e2p_str2encoding>
 218:	add	x0, x0, #0x0
 21c:	add	x0, x1, x0
 220:	str	x0, [sp, #56]
 224:	ldr	x0, [sp, #56]
 228:	ldr	x0, [x0, #8]
 22c:	ldr	x1, [sp, #72]
 230:	bl	0 <strcmp>
 234:	cmp	w0, #0x0
 238:	b.ne	2a4 <e2p_str2encoding_flags+0x114>  // b.any
 23c:	ldr	w0, [sp, #64]
 240:	cmp	w0, #0x0
 244:	b.eq	280 <e2p_str2encoding_flags+0xf0>  // b.none
 248:	ldr	x0, [sp, #24]
 24c:	ldrh	w0, [x0]
 250:	sxth	w1, w0
 254:	ldr	x0, [sp, #56]
 258:	ldrh	w0, [x0]
 25c:	sxth	w0, w0
 260:	mvn	w0, w0
 264:	sxth	w0, w0
 268:	and	w0, w1, w0
 26c:	sxth	w0, w0
 270:	and	w1, w0, #0xffff
 274:	ldr	x0, [sp, #24]
 278:	strh	w1, [x0]
 27c:	b	2c4 <e2p_str2encoding_flags+0x134>
 280:	ldr	x0, [sp, #24]
 284:	ldrh	w1, [x0]
 288:	ldr	x0, [sp, #56]
 28c:	ldrh	w0, [x0]
 290:	orr	w0, w1, w0
 294:	and	w1, w0, #0xffff
 298:	ldr	x0, [sp, #24]
 29c:	strh	w1, [x0]
 2a0:	b	2c4 <e2p_str2encoding_flags+0x134>
 2a4:	ldr	w0, [sp, #68]
 2a8:	add	w0, w0, #0x1
 2ac:	str	w0, [sp, #68]
 2b0:	ldr	w0, [sp, #68]
 2b4:	cmp	w0, #0x0
 2b8:	b.eq	20c <e2p_str2encoding_flags+0x7c>  // b.none
 2bc:	mov	w0, #0xffffffea            	// #-22
 2c0:	b	2e8 <e2p_str2encoding_flags+0x158>
 2c4:	adrp	x0, 0 <e2p_str2encoding>
 2c8:	add	x1, x0, #0x0
 2cc:	mov	x0, #0x0                   	// #0
 2d0:	bl	0 <strtok>
 2d4:	str	x0, [sp, #72]
 2d8:	ldr	x0, [sp, #72]
 2dc:	cmp	x0, #0x0
 2e0:	b.ne	1d0 <e2p_str2encoding_flags+0x40>  // b.any
 2e4:	mov	w0, #0x0                   	// #0
 2e8:	ldp	x29, x30, [sp], #80
 2ec:	ret
