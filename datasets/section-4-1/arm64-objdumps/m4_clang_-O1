
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//m4_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004024c0 <.init>:
  4024c0:	stp	x29, x30, [sp, #-16]!
  4024c4:	mov	x29, sp
  4024c8:	bl	402c10 <ferror@plt+0x60>
  4024cc:	ldp	x29, x30, [sp], #16
  4024d0:	ret

Disassembly of section .plt:

00000000004024e0 <mbrtowc@plt-0x20>:
  4024e0:	stp	x16, x30, [sp, #-16]!
  4024e4:	adrp	x16, 42b000 <_obstack_memory_used@@Base+0x1482c>
  4024e8:	ldr	x17, [x16, #4088]
  4024ec:	add	x16, x16, #0xff8
  4024f0:	br	x17
  4024f4:	nop
  4024f8:	nop
  4024fc:	nop

0000000000402500 <mbrtowc@plt>:
  402500:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16]
  402508:	add	x16, x16, #0x0
  40250c:	br	x17

0000000000402510 <memcpy@plt>:
  402510:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #8]
  402518:	add	x16, x16, #0x8
  40251c:	br	x17

0000000000402520 <sigaltstack@plt>:
  402520:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #16]
  402528:	add	x16, x16, #0x10
  40252c:	br	x17

0000000000402530 <_exit@plt>:
  402530:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #24]
  402538:	add	x16, x16, #0x18
  40253c:	br	x17

0000000000402540 <strlen@plt>:
  402540:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #32]
  402548:	add	x16, x16, #0x20
  40254c:	br	x17

0000000000402550 <fputs@plt>:
  402550:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #40]
  402558:	add	x16, x16, #0x28
  40255c:	br	x17

0000000000402560 <__sprintf_chk@plt>:
  402560:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #48]
  402568:	add	x16, x16, #0x30
  40256c:	br	x17

0000000000402570 <exit@plt>:
  402570:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #56]
  402578:	add	x16, x16, #0x38
  40257c:	br	x17

0000000000402580 <raise@plt>:
  402580:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #64]
  402588:	add	x16, x16, #0x40
  40258c:	br	x17

0000000000402590 <error@plt>:
  402590:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #72]
  402598:	add	x16, x16, #0x48
  40259c:	br	x17

00000000004025a0 <sigprocmask@plt>:
  4025a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #80]
  4025a8:	add	x16, x16, #0x50
  4025ac:	br	x17

00000000004025b0 <strtod@plt>:
  4025b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #88]
  4025b8:	add	x16, x16, #0x58
  4025bc:	br	x17

00000000004025c0 <secure_getenv@plt>:
  4025c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #96]
  4025c8:	add	x16, x16, #0x60
  4025cc:	br	x17

00000000004025d0 <setbuf@plt>:
  4025d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #104]
  4025d8:	add	x16, x16, #0x68
  4025dc:	br	x17

00000000004025e0 <ferror_unlocked@plt>:
  4025e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #112]
  4025e8:	add	x16, x16, #0x70
  4025ec:	br	x17

00000000004025f0 <__cxa_finalize@plt>:
  4025f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #120]
  4025f8:	add	x16, x16, #0x78
  4025fc:	br	x17

0000000000402600 <putc@plt>:
  402600:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #128]
  402608:	add	x16, x16, #0x80
  40260c:	br	x17

0000000000402610 <pipe@plt>:
  402610:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #136]
  402618:	add	x16, x16, #0x88
  40261c:	br	x17

0000000000402620 <__cxa_atexit@plt>:
  402620:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #144]
  402628:	add	x16, x16, #0x90
  40262c:	br	x17

0000000000402630 <fputc@plt>:
  402630:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #152]
  402638:	add	x16, x16, #0x98
  40263c:	br	x17

0000000000402640 <qsort@plt>:
  402640:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #160]
  402648:	add	x16, x16, #0xa0
  40264c:	br	x17

0000000000402650 <posix_spawn_file_actions_addopen@plt>:
  402650:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #168]
  402658:	add	x16, x16, #0xa8
  40265c:	br	x17

0000000000402660 <kill@plt>:
  402660:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #176]
  402668:	add	x16, x16, #0xb0
  40266c:	br	x17

0000000000402670 <lseek@plt>:
  402670:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #184]
  402678:	add	x16, x16, #0xb8
  40267c:	br	x17

0000000000402680 <__fpending@plt>:
  402680:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #192]
  402688:	add	x16, x16, #0xc0
  40268c:	br	x17

0000000000402690 <fileno@plt>:
  402690:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #200]
  402698:	add	x16, x16, #0xc8
  40269c:	br	x17

00000000004026a0 <posix_spawn_file_actions_adddup2@plt>:
  4026a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #208]
  4026a8:	add	x16, x16, #0xd0
  4026ac:	br	x17

00000000004026b0 <signal@plt>:
  4026b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #216]
  4026b8:	add	x16, x16, #0xd8
  4026bc:	br	x17

00000000004026c0 <fclose@plt>:
  4026c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #224]
  4026c8:	add	x16, x16, #0xe0
  4026cc:	br	x17

00000000004026d0 <getpid@plt>:
  4026d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #232]
  4026d8:	add	x16, x16, #0xe8
  4026dc:	br	x17

00000000004026e0 <nl_langinfo@plt>:
  4026e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #240]
  4026e8:	add	x16, x16, #0xf0
  4026ec:	br	x17

00000000004026f0 <fopen@plt>:
  4026f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #248]
  4026f8:	add	x16, x16, #0xf8
  4026fc:	br	x17

0000000000402700 <malloc@plt>:
  402700:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #256]
  402708:	add	x16, x16, #0x100
  40270c:	br	x17

0000000000402710 <open@plt>:
  402710:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #264]
  402718:	add	x16, x16, #0x108
  40271c:	br	x17

0000000000402720 <__vasprintf_chk@plt>:
  402720:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #272]
  402728:	add	x16, x16, #0x110
  40272c:	br	x17

0000000000402730 <__isoc99_fscanf@plt>:
  402730:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #280]
  402738:	add	x16, x16, #0x118
  40273c:	br	x17

0000000000402740 <sigemptyset@plt>:
  402740:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #288]
  402748:	add	x16, x16, #0x120
  40274c:	br	x17

0000000000402750 <posix_spawnattr_destroy@plt>:
  402750:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #296]
  402758:	add	x16, x16, #0x128
  40275c:	br	x17

0000000000402760 <strncmp@plt>:
  402760:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #304]
  402768:	add	x16, x16, #0x130
  40276c:	br	x17

0000000000402770 <__libc_start_main@plt>:
  402770:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #312]
  402778:	add	x16, x16, #0x138
  40277c:	br	x17

0000000000402780 <strcat@plt>:
  402780:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #320]
  402788:	add	x16, x16, #0x140
  40278c:	br	x17

0000000000402790 <__printf_chk@plt>:
  402790:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #328]
  402798:	add	x16, x16, #0x148
  40279c:	br	x17

00000000004027a0 <memset@plt>:
  4027a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #336]
  4027a8:	add	x16, x16, #0x150
  4027ac:	br	x17

00000000004027b0 <fdopen@plt>:
  4027b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #344]
  4027b8:	add	x16, x16, #0x158
  4027bc:	br	x17

00000000004027c0 <re_set_registers@plt>:
  4027c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #352]
  4027c8:	add	x16, x16, #0x160
  4027cc:	br	x17

00000000004027d0 <__vfprintf_chk@plt>:
  4027d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #360]
  4027d8:	add	x16, x16, #0x168
  4027dc:	br	x17

00000000004027e0 <calloc@plt>:
  4027e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #368]
  4027e8:	add	x16, x16, #0x170
  4027ec:	br	x17

00000000004027f0 <bcmp@plt>:
  4027f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #376]
  4027f8:	add	x16, x16, #0x178
  4027fc:	br	x17

0000000000402800 <posix_spawn_file_actions_destroy@plt>:
  402800:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #384]
  402808:	add	x16, x16, #0x180
  40280c:	br	x17

0000000000402810 <realloc@plt>:
  402810:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #392]
  402818:	add	x16, x16, #0x188
  40281c:	br	x17

0000000000402820 <re_search@plt>:
  402820:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #400]
  402828:	add	x16, x16, #0x190
  40282c:	br	x17

0000000000402830 <getc@plt>:
  402830:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #408]
  402838:	add	x16, x16, #0x198
  40283c:	br	x17

0000000000402840 <posix_spawn_file_actions_addclose@plt>:
  402840:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #416]
  402848:	add	x16, x16, #0x1a0
  40284c:	br	x17

0000000000402850 <getc_unlocked@plt>:
  402850:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #424]
  402858:	add	x16, x16, #0x1a8
  40285c:	br	x17

0000000000402860 <close@plt>:
  402860:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #432]
  402868:	add	x16, x16, #0x1b0
  40286c:	br	x17

0000000000402870 <sigaction@plt>:
  402870:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #440]
  402878:	add	x16, x16, #0x1b8
  40287c:	br	x17

0000000000402880 <strrchr@plt>:
  402880:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #448]
  402888:	add	x16, x16, #0x1c0
  40288c:	br	x17

0000000000402890 <__gmon_start__@plt>:
  402890:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #456]
  402898:	add	x16, x16, #0x1c8
  40289c:	br	x17

00000000004028a0 <write@plt>:
  4028a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #464]
  4028a8:	add	x16, x16, #0x1d0
  4028ac:	br	x17

00000000004028b0 <mkdtemp@plt>:
  4028b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #472]
  4028b8:	add	x16, x16, #0x1d8
  4028bc:	br	x17

00000000004028c0 <posix_spawnattr_setflags@plt>:
  4028c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #480]
  4028c8:	add	x16, x16, #0x1e0
  4028cc:	br	x17

00000000004028d0 <abort@plt>:
  4028d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #488]
  4028d8:	add	x16, x16, #0x1e8
  4028dc:	br	x17

00000000004028e0 <re_compile_pattern@plt>:
  4028e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #496]
  4028e8:	add	x16, x16, #0x1f0
  4028ec:	br	x17

00000000004028f0 <mbsinit@plt>:
  4028f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #504]
  4028f8:	add	x16, x16, #0x1f8
  4028fc:	br	x17

0000000000402900 <posix_spawnattr_setsigmask@plt>:
  402900:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #512]
  402908:	add	x16, x16, #0x200
  40290c:	br	x17

0000000000402910 <posix_spawn_file_actions_init@plt>:
  402910:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #520]
  402918:	add	x16, x16, #0x208
  40291c:	br	x17

0000000000402920 <getopt_long@plt>:
  402920:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #528]
  402928:	add	x16, x16, #0x210
  40292c:	br	x17

0000000000402930 <__fprintf_chk@plt>:
  402930:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #536]
  402938:	add	x16, x16, #0x218
  40293c:	br	x17

0000000000402940 <strcmp@plt>:
  402940:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #544]
  402948:	add	x16, x16, #0x220
  40294c:	br	x17

0000000000402950 <__ctype_b_loc@plt>:
  402950:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #552]
  402958:	add	x16, x16, #0x228
  40295c:	br	x17

0000000000402960 <rmdir@plt>:
  402960:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #560]
  402968:	add	x16, x16, #0x230
  40296c:	br	x17

0000000000402970 <strtol@plt>:
  402970:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #568]
  402978:	add	x16, x16, #0x238
  40297c:	br	x17

0000000000402980 <fseeko@plt>:
  402980:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #576]
  402988:	add	x16, x16, #0x240
  40298c:	br	x17

0000000000402990 <fread@plt>:
  402990:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #584]
  402998:	add	x16, x16, #0x248
  40299c:	br	x17

00000000004029a0 <free@plt>:
  4029a0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #592]
  4029a8:	add	x16, x16, #0x250
  4029ac:	br	x17

00000000004029b0 <ungetc@plt>:
  4029b0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #600]
  4029b8:	add	x16, x16, #0x258
  4029bc:	br	x17

00000000004029c0 <__ctype_get_mb_cur_max@plt>:
  4029c0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #608]
  4029c8:	add	x16, x16, #0x260
  4029cc:	br	x17

00000000004029d0 <posix_spawnp@plt>:
  4029d0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #616]
  4029d8:	add	x16, x16, #0x268
  4029dc:	br	x17

00000000004029e0 <__deregister_frame_info@plt>:
  4029e0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #624]
  4029e8:	add	x16, x16, #0x270
  4029ec:	br	x17

00000000004029f0 <__register_frame_info@plt>:
  4029f0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #632]
  4029f8:	add	x16, x16, #0x278
  4029fc:	br	x17

0000000000402a00 <strchr@plt>:
  402a00:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #640]
  402a08:	add	x16, x16, #0x280
  402a0c:	br	x17

0000000000402a10 <rename@plt>:
  402a10:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #648]
  402a18:	add	x16, x16, #0x288
  402a1c:	br	x17

0000000000402a20 <fwrite@plt>:
  402a20:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #656]
  402a28:	add	x16, x16, #0x290
  402a2c:	br	x17

0000000000402a30 <fcntl@plt>:
  402a30:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #664]
  402a38:	add	x16, x16, #0x298
  402a3c:	br	x17

0000000000402a40 <fflush@plt>:
  402a40:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #672]
  402a48:	add	x16, x16, #0x2a0
  402a4c:	br	x17

0000000000402a50 <strcpy@plt>:
  402a50:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #680]
  402a58:	add	x16, x16, #0x2a8
  402a5c:	br	x17

0000000000402a60 <posix_spawnattr_init@plt>:
  402a60:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #688]
  402a68:	add	x16, x16, #0x2b0
  402a6c:	br	x17

0000000000402a70 <memchr@plt>:
  402a70:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #696]
  402a78:	add	x16, x16, #0x2b8
  402a7c:	br	x17

0000000000402a80 <mkstemp@plt>:
  402a80:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #704]
  402a88:	add	x16, x16, #0x2c0
  402a8c:	br	x17

0000000000402a90 <__mempcpy_chk@plt>:
  402a90:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #712]
  402a98:	add	x16, x16, #0x2c8
  402a9c:	br	x17

0000000000402aa0 <__fxstat@plt>:
  402aa0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #720]
  402aa8:	add	x16, x16, #0x2d0
  402aac:	br	x17

0000000000402ab0 <strstr@plt>:
  402ab0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #728]
  402ab8:	add	x16, x16, #0x2d8
  402abc:	br	x17

0000000000402ac0 <fputs_unlocked@plt>:
  402ac0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #736]
  402ac8:	add	x16, x16, #0x2e0
  402acc:	br	x17

0000000000402ad0 <__freading@plt>:
  402ad0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #744]
  402ad8:	add	x16, x16, #0x2e8
  402adc:	br	x17

0000000000402ae0 <regfree@plt>:
  402ae0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #752]
  402ae8:	add	x16, x16, #0x2f0
  402aec:	br	x17

0000000000402af0 <strsignal@plt>:
  402af0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #760]
  402af8:	add	x16, x16, #0x2f8
  402afc:	br	x17

0000000000402b00 <sigaddset@plt>:
  402b00:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #768]
  402b08:	add	x16, x16, #0x300
  402b0c:	br	x17

0000000000402b10 <iswprint@plt>:
  402b10:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #776]
  402b18:	add	x16, x16, #0x308
  402b1c:	br	x17

0000000000402b20 <__assert_fail@plt>:
  402b20:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #784]
  402b28:	add	x16, x16, #0x310
  402b2c:	br	x17

0000000000402b30 <__errno_location@plt>:
  402b30:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #792]
  402b38:	add	x16, x16, #0x318
  402b3c:	br	x17

0000000000402b40 <getenv@plt>:
  402b40:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #800]
  402b48:	add	x16, x16, #0x320
  402b4c:	br	x17

0000000000402b50 <putchar@plt>:
  402b50:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #808]
  402b58:	add	x16, x16, #0x328
  402b5c:	br	x17

0000000000402b60 <__xstat@plt>:
  402b60:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #816]
  402b68:	add	x16, x16, #0x330
  402b6c:	br	x17

0000000000402b70 <waitpid@plt>:
  402b70:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #824]
  402b78:	add	x16, x16, #0x338
  402b7c:	br	x17

0000000000402b80 <unlink@plt>:
  402b80:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #832]
  402b88:	add	x16, x16, #0x340
  402b8c:	br	x17

0000000000402b90 <error_at_line@plt>:
  402b90:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #840]
  402b98:	add	x16, x16, #0x348
  402b9c:	br	x17

0000000000402ba0 <setlocale@plt>:
  402ba0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #848]
  402ba8:	add	x16, x16, #0x350
  402bac:	br	x17

0000000000402bb0 <ferror@plt>:
  402bb0:	adrp	x16, 42c000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #856]
  402bb8:	add	x16, x16, #0x358
  402bbc:	br	x17

Disassembly of section .text:

0000000000402bc0 <_obstack_begin@@Base-0x138f4>:
  402bc0:	mov	x29, #0x0                   	// #0
  402bc4:	mov	x30, #0x0                   	// #0
  402bc8:	mov	x5, x0
  402bcc:	ldr	x1, [sp]
  402bd0:	add	x2, sp, #0x8
  402bd4:	mov	x6, sp
  402bd8:	movz	x0, #0x0, lsl #48
  402bdc:	movk	x0, #0x0, lsl #32
  402be0:	movk	x0, #0x40, lsl #16
  402be4:	movk	x0, #0x2df4
  402be8:	movz	x3, #0x0, lsl #48
  402bec:	movk	x3, #0x0, lsl #32
  402bf0:	movk	x3, #0x41, lsl #16
  402bf4:	movk	x3, #0x71d8
  402bf8:	movz	x4, #0x0, lsl #48
  402bfc:	movk	x4, #0x0, lsl #32
  402c00:	movk	x4, #0x41, lsl #16
  402c04:	movk	x4, #0x7258
  402c08:	bl	402770 <__libc_start_main@plt>
  402c0c:	bl	4028d0 <abort@plt>
  402c10:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x1482c>
  402c14:	ldr	x0, [x0, #4048]
  402c18:	cbz	x0, 402c20 <ferror@plt+0x70>
  402c1c:	b	402890 <__gmon_start__@plt>
  402c20:	ret
  402c24:	stp	x29, x30, [sp, #-16]!
  402c28:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402c2c:	ldrb	w9, [x8, #1120]
  402c30:	mov	x29, sp
  402c34:	tbnz	w9, #0, 402c60 <ferror@plt+0xb0>
  402c38:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1482c>
  402c3c:	ldr	x10, [x10, #4064]
  402c40:	mov	w9, #0x1                   	// #1
  402c44:	strb	w9, [x8, #1120]
  402c48:	cbz	x10, 402c60 <ferror@plt+0xb0>
  402c4c:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x382c>
  402c50:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402c54:	add	x0, x0, #0xe98
  402c58:	add	x1, x1, #0x468
  402c5c:	bl	4029f0 <__register_frame_info@plt>
  402c60:	ldp	x29, x30, [sp], #16
  402c64:	ret
  402c68:	stp	x29, x30, [sp, #-16]!
  402c6c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402c70:	ldrb	w9, [x8, #1192]
  402c74:	mov	x29, sp
  402c78:	tbnz	w9, #0, 402cb4 <ferror@plt+0x104>
  402c7c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x1482c>
  402c80:	ldr	x10, [x10, #4040]
  402c84:	mov	w9, #0x1                   	// #1
  402c88:	strb	w9, [x8, #1192]
  402c8c:	cbz	x10, 402c9c <ferror@plt+0xec>
  402c90:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402c94:	ldr	x0, [x8, #872]
  402c98:	bl	4025f0 <__cxa_finalize@plt>
  402c9c:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x1482c>
  402ca0:	ldr	x8, [x8, #4056]
  402ca4:	cbz	x8, 402cb4 <ferror@plt+0x104>
  402ca8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x382c>
  402cac:	add	x0, x0, #0xe98
  402cb0:	bl	4029e0 <__deregister_frame_info@plt>
  402cb4:	ldp	x29, x30, [sp], #16
  402cb8:	ret
  402cbc:	sub	sp, sp, #0x100
  402cc0:	stp	x29, x30, [sp, #240]
  402cc4:	add	x29, sp, #0xf0
  402cc8:	mov	x9, #0xffffffffffffffd8    	// #-40
  402ccc:	mov	x10, sp
  402cd0:	sub	x11, x29, #0x68
  402cd4:	adrp	x13, 437000 <__progname@@GLIBC_2.17+0xaba8>
  402cd8:	stp	x3, x4, [x29, #-104]
  402cdc:	movk	x9, #0xff80, lsl #32
  402ce0:	add	x12, x29, #0x10
  402ce4:	adrp	x14, 437000 <__progname@@GLIBC_2.17+0xaba8>
  402ce8:	add	x10, x10, #0x80
  402cec:	add	x11, x11, #0x28
  402cf0:	ldr	w3, [x13, #3504]
  402cf4:	ldr	x13, [x14, #3528]
  402cf8:	stp	x10, x9, [x29, #-16]
  402cfc:	stp	x12, x11, [x29, #-32]
  402d00:	stp	x5, x6, [x29, #-88]
  402d04:	stur	x7, [x29, #-72]
  402d08:	stp	q1, q2, [sp, #16]
  402d0c:	str	q0, [sp]
  402d10:	ldp	q0, q1, [x29, #-32]
  402d14:	mov	x8, x2
  402d18:	cmp	w3, #0x0
  402d1c:	csel	x2, xzr, x13, eq  // eq = none
  402d20:	sub	x5, x29, #0x40
  402d24:	mov	x4, x8
  402d28:	stp	q3, q4, [sp, #48]
  402d2c:	stp	q5, q6, [sp, #80]
  402d30:	str	q7, [sp, #112]
  402d34:	stp	q0, q1, [x29, #-64]
  402d38:	bl	414fa8 <ferror@plt+0x123f8>
  402d3c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  402d40:	ldr	w9, [x8, #3496]
  402d44:	cbnz	w9, 402d5c <ferror@plt+0x1ac>
  402d48:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402d4c:	ldrb	w9, [x9, #1228]
  402d50:	cbz	w9, 402d5c <ferror@plt+0x1ac>
  402d54:	mov	w9, #0x1                   	// #1
  402d58:	str	w9, [x8, #3496]
  402d5c:	ldp	x29, x30, [sp, #240]
  402d60:	add	sp, sp, #0x100
  402d64:	ret
  402d68:	sub	sp, sp, #0xf0
  402d6c:	stp	x29, x30, [sp, #224]
  402d70:	add	x29, sp, #0xe0
  402d74:	mov	x8, #0xffffffffffffffe8    	// #-24
  402d78:	mov	x9, sp
  402d7c:	sub	x10, x29, #0x58
  402d80:	movk	x8, #0xff80, lsl #32
  402d84:	add	x11, x29, #0x10
  402d88:	add	x9, x9, #0x80
  402d8c:	add	x10, x10, #0x18
  402d90:	stp	x9, x8, [x29, #-16]
  402d94:	stp	x11, x10, [x29, #-32]
  402d98:	stp	x5, x6, [x29, #-88]
  402d9c:	stur	x7, [x29, #-72]
  402da0:	stp	q0, q1, [sp]
  402da4:	ldp	q0, q1, [x29, #-32]
  402da8:	cmp	w3, #0x0
  402dac:	csel	x2, xzr, x2, eq  // eq = none
  402db0:	sub	x5, x29, #0x40
  402db4:	stp	q2, q3, [sp, #32]
  402db8:	stp	q4, q5, [sp, #64]
  402dbc:	stp	q6, q7, [sp, #96]
  402dc0:	stp	q0, q1, [x29, #-64]
  402dc4:	bl	414fa8 <ferror@plt+0x123f8>
  402dc8:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  402dcc:	ldr	w9, [x8, #3496]
  402dd0:	cbnz	w9, 402de8 <ferror@plt+0x238>
  402dd4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402dd8:	ldrb	w9, [x9, #1228]
  402ddc:	cbz	w9, 402de8 <ferror@plt+0x238>
  402de0:	mov	w9, #0x1                   	// #1
  402de4:	str	w9, [x8, #3496]
  402de8:	ldp	x29, x30, [sp, #224]
  402dec:	add	sp, sp, #0xf0
  402df0:	ret
  402df4:	sub	sp, sp, #0x120
  402df8:	stp	x29, x30, [sp, #192]
  402dfc:	stp	x28, x27, [sp, #208]
  402e00:	stp	x26, x25, [sp, #224]
  402e04:	stp	x24, x23, [sp, #240]
  402e08:	stp	x22, x21, [sp, #256]
  402e0c:	stp	x20, x19, [sp, #272]
  402e10:	ldr	x8, [x1]
  402e14:	mov	w20, w0
  402e18:	add	x29, sp, #0xc0
  402e1c:	mov	x19, x1
  402e20:	mov	x0, x8
  402e24:	bl	412d5c <ferror@plt+0x101ac>
  402e28:	adrp	x0, 410000 <ferror@plt+0xd450>
  402e2c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  402e30:	add	x0, x0, #0x7dc
  402e34:	str	wzr, [x8, #3496]
  402e38:	bl	417260 <_obstack_memory_used@@Base+0xa8c>
  402e3c:	bl	40e898 <ferror@plt+0xbce8>
  402e40:	bl	407a24 <ferror@plt+0x4e74>
  402e44:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  402e48:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x82c>
  402e4c:	add	x0, x0, #0x7d8
  402e50:	add	x1, x1, #0x810
  402e54:	bl	41604c <ferror@plt+0x1349c>
  402e58:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402e5c:	str	x0, [x8, #1232]
  402e60:	mov	w0, #0xb                   	// #11
  402e64:	bl	402af0 <strsignal@plt>
  402e68:	bl	415a38 <ferror@plt+0x12e88>
  402e6c:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402e70:	add	x21, x21, #0x4f8
  402e74:	str	x0, [x21, #56]
  402e78:	mov	w0, #0x6                   	// #6
  402e7c:	bl	402af0 <strsignal@plt>
  402e80:	bl	415a38 <ferror@plt+0x12e88>
  402e84:	str	x0, [x21, #16]
  402e88:	mov	w0, #0x4                   	// #4
  402e8c:	bl	402af0 <strsignal@plt>
  402e90:	bl	415a38 <ferror@plt+0x12e88>
  402e94:	str	x0, [x21]
  402e98:	mov	w0, #0x8                   	// #8
  402e9c:	bl	402af0 <strsignal@plt>
  402ea0:	bl	415a38 <ferror@plt+0x12e88>
  402ea4:	str	x0, [x21, #32]
  402ea8:	mov	w0, #0x7                   	// #7
  402eac:	bl	402af0 <strsignal@plt>
  402eb0:	bl	415a38 <ferror@plt+0x12e88>
  402eb4:	add	x8, sp, #0x20
  402eb8:	str	x0, [x21, #24]
  402ebc:	add	x0, x8, #0x8
  402ec0:	bl	402740 <sigemptyset@plt>
  402ec4:	adrp	x21, 403000 <ferror@plt+0x450>
  402ec8:	mov	w8, #0xc0000000            	// #-1073741824
  402ecc:	add	x21, x21, #0x474
  402ed0:	add	x1, sp, #0x20
  402ed4:	mov	w0, #0xb                   	// #11
  402ed8:	mov	x2, xzr
  402edc:	str	w8, [sp, #168]
  402ee0:	str	x21, [sp, #32]
  402ee4:	bl	402870 <sigaction@plt>
  402ee8:	add	x1, sp, #0x20
  402eec:	mov	w0, #0x6                   	// #6
  402ef0:	mov	x2, xzr
  402ef4:	bl	402870 <sigaction@plt>
  402ef8:	add	x1, sp, #0x20
  402efc:	mov	w0, #0x4                   	// #4
  402f00:	mov	x2, xzr
  402f04:	bl	402870 <sigaction@plt>
  402f08:	add	x1, sp, #0x20
  402f0c:	mov	w0, #0x8                   	// #8
  402f10:	mov	x2, xzr
  402f14:	bl	402870 <sigaction@plt>
  402f18:	add	x1, sp, #0x20
  402f1c:	mov	w0, #0x7                   	// #7
  402f20:	mov	x2, xzr
  402f24:	bl	402870 <sigaction@plt>
  402f28:	mov	x0, x21
  402f2c:	bl	40fadc <ferror@plt+0xcf2c>
  402f30:	cbnz	w0, 402f3c <ferror@plt+0x38c>
  402f34:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402f38:	str	wzr, [x8, #888]
  402f3c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  402f40:	adrp	x26, 417000 <_obstack_memory_used@@Base+0x82c>
  402f44:	adrp	x27, 417000 <_obstack_memory_used@@Base+0x82c>
  402f48:	adrp	x25, 417000 <_obstack_memory_used@@Base+0x82c>
  402f4c:	mov	w9, wzr
  402f50:	mov	x0, xzr
  402f54:	mov	x10, xzr
  402f58:	add	x8, x8, #0xe37
  402f5c:	add	x26, x26, #0x81f
  402f60:	add	x27, x27, #0x4b8
  402f64:	add	x25, x25, #0x2a8
  402f68:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402f6c:	stp	xzr, xzr, [sp, #16]
  402f70:	stp	xzr, x8, [sp]
  402f74:	mov	x23, x0
  402f78:	mov	w0, w20
  402f7c:	mov	x1, x19
  402f80:	mov	x2, x26
  402f84:	mov	x3, x27
  402f88:	mov	x4, xzr
  402f8c:	mov	x22, x10
  402f90:	mov	w24, w9
  402f94:	bl	402920 <getopt_long@plt>
  402f98:	add	w8, w0, #0x1
  402f9c:	cmp	w8, #0x105
  402fa0:	b.hi	40342c <ferror@plt+0x87c>  // b.pmore
  402fa4:	adr	x11, 402f74 <ferror@plt+0x3c4>
  402fa8:	ldrh	w9, [x25, x8, lsl #1]
  402fac:	add	x11, x11, x9, lsl #2
  402fb0:	mov	w21, w0
  402fb4:	mov	w9, #0x1                   	// #1
  402fb8:	mov	x0, x23
  402fbc:	mov	x10, x22
  402fc0:	br	x11
  402fc4:	mov	w0, #0x18                  	// #24
  402fc8:	bl	4157d0 <ferror@plt+0x12c20>
  402fcc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  402fd0:	ldr	x8, [x8, #1072]
  402fd4:	mov	w9, w24
  402fd8:	mov	x10, x0
  402fdc:	str	w21, [x0, #8]
  402fe0:	str	x8, [x0, #16]
  402fe4:	str	xzr, [x0]
  402fe8:	cbz	x22, 402f74 <ferror@plt+0x3c4>
  402fec:	str	x0, [x23]
  402ff0:	mov	w9, w24
  402ff4:	mov	x10, x22
  402ff8:	b	402f74 <ferror@plt+0x3c4>
  402ffc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  403000:	mov	w0, wzr
  403004:	mov	w1, wzr
  403008:	add	x2, x2, #0x848
  40300c:	mov	w3, w21
  403010:	bl	402590 <error@plt>
  403014:	b	4031d0 <ferror@plt+0x620>
  403018:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x82c>
  40301c:	adrp	x9, 417000 <_obstack_memory_used@@Base+0x82c>
  403020:	cmp	w21, #0x4e
  403024:	add	x8, x8, #0x89f
  403028:	add	x9, x9, #0x89c
  40302c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  403030:	csel	x3, x9, x8, eq  // eq = none
  403034:	mov	w0, wzr
  403038:	mov	w1, wzr
  40303c:	add	x2, x2, #0x87d
  403040:	bl	402590 <error@plt>
  403044:	b	4031d0 <ferror@plt+0x620>
  403048:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40304c:	ldr	x8, [x8, #1072]
  403050:	str	x8, [sp, #24]
  403054:	b	4031d0 <ferror@plt+0x620>
  403058:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40305c:	ldr	x0, [x8, #1072]
  403060:	bl	407ba0 <ferror@plt+0x4ff0>
  403064:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403068:	mov	w8, w0
  40306c:	str	w0, [x9, #1204]
  403070:	mov	w9, w24
  403074:	mov	x0, x23
  403078:	mov	x10, x22
  40307c:	tbz	w8, #31, 402f74 <ferror@plt+0x3c4>
  403080:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403084:	ldr	x3, [x8, #1072]
  403088:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  40308c:	mov	w0, wzr
  403090:	mov	w1, wzr
  403094:	add	x2, x2, #0xc64
  403098:	bl	402590 <error@plt>
  40309c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4030a0:	str	wzr, [x8, #1204]
  4030a4:	b	4031d0 <ferror@plt+0x620>
  4030a8:	mov	w8, #0x1                   	// #1
  4030ac:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4030b0:	str	w8, [x9, #1208]
  4030b4:	b	4031d0 <ferror@plt+0x620>
  4030b8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4030bc:	ldr	x0, [x8, #1072]
  4030c0:	bl	40e934 <ferror@plt+0xbd84>
  4030c4:	b	4031d0 <ferror@plt+0x620>
  4030c8:	mov	w8, #0x1                   	// #1
  4030cc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4030d0:	str	w8, [x9, #1220]
  4030d4:	b	4031d0 <ferror@plt+0x620>
  4030d8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  4030dc:	mov	w0, wzr
  4030e0:	mov	w1, wzr
  4030e4:	add	x2, x2, #0x8ac
  4030e8:	bl	402590 <error@plt>
  4030ec:	mov	w9, #0x1                   	// #1
  4030f0:	b	4031d4 <ferror@plt+0x624>
  4030f4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4030f8:	str	wzr, [x8, #1208]
  4030fc:	b	4031d0 <ferror@plt+0x620>
  403100:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403104:	ldr	x0, [x8, #1072]
  403108:	mov	w2, #0xa                   	// #10
  40310c:	mov	x1, xzr
  403110:	bl	402970 <strtol@plt>
  403114:	cmp	x0, #0x0
  403118:	mov	w8, #0x1fd                 	// #509
  40311c:	csel	x8, x8, x0, eq  // eq = none
  403120:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403124:	str	x8, [x9, #880]
  403128:	b	4031d0 <ferror@plt+0x620>
  40312c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403130:	ldr	x8, [x8, #1072]
  403134:	str	x8, [sp, #8]
  403138:	b	4031d0 <ferror@plt+0x620>
  40313c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403140:	ldr	x8, [x8, #1072]
  403144:	str	x8, [sp]
  403148:	b	4031d0 <ferror@plt+0x620>
  40314c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403150:	ldr	x0, [x8, #1072]
  403154:	mov	w2, #0xa                   	// #10
  403158:	mov	x1, xzr
  40315c:	bl	402970 <strtol@plt>
  403160:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403164:	str	w0, [x8, #888]
  403168:	b	4031d0 <ferror@plt+0x620>
  40316c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403170:	ldrb	w8, [x9, #1228]
  403174:	tbz	w8, #0, 4031c8 <ferror@plt+0x618>
  403178:	mov	w8, #0x1                   	// #1
  40317c:	str	w8, [x28, #1224]
  403180:	b	4031d0 <ferror@plt+0x620>
  403184:	mov	w8, #0x1                   	// #1
  403188:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40318c:	str	w8, [x9, #1212]
  403190:	b	4031d0 <ferror@plt+0x620>
  403194:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403198:	ldr	x8, [x8, #1072]
  40319c:	str	x8, [sp, #16]
  4031a0:	b	4031d0 <ferror@plt+0x620>
  4031a4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4031a8:	ldr	x0, [x8, #1072]
  4031ac:	mov	w2, #0xa                   	// #10
  4031b0:	mov	x1, xzr
  4031b4:	bl	402970 <strtol@plt>
  4031b8:	bic	w8, w0, w0, asr #31
  4031bc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4031c0:	str	w8, [x9, #1216]
  4031c4:	b	4031d0 <ferror@plt+0x620>
  4031c8:	mov	w8, #0x1                   	// #1
  4031cc:	strb	w8, [x9, #1228]
  4031d0:	mov	w9, w24
  4031d4:	mov	x0, x23
  4031d8:	mov	x10, x22
  4031dc:	b	402f74 <ferror@plt+0x3c4>
  4031e0:	ldr	x23, [sp, #24]
  4031e4:	cbz	x23, 403214 <ferror@plt+0x664>
  4031e8:	mov	x0, x23
  4031ec:	bl	407d64 <ferror@plt+0x51b4>
  4031f0:	tbnz	w0, #0, 403214 <ferror@plt+0x664>
  4031f4:	ldr	w21, [x28, #1224]
  4031f8:	bl	402b30 <__errno_location@plt>
  4031fc:	ldr	w1, [x0]
  403200:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  403204:	add	x2, x2, #0x8f5
  403208:	mov	w0, w21
  40320c:	mov	x3, x23
  403210:	bl	402cbc <ferror@plt+0x10c>
  403214:	bl	40b38c <ferror@plt+0x87dc>
  403218:	bl	40cd7c <ferror@plt+0xa1cc>
  40321c:	bl	40ebbc <ferror@plt+0xc00c>
  403220:	ldr	x0, [sp, #8]
  403224:	bl	403874 <ferror@plt+0xcc4>
  403228:	bl	40e8b4 <ferror@plt+0xbd04>
  40322c:	ldr	x0, [sp, #16]
  403230:	cbz	x0, 40339c <ferror@plt+0x7ec>
  403234:	bl	40a108 <ferror@plt+0x7558>
  403238:	tbz	w24, #0, 403258 <ferror@plt+0x6a8>
  40323c:	mov	w0, #0x2                   	// #2
  403240:	mov	w1, #0x1                   	// #1
  403244:	bl	4026b0 <signal@plt>
  403248:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40324c:	ldr	x0, [x8, #1088]
  403250:	mov	x1, xzr
  403254:	bl	4025d0 <setbuf@plt>
  403258:	mov	w25, wzr
  40325c:	cbz	x22, 403378 <ferror@plt+0x7c8>
  403260:	adrp	x8, 417000 <_obstack_memory_used@@Base+0x82c>
  403264:	add	x8, x8, #0x910
  403268:	cmp	x23, #0x0
  40326c:	adrp	x24, 417000 <_obstack_memory_used@@Base+0x82c>
  403270:	mov	w26, #0x1                   	// #1
  403274:	adrp	x27, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403278:	csel	x23, x23, x8, ne  // ne = any
  40327c:	add	x24, x24, #0x8f5
  403280:	b	4032a4 <ferror@plt+0x6f4>
  403284:	ldr	x0, [x22, #16]
  403288:	bl	40369c <ferror@plt+0xaec>
  40328c:	mov	w25, #0x1                   	// #1
  403290:	ldr	x21, [x22]
  403294:	mov	x0, x22
  403298:	bl	4029a0 <free@plt>
  40329c:	mov	x22, x21
  4032a0:	cbz	x21, 403378 <ferror@plt+0x7c8>
  4032a4:	ldr	w8, [x22, #8]
  4032a8:	cmp	w8, #0x72
  4032ac:	b.gt	4032f8 <ferror@plt+0x748>
  4032b0:	cmp	w8, #0x1
  4032b4:	b.eq	403284 <ferror@plt+0x6d4>  // b.none
  4032b8:	cmp	w8, #0x44
  4032bc:	b.ne	40332c <ferror@plt+0x77c>  // b.any
  4032c0:	ldr	x0, [x22, #16]
  4032c4:	bl	415a38 <ferror@plt+0x12e88>
  4032c8:	mov	w1, #0x3d                  	// #61
  4032cc:	mov	x21, x0
  4032d0:	bl	402a00 <strchr@plt>
  4032d4:	mov	x1, x0
  4032d8:	cbz	x0, 4032e0 <ferror@plt+0x730>
  4032dc:	strb	wzr, [x1], #1
  4032e0:	mov	w2, #0x1                   	// #1
  4032e4:	mov	x0, x21
  4032e8:	bl	403960 <ferror@plt+0xdb0>
  4032ec:	mov	x0, x21
  4032f0:	bl	4029a0 <free@plt>
  4032f4:	b	403290 <ferror@plt+0x6e0>
  4032f8:	cmp	w8, #0x73
  4032fc:	b.eq	403324 <ferror@plt+0x774>  // b.none
  403300:	cmp	w8, #0x74
  403304:	b.ne	403344 <ferror@plt+0x794>  // b.any
  403308:	ldr	x0, [x22, #16]
  40330c:	mov	w1, #0x1                   	// #1
  403310:	bl	40ec68 <ferror@plt+0xc0b8>
  403314:	ldrb	w8, [x0, #8]
  403318:	orr	w8, w8, #0x1
  40331c:	strb	w8, [x0, #8]
  403320:	b	403290 <ferror@plt+0x6e0>
  403324:	str	w26, [x27, #1200]
  403328:	b	403290 <ferror@plt+0x6e0>
  40332c:	cmp	w8, #0x55
  403330:	b.ne	403414 <ferror@plt+0x864>  // b.any
  403334:	ldr	x0, [x22, #16]
  403338:	mov	w1, #0x2                   	// #2
  40333c:	bl	40ec68 <ferror@plt+0xc0b8>
  403340:	b	403290 <ferror@plt+0x6e0>
  403344:	cmp	w8, #0x100
  403348:	b.ne	403414 <ferror@plt+0x864>  // b.any
  40334c:	ldr	x0, [x22, #16]
  403350:	bl	407d64 <ferror@plt+0x51b4>
  403354:	tbnz	w0, #0, 403290 <ferror@plt+0x6e0>
  403358:	ldr	w21, [x28, #1224]
  40335c:	bl	402b30 <__errno_location@plt>
  403360:	ldr	w1, [x0]
  403364:	mov	w0, w21
  403368:	mov	x2, x24
  40336c:	mov	x3, x23
  403370:	bl	402cbc <ferror@plt+0x10c>
  403374:	b	403290 <ferror@plt+0x6e0>
  403378:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40337c:	tbnz	w25, #0, 4033a8 <ferror@plt+0x7f8>
  403380:	ldr	w8, [x21, #1080]
  403384:	cmp	w8, w20
  403388:	b.ne	4033a8 <ferror@plt+0x7f8>  // b.any
  40338c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  403390:	add	x0, x0, #0xce6
  403394:	bl	40369c <ferror@plt+0xaec>
  403398:	b	4033d8 <ferror@plt+0x828>
  40339c:	bl	403ae4 <ferror@plt+0xf34>
  4033a0:	tbnz	w24, #0, 40323c <ferror@plt+0x68c>
  4033a4:	b	403258 <ferror@plt+0x6a8>
  4033a8:	ldr	w8, [x21, #1080]
  4033ac:	cmp	w8, w20
  4033b0:	b.ge	4033d8 <ferror@plt+0x828>  // b.tcont
  4033b4:	ldr	x0, [x19, w8, sxtw #3]
  4033b8:	bl	40369c <ferror@plt+0xaec>
  4033bc:	ldr	w8, [x21, #1080]
  4033c0:	add	w8, w8, #0x1
  4033c4:	cmp	w8, w20
  4033c8:	str	w8, [x21, #1080]
  4033cc:	b.lt	4033b4 <ferror@plt+0x804>  // b.tstop
  4033d0:	b	4033d8 <ferror@plt+0x828>
  4033d4:	bl	40c4f0 <ferror@plt+0x9940>
  4033d8:	bl	40b0a8 <ferror@plt+0x84f8>
  4033dc:	tbnz	w0, #0, 4033d4 <ferror@plt+0x824>
  4033e0:	mov	x0, xzr
  4033e4:	bl	407d64 <ferror@plt+0x51b4>
  4033e8:	ldr	x0, [sp]
  4033ec:	cbnz	x0, 4033fc <ferror@plt+0x84c>
  4033f0:	bl	40da7c <ferror@plt+0xaecc>
  4033f4:	bl	40e260 <ferror@plt+0xb6b0>
  4033f8:	b	403400 <ferror@plt+0x850>
  4033fc:	bl	409dac <ferror@plt+0x71fc>
  403400:	bl	40ce08 <ferror@plt+0xa258>
  403404:	bl	40390c <ferror@plt+0xd5c>
  403408:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40340c:	ldr	w0, [x8, #3496]
  403410:	bl	402570 <exit@plt>
  403414:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  403418:	add	x2, x2, #0x917
  40341c:	mov	w0, wzr
  403420:	mov	w1, wzr
  403424:	bl	402cbc <ferror@plt+0x10c>
  403428:	bl	4028d0 <abort@plt>
  40342c:	mov	w0, #0x1                   	// #1
  403430:	bl	403548 <ferror@plt+0x998>
  403434:	mov	w0, wzr
  403438:	bl	403548 <ferror@plt+0x998>
  40343c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403440:	ldr	x0, [x8, #1088]
  403444:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x82c>
  403448:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  40344c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  403450:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x82c>
  403454:	add	x1, x1, #0x8dd
  403458:	add	x2, x2, #0x8e0
  40345c:	add	x3, x3, #0x668
  403460:	add	x4, x4, #0x8e7
  403464:	mov	x5, xzr
  403468:	bl	41531c <ferror@plt+0x1276c>
  40346c:	mov	w0, wzr
  403470:	bl	402570 <exit@plt>
  403474:	cbnz	w0, 40347c <ferror@plt+0x8cc>
  403478:	ret
  40347c:	stp	x29, x30, [sp, #-48]!
  403480:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403484:	stp	x20, x19, [sp, #32]
  403488:	ldr	x19, [x8, #2896]
  40348c:	str	x21, [sp, #16]
  403490:	mov	x21, x0
  403494:	mov	x29, sp
  403498:	mov	x0, x19
  40349c:	bl	402540 <strlen@plt>
  4034a0:	mov	x2, x0
  4034a4:	mov	w0, #0x2                   	// #2
  4034a8:	mov	x1, x19
  4034ac:	bl	4028a0 <write@plt>
  4034b0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  4034b4:	add	x1, x1, #0x2b9
  4034b8:	mov	w0, #0x2                   	// #2
  4034bc:	mov	w2, #0x2                   	// #2
  4034c0:	bl	4028a0 <write@plt>
  4034c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4034c8:	ldr	x19, [x8, #1232]
  4034cc:	ldr	x0, [x8, #1232]
  4034d0:	bl	402540 <strlen@plt>
  4034d4:	mov	x2, x0
  4034d8:	mov	w0, #0x2                   	// #2
  4034dc:	mov	x1, x19
  4034e0:	bl	4028a0 <write@plt>
  4034e4:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4034e8:	add	x20, x20, #0x4d8
  4034ec:	ldr	x9, [x20, w21, sxtw #3]
  4034f0:	cbz	x9, 40352c <ferror@plt+0x97c>
  4034f4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  4034f8:	add	x1, x1, #0x2b9
  4034fc:	mov	w0, #0x2                   	// #2
  403500:	mov	w2, #0x2                   	// #2
  403504:	sxtw	x19, w21
  403508:	bl	4028a0 <write@plt>
  40350c:	lsl	x8, x19, #3
  403510:	ldr	x19, [x20, x8]
  403514:	ldr	x0, [x20, x8]
  403518:	bl	402540 <strlen@plt>
  40351c:	mov	x2, x0
  403520:	mov	w0, #0x2                   	// #2
  403524:	mov	x1, x19
  403528:	bl	4028a0 <write@plt>
  40352c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  403530:	add	x1, x1, #0xb09
  403534:	mov	w0, #0x2                   	// #2
  403538:	mov	w2, #0x1                   	// #1
  40353c:	bl	4028a0 <write@plt>
  403540:	mov	w0, #0x2                   	// #2
  403544:	bl	402530 <_exit@plt>
  403548:	stp	x29, x30, [sp, #-32]!
  40354c:	stp	x20, x19, [sp, #16]
  403550:	mov	w19, w0
  403554:	mov	x29, sp
  403558:	cbnz	w0, 403678 <ferror@plt+0xac8>
  40355c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403560:	ldr	x1, [x8, #2896]
  403564:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  403568:	add	x0, x0, #0xa3f
  40356c:	bl	415c0c <ferror@plt+0x1305c>
  403570:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403574:	ldr	x3, [x20, #1088]
  403578:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  40357c:	add	x0, x0, #0xa60
  403580:	mov	w1, #0x50                  	// #80
  403584:	mov	w2, #0x1                   	// #1
  403588:	bl	402a20 <fwrite@plt>
  40358c:	ldr	x3, [x20, #1088]
  403590:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  403594:	add	x0, x0, #0xab1
  403598:	mov	w1, #0xf1                  	// #241
  40359c:	mov	w2, #0x1                   	// #1
  4035a0:	bl	402a20 <fwrite@plt>
  4035a4:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  4035a8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x82c>
  4035ac:	add	x0, x0, #0xba3
  4035b0:	add	x1, x1, #0xd89
  4035b4:	bl	415c0c <ferror@plt+0x1305c>
  4035b8:	ldr	x3, [x20, #1088]
  4035bc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  4035c0:	add	x0, x0, #0xda4
  4035c4:	mov	w1, #0x10b                 	// #267
  4035c8:	mov	w2, #0x1                   	// #1
  4035cc:	bl	402a20 <fwrite@plt>
  4035d0:	mov	w0, #0xa                   	// #10
  4035d4:	bl	402b50 <putchar@plt>
  4035d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4035dc:	ldr	w1, [x8, #888]
  4035e0:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  4035e4:	add	x0, x0, #0xeb0
  4035e8:	bl	415c0c <ferror@plt+0x1305c>
  4035ec:	mov	w0, #0xa                   	// #10
  4035f0:	bl	402b50 <putchar@plt>
  4035f4:	ldr	x3, [x20, #1088]
  4035f8:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x82c>
  4035fc:	add	x0, x0, #0xfd4
  403600:	mov	w1, #0xa1                  	// #161
  403604:	mov	w2, #0x1                   	// #1
  403608:	bl	402a20 <fwrite@plt>
  40360c:	ldr	x3, [x20, #1088]
  403610:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  403614:	add	x0, x0, #0x76
  403618:	mov	w1, #0x15e                 	// #350
  40361c:	mov	w2, #0x1                   	// #1
  403620:	bl	402a20 <fwrite@plt>
  403624:	ldr	x3, [x20, #1088]
  403628:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  40362c:	add	x0, x0, #0x1d5
  403630:	mov	w1, #0x1ce                 	// #462
  403634:	mov	w2, #0x1                   	// #1
  403638:	bl	402a20 <fwrite@plt>
  40363c:	ldr	x3, [x20, #1088]
  403640:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  403644:	add	x0, x0, #0x3a4
  403648:	mov	w1, #0x7e                  	// #126
  40364c:	mov	w2, #0x1                   	// #1
  403650:	bl	402a20 <fwrite@plt>
  403654:	ldr	x3, [x20, #1088]
  403658:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  40365c:	add	x0, x0, #0x423
  403660:	mov	w1, #0x85                  	// #133
  403664:	mov	w2, #0x1                   	// #1
  403668:	bl	402a20 <fwrite@plt>
  40366c:	bl	415380 <ferror@plt+0x127d0>
  403670:	mov	w0, w19
  403674:	bl	402570 <exit@plt>
  403678:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40367c:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403680:	ldr	x0, [x8, #1064]
  403684:	ldr	x2, [x9, #2896]
  403688:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x82c>
  40368c:	add	x1, x1, #0xa18
  403690:	bl	415cfc <ferror@plt+0x1314c>
  403694:	mov	w0, w19
  403698:	bl	402570 <exit@plt>
  40369c:	stp	x29, x30, [sp, #-32]!
  4036a0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  4036a4:	add	x1, x1, #0xce6
  4036a8:	str	x19, [sp, #16]
  4036ac:	mov	x29, sp
  4036b0:	mov	x19, x0
  4036b4:	bl	402940 <strcmp@plt>
  4036b8:	cbz	w0, 4036e4 <ferror@plt+0xb34>
  4036bc:	add	x1, x29, #0x18
  4036c0:	mov	x0, x19
  4036c4:	bl	40e9cc <ferror@plt+0xbe1c>
  4036c8:	cbz	x0, 403704 <ferror@plt+0xb54>
  4036cc:	ldr	x1, [x29, #24]
  4036d0:	mov	w2, #0x1                   	// #1
  4036d4:	bl	40a9dc <ferror@plt+0x7e2c>
  4036d8:	ldr	x0, [x29, #24]
  4036dc:	bl	4029a0 <free@plt>
  4036e0:	b	4036fc <ferror@plt+0xb4c>
  4036e4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4036e8:	ldr	x0, [x8, #1096]
  4036ec:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  4036f0:	add	x1, x1, #0x4a9
  4036f4:	mov	w2, wzr
  4036f8:	bl	40a9dc <ferror@plt+0x7e2c>
  4036fc:	bl	40c4f0 <ferror@plt+0x9940>
  403700:	b	40372c <ferror@plt+0xb7c>
  403704:	bl	402b30 <__errno_location@plt>
  403708:	ldr	w1, [x0]
  40370c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  403710:	add	x2, x2, #0x4af
  403714:	mov	w0, wzr
  403718:	mov	x3, x19
  40371c:	bl	402590 <error@plt>
  403720:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403724:	mov	w9, #0x1                   	// #1
  403728:	str	w9, [x8, #3496]
  40372c:	ldr	x19, [sp, #16]
  403730:	ldp	x29, x30, [sp], #32
  403734:	ret
  403738:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  40373c:	add	x8, x8, #0x4c0
  403740:	ldr	x9, [x8, #16]
  403744:	cmp	x9, x0
  403748:	b.eq	403770 <ferror@plt+0xbc0>  // b.none
  40374c:	ldr	x9, [x8, #24]!
  403750:	cbnz	x9, 403740 <ferror@plt+0xb90>
  403754:	adrp	x8, 403000 <ferror@plt+0x450>
  403758:	add	x8, x8, #0x778
  40375c:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x182c>
  403760:	add	x9, x9, #0x8f8
  403764:	cmp	x0, x8
  403768:	csel	x0, x9, xzr, eq  // eq = none
  40376c:	ret
  403770:	mov	x0, x8
  403774:	ret
  403778:	stp	x29, x30, [sp, #-16]!
  40377c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403780:	ldr	w0, [x8, #1224]
  403784:	cmp	w1, #0x1
  403788:	mov	x29, sp
  40378c:	b.lt	40379c <ferror@plt+0xbec>  // b.tstop
  403790:	ldr	x8, [x2]
  403794:	ldr	x3, [x8, #8]
  403798:	b	4037a4 <ferror@plt+0xbf4>
  40379c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  4037a0:	add	x3, x3, #0xe37
  4037a4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4037a8:	add	x2, x2, #0xa5f
  4037ac:	mov	w1, wzr
  4037b0:	bl	402cbc <ferror@plt+0x10c>
  4037b4:	ldp	x29, x30, [sp], #16
  4037b8:	ret
  4037bc:	stp	x29, x30, [sp, #-48]!
  4037c0:	str	x21, [sp, #16]
  4037c4:	stp	x20, x19, [sp, #32]
  4037c8:	mov	x20, x0
  4037cc:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x182c>
  4037d0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  4037d4:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x182c>
  4037d8:	add	x19, x19, #0x4c0
  4037dc:	add	x0, x0, #0xa98
  4037e0:	add	x21, x21, #0x8f8
  4037e4:	mov	x29, sp
  4037e8:	mov	x1, x20
  4037ec:	bl	402940 <strcmp@plt>
  4037f0:	cbz	w0, 403800 <ferror@plt+0xc50>
  4037f4:	ldr	x0, [x19, #24]!
  4037f8:	cbnz	x0, 4037e8 <ferror@plt+0xc38>
  4037fc:	mov	x19, x21
  403800:	mov	x0, x19
  403804:	ldp	x20, x19, [sp, #32]
  403808:	ldr	x21, [sp, #16]
  40380c:	ldp	x29, x30, [sp], #48
  403810:	ret
  403814:	stp	x29, x30, [sp, #-32]!
  403818:	str	x19, [sp, #16]
  40381c:	mov	x19, x1
  403820:	mov	w1, w2
  403824:	mov	x29, sp
  403828:	bl	40ec68 <ferror@plt+0xc0b8>
  40382c:	mov	w8, #0x2                   	// #2
  403830:	str	w8, [x0, #24]
  403834:	ldrb	w8, [x19, #8]
  403838:	ldrb	w9, [x0, #8]
  40383c:	lsr	w8, w8, #1
  403840:	bfi	w9, w8, #2, #1
  403844:	strb	w9, [x0, #8]
  403848:	ldrb	w8, [x19, #8]
  40384c:	and	w9, w9, #0xfffffff7
  403850:	lsl	w8, w8, #1
  403854:	and	w8, w8, #0x8
  403858:	orr	w8, w8, w9
  40385c:	strb	w8, [x0, #8]
  403860:	ldr	x8, [x19, #16]
  403864:	ldr	x19, [sp, #16]
  403868:	str	x8, [x0, #32]
  40386c:	ldp	x29, x30, [sp], #32
  403870:	ret
  403874:	stp	x29, x30, [sp, #-32]!
  403878:	str	x19, [sp, #16]
  40387c:	mov	x29, sp
  403880:	cbz	x0, 403894 <ferror@plt+0xce4>
  403884:	ldrb	w8, [x0]
  403888:	mov	x19, x0
  40388c:	cbnz	w8, 40389c <ferror@plt+0xcec>
  403890:	b	4038f8 <ferror@plt+0xd48>
  403894:	adrp	x19, 417000 <_obstack_memory_used@@Base+0x82c>
  403898:	add	x19, x19, #0xd89
  40389c:	mov	x0, x19
  4038a0:	bl	402540 <strlen@plt>
  4038a4:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4038a8:	mov	x1, x0
  4038ac:	add	x2, x2, #0x6e8
  4038b0:	mov	x0, x19
  4038b4:	bl	4028e0 <re_compile_pattern@plt>
  4038b8:	cbz	x0, 4038d8 <ferror@plt+0xd28>
  4038bc:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4038c0:	mov	x4, x0
  4038c4:	add	x2, x2, #0x998
  4038c8:	mov	w0, #0x1                   	// #1
  4038cc:	mov	w1, wzr
  4038d0:	mov	x3, x19
  4038d4:	bl	402cbc <ferror@plt+0x10c>
  4038d8:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4038dc:	add	x1, x1, #0x728
  4038e0:	ldr	w2, [x1]
  4038e4:	ldp	x3, x4, [x1, #8]
  4038e8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4038ec:	add	x0, x0, #0x6e8
  4038f0:	bl	4027c0 <re_set_registers@plt>
  4038f4:	mov	w8, #0x1                   	// #1
  4038f8:	ldr	x19, [sp, #16]
  4038fc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403900:	strb	w8, [x9, #1760]
  403904:	ldp	x29, x30, [sp], #32
  403908:	ret
  40390c:	stp	x29, x30, [sp, #-16]!
  403910:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403914:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403918:	add	x0, x0, #0x6e8
  40391c:	add	x1, x1, #0x728
  403920:	mov	x29, sp
  403924:	bl	403930 <ferror@plt+0xd80>
  403928:	ldp	x29, x30, [sp], #16
  40392c:	ret
  403930:	stp	x29, x30, [sp, #-32]!
  403934:	str	x19, [sp, #16]
  403938:	mov	x29, sp
  40393c:	mov	x19, x1
  403940:	bl	402ae0 <regfree@plt>
  403944:	ldr	x0, [x19, #8]
  403948:	bl	4029a0 <free@plt>
  40394c:	ldr	x0, [x19, #16]
  403950:	bl	4029a0 <free@plt>
  403954:	ldr	x19, [sp, #16]
  403958:	ldp	x29, x30, [sp], #32
  40395c:	ret
  403960:	stp	x29, x30, [sp, #-96]!
  403964:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  403968:	add	x8, x8, #0xe37
  40396c:	cmp	x1, #0x0
  403970:	stp	x20, x19, [sp, #80]
  403974:	mov	x19, x0
  403978:	csel	x0, x1, x8, ne  // ne = any
  40397c:	stp	x28, x27, [sp, #16]
  403980:	stp	x26, x25, [sp, #32]
  403984:	stp	x24, x23, [sp, #48]
  403988:	stp	x22, x21, [sp, #64]
  40398c:	mov	x29, sp
  403990:	mov	w22, w2
  403994:	mov	x21, x1
  403998:	bl	415a38 <ferror@plt+0x12e88>
  40399c:	mov	x20, x0
  4039a0:	mov	x0, x19
  4039a4:	mov	w1, w22
  4039a8:	bl	40ec68 <ferror@plt+0xc0b8>
  4039ac:	ldr	w8, [x0, #24]
  4039b0:	mov	x22, x0
  4039b4:	cmp	w8, #0x1
  4039b8:	b.ne	4039c4 <ferror@plt+0xe14>  // b.any
  4039bc:	ldr	x0, [x22, #32]
  4039c0:	bl	4029a0 <free@plt>
  4039c4:	mov	w8, #0x1                   	// #1
  4039c8:	str	w8, [x22, #24]
  4039cc:	str	x20, [x22, #32]
  4039d0:	cbz	x21, 403ac8 <ferror@plt+0xf18>
  4039d4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4039d8:	ldrb	w8, [x8, #1760]
  4039dc:	cbz	w8, 403ac8 <ferror@plt+0xf18>
  4039e0:	mov	x0, x20
  4039e4:	bl	402540 <strlen@plt>
  4039e8:	mov	x21, x0
  4039ec:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4039f0:	adrp	x5, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4039f4:	add	x0, x0, #0x6e8
  4039f8:	add	x5, x5, #0x728
  4039fc:	mov	x1, x20
  403a00:	mov	w2, w21
  403a04:	mov	w3, wzr
  403a08:	mov	w4, w21
  403a0c:	bl	402820 <re_search@plt>
  403a10:	tbnz	w0, #31, 403aa4 <ferror@plt+0xef4>
  403a14:	adrp	x27, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403a18:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403a1c:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403a20:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x182c>
  403a24:	add	x27, x27, #0x730
  403a28:	add	x22, x22, #0x6e8
  403a2c:	add	x23, x23, #0x728
  403a30:	add	x24, x24, #0x9cf
  403a34:	b	403a88 <ferror@plt+0xed8>
  403a38:	sxtw	x28, w25
  403a3c:	ldrb	w26, [x20, x28]
  403a40:	strb	wzr, [x20, x28]
  403a44:	ldrsw	x8, [x8]
  403a48:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403a4c:	ldr	w0, [x9, #1224]
  403a50:	mov	w1, wzr
  403a54:	add	x4, x20, x8
  403a58:	mov	x2, x24
  403a5c:	mov	x3, x19
  403a60:	bl	402cbc <ferror@plt+0x10c>
  403a64:	strb	w26, [x20, x28]
  403a68:	sub	w4, w21, w25
  403a6c:	mov	x0, x22
  403a70:	mov	x1, x20
  403a74:	mov	w2, w21
  403a78:	mov	w3, w25
  403a7c:	mov	x5, x23
  403a80:	bl	402820 <re_search@plt>
  403a84:	tbnz	w0, #31, 403aa4 <ferror@plt+0xef4>
  403a88:	ldp	x8, x9, [x27]
  403a8c:	ldr	w10, [x8]
  403a90:	ldr	w25, [x9]
  403a94:	cmp	w10, w25
  403a98:	b.ne	403a38 <ferror@plt+0xe88>  // b.any
  403a9c:	add	w25, w0, #0x1
  403aa0:	b	403a68 <ferror@plt+0xeb8>
  403aa4:	cmn	w0, #0x2
  403aa8:	b.ne	403ac8 <ferror@plt+0xf18>  // b.any
  403aac:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403ab0:	ldr	w0, [x8, #1224]
  403ab4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  403ab8:	add	x2, x2, #0xa02
  403abc:	mov	w1, wzr
  403ac0:	mov	x3, x19
  403ac4:	bl	402cbc <ferror@plt+0x10c>
  403ac8:	ldp	x20, x19, [sp, #80]
  403acc:	ldp	x22, x21, [sp, #64]
  403ad0:	ldp	x24, x23, [sp, #48]
  403ad4:	ldp	x26, x25, [sp, #32]
  403ad8:	ldp	x28, x27, [sp, #16]
  403adc:	ldp	x29, x30, [sp], #96
  403ae0:	ret
  403ae4:	stp	x29, x30, [sp, #-64]!
  403ae8:	str	x23, [sp, #16]
  403aec:	stp	x20, x19, [sp, #48]
  403af0:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x182c>
  403af4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  403af8:	mov	w23, #0x346d                	// #13421
  403afc:	stp	x22, x21, [sp, #32]
  403b00:	add	x19, x19, #0x4c0
  403b04:	add	x0, x0, #0xa98
  403b08:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403b0c:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403b10:	movk	w23, #0x5f, lsl #16
  403b14:	mov	x29, sp
  403b18:	b	403b30 <ferror@plt+0xf80>
  403b1c:	mov	w2, #0x1                   	// #1
  403b20:	mov	x1, x19
  403b24:	bl	403814 <ferror@plt+0xc64>
  403b28:	ldr	x0, [x19, #24]!
  403b2c:	cbz	x0, 403b7c <ferror@plt+0xfcc>
  403b30:	ldr	w8, [x21, #1208]
  403b34:	cbz	w8, 403b40 <ferror@plt+0xf90>
  403b38:	ldrb	w8, [x19, #8]
  403b3c:	tbnz	w8, #0, 403b28 <ferror@plt+0xf78>
  403b40:	ldr	w8, [x22, #1212]
  403b44:	cbz	w8, 403b1c <ferror@plt+0xf6c>
  403b48:	bl	402540 <strlen@plt>
  403b4c:	add	x0, x0, #0x4
  403b50:	bl	4157d0 <ferror@plt+0x12c20>
  403b54:	ldr	x1, [x19]
  403b58:	mov	x20, x0
  403b5c:	str	w23, [x0]
  403b60:	bl	402780 <strcat@plt>
  403b64:	mov	w2, #0x1                   	// #1
  403b68:	mov	x1, x19
  403b6c:	bl	403814 <ferror@plt+0xc64>
  403b70:	mov	x0, x20
  403b74:	bl	4029a0 <free@plt>
  403b78:	b	403b28 <ferror@plt+0xf78>
  403b7c:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x182c>
  403b80:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  403b84:	add	x19, x19, #0x910
  403b88:	add	x1, x1, #0xe37
  403b8c:	b	403bac <ferror@plt+0xffc>
  403b90:	ldr	x0, [x19, #8]
  403b94:	cbz	x0, 403ba0 <ferror@plt+0xff0>
  403b98:	mov	w2, #0x1                   	// #1
  403b9c:	bl	403960 <ferror@plt+0xdb0>
  403ba0:	ldr	x1, [x19, #40]
  403ba4:	add	x19, x19, #0x18
  403ba8:	cbz	x1, 403bc0 <ferror@plt+0x1010>
  403bac:	ldr	w8, [x21, #1208]
  403bb0:	cbz	w8, 403b90 <ferror@plt+0xfe0>
  403bb4:	ldr	x0, [x19]
  403bb8:	cbnz	x0, 403b98 <ferror@plt+0xfe8>
  403bbc:	b	403ba0 <ferror@plt+0xff0>
  403bc0:	ldp	x20, x19, [sp, #48]
  403bc4:	ldp	x22, x21, [sp, #32]
  403bc8:	ldr	x23, [sp, #16]
  403bcc:	ldp	x29, x30, [sp], #64
  403bd0:	ret
  403bd4:	mov	w8, w0
  403bd8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403bdc:	cmp	w8, #0x0
  403be0:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x182c>
  403be4:	add	x0, x0, #0x83e
  403be8:	cneg	w9, w8, mi  // mi = first
  403bec:	add	x10, x10, #0xa3a
  403bf0:	strb	wzr, [x0, #1]
  403bf4:	udiv	w11, w9, w1
  403bf8:	msub	w12, w11, w1, w9
  403bfc:	ldrb	w12, [x10, w12, uxtw]
  403c00:	cmp	w9, w1
  403c04:	mov	w9, w11
  403c08:	strb	w12, [x0], #-1
  403c0c:	b.cs	403bf4 <ferror@plt+0x1044>  // b.hs, b.nlast
  403c10:	tbnz	w8, #31, 403c1c <ferror@plt+0x106c>
  403c14:	add	x0, x0, #0x1
  403c18:	ret
  403c1c:	mov	w8, #0x2d                  	// #45
  403c20:	strb	w8, [x0]
  403c24:	ret
  403c28:	stp	xzr, xzr, [x0]
  403c2c:	stp	xzr, xzr, [x0, #32]
  403c30:	cbz	x1, 403c38 <ferror@plt+0x1088>
  403c34:	stp	xzr, xzr, [x1, #8]
  403c38:	ret
  403c3c:	stp	x29, x30, [sp, #-96]!
  403c40:	stp	x28, x27, [sp, #16]
  403c44:	stp	x26, x25, [sp, #32]
  403c48:	stp	x24, x23, [sp, #48]
  403c4c:	stp	x22, x21, [sp, #64]
  403c50:	stp	x20, x19, [sp, #80]
  403c54:	ldr	x24, [x1, #32]
  403c58:	mov	x19, x3
  403c5c:	mov	w20, w2
  403c60:	mov	x21, x0
  403c64:	sub	w22, w2, #0x1
  403c68:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x1582c>
  403c6c:	mov	w27, #0xa                   	// #10
  403c70:	mov	x29, sp
  403c74:	b	403ca0 <ferror@plt+0x10f0>
  403c78:	ldr	x8, [x19, x23, lsl #3]
  403c7c:	ldr	x0, [x21, #24]
  403c80:	mov	x2, x25
  403c84:	ldr	x1, [x8, #8]
  403c88:	bl	402510 <memcpy@plt>
  403c8c:	ldr	x8, [x21, #24]
  403c90:	add	x8, x8, x25
  403c94:	str	x8, [x21, #24]
  403c98:	mov	w8, #0x1                   	// #1
  403c9c:	tbz	w8, #0, 403e6c <ferror@plt+0x12bc>
  403ca0:	mov	w1, #0x24                  	// #36
  403ca4:	mov	x0, x24
  403ca8:	bl	402a00 <strchr@plt>
  403cac:	cbz	x0, 403d14 <ferror@plt+0x1164>
  403cb0:	ldp	x9, x8, [x21, #24]
  403cb4:	sub	x26, x0, x24
  403cb8:	mov	x25, x0
  403cbc:	mov	x23, x0
  403cc0:	sub	x8, x8, x9
  403cc4:	cmp	x8, x26
  403cc8:	b.cs	403cd8 <ferror@plt+0x1128>  // b.hs, b.nlast
  403ccc:	mov	x0, x21
  403cd0:	mov	x1, x26
  403cd4:	bl	41659c <_obstack_newchunk@@Base>
  403cd8:	ldr	x0, [x21, #24]
  403cdc:	mov	x1, x24
  403ce0:	mov	x2, x26
  403ce4:	bl	402510 <memcpy@plt>
  403ce8:	ldr	x8, [x21, #24]
  403cec:	add	x9, x8, x26
  403cf0:	str	x9, [x21, #24]
  403cf4:	ldrb	w10, [x23, #1]!
  403cf8:	sub	w8, w10, #0x30
  403cfc:	cmp	w8, #0xa
  403d00:	b.cs	403d60 <ferror@plt+0x11b0>  // b.hs, b.nlast
  403d04:	ldr	w9, [x28, #1208]
  403d08:	cbz	w9, 403d9c <ferror@plt+0x11ec>
  403d0c:	add	x24, x25, #0x2
  403d10:	b	403de0 <ferror@plt+0x1230>
  403d14:	mov	x0, x24
  403d18:	bl	402540 <strlen@plt>
  403d1c:	ldp	x9, x8, [x21, #24]
  403d20:	mov	x25, x0
  403d24:	sub	x8, x8, x9
  403d28:	cmp	x8, x0
  403d2c:	b.cs	403d3c <ferror@plt+0x118c>  // b.hs, b.nlast
  403d30:	mov	x0, x21
  403d34:	mov	x1, x25
  403d38:	bl	41659c <_obstack_newchunk@@Base>
  403d3c:	ldr	x0, [x21, #24]
  403d40:	mov	x1, x24
  403d44:	mov	x2, x25
  403d48:	bl	402510 <memcpy@plt>
  403d4c:	ldr	x9, [x21, #24]
  403d50:	mov	w8, wzr
  403d54:	add	x9, x9, x25
  403d58:	str	x9, [x21, #24]
  403d5c:	b	403c9c <ferror@plt+0x10ec>
  403d60:	cmp	w10, #0x23
  403d64:	b.eq	403e1c <ferror@plt+0x126c>  // b.none
  403d68:	cmp	w10, #0x2a
  403d6c:	b.eq	403d78 <ferror@plt+0x11c8>  // b.none
  403d70:	cmp	w10, #0x40
  403d74:	b.ne	403e34 <ferror@plt+0x1284>  // b.any
  403d78:	cmp	w10, #0x40
  403d7c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  403d80:	cset	w4, eq  // eq = none
  403d84:	mov	x0, x21
  403d88:	mov	w1, w20
  403d8c:	mov	x2, x19
  403d90:	add	x3, x3, #0xa96
  403d94:	bl	403f00 <ferror@plt+0x1350>
  403d98:	b	403e28 <ferror@plt+0x1278>
  403d9c:	bl	402950 <__ctype_b_loc@plt>
  403da0:	ldr	x8, [x0]
  403da4:	ldrb	w9, [x23]
  403da8:	ldrh	w8, [x8, x9, lsl #1]
  403dac:	tbnz	w8, #11, 403dbc <ferror@plt+0x120c>
  403db0:	mov	w8, wzr
  403db4:	mov	x24, x23
  403db8:	b	403de0 <ferror@plt+0x1230>
  403dbc:	ldr	x10, [x0]
  403dc0:	mov	w8, wzr
  403dc4:	mov	x24, x23
  403dc8:	mul	w8, w8, w27
  403dcc:	add	w8, w8, w9, uxtb
  403dd0:	ldrb	w9, [x24, #1]!
  403dd4:	sub	w8, w8, #0x30
  403dd8:	ldrh	w11, [x10, x9, lsl #1]
  403ddc:	tbnz	w11, #11, 403dc8 <ferror@plt+0x1218>
  403de0:	cmp	w8, w20
  403de4:	b.ge	403c98 <ferror@plt+0x10e8>  // b.tcont
  403de8:	ldr	x9, [x19, w8, sxtw #3]
  403dec:	sxtw	x23, w8
  403df0:	ldr	x0, [x9, #8]
  403df4:	bl	402540 <strlen@plt>
  403df8:	ldp	x9, x8, [x21, #24]
  403dfc:	mov	x25, x0
  403e00:	sub	x8, x8, x9
  403e04:	cmp	x8, x0
  403e08:	b.cs	403c78 <ferror@plt+0x10c8>  // b.hs, b.nlast
  403e0c:	mov	x0, x21
  403e10:	mov	x1, x25
  403e14:	bl	41659c <_obstack_newchunk@@Base>
  403e18:	b	403c78 <ferror@plt+0x10c8>
  403e1c:	mov	x0, x21
  403e20:	mov	w1, w22
  403e24:	bl	403e88 <ferror@plt+0x12d8>
  403e28:	add	x24, x25, #0x2
  403e2c:	mov	w8, #0x1                   	// #1
  403e30:	b	403c9c <ferror@plt+0x10ec>
  403e34:	ldr	x8, [x21, #32]
  403e38:	cmp	x8, x9
  403e3c:	b.ne	403e4c <ferror@plt+0x129c>  // b.any
  403e40:	mov	w1, #0x1                   	// #1
  403e44:	mov	x0, x21
  403e48:	bl	41659c <_obstack_newchunk@@Base>
  403e4c:	ldr	x8, [x21, #24]
  403e50:	mov	x24, x23
  403e54:	add	x9, x8, #0x1
  403e58:	str	x9, [x21, #24]
  403e5c:	mov	w9, #0x24                  	// #36
  403e60:	strb	w9, [x8]
  403e64:	mov	w8, #0x1                   	// #1
  403e68:	b	403c9c <ferror@plt+0x10ec>
  403e6c:	ldp	x20, x19, [sp, #80]
  403e70:	ldp	x22, x21, [sp, #64]
  403e74:	ldp	x24, x23, [sp, #48]
  403e78:	ldp	x26, x25, [sp, #32]
  403e7c:	ldp	x28, x27, [sp, #16]
  403e80:	ldp	x29, x30, [sp], #96
  403e84:	ret
  403e88:	stp	x29, x30, [sp, #-48]!
  403e8c:	mov	w8, w1
  403e90:	stp	x20, x19, [sp, #32]
  403e94:	mov	x19, x0
  403e98:	mov	w1, #0xa                   	// #10
  403e9c:	mov	w0, w8
  403ea0:	str	x21, [sp, #16]
  403ea4:	mov	x29, sp
  403ea8:	bl	403bd4 <ferror@plt+0x1024>
  403eac:	mov	x20, x0
  403eb0:	bl	402540 <strlen@plt>
  403eb4:	ldp	x9, x8, [x19, #24]
  403eb8:	mov	x21, x0
  403ebc:	sub	x8, x8, x9
  403ec0:	cmp	x8, x0
  403ec4:	b.cs	403ed4 <ferror@plt+0x1324>  // b.hs, b.nlast
  403ec8:	mov	x0, x19
  403ecc:	mov	x1, x21
  403ed0:	bl	41659c <_obstack_newchunk@@Base>
  403ed4:	ldr	x0, [x19, #24]
  403ed8:	mov	x1, x20
  403edc:	mov	x2, x21
  403ee0:	bl	402510 <memcpy@plt>
  403ee4:	ldr	x8, [x19, #24]
  403ee8:	add	x8, x8, x21
  403eec:	str	x8, [x19, #24]
  403ef0:	ldp	x20, x19, [sp, #32]
  403ef4:	ldr	x21, [sp, #16]
  403ef8:	ldp	x29, x30, [sp], #48
  403efc:	ret
  403f00:	stp	x29, x30, [sp, #-96]!
  403f04:	stp	x22, x21, [sp, #64]
  403f08:	mov	x22, x0
  403f0c:	mov	x0, x3
  403f10:	stp	x28, x27, [sp, #16]
  403f14:	stp	x26, x25, [sp, #32]
  403f18:	stp	x24, x23, [sp, #48]
  403f1c:	stp	x20, x19, [sp, #80]
  403f20:	mov	x29, sp
  403f24:	mov	w19, w4
  403f28:	mov	x20, x3
  403f2c:	mov	x21, x2
  403f30:	mov	w24, w1
  403f34:	bl	402540 <strlen@plt>
  403f38:	cmp	w24, #0x2
  403f3c:	b.lt	40407c <ferror@plt+0x14cc>  // b.tstop
  403f40:	mov	x23, x0
  403f44:	mov	w25, w24
  403f48:	mov	w26, #0x1                   	// #1
  403f4c:	adrp	x27, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403f50:	adrp	x28, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403f54:	b	403f80 <ferror@plt+0x13d0>
  403f58:	ldr	x0, [x22, #24]
  403f5c:	ldr	x1, [x28, #3568]
  403f60:	mov	x2, x24
  403f64:	bl	402510 <memcpy@plt>
  403f68:	ldr	x8, [x22, #24]
  403f6c:	add	x8, x8, x24
  403f70:	str	x8, [x22, #24]
  403f74:	add	x26, x26, #0x1
  403f78:	cmp	x25, x26
  403f7c:	b.eq	40407c <ferror@plt+0x14cc>  // b.none
  403f80:	cmp	x26, #0x2
  403f84:	b.cc	403fc0 <ferror@plt+0x1410>  // b.lo, b.ul, b.last
  403f88:	ldp	x9, x8, [x22, #24]
  403f8c:	sub	x8, x8, x9
  403f90:	cmp	x8, x23
  403f94:	b.cs	403fa4 <ferror@plt+0x13f4>  // b.hs, b.nlast
  403f98:	mov	x0, x22
  403f9c:	mov	x1, x23
  403fa0:	bl	41659c <_obstack_newchunk@@Base>
  403fa4:	ldr	x0, [x22, #24]
  403fa8:	mov	x1, x20
  403fac:	mov	x2, x23
  403fb0:	bl	402510 <memcpy@plt>
  403fb4:	ldr	x8, [x22, #24]
  403fb8:	add	x8, x8, x23
  403fbc:	str	x8, [x22, #24]
  403fc0:	tbz	w19, #0, 404008 <ferror@plt+0x1458>
  403fc4:	ldp	x9, x8, [x22, #24]
  403fc8:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403fcc:	ldr	x24, [x10, #3520]
  403fd0:	sub	x8, x8, x9
  403fd4:	cmp	x8, x24
  403fd8:	b.cs	403fe8 <ferror@plt+0x1438>  // b.hs, b.nlast
  403fdc:	mov	x0, x22
  403fe0:	mov	x1, x24
  403fe4:	bl	41659c <_obstack_newchunk@@Base>
  403fe8:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  403fec:	ldr	x0, [x22, #24]
  403ff0:	ldr	x1, [x8, #3512]
  403ff4:	mov	x2, x24
  403ff8:	bl	402510 <memcpy@plt>
  403ffc:	ldr	x8, [x22, #24]
  404000:	add	x8, x8, x24
  404004:	str	x8, [x22, #24]
  404008:	ldr	x8, [x21, x26, lsl #3]
  40400c:	ldr	x0, [x8, #8]
  404010:	bl	402540 <strlen@plt>
  404014:	ldp	x9, x8, [x22, #24]
  404018:	mov	x24, x0
  40401c:	sub	x8, x8, x9
  404020:	cmp	x8, x0
  404024:	b.cs	404034 <ferror@plt+0x1484>  // b.hs, b.nlast
  404028:	mov	x0, x22
  40402c:	mov	x1, x24
  404030:	bl	41659c <_obstack_newchunk@@Base>
  404034:	ldr	x8, [x21, x26, lsl #3]
  404038:	ldr	x0, [x22, #24]
  40403c:	mov	x2, x24
  404040:	ldr	x1, [x8, #8]
  404044:	bl	402510 <memcpy@plt>
  404048:	ldr	x8, [x22, #24]
  40404c:	add	x8, x8, x24
  404050:	str	x8, [x22, #24]
  404054:	tbz	w19, #0, 403f74 <ferror@plt+0x13c4>
  404058:	ldr	x9, [x22, #32]
  40405c:	ldr	x24, [x27, #3576]
  404060:	sub	x8, x9, x8
  404064:	cmp	x8, x24
  404068:	b.cs	403f58 <ferror@plt+0x13a8>  // b.hs, b.nlast
  40406c:	mov	x0, x22
  404070:	mov	x1, x24
  404074:	bl	41659c <_obstack_newchunk@@Base>
  404078:	b	403f58 <ferror@plt+0x13a8>
  40407c:	ldp	x20, x19, [sp, #80]
  404080:	ldp	x22, x21, [sp, #64]
  404084:	ldp	x24, x23, [sp, #48]
  404088:	ldp	x26, x25, [sp, #32]
  40408c:	ldp	x28, x27, [sp, #16]
  404090:	ldp	x29, x30, [sp], #96
  404094:	ret
  404098:	stp	x29, x30, [sp, #-48]!
  40409c:	stp	x22, x21, [sp, #16]
  4040a0:	stp	x20, x19, [sp, #32]
  4040a4:	ldr	x8, [x2]
  4040a8:	mov	x19, x0
  4040ac:	mov	w2, #0x1                   	// #1
  4040b0:	mov	w3, #0x1                   	// #1
  4040b4:	mov	x0, x8
  4040b8:	mov	x29, sp
  4040bc:	bl	406f5c <ferror@plt+0x43ac>
  4040c0:	tbnz	w0, #0, 404190 <ferror@plt+0x15e0>
  4040c4:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4040c8:	ldp	x10, x9, [x19, #24]
  4040cc:	ldr	x20, [x8, #3520]
  4040d0:	sub	x8, x9, x10
  4040d4:	cmp	x8, x20
  4040d8:	b.cs	4040e8 <ferror@plt+0x1538>  // b.hs, b.nlast
  4040dc:	mov	x0, x19
  4040e0:	mov	x1, x20
  4040e4:	bl	41659c <_obstack_newchunk@@Base>
  4040e8:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4040ec:	ldr	x0, [x19, #24]
  4040f0:	ldr	x1, [x8, #3512]
  4040f4:	mov	x2, x20
  4040f8:	bl	402510 <memcpy@plt>
  4040fc:	ldr	x8, [x19, #24]
  404100:	adrp	x21, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404104:	add	x22, x8, x20
  404108:	str	x22, [x19, #24]
  40410c:	ldr	x0, [x21, #3528]
  404110:	bl	402540 <strlen@plt>
  404114:	ldr	x8, [x19, #32]
  404118:	mov	x20, x0
  40411c:	sub	x8, x8, x22
  404120:	cmp	x8, x0
  404124:	b.cs	404134 <ferror@plt+0x1584>  // b.hs, b.nlast
  404128:	mov	x0, x19
  40412c:	mov	x1, x20
  404130:	bl	41659c <_obstack_newchunk@@Base>
  404134:	ldr	x0, [x19, #24]
  404138:	ldr	x1, [x21, #3528]
  40413c:	mov	x2, x20
  404140:	bl	402510 <memcpy@plt>
  404144:	ldp	x8, x9, [x19, #24]
  404148:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40414c:	add	x8, x8, x20
  404150:	str	x8, [x19, #24]
  404154:	ldr	x20, [x10, #3576]
  404158:	sub	x8, x9, x8
  40415c:	cmp	x8, x20
  404160:	b.cs	404170 <ferror@plt+0x15c0>  // b.hs, b.nlast
  404164:	mov	x0, x19
  404168:	mov	x1, x20
  40416c:	bl	41659c <_obstack_newchunk@@Base>
  404170:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404174:	ldr	x0, [x19, #24]
  404178:	ldr	x1, [x8, #3568]
  40417c:	mov	x2, x20
  404180:	bl	402510 <memcpy@plt>
  404184:	ldr	x8, [x19, #24]
  404188:	add	x8, x8, x20
  40418c:	str	x8, [x19, #24]
  404190:	ldp	x20, x19, [sp, #32]
  404194:	ldp	x22, x21, [sp, #16]
  404198:	ldp	x29, x30, [sp], #48
  40419c:	ret
  4041a0:	stp	x29, x30, [sp, #-32]!
  4041a4:	ldr	x8, [x2]
  4041a8:	str	x19, [sp, #16]
  4041ac:	mov	x19, x0
  4041b0:	mov	w2, #0x1                   	// #1
  4041b4:	mov	w3, #0x1                   	// #1
  4041b8:	mov	x0, x8
  4041bc:	mov	x29, sp
  4041c0:	bl	406f5c <ferror@plt+0x43ac>
  4041c4:	tbnz	w0, #0, 4041d8 <ferror@plt+0x1628>
  4041c8:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4041cc:	ldr	w1, [x8, #3504]
  4041d0:	mov	x0, x19
  4041d4:	bl	403e88 <ferror@plt+0x12d8>
  4041d8:	ldr	x19, [sp, #16]
  4041dc:	ldp	x29, x30, [sp], #32
  4041e0:	ret
  4041e4:	stp	x29, x30, [sp, #-48]!
  4041e8:	stp	x22, x21, [sp, #16]
  4041ec:	stp	x20, x19, [sp, #32]
  4041f0:	ldr	x8, [x2]
  4041f4:	mov	x19, x0
  4041f8:	mov	w2, #0x1                   	// #1
  4041fc:	mov	w3, #0x1                   	// #1
  404200:	mov	x0, x8
  404204:	mov	x29, sp
  404208:	bl	406f5c <ferror@plt+0x43ac>
  40420c:	tbnz	w0, #0, 4042dc <ferror@plt+0x172c>
  404210:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404214:	ldp	x10, x9, [x19, #24]
  404218:	ldr	x20, [x8, #3520]
  40421c:	sub	x8, x9, x10
  404220:	cmp	x8, x20
  404224:	b.cs	404234 <ferror@plt+0x1684>  // b.hs, b.nlast
  404228:	mov	x0, x19
  40422c:	mov	x1, x20
  404230:	bl	41659c <_obstack_newchunk@@Base>
  404234:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404238:	ldr	x0, [x19, #24]
  40423c:	ldr	x1, [x8, #3512]
  404240:	mov	x2, x20
  404244:	bl	402510 <memcpy@plt>
  404248:	ldr	x8, [x19, #24]
  40424c:	adrp	x21, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404250:	add	x22, x8, x20
  404254:	str	x22, [x19, #24]
  404258:	ldr	x0, [x21, #2896]
  40425c:	bl	402540 <strlen@plt>
  404260:	ldr	x8, [x19, #32]
  404264:	mov	x20, x0
  404268:	sub	x8, x8, x22
  40426c:	cmp	x8, x0
  404270:	b.cs	404280 <ferror@plt+0x16d0>  // b.hs, b.nlast
  404274:	mov	x0, x19
  404278:	mov	x1, x20
  40427c:	bl	41659c <_obstack_newchunk@@Base>
  404280:	ldr	x0, [x19, #24]
  404284:	ldr	x1, [x21, #2896]
  404288:	mov	x2, x20
  40428c:	bl	402510 <memcpy@plt>
  404290:	ldp	x8, x9, [x19, #24]
  404294:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404298:	add	x8, x8, x20
  40429c:	str	x8, [x19, #24]
  4042a0:	ldr	x20, [x10, #3576]
  4042a4:	sub	x8, x9, x8
  4042a8:	cmp	x8, x20
  4042ac:	b.cs	4042bc <ferror@plt+0x170c>  // b.hs, b.nlast
  4042b0:	mov	x0, x19
  4042b4:	mov	x1, x20
  4042b8:	bl	41659c <_obstack_newchunk@@Base>
  4042bc:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4042c0:	ldr	x0, [x19, #24]
  4042c4:	ldr	x1, [x8, #3568]
  4042c8:	mov	x2, x20
  4042cc:	bl	402510 <memcpy@plt>
  4042d0:	ldr	x8, [x19, #24]
  4042d4:	add	x8, x8, x20
  4042d8:	str	x8, [x19, #24]
  4042dc:	ldp	x20, x19, [sp, #32]
  4042e0:	ldp	x22, x21, [sp, #16]
  4042e4:	ldp	x29, x30, [sp], #48
  4042e8:	ret
  4042ec:	stp	x29, x30, [sp, #-64]!
  4042f0:	stp	x24, x23, [sp, #16]
  4042f4:	stp	x22, x21, [sp, #32]
  4042f8:	stp	x20, x19, [sp, #48]
  4042fc:	ldr	x8, [x2]
  404300:	mov	x22, x2
  404304:	mov	x20, x0
  404308:	mov	w2, #0x2                   	// #2
  40430c:	mov	w3, #0xffffffff            	// #-1
  404310:	mov	x0, x8
  404314:	mov	x29, sp
  404318:	mov	w19, w1
  40431c:	bl	406f5c <ferror@plt+0x43ac>
  404320:	tbnz	w0, #0, 404420 <ferror@plt+0x1870>
  404324:	mov	x21, x22
  404328:	ldr	x8, [x21, #8]!
  40432c:	ldr	w9, [x8]
  404330:	cmp	w9, #0x1
  404334:	b.ne	4043b8 <ferror@plt+0x1808>  // b.any
  404338:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x182c>
  40433c:	add	x24, x24, #0xe37
  404340:	cmp	w19, #0x2
  404344:	mov	x23, x24
  404348:	b.lt	404350 <ferror@plt+0x17a0>  // b.tstop
  40434c:	ldr	x23, [x8, #8]
  404350:	mov	x0, x23
  404354:	bl	4037bc <ferror@plt+0xc0c>
  404358:	ldr	x8, [x0, #16]
  40435c:	adrp	x9, 403000 <ferror@plt+0x450>
  404360:	add	x9, x9, #0x778
  404364:	cmp	x8, x9
  404368:	b.eq	4043ec <ferror@plt+0x183c>  // b.none
  40436c:	ldrb	w8, [x0, #8]
  404370:	tbnz	w8, #1, 4043d4 <ferror@plt+0x1824>
  404374:	cmp	w19, #0x3
  404378:	b.lt	4043d4 <ferror@plt+0x1824>  // b.tstop
  40437c:	mov	w9, w19
  404380:	add	x8, x22, #0x10
  404384:	sub	x9, x9, #0x2
  404388:	mov	w10, #0x1                   	// #1
  40438c:	b	40439c <ferror@plt+0x17ec>
  404390:	subs	x9, x9, #0x1
  404394:	add	x8, x8, #0x8
  404398:	b.eq	4043d4 <ferror@plt+0x1824>  // b.none
  40439c:	ldr	x11, [x8]
  4043a0:	ldr	w12, [x11]
  4043a4:	cmp	w12, #0x1
  4043a8:	b.eq	404390 <ferror@plt+0x17e0>  // b.none
  4043ac:	str	w10, [x11]
  4043b0:	str	x24, [x11, #8]
  4043b4:	b	404390 <ferror@plt+0x17e0>
  4043b8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4043bc:	ldr	w0, [x8, #1224]
  4043c0:	cmp	w19, #0x1
  4043c4:	b.lt	404408 <ferror@plt+0x1858>  // b.tstop
  4043c8:	ldr	x8, [x22]
  4043cc:	ldr	x3, [x8, #8]
  4043d0:	b	404410 <ferror@plt+0x1860>
  4043d4:	ldr	x8, [x0, #16]
  4043d8:	sub	w1, w19, #0x1
  4043dc:	mov	x0, x20
  4043e0:	mov	x2, x21
  4043e4:	blr	x8
  4043e8:	b	404420 <ferror@plt+0x1870>
  4043ec:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4043f0:	ldr	w0, [x8, #1224]
  4043f4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4043f8:	add	x2, x2, #0xc42
  4043fc:	mov	w1, wzr
  404400:	mov	x3, x23
  404404:	b	40441c <ferror@plt+0x186c>
  404408:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  40440c:	add	x3, x3, #0xe37
  404410:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  404414:	add	x2, x2, #0xc1a
  404418:	mov	w1, wzr
  40441c:	bl	402cbc <ferror@plt+0x10c>
  404420:	ldp	x20, x19, [sp, #48]
  404424:	ldp	x22, x21, [sp, #32]
  404428:	ldp	x24, x23, [sp, #16]
  40442c:	ldp	x29, x30, [sp], #64
  404430:	ret
  404434:	stp	x29, x30, [sp, #-32]!
  404438:	stp	x20, x19, [sp, #16]
  40443c:	ldr	x0, [x2]
  404440:	mov	x19, x2
  404444:	mov	w2, #0x1                   	// #1
  404448:	mov	w3, #0x3                   	// #3
  40444c:	mov	x29, sp
  404450:	mov	w20, w1
  404454:	bl	406f5c <ferror@plt+0x43ac>
  404458:	tbnz	w0, #0, 404494 <ferror@plt+0x18e4>
  40445c:	cmp	w20, #0x2
  404460:	b.lt	40447c <ferror@plt+0x18cc>  // b.tstop
  404464:	ldr	x8, [x19, #8]
  404468:	ldr	x0, [x8, #8]
  40446c:	cmp	w20, #0x2
  404470:	b.gt	404488 <ferror@plt+0x18d8>
  404474:	mov	x1, xzr
  404478:	b	404490 <ferror@plt+0x18e0>
  40447c:	mov	x0, xzr
  404480:	cmp	w20, #0x2
  404484:	b.le	404474 <ferror@plt+0x18c4>
  404488:	ldr	x8, [x19, #16]
  40448c:	ldr	x1, [x8, #8]
  404490:	bl	40b620 <ferror@plt+0x8a70>
  404494:	ldp	x20, x19, [sp, #16]
  404498:	ldp	x29, x30, [sp], #32
  40449c:	ret
  4044a0:	stp	x29, x30, [sp, #-32]!
  4044a4:	stp	x20, x19, [sp, #16]
  4044a8:	ldr	x0, [x2]
  4044ac:	mov	x19, x2
  4044b0:	mov	w2, #0x1                   	// #1
  4044b4:	mov	w3, #0x3                   	// #3
  4044b8:	mov	x29, sp
  4044bc:	mov	w20, w1
  4044c0:	bl	406f5c <ferror@plt+0x43ac>
  4044c4:	tbnz	w0, #0, 404500 <ferror@plt+0x1950>
  4044c8:	cmp	w20, #0x2
  4044cc:	b.lt	4044e8 <ferror@plt+0x1938>  // b.tstop
  4044d0:	ldr	x8, [x19, #8]
  4044d4:	ldr	x0, [x8, #8]
  4044d8:	cmp	w20, #0x2
  4044dc:	b.gt	4044f4 <ferror@plt+0x1944>
  4044e0:	mov	x1, xzr
  4044e4:	b	4044fc <ferror@plt+0x194c>
  4044e8:	mov	x0, xzr
  4044ec:	cmp	w20, #0x2
  4044f0:	b.le	4044e0 <ferror@plt+0x1930>
  4044f4:	ldr	x8, [x19, #16]
  4044f8:	ldr	x1, [x8, #8]
  4044fc:	bl	40b578 <ferror@plt+0x89c8>
  404500:	ldp	x20, x19, [sp, #16]
  404504:	ldp	x29, x30, [sp], #32
  404508:	ret
  40450c:	stp	x29, x30, [sp, #-48]!
  404510:	stp	x20, x19, [sp, #32]
  404514:	ldr	x0, [x2]
  404518:	mov	x19, x2
  40451c:	mov	w2, #0x1                   	// #1
  404520:	mov	w3, #0x2                   	// #2
  404524:	str	x21, [sp, #16]
  404528:	mov	x29, sp
  40452c:	mov	w20, w1
  404530:	bl	406f5c <ferror@plt+0x43ac>
  404534:	tbnz	w0, #0, 404684 <ferror@plt+0x1ad4>
  404538:	cmp	w20, #0x1
  40453c:	b.ne	40454c <ferror@plt+0x199c>  // b.any
  404540:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404544:	str	wzr, [x8, #1204]
  404548:	b	404684 <ferror@plt+0x1ad4>
  40454c:	cmp	w20, #0x2
  404550:	b.lt	404560 <ferror@plt+0x19b0>  // b.tstop
  404554:	ldr	x8, [x19, #8]
  404558:	ldr	x8, [x8, #8]
  40455c:	b	404568 <ferror@plt+0x19b8>
  404560:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  404564:	add	x8, x8, #0xe37
  404568:	ldrb	w8, [x8]
  40456c:	cmp	w8, #0x2b
  404570:	b.eq	40459c <ferror@plt+0x19ec>  // b.none
  404574:	cmp	w20, #0x2
  404578:	b.lt	404588 <ferror@plt+0x19d8>  // b.tstop
  40457c:	ldr	x8, [x19, #8]
  404580:	ldr	x8, [x8, #8]
  404584:	b	404590 <ferror@plt+0x19e0>
  404588:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  40458c:	add	x8, x8, #0xe37
  404590:	ldrb	w8, [x8]
  404594:	cmp	w8, #0x2d
  404598:	b.ne	404604 <ferror@plt+0x1a54>  // b.any
  40459c:	cmp	w20, #0x2
  4045a0:	b.lt	4045b0 <ferror@plt+0x1a00>  // b.tstop
  4045a4:	ldr	x8, [x19, #8]
  4045a8:	ldr	x8, [x8, #8]
  4045ac:	b	4045b8 <ferror@plt+0x1a08>
  4045b0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  4045b4:	add	x8, x8, #0xe37
  4045b8:	ldrb	w21, [x8]
  4045bc:	cmp	w20, #0x2
  4045c0:	b.lt	4045d0 <ferror@plt+0x1a20>  // b.tstop
  4045c4:	ldr	x8, [x19, #8]
  4045c8:	ldr	x8, [x8, #8]
  4045cc:	b	4045d8 <ferror@plt+0x1a28>
  4045d0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  4045d4:	add	x8, x8, #0xe37
  4045d8:	add	x0, x8, #0x1
  4045dc:	bl	407ba0 <ferror@plt+0x4ff0>
  4045e0:	tbnz	w0, #31, 404650 <ferror@plt+0x1aa0>
  4045e4:	cmp	w21, #0x2d
  4045e8:	b.eq	404628 <ferror@plt+0x1a78>  // b.none
  4045ec:	cmp	w21, #0x2b
  4045f0:	b.eq	404618 <ferror@plt+0x1a68>  // b.none
  4045f4:	cbnz	w21, 404694 <ferror@plt+0x1ae4>
  4045f8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4045fc:	str	w0, [x8, #1204]
  404600:	b	404684 <ferror@plt+0x1ad4>
  404604:	cmp	w20, #0x2
  404608:	b.lt	40463c <ferror@plt+0x1a8c>  // b.tstop
  40460c:	ldr	x8, [x19, #8]
  404610:	ldr	x0, [x8, #8]
  404614:	b	404644 <ferror@plt+0x1a94>
  404618:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40461c:	ldr	w9, [x8, #1204]
  404620:	orr	w9, w9, w0
  404624:	b	404634 <ferror@plt+0x1a84>
  404628:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40462c:	ldr	w9, [x8, #1204]
  404630:	bic	w9, w9, w0
  404634:	str	w9, [x8, #1204]
  404638:	b	404684 <ferror@plt+0x1ad4>
  40463c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  404640:	add	x0, x0, #0xe37
  404644:	bl	407ba0 <ferror@plt+0x4ff0>
  404648:	mov	w21, wzr
  40464c:	tbz	w0, #31, 4045e4 <ferror@plt+0x1a34>
  404650:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404654:	ldr	w0, [x8, #1224]
  404658:	cmp	w20, #0x2
  40465c:	b.lt	40466c <ferror@plt+0x1abc>  // b.tstop
  404660:	ldr	x8, [x19, #8]
  404664:	ldr	x3, [x8, #8]
  404668:	b	404674 <ferror@plt+0x1ac4>
  40466c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  404670:	add	x3, x3, #0xe37
  404674:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  404678:	add	x2, x2, #0xc59
  40467c:	mov	w1, wzr
  404680:	bl	402cbc <ferror@plt+0x10c>
  404684:	ldp	x20, x19, [sp, #32]
  404688:	ldr	x21, [sp, #16]
  40468c:	ldp	x29, x30, [sp], #48
  404690:	ret
  404694:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404698:	ldr	w0, [x8, #1224]
  40469c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4046a0:	add	x2, x2, #0xc7a
  4046a4:	mov	w1, wzr
  4046a8:	bl	402cbc <ferror@plt+0x10c>
  4046ac:	bl	4028d0 <abort@plt>
  4046b0:	stp	x29, x30, [sp, #-48]!
  4046b4:	stp	x20, x19, [sp, #32]
  4046b8:	ldr	x0, [x2]
  4046bc:	mov	x19, x2
  4046c0:	mov	w2, #0x1                   	// #1
  4046c4:	mov	w3, #0x2                   	// #2
  4046c8:	str	x21, [sp, #16]
  4046cc:	mov	x29, sp
  4046d0:	mov	w20, w1
  4046d4:	bl	406f5c <ferror@plt+0x43ac>
  4046d8:	tbnz	w0, #0, 404758 <ferror@plt+0x1ba8>
  4046dc:	cmp	w20, #0x1
  4046e0:	b.ne	4046f0 <ferror@plt+0x1b40>  // b.any
  4046e4:	mov	x0, xzr
  4046e8:	bl	407d64 <ferror@plt+0x51b4>
  4046ec:	b	404758 <ferror@plt+0x1ba8>
  4046f0:	cmp	w20, #0x2
  4046f4:	b.lt	40470c <ferror@plt+0x1b5c>  // b.tstop
  4046f8:	ldr	x8, [x19, #8]
  4046fc:	ldr	x0, [x8, #8]
  404700:	bl	407d64 <ferror@plt+0x51b4>
  404704:	tbz	w0, #0, 40471c <ferror@plt+0x1b6c>
  404708:	b	404758 <ferror@plt+0x1ba8>
  40470c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  404710:	add	x0, x0, #0xe37
  404714:	bl	407d64 <ferror@plt+0x51b4>
  404718:	tbnz	w0, #0, 404758 <ferror@plt+0x1ba8>
  40471c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404720:	ldr	w21, [x8, #1224]
  404724:	bl	402b30 <__errno_location@plt>
  404728:	ldr	w1, [x0]
  40472c:	cmp	w20, #0x2
  404730:	b.lt	404740 <ferror@plt+0x1b90>  // b.tstop
  404734:	ldr	x8, [x19, #8]
  404738:	ldr	x3, [x8, #8]
  40473c:	b	404748 <ferror@plt+0x1b98>
  404740:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  404744:	add	x3, x3, #0xe37
  404748:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  40474c:	add	x2, x2, #0x8f5
  404750:	mov	w0, w21
  404754:	bl	402cbc <ferror@plt+0x10c>
  404758:	ldp	x20, x19, [sp, #32]
  40475c:	ldr	x21, [sp, #16]
  404760:	ldp	x29, x30, [sp], #48
  404764:	ret
  404768:	stp	x29, x30, [sp, #-48]!
  40476c:	stp	x20, x19, [sp, #32]
  404770:	ldr	x8, [x2]
  404774:	mov	x20, x2
  404778:	mov	x19, x0
  40477c:	mov	w2, #0x2                   	// #2
  404780:	mov	w3, #0x2                   	// #2
  404784:	mov	x0, x8
  404788:	str	x21, [sp, #16]
  40478c:	mov	x29, sp
  404790:	mov	w21, w1
  404794:	bl	406f5c <ferror@plt+0x43ac>
  404798:	tbnz	w0, #0, 4047d8 <ferror@plt+0x1c28>
  40479c:	ldr	x0, [x20]
  4047a0:	cmp	w21, #0x2
  4047a4:	b.lt	4047b4 <ferror@plt+0x1c04>  // b.tstop
  4047a8:	ldr	x8, [x20, #8]
  4047ac:	ldr	x1, [x8, #8]
  4047b0:	b	4047bc <ferror@plt+0x1c0c>
  4047b4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  4047b8:	add	x1, x1, #0xe37
  4047bc:	add	x2, x29, #0x1c
  4047c0:	bl	406ff8 <ferror@plt+0x4448>
  4047c4:	tbz	w0, #0, 4047d8 <ferror@plt+0x1c28>
  4047c8:	ldr	w8, [x29, #28]
  4047cc:	mov	x0, x19
  4047d0:	sub	w1, w8, #0x1
  4047d4:	bl	403e88 <ferror@plt+0x12d8>
  4047d8:	ldp	x20, x19, [sp, #32]
  4047dc:	ldr	x21, [sp, #16]
  4047e0:	ldp	x29, x30, [sp], #48
  4047e4:	ret
  4047e8:	stp	x29, x30, [sp, #-16]!
  4047ec:	mov	x8, x2
  4047f0:	mov	w0, w1
  4047f4:	mov	w2, #0x1                   	// #1
  4047f8:	mov	x1, x8
  4047fc:	mov	x29, sp
  404800:	bl	4070d8 <ferror@plt+0x4528>
  404804:	ldp	x29, x30, [sp], #16
  404808:	ret
  40480c:	stp	x29, x30, [sp, #-96]!
  404810:	stp	x28, x27, [sp, #16]
  404814:	stp	x26, x25, [sp, #32]
  404818:	stp	x24, x23, [sp, #48]
  40481c:	stp	x22, x21, [sp, #64]
  404820:	stp	x20, x19, [sp, #80]
  404824:	ldr	x8, [x2]
  404828:	mov	x19, x2
  40482c:	mov	x21, x0
  404830:	mov	w2, #0x2                   	// #2
  404834:	mov	w3, #0xffffffff            	// #-1
  404838:	mov	x0, x8
  40483c:	mov	x29, sp
  404840:	mov	w20, w1
  404844:	bl	406f5c <ferror@plt+0x43ac>
  404848:	tbnz	w0, #0, 404858 <ferror@plt+0x1ca8>
  40484c:	cmp	w20, #0x1
  404850:	b.lt	404a14 <ferror@plt+0x1e64>  // b.tstop
  404854:	b.ne	404874 <ferror@plt+0x1cc4>  // b.any
  404858:	ldp	x20, x19, [sp, #80]
  40485c:	ldp	x22, x21, [sp, #64]
  404860:	ldp	x24, x23, [sp, #48]
  404864:	ldp	x26, x25, [sp, #32]
  404868:	ldp	x28, x27, [sp, #16]
  40486c:	ldp	x29, x30, [sp], #96
  404870:	ret
  404874:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x182c>
  404878:	mov	w26, #0x1                   	// #1
  40487c:	add	x27, x27, #0xe37
  404880:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404884:	adrp	x22, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404888:	b	4048b4 <ferror@plt+0x1d04>
  40488c:	ldr	x0, [x21, #24]
  404890:	ldr	x1, [x22, #3568]
  404894:	mov	x2, x24
  404898:	bl	402510 <memcpy@plt>
  40489c:	ldr	x8, [x21, #24]
  4048a0:	add	x8, x8, x24
  4048a4:	str	x8, [x21, #24]
  4048a8:	add	w26, w26, #0x1
  4048ac:	cmp	w20, w26
  4048b0:	b.eq	404858 <ferror@plt+0x1ca8>  // b.none
  4048b4:	cmp	w26, w20
  4048b8:	mov	x25, x27
  4048bc:	b.ge	4048c8 <ferror@plt+0x1d18>  // b.tcont
  4048c0:	ldr	x8, [x19, w26, sxtw #3]
  4048c4:	ldr	x25, [x8, #8]
  4048c8:	mov	x0, x25
  4048cc:	mov	w1, wzr
  4048d0:	bl	40ec68 <ferror@plt+0xc0b8>
  4048d4:	cbz	x0, 4048a8 <ferror@plt+0x1cf8>
  4048d8:	ldr	w8, [x0, #24]
  4048dc:	mov	x24, x0
  4048e0:	cbz	w8, 4048a8 <ferror@plt+0x1cf8>
  4048e4:	cmp	w8, #0x2
  4048e8:	b.eq	40499c <ferror@plt+0x1dec>  // b.none
  4048ec:	cmp	w8, #0x1
  4048f0:	b.ne	4049f8 <ferror@plt+0x1e48>  // b.any
  4048f4:	ldp	x9, x8, [x21, #24]
  4048f8:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4048fc:	ldr	x25, [x10, #3520]
  404900:	sub	x8, x8, x9
  404904:	cmp	x8, x25
  404908:	b.cs	404918 <ferror@plt+0x1d68>  // b.hs, b.nlast
  40490c:	mov	x0, x21
  404910:	mov	x1, x25
  404914:	bl	41659c <_obstack_newchunk@@Base>
  404918:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40491c:	ldr	x0, [x21, #24]
  404920:	ldr	x1, [x8, #3512]
  404924:	mov	x2, x25
  404928:	bl	402510 <memcpy@plt>
  40492c:	ldr	x8, [x21, #24]
  404930:	add	x28, x8, x25
  404934:	str	x28, [x21, #24]
  404938:	ldr	x0, [x24, #32]
  40493c:	bl	402540 <strlen@plt>
  404940:	ldr	x8, [x21, #32]
  404944:	mov	x25, x0
  404948:	sub	x8, x8, x28
  40494c:	cmp	x8, x0
  404950:	b.cs	404960 <ferror@plt+0x1db0>  // b.hs, b.nlast
  404954:	mov	x0, x21
  404958:	mov	x1, x25
  40495c:	bl	41659c <_obstack_newchunk@@Base>
  404960:	ldr	x0, [x21, #24]
  404964:	ldr	x1, [x24, #32]
  404968:	mov	x2, x25
  40496c:	bl	402510 <memcpy@plt>
  404970:	ldp	x8, x9, [x21, #24]
  404974:	add	x8, x8, x25
  404978:	str	x8, [x21, #24]
  40497c:	ldr	x24, [x23, #3576]
  404980:	sub	x8, x9, x8
  404984:	cmp	x8, x24
  404988:	b.cs	40488c <ferror@plt+0x1cdc>  // b.hs, b.nlast
  40498c:	mov	x0, x21
  404990:	mov	x1, x24
  404994:	bl	41659c <_obstack_newchunk@@Base>
  404998:	b	40488c <ferror@plt+0x1cdc>
  40499c:	ldr	x0, [x24, #32]
  4049a0:	adrp	x8, 403000 <ferror@plt+0x450>
  4049a4:	add	x8, x8, #0x778
  4049a8:	cmp	x0, x8
  4049ac:	b.eq	4049c0 <ferror@plt+0x1e10>  // b.none
  4049b0:	cmp	w20, #0x2
  4049b4:	b.ne	4049d8 <ferror@plt+0x1e28>  // b.any
  4049b8:	bl	40ac14 <ferror@plt+0x8064>
  4049bc:	b	4048a8 <ferror@plt+0x1cf8>
  4049c0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4049c4:	ldr	w0, [x8, #1224]
  4049c8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4049cc:	mov	w1, wzr
  4049d0:	add	x2, x2, #0xa5f
  4049d4:	b	4049ec <ferror@plt+0x1e3c>
  4049d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4049dc:	ldr	w0, [x8, #1224]
  4049e0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4049e4:	mov	w1, wzr
  4049e8:	add	x2, x2, #0xdc7
  4049ec:	mov	x3, x25
  4049f0:	bl	402cbc <ferror@plt+0x10c>
  4049f4:	b	4048a8 <ferror@plt+0x1cf8>
  4049f8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4049fc:	ldr	w0, [x8, #1224]
  404a00:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  404a04:	add	x2, x2, #0xdf0
  404a08:	mov	w1, wzr
  404a0c:	bl	402cbc <ferror@plt+0x10c>
  404a10:	bl	4028d0 <abort@plt>
  404a14:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  404a18:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  404a1c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  404a20:	add	x0, x0, #0xd81
  404a24:	add	x1, x1, #0xd8a
  404a28:	add	x3, x3, #0xd94
  404a2c:	mov	w2, #0x382                 	// #898
  404a30:	bl	402b20 <__assert_fail@plt>
  404a34:	sub	sp, sp, #0x30
  404a38:	stp	x29, x30, [sp, #16]
  404a3c:	add	x29, sp, #0x10
  404a40:	stp	x20, x19, [sp, #32]
  404a44:	stur	wzr, [x29, #-4]
  404a48:	ldr	x0, [x2]
  404a4c:	mov	x19, x2
  404a50:	mov	w2, #0x1                   	// #1
  404a54:	mov	w3, #0x2                   	// #2
  404a58:	mov	w20, w1
  404a5c:	bl	406f5c <ferror@plt+0x43ac>
  404a60:	tbnz	w0, #0, 404a88 <ferror@plt+0x1ed8>
  404a64:	cmp	w20, #0x2
  404a68:	b.lt	404a80 <ferror@plt+0x1ed0>  // b.tstop
  404a6c:	ldp	x0, x8, [x19]
  404a70:	sub	x2, x29, #0x4
  404a74:	ldr	x1, [x8, #8]
  404a78:	bl	406ff8 <ferror@plt+0x4448>
  404a7c:	tbz	w0, #0, 404a88 <ferror@plt+0x1ed8>
  404a80:	ldur	w0, [x29, #-4]
  404a84:	bl	40da7c <ferror@plt+0xaecc>
  404a88:	ldp	x20, x19, [sp, #32]
  404a8c:	ldp	x29, x30, [sp, #16]
  404a90:	add	sp, sp, #0x30
  404a94:	ret
  404a98:	stp	x29, x30, [sp, #-32]!
  404a9c:	ldr	x8, [x2]
  404aa0:	str	x19, [sp, #16]
  404aa4:	mov	x19, x0
  404aa8:	mov	w2, #0x1                   	// #1
  404aac:	mov	w3, #0x1                   	// #1
  404ab0:	mov	x0, x8
  404ab4:	mov	x29, sp
  404ab8:	bl	406f5c <ferror@plt+0x43ac>
  404abc:	tbnz	w0, #0, 404ad0 <ferror@plt+0x1f20>
  404ac0:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404ac4:	ldr	w1, [x8, #3588]
  404ac8:	mov	x0, x19
  404acc:	bl	403e88 <ferror@plt+0x12d8>
  404ad0:	ldr	x19, [sp, #16]
  404ad4:	ldp	x29, x30, [sp], #32
  404ad8:	ret
  404adc:	stp	x29, x30, [sp, #-16]!
  404ae0:	ldr	x0, [x2]
  404ae4:	mov	w2, #0x1                   	// #1
  404ae8:	mov	w3, #0x1                   	// #1
  404aec:	mov	x29, sp
  404af0:	bl	406f5c <ferror@plt+0x43ac>
  404af4:	tbnz	w0, #0, 404afc <ferror@plt+0x1f4c>
  404af8:	bl	40b184 <ferror@plt+0x85d4>
  404afc:	ldp	x29, x30, [sp], #16
  404b00:	ret
  404b04:	sub	sp, sp, #0x70
  404b08:	stp	x29, x30, [sp, #32]
  404b0c:	stp	x26, x25, [sp, #48]
  404b10:	stp	x24, x23, [sp, #64]
  404b14:	stp	x22, x21, [sp, #80]
  404b18:	stp	x20, x19, [sp, #96]
  404b1c:	ldr	x8, [x0, #16]
  404b20:	mov	x19, x0
  404b24:	cmp	w1, #0x1
  404b28:	add	x29, sp, #0x20
  404b2c:	stp	x0, x8, [sp, #8]
  404b30:	str	wzr, [sp, #24]
  404b34:	b.ne	404b4c <ferror@plt+0x1f9c>  // b.any
  404b38:	adrp	x0, 407000 <ferror@plt+0x4450>
  404b3c:	add	x0, x0, #0x21c
  404b40:	add	x1, sp, #0x8
  404b44:	bl	40ef78 <ferror@plt+0xc3c8>
  404b48:	b	404bbc <ferror@plt+0x200c>
  404b4c:	cmp	w1, #0x2
  404b50:	b.lt	404bbc <ferror@plt+0x200c>  // b.tstop
  404b54:	mov	w8, w1
  404b58:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x182c>
  404b5c:	add	x21, x2, #0x8
  404b60:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404b64:	sub	x23, x8, #0x1
  404b68:	add	x20, x20, #0xe1e
  404b6c:	b	404b94 <ferror@plt+0x1fe4>
  404b70:	ldr	x8, [x21]
  404b74:	ldr	w0, [x22, #1224]
  404b78:	mov	w1, wzr
  404b7c:	mov	x2, x20
  404b80:	ldr	x3, [x8, #8]
  404b84:	bl	402cbc <ferror@plt+0x10c>
  404b88:	subs	x23, x23, #0x1
  404b8c:	add	x21, x21, #0x8
  404b90:	b.eq	404bbc <ferror@plt+0x200c>  // b.none
  404b94:	ldr	x8, [x21]
  404b98:	mov	w1, wzr
  404b9c:	ldr	x0, [x8, #8]
  404ba0:	bl	40ec68 <ferror@plt+0xc0b8>
  404ba4:	cbz	x0, 404b70 <ferror@plt+0x1fc0>
  404ba8:	ldr	w8, [x0, #24]
  404bac:	cbz	w8, 404b70 <ferror@plt+0x1fc0>
  404bb0:	add	x1, sp, #0x8
  404bb4:	bl	40721c <ferror@plt+0x466c>
  404bb8:	b	404b88 <ferror@plt+0x1fd8>
  404bbc:	ldp	x8, x9, [x19, #16]
  404bc0:	cmp	x9, x8
  404bc4:	b.ne	404bd4 <ferror@plt+0x2024>  // b.any
  404bc8:	ldrb	w8, [x19, #80]
  404bcc:	orr	w8, w8, #0x2
  404bd0:	strb	w8, [x19, #80]
  404bd4:	ldr	x9, [x19, #48]
  404bd8:	ldp	x10, x8, [x19, #24]
  404bdc:	ldr	x11, [x19, #8]
  404be0:	add	x10, x9, x10
  404be4:	bic	x9, x10, x9
  404be8:	sub	x10, x9, x11
  404bec:	sub	x11, x8, x11
  404bf0:	cmp	x10, x11
  404bf4:	str	x9, [x19, #24]
  404bf8:	b.ls	404c00 <ferror@plt+0x2050>  // b.plast
  404bfc:	str	x8, [x19, #24]
  404c00:	ldr	x8, [x19, #24]
  404c04:	adrp	x3, 407000 <ferror@plt+0x4450>
  404c08:	add	x3, x3, #0x29c
  404c0c:	mov	w2, #0x8                   	// #8
  404c10:	str	x8, [x19, #16]
  404c14:	ldr	x0, [sp, #16]
  404c18:	ldrsw	x1, [sp, #24]
  404c1c:	bl	402640 <qsort@plt>
  404c20:	ldr	w8, [sp, #24]
  404c24:	cmp	w8, #0x1
  404c28:	b.lt	404d14 <ferror@plt+0x2164>  // b.tstop
  404c2c:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x382c>
  404c30:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x382c>
  404c34:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x182c>
  404c38:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x182c>
  404c3c:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404c40:	add	x19, x19, #0xca9
  404c44:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404c48:	add	x20, x20, #0xa31
  404c4c:	adrp	x25, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404c50:	adrp	x26, 437000 <__progname@@GLIBC_2.17+0xaba8>
  404c54:	add	x21, x21, #0xe38
  404c58:	add	x22, x22, #0xe33
  404c5c:	b	404c8c <ferror@plt+0x20dc>
  404c60:	ldr	x2, [x0]
  404c64:	mov	x0, x8
  404c68:	mov	x1, x19
  404c6c:	bl	415cfc <ferror@plt+0x1314c>
  404c70:	ldr	w8, [sp, #24]
  404c74:	ldr	x9, [sp, #16]
  404c78:	subs	w8, w8, #0x1
  404c7c:	add	x9, x9, #0x8
  404c80:	str	w8, [sp, #24]
  404c84:	str	x9, [sp, #16]
  404c88:	b.le	404d14 <ferror@plt+0x2164>
  404c8c:	ldr	x0, [x23, #2120]
  404c90:	cbz	x0, 404ca8 <ferror@plt+0x20f8>
  404c94:	ldr	x8, [sp, #16]
  404c98:	mov	x1, x22
  404c9c:	ldr	x8, [x8]
  404ca0:	ldr	x2, [x8, #16]
  404ca4:	bl	415cfc <ferror@plt+0x1314c>
  404ca8:	ldr	x8, [sp, #16]
  404cac:	ldr	x8, [x8]
  404cb0:	ldr	w9, [x8, #24]
  404cb4:	cmp	w9, #0x2
  404cb8:	b.eq	404ce0 <ferror@plt+0x2130>  // b.none
  404cbc:	cmp	w9, #0x1
  404cc0:	b.ne	404d30 <ferror@plt+0x2180>  // b.any
  404cc4:	ldrb	w9, [x24, #1204]
  404cc8:	ldr	x0, [x23, #2120]
  404ccc:	tbnz	w9, #2, 404cf8 <ferror@plt+0x2148>
  404cd0:	cbz	x0, 404c70 <ferror@plt+0x20c0>
  404cd4:	ldr	x2, [x8, #32]
  404cd8:	mov	x1, x20
  404cdc:	b	404c6c <ferror@plt+0x20bc>
  404ce0:	ldr	x0, [x8, #32]
  404ce4:	bl	403738 <ferror@plt+0xb88>
  404ce8:	cbz	x0, 404d44 <ferror@plt+0x2194>
  404cec:	ldr	x8, [x23, #2120]
  404cf0:	cbnz	x8, 404c60 <ferror@plt+0x20b0>
  404cf4:	b	404c70 <ferror@plt+0x20c0>
  404cf8:	cbz	x0, 404c70 <ferror@plt+0x20c0>
  404cfc:	ldr	x2, [x25, #3512]
  404d00:	ldr	x3, [x8, #32]
  404d04:	ldr	x4, [x26, #3568]
  404d08:	mov	x1, x21
  404d0c:	bl	415cfc <ferror@plt+0x1314c>
  404d10:	b	404c70 <ferror@plt+0x20c0>
  404d14:	ldp	x20, x19, [sp, #96]
  404d18:	ldp	x22, x21, [sp, #80]
  404d1c:	ldp	x24, x23, [sp, #64]
  404d20:	ldp	x26, x25, [sp, #48]
  404d24:	ldp	x29, x30, [sp, #32]
  404d28:	add	sp, sp, #0x70
  404d2c:	ret
  404d30:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404d34:	ldr	w0, [x8, #1224]
  404d38:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  404d3c:	add	x2, x2, #0xe73
  404d40:	b	404d54 <ferror@plt+0x21a4>
  404d44:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404d48:	ldr	w0, [x8, #1224]
  404d4c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  404d50:	add	x2, x2, #0xe40
  404d54:	mov	w1, wzr
  404d58:	bl	402cbc <ferror@plt+0x10c>
  404d5c:	bl	4028d0 <abort@plt>
  404d60:	stp	x29, x30, [sp, #-48]!
  404d64:	stp	x20, x19, [sp, #32]
  404d68:	ldr	x8, [x2]
  404d6c:	mov	x20, x2
  404d70:	mov	x19, x0
  404d74:	mov	w2, #0x2                   	// #2
  404d78:	mov	w3, #0xffffffff            	// #-1
  404d7c:	mov	x0, x8
  404d80:	str	x21, [sp, #16]
  404d84:	mov	x29, sp
  404d88:	mov	w21, w1
  404d8c:	bl	406f5c <ferror@plt+0x43ac>
  404d90:	tbnz	w0, #0, 404e44 <ferror@plt+0x2294>
  404d94:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  404d98:	add	x3, x3, #0x1f0
  404d9c:	mov	x0, x19
  404da0:	mov	w1, w21
  404da4:	mov	x2, x20
  404da8:	mov	w4, wzr
  404dac:	bl	403f00 <ferror@plt+0x1350>
  404db0:	ldp	x9, x8, [x19, #24]
  404db4:	cmp	x8, x9
  404db8:	b.ne	404dc8 <ferror@plt+0x2218>  // b.any
  404dbc:	mov	w1, #0x1                   	// #1
  404dc0:	mov	x0, x19
  404dc4:	bl	41659c <_obstack_newchunk@@Base>
  404dc8:	ldr	x8, [x19, #24]
  404dcc:	add	x9, x8, #0x1
  404dd0:	str	x9, [x19, #24]
  404dd4:	strb	wzr, [x8]
  404dd8:	bl	407cd8 <ferror@plt+0x5128>
  404ddc:	ldp	x2, x8, [x19, #16]
  404de0:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404de4:	ldr	x0, [x20, #1064]
  404de8:	cmp	x8, x2
  404dec:	b.ne	404dfc <ferror@plt+0x224c>  // b.any
  404df0:	ldrb	w8, [x19, #80]
  404df4:	orr	w8, w8, #0x2
  404df8:	strb	w8, [x19, #80]
  404dfc:	ldr	x9, [x19, #48]
  404e00:	ldp	x10, x8, [x19, #24]
  404e04:	ldr	x11, [x19, #8]
  404e08:	add	x10, x9, x10
  404e0c:	bic	x9, x10, x9
  404e10:	sub	x10, x9, x11
  404e14:	sub	x11, x8, x11
  404e18:	cmp	x10, x11
  404e1c:	str	x9, [x19, #24]
  404e20:	b.ls	404e28 <ferror@plt+0x2278>  // b.plast
  404e24:	str	x8, [x19, #24]
  404e28:	ldr	x8, [x19, #24]
  404e2c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  404e30:	add	x1, x1, #0x96
  404e34:	str	x8, [x19, #16]
  404e38:	bl	415cfc <ferror@plt+0x1314c>
  404e3c:	ldr	x0, [x20, #1064]
  404e40:	bl	416310 <ferror@plt+0x13760>
  404e44:	ldp	x20, x19, [sp, #32]
  404e48:	ldr	x21, [sp, #16]
  404e4c:	ldp	x29, x30, [sp], #48
  404e50:	ret
  404e54:	sub	sp, sp, #0x80
  404e58:	stp	x24, x23, [sp, #80]
  404e5c:	stp	x22, x21, [sp, #96]
  404e60:	stp	x20, x19, [sp, #112]
  404e64:	mov	x20, x2
  404e68:	mov	w21, w1
  404e6c:	cmp	w1, #0x2
  404e70:	mov	x23, x0
  404e74:	stp	x29, x30, [sp, #48]
  404e78:	stp	x26, x25, [sp, #64]
  404e7c:	add	x29, sp, #0x30
  404e80:	b.lt	404e90 <ferror@plt+0x22e0>  // b.tstop
  404e84:	ldr	x8, [x20, #8]
  404e88:	ldr	x19, [x8, #8]
  404e8c:	b	404e98 <ferror@plt+0x22e8>
  404e90:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x182c>
  404e94:	add	x19, x19, #0xe37
  404e98:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  404e9c:	add	x8, x8, #0x958
  404ea0:	ldp	q0, q1, [x8]
  404ea4:	mov	w2, #0x2                   	// #2
  404ea8:	mov	w3, #0x2                   	// #2
  404eac:	mov	w1, w21
  404eb0:	stp	q0, q1, [sp, #16]
  404eb4:	ldr	x0, [x20]
  404eb8:	bl	406f5c <ferror@plt+0x43ac>
  404ebc:	tbnz	w0, #0, 404ef0 <ferror@plt+0x2340>
  404ec0:	ldrb	w8, [x19]
  404ec4:	cbz	w8, 404ef0 <ferror@plt+0x2340>
  404ec8:	bl	407cd8 <ferror@plt+0x5128>
  404ecc:	str	x19, [sp, #32]
  404ed0:	bl	402b30 <__errno_location@plt>
  404ed4:	mov	x22, x0
  404ed8:	cmp	w21, #0x1
  404edc:	str	wzr, [x0]
  404ee0:	b.lt	404f14 <ferror@plt+0x2364>  // b.tstop
  404ee4:	ldr	x8, [x20]
  404ee8:	ldr	x0, [x8, #8]
  404eec:	b	404f1c <ferror@plt+0x236c>
  404ef0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  404ef4:	str	wzr, [x8, #2112]
  404ef8:	ldp	x20, x19, [sp, #112]
  404efc:	ldp	x22, x21, [sp, #96]
  404f00:	ldp	x24, x23, [sp, #80]
  404f04:	ldp	x26, x25, [sp, #64]
  404f08:	ldp	x29, x30, [sp, #48]
  404f0c:	add	sp, sp, #0x80
  404f10:	ret
  404f14:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  404f18:	add	x0, x0, #0xe37
  404f1c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  404f20:	add	x1, x1, #0xeab
  404f24:	add	x2, sp, #0x10
  404f28:	add	x7, sp, #0xc
  404f2c:	mov	w5, #0x1                   	// #1
  404f30:	mov	x3, xzr
  404f34:	mov	w4, wzr
  404f38:	mov	w6, wzr
  404f3c:	bl	414bc4 <ferror@plt+0x12014>
  404f40:	cmn	w0, #0x1
  404f44:	b.eq	405018 <ferror@plt+0x2468>  // b.none
  404f48:	mov	w24, w0
  404f4c:	ldr	w0, [sp, #12]
  404f50:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  404f54:	add	x1, x1, #0x284
  404f58:	bl	4027b0 <fdopen@plt>
  404f5c:	cbz	x0, 405044 <ferror@plt+0x2494>
  404f60:	mov	x25, x0
  404f64:	b	404f78 <ferror@plt+0x23c8>
  404f68:	ldr	x8, [x23, #24]
  404f6c:	add	x9, x8, #0x1
  404f70:	str	x9, [x23, #24]
  404f74:	strb	w26, [x8]
  404f78:	ldp	x0, x8, [x23, #24]
  404f7c:	subs	x2, x8, x0
  404f80:	b.eq	404fa4 <ferror@plt+0x23f4>  // b.none
  404f84:	mov	w1, #0x1                   	// #1
  404f88:	mov	x3, x25
  404f8c:	bl	402990 <fread@plt>
  404f90:	cbz	x0, 404fd4 <ferror@plt+0x2424>
  404f94:	ldr	x8, [x23, #24]
  404f98:	add	x8, x8, x0
  404f9c:	str	x8, [x23, #24]
  404fa0:	b	404f78 <ferror@plt+0x23c8>
  404fa4:	mov	x0, x25
  404fa8:	bl	402830 <getc@plt>
  404fac:	cmn	w0, #0x1
  404fb0:	b.eq	404fd4 <ferror@plt+0x2424>  // b.none
  404fb4:	ldp	x9, x8, [x23, #24]
  404fb8:	mov	w26, w0
  404fbc:	cmp	x8, x9
  404fc0:	b.ne	404f68 <ferror@plt+0x23b8>  // b.any
  404fc4:	mov	w1, #0x1                   	// #1
  404fc8:	mov	x0, x23
  404fcc:	bl	41659c <_obstack_newchunk@@Base>
  404fd0:	b	404f68 <ferror@plt+0x23b8>
  404fd4:	mov	x0, x25
  404fd8:	bl	402bb0 <ferror@plt>
  404fdc:	cbnz	w0, 404fec <ferror@plt+0x243c>
  404fe0:	mov	x0, x25
  404fe4:	bl	4160c0 <ferror@plt+0x13510>
  404fe8:	cbz	w0, 405000 <ferror@plt+0x2450>
  404fec:	ldr	w1, [x22]
  404ff0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  404ff4:	add	x2, x2, #0xecb
  404ff8:	mov	w0, #0x1                   	// #1
  404ffc:	bl	402cbc <ferror@plt+0x10c>
  405000:	cmp	w21, #0x1
  405004:	str	wzr, [x22]
  405008:	b.lt	405078 <ferror@plt+0x24c8>  // b.tstop
  40500c:	ldr	x8, [x20]
  405010:	ldr	x1, [x8, #8]
  405014:	b	405080 <ferror@plt+0x24d0>
  405018:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40501c:	ldr	w0, [x8, #1224]
  405020:	ldr	w1, [x22]
  405024:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  405028:	add	x2, x2, #0xeb3
  40502c:	mov	x3, x19
  405030:	bl	402cbc <ferror@plt+0x10c>
  405034:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405038:	mov	w9, #0x7f                  	// #127
  40503c:	str	w9, [x8, #2112]
  405040:	b	404ef8 <ferror@plt+0x2348>
  405044:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405048:	ldr	w0, [x8, #1224]
  40504c:	ldr	w1, [x22]
  405050:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  405054:	add	x2, x2, #0xeb3
  405058:	mov	x3, x19
  40505c:	bl	402cbc <ferror@plt+0x10c>
  405060:	ldr	w0, [sp, #12]
  405064:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405068:	mov	w9, #0x7f                  	// #127
  40506c:	str	w9, [x8, #2112]
  405070:	bl	402860 <close@plt>
  405074:	b	404ef8 <ferror@plt+0x2348>
  405078:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  40507c:	add	x1, x1, #0xe37
  405080:	add	x6, sp, #0x8
  405084:	mov	w3, #0x1                   	// #1
  405088:	mov	w4, #0x1                   	// #1
  40508c:	mov	w0, w24
  405090:	mov	w2, wzr
  405094:	mov	w5, wzr
  405098:	bl	41557c <ferror@plt+0x129cc>
  40509c:	ldr	w8, [sp, #8]
  4050a0:	mov	w20, w0
  4050a4:	cbz	w8, 4050b8 <ferror@plt+0x2508>
  4050a8:	cmp	w20, #0x7f
  4050ac:	b.ne	4050ec <ferror@plt+0x253c>  // b.any
  4050b0:	lsl	w20, w8, #8
  4050b4:	b	4050e0 <ferror@plt+0x2530>
  4050b8:	cmp	w20, #0x7f
  4050bc:	b.ne	4050e0 <ferror@plt+0x2530>  // b.any
  4050c0:	ldr	w1, [x22]
  4050c4:	cbz	w1, 4050e0 <ferror@plt+0x2530>
  4050c8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4050cc:	ldr	w0, [x8, #1224]
  4050d0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4050d4:	add	x2, x2, #0xeb3
  4050d8:	mov	x3, x19
  4050dc:	bl	402cbc <ferror@plt+0x10c>
  4050e0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4050e4:	str	w20, [x8, #2112]
  4050e8:	b	404ef8 <ferror@plt+0x2348>
  4050ec:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  4050f0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  4050f4:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  4050f8:	add	x0, x0, #0xedc
  4050fc:	add	x1, x1, #0xd8a
  405100:	add	x3, x3, #0xeea
  405104:	mov	w2, #0x424                 	// #1060
  405108:	bl	402b20 <__assert_fail@plt>
  40510c:	sub	sp, sp, #0x50
  405110:	stp	x29, x30, [sp, #16]
  405114:	add	x29, sp, #0x10
  405118:	mov	w8, #0xa                   	// #10
  40511c:	mov	w9, #0x1                   	// #1
  405120:	stp	x22, x21, [sp, #48]
  405124:	stp	x20, x19, [sp, #64]
  405128:	stp	w8, wzr, [x29, #24]
  40512c:	stur	w9, [x29, #-4]
  405130:	ldr	x8, [x2]
  405134:	mov	x20, x2
  405138:	mov	x19, x0
  40513c:	mov	w2, #0x2                   	// #2
  405140:	mov	w3, #0x4                   	// #4
  405144:	mov	x0, x8
  405148:	str	x23, [sp, #32]
  40514c:	mov	w22, w1
  405150:	bl	406f5c <ferror@plt+0x43ac>
  405154:	tbnz	w0, #0, 40550c <ferror@plt+0x295c>
  405158:	cmp	w22, #0x3
  40515c:	b.lt	405174 <ferror@plt+0x25c4>  // b.tstop
  405160:	ldr	x8, [x20, #16]
  405164:	ldr	x8, [x8, #8]
  405168:	ldrb	w8, [x8]
  40516c:	cbnz	w8, 405184 <ferror@plt+0x25d4>
  405170:	b	4051b0 <ferror@plt+0x2600>
  405174:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  405178:	add	x8, x8, #0xe37
  40517c:	ldrb	w8, [x8]
  405180:	cbz	w8, 4051b0 <ferror@plt+0x2600>
  405184:	ldr	x0, [x20]
  405188:	cmp	w22, #0x3
  40518c:	b.lt	40519c <ferror@plt+0x25ec>  // b.tstop
  405190:	ldr	x8, [x20, #16]
  405194:	ldr	x1, [x8, #8]
  405198:	b	4051a4 <ferror@plt+0x25f4>
  40519c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  4051a0:	add	x1, x1, #0xe37
  4051a4:	add	x2, x29, #0x18
  4051a8:	bl	406ff8 <ferror@plt+0x4448>
  4051ac:	tbz	w0, #0, 40550c <ferror@plt+0x295c>
  4051b0:	ldr	w21, [x29, #24]
  4051b4:	sub	w8, w21, #0x1
  4051b8:	cmp	w8, #0x24
  4051bc:	b.cc	4051dc <ferror@plt+0x262c>  // b.lo, b.ul, b.last
  4051c0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4051c4:	ldr	w0, [x8, #1224]
  4051c8:	cmp	w22, #0x1
  4051cc:	b.lt	405230 <ferror@plt+0x2680>  // b.tstop
  4051d0:	ldr	x8, [x20]
  4051d4:	ldr	x4, [x8, #8]
  4051d8:	b	405238 <ferror@plt+0x2688>
  4051dc:	cmp	w22, #0x4
  4051e0:	b.lt	4051fc <ferror@plt+0x264c>  // b.tstop
  4051e4:	ldr	x8, [x20, #24]
  4051e8:	ldr	x0, [x20]
  4051ec:	sub	x2, x29, #0x4
  4051f0:	ldr	x1, [x8, #8]
  4051f4:	bl	406ff8 <ferror@plt+0x4448>
  4051f8:	tbz	w0, #0, 40550c <ferror@plt+0x295c>
  4051fc:	ldur	w23, [x29, #-4]
  405200:	tbnz	w23, #31, 405250 <ferror@plt+0x26a0>
  405204:	cmp	w22, #0x2
  405208:	b.lt	40526c <ferror@plt+0x26bc>  // b.tstop
  40520c:	ldr	x8, [x20, #8]
  405210:	ldr	x8, [x8, #8]
  405214:	ldrb	w8, [x8]
  405218:	cbz	w8, 40527c <ferror@plt+0x26cc>
  40521c:	cmp	w22, #0x2
  405220:	b.lt	405298 <ferror@plt+0x26e8>  // b.tstop
  405224:	ldr	x8, [x20, #8]
  405228:	ldr	x0, [x8, #8]
  40522c:	b	4052a0 <ferror@plt+0x26f0>
  405230:	adrp	x4, 418000 <_obstack_memory_used@@Base+0x182c>
  405234:	add	x4, x4, #0xe37
  405238:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  40523c:	add	x2, x2, #0xf20
  405240:	mov	w1, wzr
  405244:	mov	w3, w21
  405248:	bl	402cbc <ferror@plt+0x10c>
  40524c:	b	40550c <ferror@plt+0x295c>
  405250:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405254:	ldr	w0, [x8, #1224]
  405258:	cmp	w22, #0x1
  40525c:	b.lt	4052b0 <ferror@plt+0x2700>  // b.tstop
  405260:	ldr	x8, [x20]
  405264:	ldr	x3, [x8, #8]
  405268:	b	4052b8 <ferror@plt+0x2708>
  40526c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  405270:	add	x8, x8, #0xe37
  405274:	ldrb	w8, [x8]
  405278:	cbnz	w8, 40521c <ferror@plt+0x266c>
  40527c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405280:	ldr	w0, [x8, #1224]
  405284:	cmp	w22, #0x1
  405288:	b.lt	4052cc <ferror@plt+0x271c>  // b.tstop
  40528c:	ldr	x8, [x20]
  405290:	ldr	x3, [x8, #8]
  405294:	b	4052d4 <ferror@plt+0x2724>
  405298:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  40529c:	add	x0, x0, #0xe37
  4052a0:	add	x1, x29, #0x1c
  4052a4:	bl	4084c8 <ferror@plt+0x5918>
  4052a8:	tbz	w0, #0, 4052e4 <ferror@plt+0x2734>
  4052ac:	b	40550c <ferror@plt+0x295c>
  4052b0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  4052b4:	add	x3, x3, #0xe37
  4052b8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4052bc:	add	x2, x2, #0xf46
  4052c0:	mov	w1, wzr
  4052c4:	bl	402cbc <ferror@plt+0x10c>
  4052c8:	b	40550c <ferror@plt+0x295c>
  4052cc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  4052d0:	add	x3, x3, #0xe37
  4052d4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4052d8:	add	x2, x2, #0xca6
  4052dc:	mov	w1, wzr
  4052e0:	bl	402cbc <ferror@plt+0x10c>
  4052e4:	ldr	w0, [x29, #28]
  4052e8:	cmp	w21, #0x1
  4052ec:	b.ne	405390 <ferror@plt+0x27e0>  // b.any
  4052f0:	tbz	w0, #31, 40532c <ferror@plt+0x277c>
  4052f4:	ldp	x9, x8, [x19, #24]
  4052f8:	cmp	x8, x9
  4052fc:	b.ne	40530c <ferror@plt+0x275c>  // b.any
  405300:	mov	w1, #0x1                   	// #1
  405304:	mov	x0, x19
  405308:	bl	41659c <_obstack_newchunk@@Base>
  40530c:	ldr	x8, [x19, #24]
  405310:	mov	w9, #0x2d                  	// #45
  405314:	add	x10, x8, #0x1
  405318:	str	x10, [x19, #24]
  40531c:	strb	w9, [x8]
  405320:	ldr	w8, [x29, #28]
  405324:	neg	w8, w8
  405328:	str	w8, [x29, #28]
  40532c:	ldur	w8, [x29, #-4]
  405330:	ldr	w9, [x29, #28]
  405334:	sub	w10, w8, #0x1
  405338:	cmp	w8, w9
  40533c:	stur	w10, [x29, #-4]
  405340:	b.le	405488 <ferror@plt+0x28d8>
  405344:	ldur	w20, [x29, #-4]
  405348:	mov	w21, #0x30                  	// #48
  40534c:	b	405374 <ferror@plt+0x27c4>
  405350:	ldr	x8, [x19, #24]
  405354:	add	x9, x8, #0x1
  405358:	str	x9, [x19, #24]
  40535c:	strb	w21, [x8]
  405360:	ldr	w9, [x29, #28]
  405364:	sub	w8, w20, #0x1
  405368:	cmp	w20, w9
  40536c:	mov	w20, w8
  405370:	b.le	405484 <ferror@plt+0x28d4>
  405374:	ldp	x9, x8, [x19, #24]
  405378:	cmp	x8, x9
  40537c:	b.ne	405350 <ferror@plt+0x27a0>  // b.any
  405380:	mov	w1, #0x1                   	// #1
  405384:	mov	x0, x19
  405388:	bl	41659c <_obstack_newchunk@@Base>
  40538c:	b	405350 <ferror@plt+0x27a0>
  405390:	mov	w1, w21
  405394:	bl	403bd4 <ferror@plt+0x1024>
  405398:	ldrb	w8, [x0]
  40539c:	mov	x20, x0
  4053a0:	cmp	w8, #0x2d
  4053a4:	b.ne	4053d8 <ferror@plt+0x2828>  // b.any
  4053a8:	ldp	x9, x8, [x19, #24]
  4053ac:	cmp	x8, x9
  4053b0:	b.ne	4053c0 <ferror@plt+0x2810>  // b.any
  4053b4:	mov	w1, #0x1                   	// #1
  4053b8:	mov	x0, x19
  4053bc:	bl	41659c <_obstack_newchunk@@Base>
  4053c0:	ldr	x8, [x19, #24]
  4053c4:	mov	w9, #0x2d                  	// #45
  4053c8:	add	x20, x20, #0x1
  4053cc:	add	x10, x8, #0x1
  4053d0:	str	x10, [x19, #24]
  4053d4:	strb	w9, [x8]
  4053d8:	mov	x0, x20
  4053dc:	bl	402540 <strlen@plt>
  4053e0:	sub	w8, w23, w0
  4053e4:	subs	w8, w8, #0x1
  4053e8:	stur	w8, [x29, #-4]
  4053ec:	b.lt	40543c <ferror@plt+0x288c>  // b.tstop
  4053f0:	ldur	w21, [x29, #-4]
  4053f4:	mov	w22, #0x30                  	// #48
  4053f8:	b	40541c <ferror@plt+0x286c>
  4053fc:	ldr	x9, [x19, #24]
  405400:	sub	w8, w21, #0x1
  405404:	cmp	w21, #0x0
  405408:	mov	w21, w8
  40540c:	add	x10, x9, #0x1
  405410:	str	x10, [x19, #24]
  405414:	strb	w22, [x9]
  405418:	b.le	405438 <ferror@plt+0x2888>
  40541c:	ldp	x9, x8, [x19, #24]
  405420:	cmp	x8, x9
  405424:	b.ne	4053fc <ferror@plt+0x284c>  // b.any
  405428:	mov	w1, #0x1                   	// #1
  40542c:	mov	x0, x19
  405430:	bl	41659c <_obstack_newchunk@@Base>
  405434:	b	4053fc <ferror@plt+0x284c>
  405438:	stur	w8, [x29, #-4]
  40543c:	mov	x0, x20
  405440:	bl	402540 <strlen@plt>
  405444:	ldp	x9, x8, [x19, #24]
  405448:	mov	x21, x0
  40544c:	sub	x8, x8, x9
  405450:	cmp	x8, x0
  405454:	b.cs	405464 <ferror@plt+0x28b4>  // b.hs, b.nlast
  405458:	mov	x0, x19
  40545c:	mov	x1, x21
  405460:	bl	41659c <_obstack_newchunk@@Base>
  405464:	ldr	x0, [x19, #24]
  405468:	mov	x1, x20
  40546c:	mov	x2, x21
  405470:	bl	402510 <memcpy@plt>
  405474:	ldr	x8, [x19, #24]
  405478:	add	x8, x8, x21
  40547c:	str	x8, [x19, #24]
  405480:	b	40550c <ferror@plt+0x295c>
  405484:	stur	w8, [x29, #-4]
  405488:	ldr	w9, [x29, #28]
  40548c:	sub	w8, w9, #0x1
  405490:	str	w8, [x29, #28]
  405494:	ldp	x10, x8, [x19, #24]
  405498:	cmp	x8, x10
  40549c:	cset	w8, eq  // eq = none
  4054a0:	cbz	w9, 4054ec <ferror@plt+0x293c>
  4054a4:	mov	w20, #0x31                  	// #49
  4054a8:	b	4054d8 <ferror@plt+0x2928>
  4054ac:	ldr	x8, [x19, #24]
  4054b0:	add	x9, x8, #0x1
  4054b4:	str	x9, [x19, #24]
  4054b8:	strb	w20, [x8]
  4054bc:	ldr	w9, [x29, #28]
  4054c0:	sub	w8, w9, #0x1
  4054c4:	str	w8, [x29, #28]
  4054c8:	ldp	x10, x8, [x19, #24]
  4054cc:	cmp	x8, x10
  4054d0:	cset	w8, eq  // eq = none
  4054d4:	cbz	w9, 4054ec <ferror@plt+0x293c>
  4054d8:	tbz	w8, #0, 4054ac <ferror@plt+0x28fc>
  4054dc:	mov	w1, #0x1                   	// #1
  4054e0:	mov	x0, x19
  4054e4:	bl	41659c <_obstack_newchunk@@Base>
  4054e8:	b	4054ac <ferror@plt+0x28fc>
  4054ec:	cbz	w8, 4054fc <ferror@plt+0x294c>
  4054f0:	mov	w1, #0x1                   	// #1
  4054f4:	mov	x0, x19
  4054f8:	bl	41659c <_obstack_newchunk@@Base>
  4054fc:	ldr	x8, [x19, #24]
  405500:	add	x9, x8, #0x1
  405504:	str	x9, [x19, #24]
  405508:	strb	wzr, [x8]
  40550c:	ldp	x20, x19, [sp, #64]
  405510:	ldp	x22, x21, [sp, #48]
  405514:	ldr	x23, [sp, #32]
  405518:	ldp	x29, x30, [sp, #16]
  40551c:	add	sp, sp, #0x50
  405520:	ret
  405524:	stp	x29, x30, [sp, #-48]!
  405528:	stp	x20, x19, [sp, #32]
  40552c:	ldr	x8, [x2]
  405530:	mov	x19, x2
  405534:	mov	x20, x0
  405538:	mov	w2, #0x2                   	// #2
  40553c:	mov	w3, #0xffffffff            	// #-1
  405540:	mov	x0, x8
  405544:	str	x21, [sp, #16]
  405548:	mov	x29, sp
  40554c:	mov	w21, w1
  405550:	bl	406f5c <ferror@plt+0x43ac>
  405554:	tbnz	w0, #0, 405568 <ferror@plt+0x29b8>
  405558:	sub	w1, w21, #0x1
  40555c:	add	x2, x19, #0x8
  405560:	mov	x0, x20
  405564:	bl	409390 <ferror@plt+0x67e0>
  405568:	ldp	x20, x19, [sp, #32]
  40556c:	ldr	x21, [sp, #16]
  405570:	ldp	x29, x30, [sp], #48
  405574:	ret
  405578:	stp	x29, x30, [sp, #-48]!
  40557c:	stp	x20, x19, [sp, #32]
  405580:	ldr	x8, [x2]
  405584:	mov	x20, x2
  405588:	mov	x19, x0
  40558c:	mov	w2, #0x3                   	// #3
  405590:	mov	w3, #0x4                   	// #4
  405594:	mov	x0, x8
  405598:	str	x21, [sp, #16]
  40559c:	mov	x29, sp
  4055a0:	mov	w21, w1
  4055a4:	bl	406f5c <ferror@plt+0x43ac>
  4055a8:	tbnz	w0, #0, 405660 <ferror@plt+0x2ab0>
  4055ac:	cmp	w21, #0x2
  4055b0:	b.lt	4055c0 <ferror@plt+0x2a10>  // b.tstop
  4055b4:	ldr	x8, [x20, #8]
  4055b8:	ldr	x0, [x8, #8]
  4055bc:	b	4055c8 <ferror@plt+0x2a18>
  4055c0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  4055c4:	add	x0, x0, #0xe37
  4055c8:	mov	w1, wzr
  4055cc:	bl	40ec68 <ferror@plt+0xc0b8>
  4055d0:	cbz	x0, 4055ec <ferror@plt+0x2a3c>
  4055d4:	ldr	w8, [x0, #24]
  4055d8:	cbz	w8, 4055ec <ferror@plt+0x2a3c>
  4055dc:	cmp	w21, #0x3
  4055e0:	b.lt	405610 <ferror@plt+0x2a60>  // b.tstop
  4055e4:	ldr	x8, [x20, #16]
  4055e8:	b	4055f8 <ferror@plt+0x2a48>
  4055ec:	cmp	w21, #0x4
  4055f0:	b.lt	405604 <ferror@plt+0x2a54>  // b.tstop
  4055f4:	ldr	x8, [x20, #24]
  4055f8:	ldr	x20, [x8, #8]
  4055fc:	cbnz	x20, 40561c <ferror@plt+0x2a6c>
  405600:	b	405660 <ferror@plt+0x2ab0>
  405604:	mov	x20, xzr
  405608:	cbnz	x20, 40561c <ferror@plt+0x2a6c>
  40560c:	b	405660 <ferror@plt+0x2ab0>
  405610:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x182c>
  405614:	add	x20, x20, #0xe37
  405618:	cbz	x20, 405660 <ferror@plt+0x2ab0>
  40561c:	mov	x0, x20
  405620:	bl	402540 <strlen@plt>
  405624:	ldp	x9, x8, [x19, #24]
  405628:	mov	x21, x0
  40562c:	sub	x8, x8, x9
  405630:	cmp	x8, x0
  405634:	b.cs	405644 <ferror@plt+0x2a94>  // b.hs, b.nlast
  405638:	mov	x0, x19
  40563c:	mov	x1, x21
  405640:	bl	41659c <_obstack_newchunk@@Base>
  405644:	ldr	x0, [x19, #24]
  405648:	mov	x1, x20
  40564c:	mov	x2, x21
  405650:	bl	402510 <memcpy@plt>
  405654:	ldr	x8, [x19, #24]
  405658:	add	x8, x8, x21
  40565c:	str	x8, [x19, #24]
  405660:	ldp	x20, x19, [sp, #32]
  405664:	ldr	x21, [sp, #16]
  405668:	ldp	x29, x30, [sp], #48
  40566c:	ret
  405670:	stp	x29, x30, [sp, #-64]!
  405674:	cmp	w1, #0x2
  405678:	str	x23, [sp, #16]
  40567c:	stp	x22, x21, [sp, #32]
  405680:	stp	x20, x19, [sp, #48]
  405684:	mov	x29, sp
  405688:	b.eq	4057bc <ferror@plt+0x2c0c>  // b.none
  40568c:	ldr	x22, [x2]
  405690:	mov	x21, x2
  405694:	mov	x19, x0
  405698:	mov	w2, #0x4                   	// #4
  40569c:	mov	w3, #0xffffffff            	// #-1
  4056a0:	mov	x0, x22
  4056a4:	mov	w20, w1
  4056a8:	bl	406f5c <ferror@plt+0x43ac>
  4056ac:	tbnz	w0, #0, 4057bc <ferror@plt+0x2c0c>
  4056b0:	mov	w9, #0x5556                	// #21846
  4056b4:	add	w8, w20, #0x2
  4056b8:	movk	w9, #0x5555, lsl #16
  4056bc:	smull	x9, w8, w9
  4056c0:	lsr	x10, x9, #63
  4056c4:	lsr	x9, x9, #32
  4056c8:	add	w9, w9, w10
  4056cc:	add	w9, w9, w9, lsl #1
  4056d0:	sub	w1, w8, w9
  4056d4:	mov	w2, #0xffffffff            	// #-1
  4056d8:	mov	w3, #0x1                   	// #1
  4056dc:	mov	x0, x22
  4056e0:	bl	406f5c <ferror@plt+0x43ac>
  4056e4:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x182c>
  4056e8:	add	x21, x21, #0x8
  4056ec:	sub	w22, w20, #0x1
  4056f0:	add	x23, x23, #0xe37
  4056f4:	b	405700 <ferror@plt+0x2b50>
  4056f8:	mov	x20, x23
  4056fc:	cbnz	x20, 405778 <ferror@plt+0x2bc8>
  405700:	cmp	w22, #0x1
  405704:	b.lt	405714 <ferror@plt+0x2b64>  // b.tstop
  405708:	ldr	x8, [x21]
  40570c:	ldr	x0, [x8, #8]
  405710:	b	405718 <ferror@plt+0x2b68>
  405714:	mov	x0, x23
  405718:	cmp	w22, #0x1
  40571c:	mov	x1, x23
  405720:	b.le	40572c <ferror@plt+0x2b7c>
  405724:	ldr	x8, [x21, #8]
  405728:	ldr	x1, [x8, #8]
  40572c:	bl	402940 <strcmp@plt>
  405730:	cbz	w0, 405750 <ferror@plt+0x2ba0>
  405734:	sub	w8, w22, #0x4
  405738:	cmp	w8, #0x2
  40573c:	b.cs	405764 <ferror@plt+0x2bb4>  // b.hs, b.nlast
  405740:	cmp	w22, #0x4
  405744:	b.lt	4056f8 <ferror@plt+0x2b48>  // b.tstop
  405748:	ldr	x8, [x21, #24]
  40574c:	b	40575c <ferror@plt+0x2bac>
  405750:	cmp	w22, #0x3
  405754:	b.lt	4056f8 <ferror@plt+0x2b48>  // b.tstop
  405758:	ldr	x8, [x21, #16]
  40575c:	ldr	x20, [x8, #8]
  405760:	b	4056fc <ferror@plt+0x2b4c>
  405764:	subs	w22, w22, #0x3
  405768:	b.eq	4057bc <ferror@plt+0x2c0c>  // b.none
  40576c:	mov	x20, xzr
  405770:	add	x21, x21, #0x18
  405774:	b	4056fc <ferror@plt+0x2b4c>
  405778:	mov	x0, x20
  40577c:	bl	402540 <strlen@plt>
  405780:	ldp	x9, x8, [x19, #24]
  405784:	mov	x21, x0
  405788:	sub	x8, x8, x9
  40578c:	cmp	x8, x0
  405790:	b.cs	4057a0 <ferror@plt+0x2bf0>  // b.hs, b.nlast
  405794:	mov	x0, x19
  405798:	mov	x1, x21
  40579c:	bl	41659c <_obstack_newchunk@@Base>
  4057a0:	ldr	x0, [x19, #24]
  4057a4:	mov	x1, x20
  4057a8:	mov	x2, x21
  4057ac:	bl	402510 <memcpy@plt>
  4057b0:	ldr	x8, [x19, #24]
  4057b4:	add	x8, x8, x21
  4057b8:	str	x8, [x19, #24]
  4057bc:	ldp	x20, x19, [sp, #48]
  4057c0:	ldp	x22, x21, [sp, #32]
  4057c4:	ldr	x23, [sp, #16]
  4057c8:	ldp	x29, x30, [sp], #64
  4057cc:	ret
  4057d0:	stp	x29, x30, [sp, #-16]!
  4057d4:	mov	w0, w1
  4057d8:	mov	x1, x2
  4057dc:	mov	w2, wzr
  4057e0:	mov	x29, sp
  4057e4:	bl	4072c0 <ferror@plt+0x4710>
  4057e8:	ldp	x29, x30, [sp], #16
  4057ec:	ret
  4057f0:	stp	x29, x30, [sp, #-48]!
  4057f4:	stp	x20, x19, [sp, #32]
  4057f8:	ldr	x8, [x2]
  4057fc:	mov	x20, x2
  405800:	mov	x19, x0
  405804:	mov	w2, #0x2                   	// #2
  405808:	mov	w3, #0x2                   	// #2
  40580c:	mov	x0, x8
  405810:	str	x21, [sp, #16]
  405814:	mov	x29, sp
  405818:	mov	w21, w1
  40581c:	bl	406f5c <ferror@plt+0x43ac>
  405820:	tbnz	w0, #0, 405860 <ferror@plt+0x2cb0>
  405824:	ldr	x0, [x20]
  405828:	cmp	w21, #0x2
  40582c:	b.lt	40583c <ferror@plt+0x2c8c>  // b.tstop
  405830:	ldr	x8, [x20, #8]
  405834:	ldr	x1, [x8, #8]
  405838:	b	405844 <ferror@plt+0x2c94>
  40583c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  405840:	add	x1, x1, #0xe37
  405844:	add	x2, x29, #0x1c
  405848:	bl	406ff8 <ferror@plt+0x4448>
  40584c:	tbz	w0, #0, 405860 <ferror@plt+0x2cb0>
  405850:	ldr	w8, [x29, #28]
  405854:	mov	x0, x19
  405858:	add	w1, w8, #0x1
  40585c:	bl	403e88 <ferror@plt+0x12d8>
  405860:	ldp	x20, x19, [sp, #32]
  405864:	ldr	x21, [sp, #16]
  405868:	ldp	x29, x30, [sp], #48
  40586c:	ret
  405870:	stp	x29, x30, [sp, #-48]!
  405874:	stp	x22, x21, [sp, #16]
  405878:	stp	x20, x19, [sp, #32]
  40587c:	ldr	x8, [x2]
  405880:	mov	x20, x2
  405884:	mov	x19, x0
  405888:	mov	w2, #0x3                   	// #3
  40588c:	mov	w3, #0x3                   	// #3
  405890:	mov	x0, x8
  405894:	mov	x29, sp
  405898:	mov	w22, w1
  40589c:	bl	406f5c <ferror@plt+0x43ac>
  4058a0:	tbz	w0, #0, 4058b4 <ferror@plt+0x2d04>
  4058a4:	cmp	w22, #0x2
  4058a8:	b.ne	40590c <ferror@plt+0x2d5c>  // b.any
  4058ac:	mov	w1, wzr
  4058b0:	b	405904 <ferror@plt+0x2d54>
  4058b4:	cmp	w22, #0x2
  4058b8:	b.lt	4058d8 <ferror@plt+0x2d28>  // b.tstop
  4058bc:	ldr	x8, [x20, #8]
  4058c0:	ldr	x21, [x8, #8]
  4058c4:	cmp	w22, #0x2
  4058c8:	b.gt	4058e8 <ferror@plt+0x2d38>
  4058cc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  4058d0:	add	x1, x1, #0xe37
  4058d4:	b	4058f0 <ferror@plt+0x2d40>
  4058d8:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x182c>
  4058dc:	add	x21, x21, #0xe37
  4058e0:	cmp	w22, #0x2
  4058e4:	b.le	4058cc <ferror@plt+0x2d1c>
  4058e8:	ldr	x8, [x20, #16]
  4058ec:	ldr	x1, [x8, #8]
  4058f0:	mov	x0, x21
  4058f4:	bl	402ab0 <strstr@plt>
  4058f8:	sub	w8, w0, w21
  4058fc:	cmp	x0, #0x0
  405900:	csinv	w1, w8, wzr, ne  // ne = any
  405904:	mov	x0, x19
  405908:	bl	403e88 <ferror@plt+0x12d8>
  40590c:	ldp	x20, x19, [sp, #32]
  405910:	ldp	x22, x21, [sp, #16]
  405914:	ldp	x29, x30, [sp], #48
  405918:	ret
  40591c:	stp	x29, x30, [sp, #-64]!
  405920:	stp	x24, x23, [sp, #16]
  405924:	stp	x22, x21, [sp, #32]
  405928:	stp	x20, x19, [sp, #48]
  40592c:	ldr	x8, [x2]
  405930:	mov	x22, x2
  405934:	mov	x20, x0
  405938:	mov	w2, #0x2                   	// #2
  40593c:	mov	w3, #0xffffffff            	// #-1
  405940:	mov	x0, x8
  405944:	mov	x29, sp
  405948:	mov	w19, w1
  40594c:	bl	406f5c <ferror@plt+0x43ac>
  405950:	tbnz	w0, #0, 405a48 <ferror@plt+0x2e98>
  405954:	mov	x21, x22
  405958:	ldr	x8, [x21, #8]!
  40595c:	ldr	w9, [x8]
  405960:	cmp	w9, #0x1
  405964:	b.ne	4059e4 <ferror@plt+0x2e34>  // b.any
  405968:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x182c>
  40596c:	add	x24, x24, #0xe37
  405970:	cmp	w19, #0x2
  405974:	mov	x23, x24
  405978:	b.lt	405980 <ferror@plt+0x2dd0>  // b.tstop
  40597c:	ldr	x23, [x8, #8]
  405980:	mov	x0, x23
  405984:	mov	w1, wzr
  405988:	bl	40ec68 <ferror@plt+0xc0b8>
  40598c:	cbz	x0, 405a00 <ferror@plt+0x2e50>
  405990:	ldr	w8, [x0, #24]
  405994:	cbz	w8, 405a00 <ferror@plt+0x2e50>
  405998:	ldrb	w8, [x0, #8]
  40599c:	tbnz	w8, #2, 405a1c <ferror@plt+0x2e6c>
  4059a0:	cmp	w19, #0x3
  4059a4:	b.lt	405a1c <ferror@plt+0x2e6c>  // b.tstop
  4059a8:	mov	w9, w19
  4059ac:	add	x8, x22, #0x10
  4059b0:	sub	x9, x9, #0x2
  4059b4:	mov	w10, #0x1                   	// #1
  4059b8:	b	4059c8 <ferror@plt+0x2e18>
  4059bc:	subs	x9, x9, #0x1
  4059c0:	add	x8, x8, #0x8
  4059c4:	b.eq	405a1c <ferror@plt+0x2e6c>  // b.none
  4059c8:	ldr	x11, [x8]
  4059cc:	ldr	w12, [x11]
  4059d0:	cmp	w12, #0x1
  4059d4:	b.eq	4059bc <ferror@plt+0x2e0c>  // b.none
  4059d8:	str	w10, [x11]
  4059dc:	str	x24, [x11, #8]
  4059e0:	b	4059bc <ferror@plt+0x2e0c>
  4059e4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4059e8:	ldr	w0, [x8, #1224]
  4059ec:	cmp	w19, #0x1
  4059f0:	b.lt	405a30 <ferror@plt+0x2e80>  // b.tstop
  4059f4:	ldr	x8, [x22]
  4059f8:	ldr	x3, [x8, #8]
  4059fc:	b	405a38 <ferror@plt+0x2e88>
  405a00:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405a04:	ldr	w0, [x8, #1224]
  405a08:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  405a0c:	add	x2, x2, #0xe1e
  405a10:	mov	w1, wzr
  405a14:	mov	x3, x23
  405a18:	b	405a44 <ferror@plt+0x2e94>
  405a1c:	sub	w1, w19, #0x1
  405a20:	mov	x2, x21
  405a24:	mov	x3, x20
  405a28:	bl	40c688 <ferror@plt+0x9ad8>
  405a2c:	b	405a48 <ferror@plt+0x2e98>
  405a30:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  405a34:	add	x3, x3, #0xe37
  405a38:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  405a3c:	add	x2, x2, #0xc1a
  405a40:	mov	w1, wzr
  405a44:	bl	402cbc <ferror@plt+0x10c>
  405a48:	ldp	x20, x19, [sp, #48]
  405a4c:	ldp	x22, x21, [sp, #32]
  405a50:	ldp	x24, x23, [sp, #16]
  405a54:	ldp	x29, x30, [sp], #64
  405a58:	ret
  405a5c:	stp	x29, x30, [sp, #-48]!
  405a60:	stp	x20, x19, [sp, #32]
  405a64:	ldr	x8, [x2]
  405a68:	mov	x20, x2
  405a6c:	mov	x19, x0
  405a70:	mov	w2, #0x2                   	// #2
  405a74:	mov	w3, #0x2                   	// #2
  405a78:	mov	x0, x8
  405a7c:	str	x21, [sp, #16]
  405a80:	mov	x29, sp
  405a84:	mov	w21, w1
  405a88:	bl	406f5c <ferror@plt+0x43ac>
  405a8c:	tbnz	w0, #0, 405abc <ferror@plt+0x2f0c>
  405a90:	cmp	w21, #0x2
  405a94:	b.lt	405aa4 <ferror@plt+0x2ef4>  // b.tstop
  405a98:	ldr	x8, [x20, #8]
  405a9c:	ldr	x0, [x8, #8]
  405aa0:	b	405aac <ferror@plt+0x2efc>
  405aa4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  405aa8:	add	x0, x0, #0xe37
  405aac:	bl	402540 <strlen@plt>
  405ab0:	mov	x1, x0
  405ab4:	mov	x0, x19
  405ab8:	bl	403e88 <ferror@plt+0x12d8>
  405abc:	ldp	x20, x19, [sp, #32]
  405ac0:	ldr	x21, [sp, #16]
  405ac4:	ldp	x29, x30, [sp], #48
  405ac8:	ret
  405acc:	sub	sp, sp, #0x30
  405ad0:	stp	x29, x30, [sp, #16]
  405ad4:	add	x29, sp, #0x10
  405ad8:	stp	x20, x19, [sp, #32]
  405adc:	stur	wzr, [x29, #-4]
  405ae0:	ldr	x0, [x2]
  405ae4:	mov	x19, x2
  405ae8:	mov	w2, #0x1                   	// #1
  405aec:	mov	w3, #0x2                   	// #2
  405af0:	mov	w20, w1
  405af4:	bl	406f5c <ferror@plt+0x43ac>
  405af8:	cmp	w20, #0x2
  405afc:	b.lt	405b1c <ferror@plt+0x2f6c>  // b.tstop
  405b00:	ldp	x0, x8, [x19]
  405b04:	sub	x2, x29, #0x4
  405b08:	ldr	x1, [x8, #8]
  405b0c:	bl	406ff8 <ferror@plt+0x4448>
  405b10:	tbnz	w0, #0, 405b1c <ferror@plt+0x2f6c>
  405b14:	mov	w8, #0x1                   	// #1
  405b18:	stur	w8, [x29, #-4]
  405b1c:	ldur	w3, [x29, #-4]
  405b20:	cmp	w3, #0x100
  405b24:	b.cc	405b48 <ferror@plt+0x2f98>  // b.lo, b.ul, b.last
  405b28:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405b2c:	ldr	w0, [x8, #1224]
  405b30:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  405b34:	add	x2, x2, #0xf65
  405b38:	mov	w1, wzr
  405b3c:	bl	402cbc <ferror@plt+0x10c>
  405b40:	mov	w8, #0x1                   	// #1
  405b44:	stur	w8, [x29, #-4]
  405b48:	mov	x0, xzr
  405b4c:	bl	407d64 <ferror@plt+0x51b4>
  405b50:	bl	407cd8 <ferror@plt+0x5128>
  405b54:	ldur	w8, [x29, #-4]
  405b58:	cbnz	w8, 405b6c <ferror@plt+0x2fbc>
  405b5c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  405b60:	ldr	w8, [x8, #3496]
  405b64:	cbz	w8, 405b6c <ferror@plt+0x2fbc>
  405b68:	stur	w8, [x29, #-4]
  405b6c:	ldur	w0, [x29, #-4]
  405b70:	cbz	w0, 405b7c <ferror@plt+0x2fcc>
  405b74:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405b78:	str	w0, [x8, #892]
  405b7c:	bl	402570 <exit@plt>
  405b80:	stp	x29, x30, [sp, #-48]!
  405b84:	stp	x22, x21, [sp, #16]
  405b88:	stp	x20, x19, [sp, #32]
  405b8c:	ldr	x8, [x2]
  405b90:	mov	x20, x2
  405b94:	mov	x19, x0
  405b98:	mov	w2, #0x2                   	// #2
  405b9c:	mov	w3, #0xffffffff            	// #-1
  405ba0:	mov	x0, x8
  405ba4:	mov	x29, sp
  405ba8:	mov	w21, w1
  405bac:	bl	406f5c <ferror@plt+0x43ac>
  405bb0:	tbnz	w0, #0, 405ccc <ferror@plt+0x311c>
  405bb4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405bb8:	ldr	w8, [x8, #1208]
  405bbc:	cbz	w8, 405bd4 <ferror@plt+0x3024>
  405bc0:	cmp	w21, #0x2
  405bc4:	b.lt	405bf4 <ferror@plt+0x3044>  // b.tstop
  405bc8:	ldr	x8, [x20, #8]
  405bcc:	ldr	x0, [x8, #8]
  405bd0:	b	405bfc <ferror@plt+0x304c>
  405bd4:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  405bd8:	add	x3, x3, #0x1f0
  405bdc:	mov	x0, x19
  405be0:	mov	w1, w21
  405be4:	mov	x2, x20
  405be8:	mov	w4, wzr
  405bec:	bl	403f00 <ferror@plt+0x1350>
  405bf0:	b	405c54 <ferror@plt+0x30a4>
  405bf4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  405bf8:	add	x0, x0, #0xe37
  405bfc:	bl	402540 <strlen@plt>
  405c00:	ldp	x9, x8, [x19, #24]
  405c04:	mov	x22, x0
  405c08:	sub	x8, x8, x9
  405c0c:	cmp	x8, x0
  405c10:	b.cs	405c20 <ferror@plt+0x3070>  // b.hs, b.nlast
  405c14:	mov	x0, x19
  405c18:	mov	x1, x22
  405c1c:	bl	41659c <_obstack_newchunk@@Base>
  405c20:	ldr	x0, [x19, #24]
  405c24:	cmp	w21, #0x2
  405c28:	b.lt	405c38 <ferror@plt+0x3088>  // b.tstop
  405c2c:	ldr	x8, [x20, #8]
  405c30:	ldr	x1, [x8, #8]
  405c34:	b	405c40 <ferror@plt+0x3090>
  405c38:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  405c3c:	add	x1, x1, #0xe37
  405c40:	mov	x2, x22
  405c44:	bl	402510 <memcpy@plt>
  405c48:	ldr	x8, [x19, #24]
  405c4c:	add	x8, x8, x22
  405c50:	str	x8, [x19, #24]
  405c54:	ldp	x9, x8, [x19, #24]
  405c58:	cmp	x8, x9
  405c5c:	b.ne	405c6c <ferror@plt+0x30bc>  // b.any
  405c60:	mov	w1, #0x1                   	// #1
  405c64:	mov	x0, x19
  405c68:	bl	41659c <_obstack_newchunk@@Base>
  405c6c:	ldr	x8, [x19, #24]
  405c70:	add	x9, x8, #0x1
  405c74:	str	x9, [x19, #24]
  405c78:	strb	wzr, [x8]
  405c7c:	ldp	x0, x8, [x19, #16]
  405c80:	cmp	x8, x0
  405c84:	b.ne	405c94 <ferror@plt+0x30e4>  // b.any
  405c88:	ldrb	w8, [x19, #80]
  405c8c:	orr	w8, w8, #0x2
  405c90:	strb	w8, [x19, #80]
  405c94:	ldr	x9, [x19, #48]
  405c98:	ldp	x10, x8, [x19, #24]
  405c9c:	ldr	x11, [x19, #8]
  405ca0:	add	x10, x9, x10
  405ca4:	bic	x9, x10, x9
  405ca8:	sub	x10, x9, x11
  405cac:	sub	x11, x8, x11
  405cb0:	cmp	x10, x11
  405cb4:	str	x9, [x19, #24]
  405cb8:	b.ls	405cc0 <ferror@plt+0x3110>  // b.plast
  405cbc:	str	x8, [x19, #24]
  405cc0:	ldr	x8, [x19, #24]
  405cc4:	str	x8, [x19, #16]
  405cc8:	bl	40af38 <ferror@plt+0x8388>
  405ccc:	ldp	x20, x19, [sp, #32]
  405cd0:	ldp	x22, x21, [sp, #16]
  405cd4:	ldp	x29, x30, [sp], #48
  405cd8:	ret
  405cdc:	stp	x29, x30, [sp, #-64]!
  405ce0:	stp	x24, x23, [sp, #16]
  405ce4:	stp	x22, x21, [sp, #32]
  405ce8:	stp	x20, x19, [sp, #48]
  405cec:	ldr	x8, [x2]
  405cf0:	mov	x20, x2
  405cf4:	mov	x19, x0
  405cf8:	mov	w2, #0x2                   	// #2
  405cfc:	mov	w3, #0x2                   	// #2
  405d00:	mov	x0, x8
  405d04:	mov	x29, sp
  405d08:	mov	w21, w1
  405d0c:	bl	406f5c <ferror@plt+0x43ac>
  405d10:	tbnz	w0, #0, 405f40 <ferror@plt+0x3390>
  405d14:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405d18:	ldr	w8, [x8, #1208]
  405d1c:	cbz	w8, 405d34 <ferror@plt+0x3184>
  405d20:	cmp	w21, #0x2
  405d24:	b.lt	405d68 <ferror@plt+0x31b8>  // b.tstop
  405d28:	ldr	x8, [x20, #8]
  405d2c:	ldr	x20, [x8, #8]
  405d30:	b	405d70 <ferror@plt+0x31c0>
  405d34:	cmp	w21, #0x1
  405d38:	b.lt	405f00 <ferror@plt+0x3350>  // b.tstop
  405d3c:	ldr	x8, [x20]
  405d40:	ldr	x22, [x8, #8]
  405d44:	cmp	w21, #0x1
  405d48:	b.le	405f10 <ferror@plt+0x3360>
  405d4c:	ldr	x8, [x20, #8]
  405d50:	ldr	x23, [x8, #8]
  405d54:	cmp	w21, #0x2
  405d58:	b.ge	405f20 <ferror@plt+0x3370>  // b.tcont
  405d5c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  405d60:	add	x0, x0, #0xe37
  405d64:	b	405f28 <ferror@plt+0x3378>
  405d68:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x182c>
  405d6c:	add	x20, x20, #0xe37
  405d70:	mov	x0, x20
  405d74:	bl	402540 <strlen@plt>
  405d78:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  405d7c:	ldr	w8, [x8, #1224]
  405d80:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  405d84:	mov	x21, x0
  405d88:	add	x2, x2, #0xf84
  405d8c:	mov	w0, w8
  405d90:	mov	w1, wzr
  405d94:	bl	402cbc <ferror@plt+0x10c>
  405d98:	sxtw	x23, w21
  405d9c:	mov	x10, xzr
  405da0:	lsl	x12, x23, #32
  405da4:	add	x8, x20, x23
  405da8:	mov	x9, #0xffffffff00000000    	// #-4294967296
  405dac:	mov	x24, x10
  405db0:	add	x10, x23, x10
  405db4:	cmp	x10, #0x2
  405db8:	mov	x11, x12
  405dbc:	b.lt	405dd8 <ferror@plt+0x3228>  // b.tstop
  405dc0:	add	x10, x8, x24
  405dc4:	ldurb	w12, [x10, #-1]
  405dc8:	sub	x10, x24, #0x1
  405dcc:	cmp	w12, #0x58
  405dd0:	add	x12, x11, x9
  405dd4:	b.eq	405dac <ferror@plt+0x31fc>  // b.none
  405dd8:	ldp	x9, x8, [x19, #24]
  405ddc:	asr	x22, x11, #32
  405de0:	sub	x8, x8, x9
  405de4:	cmp	x8, x22
  405de8:	b.cs	405df8 <ferror@plt+0x3248>  // b.hs, b.nlast
  405dec:	mov	x0, x19
  405df0:	mov	x1, x22
  405df4:	bl	41659c <_obstack_newchunk@@Base>
  405df8:	ldr	x0, [x19, #24]
  405dfc:	mov	x1, x20
  405e00:	mov	x2, x22
  405e04:	bl	402510 <memcpy@plt>
  405e08:	ldr	x8, [x19, #24]
  405e0c:	add	x8, x8, x22
  405e10:	str	x8, [x19, #24]
  405e14:	bl	4026d0 <getpid@plt>
  405e18:	mov	w1, #0xa                   	// #10
  405e1c:	bl	403bd4 <ferror@plt+0x1024>
  405e20:	mov	x20, x0
  405e24:	bl	402540 <strlen@plt>
  405e28:	mov	x22, x0
  405e2c:	neg	x8, x24
  405e30:	cmp	w8, w22
  405e34:	b.ge	405e68 <ferror@plt+0x32b8>  // b.tcont
  405e38:	ldp	x10, x9, [x19, #24]
  405e3c:	sxtw	x21, w8
  405e40:	add	x1, x21, #0x1
  405e44:	sub	x8, x9, x10
  405e48:	cmp	x8, x1
  405e4c:	b.cs	405e58 <ferror@plt+0x32a8>  // b.hs, b.nlast
  405e50:	mov	x0, x19
  405e54:	bl	41659c <_obstack_newchunk@@Base>
  405e58:	ldr	x0, [x19, #24]
  405e5c:	add	x8, x20, w22, sxtw
  405e60:	sub	x1, x8, x21
  405e64:	b	405ee0 <ferror@plt+0x3330>
  405e68:	add	x8, x21, x24
  405e6c:	sub	w9, w23, w22
  405e70:	cmp	w9, w8
  405e74:	b.le	405eb8 <ferror@plt+0x3308>
  405e78:	add	w21, w22, w24
  405e7c:	mov	w23, #0x30                  	// #48
  405e80:	b	405e9c <ferror@plt+0x32ec>
  405e84:	ldr	x8, [x19, #24]
  405e88:	adds	w21, w21, #0x1
  405e8c:	add	x9, x8, #0x1
  405e90:	str	x9, [x19, #24]
  405e94:	strb	w23, [x8]
  405e98:	b.cs	405eb8 <ferror@plt+0x3308>  // b.hs, b.nlast
  405e9c:	ldp	x9, x8, [x19, #24]
  405ea0:	cmp	x8, x9
  405ea4:	b.ne	405e84 <ferror@plt+0x32d4>  // b.any
  405ea8:	mov	w1, #0x1                   	// #1
  405eac:	mov	x0, x19
  405eb0:	bl	41659c <_obstack_newchunk@@Base>
  405eb4:	b	405e84 <ferror@plt+0x32d4>
  405eb8:	ldp	x9, x8, [x19, #24]
  405ebc:	sxtw	x21, w22
  405ec0:	add	x1, x21, #0x1
  405ec4:	sub	x8, x8, x9
  405ec8:	cmp	x8, x1
  405ecc:	b.cs	405ed8 <ferror@plt+0x3328>  // b.hs, b.nlast
  405ed0:	mov	x0, x19
  405ed4:	bl	41659c <_obstack_newchunk@@Base>
  405ed8:	ldr	x0, [x19, #24]
  405edc:	mov	x1, x20
  405ee0:	mov	x2, x21
  405ee4:	bl	402510 <memcpy@plt>
  405ee8:	ldr	x8, [x19, #24]
  405eec:	add	x8, x8, x21
  405ef0:	add	x9, x8, #0x1
  405ef4:	str	x9, [x19, #24]
  405ef8:	strb	wzr, [x8]
  405efc:	b	405f40 <ferror@plt+0x3390>
  405f00:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x182c>
  405f04:	add	x22, x22, #0xe37
  405f08:	cmp	w21, #0x1
  405f0c:	b.gt	405d4c <ferror@plt+0x319c>
  405f10:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x182c>
  405f14:	add	x23, x23, #0xe37
  405f18:	cmp	w21, #0x2
  405f1c:	b.lt	405d5c <ferror@plt+0x31ac>  // b.tstop
  405f20:	ldr	x8, [x20, #8]
  405f24:	ldr	x0, [x8, #8]
  405f28:	bl	402540 <strlen@plt>
  405f2c:	mov	x3, x0
  405f30:	mov	x0, x19
  405f34:	mov	x1, x22
  405f38:	mov	x2, x23
  405f3c:	bl	407394 <ferror@plt+0x47e4>
  405f40:	ldp	x20, x19, [sp, #48]
  405f44:	ldp	x22, x21, [sp, #32]
  405f48:	ldp	x24, x23, [sp, #16]
  405f4c:	ldp	x29, x30, [sp], #64
  405f50:	ret
  405f54:	stp	x29, x30, [sp, #-64]!
  405f58:	stp	x22, x21, [sp, #32]
  405f5c:	stp	x20, x19, [sp, #48]
  405f60:	ldr	x8, [x2]
  405f64:	mov	x20, x2
  405f68:	mov	x19, x0
  405f6c:	mov	w2, #0x2                   	// #2
  405f70:	mov	w3, #0x2                   	// #2
  405f74:	mov	x0, x8
  405f78:	str	x23, [sp, #16]
  405f7c:	mov	x29, sp
  405f80:	mov	w22, w1
  405f84:	bl	406f5c <ferror@plt+0x43ac>
  405f88:	tbnz	w0, #0, 406000 <ferror@plt+0x3450>
  405f8c:	cmp	w22, #0x1
  405f90:	b.lt	405fc0 <ferror@plt+0x3410>  // b.tstop
  405f94:	ldr	x8, [x20]
  405f98:	ldr	x21, [x8, #8]
  405f9c:	cmp	w22, #0x1
  405fa0:	b.le	405fd0 <ferror@plt+0x3420>
  405fa4:	ldr	x8, [x20, #8]
  405fa8:	ldr	x23, [x8, #8]
  405fac:	cmp	w22, #0x2
  405fb0:	b.ge	405fe0 <ferror@plt+0x3430>  // b.tcont
  405fb4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  405fb8:	add	x0, x0, #0xe37
  405fbc:	b	405fe8 <ferror@plt+0x3438>
  405fc0:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x182c>
  405fc4:	add	x21, x21, #0xe37
  405fc8:	cmp	w22, #0x1
  405fcc:	b.gt	405fa4 <ferror@plt+0x33f4>
  405fd0:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x182c>
  405fd4:	add	x23, x23, #0xe37
  405fd8:	cmp	w22, #0x2
  405fdc:	b.lt	405fb4 <ferror@plt+0x3404>  // b.tstop
  405fe0:	ldr	x8, [x20, #8]
  405fe4:	ldr	x0, [x8, #8]
  405fe8:	bl	402540 <strlen@plt>
  405fec:	mov	x3, x0
  405ff0:	mov	x0, x19
  405ff4:	mov	x1, x21
  405ff8:	mov	x2, x23
  405ffc:	bl	407394 <ferror@plt+0x47e4>
  406000:	ldp	x20, x19, [sp, #48]
  406004:	ldp	x22, x21, [sp, #32]
  406008:	ldr	x23, [sp, #16]
  40600c:	ldp	x29, x30, [sp], #64
  406010:	ret
  406014:	sub	sp, sp, #0xc0
  406018:	stp	x29, x30, [sp, #96]
  40601c:	stp	x28, x27, [sp, #112]
  406020:	stp	x26, x25, [sp, #128]
  406024:	stp	x24, x23, [sp, #144]
  406028:	stp	x22, x21, [sp, #160]
  40602c:	stp	x20, x19, [sp, #176]
  406030:	ldr	x8, [x2]
  406034:	mov	x20, x2
  406038:	mov	x19, x0
  40603c:	mov	w2, #0x3                   	// #3
  406040:	mov	w3, #0x4                   	// #4
  406044:	mov	x0, x8
  406048:	add	x29, sp, #0x60
  40604c:	mov	w22, w1
  406050:	bl	406f5c <ferror@plt+0x43ac>
  406054:	tbz	w0, #0, 4060b0 <ferror@plt+0x3500>
  406058:	cmp	w22, #0x2
  40605c:	b.ne	4062b8 <ferror@plt+0x3708>  // b.any
  406060:	ldr	x8, [x20, #8]
  406064:	ldr	x0, [x8, #8]
  406068:	bl	402540 <strlen@plt>
  40606c:	ldp	x9, x8, [x19, #24]
  406070:	mov	x21, x0
  406074:	sub	x8, x8, x9
  406078:	cmp	x8, x0
  40607c:	b.cs	40608c <ferror@plt+0x34dc>  // b.hs, b.nlast
  406080:	mov	x0, x19
  406084:	mov	x1, x21
  406088:	bl	41659c <_obstack_newchunk@@Base>
  40608c:	ldr	x8, [x20, #8]
  406090:	ldr	x0, [x19, #24]
  406094:	mov	x2, x21
  406098:	ldr	x1, [x8, #8]
  40609c:	bl	402510 <memcpy@plt>
  4060a0:	ldr	x8, [x19, #24]
  4060a4:	add	x8, x8, x21
  4060a8:	str	x8, [x19, #24]
  4060ac:	b	4062b8 <ferror@plt+0x3708>
  4060b0:	ldr	x8, [x20, #16]
  4060b4:	add	x0, sp, #0x20
  4060b8:	add	x1, sp, #0x8
  4060bc:	ldr	x21, [x8, #8]
  4060c0:	bl	403c28 <ferror@plt+0x1078>
  4060c4:	mov	x0, x21
  4060c8:	bl	402540 <strlen@plt>
  4060cc:	mov	x1, x0
  4060d0:	add	x2, sp, #0x20
  4060d4:	mov	x0, x21
  4060d8:	bl	4028e0 <re_compile_pattern@plt>
  4060dc:	cbz	x0, 40610c <ferror@plt+0x355c>
  4060e0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4060e4:	mov	x4, x0
  4060e8:	ldr	w0, [x8, #1224]
  4060ec:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4060f0:	add	x2, x2, #0x9af
  4060f4:	mov	w1, wzr
  4060f8:	mov	x3, x21
  4060fc:	bl	402cbc <ferror@plt+0x10c>
  406100:	ldr	x0, [sp, #32]
  406104:	bl	4029a0 <free@plt>
  406108:	b	4062b8 <ferror@plt+0x3708>
  40610c:	ldr	x8, [x20, #8]
  406110:	ldr	x23, [x8, #8]
  406114:	mov	x0, x23
  406118:	bl	402540 <strlen@plt>
  40611c:	mov	x24, x0
  406120:	tbnz	w24, #31, 406284 <ferror@plt+0x36d4>
  406124:	mov	w25, wzr
  406128:	sxtw	x27, w24
  40612c:	b	406150 <ferror@plt+0x35a0>
  406130:	ldr	x8, [x19, #24]
  406134:	ldrb	w9, [x23, x26]
  406138:	add	w25, w25, #0x1
  40613c:	add	x10, x8, #0x1
  406140:	str	x10, [x19, #24]
  406144:	strb	w9, [x8]
  406148:	cmp	w25, w24
  40614c:	b.gt	406284 <ferror@plt+0x36d4>
  406150:	sxtw	x28, w25
  406154:	sub	x26, x27, x28
  406158:	add	x0, sp, #0x20
  40615c:	add	x5, sp, #0x8
  406160:	mov	x1, x23
  406164:	mov	w2, w24
  406168:	mov	w3, w25
  40616c:	mov	w4, w26
  406170:	bl	402820 <re_search@plt>
  406174:	tbnz	w0, #31, 40621c <ferror@plt+0x366c>
  406178:	cmp	w0, w28
  40617c:	b.le	4061c0 <ferror@plt+0x3610>
  406180:	ldp	x9, x8, [x19, #24]
  406184:	sxtw	x10, w0
  406188:	sub	x25, x10, x28
  40618c:	sub	x8, x8, x9
  406190:	cmp	x8, x25
  406194:	b.cs	4061a4 <ferror@plt+0x35f4>  // b.hs, b.nlast
  406198:	mov	x0, x19
  40619c:	mov	x1, x25
  4061a0:	bl	41659c <_obstack_newchunk@@Base>
  4061a4:	ldr	x0, [x19, #24]
  4061a8:	add	x1, x23, x28
  4061ac:	mov	x2, x25
  4061b0:	bl	402510 <memcpy@plt>
  4061b4:	ldr	x8, [x19, #24]
  4061b8:	add	x8, x8, x25
  4061bc:	str	x8, [x19, #24]
  4061c0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4061c4:	cmp	w22, #0x4
  4061c8:	add	x2, x2, #0xe37
  4061cc:	b.lt	4061d8 <ferror@plt+0x3628>  // b.tstop
  4061d0:	ldr	x8, [x20, #24]
  4061d4:	ldr	x2, [x8, #8]
  4061d8:	add	x3, sp, #0x8
  4061dc:	mov	x0, x19
  4061e0:	mov	x1, x23
  4061e4:	bl	4075dc <ferror@plt+0x4a2c>
  4061e8:	ldp	x9, x8, [sp, #16]
  4061ec:	ldr	w25, [x8]
  4061f0:	ldr	w8, [x9]
  4061f4:	cmp	w8, w25
  4061f8:	b.ne	406148 <ferror@plt+0x3598>  // b.any
  4061fc:	ldp	x9, x8, [x19, #24]
  406200:	sxtw	x26, w25
  406204:	cmp	x8, x9
  406208:	b.ne	406130 <ferror@plt+0x3580>  // b.any
  40620c:	mov	w1, #0x1                   	// #1
  406210:	mov	x0, x19
  406214:	bl	41659c <_obstack_newchunk@@Base>
  406218:	b	406130 <ferror@plt+0x3580>
  40621c:	cmn	w0, #0x2
  406220:	b.ne	406244 <ferror@plt+0x3694>  // b.any
  406224:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406228:	ldr	w0, [x8, #1224]
  40622c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  406230:	add	x2, x2, #0xfc4
  406234:	mov	w1, wzr
  406238:	mov	x3, x21
  40623c:	bl	402cbc <ferror@plt+0x10c>
  406240:	b	406284 <ferror@plt+0x36d4>
  406244:	cmp	w28, w24
  406248:	b.ge	406284 <ferror@plt+0x36d4>  // b.tcont
  40624c:	ldp	x9, x8, [x19, #24]
  406250:	sub	x8, x8, x9
  406254:	cmp	x8, x26
  406258:	b.cs	406268 <ferror@plt+0x36b8>  // b.hs, b.nlast
  40625c:	mov	x0, x19
  406260:	mov	x1, x26
  406264:	bl	41659c <_obstack_newchunk@@Base>
  406268:	ldr	x0, [x19, #24]
  40626c:	add	x1, x23, x28
  406270:	mov	x2, x26
  406274:	bl	402510 <memcpy@plt>
  406278:	ldr	x8, [x19, #24]
  40627c:	add	x8, x8, x26
  406280:	str	x8, [x19, #24]
  406284:	ldp	x9, x8, [x19, #24]
  406288:	cmp	x8, x9
  40628c:	b.ne	40629c <ferror@plt+0x36ec>  // b.any
  406290:	mov	w1, #0x1                   	// #1
  406294:	mov	x0, x19
  406298:	bl	41659c <_obstack_newchunk@@Base>
  40629c:	ldr	x8, [x19, #24]
  4062a0:	add	x0, sp, #0x20
  4062a4:	add	x1, sp, #0x8
  4062a8:	add	x9, x8, #0x1
  4062ac:	str	x9, [x19, #24]
  4062b0:	strb	wzr, [x8]
  4062b4:	bl	403930 <ferror@plt+0xd80>
  4062b8:	ldp	x20, x19, [sp, #176]
  4062bc:	ldp	x22, x21, [sp, #160]
  4062c0:	ldp	x24, x23, [sp, #144]
  4062c4:	ldp	x26, x25, [sp, #128]
  4062c8:	ldp	x28, x27, [sp, #112]
  4062cc:	ldp	x29, x30, [sp, #96]
  4062d0:	add	sp, sp, #0xc0
  4062d4:	ret
  4062d8:	stp	x29, x30, [sp, #-32]!
  4062dc:	stp	x20, x19, [sp, #16]
  4062e0:	ldr	x0, [x2]
  4062e4:	mov	x19, x2
  4062e8:	mov	w2, #0x2                   	// #2
  4062ec:	mov	w3, #0xffffffff            	// #-1
  4062f0:	mov	x29, sp
  4062f4:	mov	w20, w1
  4062f8:	bl	406f5c <ferror@plt+0x43ac>
  4062fc:	cmp	w20, #0x2
  406300:	b.lt	40632c <ferror@plt+0x377c>  // b.tstop
  406304:	tbnz	w0, #0, 40632c <ferror@plt+0x377c>
  406308:	mov	w8, w20
  40630c:	add	x19, x19, #0x8
  406310:	sub	x20, x8, #0x1
  406314:	ldr	x8, [x19], #8
  406318:	mov	w1, #0x4                   	// #4
  40631c:	ldr	x0, [x8, #8]
  406320:	bl	40ec68 <ferror@plt+0xc0b8>
  406324:	subs	x20, x20, #0x1
  406328:	b.ne	406314 <ferror@plt+0x3764>  // b.any
  40632c:	ldp	x20, x19, [sp, #16]
  406330:	ldp	x29, x30, [sp], #32
  406334:	ret
  406338:	stp	x29, x30, [sp, #-16]!
  40633c:	mov	x8, x2
  406340:	mov	w0, w1
  406344:	mov	w2, #0x3                   	// #3
  406348:	mov	x1, x8
  40634c:	mov	x29, sp
  406350:	bl	4070d8 <ferror@plt+0x4528>
  406354:	ldp	x29, x30, [sp], #16
  406358:	ret
  40635c:	sub	sp, sp, #0xa0
  406360:	stp	x29, x30, [sp, #96]
  406364:	stp	x24, x23, [sp, #112]
  406368:	stp	x22, x21, [sp, #128]
  40636c:	stp	x20, x19, [sp, #144]
  406370:	ldr	x8, [x2]
  406374:	mov	x20, x2
  406378:	mov	x19, x0
  40637c:	mov	w2, #0x3                   	// #3
  406380:	mov	w3, #0x4                   	// #4
  406384:	mov	x0, x8
  406388:	add	x29, sp, #0x60
  40638c:	mov	w21, w1
  406390:	bl	406f5c <ferror@plt+0x43ac>
  406394:	tbz	w0, #0, 4063b0 <ferror@plt+0x3800>
  406398:	cmp	w21, #0x2
  40639c:	b.ne	40649c <ferror@plt+0x38ec>  // b.any
  4063a0:	mov	x0, x19
  4063a4:	mov	w1, wzr
  4063a8:	bl	403e88 <ferror@plt+0x12d8>
  4063ac:	b	40649c <ferror@plt+0x38ec>
  4063b0:	ldp	x8, x9, [x20, #8]
  4063b4:	add	x0, sp, #0x20
  4063b8:	add	x1, sp, #0x8
  4063bc:	add	x24, sp, #0x8
  4063c0:	ldr	x23, [x8, #8]
  4063c4:	ldr	x22, [x9, #8]
  4063c8:	bl	403c28 <ferror@plt+0x1078>
  4063cc:	mov	x0, x22
  4063d0:	bl	402540 <strlen@plt>
  4063d4:	mov	x1, x0
  4063d8:	add	x2, sp, #0x20
  4063dc:	mov	x0, x22
  4063e0:	bl	4028e0 <re_compile_pattern@plt>
  4063e4:	cbz	x0, 40640c <ferror@plt+0x385c>
  4063e8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4063ec:	mov	x4, x0
  4063f0:	ldr	w0, [x8, #1224]
  4063f4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4063f8:	add	x2, x2, #0x78
  4063fc:	mov	w1, wzr
  406400:	mov	x3, x22
  406404:	bl	402cbc <ferror@plt+0x10c>
  406408:	b	406490 <ferror@plt+0x38e0>
  40640c:	mov	x0, x23
  406410:	bl	402540 <strlen@plt>
  406414:	mov	x2, x0
  406418:	cmp	w21, #0x3
  40641c:	csel	x5, xzr, x24, eq  // eq = none
  406420:	add	x0, sp, #0x20
  406424:	mov	x1, x23
  406428:	mov	w3, wzr
  40642c:	mov	w4, w2
  406430:	bl	402820 <re_search@plt>
  406434:	cmn	w0, #0x2
  406438:	b.ne	40645c <ferror@plt+0x38ac>  // b.any
  40643c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406440:	ldr	w0, [x8, #1224]
  406444:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  406448:	add	x2, x2, #0xfc4
  40644c:	mov	w1, wzr
  406450:	mov	x3, x22
  406454:	bl	402cbc <ferror@plt+0x10c>
  406458:	b	406490 <ferror@plt+0x38e0>
  40645c:	mov	w1, w0
  406460:	cmp	w21, #0x3
  406464:	b.ne	406474 <ferror@plt+0x38c4>  // b.any
  406468:	mov	x0, x19
  40646c:	bl	403e88 <ferror@plt+0x12d8>
  406470:	b	406490 <ferror@plt+0x38e0>
  406474:	tbnz	w1, #31, 406490 <ferror@plt+0x38e0>
  406478:	ldr	x8, [x20, #24]
  40647c:	add	x3, sp, #0x8
  406480:	mov	x0, x19
  406484:	mov	x1, x23
  406488:	ldr	x2, [x8, #8]
  40648c:	bl	4075dc <ferror@plt+0x4a2c>
  406490:	add	x0, sp, #0x20
  406494:	add	x1, sp, #0x8
  406498:	bl	403930 <ferror@plt+0xd80>
  40649c:	ldp	x20, x19, [sp, #144]
  4064a0:	ldp	x22, x21, [sp, #128]
  4064a4:	ldp	x24, x23, [sp, #112]
  4064a8:	ldp	x29, x30, [sp, #96]
  4064ac:	add	sp, sp, #0xa0
  4064b0:	ret
  4064b4:	stp	x29, x30, [sp, #-48]!
  4064b8:	stp	x20, x19, [sp, #32]
  4064bc:	ldr	x8, [x2]
  4064c0:	mov	x20, x2
  4064c4:	mov	x19, x0
  4064c8:	mov	w2, #0x2                   	// #2
  4064cc:	mov	w3, #0xffffffff            	// #-1
  4064d0:	mov	x0, x8
  4064d4:	str	x21, [sp, #16]
  4064d8:	mov	x29, sp
  4064dc:	mov	w21, w1
  4064e0:	bl	406f5c <ferror@plt+0x43ac>
  4064e4:	tbnz	w0, #0, 406504 <ferror@plt+0x3954>
  4064e8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  4064ec:	sub	w1, w21, #0x1
  4064f0:	add	x2, x20, #0x8
  4064f4:	add	x3, x3, #0xa96
  4064f8:	mov	w4, #0x1                   	// #1
  4064fc:	mov	x0, x19
  406500:	bl	403f00 <ferror@plt+0x1350>
  406504:	ldp	x20, x19, [sp, #32]
  406508:	ldr	x21, [sp, #16]
  40650c:	ldp	x29, x30, [sp], #48
  406510:	ret
  406514:	stp	x29, x30, [sp, #-16]!
  406518:	mov	x8, x2
  40651c:	mov	w0, w1
  406520:	mov	w2, #0x1                   	// #1
  406524:	mov	x1, x8
  406528:	mov	x29, sp
  40652c:	bl	4072c0 <ferror@plt+0x4710>
  406530:	ldp	x29, x30, [sp], #16
  406534:	ret
  406538:	stp	x29, x30, [sp, #-64]!
  40653c:	mov	x29, sp
  406540:	stp	x22, x21, [sp, #32]
  406544:	stp	x20, x19, [sp, #48]
  406548:	str	wzr, [x29, #28]
  40654c:	ldr	x8, [x2]
  406550:	mov	x20, x2
  406554:	mov	x19, x0
  406558:	mov	w2, #0x3                   	// #3
  40655c:	mov	w3, #0x4                   	// #4
  406560:	mov	x0, x8
  406564:	str	x23, [sp, #16]
  406568:	mov	w21, w1
  40656c:	bl	406f5c <ferror@plt+0x43ac>
  406570:	tbz	w0, #0, 4065c8 <ferror@plt+0x3a18>
  406574:	cmp	w21, #0x2
  406578:	b.ne	4066c8 <ferror@plt+0x3b18>  // b.any
  40657c:	ldr	x8, [x20, #8]
  406580:	ldr	x0, [x8, #8]
  406584:	bl	402540 <strlen@plt>
  406588:	ldp	x9, x8, [x19, #24]
  40658c:	mov	x21, x0
  406590:	sub	x8, x8, x9
  406594:	cmp	x8, x0
  406598:	b.cs	4065a8 <ferror@plt+0x39f8>  // b.hs, b.nlast
  40659c:	mov	x0, x19
  4065a0:	mov	x1, x21
  4065a4:	bl	41659c <_obstack_newchunk@@Base>
  4065a8:	ldr	x8, [x20, #8]
  4065ac:	ldr	x0, [x19, #24]
  4065b0:	mov	x2, x21
  4065b4:	ldr	x1, [x8, #8]
  4065b8:	bl	402510 <memcpy@plt>
  4065bc:	ldr	x8, [x19, #24]
  4065c0:	add	x8, x8, x21
  4065c4:	b	4066c4 <ferror@plt+0x3b14>
  4065c8:	cmp	w21, #0x2
  4065cc:	b.lt	4065dc <ferror@plt+0x3a2c>  // b.tstop
  4065d0:	ldr	x8, [x20, #8]
  4065d4:	ldr	x0, [x8, #8]
  4065d8:	b	4065e4 <ferror@plt+0x3a34>
  4065dc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  4065e0:	add	x0, x0, #0xe37
  4065e4:	bl	402540 <strlen@plt>
  4065e8:	mov	x22, x0
  4065ec:	str	w22, [x29, #24]
  4065f0:	ldr	x0, [x20]
  4065f4:	cmp	w21, #0x2
  4065f8:	b.le	406608 <ferror@plt+0x3a58>
  4065fc:	ldr	x8, [x20, #16]
  406600:	ldr	x1, [x8, #8]
  406604:	b	406610 <ferror@plt+0x3a60>
  406608:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  40660c:	add	x1, x1, #0xe37
  406610:	add	x2, x29, #0x1c
  406614:	bl	406ff8 <ferror@plt+0x4448>
  406618:	tbz	w0, #0, 4066c8 <ferror@plt+0x3b18>
  40661c:	cmp	w21, #0x4
  406620:	b.lt	40663c <ferror@plt+0x3a8c>  // b.tstop
  406624:	ldr	x8, [x20, #24]
  406628:	ldr	x0, [x20]
  40662c:	add	x2, x29, #0x18
  406630:	ldr	x1, [x8, #8]
  406634:	bl	406ff8 <ferror@plt+0x4448>
  406638:	tbz	w0, #0, 4066c8 <ferror@plt+0x3b18>
  40663c:	ldr	w8, [x29, #28]
  406640:	cmp	w8, w22
  406644:	b.ge	4066c8 <ferror@plt+0x3b18>  // b.tcont
  406648:	tbnz	w8, #31, 4066c8 <ferror@plt+0x3b18>
  40664c:	ldr	w9, [x29, #24]
  406650:	cmp	w9, #0x1
  406654:	b.lt	4066c8 <ferror@plt+0x3b18>  // b.tstop
  406658:	sxtw	x23, w8
  40665c:	add	w8, w9, w23
  406660:	cmp	w8, w22
  406664:	b.le	406670 <ferror@plt+0x3ac0>
  406668:	sub	w8, w22, w23
  40666c:	str	w8, [x29, #24]
  406670:	ldp	x9, x8, [x19, #24]
  406674:	ldrsw	x22, [x29, #24]
  406678:	sub	x8, x8, x9
  40667c:	cmp	x8, x22
  406680:	b.cs	406690 <ferror@plt+0x3ae0>  // b.hs, b.nlast
  406684:	mov	x0, x19
  406688:	mov	x1, x22
  40668c:	bl	41659c <_obstack_newchunk@@Base>
  406690:	ldr	x0, [x19, #24]
  406694:	cmp	w21, #0x2
  406698:	b.lt	4066a8 <ferror@plt+0x3af8>  // b.tstop
  40669c:	ldr	x8, [x20, #8]
  4066a0:	ldr	x8, [x8, #8]
  4066a4:	b	4066b0 <ferror@plt+0x3b00>
  4066a8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  4066ac:	add	x8, x8, #0xe37
  4066b0:	add	x1, x8, x23
  4066b4:	mov	x2, x22
  4066b8:	bl	402510 <memcpy@plt>
  4066bc:	ldr	x8, [x19, #24]
  4066c0:	add	x8, x8, x22
  4066c4:	str	x8, [x19, #24]
  4066c8:	ldp	x20, x19, [sp, #48]
  4066cc:	ldp	x22, x21, [sp, #32]
  4066d0:	ldr	x23, [sp, #16]
  4066d4:	ldp	x29, x30, [sp], #64
  4066d8:	ret
  4066dc:	sub	sp, sp, #0x70
  4066e0:	stp	x22, x21, [sp, #80]
  4066e4:	stp	x20, x19, [sp, #96]
  4066e8:	mov	w22, w1
  4066ec:	cmp	w1, #0x2
  4066f0:	mov	x20, x2
  4066f4:	stp	x29, x30, [sp, #64]
  4066f8:	add	x29, sp, #0x40
  4066fc:	b.lt	40670c <ferror@plt+0x3b5c>  // b.tstop
  406700:	ldr	x8, [x20, #8]
  406704:	ldr	x19, [x8, #8]
  406708:	b	406714 <ferror@plt+0x3b64>
  40670c:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x182c>
  406710:	add	x19, x19, #0xe37
  406714:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  406718:	add	x8, x8, #0x978
  40671c:	ldp	q0, q1, [x8]
  406720:	mov	w2, #0x2                   	// #2
  406724:	mov	w3, #0x2                   	// #2
  406728:	mov	w1, w22
  40672c:	stp	q0, q1, [sp, #16]
  406730:	ldr	x0, [x20]
  406734:	bl	406f5c <ferror@plt+0x43ac>
  406738:	tbnz	w0, #0, 40676c <ferror@plt+0x3bbc>
  40673c:	ldrb	w8, [x19]
  406740:	cbz	w8, 40676c <ferror@plt+0x3bbc>
  406744:	bl	407cd8 <ferror@plt+0x5128>
  406748:	str	x19, [sp, #32]
  40674c:	bl	402b30 <__errno_location@plt>
  406750:	mov	x21, x0
  406754:	cmp	w22, #0x1
  406758:	str	wzr, [x0]
  40675c:	b.lt	406774 <ferror@plt+0x3bc4>  // b.tstop
  406760:	ldr	x8, [x20]
  406764:	ldr	x0, [x8, #8]
  406768:	b	40677c <ferror@plt+0x3bcc>
  40676c:	mov	w20, wzr
  406770:	b	4067f0 <ferror@plt+0x3c40>
  406774:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  406778:	add	x0, x0, #0xe37
  40677c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  406780:	sub	x8, x29, #0x4
  406784:	add	x1, x1, #0xeab
  406788:	add	x2, sp, #0x10
  40678c:	mov	w7, #0x1                   	// #1
  406790:	mov	w3, wzr
  406794:	mov	w4, wzr
  406798:	mov	w5, wzr
  40679c:	mov	w6, wzr
  4067a0:	str	x8, [sp, #8]
  4067a4:	strb	wzr, [sp]
  4067a8:	bl	41098c <ferror@plt+0xdddc>
  4067ac:	ldur	w8, [x29, #-4]
  4067b0:	mov	w20, w0
  4067b4:	cbz	w8, 4067c8 <ferror@plt+0x3c18>
  4067b8:	cmp	w20, #0x7f
  4067bc:	b.ne	40680c <ferror@plt+0x3c5c>  // b.any
  4067c0:	lsl	w20, w8, #8
  4067c4:	b	4067f0 <ferror@plt+0x3c40>
  4067c8:	cmp	w20, #0x7f
  4067cc:	b.ne	4067f0 <ferror@plt+0x3c40>  // b.any
  4067d0:	ldr	w1, [x21]
  4067d4:	cbz	w1, 4067f0 <ferror@plt+0x3c40>
  4067d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4067dc:	ldr	w0, [x8, #1224]
  4067e0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4067e4:	add	x2, x2, #0xeb3
  4067e8:	mov	x3, x19
  4067ec:	bl	402cbc <ferror@plt+0x10c>
  4067f0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4067f4:	str	w20, [x8, #2112]
  4067f8:	ldp	x20, x19, [sp, #96]
  4067fc:	ldp	x22, x21, [sp, #80]
  406800:	ldp	x29, x30, [sp, #64]
  406804:	add	sp, sp, #0x70
  406808:	ret
  40680c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  406810:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  406814:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  406818:	add	x0, x0, #0xedc
  40681c:	add	x1, x1, #0xd8a
  406820:	add	x3, x3, #0x99
  406824:	mov	w2, #0x3cf                 	// #975
  406828:	bl	402b20 <__assert_fail@plt>
  40682c:	stp	x29, x30, [sp, #-16]!
  406830:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406834:	ldr	w1, [x8, #2112]
  406838:	mov	x29, sp
  40683c:	bl	403e88 <ferror@plt+0x12d8>
  406840:	ldp	x29, x30, [sp], #16
  406844:	ret
  406848:	stp	x29, x30, [sp, #-32]!
  40684c:	cmp	w1, #0x1
  406850:	stp	x20, x19, [sp, #16]
  406854:	mov	x29, sp
  406858:	b.ne	406870 <ferror@plt+0x3cc0>  // b.any
  40685c:	adrp	x0, 407000 <ferror@plt+0x4450>
  406860:	add	x0, x0, #0x83c
  406864:	mov	x1, xzr
  406868:	bl	40ef78 <ferror@plt+0xc3c8>
  40686c:	b	4068b4 <ferror@plt+0x3d04>
  406870:	cmp	w1, #0x2
  406874:	b.lt	4068b4 <ferror@plt+0x3d04>  // b.tstop
  406878:	mov	w8, w1
  40687c:	add	x19, x2, #0x8
  406880:	sub	x20, x8, #0x1
  406884:	b	406894 <ferror@plt+0x3ce4>
  406888:	subs	x20, x20, #0x1
  40688c:	add	x19, x19, #0x8
  406890:	b.eq	4068b4 <ferror@plt+0x3d04>  // b.none
  406894:	ldr	x8, [x19]
  406898:	mov	w1, wzr
  40689c:	ldr	x0, [x8, #8]
  4068a0:	bl	40ec68 <ferror@plt+0xc0b8>
  4068a4:	cbz	x0, 406888 <ferror@plt+0x3cd8>
  4068a8:	mov	x1, xzr
  4068ac:	bl	40783c <ferror@plt+0x4c8c>
  4068b0:	b	406888 <ferror@plt+0x3cd8>
  4068b4:	ldp	x20, x19, [sp, #16]
  4068b8:	ldp	x29, x30, [sp], #32
  4068bc:	ret
  4068c0:	stp	x29, x30, [sp, #-48]!
  4068c4:	stp	x20, x19, [sp, #32]
  4068c8:	cmp	w1, #0x1
  4068cc:	mov	x19, x0
  4068d0:	str	x21, [sp, #16]
  4068d4:	mov	x29, sp
  4068d8:	b.ne	4068f0 <ferror@plt+0x3d40>  // b.any
  4068dc:	adrp	x0, 407000 <ferror@plt+0x4450>
  4068e0:	add	x0, x0, #0x83c
  4068e4:	mov	x1, x19
  4068e8:	bl	40ef78 <ferror@plt+0xc3c8>
  4068ec:	b	406944 <ferror@plt+0x3d94>
  4068f0:	cmp	w1, #0x2
  4068f4:	b.lt	406944 <ferror@plt+0x3d94>  // b.tstop
  4068f8:	mov	w8, w1
  4068fc:	add	x20, x2, #0x8
  406900:	sub	x21, x8, #0x1
  406904:	b	40691c <ferror@plt+0x3d6c>
  406908:	mov	x1, x19
  40690c:	bl	40783c <ferror@plt+0x4c8c>
  406910:	subs	x21, x21, #0x1
  406914:	add	x20, x20, #0x8
  406918:	b.eq	406944 <ferror@plt+0x3d94>  // b.none
  40691c:	ldr	x8, [x20]
  406920:	mov	w1, wzr
  406924:	ldr	x0, [x8, #8]
  406928:	bl	40ec68 <ferror@plt+0xc0b8>
  40692c:	cbnz	x0, 406908 <ferror@plt+0x3d58>
  406930:	ldr	x8, [x20]
  406934:	mov	w1, #0x1                   	// #1
  406938:	ldr	x0, [x8, #8]
  40693c:	bl	40ec68 <ferror@plt+0xc0b8>
  406940:	b	406908 <ferror@plt+0x3d58>
  406944:	ldp	x20, x19, [sp, #32]
  406948:	ldr	x21, [sp, #16]
  40694c:	ldp	x29, x30, [sp], #48
  406950:	ret
  406954:	stp	x29, x30, [sp, #-80]!
  406958:	stp	x28, x25, [sp, #16]
  40695c:	stp	x24, x23, [sp, #32]
  406960:	stp	x22, x21, [sp, #48]
  406964:	stp	x20, x19, [sp, #64]
  406968:	mov	x29, sp
  40696c:	sub	sp, sp, #0x200
  406970:	mov	x23, x2
  406974:	mov	w24, w1
  406978:	cmp	w1, #0x2
  40697c:	mov	x19, x0
  406980:	b.lt	4069a0 <ferror@plt+0x3df0>  // b.tstop
  406984:	ldr	x8, [x23, #8]
  406988:	ldr	x22, [x8, #8]
  40698c:	cmp	w24, #0x2
  406990:	b.gt	4069b0 <ferror@plt+0x3e00>
  406994:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x182c>
  406998:	add	x21, x21, #0xe37
  40699c:	b	4069b8 <ferror@plt+0x3e08>
  4069a0:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x182c>
  4069a4:	add	x22, x22, #0xe37
  4069a8:	cmp	w24, #0x2
  4069ac:	b.le	406994 <ferror@plt+0x3de4>
  4069b0:	ldr	x8, [x23, #16]
  4069b4:	ldr	x21, [x8, #8]
  4069b8:	ldr	x0, [x23]
  4069bc:	mov	w2, #0x3                   	// #3
  4069c0:	mov	w3, #0x4                   	// #4
  4069c4:	mov	w1, w24
  4069c8:	bl	406f5c <ferror@plt+0x43ac>
  4069cc:	tbnz	w0, #0, 4069f4 <ferror@plt+0x3e44>
  4069d0:	ldrb	w8, [x22]
  4069d4:	cbz	w8, 4069f4 <ferror@plt+0x3e44>
  4069d8:	ldrb	w8, [x21]
  4069dc:	cbz	w8, 4069f4 <ferror@plt+0x3e44>
  4069e0:	cmp	w24, #0x4
  4069e4:	b.lt	406a5c <ferror@plt+0x3eac>  // b.tstop
  4069e8:	ldr	x8, [x23, #24]
  4069ec:	ldr	x20, [x8, #8]
  4069f0:	b	406a64 <ferror@plt+0x3eb4>
  4069f4:	cmp	w24, #0x2
  4069f8:	b.lt	406a40 <ferror@plt+0x3e90>  // b.tstop
  4069fc:	mov	x0, x22
  406a00:	bl	402540 <strlen@plt>
  406a04:	ldp	x9, x8, [x19, #24]
  406a08:	mov	x20, x0
  406a0c:	sub	x8, x8, x9
  406a10:	cmp	x8, x0
  406a14:	b.cs	406a24 <ferror@plt+0x3e74>  // b.hs, b.nlast
  406a18:	mov	x0, x19
  406a1c:	mov	x1, x20
  406a20:	bl	41659c <_obstack_newchunk@@Base>
  406a24:	ldr	x0, [x19, #24]
  406a28:	mov	x1, x22
  406a2c:	mov	x2, x20
  406a30:	bl	402510 <memcpy@plt>
  406a34:	ldr	x8, [x19, #24]
  406a38:	add	x8, x8, x20
  406a3c:	str	x8, [x19, #24]
  406a40:	add	sp, sp, #0x200
  406a44:	ldp	x20, x19, [sp, #64]
  406a48:	ldp	x22, x21, [sp, #48]
  406a4c:	ldp	x24, x23, [sp, #32]
  406a50:	ldp	x28, x25, [sp, #16]
  406a54:	ldp	x29, x30, [sp], #80
  406a58:	ret
  406a5c:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x182c>
  406a60:	add	x20, x20, #0xe37
  406a64:	mov	w1, #0x2d                  	// #45
  406a68:	mov	x0, x20
  406a6c:	bl	402a00 <strchr@plt>
  406a70:	cbz	x0, 406a90 <ferror@plt+0x3ee0>
  406a74:	mov	x0, x20
  406a78:	mov	x1, x19
  406a7c:	bl	40787c <ferror@plt+0x4ccc>
  406a80:	cbz	x0, 406d60 <ferror@plt+0x41b0>
  406a84:	ldrb	w8, [x0]
  406a88:	mov	x20, x0
  406a8c:	cbz	w8, 406d60 <ferror@plt+0x41b0>
  406a90:	ldrb	w8, [x21, #1]
  406a94:	cbz	w8, 406b60 <ferror@plt+0x3fb0>
  406a98:	ldrb	w8, [x21, #2]
  406a9c:	cbz	w8, 406b60 <ferror@plt+0x3fb0>
  406aa0:	mov	w1, #0x2d                  	// #45
  406aa4:	mov	x0, x21
  406aa8:	bl	402a00 <strchr@plt>
  406aac:	cbz	x0, 406acc <ferror@plt+0x3f1c>
  406ab0:	mov	x0, x21
  406ab4:	mov	x1, x19
  406ab8:	bl	40787c <ferror@plt+0x4ccc>
  406abc:	cbz	x0, 406d80 <ferror@plt+0x41d0>
  406ac0:	ldrb	w8, [x0]
  406ac4:	mov	x21, x0
  406ac8:	cbz	w8, 406d80 <ferror@plt+0x41d0>
  406acc:	movi	v0.2d, #0x0
  406ad0:	stp	q0, q0, [sp, #480]
  406ad4:	stp	q0, q0, [sp, #448]
  406ad8:	stp	q0, q0, [sp, #416]
  406adc:	stp	q0, q0, [sp, #384]
  406ae0:	stp	q0, q0, [sp, #352]
  406ae4:	stp	q0, q0, [sp, #320]
  406ae8:	stp	q0, q0, [sp, #288]
  406aec:	stp	q0, q0, [sp, #256]
  406af0:	stp	q0, q0, [sp]
  406af4:	stp	q0, q0, [sp, #32]
  406af8:	stp	q0, q0, [sp, #64]
  406afc:	stp	q0, q0, [sp, #96]
  406b00:	stp	q0, q0, [sp, #128]
  406b04:	stp	q0, q0, [sp, #160]
  406b08:	stp	q0, q0, [sp, #192]
  406b0c:	stp	q0, q0, [sp, #224]
  406b10:	ldrb	w12, [x21]
  406b14:	cbz	w12, 406cb4 <ferror@plt+0x4104>
  406b18:	add	x8, x21, #0x1
  406b1c:	mov	x9, sp
  406b20:	mov	w10, #0x1                   	// #1
  406b24:	add	x11, sp, #0x100
  406b28:	b	406b44 <ferror@plt+0x3f94>
  406b2c:	mov	x13, x20
  406b30:	ldrb	w14, [x13], #1
  406b34:	ldrb	w12, [x8], #1
  406b38:	cmp	w14, #0x0
  406b3c:	csel	x20, x20, x13, eq  // eq = none
  406b40:	cbz	w12, 406cb4 <ferror@plt+0x4104>
  406b44:	and	x12, x12, #0xff
  406b48:	ldrb	w13, [x9, x12]
  406b4c:	cbnz	w13, 406b2c <ferror@plt+0x3f7c>
  406b50:	strb	w10, [x9, x12]
  406b54:	ldrb	w13, [x20]
  406b58:	strb	w13, [x11, x12]
  406b5c:	b	406b2c <ferror@plt+0x3f7c>
  406b60:	mov	x0, x22
  406b64:	bl	402540 <strlen@plt>
  406b68:	ldrb	w1, [x21]
  406b6c:	ldrb	w2, [x21, #1]
  406b70:	mov	x23, x0
  406b74:	mov	x0, x22
  406b78:	mov	x3, x23
  406b7c:	bl	412b4c <ferror@plt+0xff9c>
  406b80:	cbz	x0, 406c7c <ferror@plt+0x40cc>
  406b84:	mov	x24, x0
  406b88:	b	406bbc <ferror@plt+0x400c>
  406b8c:	ldr	x8, [x19, #24]
  406b90:	ldrb	w9, [x20]
  406b94:	add	x10, x8, #0x1
  406b98:	str	x10, [x19, #24]
  406b9c:	strb	w9, [x8]
  406ba0:	ldrb	w1, [x21]
  406ba4:	ldrb	w2, [x21, #1]
  406ba8:	mov	x0, x22
  406bac:	mov	x3, x23
  406bb0:	bl	412b4c <ferror@plt+0xff9c>
  406bb4:	mov	x24, x0
  406bb8:	cbz	x0, 406c7c <ferror@plt+0x40cc>
  406bbc:	ldp	x9, x8, [x19, #24]
  406bc0:	sub	x25, x24, x22
  406bc4:	sub	x8, x8, x9
  406bc8:	cmp	x8, x25
  406bcc:	b.cs	406bdc <ferror@plt+0x402c>  // b.hs, b.nlast
  406bd0:	mov	x0, x19
  406bd4:	mov	x1, x25
  406bd8:	bl	41659c <_obstack_newchunk@@Base>
  406bdc:	ldr	x0, [x19, #24]
  406be0:	mov	x1, x22
  406be4:	mov	x2, x25
  406be8:	bl	402510 <memcpy@plt>
  406bec:	ldr	x8, [x19, #24]
  406bf0:	subs	x10, x23, x25
  406bf4:	add	x8, x8, x25
  406bf8:	str	x8, [x19, #24]
  406bfc:	b.eq	406a40 <ferror@plt+0x3e90>  // b.none
  406c00:	ldrb	w9, [x24], #1
  406c04:	ldrb	w11, [x21]
  406c08:	sub	x23, x10, #0x1
  406c0c:	mov	x22, x24
  406c10:	cmp	w9, w11
  406c14:	b.ne	406c3c <ferror@plt+0x408c>  // b.any
  406c18:	ldrb	w10, [x20]
  406c1c:	cbz	w10, 406c3c <ferror@plt+0x408c>
  406c20:	ldr	x9, [x19, #32]
  406c24:	cmp	x9, x8
  406c28:	b.ne	406b8c <ferror@plt+0x3fdc>  // b.any
  406c2c:	mov	w1, #0x1                   	// #1
  406c30:	mov	x0, x19
  406c34:	bl	41659c <_obstack_newchunk@@Base>
  406c38:	b	406b8c <ferror@plt+0x3fdc>
  406c3c:	ldrb	w8, [x21, #1]
  406c40:	cmp	w9, w8
  406c44:	b.ne	406ba0 <ferror@plt+0x3ff0>  // b.any
  406c48:	ldrb	w8, [x20]
  406c4c:	cbz	w8, 406ba0 <ferror@plt+0x3ff0>
  406c50:	ldrb	w8, [x20, #1]
  406c54:	cbz	w8, 406ba0 <ferror@plt+0x3ff0>
  406c58:	ldp	x9, x8, [x19, #24]
  406c5c:	cmp	x8, x9
  406c60:	b.ne	406c70 <ferror@plt+0x40c0>  // b.any
  406c64:	mov	w1, #0x1                   	// #1
  406c68:	mov	x0, x19
  406c6c:	bl	41659c <_obstack_newchunk@@Base>
  406c70:	ldr	x8, [x19, #24]
  406c74:	ldrb	w9, [x20, #1]
  406c78:	b	406b94 <ferror@plt+0x3fe4>
  406c7c:	ldp	x9, x8, [x19, #24]
  406c80:	sub	x8, x8, x9
  406c84:	cmp	x8, x23
  406c88:	b.cs	406c98 <ferror@plt+0x40e8>  // b.hs, b.nlast
  406c8c:	mov	x0, x19
  406c90:	mov	x1, x23
  406c94:	bl	41659c <_obstack_newchunk@@Base>
  406c98:	ldr	x0, [x19, #24]
  406c9c:	mov	x1, x22
  406ca0:	mov	x2, x23
  406ca4:	bl	402510 <memcpy@plt>
  406ca8:	ldr	x8, [x19, #24]
  406cac:	add	x8, x8, x23
  406cb0:	b	406a3c <ferror@plt+0x3e8c>
  406cb4:	cmp	w24, #0x2
  406cb8:	b.lt	406cc8 <ferror@plt+0x4118>  // b.tstop
  406cbc:	ldr	x8, [x23, #8]
  406cc0:	ldr	x8, [x8, #8]
  406cc4:	b	406cd0 <ferror@plt+0x4120>
  406cc8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  406ccc:	add	x8, x8, #0xe37
  406cd0:	ldrb	w23, [x8]
  406cd4:	cbz	w23, 406a40 <ferror@plt+0x3e90>
  406cd8:	add	x20, x8, #0x1
  406cdc:	mov	x21, sp
  406ce0:	add	x22, sp, #0x100
  406ce4:	b	406d04 <ferror@plt+0x4154>
  406ce8:	ldr	x8, [x19, #24]
  406cec:	ldrb	w9, [x22, x24]
  406cf0:	add	x10, x8, #0x1
  406cf4:	str	x10, [x19, #24]
  406cf8:	strb	w9, [x8]
  406cfc:	ldrb	w23, [x20], #1
  406d00:	cbz	w23, 406a40 <ferror@plt+0x3e90>
  406d04:	and	x24, x23, #0xff
  406d08:	ldrb	w8, [x21, x24]
  406d0c:	cbz	w8, 406d34 <ferror@plt+0x4184>
  406d10:	ldrb	w8, [x22, x24]
  406d14:	cbz	w8, 406cfc <ferror@plt+0x414c>
  406d18:	ldp	x9, x8, [x19, #24]
  406d1c:	cmp	x8, x9
  406d20:	b.ne	406ce8 <ferror@plt+0x4138>  // b.any
  406d24:	mov	w1, #0x1                   	// #1
  406d28:	mov	x0, x19
  406d2c:	bl	41659c <_obstack_newchunk@@Base>
  406d30:	b	406ce8 <ferror@plt+0x4138>
  406d34:	ldp	x9, x8, [x19, #24]
  406d38:	cmp	x8, x9
  406d3c:	b.ne	406d4c <ferror@plt+0x419c>  // b.any
  406d40:	mov	w1, #0x1                   	// #1
  406d44:	mov	x0, x19
  406d48:	bl	41659c <_obstack_newchunk@@Base>
  406d4c:	ldr	x8, [x19, #24]
  406d50:	add	x9, x8, #0x1
  406d54:	str	x9, [x19, #24]
  406d58:	strb	w23, [x8]
  406d5c:	b	406cfc <ferror@plt+0x414c>
  406d60:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  406d64:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  406d68:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  406d6c:	add	x0, x0, #0xce
  406d70:	add	x1, x1, #0xd8a
  406d74:	add	x3, x3, #0xd8
  406d78:	mov	w2, #0x752                 	// #1874
  406d7c:	bl	402b20 <__assert_fail@plt>
  406d80:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  406d84:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  406d88:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  406d8c:	add	x0, x0, #0x10f
  406d90:	add	x1, x1, #0xd8a
  406d94:	add	x3, x3, #0xd8
  406d98:	mov	w2, #0x770                 	// #1904
  406d9c:	bl	402b20 <__assert_fail@plt>
  406da0:	stp	x29, x30, [sp, #-32]!
  406da4:	stp	x20, x19, [sp, #16]
  406da8:	ldr	x0, [x2]
  406dac:	mov	x19, x2
  406db0:	mov	w2, #0x2                   	// #2
  406db4:	mov	w3, #0xffffffff            	// #-1
  406db8:	mov	x29, sp
  406dbc:	mov	w20, w1
  406dc0:	bl	406f5c <ferror@plt+0x43ac>
  406dc4:	cmp	w20, #0x2
  406dc8:	b.lt	406df4 <ferror@plt+0x4244>  // b.tstop
  406dcc:	tbnz	w0, #0, 406df4 <ferror@plt+0x4244>
  406dd0:	mov	w8, w20
  406dd4:	add	x19, x19, #0x8
  406dd8:	sub	x20, x8, #0x1
  406ddc:	ldr	x8, [x19], #8
  406de0:	mov	w1, #0x2                   	// #2
  406de4:	ldr	x0, [x8, #8]
  406de8:	bl	40ec68 <ferror@plt+0xc0b8>
  406dec:	subs	x20, x20, #0x1
  406df0:	b.ne	406ddc <ferror@plt+0x422c>  // b.any
  406df4:	ldp	x20, x19, [sp, #16]
  406df8:	ldp	x29, x30, [sp], #32
  406dfc:	ret
  406e00:	stp	x29, x30, [sp, #-96]!
  406e04:	cmp	w1, #0x1
  406e08:	str	x27, [sp, #16]
  406e0c:	stp	x26, x25, [sp, #32]
  406e10:	stp	x24, x23, [sp, #48]
  406e14:	stp	x22, x21, [sp, #64]
  406e18:	stp	x20, x19, [sp, #80]
  406e1c:	mov	x29, sp
  406e20:	b.ne	406e2c <ferror@plt+0x427c>  // b.any
  406e24:	bl	40e260 <ferror@plt+0xb6b0>
  406e28:	b	406f40 <ferror@plt+0x4390>
  406e2c:	cmp	w1, #0x2
  406e30:	b.lt	406f40 <ferror@plt+0x4390>  // b.tstop
  406e34:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x282c>
  406e38:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x282c>
  406e3c:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x182c>
  406e40:	mov	x19, x2
  406e44:	mov	w24, w1
  406e48:	mov	w25, #0x1                   	// #1
  406e4c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406e50:	adrp	x27, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406e54:	add	x20, x20, #0x134
  406e58:	add	x21, x21, #0x11d
  406e5c:	add	x22, x22, #0xcd0
  406e60:	b	406e88 <ferror@plt+0x42d8>
  406e64:	ldr	x8, [x19]
  406e68:	ldr	w0, [x27, #1224]
  406e6c:	mov	w1, wzr
  406e70:	mov	x2, x22
  406e74:	ldr	x3, [x8, #8]
  406e78:	bl	402cbc <ferror@plt+0x10c>
  406e7c:	add	x25, x25, #0x1
  406e80:	cmp	x24, x25
  406e84:	b.eq	406f40 <ferror@plt+0x4390>  // b.none
  406e88:	ldr	x8, [x19, x25, lsl #3]
  406e8c:	add	x1, x29, #0x18
  406e90:	mov	w2, #0xa                   	// #10
  406e94:	ldr	x0, [x8, #8]
  406e98:	bl	402970 <strtol@plt>
  406e9c:	ldr	x8, [x29, #24]
  406ea0:	ldrb	w8, [x8]
  406ea4:	cbnz	w8, 406ed4 <ferror@plt+0x4324>
  406ea8:	mov	x23, x0
  406eac:	bl	402950 <__ctype_b_loc@plt>
  406eb0:	ldr	x8, [x19, x25, lsl #3]
  406eb4:	ldr	x9, [x0]
  406eb8:	ldr	x8, [x8, #8]
  406ebc:	ldrb	w8, [x8]
  406ec0:	ldrh	w8, [x9, x8, lsl #1]
  406ec4:	tbnz	w8, #13, 406ed4 <ferror@plt+0x4324>
  406ec8:	mov	w0, w23
  406ecc:	bl	40dfcc <ferror@plt+0xb41c>
  406ed0:	b	406e7c <ferror@plt+0x42cc>
  406ed4:	ldr	w8, [x26, #1208]
  406ed8:	cbnz	w8, 406e64 <ferror@plt+0x42b4>
  406edc:	ldr	x8, [x19, x25, lsl #3]
  406ee0:	mov	x1, xzr
  406ee4:	ldr	x0, [x8, #8]
  406ee8:	bl	40e9cc <ferror@plt+0xbe1c>
  406eec:	cbz	x0, 406f24 <ferror@plt+0x4374>
  406ef0:	mov	x23, x0
  406ef4:	bl	40df40 <ferror@plt+0xb390>
  406ef8:	mov	x0, x23
  406efc:	bl	4160c0 <ferror@plt+0x13510>
  406f00:	cmn	w0, #0x1
  406f04:	b.ne	406e7c <ferror@plt+0x42cc>  // b.any
  406f08:	ldr	w23, [x27, #1224]
  406f0c:	bl	402b30 <__errno_location@plt>
  406f10:	ldr	x8, [x19, x25, lsl #3]
  406f14:	ldr	w1, [x0]
  406f18:	mov	w0, w23
  406f1c:	mov	x2, x21
  406f20:	b	406e74 <ferror@plt+0x42c4>
  406f24:	ldr	w23, [x27, #1224]
  406f28:	bl	402b30 <__errno_location@plt>
  406f2c:	ldr	x8, [x19, x25, lsl #3]
  406f30:	ldr	w1, [x0]
  406f34:	mov	w0, w23
  406f38:	mov	x2, x20
  406f3c:	b	406e74 <ferror@plt+0x42c4>
  406f40:	ldp	x20, x19, [sp, #80]
  406f44:	ldp	x22, x21, [sp, #64]
  406f48:	ldp	x24, x23, [sp, #48]
  406f4c:	ldp	x26, x25, [sp, #32]
  406f50:	ldr	x27, [sp, #16]
  406f54:	ldp	x29, x30, [sp], #96
  406f58:	ret
  406f5c:	stp	x29, x30, [sp, #-16]!
  406f60:	cmp	w2, #0x1
  406f64:	mov	x29, sp
  406f68:	b.lt	406fa8 <ferror@plt+0x43f8>  // b.tstop
  406f6c:	cmp	w1, w2
  406f70:	b.ge	406fa8 <ferror@plt+0x43f8>  // b.tcont
  406f74:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406f78:	ldr	w8, [x8, #1220]
  406f7c:	cbnz	w8, 406fa0 <ferror@plt+0x43f0>
  406f80:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406f84:	ldr	w8, [x8, #1224]
  406f88:	ldr	x3, [x0, #8]
  406f8c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  406f90:	add	x2, x2, #0xbbd
  406f94:	mov	w0, w8
  406f98:	mov	w1, wzr
  406f9c:	bl	402cbc <ferror@plt+0x10c>
  406fa0:	mov	w8, #0x1                   	// #1
  406fa4:	b	406fec <ferror@plt+0x443c>
  406fa8:	cmp	w3, #0x1
  406fac:	b.lt	406fe8 <ferror@plt+0x4438>  // b.tstop
  406fb0:	cmp	w1, w3
  406fb4:	mov	w8, wzr
  406fb8:	b.le	406fec <ferror@plt+0x443c>
  406fbc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406fc0:	ldr	w9, [x9, #1220]
  406fc4:	cbnz	w9, 406fec <ferror@plt+0x443c>
  406fc8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  406fcc:	ldr	w8, [x8, #1224]
  406fd0:	ldr	x3, [x0, #8]
  406fd4:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  406fd8:	add	x2, x2, #0xbe8
  406fdc:	mov	w0, w8
  406fe0:	mov	w1, wzr
  406fe4:	bl	402cbc <ferror@plt+0x10c>
  406fe8:	mov	w8, wzr
  406fec:	mov	w0, w8
  406ff0:	ldp	x29, x30, [sp], #16
  406ff4:	ret
  406ff8:	sub	sp, sp, #0x40
  406ffc:	stp	x29, x30, [sp, #16]
  407000:	stp	x22, x21, [sp, #32]
  407004:	stp	x20, x19, [sp, #48]
  407008:	ldrb	w8, [x1]
  40700c:	mov	x22, x2
  407010:	mov	x19, x0
  407014:	add	x29, sp, #0x10
  407018:	cbz	w8, 40705c <ferror@plt+0x44ac>
  40701c:	mov	x20, x1
  407020:	bl	402b30 <__errno_location@plt>
  407024:	mov	x21, x0
  407028:	str	wzr, [x0]
  40702c:	add	x1, sp, #0x8
  407030:	mov	w2, #0xa                   	// #10
  407034:	mov	x0, x20
  407038:	bl	402970 <strtol@plt>
  40703c:	str	w0, [x22]
  407040:	ldr	x8, [sp, #8]
  407044:	ldrb	w8, [x8]
  407048:	cbz	w8, 407070 <ferror@plt+0x44c0>
  40704c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  407050:	mov	w20, wzr
  407054:	add	x2, x2, #0xcd0
  407058:	b	4070ac <ferror@plt+0x44fc>
  40705c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  407060:	str	wzr, [x22]
  407064:	mov	w20, #0x1                   	// #1
  407068:	add	x2, x2, #0xca6
  40706c:	b	4070ac <ferror@plt+0x44fc>
  407070:	bl	402950 <__ctype_b_loc@plt>
  407074:	ldr	x8, [x0]
  407078:	ldrb	w9, [x20]
  40707c:	ldrh	w8, [x8, x9, lsl #1]
  407080:	tbnz	w8, #13, 4070a0 <ferror@plt+0x44f0>
  407084:	ldr	w8, [x21]
  407088:	mov	w20, #0x1                   	// #1
  40708c:	cmp	w8, #0x22
  407090:	b.ne	4070c0 <ferror@plt+0x4510>  // b.any
  407094:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  407098:	add	x2, x2, #0xd20
  40709c:	b	4070ac <ferror@plt+0x44fc>
  4070a0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  4070a4:	mov	w20, #0x1                   	// #1
  4070a8:	add	x2, x2, #0xcf5
  4070ac:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4070b0:	ldr	w0, [x8, #1224]
  4070b4:	ldr	x3, [x19, #8]
  4070b8:	mov	w1, wzr
  4070bc:	bl	402cbc <ferror@plt+0x10c>
  4070c0:	mov	w0, w20
  4070c4:	ldp	x20, x19, [sp, #48]
  4070c8:	ldp	x22, x21, [sp, #32]
  4070cc:	ldp	x29, x30, [sp, #16]
  4070d0:	add	sp, sp, #0x40
  4070d4:	ret
  4070d8:	stp	x29, x30, [sp, #-48]!
  4070dc:	stp	x22, x21, [sp, #16]
  4070e0:	stp	x20, x19, [sp, #32]
  4070e4:	ldr	x8, [x1]
  4070e8:	mov	w20, w0
  4070ec:	mov	w19, w2
  4070f0:	mov	x21, x1
  4070f4:	mov	w2, #0x2                   	// #2
  4070f8:	mov	w3, #0x3                   	// #3
  4070fc:	mov	x0, x8
  407100:	mov	w1, w20
  407104:	mov	x29, sp
  407108:	bl	406f5c <ferror@plt+0x43ac>
  40710c:	tbnz	w0, #0, 4071a4 <ferror@plt+0x45f4>
  407110:	ldr	x22, [x21, #8]
  407114:	ldr	w8, [x22]
  407118:	cmp	w8, #0x1
  40711c:	b.ne	407140 <ferror@plt+0x4590>  // b.any
  407120:	cmp	w20, #0x2
  407124:	b.ne	40715c <ferror@plt+0x45ac>  // b.any
  407128:	ldr	x0, [x22, #8]
  40712c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  407130:	add	x1, x1, #0xe37
  407134:	mov	w2, w19
  407138:	bl	403960 <ferror@plt+0xdb0>
  40713c:	b	4071a4 <ferror@plt+0x45f4>
  407140:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407144:	ldr	w0, [x8, #1224]
  407148:	cmp	w20, #0x1
  40714c:	b.lt	40718c <ferror@plt+0x45dc>  // b.tstop
  407150:	ldr	x8, [x21]
  407154:	ldr	x3, [x8, #8]
  407158:	b	407194 <ferror@plt+0x45e4>
  40715c:	ldr	x8, [x21, #16]
  407160:	ldr	w9, [x8]
  407164:	cmp	w9, #0x2
  407168:	b.eq	4071b4 <ferror@plt+0x4604>  // b.none
  40716c:	cmp	w9, #0x1
  407170:	b.ne	407200 <ferror@plt+0x4650>  // b.any
  407174:	cmp	w20, #0x2
  407178:	b.lt	4071d4 <ferror@plt+0x4624>  // b.tstop
  40717c:	ldr	x0, [x22, #8]
  407180:	cmp	w20, #0x2
  407184:	b.le	40712c <ferror@plt+0x457c>
  407188:	b	4071e4 <ferror@plt+0x4634>
  40718c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  407190:	add	x3, x3, #0xe37
  407194:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  407198:	add	x2, x2, #0xc1a
  40719c:	mov	w1, wzr
  4071a0:	bl	402cbc <ferror@plt+0x10c>
  4071a4:	ldp	x20, x19, [sp, #32]
  4071a8:	ldp	x22, x21, [sp, #16]
  4071ac:	ldp	x29, x30, [sp], #48
  4071b0:	ret
  4071b4:	ldr	x0, [x8, #8]
  4071b8:	bl	403738 <ferror@plt+0xb88>
  4071bc:	cbz	x0, 4071a4 <ferror@plt+0x45f4>
  4071c0:	mov	x1, x0
  4071c4:	cmp	w20, #0x2
  4071c8:	b.lt	4071ec <ferror@plt+0x463c>  // b.tstop
  4071cc:	ldr	x0, [x22, #8]
  4071d0:	b	4071f4 <ferror@plt+0x4644>
  4071d4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  4071d8:	add	x0, x0, #0xe37
  4071dc:	cmp	w20, #0x2
  4071e0:	b.le	40712c <ferror@plt+0x457c>
  4071e4:	ldr	x1, [x8, #8]
  4071e8:	b	407134 <ferror@plt+0x4584>
  4071ec:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  4071f0:	add	x0, x0, #0xe37
  4071f4:	mov	w2, w19
  4071f8:	bl	403814 <ferror@plt+0xc64>
  4071fc:	b	4071a4 <ferror@plt+0x45f4>
  407200:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407204:	ldr	w0, [x8, #1224]
  407208:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  40720c:	add	x2, x2, #0xd4a
  407210:	mov	w1, wzr
  407214:	bl	402cbc <ferror@plt+0x10c>
  407218:	bl	4028d0 <abort@plt>
  40721c:	stp	x29, x30, [sp, #-48]!
  407220:	stp	x20, x19, [sp, #32]
  407224:	ldrb	w8, [x0, #8]
  407228:	str	x21, [sp, #16]
  40722c:	mov	x29, sp
  407230:	tbnz	w8, #1, 40728c <ferror@plt+0x46dc>
  407234:	ldr	w8, [x0, #24]
  407238:	mov	x19, x0
  40723c:	cbz	w8, 40728c <ferror@plt+0x46dc>
  407240:	ldr	x21, [x1]
  407244:	mov	x20, x1
  407248:	ldp	x9, x8, [x21, #24]
  40724c:	sub	x8, x8, x9
  407250:	cmp	x8, #0x7
  407254:	b.hi	407264 <ferror@plt+0x46b4>  // b.pmore
  407258:	mov	w1, #0x8                   	// #8
  40725c:	mov	x0, x21
  407260:	bl	41659c <_obstack_newchunk@@Base>
  407264:	ldr	x8, [x21, #24]
  407268:	add	x8, x8, #0x8
  40726c:	str	x8, [x21, #24]
  407270:	ldr	x8, [x20]
  407274:	ldrsw	x9, [x20, #16]
  407278:	ldr	x8, [x8, #16]
  40727c:	add	w10, w9, #0x1
  407280:	str	w10, [x20, #16]
  407284:	str	x8, [x20, #8]
  407288:	str	x19, [x8, x9, lsl #3]
  40728c:	ldp	x20, x19, [sp, #32]
  407290:	ldr	x21, [sp, #16]
  407294:	ldp	x29, x30, [sp], #48
  407298:	ret
  40729c:	stp	x29, x30, [sp, #-16]!
  4072a0:	ldr	x8, [x0]
  4072a4:	ldr	x9, [x1]
  4072a8:	mov	x29, sp
  4072ac:	ldr	x0, [x8, #16]
  4072b0:	ldr	x1, [x9, #16]
  4072b4:	bl	402940 <strcmp@plt>
  4072b8:	ldp	x29, x30, [sp], #16
  4072bc:	ret
  4072c0:	stp	x29, x30, [sp, #-48]!
  4072c4:	stp	x20, x19, [sp, #32]
  4072c8:	ldr	x8, [x1]
  4072cc:	mov	w20, w0
  4072d0:	str	x21, [sp, #16]
  4072d4:	mov	w21, w2
  4072d8:	mov	x19, x1
  4072dc:	mov	w2, #0x2                   	// #2
  4072e0:	mov	w3, #0x2                   	// #2
  4072e4:	mov	x0, x8
  4072e8:	mov	w1, w20
  4072ec:	mov	x29, sp
  4072f0:	bl	406f5c <ferror@plt+0x43ac>
  4072f4:	tbnz	w0, #0, 407384 <ferror@plt+0x47d4>
  4072f8:	cmp	w20, #0x2
  4072fc:	b.lt	40730c <ferror@plt+0x475c>  // b.tstop
  407300:	ldr	x8, [x19, #8]
  407304:	ldr	x0, [x8, #8]
  407308:	b	407314 <ferror@plt+0x4764>
  40730c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  407310:	add	x0, x0, #0xe37
  407314:	add	x1, x29, #0x18
  407318:	bl	40e9cc <ferror@plt+0xbe1c>
  40731c:	cbz	x0, 407338 <ferror@plt+0x4788>
  407320:	ldr	x1, [x29, #24]
  407324:	mov	w2, #0x1                   	// #1
  407328:	bl	40a9dc <ferror@plt+0x7e2c>
  40732c:	ldr	x0, [x29, #24]
  407330:	bl	4029a0 <free@plt>
  407334:	b	407384 <ferror@plt+0x47d4>
  407338:	tbnz	w21, #0, 407384 <ferror@plt+0x47d4>
  40733c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407340:	ldr	w21, [x8, #1224]
  407344:	bl	402b30 <__errno_location@plt>
  407348:	ldr	w1, [x0]
  40734c:	cmp	w20, #0x2
  407350:	b.lt	407360 <ferror@plt+0x47b0>  // b.tstop
  407354:	ldr	x8, [x19, #8]
  407358:	ldr	x3, [x8, #8]
  40735c:	b	407368 <ferror@plt+0x47b8>
  407360:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  407364:	add	x3, x3, #0xe37
  407368:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  40736c:	add	x2, x2, #0x4af
  407370:	mov	w0, w21
  407374:	bl	402cbc <ferror@plt+0x10c>
  407378:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40737c:	mov	w9, #0x1                   	// #1
  407380:	str	w9, [x8, #3496]
  407384:	ldp	x20, x19, [sp, #32]
  407388:	ldr	x21, [sp, #16]
  40738c:	ldp	x29, x30, [sp], #48
  407390:	ret
  407394:	stp	x29, x30, [sp, #-64]!
  407398:	stp	x24, x23, [sp, #16]
  40739c:	stp	x22, x21, [sp, #32]
  4073a0:	stp	x20, x19, [sp, #48]
  4073a4:	adrp	x24, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4073a8:	ldp	x9, x8, [x0, #24]
  4073ac:	ldr	x23, [x24, #3520]
  4073b0:	mov	x22, x3
  4073b4:	mov	x20, x2
  4073b8:	sub	x8, x8, x9
  4073bc:	mov	x19, x0
  4073c0:	cmp	x8, x23
  4073c4:	mov	x21, x1
  4073c8:	mov	x29, sp
  4073cc:	b.cs	4073dc <ferror@plt+0x482c>  // b.hs, b.nlast
  4073d0:	mov	x0, x19
  4073d4:	mov	x1, x23
  4073d8:	bl	41659c <_obstack_newchunk@@Base>
  4073dc:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4073e0:	ldr	x0, [x19, #24]
  4073e4:	ldr	x1, [x8, #3512]
  4073e8:	mov	x2, x23
  4073ec:	bl	402510 <memcpy@plt>
  4073f0:	ldp	x8, x9, [x19, #24]
  4073f4:	add	x8, x8, x23
  4073f8:	sub	x9, x9, x8
  4073fc:	cmp	x9, x22
  407400:	str	x8, [x19, #24]
  407404:	b.cs	407414 <ferror@plt+0x4864>  // b.hs, b.nlast
  407408:	mov	x0, x19
  40740c:	mov	x1, x22
  407410:	bl	41659c <_obstack_newchunk@@Base>
  407414:	ldr	x0, [x19, #24]
  407418:	mov	x1, x20
  40741c:	mov	x2, x22
  407420:	bl	402510 <memcpy@plt>
  407424:	ldr	x8, [x19, #24]
  407428:	add	x8, x8, x22
  40742c:	str	x8, [x19, #24]
  407430:	cbz	x22, 407468 <ferror@plt+0x48b8>
  407434:	add	x8, x22, x20
  407438:	mov	x9, xzr
  40743c:	sub	x10, x8, #0x1
  407440:	ldrb	w8, [x10]
  407444:	cmp	w8, #0x58
  407448:	b.ne	407470 <ferror@plt+0x48c0>  // b.any
  40744c:	add	x8, x9, #0x1
  407450:	cbz	x22, 407474 <ferror@plt+0x48c4>
  407454:	cmp	x9, #0x5
  407458:	sub	x10, x10, #0x1
  40745c:	mov	x9, x8
  407460:	b.cc	407440 <ferror@plt+0x4890>  // b.lo, b.ul, b.last
  407464:	b	407474 <ferror@plt+0x48c4>
  407468:	mov	x8, xzr
  40746c:	b	407474 <ferror@plt+0x48c4>
  407470:	mov	x8, x9
  407474:	ldp	x10, x9, [x19, #24]
  407478:	mov	w12, #0x7                   	// #7
  40747c:	mov	w11, #0x6                   	// #6
  407480:	sub	x1, x12, x8
  407484:	sub	x9, x9, x10
  407488:	cmp	x9, x1
  40748c:	sub	x22, x11, x8
  407490:	b.cs	40749c <ferror@plt+0x48ec>  // b.hs, b.nlast
  407494:	mov	x0, x19
  407498:	bl	41659c <_obstack_newchunk@@Base>
  40749c:	ldr	x0, [x19, #24]
  4074a0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  4074a4:	add	x1, x1, #0x9f8
  4074a8:	mov	x2, x22
  4074ac:	bl	402510 <memcpy@plt>
  4074b0:	ldr	x8, [x19, #24]
  4074b4:	add	x8, x8, x22
  4074b8:	add	x9, x8, #0x1
  4074bc:	str	x9, [x19, #24]
  4074c0:	strb	wzr, [x8]
  4074c4:	ldr	x8, [x19, #16]
  4074c8:	ldr	x9, [x24, #3520]
  4074cc:	add	x23, x8, x9
  4074d0:	bl	402b30 <__errno_location@plt>
  4074d4:	mov	x22, x0
  4074d8:	str	wzr, [x0]
  4074dc:	mov	x0, x23
  4074e0:	bl	414ccc <ferror@plt+0x1211c>
  4074e4:	tbnz	w0, #31, 40753c <ferror@plt+0x498c>
  4074e8:	bl	402860 <close@plt>
  4074ec:	ldp	x8, x9, [x19, #24]
  4074f0:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4074f4:	sub	x8, x8, #0x1
  4074f8:	str	x8, [x19, #24]
  4074fc:	ldr	x20, [x10, #3576]
  407500:	sub	x8, x9, x8
  407504:	cmp	x8, x20
  407508:	b.cs	407518 <ferror@plt+0x4968>  // b.hs, b.nlast
  40750c:	mov	x0, x19
  407510:	mov	x1, x20
  407514:	bl	41659c <_obstack_newchunk@@Base>
  407518:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40751c:	ldr	x0, [x19, #24]
  407520:	ldr	x1, [x8, #3568]
  407524:	mov	x2, x20
  407528:	bl	402510 <memcpy@plt>
  40752c:	ldr	x8, [x19, #24]
  407530:	add	x8, x8, x20
  407534:	str	x8, [x19, #24]
  407538:	b	4075c8 <ferror@plt+0x4a18>
  40753c:	ldr	w1, [x22]
  407540:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  407544:	add	x2, x2, #0xfa4
  407548:	mov	w0, wzr
  40754c:	mov	x3, x21
  407550:	mov	x4, x20
  407554:	bl	402cbc <ferror@plt+0x10c>
  407558:	ldp	x1, x8, [x19, #16]
  40755c:	cmp	x8, x1
  407560:	b.ne	407570 <ferror@plt+0x49c0>  // b.any
  407564:	ldrb	w8, [x19, #80]
  407568:	orr	w8, w8, #0x2
  40756c:	strb	w8, [x19, #80]
  407570:	ldr	x9, [x19, #48]
  407574:	ldp	x10, x8, [x19, #24]
  407578:	ldr	x11, [x19, #8]
  40757c:	add	x10, x9, x10
  407580:	bic	x9, x10, x9
  407584:	sub	x10, x9, x11
  407588:	sub	x11, x8, x11
  40758c:	cmp	x10, x11
  407590:	str	x9, [x19, #24]
  407594:	b.ls	40759c <ferror@plt+0x49ec>  // b.plast
  407598:	str	x8, [x19, #24]
  40759c:	ldr	x9, [x19, #24]
  4075a0:	cmp	x1, x8
  4075a4:	str	x9, [x19, #16]
  4075a8:	b.cs	4075c0 <ferror@plt+0x4a10>  // b.hs, b.nlast
  4075ac:	ldr	x8, [x19, #8]
  4075b0:	cmp	x1, x8
  4075b4:	b.ls	4075c0 <ferror@plt+0x4a10>  // b.plast
  4075b8:	stp	x1, x1, [x19, #16]
  4075bc:	b	4075c8 <ferror@plt+0x4a18>
  4075c0:	mov	x0, x19
  4075c4:	bl	41674c <_obstack_free@@Base>
  4075c8:	ldp	x20, x19, [sp, #48]
  4075cc:	ldp	x22, x21, [sp, #32]
  4075d0:	ldp	x24, x23, [sp, #16]
  4075d4:	ldp	x29, x30, [sp], #64
  4075d8:	ret
  4075dc:	stp	x29, x30, [sp, #-96]!
  4075e0:	stp	x22, x21, [sp, #64]
  4075e4:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x282c>
  4075e8:	stp	x28, x27, [sp, #16]
  4075ec:	stp	x26, x25, [sp, #32]
  4075f0:	stp	x24, x23, [sp, #48]
  4075f4:	stp	x20, x19, [sp, #80]
  4075f8:	mov	x19, x3
  4075fc:	mov	x26, x2
  407600:	mov	x20, x1
  407604:	mov	x21, x0
  407608:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40760c:	add	x22, x22, #0x26
  407610:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407614:	mov	x29, sp
  407618:	b	407640 <ferror@plt+0x4a90>
  40761c:	ldr	x0, [x21, #24]
  407620:	mov	x1, x26
  407624:	mov	x2, x25
  407628:	bl	402510 <memcpy@plt>
  40762c:	ldr	x9, [x21, #24]
  407630:	mov	w8, wzr
  407634:	add	x9, x9, x25
  407638:	str	x9, [x21, #24]
  40763c:	tbz	w8, #0, 407820 <ferror@plt+0x4c70>
  407640:	mov	w1, #0x5c                  	// #92
  407644:	mov	x0, x26
  407648:	bl	402a00 <strchr@plt>
  40764c:	cbz	x0, 407700 <ferror@plt+0x4b50>
  407650:	ldp	x9, x8, [x21, #24]
  407654:	sub	x27, x0, x26
  407658:	mov	x23, x0
  40765c:	mov	x25, x0
  407660:	sub	x8, x8, x9
  407664:	cmp	x8, x27
  407668:	b.cs	407678 <ferror@plt+0x4ac8>  // b.hs, b.nlast
  40766c:	mov	x0, x21
  407670:	mov	x1, x27
  407674:	bl	41659c <_obstack_newchunk@@Base>
  407678:	ldr	x0, [x21, #24]
  40767c:	mov	x1, x26
  407680:	mov	x2, x27
  407684:	bl	402510 <memcpy@plt>
  407688:	ldr	x8, [x21, #24]
  40768c:	add	x8, x8, x27
  407690:	str	x8, [x21, #24]
  407694:	ldrb	w26, [x25, #1]!
  407698:	sub	w9, w26, #0x31
  40769c:	cmp	w9, #0x9
  4076a0:	b.cs	407740 <ferror@plt+0x4b90>  // b.hs, b.nlast
  4076a4:	ldr	w8, [x19]
  4076a8:	sub	w3, w26, #0x30
  4076ac:	sub	w8, w8, #0x1
  4076b0:	cmp	w8, w3
  4076b4:	b.ls	40772c <ferror@plt+0x4b7c>  // b.plast
  4076b8:	ldr	x8, [x19, #16]
  4076bc:	ldrsw	x8, [x8, w3, sxtw #2]
  4076c0:	cmp	w8, #0x1
  4076c4:	b.lt	4077c8 <ferror@plt+0x4c18>  // b.tstop
  4076c8:	ldr	x9, [x19, #8]
  4076cc:	sxtw	x25, w3
  4076d0:	ldp	x11, x10, [x21, #24]
  4076d4:	ldrsw	x9, [x9, x25, lsl #2]
  4076d8:	sub	x26, x8, x9
  4076dc:	sub	x8, x10, x11
  4076e0:	cmp	x8, x26
  4076e4:	b.cs	4076f4 <ferror@plt+0x4b44>  // b.hs, b.nlast
  4076e8:	mov	x0, x21
  4076ec:	mov	x1, x26
  4076f0:	bl	41659c <_obstack_newchunk@@Base>
  4076f4:	ldr	x8, [x19, #8]
  4076f8:	ldrsw	x8, [x8, x25, lsl #2]
  4076fc:	b	4077ac <ferror@plt+0x4bfc>
  407700:	mov	x0, x26
  407704:	bl	402540 <strlen@plt>
  407708:	ldp	x9, x8, [x21, #24]
  40770c:	mov	x25, x0
  407710:	sub	x8, x8, x9
  407714:	cmp	x8, x0
  407718:	b.cs	40761c <ferror@plt+0x4a6c>  // b.hs, b.nlast
  40771c:	mov	x0, x21
  407720:	mov	x1, x25
  407724:	bl	41659c <_obstack_newchunk@@Base>
  407728:	b	40761c <ferror@plt+0x4a6c>
  40772c:	ldr	w0, [x28, #1224]
  407730:	mov	w1, wzr
  407734:	mov	x2, x22
  407738:	bl	402cbc <ferror@plt+0x10c>
  40773c:	b	4077c8 <ferror@plt+0x4c18>
  407740:	cbz	w26, 4077d4 <ferror@plt+0x4c24>
  407744:	cmp	w26, #0x26
  407748:	b.eq	407778 <ferror@plt+0x4bc8>  // b.none
  40774c:	cmp	w26, #0x30
  407750:	b.ne	4077f4 <ferror@plt+0x4c44>  // b.any
  407754:	ldrb	w8, [x24, #2116]
  407758:	tbnz	w8, #0, 407778 <ferror@plt+0x4bc8>
  40775c:	ldr	w0, [x28, #1224]
  407760:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  407764:	mov	w1, wzr
  407768:	add	x2, x2, #0xfeb
  40776c:	bl	402cbc <ferror@plt+0x10c>
  407770:	mov	w8, #0x1                   	// #1
  407774:	strb	w8, [x24, #2116]
  407778:	ldp	x9, x8, [x19, #8]
  40777c:	ldp	x11, x10, [x21, #24]
  407780:	ldrsw	x8, [x8]
  407784:	ldrsw	x9, [x9]
  407788:	sub	x26, x8, x9
  40778c:	sub	x8, x10, x11
  407790:	cmp	x8, x26
  407794:	b.cs	4077a4 <ferror@plt+0x4bf4>  // b.hs, b.nlast
  407798:	mov	x0, x21
  40779c:	mov	x1, x26
  4077a0:	bl	41659c <_obstack_newchunk@@Base>
  4077a4:	ldr	x8, [x19, #8]
  4077a8:	ldrsw	x8, [x8]
  4077ac:	ldr	x0, [x21, #24]
  4077b0:	add	x1, x20, x8
  4077b4:	mov	x2, x26
  4077b8:	bl	402510 <memcpy@plt>
  4077bc:	ldr	x8, [x21, #24]
  4077c0:	add	x8, x8, x26
  4077c4:	str	x8, [x21, #24]
  4077c8:	add	x26, x23, #0x2
  4077cc:	mov	w8, #0x1                   	// #1
  4077d0:	b	40763c <ferror@plt+0x4a8c>
  4077d4:	ldr	w0, [x28, #1224]
  4077d8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4077dc:	mov	w1, wzr
  4077e0:	add	x2, x2, #0x4d
  4077e4:	bl	402cbc <ferror@plt+0x10c>
  4077e8:	mov	w8, wzr
  4077ec:	mov	x26, x25
  4077f0:	b	40763c <ferror@plt+0x4a8c>
  4077f4:	ldr	x9, [x21, #32]
  4077f8:	cmp	x9, x8
  4077fc:	b.ne	40780c <ferror@plt+0x4c5c>  // b.any
  407800:	mov	w1, #0x1                   	// #1
  407804:	mov	x0, x21
  407808:	bl	41659c <_obstack_newchunk@@Base>
  40780c:	ldr	x8, [x21, #24]
  407810:	add	x9, x8, #0x1
  407814:	str	x9, [x21, #24]
  407818:	strb	w26, [x8]
  40781c:	b	4077c8 <ferror@plt+0x4c18>
  407820:	ldp	x20, x19, [sp, #80]
  407824:	ldp	x22, x21, [sp, #64]
  407828:	ldp	x24, x23, [sp, #48]
  40782c:	ldp	x26, x25, [sp, #32]
  407830:	ldp	x28, x27, [sp, #16]
  407834:	ldp	x29, x30, [sp], #96
  407838:	ret
  40783c:	stp	x29, x30, [sp, #-16]!
  407840:	ldrb	w8, [x0, #8]
  407844:	cmp	x1, #0x0
  407848:	cset	w9, ne  // ne = any
  40784c:	mov	x29, sp
  407850:	and	w8, w8, #0xfe
  407854:	orr	w8, w8, w9
  407858:	strb	w8, [x0, #8]
  40785c:	cbnz	x1, 407874 <ferror@plt+0x4cc4>
  407860:	ldr	w8, [x0, #24]
  407864:	cbnz	w8, 407874 <ferror@plt+0x4cc4>
  407868:	ldr	x0, [x0, #16]
  40786c:	mov	w1, #0x4                   	// #4
  407870:	bl	40ec68 <ferror@plt+0xc0b8>
  407874:	ldp	x29, x30, [sp], #16
  407878:	ret
  40787c:	stp	x29, x30, [sp, #-48]!
  407880:	stp	x22, x21, [sp, #16]
  407884:	stp	x20, x19, [sp, #32]
  407888:	mov	x19, x1
  40788c:	mov	x20, x0
  407890:	mov	w22, wzr
  407894:	mov	x29, sp
  407898:	b	4078b4 <ferror@plt+0x4d04>
  40789c:	ldr	x8, [x19, #24]
  4078a0:	ldrb	w9, [x20]
  4078a4:	add	x10, x8, #0x1
  4078a8:	str	x10, [x19, #24]
  4078ac:	strb	w9, [x8]
  4078b0:	ldrb	w22, [x20], #1
  4078b4:	ldrb	w8, [x20]
  4078b8:	cmp	w8, #0x2d
  4078bc:	b.eq	4078c8 <ferror@plt+0x4d18>  // b.none
  4078c0:	cbnz	w8, 407958 <ferror@plt+0x4da8>
  4078c4:	b	4079a0 <ferror@plt+0x4df0>
  4078c8:	tst	w22, #0xff
  4078cc:	b.eq	407958 <ferror@plt+0x4da8>  // b.none
  4078d0:	ldrb	w21, [x20, #1]!
  4078d4:	cbz	w21, 407974 <ferror@plt+0x4dc4>
  4078d8:	cmp	w21, w22, uxtb
  4078dc:	b.cc	407930 <ferror@plt+0x4d80>  // b.lo, b.ul, b.last
  4078e0:	b.hi	407900 <ferror@plt+0x4d50>  // b.pmore
  4078e4:	b	4078b0 <ferror@plt+0x4d00>
  4078e8:	ldr	x8, [x19, #24]
  4078ec:	cmp	w21, w22, uxtb
  4078f0:	add	x9, x8, #0x1
  4078f4:	str	x9, [x19, #24]
  4078f8:	strb	w22, [x8]
  4078fc:	b.ls	4078b0 <ferror@plt+0x4d00>  // b.plast
  407900:	ldp	x9, x8, [x19, #24]
  407904:	add	w22, w22, #0x1
  407908:	cmp	x8, x9
  40790c:	b.ne	4078e8 <ferror@plt+0x4d38>  // b.any
  407910:	mov	w1, #0x1                   	// #1
  407914:	mov	x0, x19
  407918:	bl	41659c <_obstack_newchunk@@Base>
  40791c:	b	4078e8 <ferror@plt+0x4d38>
  407920:	ldr	x8, [x19, #24]
  407924:	add	x9, x8, #0x1
  407928:	str	x9, [x19, #24]
  40792c:	strb	w22, [x8]
  407930:	sub	w22, w22, #0x1
  407934:	cmp	w21, w22, uxtb
  407938:	b.hi	4078b0 <ferror@plt+0x4d00>  // b.pmore
  40793c:	ldp	x9, x8, [x19, #24]
  407940:	cmp	x8, x9
  407944:	b.ne	407920 <ferror@plt+0x4d70>  // b.any
  407948:	mov	w1, #0x1                   	// #1
  40794c:	mov	x0, x19
  407950:	bl	41659c <_obstack_newchunk@@Base>
  407954:	b	407920 <ferror@plt+0x4d70>
  407958:	ldp	x9, x8, [x19, #24]
  40795c:	cmp	x8, x9
  407960:	b.ne	40789c <ferror@plt+0x4cec>  // b.any
  407964:	mov	w1, #0x1                   	// #1
  407968:	mov	x0, x19
  40796c:	bl	41659c <_obstack_newchunk@@Base>
  407970:	b	40789c <ferror@plt+0x4cec>
  407974:	ldp	x9, x8, [x19, #24]
  407978:	cmp	x8, x9
  40797c:	b.ne	40798c <ferror@plt+0x4ddc>  // b.any
  407980:	mov	w1, #0x1                   	// #1
  407984:	mov	x0, x19
  407988:	bl	41659c <_obstack_newchunk@@Base>
  40798c:	ldr	x8, [x19, #24]
  407990:	mov	w9, #0x2d                  	// #45
  407994:	add	x10, x8, #0x1
  407998:	str	x10, [x19, #24]
  40799c:	strb	w9, [x8]
  4079a0:	ldp	x9, x8, [x19, #24]
  4079a4:	cmp	x8, x9
  4079a8:	b.ne	4079b8 <ferror@plt+0x4e08>  // b.any
  4079ac:	mov	w1, #0x1                   	// #1
  4079b0:	mov	x0, x19
  4079b4:	bl	41659c <_obstack_newchunk@@Base>
  4079b8:	ldr	x8, [x19, #24]
  4079bc:	add	x9, x8, #0x1
  4079c0:	str	x9, [x19, #24]
  4079c4:	strb	wzr, [x8]
  4079c8:	ldp	x0, x8, [x19, #16]
  4079cc:	cmp	x8, x0
  4079d0:	b.ne	4079e0 <ferror@plt+0x4e30>  // b.any
  4079d4:	ldrb	w8, [x19, #80]
  4079d8:	orr	w8, w8, #0x2
  4079dc:	strb	w8, [x19, #80]
  4079e0:	ldr	x9, [x19, #48]
  4079e4:	ldp	x10, x8, [x19, #24]
  4079e8:	ldr	x11, [x19, #8]
  4079ec:	add	x10, x9, x10
  4079f0:	bic	x9, x10, x9
  4079f4:	sub	x10, x9, x11
  4079f8:	sub	x11, x8, x11
  4079fc:	cmp	x10, x11
  407a00:	str	x9, [x19, #24]
  407a04:	b.ls	407a0c <ferror@plt+0x4e5c>  // b.plast
  407a08:	str	x8, [x19, #24]
  407a0c:	ldr	x8, [x19, #24]
  407a10:	str	x8, [x19, #16]
  407a14:	ldp	x20, x19, [sp, #32]
  407a18:	ldp	x22, x21, [sp, #16]
  407a1c:	ldp	x29, x30, [sp], #48
  407a20:	ret
  407a24:	stp	x29, x30, [sp, #-16]!
  407a28:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407a2c:	ldr	x0, [x8, #1064]
  407a30:	mov	x29, sp
  407a34:	bl	407a64 <ferror@plt+0x4eb4>
  407a38:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407a3c:	adrp	x3, 415000 <ferror@plt+0x12450>
  407a40:	adrp	x4, 402000 <mbrtowc@plt-0x500>
  407a44:	add	x0, x0, #0x850
  407a48:	add	x3, x3, #0x7d0
  407a4c:	add	x4, x4, #0x9a0
  407a50:	mov	x1, xzr
  407a54:	mov	x2, xzr
  407a58:	bl	4164b4 <_obstack_begin@@Base>
  407a5c:	ldp	x29, x30, [sp], #16
  407a60:	ret
  407a64:	sub	sp, sp, #0x140
  407a68:	stp	x22, x21, [sp, #288]
  407a6c:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407a70:	stp	x20, x19, [sp, #304]
  407a74:	mov	x19, x0
  407a78:	ldr	x0, [x21, #2120]
  407a7c:	stp	x28, x23, [sp, #272]
  407a80:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407a84:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407a88:	stp	x29, x30, [sp, #256]
  407a8c:	add	x29, sp, #0x100
  407a90:	cbz	x0, 407ae0 <ferror@plt+0x4f30>
  407a94:	ldr	x8, [x23, #1064]
  407a98:	cmp	x0, x8
  407a9c:	b.eq	407ae0 <ferror@plt+0x4f30>  // b.none
  407aa0:	ldr	x8, [x22, #1088]
  407aa4:	cmp	x0, x8
  407aa8:	b.eq	407ae0 <ferror@plt+0x4f30>  // b.none
  407aac:	bl	410760 <ferror@plt+0xdbb0>
  407ab0:	cbz	w0, 407ae0 <ferror@plt+0x4f30>
  407ab4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407ab8:	ldr	w20, [x8, #1224]
  407abc:	bl	402b30 <__errno_location@plt>
  407ac0:	ldr	w1, [x0]
  407ac4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  407ac8:	add	x2, x2, #0x286
  407acc:	mov	w0, w20
  407ad0:	bl	402cbc <ferror@plt+0x10c>
  407ad4:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  407ad8:	mov	w9, #0x1                   	// #1
  407adc:	str	w9, [x8, #3496]
  407ae0:	str	x19, [x21, #2120]
  407ae4:	cbz	x19, 407b88 <ferror@plt+0x4fd8>
  407ae8:	ldr	x8, [x22, #1088]
  407aec:	cmp	x8, x19
  407af0:	b.eq	407b88 <ferror@plt+0x4fd8>  // b.none
  407af4:	add	x1, sp, #0x80
  407af8:	mov	w0, #0x1                   	// #1
  407afc:	bl	417280 <_obstack_memory_used@@Base+0xaac>
  407b00:	tbnz	w0, #31, 407b88 <ferror@plt+0x4fd8>
  407b04:	ldr	x0, [x21, #2120]
  407b08:	bl	402690 <fileno@plt>
  407b0c:	mov	x1, sp
  407b10:	bl	417280 <_obstack_memory_used@@Base+0xaac>
  407b14:	tbnz	w0, #31, 407b88 <ferror@plt+0x4fd8>
  407b18:	ldr	x8, [sp, #136]
  407b1c:	ldr	x9, [sp, #8]
  407b20:	cmp	x8, x9
  407b24:	b.ne	407b88 <ferror@plt+0x4fd8>  // b.any
  407b28:	cbz	x8, 407b88 <ferror@plt+0x4fd8>
  407b2c:	ldr	x8, [sp, #128]
  407b30:	ldr	x9, [sp]
  407b34:	cmp	x8, x9
  407b38:	b.ne	407b88 <ferror@plt+0x4fd8>  // b.any
  407b3c:	ldr	x0, [x21, #2120]
  407b40:	ldr	x8, [x23, #1064]
  407b44:	cmp	x0, x8
  407b48:	b.eq	407b80 <ferror@plt+0x4fd0>  // b.none
  407b4c:	bl	410760 <ferror@plt+0xdbb0>
  407b50:	cbz	w0, 407b80 <ferror@plt+0x4fd0>
  407b54:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407b58:	ldr	w19, [x8, #1224]
  407b5c:	bl	402b30 <__errno_location@plt>
  407b60:	ldr	w1, [x0]
  407b64:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  407b68:	add	x2, x2, #0x286
  407b6c:	mov	w0, w19
  407b70:	bl	402cbc <ferror@plt+0x10c>
  407b74:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  407b78:	mov	w9, #0x1                   	// #1
  407b7c:	str	w9, [x8, #3496]
  407b80:	ldr	x8, [x22, #1088]
  407b84:	str	x8, [x21, #2120]
  407b88:	ldp	x20, x19, [sp, #304]
  407b8c:	ldp	x22, x21, [sp, #288]
  407b90:	ldp	x28, x23, [sp, #272]
  407b94:	ldp	x29, x30, [sp, #256]
  407b98:	add	sp, sp, #0x140
  407b9c:	ret
  407ba0:	stp	x29, x30, [sp, #-32]!
  407ba4:	str	x19, [sp, #16]
  407ba8:	mov	x29, sp
  407bac:	cbz	x0, 407c40 <ferror@plt+0x5090>
  407bb0:	ldrb	w8, [x0]
  407bb4:	cbz	w8, 407c40 <ferror@plt+0x5090>
  407bb8:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x282c>
  407bbc:	mov	w19, wzr
  407bc0:	add	x8, x8, #0x15f
  407bc4:	b	407bd4 <ferror@plt+0x5024>
  407bc8:	mov	w9, #0x3ff                 	// #1023
  407bcc:	orr	w19, w19, w9
  407bd0:	add	x0, x0, #0x1
  407bd4:	ldrb	w10, [x0]
  407bd8:	sub	w9, w10, #0x56
  407bdc:	cmp	w9, #0x22
  407be0:	b.hi	407cc0 <ferror@plt+0x5110>  // b.pmore
  407be4:	adr	x10, 407bc8 <ferror@plt+0x5018>
  407be8:	ldrb	w11, [x8, x9]
  407bec:	add	x10, x10, x11, lsl #2
  407bf0:	mov	w9, #0x1                   	// #1
  407bf4:	br	x10
  407bf8:	mov	w9, #0x80                  	// #128
  407bfc:	b	407bcc <ferror@plt+0x501c>
  407c00:	mov	w9, #0x2                   	// #2
  407c04:	b	407bcc <ferror@plt+0x501c>
  407c08:	mov	w9, #0x20                  	// #32
  407c0c:	b	407bcc <ferror@plt+0x501c>
  407c10:	mov	w9, #0x100                 	// #256
  407c14:	b	407bcc <ferror@plt+0x501c>
  407c18:	mov	w9, #0x10                  	// #16
  407c1c:	b	407bcc <ferror@plt+0x501c>
  407c20:	mov	w9, #0x40                  	// #64
  407c24:	b	407bcc <ferror@plt+0x501c>
  407c28:	mov	w9, #0x4                   	// #4
  407c2c:	b	407bcc <ferror@plt+0x501c>
  407c30:	mov	w9, #0x8                   	// #8
  407c34:	b	407bcc <ferror@plt+0x501c>
  407c38:	mov	w9, #0x200                 	// #512
  407c3c:	b	407bcc <ferror@plt+0x501c>
  407c40:	mov	w19, #0x7                   	// #7
  407c44:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407c48:	add	x8, x8, #0x860
  407c4c:	ldp	x1, x9, [x8]
  407c50:	cmp	x9, x1
  407c54:	b.ne	407c68 <ferror@plt+0x50b8>  // b.any
  407c58:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407c5c:	ldrb	w10, [x9, #2208]
  407c60:	orr	w10, w10, #0x2
  407c64:	strb	w10, [x9, #2208]
  407c68:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407c6c:	add	x10, x10, #0x858
  407c70:	ldr	x11, [x10, #40]
  407c74:	ldp	x12, x13, [x10, #16]
  407c78:	ldr	x9, [x10]
  407c7c:	add	x12, x11, x12
  407c80:	bic	x11, x12, x11
  407c84:	sub	x14, x13, x9
  407c88:	sub	x12, x11, x9
  407c8c:	cmp	x12, x14
  407c90:	csel	x11, x13, x11, hi  // hi = pmore
  407c94:	cmp	x1, x13
  407c98:	stp	x11, x11, [x10, #8]
  407c9c:	b.cs	407cb0 <ferror@plt+0x5100>  // b.hs, b.nlast
  407ca0:	cmp	x1, x9
  407ca4:	b.ls	407cb0 <ferror@plt+0x5100>  // b.plast
  407ca8:	stp	x1, x1, [x8]
  407cac:	b	407cc8 <ferror@plt+0x5118>
  407cb0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407cb4:	add	x0, x0, #0x850
  407cb8:	bl	41674c <_obstack_free@@Base>
  407cbc:	b	407cc8 <ferror@plt+0x5118>
  407cc0:	cbz	w10, 407c44 <ferror@plt+0x5094>
  407cc4:	mov	w19, #0xffffffff            	// #-1
  407cc8:	mov	w0, w19
  407ccc:	ldr	x19, [sp, #16]
  407cd0:	ldp	x29, x30, [sp], #32
  407cd4:	ret
  407cd8:	stp	x29, x30, [sp, #-32]!
  407cdc:	stp	x20, x19, [sp, #16]
  407ce0:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407ce4:	ldr	x0, [x19, #1088]
  407ce8:	mov	x29, sp
  407cec:	bl	416310 <ferror@plt+0x13760>
  407cf0:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407cf4:	ldr	x0, [x20, #1064]
  407cf8:	bl	416310 <ferror@plt+0x13760>
  407cfc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407d00:	ldr	x0, [x8, #2120]
  407d04:	cbz	x0, 407d24 <ferror@plt+0x5174>
  407d08:	ldr	x8, [x19, #1088]
  407d0c:	cmp	x0, x8
  407d10:	b.eq	407d24 <ferror@plt+0x5174>  // b.none
  407d14:	ldr	x8, [x20, #1064]
  407d18:	cmp	x0, x8
  407d1c:	b.eq	407d24 <ferror@plt+0x5174>  // b.none
  407d20:	bl	416310 <ferror@plt+0x13760>
  407d24:	mov	w2, #0x1                   	// #1
  407d28:	mov	w0, wzr
  407d2c:	mov	x1, xzr
  407d30:	bl	402670 <lseek@plt>
  407d34:	tbnz	x0, #63, 407d58 <ferror@plt+0x51a8>
  407d38:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407d3c:	ldr	x0, [x19, #1096]
  407d40:	bl	416310 <ferror@plt+0x13760>
  407d44:	cbnz	w0, 407d58 <ferror@plt+0x51a8>
  407d48:	ldr	x0, [x19, #1096]
  407d4c:	mov	w2, #0x1                   	// #1
  407d50:	mov	x1, xzr
  407d54:	bl	4163b0 <ferror@plt+0x13800>
  407d58:	ldp	x20, x19, [sp, #16]
  407d5c:	ldp	x29, x30, [sp], #32
  407d60:	ret
  407d64:	stp	x29, x30, [sp, #-32]!
  407d68:	stp	x20, x19, [sp, #16]
  407d6c:	mov	x29, sp
  407d70:	cbz	x0, 407dc8 <ferror@plt+0x5218>
  407d74:	ldrb	w8, [x0]
  407d78:	cbz	w8, 407dd4 <ferror@plt+0x5224>
  407d7c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  407d80:	add	x1, x1, #0x1a3
  407d84:	bl	41107c <ferror@plt+0xe4cc>
  407d88:	cbz	x0, 407de0 <ferror@plt+0x5230>
  407d8c:	mov	x19, x0
  407d90:	bl	402690 <fileno@plt>
  407d94:	mov	w1, #0x1                   	// #1
  407d98:	bl	4106d8 <ferror@plt+0xdb28>
  407d9c:	cbz	w0, 407dc0 <ferror@plt+0x5210>
  407da0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407da4:	ldr	w20, [x8, #1224]
  407da8:	bl	402b30 <__errno_location@plt>
  407dac:	ldr	w1, [x0]
  407db0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  407db4:	add	x2, x2, #0x1a5
  407db8:	mov	w0, w20
  407dbc:	bl	402cbc <ferror@plt+0x10c>
  407dc0:	mov	x0, x19
  407dc4:	b	407dd8 <ferror@plt+0x5228>
  407dc8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407dcc:	ldr	x0, [x8, #1064]
  407dd0:	b	407dd8 <ferror@plt+0x5228>
  407dd4:	mov	x0, xzr
  407dd8:	bl	407a64 <ferror@plt+0x4eb4>
  407ddc:	mov	w0, #0x1                   	// #1
  407de0:	ldp	x20, x19, [sp, #16]
  407de4:	ldp	x29, x30, [sp], #32
  407de8:	ret
  407dec:	stp	x29, x30, [sp, #-48]!
  407df0:	stp	x20, x19, [sp, #32]
  407df4:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407df8:	ldr	x0, [x19, #2120]
  407dfc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  407e00:	add	x1, x1, #0x1d5
  407e04:	str	x21, [sp, #16]
  407e08:	mov	x29, sp
  407e0c:	bl	415cfc <ferror@plt+0x1314c>
  407e10:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  407e14:	ldr	w8, [x20, #3504]
  407e18:	cbz	w8, 407e5c <ferror@plt+0x52ac>
  407e1c:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407e20:	ldrb	w8, [x21, #1204]
  407e24:	tbz	w8, #5, 407e40 <ferror@plt+0x5290>
  407e28:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  407e2c:	ldr	x0, [x19, #2120]
  407e30:	ldr	x2, [x8, #3528]
  407e34:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  407e38:	add	x1, x1, #0x1de
  407e3c:	bl	415cfc <ferror@plt+0x1314c>
  407e40:	ldrb	w8, [x21, #1204]
  407e44:	tbz	w8, #4, 407e5c <ferror@plt+0x52ac>
  407e48:	ldr	x0, [x19, #2120]
  407e4c:	ldr	w2, [x20, #3504]
  407e50:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  407e54:	add	x1, x1, #0x1e2
  407e58:	bl	415cfc <ferror@plt+0x1314c>
  407e5c:	ldr	x1, [x19, #2120]
  407e60:	mov	w0, #0x20                  	// #32
  407e64:	bl	402600 <putc@plt>
  407e68:	ldp	x20, x19, [sp, #32]
  407e6c:	ldr	x21, [sp, #16]
  407e70:	ldp	x29, x30, [sp], #48
  407e74:	ret
  407e78:	stp	x29, x30, [sp, #-32]!
  407e7c:	str	x19, [sp, #16]
  407e80:	mov	x19, x0
  407e84:	mov	w0, w1
  407e88:	mov	x29, sp
  407e8c:	bl	407eb0 <ferror@plt+0x5300>
  407e90:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  407e94:	add	x0, x0, #0x1e6
  407e98:	mov	x1, x19
  407e9c:	bl	407f54 <ferror@plt+0x53a4>
  407ea0:	bl	4081f4 <ferror@plt+0x5644>
  407ea4:	ldr	x19, [sp, #16]
  407ea8:	ldp	x29, x30, [sp], #32
  407eac:	ret
  407eb0:	stp	x29, x30, [sp, #-48]!
  407eb4:	stp	x20, x19, [sp, #32]
  407eb8:	mov	w19, w0
  407ebc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  407ec0:	add	x0, x0, #0x2a4
  407ec4:	str	x21, [sp, #16]
  407ec8:	mov	x29, sp
  407ecc:	bl	407f54 <ferror@plt+0x53a4>
  407ed0:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  407ed4:	ldr	w8, [x20, #3504]
  407ed8:	cbz	w8, 407f14 <ferror@plt+0x5364>
  407edc:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407ee0:	ldrb	w8, [x21, #1204]
  407ee4:	tbz	w8, #5, 407efc <ferror@plt+0x534c>
  407ee8:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  407eec:	ldr	x1, [x8, #3528]
  407ef0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  407ef4:	add	x0, x0, #0x1de
  407ef8:	bl	407f54 <ferror@plt+0x53a4>
  407efc:	ldrb	w8, [x21, #1204]
  407f00:	tbz	w8, #4, 407f14 <ferror@plt+0x5364>
  407f04:	ldr	w1, [x20, #3504]
  407f08:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  407f0c:	add	x0, x0, #0x1e2
  407f10:	bl	407f54 <ferror@plt+0x53a4>
  407f14:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407f18:	ldr	w1, [x8, #2464]
  407f1c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  407f20:	add	x0, x0, #0x2ad
  407f24:	bl	407f54 <ferror@plt+0x53a4>
  407f28:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407f2c:	ldrb	w8, [x8, #1205]
  407f30:	tbz	w8, #1, 407f44 <ferror@plt+0x5394>
  407f34:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  407f38:	add	x0, x0, #0x2b4
  407f3c:	mov	w1, w19
  407f40:	bl	407f54 <ferror@plt+0x53a4>
  407f44:	ldp	x20, x19, [sp, #32]
  407f48:	ldr	x21, [sp, #16]
  407f4c:	ldp	x29, x30, [sp], #48
  407f50:	ret
  407f54:	sub	sp, sp, #0x140
  407f58:	stp	x29, x30, [sp, #224]
  407f5c:	add	x29, sp, #0xe0
  407f60:	mov	x8, #0xffffffffffffffc8    	// #-56
  407f64:	mov	x9, sp
  407f68:	stp	x28, x27, [sp, #240]
  407f6c:	stp	x24, x23, [sp, #272]
  407f70:	stp	x20, x19, [sp, #304]
  407f74:	movk	x8, #0xff80, lsl #32
  407f78:	sub	x10, x29, #0x60
  407f7c:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x182c>
  407f80:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407f84:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407f88:	adrp	x28, 419000 <_obstack_memory_used@@Base+0x282c>
  407f8c:	add	x9, x9, #0x80
  407f90:	stp	x26, x25, [sp, #256]
  407f94:	mov	x19, x0
  407f98:	add	x11, x29, #0x60
  407f9c:	add	x23, x23, #0xe37
  407fa0:	add	x24, x24, #0x868
  407fa4:	add	x20, x20, #0x850
  407fa8:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x1582c>
  407fac:	mov	w26, #0x2e                  	// #46
  407fb0:	mov	w27, #0x2e2e                	// #11822
  407fb4:	add	x28, x28, #0x182
  407fb8:	stp	x9, x8, [x29, #-24]
  407fbc:	add	x8, x10, #0x38
  407fc0:	stp	x22, x21, [sp, #288]
  407fc4:	stp	x1, x2, [x29, #-96]
  407fc8:	stp	x3, x4, [x29, #-80]
  407fcc:	stp	x5, x6, [x29, #-64]
  407fd0:	stur	x7, [x29, #-48]
  407fd4:	stp	q0, q1, [sp]
  407fd8:	stp	q2, q3, [sp, #32]
  407fdc:	stp	q4, q5, [sp, #64]
  407fe0:	stp	q6, q7, [sp, #96]
  407fe4:	stp	x11, x8, [x29, #-40]
  407fe8:	b	408000 <ferror@plt+0x5450>
  407fec:	ldr	x8, [x25, #2152]
  407ff0:	mov	x19, x21
  407ff4:	add	x9, x8, #0x1
  407ff8:	str	x9, [x25, #2152]
  407ffc:	strb	w22, [x8]
  408000:	mov	x21, x19
  408004:	ldrb	w22, [x21], #1
  408008:	cmp	w22, #0x25
  40800c:	b.eq	408030 <ferror@plt+0x5480>  // b.none
  408010:	cbz	w22, 4081d4 <ferror@plt+0x5624>
  408014:	ldp	x9, x8, [x24]
  408018:	cmp	x8, x9
  40801c:	b.ne	407fec <ferror@plt+0x543c>  // b.any
  408020:	mov	w1, #0x1                   	// #1
  408024:	mov	x0, x20
  408028:	bl	41659c <_obstack_newchunk@@Base>
  40802c:	b	407fec <ferror@plt+0x543c>
  408030:	ldrb	w8, [x19, #1]
  408034:	mov	w22, wzr
  408038:	mov	x21, x23
  40803c:	sub	w8, w8, #0x53
  408040:	cmp	w8, #0x20
  408044:	b.hi	4080f8 <ferror@plt+0x5548>  // b.pmore
  408048:	adr	x9, 408058 <ferror@plt+0x54a8>
  40804c:	ldrb	w10, [x28, x8]
  408050:	add	x9, x9, x10, lsl #2
  408054:	br	x9
  408058:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40805c:	ldr	w22, [x8, #1216]
  408060:	ldursw	x8, [x29, #-16]
  408064:	tbz	w8, #31, 408078 <ferror@plt+0x54c8>
  408068:	add	w9, w8, #0x8
  40806c:	cmp	w9, #0x0
  408070:	stur	w9, [x29, #-16]
  408074:	b.le	4081b8 <ferror@plt+0x5608>
  408078:	ldur	x8, [x29, #-40]
  40807c:	add	x9, x8, #0x8
  408080:	stur	x9, [x29, #-40]
  408084:	ldr	x21, [x8]
  408088:	b	4080f8 <ferror@plt+0x5548>
  40808c:	ldursw	x8, [x29, #-16]
  408090:	tbz	w8, #31, 4080a4 <ferror@plt+0x54f4>
  408094:	add	w9, w8, #0x8
  408098:	cmp	w9, #0x0
  40809c:	stur	w9, [x29, #-16]
  4080a0:	b.le	4081c8 <ferror@plt+0x5618>
  4080a4:	ldur	x8, [x29, #-40]
  4080a8:	add	x9, x8, #0x8
  4080ac:	stur	x9, [x29, #-40]
  4080b0:	ldr	w0, [x8]
  4080b4:	mov	w1, #0xa                   	// #10
  4080b8:	bl	403bd4 <ferror@plt+0x1024>
  4080bc:	mov	x21, x0
  4080c0:	mov	w22, wzr
  4080c4:	b	4080f8 <ferror@plt+0x5548>
  4080c8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4080cc:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4080d0:	ldrb	w8, [x8, #1204]
  4080d4:	ldr	x9, [x9, #3512]
  4080d8:	b	4080ec <ferror@plt+0x553c>
  4080dc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4080e0:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4080e4:	ldrb	w8, [x8, #1204]
  4080e8:	ldr	x9, [x9, #3568]
  4080ec:	mov	w22, wzr
  4080f0:	tst	w8, #0x4
  4080f4:	csel	x21, x23, x9, eq  // eq = none
  4080f8:	mov	x0, x21
  4080fc:	add	x19, x19, #0x2
  408100:	bl	402540 <strlen@plt>
  408104:	cbz	w22, 408178 <ferror@plt+0x55c8>
  408108:	cmp	w22, w0
  40810c:	b.gt	408178 <ferror@plt+0x55c8>
  408110:	ldp	x9, x8, [x24]
  408114:	sxtw	x22, w22
  408118:	sub	x8, x8, x9
  40811c:	cmp	x8, x22
  408120:	b.cs	408130 <ferror@plt+0x5580>  // b.hs, b.nlast
  408124:	mov	x0, x20
  408128:	mov	x1, x22
  40812c:	bl	41659c <_obstack_newchunk@@Base>
  408130:	ldr	x0, [x24]
  408134:	mov	x1, x21
  408138:	mov	x2, x22
  40813c:	bl	402510 <memcpy@plt>
  408140:	ldp	x8, x9, [x24]
  408144:	add	x8, x8, x22
  408148:	sub	x9, x9, x8
  40814c:	cmp	x9, #0x2
  408150:	str	x8, [x24]
  408154:	b.hi	408164 <ferror@plt+0x55b4>  // b.pmore
  408158:	mov	w1, #0x3                   	// #3
  40815c:	mov	x0, x20
  408160:	bl	41659c <_obstack_newchunk@@Base>
  408164:	ldr	x8, [x25, #2152]
  408168:	mov	w22, #0x3                   	// #3
  40816c:	strb	w26, [x8, #2]
  408170:	strh	w27, [x8]
  408174:	b	4081a8 <ferror@plt+0x55f8>
  408178:	ldp	x9, x8, [x24]
  40817c:	sxtw	x22, w0
  408180:	sub	x8, x8, x9
  408184:	cmp	x8, x22
  408188:	b.cs	408198 <ferror@plt+0x55e8>  // b.hs, b.nlast
  40818c:	mov	x0, x20
  408190:	mov	x1, x22
  408194:	bl	41659c <_obstack_newchunk@@Base>
  408198:	ldr	x0, [x25, #2152]
  40819c:	mov	x1, x21
  4081a0:	mov	x2, x22
  4081a4:	bl	402510 <memcpy@plt>
  4081a8:	ldr	x8, [x25, #2152]
  4081ac:	add	x8, x8, x22
  4081b0:	str	x8, [x25, #2152]
  4081b4:	b	408000 <ferror@plt+0x5450>
  4081b8:	ldur	x9, [x29, #-32]
  4081bc:	add	x8, x9, x8
  4081c0:	ldr	x21, [x8]
  4081c4:	b	4080f8 <ferror@plt+0x5548>
  4081c8:	ldur	x9, [x29, #-32]
  4081cc:	add	x8, x9, x8
  4081d0:	b	4080b0 <ferror@plt+0x5500>
  4081d4:	ldp	x20, x19, [sp, #304]
  4081d8:	ldp	x22, x21, [sp, #288]
  4081dc:	ldp	x24, x23, [sp, #272]
  4081e0:	ldp	x26, x25, [sp, #256]
  4081e4:	ldp	x28, x27, [sp, #240]
  4081e8:	ldp	x29, x30, [sp, #224]
  4081ec:	add	sp, sp, #0x140
  4081f0:	ret
  4081f4:	stp	x29, x30, [sp, #-48]!
  4081f8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4081fc:	add	x8, x8, #0x868
  408200:	ldp	x8, x9, [x8]
  408204:	str	x21, [sp, #16]
  408208:	stp	x20, x19, [sp, #32]
  40820c:	mov	x29, sp
  408210:	cmp	x9, x8
  408214:	b.ne	408228 <ferror@plt+0x5678>  // b.any
  408218:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40821c:	add	x0, x0, #0x850
  408220:	mov	w1, #0x1                   	// #1
  408224:	bl	41659c <_obstack_newchunk@@Base>
  408228:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40822c:	add	x20, x20, #0x860
  408230:	ldr	x8, [x20, #8]
  408234:	add	x9, x8, #0x1
  408238:	str	x9, [x20, #8]
  40823c:	strb	wzr, [x8]
  408240:	ldp	x19, x8, [x20]
  408244:	cmp	x8, x19
  408248:	b.ne	40825c <ferror@plt+0x56ac>  // b.any
  40824c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408250:	ldrb	w9, [x8, #2208]
  408254:	orr	w9, w9, #0x2
  408258:	strb	w9, [x8, #2208]
  40825c:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408260:	add	x21, x21, #0x858
  408264:	ldr	x8, [x21, #40]
  408268:	ldp	x10, x11, [x21, #16]
  40826c:	ldr	x9, [x21]
  408270:	adrp	x12, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408274:	ldr	x0, [x12, #2120]
  408278:	add	x10, x8, x10
  40827c:	bic	x8, x10, x8
  408280:	sub	x12, x11, x9
  408284:	sub	x9, x8, x9
  408288:	cmp	x9, x12
  40828c:	csel	x8, x11, x8, hi  // hi = pmore
  408290:	stp	x8, x8, [x21, #8]
  408294:	cbz	x0, 4082a8 <ferror@plt+0x56f8>
  408298:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  40829c:	add	x1, x1, #0xa31
  4082a0:	mov	x2, x19
  4082a4:	bl	415cfc <ferror@plt+0x1314c>
  4082a8:	ldr	x8, [x21]
  4082ac:	cmp	x19, x8
  4082b0:	b.ls	4082c8 <ferror@plt+0x5718>  // b.plast
  4082b4:	ldr	x8, [x21, #24]
  4082b8:	cmp	x19, x8
  4082bc:	b.cs	4082c8 <ferror@plt+0x5718>  // b.hs, b.nlast
  4082c0:	stp	x19, x19, [x20]
  4082c4:	b	4082d8 <ferror@plt+0x5728>
  4082c8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4082cc:	add	x0, x0, #0x850
  4082d0:	mov	x1, x19
  4082d4:	bl	41674c <_obstack_free@@Base>
  4082d8:	ldp	x20, x19, [sp, #32]
  4082dc:	ldr	x21, [sp, #16]
  4082e0:	ldp	x29, x30, [sp], #48
  4082e4:	ret
  4082e8:	stp	x29, x30, [sp, #-80]!
  4082ec:	stp	x22, x21, [sp, #48]
  4082f0:	mov	x21, x0
  4082f4:	mov	w0, w1
  4082f8:	str	x25, [sp, #16]
  4082fc:	stp	x24, x23, [sp, #32]
  408300:	stp	x20, x19, [sp, #64]
  408304:	mov	x29, sp
  408308:	mov	x19, x3
  40830c:	mov	w20, w2
  408310:	bl	407eb0 <ferror@plt+0x5300>
  408314:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  408318:	add	x0, x0, #0x96
  40831c:	mov	x1, x21
  408320:	bl	407f54 <ferror@plt+0x53a4>
  408324:	cmp	w20, #0x2
  408328:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40832c:	b.lt	4083e0 <ferror@plt+0x5830>  // b.tstop
  408330:	ldrb	w8, [x21, #1204]
  408334:	tbz	w8, #0, 4083e0 <ferror@plt+0x5830>
  408338:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40833c:	add	x0, x0, #0x1ed
  408340:	bl	407f54 <ferror@plt+0x53a4>
  408344:	cmp	w20, #0x2
  408348:	b.lt	4083d4 <ferror@plt+0x5824>  // b.tstop
  40834c:	mov	w8, w20
  408350:	add	x20, x19, #0x8
  408354:	adrp	x23, 417000 <_obstack_memory_used@@Base+0x82c>
  408358:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x282c>
  40835c:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x282c>
  408360:	mov	x22, xzr
  408364:	add	x23, x23, #0x80b
  408368:	add	x24, x24, #0x27f
  40836c:	sub	x25, x8, #0x1
  408370:	add	x19, x19, #0x1ef
  408374:	b	408390 <ferror@plt+0x57e0>
  408378:	ldr	x1, [x0]
  40837c:	mov	x0, x2
  408380:	bl	407f54 <ferror@plt+0x53a4>
  408384:	add	x22, x22, #0x1
  408388:	cmp	x25, x22
  40838c:	b.eq	4083d4 <ferror@plt+0x5824>  // b.none
  408390:	cbz	x22, 40839c <ferror@plt+0x57ec>
  408394:	mov	x0, x19
  408398:	bl	407f54 <ferror@plt+0x53a4>
  40839c:	ldr	x8, [x20, x22, lsl #3]
  4083a0:	ldr	w9, [x8]
  4083a4:	cmp	w9, #0x2
  4083a8:	b.eq	4083c0 <ferror@plt+0x5810>  // b.none
  4083ac:	cmp	w9, #0x1
  4083b0:	b.ne	408410 <ferror@plt+0x5860>  // b.any
  4083b4:	add	x0, x8, #0x8
  4083b8:	mov	x2, x24
  4083bc:	b	408378 <ferror@plt+0x57c8>
  4083c0:	ldr	x0, [x8, #8]
  4083c4:	bl	403738 <ferror@plt+0xb88>
  4083c8:	cbz	x0, 408424 <ferror@plt+0x5874>
  4083cc:	mov	x2, x23
  4083d0:	b	408378 <ferror@plt+0x57c8>
  4083d4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  4083d8:	add	x0, x0, #0xca4
  4083dc:	bl	407f54 <ferror@plt+0x53a4>
  4083e0:	ldrb	w8, [x21, #1204]
  4083e4:	tbz	w8, #7, 4083f8 <ferror@plt+0x5848>
  4083e8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  4083ec:	add	x0, x0, #0x268
  4083f0:	bl	407f54 <ferror@plt+0x53a4>
  4083f4:	bl	4081f4 <ferror@plt+0x5644>
  4083f8:	ldp	x20, x19, [sp, #64]
  4083fc:	ldp	x22, x21, [sp, #48]
  408400:	ldp	x24, x23, [sp, #32]
  408404:	ldr	x25, [sp, #16]
  408408:	ldp	x29, x30, [sp], #80
  40840c:	ret
  408410:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408414:	ldr	w0, [x8, #1224]
  408418:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40841c:	add	x2, x2, #0x235
  408420:	b	408434 <ferror@plt+0x5884>
  408424:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408428:	ldr	w0, [x8, #1224]
  40842c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  408430:	add	x2, x2, #0x1f2
  408434:	mov	w1, wzr
  408438:	bl	402cbc <ferror@plt+0x10c>
  40843c:	bl	4028d0 <abort@plt>
  408440:	stp	x29, x30, [sp, #-48]!
  408444:	stp	x22, x21, [sp, #16]
  408448:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40844c:	ldrb	w8, [x22, #1204]
  408450:	stp	x20, x19, [sp, #32]
  408454:	mov	x19, x3
  408458:	mov	x29, sp
  40845c:	tbz	w8, #7, 408498 <ferror@plt+0x58e8>
  408460:	mov	x20, x0
  408464:	mov	w0, w1
  408468:	mov	w21, w2
  40846c:	bl	407eb0 <ferror@plt+0x5300>
  408470:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  408474:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  408478:	add	x8, x8, #0xe37
  40847c:	add	x9, x9, #0x275
  408480:	cmp	w21, #0x1
  408484:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  408488:	csel	x2, x9, x8, gt
  40848c:	add	x0, x0, #0x270
  408490:	mov	x1, x20
  408494:	bl	407f54 <ferror@plt+0x53a4>
  408498:	cbz	x19, 4084b4 <ferror@plt+0x5904>
  40849c:	ldrb	w8, [x22, #1204]
  4084a0:	tbz	w8, #1, 4084b4 <ferror@plt+0x5904>
  4084a4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  4084a8:	add	x0, x0, #0x27b
  4084ac:	mov	x1, x19
  4084b0:	bl	407f54 <ferror@plt+0x53a4>
  4084b4:	bl	4081f4 <ferror@plt+0x5644>
  4084b8:	ldp	x20, x19, [sp, #32]
  4084bc:	ldp	x22, x21, [sp, #16]
  4084c0:	ldp	x29, x30, [sp], #48
  4084c4:	ret
  4084c8:	stp	x29, x30, [sp, #-48]!
  4084cc:	str	x21, [sp, #16]
  4084d0:	stp	x20, x19, [sp, #32]
  4084d4:	mov	x29, sp
  4084d8:	mov	x21, x1
  4084dc:	mov	x20, x0
  4084e0:	bl	408644 <ferror@plt+0x5a94>
  4084e4:	mov	x0, x21
  4084e8:	bl	408658 <ferror@plt+0x5aa8>
  4084ec:	mov	x1, x21
  4084f0:	bl	408a54 <ferror@plt+0x5ea4>
  4084f4:	mov	w19, w0
  4084f8:	cbnz	w0, 408520 <ferror@plt+0x5970>
  4084fc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408500:	ldr	x8, [x8, #2216]
  408504:	ldrb	w8, [x8]
  408508:	cbz	w8, 408558 <ferror@plt+0x59a8>
  40850c:	mov	x0, x21
  408510:	bl	408658 <ferror@plt+0x5aa8>
  408514:	cmp	w0, #0x1
  408518:	mov	w8, #0x7                   	// #7
  40851c:	cinc	w19, w8, eq  // eq = none
  408520:	cmp	w19, #0x8
  408524:	b.hi	408564 <ferror@plt+0x59b4>  // b.pmore
  408528:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  40852c:	mov	w8, w19
  408530:	add	x9, x9, #0x2bc
  408534:	adr	x10, 408544 <ferror@plt+0x5994>
  408538:	ldrb	w11, [x9, x8]
  40853c:	add	x10, x10, x11, lsl #2
  408540:	br	x10
  408544:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408548:	ldr	w0, [x8, #1224]
  40854c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  408550:	add	x2, x2, #0x3e7
  408554:	b	4085f4 <ferror@plt+0x5a44>
  408558:	mov	w19, wzr
  40855c:	cmp	w19, #0x8
  408560:	b.ls	408528 <ferror@plt+0x5978>  // b.plast
  408564:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408568:	ldr	w0, [x8, #1224]
  40856c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  408570:	add	x2, x2, #0x43b
  408574:	mov	w1, wzr
  408578:	bl	402cbc <ferror@plt+0x10c>
  40857c:	bl	4028d0 <abort@plt>
  408580:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408584:	ldr	w0, [x8, #1224]
  408588:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40858c:	add	x2, x2, #0x35e
  408590:	b	4085f4 <ferror@plt+0x5a44>
  408594:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408598:	ldr	w0, [x8, #1224]
  40859c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4085a0:	add	x2, x2, #0x402
  4085a4:	b	4085f4 <ferror@plt+0x5a44>
  4085a8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4085ac:	ldr	w0, [x8, #1224]
  4085b0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4085b4:	add	x2, x2, #0x41d
  4085b8:	b	4085f4 <ferror@plt+0x5a44>
  4085bc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4085c0:	ldr	w0, [x8, #1224]
  4085c4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4085c8:	add	x2, x2, #0x3a0
  4085cc:	b	4085f4 <ferror@plt+0x5a44>
  4085d0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4085d4:	ldr	w0, [x8, #1224]
  4085d8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4085dc:	add	x2, x2, #0x327
  4085e0:	b	4085f4 <ferror@plt+0x5a44>
  4085e4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4085e8:	ldr	w0, [x8, #1224]
  4085ec:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4085f0:	add	x2, x2, #0x379
  4085f4:	mov	w1, wzr
  4085f8:	mov	x3, x20
  4085fc:	bl	402cbc <ferror@plt+0x10c>
  408600:	cmp	w19, #0x0
  408604:	ldp	x20, x19, [sp, #32]
  408608:	ldr	x21, [sp, #16]
  40860c:	cset	w0, ne  // ne = any
  408610:	ldp	x29, x30, [sp], #48
  408614:	ret
  408618:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40861c:	ldr	w0, [x8, #1224]
  408620:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  408624:	add	x2, x2, #0x3ca
  408628:	mov	w1, wzr
  40862c:	mov	x3, x20
  408630:	bl	402cbc <ferror@plt+0x10c>
  408634:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  408638:	mov	w9, #0x1                   	// #1
  40863c:	str	w9, [x8, #3496]
  408640:	b	408600 <ferror@plt+0x5a50>
  408644:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408648:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40864c:	str	x0, [x8, #2216]
  408650:	str	xzr, [x9, #2224]
  408654:	ret
  408658:	stp	x29, x30, [sp, #-32]!
  40865c:	str	x19, [sp, #16]
  408660:	mov	x29, sp
  408664:	mov	x19, x0
  408668:	bl	402950 <__ctype_b_loc@plt>
  40866c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408670:	ldr	x11, [x8, #2216]
  408674:	ldr	x9, [x0]
  408678:	ldrb	w10, [x11]
  40867c:	ldrh	w12, [x9, x10, lsl #1]
  408680:	tbz	w12, #13, 408698 <ferror@plt+0x5ae8>
  408684:	ldr	x9, [x0]
  408688:	ldrb	w10, [x11, #1]!
  40868c:	ldrh	w12, [x9, x10, lsl #1]
  408690:	tbnz	w12, #13, 408688 <ferror@plt+0x5ad8>
  408694:	str	x11, [x8, #2216]
  408698:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40869c:	str	x11, [x13, #2224]
  4086a0:	cbz	w10, 4086f4 <ferror@plt+0x5b44>
  4086a4:	tbnz	w12, #11, 4086fc <ferror@plt+0x5b4c>
  4086a8:	sub	w10, w10, #0x21
  4086ac:	add	x9, x11, #0x1
  4086b0:	cmp	w10, #0x5d
  4086b4:	str	x9, [x8, #2216]
  4086b8:	b.hi	408880 <ferror@plt+0x5cd0>  // b.pmore
  4086bc:	adrp	x12, 419000 <_obstack_memory_used@@Base+0x282c>
  4086c0:	add	x12, x12, #0x2c5
  4086c4:	adr	x13, 4086d8 <ferror@plt+0x5b28>
  4086c8:	ldrb	w14, [x12, x10]
  4086cc:	add	x13, x13, x14, lsl #2
  4086d0:	mov	w0, #0x14                  	// #20
  4086d4:	br	x13
  4086d8:	ldrb	w9, [x9]
  4086dc:	cmp	w9, #0x3d
  4086e0:	b.ne	4089e4 <ferror@plt+0x5e34>  // b.any
  4086e4:	add	x9, x11, #0x2
  4086e8:	str	x9, [x8, #2216]
  4086ec:	mov	w0, #0xa                   	// #10
  4086f0:	b	408874 <ferror@plt+0x5cc4>
  4086f4:	mov	w0, #0x1b                  	// #27
  4086f8:	b	408874 <ferror@plt+0x5cc4>
  4086fc:	cmp	w10, #0x30
  408700:	b.ne	408760 <ferror@plt+0x5bb0>  // b.any
  408704:	add	x10, x11, #0x1
  408708:	str	x10, [x8, #2216]
  40870c:	ldrb	w10, [x11, #1]
  408710:	sub	w12, w10, #0x42
  408714:	cmp	w12, #0x36
  408718:	mov	w10, #0x8                   	// #8
  40871c:	b.hi	4087e0 <ferror@plt+0x5c30>  // b.pmore
  408720:	mov	w13, #0x1                   	// #1
  408724:	lsl	x13, x13, x12
  408728:	tst	x13, #0x100000001
  40872c:	b.ne	408768 <ferror@plt+0x5bb8>  // b.any
  408730:	mov	w13, #0x1                   	// #1
  408734:	lsl	x13, x13, x12
  408738:	tst	x13, #0x1000000010000
  40873c:	b.ne	408778 <ferror@plt+0x5bc8>  // b.any
  408740:	mov	w13, #0x1                   	// #1
  408744:	lsl	x12, x13, x12
  408748:	tst	x12, #0x40000000400000
  40874c:	b.eq	4087e0 <ferror@plt+0x5c30>  // b.none
  408750:	add	x10, x11, #0x2
  408754:	str	x10, [x8, #2216]
  408758:	mov	w10, #0x10                  	// #16
  40875c:	b	4087e0 <ferror@plt+0x5c30>
  408760:	mov	w10, #0xa                   	// #10
  408764:	b	4087e0 <ferror@plt+0x5c30>
  408768:	add	x10, x11, #0x2
  40876c:	str	x10, [x8, #2216]
  408770:	mov	w10, #0x2                   	// #2
  408774:	b	4087e0 <ferror@plt+0x5c30>
  408778:	add	x12, x11, #0x2
  40877c:	str	x12, [x8, #2216]
  408780:	ldrb	w11, [x11, #2]
  408784:	ldrh	w10, [x9, x11, lsl #1]
  408788:	tbnz	w10, #11, 408794 <ferror@plt+0x5be4>
  40878c:	mov	w10, wzr
  408790:	b	4087c0 <ferror@plt+0x5c10>
  408794:	mov	w10, wzr
  408798:	mov	w13, #0xa                   	// #10
  40879c:	mul	w10, w10, w13
  4087a0:	add	w10, w10, w11, uxtb
  4087a4:	ldrb	w11, [x12, #1]!
  4087a8:	sub	w10, w10, #0x30
  4087ac:	cmp	w10, #0x24
  4087b0:	b.gt	4087bc <ferror@plt+0x5c0c>
  4087b4:	ldrh	w14, [x9, x11, lsl #1]
  4087b8:	tbnz	w14, #11, 40879c <ferror@plt+0x5bec>
  4087bc:	str	x12, [x8, #2216]
  4087c0:	mov	w0, wzr
  4087c4:	cbz	w10, 408874 <ferror@plt+0x5cc4>
  4087c8:	cmp	w10, #0x24
  4087cc:	b.gt	408874 <ferror@plt+0x5cc4>
  4087d0:	cmp	w11, #0x3a
  4087d4:	b.ne	408874 <ferror@plt+0x5cc4>  // b.any
  4087d8:	add	x11, x12, #0x1
  4087dc:	str	x11, [x8, #2216]
  4087e0:	str	wzr, [x19]
  4087e4:	ldr	x11, [x8, #2216]
  4087e8:	ldrb	w12, [x11]
  4087ec:	cbz	w12, 408870 <ferror@plt+0x5cc0>
  4087f0:	add	x11, x11, #0x1
  4087f4:	b	40881c <ferror@plt+0x5c6c>
  4087f8:	cbz	w12, 408868 <ferror@plt+0x5cb8>
  4087fc:	cmp	w12, #0x1
  408800:	b.ne	408870 <ferror@plt+0x5cc0>  // b.any
  408804:	ldr	w12, [x19]
  408808:	add	w12, w12, #0x1
  40880c:	str	w12, [x19]
  408810:	str	x11, [x8, #2216]
  408814:	ldrb	w12, [x11], #1
  408818:	cbz	w12, 408870 <ferror@plt+0x5cc0>
  40881c:	and	x13, x12, #0xff
  408820:	ldrh	w13, [x9, x13, lsl #1]
  408824:	tbnz	w13, #11, 408838 <ferror@plt+0x5c88>
  408828:	tbnz	w13, #9, 408840 <ferror@plt+0x5c90>
  40882c:	tbz	w13, #8, 408870 <ferror@plt+0x5cc0>
  408830:	mov	w13, #0xffffffc9            	// #-55
  408834:	b	408844 <ferror@plt+0x5c94>
  408838:	mov	w13, #0xffffffd0            	// #-48
  40883c:	b	408844 <ferror@plt+0x5c94>
  408840:	mov	w13, #0xffffffa9            	// #-87
  408844:	and	w12, w12, #0xff
  408848:	cmp	w10, #0x1
  40884c:	add	w12, w13, w12
  408850:	b.eq	4087f8 <ferror@plt+0x5c48>  // b.none
  408854:	cmp	w12, w10
  408858:	b.ge	408870 <ferror@plt+0x5cc0>  // b.tcont
  40885c:	ldr	w13, [x19]
  408860:	madd	w12, w13, w10, w12
  408864:	b	40880c <ferror@plt+0x5c5c>
  408868:	ldr	w12, [x19]
  40886c:	cbz	w12, 408810 <ferror@plt+0x5c60>
  408870:	mov	w0, #0x1a                  	// #26
  408874:	ldr	x19, [sp, #16]
  408878:	ldp	x29, x30, [sp], #32
  40887c:	ret
  408880:	mov	w0, wzr
  408884:	b	408874 <ferror@plt+0x5cc4>
  408888:	ldrb	w8, [x9]
  40888c:	cmp	w8, #0x3d
  408890:	mov	w8, #0x7                   	// #7
  408894:	csinc	w0, w8, wzr, ne  // ne = any
  408898:	b	408874 <ferror@plt+0x5cc4>
  40889c:	ldrb	w9, [x9]
  4088a0:	cmp	w9, #0x3d
  4088a4:	b.eq	4089dc <ferror@plt+0x5e2c>  // b.none
  4088a8:	cmp	w9, #0x26
  4088ac:	b.ne	4089f4 <ferror@plt+0x5e44>  // b.any
  4088b0:	add	x9, x11, #0x2
  4088b4:	str	x9, [x8, #2216]
  4088b8:	mov	w0, #0x12                  	// #18
  4088bc:	b	408874 <ferror@plt+0x5cc4>
  4088c0:	mov	w0, #0x18                  	// #24
  4088c4:	b	408874 <ferror@plt+0x5cc4>
  4088c8:	mov	w0, #0x19                  	// #25
  4088cc:	b	408874 <ferror@plt+0x5cc4>
  4088d0:	ldrb	w9, [x9]
  4088d4:	cmp	w9, #0x3d
  4088d8:	b.eq	4089dc <ferror@plt+0x5e2c>  // b.none
  4088dc:	cmp	w9, #0x2a
  4088e0:	b.ne	4089fc <ferror@plt+0x5e4c>  // b.any
  4088e4:	add	x9, x11, #0x2
  4088e8:	str	x9, [x8, #2216]
  4088ec:	mov	w0, #0x4                   	// #4
  4088f0:	b	408874 <ferror@plt+0x5cc4>
  4088f4:	ldrb	w8, [x9]
  4088f8:	mov	w0, #0x1                   	// #1
  4088fc:	cmp	w8, #0x2b
  408900:	b.eq	408874 <ferror@plt+0x5cc4>  // b.none
  408904:	cmp	w8, #0x3d
  408908:	b.eq	408874 <ferror@plt+0x5cc4>  // b.none
  40890c:	mov	w0, #0x2                   	// #2
  408910:	b	408874 <ferror@plt+0x5cc4>
  408914:	ldrb	w8, [x9]
  408918:	orr	w8, w8, #0x10
  40891c:	cmp	w8, #0x3d
  408920:	b.eq	4089dc <ferror@plt+0x5e2c>  // b.none
  408924:	mov	w0, #0x3                   	// #3
  408928:	b	408874 <ferror@plt+0x5cc4>
  40892c:	ldrb	w8, [x9]
  408930:	cmp	w8, #0x3d
  408934:	mov	w8, #0x6                   	// #6
  408938:	csinc	w0, w8, wzr, ne  // ne = any
  40893c:	b	408874 <ferror@plt+0x5cc4>
  408940:	ldrb	w9, [x9]
  408944:	cmp	w9, #0x3c
  408948:	b.eq	408a04 <ferror@plt+0x5e54>  // b.none
  40894c:	cmp	w9, #0x3d
  408950:	b.ne	408a20 <ferror@plt+0x5e70>  // b.any
  408954:	add	x9, x11, #0x2
  408958:	str	x9, [x8, #2216]
  40895c:	mov	w0, #0xe                   	// #14
  408960:	b	408874 <ferror@plt+0x5cc4>
  408964:	ldrb	w9, [x9]
  408968:	cmp	w9, #0x3d
  40896c:	b.ne	4089ec <ferror@plt+0x5e3c>  // b.any
  408970:	add	x9, x11, #0x2
  408974:	str	x9, [x8, #2216]
  408978:	mov	w0, #0x9                   	// #9
  40897c:	b	408874 <ferror@plt+0x5cc4>
  408980:	ldrb	w9, [x9]
  408984:	cmp	w9, #0x3e
  408988:	b.eq	408a28 <ferror@plt+0x5e78>  // b.none
  40898c:	cmp	w9, #0x3d
  408990:	b.ne	408a44 <ferror@plt+0x5e94>  // b.any
  408994:	add	x9, x11, #0x2
  408998:	str	x9, [x8, #2216]
  40899c:	mov	w0, #0xc                   	// #12
  4089a0:	b	408874 <ferror@plt+0x5cc4>
  4089a4:	ldrb	w8, [x9]
  4089a8:	cmp	w8, #0x3d
  4089ac:	mov	w8, #0x17                  	// #23
  4089b0:	csinc	w0, w8, wzr, ne  // ne = any
  4089b4:	b	408874 <ferror@plt+0x5cc4>
  4089b8:	ldrb	w9, [x9]
  4089bc:	cmp	w9, #0x3d
  4089c0:	b.eq	4089dc <ferror@plt+0x5e2c>  // b.none
  4089c4:	cmp	w9, #0x7c
  4089c8:	b.ne	408a4c <ferror@plt+0x5e9c>  // b.any
  4089cc:	add	x9, x11, #0x2
  4089d0:	str	x9, [x8, #2216]
  4089d4:	mov	w0, #0x13                  	// #19
  4089d8:	b	408874 <ferror@plt+0x5cc4>
  4089dc:	mov	w0, #0x1                   	// #1
  4089e0:	b	408874 <ferror@plt+0x5cc4>
  4089e4:	mov	w0, #0x11                  	// #17
  4089e8:	b	408874 <ferror@plt+0x5cc4>
  4089ec:	mov	w0, #0x8                   	// #8
  4089f0:	b	408874 <ferror@plt+0x5cc4>
  4089f4:	mov	w0, #0x15                  	// #21
  4089f8:	b	408874 <ferror@plt+0x5cc4>
  4089fc:	mov	w0, #0x5                   	// #5
  408a00:	b	408874 <ferror@plt+0x5cc4>
  408a04:	add	x9, x11, #0x2
  408a08:	str	x9, [x8, #2216]
  408a0c:	ldrb	w8, [x11, #2]
  408a10:	cmp	w8, #0x3d
  408a14:	mov	w8, #0xf                   	// #15
  408a18:	csinc	w0, w8, wzr, ne  // ne = any
  408a1c:	b	408874 <ferror@plt+0x5cc4>
  408a20:	mov	w0, #0xd                   	// #13
  408a24:	b	408874 <ferror@plt+0x5cc4>
  408a28:	add	x9, x11, #0x2
  408a2c:	str	x9, [x8, #2216]
  408a30:	ldrb	w8, [x11, #2]
  408a34:	cmp	w8, #0x3d
  408a38:	mov	w8, #0x10                  	// #16
  408a3c:	csinc	w0, w8, wzr, ne  // ne = any
  408a40:	b	408874 <ferror@plt+0x5cc4>
  408a44:	mov	w0, #0xb                   	// #11
  408a48:	b	408874 <ferror@plt+0x5cc4>
  408a4c:	mov	w0, #0x16                  	// #22
  408a50:	b	408874 <ferror@plt+0x5cc4>
  408a54:	stp	x29, x30, [sp, #-32]!
  408a58:	str	x19, [sp, #16]
  408a5c:	mov	x29, sp
  408a60:	mov	x19, x1
  408a64:	bl	408ae8 <ferror@plt+0x5f38>
  408a68:	cbnz	w0, 408adc <ferror@plt+0x5f2c>
  408a6c:	b	408a84 <ferror@plt+0x5ed4>
  408a70:	ldr	w9, [x29, #28]
  408a74:	orr	w8, w9, w8
  408a78:	cmp	w8, #0x0
  408a7c:	cset	w8, ne  // ne = any
  408a80:	str	w8, [x19]
  408a84:	add	x0, x29, #0x1c
  408a88:	bl	408658 <ferror@plt+0x5aa8>
  408a8c:	cmp	w0, #0x13
  408a90:	b.ne	408ac8 <ferror@plt+0x5f18>  // b.any
  408a94:	add	x0, x29, #0x1c
  408a98:	bl	408658 <ferror@plt+0x5aa8>
  408a9c:	cbz	w0, 408acc <ferror@plt+0x5f1c>
  408aa0:	add	x1, x29, #0x1c
  408aa4:	bl	408ae8 <ferror@plt+0x5f38>
  408aa8:	ldr	w8, [x19]
  408aac:	cbz	w0, 408a70 <ferror@plt+0x5ec0>
  408ab0:	cmp	w0, #0x3
  408ab4:	b.hi	408adc <ferror@plt+0x5f2c>  // b.pmore
  408ab8:	cbz	w8, 408adc <ferror@plt+0x5f2c>
  408abc:	mov	w8, #0x1                   	// #1
  408ac0:	str	w8, [x19]
  408ac4:	b	408a84 <ferror@plt+0x5ed4>
  408ac8:	cbnz	w0, 408ad4 <ferror@plt+0x5f24>
  408acc:	mov	w0, #0x6                   	// #6
  408ad0:	b	408adc <ferror@plt+0x5f2c>
  408ad4:	bl	408b7c <ferror@plt+0x5fcc>
  408ad8:	mov	w0, wzr
  408adc:	ldr	x19, [sp, #16]
  408ae0:	ldp	x29, x30, [sp], #32
  408ae4:	ret
  408ae8:	stp	x29, x30, [sp, #-32]!
  408aec:	str	x19, [sp, #16]
  408af0:	mov	x29, sp
  408af4:	mov	x19, x1
  408af8:	bl	408b90 <ferror@plt+0x5fe0>
  408afc:	cbnz	w0, 408b70 <ferror@plt+0x5fc0>
  408b00:	b	408b20 <ferror@plt+0x5f70>
  408b04:	ldr	w9, [x29, #28]
  408b08:	cmp	w8, #0x0
  408b0c:	cset	w8, ne  // ne = any
  408b10:	cmp	w9, #0x0
  408b14:	cset	w9, ne  // ne = any
  408b18:	and	w8, w8, w9
  408b1c:	str	w8, [x19]
  408b20:	add	x0, x29, #0x1c
  408b24:	bl	408658 <ferror@plt+0x5aa8>
  408b28:	cmp	w0, #0x12
  408b2c:	b.ne	408b5c <ferror@plt+0x5fac>  // b.any
  408b30:	add	x0, x29, #0x1c
  408b34:	bl	408658 <ferror@plt+0x5aa8>
  408b38:	cbz	w0, 408b60 <ferror@plt+0x5fb0>
  408b3c:	add	x1, x29, #0x1c
  408b40:	bl	408b90 <ferror@plt+0x5fe0>
  408b44:	ldr	w8, [x19]
  408b48:	cbz	w0, 408b04 <ferror@plt+0x5f54>
  408b4c:	cmp	w0, #0x3
  408b50:	b.hi	408b70 <ferror@plt+0x5fc0>  // b.pmore
  408b54:	cbz	w8, 408b20 <ferror@plt+0x5f70>
  408b58:	b	408b70 <ferror@plt+0x5fc0>
  408b5c:	cbnz	w0, 408b68 <ferror@plt+0x5fb8>
  408b60:	mov	w0, #0x6                   	// #6
  408b64:	b	408b70 <ferror@plt+0x5fc0>
  408b68:	bl	408b7c <ferror@plt+0x5fcc>
  408b6c:	mov	w0, wzr
  408b70:	ldr	x19, [sp, #16]
  408b74:	ldp	x29, x30, [sp], #32
  408b78:	ret
  408b7c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408b80:	ldr	x8, [x8, #2224]
  408b84:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408b88:	str	x8, [x9, #2216]
  408b8c:	ret
  408b90:	stp	x29, x30, [sp, #-32]!
  408b94:	str	x19, [sp, #16]
  408b98:	mov	x29, sp
  408b9c:	mov	x19, x1
  408ba0:	bl	408c04 <ferror@plt+0x6054>
  408ba4:	cbnz	w0, 408bf8 <ferror@plt+0x6048>
  408ba8:	b	408bd4 <ferror@plt+0x6024>
  408bac:	add	x0, x29, #0x1c
  408bb0:	bl	408658 <ferror@plt+0x5aa8>
  408bb4:	cbz	w0, 408be8 <ferror@plt+0x6038>
  408bb8:	add	x1, x29, #0x1c
  408bbc:	bl	408c04 <ferror@plt+0x6054>
  408bc0:	cbnz	w0, 408bf8 <ferror@plt+0x6048>
  408bc4:	ldr	w8, [x29, #28]
  408bc8:	ldr	w9, [x19]
  408bcc:	orr	w8, w9, w8
  408bd0:	str	w8, [x19]
  408bd4:	add	x0, x29, #0x1c
  408bd8:	bl	408658 <ferror@plt+0x5aa8>
  408bdc:	cmp	w0, #0x16
  408be0:	b.eq	408bac <ferror@plt+0x5ffc>  // b.none
  408be4:	cbnz	w0, 408bf0 <ferror@plt+0x6040>
  408be8:	mov	w0, #0x6                   	// #6
  408bec:	b	408bf8 <ferror@plt+0x6048>
  408bf0:	bl	408b7c <ferror@plt+0x5fcc>
  408bf4:	mov	w0, wzr
  408bf8:	ldr	x19, [sp, #16]
  408bfc:	ldp	x29, x30, [sp], #32
  408c00:	ret
  408c04:	stp	x29, x30, [sp, #-32]!
  408c08:	str	x19, [sp, #16]
  408c0c:	mov	x29, sp
  408c10:	mov	x19, x1
  408c14:	bl	408c78 <ferror@plt+0x60c8>
  408c18:	cbnz	w0, 408c6c <ferror@plt+0x60bc>
  408c1c:	b	408c48 <ferror@plt+0x6098>
  408c20:	add	x0, x29, #0x1c
  408c24:	bl	408658 <ferror@plt+0x5aa8>
  408c28:	cbz	w0, 408c5c <ferror@plt+0x60ac>
  408c2c:	add	x1, x29, #0x1c
  408c30:	bl	408c78 <ferror@plt+0x60c8>
  408c34:	cbnz	w0, 408c6c <ferror@plt+0x60bc>
  408c38:	ldr	w8, [x29, #28]
  408c3c:	ldr	w9, [x19]
  408c40:	eor	w8, w9, w8
  408c44:	str	w8, [x19]
  408c48:	add	x0, x29, #0x1c
  408c4c:	bl	408658 <ferror@plt+0x5aa8>
  408c50:	cmp	w0, #0x17
  408c54:	b.eq	408c20 <ferror@plt+0x6070>  // b.none
  408c58:	cbnz	w0, 408c64 <ferror@plt+0x60b4>
  408c5c:	mov	w0, #0x6                   	// #6
  408c60:	b	408c6c <ferror@plt+0x60bc>
  408c64:	bl	408b7c <ferror@plt+0x5fcc>
  408c68:	mov	w0, wzr
  408c6c:	ldr	x19, [sp, #16]
  408c70:	ldp	x29, x30, [sp], #32
  408c74:	ret
  408c78:	stp	x29, x30, [sp, #-32]!
  408c7c:	str	x19, [sp, #16]
  408c80:	mov	x29, sp
  408c84:	mov	x19, x1
  408c88:	bl	408cec <ferror@plt+0x613c>
  408c8c:	cbnz	w0, 408ce0 <ferror@plt+0x6130>
  408c90:	b	408cbc <ferror@plt+0x610c>
  408c94:	add	x0, x29, #0x1c
  408c98:	bl	408658 <ferror@plt+0x5aa8>
  408c9c:	cbz	w0, 408cd0 <ferror@plt+0x6120>
  408ca0:	add	x1, x29, #0x1c
  408ca4:	bl	408cec <ferror@plt+0x613c>
  408ca8:	cbnz	w0, 408ce0 <ferror@plt+0x6130>
  408cac:	ldr	w8, [x29, #28]
  408cb0:	ldr	w9, [x19]
  408cb4:	and	w8, w9, w8
  408cb8:	str	w8, [x19]
  408cbc:	add	x0, x29, #0x1c
  408cc0:	bl	408658 <ferror@plt+0x5aa8>
  408cc4:	cmp	w0, #0x15
  408cc8:	b.eq	408c94 <ferror@plt+0x60e4>  // b.none
  408ccc:	cbnz	w0, 408cd8 <ferror@plt+0x6128>
  408cd0:	mov	w0, #0x6                   	// #6
  408cd4:	b	408ce0 <ferror@plt+0x6130>
  408cd8:	bl	408b7c <ferror@plt+0x5fcc>
  408cdc:	mov	w0, wzr
  408ce0:	ldr	x19, [sp, #16]
  408ce4:	ldp	x29, x30, [sp], #32
  408ce8:	ret
  408cec:	sub	sp, sp, #0x40
  408cf0:	stp	x29, x30, [sp, #16]
  408cf4:	stp	x22, x21, [sp, #32]
  408cf8:	stp	x20, x19, [sp, #48]
  408cfc:	add	x29, sp, #0x10
  408d00:	mov	x19, x1
  408d04:	bl	408db4 <ferror@plt+0x6204>
  408d08:	cbnz	w0, 408da0 <ferror@plt+0x61f0>
  408d0c:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x282c>
  408d10:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408d14:	add	x20, x20, #0x469
  408d18:	b	408d3c <ferror@plt+0x618c>
  408d1c:	ldr	w8, [x19]
  408d20:	ldur	w9, [x29, #-4]
  408d24:	cmp	w21, #0x9
  408d28:	cset	w10, ne  // ne = any
  408d2c:	cmp	w8, w9
  408d30:	cset	w8, eq  // eq = none
  408d34:	eor	w8, w10, w8
  408d38:	str	w8, [x19]
  408d3c:	sub	x0, x29, #0x4
  408d40:	bl	408658 <ferror@plt+0x5aa8>
  408d44:	sub	w8, w0, #0x8
  408d48:	mov	w21, w0
  408d4c:	cmp	w8, #0x3
  408d50:	b.cs	408d8c <ferror@plt+0x61dc>  // b.hs, b.nlast
  408d54:	sub	x0, x29, #0x4
  408d58:	bl	408658 <ferror@plt+0x5aa8>
  408d5c:	cbz	w0, 408d90 <ferror@plt+0x61e0>
  408d60:	sub	x1, x29, #0x4
  408d64:	bl	408db4 <ferror@plt+0x6204>
  408d68:	cbnz	w0, 408da0 <ferror@plt+0x61f0>
  408d6c:	cmp	w21, #0x8
  408d70:	b.ne	408d1c <ferror@plt+0x616c>  // b.any
  408d74:	ldr	w0, [x22, #1224]
  408d78:	mov	w1, wzr
  408d7c:	mov	x2, x20
  408d80:	bl	402cbc <ferror@plt+0x10c>
  408d84:	mov	w21, #0x9                   	// #9
  408d88:	b	408d1c <ferror@plt+0x616c>
  408d8c:	cbnz	w21, 408d98 <ferror@plt+0x61e8>
  408d90:	mov	w0, #0x6                   	// #6
  408d94:	b	408da0 <ferror@plt+0x61f0>
  408d98:	bl	408b7c <ferror@plt+0x5fcc>
  408d9c:	mov	w0, wzr
  408da0:	ldp	x20, x19, [sp, #48]
  408da4:	ldp	x22, x21, [sp, #32]
  408da8:	ldp	x29, x30, [sp, #16]
  408dac:	add	sp, sp, #0x40
  408db0:	ret
  408db4:	stp	x29, x30, [sp, #-48]!
  408db8:	str	x21, [sp, #16]
  408dbc:	stp	x20, x19, [sp, #32]
  408dc0:	mov	x29, sp
  408dc4:	mov	x19, x1
  408dc8:	bl	408ed0 <ferror@plt+0x6320>
  408dcc:	cbnz	w0, 408ea4 <ferror@plt+0x62f4>
  408dd0:	add	x0, x29, #0x1c
  408dd4:	bl	408658 <ferror@plt+0x5aa8>
  408dd8:	sub	w8, w0, #0xb
  408ddc:	mov	w20, w0
  408de0:	cmp	w8, #0x3
  408de4:	b.hi	408e90 <ferror@plt+0x62e0>  // b.pmore
  408de8:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x282c>
  408dec:	add	x21, x21, #0x323
  408df0:	b	408e20 <ferror@plt+0x6270>
  408df4:	ldr	w8, [x19]
  408df8:	ldr	w9, [x29, #28]
  408dfc:	cmp	w8, w9
  408e00:	cset	w8, lt  // lt = tstop
  408e04:	add	x0, x29, #0x1c
  408e08:	str	w8, [x19]
  408e0c:	bl	408658 <ferror@plt+0x5aa8>
  408e10:	sub	w8, w0, #0xb
  408e14:	mov	w20, w0
  408e18:	cmp	w8, #0x4
  408e1c:	b.cs	408e90 <ferror@plt+0x62e0>  // b.hs, b.nlast
  408e20:	add	x0, x29, #0x1c
  408e24:	bl	408658 <ferror@plt+0x5aa8>
  408e28:	cbz	w0, 408ea0 <ferror@plt+0x62f0>
  408e2c:	add	x1, x29, #0x1c
  408e30:	bl	408ed0 <ferror@plt+0x6320>
  408e34:	cbnz	w0, 408ea4 <ferror@plt+0x62f4>
  408e38:	sub	w8, w20, #0xb
  408e3c:	cmp	w8, #0x3
  408e40:	b.hi	408eb4 <ferror@plt+0x6304>  // b.pmore
  408e44:	adr	x9, 408df4 <ferror@plt+0x6244>
  408e48:	ldrb	w10, [x21, x8]
  408e4c:	add	x9, x9, x10, lsl #2
  408e50:	br	x9
  408e54:	ldr	w8, [x19]
  408e58:	ldr	w9, [x29, #28]
  408e5c:	cmp	w8, w9
  408e60:	cset	w8, gt
  408e64:	b	408e04 <ferror@plt+0x6254>
  408e68:	ldr	w8, [x19]
  408e6c:	ldr	w9, [x29, #28]
  408e70:	cmp	w8, w9
  408e74:	cset	w8, le
  408e78:	b	408e04 <ferror@plt+0x6254>
  408e7c:	ldr	w8, [x19]
  408e80:	ldr	w9, [x29, #28]
  408e84:	cmp	w8, w9
  408e88:	cset	w8, ge  // ge = tcont
  408e8c:	b	408e04 <ferror@plt+0x6254>
  408e90:	cbz	w20, 408ea0 <ferror@plt+0x62f0>
  408e94:	bl	408b7c <ferror@plt+0x5fcc>
  408e98:	mov	w0, wzr
  408e9c:	b	408ea4 <ferror@plt+0x62f4>
  408ea0:	mov	w0, #0x6                   	// #6
  408ea4:	ldp	x20, x19, [sp, #32]
  408ea8:	ldr	x21, [sp, #16]
  408eac:	ldp	x29, x30, [sp], #48
  408eb0:	ret
  408eb4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408eb8:	ldr	w0, [x8, #1224]
  408ebc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  408ec0:	add	x2, x2, #0x49d
  408ec4:	mov	w1, wzr
  408ec8:	bl	402cbc <ferror@plt+0x10c>
  408ecc:	bl	4028d0 <abort@plt>
  408ed0:	sub	sp, sp, #0x30
  408ed4:	stp	x29, x30, [sp, #16]
  408ed8:	stp	x20, x19, [sp, #32]
  408edc:	add	x29, sp, #0x10
  408ee0:	mov	x19, x1
  408ee4:	bl	408fb0 <ferror@plt+0x6400>
  408ee8:	cbnz	w0, 408f84 <ferror@plt+0x63d4>
  408eec:	sub	x0, x29, #0x4
  408ef0:	bl	408658 <ferror@plt+0x5aa8>
  408ef4:	sub	w8, w0, #0xf
  408ef8:	mov	w20, w0
  408efc:	cmp	w8, #0x1
  408f00:	b.ls	408f48 <ferror@plt+0x6398>  // b.plast
  408f04:	cbz	w20, 408f80 <ferror@plt+0x63d0>
  408f08:	bl	408b7c <ferror@plt+0x5fcc>
  408f0c:	mov	w0, wzr
  408f10:	b	408f84 <ferror@plt+0x63d4>
  408f14:	ldr	w8, [x19]
  408f18:	ldur	w9, [x29, #-4]
  408f1c:	asr	w10, w8, #31
  408f20:	eor	w8, w10, w8
  408f24:	lsr	w8, w8, w9
  408f28:	eor	w8, w8, w10
  408f2c:	sub	x0, x29, #0x4
  408f30:	str	w8, [x19]
  408f34:	bl	408658 <ferror@plt+0x5aa8>
  408f38:	sub	w8, w0, #0xf
  408f3c:	mov	w20, w0
  408f40:	cmp	w8, #0x2
  408f44:	b.cs	408f04 <ferror@plt+0x6354>  // b.hs, b.nlast
  408f48:	sub	x0, x29, #0x4
  408f4c:	bl	408658 <ferror@plt+0x5aa8>
  408f50:	cbz	w0, 408f80 <ferror@plt+0x63d0>
  408f54:	sub	x1, x29, #0x4
  408f58:	bl	408fb0 <ferror@plt+0x6400>
  408f5c:	cbnz	w0, 408f84 <ferror@plt+0x63d4>
  408f60:	cmp	w20, #0x10
  408f64:	b.eq	408f14 <ferror@plt+0x6364>  // b.none
  408f68:	cmp	w20, #0xf
  408f6c:	b.ne	408f94 <ferror@plt+0x63e4>  // b.any
  408f70:	ldr	w8, [x19]
  408f74:	ldur	w9, [x29, #-4]
  408f78:	lsl	w8, w8, w9
  408f7c:	b	408f2c <ferror@plt+0x637c>
  408f80:	mov	w0, #0x6                   	// #6
  408f84:	ldp	x20, x19, [sp, #32]
  408f88:	ldp	x29, x30, [sp, #16]
  408f8c:	add	sp, sp, #0x30
  408f90:	ret
  408f94:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  408f98:	ldr	w0, [x8, #1224]
  408f9c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  408fa0:	add	x2, x2, #0x4d4
  408fa4:	mov	w1, wzr
  408fa8:	bl	402cbc <ferror@plt+0x10c>
  408fac:	bl	4028d0 <abort@plt>
  408fb0:	sub	sp, sp, #0x30
  408fb4:	stp	x29, x30, [sp, #16]
  408fb8:	stp	x20, x19, [sp, #32]
  408fbc:	add	x29, sp, #0x10
  408fc0:	mov	x19, x1
  408fc4:	bl	40903c <ferror@plt+0x648c>
  408fc8:	cbnz	w0, 40902c <ferror@plt+0x647c>
  408fcc:	b	409000 <ferror@plt+0x6450>
  408fd0:	sub	x0, x29, #0x4
  408fd4:	bl	408658 <ferror@plt+0x5aa8>
  408fd8:	cbz	w0, 409028 <ferror@plt+0x6478>
  408fdc:	sub	x1, x29, #0x4
  408fe0:	bl	40903c <ferror@plt+0x648c>
  408fe4:	cbnz	w0, 40902c <ferror@plt+0x647c>
  408fe8:	ldur	w8, [x29, #-4]
  408fec:	ldr	w9, [x19]
  408ff0:	cmp	w20, #0x2
  408ff4:	cneg	w8, w8, ne  // ne = any
  408ff8:	add	w8, w8, w9
  408ffc:	str	w8, [x19]
  409000:	sub	x0, x29, #0x4
  409004:	bl	408658 <ferror@plt+0x5aa8>
  409008:	orr	w8, w0, #0x1
  40900c:	mov	w20, w0
  409010:	cmp	w8, #0x3
  409014:	b.eq	408fd0 <ferror@plt+0x6420>  // b.none
  409018:	cbz	w20, 409028 <ferror@plt+0x6478>
  40901c:	bl	408b7c <ferror@plt+0x5fcc>
  409020:	mov	w0, wzr
  409024:	b	40902c <ferror@plt+0x647c>
  409028:	mov	w0, #0x6                   	// #6
  40902c:	ldp	x20, x19, [sp, #32]
  409030:	ldp	x29, x30, [sp, #16]
  409034:	add	sp, sp, #0x30
  409038:	ret
  40903c:	sub	sp, sp, #0x30
  409040:	stp	x29, x30, [sp, #16]
  409044:	stp	x20, x19, [sp, #32]
  409048:	add	x29, sp, #0x10
  40904c:	mov	x19, x1
  409050:	bl	40916c <ferror@plt+0x65bc>
  409054:	cbz	w0, 409068 <ferror@plt+0x64b8>
  409058:	ldp	x20, x19, [sp, #32]
  40905c:	ldp	x29, x30, [sp, #16]
  409060:	add	sp, sp, #0x30
  409064:	ret
  409068:	sub	x0, x29, #0x4
  40906c:	bl	408658 <ferror@plt+0x5aa8>
  409070:	sub	w8, w0, #0x5
  409074:	mov	w20, w0
  409078:	cmp	w8, #0x2
  40907c:	b.ls	4090b4 <ferror@plt+0x6504>  // b.plast
  409080:	cbz	w20, 409138 <ferror@plt+0x6588>
  409084:	bl	408b7c <ferror@plt+0x5fcc>
  409088:	mov	w0, wzr
  40908c:	b	409058 <ferror@plt+0x64a8>
  409090:	ldr	w8, [x19]
  409094:	neg	w8, w8
  409098:	sub	x0, x29, #0x4
  40909c:	str	w8, [x19]
  4090a0:	bl	408658 <ferror@plt+0x5aa8>
  4090a4:	sub	w8, w0, #0x5
  4090a8:	mov	w20, w0
  4090ac:	cmp	w8, #0x3
  4090b0:	b.cs	409080 <ferror@plt+0x64d0>  // b.hs, b.nlast
  4090b4:	sub	x0, x29, #0x4
  4090b8:	bl	408658 <ferror@plt+0x5aa8>
  4090bc:	cbz	w0, 409138 <ferror@plt+0x6588>
  4090c0:	sub	x1, x29, #0x4
  4090c4:	bl	40916c <ferror@plt+0x65bc>
  4090c8:	cbnz	w0, 409058 <ferror@plt+0x64a8>
  4090cc:	cmp	w20, #0x7
  4090d0:	b.eq	409110 <ferror@plt+0x6560>  // b.none
  4090d4:	cmp	w20, #0x6
  4090d8:	b.eq	4090f4 <ferror@plt+0x6544>  // b.none
  4090dc:	cmp	w20, #0x5
  4090e0:	b.ne	409150 <ferror@plt+0x65a0>  // b.any
  4090e4:	ldr	w8, [x19]
  4090e8:	ldur	w9, [x29, #-4]
  4090ec:	mul	w8, w9, w8
  4090f0:	b	409098 <ferror@plt+0x64e8>
  4090f4:	ldur	w8, [x29, #-4]
  4090f8:	cmn	w8, #0x1
  4090fc:	b.eq	409090 <ferror@plt+0x64e0>  // b.none
  409100:	cbz	w8, 409140 <ferror@plt+0x6590>
  409104:	ldr	w9, [x19]
  409108:	sdiv	w8, w9, w8
  40910c:	b	409098 <ferror@plt+0x64e8>
  409110:	ldur	w8, [x29, #-4]
  409114:	cmn	w8, #0x1
  409118:	b.eq	409130 <ferror@plt+0x6580>  // b.none
  40911c:	cbz	w8, 409148 <ferror@plt+0x6598>
  409120:	ldr	w9, [x19]
  409124:	sdiv	w10, w9, w8
  409128:	msub	w8, w10, w8, w9
  40912c:	b	409098 <ferror@plt+0x64e8>
  409130:	mov	w8, wzr
  409134:	b	409098 <ferror@plt+0x64e8>
  409138:	mov	w0, #0x6                   	// #6
  40913c:	b	409058 <ferror@plt+0x64a8>
  409140:	mov	w0, #0x1                   	// #1
  409144:	b	409058 <ferror@plt+0x64a8>
  409148:	mov	w0, #0x2                   	// #2
  40914c:	b	409058 <ferror@plt+0x64a8>
  409150:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409154:	ldr	w0, [x8, #1224]
  409158:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40915c:	add	x2, x2, #0x508
  409160:	mov	w1, wzr
  409164:	bl	402cbc <ferror@plt+0x10c>
  409168:	bl	4028d0 <abort@plt>
  40916c:	stp	x29, x30, [sp, #-32]!
  409170:	str	x19, [sp, #16]
  409174:	mov	x29, sp
  409178:	mov	x19, x1
  40917c:	bl	409230 <ferror@plt+0x6680>
  409180:	cbz	w0, 409198 <ferror@plt+0x65e8>
  409184:	ldr	x19, [sp, #16]
  409188:	ldp	x29, x30, [sp], #32
  40918c:	ret
  409190:	mov	w9, #0x1                   	// #1
  409194:	str	w9, [x19]
  409198:	add	x0, x29, #0x1c
  40919c:	bl	408658 <ferror@plt+0x5aa8>
  4091a0:	cmp	w0, #0x4
  4091a4:	b.ne	409208 <ferror@plt+0x6658>  // b.any
  4091a8:	add	x0, x29, #0x1c
  4091ac:	bl	408658 <ferror@plt+0x5aa8>
  4091b0:	cbz	w0, 40920c <ferror@plt+0x665c>
  4091b4:	add	x1, x29, #0x1c
  4091b8:	bl	40916c <ferror@plt+0x65bc>
  4091bc:	cbnz	w0, 409184 <ferror@plt+0x65d4>
  4091c0:	ldr	w9, [x29, #28]
  4091c4:	tbnz	w9, #31, 409214 <ferror@plt+0x6664>
  4091c8:	ldr	w8, [x19]
  4091cc:	orr	w9, w8, w9
  4091d0:	cbz	w9, 40921c <ferror@plt+0x666c>
  4091d4:	ldr	w9, [x29, #28]
  4091d8:	subs	w9, w9, #0x1
  4091dc:	str	w9, [x29, #28]
  4091e0:	b.lt	409190 <ferror@plt+0x65e0>  // b.tstop
  4091e4:	ldr	w10, [x29, #28]
  4091e8:	mov	w9, #0x1                   	// #1
  4091ec:	mul	w9, w9, w8
  4091f0:	cmp	w10, #0x0
  4091f4:	sub	w10, w10, #0x1
  4091f8:	b.gt	4091ec <ferror@plt+0x663c>
  4091fc:	str	w10, [x29, #28]
  409200:	str	w9, [x19]
  409204:	b	409198 <ferror@plt+0x65e8>
  409208:	cbnz	w0, 409224 <ferror@plt+0x6674>
  40920c:	mov	w0, #0x6                   	// #6
  409210:	b	409184 <ferror@plt+0x65d4>
  409214:	mov	w0, #0x3                   	// #3
  409218:	b	409184 <ferror@plt+0x65d4>
  40921c:	mov	w0, #0x1                   	// #1
  409220:	b	409184 <ferror@plt+0x65d4>
  409224:	bl	408b7c <ferror@plt+0x5fcc>
  409228:	mov	w0, wzr
  40922c:	b	409184 <ferror@plt+0x65d4>
  409230:	stp	x29, x30, [sp, #-32]!
  409234:	stp	x20, x19, [sp, #16]
  409238:	mov	w20, w0
  40923c:	cmp	w0, #0x14
  409240:	mov	x19, x1
  409244:	mov	x29, sp
  409248:	b.hi	4092a4 <ferror@plt+0x66f4>  // b.pmore
  40924c:	mov	w8, #0x1                   	// #1
  409250:	mov	w9, #0xc                   	// #12
  409254:	lsl	w8, w8, w20
  409258:	movk	w9, #0x12, lsl #16
  40925c:	tst	w8, w9
  409260:	b.eq	4092a4 <ferror@plt+0x66f4>  // b.none
  409264:	mov	x0, x19
  409268:	bl	408658 <ferror@plt+0x5aa8>
  40926c:	cbz	w0, 409294 <ferror@plt+0x66e4>
  409270:	mov	x1, x19
  409274:	bl	409230 <ferror@plt+0x6680>
  409278:	cbz	w0, 4092b8 <ferror@plt+0x6708>
  40927c:	mov	w8, wzr
  409280:	tbz	wzr, #0, 409288 <ferror@plt+0x66d8>
  409284:	mov	w0, wzr
  409288:	ldp	x20, x19, [sp, #16]
  40928c:	ldp	x29, x30, [sp], #32
  409290:	ret
  409294:	mov	w0, #0x6                   	// #6
  409298:	mov	w8, wzr
  40929c:	tbnz	wzr, #0, 409284 <ferror@plt+0x66d4>
  4092a0:	b	409288 <ferror@plt+0x66d8>
  4092a4:	mov	w0, w20
  4092a8:	mov	x1, x19
  4092ac:	bl	409304 <ferror@plt+0x6754>
  4092b0:	cbnz	w0, 409288 <ferror@plt+0x66d8>
  4092b4:	b	409284 <ferror@plt+0x66d4>
  4092b8:	cmp	w20, #0x14
  4092bc:	b.eq	4092dc <ferror@plt+0x672c>  // b.none
  4092c0:	cmp	w20, #0x11
  4092c4:	b.eq	4092e8 <ferror@plt+0x6738>  // b.none
  4092c8:	cmp	w20, #0x3
  4092cc:	b.ne	4092f8 <ferror@plt+0x6748>  // b.any
  4092d0:	ldr	w8, [x19]
  4092d4:	neg	w8, w8
  4092d8:	b	4092f4 <ferror@plt+0x6744>
  4092dc:	ldr	w8, [x19]
  4092e0:	mvn	w8, w8
  4092e4:	b	4092f4 <ferror@plt+0x6744>
  4092e8:	ldr	w8, [x19]
  4092ec:	cmp	w8, #0x0
  4092f0:	cset	w8, eq  // eq = none
  4092f4:	str	w8, [x19]
  4092f8:	mov	w8, #0x1                   	// #1
  4092fc:	tbnz	w8, #0, 409284 <ferror@plt+0x66d4>
  409300:	b	409288 <ferror@plt+0x66d8>
  409304:	stp	x29, x30, [sp, #-32]!
  409308:	cmp	w0, #0x1
  40930c:	str	x19, [sp, #16]
  409310:	mov	x29, sp
  409314:	b.eq	409368 <ferror@plt+0x67b8>  // b.none
  409318:	cmp	w0, #0x1a
  40931c:	b.eq	409370 <ferror@plt+0x67c0>  // b.none
  409320:	cmp	w0, #0x18
  409324:	b.ne	409378 <ferror@plt+0x67c8>  // b.any
  409328:	mov	x0, x1
  40932c:	mov	x19, x1
  409330:	bl	408658 <ferror@plt+0x5aa8>
  409334:	cbz	w0, 409380 <ferror@plt+0x67d0>
  409338:	mov	x1, x19
  40933c:	bl	408a54 <ferror@plt+0x5ea4>
  409340:	cbnz	w0, 409384 <ferror@plt+0x67d4>
  409344:	add	x0, x29, #0x1c
  409348:	bl	408658 <ferror@plt+0x5aa8>
  40934c:	cmp	w0, #0x19
  409350:	mov	w8, #0x5                   	// #5
  409354:	csel	w8, wzr, w8, eq  // eq = none
  409358:	cmp	w0, #0x0
  40935c:	mov	w9, #0x6                   	// #6
  409360:	csel	w0, w9, w8, eq  // eq = none
  409364:	b	409384 <ferror@plt+0x67d4>
  409368:	mov	w0, #0x8                   	// #8
  40936c:	b	409384 <ferror@plt+0x67d4>
  409370:	mov	w0, wzr
  409374:	b	409384 <ferror@plt+0x67d4>
  409378:	mov	w0, #0x4                   	// #4
  40937c:	b	409384 <ferror@plt+0x67d4>
  409380:	mov	w0, #0x6                   	// #6
  409384:	ldr	x19, [sp, #16]
  409388:	ldp	x29, x30, [sp], #32
  40938c:	ret
  409390:	sub	sp, sp, #0x140
  409394:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x282c>
  409398:	add	x8, x8, #0x583
  40939c:	ldr	x9, [x8]
  4093a0:	ldur	x8, [x8, #6]
  4093a4:	stp	x29, x30, [sp, #224]
  4093a8:	stp	x20, x19, [sp, #304]
  4093ac:	add	x29, sp, #0xe0
  4093b0:	mov	x20, x0
  4093b4:	stp	x28, x27, [sp, #240]
  4093b8:	stp	x26, x25, [sp, #256]
  4093bc:	stp	x24, x23, [sp, #272]
  4093c0:	stp	x22, x21, [sp, #288]
  4093c4:	stur	x9, [x29, #-24]
  4093c8:	stur	x8, [x29, #-18]
  4093cc:	cbz	w1, 4093e4 <ferror@plt+0x6834>
  4093d0:	ldr	x8, [x2], #8
  4093d4:	sub	w27, w1, #0x1
  4093d8:	ldr	x25, [x8, #8]
  4093dc:	str	x2, [sp, #56]
  4093e0:	b	4093f4 <ferror@plt+0x6844>
  4093e4:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x182c>
  4093e8:	str	x2, [sp, #56]
  4093ec:	mov	w27, wzr
  4093f0:	add	x25, x25, #0xe37
  4093f4:	sub	x8, x29, #0x18
  4093f8:	add	x9, sp, #0x40
  4093fc:	orr	x10, x8, #0x1
  409400:	stp	x25, x10, [sp, #32]
  409404:	add	x10, x9, #0x73
  409408:	str	x10, [sp, #16]
  40940c:	add	x10, x9, #0x63
  409410:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x282c>
  409414:	movi	v0.2d, #0x0
  409418:	mov	w22, #0x1                   	// #1
  40941c:	mov	w21, #0xa                   	// #10
  409420:	mov	w28, #0x68                  	// #104
  409424:	str	x10, [sp, #48]
  409428:	add	x10, x9, #0x41
  40942c:	add	x9, x9, #0x61
  409430:	orr	x8, x8, #0x2
  409434:	add	x19, x19, #0x535
  409438:	stp	q0, q0, [sp, #160]
  40943c:	stp	q0, q0, [sp, #128]
  409440:	stp	q0, q0, [sp, #96]
  409444:	stp	q0, q0, [sp, #64]
  409448:	stp	x9, x10, [sp]
  40944c:	str	x8, [sp, #24]
  409450:	b	409480 <ferror@plt+0x68d0>
  409454:	ldr	x0, [x20, #24]
  409458:	mov	x1, x25
  40945c:	mov	x2, x23
  409460:	bl	402510 <memcpy@plt>
  409464:	ldr	x8, [x20, #24]
  409468:	add	x8, x8, x23
  40946c:	str	x8, [x20, #24]
  409470:	mov	w8, #0x1                   	// #1
  409474:	orr	w8, w8, #0x2
  409478:	cmp	w8, #0x2
  40947c:	b.ne	409abc <ferror@plt+0x6f0c>  // b.any
  409480:	mov	w1, #0x25                  	// #37
  409484:	mov	x0, x25
  409488:	bl	402a00 <strchr@plt>
  40948c:	cbz	x0, 409514 <ferror@plt+0x6964>
  409490:	ldp	x9, x8, [x20, #24]
  409494:	sub	x24, x0, x25
  409498:	mov	x23, x0
  40949c:	sub	x8, x8, x9
  4094a0:	cmp	x8, x24
  4094a4:	b.cs	4094b4 <ferror@plt+0x6904>  // b.hs, b.nlast
  4094a8:	mov	x0, x20
  4094ac:	mov	x1, x24
  4094b0:	bl	41659c <_obstack_newchunk@@Base>
  4094b4:	ldr	x0, [x20, #24]
  4094b8:	mov	x1, x25
  4094bc:	mov	x2, x24
  4094c0:	bl	402510 <memcpy@plt>
  4094c4:	ldr	x8, [x20, #24]
  4094c8:	add	x8, x8, x24
  4094cc:	str	x8, [x20, #24]
  4094d0:	ldrb	w9, [x23, #1]
  4094d4:	cmp	w9, #0x25
  4094d8:	b.ne	409540 <ferror@plt+0x6990>  // b.any
  4094dc:	ldr	x9, [x20, #32]
  4094e0:	cmp	x9, x8
  4094e4:	b.ne	4094f4 <ferror@plt+0x6944>  // b.any
  4094e8:	mov	w1, #0x1                   	// #1
  4094ec:	mov	x0, x20
  4094f0:	bl	41659c <_obstack_newchunk@@Base>
  4094f4:	ldr	x8, [x20, #24]
  4094f8:	add	x25, x23, #0x2
  4094fc:	add	x9, x8, #0x1
  409500:	str	x9, [x20, #24]
  409504:	mov	w9, #0x25                  	// #37
  409508:	strb	w9, [x8]
  40950c:	mov	w8, #0x2                   	// #2
  409510:	b	409474 <ferror@plt+0x68c4>
  409514:	mov	x0, x25
  409518:	bl	402540 <strlen@plt>
  40951c:	ldp	x9, x8, [x20, #24]
  409520:	mov	x23, x0
  409524:	sub	x8, x8, x9
  409528:	cmp	x8, x0
  40952c:	b.cs	409454 <ferror@plt+0x68a4>  // b.hs, b.nlast
  409530:	mov	x0, x20
  409534:	mov	x1, x23
  409538:	bl	41659c <_obstack_newchunk@@Base>
  40953c:	b	409454 <ferror@plt+0x68a4>
  409540:	ldr	x10, [sp, #48]
  409544:	mov	w9, #0x101                 	// #257
  409548:	mov	w8, wzr
  40954c:	sturh	w9, [sp, #133]
  409550:	mov	w9, #0x1010101             	// #16843009
  409554:	strb	w22, [sp, #152]
  409558:	strb	w22, [sp, #184]
  40955c:	strb	w22, [sp, #181]
  409560:	strb	w22, [sp, #179]
  409564:	strb	w22, [sp, #175]
  409568:	strb	w22, [sp, #169]
  40956c:	strb	w22, [sp, #135]
  409570:	strb	w22, [sp, #129]
  409574:	strb	w22, [sp, #161]
  409578:	strb	w9, [x10, #4]
  40957c:	str	w9, [x10]
  409580:	b	4095a4 <ferror@plt+0x69f4>
  409584:	strb	wzr, [sp, #181]
  409588:	strb	wzr, [sp, #179]
  40958c:	strb	wzr, [sp, #169]
  409590:	sturh	wzr, [sp, #163]
  409594:	mov	w9, #0x20                  	// #32
  409598:	orr	w8, w8, w9
  40959c:	add	x23, x23, #0x1
  4095a0:	tbnz	w8, #6, 40964c <ferror@plt+0x6a9c>
  4095a4:	ldrb	w9, [x23, #1]
  4095a8:	sub	w9, w9, #0x20
  4095ac:	cmp	w9, #0x10
  4095b0:	b.hi	4095f8 <ferror@plt+0x6a48>  // b.pmore
  4095b4:	adr	x10, 409584 <ferror@plt+0x69d4>
  4095b8:	ldrb	w11, [x19, x9]
  4095bc:	add	x10, x10, x11, lsl #2
  4095c0:	mov	w9, #0x4                   	// #4
  4095c4:	br	x10
  4095c8:	strb	wzr, [sp, #152]
  4095cc:	strb	wzr, [sp, #184]
  4095d0:	strb	wzr, [sp, #181]
  4095d4:	strb	wzr, [sp, #179]
  4095d8:	strb	wzr, [sp, #175]
  4095dc:	strb	wzr, [sp, #163]
  4095e0:	mov	w9, #0x8                   	// #8
  4095e4:	b	409598 <ferror@plt+0x69e8>
  4095e8:	strb	wzr, [sp, #179]
  4095ec:	strb	wzr, [sp, #163]
  4095f0:	mov	w9, #0x10                  	// #16
  4095f4:	b	409598 <ferror@plt+0x69e8>
  4095f8:	mov	w9, #0x40                  	// #64
  4095fc:	b	409598 <ferror@plt+0x69e8>
  409600:	strb	wzr, [sp, #152]
  409604:	strb	wzr, [sp, #184]
  409608:	strb	wzr, [sp, #179]
  40960c:	strb	wzr, [sp, #175]
  409610:	strb	wzr, [sp, #133]
  409614:	strb	wzr, [sp, #165]
  409618:	strb	wzr, [sp, #163]
  40961c:	strb	wzr, [sp, #129]
  409620:	strb	wzr, [sp, #161]
  409624:	mov	w9, #0x1                   	// #1
  409628:	b	409598 <ferror@plt+0x69e8>
  40962c:	strb	wzr, [sp, #152]
  409630:	strb	wzr, [sp, #184]
  409634:	strb	wzr, [sp, #181]
  409638:	strb	wzr, [sp, #179]
  40963c:	strb	wzr, [sp, #175]
  409640:	strb	wzr, [sp, #163]
  409644:	mov	w9, #0x2                   	// #2
  409648:	b	409598 <ferror@plt+0x69e8>
  40964c:	ldr	x25, [sp, #40]
  409650:	and	w8, w8, #0xff
  409654:	tbnz	w8, #0, 4096ac <ferror@plt+0x6afc>
  409658:	tbnz	w8, #1, 4096bc <ferror@plt+0x6b0c>
  40965c:	tbnz	w8, #2, 4096c8 <ferror@plt+0x6b18>
  409660:	tbnz	w8, #3, 4096d4 <ferror@plt+0x6b24>
  409664:	tbnz	w8, #4, 4096e0 <ferror@plt+0x6b30>
  409668:	tbz	w8, #5, 409674 <ferror@plt+0x6ac4>
  40966c:	mov	w8, #0x23                  	// #35
  409670:	strb	w8, [x25], #1
  409674:	mov	w8, #0x2a                  	// #42
  409678:	strb	w8, [x25]
  40967c:	ldrb	w8, [x23]
  409680:	cmp	w8, #0x2a
  409684:	b.ne	4096f0 <ferror@plt+0x6b40>  // b.any
  409688:	cbz	w27, 409730 <ferror@plt+0x6b80>
  40968c:	ldr	x9, [sp, #56]
  409690:	sub	w27, w27, #0x1
  409694:	ldr	x8, [x9], #8
  409698:	ldr	x0, [x8, #8]
  40969c:	str	x9, [sp, #56]
  4096a0:	bl	409ae0 <ferror@plt+0x6f30>
  4096a4:	mov	w24, w0
  4096a8:	b	409734 <ferror@plt+0x6b84>
  4096ac:	ldr	x25, [sp, #24]
  4096b0:	mov	w9, #0x27                  	// #39
  4096b4:	sturb	w9, [x29, #-23]
  4096b8:	tbz	w8, #1, 40965c <ferror@plt+0x6aac>
  4096bc:	mov	w9, #0x2b                  	// #43
  4096c0:	strb	w9, [x25], #1
  4096c4:	tbz	w8, #2, 409660 <ferror@plt+0x6ab0>
  4096c8:	mov	w9, #0x2d                  	// #45
  4096cc:	strb	w9, [x25], #1
  4096d0:	tbz	w8, #3, 409664 <ferror@plt+0x6ab4>
  4096d4:	mov	w9, #0x20                  	// #32
  4096d8:	strb	w9, [x25], #1
  4096dc:	tbz	w8, #4, 409668 <ferror@plt+0x6ab8>
  4096e0:	mov	w9, #0x30                  	// #48
  4096e4:	strb	w9, [x25], #1
  4096e8:	tbnz	w8, #5, 40966c <ferror@plt+0x6abc>
  4096ec:	b	409674 <ferror@plt+0x6ac4>
  4096f0:	bl	402950 <__ctype_b_loc@plt>
  4096f4:	ldr	x9, [x0]
  4096f8:	ldrb	w8, [x23]
  4096fc:	ldrh	w9, [x9, x8, lsl #1]
  409700:	tbnz	w9, #11, 40970c <ferror@plt+0x6b5c>
  409704:	mov	w24, wzr
  409708:	b	409738 <ferror@plt+0x6b88>
  40970c:	ldr	x9, [x0]
  409710:	mov	w24, wzr
  409714:	mul	w10, w24, w21
  409718:	add	w10, w10, w8, uxtb
  40971c:	ldrb	w8, [x23, #1]!
  409720:	sub	w24, w10, #0x30
  409724:	ldrh	w11, [x9, x8, lsl #1]
  409728:	tbnz	w11, #11, 409714 <ferror@plt+0x6b64>
  40972c:	b	409738 <ferror@plt+0x6b88>
  409730:	mov	w24, wzr
  409734:	add	x23, x23, #0x1
  409738:	mov	w8, #0x2a2e                	// #10798
  40973c:	sturh	w8, [x25, #1]
  409740:	ldrb	w8, [x23]
  409744:	cmp	w8, #0x2e
  409748:	b.ne	409784 <ferror@plt+0x6bd4>  // b.any
  40974c:	strb	wzr, [sp, #163]
  409750:	mov	x28, x23
  409754:	ldrb	w8, [x28, #1]!
  409758:	cmp	w8, #0x2a
  40975c:	b.ne	40978c <ferror@plt+0x6bdc>  // b.any
  409760:	cbz	w27, 4097d4 <ferror@plt+0x6c24>
  409764:	ldr	x9, [sp, #56]
  409768:	sub	w27, w27, #0x1
  40976c:	ldr	x8, [x9], #8
  409770:	ldr	x0, [x8, #8]
  409774:	str	x9, [sp, #56]
  409778:	bl	409ae0 <ferror@plt+0x6f30>
  40977c:	mov	w26, w0
  409780:	b	4097d8 <ferror@plt+0x6c28>
  409784:	mov	w26, #0xffffffff            	// #-1
  409788:	b	4097e0 <ferror@plt+0x6c30>
  40978c:	bl	402950 <__ctype_b_loc@plt>
  409790:	ldr	x9, [x0]
  409794:	ldrb	w8, [x28]
  409798:	ldrh	w9, [x9, x8, lsl #1]
  40979c:	tbnz	w9, #11, 4097a8 <ferror@plt+0x6bf8>
  4097a0:	mov	w26, wzr
  4097a4:	b	4097c8 <ferror@plt+0x6c18>
  4097a8:	ldr	x9, [x0]
  4097ac:	mov	w26, wzr
  4097b0:	mul	w10, w26, w21
  4097b4:	add	w10, w10, w8, uxtb
  4097b8:	ldrb	w8, [x28, #1]!
  4097bc:	sub	w26, w10, #0x30
  4097c0:	ldrh	w11, [x9, x8, lsl #1]
  4097c4:	tbnz	w11, #11, 4097b0 <ferror@plt+0x6c00>
  4097c8:	mov	x23, x28
  4097cc:	mov	w28, #0x68                  	// #104
  4097d0:	b	4097e0 <ferror@plt+0x6c30>
  4097d4:	mov	w26, wzr
  4097d8:	mov	w28, #0x68                  	// #104
  4097dc:	add	x23, x23, #0x2
  4097e0:	ldrb	w8, [x23]
  4097e4:	cmp	w8, #0x68
  4097e8:	b.eq	409814 <ferror@plt+0x6c64>  // b.none
  4097ec:	cmp	w8, #0x6c
  4097f0:	b.ne	409838 <ferror@plt+0x6c88>  // b.any
  4097f4:	ldr	x10, [sp, #16]
  4097f8:	ldr	x11, [sp, #48]
  4097fc:	mov	w9, #0x6c                  	// #108
  409800:	add	x8, x25, #0x4
  409804:	strb	w9, [x25, #3]
  409808:	add	x23, x23, #0x1
  40980c:	mov	w9, #0x1                   	// #1
  409810:	b	40986c <ferror@plt+0x6cbc>
  409814:	strb	w28, [x25, #3]
  409818:	mov	x9, x23
  40981c:	ldrb	w8, [x9, #1]!
  409820:	cmp	w8, #0x68
  409824:	b.ne	409844 <ferror@plt+0x6c94>  // b.any
  409828:	add	x8, x25, #0x5
  40982c:	add	x23, x23, #0x2
  409830:	strb	w28, [x25, #4]
  409834:	b	40984c <ferror@plt+0x6c9c>
  409838:	mov	w9, wzr
  40983c:	add	x8, x25, #0x3
  409840:	b	409874 <ferror@plt+0x6cc4>
  409844:	add	x8, x25, #0x4
  409848:	mov	x23, x9
  40984c:	ldp	x11, x10, [sp]
  409850:	mov	w9, wzr
  409854:	strb	wzr, [sp, #179]
  409858:	strb	wzr, [sp, #135]
  40985c:	strb	wzr, [sp, #167]
  409860:	sturh	wzr, [sp, #133]
  409864:	sturh	wzr, [sp, #165]
  409868:	strb	wzr, [sp, #163]
  40986c:	strb	wzr, [x10]
  409870:	strb	wzr, [x11]
  409874:	mov	x25, x23
  409878:	ldrsb	w28, [x25], #1
  40987c:	tbnz	w28, #31, 4098c4 <ferror@plt+0x6d14>
  409880:	and	x10, x28, #0xff
  409884:	add	x11, sp, #0x40
  409888:	ldrb	w10, [x11, x10]
  40988c:	cbz	w10, 4098c4 <ferror@plt+0x6d14>
  409890:	and	w10, w28, #0xff
  409894:	sub	w10, w10, #0x41
  409898:	cmp	w10, #0x37
  40989c:	b.hi	409adc <ferror@plt+0x6f2c>  // b.pmore
  4098a0:	adrp	x13, 419000 <_obstack_memory_used@@Base+0x282c>
  4098a4:	add	x13, x13, #0x546
  4098a8:	adr	x11, 4098bc <ferror@plt+0x6d0c>
  4098ac:	ldrb	w12, [x13, x10]
  4098b0:	add	x11, x11, x12, lsl #2
  4098b4:	mov	w10, #0x4                   	// #4
  4098b8:	br	x11
  4098bc:	mov	w10, #0x3                   	// #3
  4098c0:	b	4098fc <ferror@plt+0x6d4c>
  4098c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4098c8:	ldr	w0, [x8, #1224]
  4098cc:	ldr	x3, [sp, #32]
  4098d0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4098d4:	mov	w1, wzr
  4098d8:	add	x2, x2, #0x591
  4098dc:	bl	402cbc <ferror@plt+0x10c>
  4098e0:	cmp	w28, #0x0
  4098e4:	csel	x25, x23, x25, eq  // eq = none
  4098e8:	mov	w8, #0x2                   	// #2
  4098ec:	mov	w28, #0x68                  	// #104
  4098f0:	b	409474 <ferror@plt+0x68c4>
  4098f4:	cmp	w9, #0x0
  4098f8:	cinc	w10, w22, ne  // ne = any
  4098fc:	cmp	w10, #0x4
  409900:	strb	w28, [x8]
  409904:	strb	wzr, [x8, #1]
  409908:	b.hi	409adc <ferror@plt+0x6f2c>  // b.pmore
  40990c:	adrp	x11, 419000 <_obstack_memory_used@@Base+0x282c>
  409910:	mov	w8, w10
  409914:	add	x11, x11, #0x57e
  409918:	adr	x9, 40992c <ferror@plt+0x6d7c>
  40991c:	ldrb	w10, [x11, x8]
  409920:	add	x9, x9, x10, lsl #2
  409924:	mov	w28, #0x68                  	// #104
  409928:	br	x9
  40992c:	cbz	w27, 4099d4 <ferror@plt+0x6e24>
  409930:	ldr	x9, [sp, #56]
  409934:	sub	w27, w27, #0x1
  409938:	ldr	x8, [x9], #8
  40993c:	ldr	x0, [x8, #8]
  409940:	str	x9, [sp, #56]
  409944:	bl	409ae0 <ferror@plt+0x6f30>
  409948:	mov	w2, w0
  40994c:	b	4099d8 <ferror@plt+0x6e28>
  409950:	cbz	w27, 4099f0 <ferror@plt+0x6e40>
  409954:	ldr	x9, [sp, #56]
  409958:	sub	w27, w27, #0x1
  40995c:	ldr	x8, [x9], #8
  409960:	ldr	x3, [x8, #8]
  409964:	str	x9, [sp, #56]
  409968:	b	409a00 <ferror@plt+0x6e50>
  40996c:	cbz	w27, 4099fc <ferror@plt+0x6e4c>
  409970:	ldr	x9, [sp, #56]
  409974:	sub	w27, w27, #0x1
  409978:	ldr	x8, [x9], #8
  40997c:	ldr	x0, [x8, #8]
  409980:	str	x9, [sp, #56]
  409984:	bl	409bcc <ferror@plt+0x701c>
  409988:	mov	x3, x0
  40998c:	b	409a00 <ferror@plt+0x6e50>
  409990:	cbz	w27, 409a6c <ferror@plt+0x6ebc>
  409994:	ldr	x9, [sp, #56]
  409998:	sub	w27, w27, #0x1
  40999c:	ldr	x8, [x9], #8
  4099a0:	ldr	x0, [x8, #8]
  4099a4:	str	x9, [sp, #56]
  4099a8:	bl	409ae0 <ferror@plt+0x6f30>
  4099ac:	mov	w3, w0
  4099b0:	b	409a70 <ferror@plt+0x6ec0>
  4099b4:	cbz	w27, 409a8c <ferror@plt+0x6edc>
  4099b8:	ldr	x9, [sp, #56]
  4099bc:	sub	w27, w27, #0x1
  4099c0:	ldr	x8, [x9], #8
  4099c4:	ldr	x0, [x8, #8]
  4099c8:	str	x9, [sp, #56]
  4099cc:	bl	409cb0 <ferror@plt+0x7100>
  4099d0:	b	409a90 <ferror@plt+0x6ee0>
  4099d4:	mov	w2, wzr
  4099d8:	sub	x0, x29, #0x18
  4099dc:	mov	w1, w24
  4099e0:	bl	41604c <ferror@plt+0x1349c>
  4099e4:	mov	x23, x0
  4099e8:	cbnz	x0, 409a18 <ferror@plt+0x6e68>
  4099ec:	b	409aa8 <ferror@plt+0x6ef8>
  4099f0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x182c>
  4099f4:	add	x3, x3, #0xe37
  4099f8:	b	409a00 <ferror@plt+0x6e50>
  4099fc:	mov	x3, xzr
  409a00:	sub	x0, x29, #0x18
  409a04:	mov	w1, w24
  409a08:	mov	w2, w26
  409a0c:	bl	41604c <ferror@plt+0x1349c>
  409a10:	mov	x23, x0
  409a14:	cbz	x0, 409aa8 <ferror@plt+0x6ef8>
  409a18:	mov	x0, x23
  409a1c:	bl	402540 <strlen@plt>
  409a20:	ldp	x9, x8, [x20, #24]
  409a24:	mov	x24, x0
  409a28:	sub	x8, x8, x9
  409a2c:	cmp	x8, x0
  409a30:	b.cs	409a40 <ferror@plt+0x6e90>  // b.hs, b.nlast
  409a34:	mov	x0, x20
  409a38:	mov	x1, x24
  409a3c:	bl	41659c <_obstack_newchunk@@Base>
  409a40:	ldr	x0, [x20, #24]
  409a44:	mov	x1, x23
  409a48:	mov	x2, x24
  409a4c:	bl	402510 <memcpy@plt>
  409a50:	ldr	x8, [x20, #24]
  409a54:	mov	x0, x23
  409a58:	add	x8, x8, x24
  409a5c:	str	x8, [x20, #24]
  409a60:	bl	4029a0 <free@plt>
  409a64:	mov	w8, wzr
  409a68:	b	409474 <ferror@plt+0x68c4>
  409a6c:	mov	w3, wzr
  409a70:	sub	x0, x29, #0x18
  409a74:	mov	w1, w24
  409a78:	mov	w2, w26
  409a7c:	bl	41604c <ferror@plt+0x1349c>
  409a80:	mov	x23, x0
  409a84:	cbnz	x0, 409a18 <ferror@plt+0x6e68>
  409a88:	b	409aa8 <ferror@plt+0x6ef8>
  409a8c:	fmov	d0, xzr
  409a90:	sub	x0, x29, #0x18
  409a94:	mov	w1, w24
  409a98:	mov	w2, w26
  409a9c:	bl	41604c <ferror@plt+0x1349c>
  409aa0:	mov	x23, x0
  409aa4:	cbnz	x0, 409a18 <ferror@plt+0x6e68>
  409aa8:	mov	w8, #0x2                   	// #2
  409aac:	b	409474 <ferror@plt+0x68c4>
  409ab0:	mov	w10, wzr
  409ab4:	sub	x8, x8, #0x2
  409ab8:	b	4098fc <ferror@plt+0x6d4c>
  409abc:	ldp	x20, x19, [sp, #304]
  409ac0:	ldp	x22, x21, [sp, #288]
  409ac4:	ldp	x24, x23, [sp, #272]
  409ac8:	ldp	x26, x25, [sp, #256]
  409acc:	ldp	x28, x27, [sp, #240]
  409ad0:	ldp	x29, x30, [sp, #224]
  409ad4:	add	sp, sp, #0x140
  409ad8:	ret
  409adc:	bl	4028d0 <abort@plt>
  409ae0:	stp	x29, x30, [sp, #-48]!
  409ae4:	str	x21, [sp, #16]
  409ae8:	stp	x20, x19, [sp, #32]
  409aec:	mov	x29, sp
  409af0:	mov	x20, x0
  409af4:	bl	402540 <strlen@plt>
  409af8:	mov	x19, x0
  409afc:	cbz	x0, 409b6c <ferror@plt+0x6fbc>
  409b00:	bl	402b30 <__errno_location@plt>
  409b04:	mov	x21, x0
  409b08:	str	wzr, [x0]
  409b0c:	add	x1, x29, #0x18
  409b10:	mov	w2, #0xa                   	// #10
  409b14:	mov	x0, x20
  409b18:	bl	402970 <strtol@plt>
  409b1c:	ldr	x8, [x29, #24]
  409b20:	sub	x8, x8, x20
  409b24:	cmp	x8, x19
  409b28:	mov	x19, x0
  409b2c:	b.ne	409b80 <ferror@plt+0x6fd0>  // b.any
  409b30:	bl	402950 <__ctype_b_loc@plt>
  409b34:	ldr	x8, [x0]
  409b38:	ldrb	w9, [x20]
  409b3c:	ldrh	w8, [x8, x9, lsl #1]
  409b40:	tbnz	w8, #13, 409ba0 <ferror@plt+0x6ff0>
  409b44:	cmp	x19, w19, sxtw
  409b48:	b.ne	409b58 <ferror@plt+0x6fa8>  // b.any
  409b4c:	ldr	w8, [x21]
  409b50:	cmp	w8, #0x22
  409b54:	b.ne	409bb8 <ferror@plt+0x7008>  // b.any
  409b58:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409b5c:	ldr	w0, [x8, #1224]
  409b60:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409b64:	add	x2, x2, #0x606
  409b68:	b	409bb0 <ferror@plt+0x7000>
  409b6c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409b70:	ldr	w0, [x8, #1224]
  409b74:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409b78:	add	x2, x2, #0x5b9
  409b7c:	b	409bb0 <ferror@plt+0x7000>
  409b80:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409b84:	ldr	w0, [x8, #1224]
  409b88:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409b8c:	add	x2, x2, #0x5d3
  409b90:	mov	w1, wzr
  409b94:	mov	x3, x20
  409b98:	bl	402cbc <ferror@plt+0x10c>
  409b9c:	b	409bb8 <ferror@plt+0x7008>
  409ba0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409ba4:	ldr	w0, [x8, #1224]
  409ba8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409bac:	add	x2, x2, #0x5eb
  409bb0:	mov	w1, wzr
  409bb4:	bl	402cbc <ferror@plt+0x10c>
  409bb8:	mov	w0, w19
  409bbc:	ldp	x20, x19, [sp, #32]
  409bc0:	ldr	x21, [sp, #16]
  409bc4:	ldp	x29, x30, [sp], #48
  409bc8:	ret
  409bcc:	stp	x29, x30, [sp, #-48]!
  409bd0:	str	x21, [sp, #16]
  409bd4:	stp	x20, x19, [sp, #32]
  409bd8:	mov	x29, sp
  409bdc:	mov	x20, x0
  409be0:	bl	402540 <strlen@plt>
  409be4:	mov	x19, x0
  409be8:	cbz	x0, 409c50 <ferror@plt+0x70a0>
  409bec:	bl	402b30 <__errno_location@plt>
  409bf0:	mov	x21, x0
  409bf4:	str	wzr, [x0]
  409bf8:	add	x1, x29, #0x18
  409bfc:	mov	w2, #0xa                   	// #10
  409c00:	mov	x0, x20
  409c04:	bl	402970 <strtol@plt>
  409c08:	ldr	x8, [x29, #24]
  409c0c:	sub	x8, x8, x20
  409c10:	cmp	x8, x19
  409c14:	mov	x19, x0
  409c18:	b.ne	409c64 <ferror@plt+0x70b4>  // b.any
  409c1c:	bl	402950 <__ctype_b_loc@plt>
  409c20:	ldr	x8, [x0]
  409c24:	ldrb	w9, [x20]
  409c28:	ldrh	w8, [x8, x9, lsl #1]
  409c2c:	tbnz	w8, #13, 409c84 <ferror@plt+0x70d4>
  409c30:	ldr	w8, [x21]
  409c34:	cmp	w8, #0x22
  409c38:	b.ne	409c9c <ferror@plt+0x70ec>  // b.any
  409c3c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409c40:	ldr	w0, [x8, #1224]
  409c44:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409c48:	add	x2, x2, #0x606
  409c4c:	b	409c94 <ferror@plt+0x70e4>
  409c50:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409c54:	ldr	w0, [x8, #1224]
  409c58:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409c5c:	add	x2, x2, #0x5b9
  409c60:	b	409c94 <ferror@plt+0x70e4>
  409c64:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409c68:	ldr	w0, [x8, #1224]
  409c6c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409c70:	add	x2, x2, #0x5d3
  409c74:	mov	w1, wzr
  409c78:	mov	x3, x20
  409c7c:	bl	402cbc <ferror@plt+0x10c>
  409c80:	b	409c9c <ferror@plt+0x70ec>
  409c84:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409c88:	ldr	w0, [x8, #1224]
  409c8c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409c90:	add	x2, x2, #0x5eb
  409c94:	mov	w1, wzr
  409c98:	bl	402cbc <ferror@plt+0x10c>
  409c9c:	mov	x0, x19
  409ca0:	ldp	x20, x19, [sp, #32]
  409ca4:	ldr	x21, [sp, #16]
  409ca8:	ldp	x29, x30, [sp], #48
  409cac:	ret
  409cb0:	sub	sp, sp, #0x40
  409cb4:	str	d8, [sp, #16]
  409cb8:	stp	x29, x30, [sp, #24]
  409cbc:	str	x21, [sp, #40]
  409cc0:	stp	x20, x19, [sp, #48]
  409cc4:	add	x29, sp, #0x10
  409cc8:	mov	x19, x0
  409ccc:	bl	402540 <strlen@plt>
  409cd0:	cbz	x0, 409d38 <ferror@plt+0x7188>
  409cd4:	mov	x21, x0
  409cd8:	bl	402b30 <__errno_location@plt>
  409cdc:	mov	x20, x0
  409ce0:	str	wzr, [x0]
  409ce4:	add	x1, sp, #0x8
  409ce8:	mov	x0, x19
  409cec:	bl	4025b0 <strtod@plt>
  409cf0:	ldr	x8, [sp, #8]
  409cf4:	mov	v8.16b, v0.16b
  409cf8:	sub	x8, x8, x19
  409cfc:	cmp	x8, x21
  409d00:	b.ne	409d58 <ferror@plt+0x71a8>  // b.any
  409d04:	bl	402950 <__ctype_b_loc@plt>
  409d08:	ldr	x8, [x0]
  409d0c:	ldrb	w9, [x19]
  409d10:	ldrh	w8, [x8, x9, lsl #1]
  409d14:	tbnz	w8, #13, 409d78 <ferror@plt+0x71c8>
  409d18:	ldr	w8, [x20]
  409d1c:	cmp	w8, #0x22
  409d20:	b.ne	409d90 <ferror@plt+0x71e0>  // b.any
  409d24:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409d28:	ldr	w0, [x8, #1224]
  409d2c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409d30:	add	x2, x2, #0x606
  409d34:	b	409d88 <ferror@plt+0x71d8>
  409d38:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409d3c:	ldr	w0, [x8, #1224]
  409d40:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409d44:	add	x2, x2, #0x5b9
  409d48:	mov	w1, wzr
  409d4c:	bl	402cbc <ferror@plt+0x10c>
  409d50:	fmov	d8, xzr
  409d54:	b	409d90 <ferror@plt+0x71e0>
  409d58:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409d5c:	ldr	w0, [x8, #1224]
  409d60:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409d64:	add	x2, x2, #0x5d3
  409d68:	mov	w1, wzr
  409d6c:	mov	x3, x19
  409d70:	bl	402cbc <ferror@plt+0x10c>
  409d74:	b	409d90 <ferror@plt+0x71e0>
  409d78:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409d7c:	ldr	w0, [x8, #1224]
  409d80:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409d84:	add	x2, x2, #0x5eb
  409d88:	mov	w1, wzr
  409d8c:	bl	402cbc <ferror@plt+0x10c>
  409d90:	mov	v0.16b, v8.16b
  409d94:	ldp	x20, x19, [sp, #48]
  409d98:	ldr	x21, [sp, #40]
  409d9c:	ldp	x29, x30, [sp, #24]
  409da0:	ldr	d8, [sp, #16]
  409da4:	add	sp, sp, #0x40
  409da8:	ret
  409dac:	stp	x29, x30, [sp, #-96]!
  409db0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  409db4:	add	x1, x1, #0xefb
  409db8:	stp	x28, x27, [sp, #16]
  409dbc:	stp	x26, x25, [sp, #32]
  409dc0:	stp	x24, x23, [sp, #48]
  409dc4:	stp	x22, x21, [sp, #64]
  409dc8:	stp	x20, x19, [sp, #80]
  409dcc:	mov	x29, sp
  409dd0:	mov	x20, x0
  409dd4:	bl	41107c <ferror@plt+0xe4cc>
  409dd8:	cbz	x0, 40a074 <ferror@plt+0x74c4>
  409ddc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  409de0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  409de4:	add	x1, x1, #0x632
  409de8:	add	x2, x2, #0x661
  409dec:	mov	x19, x0
  409df0:	bl	415cfc <ferror@plt+0x1314c>
  409df4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  409df8:	add	x1, x1, #0x66f
  409dfc:	mov	x0, x19
  409e00:	bl	415cfc <ferror@plt+0x1314c>
  409e04:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409e08:	ldr	x0, [x8, #3512]
  409e0c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  409e10:	add	x1, x1, #0x673
  409e14:	bl	402940 <strcmp@plt>
  409e18:	cbnz	w0, 409e34 <ferror@plt+0x7284>
  409e1c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409e20:	ldr	x0, [x8, #3568]
  409e24:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x182c>
  409e28:	add	x1, x1, #0xf82
  409e2c:	bl	402940 <strcmp@plt>
  409e30:	cbz	w0, 409e80 <ferror@plt+0x72d0>
  409e34:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409e38:	adrp	x21, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409e3c:	add	x20, x20, #0xdb8
  409e40:	add	x21, x21, #0xdf0
  409e44:	ldr	w2, [x20, #8]
  409e48:	ldr	w3, [x21, #8]
  409e4c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  409e50:	add	x1, x1, #0x675
  409e54:	mov	x0, x19
  409e58:	bl	415cfc <ferror@plt+0x1314c>
  409e5c:	ldr	x0, [x20]
  409e60:	mov	x1, x19
  409e64:	bl	402550 <fputs@plt>
  409e68:	ldr	x0, [x21]
  409e6c:	mov	x1, x19
  409e70:	bl	402550 <fputs@plt>
  409e74:	mov	w0, #0xa                   	// #10
  409e78:	mov	x1, x19
  409e7c:	bl	402630 <fputc@plt>
  409e80:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409e84:	ldr	x0, [x8, #3536]
  409e88:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  409e8c:	add	x1, x1, #0x67d
  409e90:	bl	402940 <strcmp@plt>
  409e94:	cbnz	w0, 409eb0 <ferror@plt+0x7300>
  409e98:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409e9c:	ldr	x0, [x8, #3552]
  409ea0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  409ea4:	add	x1, x1, #0xb09
  409ea8:	bl	402940 <strcmp@plt>
  409eac:	cbz	w0, 409efc <ferror@plt+0x734c>
  409eb0:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409eb4:	adrp	x21, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409eb8:	add	x20, x20, #0xdd0
  409ebc:	add	x21, x21, #0xde0
  409ec0:	ldr	w2, [x20, #8]
  409ec4:	ldr	w3, [x21, #8]
  409ec8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  409ecc:	add	x1, x1, #0x67f
  409ed0:	mov	x0, x19
  409ed4:	bl	415cfc <ferror@plt+0x1314c>
  409ed8:	ldr	x0, [x20]
  409edc:	mov	x1, x19
  409ee0:	bl	402550 <fputs@plt>
  409ee4:	ldr	x0, [x21]
  409ee8:	mov	x1, x19
  409eec:	bl	402550 <fputs@plt>
  409ef0:	mov	w0, #0xa                   	// #10
  409ef4:	mov	x1, x19
  409ef8:	bl	402630 <fputc@plt>
  409efc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409f00:	ldr	x8, [x8, #880]
  409f04:	cbz	x8, 40a02c <ferror@plt+0x747c>
  409f08:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x282c>
  409f0c:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x282c>
  409f10:	mov	x25, xzr
  409f14:	adrp	x26, 437000 <__progname@@GLIBC_2.17+0xaba8>
  409f18:	add	x20, x20, #0x6c3
  409f1c:	add	x21, x21, #0x687
  409f20:	b	409f4c <ferror@plt+0x739c>
  409f24:	ldr	x8, [x26, #3592]
  409f28:	ldr	x0, [x8, x27]
  409f2c:	bl	40a0dc <ferror@plt+0x752c>
  409f30:	ldr	x8, [x26, #3592]
  409f34:	add	x25, x25, #0x1
  409f38:	str	x0, [x8, x27]
  409f3c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  409f40:	ldr	x8, [x8, #880]
  409f44:	cmp	x25, x8
  409f48:	b.cs	40a02c <ferror@plt+0x747c>  // b.hs, b.nlast
  409f4c:	ldr	x8, [x26, #3592]
  409f50:	lsl	x27, x25, #3
  409f54:	ldr	x0, [x8, x27]
  409f58:	bl	40a0dc <ferror@plt+0x752c>
  409f5c:	ldr	x8, [x26, #3592]
  409f60:	str	x0, [x8, x27]
  409f64:	ldr	x8, [x26, #3592]
  409f68:	ldr	x28, [x8, x27]
  409f6c:	cbnz	x28, 409fa8 <ferror@plt+0x73f8>
  409f70:	b	409f24 <ferror@plt+0x7374>
  409f74:	mov	w2, w23
  409f78:	bl	415cfc <ferror@plt+0x1314c>
  409f7c:	ldr	x0, [x24]
  409f80:	mov	x1, x19
  409f84:	bl	402550 <fputs@plt>
  409f88:	ldr	x0, [x22]
  409f8c:	mov	x1, x19
  409f90:	bl	402550 <fputs@plt>
  409f94:	mov	w0, #0xa                   	// #10
  409f98:	mov	x1, x19
  409f9c:	bl	402630 <fputc@plt>
  409fa0:	ldr	x28, [x28]
  409fa4:	cbz	x28, 409f24 <ferror@plt+0x7374>
  409fa8:	ldr	w8, [x28, #24]
  409fac:	cbz	w8, 409fa0 <ferror@plt+0x73f0>
  409fb0:	cmp	w8, #0x2
  409fb4:	b.eq	409ff0 <ferror@plt+0x7440>  // b.none
  409fb8:	cmp	w8, #0x1
  409fbc:	b.ne	40a0ac <ferror@plt+0x74fc>  // b.any
  409fc0:	mov	x24, x28
  409fc4:	ldr	x0, [x24, #16]!
  409fc8:	bl	402540 <strlen@plt>
  409fcc:	mov	x22, x28
  409fd0:	ldr	x8, [x22, #32]!
  409fd4:	mov	x23, x0
  409fd8:	mov	x0, x8
  409fdc:	bl	402540 <strlen@plt>
  409fe0:	mov	x3, x0
  409fe4:	mov	x0, x19
  409fe8:	mov	x1, x21
  409fec:	b	409f74 <ferror@plt+0x73c4>
  409ff0:	ldr	x0, [x28, #32]
  409ff4:	bl	403738 <ferror@plt+0xb88>
  409ff8:	cbz	x0, 40a0c0 <ferror@plt+0x7510>
  409ffc:	mov	x24, x28
  40a000:	mov	x22, x0
  40a004:	ldr	x0, [x24, #16]!
  40a008:	bl	402540 <strlen@plt>
  40a00c:	ldr	x8, [x22]
  40a010:	mov	x23, x0
  40a014:	mov	x0, x8
  40a018:	bl	402540 <strlen@plt>
  40a01c:	mov	x3, x0
  40a020:	mov	x0, x19
  40a024:	mov	x1, x20
  40a028:	b	409f74 <ferror@plt+0x73c4>
  40a02c:	mov	x0, x19
  40a030:	bl	40e2dc <ferror@plt+0xb72c>
  40a034:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40a038:	add	x0, x0, #0x707
  40a03c:	mov	w1, #0x1b                  	// #27
  40a040:	mov	w2, #0x1                   	// #1
  40a044:	mov	x3, x19
  40a048:	bl	402a20 <fwrite@plt>
  40a04c:	mov	x0, x19
  40a050:	bl	410760 <ferror@plt+0xdbb0>
  40a054:	cbz	w0, 40a090 <ferror@plt+0x74e0>
  40a058:	bl	402b30 <__errno_location@plt>
  40a05c:	ldr	w1, [x0]
  40a060:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a064:	add	x2, x2, #0x723
  40a068:	mov	w0, #0x1                   	// #1
  40a06c:	bl	402cbc <ferror@plt+0x10c>
  40a070:	b	40a090 <ferror@plt+0x74e0>
  40a074:	bl	402b30 <__errno_location@plt>
  40a078:	ldr	w1, [x0]
  40a07c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x182c>
  40a080:	add	x2, x2, #0x4af
  40a084:	mov	w0, #0x1                   	// #1
  40a088:	mov	x3, x20
  40a08c:	bl	402cbc <ferror@plt+0x10c>
  40a090:	ldp	x20, x19, [sp, #80]
  40a094:	ldp	x22, x21, [sp, #64]
  40a098:	ldp	x24, x23, [sp, #48]
  40a09c:	ldp	x26, x25, [sp, #32]
  40a0a0:	ldp	x28, x27, [sp, #16]
  40a0a4:	ldp	x29, x30, [sp], #96
  40a0a8:	ret
  40a0ac:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40a0b0:	ldr	w0, [x8, #1224]
  40a0b4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a0b8:	add	x2, x2, #0x6cb
  40a0bc:	b	40a0d0 <ferror@plt+0x7520>
  40a0c0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40a0c4:	ldr	w0, [x8, #1224]
  40a0c8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a0cc:	add	x2, x2, #0x68f
  40a0d0:	mov	w1, wzr
  40a0d4:	bl	402cbc <ferror@plt+0x10c>
  40a0d8:	bl	4028d0 <abort@plt>
  40a0dc:	cbz	x0, 40a100 <ferror@plt+0x7550>
  40a0e0:	mov	x9, xzr
  40a0e4:	mov	x8, x0
  40a0e8:	ldr	x0, [x0]
  40a0ec:	str	x9, [x8]
  40a0f0:	mov	x9, x8
  40a0f4:	cbnz	x0, 40a0e4 <ferror@plt+0x7534>
  40a0f8:	mov	x0, x8
  40a0fc:	ret
  40a100:	mov	x0, xzr
  40a104:	ret
  40a108:	sub	sp, sp, #0x90
  40a10c:	mov	x1, xzr
  40a110:	stp	x29, x30, [sp, #48]
  40a114:	stp	x28, x27, [sp, #64]
  40a118:	stp	x26, x25, [sp, #80]
  40a11c:	stp	x24, x23, [sp, #96]
  40a120:	stp	x22, x21, [sp, #112]
  40a124:	stp	x20, x19, [sp, #128]
  40a128:	add	x29, sp, #0x30
  40a12c:	mov	x20, x0
  40a130:	bl	40e9cc <ferror@plt+0xbe1c>
  40a134:	mov	x19, x0
  40a138:	cbnz	x0, 40a158 <ferror@plt+0x75a8>
  40a13c:	bl	402b30 <__errno_location@plt>
  40a140:	ldr	w1, [x0]
  40a144:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a148:	add	x2, x2, #0x741
  40a14c:	mov	w0, #0x1                   	// #1
  40a150:	mov	x3, x20
  40a154:	bl	402cbc <ferror@plt+0x10c>
  40a158:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40a15c:	mov	w0, #0x64                  	// #100
  40a160:	str	x20, [x8, #3528]
  40a164:	bl	415918 <ferror@plt+0x12d68>
  40a168:	stur	x0, [x29, #-16]
  40a16c:	mov	w0, #0x64                  	// #100
  40a170:	bl	415918 <ferror@plt+0x12d68>
  40a174:	mov	x20, x0
  40a178:	mov	w21, #0x1                   	// #1
  40a17c:	adrp	x25, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40a180:	b	40a194 <ferror@plt+0x75e4>
  40a184:	mov	w0, #0xa                   	// #10
  40a188:	bl	40a990 <ferror@plt+0x7de0>
  40a18c:	cmp	w22, #0xa
  40a190:	b.ne	40a20c <ferror@plt+0x765c>  // b.any
  40a194:	tbz	w21, #0, 40a1a8 <ferror@plt+0x75f8>
  40a198:	ldr	w8, [x25, #3504]
  40a19c:	mov	w21, wzr
  40a1a0:	add	w8, w8, #0x1
  40a1a4:	str	w8, [x25, #3504]
  40a1a8:	mov	x0, x19
  40a1ac:	bl	402830 <getc@plt>
  40a1b0:	cmp	w0, #0xa
  40a1b4:	cset	w8, eq  // eq = none
  40a1b8:	mov	w22, w0
  40a1bc:	cmp	w0, #0x23
  40a1c0:	orr	w21, w21, w8
  40a1c4:	b.eq	40a1e4 <ferror@plt+0x7634>  // b.none
  40a1c8:	b	40a18c <ferror@plt+0x75dc>
  40a1cc:	mov	x0, x19
  40a1d0:	bl	402830 <getc@plt>
  40a1d4:	cmp	w0, #0xa
  40a1d8:	cset	w8, eq  // eq = none
  40a1dc:	mov	w22, w0
  40a1e0:	orr	w21, w21, w8
  40a1e4:	cmn	w22, #0x1
  40a1e8:	b.eq	40a184 <ferror@plt+0x75d4>  // b.none
  40a1ec:	cmp	w22, #0xa
  40a1f0:	b.eq	40a18c <ferror@plt+0x75dc>  // b.none
  40a1f4:	tbz	w21, #0, 40a1cc <ferror@plt+0x761c>
  40a1f8:	ldr	w8, [x25, #3504]
  40a1fc:	mov	w21, wzr
  40a200:	add	w8, w8, #0x1
  40a204:	str	w8, [x25, #3504]
  40a208:	b	40a1cc <ferror@plt+0x761c>
  40a20c:	cmp	w22, #0x56
  40a210:	b.eq	40a21c <ferror@plt+0x766c>  // b.none
  40a214:	mov	w0, #0x56                  	// #86
  40a218:	bl	40a990 <ferror@plt+0x7de0>
  40a21c:	tbz	w21, #0, 40a230 <ferror@plt+0x7680>
  40a220:	ldr	w8, [x25, #3504]
  40a224:	mov	w21, wzr
  40a228:	add	w8, w8, #0x1
  40a22c:	str	w8, [x25, #3504]
  40a230:	stur	x20, [x29, #-8]
  40a234:	mov	w20, #0xcccd                	// #52429
  40a238:	mov	x0, x19
  40a23c:	movk	w20, #0xccc, lsl #16
  40a240:	bl	402830 <getc@plt>
  40a244:	cmp	w0, #0xa
  40a248:	cset	w8, eq  // eq = none
  40a24c:	mov	w23, w0
  40a250:	orr	w21, w21, w8
  40a254:	bl	402950 <__ctype_b_loc@plt>
  40a258:	ldr	x8, [x0]
  40a25c:	mov	x22, x0
  40a260:	ldrh	w8, [x8, w23, sxtw #1]
  40a264:	tbz	w8, #11, 40a2c0 <ferror@plt+0x7710>
  40a268:	mov	w24, wzr
  40a26c:	mov	w26, #0xa                   	// #10
  40a270:	madd	w8, w24, w26, w23
  40a274:	sub	w24, w8, #0x30
  40a278:	tbz	w21, #0, 40a28c <ferror@plt+0x76dc>
  40a27c:	ldr	w8, [x25, #3504]
  40a280:	mov	w21, wzr
  40a284:	add	w8, w8, #0x1
  40a288:	str	w8, [x25, #3504]
  40a28c:	mov	x0, x19
  40a290:	bl	402830 <getc@plt>
  40a294:	ldr	x8, [x22]
  40a298:	cmp	w0, #0xa
  40a29c:	mov	w23, w0
  40a2a0:	ldrh	w9, [x8, w0, sxtw #1]
  40a2a4:	cset	w8, eq  // eq = none
  40a2a8:	orr	w21, w21, w8
  40a2ac:	cmp	w24, w20
  40a2b0:	ubfx	w8, w9, #11, #1
  40a2b4:	b.cs	40a2c8 <ferror@plt+0x7718>  // b.hs, b.nlast
  40a2b8:	tbnz	w9, #11, 40a270 <ferror@plt+0x76c0>
  40a2bc:	b	40a2c8 <ferror@plt+0x7718>
  40a2c0:	mov	w24, wzr
  40a2c4:	ubfx	w8, w8, #11, #1
  40a2c8:	tbnz	w24, #31, 40a2f4 <ferror@plt+0x7744>
  40a2cc:	cbnz	w8, 40a2f4 <ferror@plt+0x7744>
  40a2d0:	cmp	w24, #0x2
  40a2d4:	b.lt	40a310 <ferror@plt+0x7760>  // b.tstop
  40a2d8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a2dc:	add	x2, x2, #0x770
  40a2e0:	mov	w0, #0x3f                  	// #63
  40a2e4:	mov	w1, wzr
  40a2e8:	mov	w3, w24
  40a2ec:	bl	402cbc <ferror@plt+0x10c>
  40a2f0:	b	40a32c <ferror@plt+0x777c>
  40a2f4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a2f8:	add	x2, x2, #0x750
  40a2fc:	mov	w0, #0x1                   	// #1
  40a300:	mov	w1, wzr
  40a304:	bl	402cbc <ferror@plt+0x10c>
  40a308:	cmp	w24, #0x2
  40a30c:	b.ge	40a2d8 <ferror@plt+0x7728>  // b.tcont
  40a310:	cmp	w24, #0x1
  40a314:	b.eq	40a32c <ferror@plt+0x777c>  // b.none
  40a318:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a31c:	add	x2, x2, #0x7a7
  40a320:	mov	w0, #0x1                   	// #1
  40a324:	mov	w1, wzr
  40a328:	bl	402cbc <ferror@plt+0x10c>
  40a32c:	cmp	w23, #0xa
  40a330:	b.eq	40a350 <ferror@plt+0x77a0>  // b.none
  40a334:	mov	w0, #0xa                   	// #10
  40a338:	bl	40a990 <ferror@plt+0x7de0>
  40a33c:	b	40a350 <ferror@plt+0x77a0>
  40a340:	mov	w0, #0xa                   	// #10
  40a344:	bl	40a990 <ferror@plt+0x7de0>
  40a348:	cmp	w26, #0xa
  40a34c:	b.ne	40a3c8 <ferror@plt+0x7818>  // b.any
  40a350:	tbz	w21, #0, 40a364 <ferror@plt+0x77b4>
  40a354:	ldr	w8, [x25, #3504]
  40a358:	mov	w21, wzr
  40a35c:	add	w8, w8, #0x1
  40a360:	str	w8, [x25, #3504]
  40a364:	mov	x0, x19
  40a368:	bl	402830 <getc@plt>
  40a36c:	cmp	w0, #0xa
  40a370:	cset	w8, eq  // eq = none
  40a374:	mov	w26, w0
  40a378:	cmp	w0, #0x23
  40a37c:	orr	w21, w21, w8
  40a380:	b.eq	40a3a0 <ferror@plt+0x77f0>  // b.none
  40a384:	b	40a348 <ferror@plt+0x7798>
  40a388:	mov	x0, x19
  40a38c:	bl	402830 <getc@plt>
  40a390:	cmp	w0, #0xa
  40a394:	cset	w8, eq  // eq = none
  40a398:	mov	w26, w0
  40a39c:	orr	w21, w21, w8
  40a3a0:	cmn	w26, #0x1
  40a3a4:	b.eq	40a340 <ferror@plt+0x7790>  // b.none
  40a3a8:	cmp	w26, #0xa
  40a3ac:	b.eq	40a348 <ferror@plt+0x7798>  // b.none
  40a3b0:	tbz	w21, #0, 40a388 <ferror@plt+0x77d8>
  40a3b4:	ldr	w8, [x25, #3504]
  40a3b8:	mov	w21, wzr
  40a3bc:	add	w8, w8, #0x1
  40a3c0:	str	w8, [x25, #3504]
  40a3c4:	b	40a388 <ferror@plt+0x77d8>
  40a3c8:	mov	w8, #0x64                  	// #100
  40a3cc:	str	x8, [sp, #8]
  40a3d0:	mov	w24, #0xa                   	// #10
  40a3d4:	mov	w8, #0x64                  	// #100
  40a3d8:	str	x8, [sp, #16]
  40a3dc:	sub	w10, w26, #0x43
  40a3e0:	cmp	w10, #0x11
  40a3e4:	b.hi	40a814 <ferror@plt+0x7c64>  // b.pmore
  40a3e8:	mov	w8, #0x1                   	// #1
  40a3ec:	mov	w9, #0x400b                	// #16395
  40a3f0:	lsl	w8, w8, w10
  40a3f4:	movk	w9, #0x2, lsl #16
  40a3f8:	tst	w8, w9
  40a3fc:	b.eq	40a814 <ferror@plt+0x7c64>  // b.none
  40a400:	str	x10, [sp, #24]
  40a404:	tbz	w21, #0, 40a418 <ferror@plt+0x7868>
  40a408:	ldr	w8, [x25, #3504]
  40a40c:	mov	w21, wzr
  40a410:	add	w8, w8, #0x1
  40a414:	str	w8, [x25, #3504]
  40a418:	mov	x0, x19
  40a41c:	bl	402830 <getc@plt>
  40a420:	cmp	w0, #0xa
  40a424:	cset	w8, eq  // eq = none
  40a428:	mov	w28, w0
  40a42c:	cmp	w26, #0x44
  40a430:	orr	w21, w21, w8
  40a434:	b.ne	40a4cc <ferror@plt+0x791c>  // b.any
  40a438:	cmp	w28, #0x2d
  40a43c:	b.ne	40a4cc <ferror@plt+0x791c>  // b.any
  40a440:	tbz	w21, #0, 40a454 <ferror@plt+0x78a4>
  40a444:	ldr	w8, [x25, #3504]
  40a448:	mov	w21, wzr
  40a44c:	add	w8, w8, #0x1
  40a450:	str	w8, [x25, #3504]
  40a454:	mov	x0, x19
  40a458:	bl	402830 <getc@plt>
  40a45c:	ldr	x8, [x22]
  40a460:	cmp	w0, #0xa
  40a464:	cset	w9, eq  // eq = none
  40a468:	mov	w28, w0
  40a46c:	ldrh	w8, [x8, w0, sxtw #1]
  40a470:	orr	w21, w21, w9
  40a474:	mov	w23, wzr
  40a478:	tbz	w8, #11, 40a7d0 <ferror@plt+0x7c20>
  40a47c:	madd	w8, w23, w24, w28
  40a480:	sub	w23, w8, #0x30
  40a484:	tbz	w21, #0, 40a498 <ferror@plt+0x78e8>
  40a488:	ldr	w8, [x25, #3504]
  40a48c:	mov	w21, wzr
  40a490:	add	w8, w8, #0x1
  40a494:	str	w8, [x25, #3504]
  40a498:	mov	x0, x19
  40a49c:	bl	402830 <getc@plt>
  40a4a0:	ldr	x8, [x22]
  40a4a4:	cmp	w0, #0xa
  40a4a8:	mov	w28, w0
  40a4ac:	ldrh	w9, [x8, w0, sxtw #1]
  40a4b0:	cset	w8, eq  // eq = none
  40a4b4:	orr	w21, w21, w8
  40a4b8:	cmp	w23, w20
  40a4bc:	ubfx	w8, w9, #11, #1
  40a4c0:	b.cs	40a7d4 <ferror@plt+0x7c24>  // b.hs, b.nlast
  40a4c4:	tbnz	w9, #11, 40a47c <ferror@plt+0x78cc>
  40a4c8:	b	40a7d4 <ferror@plt+0x7c24>
  40a4cc:	ldr	x8, [x22]
  40a4d0:	ldrh	w8, [x8, w28, sxtw #1]
  40a4d4:	tbz	w8, #11, 40a52c <ferror@plt+0x797c>
  40a4d8:	mov	w27, wzr
  40a4dc:	madd	w8, w27, w24, w28
  40a4e0:	sub	w27, w8, #0x30
  40a4e4:	tbz	w21, #0, 40a4f8 <ferror@plt+0x7948>
  40a4e8:	ldr	w8, [x25, #3504]
  40a4ec:	mov	w21, wzr
  40a4f0:	add	w8, w8, #0x1
  40a4f4:	str	w8, [x25, #3504]
  40a4f8:	mov	x0, x19
  40a4fc:	bl	402830 <getc@plt>
  40a500:	ldr	x8, [x22]
  40a504:	cmp	w0, #0xa
  40a508:	mov	w28, w0
  40a50c:	ldrh	w9, [x8, w0, sxtw #1]
  40a510:	cset	w8, eq  // eq = none
  40a514:	orr	w21, w21, w8
  40a518:	cmp	w27, w20
  40a51c:	ubfx	w8, w9, #11, #1
  40a520:	b.cs	40a534 <ferror@plt+0x7984>  // b.hs, b.nlast
  40a524:	tbnz	w9, #11, 40a4dc <ferror@plt+0x792c>
  40a528:	b	40a534 <ferror@plt+0x7984>
  40a52c:	mov	w27, wzr
  40a530:	ubfx	w8, w8, #11, #1
  40a534:	tbnz	w27, #31, 40a7b0 <ferror@plt+0x7c00>
  40a538:	cbnz	w8, 40a7b0 <ferror@plt+0x7c00>
  40a53c:	cmp	w28, #0x2c
  40a540:	b.ne	40a804 <ferror@plt+0x7c54>  // b.any
  40a544:	tbz	w21, #0, 40a558 <ferror@plt+0x79a8>
  40a548:	ldr	w8, [x25, #3504]
  40a54c:	mov	w21, wzr
  40a550:	add	w8, w8, #0x1
  40a554:	str	w8, [x25, #3504]
  40a558:	mov	x0, x19
  40a55c:	bl	402830 <getc@plt>
  40a560:	ldr	x8, [x22]
  40a564:	cmp	w0, #0xa
  40a568:	cset	w9, eq  // eq = none
  40a56c:	mov	w23, w0
  40a570:	ldrh	w8, [x8, w0, sxtw #1]
  40a574:	orr	w21, w21, w9
  40a578:	mov	w28, wzr
  40a57c:	tbz	w8, #11, 40a5d0 <ferror@plt+0x7a20>
  40a580:	madd	w8, w28, w24, w23
  40a584:	sub	w28, w8, #0x30
  40a588:	tbz	w21, #0, 40a59c <ferror@plt+0x79ec>
  40a58c:	ldr	w8, [x25, #3504]
  40a590:	mov	w21, wzr
  40a594:	add	w8, w8, #0x1
  40a598:	str	w8, [x25, #3504]
  40a59c:	mov	x0, x19
  40a5a0:	bl	402830 <getc@plt>
  40a5a4:	ldr	x8, [x22]
  40a5a8:	cmp	w0, #0xa
  40a5ac:	mov	w23, w0
  40a5b0:	ldrh	w9, [x8, w0, sxtw #1]
  40a5b4:	cset	w8, eq  // eq = none
  40a5b8:	orr	w21, w21, w8
  40a5bc:	cmp	w28, w20
  40a5c0:	ubfx	w8, w9, #11, #1
  40a5c4:	b.cs	40a5d4 <ferror@plt+0x7a24>  // b.hs, b.nlast
  40a5c8:	tbnz	w9, #11, 40a580 <ferror@plt+0x79d0>
  40a5cc:	b	40a5d4 <ferror@plt+0x7a24>
  40a5d0:	ubfx	w8, w8, #11, #1
  40a5d4:	tbnz	w28, #31, 40a6f0 <ferror@plt+0x7b40>
  40a5d8:	cbnz	w8, 40a6f0 <ferror@plt+0x7b40>
  40a5dc:	cmp	w23, #0xa
  40a5e0:	b.ne	40a70c <ferror@plt+0x7b5c>  // b.any
  40a5e4:	cmp	w26, #0x44
  40a5e8:	b.ne	40a71c <ferror@plt+0x7b6c>  // b.any
  40a5ec:	ldur	x26, [x29, #-8]
  40a5f0:	ldr	x8, [sp, #16]
  40a5f4:	cmp	w28, w8
  40a5f8:	b.lt	40a618 <ferror@plt+0x7a68>  // b.tstop
  40a5fc:	mov	x0, x26
  40a600:	add	w23, w28, #0x1
  40a604:	bl	4029a0 <free@plt>
  40a608:	sxtw	x0, w23
  40a60c:	str	x23, [sp, #16]
  40a610:	bl	415918 <ferror@plt+0x12d68>
  40a614:	mov	x26, x0
  40a618:	cmp	w28, #0x1
  40a61c:	b.lt	40a64c <ferror@plt+0x7a9c>  // b.tstop
  40a620:	sxtw	x1, w28
  40a624:	mov	w2, #0x1                   	// #1
  40a628:	mov	x0, x26
  40a62c:	mov	x3, x19
  40a630:	bl	402990 <fread@plt>
  40a634:	cbnz	x0, 40a64c <ferror@plt+0x7a9c>
  40a638:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a63c:	mov	w0, #0x1                   	// #1
  40a640:	mov	w1, wzr
  40a644:	add	x2, x2, #0x7f1
  40a648:	bl	402cbc <ferror@plt+0x10c>
  40a64c:	sxtw	x2, w28
  40a650:	add	x23, x26, x2
  40a654:	strb	wzr, [x23]
  40a658:	mov	w1, #0xa                   	// #10
  40a65c:	mov	x0, x26
  40a660:	bl	402a70 <memchr@plt>
  40a664:	cbz	x0, 40a688 <ferror@plt+0x7ad8>
  40a668:	ldr	w8, [x25, #3504]
  40a66c:	add	x0, x0, #0x1
  40a670:	sub	x2, x23, x0
  40a674:	mov	w1, #0xa                   	// #10
  40a678:	add	w8, w8, #0x1
  40a67c:	str	w8, [x25, #3504]
  40a680:	bl	402a70 <memchr@plt>
  40a684:	cbnz	x0, 40a668 <ferror@plt+0x7ab8>
  40a688:	tbz	w21, #0, 40a69c <ferror@plt+0x7aec>
  40a68c:	ldr	w8, [x25, #3504]
  40a690:	mov	w21, wzr
  40a694:	add	w8, w8, #0x1
  40a698:	str	w8, [x25, #3504]
  40a69c:	mov	x0, x19
  40a6a0:	bl	402830 <getc@plt>
  40a6a4:	cmp	w0, #0xa
  40a6a8:	cset	w23, eq  // eq = none
  40a6ac:	b.eq	40a6b8 <ferror@plt+0x7b08>  // b.none
  40a6b0:	mov	w0, #0xa                   	// #10
  40a6b4:	bl	40a990 <ferror@plt+0x7de0>
  40a6b8:	ldr	x11, [sp, #24]
  40a6bc:	orr	w21, w21, w23
  40a6c0:	cmp	w11, #0x11
  40a6c4:	b.hi	40a8a0 <ferror@plt+0x7cf0>  // b.pmore
  40a6c8:	adrp	x10, 419000 <_obstack_memory_used@@Base+0x282c>
  40a6cc:	add	x10, x10, #0x620
  40a6d0:	adr	x8, 40a6e0 <ferror@plt+0x7b30>
  40a6d4:	ldrb	w9, [x10, x11]
  40a6d8:	add	x8, x8, x9, lsl #2
  40a6dc:	br	x8
  40a6e0:	ldur	x0, [x29, #-16]
  40a6e4:	mov	x1, x26
  40a6e8:	bl	40b620 <ferror@plt+0x8a70>
  40a6ec:	b	40a8a0 <ferror@plt+0x7cf0>
  40a6f0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a6f4:	mov	w0, #0x1                   	// #1
  40a6f8:	mov	w1, wzr
  40a6fc:	add	x2, x2, #0x750
  40a700:	bl	402cbc <ferror@plt+0x10c>
  40a704:	cmp	w23, #0xa
  40a708:	b.eq	40a5e4 <ferror@plt+0x7a34>  // b.none
  40a70c:	mov	w0, #0xa                   	// #10
  40a710:	bl	40a990 <ferror@plt+0x7de0>
  40a714:	cmp	w26, #0x44
  40a718:	b.eq	40a5ec <ferror@plt+0x7a3c>  // b.none
  40a71c:	ldr	x8, [sp, #8]
  40a720:	cmp	w27, w8
  40a724:	b.lt	40a744 <ferror@plt+0x7b94>  // b.tstop
  40a728:	ldur	x0, [x29, #-16]
  40a72c:	add	w23, w27, #0x1
  40a730:	bl	4029a0 <free@plt>
  40a734:	sxtw	x0, w23
  40a738:	str	x23, [sp, #8]
  40a73c:	bl	415918 <ferror@plt+0x12d68>
  40a740:	stur	x0, [x29, #-16]
  40a744:	ldur	x26, [x29, #-8]
  40a748:	cmp	w27, #0x1
  40a74c:	b.lt	40a77c <ferror@plt+0x7bcc>  // b.tstop
  40a750:	ldur	x0, [x29, #-16]
  40a754:	sxtw	x1, w27
  40a758:	mov	w2, #0x1                   	// #1
  40a75c:	mov	x3, x19
  40a760:	bl	402990 <fread@plt>
  40a764:	cbnz	x0, 40a77c <ferror@plt+0x7bcc>
  40a768:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a76c:	mov	w0, #0x1                   	// #1
  40a770:	mov	w1, wzr
  40a774:	add	x2, x2, #0x7f1
  40a778:	bl	402cbc <ferror@plt+0x10c>
  40a77c:	ldur	x0, [x29, #-16]
  40a780:	sxtw	x2, w27
  40a784:	add	x23, x0, x2
  40a788:	strb	wzr, [x23]
  40a78c:	mov	w1, #0xa                   	// #10
  40a790:	bl	402a70 <memchr@plt>
  40a794:	cbz	x0, 40a5f0 <ferror@plt+0x7a40>
  40a798:	ldr	w8, [x25, #3504]
  40a79c:	add	x0, x0, #0x1
  40a7a0:	sub	x2, x23, x0
  40a7a4:	add	w8, w8, #0x1
  40a7a8:	str	w8, [x25, #3504]
  40a7ac:	b	40a78c <ferror@plt+0x7bdc>
  40a7b0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a7b4:	mov	w0, #0x1                   	// #1
  40a7b8:	mov	w1, wzr
  40a7bc:	add	x2, x2, #0x750
  40a7c0:	bl	402cbc <ferror@plt+0x10c>
  40a7c4:	cmp	w28, #0x2c
  40a7c8:	b.eq	40a544 <ferror@plt+0x7994>  // b.none
  40a7cc:	b	40a804 <ferror@plt+0x7c54>
  40a7d0:	ubfx	w8, w8, #11, #1
  40a7d4:	mov	w9, #0x80000000            	// #-2147483648
  40a7d8:	cmp	w23, w9
  40a7dc:	b.hi	40a7e4 <ferror@plt+0x7c34>  // b.pmore
  40a7e0:	cbz	w8, 40a7f8 <ferror@plt+0x7c48>
  40a7e4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a7e8:	mov	w0, #0x1                   	// #1
  40a7ec:	mov	w1, wzr
  40a7f0:	add	x2, x2, #0x750
  40a7f4:	bl	402cbc <ferror@plt+0x10c>
  40a7f8:	neg	w27, w23
  40a7fc:	cmp	w28, #0x2c
  40a800:	b.eq	40a544 <ferror@plt+0x7994>  // b.none
  40a804:	mov	w0, #0x2c                  	// #44
  40a808:	bl	40a990 <ferror@plt+0x7de0>
  40a80c:	tbnz	w21, #0, 40a548 <ferror@plt+0x7998>
  40a810:	b	40a558 <ferror@plt+0x79a8>
  40a814:	cmn	w26, #0x1
  40a818:	b.eq	40a930 <ferror@plt+0x7d80>  // b.none
  40a81c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a820:	mov	w0, #0x1                   	// #1
  40a824:	mov	w1, wzr
  40a828:	add	x2, x2, #0x7da
  40a82c:	mov	x23, x10
  40a830:	bl	402cbc <ferror@plt+0x10c>
  40a834:	mov	x10, x23
  40a838:	str	x10, [sp, #24]
  40a83c:	tbnz	w21, #0, 40a408 <ferror@plt+0x7858>
  40a840:	b	40a418 <ferror@plt+0x7868>
  40a844:	mov	w0, w27
  40a848:	bl	40da7c <ferror@plt+0xaecc>
  40a84c:	cmp	w28, #0x1
  40a850:	b.lt	40a8a0 <ferror@plt+0x7cf0>  // b.tstop
  40a854:	mov	x0, x26
  40a858:	mov	w1, w28
  40a85c:	bl	40cef4 <ferror@plt+0xa344>
  40a860:	b	40a8a0 <ferror@plt+0x7cf0>
  40a864:	mov	x0, x26
  40a868:	bl	4037bc <ferror@plt+0xc0c>
  40a86c:	mov	x1, x0
  40a870:	ldur	x0, [x29, #-16]
  40a874:	mov	w2, #0x3                   	// #3
  40a878:	bl	403814 <ferror@plt+0xc64>
  40a87c:	b	40a8a0 <ferror@plt+0x7cf0>
  40a880:	ldur	x0, [x29, #-16]
  40a884:	mov	x1, x26
  40a888:	bl	40b578 <ferror@plt+0x89c8>
  40a88c:	b	40a8a0 <ferror@plt+0x7cf0>
  40a890:	ldur	x0, [x29, #-16]
  40a894:	mov	w2, #0x3                   	// #3
  40a898:	mov	x1, x26
  40a89c:	bl	403960 <ferror@plt+0xdb0>
  40a8a0:	stur	x26, [x29, #-8]
  40a8a4:	b	40a8b8 <ferror@plt+0x7d08>
  40a8a8:	mov	w0, #0xa                   	// #10
  40a8ac:	bl	40a990 <ferror@plt+0x7de0>
  40a8b0:	cmp	w26, #0xa
  40a8b4:	b.ne	40a3dc <ferror@plt+0x782c>  // b.any
  40a8b8:	tbz	w21, #0, 40a8cc <ferror@plt+0x7d1c>
  40a8bc:	ldr	w8, [x25, #3504]
  40a8c0:	mov	w21, wzr
  40a8c4:	add	w8, w8, #0x1
  40a8c8:	str	w8, [x25, #3504]
  40a8cc:	mov	x0, x19
  40a8d0:	bl	402830 <getc@plt>
  40a8d4:	cmp	w0, #0xa
  40a8d8:	cset	w8, eq  // eq = none
  40a8dc:	mov	w26, w0
  40a8e0:	cmp	w0, #0x23
  40a8e4:	orr	w21, w21, w8
  40a8e8:	b.eq	40a908 <ferror@plt+0x7d58>  // b.none
  40a8ec:	b	40a8b0 <ferror@plt+0x7d00>
  40a8f0:	mov	x0, x19
  40a8f4:	bl	402830 <getc@plt>
  40a8f8:	cmp	w0, #0xa
  40a8fc:	cset	w8, eq  // eq = none
  40a900:	mov	w26, w0
  40a904:	orr	w21, w21, w8
  40a908:	cmn	w26, #0x1
  40a90c:	b.eq	40a8a8 <ferror@plt+0x7cf8>  // b.none
  40a910:	cmp	w26, #0xa
  40a914:	b.eq	40a8b0 <ferror@plt+0x7d00>  // b.none
  40a918:	tbz	w21, #0, 40a8f0 <ferror@plt+0x7d40>
  40a91c:	ldr	w8, [x25, #3504]
  40a920:	mov	w21, wzr
  40a924:	add	w8, w8, #0x1
  40a928:	str	w8, [x25, #3504]
  40a92c:	b	40a8f0 <ferror@plt+0x7d40>
  40a930:	ldur	x0, [x29, #-16]
  40a934:	bl	4029a0 <free@plt>
  40a938:	ldur	x0, [x29, #-8]
  40a93c:	bl	4029a0 <free@plt>
  40a940:	mov	x0, x19
  40a944:	bl	410760 <ferror@plt+0xdbb0>
  40a948:	cbz	w0, 40a964 <ferror@plt+0x7db4>
  40a94c:	bl	402b30 <__errno_location@plt>
  40a950:	ldr	w1, [x0]
  40a954:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a958:	add	x2, x2, #0x80e
  40a95c:	mov	w0, #0x1                   	// #1
  40a960:	bl	402cbc <ferror@plt+0x10c>
  40a964:	str	wzr, [x25, #3504]
  40a968:	ldp	x20, x19, [sp, #128]
  40a96c:	ldp	x22, x21, [sp, #112]
  40a970:	ldp	x24, x23, [sp, #96]
  40a974:	ldp	x26, x25, [sp, #80]
  40a978:	ldp	x28, x27, [sp, #64]
  40a97c:	ldp	x29, x30, [sp, #48]
  40a980:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40a984:	str	xzr, [x8, #3528]
  40a988:	add	sp, sp, #0x90
  40a98c:	ret
  40a990:	stp	x29, x30, [sp, #-16]!
  40a994:	cmp	w0, #0xa
  40a998:	mov	x29, sp
  40a99c:	b.ne	40a9bc <ferror@plt+0x7e0c>  // b.any
  40a9a0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a9a4:	add	x2, x2, #0x82a
  40a9a8:	mov	w0, #0x1                   	// #1
  40a9ac:	mov	w1, wzr
  40a9b0:	bl	402cbc <ferror@plt+0x10c>
  40a9b4:	ldp	x29, x30, [sp], #16
  40a9b8:	ret
  40a9bc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40a9c0:	mov	w3, w0
  40a9c4:	add	x2, x2, #0x84d
  40a9c8:	mov	w0, #0x1                   	// #1
  40a9cc:	mov	w1, wzr
  40a9d0:	bl	402cbc <ferror@plt+0x10c>
  40a9d4:	ldp	x29, x30, [sp], #16
  40a9d8:	ret
  40a9dc:	stp	x29, x30, [sp, #-64]!
  40a9e0:	stp	x24, x23, [sp, #16]
  40a9e4:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40a9e8:	stp	x22, x21, [sp, #32]
  40a9ec:	mov	x21, x1
  40a9f0:	ldr	x1, [x23, #2232]
  40a9f4:	stp	x20, x19, [sp, #48]
  40a9f8:	mov	w19, w2
  40a9fc:	mov	x20, x0
  40aa00:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40aa04:	mov	x29, sp
  40aa08:	cbz	x1, 40aa38 <ferror@plt+0x7e88>
  40aa0c:	ldr	x0, [x22, #2240]
  40aa10:	ldr	x8, [x0, #8]
  40aa14:	cmp	x8, x1
  40aa18:	b.cs	40aa30 <ferror@plt+0x7e80>  // b.hs, b.nlast
  40aa1c:	ldr	x8, [x0, #32]
  40aa20:	cmp	x8, x1
  40aa24:	b.ls	40aa30 <ferror@plt+0x7e80>  // b.plast
  40aa28:	stp	x1, x1, [x0, #16]
  40aa2c:	b	40aa34 <ferror@plt+0x7e84>
  40aa30:	bl	41674c <_obstack_free@@Base>
  40aa34:	str	xzr, [x23, #2232]
  40aa38:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40aa3c:	ldrb	w8, [x8, #1205]
  40aa40:	tbz	w8, #0, 40aa74 <ferror@plt+0x7ec4>
  40aa44:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40aa48:	ldr	x8, [x23, #2120]
  40aa4c:	cbz	x8, 40aa74 <ferror@plt+0x7ec4>
  40aa50:	bl	407dec <ferror@plt+0x523c>
  40aa54:	ldr	x0, [x23, #2120]
  40aa58:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40aa5c:	add	x1, x1, #0x875
  40aa60:	mov	x2, x21
  40aa64:	bl	415cfc <ferror@plt+0x1314c>
  40aa68:	ldr	x1, [x23, #2120]
  40aa6c:	mov	w0, #0xa                   	// #10
  40aa70:	bl	402600 <putc@plt>
  40aa74:	ldr	x22, [x22, #2240]
  40aa78:	ldp	x9, x8, [x22, #24]
  40aa7c:	sub	x8, x8, x9
  40aa80:	cmp	x8, #0x2f
  40aa84:	b.hi	40aa94 <ferror@plt+0x7ee4>  // b.pmore
  40aa88:	mov	w1, #0x30                  	// #48
  40aa8c:	mov	x0, x22
  40aa90:	bl	41659c <_obstack_newchunk@@Base>
  40aa94:	ldp	x23, x8, [x22, #16]
  40aa98:	add	x8, x8, #0x30
  40aa9c:	cmp	x8, x23
  40aaa0:	str	x8, [x22, #24]
  40aaa4:	b.ne	40aab4 <ferror@plt+0x7f04>  // b.any
  40aaa8:	ldrb	w8, [x22, #80]
  40aaac:	orr	w8, w8, #0x2
  40aab0:	strb	w8, [x22, #80]
  40aab4:	ldr	x9, [x22, #48]
  40aab8:	ldp	x10, x8, [x22, #24]
  40aabc:	ldr	x11, [x22, #8]
  40aac0:	add	x10, x9, x10
  40aac4:	bic	x9, x10, x9
  40aac8:	sub	x10, x9, x11
  40aacc:	sub	x11, x8, x11
  40aad0:	cmp	x10, x11
  40aad4:	str	x9, [x22, #24]
  40aad8:	b.ls	40aae0 <ferror@plt+0x7f30>  // b.plast
  40aadc:	str	x8, [x22, #24]
  40aae0:	ldr	x8, [x22, #24]
  40aae4:	mov	w9, #0x1                   	// #1
  40aae8:	mov	x0, x21
  40aaec:	str	x8, [x22, #16]
  40aaf0:	str	w9, [x23, #8]
  40aaf4:	bl	402540 <strlen@plt>
  40aaf8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40aafc:	add	x8, x8, #0x8e0
  40ab00:	ldp	x8, x9, [x8]
  40ab04:	add	x1, x0, #0x1
  40ab08:	mov	x22, x0
  40ab0c:	sub	x8, x9, x8
  40ab10:	cmp	x8, x1
  40ab14:	b.cs	40ab24 <ferror@plt+0x7f74>  // b.hs, b.nlast
  40ab18:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ab1c:	add	x0, x0, #0x8c8
  40ab20:	bl	41659c <_obstack_newchunk@@Base>
  40ab24:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ab28:	add	x24, x24, #0x8d8
  40ab2c:	ldr	x0, [x24, #8]
  40ab30:	mov	x1, x21
  40ab34:	mov	x2, x22
  40ab38:	bl	402510 <memcpy@plt>
  40ab3c:	ldr	x8, [x24, #8]
  40ab40:	add	x8, x8, x22
  40ab44:	add	x9, x8, #0x1
  40ab48:	str	x9, [x24, #8]
  40ab4c:	strb	wzr, [x8]
  40ab50:	ldp	x8, x9, [x24]
  40ab54:	cmp	x9, x8
  40ab58:	b.ne	40ab6c <ferror@plt+0x7fbc>  // b.any
  40ab5c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ab60:	ldrb	w10, [x9, #2328]
  40ab64:	orr	w10, w10, #0x2
  40ab68:	strb	w10, [x9, #2328]
  40ab6c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ab70:	add	x9, x9, #0x8d0
  40ab74:	ldr	x10, [x9, #40]
  40ab78:	ldp	x11, x13, [x9, #16]
  40ab7c:	ldr	x12, [x9]
  40ab80:	add	x11, x10, x11
  40ab84:	bic	x10, x11, x10
  40ab88:	sub	x11, x13, x12
  40ab8c:	sub	x12, x10, x12
  40ab90:	cmp	x12, x11
  40ab94:	mov	w11, #0x1                   	// #1
  40ab98:	adrp	x12, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ab9c:	csel	x10, x13, x10, hi  // hi = pmore
  40aba0:	stp	x10, x10, [x9, #8]
  40aba4:	str	x8, [x23, #16]
  40aba8:	str	w11, [x23, #24]
  40abac:	strb	w11, [x12, #2336]
  40abb0:	ldrb	w8, [x23, #40]
  40abb4:	mov	w13, #0x2                   	// #2
  40abb8:	tst	w19, #0x1
  40abbc:	csel	w10, w13, wzr, ne  // ne = any
  40abc0:	and	w8, w8, #0xfffffffc
  40abc4:	orr	w8, w8, w10
  40abc8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40abcc:	str	x20, [x23, #32]
  40abd0:	strb	w8, [x23, #40]
  40abd4:	ldrb	w9, [x9, #2340]
  40abd8:	and	w8, w8, #0xfffffffb
  40abdc:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40abe0:	mov	w11, #0xffffffff            	// #-1
  40abe4:	orr	w8, w8, w9, lsl #2
  40abe8:	strb	w8, [x23, #40]
  40abec:	ldr	x8, [x10, #2344]
  40abf0:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40abf4:	str	w11, [x9, #3584]
  40abf8:	str	x8, [x23]
  40abfc:	str	x23, [x10, #2344]
  40ac00:	ldp	x20, x19, [sp, #48]
  40ac04:	ldp	x22, x21, [sp, #32]
  40ac08:	ldp	x24, x23, [sp, #16]
  40ac0c:	ldp	x29, x30, [sp], #64
  40ac10:	ret
  40ac14:	stp	x29, x30, [sp, #-48]!
  40ac18:	stp	x20, x19, [sp, #32]
  40ac1c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ac20:	ldr	x1, [x20, #2232]
  40ac24:	str	x21, [sp, #16]
  40ac28:	mov	x19, x0
  40ac2c:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ac30:	mov	x29, sp
  40ac34:	cbz	x1, 40ac64 <ferror@plt+0x80b4>
  40ac38:	ldr	x0, [x21, #2240]
  40ac3c:	ldr	x8, [x0, #8]
  40ac40:	cmp	x8, x1
  40ac44:	b.cs	40ac5c <ferror@plt+0x80ac>  // b.hs, b.nlast
  40ac48:	ldr	x8, [x0, #32]
  40ac4c:	cmp	x8, x1
  40ac50:	b.ls	40ac5c <ferror@plt+0x80ac>  // b.plast
  40ac54:	stp	x1, x1, [x0, #16]
  40ac58:	b	40ac60 <ferror@plt+0x80b0>
  40ac5c:	bl	41674c <_obstack_free@@Base>
  40ac60:	str	xzr, [x20, #2232]
  40ac64:	ldr	x20, [x21, #2240]
  40ac68:	ldp	x9, x8, [x20, #24]
  40ac6c:	sub	x8, x8, x9
  40ac70:	cmp	x8, #0x2f
  40ac74:	b.hi	40ac84 <ferror@plt+0x80d4>  // b.pmore
  40ac78:	mov	w1, #0x30                  	// #48
  40ac7c:	mov	x0, x20
  40ac80:	bl	41659c <_obstack_newchunk@@Base>
  40ac84:	ldp	x8, x9, [x20, #16]
  40ac88:	add	x9, x9, #0x30
  40ac8c:	cmp	x9, x8
  40ac90:	str	x9, [x20, #24]
  40ac94:	b.ne	40aca4 <ferror@plt+0x80f4>  // b.any
  40ac98:	ldrb	w9, [x20, #80]
  40ac9c:	orr	w9, w9, #0x2
  40aca0:	strb	w9, [x20, #80]
  40aca4:	ldr	x10, [x20, #48]
  40aca8:	ldp	x11, x9, [x20, #24]
  40acac:	ldr	x12, [x20, #8]
  40acb0:	add	x11, x10, x11
  40acb4:	bic	x10, x11, x10
  40acb8:	sub	x11, x10, x12
  40acbc:	sub	x12, x9, x12
  40acc0:	cmp	x11, x12
  40acc4:	str	x10, [x20, #24]
  40acc8:	b.ls	40acd0 <ferror@plt+0x8120>  // b.plast
  40accc:	str	x9, [x20, #24]
  40acd0:	ldr	x9, [x20, #24]
  40acd4:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40acd8:	ldr	x21, [sp, #16]
  40acdc:	str	x9, [x20, #16]
  40ace0:	mov	w9, #0x2                   	// #2
  40ace4:	str	w9, [x8, #8]
  40ace8:	ldr	x9, [x10, #3528]
  40acec:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40acf0:	str	x9, [x8, #16]
  40acf4:	ldr	w9, [x10, #3504]
  40acf8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40acfc:	str	w9, [x8, #24]
  40ad00:	mov	w9, #0x1                   	// #1
  40ad04:	strb	w9, [x10, #2336]
  40ad08:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ad0c:	str	x19, [x8, #32]
  40ad10:	ldr	x10, [x9, #2344]
  40ad14:	str	x10, [x8]
  40ad18:	ldp	x20, x19, [sp, #32]
  40ad1c:	str	x8, [x9, #2344]
  40ad20:	ldp	x29, x30, [sp], #48
  40ad24:	ret
  40ad28:	stp	x29, x30, [sp, #-48]!
  40ad2c:	stp	x20, x19, [sp, #32]
  40ad30:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ad34:	ldr	x8, [x20, #2232]
  40ad38:	str	x21, [sp, #16]
  40ad3c:	mov	x29, sp
  40ad40:	cbnz	x8, 40adf4 <ferror@plt+0x8244>
  40ad44:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ad48:	ldr	x19, [x21, #2240]
  40ad4c:	ldp	x9, x8, [x19, #24]
  40ad50:	sub	x8, x8, x9
  40ad54:	cmp	x8, #0x2f
  40ad58:	b.hi	40ad68 <ferror@plt+0x81b8>  // b.pmore
  40ad5c:	mov	w1, #0x30                  	// #48
  40ad60:	mov	x0, x19
  40ad64:	bl	41659c <_obstack_newchunk@@Base>
  40ad68:	ldp	x8, x9, [x19, #16]
  40ad6c:	add	x9, x9, #0x30
  40ad70:	cmp	x9, x8
  40ad74:	str	x9, [x19, #24]
  40ad78:	b.ne	40ad88 <ferror@plt+0x81d8>  // b.any
  40ad7c:	ldrb	w9, [x19, #80]
  40ad80:	orr	w9, w9, #0x2
  40ad84:	strb	w9, [x19, #80]
  40ad88:	ldr	x10, [x19, #48]
  40ad8c:	ldp	x11, x9, [x19, #24]
  40ad90:	ldr	x12, [x19, #8]
  40ad94:	add	x11, x10, x11
  40ad98:	bic	x10, x11, x10
  40ad9c:	sub	x11, x10, x12
  40ada0:	sub	x12, x9, x12
  40ada4:	cmp	x11, x12
  40ada8:	str	x10, [x19, #24]
  40adac:	b.ls	40adb4 <ferror@plt+0x8204>  // b.plast
  40adb0:	str	x9, [x19, #24]
  40adb4:	ldr	x9, [x19, #24]
  40adb8:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40adbc:	str	x9, [x19, #16]
  40adc0:	str	x8, [x20, #2232]
  40adc4:	str	wzr, [x8, #8]
  40adc8:	ldr	x9, [x10, #3528]
  40adcc:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40add0:	str	x9, [x8, #16]
  40add4:	ldr	w8, [x10, #3504]
  40add8:	ldr	x9, [x20, #2232]
  40addc:	str	w8, [x9, #24]
  40ade0:	ldr	x0, [x21, #2240]
  40ade4:	ldp	x20, x19, [sp, #32]
  40ade8:	ldr	x21, [sp, #16]
  40adec:	ldp	x29, x30, [sp], #48
  40adf0:	ret
  40adf4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40adf8:	ldr	w0, [x8, #1224]
  40adfc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40ae00:	add	x2, x2, #0x888
  40ae04:	mov	w1, wzr
  40ae08:	bl	402cbc <ferror@plt+0x10c>
  40ae0c:	bl	4028d0 <abort@plt>
  40ae10:	stp	x29, x30, [sp, #-48]!
  40ae14:	stp	x20, x19, [sp, #32]
  40ae18:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ae1c:	ldr	x1, [x20, #2232]
  40ae20:	stp	x22, x21, [sp, #16]
  40ae24:	mov	x29, sp
  40ae28:	cbz	x1, 40aeec <ferror@plt+0x833c>
  40ae2c:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ae30:	ldr	x19, [x22, #2240]
  40ae34:	ldp	x9, x8, [x19, #16]
  40ae38:	subs	x21, x8, x9
  40ae3c:	b.eq	40aef4 <ferror@plt+0x8344>  // b.none
  40ae40:	ldr	x9, [x19, #32]
  40ae44:	cmp	x9, x8
  40ae48:	b.ne	40ae58 <ferror@plt+0x82a8>  // b.any
  40ae4c:	mov	w1, #0x1                   	// #1
  40ae50:	mov	x0, x19
  40ae54:	bl	41659c <_obstack_newchunk@@Base>
  40ae58:	ldr	x8, [x19, #24]
  40ae5c:	add	x9, x8, #0x1
  40ae60:	str	x9, [x19, #24]
  40ae64:	strb	wzr, [x8]
  40ae68:	ldr	x9, [x22, #2240]
  40ae6c:	ldp	x8, x10, [x9, #16]
  40ae70:	cmp	x10, x8
  40ae74:	b.ne	40ae84 <ferror@plt+0x82d4>  // b.any
  40ae78:	ldrb	w10, [x9, #80]
  40ae7c:	orr	w10, w10, #0x2
  40ae80:	strb	w10, [x9, #80]
  40ae84:	ldr	x11, [x9, #48]
  40ae88:	ldp	x12, x10, [x9, #24]
  40ae8c:	ldr	x13, [x9, #8]
  40ae90:	add	x12, x11, x12
  40ae94:	bic	x11, x12, x11
  40ae98:	sub	x12, x11, x13
  40ae9c:	sub	x13, x10, x13
  40aea0:	cmp	x12, x13
  40aea4:	str	x11, [x9, #24]
  40aea8:	b.ls	40aeb0 <ferror@plt+0x8300>  // b.plast
  40aeac:	str	x10, [x9, #24]
  40aeb0:	ldr	x10, [x9, #24]
  40aeb4:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40aeb8:	str	x10, [x9, #16]
  40aebc:	ldr	x9, [x20, #2232]
  40aec0:	add	x10, x8, x21
  40aec4:	stp	x8, x10, [x9, #32]
  40aec8:	ldr	x8, [x11, #2344]
  40aecc:	ldr	x10, [x20, #2232]
  40aed0:	str	x8, [x10]
  40aed4:	str	x9, [x11, #2344]
  40aed8:	ldr	x0, [x9, #32]
  40aedc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40aee0:	mov	w9, #0x1                   	// #1
  40aee4:	strb	w9, [x8, #2336]
  40aee8:	b	40af24 <ferror@plt+0x8374>
  40aeec:	mov	x0, xzr
  40aef0:	b	40af28 <ferror@plt+0x8378>
  40aef4:	ldr	x8, [x19, #8]
  40aef8:	cmp	x8, x1
  40aefc:	b.cs	40af18 <ferror@plt+0x8368>  // b.hs, b.nlast
  40af00:	ldr	x8, [x19, #32]
  40af04:	cmp	x8, x1
  40af08:	b.ls	40af18 <ferror@plt+0x8368>  // b.plast
  40af0c:	mov	x0, xzr
  40af10:	stp	x1, x1, [x19, #16]
  40af14:	b	40af24 <ferror@plt+0x8374>
  40af18:	mov	x0, x19
  40af1c:	bl	41674c <_obstack_free@@Base>
  40af20:	mov	x0, xzr
  40af24:	str	xzr, [x20, #2232]
  40af28:	ldp	x20, x19, [sp, #32]
  40af2c:	ldp	x22, x21, [sp, #16]
  40af30:	ldp	x29, x30, [sp], #48
  40af34:	ret
  40af38:	stp	x29, x30, [sp, #-64]!
  40af3c:	stp	x24, x23, [sp, #16]
  40af40:	stp	x22, x21, [sp, #32]
  40af44:	stp	x20, x19, [sp, #48]
  40af48:	mov	x29, sp
  40af4c:	mov	x20, x0
  40af50:	bl	402540 <strlen@plt>
  40af54:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40af58:	ldr	x21, [x24, #2352]
  40af5c:	mov	x19, x0
  40af60:	ldp	x9, x8, [x21, #24]
  40af64:	sub	x8, x8, x9
  40af68:	cmp	x8, #0x2f
  40af6c:	b.hi	40af7c <ferror@plt+0x83cc>  // b.pmore
  40af70:	mov	w1, #0x30                  	// #48
  40af74:	mov	x0, x21
  40af78:	bl	41659c <_obstack_newchunk@@Base>
  40af7c:	ldp	x22, x8, [x21, #16]
  40af80:	add	x8, x8, #0x30
  40af84:	cmp	x8, x22
  40af88:	str	x8, [x21, #24]
  40af8c:	b.ne	40af9c <ferror@plt+0x83ec>  // b.any
  40af90:	ldrb	w8, [x21, #80]
  40af94:	orr	w8, w8, #0x2
  40af98:	strb	w8, [x21, #80]
  40af9c:	ldr	x9, [x21, #48]
  40afa0:	ldp	x10, x8, [x21, #24]
  40afa4:	ldr	x11, [x21, #8]
  40afa8:	add	x10, x9, x10
  40afac:	bic	x9, x10, x9
  40afb0:	sub	x10, x9, x11
  40afb4:	sub	x11, x8, x11
  40afb8:	cmp	x10, x11
  40afbc:	str	x9, [x21, #24]
  40afc0:	b.ls	40afc8 <ferror@plt+0x8418>  // b.plast
  40afc4:	str	x8, [x21, #24]
  40afc8:	ldr	x8, [x21, #24]
  40afcc:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40afd0:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40afd4:	add	x1, x19, #0x1
  40afd8:	str	x8, [x21, #16]
  40afdc:	ldr	x8, [x23, #2360]
  40afe0:	str	wzr, [x22, #8]
  40afe4:	str	x8, [x22]
  40afe8:	ldr	x8, [x9, #3528]
  40afec:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40aff0:	str	x8, [x22, #16]
  40aff4:	ldr	w8, [x9, #3504]
  40aff8:	str	w8, [x22, #24]
  40affc:	ldr	x21, [x24, #2352]
  40b000:	ldp	x9, x8, [x21, #24]
  40b004:	sub	x8, x8, x9
  40b008:	cmp	x8, x1
  40b00c:	b.cs	40b018 <ferror@plt+0x8468>  // b.hs, b.nlast
  40b010:	mov	x0, x21
  40b014:	bl	41659c <_obstack_newchunk@@Base>
  40b018:	ldr	x0, [x21, #24]
  40b01c:	mov	x1, x20
  40b020:	mov	x2, x19
  40b024:	bl	402510 <memcpy@plt>
  40b028:	ldr	x8, [x21, #24]
  40b02c:	add	x8, x8, x19
  40b030:	add	x9, x8, #0x1
  40b034:	str	x9, [x21, #24]
  40b038:	strb	wzr, [x8]
  40b03c:	ldp	x8, x9, [x21, #16]
  40b040:	cmp	x9, x8
  40b044:	b.ne	40b054 <ferror@plt+0x84a4>  // b.any
  40b048:	ldrb	w9, [x21, #80]
  40b04c:	orr	w9, w9, #0x2
  40b050:	strb	w9, [x21, #80]
  40b054:	ldr	x10, [x21, #48]
  40b058:	ldp	x11, x9, [x21, #24]
  40b05c:	ldr	x12, [x21, #8]
  40b060:	add	x11, x10, x11
  40b064:	bic	x10, x11, x10
  40b068:	sub	x11, x10, x12
  40b06c:	sub	x12, x9, x12
  40b070:	cmp	x11, x12
  40b074:	str	x10, [x21, #24]
  40b078:	b.ls	40b080 <ferror@plt+0x84d0>  // b.plast
  40b07c:	str	x9, [x21, #24]
  40b080:	ldr	x9, [x21, #24]
  40b084:	add	x10, x8, x19
  40b088:	str	x9, [x21, #16]
  40b08c:	stp	x8, x10, [x22, #32]
  40b090:	str	x22, [x23, #2360]
  40b094:	ldp	x20, x19, [sp, #48]
  40b098:	ldp	x22, x21, [sp, #32]
  40b09c:	ldp	x24, x23, [sp, #16]
  40b0a0:	ldp	x29, x30, [sp], #64
  40b0a4:	ret
  40b0a8:	stp	x29, x30, [sp, #-48]!
  40b0ac:	stp	x20, x19, [sp, #32]
  40b0b0:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b0b4:	ldr	x0, [x20, #2240]
  40b0b8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b0bc:	mov	x1, xzr
  40b0c0:	str	x21, [sp, #16]
  40b0c4:	mov	x29, sp
  40b0c8:	str	xzr, [x8, #2232]
  40b0cc:	bl	41674c <_obstack_free@@Base>
  40b0d0:	ldr	x0, [x20, #2240]
  40b0d4:	bl	4029a0 <free@plt>
  40b0d8:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b0dc:	ldr	x8, [x19, #2360]
  40b0e0:	cbz	x8, 40b138 <ferror@plt+0x8588>
  40b0e4:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b0e8:	ldr	x8, [x21, #2352]
  40b0ec:	mov	w0, #0x58                  	// #88
  40b0f0:	str	x8, [x20, #2240]
  40b0f4:	bl	4157d0 <ferror@plt+0x12c20>
  40b0f8:	adrp	x3, 415000 <ferror@plt+0x12450>
  40b0fc:	adrp	x4, 402000 <mbrtowc@plt-0x500>
  40b100:	add	x3, x3, #0x7d0
  40b104:	add	x4, x4, #0x9a0
  40b108:	mov	x1, xzr
  40b10c:	mov	x2, xzr
  40b110:	str	x0, [x21, #2352]
  40b114:	bl	4164b4 <_obstack_begin@@Base>
  40b118:	ldr	x8, [x19, #2360]
  40b11c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b120:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b124:	mov	w0, #0x1                   	// #1
  40b128:	str	xzr, [x19, #2360]
  40b12c:	str	x8, [x9, #2344]
  40b130:	strb	w0, [x10, #2336]
  40b134:	b	40b174 <ferror@plt+0x85c4>
  40b138:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b13c:	add	x0, x0, #0x940
  40b140:	mov	x1, xzr
  40b144:	bl	41674c <_obstack_free@@Base>
  40b148:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b14c:	add	x0, x0, #0x8c8
  40b150:	mov	x1, xzr
  40b154:	bl	41674c <_obstack_free@@Base>
  40b158:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b15c:	ldr	x0, [x19, #2352]
  40b160:	mov	x1, xzr
  40b164:	bl	41674c <_obstack_free@@Base>
  40b168:	ldr	x0, [x19, #2352]
  40b16c:	bl	4029a0 <free@plt>
  40b170:	mov	w0, wzr
  40b174:	ldp	x20, x19, [sp, #32]
  40b178:	ldr	x21, [sp, #16]
  40b17c:	ldp	x29, x30, [sp], #48
  40b180:	ret
  40b184:	stp	x29, x30, [sp, #-64]!
  40b188:	stp	x24, x23, [sp, #16]
  40b18c:	stp	x22, x21, [sp, #32]
  40b190:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b194:	adrp	x22, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b198:	stp	x20, x19, [sp, #48]
  40b19c:	ldr	x20, [x23, #3528]
  40b1a0:	ldr	w19, [x22, #3504]
  40b1a4:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b1a8:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b1ac:	mov	x29, sp
  40b1b0:	ldr	x8, [x24, #2344]
  40b1b4:	cbz	x8, 40b1c0 <ferror@plt+0x8610>
  40b1b8:	ldr	w9, [x8, #8]
  40b1bc:	cbz	w9, 40b1d8 <ferror@plt+0x8628>
  40b1c0:	bl	40b258 <ferror@plt+0x86a8>
  40b1c4:	cmp	w0, #0xa
  40b1c8:	b.eq	40b224 <ferror@plt+0x8674>  // b.none
  40b1cc:	cmp	w0, #0x100
  40b1d0:	b.ne	40b1b0 <ferror@plt+0x8600>  // b.any
  40b1d4:	b	40b204 <ferror@plt+0x8654>
  40b1d8:	ldr	x9, [x8, #32]
  40b1dc:	ldrb	w10, [x9]
  40b1e0:	cbz	w10, 40b1c0 <ferror@plt+0x8610>
  40b1e4:	ldrb	w10, [x21, #2336]
  40b1e8:	tbnz	w10, #0, 40b1c0 <ferror@plt+0x8610>
  40b1ec:	add	x10, x9, #0x1
  40b1f0:	str	x10, [x8, #32]
  40b1f4:	ldrb	w0, [x9]
  40b1f8:	cmp	w0, #0xa
  40b1fc:	b.ne	40b1cc <ferror@plt+0x861c>  // b.any
  40b200:	b	40b224 <ferror@plt+0x8674>
  40b204:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b208:	ldr	w0, [x8, #1224]
  40b20c:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x282c>
  40b210:	add	x4, x4, #0x8af
  40b214:	mov	w1, wzr
  40b218:	mov	x2, x20
  40b21c:	mov	w3, w19
  40b220:	bl	402d68 <ferror@plt+0x1b8>
  40b224:	ldr	x8, [x23, #3528]
  40b228:	cmp	x20, x8
  40b22c:	b.ne	40b23c <ferror@plt+0x868c>  // b.any
  40b230:	ldr	w8, [x22, #3504]
  40b234:	cmp	w19, w8
  40b238:	b.eq	40b244 <ferror@plt+0x8694>  // b.none
  40b23c:	mov	w8, #0x1                   	// #1
  40b240:	strb	w8, [x21, #2336]
  40b244:	ldp	x20, x19, [sp, #48]
  40b248:	ldp	x22, x21, [sp, #32]
  40b24c:	ldp	x24, x23, [sp, #16]
  40b250:	ldp	x29, x30, [sp], #64
  40b254:	ret
  40b258:	stp	x29, x30, [sp, #-64]!
  40b25c:	stp	x20, x19, [sp, #48]
  40b260:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b264:	ldr	x8, [x19, #2344]
  40b268:	str	x23, [sp, #16]
  40b26c:	stp	x22, x21, [sp, #32]
  40b270:	mov	x29, sp
  40b274:	cbz	x8, 40b320 <ferror@plt+0x8770>
  40b278:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b27c:	adrp	x22, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b280:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b284:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b288:	ldrb	w9, [x21, #2336]
  40b28c:	cmp	w9, #0x1
  40b290:	b.ne	40b2a8 <ferror@plt+0x86f8>  // b.any
  40b294:	ldr	x9, [x8, #16]
  40b298:	str	x9, [x22, #3528]
  40b29c:	ldr	w9, [x8, #24]
  40b2a0:	strb	wzr, [x21, #2336]
  40b2a4:	str	w9, [x23, #3504]
  40b2a8:	ldr	w9, [x8, #8]
  40b2ac:	cmp	w9, #0x2
  40b2b0:	b.eq	40b340 <ferror@plt+0x8790>  // b.none
  40b2b4:	cmp	w9, #0x1
  40b2b8:	b.eq	40b2d8 <ferror@plt+0x8728>  // b.none
  40b2bc:	cbnz	w9, 40b370 <ferror@plt+0x87c0>
  40b2c0:	ldr	x9, [x8, #32]
  40b2c4:	add	x10, x9, #0x1
  40b2c8:	str	x10, [x8, #32]
  40b2cc:	ldrb	w0, [x9]
  40b2d0:	cbz	w0, 40b314 <ferror@plt+0x8764>
  40b2d4:	b	40b348 <ferror@plt+0x8798>
  40b2d8:	ldrb	w9, [x20, #2340]
  40b2dc:	cbz	w9, 40b2f4 <ferror@plt+0x8744>
  40b2e0:	strb	wzr, [x20, #2340]
  40b2e4:	ldr	w9, [x8, #24]
  40b2e8:	add	w9, w9, #0x1
  40b2ec:	str	w9, [x8, #24]
  40b2f0:	str	w9, [x23, #3504]
  40b2f4:	ldrb	w9, [x8, #40]
  40b2f8:	tbnz	w9, #0, 40b308 <ferror@plt+0x8758>
  40b2fc:	ldr	x0, [x8, #32]
  40b300:	bl	402830 <getc@plt>
  40b304:	b	40b30c <ferror@plt+0x875c>
  40b308:	mov	w0, #0xffffffff            	// #-1
  40b30c:	cmn	w0, #0x1
  40b310:	b.ne	40b35c <ferror@plt+0x87ac>  // b.any
  40b314:	bl	40c33c <ferror@plt+0x978c>
  40b318:	ldr	x8, [x19, #2344]
  40b31c:	cbnz	x8, 40b288 <ferror@plt+0x86d8>
  40b320:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x182c>
  40b324:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b328:	add	x9, x9, #0xe37
  40b32c:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b330:	str	x9, [x8, #3528]
  40b334:	str	wzr, [x10, #3504]
  40b338:	mov	w0, #0x100                 	// #256
  40b33c:	b	40b348 <ferror@plt+0x8798>
  40b340:	bl	40c33c <ferror@plt+0x978c>
  40b344:	mov	w0, #0x101                 	// #257
  40b348:	ldp	x20, x19, [sp, #48]
  40b34c:	ldp	x22, x21, [sp, #32]
  40b350:	ldr	x23, [sp, #16]
  40b354:	ldp	x29, x30, [sp], #64
  40b358:	ret
  40b35c:	cmp	w0, #0xa
  40b360:	b.ne	40b348 <ferror@plt+0x8798>  // b.any
  40b364:	mov	w8, #0x1                   	// #1
  40b368:	strb	w8, [x20, #2340]
  40b36c:	b	40b348 <ferror@plt+0x8798>
  40b370:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b374:	ldr	w0, [x8, #1224]
  40b378:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40b37c:	add	x2, x2, #0x952
  40b380:	mov	w1, wzr
  40b384:	bl	402cbc <ferror@plt+0x10c>
  40b388:	bl	4028d0 <abort@plt>
  40b38c:	stp	x29, x30, [sp, #-48]!
  40b390:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x182c>
  40b394:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b398:	add	x9, x9, #0xe37
  40b39c:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b3a0:	mov	w0, #0x58                  	// #88
  40b3a4:	str	x21, [sp, #16]
  40b3a8:	stp	x20, x19, [sp, #32]
  40b3ac:	mov	x29, sp
  40b3b0:	str	x9, [x8, #3528]
  40b3b4:	str	wzr, [x10, #3504]
  40b3b8:	bl	4157d0 <ferror@plt+0x12c20>
  40b3bc:	adrp	x19, 415000 <ferror@plt+0x12450>
  40b3c0:	adrp	x20, 402000 <mbrtowc@plt-0x500>
  40b3c4:	add	x19, x19, #0x7d0
  40b3c8:	add	x20, x20, #0x9a0
  40b3cc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b3d0:	mov	x1, xzr
  40b3d4:	mov	x2, xzr
  40b3d8:	mov	x3, x19
  40b3dc:	mov	x4, x20
  40b3e0:	str	x0, [x8, #2240]
  40b3e4:	bl	4164b4 <_obstack_begin@@Base>
  40b3e8:	mov	w0, #0x58                  	// #88
  40b3ec:	bl	4157d0 <ferror@plt+0x12c20>
  40b3f0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b3f4:	mov	x1, xzr
  40b3f8:	mov	x2, xzr
  40b3fc:	mov	x3, x19
  40b400:	mov	x4, x20
  40b404:	str	x0, [x8, #2352]
  40b408:	bl	4164b4 <_obstack_begin@@Base>
  40b40c:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b410:	add	x0, x0, #0x8c8
  40b414:	mov	x1, xzr
  40b418:	mov	x2, xzr
  40b41c:	mov	x3, x19
  40b420:	mov	x4, x20
  40b424:	bl	4164b4 <_obstack_begin@@Base>
  40b428:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b42c:	add	x21, x21, #0x940
  40b430:	mov	x0, x21
  40b434:	mov	x1, xzr
  40b438:	mov	x2, xzr
  40b43c:	mov	x3, x19
  40b440:	mov	x4, x20
  40b444:	bl	4164b4 <_obstack_begin@@Base>
  40b448:	ldp	x9, x8, [x21, #24]
  40b44c:	cmp	x8, x9
  40b450:	b.ne	40b464 <ferror@plt+0x88b4>  // b.any
  40b454:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b458:	add	x0, x0, #0x940
  40b45c:	mov	w1, #0x1                   	// #1
  40b460:	bl	41659c <_obstack_newchunk@@Base>
  40b464:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b468:	add	x8, x8, #0x950
  40b46c:	ldp	x10, x9, [x8]
  40b470:	add	x9, x9, #0x1
  40b474:	cmp	x9, x10
  40b478:	str	x9, [x8, #8]
  40b47c:	b.ne	40b490 <ferror@plt+0x88e0>  // b.any
  40b480:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b484:	ldrb	w9, [x8, #2448]
  40b488:	orr	w9, w9, #0x2
  40b48c:	strb	w9, [x8, #2448]
  40b490:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b494:	add	x8, x8, #0x948
  40b498:	ldr	x9, [x8, #40]
  40b49c:	ldp	x10, x12, [x8, #16]
  40b4a0:	ldr	x11, [x8]
  40b4a4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40b4a8:	add	x0, x0, #0x673
  40b4ac:	add	x10, x9, x10
  40b4b0:	bic	x9, x10, x9
  40b4b4:	sub	x10, x12, x11
  40b4b8:	sub	x11, x9, x11
  40b4bc:	cmp	x11, x10
  40b4c0:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b4c4:	str	xzr, [x11, #2344]
  40b4c8:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b4cc:	str	xzr, [x11, #2360]
  40b4d0:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b4d4:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b4d8:	str	xzr, [x11, #2232]
  40b4dc:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b4e0:	csel	x9, x12, x9, hi  // hi = pmore
  40b4e4:	stp	x9, x9, [x8, #8]
  40b4e8:	str	x9, [x10, #2456]
  40b4ec:	strb	wzr, [x11, #2340]
  40b4f0:	bl	415a38 <ferror@plt+0x12e88>
  40b4f4:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b4f8:	add	x19, x19, #0xdb8
  40b4fc:	str	x0, [x19]
  40b500:	bl	402540 <strlen@plt>
  40b504:	str	x0, [x19, #8]
  40b508:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  40b50c:	add	x0, x0, #0xf82
  40b510:	bl	415a38 <ferror@plt+0x12e88>
  40b514:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b518:	add	x19, x19, #0xdf0
  40b51c:	str	x0, [x19]
  40b520:	bl	402540 <strlen@plt>
  40b524:	str	x0, [x19, #8]
  40b528:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40b52c:	add	x0, x0, #0x67d
  40b530:	bl	415a38 <ferror@plt+0x12e88>
  40b534:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b538:	add	x19, x19, #0xdd0
  40b53c:	str	x0, [x19]
  40b540:	bl	402540 <strlen@plt>
  40b544:	str	x0, [x19, #8]
  40b548:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x382c>
  40b54c:	add	x0, x0, #0xb09
  40b550:	bl	415a38 <ferror@plt+0x12e88>
  40b554:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b558:	add	x19, x19, #0xde0
  40b55c:	str	x0, [x19]
  40b560:	bl	402540 <strlen@plt>
  40b564:	str	x0, [x19, #8]
  40b568:	ldp	x20, x19, [sp, #32]
  40b56c:	ldr	x21, [sp, #16]
  40b570:	ldp	x29, x30, [sp], #48
  40b574:	ret
  40b578:	stp	x29, x30, [sp, #-32]!
  40b57c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b580:	ldr	x8, [x8, #3512]
  40b584:	stp	x20, x19, [sp, #16]
  40b588:	mov	x20, x0
  40b58c:	mov	x29, sp
  40b590:	mov	x0, x8
  40b594:	mov	x19, x1
  40b598:	bl	4029a0 <free@plt>
  40b59c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b5a0:	ldr	x0, [x8, #3568]
  40b5a4:	bl	4029a0 <free@plt>
  40b5a8:	cbz	x20, 40b5cc <ferror@plt+0x8a1c>
  40b5ac:	cbz	x19, 40b5c0 <ferror@plt+0x8a10>
  40b5b0:	ldrb	w8, [x20]
  40b5b4:	cbz	w8, 40b5dc <ferror@plt+0x8a2c>
  40b5b8:	ldrb	w8, [x19]
  40b5bc:	cbnz	w8, 40b5dc <ferror@plt+0x8a2c>
  40b5c0:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x182c>
  40b5c4:	add	x19, x19, #0xf82
  40b5c8:	b	40b5dc <ferror@plt+0x8a2c>
  40b5cc:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x182c>
  40b5d0:	adrp	x20, 419000 <_obstack_memory_used@@Base+0x282c>
  40b5d4:	add	x19, x19, #0xf82
  40b5d8:	add	x20, x20, #0x673
  40b5dc:	mov	x0, x20
  40b5e0:	bl	415a38 <ferror@plt+0x12e88>
  40b5e4:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b5e8:	add	x20, x20, #0xdb8
  40b5ec:	str	x0, [x20]
  40b5f0:	bl	402540 <strlen@plt>
  40b5f4:	str	x0, [x20, #8]
  40b5f8:	mov	x0, x19
  40b5fc:	bl	415a38 <ferror@plt+0x12e88>
  40b600:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b604:	add	x19, x19, #0xdf0
  40b608:	str	x0, [x19]
  40b60c:	bl	402540 <strlen@plt>
  40b610:	str	x0, [x19, #8]
  40b614:	ldp	x20, x19, [sp, #16]
  40b618:	ldp	x29, x30, [sp], #32
  40b61c:	ret
  40b620:	stp	x29, x30, [sp, #-32]!
  40b624:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b628:	ldr	x8, [x8, #3536]
  40b62c:	stp	x20, x19, [sp, #16]
  40b630:	mov	x20, x0
  40b634:	mov	x29, sp
  40b638:	mov	x0, x8
  40b63c:	mov	x19, x1
  40b640:	bl	4029a0 <free@plt>
  40b644:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b648:	ldr	x0, [x8, #3552]
  40b64c:	bl	4029a0 <free@plt>
  40b650:	cbz	x20, 40b674 <ferror@plt+0x8ac4>
  40b654:	cbz	x19, 40b668 <ferror@plt+0x8ab8>
  40b658:	ldrb	w8, [x20]
  40b65c:	cbz	w8, 40b680 <ferror@plt+0x8ad0>
  40b660:	ldrb	w8, [x19]
  40b664:	cbnz	w8, 40b680 <ferror@plt+0x8ad0>
  40b668:	adrp	x19, 41a000 <_obstack_memory_used@@Base+0x382c>
  40b66c:	add	x19, x19, #0xb09
  40b670:	b	40b680 <ferror@plt+0x8ad0>
  40b674:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x182c>
  40b678:	add	x20, x20, #0xe37
  40b67c:	mov	x19, x20
  40b680:	mov	x0, x20
  40b684:	bl	415a38 <ferror@plt+0x12e88>
  40b688:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b68c:	add	x20, x20, #0xdd0
  40b690:	str	x0, [x20]
  40b694:	bl	402540 <strlen@plt>
  40b698:	str	x0, [x20, #8]
  40b69c:	mov	x0, x19
  40b6a0:	bl	415a38 <ferror@plt+0x12e88>
  40b6a4:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b6a8:	add	x19, x19, #0xde0
  40b6ac:	str	x0, [x19]
  40b6b0:	bl	402540 <strlen@plt>
  40b6b4:	str	x0, [x19, #8]
  40b6b8:	ldp	x20, x19, [sp, #16]
  40b6bc:	ldp	x29, x30, [sp], #32
  40b6c0:	ret
  40b6c4:	sub	sp, sp, #0x90
  40b6c8:	stp	x24, x23, [sp, #96]
  40b6cc:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b6d0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b6d4:	add	x23, x23, #0x948
  40b6d8:	stp	x20, x19, [sp, #128]
  40b6dc:	mov	x20, x1
  40b6e0:	ldr	x1, [x8, #2456]
  40b6e4:	ldr	x8, [x23]
  40b6e8:	mov	x19, x0
  40b6ec:	stp	x29, x30, [sp, #48]
  40b6f0:	stp	x28, x27, [sp, #64]
  40b6f4:	cmp	x1, x8
  40b6f8:	stp	x26, x25, [sp, #80]
  40b6fc:	stp	x22, x21, [sp, #112]
  40b700:	add	x29, sp, #0x30
  40b704:	b.ls	40b724 <ferror@plt+0x8b74>  // b.plast
  40b708:	ldr	x8, [x23, #24]
  40b70c:	cmp	x1, x8
  40b710:	b.cs	40b724 <ferror@plt+0x8b74>  // b.hs, b.nlast
  40b714:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b718:	add	x8, x8, #0x950
  40b71c:	stp	x1, x1, [x8]
  40b720:	b	40b730 <ferror@plt+0x8b80>
  40b724:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b728:	add	x0, x0, #0x940
  40b72c:	bl	41674c <_obstack_free@@Base>
  40b730:	cmp	x20, #0x0
  40b734:	sub	x8, x29, #0x4
  40b738:	csel	x28, x8, x20, eq  // eq = none
  40b73c:	bl	40bfbc <ferror@plt+0x940c>
  40b740:	cmp	w0, #0x101
  40b744:	b.eq	40b774 <ferror@plt+0x8bc4>  // b.none
  40b748:	mov	w21, w0
  40b74c:	cmp	w0, #0x100
  40b750:	b.ne	40b79c <ferror@plt+0x8bec>  // b.any
  40b754:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b758:	ldr	x8, [x8, #2344]
  40b75c:	cbz	x8, 40b768 <ferror@plt+0x8bb8>
  40b760:	ldr	w9, [x8, #8]
  40b764:	cbz	w9, 40bd38 <ferror@plt+0x9188>
  40b768:	bl	40b258 <ferror@plt+0x86a8>
  40b76c:	mov	w22, wzr
  40b770:	b	40bf78 <ferror@plt+0x93c8>
  40b774:	mov	x0, x19
  40b778:	bl	40c070 <ferror@plt+0x94c0>
  40b77c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b780:	ldr	x8, [x8, #2344]
  40b784:	cbz	x8, 40b790 <ferror@plt+0x8be0>
  40b788:	ldr	w9, [x8, #8]
  40b78c:	cbz	w9, 40bd60 <ferror@plt+0x91b0>
  40b790:	bl	40b258 <ferror@plt+0x86a8>
  40b794:	mov	w22, #0x7                   	// #7
  40b798:	b	40bf78 <ferror@plt+0x93c8>
  40b79c:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b7a0:	ldr	x8, [x26, #2344]
  40b7a4:	cbz	x8, 40b7b0 <ferror@plt+0x8c00>
  40b7a8:	ldr	w9, [x8, #8]
  40b7ac:	cbz	w9, 40bd88 <ferror@plt+0x91d8>
  40b7b0:	bl	40b258 <ferror@plt+0x86a8>
  40b7b4:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b7b8:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b7bc:	ldr	w8, [x8, #3504]
  40b7c0:	ldr	x9, [x9, #3528]
  40b7c4:	adrp	x27, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b7c8:	add	x27, x27, #0x958
  40b7cc:	str	w8, [x28]
  40b7d0:	stur	x9, [x29, #-16]
  40b7d4:	cbz	w21, 40b924 <ferror@plt+0x8d74>
  40b7d8:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b7dc:	ldr	x0, [x20, #3536]
  40b7e0:	ldrb	w8, [x0]
  40b7e4:	cmp	w21, w8
  40b7e8:	b.ne	40b924 <ferror@plt+0x8d74>  // b.any
  40b7ec:	ldrb	w8, [x0, #1]!
  40b7f0:	cbz	w8, 40b800 <ferror@plt+0x8c50>
  40b7f4:	mov	w1, #0x1                   	// #1
  40b7f8:	bl	40c0bc <ferror@plt+0x950c>
  40b7fc:	tbz	w0, #0, 40b924 <ferror@plt+0x8d74>
  40b800:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b804:	ldp	x10, x9, [x27]
  40b808:	ldr	x22, [x8, #3544]
  40b80c:	mov	x25, x23
  40b810:	sub	x8, x9, x10
  40b814:	cmp	x8, x22
  40b818:	b.cs	40b82c <ferror@plt+0x8c7c>  // b.hs, b.nlast
  40b81c:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b820:	add	x0, x0, #0x940
  40b824:	mov	x1, x22
  40b828:	bl	41659c <_obstack_newchunk@@Base>
  40b82c:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b830:	ldr	x0, [x23, #2392]
  40b834:	ldr	x1, [x20, #3536]
  40b838:	mov	x2, x22
  40b83c:	bl	402510 <memcpy@plt>
  40b840:	ldr	x8, [x23, #2392]
  40b844:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b848:	adrp	x24, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b84c:	add	x21, x21, #0x940
  40b850:	add	x8, x8, x22
  40b854:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b858:	str	x8, [x23, #2392]
  40b85c:	b	40b870 <ferror@plt+0x8cc0>
  40b860:	ldr	x8, [x23, #2392]
  40b864:	add	x9, x8, #0x1
  40b868:	str	x9, [x23, #2392]
  40b86c:	strb	w22, [x8]
  40b870:	ldr	x8, [x26, #2344]
  40b874:	cbz	x8, 40b880 <ferror@plt+0x8cd0>
  40b878:	ldr	w9, [x8, #8]
  40b87c:	cbz	w9, 40b8d4 <ferror@plt+0x8d24>
  40b880:	bl	40b258 <ferror@plt+0x86a8>
  40b884:	mov	w22, w0
  40b888:	cmp	w22, #0x100
  40b88c:	b.eq	40b8fc <ferror@plt+0x8d4c>  // b.none
  40b890:	cbz	w22, 40b8b8 <ferror@plt+0x8d08>
  40b894:	ldr	x0, [x24, #3552]
  40b898:	ldrb	w8, [x0]
  40b89c:	cmp	w22, w8
  40b8a0:	b.ne	40b8b8 <ferror@plt+0x8d08>  // b.any
  40b8a4:	ldrb	w8, [x0, #1]!
  40b8a8:	cbz	w8, 40bdc8 <ferror@plt+0x9218>
  40b8ac:	mov	w1, #0x1                   	// #1
  40b8b0:	bl	40c0bc <ferror@plt+0x950c>
  40b8b4:	tbnz	w0, #0, 40bdc8 <ferror@plt+0x9218>
  40b8b8:	ldp	x9, x8, [x27]
  40b8bc:	cmp	x8, x9
  40b8c0:	b.ne	40b860 <ferror@plt+0x8cb0>  // b.any
  40b8c4:	mov	w1, #0x1                   	// #1
  40b8c8:	mov	x0, x21
  40b8cc:	bl	41659c <_obstack_newchunk@@Base>
  40b8d0:	b	40b860 <ferror@plt+0x8cb0>
  40b8d4:	ldr	x9, [x8, #32]
  40b8d8:	ldrb	w10, [x9]
  40b8dc:	cbz	w10, 40b880 <ferror@plt+0x8cd0>
  40b8e0:	ldrb	w10, [x20, #2336]
  40b8e4:	tbnz	w10, #0, 40b880 <ferror@plt+0x8cd0>
  40b8e8:	add	x10, x9, #0x1
  40b8ec:	str	x10, [x8, #32]
  40b8f0:	ldrb	w22, [x9]
  40b8f4:	cmp	w22, #0x100
  40b8f8:	b.ne	40b890 <ferror@plt+0x8ce0>  // b.any
  40b8fc:	ldr	w3, [x28]
  40b900:	ldur	x2, [x29, #-16]
  40b904:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x282c>
  40b908:	add	x4, x4, #0x8d7
  40b90c:	mov	w0, #0x1                   	// #1
  40b910:	mov	w1, wzr
  40b914:	mov	w22, #0x1                   	// #1
  40b918:	bl	402d68 <ferror@plt+0x1b8>
  40b91c:	mov	x23, x25
  40b920:	b	40bef4 <ferror@plt+0x9344>
  40b924:	bl	402950 <__ctype_b_loc@plt>
  40b928:	cmp	w21, #0x5f
  40b92c:	mov	x22, x0
  40b930:	b.eq	40bcec <ferror@plt+0x913c>  // b.none
  40b934:	ldr	x8, [x22]
  40b938:	ldrh	w8, [x8, w21, sxtw #1]
  40b93c:	tbnz	w8, #10, 40bcec <ferror@plt+0x913c>
  40b940:	cbz	w21, 40bdac <ferror@plt+0x91fc>
  40b944:	adrp	x25, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b948:	ldr	x0, [x25, #3512]
  40b94c:	ldrb	w8, [x0]
  40b950:	cmp	w21, w8
  40b954:	b.ne	40bdac <ferror@plt+0x91fc>  // b.any
  40b958:	ldrb	w8, [x0, #1]!
  40b95c:	cbz	w8, 40b96c <ferror@plt+0x8dbc>
  40b960:	mov	w1, #0x1                   	// #1
  40b964:	bl	40c0bc <ferror@plt+0x950c>
  40b968:	tbz	w0, #0, 40bdac <ferror@plt+0x91fc>
  40b96c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b970:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b974:	ldr	x8, [x8, #3520]
  40b978:	ldr	x9, [x9, #3576]
  40b97c:	str	x19, [sp, #8]
  40b980:	mov	w22, #0x1                   	// #1
  40b984:	cmp	x8, #0x1
  40b988:	cset	w8, eq  // eq = none
  40b98c:	cmp	x9, #0x1
  40b990:	cset	w9, eq  // eq = none
  40b994:	and	w8, w8, w9
  40b998:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40b99c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40b9a0:	eor	w23, w8, #0x1
  40b9a4:	str	w8, [sp, #20]
  40b9a8:	str	x28, [sp, #24]
  40b9ac:	b	40b9cc <ferror@plt+0x8e1c>
  40b9b0:	ldr	x9, [x20, #2392]
  40b9b4:	mov	w8, wzr
  40b9b8:	add	x10, x9, #0x1
  40b9bc:	str	x10, [x20, #2392]
  40b9c0:	strb	w21, [x9]
  40b9c4:	cmp	w8, #0x8
  40b9c8:	b.eq	40beac <ferror@plt+0x92fc>  // b.none
  40b9cc:	ldr	x8, [x26, #2344]
  40b9d0:	cbz	x8, 40b9dc <ferror@plt+0x8e2c>
  40b9d4:	ldr	w9, [x8, #8]
  40b9d8:	cbz	w9, 40b9e8 <ferror@plt+0x8e38>
  40b9dc:	mov	x24, xzr
  40b9e0:	cbnz	x24, 40b9f0 <ferror@plt+0x8e40>
  40b9e4:	b	40bac4 <ferror@plt+0x8f14>
  40b9e8:	ldr	x24, [x8, #32]
  40b9ec:	cbz	x24, 40bac4 <ferror@plt+0x8f14>
  40b9f0:	ldrb	w9, [x24]
  40b9f4:	cbz	w9, 40bac4 <ferror@plt+0x8f14>
  40b9f8:	ldr	x9, [x25, #3512]
  40b9fc:	ldr	x10, [x19, #3568]
  40ba00:	ldr	x19, [x8, #40]
  40ba04:	mov	x20, x27
  40ba08:	ldrb	w27, [x9]
  40ba0c:	ldrb	w28, [x10]
  40ba10:	sub	x25, x19, x24
  40ba14:	mov	x26, x24
  40ba18:	sub	x3, x19, x26
  40ba1c:	mov	x0, x26
  40ba20:	mov	w1, w27
  40ba24:	mov	w2, w28
  40ba28:	bl	412b4c <ferror@plt+0xff9c>
  40ba2c:	cmp	x0, #0x0
  40ba30:	cset	w8, eq  // eq = none
  40ba34:	mov	x26, x0
  40ba38:	orr	w8, w8, w23
  40ba3c:	tbnz	w8, #0, 40ba58 <ferror@plt+0x8ea8>
  40ba40:	ldrb	w8, [x26], #1
  40ba44:	cmp	w8, w28
  40ba48:	mov	w8, #0xffffffff            	// #-1
  40ba4c:	cneg	w8, w8, ne  // ne = any
  40ba50:	adds	w22, w8, w22
  40ba54:	b.ne	40ba18 <ferror@plt+0x8e68>  // b.any
  40ba58:	cbz	x26, 40badc <ferror@plt+0x8f2c>
  40ba5c:	ldr	x28, [sp, #24]
  40ba60:	ldr	w8, [sp, #20]
  40ba64:	mov	x27, x20
  40ba68:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40ba6c:	cbz	w8, 40bb58 <ferror@plt+0x8fa8>
  40ba70:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ba74:	cbnz	w22, 40bf9c <ferror@plt+0x93ec>
  40ba78:	ldp	x9, x8, [x27]
  40ba7c:	sub	x25, x26, x24
  40ba80:	sub	x26, x25, #0x1
  40ba84:	sub	x8, x8, x9
  40ba88:	cmp	x8, x26
  40ba8c:	b.cs	40baa0 <ferror@plt+0x8ef0>  // b.hs, b.nlast
  40ba90:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ba94:	add	x0, x0, #0x940
  40ba98:	mov	x1, x26
  40ba9c:	bl	41659c <_obstack_newchunk@@Base>
  40baa0:	ldr	x0, [x20, #2392]
  40baa4:	mov	x1, x24
  40baa8:	mov	x2, x26
  40baac:	bl	402510 <memcpy@plt>
  40bab0:	ldr	x8, [x20, #2392]
  40bab4:	add	x8, x8, x26
  40bab8:	str	x8, [x20, #2392]
  40babc:	mov	w8, #0x8                   	// #8
  40bac0:	b	40bba8 <ferror@plt+0x8ff8>
  40bac4:	cbz	x8, 40bad0 <ferror@plt+0x8f20>
  40bac8:	ldr	w9, [x8, #8]
  40bacc:	cbz	w9, 40bb30 <ferror@plt+0x8f80>
  40bad0:	bl	40b258 <ferror@plt+0x86a8>
  40bad4:	mov	w21, w0
  40bad8:	b	40bbc4 <ferror@plt+0x9014>
  40badc:	ldp	x9, x8, [x20]
  40bae0:	ldr	x28, [sp, #24]
  40bae4:	mov	x27, x20
  40bae8:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40baec:	sub	x8, x8, x9
  40baf0:	cmp	x8, x25
  40baf4:	b.cs	40bb08 <ferror@plt+0x8f58>  // b.hs, b.nlast
  40baf8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bafc:	add	x0, x0, #0x940
  40bb00:	mov	x1, x25
  40bb04:	bl	41659c <_obstack_newchunk@@Base>
  40bb08:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bb0c:	ldr	x0, [x20, #2392]
  40bb10:	mov	x1, x24
  40bb14:	mov	x2, x25
  40bb18:	bl	402510 <memcpy@plt>
  40bb1c:	ldr	x8, [x20, #2392]
  40bb20:	add	x8, x8, x25
  40bb24:	str	x8, [x20, #2392]
  40bb28:	mov	w8, #0x7                   	// #7
  40bb2c:	b	40bba8 <ferror@plt+0x8ff8>
  40bb30:	ldr	x9, [x8, #32]
  40bb34:	ldrb	w10, [x9]
  40bb38:	cbz	w10, 40bad0 <ferror@plt+0x8f20>
  40bb3c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bb40:	ldrb	w10, [x10, #2336]
  40bb44:	tbnz	w10, #0, 40bad0 <ferror@plt+0x8f20>
  40bb48:	add	x10, x9, #0x1
  40bb4c:	str	x10, [x8, #32]
  40bb50:	ldrb	w21, [x9]
  40bb54:	b	40bbc4 <ferror@plt+0x9014>
  40bb58:	ldp	x9, x8, [x27]
  40bb5c:	sub	x25, x26, x24
  40bb60:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bb64:	sub	x8, x8, x9
  40bb68:	cmp	x8, x25
  40bb6c:	b.cs	40bb80 <ferror@plt+0x8fd0>  // b.hs, b.nlast
  40bb70:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bb74:	add	x0, x0, #0x940
  40bb78:	mov	x1, x25
  40bb7c:	bl	41659c <_obstack_newchunk@@Base>
  40bb80:	ldr	x0, [x20, #2392]
  40bb84:	mov	x1, x24
  40bb88:	mov	x2, x25
  40bb8c:	bl	402510 <memcpy@plt>
  40bb90:	ldr	x9, [x20, #2392]
  40bb94:	mov	w8, wzr
  40bb98:	add	x9, x9, x25
  40bb9c:	str	x9, [x20, #2392]
  40bba0:	ldrb	w21, [x26]
  40bba4:	add	x25, x25, #0x1
  40bba8:	adrp	x26, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bbac:	ldr	x9, [x26, #2344]
  40bbb0:	ldr	x10, [x9, #32]
  40bbb4:	add	x10, x10, x25
  40bbb8:	adrp	x25, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40bbbc:	str	x10, [x9, #32]
  40bbc0:	cbnz	w8, 40b9c4 <ferror@plt+0x8e14>
  40bbc4:	cmp	w21, #0x100
  40bbc8:	b.ne	40bbe8 <ferror@plt+0x9038>  // b.any
  40bbcc:	ldr	w3, [x28]
  40bbd0:	ldur	x2, [x29, #-16]
  40bbd4:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x282c>
  40bbd8:	mov	w0, #0x1                   	// #1
  40bbdc:	mov	w1, wzr
  40bbe0:	add	x4, x4, #0x935
  40bbe4:	bl	402d68 <ferror@plt+0x1b8>
  40bbe8:	cbz	w21, 40bc4c <ferror@plt+0x909c>
  40bbec:	ldr	x0, [x19, #3568]
  40bbf0:	ldrb	w8, [x0]
  40bbf4:	cmp	w21, w8
  40bbf8:	b.ne	40bc4c <ferror@plt+0x909c>  // b.any
  40bbfc:	ldrb	w8, [x0, #1]!
  40bc00:	cbz	w8, 40bc10 <ferror@plt+0x9060>
  40bc04:	mov	w1, #0x1                   	// #1
  40bc08:	bl	40c0bc <ferror@plt+0x950c>
  40bc0c:	tbz	w0, #0, 40bc4c <ferror@plt+0x909c>
  40bc10:	subs	w22, w22, #0x1
  40bc14:	b.eq	40bce4 <ferror@plt+0x9134>  // b.none
  40bc18:	ldp	x9, x8, [x27]
  40bc1c:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40bc20:	ldr	x24, [x10, #3576]
  40bc24:	sub	x8, x8, x9
  40bc28:	cmp	x8, x24
  40bc2c:	b.cs	40bc40 <ferror@plt+0x9090>  // b.hs, b.nlast
  40bc30:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bc34:	add	x0, x0, #0x940
  40bc38:	mov	x1, x24
  40bc3c:	bl	41659c <_obstack_newchunk@@Base>
  40bc40:	ldr	x0, [x20, #2392]
  40bc44:	ldr	x1, [x19, #3568]
  40bc48:	b	40bca8 <ferror@plt+0x90f8>
  40bc4c:	cbz	w21, 40bcc4 <ferror@plt+0x9114>
  40bc50:	ldr	x0, [x25, #3512]
  40bc54:	ldrb	w8, [x0]
  40bc58:	cmp	w21, w8
  40bc5c:	b.ne	40bcc4 <ferror@plt+0x9114>  // b.any
  40bc60:	ldrb	w8, [x0, #1]!
  40bc64:	cbz	w8, 40bc74 <ferror@plt+0x90c4>
  40bc68:	mov	w1, #0x1                   	// #1
  40bc6c:	bl	40c0bc <ferror@plt+0x950c>
  40bc70:	tbz	w0, #0, 40bcc4 <ferror@plt+0x9114>
  40bc74:	ldp	x9, x8, [x27]
  40bc78:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40bc7c:	ldr	x24, [x10, #3520]
  40bc80:	add	w22, w22, #0x1
  40bc84:	sub	x8, x8, x9
  40bc88:	cmp	x8, x24
  40bc8c:	b.cs	40bca0 <ferror@plt+0x90f0>  // b.hs, b.nlast
  40bc90:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bc94:	add	x0, x0, #0x940
  40bc98:	mov	x1, x24
  40bc9c:	bl	41659c <_obstack_newchunk@@Base>
  40bca0:	ldr	x0, [x20, #2392]
  40bca4:	ldr	x1, [x25, #3512]
  40bca8:	mov	x2, x24
  40bcac:	bl	402510 <memcpy@plt>
  40bcb0:	ldr	x9, [x20, #2392]
  40bcb4:	mov	w8, wzr
  40bcb8:	add	x9, x9, x24
  40bcbc:	str	x9, [x20, #2392]
  40bcc0:	b	40b9c4 <ferror@plt+0x8e14>
  40bcc4:	ldp	x9, x8, [x27]
  40bcc8:	cmp	x8, x9
  40bccc:	b.ne	40b9b0 <ferror@plt+0x8e00>  // b.any
  40bcd0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bcd4:	mov	w1, #0x1                   	// #1
  40bcd8:	add	x0, x0, #0x940
  40bcdc:	bl	41659c <_obstack_newchunk@@Base>
  40bce0:	b	40b9b0 <ferror@plt+0x8e00>
  40bce4:	mov	w8, #0x8                   	// #8
  40bce8:	b	40b9c4 <ferror@plt+0x8e14>
  40bcec:	ldp	x9, x8, [x27]
  40bcf0:	mov	x25, x23
  40bcf4:	cmp	x8, x9
  40bcf8:	b.ne	40bd0c <ferror@plt+0x915c>  // b.any
  40bcfc:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bd00:	add	x0, x0, #0x940
  40bd04:	mov	w1, #0x1                   	// #1
  40bd08:	bl	41659c <_obstack_newchunk@@Base>
  40bd0c:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bd10:	ldr	x8, [x23, #2392]
  40bd14:	add	x9, x8, #0x1
  40bd18:	str	x9, [x23, #2392]
  40bd1c:	strb	w21, [x8]
  40bd20:	bl	40bfbc <ferror@plt+0x940c>
  40bd24:	cmp	w0, #0x100
  40bd28:	b.ne	40be18 <ferror@plt+0x9268>  // b.any
  40bd2c:	mov	w22, #0x2                   	// #2
  40bd30:	mov	x23, x25
  40bd34:	b	40bef4 <ferror@plt+0x9344>
  40bd38:	ldr	x9, [x8, #32]
  40bd3c:	ldrb	w10, [x9]
  40bd40:	cbz	w10, 40b768 <ferror@plt+0x8bb8>
  40bd44:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bd48:	ldrb	w10, [x10, #2336]
  40bd4c:	tbnz	w10, #0, 40b768 <ferror@plt+0x8bb8>
  40bd50:	add	x9, x9, #0x1
  40bd54:	mov	w22, wzr
  40bd58:	str	x9, [x8, #32]
  40bd5c:	b	40bf78 <ferror@plt+0x93c8>
  40bd60:	ldr	x9, [x8, #32]
  40bd64:	ldrb	w10, [x9]
  40bd68:	cbz	w10, 40b790 <ferror@plt+0x8be0>
  40bd6c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bd70:	ldrb	w10, [x10, #2336]
  40bd74:	tbnz	w10, #0, 40b790 <ferror@plt+0x8be0>
  40bd78:	add	x9, x9, #0x1
  40bd7c:	str	x9, [x8, #32]
  40bd80:	mov	w22, #0x7                   	// #7
  40bd84:	b	40bf78 <ferror@plt+0x93c8>
  40bd88:	ldr	x9, [x8, #32]
  40bd8c:	ldrb	w10, [x9]
  40bd90:	cbz	w10, 40b7b0 <ferror@plt+0x8c00>
  40bd94:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bd98:	ldrb	w10, [x10, #2336]
  40bd9c:	tbnz	w10, #0, 40b7b0 <ferror@plt+0x8c00>
  40bda0:	add	x9, x9, #0x1
  40bda4:	str	x9, [x8, #32]
  40bda8:	b	40b7b4 <ferror@plt+0x8c04>
  40bdac:	sub	w8, w21, #0x28
  40bdb0:	cmp	w8, #0x4
  40bdb4:	b.hi	40bec0 <ferror@plt+0x9310>  // b.pmore
  40bdb8:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  40bdbc:	add	x9, x9, #0xa68
  40bdc0:	ldr	w22, [x9, w8, sxtw #2]
  40bdc4:	b	40bec4 <ferror@plt+0x9314>
  40bdc8:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40bdcc:	ldp	x10, x9, [x27]
  40bdd0:	ldr	x20, [x8, #3560]
  40bdd4:	sub	x8, x9, x10
  40bdd8:	cmp	x8, x20
  40bddc:	b.cs	40bdf0 <ferror@plt+0x9240>  // b.hs, b.nlast
  40bde0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bde4:	add	x0, x0, #0x940
  40bde8:	mov	x1, x20
  40bdec:	bl	41659c <_obstack_newchunk@@Base>
  40bdf0:	ldr	x0, [x23, #2392]
  40bdf4:	ldr	x1, [x24, #3552]
  40bdf8:	mov	x2, x20
  40bdfc:	bl	402510 <memcpy@plt>
  40be00:	ldr	x8, [x23, #2392]
  40be04:	mov	w22, #0x1                   	// #1
  40be08:	add	x8, x8, x20
  40be0c:	str	x8, [x23, #2392]
  40be10:	mov	x23, x25
  40be14:	b	40bef4 <ferror@plt+0x9344>
  40be18:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40be1c:	mov	w21, w0
  40be20:	add	x20, x20, #0x940
  40be24:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40be28:	cmp	w21, #0x5f
  40be2c:	b.eq	40be3c <ferror@plt+0x928c>  // b.none
  40be30:	ldr	x8, [x22]
  40be34:	ldrh	w8, [x8, w21, sxtw #1]
  40be38:	tbz	w8, #3, 40bd2c <ferror@plt+0x917c>
  40be3c:	ldp	x9, x8, [x27]
  40be40:	cmp	x8, x9
  40be44:	b.ne	40be54 <ferror@plt+0x92a4>  // b.any
  40be48:	mov	w1, #0x1                   	// #1
  40be4c:	mov	x0, x20
  40be50:	bl	41659c <_obstack_newchunk@@Base>
  40be54:	ldr	x8, [x23, #2392]
  40be58:	add	x9, x8, #0x1
  40be5c:	str	x9, [x23, #2392]
  40be60:	strb	w21, [x8]
  40be64:	ldr	x8, [x26, #2344]
  40be68:	cbz	x8, 40be74 <ferror@plt+0x92c4>
  40be6c:	ldr	w9, [x8, #8]
  40be70:	cbz	w9, 40be8c <ferror@plt+0x92dc>
  40be74:	bl	40b258 <ferror@plt+0x86a8>
  40be78:	bl	40bfbc <ferror@plt+0x940c>
  40be7c:	mov	w21, w0
  40be80:	cmp	w0, #0x100
  40be84:	b.ne	40be28 <ferror@plt+0x9278>  // b.any
  40be88:	b	40bd2c <ferror@plt+0x917c>
  40be8c:	ldr	x9, [x8, #32]
  40be90:	ldrb	w10, [x9]
  40be94:	cbz	w10, 40be74 <ferror@plt+0x92c4>
  40be98:	ldrb	w10, [x24, #2336]
  40be9c:	tbnz	w10, #0, 40be74 <ferror@plt+0x92c4>
  40bea0:	add	x9, x9, #0x1
  40bea4:	str	x9, [x8, #32]
  40bea8:	b	40be78 <ferror@plt+0x92c8>
  40beac:	ldr	x19, [sp, #8]
  40beb0:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40beb4:	mov	w22, #0x1                   	// #1
  40beb8:	add	x23, x23, #0x948
  40bebc:	b	40bef4 <ferror@plt+0x9344>
  40bec0:	mov	w22, #0x6                   	// #6
  40bec4:	ldp	x9, x8, [x27]
  40bec8:	cmp	x8, x9
  40becc:	b.ne	40bee0 <ferror@plt+0x9330>  // b.any
  40bed0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bed4:	add	x0, x0, #0x940
  40bed8:	mov	w1, #0x1                   	// #1
  40bedc:	bl	41659c <_obstack_newchunk@@Base>
  40bee0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bee4:	ldr	x9, [x8, #2392]
  40bee8:	add	x10, x9, #0x1
  40beec:	str	x10, [x8, #2392]
  40bef0:	strb	w21, [x9]
  40bef4:	ldp	x9, x8, [x27]
  40bef8:	cmp	x8, x9
  40befc:	b.ne	40bf10 <ferror@plt+0x9360>  // b.any
  40bf00:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bf04:	add	x0, x0, #0x940
  40bf08:	mov	w1, #0x1                   	// #1
  40bf0c:	bl	41659c <_obstack_newchunk@@Base>
  40bf10:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bf14:	add	x9, x9, #0x950
  40bf18:	ldr	x8, [x9, #8]
  40bf1c:	mov	w10, #0x1                   	// #1
  40bf20:	add	x11, x8, #0x1
  40bf24:	str	x11, [x9, #8]
  40bf28:	strb	wzr, [x8]
  40bf2c:	str	w10, [x19]
  40bf30:	ldp	x8, x9, [x9]
  40bf34:	cmp	x9, x8
  40bf38:	b.ne	40bf4c <ferror@plt+0x939c>  // b.any
  40bf3c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bf40:	ldrb	w10, [x9, #2448]
  40bf44:	orr	w10, w10, #0x2
  40bf48:	strb	w10, [x9, #2448]
  40bf4c:	ldr	x9, [x23, #40]
  40bf50:	ldp	x11, x12, [x23, #16]
  40bf54:	ldr	x10, [x23]
  40bf58:	add	x11, x9, x11
  40bf5c:	bic	x9, x11, x9
  40bf60:	sub	x13, x12, x10
  40bf64:	sub	x10, x9, x10
  40bf68:	cmp	x10, x13
  40bf6c:	csel	x9, x12, x9, hi  // hi = pmore
  40bf70:	stp	x9, x9, [x23, #8]
  40bf74:	str	x8, [x19, #8]
  40bf78:	mov	w0, w22
  40bf7c:	ldp	x20, x19, [sp, #128]
  40bf80:	ldp	x22, x21, [sp, #112]
  40bf84:	ldp	x24, x23, [sp, #96]
  40bf88:	ldp	x26, x25, [sp, #80]
  40bf8c:	ldp	x28, x27, [sp, #64]
  40bf90:	ldp	x29, x30, [sp, #48]
  40bf94:	add	sp, sp, #0x90
  40bf98:	ret
  40bf9c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40bfa0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40bfa4:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  40bfa8:	add	x0, x0, #0x8f5
  40bfac:	add	x1, x1, #0x902
  40bfb0:	add	x3, x3, #0x90a
  40bfb4:	mov	w2, #0x3cd                 	// #973
  40bfb8:	bl	402b20 <__assert_fail@plt>
  40bfbc:	stp	x29, x30, [sp, #-32]!
  40bfc0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40bfc4:	stp	x20, x19, [sp, #16]
  40bfc8:	ldr	x20, [x8, #2344]
  40bfcc:	mov	x29, sp
  40bfd0:	cbz	x20, 40c028 <ferror@plt+0x9478>
  40bfd4:	ldr	w8, [x20, #8]
  40bfd8:	cmp	w8, #0x2
  40bfdc:	b.eq	40c030 <ferror@plt+0x9480>  // b.none
  40bfe0:	cmp	w8, #0x1
  40bfe4:	b.eq	40c004 <ferror@plt+0x9454>  // b.none
  40bfe8:	cbnz	w8, 40c054 <ferror@plt+0x94a4>
  40bfec:	ldr	x8, [x20, #32]
  40bff0:	ldrb	w19, [x8]
  40bff4:	cbnz	w19, 40c034 <ferror@plt+0x9484>
  40bff8:	ldr	x20, [x20]
  40bffc:	cbnz	x20, 40bfd4 <ferror@plt+0x9424>
  40c000:	b	40c028 <ferror@plt+0x9478>
  40c004:	ldr	x0, [x20, #32]
  40c008:	bl	402830 <getc@plt>
  40c00c:	cmn	w0, #0x1
  40c010:	b.ne	40c044 <ferror@plt+0x9494>  // b.any
  40c014:	ldrb	w8, [x20, #40]
  40c018:	orr	w8, w8, #0x1
  40c01c:	strb	w8, [x20, #40]
  40c020:	ldr	x20, [x20]
  40c024:	cbnz	x20, 40bfd4 <ferror@plt+0x9424>
  40c028:	mov	w19, #0x100                 	// #256
  40c02c:	b	40c034 <ferror@plt+0x9484>
  40c030:	mov	w19, #0x101                 	// #257
  40c034:	mov	w0, w19
  40c038:	ldp	x20, x19, [sp, #16]
  40c03c:	ldp	x29, x30, [sp], #32
  40c040:	ret
  40c044:	ldr	x1, [x20, #32]
  40c048:	mov	w19, w0
  40c04c:	bl	4029b0 <ungetc@plt>
  40c050:	b	40c034 <ferror@plt+0x9484>
  40c054:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c058:	ldr	w0, [x8, #1224]
  40c05c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c060:	add	x2, x2, #0xa02
  40c064:	mov	w1, wzr
  40c068:	bl	402cbc <ferror@plt+0x10c>
  40c06c:	bl	4028d0 <abort@plt>
  40c070:	stp	x29, x30, [sp, #-16]!
  40c074:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c078:	ldr	x8, [x8, #2344]
  40c07c:	mov	x29, sp
  40c080:	ldr	w9, [x8, #8]
  40c084:	cmp	w9, #0x2
  40c088:	b.ne	40c0a0 <ferror@plt+0x94f0>  // b.any
  40c08c:	str	w9, [x0]
  40c090:	ldr	x8, [x8, #32]
  40c094:	str	x8, [x0, #8]
  40c098:	ldp	x29, x30, [sp], #16
  40c09c:	ret
  40c0a0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c0a4:	ldr	w0, [x8, #1224]
  40c0a8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c0ac:	add	x2, x2, #0xa35
  40c0b0:	mov	w1, wzr
  40c0b4:	bl	402cbc <ferror@plt+0x10c>
  40c0b8:	bl	4028d0 <abort@plt>
  40c0bc:	stp	x29, x30, [sp, #-64]!
  40c0c0:	stp	x24, x23, [sp, #16]
  40c0c4:	stp	x22, x21, [sp, #32]
  40c0c8:	stp	x20, x19, [sp, #48]
  40c0cc:	mov	x29, sp
  40c0d0:	mov	w20, w1
  40c0d4:	mov	x19, x0
  40c0d8:	bl	40bfbc <ferror@plt+0x940c>
  40c0dc:	ldrb	w8, [x19]
  40c0e0:	cmp	w0, w8
  40c0e4:	b.ne	40c168 <ferror@plt+0x95b8>  // b.any
  40c0e8:	ldrb	w8, [x19, #1]
  40c0ec:	cbz	w8, 40c170 <ferror@plt+0x95c0>
  40c0f0:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c0f4:	ldr	x8, [x21, #2344]
  40c0f8:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c0fc:	cbz	x8, 40c108 <ferror@plt+0x9558>
  40c100:	ldr	w9, [x8, #8]
  40c104:	cbz	w9, 40c214 <ferror@plt+0x9664>
  40c108:	bl	40b258 <ferror@plt+0x86a8>
  40c10c:	mov	x23, xzr
  40c110:	add	x24, x19, x23
  40c114:	bl	40bfbc <ferror@plt+0x940c>
  40c118:	ldrb	w8, [x24, #1]
  40c11c:	cmp	w0, w8
  40c120:	b.ne	40c194 <ferror@plt+0x95e4>  // b.any
  40c124:	ldr	x8, [x21, #2344]
  40c128:	cbz	x8, 40c134 <ferror@plt+0x9584>
  40c12c:	ldr	w9, [x8, #8]
  40c130:	cbz	w9, 40c148 <ferror@plt+0x9598>
  40c134:	bl	40b258 <ferror@plt+0x86a8>
  40c138:	ldrb	w8, [x24, #2]
  40c13c:	add	x23, x23, #0x1
  40c140:	cbnz	w8, 40c110 <ferror@plt+0x9560>
  40c144:	b	40c1a0 <ferror@plt+0x95f0>
  40c148:	ldr	x9, [x8, #32]
  40c14c:	ldrb	w10, [x9]
  40c150:	cbz	w10, 40c134 <ferror@plt+0x9584>
  40c154:	ldrb	w10, [x22, #2336]
  40c158:	tbnz	w10, #0, 40c134 <ferror@plt+0x9584>
  40c15c:	add	x9, x9, #0x1
  40c160:	str	x9, [x8, #32]
  40c164:	b	40c138 <ferror@plt+0x9588>
  40c168:	mov	w20, wzr
  40c16c:	b	40c1fc <ferror@plt+0x964c>
  40c170:	tbz	w20, #0, 40c1a4 <ferror@plt+0x95f4>
  40c174:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c178:	ldr	x8, [x8, #2344]
  40c17c:	cbz	x8, 40c188 <ferror@plt+0x95d8>
  40c180:	ldr	w9, [x8, #8]
  40c184:	cbz	w9, 40c234 <ferror@plt+0x9684>
  40c188:	bl	40b258 <ferror@plt+0x86a8>
  40c18c:	mov	w20, #0x1                   	// #1
  40c190:	b	40c1fc <ferror@plt+0x964c>
  40c194:	mov	w20, wzr
  40c198:	add	w22, w23, #0x1
  40c19c:	b	40c1b4 <ferror@plt+0x9604>
  40c1a0:	tbz	w20, #0, 40c1ac <ferror@plt+0x95fc>
  40c1a4:	mov	w20, #0x1                   	// #1
  40c1a8:	b	40c1fc <ferror@plt+0x964c>
  40c1ac:	add	x22, x23, #0x1
  40c1b0:	mov	w20, #0x1                   	// #1
  40c1b4:	bl	40ad28 <ferror@plt+0x8178>
  40c1b8:	ldp	x9, x8, [x0, #24]
  40c1bc:	sxtw	x22, w22
  40c1c0:	mov	x21, x0
  40c1c4:	sub	x8, x8, x9
  40c1c8:	cmp	x8, x22
  40c1cc:	b.cs	40c1dc <ferror@plt+0x962c>  // b.hs, b.nlast
  40c1d0:	mov	x0, x21
  40c1d4:	mov	x1, x22
  40c1d8:	bl	41659c <_obstack_newchunk@@Base>
  40c1dc:	ldr	x0, [x21, #24]
  40c1e0:	mov	x1, x19
  40c1e4:	mov	x2, x22
  40c1e8:	bl	402510 <memcpy@plt>
  40c1ec:	ldr	x8, [x21, #24]
  40c1f0:	add	x8, x8, x22
  40c1f4:	str	x8, [x21, #24]
  40c1f8:	bl	40ae10 <ferror@plt+0x8260>
  40c1fc:	mov	w0, w20
  40c200:	ldp	x20, x19, [sp, #48]
  40c204:	ldp	x22, x21, [sp, #32]
  40c208:	ldp	x24, x23, [sp, #16]
  40c20c:	ldp	x29, x30, [sp], #64
  40c210:	ret
  40c214:	ldr	x9, [x8, #32]
  40c218:	ldrb	w10, [x9]
  40c21c:	cbz	w10, 40c108 <ferror@plt+0x9558>
  40c220:	ldrb	w10, [x22, #2336]
  40c224:	tbnz	w10, #0, 40c108 <ferror@plt+0x9558>
  40c228:	add	x9, x9, #0x1
  40c22c:	str	x9, [x8, #32]
  40c230:	b	40c10c <ferror@plt+0x955c>
  40c234:	ldr	x9, [x8, #32]
  40c238:	ldrb	w10, [x9]
  40c23c:	cbz	w10, 40c188 <ferror@plt+0x95d8>
  40c240:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c244:	ldrb	w10, [x10, #2336]
  40c248:	tbnz	w10, #0, 40c188 <ferror@plt+0x95d8>
  40c24c:	add	x9, x9, #0x1
  40c250:	str	x9, [x8, #32]
  40c254:	mov	w20, #0x1                   	// #1
  40c258:	b	40c1fc <ferror@plt+0x964c>
  40c25c:	stp	x29, x30, [sp, #-32]!
  40c260:	str	x19, [sp, #16]
  40c264:	mov	x29, sp
  40c268:	bl	40bfbc <ferror@plt+0x940c>
  40c26c:	cmp	w0, #0x100
  40c270:	b.eq	40c288 <ferror@plt+0x96d8>  // b.none
  40c274:	mov	w19, w0
  40c278:	cmp	w0, #0x101
  40c27c:	b.ne	40c290 <ferror@plt+0x96e0>  // b.any
  40c280:	mov	w0, #0x7                   	// #7
  40c284:	b	40c30c <ferror@plt+0x975c>
  40c288:	mov	w0, wzr
  40c28c:	b	40c30c <ferror@plt+0x975c>
  40c290:	cbz	w19, 40c2bc <ferror@plt+0x970c>
  40c294:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40c298:	ldr	x0, [x8, #3536]
  40c29c:	ldrb	w8, [x0]
  40c2a0:	cmp	w19, w8
  40c2a4:	b.ne	40c2bc <ferror@plt+0x970c>  // b.any
  40c2a8:	ldrb	w8, [x0, #1]
  40c2ac:	cbz	w8, 40c308 <ferror@plt+0x9758>
  40c2b0:	mov	w1, wzr
  40c2b4:	bl	40c0bc <ferror@plt+0x950c>
  40c2b8:	tbnz	w0, #0, 40c308 <ferror@plt+0x9758>
  40c2bc:	bl	402950 <__ctype_b_loc@plt>
  40c2c0:	mov	x8, x0
  40c2c4:	cmp	w19, #0x5f
  40c2c8:	mov	w0, #0x2                   	// #2
  40c2cc:	b.eq	40c30c <ferror@plt+0x975c>  // b.none
  40c2d0:	ldr	x8, [x8]
  40c2d4:	ldrh	w8, [x8, w19, sxtw #1]
  40c2d8:	tbnz	w8, #10, 40c30c <ferror@plt+0x975c>
  40c2dc:	cbz	w19, 40c318 <ferror@plt+0x9768>
  40c2e0:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40c2e4:	ldr	x0, [x8, #3512]
  40c2e8:	ldrb	w8, [x0]
  40c2ec:	cmp	w19, w8
  40c2f0:	b.ne	40c318 <ferror@plt+0x9768>  // b.any
  40c2f4:	ldrb	w8, [x0, #1]
  40c2f8:	cbz	w8, 40c308 <ferror@plt+0x9758>
  40c2fc:	mov	w1, wzr
  40c300:	bl	40c0bc <ferror@plt+0x950c>
  40c304:	tbz	w0, #0, 40c318 <ferror@plt+0x9768>
  40c308:	mov	w0, #0x1                   	// #1
  40c30c:	ldr	x19, [sp, #16]
  40c310:	ldp	x29, x30, [sp], #32
  40c314:	ret
  40c318:	sub	w8, w19, #0x28
  40c31c:	cmp	w8, #0x4
  40c320:	b.hi	40c334 <ferror@plt+0x9784>  // b.pmore
  40c324:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  40c328:	add	x9, x9, #0xa7c
  40c32c:	ldr	w0, [x9, w8, sxtw #2]
  40c330:	b	40c30c <ferror@plt+0x975c>
  40c334:	mov	w0, #0x6                   	// #6
  40c338:	b	40c30c <ferror@plt+0x975c>
  40c33c:	stp	x29, x30, [sp, #-48]!
  40c340:	stp	x20, x19, [sp, #32]
  40c344:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c348:	ldr	x9, [x20, #2344]
  40c34c:	stp	x22, x21, [sp, #16]
  40c350:	mov	x29, sp
  40c354:	ldr	w8, [x9, #8]
  40c358:	ldr	x21, [x9]
  40c35c:	cmp	w8, #0x0
  40c360:	ccmp	w8, #0x2, #0x4, ne  // ne = any
  40c364:	b.eq	40c458 <ferror@plt+0x98a8>  // b.none
  40c368:	cmp	w8, #0x1
  40c36c:	b.ne	40c4d4 <ferror@plt+0x9924>  // b.any
  40c370:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c374:	ldrb	w8, [x8, #1205]
  40c378:	tbz	w8, #0, 40c3d0 <ferror@plt+0x9820>
  40c37c:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c380:	ldr	x8, [x19, #2120]
  40c384:	cbz	x21, 40c3ac <ferror@plt+0x97fc>
  40c388:	cbz	x8, 40c3d0 <ferror@plt+0x9820>
  40c38c:	bl	407dec <ferror@plt+0x523c>
  40c390:	ldr	x0, [x19, #2120]
  40c394:	ldr	x2, [x21, #16]
  40c398:	ldr	w3, [x21, #24]
  40c39c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40c3a0:	add	x1, x1, #0x984
  40c3a4:	bl	415cfc <ferror@plt+0x1314c>
  40c3a8:	b	40c3c4 <ferror@plt+0x9814>
  40c3ac:	cbz	x8, 40c3d0 <ferror@plt+0x9820>
  40c3b0:	bl	407dec <ferror@plt+0x523c>
  40c3b4:	ldr	x0, [x19, #2120]
  40c3b8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40c3bc:	add	x1, x1, #0x9a2
  40c3c0:	bl	415cfc <ferror@plt+0x1314c>
  40c3c4:	ldr	x1, [x19, #2120]
  40c3c8:	mov	w0, #0xa                   	// #10
  40c3cc:	bl	402600 <putc@plt>
  40c3d0:	ldr	x22, [x20, #2344]
  40c3d4:	ldr	x19, [x22, #32]
  40c3d8:	mov	x0, x19
  40c3dc:	bl	402bb0 <ferror@plt>
  40c3e0:	cbz	w0, 40c420 <ferror@plt+0x9870>
  40c3e4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c3e8:	ldr	w0, [x8, #1224]
  40c3ec:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c3f0:	add	x2, x2, #0x9b2
  40c3f4:	mov	w1, wzr
  40c3f8:	bl	402cbc <ferror@plt+0x10c>
  40c3fc:	ldr	x8, [x20, #2344]
  40c400:	ldrb	w9, [x8, #40]
  40c404:	tbz	w9, #1, 40c410 <ferror@plt+0x9860>
  40c408:	ldr	x0, [x8, #32]
  40c40c:	bl	4160c0 <ferror@plt+0x13510>
  40c410:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40c414:	mov	w9, #0x1                   	// #1
  40c418:	str	w9, [x8, #3496]
  40c41c:	b	40c438 <ferror@plt+0x9888>
  40c420:	ldrb	w8, [x22, #40]
  40c424:	tbz	w8, #1, 40c438 <ferror@plt+0x9888>
  40c428:	mov	x0, x19
  40c42c:	bl	4160c0 <ferror@plt+0x13510>
  40c430:	cmn	w0, #0x1
  40c434:	b.eq	40c4b0 <ferror@plt+0x9900>  // b.none
  40c438:	ldr	x8, [x20, #2344]
  40c43c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c440:	adrp	x10, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40c444:	mov	w11, #0xffffffff            	// #-1
  40c448:	ldrb	w8, [x8, #40]
  40c44c:	str	w11, [x10, #3584]
  40c450:	ubfx	w8, w8, #2, #1
  40c454:	strb	w8, [x9, #2340]
  40c458:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c45c:	ldr	x0, [x8, #2240]
  40c460:	ldr	x1, [x20, #2344]
  40c464:	ldr	x8, [x0, #8]
  40c468:	cmp	x1, x8
  40c46c:	b.ls	40c484 <ferror@plt+0x98d4>  // b.plast
  40c470:	ldr	x8, [x0, #32]
  40c474:	cmp	x1, x8
  40c478:	b.cs	40c484 <ferror@plt+0x98d4>  // b.hs, b.nlast
  40c47c:	stp	x1, x1, [x0, #16]
  40c480:	b	40c488 <ferror@plt+0x98d8>
  40c484:	bl	41674c <_obstack_free@@Base>
  40c488:	str	x21, [x20, #2344]
  40c48c:	ldp	x20, x19, [sp, #32]
  40c490:	ldp	x22, x21, [sp, #16]
  40c494:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c498:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c49c:	mov	w10, #0x1                   	// #1
  40c4a0:	str	xzr, [x8, #2232]
  40c4a4:	strb	w10, [x9, #2336]
  40c4a8:	ldp	x29, x30, [sp], #48
  40c4ac:	ret
  40c4b0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c4b4:	ldr	w19, [x8, #1224]
  40c4b8:	bl	402b30 <__errno_location@plt>
  40c4bc:	ldr	w1, [x0]
  40c4c0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c4c4:	add	x2, x2, #0x9bd
  40c4c8:	mov	w0, w19
  40c4cc:	bl	402cbc <ferror@plt+0x10c>
  40c4d0:	b	40c410 <ferror@plt+0x9860>
  40c4d4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c4d8:	ldr	w0, [x8, #1224]
  40c4dc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c4e0:	add	x2, x2, #0x9d0
  40c4e4:	mov	w1, wzr
  40c4e8:	bl	402cbc <ferror@plt+0x10c>
  40c4ec:	bl	4028d0 <abort@plt>
  40c4f0:	sub	sp, sp, #0x40
  40c4f4:	stp	x20, x19, [sp, #48]
  40c4f8:	adrp	x19, 415000 <ferror@plt+0x12450>
  40c4fc:	adrp	x20, 402000 <mbrtowc@plt-0x500>
  40c500:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c504:	add	x19, x19, #0x7d0
  40c508:	add	x20, x20, #0x9a0
  40c50c:	add	x0, x0, #0x9a8
  40c510:	mov	x1, xzr
  40c514:	mov	x2, xzr
  40c518:	mov	x3, x19
  40c51c:	mov	x4, x20
  40c520:	stp	x29, x30, [sp, #32]
  40c524:	add	x29, sp, #0x20
  40c528:	bl	4164b4 <_obstack_begin@@Base>
  40c52c:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c530:	add	x0, x0, #0xa00
  40c534:	mov	x1, xzr
  40c538:	mov	x2, xzr
  40c53c:	mov	x3, x19
  40c540:	mov	x4, x20
  40c544:	bl	4164b4 <_obstack_begin@@Base>
  40c548:	add	x0, sp, #0x10
  40c54c:	add	x1, sp, #0xc
  40c550:	bl	40b6c4 <ferror@plt+0x8b14>
  40c554:	cbz	w0, 40c580 <ferror@plt+0x99d0>
  40c558:	mov	w1, w0
  40c55c:	ldr	w3, [sp, #12]
  40c560:	add	x2, sp, #0x10
  40c564:	mov	x0, xzr
  40c568:	bl	40c5b0 <ferror@plt+0x9a00>
  40c56c:	add	x0, sp, #0x10
  40c570:	add	x1, sp, #0xc
  40c574:	bl	40b6c4 <ferror@plt+0x8b14>
  40c578:	mov	w1, w0
  40c57c:	cbnz	w0, 40c55c <ferror@plt+0x99ac>
  40c580:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c584:	add	x0, x0, #0x9a8
  40c588:	mov	x1, xzr
  40c58c:	bl	41674c <_obstack_free@@Base>
  40c590:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c594:	add	x0, x0, #0xa00
  40c598:	mov	x1, xzr
  40c59c:	bl	41674c <_obstack_free@@Base>
  40c5a0:	ldp	x20, x19, [sp, #48]
  40c5a4:	ldp	x29, x30, [sp, #32]
  40c5a8:	add	sp, sp, #0x40
  40c5ac:	ret
  40c5b0:	stp	x29, x30, [sp, #-48]!
  40c5b4:	cmp	w1, #0x7
  40c5b8:	stp	x22, x21, [sp, #16]
  40c5bc:	stp	x20, x19, [sp, #32]
  40c5c0:	mov	x29, sp
  40c5c4:	b.hi	40c66c <ferror@plt+0x9abc>  // b.pmore
  40c5c8:	mov	w8, #0x1                   	// #1
  40c5cc:	lsl	w8, w8, w1
  40c5d0:	mov	w9, #0x7a                  	// #122
  40c5d4:	mov	w19, w3
  40c5d8:	mov	x21, x2
  40c5dc:	mov	x20, x0
  40c5e0:	tst	w8, w9
  40c5e4:	b.eq	40c60c <ferror@plt+0x9a5c>  // b.none
  40c5e8:	ldr	x21, [x21, #8]
  40c5ec:	mov	x0, x21
  40c5f0:	bl	402540 <strlen@plt>
  40c5f4:	mov	x2, x0
  40c5f8:	mov	x0, x20
  40c5fc:	mov	x1, x21
  40c600:	mov	w3, w19
  40c604:	bl	40d208 <ferror@plt+0xa658>
  40c608:	b	40c618 <ferror@plt+0x9a68>
  40c60c:	mov	w9, #0x81                  	// #129
  40c610:	tst	w8, w9
  40c614:	b.eq	40c628 <ferror@plt+0x9a78>  // b.none
  40c618:	ldp	x20, x19, [sp, #32]
  40c61c:	ldp	x22, x21, [sp, #16]
  40c620:	ldp	x29, x30, [sp], #48
  40c624:	ret
  40c628:	ldr	x0, [x21, #8]
  40c62c:	mov	w1, wzr
  40c630:	bl	40ec68 <ferror@plt+0xc0b8>
  40c634:	cbz	x0, 40c5e8 <ferror@plt+0x9a38>
  40c638:	ldr	w8, [x0, #24]
  40c63c:	mov	x22, x0
  40c640:	cbz	w8, 40c5e8 <ferror@plt+0x9a38>
  40c644:	cmp	w8, #0x2
  40c648:	b.ne	40c660 <ferror@plt+0x9ab0>  // b.any
  40c64c:	ldrb	w8, [x22, #8]
  40c650:	tbz	w8, #3, 40c660 <ferror@plt+0x9ab0>
  40c654:	bl	40c25c <ferror@plt+0x96ac>
  40c658:	cmp	w0, #0x3
  40c65c:	b.ne	40c5e8 <ferror@plt+0x9a38>  // b.any
  40c660:	mov	x0, x22
  40c664:	bl	40c700 <ferror@plt+0x9b50>
  40c668:	b	40c618 <ferror@plt+0x9a68>
  40c66c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c670:	ldr	w0, [x8, #1224]
  40c674:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c678:	add	x2, x2, #0xac9
  40c67c:	mov	w1, wzr
  40c680:	bl	402cbc <ferror@plt+0x10c>
  40c684:	bl	4028d0 <abort@plt>
  40c688:	stp	x29, x30, [sp, #-16]!
  40c68c:	ldr	w10, [x0, #24]
  40c690:	mov	x8, x3
  40c694:	mov	x3, x2
  40c698:	mov	x9, x0
  40c69c:	cmp	w10, #0x1
  40c6a0:	mov	w2, w1
  40c6a4:	mov	x29, sp
  40c6a8:	b.eq	40c6d0 <ferror@plt+0x9b20>  // b.none
  40c6ac:	cmp	w10, #0x2
  40c6b0:	b.ne	40c6e4 <ferror@plt+0x9b34>  // b.any
  40c6b4:	ldr	x9, [x9, #32]
  40c6b8:	mov	x0, x8
  40c6bc:	mov	w1, w2
  40c6c0:	mov	x2, x3
  40c6c4:	blr	x9
  40c6c8:	ldp	x29, x30, [sp], #16
  40c6cc:	ret
  40c6d0:	mov	x0, x8
  40c6d4:	mov	x1, x9
  40c6d8:	bl	403c3c <ferror@plt+0x108c>
  40c6dc:	ldp	x29, x30, [sp], #16
  40c6e0:	ret
  40c6e4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c6e8:	ldr	w0, [x8, #1224]
  40c6ec:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c6f0:	add	x2, x2, #0xa98
  40c6f4:	mov	w1, wzr
  40c6f8:	bl	402cbc <ferror@plt+0x10c>
  40c6fc:	bl	4028d0 <abort@plt>
  40c700:	sub	sp, sp, #0xd0
  40c704:	stp	x29, x30, [sp, #112]
  40c708:	stp	x28, x27, [sp, #128]
  40c70c:	stp	x26, x25, [sp, #144]
  40c710:	stp	x24, x23, [sp, #160]
  40c714:	stp	x22, x21, [sp, #176]
  40c718:	stp	x20, x19, [sp, #192]
  40c71c:	adrp	x27, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40c720:	ldr	w8, [x0, #12]
  40c724:	ldr	x11, [x27, #3528]
  40c728:	adrp	x21, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40c72c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c730:	add	w8, w8, #0x1
  40c734:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c738:	str	x11, [sp, #8]
  40c73c:	ldr	w11, [x21, #3504]
  40c740:	str	w8, [x0, #12]
  40c744:	ldr	w8, [x10, #2464]
  40c748:	ldr	w3, [x9, #888]
  40c74c:	mov	x19, x0
  40c750:	add	x29, sp, #0x70
  40c754:	add	w9, w8, #0x1
  40c758:	cmp	w3, #0x1
  40c75c:	str	w11, [sp, #20]
  40c760:	str	w9, [x10, #2464]
  40c764:	b.lt	40c784 <ferror@plt+0x9bd4>  // b.tstop
  40c768:	cmp	w8, w3
  40c76c:	b.lt	40c784 <ferror@plt+0x9bd4>  // b.tstop
  40c770:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40c774:	add	x2, x2, #0xafb
  40c778:	mov	w0, #0x1                   	// #1
  40c77c:	mov	w1, wzr
  40c780:	bl	402cbc <ferror@plt+0x10c>
  40c784:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c788:	ldr	w9, [x8, #2648]
  40c78c:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c790:	ldrb	w10, [x23, #1204]
  40c794:	add	w20, w9, #0x1
  40c798:	str	w20, [x8, #2648]
  40c79c:	tbnz	w10, #3, 40c7ac <ferror@plt+0x9bfc>
  40c7a0:	ldrb	w8, [x19, #8]
  40c7a4:	and	w28, w8, #0x1
  40c7a8:	b	40c7b0 <ferror@plt+0x9c00>
  40c7ac:	mov	w28, #0x1                   	// #1
  40c7b0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c7b4:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c7b8:	add	x9, x9, #0x9b8
  40c7bc:	add	x22, x22, #0xa10
  40c7c0:	ldp	x9, x8, [x9]
  40c7c4:	ldp	x25, x24, [x22]
  40c7c8:	cmp	x8, x9
  40c7cc:	b.ne	40c7e0 <ferror@plt+0x9c30>  // b.any
  40c7d0:	mov	w26, #0x1                   	// #1
  40c7d4:	sub	x24, x24, x25
  40c7d8:	cbnz	w28, 40c80c <ferror@plt+0x9c5c>
  40c7dc:	b	40c820 <ferror@plt+0x9c70>
  40c7e0:	adrp	x3, 415000 <ferror@plt+0x12450>
  40c7e4:	adrp	x4, 402000 <mbrtowc@plt-0x500>
  40c7e8:	add	x3, x3, #0x7d0
  40c7ec:	add	x4, x4, #0x9a0
  40c7f0:	add	x0, sp, #0x18
  40c7f4:	mov	x1, xzr
  40c7f8:	mov	x2, xzr
  40c7fc:	bl	4164b4 <_obstack_begin@@Base>
  40c800:	mov	w26, wzr
  40c804:	sub	x24, x24, x25
  40c808:	cbz	w28, 40c820 <ferror@plt+0x9c70>
  40c80c:	ldrb	w8, [x23, #1204]
  40c810:	tbz	w8, #7, 40c820 <ferror@plt+0x9c70>
  40c814:	ldr	x0, [x19, #16]
  40c818:	mov	w1, w20
  40c81c:	bl	407e78 <ferror@plt+0x52c8>
  40c820:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c824:	add	x8, x8, #0x9a8
  40c828:	cmp	w26, #0x0
  40c82c:	add	x9, sp, #0x18
  40c830:	csel	x1, x8, x9, ne  // ne = any
  40c834:	mov	x0, x19
  40c838:	bl	40c974 <ferror@plt+0x9dc4>
  40c83c:	ldp	x9, x8, [x22]
  40c840:	and	x10, x24, #0xffffffff
  40c844:	ldr	x23, [x27, #3528]
  40c848:	mov	x25, x21
  40c84c:	sub	x8, x8, x10
  40c850:	sub	x8, x8, x9
  40c854:	ldr	w24, [x21, #3504]
  40c858:	ldr	x11, [sp, #8]
  40c85c:	lsr	x21, x8, #3
  40c860:	ldr	w8, [sp, #20]
  40c864:	add	x22, x9, x10
  40c868:	str	x11, [x27, #3528]
  40c86c:	str	w8, [x25, #3504]
  40c870:	cbz	w28, 40c888 <ferror@plt+0x9cd8>
  40c874:	ldr	x0, [x19, #16]
  40c878:	mov	w1, w20
  40c87c:	mov	w2, w21
  40c880:	mov	x3, x22
  40c884:	bl	4082e8 <ferror@plt+0x5738>
  40c888:	bl	40ad28 <ferror@plt+0x8178>
  40c88c:	mov	x3, x0
  40c890:	mov	x0, x19
  40c894:	mov	w1, w21
  40c898:	mov	x2, x22
  40c89c:	bl	40c688 <ferror@plt+0x9ad8>
  40c8a0:	bl	40ae10 <ferror@plt+0x8260>
  40c8a4:	cbz	w28, 40c8bc <ferror@plt+0x9d0c>
  40c8a8:	mov	x3, x0
  40c8ac:	ldr	x0, [x19, #16]
  40c8b0:	mov	w1, w20
  40c8b4:	mov	w2, w21
  40c8b8:	bl	408440 <ferror@plt+0x5890>
  40c8bc:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c8c0:	ldr	w8, [x9, #2464]
  40c8c4:	str	x23, [x27, #3528]
  40c8c8:	str	w24, [x25, #3504]
  40c8cc:	sub	w8, w8, #0x1
  40c8d0:	str	w8, [x9, #2464]
  40c8d4:	ldr	w8, [x19, #12]
  40c8d8:	ldrb	w9, [x19, #8]
  40c8dc:	sub	w8, w8, #0x1
  40c8e0:	str	w8, [x19, #12]
  40c8e4:	tbz	w9, #4, 40c8f0 <ferror@plt+0x9d40>
  40c8e8:	mov	x0, x19
  40c8ec:	bl	40ec0c <ferror@plt+0xc05c>
  40c8f0:	cbz	w26, 40c928 <ferror@plt+0x9d78>
  40c8f4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c8f8:	add	x8, x8, #0x9b0
  40c8fc:	ldr	x1, [x22]
  40c900:	ldr	x9, [x8]
  40c904:	cmp	x1, x9
  40c908:	b.ls	40c934 <ferror@plt+0x9d84>  // b.plast
  40c90c:	ldr	x8, [x8, #24]
  40c910:	cmp	x1, x8
  40c914:	b.cs	40c934 <ferror@plt+0x9d84>  // b.hs, b.nlast
  40c918:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c91c:	add	x8, x8, #0x9b8
  40c920:	stp	x1, x1, [x8]
  40c924:	b	40c940 <ferror@plt+0x9d90>
  40c928:	add	x0, sp, #0x18
  40c92c:	mov	x1, xzr
  40c930:	b	40c93c <ferror@plt+0x9d8c>
  40c934:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c938:	add	x0, x0, #0x9a8
  40c93c:	bl	41674c <_obstack_free@@Base>
  40c940:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40c944:	ldr	x9, [x8, #2584]
  40c948:	neg	x10, x21, lsl #32
  40c94c:	ldp	x20, x19, [sp, #192]
  40c950:	ldp	x22, x21, [sp, #176]
  40c954:	ldp	x24, x23, [sp, #160]
  40c958:	ldp	x26, x25, [sp, #144]
  40c95c:	ldp	x28, x27, [sp, #128]
  40c960:	ldp	x29, x30, [sp, #112]
  40c964:	add	x9, x9, x10, asr #29
  40c968:	str	x9, [x8, #2584]
  40c96c:	add	sp, sp, #0xd0
  40c970:	ret
  40c974:	sub	sp, sp, #0x70
  40c978:	stp	x29, x30, [sp, #16]
  40c97c:	stp	x26, x25, [sp, #48]
  40c980:	stp	x24, x23, [sp, #64]
  40c984:	stp	x22, x21, [sp, #80]
  40c988:	stp	x20, x19, [sp, #96]
  40c98c:	mov	w8, #0x1                   	// #1
  40c990:	ldrb	w22, [x0, #8]
  40c994:	str	w8, [sp]
  40c998:	ldr	x8, [x0, #16]
  40c99c:	str	x27, [sp, #32]
  40c9a0:	mov	x19, x1
  40c9a4:	add	x29, sp, #0x10
  40c9a8:	str	x8, [sp, #8]
  40c9ac:	ldp	x9, x8, [x1, #24]
  40c9b0:	sub	x8, x8, x9
  40c9b4:	cmp	x8, #0xf
  40c9b8:	b.hi	40c9c8 <ferror@plt+0x9e18>  // b.pmore
  40c9bc:	mov	w1, #0x10                  	// #16
  40c9c0:	mov	x0, x19
  40c9c4:	bl	41659c <_obstack_newchunk@@Base>
  40c9c8:	ldr	x8, [x19, #24]
  40c9cc:	ldr	q0, [sp]
  40c9d0:	str	q0, [x8]
  40c9d4:	ldp	x20, x8, [x19, #16]
  40c9d8:	add	x8, x8, #0x10
  40c9dc:	cmp	x8, x20
  40c9e0:	str	x8, [x19, #24]
  40c9e4:	b.ne	40c9f4 <ferror@plt+0x9e44>  // b.any
  40c9e8:	ldrb	w8, [x19, #80]
  40c9ec:	orr	w8, w8, #0x2
  40c9f0:	strb	w8, [x19, #80]
  40c9f4:	ldr	x9, [x19, #48]
  40c9f8:	ldp	x10, x8, [x19, #24]
  40c9fc:	ldr	x11, [x19, #8]
  40ca00:	add	x10, x9, x10
  40ca04:	bic	x9, x10, x9
  40ca08:	sub	x10, x9, x11
  40ca0c:	sub	x11, x8, x11
  40ca10:	cmp	x10, x11
  40ca14:	str	x9, [x19, #24]
  40ca18:	b.ls	40ca20 <ferror@plt+0x9e70>  // b.plast
  40ca1c:	str	x8, [x19, #24]
  40ca20:	ldr	x8, [x19, #24]
  40ca24:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ca28:	add	x23, x23, #0xa18
  40ca2c:	str	x8, [x19, #16]
  40ca30:	ldp	x9, x8, [x23]
  40ca34:	sub	x8, x8, x9
  40ca38:	cmp	x8, #0x7
  40ca3c:	b.hi	40ca50 <ferror@plt+0x9ea0>  // b.pmore
  40ca40:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ca44:	add	x0, x0, #0xa00
  40ca48:	mov	w1, #0x8                   	// #8
  40ca4c:	bl	41659c <_obstack_newchunk@@Base>
  40ca50:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ca54:	ldr	x8, [x24, #2584]
  40ca58:	str	x20, [x8]
  40ca5c:	ldr	x8, [x24, #2584]
  40ca60:	add	x8, x8, #0x8
  40ca64:	str	x8, [x24, #2584]
  40ca68:	bl	40c25c <ferror@plt+0x96ac>
  40ca6c:	cmp	w0, #0x3
  40ca70:	b.ne	40cb68 <ferror@plt+0x9fb8>  // b.any
  40ca74:	mov	x0, sp
  40ca78:	mov	x1, xzr
  40ca7c:	bl	40b6c4 <ferror@plt+0x8b14>
  40ca80:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x182c>
  40ca84:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ca88:	mov	w25, #0x1                   	// #1
  40ca8c:	add	x26, x26, #0xe37
  40ca90:	add	x20, x20, #0xa00
  40ca94:	b	40cab0 <ferror@plt+0x9f00>
  40ca98:	ldr	x8, [x24, #2584]
  40ca9c:	str	x27, [x8]
  40caa0:	ldr	x8, [x24, #2584]
  40caa4:	add	x8, x8, #0x8
  40caa8:	str	x8, [x24, #2584]
  40caac:	tbz	w21, #0, 40cb68 <ferror@plt+0x9fb8>
  40cab0:	mov	x1, sp
  40cab4:	mov	x0, x19
  40cab8:	bl	40cb88 <ferror@plt+0x9fd8>
  40cabc:	mov	w21, w0
  40cac0:	tbnz	w22, #2, 40cad8 <ferror@plt+0x9f28>
  40cac4:	ldr	w8, [sp]
  40cac8:	cmp	w8, #0x2
  40cacc:	b.ne	40cad8 <ferror@plt+0x9f28>  // b.any
  40cad0:	str	w25, [sp]
  40cad4:	str	x26, [sp, #8]
  40cad8:	ldp	x9, x8, [x19, #24]
  40cadc:	sub	x8, x8, x9
  40cae0:	cmp	x8, #0xf
  40cae4:	b.hi	40caf4 <ferror@plt+0x9f44>  // b.pmore
  40cae8:	mov	w1, #0x10                  	// #16
  40caec:	mov	x0, x19
  40caf0:	bl	41659c <_obstack_newchunk@@Base>
  40caf4:	ldr	x8, [x19, #24]
  40caf8:	ldr	q0, [sp]
  40cafc:	str	q0, [x8]
  40cb00:	ldp	x27, x8, [x19, #16]
  40cb04:	add	x8, x8, #0x10
  40cb08:	cmp	x8, x27
  40cb0c:	str	x8, [x19, #24]
  40cb10:	b.ne	40cb20 <ferror@plt+0x9f70>  // b.any
  40cb14:	ldrb	w8, [x19, #80]
  40cb18:	orr	w8, w8, #0x2
  40cb1c:	strb	w8, [x19, #80]
  40cb20:	ldr	x8, [x19, #48]
  40cb24:	ldp	x9, x11, [x19, #24]
  40cb28:	ldr	x10, [x19, #8]
  40cb2c:	add	x9, x8, x9
  40cb30:	bic	x8, x9, x8
  40cb34:	sub	x9, x11, x10
  40cb38:	sub	x10, x8, x10
  40cb3c:	cmp	x10, x9
  40cb40:	csel	x8, x11, x8, hi  // hi = pmore
  40cb44:	stp	x8, x8, [x19, #16]
  40cb48:	ldp	x9, x8, [x23]
  40cb4c:	sub	x8, x8, x9
  40cb50:	cmp	x8, #0x7
  40cb54:	b.hi	40ca98 <ferror@plt+0x9ee8>  // b.pmore
  40cb58:	mov	w1, #0x8                   	// #8
  40cb5c:	mov	x0, x20
  40cb60:	bl	41659c <_obstack_newchunk@@Base>
  40cb64:	b	40ca98 <ferror@plt+0x9ee8>
  40cb68:	ldp	x20, x19, [sp, #96]
  40cb6c:	ldp	x22, x21, [sp, #80]
  40cb70:	ldp	x24, x23, [sp, #64]
  40cb74:	ldp	x26, x25, [sp, #48]
  40cb78:	ldr	x27, [sp, #32]
  40cb7c:	ldp	x29, x30, [sp, #16]
  40cb80:	add	sp, sp, #0x70
  40cb84:	ret
  40cb88:	sub	sp, sp, #0x70
  40cb8c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40cb90:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40cb94:	stp	x24, x23, [sp, #64]
  40cb98:	stp	x22, x21, [sp, #80]
  40cb9c:	ldr	x21, [x8, #3528]
  40cba0:	ldr	w23, [x9, #3504]
  40cba4:	stp	x20, x19, [sp, #96]
  40cba8:	mov	x19, x1
  40cbac:	mov	x20, x0
  40cbb0:	stp	x29, x30, [sp, #16]
  40cbb4:	str	x27, [sp, #32]
  40cbb8:	stp	x26, x25, [sp, #48]
  40cbbc:	add	x29, sp, #0x10
  40cbc0:	str	wzr, [x1]
  40cbc4:	mov	x0, sp
  40cbc8:	mov	x1, xzr
  40cbcc:	bl	40b6c4 <ferror@plt+0x8b14>
  40cbd0:	mov	w22, w0
  40cbd4:	cmp	w0, #0x6
  40cbd8:	b.ne	40cbf4 <ferror@plt+0xa044>  // b.any
  40cbdc:	bl	402950 <__ctype_b_loc@plt>
  40cbe0:	ldr	x8, [sp, #8]
  40cbe4:	ldr	x9, [x0]
  40cbe8:	ldrb	w8, [x8]
  40cbec:	ldrh	w8, [x9, x8, lsl #1]
  40cbf0:	tbnz	w8, #13, 40cbc4 <ferror@plt+0xa014>
  40cbf4:	adrp	x26, 419000 <_obstack_memory_used@@Base+0x282c>
  40cbf8:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x282c>
  40cbfc:	mov	w25, wzr
  40cc00:	add	x26, x26, #0xa90
  40cc04:	add	x24, x24, #0xb32
  40cc08:	mov	w27, #0x2                   	// #2
  40cc0c:	b	40cc38 <ferror@plt+0xa088>
  40cc10:	sub	w25, w25, #0x1
  40cc14:	mov	x2, sp
  40cc18:	mov	x0, x20
  40cc1c:	mov	w1, w22
  40cc20:	mov	w3, w23
  40cc24:	bl	40c5b0 <ferror@plt+0x9a00>
  40cc28:	mov	x0, sp
  40cc2c:	mov	x1, xzr
  40cc30:	bl	40b6c4 <ferror@plt+0x8b14>
  40cc34:	mov	w22, w0
  40cc38:	cmp	w22, #0x7
  40cc3c:	b.hi	40cd60 <ferror@plt+0xa1b0>  // b.pmore
  40cc40:	mov	w8, w22
  40cc44:	adr	x9, 40cc14 <ferror@plt+0xa064>
  40cc48:	ldrb	w10, [x26, x8]
  40cc4c:	add	x9, x9, x10, lsl #2
  40cc50:	br	x9
  40cc54:	cbz	w25, 40ccb0 <ferror@plt+0xa100>
  40cc58:	ldr	x8, [sp, #8]
  40cc5c:	ldrb	w8, [x8]
  40cc60:	cmp	w8, #0x29
  40cc64:	b.eq	40cc10 <ferror@plt+0xa060>  // b.none
  40cc68:	cmp	w8, #0x28
  40cc6c:	b.ne	40cc14 <ferror@plt+0xa064>  // b.any
  40cc70:	add	w25, w25, #0x1
  40cc74:	b	40cc14 <ferror@plt+0xa064>
  40cc78:	mov	w0, #0x1                   	// #1
  40cc7c:	mov	w1, wzr
  40cc80:	mov	x2, x21
  40cc84:	mov	w3, w23
  40cc88:	mov	x4, x24
  40cc8c:	bl	402d68 <ferror@plt+0x1b8>
  40cc90:	b	40cc28 <ferror@plt+0xa078>
  40cc94:	ldp	x9, x8, [x20, #16]
  40cc98:	cmp	x8, x9
  40cc9c:	b.ne	40cc28 <ferror@plt+0xa078>  // b.any
  40cca0:	str	w27, [x19]
  40cca4:	ldr	x8, [sp, #8]
  40cca8:	str	x8, [x19, #8]
  40ccac:	b	40cc28 <ferror@plt+0xa078>
  40ccb0:	ldp	x9, x8, [x20, #24]
  40ccb4:	cmp	x8, x9
  40ccb8:	b.ne	40ccc8 <ferror@plt+0xa118>  // b.any
  40ccbc:	mov	w1, #0x1                   	// #1
  40ccc0:	mov	x0, x20
  40ccc4:	bl	41659c <_obstack_newchunk@@Base>
  40ccc8:	ldr	x8, [x20, #24]
  40cccc:	add	x9, x8, #0x1
  40ccd0:	str	x9, [x20, #24]
  40ccd4:	strb	wzr, [x8]
  40ccd8:	ldp	x8, x9, [x20, #16]
  40ccdc:	cmp	x9, x8
  40cce0:	b.ne	40ccf0 <ferror@plt+0xa140>  // b.any
  40cce4:	ldrb	w9, [x20, #80]
  40cce8:	orr	w9, w9, #0x2
  40ccec:	strb	w9, [x20, #80]
  40ccf0:	ldr	x10, [x20, #48]
  40ccf4:	ldp	x11, x9, [x20, #24]
  40ccf8:	ldr	x12, [x20, #8]
  40ccfc:	add	x11, x10, x11
  40cd00:	bic	x10, x11, x10
  40cd04:	sub	x11, x10, x12
  40cd08:	sub	x12, x9, x12
  40cd0c:	cmp	x11, x12
  40cd10:	str	x10, [x20, #24]
  40cd14:	b.ls	40cd1c <ferror@plt+0xa16c>  // b.plast
  40cd18:	str	x9, [x20, #24]
  40cd1c:	ldr	x9, [x20, #24]
  40cd20:	str	x9, [x20, #16]
  40cd24:	ldr	w9, [x19]
  40cd28:	cbnz	w9, 40cd38 <ferror@plt+0xa188>
  40cd2c:	mov	w9, #0x1                   	// #1
  40cd30:	str	w9, [x19]
  40cd34:	str	x8, [x19, #8]
  40cd38:	cmp	w22, #0x4
  40cd3c:	ldp	x20, x19, [sp, #96]
  40cd40:	ldp	x22, x21, [sp, #80]
  40cd44:	ldp	x24, x23, [sp, #64]
  40cd48:	ldp	x26, x25, [sp, #48]
  40cd4c:	ldr	x27, [sp, #32]
  40cd50:	ldp	x29, x30, [sp, #16]
  40cd54:	cset	w0, eq  // eq = none
  40cd58:	add	sp, sp, #0x70
  40cd5c:	ret
  40cd60:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cd64:	ldr	w0, [x8, #1224]
  40cd68:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40cd6c:	add	x2, x2, #0xb56
  40cd70:	mov	w1, wzr
  40cd74:	bl	402cbc <ferror@plt+0x10c>
  40cd78:	bl	4028d0 <abort@plt>
  40cd7c:	stp	x29, x30, [sp, #-16]!
  40cd80:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40cd84:	adrp	x1, 40c000 <ferror@plt+0x9450>
  40cd88:	add	x0, x0, #0xe90
  40cd8c:	add	x1, x1, #0xdf8
  40cd90:	mov	x2, xzr
  40cd94:	mov	x29, sp
  40cd98:	bl	415bcc <ferror@plt+0x1301c>
  40cd9c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cda0:	ldr	x9, [x9, #1088]
  40cda4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cda8:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cdac:	str	x0, [x8, #2656]
  40cdb0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cdb4:	adrp	x3, 415000 <ferror@plt+0x12450>
  40cdb8:	adrp	x4, 402000 <mbrtowc@plt-0x500>
  40cdbc:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cdc0:	add	x11, x11, #0xa68
  40cdc4:	adrp	x12, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cdc8:	adrp	x13, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cdcc:	add	x0, x0, #0xa90
  40cdd0:	add	x3, x3, #0x7d0
  40cdd4:	add	x4, x4, #0x9a0
  40cdd8:	mov	x1, xzr
  40cddc:	mov	x2, xzr
  40cde0:	str	x11, [x12, #2688]
  40cde4:	str	x9, [x10, #2664]
  40cde8:	str	x9, [x13, #2696]
  40cdec:	bl	4164b4 <_obstack_begin@@Base>
  40cdf0:	ldp	x29, x30, [sp], #16
  40cdf4:	ret
  40cdf8:	ldr	w8, [x0, #8]
  40cdfc:	ldr	w9, [x1, #8]
  40ce00:	sub	w0, w8, w9
  40ce04:	ret
  40ce08:	stp	x29, x30, [sp, #-32]!
  40ce0c:	stp	x20, x19, [sp, #16]
  40ce10:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ce14:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ce18:	ldr	w0, [x8, #2792]
  40ce1c:	ldr	x19, [x20, #2656]
  40ce20:	mov	x29, sp
  40ce24:	cbz	w0, 40ce2c <ferror@plt+0xa27c>
  40ce28:	bl	40ce64 <ferror@plt+0xa2b4>
  40ce2c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ce30:	ldr	w0, [x8, #2796]
  40ce34:	cbz	w0, 40ce3c <ferror@plt+0xa28c>
  40ce38:	bl	40ce64 <ferror@plt+0xa2b4>
  40ce3c:	mov	x0, x19
  40ce40:	str	xzr, [x20, #2656]
  40ce44:	bl	412ce8 <ferror@plt+0x10138>
  40ce48:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ce4c:	add	x0, x0, #0xa90
  40ce50:	mov	x1, xzr
  40ce54:	bl	41674c <_obstack_free@@Base>
  40ce58:	ldp	x20, x19, [sp, #16]
  40ce5c:	ldp	x29, x30, [sp], #32
  40ce60:	ret
  40ce64:	stp	x29, x30, [sp, #-32]!
  40ce68:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ce6c:	ldr	w8, [x8, #2792]
  40ce70:	stp	x20, x19, [sp, #16]
  40ce74:	mov	w19, w0
  40ce78:	mov	x29, sp
  40ce7c:	cmp	w8, w0
  40ce80:	b.ne	40cea0 <ferror@plt+0xa2f0>  // b.any
  40ce84:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40ce88:	ldr	x0, [x8, #2832]
  40ce8c:	bl	410528 <ferror@plt+0xd978>
  40ce90:	cbnz	w0, 40cee8 <ferror@plt+0xa338>
  40ce94:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ce98:	add	x8, x8, #0xae8
  40ce9c:	b	40cec8 <ferror@plt+0xa318>
  40cea0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cea4:	ldr	w8, [x8, #2796]
  40cea8:	cmp	w8, w19
  40ceac:	b.ne	40cecc <ferror@plt+0xa31c>  // b.any
  40ceb0:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40ceb4:	ldr	x0, [x8, #2840]
  40ceb8:	bl	410528 <ferror@plt+0xd978>
  40cebc:	cbnz	w0, 40cee8 <ferror@plt+0xa338>
  40cec0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cec4:	add	x8, x8, #0xaec
  40cec8:	str	wzr, [x8]
  40cecc:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40ced0:	ldr	x20, [x8, #2848]
  40ced4:	mov	w0, w19
  40ced8:	bl	40e48c <ferror@plt+0xb8dc>
  40cedc:	mov	x1, x0
  40cee0:	mov	x0, x20
  40cee4:	bl	40ffe4 <ferror@plt+0xd434>
  40cee8:	ldp	x20, x19, [sp, #16]
  40ceec:	ldp	x29, x30, [sp], #32
  40cef0:	ret
  40cef4:	stp	x29, x30, [sp, #-64]!
  40cef8:	str	x23, [sp, #16]
  40cefc:	stp	x22, x21, [sp, #32]
  40cf00:	stp	x20, x19, [sp, #48]
  40cf04:	mov	x29, sp
  40cf08:	cbz	w1, 40cfb0 <ferror@plt+0xa400>
  40cf0c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cf10:	ldr	x8, [x8, #2688]
  40cf14:	cbz	x8, 40cfb0 <ferror@plt+0xa400>
  40cf18:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cf1c:	ldr	x8, [x21, #2696]
  40cf20:	mov	w19, w1
  40cf24:	mov	x20, x0
  40cf28:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cf2c:	cbnz	x8, 40cf44 <ferror@plt+0xa394>
  40cf30:	ldr	w8, [x22, #2800]
  40cf34:	cmp	w8, w19
  40cf38:	b.ge	40cf44 <ferror@plt+0xa394>  // b.tcont
  40cf3c:	mov	w0, w19
  40cf40:	bl	40cfc4 <ferror@plt+0xa414>
  40cf44:	ldr	x3, [x21, #2696]
  40cf48:	cbz	x3, 40cf80 <ferror@plt+0xa3d0>
  40cf4c:	sxtw	x1, w19
  40cf50:	mov	w2, #0x1                   	// #1
  40cf54:	mov	x0, x20
  40cf58:	bl	402a20 <fwrite@plt>
  40cf5c:	cmp	w0, #0x1
  40cf60:	b.eq	40cfb0 <ferror@plt+0xa400>  // b.none
  40cf64:	bl	402b30 <__errno_location@plt>
  40cf68:	ldr	w1, [x0]
  40cf6c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40cf70:	add	x2, x2, #0xb9e
  40cf74:	mov	w0, #0x1                   	// #1
  40cf78:	bl	402cbc <ferror@plt+0x10c>
  40cf7c:	b	40cfb0 <ferror@plt+0xa400>
  40cf80:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cf84:	ldr	x0, [x23, #2808]
  40cf88:	sxtw	x21, w19
  40cf8c:	mov	x1, x20
  40cf90:	mov	x2, x21
  40cf94:	bl	402510 <memcpy@plt>
  40cf98:	ldr	x8, [x23, #2808]
  40cf9c:	ldr	w9, [x22, #2800]
  40cfa0:	add	x8, x8, x21
  40cfa4:	sub	w9, w9, w19
  40cfa8:	str	x8, [x23, #2808]
  40cfac:	str	w9, [x22, #2800]
  40cfb0:	ldp	x20, x19, [sp, #48]
  40cfb4:	ldp	x22, x21, [sp, #32]
  40cfb8:	ldr	x23, [sp, #16]
  40cfbc:	ldp	x29, x30, [sp], #64
  40cfc0:	ret
  40cfc4:	sub	sp, sp, #0xd0
  40cfc8:	stp	x22, x21, [sp, #176]
  40cfcc:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cfd0:	stp	x24, x23, [sp, #160]
  40cfd4:	ldr	x24, [x21, #2688]
  40cfd8:	stp	x29, x30, [sp, #128]
  40cfdc:	stp	x20, x19, [sp, #192]
  40cfe0:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40cfe4:	ldr	w8, [x24, #12]
  40cfe8:	ldr	w9, [x20, #2800]
  40cfec:	mov	w19, w0
  40cff0:	str	x25, [sp, #144]
  40cff4:	add	x29, sp, #0x80
  40cff8:	sub	w10, w8, w9
  40cffc:	add	w9, w10, w0
  40d000:	cmp	w8, w9
  40d004:	str	w10, [x24, #16]
  40d008:	b.ge	40d02c <ferror@plt+0xa47c>  // b.tcont
  40d00c:	mov	w10, #0x200                 	// #512
  40d010:	mov	w22, w8
  40d014:	lsl	w11, w22, #1
  40d018:	cmp	w22, #0x0
  40d01c:	csel	w22, w10, w11, eq  // eq = none
  40d020:	cmp	w22, w9
  40d024:	b.lt	40d014 <ferror@plt+0xa464>  // b.tstop
  40d028:	b	40d030 <ferror@plt+0xa480>
  40d02c:	mov	w22, w8
  40d030:	adrp	x23, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40d034:	ldr	w9, [x23, #2872]
  40d038:	sub	w8, w22, w8
  40d03c:	add	w8, w8, w9
  40d040:	cmp	w8, #0x80, lsl #12
  40d044:	b.le	40d12c <ferror@plt+0xa57c>
  40d048:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d04c:	ldr	x0, [x8, #2656]
  40d050:	ldr	w25, [x24, #16]
  40d054:	add	x8, sp, #0x8
  40d058:	bl	412d04 <ferror@plt+0x10154>
  40d05c:	ldur	q0, [sp, #8]
  40d060:	ldur	q1, [sp, #24]
  40d064:	ldur	q2, [sp, #40]
  40d068:	ldr	x8, [sp, #56]
  40d06c:	add	x0, sp, #0x40
  40d070:	add	x1, sp, #0x8
  40d074:	stp	q0, q1, [sp, #64]
  40d078:	str	q2, [sp, #96]
  40d07c:	str	x8, [sp, #112]
  40d080:	bl	412d20 <ferror@plt+0x10170>
  40d084:	tbz	w0, #0, 40d0b0 <ferror@plt+0xa500>
  40d088:	add	w19, w25, w19
  40d08c:	ldr	x8, [sp, #8]
  40d090:	add	x0, sp, #0x40
  40d094:	add	x1, sp, #0x8
  40d098:	ldr	w9, [x8, #16]
  40d09c:	cmp	w9, w19
  40d0a0:	csel	w19, w9, w19, gt
  40d0a4:	csel	x24, x8, x24, gt
  40d0a8:	bl	412d20 <ferror@plt+0x10170>
  40d0ac:	tbnz	w0, #0, 40d08c <ferror@plt+0xa4dc>
  40d0b0:	add	x0, sp, #0x40
  40d0b4:	bl	412d40 <ferror@plt+0x10190>
  40d0b8:	ldp	w0, w8, [x24, #8]
  40d0bc:	ldr	w9, [x23, #2872]
  40d0c0:	ldr	x19, [x24]
  40d0c4:	sub	w8, w9, w8
  40d0c8:	str	w8, [x23, #2872]
  40d0cc:	str	wzr, [x24, #12]
  40d0d0:	str	xzr, [x24]
  40d0d4:	bl	40e5f8 <ferror@plt+0xba48>
  40d0d8:	ldrsw	x1, [x24, #16]
  40d0dc:	str	x0, [x24]
  40d0e0:	cmp	w1, #0x1
  40d0e4:	b.lt	40d118 <ferror@plt+0xa568>  // b.tstop
  40d0e8:	mov	x3, x0
  40d0ec:	mov	w2, #0x1                   	// #1
  40d0f0:	mov	x0, x19
  40d0f4:	bl	402a20 <fwrite@plt>
  40d0f8:	cmp	w0, #0x1
  40d0fc:	b.eq	40d118 <ferror@plt+0xa568>  // b.none
  40d100:	bl	402b30 <__errno_location@plt>
  40d104:	ldr	w1, [x0]
  40d108:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40d10c:	add	x2, x2, #0xcb4
  40d110:	mov	w0, #0x1                   	// #1
  40d114:	bl	402cbc <ferror@plt+0x10c>
  40d118:	mov	x0, x19
  40d11c:	bl	4029a0 <free@plt>
  40d120:	mov	w8, #0x1                   	// #1
  40d124:	str	w8, [x24, #16]
  40d128:	b	40d130 <ferror@plt+0xa580>
  40d12c:	mov	x24, xzr
  40d130:	ldr	x9, [x21, #2688]
  40d134:	cmp	x9, x24
  40d138:	b.eq	40d1d0 <ferror@plt+0xa620>  // b.none
  40d13c:	cbz	x24, 40d16c <ferror@plt+0xa5bc>
  40d140:	ldr	x0, [x24]
  40d144:	ldr	w1, [x24, #8]
  40d148:	str	xzr, [x24]
  40d14c:	bl	40dd34 <ferror@plt+0xb184>
  40d150:	cbz	w0, 40d16c <ferror@plt+0xa5bc>
  40d154:	bl	402b30 <__errno_location@plt>
  40d158:	ldr	w1, [x0]
  40d15c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40d160:	add	x2, x2, #0xbfb
  40d164:	mov	w0, wzr
  40d168:	bl	402cbc <ferror@plt+0x10c>
  40d16c:	ldr	x8, [x21, #2688]
  40d170:	sxtw	x0, w22
  40d174:	ldr	x19, [x8]
  40d178:	bl	415918 <ferror@plt+0x12d68>
  40d17c:	ldr	x8, [x21, #2688]
  40d180:	mov	x1, x19
  40d184:	ldrsw	x2, [x8, #16]
  40d188:	str	x0, [x8]
  40d18c:	bl	402510 <memcpy@plt>
  40d190:	mov	x0, x19
  40d194:	bl	4029a0 <free@plt>
  40d198:	ldr	x8, [x21, #2688]
  40d19c:	ldr	w10, [x23, #2872]
  40d1a0:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d1a4:	ldr	w9, [x8, #12]
  40d1a8:	sub	w9, w22, w9
  40d1ac:	add	w9, w9, w10
  40d1b0:	str	w9, [x23, #2872]
  40d1b4:	ldr	x9, [x8]
  40d1b8:	ldrsw	x10, [x8, #16]
  40d1bc:	str	w22, [x8, #12]
  40d1c0:	add	x8, x9, x10
  40d1c4:	str	x8, [x11, #2808]
  40d1c8:	sub	w8, w22, w10
  40d1cc:	b	40d1e8 <ferror@plt+0xa638>
  40d1d0:	ldr	x9, [x9]
  40d1d4:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d1d8:	adrp	x11, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d1dc:	mov	w8, wzr
  40d1e0:	str	x9, [x10, #2696]
  40d1e4:	str	xzr, [x11, #2808]
  40d1e8:	str	w8, [x20, #2800]
  40d1ec:	ldp	x20, x19, [sp, #192]
  40d1f0:	ldp	x22, x21, [sp, #176]
  40d1f4:	ldp	x24, x23, [sp, #160]
  40d1f8:	ldr	x25, [sp, #144]
  40d1fc:	ldp	x29, x30, [sp, #128]
  40d200:	add	sp, sp, #0xd0
  40d204:	ret
  40d208:	stp	x29, x30, [sp, #-96]!
  40d20c:	stp	x20, x19, [sp, #80]
  40d210:	mov	w20, w2
  40d214:	mov	x19, x1
  40d218:	str	x27, [sp, #16]
  40d21c:	stp	x26, x25, [sp, #32]
  40d220:	stp	x24, x23, [sp, #48]
  40d224:	stp	x22, x21, [sp, #64]
  40d228:	mov	x29, sp
  40d22c:	cbz	x0, 40d28c <ferror@plt+0xa6dc>
  40d230:	ldp	x9, x8, [x0, #24]
  40d234:	sxtw	x20, w20
  40d238:	mov	x22, x0
  40d23c:	sub	x8, x8, x9
  40d240:	cmp	x8, x20
  40d244:	b.cs	40d254 <ferror@plt+0xa6a4>  // b.hs, b.nlast
  40d248:	mov	x0, x22
  40d24c:	mov	x1, x20
  40d250:	bl	41659c <_obstack_newchunk@@Base>
  40d254:	ldr	x0, [x22, #24]
  40d258:	mov	x1, x19
  40d25c:	mov	x2, x20
  40d260:	bl	402510 <memcpy@plt>
  40d264:	ldr	x8, [x22, #24]
  40d268:	add	x8, x8, x20
  40d26c:	str	x8, [x22, #24]
  40d270:	ldp	x20, x19, [sp, #80]
  40d274:	ldp	x22, x21, [sp, #64]
  40d278:	ldp	x24, x23, [sp, #48]
  40d27c:	ldp	x26, x25, [sp, #32]
  40d280:	ldr	x27, [sp, #16]
  40d284:	ldp	x29, x30, [sp], #96
  40d288:	ret
  40d28c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d290:	ldr	x8, [x8, #2688]
  40d294:	cbz	x8, 40d270 <ferror@plt+0xa6c0>
  40d298:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d29c:	ldr	w8, [x8, #1200]
  40d2a0:	cbz	w8, 40d2f0 <ferror@plt+0xa740>
  40d2a4:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d2a8:	ldrb	w8, [x22, #2816]
  40d2ac:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40d2b0:	tbnz	w8, #0, 40d5bc <ferror@plt+0xaa0c>
  40d2b4:	ldr	w8, [x23, #3584]
  40d2b8:	mov	w21, w3
  40d2bc:	mov	w9, #0x1                   	// #1
  40d2c0:	strb	w9, [x22, #2816]
  40d2c4:	add	w8, w8, #0x1
  40d2c8:	cmp	w8, w3
  40d2cc:	str	w8, [x23, #3584]
  40d2d0:	b.eq	40d5bc <ferror@plt+0xaa0c>  // b.none
  40d2d4:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d2d8:	ldr	x1, [x25, #2696]
  40d2dc:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d2e0:	cbz	x1, 40d32c <ferror@plt+0xa77c>
  40d2e4:	mov	w0, #0x23                  	// #35
  40d2e8:	bl	402600 <putc@plt>
  40d2ec:	b	40d370 <ferror@plt+0xa7c0>
  40d2f0:	cmp	w20, #0x8
  40d2f4:	b.hi	40d358 <ferror@plt+0xa7a8>  // b.pmore
  40d2f8:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  40d2fc:	mov	w8, w20
  40d300:	add	x9, x9, #0xb8c
  40d304:	adr	x10, 40d270 <ferror@plt+0xa6c0>
  40d308:	ldrh	w11, [x9, x8, lsl #1]
  40d30c:	add	x10, x10, x11, lsl #2
  40d310:	br	x10
  40d314:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d318:	ldr	x1, [x8, #2696]
  40d31c:	cbz	x1, 40d65c <ferror@plt+0xaaac>
  40d320:	ldrb	w0, [x19]
  40d324:	bl	402600 <putc@plt>
  40d328:	b	40d6c0 <ferror@plt+0xab10>
  40d32c:	ldr	w8, [x24, #2800]
  40d330:	cbz	w8, 40d368 <ferror@plt+0xa7b8>
  40d334:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d338:	ldr	x10, [x9, #2808]
  40d33c:	sub	w8, w8, #0x1
  40d340:	mov	w11, #0x23                  	// #35
  40d344:	str	w8, [x24, #2800]
  40d348:	add	x8, x10, #0x1
  40d34c:	str	x8, [x9, #2808]
  40d350:	strb	w11, [x10]
  40d354:	b	40d370 <ferror@plt+0xa7c0>
  40d358:	mov	x0, x19
  40d35c:	mov	w1, w20
  40d360:	bl	40cef4 <ferror@plt+0xa344>
  40d364:	b	40d270 <ferror@plt+0xa6c0>
  40d368:	mov	w0, #0x23                  	// #35
  40d36c:	bl	40da1c <ferror@plt+0xae6c>
  40d370:	ldr	x1, [x25, #2696]
  40d374:	cbz	x1, 40d384 <ferror@plt+0xa7d4>
  40d378:	mov	w0, #0x6c                  	// #108
  40d37c:	bl	402600 <putc@plt>
  40d380:	b	40d3b8 <ferror@plt+0xa808>
  40d384:	ldr	w8, [x24, #2800]
  40d388:	cbz	w8, 40d3b0 <ferror@plt+0xa800>
  40d38c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d390:	ldr	x10, [x9, #2808]
  40d394:	sub	w8, w8, #0x1
  40d398:	mov	w11, #0x6c                  	// #108
  40d39c:	str	w8, [x24, #2800]
  40d3a0:	add	x8, x10, #0x1
  40d3a4:	str	x8, [x9, #2808]
  40d3a8:	strb	w11, [x10]
  40d3ac:	b	40d3b8 <ferror@plt+0xa808>
  40d3b0:	mov	w0, #0x6c                  	// #108
  40d3b4:	bl	40da1c <ferror@plt+0xae6c>
  40d3b8:	ldr	x1, [x25, #2696]
  40d3bc:	cbz	x1, 40d3cc <ferror@plt+0xa81c>
  40d3c0:	mov	w0, #0x69                  	// #105
  40d3c4:	bl	402600 <putc@plt>
  40d3c8:	b	40d400 <ferror@plt+0xa850>
  40d3cc:	ldr	w8, [x24, #2800]
  40d3d0:	cbz	w8, 40d3f8 <ferror@plt+0xa848>
  40d3d4:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d3d8:	ldr	x10, [x9, #2808]
  40d3dc:	sub	w8, w8, #0x1
  40d3e0:	mov	w11, #0x69                  	// #105
  40d3e4:	str	w8, [x24, #2800]
  40d3e8:	add	x8, x10, #0x1
  40d3ec:	str	x8, [x9, #2808]
  40d3f0:	strb	w11, [x10]
  40d3f4:	b	40d400 <ferror@plt+0xa850>
  40d3f8:	mov	w0, #0x69                  	// #105
  40d3fc:	bl	40da1c <ferror@plt+0xae6c>
  40d400:	ldr	x1, [x25, #2696]
  40d404:	cbz	x1, 40d414 <ferror@plt+0xa864>
  40d408:	mov	w0, #0x6e                  	// #110
  40d40c:	bl	402600 <putc@plt>
  40d410:	b	40d448 <ferror@plt+0xa898>
  40d414:	ldr	w8, [x24, #2800]
  40d418:	cbz	w8, 40d440 <ferror@plt+0xa890>
  40d41c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d420:	ldr	x10, [x9, #2808]
  40d424:	sub	w8, w8, #0x1
  40d428:	mov	w11, #0x6e                  	// #110
  40d42c:	str	w8, [x24, #2800]
  40d430:	add	x8, x10, #0x1
  40d434:	str	x8, [x9, #2808]
  40d438:	strb	w11, [x10]
  40d43c:	b	40d448 <ferror@plt+0xa898>
  40d440:	mov	w0, #0x6e                  	// #110
  40d444:	bl	40da1c <ferror@plt+0xae6c>
  40d448:	ldr	x1, [x25, #2696]
  40d44c:	cbz	x1, 40d45c <ferror@plt+0xa8ac>
  40d450:	mov	w0, #0x65                  	// #101
  40d454:	bl	402600 <putc@plt>
  40d458:	b	40d490 <ferror@plt+0xa8e0>
  40d45c:	ldr	w8, [x24, #2800]
  40d460:	cbz	w8, 40d488 <ferror@plt+0xa8d8>
  40d464:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d468:	ldr	x10, [x9, #2808]
  40d46c:	sub	w8, w8, #0x1
  40d470:	mov	w11, #0x65                  	// #101
  40d474:	str	w8, [x24, #2800]
  40d478:	add	x8, x10, #0x1
  40d47c:	str	x8, [x9, #2808]
  40d480:	strb	w11, [x10]
  40d484:	b	40d490 <ferror@plt+0xa8e0>
  40d488:	mov	w0, #0x65                  	// #101
  40d48c:	bl	40da1c <ferror@plt+0xae6c>
  40d490:	ldr	x1, [x25, #2696]
  40d494:	cbz	x1, 40d4a4 <ferror@plt+0xa8f4>
  40d498:	mov	w0, #0x20                  	// #32
  40d49c:	bl	402600 <putc@plt>
  40d4a0:	b	40d4d8 <ferror@plt+0xa928>
  40d4a4:	ldr	w8, [x24, #2800]
  40d4a8:	cbz	w8, 40d4d0 <ferror@plt+0xa920>
  40d4ac:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d4b0:	ldr	x10, [x9, #2808]
  40d4b4:	sub	w8, w8, #0x1
  40d4b8:	mov	w11, #0x20                  	// #32
  40d4bc:	str	w8, [x24, #2800]
  40d4c0:	add	x8, x10, #0x1
  40d4c4:	str	x8, [x9, #2808]
  40d4c8:	strb	w11, [x10]
  40d4cc:	b	40d4d8 <ferror@plt+0xa928>
  40d4d0:	mov	w0, #0x20                  	// #32
  40d4d4:	bl	40da1c <ferror@plt+0xae6c>
  40d4d8:	mov	w1, #0xa                   	// #10
  40d4dc:	mov	w0, w21
  40d4e0:	bl	403bd4 <ferror@plt+0x1024>
  40d4e4:	ldrb	w8, [x0]
  40d4e8:	cbz	w8, 40d540 <ferror@plt+0xa990>
  40d4ec:	add	x26, x0, #0x1
  40d4f0:	adrp	x27, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d4f4:	b	40d508 <ferror@plt+0xa958>
  40d4f8:	and	w0, w8, #0xff
  40d4fc:	bl	402600 <putc@plt>
  40d500:	ldrb	w8, [x26], #1
  40d504:	cbz	w8, 40d540 <ferror@plt+0xa990>
  40d508:	ldr	x1, [x25, #2696]
  40d50c:	cbnz	x1, 40d4f8 <ferror@plt+0xa948>
  40d510:	ldr	w9, [x24, #2800]
  40d514:	cbz	w9, 40d534 <ferror@plt+0xa984>
  40d518:	ldr	x10, [x27, #2808]
  40d51c:	sub	w9, w9, #0x1
  40d520:	str	w9, [x24, #2800]
  40d524:	add	x9, x10, #0x1
  40d528:	str	x9, [x27, #2808]
  40d52c:	strb	w8, [x10]
  40d530:	b	40d500 <ferror@plt+0xa950>
  40d534:	and	w0, w8, #0xff
  40d538:	bl	40da1c <ferror@plt+0xae6c>
  40d53c:	b	40d500 <ferror@plt+0xa950>
  40d540:	ldr	w8, [x23, #3584]
  40d544:	cmp	w8, #0x0
  40d548:	b.le	40d560 <ferror@plt+0xa9b0>
  40d54c:	ldr	x1, [x25, #2696]
  40d550:	cbz	x1, 40d584 <ferror@plt+0xa9d4>
  40d554:	mov	w0, #0xa                   	// #10
  40d558:	bl	402600 <putc@plt>
  40d55c:	b	40d5b8 <ferror@plt+0xaa08>
  40d560:	adrp	x26, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40d564:	ldr	x8, [x26, #3528]
  40d568:	ldrb	w8, [x8]
  40d56c:	cbz	w8, 40d54c <ferror@plt+0xa99c>
  40d570:	ldr	x1, [x25, #2696]
  40d574:	cbz	x1, 40d68c <ferror@plt+0xaadc>
  40d578:	mov	w0, #0x20                  	// #32
  40d57c:	bl	402600 <putc@plt>
  40d580:	b	40d918 <ferror@plt+0xad68>
  40d584:	ldr	w8, [x24, #2800]
  40d588:	cbz	w8, 40d5b0 <ferror@plt+0xaa00>
  40d58c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d590:	ldr	x10, [x9, #2808]
  40d594:	sub	w8, w8, #0x1
  40d598:	mov	w11, #0xa                   	// #10
  40d59c:	str	w8, [x24, #2800]
  40d5a0:	add	x8, x10, #0x1
  40d5a4:	str	x8, [x9, #2808]
  40d5a8:	strb	w11, [x10]
  40d5ac:	b	40d5b8 <ferror@plt+0xaa08>
  40d5b0:	mov	w0, #0xa                   	// #10
  40d5b4:	bl	40da1c <ferror@plt+0xae6c>
  40d5b8:	str	w21, [x23, #3584]
  40d5bc:	cmp	w20, #0x1
  40d5c0:	b.lt	40d270 <ferror@plt+0xa6c0>  // b.tstop
  40d5c4:	add	w20, w20, #0x1
  40d5c8:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d5cc:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d5d0:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d5d4:	mov	w26, #0x1                   	// #1
  40d5d8:	b	40d5ec <ferror@plt+0xaa3c>
  40d5dc:	sub	w20, w20, #0x1
  40d5e0:	cmp	w20, #0x1
  40d5e4:	add	x19, x19, #0x1
  40d5e8:	b.le	40d270 <ferror@plt+0xa6c0>
  40d5ec:	ldrb	w8, [x22, #2816]
  40d5f0:	tbnz	w8, #0, 40d604 <ferror@plt+0xaa54>
  40d5f4:	ldr	w8, [x23, #3584]
  40d5f8:	strb	w26, [x22, #2816]
  40d5fc:	add	w8, w8, #0x1
  40d600:	str	w8, [x23, #3584]
  40d604:	ldr	x1, [x21, #2696]
  40d608:	cbz	x1, 40d618 <ferror@plt+0xaa68>
  40d60c:	ldrb	w0, [x19]
  40d610:	bl	402600 <putc@plt>
  40d614:	b	40d648 <ferror@plt+0xaa98>
  40d618:	ldr	w8, [x24, #2800]
  40d61c:	cbz	w8, 40d640 <ferror@plt+0xaa90>
  40d620:	sub	w8, w8, #0x1
  40d624:	ldr	x9, [x25, #2808]
  40d628:	str	w8, [x24, #2800]
  40d62c:	ldrb	w8, [x19]
  40d630:	add	x10, x9, #0x1
  40d634:	str	x10, [x25, #2808]
  40d638:	strb	w8, [x9]
  40d63c:	b	40d648 <ferror@plt+0xaa98>
  40d640:	ldrb	w0, [x19]
  40d644:	bl	40da1c <ferror@plt+0xae6c>
  40d648:	ldrb	w8, [x19]
  40d64c:	cmp	w8, #0xa
  40d650:	b.ne	40d5dc <ferror@plt+0xaa2c>  // b.any
  40d654:	strb	wzr, [x22, #2816]
  40d658:	b	40d5dc <ferror@plt+0xaa2c>
  40d65c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d660:	ldr	w9, [x8, #2800]
  40d664:	cbz	w9, 40d6b8 <ferror@plt+0xab08>
  40d668:	sub	w9, w9, #0x1
  40d66c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d670:	ldr	x11, [x10, #2808]
  40d674:	str	w9, [x8, #2800]
  40d678:	ldrb	w8, [x19]
  40d67c:	add	x9, x11, #0x1
  40d680:	str	x9, [x10, #2808]
  40d684:	strb	w8, [x11]
  40d688:	b	40d6c0 <ferror@plt+0xab10>
  40d68c:	ldr	w8, [x24, #2800]
  40d690:	cbz	w8, 40d910 <ferror@plt+0xad60>
  40d694:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d698:	ldr	x10, [x9, #2808]
  40d69c:	sub	w8, w8, #0x1
  40d6a0:	mov	w11, #0x20                  	// #32
  40d6a4:	str	w8, [x24, #2800]
  40d6a8:	add	x8, x10, #0x1
  40d6ac:	str	x8, [x9, #2808]
  40d6b0:	strb	w11, [x10]
  40d6b4:	b	40d918 <ferror@plt+0xad68>
  40d6b8:	ldrb	w0, [x19]
  40d6bc:	bl	40da1c <ferror@plt+0xae6c>
  40d6c0:	add	x19, x19, #0x1
  40d6c4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d6c8:	ldr	x1, [x8, #2696]
  40d6cc:	cbz	x1, 40d6dc <ferror@plt+0xab2c>
  40d6d0:	ldrb	w0, [x19]
  40d6d4:	bl	402600 <putc@plt>
  40d6d8:	b	40d714 <ferror@plt+0xab64>
  40d6dc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d6e0:	ldr	w9, [x8, #2800]
  40d6e4:	cbz	w9, 40d70c <ferror@plt+0xab5c>
  40d6e8:	sub	w9, w9, #0x1
  40d6ec:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d6f0:	ldr	x11, [x10, #2808]
  40d6f4:	str	w9, [x8, #2800]
  40d6f8:	ldrb	w8, [x19]
  40d6fc:	add	x9, x11, #0x1
  40d700:	str	x9, [x10, #2808]
  40d704:	strb	w8, [x11]
  40d708:	b	40d714 <ferror@plt+0xab64>
  40d70c:	ldrb	w0, [x19]
  40d710:	bl	40da1c <ferror@plt+0xae6c>
  40d714:	add	x19, x19, #0x1
  40d718:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d71c:	ldr	x1, [x8, #2696]
  40d720:	cbz	x1, 40d730 <ferror@plt+0xab80>
  40d724:	ldrb	w0, [x19]
  40d728:	bl	402600 <putc@plt>
  40d72c:	b	40d768 <ferror@plt+0xabb8>
  40d730:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d734:	ldr	w9, [x8, #2800]
  40d738:	cbz	w9, 40d760 <ferror@plt+0xabb0>
  40d73c:	sub	w9, w9, #0x1
  40d740:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d744:	ldr	x11, [x10, #2808]
  40d748:	str	w9, [x8, #2800]
  40d74c:	ldrb	w8, [x19]
  40d750:	add	x9, x11, #0x1
  40d754:	str	x9, [x10, #2808]
  40d758:	strb	w8, [x11]
  40d75c:	b	40d768 <ferror@plt+0xabb8>
  40d760:	ldrb	w0, [x19]
  40d764:	bl	40da1c <ferror@plt+0xae6c>
  40d768:	add	x19, x19, #0x1
  40d76c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d770:	ldr	x1, [x8, #2696]
  40d774:	cbz	x1, 40d784 <ferror@plt+0xabd4>
  40d778:	ldrb	w0, [x19]
  40d77c:	bl	402600 <putc@plt>
  40d780:	b	40d7bc <ferror@plt+0xac0c>
  40d784:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d788:	ldr	w9, [x8, #2800]
  40d78c:	cbz	w9, 40d7b4 <ferror@plt+0xac04>
  40d790:	sub	w9, w9, #0x1
  40d794:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d798:	ldr	x11, [x10, #2808]
  40d79c:	str	w9, [x8, #2800]
  40d7a0:	ldrb	w8, [x19]
  40d7a4:	add	x9, x11, #0x1
  40d7a8:	str	x9, [x10, #2808]
  40d7ac:	strb	w8, [x11]
  40d7b0:	b	40d7bc <ferror@plt+0xac0c>
  40d7b4:	ldrb	w0, [x19]
  40d7b8:	bl	40da1c <ferror@plt+0xae6c>
  40d7bc:	add	x19, x19, #0x1
  40d7c0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d7c4:	ldr	x1, [x8, #2696]
  40d7c8:	cbz	x1, 40d7d8 <ferror@plt+0xac28>
  40d7cc:	ldrb	w0, [x19]
  40d7d0:	bl	402600 <putc@plt>
  40d7d4:	b	40d810 <ferror@plt+0xac60>
  40d7d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d7dc:	ldr	w9, [x8, #2800]
  40d7e0:	cbz	w9, 40d808 <ferror@plt+0xac58>
  40d7e4:	sub	w9, w9, #0x1
  40d7e8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d7ec:	ldr	x11, [x10, #2808]
  40d7f0:	str	w9, [x8, #2800]
  40d7f4:	ldrb	w8, [x19]
  40d7f8:	add	x9, x11, #0x1
  40d7fc:	str	x9, [x10, #2808]
  40d800:	strb	w8, [x11]
  40d804:	b	40d810 <ferror@plt+0xac60>
  40d808:	ldrb	w0, [x19]
  40d80c:	bl	40da1c <ferror@plt+0xae6c>
  40d810:	add	x19, x19, #0x1
  40d814:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d818:	ldr	x1, [x8, #2696]
  40d81c:	cbz	x1, 40d82c <ferror@plt+0xac7c>
  40d820:	ldrb	w0, [x19]
  40d824:	bl	402600 <putc@plt>
  40d828:	b	40d864 <ferror@plt+0xacb4>
  40d82c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d830:	ldr	w9, [x8, #2800]
  40d834:	cbz	w9, 40d85c <ferror@plt+0xacac>
  40d838:	sub	w9, w9, #0x1
  40d83c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d840:	ldr	x11, [x10, #2808]
  40d844:	str	w9, [x8, #2800]
  40d848:	ldrb	w8, [x19]
  40d84c:	add	x9, x11, #0x1
  40d850:	str	x9, [x10, #2808]
  40d854:	strb	w8, [x11]
  40d858:	b	40d864 <ferror@plt+0xacb4>
  40d85c:	ldrb	w0, [x19]
  40d860:	bl	40da1c <ferror@plt+0xae6c>
  40d864:	add	x19, x19, #0x1
  40d868:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d86c:	ldr	x1, [x8, #2696]
  40d870:	cbz	x1, 40d880 <ferror@plt+0xacd0>
  40d874:	ldrb	w0, [x19]
  40d878:	bl	402600 <putc@plt>
  40d87c:	b	40d8b8 <ferror@plt+0xad08>
  40d880:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d884:	ldr	w9, [x8, #2800]
  40d888:	cbz	w9, 40d8b0 <ferror@plt+0xad00>
  40d88c:	sub	w9, w9, #0x1
  40d890:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d894:	ldr	x11, [x10, #2808]
  40d898:	str	w9, [x8, #2800]
  40d89c:	ldrb	w8, [x19]
  40d8a0:	add	x9, x11, #0x1
  40d8a4:	str	x9, [x10, #2808]
  40d8a8:	strb	w8, [x11]
  40d8ac:	b	40d8b8 <ferror@plt+0xad08>
  40d8b0:	ldrb	w0, [x19]
  40d8b4:	bl	40da1c <ferror@plt+0xae6c>
  40d8b8:	add	x19, x19, #0x1
  40d8bc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d8c0:	ldr	x1, [x8, #2696]
  40d8c4:	cbz	x1, 40d8d4 <ferror@plt+0xad24>
  40d8c8:	ldrb	w0, [x19]
  40d8cc:	bl	402600 <putc@plt>
  40d8d0:	b	40d270 <ferror@plt+0xa6c0>
  40d8d4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d8d8:	ldr	w9, [x8, #2800]
  40d8dc:	cbz	w9, 40d904 <ferror@plt+0xad54>
  40d8e0:	sub	w9, w9, #0x1
  40d8e4:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d8e8:	ldr	x11, [x10, #2808]
  40d8ec:	str	w9, [x8, #2800]
  40d8f0:	ldrb	w8, [x19]
  40d8f4:	add	x9, x11, #0x1
  40d8f8:	str	x9, [x10, #2808]
  40d8fc:	strb	w8, [x11]
  40d900:	b	40d270 <ferror@plt+0xa6c0>
  40d904:	ldrb	w0, [x19]
  40d908:	bl	40da1c <ferror@plt+0xae6c>
  40d90c:	b	40d270 <ferror@plt+0xa6c0>
  40d910:	mov	w0, #0x20                  	// #32
  40d914:	bl	40da1c <ferror@plt+0xae6c>
  40d918:	ldr	x1, [x25, #2696]
  40d91c:	cbz	x1, 40d92c <ferror@plt+0xad7c>
  40d920:	mov	w0, #0x22                  	// #34
  40d924:	bl	402600 <putc@plt>
  40d928:	b	40d960 <ferror@plt+0xadb0>
  40d92c:	ldr	w8, [x24, #2800]
  40d930:	cbz	w8, 40d958 <ferror@plt+0xada8>
  40d934:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d938:	ldr	x10, [x9, #2808]
  40d93c:	sub	w8, w8, #0x1
  40d940:	mov	w11, #0x22                  	// #34
  40d944:	str	w8, [x24, #2800]
  40d948:	add	x8, x10, #0x1
  40d94c:	str	x8, [x9, #2808]
  40d950:	strb	w11, [x10]
  40d954:	b	40d960 <ferror@plt+0xadb0>
  40d958:	mov	w0, #0x22                  	// #34
  40d95c:	bl	40da1c <ferror@plt+0xae6c>
  40d960:	ldr	x10, [x26, #3528]
  40d964:	ldr	x1, [x25, #2696]
  40d968:	ldrb	w8, [x10]
  40d96c:	cmp	x1, #0x0
  40d970:	cset	w9, ne  // ne = any
  40d974:	cbz	w8, 40d9d4 <ferror@plt+0xae24>
  40d978:	add	x26, x10, #0x1
  40d97c:	adrp	x27, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d980:	b	40d9a0 <ferror@plt+0xadf0>
  40d984:	and	w0, w8, #0xff
  40d988:	bl	402600 <putc@plt>
  40d98c:	ldrb	w8, [x26], #1
  40d990:	ldr	x1, [x25, #2696]
  40d994:	cmp	x1, #0x0
  40d998:	cset	w9, ne  // ne = any
  40d99c:	cbz	w8, 40d9d4 <ferror@plt+0xae24>
  40d9a0:	tbnz	w9, #0, 40d984 <ferror@plt+0xadd4>
  40d9a4:	ldr	w9, [x24, #2800]
  40d9a8:	cbz	w9, 40d9c8 <ferror@plt+0xae18>
  40d9ac:	ldr	x10, [x27, #2808]
  40d9b0:	sub	w9, w9, #0x1
  40d9b4:	str	w9, [x24, #2800]
  40d9b8:	add	x9, x10, #0x1
  40d9bc:	str	x9, [x27, #2808]
  40d9c0:	strb	w8, [x10]
  40d9c4:	b	40d98c <ferror@plt+0xaddc>
  40d9c8:	and	w0, w8, #0xff
  40d9cc:	bl	40da1c <ferror@plt+0xae6c>
  40d9d0:	b	40d98c <ferror@plt+0xaddc>
  40d9d4:	cbz	w9, 40d9e4 <ferror@plt+0xae34>
  40d9d8:	mov	w0, #0x22                  	// #34
  40d9dc:	bl	402600 <putc@plt>
  40d9e0:	b	40d54c <ferror@plt+0xa99c>
  40d9e4:	ldr	w8, [x24, #2800]
  40d9e8:	cbz	w8, 40da10 <ferror@plt+0xae60>
  40d9ec:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40d9f0:	ldr	x10, [x9, #2808]
  40d9f4:	sub	w8, w8, #0x1
  40d9f8:	mov	w11, #0x22                  	// #34
  40d9fc:	str	w8, [x24, #2800]
  40da00:	add	x8, x10, #0x1
  40da04:	str	x8, [x9, #2808]
  40da08:	strb	w11, [x10]
  40da0c:	b	40d54c <ferror@plt+0xa99c>
  40da10:	mov	w0, #0x22                  	// #34
  40da14:	bl	40da1c <ferror@plt+0xae6c>
  40da18:	b	40d54c <ferror@plt+0xa99c>
  40da1c:	stp	x29, x30, [sp, #-32]!
  40da20:	str	x19, [sp, #16]
  40da24:	mov	w19, w0
  40da28:	mov	w0, #0x1                   	// #1
  40da2c:	mov	x29, sp
  40da30:	bl	40cfc4 <ferror@plt+0xa414>
  40da34:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40da38:	ldr	x1, [x8, #2696]
  40da3c:	cbz	x1, 40da4c <ferror@plt+0xae9c>
  40da40:	mov	w0, w19
  40da44:	bl	402600 <putc@plt>
  40da48:	b	40da70 <ferror@plt+0xaec0>
  40da4c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40da50:	ldr	x9, [x8, #2808]
  40da54:	add	x10, x9, #0x1
  40da58:	str	x10, [x8, #2808]
  40da5c:	strb	w19, [x9]
  40da60:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40da64:	ldr	w9, [x8, #2800]
  40da68:	sub	w9, w9, #0x1
  40da6c:	str	w9, [x8, #2800]
  40da70:	ldr	x19, [sp, #16]
  40da74:	ldp	x29, x30, [sp], #32
  40da78:	ret
  40da7c:	sub	sp, sp, #0x40
  40da80:	stp	x20, x19, [sp, #48]
  40da84:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40da88:	ldr	w8, [x19, #3588]
  40da8c:	stp	x29, x30, [sp, #16]
  40da90:	add	x29, sp, #0x10
  40da94:	stp	x22, x21, [sp, #32]
  40da98:	cmp	w8, w0
  40da9c:	stur	w0, [x29, #-4]
  40daa0:	b.eq	40dce0 <ferror@plt+0xb130>  // b.none
  40daa4:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40daa8:	ldr	x1, [x20, #2688]
  40daac:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dab0:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dab4:	cbz	x1, 40dae0 <ferror@plt+0xaf30>
  40dab8:	ldr	w8, [x1, #12]
  40dabc:	cbz	w8, 40db2c <ferror@plt+0xaf7c>
  40dac0:	ldr	w9, [x22, #2800]
  40dac4:	sub	w8, w8, w9
  40dac8:	str	w8, [x1, #16]
  40dacc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dad0:	str	xzr, [x20, #2688]
  40dad4:	str	xzr, [x21, #2808]
  40dad8:	str	xzr, [x8, #2696]
  40dadc:	str	wzr, [x22, #2800]
  40dae0:	ldur	w8, [x29, #-4]
  40dae4:	str	w8, [x19, #3588]
  40dae8:	tbnz	w8, #31, 40dce0 <ferror@plt+0xb130>
  40daec:	cbz	w8, 40db74 <ferror@plt+0xafc4>
  40daf0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40daf4:	ldr	x0, [x8, #2656]
  40daf8:	adrp	x1, 40d000 <ferror@plt+0xa450>
  40dafc:	add	x1, x1, #0xdd8
  40db00:	sub	x2, x29, #0x4
  40db04:	mov	x3, sp
  40db08:	bl	412c8c <ferror@plt+0x100dc>
  40db0c:	tbz	w0, #0, 40db84 <ferror@plt+0xafd4>
  40db10:	ldr	x8, [sp]
  40db14:	ldur	w10, [x29, #-4]
  40db18:	ldr	w9, [x8, #8]
  40db1c:	cmp	w9, w10
  40db20:	csel	x19, x8, xzr, eq  // eq = none
  40db24:	cbnz	x19, 40dc78 <ferror@plt+0xb0c8>
  40db28:	b	40db8c <ferror@plt+0xafdc>
  40db2c:	ldr	x9, [x1]
  40db30:	cbz	x9, 40dba4 <ferror@plt+0xaff4>
  40db34:	cbnz	w8, 40dac0 <ferror@plt+0xaf10>
  40db38:	ldr	w8, [x1, #16]
  40db3c:	cbz	w8, 40dacc <ferror@plt+0xaf1c>
  40db40:	ldr	w8, [x1, #8]
  40db44:	ldr	x0, [x1]
  40db48:	str	xzr, [x1]
  40db4c:	mov	w1, w8
  40db50:	bl	40dd34 <ferror@plt+0xb184>
  40db54:	cbz	w0, 40dacc <ferror@plt+0xaf1c>
  40db58:	bl	402b30 <__errno_location@plt>
  40db5c:	ldr	w1, [x0]
  40db60:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40db64:	add	x2, x2, #0xbfb
  40db68:	mov	w0, wzr
  40db6c:	bl	402cbc <ferror@plt+0x10c>
  40db70:	b	40dacc <ferror@plt+0xaf1c>
  40db74:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40db78:	add	x19, x19, #0xa68
  40db7c:	cbnz	x19, 40dc78 <ferror@plt+0xb0c8>
  40db80:	b	40db8c <ferror@plt+0xafdc>
  40db84:	mov	x19, xzr
  40db88:	cbnz	x19, 40dc78 <ferror@plt+0xb0c8>
  40db8c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40db90:	ldr	x19, [x8, #2824]
  40db94:	cbz	x19, 40dbd4 <ferror@plt+0xb024>
  40db98:	ldr	x9, [x19]
  40db9c:	str	x9, [x8, #2824]
  40dba0:	b	40dc5c <ferror@plt+0xb0ac>
  40dba4:	ldr	w8, [x1, #16]
  40dba8:	cbnz	w8, 40dcf4 <ferror@plt+0xb144>
  40dbac:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dbb0:	ldr	x0, [x8, #2656]
  40dbb4:	bl	412cc8 <ferror@plt+0x10118>
  40dbb8:	tbz	w0, #0, 40dd14 <ferror@plt+0xb164>
  40dbbc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dbc0:	ldr	x9, [x20, #2688]
  40dbc4:	ldr	x10, [x8, #2824]
  40dbc8:	str	x10, [x9]
  40dbcc:	str	x9, [x8, #2824]
  40dbd0:	b	40dacc <ferror@plt+0xaf1c>
  40dbd4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dbd8:	add	x8, x8, #0xaa8
  40dbdc:	ldp	x8, x9, [x8]
  40dbe0:	sub	x8, x9, x8
  40dbe4:	cmp	x8, #0x17
  40dbe8:	b.hi	40dbfc <ferror@plt+0xb04c>  // b.pmore
  40dbec:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dbf0:	add	x0, x0, #0xa90
  40dbf4:	mov	w1, #0x18                  	// #24
  40dbf8:	bl	41659c <_obstack_newchunk@@Base>
  40dbfc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dc00:	add	x8, x8, #0xaa0
  40dc04:	ldp	x19, x9, [x8]
  40dc08:	add	x9, x9, #0x18
  40dc0c:	cmp	x9, x19
  40dc10:	str	x9, [x8, #8]
  40dc14:	b.ne	40dc28 <ferror@plt+0xb078>  // b.any
  40dc18:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dc1c:	ldrb	w9, [x8, #2784]
  40dc20:	orr	w9, w9, #0x2
  40dc24:	strb	w9, [x8, #2784]
  40dc28:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dc2c:	add	x8, x8, #0xa98
  40dc30:	ldr	x9, [x8, #40]
  40dc34:	ldp	x11, x12, [x8, #16]
  40dc38:	ldr	x10, [x8]
  40dc3c:	add	x11, x9, x11
  40dc40:	bic	x9, x11, x9
  40dc44:	sub	x13, x12, x10
  40dc48:	sub	x10, x9, x10
  40dc4c:	cmp	x10, x13
  40dc50:	csel	x9, x12, x9, hi  // hi = pmore
  40dc54:	stp	x9, x9, [x8, #8]
  40dc58:	stur	xzr, [x19, #12]
  40dc5c:	str	xzr, [x19]
  40dc60:	ldur	w8, [x29, #-4]
  40dc64:	mov	x1, x19
  40dc68:	str	w8, [x19, #8]
  40dc6c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dc70:	ldr	x0, [x8, #2656]
  40dc74:	bl	415be8 <ferror@plt+0x13038>
  40dc78:	str	x19, [x20, #2688]
  40dc7c:	ldr	w8, [x19, #12]
  40dc80:	cbz	w8, 40dca0 <ferror@plt+0xb0f0>
  40dc84:	ldr	x9, [x19]
  40dc88:	ldrsw	x10, [x19, #16]
  40dc8c:	add	x9, x9, x10
  40dc90:	sub	w8, w8, w10
  40dc94:	str	x9, [x21, #2808]
  40dc98:	str	w8, [x22, #2800]
  40dc9c:	b	40dcd4 <ferror@plt+0xb124>
  40dca0:	ldr	x8, [x19]
  40dca4:	cbnz	x8, 40dcc4 <ferror@plt+0xb114>
  40dca8:	ldr	w8, [x19, #16]
  40dcac:	cbz	w8, 40dcc4 <ferror@plt+0xb114>
  40dcb0:	ldr	w0, [x19, #8]
  40dcb4:	mov	w1, wzr
  40dcb8:	bl	40ddec <ferror@plt+0xb23c>
  40dcbc:	ldr	x8, [x20, #2688]
  40dcc0:	str	x0, [x8]
  40dcc4:	ldr	x8, [x20, #2688]
  40dcc8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dccc:	ldr	x8, [x8]
  40dcd0:	str	x8, [x9, #2696]
  40dcd4:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40dcd8:	mov	w9, #0xffffffff            	// #-1
  40dcdc:	str	w9, [x8, #3584]
  40dce0:	ldp	x20, x19, [sp, #48]
  40dce4:	ldp	x22, x21, [sp, #32]
  40dce8:	ldp	x29, x30, [sp, #16]
  40dcec:	add	sp, sp, #0x40
  40dcf0:	ret
  40dcf4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40dcf8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40dcfc:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  40dd00:	add	x0, x0, #0xbbb
  40dd04:	add	x1, x1, #0xbd3
  40dd08:	add	x3, x3, #0xbdc
  40dd0c:	mov	w2, #0x2dd                 	// #733
  40dd10:	bl	402b20 <__assert_fail@plt>
  40dd14:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40dd18:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40dd1c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  40dd20:	add	x0, x0, #0xbf5
  40dd24:	add	x1, x1, #0xbd3
  40dd28:	add	x3, x3, #0xbdc
  40dd2c:	mov	w2, #0x2df                 	// #735
  40dd30:	bl	402b20 <__assert_fail@plt>
  40dd34:	stp	x29, x30, [sp, #-48]!
  40dd38:	stp	x22, x21, [sp, #16]
  40dd3c:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dd40:	ldr	w8, [x21, #2792]
  40dd44:	stp	x20, x19, [sp, #32]
  40dd48:	mov	x29, sp
  40dd4c:	cmp	w8, w1
  40dd50:	b.eq	40dd68 <ferror@plt+0xb1b8>  // b.none
  40dd54:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dd58:	ldr	w9, [x22, #2796]
  40dd5c:	mov	w19, w1
  40dd60:	cmp	w9, w1
  40dd64:	b.ne	40dd7c <ferror@plt+0xb1cc>  // b.any
  40dd68:	mov	w0, wzr
  40dd6c:	ldp	x20, x19, [sp, #32]
  40dd70:	ldp	x22, x21, [sp, #16]
  40dd74:	ldp	x29, x30, [sp], #48
  40dd78:	ret
  40dd7c:	adrp	x10, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40dd80:	ldrb	w10, [x10, #2876]
  40dd84:	mov	x20, x0
  40dd88:	cmp	w10, #0x1
  40dd8c:	b.ne	40dda4 <ferror@plt+0xb1f4>  // b.any
  40dd90:	adrp	x22, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40dd94:	cbz	w8, 40ddb8 <ferror@plt+0xb208>
  40dd98:	ldr	x0, [x22, #2832]
  40dd9c:	bl	410528 <ferror@plt+0xd978>
  40dda0:	b	40ddbc <ferror@plt+0xb20c>
  40dda4:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40dda8:	cbz	w9, 40ddc8 <ferror@plt+0xb218>
  40ddac:	ldr	x0, [x21, #2840]
  40ddb0:	bl	410528 <ferror@plt+0xd978>
  40ddb4:	b	40ddcc <ferror@plt+0xb21c>
  40ddb8:	mov	w0, wzr
  40ddbc:	str	x20, [x22, #2832]
  40ddc0:	str	w19, [x21, #2792]
  40ddc4:	b	40dd6c <ferror@plt+0xb1bc>
  40ddc8:	mov	w0, wzr
  40ddcc:	str	x20, [x21, #2840]
  40ddd0:	str	w19, [x22, #2796]
  40ddd4:	b	40dd6c <ferror@plt+0xb1bc>
  40ddd8:	ldr	w8, [x0, #8]
  40dddc:	ldr	w9, [x1]
  40dde0:	cmp	w8, w9
  40dde4:	cset	w0, ge  // ge = tcont
  40dde8:	ret
  40ddec:	stp	x29, x30, [sp, #-32]!
  40ddf0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ddf4:	ldr	w8, [x8, #2792]
  40ddf8:	stp	x20, x19, [sp, #16]
  40ddfc:	mov	w20, w1
  40de00:	mov	x29, sp
  40de04:	cmp	w8, w0
  40de08:	b.ne	40de50 <ferror@plt+0xb2a0>  // b.any
  40de0c:	adrp	x19, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40de10:	tbz	w20, #0, 40de40 <ferror@plt+0xb290>
  40de14:	ldr	x0, [x19, #2832]
  40de18:	mov	x1, xzr
  40de1c:	mov	w2, wzr
  40de20:	bl	4163b0 <ferror@plt+0x13800>
  40de24:	cbz	w0, 40de40 <ferror@plt+0xb290>
  40de28:	bl	402b30 <__errno_location@plt>
  40de2c:	ldr	w1, [x0]
  40de30:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40de34:	add	x2, x2, #0xd6f
  40de38:	mov	w0, #0x1                   	// #1
  40de3c:	bl	402cbc <ferror@plt+0x10c>
  40de40:	ldr	x19, [x19, #2832]
  40de44:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40de48:	strb	wzr, [x8, #2876]
  40de4c:	b	40df04 <ferror@plt+0xb354>
  40de50:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40de54:	ldr	w8, [x8, #2796]
  40de58:	cmp	w8, w0
  40de5c:	b.ne	40dea8 <ferror@plt+0xb2f8>  // b.any
  40de60:	adrp	x19, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40de64:	tbz	w20, #0, 40de94 <ferror@plt+0xb2e4>
  40de68:	ldr	x0, [x19, #2840]
  40de6c:	mov	x1, xzr
  40de70:	mov	w2, wzr
  40de74:	bl	4163b0 <ferror@plt+0x13800>
  40de78:	cbz	w0, 40de94 <ferror@plt+0xb2e4>
  40de7c:	bl	402b30 <__errno_location@plt>
  40de80:	ldr	w1, [x0]
  40de84:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40de88:	add	x2, x2, #0xd6f
  40de8c:	mov	w0, #0x1                   	// #1
  40de90:	bl	402cbc <ferror@plt+0x10c>
  40de94:	ldr	x19, [x19, #2840]
  40de98:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40de9c:	mov	w9, #0x1                   	// #1
  40dea0:	strb	w9, [x8, #2876]
  40dea4:	b	40df04 <ferror@plt+0xb354>
  40dea8:	bl	40e48c <ferror@plt+0xb8dc>
  40deac:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40deb0:	add	x1, x1, #0xd8c
  40deb4:	bl	4103d8 <ferror@plt+0xd828>
  40deb8:	mov	x19, x0
  40debc:	cbz	x0, 40deec <ferror@plt+0xb33c>
  40dec0:	mov	x0, x19
  40dec4:	bl	402690 <fileno@plt>
  40dec8:	mov	w1, #0x1                   	// #1
  40decc:	bl	4106d8 <ferror@plt+0xdb28>
  40ded0:	cbz	w0, 40df14 <ferror@plt+0xb364>
  40ded4:	bl	402b30 <__errno_location@plt>
  40ded8:	ldr	w1, [x0]
  40dedc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40dee0:	add	x2, x2, #0xd1f
  40dee4:	mov	w0, wzr
  40dee8:	b	40df00 <ferror@plt+0xb350>
  40deec:	bl	402b30 <__errno_location@plt>
  40def0:	ldr	w1, [x0]
  40def4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40def8:	add	x2, x2, #0xce8
  40defc:	mov	w0, #0x1                   	// #1
  40df00:	bl	402cbc <ferror@plt+0x10c>
  40df04:	mov	x0, x19
  40df08:	ldp	x20, x19, [sp, #16]
  40df0c:	ldp	x29, x30, [sp], #32
  40df10:	ret
  40df14:	tbnz	w20, #0, 40df04 <ferror@plt+0xb354>
  40df18:	mov	w2, #0x2                   	// #2
  40df1c:	mov	x0, x19
  40df20:	mov	x1, xzr
  40df24:	bl	4163b0 <ferror@plt+0x13800>
  40df28:	cbz	w0, 40df04 <ferror@plt+0xb354>
  40df2c:	bl	402b30 <__errno_location@plt>
  40df30:	ldr	w1, [x0]
  40df34:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40df38:	add	x2, x2, #0xd6f
  40df3c:	b	40defc <ferror@plt+0xb34c>
  40df40:	stp	x29, x30, [sp, #-48]!
  40df44:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40df48:	ldr	x8, [x8, #2688]
  40df4c:	stp	x22, x21, [sp, #16]
  40df50:	stp	x20, x19, [sp, #32]
  40df54:	mov	x29, sp
  40df58:	cbz	x8, 40dfbc <ferror@plt+0xb40c>
  40df5c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40df60:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x282c>
  40df64:	mov	x19, x0
  40df68:	add	x20, x20, #0xb10
  40df6c:	add	x21, x21, #0xc25
  40df70:	mov	w1, #0x1                   	// #1
  40df74:	mov	w2, #0x4000                	// #16384
  40df78:	mov	x0, x20
  40df7c:	mov	x3, x19
  40df80:	bl	402990 <fread@plt>
  40df84:	mov	x22, x0
  40df88:	mov	x0, x19
  40df8c:	bl	402bb0 <ferror@plt>
  40df90:	cbz	w0, 40dfa8 <ferror@plt+0xb3f8>
  40df94:	bl	402b30 <__errno_location@plt>
  40df98:	ldr	w1, [x0]
  40df9c:	mov	w0, #0x1                   	// #1
  40dfa0:	mov	x2, x21
  40dfa4:	bl	402cbc <ferror@plt+0x10c>
  40dfa8:	cbz	x22, 40dfbc <ferror@plt+0xb40c>
  40dfac:	mov	x0, x20
  40dfb0:	mov	w1, w22
  40dfb4:	bl	40cef4 <ferror@plt+0xa344>
  40dfb8:	b	40df70 <ferror@plt+0xb3c0>
  40dfbc:	ldp	x20, x19, [sp, #32]
  40dfc0:	ldp	x22, x21, [sp, #16]
  40dfc4:	ldp	x29, x30, [sp], #48
  40dfc8:	ret
  40dfcc:	sub	sp, sp, #0x20
  40dfd0:	stp	x29, x30, [sp, #16]
  40dfd4:	add	x29, sp, #0x10
  40dfd8:	cmp	w0, #0x1
  40dfdc:	stur	w0, [x29, #-4]
  40dfe0:	b.lt	40e02c <ferror@plt+0xb47c>  // b.tstop
  40dfe4:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40dfe8:	ldr	w8, [x8, #3588]
  40dfec:	cmp	w8, w0
  40dff0:	b.eq	40e02c <ferror@plt+0xb47c>  // b.none
  40dff4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40dff8:	ldr	x0, [x8, #2656]
  40dffc:	adrp	x1, 40d000 <ferror@plt+0xa450>
  40e000:	add	x1, x1, #0xdd8
  40e004:	sub	x2, x29, #0x4
  40e008:	mov	x3, sp
  40e00c:	bl	412c8c <ferror@plt+0x100dc>
  40e010:	tbz	w0, #0, 40e02c <ferror@plt+0xb47c>
  40e014:	ldr	x0, [sp]
  40e018:	ldur	w9, [x29, #-4]
  40e01c:	ldr	w8, [x0, #8]
  40e020:	cmp	w8, w9
  40e024:	b.ne	40e02c <ferror@plt+0xb47c>  // b.any
  40e028:	bl	40e038 <ferror@plt+0xb488>
  40e02c:	ldp	x29, x30, [sp, #16]
  40e030:	add	sp, sp, #0x20
  40e034:	ret
  40e038:	stp	x29, x30, [sp, #-48]!
  40e03c:	stp	x20, x19, [sp, #32]
  40e040:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e044:	ldr	x8, [x20, #2688]
  40e048:	mov	x19, x0
  40e04c:	str	x21, [sp, #16]
  40e050:	mov	x29, sp
  40e054:	cbz	x8, 40e168 <ferror@plt+0xb5b8>
  40e058:	ldr	w9, [x19, #12]
  40e05c:	ldr	x10, [x8]
  40e060:	cbz	w9, 40e088 <ferror@plt+0xb4d8>
  40e064:	cbz	x10, 40e0b0 <ferror@plt+0xb500>
  40e068:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e06c:	ldr	w10, [x8, #2872]
  40e070:	sub	w9, w10, w9
  40e074:	str	w9, [x8, #2872]
  40e078:	ldr	x0, [x19]
  40e07c:	ldr	w1, [x19, #16]
  40e080:	bl	40cef4 <ferror@plt+0xa344>
  40e084:	b	40e15c <ferror@plt+0xb5ac>
  40e088:	cbz	x10, 40e110 <ferror@plt+0xb560>
  40e08c:	ldr	x8, [x19]
  40e090:	cbnz	x8, 40e0a4 <ferror@plt+0xb4f4>
  40e094:	ldr	w0, [x19, #8]
  40e098:	mov	w1, #0x1                   	// #1
  40e09c:	bl	40ddec <ferror@plt+0xb23c>
  40e0a0:	str	x0, [x19]
  40e0a4:	ldr	x0, [x19]
  40e0a8:	bl	40df40 <ferror@plt+0xb390>
  40e0ac:	b	40e15c <ferror@plt+0xb5ac>
  40e0b0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e0b4:	add	x9, x9, #0xa68
  40e0b8:	cmp	x8, x9
  40e0bc:	b.eq	40e220 <ferror@plt+0xb670>  // b.none
  40e0c0:	ldr	w9, [x8, #16]
  40e0c4:	cbnz	w9, 40e220 <ferror@plt+0xb670>
  40e0c8:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e0cc:	ldr	x9, [x9, #2696]
  40e0d0:	cbnz	x9, 40e220 <ferror@plt+0xb670>
  40e0d4:	ldr	x9, [x19]
  40e0d8:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e0dc:	str	x9, [x8]
  40e0e0:	ldr	w9, [x19, #12]
  40e0e4:	str	w9, [x8, #12]
  40e0e8:	ldr	x8, [x19]
  40e0ec:	ldrsw	x9, [x19, #16]
  40e0f0:	add	x8, x8, x9
  40e0f4:	str	x8, [x10, #2808]
  40e0f8:	ldr	w8, [x19, #12]
  40e0fc:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e100:	sub	w8, w8, w9
  40e104:	str	w8, [x10, #2800]
  40e108:	str	xzr, [x19]
  40e10c:	b	40e15c <ferror@plt+0xb5ac>
  40e110:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e114:	add	x9, x9, #0xa68
  40e118:	cmp	x8, x9
  40e11c:	b.eq	40e240 <ferror@plt+0xb690>  // b.none
  40e120:	ldr	w9, [x8, #16]
  40e124:	cbnz	w9, 40e240 <ferror@plt+0xb690>
  40e128:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e12c:	ldr	x9, [x21, #2696]
  40e130:	cbnz	x9, 40e240 <ferror@plt+0xb690>
  40e134:	ldr	w0, [x19, #8]
  40e138:	ldr	w1, [x8, #8]
  40e13c:	bl	40e7c8 <ferror@plt+0xbc18>
  40e140:	ldr	x8, [x20, #2688]
  40e144:	mov	w9, #0x1                   	// #1
  40e148:	str	x0, [x8]
  40e14c:	str	w9, [x8, #16]
  40e150:	str	x0, [x21, #2696]
  40e154:	str	xzr, [x19]
  40e158:	str	w9, [x19, #12]
  40e15c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40e160:	mov	w9, #0xffffffff            	// #-1
  40e164:	str	w9, [x8, #3584]
  40e168:	ldr	w8, [x19, #12]
  40e16c:	cbz	w8, 40e198 <ferror@plt+0xb5e8>
  40e170:	ldr	x9, [x20, #2688]
  40e174:	cbnz	x9, 40e188 <ferror@plt+0xb5d8>
  40e178:	adrp	x9, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e17c:	ldr	w10, [x9, #2872]
  40e180:	sub	w8, w10, w8
  40e184:	str	w8, [x9, #2872]
  40e188:	ldr	x0, [x19]
  40e18c:	bl	4029a0 <free@plt>
  40e190:	str	wzr, [x19, #12]
  40e194:	b	40e1ec <ferror@plt+0xb63c>
  40e198:	ldr	x0, [x19]
  40e19c:	cbz	x0, 40e1c8 <ferror@plt+0xb618>
  40e1a0:	ldr	w1, [x19, #8]
  40e1a4:	str	xzr, [x19]
  40e1a8:	bl	40dd34 <ferror@plt+0xb184>
  40e1ac:	cbz	w0, 40e1c8 <ferror@plt+0xb618>
  40e1b0:	bl	402b30 <__errno_location@plt>
  40e1b4:	ldr	w1, [x0]
  40e1b8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40e1bc:	add	x2, x2, #0xd45
  40e1c0:	mov	w0, wzr
  40e1c4:	bl	402cbc <ferror@plt+0x10c>
  40e1c8:	ldr	w0, [x19, #8]
  40e1cc:	bl	40ce64 <ferror@plt+0xa2b4>
  40e1d0:	cbz	w0, 40e1ec <ferror@plt+0xb63c>
  40e1d4:	bl	402b30 <__errno_location@plt>
  40e1d8:	ldr	w1, [x0]
  40e1dc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40e1e0:	add	x2, x2, #0xd45
  40e1e4:	mov	w0, wzr
  40e1e8:	bl	402cbc <ferror@plt+0x10c>
  40e1ec:	str	wzr, [x19, #16]
  40e1f0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e1f4:	ldr	x0, [x8, #2656]
  40e1f8:	mov	x1, x19
  40e1fc:	bl	412cc8 <ferror@plt+0x10118>
  40e200:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e204:	ldr	x9, [x8, #2824]
  40e208:	ldr	x21, [sp, #16]
  40e20c:	str	x9, [x19]
  40e210:	str	x19, [x8, #2824]
  40e214:	ldp	x20, x19, [sp, #32]
  40e218:	ldp	x29, x30, [sp], #48
  40e21c:	ret
  40e220:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40e224:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40e228:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  40e22c:	add	x0, x0, #0xd8f
  40e230:	add	x1, x1, #0xbd3
  40e234:	add	x3, x3, #0xdd4
  40e238:	mov	w2, #0x359                 	// #857
  40e23c:	bl	402b20 <__assert_fail@plt>
  40e240:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40e244:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40e248:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  40e24c:	add	x0, x0, #0xd8f
  40e250:	add	x1, x1, #0xbd3
  40e254:	add	x3, x3, #0xdd4
  40e258:	mov	w2, #0x36e                 	// #878
  40e25c:	bl	402b20 <__assert_fail@plt>
  40e260:	sub	sp, sp, #0x60
  40e264:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e268:	ldr	x0, [x8, #2656]
  40e26c:	add	x8, sp, #0x8
  40e270:	stp	x29, x30, [sp, #64]
  40e274:	str	x19, [sp, #80]
  40e278:	add	x29, sp, #0x40
  40e27c:	bl	412d04 <ferror@plt+0x10154>
  40e280:	add	x0, sp, #0x8
  40e284:	add	x1, x29, #0x18
  40e288:	bl	412d20 <ferror@plt+0x10170>
  40e28c:	tbz	w0, #0, 40e2c4 <ferror@plt+0xb714>
  40e290:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40e294:	b	40e2a8 <ferror@plt+0xb6f8>
  40e298:	add	x0, sp, #0x8
  40e29c:	add	x1, x29, #0x18
  40e2a0:	bl	412d20 <ferror@plt+0x10170>
  40e2a4:	tbz	w0, #0, 40e2c4 <ferror@plt+0xb714>
  40e2a8:	ldr	x0, [x29, #24]
  40e2ac:	ldr	w9, [x19, #3588]
  40e2b0:	ldr	w8, [x0, #8]
  40e2b4:	cmp	w8, w9
  40e2b8:	b.eq	40e298 <ferror@plt+0xb6e8>  // b.none
  40e2bc:	bl	40e038 <ferror@plt+0xb488>
  40e2c0:	b	40e298 <ferror@plt+0xb6e8>
  40e2c4:	add	x0, sp, #0x8
  40e2c8:	bl	412d40 <ferror@plt+0x10190>
  40e2cc:	ldr	x19, [sp, #80]
  40e2d0:	ldp	x29, x30, [sp, #64]
  40e2d4:	add	sp, sp, #0x60
  40e2d8:	ret
  40e2dc:	sub	sp, sp, #0x130
  40e2e0:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40e2e4:	stp	x20, x19, [sp, #288]
  40e2e8:	ldr	w20, [x8, #3588]
  40e2ec:	stp	x29, x30, [sp, #208]
  40e2f0:	add	x29, sp, #0xd0
  40e2f4:	mov	x19, x0
  40e2f8:	mov	w0, wzr
  40e2fc:	str	x28, [sp, #224]
  40e300:	stp	x26, x25, [sp, #240]
  40e304:	stp	x24, x23, [sp, #256]
  40e308:	stp	x22, x21, [sp, #272]
  40e30c:	sub	x21, x29, #0x40
  40e310:	bl	40da7c <ferror@plt+0xaecc>
  40e314:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e318:	ldr	x0, [x8, #2656]
  40e31c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e320:	str	x19, [x8, #2696]
  40e324:	add	x8, sp, #0x8
  40e328:	bl	412d04 <ferror@plt+0x10154>
  40e32c:	ldur	q0, [sp, #8]
  40e330:	ldur	q1, [sp, #24]
  40e334:	ldur	q2, [sp, #40]
  40e338:	ldr	x8, [sp, #56]
  40e33c:	sub	x0, x29, #0x40
  40e340:	sub	x1, x29, #0x48
  40e344:	stp	q0, q1, [x21]
  40e348:	str	q2, [x21, #32]
  40e34c:	stur	x8, [x29, #-16]
  40e350:	bl	412d20 <ferror@plt+0x10170>
  40e354:	mov	w26, wzr
  40e358:	tbz	w0, #0, 40e448 <ferror@plt+0xb898>
  40e35c:	adrp	x21, 419000 <_obstack_memory_used@@Base+0x282c>
  40e360:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x282c>
  40e364:	adrp	x23, 419000 <_obstack_memory_used@@Base+0x282c>
  40e368:	adrp	x24, 419000 <_obstack_memory_used@@Base+0x282c>
  40e36c:	mov	w26, wzr
  40e370:	add	x21, x21, #0xc49
  40e374:	add	x22, x22, #0xc5f
  40e378:	add	x23, x23, #0xc73
  40e37c:	add	x24, x24, #0xc41
  40e380:	b	40e3c0 <ferror@plt+0xb810>
  40e384:	ldr	w2, [x25, #8]
  40e388:	ldr	w3, [x25, #16]
  40e38c:	mov	x0, x19
  40e390:	mov	x1, x24
  40e394:	bl	415cfc <ferror@plt+0x1314c>
  40e398:	mov	x0, x25
  40e39c:	bl	40e038 <ferror@plt+0xb488>
  40e3a0:	mov	w0, #0xa                   	// #10
  40e3a4:	mov	x1, x19
  40e3a8:	bl	402600 <putc@plt>
  40e3ac:	ldr	w26, [x25, #8]
  40e3b0:	sub	x0, x29, #0x40
  40e3b4:	sub	x1, x29, #0x48
  40e3b8:	bl	412d20 <ferror@plt+0x10170>
  40e3bc:	tbz	w0, #0, 40e448 <ferror@plt+0xb898>
  40e3c0:	ldur	x25, [x29, #-72]
  40e3c4:	ldr	w8, [x25, #12]
  40e3c8:	cbnz	w8, 40e384 <ferror@plt+0xb7d4>
  40e3cc:	ldr	w9, [x25, #16]
  40e3d0:	cbz	w9, 40e3b0 <ferror@plt+0xb800>
  40e3d4:	cbnz	w8, 40e384 <ferror@plt+0xb7d4>
  40e3d8:	ldr	w0, [x25, #8]
  40e3dc:	mov	w1, #0x1                   	// #1
  40e3e0:	bl	40ddec <ferror@plt+0xb23c>
  40e3e4:	str	x0, [x25]
  40e3e8:	bl	402690 <fileno@plt>
  40e3ec:	add	x1, sp, #0x8
  40e3f0:	bl	417280 <_obstack_memory_used@@Base+0xaac>
  40e3f4:	tbnz	w0, #31, 40e428 <ferror@plt+0xb878>
  40e3f8:	ldr	x8, [sp, #56]
  40e3fc:	tbz	x8, #63, 40e410 <ferror@plt+0xb860>
  40e400:	mov	w0, #0x1                   	// #1
  40e404:	mov	w1, wzr
  40e408:	mov	x2, x22
  40e40c:	bl	402cbc <ferror@plt+0x10c>
  40e410:	ldr	w2, [x25, #8]
  40e414:	ldr	x3, [sp, #56]
  40e418:	mov	x0, x19
  40e41c:	mov	x1, x23
  40e420:	bl	415cfc <ferror@plt+0x1314c>
  40e424:	b	40e398 <ferror@plt+0xb7e8>
  40e428:	bl	402b30 <__errno_location@plt>
  40e42c:	ldr	w1, [x0]
  40e430:	mov	w0, #0x1                   	// #1
  40e434:	mov	x2, x21
  40e438:	bl	402cbc <ferror@plt+0x10c>
  40e43c:	ldr	x8, [sp, #56]
  40e440:	tbz	x8, #63, 40e410 <ferror@plt+0xb860>
  40e444:	b	40e400 <ferror@plt+0xb850>
  40e448:	sub	x0, x29, #0x40
  40e44c:	bl	412d40 <ferror@plt+0x10190>
  40e450:	cmp	w20, w26
  40e454:	b.eq	40e46c <ferror@plt+0xb8bc>  // b.none
  40e458:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40e45c:	add	x1, x1, #0xc7c
  40e460:	mov	x0, x19
  40e464:	mov	w2, w20
  40e468:	bl	415cfc <ferror@plt+0x1314c>
  40e46c:	ldp	x20, x19, [sp, #288]
  40e470:	ldp	x22, x21, [sp, #272]
  40e474:	ldp	x24, x23, [sp, #256]
  40e478:	ldp	x26, x25, [sp, #240]
  40e47c:	ldr	x28, [sp, #224]
  40e480:	ldp	x29, x30, [sp, #208]
  40e484:	add	sp, sp, #0x130
  40e488:	ret
  40e48c:	stp	x29, x30, [sp, #-64]!
  40e490:	stp	x22, x21, [sp, #32]
  40e494:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e498:	ldr	x8, [x21, #2856]
  40e49c:	stp	x20, x19, [sp, #48]
  40e4a0:	mov	w19, w0
  40e4a4:	adrp	x22, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e4a8:	str	x23, [sp, #16]
  40e4ac:	mov	x29, sp
  40e4b0:	cbnz	x8, 40e59c <ferror@plt+0xb9ec>
  40e4b4:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e4b8:	ldr	x8, [x8, #2848]
  40e4bc:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40e4c0:	add	x0, x0, #0xc84
  40e4c4:	mov	w2, #0x7fffffff            	// #2147483647
  40e4c8:	ldr	x1, [x8]
  40e4cc:	bl	41604c <ferror@plt+0x1349c>
  40e4d0:	str	x0, [x22, #2864]
  40e4d4:	bl	402540 <strlen@plt>
  40e4d8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e4dc:	add	x8, x8, #0xaa8
  40e4e0:	ldp	x8, x9, [x8]
  40e4e4:	add	x1, x0, #0x1
  40e4e8:	mov	x20, x0
  40e4ec:	sub	x8, x9, x8
  40e4f0:	cmp	x8, x1
  40e4f4:	b.cs	40e504 <ferror@plt+0xb954>  // b.hs, b.nlast
  40e4f8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e4fc:	add	x0, x0, #0xa90
  40e500:	bl	41659c <_obstack_newchunk@@Base>
  40e504:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e508:	add	x23, x23, #0xaa0
  40e50c:	ldr	x0, [x23, #8]
  40e510:	ldr	x1, [x22, #2864]
  40e514:	mov	x2, x20
  40e518:	bl	402510 <memcpy@plt>
  40e51c:	ldr	x8, [x23, #8]
  40e520:	add	x8, x8, x20
  40e524:	add	x9, x8, #0x1
  40e528:	str	x9, [x23, #8]
  40e52c:	strb	wzr, [x8]
  40e530:	ldp	x8, x9, [x23]
  40e534:	cmp	x9, x8
  40e538:	b.ne	40e54c <ferror@plt+0xb99c>  // b.any
  40e53c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e540:	ldrb	w10, [x9, #2784]
  40e544:	orr	w10, w10, #0x2
  40e548:	strb	w10, [x9, #2784]
  40e54c:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e550:	add	x9, x9, #0xa98
  40e554:	ldr	x10, [x9, #40]
  40e558:	ldp	x12, x13, [x9, #16]
  40e55c:	ldr	x11, [x9]
  40e560:	ldr	x0, [x22, #2864]
  40e564:	str	x8, [x21, #2856]
  40e568:	add	x12, x10, x12
  40e56c:	bic	x10, x12, x10
  40e570:	sub	x14, x13, x11
  40e574:	sub	x11, x10, x11
  40e578:	cmp	x11, x14
  40e57c:	csel	x10, x13, x10, hi  // hi = pmore
  40e580:	stp	x10, x10, [x9, #8]
  40e584:	bl	4029a0 <free@plt>
  40e588:	ldr	x0, [x21, #2856]
  40e58c:	mov	w1, #0x2d                  	// #45
  40e590:	bl	402880 <strrchr@plt>
  40e594:	add	x8, x0, #0x1
  40e598:	str	x8, [x22, #2864]
  40e59c:	cmp	w19, #0x0
  40e5a0:	b.le	40e5d8 <ferror@plt+0xba28>
  40e5a4:	ldr	x0, [x22, #2864]
  40e5a8:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  40e5ac:	add	x3, x3, #0x99f
  40e5b0:	mov	w1, #0x1                   	// #1
  40e5b4:	mov	x2, #0xffffffffffffffff    	// #-1
  40e5b8:	mov	w4, w19
  40e5bc:	bl	402560 <__sprintf_chk@plt>
  40e5c0:	ldr	x0, [x21, #2856]
  40e5c4:	ldp	x20, x19, [sp, #48]
  40e5c8:	ldp	x22, x21, [sp, #32]
  40e5cc:	ldr	x23, [sp, #16]
  40e5d0:	ldp	x29, x30, [sp], #64
  40e5d4:	ret
  40e5d8:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40e5dc:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40e5e0:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  40e5e4:	add	x0, x0, #0xc8d
  40e5e8:	add	x1, x1, #0xbd3
  40e5ec:	add	x3, x3, #0xc98
  40e5f0:	mov	w2, #0xc8                  	// #200
  40e5f4:	bl	402b20 <__assert_fail@plt>
  40e5f8:	stp	x29, x30, [sp, #-48]!
  40e5fc:	str	x21, [sp, #16]
  40e600:	adrp	x21, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e604:	ldr	x8, [x21, #2848]
  40e608:	stp	x20, x19, [sp, #32]
  40e60c:	mov	w19, w0
  40e610:	mov	x29, sp
  40e614:	cbnz	x8, 40e658 <ferror@plt+0xbaa8>
  40e618:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40e61c:	add	x0, x0, #0xce4
  40e620:	mov	w2, #0x1                   	// #1
  40e624:	mov	x1, xzr
  40e628:	bl	40fc30 <ferror@plt+0xd080>
  40e62c:	str	x0, [x21, #2848]
  40e630:	cbnz	x0, 40e64c <ferror@plt+0xba9c>
  40e634:	bl	402b30 <__errno_location@plt>
  40e638:	ldr	w1, [x0]
  40e63c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40e640:	add	x2, x2, #0xce8
  40e644:	mov	w0, #0x1                   	// #1
  40e648:	bl	402cbc <ferror@plt+0x10c>
  40e64c:	adrp	x0, 40e000 <ferror@plt+0xb450>
  40e650:	add	x0, x0, #0x6f8
  40e654:	bl	417260 <_obstack_memory_used@@Base+0xa8c>
  40e658:	mov	w0, w19
  40e65c:	bl	40e48c <ferror@plt+0xb8dc>
  40e660:	ldr	x8, [x21, #2848]
  40e664:	mov	x20, x0
  40e668:	mov	x1, x20
  40e66c:	mov	x0, x8
  40e670:	bl	40feac <ferror@plt+0xd2fc>
  40e674:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40e678:	add	x1, x1, #0xd13
  40e67c:	mov	x0, x20
  40e680:	bl	4103d8 <ferror@plt+0xd828>
  40e684:	mov	x19, x0
  40e688:	cbz	x0, 40e6c0 <ferror@plt+0xbb10>
  40e68c:	mov	x0, x19
  40e690:	bl	402690 <fileno@plt>
  40e694:	mov	w1, #0x1                   	// #1
  40e698:	bl	4106d8 <ferror@plt+0xdb28>
  40e69c:	cbz	w0, 40e6e4 <ferror@plt+0xbb34>
  40e6a0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e6a4:	ldr	w20, [x8, #1224]
  40e6a8:	bl	402b30 <__errno_location@plt>
  40e6ac:	ldr	w1, [x0]
  40e6b0:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40e6b4:	add	x2, x2, #0xd16
  40e6b8:	mov	w0, w20
  40e6bc:	b	40e6e0 <ferror@plt+0xbb30>
  40e6c0:	ldr	x0, [x21, #2848]
  40e6c4:	mov	x1, x20
  40e6c8:	bl	40fef0 <ferror@plt+0xd340>
  40e6cc:	bl	402b30 <__errno_location@plt>
  40e6d0:	ldr	w1, [x0]
  40e6d4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40e6d8:	add	x2, x2, #0xce8
  40e6dc:	mov	w0, #0x1                   	// #1
  40e6e0:	bl	402cbc <ferror@plt+0x10c>
  40e6e4:	mov	x0, x19
  40e6e8:	ldp	x20, x19, [sp, #32]
  40e6ec:	ldr	x21, [sp, #16]
  40e6f0:	ldp	x29, x30, [sp], #48
  40e6f4:	ret
  40e6f8:	sub	sp, sp, #0x60
  40e6fc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e700:	ldr	x0, [x8, #2656]
  40e704:	stp	x29, x30, [sp, #64]
  40e708:	stp	x20, x19, [sp, #80]
  40e70c:	add	x29, sp, #0x40
  40e710:	cbz	x0, 40e794 <ferror@plt+0xbbe4>
  40e714:	mov	x8, sp
  40e718:	bl	412d04 <ferror@plt+0x10154>
  40e71c:	mov	x0, sp
  40e720:	sub	x1, x29, #0x8
  40e724:	bl	412d20 <ferror@plt+0x10170>
  40e728:	mov	w20, wzr
  40e72c:	tbz	w0, #0, 40e784 <ferror@plt+0xbbd4>
  40e730:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x282c>
  40e734:	add	x19, x19, #0xd45
  40e738:	b	40e74c <ferror@plt+0xbb9c>
  40e73c:	mov	x0, sp
  40e740:	sub	x1, x29, #0x8
  40e744:	bl	412d20 <ferror@plt+0x10170>
  40e748:	tbz	w0, #0, 40e784 <ferror@plt+0xbbd4>
  40e74c:	ldur	x8, [x29, #-8]
  40e750:	ldr	w9, [x8, #12]
  40e754:	cbnz	w9, 40e73c <ferror@plt+0xbb8c>
  40e758:	ldr	x0, [x8]
  40e75c:	cbz	x0, 40e73c <ferror@plt+0xbb8c>
  40e760:	bl	410528 <ferror@plt+0xd978>
  40e764:	cbz	w0, 40e73c <ferror@plt+0xbb8c>
  40e768:	bl	402b30 <__errno_location@plt>
  40e76c:	ldr	w1, [x0]
  40e770:	mov	w0, wzr
  40e774:	mov	x2, x19
  40e778:	bl	402cbc <ferror@plt+0x10c>
  40e77c:	mov	w20, #0x1                   	// #1
  40e780:	b	40e73c <ferror@plt+0xbb8c>
  40e784:	mov	x0, sp
  40e788:	bl	412d40 <ferror@plt+0x10190>
  40e78c:	and	w19, w20, #0x1
  40e790:	b	40e798 <ferror@plt+0xbbe8>
  40e794:	mov	w19, wzr
  40e798:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e79c:	ldr	x0, [x8, #2848]
  40e7a0:	bl	410258 <ferror@plt+0xd6a8>
  40e7a4:	tbnz	w19, #0, 40e7bc <ferror@plt+0xbc0c>
  40e7a8:	cbnz	w0, 40e7bc <ferror@plt+0xbc0c>
  40e7ac:	ldp	x20, x19, [sp, #80]
  40e7b0:	ldp	x29, x30, [sp, #64]
  40e7b4:	add	sp, sp, #0x60
  40e7b8:	ret
  40e7bc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e7c0:	ldr	w0, [x8, #892]
  40e7c4:	bl	402530 <_exit@plt>
  40e7c8:	stp	x29, x30, [sp, #-64]!
  40e7cc:	str	x23, [sp, #16]
  40e7d0:	stp	x22, x21, [sp, #32]
  40e7d4:	stp	x20, x19, [sp, #48]
  40e7d8:	mov	x29, sp
  40e7dc:	mov	w19, w1
  40e7e0:	mov	w21, w0
  40e7e4:	bl	40e48c <ferror@plt+0xb8dc>
  40e7e8:	bl	415a38 <ferror@plt+0x12e88>
  40e7ec:	mov	x20, x0
  40e7f0:	mov	w0, w19
  40e7f4:	bl	40e48c <ferror@plt+0xb8dc>
  40e7f8:	adrp	x23, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e7fc:	ldr	x8, [x23, #2848]
  40e800:	mov	x22, x0
  40e804:	mov	x1, x22
  40e808:	mov	x0, x8
  40e80c:	bl	40feac <ferror@plt+0xd2fc>
  40e810:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e814:	add	x8, x8, #0xae8
  40e818:	ldr	w9, [x8]
  40e81c:	cmp	w9, w21
  40e820:	b.eq	40e838 <ferror@plt+0xbc88>  // b.none
  40e824:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e828:	add	x8, x8, #0xaec
  40e82c:	ldr	w9, [x8]
  40e830:	cmp	w9, w21
  40e834:	b.ne	40e83c <ferror@plt+0xbc8c>  // b.any
  40e838:	str	w19, [x8]
  40e83c:	mov	x0, x20
  40e840:	mov	x1, x22
  40e844:	bl	402a10 <rename@plt>
  40e848:	cbz	w0, 40e864 <ferror@plt+0xbcb4>
  40e84c:	bl	402b30 <__errno_location@plt>
  40e850:	ldr	w1, [x0]
  40e854:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40e858:	add	x2, x2, #0xce8
  40e85c:	mov	w0, #0x1                   	// #1
  40e860:	bl	402cbc <ferror@plt+0x10c>
  40e864:	ldr	x0, [x23, #2848]
  40e868:	mov	x1, x20
  40e86c:	bl	40fef0 <ferror@plt+0xd340>
  40e870:	mov	x0, x20
  40e874:	bl	4029a0 <free@plt>
  40e878:	mov	w0, w19
  40e87c:	mov	w1, wzr
  40e880:	bl	40ddec <ferror@plt+0xb23c>
  40e884:	ldp	x20, x19, [sp, #48]
  40e888:	ldp	x22, x21, [sp, #32]
  40e88c:	ldr	x23, [sp, #16]
  40e890:	ldp	x29, x30, [sp], #64
  40e894:	ret
  40e898:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e89c:	adrp	x9, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e8a0:	adrp	x10, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e8a4:	str	xzr, [x8, #2880]
  40e8a8:	str	xzr, [x9, #2888]
  40e8ac:	str	wzr, [x10, #2896]
  40e8b0:	ret
  40e8b4:	stp	x29, x30, [sp, #-48]!
  40e8b8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e8bc:	ldr	w8, [x8, #1208]
  40e8c0:	str	x21, [sp, #16]
  40e8c4:	stp	x20, x19, [sp, #32]
  40e8c8:	mov	x29, sp
  40e8cc:	cbnz	w8, 40e924 <ferror@plt+0xbd74>
  40e8d0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  40e8d4:	add	x0, x0, #0xe01
  40e8d8:	bl	402b40 <getenv@plt>
  40e8dc:	cbz	x0, 40e924 <ferror@plt+0xbd74>
  40e8e0:	bl	415a38 <ferror@plt+0x12e88>
  40e8e4:	mov	x19, x0
  40e8e8:	mov	x20, x0
  40e8ec:	b	40e900 <ferror@plt+0xbd50>
  40e8f0:	mov	x0, x20
  40e8f4:	bl	40e934 <ferror@plt+0xbd84>
  40e8f8:	add	x20, x21, #0x1
  40e8fc:	cbz	x21, 40e91c <ferror@plt+0xbd6c>
  40e900:	mov	w1, #0x3a                  	// #58
  40e904:	mov	x0, x20
  40e908:	bl	402a00 <strchr@plt>
  40e90c:	mov	x21, x0
  40e910:	cbz	x0, 40e8f0 <ferror@plt+0xbd40>
  40e914:	strb	wzr, [x21]
  40e918:	b	40e8f0 <ferror@plt+0xbd40>
  40e91c:	mov	x0, x19
  40e920:	bl	4029a0 <free@plt>
  40e924:	ldp	x20, x19, [sp, #32]
  40e928:	ldr	x21, [sp, #16]
  40e92c:	ldp	x29, x30, [sp], #48
  40e930:	ret
  40e934:	stp	x29, x30, [sp, #-32]!
  40e938:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40e93c:	ldr	w8, [x8, #1208]
  40e940:	stp	x20, x19, [sp, #16]
  40e944:	mov	x29, sp
  40e948:	cbnz	w8, 40e9c0 <ferror@plt+0xbe10>
  40e94c:	ldrb	w8, [x0]
  40e950:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  40e954:	add	x9, x9, #0x1eb
  40e958:	cmp	w8, #0x0
  40e95c:	csel	x20, x9, x0, eq  // eq = none
  40e960:	mov	w0, #0x18                  	// #24
  40e964:	bl	4157d0 <ferror@plt+0x12c20>
  40e968:	mov	x19, x0
  40e96c:	str	xzr, [x0]
  40e970:	mov	x0, x20
  40e974:	bl	402540 <strlen@plt>
  40e978:	str	w0, [x19, #16]
  40e97c:	mov	x0, x20
  40e980:	bl	415a38 <ferror@plt+0x12e88>
  40e984:	adrp	x9, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e988:	ldr	w8, [x19, #16]
  40e98c:	ldr	w10, [x9, #2896]
  40e990:	str	x0, [x19, #8]
  40e994:	cmp	w8, w10
  40e998:	b.le	40e9a0 <ferror@plt+0xbdf0>
  40e99c:	str	w8, [x9, #2896]
  40e9a0:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e9a4:	ldr	x9, [x8, #2888]
  40e9a8:	adrp	x10, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40e9ac:	add	x10, x10, #0xb40
  40e9b0:	cmp	x9, #0x0
  40e9b4:	csel	x9, x10, x9, eq  // eq = none
  40e9b8:	str	x19, [x9]
  40e9bc:	str	x19, [x8, #2888]
  40e9c0:	ldp	x20, x19, [sp, #16]
  40e9c4:	ldp	x29, x30, [sp], #32
  40e9c8:	ret
  40e9cc:	stp	x29, x30, [sp, #-80]!
  40e9d0:	stp	x20, x19, [sp, #64]
  40e9d4:	mov	x19, x1
  40e9d8:	mov	x20, x0
  40e9dc:	str	x25, [sp, #16]
  40e9e0:	stp	x24, x23, [sp, #32]
  40e9e4:	stp	x22, x21, [sp, #48]
  40e9e8:	mov	x29, sp
  40e9ec:	cbz	x1, 40e9f4 <ferror@plt+0xbe44>
  40e9f0:	str	xzr, [x19]
  40e9f4:	ldrb	w8, [x20]
  40e9f8:	cbz	w8, 40ea20 <ferror@plt+0xbe70>
  40e9fc:	mov	x0, x20
  40ea00:	bl	40eb10 <ferror@plt+0xbf60>
  40ea04:	mov	x21, x0
  40ea08:	cbz	x0, 40ea4c <ferror@plt+0xbe9c>
  40ea0c:	cbz	x19, 40ea30 <ferror@plt+0xbe80>
  40ea10:	mov	x0, x20
  40ea14:	bl	415a38 <ferror@plt+0x12e88>
  40ea18:	str	x0, [x19]
  40ea1c:	b	40ea30 <ferror@plt+0xbe80>
  40ea20:	bl	402b30 <__errno_location@plt>
  40ea24:	mov	w8, #0x2                   	// #2
  40ea28:	mov	x21, xzr
  40ea2c:	str	w8, [x0]
  40ea30:	mov	x0, x21
  40ea34:	ldp	x20, x19, [sp, #64]
  40ea38:	ldp	x22, x21, [sp, #48]
  40ea3c:	ldp	x24, x23, [sp, #32]
  40ea40:	ldr	x25, [sp, #16]
  40ea44:	ldp	x29, x30, [sp], #80
  40ea48:	ret
  40ea4c:	ldrb	w8, [x20]
  40ea50:	cmp	w8, #0x2f
  40ea54:	b.eq	40ea30 <ferror@plt+0xbe80>  // b.none
  40ea58:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ea5c:	ldr	w8, [x8, #1208]
  40ea60:	cbnz	w8, 40ea30 <ferror@plt+0xbe80>
  40ea64:	bl	402b30 <__errno_location@plt>
  40ea68:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40ea6c:	ldr	x25, [x8, #2880]
  40ea70:	ldr	w24, [x0]
  40ea74:	mov	x23, x0
  40ea78:	cbz	x25, 40eaa8 <ferror@plt+0xbef8>
  40ea7c:	ldr	x0, [x25, #8]
  40ea80:	mov	x1, x20
  40ea84:	mov	x2, xzr
  40ea88:	bl	410f64 <ferror@plt+0xe3b4>
  40ea8c:	mov	x22, x0
  40ea90:	bl	40eb10 <ferror@plt+0xbf60>
  40ea94:	cbnz	x0, 40eab4 <ferror@plt+0xbf04>
  40ea98:	mov	x0, x22
  40ea9c:	bl	4029a0 <free@plt>
  40eaa0:	ldr	x25, [x25]
  40eaa4:	cbnz	x25, 40ea7c <ferror@plt+0xbecc>
  40eaa8:	mov	x21, xzr
  40eaac:	str	w24, [x23]
  40eab0:	b	40ea30 <ferror@plt+0xbe80>
  40eab4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40eab8:	ldrb	w8, [x8, #1204]
  40eabc:	mov	x21, x0
  40eac0:	tbz	w8, #6, 40eaf8 <ferror@plt+0xbf48>
  40eac4:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40eac8:	ldr	x8, [x23, #2120]
  40eacc:	cbz	x8, 40eaf8 <ferror@plt+0xbf48>
  40ead0:	bl	407dec <ferror@plt+0x523c>
  40ead4:	ldr	x0, [x23, #2120]
  40ead8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40eadc:	add	x1, x1, #0xe08
  40eae0:	mov	x2, x20
  40eae4:	mov	x3, x22
  40eae8:	bl	415cfc <ferror@plt+0x1314c>
  40eaec:	ldr	x1, [x23, #2120]
  40eaf0:	mov	w0, #0xa                   	// #10
  40eaf4:	bl	402600 <putc@plt>
  40eaf8:	cbz	x19, 40eb04 <ferror@plt+0xbf54>
  40eafc:	str	x22, [x19]
  40eb00:	b	40ea30 <ferror@plt+0xbe80>
  40eb04:	mov	x0, x22
  40eb08:	bl	4029a0 <free@plt>
  40eb0c:	b	40ea30 <ferror@plt+0xbe80>
  40eb10:	sub	sp, sp, #0xa0
  40eb14:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40eb18:	add	x1, x1, #0x284
  40eb1c:	stp	x29, x30, [sp, #128]
  40eb20:	stp	x20, x19, [sp, #144]
  40eb24:	add	x29, sp, #0x80
  40eb28:	bl	41107c <ferror@plt+0xe4cc>
  40eb2c:	mov	x19, x0
  40eb30:	cbz	x0, 40eba8 <ferror@plt+0xbff8>
  40eb34:	mov	x0, x19
  40eb38:	bl	402690 <fileno@plt>
  40eb3c:	mov	x1, sp
  40eb40:	mov	w20, w0
  40eb44:	bl	417280 <_obstack_memory_used@@Base+0xaac>
  40eb48:	cbnz	w0, 40eb78 <ferror@plt+0xbfc8>
  40eb4c:	ldr	w8, [sp, #16]
  40eb50:	and	w8, w8, #0xf000
  40eb54:	cmp	w8, #0x4, lsl #12
  40eb58:	b.ne	40eb78 <ferror@plt+0xbfc8>  // b.any
  40eb5c:	mov	x0, x19
  40eb60:	bl	4160c0 <ferror@plt+0x13510>
  40eb64:	bl	402b30 <__errno_location@plt>
  40eb68:	mov	w8, #0x15                  	// #21
  40eb6c:	mov	x19, xzr
  40eb70:	str	w8, [x0]
  40eb74:	b	40eba8 <ferror@plt+0xbff8>
  40eb78:	mov	w1, #0x1                   	// #1
  40eb7c:	mov	w0, w20
  40eb80:	bl	4106d8 <ferror@plt+0xdb28>
  40eb84:	cbz	w0, 40eba8 <ferror@plt+0xbff8>
  40eb88:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40eb8c:	ldr	w20, [x8, #1224]
  40eb90:	bl	402b30 <__errno_location@plt>
  40eb94:	ldr	w1, [x0]
  40eb98:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40eb9c:	add	x2, x2, #0xe28
  40eba0:	mov	w0, w20
  40eba4:	bl	402cbc <ferror@plt+0x10c>
  40eba8:	mov	x0, x19
  40ebac:	ldp	x20, x19, [sp, #144]
  40ebb0:	ldp	x29, x30, [sp, #128]
  40ebb4:	add	sp, sp, #0xa0
  40ebb8:	ret
  40ebbc:	stp	x29, x30, [sp, #-32]!
  40ebc0:	str	x19, [sp, #16]
  40ebc4:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ebc8:	ldr	x0, [x19, #880]
  40ebcc:	mov	w1, #0x8                   	// #8
  40ebd0:	mov	x29, sp
  40ebd4:	bl	41575c <ferror@plt+0x12bac>
  40ebd8:	ldr	x8, [x19, #880]
  40ebdc:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40ebe0:	str	x0, [x9, #3592]
  40ebe4:	cbz	x8, 40ec00 <ferror@plt+0xc050>
  40ebe8:	ldr	x8, [x19, #880]
  40ebec:	mov	w1, wzr
  40ebf0:	cmp	x8, #0x1
  40ebf4:	csinc	x8, x8, xzr, hi  // hi = pmore
  40ebf8:	lsl	x2, x8, #3
  40ebfc:	bl	4027a0 <memset@plt>
  40ec00:	ldr	x19, [sp, #16]
  40ec04:	ldp	x29, x30, [sp], #32
  40ec08:	ret
  40ec0c:	stp	x29, x30, [sp, #-32]!
  40ec10:	ldr	w8, [x0, #12]
  40ec14:	str	x19, [sp, #16]
  40ec18:	mov	x19, x0
  40ec1c:	mov	x29, sp
  40ec20:	cmp	w8, #0x1
  40ec24:	b.lt	40ec38 <ferror@plt+0xc088>  // b.tstop
  40ec28:	ldrb	w8, [x19, #8]
  40ec2c:	orr	w8, w8, #0x10
  40ec30:	strb	w8, [x19, #8]
  40ec34:	b	40ec5c <ferror@plt+0xc0ac>
  40ec38:	ldr	x0, [x19, #16]
  40ec3c:	bl	4029a0 <free@plt>
  40ec40:	ldr	w8, [x19, #24]
  40ec44:	cmp	w8, #0x1
  40ec48:	b.ne	40ec54 <ferror@plt+0xc0a4>  // b.any
  40ec4c:	ldr	x0, [x19, #32]
  40ec50:	bl	4029a0 <free@plt>
  40ec54:	mov	x0, x19
  40ec58:	bl	4029a0 <free@plt>
  40ec5c:	ldr	x19, [sp, #16]
  40ec60:	ldp	x29, x30, [sp], #32
  40ec64:	ret
  40ec68:	stp	x29, x30, [sp, #-80]!
  40ec6c:	str	x25, [sp, #16]
  40ec70:	stp	x24, x23, [sp, #32]
  40ec74:	stp	x22, x21, [sp, #48]
  40ec78:	stp	x20, x19, [sp, #64]
  40ec7c:	mov	x29, sp
  40ec80:	mov	w20, w1
  40ec84:	mov	x19, x0
  40ec88:	bl	40ef48 <ferror@plt+0xc398>
  40ec8c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ec90:	ldr	x8, [x8, #880]
  40ec94:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40ec98:	ldr	x9, [x9, #3592]
  40ec9c:	udiv	x10, x0, x8
  40eca0:	msub	x8, x10, x8, x0
  40eca4:	add	x23, x9, x8, lsl #3
  40eca8:	ldr	x21, [x23]
  40ecac:	cmp	x21, #0x0
  40ecb0:	cset	w25, ne  // ne = any
  40ecb4:	cbz	x21, 40ed78 <ferror@plt+0xc1c8>
  40ecb8:	ldr	x0, [x21, #16]
  40ecbc:	mov	x1, x19
  40ecc0:	bl	402940 <strcmp@plt>
  40ecc4:	mov	w22, w0
  40ecc8:	tbnz	w0, #31, 40ecd8 <ferror@plt+0xc128>
  40eccc:	mov	x24, xzr
  40ecd0:	cbnz	w20, 40ed04 <ferror@plt+0xc154>
  40ecd4:	b	40ed84 <ferror@plt+0xc1d4>
  40ecd8:	mov	x24, x21
  40ecdc:	ldr	x21, [x21]
  40ece0:	cmp	x21, #0x0
  40ece4:	cset	w25, ne  // ne = any
  40ece8:	cbz	x21, 40ed00 <ferror@plt+0xc150>
  40ecec:	ldr	x0, [x21, #16]
  40ecf0:	mov	x1, x19
  40ecf4:	bl	402940 <strcmp@plt>
  40ecf8:	mov	w22, w0
  40ecfc:	tbnz	w0, #31, 40ecd8 <ferror@plt+0xc128>
  40ed00:	cbz	w20, 40ed84 <ferror@plt+0xc1d4>
  40ed04:	cmp	x24, #0x0
  40ed08:	sub	w8, w20, #0x1
  40ed0c:	csel	x24, x23, x24, eq  // eq = none
  40ed10:	cmp	w8, #0x3
  40ed14:	b.hi	40ef2c <ferror@plt+0xc37c>  // b.pmore
  40ed18:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  40ed1c:	add	x9, x9, #0xe58
  40ed20:	adr	x10, 40ed30 <ferror@plt+0xc180>
  40ed24:	ldrb	w11, [x9, x8]
  40ed28:	add	x10, x10, x11, lsl #2
  40ed2c:	br	x10
  40ed30:	mov	x23, xzr
  40ed34:	cbz	x21, 40ef10 <ferror@plt+0xc360>
  40ed38:	cbnz	w22, 40ef10 <ferror@plt+0xc360>
  40ed3c:	ldr	x8, [x21]
  40ed40:	cbz	x8, 40ee84 <ferror@plt+0xc2d4>
  40ed44:	cmp	w20, #0x4
  40ed48:	b.ne	40ee84 <ferror@plt+0xc2d4>  // b.any
  40ed4c:	ldrb	w9, [x8, #8]
  40ed50:	tbz	w9, #1, 40ee84 <ferror@plt+0xc2d4>
  40ed54:	and	w9, w9, #0xfffffffd
  40ed58:	strb	w9, [x8, #8]
  40ed5c:	ldr	x8, [x21]
  40ed60:	ldrb	w9, [x21, #8]
  40ed64:	mov	w22, wzr
  40ed68:	ldrb	w10, [x8, #8]
  40ed6c:	bfxil	w10, w9, #0, #1
  40ed70:	strb	w10, [x8, #8]
  40ed74:	b	40ee8c <ferror@plt+0xc2dc>
  40ed78:	mov	x24, xzr
  40ed7c:	mov	w22, #0x1                   	// #1
  40ed80:	cbnz	w20, 40ed04 <ferror@plt+0xc154>
  40ed84:	cmp	w22, #0x0
  40ed88:	csel	x23, x21, xzr, eq  // eq = none
  40ed8c:	b	40ef10 <ferror@plt+0xc360>
  40ed90:	cmp	w22, #0x0
  40ed94:	cset	w8, ne  // ne = any
  40ed98:	eor	w9, w25, #0x1
  40ed9c:	orr	w8, w9, w8
  40eda0:	tbnz	w8, #0, 40ee0c <ferror@plt+0xc25c>
  40eda4:	ldr	w8, [x21, #12]
  40eda8:	cmp	w8, #0x1
  40edac:	b.lt	40ef0c <ferror@plt+0xc35c>  // b.tstop
  40edb0:	ldrb	w8, [x21, #8]
  40edb4:	mov	w0, #0x28                  	// #40
  40edb8:	orr	w8, w8, #0x10
  40edbc:	strb	w8, [x21, #8]
  40edc0:	bl	4157d0 <ferror@plt+0x12c20>
  40edc4:	str	wzr, [x0, #24]
  40edc8:	ldrb	w8, [x21, #8]
  40edcc:	ldrb	w9, [x0, #8]
  40edd0:	mov	x23, x0
  40edd4:	bfxil	w9, w8, #0, #1
  40edd8:	strb	w9, [x0, #8]
  40eddc:	mov	x0, x19
  40ede0:	bl	415a38 <ferror@plt+0x12e88>
  40ede4:	ldrb	w8, [x23, #8]
  40ede8:	str	x0, [x23, #16]
  40edec:	str	wzr, [x23, #12]
  40edf0:	and	w8, w8, #0xffffffe1
  40edf4:	strb	w8, [x23, #8]
  40edf8:	ldr	x8, [x21]
  40edfc:	str	x8, [x23]
  40ee00:	str	xzr, [x21]
  40ee04:	str	x23, [x24]
  40ee08:	b	40ef10 <ferror@plt+0xc360>
  40ee0c:	mov	w0, #0x28                  	// #40
  40ee10:	bl	4157d0 <ferror@plt+0x12c20>
  40ee14:	ldrb	w8, [x0, #8]
  40ee18:	mov	x23, x0
  40ee1c:	str	wzr, [x0, #24]
  40ee20:	and	w8, w8, #0xfe
  40ee24:	strb	w8, [x0, #8]
  40ee28:	mov	x0, x19
  40ee2c:	bl	415a38 <ferror@plt+0x12e88>
  40ee30:	ldrb	w8, [x23, #8]
  40ee34:	str	x0, [x23, #16]
  40ee38:	str	wzr, [x23, #12]
  40ee3c:	cmp	w20, #0x3
  40ee40:	and	w8, w8, #0xffffffe1
  40ee44:	strb	w8, [x23, #8]
  40ee48:	ldr	x8, [x24]
  40ee4c:	str	x8, [x23]
  40ee50:	str	x23, [x24]
  40ee54:	b.ne	40ef10 <ferror@plt+0xc360>  // b.any
  40ee58:	cbnz	w22, 40ef10 <ferror@plt+0xc360>
  40ee5c:	ldr	x8, [x23]
  40ee60:	ldrb	w9, [x8, #8]
  40ee64:	orr	w9, w9, #0x2
  40ee68:	strb	w9, [x8, #8]
  40ee6c:	ldr	x8, [x23]
  40ee70:	ldrb	w9, [x23, #8]
  40ee74:	ldrb	w8, [x8, #8]
  40ee78:	bfxil	w9, w8, #0, #1
  40ee7c:	strb	w9, [x23, #8]
  40ee80:	b	40ef10 <ferror@plt+0xc360>
  40ee84:	ldrb	w8, [x21, #8]
  40ee88:	and	w22, w8, #0x1
  40ee8c:	ldr	x8, [x21]
  40ee90:	mov	x0, x21
  40ee94:	str	x8, [x24]
  40ee98:	bl	40ec0c <ferror@plt+0xc05c>
  40ee9c:	ldr	x21, [x24]
  40eea0:	cbz	x21, 40eeb4 <ferror@plt+0xc304>
  40eea4:	cmp	w20, #0x2
  40eea8:	b.ne	40eeb4 <ferror@plt+0xc304>  // b.any
  40eeac:	ldrb	w8, [x21, #8]
  40eeb0:	tbnz	w8, #1, 40ee8c <ferror@plt+0xc2dc>
  40eeb4:	cbz	w22, 40ef04 <ferror@plt+0xc354>
  40eeb8:	mov	w0, #0x28                  	// #40
  40eebc:	bl	4157d0 <ferror@plt+0x12c20>
  40eec0:	ldrb	w8, [x0, #8]
  40eec4:	mov	x20, x0
  40eec8:	str	wzr, [x0, #24]
  40eecc:	orr	w8, w8, #0x1
  40eed0:	strb	w8, [x0, #8]
  40eed4:	mov	x0, x19
  40eed8:	bl	415a38 <ferror@plt+0x12e88>
  40eedc:	ldrb	w8, [x20, #8]
  40eee0:	str	x0, [x20, #16]
  40eee4:	str	wzr, [x20, #12]
  40eee8:	mov	x23, xzr
  40eeec:	and	w8, w8, #0xffffffe1
  40eef0:	strb	w8, [x20, #8]
  40eef4:	ldr	x8, [x24]
  40eef8:	str	x8, [x20]
  40eefc:	str	x20, [x24]
  40ef00:	b	40ef10 <ferror@plt+0xc360>
  40ef04:	mov	x23, xzr
  40ef08:	b	40ef10 <ferror@plt+0xc360>
  40ef0c:	mov	x23, x21
  40ef10:	mov	x0, x23
  40ef14:	ldp	x20, x19, [sp, #64]
  40ef18:	ldp	x22, x21, [sp, #48]
  40ef1c:	ldp	x24, x23, [sp, #32]
  40ef20:	ldr	x25, [sp, #16]
  40ef24:	ldp	x29, x30, [sp], #80
  40ef28:	ret
  40ef2c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ef30:	ldr	w0, [x8, #1224]
  40ef34:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40ef38:	add	x2, x2, #0xe5c
  40ef3c:	mov	w1, wzr
  40ef40:	bl	402cbc <ferror@plt+0x10c>
  40ef44:	bl	4028d0 <abort@plt>
  40ef48:	ldrb	w9, [x0]
  40ef4c:	cbz	w9, 40ef70 <ferror@plt+0xc3c0>
  40ef50:	mov	x8, x0
  40ef54:	mov	x0, xzr
  40ef58:	add	x8, x8, #0x1
  40ef5c:	ror	x10, x0, #57
  40ef60:	add	x0, x10, w9, uxtb
  40ef64:	ldrb	w9, [x8], #1
  40ef68:	cbnz	w9, 40ef5c <ferror@plt+0xc3ac>
  40ef6c:	ret
  40ef70:	mov	x0, xzr
  40ef74:	ret
  40ef78:	stp	x29, x30, [sp, #-64]!
  40ef7c:	stp	x22, x21, [sp, #32]
  40ef80:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40ef84:	ldr	x8, [x21, #880]
  40ef88:	stp	x24, x23, [sp, #16]
  40ef8c:	stp	x20, x19, [sp, #48]
  40ef90:	mov	x29, sp
  40ef94:	cbz	x8, 40efe0 <ferror@plt+0xc430>
  40ef98:	mov	x19, x1
  40ef9c:	mov	x20, x0
  40efa0:	mov	x22, xzr
  40efa4:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  40efa8:	b	40efbc <ferror@plt+0xc40c>
  40efac:	ldr	x8, [x21, #880]
  40efb0:	add	x22, x22, #0x1
  40efb4:	cmp	x22, x8
  40efb8:	b.cs	40efe0 <ferror@plt+0xc430>  // b.hs, b.nlast
  40efbc:	ldr	x8, [x23, #3592]
  40efc0:	ldr	x0, [x8, x22, lsl #3]
  40efc4:	cbz	x0, 40efac <ferror@plt+0xc3fc>
  40efc8:	ldr	x24, [x0]
  40efcc:	mov	x1, x19
  40efd0:	blr	x20
  40efd4:	mov	x0, x24
  40efd8:	cbnz	x24, 40efc8 <ferror@plt+0xc418>
  40efdc:	b	40efac <ferror@plt+0xc3fc>
  40efe0:	ldp	x20, x19, [sp, #48]
  40efe4:	ldp	x22, x21, [sp, #32]
  40efe8:	ldp	x24, x23, [sp, #16]
  40efec:	ldp	x29, x30, [sp], #64
  40eff0:	ret
  40eff4:	stp	x29, x30, [sp, #-32]!
  40eff8:	mov	x29, sp
  40effc:	str	xzr, [x29, #24]
  40f000:	str	x19, [sp, #16]
  40f004:	mov	x19, x0
  40f008:	ldr	x0, [x0, #24]
  40f00c:	cbz	x0, 40f01c <ferror@plt+0xc46c>
  40f010:	add	x2, x29, #0x18
  40f014:	mov	x1, xzr
  40f018:	bl	40f03c <ferror@plt+0xc48c>
  40f01c:	ldr	x8, [x19, #32]
  40f020:	ldr	x9, [x29, #24]
  40f024:	cmp	x8, x9
  40f028:	b.ne	40f038 <ferror@plt+0xc488>  // b.any
  40f02c:	ldr	x19, [sp, #16]
  40f030:	ldp	x29, x30, [sp], #32
  40f034:	ret
  40f038:	bl	4028d0 <abort@plt>
  40f03c:	stp	x29, x30, [sp, #-48]!
  40f040:	stp	x22, x21, [sp, #16]
  40f044:	stp	x20, x19, [sp, #32]
  40f048:	mov	x20, x0
  40f04c:	ldr	x0, [x0]
  40f050:	mov	x19, x2
  40f054:	mov	x22, x1
  40f058:	mov	x29, sp
  40f05c:	cbz	x0, 40f0d4 <ferror@plt+0xc524>
  40f060:	mov	x1, x20
  40f064:	mov	x2, x19
  40f068:	bl	40f03c <ferror@plt+0xc48c>
  40f06c:	mov	w21, w0
  40f070:	ldr	x0, [x20, #8]
  40f074:	cbz	x0, 40f084 <ferror@plt+0xc4d4>
  40f078:	mov	x1, x20
  40f07c:	mov	x2, x19
  40f080:	bl	40f03c <ferror@plt+0xc48c>
  40f084:	ldr	x8, [x20, #16]
  40f088:	cmp	x8, x22
  40f08c:	b.ne	40f0e4 <ferror@plt+0xc534>  // b.any
  40f090:	sub	w8, w0, w21
  40f094:	add	w9, w8, #0x1
  40f098:	cmp	w9, #0x3
  40f09c:	b.cs	40f0e4 <ferror@plt+0xc534>  // b.hs, b.nlast
  40f0a0:	ldr	w9, [x20, #24]
  40f0a4:	cmp	w9, w8
  40f0a8:	b.ne	40f0e4 <ferror@plt+0xc534>  // b.any
  40f0ac:	ldr	x8, [x19]
  40f0b0:	cmp	w0, w21
  40f0b4:	csel	w9, w21, w0, cc  // cc = lo, ul, last
  40f0b8:	add	w0, w9, #0x1
  40f0bc:	add	x8, x8, #0x1
  40f0c0:	str	x8, [x19]
  40f0c4:	ldp	x20, x19, [sp, #32]
  40f0c8:	ldp	x22, x21, [sp, #16]
  40f0cc:	ldp	x29, x30, [sp], #48
  40f0d0:	ret
  40f0d4:	mov	w21, wzr
  40f0d8:	ldr	x0, [x20, #8]
  40f0dc:	cbnz	x0, 40f078 <ferror@plt+0xc4c8>
  40f0e0:	b	40f084 <ferror@plt+0xc4d4>
  40f0e4:	bl	4028d0 <abort@plt>
  40f0e8:	stp	x29, x30, [sp, #-48]!
  40f0ec:	str	x21, [sp, #16]
  40f0f0:	mov	x21, x0
  40f0f4:	mov	w0, #0x28                  	// #40
  40f0f8:	stp	x20, x19, [sp, #32]
  40f0fc:	mov	x29, sp
  40f100:	mov	x19, x2
  40f104:	mov	x20, x1
  40f108:	bl	402700 <malloc@plt>
  40f10c:	cbz	x0, 40f11c <ferror@plt+0xc56c>
  40f110:	stp	x21, x20, [x0]
  40f114:	stp	xzr, xzr, [x0, #24]
  40f118:	str	x19, [x0, #16]
  40f11c:	ldp	x20, x19, [sp, #32]
  40f120:	ldr	x21, [sp, #16]
  40f124:	ldp	x29, x30, [sp], #48
  40f128:	ret
  40f12c:	ldr	x0, [x0, #32]
  40f130:	ret
  40f134:	stp	x29, x30, [sp, #-48]!
  40f138:	stp	x20, x19, [sp, #32]
  40f13c:	str	x21, [sp, #16]
  40f140:	ldr	x20, [x0, #8]
  40f144:	ldr	x21, [x0, #24]
  40f148:	mov	x19, x1
  40f14c:	mov	x29, sp
  40f150:	b	40f164 <ferror@plt+0xc5b4>
  40f154:	add	x21, x21, #0x8
  40f158:	ldr	x21, [x21]
  40f15c:	mov	w8, #0x1                   	// #1
  40f160:	tbz	w8, #0, 40f1a8 <ferror@plt+0xc5f8>
  40f164:	cbz	x21, 40f1b0 <ferror@plt+0xc600>
  40f168:	ldr	x0, [x21, #32]
  40f16c:	cbz	x20, 40f180 <ferror@plt+0xc5d0>
  40f170:	mov	x1, x19
  40f174:	blr	x20
  40f178:	tbz	w0, #31, 40f19c <ferror@plt+0xc5ec>
  40f17c:	b	40f154 <ferror@plt+0xc5a4>
  40f180:	cmp	x0, x19
  40f184:	b.ls	40f194 <ferror@plt+0xc5e4>  // b.plast
  40f188:	mov	w0, #0x1                   	// #1
  40f18c:	tbz	w0, #31, 40f19c <ferror@plt+0xc5ec>
  40f190:	b	40f154 <ferror@plt+0xc5a4>
  40f194:	csetm	w0, cc  // cc = lo, ul, last
  40f198:	tbnz	w0, #31, 40f154 <ferror@plt+0xc5a4>
  40f19c:	cbnz	w0, 40f158 <ferror@plt+0xc5a8>
  40f1a0:	mov	w8, wzr
  40f1a4:	tbnz	w8, #0, 40f164 <ferror@plt+0xc5b4>
  40f1a8:	mov	w0, #0x1                   	// #1
  40f1ac:	b	40f1b4 <ferror@plt+0xc604>
  40f1b0:	mov	w0, wzr
  40f1b4:	ldp	x20, x19, [sp, #32]
  40f1b8:	ldr	x21, [sp, #16]
  40f1bc:	ldp	x29, x30, [sp], #48
  40f1c0:	ret
  40f1c4:	stp	x29, x30, [sp, #-64]!
  40f1c8:	stp	x24, x23, [sp, #16]
  40f1cc:	stp	x22, x21, [sp, #32]
  40f1d0:	stp	x20, x19, [sp, #48]
  40f1d4:	ldr	x22, [x0, #24]
  40f1d8:	mov	x29, sp
  40f1dc:	cbz	x22, 40f204 <ferror@plt+0xc654>
  40f1e0:	mov	x19, x3
  40f1e4:	mov	x20, x2
  40f1e8:	mov	x21, x1
  40f1ec:	ldr	x0, [x22, #32]
  40f1f0:	mov	x1, x20
  40f1f4:	blr	x21
  40f1f8:	tbnz	w0, #0, 40f20c <ferror@plt+0xc65c>
  40f1fc:	ldr	x22, [x22, #8]
  40f200:	cbnz	x22, 40f1ec <ferror@plt+0xc63c>
  40f204:	mov	w0, wzr
  40f208:	b	40f244 <ferror@plt+0xc694>
  40f20c:	ldr	x23, [x22]
  40f210:	cbz	x23, 40f238 <ferror@plt+0xc688>
  40f214:	mov	w24, #0x8                   	// #8
  40f218:	ldr	x0, [x23, #32]
  40f21c:	mov	x1, x20
  40f220:	blr	x21
  40f224:	tst	w0, #0x1
  40f228:	csel	x8, xzr, x24, ne  // ne = any
  40f22c:	csel	x22, x23, x22, ne  // ne = any
  40f230:	ldr	x23, [x23, x8]
  40f234:	cbnz	x23, 40f218 <ferror@plt+0xc668>
  40f238:	ldr	x8, [x22, #32]
  40f23c:	mov	w0, #0x1                   	// #1
  40f240:	str	x8, [x19]
  40f244:	ldp	x20, x19, [sp, #48]
  40f248:	ldp	x22, x21, [sp, #32]
  40f24c:	ldp	x24, x23, [sp, #16]
  40f250:	ldp	x29, x30, [sp], #64
  40f254:	ret
  40f258:	stp	x29, x30, [sp, #-64]!
  40f25c:	stp	x24, x23, [sp, #16]
  40f260:	stp	x22, x21, [sp, #32]
  40f264:	stp	x20, x19, [sp, #48]
  40f268:	ldr	x21, [x0, #24]
  40f26c:	mov	x19, x0
  40f270:	mov	x20, x1
  40f274:	mov	x29, sp
  40f278:	cbz	x21, 40f31c <ferror@plt+0xc76c>
  40f27c:	ldr	x23, [x19, #8]
  40f280:	mov	w24, #0xffffffff            	// #-1
  40f284:	b	40f29c <ferror@plt+0xc6ec>
  40f288:	ldr	x9, [x21, #8]
  40f28c:	cbz	x9, 40f2fc <ferror@plt+0xc74c>
  40f290:	mov	w8, #0x1                   	// #1
  40f294:	mov	x21, x9
  40f298:	tbz	w8, #0, 40f334 <ferror@plt+0xc784>
  40f29c:	ldr	x0, [x21, #32]
  40f2a0:	cbz	x23, 40f2b4 <ferror@plt+0xc704>
  40f2a4:	mov	x1, x20
  40f2a8:	blr	x23
  40f2ac:	tbz	w0, #31, 40f2d0 <ferror@plt+0xc720>
  40f2b0:	b	40f288 <ferror@plt+0xc6d8>
  40f2b4:	cmp	x0, x20
  40f2b8:	b.ls	40f2c8 <ferror@plt+0xc718>  // b.plast
  40f2bc:	mov	w0, #0x1                   	// #1
  40f2c0:	tbz	w0, #31, 40f2d0 <ferror@plt+0xc720>
  40f2c4:	b	40f288 <ferror@plt+0xc6d8>
  40f2c8:	csetm	w0, cc  // cc = lo, ul, last
  40f2cc:	tbnz	w0, #31, 40f288 <ferror@plt+0xc6d8>
  40f2d0:	cbz	w0, 40f2f0 <ferror@plt+0xc740>
  40f2d4:	ldr	x9, [x21]
  40f2d8:	cbnz	x9, 40f290 <ferror@plt+0xc6e0>
  40f2dc:	mov	x0, x19
  40f2e0:	mov	x1, x21
  40f2e4:	mov	x2, x20
  40f2e8:	bl	40f634 <ferror@plt+0xca84>
  40f2ec:	b	40f30c <ferror@plt+0xc75c>
  40f2f0:	mov	w8, wzr
  40f2f4:	mov	w22, wzr
  40f2f8:	b	40f298 <ferror@plt+0xc6e8>
  40f2fc:	mov	x0, x19
  40f300:	mov	x1, x21
  40f304:	mov	x2, x20
  40f308:	bl	40f578 <ferror@plt+0xc9c8>
  40f30c:	cmp	x0, #0x0
  40f310:	mov	w8, wzr
  40f314:	cneg	w22, w24, ne  // ne = any
  40f318:	b	40f298 <ferror@plt+0xc6e8>
  40f31c:	mov	x0, x19
  40f320:	mov	x1, x20
  40f324:	bl	40f4d4 <ferror@plt+0xc924>
  40f328:	cmp	x0, #0x0
  40f32c:	mov	w8, #0xffffffff            	// #-1
  40f330:	cneg	w22, w8, ne  // ne = any
  40f334:	mov	w0, w22
  40f338:	ldp	x20, x19, [sp, #48]
  40f33c:	ldp	x22, x21, [sp, #32]
  40f340:	ldp	x24, x23, [sp, #16]
  40f344:	ldp	x29, x30, [sp], #64
  40f348:	ret
  40f34c:	stp	x29, x30, [sp, #-32]!
  40f350:	str	x19, [sp, #16]
  40f354:	mov	x29, sp
  40f358:	mov	x19, x0
  40f35c:	bl	40f918 <ferror@plt+0xcd68>
  40f360:	cbz	x0, 40f374 <ferror@plt+0xc7c4>
  40f364:	mov	x1, x0
  40f368:	mov	x0, x19
  40f36c:	bl	40f9ac <ferror@plt+0xcdfc>
  40f370:	mov	w0, #0x1                   	// #1
  40f374:	ldr	x19, [sp, #16]
  40f378:	ldp	x29, x30, [sp], #32
  40f37c:	ret
  40f380:	stp	x29, x30, [sp, #-80]!
  40f384:	stp	x28, x25, [sp, #16]
  40f388:	stp	x24, x23, [sp, #32]
  40f38c:	stp	x22, x21, [sp, #48]
  40f390:	stp	x20, x19, [sp, #64]
  40f394:	mov	x29, sp
  40f398:	sub	sp, sp, #0x530
  40f39c:	ldr	x8, [x0, #24]
  40f3a0:	mov	x9, sp
  40f3a4:	mov	x19, x0
  40f3a8:	mov	x21, xzr
  40f3ac:	add	x22, x9, #0x8
  40f3b0:	sub	x23, x9, #0x8
  40f3b4:	mov	w24, #0x1                   	// #1
  40f3b8:	cbz	x8, 40f3d4 <ferror@plt+0xc824>
  40f3bc:	add	x9, x22, x21, lsl #4
  40f3c0:	stur	x8, [x9, #-8]
  40f3c4:	strb	wzr, [x9], #16
  40f3c8:	ldr	x8, [x8]
  40f3cc:	add	x21, x21, #0x1
  40f3d0:	cbnz	x8, 40f3c0 <ferror@plt+0xc810>
  40f3d4:	cbz	x21, 40f424 <ferror@plt+0xc874>
  40f3d8:	add	x25, x23, x21, lsl #4
  40f3dc:	b	40f3f0 <ferror@plt+0xc840>
  40f3e0:	mov	x0, x20
  40f3e4:	bl	4029a0 <free@plt>
  40f3e8:	sub	x25, x25, #0x10
  40f3ec:	cbz	x21, 40f424 <ferror@plt+0xc874>
  40f3f0:	ldrb	w8, [x25]
  40f3f4:	ldur	x20, [x25, #-8]
  40f3f8:	cbz	w8, 40f414 <ferror@plt+0xc864>
  40f3fc:	ldr	x8, [x19, #16]
  40f400:	sub	x21, x21, #0x1
  40f404:	cbz	x8, 40f3e0 <ferror@plt+0xc830>
  40f408:	ldr	x0, [x20, #32]
  40f40c:	blr	x8
  40f410:	b	40f3e0 <ferror@plt+0xc830>
  40f414:	strb	w24, [x25]
  40f418:	ldr	x8, [x20, #8]
  40f41c:	cbnz	x8, 40f3bc <ferror@plt+0xc80c>
  40f420:	b	40f3d4 <ferror@plt+0xc824>
  40f424:	mov	x0, x19
  40f428:	bl	4029a0 <free@plt>
  40f42c:	add	sp, sp, #0x530
  40f430:	ldp	x20, x19, [sp, #64]
  40f434:	ldp	x22, x21, [sp, #48]
  40f438:	ldp	x24, x23, [sp, #32]
  40f43c:	ldp	x28, x25, [sp, #16]
  40f440:	ldp	x29, x30, [sp], #80
  40f444:	ret
  40f448:	ldr	x9, [x0]
  40f44c:	stp	x9, x0, [x8]
  40f450:	ldr	x9, [x0, #24]
  40f454:	cbz	x9, 40f46c <ferror@plt+0xc8bc>
  40f458:	mov	x10, x9
  40f45c:	ldr	x9, [x9]
  40f460:	cbnz	x9, 40f458 <ferror@plt+0xc8a8>
  40f464:	stp	x10, xzr, [x8, #24]
  40f468:	ret
  40f46c:	mov	x10, xzr
  40f470:	stp	x10, xzr, [x8, #24]
  40f474:	ret
  40f478:	ldp	x8, x9, [x0, #24]
  40f47c:	cmp	x8, x9
  40f480:	b.eq	40f4c8 <ferror@plt+0xc918>  // b.none
  40f484:	ldr	x9, [x8, #32]
  40f488:	str	x9, [x1]
  40f48c:	ldr	x10, [x8, #8]
  40f490:	cbz	x10, 40f4a4 <ferror@plt+0xc8f4>
  40f494:	mov	x9, x10
  40f498:	ldr	x10, [x10]
  40f49c:	cbnz	x10, 40f494 <ferror@plt+0xc8e4>
  40f4a0:	b	40f4bc <ferror@plt+0xc90c>
  40f4a4:	ldr	x9, [x8, #16]
  40f4a8:	cbz	x9, 40f4bc <ferror@plt+0xc90c>
  40f4ac:	ldr	x10, [x9, #8]
  40f4b0:	cmp	x10, x8
  40f4b4:	mov	x8, x9
  40f4b8:	b.eq	40f4a4 <ferror@plt+0xc8f4>  // b.none
  40f4bc:	str	x9, [x0, #24]
  40f4c0:	mov	w0, #0x1                   	// #1
  40f4c4:	ret
  40f4c8:	mov	w0, wzr
  40f4cc:	ret
  40f4d0:	ret
  40f4d4:	stp	x29, x30, [sp, #-48]!
  40f4d8:	stp	x20, x19, [sp, #32]
  40f4dc:	mov	x19, x0
  40f4e0:	mov	w0, #0x28                  	// #40
  40f4e4:	str	x21, [sp, #16]
  40f4e8:	mov	x29, sp
  40f4ec:	mov	x21, x1
  40f4f0:	bl	402700 <malloc@plt>
  40f4f4:	mov	x20, x0
  40f4f8:	cbz	x0, 40f564 <ferror@plt+0xc9b4>
  40f4fc:	str	wzr, [x20, #24]
  40f500:	stp	xzr, xzr, [x20]
  40f504:	str	x21, [x20, #32]
  40f508:	ldr	x8, [x19, #24]
  40f50c:	cbz	x8, 40f550 <ferror@plt+0xc9a0>
  40f510:	mov	x1, x8
  40f514:	ldr	x8, [x8]
  40f518:	cbnz	x8, 40f510 <ferror@plt+0xc960>
  40f51c:	str	x20, [x1]
  40f520:	str	x1, [x20, #16]
  40f524:	ldr	w8, [x1, #24]
  40f528:	ldr	x9, [x1, #8]
  40f52c:	sub	w8, w8, #0x1
  40f530:	str	w8, [x1, #24]
  40f534:	cbnz	x9, 40f558 <ferror@plt+0xc9a8>
  40f538:	ldr	x3, [x1, #16]
  40f53c:	cbz	x3, 40f558 <ferror@plt+0xc9a8>
  40f540:	mov	w2, #0x1                   	// #1
  40f544:	mov	x0, x19
  40f548:	bl	40f6f0 <ferror@plt+0xcb40>
  40f54c:	b	40f558 <ferror@plt+0xc9a8>
  40f550:	str	x20, [x19, #24]
  40f554:	str	xzr, [x20, #16]
  40f558:	ldr	x8, [x19, #32]
  40f55c:	add	x8, x8, #0x1
  40f560:	str	x8, [x19, #32]
  40f564:	mov	x0, x20
  40f568:	ldp	x20, x19, [sp, #32]
  40f56c:	ldr	x21, [sp, #16]
  40f570:	ldp	x29, x30, [sp], #48
  40f574:	ret
  40f578:	stp	x29, x30, [sp, #-48]!
  40f57c:	stp	x20, x19, [sp, #32]
  40f580:	mov	x19, x0
  40f584:	mov	w0, #0x28                  	// #40
  40f588:	stp	x22, x21, [sp, #16]
  40f58c:	mov	x29, sp
  40f590:	mov	x22, x2
  40f594:	mov	x21, x1
  40f598:	bl	402700 <malloc@plt>
  40f59c:	mov	x20, x0
  40f5a0:	cbz	x0, 40f620 <ferror@plt+0xca70>
  40f5a4:	str	wzr, [x20, #24]
  40f5a8:	stp	xzr, xzr, [x20]
  40f5ac:	str	x22, [x20, #32]
  40f5b0:	ldr	x8, [x21, #8]
  40f5b4:	cbz	x8, 40f5dc <ferror@plt+0xca2c>
  40f5b8:	mov	x21, x8
  40f5bc:	ldr	x8, [x8]
  40f5c0:	cbnz	x8, 40f5b8 <ferror@plt+0xca08>
  40f5c4:	ldr	w8, [x21, #24]
  40f5c8:	str	x20, [x21]
  40f5cc:	sub	w8, w8, #0x1
  40f5d0:	str	w8, [x21, #24]
  40f5d4:	add	x8, x21, #0x8
  40f5d8:	b	40f5f0 <ferror@plt+0xca40>
  40f5dc:	ldr	w8, [x21, #24]
  40f5e0:	str	x20, [x21, #8]
  40f5e4:	add	w8, w8, #0x1
  40f5e8:	str	w8, [x21, #24]
  40f5ec:	mov	x8, x21
  40f5f0:	ldr	x8, [x8]
  40f5f4:	str	x21, [x20, #16]
  40f5f8:	cbnz	x8, 40f614 <ferror@plt+0xca64>
  40f5fc:	ldr	x3, [x21, #16]
  40f600:	cbz	x3, 40f614 <ferror@plt+0xca64>
  40f604:	mov	w2, #0x1                   	// #1
  40f608:	mov	x0, x19
  40f60c:	mov	x1, x21
  40f610:	bl	40f6f0 <ferror@plt+0xcb40>
  40f614:	ldr	x8, [x19, #32]
  40f618:	add	x8, x8, #0x1
  40f61c:	str	x8, [x19, #32]
  40f620:	mov	x0, x20
  40f624:	ldp	x20, x19, [sp, #32]
  40f628:	ldp	x22, x21, [sp, #16]
  40f62c:	ldp	x29, x30, [sp], #48
  40f630:	ret
  40f634:	stp	x29, x30, [sp, #-48]!
  40f638:	stp	x20, x19, [sp, #32]
  40f63c:	mov	x19, x0
  40f640:	mov	w0, #0x28                  	// #40
  40f644:	stp	x22, x21, [sp, #16]
  40f648:	mov	x29, sp
  40f64c:	mov	x22, x2
  40f650:	mov	x21, x1
  40f654:	bl	402700 <malloc@plt>
  40f658:	mov	x20, x0
  40f65c:	cbz	x0, 40f6dc <ferror@plt+0xcb2c>
  40f660:	str	wzr, [x20, #24]
  40f664:	stp	xzr, xzr, [x20]
  40f668:	str	x22, [x20, #32]
  40f66c:	ldr	x8, [x21]
  40f670:	cbz	x8, 40f698 <ferror@plt+0xcae8>
  40f674:	mov	x21, x8
  40f678:	ldr	x8, [x8, #8]
  40f67c:	cbnz	x8, 40f674 <ferror@plt+0xcac4>
  40f680:	ldr	w8, [x21, #24]
  40f684:	str	x20, [x21, #8]
  40f688:	add	w8, w8, #0x1
  40f68c:	str	w8, [x21, #24]
  40f690:	mov	x8, x21
  40f694:	b	40f6ac <ferror@plt+0xcafc>
  40f698:	ldr	w8, [x21, #24]
  40f69c:	str	x20, [x21]
  40f6a0:	sub	w8, w8, #0x1
  40f6a4:	str	w8, [x21, #24]
  40f6a8:	add	x8, x21, #0x8
  40f6ac:	ldr	x8, [x8]
  40f6b0:	str	x21, [x20, #16]
  40f6b4:	cbnz	x8, 40f6d0 <ferror@plt+0xcb20>
  40f6b8:	ldr	x3, [x21, #16]
  40f6bc:	cbz	x3, 40f6d0 <ferror@plt+0xcb20>
  40f6c0:	mov	w2, #0x1                   	// #1
  40f6c4:	mov	x0, x19
  40f6c8:	mov	x1, x21
  40f6cc:	bl	40f6f0 <ferror@plt+0xcb40>
  40f6d0:	ldr	x8, [x19, #32]
  40f6d4:	add	x8, x8, #0x1
  40f6d8:	str	x8, [x19, #32]
  40f6dc:	mov	x0, x20
  40f6e0:	ldp	x20, x19, [sp, #32]
  40f6e4:	ldp	x22, x21, [sp, #16]
  40f6e8:	ldp	x29, x30, [sp], #48
  40f6ec:	ret
  40f6f0:	stp	x29, x30, [sp, #-16]!
  40f6f4:	add	x8, x0, #0x18
  40f6f8:	mov	w9, #0x1                   	// #1
  40f6fc:	mov	x29, sp
  40f700:	b	40f70c <ferror@plt+0xcb5c>
  40f704:	mov	w10, wzr
  40f708:	tbz	w10, #0, 40f90c <ferror@plt+0xcd5c>
  40f70c:	ldr	x11, [x3]
  40f710:	ldr	w10, [x3, #24]
  40f714:	cbnz	x11, 40f720 <ferror@plt+0xcb70>
  40f718:	ldr	x12, [x3, #8]
  40f71c:	cbz	x12, 40f84c <ferror@plt+0xcc9c>
  40f720:	ldr	x12, [x3, #8]
  40f724:	cmp	x1, x12
  40f728:	cneg	w12, w2, ne  // ne = any
  40f72c:	add	w13, w12, w10
  40f730:	cmp	w12, w10
  40f734:	str	w13, [x3, #24]
  40f738:	b.ne	40f7c4 <ferror@plt+0xcc14>  // b.any
  40f73c:	ldr	x13, [x3, #16]
  40f740:	mov	x10, x8
  40f744:	cbz	x13, 40f764 <ferror@plt+0xcbb4>
  40f748:	ldr	x10, [x13]
  40f74c:	cmp	x10, x3
  40f750:	b.eq	40f760 <ferror@plt+0xcbb0>  // b.none
  40f754:	ldr	x10, [x13, #8]!
  40f758:	cmp	x10, x3
  40f75c:	b.ne	40f914 <ferror@plt+0xcd64>  // b.any
  40f760:	mov	x10, x13
  40f764:	tbnz	w12, #31, 40f7e8 <ferror@plt+0xcc38>
  40f768:	ldr	x11, [x3, #8]
  40f76c:	ldr	w13, [x11, #24]
  40f770:	ldr	x12, [x11]
  40f774:	tbnz	w13, #31, 40f854 <ferror@plt+0xcca4>
  40f778:	str	x12, [x3, #8]
  40f77c:	str	x3, [x11]
  40f780:	ldr	x14, [x3, #16]
  40f784:	str	x14, [x11, #16]
  40f788:	str	x11, [x3, #16]
  40f78c:	cbz	x12, 40f794 <ferror@plt+0xcbe4>
  40f790:	str	x3, [x12, #16]
  40f794:	sub	w12, w13, #0x1
  40f798:	sub	w13, w9, w13
  40f79c:	str	w12, [x11, #24]
  40f7a0:	str	w13, [x3, #24]
  40f7a4:	str	x11, [x10]
  40f7a8:	ldr	w11, [x11, #24]
  40f7ac:	ldr	x1, [x10]
  40f7b0:	cmp	w2, #0x0
  40f7b4:	neg	w12, w11
  40f7b8:	csinv	w2, w12, w11, ge  // ge = tcont
  40f7bc:	cbnz	w2, 40f8fc <ferror@plt+0xcd4c>
  40f7c0:	b	40f704 <ferror@plt+0xcb54>
  40f7c4:	tbnz	w2, #31, 40f7d4 <ferror@plt+0xcc24>
  40f7c8:	cmp	w13, #0x0
  40f7cc:	cset	w2, ne  // ne = any
  40f7d0:	b	40f7dc <ferror@plt+0xcc2c>
  40f7d4:	cmp	w10, #0x0
  40f7d8:	csetm	w2, ne  // ne = any
  40f7dc:	mov	x1, x3
  40f7e0:	cbnz	w2, 40f8fc <ferror@plt+0xcd4c>
  40f7e4:	b	40f704 <ferror@plt+0xcb54>
  40f7e8:	ldr	w13, [x11, #24]
  40f7ec:	ldr	x12, [x11, #8]
  40f7f0:	cmp	w13, #0x0
  40f7f4:	b.le	40f8bc <ferror@plt+0xcd0c>
  40f7f8:	ldr	x14, [x12]
  40f7fc:	str	x14, [x11, #8]
  40f800:	ldr	x13, [x12, #8]
  40f804:	str	x13, [x3]
  40f808:	stp	x11, x3, [x12]
  40f80c:	ldr	x15, [x3, #16]
  40f810:	str	x15, [x12, #16]
  40f814:	cbz	x14, 40f81c <ferror@plt+0xcc6c>
  40f818:	str	x11, [x14, #16]
  40f81c:	cbz	x13, 40f824 <ferror@plt+0xcc74>
  40f820:	str	x3, [x13, #16]
  40f824:	str	x12, [x11, #16]
  40f828:	str	x12, [x3, #16]
  40f82c:	ldr	w13, [x12, #24]
  40f830:	cmp	w13, #0x0
  40f834:	csetm	w13, gt
  40f838:	str	w13, [x11, #24]
  40f83c:	ldr	w11, [x12, #24]
  40f840:	lsr	w11, w11, #31
  40f844:	str	w11, [x3, #24]
  40f848:	b	40f8a4 <ferror@plt+0xccf4>
  40f84c:	neg	w12, w10
  40f850:	b	40f72c <ferror@plt+0xcb7c>
  40f854:	ldr	x14, [x12]
  40f858:	str	x14, [x3, #8]
  40f85c:	ldr	x13, [x12, #8]
  40f860:	str	x13, [x11]
  40f864:	stp	x3, x11, [x12]
  40f868:	ldr	x15, [x3, #16]
  40f86c:	str	x15, [x12, #16]
  40f870:	cbz	x14, 40f878 <ferror@plt+0xccc8>
  40f874:	str	x3, [x14, #16]
  40f878:	cbz	x13, 40f880 <ferror@plt+0xccd0>
  40f87c:	str	x11, [x13, #16]
  40f880:	str	x12, [x3, #16]
  40f884:	str	x12, [x11, #16]
  40f888:	ldr	w13, [x12, #24]
  40f88c:	cmp	w13, #0x0
  40f890:	csetm	w13, gt
  40f894:	str	w13, [x3, #24]
  40f898:	ldr	w13, [x12, #24]
  40f89c:	lsr	w13, w13, #31
  40f8a0:	str	w13, [x11, #24]
  40f8a4:	str	wzr, [x12, #24]
  40f8a8:	str	x12, [x10]
  40f8ac:	asr	w2, w2, #31
  40f8b0:	mov	x1, x12
  40f8b4:	cbnz	w2, 40f8fc <ferror@plt+0xcd4c>
  40f8b8:	b	40f704 <ferror@plt+0xcb54>
  40f8bc:	str	x12, [x3]
  40f8c0:	str	x3, [x11, #8]
  40f8c4:	ldr	x14, [x3, #16]
  40f8c8:	str	x14, [x11, #16]
  40f8cc:	str	x11, [x3, #16]
  40f8d0:	cbz	x12, 40f8d8 <ferror@plt+0xcd28>
  40f8d4:	str	x3, [x12, #16]
  40f8d8:	add	w12, w13, #0x1
  40f8dc:	mvn	w13, w13
  40f8e0:	str	w12, [x11, #24]
  40f8e4:	str	w13, [x3, #24]
  40f8e8:	str	x11, [x10]
  40f8ec:	ldr	w11, [x11, #24]
  40f8f0:	ldr	x1, [x10]
  40f8f4:	add	w2, w11, w2, asr #31
  40f8f8:	cbz	w2, 40f704 <ferror@plt+0xcb54>
  40f8fc:	ldr	x3, [x1, #16]
  40f900:	cmp	x3, #0x0
  40f904:	cset	w10, ne  // ne = any
  40f908:	tbnz	w10, #0, 40f70c <ferror@plt+0xcb5c>
  40f90c:	ldp	x29, x30, [sp], #16
  40f910:	ret
  40f914:	bl	4028d0 <abort@plt>
  40f918:	stp	x29, x30, [sp, #-48]!
  40f91c:	stp	x22, x21, [sp, #16]
  40f920:	stp	x20, x19, [sp, #32]
  40f924:	ldr	x21, [x0, #8]
  40f928:	ldr	x22, [x0, #24]
  40f92c:	mov	x19, x1
  40f930:	mov	x29, sp
  40f934:	b	40f948 <ferror@plt+0xcd98>
  40f938:	add	x22, x22, #0x8
  40f93c:	ldr	x22, [x22]
  40f940:	mov	w8, #0x1                   	// #1
  40f944:	tbz	w8, #0, 40f998 <ferror@plt+0xcde8>
  40f948:	cbz	x22, 40f994 <ferror@plt+0xcde4>
  40f94c:	ldr	x0, [x22, #32]
  40f950:	cbz	x21, 40f964 <ferror@plt+0xcdb4>
  40f954:	mov	x1, x19
  40f958:	blr	x21
  40f95c:	tbz	w0, #31, 40f980 <ferror@plt+0xcdd0>
  40f960:	b	40f938 <ferror@plt+0xcd88>
  40f964:	cmp	x0, x19
  40f968:	b.ls	40f978 <ferror@plt+0xcdc8>  // b.plast
  40f96c:	mov	w0, #0x1                   	// #1
  40f970:	tbz	w0, #31, 40f980 <ferror@plt+0xcdd0>
  40f974:	b	40f938 <ferror@plt+0xcd88>
  40f978:	csetm	w0, cc  // cc = lo, ul, last
  40f97c:	tbnz	w0, #31, 40f938 <ferror@plt+0xcd88>
  40f980:	cbnz	w0, 40f93c <ferror@plt+0xcd8c>
  40f984:	mov	w8, wzr
  40f988:	mov	x20, x22
  40f98c:	tbnz	w8, #0, 40f948 <ferror@plt+0xcd98>
  40f990:	b	40f998 <ferror@plt+0xcde8>
  40f994:	mov	x20, xzr
  40f998:	mov	x0, x20
  40f99c:	ldp	x20, x19, [sp, #32]
  40f9a0:	ldp	x22, x21, [sp, #16]
  40f9a4:	ldp	x29, x30, [sp], #48
  40f9a8:	ret
  40f9ac:	stp	x29, x30, [sp, #-32]!
  40f9b0:	stp	x20, x19, [sp, #16]
  40f9b4:	mov	x19, x1
  40f9b8:	ldr	x3, [x1, #16]
  40f9bc:	ldr	x1, [x1]
  40f9c0:	ldr	x8, [x19, #8]
  40f9c4:	mov	x20, x0
  40f9c8:	mov	x29, sp
  40f9cc:	cbz	x1, 40fa38 <ferror@plt+0xce88>
  40f9d0:	cbz	x8, 40fa58 <ferror@plt+0xcea8>
  40f9d4:	mov	x8, x1
  40f9d8:	mov	x9, x8
  40f9dc:	ldr	x8, [x8, #8]
  40f9e0:	cbnz	x8, 40f9d8 <ferror@plt+0xce28>
  40f9e4:	ldr	x10, [x9, #16]
  40f9e8:	ldr	x8, [x9]
  40f9ec:	cmp	x10, x19
  40f9f0:	b.eq	40fa08 <ferror@plt+0xce58>  // b.none
  40f9f4:	cbz	x8, 40f9fc <ferror@plt+0xce4c>
  40f9f8:	str	x10, [x8, #16]
  40f9fc:	str	x8, [x10, #8]
  40fa00:	str	x1, [x9]
  40fa04:	str	x9, [x1, #16]
  40fa08:	ldr	x11, [x19, #8]
  40fa0c:	str	x11, [x9, #8]
  40fa10:	str	x9, [x11, #16]
  40fa14:	ldr	w11, [x19, #24]
  40fa18:	str	x3, [x9, #16]
  40fa1c:	str	w11, [x9, #24]
  40fa20:	cbz	x3, 40fa7c <ferror@plt+0xcecc>
  40fa24:	mov	x11, x3
  40fa28:	ldr	x12, [x11], #8
  40fa2c:	cmp	x12, x19
  40fa30:	csel	x11, x3, x11, eq  // eq = none
  40fa34:	b	40fa80 <ferror@plt+0xced0>
  40fa38:	cbz	x8, 40fa40 <ferror@plt+0xce90>
  40fa3c:	str	x3, [x8, #16]
  40fa40:	cbz	x3, 40facc <ferror@plt+0xcf1c>
  40fa44:	ldr	x9, [x3]
  40fa48:	cmp	x9, x19
  40fa4c:	cset	w9, ne  // ne = any
  40fa50:	str	x8, [x3, w9, uxtw #3]
  40fa54:	b	40fa8c <ferror@plt+0xcedc>
  40fa58:	str	x3, [x1, #16]
  40fa5c:	cbz	x3, 40fad4 <ferror@plt+0xcf24>
  40fa60:	ldr	x8, [x3]
  40fa64:	mov	w2, #0xffffffff            	// #-1
  40fa68:	mov	x0, x20
  40fa6c:	cmp	x8, x19
  40fa70:	cset	w8, ne  // ne = any
  40fa74:	str	x1, [x3, w8, uxtw #3]
  40fa78:	b	40fa98 <ferror@plt+0xcee8>
  40fa7c:	add	x11, x20, #0x18
  40fa80:	cmp	x10, x19
  40fa84:	csel	x3, x10, x9, ne  // ne = any
  40fa88:	str	x9, [x11]
  40fa8c:	mov	w2, #0xffffffff            	// #-1
  40fa90:	mov	x0, x20
  40fa94:	mov	x1, x8
  40fa98:	bl	40f6f0 <ferror@plt+0xcb40>
  40fa9c:	ldr	x9, [x20, #32]
  40faa0:	ldr	x8, [x20, #16]
  40faa4:	sub	x9, x9, #0x1
  40faa8:	str	x9, [x20, #32]
  40faac:	cbz	x8, 40fab8 <ferror@plt+0xcf08>
  40fab0:	ldr	x0, [x19, #32]
  40fab4:	blr	x8
  40fab8:	mov	x0, x19
  40fabc:	bl	4029a0 <free@plt>
  40fac0:	ldp	x20, x19, [sp, #16]
  40fac4:	ldp	x29, x30, [sp], #32
  40fac8:	ret
  40facc:	str	x8, [x20, #24]
  40fad0:	b	40fa9c <ferror@plt+0xceec>
  40fad4:	str	x1, [x20, #24]
  40fad8:	b	40fa9c <ferror@plt+0xceec>
  40fadc:	sub	sp, sp, #0xd0
  40fae0:	stp	x29, x30, [sp, #176]
  40fae4:	add	x29, sp, #0xb0
  40fae8:	adrp	x8, 430000 <__progname@@GLIBC_2.17+0x3ba8>
  40faec:	str	x19, [sp, #192]
  40faf0:	mov	x19, x0
  40faf4:	add	x8, x8, #0xb60
  40faf8:	mov	w9, #0x4000                	// #16384
  40fafc:	sub	x0, x29, #0x18
  40fb00:	mov	x1, xzr
  40fb04:	stur	wzr, [x29, #-16]
  40fb08:	stur	x8, [x29, #-24]
  40fb0c:	stur	x9, [x29, #-8]
  40fb10:	bl	402520 <sigaltstack@plt>
  40fb14:	cbnz	w0, 40fb84 <ferror@plt+0xcfd4>
  40fb18:	adrp	x8, 40f000 <ferror@plt+0xc450>
  40fb1c:	add	x8, x8, #0xb94
  40fb20:	cmp	x19, #0x0
  40fb24:	adrp	x11, 419000 <_obstack_memory_used@@Base+0x282c>
  40fb28:	adrp	x13, 419000 <_obstack_memory_used@@Base+0x282c>
  40fb2c:	mov	x14, sp
  40fb30:	adrp	x9, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fb34:	adrp	x10, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fb38:	add	x11, x11, #0xee0
  40fb3c:	adrp	x12, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fb40:	add	x13, x13, #0xeee
  40fb44:	csel	x8, x8, x19, eq  // eq = none
  40fb48:	add	x0, x14, #0x8
  40fb4c:	str	x8, [x9, #2912]
  40fb50:	str	x11, [x10, #2920]
  40fb54:	str	x13, [x12, #2928]
  40fb58:	bl	402740 <sigemptyset@plt>
  40fb5c:	mov	w8, #0x4                   	// #4
  40fb60:	adrp	x9, 40f000 <ferror@plt+0xc450>
  40fb64:	movk	w8, #0xc800, lsl #16
  40fb68:	add	x9, x9, #0xb98
  40fb6c:	mov	x1, sp
  40fb70:	mov	w0, #0xb                   	// #11
  40fb74:	mov	x2, xzr
  40fb78:	str	w8, [sp, #136]
  40fb7c:	str	x9, [sp]
  40fb80:	bl	402870 <sigaction@plt>
  40fb84:	ldr	x19, [sp, #192]
  40fb88:	ldp	x29, x30, [sp, #176]
  40fb8c:	add	sp, sp, #0xd0
  40fb90:	ret
  40fb94:	ret
  40fb98:	stp	x29, x30, [sp, #-16]!
  40fb9c:	mov	x29, sp
  40fba0:	bl	40fba4 <ferror@plt+0xcff4>
  40fba4:	stp	x29, x30, [sp, #-32]!
  40fba8:	stp	x20, x19, [sp, #16]
  40fbac:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fbb0:	ldr	x8, [x8, #2912]
  40fbb4:	mov	w0, wzr
  40fbb8:	mov	x29, sp
  40fbbc:	blr	x8
  40fbc0:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fbc4:	ldr	x19, [x8, #2928]
  40fbc8:	bl	411148 <ferror@plt+0xe598>
  40fbcc:	mov	x20, x0
  40fbd0:	bl	402540 <strlen@plt>
  40fbd4:	mov	x2, x0
  40fbd8:	mov	w0, #0x2                   	// #2
  40fbdc:	mov	x1, x20
  40fbe0:	bl	4028a0 <write@plt>
  40fbe4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  40fbe8:	add	x1, x1, #0x2b9
  40fbec:	mov	w0, #0x2                   	// #2
  40fbf0:	mov	w2, #0x2                   	// #2
  40fbf4:	bl	4028a0 <write@plt>
  40fbf8:	mov	x0, x19
  40fbfc:	bl	402540 <strlen@plt>
  40fc00:	mov	x2, x0
  40fc04:	mov	w0, #0x2                   	// #2
  40fc08:	mov	x1, x19
  40fc0c:	bl	4028a0 <write@plt>
  40fc10:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  40fc14:	add	x1, x1, #0xb09
  40fc18:	mov	w0, #0x2                   	// #2
  40fc1c:	mov	w2, #0x1                   	// #1
  40fc20:	bl	4028a0 <write@plt>
  40fc24:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  40fc28:	ldr	w0, [x8, #892]
  40fc2c:	bl	402530 <_exit@plt>
  40fc30:	stp	x29, x30, [sp, #-80]!
  40fc34:	stp	x26, x25, [sp, #16]
  40fc38:	stp	x24, x23, [sp, #32]
  40fc3c:	stp	x22, x21, [sp, #48]
  40fc40:	stp	x20, x19, [sp, #64]
  40fc44:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fc48:	ldr	x9, [x8, #2944]
  40fc4c:	mov	x20, x1
  40fc50:	mov	x19, x0
  40fc54:	and	w24, w2, #0x1
  40fc58:	mov	x29, sp
  40fc5c:	cbz	x9, 40fc84 <ferror@plt+0xd0d4>
  40fc60:	mov	x9, xzr
  40fc64:	adrp	x10, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fc68:	ldr	x11, [x10, #2936]
  40fc6c:	ldr	x11, [x11, x9, lsl #3]
  40fc70:	cbz	x11, 40fc90 <ferror@plt+0xd0e0>
  40fc74:	ldr	x11, [x8, #2944]
  40fc78:	add	x9, x9, #0x1
  40fc7c:	cmp	x9, x11
  40fc80:	b.cc	40fc68 <ferror@plt+0xd0b8>  // b.lo, b.ul, b.last
  40fc84:	mov	x25, xzr
  40fc88:	cbnz	x25, 40fd38 <ferror@plt+0xd188>
  40fc8c:	b	40fc9c <ferror@plt+0xd0ec>
  40fc90:	ldr	x8, [x10, #2936]
  40fc94:	add	x25, x8, x9, lsl #3
  40fc98:	cbnz	x25, 40fd38 <ferror@plt+0xd188>
  40fc9c:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fca0:	add	x8, x8, #0xb80
  40fca4:	ldr	x9, [x8]
  40fca8:	ldr	x25, [x8, #8]
  40fcac:	adrp	x26, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fcb0:	add	x26, x26, #0xb78
  40fcb4:	cmp	x9, x25
  40fcb8:	b.ne	40fd1c <ferror@plt+0xd16c>  // b.any
  40fcbc:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  40fcc0:	ldr	x21, [x8, #2936]
  40fcc4:	mov	w22, #0x1                   	// #1
  40fcc8:	bfi	x22, x25, #1, #63
  40fccc:	mov	w1, #0x8                   	// #8
  40fcd0:	mov	x0, x22
  40fcd4:	bl	41575c <ferror@plt+0x12bac>
  40fcd8:	mov	x23, x0
  40fcdc:	cbz	x25, 40fcfc <ferror@plt+0xd14c>
  40fce0:	mov	x8, x21
  40fce4:	mov	x9, x23
  40fce8:	ldr	x10, [x8], #8
  40fcec:	subs	x25, x25, #0x1
  40fcf0:	str	x10, [x9], #8
  40fcf4:	b.ne	40fce8 <ferror@plt+0xd138>  // b.any
  40fcf8:	b	40fd08 <ferror@plt+0xd158>
  40fcfc:	adrp	x0, 410000 <ferror@plt+0xd450>
  40fd00:	add	x0, x0, #0x57c
  40fd04:	bl	410bdc <ferror@plt+0xe02c>
  40fd08:	str	x23, [x26]
  40fd0c:	str	x22, [x26, #16]
  40fd10:	cbz	x21, 40fd1c <ferror@plt+0xd16c>
  40fd14:	mov	x0, x21
  40fd18:	bl	4029a0 <free@plt>
  40fd1c:	ldr	x8, [x26]
  40fd20:	ldr	x9, [x26, #8]
  40fd24:	add	x25, x8, x9, lsl #3
  40fd28:	str	xzr, [x25]
  40fd2c:	ldr	x8, [x26, #8]
  40fd30:	add	x8, x8, #0x1
  40fd34:	str	x8, [x26, #8]
  40fd38:	mov	w0, #0x20                  	// #32
  40fd3c:	bl	4157d0 <ferror@plt+0x12c20>
  40fd40:	str	xzr, [x0]
  40fd44:	strb	w24, [x0, #8]
  40fd48:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x282c>
  40fd4c:	adrp	x23, 40f000 <ferror@plt+0xc450>
  40fd50:	adrp	x24, 40f000 <ferror@plt+0xc450>
  40fd54:	add	x22, x22, #0xff8
  40fd58:	add	x23, x23, #0xe60
  40fd5c:	add	x24, x24, #0xe7c
  40fd60:	mov	x21, x0
  40fd64:	mov	x0, x22
  40fd68:	mov	x1, x23
  40fd6c:	mov	x2, x24
  40fd70:	mov	x3, xzr
  40fd74:	mov	w4, wzr
  40fd78:	bl	415a90 <ferror@plt+0x12ee0>
  40fd7c:	str	x0, [x21, #16]
  40fd80:	mov	x0, x22
  40fd84:	mov	x1, x23
  40fd88:	mov	x2, x24
  40fd8c:	mov	x3, xzr
  40fd90:	mov	w4, wzr
  40fd94:	bl	415a90 <ferror@plt+0x12ee0>
  40fd98:	str	x0, [x21, #24]
  40fd9c:	mov	w0, #0x1000                	// #4096
  40fda0:	bl	415bb0 <ferror@plt+0x13000>
  40fda4:	cmp	x20, #0x0
  40fda8:	cset	w4, eq  // eq = none
  40fdac:	mov	w1, #0x1000                	// #4096
  40fdb0:	mov	x2, x20
  40fdb4:	mov	x3, x19
  40fdb8:	mov	x22, x0
  40fdbc:	bl	414ce4 <ferror@plt+0x12134>
  40fdc0:	cbz	w0, 40fdec <ferror@plt+0xd23c>
  40fdc4:	bl	402b30 <__errno_location@plt>
  40fdc8:	ldr	w1, [x0]
  40fdcc:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40fdd0:	add	x2, x2, #0xefd
  40fdd4:	mov	w0, wzr
  40fdd8:	bl	402590 <error@plt>
  40fddc:	mov	x0, x22
  40fde0:	bl	412ab0 <ferror@plt+0xff00>
  40fde4:	mov	x21, xzr
  40fde8:	b	40fe20 <ferror@plt+0xd270>
  40fdec:	bl	410dcc <ferror@plt+0xe21c>
  40fdf0:	mov	x0, x22
  40fdf4:	bl	4028b0 <mkdtemp@plt>
  40fdf8:	cbz	x0, 40fe3c <ferror@plt+0xd28c>
  40fdfc:	mov	x19, x0
  40fe00:	str	x0, [x21]
  40fe04:	str	x21, [x25]
  40fe08:	bl	410e6c <ferror@plt+0xe2bc>
  40fe0c:	mov	x0, x19
  40fe10:	bl	415a38 <ferror@plt+0x12e88>
  40fe14:	str	x0, [x21]
  40fe18:	mov	x0, x22
  40fe1c:	bl	412ab0 <ferror@plt+0xff00>
  40fe20:	mov	x0, x21
  40fe24:	ldp	x20, x19, [sp, #64]
  40fe28:	ldp	x22, x21, [sp, #48]
  40fe2c:	ldp	x24, x23, [sp, #32]
  40fe30:	ldp	x26, x25, [sp, #16]
  40fe34:	ldp	x29, x30, [sp], #80
  40fe38:	ret
  40fe3c:	bl	410e6c <ferror@plt+0xe2bc>
  40fe40:	bl	402b30 <__errno_location@plt>
  40fe44:	ldr	w1, [x0]
  40fe48:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  40fe4c:	add	x2, x2, #0xf34
  40fe50:	mov	w0, wzr
  40fe54:	mov	x3, x22
  40fe58:	bl	402590 <error@plt>
  40fe5c:	b	40fddc <ferror@plt+0xd22c>
  40fe60:	stp	x29, x30, [sp, #-16]!
  40fe64:	mov	x29, sp
  40fe68:	bl	402940 <strcmp@plt>
  40fe6c:	cmp	w0, #0x0
  40fe70:	cset	w0, eq  // eq = none
  40fe74:	ldp	x29, x30, [sp], #16
  40fe78:	ret
  40fe7c:	ldrb	w9, [x0]
  40fe80:	cbz	w9, 40fea4 <ferror@plt+0xd2f4>
  40fe84:	mov	x8, x0
  40fe88:	mov	x0, xzr
  40fe8c:	add	x8, x8, #0x1
  40fe90:	ror	x10, x0, #55
  40fe94:	add	x0, x10, w9, uxtb
  40fe98:	ldrb	w9, [x8], #1
  40fe9c:	cbnz	w9, 40fe90 <ferror@plt+0xd2e0>
  40fea0:	ret
  40fea4:	mov	x0, xzr
  40fea8:	ret
  40feac:	stp	x29, x30, [sp, #-32]!
  40feb0:	stp	x20, x19, [sp, #16]
  40feb4:	mov	x20, x0
  40feb8:	ldr	x0, [x0, #24]
  40febc:	mov	x29, sp
  40fec0:	mov	x19, x1
  40fec4:	bl	412694 <ferror@plt+0xfae4>
  40fec8:	cbnz	x0, 40fee4 <ferror@plt+0xd334>
  40fecc:	ldr	x20, [x20, #24]
  40fed0:	mov	x0, x19
  40fed4:	bl	415a38 <ferror@plt+0x12e88>
  40fed8:	mov	x1, x0
  40fedc:	mov	x0, x20
  40fee0:	bl	415b08 <ferror@plt+0x12f58>
  40fee4:	ldp	x20, x19, [sp, #16]
  40fee8:	ldp	x29, x30, [sp], #32
  40feec:	ret
  40fef0:	stp	x29, x30, [sp, #-48]!
  40fef4:	str	x21, [sp, #16]
  40fef8:	stp	x20, x19, [sp, #32]
  40fefc:	ldr	x19, [x0, #24]
  40ff00:	mov	x29, sp
  40ff04:	mov	x0, x19
  40ff08:	bl	412694 <ferror@plt+0xfae4>
  40ff0c:	cbz	x0, 40ff38 <ferror@plt+0xd388>
  40ff10:	mov	x20, x0
  40ff14:	mov	x0, x19
  40ff18:	mov	x1, x20
  40ff1c:	bl	4125ec <ferror@plt+0xfa3c>
  40ff20:	mov	x21, x0
  40ff24:	mov	x0, x19
  40ff28:	mov	x1, x20
  40ff2c:	bl	412890 <ferror@plt+0xfce0>
  40ff30:	mov	x0, x21
  40ff34:	bl	4029a0 <free@plt>
  40ff38:	ldp	x20, x19, [sp, #32]
  40ff3c:	ldr	x21, [sp, #16]
  40ff40:	ldp	x29, x30, [sp], #48
  40ff44:	ret
  40ff48:	stp	x29, x30, [sp, #-32]!
  40ff4c:	stp	x20, x19, [sp, #16]
  40ff50:	mov	x20, x0
  40ff54:	ldr	x0, [x0, #16]
  40ff58:	mov	x29, sp
  40ff5c:	mov	x19, x1
  40ff60:	bl	412694 <ferror@plt+0xfae4>
  40ff64:	cbnz	x0, 40ff80 <ferror@plt+0xd3d0>
  40ff68:	ldr	x20, [x20, #16]
  40ff6c:	mov	x0, x19
  40ff70:	bl	415a38 <ferror@plt+0x12e88>
  40ff74:	mov	x1, x0
  40ff78:	mov	x0, x20
  40ff7c:	bl	415b08 <ferror@plt+0x12f58>
  40ff80:	ldp	x20, x19, [sp, #16]
  40ff84:	ldp	x29, x30, [sp], #32
  40ff88:	ret
  40ff8c:	stp	x29, x30, [sp, #-48]!
  40ff90:	str	x21, [sp, #16]
  40ff94:	stp	x20, x19, [sp, #32]
  40ff98:	ldr	x19, [x0, #16]
  40ff9c:	mov	x29, sp
  40ffa0:	mov	x0, x19
  40ffa4:	bl	412694 <ferror@plt+0xfae4>
  40ffa8:	cbz	x0, 40ffd4 <ferror@plt+0xd424>
  40ffac:	mov	x20, x0
  40ffb0:	mov	x0, x19
  40ffb4:	mov	x1, x20
  40ffb8:	bl	4125ec <ferror@plt+0xfa3c>
  40ffbc:	mov	x21, x0
  40ffc0:	mov	x0, x19
  40ffc4:	mov	x1, x20
  40ffc8:	bl	412890 <ferror@plt+0xfce0>
  40ffcc:	mov	x0, x21
  40ffd0:	bl	4029a0 <free@plt>
  40ffd4:	ldp	x20, x19, [sp, #32]
  40ffd8:	ldr	x21, [sp, #16]
  40ffdc:	ldp	x29, x30, [sp], #48
  40ffe0:	ret
  40ffe4:	stp	x29, x30, [sp, #-48]!
  40ffe8:	str	x21, [sp, #16]
  40ffec:	stp	x20, x19, [sp, #32]
  40fff0:	mov	x29, sp
  40fff4:	mov	x19, x1
  40fff8:	mov	x20, x0
  40fffc:	bl	410024 <ferror@plt+0xd474>
  410000:	mov	w21, w0
  410004:	mov	x0, x20
  410008:	mov	x1, x19
  41000c:	bl	40fef0 <ferror@plt+0xd340>
  410010:	mov	w0, w21
  410014:	ldp	x20, x19, [sp, #32]
  410018:	ldr	x21, [sp, #16]
  41001c:	ldp	x29, x30, [sp], #48
  410020:	ret
  410024:	stp	x29, x30, [sp, #-32]!
  410028:	stp	x20, x19, [sp, #16]
  41002c:	mov	x20, x0
  410030:	mov	x0, x1
  410034:	mov	x29, sp
  410038:	mov	x19, x1
  41003c:	bl	402b80 <unlink@plt>
  410040:	tbnz	w0, #31, 410054 <ferror@plt+0xd4a4>
  410044:	mov	w0, wzr
  410048:	ldp	x20, x19, [sp, #16]
  41004c:	ldp	x29, x30, [sp], #32
  410050:	ret
  410054:	ldrb	w8, [x20, #8]
  410058:	cbz	w8, 410044 <ferror@plt+0xd494>
  41005c:	bl	402b30 <__errno_location@plt>
  410060:	ldr	w1, [x0]
  410064:	cmp	w1, #0x2
  410068:	b.eq	410044 <ferror@plt+0xd494>  // b.none
  41006c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410070:	add	x2, x2, #0xf6c
  410074:	mov	w0, wzr
  410078:	mov	x3, x19
  41007c:	bl	402590 <error@plt>
  410080:	mov	w0, #0xffffffff            	// #-1
  410084:	b	410048 <ferror@plt+0xd498>
  410088:	stp	x29, x30, [sp, #-48]!
  41008c:	str	x21, [sp, #16]
  410090:	stp	x20, x19, [sp, #32]
  410094:	mov	x29, sp
  410098:	mov	x19, x1
  41009c:	mov	x20, x0
  4100a0:	bl	4100c8 <ferror@plt+0xd518>
  4100a4:	mov	w21, w0
  4100a8:	mov	x0, x20
  4100ac:	mov	x1, x19
  4100b0:	bl	40ff8c <ferror@plt+0xd3dc>
  4100b4:	mov	w0, w21
  4100b8:	ldp	x20, x19, [sp, #32]
  4100bc:	ldr	x21, [sp, #16]
  4100c0:	ldp	x29, x30, [sp], #48
  4100c4:	ret
  4100c8:	stp	x29, x30, [sp, #-32]!
  4100cc:	stp	x20, x19, [sp, #16]
  4100d0:	mov	x20, x0
  4100d4:	mov	x0, x1
  4100d8:	mov	x29, sp
  4100dc:	mov	x19, x1
  4100e0:	bl	402960 <rmdir@plt>
  4100e4:	tbnz	w0, #31, 4100f8 <ferror@plt+0xd548>
  4100e8:	mov	w0, wzr
  4100ec:	ldp	x20, x19, [sp, #16]
  4100f0:	ldp	x29, x30, [sp], #32
  4100f4:	ret
  4100f8:	ldrb	w8, [x20, #8]
  4100fc:	cbz	w8, 4100e8 <ferror@plt+0xd538>
  410100:	bl	402b30 <__errno_location@plt>
  410104:	ldr	w1, [x0]
  410108:	cmp	w1, #0x2
  41010c:	b.eq	4100e8 <ferror@plt+0xd538>  // b.none
  410110:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410114:	add	x2, x2, #0xf8c
  410118:	mov	w0, wzr
  41011c:	mov	x3, x19
  410120:	bl	402590 <error@plt>
  410124:	mov	w0, #0xffffffff            	// #-1
  410128:	b	4100ec <ferror@plt+0xd53c>
  41012c:	sub	sp, sp, #0xc0
  410130:	stp	x29, x30, [sp, #144]
  410134:	stp	x22, x21, [sp, #160]
  410138:	stp	x20, x19, [sp, #176]
  41013c:	ldr	x21, [x0, #24]
  410140:	mov	x19, x0
  410144:	add	x8, sp, #0x8
  410148:	add	x29, sp, #0x90
  41014c:	mov	x0, x21
  410150:	bl	41290c <ferror@plt+0xfd5c>
  410154:	ldur	q0, [sp, #8]
  410158:	ldur	q1, [sp, #24]
  41015c:	ldur	q2, [sp, #40]
  410160:	ldr	x8, [sp, #56]
  410164:	sub	x0, x29, #0x40
  410168:	add	x1, sp, #0x48
  41016c:	add	x2, sp, #0x40
  410170:	stp	q0, q1, [x29, #-64]
  410174:	stur	q2, [x29, #-32]
  410178:	stur	x8, [x29, #-16]
  41017c:	bl	412944 <ferror@plt+0xfd94>
  410180:	mov	w20, wzr
  410184:	tbz	w0, #0, 4101c4 <ferror@plt+0xd614>
  410188:	ldr	x22, [sp, #72]
  41018c:	mov	x0, x19
  410190:	mov	x1, x22
  410194:	bl	410024 <ferror@plt+0xd474>
  410198:	ldr	x1, [sp, #64]
  41019c:	orr	w20, w0, w20
  4101a0:	mov	x0, x21
  4101a4:	bl	412890 <ferror@plt+0xfce0>
  4101a8:	mov	x0, x22
  4101ac:	bl	4029a0 <free@plt>
  4101b0:	sub	x0, x29, #0x40
  4101b4:	add	x1, sp, #0x48
  4101b8:	add	x2, sp, #0x40
  4101bc:	bl	412944 <ferror@plt+0xfd94>
  4101c0:	tbnz	w0, #0, 410188 <ferror@plt+0xd5d8>
  4101c4:	sub	x0, x29, #0x40
  4101c8:	bl	412964 <ferror@plt+0xfdb4>
  4101cc:	ldr	x21, [x19, #16]
  4101d0:	add	x8, sp, #0x8
  4101d4:	mov	x0, x21
  4101d8:	bl	41290c <ferror@plt+0xfd5c>
  4101dc:	ldur	q0, [sp, #8]
  4101e0:	ldur	q1, [sp, #24]
  4101e4:	ldur	q2, [sp, #40]
  4101e8:	ldr	x8, [sp, #56]
  4101ec:	stp	q0, q1, [x29, #-64]
  4101f0:	stur	q2, [x29, #-32]
  4101f4:	stur	x8, [x29, #-16]
  4101f8:	sub	x0, x29, #0x40
  4101fc:	add	x1, sp, #0x48
  410200:	add	x2, sp, #0x40
  410204:	bl	412944 <ferror@plt+0xfd94>
  410208:	tbz	w0, #0, 410238 <ferror@plt+0xd688>
  41020c:	ldr	x22, [sp, #72]
  410210:	mov	x0, x19
  410214:	mov	x1, x22
  410218:	bl	4100c8 <ferror@plt+0xd518>
  41021c:	ldr	x1, [sp, #64]
  410220:	orr	w20, w0, w20
  410224:	mov	x0, x21
  410228:	bl	412890 <ferror@plt+0xfce0>
  41022c:	mov	x0, x22
  410230:	bl	4029a0 <free@plt>
  410234:	b	4101f8 <ferror@plt+0xd648>
  410238:	sub	x0, x29, #0x40
  41023c:	bl	412964 <ferror@plt+0xfdb4>
  410240:	mov	w0, w20
  410244:	ldp	x20, x19, [sp, #176]
  410248:	ldp	x22, x21, [sp, #160]
  41024c:	ldp	x29, x30, [sp, #144]
  410250:	add	sp, sp, #0xc0
  410254:	ret
  410258:	stp	x29, x30, [sp, #-32]!
  41025c:	stp	x20, x19, [sp, #16]
  410260:	mov	x29, sp
  410264:	mov	x19, x0
  410268:	bl	41012c <ferror@plt+0xd57c>
  41026c:	ldr	x1, [x19]
  410270:	mov	w20, w0
  410274:	mov	x0, x19
  410278:	bl	4100c8 <ferror@plt+0xd518>
  41027c:	mov	x9, xzr
  410280:	orr	w20, w0, w20
  410284:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410288:	adrp	x10, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  41028c:	ldr	x11, [x8, #2944]
  410290:	cmp	x9, x11
  410294:	b.cs	410318 <ferror@plt+0xd768>  // b.hs, b.nlast
  410298:	ldr	x11, [x10, #2936]
  41029c:	ldr	x11, [x11, x9, lsl #3]
  4102a0:	add	x9, x9, #0x1
  4102a4:	cmp	x11, x19
  4102a8:	b.ne	41028c <ferror@plt+0xd6dc>  // b.any
  4102ac:	ldr	x11, [x8, #2944]
  4102b0:	cmp	x11, x9
  4102b4:	b.ne	4102dc <ferror@plt+0xd72c>  // b.any
  4102b8:	subs	x11, x9, #0x1
  4102bc:	b.eq	4102d4 <ferror@plt+0xd724>  // b.none
  4102c0:	ldr	x12, [x10, #2936]
  4102c4:	add	x9, x12, x9, lsl #3
  4102c8:	ldur	x12, [x9, #-16]
  4102cc:	mov	x9, x11
  4102d0:	cbz	x12, 4102b8 <ferror@plt+0xd708>
  4102d4:	str	x11, [x8, #2944]
  4102d8:	b	4102e8 <ferror@plt+0xd738>
  4102dc:	ldr	x8, [x10, #2936]
  4102e0:	add	x8, x8, x9, lsl #3
  4102e4:	stur	xzr, [x8, #-8]
  4102e8:	ldr	x0, [x19, #24]
  4102ec:	bl	4128f0 <ferror@plt+0xfd40>
  4102f0:	ldr	x0, [x19, #16]
  4102f4:	bl	4128f0 <ferror@plt+0xfd40>
  4102f8:	ldr	x0, [x19]
  4102fc:	bl	4029a0 <free@plt>
  410300:	mov	x0, x19
  410304:	bl	4029a0 <free@plt>
  410308:	mov	w0, w20
  41030c:	ldp	x20, x19, [sp, #16]
  410310:	ldp	x29, x30, [sp], #32
  410314:	ret
  410318:	bl	4028d0 <abort@plt>
  41031c:	stp	x29, x30, [sp, #-48]!
  410320:	str	x21, [sp, #16]
  410324:	stp	x20, x19, [sp, #32]
  410328:	mov	x29, sp
  41032c:	mov	w19, w2
  410330:	mov	w20, w1
  410334:	mov	x21, x0
  410338:	bl	410dcc <ferror@plt+0xe21c>
  41033c:	mov	x0, x21
  410340:	mov	w1, w20
  410344:	mov	w2, w19
  410348:	bl	402710 <open@plt>
  41034c:	mov	w19, w0
  410350:	bl	402b30 <__errno_location@plt>
  410354:	ldr	w21, [x0]
  410358:	mov	x20, x0
  41035c:	tbnz	w19, #31, 410368 <ferror@plt+0xd7b8>
  410360:	mov	w0, w19
  410364:	bl	410384 <ferror@plt+0xd7d4>
  410368:	bl	410e6c <ferror@plt+0xe2bc>
  41036c:	str	w21, [x20]
  410370:	mov	w0, w19
  410374:	ldp	x20, x19, [sp, #32]
  410378:	ldr	x21, [sp, #16]
  41037c:	ldp	x29, x30, [sp], #48
  410380:	ret
  410384:	stp	x29, x30, [sp, #-32]!
  410388:	stp	x20, x19, [sp, #16]
  41038c:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410390:	ldr	x8, [x20, #2960]
  410394:	mov	w19, w0
  410398:	mov	x29, sp
  41039c:	cbnz	x8, 4103c0 <ferror@plt+0xd810>
  4103a0:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  4103a4:	add	x0, x0, #0xff8
  4103a8:	mov	x1, xzr
  4103ac:	mov	x2, xzr
  4103b0:	mov	x3, xzr
  4103b4:	mov	w4, wzr
  4103b8:	bl	415a90 <ferror@plt+0x12ee0>
  4103bc:	str	x0, [x20, #2960]
  4103c0:	ldr	x0, [x20, #2960]
  4103c4:	sxtw	x1, w19
  4103c8:	bl	415b08 <ferror@plt+0x12f58>
  4103cc:	ldp	x20, x19, [sp, #16]
  4103d0:	ldp	x29, x30, [sp], #32
  4103d4:	ret
  4103d8:	stp	x29, x30, [sp, #-48]!
  4103dc:	str	x21, [sp, #16]
  4103e0:	stp	x20, x19, [sp, #32]
  4103e4:	mov	x29, sp
  4103e8:	mov	x19, x1
  4103ec:	mov	x20, x0
  4103f0:	bl	410dcc <ferror@plt+0xe21c>
  4103f4:	mov	x0, x20
  4103f8:	mov	x1, x19
  4103fc:	bl	41107c <ferror@plt+0xe4cc>
  410400:	mov	x19, x0
  410404:	bl	402b30 <__errno_location@plt>
  410408:	ldr	w21, [x0]
  41040c:	mov	x20, x0
  410410:	cbz	x19, 410424 <ferror@plt+0xd874>
  410414:	mov	x0, x19
  410418:	bl	402690 <fileno@plt>
  41041c:	tbnz	w0, #31, 410440 <ferror@plt+0xd890>
  410420:	bl	410384 <ferror@plt+0xd7d4>
  410424:	bl	410e6c <ferror@plt+0xe2bc>
  410428:	str	w21, [x20]
  41042c:	mov	x0, x19
  410430:	ldp	x20, x19, [sp, #32]
  410434:	ldr	x21, [sp, #16]
  410438:	ldp	x29, x30, [sp], #48
  41043c:	ret
  410440:	bl	4028d0 <abort@plt>
  410444:	stp	x29, x30, [sp, #-48]!
  410448:	stp	x22, x21, [sp, #16]
  41044c:	stp	x20, x19, [sp, #32]
  410450:	mov	x29, sp
  410454:	mov	w20, w0
  410458:	bl	402860 <close@plt>
  41045c:	mov	w19, w0
  410460:	tbnz	w20, #31, 41047c <ferror@plt+0xd8cc>
  410464:	bl	402b30 <__errno_location@plt>
  410468:	ldr	w22, [x0]
  41046c:	mov	x21, x0
  410470:	mov	w0, w20
  410474:	bl	410490 <ferror@plt+0xd8e0>
  410478:	str	w22, [x21]
  41047c:	mov	w0, w19
  410480:	ldp	x20, x19, [sp, #32]
  410484:	ldp	x22, x21, [sp, #16]
  410488:	ldp	x29, x30, [sp], #48
  41048c:	ret
  410490:	stp	x29, x30, [sp, #-32]!
  410494:	str	x19, [sp, #16]
  410498:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  41049c:	ldr	x19, [x8, #2960]
  4104a0:	mov	x29, sp
  4104a4:	cbz	x19, 4104d0 <ferror@plt+0xd920>
  4104a8:	sxtw	x1, w0
  4104ac:	mov	x0, x19
  4104b0:	bl	412694 <ferror@plt+0xfae4>
  4104b4:	cbz	x0, 4104d0 <ferror@plt+0xd920>
  4104b8:	mov	x1, x0
  4104bc:	mov	x0, x19
  4104c0:	bl	412890 <ferror@plt+0xfce0>
  4104c4:	ldr	x19, [sp, #16]
  4104c8:	ldp	x29, x30, [sp], #32
  4104cc:	ret
  4104d0:	bl	4028d0 <abort@plt>
  4104d4:	stp	x29, x30, [sp, #-48]!
  4104d8:	stp	x22, x21, [sp, #16]
  4104dc:	stp	x20, x19, [sp, #32]
  4104e0:	mov	x29, sp
  4104e4:	mov	x19, x0
  4104e8:	bl	402690 <fileno@plt>
  4104ec:	mov	w20, w0
  4104f0:	mov	x0, x19
  4104f4:	bl	4160c0 <ferror@plt+0x13510>
  4104f8:	mov	w19, w0
  4104fc:	bl	402b30 <__errno_location@plt>
  410500:	ldr	w22, [x0]
  410504:	mov	x21, x0
  410508:	mov	w0, w20
  41050c:	bl	410490 <ferror@plt+0xd8e0>
  410510:	str	w22, [x21]
  410514:	mov	w0, w19
  410518:	ldp	x20, x19, [sp, #32]
  41051c:	ldp	x22, x21, [sp, #16]
  410520:	ldp	x29, x30, [sp], #48
  410524:	ret
  410528:	stp	x29, x30, [sp, #-48]!
  41052c:	stp	x22, x21, [sp, #16]
  410530:	stp	x20, x19, [sp, #32]
  410534:	mov	x29, sp
  410538:	mov	x19, x0
  41053c:	bl	402690 <fileno@plt>
  410540:	mov	w20, w0
  410544:	mov	x0, x19
  410548:	bl	410760 <ferror@plt+0xdbb0>
  41054c:	mov	w19, w0
  410550:	bl	402b30 <__errno_location@plt>
  410554:	ldr	w22, [x0]
  410558:	mov	x21, x0
  41055c:	mov	w0, w20
  410560:	bl	410490 <ferror@plt+0xd8e0>
  410564:	str	w22, [x21]
  410568:	mov	w0, w19
  41056c:	ldp	x20, x19, [sp, #32]
  410570:	ldp	x22, x21, [sp, #16]
  410574:	ldp	x29, x30, [sp], #48
  410578:	ret
  41057c:	sub	sp, sp, #0xb0
  410580:	stp	x29, x30, [sp, #128]
  410584:	stp	x22, x21, [sp, #144]
  410588:	stp	x20, x19, [sp, #160]
  41058c:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410590:	ldr	x0, [x8, #2960]
  410594:	add	x29, sp, #0x80
  410598:	cbz	x0, 4105e8 <ferror@plt+0xda38>
  41059c:	add	x8, sp, #0x8
  4105a0:	bl	41290c <ferror@plt+0xfd5c>
  4105a4:	ldur	q0, [sp, #8]
  4105a8:	ldur	q1, [sp, #24]
  4105ac:	ldur	q2, [sp, #40]
  4105b0:	ldr	x8, [sp, #56]
  4105b4:	stp	q0, q1, [sp, #64]
  4105b8:	str	q2, [sp, #96]
  4105bc:	str	x8, [sp, #112]
  4105c0:	add	x0, sp, #0x40
  4105c4:	add	x1, sp, #0x8
  4105c8:	mov	x2, xzr
  4105cc:	bl	412944 <ferror@plt+0xfd94>
  4105d0:	tbz	w0, #0, 4105e0 <ferror@plt+0xda30>
  4105d4:	ldr	w0, [sp, #8]
  4105d8:	bl	402860 <close@plt>
  4105dc:	b	4105c0 <ferror@plt+0xda10>
  4105e0:	add	x0, sp, #0x40
  4105e4:	bl	412964 <ferror@plt+0xfdb4>
  4105e8:	adrp	x19, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  4105ec:	ldr	x8, [x19, #2944]
  4105f0:	cbz	x8, 4106c4 <ferror@plt+0xdb14>
  4105f4:	mov	x20, xzr
  4105f8:	adrp	x21, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  4105fc:	b	410620 <ferror@plt+0xda70>
  410600:	add	x0, sp, #0x40
  410604:	bl	412964 <ferror@plt+0xfdb4>
  410608:	ldr	x0, [x22]
  41060c:	bl	402960 <rmdir@plt>
  410610:	ldr	x8, [x19, #2944]
  410614:	add	x20, x20, #0x1
  410618:	cmp	x20, x8
  41061c:	b.cs	4106c4 <ferror@plt+0xdb14>  // b.hs, b.nlast
  410620:	ldr	x8, [x21, #2936]
  410624:	ldr	x22, [x8, x20, lsl #3]
  410628:	cbz	x22, 410610 <ferror@plt+0xda60>
  41062c:	ldr	x0, [x22, #24]
  410630:	add	x8, sp, #0x8
  410634:	bl	41290c <ferror@plt+0xfd5c>
  410638:	ldur	q0, [sp, #8]
  41063c:	ldur	q1, [sp, #24]
  410640:	ldur	q2, [sp, #40]
  410644:	ldr	x8, [sp, #56]
  410648:	stp	q0, q1, [sp, #64]
  41064c:	str	q2, [sp, #96]
  410650:	str	x8, [sp, #112]
  410654:	add	x0, sp, #0x40
  410658:	mov	x1, sp
  41065c:	mov	x2, xzr
  410660:	bl	412944 <ferror@plt+0xfd94>
  410664:	tbz	w0, #0, 410674 <ferror@plt+0xdac4>
  410668:	ldr	x0, [sp]
  41066c:	bl	402b80 <unlink@plt>
  410670:	b	410654 <ferror@plt+0xdaa4>
  410674:	add	x0, sp, #0x40
  410678:	bl	412964 <ferror@plt+0xfdb4>
  41067c:	ldr	x0, [x22, #16]
  410680:	add	x8, sp, #0x8
  410684:	bl	41290c <ferror@plt+0xfd5c>
  410688:	ldur	q0, [sp, #8]
  41068c:	ldur	q1, [sp, #24]
  410690:	ldur	q2, [sp, #40]
  410694:	ldr	x8, [sp, #56]
  410698:	stp	q0, q1, [sp, #64]
  41069c:	str	q2, [sp, #96]
  4106a0:	str	x8, [sp, #112]
  4106a4:	add	x0, sp, #0x40
  4106a8:	mov	x1, sp
  4106ac:	mov	x2, xzr
  4106b0:	bl	412944 <ferror@plt+0xfd94>
  4106b4:	tbz	w0, #0, 410600 <ferror@plt+0xda50>
  4106b8:	ldr	x0, [sp]
  4106bc:	bl	402960 <rmdir@plt>
  4106c0:	b	4106a4 <ferror@plt+0xdaf4>
  4106c4:	ldp	x20, x19, [sp, #160]
  4106c8:	ldp	x22, x21, [sp, #144]
  4106cc:	ldp	x29, x30, [sp, #128]
  4106d0:	add	sp, sp, #0xb0
  4106d4:	ret
  4106d8:	stp	x29, x30, [sp, #-32]!
  4106dc:	stp	x20, x19, [sp, #16]
  4106e0:	mov	w20, w1
  4106e4:	mov	w1, #0x1                   	// #1
  4106e8:	mov	w2, wzr
  4106ec:	mov	x29, sp
  4106f0:	mov	w19, w0
  4106f4:	bl	41614c <ferror@plt+0x1359c>
  4106f8:	tbnz	w0, #31, 41071c <ferror@plt+0xdb6c>
  4106fc:	orr	w8, w0, #0x1
  410700:	and	w9, w0, #0xfffffffe
  410704:	tst	w20, #0x1
  410708:	csel	w2, w8, w9, ne  // ne = any
  41070c:	cmp	w0, w2
  410710:	b.ne	410724 <ferror@plt+0xdb74>  // b.any
  410714:	mov	w0, wzr
  410718:	b	410738 <ferror@plt+0xdb88>
  41071c:	mov	w0, #0xffffffff            	// #-1
  410720:	b	410738 <ferror@plt+0xdb88>
  410724:	mov	w1, #0x2                   	// #2
  410728:	mov	w0, w19
  41072c:	bl	41614c <ferror@plt+0x1359c>
  410730:	cmn	w0, #0x1
  410734:	csetm	w0, eq  // eq = none
  410738:	ldp	x20, x19, [sp, #16]
  41073c:	ldp	x29, x30, [sp], #32
  410740:	ret
  410744:	stp	x29, x30, [sp, #-16]!
  410748:	mov	w1, #0x406                 	// #1030
  41074c:	mov	w2, wzr
  410750:	mov	x29, sp
  410754:	bl	41614c <ferror@plt+0x1359c>
  410758:	ldp	x29, x30, [sp], #16
  41075c:	ret
  410760:	stp	x29, x30, [sp, #-48]!
  410764:	str	x21, [sp, #16]
  410768:	stp	x20, x19, [sp, #32]
  41076c:	mov	x29, sp
  410770:	mov	x20, x0
  410774:	bl	402680 <__fpending@plt>
  410778:	mov	x19, x0
  41077c:	mov	x0, x20
  410780:	bl	4025e0 <ferror_unlocked@plt>
  410784:	mov	w21, w0
  410788:	mov	x0, x20
  41078c:	bl	4160c0 <ferror@plt+0x13510>
  410790:	cbz	w21, 4107b4 <ferror@plt+0xdc04>
  410794:	cbnz	w0, 4107a0 <ferror@plt+0xdbf0>
  410798:	bl	402b30 <__errno_location@plt>
  41079c:	str	wzr, [x0]
  4107a0:	mov	w0, #0xffffffff            	// #-1
  4107a4:	ldp	x20, x19, [sp, #32]
  4107a8:	ldr	x21, [sp, #16]
  4107ac:	ldp	x29, x30, [sp], #48
  4107b0:	ret
  4107b4:	cbz	w0, 4107a4 <ferror@plt+0xdbf4>
  4107b8:	cbnz	x19, 410794 <ferror@plt+0xdbe4>
  4107bc:	bl	402b30 <__errno_location@plt>
  4107c0:	ldr	w8, [x0]
  4107c4:	cmp	w8, #0x9
  4107c8:	csetm	w0, ne  // ne = any
  4107cc:	b	4107a4 <ferror@plt+0xdbf4>
  4107d0:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  4107d4:	str	x0, [x8, #2968]
  4107d8:	ret
  4107dc:	stp	x29, x30, [sp, #-32]!
  4107e0:	stp	x20, x19, [sp, #16]
  4107e4:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4107e8:	ldr	x19, [x20, #1096]
  4107ec:	mov	x29, sp
  4107f0:	mov	x0, x19
  4107f4:	bl	416370 <ferror@plt+0x137c0>
  4107f8:	cbz	x0, 410810 <ferror@plt+0xdc60>
  4107fc:	mov	w2, #0x1                   	// #1
  410800:	mov	x0, x19
  410804:	mov	x1, xzr
  410808:	bl	4163b0 <ferror@plt+0x13800>
  41080c:	cbz	w0, 410818 <ferror@plt+0xdc68>
  410810:	mov	w19, wzr
  410814:	b	410828 <ferror@plt+0xdc78>
  410818:	ldr	x0, [x20, #1096]
  41081c:	bl	416310 <ferror@plt+0x13760>
  410820:	cmp	w0, #0x0
  410824:	cset	w19, ne  // ne = any
  410828:	ldr	x0, [x20, #1096]
  41082c:	bl	410760 <ferror@plt+0xdbb0>
  410830:	tbnz	w19, #0, 410848 <ferror@plt+0xdc98>
  410834:	cbnz	w0, 410848 <ferror@plt+0xdc98>
  410838:	bl	4108d0 <ferror@plt+0xdd20>
  41083c:	ldp	x20, x19, [sp, #16]
  410840:	ldp	x29, x30, [sp], #32
  410844:	ret
  410848:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  41084c:	ldr	x20, [x8, #2968]
  410850:	bl	402b30 <__errno_location@plt>
  410854:	ldr	w19, [x0]
  410858:	cbnz	x20, 41087c <ferror@plt+0xdccc>
  41085c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410860:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  410864:	add	x2, x2, #0x96
  410868:	add	x3, x3, #0xfb1
  41086c:	mov	w0, wzr
  410870:	mov	w1, w19
  410874:	bl	402590 <error@plt>
  410878:	b	4108a4 <ferror@plt+0xdcf4>
  41087c:	mov	x0, x20
  410880:	bl	414144 <ferror@plt+0x11594>
  410884:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410888:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x282c>
  41088c:	mov	x3, x0
  410890:	add	x2, x2, #0xfc4
  410894:	add	x4, x4, #0xfb1
  410898:	mov	w0, wzr
  41089c:	mov	w1, w19
  4108a0:	bl	402590 <error@plt>
  4108a4:	bl	4108d0 <ferror@plt+0xdd20>
  4108a8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4108ac:	ldr	w0, [x8, #892]
  4108b0:	bl	402530 <_exit@plt>
  4108b4:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  4108b8:	str	x0, [x8, #2976]
  4108bc:	ret
  4108c0:	and	w8, w0, #0x1
  4108c4:	adrp	x9, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  4108c8:	strb	w8, [x9, #2984]
  4108cc:	ret
  4108d0:	stp	x29, x30, [sp, #-32]!
  4108d4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4108d8:	ldr	x0, [x8, #1088]
  4108dc:	stp	x20, x19, [sp, #16]
  4108e0:	mov	x29, sp
  4108e4:	bl	410760 <ferror@plt+0xdbb0>
  4108e8:	cbz	w0, 410908 <ferror@plt+0xdd58>
  4108ec:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  4108f0:	ldrb	w8, [x8, #2984]
  4108f4:	cbz	w8, 410924 <ferror@plt+0xdd74>
  4108f8:	bl	402b30 <__errno_location@plt>
  4108fc:	ldr	w8, [x0]
  410900:	cmp	w8, #0x20
  410904:	b.ne	410924 <ferror@plt+0xdd74>  // b.any
  410908:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  41090c:	ldr	x0, [x8, #1064]
  410910:	bl	410760 <ferror@plt+0xdbb0>
  410914:	cbnz	w0, 410980 <ferror@plt+0xddd0>
  410918:	ldp	x20, x19, [sp, #16]
  41091c:	ldp	x29, x30, [sp], #32
  410920:	ret
  410924:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410928:	ldr	x20, [x8, #2976]
  41092c:	bl	402b30 <__errno_location@plt>
  410930:	ldr	w19, [x0]
  410934:	cbnz	x20, 410958 <ferror@plt+0xdda8>
  410938:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  41093c:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x282c>
  410940:	add	x2, x2, #0x96
  410944:	add	x3, x3, #0xfcb
  410948:	mov	w0, wzr
  41094c:	mov	w1, w19
  410950:	bl	402590 <error@plt>
  410954:	b	410980 <ferror@plt+0xddd0>
  410958:	mov	x0, x20
  41095c:	bl	414144 <ferror@plt+0x11594>
  410960:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410964:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x282c>
  410968:	mov	x3, x0
  41096c:	add	x2, x2, #0xfc4
  410970:	add	x4, x4, #0xfcb
  410974:	mov	w0, wzr
  410978:	mov	w1, w19
  41097c:	bl	402590 <error@plt>
  410980:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410984:	ldr	w0, [x8, #892]
  410988:	bl	402530 <_exit@plt>
  41098c:	stp	x29, x30, [sp, #-96]!
  410990:	stp	x28, x27, [sp, #16]
  410994:	stp	x26, x25, [sp, #32]
  410998:	stp	x24, x23, [sp, #48]
  41099c:	stp	x22, x21, [sp, #64]
  4109a0:	stp	x20, x19, [sp, #80]
  4109a4:	mov	x29, sp
  4109a8:	sub	sp, sp, #0x240
  4109ac:	ldr	x21, [x29, #104]
  4109b0:	mov	w22, w7
  4109b4:	mov	w20, w6
  4109b8:	mov	w27, w5
  4109bc:	mov	w28, w4
  4109c0:	mov	w23, w3
  4109c4:	mov	x24, x2
  4109c8:	mov	x25, x1
  4109cc:	str	x0, [sp, #8]
  4109d0:	tbz	w7, #0, 4109e8 <ferror@plt+0xde38>
  4109d4:	sub	x2, x29, #0x88
  4109d8:	mov	w0, #0x2                   	// #2
  4109dc:	mov	x1, xzr
  4109e0:	bl	4025a0 <sigprocmask@plt>
  4109e4:	bl	410dcc <ferror@plt+0xe21c>
  4109e8:	ldrb	w19, [x29, #96]
  4109ec:	sub	x0, x29, #0xd8
  4109f0:	bl	402910 <posix_spawn_file_actions_init@plt>
  4109f4:	cbz	w0, 410a08 <ferror@plt+0xde58>
  4109f8:	mov	w26, w0
  4109fc:	mov	w28, wzr
  410a00:	mov	w27, wzr
  410a04:	b	410aa0 <ferror@plt+0xdef0>
  410a08:	tbz	w28, #0, 410a2c <ferror@plt+0xde7c>
  410a0c:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410a10:	add	x2, x2, #0xfd7
  410a14:	sub	x0, x29, #0xd8
  410a18:	mov	w1, wzr
  410a1c:	mov	w3, wzr
  410a20:	mov	w4, wzr
  410a24:	bl	402650 <posix_spawn_file_actions_addopen@plt>
  410a28:	cbnz	w0, 410a94 <ferror@plt+0xdee4>
  410a2c:	tbz	w27, #0, 410a60 <ferror@plt+0xdeb0>
  410a30:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410a34:	add	x2, x2, #0xfd7
  410a38:	sub	x0, x29, #0xd8
  410a3c:	mov	w1, #0x1                   	// #1
  410a40:	mov	w3, #0x2                   	// #2
  410a44:	mov	w4, wzr
  410a48:	mov	w28, #0x1                   	// #1
  410a4c:	bl	402650 <posix_spawn_file_actions_addopen@plt>
  410a50:	cbz	w0, 410a60 <ferror@plt+0xdeb0>
  410a54:	mov	w26, w0
  410a58:	mov	w27, wzr
  410a5c:	b	410aa0 <ferror@plt+0xdef0>
  410a60:	tbz	w20, #0, 410a84 <ferror@plt+0xded4>
  410a64:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410a68:	add	x2, x2, #0xfd7
  410a6c:	sub	x0, x29, #0xd8
  410a70:	mov	w1, #0x2                   	// #2
  410a74:	mov	w3, #0x2                   	// #2
  410a78:	mov	w4, wzr
  410a7c:	bl	402650 <posix_spawn_file_actions_addopen@plt>
  410a80:	cbnz	w0, 410a94 <ferror@plt+0xdee4>
  410a84:	tbz	w22, #0, 410b1c <ferror@plt+0xdf6c>
  410a88:	add	x0, sp, #0x18
  410a8c:	bl	402a60 <posix_spawnattr_init@plt>
  410a90:	cbz	w0, 410b9c <ferror@plt+0xdfec>
  410a94:	mov	w26, w0
  410a98:	mov	w27, wzr
  410a9c:	mov	w28, #0x1                   	// #1
  410aa0:	cbz	w28, 410ac0 <ferror@plt+0xdf10>
  410aa4:	sub	x0, x29, #0xd8
  410aa8:	bl	402800 <posix_spawn_file_actions_destroy@plt>
  410aac:	cbnz	w27, 410ac4 <ferror@plt+0xdf14>
  410ab0:	tbz	w22, #0, 410ad0 <ferror@plt+0xdf20>
  410ab4:	bl	410e6c <ferror@plt+0xe2bc>
  410ab8:	cbnz	x21, 410ad4 <ferror@plt+0xdf24>
  410abc:	b	410ad8 <ferror@plt+0xdf28>
  410ac0:	cbz	w27, 410ab0 <ferror@plt+0xdf00>
  410ac4:	add	x0, sp, #0x18
  410ac8:	bl	402750 <posix_spawnattr_destroy@plt>
  410acc:	tbnz	w22, #0, 410ab4 <ferror@plt+0xdf04>
  410ad0:	cbz	x21, 410ad8 <ferror@plt+0xdf28>
  410ad4:	str	wzr, [x21]
  410ad8:	tbz	w20, #0, 410ae0 <ferror@plt+0xdf30>
  410adc:	tbz	w19, #0, 410af8 <ferror@plt+0xdf48>
  410ae0:	ldr	x3, [sp, #8]
  410ae4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  410ae8:	and	w0, w19, #0x1
  410aec:	add	x2, x2, #0xfe1
  410af0:	mov	w1, w26
  410af4:	bl	402590 <error@plt>
  410af8:	mov	w0, #0x7f                  	// #127
  410afc:	add	sp, sp, #0x240
  410b00:	ldp	x20, x19, [sp, #80]
  410b04:	ldp	x22, x21, [sp, #64]
  410b08:	ldp	x24, x23, [sp, #48]
  410b0c:	ldp	x26, x25, [sp, #32]
  410b10:	ldp	x28, x27, [sp, #16]
  410b14:	ldp	x29, x30, [sp], #96
  410b18:	ret
  410b1c:	mov	w27, wzr
  410b20:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410b24:	ldr	x5, [x8, #1104]
  410b28:	cmp	w27, #0x0
  410b2c:	add	x8, sp, #0x18
  410b30:	csel	x3, x8, xzr, ne  // ne = any
  410b34:	add	x0, sp, #0x14
  410b38:	sub	x2, x29, #0xd8
  410b3c:	mov	x1, x25
  410b40:	mov	x4, x24
  410b44:	bl	4029d0 <posix_spawnp@plt>
  410b48:	cbz	w0, 410b54 <ferror@plt+0xdfa4>
  410b4c:	mov	w26, w0
  410b50:	b	410a9c <ferror@plt+0xdeec>
  410b54:	sub	x0, x29, #0xd8
  410b58:	bl	402800 <posix_spawn_file_actions_destroy@plt>
  410b5c:	cbz	w27, 410b68 <ferror@plt+0xdfb8>
  410b60:	add	x0, sp, #0x18
  410b64:	bl	402750 <posix_spawnattr_destroy@plt>
  410b68:	tbz	w22, #0, 410b78 <ferror@plt+0xdfc8>
  410b6c:	ldr	w0, [sp, #20]
  410b70:	bl	4153dc <ferror@plt+0x1282c>
  410b74:	bl	410e6c <ferror@plt+0xe2bc>
  410b78:	ldr	w0, [sp, #20]
  410b7c:	ldr	x1, [sp, #8]
  410b80:	and	w2, w23, #0x1
  410b84:	and	w3, w20, #0x1
  410b88:	and	w4, w22, #0x1
  410b8c:	and	w5, w19, #0x1
  410b90:	mov	x6, x21
  410b94:	bl	41557c <ferror@plt+0x129cc>
  410b98:	b	410afc <ferror@plt+0xdf4c>
  410b9c:	add	x0, sp, #0x18
  410ba0:	sub	x1, x29, #0x88
  410ba4:	bl	402900 <posix_spawnattr_setsigmask@plt>
  410ba8:	cbz	w0, 410bbc <ferror@plt+0xe00c>
  410bac:	mov	w26, w0
  410bb0:	mov	w28, #0x1                   	// #1
  410bb4:	mov	w27, #0x1                   	// #1
  410bb8:	b	410aa0 <ferror@plt+0xdef0>
  410bbc:	add	x0, sp, #0x18
  410bc0:	mov	w1, #0x8                   	// #8
  410bc4:	bl	4028c0 <posix_spawnattr_setflags@plt>
  410bc8:	mov	w26, w0
  410bcc:	mov	w27, #0x1                   	// #1
  410bd0:	mov	w28, #0x1                   	// #1
  410bd4:	cbnz	w0, 410aa0 <ferror@plt+0xdef0>
  410bd8:	b	410b20 <ferror@plt+0xdf70>
  410bdc:	stp	x29, x30, [sp, #-80]!
  410be0:	stp	x20, x19, [sp, #64]
  410be4:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410be8:	ldrb	w8, [x20, #2992]
  410bec:	mov	x19, x0
  410bf0:	str	x25, [sp, #16]
  410bf4:	stp	x24, x23, [sp, #32]
  410bf8:	stp	x22, x21, [sp, #48]
  410bfc:	mov	x29, sp
  410c00:	tbnz	w8, #0, 410c14 <ferror@plt+0xe064>
  410c04:	bl	410cb0 <ferror@plt+0xe100>
  410c08:	bl	410d38 <ferror@plt+0xe188>
  410c0c:	mov	w8, #0x1                   	// #1
  410c10:	strb	w8, [x20, #2992]
  410c14:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410c18:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410c1c:	ldrsw	x8, [x22, #2996]
  410c20:	ldr	x25, [x24, #896]
  410c24:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410c28:	cmp	x25, x8
  410c2c:	b.ne	410c80 <ferror@plt+0xe0d0>  // b.any
  410c30:	ldr	x20, [x23, #904]
  410c34:	lsl	x21, x25, #1
  410c38:	mov	w1, #0x8                   	// #8
  410c3c:	mov	x0, x21
  410c40:	bl	41575c <ferror@plt+0x12bac>
  410c44:	cbz	x25, 410c60 <ferror@plt+0xe0b0>
  410c48:	mov	x8, x0
  410c4c:	mov	x9, x20
  410c50:	ldr	x10, [x9], #8
  410c54:	subs	x25, x25, #0x1
  410c58:	str	x10, [x8], #8
  410c5c:	b.ne	410c50 <ferror@plt+0xe0a0>  // b.any
  410c60:	adrp	x8, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410c64:	add	x8, x8, #0xbb8
  410c68:	cmp	x20, x8
  410c6c:	str	x0, [x23, #904]
  410c70:	str	x21, [x24, #896]
  410c74:	b.eq	410c80 <ferror@plt+0xe0d0>  // b.none
  410c78:	mov	x0, x20
  410c7c:	bl	4029a0 <free@plt>
  410c80:	ldr	x8, [x23, #904]
  410c84:	ldrsw	x9, [x22, #2996]
  410c88:	str	x19, [x8, x9, lsl #3]
  410c8c:	ldr	w8, [x22, #2996]
  410c90:	add	w8, w8, #0x1
  410c94:	str	w8, [x22, #2996]
  410c98:	ldp	x20, x19, [sp, #64]
  410c9c:	ldp	x22, x21, [sp, #48]
  410ca0:	ldp	x24, x23, [sp, #32]
  410ca4:	ldr	x25, [sp, #16]
  410ca8:	ldp	x29, x30, [sp], #80
  410cac:	ret
  410cb0:	sub	sp, sp, #0xd0
  410cb4:	stp	x20, x19, [sp, #192]
  410cb8:	adrp	x19, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410cbc:	ldrb	w8, [x19, #3384]
  410cc0:	stp	x29, x30, [sp, #160]
  410cc4:	stp	x22, x21, [sp, #176]
  410cc8:	add	x29, sp, #0xa0
  410ccc:	tbnz	w8, #0, 410d24 <ferror@plt+0xe174>
  410cd0:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410cd4:	mov	x20, xzr
  410cd8:	add	x21, x21, #0x390
  410cdc:	mov	w22, #0xffffffff            	// #-1
  410ce0:	b	410cf0 <ferror@plt+0xe140>
  410ce4:	add	x20, x20, #0x4
  410ce8:	cmp	x20, #0x18
  410cec:	b.eq	410d1c <ferror@plt+0xe16c>  // b.none
  410cf0:	ldr	w0, [x21, x20]
  410cf4:	add	x2, sp, #0x8
  410cf8:	mov	x1, xzr
  410cfc:	bl	402870 <sigaction@plt>
  410d00:	tbnz	w0, #31, 410ce4 <ferror@plt+0xe134>
  410d04:	add	x0, sp, #0x8
  410d08:	bl	4147e4 <ferror@plt+0x11c34>
  410d0c:	cmp	x0, #0x1
  410d10:	b.ne	410ce4 <ferror@plt+0xe134>  // b.any
  410d14:	str	w22, [x21, x20]
  410d18:	b	410ce4 <ferror@plt+0xe134>
  410d1c:	mov	w8, #0x1                   	// #1
  410d20:	strb	w8, [x19, #3384]
  410d24:	ldp	x20, x19, [sp, #192]
  410d28:	ldp	x22, x21, [sp, #176]
  410d2c:	ldp	x29, x30, [sp, #160]
  410d30:	add	sp, sp, #0xd0
  410d34:	ret
  410d38:	sub	sp, sp, #0xd0
  410d3c:	adrp	x8, 410000 <ferror@plt+0xd450>
  410d40:	add	x10, sp, #0x8
  410d44:	add	x8, x8, #0xe94
  410d48:	mov	w9, #0x40000000            	// #1073741824
  410d4c:	add	x0, x10, #0x8
  410d50:	stp	x29, x30, [sp, #160]
  410d54:	stp	x22, x21, [sp, #176]
  410d58:	stp	x20, x19, [sp, #192]
  410d5c:	add	x29, sp, #0xa0
  410d60:	str	x8, [sp, #8]
  410d64:	str	w9, [sp, #144]
  410d68:	bl	402740 <sigemptyset@plt>
  410d6c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410d70:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410d74:	mov	x19, xzr
  410d78:	add	x20, x20, #0x390
  410d7c:	mov	w21, #0x98                  	// #152
  410d80:	add	x22, x22, #0xd40
  410d84:	b	410d94 <ferror@plt+0xe1e4>
  410d88:	add	x19, x19, #0x4
  410d8c:	cmp	x19, #0x18
  410d90:	b.eq	410db4 <ferror@plt+0xe204>  // b.none
  410d94:	ldrsw	x0, [x20, x19]
  410d98:	tbnz	w0, #31, 410d88 <ferror@plt+0xe1d8>
  410d9c:	cmp	w0, #0x40
  410da0:	b.cs	410dc8 <ferror@plt+0xe218>  // b.hs, b.nlast
  410da4:	madd	x2, x0, x21, x22
  410da8:	add	x1, sp, #0x8
  410dac:	bl	402870 <sigaction@plt>
  410db0:	b	410d88 <ferror@plt+0xe1d8>
  410db4:	ldp	x20, x19, [sp, #192]
  410db8:	ldp	x22, x21, [sp, #176]
  410dbc:	ldp	x29, x30, [sp, #160]
  410dc0:	add	sp, sp, #0xd0
  410dc4:	ret
  410dc8:	bl	4028d0 <abort@plt>
  410dcc:	stp	x29, x30, [sp, #-16]!
  410dd0:	mov	x29, sp
  410dd4:	bl	410df4 <ferror@plt+0xe244>
  410dd8:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410ddc:	add	x1, x1, #0xcb8
  410de0:	mov	w0, wzr
  410de4:	mov	x2, xzr
  410de8:	bl	4025a0 <sigprocmask@plt>
  410dec:	ldp	x29, x30, [sp], #16
  410df0:	ret
  410df4:	stp	x29, x30, [sp, #-48]!
  410df8:	stp	x20, x19, [sp, #32]
  410dfc:	adrp	x20, 437000 <__progname@@GLIBC_2.17+0xaba8>
  410e00:	ldrb	w8, [x20, #832]
  410e04:	stp	x22, x21, [sp, #16]
  410e08:	mov	x29, sp
  410e0c:	tbnz	w8, #0, 410e5c <ferror@plt+0xe2ac>
  410e10:	bl	410cb0 <ferror@plt+0xe100>
  410e14:	adrp	x19, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410e18:	add	x19, x19, #0xcb8
  410e1c:	mov	x0, x19
  410e20:	bl	402740 <sigemptyset@plt>
  410e24:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410e28:	mov	x21, xzr
  410e2c:	add	x22, x22, #0x390
  410e30:	b	410e40 <ferror@plt+0xe290>
  410e34:	add	x21, x21, #0x4
  410e38:	cmp	x21, #0x18
  410e3c:	b.eq	410e54 <ferror@plt+0xe2a4>  // b.none
  410e40:	ldr	w1, [x22, x21]
  410e44:	tbnz	w1, #31, 410e34 <ferror@plt+0xe284>
  410e48:	mov	x0, x19
  410e4c:	bl	402b00 <sigaddset@plt>
  410e50:	b	410e34 <ferror@plt+0xe284>
  410e54:	mov	w8, #0x1                   	// #1
  410e58:	strb	w8, [x20, #832]
  410e5c:	ldp	x20, x19, [sp, #32]
  410e60:	ldp	x22, x21, [sp, #16]
  410e64:	ldp	x29, x30, [sp], #48
  410e68:	ret
  410e6c:	stp	x29, x30, [sp, #-16]!
  410e70:	mov	x29, sp
  410e74:	bl	410df4 <ferror@plt+0xe244>
  410e78:	adrp	x1, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410e7c:	add	x1, x1, #0xcb8
  410e80:	mov	w0, #0x1                   	// #1
  410e84:	mov	x2, xzr
  410e88:	bl	4025a0 <sigprocmask@plt>
  410e8c:	ldp	x29, x30, [sp], #16
  410e90:	ret
  410e94:	stp	x29, x30, [sp, #-48]!
  410e98:	str	x21, [sp, #16]
  410e9c:	stp	x20, x19, [sp, #32]
  410ea0:	adrp	x20, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410ea4:	ldr	w8, [x20, #2996]
  410ea8:	mov	w19, w0
  410eac:	mov	x29, sp
  410eb0:	cbz	w8, 410ed8 <ferror@plt+0xe328>
  410eb4:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410eb8:	sxtw	x8, w8
  410ebc:	sub	x8, x8, #0x1
  410ec0:	str	w8, [x20, #2996]
  410ec4:	ldr	x9, [x21, #904]
  410ec8:	ldr	x8, [x9, x8, lsl #3]
  410ecc:	blr	x8
  410ed0:	ldr	w8, [x20, #2996]
  410ed4:	cbnz	w8, 410eb8 <ferror@plt+0xe308>
  410ed8:	bl	410ef4 <ferror@plt+0xe344>
  410edc:	mov	w0, w19
  410ee0:	bl	402580 <raise@plt>
  410ee4:	ldp	x20, x19, [sp, #32]
  410ee8:	ldr	x21, [sp, #16]
  410eec:	ldp	x29, x30, [sp], #48
  410ef0:	ret
  410ef4:	stp	x29, x30, [sp, #-48]!
  410ef8:	stp	x22, x21, [sp, #16]
  410efc:	stp	x20, x19, [sp, #32]
  410f00:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  410f04:	adrp	x22, 434000 <__progname@@GLIBC_2.17+0x7ba8>
  410f08:	mov	x19, xzr
  410f0c:	add	x20, x20, #0x390
  410f10:	mov	w21, #0x98                  	// #152
  410f14:	add	x22, x22, #0xd40
  410f18:	mov	x29, sp
  410f1c:	b	410f34 <ferror@plt+0xe384>
  410f20:	mov	x2, xzr
  410f24:	bl	402870 <sigaction@plt>
  410f28:	add	x19, x19, #0x4
  410f2c:	cmp	x19, #0x18
  410f30:	b.eq	410f54 <ferror@plt+0xe3a4>  // b.none
  410f34:	ldrsw	x0, [x20, x19]
  410f38:	tbnz	w0, #31, 410f28 <ferror@plt+0xe378>
  410f3c:	madd	x1, x0, x21, x22
  410f40:	ldr	x8, [x1]
  410f44:	cmp	x8, #0x1
  410f48:	b.ne	410f20 <ferror@plt+0xe370>  // b.any
  410f4c:	str	xzr, [x1]
  410f50:	b	410f20 <ferror@plt+0xe370>
  410f54:	ldp	x20, x19, [sp, #32]
  410f58:	ldp	x22, x21, [sp, #16]
  410f5c:	ldp	x29, x30, [sp], #48
  410f60:	ret
  410f64:	stp	x29, x30, [sp, #-16]!
  410f68:	mov	x29, sp
  410f6c:	bl	410f80 <ferror@plt+0xe3d0>
  410f70:	cbz	x0, 410f7c <ferror@plt+0xe3cc>
  410f74:	ldp	x29, x30, [sp], #16
  410f78:	ret
  410f7c:	bl	415a64 <ferror@plt+0x12eb4>
  410f80:	stp	x29, x30, [sp, #-80]!
  410f84:	stp	x26, x25, [sp, #16]
  410f88:	stp	x24, x23, [sp, #32]
  410f8c:	stp	x22, x21, [sp, #48]
  410f90:	stp	x20, x19, [sp, #64]
  410f94:	mov	x29, sp
  410f98:	mov	x19, x2
  410f9c:	mov	x20, x1
  410fa0:	mov	x21, x0
  410fa4:	bl	4169d4 <_obstack_memory_used@@Base+0x200>
  410fa8:	mov	x22, x0
  410fac:	bl	416a20 <_obstack_memory_used@@Base+0x24c>
  410fb0:	sub	x8, x22, x21
  410fb4:	add	x23, x8, x0
  410fb8:	cbz	x0, 410fd0 <ferror@plt+0xe420>
  410fbc:	add	x8, x0, x22
  410fc0:	ldurb	w8, [x8, #-1]
  410fc4:	cmp	w8, #0x2f
  410fc8:	cset	w26, ne  // ne = any
  410fcc:	b	410fd4 <ferror@plt+0xe424>
  410fd0:	mov	x26, xzr
  410fd4:	mov	x0, x20
  410fd8:	bl	411068 <ferror@plt+0xe4b8>
  410fdc:	mov	x22, x0
  410fe0:	bl	402540 <strlen@plt>
  410fe4:	add	x8, x23, x26
  410fe8:	add	x8, x8, x0
  410fec:	mov	x25, x0
  410ff0:	add	x0, x8, #0x1
  410ff4:	bl	402700 <malloc@plt>
  410ff8:	mov	x24, x0
  410ffc:	cbz	x0, 41104c <ferror@plt+0xe49c>
  411000:	mov	x3, #0xffffffffffffffff    	// #-1
  411004:	mov	x0, x24
  411008:	mov	x1, x21
  41100c:	mov	x2, x23
  411010:	bl	402a90 <__mempcpy_chk@plt>
  411014:	mov	w8, #0x2f                  	// #47
  411018:	strb	w8, [x0]
  41101c:	add	x0, x0, x26
  411020:	cbz	x19, 411038 <ferror@plt+0xe488>
  411024:	ldrb	w8, [x20]
  411028:	cmp	w8, #0x2f
  41102c:	cset	w8, eq  // eq = none
  411030:	sub	x8, x0, x8
  411034:	str	x8, [x19]
  411038:	mov	x3, #0xffffffffffffffff    	// #-1
  41103c:	mov	x1, x22
  411040:	mov	x2, x25
  411044:	bl	402a90 <__mempcpy_chk@plt>
  411048:	strb	wzr, [x0]
  41104c:	mov	x0, x24
  411050:	ldp	x20, x19, [sp, #64]
  411054:	ldp	x22, x21, [sp, #48]
  411058:	ldp	x24, x23, [sp, #32]
  41105c:	ldp	x26, x25, [sp, #16]
  411060:	ldp	x29, x30, [sp], #80
  411064:	ret
  411068:	sub	x0, x0, #0x1
  41106c:	ldrb	w8, [x0, #1]!
  411070:	cmp	w8, #0x2f
  411074:	b.eq	41106c <ferror@plt+0xe4bc>  // b.none
  411078:	ret
  41107c:	stp	x29, x30, [sp, #-48]!
  411080:	stp	x22, x21, [sp, #16]
  411084:	stp	x20, x19, [sp, #32]
  411088:	mov	x29, sp
  41108c:	mov	x20, x1
  411090:	bl	4026f0 <fopen@plt>
  411094:	mov	x19, x0
  411098:	cbz	x0, 411114 <ferror@plt+0xe564>
  41109c:	mov	x0, x19
  4110a0:	bl	402690 <fileno@plt>
  4110a4:	cmp	w0, #0x2
  4110a8:	b.hi	411108 <ferror@plt+0xe558>  // b.pmore
  4110ac:	bl	414e84 <ferror@plt+0x122d4>
  4110b0:	tbnz	w0, #31, 4110e8 <ferror@plt+0xe538>
  4110b4:	mov	w21, w0
  4110b8:	mov	x0, x19
  4110bc:	bl	4160c0 <ferror@plt+0x13510>
  4110c0:	cbz	w0, 411128 <ferror@plt+0xe578>
  4110c4:	bl	402b30 <__errno_location@plt>
  4110c8:	ldr	w22, [x0]
  4110cc:	mov	x20, x0
  4110d0:	mov	w0, w21
  4110d4:	bl	402860 <close@plt>
  4110d8:	str	w22, [x20]
  4110dc:	mov	w8, #0x1                   	// #1
  4110e0:	cbnz	w8, 41110c <ferror@plt+0xe55c>
  4110e4:	b	411108 <ferror@plt+0xe558>
  4110e8:	bl	402b30 <__errno_location@plt>
  4110ec:	ldr	w21, [x0]
  4110f0:	mov	x20, x0
  4110f4:	mov	x0, x19
  4110f8:	bl	4160c0 <ferror@plt+0x13510>
  4110fc:	str	w21, [x20]
  411100:	mov	w8, #0x1                   	// #1
  411104:	cbnz	w8, 41110c <ferror@plt+0xe55c>
  411108:	mov	w8, wzr
  41110c:	cbz	w8, 411114 <ferror@plt+0xe564>
  411110:	mov	x19, xzr
  411114:	mov	x0, x19
  411118:	ldp	x20, x19, [sp, #32]
  41111c:	ldp	x22, x21, [sp, #16]
  411120:	ldp	x29, x30, [sp], #48
  411124:	ret
  411128:	mov	w0, w21
  41112c:	mov	x1, x20
  411130:	bl	4027b0 <fdopen@plt>
  411134:	mov	x19, x0
  411138:	cbz	x0, 4110c4 <ferror@plt+0xe514>
  41113c:	mov	w8, wzr
  411140:	cbnz	w8, 41110c <ferror@plt+0xe55c>
  411144:	b	411108 <ferror@plt+0xe558>
  411148:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  41114c:	ldr	x0, [x8, #1112]
  411150:	ret
  411154:	stp	x29, x30, [sp, #-64]!
  411158:	stp	x24, x23, [sp, #16]
  41115c:	mov	x24, x0
  411160:	mov	w0, #0x68                  	// #104
  411164:	stp	x22, x21, [sp, #32]
  411168:	stp	x20, x19, [sp, #48]
  41116c:	mov	x29, sp
  411170:	mov	w22, w4
  411174:	mov	x20, x3
  411178:	mov	x21, x2
  41117c:	mov	x23, x1
  411180:	bl	402700 <malloc@plt>
  411184:	mov	x19, x0
  411188:	cbz	x0, 4111d4 <ferror@plt+0xe624>
  41118c:	and	w8, w22, #0x1
  411190:	mov	w9, #0xb                   	// #11
  411194:	mov	w0, #0xb                   	// #11
  411198:	mov	w1, #0x8                   	// #8
  41119c:	stp	x24, x23, [x19]
  4111a0:	stp	x21, x20, [x19, #16]
  4111a4:	strb	w8, [x19, #32]
  4111a8:	str	x9, [x19, #48]
  4111ac:	bl	4027e0 <calloc@plt>
  4111b0:	str	x0, [x19, #40]
  4111b4:	cbz	x0, 4111c8 <ferror@plt+0xe618>
  4111b8:	add	x8, x19, #0x38
  4111bc:	stp	x8, x8, [x19, #72]
  4111c0:	str	xzr, [x19, #96]
  4111c4:	b	4111d4 <ferror@plt+0xe624>
  4111c8:	mov	x0, x19
  4111cc:	bl	4029a0 <free@plt>
  4111d0:	mov	x19, xzr
  4111d4:	mov	x0, x19
  4111d8:	ldp	x20, x19, [sp, #48]
  4111dc:	ldp	x22, x21, [sp, #32]
  4111e0:	ldp	x24, x23, [sp, #16]
  4111e4:	ldp	x29, x30, [sp], #64
  4111e8:	ret
  4111ec:	stp	x29, x30, [sp, #-80]!
  4111f0:	stp	x26, x25, [sp, #16]
  4111f4:	mov	x26, x0
  4111f8:	mov	w0, #0x68                  	// #104
  4111fc:	stp	x24, x23, [sp, #32]
  411200:	stp	x22, x21, [sp, #48]
  411204:	stp	x20, x19, [sp, #64]
  411208:	mov	x29, sp
  41120c:	mov	x20, x6
  411210:	mov	x21, x5
  411214:	mov	w24, w4
  411218:	mov	x22, x3
  41121c:	mov	x23, x2
  411220:	mov	x25, x1
  411224:	bl	402700 <malloc@plt>
  411228:	mov	x19, x0
  41122c:	cbz	x0, 411330 <ferror@plt+0xe780>
  411230:	and	w8, w24, #0x1
  411234:	lsr	x1, x21, #1
  411238:	mov	x0, x21
  41123c:	stp	x26, x25, [x19]
  411240:	stp	x23, x22, [x19, #16]
  411244:	strb	w8, [x19, #32]
  411248:	bl	415de0 <ferror@plt+0x13230>
  41124c:	cmp	x0, #0xa
  411250:	mov	w8, #0xa                   	// #10
  411254:	csel	x0, x0, x8, hi  // hi = pmore
  411258:	bl	41241c <ferror@plt+0xf86c>
  41125c:	lsr	x8, x0, #61
  411260:	str	x0, [x19, #48]
  411264:	cbnz	x8, 411324 <ferror@plt+0xe774>
  411268:	mov	w1, #0x8                   	// #8
  41126c:	bl	4027e0 <calloc@plt>
  411270:	str	x0, [x19, #40]
  411274:	cbz	x0, 411324 <ferror@plt+0xe774>
  411278:	add	x24, x19, #0x38
  41127c:	mov	x22, x24
  411280:	str	x21, [x19, #96]
  411284:	cbz	x21, 4112e8 <ferror@plt+0xe738>
  411288:	mov	w0, #0x28                  	// #40
  41128c:	bl	402700 <malloc@plt>
  411290:	cbz	x0, 4112d4 <ferror@plt+0xe724>
  411294:	mov	x23, x0
  411298:	ldr	x0, [x20]
  41129c:	ldr	x8, [x19, #16]
  4112a0:	str	x0, [x23, #32]
  4112a4:	cbz	x8, 4112ac <ferror@plt+0xe6fc>
  4112a8:	blr	x8
  4112ac:	str	x0, [x23, #8]
  4112b0:	mov	x0, x19
  4112b4:	mov	x1, x23
  4112b8:	bl	41244c <ferror@plt+0xf89c>
  4112bc:	mov	w8, wzr
  4112c0:	str	x22, [x23, #24]
  4112c4:	str	x23, [x22, #16]
  4112c8:	mov	x22, x23
  4112cc:	cbz	w8, 4112dc <ferror@plt+0xe72c>
  4112d0:	b	4112f4 <ferror@plt+0xe744>
  4112d4:	mov	w8, #0x6                   	// #6
  4112d8:	cbnz	w8, 4112f4 <ferror@plt+0xe744>
  4112dc:	subs	x21, x21, #0x1
  4112e0:	add	x20, x20, #0x8
  4112e4:	b.ne	411288 <ferror@plt+0xe6d8>  // b.any
  4112e8:	str	x24, [x22, #16]
  4112ec:	str	x22, [x19, #80]
  4112f0:	b	411330 <ferror@plt+0xe780>
  4112f4:	cmp	w8, #0x6
  4112f8:	b.ne	41134c <ferror@plt+0xe79c>  // b.any
  4112fc:	cmp	x22, x24
  411300:	b.eq	41131c <ferror@plt+0xe76c>  // b.none
  411304:	ldr	x20, [x22, #24]
  411308:	mov	x0, x22
  41130c:	bl	4029a0 <free@plt>
  411310:	cmp	x20, x24
  411314:	mov	x22, x20
  411318:	b.ne	411304 <ferror@plt+0xe754>  // b.any
  41131c:	ldr	x0, [x19, #40]
  411320:	bl	4029a0 <free@plt>
  411324:	mov	x0, x19
  411328:	bl	4029a0 <free@plt>
  41132c:	mov	x19, xzr
  411330:	mov	x0, x19
  411334:	ldp	x20, x19, [sp, #64]
  411338:	ldp	x22, x21, [sp, #48]
  41133c:	ldp	x24, x23, [sp, #32]
  411340:	ldp	x26, x25, [sp, #16]
  411344:	ldp	x29, x30, [sp], #80
  411348:	ret
  41134c:	b	411330 <ferror@plt+0xe780>
  411350:	ldr	x0, [x0, #96]
  411354:	ret
  411358:	ldr	x0, [x1, #32]
  41135c:	ret
  411360:	stp	x29, x30, [sp, #-48]!
  411364:	stp	x22, x21, [sp, #16]
  411368:	stp	x20, x19, [sp, #32]
  41136c:	ldr	x8, [x1, #32]
  411370:	mov	x29, sp
  411374:	cmp	x8, x2
  411378:	b.eq	4113d8 <ferror@plt+0xe828>  // b.none
  41137c:	ldr	x8, [x0, #16]
  411380:	mov	x19, x1
  411384:	mov	x21, x2
  411388:	mov	x20, x0
  41138c:	cbz	x8, 4113a0 <ferror@plt+0xe7f0>
  411390:	mov	x0, x21
  411394:	blr	x8
  411398:	mov	x22, x0
  41139c:	b	4113a4 <ferror@plt+0xe7f4>
  4113a0:	mov	x22, x21
  4113a4:	ldr	x8, [x19, #8]
  4113a8:	cmp	x22, x8
  4113ac:	b.ne	4113b8 <ferror@plt+0xe808>  // b.any
  4113b0:	str	x21, [x19, #32]
  4113b4:	b	4113d8 <ferror@plt+0xe828>
  4113b8:	mov	x0, x20
  4113bc:	mov	x1, x19
  4113c0:	bl	412470 <ferror@plt+0xf8c0>
  4113c4:	mov	x0, x20
  4113c8:	mov	x1, x19
  4113cc:	str	x21, [x19, #32]
  4113d0:	str	x22, [x19, #8]
  4113d4:	bl	41244c <ferror@plt+0xf89c>
  4113d8:	ldp	x20, x19, [sp, #32]
  4113dc:	ldp	x22, x21, [sp, #16]
  4113e0:	mov	w0, wzr
  4113e4:	ldp	x29, x30, [sp], #48
  4113e8:	ret
  4113ec:	ldr	x8, [x1, #16]
  4113f0:	add	x9, x0, #0x38
  4113f4:	cmp	x8, x9
  4113f8:	csel	x0, xzr, x8, eq  // eq = none
  4113fc:	ret
  411400:	ldr	x8, [x1, #24]
  411404:	add	x9, x0, #0x38
  411408:	cmp	x8, x9
  41140c:	csel	x0, xzr, x8, eq  // eq = none
  411410:	ret
  411414:	stp	x29, x30, [sp, #-16]!
  411418:	ldr	x9, [x0, #96]
  41141c:	mov	x29, sp
  411420:	cmp	x9, x1
  411424:	b.ls	411478 <ferror@plt+0xe8c8>  // b.plast
  411428:	sub	x10, x9, #0x1
  41142c:	cmp	x1, x10, lsr #1
  411430:	b.ls	411458 <ferror@plt+0xe8a8>  // b.plast
  411434:	ldr	x8, [x0, #80]
  411438:	cmp	x10, x1
  41143c:	b.eq	41146c <ferror@plt+0xe8bc>  // b.none
  411440:	sub	x9, x1, x9
  411444:	add	x9, x9, #0x1
  411448:	ldr	x8, [x8, #24]
  41144c:	adds	x9, x9, #0x1
  411450:	b.cc	411448 <ferror@plt+0xe898>  // b.lo, b.ul, b.last
  411454:	b	41146c <ferror@plt+0xe8bc>
  411458:	ldr	x8, [x0, #72]
  41145c:	cbz	x1, 41146c <ferror@plt+0xe8bc>
  411460:	ldr	x8, [x8, #16]
  411464:	subs	x1, x1, #0x1
  411468:	b.ne	411460 <ferror@plt+0xe8b0>  // b.any
  41146c:	ldr	x0, [x8, #32]
  411470:	ldp	x29, x30, [sp], #16
  411474:	ret
  411478:	bl	4028d0 <abort@plt>
  41147c:	stp	x29, x30, [sp, #-48]!
  411480:	stp	x22, x21, [sp, #16]
  411484:	stp	x20, x19, [sp, #32]
  411488:	ldr	x8, [x0, #96]
  41148c:	mov	x29, sp
  411490:	cmp	x8, x1
  411494:	b.ls	411554 <ferror@plt+0xe9a4>  // b.plast
  411498:	sub	x9, x8, #0x1
  41149c:	mov	x19, x0
  4114a0:	mov	x20, x2
  4114a4:	cmp	x1, x9, lsr #1
  4114a8:	b.ls	4114d0 <ferror@plt+0xe920>  // b.plast
  4114ac:	ldr	x21, [x19, #80]
  4114b0:	cmp	x9, x1
  4114b4:	b.eq	4114e4 <ferror@plt+0xe934>  // b.none
  4114b8:	sub	x8, x1, x8
  4114bc:	add	x8, x8, #0x1
  4114c0:	ldr	x21, [x21, #24]
  4114c4:	adds	x8, x8, #0x1
  4114c8:	b.cc	4114c0 <ferror@plt+0xe910>  // b.lo, b.ul, b.last
  4114cc:	b	4114e4 <ferror@plt+0xe934>
  4114d0:	ldr	x21, [x19, #72]
  4114d4:	cbz	x1, 4114e4 <ferror@plt+0xe934>
  4114d8:	ldr	x21, [x21, #16]
  4114dc:	subs	x1, x1, #0x1
  4114e0:	b.ne	4114d8 <ferror@plt+0xe928>  // b.any
  4114e4:	ldr	x8, [x21, #32]
  4114e8:	cmp	x8, x20
  4114ec:	b.eq	411540 <ferror@plt+0xe990>  // b.none
  4114f0:	ldr	x8, [x19, #16]
  4114f4:	cbz	x8, 411508 <ferror@plt+0xe958>
  4114f8:	mov	x0, x20
  4114fc:	blr	x8
  411500:	mov	x22, x0
  411504:	b	41150c <ferror@plt+0xe95c>
  411508:	mov	x22, x20
  41150c:	ldr	x8, [x21, #8]
  411510:	cmp	x22, x8
  411514:	b.ne	411520 <ferror@plt+0xe970>  // b.any
  411518:	str	x20, [x21, #32]
  41151c:	b	411540 <ferror@plt+0xe990>
  411520:	mov	x0, x19
  411524:	mov	x1, x21
  411528:	bl	412470 <ferror@plt+0xf8c0>
  41152c:	mov	x0, x19
  411530:	mov	x1, x21
  411534:	str	x20, [x21, #32]
  411538:	str	x22, [x21, #8]
  41153c:	bl	41244c <ferror@plt+0xf89c>
  411540:	mov	x0, x21
  411544:	ldp	x20, x19, [sp, #32]
  411548:	ldp	x22, x21, [sp, #16]
  41154c:	ldp	x29, x30, [sp], #48
  411550:	ret
  411554:	bl	4028d0 <abort@plt>
  411558:	stp	x29, x30, [sp, #-96]!
  41155c:	str	x27, [sp, #16]
  411560:	subs	x27, x2, x1
  411564:	stp	x26, x25, [sp, #32]
  411568:	stp	x24, x23, [sp, #48]
  41156c:	stp	x22, x21, [sp, #64]
  411570:	stp	x20, x19, [sp, #80]
  411574:	mov	x29, sp
  411578:	b.cc	41179c <ferror@plt+0xebec>  // b.lo, b.ul, b.last
  41157c:	ldr	x26, [x0, #96]
  411580:	mov	x19, x2
  411584:	mov	x21, x0
  411588:	cmp	x26, x2
  41158c:	b.cc	41179c <ferror@plt+0xebec>  // b.lo, b.ul, b.last
  411590:	ldr	x8, [x21, #16]
  411594:	mov	x22, x3
  411598:	mov	x20, x1
  41159c:	cbz	x8, 4115b0 <ferror@plt+0xea00>
  4115a0:	mov	x0, x22
  4115a4:	blr	x8
  4115a8:	mov	x23, x0
  4115ac:	b	4115b4 <ferror@plt+0xea04>
  4115b0:	mov	x23, x22
  4115b4:	ldp	x9, x8, [x21, #40]
  4115b8:	ldr	x24, [x21, #8]
  4115bc:	udiv	x10, x23, x8
  4115c0:	msub	x8, x10, x8, x23
  4115c4:	ldrb	w10, [x21, #32]
  4115c8:	ldr	x25, [x9, x8, lsl #3]
  4115cc:	cbz	w10, 411640 <ferror@plt+0xea90>
  4115d0:	cbz	x25, 4116a0 <ferror@plt+0xeaf0>
  4115d4:	mov	x26, xzr
  4115d8:	b	4115f4 <ferror@plt+0xea44>
  4115dc:	cmp	x1, x22
  4115e0:	b.eq	411614 <ferror@plt+0xea64>  // b.none
  4115e4:	mov	x0, x26
  4115e8:	ldr	x25, [x25]
  4115ec:	mov	x26, x0
  4115f0:	cbz	x25, 4116a4 <ferror@plt+0xeaf4>
  4115f4:	ldr	x8, [x25, #8]
  4115f8:	cmp	x8, x23
  4115fc:	b.ne	4115e4 <ferror@plt+0xea34>  // b.any
  411600:	ldr	x1, [x25, #32]
  411604:	cbz	x24, 4115dc <ferror@plt+0xea2c>
  411608:	mov	x0, x22
  41160c:	blr	x24
  411610:	tbz	w0, #0, 4115e4 <ferror@plt+0xea34>
  411614:	mov	x0, x25
  411618:	cbz	x26, 4115e8 <ferror@plt+0xea38>
  41161c:	ldr	x21, [x21, #72]
  411620:	cbz	x20, 411634 <ferror@plt+0xea84>
  411624:	mov	x8, x20
  411628:	ldr	x21, [x21, #16]
  41162c:	subs	x8, x8, #0x1
  411630:	b.ne	411628 <ferror@plt+0xea78>  // b.any
  411634:	cbz	x27, 411734 <ferror@plt+0xeb84>
  411638:	sub	x19, x20, x19
  41163c:	b	411754 <ferror@plt+0xeba4>
  411640:	cbnz	x25, 411658 <ferror@plt+0xeaa8>
  411644:	b	411678 <ferror@plt+0xeac8>
  411648:	cmp	x1, x22
  41164c:	b.eq	411678 <ferror@plt+0xeac8>  // b.none
  411650:	ldr	x25, [x25]
  411654:	cbz	x25, 411678 <ferror@plt+0xeac8>
  411658:	ldr	x8, [x25, #8]
  41165c:	cmp	x8, x23
  411660:	b.ne	411650 <ferror@plt+0xeaa0>  // b.any
  411664:	ldr	x1, [x25, #32]
  411668:	cbz	x24, 411648 <ferror@plt+0xea98>
  41166c:	mov	x0, x22
  411670:	blr	x24
  411674:	tbz	w0, #0, 411650 <ferror@plt+0xeaa0>
  411678:	cbz	x20, 411708 <ferror@plt+0xeb58>
  41167c:	ldr	x8, [x21, #72]
  411680:	cmp	x8, x25
  411684:	b.eq	411734 <ferror@plt+0xeb84>  // b.none
  411688:	subs	x20, x20, #0x1
  41168c:	b.eq	411708 <ferror@plt+0xeb58>  // b.none
  411690:	ldr	x8, [x8, #16]
  411694:	cmp	x8, x25
  411698:	b.ne	411688 <ferror@plt+0xead8>  // b.any
  41169c:	b	411734 <ferror@plt+0xeb84>
  4116a0:	mov	x0, xzr
  4116a4:	cbz	x20, 4116d4 <ferror@plt+0xeb24>
  4116a8:	ldr	x8, [x21, #72]
  4116ac:	add	x9, x21, #0x38
  4116b0:	cmp	x8, x9
  4116b4:	b.eq	4116d4 <ferror@plt+0xeb24>  // b.none
  4116b8:	cmp	x8, x0
  4116bc:	b.eq	411734 <ferror@plt+0xeb84>  // b.none
  4116c0:	subs	x20, x20, #0x1
  4116c4:	b.eq	4116d4 <ferror@plt+0xeb24>  // b.none
  4116c8:	ldr	x8, [x8, #16]
  4116cc:	cmp	x8, x9
  4116d0:	b.ne	4116b8 <ferror@plt+0xeb08>  // b.any
  4116d4:	ldr	x9, [x21, #96]
  4116d8:	cmp	x9, x19
  4116dc:	b.ls	411780 <ferror@plt+0xebd0>  // b.plast
  4116e0:	ldr	x8, [x21, #80]
  4116e4:	cmp	x8, x0
  4116e8:	b.eq	411734 <ferror@plt+0xeb84>  // b.none
  4116ec:	sub	x9, x19, x9
  4116f0:	adds	x9, x9, #0x1
  4116f4:	b.cs	411780 <ferror@plt+0xebd0>  // b.hs, b.nlast
  4116f8:	ldr	x8, [x8, #24]
  4116fc:	cmp	x8, x0
  411700:	b.ne	4116f0 <ferror@plt+0xeb40>  // b.any
  411704:	b	411734 <ferror@plt+0xeb84>
  411708:	cmp	x26, x19
  41170c:	b.ls	41177c <ferror@plt+0xebcc>  // b.plast
  411710:	ldr	x8, [x21, #80]
  411714:	cmp	x8, x25
  411718:	b.eq	411734 <ferror@plt+0xeb84>  // b.none
  41171c:	sub	x9, x19, x26
  411720:	adds	x9, x9, #0x1
  411724:	b.cs	41177c <ferror@plt+0xebcc>  // b.hs, b.nlast
  411728:	ldr	x8, [x8, #24]
  41172c:	cmp	x8, x25
  411730:	b.ne	411720 <ferror@plt+0xeb70>  // b.any
  411734:	mov	x0, xzr
  411738:	b	411780 <ferror@plt+0xebd0>
  41173c:	cmp	x1, x22
  411740:	b.eq	411774 <ferror@plt+0xebc4>  // b.none
  411744:	ldr	x21, [x21, #16]
  411748:	adds	x19, x19, #0x1
  41174c:	mov	x0, xzr
  411750:	b.cs	411780 <ferror@plt+0xebd0>  // b.hs, b.nlast
  411754:	ldr	x8, [x21, #8]
  411758:	cmp	x8, x23
  41175c:	b.ne	411744 <ferror@plt+0xeb94>  // b.any
  411760:	ldr	x1, [x21, #32]
  411764:	cbz	x24, 41173c <ferror@plt+0xeb8c>
  411768:	mov	x0, x22
  41176c:	blr	x24
  411770:	tbz	w0, #0, 411744 <ferror@plt+0xeb94>
  411774:	mov	x0, x21
  411778:	b	411780 <ferror@plt+0xebd0>
  41177c:	mov	x0, x25
  411780:	ldp	x20, x19, [sp, #80]
  411784:	ldp	x22, x21, [sp, #64]
  411788:	ldp	x24, x23, [sp, #48]
  41178c:	ldp	x26, x25, [sp, #32]
  411790:	ldr	x27, [sp, #16]
  411794:	ldp	x29, x30, [sp], #96
  411798:	ret
  41179c:	bl	4028d0 <abort@plt>
  4117a0:	stp	x29, x30, [sp, #-96]!
  4117a4:	cmp	x1, x2
  4117a8:	str	x27, [sp, #16]
  4117ac:	stp	x26, x25, [sp, #32]
  4117b0:	stp	x24, x23, [sp, #48]
  4117b4:	stp	x22, x21, [sp, #64]
  4117b8:	stp	x20, x19, [sp, #80]
  4117bc:	mov	x29, sp
  4117c0:	b.hi	41198c <ferror@plt+0xeddc>  // b.pmore
  4117c4:	ldr	x8, [x0, #96]
  4117c8:	mov	x19, x2
  4117cc:	mov	x20, x0
  4117d0:	cmp	x8, x2
  4117d4:	b.cc	41198c <ferror@plt+0xeddc>  // b.lo, b.ul, b.last
  4117d8:	ldr	x8, [x20, #16]
  4117dc:	mov	x22, x3
  4117e0:	mov	x21, x1
  4117e4:	cbz	x8, 4117f8 <ferror@plt+0xec48>
  4117e8:	mov	x0, x22
  4117ec:	blr	x8
  4117f0:	mov	x23, x0
  4117f4:	b	4117fc <ferror@plt+0xec4c>
  4117f8:	mov	x23, x22
  4117fc:	ldp	x9, x8, [x20, #40]
  411800:	ldr	x25, [x20, #8]
  411804:	udiv	x10, x23, x8
  411808:	msub	x8, x10, x8, x23
  41180c:	ldrb	w10, [x20, #32]
  411810:	ldr	x27, [x9, x8, lsl #3]
  411814:	cbz	w10, 411898 <ferror@plt+0xece8>
  411818:	mov	x26, xzr
  41181c:	cbnz	x27, 411844 <ferror@plt+0xec94>
  411820:	mov	w8, #0x1                   	// #1
  411824:	mov	x27, x26
  411828:	cbnz	w8, 41193c <ferror@plt+0xed8c>
  41182c:	b	41196c <ferror@plt+0xedbc>
  411830:	cmp	x1, x22
  411834:	b.eq	411868 <ferror@plt+0xecb8>  // b.none
  411838:	mov	x26, x24
  41183c:	ldr	x27, [x27]
  411840:	cbz	x27, 411820 <ferror@plt+0xec70>
  411844:	ldr	x8, [x27, #8]
  411848:	mov	x24, x26
  41184c:	cmp	x8, x23
  411850:	b.ne	411838 <ferror@plt+0xec88>  // b.any
  411854:	ldr	x1, [x27, #32]
  411858:	cbz	x25, 411830 <ferror@plt+0xec80>
  41185c:	mov	x0, x22
  411860:	blr	x25
  411864:	tbz	w0, #0, 411838 <ferror@plt+0xec88>
  411868:	mov	x26, x27
  41186c:	cbz	x24, 41183c <ferror@plt+0xec8c>
  411870:	ldr	x26, [x20, #72]
  411874:	cbz	x21, 4118d4 <ferror@plt+0xed24>
  411878:	mov	x8, x21
  41187c:	ldr	x26, [x26, #16]
  411880:	subs	x8, x8, #0x1
  411884:	b.ne	41187c <ferror@plt+0xeccc>  // b.any
  411888:	mov	x27, xzr
  41188c:	cmp	x21, x19
  411890:	b.cc	4118e0 <ferror@plt+0xed30>  // b.lo, b.ul, b.last
  411894:	b	411928 <ferror@plt+0xed78>
  411898:	cbnz	x27, 4118b0 <ferror@plt+0xed00>
  41189c:	b	41193c <ferror@plt+0xed8c>
  4118a0:	cmp	x1, x22
  4118a4:	b.eq	41193c <ferror@plt+0xed8c>  // b.none
  4118a8:	ldr	x27, [x27]
  4118ac:	cbz	x27, 41193c <ferror@plt+0xed8c>
  4118b0:	ldr	x8, [x27, #8]
  4118b4:	cmp	x8, x23
  4118b8:	b.ne	4118a8 <ferror@plt+0xecf8>  // b.any
  4118bc:	ldr	x1, [x27, #32]
  4118c0:	cbz	x25, 4118a0 <ferror@plt+0xecf0>
  4118c4:	mov	x0, x22
  4118c8:	blr	x25
  4118cc:	tbz	w0, #0, 4118a8 <ferror@plt+0xecf8>
  4118d0:	b	41193c <ferror@plt+0xed8c>
  4118d4:	mov	x27, x21
  4118d8:	cmp	x21, x19
  4118dc:	b.cs	411928 <ferror@plt+0xed78>  // b.hs, b.nlast
  4118e0:	mov	x24, x21
  4118e4:	b	411900 <ferror@plt+0xed50>
  4118e8:	cmp	x1, x22
  4118ec:	b.eq	411920 <ferror@plt+0xed70>  // b.none
  4118f0:	ldr	x26, [x26, #16]
  4118f4:	add	x24, x24, #0x1
  4118f8:	cmp	x19, x24
  4118fc:	b.eq	411928 <ferror@plt+0xed78>  // b.none
  411900:	ldr	x8, [x26, #8]
  411904:	cmp	x8, x23
  411908:	b.ne	4118f0 <ferror@plt+0xed40>  // b.any
  41190c:	ldr	x1, [x26, #32]
  411910:	cbz	x25, 4118e8 <ferror@plt+0xed38>
  411914:	mov	x0, x22
  411918:	blr	x25
  41191c:	tbz	w0, #0, 4118f0 <ferror@plt+0xed40>
  411920:	mov	w8, wzr
  411924:	b	411930 <ferror@plt+0xed80>
  411928:	mov	w8, wzr
  41192c:	mov	x24, #0xffffffffffffffff    	// #-1
  411930:	mov	x21, x27
  411934:	mov	x27, x26
  411938:	cbz	w8, 41196c <ferror@plt+0xedbc>
  41193c:	cbz	x27, 411968 <ferror@plt+0xedb8>
  411940:	add	x9, x20, #0x38
  411944:	mov	x8, #0xffffffffffffffff    	// #-1
  411948:	ldr	x27, [x27, #24]
  41194c:	add	x8, x8, #0x1
  411950:	cmp	x27, x9
  411954:	b.ne	411948 <ferror@plt+0xed98>  // b.any
  411958:	cmp	x8, x19
  41195c:	ccmp	x8, x21, #0x0, cc  // cc = lo, ul, last
  411960:	csinv	x24, x8, xzr, cs  // cs = hs, nlast
  411964:	b	41196c <ferror@plt+0xedbc>
  411968:	mov	x24, #0xffffffffffffffff    	// #-1
  41196c:	mov	x0, x24
  411970:	ldp	x20, x19, [sp, #80]
  411974:	ldp	x22, x21, [sp, #64]
  411978:	ldp	x24, x23, [sp, #48]
  41197c:	ldp	x26, x25, [sp, #32]
  411980:	ldr	x27, [sp, #16]
  411984:	ldp	x29, x30, [sp], #96
  411988:	ret
  41198c:	bl	4028d0 <abort@plt>
  411990:	stp	x29, x30, [sp, #-48]!
  411994:	stp	x20, x19, [sp, #32]
  411998:	mov	x20, x0
  41199c:	mov	w0, #0x28                  	// #40
  4119a0:	str	x21, [sp, #16]
  4119a4:	mov	x29, sp
  4119a8:	mov	x21, x1
  4119ac:	bl	402700 <malloc@plt>
  4119b0:	mov	x19, x0
  4119b4:	cbz	x0, 411a0c <ferror@plt+0xee5c>
  4119b8:	str	x21, [x19, #32]
  4119bc:	ldr	x8, [x20, #16]
  4119c0:	cbz	x8, 4119d0 <ferror@plt+0xee20>
  4119c4:	mov	x0, x21
  4119c8:	blr	x8
  4119cc:	mov	x21, x0
  4119d0:	mov	x0, x20
  4119d4:	mov	x1, x19
  4119d8:	str	x21, [x19, #8]
  4119dc:	bl	41244c <ferror@plt+0xf89c>
  4119e0:	add	x8, x20, #0x38
  4119e4:	str	x8, [x19, #24]
  4119e8:	ldr	x8, [x20, #72]
  4119ec:	mov	x0, x20
  4119f0:	str	x8, [x19, #16]
  4119f4:	str	x19, [x8, #24]
  4119f8:	str	x19, [x20, #72]
  4119fc:	ldr	x8, [x20, #96]
  411a00:	add	x8, x8, #0x1
  411a04:	str	x8, [x20, #96]
  411a08:	bl	4124b8 <ferror@plt+0xf908>
  411a0c:	mov	x0, x19
  411a10:	ldp	x20, x19, [sp, #32]
  411a14:	ldr	x21, [sp, #16]
  411a18:	ldp	x29, x30, [sp], #48
  411a1c:	ret
  411a20:	stp	x29, x30, [sp, #-48]!
  411a24:	stp	x20, x19, [sp, #32]
  411a28:	mov	x20, x0
  411a2c:	mov	w0, #0x28                  	// #40
  411a30:	str	x21, [sp, #16]
  411a34:	mov	x29, sp
  411a38:	mov	x21, x1
  411a3c:	bl	402700 <malloc@plt>
  411a40:	mov	x19, x0
  411a44:	cbz	x0, 411a9c <ferror@plt+0xeeec>
  411a48:	str	x21, [x19, #32]
  411a4c:	ldr	x8, [x20, #16]
  411a50:	cbz	x8, 411a60 <ferror@plt+0xeeb0>
  411a54:	mov	x0, x21
  411a58:	blr	x8
  411a5c:	mov	x21, x0
  411a60:	mov	x0, x20
  411a64:	mov	x1, x19
  411a68:	str	x21, [x19, #8]
  411a6c:	bl	41244c <ferror@plt+0xf89c>
  411a70:	add	x8, x20, #0x38
  411a74:	str	x8, [x19, #16]
  411a78:	ldr	x8, [x20, #80]
  411a7c:	mov	x0, x20
  411a80:	str	x8, [x19, #24]
  411a84:	str	x19, [x8, #16]
  411a88:	ldr	x8, [x20, #96]
  411a8c:	str	x19, [x20, #80]
  411a90:	add	x8, x8, #0x1
  411a94:	str	x8, [x20, #96]
  411a98:	bl	4124b8 <ferror@plt+0xf908>
  411a9c:	mov	x0, x19
  411aa0:	ldp	x20, x19, [sp, #32]
  411aa4:	ldr	x21, [sp, #16]
  411aa8:	ldp	x29, x30, [sp], #48
  411aac:	ret
  411ab0:	stp	x29, x30, [sp, #-48]!
  411ab4:	stp	x20, x19, [sp, #32]
  411ab8:	mov	x20, x0
  411abc:	mov	w0, #0x28                  	// #40
  411ac0:	stp	x22, x21, [sp, #16]
  411ac4:	mov	x29, sp
  411ac8:	mov	x22, x2
  411acc:	mov	x21, x1
  411ad0:	bl	402700 <malloc@plt>
  411ad4:	mov	x19, x0
  411ad8:	cbz	x0, 411b2c <ferror@plt+0xef7c>
  411adc:	str	x22, [x19, #32]
  411ae0:	ldr	x8, [x20, #16]
  411ae4:	cbz	x8, 411af4 <ferror@plt+0xef44>
  411ae8:	mov	x0, x22
  411aec:	blr	x8
  411af0:	mov	x22, x0
  411af4:	mov	x0, x20
  411af8:	mov	x1, x19
  411afc:	str	x22, [x19, #8]
  411b00:	bl	41244c <ferror@plt+0xf89c>
  411b04:	str	x21, [x19, #16]
  411b08:	ldr	x8, [x21, #24]
  411b0c:	mov	x0, x20
  411b10:	str	x8, [x19, #24]
  411b14:	str	x19, [x8, #16]
  411b18:	str	x19, [x21, #24]
  411b1c:	ldr	x8, [x20, #96]
  411b20:	add	x8, x8, #0x1
  411b24:	str	x8, [x20, #96]
  411b28:	bl	4124b8 <ferror@plt+0xf908>
  411b2c:	mov	x0, x19
  411b30:	ldp	x20, x19, [sp, #32]
  411b34:	ldp	x22, x21, [sp, #16]
  411b38:	ldp	x29, x30, [sp], #48
  411b3c:	ret
  411b40:	stp	x29, x30, [sp, #-48]!
  411b44:	stp	x20, x19, [sp, #32]
  411b48:	mov	x20, x0
  411b4c:	mov	w0, #0x28                  	// #40
  411b50:	stp	x22, x21, [sp, #16]
  411b54:	mov	x29, sp
  411b58:	mov	x22, x2
  411b5c:	mov	x21, x1
  411b60:	bl	402700 <malloc@plt>
  411b64:	mov	x19, x0
  411b68:	cbz	x0, 411bbc <ferror@plt+0xf00c>
  411b6c:	str	x22, [x19, #32]
  411b70:	ldr	x8, [x20, #16]
  411b74:	cbz	x8, 411b84 <ferror@plt+0xefd4>
  411b78:	mov	x0, x22
  411b7c:	blr	x8
  411b80:	mov	x22, x0
  411b84:	mov	x0, x20
  411b88:	mov	x1, x19
  411b8c:	str	x22, [x19, #8]
  411b90:	bl	41244c <ferror@plt+0xf89c>
  411b94:	str	x21, [x19, #24]
  411b98:	ldr	x8, [x21, #16]
  411b9c:	mov	x0, x20
  411ba0:	str	x8, [x19, #16]
  411ba4:	str	x19, [x8, #24]
  411ba8:	str	x19, [x21, #16]
  411bac:	ldr	x8, [x20, #96]
  411bb0:	add	x8, x8, #0x1
  411bb4:	str	x8, [x20, #96]
  411bb8:	bl	4124b8 <ferror@plt+0xf908>
  411bbc:	mov	x0, x19
  411bc0:	ldp	x20, x19, [sp, #32]
  411bc4:	ldp	x22, x21, [sp, #16]
  411bc8:	ldp	x29, x30, [sp], #48
  411bcc:	ret
  411bd0:	stp	x29, x30, [sp, #-64]!
  411bd4:	stp	x22, x21, [sp, #32]
  411bd8:	stp	x20, x19, [sp, #48]
  411bdc:	str	x23, [sp, #16]
  411be0:	ldr	x23, [x0, #96]
  411be4:	mov	x29, sp
  411be8:	cmp	x23, x1
  411bec:	b.cc	411cc4 <ferror@plt+0xf114>  // b.lo, b.ul, b.last
  411bf0:	mov	x19, x0
  411bf4:	mov	w0, #0x28                  	// #40
  411bf8:	mov	x21, x1
  411bfc:	mov	x22, x2
  411c00:	bl	402700 <malloc@plt>
  411c04:	mov	x20, x0
  411c08:	cbz	x0, 411cac <ferror@plt+0xf0fc>
  411c0c:	str	x22, [x20, #32]
  411c10:	ldr	x8, [x19, #16]
  411c14:	cbz	x8, 411c24 <ferror@plt+0xf074>
  411c18:	mov	x0, x22
  411c1c:	blr	x8
  411c20:	mov	x22, x0
  411c24:	mov	x0, x19
  411c28:	mov	x1, x20
  411c2c:	str	x22, [x20, #8]
  411c30:	bl	41244c <ferror@plt+0xf89c>
  411c34:	cmp	x21, x23, lsr #1
  411c38:	b.ls	411c70 <ferror@plt+0xf0c0>  // b.plast
  411c3c:	cmp	x23, x21
  411c40:	add	x8, x19, #0x38
  411c44:	b.eq	411c58 <ferror@plt+0xf0a8>  // b.none
  411c48:	sub	x9, x21, x23
  411c4c:	ldr	x8, [x8, #24]
  411c50:	adds	x9, x9, #0x1
  411c54:	b.cc	411c4c <ferror@plt+0xf09c>  // b.lo, b.ul, b.last
  411c58:	str	x8, [x20, #16]
  411c5c:	ldr	x9, [x8, #24]
  411c60:	str	x9, [x20, #24]
  411c64:	str	x20, [x9, #16]
  411c68:	str	x20, [x8, #24]
  411c6c:	b	411c98 <ferror@plt+0xf0e8>
  411c70:	add	x8, x19, #0x38
  411c74:	cbz	x21, 411c84 <ferror@plt+0xf0d4>
  411c78:	ldr	x8, [x8, #16]
  411c7c:	subs	x21, x21, #0x1
  411c80:	b.ne	411c78 <ferror@plt+0xf0c8>  // b.any
  411c84:	str	x8, [x20, #24]
  411c88:	ldr	x9, [x8, #16]
  411c8c:	str	x9, [x20, #16]
  411c90:	str	x20, [x9, #24]
  411c94:	str	x20, [x8, #16]
  411c98:	ldr	x8, [x19, #96]
  411c9c:	mov	x0, x19
  411ca0:	add	x8, x8, #0x1
  411ca4:	str	x8, [x19, #96]
  411ca8:	bl	4124b8 <ferror@plt+0xf908>
  411cac:	mov	x0, x20
  411cb0:	ldp	x20, x19, [sp, #48]
  411cb4:	ldp	x22, x21, [sp, #32]
  411cb8:	ldr	x23, [sp, #16]
  411cbc:	ldp	x29, x30, [sp], #64
  411cc0:	ret
  411cc4:	bl	4028d0 <abort@plt>
  411cc8:	stp	x29, x30, [sp, #-32]!
  411ccc:	stp	x20, x19, [sp, #16]
  411cd0:	mov	x29, sp
  411cd4:	mov	x19, x1
  411cd8:	mov	x20, x0
  411cdc:	bl	412470 <ferror@plt+0xf8c0>
  411ce0:	ldp	x9, x8, [x19, #16]
  411ce4:	str	x9, [x8, #16]
  411ce8:	str	x8, [x9, #24]
  411cec:	ldr	x9, [x20, #96]
  411cf0:	ldr	x8, [x20, #24]
  411cf4:	sub	x9, x9, #0x1
  411cf8:	str	x9, [x20, #96]
  411cfc:	cbz	x8, 411d08 <ferror@plt+0xf158>
  411d00:	ldr	x0, [x19, #32]
  411d04:	blr	x8
  411d08:	mov	x0, x19
  411d0c:	bl	4029a0 <free@plt>
  411d10:	ldp	x20, x19, [sp, #16]
  411d14:	mov	w0, #0x1                   	// #1
  411d18:	ldp	x29, x30, [sp], #32
  411d1c:	ret
  411d20:	stp	x29, x30, [sp, #-32]!
  411d24:	stp	x20, x19, [sp, #16]
  411d28:	ldr	x8, [x0, #96]
  411d2c:	mov	x29, sp
  411d30:	cmp	x8, x1
  411d34:	b.ls	411dd0 <ferror@plt+0xf220>  // b.plast
  411d38:	sub	x9, x8, #0x1
  411d3c:	mov	x19, x0
  411d40:	add	x20, x0, #0x38
  411d44:	cmp	x1, x9, lsr #1
  411d48:	b.ls	411d70 <ferror@plt+0xf1c0>  // b.plast
  411d4c:	sub	x8, x1, x8
  411d50:	mov	x9, x20
  411d54:	ldr	x20, [x20, #24]
  411d58:	adds	x8, x8, #0x1
  411d5c:	b.cc	411d50 <ferror@plt+0xf1a0>  // b.lo, b.ul, b.last
  411d60:	ldr	x8, [x20, #24]
  411d64:	str	x8, [x9, #24]
  411d68:	str	x9, [x8, #16]
  411d6c:	b	411d90 <ferror@plt+0xf1e0>
  411d70:	add	x8, x1, #0x1
  411d74:	mov	x9, x20
  411d78:	ldr	x20, [x20, #16]
  411d7c:	subs	x8, x8, #0x1
  411d80:	b.ne	411d74 <ferror@plt+0xf1c4>  // b.any
  411d84:	ldr	x8, [x20, #16]
  411d88:	str	x8, [x9, #16]
  411d8c:	str	x9, [x8, #24]
  411d90:	mov	x0, x19
  411d94:	mov	x1, x20
  411d98:	bl	412470 <ferror@plt+0xf8c0>
  411d9c:	ldr	x9, [x19, #96]
  411da0:	ldr	x8, [x19, #24]
  411da4:	sub	x9, x9, #0x1
  411da8:	str	x9, [x19, #96]
  411dac:	cbz	x8, 411db8 <ferror@plt+0xf208>
  411db0:	ldr	x0, [x20, #32]
  411db4:	blr	x8
  411db8:	mov	x0, x20
  411dbc:	bl	4029a0 <free@plt>
  411dc0:	ldp	x20, x19, [sp, #16]
  411dc4:	mov	w0, #0x1                   	// #1
  411dc8:	ldp	x29, x30, [sp], #32
  411dcc:	ret
  411dd0:	bl	4028d0 <abort@plt>
  411dd4:	stp	x29, x30, [sp, #-32]!
  411dd8:	ldr	x2, [x0, #96]
  411ddc:	mov	x3, x1
  411de0:	mov	x1, xzr
  411de4:	str	x19, [sp, #16]
  411de8:	mov	x29, sp
  411dec:	mov	x19, x0
  411df0:	bl	411558 <ferror@plt+0xe9a8>
  411df4:	cbz	x0, 411e08 <ferror@plt+0xf258>
  411df8:	mov	x1, x0
  411dfc:	mov	x0, x19
  411e00:	bl	411cc8 <ferror@plt+0xf118>
  411e04:	mov	w0, #0x1                   	// #1
  411e08:	ldr	x19, [sp, #16]
  411e0c:	ldp	x29, x30, [sp], #32
  411e10:	ret
  411e14:	stp	x29, x30, [sp, #-64]!
  411e18:	stp	x22, x21, [sp, #32]
  411e1c:	stp	x20, x19, [sp, #48]
  411e20:	ldr	x20, [x0, #72]
  411e24:	add	x21, x0, #0x38
  411e28:	mov	x19, x0
  411e2c:	str	x23, [sp, #16]
  411e30:	cmp	x20, x21
  411e34:	mov	x29, sp
  411e38:	b.eq	411e6c <ferror@plt+0xf2bc>  // b.none
  411e3c:	ldr	x22, [x19, #24]
  411e40:	b	411e58 <ferror@plt+0xf2a8>
  411e44:	mov	x0, x20
  411e48:	bl	4029a0 <free@plt>
  411e4c:	cmp	x23, x21
  411e50:	mov	x20, x23
  411e54:	b.eq	411e6c <ferror@plt+0xf2bc>  // b.none
  411e58:	ldr	x23, [x20, #16]
  411e5c:	cbz	x22, 411e44 <ferror@plt+0xf294>
  411e60:	ldr	x0, [x20, #32]
  411e64:	blr	x22
  411e68:	b	411e44 <ferror@plt+0xf294>
  411e6c:	ldr	x0, [x19, #40]
  411e70:	bl	4029a0 <free@plt>
  411e74:	mov	x0, x19
  411e78:	bl	4029a0 <free@plt>
  411e7c:	ldp	x20, x19, [sp, #48]
  411e80:	ldp	x22, x21, [sp, #32]
  411e84:	ldr	x23, [sp, #16]
  411e88:	ldp	x29, x30, [sp], #64
  411e8c:	ret
  411e90:	ldr	x9, [x0]
  411e94:	add	x10, x0, #0x38
  411e98:	stp	x9, x0, [x8]
  411e9c:	ldr	x9, [x0, #72]
  411ea0:	stp	x9, x10, [x8, #24]
  411ea4:	ret
  411ea8:	stp	x29, x30, [sp, #-16]!
  411eac:	subs	x10, x2, x1
  411eb0:	mov	x29, sp
  411eb4:	b.cc	411f90 <ferror@plt+0xf3e0>  // b.lo, b.ul, b.last
  411eb8:	ldr	x11, [x0, #96]
  411ebc:	subs	x12, x11, x2
  411ec0:	b.cc	411f90 <ferror@plt+0xf3e0>  // b.lo, b.ul, b.last
  411ec4:	ldr	x9, [x0]
  411ec8:	cmp	x10, x1
  411ecc:	stp	x9, x0, [x8]
  411ed0:	b.cs	411f14 <ferror@plt+0xf364>  // b.hs, b.nlast
  411ed4:	cmp	x12, x1
  411ed8:	b.cs	411f14 <ferror@plt+0xf364>  // b.hs, b.nlast
  411edc:	add	x9, x0, #0x38
  411ee0:	cbz	x12, 411ef4 <ferror@plt+0xf344>
  411ee4:	sub	x11, x2, x11
  411ee8:	ldr	x9, [x9, #24]
  411eec:	adds	x11, x11, #0x1
  411ef0:	b.cc	411ee8 <ferror@plt+0xf338>  // b.lo, b.ul, b.last
  411ef4:	str	x9, [x8, #32]
  411ef8:	cbz	x10, 411f0c <ferror@plt+0xf35c>
  411efc:	sub	x10, x1, x2
  411f00:	ldr	x9, [x9, #24]
  411f04:	adds	x10, x10, #0x1
  411f08:	b.cc	411f00 <ferror@plt+0xf350>  // b.lo, b.ul, b.last
  411f0c:	add	x8, x8, #0x18
  411f10:	b	411f84 <ferror@plt+0xf3d4>
  411f14:	cmp	x10, x12
  411f18:	b.ls	411f50 <ferror@plt+0xf3a0>  // b.plast
  411f1c:	ldr	x10, [x0, #72]
  411f20:	add	x9, x0, #0x38
  411f24:	cbz	x1, 411f34 <ferror@plt+0xf384>
  411f28:	ldr	x10, [x10, #16]
  411f2c:	subs	x1, x1, #0x1
  411f30:	b.ne	411f28 <ferror@plt+0xf378>  // b.any
  411f34:	str	x10, [x8, #24]
  411f38:	cbz	x12, 411f80 <ferror@plt+0xf3d0>
  411f3c:	sub	x10, x2, x11
  411f40:	ldr	x9, [x9, #24]
  411f44:	adds	x10, x10, #0x1
  411f48:	b.cc	411f40 <ferror@plt+0xf390>  // b.lo, b.ul, b.last
  411f4c:	b	411f80 <ferror@plt+0xf3d0>
  411f50:	ldr	x9, [x0, #72]
  411f54:	cbz	x1, 411f68 <ferror@plt+0xf3b8>
  411f58:	mov	x11, x1
  411f5c:	ldr	x9, [x9, #16]
  411f60:	subs	x11, x11, #0x1
  411f64:	b.ne	411f5c <ferror@plt+0xf3ac>  // b.any
  411f68:	str	x9, [x8, #24]
  411f6c:	cbz	x10, 411f80 <ferror@plt+0xf3d0>
  411f70:	sub	x10, x1, x2
  411f74:	ldr	x9, [x9, #16]
  411f78:	adds	x10, x10, #0x1
  411f7c:	b.cc	411f74 <ferror@plt+0xf3c4>  // b.lo, b.ul, b.last
  411f80:	add	x8, x8, #0x20
  411f84:	str	x9, [x8]
  411f88:	ldp	x29, x30, [sp], #16
  411f8c:	ret
  411f90:	bl	4028d0 <abort@plt>
  411f94:	ldp	x8, x9, [x0, #24]
  411f98:	cmp	x8, x9
  411f9c:	b.eq	411fc0 <ferror@plt+0xf410>  // b.none
  411fa0:	ldr	x9, [x8, #32]
  411fa4:	str	x9, [x1]
  411fa8:	cbz	x2, 411fb0 <ferror@plt+0xf400>
  411fac:	str	x8, [x2]
  411fb0:	ldr	x8, [x8, #16]
  411fb4:	str	x8, [x0, #24]
  411fb8:	mov	w0, #0x1                   	// #1
  411fbc:	ret
  411fc0:	mov	w0, wzr
  411fc4:	ret
  411fc8:	ret
  411fcc:	stp	x29, x30, [sp, #-64]!
  411fd0:	stp	x24, x23, [sp, #16]
  411fd4:	stp	x22, x21, [sp, #32]
  411fd8:	stp	x20, x19, [sp, #48]
  411fdc:	ldr	x22, [x0, #72]
  411fe0:	add	x23, x0, #0x38
  411fe4:	mov	x29, sp
  411fe8:	cmp	x22, x23
  411fec:	b.eq	412038 <ferror@plt+0xf488>  // b.none
  411ff0:	mov	x20, x2
  411ff4:	mov	x21, x1
  411ff8:	mov	w24, #0x2                   	// #2
  411ffc:	ldr	x0, [x22, #32]
  412000:	mov	x1, x20
  412004:	blr	x21
  412008:	cmp	w0, #0x0
  41200c:	cset	w8, eq  // eq = none
  412010:	csel	x9, x22, x19, eq  // eq = none
  412014:	csel	w8, w24, w8, gt
  412018:	csel	x19, x19, x9, gt
  41201c:	cbnz	w8, 412030 <ferror@plt+0xf480>
  412020:	ldr	x22, [x22, #16]
  412024:	cmp	x22, x23
  412028:	b.ne	411ffc <ferror@plt+0xf44c>  // b.any
  41202c:	b	412038 <ferror@plt+0xf488>
  412030:	cmp	w8, #0x2
  412034:	b.ne	41203c <ferror@plt+0xf48c>  // b.any
  412038:	mov	x19, xzr
  41203c:	mov	x0, x19
  412040:	ldp	x20, x19, [sp, #48]
  412044:	ldp	x22, x21, [sp, #32]
  412048:	ldp	x24, x23, [sp, #16]
  41204c:	ldp	x29, x30, [sp], #64
  412050:	ret
  412054:	stp	x29, x30, [sp, #-64]!
  412058:	cmp	x3, x2
  41205c:	str	x23, [sp, #16]
  412060:	stp	x22, x21, [sp, #32]
  412064:	stp	x20, x19, [sp, #48]
  412068:	mov	x29, sp
  41206c:	b.cc	412150 <ferror@plt+0xf5a0>  // b.lo, b.ul, b.last
  412070:	ldr	x8, [x0, #96]
  412074:	cmp	x8, x3
  412078:	b.cc	412150 <ferror@plt+0xf5a0>  // b.lo, b.ul, b.last
  41207c:	cmp	x3, x2
  412080:	b.eq	412134 <ferror@plt+0xf584>  // b.none
  412084:	sub	x9, x8, #0x1
  412088:	mov	x19, x4
  41208c:	mov	x20, x1
  412090:	cmp	x2, x9, lsr #1
  412094:	b.ls	4120bc <ferror@plt+0xf50c>  // b.plast
  412098:	ldr	x22, [x0, #80]
  41209c:	cmp	x9, x2
  4120a0:	b.eq	4120d4 <ferror@plt+0xf524>  // b.none
  4120a4:	sub	x8, x2, x8
  4120a8:	add	x8, x8, #0x1
  4120ac:	ldr	x22, [x22, #24]
  4120b0:	adds	x8, x8, #0x1
  4120b4:	b.cc	4120ac <ferror@plt+0xf4fc>  // b.lo, b.ul, b.last
  4120b8:	b	4120d4 <ferror@plt+0xf524>
  4120bc:	ldr	x22, [x0, #72]
  4120c0:	cbz	x2, 4120d4 <ferror@plt+0xf524>
  4120c4:	mov	x8, x2
  4120c8:	ldr	x22, [x22, #16]
  4120cc:	subs	x8, x8, #0x1
  4120d0:	b.ne	4120c8 <ferror@plt+0xf518>  // b.any
  4120d4:	sub	x23, x2, x3
  4120d8:	ldr	x0, [x22, #32]
  4120dc:	mov	x1, x19
  4120e0:	blr	x20
  4120e4:	cmp	w0, #0x0
  4120e8:	b.le	4120f8 <ferror@plt+0xf548>
  4120ec:	mov	w8, #0x8                   	// #8
  4120f0:	cbz	w8, 412118 <ferror@plt+0xf568>
  4120f4:	b	412124 <ferror@plt+0xf574>
  4120f8:	cbz	w0, 41210c <ferror@plt+0xf55c>
  4120fc:	ldr	x22, [x22, #16]
  412100:	mov	w8, wzr
  412104:	cbz	w8, 412118 <ferror@plt+0xf568>
  412108:	b	412124 <ferror@plt+0xf574>
  41210c:	mov	w8, #0x1                   	// #1
  412110:	mov	x21, x22
  412114:	cbnz	w8, 412124 <ferror@plt+0xf574>
  412118:	adds	x23, x23, #0x1
  41211c:	b.cc	4120d8 <ferror@plt+0xf528>  // b.lo, b.ul, b.last
  412120:	b	41212c <ferror@plt+0xf57c>
  412124:	cmp	w8, #0x8
  412128:	b.ne	412130 <ferror@plt+0xf580>  // b.any
  41212c:	mov	w8, wzr
  412130:	cbnz	w8, 412138 <ferror@plt+0xf588>
  412134:	mov	x21, xzr
  412138:	mov	x0, x21
  41213c:	ldp	x20, x19, [sp, #48]
  412140:	ldp	x22, x21, [sp, #32]
  412144:	ldr	x23, [sp, #16]
  412148:	ldp	x29, x30, [sp], #64
  41214c:	ret
  412150:	bl	4028d0 <abort@plt>
  412154:	stp	x29, x30, [sp, #-80]!
  412158:	stp	x24, x23, [sp, #32]
  41215c:	stp	x22, x21, [sp, #48]
  412160:	stp	x20, x19, [sp, #64]
  412164:	ldr	x22, [x0, #72]
  412168:	add	x23, x0, #0x38
  41216c:	str	x25, [sp, #16]
  412170:	mov	x29, sp
  412174:	cmp	x22, x23
  412178:	b.eq	4121cc <ferror@plt+0xf61c>  // b.none
  41217c:	mov	x20, x2
  412180:	mov	x21, x1
  412184:	mov	x24, xzr
  412188:	mov	w25, #0x2                   	// #2
  41218c:	ldr	x0, [x22, #32]
  412190:	mov	x1, x20
  412194:	blr	x21
  412198:	cmp	w0, #0x0
  41219c:	cset	w8, eq  // eq = none
  4121a0:	csel	x9, x24, x19, eq  // eq = none
  4121a4:	csel	w8, w25, w8, gt
  4121a8:	csel	x19, x19, x9, gt
  4121ac:	cbnz	w8, 4121c4 <ferror@plt+0xf614>
  4121b0:	ldr	x22, [x22, #16]
  4121b4:	add	x24, x24, #0x1
  4121b8:	cmp	x22, x23
  4121bc:	b.ne	41218c <ferror@plt+0xf5dc>  // b.any
  4121c0:	b	4121cc <ferror@plt+0xf61c>
  4121c4:	cmp	w8, #0x2
  4121c8:	b.ne	4121d0 <ferror@plt+0xf620>  // b.any
  4121cc:	mov	x19, #0xffffffffffffffff    	// #-1
  4121d0:	mov	x0, x19
  4121d4:	ldp	x20, x19, [sp, #64]
  4121d8:	ldp	x22, x21, [sp, #48]
  4121dc:	ldp	x24, x23, [sp, #32]
  4121e0:	ldr	x25, [sp, #16]
  4121e4:	ldp	x29, x30, [sp], #80
  4121e8:	ret
  4121ec:	stp	x29, x30, [sp, #-64]!
  4121f0:	cmp	x3, x2
  4121f4:	stp	x24, x23, [sp, #16]
  4121f8:	stp	x22, x21, [sp, #32]
  4121fc:	stp	x20, x19, [sp, #48]
  412200:	mov	x29, sp
  412204:	b.cc	4122f0 <ferror@plt+0xf740>  // b.lo, b.ul, b.last
  412208:	ldr	x8, [x0, #96]
  41220c:	cmp	x8, x3
  412210:	b.cc	4122f0 <ferror@plt+0xf740>  // b.lo, b.ul, b.last
  412214:	mov	x20, x2
  412218:	cmp	x3, x2
  41221c:	b.eq	4122d4 <ferror@plt+0xf724>  // b.none
  412220:	sub	x9, x8, #0x1
  412224:	mov	x19, x4
  412228:	mov	x21, x1
  41222c:	cmp	x20, x9, lsr #1
  412230:	b.ls	412258 <ferror@plt+0xf6a8>  // b.plast
  412234:	ldr	x23, [x0, #80]
  412238:	cmp	x9, x20
  41223c:	b.eq	412270 <ferror@plt+0xf6c0>  // b.none
  412240:	sub	x8, x20, x8
  412244:	add	x8, x8, #0x1
  412248:	ldr	x23, [x23, #24]
  41224c:	adds	x8, x8, #0x1
  412250:	b.cc	412248 <ferror@plt+0xf698>  // b.lo, b.ul, b.last
  412254:	b	412270 <ferror@plt+0xf6c0>
  412258:	ldr	x23, [x0, #72]
  41225c:	cbz	x20, 412270 <ferror@plt+0xf6c0>
  412260:	mov	x8, x20
  412264:	ldr	x23, [x23, #16]
  412268:	subs	x8, x8, #0x1
  41226c:	b.ne	412264 <ferror@plt+0xf6b4>  // b.any
  412270:	sub	x24, x20, x3
  412274:	ldr	x0, [x23, #32]
  412278:	mov	x1, x19
  41227c:	blr	x21
  412280:	cmp	w0, #0x0
  412284:	b.le	412294 <ferror@plt+0xf6e4>
  412288:	mov	w8, #0x8                   	// #8
  41228c:	cbz	w8, 4122b8 <ferror@plt+0xf708>
  412290:	b	4122c4 <ferror@plt+0xf714>
  412294:	cbz	w0, 4122ac <ferror@plt+0xf6fc>
  412298:	ldr	x23, [x23, #16]
  41229c:	mov	w8, wzr
  4122a0:	add	x20, x20, #0x1
  4122a4:	cbz	w8, 4122b8 <ferror@plt+0xf708>
  4122a8:	b	4122c4 <ferror@plt+0xf714>
  4122ac:	mov	w8, #0x1                   	// #1
  4122b0:	mov	x22, x20
  4122b4:	cbnz	w8, 4122c4 <ferror@plt+0xf714>
  4122b8:	adds	x24, x24, #0x1
  4122bc:	b.cc	412274 <ferror@plt+0xf6c4>  // b.lo, b.ul, b.last
  4122c0:	b	4122cc <ferror@plt+0xf71c>
  4122c4:	cmp	w8, #0x8
  4122c8:	b.ne	4122d0 <ferror@plt+0xf720>  // b.any
  4122cc:	mov	w8, wzr
  4122d0:	cbnz	w8, 4122d8 <ferror@plt+0xf728>
  4122d4:	mov	x22, #0xffffffffffffffff    	// #-1
  4122d8:	mov	x0, x22
  4122dc:	ldp	x20, x19, [sp, #48]
  4122e0:	ldp	x22, x21, [sp, #32]
  4122e4:	ldp	x24, x23, [sp, #16]
  4122e8:	ldp	x29, x30, [sp], #64
  4122ec:	ret
  4122f0:	bl	4028d0 <abort@plt>
  4122f4:	stp	x29, x30, [sp, #-64]!
  4122f8:	stp	x22, x21, [sp, #32]
  4122fc:	stp	x20, x19, [sp, #48]
  412300:	ldr	x21, [x0, #72]
  412304:	str	x23, [sp, #16]
  412308:	add	x23, x0, #0x38
  41230c:	mov	x19, x2
  412310:	mov	x20, x0
  412314:	cmp	x21, x23
  412318:	mov	x29, sp
  41231c:	b.eq	412340 <ferror@plt+0xf790>  // b.none
  412320:	mov	x22, x1
  412324:	ldr	x0, [x21, #32]
  412328:	mov	x1, x19
  41232c:	blr	x22
  412330:	tbz	w0, #31, 412350 <ferror@plt+0xf7a0>
  412334:	ldr	x21, [x21, #16]
  412338:	cmp	x21, x23
  41233c:	b.ne	412324 <ferror@plt+0xf774>  // b.any
  412340:	mov	x0, x20
  412344:	mov	x1, x19
  412348:	bl	411a20 <ferror@plt+0xee70>
  41234c:	b	412360 <ferror@plt+0xf7b0>
  412350:	mov	x0, x20
  412354:	mov	x1, x21
  412358:	mov	x2, x19
  41235c:	bl	411ab0 <ferror@plt+0xef00>
  412360:	ldp	x20, x19, [sp, #48]
  412364:	ldp	x22, x21, [sp, #32]
  412368:	ldr	x23, [sp, #16]
  41236c:	ldp	x29, x30, [sp], #64
  412370:	ret
  412374:	stp	x29, x30, [sp, #-64]!
  412378:	stp	x22, x21, [sp, #32]
  41237c:	stp	x20, x19, [sp, #48]
  412380:	ldr	x21, [x0, #72]
  412384:	str	x23, [sp, #16]
  412388:	add	x23, x0, #0x38
  41238c:	mov	x29, sp
  412390:	cmp	x21, x23
  412394:	b.eq	4123fc <ferror@plt+0xf84c>  // b.none
  412398:	mov	x19, x2
  41239c:	mov	x20, x0
  4123a0:	mov	x22, x1
  4123a4:	b	4123bc <ferror@plt+0xf80c>
  4123a8:	mov	w8, #0x2                   	// #2
  4123ac:	cbnz	w8, 4123f4 <ferror@plt+0xf844>
  4123b0:	ldr	x21, [x21, #16]
  4123b4:	cmp	x21, x23
  4123b8:	b.eq	4123fc <ferror@plt+0xf84c>  // b.none
  4123bc:	ldr	x0, [x21, #32]
  4123c0:	mov	x1, x19
  4123c4:	blr	x22
  4123c8:	cmp	w0, #0x0
  4123cc:	b.gt	4123a8 <ferror@plt+0xf7f8>
  4123d0:	cbz	w0, 4123e0 <ferror@plt+0xf830>
  4123d4:	mov	w8, wzr
  4123d8:	cbz	w8, 4123b0 <ferror@plt+0xf800>
  4123dc:	b	4123f4 <ferror@plt+0xf844>
  4123e0:	mov	x0, x20
  4123e4:	mov	x1, x21
  4123e8:	bl	411cc8 <ferror@plt+0xf118>
  4123ec:	mov	w8, #0x1                   	// #1
  4123f0:	cbz	w8, 4123b0 <ferror@plt+0xf800>
  4123f4:	cmp	w8, #0x2
  4123f8:	b.ne	412414 <ferror@plt+0xf864>  // b.any
  4123fc:	mov	w0, wzr
  412400:	ldp	x20, x19, [sp, #48]
  412404:	ldp	x22, x21, [sp, #32]
  412408:	ldr	x23, [sp, #16]
  41240c:	ldp	x29, x30, [sp], #64
  412410:	ret
  412414:	mov	w0, #0x1                   	// #1
  412418:	b	412400 <ferror@plt+0xf850>
  41241c:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x382c>
  412420:	mov	x9, xzr
  412424:	add	x10, x10, #0xe8
  412428:	ldr	x8, [x10, x9]
  41242c:	cmp	x8, x0
  412430:	b.cs	412444 <ferror@plt+0xf894>  // b.hs, b.nlast
  412434:	add	x9, x9, #0x8
  412438:	cmp	x9, #0x740
  41243c:	b.ne	412428 <ferror@plt+0xf878>  // b.any
  412440:	mov	x8, #0xffffffffffffffff    	// #-1
  412444:	mov	x0, x8
  412448:	ret
  41244c:	ldr	x8, [x1, #8]
  412450:	ldp	x10, x9, [x0, #40]
  412454:	udiv	x11, x8, x9
  412458:	msub	x8, x11, x9, x8
  41245c:	lsl	x8, x8, #3
  412460:	ldr	x9, [x10, x8]
  412464:	str	x9, [x1]
  412468:	str	x1, [x10, x8]
  41246c:	ret
  412470:	stp	x29, x30, [sp, #-16]!
  412474:	ldr	x8, [x1, #8]
  412478:	ldp	x10, x9, [x0, #40]
  41247c:	mov	x29, sp
  412480:	udiv	x11, x8, x9
  412484:	msub	x8, x11, x9, x8
  412488:	add	x8, x10, x8, lsl #3
  41248c:	ldr	x9, [x8]
  412490:	cmp	x9, x1
  412494:	b.eq	4124a4 <ferror@plt+0xf8f4>  // b.none
  412498:	cbz	x9, 4124b4 <ferror@plt+0xf904>
  41249c:	mov	x8, x9
  4124a0:	b	41248c <ferror@plt+0xf8dc>
  4124a4:	ldr	x9, [x1]
  4124a8:	str	x9, [x8]
  4124ac:	ldp	x29, x30, [sp], #16
  4124b0:	ret
  4124b4:	bl	4028d0 <abort@plt>
  4124b8:	stp	x29, x30, [sp, #-32]!
  4124bc:	str	x19, [sp, #16]
  4124c0:	mov	x19, x0
  4124c4:	ldr	x0, [x0, #96]
  4124c8:	mov	x29, sp
  4124cc:	lsr	x1, x0, #1
  4124d0:	bl	415de0 <ferror@plt+0x13230>
  4124d4:	ldr	x8, [x19, #48]
  4124d8:	cmp	x0, x8
  4124dc:	b.ls	4124ec <ferror@plt+0xf93c>  // b.plast
  4124e0:	mov	x1, x0
  4124e4:	mov	x0, x19
  4124e8:	bl	4124f8 <ferror@plt+0xf948>
  4124ec:	ldr	x19, [sp, #16]
  4124f0:	ldp	x29, x30, [sp], #32
  4124f4:	ret
  4124f8:	stp	x29, x30, [sp, #-48]!
  4124fc:	stp	x20, x19, [sp, #32]
  412500:	mov	x19, x0
  412504:	mov	x0, x1
  412508:	stp	x22, x21, [sp, #16]
  41250c:	mov	x29, sp
  412510:	bl	41241c <ferror@plt+0xf86c>
  412514:	ldr	x22, [x19, #48]
  412518:	cmp	x0, x22
  41251c:	b.ls	412550 <ferror@plt+0xf9a0>  // b.plast
  412520:	mov	x20, x0
  412524:	lsr	x8, x0, #61
  412528:	cbnz	x8, 412550 <ferror@plt+0xf9a0>
  41252c:	ldr	x21, [x19, #40]
  412530:	mov	w1, #0x8                   	// #8
  412534:	mov	x0, x20
  412538:	bl	4027e0 <calloc@plt>
  41253c:	cbz	x0, 412550 <ferror@plt+0xf9a0>
  412540:	cbnz	x22, 412564 <ferror@plt+0xf9b4>
  412544:	stp	x0, x20, [x19, #40]
  412548:	mov	x0, x21
  41254c:	bl	4029a0 <free@plt>
  412550:	ldp	x20, x19, [sp, #32]
  412554:	ldp	x22, x21, [sp, #16]
  412558:	ldp	x29, x30, [sp], #48
  41255c:	ret
  412560:	cbz	x22, 412544 <ferror@plt+0xf994>
  412564:	sub	x22, x22, #0x1
  412568:	ldr	x8, [x21, x22, lsl #3]
  41256c:	cbz	x8, 412560 <ferror@plt+0xf9b0>
  412570:	ldp	x11, x9, [x8]
  412574:	udiv	x10, x9, x20
  412578:	msub	x9, x10, x20, x9
  41257c:	lsl	x9, x9, #3
  412580:	ldr	x10, [x0, x9]
  412584:	str	x10, [x8]
  412588:	str	x8, [x0, x9]
  41258c:	mov	x8, x11
  412590:	cbnz	x11, 412570 <ferror@plt+0xf9c0>
  412594:	b	412560 <ferror@plt+0xf9b0>
  412598:	stp	x29, x30, [sp, #-16]!
  41259c:	ldr	x8, [x0]
  4125a0:	and	w4, w4, #0x1
  4125a4:	mov	x29, sp
  4125a8:	blr	x8
  4125ac:	ldp	x29, x30, [sp], #16
  4125b0:	ret
  4125b4:	stp	x29, x30, [sp, #-16]!
  4125b8:	ldr	x8, [x0, #8]
  4125bc:	and	w4, w4, #0x1
  4125c0:	mov	x29, sp
  4125c4:	blr	x8
  4125c8:	ldp	x29, x30, [sp], #16
  4125cc:	ret
  4125d0:	stp	x29, x30, [sp, #-16]!
  4125d4:	ldr	x8, [x0]
  4125d8:	mov	x29, sp
  4125dc:	ldr	x8, [x8, #16]
  4125e0:	blr	x8
  4125e4:	ldp	x29, x30, [sp], #16
  4125e8:	ret
  4125ec:	stp	x29, x30, [sp, #-16]!
  4125f0:	ldr	x8, [x0]
  4125f4:	mov	x29, sp
  4125f8:	ldr	x8, [x8, #24]
  4125fc:	blr	x8
  412600:	ldp	x29, x30, [sp], #16
  412604:	ret
  412608:	stp	x29, x30, [sp, #-16]!
  41260c:	ldr	x8, [x0]
  412610:	mov	x29, sp
  412614:	ldr	x8, [x8, #32]
  412618:	blr	x8
  41261c:	ldp	x29, x30, [sp], #16
  412620:	ret
  412624:	stp	x29, x30, [sp, #-16]!
  412628:	ldr	x8, [x0]
  41262c:	mov	x29, sp
  412630:	ldr	x8, [x8, #40]
  412634:	blr	x8
  412638:	ldp	x29, x30, [sp], #16
  41263c:	ret
  412640:	stp	x29, x30, [sp, #-16]!
  412644:	ldr	x8, [x0]
  412648:	mov	x29, sp
  41264c:	ldr	x8, [x8, #48]
  412650:	blr	x8
  412654:	ldp	x29, x30, [sp], #16
  412658:	ret
  41265c:	stp	x29, x30, [sp, #-16]!
  412660:	ldr	x8, [x0]
  412664:	mov	x29, sp
  412668:	ldr	x8, [x8, #56]
  41266c:	blr	x8
  412670:	ldp	x29, x30, [sp], #16
  412674:	ret
  412678:	stp	x29, x30, [sp, #-16]!
  41267c:	ldr	x8, [x0]
  412680:	mov	x29, sp
  412684:	ldr	x8, [x8, #64]
  412688:	blr	x8
  41268c:	ldp	x29, x30, [sp], #16
  412690:	ret
  412694:	stp	x29, x30, [sp, #-32]!
  412698:	stp	x20, x19, [sp, #16]
  41269c:	ldr	x8, [x0]
  4126a0:	mov	x29, sp
  4126a4:	mov	x19, x0
  4126a8:	mov	x20, x1
  4126ac:	ldr	x8, [x8, #16]
  4126b0:	blr	x8
  4126b4:	ldr	x8, [x19]
  4126b8:	mov	x2, x0
  4126bc:	mov	x0, x19
  4126c0:	mov	x1, xzr
  4126c4:	ldr	x8, [x8, #72]
  4126c8:	mov	x3, x20
  4126cc:	blr	x8
  4126d0:	ldp	x20, x19, [sp, #16]
  4126d4:	ldp	x29, x30, [sp], #32
  4126d8:	ret
  4126dc:	stp	x29, x30, [sp, #-48]!
  4126e0:	stp	x20, x19, [sp, #32]
  4126e4:	ldr	x8, [x0]
  4126e8:	str	x21, [sp, #16]
  4126ec:	mov	x29, sp
  4126f0:	mov	x19, x2
  4126f4:	ldr	x8, [x8, #16]
  4126f8:	mov	x20, x0
  4126fc:	mov	x21, x1
  412700:	blr	x8
  412704:	ldr	x8, [x20]
  412708:	mov	x2, x0
  41270c:	mov	x0, x20
  412710:	mov	x1, x21
  412714:	ldr	x8, [x8, #72]
  412718:	mov	x3, x19
  41271c:	blr	x8
  412720:	ldp	x20, x19, [sp, #32]
  412724:	ldr	x21, [sp, #16]
  412728:	ldp	x29, x30, [sp], #48
  41272c:	ret
  412730:	stp	x29, x30, [sp, #-16]!
  412734:	ldr	x8, [x0]
  412738:	mov	x29, sp
  41273c:	ldr	x8, [x8, #72]
  412740:	blr	x8
  412744:	ldp	x29, x30, [sp], #16
  412748:	ret
  41274c:	stp	x29, x30, [sp, #-32]!
  412750:	stp	x20, x19, [sp, #16]
  412754:	ldr	x8, [x0]
  412758:	mov	x29, sp
  41275c:	mov	x19, x0
  412760:	mov	x20, x1
  412764:	ldr	x8, [x8, #16]
  412768:	blr	x8
  41276c:	ldr	x8, [x19]
  412770:	mov	x2, x0
  412774:	mov	x0, x19
  412778:	mov	x1, xzr
  41277c:	ldr	x8, [x8, #80]
  412780:	mov	x3, x20
  412784:	blr	x8
  412788:	ldp	x20, x19, [sp, #16]
  41278c:	ldp	x29, x30, [sp], #32
  412790:	ret
  412794:	stp	x29, x30, [sp, #-48]!
  412798:	stp	x20, x19, [sp, #32]
  41279c:	ldr	x8, [x0]
  4127a0:	str	x21, [sp, #16]
  4127a4:	mov	x29, sp
  4127a8:	mov	x19, x2
  4127ac:	ldr	x8, [x8, #16]
  4127b0:	mov	x20, x0
  4127b4:	mov	x21, x1
  4127b8:	blr	x8
  4127bc:	ldr	x8, [x20]
  4127c0:	mov	x2, x0
  4127c4:	mov	x0, x20
  4127c8:	mov	x1, x21
  4127cc:	ldr	x8, [x8, #80]
  4127d0:	mov	x3, x19
  4127d4:	blr	x8
  4127d8:	ldp	x20, x19, [sp, #32]
  4127dc:	ldr	x21, [sp, #16]
  4127e0:	ldp	x29, x30, [sp], #48
  4127e4:	ret
  4127e8:	stp	x29, x30, [sp, #-16]!
  4127ec:	ldr	x8, [x0]
  4127f0:	mov	x29, sp
  4127f4:	ldr	x8, [x8, #80]
  4127f8:	blr	x8
  4127fc:	ldp	x29, x30, [sp], #16
  412800:	ret
  412804:	stp	x29, x30, [sp, #-16]!
  412808:	ldr	x8, [x0]
  41280c:	mov	x29, sp
  412810:	ldr	x8, [x8, #88]
  412814:	blr	x8
  412818:	ldp	x29, x30, [sp], #16
  41281c:	ret
  412820:	stp	x29, x30, [sp, #-16]!
  412824:	ldr	x8, [x0]
  412828:	mov	x29, sp
  41282c:	ldr	x8, [x8, #96]
  412830:	blr	x8
  412834:	ldp	x29, x30, [sp], #16
  412838:	ret
  41283c:	stp	x29, x30, [sp, #-16]!
  412840:	ldr	x8, [x0]
  412844:	mov	x29, sp
  412848:	ldr	x8, [x8, #104]
  41284c:	blr	x8
  412850:	ldp	x29, x30, [sp], #16
  412854:	ret
  412858:	stp	x29, x30, [sp, #-16]!
  41285c:	ldr	x8, [x0]
  412860:	mov	x29, sp
  412864:	ldr	x8, [x8, #112]
  412868:	blr	x8
  41286c:	ldp	x29, x30, [sp], #16
  412870:	ret
  412874:	stp	x29, x30, [sp, #-16]!
  412878:	ldr	x8, [x0]
  41287c:	mov	x29, sp
  412880:	ldr	x8, [x8, #120]
  412884:	blr	x8
  412888:	ldp	x29, x30, [sp], #16
  41288c:	ret
  412890:	stp	x29, x30, [sp, #-16]!
  412894:	ldr	x8, [x0]
  412898:	mov	x29, sp
  41289c:	ldr	x8, [x8, #128]
  4128a0:	blr	x8
  4128a4:	and	w0, w0, #0x1
  4128a8:	ldp	x29, x30, [sp], #16
  4128ac:	ret
  4128b0:	stp	x29, x30, [sp, #-16]!
  4128b4:	ldr	x8, [x0]
  4128b8:	mov	x29, sp
  4128bc:	ldr	x8, [x8, #136]
  4128c0:	blr	x8
  4128c4:	and	w0, w0, #0x1
  4128c8:	ldp	x29, x30, [sp], #16
  4128cc:	ret
  4128d0:	stp	x29, x30, [sp, #-16]!
  4128d4:	ldr	x8, [x0]
  4128d8:	mov	x29, sp
  4128dc:	ldr	x8, [x8, #144]
  4128e0:	blr	x8
  4128e4:	and	w0, w0, #0x1
  4128e8:	ldp	x29, x30, [sp], #16
  4128ec:	ret
  4128f0:	stp	x29, x30, [sp, #-16]!
  4128f4:	ldr	x8, [x0]
  4128f8:	mov	x29, sp
  4128fc:	ldr	x8, [x8, #152]
  412900:	blr	x8
  412904:	ldp	x29, x30, [sp], #16
  412908:	ret
  41290c:	stp	x29, x30, [sp, #-16]!
  412910:	ldr	x9, [x0]
  412914:	mov	x29, sp
  412918:	ldr	x9, [x9, #160]
  41291c:	blr	x9
  412920:	ldp	x29, x30, [sp], #16
  412924:	ret
  412928:	stp	x29, x30, [sp, #-16]!
  41292c:	ldr	x9, [x0]
  412930:	mov	x29, sp
  412934:	ldr	x9, [x9, #168]
  412938:	blr	x9
  41293c:	ldp	x29, x30, [sp], #16
  412940:	ret
  412944:	stp	x29, x30, [sp, #-16]!
  412948:	ldr	x8, [x0]
  41294c:	mov	x29, sp
  412950:	ldr	x8, [x8, #176]
  412954:	blr	x8
  412958:	and	w0, w0, #0x1
  41295c:	ldp	x29, x30, [sp], #16
  412960:	ret
  412964:	stp	x29, x30, [sp, #-16]!
  412968:	ldr	x8, [x0]
  41296c:	mov	x29, sp
  412970:	ldr	x8, [x8, #184]
  412974:	blr	x8
  412978:	ldp	x29, x30, [sp], #16
  41297c:	ret
  412980:	stp	x29, x30, [sp, #-16]!
  412984:	ldr	x8, [x0]
  412988:	mov	x29, sp
  41298c:	ldr	x8, [x8, #192]
  412990:	blr	x8
  412994:	ldp	x29, x30, [sp], #16
  412998:	ret
  41299c:	stp	x29, x30, [sp, #-16]!
  4129a0:	ldr	x8, [x0]
  4129a4:	mov	x29, sp
  4129a8:	ldr	x8, [x8, #200]
  4129ac:	blr	x8
  4129b0:	ldp	x29, x30, [sp], #16
  4129b4:	ret
  4129b8:	stp	x29, x30, [sp, #-16]!
  4129bc:	ldr	x8, [x0]
  4129c0:	mov	x29, sp
  4129c4:	ldr	x8, [x8, #208]
  4129c8:	blr	x8
  4129cc:	ldp	x29, x30, [sp], #16
  4129d0:	ret
  4129d4:	stp	x29, x30, [sp, #-16]!
  4129d8:	ldr	x8, [x0]
  4129dc:	mov	x29, sp
  4129e0:	ldr	x8, [x8, #216]
  4129e4:	blr	x8
  4129e8:	ldp	x29, x30, [sp], #16
  4129ec:	ret
  4129f0:	stp	x29, x30, [sp, #-16]!
  4129f4:	ldr	x8, [x0]
  4129f8:	mov	x29, sp
  4129fc:	ldr	x8, [x8, #224]
  412a00:	blr	x8
  412a04:	ldp	x29, x30, [sp], #16
  412a08:	ret
  412a0c:	stp	x29, x30, [sp, #-16]!
  412a10:	ldr	x8, [x0]
  412a14:	mov	x29, sp
  412a18:	ldr	x8, [x8, #232]
  412a1c:	blr	x8
  412a20:	and	w0, w0, #0x1
  412a24:	ldp	x29, x30, [sp], #16
  412a28:	ret
  412a2c:	cmn	x0, #0x11
  412a30:	b.hi	412a98 <ferror@plt+0xfee8>  // b.pmore
  412a34:	stp	x29, x30, [sp, #-16]!
  412a38:	add	x0, x0, #0x10
  412a3c:	mov	x29, sp
  412a40:	bl	402700 <malloc@plt>
  412a44:	cbz	x0, 412aa0 <ferror@plt+0xfef0>
  412a48:	mov	x10, #0xff00ff00ff00ff00    	// #-71777214294589696
  412a4c:	mov	x8, x0
  412a50:	add	x0, x0, #0x10
  412a54:	movk	x10, #0xff01
  412a58:	umulh	x10, x0, x10
  412a5c:	lsr	x10, x10, #8
  412a60:	add	x10, x10, x10, lsl #8
  412a64:	adrp	x11, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412a68:	sub	x10, x0, x10
  412a6c:	add	x11, x11, #0x348
  412a70:	lsl	x10, x10, #3
  412a74:	ldr	x12, [x11, x10]
  412a78:	mov	w13, #0xfb4a                	// #64330
  412a7c:	mov	w9, wzr
  412a80:	movk	w13, #0x1415, lsl #16
  412a84:	str	w13, [x8, #12]
  412a88:	str	x12, [x8]
  412a8c:	str	x0, [x11, x10]
  412a90:	ldp	x29, x30, [sp], #16
  412a94:	cbz	w9, 412a9c <ferror@plt+0xfeec>
  412a98:	mov	x0, xzr
  412a9c:	ret
  412aa0:	mov	w9, #0x1                   	// #1
  412aa4:	ldp	x29, x30, [sp], #16
  412aa8:	cbnz	w9, 412a98 <ferror@plt+0xfee8>
  412aac:	b	412a9c <ferror@plt+0xfeec>
  412ab0:	stp	x29, x30, [sp, #-48]!
  412ab4:	str	x21, [sp, #16]
  412ab8:	stp	x20, x19, [sp, #32]
  412abc:	mov	x29, sp
  412ac0:	cbz	x0, 412b3c <ferror@plt+0xff8c>
  412ac4:	ldur	w8, [x0, #-4]
  412ac8:	mov	w9, #0xfb4a                	// #64330
  412acc:	movk	w9, #0x1415, lsl #16
  412ad0:	mov	x19, x0
  412ad4:	cmp	w8, w9
  412ad8:	b.ne	412b3c <ferror@plt+0xff8c>  // b.any
  412adc:	mov	x8, #0xff00ff00ff00ff00    	// #-71777214294589696
  412ae0:	movk	x8, #0xff01
  412ae4:	umulh	x8, x19, x8
  412ae8:	lsr	x8, x8, #8
  412aec:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412af0:	add	x8, x8, x8, lsl #8
  412af4:	add	x9, x9, #0x348
  412af8:	sub	x8, x19, x8
  412afc:	add	x21, x9, x8, lsl #3
  412b00:	sub	x20, x19, #0x10
  412b04:	b	412b20 <ferror@plt+0xff70>
  412b08:	ldr	x8, [x20]
  412b0c:	mov	x0, x20
  412b10:	str	x8, [x21]
  412b14:	bl	4029a0 <free@plt>
  412b18:	mov	w8, wzr
  412b1c:	tbz	w8, #0, 412b3c <ferror@plt+0xff8c>
  412b20:	ldr	x8, [x21]
  412b24:	cbz	x8, 412b3c <ferror@plt+0xff8c>
  412b28:	cmp	x8, x19
  412b2c:	b.eq	412b08 <ferror@plt+0xff58>  // b.none
  412b30:	sub	x21, x8, #0x10
  412b34:	mov	w8, #0x1                   	// #1
  412b38:	tbnz	w8, #0, 412b20 <ferror@plt+0xff70>
  412b3c:	ldp	x20, x19, [sp, #32]
  412b40:	ldr	x21, [sp, #16]
  412b44:	ldp	x29, x30, [sp], #48
  412b48:	ret
  412b4c:	stp	x29, x30, [sp, #-16]!
  412b50:	and	w1, w1, #0xff
  412b54:	and	w8, w2, #0xff
  412b58:	cmp	w1, w8
  412b5c:	mov	x29, sp
  412b60:	b.ne	412b74 <ferror@plt+0xffc4>  // b.any
  412b64:	mov	x2, x3
  412b68:	bl	402a70 <memchr@plt>
  412b6c:	ldp	x29, x30, [sp], #16
  412b70:	ret
  412b74:	cbz	x3, 412ba0 <ferror@plt+0xfff0>
  412b78:	and	x9, x0, #0x7
  412b7c:	cbz	x9, 412ba0 <ferror@plt+0xfff0>
  412b80:	ldrb	w9, [x0]
  412b84:	cmp	w1, w9
  412b88:	b.eq	412c30 <ferror@plt+0x10080>  // b.none
  412b8c:	cmp	w8, w9
  412b90:	b.eq	412c30 <ferror@plt+0x10080>  // b.none
  412b94:	subs	x3, x3, #0x1
  412b98:	add	x0, x0, #0x1
  412b9c:	b.ne	412b78 <ferror@plt+0xffc8>  // b.any
  412ba0:	mov	w10, w1
  412ba4:	mov	w11, w8
  412ba8:	bfi	w10, w10, #8, #8
  412bac:	bfi	w11, w11, #8, #8
  412bb0:	mov	x9, #0xfefefefefefefefe    	// #-72340172838076674
  412bb4:	bfi	x10, x10, #16, #16
  412bb8:	bfi	x11, x11, #16, #16
  412bbc:	movk	x9, #0xfeff
  412bc0:	bfi	x10, x10, #32, #32
  412bc4:	bfi	x11, x11, #32, #32
  412bc8:	subs	x12, x3, #0x8
  412bcc:	b.cc	412c08 <ferror@plt+0x10058>  // b.lo, b.ul, b.last
  412bd0:	mov	x13, x0
  412bd4:	ldr	x14, [x13], #8
  412bd8:	eor	x15, x14, x10
  412bdc:	eor	x14, x14, x11
  412be0:	add	x16, x15, x9
  412be4:	add	x17, x14, x9
  412be8:	bic	x15, x16, x15
  412bec:	bic	x14, x17, x14
  412bf0:	orr	x14, x15, x14
  412bf4:	tst	x14, #0x8080808080808080
  412bf8:	and	x15, x14, #0x8080808080808080
  412bfc:	csel	x0, x13, x0, eq  // eq = none
  412c00:	csel	x3, x12, x3, eq  // eq = none
  412c04:	cbz	x15, 412bc8 <ferror@plt+0x10018>
  412c08:	cbz	x3, 412c2c <ferror@plt+0x1007c>
  412c0c:	ldrb	w9, [x0]
  412c10:	cmp	w1, w9
  412c14:	b.eq	412c30 <ferror@plt+0x10080>  // b.none
  412c18:	cmp	w8, w9
  412c1c:	b.eq	412c30 <ferror@plt+0x10080>  // b.none
  412c20:	subs	x3, x3, #0x1
  412c24:	add	x0, x0, #0x1
  412c28:	b.ne	412c0c <ferror@plt+0x1005c>  // b.any
  412c2c:	mov	x0, xzr
  412c30:	ldp	x29, x30, [sp], #16
  412c34:	ret
  412c38:	stp	x29, x30, [sp, #-16]!
  412c3c:	ldr	x8, [x0]
  412c40:	mov	x29, sp
  412c44:	blr	x8
  412c48:	ldp	x29, x30, [sp], #16
  412c4c:	ret
  412c50:	stp	x29, x30, [sp, #-16]!
  412c54:	ldr	x8, [x0]
  412c58:	mov	x29, sp
  412c5c:	ldr	x8, [x8, #8]
  412c60:	blr	x8
  412c64:	ldp	x29, x30, [sp], #16
  412c68:	ret
  412c6c:	stp	x29, x30, [sp, #-16]!
  412c70:	ldr	x8, [x0]
  412c74:	mov	x29, sp
  412c78:	ldr	x8, [x8, #16]
  412c7c:	blr	x8
  412c80:	and	w0, w0, #0x1
  412c84:	ldp	x29, x30, [sp], #16
  412c88:	ret
  412c8c:	stp	x29, x30, [sp, #-16]!
  412c90:	ldr	x8, [x0]
  412c94:	mov	x29, sp
  412c98:	ldr	x8, [x8, #24]
  412c9c:	blr	x8
  412ca0:	and	w0, w0, #0x1
  412ca4:	ldp	x29, x30, [sp], #16
  412ca8:	ret
  412cac:	stp	x29, x30, [sp, #-16]!
  412cb0:	ldr	x8, [x0]
  412cb4:	mov	x29, sp
  412cb8:	ldr	x8, [x8, #32]
  412cbc:	blr	x8
  412cc0:	ldp	x29, x30, [sp], #16
  412cc4:	ret
  412cc8:	stp	x29, x30, [sp, #-16]!
  412ccc:	ldr	x8, [x0]
  412cd0:	mov	x29, sp
  412cd4:	ldr	x8, [x8, #40]
  412cd8:	blr	x8
  412cdc:	and	w0, w0, #0x1
  412ce0:	ldp	x29, x30, [sp], #16
  412ce4:	ret
  412ce8:	stp	x29, x30, [sp, #-16]!
  412cec:	ldr	x8, [x0]
  412cf0:	mov	x29, sp
  412cf4:	ldr	x8, [x8, #48]
  412cf8:	blr	x8
  412cfc:	ldp	x29, x30, [sp], #16
  412d00:	ret
  412d04:	stp	x29, x30, [sp, #-16]!
  412d08:	ldr	x9, [x0]
  412d0c:	mov	x29, sp
  412d10:	ldr	x9, [x9, #56]
  412d14:	blr	x9
  412d18:	ldp	x29, x30, [sp], #16
  412d1c:	ret
  412d20:	stp	x29, x30, [sp, #-16]!
  412d24:	ldr	x8, [x0]
  412d28:	mov	x29, sp
  412d2c:	ldr	x8, [x8, #64]
  412d30:	blr	x8
  412d34:	and	w0, w0, #0x1
  412d38:	ldp	x29, x30, [sp], #16
  412d3c:	ret
  412d40:	stp	x29, x30, [sp, #-16]!
  412d44:	ldr	x8, [x0]
  412d48:	mov	x29, sp
  412d4c:	ldr	x8, [x8, #72]
  412d50:	blr	x8
  412d54:	ldp	x29, x30, [sp], #16
  412d58:	ret
  412d5c:	stp	x29, x30, [sp, #-32]!
  412d60:	stp	x20, x19, [sp, #16]
  412d64:	mov	x29, sp
  412d68:	cbz	x0, 412de8 <ferror@plt+0x10238>
  412d6c:	mov	w1, #0x2f                  	// #47
  412d70:	mov	x19, x0
  412d74:	bl	402880 <strrchr@plt>
  412d78:	cmp	x0, #0x0
  412d7c:	csinc	x20, x19, x0, eq  // eq = none
  412d80:	sub	x8, x20, x19
  412d84:	cmp	x8, #0x7
  412d88:	b.lt	412dcc <ferror@plt+0x1021c>  // b.tstop
  412d8c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  412d90:	sub	x0, x20, #0x7
  412d94:	add	x1, x1, #0x860
  412d98:	mov	w2, #0x7                   	// #7
  412d9c:	bl	402760 <strncmp@plt>
  412da0:	cbnz	w0, 412dcc <ferror@plt+0x1021c>
  412da4:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  412da8:	add	x1, x1, #0x868
  412dac:	mov	w2, #0x3                   	// #3
  412db0:	mov	x0, x20
  412db4:	bl	402760 <strncmp@plt>
  412db8:	mov	x19, x20
  412dbc:	cbnz	w0, 412dcc <ferror@plt+0x1021c>
  412dc0:	add	x19, x20, #0x3
  412dc4:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  412dc8:	str	x19, [x8, #1112]
  412dcc:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412dd0:	adrp	x9, 42c000 <_obstack_memory_used@@Base+0x1582c>
  412dd4:	str	x19, [x8, #2896]
  412dd8:	str	x19, [x9, #1056]
  412ddc:	ldp	x20, x19, [sp, #16]
  412de0:	ldp	x29, x30, [sp], #32
  412de4:	ret
  412de8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  412dec:	ldr	x3, [x8, #1064]
  412df0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x382c>
  412df4:	add	x0, x0, #0x828
  412df8:	mov	w1, #0x37                  	// #55
  412dfc:	mov	w2, #0x1                   	// #1
  412e00:	bl	402a20 <fwrite@plt>
  412e04:	bl	4028d0 <abort@plt>
  412e08:	stp	x29, x30, [sp, #-48]!
  412e0c:	str	x21, [sp, #16]
  412e10:	stp	x20, x19, [sp, #32]
  412e14:	mov	x29, sp
  412e18:	mov	x19, x0
  412e1c:	bl	402b30 <__errno_location@plt>
  412e20:	ldr	w21, [x0]
  412e24:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412e28:	add	x8, x8, #0xb58
  412e2c:	cmp	x19, #0x0
  412e30:	mov	x20, x0
  412e34:	csel	x0, x8, x19, eq  // eq = none
  412e38:	mov	w1, #0x38                  	// #56
  412e3c:	bl	4159f4 <ferror@plt+0x12e44>
  412e40:	str	w21, [x20]
  412e44:	ldp	x20, x19, [sp, #32]
  412e48:	ldr	x21, [sp, #16]
  412e4c:	ldp	x29, x30, [sp], #48
  412e50:	ret
  412e54:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412e58:	add	x8, x8, #0xb58
  412e5c:	cmp	x0, #0x0
  412e60:	csel	x8, x8, x0, eq  // eq = none
  412e64:	ldr	w0, [x8]
  412e68:	ret
  412e6c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412e70:	add	x8, x8, #0xb58
  412e74:	cmp	x0, #0x0
  412e78:	csel	x8, x8, x0, eq  // eq = none
  412e7c:	str	w1, [x8]
  412e80:	ret
  412e84:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412e88:	add	x8, x8, #0xb58
  412e8c:	cmp	x0, #0x0
  412e90:	ubfx	w9, w1, #5, #3
  412e94:	csel	x8, x8, x0, eq  // eq = none
  412e98:	add	x8, x8, w9, uxtw #2
  412e9c:	ldr	w9, [x8, #8]
  412ea0:	lsr	w10, w9, w1
  412ea4:	and	w0, w10, #0x1
  412ea8:	and	w10, w2, #0x1
  412eac:	eor	w10, w0, w10
  412eb0:	lsl	w10, w10, w1
  412eb4:	eor	w9, w10, w9
  412eb8:	str	w9, [x8, #8]
  412ebc:	ret
  412ec0:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412ec4:	add	x8, x8, #0xb58
  412ec8:	cmp	x0, #0x0
  412ecc:	csel	x8, x8, x0, eq  // eq = none
  412ed0:	ldr	w0, [x8, #4]
  412ed4:	str	w1, [x8, #4]
  412ed8:	ret
  412edc:	stp	x29, x30, [sp, #-16]!
  412ee0:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412ee4:	add	x8, x8, #0xb58
  412ee8:	cmp	x0, #0x0
  412eec:	csel	x8, x8, x0, eq  // eq = none
  412ef0:	mov	w9, #0xa                   	// #10
  412ef4:	mov	x29, sp
  412ef8:	str	w9, [x8]
  412efc:	cbz	x1, 412f10 <ferror@plt+0x10360>
  412f00:	cbz	x2, 412f10 <ferror@plt+0x10360>
  412f04:	stp	x1, x2, [x8, #40]
  412f08:	ldp	x29, x30, [sp], #16
  412f0c:	ret
  412f10:	bl	4028d0 <abort@plt>
  412f14:	sub	sp, sp, #0x60
  412f18:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  412f1c:	add	x8, x8, #0xb58
  412f20:	cmp	x4, #0x0
  412f24:	stp	x29, x30, [sp, #16]
  412f28:	str	x25, [sp, #32]
  412f2c:	stp	x24, x23, [sp, #48]
  412f30:	stp	x22, x21, [sp, #64]
  412f34:	stp	x20, x19, [sp, #80]
  412f38:	add	x29, sp, #0x10
  412f3c:	mov	x19, x3
  412f40:	mov	x20, x2
  412f44:	mov	x21, x1
  412f48:	mov	x22, x0
  412f4c:	csel	x24, x8, x4, eq  // eq = none
  412f50:	bl	402b30 <__errno_location@plt>
  412f54:	ldp	w4, w5, [x24]
  412f58:	ldp	x7, x8, [x24, #40]
  412f5c:	ldr	w25, [x0]
  412f60:	mov	x23, x0
  412f64:	add	x6, x24, #0x8
  412f68:	mov	x0, x22
  412f6c:	mov	x1, x21
  412f70:	mov	x2, x20
  412f74:	mov	x3, x19
  412f78:	str	x8, [sp]
  412f7c:	bl	412fa0 <ferror@plt+0x103f0>
  412f80:	str	w25, [x23]
  412f84:	ldp	x20, x19, [sp, #80]
  412f88:	ldp	x22, x21, [sp, #64]
  412f8c:	ldp	x24, x23, [sp, #48]
  412f90:	ldr	x25, [sp, #32]
  412f94:	ldp	x29, x30, [sp, #16]
  412f98:	add	sp, sp, #0x60
  412f9c:	ret
  412fa0:	sub	sp, sp, #0x120
  412fa4:	stp	x29, x30, [sp, #192]
  412fa8:	add	x29, sp, #0xc0
  412fac:	ldr	x8, [x29, #96]
  412fb0:	stp	x28, x27, [sp, #208]
  412fb4:	stp	x26, x25, [sp, #224]
  412fb8:	stp	x24, x23, [sp, #240]
  412fbc:	stp	x22, x21, [sp, #256]
  412fc0:	stp	x20, x19, [sp, #272]
  412fc4:	str	x7, [sp, #80]
  412fc8:	stur	x6, [x29, #-48]
  412fcc:	mov	w19, w5
  412fd0:	mov	w20, w4
  412fd4:	mov	x23, x3
  412fd8:	mov	x21, x2
  412fdc:	mov	x27, x1
  412fe0:	str	x8, [sp, #96]
  412fe4:	mov	x24, x0
  412fe8:	bl	4029c0 <__ctype_get_mb_cur_max@plt>
  412fec:	mov	w1, w20
  412ff0:	mov	x22, xzr
  412ff4:	mov	w8, wzr
  412ff8:	mov	w28, wzr
  412ffc:	str	w19, [sp, #64]
  413000:	ubfx	w19, w19, #1, #1
  413004:	add	x9, x21, #0x1
  413008:	mov	w15, #0x1                   	// #1
  41300c:	str	x0, [sp, #56]
  413010:	stur	xzr, [x29, #-80]
  413014:	stur	xzr, [x29, #-56]
  413018:	str	wzr, [sp, #88]
  41301c:	stur	x9, [x29, #-72]
  413020:	cmp	w1, #0xa
  413024:	b.hi	413bf8 <ferror@plt+0x11048>  // b.pmore
  413028:	adrp	x12, 41a000 <_obstack_memory_used@@Base+0x382c>
  41302c:	mov	w9, w1
  413030:	add	x12, x12, #0x870
  413034:	adr	x10, 413058 <ferror@plt+0x104a8>
  413038:	ldrb	w11, [x12, x9]
  41303c:	add	x10, x10, x11, lsl #2
  413040:	mov	x26, x27
  413044:	mov	x20, xzr
  413048:	mov	w16, wzr
  41304c:	mov	w9, #0x1                   	// #1
  413050:	mov	w27, w28
  413054:	br	x10
  413058:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  41305c:	add	x0, x0, #0x673
  413060:	mov	w20, w1
  413064:	mov	w22, w15
  413068:	bl	414310 <ferror@plt+0x11760>
  41306c:	str	x0, [sp, #80]
  413070:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x182c>
  413074:	add	x0, x0, #0xf82
  413078:	mov	w1, w20
  41307c:	bl	414310 <ferror@plt+0x11760>
  413080:	mov	w15, w22
  413084:	mov	w1, w20
  413088:	str	x0, [sp, #96]
  41308c:	stur	w1, [x29, #-28]
  413090:	tbnz	w19, #0, 4130d0 <ferror@plt+0x10520>
  413094:	ldr	x8, [sp, #80]
  413098:	ldrb	w9, [x8]
  41309c:	cbz	w9, 4130d0 <ferror@plt+0x10520>
  4130a0:	mov	w27, w15
  4130a4:	mov	x10, xzr
  4130a8:	add	x8, x8, #0x1
  4130ac:	b	4130c0 <ferror@plt+0x10510>
  4130b0:	ldrb	w9, [x8, x10]
  4130b4:	add	x20, x10, #0x1
  4130b8:	mov	x10, x20
  4130bc:	cbz	w9, 4130d8 <ferror@plt+0x10528>
  4130c0:	cmp	x10, x26
  4130c4:	b.cs	4130b0 <ferror@plt+0x10500>  // b.hs, b.nlast
  4130c8:	strb	w9, [x24, x10]
  4130cc:	b	4130b0 <ferror@plt+0x10500>
  4130d0:	mov	w27, w15
  4130d4:	mov	x20, xzr
  4130d8:	ldr	x25, [sp, #96]
  4130dc:	mov	x0, x25
  4130e0:	bl	402540 <strlen@plt>
  4130e4:	ldur	w1, [x29, #-28]
  4130e8:	mov	x22, x0
  4130ec:	stur	x25, [x29, #-56]
  4130f0:	mov	w9, #0x1                   	// #1
  4130f4:	mov	w16, w19
  4130f8:	mov	w15, w27
  4130fc:	mov	w27, w28
  413100:	b	4131ac <ferror@plt+0x105fc>
  413104:	mov	w19, #0x1                   	// #1
  413108:	mov	w1, #0x5                   	// #5
  41310c:	tbz	w19, #0, 413138 <ferror@plt+0x10588>
  413110:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x282c>
  413114:	mov	x20, xzr
  413118:	mov	w22, #0x1                   	// #1
  41311c:	add	x8, x8, #0xf6a
  413120:	stur	x8, [x29, #-56]
  413124:	b	413158 <ferror@plt+0x105a8>
  413128:	mov	x20, xzr
  41312c:	mov	w16, wzr
  413130:	mov	w9, w8
  413134:	b	4131ac <ferror@plt+0x105fc>
  413138:	cbz	x26, 413144 <ferror@plt+0x10594>
  41313c:	mov	w8, #0x22                  	// #34
  413140:	strb	w8, [x24]
  413144:	adrp	x8, 419000 <_obstack_memory_used@@Base+0x282c>
  413148:	add	x8, x8, #0xf6a
  41314c:	mov	w20, #0x1                   	// #1
  413150:	stur	x8, [x29, #-56]
  413154:	mov	w22, #0x1                   	// #1
  413158:	mov	w9, #0x1                   	// #1
  41315c:	b	4131a8 <ferror@plt+0x105f8>
  413160:	mov	w8, #0x1                   	// #1
  413164:	mov	w19, #0x1                   	// #1
  413168:	eor	w9, w19, #0x1
  41316c:	orr	w8, w8, w9
  413170:	tbz	w19, #0, 413180 <ferror@plt+0x105d0>
  413174:	mov	x20, xzr
  413178:	mov	w1, #0x2                   	// #2
  41317c:	b	413194 <ferror@plt+0x105e4>
  413180:	cbz	x26, 41318c <ferror@plt+0x105dc>
  413184:	mov	w9, #0x27                  	// #39
  413188:	strb	w9, [x24]
  41318c:	mov	w1, #0x2                   	// #2
  413190:	mov	w20, #0x1                   	// #1
  413194:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x182c>
  413198:	add	x9, x9, #0xf82
  41319c:	stur	x9, [x29, #-56]
  4131a0:	mov	w22, #0x1                   	// #1
  4131a4:	mov	w9, w8
  4131a8:	mov	w16, w19
  4131ac:	ldur	x8, [x29, #-48]
  4131b0:	mov	w14, w9
  4131b4:	eor	w17, w16, #0x1
  4131b8:	stur	w17, [x29, #-60]
  4131bc:	cmp	x8, #0x0
  4131c0:	cset	w8, eq  // eq = none
  4131c4:	cmp	x22, #0x0
  4131c8:	cset	w9, ne  // ne = any
  4131cc:	cmp	w1, #0x2
  4131d0:	cset	w10, ne  // ne = any
  4131d4:	and	w13, w10, w14
  4131d8:	and	w11, w9, w16
  4131dc:	orr	w10, w10, w17
  4131e0:	and	w17, w9, w13
  4131e4:	orr	w9, w13, w16
  4131e8:	eor	w9, w9, #0x1
  4131ec:	cset	w12, eq  // eq = none
  4131f0:	orr	w8, w8, w9
  4131f4:	mov	x25, xzr
  4131f8:	and	w11, w14, w11
  4131fc:	stur	w10, [x29, #-84]
  413200:	and	w10, w12, w16
  413204:	stur	w8, [x29, #-24]
  413208:	eor	w8, w14, #0x1
  41320c:	str	w11, [sp, #72]
  413210:	str	w10, [sp, #92]
  413214:	stur	w14, [x29, #-64]
  413218:	str	w8, [sp, #76]
  41321c:	stp	w16, w1, [x29, #-32]
  413220:	stur	w17, [x29, #-36]
  413224:	b	41322c <ferror@plt+0x1067c>
  413228:	add	x25, x25, #0x1
  41322c:	cmn	x23, #0x1
  413230:	b.eq	413244 <ferror@plt+0x10694>  // b.none
  413234:	cmp	x25, x23
  413238:	cset	w8, eq  // eq = none
  41323c:	tbz	w8, #0, 413254 <ferror@plt+0x106a4>
  413240:	b	413aa8 <ferror@plt+0x10ef8>
  413244:	ldrb	w8, [x21, x25]
  413248:	cmp	w8, #0x0
  41324c:	cset	w8, eq  // eq = none
  413250:	tbnz	w8, #0, 413aa8 <ferror@plt+0x10ef8>
  413254:	cbz	w17, 413290 <ferror@plt+0x106e0>
  413258:	cmp	x22, #0x2
  41325c:	add	x19, x25, x22
  413260:	b.cc	413288 <ferror@plt+0x106d8>  // b.lo, b.ul, b.last
  413264:	cmn	x23, #0x1
  413268:	b.ne	413288 <ferror@plt+0x106d8>  // b.any
  41326c:	mov	x0, x21
  413270:	mov	w23, w15
  413274:	bl	402540 <strlen@plt>
  413278:	ldp	w17, w16, [x29, #-36]
  41327c:	ldur	w1, [x29, #-28]
  413280:	mov	w15, w23
  413284:	mov	x23, x0
  413288:	cmp	x19, x23
  41328c:	b.ls	4133cc <ferror@plt+0x1081c>  // b.plast
  413290:	mov	w28, wzr
  413294:	ldrb	w19, [x21, x25]
  413298:	cmp	w19, #0x7e
  41329c:	b.hi	413500 <ferror@plt+0x10950>  // b.pmore
  4132a0:	adrp	x14, 41a000 <_obstack_memory_used@@Base+0x382c>
  4132a4:	add	x14, x14, #0x87b
  4132a8:	adr	x13, 4132cc <ferror@plt+0x1071c>
  4132ac:	ldrb	w10, [x14, x19]
  4132b0:	add	x13, x13, x10, lsl #2
  4132b4:	mov	w11, wzr
  4132b8:	mov	w9, wzr
  4132bc:	mov	w8, #0x1                   	// #1
  4132c0:	mov	w12, #0x6e                  	// #110
  4132c4:	mov	w10, #0x61                  	// #97
  4132c8:	br	x13
  4132cc:	ldur	w10, [x29, #-24]
  4132d0:	tbnz	w10, #0, 4132f0 <ferror@plt+0x10740>
  4132d4:	ldur	x11, [x29, #-48]
  4132d8:	ubfx	w10, w19, #5, #3
  4132dc:	ldr	w10, [x11, w10, uxtw #2]
  4132e0:	lsr	w10, w10, w19
  4132e4:	tbz	w10, #0, 4132f0 <ferror@plt+0x10740>
  4132e8:	mov	w10, w19
  4132ec:	b	4132f8 <ferror@plt+0x10748>
  4132f0:	mov	w10, w19
  4132f4:	tbz	w28, #0, 413370 <ferror@plt+0x107c0>
  4132f8:	tbz	w16, #0, 413304 <ferror@plt+0x10754>
  4132fc:	mov	w10, #0x10                  	// #16
  413300:	b	4133bc <ferror@plt+0x1080c>
  413304:	cmp	w1, #0x2
  413308:	cset	w9, ne  // ne = any
  41330c:	orr	w9, w9, w27
  413310:	tbnz	w9, #0, 413354 <ferror@plt+0x107a4>
  413314:	cmp	x20, x26
  413318:	b.cs	413324 <ferror@plt+0x10774>  // b.hs, b.nlast
  41331c:	mov	w9, #0x27                  	// #39
  413320:	strb	w9, [x24, x20]
  413324:	add	x9, x20, #0x1
  413328:	cmp	x9, x26
  41332c:	b.cs	413338 <ferror@plt+0x10788>  // b.hs, b.nlast
  413330:	mov	w11, #0x24                  	// #36
  413334:	strb	w11, [x24, x9]
  413338:	add	x9, x20, #0x2
  41333c:	cmp	x9, x26
  413340:	b.cs	41334c <ferror@plt+0x1079c>  // b.hs, b.nlast
  413344:	mov	w11, #0x27                  	// #39
  413348:	strb	w11, [x24, x9]
  41334c:	add	x20, x20, #0x3
  413350:	mov	w27, #0x1                   	// #1
  413354:	cmp	x20, x26
  413358:	b.cs	413364 <ferror@plt+0x107b4>  // b.hs, b.nlast
  41335c:	mov	w9, #0x5c                  	// #92
  413360:	strb	w9, [x24, x20]
  413364:	add	x20, x20, #0x1
  413368:	mov	w9, #0x1                   	// #1
  41336c:	mov	w19, w10
  413370:	tbnz	w9, #0, 4133a4 <ferror@plt+0x107f4>
  413374:	tbz	w27, #0, 4133a4 <ferror@plt+0x107f4>
  413378:	cmp	x20, x26
  41337c:	b.cs	413388 <ferror@plt+0x107d8>  // b.hs, b.nlast
  413380:	mov	w9, #0x27                  	// #39
  413384:	strb	w9, [x24, x20]
  413388:	add	x9, x20, #0x1
  41338c:	cmp	x9, x26
  413390:	b.cs	41339c <ferror@plt+0x107ec>  // b.hs, b.nlast
  413394:	mov	w10, #0x27                  	// #39
  413398:	strb	w10, [x24, x9]
  41339c:	mov	w27, wzr
  4133a0:	add	x20, x20, #0x2
  4133a4:	cmp	x20, x26
  4133a8:	b.cs	4133b0 <ferror@plt+0x10800>  // b.hs, b.nlast
  4133ac:	strb	w19, [x24, x20]
  4133b0:	mov	w10, wzr
  4133b4:	add	x20, x20, #0x1
  4133b8:	and	w15, w15, w8
  4133bc:	cbz	w10, 413228 <ferror@plt+0x10678>
  4133c0:	cmp	w10, #0xf
  4133c4:	b.eq	413228 <ferror@plt+0x10678>  // b.none
  4133c8:	b	413b2c <ferror@plt+0x10f7c>
  4133cc:	ldur	x1, [x29, #-56]
  4133d0:	add	x0, x21, x25
  4133d4:	mov	x2, x22
  4133d8:	mov	w19, w15
  4133dc:	bl	4027f0 <bcmp@plt>
  4133e0:	ldur	w9, [x29, #-60]
  4133e4:	cmp	w0, #0x0
  4133e8:	cset	w8, ne  // ne = any
  4133ec:	cset	w28, eq  // eq = none
  4133f0:	orr	w8, w8, w9
  4133f4:	tbz	w8, #0, 413408 <ferror@plt+0x10858>
  4133f8:	ldp	w16, w1, [x29, #-32]
  4133fc:	ldur	w17, [x29, #-36]
  413400:	mov	w15, w19
  413404:	b	413294 <ferror@plt+0x106e4>
  413408:	ldp	w16, w1, [x29, #-32]
  41340c:	ldur	w17, [x29, #-36]
  413410:	mov	w10, #0x10                  	// #16
  413414:	mov	w15, w19
  413418:	b	4133bc <ferror@plt+0x1080c>
  41341c:	cmp	x23, #0x1
  413420:	b.eq	413444 <ferror@plt+0x10894>  // b.none
  413424:	cmn	x23, #0x1
  413428:	b.ne	413448 <ferror@plt+0x10898>  // b.any
  41342c:	ldrb	w8, [x21, #1]
  413430:	cbz	w8, 413444 <ferror@plt+0x10894>
  413434:	mov	w9, wzr
  413438:	mov	w8, wzr
  41343c:	mov	x23, #0xffffffffffffffff    	// #-1
  413440:	b	4132cc <ferror@plt+0x1071c>
  413444:	cbz	x25, 413454 <ferror@plt+0x108a4>
  413448:	mov	w9, wzr
  41344c:	mov	w8, wzr
  413450:	b	4132cc <ferror@plt+0x1071c>
  413454:	mov	w11, #0x1                   	// #1
  413458:	cmp	w1, #0x2
  41345c:	b.ne	413464 <ferror@plt+0x108b4>  // b.any
  413460:	tbnz	w16, #0, 4132fc <ferror@plt+0x1074c>
  413464:	mov	w9, wzr
  413468:	mov	w8, w11
  41346c:	b	4132cc <ferror@plt+0x1071c>
  413470:	cmp	w1, #0x2
  413474:	b.ne	413530 <ferror@plt+0x10980>  // b.any
  413478:	tbnz	w16, #0, 4132fc <ferror@plt+0x1074c>
  41347c:	b	41353c <ferror@plt+0x1098c>
  413480:	mov	w10, #0x66                  	// #102
  413484:	b	413554 <ferror@plt+0x109a4>
  413488:	mov	w12, #0x74                  	// #116
  41348c:	b	413548 <ferror@plt+0x10998>
  413490:	mov	w10, #0x62                  	// #98
  413494:	b	413554 <ferror@plt+0x109a4>
  413498:	mov	w12, #0x72                  	// #114
  41349c:	b	413548 <ferror@plt+0x10998>
  4134a0:	ldur	w8, [x29, #-64]
  4134a4:	tbz	w8, #0, 413568 <ferror@plt+0x109b8>
  4134a8:	tbnz	w16, #0, 4132fc <ferror@plt+0x1074c>
  4134ac:	cmp	w1, #0x2
  4134b0:	cset	w8, ne  // ne = any
  4134b4:	orr	w8, w8, w27
  4134b8:	tbz	w8, #0, 4139c8 <ferror@plt+0x10e18>
  4134bc:	mov	x9, x20
  4134c0:	b	413a08 <ferror@plt+0x10e58>
  4134c4:	cmp	w1, #0x5
  4134c8:	b.eq	4136e4 <ferror@plt+0x10b34>  // b.none
  4134cc:	cmp	w1, #0x2
  4134d0:	b.ne	413448 <ferror@plt+0x10898>  // b.any
  4134d4:	tbz	w16, #0, 413448 <ferror@plt+0x10898>
  4134d8:	b	4132fc <ferror@plt+0x1074c>
  4134dc:	mov	w10, #0x76                  	// #118
  4134e0:	b	413554 <ferror@plt+0x109a4>
  4134e4:	cmp	w1, #0x2
  4134e8:	b.ne	413578 <ferror@plt+0x109c8>  // b.any
  4134ec:	tbz	w16, #0, 4137c8 <ferror@plt+0x10c18>
  4134f0:	mov	w8, #0x1                   	// #1
  4134f4:	mov	w10, #0x10                  	// #16
  4134f8:	str	w8, [sp, #88]
  4134fc:	b	4133bc <ferror@plt+0x1080c>
  413500:	ldr	x8, [sp, #56]
  413504:	str	w15, [sp, #52]
  413508:	str	x24, [sp, #40]
  41350c:	cmp	x8, #0x1
  413510:	b.ne	413580 <ferror@plt+0x109d0>  // b.any
  413514:	bl	402950 <__ctype_b_loc@plt>
  413518:	ldr	x8, [x0]
  41351c:	ldur	w1, [x29, #-28]
  413520:	mov	w24, #0x1                   	// #1
  413524:	ldrh	w8, [x8, x19, lsl #1]
  413528:	ubfx	w10, w8, #14, #1
  41352c:	b	413848 <ferror@plt+0x10c98>
  413530:	ldr	w8, [sp, #72]
  413534:	mov	w12, w19
  413538:	tbz	w8, #0, 413548 <ferror@plt+0x10998>
  41353c:	mov	w9, wzr
  413540:	mov	w8, wzr
  413544:	b	413370 <ferror@plt+0x107c0>
  413548:	ldur	w8, [x29, #-84]
  41354c:	mov	w10, w12
  413550:	tbz	w8, #0, 4132fc <ferror@plt+0x1074c>
  413554:	ldur	w11, [x29, #-64]
  413558:	mov	w9, wzr
  41355c:	mov	w8, wzr
  413560:	tbz	w11, #0, 4132cc <ferror@plt+0x1071c>
  413564:	b	4132f8 <ferror@plt+0x10748>
  413568:	ldr	w8, [sp, #64]
  41356c:	tbz	w8, #0, 413448 <ferror@plt+0x10898>
  413570:	mov	w10, #0xf                   	// #15
  413574:	b	4133bc <ferror@plt+0x1080c>
  413578:	mov	w9, wzr
  41357c:	b	413834 <ferror@plt+0x10c84>
  413580:	cmn	x23, #0x1
  413584:	str	x22, [sp, #16]
  413588:	stur	xzr, [x29, #-16]
  41358c:	b.ne	41359c <ferror@plt+0x109ec>  // b.any
  413590:	mov	x0, x21
  413594:	bl	402540 <strlen@plt>
  413598:	mov	x23, x0
  41359c:	sub	x8, x23, x25
  4135a0:	str	x8, [sp, #8]
  4135a4:	add	x8, x21, x25
  4135a8:	str	x8, [sp, #32]
  4135ac:	ldur	x8, [x29, #-72]
  4135b0:	mov	x24, xzr
  4135b4:	add	x8, x8, x25
  4135b8:	str	x8, [sp, #24]
  4135bc:	mov	w8, #0x1                   	// #1
  4135c0:	str	w8, [sp, #68]
  4135c4:	add	x8, x24, x25
  4135c8:	add	x1, x21, x8
  4135cc:	sub	x2, x23, x8
  4135d0:	sub	x0, x29, #0x14
  4135d4:	sub	x3, x29, #0x10
  4135d8:	mov	w22, w27
  4135dc:	bl	416444 <ferror@plt+0x13894>
  4135e0:	cbz	x0, 413638 <ferror@plt+0x10a88>
  4135e4:	mov	x27, x0
  4135e8:	cmn	x0, #0x1
  4135ec:	b.eq	413634 <ferror@plt+0x10a84>  // b.none
  4135f0:	cmn	x27, #0x2
  4135f4:	b.ne	413640 <ferror@plt+0x10a90>  // b.any
  4135f8:	add	x8, x24, x25
  4135fc:	cmp	x8, x23
  413600:	mov	w27, w22
  413604:	b.cs	413628 <ferror@plt+0x10a78>  // b.hs, b.nlast
  413608:	ldr	x9, [sp, #32]
  41360c:	ldrb	w8, [x9, x24]
  413610:	cbz	w8, 413628 <ferror@plt+0x10a78>
  413614:	add	x24, x24, #0x1
  413618:	add	x8, x25, x24
  41361c:	cmp	x8, x23
  413620:	b.cc	41360c <ferror@plt+0x10a5c>  // b.lo, b.ul, b.last
  413624:	ldr	x24, [sp, #8]
  413628:	str	wzr, [sp, #68]
  41362c:	mov	w10, #0x34                  	// #52
  413630:	b	4136d0 <ferror@plt+0x10b20>
  413634:	str	wzr, [sp, #68]
  413638:	mov	w10, #0x34                  	// #52
  41363c:	b	4136cc <ferror@plt+0x10b1c>
  413640:	ldr	w8, [sp, #92]
  413644:	cbz	w8, 4136a8 <ferror@plt+0x10af8>
  413648:	cmp	x27, #0x2
  41364c:	b.cc	4136a0 <ferror@plt+0x10af0>  // b.lo, b.ul, b.last
  413650:	ldr	x9, [sp, #24]
  413654:	sub	x8, x27, #0x1
  413658:	add	x9, x9, x24
  41365c:	b	41366c <ferror@plt+0x10abc>
  413660:	subs	x8, x8, #0x1
  413664:	add	x9, x9, #0x1
  413668:	b.eq	4136a0 <ferror@plt+0x10af0>  // b.none
  41366c:	ldrb	w10, [x9]
  413670:	sub	w10, w10, #0x5b
  413674:	cmp	w10, #0x21
  413678:	b.hi	413660 <ferror@plt+0x10ab0>  // b.pmore
  41367c:	mov	w11, #0x1                   	// #1
  413680:	lsl	x10, x11, x10
  413684:	mov	x11, #0x2b                  	// #43
  413688:	movk	x11, #0x2, lsl #32
  41368c:	tst	x10, x11
  413690:	b.eq	413660 <ferror@plt+0x10ab0>  // b.none
  413694:	mov	w10, #0x10                  	// #16
  413698:	cbnz	w10, 4136cc <ferror@plt+0x10b1c>
  41369c:	b	4136a8 <ferror@plt+0x10af8>
  4136a0:	mov	w10, wzr
  4136a4:	cbnz	w10, 4136cc <ferror@plt+0x10b1c>
  4136a8:	ldur	w0, [x29, #-20]
  4136ac:	bl	402b10 <iswprint@plt>
  4136b0:	ldr	w9, [sp, #68]
  4136b4:	cmp	w0, #0x0
  4136b8:	cset	w8, ne  // ne = any
  4136bc:	mov	w10, wzr
  4136c0:	and	w9, w9, w8
  4136c4:	add	x24, x27, x24
  4136c8:	str	w9, [sp, #68]
  4136cc:	mov	w27, w22
  4136d0:	cbnz	w10, 413798 <ferror@plt+0x10be8>
  4136d4:	sub	x0, x29, #0x10
  4136d8:	bl	4028f0 <mbsinit@plt>
  4136dc:	cbz	w0, 4135c4 <ferror@plt+0x10a14>
  4136e0:	b	4137a0 <ferror@plt+0x10bf0>
  4136e4:	ldr	w8, [sp, #64]
  4136e8:	tbz	w8, #2, 413448 <ferror@plt+0x10898>
  4136ec:	add	x10, x25, #0x2
  4136f0:	cmp	x10, x23
  4136f4:	b.cs	413448 <ferror@plt+0x10898>  // b.hs, b.nlast
  4136f8:	add	x8, x25, x21
  4136fc:	ldrb	w8, [x8, #1]
  413700:	cmp	w8, #0x3f
  413704:	b.ne	413448 <ferror@plt+0x10898>  // b.any
  413708:	ldrb	w11, [x21, x10]
  41370c:	mov	w9, wzr
  413710:	cmp	w11, #0x3e
  413714:	b.hi	413aa0 <ferror@plt+0x10ef0>  // b.pmore
  413718:	mov	w8, #0x1                   	// #1
  41371c:	mov	x12, #0xa38200000000        	// #179778741075968
  413720:	lsl	x8, x8, x11
  413724:	movk	x12, #0x7000, lsl #48
  413728:	tst	x8, x12
  41372c:	b.eq	413aa0 <ferror@plt+0x10ef0>  // b.none
  413730:	tbnz	w16, #0, 4132fc <ferror@plt+0x1074c>
  413734:	cmp	x20, x26
  413738:	b.cs	413744 <ferror@plt+0x10b94>  // b.hs, b.nlast
  41373c:	mov	w8, #0x3f                  	// #63
  413740:	strb	w8, [x24, x20]
  413744:	add	x8, x20, #0x1
  413748:	cmp	x8, x26
  41374c:	b.cs	413758 <ferror@plt+0x10ba8>  // b.hs, b.nlast
  413750:	mov	w9, #0x22                  	// #34
  413754:	strb	w9, [x24, x8]
  413758:	add	x8, x20, #0x2
  41375c:	cmp	x8, x26
  413760:	b.cs	41376c <ferror@plt+0x10bbc>  // b.hs, b.nlast
  413764:	mov	w9, #0x22                  	// #34
  413768:	strb	w9, [x24, x8]
  41376c:	add	x8, x20, #0x3
  413770:	cmp	x8, x26
  413774:	b.cs	413780 <ferror@plt+0x10bd0>  // b.hs, b.nlast
  413778:	mov	w9, #0x3f                  	// #63
  41377c:	strb	w9, [x24, x8]
  413780:	mov	w9, wzr
  413784:	mov	w8, wzr
  413788:	add	x20, x20, #0x4
  41378c:	mov	x25, x10
  413790:	mov	w19, w11
  413794:	b	4132cc <ferror@plt+0x1071c>
  413798:	cmp	w10, #0x34
  41379c:	b.ne	4137a4 <ferror@plt+0x10bf4>  // b.any
  4137a0:	mov	w10, wzr
  4137a4:	ldp	w16, w1, [x29, #-32]
  4137a8:	ldr	w15, [sp, #52]
  4137ac:	ldr	x22, [sp, #16]
  4137b0:	ldur	w17, [x29, #-36]
  4137b4:	cbz	w10, 413844 <ferror@plt+0x10c94>
  4137b8:	ldr	x24, [sp, #40]
  4137bc:	mov	w11, wzr
  4137c0:	mov	w8, wzr
  4137c4:	b	413a84 <ferror@plt+0x10ed4>
  4137c8:	ldur	x10, [x29, #-80]
  4137cc:	cmp	x26, #0x0
  4137d0:	cset	w8, eq  // eq = none
  4137d4:	cmp	x10, #0x0
  4137d8:	cset	w9, ne  // ne = any
  4137dc:	orr	w8, w9, w8
  4137e0:	cmp	w8, #0x0
  4137e4:	csel	x10, x10, x26, ne  // ne = any
  4137e8:	csel	x26, x26, xzr, ne  // ne = any
  4137ec:	cmp	x20, x26
  4137f0:	stur	x10, [x29, #-80]
  4137f4:	b.cs	413800 <ferror@plt+0x10c50>  // b.hs, b.nlast
  4137f8:	mov	w8, #0x27                  	// #39
  4137fc:	strb	w8, [x24, x20]
  413800:	add	x8, x20, #0x1
  413804:	cmp	x8, x26
  413808:	b.cs	413814 <ferror@plt+0x10c64>  // b.hs, b.nlast
  41380c:	mov	w9, #0x5c                  	// #92
  413810:	strb	w9, [x24, x8]
  413814:	add	x8, x20, #0x2
  413818:	cmp	x8, x26
  41381c:	b.cs	413828 <ferror@plt+0x10c78>  // b.hs, b.nlast
  413820:	mov	w9, #0x27                  	// #39
  413824:	strb	w9, [x24, x8]
  413828:	mov	w27, wzr
  41382c:	mov	w9, wzr
  413830:	add	x20, x20, #0x3
  413834:	mov	w8, #0x1                   	// #1
  413838:	str	w8, [sp, #88]
  41383c:	mov	w8, #0x1                   	// #1
  413840:	b	4132cc <ferror@plt+0x1071c>
  413844:	ldr	w10, [sp, #68]
  413848:	ldr	w9, [sp, #76]
  41384c:	and	w8, w10, #0x1
  413850:	cmp	x24, #0x1
  413854:	orr	w9, w10, w9
  413858:	b.hi	413878 <ferror@plt+0x10cc8>  // b.pmore
  41385c:	tbz	w9, #0, 413878 <ferror@plt+0x10cc8>
  413860:	ldr	x24, [sp, #40]
  413864:	ldr	w15, [sp, #52]
  413868:	ldp	w17, w16, [x29, #-36]
  41386c:	mov	w11, wzr
  413870:	mov	w10, wzr
  413874:	b	413a84 <ferror@plt+0x10ed4>
  413878:	add	x10, x24, x25
  41387c:	ldr	x24, [sp, #40]
  413880:	ldr	w15, [sp, #52]
  413884:	ldp	w17, w16, [x29, #-36]
  413888:	mov	w11, wzr
  41388c:	b	4138a0 <ferror@plt+0x10cf0>
  413890:	ldur	x13, [x29, #-72]
  413894:	add	x20, x20, #0x1
  413898:	ldrb	w19, [x13, x25]
  41389c:	mov	x25, x12
  4138a0:	tbz	w9, #0, 4138c4 <ferror@plt+0x10d14>
  4138a4:	tbz	w28, #0, 41396c <ferror@plt+0x10dbc>
  4138a8:	cmp	x20, x26
  4138ac:	b.cs	4138b8 <ferror@plt+0x10d08>  // b.hs, b.nlast
  4138b0:	mov	w12, #0x5c                  	// #92
  4138b4:	strb	w12, [x24, x20]
  4138b8:	mov	w28, wzr
  4138bc:	add	x20, x20, #0x1
  4138c0:	b	41396c <ferror@plt+0x10dbc>
  4138c4:	tbnz	w16, #0, 413a80 <ferror@plt+0x10ed0>
  4138c8:	cmp	w1, #0x2
  4138cc:	cset	w11, ne  // ne = any
  4138d0:	orr	w11, w11, w27
  4138d4:	tbnz	w11, #0, 413918 <ferror@plt+0x10d68>
  4138d8:	cmp	x20, x26
  4138dc:	b.cs	4138e8 <ferror@plt+0x10d38>  // b.hs, b.nlast
  4138e0:	mov	w11, #0x27                  	// #39
  4138e4:	strb	w11, [x24, x20]
  4138e8:	add	x11, x20, #0x1
  4138ec:	cmp	x11, x26
  4138f0:	b.cs	4138fc <ferror@plt+0x10d4c>  // b.hs, b.nlast
  4138f4:	mov	w12, #0x24                  	// #36
  4138f8:	strb	w12, [x24, x11]
  4138fc:	add	x11, x20, #0x2
  413900:	cmp	x11, x26
  413904:	b.cs	413910 <ferror@plt+0x10d60>  // b.hs, b.nlast
  413908:	mov	w12, #0x27                  	// #39
  41390c:	strb	w12, [x24, x11]
  413910:	add	x20, x20, #0x3
  413914:	mov	w27, #0x1                   	// #1
  413918:	cmp	x20, x26
  41391c:	b.cs	413928 <ferror@plt+0x10d78>  // b.hs, b.nlast
  413920:	mov	w11, #0x5c                  	// #92
  413924:	strb	w11, [x24, x20]
  413928:	add	x11, x20, #0x1
  41392c:	cmp	x11, x26
  413930:	b.cs	413940 <ferror@plt+0x10d90>  // b.hs, b.nlast
  413934:	mov	w12, #0x30                  	// #48
  413938:	bfxil	w12, w19, #6, #2
  41393c:	strb	w12, [x24, x11]
  413940:	add	x11, x20, #0x2
  413944:	cmp	x11, x26
  413948:	b.cs	413958 <ferror@plt+0x10da8>  // b.hs, b.nlast
  41394c:	mov	w12, #0x30                  	// #48
  413950:	bfxil	w12, w19, #3, #3
  413954:	strb	w12, [x24, x11]
  413958:	mov	w12, #0x30                  	// #48
  41395c:	bfxil	w12, w19, #0, #3
  413960:	add	x20, x20, #0x3
  413964:	mov	w11, #0x1                   	// #1
  413968:	mov	w19, w12
  41396c:	add	x12, x25, #0x1
  413970:	cmp	x10, x12
  413974:	b.ls	4139c0 <ferror@plt+0x10e10>  // b.plast
  413978:	and	w13, w11, #0x1
  41397c:	orn	w13, w13, w27
  413980:	tbnz	w13, #0, 4139b0 <ferror@plt+0x10e00>
  413984:	cmp	x20, x26
  413988:	b.cs	413994 <ferror@plt+0x10de4>  // b.hs, b.nlast
  41398c:	mov	w13, #0x27                  	// #39
  413990:	strb	w13, [x24, x20]
  413994:	add	x13, x20, #0x1
  413998:	cmp	x13, x26
  41399c:	b.cs	4139a8 <ferror@plt+0x10df8>  // b.hs, b.nlast
  4139a0:	mov	w14, #0x27                  	// #39
  4139a4:	strb	w14, [x24, x13]
  4139a8:	mov	w27, wzr
  4139ac:	add	x20, x20, #0x2
  4139b0:	cmp	x20, x26
  4139b4:	b.cs	413890 <ferror@plt+0x10ce0>  // b.hs, b.nlast
  4139b8:	strb	w19, [x24, x20]
  4139bc:	b	413890 <ferror@plt+0x10ce0>
  4139c0:	mov	w10, #0x2c                  	// #44
  4139c4:	b	413a84 <ferror@plt+0x10ed4>
  4139c8:	cmp	x20, x26
  4139cc:	b.cs	4139d8 <ferror@plt+0x10e28>  // b.hs, b.nlast
  4139d0:	mov	w8, #0x27                  	// #39
  4139d4:	strb	w8, [x24, x20]
  4139d8:	add	x8, x20, #0x1
  4139dc:	cmp	x8, x26
  4139e0:	b.cs	4139ec <ferror@plt+0x10e3c>  // b.hs, b.nlast
  4139e4:	mov	w9, #0x24                  	// #36
  4139e8:	strb	w9, [x24, x8]
  4139ec:	add	x8, x20, #0x2
  4139f0:	cmp	x8, x26
  4139f4:	b.cs	413a00 <ferror@plt+0x10e50>  // b.hs, b.nlast
  4139f8:	mov	w9, #0x27                  	// #39
  4139fc:	strb	w9, [x24, x8]
  413a00:	add	x9, x20, #0x3
  413a04:	mov	w27, #0x1                   	// #1
  413a08:	cmp	x9, x26
  413a0c:	b.cs	413a18 <ferror@plt+0x10e68>  // b.hs, b.nlast
  413a10:	mov	w8, #0x5c                  	// #92
  413a14:	strb	w8, [x24, x9]
  413a18:	cmp	w1, #0x2
  413a1c:	add	x20, x9, #0x1
  413a20:	b.eq	413a70 <ferror@plt+0x10ec0>  // b.none
  413a24:	add	x8, x25, #0x1
  413a28:	cmp	x8, x23
  413a2c:	b.cs	413a70 <ferror@plt+0x10ec0>  // b.hs, b.nlast
  413a30:	ldrb	w8, [x21, x8]
  413a34:	sub	w8, w8, #0x30
  413a38:	cmp	w8, #0x9
  413a3c:	b.hi	413a70 <ferror@plt+0x10ec0>  // b.pmore
  413a40:	cmp	x20, x26
  413a44:	b.cs	413a50 <ferror@plt+0x10ea0>  // b.hs, b.nlast
  413a48:	mov	w8, #0x30                  	// #48
  413a4c:	strb	w8, [x24, x20]
  413a50:	add	x8, x9, #0x2
  413a54:	cmp	x8, x26
  413a58:	b.cs	413a64 <ferror@plt+0x10eb4>  // b.hs, b.nlast
  413a5c:	mov	w10, #0x30                  	// #48
  413a60:	strb	w10, [x24, x8]
  413a64:	mov	w8, wzr
  413a68:	add	x20, x9, #0x3
  413a6c:	b	413a74 <ferror@plt+0x10ec4>
  413a70:	mov	w8, wzr
  413a74:	mov	w9, #0x1                   	// #1
  413a78:	mov	w19, #0x30                  	// #48
  413a7c:	b	4132cc <ferror@plt+0x1071c>
  413a80:	mov	w10, #0x10                  	// #16
  413a84:	cmp	w8, #0x0
  413a88:	cset	w8, ne  // ne = any
  413a8c:	cmp	w10, #0x2c
  413a90:	and	w9, w11, #0x1
  413a94:	b.eq	413370 <ferror@plt+0x107c0>  // b.none
  413a98:	cbz	w10, 4132cc <ferror@plt+0x1071c>
  413a9c:	b	4133bc <ferror@plt+0x1080c>
  413aa0:	mov	w8, w9
  413aa4:	b	4132cc <ferror@plt+0x1071c>
  413aa8:	cmp	x20, #0x0
  413aac:	cset	w8, eq  // eq = none
  413ab0:	cmp	w1, #0x2
  413ab4:	cset	w9, eq  // eq = none
  413ab8:	and	w8, w9, w8
  413abc:	and	w8, w16, w8
  413ac0:	tbnz	w8, #0, 413b34 <ferror@plt+0x10f84>
  413ac4:	ldur	w9, [x29, #-64]
  413ac8:	cmp	w1, #0x2
  413acc:	cset	w8, ne  // ne = any
  413ad0:	orr	w8, w16, w8
  413ad4:	tbnz	w8, #0, 413b08 <ferror@plt+0x10f58>
  413ad8:	ldr	w8, [sp, #88]
  413adc:	eor	w8, w8, #0x1
  413ae0:	tbnz	w8, #0, 413b08 <ferror@plt+0x10f58>
  413ae4:	tbnz	w15, #0, 413bd4 <ferror@plt+0x11024>
  413ae8:	ldur	x8, [x29, #-80]
  413aec:	cbz	x8, 413b08 <ferror@plt+0x10f58>
  413af0:	mov	w28, w27
  413af4:	ldur	x27, [x29, #-80]
  413af8:	mov	w1, #0x2                   	// #2
  413afc:	mov	w8, w9
  413b00:	mov	w19, w16
  413b04:	cbz	x26, 413020 <ferror@plt+0x10470>
  413b08:	ldur	x10, [x29, #-56]
  413b0c:	cmp	x10, #0x0
  413b10:	cset	w8, eq  // eq = none
  413b14:	orr	w8, w8, w16
  413b18:	tbnz	w8, #0, 413bc4 <ferror@plt+0x11014>
  413b1c:	ldrb	w9, [x10]
  413b20:	cbz	w9, 413bc4 <ferror@plt+0x11014>
  413b24:	add	x8, x10, #0x1
  413b28:	b	413b90 <ferror@plt+0x10fe0>
  413b2c:	cmp	w10, #0x10
  413b30:	b.ne	413ba0 <ferror@plt+0x10ff0>  // b.any
  413b34:	ldur	w8, [x29, #-64]
  413b38:	mov	w9, #0x4                   	// #4
  413b3c:	mov	x0, x24
  413b40:	mov	x2, x21
  413b44:	tst	w8, #0x1
  413b48:	mov	w8, #0x2                   	// #2
  413b4c:	csel	w8, w9, w8, ne  // ne = any
  413b50:	cmp	w1, #0x2
  413b54:	csel	w4, w8, w1, eq  // eq = none
  413b58:	ldr	w8, [sp, #64]
  413b5c:	mov	x1, x26
  413b60:	mov	x3, x23
  413b64:	mov	x6, xzr
  413b68:	and	w5, w8, #0xfffffffd
  413b6c:	ldr	x8, [sp, #96]
  413b70:	str	x8, [sp]
  413b74:	ldr	x7, [sp, #80]
  413b78:	bl	412fa0 <ferror@plt+0x103f0>
  413b7c:	mov	x20, x0
  413b80:	b	413ba0 <ferror@plt+0x10ff0>
  413b84:	ldrb	w9, [x8], #1
  413b88:	add	x20, x20, #0x1
  413b8c:	cbz	w9, 413bc4 <ferror@plt+0x11014>
  413b90:	cmp	x20, x26
  413b94:	b.cs	413b84 <ferror@plt+0x10fd4>  // b.hs, b.nlast
  413b98:	strb	w9, [x24, x20]
  413b9c:	b	413b84 <ferror@plt+0x10fd4>
  413ba0:	mov	x0, x20
  413ba4:	ldp	x20, x19, [sp, #272]
  413ba8:	ldp	x22, x21, [sp, #256]
  413bac:	ldp	x24, x23, [sp, #240]
  413bb0:	ldp	x26, x25, [sp, #224]
  413bb4:	ldp	x28, x27, [sp, #208]
  413bb8:	ldp	x29, x30, [sp, #192]
  413bbc:	add	sp, sp, #0x120
  413bc0:	ret
  413bc4:	cmp	x20, x26
  413bc8:	b.cs	413ba0 <ferror@plt+0x10ff0>  // b.hs, b.nlast
  413bcc:	strb	wzr, [x24, x20]
  413bd0:	b	413ba0 <ferror@plt+0x10ff0>
  413bd4:	ldr	x8, [sp, #96]
  413bd8:	ldur	x1, [x29, #-80]
  413bdc:	ldr	w5, [sp, #64]
  413be0:	ldur	x6, [x29, #-48]
  413be4:	mov	w4, #0x5                   	// #5
  413be8:	mov	x0, x24
  413bec:	mov	x2, x21
  413bf0:	mov	x3, x23
  413bf4:	b	413b70 <ferror@plt+0x10fc0>
  413bf8:	bl	4028d0 <abort@plt>
  413bfc:	stp	x29, x30, [sp, #-16]!
  413c00:	mov	x3, x2
  413c04:	mov	x2, xzr
  413c08:	mov	x29, sp
  413c0c:	bl	413c18 <ferror@plt+0x11068>
  413c10:	ldp	x29, x30, [sp], #16
  413c14:	ret
  413c18:	sub	sp, sp, #0x70
  413c1c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  413c20:	add	x8, x8, #0xb58
  413c24:	cmp	x3, #0x0
  413c28:	stp	x29, x30, [sp, #16]
  413c2c:	stp	x28, x27, [sp, #32]
  413c30:	stp	x26, x25, [sp, #48]
  413c34:	stp	x24, x23, [sp, #64]
  413c38:	stp	x22, x21, [sp, #80]
  413c3c:	stp	x20, x19, [sp, #96]
  413c40:	add	x29, sp, #0x10
  413c44:	mov	x19, x2
  413c48:	mov	x22, x1
  413c4c:	mov	x23, x0
  413c50:	csel	x21, x8, x3, eq  // eq = none
  413c54:	bl	402b30 <__errno_location@plt>
  413c58:	ldp	w4, w8, [x21]
  413c5c:	cmp	x19, #0x0
  413c60:	ldp	x7, x9, [x21, #40]
  413c64:	ldr	w28, [x0]
  413c68:	cset	w10, eq  // eq = none
  413c6c:	orr	w25, w8, w10
  413c70:	add	x26, x21, #0x8
  413c74:	mov	x24, x0
  413c78:	mov	x0, xzr
  413c7c:	mov	x1, xzr
  413c80:	mov	x2, x23
  413c84:	mov	x3, x22
  413c88:	mov	w5, w25
  413c8c:	mov	x6, x26
  413c90:	str	x9, [sp]
  413c94:	bl	412fa0 <ferror@plt+0x103f0>
  413c98:	add	x27, x0, #0x1
  413c9c:	mov	x20, x0
  413ca0:	mov	x0, x27
  413ca4:	bl	415918 <ferror@plt+0x12d68>
  413ca8:	ldr	w4, [x21]
  413cac:	ldp	x7, x8, [x21, #40]
  413cb0:	mov	x1, x27
  413cb4:	mov	x2, x23
  413cb8:	mov	x3, x22
  413cbc:	mov	w5, w25
  413cc0:	mov	x6, x26
  413cc4:	mov	x21, x0
  413cc8:	str	x8, [sp]
  413ccc:	bl	412fa0 <ferror@plt+0x103f0>
  413cd0:	str	w28, [x24]
  413cd4:	cbz	x19, 413cdc <ferror@plt+0x1112c>
  413cd8:	str	x20, [x19]
  413cdc:	mov	x0, x21
  413ce0:	ldp	x20, x19, [sp, #96]
  413ce4:	ldp	x22, x21, [sp, #80]
  413ce8:	ldp	x24, x23, [sp, #64]
  413cec:	ldp	x26, x25, [sp, #48]
  413cf0:	ldp	x28, x27, [sp, #32]
  413cf4:	ldp	x29, x30, [sp, #16]
  413cf8:	add	sp, sp, #0x70
  413cfc:	ret
  413d00:	stp	x29, x30, [sp, #-64]!
  413d04:	stp	x20, x19, [sp, #48]
  413d08:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  413d0c:	stp	x22, x21, [sp, #32]
  413d10:	ldr	w8, [x20, #952]
  413d14:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x1582c>
  413d18:	ldr	x19, [x21, #944]
  413d1c:	str	x23, [sp, #16]
  413d20:	cmp	w8, #0x2
  413d24:	mov	x29, sp
  413d28:	b.lt	413d4c <ferror@plt+0x1119c>  // b.tstop
  413d2c:	add	x22, x19, #0x18
  413d30:	mov	w23, #0x1                   	// #1
  413d34:	ldr	x0, [x22], #16
  413d38:	bl	4029a0 <free@plt>
  413d3c:	ldrsw	x8, [x20, #952]
  413d40:	add	x23, x23, #0x1
  413d44:	cmp	x23, x8
  413d48:	b.lt	413d34 <ferror@plt+0x11184>  // b.tstop
  413d4c:	ldr	x0, [x19, #8]
  413d50:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  413d54:	add	x23, x23, #0xb90
  413d58:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x1582c>
  413d5c:	cmp	x0, x23
  413d60:	add	x22, x22, #0x3c0
  413d64:	b.eq	413d74 <ferror@plt+0x111c4>  // b.none
  413d68:	bl	4029a0 <free@plt>
  413d6c:	mov	w8, #0x100                 	// #256
  413d70:	stp	x8, x23, [x22]
  413d74:	cmp	x19, x22
  413d78:	b.eq	413d88 <ferror@plt+0x111d8>  // b.none
  413d7c:	mov	x0, x19
  413d80:	bl	4029a0 <free@plt>
  413d84:	str	x22, [x21, #944]
  413d88:	mov	w8, #0x1                   	// #1
  413d8c:	str	w8, [x20, #952]
  413d90:	ldp	x20, x19, [sp, #48]
  413d94:	ldp	x22, x21, [sp, #32]
  413d98:	ldr	x23, [sp, #16]
  413d9c:	ldp	x29, x30, [sp], #64
  413da0:	ret
  413da4:	stp	x29, x30, [sp, #-16]!
  413da8:	adrp	x3, 437000 <__progname@@GLIBC_2.17+0xaba8>
  413dac:	add	x3, x3, #0xb58
  413db0:	mov	x2, #0xffffffffffffffff    	// #-1
  413db4:	mov	x29, sp
  413db8:	bl	413dc4 <ferror@plt+0x11214>
  413dbc:	ldp	x29, x30, [sp], #16
  413dc0:	ret
  413dc4:	sub	sp, sp, #0x80
  413dc8:	stp	x29, x30, [sp, #32]
  413dcc:	add	x29, sp, #0x20
  413dd0:	stp	x28, x27, [sp, #48]
  413dd4:	stp	x26, x25, [sp, #64]
  413dd8:	stp	x24, x23, [sp, #80]
  413ddc:	stp	x22, x21, [sp, #96]
  413de0:	stp	x20, x19, [sp, #112]
  413de4:	mov	x22, x3
  413de8:	stur	x2, [x29, #-8]
  413dec:	mov	x21, x1
  413df0:	mov	w23, w0
  413df4:	bl	402b30 <__errno_location@plt>
  413df8:	tbnz	w23, #31, 413f48 <ferror@plt+0x11398>
  413dfc:	adrp	x25, 42c000 <_obstack_memory_used@@Base+0x1582c>
  413e00:	ldr	w8, [x25, #952]
  413e04:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x1582c>
  413e08:	ldr	w20, [x0]
  413e0c:	ldr	x27, [x28, #944]
  413e10:	mov	x19, x0
  413e14:	cmp	w8, w23
  413e18:	b.gt	413e84 <ferror@plt+0x112d4>
  413e1c:	mov	w8, #0x7fffffff            	// #2147483647
  413e20:	cmp	w23, w8
  413e24:	stur	w20, [x29, #-12]
  413e28:	b.cs	413f4c <ferror@plt+0x1139c>  // b.hs, b.nlast
  413e2c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  413e30:	add	x20, x20, #0x3c0
  413e34:	add	w26, w23, #0x1
  413e38:	cmp	x27, x20
  413e3c:	csel	x0, xzr, x27, eq  // eq = none
  413e40:	sbfiz	x1, x26, #4, #32
  413e44:	bl	415878 <ferror@plt+0x12cc8>
  413e48:	mov	x24, x0
  413e4c:	cmp	x27, x20
  413e50:	str	x0, [x28, #944]
  413e54:	b.ne	413e60 <ferror@plt+0x112b0>  // b.any
  413e58:	ldr	q0, [x20]
  413e5c:	str	q0, [x24]
  413e60:	ldrsw	x8, [x25, #952]
  413e64:	mov	w1, wzr
  413e68:	add	x0, x24, x8, lsl #4
  413e6c:	sub	w8, w26, w8
  413e70:	sbfiz	x2, x8, #4, #32
  413e74:	bl	4027a0 <memset@plt>
  413e78:	ldur	w20, [x29, #-12]
  413e7c:	mov	x27, x24
  413e80:	str	w26, [x25, #952]
  413e84:	add	x28, x27, w23, sxtw #4
  413e88:	mov	x27, x28
  413e8c:	ldr	x26, [x28]
  413e90:	ldr	x23, [x27, #8]!
  413e94:	ldp	w4, w8, [x22]
  413e98:	ldp	x7, x9, [x22, #40]
  413e9c:	ldur	x3, [x29, #-8]
  413ea0:	add	x24, x22, #0x8
  413ea4:	orr	w25, w8, #0x1
  413ea8:	mov	x0, x23
  413eac:	mov	x1, x26
  413eb0:	mov	x2, x21
  413eb4:	mov	w5, w25
  413eb8:	mov	x6, x24
  413ebc:	str	x9, [sp]
  413ec0:	bl	412fa0 <ferror@plt+0x103f0>
  413ec4:	cmp	x26, x0
  413ec8:	b.hi	413f20 <ferror@plt+0x11370>  // b.pmore
  413ecc:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  413ed0:	add	x8, x8, #0xb90
  413ed4:	add	x26, x0, #0x1
  413ed8:	cmp	x23, x8
  413edc:	str	x26, [x28]
  413ee0:	b.eq	413eec <ferror@plt+0x1133c>  // b.none
  413ee4:	mov	x0, x23
  413ee8:	bl	4029a0 <free@plt>
  413eec:	mov	x0, x26
  413ef0:	bl	415918 <ferror@plt+0x12d68>
  413ef4:	str	x0, [x27]
  413ef8:	ldr	w4, [x22]
  413efc:	ldp	x7, x8, [x22, #40]
  413f00:	ldur	x3, [x29, #-8]
  413f04:	mov	x1, x26
  413f08:	mov	x2, x21
  413f0c:	mov	w5, w25
  413f10:	mov	x6, x24
  413f14:	mov	x23, x0
  413f18:	str	x8, [sp]
  413f1c:	bl	412fa0 <ferror@plt+0x103f0>
  413f20:	str	w20, [x19]
  413f24:	mov	x0, x23
  413f28:	ldp	x20, x19, [sp, #112]
  413f2c:	ldp	x22, x21, [sp, #96]
  413f30:	ldp	x24, x23, [sp, #80]
  413f34:	ldp	x26, x25, [sp, #64]
  413f38:	ldp	x28, x27, [sp, #48]
  413f3c:	ldp	x29, x30, [sp, #32]
  413f40:	add	sp, sp, #0x80
  413f44:	ret
  413f48:	bl	4028d0 <abort@plt>
  413f4c:	bl	415a64 <ferror@plt+0x12eb4>
  413f50:	stp	x29, x30, [sp, #-16]!
  413f54:	adrp	x3, 437000 <__progname@@GLIBC_2.17+0xaba8>
  413f58:	add	x3, x3, #0xb58
  413f5c:	mov	x29, sp
  413f60:	bl	413dc4 <ferror@plt+0x11214>
  413f64:	ldp	x29, x30, [sp], #16
  413f68:	ret
  413f6c:	stp	x29, x30, [sp, #-16]!
  413f70:	mov	x1, x0
  413f74:	mov	w0, wzr
  413f78:	mov	x29, sp
  413f7c:	bl	413da4 <ferror@plt+0x111f4>
  413f80:	ldp	x29, x30, [sp], #16
  413f84:	ret
  413f88:	stp	x29, x30, [sp, #-16]!
  413f8c:	mov	x2, x1
  413f90:	mov	x1, x0
  413f94:	mov	w0, wzr
  413f98:	mov	x29, sp
  413f9c:	bl	413f50 <ferror@plt+0x113a0>
  413fa0:	ldp	x29, x30, [sp], #16
  413fa4:	ret
  413fa8:	sub	sp, sp, #0x60
  413fac:	stp	x20, x19, [sp, #80]
  413fb0:	mov	w20, w0
  413fb4:	add	x8, sp, #0x8
  413fb8:	mov	w0, w1
  413fbc:	stp	x29, x30, [sp, #64]
  413fc0:	add	x29, sp, #0x40
  413fc4:	mov	x19, x2
  413fc8:	bl	413ff0 <ferror@plt+0x11440>
  413fcc:	add	x3, sp, #0x8
  413fd0:	mov	x2, #0xffffffffffffffff    	// #-1
  413fd4:	mov	w0, w20
  413fd8:	mov	x1, x19
  413fdc:	bl	413dc4 <ferror@plt+0x11214>
  413fe0:	ldp	x20, x19, [sp, #80]
  413fe4:	ldp	x29, x30, [sp, #64]
  413fe8:	add	sp, sp, #0x60
  413fec:	ret
  413ff0:	stp	x29, x30, [sp, #-16]!
  413ff4:	movi	v0.2d, #0x0
  413ff8:	cmp	w0, #0xa
  413ffc:	mov	x29, sp
  414000:	str	xzr, [x8, #48]
  414004:	stp	q0, q0, [x8, #16]
  414008:	str	q0, [x8]
  41400c:	b.eq	41401c <ferror@plt+0x1146c>  // b.none
  414010:	str	w0, [x8]
  414014:	ldp	x29, x30, [sp], #16
  414018:	ret
  41401c:	bl	4028d0 <abort@plt>
  414020:	sub	sp, sp, #0x70
  414024:	str	x21, [sp, #80]
  414028:	mov	w21, w0
  41402c:	add	x8, sp, #0x8
  414030:	mov	w0, w1
  414034:	stp	x29, x30, [sp, #64]
  414038:	stp	x20, x19, [sp, #96]
  41403c:	add	x29, sp, #0x40
  414040:	mov	x19, x3
  414044:	mov	x20, x2
  414048:	bl	413ff0 <ferror@plt+0x11440>
  41404c:	add	x3, sp, #0x8
  414050:	mov	w0, w21
  414054:	mov	x1, x20
  414058:	mov	x2, x19
  41405c:	bl	413dc4 <ferror@plt+0x11214>
  414060:	ldp	x20, x19, [sp, #96]
  414064:	ldr	x21, [sp, #80]
  414068:	ldp	x29, x30, [sp, #64]
  41406c:	add	sp, sp, #0x70
  414070:	ret
  414074:	stp	x29, x30, [sp, #-16]!
  414078:	mov	x2, x1
  41407c:	mov	w1, w0
  414080:	mov	w0, wzr
  414084:	mov	x29, sp
  414088:	bl	413fa8 <ferror@plt+0x113f8>
  41408c:	ldp	x29, x30, [sp], #16
  414090:	ret
  414094:	stp	x29, x30, [sp, #-16]!
  414098:	mov	x3, x2
  41409c:	mov	x2, x1
  4140a0:	mov	w1, w0
  4140a4:	mov	w0, wzr
  4140a8:	mov	x29, sp
  4140ac:	bl	414020 <ferror@plt+0x11470>
  4140b0:	ldp	x29, x30, [sp], #16
  4140b4:	ret
  4140b8:	sub	sp, sp, #0x60
  4140bc:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4140c0:	add	x9, x9, #0xb58
  4140c4:	ldp	q0, q1, [x9]
  4140c8:	ldr	q2, [x9, #32]
  4140cc:	ldr	x9, [x9, #48]
  4140d0:	mov	w8, w2
  4140d4:	stp	x20, x19, [sp, #80]
  4140d8:	mov	x19, x1
  4140dc:	mov	x20, x0
  4140e0:	mov	x0, sp
  4140e4:	mov	w2, #0x1                   	// #1
  4140e8:	mov	w1, w8
  4140ec:	stp	x29, x30, [sp, #64]
  4140f0:	add	x29, sp, #0x40
  4140f4:	stp	q0, q1, [sp]
  4140f8:	str	q2, [sp, #32]
  4140fc:	str	x9, [sp, #48]
  414100:	bl	412e84 <ferror@plt+0x102d4>
  414104:	mov	x3, sp
  414108:	mov	w0, wzr
  41410c:	mov	x1, x20
  414110:	mov	x2, x19
  414114:	bl	413dc4 <ferror@plt+0x11214>
  414118:	ldp	x20, x19, [sp, #80]
  41411c:	ldp	x29, x30, [sp, #64]
  414120:	add	sp, sp, #0x60
  414124:	ret
  414128:	stp	x29, x30, [sp, #-16]!
  41412c:	mov	w2, w1
  414130:	mov	x1, #0xffffffffffffffff    	// #-1
  414134:	mov	x29, sp
  414138:	bl	4140b8 <ferror@plt+0x11508>
  41413c:	ldp	x29, x30, [sp], #16
  414140:	ret
  414144:	stp	x29, x30, [sp, #-16]!
  414148:	mov	w1, #0x3a                  	// #58
  41414c:	mov	x29, sp
  414150:	bl	414128 <ferror@plt+0x11578>
  414154:	ldp	x29, x30, [sp], #16
  414158:	ret
  41415c:	stp	x29, x30, [sp, #-16]!
  414160:	mov	w2, #0x3a                  	// #58
  414164:	mov	x29, sp
  414168:	bl	4140b8 <ferror@plt+0x11508>
  41416c:	ldp	x29, x30, [sp], #16
  414170:	ret
  414174:	sub	sp, sp, #0x60
  414178:	stp	x20, x19, [sp, #80]
  41417c:	mov	w20, w0
  414180:	add	x8, sp, #0x8
  414184:	mov	w0, w1
  414188:	stp	x29, x30, [sp, #64]
  41418c:	add	x29, sp, #0x40
  414190:	mov	x19, x2
  414194:	bl	413ff0 <ferror@plt+0x11440>
  414198:	add	x0, sp, #0x8
  41419c:	mov	w1, #0x3a                  	// #58
  4141a0:	mov	w2, #0x1                   	// #1
  4141a4:	bl	412e84 <ferror@plt+0x102d4>
  4141a8:	add	x3, sp, #0x8
  4141ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4141b0:	mov	w0, w20
  4141b4:	mov	x1, x19
  4141b8:	bl	413dc4 <ferror@plt+0x11214>
  4141bc:	ldp	x20, x19, [sp, #80]
  4141c0:	ldp	x29, x30, [sp, #64]
  4141c4:	add	sp, sp, #0x60
  4141c8:	ret
  4141cc:	stp	x29, x30, [sp, #-16]!
  4141d0:	mov	x4, #0xffffffffffffffff    	// #-1
  4141d4:	mov	x29, sp
  4141d8:	bl	4141e4 <ferror@plt+0x11634>
  4141dc:	ldp	x29, x30, [sp], #16
  4141e0:	ret
  4141e4:	sub	sp, sp, #0x70
  4141e8:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4141ec:	add	x8, x8, #0xb58
  4141f0:	ldp	q0, q1, [x8]
  4141f4:	ldr	q2, [x8, #32]
  4141f8:	ldr	x8, [x8, #48]
  4141fc:	str	x21, [sp, #80]
  414200:	mov	w21, w0
  414204:	mov	x0, sp
  414208:	stp	x29, x30, [sp, #64]
  41420c:	stp	x20, x19, [sp, #96]
  414210:	add	x29, sp, #0x40
  414214:	mov	x19, x4
  414218:	mov	x20, x3
  41421c:	stp	q0, q1, [sp]
  414220:	str	q2, [sp, #32]
  414224:	str	x8, [sp, #48]
  414228:	bl	412edc <ferror@plt+0x1032c>
  41422c:	mov	x3, sp
  414230:	mov	w0, w21
  414234:	mov	x1, x20
  414238:	mov	x2, x19
  41423c:	bl	413dc4 <ferror@plt+0x11214>
  414240:	ldp	x20, x19, [sp, #96]
  414244:	ldr	x21, [sp, #80]
  414248:	ldp	x29, x30, [sp, #64]
  41424c:	add	sp, sp, #0x70
  414250:	ret
  414254:	stp	x29, x30, [sp, #-16]!
  414258:	mov	x3, x2
  41425c:	mov	x2, x1
  414260:	mov	x1, x0
  414264:	mov	w0, wzr
  414268:	mov	x29, sp
  41426c:	bl	4141cc <ferror@plt+0x1161c>
  414270:	ldp	x29, x30, [sp], #16
  414274:	ret
  414278:	stp	x29, x30, [sp, #-16]!
  41427c:	mov	x4, x3
  414280:	mov	x3, x2
  414284:	mov	x2, x1
  414288:	mov	x1, x0
  41428c:	mov	w0, wzr
  414290:	mov	x29, sp
  414294:	bl	4141e4 <ferror@plt+0x11634>
  414298:	ldp	x29, x30, [sp], #16
  41429c:	ret
  4142a0:	stp	x29, x30, [sp, #-16]!
  4142a4:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4142a8:	add	x3, x3, #0x3d0
  4142ac:	mov	x29, sp
  4142b0:	bl	413dc4 <ferror@plt+0x11214>
  4142b4:	ldp	x29, x30, [sp], #16
  4142b8:	ret
  4142bc:	stp	x29, x30, [sp, #-16]!
  4142c0:	mov	x2, x1
  4142c4:	mov	x1, x0
  4142c8:	mov	w0, wzr
  4142cc:	mov	x29, sp
  4142d0:	bl	4142a0 <ferror@plt+0x116f0>
  4142d4:	ldp	x29, x30, [sp], #16
  4142d8:	ret
  4142dc:	stp	x29, x30, [sp, #-16]!
  4142e0:	mov	x2, #0xffffffffffffffff    	// #-1
  4142e4:	mov	x29, sp
  4142e8:	bl	4142a0 <ferror@plt+0x116f0>
  4142ec:	ldp	x29, x30, [sp], #16
  4142f0:	ret
  4142f4:	stp	x29, x30, [sp, #-16]!
  4142f8:	mov	x1, x0
  4142fc:	mov	w0, wzr
  414300:	mov	x29, sp
  414304:	bl	4142dc <ferror@plt+0x1172c>
  414308:	ldp	x29, x30, [sp], #16
  41430c:	ret
  414310:	stp	x29, x30, [sp, #-48]!
  414314:	str	x21, [sp, #16]
  414318:	stp	x20, x19, [sp, #32]
  41431c:	mov	x29, sp
  414320:	mov	w19, w1
  414324:	mov	x20, x0
  414328:	bl	416abc <_obstack_memory_used@@Base+0x2e8>
  41432c:	mov	w1, #0x55                  	// #85
  414330:	mov	w2, #0x54                  	// #84
  414334:	mov	w3, #0x46                  	// #70
  414338:	mov	w4, #0x2d                  	// #45
  41433c:	mov	w5, #0x38                  	// #56
  414340:	mov	w6, wzr
  414344:	mov	w7, wzr
  414348:	mov	x21, x0
  41434c:	bl	4143dc <ferror@plt+0x1182c>
  414350:	cbz	w0, 41436c <ferror@plt+0x117bc>
  414354:	ldrb	w8, [x20]
  414358:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x382c>
  41435c:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x382c>
  414360:	add	x9, x9, #0x9d0
  414364:	add	x10, x10, #0x9cc
  414368:	b	4143a8 <ferror@plt+0x117f8>
  41436c:	mov	w1, #0x47                  	// #71
  414370:	mov	w2, #0x42                  	// #66
  414374:	mov	w3, #0x31                  	// #49
  414378:	mov	w4, #0x38                  	// #56
  41437c:	mov	w5, #0x30                  	// #48
  414380:	mov	w6, #0x33                  	// #51
  414384:	mov	w7, #0x30                  	// #48
  414388:	mov	x0, x21
  41438c:	bl	4143dc <ferror@plt+0x1182c>
  414390:	cbz	w0, 4143c0 <ferror@plt+0x11810>
  414394:	ldrb	w8, [x20]
  414398:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x382c>
  41439c:	adrp	x10, 41a000 <_obstack_memory_used@@Base+0x382c>
  4143a0:	add	x9, x9, #0x9d8
  4143a4:	add	x10, x10, #0x9d4
  4143a8:	cmp	w8, #0x60
  4143ac:	csel	x0, x10, x9, eq  // eq = none
  4143b0:	ldp	x20, x19, [sp, #32]
  4143b4:	ldr	x21, [sp, #16]
  4143b8:	ldp	x29, x30, [sp], #48
  4143bc:	ret
  4143c0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  4143c4:	adrp	x9, 419000 <_obstack_memory_used@@Base+0x282c>
  4143c8:	add	x8, x8, #0xf82
  4143cc:	add	x9, x9, #0xf6a
  4143d0:	cmp	w19, #0x9
  4143d4:	csel	x0, x9, x8, eq  // eq = none
  4143d8:	b	4143b0 <ferror@plt+0x11800>
  4143dc:	stp	x29, x30, [sp, #-80]!
  4143e0:	stp	x26, x25, [sp, #16]
  4143e4:	mov	x25, x0
  4143e8:	and	w0, w1, #0xff
  4143ec:	stp	x24, x23, [sp, #32]
  4143f0:	stp	x22, x21, [sp, #48]
  4143f4:	stp	x20, x19, [sp, #64]
  4143f8:	mov	x29, sp
  4143fc:	mov	w19, w7
  414400:	mov	w20, w6
  414404:	mov	w21, w5
  414408:	mov	w22, w4
  41440c:	mov	w23, w3
  414410:	mov	w24, w2
  414414:	mov	w26, w1
  414418:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  41441c:	ldrb	w8, [x25]
  414420:	tbz	w0, #0, 414438 <ferror@plt+0x11888>
  414424:	and	w8, w8, #0xffffffdf
  414428:	cmp	w8, w26, uxtb
  41442c:	b.eq	414440 <ferror@plt+0x11890>  // b.none
  414430:	mov	w0, wzr
  414434:	b	414470 <ferror@plt+0x118c0>
  414438:	cmp	w8, w26, uxtb
  41443c:	b.ne	414430 <ferror@plt+0x11880>  // b.any
  414440:	tst	w26, #0xff
  414444:	b.eq	41446c <ferror@plt+0x118bc>  // b.none
  414448:	mov	x0, x25
  41444c:	mov	w1, w24
  414450:	mov	w2, w23
  414454:	mov	w3, w22
  414458:	mov	w4, w21
  41445c:	mov	w5, w20
  414460:	mov	w6, w19
  414464:	bl	414488 <ferror@plt+0x118d8>
  414468:	b	414470 <ferror@plt+0x118c0>
  41446c:	mov	w0, #0x1                   	// #1
  414470:	ldp	x20, x19, [sp, #64]
  414474:	ldp	x22, x21, [sp, #48]
  414478:	ldp	x24, x23, [sp, #32]
  41447c:	ldp	x26, x25, [sp, #16]
  414480:	ldp	x29, x30, [sp], #80
  414484:	ret
  414488:	stp	x29, x30, [sp, #-80]!
  41448c:	stp	x24, x23, [sp, #32]
  414490:	mov	x24, x0
  414494:	and	w0, w1, #0xff
  414498:	str	x25, [sp, #16]
  41449c:	stp	x22, x21, [sp, #48]
  4144a0:	stp	x20, x19, [sp, #64]
  4144a4:	mov	x29, sp
  4144a8:	mov	w19, w6
  4144ac:	mov	w20, w5
  4144b0:	mov	w21, w4
  4144b4:	mov	w22, w3
  4144b8:	mov	w23, w2
  4144bc:	mov	w25, w1
  4144c0:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  4144c4:	ldrb	w8, [x24, #1]
  4144c8:	tbz	w0, #0, 4144e0 <ferror@plt+0x11930>
  4144cc:	and	w8, w8, #0xffffffdf
  4144d0:	cmp	w8, w25, uxtb
  4144d4:	b.eq	4144e8 <ferror@plt+0x11938>  // b.none
  4144d8:	mov	w0, wzr
  4144dc:	b	414514 <ferror@plt+0x11964>
  4144e0:	cmp	w8, w25, uxtb
  4144e4:	b.ne	4144d8 <ferror@plt+0x11928>  // b.any
  4144e8:	tst	w25, #0xff
  4144ec:	b.eq	414510 <ferror@plt+0x11960>  // b.none
  4144f0:	mov	x0, x24
  4144f4:	mov	w1, w23
  4144f8:	mov	w2, w22
  4144fc:	mov	w3, w21
  414500:	mov	w4, w20
  414504:	mov	w5, w19
  414508:	bl	41452c <ferror@plt+0x1197c>
  41450c:	b	414514 <ferror@plt+0x11964>
  414510:	mov	w0, #0x1                   	// #1
  414514:	ldp	x20, x19, [sp, #64]
  414518:	ldp	x22, x21, [sp, #48]
  41451c:	ldp	x24, x23, [sp, #32]
  414520:	ldr	x25, [sp, #16]
  414524:	ldp	x29, x30, [sp], #80
  414528:	ret
  41452c:	stp	x29, x30, [sp, #-64]!
  414530:	stp	x24, x23, [sp, #16]
  414534:	mov	x23, x0
  414538:	and	w0, w1, #0xff
  41453c:	stp	x22, x21, [sp, #32]
  414540:	stp	x20, x19, [sp, #48]
  414544:	mov	x29, sp
  414548:	mov	w19, w5
  41454c:	mov	w20, w4
  414550:	mov	w21, w3
  414554:	mov	w22, w2
  414558:	mov	w24, w1
  41455c:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  414560:	ldrb	w8, [x23, #2]
  414564:	tbz	w0, #0, 41457c <ferror@plt+0x119cc>
  414568:	and	w8, w8, #0xffffffdf
  41456c:	cmp	w8, w24, uxtb
  414570:	b.eq	414584 <ferror@plt+0x119d4>  // b.none
  414574:	mov	w0, wzr
  414578:	b	4145ac <ferror@plt+0x119fc>
  41457c:	cmp	w8, w24, uxtb
  414580:	b.ne	414574 <ferror@plt+0x119c4>  // b.any
  414584:	tst	w24, #0xff
  414588:	b.eq	4145a8 <ferror@plt+0x119f8>  // b.none
  41458c:	mov	x0, x23
  414590:	mov	w1, w22
  414594:	mov	w2, w21
  414598:	mov	w3, w20
  41459c:	mov	w4, w19
  4145a0:	bl	4145c0 <ferror@plt+0x11a10>
  4145a4:	b	4145ac <ferror@plt+0x119fc>
  4145a8:	mov	w0, #0x1                   	// #1
  4145ac:	ldp	x20, x19, [sp, #48]
  4145b0:	ldp	x22, x21, [sp, #32]
  4145b4:	ldp	x24, x23, [sp, #16]
  4145b8:	ldp	x29, x30, [sp], #64
  4145bc:	ret
  4145c0:	stp	x29, x30, [sp, #-64]!
  4145c4:	stp	x22, x21, [sp, #32]
  4145c8:	mov	x22, x0
  4145cc:	and	w0, w1, #0xff
  4145d0:	str	x23, [sp, #16]
  4145d4:	stp	x20, x19, [sp, #48]
  4145d8:	mov	x29, sp
  4145dc:	mov	w19, w4
  4145e0:	mov	w20, w3
  4145e4:	mov	w21, w2
  4145e8:	mov	w23, w1
  4145ec:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  4145f0:	ldrb	w8, [x22, #3]
  4145f4:	tbz	w0, #0, 41460c <ferror@plt+0x11a5c>
  4145f8:	and	w8, w8, #0xffffffdf
  4145fc:	cmp	w8, w23, uxtb
  414600:	b.eq	414614 <ferror@plt+0x11a64>  // b.none
  414604:	mov	w0, wzr
  414608:	b	414638 <ferror@plt+0x11a88>
  41460c:	cmp	w8, w23, uxtb
  414610:	b.ne	414604 <ferror@plt+0x11a54>  // b.any
  414614:	tst	w23, #0xff
  414618:	b.eq	414634 <ferror@plt+0x11a84>  // b.none
  41461c:	mov	x0, x22
  414620:	mov	w1, w21
  414624:	mov	w2, w20
  414628:	mov	w3, w19
  41462c:	bl	41464c <ferror@plt+0x11a9c>
  414630:	b	414638 <ferror@plt+0x11a88>
  414634:	mov	w0, #0x1                   	// #1
  414638:	ldp	x20, x19, [sp, #48]
  41463c:	ldp	x22, x21, [sp, #32]
  414640:	ldr	x23, [sp, #16]
  414644:	ldp	x29, x30, [sp], #64
  414648:	ret
  41464c:	stp	x29, x30, [sp, #-48]!
  414650:	stp	x22, x21, [sp, #16]
  414654:	mov	x21, x0
  414658:	and	w0, w1, #0xff
  41465c:	stp	x20, x19, [sp, #32]
  414660:	mov	x29, sp
  414664:	mov	w19, w3
  414668:	mov	w20, w2
  41466c:	mov	w22, w1
  414670:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  414674:	ldrb	w8, [x21, #4]
  414678:	tbz	w0, #0, 414690 <ferror@plt+0x11ae0>
  41467c:	and	w8, w8, #0xffffffdf
  414680:	cmp	w8, w22, uxtb
  414684:	b.eq	414698 <ferror@plt+0x11ae8>  // b.none
  414688:	mov	w0, wzr
  41468c:	b	4146b8 <ferror@plt+0x11b08>
  414690:	cmp	w8, w22, uxtb
  414694:	b.ne	414688 <ferror@plt+0x11ad8>  // b.any
  414698:	tst	w22, #0xff
  41469c:	b.eq	4146b4 <ferror@plt+0x11b04>  // b.none
  4146a0:	mov	x0, x21
  4146a4:	mov	w1, w20
  4146a8:	mov	w2, w19
  4146ac:	bl	4146c8 <ferror@plt+0x11b18>
  4146b0:	b	4146b8 <ferror@plt+0x11b08>
  4146b4:	mov	w0, #0x1                   	// #1
  4146b8:	ldp	x20, x19, [sp, #32]
  4146bc:	ldp	x22, x21, [sp, #16]
  4146c0:	ldp	x29, x30, [sp], #48
  4146c4:	ret
  4146c8:	stp	x29, x30, [sp, #-48]!
  4146cc:	stp	x20, x19, [sp, #32]
  4146d0:	mov	x20, x0
  4146d4:	and	w0, w1, #0xff
  4146d8:	str	x21, [sp, #16]
  4146dc:	mov	x29, sp
  4146e0:	mov	w19, w2
  4146e4:	mov	w21, w1
  4146e8:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  4146ec:	ldrb	w8, [x20, #5]
  4146f0:	tbz	w0, #0, 414708 <ferror@plt+0x11b58>
  4146f4:	and	w8, w8, #0xffffffdf
  4146f8:	cmp	w8, w21, uxtb
  4146fc:	b.eq	414710 <ferror@plt+0x11b60>  // b.none
  414700:	mov	w0, wzr
  414704:	b	41472c <ferror@plt+0x11b7c>
  414708:	cmp	w8, w21, uxtb
  41470c:	b.ne	414700 <ferror@plt+0x11b50>  // b.any
  414710:	tst	w21, #0xff
  414714:	b.eq	414728 <ferror@plt+0x11b78>  // b.none
  414718:	mov	x0, x20
  41471c:	mov	w1, w19
  414720:	bl	41473c <ferror@plt+0x11b8c>
  414724:	b	41472c <ferror@plt+0x11b7c>
  414728:	mov	w0, #0x1                   	// #1
  41472c:	ldp	x20, x19, [sp, #32]
  414730:	ldr	x21, [sp, #16]
  414734:	ldp	x29, x30, [sp], #48
  414738:	ret
  41473c:	stp	x29, x30, [sp, #-32]!
  414740:	stp	x20, x19, [sp, #16]
  414744:	mov	x19, x0
  414748:	and	w0, w1, #0xff
  41474c:	mov	x29, sp
  414750:	mov	w20, w1
  414754:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  414758:	ldrb	w8, [x19, #6]
  41475c:	tbz	w0, #0, 414774 <ferror@plt+0x11bc4>
  414760:	and	w8, w8, #0xffffffdf
  414764:	cmp	w8, w20, uxtb
  414768:	b.eq	41477c <ferror@plt+0x11bcc>  // b.none
  41476c:	mov	w0, wzr
  414770:	b	414794 <ferror@plt+0x11be4>
  414774:	cmp	w8, w20, uxtb
  414778:	b.ne	41476c <ferror@plt+0x11bbc>  // b.any
  41477c:	tst	w20, #0xff
  414780:	b.eq	414790 <ferror@plt+0x11be0>  // b.none
  414784:	mov	x0, x19
  414788:	bl	4147a0 <ferror@plt+0x11bf0>
  41478c:	b	414794 <ferror@plt+0x11be4>
  414790:	mov	w0, #0x1                   	// #1
  414794:	ldp	x20, x19, [sp, #16]
  414798:	ldp	x29, x30, [sp], #32
  41479c:	ret
  4147a0:	stp	x29, x30, [sp, #-32]!
  4147a4:	str	x19, [sp, #16]
  4147a8:	mov	x19, x0
  4147ac:	mov	w0, wzr
  4147b0:	mov	x29, sp
  4147b4:	bl	416974 <_obstack_memory_used@@Base+0x1a0>
  4147b8:	ldrb	w8, [x19, #7]
  4147bc:	tbz	w0, #0, 4147d0 <ferror@plt+0x11c20>
  4147c0:	tst	w8, #0xffffffdf
  4147c4:	b.eq	4147d4 <ferror@plt+0x11c24>  // b.none
  4147c8:	mov	w0, wzr
  4147cc:	b	4147d8 <ferror@plt+0x11c28>
  4147d0:	cbnz	w8, 4147c8 <ferror@plt+0x11c18>
  4147d4:	mov	w0, #0x1                   	// #1
  4147d8:	ldr	x19, [sp, #16]
  4147dc:	ldp	x29, x30, [sp], #32
  4147e0:	ret
  4147e4:	ldr	x0, [x0]
  4147e8:	ret
  4147ec:	sub	sp, sp, #0x30
  4147f0:	str	x6, [sp, #16]
  4147f4:	and	w8, w5, #0x1
  4147f8:	and	w9, w4, #0x1
  4147fc:	and	w7, w3, #0x1
  414800:	mov	w3, #0x1                   	// #1
  414804:	mov	w4, #0x1                   	// #1
  414808:	mov	x5, xzr
  41480c:	mov	x6, xzr
  414810:	stp	x29, x30, [sp, #32]
  414814:	add	x29, sp, #0x20
  414818:	strb	w8, [sp, #8]
  41481c:	strb	w9, [sp]
  414820:	bl	414830 <ferror@plt+0x11c80>
  414824:	ldp	x29, x30, [sp, #32]
  414828:	add	sp, sp, #0x30
  41482c:	ret
  414830:	stp	x29, x30, [sp, #-96]!
  414834:	stp	x28, x27, [sp, #16]
  414838:	stp	x26, x25, [sp, #32]
  41483c:	stp	x24, x23, [sp, #48]
  414840:	stp	x22, x21, [sp, #64]
  414844:	stp	x20, x19, [sp, #80]
  414848:	mov	x29, sp
  41484c:	sub	sp, sp, #0x250
  414850:	mov	w22, w7
  414854:	mov	x26, x6
  414858:	mov	x27, x5
  41485c:	mov	w20, w4
  414860:	mov	w19, w3
  414864:	mov	x23, x2
  414868:	mov	x24, x1
  41486c:	str	x0, [sp, #8]
  414870:	tbz	w4, #0, 414880 <ferror@plt+0x11cd0>
  414874:	sub	x0, x29, #0x10
  414878:	bl	414ef8 <ferror@plt+0x12348>
  41487c:	tbnz	w0, #31, 4148b0 <ferror@plt+0x11d00>
  414880:	ldrb	w28, [x29, #96]
  414884:	tbz	w19, #0, 4148d0 <ferror@plt+0x11d20>
  414888:	sub	x0, x29, #0x18
  41488c:	bl	414ef8 <ferror@plt+0x12348>
  414890:	tbz	w0, #31, 4148d0 <ferror@plt+0x11d20>
  414894:	bl	402b30 <__errno_location@plt>
  414898:	ldr	w1, [x0]
  41489c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4148a0:	add	x2, x2, #0x9db
  4148a4:	mov	w0, #0x1                   	// #1
  4148a8:	bl	402590 <error@plt>
  4148ac:	b	4148d0 <ferror@plt+0x11d20>
  4148b0:	bl	402b30 <__errno_location@plt>
  4148b4:	ldr	w1, [x0]
  4148b8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4148bc:	add	x2, x2, #0x9db
  4148c0:	mov	w0, #0x1                   	// #1
  4148c4:	bl	402590 <error@plt>
  4148c8:	ldrb	w28, [x29, #96]
  4148cc:	tbnz	w19, #0, 414888 <ferror@plt+0x11cd8>
  4148d0:	tbz	w28, #0, 4148e8 <ferror@plt+0x11d38>
  4148d4:	sub	x2, x29, #0x98
  4148d8:	mov	w0, #0x2                   	// #2
  4148dc:	mov	x1, xzr
  4148e0:	bl	4025a0 <sigprocmask@plt>
  4148e4:	bl	410dcc <ferror@plt+0xe21c>
  4148e8:	sub	x0, x29, #0xe8
  4148ec:	bl	402910 <posix_spawn_file_actions_init@plt>
  4148f0:	cbz	w0, 414904 <ferror@plt+0x11d54>
  4148f4:	mov	w25, w0
  4148f8:	mov	w21, wzr
  4148fc:	mov	w26, wzr
  414900:	b	414a20 <ferror@plt+0x11e70>
  414904:	tbz	w19, #0, 41491c <ferror@plt+0x11d6c>
  414908:	ldur	w1, [x29, #-24]
  41490c:	sub	x0, x29, #0xe8
  414910:	mov	w2, wzr
  414914:	bl	4026a0 <posix_spawn_file_actions_adddup2@plt>
  414918:	cbnz	w0, 414a14 <ferror@plt+0x11e64>
  41491c:	tbz	w20, #0, 414944 <ferror@plt+0x11d94>
  414920:	ldur	w1, [x29, #-12]
  414924:	sub	x0, x29, #0xe8
  414928:	mov	w2, #0x1                   	// #1
  41492c:	mov	w21, #0x1                   	// #1
  414930:	bl	4026a0 <posix_spawn_file_actions_adddup2@plt>
  414934:	cbz	w0, 414944 <ferror@plt+0x11d94>
  414938:	mov	w25, w0
  41493c:	mov	w26, wzr
  414940:	b	414a20 <ferror@plt+0x11e70>
  414944:	tbz	w19, #0, 414958 <ferror@plt+0x11da8>
  414948:	ldur	w1, [x29, #-24]
  41494c:	sub	x0, x29, #0xe8
  414950:	bl	402840 <posix_spawn_file_actions_addclose@plt>
  414954:	cbnz	w0, 414a14 <ferror@plt+0x11e64>
  414958:	tbz	w20, #0, 41496c <ferror@plt+0x11dbc>
  41495c:	ldur	w1, [x29, #-12]
  414960:	sub	x0, x29, #0xe8
  414964:	bl	402840 <posix_spawn_file_actions_addclose@plt>
  414968:	cbnz	w0, 414a14 <ferror@plt+0x11e64>
  41496c:	tbz	w19, #0, 414980 <ferror@plt+0x11dd0>
  414970:	ldur	w1, [x29, #-20]
  414974:	sub	x0, x29, #0xe8
  414978:	bl	402840 <posix_spawn_file_actions_addclose@plt>
  41497c:	cbnz	w0, 414a14 <ferror@plt+0x11e64>
  414980:	tbz	w20, #0, 414994 <ferror@plt+0x11de4>
  414984:	ldur	w1, [x29, #-16]
  414988:	sub	x0, x29, #0xe8
  41498c:	bl	402840 <posix_spawn_file_actions_addclose@plt>
  414990:	cbnz	w0, 414a14 <ferror@plt+0x11e64>
  414994:	tbz	w22, #0, 4149b8 <ferror@plt+0x11e08>
  414998:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  41499c:	add	x2, x2, #0xfd7
  4149a0:	sub	x0, x29, #0xe8
  4149a4:	mov	w1, #0x2                   	// #2
  4149a8:	mov	w3, #0x2                   	// #2
  4149ac:	mov	w4, wzr
  4149b0:	bl	402650 <posix_spawn_file_actions_addopen@plt>
  4149b4:	cbnz	w0, 414a14 <ferror@plt+0x11e64>
  4149b8:	cbz	x27, 4149dc <ferror@plt+0x11e2c>
  4149bc:	tbnz	w19, #0, 4149dc <ferror@plt+0x11e2c>
  4149c0:	sub	x0, x29, #0xe8
  4149c4:	mov	w1, wzr
  4149c8:	mov	x2, x27
  4149cc:	mov	w3, wzr
  4149d0:	mov	w4, wzr
  4149d4:	bl	402650 <posix_spawn_file_actions_addopen@plt>
  4149d8:	cbnz	w0, 414a14 <ferror@plt+0x11e64>
  4149dc:	cbz	x26, 414a04 <ferror@plt+0x11e54>
  4149e0:	tbnz	w20, #0, 414a04 <ferror@plt+0x11e54>
  4149e4:	sub	x0, x29, #0xe8
  4149e8:	mov	w1, #0x1                   	// #1
  4149ec:	mov	w3, #0x1                   	// #1
  4149f0:	mov	x2, x26
  4149f4:	mov	w4, wzr
  4149f8:	mov	w21, #0x1                   	// #1
  4149fc:	bl	402650 <posix_spawn_file_actions_addopen@plt>
  414a00:	cbnz	w0, 414938 <ferror@plt+0x11d88>
  414a04:	tbz	w28, #0, 414ad8 <ferror@plt+0x11f28>
  414a08:	add	x0, sp, #0x18
  414a0c:	bl	402a60 <posix_spawnattr_init@plt>
  414a10:	cbz	w0, 414b40 <ferror@plt+0x11f90>
  414a14:	mov	w25, w0
  414a18:	mov	w26, wzr
  414a1c:	mov	w21, #0x1                   	// #1
  414a20:	cbnz	w21, 414a38 <ferror@plt+0x11e88>
  414a24:	cbnz	w26, 414a44 <ferror@plt+0x11e94>
  414a28:	tbnz	w28, #0, 414a50 <ferror@plt+0x11ea0>
  414a2c:	ldrb	w8, [x29, #104]
  414a30:	tbnz	w22, #0, 414a5c <ferror@plt+0x11eac>
  414a34:	b	414aa4 <ferror@plt+0x11ef4>
  414a38:	sub	x0, x29, #0xe8
  414a3c:	bl	402800 <posix_spawn_file_actions_destroy@plt>
  414a40:	cbz	w26, 414a28 <ferror@plt+0x11e78>
  414a44:	add	x0, sp, #0x18
  414a48:	bl	402750 <posix_spawnattr_destroy@plt>
  414a4c:	tbz	w28, #0, 414a2c <ferror@plt+0x11e7c>
  414a50:	bl	410e6c <ferror@plt+0xe2bc>
  414a54:	ldrb	w8, [x29, #104]
  414a58:	tbz	w22, #0, 414aa4 <ferror@plt+0x11ef4>
  414a5c:	tbnz	w8, #0, 414aa4 <ferror@plt+0x11ef4>
  414a60:	tbnz	w20, #0, 414ac0 <ferror@plt+0x11f10>
  414a64:	tbz	w19, #0, 414a78 <ferror@plt+0x11ec8>
  414a68:	ldur	w0, [x29, #-24]
  414a6c:	bl	414c94 <ferror@plt+0x120e4>
  414a70:	ldur	w0, [x29, #-20]
  414a74:	bl	414c94 <ferror@plt+0x120e4>
  414a78:	bl	402b30 <__errno_location@plt>
  414a7c:	str	w25, [x0]
  414a80:	mov	w0, #0xffffffff            	// #-1
  414a84:	add	sp, sp, #0x250
  414a88:	ldp	x20, x19, [sp, #80]
  414a8c:	ldp	x22, x21, [sp, #64]
  414a90:	ldp	x24, x23, [sp, #48]
  414a94:	ldp	x26, x25, [sp, #32]
  414a98:	ldp	x28, x27, [sp, #16]
  414a9c:	ldp	x29, x30, [sp], #96
  414aa0:	ret
  414aa4:	ldr	x3, [sp, #8]
  414aa8:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  414aac:	and	w0, w8, #0x1
  414ab0:	add	x2, x2, #0xfe1
  414ab4:	mov	w1, w25
  414ab8:	bl	402590 <error@plt>
  414abc:	tbz	w20, #0, 414a64 <ferror@plt+0x11eb4>
  414ac0:	ldur	w0, [x29, #-16]
  414ac4:	bl	414c94 <ferror@plt+0x120e4>
  414ac8:	ldur	w0, [x29, #-12]
  414acc:	bl	414c94 <ferror@plt+0x120e4>
  414ad0:	tbnz	w19, #0, 414a68 <ferror@plt+0x11eb8>
  414ad4:	b	414a78 <ferror@plt+0x11ec8>
  414ad8:	mov	w26, wzr
  414adc:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  414ae0:	ldr	x5, [x8, #1104]
  414ae4:	cmp	w26, #0x0
  414ae8:	add	x8, sp, #0x18
  414aec:	csel	x3, x8, xzr, ne  // ne = any
  414af0:	add	x0, sp, #0x14
  414af4:	sub	x2, x29, #0xe8
  414af8:	mov	x1, x24
  414afc:	mov	x4, x23
  414b00:	bl	4029d0 <posix_spawnp@plt>
  414b04:	cbz	w0, 414b10 <ferror@plt+0x11f60>
  414b08:	mov	w25, w0
  414b0c:	b	414a1c <ferror@plt+0x11e6c>
  414b10:	sub	x0, x29, #0xe8
  414b14:	bl	402800 <posix_spawn_file_actions_destroy@plt>
  414b18:	cbnz	w26, 414b60 <ferror@plt+0x11fb0>
  414b1c:	tbnz	w28, #0, 414b6c <ferror@plt+0x11fbc>
  414b20:	ldr	x21, [x29, #112]
  414b24:	tbnz	w19, #0, 414b80 <ferror@plt+0x11fd0>
  414b28:	tbnz	w20, #0, 414b8c <ferror@plt+0x11fdc>
  414b2c:	tbz	w19, #0, 414b38 <ferror@plt+0x11f88>
  414b30:	ldur	w8, [x29, #-20]
  414b34:	str	w8, [x21, #4]
  414b38:	ldr	w0, [sp, #20]
  414b3c:	b	414a84 <ferror@plt+0x11ed4>
  414b40:	add	x0, sp, #0x18
  414b44:	sub	x1, x29, #0x98
  414b48:	bl	402900 <posix_spawnattr_setsigmask@plt>
  414b4c:	cbz	w0, 414ba4 <ferror@plt+0x11ff4>
  414b50:	mov	w25, w0
  414b54:	mov	w21, #0x1                   	// #1
  414b58:	mov	w26, #0x1                   	// #1
  414b5c:	b	414a20 <ferror@plt+0x11e70>
  414b60:	add	x0, sp, #0x18
  414b64:	bl	402750 <posix_spawnattr_destroy@plt>
  414b68:	tbz	w28, #0, 414b20 <ferror@plt+0x11f70>
  414b6c:	ldr	w0, [sp, #20]
  414b70:	bl	4153dc <ferror@plt+0x1282c>
  414b74:	bl	410e6c <ferror@plt+0xe2bc>
  414b78:	ldr	x21, [x29, #112]
  414b7c:	tbz	w19, #0, 414b28 <ferror@plt+0x11f78>
  414b80:	ldur	w0, [x29, #-24]
  414b84:	bl	414c94 <ferror@plt+0x120e4>
  414b88:	tbz	w20, #0, 414b2c <ferror@plt+0x11f7c>
  414b8c:	ldur	w0, [x29, #-12]
  414b90:	bl	414c94 <ferror@plt+0x120e4>
  414b94:	ldur	w8, [x29, #-16]
  414b98:	str	w8, [x21]
  414b9c:	tbnz	w19, #0, 414b30 <ferror@plt+0x11f80>
  414ba0:	b	414b38 <ferror@plt+0x11f88>
  414ba4:	add	x0, sp, #0x18
  414ba8:	mov	w1, #0x8                   	// #8
  414bac:	bl	4028c0 <posix_spawnattr_setflags@plt>
  414bb0:	mov	w25, w0
  414bb4:	mov	w26, #0x1                   	// #1
  414bb8:	mov	w21, #0x1                   	// #1
  414bbc:	cbnz	w0, 414a20 <ferror@plt+0x11e70>
  414bc0:	b	414adc <ferror@plt+0x11f2c>
  414bc4:	sub	sp, sp, #0x40
  414bc8:	stp	x29, x30, [sp, #32]
  414bcc:	add	x29, sp, #0x20
  414bd0:	mov	x8, x3
  414bd4:	str	x19, [sp, #48]
  414bd8:	mov	x19, x7
  414bdc:	add	x9, x29, #0x18
  414be0:	and	w10, w6, #0x1
  414be4:	and	w11, w5, #0x1
  414be8:	and	w7, w4, #0x1
  414bec:	mov	w4, #0x1                   	// #1
  414bf0:	mov	w3, wzr
  414bf4:	mov	x5, x8
  414bf8:	mov	x6, xzr
  414bfc:	str	x9, [sp, #16]
  414c00:	strb	w10, [sp, #8]
  414c04:	strb	w11, [sp]
  414c08:	bl	414830 <ferror@plt+0x11c80>
  414c0c:	cmn	w0, #0x1
  414c10:	b.eq	414c1c <ferror@plt+0x1206c>  // b.none
  414c14:	ldr	w8, [x29, #24]
  414c18:	str	w8, [x19]
  414c1c:	ldr	x19, [sp, #48]
  414c20:	ldp	x29, x30, [sp, #32]
  414c24:	add	sp, sp, #0x40
  414c28:	ret
  414c2c:	sub	sp, sp, #0x40
  414c30:	stp	x29, x30, [sp, #32]
  414c34:	add	x29, sp, #0x20
  414c38:	mov	x8, x3
  414c3c:	str	x19, [sp, #48]
  414c40:	mov	x19, x7
  414c44:	add	x9, x29, #0x18
  414c48:	and	w10, w6, #0x1
  414c4c:	and	w11, w5, #0x1
  414c50:	and	w7, w4, #0x1
  414c54:	mov	w3, #0x1                   	// #1
  414c58:	mov	w4, wzr
  414c5c:	mov	x5, xzr
  414c60:	mov	x6, x8
  414c64:	str	x9, [sp, #16]
  414c68:	strb	w10, [sp, #8]
  414c6c:	strb	w11, [sp]
  414c70:	bl	414830 <ferror@plt+0x11c80>
  414c74:	cmn	w0, #0x1
  414c78:	b.eq	414c84 <ferror@plt+0x120d4>  // b.none
  414c7c:	ldr	w8, [x29, #28]
  414c80:	str	w8, [x19]
  414c84:	ldr	x19, [sp, #48]
  414c88:	ldp	x29, x30, [sp, #32]
  414c8c:	add	sp, sp, #0x40
  414c90:	ret
  414c94:	stp	x29, x30, [sp, #-32]!
  414c98:	str	x19, [sp, #16]
  414c9c:	mov	w19, w0
  414ca0:	mov	x29, sp
  414ca4:	mov	w0, w19
  414ca8:	bl	402860 <close@plt>
  414cac:	tbz	w0, #31, 414cc0 <ferror@plt+0x12110>
  414cb0:	bl	402b30 <__errno_location@plt>
  414cb4:	ldr	w8, [x0]
  414cb8:	cmp	w8, #0x4
  414cbc:	b.eq	414ca4 <ferror@plt+0x120f4>  // b.none
  414cc0:	ldr	x19, [sp, #16]
  414cc4:	ldp	x29, x30, [sp], #32
  414cc8:	ret
  414ccc:	stp	x29, x30, [sp, #-16]!
  414cd0:	mov	x29, sp
  414cd4:	bl	402a80 <mkstemp@plt>
  414cd8:	bl	414ea0 <ferror@plt+0x122f0>
  414cdc:	ldp	x29, x30, [sp], #16
  414ce0:	ret
  414ce4:	stp	x29, x30, [sp, #-80]!
  414ce8:	stp	x24, x23, [sp, #32]
  414cec:	stp	x22, x21, [sp, #48]
  414cf0:	stp	x20, x19, [sp, #64]
  414cf4:	mov	w24, w4
  414cf8:	mov	x23, x2
  414cfc:	mov	x22, x1
  414d00:	mov	x20, x0
  414d04:	str	x25, [sp, #16]
  414d08:	mov	x29, sp
  414d0c:	cbz	x3, 414d3c <ferror@plt+0x1218c>
  414d10:	ldrb	w8, [x3]
  414d14:	mov	x19, x3
  414d18:	cbz	w8, 414d3c <ferror@plt+0x1218c>
  414d1c:	mov	x0, x19
  414d20:	bl	402540 <strlen@plt>
  414d24:	cmp	x0, #0x5
  414d28:	mov	w8, #0x5                   	// #5
  414d2c:	csel	x21, x0, x8, cc  // cc = lo, ul, last
  414d30:	tbnz	w24, #0, 414d4c <ferror@plt+0x1219c>
  414d34:	mov	x24, x23
  414d38:	b	414d80 <ferror@plt+0x121d0>
  414d3c:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x282c>
  414d40:	add	x19, x19, #0xc3c
  414d44:	mov	w21, #0x4                   	// #4
  414d48:	tbz	w24, #0, 414d34 <ferror@plt+0x12184>
  414d4c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x282c>
  414d50:	add	x0, x0, #0xf2d
  414d54:	bl	4025c0 <secure_getenv@plt>
  414d58:	cbz	x0, 414d68 <ferror@plt+0x121b8>
  414d5c:	mov	x24, x0
  414d60:	bl	414e48 <ferror@plt+0x12298>
  414d64:	tbnz	w0, #0, 414d80 <ferror@plt+0x121d0>
  414d68:	cbz	x23, 414d7c <ferror@plt+0x121cc>
  414d6c:	mov	x0, x23
  414d70:	bl	414e48 <ferror@plt+0x12298>
  414d74:	mov	x24, x23
  414d78:	tbnz	w0, #0, 414d80 <ferror@plt+0x121d0>
  414d7c:	mov	x24, xzr
  414d80:	cbnz	x24, 414d98 <ferror@plt+0x121e8>
  414d84:	adrp	x24, 41a000 <_obstack_memory_used@@Base+0x382c>
  414d88:	add	x24, x24, #0x9ee
  414d8c:	mov	x0, x24
  414d90:	bl	414e48 <ferror@plt+0x12298>
  414d94:	tbz	w0, #0, 414e20 <ferror@plt+0x12270>
  414d98:	mov	x0, x24
  414d9c:	bl	402540 <strlen@plt>
  414da0:	mov	x23, x0
  414da4:	cbz	x0, 414dbc <ferror@plt+0x1220c>
  414da8:	add	x8, x23, x24
  414dac:	ldurb	w8, [x8, #-1]
  414db0:	cmp	w8, #0x2f
  414db4:	cset	w25, ne  // ne = any
  414db8:	b	414dc0 <ferror@plt+0x12210>
  414dbc:	mov	w25, wzr
  414dc0:	add	x8, x21, x23
  414dc4:	add	x8, x8, x25
  414dc8:	add	x8, x8, #0x7
  414dcc:	cmp	x8, x22
  414dd0:	b.ls	414de0 <ferror@plt+0x12230>  // b.plast
  414dd4:	bl	402b30 <__errno_location@plt>
  414dd8:	mov	w8, #0x16                  	// #22
  414ddc:	b	414e28 <ferror@plt+0x12278>
  414de0:	mov	x0, x20
  414de4:	mov	x1, x24
  414de8:	mov	x2, x23
  414dec:	bl	402510 <memcpy@plt>
  414df0:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x382c>
  414df4:	eor	w8, w25, #0x1
  414df8:	add	x9, x9, #0x9f3
  414dfc:	add	x0, x20, x23
  414e00:	add	x3, x9, x8
  414e04:	mov	w1, #0x1                   	// #1
  414e08:	mov	x2, #0xffffffffffffffff    	// #-1
  414e0c:	mov	w4, w21
  414e10:	mov	x5, x19
  414e14:	bl	402560 <__sprintf_chk@plt>
  414e18:	mov	w0, wzr
  414e1c:	b	414e30 <ferror@plt+0x12280>
  414e20:	bl	402b30 <__errno_location@plt>
  414e24:	mov	w8, #0x2                   	// #2
  414e28:	str	w8, [x0]
  414e2c:	mov	w0, #0xffffffff            	// #-1
  414e30:	ldp	x20, x19, [sp, #64]
  414e34:	ldp	x22, x21, [sp, #48]
  414e38:	ldp	x24, x23, [sp, #32]
  414e3c:	ldr	x25, [sp, #16]
  414e40:	ldp	x29, x30, [sp], #80
  414e44:	ret
  414e48:	sub	sp, sp, #0x90
  414e4c:	mov	x1, sp
  414e50:	stp	x29, x30, [sp, #128]
  414e54:	add	x29, sp, #0x80
  414e58:	bl	417270 <_obstack_memory_used@@Base+0xa9c>
  414e5c:	ldr	w8, [sp, #16]
  414e60:	cmp	w0, #0x0
  414e64:	ldp	x29, x30, [sp, #128]
  414e68:	cset	w9, eq  // eq = none
  414e6c:	and	w8, w8, #0xf000
  414e70:	cmp	w8, #0x4, lsl #12
  414e74:	cset	w8, eq  // eq = none
  414e78:	and	w0, w9, w8
  414e7c:	add	sp, sp, #0x90
  414e80:	ret
  414e84:	stp	x29, x30, [sp, #-16]!
  414e88:	mov	w2, #0x3                   	// #3
  414e8c:	mov	w1, wzr
  414e90:	mov	x29, sp
  414e94:	bl	41614c <ferror@plt+0x1359c>
  414e98:	ldp	x29, x30, [sp], #16
  414e9c:	ret
  414ea0:	stp	x29, x30, [sp, #-48]!
  414ea4:	stp	x20, x19, [sp, #32]
  414ea8:	mov	w19, w0
  414eac:	cmp	w0, #0x2
  414eb0:	stp	x22, x21, [sp, #16]
  414eb4:	mov	x29, sp
  414eb8:	b.hi	414ee4 <ferror@plt+0x12334>  // b.pmore
  414ebc:	mov	w0, w19
  414ec0:	bl	414e84 <ferror@plt+0x122d4>
  414ec4:	mov	w20, w0
  414ec8:	bl	402b30 <__errno_location@plt>
  414ecc:	ldr	w22, [x0]
  414ed0:	mov	x21, x0
  414ed4:	mov	w0, w19
  414ed8:	bl	402860 <close@plt>
  414edc:	mov	w19, w20
  414ee0:	str	w22, [x21]
  414ee4:	mov	w0, w19
  414ee8:	ldp	x20, x19, [sp, #32]
  414eec:	ldp	x22, x21, [sp, #16]
  414ef0:	ldp	x29, x30, [sp], #48
  414ef4:	ret
  414ef8:	stp	x29, x30, [sp, #-48]!
  414efc:	stp	x22, x21, [sp, #16]
  414f00:	stp	x20, x19, [sp, #32]
  414f04:	mov	x29, sp
  414f08:	mov	x19, x0
  414f0c:	bl	402610 <pipe@plt>
  414f10:	cbnz	w0, 414f60 <ferror@plt+0x123b0>
  414f14:	mov	x21, #0x100000000           	// #4294967296
  414f18:	mov	x20, #0xffffffff00000000    	// #-4294967296
  414f1c:	mov	x22, x19
  414f20:	ldr	w0, [x22]
  414f24:	bl	414ea0 <ferror@plt+0x122f0>
  414f28:	str	w0, [x22]
  414f2c:	tbnz	w0, #31, 414f44 <ferror@plt+0x12394>
  414f30:	adds	x21, x21, x20
  414f34:	add	x22, x22, #0x4
  414f38:	b.eq	414f20 <ferror@plt+0x12370>  // b.none
  414f3c:	mov	w0, wzr
  414f40:	b	414f64 <ferror@plt+0x123b4>
  414f44:	bl	402b30 <__errno_location@plt>
  414f48:	asr	x8, x21, #30
  414f4c:	mov	x20, x0
  414f50:	ldr	w22, [x0]
  414f54:	ldr	w0, [x19, x8]
  414f58:	bl	402860 <close@plt>
  414f5c:	str	w22, [x20]
  414f60:	mov	w0, #0xffffffff            	// #-1
  414f64:	ldp	x20, x19, [sp, #32]
  414f68:	ldp	x22, x21, [sp, #16]
  414f6c:	ldp	x29, x30, [sp], #48
  414f70:	ret
  414f74:	sub	sp, sp, #0x30
  414f78:	stp	x29, x30, [sp, #32]
  414f7c:	ldp	q1, q0, [x3]
  414f80:	mov	x4, x2
  414f84:	mov	x5, sp
  414f88:	mov	x2, xzr
  414f8c:	mov	w3, wzr
  414f90:	add	x29, sp, #0x20
  414f94:	stp	q1, q0, [sp]
  414f98:	bl	414fa8 <ferror@plt+0x123f8>
  414f9c:	ldp	x29, x30, [sp, #32]
  414fa0:	add	sp, sp, #0x30
  414fa4:	ret
  414fa8:	sub	sp, sp, #0x60
  414fac:	stp	x29, x30, [sp, #32]
  414fb0:	str	x23, [sp, #48]
  414fb4:	stp	x22, x21, [sp, #64]
  414fb8:	stp	x20, x19, [sp, #80]
  414fbc:	ldp	q1, q0, [x5]
  414fc0:	mov	w20, w1
  414fc4:	mov	w23, w0
  414fc8:	mov	x1, sp
  414fcc:	mov	x0, x4
  414fd0:	add	x29, sp, #0x20
  414fd4:	mov	w21, w3
  414fd8:	mov	x22, x2
  414fdc:	stp	q1, q0, [sp]
  414fe0:	bl	415e54 <ferror@plt+0x132a4>
  414fe4:	cbz	x0, 41504c <ferror@plt+0x1249c>
  414fe8:	mov	x19, x0
  414fec:	cbz	x22, 415014 <ferror@plt+0x12464>
  414ff0:	adrp	x4, 419000 <_obstack_memory_used@@Base+0x282c>
  414ff4:	add	x4, x4, #0x96
  414ff8:	mov	w0, w23
  414ffc:	mov	w1, w20
  415000:	mov	x2, x22
  415004:	mov	w3, w21
  415008:	mov	x5, x19
  41500c:	bl	402b90 <error_at_line@plt>
  415010:	b	41502c <ferror@plt+0x1247c>
  415014:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  415018:	add	x2, x2, #0x96
  41501c:	mov	w0, w23
  415020:	mov	w1, w20
  415024:	mov	x3, x19
  415028:	bl	402590 <error@plt>
  41502c:	mov	x0, x19
  415030:	bl	4029a0 <free@plt>
  415034:	ldp	x20, x19, [sp, #80]
  415038:	ldp	x22, x21, [sp, #64]
  41503c:	ldr	x23, [sp, #48]
  415040:	ldp	x29, x30, [sp, #32]
  415044:	add	sp, sp, #0x60
  415048:	ret
  41504c:	bl	402b30 <__errno_location@plt>
  415050:	ldr	w1, [x0]
  415054:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415058:	add	x2, x2, #0x9ff
  41505c:	mov	w0, wzr
  415060:	bl	402590 <error@plt>
  415064:	bl	4028d0 <abort@plt>
  415068:	sub	sp, sp, #0x50
  41506c:	str	x21, [sp, #48]
  415070:	stp	x20, x19, [sp, #64]
  415074:	mov	x21, x5
  415078:	mov	x20, x4
  41507c:	mov	x5, x3
  415080:	mov	x4, x2
  415084:	mov	x19, x0
  415088:	stp	x29, x30, [sp, #32]
  41508c:	add	x29, sp, #0x20
  415090:	cbz	x1, 4150b0 <ferror@plt+0x12500>
  415094:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415098:	mov	x3, x1
  41509c:	add	x2, x2, #0xa29
  4150a0:	mov	w1, #0x1                   	// #1
  4150a4:	mov	x0, x19
  4150a8:	bl	402930 <__fprintf_chk@plt>
  4150ac:	b	4150cc <ferror@plt+0x1251c>
  4150b0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4150b4:	add	x2, x2, #0xa35
  4150b8:	mov	w1, #0x1                   	// #1
  4150bc:	mov	x0, x19
  4150c0:	mov	x3, x4
  4150c4:	mov	x4, x5
  4150c8:	bl	402930 <__fprintf_chk@plt>
  4150cc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4150d0:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x382c>
  4150d4:	add	x2, x2, #0xd0f
  4150d8:	add	x3, x3, #0xa3c
  4150dc:	mov	w1, #0x1                   	// #1
  4150e0:	mov	w4, #0x7e0                 	// #2016
  4150e4:	mov	x0, x19
  4150e8:	bl	402930 <__fprintf_chk@plt>
  4150ec:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x382c>
  4150f0:	add	x0, x0, #0xa40
  4150f4:	mov	x1, x19
  4150f8:	bl	402ac0 <fputs_unlocked@plt>
  4150fc:	cmp	x21, #0x9
  415100:	b.hi	415138 <ferror@plt+0x12588>  // b.pmore
  415104:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x382c>
  415108:	add	x8, x8, #0xa1f
  41510c:	adr	x9, 41511c <ferror@plt+0x1256c>
  415110:	ldrb	w10, [x8, x21]
  415114:	add	x9, x9, x10, lsl #2
  415118:	br	x9
  41511c:	ldr	x3, [x20]
  415120:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415124:	add	x2, x2, #0xb0b
  415128:	mov	w1, #0x1                   	// #1
  41512c:	mov	x0, x19
  415130:	bl	402930 <__fprintf_chk@plt>
  415134:	b	415268 <ferror@plt+0x126b8>
  415138:	ldp	x3, x4, [x20]
  41513c:	ldp	x5, x6, [x20, #16]
  415140:	ldr	x7, [x20, #32]
  415144:	ldur	q0, [x20, #40]
  415148:	ldp	x8, x9, [x20, #56]
  41514c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415150:	add	x2, x2, #0xc4a
  415154:	stp	x8, x9, [sp, #16]
  415158:	b	415258 <ferror@plt+0x126a8>
  41515c:	ldp	x3, x4, [x20]
  415160:	ldr	x5, [x20, #16]
  415164:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415168:	add	x2, x2, #0xb32
  41516c:	mov	w1, #0x1                   	// #1
  415170:	mov	x0, x19
  415174:	bl	402930 <__fprintf_chk@plt>
  415178:	b	415268 <ferror@plt+0x126b8>
  41517c:	ldp	x3, x4, [x20]
  415180:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415184:	add	x2, x2, #0xb1b
  415188:	mov	w1, #0x1                   	// #1
  41518c:	mov	x0, x19
  415190:	bl	402930 <__fprintf_chk@plt>
  415194:	b	415268 <ferror@plt+0x126b8>
  415198:	ldr	x8, [x20, #56]
  41519c:	ldp	x3, x4, [x20]
  4151a0:	ldp	x5, x6, [x20, #16]
  4151a4:	ldr	x7, [x20, #32]
  4151a8:	ldur	q0, [x20, #40]
  4151ac:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4151b0:	str	x8, [sp, #16]
  4151b4:	add	x2, x2, #0xbe6
  4151b8:	b	415258 <ferror@plt+0x126a8>
  4151bc:	ldp	x3, x4, [x20]
  4151c0:	ldp	x5, x6, [x20, #16]
  4151c4:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4151c8:	add	x2, x2, #0xb4e
  4151cc:	mov	w1, #0x1                   	// #1
  4151d0:	mov	x0, x19
  4151d4:	bl	402930 <__fprintf_chk@plt>
  4151d8:	b	415268 <ferror@plt+0x126b8>
  4151dc:	ldp	x3, x4, [x20]
  4151e0:	ldp	x5, x6, [x20, #16]
  4151e4:	ldr	x7, [x20, #32]
  4151e8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4151ec:	add	x2, x2, #0xb6e
  4151f0:	mov	w1, #0x1                   	// #1
  4151f4:	b	415260 <ferror@plt+0x126b0>
  4151f8:	ldp	x3, x4, [x20]
  4151fc:	ldp	x5, x6, [x20, #16]
  415200:	ldp	x7, x8, [x20, #32]
  415204:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415208:	add	x2, x2, #0xb92
  41520c:	b	41522c <ferror@plt+0x1267c>
  415210:	ldr	x9, [x20, #48]
  415214:	ldp	x3, x4, [x20]
  415218:	ldp	x5, x6, [x20, #16]
  41521c:	ldp	x7, x8, [x20, #32]
  415220:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415224:	add	x2, x2, #0xbba
  415228:	str	x9, [sp, #8]
  41522c:	mov	w1, #0x1                   	// #1
  415230:	str	x8, [sp]
  415234:	b	415260 <ferror@plt+0x126b0>
  415238:	ldp	x8, x9, [x20, #56]
  41523c:	ldp	x3, x4, [x20]
  415240:	ldp	x5, x6, [x20, #16]
  415244:	ldr	x7, [x20, #32]
  415248:	ldur	q0, [x20, #40]
  41524c:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415250:	stp	x8, x9, [sp, #16]
  415254:	add	x2, x2, #0xc16
  415258:	mov	w1, #0x1                   	// #1
  41525c:	str	q0, [sp]
  415260:	mov	x0, x19
  415264:	bl	402930 <__fprintf_chk@plt>
  415268:	ldp	x20, x19, [sp, #64]
  41526c:	ldr	x21, [sp, #48]
  415270:	ldp	x29, x30, [sp, #32]
  415274:	add	sp, sp, #0x50
  415278:	ret
  41527c:	bl	4028d0 <abort@plt>
  415280:	stp	x29, x30, [sp, #-16]!
  415284:	mov	x8, xzr
  415288:	mov	x29, sp
  41528c:	ldr	x9, [x4, x8, lsl #3]
  415290:	add	x8, x8, #0x1
  415294:	cbnz	x9, 41528c <ferror@plt+0x126dc>
  415298:	sub	x5, x8, #0x1
  41529c:	bl	415068 <ferror@plt+0x124b8>
  4152a0:	ldp	x29, x30, [sp], #16
  4152a4:	ret
  4152a8:	sub	sp, sp, #0x60
  4152ac:	mov	x5, xzr
  4152b0:	mov	x8, sp
  4152b4:	stp	x29, x30, [sp, #80]
  4152b8:	add	x29, sp, #0x50
  4152bc:	ldrsw	x9, [x4, #24]
  4152c0:	tbz	w9, #31, 4152d4 <ferror@plt+0x12724>
  4152c4:	add	w10, w9, #0x8
  4152c8:	cmp	w10, #0x0
  4152cc:	str	w10, [x4, #24]
  4152d0:	b.le	4152fc <ferror@plt+0x1274c>
  4152d4:	ldr	x9, [x4]
  4152d8:	add	x10, x9, #0x8
  4152dc:	str	x10, [x4]
  4152e0:	ldr	x9, [x9]
  4152e4:	str	x9, [x8, x5, lsl #3]
  4152e8:	cbz	x9, 415308 <ferror@plt+0x12758>
  4152ec:	add	x5, x5, #0x1
  4152f0:	cmp	x5, #0xa
  4152f4:	b.ne	4152bc <ferror@plt+0x1270c>  // b.any
  4152f8:	b	415308 <ferror@plt+0x12758>
  4152fc:	ldr	x10, [x4, #8]
  415300:	add	x9, x10, x9
  415304:	b	4152e0 <ferror@plt+0x12730>
  415308:	mov	x4, sp
  41530c:	bl	415068 <ferror@plt+0x124b8>
  415310:	ldp	x29, x30, [sp, #80]
  415314:	add	sp, sp, #0x60
  415318:	ret
  41531c:	sub	sp, sp, #0xf0
  415320:	stp	x29, x30, [sp, #224]
  415324:	add	x29, sp, #0xe0
  415328:	mov	x8, #0xffffffffffffffe0    	// #-32
  41532c:	mov	x9, sp
  415330:	sub	x10, x29, #0x60
  415334:	movk	x8, #0xff80, lsl #32
  415338:	add	x11, x29, #0x10
  41533c:	add	x9, x9, #0x80
  415340:	add	x10, x10, #0x20
  415344:	stp	x9, x8, [x29, #-16]
  415348:	stp	x11, x10, [x29, #-32]
  41534c:	stp	x4, x5, [x29, #-96]
  415350:	stp	x6, x7, [x29, #-80]
  415354:	stp	q0, q1, [sp]
  415358:	ldp	q0, q1, [x29, #-32]
  41535c:	sub	x4, x29, #0x40
  415360:	stp	q2, q3, [sp, #32]
  415364:	stp	q4, q5, [sp, #64]
  415368:	stp	q6, q7, [sp, #96]
  41536c:	stp	q0, q1, [x29, #-64]
  415370:	bl	4152a8 <ferror@plt+0x126f8>
  415374:	ldp	x29, x30, [sp, #224]
  415378:	add	sp, sp, #0xf0
  41537c:	ret
  415380:	stp	x29, x30, [sp, #-16]!
  415384:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  415388:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  41538c:	add	x1, x1, #0xc86
  415390:	add	x2, x2, #0x810
  415394:	mov	w0, #0x1                   	// #1
  415398:	mov	x29, sp
  41539c:	bl	402790 <__printf_chk@plt>
  4153a0:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  4153a4:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x82c>
  4153a8:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x382c>
  4153ac:	add	x1, x1, #0xc9b
  4153b0:	add	x2, x2, #0x8e0
  4153b4:	add	x3, x3, #0xcaf
  4153b8:	mov	w0, #0x1                   	// #1
  4153bc:	bl	402790 <__printf_chk@plt>
  4153c0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4153c4:	ldr	x1, [x8, #1088]
  4153c8:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x382c>
  4153cc:	add	x0, x0, #0xccf
  4153d0:	bl	402ac0 <fputs_unlocked@plt>
  4153d4:	ldp	x29, x30, [sp], #16
  4153d8:	ret
  4153dc:	stp	x29, x30, [sp, #-80]!
  4153e0:	stp	x22, x21, [sp, #48]
  4153e4:	adrp	x21, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4153e8:	ldrb	w8, [x21, #3216]
  4153ec:	stp	x20, x19, [sp, #64]
  4153f0:	mov	w19, w0
  4153f4:	stp	x26, x25, [sp, #16]
  4153f8:	stp	x24, x23, [sp, #32]
  4153fc:	mov	x29, sp
  415400:	tbnz	w8, #0, 415424 <ferror@plt+0x12874>
  415404:	adrp	x20, 415000 <ferror@plt+0x12450>
  415408:	add	x20, x20, #0x514
  41540c:	mov	x0, x20
  415410:	bl	417260 <_obstack_memory_used@@Base+0xa8c>
  415414:	mov	x0, x20
  415418:	bl	410bdc <ferror@plt+0xe02c>
  41541c:	mov	w8, #0x1                   	// #1
  415420:	strb	w8, [x21, #3216]
  415424:	adrp	x23, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415428:	adrp	x22, 437000 <__progname@@GLIBC_2.17+0xaba8>
  41542c:	ldr	x8, [x23, #1032]
  415430:	ldrsw	x9, [x22, #3220]
  415434:	cmp	w9, #0x1
  415438:	b.lt	415454 <ferror@plt+0x128a4>  // b.tstop
  41543c:	add	x9, x8, x9, lsl #3
  415440:	ldr	w10, [x8]
  415444:	cbz	w10, 4154e0 <ferror@plt+0x12930>
  415448:	add	x8, x8, #0x8
  41544c:	cmp	x8, x9
  415450:	b.cc	415440 <ferror@plt+0x12890>  // b.lo, b.ul, b.last
  415454:	adrp	x24, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415458:	ldrsw	x8, [x22, #3220]
  41545c:	ldr	x25, [x24, #1040]
  415460:	cmp	x25, x8
  415464:	b.ne	4154ac <ferror@plt+0x128fc>  // b.any
  415468:	ldr	x20, [x23, #1032]
  41546c:	lsl	x0, x25, #4
  415470:	bl	402700 <malloc@plt>
  415474:	cbz	x0, 415504 <ferror@plt+0x12954>
  415478:	lsl	x2, x25, #3
  41547c:	mov	x1, x20
  415480:	mov	x21, x0
  415484:	lsl	x26, x25, #1
  415488:	bl	402510 <memcpy@plt>
  41548c:	adrp	x8, 437000 <__progname@@GLIBC_2.17+0xaba8>
  415490:	add	x8, x8, #0xc98
  415494:	cmp	x20, x8
  415498:	str	x21, [x23, #1032]
  41549c:	str	x26, [x24, #1040]
  4154a0:	b.eq	4154ac <ferror@plt+0x128fc>  // b.none
  4154a4:	mov	x0, x20
  4154a8:	bl	4029a0 <free@plt>
  4154ac:	ldr	x8, [x23, #1032]
  4154b0:	ldrsw	x9, [x22, #3220]
  4154b4:	mov	w10, #0x1                   	// #1
  4154b8:	add	x8, x8, x9, lsl #3
  4154bc:	str	w19, [x8, #4]
  4154c0:	ldr	x8, [x23, #1032]
  4154c4:	ldrsw	x9, [x22, #3220]
  4154c8:	lsl	x9, x9, #3
  4154cc:	str	w10, [x8, x9]
  4154d0:	ldr	w8, [x22, #3220]
  4154d4:	add	w8, w8, #0x1
  4154d8:	str	w8, [x22, #3220]
  4154dc:	b	4154ec <ferror@plt+0x1293c>
  4154e0:	mov	w9, #0x1                   	// #1
  4154e4:	str	w19, [x8, #4]
  4154e8:	str	w9, [x8]
  4154ec:	ldp	x20, x19, [sp, #64]
  4154f0:	ldp	x22, x21, [sp, #48]
  4154f4:	ldp	x24, x23, [sp, #32]
  4154f8:	ldp	x26, x25, [sp, #16]
  4154fc:	ldp	x29, x30, [sp], #80
  415500:	ret
  415504:	mov	w1, #0x1                   	// #1
  415508:	mov	w0, w19
  41550c:	bl	402660 <kill@plt>
  415510:	bl	415a64 <ferror@plt+0x12eb4>
  415514:	stp	x29, x30, [sp, #-32]!
  415518:	stp	x20, x19, [sp, #16]
  41551c:	adrp	x19, 437000 <__progname@@GLIBC_2.17+0xaba8>
  415520:	ldr	w8, [x19, #3220]
  415524:	mov	x29, sp
  415528:	cbz	w8, 415570 <ferror@plt+0x129c0>
  41552c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415530:	b	41553c <ferror@plt+0x1298c>
  415534:	ldr	w8, [x19, #3220]
  415538:	cbz	w8, 415570 <ferror@plt+0x129c0>
  41553c:	sxtw	x8, w8
  415540:	sub	x8, x8, #0x1
  415544:	str	w8, [x19, #3220]
  415548:	ldr	x9, [x20, #1032]
  41554c:	lsl	x10, x8, #3
  415550:	ldr	w9, [x9, x10]
  415554:	cbz	w9, 415534 <ferror@plt+0x12984>
  415558:	ldr	x9, [x20, #1032]
  41555c:	mov	w1, #0x1                   	// #1
  415560:	add	x8, x9, x8, lsl #3
  415564:	ldr	w0, [x8, #4]
  415568:	bl	402660 <kill@plt>
  41556c:	b	415534 <ferror@plt+0x12984>
  415570:	ldp	x20, x19, [sp, #16]
  415574:	ldp	x29, x30, [sp], #32
  415578:	ret
  41557c:	sub	sp, sp, #0x70
  415580:	stp	x26, x25, [sp, #48]
  415584:	stp	x24, x23, [sp, #64]
  415588:	stp	x22, x21, [sp, #80]
  41558c:	stp	x20, x19, [sp, #96]
  415590:	mov	x22, x6
  415594:	mov	w20, w5
  415598:	mov	w25, w4
  41559c:	mov	w21, w3
  4155a0:	mov	w23, w2
  4155a4:	mov	x19, x1
  4155a8:	mov	w24, w0
  4155ac:	stp	x29, x30, [sp, #16]
  4155b0:	stp	x28, x27, [sp, #32]
  4155b4:	add	x29, sp, #0x10
  4155b8:	cbz	x6, 4155c0 <ferror@plt+0x12a10>
  4155bc:	str	wzr, [x22]
  4155c0:	adrp	x27, 41a000 <_obstack_memory_used@@Base+0x382c>
  4155c4:	and	w26, w20, #0x1
  4155c8:	mov	w28, #0x3                   	// #3
  4155cc:	add	x27, x27, #0xd3e
  4155d0:	stur	wzr, [x29, #-4]
  4155d4:	sub	x1, x29, #0x4
  4155d8:	mov	w0, w24
  4155dc:	mov	w2, wzr
  4155e0:	bl	402b70 <waitpid@plt>
  4155e4:	cmp	w0, w24
  4155e8:	b.ne	415600 <ferror@plt+0x12a50>  // b.any
  4155ec:	ldurb	w8, [x29, #-4]
  4155f0:	cmp	w8, #0x7f
  4155f4:	cset	w8, ne  // ne = any
  4155f8:	lsl	w8, w8, #1
  4155fc:	b	415634 <ferror@plt+0x12a84>
  415600:	bl	402b30 <__errno_location@plt>
  415604:	ldr	w1, [x0]
  415608:	cmp	w1, #0x4
  41560c:	csinc	w8, w28, wzr, eq  // eq = none
  415610:	b.eq	415634 <ferror@plt+0x12a84>  // b.none
  415614:	eor	w9, w20, #0x1
  415618:	and	w9, w9, w21
  41561c:	tbnz	w9, #0, 415634 <ferror@plt+0x12a84>
  415620:	mov	w0, w26
  415624:	mov	x2, x27
  415628:	mov	x3, x19
  41562c:	bl	402590 <error@plt>
  415630:	mov	w8, #0x1                   	// #1
  415634:	cbz	w8, 4155d4 <ferror@plt+0x12a24>
  415638:	cmp	w8, #0x3
  41563c:	b.eq	4155d4 <ferror@plt+0x12a24>  // b.none
  415640:	cmp	w8, #0x2
  415644:	b.ne	4156e8 <ferror@plt+0x12b38>  // b.any
  415648:	tbz	w25, #0, 415654 <ferror@plt+0x12aa4>
  41564c:	mov	w0, w24
  415650:	bl	415710 <ferror@plt+0x12b60>
  415654:	ldur	w8, [x29, #-4]
  415658:	mov	w9, #0x1000000             	// #16777216
  41565c:	mov	w10, #0x2000000             	// #33554432
  415660:	and	w4, w8, #0x7f
  415664:	add	w9, w9, w4, lsl #24
  415668:	cmp	w9, w10
  41566c:	b.lt	41568c <ferror@plt+0x12adc>  // b.tstop
  415670:	cbz	x22, 415678 <ferror@plt+0x12ac8>
  415674:	str	w4, [x22]
  415678:	cmp	w4, #0xd
  41567c:	b.ne	4156c0 <ferror@plt+0x12b10>  // b.any
  415680:	tbz	w23, #0, 4156c0 <ferror@plt+0x12b10>
  415684:	mov	w0, wzr
  415688:	b	4156ec <ferror@plt+0x12b3c>
  41568c:	cbnz	w4, 41570c <ferror@plt+0x12b5c>
  415690:	ubfx	w0, w8, #8, #8
  415694:	cmp	w0, #0x7f
  415698:	b.ne	4156ec <ferror@plt+0x12b3c>  // b.any
  41569c:	tbz	w21, #0, 4156a4 <ferror@plt+0x12af4>
  4156a0:	tbz	w20, #0, 4156e8 <ferror@plt+0x12b38>
  4156a4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  4156a8:	and	w0, w20, #0x1
  4156ac:	add	x2, x2, #0xfe1
  4156b0:	mov	w1, wzr
  4156b4:	mov	x3, x19
  4156b8:	bl	402590 <error@plt>
  4156bc:	b	4156e8 <ferror@plt+0x12b38>
  4156c0:	tbnz	w20, #0, 4156d0 <ferror@plt+0x12b20>
  4156c4:	mov	w0, #0x7f                  	// #127
  4156c8:	cbnz	x22, 4156ec <ferror@plt+0x12b3c>
  4156cc:	tbnz	w21, #0, 4156ec <ferror@plt+0x12b3c>
  4156d0:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  4156d4:	and	w0, w20, #0x1
  4156d8:	add	x2, x2, #0xd4c
  4156dc:	mov	w1, wzr
  4156e0:	mov	x3, x19
  4156e4:	bl	402590 <error@plt>
  4156e8:	mov	w0, #0x7f                  	// #127
  4156ec:	ldp	x20, x19, [sp, #96]
  4156f0:	ldp	x22, x21, [sp, #80]
  4156f4:	ldp	x24, x23, [sp, #64]
  4156f8:	ldp	x26, x25, [sp, #48]
  4156fc:	ldp	x28, x27, [sp, #32]
  415700:	ldp	x29, x30, [sp, #16]
  415704:	add	sp, sp, #0x70
  415708:	ret
  41570c:	bl	4028d0 <abort@plt>
  415710:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415714:	adrp	x9, 437000 <__progname@@GLIBC_2.17+0xaba8>
  415718:	ldr	x8, [x8, #1032]
  41571c:	ldrsw	x9, [x9, #3220]
  415720:	cmp	w9, #0x1
  415724:	b.lt	415758 <ferror@plt+0x12ba8>  // b.tstop
  415728:	add	x9, x8, x9, lsl #3
  41572c:	b	41573c <ferror@plt+0x12b8c>
  415730:	add	x8, x8, #0x8
  415734:	cmp	x8, x9
  415738:	b.cs	415758 <ferror@plt+0x12ba8>  // b.hs, b.nlast
  41573c:	ldr	w10, [x8]
  415740:	cbz	w10, 415730 <ferror@plt+0x12b80>
  415744:	ldr	w10, [x8, #4]
  415748:	cmp	w10, w0
  41574c:	b.ne	415730 <ferror@plt+0x12b80>  // b.any
  415750:	str	wzr, [x8]
  415754:	b	415730 <ferror@plt+0x12b80>
  415758:	ret
  41575c:	sub	sp, sp, #0x30
  415760:	stp	x20, x19, [sp, #32]
  415764:	mov	x19, x1
  415768:	add	x4, sp, #0x8
  41576c:	mov	x1, xzr
  415770:	mov	x2, x19
  415774:	mov	x3, xzr
  415778:	stp	x29, x30, [sp, #16]
  41577c:	add	x29, sp, #0x10
  415780:	mov	x20, x0
  415784:	str	xzr, [sp, #8]
  415788:	bl	416df0 <_obstack_memory_used@@Base+0x61c>
  41578c:	ldr	x8, [sp, #8]
  415790:	sbfx	x9, x1, #0, #1
  415794:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  415798:	eor	x9, x9, x1
  41579c:	cmn	x0, x10
  4157a0:	orr	x9, x9, x8
  4157a4:	adcs	x8, x1, xzr
  4157a8:	cbnz	x9, 4157cc <ferror@plt+0x12c1c>
  4157ac:	sbfx	x8, x8, #0, #1
  4157b0:	tbnz	x8, #63, 4157cc <ferror@plt+0x12c1c>
  4157b4:	mul	x0, x19, x20
  4157b8:	bl	4157d0 <ferror@plt+0x12c20>
  4157bc:	ldp	x20, x19, [sp, #32]
  4157c0:	ldp	x29, x30, [sp, #16]
  4157c4:	add	sp, sp, #0x30
  4157c8:	ret
  4157cc:	bl	415a64 <ferror@plt+0x12eb4>
  4157d0:	stp	x29, x30, [sp, #-32]!
  4157d4:	str	x19, [sp, #16]
  4157d8:	mov	x29, sp
  4157dc:	mov	x19, x0
  4157e0:	bl	402700 <malloc@plt>
  4157e4:	cbz	x19, 4157ec <ferror@plt+0x12c3c>
  4157e8:	cbz	x0, 4157f8 <ferror@plt+0x12c48>
  4157ec:	ldr	x19, [sp, #16]
  4157f0:	ldp	x29, x30, [sp], #32
  4157f4:	ret
  4157f8:	bl	415a64 <ferror@plt+0x12eb4>
  4157fc:	stp	x29, x30, [sp, #-48]!
  415800:	mov	x29, sp
  415804:	str	x21, [sp, #16]
  415808:	stp	x20, x19, [sp, #32]
  41580c:	mov	x21, x1
  415810:	mov	x19, x0
  415814:	add	x4, x29, #0x18
  415818:	mov	x0, x1
  41581c:	mov	x1, xzr
  415820:	mov	x3, xzr
  415824:	mov	x20, x2
  415828:	str	xzr, [x29, #24]
  41582c:	bl	416df0 <_obstack_memory_used@@Base+0x61c>
  415830:	ldr	x8, [x29, #24]
  415834:	sbfx	x9, x1, #0, #1
  415838:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  41583c:	eor	x9, x9, x1
  415840:	cmn	x0, x10
  415844:	orr	x9, x9, x8
  415848:	adcs	x8, x1, xzr
  41584c:	cbnz	x9, 415874 <ferror@plt+0x12cc4>
  415850:	sbfx	x8, x8, #0, #1
  415854:	tbnz	x8, #63, 415874 <ferror@plt+0x12cc4>
  415858:	mul	x1, x20, x21
  41585c:	mov	x0, x19
  415860:	bl	415878 <ferror@plt+0x12cc8>
  415864:	ldp	x20, x19, [sp, #32]
  415868:	ldr	x21, [sp, #16]
  41586c:	ldp	x29, x30, [sp], #48
  415870:	ret
  415874:	bl	415a64 <ferror@plt+0x12eb4>
  415878:	stp	x29, x30, [sp, #-32]!
  41587c:	str	x19, [sp, #16]
  415880:	mov	x19, x1
  415884:	mov	x29, sp
  415888:	cbz	x0, 41589c <ferror@plt+0x12cec>
  41588c:	cbnz	x19, 41589c <ferror@plt+0x12cec>
  415890:	bl	4029a0 <free@plt>
  415894:	mov	x0, xzr
  415898:	b	4158ac <ferror@plt+0x12cfc>
  41589c:	mov	x1, x19
  4158a0:	bl	402810 <realloc@plt>
  4158a4:	cbz	x19, 4158ac <ferror@plt+0x12cfc>
  4158a8:	cbz	x0, 4158b8 <ferror@plt+0x12d08>
  4158ac:	ldr	x19, [sp, #16]
  4158b0:	ldp	x29, x30, [sp], #32
  4158b4:	ret
  4158b8:	bl	415a64 <ferror@plt+0x12eb4>
  4158bc:	stp	x29, x30, [sp, #-16]!
  4158c0:	ldr	x8, [x1]
  4158c4:	mov	x29, sp
  4158c8:	cbz	x0, 4158ec <ferror@plt+0x12d3c>
  4158cc:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4158d0:	movk	x9, #0x5554
  4158d4:	udiv	x9, x9, x2
  4158d8:	cmp	x9, x8
  4158dc:	b.ls	415914 <ferror@plt+0x12d64>  // b.plast
  4158e0:	add	x8, x8, x8, lsr #1
  4158e4:	add	x8, x8, #0x1
  4158e8:	b	415900 <ferror@plt+0x12d50>
  4158ec:	cbnz	x8, 415900 <ferror@plt+0x12d50>
  4158f0:	mov	w8, #0x80                  	// #128
  4158f4:	udiv	x8, x8, x2
  4158f8:	cmp	x2, #0x80
  4158fc:	cinc	x8, x8, hi  // hi = pmore
  415900:	str	x8, [x1]
  415904:	mul	x1, x8, x2
  415908:	bl	415878 <ferror@plt+0x12cc8>
  41590c:	ldp	x29, x30, [sp], #16
  415910:	ret
  415914:	bl	415a64 <ferror@plt+0x12eb4>
  415918:	stp	x29, x30, [sp, #-16]!
  41591c:	mov	x29, sp
  415920:	bl	4157d0 <ferror@plt+0x12c20>
  415924:	ldp	x29, x30, [sp], #16
  415928:	ret
  41592c:	stp	x29, x30, [sp, #-16]!
  415930:	mov	w2, #0x1                   	// #1
  415934:	mov	x29, sp
  415938:	bl	4158bc <ferror@plt+0x12d0c>
  41593c:	ldp	x29, x30, [sp], #16
  415940:	ret
  415944:	stp	x29, x30, [sp, #-32]!
  415948:	stp	x20, x19, [sp, #16]
  41594c:	mov	x29, sp
  415950:	mov	x19, x0
  415954:	bl	4157d0 <ferror@plt+0x12c20>
  415958:	mov	w1, wzr
  41595c:	mov	x2, x19
  415960:	mov	x20, x0
  415964:	bl	4027a0 <memset@plt>
  415968:	mov	x0, x20
  41596c:	ldp	x20, x19, [sp, #16]
  415970:	ldp	x29, x30, [sp], #32
  415974:	ret
  415978:	sub	sp, sp, #0x30
  41597c:	stp	x20, x19, [sp, #32]
  415980:	mov	x19, x1
  415984:	add	x4, sp, #0x8
  415988:	mov	x1, xzr
  41598c:	mov	x2, x19
  415990:	mov	x3, xzr
  415994:	stp	x29, x30, [sp, #16]
  415998:	add	x29, sp, #0x10
  41599c:	mov	x20, x0
  4159a0:	str	xzr, [sp, #8]
  4159a4:	bl	416df0 <_obstack_memory_used@@Base+0x61c>
  4159a8:	ldr	x8, [sp, #8]
  4159ac:	sbfx	x9, x1, #0, #1
  4159b0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4159b4:	eor	x9, x9, x1
  4159b8:	cmn	x0, x10
  4159bc:	orr	x9, x9, x8
  4159c0:	adcs	x8, x1, xzr
  4159c4:	cbnz	x9, 4159f0 <ferror@plt+0x12e40>
  4159c8:	sbfx	x8, x8, #0, #1
  4159cc:	tbnz	x8, #63, 4159f0 <ferror@plt+0x12e40>
  4159d0:	mov	x0, x20
  4159d4:	mov	x1, x19
  4159d8:	bl	4027e0 <calloc@plt>
  4159dc:	cbz	x0, 4159f0 <ferror@plt+0x12e40>
  4159e0:	ldp	x20, x19, [sp, #32]
  4159e4:	ldp	x29, x30, [sp, #16]
  4159e8:	add	sp, sp, #0x30
  4159ec:	ret
  4159f0:	bl	415a64 <ferror@plt+0x12eb4>
  4159f4:	stp	x29, x30, [sp, #-48]!
  4159f8:	stp	x20, x19, [sp, #32]
  4159fc:	mov	x20, x0
  415a00:	mov	x0, x1
  415a04:	str	x21, [sp, #16]
  415a08:	mov	x29, sp
  415a0c:	mov	x19, x1
  415a10:	bl	4157d0 <ferror@plt+0x12c20>
  415a14:	mov	x1, x20
  415a18:	mov	x2, x19
  415a1c:	mov	x21, x0
  415a20:	bl	402510 <memcpy@plt>
  415a24:	mov	x0, x21
  415a28:	ldp	x20, x19, [sp, #32]
  415a2c:	ldr	x21, [sp, #16]
  415a30:	ldp	x29, x30, [sp], #48
  415a34:	ret
  415a38:	stp	x29, x30, [sp, #-32]!
  415a3c:	str	x19, [sp, #16]
  415a40:	mov	x29, sp
  415a44:	mov	x19, x0
  415a48:	bl	402540 <strlen@plt>
  415a4c:	add	x1, x0, #0x1
  415a50:	mov	x0, x19
  415a54:	bl	4159f4 <ferror@plt+0x12e44>
  415a58:	ldr	x19, [sp, #16]
  415a5c:	ldp	x29, x30, [sp], #32
  415a60:	ret
  415a64:	stp	x29, x30, [sp, #-16]!
  415a68:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415a6c:	ldr	w0, [x8, #892]
  415a70:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x282c>
  415a74:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x382c>
  415a78:	add	x2, x2, #0x96
  415a7c:	add	x3, x3, #0xd6e
  415a80:	mov	w1, wzr
  415a84:	mov	x29, sp
  415a88:	bl	402590 <error@plt>
  415a8c:	bl	4028d0 <abort@plt>
  415a90:	stp	x29, x30, [sp, #-16]!
  415a94:	and	w4, w4, #0x1
  415a98:	mov	x29, sp
  415a9c:	bl	412598 <ferror@plt+0xf9e8>
  415aa0:	cbz	x0, 415aac <ferror@plt+0x12efc>
  415aa4:	ldp	x29, x30, [sp], #16
  415aa8:	ret
  415aac:	bl	415a64 <ferror@plt+0x12eb4>
  415ab0:	stp	x29, x30, [sp, #-16]!
  415ab4:	and	w4, w4, #0x1
  415ab8:	mov	x29, sp
  415abc:	bl	4125b4 <ferror@plt+0xfa04>
  415ac0:	cbz	x0, 415acc <ferror@plt+0x12f1c>
  415ac4:	ldp	x29, x30, [sp], #16
  415ac8:	ret
  415acc:	bl	415a64 <ferror@plt+0x12eb4>
  415ad0:	stp	x29, x30, [sp, #-16]!
  415ad4:	mov	x29, sp
  415ad8:	bl	412608 <ferror@plt+0xfa58>
  415adc:	tbnz	w0, #31, 415ae8 <ferror@plt+0x12f38>
  415ae0:	ldp	x29, x30, [sp], #16
  415ae4:	ret
  415ae8:	bl	415a64 <ferror@plt+0x12eb4>
  415aec:	stp	x29, x30, [sp, #-16]!
  415af0:	mov	x29, sp
  415af4:	bl	412678 <ferror@plt+0xfac8>
  415af8:	cbz	x0, 415b04 <ferror@plt+0x12f54>
  415afc:	ldp	x29, x30, [sp], #16
  415b00:	ret
  415b04:	bl	415a64 <ferror@plt+0x12eb4>
  415b08:	stp	x29, x30, [sp, #-16]!
  415b0c:	mov	x29, sp
  415b10:	bl	412804 <ferror@plt+0xfc54>
  415b14:	cbz	x0, 415b20 <ferror@plt+0x12f70>
  415b18:	ldp	x29, x30, [sp], #16
  415b1c:	ret
  415b20:	bl	415a64 <ferror@plt+0x12eb4>
  415b24:	stp	x29, x30, [sp, #-16]!
  415b28:	mov	x29, sp
  415b2c:	bl	412820 <ferror@plt+0xfc70>
  415b30:	cbz	x0, 415b3c <ferror@plt+0x12f8c>
  415b34:	ldp	x29, x30, [sp], #16
  415b38:	ret
  415b3c:	bl	415a64 <ferror@plt+0x12eb4>
  415b40:	stp	x29, x30, [sp, #-16]!
  415b44:	mov	x29, sp
  415b48:	bl	41283c <ferror@plt+0xfc8c>
  415b4c:	cbz	x0, 415b58 <ferror@plt+0x12fa8>
  415b50:	ldp	x29, x30, [sp], #16
  415b54:	ret
  415b58:	bl	415a64 <ferror@plt+0x12eb4>
  415b5c:	stp	x29, x30, [sp, #-16]!
  415b60:	mov	x29, sp
  415b64:	bl	412858 <ferror@plt+0xfca8>
  415b68:	cbz	x0, 415b74 <ferror@plt+0x12fc4>
  415b6c:	ldp	x29, x30, [sp], #16
  415b70:	ret
  415b74:	bl	415a64 <ferror@plt+0x12eb4>
  415b78:	stp	x29, x30, [sp, #-16]!
  415b7c:	mov	x29, sp
  415b80:	bl	412874 <ferror@plt+0xfcc4>
  415b84:	cbz	x0, 415b90 <ferror@plt+0x12fe0>
  415b88:	ldp	x29, x30, [sp], #16
  415b8c:	ret
  415b90:	bl	415a64 <ferror@plt+0x12eb4>
  415b94:	stp	x29, x30, [sp, #-16]!
  415b98:	mov	x29, sp
  415b9c:	bl	4129f0 <ferror@plt+0xfe40>
  415ba0:	cbz	x0, 415bac <ferror@plt+0x12ffc>
  415ba4:	ldp	x29, x30, [sp], #16
  415ba8:	ret
  415bac:	bl	415a64 <ferror@plt+0x12eb4>
  415bb0:	stp	x29, x30, [sp, #-16]!
  415bb4:	mov	x29, sp
  415bb8:	bl	412a2c <ferror@plt+0xfe7c>
  415bbc:	cbz	x0, 415bc8 <ferror@plt+0x13018>
  415bc0:	ldp	x29, x30, [sp], #16
  415bc4:	ret
  415bc8:	bl	415a64 <ferror@plt+0x12eb4>
  415bcc:	stp	x29, x30, [sp, #-16]!
  415bd0:	mov	x29, sp
  415bd4:	bl	412c38 <ferror@plt+0x10088>
  415bd8:	cbz	x0, 415be4 <ferror@plt+0x13034>
  415bdc:	ldp	x29, x30, [sp], #16
  415be0:	ret
  415be4:	bl	415a64 <ferror@plt+0x12eb4>
  415be8:	stp	x29, x30, [sp, #-16]!
  415bec:	mov	x29, sp
  415bf0:	bl	412cac <ferror@plt+0x100fc>
  415bf4:	tbnz	w0, #31, 415c08 <ferror@plt+0x13058>
  415bf8:	cmp	w0, #0x0
  415bfc:	cset	w0, ne  // ne = any
  415c00:	ldp	x29, x30, [sp], #16
  415c04:	ret
  415c08:	bl	415a64 <ferror@plt+0x12eb4>
  415c0c:	sub	sp, sp, #0x120
  415c10:	stp	x29, x30, [sp, #256]
  415c14:	add	x29, sp, #0x100
  415c18:	mov	x8, #0xffffffffffffffc8    	// #-56
  415c1c:	mov	x9, sp
  415c20:	sub	x10, x29, #0x78
  415c24:	movk	x8, #0xff80, lsl #32
  415c28:	add	x11, x29, #0x20
  415c2c:	add	x9, x9, #0x80
  415c30:	add	x10, x10, #0x38
  415c34:	stp	x9, x8, [x29, #-16]
  415c38:	stp	x11, x10, [x29, #-32]
  415c3c:	stp	x1, x2, [x29, #-120]
  415c40:	stp	x3, x4, [x29, #-104]
  415c44:	stp	x5, x6, [x29, #-88]
  415c48:	stur	x7, [x29, #-72]
  415c4c:	stp	q0, q1, [sp]
  415c50:	ldp	q0, q1, [x29, #-32]
  415c54:	sub	x1, x29, #0x40
  415c58:	str	x28, [sp, #272]
  415c5c:	stp	q2, q3, [sp, #32]
  415c60:	stp	q4, q5, [sp, #64]
  415c64:	stp	q6, q7, [sp, #96]
  415c68:	stp	q0, q1, [x29, #-64]
  415c6c:	bl	415c80 <ferror@plt+0x130d0>
  415c70:	ldr	x28, [sp, #272]
  415c74:	ldp	x29, x30, [sp, #256]
  415c78:	add	sp, sp, #0x120
  415c7c:	ret
  415c80:	sub	sp, sp, #0x60
  415c84:	stp	x29, x30, [sp, #64]
  415c88:	stp	x20, x19, [sp, #80]
  415c8c:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415c90:	mov	x2, x0
  415c94:	ldp	q1, q0, [x1]
  415c98:	ldr	x0, [x20, #1088]
  415c9c:	add	x3, sp, #0x20
  415ca0:	mov	w1, #0x1                   	// #1
  415ca4:	add	x29, sp, #0x40
  415ca8:	stp	q1, q0, [sp]
  415cac:	stp	q1, q0, [sp, #32]
  415cb0:	bl	4027d0 <__vfprintf_chk@plt>
  415cb4:	mov	w19, w0
  415cb8:	tbz	w0, #31, 415ce8 <ferror@plt+0x13138>
  415cbc:	ldr	x0, [x20, #1088]
  415cc0:	bl	402bb0 <ferror@plt>
  415cc4:	cbnz	w0, 415ce8 <ferror@plt+0x13138>
  415cc8:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415ccc:	ldr	w20, [x8, #892]
  415cd0:	bl	402b30 <__errno_location@plt>
  415cd4:	ldr	w1, [x0]
  415cd8:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415cdc:	add	x2, x2, #0xd7f
  415ce0:	mov	w0, w20
  415ce4:	bl	402590 <error@plt>
  415ce8:	mov	w0, w19
  415cec:	ldp	x20, x19, [sp, #80]
  415cf0:	ldp	x29, x30, [sp, #64]
  415cf4:	add	sp, sp, #0x60
  415cf8:	ret
  415cfc:	sub	sp, sp, #0x100
  415d00:	stp	x29, x30, [sp, #240]
  415d04:	add	x29, sp, #0xf0
  415d08:	mov	x8, #0xffffffffffffffd0    	// #-48
  415d0c:	mov	x9, sp
  415d10:	sub	x10, x29, #0x70
  415d14:	movk	x8, #0xff80, lsl #32
  415d18:	add	x11, x29, #0x10
  415d1c:	add	x9, x9, #0x80
  415d20:	add	x10, x10, #0x30
  415d24:	stp	x9, x8, [x29, #-16]
  415d28:	stp	x11, x10, [x29, #-32]
  415d2c:	stp	x2, x3, [x29, #-112]
  415d30:	stp	x4, x5, [x29, #-96]
  415d34:	stp	x6, x7, [x29, #-80]
  415d38:	stp	q1, q2, [sp, #16]
  415d3c:	str	q0, [sp]
  415d40:	ldp	q0, q1, [x29, #-32]
  415d44:	sub	x2, x29, #0x40
  415d48:	stp	q3, q4, [sp, #48]
  415d4c:	stp	q5, q6, [sp, #80]
  415d50:	str	q7, [sp, #112]
  415d54:	stp	q0, q1, [x29, #-64]
  415d58:	bl	415d68 <ferror@plt+0x131b8>
  415d5c:	ldp	x29, x30, [sp, #240]
  415d60:	add	sp, sp, #0x100
  415d64:	ret
  415d68:	sub	sp, sp, #0x40
  415d6c:	stp	x29, x30, [sp, #32]
  415d70:	stp	x20, x19, [sp, #48]
  415d74:	ldp	q1, q0, [x2]
  415d78:	mov	x8, x1
  415d7c:	mov	x3, sp
  415d80:	mov	w1, #0x1                   	// #1
  415d84:	mov	x2, x8
  415d88:	add	x29, sp, #0x20
  415d8c:	mov	x20, x0
  415d90:	stp	q1, q0, [sp]
  415d94:	bl	4027d0 <__vfprintf_chk@plt>
  415d98:	mov	w19, w0
  415d9c:	tbz	w0, #31, 415dcc <ferror@plt+0x1321c>
  415da0:	mov	x0, x20
  415da4:	bl	402bb0 <ferror@plt>
  415da8:	cbnz	w0, 415dcc <ferror@plt+0x1321c>
  415dac:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  415db0:	ldr	w20, [x8, #892]
  415db4:	bl	402b30 <__errno_location@plt>
  415db8:	ldr	w1, [x0]
  415dbc:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  415dc0:	add	x2, x2, #0xd7f
  415dc4:	mov	w0, w20
  415dc8:	bl	402590 <error@plt>
  415dcc:	mov	w0, w19
  415dd0:	ldp	x20, x19, [sp, #48]
  415dd4:	ldp	x29, x30, [sp, #32]
  415dd8:	add	sp, sp, #0x40
  415ddc:	ret
  415de0:	adds	x8, x0, x1
  415de4:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
  415de8:	ret
  415dec:	stp	x29, x30, [sp, #-32]!
  415df0:	str	x19, [sp, #16]
  415df4:	mov	x29, sp
  415df8:	mov	x19, x2
  415dfc:	bl	415de0 <ferror@plt+0x13230>
  415e00:	mov	x1, x19
  415e04:	bl	415de0 <ferror@plt+0x13230>
  415e08:	ldr	x19, [sp, #16]
  415e0c:	ldp	x29, x30, [sp], #32
  415e10:	ret
  415e14:	stp	x29, x30, [sp, #-32]!
  415e18:	stp	x20, x19, [sp, #16]
  415e1c:	mov	x29, sp
  415e20:	mov	x19, x3
  415e24:	mov	x20, x2
  415e28:	bl	415de0 <ferror@plt+0x13230>
  415e2c:	mov	x1, x20
  415e30:	bl	415de0 <ferror@plt+0x13230>
  415e34:	mov	x1, x19
  415e38:	bl	415de0 <ferror@plt+0x13230>
  415e3c:	ldp	x20, x19, [sp, #16]
  415e40:	ldp	x29, x30, [sp], #32
  415e44:	ret
  415e48:	cmp	x0, x1
  415e4c:	csel	x0, x1, x0, cc  // cc = lo, ul, last
  415e50:	ret
  415e54:	sub	sp, sp, #0x50
  415e58:	stp	x20, x19, [sp, #64]
  415e5c:	mov	x19, x0
  415e60:	mov	x20, x1
  415e64:	mov	x0, xzr
  415e68:	mov	x8, x19
  415e6c:	stp	x29, x30, [sp, #48]
  415e70:	add	x29, sp, #0x30
  415e74:	ldrb	w9, [x8]
  415e78:	cmp	w9, #0x25
  415e7c:	b.ne	415e98 <ferror@plt+0x132e8>  // b.any
  415e80:	ldrb	w9, [x8, #1]
  415e84:	cmp	w9, #0x73
  415e88:	b.ne	415eb8 <ferror@plt+0x13308>  // b.any
  415e8c:	add	x0, x0, #0x1
  415e90:	add	x8, x8, #0x2
  415e94:	b	415e74 <ferror@plt+0x132c4>
  415e98:	cbnz	w9, 415eb8 <ferror@plt+0x13308>
  415e9c:	ldp	q1, q0, [x20]
  415ea0:	add	x1, sp, #0x10
  415ea4:	stp	q1, q0, [sp, #16]
  415ea8:	bl	415f10 <ferror@plt+0x13360>
  415eac:	mov	w8, wzr
  415eb0:	cbnz	w8, 415ec0 <ferror@plt+0x13310>
  415eb4:	b	415efc <ferror@plt+0x1334c>
  415eb8:	mov	w8, #0x1                   	// #1
  415ebc:	cbz	w8, 415efc <ferror@plt+0x1334c>
  415ec0:	ldp	q1, q0, [x20]
  415ec4:	add	x0, sp, #0x8
  415ec8:	add	x3, sp, #0x10
  415ecc:	mov	w1, #0x1                   	// #1
  415ed0:	mov	x2, x19
  415ed4:	stp	q1, q0, [sp, #16]
  415ed8:	bl	402720 <__vasprintf_chk@plt>
  415edc:	tbnz	w0, #31, 415ee8 <ferror@plt+0x13338>
  415ee0:	ldr	x0, [sp, #8]
  415ee4:	b	415efc <ferror@plt+0x1334c>
  415ee8:	bl	402b30 <__errno_location@plt>
  415eec:	ldr	w8, [x0]
  415ef0:	cmp	w8, #0xc
  415ef4:	b.eq	415f0c <ferror@plt+0x1335c>  // b.none
  415ef8:	mov	x0, xzr
  415efc:	ldp	x20, x19, [sp, #64]
  415f00:	ldp	x29, x30, [sp, #48]
  415f04:	add	sp, sp, #0x50
  415f08:	ret
  415f0c:	bl	415a64 <ferror@plt+0x12eb4>
  415f10:	sub	sp, sp, #0x60
  415f14:	stp	x29, x30, [sp, #32]
  415f18:	stp	x24, x23, [sp, #48]
  415f1c:	stp	x22, x21, [sp, #64]
  415f20:	stp	x20, x19, [sp, #80]
  415f24:	ldp	q1, q0, [x1]
  415f28:	mov	x19, x1
  415f2c:	mov	x20, x0
  415f30:	mov	x21, xzr
  415f34:	add	x29, sp, #0x20
  415f38:	stp	q1, q0, [sp]
  415f3c:	cbz	x0, 415f98 <ferror@plt+0x133e8>
  415f40:	ldr	x22, [sp, #8]
  415f44:	mov	x23, x20
  415f48:	b	415f78 <ferror@plt+0x133c8>
  415f4c:	ldr	x8, [sp]
  415f50:	add	x9, x8, #0x8
  415f54:	str	x9, [sp]
  415f58:	ldr	x0, [x8]
  415f5c:	bl	402540 <strlen@plt>
  415f60:	mov	x1, x0
  415f64:	mov	x0, x21
  415f68:	bl	415de0 <ferror@plt+0x13230>
  415f6c:	subs	x23, x23, #0x1
  415f70:	mov	x21, x0
  415f74:	b.eq	415f98 <ferror@plt+0x133e8>  // b.none
  415f78:	ldrsw	x8, [sp, #24]
  415f7c:	tbz	w8, #31, 415f4c <ferror@plt+0x1339c>
  415f80:	add	w9, w8, #0x8
  415f84:	cmp	w9, #0x0
  415f88:	str	w9, [sp, #24]
  415f8c:	b.gt	415f4c <ferror@plt+0x1339c>
  415f90:	add	x8, x22, x8
  415f94:	b	415f58 <ferror@plt+0x133a8>
  415f98:	lsr	x8, x21, #31
  415f9c:	cbz	x8, 415fb4 <ferror@plt+0x13404>
  415fa0:	bl	402b30 <__errno_location@plt>
  415fa4:	mov	w8, #0x4b                  	// #75
  415fa8:	mov	x21, xzr
  415fac:	str	w8, [x0]
  415fb0:	b	416030 <ferror@plt+0x13480>
  415fb4:	add	x0, x21, #0x1
  415fb8:	bl	4157d0 <ferror@plt+0x12c20>
  415fbc:	mov	x21, x0
  415fc0:	mov	x22, x0
  415fc4:	cbz	x20, 41602c <ferror@plt+0x1347c>
  415fc8:	mov	x22, x21
  415fcc:	b	416008 <ferror@plt+0x13458>
  415fd0:	ldr	x8, [x19]
  415fd4:	add	x9, x8, #0x8
  415fd8:	str	x9, [x19]
  415fdc:	ldr	x23, [x8]
  415fe0:	mov	x0, x23
  415fe4:	bl	402540 <strlen@plt>
  415fe8:	mov	x24, x0
  415fec:	mov	x0, x22
  415ff0:	mov	x1, x23
  415ff4:	mov	x2, x24
  415ff8:	bl	402510 <memcpy@plt>
  415ffc:	subs	x20, x20, #0x1
  416000:	add	x22, x22, x24
  416004:	b.eq	41602c <ferror@plt+0x1347c>  // b.none
  416008:	ldrsw	x8, [x19, #24]
  41600c:	tbz	w8, #31, 415fd0 <ferror@plt+0x13420>
  416010:	add	w9, w8, #0x8
  416014:	cmp	w9, #0x0
  416018:	str	w9, [x19, #24]
  41601c:	b.gt	415fd0 <ferror@plt+0x13420>
  416020:	ldr	x9, [x19, #8]
  416024:	add	x8, x9, x8
  416028:	b	415fdc <ferror@plt+0x1342c>
  41602c:	strb	wzr, [x22]
  416030:	mov	x0, x21
  416034:	ldp	x20, x19, [sp, #80]
  416038:	ldp	x22, x21, [sp, #64]
  41603c:	ldp	x24, x23, [sp, #48]
  416040:	ldp	x29, x30, [sp, #32]
  416044:	add	sp, sp, #0x60
  416048:	ret
  41604c:	sub	sp, sp, #0x120
  416050:	stp	x29, x30, [sp, #256]
  416054:	add	x29, sp, #0x100
  416058:	mov	x8, #0xffffffffffffffc8    	// #-56
  41605c:	mov	x9, sp
  416060:	sub	x10, x29, #0x78
  416064:	movk	x8, #0xff80, lsl #32
  416068:	add	x11, x29, #0x20
  41606c:	add	x9, x9, #0x80
  416070:	add	x10, x10, #0x38
  416074:	stp	x9, x8, [x29, #-16]
  416078:	stp	x11, x10, [x29, #-32]
  41607c:	stp	x1, x2, [x29, #-120]
  416080:	stp	x3, x4, [x29, #-104]
  416084:	stp	x5, x6, [x29, #-88]
  416088:	stur	x7, [x29, #-72]
  41608c:	stp	q0, q1, [sp]
  416090:	ldp	q0, q1, [x29, #-32]
  416094:	sub	x1, x29, #0x40
  416098:	str	x28, [sp, #272]
  41609c:	stp	q2, q3, [sp, #32]
  4160a0:	stp	q4, q5, [sp, #64]
  4160a4:	stp	q6, q7, [sp, #96]
  4160a8:	stp	q0, q1, [x29, #-64]
  4160ac:	bl	415e54 <ferror@plt+0x132a4>
  4160b0:	ldr	x28, [sp, #272]
  4160b4:	ldp	x29, x30, [sp, #256]
  4160b8:	add	sp, sp, #0x120
  4160bc:	ret
  4160c0:	stp	x29, x30, [sp, #-32]!
  4160c4:	stp	x20, x19, [sp, #16]
  4160c8:	mov	x29, sp
  4160cc:	mov	x19, x0
  4160d0:	bl	402690 <fileno@plt>
  4160d4:	tbnz	w0, #31, 416118 <ferror@plt+0x13568>
  4160d8:	mov	x0, x19
  4160dc:	bl	402ad0 <__freading@plt>
  4160e0:	cbz	w0, 416100 <ferror@plt+0x13550>
  4160e4:	mov	x0, x19
  4160e8:	bl	402690 <fileno@plt>
  4160ec:	mov	w2, #0x1                   	// #1
  4160f0:	mov	x1, xzr
  4160f4:	bl	402670 <lseek@plt>
  4160f8:	cmn	x0, #0x1
  4160fc:	b.eq	416124 <ferror@plt+0x13574>  // b.none
  416100:	mov	x0, x19
  416104:	bl	416310 <ferror@plt+0x13760>
  416108:	cbz	w0, 416124 <ferror@plt+0x13574>
  41610c:	bl	402b30 <__errno_location@plt>
  416110:	ldr	w20, [x0]
  416114:	b	416128 <ferror@plt+0x13578>
  416118:	mov	x0, x19
  41611c:	bl	4026c0 <fclose@plt>
  416120:	b	416140 <ferror@plt+0x13590>
  416124:	mov	w20, wzr
  416128:	mov	x0, x19
  41612c:	bl	4026c0 <fclose@plt>
  416130:	cbz	w20, 416140 <ferror@plt+0x13590>
  416134:	bl	402b30 <__errno_location@plt>
  416138:	str	w20, [x0]
  41613c:	mov	w0, #0xffffffff            	// #-1
  416140:	ldp	x20, x19, [sp, #16]
  416144:	ldp	x29, x30, [sp], #32
  416148:	ret
  41614c:	sub	sp, sp, #0x100
  416150:	stp	x29, x30, [sp, #208]
  416154:	add	x29, sp, #0xd0
  416158:	mov	x8, #0xffffffffffffffd0    	// #-48
  41615c:	mov	x9, sp
  416160:	movk	x8, #0xff80, lsl #32
  416164:	sub	x10, x29, #0x50
  416168:	add	x9, x9, #0x80
  41616c:	stp	x20, x19, [sp, #240]
  416170:	mov	w19, w0
  416174:	add	x11, x29, #0x30
  416178:	cmp	w1, #0x406
  41617c:	add	x10, x10, #0x30
  416180:	stp	x9, x8, [x29, #-16]
  416184:	mov	x8, #0xffffffffffffffd0    	// #-48
  416188:	stp	x22, x21, [sp, #224]
  41618c:	stp	x2, x3, [x29, #-80]
  416190:	stp	x4, x5, [x29, #-64]
  416194:	stp	x6, x7, [x29, #-48]
  416198:	stp	q1, q2, [sp, #16]
  41619c:	stp	q3, q4, [sp, #48]
  4161a0:	str	q0, [sp]
  4161a4:	stp	q5, q6, [sp, #80]
  4161a8:	str	q7, [sp, #112]
  4161ac:	stp	x11, x10, [x29, #-32]
  4161b0:	b.ne	416234 <ferror@plt+0x13684>  // b.any
  4161b4:	tbz	w8, #31, 4161c8 <ferror@plt+0x13618>
  4161b8:	add	w9, w8, #0x8
  4161bc:	cmp	w9, #0x0
  4161c0:	stur	w9, [x29, #-8]
  4161c4:	b.le	4162f8 <ferror@plt+0x13748>
  4161c8:	ldur	x8, [x29, #-32]
  4161cc:	add	x9, x8, #0x8
  4161d0:	stur	x9, [x29, #-32]
  4161d4:	adrp	x22, 437000 <__progname@@GLIBC_2.17+0xaba8>
  4161d8:	ldr	w9, [x22, #3480]
  4161dc:	ldr	w21, [x8]
  4161e0:	tbnz	w9, #31, 416278 <ferror@plt+0x136c8>
  4161e4:	mov	w1, #0x406                 	// #1030
  4161e8:	mov	w0, w19
  4161ec:	mov	w2, w21
  4161f0:	bl	402a30 <fcntl@plt>
  4161f4:	mov	w20, w0
  4161f8:	tbz	w0, #31, 416268 <ferror@plt+0x136b8>
  4161fc:	bl	402b30 <__errno_location@plt>
  416200:	ldr	w8, [x0]
  416204:	cmp	w8, #0x16
  416208:	b.ne	416268 <ferror@plt+0x136b8>  // b.any
  41620c:	mov	w0, w19
  416210:	mov	w1, wzr
  416214:	mov	w2, w21
  416218:	bl	41614c <ferror@plt+0x1359c>
  41621c:	mov	w20, w0
  416220:	tbnz	w0, #31, 4162e0 <ferror@plt+0x13730>
  416224:	mov	w8, #0xffffffff            	// #-1
  416228:	str	w8, [x22, #3480]
  41622c:	tbz	w20, #31, 416290 <ferror@plt+0x136e0>
  416230:	b	4162e0 <ferror@plt+0x13730>
  416234:	tbz	w8, #31, 416248 <ferror@plt+0x13698>
  416238:	add	w9, w8, #0x8
  41623c:	cmp	w9, #0x0
  416240:	stur	w9, [x29, #-8]
  416244:	b.le	416304 <ferror@plt+0x13754>
  416248:	ldur	x8, [x29, #-32]
  41624c:	add	x9, x8, #0x8
  416250:	stur	x9, [x29, #-32]
  416254:	ldr	x2, [x8]
  416258:	mov	w0, w19
  41625c:	bl	402a30 <fcntl@plt>
  416260:	mov	w20, w0
  416264:	b	4162e0 <ferror@plt+0x13730>
  416268:	mov	w8, #0x1                   	// #1
  41626c:	str	w8, [x22, #3480]
  416270:	tbz	w20, #31, 416290 <ferror@plt+0x136e0>
  416274:	b	4162e0 <ferror@plt+0x13730>
  416278:	mov	w0, w19
  41627c:	mov	w1, wzr
  416280:	mov	w2, w21
  416284:	bl	41614c <ferror@plt+0x1359c>
  416288:	mov	w20, w0
  41628c:	tbnz	w20, #31, 4162e0 <ferror@plt+0x13730>
  416290:	ldr	w8, [x22, #3480]
  416294:	cmn	w8, #0x1
  416298:	b.ne	4162e0 <ferror@plt+0x13730>  // b.any
  41629c:	mov	w1, #0x1                   	// #1
  4162a0:	mov	w0, w20
  4162a4:	bl	402a30 <fcntl@plt>
  4162a8:	tbnz	w0, #31, 4162c4 <ferror@plt+0x13714>
  4162ac:	orr	w2, w0, #0x1
  4162b0:	mov	w1, #0x2                   	// #2
  4162b4:	mov	w0, w20
  4162b8:	bl	402a30 <fcntl@plt>
  4162bc:	cmn	w0, #0x1
  4162c0:	b.ne	4162e0 <ferror@plt+0x13730>  // b.any
  4162c4:	bl	402b30 <__errno_location@plt>
  4162c8:	ldr	w21, [x0]
  4162cc:	mov	x19, x0
  4162d0:	mov	w0, w20
  4162d4:	bl	402860 <close@plt>
  4162d8:	str	w21, [x19]
  4162dc:	mov	w20, #0xffffffff            	// #-1
  4162e0:	mov	w0, w20
  4162e4:	ldp	x20, x19, [sp, #240]
  4162e8:	ldp	x22, x21, [sp, #224]
  4162ec:	ldp	x29, x30, [sp, #208]
  4162f0:	add	sp, sp, #0x100
  4162f4:	ret
  4162f8:	ldur	x9, [x29, #-24]
  4162fc:	add	x8, x9, x8
  416300:	b	4161d4 <ferror@plt+0x13624>
  416304:	ldur	x9, [x29, #-24]
  416308:	add	x8, x9, x8
  41630c:	b	416254 <ferror@plt+0x136a4>
  416310:	stp	x29, x30, [sp, #-32]!
  416314:	str	x19, [sp, #16]
  416318:	mov	x19, x0
  41631c:	mov	x29, sp
  416320:	cbz	x0, 416338 <ferror@plt+0x13788>
  416324:	mov	x0, x19
  416328:	bl	402ad0 <__freading@plt>
  41632c:	cbz	w0, 416338 <ferror@plt+0x13788>
  416330:	mov	x0, x19
  416334:	bl	41634c <ferror@plt+0x1379c>
  416338:	mov	x0, x19
  41633c:	bl	402a40 <fflush@plt>
  416340:	ldr	x19, [sp, #16]
  416344:	ldp	x29, x30, [sp], #32
  416348:	ret
  41634c:	stp	x29, x30, [sp, #-16]!
  416350:	ldrb	w8, [x0, #1]
  416354:	mov	x29, sp
  416358:	tbz	w8, #0, 416368 <ferror@plt+0x137b8>
  41635c:	mov	w2, #0x1                   	// #1
  416360:	mov	x1, xzr
  416364:	bl	4163b0 <ferror@plt+0x13800>
  416368:	ldp	x29, x30, [sp], #16
  41636c:	ret
  416370:	ldp	x9, x8, [x0, #32]
  416374:	cmp	x8, x9
  416378:	b.ls	416384 <ferror@plt+0x137d4>  // b.plast
  41637c:	mov	x0, xzr
  416380:	ret
  416384:	ldp	x9, x8, [x0, #8]
  416388:	ldrb	w10, [x0, #1]
  41638c:	sub	x8, x8, x9
  416390:	tbnz	w10, #0, 41639c <ferror@plt+0x137ec>
  416394:	add	x0, x8, xzr
  416398:	ret
  41639c:	ldr	x9, [x0, #88]
  4163a0:	ldr	x10, [x0, #72]
  4163a4:	sub	x9, x9, x10
  4163a8:	add	x0, x8, x9
  4163ac:	ret
  4163b0:	stp	x29, x30, [sp, #-48]!
  4163b4:	str	x21, [sp, #16]
  4163b8:	stp	x20, x19, [sp, #32]
  4163bc:	ldp	x9, x8, [x0, #8]
  4163c0:	mov	w20, w2
  4163c4:	mov	x19, x0
  4163c8:	mov	x21, x1
  4163cc:	cmp	x8, x9
  4163d0:	mov	x29, sp
  4163d4:	b.ne	4163ec <ferror@plt+0x1383c>  // b.any
  4163d8:	ldp	x9, x8, [x19, #32]
  4163dc:	cmp	x8, x9
  4163e0:	b.ne	4163ec <ferror@plt+0x1383c>  // b.any
  4163e4:	ldr	x8, [x19, #72]
  4163e8:	cbz	x8, 41640c <ferror@plt+0x1385c>
  4163ec:	mov	x0, x19
  4163f0:	mov	x1, x21
  4163f4:	mov	w2, w20
  4163f8:	bl	402980 <fseeko@plt>
  4163fc:	ldp	x20, x19, [sp, #32]
  416400:	ldr	x21, [sp, #16]
  416404:	ldp	x29, x30, [sp], #48
  416408:	ret
  41640c:	mov	x0, x19
  416410:	bl	402690 <fileno@plt>
  416414:	mov	x1, x21
  416418:	mov	w2, w20
  41641c:	bl	402670 <lseek@plt>
  416420:	cmn	x0, #0x1
  416424:	b.eq	4163fc <ferror@plt+0x1384c>  // b.none
  416428:	ldr	w9, [x19]
  41642c:	mov	x8, x0
  416430:	mov	w0, wzr
  416434:	str	x8, [x19, #144]
  416438:	and	w9, w9, #0xffffffef
  41643c:	str	w9, [x19]
  416440:	b	4163fc <ferror@plt+0x1384c>
  416444:	sub	sp, sp, #0x40
  416448:	stp	x29, x30, [sp, #16]
  41644c:	add	x29, sp, #0x10
  416450:	cmp	x0, #0x0
  416454:	sub	x8, x29, #0x4
  416458:	stp	x20, x19, [sp, #48]
  41645c:	csel	x20, x8, x0, eq  // eq = none
  416460:	mov	x0, x20
  416464:	stp	x22, x21, [sp, #32]
  416468:	mov	x22, x2
  41646c:	mov	x19, x1
  416470:	bl	402500 <mbrtowc@plt>
  416474:	mov	x21, x0
  416478:	cbz	x22, 41649c <ferror@plt+0x138ec>
  41647c:	cmn	x21, #0x2
  416480:	b.cc	41649c <ferror@plt+0x138ec>  // b.lo, b.ul, b.last
  416484:	mov	w0, wzr
  416488:	bl	416a64 <_obstack_memory_used@@Base+0x290>
  41648c:	tbnz	w0, #0, 41649c <ferror@plt+0x138ec>
  416490:	ldrb	w8, [x19]
  416494:	mov	w21, #0x1                   	// #1
  416498:	str	w8, [x20]
  41649c:	mov	x0, x21
  4164a0:	ldp	x20, x19, [sp, #48]
  4164a4:	ldp	x22, x21, [sp, #32]
  4164a8:	ldp	x29, x30, [sp, #16]
  4164ac:	add	sp, sp, #0x40
  4164b0:	ret

00000000004164b4 <_obstack_begin@@Base>:
  4164b4:	stp	x29, x30, [sp, #-16]!
  4164b8:	ldrb	w8, [x0, #80]
  4164bc:	mov	x29, sp
  4164c0:	stp	x3, x4, [x0, #56]
  4164c4:	and	w8, w8, #0xfe
  4164c8:	strb	w8, [x0, #80]
  4164cc:	bl	4164dc <_obstack_begin@@Base+0x28>
  4164d0:	mov	w0, #0x1                   	// #1
  4164d4:	ldp	x29, x30, [sp], #16
  4164d8:	ret
  4164dc:	stp	x29, x30, [sp, #-48]!
  4164e0:	cmp	x2, #0x0
  4164e4:	mov	w8, #0x10                  	// #16
  4164e8:	stp	x20, x19, [sp, #32]
  4164ec:	mov	w9, #0xfe0                 	// #4064
  4164f0:	csel	x20, x8, x2, eq  // eq = none
  4164f4:	cmp	x1, #0x0
  4164f8:	str	x21, [sp, #16]
  4164fc:	csel	x1, x9, x1, eq  // eq = none
  416500:	sub	x21, x20, #0x1
  416504:	mov	x29, sp
  416508:	mov	x19, x0
  41650c:	str	x1, [x0]
  416510:	str	x21, [x0, #48]
  416514:	bl	4166ac <_obstack_newchunk@@Base+0x110>
  416518:	str	x0, [x19, #8]
  41651c:	cbz	x0, 416564 <_obstack_begin@@Base+0xb0>
  416520:	ldr	x10, [x19]
  416524:	add	x8, x0, x21
  416528:	neg	x9, x20
  41652c:	add	x8, x8, #0x10
  416530:	and	x8, x8, x9
  416534:	stp	x8, x8, [x19, #16]
  416538:	add	x8, x0, x10
  41653c:	str	x8, [x0]
  416540:	str	x8, [x19, #32]
  416544:	str	xzr, [x0, #8]
  416548:	ldrb	w8, [x19, #80]
  41654c:	ldr	x21, [sp, #16]
  416550:	and	w8, w8, #0xfffffff9
  416554:	strb	w8, [x19, #80]
  416558:	ldp	x20, x19, [sp, #32]
  41655c:	ldp	x29, x30, [sp], #48
  416560:	ret
  416564:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  416568:	ldr	x8, [x8, #1048]
  41656c:	blr	x8

0000000000416570 <_obstack_begin_1@@Base>:
  416570:	stp	x29, x30, [sp, #-16]!
  416574:	ldrb	w8, [x0, #80]
  416578:	mov	x29, sp
  41657c:	stp	x3, x4, [x0, #56]
  416580:	str	x5, [x0, #72]
  416584:	orr	w8, w8, #0x1
  416588:	strb	w8, [x0, #80]
  41658c:	bl	4164dc <_obstack_begin@@Base+0x28>
  416590:	mov	w0, #0x1                   	// #1
  416594:	ldp	x29, x30, [sp], #16
  416598:	ret

000000000041659c <_obstack_newchunk@@Base>:
  41659c:	stp	x29, x30, [sp, #-64]!
  4165a0:	str	x23, [sp, #16]
  4165a4:	stp	x22, x21, [sp, #32]
  4165a8:	stp	x20, x19, [sp, #48]
  4165ac:	ldp	x9, x8, [x0, #16]
  4165b0:	ldr	x10, [x0, #48]
  4165b4:	ldp	x11, x21, [x0]
  4165b8:	mov	x19, x0
  4165bc:	sub	x20, x8, x9
  4165c0:	adds	x8, x20, x1
  4165c4:	lsr	x9, x20, #3
  4165c8:	cset	w12, cs  // cs = hs, nlast
  4165cc:	adds	x10, x8, x10
  4165d0:	add	x9, x9, #0x64
  4165d4:	cset	w8, cs  // cs = hs, nlast
  4165d8:	adds	x9, x9, x10
  4165dc:	csel	x9, x10, x9, cs  // cs = hs, nlast
  4165e0:	cmp	x9, x11
  4165e4:	mov	x22, xzr
  4165e8:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  4165ec:	mov	x29, sp
  4165f0:	tbnz	w12, #0, 416608 <_obstack_newchunk@@Base+0x6c>
  4165f4:	tbnz	w8, #0, 416608 <_obstack_newchunk@@Base+0x6c>
  4165f8:	mov	x0, x19
  4165fc:	mov	x1, x23
  416600:	bl	4166ac <_obstack_newchunk@@Base+0x110>
  416604:	mov	x22, x0
  416608:	cbz	x22, 4166a0 <_obstack_newchunk@@Base+0x104>
  41660c:	add	x8, x22, x23
  416610:	str	x22, [x19, #8]
  416614:	str	x21, [x22, #8]
  416618:	str	x8, [x19, #32]
  41661c:	str	x8, [x22]
  416620:	ldr	x8, [x19, #48]
  416624:	ldr	x1, [x19, #16]
  416628:	mov	x2, x20
  41662c:	add	x9, x22, x8
  416630:	add	x9, x9, #0x10
  416634:	bic	x23, x9, x8
  416638:	mov	x0, x23
  41663c:	bl	402510 <memcpy@plt>
  416640:	ldrb	w8, [x19, #80]
  416644:	tbnz	w8, #1, 416678 <_obstack_newchunk@@Base+0xdc>
  416648:	ldr	x8, [x19, #48]
  41664c:	ldr	x9, [x19, #16]
  416650:	add	x10, x21, x8
  416654:	add	x10, x10, #0x10
  416658:	bic	x8, x10, x8
  41665c:	cmp	x9, x8
  416660:	b.ne	416678 <_obstack_newchunk@@Base+0xdc>  // b.any
  416664:	ldr	x8, [x21, #8]
  416668:	mov	x0, x19
  41666c:	mov	x1, x21
  416670:	str	x8, [x22, #8]
  416674:	bl	4166e4 <_obstack_newchunk@@Base+0x148>
  416678:	ldrb	w8, [x19, #80]
  41667c:	add	x9, x23, x20
  416680:	stp	x23, x9, [x19, #16]
  416684:	ldr	x23, [sp, #16]
  416688:	and	w8, w8, #0xfffffffd
  41668c:	strb	w8, [x19, #80]
  416690:	ldp	x20, x19, [sp, #48]
  416694:	ldp	x22, x21, [sp, #32]
  416698:	ldp	x29, x30, [sp], #64
  41669c:	ret
  4166a0:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  4166a4:	ldr	x8, [x8, #1048]
  4166a8:	blr	x8
  4166ac:	stp	x29, x30, [sp, #-16]!
  4166b0:	ldrb	w8, [x0, #80]
  4166b4:	mov	x29, sp
  4166b8:	tbnz	w8, #0, 4166d0 <_obstack_newchunk@@Base+0x134>
  4166bc:	ldr	x8, [x0, #56]
  4166c0:	mov	x0, x1
  4166c4:	blr	x8
  4166c8:	ldp	x29, x30, [sp], #16
  4166cc:	ret
  4166d0:	ldr	x8, [x0, #56]
  4166d4:	ldr	x0, [x0, #72]
  4166d8:	blr	x8
  4166dc:	ldp	x29, x30, [sp], #16
  4166e0:	ret
  4166e4:	stp	x29, x30, [sp, #-16]!
  4166e8:	ldrb	w8, [x0, #80]
  4166ec:	mov	x29, sp
  4166f0:	tbnz	w8, #0, 416708 <_obstack_newchunk@@Base+0x16c>
  4166f4:	ldr	x8, [x0, #64]
  4166f8:	mov	x0, x1
  4166fc:	blr	x8
  416700:	ldp	x29, x30, [sp], #16
  416704:	ret
  416708:	ldp	x8, x0, [x0, #64]
  41670c:	blr	x8
  416710:	ldp	x29, x30, [sp], #16
  416714:	ret

0000000000416718 <_obstack_allocated_p@@Base>:
  416718:	ldr	x8, [x0, #8]
  41671c:	b	416724 <_obstack_allocated_p@@Base+0xc>
  416720:	ldr	x8, [x8, #8]
  416724:	cmp	x8, #0x0
  416728:	cset	w9, ne  // ne = any
  41672c:	cbz	x8, 416744 <_obstack_allocated_p@@Base+0x2c>
  416730:	cmp	x8, x1
  416734:	b.cs	416720 <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  416738:	ldr	x10, [x8]
  41673c:	cmp	x10, x1
  416740:	b.cc	416720 <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  416744:	and	w0, w9, #0x1
  416748:	ret

000000000041674c <_obstack_free@@Base>:
  41674c:	stp	x29, x30, [sp, #-48]!
  416750:	stp	x20, x19, [sp, #32]
  416754:	ldr	x8, [x0, #8]
  416758:	mov	x20, x1
  41675c:	str	x21, [sp, #16]
  416760:	mov	x29, sp
  416764:	cbz	x8, 4167bc <_obstack_free@@Base+0x70>
  416768:	mov	x19, x0
  41676c:	b	416794 <_obstack_free@@Base+0x48>
  416770:	ldr	x21, [x8, #8]
  416774:	mov	x0, x19
  416778:	mov	x1, x8
  41677c:	bl	4166e4 <_obstack_newchunk@@Base+0x148>
  416780:	ldrb	w8, [x19, #80]
  416784:	orr	w8, w8, #0x2
  416788:	strb	w8, [x19, #80]
  41678c:	mov	x8, x21
  416790:	cbz	x21, 4167bc <_obstack_free@@Base+0x70>
  416794:	cmp	x8, x20
  416798:	b.cs	416770 <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  41679c:	ldr	x9, [x8]
  4167a0:	cmp	x9, x20
  4167a4:	b.cc	416770 <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  4167a8:	stp	x20, x20, [x19, #16]
  4167ac:	ldr	x9, [x8]
  4167b0:	str	x8, [x19, #8]
  4167b4:	str	x9, [x19, #32]
  4167b8:	b	4167c0 <_obstack_free@@Base+0x74>
  4167bc:	cbnz	x20, 4167d0 <_obstack_free@@Base+0x84>
  4167c0:	ldp	x20, x19, [sp, #32]
  4167c4:	ldr	x21, [sp, #16]
  4167c8:	ldp	x29, x30, [sp], #48
  4167cc:	ret
  4167d0:	bl	4028d0 <abort@plt>

00000000004167d4 <_obstack_memory_used@@Base>:
  4167d4:	ldr	x8, [x0, #8]
  4167d8:	cbz	x8, 4167f4 <_obstack_memory_used@@Base+0x20>
  4167dc:	mov	x0, xzr
  4167e0:	sub	x10, x0, x8
  4167e4:	ldp	x9, x8, [x8]
  4167e8:	add	x0, x10, x9
  4167ec:	cbnz	x8, 4167e0 <_obstack_memory_used@@Base+0xc>
  4167f0:	ret
  4167f4:	mov	x0, xzr
  4167f8:	ret
  4167fc:	stp	x29, x30, [sp, #-16]!
  416800:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  416804:	ldr	x0, [x8, #1064]
  416808:	adrp	x2, 41a000 <_obstack_memory_used@@Base+0x382c>
  41680c:	adrp	x3, 41a000 <_obstack_memory_used@@Base+0x382c>
  416810:	add	x2, x2, #0xa31
  416814:	add	x3, x3, #0xd6e
  416818:	mov	w1, #0x1                   	// #1
  41681c:	mov	x29, sp
  416820:	bl	402930 <__fprintf_chk@plt>
  416824:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x1582c>
  416828:	ldr	w0, [x8, #892]
  41682c:	bl	402570 <exit@plt>
  416830:	sub	w9, w0, #0x41
  416834:	mov	w8, w0
  416838:	cmp	w9, #0x39
  41683c:	mov	w0, #0x1                   	// #1
  416840:	b.hi	416858 <_obstack_memory_used@@Base+0x84>  // b.pmore
  416844:	mov	w10, #0x1                   	// #1
  416848:	lsl	x9, x10, x9
  41684c:	tst	x9, #0x3ffffff03ffffff
  416850:	b.eq	416858 <_obstack_memory_used@@Base+0x84>  // b.none
  416854:	ret
  416858:	sub	w8, w8, #0x30
  41685c:	cmp	w8, #0xa
  416860:	b.cc	416854 <_obstack_memory_used@@Base+0x80>  // b.lo, b.ul, b.last
  416864:	mov	w0, wzr
  416868:	ret
  41686c:	sub	w8, w0, #0x41
  416870:	cmp	w8, #0x39
  416874:	b.hi	416888 <_obstack_memory_used@@Base+0xb4>  // b.pmore
  416878:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  41687c:	lsr	x8, x9, x8
  416880:	and	w0, w8, #0x1
  416884:	ret
  416888:	mov	w0, wzr
  41688c:	ret
  416890:	cmp	w0, #0x80
  416894:	cset	w0, cc  // cc = lo, ul, last
  416898:	ret
  41689c:	cmp	w0, #0x20
  4168a0:	cset	w8, eq  // eq = none
  4168a4:	cmp	w0, #0x9
  4168a8:	cset	w9, eq  // eq = none
  4168ac:	orr	w0, w8, w9
  4168b0:	ret
  4168b4:	mov	w8, w0
  4168b8:	cmp	w0, #0x20
  4168bc:	mov	w0, #0x1                   	// #1
  4168c0:	b.cs	4168c8 <_obstack_memory_used@@Base+0xf4>  // b.hs, b.nlast
  4168c4:	ret
  4168c8:	cmp	w8, #0x7f
  4168cc:	b.eq	4168c4 <_obstack_memory_used@@Base+0xf0>  // b.none
  4168d0:	mov	w0, wzr
  4168d4:	ret
  4168d8:	sub	w8, w0, #0x30
  4168dc:	cmp	w8, #0xa
  4168e0:	cset	w0, cc  // cc = lo, ul, last
  4168e4:	ret
  4168e8:	sub	w8, w0, #0x21
  4168ec:	cmp	w8, #0x5e
  4168f0:	cset	w0, cc  // cc = lo, ul, last
  4168f4:	ret
  4168f8:	sub	w8, w0, #0x61
  4168fc:	cmp	w8, #0x1a
  416900:	cset	w0, cc  // cc = lo, ul, last
  416904:	ret
  416908:	sub	w8, w0, #0x20
  41690c:	cmp	w8, #0x5f
  416910:	cset	w0, cc  // cc = lo, ul, last
  416914:	ret
  416918:	sub	w8, w0, #0x21
  41691c:	cmp	w8, #0x5d
  416920:	b.hi	416944 <_obstack_memory_used@@Base+0x170>  // b.pmore
  416924:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x382c>
  416928:	add	x9, x9, #0xd9f
  41692c:	adr	x10, 416940 <_obstack_memory_used@@Base+0x16c>
  416930:	ldrb	w11, [x9, x8]
  416934:	add	x10, x10, x11, lsl #2
  416938:	mov	w0, #0x1                   	// #1
  41693c:	br	x10
  416940:	ret
  416944:	mov	w0, wzr
  416948:	ret
  41694c:	sub	w8, w0, #0x9
  416950:	cmp	w8, #0x17
  416954:	b.hi	41696c <_obstack_memory_used@@Base+0x198>  // b.pmore
  416958:	mov	w9, #0x1f                  	// #31
  41695c:	movk	w9, #0x80, lsl #16
  416960:	lsr	w8, w9, w8
  416964:	and	w0, w8, #0x1
  416968:	ret
  41696c:	mov	w0, wzr
  416970:	ret
  416974:	sub	w8, w0, #0x41
  416978:	cmp	w8, #0x1a
  41697c:	cset	w0, cc  // cc = lo, ul, last
  416980:	ret
  416984:	sub	w8, w0, #0x30
  416988:	cmp	w8, #0x36
  41698c:	b.hi	4169a4 <_obstack_memory_used@@Base+0x1d0>  // b.pmore
  416990:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  416994:	movk	x9, #0x3ff
  416998:	lsr	x8, x9, x8
  41699c:	and	w0, w8, #0x1
  4169a0:	ret
  4169a4:	mov	w0, wzr
  4169a8:	ret
  4169ac:	sub	w8, w0, #0x41
  4169b0:	add	w9, w0, #0x20
  4169b4:	cmp	w8, #0x1a
  4169b8:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  4169bc:	ret
  4169c0:	sub	w8, w0, #0x61
  4169c4:	sub	w9, w0, #0x20
  4169c8:	cmp	w8, #0x1a
  4169cc:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  4169d0:	ret
  4169d4:	sub	x0, x0, #0x1
  4169d8:	ldrb	w8, [x0, #1]!
  4169dc:	cmp	w8, #0x2f
  4169e0:	b.eq	4169d8 <_obstack_memory_used@@Base+0x204>  // b.none
  4169e4:	mov	w8, wzr
  4169e8:	mov	x9, x0
  4169ec:	b	4169f8 <_obstack_memory_used@@Base+0x224>
  4169f0:	mov	w8, #0x1                   	// #1
  4169f4:	add	x9, x9, #0x1
  4169f8:	ldrb	w10, [x9]
  4169fc:	cmp	w10, #0x2f
  416a00:	b.eq	4169f0 <_obstack_memory_used@@Base+0x21c>  // b.none
  416a04:	cbz	w10, 416a1c <_obstack_memory_used@@Base+0x248>
  416a08:	tst	w8, #0x1
  416a0c:	mov	w8, wzr
  416a10:	csel	x0, x9, x0, ne  // ne = any
  416a14:	add	x9, x9, #0x1
  416a18:	b	4169f8 <_obstack_memory_used@@Base+0x224>
  416a1c:	ret
  416a20:	stp	x29, x30, [sp, #-32]!
  416a24:	str	x19, [sp, #16]
  416a28:	mov	x29, sp
  416a2c:	mov	x19, x0
  416a30:	bl	402540 <strlen@plt>
  416a34:	mov	x8, x0
  416a38:	sub	x9, x19, #0x1
  416a3c:	mov	x0, x8
  416a40:	cmp	x8, #0x2
  416a44:	b.cc	416a58 <_obstack_memory_used@@Base+0x284>  // b.lo, b.ul, b.last
  416a48:	ldrb	w8, [x9, x0]
  416a4c:	cmp	w8, #0x2f
  416a50:	sub	x8, x0, #0x1
  416a54:	b.eq	416a3c <_obstack_memory_used@@Base+0x268>  // b.none
  416a58:	ldr	x19, [sp, #16]
  416a5c:	ldp	x29, x30, [sp], #32
  416a60:	ret
  416a64:	stp	x29, x30, [sp, #-32]!
  416a68:	mov	x1, xzr
  416a6c:	str	x19, [sp, #16]
  416a70:	mov	x29, sp
  416a74:	bl	402ba0 <setlocale@plt>
  416a78:	cbz	x0, 416aa4 <_obstack_memory_used@@Base+0x2d0>
  416a7c:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  416a80:	add	x1, x1, #0xdfd
  416a84:	mov	x19, x0
  416a88:	bl	402940 <strcmp@plt>
  416a8c:	cbz	w0, 416aac <_obstack_memory_used@@Base+0x2d8>
  416a90:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x382c>
  416a94:	add	x1, x1, #0xdff
  416a98:	mov	x0, x19
  416a9c:	bl	402940 <strcmp@plt>
  416aa0:	cbz	w0, 416aac <_obstack_memory_used@@Base+0x2d8>
  416aa4:	mov	w0, #0x1                   	// #1
  416aa8:	b	416ab0 <_obstack_memory_used@@Base+0x2dc>
  416aac:	mov	w0, wzr
  416ab0:	ldr	x19, [sp, #16]
  416ab4:	ldp	x29, x30, [sp], #32
  416ab8:	ret
  416abc:	stp	x29, x30, [sp, #-48]!
  416ac0:	mov	w0, #0xe                   	// #14
  416ac4:	str	x21, [sp, #16]
  416ac8:	stp	x20, x19, [sp, #32]
  416acc:	mov	x29, sp
  416ad0:	bl	4026e0 <nl_langinfo@plt>
  416ad4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x182c>
  416ad8:	add	x8, x8, #0xe37
  416adc:	cmp	x0, #0x0
  416ae0:	csel	x19, x8, x0, eq  // eq = none
  416ae4:	bl	416b74 <_obstack_memory_used@@Base+0x3a0>
  416ae8:	ldrb	w21, [x0]
  416aec:	cbz	w21, 416b50 <_obstack_memory_used@@Base+0x37c>
  416af0:	mov	x20, x0
  416af4:	b	416b1c <_obstack_memory_used@@Base+0x348>
  416af8:	mov	x0, x20
  416afc:	bl	402540 <strlen@plt>
  416b00:	add	x8, x0, x20
  416b04:	add	x20, x8, #0x1
  416b08:	mov	x0, x20
  416b0c:	bl	402540 <strlen@plt>
  416b10:	add	x20, x0, x20
  416b14:	ldrb	w21, [x20, #1]!
  416b18:	cbz	w21, 416b50 <_obstack_memory_used@@Base+0x37c>
  416b1c:	mov	x0, x19
  416b20:	mov	x1, x20
  416b24:	bl	402940 <strcmp@plt>
  416b28:	cbz	w0, 416b40 <_obstack_memory_used@@Base+0x36c>
  416b2c:	and	w8, w21, #0xff
  416b30:	cmp	w8, #0x2a
  416b34:	b.ne	416af8 <_obstack_memory_used@@Base+0x324>  // b.any
  416b38:	ldrb	w8, [x20, #1]
  416b3c:	cbnz	w8, 416af8 <_obstack_memory_used@@Base+0x324>
  416b40:	mov	x0, x20
  416b44:	bl	402540 <strlen@plt>
  416b48:	add	x8, x20, x0
  416b4c:	add	x19, x8, #0x1
  416b50:	ldrb	w8, [x19]
  416b54:	adrp	x9, 41a000 <_obstack_memory_used@@Base+0x382c>
  416b58:	add	x9, x9, #0xe2a
  416b5c:	ldr	x21, [sp, #16]
  416b60:	cmp	w8, #0x0
  416b64:	csel	x0, x9, x19, eq  // eq = none
  416b68:	ldp	x20, x19, [sp, #32]
  416b6c:	ldp	x29, x30, [sp], #48
  416b70:	ret
  416b74:	sub	sp, sp, #0xd0
  416b78:	stp	x29, x30, [sp, #112]
  416b7c:	stp	x28, x27, [sp, #128]
  416b80:	stp	x26, x25, [sp, #144]
  416b84:	stp	x24, x23, [sp, #160]
  416b88:	stp	x22, x21, [sp, #176]
  416b8c:	stp	x20, x19, [sp, #192]
  416b90:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  416b94:	ldr	x20, [x23, #3488]
  416b98:	add	x29, sp, #0x70
  416b9c:	cbnz	x20, 416dcc <_obstack_memory_used@@Base+0x5f8>
  416ba0:	adrp	x0, 41a000 <_obstack_memory_used@@Base+0x382c>
  416ba4:	add	x0, x0, #0xe3e
  416ba8:	bl	402b40 <getenv@plt>
  416bac:	cbz	x0, 416bbc <_obstack_memory_used@@Base+0x3e8>
  416bb0:	ldrb	w8, [x0]
  416bb4:	mov	x20, x0
  416bb8:	cbnz	w8, 416bc4 <_obstack_memory_used@@Base+0x3f0>
  416bbc:	adrp	x20, 41a000 <_obstack_memory_used@@Base+0x382c>
  416bc0:	add	x20, x20, #0xe4e
  416bc4:	mov	x0, x20
  416bc8:	bl	402540 <strlen@plt>
  416bcc:	mov	x21, x0
  416bd0:	cbz	x0, 416be8 <_obstack_memory_used@@Base+0x414>
  416bd4:	add	x8, x21, x20
  416bd8:	ldurb	w8, [x8, #-1]
  416bdc:	cmp	w8, #0x2f
  416be0:	cset	w22, ne  // ne = any
  416be4:	b	416bec <_obstack_memory_used@@Base+0x418>
  416be8:	mov	w22, wzr
  416bec:	add	x8, x21, x22
  416bf0:	add	x0, x8, #0xe
  416bf4:	bl	402700 <malloc@plt>
  416bf8:	cbz	x0, 416d8c <_obstack_memory_used@@Base+0x5b8>
  416bfc:	mov	x1, x20
  416c00:	mov	x2, x21
  416c04:	mov	x19, x0
  416c08:	bl	402510 <memcpy@plt>
  416c0c:	cbz	x22, 416c18 <_obstack_memory_used@@Base+0x444>
  416c10:	mov	w8, #0x2f                  	// #47
  416c14:	strb	w8, [x19, x21]
  416c18:	adrp	x8, 41a000 <_obstack_memory_used@@Base+0x382c>
  416c1c:	add	x8, x8, #0xe30
  416c20:	ldur	x9, [x8, #6]
  416c24:	ldr	x8, [x8]
  416c28:	add	x10, x19, x21
  416c2c:	add	x10, x10, x22
  416c30:	mov	w1, #0x8000                	// #32768
  416c34:	mov	x0, x19
  416c38:	stur	x9, [x10, #6]
  416c3c:	str	x8, [x10]
  416c40:	bl	402710 <open@plt>
  416c44:	tbnz	w0, #31, 416db8 <_obstack_memory_used@@Base+0x5e4>
  416c48:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x282c>
  416c4c:	add	x1, x1, #0x284
  416c50:	mov	w20, w0
  416c54:	bl	4027b0 <fdopen@plt>
  416c58:	cbz	x0, 416db0 <_obstack_memory_used@@Base+0x5dc>
  416c5c:	adrp	x26, 41a000 <_obstack_memory_used@@Base+0x382c>
  416c60:	adrp	x27, 41a000 <_obstack_memory_used@@Base+0x382c>
  416c64:	mov	x21, x0
  416c68:	mov	x22, xzr
  416c6c:	mov	x20, xzr
  416c70:	add	x26, x26, #0xe57
  416c74:	add	x27, x27, #0xe05
  416c78:	b	416c84 <_obstack_memory_used@@Base+0x4b0>
  416c7c:	mov	w8, wzr
  416c80:	cbnz	w8, 416d98 <_obstack_memory_used@@Base+0x5c4>
  416c84:	mov	x0, x21
  416c88:	bl	402850 <getc_unlocked@plt>
  416c8c:	add	w8, w0, #0x1
  416c90:	cmp	w8, #0x24
  416c94:	b.hi	416cc8 <_obstack_memory_used@@Base+0x4f4>  // b.pmore
  416c98:	adr	x9, 416c7c <_obstack_memory_used@@Base+0x4a8>
  416c9c:	ldrb	w10, [x27, x8]
  416ca0:	add	x9, x9, x10, lsl #2
  416ca4:	mov	w8, #0x1                   	// #1
  416ca8:	br	x9
  416cac:	mov	x0, x21
  416cb0:	bl	402850 <getc_unlocked@plt>
  416cb4:	cmn	w0, #0x1
  416cb8:	b.eq	416d84 <_obstack_memory_used@@Base+0x5b0>  // b.none
  416cbc:	cmp	w0, #0xa
  416cc0:	b.ne	416cac <_obstack_memory_used@@Base+0x4d8>  // b.any
  416cc4:	b	416c7c <_obstack_memory_used@@Base+0x4a8>
  416cc8:	mov	x1, x21
  416ccc:	bl	4029b0 <ungetc@plt>
  416cd0:	sub	x2, x29, #0x34
  416cd4:	add	x3, sp, #0x8
  416cd8:	mov	x0, x21
  416cdc:	mov	x1, x26
  416ce0:	bl	402730 <__isoc99_fscanf@plt>
  416ce4:	cmp	w0, #0x2
  416ce8:	b.lt	416d84 <_obstack_memory_used@@Base+0x5b0>  // b.tstop
  416cec:	sub	x0, x29, #0x34
  416cf0:	bl	402540 <strlen@plt>
  416cf4:	mov	x23, x0
  416cf8:	add	x0, sp, #0x8
  416cfc:	bl	402540 <strlen@plt>
  416d00:	add	x8, x23, x0
  416d04:	mov	x24, x0
  416d08:	add	x28, x8, #0x2
  416d0c:	cbz	x22, 416d5c <_obstack_memory_used@@Base+0x588>
  416d10:	add	x22, x28, x22
  416d14:	add	x1, x22, #0x1
  416d18:	mov	x0, x20
  416d1c:	bl	402810 <realloc@plt>
  416d20:	mov	x25, x0
  416d24:	cbz	x25, 416d74 <_obstack_memory_used@@Base+0x5a0>
  416d28:	add	x8, x25, x22
  416d2c:	mvn	x9, x24
  416d30:	add	x20, x8, x9
  416d34:	mvn	x8, x23
  416d38:	add	x0, x20, x8
  416d3c:	sub	x1, x29, #0x34
  416d40:	bl	402a50 <strcpy@plt>
  416d44:	add	x1, sp, #0x8
  416d48:	mov	x0, x20
  416d4c:	bl	402a50 <strcpy@plt>
  416d50:	mov	w8, wzr
  416d54:	mov	x20, x25
  416d58:	b	416c80 <_obstack_memory_used@@Base+0x4ac>
  416d5c:	add	x8, x8, #0x1
  416d60:	add	x0, x8, #0x2
  416d64:	bl	402700 <malloc@plt>
  416d68:	mov	x25, x0
  416d6c:	mov	x22, x28
  416d70:	cbnz	x25, 416d28 <_obstack_memory_used@@Base+0x554>
  416d74:	mov	x0, x20
  416d78:	bl	4029a0 <free@plt>
  416d7c:	mov	x22, xzr
  416d80:	mov	x20, xzr
  416d84:	mov	w8, #0x1                   	// #1
  416d88:	b	416c80 <_obstack_memory_used@@Base+0x4ac>
  416d8c:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x182c>
  416d90:	add	x20, x20, #0xe37
  416d94:	b	416dc8 <_obstack_memory_used@@Base+0x5f4>
  416d98:	mov	x0, x21
  416d9c:	bl	4160c0 <ferror@plt+0x13510>
  416da0:	adrp	x23, 437000 <__progname@@GLIBC_2.17+0xaba8>
  416da4:	cbz	x22, 416db8 <_obstack_memory_used@@Base+0x5e4>
  416da8:	strb	wzr, [x20, x22]
  416dac:	b	416dc0 <_obstack_memory_used@@Base+0x5ec>
  416db0:	mov	w0, w20
  416db4:	bl	402860 <close@plt>
  416db8:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x182c>
  416dbc:	add	x20, x20, #0xe37
  416dc0:	mov	x0, x19
  416dc4:	bl	4029a0 <free@plt>
  416dc8:	str	x20, [x23, #3488]
  416dcc:	mov	x0, x20
  416dd0:	ldp	x20, x19, [sp, #192]
  416dd4:	ldp	x22, x21, [sp, #176]
  416dd8:	ldp	x24, x23, [sp, #160]
  416ddc:	ldp	x26, x25, [sp, #144]
  416de0:	ldp	x28, x27, [sp, #128]
  416de4:	ldp	x29, x30, [sp, #112]
  416de8:	add	sp, sp, #0xd0
  416dec:	ret
  416df0:	stp	x29, x30, [sp, #-64]!
  416df4:	str	x23, [sp, #16]
  416df8:	stp	x22, x21, [sp, #32]
  416dfc:	stp	x20, x19, [sp, #48]
  416e00:	mov	x29, sp
  416e04:	umulh	x8, x2, x0
  416e08:	eor	x9, x1, #0x8000000000000000
  416e0c:	madd	x8, x2, x1, x8
  416e10:	mov	x19, x4
  416e14:	orr	x9, x0, x9
  416e18:	madd	x20, x3, x0, x8
  416e1c:	mul	x21, x2, x0
  416e20:	str	wzr, [x4]
  416e24:	cbnz	x9, 416e38 <_obstack_memory_used@@Base+0x664>
  416e28:	cmp	x2, #0x2
  416e2c:	cset	w8, cc  // cc = lo, ul, last
  416e30:	cmp	x3, #0x0
  416e34:	b	416e50 <_obstack_memory_used@@Base+0x67c>
  416e38:	eor	x8, x3, #0x8000000000000000
  416e3c:	orr	x8, x2, x8
  416e40:	cbnz	x8, 416e7c <_obstack_memory_used@@Base+0x6a8>
  416e44:	cmp	x0, #0x2
  416e48:	cset	w8, cc  // cc = lo, ul, last
  416e4c:	cmp	x1, #0x0
  416e50:	csel	w8, w8, wzr, eq  // eq = none
  416e54:	tbnz	w8, #0, 416e60 <_obstack_memory_used@@Base+0x68c>
  416e58:	mov	w8, #0x1                   	// #1
  416e5c:	str	w8, [x19]
  416e60:	mov	x0, x21
  416e64:	mov	x1, x20
  416e68:	ldp	x20, x19, [sp, #48]
  416e6c:	ldp	x22, x21, [sp, #32]
  416e70:	ldr	x23, [sp, #16]
  416e74:	ldp	x29, x30, [sp], #64
  416e78:	ret
  416e7c:	asr	x8, x1, #63
  416e80:	eor	x11, x8, x0
  416e84:	asr	x9, x3, #63
  416e88:	eor	x10, x8, x1
  416e8c:	subs	x23, x11, x8
  416e90:	eor	x13, x9, x2
  416e94:	sbcs	x22, x10, x8
  416e98:	eor	x12, x9, x3
  416e9c:	subs	x2, x13, x9
  416ea0:	sbcs	x3, x12, x9
  416ea4:	cmp	x23, #0x2
  416ea8:	cset	w10, cc  // cc = lo, ul, last
  416eac:	cmp	x22, #0x0
  416eb0:	cset	w11, lt  // lt = tstop
  416eb4:	csel	w10, w10, w11, eq  // eq = none
  416eb8:	tbnz	w10, #0, 416e60 <_obstack_memory_used@@Base+0x68c>
  416ebc:	cmp	x2, #0x2
  416ec0:	cset	w10, cc  // cc = lo, ul, last
  416ec4:	cmp	x3, #0x0
  416ec8:	cset	w11, lt  // lt = tstop
  416ecc:	csel	w10, w10, w11, eq  // eq = none
  416ed0:	tbnz	w10, #0, 416e60 <_obstack_memory_used@@Base+0x68c>
  416ed4:	eor	x8, x8, x9
  416ed8:	orr	x8, x8, x8
  416edc:	cbnz	x8, 416eec <_obstack_memory_used@@Base+0x718>
  416ee0:	mov	x0, #0xffffffffffffffff    	// #-1
  416ee4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  416ee8:	b	416efc <_obstack_memory_used@@Base+0x728>
  416eec:	negs	x2, x2
  416ef0:	ngcs	x3, x3
  416ef4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  416ef8:	mov	x0, xzr
  416efc:	bl	416f1c <_obstack_memory_used@@Base+0x748>
  416f00:	cmp	x23, x0
  416f04:	cset	w8, ls  // ls = plast
  416f08:	cmp	x22, x1
  416f0c:	cset	w9, le
  416f10:	csel	w8, w8, w9, eq  // eq = none
  416f14:	tbz	w8, #0, 416e58 <_obstack_memory_used@@Base+0x684>
  416f18:	b	416e60 <_obstack_memory_used@@Base+0x68c>
  416f1c:	stp	x29, x30, [sp, #-32]!
  416f20:	str	x19, [sp, #16]
  416f24:	mov	x29, sp
  416f28:	asr	x8, x1, #63
  416f2c:	eor	x11, x8, x0
  416f30:	asr	x9, x3, #63
  416f34:	eor	x10, x8, x1
  416f38:	subs	x0, x11, x8
  416f3c:	eor	x13, x9, x2
  416f40:	sbcs	x1, x10, x8
  416f44:	eor	x12, x9, x3
  416f48:	subs	x2, x13, x9
  416f4c:	sbcs	x3, x12, x9
  416f50:	mov	x4, xzr
  416f54:	eor	x19, x9, x8
  416f58:	bl	416f78 <_obstack_memory_used@@Base+0x7a4>
  416f5c:	eor	x9, x0, x19
  416f60:	eor	x8, x1, x19
  416f64:	subs	x0, x9, x19
  416f68:	sbcs	x1, x8, x19
  416f6c:	ldr	x19, [sp, #16]
  416f70:	ldp	x29, x30, [sp], #32
  416f74:	ret
  416f78:	cbz	x1, 416fa4 <_obstack_memory_used@@Base+0x7d0>
  416f7c:	cbz	x2, 416fbc <_obstack_memory_used@@Base+0x7e8>
  416f80:	cbz	x3, 416ff0 <_obstack_memory_used@@Base+0x81c>
  416f84:	clz	x8, x3
  416f88:	clz	x9, x1
  416f8c:	sub	w11, w8, w9
  416f90:	cmp	w11, #0x40
  416f94:	b.cc	41704c <_obstack_memory_used@@Base+0x878>  // b.lo, b.ul, b.last
  416f98:	cbz	x4, 4170f0 <_obstack_memory_used@@Base+0x91c>
  416f9c:	stp	x0, x1, [x4]
  416fa0:	b	4170f0 <_obstack_memory_used@@Base+0x91c>
  416fa4:	cbz	x3, 417030 <_obstack_memory_used@@Base+0x85c>
  416fa8:	cbz	x4, 4170f0 <_obstack_memory_used@@Base+0x91c>
  416fac:	mov	x1, xzr
  416fb0:	stp	x0, xzr, [x4]
  416fb4:	mov	x0, xzr
  416fb8:	ret
  416fbc:	cbz	x3, 417080 <_obstack_memory_used@@Base+0x8ac>
  416fc0:	cbz	x0, 4170c0 <_obstack_memory_used@@Base+0x8ec>
  416fc4:	sub	x8, x3, #0x1
  416fc8:	tst	x3, x8
  416fcc:	b.ne	4170d8 <_obstack_memory_used@@Base+0x904>  // b.any
  416fd0:	cbz	x4, 416fdc <_obstack_memory_used@@Base+0x808>
  416fd4:	and	x8, x8, x1
  416fd8:	stp	x0, x8, [x4]
  416fdc:	rbit	x8, x3
  416fe0:	clz	x8, x8
  416fe4:	lsr	x0, x1, x8
  416fe8:	mov	x1, xzr
  416fec:	ret
  416ff0:	sub	x8, x2, #0x1
  416ff4:	tst	x2, x8
  416ff8:	b.ne	417094 <_obstack_memory_used@@Base+0x8c0>  // b.any
  416ffc:	cbz	x4, 417008 <_obstack_memory_used@@Base+0x834>
  417000:	and	x8, x8, x0
  417004:	stp	x8, xzr, [x4]
  417008:	cmp	x2, #0x1
  41700c:	b.eq	4171d0 <_obstack_memory_used@@Base+0x9fc>  // b.none
  417010:	rbit	x8, x2
  417014:	clz	x8, x8
  417018:	neg	x9, x8
  41701c:	lsl	x9, x1, x9
  417020:	lsr	x1, x1, x8
  417024:	lsr	x8, x0, x8
  417028:	orr	x0, x9, x8
  41702c:	ret
  417030:	udiv	x8, x0, x2
  417034:	cbz	x4, 417040 <_obstack_memory_used@@Base+0x86c>
  417038:	msub	x9, x8, x2, x0
  41703c:	stp	x9, xzr, [x4]
  417040:	mov	x1, xzr
  417044:	mov	x0, x8
  417048:	ret
  41704c:	add	w9, w11, #0x1
  417050:	cmp	w9, #0x40
  417054:	b.eq	4170ac <_obstack_memory_used@@Base+0x8d8>  // b.none
  417058:	mov	w12, #0x3f                  	// #63
  41705c:	sub	w11, w12, w11
  417060:	lsr	x13, x0, x9
  417064:	lsl	x12, x1, x11
  417068:	mov	x8, xzr
  41706c:	lsr	x10, x1, x9
  417070:	orr	x1, x12, x13
  417074:	lsl	x0, x0, x11
  417078:	cbnz	w9, 417138 <_obstack_memory_used@@Base+0x964>
  41707c:	b	4171a4 <_obstack_memory_used@@Base+0x9d0>
  417080:	cbz	x4, 4170f0 <_obstack_memory_used@@Base+0x91c>
  417084:	mov	x0, xzr
  417088:	mov	x1, xzr
  41708c:	stp	xzr, xzr, [x4]
  417090:	ret
  417094:	clz	x8, x2
  417098:	clz	x9, x1
  41709c:	sub	w8, w8, w9
  4170a0:	add	w9, w8, #0x41
  4170a4:	cmp	w9, #0x40
  4170a8:	b.ne	4170fc <_obstack_memory_used@@Base+0x928>  // b.any
  4170ac:	mov	x8, xzr
  4170b0:	mov	x10, xzr
  4170b4:	mov	w9, #0x40                  	// #64
  4170b8:	cbnz	w9, 417138 <_obstack_memory_used@@Base+0x964>
  4170bc:	b	4171a4 <_obstack_memory_used@@Base+0x9d0>
  4170c0:	udiv	x0, x1, x3
  4170c4:	cbz	x4, 4170d0 <_obstack_memory_used@@Base+0x8fc>
  4170c8:	msub	x8, x0, x3, x1
  4170cc:	stp	xzr, x8, [x4]
  4170d0:	mov	x1, xzr
  4170d4:	ret
  4170d8:	clz	x8, x3
  4170dc:	clz	x9, x1
  4170e0:	sub	w10, w8, w9
  4170e4:	cmp	w10, #0x3f
  4170e8:	b.cc	417110 <_obstack_memory_used@@Base+0x93c>  // b.lo, b.ul, b.last
  4170ec:	cbnz	x4, 416f9c <_obstack_memory_used@@Base+0x7c8>
  4170f0:	mov	x0, xzr
  4170f4:	mov	x1, xzr
  4170f8:	ret
  4170fc:	cmp	w9, #0x3f
  417100:	b.hi	417184 <_obstack_memory_used@@Base+0x9b0>  // b.pmore
  417104:	mov	x8, xzr
  417108:	neg	w11, w9
  41710c:	b	417120 <_obstack_memory_used@@Base+0x94c>
  417110:	mov	w11, #0x3f                  	// #63
  417114:	mov	x8, xzr
  417118:	add	w9, w10, #0x1
  41711c:	sub	w11, w11, w10
  417120:	lsr	x12, x0, x9
  417124:	lsl	x0, x0, x11
  417128:	lsl	x11, x1, x11
  41712c:	lsr	x10, x1, x9
  417130:	orr	x1, x11, x12
  417134:	cbz	w9, 4171a4 <_obstack_memory_used@@Base+0x9d0>
  417138:	mov	w11, wzr
  41713c:	extr	x12, x1, x0, #63
  417140:	extr	x10, x10, x1, #63
  417144:	mov	w11, w11
  417148:	mvn	x13, x12
  41714c:	extr	x0, x0, x8, #63
  417150:	orr	x8, x11, x8, lsl #1
  417154:	mvn	x11, x10
  417158:	cmn	x13, x2
  41715c:	adcs	x11, x11, x3
  417160:	asr	x11, x11, #63
  417164:	and	x14, x11, x2
  417168:	and	x13, x11, x3
  41716c:	subs	x1, x12, x14
  417170:	sbcs	x10, x10, x13
  417174:	subs	w9, w9, #0x1
  417178:	and	w11, w11, #0x1
  41717c:	b.ne	41713c <_obstack_memory_used@@Base+0x968>  // b.any
  417180:	b	4171a8 <_obstack_memory_used@@Base+0x9d4>
  417184:	neg	w11, w9
  417188:	lsr	x12, x0, x9
  41718c:	lsl	x8, x0, x11
  417190:	lsl	x11, x1, x11
  417194:	mov	x10, xzr
  417198:	orr	x0, x11, x12
  41719c:	lsr	x1, x1, x9
  4171a0:	cbnz	w9, 417138 <_obstack_memory_used@@Base+0x964>
  4171a4:	mov	x11, xzr
  4171a8:	mov	x9, xzr
  4171ac:	lsl	x12, x0, #1
  4171b0:	lsr	x13, x8, #63
  4171b4:	lsl	x8, x8, #1
  4171b8:	cbz	x4, 4171c0 <_obstack_memory_used@@Base+0x9ec>
  4171bc:	stp	x1, x10, [x4]
  4171c0:	and	x8, x8, #0xfffffffffffffffe
  4171c4:	orr	x10, x13, x12
  4171c8:	orr	x0, x8, x11
  4171cc:	orr	x1, x10, x9
  4171d0:	ret
  4171d4:	nop
  4171d8:	stp	x29, x30, [sp, #-64]!
  4171dc:	mov	x29, sp
  4171e0:	stp	x19, x20, [sp, #16]
  4171e4:	adrp	x20, 42b000 <_obstack_memory_used@@Base+0x1482c>
  4171e8:	add	x20, x20, #0xdd8
  4171ec:	stp	x21, x22, [sp, #32]
  4171f0:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x1482c>
  4171f4:	add	x21, x21, #0xdd0
  4171f8:	sub	x20, x20, x21
  4171fc:	mov	w22, w0
  417200:	stp	x23, x24, [sp, #48]
  417204:	mov	x23, x1
  417208:	mov	x24, x2
  41720c:	bl	4024c0 <mbrtowc@plt-0x40>
  417210:	cmp	xzr, x20, asr #3
  417214:	b.eq	417240 <_obstack_memory_used@@Base+0xa6c>  // b.none
  417218:	asr	x20, x20, #3
  41721c:	mov	x19, #0x0                   	// #0
  417220:	ldr	x3, [x21, x19, lsl #3]
  417224:	mov	x2, x24
  417228:	add	x19, x19, #0x1
  41722c:	mov	x1, x23
  417230:	mov	w0, w22
  417234:	blr	x3
  417238:	cmp	x20, x19
  41723c:	b.ne	417220 <_obstack_memory_used@@Base+0xa4c>  // b.any
  417240:	ldp	x19, x20, [sp, #16]
  417244:	ldp	x21, x22, [sp, #32]
  417248:	ldp	x23, x24, [sp, #48]
  41724c:	ldp	x29, x30, [sp], #64
  417250:	ret
  417254:	nop
  417258:	ret
  41725c:	nop
  417260:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x1582c>
  417264:	mov	x1, #0x0                   	// #0
  417268:	ldr	x2, [x2, #872]
  41726c:	b	402620 <__cxa_atexit@plt>
  417270:	mov	x2, x1
  417274:	mov	x1, x0
  417278:	mov	w0, #0x0                   	// #0
  41727c:	b	402b60 <__xstat@plt>
  417280:	mov	x2, x1
  417284:	mov	w1, w0
  417288:	mov	w0, #0x0                   	// #0
  41728c:	b	402aa0 <__fxstat@plt>

Disassembly of section .fini:

0000000000417290 <.fini>:
  417290:	stp	x29, x30, [sp, #-16]!
  417294:	mov	x29, sp
  417298:	ldp	x29, x30, [sp], #16
  41729c:	ret
